/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

#include "gto_d1_kit/gto_d1.hpp"
#include <cmath>

namespace {
    static const double Pi = M_PI;
}

void eri_gradient_2211_1_ints(const double ae,
                              const double xA,
                              const double yA,
                              const double zA,
                              const double be,
                              const double xB,
                              const double yB,
                              const double zB,
                              const double ce,
                              const double xC,
                              const double yC,
                              const double zC,
                              const double de,
                              const double xD,
                              const double yD,
                              const double zD,
                              const double* const bs,
                              double* const g)
{
    const double xAB = xA - xB;
    const double yAB = yA - yB;
    const double zAB = zA - zB;
    const double xCD = xC - xD;
    const double yCD = yC - yD;
    const double zCD = zC - zD;
    const double p = ae + be;
    const double q = ce + de;
    const double xP = (ae * xA + be * xB) / p;
    const double yP = (ae * yA + be * yB) / p;
    const double zP = (ae * zA + be * zB) / p;
    const double xQ = (ce * xC + de * xD) / q;
    const double yQ = (ce * yC + de * yD) / q;
    const double zQ = (ce * zC + de * zD) / q;
    const double muab = ae * be / p;
    const double mucd = ce * de / q;
    const double rAB2 = xAB * xAB + yAB * yAB + zAB * zAB;
    const double rCD2 = xCD * xCD + yCD * yCD + zCD * zCD;
    const double kab = std::exp(-muab * rAB2);
    const double kcd = std::exp(-mucd * rCD2);
    const double C53657 = 2 * q;
    const double C55254 = de * zCD;
    const double C55253 = be * zAB;
    const double C55246 = de * yCD;
    const double C55245 = be * yAB;
    const double C55242 = de * xCD;
    const double C55241 = be * xAB;
    const double C55390 = p + q;
    const double C56246 = p * q;
    const double C56245 = std::pow(Pi, 2.5);
    const double C56240 = zP - zQ;
    const double C56238 = yP - yQ;
    const double C56235 = xP - xQ;
    const double C56234 = 2 * p;
    const double C55355 = C55253 + C55254;
    const double C55352 = C55245 + C55246;
    const double C55351 = C55241 + C55242;
    const double C56247 = std::sqrt(C55390);
    const double C56267 = C56245 * kab;
    const double C56262 = C56240 * q;
    const double C56260 = C56238 * q;
    const double C56257 = C56235 * q;
    const double C56268 = C56246 * C56247;
    const double C56285 = C56267 * kcd;
    const double C44959 = (2. * C56285 * bs[0]) / C56268;
    const double C44960 = (2. * C56285 * bs[1]) / C56268;
    const double C46176 = (2. * C56285 * bs[2]) / C56268;
    const double C46808 = (2. * C56285 * bs[3]) / C56268;
    const double C47125 = (2. * C56285 * bs[4]) / C56268;
    const double C47289 = (2. * C56285 * bs[5]) / C56268;
    const double C47386 = (2. * C56285 * bs[6]) / C56268;
    const double C55347 = C44959 / C53657;
    const double C56236 = C44960 * q;
    const double C33267 = -((C44959 * C55241) / p + (C44960 * C56257) / C55390);
    const double C34162 = -((C44959 * C55245) / p + (C44960 * C56260) / C55390);
    const double C34177 = -((C44959 * C55253) / p + (C44960 * C56262) / C55390);
    const double C56244 = C46176 * q;
    const double C44927 = -((C44960 * C55241) / p + (C46176 * C56257) / C55390);
    const double C45106 = -((C44960 * C55245) / p + (C46176 * C56260) / C55390);
    const double C45216 = -((C44960 * C55253) / p + (C46176 * C56262) / C55390);
    const double C56253 = C46808 * q;
    const double C46160 = -((C46176 * C55241) / p + (C46808 * C56257) / C55390);
    const double C48724 = -((C46176 * C55245) / p + (C46808 * C56260) / C55390);
    const double C48943 = -((C46176 * C55253) / p + (C46808 * C56262) / C55390);
    const double C56255 = C47125 * q;
    const double C46791 = -((C46808 * C55241) / p + (C47125 * C56257) / C55390);
    const double C49360 = -((C46808 * C55245) / p + (C47125 * C56260) / C55390);
    const double C51905 = -((C46808 * C55253) / p + (C47125 * C56262) / C55390);
    const double C56256 = C47289 * q;
    const double C47148 = -((C47125 * C55241) / p + (C47289 * C56257) / C55390);
    const double C49673 = -((C47125 * C55245) / p + (C47289 * C56260) / C55390);
    const double C52188 = -((C47125 * C55253) / p + (C47289 * C56262) / C55390);
    const double C47333 = -((C47289 * C55241) / p + (C47386 * C56257) / C55390);
    const double C49844 = -((C47289 * C55245) / p + (C47386 * C56260) / C55390);
    const double C52343 = -((C47289 * C55253) / p + (C47386 * C56262) / C55390);
    const double C56258 = C56236 / C55390;
    const double C55299 = C33267 / C53657;
    const double C55297 = C34162 / C53657;
    const double C55308 = C34177 / C53657;
    const double C56266 = C56244 / C55390;
    const double C32756 = -((C34162 * C55241) / p + (C45106 * C56257) / C55390);
    const double C33011 = -((C34177 * C55241) / p + (C45216 * C56257) / C55390);
    const double C33139 = -((C34177 * C55245) / p + (C45216 * C56260) / C55390);
    const double C56274 = C56253 / C55390;
    const double C45278 = -((C45216 * C55245) / p + (C48943 * C56260) / C55390);
    const double C56276 = C56255 / C55390;
    const double C56277 = C56256 / C55390;
    const double C56278 = C44959 - C56258;
    const double C56284 = C44960 - C56266;
    const double C55348 = C32756 * p;
    const double C55296 = C32756 / C53657;
    const double C55268 = C32756 / q;
    const double C55349 = C33011 * p;
    const double C55307 = C33011 / C53657;
    const double C55291 = C33011 / q;
    const double C55350 = C33139 * p;
    const double C55322 = C33139 / q;
    const double C55314 = C33139 / C53657;
    const double C56291 = C46176 - C56274;
    const double C32883 = -((C33139 * C55241) / p + (C45278 * C56257) / C55390);
    const double C56293 = C46808 - C56276;
    const double C56294 = C47125 - C56277;
    const double C56295 = C56278 / C56234;
    const double C56300 = C56284 / C56234;
    const double C53698 = -(C33267 * C55352 + C55348) / q;
    const double C54103 = -(C34162 * C55351 + C55348) / q;
    const double C53715 = -(C33267 * C55355 + C55349) / q;
    const double C54248 = -(C34177 * C55351 + C55349) / q;
    const double C53909 = -(C34162 * C55355 + C55350) / q;
    const double C54281 = -(C34177 * C55352 + C55350) / q;
    const double C56304 = C56291 / C56234;
    const double C55337 = C32883 / q;
    const double C55313 = C32883 / C53657;
    const double C55303 = C32883 * p;
    const double C56305 = C56293 / C56234;
    const double C56306 = C56294 / C56234;
    const double C29229 =
        C56295 - ((C33267 * C55241) / p + (C44927 * C56257) / C55390);
    const double C30536 =
        C56295 - ((C34162 * C55245) / p + (C45106 * C56260) / C55390);
    const double C31732 =
        C56295 - ((C34177 * C55253) / p + (C45216 * C56262) / C55390);
    const double C44911 =
        C56300 - ((C44927 * C55241) / p + (C46160 * C56257) / C55390);
    const double C45076 =
        C56300 - ((C45106 * C55245) / p + (C48724 * C56260) / C55390);
    const double C45186 =
        C56300 - ((C45216 * C55253) / p + (C48943 * C56262) / C55390);
    const double C55301 = C53715 / C53657;
    const double C55298 = C53909 / C53657;
    const double C55309 = C54281 / C53657;
    const double C46143 =
        C56304 - ((C46160 * C55241) / p + (C46791 * C56257) / C55390);
    const double C46214 =
        C56304 - ((C48724 * C55245) / p + (C49360 * C56260) / C55390);
    const double C46333 =
        C56304 - ((C48943 * C55253) / p + (C51905 * C56262) / C55390);
    const double C10323 = -(C32756 * C55355 + C55303) / q;
    const double C10662 = -(C33011 * C55352 + C55303) / q;
    const double C11064 = -(C33139 * C55351 + C55303) / q;
    const double C46830 =
        C56305 - ((C46791 * C55241) / p + (C47148 * C56257) / C55390);
    const double C46890 =
        C56305 - ((C49360 * C55245) / p + (C49673 * C56260) / C55390);
    const double C46934 =
        C56305 - ((C51905 * C55253) / p + (C52188 * C56262) / C55390);
    const double C47222 =
        C56306 - ((C47148 * C55241) / p + (C47333 * C56257) / C55390);
    const double C49733 =
        C56306 - ((C49673 * C55245) / p + (C49844 * C56260) / C55390);
    const double C49749 =
        C56306 - ((C52188 * C55253) / p + (C52343 * C56262) / C55390);
    const double C55244 = C29229 / C53657;
    const double C53665 = C55347 - (C33267 * C55351) / q - (C29229 * p) / q;
    const double C55260 = C30536 / C53657;
    const double C53892 = C55347 - (C34162 * C55352) / q - (C30536 * p) / q;
    const double C55279 = C31732 / C53657;
    const double C54086 = C55347 - (C34177 * C55355) / q - (C31732 * p) / q;
    const double C29214 = (C33267 - (C44927 * q) / C55390) / p -
                          ((C29229 * C55241) / p + (C44911 * C56257) / C55390);
    const double C29602 = -((C29229 * C55245) / p + (C44911 * C56260) / C55390);
    const double C29872 = -((C29229 * C55253) / p + (C44911 * C56262) / C55390);
    const double C56237 = C45076 * q;
    const double C30521 = -((C30536 * C55241) / p + (C45076 * C56257) / C55390);
    const double C30801 = (C34162 - (C45106 * q) / C55390) / p -
                          ((C30536 * C55245) / p + (C45076 * C56260) / C55390);
    const double C31069 = -((C30536 * C55253) / p + (C45076 * C56262) / C55390);
    const double C56239 = C45186 * q;
    const double C31717 = -((C31732 * C55241) / p + (C45186 * C56257) / C55390);
    const double C31962 = -((C31732 * C55245) / p + (C45186 * C56260) / C55390);
    const double C32123 = (C34177 - (C45216 * q) / C55390) / p -
                          ((C31732 * C55253) / p + (C45186 * C56262) / C55390);
    const double C44891 = (C44927 - (C46160 * q) / C55390) / p -
                          ((C44911 * C55241) / p + (C46143 * C56257) / C55390);
    const double C47688 = -((C44911 * C55253) / p + (C46143 * C56262) / C55390);
    const double C56248 = C46214 * q;
    const double C45059 = -((C45076 * C55241) / p + (C46214 * C56257) / C55390);
    const double C45308 = (C45106 - (C48724 * q) / C55390) / p -
                          ((C45076 * C55245) / p + (C46214 * C56260) / C55390);
    const double C45351 = -((C45076 * C55253) / p + (C46214 * C56262) / C55390);
    const double C56249 = C46333 * q;
    const double C45169 = -((C45186 * C55241) / p + (C46333 * C56257) / C55390);
    const double C45571 = -((C45186 * C55245) / p + (C46333 * C56260) / C55390);
    const double C45586 = (C45216 - (C48943 * q) / C55390) / p -
                          ((C45186 * C55253) / p + (C46333 * C56262) / C55390);
    const double C55272 = C10323 / q;
    const double C46198 = (C46160 - (C46791 * q) / C55390) / p -
                          ((C46143 * C55241) / p + (C46830 * C56257) / C55390);
    const double C46273 = (C48724 - (C49360 * q) / C55390) / p -
                          ((C46214 * C55245) / p + (C46890 * C56260) / C55390);
    const double C46303 = -((C46214 * C55241) / p + (C46890 * C56257) / C55390);
    const double C56254 = C46934 * q;
    const double C46392 = -((C46333 * C55241) / p + (C46934 * C56257) / C55390);
    const double C46408 = (C48943 - (C51905 * q) / C55390) / p -
                          ((C46333 * C55253) / p + (C46934 * C56262) / C55390);
    const double C49000 = -((C46333 * C55245) / p + (C46934 * C56260) / C55390);
    const double C46978 = (C46791 - (C47148 * q) / C55390) / p -
                          ((C46830 * C55241) / p + (C47222 * C56257) / C55390);
    const double C46994 = (C49360 - (C49673 * q) / C55390) / p -
                          ((C46890 * C55245) / p + (C49733 * C56260) / C55390);
    const double C47067 = (C51905 - (C52188 * q) / C55390) / p -
                          ((C46934 * C55253) / p + (C49749 * C56262) / C55390);
    const double C49535 = -((C46934 * C55245) / p + (C49749 * C56260) / C55390);
    const double C55310 = C54086 / C53657;
    const double C55243 = C29214 / C53657;
    const double C7972 = C33267 / q - (C29229 * C55351) / q - (C29214 * p) / q;
    const double C55295 = C29602 / C53657;
    const double C55248 = C29602 * p;
    const double C55306 = C29872 / C53657;
    const double C55256 = C29872 * p;
    const double C56259 = C56237 / C55390;
    const double C55262 = C30521 * p;
    const double C55259 = C30521 / C53657;
    const double C55316 = C30801 / C53657;
    const double C8786 = C34162 / q - (C30536 * C55352) / q - (C30801 * p) / q;
    const double C55326 = C31069 / C53657;
    const double C55275 = C31069 * p;
    const double C56261 = C56239 / C55390;
    const double C55281 = C31717 * p;
    const double C55278 = C31717 / C53657;
    const double C55319 = C31962 / C53657;
    const double C55287 = C31962 * p;
    const double C55327 = C32123 / C53657;
    const double C9593 = C34177 / q - (C31732 * C55355) / q - (C32123 * p) / q;
    const double C56241 = C44891 * q;
    const double C29198 = (3 * (C29229 - (C44911 * q) / C55390)) / C56234 -
                          ((C29214 * C55241) / p + (C44891 * C56257) / C55390);
    const double C30109 = -((C29214 * C55245) / p + (C44891 * C56260) / C55390);
    const double C30242 = -((C29214 * C55253) / p + (C44891 * C56262) / C55390);
    const double C30375 = -((C29872 * C55245) / p + (C47688 * C56260) / C55390);
    const double C56269 = C56248 / C55390;
    const double C56242 = C45308 * q;
    const double C31307 = -((C30801 * C55241) / p + (C45308 * C56257) / C55390);
    const double C31572 = -((C30801 * C55253) / p + (C45308 * C56262) / C55390);
    const double C31440 = -((C31069 * C55241) / p + (C45351 * C56257) / C55390);
    const double C56270 = C56249 / C55390;
    const double C32359 = -((C31962 * C55241) / p + (C45571 * C56257) / C55390);
    const double C56243 = C45586 * q;
    const double C32492 = -((C32123 * C55241) / p + (C45586 * C56257) / C55390);
    const double C32625 = -((C32123 * C55245) / p + (C45586 * C56260) / C55390);
    const double C56250 = C46198 * q;
    const double C44943 = (3 * (C44911 - (C46143 * q) / C55390)) / C56234 -
                          ((C44891 * C55241) / p + (C46198 * C56257) / C55390);
    const double C47626 = -((C44891 * C55245) / p + (C46198 * C56260) / C55390);
    const double C47796 = -((C44891 * C55253) / p + (C46198 * C56262) / C55390);
    const double C56251 = C46273 * q;
    const double C45122 = -((C45308 * C55241) / p + (C46273 * C56257) / C55390);
    const double C45542 = -((C45308 * C55253) / p + (C46273 * C56262) / C55390);
    const double C56275 = C56254 / C55390;
    const double C56252 = C46408 * q;
    const double C45247 = -((C45586 * C55241) / p + (C46408 * C56257) / C55390);
    const double C45701 = -((C45586 * C55245) / p + (C46408 * C56260) / C55390);
    const double C46551 = (3 * (C46143 - (C46830 * q) / C55390)) / C56234 -
                          ((C46198 * C55241) / p + (C46978 * C56257) / C55390);
    const double C49116 = -((C46198 * C55245) / p + (C46978 * C56260) / C55390);
    const double C51648 = -((C46198 * C55253) / p + (C46978 * C56262) / C55390);
    const double C46595 = -((C46273 * C55241) / p + (C46994 * C56257) / C55390);
    const double C46626 = (3 * (C46214 - (C46890 * q) / C55390)) / C56234 -
                          ((C46273 * C55245) / p + (C46994 * C56260) / C55390);
    const double C51722 = -((C46273 * C55253) / p + (C46994 * C56262) / C55390);
    const double C46673 = -((C46408 * C55241) / p + (C47067 * C56257) / C55390);
    const double C49250 = -((C46408 * C55245) / p + (C47067 * C56260) / C55390);
    const double C8035 = -(C29229 * C55352 + C55248) / q;
    const double C10209 = C55297 - (C32756 * C55351) / q - C55248 / q;
    const double C8098 = -(C29229 * C55355 + C55256) / q;
    const double C10605 = C55308 - (C33011 * C55351) / q - C55256 / q;
    const double C56279 = C30536 - C56259;
    const double C8726 = -(C30536 * C55351 + C55262) / q;
    const double C10266 = C55299 - (C32756 * C55352) / q - C55262 / q;
    const double C8846 = -(C30536 * C55355 + C55275) / q;
    const double C11121 = C55308 - (C33139 * C55352) / q - C55275 / q;
    const double C56280 = C31732 - C56261;
    const double C9473 = -(C31732 * C55351 + C55281) / q;
    const double C10719 = C55299 - (C33011 * C55355) / q - C55281 / q;
    const double C9533 = -(C31732 * C55352 + C55287) / q;
    const double C11178 = C55297 - (C33139 * C55355) / q - C55287 / q;
    const double C55283 = C9593 / C53657;
    const double C56263 = C56241 / C55390;
    const double C7961 =
        (3 * C29229) / C53657 - (C29214 * C55351) / q - (C29198 * p) / q;
    const double C55247 = C30109 * p;
    const double C55255 = C30242 * p;
    const double C55302 = C30375 * p;
    const double C56286 = C45076 - C56269;
    const double C56264 = C56242 / C55390;
    const double C55269 = C31307 * p;
    const double C55317 = C31572 * p;
    const double C55274 = C31440 * p;
    const double C56287 = C45186 - C56270;
    const double C55286 = C32359 * p;
    const double C56265 = C56243 / C55390;
    const double C55292 = C32492 * p;
    const double C55323 = C32625 * p;
    const double C56271 = C56250 / C55390;
    const double C33565 = -((C29198 * C55245) / p + (C44943 * C56260) / C55390);
    const double C33594 = -((C29198 * C55253) / p + (C44943 * C56262) / C55390);
    const double C33637 = -((C30242 * C55245) / p + (C47796 * C56260) / C55390);
    const double C56272 = C56251 / C55390;
    const double C33930 = -((C31572 * C55241) / p + (C45542 * C56257) / C55390);
    const double C56292 = C46333 - C56275;
    const double C56273 = C56252 / C55390;
    const double C34133 = -((C32625 * C55241) / p + (C45701 * C56257) / C55390);
    const double C48289 = -((C44943 * C55245) / p + (C46551 * C56260) / C55390);
    const double C48305 = -((C44943 * C55253) / p + (C46551 * C56262) / C55390);
    const double C55300 = C8098 / C53657;
    const double C29585 =
        C56279 / C56234 - ((C30521 * C55241) / p + (C45059 * C56257) / C55390);
    const double C30785 = (3 * C56279) / C56234 -
                          ((C30801 * C55245) / p + (C45308 * C56260) / C55390);
    const double C55270 = C10266 / q;
    const double C55265 = C8846 / C53657;
    const double C56296 = C56280 / C56234;
    const double C32107 = (3 * C56280) / C56234 -
                          ((C32123 * C55253) / p + (C45586 * C56262) / C55390);
    const double C55293 = C10719 / q;
    const double C55282 = C9533 / C53657;
    const double C55324 = C11178 / q;
    const double C56281 = C29214 - C56263;
    const double C4810 = C7961 + xAB * C7972;
    const double C7951 =
        C53665 / q - (C7972 * C55351) / q + C55244 - (C7961 * p) / q;
    const double C8024 = -(C29214 * C55352 + C55247) / q;
    const double C10200 = C55268 - (C29602 * C55351) / q - C55247 / q;
    const double C8087 = -(C29214 * C55355 + C55255) / q;
    const double C10596 = C55291 - (C29872 * C55351) / q - C55255 / q;
    const double C10314 = -(C29602 * C55355 + C55302) / q;
    const double C10653 = -(C29872 * C55352 + C55302) / q;
    const double C11055 = C55314 - (C32883 * C55351) / q - C55302 / q;
    const double C45395 = (3 * C56286) / C56234 -
                          ((C45308 * C55245) / p + (C46273 * C56260) / C55390);
    const double C50167 =
        C56286 / C56234 - ((C45059 * C55241) / p + (C46303 * C56257) / C55390);
    const double C56282 = C30801 - C56264;
    const double C8776 = C55268 - (C30521 * C55352) / q - C55269 / q;
    const double C17805 = -(C30801 * C55351 + C55269) / q;
    const double C17919 = -(C30801 * C55355 + C55317) / q;
    const double C20131 = C55322 - (C31069 * C55352) / q - C55317 / q;
    const double C8836 = -(C30521 * C55355 + C55274) / q;
    const double C11112 = C55307 - (C32883 * C55352) / q - C55274 / q;
    const double C20080 = -(C31069 * C55351 + C55274) / q;
    const double C56301 = C56287 / C56234;
    const double C45657 = (3 * C56287) / C56234 -
                          ((C45586 * C55253) / p + (C46408 * C56262) / C55390);
    const double C9523 = -(C31717 * C55352 + C55286) / q;
    const double C11169 = C55296 - (C32883 * C55355) / q - C55286 / q;
    const double C18542 = -(C31962 * C55351 + C55286) / q;
    const double C56283 = C32123 - C56265;
    const double C9583 = C55291 - (C31717 * C55355) / q - C55292 / q;
    const double C27552 = -(C32123 * C55351 + C55292) / q;
    const double C18650 = C55322 - (C31962 * C55355) / q - C55323 / q;
    const double C27609 = -(C32123 * C55352 + C55323) / q;
    const double C56288 = C44891 - C56271;
    const double C55328 = C33565 * p;
    const double C55329 = C33594 * p;
    const double C55336 = C33637 * p;
    const double C56289 = C45308 - C56272;
    const double C55343 = C33930 * p;
    const double C46642 =
        C56292 / C56234 - ((C49000 * C55245) / p + (C49535 * C56260) / C55390);
    const double C46689 = (3 * C56292) / C56234 -
                          ((C46408 * C55253) / p + (C47067 * C56262) / C55390);
    const double C56290 = C45586 - C56273;
    const double C55346 = C34133 * p;
    const double C55261 = C29585 * p;
    const double C17862 =
        (3 * C30536) / C53657 - (C30801 * C55352) / q - (C30785 * p) / q;
    const double C29855 =
        C56296 - ((C31717 * C55241) / p + (C45169 * C56257) / C55390);
    const double C31053 =
        C56296 - ((C31962 * C55245) / p + (C45571 * C56260) / C55390);
    const double C27666 =
        (3 * C31732) / C53657 - (C32123 * C55355) / q - (C32107 * p) / q;
    const double C56297 = C56281 / C56234;
    const double C33252 =
        (2 * C56281) / p - ((C29198 * C55241) / p + (C44943 * C56257) / C55390);
    const double C4843 = C8024 + xAB * C8035;
    const double C7993 = C53698 / q - (C8035 * C55351) / q - (C8024 * p) / q;
    const double C5088 = C10200 + yAB * C7972;
    const double C6430 = C10200 + xAB * C10209;
    const double C10190 =
        C54103 / C53657 - (C10209 * C55351) / q + C55296 - (C10200 * p) / q;
    const double C4876 = C8087 + xAB * C8098;
    const double C8014 = C53715 / q - (C8098 * C55351) / q - (C8087 * p) / q;
    const double C5178 = C10596 + zAB * C7972;
    const double C6934 = C10596 + xAB * C10605;
    const double C10586 =
        C54248 / C53657 - (C10605 * C55351) / q + C55307 - (C10596 * p) / q;
    const double C55252 = C10314 * p;
    const double C5148 = C10314 + yAB * C8098;
    const double C6496 = C10314 + xAB * C10323;
    const double C5208 = C10653 + zAB * C8035;
    const double C6967 = C10653 + xAB * C10662;
    const double C10624 = C55309 - (C10662 * C55351) / q - (C10653 * p) / q;
    const double C6779 = C11055 + zAB * C10209;
    const double C7203 = C11055 + yAB * C10605;
    const double C7447 = C11055 + xAB * C11064;
    const double C11045 = C55314 - (C11064 * C55351) / q - (C11055 * p) / q;
    const double C33693 = -((C30785 * C55241) / p + (C45395 * C56257) / C55390);
    const double C38915 = -((C30785 * C55253) / p + (C45395 * C56262) / C55390);
    const double C45842 = -((C45395 * C55241) / p + (C46626 * C56257) / C55390);
    const double C45965 = -((C45395 * C55253) / p + (C46626 * C56262) / C55390);
    const double C33901 = -((C29585 * C55253) / p + (C50167 * C56262) / C55390);
    const double C56298 = C56282 / C56234;
    const double C38710 =
        (2 * C56282) / p - ((C30785 * C55245) / p + (C45395 * C56260) / C55390);
    const double C55264 = C8776 * p;
    const double C5383 = C8776 + xAB * C8786;
    const double C6725 = C8776 + yAB * C10266;
    const double C5628 = C17805 + yAB * C8726;
    const double C5688 = C17919 + yAB * C8846;
    const double C8826 = C53909 / q - (C8846 * C55352) / q - (C17919 * p) / q;
    const double C5748 = C20131 + zAB * C8786;
    const double C7742 = C20131 + yAB * C11121;
    const double C11140 =
        C55309 - (C11121 * C55352) / q + C55314 - (C20131 * p) / q;
    const double C55267 = C8836 * p;
    const double C5416 = C8836 + xAB * C8846;
    const double C6752 = C8836 + yAB * C10323;
    const double C55312 = C11112 * p;
    const double C6806 = C11112 + zAB * C10266;
    const double C7233 = C11112 + yAB * C10662;
    const double C7480 = C11112 + xAB * C11121;
    const double C5718 = C20080 + zAB * C8726;
    const double C7715 = C20080 + yAB * C11064;
    const double C45468 =
        C56301 - ((C45571 * C55245) / p + (C49000 * C56260) / C55390);
    const double C47764 =
        C56301 - ((C45169 * C55241) / p + (C46392 * C56257) / C55390);
    const double C33972 = -((C32107 * C55241) / p + (C45657 * C56257) / C55390);
    const double C38987 = -((C32107 * C55245) / p + (C45657 * C56260) / C55390);
    const double C5923 = C9523 + xAB * C9533;
    const double C7319 = C9523 + zAB * C10662;
    const double C9493 = -(C9533 * C55351 + C9523 * p) / q;
    const double C55305 = C11169 * p;
    const double C6833 = C11169 + zAB * C10323;
    const double C7263 = C11169 + yAB * C10719;
    const double C7513 = C11169 + xAB * C11178;
    const double C6168 = C18542 + yAB * C9473;
    const double C7796 = C18542 + zAB * C11064;
    const double C56299 = C56283 / C56234;
    const double C43980 =
        (2 * C56283) / p - ((C32107 * C55253) / p + (C45657 * C56262) / C55390);
    const double C55285 = C9583 * p;
    const double C5956 = C9583 + xAB * C9593;
    const double C7346 = C9583 + zAB * C10719;
    const double C6258 = C27552 + zAB * C9473;
    const double C55290 = C18650 * p;
    const double C6228 = C18650 + yAB * C9593;
    const double C7850 = C18650 + zAB * C11178;
    const double C6288 = C27609 + zAB * C9533;
    const double C56307 = C56288 / C56234;
    const double C45716 =
        (2 * C56288) / p - ((C44943 * C55241) / p + (C46551 * C56257) / C55390);
    const double C29245 = -(C29198 * C55352 + C55328) / q;
    const double C30093 =
        (3 * C29602) / C53657 - (C30109 * C55351) / q - C55328 / q;
    const double C29290 = -(C29198 * C55355 + C55329) / q;
    const double C30226 =
        (3 * C29872) / C53657 - (C30242 * C55351) / q - C55329 / q;
    const double C30139 = -(C30109 * C55355 + C55336) / q;
    const double C30257 = -(C30242 * C55352 + C55336) / q;
    const double C30359 = C55337 - (C30375 * C55351) / q - C55336 / q;
    const double C56302 = C56289 / C56234;
    const double C45949 =
        (2 * C56289) / p - ((C45395 * C55245) / p + (C46626 * C56260) / C55390);
    const double C31337 = -(C31307 * C55355 + C55343) / q;
    const double C31455 = C55337 - (C31440 * C55352) / q - C55343 / q;
    const double C31556 = -(C31572 * C55351 + C55343) / q;
    const double C45933 = -((C45657 * C55241) / p + (C46689 * C56257) / C55390);
    const double C46084 = -((C45657 * C55245) / p + (C46689 * C56260) / C55390);
    const double C56303 = C56290 / C56234;
    const double C46099 =
        (2 * C56290) / p - ((C45657 * C55253) / p + (C46689 * C56262) / C55390);
    const double C32389 = C55337 - (C32359 * C55355) / q - C55346 / q;
    const double C32507 = -(C32492 * C55352 + C55346) / q;
    const double C32609 = -(C32625 * C55351 + C55346) / q;
    const double C55358 = C55261 / q;
    const double C5658 = C17862 + yAB * C8786;
    const double C8806 =
        C53892 / q - (C8786 * C55352) / q + C55260 - (C17862 * p) / q;
    const double C55280 = C29855 * p;
    const double C55320 = C31053 * p;
    const double C6318 = C27666 + zAB * C9593;
    const double C9613 =
        C54086 / q - (C9593 * C55355) / q + C55279 - (C27666 * p) / q;
    const double C33386 =
        C56297 - ((C30109 * C55245) / p + (C47626 * C56260) / C55390);
    const double C33476 =
        C56297 - ((C30242 * C55253) / p + (C47796 * C56262) / C55390);
    const double C29149 =
        (2 * C29214) / q - (C29198 * C55351) / q - (C33252 * p) / q;
    const double C8077 = -(C8098 * C55352 + C55252) / q;
    const double C10247 = C55298 - (C10323 * C55351) / q - C55252 / q;
    const double C55338 = C33693 * p;
    const double C55339 = C38915 * p;
    const double C55332 = C33901 * p;
    const double C33872 =
        C56298 - ((C31307 * C55241) / p + (C45122 * C56257) / C55390);
    const double C38800 =
        C56298 - ((C31572 * C55253) / p + (C45542 * C56262) / C55390);
    const double C30816 =
        (2 * C30801) / q - (C30785 * C55352) / q - (C38710 * p) / q;
    const double C8746 = -(C8786 * C55351 + C55264) / q;
    const double C10285 =
        C53698 / C53657 - (C10266 * C55352) / q + C55296 - C55264 / q;
    const double C8766 = -(C8846 * C55351 + C55267) / q;
    const double C10304 = C55301 - (C10323 * C55352) / q - C55267 / q;
    const double C10681 = C55307 - (C10662 * C55352) / q - C55312 / q;
    const double C11083 = -(C11121 * C55351 + C55312) / q;
    const double C33783 = -((C31053 * C55241) / p + (C45468 * C56257) / C55390);
    const double C45872 = -((C45468 * C55241) / p + (C46642 * C56257) / C55390);
    const double C34061 = -((C29855 * C55245) / p + (C47764 * C56260) / C55390);
    const double C55344 = C33972 * p;
    const double C55345 = C38987 * p;
    const double C10342 = C55296 - (C10323 * C55355) / q - C55305 / q;
    const double C10700 = -(C10719 * C55352 + C55305) / q;
    const double C11102 = -(C11178 * C55351 + C55305) / q;
    const double C34090 =
        C56299 - ((C32492 * C55241) / p + (C45247 * C56257) / C55390);
    const double C39116 =
        C56299 - ((C32625 * C55245) / p + (C45701 * C56260) / C55390);
    const double C32168 =
        (2 * C32123) / q - (C32107 * C55355) / q - (C43980 * p) / q;
    const double C9513 = -(C9593 * C55351 + C55285) / q;
    const double C10738 = C55301 - (C10719 * C55355) / q + C55307 - C55285 / q;
    const double C9573 = -(C9593 * C55352 + C55290) / q;
    const double C11197 = C55298 - (C11178 * C55355) / q + C55314 - C55290 / q;
    const double C48409 =
        C56307 - ((C47796 * C55253) / p + (C51648 * C56262) / C55390);
    const double C50840 =
        C56307 - ((C47626 * C55245) / p + (C49116 * C56260) / C55390);
    const double C7982 =
        (3 * C8035) / C53657 - (C8024 * C55351) / q - (C29245 * p) / q;
    const double C10181 =
        C10209 / q - (C10200 * C55351) / q + C55295 - (C30093 * p) / q;
    const double C8003 =
        (3 * C8098) / C53657 - (C8087 * C55351) / q - (C29290 * p) / q;
    const double C10577 =
        C10605 / q - (C10596 * C55351) / q + C55306 - (C30226 * p) / q;
    const double C55251 = C30139 * p;
    const double C10615 = C10662 / q - (C10653 * C55351) / q - (C30257 * p) / q;
    const double C11036 =
        C11064 / C53657 - (C11055 * C55351) / q + C55313 - (C30359 * p) / q;
    const double C45811 =
        C56302 - ((C45122 * C55241) / p + (C46595 * C56257) / C55390);
    const double C46023 =
        C56302 - ((C45542 * C55253) / p + (C51722 * C56262) / C55390);
    const double C55273 = C31337 * p;
    const double C55315 = C31455 * p;
    const double C45903 =
        C56303 - ((C45247 * C55241) / p + (C46673 * C56257) / C55390);
    const double C46039 =
        C56303 - ((C45701 * C55245) / p + (C49250 * C56260) / C55390);
    const double C55289 = C32389 * p;
    const double C27571 = -(C27609 * C55351 + C32507 * p) / q;
    const double C8716 = C55260 - (C30521 * C55351) / q - C55358;
    const double C10257 = C55244 - (C29602 * C55352) / q - C55358;
    const double C55363 = C55280 / q;
    const double C55368 = C55320 / q;
    const double C55330 = C33386 * p;
    const double C55333 = C33476 * p;
    const double C7940 =
        (3 * C7972) / C53657 - (C7961 * C55351) / q + C55243 - (C29149 * p) / q;
    const double C30754 = -(C30785 * C55351 + C55338) / q;
    const double C31322 =
        (3 * C30521) / C53657 - (C31307 * C55352) / q - C55338 / q;
    const double C30846 = -(C30785 * C55355 + C55339) / q;
    const double C31587 =
        (3 * C31069) / C53657 - (C31572 * C55352) / q - C55339 / q;
    const double C55374 = C55332 / q;
    const double C29648 = -(C29585 * C55355 + C55332) / q;
    const double C55331 = C33872 * p;
    const double C55341 = C38800 * p;
    const double C17881 = (3 * C8786) / C53657 - (C17862 * C55352) / q +
                          C55316 - (C30816 * p) / q;
    const double C55340 = C33783 * p;
    const double C55334 = C34061 * p;
    const double C32076 = -(C32107 * C55351 + C55344) / q;
    const double C32523 =
        (3 * C31717) / C53657 - (C32492 * C55355) / q - C55344 / q;
    const double C32138 = -(C32107 * C55352 + C55345) / q;
    const double C32655 =
        (3 * C31962) / C53657 - (C32625 * C55355) / q - C55345 / q;
    const double C55335 = C34090 * p;
    const double C55342 = C39116 * p;
    const double C27685 = (3 * C9593) / C53657 - (C27666 * C55355) / q +
                          C55327 - (C32168 * p) / q;
    const double C4821 = C7982 + xAB * C7993;
    const double C5078 = C10181 + yAB * C7951;
    const double C6419 = C10181 + xAB * C10190;
    const double C4832 = C8003 + xAB * C8014;
    const double C5168 = C10577 + zAB * C7951;
    const double C6923 = C10577 + xAB * C10586;
    const double C8066 = -(C8087 * C55352 + C55251) / q;
    const double C10238 = C55272 - (C10314 * C55351) / q - C55251 / q;
    const double C5188 = C10615 + zAB * C7993;
    const double C6945 = C10615 + xAB * C10624;
    const double C6770 = C11036 + zAB * C10190;
    const double C7193 = C11036 + yAB * C10586;
    const double C7436 = C11036 + xAB * C11045;
    const double C8816 = C55272 - (C8836 * C55352) / q - C55273 / q;
    const double C17843 = -(C17919 * C55351 + C55273) / q;
    const double C11131 =
        C10662 / C53657 - (C11112 * C55352) / q + C55313 - C55315 / q;
    const double C20097 = -(C20131 * C55351 + C55315) / q;
    const double C9563 = -(C9583 * C55352 + C55289) / q;
    const double C11188 =
        C10323 / C53657 - (C11169 * C55355) / q + C55313 - C55289 / q;
    const double C18578 = -(C18650 * C55351 + C55289) / q;
    const double C6268 = C27571 + zAB * C9493;
    const double C5350 = C8716 + xAB * C8726;
    const double C6698 = C8716 + yAB * C10209;
    const double C8706 = C55260 - (C8726 * C55351) / q - (C8716 * p) / q;
    const double C55250 = C10257 * p;
    const double C5118 = C10257 + yAB * C8035;
    const double C6463 = C10257 + xAB * C10266;
    const double C9463 = C55279 - (C31717 * C55351) / q - C55363;
    const double C10710 = C55244 - (C29872 * C55355) / q - C55363;
    const double C18596 = C55279 - (C31962 * C55352) / q - C55368;
    const double C20182 = C55260 - (C31069 * C55355) / q - C55368;
    const double C55370 = C55330 / q;
    const double C55372 = C55333 / q;
    const double C4799 = C7940 + xAB * C7951;
    const double C55271 = C31322 * p;
    const double C17900 =
        (3 * C8846) / C53657 - (C17919 * C55352) / q - (C30846 * p) / q;
    const double C20148 =
        C11121 / q - (C20131 * C55352) / q + C55326 - (C31587 * p) / q;
    const double C30391 = C55306 - (C30375 * C55352) / q - C55374;
    const double C31424 = C55326 - (C31440 * C55351) / q - C55374;
    const double C55266 = C29648 * p;
    const double C55371 = C55331 / q;
    const double C55376 = C55341 / q;
    const double C5668 = C17881 + yAB * C8806;
    const double C55378 = C55340 / q;
    const double C31022 = -(C31053 * C55351 + C55340) / q;
    const double C55375 = C55334 / q;
    const double C29888 = -(C29855 * C55352 + C55334) / q;
    const double C55294 = C32523 * p;
    const double C55325 = C32655 * p;
    const double C55373 = C55335 / q;
    const double C55377 = C55342 / q;
    const double C6328 = C27685 + zAB * C9613;
    const double C4865 = C8066 + xAB * C8077;
    const double C5108 = C10238 + yAB * C8014;
    const double C6452 = C10238 + xAB * C10247;
    const double C5405 = C8816 + xAB * C8826;
    const double C6743 = C8816 + yAB * C10304;
    const double C5648 = C17843 + yAB * C8766;
    const double C6815 = C11131 + zAB * C10285;
    const double C7243 = C11131 + yAB * C10681;
    const double C7491 = C11131 + xAB * C11140;
    const double C5728 = C20097 + zAB * C8746;
    const double C7724 = C20097 + yAB * C11083;
    const double C5945 = C9563 + xAB * C9573;
    const double C7337 = C9563 + zAB * C10700;
    const double C6842 = C11188 + zAB * C10342;
    const double C7273 = C11188 + yAB * C10738;
    const double C7524 = C11188 + xAB * C11197;
    const double C6188 = C18578 + yAB * C9513;
    const double C7814 = C18578 + zAB * C11102;
    const double C55354 = C55250 / q;
    const double C5890 = C9463 + xAB * C9473;
    const double C7292 = C9463 + zAB * C10605;
    const double C9453 = C55279 - (C9473 * C55351) / q - (C9463 * p) / q;
    const double C55258 = C10710 * p;
    const double C5238 = C10710 + zAB * C8098;
    const double C7000 = C10710 + xAB * C10719;
    const double C6198 = C18596 + yAB * C9533;
    const double C7823 = C18596 + zAB * C11121;
    const double C9553 = C55279 - (C9533 * C55352) / q - (C18596 * p) / q;
    const double C55277 = C20182 * p;
    const double C5778 = C20182 + zAB * C8846;
    const double C7769 = C20182 + yAB * C11178;
    const double C29554 = C30521 / q - (C29585 * C55351) / q - C55370;
    const double C30124 = C55243 - (C30109 * C55352) / q - C55370;
    const double C29824 = C31717 / q - (C29855 * C55351) / q - C55372;
    const double C30273 = C55243 - (C30242 * C55355) / q - C55372;
    const double C8796 = C55270 - (C8776 * C55352) / q + C55259 - C55271 / q;
    const double C17824 = -(C17862 * C55351 + C55271) / q;
    const double C5678 = C17900 + yAB * C8826;
    const double C5758 = C20148 + zAB * C8806;
    const double C7751 = C20148 + yAB * C11140;
    const double C55311 = C30391 * p;
    const double C20063 = C55326 - (C20080 * C55351) / q - (C31424 * p) / q;
    const double C55360 = C55266 / q;
    const double C29618 = C29602 / q - (C29585 * C55352) / q - C55371;
    const double C31291 = C55316 - (C31307 * C55351) / q - C55371;
    const double C31084 = C31962 / q - (C31053 * C55352) / q - C55376;
    const double C31602 = C55316 - (C31572 * C55355) / q - C55376;
    const double C31470 = C55259 - (C31440 * C55355) / q - C55378;
    const double C32374 = C55278 - (C32359 * C55352) / q - C55378;
    const double C30406 = C55295 - (C30375 * C55355) / q - C55375;
    const double C32343 = C55319 - (C32359 * C55351) / q - C55375;
    const double C9483 = C55282 - (C9523 * C55351) / q - (C29888 * p) / q;
    const double C9603 = C55293 - (C9583 * C55355) / q + C55278 - C55294 / q;
    const double C27590 = -(C27666 * C55351 + C55294) / q;
    const double C18668 = C55324 - (C18650 * C55355) / q + C55319 - C55325 / q;
    const double C27647 = -(C27666 * C55352 + C55325) / q;
    const double C29918 = C29872 / q - (C29855 * C55355) / q - C55373;
    const double C32476 = C55327 - (C32492 * C55351) / q - C55373;
    const double C31114 = C31069 / q - (C31053 * C55355) / q - C55377;
    const double C32640 = C55327 - (C32625 * C55352) / q - C55377;
    const double C8056 = C55244 - (C8035 * C55352) / q - C55354;
    const double C10228 = C53892 / C53657 - (C10266 * C55351) / q - C55354;
    const double C55357 = C55258 / q;
    const double C55362 = C55277 / q;
    const double C8696 =
        C8726 / C53657 - (C8716 * C55351) / q + C55259 - (C29554 * p) / q;
    const double C55249 = C30124 * p;
    const double C9443 =
        C9473 / C53657 - (C9463 * C55351) / q + C55278 - (C29824 * p) / q;
    const double C55257 = C30273 * p;
    const double C5394 = C8796 + xAB * C8806;
    const double C6734 = C8796 + yAB * C10285;
    const double C5638 = C17824 + yAB * C8746;
    const double C55366 = C55311 / q;
    const double C5708 = C20063 + zAB * C8706;
    const double C7706 = C20063 + yAB * C11045;
    const double C8756 = C55265 - (C8836 * C55351) / q - C55360;
    const double C10295 = C55300 - (C10314 * C55352) / q - C55360;
    const double C55263 = C29618 * p;
    const double C17786 = C55316 - (C17805 * C55351) / q - (C31291 * p) / q;
    const double C18614 =
        C55282 - (C18596 * C55352) / q + C55319 - (C31084 * p) / q;
    const double C55318 = C31602 * p;
    const double C55276 = C31470 * p;
    const double C55288 = C32374 * p;
    const double C55304 = C30406 * p;
    const double C18524 = C55319 - (C18542 * C55351) / q - (C32343 * p) / q;
    const double C5901 = C9483 + xAB * C9493;
    const double C7301 = C9483 + zAB * C10624;
    const double C5967 = C9603 + xAB * C9613;
    const double C7355 = C9603 + zAB * C10738;
    const double C6278 = C27590 + zAB * C9513;
    const double C6238 = C18668 + yAB * C9613;
    const double C7859 = C18668 + zAB * C11197;
    const double C6308 = C27647 + zAB * C9573;
    const double C55284 = C29918 * p;
    const double C27533 = C55327 - (C27552 * C55351) / q - (C32476 * p) / q;
    const double C55321 = C31114 * p;
    const double C27628 = C55327 - (C27609 * C55352) / q - (C32640 * p) / q;
    const double C8119 = C55244 - (C8098 * C55355) / q - C55357;
    const double C10643 = C55310 - (C10719 * C55351) / q - C55357;
    const double C8866 = C55260 - (C8846 * C55355) / q - C55362;
    const double C11159 = C55310 - (C11178 * C55352) / q - C55362;
    const double C5339 = C8696 + xAB * C8706;
    const double C6689 = C8696 + yAB * C10190;
    const double C55353 = C55249 / q;
    const double C5879 = C9443 + xAB * C9453;
    const double C7283 = C9443 + zAB * C10586;
    const double C55356 = C55257 / q;
    const double C10672 = C55306 - (C10653 * C55352) / q - C55366;
    const double C11074 = C11121 / C53657 - (C11112 * C55351) / q - C55366;
    const double C5372 = C8756 + xAB * C8766;
    const double C6716 = C8756 + yAB * C10247;
    const double C5138 = C10295 + yAB * C8077;
    const double C6485 = C10295 + xAB * C10304;
    const double C55359 = C55263 / q;
    const double C5618 = C17786 + yAB * C8706;
    const double C6208 = C18614 + yAB * C9553;
    const double C7832 = C18614 + zAB * C11140;
    const double C55367 = C55318 / q;
    const double C55361 = C55276 / q;
    const double C20114 = -(C20182 * C55351 + C55276) / q;
    const double C9543 = C55278 - (C9523 * C55352) / q - C55288 / q;
    const double C18560 = -(C18596 * C55351 + C55288) / q;
    const double C55365 = C55304 / q;
    const double C10691 = -(C10710 * C55352 + C55304) / q;
    const double C6158 = C18524 + yAB * C9453;
    const double C7787 = C18524 + zAB * C11045;
    const double C55364 = C55284 / q;
    const double C6248 = C27533 + zAB * C9453;
    const double C55369 = C55321 / q;
    const double C6298 = C27628 + zAB * C9553;
    const double C8045 = C55243 - (C8024 * C55352) / q - C55353;
    const double C10219 = C55270 - (C10257 * C55351) / q - C55353;
    const double C8108 = C55243 - (C8087 * C55355) / q - C55356;
    const double C10634 = C55293 - (C10710 * C55351) / q - C55356;
    const double C5218 = C10672 + zAB * C8056;
    const double C6978 = C10672 + xAB * C10681;
    const double C6788 = C11074 + zAB * C10228;
    const double C7213 = C11074 + yAB * C10624;
    const double C7458 = C11074 + xAB * C11083;
    const double C8736 = C8786 / C53657 - (C8776 * C55351) / q - C55359;
    const double C10276 =
        C8035 / C53657 - (C10257 * C55352) / q + C55295 - C55359;
    const double C17938 = C55316 - (C17919 * C55355) / q - C55367;
    const double C20165 = C55324 - (C20182 * C55352) / q - C55367;
    const double C8856 = C55259 - (C8836 * C55355) / q - C55361;
    const double C11150 = C10719 / C53657 - (C11169 * C55352) / q - C55361;
    const double C5738 = C20114 + zAB * C8766;
    const double C7733 = C20114 + yAB * C11102;
    const double C5934 = C9543 + xAB * C9553;
    const double C7328 = C9543 + zAB * C10681;
    const double C6178 = C18560 + yAB * C9493;
    const double C7805 = C18560 + zAB * C11083;
    const double C10333 = C55295 - (C10314 * C55355) / q - C55365;
    const double C11093 = C11178 / C53657 - (C11169 * C55351) / q - C55365;
    const double C5228 = C10691 + zAB * C8077;
    const double C6989 = C10691 + xAB * C10700;
    const double C9503 = C55283 - (C9583 * C55351) / q - C55364;
    const double C10729 = C55300 - (C10710 * C55355) / q + C55306 - C55364;
    const double C18632 = C55283 - (C18650 * C55352) / q - C55369;
    const double C20199 = C55265 - (C20182 * C55355) / q + C55326 - C55369;
    const double C4854 = C8045 + xAB * C8056;
    const double C5098 = C10219 + yAB * C7993;
    const double C6441 = C10219 + xAB * C10228;
    const double C4887 = C8108 + xAB * C8119;
    const double C5198 = C10634 + zAB * C8014;
    const double C6956 = C10634 + xAB * C10643;
    const double C5361 = C8736 + xAB * C8746;
    const double C6707 = C8736 + yAB * C10228;
    const double C5128 = C10276 + yAB * C8056;
    const double C6474 = C10276 + xAB * C10285;
    const double C5698 = C17938 + yAB * C8866;
    const double C5768 = C20165 + zAB * C8826;
    const double C7760 = C20165 + yAB * C11159;
    const double C5427 = C8856 + xAB * C8866;
    const double C6761 = C8856 + yAB * C10342;
    const double C6824 = C11150 + zAB * C10304;
    const double C7253 = C11150 + yAB * C10700;
    const double C7502 = C11150 + xAB * C11159;
    const double C5158 = C10333 + yAB * C8119;
    const double C6507 = C10333 + xAB * C10342;
    const double C6797 = C11093 + zAB * C10247;
    const double C7223 = C11093 + yAB * C10643;
    const double C7469 = C11093 + xAB * C11102;
    const double C5912 = C9503 + xAB * C9513;
    const double C7310 = C9503 + zAB * C10643;
    const double C5248 = C10729 + zAB * C8119;
    const double C7011 = C10729 + xAB * C10738;
    const double C6218 = C18632 + yAB * C9573;
    const double C7841 = C18632 + zAB * C11159;
    const double C5788 = C20199 + zAB * C8866;
    const double C7778 = C20199 + yAB * C11197;
    g[0] = C4799;
    g[1] = C4810;
    g[2] = C4821;
    g[3] = C4832;
    g[4] = C4843;
    g[5] = C4854;
    g[6] = C4865;
    g[7] = C4876;
    g[8] = C4887;
    g[9] = C5078;
    g[10] = C5088;
    g[11] = C5098;
    g[12] = C5108;
    g[13] = C5118;
    g[14] = C5128;
    g[15] = C5138;
    g[16] = C5148;
    g[17] = C5158;
    g[18] = C5168;
    g[19] = C5178;
    g[20] = C5188;
    g[21] = C5198;
    g[22] = C5208;
    g[23] = C5218;
    g[24] = C5228;
    g[25] = C5238;
    g[26] = C5248;
    g[27] = C5339;
    g[28] = C5350;
    g[29] = C5361;
    g[30] = C5372;
    g[31] = C5383;
    g[32] = C5394;
    g[33] = C5405;
    g[34] = C5416;
    g[35] = C5427;
    g[36] = C5618;
    g[37] = C5628;
    g[38] = C5638;
    g[39] = C5648;
    g[40] = C5658;
    g[41] = C5668;
    g[42] = C5678;
    g[43] = C5688;
    g[44] = C5698;
    g[45] = C5708;
    g[46] = C5718;
    g[47] = C5728;
    g[48] = C5738;
    g[49] = C5748;
    g[50] = C5758;
    g[51] = C5768;
    g[52] = C5778;
    g[53] = C5788;
    g[54] = C5879;
    g[55] = C5890;
    g[56] = C5901;
    g[57] = C5912;
    g[58] = C5923;
    g[59] = C5934;
    g[60] = C5945;
    g[61] = C5956;
    g[62] = C5967;
    g[63] = C6158;
    g[64] = C6168;
    g[65] = C6178;
    g[66] = C6188;
    g[67] = C6198;
    g[68] = C6208;
    g[69] = C6218;
    g[70] = C6228;
    g[71] = C6238;
    g[72] = C6248;
    g[73] = C6258;
    g[74] = C6268;
    g[75] = C6278;
    g[76] = C6288;
    g[77] = C6298;
    g[78] = C6308;
    g[79] = C6318;
    g[80] = C6328;
    g[81] = C6419;
    g[82] = C6430;
    g[83] = C6441;
    g[84] = C6452;
    g[85] = C6463;
    g[86] = C6474;
    g[87] = C6485;
    g[88] = C6496;
    g[89] = C6507;
    g[90] = C6689;
    g[91] = C6698;
    g[92] = C6707;
    g[93] = C6716;
    g[94] = C6725;
    g[95] = C6734;
    g[96] = C6743;
    g[97] = C6752;
    g[98] = C6761;
    g[99] = C6770;
    g[100] = C6779;
    g[101] = C6788;
    g[102] = C6797;
    g[103] = C6806;
    g[104] = C6815;
    g[105] = C6824;
    g[106] = C6833;
    g[107] = C6842;
    g[108] = C6923;
    g[109] = C6934;
    g[110] = C6945;
    g[111] = C6956;
    g[112] = C6967;
    g[113] = C6978;
    g[114] = C6989;
    g[115] = C7000;
    g[116] = C7011;
    g[117] = C7193;
    g[118] = C7203;
    g[119] = C7213;
    g[120] = C7223;
    g[121] = C7233;
    g[122] = C7243;
    g[123] = C7253;
    g[124] = C7263;
    g[125] = C7273;
    g[126] = C7283;
    g[127] = C7292;
    g[128] = C7301;
    g[129] = C7310;
    g[130] = C7319;
    g[131] = C7328;
    g[132] = C7337;
    g[133] = C7346;
    g[134] = C7355;
    g[135] = C7436;
    g[136] = C7447;
    g[137] = C7458;
    g[138] = C7469;
    g[139] = C7480;
    g[140] = C7491;
    g[141] = C7502;
    g[142] = C7513;
    g[143] = C7524;
    g[144] = C7706;
    g[145] = C7715;
    g[146] = C7724;
    g[147] = C7733;
    g[148] = C7742;
    g[149] = C7751;
    g[150] = C7760;
    g[151] = C7769;
    g[152] = C7778;
    g[153] = C7787;
    g[154] = C7796;
    g[155] = C7805;
    g[156] = C7814;
    g[157] = C7823;
    g[158] = C7832;
    g[159] = C7841;
    g[160] = C7850;
    g[161] = C7859;
    g[162] = C7940;
    g[163] = C7951;
    g[164] = C7961;
    g[165] = C7972;
    g[166] = C7982;
    g[167] = C7993;
    g[168] = C8003;
    g[169] = C8014;
    g[170] = C8024;
    g[171] = C8035;
    g[172] = C8045;
    g[173] = C8056;
    g[174] = C8066;
    g[175] = C8077;
    g[176] = C8087;
    g[177] = C8098;
    g[178] = C8108;
    g[179] = C8119;
    g[180] = C8696;
    g[181] = C8706;
    g[182] = C8716;
    g[183] = C8726;
    g[184] = C8736;
    g[185] = C8746;
    g[186] = C8756;
    g[187] = C8766;
    g[188] = C8776;
    g[189] = C8786;
    g[190] = C8796;
    g[191] = C8806;
    g[192] = C8816;
    g[193] = C8826;
    g[194] = C8836;
    g[195] = C8846;
    g[196] = C8856;
    g[197] = C8866;
    g[198] = C9443;
    g[199] = C9453;
    g[200] = C9463;
    g[201] = C9473;
    g[202] = C9483;
    g[203] = C9493;
    g[204] = C9503;
    g[205] = C9513;
    g[206] = C9523;
    g[207] = C9533;
    g[208] = C9543;
    g[209] = C9553;
    g[210] = C9563;
    g[211] = C9573;
    g[212] = C9583;
    g[213] = C9593;
    g[214] = C9603;
    g[215] = C9613;
    g[216] = C10181;
    g[217] = C10190;
    g[218] = C10200;
    g[219] = C10209;
    g[220] = C10219;
    g[221] = C10228;
    g[222] = C10238;
    g[223] = C10247;
    g[224] = C10257;
    g[225] = C10266;
    g[226] = C10276;
    g[227] = C10285;
    g[228] = C10295;
    g[229] = C10304;
    g[230] = C10314;
    g[231] = C10323;
    g[232] = C10333;
    g[233] = C10342;
    g[234] = C10577;
    g[235] = C10586;
    g[236] = C10596;
    g[237] = C10605;
    g[238] = C10615;
    g[239] = C10624;
    g[240] = C10634;
    g[241] = C10643;
    g[242] = C10653;
    g[243] = C10662;
    g[244] = C10672;
    g[245] = C10681;
    g[246] = C10691;
    g[247] = C10700;
    g[248] = C10710;
    g[249] = C10719;
    g[250] = C10729;
    g[251] = C10738;
    g[252] = C11036;
    g[253] = C11045;
    g[254] = C11055;
    g[255] = C11064;
    g[256] = C11074;
    g[257] = C11083;
    g[258] = C11093;
    g[259] = C11102;
    g[260] = C11112;
    g[261] = C11121;
    g[262] = C11131;
    g[263] = C11140;
    g[264] = C11150;
    g[265] = C11159;
    g[266] = C11169;
    g[267] = C11178;
    g[268] = C11188;
    g[269] = C11197;
    g[270] = C17786;
    g[271] = C17805;
    g[272] = C17824;
    g[273] = C17843;
    g[274] = C17862;
    g[275] = C17881;
    g[276] = C17900;
    g[277] = C17919;
    g[278] = C17938;
    g[279] = C18524;
    g[280] = C18542;
    g[281] = C18560;
    g[282] = C18578;
    g[283] = C18596;
    g[284] = C18614;
    g[285] = C18632;
    g[286] = C18650;
    g[287] = C18668;
    g[288] = C20063;
    g[289] = C20080;
    g[290] = C20097;
    g[291] = C20114;
    g[292] = C20131;
    g[293] = C20148;
    g[294] = C20165;
    g[295] = C20182;
    g[296] = C20199;
    g[297] = C27533;
    g[298] = C27552;
    g[299] = C27571;
    g[300] = C27590;
    g[301] = C27609;
    g[302] = C27628;
    g[303] = C27647;
    g[304] = C27666;
    g[305] = C27685;
    g[306] = C29149;
    g[307] = C29198;
    g[308] = C29214;
    g[309] = C29229;
    g[310] = C29245;
    g[311] = C29290;
    g[312] = C29554;
    g[313] = C29585;
    g[314] = C29602;
    g[315] = C29618;
    g[316] = C29648;
    g[317] = C29824;
    g[318] = C29855;
    g[319] = C29872;
    g[320] = C29888;
    g[321] = C29918;
    g[322] = C30093;
    g[323] = C30109;
    g[324] = C30124;
    g[325] = C30139;
    g[326] = C30226;
    g[327] = C30242;
    g[328] = C30257;
    g[329] = C30273;
    g[330] = C30359;
    g[331] = C30375;
    g[332] = C30391;
    g[333] = C30406;
    g[334] = C30521;
    g[335] = C30536;
    g[336] = C30754;
    g[337] = C30785;
    g[338] = C30801;
    g[339] = C30816;
    g[340] = C30846;
    g[341] = C31022;
    g[342] = C31053;
    g[343] = C31069;
    g[344] = C31084;
    g[345] = C31114;
    g[346] = C31291;
    g[347] = C31307;
    g[348] = C31322;
    g[349] = C31337;
    g[350] = C31424;
    g[351] = C31440;
    g[352] = C31455;
    g[353] = C31470;
    g[354] = C31556;
    g[355] = C31572;
    g[356] = C31587;
    g[357] = C31602;
    g[358] = C31717;
    g[359] = C31732;
    g[360] = C31962;
    g[361] = C32076;
    g[362] = C32107;
    g[363] = C32123;
    g[364] = C32138;
    g[365] = C32168;
    g[366] = C32343;
    g[367] = C32359;
    g[368] = C32374;
    g[369] = C32389;
    g[370] = C32476;
    g[371] = C32492;
    g[372] = C32507;
    g[373] = C32523;
    g[374] = C32609;
    g[375] = C32625;
    g[376] = C32640;
    g[377] = C32655;
    g[378] = C32756;
    g[379] = C32883;
    g[380] = C33011;
    g[381] = C33139;
    g[382] = C33252;
    g[383] = C33267;
    g[384] = C33386;
    g[385] = C33476;
    g[386] = C33565;
    g[387] = C33594;
    g[388] = C33637;
    g[389] = C33693;
    g[390] = C33783;
    g[391] = C33872;
    g[392] = C33901;
    g[393] = C33930;
    g[394] = C33972;
    g[395] = C34061;
    g[396] = C34090;
    g[397] = C34133;
    g[398] = C34162;
    g[399] = C34177;
    g[400] = C38710;
    g[401] = C38800;
    g[402] = C38915;
    g[403] = C38987;
    g[404] = C39116;
    g[405] = C43980;
    g[406] = C44891;
    g[407] = C44911;
    g[408] = C44927;
    g[409] = C44943;
    g[410] = C44959;
    g[411] = C44960;
    g[412] = C45059;
    g[413] = C45076;
    g[414] = C45106;
    g[415] = C45122;
    g[416] = C45169;
    g[417] = C45186;
    g[418] = C45216;
    g[419] = C45247;
    g[420] = C45278;
    g[421] = C45308;
    g[422] = C45351;
    g[423] = C45395;
    g[424] = C45468;
    g[425] = C45542;
    g[426] = C45571;
    g[427] = C45586;
    g[428] = C45657;
    g[429] = C45701;
    g[430] = C45716;
    g[431] = C45811;
    g[432] = C45842;
    g[433] = C45872;
    g[434] = C45903;
    g[435] = C45933;
    g[436] = C45949;
    g[437] = C45965;
    g[438] = C46023;
    g[439] = C46039;
    g[440] = C46084;
    g[441] = C46099;
    g[442] = C46143;
    g[443] = C46160;
    g[444] = C46176;
    g[445] = C46198;
    g[446] = C46214;
    g[447] = C46273;
    g[448] = C46303;
    g[449] = C46333;
    g[450] = C46392;
    g[451] = C46408;
    g[452] = C46551;
    g[453] = C46595;
    g[454] = C46626;
    g[455] = C46642;
    g[456] = C46673;
    g[457] = C46689;
    g[458] = C46791;
    g[459] = C46808;
    g[460] = C46830;
    g[461] = C46890;
    g[462] = C46934;
    g[463] = C46978;
    g[464] = C46994;
    g[465] = C47067;
    g[466] = C47125;
    g[467] = C47148;
    g[468] = C47222;
    g[469] = C47289;
    g[470] = C47333;
    g[471] = C47386;
    g[472] = C47626;
    g[473] = C47688;
    g[474] = C47764;
    g[475] = C47796;
    g[476] = C48289;
    g[477] = C48305;
    g[478] = C48409;
    g[479] = C48724;
    g[480] = C48943;
    g[481] = C49000;
    g[482] = C49116;
    g[483] = C49250;
    g[484] = C49360;
    g[485] = C49535;
    g[486] = C49673;
    g[487] = C49733;
    g[488] = C49749;
    g[489] = C49844;
    g[490] = C50167;
    g[491] = C50840;
    g[492] = C51648;
    g[493] = C51722;
    g[494] = C51905;
    g[495] = C52188;
    g[496] = C52343;
}
