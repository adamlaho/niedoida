/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

#include "gto_d1_kit/gto_d1.hpp"
#include <cmath>

namespace {
    static const double Pi = M_PI;
}

void vne_gradient_21_1(double ae,
                       double be,
                       double xA,
                       double yA,
                       double zA,
                       double xB,
                       double yB,
                       double zB,
                       double xC,
                       double yC,
                       double zC,
                       const double* bs,
                       double* const gx,
                       double* const gy,
                       double* const gz,
                       std::size_t matrix_size,
                       std::size_t Ai,
                       std::size_t Bi)
{
    const double C3531 = be * xB;
    const double C3530 = ae * xA;
    const double C3529 = bs[1];
    const double C3528 = 2. * Pi;
    const double C3527 = ae + be;
    const double C3526 = ae * be;
    const double C3525 = zA - zB;
    const double C3524 = yA - yB;
    const double C3523 = xA - xB;
    const double C3522 = bs[0];
    const double C3536 = C3530 + C3531;
    const double C3535 = be * C3523;
    const double C3534 = std::pow(C3525, 2);
    const double C3533 = std::pow(C3524, 2);
    const double C3532 = std::pow(C3523, 2);
    const double C3538 = C3536 / C3527;
    const double C3537 = C3532 + C3533;
    const double C3540 = C3538 - xC;
    const double C3539 = C3537 + C3534;
    const double C3541 = C3539 * C3526;
    const double C3542 = C3541 / C3527;
    const double C3543 = -C3542;
    const double C3544 = std::exp(C3543);
    const double C3545 = C3544 * C3528;
    const double C3547 = C3529 * C3545;
    const double C3546 = C3522 * C3545;
    const double C3549 = C3540 * C3547;
    const double C3548 = C3546 * C3535;
    const double C3551 = C3549 / C3527;
    const double C3550 = C3548 / C3527;
    const double C3552 = -C3550;
    const double C3553 = C3552 / C3527;
    const double C3554 = C3553 - C3551;
    const double C3562 = C3547 * C3535;
    const double C3561 = bs[2];
    const double C3564 = C3562 / C3527;
    const double C3563 = C3561 * C3545;
    const double C3566 = C3540 * C3563;
    const double C3565 = -C3564;
    const double C3568 = C3566 / C3527;
    const double C3567 = C3565 / C3527;
    const double C3569 = C3567 - C3568;
    const double C3574 = C3523 * C3546;
    const double C3575 = C3574 / C3527;
    const double C3576 = C3554 + C3575;
    const double C3580 = C3523 * C3547;
    const double C3581 = C3580 / C3527;
    const double C3582 = C3569 + C3581;
    const double C3594 = be * yB;
    const double C3593 = ae * yA;
    const double C3592 = be * C3524;
    const double C3596 = C3593 + C3594;
    const double C3595 = C3546 * C3592;
    const double C3598 = C3596 / C3527;
    const double C3597 = C3595 / C3527;
    const double C3600 = C3598 - yC;
    const double C3599 = -C3597;
    const double C3602 = C3600 * C3547;
    const double C3601 = C3599 / C3527;
    const double C3603 = C3602 / C3527;
    const double C3604 = C3601 - C3603;
    const double C3607 = C3600 * C3563;
    const double C3606 = C3547 * C3592;
    const double C3609 = C3607 / C3527;
    const double C3608 = C3606 / C3527;
    const double C3610 = -C3608;
    const double C3611 = C3610 / C3527;
    const double C3612 = C3611 - C3609;
    const double C3616 = C3524 * C3546;
    const double C3617 = C3616 / C3527;
    const double C3618 = C3604 + C3617;
    const double C3620 = C3524 * C3547;
    const double C3621 = C3620 / C3527;
    const double C3622 = C3612 + C3621;
    const double C3627 = be * zB;
    const double C3626 = ae * zA;
    const double C3625 = be * C3525;
    const double C3629 = C3626 + C3627;
    const double C3628 = C3546 * C3625;
    const double C3631 = C3629 / C3527;
    const double C3630 = C3628 / C3527;
    const double C3633 = C3631 - zC;
    const double C3632 = -C3630;
    const double C3635 = C3633 * C3547;
    const double C3634 = C3632 / C3527;
    const double C3636 = C3635 / C3527;
    const double C3637 = C3634 - C3636;
    const double C3640 = C3633 * C3563;
    const double C3639 = C3547 * C3625;
    const double C3642 = C3640 / C3527;
    const double C3641 = C3639 / C3527;
    const double C3643 = -C3641;
    const double C3644 = C3643 / C3527;
    const double C3645 = C3644 - C3642;
    const double C3678 = C3525 * C3637;
    const double C3677 = C3637 * C3625;
    const double C3676 = C3563 * C3592;
    const double C3675 = C3524 * C3604;
    const double C3674 = C3604 * C3592;
    const double C3673 = C3525 * C3547;
    const double C3672 = C3525 * C3546;
    const double C3671 = be * zB;
    const double C3670 = ae * zA;
    const double C3669 = be * C3525;
    const double C3668 = C3524 * C3563;
    const double C3667 = C3524 * C3547;
    const double C3666 = C3524 * C3546;
    const double C3665 = be * yB;
    const double C3664 = ae * yA;
    const double C3663 = be * C3524;
    const double C3662 = C3523 * C3563;
    const double C3661 = bs[3];
    const double C3660 = C3563 * C3535;
    const double C3659 = C3563 / C3527;
    const double C3658 = C3523 * C3547;
    const double C3657 = C3523 * C3546;
    const double C3656 = C3523 * C3554;
    const double C3655 = bs[2];
    const double C3654 = C3547 * C3535;
    const double C3653 = C3554 * C3535;
    const double C3652 = 2. * C3527;
    const double C3651 = C3547 / C3527;
    const double C3650 = C3546 / C3527;
    const double C3698 = C3677 / C3527;
    const double C3697 = C3676 / C3527;
    const double C3696 = C3674 / C3527;
    const double C3695 = C3673 / C3527;
    const double C3694 = C3672 / C3527;
    const double C3693 = C3670 + C3671;
    const double C3692 = C3668 / C3527;
    const double C3691 = C3667 / C3527;
    const double C3690 = C3666 / C3527;
    const double C3689 = C3664 + C3665;
    const double C3688 = C3662 / C3527;
    const double C3687 = C3661 * C3545;
    const double C3686 = C3660 / C3527;
    const double C3685 = C3651 - C3659;
    const double C3684 = C3658 / C3527;
    const double C3683 = C3657 / C3527;
    const double C3682 = C3655 * C3545;
    const double C3681 = C3654 / C3527;
    const double C3680 = C3653 / C3527;
    const double C3679 = C3650 - C3651;
    const double C3711 = C3612 + C3691;
    const double C3710 = C3600 * C3687;
    const double C3709 = -C3697;
    const double C3708 = C3693 / C3527;
    const double C3707 = C3689 / C3527;
    const double C3706 = C3569 + C3684;
    const double C3705 = C3540 * C3687;
    const double C3704 = -C3686;
    const double C3703 = C3685 / C3652;
    const double C3702 = C3554 + C3683;
    const double C3701 = C3540 * C3682;
    const double C3700 = -C3681;
    const double C3699 = C3679 / C3652;
    const double C3719 = C3710 / C3527;
    const double C3718 = C3709 / C3527;
    const double C3717 = C3708 - zC;
    const double C3716 = C3707 - yC;
    const double C3715 = C3705 / C3527;
    const double C3714 = C3704 / C3527;
    const double C3713 = C3701 / C3527;
    const double C3712 = C3700 / C3527;
    const double C3722 = C3718 - C3719;
    const double C3721 = C3714 - C3715;
    const double C3720 = C3712 - C3713;
    const double C3723 = C3721 + C3688;
    const double C232 = C3699 - (C3680 + C3540 * C3720) + C3656 + C3523 * C3702;
    const double C236 = C3720 + C3684;
    const double C237 = C3682 / C3527;
    const double C238 = C3703 - ((C3569 * C3535) / C3527 + C3540 * C3721) +
                        C3523 * C3569 + C3523 * C3706;
    const double C240 = C3687 / C3527;
    const double C241 = C3699 - (C3680 + C3540 * C3569) + C3656;
    const double C586 =
        C3524 * C3576 - ((C3576 * C3663) / C3527 + C3716 * C3706);
    const double C587 =
        (-(C3546 * C3663) / C3527) / C3527 - (C3716 * C3547) / C3527 + C3690;
    const double C588 =
        (-(C3547 * C3663) / C3527) / C3527 - (C3716 * C3563) / C3527 + C3691;
    const double C589 =
        C3524 * C3582 - ((C3582 * C3663) / C3527 + C3716 * C3723);
    const double C590 =
        (-(C3563 * C3663) / C3527) / C3527 - (C3716 * C3687) / C3527 + C3692;
    const double C591 =
        C3524 * C3554 - ((C3554 * C3663) / C3527 + C3716 * C3569);
    const double C822 =
        C3525 * C3576 - ((C3576 * C3669) / C3527 + C3717 * C3582);
    const double C823 =
        (-(C3546 * C3669) / C3527) / C3527 - (C3717 * C3547) / C3527 + C3694;
    const double C824 =
        (-(C3547 * C3669) / C3527) / C3527 - (C3717 * C3563) / C3527 + C3695;
    const double C825 =
        C3525 * C3582 - ((C3582 * C3669) / C3527 + C3717 * C3723);
    const double C826 = (-(C3563 * C3669) / C3527) / C3527 -
                        (C3717 * C3687) / C3527 + (C3525 * C3563) / C3527;
    const double C827 =
        C3525 * C3554 - ((C3554 * C3669) / C3527 + C3717 * C3569);
    const double C1044 = C3699 -
                         (C3696 + C3600 * ((-(C3547 * C3592) / C3527) / C3527 -
                                           (C3600 * C3563) / C3527)) +
                         C3675 + C3524 * (C3604 + C3690);
    const double C1045 = C3703 - ((C3612 * C3592) / C3527 + C3600 * C3722) +
                         C3524 * C3612 + C3524 * C3711;
    const double C1046 = -((C3576 * C3592) / C3527 + C3600 * C3582);
    const double C1240 = C3699 - (C3696 + C3600 * C3612) + C3675;
    const double C1438 =
        C3525 * C3618 - ((C3618 * C3669) / C3527 + C3717 * C3711);
    const double C1439 =
        C3525 * C3622 - ((C3622 * C3669) / C3527 + C3717 * (C3722 + C3692));
    const double C1440 =
        C3525 * C3604 - ((C3604 * C3669) / C3527 + C3717 * C3612);
    const double C1618 = C3699 -
                         (C3698 + C3633 * ((-(C3547 * C3625) / C3527) / C3527 -
                                           (C3633 * C3563) / C3527)) +
                         C3678 + C3525 * (C3637 + C3694);
    const double C1619 =
        C3703 -
        ((C3645 * C3625) / C3527 + C3633 * ((-(C3563 * C3625) / C3527) / C3527 -
                                            (C3633 * C3687) / C3527)) +
        C3525 * C3645 + C3525 * (C3645 + C3695);
    const double C1620 = -((C3576 * C3625) / C3527 + C3633 * C3582);
    const double C1786 = -((C3618 * C3625) / C3527 + C3633 * C3622);
    const double C1980 = C3699 - (C3698 + C3633 * C3645) + C3678;
    const double C263 = be * zB;
    const double C262 = ae * zA;
    const double C261 = be * yB;
    const double C260 = ae * yA;
    const double C259 = bs[4];
    const double C258 = bs[3];
    const double C257 = C237 * ae;
    const double C256 = C236 * ae;
    const double C255 = bs[2];
    const double C254 = C3651 * ae;
    const double C253 = 4 * Pi;
    const double C252 = zA - zB;
    const double C251 = yA - yB;
    const double C250 = bs[1];
    const double C249 = ae * be;
    const double C248 = xA - xB;
    const double C247 = bs[0];
    const double C246 = C3650 * ae;
    const double C245 = C3702 * ae;
    const double C244 = be * xB;
    const double C243 = ae * xA;
    const double C242 = ae + be;
    const double C279 = C262 + C263;
    const double C278 = C252 * C249;
    const double C277 = C260 + C261;
    const double C276 = C251 * C249;
    const double C275 = 2 * C242;
    const double C274 = C257 / C242;
    const double C273 = C256 / C242;
    const double C272 = std::pow(C242, 2);
    const double C271 = C254 / C242;
    const double C270 = std::pow(C252, 2);
    const double C269 = std::pow(C251, 2);
    const double C268 = std::pow(C248, 2);
    const double C267 = C248 * C249;
    const double C266 = C246 / C242;
    const double C265 = C245 / C242;
    const double C264 = C243 + C244;
    const double C293 = C255 * C278;
    const double C292 = C247 * C278;
    const double C291 = C279 / C242;
    const double C290 = C250 * C278;
    const double C289 = C255 * C276;
    const double C288 = C247 * C276;
    const double C287 = C277 / C242;
    const double C286 = C250 * C276;
    const double C285 = C255 * C267;
    const double C284 = 2 * C272;
    const double C283 = C250 * C267;
    const double C282 = C268 + C269;
    const double C281 = C247 * C267;
    const double C280 = C264 / C242;
    const double C307 = C293 / C242;
    const double C306 = C292 / C242;
    const double C305 = C291 - zC;
    const double C304 = C290 / C242;
    const double C303 = C289 / C242;
    const double C302 = C288 / C242;
    const double C301 = C287 - yC;
    const double C300 = C286 / C242;
    const double C299 = C285 / C242;
    const double C298 = C283 / C242;
    const double C297 = C282 + C270;
    const double C296 = C280 - xC;
    const double C295 = C281 / C242;
    const double C294 = C280 - xB;
    const double C311 = ae * C305;
    const double C310 = ae * C301;
    const double C309 = C297 * C249;
    const double C308 = ae * C296;
    const double C321 = C258 * C311;
    const double C320 = C250 * C311;
    const double C319 = C255 * C311;
    const double C318 = C258 * C310;
    const double C317 = C250 * C310;
    const double C316 = C255 * C310;
    const double C315 = C258 * C308;
    const double C314 = C255 * C308;
    const double C313 = C309 / C242;
    const double C312 = C250 * C308;
    const double C331 = C307 + C321;
    const double C330 = C306 + C320;
    const double C329 = C304 + C319;
    const double C328 = C303 + C318;
    const double C327 = C302 + C317;
    const double C326 = C300 + C316;
    const double C325 = C299 + C315;
    const double C324 = C298 + C314;
    const double C323 = -C313;
    const double C322 = C295 + C312;
    const double C332 = std::exp(C323);
    const double C333 = C332 * C253;
    const double C342 = C331 * C333;
    const double C341 = C330 * C333;
    const double C340 = C329 * C333;
    const double C339 = C328 * C333;
    const double C338 = C327 * C333;
    const double C337 = C326 * C333;
    const double C336 = C325 * C333;
    const double C335 = C324 * C333;
    const double C334 = C322 * C333;
    const double C360 = C340 / C242;
    const double C359 = C294 * C340;
    const double C358 = C296 * C342;
    const double C357 = C341 / C284;
    const double C356 = C294 * C341;
    const double C355 = C296 * C340;
    const double C354 = C337 / C242;
    const double C353 = C294 * C337;
    const double C352 = C296 * C339;
    const double C351 = C338 / C284;
    const double C350 = C294 * C338;
    const double C349 = C296 * C337;
    const double C348 = C335 / C242;
    const double C347 = C296 * C336;
    const double C346 = C294 * C335;
    const double C345 = C334 / C284;
    const double C344 = C296 * C335;
    const double C343 = C294 * C334;
    const double C375 = -C360;
    const double C374 = C359 / C242;
    const double C373 = C358 / C242;
    const double C372 = C356 / C242;
    const double C371 = C355 / C242;
    const double C370 = -C354;
    const double C369 = C353 / C242;
    const double C368 = C352 / C242;
    const double C367 = C350 / C242;
    const double C366 = C349 / C242;
    const double C365 = -C348;
    const double C364 = C347 / C242;
    const double C363 = C346 / C242;
    const double C362 = C344 / C242;
    const double C361 = C343 / C242;
    const double C384 = C375 / C275;
    const double C383 = C373 - C374;
    const double C382 = C371 - C372;
    const double C381 = C370 / C275;
    const double C380 = C368 - C369;
    const double C379 = C366 - C367;
    const double C378 = C365 / C275;
    const double C377 = C271 - C363;
    const double C376 = C266 - C361;
    const double C390 = C296 * C383;
    const double C389 = C294 * C382;
    const double C388 = C296 * C380;
    const double C387 = C294 * C379;
    const double C386 = C377 - C274;
    const double C385 = C376 - C271;
    const double C394 = C389 - C357;
    const double C393 = C387 - C351;
    const double C392 = C386 + C364;
    const double C391 = C385 + C362;
    const double C398 = C394 - C390;
    const double C397 = C393 - C388;
    const double C396 = C296 * C392;
    const double C395 = C294 * C391;
    const double C401 = C398 - C384;
    const double C400 = C397 - C381;
    const double C399 = C265 + C395;
    const double C402 = C399 - C345;
    const double C403 = C402 - C273;
    const double C404 = C403 - C396;
    const double C405 = C404 - C378;
    const double C600 = C301 * C342;
    const double C599 = C301 * C340;
    const double C598 = C301 * C339;
    const double C597 = C301 * C337;
    const double C596 = C301 * C336;
    const double C595 = C588 * ae;
    const double C594 = C287 - yB;
    const double C593 = C301 * C335;
    const double C592 = C587 * ae;
    const double C614 = C594 * C340;
    const double C613 = C600 / C242;
    const double C612 = C594 * C341;
    const double C611 = C599 / C242;
    const double C610 = C598 / C242;
    const double C609 = C594 * C337;
    const double C608 = C597 / C242;
    const double C607 = C594 * C338;
    const double C606 = C594 * C335;
    const double C605 = C596 / C242;
    const double C604 = C595 / C242;
    const double C603 = C594 * C334;
    const double C602 = C593 / C242;
    const double C601 = C592 / C242;
    const double C620 = C614 / C242;
    const double C619 = C612 / C242;
    const double C618 = C609 / C242;
    const double C617 = C607 / C242;
    const double C616 = C606 / C242;
    const double C615 = C603 / C242;
    const double C626 = C613 - C620;
    const double C625 = C611 - C619;
    const double C624 = C271 - C618;
    const double C623 = C266 - C617;
    const double C622 = C605 - C616;
    const double C621 = C602 - C615;
    const double C632 = C296 * C626;
    const double C631 = C294 * C625;
    const double C630 = C624 - C274;
    const double C629 = C623 - C271;
    const double C628 = C296 * C622;
    const double C627 = C294 * C621;
    const double C636 = C631 - C632;
    const double C635 = C630 + C610;
    const double C634 = C629 + C608;
    const double C633 = C601 + C627;
    const double C639 = C296 * C635;
    const double C638 = C294 * C634;
    const double C637 = C633 - C604;
    const double C641 = C638 - C639;
    const double C640 = C637 - C628;
    const double C836 = C305 * C342;
    const double C835 = C305 * C340;
    const double C834 = C305 * C339;
    const double C833 = C305 * C337;
    const double C832 = C305 * C336;
    const double C831 = C824 * ae;
    const double C830 = C291 - zB;
    const double C829 = C305 * C335;
    const double C828 = C823 * ae;
    const double C850 = C836 / C242;
    const double C849 = C830 * C340;
    const double C848 = C835 / C242;
    const double C847 = C830 * C341;
    const double C846 = C830 * C337;
    const double C845 = C834 / C242;
    const double C844 = C830 * C338;
    const double C843 = C833 / C242;
    const double C842 = C830 * C335;
    const double C841 = C832 / C242;
    const double C840 = C831 / C242;
    const double C839 = C830 * C334;
    const double C838 = C829 / C242;
    const double C837 = C828 / C242;
    const double C856 = C849 / C242;
    const double C855 = C847 / C242;
    const double C854 = C846 / C242;
    const double C853 = C844 / C242;
    const double C852 = C842 / C242;
    const double C851 = C839 / C242;
    const double C862 = C271 - C856;
    const double C861 = C266 - C855;
    const double C860 = C845 - C854;
    const double C859 = C843 - C853;
    const double C858 = C841 - C852;
    const double C857 = C838 - C851;
    const double C868 = C862 - C274;
    const double C867 = C861 - C271;
    const double C866 = C296 * C860;
    const double C865 = C294 * C859;
    const double C864 = C296 * C858;
    const double C863 = C294 * C857;
    const double C872 = C868 + C850;
    const double C871 = C867 + C848;
    const double C870 = C865 - C866;
    const double C869 = C837 + C863;
    const double C875 = C296 * C872;
    const double C874 = C294 * C871;
    const double C873 = C869 - C840;
    const double C877 = C874 - C875;
    const double C876 = C873 - C864;
    const double C1246 = C301 * C626;
    const double C1245 = C594 * C625;
    const double C1244 = C301 * C635;
    const double C1243 = C594 * C634;
    const double C1242 = C301 * C622;
    const double C1241 = C594 * C621;
    const double C1249 = C1245 - C357;
    const double C1248 = C601 + C1243;
    const double C1247 = C1241 - C345;
    const double C1252 = C1249 - C1246;
    const double C1251 = C1248 - C351;
    const double C1250 = C1247 - C1242;
    const double C1255 = C1252 - C384;
    const double C1254 = C1251 - C604;
    const double C1253 = C1250 - C378;
    const double C1256 = C1254 - C1244;
    const double C1257 = C1256 - C381;
    const double C1446 = C301 * C872;
    const double C1445 = C594 * C871;
    const double C1444 = C301 * C860;
    const double C1443 = C594 * C859;
    const double C1442 = C301 * C858;
    const double C1441 = C594 * C857;
    const double C1449 = C1445 - C1446;
    const double C1448 = C837 + C1443;
    const double C1447 = C1441 - C1442;
    const double C1450 = C1448 - C840;
    const double C1451 = C1450 - C1444;
    const double C1986 = C305 * C872;
    const double C1985 = C830 * C871;
    const double C1984 = C305 * C860;
    const double C1983 = C830 * C859;
    const double C1982 = C305 * C858;
    const double C1981 = C830 * C857;
    const double C1989 = C837 + C1985;
    const double C1988 = C1983 - C351;
    const double C1987 = C1981 - C345;
    const double C1992 = C1989 - C357;
    const double C1991 = C1988 - C1984;
    const double C1990 = C1987 - C1982;
    const double C1995 = C1992 - C840;
    const double C1994 = C1991 - C381;
    const double C1993 = C1990 - C378;
    const double C1996 = C1995 - C1986;
    const double C1997 = C1996 - C384;
    const double C3842 = C252 * C636;
    const double C3841 = C252 * C641;
    const double C3840 = C252 * C640;
    const double C3839 = C294 * C1449;
    const double C3838 = C294 * C1451;
    const double C3837 = C294 * C1447;
    const double C3836 = C252 * C871;
    const double C3835 = C1997 - C823;
    const double C3834 = C252 * C859;
    const double C3833 = C252 * C857;
    const double C3832 = C252 * C625;
    const double C3831 = C1449 - C587;
    const double C3830 = C252 * C1449;
    const double C3829 = C594 * C1997;
    const double C3828 = C252 * C634;
    const double C3827 = C252 * C1451;
    const double C3826 = C594 * C1994;
    const double C3825 = C252 * C621;
    const double C3824 = C252 * C1447;
    const double C3823 = C594 * C1993;
    const double C3822 = C252 * C382;
    const double C3821 = C877 - C3702;
    const double C3820 = C252 * C877;
    const double C3819 = C830 * C872;
    const double C3818 = C294 * C1997;
    const double C3817 = C252 * C379;
    const double C3816 = C252 * C870;
    const double C3815 = C830 * C860;
    const double C3814 = C294 * C1994;
    const double C3813 = C252 * C391;
    const double C3812 = C252 * C876;
    const double C3811 = C830 * C858;
    const double C3810 = C1619 * ae;
    const double C3809 = C294 * C1993;
    const double C3808 = C1618 * ae;
    const double C3807 = C251 * C871;
    const double C3806 = C594 * C872;
    const double C3805 = C594 * C1449;
    const double C3804 = C251 * C859;
    const double C3803 = C1451 - C823;
    const double C3802 = C594 * C860;
    const double C3801 = C1439 * ae;
    const double C3800 = C594 * C1451;
    const double C3799 = C1438 * ae;
    const double C3798 = C251 * C857;
    const double C3797 = C594 * C858;
    const double C3796 = C594 * C1447;
    const double C3795 = C251 * C625;
    const double C3794 = C251 * C634;
    const double C3793 = C1257 - C587;
    const double C3792 = C251 * C621;
    const double C3791 = C251 * C382;
    const double C3790 = C251 * C636;
    const double C3789 = C594 * C626;
    const double C3788 = C294 * C1255;
    const double C3787 = C251 * C379;
    const double C3786 = C641 - C3702;
    const double C3785 = C251 * C641;
    const double C3784 = C594 * C635;
    const double C3783 = C294 * C1257;
    const double C3782 = C251 * C391;
    const double C3781 = C251 * C640;
    const double C3780 = C594 * C622;
    const double C3779 = C1045 * ae;
    const double C3778 = C294 * C1253;
    const double C3777 = C1044 * ae;
    const double C3776 = C872 / C275;
    const double C3775 = C830 * C342;
    const double C3774 = C294 * C872;
    const double C3773 = C871 / C275;
    const double C3772 = C294 * C877;
    const double C3771 = C860 / C275;
    const double C3770 = C830 * C339;
    const double C3769 = C294 * C860;
    const double C3768 = C859 / C275;
    const double C3767 = C294 * C870;
    const double C3766 = C858 / C275;
    const double C3765 = C830 * C336;
    const double C3764 = C826 * ae;
    const double C3763 = C294 * C858;
    const double C3762 = C825 * ae;
    const double C3761 = C857 / C275;
    const double C3760 = C294 * C876;
    const double C3759 = C822 * ae;
    const double C3758 = C626 / C275;
    const double C3757 = C594 * C342;
    const double C3756 = C294 * C626;
    const double C3755 = C625 / C275;
    const double C3754 = C294 * C636;
    const double C3753 = C635 / C275;
    const double C3752 = C594 * C339;
    const double C3751 = C294 * C635;
    const double C3750 = C634 / C275;
    const double C3749 = C294 * C641;
    const double C3748 = C622 / C275;
    const double C3747 = C594 * C336;
    const double C3746 = C590 * ae;
    const double C3745 = C294 * C622;
    const double C3744 = C589 * ae;
    const double C3743 = C621 / C275;
    const double C3742 = C294 * C640;
    const double C3741 = C586 * ae;
    const double C3740 = C342 / C242;
    const double C3739 = C259 * C311;
    const double C3738 = C258 * C278;
    const double C3737 = C340 / C284;
    const double C3736 = C339 / C242;
    const double C3735 = C259 * C310;
    const double C3734 = C258 * C276;
    const double C3733 = C337 / C284;
    const double C3732 = C336 / C242;
    const double C3731 = C259 * C308;
    const double C3730 = C258 * C267;
    const double C3729 = C240 * ae;
    const double C3728 = C335 / C284;
    const double C3900 = C3835 - C3836;
    const double C3899 = C1994 - C3834;
    const double C3898 = C1993 - C3833;
    const double C3897 = C3831 - C3832;
    const double C3896 = C1451 - C3828;
    const double C3895 = C1447 - C3825;
    const double C3894 = C3821 - C3822;
    const double C3893 = C840 + C3819;
    const double C3892 = C870 - C3817;
    const double C3891 = C3815 - C3733;
    const double C3890 = C876 - C3813;
    const double C3889 = C3811 - C3728;
    const double C3888 = C3810 / C242;
    const double C3887 = C3808 / C242;
    const double C3886 = C1449 - C3807;
    const double C3885 = C3805 + C3773;
    const double C3884 = C3803 - C3804;
    const double C3883 = C840 + C3802;
    const double C3882 = C3801 / C242;
    const double C3881 = C3799 / C242;
    const double C3880 = C1447 - C3798;
    const double C3879 = C3796 + C3761;
    const double C3878 = C1255 - C3795;
    const double C3877 = C3793 - C3794;
    const double C3876 = C1253 - C3792;
    const double C3875 = C636 - C3791;
    const double C3874 = C3789 - C3737;
    const double C3873 = C3786 - C3787;
    const double C3872 = C604 + C3784;
    const double C3871 = C640 - C3782;
    const double C3870 = C3780 - C3728;
    const double C3869 = C3779 / C242;
    const double C3868 = C3777 / C242;
    const double C3867 = C3775 / C242;
    const double C3866 = C3772 + C3773;
    const double C3865 = C3770 / C242;
    const double C3864 = C3767 + C3768;
    const double C3863 = C3765 / C242;
    const double C3862 = C3764 / C242;
    const double C3861 = C840 + C3763;
    const double C3860 = C3762 / C242;
    const double C3859 = C3759 / C242;
    const double C3858 = C3757 / C242;
    const double C3857 = C3754 + C3755;
    const double C3856 = C3752 / C242;
    const double C3855 = C3749 + C3750;
    const double C3854 = C3747 / C242;
    const double C3853 = C3746 / C242;
    const double C3852 = C604 + C3745;
    const double C3851 = C3744 / C242;
    const double C3850 = C3741 / C242;
    const double C3849 = -C3740;
    const double C3848 = C3738 / C242;
    const double C3847 = -C3736;
    const double C3846 = C3734 / C242;
    const double C3845 = -C3732;
    const double C3844 = C3730 / C242;
    const double C3843 = C3729 / C242;
    const double C3920 = C3881 + C3837;
    const double C3919 = C3887 + C3826;
    const double C3918 = C3893 - C3737;
    const double C3917 = C3887 + C3809;
    const double C3916 = C3883 - C3862;
    const double C3915 = C3881 + C3800;
    const double C3914 = C3872 - C3733;
    const double C3913 = C3868 + C3778;
    const double C3912 = C274 - C3867;
    const double C3911 = C3861 - C3862;
    const double C3910 = C3859 + C3760;
    const double C3909 = C274 - C3856;
    const double C3908 = C3852 - C3853;
    const double C3907 = C3850 + C3742;
    const double C3906 = C3849 / C275;
    const double C3905 = C3848 + C3739;
    const double C3904 = C3847 / C275;
    const double C3903 = C3846 + C3735;
    const double C3902 = C3845 / C275;
    const double C3901 = C3844 + C3731;
    const double C3934 = C3920 - C3882;
    const double C3933 = C3919 - C3888;
    const double C3932 = C3918 - C3862;
    const double C3931 = C3917 - C3888;
    const double C3930 = C3915 + C3768;
    const double C3929 = C3914 - C3853;
    const double C3928 = C3913 - C3869;
    const double C3927 = C3912 - C3843;
    const double C3926 = C3910 + C3761;
    const double C3925 = C3909 - C3843;
    const double C3924 = C3907 + C3743;
    const double C3923 = C3905 * C333;
    const double C3922 = C3903 * C333;
    const double C3921 = C3901 * C333;
    const double C3943 = C3930 - C3882;
    const double C3942 = C305 * C3923;
    const double C3941 = C305 * C3922;
    const double C3940 = C305 * C3921;
    const double C3939 = C3926 - C3860;
    const double C3938 = C301 * C3923;
    const double C3937 = C301 * C3922;
    const double C3936 = C301 * C3921;
    const double C3935 = C3924 - C3851;
    const double C3949 = C3942 / C242;
    const double C3948 = C3941 / C242;
    const double C3947 = C3940 / C242;
    const double C3946 = C3938 / C242;
    const double C3945 = C3937 / C242;
    const double C3944 = C3936 / C242;
    const double C3955 = C3927 + C3949;
    const double C3954 = C3948 - C3865;
    const double C3953 = C3947 - C3863;
    const double C3952 = C3946 - C3858;
    const double C3951 = C3925 + C3945;
    const double C3950 = C3944 - C3854;
    const double C3970 = C305 * C3955;
    const double C3969 = C305 * C3954;
    const double C3968 = C305 * C3953;
    const double C3967 = C301 * C3955;
    const double C3966 = C301 * C3954;
    const double C3965 = C301 * C3953;
    const double C3964 = C301 * C3952;
    const double C3963 = C301 * C3951;
    const double C3962 = C301 * C3950;
    const double C3961 = C296 * C3955;
    const double C3960 = C296 * C3954;
    const double C3959 = C296 * C3953;
    const double C3958 = C296 * C3952;
    const double C3957 = C296 * C3951;
    const double C3956 = C296 * C3950;
    const double C3985 = C3932 - C3970;
    const double C3984 = C3891 - C3969;
    const double C3983 = C3889 - C3968;
    const double C3982 = C3806 - C3967;
    const double C3981 = C3916 - C3966;
    const double C3980 = C3797 - C3965;
    const double C3979 = C3874 - C3964;
    const double C3978 = C3929 - C3963;
    const double C3977 = C3870 - C3962;
    const double C3976 = C3774 - C3961;
    const double C3975 = C3769 - C3960;
    const double C3974 = C3911 - C3959;
    const double C3973 = C3756 - C3958;
    const double C3972 = C3751 - C3957;
    const double C3971 = C3908 - C3956;
    const double C4003 = C296 * C3982;
    const double C4002 = C296 * C3981;
    const double C4001 = C296 * C3980;
    const double C4000 = C3985 - C3906;
    const double C3999 = C3984 - C3904;
    const double C3998 = C3983 - C3902;
    const double C3997 = C301 * C3982;
    const double C3996 = C301 * C3981;
    const double C3995 = C301 * C3980;
    const double C3994 = C3979 - C3906;
    const double C3993 = C3978 - C3904;
    const double C3992 = C3977 - C3902;
    const double C3991 = C296 * C3976;
    const double C3990 = C296 * C3975;
    const double C3989 = C296 * C3974;
    const double C3988 = C296 * C3973;
    const double C3987 = C296 * C3972;
    const double C3986 = C296 * C3971;
    const double C4024 = C3839 - C4003;
    const double C4023 = C3838 - C4002;
    const double C4022 = C3934 - C4001;
    const double C4021 = C301 * C4000;
    const double C4020 = C301 * C3999;
    const double C4019 = C301 * C3998;
    const double C4018 = C296 * C4000;
    const double C4017 = C296 * C3999;
    const double C4016 = C296 * C3998;
    const double C4015 = C3885 - C3997;
    const double C4014 = C3943 - C3996;
    const double C4013 = C3879 - C3995;
    const double C4012 = C296 * C3994;
    const double C4011 = C296 * C3993;
    const double C4010 = C296 * C3992;
    const double C4009 = C3866 - C3991;
    const double C4008 = C3864 - C3990;
    const double C4007 = C3939 - C3989;
    const double C4006 = C3857 - C3988;
    const double C4005 = C3855 - C3987;
    const double C4004 = C3935 - C3986;
    const double C4045 = C4024 - C586;
    const double C4044 = C4023 - C3841;
    const double C4043 = C4022 - C3840;
    const double C4042 = C3829 - C4021;
    const double C4041 = C3933 - C4020;
    const double C4040 = C3823 - C4019;
    const double C4039 = C3818 - C4018;
    const double C4038 = C3814 - C4017;
    const double C4037 = C3931 - C4016;
    const double C4036 = C4015 - C3776;
    const double C4035 = C4014 - C3771;
    const double C4034 = C4013 - C3766;
    const double C4033 = C3788 - C4012;
    const double C4032 = C3783 - C4011;
    const double C4031 = C3928 - C4010;
    const double C4030 = C4009 - C3776;
    const double C4029 = C4008 - C3771;
    const double C4028 = C4007 - C3766;
    const double C4027 = C4006 - C3758;
    const double C4026 = C4005 - C3753;
    const double C4025 = C4004 - C3748;
    const double C4055 = C4045 - C3842;
    const double C4054 = C4042 - C1438;
    const double C4053 = C4041 - C3827;
    const double C4052 = C4040 - C3824;
    const double C4051 = C4039 - C822;
    const double C4050 = C4038 - C3816;
    const double C4049 = C4037 - C3812;
    const double C4048 = C4033 - C3790;
    const double C4047 = C4032 - C586;
    const double C4046 = C4031 - C3781;
    const double C4058 = C4054 - C3830;
    const double C4057 = C4051 - C3820;
    const double C4056 = C4047 - C3785;
    const double gx200100 =
        (C232 * ae) / C242 + C294 * C405 + C391 / C242 - (C238 * ae) / C242 -
        C296 * (C273 + C294 * C392 - C3728 - (C3723 * ae) / C242 -
                C296 * (C274 - (C294 * C336) / C242 - C3843 +
                        (C296 * C3921) / C242) -
                C3902) -
        C392 / C242 - C232 - C248 * C405 - C241 -
        C248 * (C405 - C3702 - C248 * C391);
    const double gx200010 =
        C4025 - C586 - C248 * C640 - C591 - C248 * (C640 - C587 - C248 * C621);
    const double gx200001 =
        C4028 - C822 - C248 * C876 - C827 - C248 * (C876 - C823 - C248 * C857);
    const double gx020100 = C4046 - C251 * C3871;
    const double gx020010 = C594 * C1253 + C621 / C242 - C301 * C3992 -
                            C622 / C242 - C251 * C1253 - C251 * C3876;
    const double gx020001 = C4034 - C251 * C1447 - C251 * C3880;
    const double gx002100 = C4049 - C252 * C3890;
    const double gx002010 = C4052 - C252 * C3895;
    const double gx002001 = C830 * C1993 + C857 / C242 - C305 * C3998 -
                            C858 / C242 - C252 * C1993 - C252 * C3898;
    const double gx110100 = C4025 - C251 * C405 - C1046 - C248 * C3871;
    const double gx110010 = C4046 - C1240 - C248 * C3876;
    const double gx110001 = C4022 - C251 * C876 - C1440 - C248 * C3880;
    const double gx101100 = C4028 - C252 * C405 - C1620 - C248 * C3890;
    const double gx101010 = C4043 - C1786 - C248 * C3895;
    const double gx101001 = C4049 - C1980 - C248 * C3898;
    const double gx011100 = C4043 - C251 * C3890;
    const double gx011010 = C4034 - C252 * C1253 - C251 * C3895;
    const double gx011001 = C4052 - C251 * C3898;
    gx[(Ai + 0) * matrix_size + Bi + 0] += std::sqrt(3.0) * gx110100;
    gx[(Ai + 0) * matrix_size + Bi + 1] += std::sqrt(3.0) * gx110010;
    gx[(Ai + 0) * matrix_size + Bi + 2] += std::sqrt(3.0) * gx110001;
    gx[(Ai + 1) * matrix_size + Bi + 0] += std::sqrt(3.0) * gx011100;
    gx[(Ai + 1) * matrix_size + Bi + 1] += std::sqrt(3.0) * gx011010;
    gx[(Ai + 1) * matrix_size + Bi + 2] += std::sqrt(3.0) * gx011001;
    gx[(Ai + 2) * matrix_size + Bi + 0] +=
        -0.5 * gx200100 - 0.5 * gx020100 + gx002100;
    gx[(Ai + 2) * matrix_size + Bi + 1] +=
        -0.5 * gx200010 - 0.5 * gx020010 + gx002010;
    gx[(Ai + 2) * matrix_size + Bi + 2] +=
        -0.5 * gx200001 - 0.5 * gx020001 + gx002001;
    gx[(Ai + 3) * matrix_size + Bi + 0] += std::sqrt(3.0) * gx101100;
    gx[(Ai + 3) * matrix_size + Bi + 1] += std::sqrt(3.0) * gx101010;
    gx[(Ai + 3) * matrix_size + Bi + 2] += std::sqrt(3.0) * gx101001;
    gx[(Ai + 4) * matrix_size + Bi + 0] +=
        std::sqrt(0.75) * gx200100 - std::sqrt(0.75) * gx020100;
    gx[(Ai + 4) * matrix_size + Bi + 1] +=
        std::sqrt(0.75) * gx200010 - std::sqrt(0.75) * gx020010;
    gx[(Ai + 4) * matrix_size + Bi + 2] +=
        std::sqrt(0.75) * gx200001 - std::sqrt(0.75) * gx020001;
    const double gy200100 =
        C294 * C400 + C379 / C242 -
        C296 * (C294 * C380 - C3733 -
                C296 * ((C296 * C3922) / C242 - (C294 * C339) / C242) - C3904) -
        C380 / C242 - C248 * C400 - C248 * (C400 - C248 * C379);
    const double gy200010 = C4026 - C248 * C641 - C248 * (C641 - C248 * C634);
    const double gy200001 = C4029 - C248 * C870 - C248 * (C870 - C248 * C859);
    const double gy020100 = C4056 - C1046 - C251 * C3873;
    const double gy020010 = C3868 + C594 * C1257 + C634 / C242 - C3869 -
                            C301 * C3993 - C635 / C242 - C1044 - C251 * C1257 -
                            C1240 - C251 * C3877;
    const double gy020001 = C4035 - C1438 - C251 * C1451 - C1440 - C251 * C3884;
    const double gy002100 = C4050 - C252 * C3892;
    const double gy002010 = C4053 - C252 * C3896;
    const double gy002001 = C830 * C1994 + C859 / C242 - C305 * C3999 -
                            C860 / C242 - C252 * C1994 - C252 * C3899;
    const double gy110100 = C4026 - C232 - C251 * C400 - C248 * C3873;
    const double gy110010 = C4056 - C248 * C3877;
    const double gy110001 = C4023 - C822 - C251 * C870 - C248 * C3884;
    const double gy101100 = C4029 - C252 * C400 - C248 * C3892;
    const double gy101010 = C4044 - C248 * C3896;
    const double gy101001 = C4050 - C248 * C3899;
    const double gy011100 = C4044 - C1620 - C251 * C3892;
    const double gy011010 = C4035 - C252 * C1257 - C1786 - C251 * C3896;
    const double gy011001 = C4053 - C1980 - C251 * C3899;
    gy[(Ai + 0) * matrix_size + Bi + 0] += std::sqrt(3.0) * gy110100;
    gy[(Ai + 0) * matrix_size + Bi + 1] += std::sqrt(3.0) * gy110010;
    gy[(Ai + 0) * matrix_size + Bi + 2] += std::sqrt(3.0) * gy110001;
    gy[(Ai + 1) * matrix_size + Bi + 0] += std::sqrt(3.0) * gy011100;
    gy[(Ai + 1) * matrix_size + Bi + 1] += std::sqrt(3.0) * gy011010;
    gy[(Ai + 1) * matrix_size + Bi + 2] += std::sqrt(3.0) * gy011001;
    gy[(Ai + 2) * matrix_size + Bi + 0] +=
        -0.5 * gy200100 - 0.5 * gy020100 + gy002100;
    gy[(Ai + 2) * matrix_size + Bi + 1] +=
        -0.5 * gy200010 - 0.5 * gy020010 + gy002010;
    gy[(Ai + 2) * matrix_size + Bi + 2] +=
        -0.5 * gy200001 - 0.5 * gy020001 + gy002001;
    gy[(Ai + 3) * matrix_size + Bi + 0] += std::sqrt(3.0) * gy101100;
    gy[(Ai + 3) * matrix_size + Bi + 1] += std::sqrt(3.0) * gy101010;
    gy[(Ai + 3) * matrix_size + Bi + 2] += std::sqrt(3.0) * gy101001;
    gy[(Ai + 4) * matrix_size + Bi + 0] +=
        std::sqrt(0.75) * gy200100 - std::sqrt(0.75) * gy020100;
    gy[(Ai + 4) * matrix_size + Bi + 1] +=
        std::sqrt(0.75) * gy200010 - std::sqrt(0.75) * gy020010;
    gy[(Ai + 4) * matrix_size + Bi + 2] +=
        std::sqrt(0.75) * gy200001 - std::sqrt(0.75) * gy020001;
    const double gz200100 =
        C294 * C401 + C382 / C242 -
        C296 * (C294 * C383 - C3737 -
                C296 * ((C296 * C3923) / C242 - (C294 * C342) / C242) - C3906) -
        C383 / C242 - C248 * C401 - C248 * (C401 - C248 * C382);
    const double gz200010 = C4027 - C248 * C636 - C248 * (C636 - C248 * C625);
    const double gz200001 = C4030 - C248 * C877 - C248 * (C877 - C248 * C871);
    const double gz020100 = C4048 - C251 * C3875;
    const double gz020010 = C594 * C1255 + C625 / C242 - C301 * C3994 -
                            C626 / C242 - C251 * C1255 - C251 * C3878;
    const double gz020001 = C4036 - C251 * C1449 - C251 * C3886;
    const double gz002100 = C4057 - C1620 - C252 * C3894;
    const double gz002010 = C4058 - C1786 - C252 * C3897;
    const double gz002001 = C3887 + C830 * C1997 + C871 / C242 - C3888 -
                            C305 * C4000 - C872 / C242 - C1618 - C252 * C1997 -
                            C1980 - C252 * C3900;
    const double gz110100 = C4027 - C251 * C401 - C248 * C3875;
    const double gz110010 = C4048 - C248 * C3878;
    const double gz110001 = C4024 - C251 * C877 - C248 * C3886;
    const double gz101100 = C4030 - C232 - C252 * C401 - C248 * C3894;
    const double gz101010 = C4055 - C248 * C3897;
    const double gz101001 = C4057 - C248 * C3900;
    const double gz011100 = C4055 - C251 * C3894;
    const double gz011010 = C4036 - C1044 - C252 * C1255 - C251 * C3897;
    const double gz011001 = C4058 - C251 * C3900;
    gz[(Ai + 0) * matrix_size + Bi + 0] += std::sqrt(3.0) * gz110100;
    gz[(Ai + 0) * matrix_size + Bi + 1] += std::sqrt(3.0) * gz110010;
    gz[(Ai + 0) * matrix_size + Bi + 2] += std::sqrt(3.0) * gz110001;
    gz[(Ai + 1) * matrix_size + Bi + 0] += std::sqrt(3.0) * gz011100;
    gz[(Ai + 1) * matrix_size + Bi + 1] += std::sqrt(3.0) * gz011010;
    gz[(Ai + 1) * matrix_size + Bi + 2] += std::sqrt(3.0) * gz011001;
    gz[(Ai + 2) * matrix_size + Bi + 0] +=
        -0.5 * gz200100 - 0.5 * gz020100 + gz002100;
    gz[(Ai + 2) * matrix_size + Bi + 1] +=
        -0.5 * gz200010 - 0.5 * gz020010 + gz002010;
    gz[(Ai + 2) * matrix_size + Bi + 2] +=
        -0.5 * gz200001 - 0.5 * gz020001 + gz002001;
    gz[(Ai + 3) * matrix_size + Bi + 0] += std::sqrt(3.0) * gz101100;
    gz[(Ai + 3) * matrix_size + Bi + 1] += std::sqrt(3.0) * gz101010;
    gz[(Ai + 3) * matrix_size + Bi + 2] += std::sqrt(3.0) * gz101001;
    gz[(Ai + 4) * matrix_size + Bi + 0] +=
        std::sqrt(0.75) * gz200100 - std::sqrt(0.75) * gz020100;
    gz[(Ai + 4) * matrix_size + Bi + 1] +=
        std::sqrt(0.75) * gz200010 - std::sqrt(0.75) * gz020010;
    gz[(Ai + 4) * matrix_size + Bi + 2] +=
        std::sqrt(0.75) * gz200001 - std::sqrt(0.75) * gz020001;
}
