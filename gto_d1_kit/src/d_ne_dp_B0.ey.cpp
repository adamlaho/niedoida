/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

#include "gto_d1_kit/gto_d1.hpp"
#include <cmath>

namespace {
    static const double Pi = M_PI;
}

void vne_gradient_21_2(double ae,
                       double be,
                       double xA,
                       double yA,
                       double zA,
                       double xB,
                       double yB,
                       double zB,
                       double xC,
                       double yC,
                       double zC,
                       const double* bs,
                       double* const gx,
                       double* const gy,
                       double* const gz,
                       std::size_t matrix_size,
                       std::size_t Ai,
                       std::size_t Bi)
{
    const double C3530 = be * xB;
    const double C3529 = ae * xA;
    const double C3528 = bs[1];
    const double C3527 = 2. * Pi;
    const double C3526 = ae + be;
    const double C3525 = ae * be;
    const double C3524 = zA - zB;
    const double C3523 = yA - yB;
    const double C3522 = xA - xB;
    const double C3521 = bs[0];
    const double C3535 = C3529 + C3530;
    const double C3534 = be * C3522;
    const double C3533 = std::pow(C3524, 2);
    const double C3532 = std::pow(C3523, 2);
    const double C3531 = std::pow(C3522, 2);
    const double C3537 = C3535 / C3526;
    const double C3536 = C3531 + C3532;
    const double C3539 = C3537 - xC;
    const double C3538 = C3536 + C3533;
    const double C3540 = C3538 * C3525;
    const double C3541 = C3540 / C3526;
    const double C3542 = -C3541;
    const double C3543 = std::exp(C3542);
    const double C3544 = C3543 * C3527;
    const double C3546 = C3528 * C3544;
    const double C3545 = C3521 * C3544;
    const double C3548 = C3539 * C3546;
    const double C3547 = C3545 * C3534;
    const double C3550 = C3548 / C3526;
    const double C3549 = C3547 / C3526;
    const double C3551 = -C3549;
    const double C3552 = C3551 / C3526;
    const double C3553 = C3552 - C3550;
    const double C3561 = C3546 * C3534;
    const double C3560 = bs[2];
    const double C3563 = C3561 / C3526;
    const double C3562 = C3560 * C3544;
    const double C3565 = C3539 * C3562;
    const double C3564 = -C3563;
    const double C3567 = C3565 / C3526;
    const double C3566 = C3564 / C3526;
    const double C3568 = C3566 - C3567;
    const double C3573 = C3522 * C3545;
    const double C3574 = C3573 / C3526;
    const double C3575 = C3553 + C3574;
    const double C3579 = C3522 * C3546;
    const double C3580 = C3579 / C3526;
    const double C3581 = C3568 + C3580;
    const double C3593 = be * yB;
    const double C3592 = ae * yA;
    const double C3591 = be * C3523;
    const double C3595 = C3592 + C3593;
    const double C3594 = C3545 * C3591;
    const double C3597 = C3595 / C3526;
    const double C3596 = C3594 / C3526;
    const double C3599 = C3597 - yC;
    const double C3598 = -C3596;
    const double C3601 = C3599 * C3546;
    const double C3600 = C3598 / C3526;
    const double C3602 = C3601 / C3526;
    const double C3603 = C3600 - C3602;
    const double C3606 = C3599 * C3562;
    const double C3605 = C3546 * C3591;
    const double C3608 = C3606 / C3526;
    const double C3607 = C3605 / C3526;
    const double C3609 = -C3607;
    const double C3610 = C3609 / C3526;
    const double C3611 = C3610 - C3608;
    const double C3615 = C3523 * C3545;
    const double C3616 = C3615 / C3526;
    const double C3617 = C3603 + C3616;
    const double C3619 = C3523 * C3546;
    const double C3620 = C3619 / C3526;
    const double C3621 = C3611 + C3620;
    const double C3626 = be * zB;
    const double C3625 = ae * zA;
    const double C3624 = be * C3524;
    const double C3628 = C3625 + C3626;
    const double C3627 = C3545 * C3624;
    const double C3630 = C3628 / C3526;
    const double C3629 = C3627 / C3526;
    const double C3632 = C3630 - zC;
    const double C3631 = -C3629;
    const double C3634 = C3632 * C3546;
    const double C3633 = C3631 / C3526;
    const double C3635 = C3634 / C3526;
    const double C3636 = C3633 - C3635;
    const double C3639 = C3632 * C3562;
    const double C3638 = C3546 * C3624;
    const double C3641 = C3639 / C3526;
    const double C3640 = C3638 / C3526;
    const double C3642 = -C3640;
    const double C3643 = C3642 / C3526;
    const double C3644 = C3643 - C3641;
    const double C3677 = C3524 * C3636;
    const double C3676 = C3636 * C3624;
    const double C3675 = C3562 * C3591;
    const double C3674 = C3523 * C3603;
    const double C3673 = C3603 * C3591;
    const double C3672 = C3524 * C3546;
    const double C3671 = C3524 * C3545;
    const double C3670 = be * zB;
    const double C3669 = ae * zA;
    const double C3668 = be * C3524;
    const double C3667 = C3523 * C3562;
    const double C3666 = C3523 * C3546;
    const double C3665 = C3523 * C3545;
    const double C3664 = be * yB;
    const double C3663 = ae * yA;
    const double C3662 = be * C3523;
    const double C3661 = C3522 * C3562;
    const double C3660 = bs[3];
    const double C3659 = C3562 * C3534;
    const double C3658 = C3562 / C3526;
    const double C3657 = C3522 * C3546;
    const double C3656 = C3522 * C3545;
    const double C3655 = C3522 * C3553;
    const double C3654 = bs[2];
    const double C3653 = C3546 * C3534;
    const double C3652 = C3553 * C3534;
    const double C3651 = 2. * C3526;
    const double C3650 = C3546 / C3526;
    const double C3649 = C3545 / C3526;
    const double C3697 = C3676 / C3526;
    const double C3696 = C3675 / C3526;
    const double C3695 = C3673 / C3526;
    const double C3694 = C3672 / C3526;
    const double C3693 = C3671 / C3526;
    const double C3692 = C3669 + C3670;
    const double C3691 = C3667 / C3526;
    const double C3690 = C3666 / C3526;
    const double C3689 = C3665 / C3526;
    const double C3688 = C3663 + C3664;
    const double C3687 = C3661 / C3526;
    const double C3686 = C3660 * C3544;
    const double C3685 = C3659 / C3526;
    const double C3684 = C3650 - C3658;
    const double C3683 = C3657 / C3526;
    const double C3682 = C3656 / C3526;
    const double C3681 = C3654 * C3544;
    const double C3680 = C3653 / C3526;
    const double C3679 = C3652 / C3526;
    const double C3678 = C3649 - C3650;
    const double C3710 = C3611 + C3690;
    const double C3709 = C3599 * C3686;
    const double C3708 = -C3696;
    const double C3707 = C3692 / C3526;
    const double C3706 = C3688 / C3526;
    const double C3705 = C3568 + C3683;
    const double C3704 = C3539 * C3686;
    const double C3703 = -C3685;
    const double C3702 = C3684 / C3651;
    const double C3701 = C3553 + C3682;
    const double C3700 = C3539 * C3681;
    const double C3699 = -C3680;
    const double C3698 = C3678 / C3651;
    const double C3718 = C3709 / C3526;
    const double C3717 = C3708 / C3526;
    const double C3716 = C3707 - zC;
    const double C3715 = C3706 - yC;
    const double C3714 = C3704 / C3526;
    const double C3713 = C3703 / C3526;
    const double C3712 = C3700 / C3526;
    const double C3711 = C3699 / C3526;
    const double C3721 = C3717 - C3718;
    const double C3720 = C3713 - C3714;
    const double C3719 = C3711 - C3712;
    const double C3722 = C3720 + C3687;
    const double C232 = C3698 - (C3679 + C3539 * C3719) + C3655 + C3522 * C3701;
    const double C236 = C3719 + C3683;
    const double C237 = C3681 / C3526;
    const double C238 = C3702 - ((C3568 * C3534) / C3526 + C3539 * C3720) +
                        C3522 * C3568 + C3522 * C3705;
    const double C240 = C3686 / C3526;
    const double C241 = C3698 - (C3679 + C3539 * C3568) + C3655;
    const double C587 =
        C3523 * C3575 - ((C3575 * C3662) / C3526 + C3715 * C3705);
    const double C588 =
        (-(C3545 * C3662) / C3526) / C3526 - (C3715 * C3546) / C3526 + C3689;
    const double C589 =
        (-(C3546 * C3662) / C3526) / C3526 - (C3715 * C3562) / C3526 + C3690;
    const double C590 =
        C3523 * C3581 - ((C3581 * C3662) / C3526 + C3715 * C3722);
    const double C591 =
        (-(C3562 * C3662) / C3526) / C3526 - (C3715 * C3686) / C3526 + C3691;
    const double C592 =
        C3523 * C3553 - ((C3553 * C3662) / C3526 + C3715 * C3568);
    const double C822 =
        C3524 * C3575 - ((C3575 * C3668) / C3526 + C3716 * C3581);
    const double C823 =
        (-(C3545 * C3668) / C3526) / C3526 - (C3716 * C3546) / C3526 + C3693;
    const double C824 =
        (-(C3546 * C3668) / C3526) / C3526 - (C3716 * C3562) / C3526 + C3694;
    const double C825 =
        C3524 * C3581 - ((C3581 * C3668) / C3526 + C3716 * C3722);
    const double C826 = (-(C3562 * C3668) / C3526) / C3526 -
                        (C3716 * C3686) / C3526 + (C3524 * C3562) / C3526;
    const double C827 =
        C3524 * C3553 - ((C3553 * C3668) / C3526 + C3716 * C3568);
    const double C1043 = C3698 -
                         (C3695 + C3599 * ((-(C3546 * C3591) / C3526) / C3526 -
                                           (C3599 * C3562) / C3526)) +
                         C3674 + C3523 * (C3603 + C3689);
    const double C1044 = C3702 - ((C3611 * C3591) / C3526 + C3599 * C3721) +
                         C3523 * C3611 + C3523 * C3710;
    const double C1045 = -((C3575 * C3591) / C3526 + C3599 * C3581);
    const double C1239 = C3698 - (C3695 + C3599 * C3611) + C3674;
    const double C1437 =
        C3524 * C3617 - ((C3617 * C3668) / C3526 + C3716 * C3710);
    const double C1438 =
        C3524 * C3621 - ((C3621 * C3668) / C3526 + C3716 * (C3721 + C3691));
    const double C1439 =
        C3524 * C3603 - ((C3603 * C3668) / C3526 + C3716 * C3611);
    const double C1617 = C3698 -
                         (C3697 + C3632 * ((-(C3546 * C3624) / C3526) / C3526 -
                                           (C3632 * C3562) / C3526)) +
                         C3677 + C3524 * (C3636 + C3693);
    const double C1618 =
        C3702 -
        ((C3644 * C3624) / C3526 + C3632 * ((-(C3562 * C3624) / C3526) / C3526 -
                                            (C3632 * C3686) / C3526)) +
        C3524 * C3644 + C3524 * (C3644 + C3694);
    const double C1619 = -((C3575 * C3624) / C3526 + C3632 * C3581);
    const double C1785 = -((C3617 * C3624) / C3526 + C3632 * C3621);
    const double C1979 = C3698 - (C3697 + C3632 * C3644) + C3677;
    const double C261 = be * zB;
    const double C260 = ae * zA;
    const double C259 = be * yB;
    const double C258 = ae * yA;
    const double C257 = bs[4];
    const double C256 = bs[3];
    const double C255 = C237 * be;
    const double C254 = C236 * be;
    const double C253 = bs[2];
    const double C252 = C3650 * be;
    const double C251 = 4 * Pi;
    const double C250 = zA - zB;
    const double C249 = yA - yB;
    const double C248 = ae * be;
    const double C247 = xA - xB;
    const double C246 = bs[0];
    const double C245 = bs[1];
    const double C244 = be * xB;
    const double C243 = ae * xA;
    const double C242 = ae + be;
    const double C276 = C250 * C248;
    const double C275 = C260 + C261;
    const double C274 = C249 * C248;
    const double C273 = C258 + C259;
    const double C272 = 2 * C242;
    const double C271 = C255 / C242;
    const double C270 = C254 / C242;
    const double C269 = std::pow(C242, 2);
    const double C268 = C252 / C242;
    const double C267 = std::pow(C250, 2);
    const double C266 = std::pow(C249, 2);
    const double C265 = std::pow(C247, 2);
    const double C264 = C247 * C248;
    const double C263 = C243 + C244;
    const double C262 = be / C242;
    const double C291 = C253 * C276;
    const double C290 = C246 * C276;
    const double C289 = C245 * C276;
    const double C288 = C275 / C242;
    const double C287 = C253 * C274;
    const double C286 = C246 * C274;
    const double C285 = C245 * C274;
    const double C284 = C273 / C242;
    const double C283 = C253 * C264;
    const double C282 = 2 * C269;
    const double C281 = C245 * C264;
    const double C280 = C265 + C266;
    const double C279 = C246 * C264;
    const double C278 = C263 / C242;
    const double C277 = C262 - 1;
    const double C308 = C291 / C242;
    const double C307 = C290 / C242;
    const double C306 = C289 / C242;
    const double C305 = C288 - zC;
    const double C304 = C287 / C242;
    const double C303 = C286 / C242;
    const double C302 = C285 / C242;
    const double C301 = C284 - yC;
    const double C300 = C283 / C242;
    const double C299 = C277 * C3650;
    const double C298 = C281 / C242;
    const double C297 = C280 + C267;
    const double C296 = C279 / C242;
    const double C295 = C278 - xC;
    const double C294 = C277 * C3649;
    const double C293 = C277 * C3701;
    const double C292 = C278 - xB;
    const double C312 = be * C305;
    const double C311 = be * C301;
    const double C310 = C297 * C248;
    const double C309 = be * C295;
    const double C322 = C256 * C312;
    const double C321 = C245 * C312;
    const double C320 = C253 * C312;
    const double C319 = C256 * C311;
    const double C318 = C245 * C311;
    const double C317 = C253 * C311;
    const double C316 = C256 * C309;
    const double C315 = C253 * C309;
    const double C314 = C310 / C242;
    const double C313 = C245 * C309;
    const double C332 = C322 - C308;
    const double C331 = C321 - C307;
    const double C330 = C320 - C306;
    const double C329 = C319 - C304;
    const double C328 = C318 - C303;
    const double C327 = C317 - C302;
    const double C326 = C316 - C300;
    const double C325 = C315 - C298;
    const double C324 = -C314;
    const double C323 = C313 - C296;
    const double C333 = std::exp(C324);
    const double C334 = C333 * C251;
    const double C343 = C332 * C334;
    const double C342 = C331 * C334;
    const double C341 = C330 * C334;
    const double C340 = C329 * C334;
    const double C339 = C328 * C334;
    const double C338 = C327 * C334;
    const double C337 = C326 * C334;
    const double C336 = C325 * C334;
    const double C335 = C323 * C334;
    const double C361 = C341 / C242;
    const double C360 = C292 * C341;
    const double C359 = C295 * C343;
    const double C358 = C342 / C282;
    const double C357 = C292 * C342;
    const double C356 = C295 * C341;
    const double C355 = C338 / C242;
    const double C354 = C292 * C338;
    const double C353 = C295 * C340;
    const double C352 = C339 / C282;
    const double C351 = C292 * C339;
    const double C350 = C295 * C338;
    const double C349 = C336 / C242;
    const double C348 = C295 * C337;
    const double C347 = C292 * C336;
    const double C346 = C335 / C282;
    const double C345 = C295 * C336;
    const double C344 = C292 * C335;
    const double C376 = -C361;
    const double C375 = C360 / C242;
    const double C374 = C359 / C242;
    const double C373 = C357 / C242;
    const double C372 = C356 / C242;
    const double C371 = -C355;
    const double C370 = C354 / C242;
    const double C369 = C353 / C242;
    const double C368 = C351 / C242;
    const double C367 = C350 / C242;
    const double C366 = -C349;
    const double C365 = C348 / C242;
    const double C364 = C347 / C242;
    const double C363 = C345 / C242;
    const double C362 = C344 / C242;
    const double C385 = C376 / C272;
    const double C384 = C374 - C375;
    const double C383 = C372 - C373;
    const double C382 = C371 / C272;
    const double C381 = C369 - C370;
    const double C380 = C367 - C368;
    const double C379 = C366 / C272;
    const double C378 = C299 - C364;
    const double C377 = C294 - C362;
    const double C391 = C295 * C384;
    const double C390 = C292 * C383;
    const double C389 = C295 * C381;
    const double C388 = C292 * C380;
    const double C387 = C378 - C271;
    const double C386 = C377 - C268;
    const double C395 = C390 - C358;
    const double C394 = C388 - C352;
    const double C393 = C387 + C365;
    const double C392 = C386 + C363;
    const double C399 = C395 - C391;
    const double C398 = C394 - C389;
    const double C397 = C295 * C393;
    const double C396 = C292 * C392;
    const double C402 = C399 - C385;
    const double C401 = C398 - C382;
    const double C400 = C293 + C396;
    const double C403 = C400 - C346;
    const double C404 = C403 - C270;
    const double C405 = C404 - C397;
    const double C406 = C405 - C379;
    const double C601 = C301 * C343;
    const double C600 = C301 * C341;
    const double C599 = C301 * C340;
    const double C598 = C301 * C338;
    const double C597 = C301 * C337;
    const double C596 = C589 * be;
    const double C595 = C284 - yB;
    const double C594 = C301 * C336;
    const double C593 = C277 * C588;
    const double C614 = C595 * C341;
    const double C613 = C601 / C242;
    const double C612 = C595 * C342;
    const double C611 = C600 / C242;
    const double C610 = C599 / C242;
    const double C609 = C595 * C338;
    const double C608 = C598 / C242;
    const double C607 = C595 * C339;
    const double C606 = C595 * C336;
    const double C605 = C597 / C242;
    const double C604 = C596 / C242;
    const double C603 = C595 * C335;
    const double C602 = C594 / C242;
    const double C620 = C614 / C242;
    const double C619 = C612 / C242;
    const double C618 = C609 / C242;
    const double C617 = C607 / C242;
    const double C616 = C606 / C242;
    const double C615 = C603 / C242;
    const double C626 = C613 - C620;
    const double C625 = C611 - C619;
    const double C624 = C299 - C618;
    const double C623 = C294 - C617;
    const double C622 = C605 - C616;
    const double C621 = C602 - C615;
    const double C632 = C295 * C626;
    const double C631 = C292 * C625;
    const double C630 = C624 - C271;
    const double C629 = C623 - C268;
    const double C628 = C295 * C622;
    const double C627 = C292 * C621;
    const double C636 = C631 - C632;
    const double C635 = C630 + C610;
    const double C634 = C629 + C608;
    const double C633 = C593 + C627;
    const double C639 = C295 * C635;
    const double C638 = C292 * C634;
    const double C637 = C633 - C604;
    const double C641 = C638 - C639;
    const double C640 = C637 - C628;
    const double C836 = C305 * C343;
    const double C835 = C305 * C341;
    const double C834 = C305 * C340;
    const double C833 = C305 * C338;
    const double C832 = C305 * C337;
    const double C831 = C824 * be;
    const double C830 = C288 - zB;
    const double C829 = C305 * C336;
    const double C828 = C277 * C823;
    const double C849 = C836 / C242;
    const double C848 = C830 * C341;
    const double C847 = C835 / C242;
    const double C846 = C830 * C342;
    const double C845 = C830 * C338;
    const double C844 = C834 / C242;
    const double C843 = C830 * C339;
    const double C842 = C833 / C242;
    const double C841 = C830 * C336;
    const double C840 = C832 / C242;
    const double C839 = C831 / C242;
    const double C838 = C830 * C335;
    const double C837 = C829 / C242;
    const double C855 = C848 / C242;
    const double C854 = C846 / C242;
    const double C853 = C845 / C242;
    const double C852 = C843 / C242;
    const double C851 = C841 / C242;
    const double C850 = C838 / C242;
    const double C861 = C299 - C855;
    const double C860 = C294 - C854;
    const double C859 = C844 - C853;
    const double C858 = C842 - C852;
    const double C857 = C840 - C851;
    const double C856 = C837 - C850;
    const double C867 = C861 - C271;
    const double C866 = C860 - C268;
    const double C865 = C295 * C859;
    const double C864 = C292 * C858;
    const double C863 = C295 * C857;
    const double C862 = C292 * C856;
    const double C871 = C867 + C849;
    const double C870 = C866 + C847;
    const double C869 = C864 - C865;
    const double C868 = C828 + C862;
    const double C874 = C295 * C871;
    const double C873 = C292 * C870;
    const double C872 = C868 - C839;
    const double C876 = C873 - C874;
    const double C875 = C872 - C863;
    const double C1245 = C301 * C626;
    const double C1244 = C595 * C625;
    const double C1243 = C301 * C635;
    const double C1242 = C595 * C634;
    const double C1241 = C301 * C622;
    const double C1240 = C595 * C621;
    const double C1248 = C1244 - C358;
    const double C1247 = C593 + C1242;
    const double C1246 = C1240 - C346;
    const double C1251 = C1248 - C1245;
    const double C1250 = C1247 - C352;
    const double C1249 = C1246 - C1241;
    const double C1254 = C1251 - C385;
    const double C1253 = C1250 - C604;
    const double C1252 = C1249 - C379;
    const double C1255 = C1253 - C1243;
    const double C1256 = C1255 - C382;
    const double C1445 = C301 * C871;
    const double C1444 = C595 * C870;
    const double C1443 = C301 * C859;
    const double C1442 = C595 * C858;
    const double C1441 = C301 * C857;
    const double C1440 = C595 * C856;
    const double C1448 = C1444 - C1445;
    const double C1447 = C828 + C1442;
    const double C1446 = C1440 - C1441;
    const double C1449 = C1447 - C839;
    const double C1450 = C1449 - C1443;
    const double C1985 = C305 * C871;
    const double C1984 = C830 * C870;
    const double C1983 = C305 * C859;
    const double C1982 = C830 * C858;
    const double C1981 = C305 * C857;
    const double C1980 = C830 * C856;
    const double C1988 = C828 + C1984;
    const double C1987 = C1982 - C352;
    const double C1986 = C1980 - C346;
    const double C1991 = C1988 - C358;
    const double C1990 = C1987 - C1983;
    const double C1989 = C1986 - C1981;
    const double C1994 = C1991 - C839;
    const double C1993 = C1990 - C382;
    const double C1992 = C1989 - C379;
    const double C1995 = C1994 - C1985;
    const double C1996 = C1995 - C385;
    const double C3844 = C250 * C636;
    const double C3843 = C250 * C641;
    const double C3842 = C250 * C640;
    const double C3841 = C292 * C1448;
    const double C3840 = C292 * C1450;
    const double C3839 = C292 * C1446;
    const double C3838 = C250 * C870;
    const double C3837 = C1996 + C823;
    const double C3836 = C250 * C858;
    const double C3835 = C250 * C856;
    const double C3834 = C250 * C625;
    const double C3833 = C1448 + C588;
    const double C3832 = C250 * C1448;
    const double C3831 = C595 * C1996;
    const double C3830 = C250 * C634;
    const double C3829 = C250 * C1450;
    const double C3828 = C595 * C1993;
    const double C3827 = C250 * C621;
    const double C3826 = C250 * C1446;
    const double C3825 = C595 * C1992;
    const double C3824 = C250 * C383;
    const double C3823 = C876 + C3701;
    const double C3822 = C250 * C876;
    const double C3821 = C830 * C871;
    const double C3820 = C292 * C1996;
    const double C3819 = C250 * C380;
    const double C3818 = C250 * C869;
    const double C3817 = C830 * C859;
    const double C3816 = C292 * C1993;
    const double C3815 = C250 * C392;
    const double C3814 = C250 * C875;
    const double C3813 = C830 * C857;
    const double C3812 = C1618 * be;
    const double C3811 = C292 * C1992;
    const double C3810 = C277 * C1617;
    const double C3809 = C249 * C870;
    const double C3808 = C595 * C871;
    const double C3807 = C595 * C1448;
    const double C3806 = C249 * C858;
    const double C3805 = C1450 + C823;
    const double C3804 = C595 * C859;
    const double C3803 = C1438 * be;
    const double C3802 = C595 * C1450;
    const double C3801 = C277 * C1437;
    const double C3800 = C249 * C856;
    const double C3799 = C595 * C857;
    const double C3798 = C595 * C1446;
    const double C3797 = C249 * C625;
    const double C3796 = C249 * C634;
    const double C3795 = C1256 + C588;
    const double C3794 = C249 * C621;
    const double C3793 = C249 * C383;
    const double C3792 = C249 * C636;
    const double C3791 = C595 * C626;
    const double C3790 = C292 * C1254;
    const double C3789 = C249 * C380;
    const double C3788 = C641 + C3701;
    const double C3787 = C249 * C641;
    const double C3786 = C595 * C635;
    const double C3785 = C292 * C1256;
    const double C3784 = C249 * C392;
    const double C3783 = C249 * C640;
    const double C3782 = C595 * C622;
    const double C3781 = C1044 * be;
    const double C3780 = C292 * C1252;
    const double C3779 = C277 * C1043;
    const double C3778 = C871 / C272;
    const double C3777 = C830 * C343;
    const double C3776 = C292 * C871;
    const double C3775 = C870 / C272;
    const double C3774 = C292 * C876;
    const double C3773 = C859 / C272;
    const double C3772 = C830 * C340;
    const double C3771 = C292 * C859;
    const double C3770 = C858 / C272;
    const double C3769 = C292 * C869;
    const double C3768 = C857 / C272;
    const double C3767 = C830 * C337;
    const double C3766 = C826 * be;
    const double C3765 = C292 * C857;
    const double C3764 = C277 * C824;
    const double C3763 = C825 * be;
    const double C3762 = C856 / C272;
    const double C3761 = C292 * C875;
    const double C3760 = C277 * C822;
    const double C3759 = C626 / C272;
    const double C3758 = C595 * C343;
    const double C3757 = C292 * C626;
    const double C3756 = C625 / C272;
    const double C3755 = C292 * C636;
    const double C3754 = C635 / C272;
    const double C3753 = C595 * C340;
    const double C3752 = C292 * C635;
    const double C3751 = C634 / C272;
    const double C3750 = C292 * C641;
    const double C3749 = C622 / C272;
    const double C3748 = C595 * C337;
    const double C3747 = C591 * be;
    const double C3746 = C292 * C622;
    const double C3745 = C277 * C589;
    const double C3744 = C590 * be;
    const double C3743 = C621 / C272;
    const double C3742 = C292 * C640;
    const double C3741 = C277 * C587;
    const double C3740 = C343 / C242;
    const double C3739 = C256 * C276;
    const double C3738 = C257 * C312;
    const double C3737 = C341 / C282;
    const double C3736 = C340 / C242;
    const double C3735 = C256 * C274;
    const double C3734 = C257 * C311;
    const double C3733 = C338 / C282;
    const double C3732 = C337 / C242;
    const double C3731 = C256 * C264;
    const double C3730 = C257 * C309;
    const double C3729 = C240 * be;
    const double C3728 = C277 * C237;
    const double C3727 = C336 / C282;
    const double C3904 = C3801 + C3839;
    const double C3903 = C3837 - C3838;
    const double C3902 = C1993 - C3836;
    const double C3901 = C1992 - C3835;
    const double C3900 = C3833 - C3834;
    const double C3899 = C1450 - C3830;
    const double C3898 = C3810 + C3828;
    const double C3897 = C1446 - C3827;
    const double C3896 = C3823 - C3824;
    const double C3895 = C3764 + C3821;
    const double C3894 = C869 - C3819;
    const double C3893 = C3817 - C3733;
    const double C3892 = C875 - C3815;
    const double C3891 = C3813 - C3727;
    const double C3890 = C3812 / C242;
    const double C3889 = C3810 + C3811;
    const double C3888 = C1448 - C3809;
    const double C3887 = C3807 + C3775;
    const double C3886 = C3805 - C3806;
    const double C3885 = C3764 + C3804;
    const double C3884 = C3803 / C242;
    const double C3883 = C3801 + C3802;
    const double C3882 = C1446 - C3800;
    const double C3881 = C3798 + C3762;
    const double C3880 = C1254 - C3797;
    const double C3879 = C3795 - C3796;
    const double C3878 = C1252 - C3794;
    const double C3877 = C636 - C3793;
    const double C3876 = C3791 - C3737;
    const double C3875 = C3788 - C3789;
    const double C3874 = C3745 + C3786;
    const double C3873 = C640 - C3784;
    const double C3872 = C3782 - C3727;
    const double C3871 = C3781 / C242;
    const double C3870 = C3779 + C3780;
    const double C3869 = C3777 / C242;
    const double C3868 = C3774 + C3775;
    const double C3867 = C3772 / C242;
    const double C3866 = C3769 + C3770;
    const double C3865 = C3767 / C242;
    const double C3864 = C3766 / C242;
    const double C3863 = C3764 + C3765;
    const double C3862 = C3763 / C242;
    const double C3861 = C3760 + C3761;
    const double C3860 = C3758 / C242;
    const double C3859 = C3755 + C3756;
    const double C3858 = C3753 / C242;
    const double C3857 = C3750 + C3751;
    const double C3856 = C3748 / C242;
    const double C3855 = C3747 / C242;
    const double C3854 = C3745 + C3746;
    const double C3853 = C3744 / C242;
    const double C3852 = C3741 + C3742;
    const double C3851 = -C3740;
    const double C3850 = C3739 / C242;
    const double C3849 = -C3736;
    const double C3848 = C3735 / C242;
    const double C3847 = -C3732;
    const double C3846 = C3731 / C242;
    const double C3845 = C3729 / C242;
    const double C3924 = C3904 - C3884;
    const double C3923 = C3898 - C3890;
    const double C3922 = C3895 - C3737;
    const double C3921 = C3889 - C3890;
    const double C3920 = C3885 - C3864;
    const double C3919 = C3883 + C3770;
    const double C3918 = C3874 - C3733;
    const double C3917 = C3870 - C3871;
    const double C3916 = C3728 - C3869;
    const double C3915 = C3863 - C3864;
    const double C3914 = C3861 + C3762;
    const double C3913 = C3728 - C3858;
    const double C3912 = C3854 - C3855;
    const double C3911 = C3852 + C3743;
    const double C3910 = C3851 / C272;
    const double C3909 = C3738 - C3850;
    const double C3908 = C3849 / C272;
    const double C3907 = C3734 - C3848;
    const double C3906 = C3847 / C272;
    const double C3905 = C3730 - C3846;
    const double C3934 = C3922 - C3864;
    const double C3933 = C3919 - C3884;
    const double C3932 = C3918 - C3855;
    const double C3931 = C3916 - C3845;
    const double C3930 = C3914 - C3862;
    const double C3929 = C3913 - C3845;
    const double C3928 = C3911 - C3853;
    const double C3927 = C3909 * C334;
    const double C3926 = C3907 * C334;
    const double C3925 = C3905 * C334;
    const double C3940 = C305 * C3927;
    const double C3939 = C305 * C3926;
    const double C3938 = C305 * C3925;
    const double C3937 = C301 * C3927;
    const double C3936 = C301 * C3926;
    const double C3935 = C301 * C3925;
    const double C3946 = C3940 / C242;
    const double C3945 = C3939 / C242;
    const double C3944 = C3938 / C242;
    const double C3943 = C3937 / C242;
    const double C3942 = C3936 / C242;
    const double C3941 = C3935 / C242;
    const double C3952 = C3931 + C3946;
    const double C3951 = C3945 - C3867;
    const double C3950 = C3944 - C3865;
    const double C3949 = C3943 - C3860;
    const double C3948 = C3929 + C3942;
    const double C3947 = C3941 - C3856;
    const double C3967 = C305 * C3952;
    const double C3966 = C305 * C3951;
    const double C3965 = C305 * C3950;
    const double C3964 = C301 * C3952;
    const double C3963 = C301 * C3951;
    const double C3962 = C301 * C3950;
    const double C3961 = C301 * C3949;
    const double C3960 = C301 * C3948;
    const double C3959 = C301 * C3947;
    const double C3958 = C295 * C3952;
    const double C3957 = C295 * C3951;
    const double C3956 = C295 * C3950;
    const double C3955 = C295 * C3949;
    const double C3954 = C295 * C3948;
    const double C3953 = C295 * C3947;
    const double C3982 = C3934 - C3967;
    const double C3981 = C3893 - C3966;
    const double C3980 = C3891 - C3965;
    const double C3979 = C3808 - C3964;
    const double C3978 = C3920 - C3963;
    const double C3977 = C3799 - C3962;
    const double C3976 = C3876 - C3961;
    const double C3975 = C3932 - C3960;
    const double C3974 = C3872 - C3959;
    const double C3973 = C3776 - C3958;
    const double C3972 = C3771 - C3957;
    const double C3971 = C3915 - C3956;
    const double C3970 = C3757 - C3955;
    const double C3969 = C3752 - C3954;
    const double C3968 = C3912 - C3953;
    const double C4000 = C295 * C3979;
    const double C3999 = C295 * C3978;
    const double C3998 = C295 * C3977;
    const double C3997 = C3982 - C3910;
    const double C3996 = C3981 - C3908;
    const double C3995 = C3980 - C3906;
    const double C3994 = C301 * C3979;
    const double C3993 = C301 * C3978;
    const double C3992 = C301 * C3977;
    const double C3991 = C3976 - C3910;
    const double C3990 = C3975 - C3908;
    const double C3989 = C3974 - C3906;
    const double C3988 = C295 * C3973;
    const double C3987 = C295 * C3972;
    const double C3986 = C295 * C3971;
    const double C3985 = C295 * C3970;
    const double C3984 = C295 * C3969;
    const double C3983 = C295 * C3968;
    const double C4021 = C3841 - C4000;
    const double C4020 = C3840 - C3999;
    const double C4019 = C3924 - C3998;
    const double C4018 = C301 * C3997;
    const double C4017 = C301 * C3996;
    const double C4016 = C301 * C3995;
    const double C4015 = C295 * C3997;
    const double C4014 = C295 * C3996;
    const double C4013 = C295 * C3995;
    const double C4012 = C3887 - C3994;
    const double C4011 = C3933 - C3993;
    const double C4010 = C3881 - C3992;
    const double C4009 = C295 * C3991;
    const double C4008 = C295 * C3990;
    const double C4007 = C295 * C3989;
    const double C4006 = C3868 - C3988;
    const double C4005 = C3866 - C3987;
    const double C4004 = C3930 - C3986;
    const double C4003 = C3859 - C3985;
    const double C4002 = C3857 - C3984;
    const double C4001 = C3928 - C3983;
    const double C4042 = C4021 + C587;
    const double C4041 = C4020 - C3843;
    const double C4040 = C4019 - C3842;
    const double C4039 = C3831 - C4018;
    const double C4038 = C3923 - C4017;
    const double C4037 = C3825 - C4016;
    const double C4036 = C3820 - C4015;
    const double C4035 = C3816 - C4014;
    const double C4034 = C3921 - C4013;
    const double C4033 = C4012 - C3778;
    const double C4032 = C4011 - C3773;
    const double C4031 = C4010 - C3768;
    const double C4030 = C3790 - C4009;
    const double C4029 = C3785 - C4008;
    const double C4028 = C3917 - C4007;
    const double C4027 = C4006 - C3778;
    const double C4026 = C4005 - C3773;
    const double C4025 = C4004 - C3768;
    const double C4024 = C4003 - C3759;
    const double C4023 = C4002 - C3754;
    const double C4022 = C4001 - C3749;
    const double C4052 = C4042 - C3844;
    const double C4051 = C4039 + C1437;
    const double C4050 = C4038 - C3829;
    const double C4049 = C4037 - C3826;
    const double C4048 = C4036 + C822;
    const double C4047 = C4035 - C3818;
    const double C4046 = C4034 - C3814;
    const double C4045 = C4030 - C3792;
    const double C4044 = C4029 + C587;
    const double C4043 = C4028 - C3783;
    const double C4055 = C4051 - C3832;
    const double C4054 = C4048 - C3822;
    const double C4053 = C4044 - C3787;
    const double gx200100 =
        C277 * C232 + C292 * C406 + C392 / C242 - (C238 * be) / C242 -
        C295 * (C277 * C236 + C292 * C393 - C3727 - (C3722 * be) / C242 -
                C295 * (C3728 - (C292 * C337) / C242 - C3845 +
                        (C295 * C3925) / C242) -
                C3906) -
        C393 / C242 + C232 - C247 * C406 + C241 -
        C247 * (C406 + C3701 - C247 * C392);
    const double gx200010 =
        C4022 + C587 - C247 * C640 + C592 - C247 * (C640 + C588 - C247 * C621);
    const double gx200001 =
        C4025 + C822 - C247 * C875 + C827 - C247 * (C875 + C823 - C247 * C856);
    const double gx020100 = C4043 - C249 * C3873;
    const double gx020010 = C595 * C1252 + C621 / C242 - C301 * C3989 -
                            C622 / C242 - C249 * C1252 - C249 * C3878;
    const double gx020001 = C4031 - C249 * C1446 - C249 * C3882;
    const double gx002100 = C4046 - C250 * C3892;
    const double gx002010 = C4049 - C250 * C3897;
    const double gx002001 = C830 * C1992 + C856 / C242 - C305 * C3995 -
                            C857 / C242 - C250 * C1992 - C250 * C3901;
    const double gx110100 = C4022 - C249 * C406 + C1045 - C247 * C3873;
    const double gx110010 = C4043 + C1239 - C247 * C3878;
    const double gx110001 = C4019 - C249 * C875 + C1439 - C247 * C3882;
    const double gx101100 = C4025 - C250 * C406 + C1619 - C247 * C3892;
    const double gx101010 = C4040 + C1785 - C247 * C3897;
    const double gx101001 = C4046 + C1979 - C247 * C3901;
    const double gx011100 = C4040 - C249 * C3892;
    const double gx011010 = C4031 - C250 * C1252 - C249 * C3897;
    const double gx011001 = C4049 - C249 * C3901;
    gx[(Ai + 0) * matrix_size + Bi + 0] += std::sqrt(3.0) * gx110100;
    gx[(Ai + 0) * matrix_size + Bi + 1] += std::sqrt(3.0) * gx110010;
    gx[(Ai + 0) * matrix_size + Bi + 2] += std::sqrt(3.0) * gx110001;
    gx[(Ai + 1) * matrix_size + Bi + 0] += std::sqrt(3.0) * gx011100;
    gx[(Ai + 1) * matrix_size + Bi + 1] += std::sqrt(3.0) * gx011010;
    gx[(Ai + 1) * matrix_size + Bi + 2] += std::sqrt(3.0) * gx011001;
    gx[(Ai + 2) * matrix_size + Bi + 0] +=
        -0.5 * gx200100 - 0.5 * gx020100 + gx002100;
    gx[(Ai + 2) * matrix_size + Bi + 1] +=
        -0.5 * gx200010 - 0.5 * gx020010 + gx002010;
    gx[(Ai + 2) * matrix_size + Bi + 2] +=
        -0.5 * gx200001 - 0.5 * gx020001 + gx002001;
    gx[(Ai + 3) * matrix_size + Bi + 0] += std::sqrt(3.0) * gx101100;
    gx[(Ai + 3) * matrix_size + Bi + 1] += std::sqrt(3.0) * gx101010;
    gx[(Ai + 3) * matrix_size + Bi + 2] += std::sqrt(3.0) * gx101001;
    gx[(Ai + 4) * matrix_size + Bi + 0] +=
        std::sqrt(0.75) * gx200100 - std::sqrt(0.75) * gx020100;
    gx[(Ai + 4) * matrix_size + Bi + 1] +=
        std::sqrt(0.75) * gx200010 - std::sqrt(0.75) * gx020010;
    gx[(Ai + 4) * matrix_size + Bi + 2] +=
        std::sqrt(0.75) * gx200001 - std::sqrt(0.75) * gx020001;
    const double gy200100 =
        C292 * C401 + C380 / C242 -
        C295 * (C292 * C381 - C3733 -
                C295 * ((C295 * C3926) / C242 - (C292 * C340) / C242) - C3908) -
        C381 / C242 - C247 * C401 - C247 * (C401 - C247 * C380);
    const double gy200010 = C4023 - C247 * C641 - C247 * (C641 - C247 * C634);
    const double gy200001 = C4026 - C247 * C869 - C247 * (C869 - C247 * C858);
    const double gy020100 = C4053 + C1045 - C249 * C3875;
    const double gy020010 = C3779 + C595 * C1256 + C634 / C242 - C3871 -
                            C301 * C3990 - C635 / C242 + C1043 - C249 * C1256 +
                            C1239 - C249 * C3879;
    const double gy020001 = C4032 + C1437 - C249 * C1450 + C1439 - C249 * C3886;
    const double gy002100 = C4047 - C250 * C3894;
    const double gy002010 = C4050 - C250 * C3899;
    const double gy002001 = C830 * C1993 + C858 / C242 - C305 * C3996 -
                            C859 / C242 - C250 * C1993 - C250 * C3902;
    const double gy110100 = C4023 + C232 - C249 * C401 - C247 * C3875;
    const double gy110010 = C4053 - C247 * C3879;
    const double gy110001 = C4020 + C822 - C249 * C869 - C247 * C3886;
    const double gy101100 = C4026 - C250 * C401 - C247 * C3894;
    const double gy101010 = C4041 - C247 * C3899;
    const double gy101001 = C4047 - C247 * C3902;
    const double gy011100 = C4041 + C1619 - C249 * C3894;
    const double gy011010 = C4032 - C250 * C1256 + C1785 - C249 * C3899;
    const double gy011001 = C4050 + C1979 - C249 * C3902;
    gy[(Ai + 0) * matrix_size + Bi + 0] += std::sqrt(3.0) * gy110100;
    gy[(Ai + 0) * matrix_size + Bi + 1] += std::sqrt(3.0) * gy110010;
    gy[(Ai + 0) * matrix_size + Bi + 2] += std::sqrt(3.0) * gy110001;
    gy[(Ai + 1) * matrix_size + Bi + 0] += std::sqrt(3.0) * gy011100;
    gy[(Ai + 1) * matrix_size + Bi + 1] += std::sqrt(3.0) * gy011010;
    gy[(Ai + 1) * matrix_size + Bi + 2] += std::sqrt(3.0) * gy011001;
    gy[(Ai + 2) * matrix_size + Bi + 0] +=
        -0.5 * gy200100 - 0.5 * gy020100 + gy002100;
    gy[(Ai + 2) * matrix_size + Bi + 1] +=
        -0.5 * gy200010 - 0.5 * gy020010 + gy002010;
    gy[(Ai + 2) * matrix_size + Bi + 2] +=
        -0.5 * gy200001 - 0.5 * gy020001 + gy002001;
    gy[(Ai + 3) * matrix_size + Bi + 0] += std::sqrt(3.0) * gy101100;
    gy[(Ai + 3) * matrix_size + Bi + 1] += std::sqrt(3.0) * gy101010;
    gy[(Ai + 3) * matrix_size + Bi + 2] += std::sqrt(3.0) * gy101001;
    gy[(Ai + 4) * matrix_size + Bi + 0] +=
        std::sqrt(0.75) * gy200100 - std::sqrt(0.75) * gy020100;
    gy[(Ai + 4) * matrix_size + Bi + 1] +=
        std::sqrt(0.75) * gy200010 - std::sqrt(0.75) * gy020010;
    gy[(Ai + 4) * matrix_size + Bi + 2] +=
        std::sqrt(0.75) * gy200001 - std::sqrt(0.75) * gy020001;
    const double gz200100 =
        C292 * C402 + C383 / C242 -
        C295 * (C292 * C384 - C3737 -
                C295 * ((C295 * C3927) / C242 - (C292 * C343) / C242) - C3910) -
        C384 / C242 - C247 * C402 - C247 * (C402 - C247 * C383);
    const double gz200010 = C4024 - C247 * C636 - C247 * (C636 - C247 * C625);
    const double gz200001 = C4027 - C247 * C876 - C247 * (C876 - C247 * C870);
    const double gz020100 = C4045 - C249 * C3877;
    const double gz020010 = C595 * C1254 + C625 / C242 - C301 * C3991 -
                            C626 / C242 - C249 * C1254 - C249 * C3880;
    const double gz020001 = C4033 - C249 * C1448 - C249 * C3888;
    const double gz002100 = C4054 + C1619 - C250 * C3896;
    const double gz002010 = C4055 + C1785 - C250 * C3900;
    const double gz002001 = C3810 + C830 * C1996 + C870 / C242 - C3890 -
                            C305 * C3997 - C871 / C242 + C1617 - C250 * C1996 +
                            C1979 - C250 * C3903;
    const double gz110100 = C4024 - C249 * C402 - C247 * C3877;
    const double gz110010 = C4045 - C247 * C3880;
    const double gz110001 = C4021 - C249 * C876 - C247 * C3888;
    const double gz101100 = C4027 + C232 - C250 * C402 - C247 * C3896;
    const double gz101010 = C4052 - C247 * C3900;
    const double gz101001 = C4054 - C247 * C3903;
    const double gz011100 = C4052 - C249 * C3896;
    const double gz011010 = C4033 + C1043 - C250 * C1254 - C249 * C3900;
    const double gz011001 = C4055 - C249 * C3903;
    gz[(Ai + 0) * matrix_size + Bi + 0] += std::sqrt(3.0) * gz110100;
    gz[(Ai + 0) * matrix_size + Bi + 1] += std::sqrt(3.0) * gz110010;
    gz[(Ai + 0) * matrix_size + Bi + 2] += std::sqrt(3.0) * gz110001;
    gz[(Ai + 1) * matrix_size + Bi + 0] += std::sqrt(3.0) * gz011100;
    gz[(Ai + 1) * matrix_size + Bi + 1] += std::sqrt(3.0) * gz011010;
    gz[(Ai + 1) * matrix_size + Bi + 2] += std::sqrt(3.0) * gz011001;
    gz[(Ai + 2) * matrix_size + Bi + 0] +=
        -0.5 * gz200100 - 0.5 * gz020100 + gz002100;
    gz[(Ai + 2) * matrix_size + Bi + 1] +=
        -0.5 * gz200010 - 0.5 * gz020010 + gz002010;
    gz[(Ai + 2) * matrix_size + Bi + 2] +=
        -0.5 * gz200001 - 0.5 * gz020001 + gz002001;
    gz[(Ai + 3) * matrix_size + Bi + 0] += std::sqrt(3.0) * gz101100;
    gz[(Ai + 3) * matrix_size + Bi + 1] += std::sqrt(3.0) * gz101010;
    gz[(Ai + 3) * matrix_size + Bi + 2] += std::sqrt(3.0) * gz101001;
    gz[(Ai + 4) * matrix_size + Bi + 0] +=
        std::sqrt(0.75) * gz200100 - std::sqrt(0.75) * gz020100;
    gz[(Ai + 4) * matrix_size + Bi + 1] +=
        std::sqrt(0.75) * gz200010 - std::sqrt(0.75) * gz020010;
    gz[(Ai + 4) * matrix_size + Bi + 2] +=
        std::sqrt(0.75) * gz200001 - std::sqrt(0.75) * gz020001;
}
