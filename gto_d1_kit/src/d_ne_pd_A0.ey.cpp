/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

#include "gto_d1_kit/gto_d1.hpp"
#include <cmath>

namespace {
    static const double Pi = M_PI;
}

void vne_gradient_12_1(double ae,
                       double be,
                       double xA,
                       double yA,
                       double zA,
                       double xB,
                       double yB,
                       double zB,
                       double xC,
                       double yC,
                       double zC,
                       const double* bs,
                       double* const gx,
                       double* const gy,
                       double* const gz,
                       std::size_t matrix_size,
                       std::size_t Ai,
                       std::size_t Bi)
{
    const double C2586 = be * xB;
    const double C2585 = ae * xA;
    const double C2584 = bs[1];
    const double C2583 = 2. * Pi;
    const double C2582 = ae + be;
    const double C2581 = ae * be;
    const double C2580 = zA - zB;
    const double C2579 = yA - yB;
    const double C2578 = xA - xB;
    const double C2577 = bs[0];
    const double C2591 = C2585 + C2586;
    const double C2590 = be * C2578;
    const double C2589 = std::pow(C2580, 2);
    const double C2588 = std::pow(C2579, 2);
    const double C2587 = std::pow(C2578, 2);
    const double C2593 = C2591 / C2582;
    const double C2592 = C2587 + C2588;
    const double C2595 = C2593 - xC;
    const double C2594 = C2592 + C2589;
    const double C2596 = C2594 * C2581;
    const double C2597 = C2596 / C2582;
    const double C2598 = -C2597;
    const double C2599 = std::exp(C2598);
    const double C2600 = C2599 * C2583;
    const double C2602 = C2584 * C2600;
    const double C2601 = C2577 * C2600;
    const double C2604 = C2595 * C2602;
    const double C2603 = C2601 * C2590;
    const double C2606 = C2604 / C2582;
    const double C2605 = C2603 / C2582;
    const double C2607 = -C2605;
    const double C2608 = C2607 / C2582;
    const double C2609 = C2608 - C2606;
    const double C2617 = C2602 * C2590;
    const double C2616 = bs[2];
    const double C2619 = C2617 / C2582;
    const double C2618 = C2616 * C2600;
    const double C2621 = C2595 * C2618;
    const double C2620 = -C2619;
    const double C2623 = C2621 / C2582;
    const double C2622 = C2620 / C2582;
    const double C2624 = C2622 - C2623;
    const double C2630 = be * yB;
    const double C2629 = ae * yA;
    const double C2628 = be * C2579;
    const double C2632 = C2629 + C2630;
    const double C2631 = C2601 * C2628;
    const double C2634 = C2632 / C2582;
    const double C2633 = C2631 / C2582;
    const double C2636 = C2634 - yC;
    const double C2635 = -C2633;
    const double C2638 = C2636 * C2602;
    const double C2637 = C2635 / C2582;
    const double C2639 = C2638 / C2582;
    const double C2640 = C2637 - C2639;
    const double C2643 = C2636 * C2618;
    const double C2642 = C2602 * C2628;
    const double C2645 = C2643 / C2582;
    const double C2644 = C2642 / C2582;
    const double C2646 = -C2644;
    const double C2647 = C2646 / C2582;
    const double C2648 = C2647 - C2645;
    const double C2655 = be * zB;
    const double C2654 = ae * zA;
    const double C2653 = be * C2580;
    const double C2657 = C2654 + C2655;
    const double C2656 = C2601 * C2653;
    const double C2659 = C2657 / C2582;
    const double C2658 = C2656 / C2582;
    const double C2661 = C2659 - zC;
    const double C2660 = -C2658;
    const double C2663 = C2661 * C2602;
    const double C2662 = C2660 / C2582;
    const double C2664 = C2663 / C2582;
    const double C2665 = C2662 - C2664;
    const double C2668 = C2661 * C2618;
    const double C2667 = C2602 * C2653;
    const double C2670 = C2668 / C2582;
    const double C2669 = C2667 / C2582;
    const double C2671 = -C2669;
    const double C2672 = C2671 / C2582;
    const double C2673 = C2672 - C2670;
    const double C2678 = C2578 * C2601;
    const double C2679 = C2678 / C2582;
    const double C2680 = C2609 + C2679;
    const double C2682 = C2578 * C2602;
    const double C2683 = C2682 / C2582;
    const double C2684 = C2624 + C2683;
    const double C2688 = C2579 * C2601;
    const double C2689 = C2688 / C2582;
    const double C2690 = C2640 + C2689;
    const double C2692 = C2579 * C2602;
    const double C2693 = C2692 / C2582;
    const double C2694 = C2648 + C2693;
    const double C2713 = C2580 * C2602;
    const double C2712 = C2618 * C2653;
    const double C2711 = C2580 * C2601;
    const double C2710 = C2579 * C2618;
    const double C2709 = C2579 * C2602;
    const double C2708 = C2618 * C2628;
    const double C2707 = C2579 * C2601;
    const double C2706 = C2578 * C2618;
    const double C2705 = bs[3];
    const double C2704 = C2618 * C2590;
    const double C2703 = C2618 / C2582;
    const double C2702 = C2578 * C2602;
    const double C2701 = C2578 * C2601;
    const double C2700 = bs[2];
    const double C2699 = C2602 * C2590;
    const double C2698 = 2. * C2582;
    const double C2697 = C2602 / C2582;
    const double C2696 = C2601 / C2582;
    const double C2729 = C2713 / C2582;
    const double C2728 = C2712 / C2582;
    const double C2727 = C2711 / C2582;
    const double C2726 = C2710 / C2582;
    const double C2725 = C2709 / C2582;
    const double C2724 = C2708 / C2582;
    const double C2723 = C2707 / C2582;
    const double C2722 = C2706 / C2582;
    const double C2721 = C2705 * C2600;
    const double C2720 = C2704 / C2582;
    const double C2719 = C2697 - C2703;
    const double C2718 = C2702 / C2582;
    const double C2717 = C2701 / C2582;
    const double C2716 = C2700 * C2600;
    const double C2715 = C2699 / C2582;
    const double C2714 = C2696 - C2697;
    const double C2745 = C2673 + C2729;
    const double C2744 = C2661 * C2721;
    const double C2743 = -C2728;
    const double C2742 = C2665 + C2727;
    const double C2741 = C2648 + C2725;
    const double C2740 = C2636 * C2721;
    const double C2739 = -C2724;
    const double C2738 = C2640 + C2723;
    const double C2737 = C2624 + C2718;
    const double C2736 = C2595 * C2721;
    const double C2735 = -C2720;
    const double C2734 = C2719 / C2698;
    const double C2733 = C2609 + C2717;
    const double C2732 = C2595 * C2716;
    const double C2731 = -C2715;
    const double C2730 = C2714 / C2698;
    const double C2753 = C2744 / C2582;
    const double C2752 = C2743 / C2582;
    const double C2751 = C2740 / C2582;
    const double C2750 = C2739 / C2582;
    const double C2749 = C2736 / C2582;
    const double C2748 = C2735 / C2582;
    const double C2747 = C2732 / C2582;
    const double C2746 = C2731 / C2582;
    const double C2757 = C2752 - C2753;
    const double C2756 = C2750 - C2751;
    const double C2755 = C2748 - C2749;
    const double C2754 = C2746 - C2747;
    const double C2759 = C2756 + C2726;
    const double C2758 = C2755 + C2722;
    const double C178 = C2730 - ((C2609 * C2590) / C2582 + C2595 * C2754) +
                        C2578 * C2609 + C2578 * C2733;
    const double C182 = C2754 + C2718;
    const double C183 = C2716 / C2582;
    const double C184 = C2734 - ((C2624 * C2590) / C2582 + C2595 * C2755) +
                        C2578 * C2624 + C2578 * C2737;
    const double C186 = C2721 / C2582;
    const double C469 =
        C2730 -
        ((C2640 * C2628) / C2582 + C2636 * ((-(C2602 * C2628) / C2582) / C2582 -
                                            (C2636 * C2618) / C2582)) +
        C2579 * C2640 + C2579 * C2738;
    const double C470 = C2734 - ((C2648 * C2628) / C2582 + C2636 * C2756) +
                        C2579 * C2648 + C2579 * C2741;
    const double C648 =
        C2730 -
        ((C2665 * C2653) / C2582 + C2661 * ((-(C2602 * C2653) / C2582) / C2582 -
                                            (C2661 * C2618) / C2582)) +
        C2580 * C2665 + C2580 * C2742;
    const double C649 = C2734 - ((C2673 * C2653) / C2582 + C2661 * C2757) +
                        C2580 * C2673 + C2580 * C2745;
    const double C652 = C2757 + (C2580 * C2618) / C2582;
    const double C837 =
        C2579 * C2680 - ((C2680 * C2628) / C2582 + C2636 * C2737);
    const double C838 =
        C2579 * C2684 - ((C2684 * C2628) / C2582 + C2636 * C2758);
    const double C978 =
        C2580 * C2680 - ((C2680 * C2653) / C2582 + C2661 * C2684);
    const double C979 =
        C2580 * C2684 - ((C2684 * C2653) / C2582 + C2661 * C2758);
    const double C1097 =
        C2580 * C2690 - ((C2690 * C2653) / C2582 + C2661 * C2741);
    const double C1098 =
        C2580 * C2694 - ((C2694 * C2653) / C2582 + C2661 * C2759);
    const double C208 = be * zB;
    const double C207 = ae * zA;
    const double C206 = be * yB;
    const double C205 = ae * yA;
    const double C204 = bs[4];
    const double C203 = bs[3];
    const double C202 = C183 * ae;
    const double C201 = C182 * ae;
    const double C200 = bs[2];
    const double C199 = C2697 * ae;
    const double C198 = 4 * Pi;
    const double C197 = zA - zB;
    const double C196 = yA - yB;
    const double C195 = bs[1];
    const double C194 = ae * be;
    const double C193 = xA - xB;
    const double C192 = bs[0];
    const double C191 = C2696 * ae;
    const double C190 = C2733 * ae;
    const double C189 = be * xB;
    const double C188 = ae * xA;
    const double C187 = ae + be;
    const double C224 = C207 + C208;
    const double C223 = C197 * C194;
    const double C222 = C205 + C206;
    const double C221 = C196 * C194;
    const double C220 = 2 * C187;
    const double C219 = C202 / C187;
    const double C218 = C201 / C187;
    const double C217 = std::pow(C187, 2);
    const double C216 = C199 / C187;
    const double C215 = std::pow(C197, 2);
    const double C214 = std::pow(C196, 2);
    const double C213 = std::pow(C193, 2);
    const double C212 = C193 * C194;
    const double C211 = C191 / C187;
    const double C210 = C190 / C187;
    const double C209 = C188 + C189;
    const double C238 = C200 * C223;
    const double C237 = C192 * C223;
    const double C236 = C224 / C187;
    const double C235 = C195 * C223;
    const double C234 = C200 * C221;
    const double C233 = C192 * C221;
    const double C232 = C222 / C187;
    const double C231 = C195 * C221;
    const double C230 = C200 * C212;
    const double C229 = 2 * C217;
    const double C228 = C195 * C212;
    const double C227 = C213 + C214;
    const double C226 = C192 * C212;
    const double C225 = C209 / C187;
    const double C252 = C238 / C187;
    const double C251 = C237 / C187;
    const double C250 = C236 - zC;
    const double C249 = C235 / C187;
    const double C248 = C234 / C187;
    const double C247 = C233 / C187;
    const double C246 = C232 - yC;
    const double C245 = C231 / C187;
    const double C244 = C230 / C187;
    const double C243 = C228 / C187;
    const double C242 = C227 + C215;
    const double C241 = C225 - xC;
    const double C240 = C226 / C187;
    const double C239 = C225 - xB;
    const double C256 = ae * C250;
    const double C255 = ae * C246;
    const double C254 = C242 * C194;
    const double C253 = ae * C241;
    const double C266 = C203 * C256;
    const double C265 = C195 * C256;
    const double C264 = C200 * C256;
    const double C263 = C203 * C255;
    const double C262 = C195 * C255;
    const double C261 = C200 * C255;
    const double C260 = C203 * C253;
    const double C259 = C200 * C253;
    const double C258 = C254 / C187;
    const double C257 = C195 * C253;
    const double C276 = C252 + C266;
    const double C275 = C251 + C265;
    const double C274 = C249 + C264;
    const double C273 = C248 + C263;
    const double C272 = C247 + C262;
    const double C271 = C245 + C261;
    const double C270 = C244 + C260;
    const double C269 = C243 + C259;
    const double C268 = -C258;
    const double C267 = C240 + C257;
    const double C277 = std::exp(C268);
    const double C278 = C277 * C198;
    const double C287 = C276 * C278;
    const double C286 = C275 * C278;
    const double C285 = C274 * C278;
    const double C284 = C273 * C278;
    const double C283 = C272 * C278;
    const double C282 = C271 * C278;
    const double C281 = C270 * C278;
    const double C280 = C269 * C278;
    const double C279 = C267 * C278;
    const double C305 = C285 / C187;
    const double C304 = C239 * C285;
    const double C303 = C241 * C287;
    const double C302 = C286 / C229;
    const double C301 = C239 * C286;
    const double C300 = C241 * C285;
    const double C299 = C282 / C187;
    const double C298 = C239 * C282;
    const double C297 = C241 * C284;
    const double C296 = C283 / C229;
    const double C295 = C239 * C283;
    const double C294 = C241 * C282;
    const double C293 = C280 / C187;
    const double C292 = C241 * C281;
    const double C291 = C239 * C280;
    const double C290 = C279 / C229;
    const double C289 = C241 * C280;
    const double C288 = C239 * C279;
    const double C320 = -C305;
    const double C319 = C304 / C187;
    const double C318 = C303 / C187;
    const double C317 = C301 / C187;
    const double C316 = C300 / C187;
    const double C315 = -C299;
    const double C314 = C298 / C187;
    const double C313 = C297 / C187;
    const double C312 = C295 / C187;
    const double C311 = C294 / C187;
    const double C310 = -C293;
    const double C309 = C292 / C187;
    const double C308 = C291 / C187;
    const double C307 = C289 / C187;
    const double C306 = C288 / C187;
    const double C329 = C320 / C220;
    const double C328 = C318 - C319;
    const double C327 = C316 - C317;
    const double C326 = C315 / C220;
    const double C325 = C313 - C314;
    const double C324 = C311 - C312;
    const double C323 = C310 / C220;
    const double C322 = C216 - C308;
    const double C321 = C211 - C306;
    const double C335 = C241 * C328;
    const double C334 = C239 * C327;
    const double C333 = C241 * C325;
    const double C332 = C239 * C324;
    const double C331 = C322 - C219;
    const double C330 = C321 - C216;
    const double C339 = C334 - C302;
    const double C338 = C332 - C296;
    const double C337 = C331 + C309;
    const double C336 = C330 + C307;
    const double C343 = C339 - C335;
    const double C342 = C338 - C333;
    const double C341 = C241 * C337;
    const double C340 = C239 * C336;
    const double C346 = C343 - C329;
    const double C345 = C342 - C326;
    const double C344 = C210 + C340;
    const double C347 = C344 - C290;
    const double C348 = C347 - C218;
    const double C349 = C348 - C341;
    const double C350 = C349 - C323;
    const double C482 = C246 * C287;
    const double C481 = C246 * C285;
    const double C480 = C246 * C284;
    const double C479 = C2741 * ae;
    const double C478 = C246 * C282;
    const double C477 = C2738 * ae;
    const double C476 = C246 * C281;
    const double C475 = C246 * C280;
    const double C474 = C232 - yB;
    const double C496 = C474 * C285;
    const double C495 = C482 / C187;
    const double C494 = C474 * C286;
    const double C493 = C481 / C187;
    const double C492 = C480 / C187;
    const double C491 = C474 * C282;
    const double C490 = C479 / C187;
    const double C489 = C478 / C187;
    const double C488 = C474 * C283;
    const double C487 = C477 / C187;
    const double C486 = C474 * C280;
    const double C485 = C476 / C187;
    const double C484 = C474 * C279;
    const double C483 = C475 / C187;
    const double C502 = C496 / C187;
    const double C501 = C494 / C187;
    const double C500 = C491 / C187;
    const double C499 = C488 / C187;
    const double C498 = C486 / C187;
    const double C497 = C484 / C187;
    const double C508 = C495 - C502;
    const double C507 = C493 - C501;
    const double C506 = C216 - C500;
    const double C505 = C211 - C499;
    const double C504 = C485 - C498;
    const double C503 = C483 - C497;
    const double C514 = C246 * C508;
    const double C513 = C474 * C507;
    const double C512 = C506 - C219;
    const double C511 = C505 - C216;
    const double C510 = C246 * C504;
    const double C509 = C474 * C503;
    const double C518 = C513 - C302;
    const double C517 = C512 + C492;
    const double C516 = C511 + C489;
    const double C515 = C509 - C290;
    const double C522 = C518 - C514;
    const double C521 = C246 * C517;
    const double C520 = C474 * C516;
    const double C519 = C515 - C510;
    const double C525 = C522 - C329;
    const double C524 = C487 + C520;
    const double C523 = C519 - C323;
    const double C526 = C524 - C296;
    const double C527 = C526 - C490;
    const double C528 = C527 - C521;
    const double C529 = C528 - C326;
    const double C661 = C250 * C287;
    const double C660 = C2745 * ae;
    const double C659 = C250 * C285;
    const double C658 = C2742 * ae;
    const double C657 = C250 * C284;
    const double C656 = C250 * C282;
    const double C655 = C250 * C281;
    const double C654 = C250 * C280;
    const double C653 = C236 - zB;
    const double C675 = C661 / C187;
    const double C674 = C653 * C285;
    const double C673 = C660 / C187;
    const double C672 = C659 / C187;
    const double C671 = C653 * C286;
    const double C670 = C658 / C187;
    const double C669 = C653 * C282;
    const double C668 = C657 / C187;
    const double C667 = C653 * C283;
    const double C666 = C656 / C187;
    const double C665 = C653 * C280;
    const double C664 = C655 / C187;
    const double C663 = C653 * C279;
    const double C662 = C654 / C187;
    const double C681 = C674 / C187;
    const double C680 = C671 / C187;
    const double C679 = C669 / C187;
    const double C678 = C667 / C187;
    const double C677 = C665 / C187;
    const double C676 = C663 / C187;
    const double C687 = C216 - C681;
    const double C686 = C211 - C680;
    const double C685 = C668 - C679;
    const double C684 = C666 - C678;
    const double C683 = C664 - C677;
    const double C682 = C662 - C676;
    const double C693 = C687 - C219;
    const double C692 = C686 - C216;
    const double C691 = C250 * C685;
    const double C690 = C653 * C684;
    const double C689 = C250 * C683;
    const double C688 = C653 * C682;
    const double C697 = C693 + C675;
    const double C696 = C692 + C672;
    const double C695 = C690 - C296;
    const double C694 = C688 - C290;
    const double C701 = C250 * C697;
    const double C700 = C653 * C696;
    const double C699 = C695 - C691;
    const double C698 = C694 - C689;
    const double C704 = C670 + C700;
    const double C703 = C699 - C326;
    const double C702 = C698 - C323;
    const double C705 = C704 - C302;
    const double C706 = C705 - C673;
    const double C707 = C706 - C701;
    const double C708 = C707 - C329;
    const double C844 = C241 * C508;
    const double C843 = C239 * C507;
    const double C842 = C241 * C517;
    const double C841 = C239 * C516;
    const double C840 = C241 * C504;
    const double C839 = C239 * C503;
    const double C847 = C843 - C844;
    const double C846 = C841 - C842;
    const double C845 = C487 + C839;
    const double C848 = C845 - C490;
    const double C849 = C848 - C840;
    const double C985 = C241 * C697;
    const double C984 = C239 * C696;
    const double C983 = C241 * C685;
    const double C982 = C239 * C684;
    const double C981 = C241 * C683;
    const double C980 = C239 * C682;
    const double C988 = C984 - C985;
    const double C987 = C982 - C983;
    const double C986 = C670 + C980;
    const double C989 = C986 - C673;
    const double C990 = C989 - C981;
    const double C1104 = C246 * C697;
    const double C1103 = C474 * C696;
    const double C1102 = C246 * C685;
    const double C1101 = C474 * C684;
    const double C1100 = C246 * C683;
    const double C1099 = C474 * C682;
    const double C1107 = C1103 - C1104;
    const double C1106 = C670 + C1101;
    const double C1105 = C1099 - C1100;
    const double C1108 = C1106 - C673;
    const double C1109 = C1108 - C1102;
    const double C2842 = C474 * C1107;
    const double C2841 = C474 * C1109;
    const double C2840 = C474 * C1105;
    const double C2839 = C474 * C708;
    const double C2838 = C474 * C703;
    const double C2837 = C474 * C702;
    const double C2836 = C474 * C697;
    const double C2835 = C239 * C1107;
    const double C2834 = C474 * C685;
    const double C2833 = C239 * C1109;
    const double C2832 = C474 * C683;
    const double C2831 = C1098 * ae;
    const double C2830 = C239 * C1105;
    const double C2829 = C1097 * ae;
    const double C2828 = C697 / C220;
    const double C2827 = C239 * C697;
    const double C2826 = C696 / C220;
    const double C2825 = C239 * C988;
    const double C2824 = C685 / C220;
    const double C2823 = C239 * C685;
    const double C2822 = C684 / C220;
    const double C2821 = C239 * C987;
    const double C2820 = C683 / C220;
    const double C2819 = C239 * C683;
    const double C2818 = C979 * ae;
    const double C2817 = C682 / C220;
    const double C2816 = C239 * C990;
    const double C2815 = C978 * ae;
    const double C2814 = C508 / C220;
    const double C2813 = C239 * C508;
    const double C2812 = C507 / C220;
    const double C2811 = C239 * C847;
    const double C2810 = C517 / C220;
    const double C2809 = C239 * C517;
    const double C2808 = C516 / C220;
    const double C2807 = C239 * C846;
    const double C2806 = C504 / C220;
    const double C2805 = C239 * C504;
    const double C2804 = C838 * ae;
    const double C2803 = C503 / C220;
    const double C2802 = C239 * C849;
    const double C2801 = C837 * ae;
    const double C2800 = C653 * C287;
    const double C2799 = C652 * ae;
    const double C2798 = C653 * C697;
    const double C2797 = C239 * C708;
    const double C2796 = C653 * C284;
    const double C2795 = C653 * C685;
    const double C2794 = C239 * C703;
    const double C2793 = C653 * C281;
    const double C2792 = C653 * C683;
    const double C2791 = C649 * ae;
    const double C2790 = C239 * C702;
    const double C2789 = C648 * ae;
    const double C2788 = C474 * C287;
    const double C2787 = C474 * C508;
    const double C2786 = C239 * C525;
    const double C2785 = C474 * C284;
    const double C2784 = C2759 * ae;
    const double C2783 = C474 * C517;
    const double C2782 = C239 * C529;
    const double C2781 = C474 * C281;
    const double C2780 = C474 * C504;
    const double C2779 = C470 * ae;
    const double C2778 = C239 * C523;
    const double C2777 = C469 * ae;
    const double C2776 = C287 / C187;
    const double C2775 = C204 * C256;
    const double C2774 = C203 * C223;
    const double C2773 = C285 / C229;
    const double C2772 = C284 / C187;
    const double C2771 = C204 * C255;
    const double C2770 = C203 * C221;
    const double C2769 = C282 / C229;
    const double C2768 = C281 / C187;
    const double C2767 = C204 * C253;
    const double C2766 = C203 * C212;
    const double C2765 = C186 * ae;
    const double C2764 = C280 / C229;
    const double C2882 = C2842 + C2826;
    const double C2881 = C2840 + C2817;
    const double C2880 = C673 + C2834;
    const double C2879 = C2831 / C187;
    const double C2878 = C2829 / C187;
    const double C2877 = C2825 + C2826;
    const double C2876 = C2821 + C2822;
    const double C2875 = C673 + C2819;
    const double C2874 = C2818 / C187;
    const double C2873 = C2815 / C187;
    const double C2872 = C2811 + C2812;
    const double C2871 = C2807 + C2808;
    const double C2870 = C490 + C2805;
    const double C2869 = C2804 / C187;
    const double C2868 = C2801 / C187;
    const double C2867 = C2800 / C187;
    const double C2866 = C2799 / C187;
    const double C2865 = C673 + C2798;
    const double C2864 = C2796 / C187;
    const double C2863 = C2795 - C2769;
    const double C2862 = C2793 / C187;
    const double C2861 = C2792 - C2764;
    const double C2860 = C2791 / C187;
    const double C2859 = C2789 / C187;
    const double C2858 = C2788 / C187;
    const double C2857 = C2787 - C2773;
    const double C2856 = C2785 / C187;
    const double C2855 = C2784 / C187;
    const double C2854 = C490 + C2783;
    const double C2853 = C2781 / C187;
    const double C2852 = C2780 - C2764;
    const double C2851 = C2779 / C187;
    const double C2850 = C2777 / C187;
    const double C2849 = -C2776;
    const double C2848 = C2774 / C187;
    const double C2847 = -C2772;
    const double C2846 = C2770 / C187;
    const double C2845 = -C2768;
    const double C2844 = C2766 / C187;
    const double C2843 = C2765 / C187;
    const double C2902 = C2878 + C2841;
    const double C2901 = C2859 + C2838;
    const double C2900 = C2880 - C2866;
    const double C2899 = C2878 + C2830;
    const double C2898 = C2875 - C2866;
    const double C2897 = C2873 + C2816;
    const double C2896 = C2870 - C2855;
    const double C2895 = C2868 + C2802;
    const double C2894 = C219 - C2867;
    const double C2893 = C2865 - C2773;
    const double C2892 = C2859 + C2790;
    const double C2891 = C219 - C2856;
    const double C2890 = C2854 - C2769;
    const double C2889 = C2850 + C2778;
    const double C2888 = C2849 / C220;
    const double C2887 = C2848 + C2775;
    const double C2886 = C2847 / C220;
    const double C2885 = C2846 + C2771;
    const double C2884 = C2845 / C220;
    const double C2883 = C2844 + C2767;
    const double C2916 = C2902 + C2822;
    const double C2915 = C2901 - C2860;
    const double C2914 = C2899 - C2879;
    const double C2913 = C2897 + C2817;
    const double C2912 = C2895 + C2803;
    const double C2911 = C2894 - C2843;
    const double C2910 = C2893 - C2866;
    const double C2909 = C2892 - C2860;
    const double C2908 = C2891 - C2843;
    const double C2907 = C2890 - C2855;
    const double C2906 = C2889 - C2851;
    const double C2905 = C2887 * C278;
    const double C2904 = C2885 * C278;
    const double C2903 = C2883 * C278;
    const double C2925 = C2916 - C2879;
    const double C2924 = C2913 - C2874;
    const double C2923 = C2912 - C2869;
    const double C2922 = C250 * C2905;
    const double C2921 = C250 * C2904;
    const double C2920 = C250 * C2903;
    const double C2919 = C246 * C2905;
    const double C2918 = C246 * C2904;
    const double C2917 = C246 * C2903;
    const double C2931 = C2922 / C187;
    const double C2930 = C2921 / C187;
    const double C2929 = C2920 / C187;
    const double C2928 = C2919 / C187;
    const double C2927 = C2918 / C187;
    const double C2926 = C2917 / C187;
    const double C2937 = C2911 + C2931;
    const double C2936 = C2930 - C2864;
    const double C2935 = C2929 - C2862;
    const double C2934 = C2928 - C2858;
    const double C2933 = C2908 + C2927;
    const double C2932 = C2926 - C2853;
    const double C2952 = C246 * C2937;
    const double C2951 = C246 * C2936;
    const double C2950 = C246 * C2935;
    const double C2949 = C241 * C2937;
    const double C2948 = C241 * C2936;
    const double C2947 = C241 * C2935;
    const double C2946 = C241 * C2934;
    const double C2945 = C241 * C2933;
    const double C2944 = C241 * C2932;
    const double C2943 = C250 * C2937;
    const double C2942 = C250 * C2936;
    const double C2941 = C250 * C2935;
    const double C2940 = C246 * C2934;
    const double C2939 = C246 * C2933;
    const double C2938 = C246 * C2932;
    const double C2967 = C2836 - C2952;
    const double C2966 = C2900 - C2951;
    const double C2965 = C2832 - C2950;
    const double C2964 = C2827 - C2949;
    const double C2963 = C2823 - C2948;
    const double C2962 = C2898 - C2947;
    const double C2961 = C2813 - C2946;
    const double C2960 = C2809 - C2945;
    const double C2959 = C2896 - C2944;
    const double C2958 = C2910 - C2943;
    const double C2957 = C2863 - C2942;
    const double C2956 = C2861 - C2941;
    const double C2955 = C2857 - C2940;
    const double C2954 = C2907 - C2939;
    const double C2953 = C2852 - C2938;
    const double C2985 = C246 * C2967;
    const double C2984 = C246 * C2966;
    const double C2983 = C246 * C2965;
    const double C2982 = C241 * C2967;
    const double C2981 = C241 * C2966;
    const double C2980 = C241 * C2965;
    const double C2979 = C241 * C2964;
    const double C2978 = C241 * C2963;
    const double C2977 = C241 * C2962;
    const double C2976 = C241 * C2961;
    const double C2975 = C241 * C2960;
    const double C2974 = C241 * C2959;
    const double C2973 = C2958 - C2888;
    const double C2972 = C2957 - C2886;
    const double C2971 = C2956 - C2884;
    const double C2970 = C2955 - C2888;
    const double C2969 = C2954 - C2886;
    const double C2968 = C2953 - C2884;
    const double C3006 = C2882 - C2985;
    const double C3005 = C2925 - C2984;
    const double C3004 = C2881 - C2983;
    const double C3003 = C246 * C2973;
    const double C3002 = C246 * C2972;
    const double C3001 = C246 * C2971;
    const double C3000 = C2835 - C2982;
    const double C2999 = C2833 - C2981;
    const double C2998 = C2914 - C2980;
    const double C2997 = C2877 - C2979;
    const double C2996 = C2876 - C2978;
    const double C2995 = C2924 - C2977;
    const double C2994 = C2872 - C2976;
    const double C2993 = C2871 - C2975;
    const double C2992 = C2923 - C2974;
    const double C2991 = C241 * C2973;
    const double C2990 = C241 * C2972;
    const double C2989 = C241 * C2971;
    const double C2988 = C241 * C2970;
    const double C2987 = C241 * C2969;
    const double C2986 = C241 * C2968;
    const double C3024 = C3006 - C2828;
    const double C3023 = C3005 - C2824;
    const double C3022 = C3004 - C2820;
    const double C3021 = C2839 - C3003;
    const double C3020 = C2915 - C3002;
    const double C3019 = C2837 - C3001;
    const double C3018 = C2997 - C2828;
    const double C3017 = C2996 - C2824;
    const double C3016 = C2995 - C2820;
    const double C3015 = C2994 - C2814;
    const double C3014 = C2993 - C2810;
    const double C3013 = C2992 - C2806;
    const double C3012 = C2797 - C2991;
    const double C3011 = C2794 - C2990;
    const double C3010 = C2909 - C2989;
    const double C3009 = C2786 - C2988;
    const double C3008 = C2782 - C2987;
    const double C3007 = C2906 - C2986;
    const double gx100200 =
        (C178 * ae) / C187 + C239 * C350 + C336 / C187 - (C184 * ae) / C187 -
        C241 * (C218 + C239 * C337 - C2764 - (C2758 * ae) / C187 -
                C241 * (C219 - (C239 * C281) / C187 - C2843 +
                        (C241 * C2903) / C187) -
                C2884) -
        C337 / C187 - C178 - C193 * C350;
    const double gx100020 = C3007 - C469 - C193 * C523;
    const double gx100002 = C3010 - C648 - C193 * C702;
    const double gx100110 = C3013 - C837 - C193 * C849;
    const double gx100101 = C3016 - C978 - C193 * C990;
    const double gx100011 = C2998 - C1097 - C193 * C1105;
    const double gx010200 = C3013 - C196 * C350;
    const double gx010020 =
        C474 * C523 + C503 / C187 - C246 * C2968 - C504 / C187 - C196 * C523;
    const double gx010002 = C3019 - C196 * C702;
    const double gx010110 = C3007 - C196 * C849;
    const double gx010101 = C2998 - C196 * C990;
    const double gx010011 = C3022 - C196 * C1105;
    const double gx001200 = C3016 - C197 * C350;
    const double gx001020 = C3022 - C197 * C523;
    const double gx001002 =
        C653 * C702 + C682 / C187 - C250 * C2971 - C683 / C187 - C197 * C702;
    const double gx001110 = C2998 - C197 * C849;
    const double gx001101 = C3010 - C197 * C990;
    const double gx001011 = C3019 - C197 * C1105;
    gx[(Ai + 0) * matrix_size + Bi + 0] += std::sqrt(3.0) * gx100110;
    gx[(Ai + 0) * matrix_size + Bi + 1] += std::sqrt(3.0) * gx100011;
    gx[(Ai + 0) * matrix_size + Bi + 2] +=
        -0.5 * gx100200 - 0.5 * gx100020 + gx100002;
    gx[(Ai + 0) * matrix_size + Bi + 3] += std::sqrt(3.0) * gx100101;
    gx[(Ai + 0) * matrix_size + Bi + 4] +=
        std::sqrt(0.75) * gx100200 - std::sqrt(0.75) * gx100020;
    gx[(Ai + 1) * matrix_size + Bi + 0] += std::sqrt(3.0) * gx010110;
    gx[(Ai + 1) * matrix_size + Bi + 1] += std::sqrt(3.0) * gx010011;
    gx[(Ai + 1) * matrix_size + Bi + 2] +=
        -0.5 * gx010200 - 0.5 * gx010020 + gx010002;
    gx[(Ai + 1) * matrix_size + Bi + 3] += std::sqrt(3.0) * gx010101;
    gx[(Ai + 1) * matrix_size + Bi + 4] +=
        std::sqrt(0.75) * gx010200 - std::sqrt(0.75) * gx010020;
    gx[(Ai + 2) * matrix_size + Bi + 0] += std::sqrt(3.0) * gx001110;
    gx[(Ai + 2) * matrix_size + Bi + 1] += std::sqrt(3.0) * gx001011;
    gx[(Ai + 2) * matrix_size + Bi + 2] +=
        -0.5 * gx001200 - 0.5 * gx001020 + gx001002;
    gx[(Ai + 2) * matrix_size + Bi + 3] += std::sqrt(3.0) * gx001101;
    gx[(Ai + 2) * matrix_size + Bi + 4] +=
        std::sqrt(0.75) * gx001200 - std::sqrt(0.75) * gx001020;
    const double gy100200 =
        C239 * C345 + C324 / C187 -
        C241 * (C239 * C325 - C2769 -
                C241 * ((C241 * C2904) / C187 - (C239 * C284) / C187) - C2886) -
        C325 / C187 - C193 * C345;
    const double gy100020 = C3008 - C193 * C529;
    const double gy100002 = C3011 - C193 * C703;
    const double gy100110 = C3014 - C193 * C846;
    const double gy100101 = C3017 - C193 * C987;
    const double gy100011 = C2999 - C193 * C1109;
    const double gy010200 = C3014 - C178 - C196 * C345;
    const double gy010020 = C2850 + C474 * C529 + C516 / C187 - C2851 -
                            C246 * C2969 - C517 / C187 - C469 - C196 * C529;
    const double gy010002 = C3020 - C648 - C196 * C703;
    const double gy010110 = C3008 - C837 - C196 * C846;
    const double gy010101 = C2999 - C978 - C196 * C987;
    const double gy010011 = C3023 - C1097 - C196 * C1109;
    const double gy001200 = C3017 - C197 * C345;
    const double gy001020 = C3023 - C197 * C529;
    const double gy001002 =
        C653 * C703 + C684 / C187 - C250 * C2972 - C685 / C187 - C197 * C703;
    const double gy001110 = C2999 - C197 * C846;
    const double gy001101 = C3011 - C197 * C987;
    const double gy001011 = C3020 - C197 * C1109;
    gy[(Ai + 0) * matrix_size + Bi + 0] += std::sqrt(3.0) * gy100110;
    gy[(Ai + 0) * matrix_size + Bi + 1] += std::sqrt(3.0) * gy100011;
    gy[(Ai + 0) * matrix_size + Bi + 2] +=
        -0.5 * gy100200 - 0.5 * gy100020 + gy100002;
    gy[(Ai + 0) * matrix_size + Bi + 3] += std::sqrt(3.0) * gy100101;
    gy[(Ai + 0) * matrix_size + Bi + 4] +=
        std::sqrt(0.75) * gy100200 - std::sqrt(0.75) * gy100020;
    gy[(Ai + 1) * matrix_size + Bi + 0] += std::sqrt(3.0) * gy010110;
    gy[(Ai + 1) * matrix_size + Bi + 1] += std::sqrt(3.0) * gy010011;
    gy[(Ai + 1) * matrix_size + Bi + 2] +=
        -0.5 * gy010200 - 0.5 * gy010020 + gy010002;
    gy[(Ai + 1) * matrix_size + Bi + 3] += std::sqrt(3.0) * gy010101;
    gy[(Ai + 1) * matrix_size + Bi + 4] +=
        std::sqrt(0.75) * gy010200 - std::sqrt(0.75) * gy010020;
    gy[(Ai + 2) * matrix_size + Bi + 0] += std::sqrt(3.0) * gy001110;
    gy[(Ai + 2) * matrix_size + Bi + 1] += std::sqrt(3.0) * gy001011;
    gy[(Ai + 2) * matrix_size + Bi + 2] +=
        -0.5 * gy001200 - 0.5 * gy001020 + gy001002;
    gy[(Ai + 2) * matrix_size + Bi + 3] += std::sqrt(3.0) * gy001101;
    gy[(Ai + 2) * matrix_size + Bi + 4] +=
        std::sqrt(0.75) * gy001200 - std::sqrt(0.75) * gy001020;
    const double gz100200 =
        C239 * C346 + C327 / C187 -
        C241 * (C239 * C328 - C2773 -
                C241 * ((C241 * C2905) / C187 - (C239 * C287) / C187) - C2888) -
        C328 / C187 - C193 * C346;
    const double gz100020 = C3009 - C193 * C525;
    const double gz100002 = C3012 - C193 * C708;
    const double gz100110 = C3015 - C193 * C847;
    const double gz100101 = C3018 - C193 * C988;
    const double gz100011 = C3000 - C193 * C1107;
    const double gz010200 = C3015 - C196 * C346;
    const double gz010020 =
        C474 * C525 + C507 / C187 - C246 * C2970 - C508 / C187 - C196 * C525;
    const double gz010002 = C3021 - C196 * C708;
    const double gz010110 = C3009 - C196 * C847;
    const double gz010101 = C3000 - C196 * C988;
    const double gz010011 = C3024 - C196 * C1107;
    const double gz001200 = C3018 - C178 - C197 * C346;
    const double gz001020 = C3024 - C469 - C197 * C525;
    const double gz001002 = C2859 + C653 * C708 + C696 / C187 - C2860 -
                            C250 * C2973 - C697 / C187 - C648 - C197 * C708;
    const double gz001110 = C3000 - C837 - C197 * C847;
    const double gz001101 = C3012 - C978 - C197 * C988;
    const double gz001011 = C3021 - C1097 - C197 * C1107;
    gz[(Ai + 0) * matrix_size + Bi + 0] += std::sqrt(3.0) * gz100110;
    gz[(Ai + 0) * matrix_size + Bi + 1] += std::sqrt(3.0) * gz100011;
    gz[(Ai + 0) * matrix_size + Bi + 2] +=
        -0.5 * gz100200 - 0.5 * gz100020 + gz100002;
    gz[(Ai + 0) * matrix_size + Bi + 3] += std::sqrt(3.0) * gz100101;
    gz[(Ai + 0) * matrix_size + Bi + 4] +=
        std::sqrt(0.75) * gz100200 - std::sqrt(0.75) * gz100020;
    gz[(Ai + 1) * matrix_size + Bi + 0] += std::sqrt(3.0) * gz010110;
    gz[(Ai + 1) * matrix_size + Bi + 1] += std::sqrt(3.0) * gz010011;
    gz[(Ai + 1) * matrix_size + Bi + 2] +=
        -0.5 * gz010200 - 0.5 * gz010020 + gz010002;
    gz[(Ai + 1) * matrix_size + Bi + 3] += std::sqrt(3.0) * gz010101;
    gz[(Ai + 1) * matrix_size + Bi + 4] +=
        std::sqrt(0.75) * gz010200 - std::sqrt(0.75) * gz010020;
    gz[(Ai + 2) * matrix_size + Bi + 0] += std::sqrt(3.0) * gz001110;
    gz[(Ai + 2) * matrix_size + Bi + 1] += std::sqrt(3.0) * gz001011;
    gz[(Ai + 2) * matrix_size + Bi + 2] +=
        -0.5 * gz001200 - 0.5 * gz001020 + gz001002;
    gz[(Ai + 2) * matrix_size + Bi + 3] += std::sqrt(3.0) * gz001101;
    gz[(Ai + 2) * matrix_size + Bi + 4] +=
        std::sqrt(0.75) * gz001200 - std::sqrt(0.75) * gz001020;
}
