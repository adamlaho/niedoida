/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

#include "gto_d2_kit/d2_ee_ddpd_AA_xx.hpp"
#include <cmath>
/*

*/
#pragma GCC optimize("O0")
namespace {
    const double Pi = M_PI;
}
#pragma GCC optimize("O0")

void second_derivative_ee_2212_11_11(const double ae,
                                     const double xA,
                                     const double yA,
                                     const double zA,
                                     const double be,
                                     const double xB,
                                     const double yB,
                                     const double zB,
                                     const double ce,
                                     const double xC,
                                     const double yC,
                                     const double zC,
                                     const double de,
                                     const double xD,
                                     const double yD,
                                     const double zD,
                                     const double* const bs,
                                     double* const d2ee)
{
    const double p = ae + be;
    const double q = ce + de;
    const double xP = (ae * xA + be * xB) / p;
    const double yP = (ae * yA + be * yB) / p;
    const double zP = (ae * zA + be * zB) / p;
    const double xQ = (ce * xC + de * xD) / q;
    const double yQ = (ce * yC + de * yD) / q;
    const double zQ = (ce * zC + de * zD) / q;
    const double C151944 = 0 * ae;
    const double C151943 = ae * be;
    const double C151942 = 0 * be;
    const double C151941 = 0 * be;
    const double C151940 = xA - xB;
    const double C151939 = ae + be;
    const double C151938 = 0 * be;
    const double C152045 = 0 * be;
    const double C152157 = p + q;
    const double C152156 = p * q;
    const double C152162 = xP - xQ;
    const double C152161 = bs[2];
    const double C152169 = std::pow(ae, 2);
    const double C152167 = bs[3];
    const double C152180 = bs[4];
    const double C152201 = bs[5];
    const double C152234 = bs[6];
    const double C152280 = bs[7];
    const double C152340 = bs[8];
    const double C152408 = yP - yQ;
    const double C152511 = zP - zQ;
    const double C144 = bs[0];
    const double C153370 = ce + de;
    const double C153369 = ce * de;
    const double C153368 = xC - xD;
    const double C153392 = yC - yD;
    const double C153408 = zC - zD;
    const double C153496 = yA - yB;
    const double C153508 = zA - zB;
    const double C151953 = 2 * C151943;
    const double C151950 = -2 * C151942;
    const double C151947 = -2 * C151941;
    const double C151952 = C151943 * C151940;
    const double C151951 = C151940 * C151942;
    const double C151948 = C151940 * C151941;
    const double C153334 = C151940 * be;
    const double C153333 = C151940 * ae;
    const double C153332 = std::pow(C151940, 2);
    const double C151954 = C151944 / C151939;
    const double C151949 = C151942 / C151939;
    const double C151946 = 2 * C151939;
    const double C151945 = std::pow(C151939, 2);
    const double C152047 = C152045 / C151939;
    const double C152158 = 2 * C152156;
    const double C152170 = C152162 * ae;
    const double C152166 = std::pow(C152162, 2);
    const double C152434 = std::pow(C152408, 2);
    const double C152537 = std::pow(C152511, 2);
    const double C153372 = 2 * C153370;
    const double C153382 = std::pow(C153370, 2);
    const double C153374 = C153368 * de;
    const double C153373 = C153368 * ce;
    const double C153371 = std::pow(C153368, 2);
    const double C153393 = std::pow(C153392, 2);
    const double C153445 = C153392 * de;
    const double C153444 = C153392 * ce;
    const double C153409 = std::pow(C153408, 2);
    const double C153473 = C153408 * de;
    const double C153472 = C153408 * ce;
    const double C153497 = std::pow(C153496, 2);
    const double C153552 = C153496 * be;
    const double C153550 = C153496 * ae;
    const double C153509 = std::pow(C153508, 2);
    const double C153592 = C153508 * be;
    const double C153590 = C153508 * ae;
    const double C151959 = ae * C151950;
    const double C151956 = ae * C151947;
    const double C151960 = C151951 / C151939;
    const double C151957 = C151948 / C151939;
    const double C153703 = std::pow(C153333, 2);
    const double C153335 = C153332 * C151943;
    const double C153346 = std::pow(C151946, -1);
    const double C153710 = std::pow(C151946, -2);
    const double C151958 = 2 * C151945;
    const double C151955 = C151945 * C151946;
    const double C152043 = 4 * C151945;
    const double C152160 = C152158 / C152157;
    const double C160 =
        ((std::pow(xP - xQ, 2) * bs[2] * std::pow(C152158 / C152157, 2) -
          (bs[1] * C152158) / C152157) *
         std::pow(ae, 2)) /
        C151945;
    const double C145 = -(C152162 * bs[1] * C152158) / C152157;
    const double C319 = -(C152408 * bs[1] * C152158) / C152157;
    const double C500 = -(C152511 * bs[1] * C152158) / C152157;
    const double C152172 = C152167 * C152170;
    const double C152183 = C152180 * C152170;
    const double C152206 = C152201 * C152170;
    const double C152242 = C152234 * C152170;
    const double C152291 = C152280 * C152170;
    const double C152354 = C152340 * C152170;
    const double C152 = (-(bs[1] * C152170 * C152158) / C152157) / C151939;
    const double C152182 = C152166 * C152180;
    const double C152205 = C152166 * C152201;
    const double C152241 = C152166 * C152234;
    const double C152290 = C152166 * C152280;
    const double C152353 = C152166 * C152340;
    const double C153383 = std::pow(C153372, -1);
    const double C153722 = std::pow(C153372, -2);
    const double C153387 = 2 * C153382;
    const double C153720 = 4 * C153382;
    const double C153375 = C153371 * C153369;
    const double C153394 = C153393 * C153369;
    const double C153410 = C153409 * C153369;
    const double C153498 = C153497 * C151943;
    const double C153734 = std::pow(C153550, 2);
    const double C153510 = C153509 * C151943;
    const double C153736 = std::pow(C153590, 2);
    const double C151965 = C151940 * C151959;
    const double C151966 = 0 - C151960;
    const double C151962 = 0 - C151957;
    const double C153336 = C153335 / C151939;
    const double C151971 = C151942 / C151958;
    const double C151967 = C151941 / C151958;
    const double C151963 = C151938 / C151958;
    const double C151968 = C151959 / C151955;
    const double C151964 = C151956 / C151955;
    const double C153713 = 4 * C151955;
    const double C152046 = C151939 * C152043;
    const double C152163 = std::pow(C152160, 2);
    const double C152168 = -C152160;
    const double C152181 = std::pow(C152160, 4);
    const double C152235 = std::pow(C152160, 6);
    const double C152341 = std::pow(C152160, 8);
    const double C153376 = C153375 / C153370;
    const double C153395 = C153394 / C153370;
    const double C153411 = C153410 / C153370;
    const double C153499 = C153498 / C151939;
    const double C153511 = C153510 / C151939;
    const double C151974 = C151965 / C151945;
    const double C151975 = C151966 * ae;
    const double C151973 = C151962 * ae;
    const double C153337 = -C153336;
    const double C152165 = C152161 * C152163;
    const double C161 = (2 * ae * C152163 * C152161 * C152162 * ae +
                         C152162 *
                             (C152161 * C152163 + std::pow(C152162, 2) * bs[3] *
                                                      std::pow(-C152160, 3)) *
                             std::pow(ae, 2)) /
                        C151945;
    const double C153 = (C152162 * C152163 * C152161 * C152170) / C151939 -
                        (ae * bs[1] * C152158) / (C152157 * C151939);
    const double C331 = (C152408 * C152163 * C152161 * C152170) / C151939;
    const double C512 = (C152511 * C152163 * C152161 * C152170) / C151939;
    const double C152171 = std::pow(C152168, 3);
    const double C152202 = std::pow(C152168, 5);
    const double C152281 = std::pow(C152168, 7);
    const double C152187 = C152181 * C152183;
    const double C152186 = C152182 * C152181;
    const double C152200 = C152180 * C152181;
    const double C152247 = C152235 * C152242;
    const double C152246 = C152241 * C152235;
    const double C152279 = C152234 * C152235;
    const double C152361 = C152341 * C152354;
    const double C152360 = C152353 * C152341;
    const double C153377 = -C153376;
    const double C153396 = -C153395;
    const double C153412 = -C153411;
    const double C153500 = -C153499;
    const double C153512 = -C153511;
    const double C151980 = C151975 / C151939;
    const double C151979 = C151973 / C151939;
    const double C153338 = std::exp(C153337);
    const double C152173 = C152165 * ae;
    const double C146 = C152165 * C152166 - (bs[1] * C152158) / C152157;
    const double C318 = C152408 * C152162 * C152165;
    const double C320 = C152165 * C152434 - (bs[1] * C152158) / C152157;
    const double C499 = C152511 * C152162 * C152165;
    const double C501 = C152165 * C152537 - (bs[1] * C152158) / C152157;
    const double C981 = C152511 * C152408 * C152165;
    const double C152174 = C152171 * C152172;
    const double C152179 = C152167 * C152171;
    const double C343 =
        (C152408 * (C152165 + C152166 * C152167 * C152171) * C152169) / C151945;
    const double C524 =
        (C152511 * (C152165 + C152166 * C152167 * C152171) * C152169) / C151945;
    const double C152211 = C152202 * C152206;
    const double C152210 = C152205 * C152202;
    const double C152233 = C152201 * C152202;
    const double C152297 = C152281 * C152291;
    const double C152296 = C152290 * C152281;
    const double C152339 = C152280 * C152281;
    const double C152190 = C152162 * C152187;
    const double C152199 = ae * C152187;
    const double C153082 = C152408 * C152187;
    const double C152209 = C152200 * C152166;
    const double C152208 = C152162 * C152200;
    const double C152207 = C152200 * ae;
    const double C153216 = C152200 * C152434;
    const double C153244 = C152408 * C152200;
    const double C153252 = C152200 * C152537;
    const double C153295 = C152511 * C152200;
    const double C152251 = C152162 * C152247;
    const double C152278 = ae * C152247;
    const double C152449 = C152247 * C152434;
    const double C152468 = C152408 * C152247;
    const double C152552 = C152247 * C152537;
    const double C152571 = C152511 * C152247;
    const double C152294 = C152279 * C152166;
    const double C152293 = C152162 * C152279;
    const double C152292 = C152279 * ae;
    const double C153273 = C152279 * C152434;
    const double C153314 = C152408 * C152279;
    const double C153323 = C152279 * C152537;
    const double C152365 = C152162 * C152361;
    const double C153378 = std::exp(C153377);
    const double C153397 = std::exp(C153396);
    const double C153413 = std::exp(C153412);
    const double C153501 = std::exp(C153500);
    const double C153513 = std::exp(C153512);
    const double C151985 = C151980 - C151967;
    const double C151984 = C151979 - C151963;
    const double C151961 = C151952 * C153338;
    const double C153340 = C153338 * C153333;
    const double C153339 = C153338 / C151946;
    const double C153348 = C153346 * C153338;
    const double C153706 = C153338 * C153334;
    const double C153761 = C153710 * C153338;
    const double C153755 = C153338 * C153703;
    const double C152175 = C152162 * C152174;
    const double C332 =
        (C152163 * C152161 * C152170 + C152174 * C152434) / C151939;
    const double C513 =
        (C152163 * C152161 * C152170 + C152174 * C152537) / C151939;
    const double C987 = (C152511 * C152408 * C152174) / C151939;
    const double C1232 =
        (2 * C152408 * C152174 + C152408 * (C152174 + C152187 * C152434)) /
        C151939;
    const double C1374 =
        (C152408 * C152174 + C152408 * C152187 * C152537) / C151939;
    const double C1805 = (C152511 * (C152174 + C152187 * C152434)) / C151939;
    const double C2157 =
        (2 * C152511 * C152174 + C152511 * (C152174 + C152187 * C152537)) /
        C151939;
    const double C152185 = C152162 * C152179;
    const double C152184 = C152179 * ae;
    const double C152189 = C152179 + C152186;
    const double C153232 = C152408 * C152179;
    const double C147 =
        2 * C152162 * C152165 + C152162 * (C152165 + C152179 * C152166);
    const double C317 = C152408 * (C152165 + C152179 * C152166);
    const double C498 = C152511 * (C152165 + C152179 * C152166);
    const double C1227 =
        2 * C152408 * C152165 + C152408 * (C152165 + C152179 * C152434);
    const double C1369 = C152408 * C152165 + C152408 * C152179 * C152537;
    const double C1800 = C152511 * (C152165 + C152179 * C152434);
    const double C2152 =
        2 * C152511 * C152165 + C152511 * (C152165 + C152179 * C152537);
    const double C2989 = 3 * (C152165 + C152179 * C152434) +
                         C152408 * (2 * C152408 * C152179 +
                                    C152408 * (C152179 + C152200 * C152434));
    const double C3327 =
        C152165 + C152179 * C152434 + (C152179 + C152200 * C152434) * C152537;
    const double C4143 = C152511 * (2 * C152408 * C152179 +
                                    C152408 * (C152179 + C152200 * C152434));
    const double C7560 = 3 * (C152165 + C152179 * C152537) +
                         C152511 * (2 * C152511 * C152179 +
                                    C152511 * (C152179 + C152200 * C152537));
    const double C28386 = C153338 * C343;
    const double C31247 = C153338 * C524;
    const double C152215 = C152162 * C152211;
    const double C152232 = ae * C152211;
    const double C152410 = C152408 * C152211;
    const double C152513 = C152511 * C152211;
    const double C153068 = C152211 * C152434;
    const double C153094 = C152211 * C152537;
    const double C2993 = (3 * (C152174 + C152187 * C152434) +
                          C152408 * (2 * C152408 * C152187 +
                                     C152408 * (C152187 + C152211 * C152434))) /
                         C151939;
    const double C3331 = (C152174 + C152187 * C152434 +
                          (C152187 + C152211 * C152434) * C152537) /
                         C151939;
    const double C4147 = (C152511 * (2 * C152408 * C152187 +
                                     C152408 * (C152187 + C152211 * C152434))) /
                         C151939;
    const double C7564 = (3 * (C152174 + C152187 * C152537) +
                          C152511 * (2 * C152511 * C152187 +
                                     C152511 * (C152187 + C152211 * C152537))) /
                         C151939;
    const double C152214 = C152200 + C152210;
    const double C152245 = C152233 * C152166;
    const double C152244 = C152162 * C152233;
    const double C152243 = C152233 * ae;
    const double C152250 = C152233 + C152246;
    const double C153256 = C152233 * C152434;
    const double C153272 = C152408 * C152233;
    const double C153296 = C152233 * C152537;
    const double C153322 = C152511 * C152233;
    const double C152301 = C152162 * C152297;
    const double C152338 = ae * C152297;
    const double C152487 = C152297 * C152434;
    const double C152590 = C152297 * C152537;
    const double C152616 = C152408 * C152297;
    const double C152642 = C152511 * C152297;
    const double C152300 = C152279 + C152296;
    const double C152357 = C152339 * C152166;
    const double C152356 = C152162 * C152339;
    const double C152355 = C152339 * ae;
    const double C152364 = C152339 + C152360;
    const double C152204 = 2 * C152199;
    const double C152213 = C152179 + C152209;
    const double C152212 = C152208 * ae;
    const double C152238 = 2 * C152208;
    const double C153230 = C152408 * C152208;
    const double C153217 = C152179 + C153216;
    const double C153255 = 2 * C153244;
    const double C153253 = C152179 + C153252;
    const double C153297 = 2 * C153295;
    const double C152289 = 2 * C152278;
    const double C152454 = C152211 + C152449;
    const double C152475 = ae * C152468;
    const double C152677 = C152511 * C152468;
    const double C152711 = 2 * C152468;
    const double C153121 = C152468 * C152537;
    const double C152557 = C152211 + C152552;
    const double C152578 = ae * C152571;
    const double C152810 = 2 * C152571;
    const double C152299 = C152233 + C152294;
    const double C152298 = C152293 * ae;
    const double C152346 = 2 * C152293;
    const double C153262 = C152293 * C152434;
    const double C153303 = C152293 * C152537;
    const double C153309 = C152408 * C152293;
    const double C153275 = C152233 + C153273;
    const double C153316 = C153314 * C152537;
    const double C153325 = C152233 + C153323;
    const double C153379 = C153378 * C153373;
    const double C153384 = C153383 * C153378;
    const double C153717 = C153378 * C153374;
    const double C153714 = C153378 / C153372;
    const double C1135 = C153722 * C153378;
    const double C153446 = C153397 * C153444;
    const double C153449 = C153383 * C153397;
    const double C153726 = C153397 * C153445;
    const double C153721 = C153397 / C153372;
    const double C312 = C153722 * C153397;
    const double C153474 = C153413 * C153472;
    const double C153477 = C153383 * C153413;
    const double C153730 = C153413 * C153473;
    const double C153723 = C153413 / C153372;
    const double C495 = C153722 * C153413;
    const double C153551 = C153501 / C151946;
    const double C153553 = C153501 * C153550;
    const double C153560 = C153346 * C153501;
    const double C153741 = C153501 * C153552;
    const double C153774 = C153710 * C153501;
    const double C153772 = C153501 * C153734;
    const double C153591 = C153513 / C151946;
    const double C153593 = C153513 * C153590;
    const double C153600 = C153346 * C153513;
    const double C153748 = C153513 * C153592;
    const double C153777 = C153710 * C153513;
    const double C153775 = C153513 * C153736;
    const double C151993 = C151985 / C151946;
    const double C151990 = C151940 * C151985;
    const double C151989 = 2 * C151985;
    const double C151988 = C151984 + C151949;
    const double C151972 = C151961 / C151945;
    const double C151970 = 2 * C151961;
    const double C151969 = -4 * C151961;
    const double C153341 = C153340 * C153334;
    const double C153347 = C153340 / C151958;
    const double C153707 = C153346 * C153340;
    const double C153705 = C153340 / C151939;
    const double C2723 = (C153338 * std::pow(C153334, 2)) / C151945 + C153339;
    const double C153349 = C153348 * C153334;
    const double C153738 = C153348 / C152043;
    const double C153711 = C153333 * C153348;
    const double C153709 = 2 * C153348;
    const double C125 = C153348 / C153713;
    const double C83541 = C153348 / C151946;
    const double C153757 = C153706 / C151939;
    const double C2724 = (-2 * C153346 * C153706) / C151939;
    const double C153788 = C153755 / C151945;
    const double C152176 = C152175 + C152173;
    const double C152188 = C152185 * ae;
    const double C321 = C152162 * C152165 + C152185 * C152434;
    const double C502 = C152162 * C152165 + C152185 * C152537;
    const double C982 = C152511 * C152408 * C152185;
    const double C1226 =
        2 * C152408 * C152185 + C152408 * (C152185 + C152208 * C152434);
    const double C1368 = C152408 * C152185 + C152408 * C152208 * C152537;
    const double C1799 = C152511 * (C152185 + C152208 * C152434);
    const double C2151 =
        2 * C152511 * C152185 + C152511 * (C152185 + C152208 * C152537);
    const double C152192 = C152190 + C152184;
    const double C152191 = C152189 * C152169;
    const double C6218 = 2 * C152511 * C153232 +
                         C152511 * (C153232 + C152408 * C152200 * C152537);
    const double C9042 =
        3 * (C153232 + C153244 * C152537) +
        C152511 * (2 * C152511 * C153244 +
                   C152511 * (C153244 + C152408 * C152233 * C152537));
    const double C152218 = C152215 + C152207;
    const double C152240 = 2 * C152232;
    const double C152416 = ae * C152410;
    const double C153097 = 2 * C152410;
    const double C6224 =
        (2 * C152511 * C153082 + C152511 * (C153082 + C152410 * C152537)) /
        C151939;
    const double C9045 = (3 * (C153082 + C152410 * C152537) +
                          C152511 * (2 * C152511 * C152410 +
                                     C152511 * (C152410 + C152468 * C152537))) /
                         C151939;
    const double C152519 = ae * C152513;
    const double C153124 = 2 * C152513;
    const double C153069 = C152187 + C153068;
    const double C153095 = C152187 + C153094;
    const double C152217 = C152214 * C152169;
    const double C152249 = C152200 + C152245;
    const double C152248 = C152244 * ae;
    const double C152285 = 2 * C152244;
    const double C153213 = C152244 * C152434;
    const double C153242 = C152408 * C152244;
    const double C153249 = C152244 * C152537;
    const double C153302 = C152511 * C152244;
    const double C2990 = 3 * (C152185 + C152208 * C152434) +
                         C152408 * (2 * C152408 * C152208 +
                                    C152408 * (C152208 + C152244 * C152434));
    const double C3328 =
        C152185 + C152208 * C152434 + (C152208 + C152244 * C152434) * C152537;
    const double C4144 = C152511 * (2 * C152408 * C152208 +
                                    C152408 * (C152208 + C152244 * C152434));
    const double C7561 = 3 * (C152185 + C152208 * C152537) +
                         C152511 * (2 * C152511 * C152208 +
                                    C152511 * (C152208 + C152244 * C152537));
    const double C152255 = C152251 + C152243;
    const double C152254 = C152250 * C152169;
    const double C153257 = C152200 + C153256;
    const double C153274 = 2 * C153272;
    const double C153292 = C153272 * C152537;
    const double C153313 = C152511 * C153272;
    const double C153298 = C152200 + C153296;
    const double C153324 = 2 * C153322;
    const double C152305 = C152301 + C152292;
    const double C152352 = 2 * C152338;
    const double C152494 = C152247 + C152487;
    const double C152597 = C152247 + C152590;
    const double C152625 = ae * C152616;
    const double C152691 = C152511 * C152616;
    const double C152752 = C152616 * C152537;
    const double C152651 = ae * C152642;
    const double C152304 = C152300 * C152169;
    const double C152363 = C152279 + C152357;
    const double C152362 = C152356 * ae;
    const double C152369 = C152365 + C152355;
    const double C152368 = C152364 * C152169;
    const double C152216 = C152213 * ae;
    const double C148 = 3 * (C152165 + C152179 * C152166) +
                        C152162 * (2 * C152185 + C152162 * C152213);
    const double C316 = C152408 * (2 * C152185 + C152162 * C152213);
    const double C322 = C152165 + C152179 * C152166 + C152213 * C152434;
    const double C497 = C152511 * (2 * C152185 + C152162 * C152213);
    const double C503 = C152165 + C152179 * C152166 + C152213 * C152537;
    const double C983 = C152511 * C152408 * C152213;
    const double C6217 = 2 * C152511 * C153230 +
                         C152511 * (C153230 + C152408 * C152244 * C152537);
    const double C4587 =
        4 * (2 * C152408 * C152179 + C152408 * C153217) +
        C152408 *
            (3 * C153217 + C152408 * (2 * C152408 * C152200 +
                                      C152408 * (C152200 + C152233 * C152434)));
    const double C4835 =
        2 * C152408 * C152179 + C152408 * C153217 +
        (2 * C152408 * C152200 + C152408 * (C152200 + C152233 * C152434)) *
            C152537;
    const double C5603 =
        C152511 *
        (3 * C153217 + C152408 * (2 * C152408 * C152200 +
                                  C152408 * (C152200 + C152233 * C152434)));
    const double C6215 =
        2 * C152511 * C153217 +
        C152511 * (C153217 + (C152200 + C152233 * C152434) * C152537);
    const double C10379 =
        4 * (2 * C152511 * C152179 + C152511 * C153253) +
        C152511 *
            (3 * C153253 + C152511 * (2 * C152511 * C152200 +
                                      C152511 * (C152200 + C152233 * C152537)));
    const double C152459 = ae * C152454;
    const double C153098 = C152408 * C152454;
    const double C153106 = 3 * C152454;
    const double C152481 = 2 * C152475;
    const double C152682 = ae * C152677;
    const double C153130 = 2 * C152677;
    const double C153122 = C152410 + C153121;
    const double C152562 = ae * C152557;
    const double C153125 = C152511 * C152557;
    const double C153134 = 3 * C152557;
    const double C152584 = 2 * C152578;
    const double C152303 = C152162 * C152299;
    const double C152302 = C152299 * ae;
    const double C152347 = 3 * C152299;
    const double C153210 = C152299 * C152434;
    const double C153240 = C152408 * C152299;
    const double C153246 = C152299 * C152537;
    const double C153263 = C152244 + C153262;
    const double C153305 = C152244 + C153303;
    const double C153310 = C153309 * C152537;
    const double C153276 = C152408 * C153275;
    const double C153289 = C153275 * C152537;
    const double C153317 = C153272 + C153316;
    const double C153326 = C152511 * C153325;
    const double C153718 = C153379 / C153387;
    const double C153716 = C153379 / C153370;
    const double C153715 = C153379 * C153374;
    const double C1134 = (2 * C153383 * C153379) / C153370;
    const double C153719 = C153384 * C153374;
    const double C133 = C153384 / C153720;
    const double C678 = C153384 / C153372;
    const double C153764 = C153717 / C153370;
    const double C1133 = (C153378 * std::pow(C153373, 2)) / C153382 + C153714;
    const double C153728 = C153446 / C153387;
    const double C153727 = C153446 * C153445;
    const double C153724 = C153446 / C153370;
    const double C311 = (2 * C153383 * C153446) / C153370;
    const double C153729 = C153449 * C153445;
    const double C1221 = C153449 / C153720;
    const double C1509 = C153449 / C153372;
    const double C153766 = C153726 / C153370;
    const double C310 = (C153397 * std::pow(C153444, 2)) / C153382 + C153721;
    const double C153732 = C153474 / C153387;
    const double C153731 = C153474 * C153473;
    const double C153725 = C153474 / C153370;
    const double C494 = (2 * C153383 * C153474) / C153370;
    const double C153733 = C153477 * C153473;
    const double C2147 = C153477 / C153720;
    const double C2454 = C153477 / C153372;
    const double C153769 = C153730 / C153370;
    const double C493 = (C153413 * std::pow(C153472, 2)) / C153382 + C153723;
    const double C23987 = (C153501 * std::pow(C153552, 2)) / C151945 + C153551;
    const double C153554 = C153553 * C153552;
    const double C153559 = C153553 / C151958;
    const double C153739 = C153553 / C151939;
    const double C153735 = C153346 * C153553;
    const double C153561 = C153560 * C153552;
    const double C153747 = C153560 / C152043;
    const double C153745 = C153550 * C153560;
    const double C153744 = 2 * C153560;
    const double C28233 = C153560 / C153713;
    const double C83544 = C153560 / C151946;
    const double C153779 = C153741 / C151939;
    const double C23988 = (-2 * C153346 * C153741) / C151939;
    const double C153799 = C153772 / C151945;
    const double C47673 = (C153513 * std::pow(C153592, 2)) / C151945 + C153591;
    const double C153594 = C153593 * C153592;
    const double C153599 = C153593 / C151958;
    const double C153740 = C153593 / C151939;
    const double C153737 = C153346 * C153593;
    const double C153601 = C153600 * C153592;
    const double C153754 = C153600 / C152043;
    const double C153752 = C153590 * C153600;
    const double C153751 = 2 * C153600;
    const double C55726 = C153600 / C153713;
    const double C116108 = C153600 / C151946;
    const double C153784 = C153748 / C151939;
    const double C47674 = (-2 * C153346 * C153748) / C151939;
    const double C153801 = C153775 / C151945;
    const double C151997 = C151990 + 0;
    const double C151995 = C151974 + C151989;
    const double C151996 = C151988 / C151946;
    const double C151978 = C151954 - C151972;
    const double C151977 = C151940 * C151970;
    const double C2734 =
        ((-C151970 / C151939) / C151946 - (0 * be) / C151939) / C151946 -
        (0 * be) / C151939;
    const double C28235 = -C151970 / C151939;
    const double C74250 = (-C151970 / C151939) / C151946 - (0 * be) / C151939;
    const double C151976 = C151969 / C151939;
    const double C153342 = C153341 / C151945;
    const double C153758 = 2 * C153707;
    const double C35119 = C153705 * C343;
    const double C39379 = C153705 * C524;
    const double C3003 = C2723 * C343;
    const double C7574 = C2723 * C524;
    const double C153350 = C153349 / C151939;
    const double C153762 = C153711 / C151958;
    const double C153789 = C153705 - C153757;
    const double C74241 = -C153757;
    const double C153809 = C153788 + C153339;
    const double C152177 = ae * C152176;
    const double C154 = (C152163 * C152161 * C152170 + C152162 * C152176 +
                         C152162 * C152165 * ae) /
                        C151939;
    const double C330 = (C152408 * C152176) / C151939;
    const double C511 = (C152511 * C152176) / C151939;
    const double C152194 = ae * C152192;
    const double C152193 = C152162 * C152192;
    const double C152203 = 2 * C152192;
    const double C152428 = C152408 * C152192;
    const double C152531 = C152511 * C152192;
    const double C333 = (C152176 + C152192 * C152434) / C151939;
    const double C514 = (C152176 + C152192 * C152537) / C151939;
    const double C342 =
        (2 * ae * C152408 * C152174 + C152162 * C152408 * C152191) / C151945;
    const double C344 = ((C152165 + C152166 * C152167 * C152171) * C152169 +
                         C152191 * std::pow(C152408, 2)) /
                        C151945;
    const double C523 =
        (2 * ae * C152511 * C152174 + C152162 * C152511 * C152191) / C151945;
    const double C525 = ((C152165 + C152166 * C152167 * C152171) * C152169 +
                         C152191 * std::pow(C152511, 2)) /
                        C151945;
    const double C993 = (C152511 * C152408 * C152191) / C151945;
    const double C152221 = ae * C152218;
    const double C152220 = C152162 * C152218;
    const double C152237 = 2 * C152218;
    const double C152409 = C152408 * C152218;
    const double C152436 = C152218 * C152434;
    const double C152512 = C152511 * C152218;
    const double C152539 = C152218 * C152537;
    const double C152421 = 2 * C152416;
    const double C152524 = 2 * C152519;
    const double C4590 =
        (4 * (2 * C152408 * C152187 + C152408 * C153069) +
         C152408 *
             (3 * C153069 + C152408 * (2 * C152410 + C152408 * C152454))) /
        C151939;
    const double C4838 = (2 * C152408 * C152187 + C152408 * C153069 +
                          (2 * C152410 + C152408 * C152454) * C152537) /
                         C151939;
    const double C5606 =
        (C152511 *
         (3 * C153069 + C152408 * (2 * C152410 + C152408 * C152454))) /
        C151939;
    const double C6221 =
        (2 * C152511 * C153069 + C152511 * (C153069 + C152454 * C152537)) /
        C151939;
    const double C10382 =
        (4 * (2 * C152511 * C152187 + C152511 * C153095) +
         C152511 *
             (3 * C153095 + C152511 * (2 * C152513 + C152511 * C152557))) /
        C151939;
    const double C152219 = C152162 * C152217;
    const double C152424 = C152408 * C152217;
    const double C152527 = C152511 * C152217;
    const double C345 = (2 * ae * (C152174 + C152187 * C152434) +
                         C152162 * (C152191 + C152217 * C152434)) /
                        C151945;
    const double C526 = (2 * ae * (C152174 + C152187 * C152537) +
                         C152162 * (C152191 + C152217 * C152537)) /
                        C151945;
    const double C1237 =
        (2 * C152408 * C152191 + C152408 * (C152191 + C152217 * C152434)) /
        C151945;
    const double C1810 = (C152511 * (C152191 + C152217 * C152434)) / C151945;
    const double C2162 =
        (2 * C152511 * C152191 + C152511 * (C152191 + C152217 * C152537)) /
        C151945;
    const double C152253 = C152162 * C152249;
    const double C152252 = C152249 * ae;
    const double C152286 = 3 * C152249;
    const double C153228 = C152408 * C152249;
    const double C1225 =
        2 * C152408 * C152213 + C152408 * (C152213 + C152249 * C152434);
    const double C1367 = C152408 * C152213 + C152408 * C152249 * C152537;
    const double C1798 = C152511 * (C152213 + C152249 * C152434);
    const double C2150 =
        2 * C152511 * C152213 + C152511 * (C152213 + C152249 * C152537);
    const double C2991 = 3 * (C152213 + C152249 * C152434) +
                         C152408 * (2 * C152408 * C152249 +
                                    C152408 * (C152249 + C152299 * C152434));
    const double C3329 =
        C152213 + C152249 * C152434 + (C152249 + C152299 * C152434) * C152537;
    const double C4145 = C152511 * (2 * C152408 * C152249 +
                                    C152408 * (C152249 + C152299 * C152434));
    const double C7562 = 3 * (C152213 + C152249 * C152537) +
                         C152511 * (2 * C152511 * C152249 +
                                    C152511 * (C152249 + C152299 * C152537));
    const double C153214 = C152208 + C153213;
    const double C153261 = 2 * C153242;
    const double C9041 =
        3 * (C153230 + C153242 * C152537) +
        C152511 * (2 * C152511 * C153242 +
                   C152511 * (C153242 + C152408 * C152293 * C152537));
    const double C153250 = C152208 + C153249;
    const double C153304 = 2 * C153302;
    const double C152260 = ae * C152255;
    const double C152258 = C152162 * C152255;
    const double C152284 = 2 * C152255;
    const double C152414 = C152408 * C152255;
    const double C152442 = C152255 * C152434;
    const double C152517 = C152511 * C152255;
    const double C152545 = C152255 * C152537;
    const double C152257 = C152162 * C152254;
    const double C152411 = C152408 * C152254;
    const double C152440 = C152254 * C152434;
    const double C152514 = C152511 * C152254;
    const double C152543 = C152254 * C152537;
    const double C153258 = C152408 * C153257;
    const double C153271 = 3 * C153257;
    const double C31239 = 3 * (C153217 + C153257 * C152537) +
                          C152511 * (2 * C152511 * C153257 +
                                     C152511 * (C153257 + C153275 * C152537));
    const double C153293 = C153244 + C153292;
    const double C153315 = 2 * C153313;
    const double C153299 = C152511 * C153298;
    const double C153321 = 3 * C153298;
    const double C152311 = ae * C152305;
    const double C152308 = C152162 * C152305;
    const double C152345 = 2 * C152305;
    const double C152453 = C152305 * C152434;
    const double C152473 = C152408 * C152305;
    const double C152556 = C152305 * C152537;
    const double C152576 = C152511 * C152305;
    const double C152500 = ae * C152494;
    const double C152712 = C152408 * C152494;
    const double C152785 = C152511 * C152494;
    const double C153118 = C152494 * C152537;
    const double C31241 =
        (3 * (C153069 + C152454 * C152537) +
         C152511 * (2 * C152511 * C152454 +
                    C152511 * (C152454 + C152494 * C152537))) /
        C151939;
    const double C152603 = ae * C152597;
    const double C152811 = C152511 * C152597;
    const double C152633 = 2 * C152625;
    const double C152698 = ae * C152691;
    const double C152758 = C152468 + C152752;
    const double C152659 = 2 * C152651;
    const double C152307 = C152162 * C152304;
    const double C152450 = C152304 * C152434;
    const double C152469 = C152408 * C152304;
    const double C152553 = C152304 * C152537;
    const double C152572 = C152511 * C152304;
    const double C152367 = C152162 * C152363;
    const double C152366 = C152363 * ae;
    const double C152375 = ae * C152369;
    const double C152372 = C152162 * C152369;
    const double C152492 = C152369 * C152434;
    const double C152595 = C152369 * C152537;
    const double C152622 = C152408 * C152369;
    const double C152648 = C152511 * C152369;
    const double C152371 = C152162 * C152368;
    const double C152488 = C152368 * C152434;
    const double C152591 = C152368 * C152537;
    const double C152617 = C152408 * C152368;
    const double C152643 = C152511 * C152368;
    const double C152464 = 2 * C152459;
    const double C153099 = C153097 + C153098;
    const double C152687 = 2 * C152682;
    const double C152567 = 2 * C152562;
    const double C153126 = C153124 + C153125;
    const double C152306 = C152285 + C152303;
    const double C153211 = C152249 + C153210;
    const double C153247 = C152249 + C153246;
    const double C153264 = C152408 * C153263;
    const double C153306 = C152511 * C153305;
    const double C153311 = C153242 + C153310;
    const double C153277 = C153274 + C153276;
    const double C153290 = C153257 + C153289;
    const double C153318 = C152511 * C153317;
    const double C153327 = C153324 + C153326;
    const double C153763 = C153715 / C153382;
    const double C153765 = C153719 / C153370;
    const double C313 = -C153764;
    const double C153767 = C153727 / C153382;
    const double C153768 = C153729 / C153370;
    const double C1131 = -C153766;
    const double C153770 = C153731 / C153382;
    const double C153771 = C153733 / C153370;
    const double C1938 = -C153769;
    const double C153555 = C153554 / C151945;
    const double C153773 = 2 * C153735;
    const double C153562 = C153561 / C151939;
    const double C153782 = C153745 / C151958;
    const double C153803 = C153739 - C153779;
    const double C70419 = -C153779;
    const double C153812 = C153799 + C153551;
    const double C153595 = C153594 / C151945;
    const double C153776 = 2 * C153737;
    const double C153602 = C153601 / C151939;
    const double C153787 = C153752 / C151958;
    const double C153806 = C153740 - C153784;
    const double C98471 = -C153784;
    const double C153813 = C153801 + C153591;
    const double C152003 = C151997 * be;
    const double C152002 = C151995 * be;
    const double C34893 = C151978 * C153;
    const double C151983 = C151940 * C151978;
    const double C151982 = 2 * C151978;
    const double C152044 = C151978 / C151946;
    const double C151981 = C151977 / C151939;
    const double C28246 = C28235 * C153;
    const double C28241 = C28235 * C2993;
    const double C28240 = C28235 * C1232;
    const double C28239 = C28235 * C332;
    const double C28238 = C28235 * C331;
    const double C28237 = C28235 * C152;
    const double C28584 = C28235 * C3331;
    const double C28583 = C28235 * C1374;
    const double C28582 = C28235 * C513;
    const double C28581 = C28235 * C512;
    const double C28580 = C28235 * C987;
    const double C28579 = C28235 * C1805;
    const double C28578 = C28235 * C4147;
    const double C30205 = C28235 * C2157;
    const double C30204 = C28235 * C6224;
    const double C31257 = C28235 * C9045;
    const double C31256 = C28235 * C7564;
    const double C74253 = C74250 * C153;
    const double C153343 = C153339 - C153342;
    const double C153790 = C153758 / C151939;
    const double C153351 = C153347 - C153350;
    const double C153810 = C153789 / C151946;
    const double C74479 = C74241 * C343;
    const double C78757 = C74241 * C524;
    const double C24252 = C153809 * C343;
    const double C48123 = C153809 * C524;
    const double C162 =
        ((C152165 + C152166 * C152167 * C152171) * C152169 + C152177 + C152177 +
         C152162 *
             (2 * ae * C152174 +
              C152162 *
                  (C152167 * C152171 + C152166 * bs[4] * std::pow(C152160, 4)) *
                  C152169)) /
        C151945;
    const double C2738 = C2734 * C154;
    const double C28247 = C28235 * C154;
    const double C34906 = C151978 * C154;
    const double C74266 = C74250 * C154;
    const double C28245 = C28235 * C330;
    const double C34895 = C151978 * C330;
    const double C74255 = C74250 * C330;
    const double C28587 = C28235 * C511;
    const double C35414 = C151978 * C511;
    const double C74774 = C74250 * C511;
    const double C152195 = C152174 + C152193;
    const double C152429 = ae * C152428;
    const double C988 = (C152511 * C152428) / C151939;
    const double C152532 = ae * C152531;
    const double C28244 = C28235 * C333;
    const double C34897 = C151978 * C333;
    const double C74257 = C74250 * C333;
    const double C28596 = C28235 * C514;
    const double C35417 = C151978 * C514;
    const double C74777 = C74250 * C514;
    const double C3027 = C2723 * C342;
    const double C3005 = C2724 * C342;
    const double C24276 = C153809 * C342;
    const double C28398 = C153338 * C342;
    const double C35139 = C153705 * C342;
    const double C35121 = C153348 * C342;
    const double C74499 = C74241 * C342;
    const double C74481 = C153348 * C342;
    const double C3009 = C2723 * C344;
    const double C24258 = C153809 * C344;
    const double C28388 = C153338 * C344;
    const double C35123 = C153705 * C344;
    const double C74483 = C74241 * C344;
    const double C7595 = C2723 * C523;
    const double C7576 = C2724 * C523;
    const double C31260 = C153338 * C523;
    const double C39387 = C153705 * C523;
    const double C39381 = C153348 * C523;
    const double C48144 = C153809 * C523;
    const double C78778 = C74241 * C523;
    const double C78759 = C153348 * C523;
    const double C7580 = C2723 * C525;
    const double C31249 = C153338 * C525;
    const double C39385 = C153705 * C525;
    const double C48129 = C153809 * C525;
    const double C78761 = C74241 * C525;
    const double C4167 = C2723 * C993;
    const double C25392 = C153809 * C993;
    const double C29046 = C153338 * C993;
    const double C36137 = C153705 * C993;
    const double C75497 = C74241 * C993;
    const double C152231 = C152217 + C152221;
    const double C152223 = C152187 + C152220;
    const double C152415 = ae * C152409;
    const double C152668 = C152511 * C152409;
    const double C152744 = 2 * C152409;
    const double C1373 = (C152428 + C152409 * C152537) / C151939;
    const double C152437 = C152192 + C152436;
    const double C152518 = ae * C152512;
    const double C152843 = 2 * C152512;
    const double C152540 = C152192 + C152539;
    const double C28394 = C28235 * C4590;
    const double C28585 = C28235 * C4838;
    const double C28577 = C28235 * C5606;
    const double C30203 = C28235 * C6221;
    const double C34022 = C28235 * C10382;
    const double C152222 = C152204 + C152219;
    const double C994 =
        (2 * ae * C152511 * C152408 * C152187 + C152162 * C152511 * C152424) /
        C151945;
    const double C1379 = (C152408 * C152191 + C152424 * C152537) / C151945;
    const double C3033 = C2723 * C345;
    const double C3011 = C2724 * C345;
    const double C24282 = C153809 * C345;
    const double C28400 = C153338 * C345;
    const double C35143 = C153705 * C345;
    const double C35125 = C153348 * C345;
    const double C74503 = C74241 * C345;
    const double C74485 = C153348 * C345;
    const double C7601 = C2723 * C526;
    const double C7582 = C2724 * C526;
    const double C31262 = C153338 * C526;
    const double C39391 = C153705 * C526;
    const double C39383 = C153348 * C526;
    const double C48150 = C153809 * C526;
    const double C78782 = C74241 * C526;
    const double C78763 = C153348 * C526;
    const double C3022 = C2723 * C1237;
    const double C24271 = C153809 * C1237;
    const double C28390 = C153338 * C1237;
    const double C35127 = C153705 * C1237;
    const double C74487 = C74241 * C1237;
    const double C4161 = C2723 * C1810;
    const double C25386 = C153809 * C1810;
    const double C29044 = C153338 * C1810;
    const double C36133 = C153705 * C1810;
    const double C75493 = C74241 * C1810;
    const double C7590 = C2723 * C2162;
    const double C31255 = C153338 * C2162;
    const double C42997 = C153705 * C2162;
    const double C48139 = C153809 * C2162;
    const double C78772 = C74241 * C2162;
    const double C152256 = C152238 + C152253;
    const double C6216 = 2 * C152511 * C153228 +
                         C152511 * (C153228 + C152408 * C152299 * C152537);
    const double C9040 =
        3 * (C153228 + C153240 * C152537) +
        C152511 * (2 * C152511 * C153240 +
                   C152511 * (C153240 + C152408 * C152363 * C152537));
    const double C4586 =
        4 * (2 * C152408 * C152208 + C152408 * C153214) +
        C152408 *
            (3 * C153214 + C152408 * (2 * C152408 * C152244 +
                                      C152408 * (C152244 + C152293 * C152434)));
    const double C4834 =
        2 * C152408 * C152208 + C152408 * C153214 +
        (2 * C152408 * C152244 + C152408 * (C152244 + C152293 * C152434)) *
            C152537;
    const double C5602 =
        C152511 *
        (3 * C153214 + C152408 * (2 * C152408 * C152244 +
                                  C152408 * (C152244 + C152293 * C152434)));
    const double C6214 =
        2 * C152511 * C153214 +
        C152511 * (C153214 + (C152244 + C152293 * C152434) * C152537);
    const double C31240 =
        3 * (C153214 + C153263 * C152537) +
        C152511 *
            (2 * C152511 * C153263 +
             C152511 * (C153263 + (C152293 + C152356 * C152434) * C152537));
    const double C10378 =
        4 * (2 * C152511 * C152208 + C152511 * C153250) +
        C152511 *
            (3 * C153250 + C152511 * (2 * C152511 * C152244 +
                                      C152511 * (C152244 + C152293 * C152537)));
    const double C152277 = C152254 + C152260;
    const double C152262 = C152211 + C152258;
    const double C152420 = ae * C152414;
    const double C152673 = C152511 * C152414;
    const double C152709 = 2 * C152414;
    const double C152778 = C152414 * C152537;
    const double C152445 = C152218 + C152442;
    const double C152523 = ae * C152517;
    const double C152808 = 2 * C152517;
    const double C152548 = C152218 + C152545;
    const double C152261 = C152240 + C152257;
    const double C152417 = C152162 * C152411;
    const double C152671 = C152511 * C152411;
    const double C152736 = 2 * C152411;
    const double C1378 = (2 * ae * (C152408 * C152187 + C152410 * C152537) +
                          C152162 * (C152424 + C152411 * C152537)) /
                         C151945;
    const double C6230 =
        (2 * C152511 * C152424 + C152511 * (C152424 + C152411 * C152537)) /
        C151945;
    const double C152443 = C152217 + C152440;
    const double C152520 = C152162 * C152514;
    const double C152835 = 2 * C152514;
    const double C152546 = C152217 + C152543;
    const double C153259 = C153255 + C153258;
    const double C34012 =
        4 * (2 * C152511 * C153244 + C152511 * C153293) +
        C152511 *
            (3 * C153293 +
             C152511 * (2 * C152511 * C153272 +
                        C152511 * (C153272 + C152408 * C152279 * C152537)));
    const double C153300 = C153297 + C153299;
    const double C152337 = C152304 + C152311;
    const double C152313 = C152247 + C152308;
    const double C152458 = C152255 + C152453;
    const double C152480 = ae * C152473;
    const double C152681 = C152511 * C152473;
    const double C152719 = 2 * C152473;
    const double C152751 = C152473 * C152537;
    const double C152561 = C152255 + C152556;
    const double C152583 = ae * C152576;
    const double C152818 = 2 * C152576;
    const double C152506 = 2 * C152500;
    const double C152722 = C152711 + C152712;
    const double C152791 = ae * C152785;
    const double C153119 = C152454 + C153118;
    const double C31258 = C28235 * C31241;
    const double C152609 = 2 * C152603;
    const double C152821 = C152810 + C152811;
    const double C152704 = 2 * C152698;
    const double C152764 = ae * C152758;
    const double C153131 = C152511 * C152758;
    const double C34014 =
        (4 * (2 * C152511 * C152410 + C152511 * C153122) +
         C152511 *
             (3 * C153122 + C152511 * (2 * C152677 + C152511 * C152758))) /
        C151939;
    const double C152312 = C152289 + C152307;
    const double C152455 = C152254 + C152450;
    const double C152476 = C152162 * C152469;
    const double C152678 = C152511 * C152469;
    const double C152713 = 2 * C152469;
    const double C152772 = C152469 * C152537;
    const double C152558 = C152254 + C152553;
    const double C152579 = C152162 * C152572;
    const double C152812 = 2 * C152572;
    const double C152370 = C152346 + C152367;
    const double C152377 = C152297 + C152372;
    const double C152499 = C152305 + C152492;
    const double C152602 = C152305 + C152595;
    const double C152631 = ae * C152622;
    const double C152696 = C152511 * C152622;
    const double C152756 = C152622 * C152537;
    const double C152657 = ae * C152648;
    const double C152376 = C152352 + C152371;
    const double C152495 = C152304 + C152488;
    const double C152598 = C152304 + C152591;
    const double C152626 = C152162 * C152617;
    const double C152692 = C152511 * C152617;
    const double C152753 = C152617 * C152537;
    const double C152652 = C152162 * C152643;
    const double C152310 = C152162 * C152306;
    const double C152309 = C152306 * ae;
    const double C152348 = 4 * C152306;
    const double C153238 = C152408 * C152306;
    const double C4585 =
        4 * (2 * C152408 * C152249 + C152408 * C153211) +
        C152408 *
            (3 * C153211 + C152408 * (2 * C152408 * C152299 +
                                      C152408 * (C152299 + C152363 * C152434)));
    const double C4833 =
        2 * C152408 * C152249 + C152408 * C153211 +
        (2 * C152408 * C152299 + C152408 * (C152299 + C152363 * C152434)) *
            C152537;
    const double C5601 =
        C152511 *
        (3 * C153211 + C152408 * (2 * C152408 * C152299 +
                                  C152408 * (C152299 + C152363 * C152434)));
    const double C6213 =
        2 * C152511 * C153211 +
        C152511 * (C153211 + (C152299 + C152363 * C152434) * C152537);
    const double C10377 =
        4 * (2 * C152511 * C152249 + C152511 * C153247) +
        C152511 *
            (3 * C153247 + C152511 * (2 * C152511 * C152299 +
                                      C152511 * (C152299 + C152363 * C152537)));
    const double C153265 = C153261 + C153264;
    const double C153307 = C153304 + C153306;
    const double C56416 =
        4 * (2 * C152511 * C153242 + C152511 * C153311) +
        C152511 *
            (3 * C153311 +
             C152511 * (2 * C152511 * C153309 +
                        C152511 * (C153309 + C152408 * C152356 * C152537)));
    const double C153278 = C152408 * C153277;
    const double C34011 =
        4 * (2 * C152511 * C153257 + C152511 * C153290) +
        C152511 *
            (3 * C153290 +
             C152511 * (2 * C152511 * C153275 +
                        C152511 * (C153275 +
                                   (C152279 + C152339 * C152434) * C152537)));
    const double C153319 = C153315 + C153318;
    const double C153328 = C152511 * C153327;
    const double C153793 = C153714 - C153763;
    const double C153794 = C153718 - C153765;
    const double C153795 = C153721 - C153767;
    const double C153796 = C153728 - C153768;
    const double C153797 = C153723 - C153770;
    const double C153798 = C153732 - C153771;
    const double C153556 = C153551 - C153555;
    const double C153800 = C153773 / C151939;
    const double C153563 = C153559 - C153562;
    const double C153814 = C153803 / C151946;
    const double C153596 = C153591 - C153595;
    const double C153802 = C153776 / C151939;
    const double C153603 = C153599 - C153602;
    const double C153816 = C153806 / C151946;
    const double C152008 = C152003 / C151939;
    const double C152007 = C152002 / C151939;
    const double C151987 = C151983 + C153348;
    const double C152048 = C152044 - C152047;
    const double C23995 = C152044 + (0 * ae) / C151939;
    const double C151986 = C153338 - C151981;
    const double C83837 = C153343 * C345;
    const double C83831 = C153343 * C342;
    const double C83826 = C153343 * C1237;
    const double C83813 = C153343 * C344;
    const double C83807 = C153343 * C343;
    const double C84947 = C153343 * C993;
    const double C84941 = C153343 * C1810;
    const double C88501 = C153343 * C526;
    const double C88495 = C153343 * C523;
    const double C88493 = C153343 * C525;
    const double C88483 = C153343 * C524;
    const double C92109 = C153343 * C2162;
    const double C153704 = C153343 * C153333;
    const double C153760 = C153709 + C153343;
    const double C24260 = C153790 * C345;
    const double C24254 = C153790 * C342;
    const double C48131 = C153790 * C526;
    const double C48125 = C153790 * C523;
    const double C83815 = C153351 * C345;
    const double C83809 = C153351 * C342;
    const double C88491 = C153351 * C526;
    const double C88485 = C153351 * C523;
    const double C153712 = C153351 / C151946;
    const double C153708 = C153351 * C153333;
    const double C11262 = C153810 - (C153343 * C153334) / C151939;
    const double C152196 = C152195 + C152188;
    const double C341 =
        (C152408 * C152191 + C152429 + C152429 +
         C152162 * (2 * ae * C152408 * C152187 + C152162 * C152424)) /
        C151945;
    const double C28588 = C28235 * C988;
    const double C35412 = C151978 * C988;
    const double C74772 = C74250 * C988;
    const double C522 =
        (C152511 * C152191 + C152532 + C152532 +
         C152162 * (2 * ae * C152511 * C152187 + C152162 * C152527)) /
        C151945;
    const double C152239 = C152231 + C152221;
    const double C152224 = C152223 + C152212;
    const double C152669 = ae * C152668;
    const double C28595 = C28235 * C1373;
    const double C35419 = C151978 * C1373;
    const double C74779 = C74250 * C1373;
    const double C152438 = ae * C152437;
    const double C1231 = (2 * C152428 + C152408 * C152437) / C151939;
    const double C1804 = (C152511 * C152437) / C151939;
    const double C152541 = ae * C152540;
    const double C2156 = (2 * C152531 + C152511 * C152540) / C151939;
    const double C4172 = C2723 * C994;
    const double C4165 = C2724 * C994;
    const double C25397 = C153809 * C994;
    const double C25390 = C153790 * C994;
    const double C29049 = C153338 * C994;
    const double C36141 = C153705 * C994;
    const double C36135 = C153348 * C994;
    const double C75501 = C74241 * C994;
    const double C75495 = C153348 * C994;
    const double C84952 = C153343 * C994;
    const double C84945 = C153351 * C994;
    const double C4844 = C2723 * C1379;
    const double C26051 = C153809 * C1379;
    const double C29429 = C153338 * C1379;
    const double C36725 = C153705 * C1379;
    const double C76085 = C74241 * C1379;
    const double C85606 = C153343 * C1379;
    const double C152259 = C152256 * ae;
    const double C149 = 4 * (2 * C152185 + C152162 * C152213) +
                        C152162 * (3 * C152213 + C152162 * C152256);
    const double C315 = C152408 * (3 * C152213 + C152162 * C152256);
    const double C323 = 2 * C152185 + C152162 * C152213 + C152256 * C152434;
    const double C496 = C152511 * (3 * C152213 + C152162 * C152256);
    const double C504 = 2 * C152185 + C152162 * C152213 + C152256 * C152537;
    const double C984 = C152511 * C152408 * C152256;
    const double C1224 =
        2 * C152408 * C152256 + C152408 * (C152256 + C152306 * C152434);
    const double C1366 = C152408 * C152256 + C152408 * C152306 * C152537;
    const double C1797 = C152511 * (C152256 + C152306 * C152434);
    const double C2149 =
        2 * C152511 * C152256 + C152511 * (C152256 + C152306 * C152537);
    const double C152288 = C152277 + C152260;
    const double C152264 = C152262 + C152248;
    const double C152467 = C152411 + C152420;
    const double C152675 = ae * C152673;
    const double C152920 = 2 * C152673;
    const double C152779 = C152409 + C152778;
    const double C152447 = ae * C152445;
    const double C152745 = C152408 * C152445;
    const double C152803 = C152511 * C152445;
    const double C152852 = 3 * C152445;
    const double C3332 = (C152437 + C152445 * C152537) / C151939;
    const double C152570 = C152514 + C152523;
    const double C152550 = ae * C152548;
    const double C152844 = C152511 * C152548;
    const double C152929 = 3 * C152548;
    const double C152263 = C152162 * C152261;
    const double C152276 = 2 * C152261;
    const double C152422 = C152421 + C152417;
    const double C4846 = C2724 * C1378;
    const double C8442 = C2723 * C1378;
    const double C26053 = C153790 * C1378;
    const double C30997 = C153338 * C1378;
    const double C36727 = C153348 * C1378;
    const double C39395 = C153705 * C1378;
    const double C48988 = C153809 * C1378;
    const double C76087 = C153348 * C1378;
    const double C78447 = C74241 * C1378;
    const double C85608 = C153351 * C1378;
    const double C88507 = C153343 * C1378;
    const double C9051 = C2723 * C6230;
    const double C31253 = C153338 * C6230;
    const double C41232 = C153705 * C6230;
    const double C49588 = C153809 * C6230;
    const double C78768 = C74241 * C6230;
    const double C90350 = C153343 * C6230;
    const double C1236 =
        (2 * ae *
             (2 * C152408 * C152187 + C152408 * (C152187 + C152211 * C152434)) +
         C152162 * (2 * C152424 + C152408 * C152443)) /
        C151945;
    const double C1809 = (2 * ae * C152511 * (C152187 + C152211 * C152434) +
                          C152162 * C152511 * C152443) /
                         C151945;
    const double C2997 = (3 * (C152191 + C152217 * C152434) +
                          C152408 * (2 * C152424 + C152408 * C152443)) /
                         C151945;
    const double C3335 =
        (C152191 + C152217 * C152434 + C152443 * C152537) / C151945;
    const double C4151 =
        (C152511 * (2 * C152424 + C152408 * C152443)) / C151945;
    const double C152525 = C152524 + C152520;
    const double C2161 =
        (2 * ae *
             (2 * C152511 * C152187 + C152511 * (C152187 + C152211 * C152537)) +
         C152162 * (2 * C152527 + C152511 * C152546)) /
        C151945;
    const double C7568 = (3 * (C152191 + C152217 * C152537) +
                          C152511 * (2 * C152527 + C152511 * C152546)) /
                         C151945;
    const double C28378 =
        5 * (3 * C153217 + C152408 * C153259) +
        C152408 *
            (4 * C153259 +
             C152408 * (3 * C153257 +
                        C152408 * (2 * C152408 * C152233 +
                                   C152408 * (C152233 + C152279 * C152434))));
    const double C28570 =
        3 * C153217 + C152408 * C153259 +
        (3 * C153257 + C152408 * (2 * C152408 * C152233 +
                                  C152408 * (C152233 + C152279 * C152434))) *
            C152537;
    const double C29032 =
        C152511 *
        (4 * C153259 +
         C152408 * (3 * C153257 +
                    C152408 * (2 * C152408 * C152233 +
                               C152408 * (C152233 + C152279 * C152434))));
    const double C30195 =
        2 * C152511 * C153259 + C152511 * (C153259 + C153277 * C152537);
    const double C32673 =
        3 * (C153259 + C153277 * C152537) +
        C152511 *
            (2 * C152511 * C153277 +
             C152511 * (C153277 + (2 * C152408 * C152279 +
                                   C152408 * (C152279 + C152339 * C152434)) *
                                      C152537));
    const double C55974 =
        5 * (3 * C153253 + C152511 * C153300) +
        C152511 *
            (4 * C153300 +
             C152511 * (3 * C153298 +
                        C152511 * (2 * C152511 * C152233 +
                                   C152511 * (C152233 + C152279 * C152537))));
    const double C152351 = C152337 + C152311;
    const double C152316 = C152313 + C152298;
    const double C152463 = ae * C152458;
    const double C152710 = C152408 * C152458;
    const double C152784 = C152511 * C152458;
    const double C152861 = 3 * C152458;
    const double C152871 = C152458 * C152537;
    const double C152615 = C152469 + C152480;
    const double C152686 = ae * C152681;
    const double C152950 = 2 * C152681;
    const double C152757 = C152414 + C152751;
    const double C152566 = ae * C152561;
    const double C152809 = C152511 * C152561;
    const double C152938 = 3 * C152561;
    const double C152641 = C152572 + C152583;
    const double C152728 = ae * C152722;
    const double C153107 = C152408 * C152722;
    const double C28380 =
        (5 * (3 * C153069 + C152408 * C153099) +
         C152408 *
             (4 * C153099 + C152408 * (3 * C152454 + C152408 * C152722))) /
        C151939;
    const double C28572 = (3 * C153069 + C152408 * C153099 +
                           (3 * C152454 + C152408 * C152722) * C152537) /
                          C151939;
    const double C29034 =
        (C152511 *
         (4 * C153099 + C152408 * (3 * C152454 + C152408 * C152722))) /
        C151939;
    const double C30197 =
        (2 * C152511 * C153099 + C152511 * (C153099 + C152722 * C152537)) /
        C151939;
    const double C32674 =
        (3 * (C153099 + C152722 * C152537) +
         C152511 *
             (2 * C152511 * C152722 +
              C152511 * (C152722 + (2 * C152616 +
                                    C152408 * (C152297 + C152361 * C152434)) *
                                       C152537))) /
        C151939;
    const double C152796 = 2 * C152791;
    const double C34013 =
        (4 * (2 * C152511 * C152454 + C152511 * C153119) +
         C152511 *
             (3 * C153119 +
              C152511 * (2 * C152785 +
                         C152511 * (C152494 + (C152297 + C152361 * C152434) *
                                                  C152537)))) /
        C151939;
    const double C152827 = ae * C152821;
    const double C153135 = C152511 * C152821;
    const double C55976 =
        (5 * (3 * C153095 + C152511 * C153126) +
         C152511 *
             (4 * C153126 + C152511 * (3 * C152557 + C152511 * C152821))) /
        C151939;
    const double C152769 = 2 * C152764;
    const double C153132 = C153130 + C153131;
    const double C34021 = C28235 * C34014;
    const double C152315 = C152162 * C152312;
    const double C152336 = 2 * C152312;
    const double C152460 = C152162 * C152455;
    const double C152737 = C152408 * C152455;
    const double C152799 = C152511 * C152455;
    const double C152857 = 3 * C152455;
    const double C3336 =
        (2 * ae * (C152187 + C152211 * C152434 + C152454 * C152537) +
         C152162 * (C152443 + C152455 * C152537)) /
        C151945;
    const double C6227 =
        (2 * C152511 * C152443 + C152511 * (C152443 + C152455 * C152537)) /
        C151945;
    const double C152482 = C152481 + C152476;
    const double C152683 = C152162 * C152678;
    const double C152946 = 2 * C152678;
    const double C152774 = C152411 + C152772;
    const double C152563 = C152162 * C152558;
    const double C152836 = C152511 * C152558;
    const double C152934 = 3 * C152558;
    const double C152585 = C152584 + C152579;
    const double C152374 = C152162 * C152370;
    const double C152373 = C152370 * ae;
    const double C2992 = 3 * (C152256 + C152306 * C152434) +
                         C152408 * (2 * C152408 * C152306 +
                                    C152408 * (C152306 + C152370 * C152434));
    const double C3330 =
        C152256 + C152306 * C152434 + (C152306 + C152370 * C152434) * C152537;
    const double C4146 = C152511 * (2 * C152408 * C152306 +
                                    C152408 * (C152306 + C152370 * C152434));
    const double C7563 = 3 * (C152256 + C152306 * C152537) +
                         C152511 * (2 * C152511 * C152306 +
                                    C152511 * (C152306 + C152370 * C152537));
    const double C152380 = C152377 + C152362;
    const double C152505 = ae * C152499;
    const double C152720 = C152408 * C152499;
    const double C152789 = C152511 * C152499;
    const double C152877 = C152499 * C152537;
    const double C152608 = ae * C152602;
    const double C152819 = C152511 * C152602;
    const double C152703 = ae * C152696;
    const double C152762 = C152473 + C152756;
    const double C152379 = C152162 * C152376;
    const double C152501 = C152162 * C152495;
    const double C152714 = C152408 * C152495;
    const double C152786 = C152511 * C152495;
    const double C152875 = C152495 * C152537;
    const double C152604 = C152162 * C152598;
    const double C152813 = C152511 * C152598;
    const double C152634 = C152633 + C152626;
    const double C152699 = C152162 * C152692;
    const double C152759 = C152469 + C152753;
    const double C152660 = C152659 + C152652;
    const double C152314 = C152286 + C152310;
    const double C8437 = 2 * C152511 * C153238 +
                         C152511 * (C153238 + C152408 * C152370 * C152537);
    const double C28379 =
        5 * (3 * C153214 + C152408 * C153265) +
        C152408 *
            (4 * C153265 +
             C152408 * (3 * C153263 +
                        C152408 * (2 * C152408 * C152293 +
                                   C152408 * (C152293 + C152356 * C152434))));
    const double C28571 =
        3 * C153214 + C152408 * C153265 +
        (3 * C153263 + C152408 * (2 * C152408 * C152293 +
                                  C152408 * (C152293 + C152356 * C152434))) *
            C152537;
    const double C29033 =
        C152511 *
        (4 * C153265 +
         C152408 * (3 * C153263 +
                    C152408 * (2 * C152408 * C152293 +
                               C152408 * (C152293 + C152356 * C152434))));
    const double C32070 =
        2 * C152511 * C153265 +
        C152511 * (C153265 + (2 * C152408 * C152293 +
                              C152408 * (C152293 + C152356 * C152434)) *
                                 C152537);
    const double C55975 =
        5 * (3 * C153250 + C152511 * C153307) +
        C152511 *
            (4 * C153307 +
             C152511 * (3 * C153305 +
                        C152511 * (2 * C152511 * C152293 +
                                   C152511 * (C152293 + C152356 * C152537))));
    const double C153279 = C153271 + C153278;
    const double C56751 =
        5 * (3 * C153293 + C152511 * C153319) +
        C152511 *
            (4 * C153319 +
             C152511 * (3 * C153317 +
                        C152511 * (2 * C152511 * C153314 +
                                   C152511 * (C153314 +
                                              C152408 * C152339 * C152537))));
    const double C153329 = C153321 + C153328;
    const double C130 =
        (C153793 * C153373) / C153370 + (C153716 - C153764) / C153372;
    const double C131 =
        (C153794 * C153373) / C153370 + (2 * C153384 + C153793) / C153372;
    const double C132 = (C153373 * C153384) / C153387 + C153794 / C153372;
    const double C1218 =
        (C153795 * C153444) / C153370 + (C153724 - C153766) / C153372;
    const double C1219 =
        (C153796 * C153444) / C153370 + (2 * C153449 + C153795) / C153372;
    const double C1220 = (C153444 * C153449) / C153387 + C153796 / C153372;
    const double C2144 =
        (C153797 * C153472) / C153370 + (C153725 - C153769) / C153372;
    const double C2145 =
        (C153798 * C153472) / C153370 + (2 * C153477 + C153797) / C153372;
    const double C2146 = (C153472 * C153477) / C153387 + C153798 / C153372;
    const double C153742 = C153556 * C153550;
    const double C153781 = C153744 + C153556;
    const double C153746 = C153563 / C151946;
    const double C153743 = C153563 * C153550;
    const double C34883 = C153814 - (C153556 * C153552) / C151939;
    const double C153749 = C153596 * C153590;
    const double C153786 = C153751 + C153596;
    const double C153753 = C153603 / C151946;
    const double C153750 = C153603 * C153590;
    const double C63340 = C153816 - (C153596 * C153592) / C151939;
    const double C152015 = C151996 - C152008;
    const double C152014 = C151964 - C152007;
    const double C151994 = C151987 * be;
    const double C83554 = C152048 * C154;
    const double C152049 = 2 * C152048;
    const double C143 =
        (C152048 / C151946 + (0 * ae) / C151939) / C151946 - (0 * be) / C151939;
    const double C11275 = C152048 / C151946 - (0 * be) / C151939;
    const double C70428 = C152048 / C151946 + (0 * ae) / C151939;
    const double C23999 = C23995 * C154;
    const double C151992 = C151986 * ae;
    const double C151991 = C151986 * C151953;
    const double C2730 =
        ((-C151941 / C151939) / C151946 - (C151966 * be) / C151939) / C151946 -
        ((C151940 * ((-C151949) / C151946 - (C151986 * be) / C151939) +
          C74241) *
         be) /
            C151939 +
        (-C151970 / C151939) / C151946 - (0 * be) / C151939;
    const double C2732 =
        ((-C151949) / C151946 - (C151986 * be) / C151939) / C151946 -
        ((C151940 * ((-C151970 / C151939) / C151946 - (0 * be) / C151939) +
          C153348) *
         be) /
            C151939;
    const double C74248 = (-C151949) / C151946 - (C151986 * be) / C151939;
    const double C153756 = C153704 / C151939;
    const double C153791 = C153760 / C151946;
    const double C153792 = C153762 + C153712;
    const double C11264 = C153712 - C153349 / C151958;
    const double C153759 = C153708 / C151939;
    const double C11537 = C11262 * C345;
    const double C11528 = C11262 * C342;
    const double C11522 = C11262 * C344;
    const double C11504 = C11262 * C343;
    const double C12516 = C11262 * C994;
    const double C12510 = C11262 * C993;
    const double C12876 = C11262 * C1237;
    const double C13094 = C11262 * C1379;
    const double C13764 = C11262 * C1810;
    const double C15508 = C11262 * C526;
    const double C15500 = C11262 * C523;
    const double C15498 = C11262 * C525;
    const double C15484 = C11262 * C524;
    const double C17920 = C11262 * C2162;
    const double C152197 = ae * C152196;
    const double C155 =
        (2 * C152176 + C152162 * C152196 + (C152165 + C152179 * C152166) * ae) /
        C151939;
    const double C329 = (C152408 * C152196) / C151939;
    const double C510 = (C152511 * C152196) / C151939;
    const double C3029 = C2724 * C341;
    const double C3007 = C153761 * C341;
    const double C3595 = C2723 * C341;
    const double C12020 = C11262 * C341;
    const double C24278 = C153790 * C341;
    const double C24256 = C153761 * C341;
    const double C24832 = C153809 * C341;
    const double C28720 = C153338 * C341;
    const double C35141 = C153348 * C341;
    const double C35635 = C153705 * C341;
    const double C74501 = C153348 * C341;
    const double C74995 = C74241 * C341;
    const double C83833 = C153351 * C341;
    const double C83811 = C83541 * C341;
    const double C84387 = C153343 * C341;
    const double C7597 = C2724 * C522;
    const double C7578 = C153761 * C522;
    const double C8116 = C2723 * C522;
    const double C15956 = C11262 * C522;
    const double C31769 = C153338 * C522;
    const double C39389 = C153348 * C522;
    const double C40045 = C153705 * C522;
    const double C48146 = C153790 * C522;
    const double C48127 = C153761 * C522;
    const double C48665 = C153809 * C522;
    const double C78780 = C153348 * C522;
    const double C79455 = C74241 * C522;
    const double C88497 = C153351 * C522;
    const double C88487 = C83541 * C522;
    const double C89159 = C153343 * C522;
    const double C152226 = ae * C152224;
    const double C152225 = C152162 * C152224;
    const double C152236 = 3 * C152224;
    const double C152425 = C152408 * C152224;
    const double C152528 = C152511 * C152224;
    const double C334 = (C152196 + C152224 * C152434) / C151939;
    const double C515 = (C152196 + C152224 * C152537) / C151939;
    const double C995 =
        (C152511 * C152424 + C152669 + C152669 +
         C152162 * (2 * ae * C152511 * C152410 + C152162 * C152511 * C152411)) /
        C151945;
    const double C346 = (C152191 + C152217 * C152434 + C152438 + C152438 +
                         C152162 * (2 * ae * (C152187 + C152211 * C152434) +
                                    C152162 * (C152217 + C152254 * C152434))) /
                        C151945;
    const double C28243 = C28235 * C1231;
    const double C34899 = C151978 * C1231;
    const double C74259 = C74250 * C1231;
    const double C28589 = C28235 * C1804;
    const double C35410 = C151978 * C1804;
    const double C74770 = C74250 * C1804;
    const double C527 = (C152191 + C152217 * C152537 + C152541 + C152541 +
                         C152162 * (2 * ae * (C152187 + C152211 * C152537) +
                                    C152162 * (C152217 + C152254 * C152537))) /
                        C151945;
    const double C31264 = C28235 * C2156;
    const double C37942 = C151978 * C2156;
    const double C77302 = C74250 * C2156;
    const double C152267 = ae * C152264;
    const double C152266 = C152162 * C152264;
    const double C152283 = 3 * C152264;
    const double C152413 = C152408 * C152264;
    const double C152441 = C152264 * C152434;
    const double C152516 = C152511 * C152264;
    const double C152544 = C152264 * C152537;
    const double C152474 = C152467 + C152420;
    const double C152780 = ae * C152779;
    const double C6223 = (2 * C152668 + C152511 * C152779) / C151939;
    const double C152746 = C152744 + C152745;
    const double C152804 = ae * C152803;
    const double C28594 = C28235 * C3332;
    const double C35421 = C151978 * C3332;
    const double C74781 = C74250 * C3332;
    const double C152577 = C152570 + C152523;
    const double C152845 = C152843 + C152844;
    const double C152265 = C152239 + C152263;
    const double C3040 = C2723 * C1236;
    const double C3019 = C2724 * C1236;
    const double C24289 = C153809 * C1236;
    const double C24268 = C153790 * C1236;
    const double C28402 = C153338 * C1236;
    const double C35147 = C153705 * C1236;
    const double C35129 = C153348 * C1236;
    const double C74507 = C74241 * C1236;
    const double C74489 = C153348 * C1236;
    const double C83844 = C153343 * C1236;
    const double C83823 = C153351 * C1236;
    const double C4178 = C2723 * C1809;
    const double C4159 = C2724 * C1809;
    const double C25403 = C153809 * C1809;
    const double C25384 = C153790 * C1809;
    const double C29051 = C153338 * C1809;
    const double C36145 = C153705 * C1809;
    const double C36131 = C153348 * C1809;
    const double C75505 = C74241 * C1809;
    const double C75491 = C153348 * C1809;
    const double C84958 = C153343 * C1809;
    const double C84939 = C153351 * C1809;
    const double C4597 = C2723 * C2997;
    const double C25813 = C153809 * C2997;
    const double C28392 = C153338 * C2997;
    const double C35135 = C153705 * C2997;
    const double C74495 = C74241 * C2997;
    const double C85368 = C153343 * C2997;
    const double C4850 = C2723 * C3335;
    const double C26057 = C153809 * C3335;
    const double C29431 = C153338 * C3335;
    const double C36729 = C153705 * C3335;
    const double C76089 = C74241 * C3335;
    const double C85612 = C153343 * C3335;
    const double C5613 = C2723 * C4151;
    const double C26811 = C153809 * C4151;
    const double C29042 = C153338 * C4151;
    const double C36129 = C153705 * C4151;
    const double C75489 = C74241 * C4151;
    const double C86366 = C153343 * C4151;
    const double C7608 = C2723 * C2161;
    const double C7588 = C2724 * C2161;
    const double C31265 = C153338 * C2161;
    const double C42999 = C153348 * C2161;
    const double C48157 = C153809 * C2161;
    const double C48137 = C153790 * C2161;
    const double C58688 = C153705 * C2161;
    const double C78787 = C74241 * C2161;
    const double C78770 = C153348 * C2161;
    const double C92111 = C153351 * C2161;
    const double C116551 = C153343 * C2161;
    const double C10389 = C2723 * C7568;
    const double C34019 = C153338 * C7568;
    const double C50917 = C153809 * C7568;
    const double C62232 = C153705 * C7568;
    const double C82415 = C74241 * C7568;
    const double C119207 = C153343 * C7568;
    const double C152320 = ae * C152316;
    const double C152319 = C152162 * C152316;
    const double C152344 = 3 * C152316;
    const double C152452 = C152316 * C152434;
    const double C152472 = C152408 * C152316;
    const double C152555 = C152316 * C152537;
    const double C152575 = C152511 * C152316;
    const double C152486 = C152455 + C152463;
    const double C152721 = C152709 + C152710;
    const double C152790 = ae * C152784;
    const double C152913 = 2 * C152784;
    const double C152872 = C152445 + C152871;
    const double C152624 = C152615 + C152480;
    const double C152690 = C152678 + C152686;
    const double C152763 = ae * C152757;
    const double C152921 = C152511 * C152757;
    const double C152958 = 3 * C152757;
    const double C152589 = C152558 + C152566;
    const double C152820 = C152808 + C152809;
    const double C152650 = C152641 + C152583;
    const double C152733 = 2 * C152728;
    const double C153108 = C153106 + C153107;
    const double C28396 = C28235 * C28380;
    const double C28586 = C28235 * C28572;
    const double C29047 = C28235 * C29034;
    const double C30202 = C28235 * C30197;
    const double C32687 = C28235 * C32674;
    const double C34020 = C28235 * C34013;
    const double C152832 = 2 * C152827;
    const double C153136 = C153134 + C153135;
    const double C55983 = C28235 * C55976;
    const double C56752 =
        (5 * (3 * C153122 + C152511 * C153132) +
         C152511 *
             (4 * C153132 +
              C152511 * (3 * C152758 +
                         C152511 * (2 * C152691 +
                                    C152511 * (C152616 + C152408 * C152361 *
                                                             C152537))))) /
        C151939;
    const double C152318 = C152288 + C152315;
    const double C152465 = C152464 + C152460;
    const double C152740 = C152736 + C152737;
    const double C4852 = C2724 * C3336;
    const double C26059 = C153790 * C3336;
    const double C31001 = C153338 * C3336;
    const double C36731 = C153348 * C3336;
    const double C39399 = C153705 * C3336;
    const double C76091 = C153348 * C3336;
    const double C78451 = C74241 * C3336;
    const double C85614 = C153351 * C3336;
    const double C31251 = C153338 * C6227;
    const double C41237 = C153705 * C6227;
    const double C80653 = C74241 * C6227;
    const double C152483 = C152162 * C152482;
    const double C152614 = 2 * C152482;
    const double C152688 = C152687 + C152683;
    const double C6229 =
        (2 * ae *
             (2 * C152511 * C152410 + C152511 * (C152410 + C152468 * C152537)) +
         C152162 * (2 * C152671 + C152511 * C152774)) /
        C151945;
    const double C9048 = (3 * (C152424 + C152411 * C152537) +
                          C152511 * (2 * C152671 + C152511 * C152774)) /
                         C151945;
    const double C152568 = C152567 + C152563;
    const double C152839 = C152835 + C152836;
    const double C152586 = C152162 * C152585;
    const double C152640 = 2 * C152585;
    const double C152378 = C152347 + C152374;
    const double C152386 = ae * C152380;
    const double C152384 = C152162 * C152380;
    const double C152491 = C152380 * C152434;
    const double C152594 = C152380 * C152537;
    const double C152621 = C152408 * C152380;
    const double C152647 = C152511 * C152380;
    const double C152726 = C152719 + C152720;
    const double C152795 = ae * C152789;
    const double C152880 = C152458 + C152877;
    const double C152825 = C152818 + C152819;
    const double C152768 = ae * C152762;
    const double C152951 = C152511 * C152762;
    const double C152383 = C152351 + C152379;
    const double C152507 = C152506 + C152501;
    const double C152723 = C152713 + C152714;
    const double C152792 = C152162 * C152786;
    const double C152878 = C152455 + C152875;
    const double C152610 = C152609 + C152604;
    const double C152822 = C152812 + C152813;
    const double C152635 = C152162 * C152634;
    const double C152705 = C152704 + C152699;
    const double C152765 = C152162 * C152759;
    const double C152947 = C152511 * C152759;
    const double C152661 = C152162 * C152660;
    const double C152317 = C152314 * ae;
    const double C150 = 5 * (3 * C152213 + C152162 * C152256) +
                        C152162 * (4 * C152256 + C152162 * C152314);
    const double C324 = 3 * C152213 + C152162 * C152256 + C152314 * C152434;
    const double C325 = C152408 * (4 * C152256 + C152162 * C152314);
    const double C505 = 3 * C152213 + C152162 * C152256 + C152314 * C152537;
    const double C506 = C152511 * (4 * C152256 + C152162 * C152314);
    const double C985 = C152511 * C152408 * C152314;
    const double C29292 =
        6 * (4 * C153259 + C152408 * C153279) +
        C152408 *
            (5 * C153279 +
             C152408 * (4 * C153277 +
                        C152408 * (3 * C153275 +
                                   C152408 * (2 * C152408 * C152279 +
                                              C152408 * (C152279 +
                                                         C152339 * C152434)))));
    const double C29424 =
        4 * C153259 + C152408 * C153279 +
        (4 * C153277 +
         C152408 * (3 * C153275 +
                    C152408 * (2 * C152408 * C152279 +
                               C152408 * (C152279 + C152339 * C152434)))) *
            C152537;
    const double C29858 =
        C152511 *
        (5 * C153279 +
         C152408 *
             (4 * C153277 +
              C152408 * (3 * C153275 +
                         C152408 * (2 * C152408 * C152279 +
                                    C152408 * (C152279 + C152339 * C152434)))));
    const double C30194 =
        2 * C152511 * C153279 +
        C152511 *
            (C153279 + (3 * C153275 +
                        C152408 * (2 * C152408 * C152279 +
                                   C152408 * (C152279 + C152339 * C152434))) *
                           C152537);
    const double C57492 =
        6 * (4 * C153300 + C152511 * C153329) +
        C152511 *
            (5 * C153329 +
             C152511 * (4 * C153327 +
                        C152511 * (3 * C153325 +
                                   C152511 * (2 * C152511 * C152279 +
                                              C152511 * (C152279 +
                                                         C152339 * C152537)))));
    const double C153778 = C153742 / C151939;
    const double C153804 = C153781 / C151946;
    const double C153805 = C153782 + C153746;
    const double C34885 = C153746 - C153561 / C151958;
    const double C153780 = C153743 / C151939;
    const double C153783 = C153749 / C151939;
    const double C153807 = C153786 / C151946;
    const double C153808 = C153787 + C153753;
    const double C63342 = C153753 - C153601 / C151958;
    const double C153785 = C153750 / C151939;
    const double C152001 = C151994 / C151939;
    const double C151999 = C151992 / C151939;
    const double C152000 = C151991 / C151958;
    const double C151998 = C151940 * C151991;
    const double C142 =
        (-C151991 / C151939) / (4 * C151945 * std::pow(C151946, 2));
    const double C2733 = (-C151991 / C151939) / C152043;
    const double C11274 = (-C151991 / C151939) / (4 * C151955);
    const double C23994 = (-C151991 / C151939) / C152043;
    const double C28234 = -C151991 / C151939;
    const double C34889 = (-C151991 / C151939) / C151946;
    const double C70427 = (-C151991 / C151939) / (4 * C151955);
    const double C74249 = (-C151991 / C151939) / C151946;
    const double C83549 = (-C151991 / C151939) / C152043;
    const double C2754 = C2730 * C154;
    const double C2753 = C2730 * C153;
    const double C2750 = C2730 * C330;
    const double C2747 = C2730 * C333;
    const double C2742 = C2730 * C332;
    const double C2739 = C2730 * C331;
    const double C2736 = C2730 * C152;
    const double C3039 = C2730 * C1231;
    const double C3023 = C2730 * C2993;
    const double C3021 = C2730 * C1232;
    const double C3375 = C2730 * C514;
    const double C3372 = C2730 * C1373;
    const double C3369 = C2730 * C3332;
    const double C3364 = C2730 * C1804;
    const double C3361 = C2730 * C988;
    const double C3358 = C2730 * C511;
    const double C3355 = C2730 * C3331;
    const double C3352 = C2730 * C1374;
    const double C3349 = C2730 * C513;
    const double C3348 = C2730 * C512;
    const double C3345 = C2730 * C987;
    const double C3342 = C2730 * C1805;
    const double C4168 = C2730 * C4147;
    const double C4604 = C2730 * C4590;
    const double C4857 = C2730 * C4838;
    const double C5620 = C2730 * C5606;
    const double C6240 = C2730 * C2157;
    const double C6237 = C2730 * C6224;
    const double C6234 = C2730 * C6221;
    const double C7607 = C2730 * C2156;
    const double C7591 = C2730 * C7564;
    const double C9059 = C2730 * C9045;
    const double C10396 = C2730 * C10382;
    const double C2752 = C2732 * C154;
    const double C2743 = C2732 * C333;
    const double C2740 = C2732 * C330;
    const double C2737 = C2732 * C153;
    const double C3018 = C2732 * C1231;
    const double C3356 = C2732 * C3332;
    const double C3353 = C2732 * C1373;
    const double C3350 = C2732 * C514;
    const double C3347 = C2732 * C511;
    const double C3344 = C2732 * C988;
    const double C3341 = C2732 * C1804;
    const double C6239 = C2732 * C2156;
    const double C74268 = C74248 * C154;
    const double C74267 = C74248 * C153;
    const double C74265 = C74248 * C330;
    const double C74263 = C74248 * C333;
    const double C74261 = C74248 * C1231;
    const double C74258 = C74248 * C1232;
    const double C74256 = C74248 * C332;
    const double C74254 = C74248 * C331;
    const double C74252 = C74248 * C152;
    const double C74496 = C74248 * C4590;
    const double C74494 = C74248 * C2993;
    const double C74799 = C74248 * C514;
    const double C74797 = C74248 * C1373;
    const double C74795 = C74248 * C3332;
    const double C74788 = C74248 * C1804;
    const double C74786 = C74248 * C988;
    const double C74784 = C74248 * C511;
    const double C74782 = C74248 * C4838;
    const double C74780 = C74248 * C3331;
    const double C74778 = C74248 * C1374;
    const double C74776 = C74248 * C513;
    const double C74775 = C74248 * C512;
    const double C74773 = C74248 * C987;
    const double C74771 = C74248 * C1805;
    const double C74769 = C74248 * C4147;
    const double C75498 = C74248 * C5606;
    const double C75881 = C74248 * C28380;
    const double C76097 = C74248 * C28572;
    const double C76769 = C74248 * C29034;
    const double C77303 = C74248 * C2157;
    const double C77301 = C74248 * C6224;
    const double C77299 = C74248 * C6221;
    const double C77297 = C74248 * C30197;
    const double C78786 = C74248 * C2156;
    const double C78775 = C74248 * C9045;
    const double C78773 = C74248 * C7564;
    const double C80658 = C74248 * C31241;
    const double C82421 = C74248 * C10382;
    const double C82419 = C74248 * C34014;
    const double C110088 = C74248 * C55976;
    const double C153818 = C153756 + C153810;
    const double C11263 = C153791 - (C153351 * C153334) / C151939;
    const double C70661 = C153792 * C341;
    const double C98871 = C153792 * C522;
    const double C124 = C153792 / C151946 - C153349 / C152046;
    const double C11508 = C11264 * C341;
    const double C15488 = C11264 * C522;
    const double C153811 = C153759 + C153791;
    const double C163 =
        (2 * (2 * ae * C152174 + C152162 * C152191) + C152197 + C152197 +
         C152162 * (C152191 + C152194 + C152194 +
                    C152162 * (2 * ae * C152187 +
                               C152162 *
                                   (C152180 * C152181 +
                                    C152166 * bs[5] * std::pow(C152168, 5)) *
                                   C152169))) /
        C151945;
    const double C2771 = C2730 * C155;
    const double C2755 = C2732 * C155;
    const double C2751 = C2734 * C155;
    const double C11280 = C11275 * C155;
    const double C24012 = C23995 * C155;
    const double C28256 = C28235 * C155;
    const double C34909 = C151978 * C155;
    const double C70433 = C70428 * C155;
    const double C74283 = C74248 * C155;
    const double C74269 = C74250 * C155;
    const double C83567 = C152048 * C155;
    const double C2757 = C2730 * C329;
    const double C2749 = C2732 * C329;
    const double C2741 = C2734 * C329;
    const double C24002 = C23995 * C329;
    const double C28248 = C28235 * C329;
    const double C34904 = C151978 * C329;
    const double C74270 = C74248 * C329;
    const double C74264 = C74250 * C329;
    const double C83557 = C152048 * C329;
    const double C3359 = C2732 * C510;
    const double C3346 = C2734 * C510;
    const double C3853 = C2730 * C510;
    const double C24583 = C23995 * C510;
    const double C28870 = C28235 * C510;
    const double C35425 = C151978 * C510;
    const double C74785 = C74250 * C510;
    const double C75227 = C74248 * C510;
    const double C84138 = C152048 * C510;
    const double C152227 = C152203 + C152225;
    const double C152426 = ae * C152425;
    const double C989 = (C152511 * C152425) / C151939;
    const double C152529 = ae * C152528;
    const double C2760 = C2730 * C334;
    const double C2746 = C2732 * C334;
    const double C2744 = C2734 * C334;
    const double C24005 = C23995 * C334;
    const double C28249 = C28235 * C334;
    const double C34902 = C151978 * C334;
    const double C74272 = C74248 * C334;
    const double C74262 = C74250 * C334;
    const double C83560 = C152048 * C334;
    const double C3374 = C2732 * C515;
    const double C3351 = C2734 * C515;
    const double C7116 = C2730 * C515;
    const double C24588 = C23995 * C515;
    const double C30758 = C28235 * C515;
    const double C35438 = C151978 * C515;
    const double C74798 = C74250 * C515;
    const double C78144 = C74248 * C515;
    const double C84143 = C152048 * C515;
    const double C4174 = C2724 * C995;
    const double C4163 = C153761 * C995;
    const double C12506 = C11264 * C995;
    const double C19657 = C2723 * C995;
    const double C25399 = C153790 * C995;
    const double C25388 = C153761 * C995;
    const double C31525 = C153338 * C995;
    const double C36143 = C153348 * C995;
    const double C39735 = C153705 * C995;
    const double C71659 = C153792 * C995;
    const double C75503 = C153348 * C995;
    const double C79143 = C74241 * C995;
    const double C84954 = C153351 * C995;
    const double C84943 = C83541 * C995;
    const double C88854 = C153343 * C995;
    const double C126239 = C153809 * C995;
    const double C3035 = C2724 * C346;
    const double C3013 = C153761 * C346;
    const double C3601 = C2723 * C346;
    const double C11516 = C11264 * C346;
    const double C24284 = C153790 * C346;
    const double C24262 = C153761 * C346;
    const double C24838 = C153809 * C346;
    const double C28722 = C153338 * C346;
    const double C35145 = C153348 * C346;
    const double C35639 = C153705 * C346;
    const double C70669 = C153792 * C346;
    const double C74505 = C153348 * C346;
    const double C74999 = C74241 * C346;
    const double C83839 = C153351 * C346;
    const double C83817 = C83541 * C346;
    const double C84393 = C153343 * C346;
    const double C7603 = C2724 * C527;
    const double C7584 = C153761 * C527;
    const double C8122 = C2723 * C527;
    const double C15494 = C11264 * C527;
    const double C31771 = C153338 * C527;
    const double C39393 = C153348 * C527;
    const double C48152 = C153790 * C527;
    const double C48133 = C153761 * C527;
    const double C48671 = C153809 * C527;
    const double C59304 = C153705 * C527;
    const double C78784 = C153348 * C527;
    const double C79459 = C74241 * C527;
    const double C88503 = C153351 * C527;
    const double C88489 = C83541 * C527;
    const double C98877 = C153792 * C527;
    const double C117008 = C153343 * C527;
    const double C152287 = C152276 + C152267;
    const double C152268 = C152237 + C152266;
    const double C152419 = ae * C152413;
    const double C152672 = C152511 * C152413;
    const double C152738 = 2 * C152413;
    const double C1372 = (C152425 + C152413 * C152537) / C151939;
    const double C152444 = C152224 + C152441;
    const double C152522 = ae * C152516;
    const double C152837 = 2 * C152516;
    const double C152547 = C152224 + C152544;
    const double C1377 = (C152424 + C152411 * C152537 + C152780 + C152780 +
                          C152162 * (2 * ae * (C152410 + C152468 * C152537) +
                                     C152162 * C152774)) /
                         C151945;
    const double C6236 = C2732 * C6223;
    const double C8449 = C2730 * C6223;
    const double C31267 = C28235 * C6223;
    const double C37940 = C151978 * C6223;
    const double C77300 = C74250 * C6223;
    const double C78792 = C74248 * C6223;
    const double C152747 = ae * C152746;
    const double C2994 = (3 * C152437 + C152408 * C152746) / C151939;
    const double C4148 = (C152511 * C152746) / C151939;
    const double C1808 =
        (C152511 * C152443 + C152804 + C152804 +
         C152162 * (2 * ae * C152511 * C152454 + C152162 * C152799)) /
        C151945;
    const double C152846 = ae * C152845;
    const double C7565 = (3 * C152540 + C152511 * C152845) / C151939;
    const double C152350 = C152336 + C152320;
    const double C152322 = C152284 + C152319;
    const double C152457 = C152264 + C152452;
    const double C152479 = ae * C152472;
    const double C152680 = C152511 * C152472;
    const double C152717 = 2 * C152472;
    const double C152773 = C152472 * C152537;
    const double C152560 = C152264 + C152555;
    const double C152582 = ae * C152575;
    const double C152816 = 2 * C152575;
    const double C152493 = C152486 + C152463;
    const double C152727 = ae * C152721;
    const double C152853 = C152408 * C152721;
    const double C152886 = C152511 * C152721;
    const double C152895 = 4 * C152721;
    const double C4837 = (C152746 + C152721 * C152537) / C151939;
    const double C152873 = ae * C152872;
    const double C6220 = (2 * C152803 + C152511 * C152872) / C151939;
    const double C152697 = C152690 + C152686;
    const double C152922 = C152920 + C152921;
    const double C152596 = C152589 + C152566;
    const double C152826 = ae * C152820;
    const double C152930 = C152511 * C152820;
    const double C152965 = 4 * C152820;
    const double C29293 =
        (6 * (4 * C153099 + C152408 * C153108) +
         C152408 *
             (5 * C153108 +
              C152408 *
                  (4 * C152722 +
                   C152408 * (3 * C152494 +
                              C152408 * (2 * C152616 +
                                         C152408 * (C152297 +
                                                    C152361 * C152434)))))) /
        C151939;
    const double C29425 =
        (4 * C153099 + C152408 * C153108 +
         (4 * C152722 +
          C152408 * (3 * C152494 +
                     C152408 * (2 * C152616 +
                                C152408 * (C152297 + C152361 * C152434)))) *
             C152537) /
        C151939;
    const double C29859 =
        (C152511 *
         (5 * C153108 +
          C152408 * (4 * C152722 +
                     C152408 * (3 * C152494 +
                                C152408 * (2 * C152616 +
                                           C152408 * (C152297 +
                                                      C152361 * C152434)))))) /
        C151939;
    const double C30196 =
        (2 * C152511 * C153108 +
         C152511 *
             (C153108 + (3 * C152494 +
                         C152408 * (2 * C152616 +
                                    C152408 * (C152297 + C152361 * C152434))) *
                            C152537)) /
        C151939;
    const double C57493 =
        (6 * (4 * C153126 + C152511 * C153136) +
         C152511 *
             (5 * C153136 +
              C152511 *
                  (4 * C152821 +
                   C152511 * (3 * C152597 +
                              C152511 * (2 * C152642 +
                                         C152511 * (C152297 +
                                                    C152361 * C152537)))))) /
        C151939;
    const double C56757 = C28235 * C56752;
    const double C152321 = C152162 * C152318;
    const double C152335 = 3 * C152318;
    const double C2998 = (2 * ae *
                              (3 * (C152187 + C152211 * C152434) +
                               C152408 * (2 * C152410 + C152408 * C152454)) +
                          C152162 * (3 * C152443 + C152408 * C152740)) /
                         C151945;
    const double C4152 = (2 * ae * C152511 * (2 * C152410 + C152408 * C152454) +
                          C152162 * C152511 * C152740) /
                         C151945;
    const double C4593 = (4 * (2 * C152424 + C152408 * C152443) +
                          C152408 * (3 * C152443 + C152408 * C152740)) /
                         C151945;
    const double C4841 =
        (2 * C152424 + C152408 * C152443 + C152740 * C152537) / C151945;
    const double C5609 =
        (C152511 * (3 * C152443 + C152408 * C152740)) / C151945;
    const double C152484 = C152474 + C152483;
    const double C9053 = C2724 * C6229;
    const double C31268 = C153338 * C6229;
    const double C41234 = C153348 * C6229;
    const double C49590 = C153790 * C6229;
    const double C58692 = C153705 * C6229;
    const double C78793 = C74241 * C6229;
    const double C78766 = C153348 * C6229;
    const double C90352 = C153351 * C6229;
    const double C32680 = C153338 * C9048;
    const double C60481 = C153705 * C9048;
    const double C80649 = C74241 * C9048;
    const double C7569 = (2 * ae *
                              (3 * (C152187 + C152211 * C152537) +
                               C152511 * (2 * C152513 + C152511 * C152557)) +
                          C152162 * (3 * C152546 + C152511 * C152839)) /
                         C151945;
    const double C10385 = (4 * (2 * C152527 + C152511 * C152546) +
                           C152511 * (3 * C152546 + C152511 * C152839)) /
                          C151945;
    const double C152587 = C152577 + C152586;
    const double C152382 = C152162 * C152378;
    const double C152381 = C152378 * ae;
    const double C1223 =
        2 * C152408 * C152314 + C152408 * (C152314 + C152378 * C152434);
    const double C1365 = C152408 * C152314 + C152408 * C152378 * C152537;
    const double C1796 = C152511 * (C152314 + C152378 * C152434);
    const double C2148 =
        2 * C152511 * C152314 + C152511 * (C152314 + C152378 * C152537);
    const double C152388 = C152345 + C152384;
    const double C152498 = C152316 + C152491;
    const double C152601 = C152316 + C152594;
    const double C152630 = ae * C152621;
    const double C152695 = C152511 * C152621;
    const double C152755 = C152621 * C152537;
    const double C152656 = ae * C152647;
    const double C152732 = ae * C152726;
    const double C152862 = C152408 * C152726;
    const double C152891 = C152511 * C152726;
    const double C152902 = C152726 * C152537;
    const double C152882 = ae * C152880;
    const double C152914 = C152511 * C152880;
    const double C152831 = ae * C152825;
    const double C152939 = C152511 * C152825;
    const double C152954 = C152950 + C152951;
    const double C152387 = C152162 * C152383;
    const double C152508 = C152162 * C152507;
    const double C152729 = C152162 * C152723;
    const double C152858 = C152408 * C152723;
    const double C152889 = C152511 * C152723;
    const double C4840 =
        (2 * ae * (2 * C152410 + C152408 * C152454 + C152722 * C152537) +
         C152162 * (C152740 + C152723 * C152537)) /
        C151945;
    const double C29037 =
        (2 * ae * C152511 *
             (4 * C152722 +
              C152408 * (3 * C152494 +
                         C152408 * (2 * C152616 +
                                    C152408 * (C152297 + C152361 * C152434)))) +
         C152162 * C152511 *
             (4 * C152723 +
              C152408 *
                  (3 * C152495 +
                   C152408 * (2 * C152617 +
                              C152408 * (C152368 + (C152340 * C152341 +
                                                    C152166 * bs[9] *
                                                        std::pow(C152168, 9)) *
                                                       C152169 * C152434))))) /
        C151945;
    const double C30199 =
        (2 * C152511 * C152740 + C152511 * (C152740 + C152723 * C152537)) /
        C151945;
    const double C152797 = C152796 + C152792;
    const double C6226 =
        (2 * ae *
             (2 * C152511 * C152454 + C152511 * (C152454 + C152494 * C152537)) +
         C152162 * (2 * C152799 + C152511 * C152878)) /
        C151945;
    const double C31243 = (3 * (C152443 + C152455 * C152537) +
                           C152511 * (2 * C152799 + C152511 * C152878)) /
                          C151945;
    const double C31244 =
        (2 * ae *
             (3 * (C152454 + C152494 * C152537) +
              C152511 * (2 * C152785 +
                         C152511 * (C152494 +
                                    (C152297 + C152361 * C152434) * C152537))) +
         C152162 *
             (3 * C152878 +
              C152511 *
                  (2 * C152786 +
                   C152511 * (C152495 + (C152368 + (C152340 * C152341 +
                                                    C152166 * bs[9] *
                                                        std::pow(C152168, 9)) *
                                                       C152169 * C152434) *
                                            C152537)))) /
        C151945;
    const double C34015 =
        (4 * (2 * C152799 + C152511 * C152878) +
         C152511 *
             (3 * C152878 +
              C152511 *
                  (2 * C152786 +
                   C152511 * (C152495 + (C152368 + (C152340 * C152341 +
                                                    C152166 * bs[9] *
                                                        std::pow(C152168, 9)) *
                                                       C152169 * C152434) *
                                            C152537)))) /
        C151945;
    const double C152611 = C152162 * C152610;
    const double C152828 = C152162 * C152822;
    const double C152935 = C152511 * C152822;
    const double C152636 = C152624 + C152635;
    const double C152706 = C152162 * C152705;
    const double C152770 = C152769 + C152765;
    const double C152952 = C152946 + C152947;
    const double C152662 = C152650 + C152661;
    const double C153819 = C153778 + C153814;
    const double C34884 = C153804 - (C153563 * C153552) / C151939;
    const double C28232 = C153805 / C151946 - C153561 / C152046;
    const double C153815 = C153780 + C153804;
    const double C153820 = C153783 + C153816;
    const double C63341 = C153807 - (C153603 * C153592) / C151939;
    const double C55725 = C153808 / C151946 - C153601 / C152046;
    const double C153817 = C153785 + C153807;
    const double C152005 = C151999 - C151971;
    const double C152006 = C151998 / C151958;
    const double C152004 = C151998 / C151939;
    const double C3044 = C2733 * C1224;
    const double C3036 = C2733 * C323;
    const double C3030 = C2733 * C316;
    const double C3014 = C2733 * C1225;
    const double C3012 = C2733 * C322;
    const double C3006 = C2733 * C317;
    const double C3604 = C2733 * C324;
    const double C3598 = C2733 * C315;
    const double C4181 = C2733 * C1797;
    const double C4175 = C2733 * C984;
    const double C4162 = C2733 * C983;
    const double C4156 = C2733 * C1798;
    const double C4600 = C2733 * C2991;
    const double C4853 = C2733 * C3329;
    const double C4847 = C2733 * C1367;
    const double C5616 = C2733 * C4145;
    const double C7612 = C2733 * C2149;
    const double C7604 = C2733 * C504;
    const double C7598 = C2733 * C497;
    const double C7585 = C2733 * C2150;
    const double C7583 = C2733 * C503;
    const double C7577 = C2733 * C498;
    const double C8125 = C2733 * C505;
    const double C8119 = C2733 * C496;
    const double C8445 = C2733 * C1366;
    const double C9054 = C2733 * C6216;
    const double C10392 = C2733 * C7562;
    const double C19660 = C2733 * C985;
    const double C11544 = C11274 * C324;
    const double C11533 = C11274 * C315;
    const double C11511 = C11274 * C323;
    const double C11509 = C11274 * C316;
    const double C12025 = C11274 * C325;
    const double C12521 = C11274 * C985;
    const double C12503 = C11274 * C984;
    const double C12881 = C11274 * C1224;
    const double C13099 = C11274 * C1366;
    const double C13769 = C11274 * C1797;
    const double C15513 = C11274 * C505;
    const double C15505 = C11274 * C496;
    const double C15491 = C11274 * C504;
    const double C15489 = C11274 * C497;
    const double C15961 = C11274 * C506;
    const double C17925 = C11274 * C2149;
    const double C24293 = C23994 * C1224;
    const double C24285 = C23994 * C323;
    const double C24279 = C23994 * C316;
    const double C24263 = C23994 * C1225;
    const double C24261 = C23994 * C322;
    const double C24255 = C23994 * C317;
    const double C24841 = C23994 * C324;
    const double C24835 = C23994 * C315;
    const double C25406 = C23994 * C1797;
    const double C25400 = C23994 * C984;
    const double C25387 = C23994 * C983;
    const double C25381 = C23994 * C1798;
    const double C25816 = C23994 * C2991;
    const double C26060 = C23994 * C3329;
    const double C26054 = C23994 * C1367;
    const double C26814 = C23994 * C4145;
    const double C48161 = C23994 * C2149;
    const double C48153 = C23994 * C504;
    const double C48147 = C23994 * C497;
    const double C48134 = C23994 * C2150;
    const double C48132 = C23994 * C503;
    const double C48126 = C23994 * C498;
    const double C48674 = C23994 * C505;
    const double C48668 = C23994 * C496;
    const double C48991 = C23994 * C1366;
    const double C49591 = C23994 * C6216;
    const double C50920 = C23994 * C7562;
    const double C126242 = C23994 * C985;
    const double C28405 = C28234 * C4586;
    const double C28403 = C28234 * C2990;
    const double C28401 = C28234 * C1226;
    const double C28399 = C28234 * C321;
    const double C28397 = C28234 * C318;
    const double C28393 = C28234 * C4587;
    const double C28391 = C28234 * C2989;
    const double C28389 = C28234 * C1227;
    const double C28387 = C28234 * C320;
    const double C28385 = C28234 * C319;
    const double C28725 = C28234 * C2991;
    const double C28723 = C28234 * C1225;
    const double C28721 = C28234 * C322;
    const double C28719 = C28234 * C317;
    const double C29054 = C28234 * C5602;
    const double C29052 = C28234 * C4144;
    const double C29050 = C28234 * C1799;
    const double C29048 = C28234 * C982;
    const double C29045 = C28234 * C981;
    const double C29043 = C28234 * C1800;
    const double C29041 = C28234 * C4143;
    const double C29039 = C28234 * C5603;
    const double C29296 = C28234 * C28378;
    const double C29434 = C28234 * C28570;
    const double C29432 = C28234 * C4835;
    const double C29430 = C28234 * C3327;
    const double C29428 = C28234 * C1369;
    const double C29862 = C28234 * C29032;
    const double C31004 = C28234 * C4834;
    const double C31000 = C28234 * C3328;
    const double C30996 = C28234 * C1368;
    const double C31269 = C28234 * C6214;
    const double C31266 = C28234 * C6217;
    const double C31263 = C28234 * C2151;
    const double C31261 = C28234 * C502;
    const double C31259 = C28234 * C499;
    const double C31254 = C28234 * C2152;
    const double C31252 = C28234 * C6218;
    const double C31250 = C28234 * C6215;
    const double C31248 = C28234 * C501;
    const double C31246 = C28234 * C500;
    const double C31531 = C28234 * C3329;
    const double C31529 = C28234 * C1798;
    const double C31526 = C28234 * C1367;
    const double C31524 = C28234 * C983;
    const double C31770 = C28234 * C503;
    const double C31768 = C28234 * C498;
    const double C32685 = C28234 * C30195;
    const double C32683 = C28234 * C31239;
    const double C32679 = C28234 * C9042;
    const double C34018 = C28234 * C7560;
    const double C44716 = C28234 * C4145;
    const double C55986 = C28234 * C10378;
    const double C55984 = C28234 * C7561;
    const double C55981 = C28234 * C10379;
    const double C56246 = C28234 * C7562;
    const double C56244 = C28234 * C2150;
    const double C56420 = C28234 * C9041;
    const double C56755 = C28234 * C34012;
    const double C57496 = C28234 * C55974;
    const double C67480 = C28234 * C6216;
    const double C35153 = C34889 * C2991;
    const double C35148 = C34889 * C1225;
    const double C35144 = C34889 * C322;
    const double C35140 = C34889 * C317;
    const double C35130 = C34889 * C2990;
    const double C35128 = C34889 * C1226;
    const double C35124 = C34889 * C321;
    const double C35120 = C34889 * C318;
    const double C35644 = C34889 * C1224;
    const double C35640 = C34889 * C323;
    const double C35636 = C34889 * C316;
    const double C36150 = C34889 * C4145;
    const double C36146 = C34889 * C1798;
    const double C36142 = C34889 * C983;
    const double C36134 = C34889 * C982;
    const double C36130 = C34889 * C1799;
    const double C36126 = C34889 * C4144;
    const double C36518 = C34889 * C4586;
    const double C36734 = C34889 * C4834;
    const double C36730 = C34889 * C3328;
    const double C36726 = C34889 * C1368;
    const double C37406 = C34889 * C5602;
    const double C39400 = C34889 * C3329;
    const double C39396 = C34889 * C1367;
    const double C39392 = C34889 * C503;
    const double C39388 = C34889 * C498;
    const double C39382 = C34889 * C502;
    const double C39380 = C34889 * C499;
    const double C39740 = C34889 * C1797;
    const double C39736 = C34889 * C984;
    const double C40046 = C34889 * C497;
    const double C41238 = C34889 * C6214;
    const double C41233 = C34889 * C6217;
    const double C42998 = C34889 * C2151;
    const double C58693 = C34889 * C6216;
    const double C58689 = C34889 * C2150;
    const double C59005 = C34889 * C1366;
    const double C59305 = C34889 * C504;
    const double C60482 = C34889 * C9041;
    const double C62233 = C34889 * C7561;
    const double C63738 = C34889 * C7562;
    const double C64139 = C34889 * C2149;
    const double C66092 = C34889 * C10378;
    const double C70697 = C70427 * C324;
    const double C70686 = C70427 * C315;
    const double C70664 = C70427 * C323;
    const double C70662 = C70427 * C316;
    const double C71178 = C70427 * C325;
    const double C71674 = C70427 * C985;
    const double C71656 = C70427 * C984;
    const double C72034 = C70427 * C1224;
    const double C72252 = C70427 * C1366;
    const double C72922 = C70427 * C1797;
    const double C98896 = C70427 * C505;
    const double C98888 = C70427 * C496;
    const double C98874 = C70427 * C504;
    const double C98872 = C70427 * C497;
    const double C99344 = C70427 * C506;
    const double C101308 = C70427 * C2149;
    const double C74513 = C74249 * C2991;
    const double C74508 = C74249 * C1225;
    const double C74504 = C74249 * C322;
    const double C74500 = C74249 * C317;
    const double C74490 = C74249 * C2990;
    const double C74488 = C74249 * C1226;
    const double C74484 = C74249 * C321;
    const double C74480 = C74249 * C318;
    const double C75004 = C74249 * C1224;
    const double C75000 = C74249 * C323;
    const double C74996 = C74249 * C316;
    const double C75510 = C74249 * C4145;
    const double C75506 = C74249 * C1798;
    const double C75502 = C74249 * C983;
    const double C75494 = C74249 * C982;
    const double C75490 = C74249 * C1799;
    const double C75486 = C74249 * C4144;
    const double C75878 = C74249 * C4586;
    const double C76094 = C74249 * C4834;
    const double C76090 = C74249 * C3328;
    const double C76086 = C74249 * C1368;
    const double C76766 = C74249 * C5602;
    const double C78452 = C74249 * C3329;
    const double C78448 = C74249 * C1367;
    const double C78794 = C74249 * C6216;
    const double C78788 = C74249 * C2150;
    const double C78783 = C74249 * C503;
    const double C78779 = C74249 * C498;
    const double C78769 = C74249 * C2151;
    const double C78765 = C74249 * C6217;
    const double C78762 = C74249 * C502;
    const double C78758 = C74249 * C499;
    const double C79148 = C74249 * C1366;
    const double C79144 = C74249 * C984;
    const double C79460 = C74249 * C504;
    const double C79456 = C74249 * C497;
    const double C80654 = C74249 * C6214;
    const double C80650 = C74249 * C9041;
    const double C82416 = C74249 * C7561;
    const double C94170 = C74249 * C1797;
    const double C107731 = C74249 * C7562;
    const double C108132 = C74249 * C2149;
    const double C110085 = C74249 * C10378;
    const double C83848 = C83549 * C1224;
    const double C83840 = C83549 * C323;
    const double C83834 = C83549 * C316;
    const double C83818 = C83549 * C1225;
    const double C83816 = C83549 * C322;
    const double C83810 = C83549 * C317;
    const double C84396 = C83549 * C324;
    const double C84390 = C83549 * C315;
    const double C84961 = C83549 * C1797;
    const double C84955 = C83549 * C984;
    const double C84942 = C83549 * C983;
    const double C84936 = C83549 * C1798;
    const double C85371 = C83549 * C2991;
    const double C85615 = C83549 * C3329;
    const double C85609 = C83549 * C1367;
    const double C86369 = C83549 * C4145;
    const double C88510 = C83549 * C1366;
    const double C88504 = C83549 * C504;
    const double C88498 = C83549 * C497;
    const double C88488 = C83549 * C503;
    const double C88486 = C83549 * C498;
    const double C88857 = C83549 * C985;
    const double C89162 = C83549 * C496;
    const double C90353 = C83549 * C6216;
    const double C92112 = C83549 * C2150;
    const double C116554 = C83549 * C2149;
    const double C117011 = C83549 * C505;
    const double C119210 = C83549 * C7562;
    const double C70690 = C153818 * C345;
    const double C70681 = C153818 * C342;
    const double C70675 = C153818 * C344;
    const double C70657 = C153818 * C343;
    const double C71173 = C153818 * C341;
    const double C71669 = C153818 * C994;
    const double C71663 = C153818 * C993;
    const double C72029 = C153818 * C1237;
    const double C72247 = C153818 * C1379;
    const double C72917 = C153818 * C1810;
    const double C98891 = C153818 * C526;
    const double C98883 = C153818 * C523;
    const double C98881 = C153818 * C525;
    const double C98867 = C153818 * C524;
    const double C99339 = C153818 * C522;
    const double C101303 = C153818 * C2162;
    const double C121 =
        (C153809 + 2 * C153343) / C151946 - (C153818 * C153334) / C151939;
    const double C11540 = C11263 * C346;
    const double C11530 = C11263 * C341;
    const double C11519 = C11263 * C345;
    const double C11506 = C11263 * C342;
    const double C12518 = C11263 * C995;
    const double C12508 = C11263 * C994;
    const double C12878 = C11263 * C1236;
    const double C13096 = C11263 * C1378;
    const double C13766 = C11263 * C1809;
    const double C15510 = C11263 * C527;
    const double C15502 = C11263 * C522;
    const double C15496 = C11263 * C526;
    const double C15486 = C11263 * C523;
    const double C17922 = C11263 * C2161;
    const double C70693 = C153811 * C346;
    const double C70683 = C153811 * C341;
    const double C70672 = C153811 * C345;
    const double C70659 = C153811 * C342;
    const double C71671 = C153811 * C995;
    const double C71661 = C153811 * C994;
    const double C72031 = C153811 * C1236;
    const double C72249 = C153811 * C1378;
    const double C72919 = C153811 * C1809;
    const double C98893 = C153811 * C527;
    const double C98885 = C153811 * C522;
    const double C98879 = C153811 * C526;
    const double C98869 = C153811 * C523;
    const double C101305 = C153811 * C2161;
    const double C122 = (C153790 + 2 * C153351 + C153818) / C151946 -
                        (C153811 * C153334) / C151939;
    const double C123 = (C153761 + C153348 / C151939 + C153811) / C151946 -
                        (C153792 * C153334) / C151939;
    const double C152228 = C152227 + C152216;
    const double C340 =
        (2 * (2 * ae * C152408 * C152187 + C152162 * C152424) + C152426 +
         C152426 +
         C152162 * (C152424 + C152415 + C152415 + C152162 * C152422)) /
        C151945;
    const double C3362 = C2732 * C989;
    const double C3343 = C2734 * C989;
    const double C3850 = C2730 * C989;
    const double C24580 = C23995 * C989;
    const double C28869 = C28235 * C989;
    const double C35427 = C151978 * C989;
    const double C74787 = C74250 * C989;
    const double C75225 = C74248 * C989;
    const double C84135 = C152048 * C989;
    const double C521 =
        (2 * (2 * ae * C152511 * C152187 + C152162 * C152527) + C152529 +
         C152529 +
         C152162 * (C152527 + C152518 + C152518 + C152162 * C152525)) /
        C151945;
    const double C152295 = C152287 + C152267;
    const double C152269 = C152268 + C152252;
    const double C152674 = ae * C152672;
    const double C3371 = C2732 * C1372;
    const double C3354 = C2734 * C1372;
    const double C7896 = C2730 * C1372;
    const double C24591 = C23995 * C1372;
    const double C30759 = C28235 * C1372;
    const double C35436 = C151978 * C1372;
    const double C74796 = C74250 * C1372;
    const double C78146 = C74248 * C1372;
    const double C84146 = C152048 * C1372;
    const double C152446 = ae * C152444;
    const double C1230 = (2 * C152425 + C152408 * C152444) / C151939;
    const double C1803 = (C152511 * C152444) / C151939;
    const double C152549 = ae * C152547;
    const double C2155 = (2 * C152528 + C152511 * C152547) / C151939;
    const double C4848 = C153761 * C1377;
    const double C8444 = C2724 * C1377;
    const double C13098 = C11264 * C1377;
    const double C26055 = C153761 * C1377;
    const double C31527 = C153338 * C1377;
    const double C39397 = C153348 * C1377;
    const double C48990 = C153790 * C1377;
    const double C59004 = C153705 * C1377;
    const double C72251 = C153792 * C1377;
    const double C78449 = C153348 * C1377;
    const double C79147 = C74241 * C1377;
    const double C85610 = C83541 * C1377;
    const double C88509 = C153351 * C1377;
    const double C1235 =
        (2 * C152424 + C152408 * C152443 + C152747 + C152747 +
         C152162 *
             (2 * ae * (2 * C152410 + C152408 * C152454) + C152162 * C152740)) /
        C151945;
    const double C3049 = C2730 * C2994;
    const double C3024 = C2732 * C2994;
    const double C28242 = C28235 * C2994;
    const double C35131 = C151978 * C2994;
    const double C74511 = C74248 * C2994;
    const double C74491 = C74250 * C2994;
    const double C4185 = C2730 * C4148;
    const double C4169 = C2732 * C4148;
    const double C28590 = C28235 * C4148;
    const double C35408 = C151978 * C4148;
    const double C74790 = C74248 * C4148;
    const double C74768 = C74250 * C4148;
    const double C4180 = C2724 * C1808;
    const double C4157 = C153761 * C1808;
    const double C13768 = C11264 * C1808;
    const double C25405 = C153790 * C1808;
    const double C25382 = C153761 * C1808;
    const double C31530 = C153338 * C1808;
    const double C36147 = C153348 * C1808;
    const double C39739 = C153705 * C1808;
    const double C72921 = C153792 * C1808;
    const double C75507 = C153348 * C1808;
    const double C84960 = C153351 * C1808;
    const double C84937 = C83541 * C1808;
    const double C94169 = C74241 * C1808;
    const double C2160 =
        (2 * C152527 + C152511 * C152546 + C152846 + C152846 +
         C152162 *
             (2 * ae * (2 * C152513 + C152511 * C152557) + C152162 * C152839)) /
        C151945;
    const double C7617 = C2730 * C7565;
    const double C7592 = C2732 * C7565;
    const double C31274 = C28235 * C7565;
    const double C43004 = C151978 * C7565;
    const double C78801 = C74248 * C7565;
    const double C78774 = C74250 * C7565;
    const double C152359 = C152350 + C152320;
    const double C152324 = C152322 + C152302;
    const double C152462 = ae * C152457;
    const double C152739 = C152408 * C152457;
    const double C152800 = C152511 * C152457;
    const double C152859 = 3 * C152457;
    const double C3333 = (C152444 + C152457 * C152537) / C151939;
    const double C152623 = C152614 + C152479;
    const double C152685 = ae * C152680;
    const double C152948 = 2 * C152680;
    const double C152775 = C152413 + C152773;
    const double C152565 = ae * C152560;
    const double C152838 = C152511 * C152560;
    const double C152936 = 3 * C152560;
    const double C152649 = C152640 + C152582;
    const double C152854 = C152852 + C152853;
    const double C152887 = ae * C152886;
    const double C4856 = C2732 * C4837;
    const double C28593 = C28235 * C4837;
    const double C35423 = C151978 * C4837;
    const double C74793 = C74248 * C4837;
    const double C74783 = C74250 * C4837;
    const double C3337 = (C152443 + C152455 * C152537 + C152873 + C152873 +
                          C152162 * (2 * ae * (C152454 + C152494 * C152537) +
                                     C152162 * (C152455 + C152495 * C152537))) /
                         C151945;
    const double C6233 = C2732 * C6220;
    const double C31270 = C28235 * C6220;
    const double C37938 = C151978 * C6220;
    const double C77298 = C74250 * C6220;
    const double C79871 = C74248 * C6220;
    const double C152923 = ae * C152922;
    const double C9044 = (3 * C152779 + C152511 * C152922) / C151939;
    const double C152931 = C152929 + C152930;
    const double C29298 = C28235 * C29293;
    const double C29436 = C28235 * C29425;
    const double C29864 = C28235 * C29859;
    const double C30201 = C28235 * C30196;
    const double C57498 = C28235 * C57493;
    const double C4599 = C2724 * C2998;
    const double C25815 = C153790 * C2998;
    const double C28404 = C153338 * C2998;
    const double C35152 = C153705 * C2998;
    const double C35132 = C153348 * C2998;
    const double C74512 = C74241 * C2998;
    const double C74492 = C153348 * C2998;
    const double C85370 = C153351 * C2998;
    const double C5615 = C2724 * C4152;
    const double C26813 = C153790 * C4152;
    const double C29053 = C153338 * C4152;
    const double C36149 = C153705 * C4152;
    const double C36127 = C153348 * C4152;
    const double C75509 = C74241 * C4152;
    const double C75487 = C153348 * C4152;
    const double C86368 = C153351 * C4152;
    const double C28395 = C153338 * C4593;
    const double C36517 = C153705 * C4593;
    const double C75877 = C74241 * C4593;
    const double C29433 = C153338 * C4841;
    const double C36733 = C153705 * C4841;
    const double C76093 = C74241 * C4841;
    const double C29040 = C153338 * C5609;
    const double C37405 = C153705 * C5609;
    const double C76765 = C74241 * C5609;
    const double C10391 = C2724 * C7569;
    const double C50919 = C153790 * C7569;
    const double C55985 = C153338 * C7569;
    const double C62234 = C153348 * C7569;
    const double C63737 = C153705 * C7569;
    const double C82417 = C153348 * C7569;
    const double C107730 = C74241 * C7569;
    const double C119209 = C153351 * C7569;
    const double C55982 = C153338 * C10385;
    const double C66091 = C153705 * C10385;
    const double C110084 = C74241 * C10385;
    const double C152385 = C152348 + C152382;
    const double C152391 = C152388 + C152366;
    const double C152504 = ae * C152498;
    const double C152718 = C152408 * C152498;
    const double C152788 = C152511 * C152498;
    const double C152876 = C152498 * C152537;
    const double C152607 = ae * C152601;
    const double C152817 = C152511 * C152601;
    const double C152702 = ae * C152695;
    const double C152761 = C152472 + C152755;
    const double C152865 = C152861 + C152862;
    const double C152893 = ae * C152891;
    const double C152903 = C152721 + C152902;
    const double C152915 = C152913 + C152914;
    const double C152942 = C152938 + C152939;
    const double C152956 = ae * C152954;
    const double C152959 = C152511 * C152954;
    const double C152509 = C152493 + C152508;
    const double C152734 = C152733 + C152729;
    const double C152863 = C152857 + C152858;
    const double C32072 =
        (2 * ae *
             (2 * C152511 * C152722 +
              C152511 * (C152722 + (2 * C152616 +
                                    C152408 * (C152297 + C152361 * C152434)) *
                                       C152537)) +
         C152162 *
             (2 * C152889 +
              C152511 * (C152723 +
                         (2 * C152617 +
                          C152408 * (C152368 +
                                     (C152340 * C152341 +
                                      C152166 * bs[9] * std::pow(C152168, 9)) *
                                         C152169 * C152434)) *
                             C152537))) /
        C151945;
    const double C32675 =
        (3 * (C152740 + C152723 * C152537) +
         C152511 *
             (2 * C152889 +
              C152511 * (C152723 +
                         (2 * C152617 +
                          C152408 * (C152368 +
                                     (C152340 * C152341 +
                                      C152166 * bs[9] * std::pow(C152168, 9)) *
                                         C152169 * C152434)) *
                             C152537))) /
        C151945;
    const double C31005 = C153338 * C4840;
    const double C36735 = C153348 * C4840;
    const double C76095 = C153348 * C4840;
    const double C32686 = C153338 * C30199;
    const double C31271 = C153338 * C6226;
    const double C41239 = C153348 * C6226;
    const double C80655 = C153348 * C6226;
    const double C32684 = C153338 * C31243;
    const double C152612 = C152596 + C152611;
    const double C152833 = C152832 + C152828;
    const double C152940 = C152934 + C152935;
    const double C152637 = C152162 * C152636;
    const double C152707 = C152697 + C152706;
    const double C9047 = (2 * ae *
                              (3 * (C152410 + C152468 * C152537) +
                               C152511 * (2 * C152677 + C152511 * C152758)) +
                          C152162 * (3 * C152774 + C152511 * C152952)) /
                         C151945;
    const double C34016 = (4 * (2 * C152671 + C152511 * C152774) +
                           C152511 * (3 * C152774 + C152511 * C152952)) /
                          C151945;
    const double C56418 =
        (2 * ae *
             (4 * (2 * C152677 + C152511 * C152758) +
              C152511 * (3 * C152758 +
                         C152511 * (2 * C152691 +
                                    C152511 * (C152616 +
                                               C152408 * C152361 * C152537)))) +
         C152162 *
             (4 * C152952 +
              C152511 * (3 * C152759 +
                         C152511 * (2 * C152692 +
                                    C152511 * (C152617 +
                                               C152408 *
                                                   (C152340 * C152341 +
                                                    C152166 * bs[9] *
                                                        std::pow(C152168, 9)) *
                                                   C152169 * C152537))))) /
        C151945;
    const double C56753 =
        (5 * (3 * C152774 + C152511 * C152952) +
         C152511 *
             (4 * C152952 +
              C152511 * (3 * C152759 +
                         C152511 * (2 * C152692 +
                                    C152511 * (C152617 +
                                               C152408 *
                                                   (C152340 * C152341 +
                                                    C152166 * bs[9] *
                                                        std::pow(C152168, 9)) *
                                                   C152169 * C152537))))) /
        C151945;
    const double C152663 = C152162 * C152662;
    const double C28229 =
        (C153812 + 2 * C153556) / C151946 - (C153819 * C153552) / C151939;
    const double C28230 = (C153800 + 2 * C153563 + C153819) / C151946 -
                          (C153815 * C153552) / C151939;
    const double C28231 = (C153774 + C153560 / C151939 + C153815) / C151946 -
                          (C153805 * C153552) / C151939;
    const double C55722 =
        (C153813 + 2 * C153596) / C151946 - (C153820 * C153592) / C151939;
    const double C55723 = (C153802 + 2 * C153603 + C153820) / C151946 -
                          (C153817 * C153592) / C151939;
    const double C55724 = (C153777 + C153600 / C151939 + C153817) / C151946 -
                          (C153808 * C153592) / C151939;
    const double C34923 = C152005 * C155;
    const double C34912 = C152005 * C334;
    const double C34910 = C152005 * C329;
    const double C34908 = C152005 * C154;
    const double C34907 = C152005 * C153;
    const double C34905 = C152005 * C330;
    const double C34903 = C152005 * C333;
    const double C34901 = C152005 * C1231;
    const double C34898 = C152005 * C1232;
    const double C34896 = C152005 * C332;
    const double C34894 = C152005 * C331;
    const double C34892 = C152005 * C152;
    const double C35151 = C152005 * C2994;
    const double C35136 = C152005 * C4590;
    const double C35134 = C152005 * C2993;
    const double C35439 = C152005 * C514;
    const double C35437 = C152005 * C1373;
    const double C35435 = C152005 * C3332;
    const double C35433 = C152005 * C4837;
    const double C35430 = C152005 * C4148;
    const double C35428 = C152005 * C1804;
    const double C35426 = C152005 * C988;
    const double C35424 = C152005 * C511;
    const double C35422 = C152005 * C4838;
    const double C35420 = C152005 * C3331;
    const double C35418 = C152005 * C1374;
    const double C35416 = C152005 * C513;
    const double C35415 = C152005 * C512;
    const double C35413 = C152005 * C987;
    const double C35411 = C152005 * C1805;
    const double C35409 = C152005 * C4147;
    const double C35867 = C152005 * C510;
    const double C35865 = C152005 * C989;
    const double C36138 = C152005 * C5606;
    const double C36521 = C152005 * C28380;
    const double C36737 = C152005 * C28572;
    const double C37409 = C152005 * C29034;
    const double C37943 = C152005 * C2157;
    const double C37941 = C152005 * C6224;
    const double C37939 = C152005 * C6221;
    const double C37937 = C152005 * C30197;
    const double C39407 = C152005 * C2156;
    const double C39405 = C152005 * C6223;
    const double C39403 = C152005 * C6220;
    const double C40053 = C152005 * C515;
    const double C40051 = C152005 * C1372;
    const double C43005 = C152005 * C7564;
    const double C43003 = C152005 * C9045;
    const double C43001 = C152005 * C31241;
    const double C58700 = C152005 * C7565;
    const double C62238 = C152005 * C10382;
    const double C62236 = C152005 * C34014;
    const double C66095 = C152005 * C55976;
    const double C152013 = C152005 / C151946;
    const double C152011 = C151940 * C152005;
    const double C152010 = 2 * C152005;
    const double C152012 = C151982 - C152006;
    const double C152009 = C151976 - C152004;
    const double C3055 = C3012 + C2744;
    const double C3052 = C3006 + C2741;
    const double C7623 = C7583 + C3351;
    const double C7620 = C7577 + C3346;
    const double C24304 = C24261 + C24005;
    const double C24301 = C24255 + C24002;
    const double C48172 = C48132 + C24588;
    const double C48169 = C48126 + C24583;
    const double C28416 = C28401 + C28243;
    const double C28415 = C28399 + C28244;
    const double C28414 = C28397 + C28245;
    const double C28413 = C28393 + C28394;
    const double C28412 = C28391 + C28241;
    const double C28411 = C28389 + C28240;
    const double C28410 = C28387 + C28239;
    const double C28409 = C28385 + C28238;
    const double C28729 = C28721 + C28249;
    const double C28728 = C28719 + C28248;
    const double C29062 = C29050 + C28589;
    const double C29061 = C29048 + C28588;
    const double C29060 = C29045 + C28580;
    const double C29059 = C29043 + C28579;
    const double C29058 = C29041 + C28578;
    const double C29057 = C29039 + C28577;
    const double C29299 = C29296 + C28396;
    const double C29440 = C29434 + C28586;
    const double C29439 = C29432 + C28585;
    const double C29438 = C29430 + C28584;
    const double C29437 = C29428 + C28583;
    const double C29865 = C29862 + C29047;
    const double C31008 = C31000 + C28594;
    const double C31007 = C30996 + C28595;
    const double C31283 = C31266 + C31267;
    const double C31282 = C31263 + C31264;
    const double C31281 = C31261 + C28596;
    const double C31280 = C31259 + C28587;
    const double C31279 = C31254 + C30205;
    const double C31278 = C31252 + C30204;
    const double C31277 = C31250 + C30203;
    const double C31276 = C31248 + C28582;
    const double C31275 = C31246 + C28581;
    const double C31776 = C31770 + C30758;
    const double C31775 = C31768 + C28870;
    const double C32690 = C32685 + C30202;
    const double C32689 = C32683 + C31258;
    const double C32688 = C32679 + C31257;
    const double C34023 = C34018 + C31256;
    const double C55990 = C55981 + C34022;
    const double C56758 = C56755 + C34021;
    const double C57499 = C57496 + C55983;
    const double C35169 = C35144 + C34902;
    const double C35167 = C35140 + C34904;
    const double C35163 = C35128 + C34899;
    const double C35161 = C35124 + C34897;
    const double C35159 = C35120 + C34895;
    const double C36158 = C36134 + C35412;
    const double C36156 = C36130 + C35410;
    const double C36741 = C36730 + C35421;
    const double C36739 = C36726 + C35419;
    const double C39415 = C39392 + C35438;
    const double C39413 = C39388 + C35425;
    const double C39410 = C39382 + C35417;
    const double C39409 = C39380 + C35414;
    const double C41241 = C41233 + C37940;
    const double C43007 = C42998 + C37942;
    const double C74529 = C74504 + C74262;
    const double C74527 = C74500 + C74264;
    const double C74523 = C74488 + C74259;
    const double C74521 = C74484 + C74257;
    const double C74519 = C74480 + C74255;
    const double C75518 = C75494 + C74772;
    const double C75516 = C75490 + C74770;
    const double C76101 = C76090 + C74781;
    const double C76099 = C76086 + C74779;
    const double C78813 = C78783 + C74798;
    const double C78811 = C78779 + C74785;
    const double C78808 = C78769 + C77302;
    const double C78806 = C78765 + C77300;
    const double C78805 = C78762 + C74777;
    const double C78803 = C78758 + C74774;
    const double C83859 = C83816 + C83560;
    const double C83856 = C83810 + C83557;
    const double C88521 = C88488 + C84143;
    const double C88520 = C88486 + C84138;
    const double C152229 = ae * C152228;
    const double C156 = (3 * C152196 + C152162 * C152228 +
                         (2 * C152185 + C152162 * C152213) * ae) /
                        C151939;
    const double C328 = (C152408 * C152228) / C151939;
    const double C509 = (C152511 * C152228) / C151939;
    const double C3031 = C153761 * C340;
    const double C3597 = C2724 * C340;
    const double C11532 = C11264 * C340;
    const double C11510 = C153738 * C340;
    const double C12022 = C11263 * C340;
    const double C24280 = C153761 * C340;
    const double C24834 = C153790 * C340;
    const double C35637 = C153348 * C340;
    const double C70685 = C153792 * C340;
    const double C70663 = C153738 * C340;
    const double C71175 = C153811 * C340;
    const double C74997 = C153348 * C340;
    const double C83835 = C83541 * C340;
    const double C84389 = C153351 * C340;
    const double C4189 = C4162 + C3343;
    const double C25414 = C25387 + C24580;
    const double C31534 = C31524 + C28869;
    const double C36161 = C36142 + C35427;
    const double C75521 = C75502 + C74787;
    const double C84969 = C84942 + C84135;
    const double C7599 = C153761 * C521;
    const double C8118 = C2724 * C521;
    const double C15504 = C11264 * C521;
    const double C15490 = C153738 * C521;
    const double C15958 = C11263 * C521;
    const double C40047 = C153348 * C521;
    const double C48148 = C153761 * C521;
    const double C48667 = C153790 * C521;
    const double C79457 = C153348 * C521;
    const double C88499 = C83541 * C521;
    const double C89161 = C153351 * C521;
    const double C98887 = C153792 * C521;
    const double C98873 = C153738 * C521;
    const double C99341 = C153811 * C521;
    const double C152323 = C152295 + C152321;
    const double C152271 = ae * C152269;
    const double C152270 = C152162 * C152269;
    const double C152282 = 4 * C152269;
    const double C152412 = C152408 * C152269;
    const double C152515 = C152511 * C152269;
    const double C335 = (C152228 + C152269 * C152434) / C151939;
    const double C516 = (C152228 + C152269 * C152537) / C151939;
    const double C996 = (2 * (2 * ae * C152511 * C152410 + C152162 * C152671) +
                         C152674 + C152674 +
                         C152162 * (C152671 + C152675 + C152675 +
                                    C152162 * (2 * ae * C152511 * C152468 +
                                               C152162 * C152511 * C152469))) /
                        C151945;
    const double C4860 = C4847 + C3354;
    const double C26067 = C26054 + C24591;
    const double C31535 = C31526 + C30759;
    const double C39417 = C39396 + C35436;
    const double C78455 = C78448 + C74796;
    const double C85622 = C85609 + C84146;
    const double C347 =
        (2 * (2 * ae * (C152187 + C152211 * C152434) + C152162 * C152443) +
         C152446 + C152446 +
         C152162 * (C152443 + C152447 + C152447 +
                    C152162 * (2 * ae * (C152211 + C152247 * C152434) +
                               C152162 * (C152254 + C152304 * C152434)))) /
        C151945;
    const double C3042 = C2732 * C1230;
    const double C3015 = C2734 * C1230;
    const double C3608 = C2730 * C1230;
    const double C24264 = C23995 * C1230;
    const double C28250 = C28235 * C1230;
    const double C34914 = C152005 * C1230;
    const double C34900 = C151978 * C1230;
    const double C74274 = C74248 * C1230;
    const double C74260 = C74250 * C1230;
    const double C83819 = C152048 * C1230;
    const double C3365 = C2732 * C1803;
    const double C3340 = C2734 * C1803;
    const double C3847 = C2730 * C1803;
    const double C24577 = C23995 * C1803;
    const double C28868 = C28235 * C1803;
    const double C35429 = C151978 * C1803;
    const double C35863 = C152005 * C1803;
    const double C74789 = C74250 * C1803;
    const double C75223 = C74248 * C1803;
    const double C84132 = C152048 * C1803;
    const double C528 =
        (2 * (2 * ae * (C152187 + C152211 * C152537) + C152162 * C152546) +
         C152549 + C152549 +
         C152162 * (C152546 + C152550 + C152550 +
                    C152162 * (2 * ae * (C152211 + C152247 * C152537) +
                               C152162 * (C152254 + C152304 * C152537)))) /
        C151945;
    const double C6238 = C2734 * C2155;
    const double C7610 = C2732 * C2155;
    const double C8129 = C2730 * C2155;
    const double C27418 = C23995 * C2155;
    const double C31774 = C28235 * C2155;
    const double C39406 = C151978 * C2155;
    const double C59310 = C152005 * C2155;
    const double C78789 = C74250 * C2155;
    const double C79465 = C74248 * C2155;
    const double C86973 = C152048 * C2155;
    const double C3043 = C2724 * C1235;
    const double C3016 = C153761 * C1235;
    const double C12880 = C11264 * C1235;
    const double C24292 = C153790 * C1235;
    const double C24265 = C153761 * C1235;
    const double C28724 = C153338 * C1235;
    const double C35149 = C153348 * C1235;
    const double C35643 = C153705 * C1235;
    const double C72033 = C153792 * C1235;
    const double C74509 = C153348 * C1235;
    const double C75003 = C74241 * C1235;
    const double C83847 = C153351 * C1235;
    const double C83820 = C83541 * C1235;
    const double C28417 = C28403 + C28242;
    const double C35164 = C35130 + C35131;
    const double C74524 = C74490 + C74491;
    const double C29063 = C29052 + C28590;
    const double C36154 = C36126 + C35408;
    const double C75514 = C75486 + C74768;
    const double C7611 = C2724 * C2160;
    const double C7586 = C153761 * C2160;
    const double C17924 = C11264 * C2160;
    const double C48160 = C153790 * C2160;
    const double C48135 = C153761 * C2160;
    const double C56245 = C153338 * C2160;
    const double C58690 = C153348 * C2160;
    const double C64138 = C153705 * C2160;
    const double C78790 = C153348 * C2160;
    const double C92113 = C83541 * C2160;
    const double C101307 = C153792 * C2160;
    const double C108131 = C74241 * C2160;
    const double C116553 = C153351 * C2160;
    const double C55991 = C55984 + C31274;
    const double C62240 = C62233 + C43004;
    const double C82423 = C82416 + C78774;
    const double C152390 = C152359 + C152387;
    const double C152326 = ae * C152324;
    const double C152325 = C152162 * C152324;
    const double C152343 = 4 * C152324;
    const double C152451 = C152324 * C152434;
    const double C152471 = C152408 * C152324;
    const double C152554 = C152324 * C152537;
    const double C152574 = C152511 * C152324;
    const double C152741 = C152738 + C152739;
    const double C152801 = ae * C152800;
    const double C3368 = C2732 * C3333;
    const double C3357 = C2734 * C3333;
    const double C24594 = C23995 * C3333;
    const double C30760 = C28235 * C3333;
    const double C35434 = C151978 * C3333;
    const double C40049 = C152005 * C3333;
    const double C74794 = C74250 * C3333;
    const double C79151 = C74248 * C3333;
    const double C84149 = C152048 * C3333;
    const double C152632 = C152623 + C152479;
    const double C152776 = ae * C152775;
    const double C6222 = (2 * C152672 + C152511 * C152775) / C151939;
    const double C152840 = C152837 + C152838;
    const double C152658 = C152649 + C152582;
    const double C152855 = ae * C152854;
    const double C4589 = (4 * C152746 + C152408 * C152854) / C151939;
    const double C5605 = (C152511 * C152854) / C151939;
    const double C4153 =
        (C152511 * C152740 + C152887 + C152887 +
         C152162 * (2 * ae * C152511 * C152722 + C152162 * C152511 * C152723)) /
        C151945;
    const double C31009 = C31004 + C28593;
    const double C36743 = C36734 + C35423;
    const double C76103 = C76094 + C74783;
    const double C4854 = C153761 * C3337;
    const double C26061 = C153761 * C3337;
    const double C31532 = C153338 * C3337;
    const double C39401 = C153348 * C3337;
    const double C78453 = C153348 * C3337;
    const double C85616 = C83541 * C3337;
    const double C31284 = C31269 + C31270;
    const double C41243 = C41238 + C37938;
    const double C80662 = C80654 + C77298;
    const double C6228 =
        (2 * C152671 + C152511 * C152774 + C152923 + C152923 +
         C152162 * (2 * ae * (2 * C152677 + C152511 * C152758) +
                    C152162 * (2 * C152678 + C152511 * C152759))) /
        C151945;
    const double C9058 = C2732 * C9044;
    const double C31273 = C28235 * C9044;
    const double C43002 = C151978 * C9044;
    const double C58698 = C152005 * C9044;
    const double C78799 = C74248 * C9044;
    const double C78776 = C74250 * C9044;
    const double C152932 = ae * C152931;
    const double C10381 = (4 * C152845 + C152511 * C152931) / C151939;
    const double C152389 = C152385 * ae;
    const double C151 = 6 * (4 * C152256 + C152162 * C152314) +
                        C152162 * (5 * C152314 + C152162 * C152385);
    const double C326 = 4 * C152256 + C152162 * C152314 + C152385 * C152434;
    const double C507 = 4 * C152256 + C152162 * C152314 + C152385 * C152537;
    const double C679 = C152408 * (5 * C152314 + C152162 * C152385);
    const double C811 = C152511 * (5 * C152314 + C152162 * C152385);
    const double C986 = C152511 * C152408 * C152385;
    const double C152394 = ae * C152391;
    const double C152393 = C152162 * C152391;
    const double C152490 = C152391 * C152434;
    const double C152593 = C152391 * C152537;
    const double C152620 = C152408 * C152391;
    const double C152646 = C152511 * C152391;
    const double C152725 = C152717 + C152718;
    const double C152794 = ae * C152788;
    const double C152879 = C152457 + C152876;
    const double C152824 = C152816 + C152817;
    const double C152767 = ae * C152761;
    const double C152949 = C152511 * C152761;
    const double C152867 = ae * C152865;
    const double C152896 = C152408 * C152865;
    const double C152908 = C152511 * C152865;
    const double C28573 = (C152854 + C152865 * C152537) / C151939;
    const double C152904 = ae * C152903;
    const double C32071 = (2 * C152886 + C152511 * C152903) / C151939;
    const double C152916 = ae * C152915;
    const double C31242 = (3 * C152872 + C152511 * C152915) / C151939;
    const double C152944 = ae * C152942;
    const double C152966 = C152511 * C152942;
    const double C152960 = C152958 + C152959;
    const double C4592 = (2 * ae *
                              (4 * (2 * C152410 + C152408 * C152454) +
                               C152408 * (3 * C152454 + C152408 * C152722)) +
                          C152162 * (4 * C152740 + C152408 * C152863)) /
                         C151945;
    const double C5608 = (2 * ae * C152511 * (3 * C152454 + C152408 * C152722) +
                          C152162 * C152511 * C152863) /
                         C151945;
    const double C28382 = (5 * (3 * C152443 + C152408 * C152740) +
                           C152408 * (4 * C152740 + C152408 * C152863)) /
                          C151945;
    const double C28383 =
        (2 * ae *
             (5 * (3 * C152454 + C152408 * C152722) +
              C152408 *
                  (4 * C152722 +
                   C152408 *
                       (3 * C152494 +
                        C152408 * (2 * C152616 +
                                   C152408 * (C152297 + C152361 * C152434))))) +
         C152162 *
             (5 * C152863 +
              C152408 *
                  (4 * C152723 +
                   C152408 *
                       (3 * C152495 +
                        C152408 *
                            (2 * C152617 +
                             C152408 * (C152368 + (C152340 * C152341 +
                                                   C152166 * bs[9] *
                                                       std::pow(C152168, 9)) *
                                                      C152169 * C152434)))))) /
        C151945;
    const double C28574 =
        (3 * C152443 + C152408 * C152740 + C152863 * C152537) / C151945;
    const double C28575 =
        (2 * ae *
             (3 * C152454 + C152408 * C152722 +
              (3 * C152494 +
               C152408 *
                   (2 * C152616 + C152408 * (C152297 + C152361 * C152434))) *
                  C152537) +
         C152162 *
             (C152863 +
              (3 * C152495 +
               C152408 * (2 * C152617 +
                          C152408 * (C152368 +
                                     (C152340 * C152341 +
                                      C152166 * bs[9] * std::pow(C152168, 9)) *
                                         C152169 * C152434))) *
                  C152537)) /
        C151945;
    const double C29036 =
        (C152511 * (4 * C152740 + C152408 * C152863)) / C151945;
    const double C29294 =
        (6 * (4 * C152740 + C152408 * C152863) +
         C152408 *
             (5 * C152863 +
              C152408 *
                  (4 * C152723 +
                   C152408 *
                       (3 * C152495 +
                        C152408 *
                            (2 * C152617 +
                             C152408 * (C152368 + (C152340 * C152341 +
                                                   C152166 * bs[9] *
                                                       std::pow(C152168, 9)) *
                                                      C152169 * C152434)))))) /
        C151945;
    const double C29426 =
        (4 * C152740 + C152408 * C152863 +
         (4 * C152723 +
          C152408 *
              (3 * C152495 +
               C152408 * (2 * C152617 +
                          C152408 * (C152368 +
                                     (C152340 * C152341 +
                                      C152166 * bs[9] * std::pow(C152168, 9)) *
                                         C152169 * C152434)))) *
             C152537) /
        C151945;
    const double C29860 =
        (C152511 *
         (5 * C152863 +
          C152408 *
              (4 * C152723 +
               C152408 * (3 * C152495 +
                          C152408 * (2 * C152617 +
                                     C152408 * (C152368 +
                                                (C152340 * C152341 +
                                                 C152166 * bs[9] *
                                                     std::pow(C152168, 9)) *
                                                    C152169 * C152434)))))) /
        C151945;
    const double C30198 =
        (2 * C152511 * C152863 +
         C152511 *
             (C152863 +
              (3 * C152495 +
               C152408 * (2 * C152617 +
                          C152408 * (C152368 +
                                     (C152340 * C152341 +
                                      C152166 * bs[9] * std::pow(C152168, 9)) *
                                         C152169 * C152434))) *
                  C152537)) /
        C151945;
    const double C10384 = (2 * ae *
                               (4 * (2 * C152513 + C152511 * C152557) +
                                C152511 * (3 * C152557 + C152511 * C152821)) +
                           C152162 * (4 * C152839 + C152511 * C152940)) /
                          C151945;
    const double C55978 = (5 * (3 * C152546 + C152511 * C152839) +
                           C152511 * (4 * C152839 + C152511 * C152940)) /
                          C151945;
    const double C55979 =
        (2 * ae *
             (5 * (3 * C152557 + C152511 * C152821) +
              C152511 *
                  (4 * C152821 +
                   C152511 *
                       (3 * C152597 +
                        C152511 * (2 * C152642 +
                                   C152511 * (C152297 + C152361 * C152537))))) +
         C152162 *
             (5 * C152940 +
              C152511 *
                  (4 * C152822 +
                   C152511 *
                       (3 * C152598 +
                        C152511 *
                            (2 * C152643 +
                             C152511 * (C152368 + (C152340 * C152341 +
                                                   C152166 * bs[9] *
                                                       std::pow(C152168, 9)) *
                                                      C152169 * C152537)))))) /
        C151945;
    const double C57494 =
        (6 * (4 * C152839 + C152511 * C152940) +
         C152511 *
             (5 * C152940 +
              C152511 *
                  (4 * C152822 +
                   C152511 *
                       (3 * C152598 +
                        C152511 *
                            (2 * C152643 +
                             C152511 * (C152368 + (C152340 * C152341 +
                                                   C152166 * bs[9] *
                                                       std::pow(C152168, 9)) *
                                                      C152169 * C152537)))))) /
        C151945;
    const double C56421 = C153338 * C9047;
    const double C60483 = C153348 * C9047;
    const double C80651 = C153348 * C9047;
    const double C56756 = C153338 * C34016;
    const double C152019 = C152013 - C152001;
    const double C23993 = C152013 + (C151987 * ae) / C151939;
    const double C152017 = C152011 + C153705;
    const double C152018 = C152012 * be;
    const double C152016 = C152009 * ae;
    const double C2729 =
        (-(be * C151950) / C151945) / C151946 -
        ((2 * ((-C151949) / C151946 - (C151986 * be) / C151939) -
          (C151940 * C152009 * be) / C151939) *
         be) /
            C151939 -
        C152000;
    const double C2731 =
        (-(C152009 * be) / C151939) / C151946 -
        ((2 * ((-C151970 / C151939) / C151946 - (0 * be) / C151939) - C152006) *
         be) /
            C151939;
    const double C74247 = -(C152009 * be) / C151939;
    const double C3073 = C3055 + C2744;
    const double C3070 = C3052 + C2741;
    const double C7641 = C7623 + C3351;
    const double C7638 = C7620 + C3346;
    const double C24322 = C24304 + C24005;
    const double C24319 = C24301 + C24002;
    const double C48190 = C48172 + C24588;
    const double C48187 = C48169 + C24583;
    const double C28426 = C28416 + C28243;
    const double C28425 = C28415 + C28244;
    const double C28424 = C28414 + C28245;
    const double C28423 = C28413 + C28394;
    const double C28422 = C28412 + C28241;
    const double C28421 = C28411 + C28240;
    const double C28420 = C28410 + C28239;
    const double C28419 = C28409 + C28238;
    const double C28733 = C28729 + C28249;
    const double C28732 = C28728 + C28248;
    const double C29070 = C29062 + C28589;
    const double C29069 = C29061 + C28588;
    const double C29068 = C29060 + C28580;
    const double C29067 = C29059 + C28579;
    const double C29066 = C29058 + C28578;
    const double C29065 = C29057 + C28577;
    const double C29300 = C29299 + C28396;
    const double C29444 = C29440 + C28586;
    const double C29443 = C29439 + C28585;
    const double C29442 = C29438 + C28584;
    const double C29441 = C29437 + C28583;
    const double C29866 = C29865 + C29047;
    const double C31013 = C31008 + C28594;
    const double C31012 = C31007 + C28595;
    const double C31293 = C31283 + C31267;
    const double C31292 = C31282 + C31264;
    const double C31291 = C31281 + C28596;
    const double C31290 = C31280 + C28587;
    const double C31289 = C31279 + C30205;
    const double C31288 = C31278 + C30204;
    const double C31287 = C31277 + C30203;
    const double C31286 = C31276 + C28582;
    const double C31285 = C31275 + C28581;
    const double C31778 = C31776 + C30758;
    const double C31777 = C31775 + C28870;
    const double C32693 = C32690 + C30202;
    const double C32692 = C32689 + C31258;
    const double C32691 = C32688 + C31257;
    const double C34024 = C34023 + C31256;
    const double C55993 = C55990 + C34022;
    const double C56759 = C56758 + C34021;
    const double C57500 = C57499 + C55983;
    const double C35185 = C35169 + C34902;
    const double C35183 = C35167 + C34904;
    const double C35179 = C35163 + C34899;
    const double C35177 = C35161 + C34897;
    const double C35175 = C35159 + C34895;
    const double C36170 = C36158 + C35412;
    const double C36168 = C36156 + C35410;
    const double C36747 = C36741 + C35421;
    const double C36745 = C36739 + C35419;
    const double C39427 = C39415 + C35438;
    const double C39425 = C39413 + C35425;
    const double C39422 = C39410 + C35417;
    const double C39421 = C39409 + C35414;
    const double C41245 = C41241 + C37940;
    const double C43009 = C43007 + C37942;
    const double C74545 = C74529 + C74262;
    const double C74543 = C74527 + C74264;
    const double C74539 = C74523 + C74259;
    const double C74537 = C74521 + C74257;
    const double C74535 = C74519 + C74255;
    const double C75530 = C75518 + C74772;
    const double C75528 = C75516 + C74770;
    const double C76107 = C76101 + C74781;
    const double C76105 = C76099 + C74779;
    const double C78829 = C78813 + C74798;
    const double C78827 = C78811 + C74785;
    const double C78824 = C78808 + C77302;
    const double C78822 = C78806 + C77300;
    const double C78821 = C78805 + C74777;
    const double C78819 = C78803 + C74774;
    const double C83877 = C83859 + C83560;
    const double C83874 = C83856 + C83557;
    const double C88536 = C88521 + C84143;
    const double C88535 = C88520 + C84138;
    const double C164 =
        (3 * (C152191 + C152194 + C152194 + C152162 * C152222) + C152229 +
         C152229 +
         C152162 * (2 * C152222 + C152226 + C152226 +
                    C152162 * (C152217 + C152221 + C152221 +
                               C152162 * (2 * ae * C152211 +
                                          C152162 *
                                              (C152201 * C152202 +
                                               C152166 * bs[6] *
                                                   std::pow(C152160, 6)) *
                                              C152169)))) /
        C151945;
    const double C173 = C143 * C156;
    const double C2770 = C2732 * C156;
    const double C2756 = C2734 * C156;
    const double C11289 = C11275 * C156;
    const double C24017 = C23995 * C156;
    const double C34922 = C151978 * C156;
    const double C70442 = C70428 * C156;
    const double C74282 = C74250 * C156;
    const double C83572 = C152048 * C156;
    const double C2768 = C2730 * C328;
    const double C2758 = C2732 * C328;
    const double C2748 = C2734 * C328;
    const double C11284 = C11275 * C328;
    const double C24009 = C23995 * C328;
    const double C28255 = C28235 * C328;
    const double C34921 = C152005 * C328;
    const double C34911 = C151978 * C328;
    const double C70437 = C70428 * C328;
    const double C74281 = C74248 * C328;
    const double C74271 = C74250 * C328;
    const double C83564 = C152048 * C328;
    const double C3360 = C2734 * C509;
    const double C3852 = C2732 * C509;
    const double C7124 = C2730 * C509;
    const double C11797 = C11275 * C509;
    const double C24597 = C23995 * C509;
    const double C30766 = C28235 * C509;
    const double C35866 = C151978 * C509;
    const double C38789 = C152005 * C509;
    const double C70950 = C70428 * C509;
    const double C75226 = C74250 * C509;
    const double C78155 = C74248 * C509;
    const double C84152 = C152048 * C509;
    const double C4201 = C4189 + C3343;
    const double C25426 = C25414 + C24580;
    const double C31538 = C31534 + C28869;
    const double C36173 = C36161 + C35427;
    const double C75533 = C75521 + C74787;
    const double C84981 = C84969 + C84135;
    const double C152272 = C152236 + C152270;
    const double C152418 = ae * C152412;
    const double C990 = (C152511 * C152412) / C151939;
    const double C152521 = ae * C152515;
    const double C2765 = C2730 * C335;
    const double C2761 = C2732 * C335;
    const double C2745 = C2734 * C335;
    const double C11512 = C11275 * C335;
    const double C24006 = C23995 * C335;
    const double C28254 = C28235 * C335;
    const double C34919 = C152005 * C335;
    const double C34913 = C151978 * C335;
    const double C70665 = C70428 * C335;
    const double C74279 = C74248 * C335;
    const double C74273 = C74250 * C335;
    const double C83561 = C152048 * C335;
    const double C3373 = C2734 * C516;
    const double C7121 = C2730 * C516;
    const double C7117 = C2732 * C516;
    const double C11804 = C11275 * C516;
    const double C24610 = C23995 * C516;
    const double C30765 = C28235 * C516;
    const double C40052 = C151978 * C516;
    const double C58105 = C152005 * C516;
    const double C70957 = C70428 * C516;
    const double C78153 = C74248 * C516;
    const double C78145 = C74250 * C516;
    const double C84165 = C152048 * C516;
    const double C4176 = C153761 * C996;
    const double C12520 = C11264 * C996;
    const double C12504 = C153738 * C996;
    const double C19659 = C2724 * C996;
    const double C25401 = C153761 * C996;
    const double C39737 = C153348 * C996;
    const double C71673 = C153792 * C996;
    const double C71657 = C153738 * C996;
    const double C79145 = C153348 * C996;
    const double C84956 = C83541 * C996;
    const double C88856 = C153351 * C996;
    const double C126241 = C153790 * C996;
    const double C4866 = C4860 + C3354;
    const double C26073 = C26067 + C24591;
    const double C31539 = C31535 + C30759;
    const double C39429 = C39417 + C35436;
    const double C78459 = C78455 + C74796;
    const double C85628 = C85622 + C84146;
    const double C3037 = C153761 * C347;
    const double C3603 = C2724 * C347;
    const double C11543 = C11264 * C347;
    const double C11513 = C153738 * C347;
    const double C24286 = C153761 * C347;
    const double C24840 = C153790 * C347;
    const double C35641 = C153348 * C347;
    const double C70696 = C153792 * C347;
    const double C70666 = C153738 * C347;
    const double C75001 = C153348 * C347;
    const double C83841 = C83541 * C347;
    const double C84395 = C153351 * C347;
    const double C3056 = C3014 + C3015;
    const double C24305 = C24263 + C24264;
    const double C28730 = C28723 + C28250;
    const double C35171 = C35148 + C34900;
    const double C74531 = C74508 + C74260;
    const double C83860 = C83818 + C83819;
    const double C4186 = C4156 + C3340;
    const double C25411 = C25381 + C24577;
    const double C31536 = C31529 + C28868;
    const double C36163 = C36146 + C35429;
    const double C75523 = C75506 + C74789;
    const double C84966 = C84936 + C84132;
    const double C7605 = C153761 * C528;
    const double C8124 = C2724 * C528;
    const double C15512 = C11264 * C528;
    const double C15492 = C153738 * C528;
    const double C48154 = C153761 * C528;
    const double C48673 = C153790 * C528;
    const double C59306 = C153348 * C528;
    const double C79461 = C153348 * C528;
    const double C88505 = C83541 * C528;
    const double C98895 = C153792 * C528;
    const double C98875 = C153738 * C528;
    const double C117010 = C153351 * C528;
    const double C7624 = C7585 + C6238;
    const double C48173 = C48134 + C27418;
    const double C56249 = C56244 + C31774;
    const double C58702 = C58689 + C39406;
    const double C78815 = C78788 + C78789;
    const double C92122 = C92112 + C86973;
    const double C28427 = C28417 + C28242;
    const double C35180 = C35164 + C35131;
    const double C74540 = C74524 + C74491;
    const double C29071 = C29063 + C28590;
    const double C36166 = C36154 + C35408;
    const double C75526 = C75514 + C74768;
    const double C55994 = C55991 + C31274;
    const double C62242 = C62240 + C43004;
    const double C82425 = C82423 + C78774;
    const double C152392 = C152162 * C152390;
    const double C152349 = C152335 + C152326;
    const double C152327 = C152283 + C152325;
    const double C152456 = C152269 + C152451;
    const double C152478 = ae * C152471;
    const double C152679 = C152511 * C152471;
    const double C152715 = 2 * C152471;
    const double C1371 = (C152412 + C152471 * C152537) / C151939;
    const double C152559 = C152269 + C152554;
    const double C152581 = ae * C152574;
    const double C152814 = 2 * C152574;
    const double C152742 = ae * C152741;
    const double C2995 = (3 * C152444 + C152408 * C152741) / C151939;
    const double C4149 = (C152511 * C152741) / C151939;
    const double C1807 =
        (2 * (2 * ae * C152511 * C152454 + C152162 * C152799) + C152801 +
         C152801 +
         C152162 * (C152799 + C152790 + C152790 + C152162 * C152797)) /
        C151945;
    const double C4863 = C4853 + C3357;
    const double C26070 = C26060 + C24594;
    const double C31537 = C31531 + C30760;
    const double C39419 = C39400 + C35434;
    const double C78457 = C78452 + C74794;
    const double C85625 = C85615 + C84149;
    const double C152638 = C152632 + C152637;
    const double C1376 =
        (2 * (2 * ae * (C152410 + C152468 * C152537) + C152162 * C152774) +
         C152776 + C152776 +
         C152162 * (C152774 + C152763 + C152763 + C152162 * C152770)) /
        C151945;
    const double C6235 = C2734 * C6222;
    const double C8448 = C2732 * C6222;
    const double C27415 = C23995 * C6222;
    const double C31773 = C28235 * C6222;
    const double C39404 = C151978 * C6222;
    const double C59308 = C152005 * C6222;
    const double C78795 = C74250 * C6222;
    const double C79463 = C74248 * C6222;
    const double C86970 = C152048 * C6222;
    const double C152841 = ae * C152840;
    const double C7566 = (3 * C152547 + C152511 * C152840) / C151939;
    const double C152664 = C152658 + C152663;
    const double C2999 =
        (3 * C152443 + C152408 * C152740 + C152855 + C152855 +
         C152162 * (2 * ae * (3 * C152454 + C152408 * C152722) +
                    C152162 * (3 * C152455 + C152408 * C152723))) /
        C151945;
    const double C4603 = C2732 * C4589;
    const double C28406 = C28235 * C4589;
    const double C35157 = C152005 * C4589;
    const double C35137 = C151978 * C4589;
    const double C74517 = C74248 * C4589;
    const double C74497 = C74250 * C4589;
    const double C5619 = C2732 * C5605;
    const double C28591 = C28235 * C5605;
    const double C36153 = C152005 * C5605;
    const double C36139 = C151978 * C5605;
    const double C75513 = C74248 * C5605;
    const double C75499 = C74250 * C5605;
    const double C5617 = C153761 * C4153;
    const double C26815 = C153761 * C4153;
    const double C36151 = C153348 * C4153;
    const double C44717 = C153338 * C4153;
    const double C75511 = C153348 * C4153;
    const double C86370 = C83541 * C4153;
    const double C31014 = C31009 + C28593;
    const double C36749 = C36743 + C35423;
    const double C76109 = C76103 + C74783;
    const double C31294 = C31284 + C31270;
    const double C41247 = C41243 + C37938;
    const double C80666 = C80662 + C77298;
    const double C9055 = C153761 * C6228;
    const double C49592 = C153761 * C6228;
    const double C58694 = C153348 * C6228;
    const double C67481 = C153338 * C6228;
    const double C78796 = C153348 * C6228;
    const double C90354 = C83541 * C6228;
    const double C56423 = C56420 + C31273;
    const double C60485 = C60482 + C43002;
    const double C80660 = C80650 + C78776;
    const double C7570 =
        (3 * C152546 + C152511 * C152839 + C152932 + C152932 +
         C152162 * (2 * ae * (3 * C152557 + C152511 * C152821) +
                    C152162 * (3 * C152558 + C152511 * C152822))) /
        C151945;
    const double C10395 = C2732 * C10381;
    const double C55987 = C28235 * C10381;
    const double C62237 = C151978 * C10381;
    const double C63742 = C152005 * C10381;
    const double C82420 = C74250 * C10381;
    const double C107735 = C74248 * C10381;
    const double C152396 = C152344 + C152393;
    const double C152497 = C152324 + C152490;
    const double C152600 = C152324 + C152593;
    const double C152629 = ae * C152620;
    const double C152694 = C152511 * C152620;
    const double C152754 = C152620 * C152537;
    const double C152655 = ae * C152646;
    const double C152731 = ae * C152725;
    const double C152860 = C152408 * C152725;
    const double C152890 = C152511 * C152725;
    const double C4836 = (C152741 + C152725 * C152537) / C151939;
    const double C152881 = ae * C152879;
    const double C6219 = (2 * C152800 + C152511 * C152879) / C151939;
    const double C152830 = ae * C152824;
    const double C152937 = C152511 * C152824;
    const double C152953 = C152948 + C152949;
    const double C152897 = C152895 + C152896;
    const double C152909 = ae * C152908;
    const double C28592 = C28235 * C28573;
    const double C36736 = C151978 * C28573;
    const double C76096 = C74250 * C28573;
    const double C4839 =
        (C152740 + C152723 * C152537 + C152904 + C152904 +
         C152162 *
             (2 * ae *
                  (C152722 +
                   (2 * C152616 + C152408 * (C152297 + C152361 * C152434)) *
                       C152537) +
              C152162 * (C152723 +
                         (2 * C152617 +
                          C152408 * (C152368 +
                                     (C152340 * C152341 +
                                      C152166 * bs[9] * std::pow(C152168, 9)) *
                                         C152169 * C152434)) *
                             C152537))) /
        C151945;
    const double C32086 = C28235 * C32071;
    const double C37936 = C151978 * C32071;
    const double C77296 = C74250 * C32071;
    const double C6225 =
        (2 * C152799 + C152511 * C152878 + C152916 + C152916 +
         C152162 *
             (2 * ae *
                  (2 * C152785 +
                   C152511 *
                       (C152494 + (C152297 + C152361 * C152434) * C152537)) +
              C152162 *
                  (2 * C152786 +
                   C152511 * (C152495 + (C152368 + (C152340 * C152341 +
                                                    C152166 * bs[9] *
                                                        std::pow(C152168, 9)) *
                                                       C152169 * C152434) *
                                            C152537)))) /
        C151945;
    const double C31272 = C28235 * C31242;
    const double C43000 = C151978 * C31242;
    const double C80657 = C74250 * C31242;
    const double C152967 = C152965 + C152966;
    const double C152961 = ae * C152960;
    const double C56417 = (4 * C152922 + C152511 * C152960) / C151939;
    const double C28407 = C153338 * C4592;
    const double C36519 = C153348 * C4592;
    const double C75879 = C153348 * C4592;
    const double C29055 = C153338 * C5608;
    const double C37407 = C153348 * C5608;
    const double C76767 = C153348 * C5608;
    const double C29297 = C153338 * C28382;
    const double C29435 = C153338 * C28574;
    const double C29863 = C153338 * C29036;
    const double C55988 = C153338 * C10384;
    const double C66093 = C153348 * C10384;
    const double C110086 = C153348 * C10384;
    const double C57497 = C153338 * C55978;
    const double C83586 = C152019 * C156;
    const double C83577 = C152019 * C335;
    const double C83574 = C152019 * C328;
    const double C83571 = C152019 * C155;
    const double C83568 = C152019 * C154;
    const double C83565 = C152019 * C329;
    const double C83562 = C152019 * C334;
    const double C83559 = C152019 * C333;
    const double C83556 = C152019 * C330;
    const double C83553 = C152019 * C153;
    const double C83846 = C152019 * C1230;
    const double C83828 = C152019 * C2994;
    const double C83822 = C152019 * C1231;
    const double C84166 = C152019 * C515;
    const double C84163 = C152019 * C1372;
    const double C84160 = C152019 * C3333;
    const double C84157 = C152019 * C1803;
    const double C84154 = C152019 * C989;
    const double C84151 = C152019 * C510;
    const double C84148 = C152019 * C3332;
    const double C84145 = C152019 * C1373;
    const double C84142 = C152019 * C514;
    const double C84139 = C152019 * C511;
    const double C84136 = C152019 * C988;
    const double C84133 = C152019 * C1804;
    const double C84644 = C152019 * C509;
    const double C84949 = C152019 * C4148;
    const double C85374 = C152019 * C4589;
    const double C85618 = C152019 * C4837;
    const double C86372 = C152019 * C5605;
    const double C86974 = C152019 * C2156;
    const double C86971 = C152019 * C6223;
    const double C86968 = C152019 * C6220;
    const double C88516 = C152019 * C2155;
    const double C88513 = C152019 * C6222;
    const double C89168 = C152019 * C516;
    const double C92118 = C152019 * C7565;
    const double C92115 = C152019 * C9044;
    const double C119213 = C152019 * C10381;
    const double C141 =
        (C152019 / C151946 + ((C151940 * C152048 + C83541) * ae) / C151939) /
            C151946 -
        ((C151940 * (C152048 / C151946 + (0 * ae) / C151939) + C153738) * be) /
            C151939;
    const double C11273 =
        C152019 / C151946 - ((C151940 * C152048 + C83541) * be) / C151939;
    const double C70426 =
        C152019 / C151946 + ((C151940 * C152048 + C83541) * ae) / C151939;
    const double C24031 = C23993 * C156;
    const double C24022 = C23993 * C335;
    const double C24019 = C23993 * C328;
    const double C24016 = C23993 * C155;
    const double C24013 = C23993 * C154;
    const double C24010 = C23993 * C329;
    const double C24007 = C23993 * C334;
    const double C24004 = C23993 * C333;
    const double C24001 = C23993 * C330;
    const double C23998 = C23993 * C153;
    const double C24291 = C23993 * C1230;
    const double C24273 = C23993 * C2994;
    const double C24267 = C23993 * C1231;
    const double C24611 = C23993 * C515;
    const double C24608 = C23993 * C1372;
    const double C24605 = C23993 * C3333;
    const double C24602 = C23993 * C1803;
    const double C24599 = C23993 * C989;
    const double C24596 = C23993 * C510;
    const double C24593 = C23993 * C3332;
    const double C24590 = C23993 * C1373;
    const double C24587 = C23993 * C514;
    const double C24584 = C23993 * C511;
    const double C24581 = C23993 * C988;
    const double C24578 = C23993 * C1804;
    const double C25089 = C23993 * C509;
    const double C25394 = C23993 * C4148;
    const double C25819 = C23993 * C4589;
    const double C26063 = C23993 * C4837;
    const double C26817 = C23993 * C5605;
    const double C27419 = C23993 * C2156;
    const double C27416 = C23993 * C6223;
    const double C27413 = C23993 * C6220;
    const double C47678 = C23993 * C516;
    const double C48159 = C23993 * C2155;
    const double C48141 = C23993 * C7565;
    const double C48994 = C23993 * C6222;
    const double C49595 = C23993 * C9044;
    const double C50923 = C23993 * C10381;
    const double C152021 = C152017 * be;
    const double C23991 = C151993 + (C152017 * ae) / C151939 + C151978;
    const double C152023 = C152018 / C151939;
    const double C152022 = C152016 / C151958;
    const double C152020 = C151940 * C152016;
    const double C34887 = C152016 / C151939;
    const double C3038 = C2729 * C1226;
    const double C3032 = C2729 * C321;
    const double C3026 = C2729 * C318;
    const double C3020 = C2729 * C1227;
    const double C3008 = C2729 * C320;
    const double C3002 = C2729 * C319;
    const double C3600 = C2729 * C322;
    const double C3594 = C2729 * C317;
    const double C4177 = C2729 * C1799;
    const double C4171 = C2729 * C982;
    const double C4166 = C2729 * C981;
    const double C4160 = C2729 * C1800;
    const double C4596 = C2729 * C2989;
    const double C4849 = C2729 * C3327;
    const double C4843 = C2729 * C1369;
    const double C5612 = C2729 * C4143;
    const double C7606 = C2729 * C2151;
    const double C7600 = C2729 * C502;
    const double C7594 = C2729 * C499;
    const double C7589 = C2729 * C2152;
    const double C7579 = C2729 * C501;
    const double C7573 = C2729 * C500;
    const double C8121 = C2729 * C503;
    const double C8115 = C2729 * C498;
    const double C8441 = C2729 * C1368;
    const double C9050 = C2729 * C6218;
    const double C10388 = C2729 * C7560;
    const double C19656 = C2729 * C983;
    const double C3041 = C2731 * C1225;
    const double C3034 = C2731 * C322;
    const double C3028 = C2731 * C317;
    const double C3017 = C2731 * C1226;
    const double C3010 = C2731 * C321;
    const double C3004 = C2731 * C318;
    const double C3602 = C2731 * C323;
    const double C3596 = C2731 * C316;
    const double C4179 = C2731 * C1798;
    const double C4173 = C2731 * C983;
    const double C4164 = C2731 * C982;
    const double C4158 = C2731 * C1799;
    const double C4598 = C2731 * C2990;
    const double C4851 = C2731 * C3328;
    const double C4845 = C2731 * C1368;
    const double C5614 = C2731 * C4144;
    const double C7609 = C2731 * C2150;
    const double C7602 = C2731 * C503;
    const double C7596 = C2731 * C498;
    const double C7587 = C2731 * C2151;
    const double C7581 = C2731 * C502;
    const double C7575 = C2731 * C499;
    const double C8123 = C2731 * C504;
    const double C8117 = C2731 * C497;
    const double C8443 = C2731 * C1367;
    const double C9052 = C2731 * C6217;
    const double C10390 = C2731 * C7561;
    const double C19658 = C2731 * C984;
    const double C74510 = C74247 * C2990;
    const double C74506 = C74247 * C1226;
    const double C74502 = C74247 * C321;
    const double C74498 = C74247 * C318;
    const double C74493 = C74247 * C2989;
    const double C74486 = C74247 * C1227;
    const double C74482 = C74247 * C320;
    const double C74478 = C74247 * C319;
    const double C75002 = C74247 * C1225;
    const double C74998 = C74247 * C322;
    const double C74994 = C74247 * C317;
    const double C75508 = C74247 * C4144;
    const double C75504 = C74247 * C1799;
    const double C75500 = C74247 * C982;
    const double C75496 = C74247 * C981;
    const double C75492 = C74247 * C1800;
    const double C75488 = C74247 * C4143;
    const double C75876 = C74247 * C4587;
    const double C76092 = C74247 * C4835;
    const double C76088 = C74247 * C3327;
    const double C76084 = C74247 * C1369;
    const double C76764 = C74247 * C5603;
    const double C78450 = C74247 * C3328;
    const double C78446 = C74247 * C1368;
    const double C78791 = C74247 * C6217;
    const double C78785 = C74247 * C2151;
    const double C78781 = C74247 * C502;
    const double C78777 = C74247 * C499;
    const double C78771 = C74247 * C2152;
    const double C78767 = C74247 * C6218;
    const double C78760 = C74247 * C501;
    const double C78756 = C74247 * C500;
    const double C79146 = C74247 * C1367;
    const double C79142 = C74247 * C983;
    const double C79458 = C74247 * C503;
    const double C79454 = C74247 * C498;
    const double C80652 = C74247 * C6215;
    const double C80648 = C74247 * C9042;
    const double C82414 = C74247 * C7560;
    const double C94168 = C74247 * C1798;
    const double C107729 = C74247 * C7561;
    const double C108130 = C74247 * C2150;
    const double C110083 = C74247 * C10379;
    const double C3091 = C3073 + C3013;
    const double C3088 = C3070 + C3007;
    const double C7659 = C7641 + C7584;
    const double C7656 = C7638 + C7578;
    const double C24340 = C24322 + C24262;
    const double C24337 = C24319 + C24256;
    const double C48208 = C48190 + C48133;
    const double C48205 = C48187 + C48127;
    const double C28436 = C28426 + C28402;
    const double C28435 = C28425 + C28400;
    const double C28434 = C28424 + C28398;
    const double C28433 = C28423 + C28395;
    const double C28432 = C28422 + C28392;
    const double C28431 = C28421 + C28390;
    const double C28430 = C28420 + C28388;
    const double C28429 = C28419 + C28386;
    const double C28737 = C28733 + C28722;
    const double C28736 = C28732 + C28720;
    const double C29078 = C29070 + C29051;
    const double C29077 = C29069 + C29049;
    const double C29076 = C29068 + C29046;
    const double C29075 = C29067 + C29044;
    const double C29074 = C29066 + C29042;
    const double C29073 = C29065 + C29040;
    const double C29447 = C29443 + C29433;
    const double C29446 = C29442 + C29431;
    const double C29445 = C29441 + C29429;
    const double C31016 = C31013 + C31001;
    const double C31015 = C31012 + C30997;
    const double C31303 = C31293 + C31268;
    const double C31302 = C31292 + C31265;
    const double C31301 = C31291 + C31262;
    const double C31300 = C31290 + C31260;
    const double C31299 = C31289 + C31255;
    const double C31298 = C31288 + C31253;
    const double C31297 = C31287 + C31251;
    const double C31296 = C31286 + C31249;
    const double C31295 = C31285 + C31247;
    const double C31780 = C31778 + C31771;
    const double C31779 = C31777 + C31769;
    const double C32696 = C32693 + C32686;
    const double C32695 = C32692 + C32684;
    const double C32694 = C32691 + C32680;
    const double C34025 = C34024 + C34019;
    const double C55996 = C55993 + C55982;
    const double C56760 = C56759 + C56756;
    const double C35201 = C35185 + C35145;
    const double C35199 = C35183 + C35141;
    const double C35195 = C35179 + C35129;
    const double C35193 = C35177 + C35125;
    const double C35191 = C35175 + C35121;
    const double C36182 = C36170 + C36135;
    const double C36180 = C36168 + C36131;
    const double C36753 = C36747 + C36731;
    const double C36751 = C36745 + C36727;
    const double C39439 = C39427 + C39393;
    const double C39437 = C39425 + C39389;
    const double C39434 = C39422 + C39383;
    const double C39433 = C39421 + C39381;
    const double C41249 = C41245 + C41234;
    const double C43011 = C43009 + C42999;
    const double C74561 = C74545 + C74505;
    const double C74559 = C74543 + C74501;
    const double C74555 = C74539 + C74489;
    const double C74553 = C74537 + C74485;
    const double C74551 = C74535 + C74481;
    const double C75542 = C75530 + C75495;
    const double C75540 = C75528 + C75491;
    const double C76113 = C76107 + C76091;
    const double C76111 = C76105 + C76087;
    const double C78845 = C78829 + C78784;
    const double C78843 = C78827 + C78780;
    const double C78840 = C78824 + C78770;
    const double C78838 = C78822 + C78766;
    const double C78837 = C78821 + C78763;
    const double C78835 = C78819 + C78759;
    const double C83895 = C83877 + C83817;
    const double C83892 = C83874 + C83811;
    const double C88551 = C88536 + C88489;
    const double C88550 = C88535 + C88487;
    const double C3061 = C3030 + C2748;
    const double C11554 = C11509 + C11284;
    const double C24310 = C24279 + C24009;
    const double C35649 = C35636 + C34911;
    const double C70707 = C70662 + C70437;
    const double C75009 = C74996 + C74271;
    const double C83865 = C83834 + C83564;
    const double C7629 = C7598 + C3360;
    const double C15522 = C15489 + C11797;
    const double C48178 = C48147 + C24597;
    const double C40055 = C40046 + C35866;
    const double C98905 = C98872 + C70950;
    const double C79467 = C79456 + C75226;
    const double C88526 = C88498 + C84152;
    const double C4213 = C4201 + C4163;
    const double C25438 = C25426 + C25388;
    const double C31542 = C31538 + C31525;
    const double C36185 = C36173 + C36143;
    const double C75545 = C75533 + C75503;
    const double C84993 = C84981 + C84943;
    const double C152273 = C152272 + C152259;
    const double C339 =
        (3 * (C152408 * C152217 + C152415 + C152415 + C152162 * C152422) +
         C152418 + C152418 +
         C152162 * (2 * C152422 + C152419 + C152419 +
                    C152162 * (C152411 + C152420 + C152420 +
                               C152162 * (2 * ae * C152408 * C152247 +
                                          C152162 * C152408 * C152304)))) /
        C151945;
    const double C3363 = C2734 * C990;
    const double C3849 = C2732 * C990;
    const double C11793 = C11275 * C990;
    const double C18785 = C2730 * C990;
    const double C24600 = C23995 * C990;
    const double C25086 = C23993 * C990;
    const double C30764 = C28235 * C990;
    const double C35864 = C151978 * C990;
    const double C38787 = C152005 * C990;
    const double C70946 = C70428 * C990;
    const double C75224 = C74250 * C990;
    const double C78151 = C74248 * C990;
    const double C84155 = C152048 * C990;
    const double C84641 = C152019 * C990;
    const double C520 =
        (3 * (C152511 * C152217 + C152518 + C152518 + C152162 * C152525) +
         C152521 + C152521 +
         C152162 * (2 * C152525 + C152522 + C152522 +
                    C152162 * (C152514 + C152523 + C152523 +
                               C152162 * (2 * ae * C152511 * C152247 +
                                          C152162 * C152511 * C152304)))) /
        C151945;
    const double C3064 = C3036 + C2745;
    const double C11555 = C11511 + C11512;
    const double C24313 = C24285 + C24006;
    const double C35651 = C35640 + C34913;
    const double C70708 = C70664 + C70665;
    const double C75011 = C75000 + C74273;
    const double C83868 = C83840 + C83561;
    const double C7632 = C7604 + C3373;
    const double C15523 = C15491 + C11804;
    const double C48181 = C48153 + C24610;
    const double C59312 = C59305 + C40052;
    const double C98906 = C98874 + C70957;
    const double C79469 = C79460 + C78145;
    const double C88529 = C88504 + C84165;
    const double C4872 = C4866 + C4848;
    const double C26079 = C26073 + C26055;
    const double C31543 = C31539 + C31527;
    const double C39441 = C39429 + C39397;
    const double C78463 = C78459 + C78449;
    const double C85634 = C85628 + C85610;
    const double C3074 = C3056 + C3015;
    const double C24323 = C24305 + C24264;
    const double C28734 = C28730 + C28250;
    const double C35187 = C35171 + C34900;
    const double C74547 = C74531 + C74260;
    const double C83878 = C83860 + C83819;
    const double C4198 = C4186 + C3340;
    const double C25423 = C25411 + C24577;
    const double C31540 = C31536 + C28868;
    const double C36175 = C36163 + C35429;
    const double C75535 = C75523 + C74789;
    const double C84978 = C84966 + C84132;
    const double C7642 = C7624 + C6238;
    const double C48191 = C48173 + C27418;
    const double C56251 = C56249 + C31774;
    const double C58706 = C58702 + C39406;
    const double C78831 = C78815 + C78789;
    const double C92125 = C92122 + C86973;
    const double C28437 = C28427 + C28404;
    const double C35196 = C35180 + C35132;
    const double C74556 = C74540 + C74492;
    const double C29079 = C29071 + C29053;
    const double C36178 = C36166 + C36127;
    const double C75538 = C75526 + C75487;
    const double C55997 = C55994 + C55985;
    const double C62244 = C62242 + C62234;
    const double C82427 = C82425 + C82417;
    const double C152358 = C152349 + C152326;
    const double C152328 = C152327 + C152309;
    const double C152461 = ae * C152456;
    const double C1229 = (2 * C152412 + C152408 * C152456) / C151939;
    const double C1802 = (C152511 * C152456) / C151939;
    const double C152684 = ae * C152679;
    const double C3370 = C2734 * C1371;
    const double C7895 = C2732 * C1371;
    const double C11808 = C11275 * C1371;
    const double C24607 = C23995 * C1371;
    const double C30763 = C28235 * C1371;
    const double C40050 = C151978 * C1371;
    const double C48444 = C23993 * C1371;
    const double C58103 = C152005 * C1371;
    const double C70961 = C70428 * C1371;
    const double C78149 = C74248 * C1371;
    const double C78147 = C74250 * C1371;
    const double C84162 = C152048 * C1371;
    const double C89165 = C152019 * C1371;
    const double C152564 = ae * C152559;
    const double C2154 = (2 * C152515 + C152511 * C152559) / C151939;
    const double C1234 =
        (2 * (2 * ae * (2 * C152410 + C152408 * C152454) + C152162 * C152740) +
         C152742 + C152742 +
         C152162 * (C152740 + C152727 + C152727 + C152162 * C152734)) /
        C151945;
    const double C3048 = C2732 * C2995;
    const double C3025 = C2734 * C2995;
    const double C24297 = C23993 * C2995;
    const double C24274 = C23995 * C2995;
    const double C28251 = C28235 * C2995;
    const double C35154 = C151978 * C2995;
    const double C35647 = C152005 * C2995;
    const double C74514 = C74250 * C2995;
    const double C75007 = C74248 * C2995;
    const double C83852 = C152019 * C2995;
    const double C83829 = C152048 * C2995;
    const double C4184 = C2732 * C4149;
    const double C4170 = C2734 * C4149;
    const double C25409 = C23993 * C4149;
    const double C25395 = C23995 * C4149;
    const double C28867 = C28235 * C4149;
    const double C35431 = C151978 * C4149;
    const double C35861 = C152005 * C4149;
    const double C74791 = C74250 * C4149;
    const double C75221 = C74248 * C4149;
    const double C84964 = C152019 * C4149;
    const double C84950 = C152048 * C4149;
    const double C4182 = C153761 * C1807;
    const double C13770 = C153738 * C1807;
    const double C25407 = C153761 * C1807;
    const double C39741 = C153348 * C1807;
    const double C72923 = C153738 * C1807;
    const double C84962 = C83541 * C1807;
    const double C94171 = C153348 * C1807;
    const double C4869 = C4863 + C3357;
    const double C26076 = C26070 + C24594;
    const double C31541 = C31537 + C30760;
    const double C39431 = C39419 + C35434;
    const double C78461 = C78457 + C74794;
    const double C85631 = C85625 + C84149;
    const double C8446 = C153761 * C1376;
    const double C13100 = C153738 * C1376;
    const double C48992 = C153761 * C1376;
    const double C59006 = C153348 * C1376;
    const double C72253 = C153738 * C1376;
    const double C79149 = C153348 * C1376;
    const double C88511 = C83541 * C1376;
    const double C9062 = C9054 + C6235;
    const double C49599 = C49591 + C27415;
    const double C67482 = C67480 + C31773;
    const double C58704 = C58693 + C39404;
    const double C78817 = C78794 + C78795;
    const double C90359 = C90353 + C86970;
    const double C2159 =
        (2 * (2 * ae * (2 * C152513 + C152511 * C152557) + C152162 * C152839) +
         C152841 + C152841 +
         C152162 * (C152839 + C152826 + C152826 + C152162 * C152833)) /
        C151945;
    const double C7616 = C2732 * C7566;
    const double C7593 = C2734 * C7566;
    const double C48165 = C23993 * C7566;
    const double C48142 = C23995 * C7566;
    const double C55728 = C28235 * C7566;
    const double C58699 = C151978 * C7566;
    const double C64142 = C152005 * C7566;
    const double C78800 = C74250 * C7566;
    const double C92117 = C152048 * C7566;
    const double C108135 = C74248 * C7566;
    const double C116558 = C152019 * C7566;
    const double C4601 = C153761 * C2999;
    const double C25817 = C153761 * C2999;
    const double C28726 = C153338 * C2999;
    const double C35155 = C153348 * C2999;
    const double C74515 = C153348 * C2999;
    const double C85372 = C83541 * C2999;
    const double C28418 = C28405 + C28406;
    const double C36525 = C36518 + C35137;
    const double C75885 = C75878 + C74497;
    const double C29064 = C29054 + C28591;
    const double C37413 = C37406 + C36139;
    const double C76773 = C76766 + C75499;
    const double C31017 = C31014 + C31005;
    const double C36755 = C36749 + C36735;
    const double C76115 = C76109 + C76095;
    const double C31304 = C31294 + C31271;
    const double C41251 = C41247 + C41239;
    const double C80670 = C80666 + C80655;
    const double C56424 = C56423 + C31273;
    const double C60487 = C60485 + C43002;
    const double C80664 = C80660 + C78776;
    const double C10393 = C153761 * C7570;
    const double C50921 = C153761 * C7570;
    const double C56247 = C153338 * C7570;
    const double C63739 = C153348 * C7570;
    const double C107732 = C153348 * C7570;
    const double C119211 = C83541 * C7570;
    const double C55992 = C55986 + C55987;
    const double C66097 = C66092 + C62237;
    const double C110090 = C110085 + C82420;
    const double C152397 = C152396 + C152373;
    const double C152503 = ae * C152497;
    const double C152716 = C152408 * C152497;
    const double C152787 = C152511 * C152497;
    const double C3334 = (C152456 + C152497 * C152537) / C151939;
    const double C152606 = ae * C152600;
    const double C152815 = C152511 * C152600;
    const double C152701 = ae * C152694;
    const double C152760 = C152471 + C152754;
    const double C152864 = C152859 + C152860;
    const double C152892 = ae * C152890;
    const double C4855 = C2734 * C4836;
    const double C26062 = C23995 * C4836;
    const double C31533 = C28235 * C4836;
    const double C35432 = C151978 * C4836;
    const double C74792 = C74250 * C4836;
    const double C85617 = C152048 * C4836;
    const double C3338 =
        (2 * (2 * ae * (C152454 + C152494 * C152537) + C152162 * C152878) +
         C152881 + C152881 +
         C152162 *
             (C152878 + C152882 + C152882 +
              C152162 *
                  (2 * ae *
                       (C152494 + (C152297 + C152361 * C152434) * C152537) +
                   C152162 * (C152495 + (C152368 + (C152340 * C152341 +
                                                    C152166 * bs[9] *
                                                        std::pow(C152168, 9)) *
                                                       C152169 * C152434) *
                                            C152537)))) /
        C151945;
    const double C6232 = C2734 * C6219;
    const double C27412 = C23995 * C6219;
    const double C31772 = C28235 * C6219;
    const double C39402 = C151978 * C6219;
    const double C79870 = C74250 * C6219;
    const double C86967 = C152048 * C6219;
    const double C152941 = C152936 + C152937;
    const double C152955 = ae * C152953;
    const double C9043 = (3 * C152775 + C152511 * C152953) / C151939;
    const double C152898 = ae * C152897;
    const double C28381 = (5 * C152854 + C152408 * C152897) / C151939;
    const double C29035 = (C152511 * C152897) / C151939;
    const double C5607 =
        (C152511 * C152863 + C152909 + C152909 +
         C152162 *
             (2 * ae * C152511 *
                  (3 * C152494 +
                   C152408 * (2 * C152616 +
                              C152408 * (C152297 + C152361 * C152434))) +
              C152162 * C152511 *
                  (3 * C152495 +
                   C152408 * (2 * C152617 +
                              C152408 * (C152368 + (C152340 * C152341 +
                                                    C152166 * bs[9] *
                                                        std::pow(C152168, 9)) *
                                                       C152169 * C152434))))) /
        C151945;
    const double C152968 = ae * C152967;
    const double C55977 = (5 * C152931 + C152511 * C152967) / C151939;
    const double C9046 =
        (3 * C152774 + C152511 * C152952 + C152961 + C152961 +
         C152162 *
             (2 * ae *
                  (3 * C152758 +
                   C152511 *
                       (2 * C152691 +
                        C152511 * (C152616 + C152408 * C152361 * C152537))) +
              C152162 * (3 * C152759 +
                         C152511 * (2 * C152692 +
                                    C152511 * (C152617 +
                                               C152408 *
                                                   (C152340 * C152341 +
                                                    C152166 * bs[9] *
                                                        std::pow(C152168, 9)) *
                                                   C152169 * C152537))))) /
        C151945;
    const double C56422 = C28235 * C56417;
    const double C62235 = C151978 * C56417;
    const double C82418 = C74250 * C56417;
    const double C29301 = C29300 + C29297;
    const double C29448 = C29444 + C29435;
    const double C29867 = C29866 + C29863;
    const double C57501 = C57500 + C57497;
    const double C175 = C141 * C156;
    const double C172 = C141 * C155;
    const double C360 = C141 * C335;
    const double C353 = C141 * C328;
    const double C541 = C141 * C516;
    const double C534 = C141 * C509;
    const double C1003 = C141 * C990;
    const double C1382 = C141 * C1371;
    const double C11295 = C11273 * C156;
    const double C11290 = C11273 * C155;
    const double C11286 = C11273 * C328;
    const double C11283 = C11273 * C329;
    const double C11279 = C11273 * C154;
    const double C11542 = C11273 * C335;
    const double C11525 = C11273 * C1230;
    const double C11515 = C11273 * C334;
    const double C11822 = C11273 * C516;
    const double C11818 = C11273 * C1371;
    const double C11815 = C11273 * C990;
    const double C11811 = C11273 * C509;
    const double C11807 = C11273 * C1372;
    const double C11803 = C11273 * C515;
    const double C11798 = C11273 * C510;
    const double C11794 = C11273 * C989;
    const double C12513 = C11273 * C1803;
    const double C12884 = C11273 * C2995;
    const double C13102 = C11273 * C3333;
    const double C13772 = C11273 * C4149;
    const double C14310 = C11273 * C2155;
    const double C14306 = C11273 * C6222;
    const double C17928 = C11273 * C7566;
    const double C70448 = C70426 * C156;
    const double C70443 = C70426 * C155;
    const double C70439 = C70426 * C328;
    const double C70436 = C70426 * C329;
    const double C70432 = C70426 * C154;
    const double C70695 = C70426 * C335;
    const double C70678 = C70426 * C1230;
    const double C70668 = C70426 * C334;
    const double C70975 = C70426 * C516;
    const double C70971 = C70426 * C1371;
    const double C70968 = C70426 * C990;
    const double C70964 = C70426 * C509;
    const double C70960 = C70426 * C1372;
    const double C70956 = C70426 * C515;
    const double C70951 = C70426 * C510;
    const double C70947 = C70426 * C989;
    const double C71666 = C70426 * C1803;
    const double C72037 = C70426 * C2995;
    const double C72255 = C70426 * C3333;
    const double C72925 = C70426 * C4149;
    const double C73463 = C70426 * C2155;
    const double C73459 = C70426 * C6222;
    const double C101311 = C70426 * C7566;
    const double C152025 = C152021 / C151939;
    const double C24032 = C23991 * C155;
    const double C24029 = C23991 * C328;
    const double C24026 = C23991 * C335;
    const double C24021 = C23991 * C334;
    const double C24018 = C23991 * C329;
    const double C24015 = C23991 * C154;
    const double C24014 = C23991 * C153;
    const double C24011 = C23991 * C330;
    const double C24008 = C23991 * C333;
    const double C24003 = C23991 * C332;
    const double C24000 = C23991 * C331;
    const double C23997 = C23991 * C152;
    const double C24298 = C23991 * C2994;
    const double C24288 = C23991 * C1231;
    const double C24272 = C23991 * C2993;
    const double C24270 = C23991 * C1232;
    const double C24612 = C23991 * C514;
    const double C24609 = C23991 * C1373;
    const double C24606 = C23991 * C3332;
    const double C24601 = C23991 * C1804;
    const double C24598 = C23991 * C988;
    const double C24595 = C23991 * C511;
    const double C24592 = C23991 * C3331;
    const double C24589 = C23991 * C1374;
    const double C24586 = C23991 * C513;
    const double C24585 = C23991 * C512;
    const double C24582 = C23991 * C987;
    const double C24579 = C23991 * C1805;
    const double C24845 = C23991 * C1230;
    const double C25090 = C23991 * C510;
    const double C25087 = C23991 * C989;
    const double C25084 = C23991 * C1803;
    const double C25410 = C23991 * C4148;
    const double C25393 = C23991 * C4147;
    const double C25820 = C23991 * C4590;
    const double C26064 = C23991 * C4838;
    const double C26818 = C23991 * C5606;
    const double C27420 = C23991 * C2157;
    const double C27417 = C23991 * C6224;
    const double C27414 = C23991 * C6221;
    const double C47685 = C23991 * C509;
    const double C47682 = C23991 * C516;
    const double C47677 = C23991 * C515;
    const double C48166 = C23991 * C7565;
    const double C48156 = C23991 * C2156;
    const double C48140 = C23991 * C7564;
    const double C48445 = C23991 * C1372;
    const double C48678 = C23991 * C2155;
    const double C48995 = C23991 * C6223;
    const double C49596 = C23991 * C9045;
    const double C50924 = C23991 * C10382;
    const double C125367 = C23991 * C990;
    const double C152026 = C152022 - C152023;
    const double C23992 = C152022 + (C152012 * ae) / C151939;
    const double C152024 = C152020 / C151939;
    const double C35150 = C34887 * C2990;
    const double C35146 = C34887 * C1226;
    const double C35142 = C34887 * C321;
    const double C35138 = C34887 * C318;
    const double C35133 = C34887 * C2989;
    const double C35126 = C34887 * C1227;
    const double C35122 = C34887 * C320;
    const double C35118 = C34887 * C319;
    const double C35642 = C34887 * C1225;
    const double C35638 = C34887 * C322;
    const double C35634 = C34887 * C317;
    const double C36148 = C34887 * C4144;
    const double C36144 = C34887 * C1799;
    const double C36140 = C34887 * C982;
    const double C36136 = C34887 * C981;
    const double C36132 = C34887 * C1800;
    const double C36128 = C34887 * C4143;
    const double C36516 = C34887 * C4587;
    const double C36732 = C34887 * C4835;
    const double C36728 = C34887 * C3327;
    const double C36724 = C34887 * C1369;
    const double C37404 = C34887 * C5603;
    const double C39398 = C34887 * C3328;
    const double C39394 = C34887 * C1368;
    const double C39390 = C34887 * C502;
    const double C39386 = C34887 * C499;
    const double C39384 = C34887 * C501;
    const double C39378 = C34887 * C500;
    const double C39738 = C34887 * C1798;
    const double C39734 = C34887 * C983;
    const double C40044 = C34887 * C498;
    const double C41236 = C34887 * C6215;
    const double C41231 = C34887 * C6218;
    const double C42996 = C34887 * C2152;
    const double C58691 = C34887 * C6217;
    const double C58687 = C34887 * C2151;
    const double C59003 = C34887 * C1367;
    const double C59303 = C34887 * C503;
    const double C60480 = C34887 * C9042;
    const double C62231 = C34887 * C7560;
    const double C63736 = C34887 * C7561;
    const double C64137 = C34887 * C2150;
    const double C66090 = C34887 * C10379;
    const double C3065 = C3038 + C3039;
    const double C3062 = C3032 + C2747;
    const double C3059 = C3026 + C2750;
    const double C3058 = C3020 + C3021;
    const double C3053 = C3008 + C2742;
    const double C3050 = C3002 + C2739;
    const double C3612 = C3600 + C2760;
    const double C3609 = C3594 + C2757;
    const double C4195 = C4177 + C3364;
    const double C4192 = C4171 + C3361;
    const double C4191 = C4166 + C3345;
    const double C4188 = C4160 + C3342;
    const double C4606 = C4596 + C3023;
    const double C4861 = C4849 + C3355;
    const double C4858 = C4843 + C3352;
    const double C5622 = C5612 + C4168;
    const double C7633 = C7606 + C7607;
    const double C7630 = C7600 + C3375;
    const double C7627 = C7594 + C3358;
    const double C7626 = C7589 + C6240;
    const double C7621 = C7579 + C3349;
    const double C7618 = C7573 + C3348;
    const double C8133 = C8121 + C7116;
    const double C8130 = C8115 + C3853;
    const double C8450 = C8441 + C3372;
    const double C9060 = C9050 + C6237;
    const double C10398 = C10388 + C7591;
    const double C19662 = C19656 + C3850;
    const double C3066 = C3041 + C3042;
    const double C3063 = C3034 + C2746;
    const double C3060 = C3028 + C2749;
    const double C3057 = C3017 + C3018;
    const double C3054 = C3010 + C2743;
    const double C3051 = C3004 + C2740;
    const double C3613 = C3602 + C2761;
    const double C3610 = C3596 + C2758;
    const double C4196 = C4179 + C3365;
    const double C4193 = C4173 + C3362;
    const double C4190 = C4164 + C3344;
    const double C4187 = C4158 + C3341;
    const double C4607 = C4598 + C3024;
    const double C4862 = C4851 + C3356;
    const double C4859 = C4845 + C3353;
    const double C5623 = C5614 + C4169;
    const double C7634 = C7609 + C7610;
    const double C7631 = C7602 + C3374;
    const double C7628 = C7596 + C3359;
    const double C7625 = C7587 + C6239;
    const double C7622 = C7581 + C3350;
    const double C7619 = C7575 + C3347;
    const double C8134 = C8123 + C7117;
    const double C8131 = C8117 + C3852;
    const double C8451 = C8443 + C3371;
    const double C9061 = C9052 + C6236;
    const double C10399 = C10390 + C7592;
    const double C74532 = C74510 + C74511;
    const double C74530 = C74506 + C74261;
    const double C74528 = C74502 + C74263;
    const double C74526 = C74498 + C74265;
    const double C74525 = C74493 + C74494;
    const double C74522 = C74486 + C74258;
    const double C74520 = C74482 + C74256;
    const double C74518 = C74478 + C74254;
    const double C75012 = C75002 + C74274;
    const double C75010 = C74998 + C74272;
    const double C75008 = C74994 + C74270;
    const double C75524 = C75508 + C74790;
    const double C75522 = C75504 + C74788;
    const double C75520 = C75500 + C74786;
    const double C75519 = C75496 + C74773;
    const double C75517 = C75492 + C74771;
    const double C75515 = C75488 + C74769;
    const double C75884 = C75876 + C74496;
    const double C76102 = C76092 + C74782;
    const double C76100 = C76088 + C74780;
    const double C76098 = C76084 + C74778;
    const double C76772 = C76764 + C75498;
    const double C78456 = C78450 + C74795;
    const double C78454 = C78446 + C74797;
    const double C78816 = C78791 + C78792;
    const double C78814 = C78785 + C78786;
    const double C78812 = C78781 + C74799;
    const double C78810 = C78777 + C74784;
    const double C78809 = C78771 + C77303;
    const double C78807 = C78767 + C77301;
    const double C78804 = C78760 + C74776;
    const double C78802 = C78756 + C74775;
    const double C79154 = C79146 + C78146;
    const double C79152 = C79142 + C75225;
    const double C79468 = C79458 + C78144;
    const double C79466 = C79454 + C75227;
    const double C80661 = C80652 + C77299;
    const double C80659 = C80648 + C78775;
    const double C82422 = C82414 + C78773;
    const double C94172 = C94168 + C75223;
    const double C107736 = C107729 + C78801;
    const double C108136 = C108130 + C79465;
    const double C110089 = C110083 + C82421;
    const double C28446 = C28436 * C153513;
    const double C31002 = C28436 * C153813;
    const double C44315 = C28436 * C153740;
    const double C52040 = C28436 * C47673;
    const double C130757 = C28436 * C98471;
    const double C148328 = C28436 * C153596;
    const double C28445 = C28435 * C153513;
    const double C30998 = C28435 * C153813;
    const double C44313 = C28435 * C153740;
    const double C52037 = C28435 * C47673;
    const double C67085 = C28435 * C63340;
    const double C130755 = C28435 * C98471;
    const double C134301 = C28435 * C153820;
    const double C148325 = C28435 * C153596;
    const double C28444 = C28434 * C153513;
    const double C30994 = C28434 * C153813;
    const double C44311 = C28434 * C153740;
    const double C52034 = C28434 * C47673;
    const double C67081 = C28434 * C63340;
    const double C130753 = C28434 * C98471;
    const double C134297 = C28434 * C153820;
    const double C148322 = C28434 * C153596;
    const double C28443 = C28433 * C153513;
    const double C45512 = C28433 * C153740;
    const double C131949 = C28433 * C98471;
    const double C28442 = C28432 * C153513;
    const double C32452 = C28432 * C153813;
    const double C44310 = C28432 * C153740;
    const double C53374 = C28432 * C47673;
    const double C130752 = C28432 * C98471;
    const double C149662 = C28432 * C153596;
    const double C28441 = C28431 * C153513;
    const double C30993 = C28431 * C153813;
    const double C44307 = C28431 * C153740;
    const double C52033 = C28431 * C47673;
    const double C68270 = C28431 * C63340;
    const double C130749 = C28431 * C98471;
    const double C135481 = C28431 * C153820;
    const double C148321 = C28431 * C153596;
    const double C28440 = C28430 * C153513;
    const double C30988 = C28430 * C153813;
    const double C44305 = C28430 * C153740;
    const double C52028 = C28430 * C47673;
    const double C67080 = C28430 * C63340;
    const double C130747 = C28430 * C98471;
    const double C134296 = C28430 * C153820;
    const double C148316 = C28430 * C153596;
    const double C28439 = C28429 * C153513;
    const double C30985 = C28429 * C153813;
    const double C44303 = C28429 * C153740;
    const double C52025 = C28429 * C47673;
    const double C67073 = C28429 * C63340;
    const double C130745 = C28429 * C98471;
    const double C134289 = C28429 * C153820;
    const double C148313 = C28429 * C153596;
    const double C28741 = C28737 * C153513;
    const double C31528 = C28737 * C153813;
    const double C44713 = C28737 * C153740;
    const double C52486 = C28737 * C47673;
    const double C131155 = C28737 * C98471;
    const double C148774 = C28737 * C153596;
    const double C28740 = C28736 * C153513;
    const double C31523 = C28736 * C153813;
    const double C44711 = C28736 * C153740;
    const double C52483 = C28736 * C47673;
    const double C67477 = C28736 * C63340;
    const double C131153 = C28736 * C98471;
    const double C134693 = C28736 * C153820;
    const double C148771 = C28736 * C153596;
    const double C29086 = C29078 * C153513;
    const double C30999 = C29078 * C153802;
    const double C32083 = C29078 * C153813;
    const double C44314 = C29078 * C153600;
    const double C45182 = C29078 * C153740;
    const double C52038 = C29078 * C47674;
    const double C53006 = C29078 * C47673;
    const double C67086 = C29078 * C63341;
    const double C130756 = C29078 * C153600;
    const double C131619 = C29078 * C98471;
    const double C134302 = C29078 * C153817;
    const double C148326 = C29078 * C153603;
    const double C149294 = C29078 * C153596;
    const double C29085 = C29077 * C153513;
    const double C30995 = C29077 * C153802;
    const double C32080 = C29077 * C153813;
    const double C44312 = C29077 * C153600;
    const double C45180 = C29077 * C153740;
    const double C52035 = C29077 * C47674;
    const double C53003 = C29077 * C47673;
    const double C67082 = C29077 * C63341;
    const double C67942 = C29077 * C63340;
    const double C130754 = C29077 * C153600;
    const double C131617 = C29077 * C98471;
    const double C134298 = C29077 * C153817;
    const double C135153 = C29077 * C153820;
    const double C148323 = C29077 * C153603;
    const double C149291 = C29077 * C153596;
    const double C29084 = C29076 * C153513;
    const double C30986 = C29076 * C153802;
    const double C32079 = C29076 * C153813;
    const double C44304 = C29076 * C153600;
    const double C45179 = C29076 * C153740;
    const double C52026 = C29076 * C47674;
    const double C53002 = C29076 * C47673;
    const double C67074 = C29076 * C63341;
    const double C67941 = C29076 * C63340;
    const double C130746 = C29076 * C153600;
    const double C131616 = C29076 * C98471;
    const double C134290 = C29076 * C153817;
    const double C135152 = C29076 * C153820;
    const double C148314 = C29076 * C153603;
    const double C149290 = C29076 * C153596;
    const double C29083 = C29075 * C153513;
    const double C30989 = C29075 * C153802;
    const double C32076 = C29075 * C153813;
    const double C44306 = C29075 * C153600;
    const double C45177 = C29075 * C153740;
    const double C52029 = C29075 * C47674;
    const double C52999 = C29075 * C47673;
    const double C67079 = C29075 * C63341;
    const double C69118 = C29075 * C63340;
    const double C130748 = C29075 * C153600;
    const double C131614 = C29075 * C98471;
    const double C134295 = C29075 * C153817;
    const double C136329 = C29075 * C153820;
    const double C148317 = C29075 * C153603;
    const double C149287 = C29075 * C153596;
    const double C29082 = C29074 * C153513;
    const double C30992 = C29074 * C153802;
    const double C33426 = C29074 * C153813;
    const double C44308 = C29074 * C153600;
    const double C45175 = C29074 * C153740;
    const double C52032 = C29074 * C47674;
    const double C54329 = C29074 * C47673;
    const double C68271 = C29074 * C63341;
    const double C130750 = C29074 * C153600;
    const double C131612 = C29074 * C98471;
    const double C135482 = C29074 * C153817;
    const double C148320 = C29074 * C153603;
    const double C150617 = C29074 * C153596;
    const double C29081 = C29073 * C153513;
    const double C32453 = C29073 * C153802;
    const double C44309 = C29073 * C153600;
    const double C46362 = C29073 * C153740;
    const double C53375 = C29073 * C47674;
    const double C130751 = C29073 * C153600;
    const double C132799 = C29073 * C98471;
    const double C149663 = C29073 * C153603;
    const double C29451 = C29447 * C153513;
    const double C30991 = C29447 * C153777;
    const double C33427 = C29447 * C153802;
    const double C45174 = C29447 * C153600;
    const double C45712 = C29447 * C153740;
    const double C52031 = C29447 * C153777;
    const double C54330 = C29447 * C47674;
    const double C68272 = C29447 * C63342;
    const double C131611 = C29447 * C153600;
    const double C132149 = C29447 * C98471;
    const double C135483 = C29447 * C153808;
    const double C148319 = C29447 * C116108;
    const double C150618 = C29447 * C153603;
    const double C29450 = C29446 * C153513;
    const double C30990 = C29446 * C153777;
    const double C32075 = C29446 * C153802;
    const double C32681 = C29446 * C153813;
    const double C45176 = C29446 * C153600;
    const double C45710 = C29446 * C153740;
    const double C52030 = C29446 * C153777;
    const double C52998 = C29446 * C47674;
    const double C53599 = C29446 * C47673;
    const double C67078 = C29446 * C63342;
    const double C69119 = C29446 * C63341;
    const double C131613 = C29446 * C153600;
    const double C132147 = C29446 * C98471;
    const double C134294 = C29446 * C153808;
    const double C136330 = C29446 * C153817;
    const double C148318 = C29446 * C116108;
    const double C149286 = C29446 * C153603;
    const double C149887 = C29446 * C153596;
    const double C29449 = C29445 * C153513;
    const double C30987 = C29445 * C153777;
    const double C32078 = C29445 * C153802;
    const double C32677 = C29445 * C153813;
    const double C45178 = C29445 * C153600;
    const double C45708 = C29445 * C153740;
    const double C52027 = C29445 * C153777;
    const double C53001 = C29445 * C47674;
    const double C53596 = C29445 * C47673;
    const double C67075 = C29445 * C63342;
    const double C67940 = C29445 * C63341;
    const double C68468 = C29445 * C63340;
    const double C131615 = C29445 * C153600;
    const double C132145 = C29445 * C98471;
    const double C134291 = C29445 * C153808;
    const double C135151 = C29445 * C153817;
    const double C135679 = C29445 * C153820;
    const double C148315 = C29445 * C116108;
    const double C149289 = C29445 * C153603;
    const double C149884 = C29445 * C153596;
    const double C31019 = C31016 * C153777;
    const double C32084 = C31016 * C153802;
    const double C45183 = C31016 * C153600;
    const double C52039 = C31016 * C153777;
    const double C53007 = C31016 * C47674;
    const double C67087 = C31016 * C63342;
    const double C131620 = C31016 * C153600;
    const double C134303 = C31016 * C153808;
    const double C148327 = C31016 * C116108;
    const double C149295 = C31016 * C153603;
    const double C31018 = C31015 * C153777;
    const double C32081 = C31015 * C153802;
    const double C45181 = C31015 * C153600;
    const double C52036 = C31015 * C153777;
    const double C53004 = C31015 * C47674;
    const double C67083 = C31015 * C63342;
    const double C67943 = C31015 * C63341;
    const double C131618 = C31015 * C153600;
    const double C134299 = C31015 * C153808;
    const double C135154 = C31015 * C153817;
    const double C148324 = C31015 * C116108;
    const double C149292 = C31015 * C153603;
    const double C32082 = C31303 * C153777;
    const double C53005 = C31303 * C153777;
    const double C67084 = C31303 * C153754;
    const double C67944 = C31303 * C63342;
    const double C134300 = C31303 * C153754;
    const double C135155 = C31303 * C153808;
    const double C149293 = C31303 * C116108;
    const double C32077 = C31298 * C153777;
    const double C32678 = C31298 * C153802;
    const double C45709 = C31298 * C153600;
    const double C53000 = C31298 * C153777;
    const double C53597 = C31298 * C47674;
    const double C67076 = C31298 * C153754;
    const double C67939 = C31298 * C63342;
    const double C68469 = C31298 * C63341;
    const double C132146 = C31298 * C153600;
    const double C134292 = C31298 * C153754;
    const double C135150 = C31298 * C153808;
    const double C135680 = C31298 * C153817;
    const double C149288 = C31298 * C116108;
    const double C149885 = C31298 * C153603;
    const double C32074 = C31297 * C153777;
    const double C32682 = C31297 * C153802;
    const double C45711 = C31297 * C153600;
    const double C52997 = C31297 * C153777;
    const double C53600 = C31297 * C47674;
    const double C67077 = C31297 * C153754;
    const double C69120 = C31297 * C63342;
    const double C132148 = C31297 * C153600;
    const double C134293 = C31297 * C153754;
    const double C136331 = C31297 * C153808;
    const double C149285 = C31297 * C116108;
    const double C149888 = C31297 * C153603;
    const double C33428 = C32696 * C153777;
    const double C45713 = C32696 * C153600;
    const double C54331 = C32696 * C153777;
    const double C68273 = C32696 * C153754;
    const double C132150 = C32696 * C153600;
    const double C135484 = C32696 * C153754;
    const double C150619 = C32696 * C116108;
    const double C32698 = C32695 * C153777;
    const double C53601 = C32695 * C153777;
    const double C69121 = C32695 * C153754;
    const double C136332 = C32695 * C153754;
    const double C149889 = C32695 * C116108;
    const double C32697 = C32694 * C153777;
    const double C53598 = C32694 * C153777;
    const double C67938 = C32694 * C153754;
    const double C68470 = C32694 * C63342;
    const double C135149 = C32694 * C153754;
    const double C135681 = C32694 * C153808;
    const double C149886 = C32694 * C116108;
    const double C68471 = C56760 * C153754;
    const double C135682 = C56760 * C153754;
    const double C3079 = C3061 + C2748;
    const double C11570 = C11554 + C11284;
    const double C24328 = C24310 + C24009;
    const double C35655 = C35649 + C34911;
    const double C70723 = C70707 + C70437;
    const double C75015 = C75009 + C74271;
    const double C83883 = C83865 + C83564;
    const double C7647 = C7629 + C3360;
    const double C15538 = C15522 + C11797;
    const double C48196 = C48178 + C24597;
    const double C40057 = C40055 + C35866;
    const double C98921 = C98905 + C70950;
    const double C79471 = C79467 + C75226;
    const double C88541 = C88526 + C84152;
    const double C31546 = C31542 * C153802;
    const double C44712 = C31542 * C153600;
    const double C52484 = C31542 * C47674;
    const double C67478 = C31542 * C63341;
    const double C131154 = C31542 * C153600;
    const double C134694 = C31542 * C153817;
    const double C148772 = C31542 * C153603;
    const double C152274 = ae * C152273;
    const double C157 = (4 * C152228 + C152162 * C152273 +
                         (3 * C152213 + C152162 * C152256) * ae) /
                        C151939;
    const double C327 = (C152408 * C152273) / C151939;
    const double C508 = (C152511 * C152273) / C151939;
    const double C3599 = C153761 * C339;
    const double C11534 = C153738 * C339;
    const double C12024 = C11264 * C339;
    const double C24836 = C153761 * C339;
    const double C70687 = C153738 * C339;
    const double C71177 = C153792 * C339;
    const double C84391 = C83541 * C339;
    const double C4194 = C4175 + C3363;
    const double C19663 = C19658 + C3849;
    const double C12527 = C12503 + C11793;
    const double C25419 = C25400 + C24600;
    const double C39743 = C39736 + C35864;
    const double C71680 = C71656 + C70946;
    const double C79153 = C79144 + C75224;
    const double C84974 = C84955 + C84155;
    const double C8120 = C153761 * C520;
    const double C15506 = C153738 * C520;
    const double C15960 = C11264 * C520;
    const double C48669 = C153761 * C520;
    const double C89163 = C83541 * C520;
    const double C98889 = C153738 * C520;
    const double C99343 = C153792 * C520;
    const double C3082 = C3064 + C2745;
    const double C11571 = C11555 + C11512;
    const double C24331 = C24313 + C24006;
    const double C35657 = C35651 + C34913;
    const double C70724 = C70708 + C70665;
    const double C75017 = C75011 + C74273;
    const double C83886 = C83868 + C83561;
    const double C7650 = C7632 + C3373;
    const double C15539 = C15523 + C11804;
    const double C48199 = C48181 + C24610;
    const double C59314 = C59312 + C40052;
    const double C98922 = C98906 + C70957;
    const double C79473 = C79469 + C78145;
    const double C88544 = C88529 + C84165;
    const double C31547 = C31543 * C153777;
    const double C52485 = C31543 * C153777;
    const double C67479 = C31543 * C63342;
    const double C134695 = C31543 * C153808;
    const double C148773 = C31543 * C116108;
    const double C3092 = C3074 + C3016;
    const double C24341 = C24323 + C24265;
    const double C28738 = C28734 + C28724;
    const double C35203 = C35187 + C35149;
    const double C74563 = C74547 + C74509;
    const double C83896 = C83878 + C83820;
    const double C4210 = C4198 + C4157;
    const double C25435 = C25423 + C25382;
    const double C31544 = C31540 + C31530;
    const double C36187 = C36175 + C36147;
    const double C75547 = C75535 + C75507;
    const double C84990 = C84978 + C84937;
    const double C7660 = C7642 + C7586;
    const double C48209 = C48191 + C48135;
    const double C56253 = C56251 + C56245;
    const double C58710 = C58706 + C58690;
    const double C78847 = C78831 + C78790;
    const double C92128 = C92125 + C92113;
    const double C28447 = C28437 * C153513;
    const double C44317 = C28437 * C153740;
    const double C130759 = C28437 * C98471;
    const double C29087 = C29079 * C153513;
    const double C31003 = C29079 * C153802;
    const double C44316 = C29079 * C153600;
    const double C45184 = C29079 * C153740;
    const double C52041 = C29079 * C47674;
    const double C130758 = C29079 * C153600;
    const double C131621 = C29079 * C98471;
    const double C148329 = C29079 * C153603;
    const double C152395 = C152358 + C152392;
    const double C152330 = ae * C152328;
    const double C152329 = C152162 * C152328;
    const double C152342 = 5 * C152328;
    const double C152470 = C152408 * C152328;
    const double C152573 = C152511 * C152328;
    const double C336 = (C152273 + C152328 * C152434) / C151939;
    const double C517 = (C152273 + C152328 * C152537) / C151939;
    const double C348 =
        (3 * (C152443 + C152447 + C152447 + C152162 * C152465) + C152461 +
         C152461 +
         C152162 *
             (2 * C152465 + C152462 + C152462 +
              C152162 *
                  (C152455 + C152463 + C152463 +
                   C152162 * (2 * ae * (C152247 + C152297 * C152434) +
                              C152162 * (C152304 + C152368 * C152434))))) /
        C151945;
    const double C1240 = C141 * C1229;
    const double C3045 = C2734 * C1229;
    const double C3607 = C2732 * C1229;
    const double C11548 = C11273 * C1229;
    const double C11526 = C11275 * C1229;
    const double C24294 = C23995 * C1229;
    const double C24844 = C23993 * C1229;
    const double C28253 = C28235 * C1229;
    const double C34917 = C152005 * C1229;
    const double C34915 = C151978 * C1229;
    const double C70701 = C70426 * C1229;
    const double C70679 = C70428 * C1229;
    const double C74277 = C74248 * C1229;
    const double C74275 = C74250 * C1229;
    const double C83849 = C152048 * C1229;
    const double C84399 = C152019 * C1229;
    const double C1813 = C141 * C1802;
    const double C3366 = C2734 * C1802;
    const double C3846 = C2732 * C1802;
    const double C12524 = C11273 * C1802;
    const double C12514 = C11275 * C1802;
    const double C24603 = C23995 * C1802;
    const double C25083 = C23993 * C1802;
    const double C30762 = C28235 * C1802;
    const double C35862 = C151978 * C1802;
    const double C38785 = C152005 * C1802;
    const double C71677 = C70426 * C1802;
    const double C71667 = C70428 * C1802;
    const double C75222 = C74250 * C1802;
    const double C84158 = C152048 * C1802;
    const double C84638 = C152019 * C1802;
    const double C93290 = C74248 * C1802;
    const double C997 =
        (3 * (C152671 + C152675 + C152675 + C152162 * C152688) + C152684 +
         C152684 +
         C152162 * (2 * C152688 + C152685 + C152685 +
                    C152162 * (C152678 + C152686 + C152686 +
                               C152162 * (2 * ae * C152511 * C152616 +
                                          C152162 * C152511 * C152617)))) /
        C151945;
    const double C8452 = C8445 + C3370;
    const double C13108 = C13099 + C11808;
    const double C48998 = C48991 + C24607;
    const double C59008 = C59005 + C40050;
    const double C72261 = C72252 + C70961;
    const double C79155 = C79148 + C78147;
    const double C88532 = C88510 + C84162;
    const double C529 =
        (3 * (C152546 + C152550 + C152550 + C152162 * C152568) + C152564 +
         C152564 +
         C152162 *
             (2 * C152568 + C152565 + C152565 +
              C152162 *
                  (C152558 + C152566 + C152566 +
                   C152162 * (2 * ae * (C152247 + C152297 * C152537) +
                              C152162 * (C152304 + C152368 * C152537))))) /
        C151945;
    const double C2165 = C141 * C2154;
    const double C7613 = C2734 * C2154;
    const double C8128 = C2732 * C2154;
    const double C14309 = C11275 * C2154;
    const double C15516 = C11273 * C2154;
    const double C48162 = C23995 * C2154;
    const double C48677 = C23993 * C2154;
    const double C55730 = C28235 * C2154;
    const double C59309 = C151978 * C2154;
    const double C63346 = C152005 * C2154;
    const double C73462 = C70428 * C2154;
    const double C79464 = C74250 * C2154;
    const double C88515 = C152048 * C2154;
    const double C98899 = C70426 * C2154;
    const double C107339 = C74248 * C2154;
    const double C117014 = C152019 * C2154;
    const double C3046 = C153761 * C1234;
    const double C12882 = C153738 * C1234;
    const double C24295 = C153761 * C1234;
    const double C35645 = C153348 * C1234;
    const double C72035 = C153738 * C1234;
    const double C75005 = C153348 * C1234;
    const double C83850 = C83541 * C1234;
    const double C4608 = C4600 + C3025;
    const double C25824 = C25816 + C24274;
    const double C28731 = C28725 + C28251;
    const double C35173 = C35153 + C35154;
    const double C74533 = C74513 + C74514;
    const double C85379 = C85371 + C83829;
    const double C5624 = C5616 + C4170;
    const double C26822 = C26814 + C25395;
    const double C44718 = C44716 + C28867;
    const double C36165 = C36150 + C35431;
    const double C75525 = C75510 + C74791;
    const double C86377 = C86369 + C84950;
    const double C4875 = C4869 + C4854;
    const double C26082 = C26076 + C26061;
    const double C31545 = C31541 + C31532;
    const double C39443 = C39431 + C39401;
    const double C78465 = C78461 + C78453;
    const double C85637 = C85631 + C85616;
    const double C9066 = C9062 + C6235;
    const double C49603 = C49599 + C27415;
    const double C67483 = C67482 + C31773;
    const double C58708 = C58704 + C39404;
    const double C78833 = C78817 + C78795;
    const double C90362 = C90359 + C86970;
    const double C7614 = C153761 * C2159;
    const double C17926 = C153738 * C2159;
    const double C48163 = C153761 * C2159;
    const double C64140 = C153348 * C2159;
    const double C101309 = C153738 * C2159;
    const double C108133 = C153348 * C2159;
    const double C116555 = C83541 * C2159;
    const double C10400 = C10392 + C7593;
    const double C50928 = C50920 + C48142;
    const double C56250 = C56246 + C55728;
    const double C63744 = C63738 + C58699;
    const double C107737 = C107731 + C78800;
    const double C119218 = C119210 + C92117;
    const double C28428 = C28418 + C28406;
    const double C36527 = C36525 + C35137;
    const double C75887 = C75885 + C74497;
    const double C29072 = C29064 + C28591;
    const double C37415 = C37413 + C36139;
    const double C76775 = C76773 + C75499;
    const double C31020 = C31017 * C153777;
    const double C45185 = C31017 * C153600;
    const double C52042 = C31017 * C153777;
    const double C131622 = C31017 * C153600;
    const double C148330 = C31017 * C116108;
    const double C32085 = C31304 * C153777;
    const double C53008 = C31304 * C153777;
    const double C67088 = C31304 * C153754;
    const double C134304 = C31304 * C153754;
    const double C149296 = C31304 * C116108;
    const double C56425 = C56424 + C56421;
    const double C60489 = C60487 + C60483;
    const double C80668 = C80664 + C80651;
    const double C55995 = C55992 + C55987;
    const double C66099 = C66097 + C62237;
    const double C110092 = C110090 + C82420;
    const double C152399 = ae * C152397;
    const double C152398 = C152162 * C152397;
    const double C152489 = C152397 * C152434;
    const double C152592 = C152397 * C152537;
    const double C152619 = C152408 * C152397;
    const double C152645 = C152511 * C152397;
    const double C152724 = C152715 + C152716;
    const double C152793 = ae * C152787;
    const double C3367 = C2734 * C3334;
    const double C13101 = C11275 * C3334;
    const double C24604 = C23995 * C3334;
    const double C30761 = C28235 * C3334;
    const double C40048 = C151978 * C3334;
    const double C72254 = C70428 * C3334;
    const double C79150 = C74250 * C3334;
    const double C84159 = C152048 * C3334;
    const double C152823 = C152814 + C152815;
    const double C152766 = ae * C152760;
    const double C8438 = (2 * C152679 + C152511 * C152760) / C151939;
    const double C152866 = ae * C152864;
    const double C4588 = (4 * C152741 + C152408 * C152864) / C151939;
    const double C5604 = (C152511 * C152864) / C151939;
    const double C4154 =
        (2 * (2 * ae * C152511 * C152722 + C152162 * C152889) + C152892 +
         C152892 +
         C152162 *
             (C152889 + C152893 + C152893 +
              C152162 *
                  (2 * ae * C152511 *
                       (2 * C152616 + C152408 * (C152297 + C152361 * C152434)) +
                   C152162 * C152511 *
                       (2 * C152617 +
                        C152408 * (C152368 +
                                   (C152340 * C152341 +
                                    C152166 * bs[9] * std::pow(C152168, 9)) *
                                       C152169 * C152434))))) /
        C151945;
    const double C152943 = ae * C152941;
    const double C10380 = (4 * C152840 + C152511 * C152941) / C151939;
    const double C8439 =
        (2 * (2 * ae * (2 * C152677 + C152511 * C152758) + C152162 * C152952) +
         C152955 + C152955 +
         C152162 *
             (C152952 + C152956 + C152956 +
              C152162 *
                  (2 * ae *
                       (2 * C152691 +
                        C152511 * (C152616 + C152408 * C152361 * C152537)) +
                   C152162 *
                       (2 * C152692 +
                        C152511 * (C152617 + C152408 *
                                                 (C152340 * C152341 +
                                                  C152166 * bs[9] *
                                                      std::pow(C152168, 9)) *
                                                 C152169 * C152537))))) /
        C151945;
    const double C9057 = C2734 * C9043;
    const double C49594 = C23995 * C9043;
    const double C56121 = C28235 * C9043;
    const double C58697 = C151978 * C9043;
    const double C78798 = C74250 * C9043;
    const double C92114 = C152048 * C9043;
    const double C4591 =
        (4 * C152740 + C152408 * C152863 + C152898 + C152898 +
         C152162 *
             (2 * ae *
                  (4 * C152722 +
                   C152408 *
                       (3 * C152494 +
                        C152408 * (2 * C152616 +
                                   C152408 * (C152297 + C152361 * C152434)))) +
              C152162 *
                  (4 * C152723 +
                   C152408 *
                       (3 * C152495 +
                        C152408 *
                            (2 * C152617 +
                             C152408 * (C152368 + (C152340 * C152341 +
                                                   C152166 * bs[9] *
                                                       std::pow(C152168, 9)) *
                                                      C152169 * C152434)))))) /
        C151945;
    const double C28408 = C28235 * C28381;
    const double C36520 = C151978 * C28381;
    const double C75880 = C74250 * C28381;
    const double C29056 = C28235 * C29035;
    const double C37408 = C151978 * C29035;
    const double C76768 = C74250 * C29035;
    const double C10383 =
        (4 * C152839 + C152511 * C152940 + C152968 + C152968 +
         C152162 *
             (2 * ae *
                  (4 * C152821 +
                   C152511 *
                       (3 * C152597 +
                        C152511 * (2 * C152642 +
                                   C152511 * (C152297 + C152361 * C152537)))) +
              C152162 *
                  (4 * C152822 +
                   C152511 *
                       (3 * C152598 +
                        C152511 *
                            (2 * C152643 +
                             C152511 * (C152368 + (C152340 * C152341 +
                                                   C152166 * bs[9] *
                                                       std::pow(C152168, 9)) *
                                                      C152169 * C152537)))))) /
        C151945;
    const double C55989 = C28235 * C55977;
    const double C66094 = C151978 * C55977;
    const double C110087 = C74250 * C55977;
    const double C29302 = C29301 * C153513;
    const double C29452 = C29448 * C153513;
    const double C32454 = C29448 * C153777;
    const double C46363 = C29448 * C153600;
    const double C53376 = C29448 * C153777;
    const double C132800 = C29448 * C153600;
    const double C149664 = C29448 * C116108;
    const double C29868 = C29867 * C153513;
    const double C45513 = C29867 * C153600;
    const double C131950 = C29867 * C153600;
    const double C152028 = C151993 - C152025;
    const double C83845 = C152026 * C1225;
    const double C83838 = C152026 * C322;
    const double C83832 = C152026 * C317;
    const double C83821 = C152026 * C1226;
    const double C83814 = C152026 * C321;
    const double C83808 = C152026 * C318;
    const double C84394 = C152026 * C323;
    const double C84388 = C152026 * C316;
    const double C84959 = C152026 * C1798;
    const double C84953 = C152026 * C983;
    const double C84944 = C152026 * C982;
    const double C84938 = C152026 * C1799;
    const double C85369 = C152026 * C2990;
    const double C85613 = C152026 * C3328;
    const double C85607 = C152026 * C1368;
    const double C86367 = C152026 * C4144;
    const double C88508 = C152026 * C1367;
    const double C88502 = C152026 * C503;
    const double C88496 = C152026 * C498;
    const double C88490 = C152026 * C502;
    const double C88484 = C152026 * C499;
    const double C88855 = C152026 * C984;
    const double C89160 = C152026 * C497;
    const double C90351 = C152026 * C6217;
    const double C92110 = C152026 * C2151;
    const double C116552 = C152026 * C2150;
    const double C117009 = C152026 * C504;
    const double C119208 = C152026 * C7561;
    const double C140 =
        (C152026 / C151946 + ((C152049 - C151998 / C152046) * ae) / C151939) /
            C151946 -
        ((2 * (C152048 / C151946 + (0 * ae) / C151939) -
          C151998 / (C151939 * 4 * C151955)) *
         be) /
            C151939;
    const double C11272 =
        C152026 / C151946 - ((C152049 - C151998 / C152046) * be) / C151939;
    const double C70425 =
        C152026 / C151946 + ((C152049 - C151998 / C152046) * ae) / C151939;
    const double C24290 = C23992 * C1225;
    const double C24283 = C23992 * C322;
    const double C24277 = C23992 * C317;
    const double C24266 = C23992 * C1226;
    const double C24259 = C23992 * C321;
    const double C24253 = C23992 * C318;
    const double C24839 = C23992 * C323;
    const double C24833 = C23992 * C316;
    const double C25404 = C23992 * C1798;
    const double C25398 = C23992 * C983;
    const double C25389 = C23992 * C982;
    const double C25383 = C23992 * C1799;
    const double C25814 = C23992 * C2990;
    const double C26058 = C23992 * C3328;
    const double C26052 = C23992 * C1368;
    const double C26812 = C23992 * C4144;
    const double C48158 = C23992 * C2150;
    const double C48151 = C23992 * C503;
    const double C48145 = C23992 * C498;
    const double C48136 = C23992 * C2151;
    const double C48130 = C23992 * C502;
    const double C48124 = C23992 * C499;
    const double C48672 = C23992 * C504;
    const double C48666 = C23992 * C497;
    const double C48989 = C23992 * C1367;
    const double C49589 = C23992 * C6217;
    const double C50918 = C23992 * C7561;
    const double C126240 = C23992 * C984;
    const double C152027 = C152024 + C152010;
    const double C35172 = C35150 + C35151;
    const double C35170 = C35146 + C34901;
    const double C35168 = C35142 + C34903;
    const double C35166 = C35138 + C34905;
    const double C35165 = C35133 + C35134;
    const double C35162 = C35126 + C34898;
    const double C35160 = C35122 + C34896;
    const double C35158 = C35118 + C34894;
    const double C35652 = C35642 + C34914;
    const double C35650 = C35638 + C34912;
    const double C35648 = C35634 + C34910;
    const double C36164 = C36148 + C35430;
    const double C36162 = C36144 + C35428;
    const double C36160 = C36140 + C35426;
    const double C36159 = C36136 + C35413;
    const double C36157 = C36132 + C35411;
    const double C36155 = C36128 + C35409;
    const double C36524 = C36516 + C35136;
    const double C36742 = C36732 + C35422;
    const double C36740 = C36728 + C35420;
    const double C36738 = C36724 + C35418;
    const double C37412 = C37404 + C36138;
    const double C39418 = C39398 + C35435;
    const double C39416 = C39394 + C35437;
    const double C39414 = C39390 + C35439;
    const double C39412 = C39386 + C35424;
    const double C39411 = C39384 + C35416;
    const double C39408 = C39378 + C35415;
    const double C39744 = C39738 + C35863;
    const double C39742 = C39734 + C35865;
    const double C40054 = C40044 + C35867;
    const double C41242 = C41236 + C37939;
    const double C41240 = C41231 + C37941;
    const double C43006 = C42996 + C37943;
    const double C58703 = C58691 + C39405;
    const double C58701 = C58687 + C39407;
    const double C59007 = C59003 + C40051;
    const double C59311 = C59303 + C40053;
    const double C60484 = C60480 + C43003;
    const double C62239 = C62231 + C43005;
    const double C63743 = C63736 + C58700;
    const double C64143 = C64137 + C59310;
    const double C66096 = C66090 + C62238;
    const double C3083 = C3065 + C3039;
    const double C3080 = C3062 + C2747;
    const double C3077 = C3059 + C2750;
    const double C3076 = C3058 + C3021;
    const double C3071 = C3053 + C2742;
    const double C3068 = C3050 + C2739;
    const double C3618 = C3612 + C2760;
    const double C3615 = C3609 + C2757;
    const double C4207 = C4195 + C3364;
    const double C4204 = C4192 + C3361;
    const double C4203 = C4191 + C3345;
    const double C4200 = C4188 + C3342;
    const double C4610 = C4606 + C3023;
    const double C4867 = C4861 + C3355;
    const double C4864 = C4858 + C3352;
    const double C5626 = C5622 + C4168;
    const double C7651 = C7633 + C7607;
    const double C7648 = C7630 + C3375;
    const double C7645 = C7627 + C3358;
    const double C7644 = C7626 + C6240;
    const double C7639 = C7621 + C3349;
    const double C7636 = C7618 + C3348;
    const double C8139 = C8133 + C7116;
    const double C8136 = C8130 + C3853;
    const double C8453 = C8450 + C3372;
    const double C9064 = C9060 + C6237;
    const double C10401 = C10398 + C7591;
    const double C19665 = C19662 + C3850;
    const double C3084 = C3066 + C3042;
    const double C3081 = C3063 + C2746;
    const double C3078 = C3060 + C2749;
    const double C3075 = C3057 + C3018;
    const double C3072 = C3054 + C2743;
    const double C3069 = C3051 + C2740;
    const double C3619 = C3613 + C2761;
    const double C3616 = C3610 + C2758;
    const double C4208 = C4196 + C3365;
    const double C4205 = C4193 + C3362;
    const double C4202 = C4190 + C3344;
    const double C4199 = C4187 + C3341;
    const double C4611 = C4607 + C3024;
    const double C4868 = C4862 + C3356;
    const double C4865 = C4859 + C3353;
    const double C5627 = C5623 + C4169;
    const double C7652 = C7634 + C7610;
    const double C7649 = C7631 + C3374;
    const double C7646 = C7628 + C3359;
    const double C7643 = C7625 + C6239;
    const double C7640 = C7622 + C3350;
    const double C7637 = C7619 + C3347;
    const double C8140 = C8134 + C7117;
    const double C8137 = C8131 + C3852;
    const double C8454 = C8451 + C3371;
    const double C9065 = C9061 + C6236;
    const double C10402 = C10399 + C7592;
    const double C74548 = C74532 + C74511;
    const double C74546 = C74530 + C74261;
    const double C74544 = C74528 + C74263;
    const double C74542 = C74526 + C74265;
    const double C74541 = C74525 + C74494;
    const double C74538 = C74522 + C74258;
    const double C74536 = C74520 + C74256;
    const double C74534 = C74518 + C74254;
    const double C75018 = C75012 + C74274;
    const double C75016 = C75010 + C74272;
    const double C75014 = C75008 + C74270;
    const double C75536 = C75524 + C74790;
    const double C75534 = C75522 + C74788;
    const double C75532 = C75520 + C74786;
    const double C75531 = C75519 + C74773;
    const double C75529 = C75517 + C74771;
    const double C75527 = C75515 + C74769;
    const double C75886 = C75884 + C74496;
    const double C76108 = C76102 + C74782;
    const double C76106 = C76100 + C74780;
    const double C76104 = C76098 + C74778;
    const double C76774 = C76772 + C75498;
    const double C78460 = C78456 + C74795;
    const double C78458 = C78454 + C74797;
    const double C78832 = C78816 + C78792;
    const double C78830 = C78814 + C78786;
    const double C78828 = C78812 + C74799;
    const double C78826 = C78810 + C74784;
    const double C78825 = C78809 + C77303;
    const double C78823 = C78807 + C77301;
    const double C78820 = C78804 + C74776;
    const double C78818 = C78802 + C74775;
    const double C79158 = C79154 + C78146;
    const double C79156 = C79152 + C75225;
    const double C79472 = C79468 + C78144;
    const double C79470 = C79466 + C75227;
    const double C80665 = C80661 + C77299;
    const double C80663 = C80659 + C78775;
    const double C82424 = C82422 + C78773;
    const double C94174 = C94172 + C75223;
    const double C107738 = C107736 + C78801;
    const double C108138 = C108136 + C79465;
    const double C110091 = C110089 + C82421;
    const double C31010 = C30999 + C30998;
    const double C44322 = C44314 + C44313;
    const double C52044 = C52038 + C52037;
    const double C130764 = C130756 + C130755;
    const double C148332 = C148326 + C148325;
    const double C31006 = C30988 + C30989;
    const double C44319 = C44305 + C44306;
    const double C52043 = C52028 + C52029;
    const double C130761 = C130747 + C130748;
    const double C148331 = C148316 + C148317;
    const double C32451 = C30992 + C30993;
    const double C44320 = C44307 + C44308;
    const double C45511 = C44308 + C44307;
    const double C53373 = C52032 + C52033;
    const double C130762 = C130749 + C130750;
    const double C131948 = C130750 + C130749;
    const double C149661 = C148320 + C148321;
    const double C45510 = C44309 + C44310;
    const double C131947 = C130751 + C130752;
    const double C46360 = C45174 + C45175;
    const double C132797 = C131611 + C131612;
    const double C33425 = C32075 + C32076;
    const double C46361 = C45176 + C45177;
    const double C54328 = C52998 + C52999;
    const double C132798 = C131613 + C131614;
    const double C150616 = C149286 + C149287;
    const double C3097 = C3079 + C3031;
    const double C11586 = C11570 + C11510;
    const double C24346 = C24328 + C24280;
    const double C35661 = C35655 + C35637;
    const double C70739 = C70723 + C70663;
    const double C75021 = C75015 + C74997;
    const double C83901 = C83883 + C83835;
    const double C7665 = C7647 + C7599;
    const double C15554 = C15538 + C15490;
    const double C48214 = C48196 + C48148;
    const double C40059 = C40057 + C40047;
    const double C98937 = C98921 + C98873;
    const double C79475 = C79471 + C79457;
    const double C88556 = C88541 + C88499;
    const double C165 =
        (4 * (2 * C152222 + C152226 + C152226 + C152162 * C152265) + C152274 +
         C152274 +
         C152162 *
             (3 * C152265 + C152271 + C152271 +
              C152162 * (2 * C152261 + C152267 + C152267 +
                         C152162 * (C152254 + C152260 + C152260 +
                                    C152162 * (2 * ae * C152247 +
                                               C152162 *
                                                   (C152234 * C152235 +
                                                    C152166 * bs[7] *
                                                        std::pow(C152168, 7)) *
                                                   C152169))))) /
        C151945;
    const double C182 = C141 * C157;
    const double C174 = C143 * C157;
    const double C2769 = C2734 * C157;
    const double C11306 = C11273 * C157;
    const double C11296 = C11275 * C157;
    const double C24030 = C23995 * C157;
    const double C70459 = C70426 * C157;
    const double C70449 = C70428 * C157;
    const double C83585 = C152048 * C157;
    const double C365 = C141 * C327;
    const double C352 = C143 * C327;
    const double C2767 = C2732 * C327;
    const double C2759 = C2734 * C327;
    const double C11299 = C11273 * C327;
    const double C11285 = C11275 * C327;
    const double C24028 = C23993 * C327;
    const double C24020 = C23995 * C327;
    const double C34920 = C151978 * C327;
    const double C70452 = C70426 * C327;
    const double C70438 = C70428 * C327;
    const double C74280 = C74250 * C327;
    const double C83583 = C152019 * C327;
    const double C83575 = C152048 * C327;
    const double C546 = C141 * C508;
    const double C533 = C143 * C508;
    const double C3851 = C2734 * C508;
    const double C7123 = C2732 * C508;
    const double C11812 = C11275 * C508;
    const double C12242 = C11273 * C508;
    const double C25088 = C23995 * C508;
    const double C38788 = C151978 * C508;
    const double C47684 = C23993 * C508;
    const double C70965 = C70428 * C508;
    const double C71395 = C70426 * C508;
    const double C78154 = C74250 * C508;
    const double C84643 = C152048 * C508;
    const double C87900 = C152019 * C508;
    const double C4206 = C4194 + C3363;
    const double C19666 = C19663 + C3849;
    const double C12535 = C12527 + C11793;
    const double C25431 = C25419 + C24600;
    const double C39747 = C39743 + C35864;
    const double C71688 = C71680 + C70946;
    const double C79157 = C79153 + C75224;
    const double C84986 = C84974 + C84155;
    const double C3100 = C3082 + C3037;
    const double C11587 = C11571 + C11513;
    const double C24349 = C24331 + C24286;
    const double C35663 = C35657 + C35641;
    const double C70740 = C70724 + C70666;
    const double C75023 = C75017 + C75001;
    const double C83904 = C83886 + C83841;
    const double C7668 = C7650 + C7605;
    const double C15555 = C15539 + C15492;
    const double C48217 = C48199 + C48154;
    const double C59316 = C59314 + C59306;
    const double C98938 = C98922 + C98875;
    const double C79477 = C79473 + C79461;
    const double C88559 = C88544 + C88505;
    const double C28742 = C28738 * C153513;
    const double C44715 = C28738 * C153740;
    const double C131157 = C28738 * C98471;
    const double C31548 = C31544 * C153802;
    const double C44714 = C31544 * C153600;
    const double C52487 = C31544 * C47674;
    const double C131156 = C31544 * C153600;
    const double C148775 = C31544 * C153603;
    const double C44321 = C44316 + C44315;
    const double C130763 = C130758 + C130757;
    const double C152331 = C152282 + C152329;
    const double C152477 = ae * C152470;
    const double C991 = (C152511 * C152470) / C151939;
    const double C152580 = ae * C152573;
    const double C368 = C141 * C336;
    const double C361 = C143 * C336;
    const double C2764 = C2732 * C336;
    const double C2762 = C2734 * C336;
    const double C11545 = C11275 * C336;
    const double C12028 = C11273 * C336;
    const double C24025 = C23993 * C336;
    const double C24023 = C23995 * C336;
    const double C34918 = C151978 * C336;
    const double C70698 = C70428 * C336;
    const double C71181 = C70426 * C336;
    const double C74278 = C74250 * C336;
    const double C83580 = C152019 * C336;
    const double C83578 = C152048 * C336;
    const double C549 = C141 * C517;
    const double C542 = C143 * C517;
    const double C7120 = C2732 * C517;
    const double C7118 = C2734 * C517;
    const double C11821 = C11275 * C517;
    const double C15964 = C11273 * C517;
    const double C47681 = C23993 * C517;
    const double C47679 = C23995 * C517;
    const double C58104 = C151978 * C517;
    const double C70974 = C70428 * C517;
    const double C78152 = C74250 * C517;
    const double C89167 = C152048 * C517;
    const double C99347 = C70426 * C517;
    const double C116111 = C152019 * C517;
    const double C3605 = C153761 * C348;
    const double C11546 = C153738 * C348;
    const double C24842 = C153761 * C348;
    const double C70699 = C153738 * C348;
    const double C84397 = C83541 * C348;
    const double C3067 = C3044 + C3045;
    const double C12890 = C12881 + C11526;
    const double C24316 = C24293 + C24294;
    const double C35653 = C35644 + C34915;
    const double C72043 = C72034 + C70679;
    const double C75013 = C75004 + C74275;
    const double C83871 = C83848 + C83849;
    const double C4197 = C4181 + C3366;
    const double C13778 = C13769 + C12514;
    const double C25422 = C25406 + C24603;
    const double C39745 = C39740 + C35862;
    const double C72931 = C72922 + C71667;
    const double C94173 = C94170 + C75222;
    const double C84977 = C84961 + C84158;
    const double C12522 = C153738 * C997;
    const double C19661 = C153761 * C997;
    const double C71675 = C153738 * C997;
    const double C88858 = C83541 * C997;
    const double C126243 = C153761 * C997;
    const double C8455 = C8452 + C3370;
    const double C13112 = C13108 + C11808;
    const double C49001 = C48998 + C24607;
    const double C59010 = C59008 + C40050;
    const double C72265 = C72261 + C70961;
    const double C79159 = C79155 + C78147;
    const double C88547 = C88532 + C84162;
    const double C8126 = C153761 * C529;
    const double C15514 = C153738 * C529;
    const double C48675 = C153761 * C529;
    const double C98897 = C153738 * C529;
    const double C117012 = C83541 * C529;
    const double C7635 = C7612 + C7613;
    const double C17934 = C17925 + C14309;
    const double C48184 = C48161 + C48162;
    const double C64144 = C64139 + C59309;
    const double C101317 = C101308 + C73462;
    const double C108137 = C108132 + C79464;
    const double C116563 = C116554 + C88515;
    const double C4612 = C4608 + C3025;
    const double C25828 = C25824 + C24274;
    const double C28735 = C28731 + C28251;
    const double C35189 = C35173 + C35154;
    const double C74549 = C74533 + C74514;
    const double C85383 = C85379 + C83829;
    const double C5628 = C5624 + C4170;
    const double C26826 = C26822 + C25395;
    const double C44719 = C44718 + C28867;
    const double C36177 = C36165 + C35431;
    const double C75537 = C75525 + C74791;
    const double C86381 = C86377 + C84950;
    const double C31549 = C31545 * C153777;
    const double C52488 = C31545 * C153777;
    const double C148776 = C31545 * C116108;
    const double C9069 = C9066 + C9055;
    const double C49606 = C49603 + C49592;
    const double C67484 = C67483 + C67481;
    const double C58712 = C58708 + C58694;
    const double C78849 = C78833 + C78796;
    const double C90365 = C90362 + C90354;
    const double C10403 = C10400 + C7593;
    const double C50931 = C50928 + C48142;
    const double C56252 = C56250 + C55728;
    const double C63746 = C63744 + C58699;
    const double C107739 = C107737 + C78800;
    const double C119221 = C119218 + C92117;
    const double C28438 = C28428 + C28407;
    const double C36529 = C36527 + C36519;
    const double C75889 = C75887 + C75879;
    const double C29080 = C29072 + C29055;
    const double C37417 = C37415 + C37407;
    const double C76777 = C76775 + C76767;
    const double C67945 = C56425 * C153754;
    const double C135156 = C56425 * C153754;
    const double C55998 = C55995 + C55988;
    const double C66101 = C66099 + C66093;
    const double C110094 = C110092 + C110086;
    const double C152400 = C152343 + C152398;
    const double C152496 = C152328 + C152489;
    const double C152599 = C152328 + C152592;
    const double C152628 = ae * C152619;
    const double C152693 = C152511 * C152619;
    const double C1370 = (C152470 + C152619 * C152537) / C151939;
    const double C152654 = ae * C152645;
    const double C152730 = ae * C152724;
    const double C2996 = (3 * C152456 + C152408 * C152724) / C151939;
    const double C4150 = (C152511 * C152724) / C151939;
    const double C1806 =
        (3 * (C152511 * C152455 + C152790 + C152790 + C152162 * C152797) +
         C152793 + C152793 +
         C152162 *
             (2 * C152797 + C152794 + C152794 +
              C152162 *
                  (C152786 + C152795 + C152795 +
                   C152162 * (2 * ae * C152511 * (C152297 + C152361 * C152434) +
                              C152162 * C152511 *
                                  (C152368 +
                                   (C152340 * C152341 +
                                    C152166 * bs[9] * std::pow(C152168, 9)) *
                                       C152169 * C152434))))) /
        C151945;
    const double C152829 = ae * C152823;
    const double C7567 = (3 * C152559 + C152511 * C152823) / C151939;
    const double C1375 =
        (3 * (C152411 + C152469 * C152537 + C152763 + C152763 +
              C152162 * C152770) +
         C152766 + C152766 +
         C152162 *
             (2 * C152770 + C152767 + C152767 +
              C152162 *
                  (C152759 + C152768 + C152768 +
                   C152162 *
                       (2 * ae * (C152616 + C152408 * C152361 * C152537) +
                        C152162 * (C152617 + C152408 *
                                                 (C152340 * C152341 +
                                                  C152166 * bs[9] *
                                                      std::pow(C152168, 9)) *
                                                 C152169 * C152537))))) /
        C151945;
    const double C8447 = C2734 * C8438;
    const double C14305 = C11275 * C8438;
    const double C48993 = C23995 * C8438;
    const double C59307 = C151978 * C8438;
    const double C66878 = C28235 * C8438;
    const double C73458 = C70428 * C8438;
    const double C79462 = C74250 * C8438;
    const double C88512 = C152048 * C8438;
    const double C3000 =
        (2 * (2 * ae * (3 * C152454 + C152408 * C152722) + C152162 * C152863) +
         C152866 + C152866 +
         C152162 *
             (C152863 + C152867 + C152867 +
              C152162 *
                  (2 * ae *
                       (3 * C152494 +
                        C152408 * (2 * C152616 +
                                   C152408 * (C152297 + C152361 * C152434))) +
                   C152162 *
                       (3 * C152495 +
                        C152408 *
                            (2 * C152617 +
                             C152408 * (C152368 + (C152340 * C152341 +
                                                   C152166 * bs[9] *
                                                       std::pow(C152168, 9)) *
                                                      C152169 * C152434)))))) /
        C151945;
    const double C4602 = C2734 * C4588;
    const double C25818 = C23995 * C4588;
    const double C28727 = C28235 * C4588;
    const double C35156 = C151978 * C4588;
    const double C74516 = C74250 * C4588;
    const double C85373 = C152048 * C4588;
    const double C5618 = C2734 * C5604;
    const double C26816 = C23995 * C5604;
    const double C28866 = C28235 * C5604;
    const double C36152 = C151978 * C5604;
    const double C75512 = C74250 * C5604;
    const double C86371 = C152048 * C5604;
    const double C7571 =
        (2 * (2 * ae * (3 * C152557 + C152511 * C152821) + C152162 * C152940) +
         C152943 + C152943 +
         C152162 *
             (C152940 + C152944 + C152944 +
              C152162 *
                  (2 * ae *
                       (3 * C152597 +
                        C152511 * (2 * C152642 +
                                   C152511 * (C152297 + C152361 * C152537))) +
                   C152162 *
                       (3 * C152598 +
                        C152511 *
                            (2 * C152643 +
                             C152511 * (C152368 + (C152340 * C152341 +
                                                   C152166 * bs[9] *
                                                       std::pow(C152168, 9)) *
                                                      C152169 * C152537)))))) /
        C151945;
    const double C10394 = C2734 * C10380;
    const double C50922 = C23995 * C10380;
    const double C56248 = C28235 * C10380;
    const double C63741 = C151978 * C10380;
    const double C107734 = C74250 * C10380;
    const double C119212 = C152048 * C10380;
    const double C152030 = C152028 + C151978;
    const double C83870 = C83845 + C83846;
    const double C83867 = C83838 + C83562;
    const double C83864 = C83832 + C83565;
    const double C83861 = C83821 + C83822;
    const double C83858 = C83814 + C83559;
    const double C83855 = C83808 + C83556;
    const double C84405 = C84394 + C83577;
    const double C84402 = C84388 + C83574;
    const double C84976 = C84959 + C84157;
    const double C84973 = C84953 + C84154;
    const double C84970 = C84944 + C84136;
    const double C84967 = C84938 + C84133;
    const double C85378 = C85369 + C83828;
    const double C85624 = C85613 + C84148;
    const double C85621 = C85607 + C84145;
    const double C86376 = C86367 + C84949;
    const double C88531 = C88508 + C84163;
    const double C88528 = C88502 + C84166;
    const double C88525 = C88496 + C84151;
    const double C88522 = C88490 + C84142;
    const double C88519 = C88484 + C84139;
    const double C88860 = C88855 + C84641;
    const double C89171 = C89160 + C84644;
    const double C90358 = C90351 + C86971;
    const double C92121 = C92110 + C86974;
    const double C116562 = C116552 + C88516;
    const double C117017 = C117009 + C89168;
    const double C119217 = C119208 + C92118;
    const double C11541 = C11272 * C323;
    const double C11531 = C11272 * C316;
    const double C11514 = C11272 * C322;
    const double C11507 = C11272 * C317;
    const double C12023 = C11272 * C315;
    const double C12519 = C11272 * C984;
    const double C12505 = C11272 * C983;
    const double C12879 = C11272 * C1225;
    const double C13097 = C11272 * C1367;
    const double C13767 = C11272 * C1798;
    const double C15511 = C11272 * C504;
    const double C15503 = C11272 * C497;
    const double C15493 = C11272 * C503;
    const double C15487 = C11272 * C498;
    const double C15959 = C11272 * C496;
    const double C17923 = C11272 * C2150;
    const double C70694 = C70425 * C323;
    const double C70684 = C70425 * C316;
    const double C70667 = C70425 * C322;
    const double C70660 = C70425 * C317;
    const double C71176 = C70425 * C315;
    const double C71672 = C70425 * C984;
    const double C71658 = C70425 * C983;
    const double C72032 = C70425 * C1225;
    const double C72250 = C70425 * C1367;
    const double C72920 = C70425 * C1798;
    const double C98894 = C70425 * C504;
    const double C98886 = C70425 * C497;
    const double C98876 = C70425 * C503;
    const double C98870 = C70425 * C498;
    const double C99342 = C70425 * C496;
    const double C101306 = C70425 * C2150;
    const double C24315 = C24290 + C24291;
    const double C24312 = C24283 + C24007;
    const double C24309 = C24277 + C24010;
    const double C24306 = C24266 + C24267;
    const double C24303 = C24259 + C24004;
    const double C24300 = C24253 + C24001;
    const double C24850 = C24839 + C24022;
    const double C24847 = C24833 + C24019;
    const double C25421 = C25404 + C24602;
    const double C25418 = C25398 + C24599;
    const double C25415 = C25389 + C24581;
    const double C25412 = C25383 + C24578;
    const double C25823 = C25814 + C24273;
    const double C26069 = C26058 + C24593;
    const double C26066 = C26052 + C24590;
    const double C26821 = C26812 + C25394;
    const double C48183 = C48158 + C48159;
    const double C48180 = C48151 + C24611;
    const double C48177 = C48145 + C24596;
    const double C48174 = C48136 + C27419;
    const double C48171 = C48130 + C24587;
    const double C48168 = C48124 + C24584;
    const double C48683 = C48672 + C47678;
    const double C48680 = C48666 + C25089;
    const double C48997 = C48989 + C24608;
    const double C49598 = C49589 + C27416;
    const double C50927 = C50918 + C48141;
    const double C126245 = C126240 + C25086;
    const double C152029 = C152027 * be;
    const double C23990 = C151968 + (C152027 * ae) / C151939 - C152000;
    const double C35188 = C35172 + C35151;
    const double C35186 = C35170 + C34901;
    const double C35184 = C35168 + C34903;
    const double C35182 = C35166 + C34905;
    const double C35181 = C35165 + C35134;
    const double C35178 = C35162 + C34898;
    const double C35176 = C35160 + C34896;
    const double C35174 = C35158 + C34894;
    const double C35658 = C35652 + C34914;
    const double C35656 = C35650 + C34912;
    const double C35654 = C35648 + C34910;
    const double C36176 = C36164 + C35430;
    const double C36174 = C36162 + C35428;
    const double C36172 = C36160 + C35426;
    const double C36171 = C36159 + C35413;
    const double C36169 = C36157 + C35411;
    const double C36167 = C36155 + C35409;
    const double C36526 = C36524 + C35136;
    const double C36748 = C36742 + C35422;
    const double C36746 = C36740 + C35420;
    const double C36744 = C36738 + C35418;
    const double C37414 = C37412 + C36138;
    const double C39430 = C39418 + C35435;
    const double C39428 = C39416 + C35437;
    const double C39426 = C39414 + C35439;
    const double C39424 = C39412 + C35424;
    const double C39423 = C39411 + C35416;
    const double C39420 = C39408 + C35415;
    const double C39748 = C39744 + C35863;
    const double C39746 = C39742 + C35865;
    const double C40056 = C40054 + C35867;
    const double C41246 = C41242 + C37939;
    const double C41244 = C41240 + C37941;
    const double C43008 = C43006 + C37943;
    const double C58707 = C58703 + C39405;
    const double C58705 = C58701 + C39407;
    const double C59009 = C59007 + C40051;
    const double C59313 = C59311 + C40053;
    const double C60486 = C60484 + C43003;
    const double C62241 = C62239 + C43005;
    const double C63745 = C63743 + C58700;
    const double C64145 = C64143 + C59310;
    const double C66098 = C66096 + C62238;
    const double C3101 = C3083 + C3040;
    const double C3098 = C3080 + C3033;
    const double C3095 = C3077 + C3027;
    const double C3094 = C3076 + C3022;
    const double C3089 = C3071 + C3009;
    const double C3086 = C3068 + C3003;
    const double C3624 = C3618 + C3601;
    const double C3621 = C3615 + C3595;
    const double C4219 = C4207 + C4178;
    const double C4216 = C4204 + C4172;
    const double C4215 = C4203 + C4167;
    const double C4212 = C4200 + C4161;
    const double C4613 = C4610 + C4597;
    const double C4873 = C4867 + C4850;
    const double C4870 = C4864 + C4844;
    const double C5629 = C5626 + C5613;
    const double C7669 = C7651 + C7608;
    const double C7666 = C7648 + C7601;
    const double C7663 = C7645 + C7595;
    const double C7662 = C7644 + C7590;
    const double C7657 = C7639 + C7580;
    const double C7654 = C7636 + C7574;
    const double C8145 = C8139 + C8122;
    const double C8142 = C8136 + C8116;
    const double C8456 = C8453 + C8442;
    const double C9067 = C9064 + C9051;
    const double C10404 = C10401 + C10389;
    const double C19668 = C19665 + C19657;
    const double C3102 = C3084 + C3043;
    const double C3099 = C3081 + C3035;
    const double C3096 = C3078 + C3029;
    const double C3093 = C3075 + C3019;
    const double C3090 = C3072 + C3011;
    const double C3087 = C3069 + C3005;
    const double C3625 = C3619 + C3603;
    const double C3622 = C3616 + C3597;
    const double C4220 = C4208 + C4180;
    const double C4217 = C4205 + C4174;
    const double C4214 = C4202 + C4165;
    const double C4211 = C4199 + C4159;
    const double C4614 = C4611 + C4599;
    const double C4874 = C4868 + C4852;
    const double C4871 = C4865 + C4846;
    const double C5630 = C5627 + C5615;
    const double C7670 = C7652 + C7611;
    const double C7667 = C7649 + C7603;
    const double C7664 = C7646 + C7597;
    const double C7661 = C7643 + C7588;
    const double C7658 = C7640 + C7582;
    const double C7655 = C7637 + C7576;
    const double C8146 = C8140 + C8124;
    const double C8143 = C8137 + C8118;
    const double C8457 = C8454 + C8444;
    const double C9068 = C9065 + C9053;
    const double C10405 = C10402 + C10391;
    const double C74564 = C74548 + C74512;
    const double C74562 = C74546 + C74507;
    const double C74560 = C74544 + C74503;
    const double C74558 = C74542 + C74499;
    const double C74557 = C74541 + C74495;
    const double C74554 = C74538 + C74487;
    const double C74552 = C74536 + C74483;
    const double C74550 = C74534 + C74479;
    const double C75024 = C75018 + C75003;
    const double C75022 = C75016 + C74999;
    const double C75020 = C75014 + C74995;
    const double C75548 = C75536 + C75509;
    const double C75546 = C75534 + C75505;
    const double C75544 = C75532 + C75501;
    const double C75543 = C75531 + C75497;
    const double C75541 = C75529 + C75493;
    const double C75539 = C75527 + C75489;
    const double C75888 = C75886 + C75877;
    const double C76114 = C76108 + C76093;
    const double C76112 = C76106 + C76089;
    const double C76110 = C76104 + C76085;
    const double C76776 = C76774 + C76765;
    const double C78464 = C78460 + C78451;
    const double C78462 = C78458 + C78447;
    const double C78848 = C78832 + C78793;
    const double C78846 = C78830 + C78787;
    const double C78844 = C78828 + C78782;
    const double C78842 = C78826 + C78778;
    const double C78841 = C78825 + C78772;
    const double C78839 = C78823 + C78768;
    const double C78836 = C78820 + C78761;
    const double C78834 = C78818 + C78757;
    const double C79162 = C79158 + C79147;
    const double C79160 = C79156 + C79143;
    const double C79476 = C79472 + C79459;
    const double C79474 = C79470 + C79455;
    const double C80669 = C80665 + C80653;
    const double C80667 = C80663 + C80649;
    const double C82426 = C82424 + C82415;
    const double C94176 = C94174 + C94169;
    const double C107740 = C107738 + C107730;
    const double C108140 = C108138 + C108131;
    const double C110093 = C110091 + C110084;
    const double C31021 = C31019 + C31010;
    const double C52046 = C52039 + C52044;
    const double C148334 = C148327 + C148332;
    const double C31011 = C31006 + C30990;
    const double C52045 = C52043 + C52030;
    const double C148333 = C148331 + C148318;
    const double C32455 = C30991 + C32451;
    const double C53377 = C52031 + C53373;
    const double C149665 = C148319 + C149661;
    const double C33429 = C32074 + C33425;
    const double C54332 = C52997 + C54328;
    const double C150620 = C149285 + C150616;
    const double C3611 = C3598 + C2759;
    const double C11562 = C11533 + C11285;
    const double C24848 = C24835 + C24020;
    const double C70715 = C70686 + C70438;
    const double C84403 = C84390 + C83575;
    const double C8132 = C8119 + C3851;
    const double C15530 = C15505 + C11812;
    const double C48681 = C48668 + C25088;
    const double C98913 = C98888 + C70965;
    const double C89172 = C89162 + C84643;
    const double C4218 = C4206 + C4176;
    const double C19669 = C19666 + C19659;
    const double C12543 = C12535 + C12504;
    const double C25443 = C25431 + C25401;
    const double C39751 = C39747 + C39737;
    const double C71696 = C71688 + C71657;
    const double C79161 = C79157 + C79145;
    const double C84998 = C84986 + C84956;
    const double C152332 = C152331 + C152317;
    const double C349 =
        (4 * (2 * C152422 + C152419 + C152419 + C152162 * C152484) + C152477 +
         C152477 +
         C152162 *
             (3 * C152484 + C152478 + C152478 +
              C152162 *
                  (2 * C152482 + C152479 + C152479 +
                   C152162 * (C152469 + C152480 + C152480 +
                              C152162 * (2 * ae * C152408 * C152297 +
                                         C152162 * C152408 * C152368))))) /
        C151945;
    const double C1006 = C141 * C991;
    const double C1004 = C143 * C991;
    const double C3848 = C2734 * C991;
    const double C11816 = C11275 * C991;
    const double C12238 = C11273 * C991;
    const double C18784 = C2732 * C991;
    const double C25085 = C23995 * C991;
    const double C38786 = C151978 * C991;
    const double C70969 = C70428 * C991;
    const double C71391 = C70426 * C991;
    const double C78150 = C74250 * C991;
    const double C84640 = C152048 * C991;
    const double C87897 = C152019 * C991;
    const double C125366 = C23993 * C991;
    const double C530 =
        (4 * (2 * C152525 + C152522 + C152522 + C152162 * C152587) + C152580 +
         C152580 +
         C152162 *
             (3 * C152587 + C152581 + C152581 +
              C152162 *
                  (2 * C152585 + C152582 + C152582 +
                   C152162 * (C152572 + C152583 + C152583 +
                              C152162 * (2 * ae * C152511 * C152297 +
                                         C152162 * C152511 * C152368))))) /
        C151945;
    const double C3614 = C3604 + C2762;
    const double C11566 = C11544 + C11545;
    const double C24851 = C24841 + C24023;
    const double C70719 = C70697 + C70698;
    const double C84406 = C84396 + C83578;
    const double C8135 = C8125 + C7118;
    const double C15534 = C15513 + C11821;
    const double C48684 = C48674 + C47679;
    const double C98917 = C98896 + C70974;
    const double C117018 = C117011 + C89167;
    const double C3085 = C3067 + C3045;
    const double C12894 = C12890 + C11526;
    const double C24334 = C24316 + C24294;
    const double C35659 = C35653 + C34915;
    const double C72047 = C72043 + C70679;
    const double C75019 = C75013 + C74275;
    const double C83889 = C83871 + C83849;
    const double C4209 = C4197 + C3366;
    const double C13782 = C13778 + C12514;
    const double C25434 = C25422 + C24603;
    const double C39749 = C39745 + C35862;
    const double C72935 = C72931 + C71667;
    const double C94175 = C94173 + C75222;
    const double C84989 = C84977 + C84158;
    const double C8458 = C8455 + C8446;
    const double C13116 = C13112 + C13100;
    const double C49004 = C49001 + C48992;
    const double C59012 = C59010 + C59006;
    const double C72269 = C72265 + C72253;
    const double C79163 = C79159 + C79149;
    const double C88562 = C88547 + C88511;
    const double C7653 = C7635 + C7613;
    const double C17938 = C17934 + C14309;
    const double C48202 = C48184 + C48162;
    const double C64146 = C64144 + C59309;
    const double C101321 = C101317 + C73462;
    const double C108139 = C108137 + C79464;
    const double C116567 = C116563 + C88515;
    const double C4615 = C4612 + C4601;
    const double C25831 = C25828 + C25817;
    const double C28739 = C28735 + C28726;
    const double C35205 = C35189 + C35155;
    const double C74565 = C74549 + C74515;
    const double C85386 = C85383 + C85372;
    const double C5631 = C5628 + C5617;
    const double C26829 = C26826 + C26815;
    const double C44720 = C44719 + C44717;
    const double C36189 = C36177 + C36151;
    const double C75549 = C75537 + C75511;
    const double C86384 = C86381 + C86370;
    const double C67485 = C67484 * C153754;
    const double C134696 = C67484 * C153754;
    const double C10406 = C10403 + C10393;
    const double C50934 = C50931 + C50921;
    const double C56254 = C56252 + C56247;
    const double C63748 = C63746 + C63739;
    const double C107741 = C107739 + C107732;
    const double C119224 = C119221 + C119211;
    const double C28448 = C28438 * C153513;
    const double C29088 = C29080 * C153513;
    const double C44318 = C29080 * C153600;
    const double C130760 = C29080 * C153600;
    const double C152401 = C152400 + C152381;
    const double C152502 = ae * C152496;
    const double C1228 = (2 * C152470 + C152408 * C152496) / C151939;
    const double C1801 = (C152511 * C152496) / C151939;
    const double C152605 = ae * C152599;
    const double C2153 = (2 * C152573 + C152511 * C152599) / C151939;
    const double C152700 = ae * C152693;
    const double C1381 = C143 * C1370;
    const double C7894 = C2734 * C1370;
    const double C11817 = C11275 * C1370;
    const double C48443 = C23995 * C1370;
    const double C58102 = C151978 * C1370;
    const double C70970 = C70428 * C1370;
    const double C78148 = C74250 * C1370;
    const double C89164 = C152048 * C1370;
    const double C1233 =
        (3 * (2 * C152411 + C152408 * C152455 + C152727 + C152727 +
              C152162 * C152734) +
         C152730 + C152730 +
         C152162 *
             (2 * C152734 + C152731 + C152731 +
              C152162 *
                  (C152723 + C152732 + C152732 +
                   C152162 *
                       (2 * ae *
                            (2 * C152616 +
                             C152408 * (C152297 + C152361 * C152434)) +
                        C152162 *
                            (2 * C152617 +
                             C152408 * (C152368 + (C152340 * C152341 +
                                                   C152166 * bs[9] *
                                                       std::pow(C152168, 9)) *
                                                      C152169 * C152434)))))) /
        C151945;
    const double C3047 = C2734 * C2996;
    const double C12883 = C11275 * C2996;
    const double C24296 = C23995 * C2996;
    const double C28252 = C28235 * C2996;
    const double C35646 = C151978 * C2996;
    const double C72036 = C70428 * C2996;
    const double C75006 = C74250 * C2996;
    const double C83851 = C152048 * C2996;
    const double C4183 = C2734 * C4150;
    const double C13771 = C11275 * C4150;
    const double C25408 = C23995 * C4150;
    const double C35860 = C151978 * C4150;
    const double C44108 = C28235 * C4150;
    const double C72924 = C70428 * C4150;
    const double C75220 = C74250 * C4150;
    const double C84963 = C152048 * C4150;
    const double C2158 =
        (3 * (2 * C152514 + C152511 * C152558 + C152826 + C152826 +
              C152162 * C152833) +
         C152829 + C152829 +
         C152162 *
             (2 * C152833 + C152830 + C152830 +
              C152162 *
                  (C152822 + C152831 + C152831 +
                   C152162 *
                       (2 * ae *
                            (2 * C152642 +
                             C152511 * (C152297 + C152361 * C152537)) +
                        C152162 *
                            (2 * C152643 +
                             C152511 * (C152368 + (C152340 * C152341 +
                                                   C152166 * bs[9] *
                                                       std::pow(C152168, 9)) *
                                                      C152169 * C152537)))))) /
        C151945;
    const double C7615 = C2734 * C7567;
    const double C17927 = C11275 * C7567;
    const double C48164 = C23995 * C7567;
    const double C55729 = C28235 * C7567;
    const double C64141 = C151978 * C7567;
    const double C101310 = C70428 * C7567;
    const double C108134 = C74250 * C7567;
    const double C116557 = C152048 * C7567;
    const double C83587 = C152030 * C155;
    const double C83584 = C152030 * C328;
    const double C83581 = C152030 * C335;
    const double C83576 = C152030 * C334;
    const double C83573 = C152030 * C329;
    const double C83570 = C152030 * C154;
    const double C83569 = C152030 * C153;
    const double C83566 = C152030 * C330;
    const double C83563 = C152030 * C333;
    const double C83558 = C152030 * C332;
    const double C83555 = C152030 * C331;
    const double C83552 = C152030 * C152;
    const double C83853 = C152030 * C2994;
    const double C83843 = C152030 * C1231;
    const double C83827 = C152030 * C2993;
    const double C83825 = C152030 * C1232;
    const double C84167 = C152030 * C514;
    const double C84164 = C152030 * C1373;
    const double C84161 = C152030 * C3332;
    const double C84156 = C152030 * C1804;
    const double C84153 = C152030 * C988;
    const double C84150 = C152030 * C511;
    const double C84147 = C152030 * C3331;
    const double C84144 = C152030 * C1374;
    const double C84141 = C152030 * C513;
    const double C84140 = C152030 * C512;
    const double C84137 = C152030 * C987;
    const double C84134 = C152030 * C1805;
    const double C84400 = C152030 * C1230;
    const double C84645 = C152030 * C510;
    const double C84642 = C152030 * C989;
    const double C84639 = C152030 * C1803;
    const double C84965 = C152030 * C4148;
    const double C84948 = C152030 * C4147;
    const double C85375 = C152030 * C4590;
    const double C85619 = C152030 * C4838;
    const double C86373 = C152030 * C5606;
    const double C86975 = C152030 * C2157;
    const double C86972 = C152030 * C6224;
    const double C86969 = C152030 * C6221;
    const double C87901 = C152030 * C509;
    const double C87898 = C152030 * C990;
    const double C88517 = C152030 * C2156;
    const double C88514 = C152030 * C6223;
    const double C89169 = C152030 * C515;
    const double C89166 = C152030 * C1372;
    const double C92119 = C152030 * C7564;
    const double C92116 = C152030 * C9045;
    const double C116112 = C152030 * C516;
    const double C116559 = C152030 * C7565;
    const double C117015 = C152030 * C2155;
    const double C119214 = C152030 * C10382;
    const double C135 =
        (((((0 - (C151940 * C151938) / C151939) * ae) / C151939 -
           (0 * be) / C151958 + (2 * C151941) / C151939) /
              C151946 -
          ((C151940 * C151988 + 0) * be) / C151939 + C151967 - C151980) /
             C151946 +
         ((C151940 * C152015 + 0) * ae) / C151939) /
            C151946 -
        ((C151940 * (C152015 / C151946 +
                     ((C151940 * C152030 + C153343) * ae) / C151939 + C152019) +
          C153818) *
         be) /
            C151939 +
        C152030 / C151946 + ((C151940 * C152019 + C153351) * ae) / C151939 +
        2 * (C151978 / C151946 - (0 * be) / C151939);
    const double C137 =
        (C152015 / C151946 + ((C151940 * C152030 + C153343) * ae) / C151939 +
         C152019) /
            C151946 -
        ((C151940 * (C152030 / C151946 +
                     ((C151940 * C152019 + C153351) * ae) / C151939 + C152049) +
          C153811) *
         be) /
            C151939 +
        2 * (C152019 / C151946 + ((C151940 * C152048 + C83541) * ae) / C151939);
    const double C139 =
        (C152030 / C151946 + ((C151940 * C152019 + C153351) * ae) / C151939 +
         C152049) /
            C151946 -
        ((C151940 * (C152019 / C151946 +
                     ((C151940 * C152048 + C83541) * ae) / C151939) +
          C153792) *
         be) /
            C151939 +
        3 * (C152048 / C151946 + (0 * ae) / C151939);
    const double C11269 = C152015 / C151946 -
                          ((C151940 * C152030 + C153343) * be) / C151939 +
                          C152019;
    const double C11271 = C152030 / C151946 -
                          ((C151940 * C152019 + C153351) * be) / C151939 +
                          C152049;
    const double C70422 = C152015 / C151946 +
                          ((C151940 * C152030 + C153343) * ae) / C151939 +
                          C152019;
    const double C70424 = C152030 / C151946 +
                          ((C151940 * C152019 + C153351) * ae) / C151939 +
                          C152049;
    const double C83888 = C83870 + C83846;
    const double C83885 = C83867 + C83562;
    const double C83882 = C83864 + C83565;
    const double C83879 = C83861 + C83822;
    const double C83876 = C83858 + C83559;
    const double C83873 = C83855 + C83556;
    const double C84411 = C84405 + C83577;
    const double C84408 = C84402 + C83574;
    const double C84988 = C84976 + C84157;
    const double C84985 = C84973 + C84154;
    const double C84982 = C84970 + C84136;
    const double C84979 = C84967 + C84133;
    const double C85382 = C85378 + C83828;
    const double C85630 = C85624 + C84148;
    const double C85627 = C85621 + C84145;
    const double C86380 = C86376 + C84949;
    const double C88546 = C88531 + C84163;
    const double C88543 = C88528 + C84166;
    const double C88540 = C88525 + C84151;
    const double C88537 = C88522 + C84142;
    const double C88534 = C88519 + C84139;
    const double C88863 = C88860 + C84641;
    const double C89174 = C89171 + C84644;
    const double C90361 = C90358 + C86971;
    const double C92124 = C92121 + C86974;
    const double C116566 = C116562 + C88516;
    const double C117020 = C117017 + C89168;
    const double C119220 = C119217 + C92118;
    const double C11565 = C11541 + C11542;
    const double C11561 = C11531 + C11286;
    const double C11556 = C11514 + C11515;
    const double C11553 = C11507 + C11283;
    const double C12033 = C12023 + C11299;
    const double C12533 = C12519 + C11815;
    const double C12528 = C12505 + C11794;
    const double C12889 = C12879 + C11525;
    const double C13107 = C13097 + C11807;
    const double C13777 = C13767 + C12513;
    const double C15533 = C15511 + C11822;
    const double C15529 = C15503 + C11811;
    const double C15524 = C15493 + C11803;
    const double C15521 = C15487 + C11798;
    const double C15969 = C15959 + C12242;
    const double C17933 = C17923 + C14310;
    const double C70718 = C70694 + C70695;
    const double C70714 = C70684 + C70439;
    const double C70709 = C70667 + C70668;
    const double C70706 = C70660 + C70436;
    const double C71186 = C71176 + C70452;
    const double C71686 = C71672 + C70968;
    const double C71681 = C71658 + C70947;
    const double C72042 = C72032 + C70678;
    const double C72260 = C72250 + C70960;
    const double C72930 = C72920 + C71666;
    const double C98916 = C98894 + C70975;
    const double C98912 = C98886 + C70964;
    const double C98907 = C98876 + C70956;
    const double C98904 = C98870 + C70951;
    const double C99352 = C99342 + C71395;
    const double C101316 = C101306 + C73463;
    const double C24333 = C24315 + C24291;
    const double C24330 = C24312 + C24007;
    const double C24327 = C24309 + C24010;
    const double C24324 = C24306 + C24267;
    const double C24321 = C24303 + C24004;
    const double C24318 = C24300 + C24001;
    const double C24856 = C24850 + C24022;
    const double C24853 = C24847 + C24019;
    const double C25433 = C25421 + C24602;
    const double C25430 = C25418 + C24599;
    const double C25427 = C25415 + C24581;
    const double C25424 = C25412 + C24578;
    const double C25827 = C25823 + C24273;
    const double C26075 = C26069 + C24593;
    const double C26072 = C26066 + C24590;
    const double C26825 = C26821 + C25394;
    const double C48201 = C48183 + C48159;
    const double C48198 = C48180 + C24611;
    const double C48195 = C48177 + C24596;
    const double C48192 = C48174 + C27419;
    const double C48189 = C48171 + C24587;
    const double C48186 = C48168 + C24584;
    const double C48689 = C48683 + C47678;
    const double C48686 = C48680 + C25089;
    const double C49000 = C48997 + C24608;
    const double C49602 = C49598 + C27416;
    const double C50930 = C50927 + C48141;
    const double C126248 = C126245 + C25086;
    const double C152031 = C152029 / C151939;
    const double C24287 = C23990 * C1226;
    const double C24281 = C23990 * C321;
    const double C24275 = C23990 * C318;
    const double C24269 = C23990 * C1227;
    const double C24257 = C23990 * C320;
    const double C24251 = C23990 * C319;
    const double C24837 = C23990 * C322;
    const double C24831 = C23990 * C317;
    const double C25402 = C23990 * C1799;
    const double C25396 = C23990 * C982;
    const double C25391 = C23990 * C981;
    const double C25385 = C23990 * C1800;
    const double C25812 = C23990 * C2989;
    const double C26056 = C23990 * C3327;
    const double C26050 = C23990 * C1369;
    const double C26810 = C23990 * C4143;
    const double C48155 = C23990 * C2151;
    const double C48149 = C23990 * C502;
    const double C48143 = C23990 * C499;
    const double C48138 = C23990 * C2152;
    const double C48128 = C23990 * C501;
    const double C48122 = C23990 * C500;
    const double C48670 = C23990 * C503;
    const double C48664 = C23990 * C498;
    const double C48987 = C23990 * C1368;
    const double C49587 = C23990 * C6218;
    const double C50916 = C23990 * C7560;
    const double C126238 = C23990 * C983;
    const double C35204 = C35188 + C35152;
    const double C35202 = C35186 + C35147;
    const double C35200 = C35184 + C35143;
    const double C35198 = C35182 + C35139;
    const double C35197 = C35181 + C35135;
    const double C35194 = C35178 + C35127;
    const double C35192 = C35176 + C35123;
    const double C35190 = C35174 + C35119;
    const double C35664 = C35658 + C35643;
    const double C35662 = C35656 + C35639;
    const double C35660 = C35654 + C35635;
    const double C36188 = C36176 + C36149;
    const double C36186 = C36174 + C36145;
    const double C36184 = C36172 + C36141;
    const double C36183 = C36171 + C36137;
    const double C36181 = C36169 + C36133;
    const double C36179 = C36167 + C36129;
    const double C36528 = C36526 + C36517;
    const double C36754 = C36748 + C36733;
    const double C36752 = C36746 + C36729;
    const double C36750 = C36744 + C36725;
    const double C37416 = C37414 + C37405;
    const double C39442 = C39430 + C39399;
    const double C39440 = C39428 + C39395;
    const double C39438 = C39426 + C39391;
    const double C39436 = C39424 + C39387;
    const double C39435 = C39423 + C39385;
    const double C39432 = C39420 + C39379;
    const double C39752 = C39748 + C39739;
    const double C39750 = C39746 + C39735;
    const double C40058 = C40056 + C40045;
    const double C41250 = C41246 + C41237;
    const double C41248 = C41244 + C41232;
    const double C43010 = C43008 + C42997;
    const double C58711 = C58707 + C58692;
    const double C58709 = C58705 + C58688;
    const double C59011 = C59009 + C59004;
    const double C59315 = C59313 + C59304;
    const double C60488 = C60486 + C60481;
    const double C62243 = C62241 + C62232;
    const double C63747 = C63745 + C63737;
    const double C64147 = C64145 + C64138;
    const double C66100 = C66098 + C66091;
    const double C3105 = C3099 + C3098;
    const double C4595 = C3093 + C3094;
    const double C3104 = C3089 + C3090;
    const double C20350 = C4217 + C4216;
    const double C20349 = C4216 + C4217;
    const double C20348 = C4214 + C4215;
    const double C20347 = C4215 + C4214;
    const double C5611 = C4211 + C4212;
    const double C22097 = C4212 + C4211;
    const double C9056 = C4871 + C4870;
    const double C21129 = C4870 + C4871;
    const double C7673 = C7667 + C7666;
    const double C10387 = C7661 + C7662;
    const double C7672 = C7657 + C7658;
    const double C74568 = C74563 + C74562;
    const double C74569 = C74561 + C74560;
    const double C75874 = C74556 + C74557;
    const double C74567 = C74554 + C74555;
    const double C75875 = C74555 + C74554;
    const double C74566 = C74552 + C74553;
    const double C93583 = C75547 + C75546;
    const double C94854 = C75546 + C75547;
    const double C79869 = C75545 + C75544;
    const double C79867 = C75544 + C75545;
    const double C79866 = C75542 + C75543;
    const double C79864 = C75543 + C75542;
    const double C76763 = C75540 + C75541;
    const double C81637 = C75541 + C75540;
    const double C76762 = C75538 + C75539;
    const double C96600 = C75539 + C75538;
    const double C80656 = C76113 + C76112;
    const double C81638 = C76112 + C76113;
    const double C78764 = C76110 + C76111;
    const double C79865 = C76111 + C76110;
    const double C78797 = C78463 + C78462;
    const double C79868 = C78462 + C78463;
    const double C107733 = C78847 + C78846;
    const double C78851 = C78845 + C78844;
    const double C82413 = C78840 + C78841;
    const double C107728 = C78841 + C78840;
    const double C80647 = C78839 + C78838;
    const double C80646 = C78838 + C78839;
    const double C78850 = C78836 + C78837;
    const double C110082 = C82427 + C82426;
    const double C3617 = C3611 + C2759;
    const double C11578 = C11562 + C11285;
    const double C24854 = C24848 + C24020;
    const double C70731 = C70715 + C70438;
    const double C84409 = C84403 + C83575;
    const double C8138 = C8132 + C3851;
    const double C15546 = C15530 + C11812;
    const double C48687 = C48681 + C25088;
    const double C98929 = C98913 + C70965;
    const double C89175 = C89172 + C84643;
    const double C152333 = ae * C152332;
    const double C158 = (5 * C152273 + C152162 * C152332 +
                         (4 * C152256 + C152162 * C152314) * ae) /
                        C151939;
    const double C337 = (C152408 * C152332) / C151939;
    const double C518 = (C152511 * C152332) / C151939;
    const double C12026 = C153738 * C349;
    const double C71179 = C153738 * C349;
    const double C19664 = C19660 + C3848;
    const double C12534 = C12521 + C11816;
    const double C126246 = C126242 + C25085;
    const double C71687 = C71674 + C70969;
    const double C88861 = C88857 + C84640;
    const double C15962 = C153738 * C530;
    const double C99345 = C153738 * C530;
    const double C3620 = C3614 + C2762;
    const double C11582 = C11566 + C11545;
    const double C24857 = C24851 + C24023;
    const double C70735 = C70719 + C70698;
    const double C84412 = C84406 + C83578;
    const double C8141 = C8135 + C7118;
    const double C15550 = C15534 + C11821;
    const double C48690 = C48684 + C47679;
    const double C98933 = C98917 + C70974;
    const double C117021 = C117018 + C89167;
    const double C3103 = C3085 + C3046;
    const double C12898 = C12894 + C12882;
    const double C24352 = C24334 + C24295;
    const double C35665 = C35659 + C35645;
    const double C72051 = C72047 + C72035;
    const double C75025 = C75019 + C75005;
    const double C83907 = C83889 + C83850;
    const double C4221 = C4209 + C4182;
    const double C13786 = C13782 + C13770;
    const double C25446 = C25434 + C25407;
    const double C39753 = C39749 + C39741;
    const double C72939 = C72935 + C72923;
    const double C94177 = C94175 + C94171;
    const double C85001 = C84989 + C84962;
    const double C7671 = C7653 + C7614;
    const double C17942 = C17938 + C17926;
    const double C48220 = C48202 + C48163;
    const double C64148 = C64146 + C64140;
    const double C101325 = C101321 + C101309;
    const double C108141 = C108139 + C108133;
    const double C116570 = C116567 + C116555;
    const double C28743 = C28739 * C153513;
    const double C44721 = C44720 * C153600;
    const double C131158 = C44720 * C153600;
    const double C152403 = ae * C152401;
    const double C152402 = C152162 * C152401;
    const double C152618 = C152408 * C152401;
    const double C152644 = C152511 * C152401;
    const double C338 = (C152332 + C152401 * C152434) / C151939;
    const double C519 = (C152332 + C152401 * C152537) / C151939;
    const double C350 =
        (4 * (2 * C152465 + C152462 + C152462 + C152162 * C152509) + C152502 +
         C152502 +
         C152162 *
             (3 * C152509 + C152503 + C152503 +
              C152162 *
                  (2 * C152507 + C152504 + C152504 +
                   C152162 *
                       (C152495 + C152505 + C152505 +
                        C152162 *
                            (2 * ae * (C152297 + C152361 * C152434) +
                             C152162 * (C152368 + (C152340 * C152341 +
                                                   C152166 * bs[9] *
                                                       std::pow(C152168, 9)) *
                                                      C152169 * C152434)))))) /
        C151945;
    const double C1239 = C143 * C1228;
    const double C3606 = C2734 * C1228;
    const double C11547 = C11275 * C1228;
    const double C24843 = C23995 * C1228;
    const double C34916 = C151978 * C1228;
    const double C70700 = C70428 * C1228;
    const double C74276 = C74250 * C1228;
    const double C84398 = C152048 * C1228;
    const double C1812 = C143 * C1801;
    const double C3845 = C2734 * C1801;
    const double C12523 = C11275 * C1801;
    const double C25082 = C23995 * C1801;
    const double C38784 = C151978 * C1801;
    const double C71676 = C70428 * C1801;
    const double C84637 = C152048 * C1801;
    const double C93289 = C74250 * C1801;
    const double C531 =
        (4 * (2 * C152568 + C152565 + C152565 + C152162 * C152612) + C152605 +
         C152605 +
         C152162 *
             (3 * C152612 + C152606 + C152606 +
              C152162 *
                  (2 * C152610 + C152607 + C152607 +
                   C152162 *
                       (C152598 + C152608 + C152608 +
                        C152162 *
                            (2 * ae * (C152297 + C152361 * C152537) +
                             C152162 * (C152368 + (C152340 * C152341 +
                                                   C152166 * bs[9] *
                                                       std::pow(C152168, 9)) *
                                                      C152169 * C152537)))))) /
        C151945;
    const double C2164 = C143 * C2153;
    const double C8127 = C2734 * C2153;
    const double C15515 = C11275 * C2153;
    const double C48676 = C23995 * C2153;
    const double C63345 = C151978 * C2153;
    const double C98898 = C70428 * C2153;
    const double C107338 = C74250 * C2153;
    const double C117013 = C152048 * C2153;
    const double C998 =
        (4 * (2 * C152688 + C152685 + C152685 + C152162 * C152707) + C152700 +
         C152700 +
         C152162 *
             (3 * C152707 + C152701 + C152701 +
              C152162 *
                  (2 * C152705 + C152702 + C152702 +
                   C152162 * (C152692 + C152703 + C152703 +
                              C152162 * (2 * ae * C152511 * C152408 * C152361 +
                                         C152162 * C152511 * C152408 *
                                             (C152340 * C152341 +
                                              C152166 * bs[9] *
                                                  std::pow(C152168, 9)) *
                                             C152169))))) /
        C151945;
    const double C188 = C135 * C155;
    const double C179 = C135 * C154;
    const double C178 = C135 * C153;
    const double C169 = C135 * C152;
    const double C371 = C135 * C333;
    const double C362 = C135 * C330;
    const double C357 = C135 * C332;
    const double C356 = C135 * C331;
    const double C552 = C135 * C514;
    const double C543 = C135 * C511;
    const double C538 = C135 * C513;
    const double C537 = C135 * C512;
    const double C687 = C135 * C329;
    const double C819 = C135 * C510;
    const double C1009 = C135 * C988;
    const double C1000 = C135 * C987;
    const double C1243 = C135 * C1232;
    const double C1385 = C135 * C1374;
    const double C1816 = C135 * C1805;
    const double C2168 = C135 * C2157;
    const double C187 = C137 * C156;
    const double C180 = C137 * C155;
    const double C177 = C137 * C154;
    const double C170 = C137 * C153;
    const double C370 = C137 * C334;
    const double C363 = C137 * C329;
    const double C358 = C137 * C333;
    const double C355 = C137 * C330;
    const double C551 = C137 * C515;
    const double C544 = C137 * C510;
    const double C539 = C137 * C514;
    const double C536 = C137 * C511;
    const double C686 = C137 * C328;
    const double C818 = C137 * C509;
    const double C1008 = C137 * C989;
    const double C1001 = C137 * C988;
    const double C1242 = C137 * C1231;
    const double C1384 = C137 * C1373;
    const double C1815 = C137 * C1804;
    const double C2167 = C137 * C2156;
    const double C186 = C139 * C157;
    const double C181 = C139 * C156;
    const double C176 = C139 * C155;
    const double C171 = C139 * C154;
    const double C369 = C139 * C335;
    const double C364 = C139 * C328;
    const double C359 = C139 * C334;
    const double C354 = C139 * C329;
    const double C550 = C139 * C516;
    const double C545 = C139 * C509;
    const double C540 = C139 * C515;
    const double C535 = C139 * C510;
    const double C685 = C139 * C327;
    const double C817 = C139 * C508;
    const double C1007 = C139 * C990;
    const double C1002 = C139 * C989;
    const double C1241 = C139 * C1230;
    const double C1383 = C139 * C1372;
    const double C1814 = C139 * C1803;
    const double C2166 = C139 * C2155;
    const double C11308 = C11269 * C155;
    const double C11304 = C11269 * C328;
    const double C11297 = C11269 * C329;
    const double C11293 = C11269 * C154;
    const double C11292 = C11269 * C153;
    const double C11288 = C11269 * C330;
    const double C11281 = C11269 * C331;
    const double C11277 = C11269 * C152;
    const double C11550 = C11269 * C1231;
    const double C11536 = C11269 * C333;
    const double C11523 = C11269 * C1232;
    const double C11521 = C11269 * C332;
    const double C11824 = C11269 * C514;
    const double C11820 = C11269 * C1373;
    const double C11813 = C11269 * C988;
    const double C11809 = C11269 * C511;
    const double C11805 = C11269 * C1374;
    const double C11801 = C11269 * C513;
    const double C11800 = C11269 * C512;
    const double C11796 = C11269 * C987;
    const double C12030 = C11269 * C334;
    const double C12244 = C11269 * C510;
    const double C12240 = C11269 * C989;
    const double C12526 = C11269 * C1804;
    const double C12511 = C11269 * C1805;
    const double C12886 = C11269 * C2993;
    const double C13104 = C11269 * C3331;
    const double C13774 = C11269 * C4147;
    const double C14312 = C11269 * C2157;
    const double C14308 = C11269 * C6224;
    const double C15094 = C11269 * C509;
    const double C15518 = C11269 * C2156;
    const double C15966 = C11269 * C515;
    const double C17930 = C11269 * C7564;
    const double C11307 = C11271 * C156;
    const double C11303 = C11271 * C327;
    const double C11298 = C11271 * C328;
    const double C11294 = C11271 * C155;
    const double C11291 = C11271 * C154;
    const double C11287 = C11271 * C329;
    const double C11282 = C11271 * C330;
    const double C11278 = C11271 * C153;
    const double C11549 = C11271 * C1230;
    const double C11539 = C11271 * C334;
    const double C11524 = C11271 * C1231;
    const double C11518 = C11271 * C333;
    const double C11823 = C11271 * C515;
    const double C11819 = C11271 * C1372;
    const double C11814 = C11271 * C989;
    const double C11810 = C11271 * C510;
    const double C11806 = C11271 * C1373;
    const double C11802 = C11271 * C514;
    const double C11799 = C11271 * C511;
    const double C11795 = C11271 * C988;
    const double C12029 = C11271 * C335;
    const double C12243 = C11271 * C509;
    const double C12239 = C11271 * C990;
    const double C12525 = C11271 * C1803;
    const double C12512 = C11271 * C1804;
    const double C12885 = C11271 * C2994;
    const double C13103 = C11271 * C3332;
    const double C13773 = C11271 * C4148;
    const double C14311 = C11271 * C2156;
    const double C14307 = C11271 * C6223;
    const double C15093 = C11271 * C508;
    const double C15517 = C11271 * C2155;
    const double C15965 = C11271 * C516;
    const double C17929 = C11271 * C7565;
    const double C70461 = C70422 * C155;
    const double C70457 = C70422 * C328;
    const double C70450 = C70422 * C329;
    const double C70446 = C70422 * C154;
    const double C70445 = C70422 * C153;
    const double C70441 = C70422 * C330;
    const double C70434 = C70422 * C331;
    const double C70430 = C70422 * C152;
    const double C70703 = C70422 * C1231;
    const double C70689 = C70422 * C333;
    const double C70676 = C70422 * C1232;
    const double C70674 = C70422 * C332;
    const double C70977 = C70422 * C514;
    const double C70973 = C70422 * C1373;
    const double C70966 = C70422 * C988;
    const double C70962 = C70422 * C511;
    const double C70958 = C70422 * C1374;
    const double C70954 = C70422 * C513;
    const double C70953 = C70422 * C512;
    const double C70949 = C70422 * C987;
    const double C71183 = C70422 * C334;
    const double C71397 = C70422 * C510;
    const double C71393 = C70422 * C989;
    const double C71679 = C70422 * C1804;
    const double C71664 = C70422 * C1805;
    const double C72039 = C70422 * C2993;
    const double C72257 = C70422 * C3331;
    const double C72927 = C70422 * C4147;
    const double C73465 = C70422 * C2157;
    const double C73461 = C70422 * C6224;
    const double C98477 = C70422 * C509;
    const double C98901 = C70422 * C2156;
    const double C99349 = C70422 * C515;
    const double C101313 = C70422 * C7564;
    const double C70460 = C70424 * C156;
    const double C70456 = C70424 * C327;
    const double C70451 = C70424 * C328;
    const double C70447 = C70424 * C155;
    const double C70444 = C70424 * C154;
    const double C70440 = C70424 * C329;
    const double C70435 = C70424 * C330;
    const double C70431 = C70424 * C153;
    const double C70702 = C70424 * C1230;
    const double C70692 = C70424 * C334;
    const double C70677 = C70424 * C1231;
    const double C70671 = C70424 * C333;
    const double C70976 = C70424 * C515;
    const double C70972 = C70424 * C1372;
    const double C70967 = C70424 * C989;
    const double C70963 = C70424 * C510;
    const double C70959 = C70424 * C1373;
    const double C70955 = C70424 * C514;
    const double C70952 = C70424 * C511;
    const double C70948 = C70424 * C988;
    const double C71182 = C70424 * C335;
    const double C71396 = C70424 * C509;
    const double C71392 = C70424 * C990;
    const double C71678 = C70424 * C1803;
    const double C71665 = C70424 * C1804;
    const double C72038 = C70424 * C2994;
    const double C72256 = C70424 * C3332;
    const double C72926 = C70424 * C4148;
    const double C73464 = C70424 * C2156;
    const double C73460 = C70424 * C6223;
    const double C98476 = C70424 * C508;
    const double C98900 = C70424 * C2155;
    const double C99348 = C70424 * C516;
    const double C101312 = C70424 * C7565;
    const double C83906 = C83888 + C83847;
    const double C83903 = C83885 + C83839;
    const double C83900 = C83882 + C83833;
    const double C83897 = C83879 + C83823;
    const double C83894 = C83876 + C83815;
    const double C83891 = C83873 + C83809;
    const double C84417 = C84411 + C84395;
    const double C84414 = C84408 + C84389;
    const double C85000 = C84988 + C84960;
    const double C84997 = C84985 + C84954;
    const double C84994 = C84982 + C84945;
    const double C84991 = C84979 + C84939;
    const double C85385 = C85382 + C85370;
    const double C85636 = C85630 + C85614;
    const double C85633 = C85627 + C85608;
    const double C86383 = C86380 + C86368;
    const double C88561 = C88546 + C88509;
    const double C88558 = C88543 + C88503;
    const double C88555 = C88540 + C88497;
    const double C88552 = C88537 + C88491;
    const double C88549 = C88534 + C88485;
    const double C88866 = C88863 + C88856;
    const double C89177 = C89174 + C89161;
    const double C90364 = C90361 + C90352;
    const double C92127 = C92124 + C92111;
    const double C116569 = C116566 + C116553;
    const double C117023 = C117020 + C117010;
    const double C119223 = C119220 + C119209;
    const double C11581 = C11565 + C11542;
    const double C11577 = C11561 + C11286;
    const double C11572 = C11556 + C11515;
    const double C11569 = C11553 + C11283;
    const double C12037 = C12033 + C11299;
    const double C12541 = C12533 + C11815;
    const double C12536 = C12528 + C11794;
    const double C12893 = C12889 + C11525;
    const double C13111 = C13107 + C11807;
    const double C13781 = C13777 + C12513;
    const double C15549 = C15533 + C11822;
    const double C15545 = C15529 + C11811;
    const double C15540 = C15524 + C11803;
    const double C15537 = C15521 + C11798;
    const double C15973 = C15969 + C12242;
    const double C17937 = C17933 + C14310;
    const double C70734 = C70718 + C70695;
    const double C70730 = C70714 + C70439;
    const double C70725 = C70709 + C70668;
    const double C70722 = C70706 + C70436;
    const double C71190 = C71186 + C70452;
    const double C71694 = C71686 + C70968;
    const double C71689 = C71681 + C70947;
    const double C72046 = C72042 + C70678;
    const double C72264 = C72260 + C70960;
    const double C72934 = C72930 + C71666;
    const double C98932 = C98916 + C70975;
    const double C98928 = C98912 + C70964;
    const double C98923 = C98907 + C70956;
    const double C98920 = C98904 + C70951;
    const double C99356 = C99352 + C71395;
    const double C101320 = C101316 + C73463;
    const double C24351 = C24333 + C24292;
    const double C24348 = C24330 + C24284;
    const double C24345 = C24327 + C24278;
    const double C24342 = C24324 + C24268;
    const double C24339 = C24321 + C24260;
    const double C24336 = C24318 + C24254;
    const double C24862 = C24856 + C24840;
    const double C24859 = C24853 + C24834;
    const double C25445 = C25433 + C25405;
    const double C25442 = C25430 + C25399;
    const double C25439 = C25427 + C25390;
    const double C25436 = C25424 + C25384;
    const double C25830 = C25827 + C25815;
    const double C26081 = C26075 + C26059;
    const double C26078 = C26072 + C26053;
    const double C26828 = C26825 + C26813;
    const double C48219 = C48201 + C48160;
    const double C48216 = C48198 + C48152;
    const double C48213 = C48195 + C48146;
    const double C48210 = C48192 + C48137;
    const double C48207 = C48189 + C48131;
    const double C48204 = C48186 + C48125;
    const double C48695 = C48689 + C48673;
    const double C48692 = C48686 + C48667;
    const double C49003 = C49000 + C48990;
    const double C49605 = C49602 + C49590;
    const double C50933 = C50930 + C50919;
    const double C126251 = C126248 + C126241;
    const double C152032 = C151968 - C152031;
    const double C24314 = C24287 + C24288;
    const double C24311 = C24281 + C24008;
    const double C24308 = C24275 + C24011;
    const double C24307 = C24269 + C24270;
    const double C24302 = C24257 + C24003;
    const double C24299 = C24251 + C24000;
    const double C24849 = C24837 + C24021;
    const double C24846 = C24831 + C24018;
    const double C25420 = C25402 + C24601;
    const double C25417 = C25396 + C24598;
    const double C25416 = C25391 + C24582;
    const double C25413 = C25385 + C24579;
    const double C25822 = C25812 + C24272;
    const double C26068 = C26056 + C24592;
    const double C26065 = C26050 + C24589;
    const double C26820 = C26810 + C25393;
    const double C48182 = C48155 + C48156;
    const double C48179 = C48149 + C24612;
    const double C48176 = C48143 + C24595;
    const double C48175 = C48138 + C27420;
    const double C48170 = C48128 + C24586;
    const double C48167 = C48122 + C24585;
    const double C48682 = C48670 + C47677;
    const double C48679 = C48664 + C25090;
    const double C48996 = C48987 + C24609;
    const double C49597 = C49587 + C27417;
    const double C50926 = C50916 + C48140;
    const double C126244 = C126238 + C25087;
    const double C35208 = C35203 + C35202;
    const double C35209 = C35201 + C35200;
    const double C36514 = C35196 + C35197;
    const double C35207 = C35194 + C35195;
    const double C36515 = C35195 + C35194;
    const double C35206 = C35192 + C35193;
    const double C39082 = C36187 + C36186;
    const double C40449 = C36186 + C36187;
    const double C40450 = C36185 + C36184;
    const double C40448 = C36184 + C36185;
    const double C40447 = C36182 + C36183;
    const double C40446 = C36183 + C36182;
    const double C37403 = C36180 + C36181;
    const double C39081 = C36181 + C36180;
    const double C37402 = C36178 + C36179;
    const double C42220 = C36179 + C36178;
    const double C41235 = C36752 + C36753;
    const double C41228 = C36753 + C36752;
    const double C41230 = C36750 + C36751;
    const double C41229 = C36751 + C36750;
    const double C58695 = C39441 + C39440;
    const double C59703 = C39440 + C39441;
    const double C58696 = C39439 + C39438;
    const double C58686 = C39435 + C39434;
    const double C60479 = C41248 + C41249;
    const double C60478 = C41249 + C41248;
    const double C62230 = C43011 + C43010;
    const double C63735 = C43010 + C43011;
    const double C63740 = C58710 + C58709;
    const double C66089 = C62244 + C62243;
    const double C3107 = C3100 + C3105;
    const double C4605 = C3092 + C4595;
    const double C3106 = C3104 + C3091;
    const double C20354 = C4218 + C20350;
    const double C20353 = C20349 + C4218;
    const double C20352 = C4213 + C20348;
    const double C20351 = C20347 + C4213;
    const double C5621 = C4210 + C5611;
    const double C22098 = C22097 + C4210;
    const double C9063 = C4872 + C9056;
    const double C21130 = C21129 + C4872;
    const double C7675 = C7668 + C7673;
    const double C10397 = C7660 + C10387;
    const double C7674 = C7672 + C7659;
    const double C74572 = C74568 * C153513;
    const double C74573 = C74569 * C153513;
    const double C93584 = C74569 * C153740;
    const double C102459 = C74569 * C98471;
    const double C75882 = C75874 * C153513;
    const double C74571 = C74567 * C153513;
    const double C75883 = C75875 * C153513;
    const double C95340 = C75875 * C153740;
    const double C104203 = C75875 * C98471;
    const double C74570 = C74566 * C153513;
    const double C93581 = C74566 * C153740;
    const double C102456 = C74566 * C98471;
    const double C93586 = C93583 * C153600;
    const double C102458 = C93583 * C153600;
    const double C76771 = C76763 * C153513;
    const double C96599 = C76763 * C153740;
    const double C105462 = C76763 * C98471;
    const double C93582 = C81637 * C153600;
    const double C102457 = C81637 * C153600;
    const double C76770 = C76762 * C153513;
    const double C95339 = C76762 * C153600;
    const double C104202 = C76762 * C153600;
    const double C96598 = C80656 * C153600;
    const double C105461 = C80656 * C153600;
    const double C3623 = C3617 + C3599;
    const double C11594 = C11578 + C11534;
    const double C24860 = C24854 + C24836;
    const double C70747 = C70731 + C70687;
    const double C84415 = C84409 + C84391;
    const double C8144 = C8138 + C8120;
    const double C15562 = C15546 + C15506;
    const double C48693 = C48687 + C48669;
    const double C98945 = C98929 + C98889;
    const double C89178 = C89175 + C89163;
    const double C166 =
        (5 * (3 * C152265 + C152271 + C152271 + C152162 * C152323) + C152333 +
         C152333 +
         C152162 *
             (4 * C152323 + C152330 + C152330 +
              C152162 *
                  (3 * C152318 + C152326 + C152326 +
                   C152162 *
                       (2 * C152312 + C152320 + C152320 +
                        C152162 * (C152304 + C152311 + C152311 +
                                   C152162 * (2 * ae * C152297 +
                                              C152162 *
                                                  (C152280 * C152281 +
                                                   C152166 * bs[8] *
                                                       std::pow(C152160, 8)) *
                                                  C152169)))))) /
        C151945;
    const double C185 = C141 * C158;
    const double C183 = C143 * C158;
    const double C11305 = C11275 * C158;
    const double C70458 = C70428 * C158;
    const double C366 = C143 * C337;
    const double C684 = C141 * C337;
    const double C2766 = C2734 * C337;
    const double C11302 = C11273 * C337;
    const double C11300 = C11275 * C337;
    const double C24027 = C23995 * C337;
    const double C70455 = C70426 * C337;
    const double C70453 = C70428 * C337;
    const double C83582 = C152048 * C337;
    const double C547 = C143 * C518;
    const double C816 = C141 * C518;
    const double C7122 = C2734 * C518;
    const double C12241 = C11275 * C518;
    const double C15092 = C11273 * C518;
    const double C47683 = C23995 * C518;
    const double C71394 = C70428 * C518;
    const double C87899 = C152048 * C518;
    const double C98475 = C70426 * C518;
    const double C19667 = C19664 + C3848;
    const double C12542 = C12534 + C11816;
    const double C126249 = C126246 + C25085;
    const double C71695 = C71687 + C70969;
    const double C88864 = C88861 + C84640;
    const double C3626 = C3620 + C3605;
    const double C11598 = C11582 + C11546;
    const double C24863 = C24857 + C24842;
    const double C70751 = C70735 + C70699;
    const double C84418 = C84412 + C84397;
    const double C8147 = C8141 + C8126;
    const double C15566 = C15550 + C15514;
    const double C48696 = C48690 + C48675;
    const double C98949 = C98933 + C98897;
    const double C117024 = C117021 + C117012;
    const double C152404 = C152342 + C152402;
    const double C152627 = ae * C152618;
    const double C992 = (C152511 * C152618) / C151939;
    const double C152653 = ae * C152644;
    const double C367 = C143 * C338;
    const double C2763 = C2734 * C338;
    const double C12027 = C11275 * C338;
    const double C24024 = C23995 * C338;
    const double C71180 = C70428 * C338;
    const double C83579 = C152048 * C338;
    const double C548 = C143 * C519;
    const double C7119 = C2734 * C519;
    const double C15963 = C11275 * C519;
    const double C47680 = C23995 * C519;
    const double C99346 = C70428 * C519;
    const double C116110 = C152048 * C519;
    const double C11597 = C11581 + C11543;
    const double C11593 = C11577 + C11532;
    const double C11588 = C11572 + C11516;
    const double C11585 = C11569 + C11508;
    const double C12041 = C12037 + C12024;
    const double C12549 = C12541 + C12520;
    const double C12544 = C12536 + C12506;
    const double C12897 = C12893 + C12880;
    const double C13115 = C13111 + C13098;
    const double C13785 = C13781 + C13768;
    const double C15565 = C15549 + C15512;
    const double C15561 = C15545 + C15504;
    const double C15556 = C15540 + C15494;
    const double C15553 = C15537 + C15488;
    const double C15977 = C15973 + C15960;
    const double C17941 = C17937 + C17924;
    const double C70750 = C70734 + C70696;
    const double C70746 = C70730 + C70685;
    const double C70741 = C70725 + C70669;
    const double C70738 = C70722 + C70661;
    const double C71194 = C71190 + C71177;
    const double C71702 = C71694 + C71673;
    const double C71697 = C71689 + C71659;
    const double C72050 = C72046 + C72033;
    const double C72268 = C72264 + C72251;
    const double C72938 = C72934 + C72921;
    const double C98948 = C98932 + C98895;
    const double C98944 = C98928 + C98887;
    const double C98939 = C98923 + C98877;
    const double C98936 = C98920 + C98871;
    const double C99360 = C99356 + C99343;
    const double C101324 = C101320 + C101307;
    const double C152033 = C152032 - C152000;
    const double C24332 = C24314 + C24288;
    const double C24329 = C24311 + C24008;
    const double C24326 = C24308 + C24011;
    const double C24325 = C24307 + C24270;
    const double C24320 = C24302 + C24003;
    const double C24317 = C24299 + C24000;
    const double C24855 = C24849 + C24021;
    const double C24852 = C24846 + C24018;
    const double C25432 = C25420 + C24601;
    const double C25429 = C25417 + C24598;
    const double C25428 = C25416 + C24582;
    const double C25425 = C25413 + C24579;
    const double C25826 = C25822 + C24272;
    const double C26074 = C26068 + C24592;
    const double C26071 = C26065 + C24589;
    const double C26824 = C26820 + C25393;
    const double C48200 = C48182 + C48156;
    const double C48197 = C48179 + C24612;
    const double C48194 = C48176 + C24595;
    const double C48193 = C48175 + C27420;
    const double C48188 = C48170 + C24586;
    const double C48185 = C48167 + C24585;
    const double C48688 = C48682 + C47677;
    const double C48685 = C48679 + C25090;
    const double C48999 = C48996 + C24609;
    const double C49601 = C49597 + C27417;
    const double C50929 = C50926 + C48140;
    const double C126247 = C126244 + C25087;
    const double C35212 = C35208 * C153513;
    const double C35213 = C35209 * C153513;
    const double C39083 = C35209 * C153740;
    const double C137984 = C35209 * C98471;
    const double C36522 = C36514 * C153513;
    const double C35211 = C35207 * C153513;
    const double C36523 = C36515 * C153513;
    const double C40936 = C36515 * C153740;
    const double C139728 = C36515 * C98471;
    const double C35210 = C35206 * C153513;
    const double C39080 = C35206 * C153740;
    const double C137981 = C35206 * C98471;
    const double C39085 = C39082 * C153600;
    const double C137983 = C39082 * C153600;
    const double C37411 = C37403 * C153513;
    const double C42219 = C37403 * C153740;
    const double C140987 = C37403 * C98471;
    const double C39084 = C39081 * C153600;
    const double C137982 = C39081 * C153600;
    const double C37410 = C37402 * C153513;
    const double C40935 = C37402 * C153600;
    const double C139727 = C37402 * C153600;
    const double C42218 = C41228 * C153600;
    const double C140986 = C41228 * C153600;
    const double C3109 = C3107 * C153513;
    const double C4609 = C4605 * C153513;
    const double C3108 = C3106 * C153513;
    const double C5625 = C5621 * C153513;
    const double C93587 = C93586 + C93584;
    const double C102461 = C102458 + C102459;
    const double C93585 = C93581 + C93582;
    const double C102460 = C102456 + C102457;
    const double C95341 = C95339 + C95340;
    const double C104204 = C104202 + C104203;
    const double C96601 = C96598 + C96599;
    const double C105463 = C105461 + C105462;
    const double C12034 = C12025 + C11300;
    const double C71187 = C71178 + C70453;
    const double C15970 = C15961 + C12241;
    const double C99353 = C99344 + C71394;
    const double C19670 = C19667 + C19661;
    const double C12550 = C12542 + C12522;
    const double C126252 = C126249 + C126243;
    const double C71703 = C71695 + C71675;
    const double C88867 = C88864 + C88858;
    const double C152405 = C152404 + C152389;
    const double C681 =
        (5 * (3 * C152484 + C152478 + C152478 + C152162 * C152638) + C152627 +
         C152627 +
         C152162 *
             (4 * C152638 + C152628 + C152628 +
              C152162 *
                  (3 * C152636 + C152629 + C152629 +
                   C152162 *
                       (2 * C152634 + C152630 + C152630 +
                        C152162 * (C152617 + C152631 + C152631 +
                                   C152162 * (2 * ae * C152408 * C152361 +
                                              C152162 * C152408 *
                                                  (C152340 * C152341 +
                                                   C152166 * bs[9] *
                                                       std::pow(C152168, 9)) *
                                                  C152169)))))) /
        C151945;
    const double C1005 = C143 * C992;
    const double C12237 = C11275 * C992;
    const double C18783 = C2734 * C992;
    const double C71390 = C70428 * C992;
    const double C87896 = C152048 * C992;
    const double C125365 = C23995 * C992;
    const double C813 =
        (5 * (3 * C152587 + C152581 + C152581 + C152162 * C152664) + C152653 +
         C152653 +
         C152162 *
             (4 * C152664 + C152654 + C152654 +
              C152162 *
                  (3 * C152662 + C152655 + C152655 +
                   C152162 *
                       (2 * C152660 + C152656 + C152656 +
                        C152162 * (C152643 + C152657 + C152657 +
                                   C152162 * (2 * ae * C152511 * C152361 +
                                              C152162 * C152511 *
                                                  (C152340 * C152341 +
                                                   C152166 * bs[9] *
                                                       std::pow(C152168, 9)) *
                                                  C152169)))))) /
        C151945;
    const double C83842 = C152033 * C1226;
    const double C83836 = C152033 * C321;
    const double C83830 = C152033 * C318;
    const double C83824 = C152033 * C1227;
    const double C83812 = C152033 * C320;
    const double C83806 = C152033 * C319;
    const double C84392 = C152033 * C322;
    const double C84386 = C152033 * C317;
    const double C84957 = C152033 * C1799;
    const double C84951 = C152033 * C982;
    const double C84946 = C152033 * C981;
    const double C84940 = C152033 * C1800;
    const double C85367 = C152033 * C2989;
    const double C85611 = C152033 * C3327;
    const double C85605 = C152033 * C1369;
    const double C86365 = C152033 * C4143;
    const double C88506 = C152033 * C1368;
    const double C88500 = C152033 * C502;
    const double C88494 = C152033 * C499;
    const double C88492 = C152033 * C501;
    const double C88482 = C152033 * C500;
    const double C88853 = C152033 * C983;
    const double C89158 = C152033 * C498;
    const double C90349 = C152033 * C6218;
    const double C92108 = C152033 * C2152;
    const double C116550 = C152033 * C2151;
    const double C117007 = C152033 * C503;
    const double C119206 = C152033 * C7560;
    const double C134 =
        (((ae * -2 * C151938) / C151955 -
          (((C151940 * C151956) / C151945 + 2 * C151988) * be) / C151939 -
          C151959 / C151945) /
             C151946 +
         ((C151940 * C152014 + 2 * C152015) * ae) / C151939) /
            C151946 -
        ((C151940 *
              (C152014 / C151946 +
               ((C151940 * C152033 + 2 * C152030) * ae) / C151939 + C152026) +
          2 * (C152015 / C151946 +
               ((C151940 * C152030 + C153343) * ae) / C151939 + C152019)) *
         be) /
            C151939 +
        C152033 / C151946 + ((C151940 * C152026 + 2 * C152019) * ae) / C151939 +
        (-2 * C151991) / (C151939 * 4 * C151945);
    const double C136 =
        (C152014 / C151946 +
         ((C151940 * C152033 + 2 * C152030) * ae) / C151939 + C152026) /
            C151946 -
        ((C151940 * (C152033 / C151946 +
                     ((C151940 * C152026 + 2 * C152019) * ae) / C151939 +
                     (-2 * C151991) / C152046) +
          2 * (C152030 / C151946 +
               ((C151940 * C152019 + C153351) * ae) / C151939 + C152049)) *
         be) /
            C151939 +
        2 * (C152026 / C151946 +
             ((C152049 - C151998 / C152046) * ae) / C151939);
    const double C138 =
        (C152033 / C151946 +
         ((C151940 * C152026 + 2 * C152019) * ae) / C151939 +
         (-2 * C151991) / C152046) /
            C151946 -
        ((C151940 * (C152026 / C151946 +
                     ((C152049 - C151998 / C152046) * ae) / C151939) +
          2 * (C152019 / C151946 +
               ((C151940 * C152048 + C83541) * ae) / C151939)) *
         be) /
            C151939 +
        (-3 * C151991) / (C151939 * 4 * C151955);
    const double C11268 = C152014 / C151946 -
                          ((C151940 * C152033 + 2 * C152030) * be) / C151939 +
                          C152026;
    const double C11270 = C152033 / C151946 -
                          ((C151940 * C152026 + 2 * C152019) * be) / C151939 +
                          (-2 * C151991) / C152046;
    const double C70421 = C152014 / C151946 +
                          ((C151940 * C152033 + 2 * C152030) * ae) / C151939 +
                          C152026;
    const double C70423 = C152033 / C151946 +
                          ((C151940 * C152026 + 2 * C152019) * ae) / C151939 +
                          (-2 * C151991) / C152046;
    const double C24350 = C24332 + C24289;
    const double C24347 = C24329 + C24282;
    const double C24344 = C24326 + C24276;
    const double C24343 = C24325 + C24271;
    const double C24338 = C24320 + C24258;
    const double C24335 = C24317 + C24252;
    const double C24861 = C24855 + C24838;
    const double C24858 = C24852 + C24832;
    const double C25444 = C25432 + C25403;
    const double C25441 = C25429 + C25397;
    const double C25440 = C25428 + C25392;
    const double C25437 = C25425 + C25386;
    const double C25829 = C25826 + C25813;
    const double C26080 = C26074 + C26057;
    const double C26077 = C26071 + C26051;
    const double C26827 = C26824 + C26811;
    const double C48218 = C48200 + C48157;
    const double C48215 = C48197 + C48150;
    const double C48212 = C48194 + C48144;
    const double C48211 = C48193 + C48139;
    const double C48206 = C48188 + C48129;
    const double C48203 = C48185 + C48123;
    const double C48694 = C48688 + C48671;
    const double C48691 = C48685 + C48665;
    const double C49002 = C48999 + C48988;
    const double C49604 = C49601 + C49588;
    const double C50932 = C50929 + C50917;
    const double C126250 = C126247 + C126239;
    const double C39087 = C39085 + C39083;
    const double C137986 = C137983 + C137984;
    const double C39086 = C39080 + C39084;
    const double C137985 = C137981 + C137982;
    const double C40937 = C40935 + C40936;
    const double C139729 = C139727 + C139728;
    const double C42221 = C42218 + C42219;
    const double C140988 = C140986 + C140987;
    const double C12038 = C12034 + C11300;
    const double C71191 = C71187 + C70453;
    const double C15974 = C15970 + C12241;
    const double C99357 = C99353 + C71394;
    const double C152406 = ae * C152405;
    const double C159 = (6 * C152332 + C152162 * C152405 +
                         (5 * C152314 + C152162 * C152385) * ae) /
                        C151939;
    const double C680 = (C152408 * C152405) / C151939;
    const double C812 = (C152511 * C152405) / C151939;
    const double C83869 = C83842 + C83843;
    const double C83866 = C83836 + C83563;
    const double C83863 = C83830 + C83566;
    const double C83862 = C83824 + C83825;
    const double C83857 = C83812 + C83558;
    const double C83854 = C83806 + C83555;
    const double C84404 = C84392 + C83576;
    const double C84401 = C84386 + C83573;
    const double C84975 = C84957 + C84156;
    const double C84972 = C84951 + C84153;
    const double C84971 = C84946 + C84137;
    const double C84968 = C84940 + C84134;
    const double C85377 = C85367 + C83827;
    const double C85623 = C85611 + C84147;
    const double C85620 = C85605 + C84144;
    const double C86375 = C86365 + C84948;
    const double C88530 = C88506 + C84164;
    const double C88527 = C88500 + C84167;
    const double C88524 = C88494 + C84150;
    const double C88523 = C88492 + C84141;
    const double C88518 = C88482 + C84140;
    const double C88859 = C88853 + C84642;
    const double C89170 = C89158 + C84645;
    const double C90357 = C90349 + C86972;
    const double C92120 = C92108 + C86975;
    const double C116561 = C116550 + C88517;
    const double C117016 = C117007 + C89169;
    const double C119216 = C119206 + C92119;
    const double C11535 = C11268 * C321;
    const double C11527 = C11268 * C318;
    const double C11520 = C11268 * C320;
    const double C11503 = C11268 * C319;
    const double C12019 = C11268 * C317;
    const double C12515 = C11268 * C982;
    const double C12509 = C11268 * C981;
    const double C12875 = C11268 * C1227;
    const double C13093 = C11268 * C1369;
    const double C13763 = C11268 * C1800;
    const double C15507 = C11268 * C502;
    const double C15499 = C11268 * C499;
    const double C15497 = C11268 * C501;
    const double C15483 = C11268 * C500;
    const double C15955 = C11268 * C498;
    const double C17919 = C11268 * C2152;
    const double C11538 = C11270 * C322;
    const double C11529 = C11270 * C317;
    const double C11517 = C11270 * C321;
    const double C11505 = C11270 * C318;
    const double C12021 = C11270 * C316;
    const double C12517 = C11270 * C983;
    const double C12507 = C11270 * C982;
    const double C12877 = C11270 * C1226;
    const double C13095 = C11270 * C1368;
    const double C13765 = C11270 * C1799;
    const double C15509 = C11270 * C503;
    const double C15501 = C11270 * C498;
    const double C15495 = C11270 * C502;
    const double C15485 = C11270 * C499;
    const double C15957 = C11270 * C497;
    const double C17921 = C11270 * C2151;
    const double C70688 = C70421 * C321;
    const double C70680 = C70421 * C318;
    const double C70673 = C70421 * C320;
    const double C70656 = C70421 * C319;
    const double C71172 = C70421 * C317;
    const double C71668 = C70421 * C982;
    const double C71662 = C70421 * C981;
    const double C72028 = C70421 * C1227;
    const double C72246 = C70421 * C1369;
    const double C72916 = C70421 * C1800;
    const double C98890 = C70421 * C502;
    const double C98882 = C70421 * C499;
    const double C98880 = C70421 * C501;
    const double C98866 = C70421 * C500;
    const double C99338 = C70421 * C498;
    const double C101302 = C70421 * C2152;
    const double C70691 = C70423 * C322;
    const double C70682 = C70423 * C317;
    const double C70670 = C70423 * C321;
    const double C70658 = C70423 * C318;
    const double C71174 = C70423 * C316;
    const double C71670 = C70423 * C983;
    const double C71660 = C70423 * C982;
    const double C72030 = C70423 * C1226;
    const double C72248 = C70423 * C1368;
    const double C72918 = C70423 * C1799;
    const double C98892 = C70423 * C503;
    const double C98884 = C70423 * C498;
    const double C98878 = C70423 * C502;
    const double C98868 = C70423 * C499;
    const double C99340 = C70423 * C497;
    const double C101304 = C70423 * C2151;
    const double C24354 = C24348 + C24347;
    const double C25811 = C24342 + C24343;
    const double C24353 = C24338 + C24339;
    const double C126932 = C25442 + C25441;
    const double C126931 = C25441 + C25442;
    const double C126930 = C25439 + C25440;
    const double C126929 = C25440 + C25439;
    const double C26809 = C25436 + C25437;
    const double C128679 = C25437 + C25436;
    const double C49593 = C26078 + C26077;
    const double C127711 = C26077 + C26078;
    const double C48222 = C48216 + C48215;
    const double C50915 = C48210 + C48211;
    const double C48221 = C48206 + C48207;
    const double C12042 = C12038 + C12026;
    const double C71195 = C71191 + C71179;
    const double C15978 = C15974 + C15962;
    const double C99361 = C99357 + C99345;
    const double C167 =
        (6 * (4 * C152323 + C152330 + C152330 + C152162 * C152395) + C152406 +
         C152406 +
         C152162 *
             (5 * C152395 + C152403 + C152403 +
              C152162 *
                  (4 * C152390 + C152399 + C152399 +
                   C152162 *
                       (3 * C152383 + C152394 + C152394 +
                        C152162 *
                            (2 * C152376 + C152386 + C152386 +
                             C152162 *
                                 (C152368 + C152375 + C152375 +
                                  C152162 * (2 * ae * C152361 +
                                             C152162 *
                                                 (C152340 * C152341 +
                                                  C152166 * bs[9] *
                                                      std::pow(C152168, 9)) *
                                                 C152169))))))) /
        C151945;
    const double C184 = C143 * C159;
    const double C683 = C143 * C680;
    const double C11301 = C11275 * C680;
    const double C70454 = C70428 * C680;
    const double C815 = C143 * C812;
    const double C15091 = C11275 * C812;
    const double C98474 = C70428 * C812;
    const double C83887 = C83869 + C83843;
    const double C83884 = C83866 + C83563;
    const double C83881 = C83863 + C83566;
    const double C83880 = C83862 + C83825;
    const double C83875 = C83857 + C83558;
    const double C83872 = C83854 + C83555;
    const double C84410 = C84404 + C83576;
    const double C84407 = C84401 + C83573;
    const double C84987 = C84975 + C84156;
    const double C84984 = C84972 + C84153;
    const double C84983 = C84971 + C84137;
    const double C84980 = C84968 + C84134;
    const double C85381 = C85377 + C83827;
    const double C85629 = C85623 + C84147;
    const double C85626 = C85620 + C84144;
    const double C86379 = C86375 + C84948;
    const double C88545 = C88530 + C84164;
    const double C88542 = C88527 + C84167;
    const double C88539 = C88524 + C84150;
    const double C88538 = C88523 + C84141;
    const double C88533 = C88518 + C84140;
    const double C88862 = C88859 + C84642;
    const double C89173 = C89170 + C84645;
    const double C90360 = C90357 + C86972;
    const double C92123 = C92120 + C86975;
    const double C116565 = C116561 + C88517;
    const double C117019 = C117016 + C89169;
    const double C119219 = C119216 + C92119;
    const double C11563 = C11535 + C11536;
    const double C11559 = C11527 + C11288;
    const double C11558 = C11520 + C11521;
    const double C11551 = C11503 + C11281;
    const double C12031 = C12019 + C11297;
    const double C12531 = C12515 + C11813;
    const double C12530 = C12509 + C11796;
    const double C12887 = C12875 + C11523;
    const double C13105 = C13093 + C11805;
    const double C13775 = C13763 + C12511;
    const double C15531 = C15507 + C11824;
    const double C15527 = C15499 + C11809;
    const double C15526 = C15497 + C11801;
    const double C15519 = C15483 + C11800;
    const double C15967 = C15955 + C12244;
    const double C17931 = C17919 + C14312;
    const double C11564 = C11538 + C11539;
    const double C11560 = C11529 + C11287;
    const double C11557 = C11517 + C11518;
    const double C11552 = C11505 + C11282;
    const double C12032 = C12021 + C11298;
    const double C12532 = C12517 + C11814;
    const double C12529 = C12507 + C11795;
    const double C12888 = C12877 + C11524;
    const double C13106 = C13095 + C11806;
    const double C13776 = C13765 + C12512;
    const double C15532 = C15509 + C11823;
    const double C15528 = C15501 + C11810;
    const double C15525 = C15495 + C11802;
    const double C15520 = C15485 + C11799;
    const double C15968 = C15957 + C12243;
    const double C17932 = C17921 + C14311;
    const double C70716 = C70688 + C70689;
    const double C70712 = C70680 + C70441;
    const double C70711 = C70673 + C70674;
    const double C70704 = C70656 + C70434;
    const double C71184 = C71172 + C70450;
    const double C71684 = C71668 + C70966;
    const double C71683 = C71662 + C70949;
    const double C72040 = C72028 + C70676;
    const double C72258 = C72246 + C70958;
    const double C72928 = C72916 + C71664;
    const double C98914 = C98890 + C70977;
    const double C98910 = C98882 + C70962;
    const double C98909 = C98880 + C70954;
    const double C98902 = C98866 + C70953;
    const double C99350 = C99338 + C71397;
    const double C101314 = C101302 + C73465;
    const double C70717 = C70691 + C70692;
    const double C70713 = C70682 + C70440;
    const double C70710 = C70670 + C70671;
    const double C70705 = C70658 + C70435;
    const double C71185 = C71174 + C70451;
    const double C71685 = C71670 + C70967;
    const double C71682 = C71660 + C70948;
    const double C72041 = C72030 + C70677;
    const double C72259 = C72248 + C70959;
    const double C72929 = C72918 + C71665;
    const double C98915 = C98892 + C70976;
    const double C98911 = C98884 + C70963;
    const double C98908 = C98878 + C70955;
    const double C98903 = C98868 + C70952;
    const double C99351 = C99340 + C71396;
    const double C101315 = C101304 + C73464;
    const double C24356 = C24349 + C24354;
    const double C25821 = C24341 + C25811;
    const double C24355 = C24353 + C24340;
    const double C126936 = C25443 + C126932;
    const double C126935 = C126931 + C25443;
    const double C126934 = C25438 + C126930;
    const double C126933 = C126929 + C25438;
    const double C26819 = C25435 + C26809;
    const double C128680 = C128679 + C25435;
    const double C49600 = C26079 + C49593;
    const double C127712 = C127711 + C26079;
    const double C48224 = C48217 + C48222;
    const double C50925 = C48209 + C50915;
    const double C48223 = C48221 + C48208;
    const double C83905 = C83887 + C83844;
    const double C83902 = C83884 + C83837;
    const double C83899 = C83881 + C83831;
    const double C83898 = C83880 + C83826;
    const double C83893 = C83875 + C83813;
    const double C83890 = C83872 + C83807;
    const double C84416 = C84410 + C84393;
    const double C84413 = C84407 + C84387;
    const double C84999 = C84987 + C84958;
    const double C84996 = C84984 + C84952;
    const double C84995 = C84983 + C84947;
    const double C84992 = C84980 + C84941;
    const double C85384 = C85381 + C85368;
    const double C85635 = C85629 + C85612;
    const double C85632 = C85626 + C85606;
    const double C86382 = C86379 + C86366;
    const double C88560 = C88545 + C88507;
    const double C88557 = C88542 + C88501;
    const double C88554 = C88539 + C88495;
    const double C88553 = C88538 + C88493;
    const double C88548 = C88533 + C88483;
    const double C88865 = C88862 + C88854;
    const double C89176 = C89173 + C89159;
    const double C90363 = C90360 + C90350;
    const double C92126 = C92123 + C92109;
    const double C116568 = C116565 + C116551;
    const double C117022 = C117019 + C117008;
    const double C119222 = C119219 + C119207;
    const double C11579 = C11563 + C11536;
    const double C11575 = C11559 + C11288;
    const double C11574 = C11558 + C11521;
    const double C11567 = C11551 + C11281;
    const double C12035 = C12031 + C11297;
    const double C12539 = C12531 + C11813;
    const double C12538 = C12530 + C11796;
    const double C12891 = C12887 + C11523;
    const double C13109 = C13105 + C11805;
    const double C13779 = C13775 + C12511;
    const double C15547 = C15531 + C11824;
    const double C15543 = C15527 + C11809;
    const double C15542 = C15526 + C11801;
    const double C15535 = C15519 + C11800;
    const double C15971 = C15967 + C12244;
    const double C17935 = C17931 + C14312;
    const double C11580 = C11564 + C11539;
    const double C11576 = C11560 + C11287;
    const double C11573 = C11557 + C11518;
    const double C11568 = C11552 + C11282;
    const double C12036 = C12032 + C11298;
    const double C12540 = C12532 + C11814;
    const double C12537 = C12529 + C11795;
    const double C12892 = C12888 + C11524;
    const double C13110 = C13106 + C11806;
    const double C13780 = C13776 + C12512;
    const double C15548 = C15532 + C11823;
    const double C15544 = C15528 + C11810;
    const double C15541 = C15525 + C11802;
    const double C15536 = C15520 + C11799;
    const double C15972 = C15968 + C12243;
    const double C17936 = C17932 + C14311;
    const double C70732 = C70716 + C70689;
    const double C70728 = C70712 + C70441;
    const double C70727 = C70711 + C70674;
    const double C70720 = C70704 + C70434;
    const double C71188 = C71184 + C70450;
    const double C71692 = C71684 + C70966;
    const double C71691 = C71683 + C70949;
    const double C72044 = C72040 + C70676;
    const double C72262 = C72258 + C70958;
    const double C72932 = C72928 + C71664;
    const double C98930 = C98914 + C70977;
    const double C98926 = C98910 + C70962;
    const double C98925 = C98909 + C70954;
    const double C98918 = C98902 + C70953;
    const double C99354 = C99350 + C71397;
    const double C101318 = C101314 + C73465;
    const double C70733 = C70717 + C70692;
    const double C70729 = C70713 + C70440;
    const double C70726 = C70710 + C70671;
    const double C70721 = C70705 + C70435;
    const double C71189 = C71185 + C70451;
    const double C71693 = C71685 + C70967;
    const double C71690 = C71682 + C70948;
    const double C72045 = C72041 + C70677;
    const double C72263 = C72259 + C70959;
    const double C72933 = C72929 + C71665;
    const double C98931 = C98915 + C70976;
    const double C98927 = C98911 + C70963;
    const double C98924 = C98908 + C70955;
    const double C98919 = C98903 + C70952;
    const double C99355 = C99351 + C71396;
    const double C101319 = C101315 + C73464;
    const double C24358 = C24356 * C153513;
    const double C25825 = C25821 * C153513;
    const double C24357 = C24355 * C153513;
    const double C26823 = C26819 * C153513;
    const double C83909 = C83903 + C83902;
    const double C85366 = C83897 + C83898;
    const double C83908 = C83893 + C83894;
    const double C89568 = C84997 + C84996;
    const double C89567 = C84996 + C84997;
    const double C89566 = C84994 + C84995;
    const double C89565 = C84995 + C84994;
    const double C86364 = C84991 + C84992;
    const double C91332 = C84992 + C84991;
    const double C90348 = C85632 + C85633;
    const double C90347 = C85633 + C85632;
    const double C116556 = C88558 + C88557;
    const double C116549 = C88553 + C88552;
    const double C119205 = C92127 + C92126;
    const double C11595 = C11579 + C11537;
    const double C11591 = C11575 + C11528;
    const double C11590 = C11574 + C11522;
    const double C11583 = C11567 + C11504;
    const double C12039 = C12035 + C12020;
    const double C12547 = C12539 + C12516;
    const double C12546 = C12538 + C12510;
    const double C12895 = C12891 + C12876;
    const double C13113 = C13109 + C13094;
    const double C13783 = C13779 + C13764;
    const double C15563 = C15547 + C15508;
    const double C15559 = C15543 + C15500;
    const double C15558 = C15542 + C15498;
    const double C15551 = C15535 + C15484;
    const double C15975 = C15971 + C15956;
    const double C17939 = C17935 + C17920;
    const double C11596 = C11580 + C11540;
    const double C11592 = C11576 + C11530;
    const double C11589 = C11573 + C11519;
    const double C11584 = C11568 + C11506;
    const double C12040 = C12036 + C12022;
    const double C12548 = C12540 + C12518;
    const double C12545 = C12537 + C12508;
    const double C12896 = C12892 + C12878;
    const double C13114 = C13110 + C13096;
    const double C13784 = C13780 + C13766;
    const double C15564 = C15548 + C15510;
    const double C15560 = C15544 + C15502;
    const double C15557 = C15541 + C15496;
    const double C15552 = C15536 + C15486;
    const double C15976 = C15972 + C15958;
    const double C17940 = C17936 + C17922;
    const double C70748 = C70732 + C70690;
    const double C70744 = C70728 + C70681;
    const double C70743 = C70727 + C70675;
    const double C70736 = C70720 + C70657;
    const double C71192 = C71188 + C71173;
    const double C71700 = C71692 + C71669;
    const double C71699 = C71691 + C71663;
    const double C72048 = C72044 + C72029;
    const double C72266 = C72262 + C72247;
    const double C72936 = C72932 + C72917;
    const double C98946 = C98930 + C98891;
    const double C98942 = C98926 + C98883;
    const double C98941 = C98925 + C98881;
    const double C98934 = C98918 + C98867;
    const double C99358 = C99354 + C99339;
    const double C101322 = C101318 + C101303;
    const double C70749 = C70733 + C70693;
    const double C70745 = C70729 + C70683;
    const double C70742 = C70726 + C70672;
    const double C70737 = C70721 + C70659;
    const double C71193 = C71189 + C71175;
    const double C71701 = C71693 + C71671;
    const double C71698 = C71690 + C71661;
    const double C72049 = C72045 + C72031;
    const double C72267 = C72263 + C72249;
    const double C72937 = C72933 + C72919;
    const double C98947 = C98931 + C98893;
    const double C98943 = C98927 + C98885;
    const double C98940 = C98924 + C98879;
    const double C98935 = C98919 + C98869;
    const double C99359 = C99355 + C99341;
    const double C101323 = C101319 + C101305;
    const double C83911 = C83904 + C83909;
    const double C85376 = C83896 + C85366;
    const double C83910 = C83908 + C83895;
    const double C89572 = C84998 + C89568;
    const double C89571 = C89567 + C84998;
    const double C89570 = C84993 + C89566;
    const double C89569 = C89565 + C84993;
    const double C86374 = C84990 + C86364;
    const double C91333 = C91332 + C84990;
    const double C90356 = C90348 + C85634;
    const double C90355 = C85634 + C90347;
    const double C116564 = C88559 + C116556;
    const double C116560 = C116549 + C88551;
    const double C119215 = C92128 + C119205;
    const double C83913 = C83911 * C153513;
    const double C85380 = C85376 * C153513;
    const double C83912 = C83910 * C153513;
    const double C86378 = C86374 * C153513;
    d2ee[0] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((C152033 * C144 + C83552 + C83552 + C153343 * C160 +
             C152026 * C145 + C83553 + C83553 + C153351 * C161 + C83549 * C146 +
             C83554 + C83554 + C83541 * C162) *
                C153513 * C153556 +
            (C83890 + C83891 + C83892) * C153513 * C153563 + C83912 * C83544) *
               C153413 * C153724 -
           ((C83896 + C83897 + C83898) * C153513 * C83544 +
            (C83895 + C83894 + C83893) * C153513 * C153563 +
            (C83892 + C83891 + C83890) * C153513 * C153556) *
               C153413 * C153449) *
              C153793 +
          (((C83899 + C83900 + C83901) * C153513 * C153556 +
            (C83902 + C83903 + C83904) * C153513 * C153563 +
            (C83905 + C83906 + C83907) * C153513 * C83544) *
               C153413 * C153449 -
           (C83913 * C83544 + (C83901 + C83900 + C83899) * C153513 * C153563 +
            (C83549 * C147 + C83567 + C83567 + C83541 * C163 + C152026 * C146 +
             C83568 + C83568 + C153351 * C162 + C152033 * C145 + C83569 +
             C83569 + C153343 * C161) *
                C153513 * C153556) *
               C153413 * C153724) *
              C153794 +
          (((C152033 * C146 + C83570 + C83570 + C153343 * C162 +
             C152026 * C147 + C83571 + C83571 + C153351 * C163 + C83549 * C148 +
             C83572 + C83572 + C83541 * C164) *
                C153513 * C153556 +
            (C84413 + C84414 + C84415) * C153513 * C153563 +
            (C84416 + C84417 + C84418) * C153513 * C83544) *
               C153413 * C153724 -
           ((C83549 * C1223 + C84398 + C84398 + C83541 * C1233 +
             C152026 * C1224 + C84399 + C84399 + C153351 * C1234 +
             C152033 * C1225 + C84400 + C84400 + C153343 * C1235) *
                C153513 * C83544 +
            (C84418 + C84417 + C84416) * C153513 * C153563 +
            (C84415 + C84414 + C84413) * C153513 * C153556) *
               C153413 * C153449) *
              C678)) /
        (p * q * std::sqrt(p + q));
    d2ee[1] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C152033 * C144 + C83552 + C83552 + C153343 * C160 +
              C152026 * C145 + C83553 + C83553 + C153351 * C161 +
              C83549 * C146 + C83554 + C83554 + C83541 * C162) *
                 C153513 * C153556 +
             (C83890 + C83891 + C83892) * C153513 * C153563 + C83912 * C83544) *
                C153725 -
            ((C84990 + C84991 + C84992) * C153513 * C83544 +
             (C84993 + C84994 + C84995) * C153513 * C153563 +
             (C83549 * C498 + C84138 + C84138 + C83541 * C522 + C152026 * C499 +
              C84139 + C84139 + C153351 * C523 + C152033 * C500 + C84140 +
              C84140 + C153343 * C524) *
                 C153513 * C153556) *
                C153477) *
               C153724 +
           (((C84995 + C84994 + C84993) * C153513 * C153556 +
             (C84992 + C84991 + C84990) * C153513 * C153563 +
             (C152033 * C4143 + C84948 + C84948 + C153343 * C4151 +
              C152026 * C4144 + C84949 + C84949 + C153351 * C4152 +
              C83549 * C4145 + C84950 + C84950 + C83541 * C4153) *
                 C153513 * C83544) *
                C153477 -
            ((C83896 + C83897 + C83898) * C153513 * C83544 +
             (C83895 + C83894 + C83893) * C153513 * C153563 +
             (C83892 + C83891 + C83890) * C153513 * C153556) *
                C153725) *
               C153449) *
              C313 +
          ((((C152033 * C499 + C84150 + C84150 + C153343 * C523 +
              C152026 * C498 + C84151 + C84151 + C153351 * C522 +
              C83549 * C497 + C84152 + C84152 + C83541 * C521) *
                 C153513 * C153556 +
             (C84996 + C84997 + C84998) * C153513 * C153563 +
             (C84999 + C85000 + C85001) * C153513 * C83544) *
                C153477 -
            (C83913 * C83544 + (C83901 + C83900 + C83899) * C153513 * C153563 +
             (C83549 * C147 + C83567 + C83567 + C83541 * C163 + C152026 * C146 +
              C83568 + C83568 + C153351 * C162 + C152033 * C145 + C83569 +
              C83569 + C153343 * C161) *
                 C153513 * C153556) *
                C153725) *
               C153724 +
           (((C83899 + C83900 + C83901) * C153513 * C153556 +
             (C83902 + C83903 + C83904) * C153513 * C153563 +
             (C83905 + C83906 + C83907) * C153513 * C83544) *
                C153725 -
            ((C83549 * C4146 + C84963 + C84963 + C83541 * C4154 +
              C152026 * C4145 + C84964 + C84964 + C153351 * C4153 +
              C152033 * C4144 + C84965 + C84965 + C153343 * C4152) *
                 C153513 * C83544 +
             (C85001 + C85000 + C84999) * C153513 * C153563 +
             (C84998 + C84997 + C84996) * C153513 * C153556) *
                C153477) *
               C153449) *
              C153384)) /
        (p * q * std::sqrt(p + q));
    d2ee[2] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C152033 * C144 + C83552 + C83552 + C153343 * C160 +
             C152026 * C145 + C83553 + C83553 + C153351 * C161 + C83549 * C146 +
             C83554 + C83554 + C83541 * C162) *
                C153513 * C153556 +
            (C83890 + C83891 + C83892) * C153513 * C153563 + C83912 * C83544) *
               C153413 * C310 -
           ((C83896 + C83897 + C83898) * C153513 * C83544 +
            (C83895 + C83894 + C83893) * C153513 * C153563 +
            (C83892 + C83891 + C83890) * C153513 * C153556) *
               C153413 * C311 +
           (C83912 * C153556 + (C83898 + C83897 + C83896) * C153513 * C153563 +
            (C152033 * C2989 + C83827 + C83827 + C153343 * C2997 +
             C152026 * C2990 + C83828 + C83828 + C153351 * C2998 +
             C83549 * C2991 + C83829 + C83829 + C83541 * C2999) *
                C153513 * C83544) *
               C153413 * C312) *
              C313 +
          (((C83899 + C83900 + C83901) * C153513 * C153556 +
            (C83902 + C83903 + C83904) * C153513 * C153563 +
            (C83905 + C83906 + C83907) * C153513 * C83544) *
               C153413 * C311 -
           (C83913 * C83544 + (C83901 + C83900 + C83899) * C153513 * C153563 +
            (C83549 * C147 + C83567 + C83567 + C83541 * C163 + C152026 * C146 +
             C83568 + C83568 + C153351 * C162 + C152033 * C145 + C83569 +
             C83569 + C153343 * C161) *
                C153513 * C153556) *
               C153413 * C310 -
           ((C83549 * C2992 + C83851 + C83851 + C83541 * C3000 +
             C152026 * C2991 + C83852 + C83852 + C153351 * C2999 +
             C152033 * C2990 + C83853 + C83853 + C153343 * C2998) *
                C153513 * C83544 +
            (C83907 + C83906 + C83905) * C153513 * C153563 + C83913 * C153556) *
               C153413 * C312) *
              C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C152033 * C144 + C83552 + C83552 + C153343 * C160 + C152026 * C145 +
            C83553 + C83553 + C153351 * C161 + C83549 * C146 + C83554 + C83554 +
            C83541 * C162) *
               C153513 * C153556 +
           (C152033 * C319 + C83555 + C83555 + C153343 * C343 + C152026 * C318 +
            C83556 + C83556 + C153351 * C342 + C83549 * C317 + C83557 + C83557 +
            C83541 * C341) *
               C153513 * C153563 +
           (C152033 * C320 + C83558 + C83558 + C153343 * C344 + C152026 * C321 +
            C83559 + C83559 + C153351 * C345 + C83549 * C322 + C83560 + C83560 +
            C83541 * C346) *
               C153513 * C83544) *
              C153413 * C153397 * C130 -
          ((C83549 * C323 + C83561 + C83561 + C83541 * C347 + C152026 * C322 +
            C83562 + C83562 + C153351 * C346 + C152033 * C321 + C83563 +
            C83563 + C153343 * C345) *
               C153513 * C83544 +
           (C83549 * C316 + C83564 + C83564 + C83541 * C340 + C152026 * C317 +
            C83565 + C83565 + C153351 * C341 + C152033 * C318 + C83566 +
            C83566 + C153343 * C342) *
               C153513 * C153563 +
           (C83549 * C147 + C83567 + C83567 + C83541 * C163 + C152026 * C146 +
            C83568 + C83568 + C153351 * C162 + C152033 * C145 + C83569 +
            C83569 + C153343 * C161) *
               C153513 * C153556) *
              C153413 * C153397 * C131 +
          ((C152033 * C146 + C83570 + C83570 + C153343 * C162 + C152026 * C147 +
            C83571 + C83571 + C153351 * C163 + C83549 * C148 + C83572 + C83572 +
            C83541 * C164) *
               C153513 * C153556 +
           (C152033 * C317 + C83573 + C83573 + C153343 * C341 + C152026 * C316 +
            C83574 + C83574 + C153351 * C340 + C83549 * C315 + C83575 + C83575 +
            C83541 * C339) *
               C153513 * C153563 +
           (C152033 * C322 + C83576 + C83576 + C153343 * C346 + C152026 * C323 +
            C83577 + C83577 + C153351 * C347 + C83549 * C324 + C83578 + C83578 +
            C83541 * C348) *
               C153513 * C83544) *
              C153413 * C153397 * C132 -
          ((C83549 * C326 + C83579 + C83579 + C83541 * C350 + C152026 * C324 +
            C83580 + C83580 + C153351 * C348 + C152033 * C323 + C83581 +
            C83581 + C153343 * C347) *
               C153513 * C83544 +
           (C83549 * C325 + C83582 + C83582 + C83541 * C349 + C152026 * C315 +
            C83583 + C83583 + C153351 * C339 + C152033 * C316 + C83584 +
            C83584 + C153343 * C340) *
               C153513 * C153563 +
           (C83549 * C149 + C83585 + C83585 + C83541 * C165 + C152026 * C148 +
            C83586 + C83586 + C153351 * C164 + C152033 * C147 + C83587 +
            C83587 + C153343 * C163) *
               C153513 * C153556) *
              C153413 * C153397 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C152033 * C144 + C83552 + C83552 + C153343 * C160 +
             C152026 * C145 + C83553 + C83553 + C153351 * C161 + C83549 * C146 +
             C83554 + C83554 + C83541 * C162) *
                C153513 * C153556 +
            (C83890 + C83891 + C83892) * C153513 * C153563 + C83912 * C83544) *
               C493 -
           ((C83549 * C1798 + C84132 + C84132 + C83541 * C1808 +
             C152026 * C1799 + C84133 + C84133 + C153351 * C1809 +
             C152033 * C1800 + C84134 + C84134 + C153343 * C1810) *
                C153513 * C83544 +
            (C83549 * C983 + C84135 + C84135 + C83541 * C995 + C152026 * C982 +
             C84136 + C84136 + C153351 * C994 + C152033 * C981 + C84137 +
             C84137 + C153343 * C993) *
                C153513 * C153563 +
            (C83549 * C498 + C84138 + C84138 + C83541 * C522 + C152026 * C499 +
             C84139 + C84139 + C153351 * C523 + C152033 * C500 + C84140 +
             C84140 + C153343 * C524) *
                C153513 * C153556) *
               C494 +
           ((C152033 * C501 + C84141 + C84141 + C153343 * C525 +
             C152026 * C502 + C84142 + C84142 + C153351 * C526 + C83549 * C503 +
             C84143 + C84143 + C83541 * C527) *
                C153513 * C153556 +
            (C152033 * C1369 + C84144 + C84144 + C153343 * C1379 +
             C152026 * C1368 + C84145 + C84145 + C153351 * C1378 +
             C83549 * C1367 + C84146 + C84146 + C83541 * C1377) *
                C153513 * C153563 +
            (C152033 * C3327 + C84147 + C84147 + C153343 * C3335 +
             C152026 * C3328 + C84148 + C84148 + C153351 * C3336 +
             C83549 * C3329 + C84149 + C84149 + C83541 * C3337) *
                C153513 * C83544) *
               C495) *
              C153397 * C313 +
          (((C152033 * C499 + C84150 + C84150 + C153343 * C523 +
             C152026 * C498 + C84151 + C84151 + C153351 * C522 + C83549 * C497 +
             C84152 + C84152 + C83541 * C521) *
                C153513 * C153556 +
            (C152033 * C982 + C84153 + C84153 + C153343 * C994 +
             C152026 * C983 + C84154 + C84154 + C153351 * C995 + C83549 * C984 +
             C84155 + C84155 + C83541 * C996) *
                C153513 * C153563 +
            (C152033 * C1799 + C84156 + C84156 + C153343 * C1809 +
             C152026 * C1798 + C84157 + C84157 + C153351 * C1808 +
             C83549 * C1797 + C84158 + C84158 + C83541 * C1807) *
                C153513 * C83544) *
               C494 -
           (C83913 * C83544 + (C83901 + C83900 + C83899) * C153513 * C153563 +
            (C83549 * C147 + C83567 + C83567 + C83541 * C163 + C152026 * C146 +
             C83568 + C83568 + C153351 * C162 + C152033 * C145 + C83569 +
             C83569 + C153343 * C161) *
                C153513 * C153556) *
               C493 -
           ((C83549 * C3330 + C84159 + C84159 + C83541 * C3338 +
             C152026 * C3329 + C84160 + C84160 + C153351 * C3337 +
             C152033 * C3328 + C84161 + C84161 + C153343 * C3336) *
                C153513 * C83544 +
            (C83549 * C1366 + C84162 + C84162 + C83541 * C1376 +
             C152026 * C1367 + C84163 + C84163 + C153351 * C1377 +
             C152033 * C1368 + C84164 + C84164 + C153343 * C1378) *
                C153513 * C153563 +
            (C83549 * C504 + C84165 + C84165 + C83541 * C528 + C152026 * C503 +
             C84166 + C84166 + C153351 * C527 + C152033 * C502 + C84167 +
             C84167 + C153343 * C526) *
                C153513 * C153556) *
               C495) *
              C153397 * C153384)) /
            (p * q * std::sqrt(p + q));
    d2ee[3] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((C152033 * C144 + C83552 + C83552 + C153343 * C160 +
             C152026 * C145 + C83553 + C83553 + C153351 * C161 + C83549 * C146 +
             C83554 + C83554 + C83541 * C162) *
                C153513 * C153556 +
            (C83890 + C83891 + C83892) * C153513 * C153563 + C83912 * C83544) *
               C153725 -
           ((C83549 * C1798 + C84132 + C84132 + C83541 * C1808 +
             C152026 * C1799 + C84133 + C84133 + C153351 * C1809 +
             C152033 * C1800 + C84134 + C84134 + C153343 * C1810) *
                C153513 * C83544 +
            (C83549 * C983 + C84135 + C84135 + C83541 * C995 + C152026 * C982 +
             C84136 + C84136 + C153351 * C994 + C152033 * C981 + C84137 +
             C84137 + C153343 * C993) *
                C153513 * C153563 +
            (C83549 * C498 + C84138 + C84138 + C83541 * C522 + C152026 * C499 +
             C84139 + C84139 + C153351 * C523 + C152033 * C500 + C84140 +
             C84140 + C153343 * C524) *
                C153513 * C153556) *
               C153477) *
              C153397 * C153793 +
          (((C152033 * C499 + C84150 + C84150 + C153343 * C523 +
             C152026 * C498 + C84151 + C84151 + C153351 * C522 + C83549 * C497 +
             C84152 + C84152 + C83541 * C521) *
                C153513 * C153556 +
            (C152033 * C982 + C84153 + C84153 + C153343 * C994 +
             C152026 * C983 + C84154 + C84154 + C153351 * C995 + C83549 * C984 +
             C84155 + C84155 + C83541 * C996) *
                C153513 * C153563 +
            (C152033 * C1799 + C84156 + C84156 + C153343 * C1809 +
             C152026 * C1798 + C84157 + C84157 + C153351 * C1808 +
             C83549 * C1797 + C84158 + C84158 + C83541 * C1807) *
                C153513 * C83544) *
               C153477 -
           (C83913 * C83544 + (C83901 + C83900 + C83899) * C153513 * C153563 +
            (C83549 * C147 + C83567 + C83567 + C83541 * C163 + C152026 * C146 +
             C83568 + C83568 + C153351 * C162 + C152033 * C145 + C83569 +
             C83569 + C153343 * C161) *
                C153513 * C153556) *
               C153725) *
              C153397 * C153794 +
          (((C152033 * C146 + C83570 + C83570 + C153343 * C162 +
             C152026 * C147 + C83571 + C83571 + C153351 * C163 + C83549 * C148 +
             C83572 + C83572 + C83541 * C164) *
                C153513 * C153556 +
            (C84413 + C84414 + C84415) * C153513 * C153563 +
            (C84416 + C84417 + C84418) * C153513 * C83544) *
               C153725 -
           ((C83549 * C1796 + C84637 + C84637 + C83541 * C1806 +
             C152026 * C1797 + C84638 + C84638 + C153351 * C1807 +
             C152033 * C1798 + C84639 + C84639 + C153343 * C1808) *
                C153513 * C83544 +
            (C83549 * C985 + C84640 + C84640 + C83541 * C997 + C152026 * C984 +
             C84641 + C84641 + C153351 * C996 + C152033 * C983 + C84642 +
             C84642 + C153343 * C995) *
                C153513 * C153563 +
            (C83549 * C496 + C84643 + C84643 + C83541 * C520 + C152026 * C497 +
             C84644 + C84644 + C153351 * C521 + C152033 * C498 + C84645 +
             C84645 + C153343 * C522) *
                C153513 * C153556) *
               C153477) *
              C153397 * C678)) /
        (p * q * std::sqrt(p + q));
    d2ee[4] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((C152033 * C144 + C83552 + C83552 + C153343 * C160 + C152026 * C145 +
            C83553 + C83553 + C153351 * C161 + C83549 * C146 + C83554 + C83554 +
            C83541 * C162) *
               C153513 * C153556 +
           (C152033 * C319 + C83555 + C83555 + C153343 * C343 + C152026 * C318 +
            C83556 + C83556 + C153351 * C342 + C83549 * C317 + C83557 + C83557 +
            C83541 * C341) *
               C153513 * C153563 +
           (C152033 * C320 + C83558 + C83558 + C153343 * C344 + C152026 * C321 +
            C83559 + C83559 + C153351 * C345 + C83549 * C322 + C83560 + C83560 +
            C83541 * C346) *
               C153513 * C83544) *
              C153413 * C153397 * C130 -
          ((C83549 * C323 + C83561 + C83561 + C83541 * C347 + C152026 * C322 +
            C83562 + C83562 + C153351 * C346 + C152033 * C321 + C83563 +
            C83563 + C153343 * C345) *
               C153513 * C83544 +
           (C83549 * C316 + C83564 + C83564 + C83541 * C340 + C152026 * C317 +
            C83565 + C83565 + C153351 * C341 + C152033 * C318 + C83566 +
            C83566 + C153343 * C342) *
               C153513 * C153563 +
           (C83549 * C147 + C83567 + C83567 + C83541 * C163 + C152026 * C146 +
            C83568 + C83568 + C153351 * C162 + C152033 * C145 + C83569 +
            C83569 + C153343 * C161) *
               C153513 * C153556) *
              C153413 * C153397 * C131 +
          ((C152033 * C146 + C83570 + C83570 + C153343 * C162 + C152026 * C147 +
            C83571 + C83571 + C153351 * C163 + C83549 * C148 + C83572 + C83572 +
            C83541 * C164) *
               C153513 * C153556 +
           (C152033 * C317 + C83573 + C83573 + C153343 * C341 + C152026 * C316 +
            C83574 + C83574 + C153351 * C340 + C83549 * C315 + C83575 + C83575 +
            C83541 * C339) *
               C153513 * C153563 +
           (C152033 * C322 + C83576 + C83576 + C153343 * C346 + C152026 * C323 +
            C83577 + C83577 + C153351 * C347 + C83549 * C324 + C83578 + C83578 +
            C83541 * C348) *
               C153513 * C83544) *
              C153413 * C153397 * C132 -
          ((C83549 * C326 + C83579 + C83579 + C83541 * C350 + C152026 * C324 +
            C83580 + C83580 + C153351 * C348 + C152033 * C323 + C83581 +
            C83581 + C153343 * C347) *
               C153513 * C83544 +
           (C83549 * C325 + C83582 + C83582 + C83541 * C349 + C152026 * C315 +
            C83583 + C83583 + C153351 * C339 + C152033 * C316 + C83584 +
            C83584 + C153343 * C340) *
               C153513 * C153563 +
           (C83549 * C149 + C83585 + C83585 + C83541 * C165 + C152026 * C148 +
            C83586 + C83586 + C153351 * C164 + C152033 * C147 + C83587 +
            C83587 + C153343 * C163) *
               C153513 * C153556) *
              C153413 * C153397 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C152033 * C144 + C83552 + C83552 + C153343 * C160 +
             C152026 * C145 + C83553 + C83553 + C153351 * C161 + C83549 * C146 +
             C83554 + C83554 + C83541 * C162) *
                C153513 * C153556 +
            (C83890 + C83891 + C83892) * C153513 * C153563 + C83912 * C83544) *
               C153413 * C310 -
           ((C83896 + C83897 + C83898) * C153513 * C83544 +
            (C83895 + C83894 + C83893) * C153513 * C153563 +
            (C83892 + C83891 + C83890) * C153513 * C153556) *
               C153413 * C311 +
           (C83912 * C153556 + (C83898 + C83897 + C83896) * C153513 * C153563 +
            (C152033 * C2989 + C83827 + C83827 + C153343 * C2997 +
             C152026 * C2990 + C83828 + C83828 + C153351 * C2998 +
             C83549 * C2991 + C83829 + C83829 + C83541 * C2999) *
                C153513 * C83544) *
               C153413 * C312) *
              C313 +
          (((C83899 + C83900 + C83901) * C153513 * C153556 +
            (C83902 + C83903 + C83904) * C153513 * C153563 +
            (C83905 + C83906 + C83907) * C153513 * C83544) *
               C153413 * C311 -
           (C83913 * C83544 + (C83901 + C83900 + C83899) * C153513 * C153563 +
            (C83549 * C147 + C83567 + C83567 + C83541 * C163 + C152026 * C146 +
             C83568 + C83568 + C153351 * C162 + C152033 * C145 + C83569 +
             C83569 + C153343 * C161) *
                C153513 * C153556) *
               C153413 * C310 -
           ((C83549 * C2992 + C83851 + C83851 + C83541 * C3000 +
             C152026 * C2991 + C83852 + C83852 + C153351 * C2999 +
             C152033 * C2990 + C83853 + C83853 + C153343 * C2998) *
                C153513 * C83544 +
            (C83907 + C83906 + C83905) * C153513 * C153563 + C83913 * C153556) *
               C153413 * C312) *
              C153384)) /
            (p * q * std::sqrt(p + q));
    d2ee[5] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((C152033 * C144 + C83552 + C83552 + C153343 * C160 +
             C152026 * C145 + C83553 + C83553 + C153351 * C161 + C83549 * C146 +
             C83554 + C83554 + C83541 * C162) *
                C153513 * C153556 +
            (C83890 + C83891 + C83892) * C153513 * C153563 + C83912 * C83544) *
               C153413 * C153795 -
           (C85380 * C83544 + (C83895 + C83894 + C83893) * C153513 * C153563 +
            (C83892 + C83891 + C83890) * C153513 * C153556) *
               C153413 * C153796 +
           (C83912 * C153556 + (C83898 + C83897 + C83896) * C153513 * C153563 +
            (C85384 + C85385 + C85386) * C153513 * C83544) *
               C153413 * C1509) *
              C153716 +
          (((C83899 + C83900 + C83901) * C153513 * C153556 +
            (C83902 + C83903 + C83904) * C153513 * C153563 +
            (C83905 + C83906 + C83907) * C153513 * C83544) *
               C153413 * C153796 -
           (C83913 * C83544 + (C83901 + C83900 + C83899) * C153513 * C153563 +
            (C83549 * C147 + C83567 + C83567 + C83541 * C163 + C152026 * C146 +
             C83568 + C83568 + C153351 * C162 + C152033 * C145 + C83569 +
             C83569 + C153343 * C161) *
                C153513 * C153556) *
               C153413 * C153795 -
           ((C83549 * C2992 + C83851 + C83851 + C83541 * C3000 +
             C152026 * C2991 + C83852 + C83852 + C153351 * C2999 +
             C152033 * C2990 + C83853 + C83853 + C153343 * C2998) *
                C153513 * C83544 +
            (C83907 + C83906 + C83905) * C153513 * C153563 + C83913 * C153556) *
               C153413 * C1509) *
              C153384)) /
        (p * q * std::sqrt(p + q));
    d2ee[6] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((C152033 * C144 + C83552 + C83552 + C153343 * C160 +
             C152026 * C145 + C83553 + C83553 + C153351 * C161 + C83549 * C146 +
             C83554 + C83554 + C83541 * C162) *
                C153513 * C153556 +
            (C83890 + C83891 + C83892) * C153513 * C153563 + C83912 * C83544) *
               C153725 -
           (C86378 * C83544 + (C84993 + C84994 + C84995) * C153513 * C153563 +
            (C83549 * C498 + C84138 + C84138 + C83541 * C522 + C152026 * C499 +
             C84139 + C84139 + C153351 * C523 + C152033 * C500 + C84140 +
             C84140 + C153343 * C524) *
                C153513 * C153556) *
               C153477) *
              C153795 +
          (((C84995 + C84994 + C84993) * C153513 * C153556 +
            (C84992 + C84991 + C84990) * C153513 * C153563 +
            (C86382 + C86383 + C86384) * C153513 * C83544) *
               C153477 -
           (C85380 * C83544 + (C83895 + C83894 + C83893) * C153513 * C153563 +
            (C83892 + C83891 + C83890) * C153513 * C153556) *
               C153725) *
              C153796 +
          ((C83912 * C153556 + (C83898 + C83897 + C83896) * C153513 * C153563 +
            (C85384 + C85385 + C85386) * C153513 * C83544) *
               C153725 -
           ((C83549 * C5601 + C86371 + C86371 + C83541 * C5607 +
             C152026 * C5602 + C86372 + C86372 + C153351 * C5608 +
             C152033 * C5603 + C86373 + C86373 + C153343 * C5609) *
                C153513 * C83544 +
            (C86384 + C86383 + C86382) * C153513 * C153563 + C86378 * C153556) *
               C153477) *
              C1509) *
         C153378) /
        (p * q * std::sqrt(p + q));
    d2ee[7] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C152033 * C144 + C83552 + C83552 + C153343 * C160 + C152026 * C145 +
            C83553 + C83553 + C153351 * C161 + C83549 * C146 + C83554 + C83554 +
            C83541 * C162) *
               C153513 * C153556 +
           (C83890 + C83891 + C83892) * C153513 * C153563 + C83912 * C83544) *
              C153413 * C1218 -
          (C85380 * C83544 + (C83895 + C83894 + C83893) * C153513 * C153563 +
           (C83892 + C83891 + C83890) * C153513 * C153556) *
              C153413 * C1219 +
          (C83912 * C153556 + (C83898 + C83897 + C83896) * C153513 * C153563 +
           (C85384 + C85385 + C85386) * C153513 * C83544) *
              C153413 * C1220 -
          ((C83549 * C4585 + C85373 + C85373 + C83541 * C4591 +
            C152026 * C4586 + C85374 + C85374 + C153351 * C4592 +
            C152033 * C4587 + C85375 + C85375 + C153343 * C4593) *
               C153513 * C83544 +
           (C85386 + C85385 + C85384) * C153513 * C153563 + C85380 * C153556) *
              C153413 * C1221) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C152033 * C144 + C83552 + C83552 + C153343 * C160 +
             C152026 * C145 + C83553 + C83553 + C153351 * C161 + C83549 * C146 +
             C83554 + C83554 + C83541 * C162) *
                C153513 * C153556 +
            (C83890 + C83891 + C83892) * C153513 * C153563 + C83912 * C83544) *
               C153413 * C1131 -
           ((C83896 + C83897 + C83898) * C153513 * C83544 +
            (C83895 + C83894 + C83893) * C153513 * C153563 +
            (C83892 + C83891 + C83890) * C153513 * C153556) *
               C153413 * C153449) *
              C1133 +
          (((C83899 + C83900 + C83901) * C153513 * C153556 +
            (C83902 + C83903 + C83904) * C153513 * C153563 +
            (C83905 + C83906 + C83907) * C153513 * C83544) *
               C153413 * C153449 -
           (C83913 * C83544 + (C83901 + C83900 + C83899) * C153513 * C153563 +
            (C83549 * C147 + C83567 + C83567 + C83541 * C163 + C152026 * C146 +
             C83568 + C83568 + C153351 * C162 + C152033 * C145 + C83569 +
             C83569 + C153343 * C161) *
                C153513 * C153556) *
               C153413 * C1131) *
              C1134 +
          (((C152033 * C146 + C83570 + C83570 + C153343 * C162 +
             C152026 * C147 + C83571 + C83571 + C153351 * C163 + C83549 * C148 +
             C83572 + C83572 + C83541 * C164) *
                C153513 * C153556 +
            (C84413 + C84414 + C84415) * C153513 * C153563 +
            (C84416 + C84417 + C84418) * C153513 * C83544) *
               C153413 * C1131 -
           ((C83549 * C1223 + C84398 + C84398 + C83541 * C1233 +
             C152026 * C1224 + C84399 + C84399 + C153351 * C1234 +
             C152033 * C1225 + C84400 + C84400 + C153343 * C1235) *
                C153513 * C83544 +
            (C84418 + C84417 + C84416) * C153513 * C153563 +
            (C84415 + C84414 + C84413) * C153513 * C153556) *
               C153413 * C153449) *
              C1135)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C152033 * C144 + C83552 + C83552 + C153343 * C160 +
             C152026 * C145 + C83553 + C83553 + C153351 * C161 + C83549 * C146 +
             C83554 + C83554 + C83541 * C162) *
                C153513 * C153556 +
            (C83890 + C83891 + C83892) * C153513 * C153563 + C83912 * C83544) *
               C493 -
           ((C84990 + C84991 + C84992) * C153513 * C83544 +
            (C84993 + C84994 + C84995) * C153513 * C153563 +
            (C83549 * C498 + C84138 + C84138 + C83541 * C522 + C152026 * C499 +
             C84139 + C84139 + C153351 * C523 + C152033 * C500 + C84140 +
             C84140 + C153343 * C524) *
                C153513 * C153556) *
               C494 +
           ((C152033 * C501 + C84141 + C84141 + C153343 * C525 +
             C152026 * C502 + C84142 + C84142 + C153351 * C526 + C83549 * C503 +
             C84143 + C84143 + C83541 * C527) *
                C153513 * C153556 +
            (C85632 + C85633 + C85634) * C153513 * C153563 +
            (C85635 + C85636 + C85637) * C153513 * C83544) *
               C495) *
              C1131 +
          (((C84995 + C84994 + C84993) * C153513 * C153556 +
            (C84992 + C84991 + C84990) * C153513 * C153563 +
            (C152033 * C4143 + C84948 + C84948 + C153343 * C4151 +
             C152026 * C4144 + C84949 + C84949 + C153351 * C4152 +
             C83549 * C4145 + C84950 + C84950 + C83541 * C4153) *
                C153513 * C83544) *
               C494 -
           (C85380 * C83544 + (C83895 + C83894 + C83893) * C153513 * C153563 +
            (C83892 + C83891 + C83890) * C153513 * C153556) *
               C493 -
           ((C83549 * C4833 + C85617 + C85617 + C83541 * C4839 +
             C152026 * C4834 + C85618 + C85618 + C153351 * C4840 +
             C152033 * C4835 + C85619 + C85619 + C153343 * C4841) *
                C153513 * C83544 +
            (C85637 + C85636 + C85635) * C153513 * C153563 +
            (C85634 + C85633 + C85632) * C153513 * C153556) *
               C495) *
              C153449) *
         C153378) /
            (p * q * std::sqrt(p + q));
    d2ee[8] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C152033 * C144 + C83552 + C83552 + C153343 * C160 +
              C152026 * C145 + C83553 + C83553 + C153351 * C161 +
              C83549 * C146 + C83554 + C83554 + C83541 * C162) *
                 C153513 * C153556 +
             (C83890 + C83891 + C83892) * C153513 * C153563 + C83912 * C83544) *
                C153725 -
            ((C84990 + C84991 + C84992) * C153513 * C83544 +
             (C84993 + C84994 + C84995) * C153513 * C153563 +
             (C83549 * C498 + C84138 + C84138 + C83541 * C522 + C152026 * C499 +
              C84139 + C84139 + C153351 * C523 + C152033 * C500 + C84140 +
              C84140 + C153343 * C524) *
                 C153513 * C153556) *
                C153477) *
               C1131 +
           (((C84995 + C84994 + C84993) * C153513 * C153556 +
             (C84992 + C84991 + C84990) * C153513 * C153563 +
             (C152033 * C4143 + C84948 + C84948 + C153343 * C4151 +
              C152026 * C4144 + C84949 + C84949 + C153351 * C4152 +
              C83549 * C4145 + C84950 + C84950 + C83541 * C4153) *
                 C153513 * C83544) *
                C153477 -
            (C85380 * C83544 + (C83895 + C83894 + C83893) * C153513 * C153563 +
             (C83892 + C83891 + C83890) * C153513 * C153556) *
                C153725) *
               C153449) *
              C153716 +
          ((((C152033 * C499 + C84150 + C84150 + C153343 * C523 +
              C152026 * C498 + C84151 + C84151 + C153351 * C522 +
              C83549 * C497 + C84152 + C84152 + C83541 * C521) *
                 C153513 * C153556 +
             (C84996 + C84997 + C84998) * C153513 * C153563 +
             (C84999 + C85000 + C85001) * C153513 * C83544) *
                C153477 -
            (C83913 * C83544 + (C83901 + C83900 + C83899) * C153513 * C153563 +
             (C83549 * C147 + C83567 + C83567 + C83541 * C163 + C152026 * C146 +
              C83568 + C83568 + C153351 * C162 + C152033 * C145 + C83569 +
              C83569 + C153343 * C161) *
                 C153513 * C153556) *
                C153725) *
               C1131 +
           (((C83899 + C83900 + C83901) * C153513 * C153556 +
             (C83902 + C83903 + C83904) * C153513 * C153563 +
             (C83905 + C83906 + C83907) * C153513 * C83544) *
                C153725 -
            ((C83549 * C4146 + C84963 + C84963 + C83541 * C4154 +
              C152026 * C4145 + C84964 + C84964 + C153351 * C4153 +
              C152033 * C4144 + C84965 + C84965 + C153343 * C4152) *
                 C153513 * C83544 +
             (C85001 + C85000 + C84999) * C153513 * C153563 +
             (C84998 + C84997 + C84996) * C153513 * C153556) *
                C153477) *
               C153449) *
              C153384)) /
        (p * q * std::sqrt(p + q));
    d2ee[9] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C152033 * C144 + C83552 + C83552 + C153343 * C160 +
             C152026 * C145 + C83553 + C83553 + C153351 * C161 + C83549 * C146 +
             C83554 + C83554 + C83541 * C162) *
                C153513 * C153556 +
            (C83890 + C83891 + C83892) * C153513 * C153563 + C83912 * C83544) *
               C153413 * C1131 -
           ((C83896 + C83897 + C83898) * C153513 * C83544 +
            (C83895 + C83894 + C83893) * C153513 * C153563 +
            (C83892 + C83891 + C83890) * C153513 * C153556) *
               C153413 * C153449) *
              C1133 +
          (((C83899 + C83900 + C83901) * C153513 * C153556 +
            (C83902 + C83903 + C83904) * C153513 * C153563 +
            (C83905 + C83906 + C83907) * C153513 * C83544) *
               C153413 * C153449 -
           (C83913 * C83544 + (C83901 + C83900 + C83899) * C153513 * C153563 +
            (C83549 * C147 + C83567 + C83567 + C83541 * C163 + C152026 * C146 +
             C83568 + C83568 + C153351 * C162 + C152033 * C145 + C83569 +
             C83569 + C153343 * C161) *
                C153513 * C153556) *
               C153413 * C1131) *
              C1134 +
          (((C152033 * C146 + C83570 + C83570 + C153343 * C162 +
             C152026 * C147 + C83571 + C83571 + C153351 * C163 + C83549 * C148 +
             C83572 + C83572 + C83541 * C164) *
                C153513 * C153556 +
            (C84413 + C84414 + C84415) * C153513 * C153563 +
            (C84416 + C84417 + C84418) * C153513 * C83544) *
               C153413 * C1131 -
           ((C83549 * C1223 + C84398 + C84398 + C83541 * C1233 +
             C152026 * C1224 + C84399 + C84399 + C153351 * C1234 +
             C152033 * C1225 + C84400 + C84400 + C153343 * C1235) *
                C153513 * C83544 +
            (C84418 + C84417 + C84416) * C153513 * C153563 +
            (C84415 + C84414 + C84413) * C153513 * C153556) *
               C153413 * C153449) *
              C1135)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((C152033 * C144 + C83552 + C83552 + C153343 * C160 + C152026 * C145 +
            C83553 + C83553 + C153351 * C161 + C83549 * C146 + C83554 + C83554 +
            C83541 * C162) *
               C153513 * C153556 +
           (C83890 + C83891 + C83892) * C153513 * C153563 + C83912 * C83544) *
              C153413 * C1218 -
          (C85380 * C83544 + (C83895 + C83894 + C83893) * C153513 * C153563 +
           (C83892 + C83891 + C83890) * C153513 * C153556) *
              C153413 * C1219 +
          (C83912 * C153556 + (C83898 + C83897 + C83896) * C153513 * C153563 +
           (C85384 + C85385 + C85386) * C153513 * C83544) *
              C153413 * C1220 -
          ((C83549 * C4585 + C85373 + C85373 + C83541 * C4591 +
            C152026 * C4586 + C85374 + C85374 + C153351 * C4592 +
            C152033 * C4587 + C85375 + C85375 + C153343 * C4593) *
               C153513 * C83544 +
           (C85386 + C85385 + C85384) * C153513 * C153563 + C85380 * C153556) *
              C153413 * C1221) *
         C153378) /
            (p * q * std::sqrt(p + q));
    d2ee[10] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C152033 * C144 + C83552 + C83552 + C153343 * C160 +
              C152026 * C145 + C83553 + C83553 + C153351 * C161 +
              C83549 * C146 + C83554 + C83554 + C83541 * C162) *
                 C153513 * C153556 +
             (C83890 + C83891 + C83892) * C153513 * C153563 + C83912 * C83544) *
                C1938 -
            (C86378 * C83544 + (C84993 + C84994 + C84995) * C153513 * C153563 +
             (C83549 * C498 + C84138 + C84138 + C83541 * C522 + C152026 * C499 +
              C84139 + C84139 + C153351 * C523 + C152033 * C500 + C84140 +
              C84140 + C153343 * C524) *
                 C153513 * C153556) *
                C153477) *
               C153724 +
           (((C84995 + C84994 + C84993) * C153513 * C153556 +
             (C84992 + C84991 + C84990) * C153513 * C153563 +
             (C86382 + C86383 + C86384) * C153513 * C83544) *
                C153477 -
            (C85380 * C83544 + (C83895 + C83894 + C83893) * C153513 * C153563 +
             (C83892 + C83891 + C83890) * C153513 * C153556) *
                C1938) *
               C153449) *
              C153716 +
          ((((C152033 * C499 + C84150 + C84150 + C153343 * C523 +
              C152026 * C498 + C84151 + C84151 + C153351 * C522 +
              C83549 * C497 + C84152 + C84152 + C83541 * C521) *
                 C153513 * C153556 +
             (C84996 + C84997 + C84998) * C153513 * C153563 +
             (C84999 + C85000 + C85001) * C153513 * C83544) *
                C153477 -
            (C83913 * C83544 + (C83901 + C83900 + C83899) * C153513 * C153563 +
             (C83549 * C147 + C83567 + C83567 + C83541 * C163 + C152026 * C146 +
              C83568 + C83568 + C153351 * C162 + C152033 * C145 + C83569 +
              C83569 + C153343 * C161) *
                 C153513 * C153556) *
                C1938) *
               C153724 +
           (((C83899 + C83900 + C83901) * C153513 * C153556 +
             (C83902 + C83903 + C83904) * C153513 * C153563 +
             (C83905 + C83906 + C83907) * C153513 * C83544) *
                C1938 -
            ((C83549 * C4146 + C84963 + C84963 + C83541 * C4154 +
              C152026 * C4145 + C84964 + C84964 + C153351 * C4153 +
              C152033 * C4144 + C84965 + C84965 + C153343 * C4152) *
                 C153513 * C83544 +
             (C85001 + C85000 + C84999) * C153513 * C153563 +
             (C84998 + C84997 + C84996) * C153513 * C153556) *
                C153477) *
               C153449) *
              C153384)) /
        (p * q * std::sqrt(p + q));
    d2ee[11] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((C152033 * C144 + C83552 + C83552 + C153343 * C160 +
             C152026 * C145 + C83553 + C83553 + C153351 * C161 + C83549 * C146 +
             C83554 + C83554 + C83541 * C162) *
                C153513 * C153556 +
            (C83890 + C83891 + C83892) * C153513 * C153563 + C83912 * C83544) *
               C153797 -
           (C86378 * C83544 + (C84993 + C84994 + C84995) * C153513 * C153563 +
            (C83549 * C498 + C84138 + C84138 + C83541 * C522 + C152026 * C499 +
             C84139 + C84139 + C153351 * C523 + C152033 * C500 + C84140 +
             C84140 + C153343 * C524) *
                C153513 * C153556) *
               C153798 +
           ((C152033 * C501 + C84141 + C84141 + C153343 * C525 +
             C152026 * C502 + C84142 + C84142 + C153351 * C526 + C83549 * C503 +
             C84143 + C84143 + C83541 * C527) *
                C153513 * C153556 +
            (C85632 + C85633 + C85634) * C153513 * C153563 +
            (C85635 + C85636 + C85637) * C153513 * C83544) *
               C2454) *
              C153724 +
          (((C84995 + C84994 + C84993) * C153513 * C153556 +
            (C84992 + C84991 + C84990) * C153513 * C153563 +
            (C86382 + C86383 + C86384) * C153513 * C83544) *
               C153798 -
           (C85380 * C83544 + (C83895 + C83894 + C83893) * C153513 * C153563 +
            (C83892 + C83891 + C83890) * C153513 * C153556) *
               C153797 -
           ((C83549 * C4833 + C85617 + C85617 + C83541 * C4839 +
             C152026 * C4834 + C85618 + C85618 + C153351 * C4840 +
             C152033 * C4835 + C85619 + C85619 + C153343 * C4841) *
                C153513 * C83544 +
            (C85637 + C85636 + C85635) * C153513 * C153563 +
            (C85634 + C85633 + C85632) * C153513 * C153556) *
               C2454) *
              C153449) *
         C153378) /
        (p * q * std::sqrt(p + q));
    d2ee[12] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C152033 * C144 + C83552 + C83552 + C153343 * C160 +
             C152026 * C145 + C83553 + C83553 + C153351 * C161 + C83549 * C146 +
             C83554 + C83554 + C83541 * C162) *
                C153513 * C153556 +
            (C83890 + C83891 + C83892) * C153513 * C153563 + C83912 * C83544) *
               C1938 -
           (C86378 * C83544 + (C84993 + C84994 + C84995) * C153513 * C153563 +
            (C83549 * C498 + C84138 + C84138 + C83541 * C522 + C152026 * C499 +
             C84139 + C84139 + C153351 * C523 + C152033 * C500 + C84140 +
             C84140 + C153343 * C524) *
                C153513 * C153556) *
               C153477) *
              C310 +
          (((C84995 + C84994 + C84993) * C153513 * C153556 +
            (C84992 + C84991 + C84990) * C153513 * C153563 +
            (C86382 + C86383 + C86384) * C153513 * C83544) *
               C153477 -
           (C85380 * C83544 + (C83895 + C83894 + C83893) * C153513 * C153563 +
            (C83892 + C83891 + C83890) * C153513 * C153556) *
               C1938) *
              C311 +
          ((C83912 * C153556 + (C83898 + C83897 + C83896) * C153513 * C153563 +
            (C85384 + C85385 + C85386) * C153513 * C83544) *
               C1938 -
           ((C83549 * C5601 + C86371 + C86371 + C83541 * C5607 +
             C152026 * C5602 + C86372 + C86372 + C153351 * C5608 +
             C152033 * C5603 + C86373 + C86373 + C153343 * C5609) *
                C153513 * C83544 +
            (C86384 + C86383 + C86382) * C153513 * C153563 + C86378 * C153556) *
               C153477) *
              C312) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C152033 * C144 + C83552 + C83552 + C153343 * C160 +
             C152026 * C145 + C83553 + C83553 + C153351 * C161 + C83549 * C146 +
             C83554 + C83554 + C83541 * C162) *
                C153513 * C153556 +
            (C83890 + C83891 + C83892) * C153513 * C153563 + C83912 * C83544) *
               C1938 -
           (C86378 * C83544 + (C84993 + C84994 + C84995) * C153513 * C153563 +
            (C83549 * C498 + C84138 + C84138 + C83541 * C522 + C152026 * C499 +
             C84139 + C84139 + C153351 * C523 + C152033 * C500 + C84140 +
             C84140 + C153343 * C524) *
                C153513 * C153556) *
               C153477) *
              C153397 * C1133 +
          (((C152033 * C499 + C84150 + C84150 + C153343 * C523 +
             C152026 * C498 + C84151 + C84151 + C153351 * C522 + C83549 * C497 +
             C84152 + C84152 + C83541 * C521) *
                C153513 * C153556 +
            (C84996 + C84997 + C84998) * C153513 * C153563 +
            (C84999 + C85000 + C85001) * C153513 * C83544) *
               C153477 -
           (C83913 * C83544 + (C83901 + C83900 + C83899) * C153513 * C153563 +
            (C83549 * C147 + C83567 + C83567 + C83541 * C163 + C152026 * C146 +
             C83568 + C83568 + C153351 * C162 + C152033 * C145 + C83569 +
             C83569 + C153343 * C161) *
                C153513 * C153556) *
               C1938) *
              C153397 * C1134 +
          (((C152033 * C146 + C83570 + C83570 + C153343 * C162 +
             C152026 * C147 + C83571 + C83571 + C153351 * C163 + C83549 * C148 +
             C83572 + C83572 + C83541 * C164) *
                C153513 * C153556 +
            (C84413 + C84414 + C84415) * C153513 * C153563 +
            (C84416 + C84417 + C84418) * C153513 * C83544) *
               C1938 -
           ((C83549 * C1796 + C84637 + C84637 + C83541 * C1806 +
             C152026 * C1797 + C84638 + C84638 + C153351 * C1807 +
             C152033 * C1798 + C84639 + C84639 + C153343 * C1808) *
                C153513 * C83544 +
            (C83549 * C985 + C84640 + C84640 + C83541 * C997 + C152026 * C984 +
             C84641 + C84641 + C153351 * C996 + C152033 * C983 + C84642 +
             C84642 + C153343 * C995) *
                C153513 * C153563 +
            (C83549 * C496 + C84643 + C84643 + C83541 * C520 + C152026 * C497 +
             C84644 + C84644 + C153351 * C521 + C152033 * C498 + C84645 +
             C84645 + C153343 * C522) *
                C153513 * C153556) *
               C153477) *
              C153397 * C1135)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((C152033 * C144 + C83552 + C83552 + C153343 * C160 + C152026 * C145 +
            C83553 + C83553 + C153351 * C161 + C83549 * C146 + C83554 + C83554 +
            C83541 * C162) *
               C153513 * C153556 +
           (C83890 + C83891 + C83892) * C153513 * C153563 + C83912 * C83544) *
              C2144 -
          (C86378 * C83544 + (C84993 + C84994 + C84995) * C153513 * C153563 +
           (C83549 * C498 + C84138 + C84138 + C83541 * C522 + C152026 * C499 +
            C84139 + C84139 + C153351 * C523 + C152033 * C500 + C84140 +
            C84140 + C153343 * C524) *
               C153513 * C153556) *
              C2145 +
          ((C152033 * C501 + C84141 + C84141 + C153343 * C525 + C152026 * C502 +
            C84142 + C84142 + C153351 * C526 + C83549 * C503 + C84143 + C84143 +
            C83541 * C527) *
               C153513 * C153556 +
           (C85632 + C85633 + C85634) * C153513 * C153563 +
           (C85635 + C85636 + C85637) * C153513 * C83544) *
              C2146 -
          ((C83549 * C6213 + C86967 + C86967 + C83541 * C6225 +
            C152026 * C6214 + C86968 + C86968 + C153351 * C6226 +
            C152033 * C6215 + C86969 + C86969 + C153343 * C6227) *
               C153513 * C83544 +
           (C83549 * C6216 + C86970 + C86970 + C83541 * C6228 +
            C152026 * C6217 + C86971 + C86971 + C153351 * C6229 +
            C152033 * C6218 + C86972 + C86972 + C153343 * C6230) *
               C153513 * C153563 +
           (C83549 * C2150 + C86973 + C86973 + C83541 * C2160 +
            C152026 * C2151 + C86974 + C86974 + C153351 * C2161 +
            C152033 * C2152 + C86975 + C86975 + C153343 * C2162) *
               C153513 * C153556) *
              C2147) *
         C153397 * C153378) /
            (p * q * std::sqrt(p + q));
    d2ee[13] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((C152033 * C144 + C83552 + C83552 + C153343 * C160 +
             C152026 * C145 + C83553 + C83553 + C153351 * C161 + C83549 * C146 +
             C83554 + C83554 + C83541 * C162) *
                C153513 * C153556 +
            (C83890 + C83891 + C83892) * C153513 * C153563 + C83912 * C83544) *
               C153797 -
           (C86378 * C83544 + (C84993 + C84994 + C84995) * C153513 * C153563 +
            (C83549 * C498 + C84138 + C84138 + C83541 * C522 + C152026 * C499 +
             C84139 + C84139 + C153351 * C523 + C152033 * C500 + C84140 +
             C84140 + C153343 * C524) *
                C153513 * C153556) *
               C153798 +
           ((C152033 * C501 + C84141 + C84141 + C153343 * C525 +
             C152026 * C502 + C84142 + C84142 + C153351 * C526 + C83549 * C503 +
             C84143 + C84143 + C83541 * C527) *
                C153513 * C153556 +
            (C85632 + C85633 + C85634) * C153513 * C153563 +
            (C85635 + C85636 + C85637) * C153513 * C83544) *
               C2454) *
              C153397 * C153716 +
          (((C152033 * C499 + C84150 + C84150 + C153343 * C523 +
             C152026 * C498 + C84151 + C84151 + C153351 * C522 + C83549 * C497 +
             C84152 + C84152 + C83541 * C521) *
                C153513 * C153556 +
            (C84996 + C84997 + C84998) * C153513 * C153563 +
            (C84999 + C85000 + C85001) * C153513 * C83544) *
               C153798 -
           (C83913 * C83544 + (C83901 + C83900 + C83899) * C153513 * C153563 +
            (C83549 * C147 + C83567 + C83567 + C83541 * C163 + C152026 * C146 +
             C83568 + C83568 + C153351 * C162 + C152033 * C145 + C83569 +
             C83569 + C153343 * C161) *
                C153513 * C153556) *
               C153797 -
           ((C83549 * C3330 + C84159 + C84159 + C83541 * C3338 +
             C152026 * C3329 + C84160 + C84160 + C153351 * C3337 +
             C152033 * C3328 + C84161 + C84161 + C153343 * C3336) *
                C153513 * C83544 +
            (C83549 * C1366 + C84162 + C84162 + C83541 * C1376 +
             C152026 * C1367 + C84163 + C84163 + C153351 * C1377 +
             C152033 * C1368 + C84164 + C84164 + C153343 * C1378) *
                C153513 * C153563 +
            (C83549 * C504 + C84165 + C84165 + C83541 * C528 + C152026 * C503 +
             C84166 + C84166 + C153351 * C527 + C152033 * C502 + C84167 +
             C84167 + C153343 * C526) *
                C153513 * C153556) *
               C2454) *
              C153397 * C153384)) /
        (p * q * std::sqrt(p + q));
    d2ee[14] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C152033 * C144 + C83552 + C83552 + C153343 * C160 +
             C152026 * C145 + C83553 + C83553 + C153351 * C161 + C83549 * C146 +
             C83554 + C83554 + C83541 * C162) *
                C153513 * C153556 +
            (C83890 + C83891 + C83892) * C153513 * C153563 + C83912 * C83544) *
               C1938 -
           (C86378 * C83544 + (C84993 + C84994 + C84995) * C153513 * C153563 +
            (C83549 * C498 + C84138 + C84138 + C83541 * C522 + C152026 * C499 +
             C84139 + C84139 + C153351 * C523 + C152033 * C500 + C84140 +
             C84140 + C153343 * C524) *
                C153513 * C153556) *
               C153477) *
              C153397 * C1133 +
          (((C152033 * C499 + C84150 + C84150 + C153343 * C523 +
             C152026 * C498 + C84151 + C84151 + C153351 * C522 + C83549 * C497 +
             C84152 + C84152 + C83541 * C521) *
                C153513 * C153556 +
            (C84996 + C84997 + C84998) * C153513 * C153563 +
            (C84999 + C85000 + C85001) * C153513 * C83544) *
               C153477 -
           (C83913 * C83544 + (C83901 + C83900 + C83899) * C153513 * C153563 +
            (C83549 * C147 + C83567 + C83567 + C83541 * C163 + C152026 * C146 +
             C83568 + C83568 + C153351 * C162 + C152033 * C145 + C83569 +
             C83569 + C153343 * C161) *
                C153513 * C153556) *
               C1938) *
              C153397 * C1134 +
          (((C152033 * C146 + C83570 + C83570 + C153343 * C162 +
             C152026 * C147 + C83571 + C83571 + C153351 * C163 + C83549 * C148 +
             C83572 + C83572 + C83541 * C164) *
                C153513 * C153556 +
            (C84413 + C84414 + C84415) * C153513 * C153563 +
            (C84416 + C84417 + C84418) * C153513 * C83544) *
               C1938 -
           ((C83549 * C1796 + C84637 + C84637 + C83541 * C1806 +
             C152026 * C1797 + C84638 + C84638 + C153351 * C1807 +
             C152033 * C1798 + C84639 + C84639 + C153343 * C1808) *
                C153513 * C83544 +
            (C83549 * C985 + C84640 + C84640 + C83541 * C997 + C152026 * C984 +
             C84641 + C84641 + C153351 * C996 + C152033 * C983 + C84642 +
             C84642 + C153343 * C995) *
                C153513 * C153563 +
            (C83549 * C496 + C84643 + C84643 + C83541 * C520 + C152026 * C497 +
             C84644 + C84644 + C153351 * C521 + C152033 * C498 + C84645 +
             C84645 + C153343 * C522) *
                C153513 * C153556) *
               C153477) *
              C153397 * C1135)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C152033 * C144 + C83552 + C83552 + C153343 * C160 +
             C152026 * C145 + C83553 + C83553 + C153351 * C161 + C83549 * C146 +
             C83554 + C83554 + C83541 * C162) *
                C153513 * C153556 +
            (C83890 + C83891 + C83892) * C153513 * C153563 + C83912 * C83544) *
               C1938 -
           (C86378 * C83544 + (C84993 + C84994 + C84995) * C153513 * C153563 +
            (C83549 * C498 + C84138 + C84138 + C83541 * C522 + C152026 * C499 +
             C84139 + C84139 + C153351 * C523 + C152033 * C500 + C84140 +
             C84140 + C153343 * C524) *
                C153513 * C153556) *
               C153477) *
              C310 +
          (((C84995 + C84994 + C84993) * C153513 * C153556 +
            (C84992 + C84991 + C84990) * C153513 * C153563 +
            (C86382 + C86383 + C86384) * C153513 * C83544) *
               C153477 -
           (C85380 * C83544 + (C83895 + C83894 + C83893) * C153513 * C153563 +
            (C83892 + C83891 + C83890) * C153513 * C153556) *
               C1938) *
              C311 +
          ((C83912 * C153556 + (C83898 + C83897 + C83896) * C153513 * C153563 +
            (C85384 + C85385 + C85386) * C153513 * C83544) *
               C1938 -
           ((C83549 * C5601 + C86371 + C86371 + C83541 * C5607 +
             C152026 * C5602 + C86372 + C86372 + C153351 * C5608 +
             C152033 * C5603 + C86373 + C86373 + C153343 * C5609) *
                C153513 * C83544 +
            (C86384 + C86383 + C86382) * C153513 * C153563 + C86378 * C153556) *
               C153477) *
              C312) *
         C153378) /
            (p * q * std::sqrt(p + q));
    d2ee[15] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
              C74253 + C74253 + C153348 * C161) *
                 C153740 +
             (C78834 + C78835) * C153600) *
                C153556 +
            ((C74550 + C74551) * C153740 + C79864 * C153600) * C153563 +
            C93585 * C83544) *
               C153413 * C153724 -
           ((C76762 * C153600 + C75875 * C153740) * C83544 +
            (C76763 * C153600 + (C74553 + C74552) * C153740) * C153563 +
            (C79866 * C153600 + (C74551 + C74550) * C153740) * C153556) *
               C153413 * C153449) *
              C153793 +
          ((((C74558 + C74559) * C153740 + C79867 * C153600) * C153556 +
            ((C74560 + C74561) * C153740 + (C75546 + C75547) * C153600) *
                C153563 +
            ((C74562 + C74563) * C153740 + (C75548 + C75549) * C153600) *
                C83544) *
               C153413 * C153449 -
           (C93587 * C83544 +
            (C79869 * C153600 + (C74559 + C74558) * C153740) * C153563 +
            ((C78843 + C78842) * C153600 +
             (C74249 * C146 + C74266 + C74266 + C153348 * C162 + C74247 * C145 +
              C74267 + C74267 + C74241 * C161) *
                 C153740) *
                C153556) *
               C153413 * C153724) *
              C153794 +
          ((((C74247 * C146 + C74268 + C74268 + C74241 * C162 + C74249 * C147 +
              C74269 + C74269 + C153348 * C163) *
                 C153740 +
             (C79474 + C79475) * C153600) *
                C153556 +
            ((C75020 + C75021) * C153740 + (C79160 + C79161) * C153600) *
                C153563 +
            ((C75022 + C75023) * C153740 + (C94176 + C94177) * C153600) *
                C83544) *
               C153413 * C153724 -
           (((C74249 * C4146 + C75220 + C75220 + C153348 * C4154 +
              C74247 * C4145 + C75221 + C75221 + C74241 * C4153) *
                 C153600 +
             (C75025 + C75024) * C153740) *
                C83544 +
            ((C94177 + C94176) * C153600 + (C75023 + C75022) * C153740) *
                C153563 +
            ((C79161 + C79160) * C153600 + (C75021 + C75020) * C153740) *
                C153556) *
               C153413 * C153449) *
              C678)) /
        (p * q * std::sqrt(p + q));
    d2ee[16] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
               C74253 + C74253 + C153348 * C161) *
                  C153740 +
              (C78834 + C78835) * C153600) *
                 C153556 +
             ((C74550 + C74551) * C153740 + C79864 * C153600) * C153563 +
             C93585 * C83544) *
                C153725 -
            ((C80656 * C153600 + C76763 * C153740) * C83544 +
             (C79865 * C153600 + C79866 * C153740) * C153563 +
             ((C78837 + C78836) * C153600 + (C78835 + C78834) * C153740) *
                 C153556) *
                C153477) *
               C153724 +
           (((C79864 * C153740 + C78764 * C153600) * C153556 +
             (C81637 * C153740 + C81638 * C153600) * C153563 +
             ((C75539 + C75538) * C153740 + (C76114 + C76115) * C153600) *
                 C83544) *
                C153477 -
            ((C76762 * C153600 + C75875 * C153740) * C83544 +
             (C76763 * C153600 + (C74553 + C74552) * C153740) * C153563 +
             (C79866 * C153600 + (C74551 + C74550) * C153740) * C153556) *
                C153725) *
               C153449) *
              C313 +
          (((((C78842 + C78843) * C153740 + (C78844 + C78845) * C153600) *
                 C153556 +
             (C79867 * C153740 + C79868 * C153600) * C153563 +
             (C94854 * C153740 + (C78464 + C78465) * C153600) * C83544) *
                C153477 -
            (C93587 * C83544 +
             (C79869 * C153600 + (C74559 + C74558) * C153740) * C153563 +
             ((C78843 + C78842) * C153600 +
              (C74249 * C146 + C74266 + C74266 + C153348 * C162 +
               C74247 * C145 + C74267 + C74267 + C74241 * C161) *
                  C153740) *
                 C153556) *
                C153725) *
               C153724 +
           ((((C74558 + C74559) * C153740 + C79867 * C153600) * C153556 +
             ((C74560 + C74561) * C153740 + C94854 * C153600) * C153563 +
             ((C74562 + C74563) * C153740 + (C75548 + C75549) * C153600) *
                 C83544) *
                C153725 -
            (((C74249 * C4833 + C74792 + C74792 + C153348 * C4839 +
               C74247 * C4834 + C74793 + C74793 + C74241 * C4840) *
                  C153600 +
              (C75549 + C75548) * C153740) *
                 C83544 +
             ((C78465 + C78464) * C153600 + C93583 * C153740) * C153563 +
             (C78797 * C153600 + C79869 * C153740) * C153556) *
                C153477) *
               C153449) *
              C153384)) /
        (p * q * std::sqrt(p + q));
    d2ee[17] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
              C74253 + C74253 + C153348 * C161) *
                 C153740 +
             (C78834 + C78835) * C153600) *
                C153556 +
            ((C74550 + C74551) * C153740 + C79864 * C153600) * C153563 +
            C93585 * C83544) *
               C153413 * C310 -
           ((C76762 * C153600 + C75875 * C153740) * C83544 +
            (C76763 * C153600 + (C74553 + C74552) * C153740) * C153563 +
            (C79866 * C153600 + (C74551 + C74550) * C153740) * C153556) *
               C153413 * C311 +
           (C93585 * C153556 +
            (C74567 * C153740 + (C75539 + C75538) * C153600) * C153563 +
            ((C74557 + C74556) * C153740 + (C76776 + C76777) * C153600) *
                C83544) *
               C153413 * C312) *
              C313 +
          ((((C74558 + C74559) * C153740 + C79867 * C153600) * C153556 +
            ((C74560 + C74561) * C153740 + (C75546 + C75547) * C153600) *
                C153563 +
            ((C74562 + C74563) * C153740 + (C75548 + C75549) * C153600) *
                C83544) *
               C153413 * C311 -
           (C93587 * C83544 +
            (C79869 * C153600 + (C74559 + C74558) * C153740) * C153563 +
            ((C78843 + C78842) * C153600 +
             (C74249 * C146 + C74266 + C74266 + C153348 * C162 + C74247 * C145 +
              C74267 + C74267 + C74241 * C161) *
                 C153740) *
                C153556) *
               C153413 * C310 -
           (((C74249 * C5601 + C75512 + C75512 + C153348 * C5607 +
              C74247 * C5602 + C75513 + C75513 + C74241 * C5608) *
                 C153600 +
             (C74565 + C74564) * C153740) *
                C83544 +
            ((C75549 + C75548) * C153600 + C74568 * C153740) * C153563 +
            C93587 * C153556) *
               C153413 * C312) *
              C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
             C74253 + C74253 + C153348 * C161) *
                C153740 +
            (C78834 + C78835) * C153600) *
               C153556 +
           ((C74550 + C74551) * C153740 + C79864 * C153600) * C153563 +
           (C74566 * C153740 + C81637 * C153600) * C83544) *
              C153413 * C153397 * C130 -
          (((C75547 + C75546) * C153600 + C74569 * C153740) * C83544 +
           (C79869 * C153600 + (C74559 + C74558) * C153740) * C153563 +
           ((C78843 + C78842) * C153600 +
            (C74249 * C146 + C74266 + C74266 + C153348 * C162 + C74247 * C145 +
             C74267 + C74267 + C74241 * C161) *
                C153740) *
               C153556) *
              C153413 * C153397 * C131 +
          (((C74247 * C146 + C74268 + C74268 + C74241 * C162 + C74249 * C147 +
             C74269 + C74269 + C153348 * C163) *
                C153740 +
            (C79474 + C79475) * C153600) *
               C153556 +
           ((C75020 + C75021) * C153740 + (C79160 + C79161) * C153600) *
               C153563 +
           ((C75022 + C75023) * C153740 +
            (C74247 * C1798 + C75223 + C75223 + C74241 * C1808 +
             C74249 * C1797 + C75222 + C75222 + C153348 * C1807) *
                C153600) *
               C83544) *
              C153413 * C153397 * C132 -
          (((C74249 * C1796 + C93289 + C93289 + C153348 * C1806 +
             C74247 * C1797 + C93290 + C93290 + C74241 * C1807) *
                C153600 +
            (C74249 * C324 + C74278 + C74278 + C153348 * C348 + C74247 * C323 +
             C74279 + C74279 + C74241 * C347) *
                C153740) *
               C83544 +
           ((C74249 * C985 + C78150 + C78150 + C153348 * C997 + C74247 * C984 +
             C78151 + C78151 + C74241 * C996) *
                C153600 +
            (C74249 * C315 + C74280 + C74280 + C153348 * C339 + C74247 * C316 +
             C74281 + C74281 + C74241 * C340) *
                C153740) *
               C153563 +
           ((C74249 * C496 + C78154 + C78154 + C153348 * C520 + C74247 * C497 +
             C78155 + C78155 + C74241 * C521) *
                C153600 +
            (C74249 * C148 + C74282 + C74282 + C153348 * C164 + C74247 * C147 +
             C74283 + C74283 + C74241 * C163) *
                C153740) *
               C153556) *
              C153413 * C153397 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
              C74253 + C74253 + C153348 * C161) *
                 C153740 +
             (C78834 + C78835) * C153600) *
                C153556 +
            ((C74550 + C74551) * C153740 + C79864 * C153600) * C153563 +
            C93585 * C83544) *
               C493 -
           ((C80656 * C153600 + C76763 * C153740) * C83544 +
            (C79865 * C153600 + C79866 * C153740) * C153563 +
            ((C78837 + C78836) * C153600 + (C78835 + C78834) * C153740) *
                C153556) *
               C494 +
           ((C78850 * C153740 + (C78841 + C78840) * C153600) * C153556 +
            (C78764 * C153740 + C80647 * C153600) * C153563 +
            (C81638 * C153740 + (C80669 + C80670) * C153600) * C83544) *
               C495) *
              C153397 * C313 +
          ((((C78842 + C78843) * C153740 + (C78844 + C78845) * C153600) *
                C153556 +
            (C79867 * C153740 + C79868 * C153600) * C153563 +
            ((C75546 + C75547) * C153740 + (C78464 + C78465) * C153600) *
                C83544) *
               C494 -
           (C93587 * C83544 +
            (C79869 * C153600 + (C74559 + C74558) * C153740) * C153563 +
            ((C78843 + C78842) * C153600 +
             (C74249 * C146 + C74266 + C74266 + C153348 * C162 + C74247 * C145 +
              C74267 + C74267 + C74241 * C161) *
                 C153740) *
                C153556) *
               C493 -
           (((C74249 * C6213 + C79870 + C79870 + C153348 * C6225 +
              C74247 * C6214 + C79871 + C79871 + C74241 * C6226) *
                 C153600 +
             (C78465 + C78464) * C153740) *
                C83544 +
            ((C78849 + C78848) * C153600 + C78797 * C153740) * C153563 +
            ((C78847 + C78846) * C153600 + C78851 * C153740) * C153556) *
               C495) *
              C153397 * C153384)) /
            (p * q * std::sqrt(p + q));
    d2ee[18] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
              C74253 + C74253 + C153348 * C161) *
                 C153740 +
             (C78834 + C78835) * C153600) *
                C153556 +
            ((C74550 + C74551) * C153740 + C79864 * C153600) * C153563 +
            C93585 * C83544) *
               C153725 -
           ((C80656 * C153600 + C76763 * C153740) * C83544 +
            (C79865 * C153600 + C79866 * C153740) * C153563 +
            ((C78837 + C78836) * C153600 + (C78835 + C78834) * C153740) *
                C153556) *
               C153477) *
              C153397 * C153793 +
          ((((C78842 + C78843) * C153740 + (C78844 + C78845) * C153600) *
                C153556 +
            (C79867 * C153740 + C79868 * C153600) * C153563 +
            ((C75546 + C75547) * C153740 + (C78464 + C78465) * C153600) *
                C83544) *
               C153477 -
           (C93587 * C83544 +
            (C79869 * C153600 + (C74559 + C74558) * C153740) * C153563 +
            ((C78843 + C78842) * C153600 +
             (C74249 * C146 + C74266 + C74266 + C153348 * C162 + C74247 * C145 +
              C74267 + C74267 + C74241 * C161) *
                 C153740) *
                C153556) *
               C153725) *
              C153397 * C153794 +
          ((((C74247 * C146 + C74268 + C74268 + C74241 * C162 + C74249 * C147 +
              C74269 + C74269 + C153348 * C163) *
                 C153740 +
             (C79474 + C79475) * C153600) *
                C153556 +
            ((C75020 + C75021) * C153740 + (C79160 + C79161) * C153600) *
                C153563 +
            ((C75022 + C75023) * C153740 + (C94176 + C94177) * C153600) *
                C83544) *
               C153725 -
           (((C74249 * C3330 + C79150 + C79150 + C153348 * C3338 +
              C74247 * C3329 + C79151 + C79151 + C74241 * C3337) *
                 C153600 +
             (C94177 + C94176) * C153740) *
                C83544 +
            ((C79163 + C79162) * C153600 + (C79161 + C79160) * C153740) *
                C153563 +
            ((C79477 + C79476) * C153600 + (C79475 + C79474) * C153740) *
                C153556) *
               C153477) *
              C153397 * C678)) /
        (p * q * std::sqrt(p + q));
    d2ee[19] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
             C74253 + C74253 + C153348 * C161) *
                C153740 +
            (C78834 + C78835) * C153600) *
               C153556 +
           ((C74550 + C74551) * C153740 + C79864 * C153600) * C153563 +
           (C74566 * C153740 + C81637 * C153600) * C83544) *
              C153413 * C153397 * C130 -
          (((C75547 + C75546) * C153600 + C74569 * C153740) * C83544 +
           (C79869 * C153600 + (C74559 + C74558) * C153740) * C153563 +
           ((C78843 + C78842) * C153600 +
            (C74249 * C146 + C74266 + C74266 + C153348 * C162 + C74247 * C145 +
             C74267 + C74267 + C74241 * C161) *
                C153740) *
               C153556) *
              C153413 * C153397 * C131 +
          (((C74247 * C146 + C74268 + C74268 + C74241 * C162 + C74249 * C147 +
             C74269 + C74269 + C153348 * C163) *
                C153740 +
            (C79474 + C79475) * C153600) *
               C153556 +
           ((C75020 + C75021) * C153740 + (C79160 + C79161) * C153600) *
               C153563 +
           ((C75022 + C75023) * C153740 +
            (C74247 * C1798 + C75223 + C75223 + C74241 * C1808 +
             C74249 * C1797 + C75222 + C75222 + C153348 * C1807) *
                C153600) *
               C83544) *
              C153413 * C153397 * C132 -
          (((C74249 * C1796 + C93289 + C93289 + C153348 * C1806 +
             C74247 * C1797 + C93290 + C93290 + C74241 * C1807) *
                C153600 +
            (C74249 * C324 + C74278 + C74278 + C153348 * C348 + C74247 * C323 +
             C74279 + C74279 + C74241 * C347) *
                C153740) *
               C83544 +
           ((C74249 * C985 + C78150 + C78150 + C153348 * C997 + C74247 * C984 +
             C78151 + C78151 + C74241 * C996) *
                C153600 +
            (C74249 * C315 + C74280 + C74280 + C153348 * C339 + C74247 * C316 +
             C74281 + C74281 + C74241 * C340) *
                C153740) *
               C153563 +
           ((C74249 * C496 + C78154 + C78154 + C153348 * C520 + C74247 * C497 +
             C78155 + C78155 + C74241 * C521) *
                C153600 +
            (C74249 * C148 + C74282 + C74282 + C153348 * C164 + C74247 * C147 +
             C74283 + C74283 + C74241 * C163) *
                C153740) *
               C153556) *
              C153413 * C153397 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
              C74253 + C74253 + C153348 * C161) *
                 C153740 +
             (C78834 + C78835) * C153600) *
                C153556 +
            ((C74550 + C74551) * C153740 + C79864 * C153600) * C153563 +
            C93585 * C83544) *
               C153413 * C310 -
           ((C76762 * C153600 + C75875 * C153740) * C83544 +
            (C76763 * C153600 + (C74553 + C74552) * C153740) * C153563 +
            (C79866 * C153600 + (C74551 + C74550) * C153740) * C153556) *
               C153413 * C311 +
           (C93585 * C153556 +
            (C74567 * C153740 + (C75539 + C75538) * C153600) * C153563 +
            ((C74557 + C74556) * C153740 + (C76776 + C76777) * C153600) *
                C83544) *
               C153413 * C312) *
              C313 +
          ((((C74558 + C74559) * C153740 + C79867 * C153600) * C153556 +
            ((C74560 + C74561) * C153740 + (C75546 + C75547) * C153600) *
                C153563 +
            ((C74562 + C74563) * C153740 + (C75548 + C75549) * C153600) *
                C83544) *
               C153413 * C311 -
           (C93587 * C83544 +
            (C79869 * C153600 + (C74559 + C74558) * C153740) * C153563 +
            ((C78843 + C78842) * C153600 +
             (C74249 * C146 + C74266 + C74266 + C153348 * C162 + C74247 * C145 +
              C74267 + C74267 + C74241 * C161) *
                 C153740) *
                C153556) *
               C153413 * C310 -
           (((C74249 * C5601 + C75512 + C75512 + C153348 * C5607 +
              C74247 * C5602 + C75513 + C75513 + C74241 * C5608) *
                 C153600 +
             (C74565 + C74564) * C153740) *
                C83544 +
            ((C75549 + C75548) * C153600 + C74568 * C153740) * C153563 +
            C93587 * C153556) *
               C153413 * C312) *
              C153384)) /
            (p * q * std::sqrt(p + q));
    d2ee[20] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
              C74253 + C74253 + C153348 * C161) *
                 C153740 +
             (C78834 + C78835) * C153600) *
                C153556 +
            ((C74550 + C74551) * C153740 + C79864 * C153600) * C153563 +
            C93585 * C83544) *
               C153413 * C153795 -
           (C95341 * C83544 +
            (C76763 * C153600 + (C74553 + C74552) * C153740) * C153563 +
            (C79866 * C153600 + (C74551 + C74550) * C153740) * C153556) *
               C153413 * C153796 +
           (C93585 * C153556 +
            (C74567 * C153740 + (C75539 + C75538) * C153600) * C153563 +
            ((C74557 + C74556) * C153740 + (C76776 + C76777) * C153600) *
                C83544) *
               C153413 * C1509) *
              C153716 +
          ((((C74558 + C74559) * C153740 + C79867 * C153600) * C153556 +
            ((C74560 + C74561) * C153740 + C94854 * C153600) * C153563 +
            ((C74562 + C74563) * C153740 + (C75548 + C75549) * C153600) *
                C83544) *
               C153413 * C153796 -
           (C93587 * C83544 +
            (C79869 * C153600 + (C74559 + C74558) * C153740) * C153563 +
            ((C78843 + C78842) * C153600 +
             (C74249 * C146 + C74266 + C74266 + C153348 * C162 + C74247 * C145 +
              C74267 + C74267 + C74241 * C161) *
                 C153740) *
                C153556) *
               C153413 * C153795 -
           (((C74249 * C5601 + C75512 + C75512 + C153348 * C5607 +
              C74247 * C5602 + C75513 + C75513 + C74241 * C5608) *
                 C153600 +
             (C74565 + C74564) * C153740) *
                C83544 +
            ((C75549 + C75548) * C153600 + C74568 * C153740) * C153563 +
            C93587 * C153556) *
               C153413 * C1509) *
              C153384)) /
        (p * q * std::sqrt(p + q));
    d2ee[21] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
              C74253 + C74253 + C153348 * C161) *
                 C153740 +
             (C78834 + C78835) * C153600) *
                C153556 +
            ((C74550 + C74551) * C153740 + C79864 * C153600) * C153563 +
            C93585 * C83544) *
               C153725 -
           (C96601 * C83544 + (C79865 * C153600 + C79866 * C153740) * C153563 +
            ((C78837 + C78836) * C153600 + (C78835 + C78834) * C153740) *
                C153556) *
               C153477) *
              C153795 +
          (((C79864 * C153740 + C78764 * C153600) * C153556 +
            (C81637 * C153740 + C81638 * C153600) * C153563 +
            (C96600 * C153740 + (C76114 + C76115) * C153600) * C83544) *
               C153477 -
           (C95341 * C83544 +
            (C76763 * C153600 + (C74553 + C74552) * C153740) * C153563 +
            (C79866 * C153600 + (C74551 + C74550) * C153740) * C153556) *
               C153725) *
              C153796 +
          ((C93585 * C153556 + (C74567 * C153740 + C96600 * C153600) * C153563 +
            ((C74557 + C74556) * C153740 + (C76776 + C76777) * C153600) *
                C83544) *
               C153725 -
           (((C74249 * C28571 + C76096 + C76096 + C153348 * C28575 +
              C74247 * C28570 + C76097 + C76097 + C74241 * C28574) *
                 C153600 +
             (C76777 + C76776) * C153740) *
                C83544 +
            ((C76115 + C76114) * C153600 + C76762 * C153740) * C153563 +
            C96601 * C153556) *
               C153477) *
              C1509) *
         C153378) /
        (p * q * std::sqrt(p + q));
    d2ee[22] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
             C74253 + C74253 + C153348 * C161) *
                C153740 +
            (C78834 + C78835) * C153600) *
               C153556 +
           ((C74550 + C74551) * C153740 + C79864 * C153600) * C153563 +
           C93585 * C83544) *
              C153413 * C1218 -
          (C95341 * C83544 +
           (C76763 * C153600 + (C74553 + C74552) * C153740) * C153563 +
           (C79866 * C153600 + (C74551 + C74550) * C153740) * C153556) *
              C153413 * C1219 +
          (C93585 * C153556 +
           (C74567 * C153740 + (C75539 + C75538) * C153600) * C153563 +
           ((C74557 + C74556) * C153740 + (C76776 + C76777) * C153600) *
               C83544) *
              C153413 * C1220 -
          (((C74249 * C29033 + C76768 + C76768 + C153348 * C29037 +
             C74247 * C29032 + C76769 + C76769 + C74241 * C29036) *
                C153600 +
            (C75889 + C75888) * C153740) *
               C83544 +
           ((C76777 + C76776) * C153600 + C75874 * C153740) * C153563 +
           C95341 * C153556) *
              C153413 * C1221) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
              C74253 + C74253 + C153348 * C161) *
                 C153740 +
             (C78834 + C78835) * C153600) *
                C153556 +
            ((C74550 + C74551) * C153740 + C79864 * C153600) * C153563 +
            C93585 * C83544) *
               C153413 * C1131 -
           ((C76762 * C153600 + C75875 * C153740) * C83544 +
            (C76763 * C153600 + (C74553 + C74552) * C153740) * C153563 +
            (C79866 * C153600 + (C74551 + C74550) * C153740) * C153556) *
               C153413 * C153449) *
              C1133 +
          ((((C74558 + C74559) * C153740 + C79867 * C153600) * C153556 +
            ((C74560 + C74561) * C153740 + C94854 * C153600) * C153563 +
            ((C74562 + C74563) * C153740 + (C75548 + C75549) * C153600) *
                C83544) *
               C153413 * C153449 -
           (C93587 * C83544 +
            (C79869 * C153600 + (C74559 + C74558) * C153740) * C153563 +
            ((C78843 + C78842) * C153600 +
             (C74249 * C146 + C74266 + C74266 + C153348 * C162 + C74247 * C145 +
              C74267 + C74267 + C74241 * C161) *
                 C153740) *
                C153556) *
               C153413 * C1131) *
              C1134 +
          ((((C74247 * C146 + C74268 + C74268 + C74241 * C162 + C74249 * C147 +
              C74269 + C74269 + C153348 * C163) *
                 C153740 +
             (C79474 + C79475) * C153600) *
                C153556 +
            ((C75020 + C75021) * C153740 + (C79160 + C79161) * C153600) *
                C153563 +
            ((C75022 + C75023) * C153740 + (C94176 + C94177) * C153600) *
                C83544) *
               C153413 * C1131 -
           (((C74249 * C4146 + C75220 + C75220 + C153348 * C4154 +
              C74247 * C4145 + C75221 + C75221 + C74241 * C4153) *
                 C153600 +
             (C75025 + C75024) * C153740) *
                C83544 +
            ((C94177 + C94176) * C153600 + (C75023 + C75022) * C153740) *
                C153563 +
            ((C79161 + C79160) * C153600 + (C75021 + C75020) * C153740) *
                C153556) *
               C153413 * C153449) *
              C1135)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
              C74253 + C74253 + C153348 * C161) *
                 C153740 +
             (C78834 + C78835) * C153600) *
                C153556 +
            ((C74550 + C74551) * C153740 + C79864 * C153600) * C153563 +
            C93585 * C83544) *
               C493 -
           ((C80656 * C153600 + C76763 * C153740) * C83544 +
            (C79865 * C153600 + C79866 * C153740) * C153563 +
            ((C78837 + C78836) * C153600 + (C78835 + C78834) * C153740) *
                C153556) *
               C494 +
           ((C78850 * C153740 + (C78841 + C78840) * C153600) * C153556 +
            (C78764 * C153740 + C80647 * C153600) * C153563 +
            (C81638 * C153740 + (C80669 + C80670) * C153600) * C83544) *
               C495) *
              C1131 +
          (((C79864 * C153740 + C78764 * C153600) * C153556 +
            (C81637 * C153740 + C81638 * C153600) * C153563 +
            ((C75539 + C75538) * C153740 + (C76114 + C76115) * C153600) *
                C83544) *
               C494 -
           (C95341 * C83544 +
            (C76763 * C153600 + (C74553 + C74552) * C153740) * C153563 +
            (C79866 * C153600 + (C74551 + C74550) * C153740) * C153556) *
               C493 -
           (((C74249 * C32070 + C77296 + C77296 + C153348 * C32072 +
              C74247 * C30195 + C77297 + C77297 + C74241 * C30199) *
                 C153600 +
             (C76115 + C76114) * C153740) *
                C83544 +
            ((C80670 + C80669) * C153600 + C80656 * C153740) * C153563 +
            (C80646 * C153600 + C79865 * C153740) * C153556) *
               C495) *
              C153449) *
         C153378) /
            (p * q * std::sqrt(p + q));
    d2ee[23] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
               C74253 + C74253 + C153348 * C161) *
                  C153740 +
              (C78834 + C78835) * C153600) *
                 C153556 +
             ((C74550 + C74551) * C153740 + C79864 * C153600) * C153563 +
             C93585 * C83544) *
                C153725 -
            ((C80656 * C153600 + C76763 * C153740) * C83544 +
             (C79865 * C153600 + C79866 * C153740) * C153563 +
             ((C78837 + C78836) * C153600 + (C78835 + C78834) * C153740) *
                 C153556) *
                C153477) *
               C1131 +
           (((C79864 * C153740 + C78764 * C153600) * C153556 +
             (C81637 * C153740 + C81638 * C153600) * C153563 +
             ((C75539 + C75538) * C153740 + (C76114 + C76115) * C153600) *
                 C83544) *
                C153477 -
            (C95341 * C83544 +
             (C76763 * C153600 + (C74553 + C74552) * C153740) * C153563 +
             (C79866 * C153600 + (C74551 + C74550) * C153740) * C153556) *
                C153725) *
               C153449) *
              C153716 +
          (((((C78842 + C78843) * C153740 + (C78844 + C78845) * C153600) *
                 C153556 +
             (C79867 * C153740 + C79868 * C153600) * C153563 +
             (C94854 * C153740 + (C78464 + C78465) * C153600) * C83544) *
                C153477 -
            (C93587 * C83544 +
             (C79869 * C153600 + (C74559 + C74558) * C153740) * C153563 +
             ((C78843 + C78842) * C153600 +
              (C74249 * C146 + C74266 + C74266 + C153348 * C162 +
               C74247 * C145 + C74267 + C74267 + C74241 * C161) *
                  C153740) *
                 C153556) *
                C153725) *
               C1131 +
           ((((C74558 + C74559) * C153740 + C79867 * C153600) * C153556 +
             ((C74560 + C74561) * C153740 + C94854 * C153600) * C153563 +
             ((C74562 + C74563) * C153740 + (C75548 + C75549) * C153600) *
                 C83544) *
                C153725 -
            (((C74249 * C4833 + C74792 + C74792 + C153348 * C4839 +
               C74247 * C4834 + C74793 + C74793 + C74241 * C4840) *
                  C153600 +
              (C75549 + C75548) * C153740) *
                 C83544 +
             ((C78465 + C78464) * C153600 + C93583 * C153740) * C153563 +
             (C78797 * C153600 + C79869 * C153740) * C153556) *
                C153477) *
               C153449) *
              C153384)) /
        (p * q * std::sqrt(p + q));
    d2ee[24] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
              C74253 + C74253 + C153348 * C161) *
                 C153740 +
             (C78834 + C78835) * C153600) *
                C153556 +
            ((C74550 + C74551) * C153740 + C79864 * C153600) * C153563 +
            C93585 * C83544) *
               C153413 * C1131 -
           ((C76762 * C153600 + C75875 * C153740) * C83544 +
            (C76763 * C153600 + (C74553 + C74552) * C153740) * C153563 +
            (C79866 * C153600 + (C74551 + C74550) * C153740) * C153556) *
               C153413 * C153449) *
              C1133 +
          ((((C74558 + C74559) * C153740 + C79867 * C153600) * C153556 +
            ((C74560 + C74561) * C153740 + C94854 * C153600) * C153563 +
            ((C74562 + C74563) * C153740 + (C75548 + C75549) * C153600) *
                C83544) *
               C153413 * C153449 -
           (C93587 * C83544 +
            (C79869 * C153600 + (C74559 + C74558) * C153740) * C153563 +
            ((C78843 + C78842) * C153600 +
             (C74249 * C146 + C74266 + C74266 + C153348 * C162 + C74247 * C145 +
              C74267 + C74267 + C74241 * C161) *
                 C153740) *
                C153556) *
               C153413 * C1131) *
              C1134 +
          ((((C74247 * C146 + C74268 + C74268 + C74241 * C162 + C74249 * C147 +
              C74269 + C74269 + C153348 * C163) *
                 C153740 +
             (C79474 + C79475) * C153600) *
                C153556 +
            ((C75020 + C75021) * C153740 + (C79160 + C79161) * C153600) *
                C153563 +
            ((C75022 + C75023) * C153740 + (C94176 + C94177) * C153600) *
                C83544) *
               C153413 * C1131 -
           (((C74249 * C4146 + C75220 + C75220 + C153348 * C4154 +
              C74247 * C4145 + C75221 + C75221 + C74241 * C4153) *
                 C153600 +
             (C75025 + C75024) * C153740) *
                C83544 +
            ((C94177 + C94176) * C153600 + (C75023 + C75022) * C153740) *
                C153563 +
            ((C79161 + C79160) * C153600 + (C75021 + C75020) * C153740) *
                C153556) *
               C153413 * C153449) *
              C1135)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
             C74253 + C74253 + C153348 * C161) *
                C153740 +
            (C78834 + C78835) * C153600) *
               C153556 +
           ((C74550 + C74551) * C153740 + C79864 * C153600) * C153563 +
           C93585 * C83544) *
              C153413 * C1218 -
          (C95341 * C83544 +
           (C76763 * C153600 + (C74553 + C74552) * C153740) * C153563 +
           (C79866 * C153600 + (C74551 + C74550) * C153740) * C153556) *
              C153413 * C1219 +
          (C93585 * C153556 +
           (C74567 * C153740 + (C75539 + C75538) * C153600) * C153563 +
           ((C74557 + C74556) * C153740 + (C76776 + C76777) * C153600) *
               C83544) *
              C153413 * C1220 -
          (((C74249 * C29033 + C76768 + C76768 + C153348 * C29037 +
             C74247 * C29032 + C76769 + C76769 + C74241 * C29036) *
                C153600 +
            (C75889 + C75888) * C153740) *
               C83544 +
           ((C76777 + C76776) * C153600 + C75874 * C153740) * C153563 +
           C95341 * C153556) *
              C153413 * C1221) *
         C153378) /
            (p * q * std::sqrt(p + q));
    d2ee[25] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
               C74253 + C74253 + C153348 * C161) *
                  C153740 +
              (C78834 + C78835) * C153600) *
                 C153556 +
             ((C74550 + C74551) * C153740 + C79864 * C153600) * C153563 +
             C93585 * C83544) *
                C1938 -
            (C96601 * C83544 + (C79865 * C153600 + C79866 * C153740) * C153563 +
             ((C78837 + C78836) * C153600 + (C78835 + C78834) * C153740) *
                 C153556) *
                C153477) *
               C153724 +
           (((C79864 * C153740 + C78764 * C153600) * C153556 +
             (C81637 * C153740 + C81638 * C153600) * C153563 +
             (C96600 * C153740 + (C76114 + C76115) * C153600) * C83544) *
                C153477 -
            (C95341 * C83544 +
             (C76763 * C153600 + (C74553 + C74552) * C153740) * C153563 +
             (C79866 * C153600 + (C74551 + C74550) * C153740) * C153556) *
                C1938) *
               C153449) *
              C153716 +
          (((((C78842 + C78843) * C153740 + (C78844 + C78845) * C153600) *
                 C153556 +
             (C79867 * C153740 + C79868 * C153600) * C153563 +
             (C94854 * C153740 + (C78464 + C78465) * C153600) * C83544) *
                C153477 -
            (C93587 * C83544 +
             (C79869 * C153600 + (C74559 + C74558) * C153740) * C153563 +
             ((C78843 + C78842) * C153600 +
              (C74249 * C146 + C74266 + C74266 + C153348 * C162 +
               C74247 * C145 + C74267 + C74267 + C74241 * C161) *
                  C153740) *
                 C153556) *
                C1938) *
               C153724 +
           ((((C74558 + C74559) * C153740 + C79867 * C153600) * C153556 +
             ((C74560 + C74561) * C153740 + C94854 * C153600) * C153563 +
             ((C74562 + C74563) * C153740 + (C75548 + C75549) * C153600) *
                 C83544) *
                C1938 -
            (((C74249 * C4833 + C74792 + C74792 + C153348 * C4839 +
               C74247 * C4834 + C74793 + C74793 + C74241 * C4840) *
                  C153600 +
              (C75549 + C75548) * C153740) *
                 C83544 +
             ((C78465 + C78464) * C153600 + C93583 * C153740) * C153563 +
             (C78797 * C153600 + C79869 * C153740) * C153556) *
                C153477) *
               C153449) *
              C153384)) /
        (p * q * std::sqrt(p + q));
    d2ee[26] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
              C74253 + C74253 + C153348 * C161) *
                 C153740 +
             (C78834 + C78835) * C153600) *
                C153556 +
            ((C74550 + C74551) * C153740 + C79864 * C153600) * C153563 +
            C93585 * C83544) *
               C153797 -
           (C96601 * C83544 + (C79865 * C153600 + C79866 * C153740) * C153563 +
            ((C78837 + C78836) * C153600 + (C78835 + C78834) * C153740) *
                C153556) *
               C153798 +
           ((C78850 * C153740 + (C78841 + C78840) * C153600) * C153556 +
            (C78764 * C153740 + C80647 * C153600) * C153563 +
            (C81638 * C153740 + (C80669 + C80670) * C153600) * C83544) *
               C2454) *
              C153724 +
          (((C79864 * C153740 + C78764 * C153600) * C153556 +
            (C81637 * C153740 + C81638 * C153600) * C153563 +
            (C96600 * C153740 + (C76114 + C76115) * C153600) * C83544) *
               C153798 -
           (C95341 * C83544 +
            (C76763 * C153600 + (C74553 + C74552) * C153740) * C153563 +
            (C79866 * C153600 + (C74551 + C74550) * C153740) * C153556) *
               C153797 -
           (((C74249 * C32070 + C77296 + C77296 + C153348 * C32072 +
              C74247 * C30195 + C77297 + C77297 + C74241 * C30199) *
                 C153600 +
             (C76115 + C76114) * C153740) *
                C83544 +
            ((C80670 + C80669) * C153600 + C80656 * C153740) * C153563 +
            (C80646 * C153600 + C79865 * C153740) * C153556) *
               C2454) *
              C153449) *
         C153378) /
        (p * q * std::sqrt(p + q));
    d2ee[27] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
              C74253 + C74253 + C153348 * C161) *
                 C153740 +
             (C78834 + C78835) * C153600) *
                C153556 +
            ((C74550 + C74551) * C153740 + C79864 * C153600) * C153563 +
            C93585 * C83544) *
               C1938 -
           (C96601 * C83544 + (C79865 * C153600 + C79866 * C153740) * C153563 +
            ((C78837 + C78836) * C153600 + (C78835 + C78834) * C153740) *
                C153556) *
               C153477) *
              C310 +
          (((C79864 * C153740 + C78764 * C153600) * C153556 +
            (C81637 * C153740 + C81638 * C153600) * C153563 +
            (C96600 * C153740 + (C76114 + C76115) * C153600) * C83544) *
               C153477 -
           (C95341 * C83544 +
            (C76763 * C153600 + (C74553 + C74552) * C153740) * C153563 +
            (C79866 * C153600 + (C74551 + C74550) * C153740) * C153556) *
               C1938) *
              C311 +
          ((C93585 * C153556 + (C74567 * C153740 + C96600 * C153600) * C153563 +
            ((C74557 + C74556) * C153740 + (C76776 + C76777) * C153600) *
                C83544) *
               C1938 -
           (((C74249 * C28571 + C76096 + C76096 + C153348 * C28575 +
              C74247 * C28570 + C76097 + C76097 + C74241 * C28574) *
                 C153600 +
             (C76777 + C76776) * C153740) *
                C83544 +
            ((C76115 + C76114) * C153600 + C76762 * C153740) * C153563 +
            C96601 * C153556) *
               C153477) *
              C312) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
              C74253 + C74253 + C153348 * C161) *
                 C153740 +
             (C78834 + C78835) * C153600) *
                C153556 +
            ((C74550 + C74551) * C153740 + C79864 * C153600) * C153563 +
            C93585 * C83544) *
               C1938 -
           (C96601 * C83544 + (C79865 * C153600 + C79866 * C153740) * C153563 +
            ((C78837 + C78836) * C153600 + (C78835 + C78834) * C153740) *
                C153556) *
               C153477) *
              C153397 * C1133 +
          ((((C78842 + C78843) * C153740 + (C78844 + C78845) * C153600) *
                C153556 +
            (C79867 * C153740 + C79868 * C153600) * C153563 +
            (C94854 * C153740 + (C78464 + C78465) * C153600) * C83544) *
               C153477 -
           (C93587 * C83544 +
            (C79869 * C153600 + (C74559 + C74558) * C153740) * C153563 +
            ((C78843 + C78842) * C153600 +
             (C74249 * C146 + C74266 + C74266 + C153348 * C162 + C74247 * C145 +
              C74267 + C74267 + C74241 * C161) *
                 C153740) *
                C153556) *
               C1938) *
              C153397 * C1134 +
          ((((C74247 * C146 + C74268 + C74268 + C74241 * C162 + C74249 * C147 +
              C74269 + C74269 + C153348 * C163) *
                 C153740 +
             (C79474 + C79475) * C153600) *
                C153556 +
            ((C75020 + C75021) * C153740 + (C79160 + C79161) * C153600) *
                C153563 +
            ((C75022 + C75023) * C153740 + (C94176 + C94177) * C153600) *
                C83544) *
               C1938 -
           (((C74249 * C3330 + C79150 + C79150 + C153348 * C3338 +
              C74247 * C3329 + C79151 + C79151 + C74241 * C3337) *
                 C153600 +
             (C94177 + C94176) * C153740) *
                C83544 +
            ((C79163 + C79162) * C153600 + (C79161 + C79160) * C153740) *
                C153563 +
            ((C79477 + C79476) * C153600 + (C79475 + C79474) * C153740) *
                C153556) *
               C153477) *
              C153397 * C1135)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
             C74253 + C74253 + C153348 * C161) *
                C153740 +
            (C78834 + C78835) * C153600) *
               C153556 +
           ((C74550 + C74551) * C153740 + C79864 * C153600) * C153563 +
           C93585 * C83544) *
              C2144 -
          (C96601 * C83544 + (C79865 * C153600 + C79866 * C153740) * C153563 +
           ((C78837 + C78836) * C153600 + (C78835 + C78834) * C153740) *
               C153556) *
              C2145 +
          ((C78850 * C153740 + (C78841 + C78840) * C153600) * C153556 +
           (C78764 * C153740 + C80647 * C153600) * C153563 +
           (C81638 * C153740 + (C80669 + C80670) * C153600) * C83544) *
              C2146 -
          (((C74249 * C31240 + C80657 + C80657 + C153348 * C31244 +
             C74247 * C31239 + C80658 + C80658 + C74241 * C31243) *
                C153600 +
            (C80670 + C80669) * C153740) *
               C83544 +
           ((C80668 + C80667) * C153600 + C80646 * C153740) * C153563 +
           ((C82427 + C82426) * C153600 + C82413 * C153740) * C153556) *
              C2147) *
         C153397 * C153378) /
            (p * q * std::sqrt(p + q));
    d2ee[28] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
              C74253 + C74253 + C153348 * C161) *
                 C153740 +
             (C78834 + C78835) * C153600) *
                C153556 +
            ((C74550 + C74551) * C153740 + C79864 * C153600) * C153563 +
            C93585 * C83544) *
               C153797 -
           (C96601 * C83544 + (C79865 * C153600 + C79866 * C153740) * C153563 +
            ((C78837 + C78836) * C153600 + (C78835 + C78834) * C153740) *
                C153556) *
               C153798 +
           ((C78850 * C153740 + (C78841 + C78840) * C153600) * C153556 +
            (C78764 * C153740 + C80647 * C153600) * C153563 +
            (C81638 * C153740 + (C80669 + C80670) * C153600) * C83544) *
               C2454) *
              C153397 * C153716 +
          ((((C78842 + C78843) * C153740 + (C78844 + C78845) * C153600) *
                C153556 +
            (C79867 * C153740 + C79868 * C153600) * C153563 +
            (C94854 * C153740 + (C78464 + C78465) * C153600) * C83544) *
               C153798 -
           (C93587 * C83544 +
            (C79869 * C153600 + (C74559 + C74558) * C153740) * C153563 +
            ((C78843 + C78842) * C153600 +
             (C74249 * C146 + C74266 + C74266 + C153348 * C162 + C74247 * C145 +
              C74267 + C74267 + C74241 * C161) *
                 C153740) *
                C153556) *
               C153797 -
           (((C74249 * C6213 + C79870 + C79870 + C153348 * C6225 +
              C74247 * C6214 + C79871 + C79871 + C74241 * C6226) *
                 C153600 +
             (C78465 + C78464) * C153740) *
                C83544 +
            ((C78849 + C78848) * C153600 + C78797 * C153740) * C153563 +
            ((C78847 + C78846) * C153600 + C78851 * C153740) * C153556) *
               C2454) *
              C153397 * C153384)) /
        (p * q * std::sqrt(p + q));
    d2ee[29] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
              C74253 + C74253 + C153348 * C161) *
                 C153740 +
             (C78834 + C78835) * C153600) *
                C153556 +
            ((C74550 + C74551) * C153740 + C79864 * C153600) * C153563 +
            C93585 * C83544) *
               C1938 -
           (C96601 * C83544 + (C79865 * C153600 + C79866 * C153740) * C153563 +
            ((C78837 + C78836) * C153600 + (C78835 + C78834) * C153740) *
                C153556) *
               C153477) *
              C153397 * C1133 +
          ((((C78842 + C78843) * C153740 + (C78844 + C78845) * C153600) *
                C153556 +
            (C79867 * C153740 + C79868 * C153600) * C153563 +
            (C94854 * C153740 + (C78464 + C78465) * C153600) * C83544) *
               C153477 -
           (C93587 * C83544 +
            (C79869 * C153600 + (C74559 + C74558) * C153740) * C153563 +
            ((C78843 + C78842) * C153600 +
             (C74249 * C146 + C74266 + C74266 + C153348 * C162 + C74247 * C145 +
              C74267 + C74267 + C74241 * C161) *
                 C153740) *
                C153556) *
               C1938) *
              C153397 * C1134 +
          ((((C74247 * C146 + C74268 + C74268 + C74241 * C162 + C74249 * C147 +
              C74269 + C74269 + C153348 * C163) *
                 C153740 +
             (C79474 + C79475) * C153600) *
                C153556 +
            ((C75020 + C75021) * C153740 + (C79160 + C79161) * C153600) *
                C153563 +
            ((C75022 + C75023) * C153740 + (C94176 + C94177) * C153600) *
                C83544) *
               C1938 -
           (((C74249 * C3330 + C79150 + C79150 + C153348 * C3338 +
              C74247 * C3329 + C79151 + C79151 + C74241 * C3337) *
                 C153600 +
             (C94177 + C94176) * C153740) *
                C83544 +
            ((C79163 + C79162) * C153600 + (C79161 + C79160) * C153740) *
                C153563 +
            ((C79477 + C79476) * C153600 + (C79475 + C79474) * C153740) *
                C153556) *
               C153477) *
              C153397 * C1135)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
              C74253 + C74253 + C153348 * C161) *
                 C153740 +
             (C78834 + C78835) * C153600) *
                C153556 +
            ((C74550 + C74551) * C153740 + C79864 * C153600) * C153563 +
            C93585 * C83544) *
               C1938 -
           (C96601 * C83544 + (C79865 * C153600 + C79866 * C153740) * C153563 +
            ((C78837 + C78836) * C153600 + (C78835 + C78834) * C153740) *
                C153556) *
               C153477) *
              C310 +
          (((C79864 * C153740 + C78764 * C153600) * C153556 +
            (C81637 * C153740 + C81638 * C153600) * C153563 +
            (C96600 * C153740 + (C76114 + C76115) * C153600) * C83544) *
               C153477 -
           (C95341 * C83544 +
            (C76763 * C153600 + (C74553 + C74552) * C153740) * C153563 +
            (C79866 * C153600 + (C74551 + C74550) * C153740) * C153556) *
               C1938) *
              C311 +
          ((C93585 * C153556 + (C74567 * C153740 + C96600 * C153600) * C153563 +
            ((C74557 + C74556) * C153740 + (C76776 + C76777) * C153600) *
                C83544) *
               C1938 -
           (((C74249 * C28571 + C76096 + C76096 + C153348 * C28575 +
              C74247 * C28570 + C76097 + C76097 + C74241 * C28574) *
                 C153600 +
             (C76777 + C76776) * C153740) *
                C83544 +
            ((C76115 + C76114) * C153600 + C76762 * C153740) * C153563 +
            C96601 * C153556) *
               C153477) *
              C312) *
         C153378) /
            (p * q * std::sqrt(p + q));
    d2ee[30] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C74247 * C144 + C74252 + C74252 + C74241 * C160 +
                     C74249 * C145 + C74253 + C74253 + C153348 * C161) *
                        C153513 * C153819 +
                    (C74550 + C74551) * C153513 * C153815 + C74570 * C153805 +
                    C74571 * C153747) *
                       C153413 * C153724 -
                   ((C74556 + C74557) * C153513 * C153747 +
                    (C74555 + C74554) * C153513 * C153805 +
                    (C74553 + C74552) * C153513 * C153815 +
                    (C74551 + C74550) * C153513 * C153819) *
                       C153413 * C153449) *
                      C153793 +
                  (((C74558 + C74559) * C153513 * C153819 +
                    (C74560 + C74561) * C153513 * C153815 +
                    (C74562 + C74563) * C153513 * C153805 +
                    (C74564 + C74565) * C153513 * C153747) *
                       C153413 * C153449 -
                   (C74572 * C153747 + C74573 * C153805 +
                    (C74559 + C74558) * C153513 * C153815 +
                    (C74249 * C146 + C74266 + C74266 + C153348 * C162 +
                     C74247 * C145 + C74267 + C74267 + C74241 * C161) *
                        C153513 * C153819) *
                       C153413 * C153724) *
                      C153794 +
                  (((C74247 * C146 + C74268 + C74268 + C74241 * C162 +
                     C74249 * C147 + C74269 + C74269 + C153348 * C163) *
                        C153513 * C153819 +
                    (C75020 + C75021) * C153513 * C153815 +
                    (C75022 + C75023) * C153513 * C153805 +
                    (C75024 + C75025) * C153513 * C153747) *
                       C153413 * C153724 -
                   ((C74249 * C2992 + C75006 + C75006 + C153348 * C3000 +
                     C74247 * C2991 + C75007 + C75007 + C74241 * C2999) *
                        C153513 * C153747 +
                    (C75025 + C75024) * C153513 * C153805 +
                    (C75023 + C75022) * C153513 * C153815 +
                    (C75021 + C75020) * C153513 * C153819) *
                       C153413 * C153449) *
                      C678)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C70421 * C144 + C70430 + C70430 + C153818 * C160 +
                     C70423 * C145 + C70431 + C70431 + C153811 * C161 +
                     C70425 * C146 + C70432 + C70432 + C153792 * C162 +
                     C70427 * C147 + C70433 + C70433 + C153738 * C163) *
                        C153513 * C70419 +
                    (C70736 + C70737 + C70738 + C70739) * C153513 * C153560) *
                       C153413 * C153724 -
                   ((C70740 + C70741 + C70742 + C70743) * C153513 * C153560 +
                    (C70739 + C70738 + C70737 + C70736) * C153513 * C70419) *
                       C153413 * C153449) *
                      C153793 +
                  (((C70744 + C70745 + C70746 + C70747) * C153513 * C70419 +
                    (C70748 + C70749 + C70750 + C70751) * C153513 * C153560) *
                       C153413 * C153449 -
                   ((C70747 + C70746 + C70745 + C70744) * C153513 * C153560 +
                    (C70427 * C148 + C70442 + C70442 + C153738 * C164 +
                     C70425 * C147 + C70443 + C70443 + C153792 * C163 +
                     C70423 * C146 + C70444 + C70444 + C153811 * C162 +
                     C70421 * C145 + C70445 + C70445 + C153818 * C161) *
                        C153513 * C70419) *
                       C153413 * C153724) *
                      C153794 +
                  (((C70421 * C146 + C70446 + C70446 + C153818 * C162 +
                     C70423 * C147 + C70447 + C70447 + C153811 * C163 +
                     C70425 * C148 + C70448 + C70448 + C153792 * C164 +
                     C70427 * C149 + C70449 + C70449 + C153738 * C165) *
                        C153513 * C70419 +
                    (C71192 + C71193 + C71194 + C71195) * C153513 * C153560) *
                       C153413 * C153724 -
                   ((C70427 * C326 + C71180 + C71180 + C153738 * C350 +
                     C70425 * C324 + C71181 + C71181 + C153792 * C348 +
                     C70423 * C323 + C71182 + C71182 + C153811 * C347 +
                     C70421 * C322 + C71183 + C71183 + C153818 * C346) *
                        C153513 * C153560 +
                    (C71195 + C71194 + C71193 + C71192) * C153513 * C70419) *
                       C153413 * C153449) *
                      C678)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C74247 * C144 + C74252 + C74252 + C74241 * C160 +
                      C74249 * C145 + C74253 + C74253 + C153348 * C161) *
                         C153813 +
                     (C78834 + C78835) * C153802 + C78850 * C153777) *
                        C70419 +
                    ((C74550 + C74551) * C153813 + (C75543 + C75542) * C153802 +
                     C78764 * C153777) *
                        C153560) *
                       C153413 * C153724 -
                   (((C76113 + C76112) * C153777 + C76763 * C153802 +
                     (C74553 + C74552) * C153813) *
                        C153560 +
                    ((C76111 + C76110) * C153777 + (C75542 + C75543) * C153802 +
                     (C74551 + C74550) * C153813) *
                        C70419) *
                       C153413 * C153449) *
                      C153793 +
                  ((((C74558 + C74559) * C153813 + (C75544 + C75545) * C153802 +
                     (C78462 + C78463) * C153777) *
                        C70419 +
                    ((C74560 + C74561) * C153813 + (C75546 + C75547) * C153802 +
                     (C78464 + C78465) * C153777) *
                        C153560) *
                       C153413 * C153449 -
                   ((C78797 * C153777 + (C75545 + C75544) * C153802 +
                     (C74559 + C74558) * C153813) *
                        C153560 +
                    (C78851 * C153777 + (C78843 + C78842) * C153802 +
                     (C74249 * C146 + C74266 + C74266 + C153348 * C162 +
                      C74247 * C145 + C74267 + C74267 + C74241 * C161) *
                         C153813) *
                        C70419) *
                       C153413 * C153724) *
                      C153794 +
                  ((((C74247 * C146 + C74268 + C74268 + C74241 * C162 +
                      C74249 * C147 + C74269 + C74269 + C153348 * C163) *
                         C153813 +
                     (C74247 * C498 + C75227 + C75227 + C74241 * C522 +
                      C74249 * C497 + C75226 + C75226 + C153348 * C521) *
                         C153802 +
                     (C74247 * C503 + C78144 + C78144 + C74241 * C527 +
                      C74249 * C504 + C78145 + C78145 + C153348 * C528) *
                         C153777) *
                        C70419 +
                    ((C75020 + C75021) * C153813 + (C79160 + C79161) * C153802 +
                     (C79162 + C79163) * C153777) *
                        C153560) *
                       C153413 * C153724 -
                   (((C74249 * C3330 + C79150 + C79150 + C153348 * C3338 +
                      C74247 * C3329 + C79151 + C79151 + C74241 * C3337) *
                         C153777 +
                     (C74249 * C1797 + C75222 + C75222 + C153348 * C1807 +
                      C74247 * C1798 + C75223 + C75223 + C74241 * C1808) *
                         C153802 +
                     (C75023 + C75022) * C153813) *
                        C153560 +
                    ((C79163 + C79162) * C153777 + (C79161 + C79160) * C153802 +
                     (C75021 + C75020) * C153813) *
                        C70419) *
                       C153413 * C153449) *
                      C678)) /
                    (p * q * std::sqrt(p + q));
    d2ee[31] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
              C74253 + C74253 + C153348 * C161) *
                 C153513 * C153819 +
             (C74550 + C74551) * C153513 * C153815 + C74570 * C153805 +
             C74571 * C153747) *
                C153725 -
            ((C75538 + C75539) * C153513 * C153747 +
             (C75540 + C75541) * C153513 * C153805 +
             (C75542 + C75543) * C153513 * C153815 +
             (C74249 * C499 + C74774 + C74774 + C153348 * C523 + C74247 * C500 +
              C74775 + C74775 + C74241 * C524) *
                 C153513 * C153819) *
                C153477) *
               C153724 +
           (((C75543 + C75542) * C153513 * C153819 +
             (C75541 + C75540) * C153513 * C153815 +
             (C75539 + C75538) * C153513 * C153805 +
             (C74247 * C5603 + C75498 + C75498 + C74241 * C5609 +
              C74249 * C5602 + C75499 + C75499 + C153348 * C5608) *
                 C153513 * C153747) *
                C153477 -
            ((C74556 + C74557) * C153513 * C153747 +
             (C74555 + C74554) * C153513 * C153805 +
             (C74553 + C74552) * C153513 * C153815 +
             (C74551 + C74550) * C153513 * C153819) *
                C153725) *
               C153449) *
              C313 +
          ((((C74247 * C499 + C74784 + C74784 + C74241 * C523 + C74249 * C498 +
              C74785 + C74785 + C153348 * C522) *
                 C153513 * C153819 +
             (C75544 + C75545) * C153513 * C153815 +
             (C75546 + C75547) * C153513 * C153805 +
             (C75548 + C75549) * C153513 * C153747) *
                C153477 -
            (C74572 * C153747 + C74573 * C153805 +
             (C74559 + C74558) * C153513 * C153815 +
             (C74249 * C146 + C74266 + C74266 + C153348 * C162 + C74247 * C145 +
              C74267 + C74267 + C74241 * C161) *
                 C153513 * C153819) *
                C153725) *
               C153724 +
           (((C74558 + C74559) * C153513 * C153819 +
             (C74560 + C74561) * C153513 * C153815 +
             (C74562 + C74563) * C153513 * C153805 +
             (C74564 + C74565) * C153513 * C153747) *
                C153725 -
            ((C74249 * C5601 + C75512 + C75512 + C153348 * C5607 +
              C74247 * C5602 + C75513 + C75513 + C74241 * C5608) *
                 C153513 * C153747 +
             (C75549 + C75548) * C153513 * C153805 +
             (C75547 + C75546) * C153513 * C153815 +
             (C75545 + C75544) * C153513 * C153819) *
                C153477) *
               C153449) *
              C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C70421 * C144 + C70430 + C70430 + C153818 * C160 + C70423 * C145 +
              C70431 + C70431 + C153811 * C161 + C70425 * C146 + C70432 +
              C70432 + C153792 * C162 + C70427 * C147 + C70433 + C70433 +
              C153738 * C163) *
                 C153513 * C70419 +
             (C70736 + C70737 + C70738 + C70739) * C153513 * C153560) *
                C153725 -
            ((C71696 + C71697 + C71698 + C71699) * C153513 * C153560 +
             (C70427 * C497 + C70950 + C70950 + C153738 * C521 + C70425 * C498 +
              C70951 + C70951 + C153792 * C522 + C70423 * C499 + C70952 +
              C70952 + C153811 * C523 + C70421 * C500 + C70953 + C70953 +
              C153818 * C524) *
                 C153513 * C70419) *
                C153477) *
               C153724 +
           (((C71699 + C71698 + C71697 + C71696) * C153513 * C70419 +
             (C70421 * C1800 + C71664 + C71664 + C153818 * C1810 +
              C70423 * C1799 + C71665 + C71665 + C153811 * C1809 +
              C70425 * C1798 + C71666 + C71666 + C153792 * C1808 +
              C70427 * C1797 + C71667 + C71667 + C153738 * C1807) *
                 C153513 * C153560) *
                C153477 -
            ((C70740 + C70741 + C70742 + C70743) * C153513 * C153560 +
             (C70739 + C70738 + C70737 + C70736) * C153513 * C70419) *
                C153725) *
               C153449) *
              C313 +
          ((((C70421 * C499 + C70962 + C70962 + C153818 * C523 + C70423 * C498 +
              C70963 + C70963 + C153811 * C522 + C70425 * C497 + C70964 +
              C70964 + C153792 * C521 + C70427 * C496 + C70965 + C70965 +
              C153738 * C520) *
                 C153513 * C70419 +
             (C71700 + C71701 + C71702 + C71703) * C153513 * C153560) *
                C153477 -
            ((C70747 + C70746 + C70745 + C70744) * C153513 * C153560 +
             (C70427 * C148 + C70442 + C70442 + C153738 * C164 + C70425 * C147 +
              C70443 + C70443 + C153792 * C163 + C70423 * C146 + C70444 +
              C70444 + C153811 * C162 + C70421 * C145 + C70445 + C70445 +
              C153818 * C161) *
                 C153513 * C70419) *
                C153725) *
               C153724 +
           (((C70744 + C70745 + C70746 + C70747) * C153513 * C70419 +
             (C70748 + C70749 + C70750 + C70751) * C153513 * C153560) *
                C153725 -
            ((C70427 * C1796 + C71676 + C71676 + C153738 * C1806 +
              C70425 * C1797 + C71677 + C71677 + C153792 * C1807 +
              C70423 * C1798 + C71678 + C71678 + C153811 * C1808 +
              C70421 * C1799 + C71679 + C71679 + C153818 * C1809) *
                 C153513 * C153560 +
             (C71703 + C71702 + C71701 + C71700) * C153513 * C70419) *
                C153477) *
               C153449) *
              C153384)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
               C74253 + C74253 + C153348 * C161) *
                  C153813 +
              (C78834 + C78835) * C153802 + C78850 * C153777) *
                 C70419 +
             ((C74550 + C74551) * C153813 + C79864 * C153802 +
              C78764 * C153777) *
                 C153560) *
                C153725 -
            (((C78838 + C78839) * C153777 + C79865 * C153802 +
              C79866 * C153813) *
                 C153560 +
             ((C78840 + C78841) * C153777 + (C78837 + C78836) * C153802 +
              (C78835 + C78834) * C153813) *
                 C70419) *
                C153477) *
               C153724 +
           (((C79864 * C153813 + C78764 * C153802 +
              (C78839 + C78838) * C153777) *
                 C70419 +
             ((C75541 + C75540) * C153813 + (C76112 + C76113) * C153802 +
              (C74247 * C6215 + C77299 + C77299 + C74241 * C6227 +
               C74249 * C6214 + C77298 + C77298 + C153348 * C6226) *
                  C153777) *
                 C153560) *
                C153477 -
            (((C76113 + C76112) * C153777 + C76763 * C153802 +
              (C74553 + C74552) * C153813) *
                 C153560 +
             (C79865 * C153777 + C79866 * C153802 +
              (C74551 + C74550) * C153813) *
                 C70419) *
                C153725) *
               C153449) *
              C313 +
          (((((C78842 + C78843) * C153813 + (C78844 + C78845) * C153802 +
              (C78846 + C78847) * C153777) *
                 C70419 +
             (C79867 * C153813 + C79868 * C153802 +
              (C78848 + C78849) * C153777) *
                 C153560) *
                C153477 -
            ((C78797 * C153777 + C79869 * C153802 +
              (C74559 + C74558) * C153813) *
                 C153560 +
             (C78851 * C153777 + (C78843 + C78842) * C153802 +
              (C74249 * C146 + C74266 + C74266 + C153348 * C162 +
               C74247 * C145 + C74267 + C74267 + C74241 * C161) *
                  C153813) *
                 C70419) *
                C153725) *
               C153724 +
           ((((C74558 + C74559) * C153813 + C79867 * C153802 +
              C79868 * C153777) *
                 C70419 +
             ((C74560 + C74561) * C153813 + (C75546 + C75547) * C153802 +
              (C78464 + C78465) * C153777) *
                 C153560) *
                C153725 -
            (((C74249 * C6213 + C79870 + C79870 + C153348 * C6225 +
               C74247 * C6214 + C79871 + C79871 + C74241 * C6226) *
                  C153777 +
              (C78465 + C78464) * C153802 + (C75547 + C75546) * C153813) *
                 C153560 +
             ((C78849 + C78848) * C153777 + C78797 * C153802 +
              C79869 * C153813) *
                 C70419) *
                C153477) *
               C153449) *
              C153384)) /
            (p * q * std::sqrt(p + q));
    d2ee[32] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((C70421 * C144 + C70430 + C70430 + C153818 * C160 +
                C70423 * C145 + C70431 + C70431 + C153811 * C161 +
                C70425 * C146 + C70432 + C70432 + C153792 * C162 +
                C70427 * C147 + C70433 + C70433 + C153738 * C163) *
                   C153513 * C70419 +
               (C70421 * C319 + C70434 + C70434 + C153818 * C343 +
                C70423 * C318 + C70435 + C70435 + C153811 * C342 +
                C70425 * C317 + C70436 + C70436 + C153792 * C341 +
                C70427 * C316 + C70437 + C70437 + C153738 * C340) *
                   C153513 * C153560) *
                  C153413 * C153397 * C130 -
              ((C70427 * C315 + C70438 + C70438 + C153738 * C339 +
                C70425 * C316 + C70439 + C70439 + C153792 * C340 +
                C70423 * C317 + C70440 + C70440 + C153811 * C341 +
                C70421 * C318 + C70441 + C70441 + C153818 * C342) *
                   C153513 * C153560 +
               (C70427 * C148 + C70442 + C70442 + C153738 * C164 +
                C70425 * C147 + C70443 + C70443 + C153792 * C163 +
                C70423 * C146 + C70444 + C70444 + C153811 * C162 +
                C70421 * C145 + C70445 + C70445 + C153818 * C161) *
                   C153513 * C70419) *
                  C153413 * C153397 * C131 +
              ((C70421 * C146 + C70446 + C70446 + C153818 * C162 +
                C70423 * C147 + C70447 + C70447 + C153811 * C163 +
                C70425 * C148 + C70448 + C70448 + C153792 * C164 +
                C70427 * C149 + C70449 + C70449 + C153738 * C165) *
                   C153513 * C70419 +
               (C70421 * C317 + C70450 + C70450 + C153818 * C341 +
                C70423 * C316 + C70451 + C70451 + C153811 * C340 +
                C70425 * C315 + C70452 + C70452 + C153792 * C339 +
                C70427 * C325 + C70453 + C70453 + C153738 * C349) *
                   C153513 * C153560) *
                  C153413 * C153397 * C132 -
              ((C70427 * C679 + C70454 + C70454 + C153738 * C681 +
                C70425 * C325 + C70455 + C70455 + C153792 * C349 +
                C70423 * C315 + C70456 + C70456 + C153811 * C339 +
                C70421 * C316 + C70457 + C70457 + C153818 * C340) *
                   C153513 * C153560 +
               (C70427 * C150 + C70458 + C70458 + C153738 * C166 +
                C70425 * C149 + C70459 + C70459 + C153792 * C165 +
                C70423 * C148 + C70460 + C70460 + C153811 * C164 +
                C70421 * C147 + C70461 + C70461 + C153818 * C163) *
                   C153513 * C70419) *
                  C153413 * C153397 * C133) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C70421 * C144 + C70430 + C70430 + C153818 * C160 +
                 C70423 * C145 + C70431 + C70431 + C153811 * C161 +
                 C70425 * C146 + C70432 + C70432 + C153792 * C162 +
                 C70427 * C147 + C70433 + C70433 + C153738 * C163) *
                    C153513 * C70419 +
                (C70736 + C70737 + C70738 + C70739) * C153513 * C153560) *
                   C153413 * C310 -
               ((C70740 + C70741 + C70742 + C70743) * C153513 * C153560 +
                (C70739 + C70738 + C70737 + C70736) * C153513 * C70419) *
                   C153413 * C311 +
               ((C70743 + C70742 + C70741 + C70740) * C153513 * C70419 +
                (C70421 * C1227 + C70676 + C70676 + C153818 * C1237 +
                 C70423 * C1226 + C70677 + C70677 + C153811 * C1236 +
                 C70425 * C1225 + C70678 + C70678 + C153792 * C1235 +
                 C70427 * C1224 + C70679 + C70679 + C153738 * C1234) *
                    C153513 * C153560) *
                   C153413 * C312) *
                  C313 +
              (((C70744 + C70745 + C70746 + C70747) * C153513 * C70419 +
                (C70748 + C70749 + C70750 + C70751) * C153513 * C153560) *
                   C153413 * C311 -
               ((C70747 + C70746 + C70745 + C70744) * C153513 * C153560 +
                (C70427 * C148 + C70442 + C70442 + C153738 * C164 +
                 C70425 * C147 + C70443 + C70443 + C153792 * C163 +
                 C70423 * C146 + C70444 + C70444 + C153811 * C162 +
                 C70421 * C145 + C70445 + C70445 + C153818 * C161) *
                    C153513 * C70419) *
                   C153413 * C310 -
               ((C70427 * C1223 + C70700 + C70700 + C153738 * C1233 +
                 C70425 * C1224 + C70701 + C70701 + C153792 * C1234 +
                 C70423 * C1225 + C70702 + C70702 + C153811 * C1235 +
                 C70421 * C1226 + C70703 + C70703 + C153818 * C1236) *
                    C153513 * C153560 +
                (C70751 + C70750 + C70749 + C70748) * C153513 * C70419) *
                   C153413 * C312) *
                  C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C70421 * C144 + C70430 + C70430 + C153818 * C160 + C70423 * C145 +
             C70431 + C70431 + C153811 * C161 + C70425 * C146 + C70432 +
             C70432 + C153792 * C162 + C70427 * C147 + C70433 + C70433 +
             C153738 * C163) *
                C153513 * C70419 +
            (C70736 + C70737 + C70738 + C70739) * C153513 * C153560) *
               C493 -
           ((C70427 * C984 + C70946 + C70946 + C153738 * C996 + C70425 * C983 +
             C70947 + C70947 + C153792 * C995 + C70423 * C982 + C70948 +
             C70948 + C153811 * C994 + C70421 * C981 + C70949 + C70949 +
             C153818 * C993) *
                C153513 * C153560 +
            (C70427 * C497 + C70950 + C70950 + C153738 * C521 + C70425 * C498 +
             C70951 + C70951 + C153792 * C522 + C70423 * C499 + C70952 +
             C70952 + C153811 * C523 + C70421 * C500 + C70953 + C70953 +
             C153818 * C524) *
                C153513 * C70419) *
               C494 +
           ((C70421 * C501 + C70954 + C70954 + C153818 * C525 + C70423 * C502 +
             C70955 + C70955 + C153811 * C526 + C70425 * C503 + C70956 +
             C70956 + C153792 * C527 + C70427 * C504 + C70957 + C70957 +
             C153738 * C528) *
                C153513 * C70419 +
            (C70421 * C1369 + C70958 + C70958 + C153818 * C1379 +
             C70423 * C1368 + C70959 + C70959 + C153811 * C1378 +
             C70425 * C1367 + C70960 + C70960 + C153792 * C1377 +
             C70427 * C1366 + C70961 + C70961 + C153738 * C1376) *
                C153513 * C153560) *
               C495) *
              C153397 * C313 +
          (((C70421 * C499 + C70962 + C70962 + C153818 * C523 + C70423 * C498 +
             C70963 + C70963 + C153811 * C522 + C70425 * C497 + C70964 +
             C70964 + C153792 * C521 + C70427 * C496 + C70965 + C70965 +
             C153738 * C520) *
                C153513 * C70419 +
            (C70421 * C982 + C70966 + C70966 + C153818 * C994 + C70423 * C983 +
             C70967 + C70967 + C153811 * C995 + C70425 * C984 + C70968 +
             C70968 + C153792 * C996 + C70427 * C985 + C70969 + C70969 +
             C153738 * C997) *
                C153513 * C153560) *
               C494 -
           ((C70747 + C70746 + C70745 + C70744) * C153513 * C153560 +
            (C70427 * C148 + C70442 + C70442 + C153738 * C164 + C70425 * C147 +
             C70443 + C70443 + C153792 * C163 + C70423 * C146 + C70444 +
             C70444 + C153811 * C162 + C70421 * C145 + C70445 + C70445 +
             C153818 * C161) *
                C153513 * C70419) *
               C493 -
           ((C70427 * C1365 + C70970 + C70970 + C153738 * C1375 +
             C70425 * C1366 + C70971 + C70971 + C153792 * C1376 +
             C70423 * C1367 + C70972 + C70972 + C153811 * C1377 +
             C70421 * C1368 + C70973 + C70973 + C153818 * C1378) *
                C153513 * C153560 +
            (C70427 * C505 + C70974 + C70974 + C153738 * C529 + C70425 * C504 +
             C70975 + C70975 + C153792 * C528 + C70423 * C503 + C70976 +
             C70976 + C153811 * C527 + C70421 * C502 + C70977 + C70977 +
             C153818 * C526) *
                C153513 * C70419) *
               C495) *
              C153397 * C153384)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
            C74253 + C74253 + C153348 * C161) *
               C153513 * C153819 +
           (C74247 * C319 + C74254 + C74254 + C74241 * C343 + C74249 * C318 +
            C74255 + C74255 + C153348 * C342) *
               C153513 * C153815 +
           (C74247 * C320 + C74256 + C74256 + C74241 * C344 + C74249 * C321 +
            C74257 + C74257 + C153348 * C345) *
               C153513 * C153805 +
           (C74247 * C1227 + C74258 + C74258 + C74241 * C1237 + C74249 * C1226 +
            C74259 + C74259 + C153348 * C1236) *
               C153513 * C153747) *
              C153413 * C153397 * C130 -
          ((C74249 * C1225 + C74260 + C74260 + C153348 * C1235 +
            C74247 * C1226 + C74261 + C74261 + C74241 * C1236) *
               C153513 * C153747 +
           (C74249 * C322 + C74262 + C74262 + C153348 * C346 + C74247 * C321 +
            C74263 + C74263 + C74241 * C345) *
               C153513 * C153805 +
           (C74249 * C317 + C74264 + C74264 + C153348 * C341 + C74247 * C318 +
            C74265 + C74265 + C74241 * C342) *
               C153513 * C153815 +
           (C74249 * C146 + C74266 + C74266 + C153348 * C162 + C74247 * C145 +
            C74267 + C74267 + C74241 * C161) *
               C153513 * C153819) *
              C153413 * C153397 * C131 +
          ((C74247 * C146 + C74268 + C74268 + C74241 * C162 + C74249 * C147 +
            C74269 + C74269 + C153348 * C163) *
               C153513 * C153819 +
           (C74247 * C317 + C74270 + C74270 + C74241 * C341 + C74249 * C316 +
            C74271 + C74271 + C153348 * C340) *
               C153513 * C153815 +
           (C74247 * C322 + C74272 + C74272 + C74241 * C346 + C74249 * C323 +
            C74273 + C74273 + C153348 * C347) *
               C153513 * C153805 +
           (C74247 * C1225 + C74274 + C74274 + C74241 * C1235 + C74249 * C1224 +
            C74275 + C74275 + C153348 * C1234) *
               C153513 * C153747) *
              C153413 * C153397 * C132 -
          ((C74249 * C1223 + C74276 + C74276 + C153348 * C1233 +
            C74247 * C1224 + C74277 + C74277 + C74241 * C1234) *
               C153513 * C153747 +
           (C74249 * C324 + C74278 + C74278 + C153348 * C348 + C74247 * C323 +
            C74279 + C74279 + C74241 * C347) *
               C153513 * C153805 +
           (C74249 * C315 + C74280 + C74280 + C153348 * C339 + C74247 * C316 +
            C74281 + C74281 + C74241 * C340) *
               C153513 * C153815 +
           (C74249 * C148 + C74282 + C74282 + C153348 * C164 + C74247 * C147 +
            C74283 + C74283 + C74241 * C163) *
               C153513 * C153819) *
              C153413 * C153397 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
             C74253 + C74253 + C153348 * C161) *
                C153513 * C153819 +
            (C74550 + C74551) * C153513 * C153815 + C74570 * C153805 +
            C74571 * C153747) *
               C153413 * C310 -
           ((C74556 + C74557) * C153513 * C153747 +
            (C74555 + C74554) * C153513 * C153805 +
            (C74553 + C74552) * C153513 * C153815 +
            (C74551 + C74550) * C153513 * C153819) *
               C153413 * C311 +
           (C74570 * C153819 + C74571 * C153815 +
            (C74557 + C74556) * C153513 * C153805 +
            (C74247 * C4587 + C74496 + C74496 + C74241 * C4593 +
             C74249 * C4586 + C74497 + C74497 + C153348 * C4592) *
                C153513 * C153747) *
               C153413 * C312) *
              C313 +
          (((C74558 + C74559) * C153513 * C153819 +
            (C74560 + C74561) * C153513 * C153815 +
            (C74562 + C74563) * C153513 * C153805 +
            (C74564 + C74565) * C153513 * C153747) *
               C153413 * C311 -
           (C74572 * C153747 + C74573 * C153805 +
            (C74559 + C74558) * C153513 * C153815 +
            (C74249 * C146 + C74266 + C74266 + C153348 * C162 + C74247 * C145 +
             C74267 + C74267 + C74241 * C161) *
                C153513 * C153819) *
               C153413 * C310 -
           ((C74249 * C4585 + C74516 + C74516 + C153348 * C4591 +
             C74247 * C4586 + C74517 + C74517 + C74241 * C4592) *
                C153513 * C153747 +
            (C74565 + C74564) * C153513 * C153805 + C74572 * C153815 +
            C74573 * C153819) *
               C153413 * C312) *
              C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
             C74253 + C74253 + C153348 * C161) *
                C153513 * C153819 +
            (C74550 + C74551) * C153513 * C153815 + C74570 * C153805 +
            C74571 * C153747) *
               C493 -
           ((C74249 * C4144 + C74768 + C74768 + C153348 * C4152 +
             C74247 * C4143 + C74769 + C74769 + C74241 * C4151) *
                C153513 * C153747 +
            (C74249 * C1799 + C74770 + C74770 + C153348 * C1809 +
             C74247 * C1800 + C74771 + C74771 + C74241 * C1810) *
                C153513 * C153805 +
            (C74249 * C982 + C74772 + C74772 + C153348 * C994 + C74247 * C981 +
             C74773 + C74773 + C74241 * C993) *
                C153513 * C153815 +
            (C74249 * C499 + C74774 + C74774 + C153348 * C523 + C74247 * C500 +
             C74775 + C74775 + C74241 * C524) *
                C153513 * C153819) *
               C494 +
           ((C74247 * C501 + C74776 + C74776 + C74241 * C525 + C74249 * C502 +
             C74777 + C74777 + C153348 * C526) *
                C153513 * C153819 +
            (C74247 * C1369 + C74778 + C74778 + C74241 * C1379 +
             C74249 * C1368 + C74779 + C74779 + C153348 * C1378) *
                C153513 * C153815 +
            (C74247 * C3327 + C74780 + C74780 + C74241 * C3335 +
             C74249 * C3328 + C74781 + C74781 + C153348 * C3336) *
                C153513 * C153805 +
            (C74247 * C4835 + C74782 + C74782 + C74241 * C4841 +
             C74249 * C4834 + C74783 + C74783 + C153348 * C4840) *
                C153513 * C153747) *
               C495) *
              C153397 * C313 +
          (((C74247 * C499 + C74784 + C74784 + C74241 * C523 + C74249 * C498 +
             C74785 + C74785 + C153348 * C522) *
                C153513 * C153819 +
            (C74247 * C982 + C74786 + C74786 + C74241 * C994 + C74249 * C983 +
             C74787 + C74787 + C153348 * C995) *
                C153513 * C153815 +
            (C74247 * C1799 + C74788 + C74788 + C74241 * C1809 +
             C74249 * C1798 + C74789 + C74789 + C153348 * C1808) *
                C153513 * C153805 +
            (C74247 * C4144 + C74790 + C74790 + C74241 * C4152 +
             C74249 * C4145 + C74791 + C74791 + C153348 * C4153) *
                C153513 * C153747) *
               C494 -
           (C74572 * C153747 + C74573 * C153805 +
            (C74559 + C74558) * C153513 * C153815 +
            (C74249 * C146 + C74266 + C74266 + C153348 * C162 + C74247 * C145 +
             C74267 + C74267 + C74241 * C161) *
                C153513 * C153819) *
               C493 -
           ((C74249 * C4833 + C74792 + C74792 + C153348 * C4839 +
             C74247 * C4834 + C74793 + C74793 + C74241 * C4840) *
                C153513 * C153747 +
            (C74249 * C3329 + C74794 + C74794 + C153348 * C3337 +
             C74247 * C3328 + C74795 + C74795 + C74241 * C3336) *
                C153513 * C153805 +
            (C74249 * C1367 + C74796 + C74796 + C153348 * C1377 +
             C74247 * C1368 + C74797 + C74797 + C74241 * C1378) *
                C153513 * C153815 +
            (C74249 * C503 + C74798 + C74798 + C153348 * C527 + C74247 * C502 +
             C74799 + C74799 + C74241 * C526) *
                C153513 * C153819) *
               C495) *
              C153397 * C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
             C74253 + C74253 + C153348 * C161) *
                C153813 +
            (C74247 * C500 + C74775 + C74775 + C74241 * C524 + C74249 * C499 +
             C74774 + C74774 + C153348 * C523) *
                C153802 +
            (C74247 * C501 + C74776 + C74776 + C74241 * C525 + C74249 * C502 +
             C74777 + C74777 + C153348 * C526) *
                C153777) *
               C70419 +
           ((C74550 + C74551) * C153813 + (C75543 + C75542) * C153802 +
            (C76110 + C76111) * C153777) *
               C153560) *
              C153413 * C153397 * C130 -
          (((C74249 * C1367 + C74796 + C74796 + C153348 * C1377 +
             C74247 * C1368 + C74797 + C74797 + C74241 * C1378) *
                C153777 +
            (C75545 + C75544) * C153802 + (C74559 + C74558) * C153813) *
               C153560 +
           ((C74249 * C503 + C74798 + C74798 + C153348 * C527 + C74247 * C502 +
             C74799 + C74799 + C74241 * C526) *
                C153777 +
            (C74249 * C498 + C74785 + C74785 + C153348 * C522 + C74247 * C499 +
             C74784 + C74784 + C74241 * C523) *
                C153802 +
            (C74249 * C146 + C74266 + C74266 + C153348 * C162 + C74247 * C145 +
             C74267 + C74267 + C74241 * C161) *
                C153813) *
               C70419) *
              C153413 * C153397 * C131 +
          (((C74247 * C146 + C74268 + C74268 + C74241 * C162 + C74249 * C147 +
             C74269 + C74269 + C153348 * C163) *
                C153813 +
            (C74247 * C498 + C75227 + C75227 + C74241 * C522 + C74249 * C497 +
             C75226 + C75226 + C153348 * C521) *
                C153802 +
            (C74247 * C503 + C78144 + C78144 + C74241 * C527 + C74249 * C504 +
             C78145 + C78145 + C153348 * C528) *
                C153777) *
               C70419 +
           ((C75020 + C75021) * C153813 +
            (C74247 * C983 + C75225 + C75225 + C74241 * C995 + C74249 * C984 +
             C75224 + C75224 + C153348 * C996) *
                C153802 +
            (C74247 * C1367 + C78146 + C78146 + C74241 * C1377 +
             C74249 * C1366 + C78147 + C78147 + C153348 * C1376) *
                C153777) *
               C153560) *
              C153413 * C153397 * C132 -
          (((C74249 * C1365 + C78148 + C78148 + C153348 * C1375 +
             C74247 * C1366 + C78149 + C78149 + C74241 * C1376) *
                C153777 +
            (C74249 * C985 + C78150 + C78150 + C153348 * C997 + C74247 * C984 +
             C78151 + C78151 + C74241 * C996) *
                C153802 +
            (C74249 * C315 + C74280 + C74280 + C153348 * C339 + C74247 * C316 +
             C74281 + C74281 + C74241 * C340) *
                C153813) *
               C153560 +
           ((C74249 * C505 + C78152 + C78152 + C153348 * C529 + C74247 * C504 +
             C78153 + C78153 + C74241 * C528) *
                C153777 +
            (C74249 * C496 + C78154 + C78154 + C153348 * C520 + C74247 * C497 +
             C78155 + C78155 + C74241 * C521) *
                C153802 +
            (C74249 * C148 + C74282 + C74282 + C153348 * C164 + C74247 * C147 +
             C74283 + C74283 + C74241 * C163) *
                C153813) *
               C70419) *
              C153413 * C153397 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
              C74253 + C74253 + C153348 * C161) *
                 C153813 +
             (C74247 * C500 + C74775 + C74775 + C74241 * C524 + C74249 * C499 +
              C74774 + C74774 + C153348 * C523) *
                 C153802 +
             (C74247 * C501 + C74776 + C74776 + C74241 * C525 + C74249 * C502 +
              C74777 + C74777 + C153348 * C526) *
                 C153777) *
                C70419 +
            ((C74550 + C74551) * C153813 + (C75543 + C75542) * C153802 +
             (C76110 + C76111) * C153777) *
                C153560) *
               C153413 * C310 -
           (((C76113 + C76112) * C153777 + C76763 * C153802 +
             (C74553 + C74552) * C153813) *
                C153560 +
            ((C76111 + C76110) * C153777 + (C75542 + C75543) * C153802 +
             (C74551 + C74550) * C153813) *
                C70419) *
               C153413 * C311 +
           ((C74566 * C153813 + (C75541 + C75540) * C153802 +
             (C76112 + C76113) * C153777) *
                C70419 +
            (C74567 * C153813 + (C75539 + C75538) * C153802 +
             (C76114 + C76115) * C153777) *
                C153560) *
               C153413 * C312) *
              C313 +
          ((((C74558 + C74559) * C153813 + (C75544 + C75545) * C153802 +
             (C78462 + C78463) * C153777) *
                C70419 +
            ((C74560 + C74561) * C153813 + (C75546 + C75547) * C153802 +
             (C78464 + C78465) * C153777) *
                C153560) *
               C153413 * C311 -
           (((C78463 + C78462) * C153777 + (C75545 + C75544) * C153802 +
             (C74559 + C74558) * C153813) *
                C153560 +
            ((C74249 * C503 + C74798 + C74798 + C153348 * C527 + C74247 * C502 +
              C74799 + C74799 + C74241 * C526) *
                 C153777 +
             (C74249 * C498 + C74785 + C74785 + C153348 * C522 + C74247 * C499 +
              C74784 + C74784 + C74241 * C523) *
                 C153802 +
             (C74249 * C146 + C74266 + C74266 + C153348 * C162 + C74247 * C145 +
              C74267 + C74267 + C74241 * C161) *
                 C153813) *
                C70419) *
               C153413 * C310 -
           (((C74249 * C4833 + C74792 + C74792 + C153348 * C4839 +
              C74247 * C4834 + C74793 + C74793 + C74241 * C4840) *
                 C153777 +
             (C75549 + C75548) * C153802 + C74568 * C153813) *
                C153560 +
            ((C78465 + C78464) * C153777 + (C75547 + C75546) * C153802 +
             C74569 * C153813) *
                C70419) *
               C153413 * C312) *
              C153384)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
              C74253 + C74253 + C153348 * C161) *
                 C153813 +
             (C78834 + C78835) * C153802 + C78850 * C153777) *
                C70419 +
            ((C74550 + C74551) * C153813 + (C75543 + C75542) * C153802 +
             C78764 * C153777) *
                C153560) *
               C493 -
           (((C78838 + C78839) * C153777 + (C76111 + C76110) * C153802 +
             (C75542 + C75543) * C153813) *
                C153560 +
            ((C78840 + C78841) * C153777 + (C78837 + C78836) * C153802 +
             (C78835 + C78834) * C153813) *
                C70419) *
               C494 +
           ((C78850 * C153813 + (C78841 + C78840) * C153802 +
             (C74247 * C7560 + C78773 + C78773 + C74241 * C7568 +
              C74249 * C7561 + C78774 + C78774 + C153348 * C7569) *
                 C153777) *
                C70419 +
            (C78764 * C153813 + (C78839 + C78838) * C153802 +
             (C74247 * C9042 + C78775 + C78775 + C74241 * C9048 +
              C74249 * C9041 + C78776 + C78776 + C153348 * C9047) *
                 C153777) *
                C153560) *
               C495) *
              C153397 * C313 +
          ((((C78842 + C78843) * C153813 + (C78844 + C78845) * C153802 +
             (C78846 + C78847) * C153777) *
                C70419 +
            ((C75544 + C75545) * C153813 + (C78462 + C78463) * C153802 +
             (C78848 + C78849) * C153777) *
                C153560) *
               C494 -
           ((C78797 * C153777 + (C75545 + C75544) * C153802 +
             (C74559 + C74558) * C153813) *
                C153560 +
            (C78851 * C153777 + (C78843 + C78842) * C153802 +
             (C74249 * C146 + C74266 + C74266 + C153348 * C162 + C74247 * C145 +
              C74267 + C74267 + C74241 * C161) *
                 C153813) *
                C70419) *
               C493 -
           (((C74249 * C9040 + C78798 + C78798 + C153348 * C9046 +
              C74247 * C9041 + C78799 + C78799 + C74241 * C9047) *
                 C153777 +
             (C78849 + C78848) * C153802 + C78797 * C153813) *
                C153560 +
            ((C74249 * C7562 + C78800 + C78800 + C153348 * C7570 +
              C74247 * C7561 + C78801 + C78801 + C74241 * C7569) *
                 C153777 +
             (C78847 + C78846) * C153802 + C78851 * C153813) *
                C70419) *
               C495) *
              C153397 * C153384)) /
            (p * q * std::sqrt(p + q));
    d2ee[33] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
             C74253 + C74253 + C153348 * C161) *
                C153513 * C153819 +
            (C74550 + C74551) * C153513 * C153815 + C74570 * C153805 +
            C74571 * C153747) *
               C153725 -
           ((C74249 * C4144 + C74768 + C74768 + C153348 * C4152 +
             C74247 * C4143 + C74769 + C74769 + C74241 * C4151) *
                C153513 * C153747 +
            (C74249 * C1799 + C74770 + C74770 + C153348 * C1809 +
             C74247 * C1800 + C74771 + C74771 + C74241 * C1810) *
                C153513 * C153805 +
            (C74249 * C982 + C74772 + C74772 + C153348 * C994 + C74247 * C981 +
             C74773 + C74773 + C74241 * C993) *
                C153513 * C153815 +
            (C74249 * C499 + C74774 + C74774 + C153348 * C523 + C74247 * C500 +
             C74775 + C74775 + C74241 * C524) *
                C153513 * C153819) *
               C153477) *
              C153397 * C153793 +
          (((C74247 * C499 + C74784 + C74784 + C74241 * C523 + C74249 * C498 +
             C74785 + C74785 + C153348 * C522) *
                C153513 * C153819 +
            (C74247 * C982 + C74786 + C74786 + C74241 * C994 + C74249 * C983 +
             C74787 + C74787 + C153348 * C995) *
                C153513 * C153815 +
            (C74247 * C1799 + C74788 + C74788 + C74241 * C1809 +
             C74249 * C1798 + C74789 + C74789 + C153348 * C1808) *
                C153513 * C153805 +
            (C74247 * C4144 + C74790 + C74790 + C74241 * C4152 +
             C74249 * C4145 + C74791 + C74791 + C153348 * C4153) *
                C153513 * C153747) *
               C153477 -
           (C74572 * C153747 + C74573 * C153805 +
            (C74559 + C74558) * C153513 * C153815 +
            (C74249 * C146 + C74266 + C74266 + C153348 * C162 + C74247 * C145 +
             C74267 + C74267 + C74241 * C161) *
                C153513 * C153819) *
               C153725) *
              C153397 * C153794 +
          (((C74247 * C146 + C74268 + C74268 + C74241 * C162 + C74249 * C147 +
             C74269 + C74269 + C153348 * C163) *
                C153513 * C153819 +
            (C75020 + C75021) * C153513 * C153815 +
            (C75022 + C75023) * C153513 * C153805 +
            (C75024 + C75025) * C153513 * C153747) *
               C153725 -
           ((C74249 * C4146 + C75220 + C75220 + C153348 * C4154 +
             C74247 * C4145 + C75221 + C75221 + C74241 * C4153) *
                C153513 * C153747 +
            (C74249 * C1797 + C75222 + C75222 + C153348 * C1807 +
             C74247 * C1798 + C75223 + C75223 + C74241 * C1808) *
                C153513 * C153805 +
            (C74249 * C984 + C75224 + C75224 + C153348 * C996 + C74247 * C983 +
             C75225 + C75225 + C74241 * C995) *
                C153513 * C153815 +
            (C74249 * C497 + C75226 + C75226 + C153348 * C521 + C74247 * C498 +
             C75227 + C75227 + C74241 * C522) *
                C153513 * C153819) *
               C153477) *
              C153397 * C678)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C70421 * C144 + C70430 + C70430 + C153818 * C160 + C70423 * C145 +
             C70431 + C70431 + C153811 * C161 + C70425 * C146 + C70432 +
             C70432 + C153792 * C162 + C70427 * C147 + C70433 + C70433 +
             C153738 * C163) *
                C153513 * C70419 +
            (C70736 + C70737 + C70738 + C70739) * C153513 * C153560) *
               C153725 -
           ((C70427 * C984 + C70946 + C70946 + C153738 * C996 + C70425 * C983 +
             C70947 + C70947 + C153792 * C995 + C70423 * C982 + C70948 +
             C70948 + C153811 * C994 + C70421 * C981 + C70949 + C70949 +
             C153818 * C993) *
                C153513 * C153560 +
            (C70427 * C497 + C70950 + C70950 + C153738 * C521 + C70425 * C498 +
             C70951 + C70951 + C153792 * C522 + C70423 * C499 + C70952 +
             C70952 + C153811 * C523 + C70421 * C500 + C70953 + C70953 +
             C153818 * C524) *
                C153513 * C70419) *
               C153477) *
              C153397 * C153793 +
          (((C70421 * C499 + C70962 + C70962 + C153818 * C523 + C70423 * C498 +
             C70963 + C70963 + C153811 * C522 + C70425 * C497 + C70964 +
             C70964 + C153792 * C521 + C70427 * C496 + C70965 + C70965 +
             C153738 * C520) *
                C153513 * C70419 +
            (C70421 * C982 + C70966 + C70966 + C153818 * C994 + C70423 * C983 +
             C70967 + C70967 + C153811 * C995 + C70425 * C984 + C70968 +
             C70968 + C153792 * C996 + C70427 * C985 + C70969 + C70969 +
             C153738 * C997) *
                C153513 * C153560) *
               C153477 -
           ((C70747 + C70746 + C70745 + C70744) * C153513 * C153560 +
            (C70427 * C148 + C70442 + C70442 + C153738 * C164 + C70425 * C147 +
             C70443 + C70443 + C153792 * C163 + C70423 * C146 + C70444 +
             C70444 + C153811 * C162 + C70421 * C145 + C70445 + C70445 +
             C153818 * C161) *
                C153513 * C70419) *
               C153725) *
              C153397 * C153794 +
          (((C70421 * C146 + C70446 + C70446 + C153818 * C162 + C70423 * C147 +
             C70447 + C70447 + C153811 * C163 + C70425 * C148 + C70448 +
             C70448 + C153792 * C164 + C70427 * C149 + C70449 + C70449 +
             C153738 * C165) *
                C153513 * C70419 +
            (C71192 + C71193 + C71194 + C71195) * C153513 * C153560) *
               C153725 -
           ((C70427 * C986 + C71390 + C71390 + C153738 * C998 + C70425 * C985 +
             C71391 + C71391 + C153792 * C997 + C70423 * C984 + C71392 +
             C71392 + C153811 * C996 + C70421 * C983 + C71393 + C71393 +
             C153818 * C995) *
                C153513 * C153560 +
            (C70427 * C506 + C71394 + C71394 + C153738 * C530 + C70425 * C496 +
             C71395 + C71395 + C153792 * C520 + C70423 * C497 + C71396 +
             C71396 + C153811 * C521 + C70421 * C498 + C71397 + C71397 +
             C153818 * C522) *
                C153513 * C70419) *
               C153477) *
              C153397 * C678)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
              C74253 + C74253 + C153348 * C161) *
                 C153813 +
             (C78834 + C78835) * C153802 + C78850 * C153777) *
                C70419 +
            ((C74550 + C74551) * C153813 + (C75543 + C75542) * C153802 +
             C78764 * C153777) *
                C153560) *
               C153725 -
           (((C78838 + C78839) * C153777 + (C76111 + C76110) * C153802 +
             (C75542 + C75543) * C153813) *
                C153560 +
            ((C78840 + C78841) * C153777 + (C78837 + C78836) * C153802 +
             (C78835 + C78834) * C153813) *
                C70419) *
               C153477) *
              C153397 * C153793 +
          ((((C78842 + C78843) * C153813 + (C78844 + C78845) * C153802 +
             (C78846 + C78847) * C153777) *
                C70419 +
            ((C75544 + C75545) * C153813 + (C78462 + C78463) * C153802 +
             (C78848 + C78849) * C153777) *
                C153560) *
               C153477 -
           ((C78797 * C153777 + (C75545 + C75544) * C153802 +
             (C74559 + C74558) * C153813) *
                C153560 +
            (C78851 * C153777 + (C78843 + C78842) * C153802 +
             (C74249 * C146 + C74266 + C74266 + C153348 * C162 + C74247 * C145 +
              C74267 + C74267 + C74241 * C161) *
                 C153813) *
                C70419) *
               C153725) *
              C153397 * C153794 +
          ((((C74247 * C146 + C74268 + C74268 + C74241 * C162 + C74249 * C147 +
              C74269 + C74269 + C153348 * C163) *
                 C153813 +
             (C79474 + C79475) * C153802 + (C79476 + C79477) * C153777) *
                C70419 +
            ((C75020 + C75021) * C153813 + (C79160 + C79161) * C153802 +
             (C79162 + C79163) * C153777) *
                C153560) *
               C153725 -
           (((C74249 * C8437 + C79462 + C79462 + C153348 * C8439 +
              C74247 * C6216 + C79463 + C79463 + C74241 * C6228) *
                 C153777 +
             (C79163 + C79162) * C153802 + (C79161 + C79160) * C153813) *
                C153560 +
            ((C74249 * C2149 + C79464 + C79464 + C153348 * C2159 +
              C74247 * C2150 + C79465 + C79465 + C74241 * C2160) *
                 C153777 +
             (C79477 + C79476) * C153802 + (C79475 + C79474) * C153813) *
                C70419) *
               C153477) *
              C153397 * C678)) /
            (p * q * std::sqrt(p + q));
    d2ee[34] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C70421 * C144 + C70430 + C70430 + C153818 * C160 + C70423 * C145 +
             C70431 + C70431 + C153811 * C161 + C70425 * C146 + C70432 +
             C70432 + C153792 * C162 + C70427 * C147 + C70433 + C70433 +
             C153738 * C163) *
                C153513 * C70419 +
            (C70736 + C70737 + C70738 + C70739) * C153513 * C153560) *
               C153413 * C310 -
           ((C70740 + C70741 + C70742 + C70743) * C153513 * C153560 +
            (C70739 + C70738 + C70737 + C70736) * C153513 * C70419) *
               C153413 * C311 +
           ((C70743 + C70742 + C70741 + C70740) * C153513 * C70419 +
            (C70421 * C1227 + C70676 + C70676 + C153818 * C1237 +
             C70423 * C1226 + C70677 + C70677 + C153811 * C1236 +
             C70425 * C1225 + C70678 + C70678 + C153792 * C1235 +
             C70427 * C1224 + C70679 + C70679 + C153738 * C1234) *
                C153513 * C153560) *
               C153413 * C312) *
              C313 +
          (((C70744 + C70745 + C70746 + C70747) * C153513 * C70419 +
            (C70748 + C70749 + C70750 + C70751) * C153513 * C153560) *
               C153413 * C311 -
           ((C70747 + C70746 + C70745 + C70744) * C153513 * C153560 +
            (C70427 * C148 + C70442 + C70442 + C153738 * C164 + C70425 * C147 +
             C70443 + C70443 + C153792 * C163 + C70423 * C146 + C70444 +
             C70444 + C153811 * C162 + C70421 * C145 + C70445 + C70445 +
             C153818 * C161) *
                C153513 * C70419) *
               C153413 * C310 -
           ((C70427 * C1223 + C70700 + C70700 + C153738 * C1233 +
             C70425 * C1224 + C70701 + C70701 + C153792 * C1234 +
             C70423 * C1225 + C70702 + C70702 + C153811 * C1235 +
             C70421 * C1226 + C70703 + C70703 + C153818 * C1236) *
                C153513 * C153560 +
            (C70751 + C70750 + C70749 + C70748) * C153513 * C70419) *
               C153413 * C312) *
              C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C70421 * C144 + C70430 + C70430 + C153818 * C160 + C70423 * C145 +
            C70431 + C70431 + C153811 * C161 + C70425 * C146 + C70432 + C70432 +
            C153792 * C162 + C70427 * C147 + C70433 + C70433 + C153738 * C163) *
               C153513 * C70419 +
           (C70421 * C319 + C70434 + C70434 + C153818 * C343 + C70423 * C318 +
            C70435 + C70435 + C153811 * C342 + C70425 * C317 + C70436 + C70436 +
            C153792 * C341 + C70427 * C316 + C70437 + C70437 + C153738 * C340) *
               C153513 * C153560) *
              C153413 * C153397 * C130 -
          ((C70427 * C315 + C70438 + C70438 + C153738 * C339 + C70425 * C316 +
            C70439 + C70439 + C153792 * C340 + C70423 * C317 + C70440 + C70440 +
            C153811 * C341 + C70421 * C318 + C70441 + C70441 + C153818 * C342) *
               C153513 * C153560 +
           (C70427 * C148 + C70442 + C70442 + C153738 * C164 + C70425 * C147 +
            C70443 + C70443 + C153792 * C163 + C70423 * C146 + C70444 + C70444 +
            C153811 * C162 + C70421 * C145 + C70445 + C70445 + C153818 * C161) *
               C153513 * C70419) *
              C153413 * C153397 * C131 +
          ((C70421 * C146 + C70446 + C70446 + C153818 * C162 + C70423 * C147 +
            C70447 + C70447 + C153811 * C163 + C70425 * C148 + C70448 + C70448 +
            C153792 * C164 + C70427 * C149 + C70449 + C70449 + C153738 * C165) *
               C153513 * C70419 +
           (C70421 * C317 + C70450 + C70450 + C153818 * C341 + C70423 * C316 +
            C70451 + C70451 + C153811 * C340 + C70425 * C315 + C70452 + C70452 +
            C153792 * C339 + C70427 * C325 + C70453 + C70453 + C153738 * C349) *
               C153513 * C153560) *
              C153413 * C153397 * C132 -
          ((C70427 * C679 + C70454 + C70454 + C153738 * C681 + C70425 * C325 +
            C70455 + C70455 + C153792 * C349 + C70423 * C315 + C70456 + C70456 +
            C153811 * C339 + C70421 * C316 + C70457 + C70457 + C153818 * C340) *
               C153513 * C153560 +
           (C70427 * C150 + C70458 + C70458 + C153738 * C166 + C70425 * C149 +
            C70459 + C70459 + C153792 * C165 + C70423 * C148 + C70460 + C70460 +
            C153811 * C164 + C70421 * C147 + C70461 + C70461 + C153818 * C163) *
               C153513 * C70419) *
              C153413 * C153397 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
            C74253 + C74253 + C153348 * C161) *
               C153513 * C153819 +
           (C74247 * C319 + C74254 + C74254 + C74241 * C343 + C74249 * C318 +
            C74255 + C74255 + C153348 * C342) *
               C153513 * C153815 +
           (C74247 * C320 + C74256 + C74256 + C74241 * C344 + C74249 * C321 +
            C74257 + C74257 + C153348 * C345) *
               C153513 * C153805 +
           (C74247 * C1227 + C74258 + C74258 + C74241 * C1237 + C74249 * C1226 +
            C74259 + C74259 + C153348 * C1236) *
               C153513 * C153747) *
              C153413 * C153397 * C130 -
          ((C74249 * C1225 + C74260 + C74260 + C153348 * C1235 +
            C74247 * C1226 + C74261 + C74261 + C74241 * C1236) *
               C153513 * C153747 +
           (C74249 * C322 + C74262 + C74262 + C153348 * C346 + C74247 * C321 +
            C74263 + C74263 + C74241 * C345) *
               C153513 * C153805 +
           (C74249 * C317 + C74264 + C74264 + C153348 * C341 + C74247 * C318 +
            C74265 + C74265 + C74241 * C342) *
               C153513 * C153815 +
           (C74249 * C146 + C74266 + C74266 + C153348 * C162 + C74247 * C145 +
            C74267 + C74267 + C74241 * C161) *
               C153513 * C153819) *
              C153413 * C153397 * C131 +
          ((C74247 * C146 + C74268 + C74268 + C74241 * C162 + C74249 * C147 +
            C74269 + C74269 + C153348 * C163) *
               C153513 * C153819 +
           (C74247 * C317 + C74270 + C74270 + C74241 * C341 + C74249 * C316 +
            C74271 + C74271 + C153348 * C340) *
               C153513 * C153815 +
           (C74247 * C322 + C74272 + C74272 + C74241 * C346 + C74249 * C323 +
            C74273 + C74273 + C153348 * C347) *
               C153513 * C153805 +
           (C74247 * C1225 + C74274 + C74274 + C74241 * C1235 + C74249 * C1224 +
            C74275 + C74275 + C153348 * C1234) *
               C153513 * C153747) *
              C153413 * C153397 * C132 -
          ((C74249 * C1223 + C74276 + C74276 + C153348 * C1233 +
            C74247 * C1224 + C74277 + C74277 + C74241 * C1234) *
               C153513 * C153747 +
           (C74249 * C324 + C74278 + C74278 + C153348 * C348 + C74247 * C323 +
            C74279 + C74279 + C74241 * C347) *
               C153513 * C153805 +
           (C74249 * C315 + C74280 + C74280 + C153348 * C339 + C74247 * C316 +
            C74281 + C74281 + C74241 * C340) *
               C153513 * C153815 +
           (C74249 * C148 + C74282 + C74282 + C153348 * C164 + C74247 * C147 +
            C74283 + C74283 + C74241 * C163) *
               C153513 * C153819) *
              C153413 * C153397 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
             C74253 + C74253 + C153348 * C161) *
                C153513 * C153819 +
            (C74550 + C74551) * C153513 * C153815 + C74570 * C153805 +
            C74571 * C153747) *
               C153413 * C310 -
           ((C74556 + C74557) * C153513 * C153747 +
            (C74555 + C74554) * C153513 * C153805 +
            (C74553 + C74552) * C153513 * C153815 +
            (C74551 + C74550) * C153513 * C153819) *
               C153413 * C311 +
           (C74570 * C153819 + C74571 * C153815 +
            (C74557 + C74556) * C153513 * C153805 +
            (C74247 * C4587 + C74496 + C74496 + C74241 * C4593 +
             C74249 * C4586 + C74497 + C74497 + C153348 * C4592) *
                C153513 * C153747) *
               C153413 * C312) *
              C313 +
          (((C74558 + C74559) * C153513 * C153819 +
            (C74560 + C74561) * C153513 * C153815 +
            (C74562 + C74563) * C153513 * C153805 +
            (C74564 + C74565) * C153513 * C153747) *
               C153413 * C311 -
           (C74572 * C153747 + C74573 * C153805 +
            (C74559 + C74558) * C153513 * C153815 +
            (C74249 * C146 + C74266 + C74266 + C153348 * C162 + C74247 * C145 +
             C74267 + C74267 + C74241 * C161) *
                C153513 * C153819) *
               C153413 * C310 -
           ((C74249 * C4585 + C74516 + C74516 + C153348 * C4591 +
             C74247 * C4586 + C74517 + C74517 + C74241 * C4592) *
                C153513 * C153747 +
            (C74565 + C74564) * C153513 * C153805 + C74572 * C153815 +
            C74573 * C153819) *
               C153413 * C312) *
              C153384)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
             C74253 + C74253 + C153348 * C161) *
                C153813 +
            (C74247 * C500 + C74775 + C74775 + C74241 * C524 + C74249 * C499 +
             C74774 + C74774 + C153348 * C523) *
                C153802 +
            (C74247 * C501 + C74776 + C74776 + C74241 * C525 + C74249 * C502 +
             C74777 + C74777 + C153348 * C526) *
                C153777) *
               C70419 +
           ((C74550 + C74551) * C153813 + (C75543 + C75542) * C153802 +
            (C76110 + C76111) * C153777) *
               C153560) *
              C153413 * C153397 * C130 -
          (((C74249 * C1367 + C74796 + C74796 + C153348 * C1377 +
             C74247 * C1368 + C74797 + C74797 + C74241 * C1378) *
                C153777 +
            (C75545 + C75544) * C153802 + (C74559 + C74558) * C153813) *
               C153560 +
           ((C74249 * C503 + C74798 + C74798 + C153348 * C527 + C74247 * C502 +
             C74799 + C74799 + C74241 * C526) *
                C153777 +
            (C74249 * C498 + C74785 + C74785 + C153348 * C522 + C74247 * C499 +
             C74784 + C74784 + C74241 * C523) *
                C153802 +
            (C74249 * C146 + C74266 + C74266 + C153348 * C162 + C74247 * C145 +
             C74267 + C74267 + C74241 * C161) *
                C153813) *
               C70419) *
              C153413 * C153397 * C131 +
          (((C74247 * C146 + C74268 + C74268 + C74241 * C162 + C74249 * C147 +
             C74269 + C74269 + C153348 * C163) *
                C153813 +
            (C74247 * C498 + C75227 + C75227 + C74241 * C522 + C74249 * C497 +
             C75226 + C75226 + C153348 * C521) *
                C153802 +
            (C74247 * C503 + C78144 + C78144 + C74241 * C527 + C74249 * C504 +
             C78145 + C78145 + C153348 * C528) *
                C153777) *
               C70419 +
           ((C75020 + C75021) * C153813 +
            (C74247 * C983 + C75225 + C75225 + C74241 * C995 + C74249 * C984 +
             C75224 + C75224 + C153348 * C996) *
                C153802 +
            (C74247 * C1367 + C78146 + C78146 + C74241 * C1377 +
             C74249 * C1366 + C78147 + C78147 + C153348 * C1376) *
                C153777) *
               C153560) *
              C153413 * C153397 * C132 -
          (((C74249 * C1365 + C78148 + C78148 + C153348 * C1375 +
             C74247 * C1366 + C78149 + C78149 + C74241 * C1376) *
                C153777 +
            (C74249 * C985 + C78150 + C78150 + C153348 * C997 + C74247 * C984 +
             C78151 + C78151 + C74241 * C996) *
                C153802 +
            (C74249 * C315 + C74280 + C74280 + C153348 * C339 + C74247 * C316 +
             C74281 + C74281 + C74241 * C340) *
                C153813) *
               C153560 +
           ((C74249 * C505 + C78152 + C78152 + C153348 * C529 + C74247 * C504 +
             C78153 + C78153 + C74241 * C528) *
                C153777 +
            (C74249 * C496 + C78154 + C78154 + C153348 * C520 + C74247 * C497 +
             C78155 + C78155 + C74241 * C521) *
                C153802 +
            (C74249 * C148 + C74282 + C74282 + C153348 * C164 + C74247 * C147 +
             C74283 + C74283 + C74241 * C163) *
                C153813) *
               C70419) *
              C153413 * C153397 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
              C74253 + C74253 + C153348 * C161) *
                 C153813 +
             (C74247 * C500 + C74775 + C74775 + C74241 * C524 + C74249 * C499 +
              C74774 + C74774 + C153348 * C523) *
                 C153802 +
             (C74247 * C501 + C74776 + C74776 + C74241 * C525 + C74249 * C502 +
              C74777 + C74777 + C153348 * C526) *
                 C153777) *
                C70419 +
            ((C74550 + C74551) * C153813 + (C75543 + C75542) * C153802 +
             (C76110 + C76111) * C153777) *
                C153560) *
               C153413 * C310 -
           (((C76113 + C76112) * C153777 + C76763 * C153802 +
             (C74553 + C74552) * C153813) *
                C153560 +
            ((C76111 + C76110) * C153777 + (C75542 + C75543) * C153802 +
             (C74551 + C74550) * C153813) *
                C70419) *
               C153413 * C311 +
           ((C74566 * C153813 + (C75541 + C75540) * C153802 +
             (C76112 + C76113) * C153777) *
                C70419 +
            (C74567 * C153813 + (C75539 + C75538) * C153802 +
             (C76114 + C76115) * C153777) *
                C153560) *
               C153413 * C312) *
              C313 +
          ((((C74558 + C74559) * C153813 + (C75544 + C75545) * C153802 +
             (C78462 + C78463) * C153777) *
                C70419 +
            ((C74560 + C74561) * C153813 + (C75546 + C75547) * C153802 +
             (C78464 + C78465) * C153777) *
                C153560) *
               C153413 * C311 -
           (((C78463 + C78462) * C153777 + (C75545 + C75544) * C153802 +
             (C74559 + C74558) * C153813) *
                C153560 +
            ((C74249 * C503 + C74798 + C74798 + C153348 * C527 + C74247 * C502 +
              C74799 + C74799 + C74241 * C526) *
                 C153777 +
             (C74249 * C498 + C74785 + C74785 + C153348 * C522 + C74247 * C499 +
              C74784 + C74784 + C74241 * C523) *
                 C153802 +
             (C74249 * C146 + C74266 + C74266 + C153348 * C162 + C74247 * C145 +
              C74267 + C74267 + C74241 * C161) *
                 C153813) *
                C70419) *
               C153413 * C310 -
           (((C74249 * C4833 + C74792 + C74792 + C153348 * C4839 +
              C74247 * C4834 + C74793 + C74793 + C74241 * C4840) *
                 C153777 +
             (C75549 + C75548) * C153802 + C74568 * C153813) *
                C153560 +
            ((C78465 + C78464) * C153777 + (C75547 + C75546) * C153802 +
             C74569 * C153813) *
                C70419) *
               C153413 * C312) *
              C153384)) /
            (p * q * std::sqrt(p + q));
    d2ee[35] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C74247 * C144 + C74252 + C74252 + C74241 * C160 +
                     C74249 * C145 + C74253 + C74253 + C153348 * C161) *
                        C153513 * C153819 +
                    (C74550 + C74551) * C153513 * C153815 + C74570 * C153805 +
                    C74571 * C153747) *
                       C153413 * C153795 -
                   (C75882 * C153747 + C75883 * C153805 +
                    (C74553 + C74552) * C153513 * C153815 +
                    (C74551 + C74550) * C153513 * C153819) *
                       C153413 * C153796 +
                   (C74570 * C153819 + C74571 * C153815 +
                    (C74557 + C74556) * C153513 * C153805 +
                    (C75888 + C75889) * C153513 * C153747) *
                       C153413 * C1509) *
                      C153716 +
                  (((C74558 + C74559) * C153513 * C153819 +
                    (C74560 + C74561) * C153513 * C153815 +
                    (C74562 + C74563) * C153513 * C153805 +
                    (C74564 + C74565) * C153513 * C153747) *
                       C153413 * C153796 -
                   (C74572 * C153747 + C74573 * C153805 +
                    (C74559 + C74558) * C153513 * C153815 +
                    (C74249 * C146 + C74266 + C74266 + C153348 * C162 +
                     C74247 * C145 + C74267 + C74267 + C74241 * C161) *
                        C153513 * C153819) *
                       C153413 * C153795 -
                   ((C74249 * C4585 + C74516 + C74516 + C153348 * C4591 +
                     C74247 * C4586 + C74517 + C74517 + C74241 * C4592) *
                        C153513 * C153747 +
                    (C74565 + C74564) * C153513 * C153805 + C74572 * C153815 +
                    C74573 * C153819) *
                       C153413 * C1509) *
                      C153384)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C70421 * C144 + C70430 + C70430 + C153818 * C160 +
                     C70423 * C145 + C70431 + C70431 + C153811 * C161 +
                     C70425 * C146 + C70432 + C70432 + C153792 * C162 +
                     C70427 * C147 + C70433 + C70433 + C153738 * C163) *
                        C153513 * C70419 +
                    (C70736 + C70737 + C70738 + C70739) * C153513 * C153560) *
                       C153413 * C153795 -
                   ((C70740 + C70741 + C70742 + C70743) * C153513 * C153560 +
                    (C70739 + C70738 + C70737 + C70736) * C153513 * C70419) *
                       C153413 * C153796 +
                   ((C70743 + C70742 + C70741 + C70740) * C153513 * C70419 +
                    (C72048 + C72049 + C72050 + C72051) * C153513 * C153560) *
                       C153413 * C1509) *
                      C153716 +
                  (((C70744 + C70745 + C70746 + C70747) * C153513 * C70419 +
                    (C70748 + C70749 + C70750 + C70751) * C153513 * C153560) *
                       C153413 * C153796 -
                   ((C70747 + C70746 + C70745 + C70744) * C153513 * C153560 +
                    (C70427 * C148 + C70442 + C70442 + C153738 * C164 +
                     C70425 * C147 + C70443 + C70443 + C153792 * C163 +
                     C70423 * C146 + C70444 + C70444 + C153811 * C162 +
                     C70421 * C145 + C70445 + C70445 + C153818 * C161) *
                        C153513 * C70419) *
                       C153413 * C153795 -
                   ((C70427 * C1223 + C70700 + C70700 + C153738 * C1233 +
                     C70425 * C1224 + C70701 + C70701 + C153792 * C1234 +
                     C70423 * C1225 + C70702 + C70702 + C153811 * C1235 +
                     C70421 * C1226 + C70703 + C70703 + C153818 * C1236) *
                        C153513 * C153560 +
                    (C70751 + C70750 + C70749 + C70748) * C153513 * C70419) *
                       C153413 * C1509) *
                      C153384)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C74247 * C144 + C74252 + C74252 + C74241 * C160 +
                      C74249 * C145 + C74253 + C74253 + C153348 * C161) *
                         C153813 +
                     (C78834 + C78835) * C153802 + C78850 * C153777) *
                        C70419 +
                    ((C74550 + C74551) * C153813 + C79864 * C153802 +
                     C78764 * C153777) *
                        C153560) *
                       C153413 * C153795 -
                   ((C80656 * C153777 + C76763 * C153802 +
                     (C74553 + C74552) * C153813) *
                        C153560 +
                    (C79865 * C153777 + C79866 * C153802 +
                     (C74551 + C74550) * C153813) *
                        C70419) *
                       C153413 * C153796 +
                   ((C74566 * C153813 + (C75541 + C75540) * C153802 +
                     (C76112 + C76113) * C153777) *
                        C70419 +
                    (C74567 * C153813 + (C75539 + C75538) * C153802 +
                     (C76114 + C76115) * C153777) *
                        C153560) *
                       C153413 * C1509) *
                      C153716 +
                  ((((C74558 + C74559) * C153813 + C79867 * C153802 +
                     C79868 * C153777) *
                        C70419 +
                    ((C74560 + C74561) * C153813 + (C75546 + C75547) * C153802 +
                     (C78464 + C78465) * C153777) *
                        C153560) *
                       C153413 * C153796 -
                   ((C78797 * C153777 + C79869 * C153802 +
                     (C74559 + C74558) * C153813) *
                        C153560 +
                    (C78851 * C153777 + (C78843 + C78842) * C153802 +
                     (C74249 * C146 + C74266 + C74266 + C153348 * C162 +
                      C74247 * C145 + C74267 + C74267 + C74241 * C161) *
                         C153813) *
                        C70419) *
                       C153413 * C153795 -
                   (((C74249 * C4833 + C74792 + C74792 + C153348 * C4839 +
                      C74247 * C4834 + C74793 + C74793 + C74241 * C4840) *
                         C153777 +
                     (C75549 + C75548) * C153802 + C74568 * C153813) *
                        C153560 +
                    ((C78465 + C78464) * C153777 + (C75547 + C75546) * C153802 +
                     C74569 * C153813) *
                        C70419) *
                       C153413 * C1509) *
                      C153384)) /
                    (p * q * std::sqrt(p + q));
    d2ee[36] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
             C74253 + C74253 + C153348 * C161) *
                C153513 * C153819 +
            (C74550 + C74551) * C153513 * C153815 + C74570 * C153805 +
            C74571 * C153747) *
               C153725 -
           (C76770 * C153747 + C76771 * C153805 +
            (C75542 + C75543) * C153513 * C153815 +
            (C74249 * C499 + C74774 + C74774 + C153348 * C523 + C74247 * C500 +
             C74775 + C74775 + C74241 * C524) *
                C153513 * C153819) *
               C153477) *
              C153795 +
          (((C75543 + C75542) * C153513 * C153819 +
            (C75541 + C75540) * C153513 * C153815 +
            (C75539 + C75538) * C153513 * C153805 +
            (C76776 + C76777) * C153513 * C153747) *
               C153477 -
           (C75882 * C153747 + C75883 * C153805 +
            (C74553 + C74552) * C153513 * C153815 +
            (C74551 + C74550) * C153513 * C153819) *
               C153725) *
              C153796 +
          ((C74570 * C153819 + C74571 * C153815 +
            (C74557 + C74556) * C153513 * C153805 +
            (C75888 + C75889) * C153513 * C153747) *
               C153725 -
           ((C74249 * C29033 + C76768 + C76768 + C153348 * C29037 +
             C74247 * C29032 + C76769 + C76769 + C74241 * C29036) *
                C153513 * C153747 +
            (C76777 + C76776) * C153513 * C153805 + C76770 * C153815 +
            C76771 * C153819) *
               C153477) *
              C1509) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C70421 * C144 + C70430 + C70430 + C153818 * C160 + C70423 * C145 +
             C70431 + C70431 + C153811 * C161 + C70425 * C146 + C70432 +
             C70432 + C153792 * C162 + C70427 * C147 + C70433 + C70433 +
             C153738 * C163) *
                C153513 * C70419 +
            (C70736 + C70737 + C70738 + C70739) * C153513 * C153560) *
               C153725 -
           ((C71696 + C71697 + C71698 + C71699) * C153513 * C153560 +
            (C70427 * C497 + C70950 + C70950 + C153738 * C521 + C70425 * C498 +
             C70951 + C70951 + C153792 * C522 + C70423 * C499 + C70952 +
             C70952 + C153811 * C523 + C70421 * C500 + C70953 + C70953 +
             C153818 * C524) *
                C153513 * C70419) *
               C153477) *
              C153795 +
          (((C71699 + C71698 + C71697 + C71696) * C153513 * C70419 +
            (C72936 + C72937 + C72938 + C72939) * C153513 * C153560) *
               C153477 -
           ((C70740 + C70741 + C70742 + C70743) * C153513 * C153560 +
            (C70739 + C70738 + C70737 + C70736) * C153513 * C70419) *
               C153725) *
              C153796 +
          (((C70743 + C70742 + C70741 + C70740) * C153513 * C70419 +
            (C72048 + C72049 + C72050 + C72051) * C153513 * C153560) *
               C153725 -
           ((C70427 * C4146 + C72924 + C72924 + C153738 * C4154 +
             C70425 * C4145 + C72925 + C72925 + C153792 * C4153 +
             C70423 * C4144 + C72926 + C72926 + C153811 * C4152 +
             C70421 * C4143 + C72927 + C72927 + C153818 * C4151) *
                C153513 * C153560 +
            (C72939 + C72938 + C72937 + C72936) * C153513 * C70419) *
               C153477) *
              C1509) *
         C153378) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
              C74253 + C74253 + C153348 * C161) *
                 C153813 +
             (C78834 + C78835) * C153802 + C78850 * C153777) *
                C70419 +
            ((C74550 + C74551) * C153813 + C79864 * C153802 +
             C78764 * C153777) *
                C153560) *
               C153725 -
           ((C80646 * C153777 + C79865 * C153802 + C79866 * C153813) * C153560 +
            ((C78840 + C78841) * C153777 + (C78837 + C78836) * C153802 +
             (C78835 + C78834) * C153813) *
                C70419) *
               C153477) *
              C153795 +
          (((C79864 * C153813 + C78764 * C153802 + C80647 * C153777) * C70419 +
            (C81637 * C153813 + C81638 * C153802 +
             (C80669 + C80670) * C153777) *
                C153560) *
               C153477 -
           ((C80656 * C153777 + C76763 * C153802 +
             (C74553 + C74552) * C153813) *
                C153560 +
            (C79865 * C153777 + C79866 * C153802 +
             (C74551 + C74550) * C153813) *
                C70419) *
               C153725) *
              C153796 +
          (((C74566 * C153813 + C81637 * C153802 + C81638 * C153777) * C70419 +
            (C74567 * C153813 + (C75539 + C75538) * C153802 +
             (C76114 + C76115) * C153777) *
                C153560) *
               C153725 -
           (((C74249 * C32070 + C77296 + C77296 + C153348 * C32072 +
              C74247 * C30195 + C77297 + C77297 + C74241 * C30199) *
                 C153777 +
             (C76115 + C76114) * C153802 + C76762 * C153813) *
                C153560 +
            ((C80670 + C80669) * C153777 + C80656 * C153802 +
             C76763 * C153813) *
                C70419) *
               C153477) *
              C1509) *
         C153378) /
            (p * q * std::sqrt(p + q));
    d2ee[37] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C70421 * C144 + C70430 + C70430 + C153818 * C160 +
                 C70423 * C145 + C70431 + C70431 + C153811 * C161 +
                 C70425 * C146 + C70432 + C70432 + C153792 * C162 +
                 C70427 * C147 + C70433 + C70433 + C153738 * C163) *
                    C153513 * C70419 +
                (C70736 + C70737 + C70738 + C70739) * C153513 * C153560) *
                   C153413 * C1131 -
               ((C70740 + C70741 + C70742 + C70743) * C153513 * C153560 +
                (C70739 + C70738 + C70737 + C70736) * C153513 * C70419) *
                   C153413 * C153449) *
                  C1133 +
              (((C70744 + C70745 + C70746 + C70747) * C153513 * C70419 +
                (C70748 + C70749 + C70750 + C70751) * C153513 * C153560) *
                   C153413 * C153449 -
               ((C70747 + C70746 + C70745 + C70744) * C153513 * C153560 +
                (C70427 * C148 + C70442 + C70442 + C153738 * C164 +
                 C70425 * C147 + C70443 + C70443 + C153792 * C163 +
                 C70423 * C146 + C70444 + C70444 + C153811 * C162 +
                 C70421 * C145 + C70445 + C70445 + C153818 * C161) *
                    C153513 * C70419) *
                   C153413 * C1131) *
                  C1134 +
              (((C70421 * C146 + C70446 + C70446 + C153818 * C162 +
                 C70423 * C147 + C70447 + C70447 + C153811 * C163 +
                 C70425 * C148 + C70448 + C70448 + C153792 * C164 +
                 C70427 * C149 + C70449 + C70449 + C153738 * C165) *
                    C153513 * C70419 +
                (C71192 + C71193 + C71194 + C71195) * C153513 * C153560) *
                   C153413 * C1131 -
               ((C70427 * C326 + C71180 + C71180 + C153738 * C350 +
                 C70425 * C324 + C71181 + C71181 + C153792 * C348 +
                 C70423 * C323 + C71182 + C71182 + C153811 * C347 +
                 C70421 * C322 + C71183 + C71183 + C153818 * C346) *
                    C153513 * C153560 +
                (C71195 + C71194 + C71193 + C71192) * C153513 * C70419) *
                   C153413 * C153449) *
                  C1135) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((C70421 * C144 + C70430 + C70430 + C153818 * C160 +
                C70423 * C145 + C70431 + C70431 + C153811 * C161 +
                C70425 * C146 + C70432 + C70432 + C153792 * C162 +
                C70427 * C147 + C70433 + C70433 + C153738 * C163) *
                   C153513 * C70419 +
               (C70736 + C70737 + C70738 + C70739) * C153513 * C153560) *
                  C153413 * C1218 -
              ((C70740 + C70741 + C70742 + C70743) * C153513 * C153560 +
               (C70739 + C70738 + C70737 + C70736) * C153513 * C70419) *
                  C153413 * C1219 +
              ((C70743 + C70742 + C70741 + C70740) * C153513 * C70419 +
               (C72048 + C72049 + C72050 + C72051) * C153513 * C153560) *
                  C153413 * C1220 -
              ((C70427 * C2992 + C72036 + C72036 + C153738 * C3000 +
                C70425 * C2991 + C72037 + C72037 + C153792 * C2999 +
                C70423 * C2990 + C72038 + C72038 + C153811 * C2998 +
                C70421 * C2989 + C72039 + C72039 + C153818 * C2997) *
                   C153513 * C153560 +
               (C72051 + C72050 + C72049 + C72048) * C153513 * C70419) *
                  C153413 * C1221) *
             C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C70421 * C144 + C70430 + C70430 + C153818 * C160 + C70423 * C145 +
             C70431 + C70431 + C153811 * C161 + C70425 * C146 + C70432 +
             C70432 + C153792 * C162 + C70427 * C147 + C70433 + C70433 +
             C153738 * C163) *
                C153513 * C70419 +
            (C70736 + C70737 + C70738 + C70739) * C153513 * C153560) *
               C493 -
           ((C71696 + C71697 + C71698 + C71699) * C153513 * C153560 +
            (C70427 * C497 + C70950 + C70950 + C153738 * C521 + C70425 * C498 +
             C70951 + C70951 + C153792 * C522 + C70423 * C499 + C70952 +
             C70952 + C153811 * C523 + C70421 * C500 + C70953 + C70953 +
             C153818 * C524) *
                C153513 * C70419) *
               C494 +
           ((C70421 * C501 + C70954 + C70954 + C153818 * C525 + C70423 * C502 +
             C70955 + C70955 + C153811 * C526 + C70425 * C503 + C70956 +
             C70956 + C153792 * C527 + C70427 * C504 + C70957 + C70957 +
             C153738 * C528) *
                C153513 * C70419 +
            (C72266 + C72267 + C72268 + C72269) * C153513 * C153560) *
               C495) *
              C1131 +
          (((C71699 + C71698 + C71697 + C71696) * C153513 * C70419 +
            (C70421 * C1800 + C71664 + C71664 + C153818 * C1810 +
             C70423 * C1799 + C71665 + C71665 + C153811 * C1809 +
             C70425 * C1798 + C71666 + C71666 + C153792 * C1808 +
             C70427 * C1797 + C71667 + C71667 + C153738 * C1807) *
                C153513 * C153560) *
               C494 -
           ((C70740 + C70741 + C70742 + C70743) * C153513 * C153560 +
            (C70739 + C70738 + C70737 + C70736) * C153513 * C70419) *
               C493 -
           ((C70427 * C3330 + C72254 + C72254 + C153738 * C3338 +
             C70425 * C3329 + C72255 + C72255 + C153792 * C3337 +
             C70423 * C3328 + C72256 + C72256 + C153811 * C3336 +
             C70421 * C3327 + C72257 + C72257 + C153818 * C3335) *
                C153513 * C153560 +
            (C72269 + C72268 + C72267 + C72266) * C153513 * C70419) *
               C495) *
              C153449) *
         C153378) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
             C74253 + C74253 + C153348 * C161) *
                C153513 * C153819 +
            (C74550 + C74551) * C153513 * C153815 + C74570 * C153805 +
            C74571 * C153747) *
               C153413 * C1131 -
           ((C74556 + C74557) * C153513 * C153747 +
            (C74555 + C74554) * C153513 * C153805 +
            (C74553 + C74552) * C153513 * C153815 +
            (C74551 + C74550) * C153513 * C153819) *
               C153413 * C153449) *
              C1133 +
          (((C74558 + C74559) * C153513 * C153819 +
            (C74560 + C74561) * C153513 * C153815 +
            (C74562 + C74563) * C153513 * C153805 +
            (C74564 + C74565) * C153513 * C153747) *
               C153413 * C153449 -
           (C74572 * C153747 + C74573 * C153805 +
            (C74559 + C74558) * C153513 * C153815 +
            (C74249 * C146 + C74266 + C74266 + C153348 * C162 + C74247 * C145 +
             C74267 + C74267 + C74241 * C161) *
                C153513 * C153819) *
               C153413 * C1131) *
              C1134 +
          (((C74247 * C146 + C74268 + C74268 + C74241 * C162 + C74249 * C147 +
             C74269 + C74269 + C153348 * C163) *
                C153513 * C153819 +
            (C75020 + C75021) * C153513 * C153815 +
            (C75022 + C75023) * C153513 * C153805 +
            (C75024 + C75025) * C153513 * C153747) *
               C153413 * C1131 -
           ((C74249 * C2992 + C75006 + C75006 + C153348 * C3000 +
             C74247 * C2991 + C75007 + C75007 + C74241 * C2999) *
                C153513 * C153747 +
            (C75025 + C75024) * C153513 * C153805 +
            (C75023 + C75022) * C153513 * C153815 +
            (C75021 + C75020) * C153513 * C153819) *
               C153413 * C153449) *
              C1135)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
            C74253 + C74253 + C153348 * C161) *
               C153513 * C153819 +
           (C74550 + C74551) * C153513 * C153815 + C74570 * C153805 +
           C74571 * C153747) *
              C153413 * C1218 -
          (C75882 * C153747 + C75883 * C153805 +
           (C74553 + C74552) * C153513 * C153815 +
           (C74551 + C74550) * C153513 * C153819) *
              C153413 * C1219 +
          (C74570 * C153819 + C74571 * C153815 +
           (C74557 + C74556) * C153513 * C153805 +
           (C75888 + C75889) * C153513 * C153747) *
              C153413 * C1220 -
          ((C74249 * C28379 + C75880 + C75880 + C153348 * C28383 +
            C74247 * C28378 + C75881 + C75881 + C74241 * C28382) *
               C153513 * C153747 +
           (C75889 + C75888) * C153513 * C153805 + C75882 * C153815 +
           C75883 * C153819) *
              C153413 * C1221) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
             C74253 + C74253 + C153348 * C161) *
                C153513 * C153819 +
            (C74550 + C74551) * C153513 * C153815 + C74570 * C153805 +
            C74571 * C153747) *
               C493 -
           ((C75538 + C75539) * C153513 * C153747 +
            (C75540 + C75541) * C153513 * C153805 +
            (C75542 + C75543) * C153513 * C153815 +
            (C74249 * C499 + C74774 + C74774 + C153348 * C523 + C74247 * C500 +
             C74775 + C74775 + C74241 * C524) *
                C153513 * C153819) *
               C494 +
           ((C74247 * C501 + C74776 + C74776 + C74241 * C525 + C74249 * C502 +
             C74777 + C74777 + C153348 * C526) *
                C153513 * C153819 +
            (C76110 + C76111) * C153513 * C153815 +
            (C76112 + C76113) * C153513 * C153805 +
            (C76114 + C76115) * C153513 * C153747) *
               C495) *
              C1131 +
          (((C75543 + C75542) * C153513 * C153819 +
            (C75541 + C75540) * C153513 * C153815 +
            (C75539 + C75538) * C153513 * C153805 +
            (C74247 * C5603 + C75498 + C75498 + C74241 * C5609 +
             C74249 * C5602 + C75499 + C75499 + C153348 * C5608) *
                C153513 * C153747) *
               C494 -
           (C75882 * C153747 + C75883 * C153805 +
            (C74553 + C74552) * C153513 * C153815 +
            (C74551 + C74550) * C153513 * C153819) *
               C493 -
           ((C74249 * C28571 + C76096 + C76096 + C153348 * C28575 +
             C74247 * C28570 + C76097 + C76097 + C74241 * C28574) *
                C153513 * C153747 +
            (C76115 + C76114) * C153513 * C153805 +
            (C76113 + C76112) * C153513 * C153815 +
            (C76111 + C76110) * C153513 * C153819) *
               C495) *
              C153449) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
              C74253 + C74253 + C153348 * C161) *
                 C153813 +
             (C78834 + C78835) * C153802 + C78850 * C153777) *
                C70419 +
            ((C74550 + C74551) * C153813 + C79864 * C153802 +
             C78764 * C153777) *
                C153560) *
               C153413 * C1131 -
           (((C76113 + C76112) * C153777 + C76763 * C153802 +
             (C74553 + C74552) * C153813) *
                C153560 +
            (C79865 * C153777 + C79866 * C153802 +
             (C74551 + C74550) * C153813) *
                C70419) *
               C153413 * C153449) *
              C1133 +
          ((((C74558 + C74559) * C153813 + C79867 * C153802 +
             C79868 * C153777) *
                C70419 +
            ((C74560 + C74561) * C153813 + (C75546 + C75547) * C153802 +
             (C78464 + C78465) * C153777) *
                C153560) *
               C153413 * C153449 -
           ((C78797 * C153777 + C79869 * C153802 +
             (C74559 + C74558) * C153813) *
                C153560 +
            (C78851 * C153777 + (C78843 + C78842) * C153802 +
             (C74249 * C146 + C74266 + C74266 + C153348 * C162 + C74247 * C145 +
              C74267 + C74267 + C74241 * C161) *
                 C153813) *
                C70419) *
               C153413 * C1131) *
              C1134 +
          ((((C74247 * C146 + C74268 + C74268 + C74241 * C162 + C74249 * C147 +
              C74269 + C74269 + C153348 * C163) *
                 C153813 +
             (C79474 + C79475) * C153802 + (C79476 + C79477) * C153777) *
                C70419 +
            ((C75020 + C75021) * C153813 + (C79160 + C79161) * C153802 +
             (C79162 + C79163) * C153777) *
                C153560) *
               C153413 * C1131 -
           (((C74249 * C3330 + C79150 + C79150 + C153348 * C3338 +
              C74247 * C3329 + C79151 + C79151 + C74241 * C3337) *
                 C153777 +
             (C74249 * C1797 + C75222 + C75222 + C153348 * C1807 +
              C74247 * C1798 + C75223 + C75223 + C74241 * C1808) *
                 C153802 +
             (C75023 + C75022) * C153813) *
                C153560 +
            ((C79163 + C79162) * C153777 + (C79161 + C79160) * C153802 +
             (C75021 + C75020) * C153813) *
                C70419) *
               C153413 * C153449) *
              C1135)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
             C74253 + C74253 + C153348 * C161) *
                C153813 +
            (C78834 + C78835) * C153802 + C78850 * C153777) *
               C70419 +
           ((C74550 + C74551) * C153813 + C79864 * C153802 + C78764 * C153777) *
               C153560) *
              C153413 * C1218 -
          (((C76113 + C76112) * C153777 + C76763 * C153802 +
            (C74553 + C74552) * C153813) *
               C153560 +
           (C79865 * C153777 + C79866 * C153802 + (C74551 + C74550) * C153813) *
               C70419) *
              C153413 * C1219 +
          ((C74566 * C153813 + (C75541 + C75540) * C153802 +
            (C76112 + C76113) * C153777) *
               C70419 +
           (C74567 * C153813 + (C75539 + C75538) * C153802 +
            (C76114 + C76115) * C153777) *
               C153560) *
              C153413 * C1220 -
          (((C74249 * C28571 + C76096 + C76096 + C153348 * C28575 +
             C74247 * C28570 + C76097 + C76097 + C74241 * C28574) *
                C153777 +
            (C76777 + C76776) * C153802 + C75874 * C153813) *
               C153560 +
           ((C76115 + C76114) * C153777 + C76762 * C153802 + C75875 * C153813) *
               C70419) *
              C153413 * C1221) *
         C153378) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
              C74253 + C74253 + C153348 * C161) *
                 C153813 +
             (C78834 + C78835) * C153802 + C78850 * C153777) *
                C70419 +
            ((C74550 + C74551) * C153813 + C79864 * C153802 +
             C78764 * C153777) *
                C153560) *
               C493 -
           ((C80646 * C153777 + C79865 * C153802 + C79866 * C153813) * C153560 +
            ((C78840 + C78841) * C153777 + (C78837 + C78836) * C153802 +
             (C78835 + C78834) * C153813) *
                C70419) *
               C494 +
           ((C78850 * C153813 + (C78841 + C78840) * C153802 +
             (C74247 * C7560 + C78773 + C78773 + C74241 * C7568 +
              C74249 * C7561 + C78774 + C78774 + C153348 * C7569) *
                 C153777) *
                C70419 +
            (C78764 * C153813 + C80647 * C153802 +
             (C80667 + C80668) * C153777) *
                C153560) *
               C495) *
              C1131 +
          (((C79864 * C153813 + C78764 * C153802 + C80647 * C153777) * C70419 +
            ((C75541 + C75540) * C153813 + (C76112 + C76113) * C153802 +
             (C80669 + C80670) * C153777) *
                C153560) *
               C494 -
           ((C80656 * C153777 + C76763 * C153802 +
             (C74553 + C74552) * C153813) *
                C153560 +
            (C79865 * C153777 + C79866 * C153802 +
             (C74551 + C74550) * C153813) *
                C70419) *
               C493 -
           (((C74249 * C31240 + C80657 + C80657 + C153348 * C31244 +
              C74247 * C31239 + C80658 + C80658 + C74241 * C31243) *
                 C153777 +
             (C80670 + C80669) * C153802 + C80656 * C153813) *
                C153560 +
            ((C80668 + C80667) * C153777 + C80646 * C153802 +
             C79865 * C153813) *
                C70419) *
               C495) *
              C153449) *
         C153378) /
            (p * q * std::sqrt(p + q));
    d2ee[38] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
              C74253 + C74253 + C153348 * C161) *
                 C153513 * C153819 +
             (C74550 + C74551) * C153513 * C153815 + C74570 * C153805 +
             C74571 * C153747) *
                C153725 -
            ((C75538 + C75539) * C153513 * C153747 +
             (C75540 + C75541) * C153513 * C153805 +
             (C75542 + C75543) * C153513 * C153815 +
             (C74249 * C499 + C74774 + C74774 + C153348 * C523 + C74247 * C500 +
              C74775 + C74775 + C74241 * C524) *
                 C153513 * C153819) *
                C153477) *
               C1131 +
           (((C75543 + C75542) * C153513 * C153819 +
             (C75541 + C75540) * C153513 * C153815 +
             (C75539 + C75538) * C153513 * C153805 +
             (C74247 * C5603 + C75498 + C75498 + C74241 * C5609 +
              C74249 * C5602 + C75499 + C75499 + C153348 * C5608) *
                 C153513 * C153747) *
                C153477 -
            (C75882 * C153747 + C75883 * C153805 +
             (C74553 + C74552) * C153513 * C153815 +
             (C74551 + C74550) * C153513 * C153819) *
                C153725) *
               C153449) *
              C153716 +
          ((((C74247 * C499 + C74784 + C74784 + C74241 * C523 + C74249 * C498 +
              C74785 + C74785 + C153348 * C522) *
                 C153513 * C153819 +
             (C75544 + C75545) * C153513 * C153815 +
             (C75546 + C75547) * C153513 * C153805 +
             (C75548 + C75549) * C153513 * C153747) *
                C153477 -
            (C74572 * C153747 + C74573 * C153805 +
             (C74559 + C74558) * C153513 * C153815 +
             (C74249 * C146 + C74266 + C74266 + C153348 * C162 + C74247 * C145 +
              C74267 + C74267 + C74241 * C161) *
                 C153513 * C153819) *
                C153725) *
               C1131 +
           (((C74558 + C74559) * C153513 * C153819 +
             (C74560 + C74561) * C153513 * C153815 +
             (C74562 + C74563) * C153513 * C153805 +
             (C74564 + C74565) * C153513 * C153747) *
                C153725 -
            ((C74249 * C5601 + C75512 + C75512 + C153348 * C5607 +
              C74247 * C5602 + C75513 + C75513 + C74241 * C5608) *
                 C153513 * C153747 +
             (C75549 + C75548) * C153513 * C153805 +
             (C75547 + C75546) * C153513 * C153815 +
             (C75545 + C75544) * C153513 * C153819) *
                C153477) *
               C153449) *
              C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C70421 * C144 + C70430 + C70430 + C153818 * C160 + C70423 * C145 +
              C70431 + C70431 + C153811 * C161 + C70425 * C146 + C70432 +
              C70432 + C153792 * C162 + C70427 * C147 + C70433 + C70433 +
              C153738 * C163) *
                 C153513 * C70419 +
             (C70736 + C70737 + C70738 + C70739) * C153513 * C153560) *
                C153725 -
            ((C71696 + C71697 + C71698 + C71699) * C153513 * C153560 +
             (C70427 * C497 + C70950 + C70950 + C153738 * C521 + C70425 * C498 +
              C70951 + C70951 + C153792 * C522 + C70423 * C499 + C70952 +
              C70952 + C153811 * C523 + C70421 * C500 + C70953 + C70953 +
              C153818 * C524) *
                 C153513 * C70419) *
                C153477) *
               C1131 +
           (((C71699 + C71698 + C71697 + C71696) * C153513 * C70419 +
             (C70421 * C1800 + C71664 + C71664 + C153818 * C1810 +
              C70423 * C1799 + C71665 + C71665 + C153811 * C1809 +
              C70425 * C1798 + C71666 + C71666 + C153792 * C1808 +
              C70427 * C1797 + C71667 + C71667 + C153738 * C1807) *
                 C153513 * C153560) *
                C153477 -
            ((C70740 + C70741 + C70742 + C70743) * C153513 * C153560 +
             (C70739 + C70738 + C70737 + C70736) * C153513 * C70419) *
                C153725) *
               C153449) *
              C153716 +
          ((((C70421 * C499 + C70962 + C70962 + C153818 * C523 + C70423 * C498 +
              C70963 + C70963 + C153811 * C522 + C70425 * C497 + C70964 +
              C70964 + C153792 * C521 + C70427 * C496 + C70965 + C70965 +
              C153738 * C520) *
                 C153513 * C70419 +
             (C71700 + C71701 + C71702 + C71703) * C153513 * C153560) *
                C153477 -
            ((C70747 + C70746 + C70745 + C70744) * C153513 * C153560 +
             (C70427 * C148 + C70442 + C70442 + C153738 * C164 + C70425 * C147 +
              C70443 + C70443 + C153792 * C163 + C70423 * C146 + C70444 +
              C70444 + C153811 * C162 + C70421 * C145 + C70445 + C70445 +
              C153818 * C161) *
                 C153513 * C70419) *
                C153725) *
               C1131 +
           (((C70744 + C70745 + C70746 + C70747) * C153513 * C70419 +
             (C70748 + C70749 + C70750 + C70751) * C153513 * C153560) *
                C153725 -
            ((C70427 * C1796 + C71676 + C71676 + C153738 * C1806 +
              C70425 * C1797 + C71677 + C71677 + C153792 * C1807 +
              C70423 * C1798 + C71678 + C71678 + C153811 * C1808 +
              C70421 * C1799 + C71679 + C71679 + C153818 * C1809) *
                 C153513 * C153560 +
             (C71703 + C71702 + C71701 + C71700) * C153513 * C70419) *
                C153477) *
               C153449) *
              C153384)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
               C74253 + C74253 + C153348 * C161) *
                  C153813 +
              (C78834 + C78835) * C153802 + C78850 * C153777) *
                 C70419 +
             ((C74550 + C74551) * C153813 + C79864 * C153802 +
              C78764 * C153777) *
                 C153560) *
                C153725 -
            ((C80646 * C153777 + C79865 * C153802 + C79866 * C153813) *
                 C153560 +
             ((C78840 + C78841) * C153777 + (C78837 + C78836) * C153802 +
              (C78835 + C78834) * C153813) *
                 C70419) *
                C153477) *
               C1131 +
           (((C79864 * C153813 + C78764 * C153802 + C80647 * C153777) * C70419 +
             ((C75541 + C75540) * C153813 + (C76112 + C76113) * C153802 +
              (C80669 + C80670) * C153777) *
                 C153560) *
                C153477 -
            ((C80656 * C153777 + C76763 * C153802 +
              (C74553 + C74552) * C153813) *
                 C153560 +
             (C79865 * C153777 + C79866 * C153802 +
              (C74551 + C74550) * C153813) *
                 C70419) *
                C153725) *
               C153449) *
              C153716 +
          (((((C78842 + C78843) * C153813 + (C78844 + C78845) * C153802 +
              (C78846 + C78847) * C153777) *
                 C70419 +
             (C79867 * C153813 + C79868 * C153802 +
              (C78848 + C78849) * C153777) *
                 C153560) *
                C153477 -
            ((C78797 * C153777 + C79869 * C153802 +
              (C74559 + C74558) * C153813) *
                 C153560 +
             (C78851 * C153777 + (C78843 + C78842) * C153802 +
              (C74249 * C146 + C74266 + C74266 + C153348 * C162 +
               C74247 * C145 + C74267 + C74267 + C74241 * C161) *
                  C153813) *
                 C70419) *
                C153725) *
               C1131 +
           ((((C74558 + C74559) * C153813 + C79867 * C153802 +
              C79868 * C153777) *
                 C70419 +
             ((C74560 + C74561) * C153813 + (C75546 + C75547) * C153802 +
              (C78464 + C78465) * C153777) *
                 C153560) *
                C153725 -
            (((C74249 * C6213 + C79870 + C79870 + C153348 * C6225 +
               C74247 * C6214 + C79871 + C79871 + C74241 * C6226) *
                  C153777 +
              (C78465 + C78464) * C153802 + (C75547 + C75546) * C153813) *
                 C153560 +
             ((C78849 + C78848) * C153777 + C78797 * C153802 +
              C79869 * C153813) *
                 C70419) *
                C153477) *
               C153449) *
              C153384)) /
            (p * q * std::sqrt(p + q));
    d2ee[39] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C70421 * C144 + C70430 + C70430 + C153818 * C160 + C70423 * C145 +
            C70431 + C70431 + C153811 * C161 + C70425 * C146 + C70432 + C70432 +
            C153792 * C162 + C70427 * C147 + C70433 + C70433 + C153738 * C163) *
               C153513 * C70419 +
           (C70736 + C70737 + C70738 + C70739) * C153513 * C153560) *
              C153413 * C1218 -
          ((C70740 + C70741 + C70742 + C70743) * C153513 * C153560 +
           (C70739 + C70738 + C70737 + C70736) * C153513 * C70419) *
              C153413 * C1219 +
          ((C70743 + C70742 + C70741 + C70740) * C153513 * C70419 +
           (C72048 + C72049 + C72050 + C72051) * C153513 * C153560) *
              C153413 * C1220 -
          ((C70427 * C2992 + C72036 + C72036 + C153738 * C3000 +
            C70425 * C2991 + C72037 + C72037 + C153792 * C2999 +
            C70423 * C2990 + C72038 + C72038 + C153811 * C2998 +
            C70421 * C2989 + C72039 + C72039 + C153818 * C2997) *
               C153513 * C153560 +
           (C72051 + C72050 + C72049 + C72048) * C153513 * C70419) *
              C153413 * C1221) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C70421 * C144 + C70430 + C70430 + C153818 * C160 + C70423 * C145 +
             C70431 + C70431 + C153811 * C161 + C70425 * C146 + C70432 +
             C70432 + C153792 * C162 + C70427 * C147 + C70433 + C70433 +
             C153738 * C163) *
                C153513 * C70419 +
            (C70736 + C70737 + C70738 + C70739) * C153513 * C153560) *
               C153413 * C1131 -
           ((C70740 + C70741 + C70742 + C70743) * C153513 * C153560 +
            (C70739 + C70738 + C70737 + C70736) * C153513 * C70419) *
               C153413 * C153449) *
              C1133 +
          (((C70744 + C70745 + C70746 + C70747) * C153513 * C70419 +
            (C70748 + C70749 + C70750 + C70751) * C153513 * C153560) *
               C153413 * C153449 -
           ((C70747 + C70746 + C70745 + C70744) * C153513 * C153560 +
            (C70427 * C148 + C70442 + C70442 + C153738 * C164 + C70425 * C147 +
             C70443 + C70443 + C153792 * C163 + C70423 * C146 + C70444 +
             C70444 + C153811 * C162 + C70421 * C145 + C70445 + C70445 +
             C153818 * C161) *
                C153513 * C70419) *
               C153413 * C1131) *
              C1134 +
          (((C70421 * C146 + C70446 + C70446 + C153818 * C162 + C70423 * C147 +
             C70447 + C70447 + C153811 * C163 + C70425 * C148 + C70448 +
             C70448 + C153792 * C164 + C70427 * C149 + C70449 + C70449 +
             C153738 * C165) *
                C153513 * C70419 +
            (C71192 + C71193 + C71194 + C71195) * C153513 * C153560) *
               C153413 * C1131 -
           ((C70427 * C326 + C71180 + C71180 + C153738 * C350 + C70425 * C324 +
             C71181 + C71181 + C153792 * C348 + C70423 * C323 + C71182 +
             C71182 + C153811 * C347 + C70421 * C322 + C71183 + C71183 +
             C153818 * C346) *
                C153513 * C153560 +
            (C71195 + C71194 + C71193 + C71192) * C153513 * C70419) *
               C153413 * C153449) *
              C1135)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
             C74253 + C74253 + C153348 * C161) *
                C153513 * C153819 +
            (C74550 + C74551) * C153513 * C153815 + C74570 * C153805 +
            C74571 * C153747) *
               C153413 * C1131 -
           ((C74556 + C74557) * C153513 * C153747 +
            (C74555 + C74554) * C153513 * C153805 +
            (C74553 + C74552) * C153513 * C153815 +
            (C74551 + C74550) * C153513 * C153819) *
               C153413 * C153449) *
              C1133 +
          (((C74558 + C74559) * C153513 * C153819 +
            (C74560 + C74561) * C153513 * C153815 +
            (C74562 + C74563) * C153513 * C153805 +
            (C74564 + C74565) * C153513 * C153747) *
               C153413 * C153449 -
           (C74572 * C153747 + C74573 * C153805 +
            (C74559 + C74558) * C153513 * C153815 +
            (C74249 * C146 + C74266 + C74266 + C153348 * C162 + C74247 * C145 +
             C74267 + C74267 + C74241 * C161) *
                C153513 * C153819) *
               C153413 * C1131) *
              C1134 +
          (((C74247 * C146 + C74268 + C74268 + C74241 * C162 + C74249 * C147 +
             C74269 + C74269 + C153348 * C163) *
                C153513 * C153819 +
            (C75020 + C75021) * C153513 * C153815 +
            (C75022 + C75023) * C153513 * C153805 +
            (C75024 + C75025) * C153513 * C153747) *
               C153413 * C1131 -
           ((C74249 * C2992 + C75006 + C75006 + C153348 * C3000 +
             C74247 * C2991 + C75007 + C75007 + C74241 * C2999) *
                C153513 * C153747 +
            (C75025 + C75024) * C153513 * C153805 +
            (C75023 + C75022) * C153513 * C153815 +
            (C75021 + C75020) * C153513 * C153819) *
               C153413 * C153449) *
              C1135)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
            C74253 + C74253 + C153348 * C161) *
               C153513 * C153819 +
           (C74550 + C74551) * C153513 * C153815 + C74570 * C153805 +
           C74571 * C153747) *
              C153413 * C1218 -
          (C75882 * C153747 + C75883 * C153805 +
           (C74553 + C74552) * C153513 * C153815 +
           (C74551 + C74550) * C153513 * C153819) *
              C153413 * C1219 +
          (C74570 * C153819 + C74571 * C153815 +
           (C74557 + C74556) * C153513 * C153805 +
           (C75888 + C75889) * C153513 * C153747) *
              C153413 * C1220 -
          ((C74249 * C28379 + C75880 + C75880 + C153348 * C28383 +
            C74247 * C28378 + C75881 + C75881 + C74241 * C28382) *
               C153513 * C153747 +
           (C75889 + C75888) * C153513 * C153805 + C75882 * C153815 +
           C75883 * C153819) *
              C153413 * C1221) *
         C153378) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
              C74253 + C74253 + C153348 * C161) *
                 C153813 +
             (C78834 + C78835) * C153802 + C78850 * C153777) *
                C70419 +
            ((C74550 + C74551) * C153813 + C79864 * C153802 +
             C78764 * C153777) *
                C153560) *
               C153413 * C1131 -
           (((C76113 + C76112) * C153777 + C76763 * C153802 +
             (C74553 + C74552) * C153813) *
                C153560 +
            (C79865 * C153777 + C79866 * C153802 +
             (C74551 + C74550) * C153813) *
                C70419) *
               C153413 * C153449) *
              C1133 +
          ((((C74558 + C74559) * C153813 + C79867 * C153802 +
             C79868 * C153777) *
                C70419 +
            ((C74560 + C74561) * C153813 + (C75546 + C75547) * C153802 +
             (C78464 + C78465) * C153777) *
                C153560) *
               C153413 * C153449 -
           ((C78797 * C153777 + C79869 * C153802 +
             (C74559 + C74558) * C153813) *
                C153560 +
            (C78851 * C153777 + (C78843 + C78842) * C153802 +
             (C74249 * C146 + C74266 + C74266 + C153348 * C162 + C74247 * C145 +
              C74267 + C74267 + C74241 * C161) *
                 C153813) *
                C70419) *
               C153413 * C1131) *
              C1134 +
          ((((C74247 * C146 + C74268 + C74268 + C74241 * C162 + C74249 * C147 +
              C74269 + C74269 + C153348 * C163) *
                 C153813 +
             (C79474 + C79475) * C153802 + (C79476 + C79477) * C153777) *
                C70419 +
            ((C75020 + C75021) * C153813 + (C79160 + C79161) * C153802 +
             (C79162 + C79163) * C153777) *
                C153560) *
               C153413 * C1131 -
           (((C74249 * C3330 + C79150 + C79150 + C153348 * C3338 +
              C74247 * C3329 + C79151 + C79151 + C74241 * C3337) *
                 C153777 +
             (C74249 * C1797 + C75222 + C75222 + C153348 * C1807 +
              C74247 * C1798 + C75223 + C75223 + C74241 * C1808) *
                 C153802 +
             (C75023 + C75022) * C153813) *
                C153560 +
            ((C79163 + C79162) * C153777 + (C79161 + C79160) * C153802 +
             (C75021 + C75020) * C153813) *
                C70419) *
               C153413 * C153449) *
              C1135)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
             C74253 + C74253 + C153348 * C161) *
                C153813 +
            (C78834 + C78835) * C153802 + C78850 * C153777) *
               C70419 +
           ((C74550 + C74551) * C153813 + C79864 * C153802 + C78764 * C153777) *
               C153560) *
              C153413 * C1218 -
          (((C76113 + C76112) * C153777 + C76763 * C153802 +
            (C74553 + C74552) * C153813) *
               C153560 +
           (C79865 * C153777 + C79866 * C153802 + (C74551 + C74550) * C153813) *
               C70419) *
              C153413 * C1219 +
          ((C74566 * C153813 + (C75541 + C75540) * C153802 +
            (C76112 + C76113) * C153777) *
               C70419 +
           (C74567 * C153813 + (C75539 + C75538) * C153802 +
            (C76114 + C76115) * C153777) *
               C153560) *
              C153413 * C1220 -
          (((C74249 * C28571 + C76096 + C76096 + C153348 * C28575 +
             C74247 * C28570 + C76097 + C76097 + C74241 * C28574) *
                C153777 +
            (C76777 + C76776) * C153802 + C75874 * C153813) *
               C153560 +
           ((C76115 + C76114) * C153777 + C76762 * C153802 + C75875 * C153813) *
               C70419) *
              C153413 * C1221) *
         C153378) /
            (p * q * std::sqrt(p + q));
    d2ee[40] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
              C74253 + C74253 + C153348 * C161) *
                 C153513 * C153819 +
             (C74550 + C74551) * C153513 * C153815 + C74570 * C153805 +
             C74571 * C153747) *
                C1938 -
            (C76770 * C153747 + C76771 * C153805 +
             (C75542 + C75543) * C153513 * C153815 +
             (C74249 * C499 + C74774 + C74774 + C153348 * C523 + C74247 * C500 +
              C74775 + C74775 + C74241 * C524) *
                 C153513 * C153819) *
                C153477) *
               C153724 +
           (((C75543 + C75542) * C153513 * C153819 +
             (C75541 + C75540) * C153513 * C153815 +
             (C75539 + C75538) * C153513 * C153805 +
             (C76776 + C76777) * C153513 * C153747) *
                C153477 -
            (C75882 * C153747 + C75883 * C153805 +
             (C74553 + C74552) * C153513 * C153815 +
             (C74551 + C74550) * C153513 * C153819) *
                C1938) *
               C153449) *
              C153716 +
          ((((C74247 * C499 + C74784 + C74784 + C74241 * C523 + C74249 * C498 +
              C74785 + C74785 + C153348 * C522) *
                 C153513 * C153819 +
             (C75544 + C75545) * C153513 * C153815 +
             (C75546 + C75547) * C153513 * C153805 +
             (C75548 + C75549) * C153513 * C153747) *
                C153477 -
            (C74572 * C153747 + C74573 * C153805 +
             (C74559 + C74558) * C153513 * C153815 +
             (C74249 * C146 + C74266 + C74266 + C153348 * C162 + C74247 * C145 +
              C74267 + C74267 + C74241 * C161) *
                 C153513 * C153819) *
                C1938) *
               C153724 +
           (((C74558 + C74559) * C153513 * C153819 +
             (C74560 + C74561) * C153513 * C153815 +
             (C74562 + C74563) * C153513 * C153805 +
             (C74564 + C74565) * C153513 * C153747) *
                C1938 -
            ((C74249 * C5601 + C75512 + C75512 + C153348 * C5607 +
              C74247 * C5602 + C75513 + C75513 + C74241 * C5608) *
                 C153513 * C153747 +
             (C75549 + C75548) * C153513 * C153805 +
             (C75547 + C75546) * C153513 * C153815 +
             (C75545 + C75544) * C153513 * C153819) *
                C153477) *
               C153449) *
              C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C70421 * C144 + C70430 + C70430 + C153818 * C160 + C70423 * C145 +
              C70431 + C70431 + C153811 * C161 + C70425 * C146 + C70432 +
              C70432 + C153792 * C162 + C70427 * C147 + C70433 + C70433 +
              C153738 * C163) *
                 C153513 * C70419 +
             (C70736 + C70737 + C70738 + C70739) * C153513 * C153560) *
                C1938 -
            ((C71696 + C71697 + C71698 + C71699) * C153513 * C153560 +
             (C70427 * C497 + C70950 + C70950 + C153738 * C521 + C70425 * C498 +
              C70951 + C70951 + C153792 * C522 + C70423 * C499 + C70952 +
              C70952 + C153811 * C523 + C70421 * C500 + C70953 + C70953 +
              C153818 * C524) *
                 C153513 * C70419) *
                C153477) *
               C153724 +
           (((C71699 + C71698 + C71697 + C71696) * C153513 * C70419 +
             (C72936 + C72937 + C72938 + C72939) * C153513 * C153560) *
                C153477 -
            ((C70740 + C70741 + C70742 + C70743) * C153513 * C153560 +
             (C70739 + C70738 + C70737 + C70736) * C153513 * C70419) *
                C1938) *
               C153449) *
              C153716 +
          ((((C70421 * C499 + C70962 + C70962 + C153818 * C523 + C70423 * C498 +
              C70963 + C70963 + C153811 * C522 + C70425 * C497 + C70964 +
              C70964 + C153792 * C521 + C70427 * C496 + C70965 + C70965 +
              C153738 * C520) *
                 C153513 * C70419 +
             (C71700 + C71701 + C71702 + C71703) * C153513 * C153560) *
                C153477 -
            ((C70747 + C70746 + C70745 + C70744) * C153513 * C153560 +
             (C70427 * C148 + C70442 + C70442 + C153738 * C164 + C70425 * C147 +
              C70443 + C70443 + C153792 * C163 + C70423 * C146 + C70444 +
              C70444 + C153811 * C162 + C70421 * C145 + C70445 + C70445 +
              C153818 * C161) *
                 C153513 * C70419) *
                C1938) *
               C153724 +
           (((C70744 + C70745 + C70746 + C70747) * C153513 * C70419 +
             (C70748 + C70749 + C70750 + C70751) * C153513 * C153560) *
                C1938 -
            ((C70427 * C1796 + C71676 + C71676 + C153738 * C1806 +
              C70425 * C1797 + C71677 + C71677 + C153792 * C1807 +
              C70423 * C1798 + C71678 + C71678 + C153811 * C1808 +
              C70421 * C1799 + C71679 + C71679 + C153818 * C1809) *
                 C153513 * C153560 +
             (C71703 + C71702 + C71701 + C71700) * C153513 * C70419) *
                C153477) *
               C153449) *
              C153384)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
               C74253 + C74253 + C153348 * C161) *
                  C153813 +
              (C78834 + C78835) * C153802 + C78850 * C153777) *
                 C70419 +
             ((C74550 + C74551) * C153813 + C79864 * C153802 +
              C78764 * C153777) *
                 C153560) *
                C1938 -
            ((C80646 * C153777 + C79865 * C153802 + C79866 * C153813) *
                 C153560 +
             (C82413 * C153777 + (C78837 + C78836) * C153802 +
              (C78835 + C78834) * C153813) *
                 C70419) *
                C153477) *
               C153724 +
           (((C79864 * C153813 + C78764 * C153802 + C80647 * C153777) * C70419 +
             (C81637 * C153813 + C81638 * C153802 +
              (C80669 + C80670) * C153777) *
                 C153560) *
                C153477 -
            ((C80656 * C153777 + C76763 * C153802 +
              (C74553 + C74552) * C153813) *
                 C153560 +
             (C79865 * C153777 + C79866 * C153802 +
              (C74551 + C74550) * C153813) *
                 C70419) *
                C1938) *
               C153449) *
              C153716 +
          (((((C78842 + C78843) * C153813 + (C78844 + C78845) * C153802 +
              (C78846 + C78847) * C153777) *
                 C70419 +
             (C79867 * C153813 + C79868 * C153802 +
              (C78848 + C78849) * C153777) *
                 C153560) *
                C153477 -
            ((C78797 * C153777 + C79869 * C153802 +
              (C74559 + C74558) * C153813) *
                 C153560 +
             (C78851 * C153777 + (C78843 + C78842) * C153802 +
              (C74249 * C146 + C74266 + C74266 + C153348 * C162 +
               C74247 * C145 + C74267 + C74267 + C74241 * C161) *
                  C153813) *
                 C70419) *
                C1938) *
               C153724 +
           ((((C74558 + C74559) * C153813 + C79867 * C153802 +
              C79868 * C153777) *
                 C70419 +
             ((C74560 + C74561) * C153813 + (C75546 + C75547) * C153802 +
              (C78464 + C78465) * C153777) *
                 C153560) *
                C1938 -
            (((C74249 * C6213 + C79870 + C79870 + C153348 * C6225 +
               C74247 * C6214 + C79871 + C79871 + C74241 * C6226) *
                  C153777 +
              (C78465 + C78464) * C153802 + (C75547 + C75546) * C153813) *
                 C153560 +
             ((C78849 + C78848) * C153777 + C78797 * C153802 +
              C79869 * C153813) *
                 C70419) *
                C153477) *
               C153449) *
              C153384)) /
            (p * q * std::sqrt(p + q));
    d2ee[41] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
             C74253 + C74253 + C153348 * C161) *
                C153513 * C153819 +
            (C74550 + C74551) * C153513 * C153815 + C74570 * C153805 +
            C74571 * C153747) *
               C153797 -
           (C76770 * C153747 + C76771 * C153805 +
            (C75542 + C75543) * C153513 * C153815 +
            (C74249 * C499 + C74774 + C74774 + C153348 * C523 + C74247 * C500 +
             C74775 + C74775 + C74241 * C524) *
                C153513 * C153819) *
               C153798 +
           ((C74247 * C501 + C74776 + C74776 + C74241 * C525 + C74249 * C502 +
             C74777 + C74777 + C153348 * C526) *
                C153513 * C153819 +
            (C76110 + C76111) * C153513 * C153815 +
            (C76112 + C76113) * C153513 * C153805 +
            (C76114 + C76115) * C153513 * C153747) *
               C2454) *
              C153724 +
          (((C75543 + C75542) * C153513 * C153819 +
            (C75541 + C75540) * C153513 * C153815 +
            (C75539 + C75538) * C153513 * C153805 +
            (C76776 + C76777) * C153513 * C153747) *
               C153798 -
           (C75882 * C153747 + C75883 * C153805 +
            (C74553 + C74552) * C153513 * C153815 +
            (C74551 + C74550) * C153513 * C153819) *
               C153797 -
           ((C74249 * C28571 + C76096 + C76096 + C153348 * C28575 +
             C74247 * C28570 + C76097 + C76097 + C74241 * C28574) *
                C153513 * C153747 +
            (C76115 + C76114) * C153513 * C153805 +
            (C76113 + C76112) * C153513 * C153815 +
            (C76111 + C76110) * C153513 * C153819) *
               C2454) *
              C153449) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C70421 * C144 + C70430 + C70430 + C153818 * C160 + C70423 * C145 +
             C70431 + C70431 + C153811 * C161 + C70425 * C146 + C70432 +
             C70432 + C153792 * C162 + C70427 * C147 + C70433 + C70433 +
             C153738 * C163) *
                C153513 * C70419 +
            (C70736 + C70737 + C70738 + C70739) * C153513 * C153560) *
               C153797 -
           ((C71696 + C71697 + C71698 + C71699) * C153513 * C153560 +
            (C70427 * C497 + C70950 + C70950 + C153738 * C521 + C70425 * C498 +
             C70951 + C70951 + C153792 * C522 + C70423 * C499 + C70952 +
             C70952 + C153811 * C523 + C70421 * C500 + C70953 + C70953 +
             C153818 * C524) *
                C153513 * C70419) *
               C153798 +
           ((C70421 * C501 + C70954 + C70954 + C153818 * C525 + C70423 * C502 +
             C70955 + C70955 + C153811 * C526 + C70425 * C503 + C70956 +
             C70956 + C153792 * C527 + C70427 * C504 + C70957 + C70957 +
             C153738 * C528) *
                C153513 * C70419 +
            (C72266 + C72267 + C72268 + C72269) * C153513 * C153560) *
               C2454) *
              C153724 +
          (((C71699 + C71698 + C71697 + C71696) * C153513 * C70419 +
            (C72936 + C72937 + C72938 + C72939) * C153513 * C153560) *
               C153798 -
           ((C70740 + C70741 + C70742 + C70743) * C153513 * C153560 +
            (C70739 + C70738 + C70737 + C70736) * C153513 * C70419) *
               C153797 -
           ((C70427 * C3330 + C72254 + C72254 + C153738 * C3338 +
             C70425 * C3329 + C72255 + C72255 + C153792 * C3337 +
             C70423 * C3328 + C72256 + C72256 + C153811 * C3336 +
             C70421 * C3327 + C72257 + C72257 + C153818 * C3335) *
                C153513 * C153560 +
            (C72269 + C72268 + C72267 + C72266) * C153513 * C70419) *
               C2454) *
              C153449) *
         C153378) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
              C74253 + C74253 + C153348 * C161) *
                 C153813 +
             (C78834 + C78835) * C153802 + C78850 * C153777) *
                C70419 +
            ((C74550 + C74551) * C153813 + C79864 * C153802 +
             C78764 * C153777) *
                C153560) *
               C153797 -
           ((C80646 * C153777 + C79865 * C153802 + C79866 * C153813) * C153560 +
            (C82413 * C153777 + (C78837 + C78836) * C153802 +
             (C78835 + C78834) * C153813) *
                C70419) *
               C153798 +
           ((C78850 * C153813 + (C78841 + C78840) * C153802 +
             (C82426 + C82427) * C153777) *
                C70419 +
            (C78764 * C153813 + C80647 * C153802 +
             (C80667 + C80668) * C153777) *
                C153560) *
               C2454) *
              C153724 +
          (((C79864 * C153813 + C78764 * C153802 + C80647 * C153777) * C70419 +
            (C81637 * C153813 + C81638 * C153802 +
             (C80669 + C80670) * C153777) *
                C153560) *
               C153798 -
           ((C80656 * C153777 + C76763 * C153802 +
             (C74553 + C74552) * C153813) *
                C153560 +
            (C79865 * C153777 + C79866 * C153802 +
             (C74551 + C74550) * C153813) *
                C70419) *
               C153797 -
           (((C74249 * C31240 + C80657 + C80657 + C153348 * C31244 +
              C74247 * C31239 + C80658 + C80658 + C74241 * C31243) *
                 C153777 +
             (C80670 + C80669) * C153802 + C80656 * C153813) *
                C153560 +
            ((C80668 + C80667) * C153777 + C80646 * C153802 +
             C79865 * C153813) *
                C70419) *
               C2454) *
              C153449) *
         C153378) /
            (p * q * std::sqrt(p + q));
    d2ee[42] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C70421 * C144 + C70430 + C70430 + C153818 * C160 +
                 C70423 * C145 + C70431 + C70431 + C153811 * C161 +
                 C70425 * C146 + C70432 + C70432 + C153792 * C162 +
                 C70427 * C147 + C70433 + C70433 + C153738 * C163) *
                    C153513 * C70419 +
                (C70736 + C70737 + C70738 + C70739) * C153513 * C153560) *
                   C1938 -
               ((C71696 + C71697 + C71698 + C71699) * C153513 * C153560 +
                (C70427 * C497 + C70950 + C70950 + C153738 * C521 +
                 C70425 * C498 + C70951 + C70951 + C153792 * C522 +
                 C70423 * C499 + C70952 + C70952 + C153811 * C523 +
                 C70421 * C500 + C70953 + C70953 + C153818 * C524) *
                    C153513 * C70419) *
                   C153477) *
                  C153397 * C1133 +
              (((C70421 * C499 + C70962 + C70962 + C153818 * C523 +
                 C70423 * C498 + C70963 + C70963 + C153811 * C522 +
                 C70425 * C497 + C70964 + C70964 + C153792 * C521 +
                 C70427 * C496 + C70965 + C70965 + C153738 * C520) *
                    C153513 * C70419 +
                (C71700 + C71701 + C71702 + C71703) * C153513 * C153560) *
                   C153477 -
               ((C70747 + C70746 + C70745 + C70744) * C153513 * C153560 +
                (C70427 * C148 + C70442 + C70442 + C153738 * C164 +
                 C70425 * C147 + C70443 + C70443 + C153792 * C163 +
                 C70423 * C146 + C70444 + C70444 + C153811 * C162 +
                 C70421 * C145 + C70445 + C70445 + C153818 * C161) *
                    C153513 * C70419) *
                   C1938) *
                  C153397 * C1134 +
              (((C70421 * C146 + C70446 + C70446 + C153818 * C162 +
                 C70423 * C147 + C70447 + C70447 + C153811 * C163 +
                 C70425 * C148 + C70448 + C70448 + C153792 * C164 +
                 C70427 * C149 + C70449 + C70449 + C153738 * C165) *
                    C153513 * C70419 +
                (C71192 + C71193 + C71194 + C71195) * C153513 * C153560) *
                   C1938 -
               ((C70427 * C986 + C71390 + C71390 + C153738 * C998 +
                 C70425 * C985 + C71391 + C71391 + C153792 * C997 +
                 C70423 * C984 + C71392 + C71392 + C153811 * C996 +
                 C70421 * C983 + C71393 + C71393 + C153818 * C995) *
                    C153513 * C153560 +
                (C70427 * C506 + C71394 + C71394 + C153738 * C530 +
                 C70425 * C496 + C71395 + C71395 + C153792 * C520 +
                 C70423 * C497 + C71396 + C71396 + C153811 * C521 +
                 C70421 * C498 + C71397 + C71397 + C153818 * C522) *
                    C153513 * C70419) *
                   C153477) *
                  C153397 * C1135) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C70421 * C144 + C70430 + C70430 + C153818 * C160 +
                 C70423 * C145 + C70431 + C70431 + C153811 * C161 +
                 C70425 * C146 + C70432 + C70432 + C153792 * C162 +
                 C70427 * C147 + C70433 + C70433 + C153738 * C163) *
                    C153513 * C70419 +
                (C70736 + C70737 + C70738 + C70739) * C153513 * C153560) *
                   C1938 -
               ((C71696 + C71697 + C71698 + C71699) * C153513 * C153560 +
                (C70427 * C497 + C70950 + C70950 + C153738 * C521 +
                 C70425 * C498 + C70951 + C70951 + C153792 * C522 +
                 C70423 * C499 + C70952 + C70952 + C153811 * C523 +
                 C70421 * C500 + C70953 + C70953 + C153818 * C524) *
                    C153513 * C70419) *
                   C153477) *
                  C310 +
              (((C71699 + C71698 + C71697 + C71696) * C153513 * C70419 +
                (C72936 + C72937 + C72938 + C72939) * C153513 * C153560) *
                   C153477 -
               ((C70740 + C70741 + C70742 + C70743) * C153513 * C153560 +
                (C70739 + C70738 + C70737 + C70736) * C153513 * C70419) *
                   C1938) *
                  C311 +
              (((C70743 + C70742 + C70741 + C70740) * C153513 * C70419 +
                (C72048 + C72049 + C72050 + C72051) * C153513 * C153560) *
                   C1938 -
               ((C70427 * C4146 + C72924 + C72924 + C153738 * C4154 +
                 C70425 * C4145 + C72925 + C72925 + C153792 * C4153 +
                 C70423 * C4144 + C72926 + C72926 + C153811 * C4152 +
                 C70421 * C4143 + C72927 + C72927 + C153818 * C4151) *
                    C153513 * C153560 +
                (C72939 + C72938 + C72937 + C72936) * C153513 * C70419) *
                   C153477) *
                  C312) *
             C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C70421 * C144 + C70430 + C70430 + C153818 * C160 + C70423 * C145 +
            C70431 + C70431 + C153811 * C161 + C70425 * C146 + C70432 + C70432 +
            C153792 * C162 + C70427 * C147 + C70433 + C70433 + C153738 * C163) *
               C153513 * C70419 +
           (C70736 + C70737 + C70738 + C70739) * C153513 * C153560) *
              C2144 -
          ((C71696 + C71697 + C71698 + C71699) * C153513 * C153560 +
           (C70427 * C497 + C70950 + C70950 + C153738 * C521 + C70425 * C498 +
            C70951 + C70951 + C153792 * C522 + C70423 * C499 + C70952 + C70952 +
            C153811 * C523 + C70421 * C500 + C70953 + C70953 + C153818 * C524) *
               C153513 * C70419) *
              C2145 +
          ((C70421 * C501 + C70954 + C70954 + C153818 * C525 + C70423 * C502 +
            C70955 + C70955 + C153811 * C526 + C70425 * C503 + C70956 + C70956 +
            C153792 * C527 + C70427 * C504 + C70957 + C70957 + C153738 * C528) *
               C153513 * C70419 +
           (C72266 + C72267 + C72268 + C72269) * C153513 * C153560) *
              C2146 -
          ((C70427 * C8437 + C73458 + C73458 + C153738 * C8439 +
            C70425 * C6216 + C73459 + C73459 + C153792 * C6228 +
            C70423 * C6217 + C73460 + C73460 + C153811 * C6229 +
            C70421 * C6218 + C73461 + C73461 + C153818 * C6230) *
               C153513 * C153560 +
           (C70427 * C2149 + C73462 + C73462 + C153738 * C2159 +
            C70425 * C2150 + C73463 + C73463 + C153792 * C2160 +
            C70423 * C2151 + C73464 + C73464 + C153811 * C2161 +
            C70421 * C2152 + C73465 + C73465 + C153818 * C2162) *
               C153513 * C70419) *
              C2147) *
         C153397 * C153378) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
             C74253 + C74253 + C153348 * C161) *
                C153513 * C153819 +
            (C74550 + C74551) * C153513 * C153815 + C74570 * C153805 +
            C74571 * C153747) *
               C1938 -
           (C76770 * C153747 + C76771 * C153805 +
            (C75542 + C75543) * C153513 * C153815 +
            (C74249 * C499 + C74774 + C74774 + C153348 * C523 + C74247 * C500 +
             C74775 + C74775 + C74241 * C524) *
                C153513 * C153819) *
               C153477) *
              C153397 * C1133 +
          (((C74247 * C499 + C74784 + C74784 + C74241 * C523 + C74249 * C498 +
             C74785 + C74785 + C153348 * C522) *
                C153513 * C153819 +
            (C75544 + C75545) * C153513 * C153815 +
            (C75546 + C75547) * C153513 * C153805 +
            (C75548 + C75549) * C153513 * C153747) *
               C153477 -
           (C74572 * C153747 + C74573 * C153805 +
            (C74559 + C74558) * C153513 * C153815 +
            (C74249 * C146 + C74266 + C74266 + C153348 * C162 + C74247 * C145 +
             C74267 + C74267 + C74241 * C161) *
                C153513 * C153819) *
               C1938) *
              C153397 * C1134 +
          (((C74247 * C146 + C74268 + C74268 + C74241 * C162 + C74249 * C147 +
             C74269 + C74269 + C153348 * C163) *
                C153513 * C153819 +
            (C75020 + C75021) * C153513 * C153815 +
            (C75022 + C75023) * C153513 * C153805 +
            (C75024 + C75025) * C153513 * C153747) *
               C1938 -
           ((C74249 * C4146 + C75220 + C75220 + C153348 * C4154 +
             C74247 * C4145 + C75221 + C75221 + C74241 * C4153) *
                C153513 * C153747 +
            (C74249 * C1797 + C75222 + C75222 + C153348 * C1807 +
             C74247 * C1798 + C75223 + C75223 + C74241 * C1808) *
                C153513 * C153805 +
            (C74249 * C984 + C75224 + C75224 + C153348 * C996 + C74247 * C983 +
             C75225 + C75225 + C74241 * C995) *
                C153513 * C153815 +
            (C74249 * C497 + C75226 + C75226 + C153348 * C521 + C74247 * C498 +
             C75227 + C75227 + C74241 * C522) *
                C153513 * C153819) *
               C153477) *
              C153397 * C1135)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
             C74253 + C74253 + C153348 * C161) *
                C153513 * C153819 +
            (C74550 + C74551) * C153513 * C153815 + C74570 * C153805 +
            C74571 * C153747) *
               C1938 -
           (C76770 * C153747 + C76771 * C153805 +
            (C75542 + C75543) * C153513 * C153815 +
            (C74249 * C499 + C74774 + C74774 + C153348 * C523 + C74247 * C500 +
             C74775 + C74775 + C74241 * C524) *
                C153513 * C153819) *
               C153477) *
              C310 +
          (((C75543 + C75542) * C153513 * C153819 +
            (C75541 + C75540) * C153513 * C153815 +
            (C75539 + C75538) * C153513 * C153805 +
            (C76776 + C76777) * C153513 * C153747) *
               C153477 -
           (C75882 * C153747 + C75883 * C153805 +
            (C74553 + C74552) * C153513 * C153815 +
            (C74551 + C74550) * C153513 * C153819) *
               C1938) *
              C311 +
          ((C74570 * C153819 + C74571 * C153815 +
            (C74557 + C74556) * C153513 * C153805 +
            (C75888 + C75889) * C153513 * C153747) *
               C1938 -
           ((C74249 * C29033 + C76768 + C76768 + C153348 * C29037 +
             C74247 * C29032 + C76769 + C76769 + C74241 * C29036) *
                C153513 * C153747 +
            (C76777 + C76776) * C153513 * C153805 + C76770 * C153815 +
            C76771 * C153819) *
               C153477) *
              C312) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
            C74253 + C74253 + C153348 * C161) *
               C153513 * C153819 +
           (C74550 + C74551) * C153513 * C153815 + C74570 * C153805 +
           C74571 * C153747) *
              C2144 -
          (C76770 * C153747 + C76771 * C153805 +
           (C75542 + C75543) * C153513 * C153815 +
           (C74249 * C499 + C74774 + C74774 + C153348 * C523 + C74247 * C500 +
            C74775 + C74775 + C74241 * C524) *
               C153513 * C153819) *
              C2145 +
          ((C74247 * C501 + C74776 + C74776 + C74241 * C525 + C74249 * C502 +
            C74777 + C74777 + C153348 * C526) *
               C153513 * C153819 +
           (C76110 + C76111) * C153513 * C153815 +
           (C76112 + C76113) * C153513 * C153805 +
           (C76114 + C76115) * C153513 * C153747) *
              C2146 -
          ((C74249 * C32070 + C77296 + C77296 + C153348 * C32072 +
            C74247 * C30195 + C77297 + C77297 + C74241 * C30199) *
               C153513 * C153747 +
           (C74249 * C6214 + C77298 + C77298 + C153348 * C6226 +
            C74247 * C6215 + C77299 + C77299 + C74241 * C6227) *
               C153513 * C153805 +
           (C74249 * C6217 + C77300 + C77300 + C153348 * C6229 +
            C74247 * C6218 + C77301 + C77301 + C74241 * C6230) *
               C153513 * C153815 +
           (C74249 * C2151 + C77302 + C77302 + C153348 * C2161 +
            C74247 * C2152 + C77303 + C77303 + C74241 * C2162) *
               C153513 * C153819) *
              C2147) *
         C153397 * C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
              C74253 + C74253 + C153348 * C161) *
                 C153813 +
             (C78834 + C78835) * C153802 + C78850 * C153777) *
                C70419 +
            ((C74550 + C74551) * C153813 + C79864 * C153802 +
             C78764 * C153777) *
                C153560) *
               C1938 -
           ((C80646 * C153777 + C79865 * C153802 + C79866 * C153813) * C153560 +
            ((C78840 + C78841) * C153777 + (C78837 + C78836) * C153802 +
             (C78835 + C78834) * C153813) *
                C70419) *
               C153477) *
              C153397 * C1133 +
          ((((C78842 + C78843) * C153813 + (C78844 + C78845) * C153802 +
             (C78846 + C78847) * C153777) *
                C70419 +
            (C79867 * C153813 + C79868 * C153802 +
             (C78848 + C78849) * C153777) *
                C153560) *
               C153477 -
           ((C78797 * C153777 + C79869 * C153802 +
             (C74559 + C74558) * C153813) *
                C153560 +
            (C78851 * C153777 + (C78843 + C78842) * C153802 +
             (C74249 * C146 + C74266 + C74266 + C153348 * C162 + C74247 * C145 +
              C74267 + C74267 + C74241 * C161) *
                 C153813) *
                C70419) *
               C1938) *
              C153397 * C1134 +
          ((((C74247 * C146 + C74268 + C74268 + C74241 * C162 + C74249 * C147 +
              C74269 + C74269 + C153348 * C163) *
                 C153813 +
             (C79474 + C79475) * C153802 + (C79476 + C79477) * C153777) *
                C70419 +
            ((C75020 + C75021) * C153813 + (C79160 + C79161) * C153802 +
             (C79162 + C79163) * C153777) *
                C153560) *
               C1938 -
           (((C74249 * C8437 + C79462 + C79462 + C153348 * C8439 +
              C74247 * C6216 + C79463 + C79463 + C74241 * C6228) *
                 C153777 +
             (C79163 + C79162) * C153802 + (C79161 + C79160) * C153813) *
                C153560 +
            ((C74249 * C2149 + C79464 + C79464 + C153348 * C2159 +
              C74247 * C2150 + C79465 + C79465 + C74241 * C2160) *
                 C153777 +
             (C79477 + C79476) * C153802 + (C79475 + C79474) * C153813) *
                C70419) *
               C153477) *
              C153397 * C1135)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
              C74253 + C74253 + C153348 * C161) *
                 C153813 +
             (C78834 + C78835) * C153802 + C78850 * C153777) *
                C70419 +
            ((C74550 + C74551) * C153813 + C79864 * C153802 +
             C78764 * C153777) *
                C153560) *
               C1938 -
           ((C80646 * C153777 + C79865 * C153802 + C79866 * C153813) * C153560 +
            ((C78840 + C78841) * C153777 + (C78837 + C78836) * C153802 +
             (C78835 + C78834) * C153813) *
                C70419) *
               C153477) *
              C310 +
          (((C79864 * C153813 + C78764 * C153802 + C80647 * C153777) * C70419 +
            (C81637 * C153813 + C81638 * C153802 +
             (C80669 + C80670) * C153777) *
                C153560) *
               C153477 -
           ((C80656 * C153777 + C76763 * C153802 +
             (C74553 + C74552) * C153813) *
                C153560 +
            (C79865 * C153777 + C79866 * C153802 +
             (C74551 + C74550) * C153813) *
                C70419) *
               C1938) *
              C311 +
          (((C74566 * C153813 + C81637 * C153802 + C81638 * C153777) * C70419 +
            (C74567 * C153813 + (C75539 + C75538) * C153802 +
             (C76114 + C76115) * C153777) *
                C153560) *
               C1938 -
           (((C74249 * C32070 + C77296 + C77296 + C153348 * C32072 +
              C74247 * C30195 + C77297 + C77297 + C74241 * C30199) *
                 C153777 +
             (C76115 + C76114) * C153802 + C76762 * C153813) *
                C153560 +
            ((C80670 + C80669) * C153777 + C80656 * C153802 +
             C76763 * C153813) *
                C70419) *
               C153477) *
              C312) *
         C153378) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
             C74253 + C74253 + C153348 * C161) *
                C153813 +
            (C78834 + C78835) * C153802 + C78850 * C153777) *
               C70419 +
           ((C74550 + C74551) * C153813 + C79864 * C153802 + C78764 * C153777) *
               C153560) *
              C2144 -
          ((C80646 * C153777 + C79865 * C153802 + C79866 * C153813) * C153560 +
           (C82413 * C153777 + (C78837 + C78836) * C153802 +
            (C78835 + C78834) * C153813) *
               C70419) *
              C2145 +
          ((C78850 * C153813 + (C78841 + C78840) * C153802 +
            (C82426 + C82427) * C153777) *
               C70419 +
           (C78764 * C153813 + C80647 * C153802 + (C80667 + C80668) * C153777) *
               C153560) *
              C2146 -
          (((C74249 * C56416 + C82418 + C82418 + C153348 * C56418 +
             C74247 * C34012 + C82419 + C82419 + C74241 * C34016) *
                C153777 +
            (C80668 + C80667) * C153802 + C80646 * C153813) *
               C153560 +
           ((C74249 * C10378 + C82420 + C82420 + C153348 * C10384 +
             C74247 * C10379 + C82421 + C82421 + C74241 * C10385) *
                C153777 +
            (C82427 + C82426) * C153802 + C82413 * C153813) *
               C70419) *
              C2147) *
         C153397 * C153378) /
            (p * q * std::sqrt(p + q));
    d2ee[43] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
             C74253 + C74253 + C153348 * C161) *
                C153513 * C153819 +
            (C74550 + C74551) * C153513 * C153815 + C74570 * C153805 +
            C74571 * C153747) *
               C153797 -
           (C76770 * C153747 + C76771 * C153805 +
            (C75542 + C75543) * C153513 * C153815 +
            (C74249 * C499 + C74774 + C74774 + C153348 * C523 + C74247 * C500 +
             C74775 + C74775 + C74241 * C524) *
                C153513 * C153819) *
               C153798 +
           ((C74247 * C501 + C74776 + C74776 + C74241 * C525 + C74249 * C502 +
             C74777 + C74777 + C153348 * C526) *
                C153513 * C153819 +
            (C76110 + C76111) * C153513 * C153815 +
            (C76112 + C76113) * C153513 * C153805 +
            (C76114 + C76115) * C153513 * C153747) *
               C2454) *
              C153397 * C153716 +
          (((C74247 * C499 + C74784 + C74784 + C74241 * C523 + C74249 * C498 +
             C74785 + C74785 + C153348 * C522) *
                C153513 * C153819 +
            (C75544 + C75545) * C153513 * C153815 +
            (C75546 + C75547) * C153513 * C153805 +
            (C75548 + C75549) * C153513 * C153747) *
               C153798 -
           (C74572 * C153747 + C74573 * C153805 +
            (C74559 + C74558) * C153513 * C153815 +
            (C74249 * C146 + C74266 + C74266 + C153348 * C162 + C74247 * C145 +
             C74267 + C74267 + C74241 * C161) *
                C153513 * C153819) *
               C153797 -
           ((C74249 * C4833 + C74792 + C74792 + C153348 * C4839 +
             C74247 * C4834 + C74793 + C74793 + C74241 * C4840) *
                C153513 * C153747 +
            (C74249 * C3329 + C74794 + C74794 + C153348 * C3337 +
             C74247 * C3328 + C74795 + C74795 + C74241 * C3336) *
                C153513 * C153805 +
            (C74249 * C1367 + C74796 + C74796 + C153348 * C1377 +
             C74247 * C1368 + C74797 + C74797 + C74241 * C1378) *
                C153513 * C153815 +
            (C74249 * C503 + C74798 + C74798 + C153348 * C527 + C74247 * C502 +
             C74799 + C74799 + C74241 * C526) *
                C153513 * C153819) *
               C2454) *
              C153397 * C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C70421 * C144 + C70430 + C70430 + C153818 * C160 + C70423 * C145 +
             C70431 + C70431 + C153811 * C161 + C70425 * C146 + C70432 +
             C70432 + C153792 * C162 + C70427 * C147 + C70433 + C70433 +
             C153738 * C163) *
                C153513 * C70419 +
            (C70736 + C70737 + C70738 + C70739) * C153513 * C153560) *
               C153797 -
           ((C71696 + C71697 + C71698 + C71699) * C153513 * C153560 +
            (C70427 * C497 + C70950 + C70950 + C153738 * C521 + C70425 * C498 +
             C70951 + C70951 + C153792 * C522 + C70423 * C499 + C70952 +
             C70952 + C153811 * C523 + C70421 * C500 + C70953 + C70953 +
             C153818 * C524) *
                C153513 * C70419) *
               C153798 +
           ((C70421 * C501 + C70954 + C70954 + C153818 * C525 + C70423 * C502 +
             C70955 + C70955 + C153811 * C526 + C70425 * C503 + C70956 +
             C70956 + C153792 * C527 + C70427 * C504 + C70957 + C70957 +
             C153738 * C528) *
                C153513 * C70419 +
            (C72266 + C72267 + C72268 + C72269) * C153513 * C153560) *
               C2454) *
              C153397 * C153716 +
          (((C70421 * C499 + C70962 + C70962 + C153818 * C523 + C70423 * C498 +
             C70963 + C70963 + C153811 * C522 + C70425 * C497 + C70964 +
             C70964 + C153792 * C521 + C70427 * C496 + C70965 + C70965 +
             C153738 * C520) *
                C153513 * C70419 +
            (C71700 + C71701 + C71702 + C71703) * C153513 * C153560) *
               C153798 -
           ((C70747 + C70746 + C70745 + C70744) * C153513 * C153560 +
            (C70427 * C148 + C70442 + C70442 + C153738 * C164 + C70425 * C147 +
             C70443 + C70443 + C153792 * C163 + C70423 * C146 + C70444 +
             C70444 + C153811 * C162 + C70421 * C145 + C70445 + C70445 +
             C153818 * C161) *
                C153513 * C70419) *
               C153797 -
           ((C70427 * C1365 + C70970 + C70970 + C153738 * C1375 +
             C70425 * C1366 + C70971 + C70971 + C153792 * C1376 +
             C70423 * C1367 + C70972 + C70972 + C153811 * C1377 +
             C70421 * C1368 + C70973 + C70973 + C153818 * C1378) *
                C153513 * C153560 +
            (C70427 * C505 + C70974 + C70974 + C153738 * C529 + C70425 * C504 +
             C70975 + C70975 + C153792 * C528 + C70423 * C503 + C70976 +
             C70976 + C153811 * C527 + C70421 * C502 + C70977 + C70977 +
             C153818 * C526) *
                C153513 * C70419) *
               C2454) *
              C153397 * C153384)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
              C74253 + C74253 + C153348 * C161) *
                 C153813 +
             (C78834 + C78835) * C153802 + C78850 * C153777) *
                C70419 +
            ((C74550 + C74551) * C153813 + C79864 * C153802 +
             C78764 * C153777) *
                C153560) *
               C153797 -
           ((C80646 * C153777 + C79865 * C153802 + C79866 * C153813) * C153560 +
            (C82413 * C153777 + (C78837 + C78836) * C153802 +
             (C78835 + C78834) * C153813) *
                C70419) *
               C153798 +
           ((C78850 * C153813 + (C78841 + C78840) * C153802 +
             (C82426 + C82427) * C153777) *
                C70419 +
            (C78764 * C153813 + C80647 * C153802 +
             (C80667 + C80668) * C153777) *
                C153560) *
               C2454) *
              C153397 * C153716 +
          ((((C78842 + C78843) * C153813 + (C78844 + C78845) * C153802 +
             (C78846 + C78847) * C153777) *
                C70419 +
            (C79867 * C153813 + C79868 * C153802 +
             (C78848 + C78849) * C153777) *
                C153560) *
               C153798 -
           ((C78797 * C153777 + C79869 * C153802 +
             (C74559 + C74558) * C153813) *
                C153560 +
            (C78851 * C153777 + (C78843 + C78842) * C153802 +
             (C74249 * C146 + C74266 + C74266 + C153348 * C162 + C74247 * C145 +
              C74267 + C74267 + C74241 * C161) *
                 C153813) *
                C70419) *
               C153797 -
           (((C74249 * C9040 + C78798 + C78798 + C153348 * C9046 +
              C74247 * C9041 + C78799 + C78799 + C74241 * C9047) *
                 C153777 +
             (C78849 + C78848) * C153802 + C78797 * C153813) *
                C153560 +
            ((C74249 * C7562 + C78800 + C78800 + C153348 * C7570 +
              C74247 * C7561 + C78801 + C78801 + C74241 * C7569) *
                 C153777 +
             (C78847 + C78846) * C153802 + C78851 * C153813) *
                C70419) *
               C2454) *
              C153397 * C153384)) /
            (p * q * std::sqrt(p + q));
    d2ee[44] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C70421 * C144 + C70430 + C70430 + C153818 * C160 + C70423 * C145 +
             C70431 + C70431 + C153811 * C161 + C70425 * C146 + C70432 +
             C70432 + C153792 * C162 + C70427 * C147 + C70433 + C70433 +
             C153738 * C163) *
                C153513 * C70419 +
            (C70736 + C70737 + C70738 + C70739) * C153513 * C153560) *
               C1938 -
           ((C71696 + C71697 + C71698 + C71699) * C153513 * C153560 +
            (C70427 * C497 + C70950 + C70950 + C153738 * C521 + C70425 * C498 +
             C70951 + C70951 + C153792 * C522 + C70423 * C499 + C70952 +
             C70952 + C153811 * C523 + C70421 * C500 + C70953 + C70953 +
             C153818 * C524) *
                C153513 * C70419) *
               C153477) *
              C310 +
          (((C71699 + C71698 + C71697 + C71696) * C153513 * C70419 +
            (C72936 + C72937 + C72938 + C72939) * C153513 * C153560) *
               C153477 -
           ((C70740 + C70741 + C70742 + C70743) * C153513 * C153560 +
            (C70739 + C70738 + C70737 + C70736) * C153513 * C70419) *
               C1938) *
              C311 +
          (((C70743 + C70742 + C70741 + C70740) * C153513 * C70419 +
            (C72048 + C72049 + C72050 + C72051) * C153513 * C153560) *
               C1938 -
           ((C70427 * C4146 + C72924 + C72924 + C153738 * C4154 +
             C70425 * C4145 + C72925 + C72925 + C153792 * C4153 +
             C70423 * C4144 + C72926 + C72926 + C153811 * C4152 +
             C70421 * C4143 + C72927 + C72927 + C153818 * C4151) *
                C153513 * C153560 +
            (C72939 + C72938 + C72937 + C72936) * C153513 * C70419) *
               C153477) *
              C312) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C70421 * C144 + C70430 + C70430 + C153818 * C160 + C70423 * C145 +
             C70431 + C70431 + C153811 * C161 + C70425 * C146 + C70432 +
             C70432 + C153792 * C162 + C70427 * C147 + C70433 + C70433 +
             C153738 * C163) *
                C153513 * C70419 +
            (C70736 + C70737 + C70738 + C70739) * C153513 * C153560) *
               C1938 -
           ((C71696 + C71697 + C71698 + C71699) * C153513 * C153560 +
            (C70427 * C497 + C70950 + C70950 + C153738 * C521 + C70425 * C498 +
             C70951 + C70951 + C153792 * C522 + C70423 * C499 + C70952 +
             C70952 + C153811 * C523 + C70421 * C500 + C70953 + C70953 +
             C153818 * C524) *
                C153513 * C70419) *
               C153477) *
              C153397 * C1133 +
          (((C70421 * C499 + C70962 + C70962 + C153818 * C523 + C70423 * C498 +
             C70963 + C70963 + C153811 * C522 + C70425 * C497 + C70964 +
             C70964 + C153792 * C521 + C70427 * C496 + C70965 + C70965 +
             C153738 * C520) *
                C153513 * C70419 +
            (C71700 + C71701 + C71702 + C71703) * C153513 * C153560) *
               C153477 -
           ((C70747 + C70746 + C70745 + C70744) * C153513 * C153560 +
            (C70427 * C148 + C70442 + C70442 + C153738 * C164 + C70425 * C147 +
             C70443 + C70443 + C153792 * C163 + C70423 * C146 + C70444 +
             C70444 + C153811 * C162 + C70421 * C145 + C70445 + C70445 +
             C153818 * C161) *
                C153513 * C70419) *
               C1938) *
              C153397 * C1134 +
          (((C70421 * C146 + C70446 + C70446 + C153818 * C162 + C70423 * C147 +
             C70447 + C70447 + C153811 * C163 + C70425 * C148 + C70448 +
             C70448 + C153792 * C164 + C70427 * C149 + C70449 + C70449 +
             C153738 * C165) *
                C153513 * C70419 +
            (C71192 + C71193 + C71194 + C71195) * C153513 * C153560) *
               C1938 -
           ((C70427 * C986 + C71390 + C71390 + C153738 * C998 + C70425 * C985 +
             C71391 + C71391 + C153792 * C997 + C70423 * C984 + C71392 +
             C71392 + C153811 * C996 + C70421 * C983 + C71393 + C71393 +
             C153818 * C995) *
                C153513 * C153560 +
            (C70427 * C506 + C71394 + C71394 + C153738 * C530 + C70425 * C496 +
             C71395 + C71395 + C153792 * C520 + C70423 * C497 + C71396 +
             C71396 + C153811 * C521 + C70421 * C498 + C71397 + C71397 +
             C153818 * C522) *
                C153513 * C70419) *
               C153477) *
              C153397 * C1135)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
             C74253 + C74253 + C153348 * C161) *
                C153513 * C153819 +
            (C74550 + C74551) * C153513 * C153815 + C74570 * C153805 +
            C74571 * C153747) *
               C1938 -
           (C76770 * C153747 + C76771 * C153805 +
            (C75542 + C75543) * C153513 * C153815 +
            (C74249 * C499 + C74774 + C74774 + C153348 * C523 + C74247 * C500 +
             C74775 + C74775 + C74241 * C524) *
                C153513 * C153819) *
               C153477) *
              C153397 * C1133 +
          (((C74247 * C499 + C74784 + C74784 + C74241 * C523 + C74249 * C498 +
             C74785 + C74785 + C153348 * C522) *
                C153513 * C153819 +
            (C75544 + C75545) * C153513 * C153815 +
            (C75546 + C75547) * C153513 * C153805 +
            (C75548 + C75549) * C153513 * C153747) *
               C153477 -
           (C74572 * C153747 + C74573 * C153805 +
            (C74559 + C74558) * C153513 * C153815 +
            (C74249 * C146 + C74266 + C74266 + C153348 * C162 + C74247 * C145 +
             C74267 + C74267 + C74241 * C161) *
                C153513 * C153819) *
               C1938) *
              C153397 * C1134 +
          (((C74247 * C146 + C74268 + C74268 + C74241 * C162 + C74249 * C147 +
             C74269 + C74269 + C153348 * C163) *
                C153513 * C153819 +
            (C75020 + C75021) * C153513 * C153815 +
            (C75022 + C75023) * C153513 * C153805 +
            (C75024 + C75025) * C153513 * C153747) *
               C1938 -
           ((C74249 * C4146 + C75220 + C75220 + C153348 * C4154 +
             C74247 * C4145 + C75221 + C75221 + C74241 * C4153) *
                C153513 * C153747 +
            (C74249 * C1797 + C75222 + C75222 + C153348 * C1807 +
             C74247 * C1798 + C75223 + C75223 + C74241 * C1808) *
                C153513 * C153805 +
            (C74249 * C984 + C75224 + C75224 + C153348 * C996 + C74247 * C983 +
             C75225 + C75225 + C74241 * C995) *
                C153513 * C153815 +
            (C74249 * C497 + C75226 + C75226 + C153348 * C521 + C74247 * C498 +
             C75227 + C75227 + C74241 * C522) *
                C153513 * C153819) *
               C153477) *
              C153397 * C1135)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
             C74253 + C74253 + C153348 * C161) *
                C153513 * C153819 +
            (C74550 + C74551) * C153513 * C153815 + C74570 * C153805 +
            C74571 * C153747) *
               C1938 -
           (C76770 * C153747 + C76771 * C153805 +
            (C75542 + C75543) * C153513 * C153815 +
            (C74249 * C499 + C74774 + C74774 + C153348 * C523 + C74247 * C500 +
             C74775 + C74775 + C74241 * C524) *
                C153513 * C153819) *
               C153477) *
              C310 +
          (((C75543 + C75542) * C153513 * C153819 +
            (C75541 + C75540) * C153513 * C153815 +
            (C75539 + C75538) * C153513 * C153805 +
            (C76776 + C76777) * C153513 * C153747) *
               C153477 -
           (C75882 * C153747 + C75883 * C153805 +
            (C74553 + C74552) * C153513 * C153815 +
            (C74551 + C74550) * C153513 * C153819) *
               C1938) *
              C311 +
          ((C74570 * C153819 + C74571 * C153815 +
            (C74557 + C74556) * C153513 * C153805 +
            (C75888 + C75889) * C153513 * C153747) *
               C1938 -
           ((C74249 * C29033 + C76768 + C76768 + C153348 * C29037 +
             C74247 * C29032 + C76769 + C76769 + C74241 * C29036) *
                C153513 * C153747 +
            (C76777 + C76776) * C153513 * C153805 + C76770 * C153815 +
            C76771 * C153819) *
               C153477) *
              C312) *
         C153378) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
              C74253 + C74253 + C153348 * C161) *
                 C153813 +
             (C78834 + C78835) * C153802 + C78850 * C153777) *
                C70419 +
            ((C74550 + C74551) * C153813 + C79864 * C153802 +
             C78764 * C153777) *
                C153560) *
               C1938 -
           ((C80646 * C153777 + C79865 * C153802 + C79866 * C153813) * C153560 +
            ((C78840 + C78841) * C153777 + (C78837 + C78836) * C153802 +
             (C78835 + C78834) * C153813) *
                C70419) *
               C153477) *
              C153397 * C1133 +
          ((((C78842 + C78843) * C153813 + (C78844 + C78845) * C153802 +
             (C78846 + C78847) * C153777) *
                C70419 +
            (C79867 * C153813 + C79868 * C153802 +
             (C78848 + C78849) * C153777) *
                C153560) *
               C153477 -
           ((C78797 * C153777 + C79869 * C153802 +
             (C74559 + C74558) * C153813) *
                C153560 +
            (C78851 * C153777 + (C78843 + C78842) * C153802 +
             (C74249 * C146 + C74266 + C74266 + C153348 * C162 + C74247 * C145 +
              C74267 + C74267 + C74241 * C161) *
                 C153813) *
                C70419) *
               C1938) *
              C153397 * C1134 +
          ((((C74247 * C146 + C74268 + C74268 + C74241 * C162 + C74249 * C147 +
              C74269 + C74269 + C153348 * C163) *
                 C153813 +
             (C79474 + C79475) * C153802 + (C79476 + C79477) * C153777) *
                C70419 +
            ((C75020 + C75021) * C153813 + (C79160 + C79161) * C153802 +
             (C79162 + C79163) * C153777) *
                C153560) *
               C1938 -
           (((C74249 * C8437 + C79462 + C79462 + C153348 * C8439 +
              C74247 * C6216 + C79463 + C79463 + C74241 * C6228) *
                 C153777 +
             (C79163 + C79162) * C153802 + (C79161 + C79160) * C153813) *
                C153560 +
            ((C74249 * C2149 + C79464 + C79464 + C153348 * C2159 +
              C74247 * C2150 + C79465 + C79465 + C74241 * C2160) *
                 C153777 +
             (C79477 + C79476) * C153802 + (C79475 + C79474) * C153813) *
                C70419) *
               C153477) *
              C153397 * C1135)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
              C74253 + C74253 + C153348 * C161) *
                 C153813 +
             (C78834 + C78835) * C153802 + C78850 * C153777) *
                C70419 +
            ((C74550 + C74551) * C153813 + C79864 * C153802 +
             C78764 * C153777) *
                C153560) *
               C1938 -
           ((C80646 * C153777 + C79865 * C153802 + C79866 * C153813) * C153560 +
            ((C78840 + C78841) * C153777 + (C78837 + C78836) * C153802 +
             (C78835 + C78834) * C153813) *
                C70419) *
               C153477) *
              C310 +
          (((C79864 * C153813 + C78764 * C153802 + C80647 * C153777) * C70419 +
            (C81637 * C153813 + C81638 * C153802 +
             (C80669 + C80670) * C153777) *
                C153560) *
               C153477 -
           ((C80656 * C153777 + C76763 * C153802 +
             (C74553 + C74552) * C153813) *
                C153560 +
            (C79865 * C153777 + C79866 * C153802 +
             (C74551 + C74550) * C153813) *
                C70419) *
               C1938) *
              C311 +
          (((C74566 * C153813 + C81637 * C153802 + C81638 * C153777) * C70419 +
            (C74567 * C153813 + (C75539 + C75538) * C153802 +
             (C76114 + C76115) * C153777) *
                C153560) *
               C1938 -
           (((C74249 * C32070 + C77296 + C77296 + C153348 * C32072 +
              C74247 * C30195 + C77297 + C77297 + C74241 * C30199) *
                 C153777 +
             (C76115 + C76114) * C153802 + C76762 * C153813) *
                C153560 +
            ((C80670 + C80669) * C153777 + C80656 * C153802 +
             C76763 * C153813) *
                C70419) *
               C153477) *
              C312) *
         C153378) /
            (p * q * std::sqrt(p + q));
    d2ee[45] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 (((((C152033 * C144 + C83552 + C83552 + C153343 * C160 +
                      C152026 * C145 + C83553 + C83553 + C153351 * C161 +
                      C83549 * C146 + C83554 + C83554 + C83541 * C162) *
                         C153740 +
                     (C88548 + C88549 + C88550) * C153600) *
                        C70419 +
                    ((C83890 + C83891 + C83892) * C153740 +
                     (C84995 + C84994 + C84993) * C153600) *
                        C153560) *
                       C153413 * C153724 -
                   ((C86374 * C153600 + (C83895 + C83894 + C83893) * C153740) *
                        C153560 +
                    ((C84993 + C84994 + C84995) * C153600 +
                     (C83892 + C83891 + C83890) * C153740) *
                        C70419) *
                       C153413 * C153449) *
                      C153793 +
                  ((((C83899 + C83900 + C83901) * C153740 +
                     (C84996 + C84997 + C84998) * C153600) *
                        C70419 +
                    ((C83902 + C83903 + C83904) * C153740 +
                     (C84999 + C85000 + C85001) * C153600) *
                        C153560) *
                       C153413 * C153449 -
                   (((C84998 + C84997 + C84996) * C153600 +
                     (C83901 + C83900 + C83899) * C153740) *
                        C153560 +
                    ((C88556 + C88555 + C88554) * C153600 +
                     (C83549 * C147 + C83567 + C83567 + C83541 * C163 +
                      C152026 * C146 + C83568 + C83568 + C153351 * C162 +
                      C152033 * C145 + C83569 + C83569 + C153343 * C161) *
                         C153740) *
                        C70419) *
                       C153413 * C153724) *
                      C153794 +
                  ((((C152033 * C146 + C83570 + C83570 + C153343 * C162 +
                      C152026 * C147 + C83571 + C83571 + C153351 * C163 +
                      C83549 * C148 + C83572 + C83572 + C83541 * C164) *
                         C153740 +
                     (C152033 * C498 + C84645 + C84645 + C153343 * C522 +
                      C152026 * C497 + C84644 + C84644 + C153351 * C521 +
                      C83549 * C496 + C84643 + C84643 + C83541 * C520) *
                         C153600) *
                        C70419 +
                    ((C84413 + C84414 + C84415) * C153740 +
                     (C88865 + C88866 + C88867) * C153600) *
                        C153560) *
                       C153413 * C153724 -
                   (((C83549 * C1796 + C84637 + C84637 + C83541 * C1806 +
                      C152026 * C1797 + C84638 + C84638 + C153351 * C1807 +
                      C152033 * C1798 + C84639 + C84639 + C153343 * C1808) *
                         C153600 +
                     (C84418 + C84417 + C84416) * C153740) *
                        C153560 +
                    ((C88867 + C88866 + C88865) * C153600 +
                     (C84415 + C84414 + C84413) * C153740) *
                        C70419) *
                       C153413 * C153449) *
                      C678)) /
                (p * q * std::sqrt(p + q));
    d2ee[46] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 ((((((C152033 * C144 + C83552 + C83552 + C153343 * C160 +
                       C152026 * C145 + C83553 + C83553 + C153351 * C161 +
                       C83549 * C146 + C83554 + C83554 + C83541 * C162) *
                          C153740 +
                      (C88548 + C88549 + C88550) * C153600) *
                         C70419 +
                     ((C83890 + C83891 + C83892) * C153740 + C89569 * C153600) *
                         C153560) *
                        C153725 -
                    (((C85634 + C85633 + C85632) * C153600 + C89570 * C153740) *
                         C153560 +
                     ((C88551 + C88552 + C88553) * C153600 +
                      (C88550 + C88549 + C88548) * C153740) *
                         C70419) *
                        C153477) *
                       C153724 +
                   (((C89569 * C153740 + (C85632 + C85633 + C85634) * C153600) *
                         C70419 +
                     ((C84992 + C84991 + C84990) * C153740 +
                      (C85635 + C85636 + C85637) * C153600) *
                         C153560) *
                        C153477 -
                    ((C86374 * C153600 + (C83895 + C83894 + C83893) * C153740) *
                         C153560 +
                     (C89570 * C153600 + (C83892 + C83891 + C83890) * C153740) *
                         C70419) *
                        C153725) *
                       C153449) *
                      C313 +
                  (((((C88554 + C88555 + C88556) * C153740 +
                      (C88557 + C88558 + C88559) * C153600) *
                         C70419 +
                     (C89571 * C153740 + (C88560 + C88561 + C88562) * C153600) *
                         C153560) *
                        C153477 -
                    ((C89572 * C153600 + (C83901 + C83900 + C83899) * C153740) *
                         C153560 +
                     ((C88556 + C88555 + C88554) * C153600 +
                      (C83549 * C147 + C83567 + C83567 + C83541 * C163 +
                       C152026 * C146 + C83568 + C83568 + C153351 * C162 +
                       C152033 * C145 + C83569 + C83569 + C153343 * C161) *
                          C153740) *
                         C70419) *
                        C153725) *
                       C153724 +
                   ((((C83899 + C83900 + C83901) * C153740 + C89571 * C153600) *
                         C70419 +
                     ((C83902 + C83903 + C83904) * C153740 +
                      (C84999 + C85000 + C85001) * C153600) *
                         C153560) *
                        C153725 -
                    (((C83549 * C3330 + C84159 + C84159 + C83541 * C3338 +
                       C152026 * C3329 + C84160 + C84160 + C153351 * C3337 +
                       C152033 * C3328 + C84161 + C84161 + C153343 * C3336) *
                          C153600 +
                      (C85001 + C85000 + C84999) * C153740) *
                         C153560 +
                     ((C88562 + C88561 + C88560) * C153600 + C89572 * C153740) *
                         C70419) *
                        C153477) *
                       C153449) *
                      C153384)) /
                (p * q * std::sqrt(p + q));
    d2ee[47] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C152033 * C144 + C83552 + C83552 + C153343 * C160 +
              C152026 * C145 + C83553 + C83553 + C153351 * C161 +
              C83549 * C146 + C83554 + C83554 + C83541 * C162) *
                 C153740 +
             (C152033 * C500 + C84140 + C84140 + C153343 * C524 +
              C152026 * C499 + C84139 + C84139 + C153351 * C523 +
              C83549 * C498 + C84138 + C84138 + C83541 * C522) *
                 C153600) *
                C70419 +
            ((C83890 + C83891 + C83892) * C153740 +
             (C84995 + C84994 + C84993) * C153600) *
                C153560) *
               C153413 * C310 -
           ((C86374 * C153600 + (C83895 + C83894 + C83893) * C153740) *
                C153560 +
            ((C84993 + C84994 + C84995) * C153600 +
             (C83892 + C83891 + C83890) * C153740) *
                C70419) *
               C153413 * C311 +
           ((C83910 * C153740 + (C84992 + C84991 + C84990) * C153600) * C70419 +
            ((C83898 + C83897 + C83896) * C153740 +
             (C86382 + C86383 + C86384) * C153600) *
                C153560) *
               C153413 * C312) *
              C313 +
          ((((C83899 + C83900 + C83901) * C153740 +
             (C84996 + C84997 + C84998) * C153600) *
                C70419 +
            ((C83902 + C83903 + C83904) * C153740 +
             (C84999 + C85000 + C85001) * C153600) *
                C153560) *
               C153413 * C311 -
           (((C84998 + C84997 + C84996) * C153600 +
             (C83901 + C83900 + C83899) * C153740) *
                C153560 +
            ((C83549 * C497 + C84152 + C84152 + C83541 * C521 + C152026 * C498 +
              C84151 + C84151 + C153351 * C522 + C152033 * C499 + C84150 +
              C84150 + C153343 * C523) *
                 C153600 +
             (C83549 * C147 + C83567 + C83567 + C83541 * C163 + C152026 * C146 +
              C83568 + C83568 + C153351 * C162 + C152033 * C145 + C83569 +
              C83569 + C153343 * C161) *
                 C153740) *
                C70419) *
               C153413 * C310 -
           (((C83549 * C4146 + C84963 + C84963 + C83541 * C4154 +
              C152026 * C4145 + C84964 + C84964 + C153351 * C4153 +
              C152033 * C4144 + C84965 + C84965 + C153343 * C4152) *
                 C153600 +
             (C83907 + C83906 + C83905) * C153740) *
                C153560 +
            ((C85001 + C85000 + C84999) * C153600 + C83911 * C153740) *
                C70419) *
               C153413 * C312) *
              C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C152033 * C144 + C83552 + C83552 + C153343 * C160 +
             C152026 * C145 + C83553 + C83553 + C153351 * C161 + C83549 * C146 +
             C83554 + C83554 + C83541 * C162) *
                C153740 +
            (C152033 * C500 + C84140 + C84140 + C153343 * C524 +
             C152026 * C499 + C84139 + C84139 + C153351 * C523 + C83549 * C498 +
             C84138 + C84138 + C83541 * C522) *
                C153600) *
               C70419 +
           ((C83890 + C83891 + C83892) * C153740 +
            (C84995 + C84994 + C84993) * C153600) *
               C153560) *
              C153413 * C153397 * C130 -
          (((C84998 + C84997 + C84996) * C153600 +
            (C83901 + C83900 + C83899) * C153740) *
               C153560 +
           ((C83549 * C497 + C84152 + C84152 + C83541 * C521 + C152026 * C498 +
             C84151 + C84151 + C153351 * C522 + C152033 * C499 + C84150 +
             C84150 + C153343 * C523) *
                C153600 +
            (C83549 * C147 + C83567 + C83567 + C83541 * C163 + C152026 * C146 +
             C83568 + C83568 + C153351 * C162 + C152033 * C145 + C83569 +
             C83569 + C153343 * C161) *
                C153740) *
               C70419) *
              C153413 * C153397 * C131 +
          (((C152033 * C146 + C83570 + C83570 + C153343 * C162 +
             C152026 * C147 + C83571 + C83571 + C153351 * C163 + C83549 * C148 +
             C83572 + C83572 + C83541 * C164) *
                C153740 +
            (C152033 * C498 + C84645 + C84645 + C153343 * C522 +
             C152026 * C497 + C84644 + C84644 + C153351 * C521 + C83549 * C496 +
             C84643 + C84643 + C83541 * C520) *
                C153600) *
               C70419 +
           ((C84413 + C84414 + C84415) * C153740 +
            (C152033 * C983 + C84642 + C84642 + C153343 * C995 +
             C152026 * C984 + C84641 + C84641 + C153351 * C996 + C83549 * C985 +
             C84640 + C84640 + C83541 * C997) *
                C153600) *
               C153560) *
              C153413 * C153397 * C132 -
          (((C83549 * C986 + C87896 + C87896 + C83541 * C998 + C152026 * C985 +
             C87897 + C87897 + C153351 * C997 + C152033 * C984 + C87898 +
             C87898 + C153343 * C996) *
                C153600 +
            (C83549 * C325 + C83582 + C83582 + C83541 * C349 + C152026 * C315 +
             C83583 + C83583 + C153351 * C339 + C152033 * C316 + C83584 +
             C83584 + C153343 * C340) *
                C153740) *
               C153560 +
           ((C83549 * C506 + C87899 + C87899 + C83541 * C530 + C152026 * C496 +
             C87900 + C87900 + C153351 * C520 + C152033 * C497 + C87901 +
             C87901 + C153343 * C521) *
                C153600 +
            (C83549 * C149 + C83585 + C83585 + C83541 * C165 + C152026 * C148 +
             C83586 + C83586 + C153351 * C164 + C152033 * C147 + C83587 +
             C83587 + C153343 * C163) *
                C153740) *
               C70419) *
              C153413 * C153397 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C152033 * C144 + C83552 + C83552 + C153343 * C160 +
              C152026 * C145 + C83553 + C83553 + C153351 * C161 +
              C83549 * C146 + C83554 + C83554 + C83541 * C162) *
                 C153740 +
             (C88548 + C88549 + C88550) * C153600) *
                C70419 +
            ((C83890 + C83891 + C83892) * C153740 +
             (C84995 + C84994 + C84993) * C153600) *
                C153560) *
               C493 -
           (((C85634 + C85633 + C85632) * C153600 +
             (C84993 + C84994 + C84995) * C153740) *
                C153560 +
            ((C88551 + C88552 + C88553) * C153600 +
             (C88550 + C88549 + C88548) * C153740) *
                C70419) *
               C494 +
           (((C88553 + C88552 + C88551) * C153740 +
             (C152033 * C2152 + C86975 + C86975 + C153343 * C2162 +
              C152026 * C2151 + C86974 + C86974 + C153351 * C2161 +
              C83549 * C2150 + C86973 + C86973 + C83541 * C2160) *
                 C153600) *
                C70419 +
            ((C85632 + C85633 + C85634) * C153740 +
             (C152033 * C6218 + C86972 + C86972 + C153343 * C6230 +
              C152026 * C6217 + C86971 + C86971 + C153351 * C6229 +
              C83549 * C6216 + C86970 + C86970 + C83541 * C6228) *
                 C153600) *
                C153560) *
               C495) *
              C153397 * C313 +
          ((((C88554 + C88555 + C88556) * C153740 +
             (C88557 + C88558 + C88559) * C153600) *
                C70419 +
            ((C84996 + C84997 + C84998) * C153740 +
             (C88560 + C88561 + C88562) * C153600) *
                C153560) *
               C494 -
           (((C84998 + C84997 + C84996) * C153600 +
             (C83901 + C83900 + C83899) * C153740) *
                C153560 +
            ((C88556 + C88555 + C88554) * C153600 +
             (C83549 * C147 + C83567 + C83567 + C83541 * C163 + C152026 * C146 +
              C83568 + C83568 + C153351 * C162 + C152033 * C145 + C83569 +
              C83569 + C153343 * C161) *
                 C153740) *
                C70419) *
               C493 -
           (((C83549 * C8437 + C88512 + C88512 + C83541 * C8439 +
              C152026 * C6216 + C88513 + C88513 + C153351 * C6228 +
              C152033 * C6217 + C88514 + C88514 + C153343 * C6229) *
                 C153600 +
             (C88562 + C88561 + C88560) * C153740) *
                C153560 +
            ((C83549 * C2149 + C88515 + C88515 + C83541 * C2159 +
              C152026 * C2150 + C88516 + C88516 + C153351 * C2160 +
              C152033 * C2151 + C88517 + C88517 + C153343 * C2161) *
                 C153600 +
             (C88559 + C88558 + C88557) * C153740) *
                C70419) *
               C495) *
              C153397 * C153384)) /
            (p * q * std::sqrt(p + q));
    d2ee[48] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 (((((C152033 * C144 + C83552 + C83552 + C153343 * C160 +
                      C152026 * C145 + C83553 + C83553 + C153351 * C161 +
                      C83549 * C146 + C83554 + C83554 + C83541 * C162) *
                         C153740 +
                     (C88548 + C88549 + C88550) * C153600) *
                        C70419 +
                    ((C83890 + C83891 + C83892) * C153740 +
                     (C84995 + C84994 + C84993) * C153600) *
                        C153560) *
                       C153725 -
                   (((C85634 + C85633 + C85632) * C153600 +
                     (C84993 + C84994 + C84995) * C153740) *
                        C153560 +
                    ((C88551 + C88552 + C88553) * C153600 +
                     (C88550 + C88549 + C88548) * C153740) *
                        C70419) *
                       C153477) *
                      C153397 * C153793 +
                  ((((C88554 + C88555 + C88556) * C153740 +
                     (C88557 + C88558 + C88559) * C153600) *
                        C70419 +
                    ((C84996 + C84997 + C84998) * C153740 +
                     (C88560 + C88561 + C88562) * C153600) *
                        C153560) *
                       C153477 -
                   (((C84998 + C84997 + C84996) * C153600 +
                     (C83901 + C83900 + C83899) * C153740) *
                        C153560 +
                    ((C88556 + C88555 + C88554) * C153600 +
                     (C83549 * C147 + C83567 + C83567 + C83541 * C163 +
                      C152026 * C146 + C83568 + C83568 + C153351 * C162 +
                      C152033 * C145 + C83569 + C83569 + C153343 * C161) *
                         C153740) *
                        C70419) *
                       C153725) *
                      C153397 * C153794 +
                  ((((C152033 * C146 + C83570 + C83570 + C153343 * C162 +
                      C152026 * C147 + C83571 + C83571 + C153351 * C163 +
                      C83549 * C148 + C83572 + C83572 + C83541 * C164) *
                         C153740 +
                     (C89176 + C89177 + C89178) * C153600) *
                        C70419 +
                    ((C84413 + C84414 + C84415) * C153740 +
                     (C88865 + C88866 + C88867) * C153600) *
                        C153560) *
                       C153725 -
                   (((C83549 * C1365 + C89164 + C89164 + C83541 * C1375 +
                      C152026 * C1366 + C89165 + C89165 + C153351 * C1376 +
                      C152033 * C1367 + C89166 + C89166 + C153343 * C1377) *
                         C153600 +
                     (C88867 + C88866 + C88865) * C153740) *
                        C153560 +
                    ((C83549 * C505 + C89167 + C89167 + C83541 * C529 +
                      C152026 * C504 + C89168 + C89168 + C153351 * C528 +
                      C152033 * C503 + C89169 + C89169 + C153343 * C527) *
                         C153600 +
                     (C89178 + C89177 + C89176) * C153740) *
                        C70419) *
                       C153477) *
                      C153397 * C678)) /
                (p * q * std::sqrt(p + q));
    d2ee[49] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C152033 * C144 + C83552 + C83552 + C153343 * C160 +
             C152026 * C145 + C83553 + C83553 + C153351 * C161 + C83549 * C146 +
             C83554 + C83554 + C83541 * C162) *
                C153740 +
            (C152033 * C500 + C84140 + C84140 + C153343 * C524 +
             C152026 * C499 + C84139 + C84139 + C153351 * C523 + C83549 * C498 +
             C84138 + C84138 + C83541 * C522) *
                C153600) *
               C70419 +
           ((C83890 + C83891 + C83892) * C153740 +
            (C84995 + C84994 + C84993) * C153600) *
               C153560) *
              C153413 * C153397 * C130 -
          (((C84998 + C84997 + C84996) * C153600 +
            (C83901 + C83900 + C83899) * C153740) *
               C153560 +
           ((C83549 * C497 + C84152 + C84152 + C83541 * C521 + C152026 * C498 +
             C84151 + C84151 + C153351 * C522 + C152033 * C499 + C84150 +
             C84150 + C153343 * C523) *
                C153600 +
            (C83549 * C147 + C83567 + C83567 + C83541 * C163 + C152026 * C146 +
             C83568 + C83568 + C153351 * C162 + C152033 * C145 + C83569 +
             C83569 + C153343 * C161) *
                C153740) *
               C70419) *
              C153413 * C153397 * C131 +
          (((C152033 * C146 + C83570 + C83570 + C153343 * C162 +
             C152026 * C147 + C83571 + C83571 + C153351 * C163 + C83549 * C148 +
             C83572 + C83572 + C83541 * C164) *
                C153740 +
            (C152033 * C498 + C84645 + C84645 + C153343 * C522 +
             C152026 * C497 + C84644 + C84644 + C153351 * C521 + C83549 * C496 +
             C84643 + C84643 + C83541 * C520) *
                C153600) *
               C70419 +
           ((C84413 + C84414 + C84415) * C153740 +
            (C152033 * C983 + C84642 + C84642 + C153343 * C995 +
             C152026 * C984 + C84641 + C84641 + C153351 * C996 + C83549 * C985 +
             C84640 + C84640 + C83541 * C997) *
                C153600) *
               C153560) *
              C153413 * C153397 * C132 -
          (((C83549 * C986 + C87896 + C87896 + C83541 * C998 + C152026 * C985 +
             C87897 + C87897 + C153351 * C997 + C152033 * C984 + C87898 +
             C87898 + C153343 * C996) *
                C153600 +
            (C83549 * C325 + C83582 + C83582 + C83541 * C349 + C152026 * C315 +
             C83583 + C83583 + C153351 * C339 + C152033 * C316 + C83584 +
             C83584 + C153343 * C340) *
                C153740) *
               C153560 +
           ((C83549 * C506 + C87899 + C87899 + C83541 * C530 + C152026 * C496 +
             C87900 + C87900 + C153351 * C520 + C152033 * C497 + C87901 +
             C87901 + C153343 * C521) *
                C153600 +
            (C83549 * C149 + C83585 + C83585 + C83541 * C165 + C152026 * C148 +
             C83586 + C83586 + C153351 * C164 + C152033 * C147 + C83587 +
             C83587 + C153343 * C163) *
                C153740) *
               C70419) *
              C153413 * C153397 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C152033 * C144 + C83552 + C83552 + C153343 * C160 +
              C152026 * C145 + C83553 + C83553 + C153351 * C161 +
              C83549 * C146 + C83554 + C83554 + C83541 * C162) *
                 C153740 +
             (C152033 * C500 + C84140 + C84140 + C153343 * C524 +
              C152026 * C499 + C84139 + C84139 + C153351 * C523 +
              C83549 * C498 + C84138 + C84138 + C83541 * C522) *
                 C153600) *
                C70419 +
            ((C83890 + C83891 + C83892) * C153740 +
             (C84995 + C84994 + C84993) * C153600) *
                C153560) *
               C153413 * C310 -
           ((C86374 * C153600 + (C83895 + C83894 + C83893) * C153740) *
                C153560 +
            ((C84993 + C84994 + C84995) * C153600 +
             (C83892 + C83891 + C83890) * C153740) *
                C70419) *
               C153413 * C311 +
           ((C83910 * C153740 + (C84992 + C84991 + C84990) * C153600) * C70419 +
            ((C83898 + C83897 + C83896) * C153740 +
             (C86382 + C86383 + C86384) * C153600) *
                C153560) *
               C153413 * C312) *
              C313 +
          ((((C83899 + C83900 + C83901) * C153740 +
             (C84996 + C84997 + C84998) * C153600) *
                C70419 +
            ((C83902 + C83903 + C83904) * C153740 +
             (C84999 + C85000 + C85001) * C153600) *
                C153560) *
               C153413 * C311 -
           (((C84998 + C84997 + C84996) * C153600 +
             (C83901 + C83900 + C83899) * C153740) *
                C153560 +
            ((C83549 * C497 + C84152 + C84152 + C83541 * C521 + C152026 * C498 +
              C84151 + C84151 + C153351 * C522 + C152033 * C499 + C84150 +
              C84150 + C153343 * C523) *
                 C153600 +
             (C83549 * C147 + C83567 + C83567 + C83541 * C163 + C152026 * C146 +
              C83568 + C83568 + C153351 * C162 + C152033 * C145 + C83569 +
              C83569 + C153343 * C161) *
                 C153740) *
                C70419) *
               C153413 * C310 -
           (((C83549 * C4146 + C84963 + C84963 + C83541 * C4154 +
              C152026 * C4145 + C84964 + C84964 + C153351 * C4153 +
              C152033 * C4144 + C84965 + C84965 + C153343 * C4152) *
                 C153600 +
             (C83907 + C83906 + C83905) * C153740) *
                C153560 +
            ((C85001 + C85000 + C84999) * C153600 + C83911 * C153740) *
                C70419) *
               C153413 * C312) *
              C153384)) /
            (p * q * std::sqrt(p + q));
    d2ee[50] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C152033 * C144 + C83552 + C83552 + C153343 * C160 +
              C152026 * C145 + C83553 + C83553 + C153351 * C161 +
              C83549 * C146 + C83554 + C83554 + C83541 * C162) *
                 C153740 +
             (C88548 + C88549 + C88550) * C153600) *
                C70419 +
            ((C83890 + C83891 + C83892) * C153740 + C89569 * C153600) *
                C153560) *
               C153413 * C153795 -
           ((C86374 * C153600 + (C83895 + C83894 + C83893) * C153740) *
                C153560 +
            (C89570 * C153600 + (C83892 + C83891 + C83890) * C153740) *
                C70419) *
               C153413 * C153796 +
           ((C83910 * C153740 + (C84992 + C84991 + C84990) * C153600) * C70419 +
            ((C83898 + C83897 + C83896) * C153740 +
             (C86382 + C86383 + C86384) * C153600) *
                C153560) *
               C153413 * C1509) *
              C153716 +
          ((((C83899 + C83900 + C83901) * C153740 + C89571 * C153600) * C70419 +
            ((C83902 + C83903 + C83904) * C153740 +
             (C84999 + C85000 + C85001) * C153600) *
                C153560) *
               C153413 * C153796 -
           ((C89572 * C153600 + (C83901 + C83900 + C83899) * C153740) *
                C153560 +
            ((C88556 + C88555 + C88554) * C153600 +
             (C83549 * C147 + C83567 + C83567 + C83541 * C163 + C152026 * C146 +
              C83568 + C83568 + C153351 * C162 + C152033 * C145 + C83569 +
              C83569 + C153343 * C161) *
                 C153740) *
                C70419) *
               C153413 * C153795 -
           (((C83549 * C4146 + C84963 + C84963 + C83541 * C4154 +
              C152026 * C4145 + C84964 + C84964 + C153351 * C4153 +
              C152033 * C4144 + C84965 + C84965 + C153343 * C4152) *
                 C153600 +
             (C83907 + C83906 + C83905) * C153740) *
                C153560 +
            ((C85001 + C85000 + C84999) * C153600 + C83911 * C153740) *
                C70419) *
               C153413 * C1509) *
              C153384)) /
        (p * q * std::sqrt(p + q));
    d2ee[51] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 (((((C152033 * C144 + C83552 + C83552 + C153343 * C160 +
                      C152026 * C145 + C83553 + C83553 + C153351 * C161 +
                      C83549 * C146 + C83554 + C83554 + C83541 * C162) *
                         C153740 +
                     (C88548 + C88549 + C88550) * C153600) *
                        C70419 +
                    ((C83890 + C83891 + C83892) * C153740 + C89569 * C153600) *
                        C153560) *
                       C153725 -
                   ((C90355 * C153600 + C89570 * C153740) * C153560 +
                    ((C88551 + C88552 + C88553) * C153600 +
                     (C88550 + C88549 + C88548) * C153740) *
                        C70419) *
                       C153477) *
                      C153795 +
                  (((C89569 * C153740 + C90356 * C153600) * C70419 +
                    (C91333 * C153740 + (C85635 + C85636 + C85637) * C153600) *
                        C153560) *
                       C153477 -
                   ((C86374 * C153600 + (C83895 + C83894 + C83893) * C153740) *
                        C153560 +
                    (C89570 * C153600 + (C83892 + C83891 + C83890) * C153740) *
                        C70419) *
                       C153725) *
                      C153796 +
                  (((C83910 * C153740 + C91333 * C153600) * C70419 +
                    ((C83898 + C83897 + C83896) * C153740 +
                     (C86382 + C86383 + C86384) * C153600) *
                        C153560) *
                       C153725 -
                   (((C83549 * C4833 + C85617 + C85617 + C83541 * C4839 +
                      C152026 * C4834 + C85618 + C85618 + C153351 * C4840 +
                      C152033 * C4835 + C85619 + C85619 + C153343 * C4841) *
                         C153600 +
                     (C86384 + C86383 + C86382) * C153740) *
                        C153560 +
                    ((C85637 + C85636 + C85635) * C153600 + C86374 * C153740) *
                        C70419) *
                       C153477) *
                      C1509) *
                 C153378) /
                (p * q * std::sqrt(p + q));
    d2ee[52] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C152033 * C144 + C83552 + C83552 + C153343 * C160 +
             C152026 * C145 + C83553 + C83553 + C153351 * C161 + C83549 * C146 +
             C83554 + C83554 + C83541 * C162) *
                C153740 +
            (C88548 + C88549 + C88550) * C153600) *
               C70419 +
           ((C83890 + C83891 + C83892) * C153740 + C89569 * C153600) *
               C153560) *
              C153413 * C1218 -
          ((C86374 * C153600 + (C83895 + C83894 + C83893) * C153740) * C153560 +
           (C89570 * C153600 + (C83892 + C83891 + C83890) * C153740) * C70419) *
              C153413 * C1219 +
          ((C83910 * C153740 + (C84992 + C84991 + C84990) * C153600) * C70419 +
           ((C83898 + C83897 + C83896) * C153740 +
            (C86382 + C86383 + C86384) * C153600) *
               C153560) *
              C153413 * C1220 -
          (((C83549 * C5601 + C86371 + C86371 + C83541 * C5607 +
             C152026 * C5602 + C86372 + C86372 + C153351 * C5608 +
             C152033 * C5603 + C86373 + C86373 + C153343 * C5609) *
                C153600 +
            (C85386 + C85385 + C85384) * C153740) *
               C153560 +
           ((C86384 + C86383 + C86382) * C153600 + C85376 * C153740) * C70419) *
              C153413 * C1221) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C152033 * C144 + C83552 + C83552 + C153343 * C160 +
              C152026 * C145 + C83553 + C83553 + C153351 * C161 +
              C83549 * C146 + C83554 + C83554 + C83541 * C162) *
                 C153740 +
             (C88548 + C88549 + C88550) * C153600) *
                C70419 +
            ((C83890 + C83891 + C83892) * C153740 + C89569 * C153600) *
                C153560) *
               C153413 * C1131 -
           ((C86374 * C153600 + (C83895 + C83894 + C83893) * C153740) *
                C153560 +
            (C89570 * C153600 + (C83892 + C83891 + C83890) * C153740) *
                C70419) *
               C153413 * C153449) *
              C1133 +
          ((((C83899 + C83900 + C83901) * C153740 + C89571 * C153600) * C70419 +
            ((C83902 + C83903 + C83904) * C153740 +
             (C84999 + C85000 + C85001) * C153600) *
                C153560) *
               C153413 * C153449 -
           ((C89572 * C153600 + (C83901 + C83900 + C83899) * C153740) *
                C153560 +
            ((C88556 + C88555 + C88554) * C153600 +
             (C83549 * C147 + C83567 + C83567 + C83541 * C163 + C152026 * C146 +
              C83568 + C83568 + C153351 * C162 + C152033 * C145 + C83569 +
              C83569 + C153343 * C161) *
                 C153740) *
                C70419) *
               C153413 * C1131) *
              C1134 +
          ((((C152033 * C146 + C83570 + C83570 + C153343 * C162 +
              C152026 * C147 + C83571 + C83571 + C153351 * C163 +
              C83549 * C148 + C83572 + C83572 + C83541 * C164) *
                 C153740 +
             (C89176 + C89177 + C89178) * C153600) *
                C70419 +
            ((C84413 + C84414 + C84415) * C153740 +
             (C88865 + C88866 + C88867) * C153600) *
                C153560) *
               C153413 * C1131 -
           (((C83549 * C1796 + C84637 + C84637 + C83541 * C1806 +
              C152026 * C1797 + C84638 + C84638 + C153351 * C1807 +
              C152033 * C1798 + C84639 + C84639 + C153343 * C1808) *
                 C153600 +
             (C84418 + C84417 + C84416) * C153740) *
                C153560 +
            ((C88867 + C88866 + C88865) * C153600 +
             (C84415 + C84414 + C84413) * C153740) *
                C70419) *
               C153413 * C153449) *
              C1135)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C152033 * C144 + C83552 + C83552 + C153343 * C160 +
              C152026 * C145 + C83553 + C83553 + C153351 * C161 +
              C83549 * C146 + C83554 + C83554 + C83541 * C162) *
                 C153740 +
             (C88548 + C88549 + C88550) * C153600) *
                C70419 +
            ((C83890 + C83891 + C83892) * C153740 + C89569 * C153600) *
                C153560) *
               C493 -
           ((C90355 * C153600 + C89570 * C153740) * C153560 +
            ((C88551 + C88552 + C88553) * C153600 +
             (C88550 + C88549 + C88548) * C153740) *
                C70419) *
               C494 +
           (((C88553 + C88552 + C88551) * C153740 +
             (C152033 * C2152 + C86975 + C86975 + C153343 * C2162 +
              C152026 * C2151 + C86974 + C86974 + C153351 * C2161 +
              C83549 * C2150 + C86973 + C86973 + C83541 * C2160) *
                 C153600) *
                C70419 +
            (C90356 * C153740 + (C90363 + C90364 + C90365) * C153600) *
                C153560) *
               C495) *
              C1131 +
          (((C89569 * C153740 + C90356 * C153600) * C70419 +
            ((C84992 + C84991 + C84990) * C153740 +
             (C85635 + C85636 + C85637) * C153600) *
                C153560) *
               C494 -
           ((C86374 * C153600 + (C83895 + C83894 + C83893) * C153740) *
                C153560 +
            (C89570 * C153600 + (C83892 + C83891 + C83890) * C153740) *
                C70419) *
               C493 -
           (((C83549 * C6213 + C86967 + C86967 + C83541 * C6225 +
              C152026 * C6214 + C86968 + C86968 + C153351 * C6226 +
              C152033 * C6215 + C86969 + C86969 + C153343 * C6227) *
                 C153600 +
             (C85637 + C85636 + C85635) * C153740) *
                C153560 +
            ((C90365 + C90364 + C90363) * C153600 + C90355 * C153740) *
                C70419) *
               C495) *
              C153449) *
         C153378) /
            (p * q * std::sqrt(p + q));
    d2ee[53] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 ((((((C152033 * C144 + C83552 + C83552 + C153343 * C160 +
                       C152026 * C145 + C83553 + C83553 + C153351 * C161 +
                       C83549 * C146 + C83554 + C83554 + C83541 * C162) *
                          C153740 +
                      (C88548 + C88549 + C88550) * C153600) *
                         C70419 +
                     ((C83890 + C83891 + C83892) * C153740 + C89569 * C153600) *
                         C153560) *
                        C153725 -
                    ((C90355 * C153600 + C89570 * C153740) * C153560 +
                     ((C88551 + C88552 + C88553) * C153600 +
                      (C88550 + C88549 + C88548) * C153740) *
                         C70419) *
                        C153477) *
                       C1131 +
                   (((C89569 * C153740 + C90356 * C153600) * C70419 +
                     ((C84992 + C84991 + C84990) * C153740 +
                      (C85635 + C85636 + C85637) * C153600) *
                         C153560) *
                        C153477 -
                    ((C86374 * C153600 + (C83895 + C83894 + C83893) * C153740) *
                         C153560 +
                     (C89570 * C153600 + (C83892 + C83891 + C83890) * C153740) *
                         C70419) *
                        C153725) *
                       C153449) *
                      C153716 +
                  (((((C88554 + C88555 + C88556) * C153740 +
                      (C88557 + C88558 + C88559) * C153600) *
                         C70419 +
                     (C89571 * C153740 + (C88560 + C88561 + C88562) * C153600) *
                         C153560) *
                        C153477 -
                    ((C89572 * C153600 + (C83901 + C83900 + C83899) * C153740) *
                         C153560 +
                     ((C88556 + C88555 + C88554) * C153600 +
                      (C83549 * C147 + C83567 + C83567 + C83541 * C163 +
                       C152026 * C146 + C83568 + C83568 + C153351 * C162 +
                       C152033 * C145 + C83569 + C83569 + C153343 * C161) *
                          C153740) *
                         C70419) *
                        C153725) *
                       C1131 +
                   ((((C83899 + C83900 + C83901) * C153740 + C89571 * C153600) *
                         C70419 +
                     ((C83902 + C83903 + C83904) * C153740 +
                      (C84999 + C85000 + C85001) * C153600) *
                         C153560) *
                        C153725 -
                    (((C83549 * C3330 + C84159 + C84159 + C83541 * C3338 +
                       C152026 * C3329 + C84160 + C84160 + C153351 * C3337 +
                       C152033 * C3328 + C84161 + C84161 + C153343 * C3336) *
                          C153600 +
                      (C85001 + C85000 + C84999) * C153740) *
                         C153560 +
                     ((C88562 + C88561 + C88560) * C153600 + C89572 * C153740) *
                         C70419) *
                        C153477) *
                       C153449) *
                      C153384)) /
                (p * q * std::sqrt(p + q));
    d2ee[54] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C152033 * C144 + C83552 + C83552 + C153343 * C160 +
              C152026 * C145 + C83553 + C83553 + C153351 * C161 +
              C83549 * C146 + C83554 + C83554 + C83541 * C162) *
                 C153740 +
             (C88548 + C88549 + C88550) * C153600) *
                C70419 +
            ((C83890 + C83891 + C83892) * C153740 + C89569 * C153600) *
                C153560) *
               C153413 * C1131 -
           ((C86374 * C153600 + (C83895 + C83894 + C83893) * C153740) *
                C153560 +
            (C89570 * C153600 + (C83892 + C83891 + C83890) * C153740) *
                C70419) *
               C153413 * C153449) *
              C1133 +
          ((((C83899 + C83900 + C83901) * C153740 + C89571 * C153600) * C70419 +
            ((C83902 + C83903 + C83904) * C153740 +
             (C84999 + C85000 + C85001) * C153600) *
                C153560) *
               C153413 * C153449 -
           ((C89572 * C153600 + (C83901 + C83900 + C83899) * C153740) *
                C153560 +
            ((C88556 + C88555 + C88554) * C153600 +
             (C83549 * C147 + C83567 + C83567 + C83541 * C163 + C152026 * C146 +
              C83568 + C83568 + C153351 * C162 + C152033 * C145 + C83569 +
              C83569 + C153343 * C161) *
                 C153740) *
                C70419) *
               C153413 * C1131) *
              C1134 +
          ((((C152033 * C146 + C83570 + C83570 + C153343 * C162 +
              C152026 * C147 + C83571 + C83571 + C153351 * C163 +
              C83549 * C148 + C83572 + C83572 + C83541 * C164) *
                 C153740 +
             (C89176 + C89177 + C89178) * C153600) *
                C70419 +
            ((C84413 + C84414 + C84415) * C153740 +
             (C88865 + C88866 + C88867) * C153600) *
                C153560) *
               C153413 * C1131 -
           (((C83549 * C1796 + C84637 + C84637 + C83541 * C1806 +
              C152026 * C1797 + C84638 + C84638 + C153351 * C1807 +
              C152033 * C1798 + C84639 + C84639 + C153343 * C1808) *
                 C153600 +
             (C84418 + C84417 + C84416) * C153740) *
                C153560 +
            ((C88867 + C88866 + C88865) * C153600 +
             (C84415 + C84414 + C84413) * C153740) *
                C70419) *
               C153413 * C153449) *
              C1135)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C152033 * C144 + C83552 + C83552 + C153343 * C160 +
             C152026 * C145 + C83553 + C83553 + C153351 * C161 + C83549 * C146 +
             C83554 + C83554 + C83541 * C162) *
                C153740 +
            (C88548 + C88549 + C88550) * C153600) *
               C70419 +
           ((C83890 + C83891 + C83892) * C153740 + C89569 * C153600) *
               C153560) *
              C153413 * C1218 -
          ((C86374 * C153600 + (C83895 + C83894 + C83893) * C153740) * C153560 +
           (C89570 * C153600 + (C83892 + C83891 + C83890) * C153740) * C70419) *
              C153413 * C1219 +
          ((C83910 * C153740 + (C84992 + C84991 + C84990) * C153600) * C70419 +
           ((C83898 + C83897 + C83896) * C153740 +
            (C86382 + C86383 + C86384) * C153600) *
               C153560) *
              C153413 * C1220 -
          (((C83549 * C5601 + C86371 + C86371 + C83541 * C5607 +
             C152026 * C5602 + C86372 + C86372 + C153351 * C5608 +
             C152033 * C5603 + C86373 + C86373 + C153343 * C5609) *
                C153600 +
            (C85386 + C85385 + C85384) * C153740) *
               C153560 +
           ((C86384 + C86383 + C86382) * C153600 + C85376 * C153740) * C70419) *
              C153413 * C1221) *
         C153378) /
            (p * q * std::sqrt(p + q));
    d2ee[55] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 ((((((C152033 * C144 + C83552 + C83552 + C153343 * C160 +
                       C152026 * C145 + C83553 + C83553 + C153351 * C161 +
                       C83549 * C146 + C83554 + C83554 + C83541 * C162) *
                          C153740 +
                      (C88548 + C88549 + C88550) * C153600) *
                         C70419 +
                     ((C83890 + C83891 + C83892) * C153740 + C89569 * C153600) *
                         C153560) *
                        C1938 -
                    ((C90355 * C153600 + C89570 * C153740) * C153560 +
                     ((C88551 + C88552 + C88553) * C153600 +
                      (C88550 + C88549 + C88548) * C153740) *
                         C70419) *
                        C153477) *
                       C153724 +
                   (((C89569 * C153740 + C90356 * C153600) * C70419 +
                     (C91333 * C153740 + (C85635 + C85636 + C85637) * C153600) *
                         C153560) *
                        C153477 -
                    ((C86374 * C153600 + (C83895 + C83894 + C83893) * C153740) *
                         C153560 +
                     (C89570 * C153600 + (C83892 + C83891 + C83890) * C153740) *
                         C70419) *
                        C1938) *
                       C153449) *
                      C153716 +
                  (((((C88554 + C88555 + C88556) * C153740 +
                      (C88557 + C88558 + C88559) * C153600) *
                         C70419 +
                     (C89571 * C153740 + (C88560 + C88561 + C88562) * C153600) *
                         C153560) *
                        C153477 -
                    ((C89572 * C153600 + (C83901 + C83900 + C83899) * C153740) *
                         C153560 +
                     ((C88556 + C88555 + C88554) * C153600 +
                      (C83549 * C147 + C83567 + C83567 + C83541 * C163 +
                       C152026 * C146 + C83568 + C83568 + C153351 * C162 +
                       C152033 * C145 + C83569 + C83569 + C153343 * C161) *
                          C153740) *
                         C70419) *
                        C1938) *
                       C153724 +
                   ((((C83899 + C83900 + C83901) * C153740 + C89571 * C153600) *
                         C70419 +
                     ((C83902 + C83903 + C83904) * C153740 +
                      (C84999 + C85000 + C85001) * C153600) *
                         C153560) *
                        C1938 -
                    (((C83549 * C3330 + C84159 + C84159 + C83541 * C3338 +
                       C152026 * C3329 + C84160 + C84160 + C153351 * C3337 +
                       C152033 * C3328 + C84161 + C84161 + C153343 * C3336) *
                          C153600 +
                      (C85001 + C85000 + C84999) * C153740) *
                         C153560 +
                     ((C88562 + C88561 + C88560) * C153600 + C89572 * C153740) *
                         C70419) *
                        C153477) *
                       C153449) *
                      C153384)) /
                (p * q * std::sqrt(p + q));
    d2ee[56] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 (((((C152033 * C144 + C83552 + C83552 + C153343 * C160 +
                      C152026 * C145 + C83553 + C83553 + C153351 * C161 +
                      C83549 * C146 + C83554 + C83554 + C83541 * C162) *
                         C153740 +
                     (C88548 + C88549 + C88550) * C153600) *
                        C70419 +
                    ((C83890 + C83891 + C83892) * C153740 + C89569 * C153600) *
                        C153560) *
                       C153797 -
                   ((C90355 * C153600 + C89570 * C153740) * C153560 +
                    ((C88551 + C88552 + C88553) * C153600 +
                     (C88550 + C88549 + C88548) * C153740) *
                        C70419) *
                       C153798 +
                   (((C88553 + C88552 + C88551) * C153740 +
                     (C92126 + C92127 + C92128) * C153600) *
                        C70419 +
                    (C90356 * C153740 + (C90363 + C90364 + C90365) * C153600) *
                        C153560) *
                       C2454) *
                      C153724 +
                  (((C89569 * C153740 + C90356 * C153600) * C70419 +
                    (C91333 * C153740 + (C85635 + C85636 + C85637) * C153600) *
                        C153560) *
                       C153798 -
                   ((C86374 * C153600 + (C83895 + C83894 + C83893) * C153740) *
                        C153560 +
                    (C89570 * C153600 + (C83892 + C83891 + C83890) * C153740) *
                        C70419) *
                       C153797 -
                   (((C83549 * C6213 + C86967 + C86967 + C83541 * C6225 +
                      C152026 * C6214 + C86968 + C86968 + C153351 * C6226 +
                      C152033 * C6215 + C86969 + C86969 + C153343 * C6227) *
                         C153600 +
                     (C85637 + C85636 + C85635) * C153740) *
                        C153560 +
                    ((C90365 + C90364 + C90363) * C153600 + C90355 * C153740) *
                        C70419) *
                       C2454) *
                      C153449) *
                 C153378) /
                (p * q * std::sqrt(p + q));
    d2ee[57] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C152033 * C144 + C83552 + C83552 + C153343 * C160 +
                      C152026 * C145 + C83553 + C83553 + C153351 * C161 +
                      C83549 * C146 + C83554 + C83554 + C83541 * C162) *
                         C153740 +
                     (C88548 + C88549 + C88550) * C153600) *
                        C70419 +
                    ((C83890 + C83891 + C83892) * C153740 + C89569 * C153600) *
                        C153560) *
                       C1938 -
                   ((C90355 * C153600 + C89570 * C153740) * C153560 +
                    ((C88551 + C88552 + C88553) * C153600 +
                     (C88550 + C88549 + C88548) * C153740) *
                        C70419) *
                       C153477) *
                      C310 +
                  (((C89569 * C153740 + C90356 * C153600) * C70419 +
                    (C91333 * C153740 + (C85635 + C85636 + C85637) * C153600) *
                        C153560) *
                       C153477 -
                   ((C86374 * C153600 + (C83895 + C83894 + C83893) * C153740) *
                        C153560 +
                    (C89570 * C153600 + (C83892 + C83891 + C83890) * C153740) *
                        C70419) *
                       C1938) *
                      C311 +
                  (((C83910 * C153740 + C91333 * C153600) * C70419 +
                    ((C83898 + C83897 + C83896) * C153740 +
                     (C86382 + C86383 + C86384) * C153600) *
                        C153560) *
                       C1938 -
                   (((C83549 * C4833 + C85617 + C85617 + C83541 * C4839 +
                      C152026 * C4834 + C85618 + C85618 + C153351 * C4840 +
                      C152033 * C4835 + C85619 + C85619 + C153343 * C4841) *
                         C153600 +
                     (C86384 + C86383 + C86382) * C153740) *
                        C153560 +
                    ((C85637 + C85636 + C85635) * C153600 + C86374 * C153740) *
                        C70419) *
                       C153477) *
                      C312) *
                 C153378) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C152033 * C144 + C83552 + C83552 + C153343 * C160 +
                      C152026 * C145 + C83553 + C83553 + C153351 * C161 +
                      C83549 * C146 + C83554 + C83554 + C83541 * C162) *
                         C153740 +
                     (C88548 + C88549 + C88550) * C153600) *
                        C70419 +
                    ((C83890 + C83891 + C83892) * C153740 + C89569 * C153600) *
                        C153560) *
                       C1938 -
                   ((C90355 * C153600 + C89570 * C153740) * C153560 +
                    ((C88551 + C88552 + C88553) * C153600 +
                     (C88550 + C88549 + C88548) * C153740) *
                        C70419) *
                       C153477) *
                      C153397 * C1133 +
                  ((((C88554 + C88555 + C88556) * C153740 +
                     (C88557 + C88558 + C88559) * C153600) *
                        C70419 +
                    (C89571 * C153740 + (C88560 + C88561 + C88562) * C153600) *
                        C153560) *
                       C153477 -
                   ((C89572 * C153600 + (C83901 + C83900 + C83899) * C153740) *
                        C153560 +
                    ((C88556 + C88555 + C88554) * C153600 +
                     (C83549 * C147 + C83567 + C83567 + C83541 * C163 +
                      C152026 * C146 + C83568 + C83568 + C153351 * C162 +
                      C152033 * C145 + C83569 + C83569 + C153343 * C161) *
                         C153740) *
                        C70419) *
                       C1938) *
                      C153397 * C1134 +
                  ((((C152033 * C146 + C83570 + C83570 + C153343 * C162 +
                      C152026 * C147 + C83571 + C83571 + C153351 * C163 +
                      C83549 * C148 + C83572 + C83572 + C83541 * C164) *
                         C153740 +
                     (C89176 + C89177 + C89178) * C153600) *
                        C70419 +
                    ((C84413 + C84414 + C84415) * C153740 +
                     (C88865 + C88866 + C88867) * C153600) *
                        C153560) *
                       C1938 -
                   (((C83549 * C1365 + C89164 + C89164 + C83541 * C1375 +
                      C152026 * C1366 + C89165 + C89165 + C153351 * C1376 +
                      C152033 * C1367 + C89166 + C89166 + C153343 * C1377) *
                         C153600 +
                     (C88867 + C88866 + C88865) * C153740) *
                        C153560 +
                    ((C83549 * C505 + C89167 + C89167 + C83541 * C529 +
                      C152026 * C504 + C89168 + C89168 + C153351 * C528 +
                      C152033 * C503 + C89169 + C89169 + C153343 * C527) *
                         C153600 +
                     (C89178 + C89177 + C89176) * C153740) *
                        C70419) *
                       C153477) *
                      C153397 * C1135)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C152033 * C144 + C83552 + C83552 + C153343 * C160 +
                     C152026 * C145 + C83553 + C83553 + C153351 * C161 +
                     C83549 * C146 + C83554 + C83554 + C83541 * C162) *
                        C153740 +
                    (C88548 + C88549 + C88550) * C153600) *
                       C70419 +
                   ((C83890 + C83891 + C83892) * C153740 + C89569 * C153600) *
                       C153560) *
                      C2144 -
                  ((C90355 * C153600 + C89570 * C153740) * C153560 +
                   ((C88551 + C88552 + C88553) * C153600 +
                    (C88550 + C88549 + C88548) * C153740) *
                       C70419) *
                      C2145 +
                  (((C88553 + C88552 + C88551) * C153740 +
                    (C92126 + C92127 + C92128) * C153600) *
                       C70419 +
                   (C90356 * C153740 + (C90363 + C90364 + C90365) * C153600) *
                       C153560) *
                      C2146 -
                  (((C83549 * C9040 + C92114 + C92114 + C83541 * C9046 +
                     C152026 * C9041 + C92115 + C92115 + C153351 * C9047 +
                     C152033 * C9042 + C92116 + C92116 + C153343 * C9048) *
                        C153600 +
                    (C90365 + C90364 + C90363) * C153740) *
                       C153560 +
                   ((C83549 * C7562 + C92117 + C92117 + C83541 * C7570 +
                     C152026 * C7561 + C92118 + C92118 + C153351 * C7569 +
                     C152033 * C7560 + C92119 + C92119 + C153343 * C7568) *
                        C153600 +
                    (C92128 + C92127 + C92126) * C153740) *
                       C70419) *
                      C2147) *
                 C153397 * C153378) /
                    (p * q * std::sqrt(p + q));
    d2ee[58] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 (((((C152033 * C144 + C83552 + C83552 + C153343 * C160 +
                      C152026 * C145 + C83553 + C83553 + C153351 * C161 +
                      C83549 * C146 + C83554 + C83554 + C83541 * C162) *
                         C153740 +
                     (C88548 + C88549 + C88550) * C153600) *
                        C70419 +
                    ((C83890 + C83891 + C83892) * C153740 + C89569 * C153600) *
                        C153560) *
                       C153797 -
                   ((C90355 * C153600 + C89570 * C153740) * C153560 +
                    ((C88551 + C88552 + C88553) * C153600 +
                     (C88550 + C88549 + C88548) * C153740) *
                        C70419) *
                       C153798 +
                   (((C88553 + C88552 + C88551) * C153740 +
                     (C92126 + C92127 + C92128) * C153600) *
                        C70419 +
                    (C90356 * C153740 + (C90363 + C90364 + C90365) * C153600) *
                        C153560) *
                       C2454) *
                      C153397 * C153716 +
                  ((((C88554 + C88555 + C88556) * C153740 +
                     (C88557 + C88558 + C88559) * C153600) *
                        C70419 +
                    (C89571 * C153740 + (C88560 + C88561 + C88562) * C153600) *
                        C153560) *
                       C153798 -
                   ((C89572 * C153600 + (C83901 + C83900 + C83899) * C153740) *
                        C153560 +
                    ((C88556 + C88555 + C88554) * C153600 +
                     (C83549 * C147 + C83567 + C83567 + C83541 * C163 +
                      C152026 * C146 + C83568 + C83568 + C153351 * C162 +
                      C152033 * C145 + C83569 + C83569 + C153343 * C161) *
                         C153740) *
                        C70419) *
                       C153797 -
                   (((C83549 * C8437 + C88512 + C88512 + C83541 * C8439 +
                      C152026 * C6216 + C88513 + C88513 + C153351 * C6228 +
                      C152033 * C6217 + C88514 + C88514 + C153343 * C6229) *
                         C153600 +
                     (C88562 + C88561 + C88560) * C153740) *
                        C153560 +
                    ((C83549 * C2149 + C88515 + C88515 + C83541 * C2159 +
                      C152026 * C2150 + C88516 + C88516 + C153351 * C2160 +
                      C152033 * C2151 + C88517 + C88517 + C153343 * C2161) *
                         C153600 +
                     (C88559 + C88558 + C88557) * C153740) *
                        C70419) *
                       C2454) *
                      C153397 * C153384)) /
                (p * q * std::sqrt(p + q));
    d2ee[59] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C152033 * C144 + C83552 + C83552 + C153343 * C160 +
                      C152026 * C145 + C83553 + C83553 + C153351 * C161 +
                      C83549 * C146 + C83554 + C83554 + C83541 * C162) *
                         C153740 +
                     (C88548 + C88549 + C88550) * C153600) *
                        C70419 +
                    ((C83890 + C83891 + C83892) * C153740 + C89569 * C153600) *
                        C153560) *
                       C1938 -
                   ((C90355 * C153600 + C89570 * C153740) * C153560 +
                    ((C88551 + C88552 + C88553) * C153600 +
                     (C88550 + C88549 + C88548) * C153740) *
                        C70419) *
                       C153477) *
                      C153397 * C1133 +
                  ((((C88554 + C88555 + C88556) * C153740 +
                     (C88557 + C88558 + C88559) * C153600) *
                        C70419 +
                    (C89571 * C153740 + (C88560 + C88561 + C88562) * C153600) *
                        C153560) *
                       C153477 -
                   ((C89572 * C153600 + (C83901 + C83900 + C83899) * C153740) *
                        C153560 +
                    ((C88556 + C88555 + C88554) * C153600 +
                     (C83549 * C147 + C83567 + C83567 + C83541 * C163 +
                      C152026 * C146 + C83568 + C83568 + C153351 * C162 +
                      C152033 * C145 + C83569 + C83569 + C153343 * C161) *
                         C153740) *
                        C70419) *
                       C1938) *
                      C153397 * C1134 +
                  ((((C152033 * C146 + C83570 + C83570 + C153343 * C162 +
                      C152026 * C147 + C83571 + C83571 + C153351 * C163 +
                      C83549 * C148 + C83572 + C83572 + C83541 * C164) *
                         C153740 +
                     (C89176 + C89177 + C89178) * C153600) *
                        C70419 +
                    ((C84413 + C84414 + C84415) * C153740 +
                     (C88865 + C88866 + C88867) * C153600) *
                        C153560) *
                       C1938 -
                   (((C83549 * C1365 + C89164 + C89164 + C83541 * C1375 +
                      C152026 * C1366 + C89165 + C89165 + C153351 * C1376 +
                      C152033 * C1367 + C89166 + C89166 + C153343 * C1377) *
                         C153600 +
                     (C88867 + C88866 + C88865) * C153740) *
                        C153560 +
                    ((C83549 * C505 + C89167 + C89167 + C83541 * C529 +
                      C152026 * C504 + C89168 + C89168 + C153351 * C528 +
                      C152033 * C503 + C89169 + C89169 + C153343 * C527) *
                         C153600 +
                     (C89178 + C89177 + C89176) * C153740) *
                        C70419) *
                       C153477) *
                      C153397 * C1135)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C152033 * C144 + C83552 + C83552 + C153343 * C160 +
                      C152026 * C145 + C83553 + C83553 + C153351 * C161 +
                      C83549 * C146 + C83554 + C83554 + C83541 * C162) *
                         C153740 +
                     (C88548 + C88549 + C88550) * C153600) *
                        C70419 +
                    ((C83890 + C83891 + C83892) * C153740 + C89569 * C153600) *
                        C153560) *
                       C1938 -
                   ((C90355 * C153600 + C89570 * C153740) * C153560 +
                    ((C88551 + C88552 + C88553) * C153600 +
                     (C88550 + C88549 + C88548) * C153740) *
                        C70419) *
                       C153477) *
                      C310 +
                  (((C89569 * C153740 + C90356 * C153600) * C70419 +
                    (C91333 * C153740 + (C85635 + C85636 + C85637) * C153600) *
                        C153560) *
                       C153477 -
                   ((C86374 * C153600 + (C83895 + C83894 + C83893) * C153740) *
                        C153560 +
                    (C89570 * C153600 + (C83892 + C83891 + C83890) * C153740) *
                        C70419) *
                       C1938) *
                      C311 +
                  (((C83910 * C153740 + C91333 * C153600) * C70419 +
                    ((C83898 + C83897 + C83896) * C153740 +
                     (C86382 + C86383 + C86384) * C153600) *
                        C153560) *
                       C1938 -
                   (((C83549 * C4833 + C85617 + C85617 + C83541 * C4839 +
                      C152026 * C4834 + C85618 + C85618 + C153351 * C4840 +
                      C152033 * C4835 + C85619 + C85619 + C153343 * C4841) *
                         C153600 +
                     (C86384 + C86383 + C86382) * C153740) *
                        C153560 +
                    ((C85637 + C85636 + C85635) * C153600 + C86374 * C153740) *
                        C70419) *
                       C153477) *
                      C312) *
                 C153378) /
                    (p * q * std::sqrt(p + q));
    d2ee[60] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C70421 * C144 + C70430 + C70430 + C153818 * C160 +
                     C70423 * C145 + C70431 + C70431 + C153811 * C161 +
                     C70425 * C146 + C70432 + C70432 + C153792 * C162 +
                     C70427 * C147 + C70433 + C70433 + C153738 * C163) *
                        C153513 * C70419 +
                    (C70736 + C70737 + C70738 + C70739) * C153513 * C153560) *
                       C153413 * C153724 -
                   ((C70740 + C70741 + C70742 + C70743) * C153513 * C153560 +
                    (C70739 + C70738 + C70737 + C70736) * C153513 * C70419) *
                       C153413 * C153449) *
                      C153793 +
                  (((C70744 + C70745 + C70746 + C70747) * C153513 * C70419 +
                    (C70748 + C70749 + C70750 + C70751) * C153513 * C153560) *
                       C153413 * C153449 -
                   ((C70747 + C70746 + C70745 + C70744) * C153513 * C153560 +
                    (C70427 * C148 + C70442 + C70442 + C153738 * C164 +
                     C70425 * C147 + C70443 + C70443 + C153792 * C163 +
                     C70423 * C146 + C70444 + C70444 + C153811 * C162 +
                     C70421 * C145 + C70445 + C70445 + C153818 * C161) *
                        C153513 * C70419) *
                       C153413 * C153724) *
                      C153794 +
                  (((C70421 * C146 + C70446 + C70446 + C153818 * C162 +
                     C70423 * C147 + C70447 + C70447 + C153811 * C163 +
                     C70425 * C148 + C70448 + C70448 + C153792 * C164 +
                     C70427 * C149 + C70449 + C70449 + C153738 * C165) *
                        C153513 * C70419 +
                    (C71192 + C71193 + C71194 + C71195) * C153513 * C153560) *
                       C153413 * C153724 -
                   ((C70427 * C326 + C71180 + C71180 + C153738 * C350 +
                     C70425 * C324 + C71181 + C71181 + C153792 * C348 +
                     C70423 * C323 + C71182 + C71182 + C153811 * C347 +
                     C70421 * C322 + C71183 + C71183 + C153818 * C346) *
                        C153513 * C153560 +
                    (C71195 + C71194 + C71193 + C71192) * C153513 * C70419) *
                       C153413 * C153449) *
                      C678)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C74247 * C144 + C74252 + C74252 + C74241 * C160 +
                     C74249 * C145 + C74253 + C74253 + C153348 * C161) *
                        C153513 * C153819 +
                    (C74550 + C74551) * C153513 * C153815 + C74570 * C153805 +
                    C74571 * C153747) *
                       C153413 * C153724 -
                   ((C74556 + C74557) * C153513 * C153747 +
                    (C74555 + C74554) * C153513 * C153805 +
                    (C74553 + C74552) * C153513 * C153815 +
                    (C74551 + C74550) * C153513 * C153819) *
                       C153413 * C153449) *
                      C153793 +
                  (((C74558 + C74559) * C153513 * C153819 +
                    (C74560 + C74561) * C153513 * C153815 +
                    (C74562 + C74563) * C153513 * C153805 +
                    (C74564 + C74565) * C153513 * C153747) *
                       C153413 * C153449 -
                   (C74572 * C153747 + C74573 * C153805 +
                    (C74559 + C74558) * C153513 * C153815 +
                    (C74249 * C146 + C74266 + C74266 + C153348 * C162 +
                     C74247 * C145 + C74267 + C74267 + C74241 * C161) *
                        C153513 * C153819) *
                       C153413 * C153724) *
                      C153794 +
                  (((C74247 * C146 + C74268 + C74268 + C74241 * C162 +
                     C74249 * C147 + C74269 + C74269 + C153348 * C163) *
                        C153513 * C153819 +
                    (C75020 + C75021) * C153513 * C153815 +
                    (C75022 + C75023) * C153513 * C153805 +
                    (C75024 + C75025) * C153513 * C153747) *
                       C153413 * C153724 -
                   ((C74249 * C2992 + C75006 + C75006 + C153348 * C3000 +
                     C74247 * C2991 + C75007 + C75007 + C74241 * C2999) *
                        C153513 * C153747 +
                    (C75025 + C75024) * C153513 * C153805 +
                    (C75023 + C75022) * C153513 * C153815 +
                    (C75021 + C75020) * C153513 * C153819) *
                       C153413 * C153449) *
                      C678)) /
                    (p * q * std::sqrt(p + q));
    d2ee[61] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C70421 * C144 + C70430 + C70430 + C153818 * C160 +
                      C70423 * C145 + C70431 + C70431 + C153811 * C161 +
                      C70425 * C146 + C70432 + C70432 + C153792 * C162 +
                      C70427 * C147 + C70433 + C70433 + C153738 * C163) *
                         C153513 * C70419 +
                     (C70736 + C70737 + C70738 + C70739) * C153513 * C153560) *
                        C153725 -
                    ((C71696 + C71697 + C71698 + C71699) * C153513 * C153560 +
                     (C70427 * C497 + C70950 + C70950 + C153738 * C521 +
                      C70425 * C498 + C70951 + C70951 + C153792 * C522 +
                      C70423 * C499 + C70952 + C70952 + C153811 * C523 +
                      C70421 * C500 + C70953 + C70953 + C153818 * C524) *
                         C153513 * C70419) *
                        C153477) *
                       C153724 +
                   (((C71699 + C71698 + C71697 + C71696) * C153513 * C70419 +
                     (C70421 * C1800 + C71664 + C71664 + C153818 * C1810 +
                      C70423 * C1799 + C71665 + C71665 + C153811 * C1809 +
                      C70425 * C1798 + C71666 + C71666 + C153792 * C1808 +
                      C70427 * C1797 + C71667 + C71667 + C153738 * C1807) *
                         C153513 * C153560) *
                        C153477 -
                    ((C70740 + C70741 + C70742 + C70743) * C153513 * C153560 +
                     (C70739 + C70738 + C70737 + C70736) * C153513 * C70419) *
                        C153725) *
                       C153449) *
                      C313 +
                  ((((C70421 * C499 + C70962 + C70962 + C153818 * C523 +
                      C70423 * C498 + C70963 + C70963 + C153811 * C522 +
                      C70425 * C497 + C70964 + C70964 + C153792 * C521 +
                      C70427 * C496 + C70965 + C70965 + C153738 * C520) *
                         C153513 * C70419 +
                     (C71700 + C71701 + C71702 + C71703) * C153513 * C153560) *
                        C153477 -
                    ((C70747 + C70746 + C70745 + C70744) * C153513 * C153560 +
                     (C70427 * C148 + C70442 + C70442 + C153738 * C164 +
                      C70425 * C147 + C70443 + C70443 + C153792 * C163 +
                      C70423 * C146 + C70444 + C70444 + C153811 * C162 +
                      C70421 * C145 + C70445 + C70445 + C153818 * C161) *
                         C153513 * C70419) *
                        C153725) *
                       C153724 +
                   (((C70744 + C70745 + C70746 + C70747) * C153513 * C70419 +
                     (C70748 + C70749 + C70750 + C70751) * C153513 * C153560) *
                        C153725 -
                    ((C70427 * C1796 + C71676 + C71676 + C153738 * C1806 +
                      C70425 * C1797 + C71677 + C71677 + C153792 * C1807 +
                      C70423 * C1798 + C71678 + C71678 + C153811 * C1808 +
                      C70421 * C1799 + C71679 + C71679 + C153818 * C1809) *
                         C153513 * C153560 +
                     (C71703 + C71702 + C71701 + C71700) * C153513 * C70419) *
                        C153477) *
                       C153449) *
                      C153384)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C74247 * C144 + C74252 + C74252 + C74241 * C160 +
                      C74249 * C145 + C74253 + C74253 + C153348 * C161) *
                         C153513 * C153819 +
                     (C74550 + C74551) * C153513 * C153815 + C74570 * C153805 +
                     C74571 * C153747) *
                        C153725 -
                    ((C75538 + C75539) * C153513 * C153747 +
                     (C75540 + C75541) * C153513 * C153805 +
                     (C75542 + C75543) * C153513 * C153815 +
                     (C74249 * C499 + C74774 + C74774 + C153348 * C523 +
                      C74247 * C500 + C74775 + C74775 + C74241 * C524) *
                         C153513 * C153819) *
                        C153477) *
                       C153724 +
                   (((C75543 + C75542) * C153513 * C153819 +
                     (C75541 + C75540) * C153513 * C153815 +
                     (C75539 + C75538) * C153513 * C153805 +
                     (C74247 * C5603 + C75498 + C75498 + C74241 * C5609 +
                      C74249 * C5602 + C75499 + C75499 + C153348 * C5608) *
                         C153513 * C153747) *
                        C153477 -
                    ((C74556 + C74557) * C153513 * C153747 +
                     (C74555 + C74554) * C153513 * C153805 +
                     (C74553 + C74552) * C153513 * C153815 +
                     (C74551 + C74550) * C153513 * C153819) *
                        C153725) *
                       C153449) *
                      C313 +
                  ((((C74247 * C499 + C74784 + C74784 + C74241 * C523 +
                      C74249 * C498 + C74785 + C74785 + C153348 * C522) *
                         C153513 * C153819 +
                     (C75544 + C75545) * C153513 * C153815 +
                     (C75546 + C75547) * C153513 * C153805 +
                     (C75548 + C75549) * C153513 * C153747) *
                        C153477 -
                    (C74572 * C153747 + C74573 * C153805 +
                     (C74559 + C74558) * C153513 * C153815 +
                     (C74249 * C146 + C74266 + C74266 + C153348 * C162 +
                      C74247 * C145 + C74267 + C74267 + C74241 * C161) *
                         C153513 * C153819) *
                        C153725) *
                       C153724 +
                   (((C74558 + C74559) * C153513 * C153819 +
                     (C74560 + C74561) * C153513 * C153815 +
                     (C74562 + C74563) * C153513 * C153805 +
                     (C74564 + C74565) * C153513 * C153747) *
                        C153725 -
                    ((C74249 * C5601 + C75512 + C75512 + C153348 * C5607 +
                      C74247 * C5602 + C75513 + C75513 + C74241 * C5608) *
                         C153513 * C153747 +
                     (C75549 + C75548) * C153513 * C153805 +
                     (C75547 + C75546) * C153513 * C153815 +
                     (C75545 + C75544) * C153513 * C153819) *
                        C153477) *
                       C153449) *
                      C153384)) /
                    (p * q * std::sqrt(p + q));
    d2ee[62] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C70421 * C144 + C70430 + C70430 + C153818 * C160 + C70423 * C145 +
             C70431 + C70431 + C153811 * C161 + C70425 * C146 + C70432 +
             C70432 + C153792 * C162 + C70427 * C147 + C70433 + C70433 +
             C153738 * C163) *
                C153513 * C70419 +
            (C70736 + C70737 + C70738 + C70739) * C153513 * C153560) *
               C153413 * C310 -
           ((C70740 + C70741 + C70742 + C70743) * C153513 * C153560 +
            (C70739 + C70738 + C70737 + C70736) * C153513 * C70419) *
               C153413 * C311 +
           ((C70743 + C70742 + C70741 + C70740) * C153513 * C70419 +
            (C70421 * C1227 + C70676 + C70676 + C153818 * C1237 +
             C70423 * C1226 + C70677 + C70677 + C153811 * C1236 +
             C70425 * C1225 + C70678 + C70678 + C153792 * C1235 +
             C70427 * C1224 + C70679 + C70679 + C153738 * C1234) *
                C153513 * C153560) *
               C153413 * C312) *
              C313 +
          (((C70744 + C70745 + C70746 + C70747) * C153513 * C70419 +
            (C70748 + C70749 + C70750 + C70751) * C153513 * C153560) *
               C153413 * C311 -
           ((C70747 + C70746 + C70745 + C70744) * C153513 * C153560 +
            (C70427 * C148 + C70442 + C70442 + C153738 * C164 + C70425 * C147 +
             C70443 + C70443 + C153792 * C163 + C70423 * C146 + C70444 +
             C70444 + C153811 * C162 + C70421 * C145 + C70445 + C70445 +
             C153818 * C161) *
                C153513 * C70419) *
               C153413 * C310 -
           ((C70427 * C1223 + C70700 + C70700 + C153738 * C1233 +
             C70425 * C1224 + C70701 + C70701 + C153792 * C1234 +
             C70423 * C1225 + C70702 + C70702 + C153811 * C1235 +
             C70421 * C1226 + C70703 + C70703 + C153818 * C1236) *
                C153513 * C153560 +
            (C70751 + C70750 + C70749 + C70748) * C153513 * C70419) *
               C153413 * C312) *
              C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C70421 * C144 + C70430 + C70430 + C153818 * C160 + C70423 * C145 +
            C70431 + C70431 + C153811 * C161 + C70425 * C146 + C70432 + C70432 +
            C153792 * C162 + C70427 * C147 + C70433 + C70433 + C153738 * C163) *
               C153513 * C70419 +
           (C70421 * C319 + C70434 + C70434 + C153818 * C343 + C70423 * C318 +
            C70435 + C70435 + C153811 * C342 + C70425 * C317 + C70436 + C70436 +
            C153792 * C341 + C70427 * C316 + C70437 + C70437 + C153738 * C340) *
               C153513 * C153560) *
              C153413 * C153397 * C130 -
          ((C70427 * C315 + C70438 + C70438 + C153738 * C339 + C70425 * C316 +
            C70439 + C70439 + C153792 * C340 + C70423 * C317 + C70440 + C70440 +
            C153811 * C341 + C70421 * C318 + C70441 + C70441 + C153818 * C342) *
               C153513 * C153560 +
           (C70427 * C148 + C70442 + C70442 + C153738 * C164 + C70425 * C147 +
            C70443 + C70443 + C153792 * C163 + C70423 * C146 + C70444 + C70444 +
            C153811 * C162 + C70421 * C145 + C70445 + C70445 + C153818 * C161) *
               C153513 * C70419) *
              C153413 * C153397 * C131 +
          ((C70421 * C146 + C70446 + C70446 + C153818 * C162 + C70423 * C147 +
            C70447 + C70447 + C153811 * C163 + C70425 * C148 + C70448 + C70448 +
            C153792 * C164 + C70427 * C149 + C70449 + C70449 + C153738 * C165) *
               C153513 * C70419 +
           (C70421 * C317 + C70450 + C70450 + C153818 * C341 + C70423 * C316 +
            C70451 + C70451 + C153811 * C340 + C70425 * C315 + C70452 + C70452 +
            C153792 * C339 + C70427 * C325 + C70453 + C70453 + C153738 * C349) *
               C153513 * C153560) *
              C153413 * C153397 * C132 -
          ((C70427 * C679 + C70454 + C70454 + C153738 * C681 + C70425 * C325 +
            C70455 + C70455 + C153792 * C349 + C70423 * C315 + C70456 + C70456 +
            C153811 * C339 + C70421 * C316 + C70457 + C70457 + C153818 * C340) *
               C153513 * C153560 +
           (C70427 * C150 + C70458 + C70458 + C153738 * C166 + C70425 * C149 +
            C70459 + C70459 + C153792 * C165 + C70423 * C148 + C70460 + C70460 +
            C153811 * C164 + C70421 * C147 + C70461 + C70461 + C153818 * C163) *
               C153513 * C70419) *
              C153413 * C153397 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C70421 * C144 + C70430 + C70430 + C153818 * C160 + C70423 * C145 +
             C70431 + C70431 + C153811 * C161 + C70425 * C146 + C70432 +
             C70432 + C153792 * C162 + C70427 * C147 + C70433 + C70433 +
             C153738 * C163) *
                C153513 * C70419 +
            (C70736 + C70737 + C70738 + C70739) * C153513 * C153560) *
               C493 -
           ((C70427 * C984 + C70946 + C70946 + C153738 * C996 + C70425 * C983 +
             C70947 + C70947 + C153792 * C995 + C70423 * C982 + C70948 +
             C70948 + C153811 * C994 + C70421 * C981 + C70949 + C70949 +
             C153818 * C993) *
                C153513 * C153560 +
            (C70427 * C497 + C70950 + C70950 + C153738 * C521 + C70425 * C498 +
             C70951 + C70951 + C153792 * C522 + C70423 * C499 + C70952 +
             C70952 + C153811 * C523 + C70421 * C500 + C70953 + C70953 +
             C153818 * C524) *
                C153513 * C70419) *
               C494 +
           ((C70421 * C501 + C70954 + C70954 + C153818 * C525 + C70423 * C502 +
             C70955 + C70955 + C153811 * C526 + C70425 * C503 + C70956 +
             C70956 + C153792 * C527 + C70427 * C504 + C70957 + C70957 +
             C153738 * C528) *
                C153513 * C70419 +
            (C70421 * C1369 + C70958 + C70958 + C153818 * C1379 +
             C70423 * C1368 + C70959 + C70959 + C153811 * C1378 +
             C70425 * C1367 + C70960 + C70960 + C153792 * C1377 +
             C70427 * C1366 + C70961 + C70961 + C153738 * C1376) *
                C153513 * C153560) *
               C495) *
              C153397 * C313 +
          (((C70421 * C499 + C70962 + C70962 + C153818 * C523 + C70423 * C498 +
             C70963 + C70963 + C153811 * C522 + C70425 * C497 + C70964 +
             C70964 + C153792 * C521 + C70427 * C496 + C70965 + C70965 +
             C153738 * C520) *
                C153513 * C70419 +
            (C70421 * C982 + C70966 + C70966 + C153818 * C994 + C70423 * C983 +
             C70967 + C70967 + C153811 * C995 + C70425 * C984 + C70968 +
             C70968 + C153792 * C996 + C70427 * C985 + C70969 + C70969 +
             C153738 * C997) *
                C153513 * C153560) *
               C494 -
           ((C70747 + C70746 + C70745 + C70744) * C153513 * C153560 +
            (C70427 * C148 + C70442 + C70442 + C153738 * C164 + C70425 * C147 +
             C70443 + C70443 + C153792 * C163 + C70423 * C146 + C70444 +
             C70444 + C153811 * C162 + C70421 * C145 + C70445 + C70445 +
             C153818 * C161) *
                C153513 * C70419) *
               C493 -
           ((C70427 * C1365 + C70970 + C70970 + C153738 * C1375 +
             C70425 * C1366 + C70971 + C70971 + C153792 * C1376 +
             C70423 * C1367 + C70972 + C70972 + C153811 * C1377 +
             C70421 * C1368 + C70973 + C70973 + C153818 * C1378) *
                C153513 * C153560 +
            (C70427 * C505 + C70974 + C70974 + C153738 * C529 + C70425 * C504 +
             C70975 + C70975 + C153792 * C528 + C70423 * C503 + C70976 +
             C70976 + C153811 * C527 + C70421 * C502 + C70977 + C70977 +
             C153818 * C526) *
                C153513 * C70419) *
               C495) *
              C153397 * C153384)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
            C74253 + C74253 + C153348 * C161) *
               C153513 * C153819 +
           (C74247 * C319 + C74254 + C74254 + C74241 * C343 + C74249 * C318 +
            C74255 + C74255 + C153348 * C342) *
               C153513 * C153815 +
           (C74247 * C320 + C74256 + C74256 + C74241 * C344 + C74249 * C321 +
            C74257 + C74257 + C153348 * C345) *
               C153513 * C153805 +
           (C74247 * C1227 + C74258 + C74258 + C74241 * C1237 + C74249 * C1226 +
            C74259 + C74259 + C153348 * C1236) *
               C153513 * C153747) *
              C153413 * C153397 * C130 -
          ((C74249 * C1225 + C74260 + C74260 + C153348 * C1235 +
            C74247 * C1226 + C74261 + C74261 + C74241 * C1236) *
               C153513 * C153747 +
           (C74249 * C322 + C74262 + C74262 + C153348 * C346 + C74247 * C321 +
            C74263 + C74263 + C74241 * C345) *
               C153513 * C153805 +
           (C74249 * C317 + C74264 + C74264 + C153348 * C341 + C74247 * C318 +
            C74265 + C74265 + C74241 * C342) *
               C153513 * C153815 +
           (C74249 * C146 + C74266 + C74266 + C153348 * C162 + C74247 * C145 +
            C74267 + C74267 + C74241 * C161) *
               C153513 * C153819) *
              C153413 * C153397 * C131 +
          ((C74247 * C146 + C74268 + C74268 + C74241 * C162 + C74249 * C147 +
            C74269 + C74269 + C153348 * C163) *
               C153513 * C153819 +
           (C74247 * C317 + C74270 + C74270 + C74241 * C341 + C74249 * C316 +
            C74271 + C74271 + C153348 * C340) *
               C153513 * C153815 +
           (C74247 * C322 + C74272 + C74272 + C74241 * C346 + C74249 * C323 +
            C74273 + C74273 + C153348 * C347) *
               C153513 * C153805 +
           (C74247 * C1225 + C74274 + C74274 + C74241 * C1235 + C74249 * C1224 +
            C74275 + C74275 + C153348 * C1234) *
               C153513 * C153747) *
              C153413 * C153397 * C132 -
          ((C74249 * C1223 + C74276 + C74276 + C153348 * C1233 +
            C74247 * C1224 + C74277 + C74277 + C74241 * C1234) *
               C153513 * C153747 +
           (C74249 * C324 + C74278 + C74278 + C153348 * C348 + C74247 * C323 +
            C74279 + C74279 + C74241 * C347) *
               C153513 * C153805 +
           (C74249 * C315 + C74280 + C74280 + C153348 * C339 + C74247 * C316 +
            C74281 + C74281 + C74241 * C340) *
               C153513 * C153815 +
           (C74249 * C148 + C74282 + C74282 + C153348 * C164 + C74247 * C147 +
            C74283 + C74283 + C74241 * C163) *
               C153513 * C153819) *
              C153413 * C153397 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
             C74253 + C74253 + C153348 * C161) *
                C153513 * C153819 +
            (C74550 + C74551) * C153513 * C153815 + C74570 * C153805 +
            C74571 * C153747) *
               C153413 * C310 -
           ((C74556 + C74557) * C153513 * C153747 +
            (C74555 + C74554) * C153513 * C153805 +
            (C74553 + C74552) * C153513 * C153815 +
            (C74551 + C74550) * C153513 * C153819) *
               C153413 * C311 +
           (C74570 * C153819 + C74571 * C153815 +
            (C74557 + C74556) * C153513 * C153805 +
            (C74247 * C4587 + C74496 + C74496 + C74241 * C4593 +
             C74249 * C4586 + C74497 + C74497 + C153348 * C4592) *
                C153513 * C153747) *
               C153413 * C312) *
              C313 +
          (((C74558 + C74559) * C153513 * C153819 +
            (C74560 + C74561) * C153513 * C153815 +
            (C74562 + C74563) * C153513 * C153805 +
            (C74564 + C74565) * C153513 * C153747) *
               C153413 * C311 -
           (C74572 * C153747 + C74573 * C153805 +
            (C74559 + C74558) * C153513 * C153815 +
            (C74249 * C146 + C74266 + C74266 + C153348 * C162 + C74247 * C145 +
             C74267 + C74267 + C74241 * C161) *
                C153513 * C153819) *
               C153413 * C310 -
           ((C74249 * C4585 + C74516 + C74516 + C153348 * C4591 +
             C74247 * C4586 + C74517 + C74517 + C74241 * C4592) *
                C153513 * C153747 +
            (C74565 + C74564) * C153513 * C153805 + C74572 * C153815 +
            C74573 * C153819) *
               C153413 * C312) *
              C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
             C74253 + C74253 + C153348 * C161) *
                C153513 * C153819 +
            (C74550 + C74551) * C153513 * C153815 + C74570 * C153805 +
            C74571 * C153747) *
               C493 -
           ((C74249 * C4144 + C74768 + C74768 + C153348 * C4152 +
             C74247 * C4143 + C74769 + C74769 + C74241 * C4151) *
                C153513 * C153747 +
            (C74249 * C1799 + C74770 + C74770 + C153348 * C1809 +
             C74247 * C1800 + C74771 + C74771 + C74241 * C1810) *
                C153513 * C153805 +
            (C74249 * C982 + C74772 + C74772 + C153348 * C994 + C74247 * C981 +
             C74773 + C74773 + C74241 * C993) *
                C153513 * C153815 +
            (C74249 * C499 + C74774 + C74774 + C153348 * C523 + C74247 * C500 +
             C74775 + C74775 + C74241 * C524) *
                C153513 * C153819) *
               C494 +
           ((C74247 * C501 + C74776 + C74776 + C74241 * C525 + C74249 * C502 +
             C74777 + C74777 + C153348 * C526) *
                C153513 * C153819 +
            (C74247 * C1369 + C74778 + C74778 + C74241 * C1379 +
             C74249 * C1368 + C74779 + C74779 + C153348 * C1378) *
                C153513 * C153815 +
            (C74247 * C3327 + C74780 + C74780 + C74241 * C3335 +
             C74249 * C3328 + C74781 + C74781 + C153348 * C3336) *
                C153513 * C153805 +
            (C74247 * C4835 + C74782 + C74782 + C74241 * C4841 +
             C74249 * C4834 + C74783 + C74783 + C153348 * C4840) *
                C153513 * C153747) *
               C495) *
              C153397 * C313 +
          (((C74247 * C499 + C74784 + C74784 + C74241 * C523 + C74249 * C498 +
             C74785 + C74785 + C153348 * C522) *
                C153513 * C153819 +
            (C74247 * C982 + C74786 + C74786 + C74241 * C994 + C74249 * C983 +
             C74787 + C74787 + C153348 * C995) *
                C153513 * C153815 +
            (C74247 * C1799 + C74788 + C74788 + C74241 * C1809 +
             C74249 * C1798 + C74789 + C74789 + C153348 * C1808) *
                C153513 * C153805 +
            (C74247 * C4144 + C74790 + C74790 + C74241 * C4152 +
             C74249 * C4145 + C74791 + C74791 + C153348 * C4153) *
                C153513 * C153747) *
               C494 -
           (C74572 * C153747 + C74573 * C153805 +
            (C74559 + C74558) * C153513 * C153815 +
            (C74249 * C146 + C74266 + C74266 + C153348 * C162 + C74247 * C145 +
             C74267 + C74267 + C74241 * C161) *
                C153513 * C153819) *
               C493 -
           ((C74249 * C4833 + C74792 + C74792 + C153348 * C4839 +
             C74247 * C4834 + C74793 + C74793 + C74241 * C4840) *
                C153513 * C153747 +
            (C74249 * C3329 + C74794 + C74794 + C153348 * C3337 +
             C74247 * C3328 + C74795 + C74795 + C74241 * C3336) *
                C153513 * C153805 +
            (C74249 * C1367 + C74796 + C74796 + C153348 * C1377 +
             C74247 * C1368 + C74797 + C74797 + C74241 * C1378) *
                C153513 * C153815 +
            (C74249 * C503 + C74798 + C74798 + C153348 * C527 + C74247 * C502 +
             C74799 + C74799 + C74241 * C526) *
                C153513 * C153819) *
               C495) *
              C153397 * C153384)) /
            (p * q * std::sqrt(p + q));
    d2ee[63] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C70421 * C144 + C70430 + C70430 + C153818 * C160 +
                     C70423 * C145 + C70431 + C70431 + C153811 * C161 +
                     C70425 * C146 + C70432 + C70432 + C153792 * C162 +
                     C70427 * C147 + C70433 + C70433 + C153738 * C163) *
                        C153513 * C70419 +
                    (C70736 + C70737 + C70738 + C70739) * C153513 * C153560) *
                       C153725 -
                   ((C70427 * C984 + C70946 + C70946 + C153738 * C996 +
                     C70425 * C983 + C70947 + C70947 + C153792 * C995 +
                     C70423 * C982 + C70948 + C70948 + C153811 * C994 +
                     C70421 * C981 + C70949 + C70949 + C153818 * C993) *
                        C153513 * C153560 +
                    (C70427 * C497 + C70950 + C70950 + C153738 * C521 +
                     C70425 * C498 + C70951 + C70951 + C153792 * C522 +
                     C70423 * C499 + C70952 + C70952 + C153811 * C523 +
                     C70421 * C500 + C70953 + C70953 + C153818 * C524) *
                        C153513 * C70419) *
                       C153477) *
                      C153397 * C153793 +
                  (((C70421 * C499 + C70962 + C70962 + C153818 * C523 +
                     C70423 * C498 + C70963 + C70963 + C153811 * C522 +
                     C70425 * C497 + C70964 + C70964 + C153792 * C521 +
                     C70427 * C496 + C70965 + C70965 + C153738 * C520) *
                        C153513 * C70419 +
                    (C70421 * C982 + C70966 + C70966 + C153818 * C994 +
                     C70423 * C983 + C70967 + C70967 + C153811 * C995 +
                     C70425 * C984 + C70968 + C70968 + C153792 * C996 +
                     C70427 * C985 + C70969 + C70969 + C153738 * C997) *
                        C153513 * C153560) *
                       C153477 -
                   ((C70747 + C70746 + C70745 + C70744) * C153513 * C153560 +
                    (C70427 * C148 + C70442 + C70442 + C153738 * C164 +
                     C70425 * C147 + C70443 + C70443 + C153792 * C163 +
                     C70423 * C146 + C70444 + C70444 + C153811 * C162 +
                     C70421 * C145 + C70445 + C70445 + C153818 * C161) *
                        C153513 * C70419) *
                       C153725) *
                      C153397 * C153794 +
                  (((C70421 * C146 + C70446 + C70446 + C153818 * C162 +
                     C70423 * C147 + C70447 + C70447 + C153811 * C163 +
                     C70425 * C148 + C70448 + C70448 + C153792 * C164 +
                     C70427 * C149 + C70449 + C70449 + C153738 * C165) *
                        C153513 * C70419 +
                    (C71192 + C71193 + C71194 + C71195) * C153513 * C153560) *
                       C153725 -
                   ((C70427 * C986 + C71390 + C71390 + C153738 * C998 +
                     C70425 * C985 + C71391 + C71391 + C153792 * C997 +
                     C70423 * C984 + C71392 + C71392 + C153811 * C996 +
                     C70421 * C983 + C71393 + C71393 + C153818 * C995) *
                        C153513 * C153560 +
                    (C70427 * C506 + C71394 + C71394 + C153738 * C530 +
                     C70425 * C496 + C71395 + C71395 + C153792 * C520 +
                     C70423 * C497 + C71396 + C71396 + C153811 * C521 +
                     C70421 * C498 + C71397 + C71397 + C153818 * C522) *
                        C153513 * C70419) *
                       C153477) *
                      C153397 * C678)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C74247 * C144 + C74252 + C74252 + C74241 * C160 +
                     C74249 * C145 + C74253 + C74253 + C153348 * C161) *
                        C153513 * C153819 +
                    (C74550 + C74551) * C153513 * C153815 + C74570 * C153805 +
                    C74571 * C153747) *
                       C153725 -
                   ((C74249 * C4144 + C74768 + C74768 + C153348 * C4152 +
                     C74247 * C4143 + C74769 + C74769 + C74241 * C4151) *
                        C153513 * C153747 +
                    (C74249 * C1799 + C74770 + C74770 + C153348 * C1809 +
                     C74247 * C1800 + C74771 + C74771 + C74241 * C1810) *
                        C153513 * C153805 +
                    (C74249 * C982 + C74772 + C74772 + C153348 * C994 +
                     C74247 * C981 + C74773 + C74773 + C74241 * C993) *
                        C153513 * C153815 +
                    (C74249 * C499 + C74774 + C74774 + C153348 * C523 +
                     C74247 * C500 + C74775 + C74775 + C74241 * C524) *
                        C153513 * C153819) *
                       C153477) *
                      C153397 * C153793 +
                  (((C74247 * C499 + C74784 + C74784 + C74241 * C523 +
                     C74249 * C498 + C74785 + C74785 + C153348 * C522) *
                        C153513 * C153819 +
                    (C74247 * C982 + C74786 + C74786 + C74241 * C994 +
                     C74249 * C983 + C74787 + C74787 + C153348 * C995) *
                        C153513 * C153815 +
                    (C74247 * C1799 + C74788 + C74788 + C74241 * C1809 +
                     C74249 * C1798 + C74789 + C74789 + C153348 * C1808) *
                        C153513 * C153805 +
                    (C74247 * C4144 + C74790 + C74790 + C74241 * C4152 +
                     C74249 * C4145 + C74791 + C74791 + C153348 * C4153) *
                        C153513 * C153747) *
                       C153477 -
                   (C74572 * C153747 + C74573 * C153805 +
                    (C74559 + C74558) * C153513 * C153815 +
                    (C74249 * C146 + C74266 + C74266 + C153348 * C162 +
                     C74247 * C145 + C74267 + C74267 + C74241 * C161) *
                        C153513 * C153819) *
                       C153725) *
                      C153397 * C153794 +
                  (((C74247 * C146 + C74268 + C74268 + C74241 * C162 +
                     C74249 * C147 + C74269 + C74269 + C153348 * C163) *
                        C153513 * C153819 +
                    (C75020 + C75021) * C153513 * C153815 +
                    (C75022 + C75023) * C153513 * C153805 +
                    (C75024 + C75025) * C153513 * C153747) *
                       C153725 -
                   ((C74249 * C4146 + C75220 + C75220 + C153348 * C4154 +
                     C74247 * C4145 + C75221 + C75221 + C74241 * C4153) *
                        C153513 * C153747 +
                    (C74249 * C1797 + C75222 + C75222 + C153348 * C1807 +
                     C74247 * C1798 + C75223 + C75223 + C74241 * C1808) *
                        C153513 * C153805 +
                    (C74249 * C984 + C75224 + C75224 + C153348 * C996 +
                     C74247 * C983 + C75225 + C75225 + C74241 * C995) *
                        C153513 * C153815 +
                    (C74249 * C497 + C75226 + C75226 + C153348 * C521 +
                     C74247 * C498 + C75227 + C75227 + C74241 * C522) *
                        C153513 * C153819) *
                       C153477) *
                      C153397 * C678)) /
                    (p * q * std::sqrt(p + q));
    d2ee[64] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C70421 * C144 + C70430 + C70430 + C153818 * C160 + C70423 * C145 +
            C70431 + C70431 + C153811 * C161 + C70425 * C146 + C70432 + C70432 +
            C153792 * C162 + C70427 * C147 + C70433 + C70433 + C153738 * C163) *
               C153513 * C70419 +
           (C70421 * C319 + C70434 + C70434 + C153818 * C343 + C70423 * C318 +
            C70435 + C70435 + C153811 * C342 + C70425 * C317 + C70436 + C70436 +
            C153792 * C341 + C70427 * C316 + C70437 + C70437 + C153738 * C340) *
               C153513 * C153560) *
              C153413 * C153397 * C130 -
          ((C70427 * C315 + C70438 + C70438 + C153738 * C339 + C70425 * C316 +
            C70439 + C70439 + C153792 * C340 + C70423 * C317 + C70440 + C70440 +
            C153811 * C341 + C70421 * C318 + C70441 + C70441 + C153818 * C342) *
               C153513 * C153560 +
           (C70427 * C148 + C70442 + C70442 + C153738 * C164 + C70425 * C147 +
            C70443 + C70443 + C153792 * C163 + C70423 * C146 + C70444 + C70444 +
            C153811 * C162 + C70421 * C145 + C70445 + C70445 + C153818 * C161) *
               C153513 * C70419) *
              C153413 * C153397 * C131 +
          ((C70421 * C146 + C70446 + C70446 + C153818 * C162 + C70423 * C147 +
            C70447 + C70447 + C153811 * C163 + C70425 * C148 + C70448 + C70448 +
            C153792 * C164 + C70427 * C149 + C70449 + C70449 + C153738 * C165) *
               C153513 * C70419 +
           (C70421 * C317 + C70450 + C70450 + C153818 * C341 + C70423 * C316 +
            C70451 + C70451 + C153811 * C340 + C70425 * C315 + C70452 + C70452 +
            C153792 * C339 + C70427 * C325 + C70453 + C70453 + C153738 * C349) *
               C153513 * C153560) *
              C153413 * C153397 * C132 -
          ((C70427 * C679 + C70454 + C70454 + C153738 * C681 + C70425 * C325 +
            C70455 + C70455 + C153792 * C349 + C70423 * C315 + C70456 + C70456 +
            C153811 * C339 + C70421 * C316 + C70457 + C70457 + C153818 * C340) *
               C153513 * C153560 +
           (C70427 * C150 + C70458 + C70458 + C153738 * C166 + C70425 * C149 +
            C70459 + C70459 + C153792 * C165 + C70423 * C148 + C70460 + C70460 +
            C153811 * C164 + C70421 * C147 + C70461 + C70461 + C153818 * C163) *
               C153513 * C70419) *
              C153413 * C153397 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C70421 * C144 + C70430 + C70430 + C153818 * C160 + C70423 * C145 +
             C70431 + C70431 + C153811 * C161 + C70425 * C146 + C70432 +
             C70432 + C153792 * C162 + C70427 * C147 + C70433 + C70433 +
             C153738 * C163) *
                C153513 * C70419 +
            (C70736 + C70737 + C70738 + C70739) * C153513 * C153560) *
               C153413 * C310 -
           ((C70740 + C70741 + C70742 + C70743) * C153513 * C153560 +
            (C70739 + C70738 + C70737 + C70736) * C153513 * C70419) *
               C153413 * C311 +
           ((C70743 + C70742 + C70741 + C70740) * C153513 * C70419 +
            (C70421 * C1227 + C70676 + C70676 + C153818 * C1237 +
             C70423 * C1226 + C70677 + C70677 + C153811 * C1236 +
             C70425 * C1225 + C70678 + C70678 + C153792 * C1235 +
             C70427 * C1224 + C70679 + C70679 + C153738 * C1234) *
                C153513 * C153560) *
               C153413 * C312) *
              C313 +
          (((C70744 + C70745 + C70746 + C70747) * C153513 * C70419 +
            (C70748 + C70749 + C70750 + C70751) * C153513 * C153560) *
               C153413 * C311 -
           ((C70747 + C70746 + C70745 + C70744) * C153513 * C153560 +
            (C70427 * C148 + C70442 + C70442 + C153738 * C164 + C70425 * C147 +
             C70443 + C70443 + C153792 * C163 + C70423 * C146 + C70444 +
             C70444 + C153811 * C162 + C70421 * C145 + C70445 + C70445 +
             C153818 * C161) *
                C153513 * C70419) *
               C153413 * C310 -
           ((C70427 * C1223 + C70700 + C70700 + C153738 * C1233 +
             C70425 * C1224 + C70701 + C70701 + C153792 * C1234 +
             C70423 * C1225 + C70702 + C70702 + C153811 * C1235 +
             C70421 * C1226 + C70703 + C70703 + C153818 * C1236) *
                C153513 * C153560 +
            (C70751 + C70750 + C70749 + C70748) * C153513 * C70419) *
               C153413 * C312) *
              C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
            C74253 + C74253 + C153348 * C161) *
               C153513 * C153819 +
           (C74247 * C319 + C74254 + C74254 + C74241 * C343 + C74249 * C318 +
            C74255 + C74255 + C153348 * C342) *
               C153513 * C153815 +
           (C74247 * C320 + C74256 + C74256 + C74241 * C344 + C74249 * C321 +
            C74257 + C74257 + C153348 * C345) *
               C153513 * C153805 +
           (C74247 * C1227 + C74258 + C74258 + C74241 * C1237 + C74249 * C1226 +
            C74259 + C74259 + C153348 * C1236) *
               C153513 * C153747) *
              C153413 * C153397 * C130 -
          ((C74249 * C1225 + C74260 + C74260 + C153348 * C1235 +
            C74247 * C1226 + C74261 + C74261 + C74241 * C1236) *
               C153513 * C153747 +
           (C74249 * C322 + C74262 + C74262 + C153348 * C346 + C74247 * C321 +
            C74263 + C74263 + C74241 * C345) *
               C153513 * C153805 +
           (C74249 * C317 + C74264 + C74264 + C153348 * C341 + C74247 * C318 +
            C74265 + C74265 + C74241 * C342) *
               C153513 * C153815 +
           (C74249 * C146 + C74266 + C74266 + C153348 * C162 + C74247 * C145 +
            C74267 + C74267 + C74241 * C161) *
               C153513 * C153819) *
              C153413 * C153397 * C131 +
          ((C74247 * C146 + C74268 + C74268 + C74241 * C162 + C74249 * C147 +
            C74269 + C74269 + C153348 * C163) *
               C153513 * C153819 +
           (C74247 * C317 + C74270 + C74270 + C74241 * C341 + C74249 * C316 +
            C74271 + C74271 + C153348 * C340) *
               C153513 * C153815 +
           (C74247 * C322 + C74272 + C74272 + C74241 * C346 + C74249 * C323 +
            C74273 + C74273 + C153348 * C347) *
               C153513 * C153805 +
           (C74247 * C1225 + C74274 + C74274 + C74241 * C1235 + C74249 * C1224 +
            C74275 + C74275 + C153348 * C1234) *
               C153513 * C153747) *
              C153413 * C153397 * C132 -
          ((C74249 * C1223 + C74276 + C74276 + C153348 * C1233 +
            C74247 * C1224 + C74277 + C74277 + C74241 * C1234) *
               C153513 * C153747 +
           (C74249 * C324 + C74278 + C74278 + C153348 * C348 + C74247 * C323 +
            C74279 + C74279 + C74241 * C347) *
               C153513 * C153805 +
           (C74249 * C315 + C74280 + C74280 + C153348 * C339 + C74247 * C316 +
            C74281 + C74281 + C74241 * C340) *
               C153513 * C153815 +
           (C74249 * C148 + C74282 + C74282 + C153348 * C164 + C74247 * C147 +
            C74283 + C74283 + C74241 * C163) *
               C153513 * C153819) *
              C153413 * C153397 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
             C74253 + C74253 + C153348 * C161) *
                C153513 * C153819 +
            (C74550 + C74551) * C153513 * C153815 + C74570 * C153805 +
            C74571 * C153747) *
               C153413 * C310 -
           ((C74556 + C74557) * C153513 * C153747 +
            (C74555 + C74554) * C153513 * C153805 +
            (C74553 + C74552) * C153513 * C153815 +
            (C74551 + C74550) * C153513 * C153819) *
               C153413 * C311 +
           (C74570 * C153819 + C74571 * C153815 +
            (C74557 + C74556) * C153513 * C153805 +
            (C74247 * C4587 + C74496 + C74496 + C74241 * C4593 +
             C74249 * C4586 + C74497 + C74497 + C153348 * C4592) *
                C153513 * C153747) *
               C153413 * C312) *
              C313 +
          (((C74558 + C74559) * C153513 * C153819 +
            (C74560 + C74561) * C153513 * C153815 +
            (C74562 + C74563) * C153513 * C153805 +
            (C74564 + C74565) * C153513 * C153747) *
               C153413 * C311 -
           (C74572 * C153747 + C74573 * C153805 +
            (C74559 + C74558) * C153513 * C153815 +
            (C74249 * C146 + C74266 + C74266 + C153348 * C162 + C74247 * C145 +
             C74267 + C74267 + C74241 * C161) *
                C153513 * C153819) *
               C153413 * C310 -
           ((C74249 * C4585 + C74516 + C74516 + C153348 * C4591 +
             C74247 * C4586 + C74517 + C74517 + C74241 * C4592) *
                C153513 * C153747 +
            (C74565 + C74564) * C153513 * C153805 + C74572 * C153815 +
            C74573 * C153819) *
               C153413 * C312) *
              C153384)) /
            (p * q * std::sqrt(p + q));
    d2ee[65] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C70421 * C144 + C70430 + C70430 + C153818 * C160 +
                     C70423 * C145 + C70431 + C70431 + C153811 * C161 +
                     C70425 * C146 + C70432 + C70432 + C153792 * C162 +
                     C70427 * C147 + C70433 + C70433 + C153738 * C163) *
                        C153513 * C70419 +
                    (C70736 + C70737 + C70738 + C70739) * C153513 * C153560) *
                       C153413 * C153795 -
                   ((C70740 + C70741 + C70742 + C70743) * C153513 * C153560 +
                    (C70739 + C70738 + C70737 + C70736) * C153513 * C70419) *
                       C153413 * C153796 +
                   ((C70743 + C70742 + C70741 + C70740) * C153513 * C70419 +
                    (C72048 + C72049 + C72050 + C72051) * C153513 * C153560) *
                       C153413 * C1509) *
                      C153716 +
                  (((C70744 + C70745 + C70746 + C70747) * C153513 * C70419 +
                    (C70748 + C70749 + C70750 + C70751) * C153513 * C153560) *
                       C153413 * C153796 -
                   ((C70747 + C70746 + C70745 + C70744) * C153513 * C153560 +
                    (C70427 * C148 + C70442 + C70442 + C153738 * C164 +
                     C70425 * C147 + C70443 + C70443 + C153792 * C163 +
                     C70423 * C146 + C70444 + C70444 + C153811 * C162 +
                     C70421 * C145 + C70445 + C70445 + C153818 * C161) *
                        C153513 * C70419) *
                       C153413 * C153795 -
                   ((C70427 * C1223 + C70700 + C70700 + C153738 * C1233 +
                     C70425 * C1224 + C70701 + C70701 + C153792 * C1234 +
                     C70423 * C1225 + C70702 + C70702 + C153811 * C1235 +
                     C70421 * C1226 + C70703 + C70703 + C153818 * C1236) *
                        C153513 * C153560 +
                    (C70751 + C70750 + C70749 + C70748) * C153513 * C70419) *
                       C153413 * C1509) *
                      C153384)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C74247 * C144 + C74252 + C74252 + C74241 * C160 +
                     C74249 * C145 + C74253 + C74253 + C153348 * C161) *
                        C153513 * C153819 +
                    (C74550 + C74551) * C153513 * C153815 + C74570 * C153805 +
                    C74571 * C153747) *
                       C153413 * C153795 -
                   (C75882 * C153747 + C75883 * C153805 +
                    (C74553 + C74552) * C153513 * C153815 +
                    (C74551 + C74550) * C153513 * C153819) *
                       C153413 * C153796 +
                   (C74570 * C153819 + C74571 * C153815 +
                    (C74557 + C74556) * C153513 * C153805 +
                    (C75888 + C75889) * C153513 * C153747) *
                       C153413 * C1509) *
                      C153716 +
                  (((C74558 + C74559) * C153513 * C153819 +
                    (C74560 + C74561) * C153513 * C153815 +
                    (C74562 + C74563) * C153513 * C153805 +
                    (C74564 + C74565) * C153513 * C153747) *
                       C153413 * C153796 -
                   (C74572 * C153747 + C74573 * C153805 +
                    (C74559 + C74558) * C153513 * C153815 +
                    (C74249 * C146 + C74266 + C74266 + C153348 * C162 +
                     C74247 * C145 + C74267 + C74267 + C74241 * C161) *
                        C153513 * C153819) *
                       C153413 * C153795 -
                   ((C74249 * C4585 + C74516 + C74516 + C153348 * C4591 +
                     C74247 * C4586 + C74517 + C74517 + C74241 * C4592) *
                        C153513 * C153747 +
                    (C74565 + C74564) * C153513 * C153805 + C74572 * C153815 +
                    C74573 * C153819) *
                       C153413 * C1509) *
                      C153384)) /
                    (p * q * std::sqrt(p + q));
    d2ee[66] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C70421 * C144 + C70430 + C70430 + C153818 * C160 +
                     C70423 * C145 + C70431 + C70431 + C153811 * C161 +
                     C70425 * C146 + C70432 + C70432 + C153792 * C162 +
                     C70427 * C147 + C70433 + C70433 + C153738 * C163) *
                        C153513 * C70419 +
                    (C70736 + C70737 + C70738 + C70739) * C153513 * C153560) *
                       C153725 -
                   ((C71696 + C71697 + C71698 + C71699) * C153513 * C153560 +
                    (C70427 * C497 + C70950 + C70950 + C153738 * C521 +
                     C70425 * C498 + C70951 + C70951 + C153792 * C522 +
                     C70423 * C499 + C70952 + C70952 + C153811 * C523 +
                     C70421 * C500 + C70953 + C70953 + C153818 * C524) *
                        C153513 * C70419) *
                       C153477) *
                      C153795 +
                  (((C71699 + C71698 + C71697 + C71696) * C153513 * C70419 +
                    (C72936 + C72937 + C72938 + C72939) * C153513 * C153560) *
                       C153477 -
                   ((C70740 + C70741 + C70742 + C70743) * C153513 * C153560 +
                    (C70739 + C70738 + C70737 + C70736) * C153513 * C70419) *
                       C153725) *
                      C153796 +
                  (((C70743 + C70742 + C70741 + C70740) * C153513 * C70419 +
                    (C72048 + C72049 + C72050 + C72051) * C153513 * C153560) *
                       C153725 -
                   ((C70427 * C4146 + C72924 + C72924 + C153738 * C4154 +
                     C70425 * C4145 + C72925 + C72925 + C153792 * C4153 +
                     C70423 * C4144 + C72926 + C72926 + C153811 * C4152 +
                     C70421 * C4143 + C72927 + C72927 + C153818 * C4151) *
                        C153513 * C153560 +
                    (C72939 + C72938 + C72937 + C72936) * C153513 * C70419) *
                       C153477) *
                      C1509) *
                 C153378) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C74247 * C144 + C74252 + C74252 + C74241 * C160 +
                     C74249 * C145 + C74253 + C74253 + C153348 * C161) *
                        C153513 * C153819 +
                    (C74550 + C74551) * C153513 * C153815 + C74570 * C153805 +
                    C74571 * C153747) *
                       C153725 -
                   (C76770 * C153747 + C76771 * C153805 +
                    (C75542 + C75543) * C153513 * C153815 +
                    (C74249 * C499 + C74774 + C74774 + C153348 * C523 +
                     C74247 * C500 + C74775 + C74775 + C74241 * C524) *
                        C153513 * C153819) *
                       C153477) *
                      C153795 +
                  (((C75543 + C75542) * C153513 * C153819 +
                    (C75541 + C75540) * C153513 * C153815 +
                    (C75539 + C75538) * C153513 * C153805 +
                    (C76776 + C76777) * C153513 * C153747) *
                       C153477 -
                   (C75882 * C153747 + C75883 * C153805 +
                    (C74553 + C74552) * C153513 * C153815 +
                    (C74551 + C74550) * C153513 * C153819) *
                       C153725) *
                      C153796 +
                  ((C74570 * C153819 + C74571 * C153815 +
                    (C74557 + C74556) * C153513 * C153805 +
                    (C75888 + C75889) * C153513 * C153747) *
                       C153725 -
                   ((C74249 * C29033 + C76768 + C76768 + C153348 * C29037 +
                     C74247 * C29032 + C76769 + C76769 + C74241 * C29036) *
                        C153513 * C153747 +
                    (C76777 + C76776) * C153513 * C153805 + C76770 * C153815 +
                    C76771 * C153819) *
                       C153477) *
                      C1509) *
                 C153378) /
                    (p * q * std::sqrt(p + q));
    d2ee[67] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C70421 * C144 + C70430 + C70430 + C153818 * C160 + C70423 * C145 +
            C70431 + C70431 + C153811 * C161 + C70425 * C146 + C70432 + C70432 +
            C153792 * C162 + C70427 * C147 + C70433 + C70433 + C153738 * C163) *
               C153513 * C70419 +
           (C70736 + C70737 + C70738 + C70739) * C153513 * C153560) *
              C153413 * C1218 -
          ((C70740 + C70741 + C70742 + C70743) * C153513 * C153560 +
           (C70739 + C70738 + C70737 + C70736) * C153513 * C70419) *
              C153413 * C1219 +
          ((C70743 + C70742 + C70741 + C70740) * C153513 * C70419 +
           (C72048 + C72049 + C72050 + C72051) * C153513 * C153560) *
              C153413 * C1220 -
          ((C70427 * C2992 + C72036 + C72036 + C153738 * C3000 +
            C70425 * C2991 + C72037 + C72037 + C153792 * C2999 +
            C70423 * C2990 + C72038 + C72038 + C153811 * C2998 +
            C70421 * C2989 + C72039 + C72039 + C153818 * C2997) *
               C153513 * C153560 +
           (C72051 + C72050 + C72049 + C72048) * C153513 * C70419) *
              C153413 * C1221) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C70421 * C144 + C70430 + C70430 + C153818 * C160 + C70423 * C145 +
             C70431 + C70431 + C153811 * C161 + C70425 * C146 + C70432 +
             C70432 + C153792 * C162 + C70427 * C147 + C70433 + C70433 +
             C153738 * C163) *
                C153513 * C70419 +
            (C70736 + C70737 + C70738 + C70739) * C153513 * C153560) *
               C153413 * C1131 -
           ((C70740 + C70741 + C70742 + C70743) * C153513 * C153560 +
            (C70739 + C70738 + C70737 + C70736) * C153513 * C70419) *
               C153413 * C153449) *
              C1133 +
          (((C70744 + C70745 + C70746 + C70747) * C153513 * C70419 +
            (C70748 + C70749 + C70750 + C70751) * C153513 * C153560) *
               C153413 * C153449 -
           ((C70747 + C70746 + C70745 + C70744) * C153513 * C153560 +
            (C70427 * C148 + C70442 + C70442 + C153738 * C164 + C70425 * C147 +
             C70443 + C70443 + C153792 * C163 + C70423 * C146 + C70444 +
             C70444 + C153811 * C162 + C70421 * C145 + C70445 + C70445 +
             C153818 * C161) *
                C153513 * C70419) *
               C153413 * C1131) *
              C1134 +
          (((C70421 * C146 + C70446 + C70446 + C153818 * C162 + C70423 * C147 +
             C70447 + C70447 + C153811 * C163 + C70425 * C148 + C70448 +
             C70448 + C153792 * C164 + C70427 * C149 + C70449 + C70449 +
             C153738 * C165) *
                C153513 * C70419 +
            (C71192 + C71193 + C71194 + C71195) * C153513 * C153560) *
               C153413 * C1131 -
           ((C70427 * C326 + C71180 + C71180 + C153738 * C350 + C70425 * C324 +
             C71181 + C71181 + C153792 * C348 + C70423 * C323 + C71182 +
             C71182 + C153811 * C347 + C70421 * C322 + C71183 + C71183 +
             C153818 * C346) *
                C153513 * C153560 +
            (C71195 + C71194 + C71193 + C71192) * C153513 * C70419) *
               C153413 * C153449) *
              C1135)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C70421 * C144 + C70430 + C70430 + C153818 * C160 + C70423 * C145 +
             C70431 + C70431 + C153811 * C161 + C70425 * C146 + C70432 +
             C70432 + C153792 * C162 + C70427 * C147 + C70433 + C70433 +
             C153738 * C163) *
                C153513 * C70419 +
            (C70736 + C70737 + C70738 + C70739) * C153513 * C153560) *
               C493 -
           ((C71696 + C71697 + C71698 + C71699) * C153513 * C153560 +
            (C70427 * C497 + C70950 + C70950 + C153738 * C521 + C70425 * C498 +
             C70951 + C70951 + C153792 * C522 + C70423 * C499 + C70952 +
             C70952 + C153811 * C523 + C70421 * C500 + C70953 + C70953 +
             C153818 * C524) *
                C153513 * C70419) *
               C494 +
           ((C70421 * C501 + C70954 + C70954 + C153818 * C525 + C70423 * C502 +
             C70955 + C70955 + C153811 * C526 + C70425 * C503 + C70956 +
             C70956 + C153792 * C527 + C70427 * C504 + C70957 + C70957 +
             C153738 * C528) *
                C153513 * C70419 +
            (C72266 + C72267 + C72268 + C72269) * C153513 * C153560) *
               C495) *
              C1131 +
          (((C71699 + C71698 + C71697 + C71696) * C153513 * C70419 +
            (C70421 * C1800 + C71664 + C71664 + C153818 * C1810 +
             C70423 * C1799 + C71665 + C71665 + C153811 * C1809 +
             C70425 * C1798 + C71666 + C71666 + C153792 * C1808 +
             C70427 * C1797 + C71667 + C71667 + C153738 * C1807) *
                C153513 * C153560) *
               C494 -
           ((C70740 + C70741 + C70742 + C70743) * C153513 * C153560 +
            (C70739 + C70738 + C70737 + C70736) * C153513 * C70419) *
               C493 -
           ((C70427 * C3330 + C72254 + C72254 + C153738 * C3338 +
             C70425 * C3329 + C72255 + C72255 + C153792 * C3337 +
             C70423 * C3328 + C72256 + C72256 + C153811 * C3336 +
             C70421 * C3327 + C72257 + C72257 + C153818 * C3335) *
                C153513 * C153560 +
            (C72269 + C72268 + C72267 + C72266) * C153513 * C70419) *
               C495) *
              C153449) *
         C153378) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
             C74253 + C74253 + C153348 * C161) *
                C153513 * C153819 +
            (C74550 + C74551) * C153513 * C153815 + C74570 * C153805 +
            C74571 * C153747) *
               C153413 * C1131 -
           ((C74556 + C74557) * C153513 * C153747 +
            (C74555 + C74554) * C153513 * C153805 +
            (C74553 + C74552) * C153513 * C153815 +
            (C74551 + C74550) * C153513 * C153819) *
               C153413 * C153449) *
              C1133 +
          (((C74558 + C74559) * C153513 * C153819 +
            (C74560 + C74561) * C153513 * C153815 +
            (C74562 + C74563) * C153513 * C153805 +
            (C74564 + C74565) * C153513 * C153747) *
               C153413 * C153449 -
           (C74572 * C153747 + C74573 * C153805 +
            (C74559 + C74558) * C153513 * C153815 +
            (C74249 * C146 + C74266 + C74266 + C153348 * C162 + C74247 * C145 +
             C74267 + C74267 + C74241 * C161) *
                C153513 * C153819) *
               C153413 * C1131) *
              C1134 +
          (((C74247 * C146 + C74268 + C74268 + C74241 * C162 + C74249 * C147 +
             C74269 + C74269 + C153348 * C163) *
                C153513 * C153819 +
            (C75020 + C75021) * C153513 * C153815 +
            (C75022 + C75023) * C153513 * C153805 +
            (C75024 + C75025) * C153513 * C153747) *
               C153413 * C1131 -
           ((C74249 * C2992 + C75006 + C75006 + C153348 * C3000 +
             C74247 * C2991 + C75007 + C75007 + C74241 * C2999) *
                C153513 * C153747 +
            (C75025 + C75024) * C153513 * C153805 +
            (C75023 + C75022) * C153513 * C153815 +
            (C75021 + C75020) * C153513 * C153819) *
               C153413 * C153449) *
              C1135)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
            C74253 + C74253 + C153348 * C161) *
               C153513 * C153819 +
           (C74550 + C74551) * C153513 * C153815 + C74570 * C153805 +
           C74571 * C153747) *
              C153413 * C1218 -
          (C75882 * C153747 + C75883 * C153805 +
           (C74553 + C74552) * C153513 * C153815 +
           (C74551 + C74550) * C153513 * C153819) *
              C153413 * C1219 +
          (C74570 * C153819 + C74571 * C153815 +
           (C74557 + C74556) * C153513 * C153805 +
           (C75888 + C75889) * C153513 * C153747) *
              C153413 * C1220 -
          ((C74249 * C28379 + C75880 + C75880 + C153348 * C28383 +
            C74247 * C28378 + C75881 + C75881 + C74241 * C28382) *
               C153513 * C153747 +
           (C75889 + C75888) * C153513 * C153805 + C75882 * C153815 +
           C75883 * C153819) *
              C153413 * C1221) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
             C74253 + C74253 + C153348 * C161) *
                C153513 * C153819 +
            (C74550 + C74551) * C153513 * C153815 + C74570 * C153805 +
            C74571 * C153747) *
               C493 -
           ((C75538 + C75539) * C153513 * C153747 +
            (C75540 + C75541) * C153513 * C153805 +
            (C75542 + C75543) * C153513 * C153815 +
            (C74249 * C499 + C74774 + C74774 + C153348 * C523 + C74247 * C500 +
             C74775 + C74775 + C74241 * C524) *
                C153513 * C153819) *
               C494 +
           ((C74247 * C501 + C74776 + C74776 + C74241 * C525 + C74249 * C502 +
             C74777 + C74777 + C153348 * C526) *
                C153513 * C153819 +
            (C76110 + C76111) * C153513 * C153815 +
            (C76112 + C76113) * C153513 * C153805 +
            (C76114 + C76115) * C153513 * C153747) *
               C495) *
              C1131 +
          (((C75543 + C75542) * C153513 * C153819 +
            (C75541 + C75540) * C153513 * C153815 +
            (C75539 + C75538) * C153513 * C153805 +
            (C74247 * C5603 + C75498 + C75498 + C74241 * C5609 +
             C74249 * C5602 + C75499 + C75499 + C153348 * C5608) *
                C153513 * C153747) *
               C494 -
           (C75882 * C153747 + C75883 * C153805 +
            (C74553 + C74552) * C153513 * C153815 +
            (C74551 + C74550) * C153513 * C153819) *
               C493 -
           ((C74249 * C28571 + C76096 + C76096 + C153348 * C28575 +
             C74247 * C28570 + C76097 + C76097 + C74241 * C28574) *
                C153513 * C153747 +
            (C76115 + C76114) * C153513 * C153805 +
            (C76113 + C76112) * C153513 * C153815 +
            (C76111 + C76110) * C153513 * C153819) *
               C495) *
              C153449) *
         C153378) /
            (p * q * std::sqrt(p + q));
    d2ee[68] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C70421 * C144 + C70430 + C70430 + C153818 * C160 +
                      C70423 * C145 + C70431 + C70431 + C153811 * C161 +
                      C70425 * C146 + C70432 + C70432 + C153792 * C162 +
                      C70427 * C147 + C70433 + C70433 + C153738 * C163) *
                         C153513 * C70419 +
                     (C70736 + C70737 + C70738 + C70739) * C153513 * C153560) *
                        C153725 -
                    ((C71696 + C71697 + C71698 + C71699) * C153513 * C153560 +
                     (C70427 * C497 + C70950 + C70950 + C153738 * C521 +
                      C70425 * C498 + C70951 + C70951 + C153792 * C522 +
                      C70423 * C499 + C70952 + C70952 + C153811 * C523 +
                      C70421 * C500 + C70953 + C70953 + C153818 * C524) *
                         C153513 * C70419) *
                        C153477) *
                       C1131 +
                   (((C71699 + C71698 + C71697 + C71696) * C153513 * C70419 +
                     (C70421 * C1800 + C71664 + C71664 + C153818 * C1810 +
                      C70423 * C1799 + C71665 + C71665 + C153811 * C1809 +
                      C70425 * C1798 + C71666 + C71666 + C153792 * C1808 +
                      C70427 * C1797 + C71667 + C71667 + C153738 * C1807) *
                         C153513 * C153560) *
                        C153477 -
                    ((C70740 + C70741 + C70742 + C70743) * C153513 * C153560 +
                     (C70739 + C70738 + C70737 + C70736) * C153513 * C70419) *
                        C153725) *
                       C153449) *
                      C153716 +
                  ((((C70421 * C499 + C70962 + C70962 + C153818 * C523 +
                      C70423 * C498 + C70963 + C70963 + C153811 * C522 +
                      C70425 * C497 + C70964 + C70964 + C153792 * C521 +
                      C70427 * C496 + C70965 + C70965 + C153738 * C520) *
                         C153513 * C70419 +
                     (C71700 + C71701 + C71702 + C71703) * C153513 * C153560) *
                        C153477 -
                    ((C70747 + C70746 + C70745 + C70744) * C153513 * C153560 +
                     (C70427 * C148 + C70442 + C70442 + C153738 * C164 +
                      C70425 * C147 + C70443 + C70443 + C153792 * C163 +
                      C70423 * C146 + C70444 + C70444 + C153811 * C162 +
                      C70421 * C145 + C70445 + C70445 + C153818 * C161) *
                         C153513 * C70419) *
                        C153725) *
                       C1131 +
                   (((C70744 + C70745 + C70746 + C70747) * C153513 * C70419 +
                     (C70748 + C70749 + C70750 + C70751) * C153513 * C153560) *
                        C153725 -
                    ((C70427 * C1796 + C71676 + C71676 + C153738 * C1806 +
                      C70425 * C1797 + C71677 + C71677 + C153792 * C1807 +
                      C70423 * C1798 + C71678 + C71678 + C153811 * C1808 +
                      C70421 * C1799 + C71679 + C71679 + C153818 * C1809) *
                         C153513 * C153560 +
                     (C71703 + C71702 + C71701 + C71700) * C153513 * C70419) *
                        C153477) *
                       C153449) *
                      C153384)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C74247 * C144 + C74252 + C74252 + C74241 * C160 +
                      C74249 * C145 + C74253 + C74253 + C153348 * C161) *
                         C153513 * C153819 +
                     (C74550 + C74551) * C153513 * C153815 + C74570 * C153805 +
                     C74571 * C153747) *
                        C153725 -
                    ((C75538 + C75539) * C153513 * C153747 +
                     (C75540 + C75541) * C153513 * C153805 +
                     (C75542 + C75543) * C153513 * C153815 +
                     (C74249 * C499 + C74774 + C74774 + C153348 * C523 +
                      C74247 * C500 + C74775 + C74775 + C74241 * C524) *
                         C153513 * C153819) *
                        C153477) *
                       C1131 +
                   (((C75543 + C75542) * C153513 * C153819 +
                     (C75541 + C75540) * C153513 * C153815 +
                     (C75539 + C75538) * C153513 * C153805 +
                     (C74247 * C5603 + C75498 + C75498 + C74241 * C5609 +
                      C74249 * C5602 + C75499 + C75499 + C153348 * C5608) *
                         C153513 * C153747) *
                        C153477 -
                    (C75882 * C153747 + C75883 * C153805 +
                     (C74553 + C74552) * C153513 * C153815 +
                     (C74551 + C74550) * C153513 * C153819) *
                        C153725) *
                       C153449) *
                      C153716 +
                  ((((C74247 * C499 + C74784 + C74784 + C74241 * C523 +
                      C74249 * C498 + C74785 + C74785 + C153348 * C522) *
                         C153513 * C153819 +
                     (C75544 + C75545) * C153513 * C153815 +
                     (C75546 + C75547) * C153513 * C153805 +
                     (C75548 + C75549) * C153513 * C153747) *
                        C153477 -
                    (C74572 * C153747 + C74573 * C153805 +
                     (C74559 + C74558) * C153513 * C153815 +
                     (C74249 * C146 + C74266 + C74266 + C153348 * C162 +
                      C74247 * C145 + C74267 + C74267 + C74241 * C161) *
                         C153513 * C153819) *
                        C153725) *
                       C1131 +
                   (((C74558 + C74559) * C153513 * C153819 +
                     (C74560 + C74561) * C153513 * C153815 +
                     (C74562 + C74563) * C153513 * C153805 +
                     (C74564 + C74565) * C153513 * C153747) *
                        C153725 -
                    ((C74249 * C5601 + C75512 + C75512 + C153348 * C5607 +
                      C74247 * C5602 + C75513 + C75513 + C74241 * C5608) *
                         C153513 * C153747 +
                     (C75549 + C75548) * C153513 * C153805 +
                     (C75547 + C75546) * C153513 * C153815 +
                     (C75545 + C75544) * C153513 * C153819) *
                        C153477) *
                       C153449) *
                      C153384)) /
                    (p * q * std::sqrt(p + q));
    d2ee[69] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C70421 * C144 + C70430 + C70430 + C153818 * C160 + C70423 * C145 +
             C70431 + C70431 + C153811 * C161 + C70425 * C146 + C70432 +
             C70432 + C153792 * C162 + C70427 * C147 + C70433 + C70433 +
             C153738 * C163) *
                C153513 * C70419 +
            (C70736 + C70737 + C70738 + C70739) * C153513 * C153560) *
               C153413 * C1131 -
           ((C70740 + C70741 + C70742 + C70743) * C153513 * C153560 +
            (C70739 + C70738 + C70737 + C70736) * C153513 * C70419) *
               C153413 * C153449) *
              C1133 +
          (((C70744 + C70745 + C70746 + C70747) * C153513 * C70419 +
            (C70748 + C70749 + C70750 + C70751) * C153513 * C153560) *
               C153413 * C153449 -
           ((C70747 + C70746 + C70745 + C70744) * C153513 * C153560 +
            (C70427 * C148 + C70442 + C70442 + C153738 * C164 + C70425 * C147 +
             C70443 + C70443 + C153792 * C163 + C70423 * C146 + C70444 +
             C70444 + C153811 * C162 + C70421 * C145 + C70445 + C70445 +
             C153818 * C161) *
                C153513 * C70419) *
               C153413 * C1131) *
              C1134 +
          (((C70421 * C146 + C70446 + C70446 + C153818 * C162 + C70423 * C147 +
             C70447 + C70447 + C153811 * C163 + C70425 * C148 + C70448 +
             C70448 + C153792 * C164 + C70427 * C149 + C70449 + C70449 +
             C153738 * C165) *
                C153513 * C70419 +
            (C71192 + C71193 + C71194 + C71195) * C153513 * C153560) *
               C153413 * C1131 -
           ((C70427 * C326 + C71180 + C71180 + C153738 * C350 + C70425 * C324 +
             C71181 + C71181 + C153792 * C348 + C70423 * C323 + C71182 +
             C71182 + C153811 * C347 + C70421 * C322 + C71183 + C71183 +
             C153818 * C346) *
                C153513 * C153560 +
            (C71195 + C71194 + C71193 + C71192) * C153513 * C70419) *
               C153413 * C153449) *
              C1135)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C70421 * C144 + C70430 + C70430 + C153818 * C160 + C70423 * C145 +
            C70431 + C70431 + C153811 * C161 + C70425 * C146 + C70432 + C70432 +
            C153792 * C162 + C70427 * C147 + C70433 + C70433 + C153738 * C163) *
               C153513 * C70419 +
           (C70736 + C70737 + C70738 + C70739) * C153513 * C153560) *
              C153413 * C1218 -
          ((C70740 + C70741 + C70742 + C70743) * C153513 * C153560 +
           (C70739 + C70738 + C70737 + C70736) * C153513 * C70419) *
              C153413 * C1219 +
          ((C70743 + C70742 + C70741 + C70740) * C153513 * C70419 +
           (C72048 + C72049 + C72050 + C72051) * C153513 * C153560) *
              C153413 * C1220 -
          ((C70427 * C2992 + C72036 + C72036 + C153738 * C3000 +
            C70425 * C2991 + C72037 + C72037 + C153792 * C2999 +
            C70423 * C2990 + C72038 + C72038 + C153811 * C2998 +
            C70421 * C2989 + C72039 + C72039 + C153818 * C2997) *
               C153513 * C153560 +
           (C72051 + C72050 + C72049 + C72048) * C153513 * C70419) *
              C153413 * C1221) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
             C74253 + C74253 + C153348 * C161) *
                C153513 * C153819 +
            (C74550 + C74551) * C153513 * C153815 + C74570 * C153805 +
            C74571 * C153747) *
               C153413 * C1131 -
           ((C74556 + C74557) * C153513 * C153747 +
            (C74555 + C74554) * C153513 * C153805 +
            (C74553 + C74552) * C153513 * C153815 +
            (C74551 + C74550) * C153513 * C153819) *
               C153413 * C153449) *
              C1133 +
          (((C74558 + C74559) * C153513 * C153819 +
            (C74560 + C74561) * C153513 * C153815 +
            (C74562 + C74563) * C153513 * C153805 +
            (C74564 + C74565) * C153513 * C153747) *
               C153413 * C153449 -
           (C74572 * C153747 + C74573 * C153805 +
            (C74559 + C74558) * C153513 * C153815 +
            (C74249 * C146 + C74266 + C74266 + C153348 * C162 + C74247 * C145 +
             C74267 + C74267 + C74241 * C161) *
                C153513 * C153819) *
               C153413 * C1131) *
              C1134 +
          (((C74247 * C146 + C74268 + C74268 + C74241 * C162 + C74249 * C147 +
             C74269 + C74269 + C153348 * C163) *
                C153513 * C153819 +
            (C75020 + C75021) * C153513 * C153815 +
            (C75022 + C75023) * C153513 * C153805 +
            (C75024 + C75025) * C153513 * C153747) *
               C153413 * C1131 -
           ((C74249 * C2992 + C75006 + C75006 + C153348 * C3000 +
             C74247 * C2991 + C75007 + C75007 + C74241 * C2999) *
                C153513 * C153747 +
            (C75025 + C75024) * C153513 * C153805 +
            (C75023 + C75022) * C153513 * C153815 +
            (C75021 + C75020) * C153513 * C153819) *
               C153413 * C153449) *
              C1135)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
            C74253 + C74253 + C153348 * C161) *
               C153513 * C153819 +
           (C74550 + C74551) * C153513 * C153815 + C74570 * C153805 +
           C74571 * C153747) *
              C153413 * C1218 -
          (C75882 * C153747 + C75883 * C153805 +
           (C74553 + C74552) * C153513 * C153815 +
           (C74551 + C74550) * C153513 * C153819) *
              C153413 * C1219 +
          (C74570 * C153819 + C74571 * C153815 +
           (C74557 + C74556) * C153513 * C153805 +
           (C75888 + C75889) * C153513 * C153747) *
              C153413 * C1220 -
          ((C74249 * C28379 + C75880 + C75880 + C153348 * C28383 +
            C74247 * C28378 + C75881 + C75881 + C74241 * C28382) *
               C153513 * C153747 +
           (C75889 + C75888) * C153513 * C153805 + C75882 * C153815 +
           C75883 * C153819) *
              C153413 * C1221) *
         C153378) /
            (p * q * std::sqrt(p + q));
    d2ee[70] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C70421 * C144 + C70430 + C70430 + C153818 * C160 +
                      C70423 * C145 + C70431 + C70431 + C153811 * C161 +
                      C70425 * C146 + C70432 + C70432 + C153792 * C162 +
                      C70427 * C147 + C70433 + C70433 + C153738 * C163) *
                         C153513 * C70419 +
                     (C70736 + C70737 + C70738 + C70739) * C153513 * C153560) *
                        C1938 -
                    ((C71696 + C71697 + C71698 + C71699) * C153513 * C153560 +
                     (C70427 * C497 + C70950 + C70950 + C153738 * C521 +
                      C70425 * C498 + C70951 + C70951 + C153792 * C522 +
                      C70423 * C499 + C70952 + C70952 + C153811 * C523 +
                      C70421 * C500 + C70953 + C70953 + C153818 * C524) *
                         C153513 * C70419) *
                        C153477) *
                       C153724 +
                   (((C71699 + C71698 + C71697 + C71696) * C153513 * C70419 +
                     (C72936 + C72937 + C72938 + C72939) * C153513 * C153560) *
                        C153477 -
                    ((C70740 + C70741 + C70742 + C70743) * C153513 * C153560 +
                     (C70739 + C70738 + C70737 + C70736) * C153513 * C70419) *
                        C1938) *
                       C153449) *
                      C153716 +
                  ((((C70421 * C499 + C70962 + C70962 + C153818 * C523 +
                      C70423 * C498 + C70963 + C70963 + C153811 * C522 +
                      C70425 * C497 + C70964 + C70964 + C153792 * C521 +
                      C70427 * C496 + C70965 + C70965 + C153738 * C520) *
                         C153513 * C70419 +
                     (C71700 + C71701 + C71702 + C71703) * C153513 * C153560) *
                        C153477 -
                    ((C70747 + C70746 + C70745 + C70744) * C153513 * C153560 +
                     (C70427 * C148 + C70442 + C70442 + C153738 * C164 +
                      C70425 * C147 + C70443 + C70443 + C153792 * C163 +
                      C70423 * C146 + C70444 + C70444 + C153811 * C162 +
                      C70421 * C145 + C70445 + C70445 + C153818 * C161) *
                         C153513 * C70419) *
                        C1938) *
                       C153724 +
                   (((C70744 + C70745 + C70746 + C70747) * C153513 * C70419 +
                     (C70748 + C70749 + C70750 + C70751) * C153513 * C153560) *
                        C1938 -
                    ((C70427 * C1796 + C71676 + C71676 + C153738 * C1806 +
                      C70425 * C1797 + C71677 + C71677 + C153792 * C1807 +
                      C70423 * C1798 + C71678 + C71678 + C153811 * C1808 +
                      C70421 * C1799 + C71679 + C71679 + C153818 * C1809) *
                         C153513 * C153560 +
                     (C71703 + C71702 + C71701 + C71700) * C153513 * C70419) *
                        C153477) *
                       C153449) *
                      C153384)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C74247 * C144 + C74252 + C74252 + C74241 * C160 +
                      C74249 * C145 + C74253 + C74253 + C153348 * C161) *
                         C153513 * C153819 +
                     (C74550 + C74551) * C153513 * C153815 + C74570 * C153805 +
                     C74571 * C153747) *
                        C1938 -
                    (C76770 * C153747 + C76771 * C153805 +
                     (C75542 + C75543) * C153513 * C153815 +
                     (C74249 * C499 + C74774 + C74774 + C153348 * C523 +
                      C74247 * C500 + C74775 + C74775 + C74241 * C524) *
                         C153513 * C153819) *
                        C153477) *
                       C153724 +
                   (((C75543 + C75542) * C153513 * C153819 +
                     (C75541 + C75540) * C153513 * C153815 +
                     (C75539 + C75538) * C153513 * C153805 +
                     (C76776 + C76777) * C153513 * C153747) *
                        C153477 -
                    (C75882 * C153747 + C75883 * C153805 +
                     (C74553 + C74552) * C153513 * C153815 +
                     (C74551 + C74550) * C153513 * C153819) *
                        C1938) *
                       C153449) *
                      C153716 +
                  ((((C74247 * C499 + C74784 + C74784 + C74241 * C523 +
                      C74249 * C498 + C74785 + C74785 + C153348 * C522) *
                         C153513 * C153819 +
                     (C75544 + C75545) * C153513 * C153815 +
                     (C75546 + C75547) * C153513 * C153805 +
                     (C75548 + C75549) * C153513 * C153747) *
                        C153477 -
                    (C74572 * C153747 + C74573 * C153805 +
                     (C74559 + C74558) * C153513 * C153815 +
                     (C74249 * C146 + C74266 + C74266 + C153348 * C162 +
                      C74247 * C145 + C74267 + C74267 + C74241 * C161) *
                         C153513 * C153819) *
                        C1938) *
                       C153724 +
                   (((C74558 + C74559) * C153513 * C153819 +
                     (C74560 + C74561) * C153513 * C153815 +
                     (C74562 + C74563) * C153513 * C153805 +
                     (C74564 + C74565) * C153513 * C153747) *
                        C1938 -
                    ((C74249 * C5601 + C75512 + C75512 + C153348 * C5607 +
                      C74247 * C5602 + C75513 + C75513 + C74241 * C5608) *
                         C153513 * C153747 +
                     (C75549 + C75548) * C153513 * C153805 +
                     (C75547 + C75546) * C153513 * C153815 +
                     (C75545 + C75544) * C153513 * C153819) *
                        C153477) *
                       C153449) *
                      C153384)) /
                    (p * q * std::sqrt(p + q));
    d2ee[71] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C70421 * C144 + C70430 + C70430 + C153818 * C160 +
                     C70423 * C145 + C70431 + C70431 + C153811 * C161 +
                     C70425 * C146 + C70432 + C70432 + C153792 * C162 +
                     C70427 * C147 + C70433 + C70433 + C153738 * C163) *
                        C153513 * C70419 +
                    (C70736 + C70737 + C70738 + C70739) * C153513 * C153560) *
                       C153797 -
                   ((C71696 + C71697 + C71698 + C71699) * C153513 * C153560 +
                    (C70427 * C497 + C70950 + C70950 + C153738 * C521 +
                     C70425 * C498 + C70951 + C70951 + C153792 * C522 +
                     C70423 * C499 + C70952 + C70952 + C153811 * C523 +
                     C70421 * C500 + C70953 + C70953 + C153818 * C524) *
                        C153513 * C70419) *
                       C153798 +
                   ((C70421 * C501 + C70954 + C70954 + C153818 * C525 +
                     C70423 * C502 + C70955 + C70955 + C153811 * C526 +
                     C70425 * C503 + C70956 + C70956 + C153792 * C527 +
                     C70427 * C504 + C70957 + C70957 + C153738 * C528) *
                        C153513 * C70419 +
                    (C72266 + C72267 + C72268 + C72269) * C153513 * C153560) *
                       C2454) *
                      C153724 +
                  (((C71699 + C71698 + C71697 + C71696) * C153513 * C70419 +
                    (C72936 + C72937 + C72938 + C72939) * C153513 * C153560) *
                       C153798 -
                   ((C70740 + C70741 + C70742 + C70743) * C153513 * C153560 +
                    (C70739 + C70738 + C70737 + C70736) * C153513 * C70419) *
                       C153797 -
                   ((C70427 * C3330 + C72254 + C72254 + C153738 * C3338 +
                     C70425 * C3329 + C72255 + C72255 + C153792 * C3337 +
                     C70423 * C3328 + C72256 + C72256 + C153811 * C3336 +
                     C70421 * C3327 + C72257 + C72257 + C153818 * C3335) *
                        C153513 * C153560 +
                    (C72269 + C72268 + C72267 + C72266) * C153513 * C70419) *
                       C2454) *
                      C153449) *
                 C153378) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C74247 * C144 + C74252 + C74252 + C74241 * C160 +
                     C74249 * C145 + C74253 + C74253 + C153348 * C161) *
                        C153513 * C153819 +
                    (C74550 + C74551) * C153513 * C153815 + C74570 * C153805 +
                    C74571 * C153747) *
                       C153797 -
                   (C76770 * C153747 + C76771 * C153805 +
                    (C75542 + C75543) * C153513 * C153815 +
                    (C74249 * C499 + C74774 + C74774 + C153348 * C523 +
                     C74247 * C500 + C74775 + C74775 + C74241 * C524) *
                        C153513 * C153819) *
                       C153798 +
                   ((C74247 * C501 + C74776 + C74776 + C74241 * C525 +
                     C74249 * C502 + C74777 + C74777 + C153348 * C526) *
                        C153513 * C153819 +
                    (C76110 + C76111) * C153513 * C153815 +
                    (C76112 + C76113) * C153513 * C153805 +
                    (C76114 + C76115) * C153513 * C153747) *
                       C2454) *
                      C153724 +
                  (((C75543 + C75542) * C153513 * C153819 +
                    (C75541 + C75540) * C153513 * C153815 +
                    (C75539 + C75538) * C153513 * C153805 +
                    (C76776 + C76777) * C153513 * C153747) *
                       C153798 -
                   (C75882 * C153747 + C75883 * C153805 +
                    (C74553 + C74552) * C153513 * C153815 +
                    (C74551 + C74550) * C153513 * C153819) *
                       C153797 -
                   ((C74249 * C28571 + C76096 + C76096 + C153348 * C28575 +
                     C74247 * C28570 + C76097 + C76097 + C74241 * C28574) *
                        C153513 * C153747 +
                    (C76115 + C76114) * C153513 * C153805 +
                    (C76113 + C76112) * C153513 * C153815 +
                    (C76111 + C76110) * C153513 * C153819) *
                       C2454) *
                      C153449) *
                 C153378) /
                    (p * q * std::sqrt(p + q));
    d2ee[72] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C70421 * C144 + C70430 + C70430 + C153818 * C160 + C70423 * C145 +
             C70431 + C70431 + C153811 * C161 + C70425 * C146 + C70432 +
             C70432 + C153792 * C162 + C70427 * C147 + C70433 + C70433 +
             C153738 * C163) *
                C153513 * C70419 +
            (C70736 + C70737 + C70738 + C70739) * C153513 * C153560) *
               C1938 -
           ((C71696 + C71697 + C71698 + C71699) * C153513 * C153560 +
            (C70427 * C497 + C70950 + C70950 + C153738 * C521 + C70425 * C498 +
             C70951 + C70951 + C153792 * C522 + C70423 * C499 + C70952 +
             C70952 + C153811 * C523 + C70421 * C500 + C70953 + C70953 +
             C153818 * C524) *
                C153513 * C70419) *
               C153477) *
              C310 +
          (((C71699 + C71698 + C71697 + C71696) * C153513 * C70419 +
            (C72936 + C72937 + C72938 + C72939) * C153513 * C153560) *
               C153477 -
           ((C70740 + C70741 + C70742 + C70743) * C153513 * C153560 +
            (C70739 + C70738 + C70737 + C70736) * C153513 * C70419) *
               C1938) *
              C311 +
          (((C70743 + C70742 + C70741 + C70740) * C153513 * C70419 +
            (C72048 + C72049 + C72050 + C72051) * C153513 * C153560) *
               C1938 -
           ((C70427 * C4146 + C72924 + C72924 + C153738 * C4154 +
             C70425 * C4145 + C72925 + C72925 + C153792 * C4153 +
             C70423 * C4144 + C72926 + C72926 + C153811 * C4152 +
             C70421 * C4143 + C72927 + C72927 + C153818 * C4151) *
                C153513 * C153560 +
            (C72939 + C72938 + C72937 + C72936) * C153513 * C70419) *
               C153477) *
              C312) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C70421 * C144 + C70430 + C70430 + C153818 * C160 + C70423 * C145 +
             C70431 + C70431 + C153811 * C161 + C70425 * C146 + C70432 +
             C70432 + C153792 * C162 + C70427 * C147 + C70433 + C70433 +
             C153738 * C163) *
                C153513 * C70419 +
            (C70736 + C70737 + C70738 + C70739) * C153513 * C153560) *
               C1938 -
           ((C71696 + C71697 + C71698 + C71699) * C153513 * C153560 +
            (C70427 * C497 + C70950 + C70950 + C153738 * C521 + C70425 * C498 +
             C70951 + C70951 + C153792 * C522 + C70423 * C499 + C70952 +
             C70952 + C153811 * C523 + C70421 * C500 + C70953 + C70953 +
             C153818 * C524) *
                C153513 * C70419) *
               C153477) *
              C153397 * C1133 +
          (((C70421 * C499 + C70962 + C70962 + C153818 * C523 + C70423 * C498 +
             C70963 + C70963 + C153811 * C522 + C70425 * C497 + C70964 +
             C70964 + C153792 * C521 + C70427 * C496 + C70965 + C70965 +
             C153738 * C520) *
                C153513 * C70419 +
            (C71700 + C71701 + C71702 + C71703) * C153513 * C153560) *
               C153477 -
           ((C70747 + C70746 + C70745 + C70744) * C153513 * C153560 +
            (C70427 * C148 + C70442 + C70442 + C153738 * C164 + C70425 * C147 +
             C70443 + C70443 + C153792 * C163 + C70423 * C146 + C70444 +
             C70444 + C153811 * C162 + C70421 * C145 + C70445 + C70445 +
             C153818 * C161) *
                C153513 * C70419) *
               C1938) *
              C153397 * C1134 +
          (((C70421 * C146 + C70446 + C70446 + C153818 * C162 + C70423 * C147 +
             C70447 + C70447 + C153811 * C163 + C70425 * C148 + C70448 +
             C70448 + C153792 * C164 + C70427 * C149 + C70449 + C70449 +
             C153738 * C165) *
                C153513 * C70419 +
            (C71192 + C71193 + C71194 + C71195) * C153513 * C153560) *
               C1938 -
           ((C70427 * C986 + C71390 + C71390 + C153738 * C998 + C70425 * C985 +
             C71391 + C71391 + C153792 * C997 + C70423 * C984 + C71392 +
             C71392 + C153811 * C996 + C70421 * C983 + C71393 + C71393 +
             C153818 * C995) *
                C153513 * C153560 +
            (C70427 * C506 + C71394 + C71394 + C153738 * C530 + C70425 * C496 +
             C71395 + C71395 + C153792 * C520 + C70423 * C497 + C71396 +
             C71396 + C153811 * C521 + C70421 * C498 + C71397 + C71397 +
             C153818 * C522) *
                C153513 * C70419) *
               C153477) *
              C153397 * C1135)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C70421 * C144 + C70430 + C70430 + C153818 * C160 + C70423 * C145 +
            C70431 + C70431 + C153811 * C161 + C70425 * C146 + C70432 + C70432 +
            C153792 * C162 + C70427 * C147 + C70433 + C70433 + C153738 * C163) *
               C153513 * C70419 +
           (C70736 + C70737 + C70738 + C70739) * C153513 * C153560) *
              C2144 -
          ((C71696 + C71697 + C71698 + C71699) * C153513 * C153560 +
           (C70427 * C497 + C70950 + C70950 + C153738 * C521 + C70425 * C498 +
            C70951 + C70951 + C153792 * C522 + C70423 * C499 + C70952 + C70952 +
            C153811 * C523 + C70421 * C500 + C70953 + C70953 + C153818 * C524) *
               C153513 * C70419) *
              C2145 +
          ((C70421 * C501 + C70954 + C70954 + C153818 * C525 + C70423 * C502 +
            C70955 + C70955 + C153811 * C526 + C70425 * C503 + C70956 + C70956 +
            C153792 * C527 + C70427 * C504 + C70957 + C70957 + C153738 * C528) *
               C153513 * C70419 +
           (C72266 + C72267 + C72268 + C72269) * C153513 * C153560) *
              C2146 -
          ((C70427 * C8437 + C73458 + C73458 + C153738 * C8439 +
            C70425 * C6216 + C73459 + C73459 + C153792 * C6228 +
            C70423 * C6217 + C73460 + C73460 + C153811 * C6229 +
            C70421 * C6218 + C73461 + C73461 + C153818 * C6230) *
               C153513 * C153560 +
           (C70427 * C2149 + C73462 + C73462 + C153738 * C2159 +
            C70425 * C2150 + C73463 + C73463 + C153792 * C2160 +
            C70423 * C2151 + C73464 + C73464 + C153811 * C2161 +
            C70421 * C2152 + C73465 + C73465 + C153818 * C2162) *
               C153513 * C70419) *
              C2147) *
         C153397 * C153378) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
             C74253 + C74253 + C153348 * C161) *
                C153513 * C153819 +
            (C74550 + C74551) * C153513 * C153815 + C74570 * C153805 +
            C74571 * C153747) *
               C1938 -
           (C76770 * C153747 + C76771 * C153805 +
            (C75542 + C75543) * C153513 * C153815 +
            (C74249 * C499 + C74774 + C74774 + C153348 * C523 + C74247 * C500 +
             C74775 + C74775 + C74241 * C524) *
                C153513 * C153819) *
               C153477) *
              C153397 * C1133 +
          (((C74247 * C499 + C74784 + C74784 + C74241 * C523 + C74249 * C498 +
             C74785 + C74785 + C153348 * C522) *
                C153513 * C153819 +
            (C75544 + C75545) * C153513 * C153815 +
            (C75546 + C75547) * C153513 * C153805 +
            (C75548 + C75549) * C153513 * C153747) *
               C153477 -
           (C74572 * C153747 + C74573 * C153805 +
            (C74559 + C74558) * C153513 * C153815 +
            (C74249 * C146 + C74266 + C74266 + C153348 * C162 + C74247 * C145 +
             C74267 + C74267 + C74241 * C161) *
                C153513 * C153819) *
               C1938) *
              C153397 * C1134 +
          (((C74247 * C146 + C74268 + C74268 + C74241 * C162 + C74249 * C147 +
             C74269 + C74269 + C153348 * C163) *
                C153513 * C153819 +
            (C75020 + C75021) * C153513 * C153815 +
            (C75022 + C75023) * C153513 * C153805 +
            (C75024 + C75025) * C153513 * C153747) *
               C1938 -
           ((C74249 * C4146 + C75220 + C75220 + C153348 * C4154 +
             C74247 * C4145 + C75221 + C75221 + C74241 * C4153) *
                C153513 * C153747 +
            (C74249 * C1797 + C75222 + C75222 + C153348 * C1807 +
             C74247 * C1798 + C75223 + C75223 + C74241 * C1808) *
                C153513 * C153805 +
            (C74249 * C984 + C75224 + C75224 + C153348 * C996 + C74247 * C983 +
             C75225 + C75225 + C74241 * C995) *
                C153513 * C153815 +
            (C74249 * C497 + C75226 + C75226 + C153348 * C521 + C74247 * C498 +
             C75227 + C75227 + C74241 * C522) *
                C153513 * C153819) *
               C153477) *
              C153397 * C1135)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
             C74253 + C74253 + C153348 * C161) *
                C153513 * C153819 +
            (C74550 + C74551) * C153513 * C153815 + C74570 * C153805 +
            C74571 * C153747) *
               C1938 -
           (C76770 * C153747 + C76771 * C153805 +
            (C75542 + C75543) * C153513 * C153815 +
            (C74249 * C499 + C74774 + C74774 + C153348 * C523 + C74247 * C500 +
             C74775 + C74775 + C74241 * C524) *
                C153513 * C153819) *
               C153477) *
              C310 +
          (((C75543 + C75542) * C153513 * C153819 +
            (C75541 + C75540) * C153513 * C153815 +
            (C75539 + C75538) * C153513 * C153805 +
            (C76776 + C76777) * C153513 * C153747) *
               C153477 -
           (C75882 * C153747 + C75883 * C153805 +
            (C74553 + C74552) * C153513 * C153815 +
            (C74551 + C74550) * C153513 * C153819) *
               C1938) *
              C311 +
          ((C74570 * C153819 + C74571 * C153815 +
            (C74557 + C74556) * C153513 * C153805 +
            (C75888 + C75889) * C153513 * C153747) *
               C1938 -
           ((C74249 * C29033 + C76768 + C76768 + C153348 * C29037 +
             C74247 * C29032 + C76769 + C76769 + C74241 * C29036) *
                C153513 * C153747 +
            (C76777 + C76776) * C153513 * C153805 + C76770 * C153815 +
            C76771 * C153819) *
               C153477) *
              C312) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
            C74253 + C74253 + C153348 * C161) *
               C153513 * C153819 +
           (C74550 + C74551) * C153513 * C153815 + C74570 * C153805 +
           C74571 * C153747) *
              C2144 -
          (C76770 * C153747 + C76771 * C153805 +
           (C75542 + C75543) * C153513 * C153815 +
           (C74249 * C499 + C74774 + C74774 + C153348 * C523 + C74247 * C500 +
            C74775 + C74775 + C74241 * C524) *
               C153513 * C153819) *
              C2145 +
          ((C74247 * C501 + C74776 + C74776 + C74241 * C525 + C74249 * C502 +
            C74777 + C74777 + C153348 * C526) *
               C153513 * C153819 +
           (C76110 + C76111) * C153513 * C153815 +
           (C76112 + C76113) * C153513 * C153805 +
           (C76114 + C76115) * C153513 * C153747) *
              C2146 -
          ((C74249 * C32070 + C77296 + C77296 + C153348 * C32072 +
            C74247 * C30195 + C77297 + C77297 + C74241 * C30199) *
               C153513 * C153747 +
           (C74249 * C6214 + C77298 + C77298 + C153348 * C6226 +
            C74247 * C6215 + C77299 + C77299 + C74241 * C6227) *
               C153513 * C153805 +
           (C74249 * C6217 + C77300 + C77300 + C153348 * C6229 +
            C74247 * C6218 + C77301 + C77301 + C74241 * C6230) *
               C153513 * C153815 +
           (C74249 * C2151 + C77302 + C77302 + C153348 * C2161 +
            C74247 * C2152 + C77303 + C77303 + C74241 * C2162) *
               C153513 * C153819) *
              C2147) *
         C153397 * C153378) /
            (p * q * std::sqrt(p + q));
    d2ee[73] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C70421 * C144 + C70430 + C70430 + C153818 * C160 +
                     C70423 * C145 + C70431 + C70431 + C153811 * C161 +
                     C70425 * C146 + C70432 + C70432 + C153792 * C162 +
                     C70427 * C147 + C70433 + C70433 + C153738 * C163) *
                        C153513 * C70419 +
                    (C70736 + C70737 + C70738 + C70739) * C153513 * C153560) *
                       C153797 -
                   ((C71696 + C71697 + C71698 + C71699) * C153513 * C153560 +
                    (C70427 * C497 + C70950 + C70950 + C153738 * C521 +
                     C70425 * C498 + C70951 + C70951 + C153792 * C522 +
                     C70423 * C499 + C70952 + C70952 + C153811 * C523 +
                     C70421 * C500 + C70953 + C70953 + C153818 * C524) *
                        C153513 * C70419) *
                       C153798 +
                   ((C70421 * C501 + C70954 + C70954 + C153818 * C525 +
                     C70423 * C502 + C70955 + C70955 + C153811 * C526 +
                     C70425 * C503 + C70956 + C70956 + C153792 * C527 +
                     C70427 * C504 + C70957 + C70957 + C153738 * C528) *
                        C153513 * C70419 +
                    (C72266 + C72267 + C72268 + C72269) * C153513 * C153560) *
                       C2454) *
                      C153397 * C153716 +
                  (((C70421 * C499 + C70962 + C70962 + C153818 * C523 +
                     C70423 * C498 + C70963 + C70963 + C153811 * C522 +
                     C70425 * C497 + C70964 + C70964 + C153792 * C521 +
                     C70427 * C496 + C70965 + C70965 + C153738 * C520) *
                        C153513 * C70419 +
                    (C71700 + C71701 + C71702 + C71703) * C153513 * C153560) *
                       C153798 -
                   ((C70747 + C70746 + C70745 + C70744) * C153513 * C153560 +
                    (C70427 * C148 + C70442 + C70442 + C153738 * C164 +
                     C70425 * C147 + C70443 + C70443 + C153792 * C163 +
                     C70423 * C146 + C70444 + C70444 + C153811 * C162 +
                     C70421 * C145 + C70445 + C70445 + C153818 * C161) *
                        C153513 * C70419) *
                       C153797 -
                   ((C70427 * C1365 + C70970 + C70970 + C153738 * C1375 +
                     C70425 * C1366 + C70971 + C70971 + C153792 * C1376 +
                     C70423 * C1367 + C70972 + C70972 + C153811 * C1377 +
                     C70421 * C1368 + C70973 + C70973 + C153818 * C1378) *
                        C153513 * C153560 +
                    (C70427 * C505 + C70974 + C70974 + C153738 * C529 +
                     C70425 * C504 + C70975 + C70975 + C153792 * C528 +
                     C70423 * C503 + C70976 + C70976 + C153811 * C527 +
                     C70421 * C502 + C70977 + C70977 + C153818 * C526) *
                        C153513 * C70419) *
                       C2454) *
                      C153397 * C153384)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C74247 * C144 + C74252 + C74252 + C74241 * C160 +
                     C74249 * C145 + C74253 + C74253 + C153348 * C161) *
                        C153513 * C153819 +
                    (C74550 + C74551) * C153513 * C153815 + C74570 * C153805 +
                    C74571 * C153747) *
                       C153797 -
                   (C76770 * C153747 + C76771 * C153805 +
                    (C75542 + C75543) * C153513 * C153815 +
                    (C74249 * C499 + C74774 + C74774 + C153348 * C523 +
                     C74247 * C500 + C74775 + C74775 + C74241 * C524) *
                        C153513 * C153819) *
                       C153798 +
                   ((C74247 * C501 + C74776 + C74776 + C74241 * C525 +
                     C74249 * C502 + C74777 + C74777 + C153348 * C526) *
                        C153513 * C153819 +
                    (C76110 + C76111) * C153513 * C153815 +
                    (C76112 + C76113) * C153513 * C153805 +
                    (C76114 + C76115) * C153513 * C153747) *
                       C2454) *
                      C153397 * C153716 +
                  (((C74247 * C499 + C74784 + C74784 + C74241 * C523 +
                     C74249 * C498 + C74785 + C74785 + C153348 * C522) *
                        C153513 * C153819 +
                    (C75544 + C75545) * C153513 * C153815 +
                    (C75546 + C75547) * C153513 * C153805 +
                    (C75548 + C75549) * C153513 * C153747) *
                       C153798 -
                   (C74572 * C153747 + C74573 * C153805 +
                    (C74559 + C74558) * C153513 * C153815 +
                    (C74249 * C146 + C74266 + C74266 + C153348 * C162 +
                     C74247 * C145 + C74267 + C74267 + C74241 * C161) *
                        C153513 * C153819) *
                       C153797 -
                   ((C74249 * C4833 + C74792 + C74792 + C153348 * C4839 +
                     C74247 * C4834 + C74793 + C74793 + C74241 * C4840) *
                        C153513 * C153747 +
                    (C74249 * C3329 + C74794 + C74794 + C153348 * C3337 +
                     C74247 * C3328 + C74795 + C74795 + C74241 * C3336) *
                        C153513 * C153805 +
                    (C74249 * C1367 + C74796 + C74796 + C153348 * C1377 +
                     C74247 * C1368 + C74797 + C74797 + C74241 * C1378) *
                        C153513 * C153815 +
                    (C74249 * C503 + C74798 + C74798 + C153348 * C527 +
                     C74247 * C502 + C74799 + C74799 + C74241 * C526) *
                        C153513 * C153819) *
                       C2454) *
                      C153397 * C153384)) /
                    (p * q * std::sqrt(p + q));
    d2ee[74] += (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
                 ((((C70421 * C144 + C70430 + C70430 + C153818 * C160 +
                     C70423 * C145 + C70431 + C70431 + C153811 * C161 +
                     C70425 * C146 + C70432 + C70432 + C153792 * C162 +
                     C70427 * C147 + C70433 + C70433 + C153738 * C163) *
                        C153513 * C70419 +
                    (C70736 + C70737 + C70738 + C70739) * C153513 * C153560) *
                       C1938 -
                   ((C71696 + C71697 + C71698 + C71699) * C153513 * C153560 +
                    (C70427 * C497 + C70950 + C70950 + C153738 * C521 +
                     C70425 * C498 + C70951 + C70951 + C153792 * C522 +
                     C70423 * C499 + C70952 + C70952 + C153811 * C523 +
                     C70421 * C500 + C70953 + C70953 + C153818 * C524) *
                        C153513 * C70419) *
                       C153477) *
                      C153397 * C1133 +
                  (((C70421 * C499 + C70962 + C70962 + C153818 * C523 +
                     C70423 * C498 + C70963 + C70963 + C153811 * C522 +
                     C70425 * C497 + C70964 + C70964 + C153792 * C521 +
                     C70427 * C496 + C70965 + C70965 + C153738 * C520) *
                        C153513 * C70419 +
                    (C71700 + C71701 + C71702 + C71703) * C153513 * C153560) *
                       C153477 -
                   ((C70747 + C70746 + C70745 + C70744) * C153513 * C153560 +
                    (C70427 * C148 + C70442 + C70442 + C153738 * C164 +
                     C70425 * C147 + C70443 + C70443 + C153792 * C163 +
                     C70423 * C146 + C70444 + C70444 + C153811 * C162 +
                     C70421 * C145 + C70445 + C70445 + C153818 * C161) *
                        C153513 * C70419) *
                       C1938) *
                      C153397 * C1134 +
                  (((C70421 * C146 + C70446 + C70446 + C153818 * C162 +
                     C70423 * C147 + C70447 + C70447 + C153811 * C163 +
                     C70425 * C148 + C70448 + C70448 + C153792 * C164 +
                     C70427 * C149 + C70449 + C70449 + C153738 * C165) *
                        C153513 * C70419 +
                    (C71192 + C71193 + C71194 + C71195) * C153513 * C153560) *
                       C1938 -
                   ((C70427 * C986 + C71390 + C71390 + C153738 * C998 +
                     C70425 * C985 + C71391 + C71391 + C153792 * C997 +
                     C70423 * C984 + C71392 + C71392 + C153811 * C996 +
                     C70421 * C983 + C71393 + C71393 + C153818 * C995) *
                        C153513 * C153560 +
                    (C70427 * C506 + C71394 + C71394 + C153738 * C530 +
                     C70425 * C496 + C71395 + C71395 + C153792 * C520 +
                     C70423 * C497 + C71396 + C71396 + C153811 * C521 +
                     C70421 * C498 + C71397 + C71397 + C153818 * C522) *
                        C153513 * C70419) *
                       C153477) *
                      C153397 * C1135)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
                 ((((C70421 * C144 + C70430 + C70430 + C153818 * C160 +
                     C70423 * C145 + C70431 + C70431 + C153811 * C161 +
                     C70425 * C146 + C70432 + C70432 + C153792 * C162 +
                     C70427 * C147 + C70433 + C70433 + C153738 * C163) *
                        C153513 * C70419 +
                    (C70736 + C70737 + C70738 + C70739) * C153513 * C153560) *
                       C1938 -
                   ((C71696 + C71697 + C71698 + C71699) * C153513 * C153560 +
                    (C70427 * C497 + C70950 + C70950 + C153738 * C521 +
                     C70425 * C498 + C70951 + C70951 + C153792 * C522 +
                     C70423 * C499 + C70952 + C70952 + C153811 * C523 +
                     C70421 * C500 + C70953 + C70953 + C153818 * C524) *
                        C153513 * C70419) *
                       C153477) *
                      C310 +
                  (((C71699 + C71698 + C71697 + C71696) * C153513 * C70419 +
                    (C72936 + C72937 + C72938 + C72939) * C153513 * C153560) *
                       C153477 -
                   ((C70740 + C70741 + C70742 + C70743) * C153513 * C153560 +
                    (C70739 + C70738 + C70737 + C70736) * C153513 * C70419) *
                       C1938) *
                      C311 +
                  (((C70743 + C70742 + C70741 + C70740) * C153513 * C70419 +
                    (C72048 + C72049 + C72050 + C72051) * C153513 * C153560) *
                       C1938 -
                   ((C70427 * C4146 + C72924 + C72924 + C153738 * C4154 +
                     C70425 * C4145 + C72925 + C72925 + C153792 * C4153 +
                     C70423 * C4144 + C72926 + C72926 + C153811 * C4152 +
                     C70421 * C4143 + C72927 + C72927 + C153818 * C4151) *
                        C153513 * C153560 +
                    (C72939 + C72938 + C72937 + C72936) * C153513 * C70419) *
                       C153477) *
                      C312) *
                 C153378) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
                 ((((C74247 * C144 + C74252 + C74252 + C74241 * C160 +
                     C74249 * C145 + C74253 + C74253 + C153348 * C161) *
                        C153513 * C153819 +
                    (C74550 + C74551) * C153513 * C153815 + C74570 * C153805 +
                    C74571 * C153747) *
                       C1938 -
                   (C76770 * C153747 + C76771 * C153805 +
                    (C75542 + C75543) * C153513 * C153815 +
                    (C74249 * C499 + C74774 + C74774 + C153348 * C523 +
                     C74247 * C500 + C74775 + C74775 + C74241 * C524) *
                        C153513 * C153819) *
                       C153477) *
                      C153397 * C1133 +
                  (((C74247 * C499 + C74784 + C74784 + C74241 * C523 +
                     C74249 * C498 + C74785 + C74785 + C153348 * C522) *
                        C153513 * C153819 +
                    (C75544 + C75545) * C153513 * C153815 +
                    (C75546 + C75547) * C153513 * C153805 +
                    (C75548 + C75549) * C153513 * C153747) *
                       C153477 -
                   (C74572 * C153747 + C74573 * C153805 +
                    (C74559 + C74558) * C153513 * C153815 +
                    (C74249 * C146 + C74266 + C74266 + C153348 * C162 +
                     C74247 * C145 + C74267 + C74267 + C74241 * C161) *
                        C153513 * C153819) *
                       C1938) *
                      C153397 * C1134 +
                  (((C74247 * C146 + C74268 + C74268 + C74241 * C162 +
                     C74249 * C147 + C74269 + C74269 + C153348 * C163) *
                        C153513 * C153819 +
                    (C75020 + C75021) * C153513 * C153815 +
                    (C75022 + C75023) * C153513 * C153805 +
                    (C75024 + C75025) * C153513 * C153747) *
                       C1938 -
                   ((C74249 * C4146 + C75220 + C75220 + C153348 * C4154 +
                     C74247 * C4145 + C75221 + C75221 + C74241 * C4153) *
                        C153513 * C153747 +
                    (C74249 * C1797 + C75222 + C75222 + C153348 * C1807 +
                     C74247 * C1798 + C75223 + C75223 + C74241 * C1808) *
                        C153513 * C153805 +
                    (C74249 * C984 + C75224 + C75224 + C153348 * C996 +
                     C74247 * C983 + C75225 + C75225 + C74241 * C995) *
                        C153513 * C153815 +
                    (C74249 * C497 + C75226 + C75226 + C153348 * C521 +
                     C74247 * C498 + C75227 + C75227 + C74241 * C522) *
                        C153513 * C153819) *
                       C153477) *
                      C153397 * C1135)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
                 ((((C74247 * C144 + C74252 + C74252 + C74241 * C160 +
                     C74249 * C145 + C74253 + C74253 + C153348 * C161) *
                        C153513 * C153819 +
                    (C74550 + C74551) * C153513 * C153815 + C74570 * C153805 +
                    C74571 * C153747) *
                       C1938 -
                   (C76770 * C153747 + C76771 * C153805 +
                    (C75542 + C75543) * C153513 * C153815 +
                    (C74249 * C499 + C74774 + C74774 + C153348 * C523 +
                     C74247 * C500 + C74775 + C74775 + C74241 * C524) *
                        C153513 * C153819) *
                       C153477) *
                      C310 +
                  (((C75543 + C75542) * C153513 * C153819 +
                    (C75541 + C75540) * C153513 * C153815 +
                    (C75539 + C75538) * C153513 * C153805 +
                    (C76776 + C76777) * C153513 * C153747) *
                       C153477 -
                   (C75882 * C153747 + C75883 * C153805 +
                    (C74553 + C74552) * C153513 * C153815 +
                    (C74551 + C74550) * C153513 * C153819) *
                       C1938) *
                      C311 +
                  ((C74570 * C153819 + C74571 * C153815 +
                    (C74557 + C74556) * C153513 * C153805 +
                    (C75888 + C75889) * C153513 * C153747) *
                       C1938 -
                   ((C74249 * C29033 + C76768 + C76768 + C153348 * C29037 +
                     C74247 * C29032 + C76769 + C76769 + C74241 * C29036) *
                        C153513 * C153747 +
                    (C76777 + C76776) * C153513 * C153805 + C76770 * C153815 +
                    C76771 * C153819) *
                       C153477) *
                      C312) *
                 C153378) /
                    (p * q * std::sqrt(p + q));
    d2ee[75] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 (((((C34887 * C144 + C34892 + C34892 + C153705 * C160 +
                      C34889 * C145 + C34893 + C34893 + C153348 * C161) *
                         C98471 +
                     (C39432 + C39433) * C153600) *
                        C153556 +
                    ((C35190 + C35191) * C98471 + C40446 * C153600) * C153563 +
                    C137985 * C83544) *
                       C153413 * C153724 -
                   ((C37402 * C153600 + C36515 * C98471) * C83544 +
                    (C37403 * C153600 + (C35193 + C35192) * C98471) * C153563 +
                    (C40447 * C153600 + (C35191 + C35190) * C98471) * C153556) *
                       C153413 * C153449) *
                      C153793 +
                  ((((C35198 + C35199) * C98471 + C40448 * C153600) * C153556 +
                    ((C35200 + C35201) * C98471 + C40449 * C153600) * C153563 +
                    ((C35202 + C35203) * C98471 + (C36188 + C36189) * C153600) *
                        C83544) *
                       C153413 * C153449 -
                   (C137986 * C83544 +
                    (C40450 * C153600 + (C35199 + C35198) * C98471) * C153563 +
                    ((C39437 + C39436) * C153600 +
                     (C34889 * C146 + C34906 + C34906 + C153348 * C162 +
                      C34887 * C145 + C34907 + C34907 + C153705 * C161) *
                         C98471) *
                        C153556) *
                       C153413 * C153724) *
                      C153794 +
                  ((((C34887 * C146 + C34908 + C34908 + C153705 * C162 +
                      C34889 * C147 + C34909 + C34909 + C153348 * C163) *
                         C98471 +
                     (C40058 + C40059) * C153600) *
                        C153556 +
                    ((C35660 + C35661) * C98471 + (C39750 + C39751) * C153600) *
                        C153563 +
                    ((C35662 + C35663) * C98471 + (C39752 + C39753) * C153600) *
                        C83544) *
                       C153413 * C153724 -
                   (((C34889 * C4146 + C35860 + C35860 + C153348 * C4154 +
                      C34887 * C4145 + C35861 + C35861 + C153705 * C4153) *
                         C153600 +
                     (C35665 + C35664) * C98471) *
                        C83544 +
                    ((C39753 + C39752) * C153600 + (C35663 + C35662) * C98471) *
                        C153563 +
                    ((C39751 + C39750) * C153600 + (C35661 + C35660) * C98471) *
                        C153556) *
                       C153413 * C153449) *
                      C678)) /
                (p * q * std::sqrt(p + q));
    d2ee[76] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C34887 * C144 + C34892 + C34892 + C153705 * C160 +
               C34889 * C145 + C34893 + C34893 + C153348 * C161) *
                  C98471 +
              (C39432 + C39433) * C153600) *
                 C153556 +
             ((C35190 + C35191) * C98471 + C40446 * C153600) * C153563 +
             C137985 * C83544) *
                C153725 -
            ((C41228 * C153600 + C37403 * C98471) * C83544 +
             (C41229 * C153600 + C40447 * C98471) * C153563 +
             ((C39434 + C39435) * C153600 + (C39433 + C39432) * C98471) *
                 C153556) *
                C153477) *
               C153724 +
           (((C40446 * C98471 + C41230 * C153600) * C153556 +
             (C39081 * C98471 + C41235 * C153600) * C153563 +
             (C42220 * C98471 + (C36754 + C36755) * C153600) * C83544) *
                C153477 -
            ((C37402 * C153600 + C36515 * C98471) * C83544 +
             (C37403 * C153600 + (C35193 + C35192) * C98471) * C153563 +
             (C40447 * C153600 + (C35191 + C35190) * C98471) * C153556) *
                C153725) *
               C153449) *
              C313 +
          (((((C39436 + C39437) * C98471 + (C39438 + C39439) * C153600) *
                 C153556 +
             (C40448 * C98471 + C59703 * C153600) * C153563 +
             (C40449 * C98471 + (C39442 + C39443) * C153600) * C83544) *
                C153477 -
            (C137986 * C83544 +
             (C40450 * C153600 + (C35199 + C35198) * C98471) * C153563 +
             ((C39437 + C39436) * C153600 +
              (C34889 * C146 + C34906 + C34906 + C153348 * C162 +
               C34887 * C145 + C34907 + C34907 + C153705 * C161) *
                  C98471) *
                 C153556) *
                C153725) *
               C153724 +
           ((((C35198 + C35199) * C98471 + C40448 * C153600) * C153556 +
             ((C35200 + C35201) * C98471 + C40449 * C153600) * C153563 +
             ((C35202 + C35203) * C98471 + (C36188 + C36189) * C153600) *
                 C83544) *
                C153725 -
            (((C34889 * C4833 + C35432 + C35432 + C153348 * C4839 +
               C34887 * C4834 + C35433 + C35433 + C153705 * C4840) *
                  C153600 +
              (C36189 + C36188) * C98471) *
                 C83544 +
             ((C39443 + C39442) * C153600 + C39082 * C98471) * C153563 +
             (C58695 * C153600 + C40450 * C98471) * C153556) *
                C153477) *
               C153449) *
              C153384)) /
        (p * q * std::sqrt(p + q));
    d2ee[77] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C34887 * C144 + C34892 + C34892 + C153705 * C160 + C34889 * C145 +
              C34893 + C34893 + C153348 * C161) *
                 C98471 +
             (C39432 + C39433) * C153600) *
                C153556 +
            ((C35190 + C35191) * C98471 + C40446 * C153600) * C153563 +
            C137985 * C83544) *
               C153413 * C310 -
           ((C37402 * C153600 + C36515 * C98471) * C83544 +
            (C37403 * C153600 + (C35193 + C35192) * C98471) * C153563 +
            (C40447 * C153600 + (C35191 + C35190) * C98471) * C153556) *
               C153413 * C311 +
           (C137985 * C153556 + (C35207 * C98471 + C42220 * C153600) * C153563 +
            ((C35197 + C35196) * C98471 + (C37416 + C37417) * C153600) *
                C83544) *
               C153413 * C312) *
              C313 +
          ((((C35198 + C35199) * C98471 + C40448 * C153600) * C153556 +
            ((C35200 + C35201) * C98471 + C40449 * C153600) * C153563 +
            ((C35202 + C35203) * C98471 + (C36188 + C36189) * C153600) *
                C83544) *
               C153413 * C311 -
           (C137986 * C83544 +
            (C40450 * C153600 + (C35199 + C35198) * C98471) * C153563 +
            ((C39437 + C39436) * C153600 +
             (C34889 * C146 + C34906 + C34906 + C153348 * C162 + C34887 * C145 +
              C34907 + C34907 + C153705 * C161) *
                 C98471) *
                C153556) *
               C153413 * C310 -
           (((C34889 * C5601 + C36152 + C36152 + C153348 * C5607 +
              C34887 * C5602 + C36153 + C36153 + C153705 * C5608) *
                 C153600 +
             (C35205 + C35204) * C98471) *
                C83544 +
            ((C36189 + C36188) * C153600 + C35208 * C98471) * C153563 +
            C137986 * C153556) *
               C153413 * C312) *
              C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C34887 * C144 + C34892 + C34892 + C153705 * C160 + C34889 * C145 +
             C34893 + C34893 + C153348 * C161) *
                C98471 +
            (C39432 + C39433) * C153600) *
               C153556 +
           ((C35190 + C35191) * C98471 + C40446 * C153600) * C153563 +
           (C35206 * C98471 + C39081 * C153600) * C83544) *
              C153413 * C153397 * C130 -
          ((C39082 * C153600 + C35209 * C98471) * C83544 +
           (C40450 * C153600 + (C35199 + C35198) * C98471) * C153563 +
           ((C39437 + C39436) * C153600 +
            (C34889 * C146 + C34906 + C34906 + C153348 * C162 + C34887 * C145 +
             C34907 + C34907 + C153705 * C161) *
                C98471) *
               C153556) *
              C153413 * C153397 * C131 +
          (((C34887 * C146 + C34908 + C34908 + C153705 * C162 + C34889 * C147 +
             C34909 + C34909 + C153348 * C163) *
                C98471 +
            (C40058 + C40059) * C153600) *
               C153556 +
           ((C35660 + C35661) * C98471 + (C39750 + C39751) * C153600) *
               C153563 +
           ((C35662 + C35663) * C98471 + (C39752 + C39753) * C153600) *
               C83544) *
              C153413 * C153397 * C132 -
          (((C34889 * C1796 + C38784 + C38784 + C153348 * C1806 +
             C34887 * C1797 + C38785 + C38785 + C153705 * C1807) *
                C153600 +
            (C34889 * C324 + C34918 + C34918 + C153348 * C348 + C34887 * C323 +
             C34919 + C34919 + C153705 * C347) *
                C98471) *
               C83544 +
           ((C34889 * C985 + C38786 + C38786 + C153348 * C997 + C34887 * C984 +
             C38787 + C38787 + C153705 * C996) *
                C153600 +
            (C34889 * C315 + C34920 + C34920 + C153348 * C339 + C34887 * C316 +
             C34921 + C34921 + C153705 * C340) *
                C98471) *
               C153563 +
           ((C34889 * C496 + C38788 + C38788 + C153348 * C520 + C34887 * C497 +
             C38789 + C38789 + C153705 * C521) *
                C153600 +
            (C34889 * C148 + C34922 + C34922 + C153348 * C164 + C34887 * C147 +
             C34923 + C34923 + C153705 * C163) *
                C98471) *
               C153556) *
              C153413 * C153397 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C34887 * C144 + C34892 + C34892 + C153705 * C160 + C34889 * C145 +
              C34893 + C34893 + C153348 * C161) *
                 C98471 +
             (C39432 + C39433) * C153600) *
                C153556 +
            ((C35190 + C35191) * C98471 + C40446 * C153600) * C153563 +
            C137985 * C83544) *
               C493 -
           ((C41228 * C153600 + C37403 * C98471) * C83544 +
            (C41229 * C153600 + C40447 * C98471) * C153563 +
            ((C39434 + C39435) * C153600 + (C39433 + C39432) * C98471) *
                C153556) *
               C494 +
           ((C58686 * C98471 + C63735 * C153600) * C153556 +
            (C41230 * C98471 + C60479 * C153600) * C153563 +
            (C41235 * C98471 + (C41250 + C41251) * C153600) * C83544) *
               C495) *
              C153397 * C313 +
          ((((C39436 + C39437) * C98471 + (C39438 + C39439) * C153600) *
                C153556 +
            (C40448 * C98471 + C59703 * C153600) * C153563 +
            (C40449 * C98471 + (C39442 + C39443) * C153600) * C83544) *
               C494 -
           (C137986 * C83544 +
            (C40450 * C153600 + (C35199 + C35198) * C98471) * C153563 +
            ((C39437 + C39436) * C153600 +
             (C34889 * C146 + C34906 + C34906 + C153348 * C162 + C34887 * C145 +
              C34907 + C34907 + C153705 * C161) *
                 C98471) *
                C153556) *
               C493 -
           (((C34889 * C6213 + C39402 + C39402 + C153348 * C6225 +
              C34887 * C6214 + C39403 + C39403 + C153705 * C6226) *
                 C153600 +
             (C39443 + C39442) * C98471) *
                C83544 +
            ((C58712 + C58711) * C153600 + C58695 * C98471) * C153563 +
            (C63740 * C153600 + C58696 * C98471) * C153556) *
               C495) *
              C153397 * C153384)) /
            (p * q * std::sqrt(p + q));
    d2ee[78] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 (((((C34887 * C144 + C34892 + C34892 + C153705 * C160 +
                      C34889 * C145 + C34893 + C34893 + C153348 * C161) *
                         C98471 +
                     (C39432 + C39433) * C153600) *
                        C153556 +
                    ((C35190 + C35191) * C98471 + C40446 * C153600) * C153563 +
                    C137985 * C83544) *
                       C153725 -
                   ((C41228 * C153600 + C37403 * C98471) * C83544 +
                    (C41229 * C153600 + C40447 * C98471) * C153563 +
                    ((C39434 + C39435) * C153600 + (C39433 + C39432) * C98471) *
                        C153556) *
                       C153477) *
                      C153397 * C153793 +
                  ((((C39436 + C39437) * C98471 + (C39438 + C39439) * C153600) *
                        C153556 +
                    (C40448 * C98471 + C59703 * C153600) * C153563 +
                    (C40449 * C98471 + (C39442 + C39443) * C153600) * C83544) *
                       C153477 -
                   (C137986 * C83544 +
                    (C40450 * C153600 + (C35199 + C35198) * C98471) * C153563 +
                    ((C39437 + C39436) * C153600 +
                     (C34889 * C146 + C34906 + C34906 + C153348 * C162 +
                      C34887 * C145 + C34907 + C34907 + C153705 * C161) *
                         C98471) *
                        C153556) *
                       C153725) *
                      C153397 * C153794 +
                  ((((C34887 * C146 + C34908 + C34908 + C153705 * C162 +
                      C34889 * C147 + C34909 + C34909 + C153348 * C163) *
                         C98471 +
                     (C40058 + C40059) * C153600) *
                        C153556 +
                    ((C35660 + C35661) * C98471 + (C39750 + C39751) * C153600) *
                        C153563 +
                    ((C35662 + C35663) * C98471 + (C39752 + C39753) * C153600) *
                        C83544) *
                       C153725 -
                   (((C34889 * C3330 + C40048 + C40048 + C153348 * C3338 +
                      C34887 * C3329 + C40049 + C40049 + C153705 * C3337) *
                         C153600 +
                     (C39753 + C39752) * C98471) *
                        C83544 +
                    ((C59012 + C59011) * C153600 + (C39751 + C39750) * C98471) *
                        C153563 +
                    ((C59316 + C59315) * C153600 + (C40059 + C40058) * C98471) *
                        C153556) *
                       C153477) *
                      C153397 * C678)) /
                (p * q * std::sqrt(p + q));
    d2ee[79] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C34887 * C144 + C34892 + C34892 + C153705 * C160 + C34889 * C145 +
             C34893 + C34893 + C153348 * C161) *
                C98471 +
            (C39432 + C39433) * C153600) *
               C153556 +
           ((C35190 + C35191) * C98471 + C40446 * C153600) * C153563 +
           (C35206 * C98471 + C39081 * C153600) * C83544) *
              C153413 * C153397 * C130 -
          ((C39082 * C153600 + C35209 * C98471) * C83544 +
           (C40450 * C153600 + (C35199 + C35198) * C98471) * C153563 +
           ((C39437 + C39436) * C153600 +
            (C34889 * C146 + C34906 + C34906 + C153348 * C162 + C34887 * C145 +
             C34907 + C34907 + C153705 * C161) *
                C98471) *
               C153556) *
              C153413 * C153397 * C131 +
          (((C34887 * C146 + C34908 + C34908 + C153705 * C162 + C34889 * C147 +
             C34909 + C34909 + C153348 * C163) *
                C98471 +
            (C40058 + C40059) * C153600) *
               C153556 +
           ((C35660 + C35661) * C98471 + (C39750 + C39751) * C153600) *
               C153563 +
           ((C35662 + C35663) * C98471 + (C39752 + C39753) * C153600) *
               C83544) *
              C153413 * C153397 * C132 -
          (((C34889 * C1796 + C38784 + C38784 + C153348 * C1806 +
             C34887 * C1797 + C38785 + C38785 + C153705 * C1807) *
                C153600 +
            (C34889 * C324 + C34918 + C34918 + C153348 * C348 + C34887 * C323 +
             C34919 + C34919 + C153705 * C347) *
                C98471) *
               C83544 +
           ((C34889 * C985 + C38786 + C38786 + C153348 * C997 + C34887 * C984 +
             C38787 + C38787 + C153705 * C996) *
                C153600 +
            (C34889 * C315 + C34920 + C34920 + C153348 * C339 + C34887 * C316 +
             C34921 + C34921 + C153705 * C340) *
                C98471) *
               C153563 +
           ((C34889 * C496 + C38788 + C38788 + C153348 * C520 + C34887 * C497 +
             C38789 + C38789 + C153705 * C521) *
                C153600 +
            (C34889 * C148 + C34922 + C34922 + C153348 * C164 + C34887 * C147 +
             C34923 + C34923 + C153705 * C163) *
                C98471) *
               C153556) *
              C153413 * C153397 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C34887 * C144 + C34892 + C34892 + C153705 * C160 + C34889 * C145 +
              C34893 + C34893 + C153348 * C161) *
                 C98471 +
             (C39432 + C39433) * C153600) *
                C153556 +
            ((C35190 + C35191) * C98471 + C40446 * C153600) * C153563 +
            C137985 * C83544) *
               C153413 * C310 -
           ((C37402 * C153600 + C36515 * C98471) * C83544 +
            (C37403 * C153600 + (C35193 + C35192) * C98471) * C153563 +
            (C40447 * C153600 + (C35191 + C35190) * C98471) * C153556) *
               C153413 * C311 +
           (C137985 * C153556 + (C35207 * C98471 + C42220 * C153600) * C153563 +
            ((C35197 + C35196) * C98471 + (C37416 + C37417) * C153600) *
                C83544) *
               C153413 * C312) *
              C313 +
          ((((C35198 + C35199) * C98471 + C40448 * C153600) * C153556 +
            ((C35200 + C35201) * C98471 + C40449 * C153600) * C153563 +
            ((C35202 + C35203) * C98471 + (C36188 + C36189) * C153600) *
                C83544) *
               C153413 * C311 -
           (C137986 * C83544 +
            (C40450 * C153600 + (C35199 + C35198) * C98471) * C153563 +
            ((C39437 + C39436) * C153600 +
             (C34889 * C146 + C34906 + C34906 + C153348 * C162 + C34887 * C145 +
              C34907 + C34907 + C153705 * C161) *
                 C98471) *
                C153556) *
               C153413 * C310 -
           (((C34889 * C5601 + C36152 + C36152 + C153348 * C5607 +
              C34887 * C5602 + C36153 + C36153 + C153705 * C5608) *
                 C153600 +
             (C35205 + C35204) * C98471) *
                C83544 +
            ((C36189 + C36188) * C153600 + C35208 * C98471) * C153563 +
            C137986 * C153556) *
               C153413 * C312) *
              C153384)) /
            (p * q * std::sqrt(p + q));
    d2ee[80] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C34887 * C144 + C34892 + C34892 + C153705 * C160 + C34889 * C145 +
              C34893 + C34893 + C153348 * C161) *
                 C98471 +
             (C39432 + C39433) * C153600) *
                C153556 +
            ((C35190 + C35191) * C98471 + C40446 * C153600) * C153563 +
            C137985 * C83544) *
               C153413 * C153795 -
           (C139729 * C83544 +
            (C37403 * C153600 + (C35193 + C35192) * C98471) * C153563 +
            (C40447 * C153600 + (C35191 + C35190) * C98471) * C153556) *
               C153413 * C153796 +
           (C137985 * C153556 + (C35207 * C98471 + C42220 * C153600) * C153563 +
            ((C35197 + C35196) * C98471 + (C37416 + C37417) * C153600) *
                C83544) *
               C153413 * C1509) *
              C153716 +
          ((((C35198 + C35199) * C98471 + C40448 * C153600) * C153556 +
            ((C35200 + C35201) * C98471 + C40449 * C153600) * C153563 +
            ((C35202 + C35203) * C98471 + (C36188 + C36189) * C153600) *
                C83544) *
               C153413 * C153796 -
           (C137986 * C83544 +
            (C40450 * C153600 + (C35199 + C35198) * C98471) * C153563 +
            ((C39437 + C39436) * C153600 +
             (C34889 * C146 + C34906 + C34906 + C153348 * C162 + C34887 * C145 +
              C34907 + C34907 + C153705 * C161) *
                 C98471) *
                C153556) *
               C153413 * C153795 -
           (((C34889 * C5601 + C36152 + C36152 + C153348 * C5607 +
              C34887 * C5602 + C36153 + C36153 + C153705 * C5608) *
                 C153600 +
             (C35205 + C35204) * C98471) *
                C83544 +
            ((C36189 + C36188) * C153600 + C35208 * C98471) * C153563 +
            C137986 * C153556) *
               C153413 * C1509) *
              C153384)) /
        (p * q * std::sqrt(p + q));
    d2ee[81] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C34887 * C144 + C34892 + C34892 + C153705 * C160 + C34889 * C145 +
              C34893 + C34893 + C153348 * C161) *
                 C98471 +
             (C39432 + C39433) * C153600) *
                C153556 +
            ((C35190 + C35191) * C98471 + C40446 * C153600) * C153563 +
            C137985 * C83544) *
               C153725 -
           (C140988 * C83544 + (C41229 * C153600 + C40447 * C98471) * C153563 +
            ((C39434 + C39435) * C153600 + (C39433 + C39432) * C98471) *
                C153556) *
               C153477) *
              C153795 +
          (((C40446 * C98471 + C41230 * C153600) * C153556 +
            (C39081 * C98471 + C41235 * C153600) * C153563 +
            (C42220 * C98471 + (C36754 + C36755) * C153600) * C83544) *
               C153477 -
           (C139729 * C83544 +
            (C37403 * C153600 + (C35193 + C35192) * C98471) * C153563 +
            (C40447 * C153600 + (C35191 + C35190) * C98471) * C153556) *
               C153725) *
              C153796 +
          ((C137985 * C153556 + (C35207 * C98471 + C42220 * C153600) * C153563 +
            ((C35197 + C35196) * C98471 + (C37416 + C37417) * C153600) *
                C83544) *
               C153725 -
           (((C34889 * C28571 + C36736 + C36736 + C153348 * C28575 +
              C34887 * C28570 + C36737 + C36737 + C153705 * C28574) *
                 C153600 +
             (C37417 + C37416) * C98471) *
                C83544 +
            ((C36755 + C36754) * C153600 + C37402 * C98471) * C153563 +
            C140988 * C153556) *
               C153477) *
              C1509) *
         C153378) /
        (p * q * std::sqrt(p + q));
    d2ee[82] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C34887 * C144 + C34892 + C34892 + C153705 * C160 + C34889 * C145 +
             C34893 + C34893 + C153348 * C161) *
                C98471 +
            (C39432 + C39433) * C153600) *
               C153556 +
           ((C35190 + C35191) * C98471 + C40446 * C153600) * C153563 +
           C137985 * C83544) *
              C153413 * C1218 -
          (C139729 * C83544 +
           (C37403 * C153600 + (C35193 + C35192) * C98471) * C153563 +
           (C40447 * C153600 + (C35191 + C35190) * C98471) * C153556) *
              C153413 * C1219 +
          (C137985 * C153556 + (C35207 * C98471 + C42220 * C153600) * C153563 +
           ((C35197 + C35196) * C98471 + (C37416 + C37417) * C153600) *
               C83544) *
              C153413 * C1220 -
          (((C34889 * C29033 + C37408 + C37408 + C153348 * C29037 +
             C34887 * C29032 + C37409 + C37409 + C153705 * C29036) *
                C153600 +
            (C36529 + C36528) * C98471) *
               C83544 +
           ((C37417 + C37416) * C153600 + C36514 * C98471) * C153563 +
           C139729 * C153556) *
              C153413 * C1221) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C34887 * C144 + C34892 + C34892 + C153705 * C160 + C34889 * C145 +
              C34893 + C34893 + C153348 * C161) *
                 C98471 +
             (C39432 + C39433) * C153600) *
                C153556 +
            ((C35190 + C35191) * C98471 + C40446 * C153600) * C153563 +
            C137985 * C83544) *
               C153413 * C1131 -
           ((C37402 * C153600 + C36515 * C98471) * C83544 +
            (C37403 * C153600 + (C35193 + C35192) * C98471) * C153563 +
            (C40447 * C153600 + (C35191 + C35190) * C98471) * C153556) *
               C153413 * C153449) *
              C1133 +
          ((((C35198 + C35199) * C98471 + C40448 * C153600) * C153556 +
            ((C35200 + C35201) * C98471 + C40449 * C153600) * C153563 +
            ((C35202 + C35203) * C98471 + (C36188 + C36189) * C153600) *
                C83544) *
               C153413 * C153449 -
           (C137986 * C83544 +
            (C40450 * C153600 + (C35199 + C35198) * C98471) * C153563 +
            ((C39437 + C39436) * C153600 +
             (C34889 * C146 + C34906 + C34906 + C153348 * C162 + C34887 * C145 +
              C34907 + C34907 + C153705 * C161) *
                 C98471) *
                C153556) *
               C153413 * C1131) *
              C1134 +
          ((((C34887 * C146 + C34908 + C34908 + C153705 * C162 + C34889 * C147 +
              C34909 + C34909 + C153348 * C163) *
                 C98471 +
             (C40058 + C40059) * C153600) *
                C153556 +
            ((C35660 + C35661) * C98471 + (C39750 + C39751) * C153600) *
                C153563 +
            ((C35662 + C35663) * C98471 + (C39752 + C39753) * C153600) *
                C83544) *
               C153413 * C1131 -
           (((C34889 * C4146 + C35860 + C35860 + C153348 * C4154 +
              C34887 * C4145 + C35861 + C35861 + C153705 * C4153) *
                 C153600 +
             (C35665 + C35664) * C98471) *
                C83544 +
            ((C39753 + C39752) * C153600 + (C35663 + C35662) * C98471) *
                C153563 +
            ((C39751 + C39750) * C153600 + (C35661 + C35660) * C98471) *
                C153556) *
               C153413 * C153449) *
              C1135)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C34887 * C144 + C34892 + C34892 + C153705 * C160 + C34889 * C145 +
              C34893 + C34893 + C153348 * C161) *
                 C98471 +
             (C39432 + C39433) * C153600) *
                C153556 +
            ((C35190 + C35191) * C98471 + C40446 * C153600) * C153563 +
            C137985 * C83544) *
               C493 -
           ((C41228 * C153600 + C37403 * C98471) * C83544 +
            (C41229 * C153600 + C40447 * C98471) * C153563 +
            ((C39434 + C39435) * C153600 + (C39433 + C39432) * C98471) *
                C153556) *
               C494 +
           ((C58686 * C98471 + C63735 * C153600) * C153556 +
            (C41230 * C98471 + C60479 * C153600) * C153563 +
            (C41235 * C98471 + (C41250 + C41251) * C153600) * C83544) *
               C495) *
              C1131 +
          (((C40446 * C98471 + C41230 * C153600) * C153556 +
            (C39081 * C98471 + C41235 * C153600) * C153563 +
            (C42220 * C98471 + (C36754 + C36755) * C153600) * C83544) *
               C494 -
           (C139729 * C83544 +
            (C37403 * C153600 + (C35193 + C35192) * C98471) * C153563 +
            (C40447 * C153600 + (C35191 + C35190) * C98471) * C153556) *
               C493 -
           (((C34889 * C32070 + C37936 + C37936 + C153348 * C32072 +
              C34887 * C30195 + C37937 + C37937 + C153705 * C30199) *
                 C153600 +
             (C36755 + C36754) * C98471) *
                C83544 +
            ((C41251 + C41250) * C153600 + C41228 * C98471) * C153563 +
            (C60478 * C153600 + C41229 * C98471) * C153556) *
               C495) *
              C153449) *
         C153378) /
            (p * q * std::sqrt(p + q));
    d2ee[83] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C34887 * C144 + C34892 + C34892 + C153705 * C160 +
               C34889 * C145 + C34893 + C34893 + C153348 * C161) *
                  C98471 +
              (C39432 + C39433) * C153600) *
                 C153556 +
             ((C35190 + C35191) * C98471 + C40446 * C153600) * C153563 +
             C137985 * C83544) *
                C153725 -
            ((C41228 * C153600 + C37403 * C98471) * C83544 +
             (C41229 * C153600 + C40447 * C98471) * C153563 +
             ((C39434 + C39435) * C153600 + (C39433 + C39432) * C98471) *
                 C153556) *
                C153477) *
               C1131 +
           (((C40446 * C98471 + C41230 * C153600) * C153556 +
             (C39081 * C98471 + C41235 * C153600) * C153563 +
             (C42220 * C98471 + (C36754 + C36755) * C153600) * C83544) *
                C153477 -
            (C139729 * C83544 +
             (C37403 * C153600 + (C35193 + C35192) * C98471) * C153563 +
             (C40447 * C153600 + (C35191 + C35190) * C98471) * C153556) *
                C153725) *
               C153449) *
              C153716 +
          (((((C39436 + C39437) * C98471 + (C39438 + C39439) * C153600) *
                 C153556 +
             (C40448 * C98471 + C59703 * C153600) * C153563 +
             (C40449 * C98471 + (C39442 + C39443) * C153600) * C83544) *
                C153477 -
            (C137986 * C83544 +
             (C40450 * C153600 + (C35199 + C35198) * C98471) * C153563 +
             ((C39437 + C39436) * C153600 +
              (C34889 * C146 + C34906 + C34906 + C153348 * C162 +
               C34887 * C145 + C34907 + C34907 + C153705 * C161) *
                  C98471) *
                 C153556) *
                C153725) *
               C1131 +
           ((((C35198 + C35199) * C98471 + C40448 * C153600) * C153556 +
             ((C35200 + C35201) * C98471 + C40449 * C153600) * C153563 +
             ((C35202 + C35203) * C98471 + (C36188 + C36189) * C153600) *
                 C83544) *
                C153725 -
            (((C34889 * C4833 + C35432 + C35432 + C153348 * C4839 +
               C34887 * C4834 + C35433 + C35433 + C153705 * C4840) *
                  C153600 +
              (C36189 + C36188) * C98471) *
                 C83544 +
             ((C39443 + C39442) * C153600 + C39082 * C98471) * C153563 +
             (C58695 * C153600 + C40450 * C98471) * C153556) *
                C153477) *
               C153449) *
              C153384)) /
        (p * q * std::sqrt(p + q));
    d2ee[84] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C34887 * C144 + C34892 + C34892 + C153705 * C160 + C34889 * C145 +
              C34893 + C34893 + C153348 * C161) *
                 C98471 +
             (C39432 + C39433) * C153600) *
                C153556 +
            ((C35190 + C35191) * C98471 + C40446 * C153600) * C153563 +
            C137985 * C83544) *
               C153413 * C1131 -
           ((C37402 * C153600 + C36515 * C98471) * C83544 +
            (C37403 * C153600 + (C35193 + C35192) * C98471) * C153563 +
            (C40447 * C153600 + (C35191 + C35190) * C98471) * C153556) *
               C153413 * C153449) *
              C1133 +
          ((((C35198 + C35199) * C98471 + C40448 * C153600) * C153556 +
            ((C35200 + C35201) * C98471 + C40449 * C153600) * C153563 +
            ((C35202 + C35203) * C98471 + (C36188 + C36189) * C153600) *
                C83544) *
               C153413 * C153449 -
           (C137986 * C83544 +
            (C40450 * C153600 + (C35199 + C35198) * C98471) * C153563 +
            ((C39437 + C39436) * C153600 +
             (C34889 * C146 + C34906 + C34906 + C153348 * C162 + C34887 * C145 +
              C34907 + C34907 + C153705 * C161) *
                 C98471) *
                C153556) *
               C153413 * C1131) *
              C1134 +
          ((((C34887 * C146 + C34908 + C34908 + C153705 * C162 + C34889 * C147 +
              C34909 + C34909 + C153348 * C163) *
                 C98471 +
             (C40058 + C40059) * C153600) *
                C153556 +
            ((C35660 + C35661) * C98471 + (C39750 + C39751) * C153600) *
                C153563 +
            ((C35662 + C35663) * C98471 + (C39752 + C39753) * C153600) *
                C83544) *
               C153413 * C1131 -
           (((C34889 * C4146 + C35860 + C35860 + C153348 * C4154 +
              C34887 * C4145 + C35861 + C35861 + C153705 * C4153) *
                 C153600 +
             (C35665 + C35664) * C98471) *
                C83544 +
            ((C39753 + C39752) * C153600 + (C35663 + C35662) * C98471) *
                C153563 +
            ((C39751 + C39750) * C153600 + (C35661 + C35660) * C98471) *
                C153556) *
               C153413 * C153449) *
              C1135)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C34887 * C144 + C34892 + C34892 + C153705 * C160 + C34889 * C145 +
             C34893 + C34893 + C153348 * C161) *
                C98471 +
            (C39432 + C39433) * C153600) *
               C153556 +
           ((C35190 + C35191) * C98471 + C40446 * C153600) * C153563 +
           C137985 * C83544) *
              C153413 * C1218 -
          (C139729 * C83544 +
           (C37403 * C153600 + (C35193 + C35192) * C98471) * C153563 +
           (C40447 * C153600 + (C35191 + C35190) * C98471) * C153556) *
              C153413 * C1219 +
          (C137985 * C153556 + (C35207 * C98471 + C42220 * C153600) * C153563 +
           ((C35197 + C35196) * C98471 + (C37416 + C37417) * C153600) *
               C83544) *
              C153413 * C1220 -
          (((C34889 * C29033 + C37408 + C37408 + C153348 * C29037 +
             C34887 * C29032 + C37409 + C37409 + C153705 * C29036) *
                C153600 +
            (C36529 + C36528) * C98471) *
               C83544 +
           ((C37417 + C37416) * C153600 + C36514 * C98471) * C153563 +
           C139729 * C153556) *
              C153413 * C1221) *
         C153378) /
            (p * q * std::sqrt(p + q));
    d2ee[85] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C34887 * C144 + C34892 + C34892 + C153705 * C160 +
               C34889 * C145 + C34893 + C34893 + C153348 * C161) *
                  C98471 +
              (C39432 + C39433) * C153600) *
                 C153556 +
             ((C35190 + C35191) * C98471 + C40446 * C153600) * C153563 +
             C137985 * C83544) *
                C1938 -
            (C140988 * C83544 + (C41229 * C153600 + C40447 * C98471) * C153563 +
             ((C39434 + C39435) * C153600 + (C39433 + C39432) * C98471) *
                 C153556) *
                C153477) *
               C153724 +
           (((C40446 * C98471 + C41230 * C153600) * C153556 +
             (C39081 * C98471 + C41235 * C153600) * C153563 +
             (C42220 * C98471 + (C36754 + C36755) * C153600) * C83544) *
                C153477 -
            (C139729 * C83544 +
             (C37403 * C153600 + (C35193 + C35192) * C98471) * C153563 +
             (C40447 * C153600 + (C35191 + C35190) * C98471) * C153556) *
                C1938) *
               C153449) *
              C153716 +
          (((((C39436 + C39437) * C98471 + (C39438 + C39439) * C153600) *
                 C153556 +
             (C40448 * C98471 + C59703 * C153600) * C153563 +
             (C40449 * C98471 + (C39442 + C39443) * C153600) * C83544) *
                C153477 -
            (C137986 * C83544 +
             (C40450 * C153600 + (C35199 + C35198) * C98471) * C153563 +
             ((C39437 + C39436) * C153600 +
              (C34889 * C146 + C34906 + C34906 + C153348 * C162 +
               C34887 * C145 + C34907 + C34907 + C153705 * C161) *
                  C98471) *
                 C153556) *
                C1938) *
               C153724 +
           ((((C35198 + C35199) * C98471 + C40448 * C153600) * C153556 +
             ((C35200 + C35201) * C98471 + C40449 * C153600) * C153563 +
             ((C35202 + C35203) * C98471 + (C36188 + C36189) * C153600) *
                 C83544) *
                C1938 -
            (((C34889 * C4833 + C35432 + C35432 + C153348 * C4839 +
               C34887 * C4834 + C35433 + C35433 + C153705 * C4840) *
                  C153600 +
              (C36189 + C36188) * C98471) *
                 C83544 +
             ((C39443 + C39442) * C153600 + C39082 * C98471) * C153563 +
             (C58695 * C153600 + C40450 * C98471) * C153556) *
                C153477) *
               C153449) *
              C153384)) /
        (p * q * std::sqrt(p + q));
    d2ee[86] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C34887 * C144 + C34892 + C34892 + C153705 * C160 + C34889 * C145 +
              C34893 + C34893 + C153348 * C161) *
                 C98471 +
             (C39432 + C39433) * C153600) *
                C153556 +
            ((C35190 + C35191) * C98471 + C40446 * C153600) * C153563 +
            C137985 * C83544) *
               C153797 -
           (C140988 * C83544 + (C41229 * C153600 + C40447 * C98471) * C153563 +
            ((C39434 + C39435) * C153600 + (C39433 + C39432) * C98471) *
                C153556) *
               C153798 +
           ((C58686 * C98471 + C63735 * C153600) * C153556 +
            (C41230 * C98471 + C60479 * C153600) * C153563 +
            (C41235 * C98471 + (C41250 + C41251) * C153600) * C83544) *
               C2454) *
              C153724 +
          (((C40446 * C98471 + C41230 * C153600) * C153556 +
            (C39081 * C98471 + C41235 * C153600) * C153563 +
            (C42220 * C98471 + (C36754 + C36755) * C153600) * C83544) *
               C153798 -
           (C139729 * C83544 +
            (C37403 * C153600 + (C35193 + C35192) * C98471) * C153563 +
            (C40447 * C153600 + (C35191 + C35190) * C98471) * C153556) *
               C153797 -
           (((C34889 * C32070 + C37936 + C37936 + C153348 * C32072 +
              C34887 * C30195 + C37937 + C37937 + C153705 * C30199) *
                 C153600 +
             (C36755 + C36754) * C98471) *
                C83544 +
            ((C41251 + C41250) * C153600 + C41228 * C98471) * C153563 +
            (C60478 * C153600 + C41229 * C98471) * C153556) *
               C2454) *
              C153449) *
         C153378) /
        (p * q * std::sqrt(p + q));
    d2ee[87] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C34887 * C144 + C34892 + C34892 + C153705 * C160 + C34889 * C145 +
              C34893 + C34893 + C153348 * C161) *
                 C98471 +
             (C39432 + C39433) * C153600) *
                C153556 +
            ((C35190 + C35191) * C98471 + C40446 * C153600) * C153563 +
            C137985 * C83544) *
               C1938 -
           (C140988 * C83544 + (C41229 * C153600 + C40447 * C98471) * C153563 +
            ((C39434 + C39435) * C153600 + (C39433 + C39432) * C98471) *
                C153556) *
               C153477) *
              C310 +
          (((C40446 * C98471 + C41230 * C153600) * C153556 +
            (C39081 * C98471 + C41235 * C153600) * C153563 +
            (C42220 * C98471 + (C36754 + C36755) * C153600) * C83544) *
               C153477 -
           (C139729 * C83544 +
            (C37403 * C153600 + (C35193 + C35192) * C98471) * C153563 +
            (C40447 * C153600 + (C35191 + C35190) * C98471) * C153556) *
               C1938) *
              C311 +
          ((C137985 * C153556 + (C35207 * C98471 + C42220 * C153600) * C153563 +
            ((C35197 + C35196) * C98471 + (C37416 + C37417) * C153600) *
                C83544) *
               C1938 -
           (((C34889 * C28571 + C36736 + C36736 + C153348 * C28575 +
              C34887 * C28570 + C36737 + C36737 + C153705 * C28574) *
                 C153600 +
             (C37417 + C37416) * C98471) *
                C83544 +
            ((C36755 + C36754) * C153600 + C37402 * C98471) * C153563 +
            C140988 * C153556) *
               C153477) *
              C312) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C34887 * C144 + C34892 + C34892 + C153705 * C160 + C34889 * C145 +
              C34893 + C34893 + C153348 * C161) *
                 C98471 +
             (C39432 + C39433) * C153600) *
                C153556 +
            ((C35190 + C35191) * C98471 + C40446 * C153600) * C153563 +
            C137985 * C83544) *
               C1938 -
           (C140988 * C83544 + (C41229 * C153600 + C40447 * C98471) * C153563 +
            ((C39434 + C39435) * C153600 + (C39433 + C39432) * C98471) *
                C153556) *
               C153477) *
              C153397 * C1133 +
          ((((C39436 + C39437) * C98471 + (C39438 + C39439) * C153600) *
                C153556 +
            (C40448 * C98471 + C59703 * C153600) * C153563 +
            (C40449 * C98471 + (C39442 + C39443) * C153600) * C83544) *
               C153477 -
           (C137986 * C83544 +
            (C40450 * C153600 + (C35199 + C35198) * C98471) * C153563 +
            ((C39437 + C39436) * C153600 +
             (C34889 * C146 + C34906 + C34906 + C153348 * C162 + C34887 * C145 +
              C34907 + C34907 + C153705 * C161) *
                 C98471) *
                C153556) *
               C1938) *
              C153397 * C1134 +
          ((((C34887 * C146 + C34908 + C34908 + C153705 * C162 + C34889 * C147 +
              C34909 + C34909 + C153348 * C163) *
                 C98471 +
             (C40058 + C40059) * C153600) *
                C153556 +
            ((C35660 + C35661) * C98471 + (C39750 + C39751) * C153600) *
                C153563 +
            ((C35662 + C35663) * C98471 + (C39752 + C39753) * C153600) *
                C83544) *
               C1938 -
           (((C34889 * C3330 + C40048 + C40048 + C153348 * C3338 +
              C34887 * C3329 + C40049 + C40049 + C153705 * C3337) *
                 C153600 +
             (C39753 + C39752) * C98471) *
                C83544 +
            ((C59012 + C59011) * C153600 + (C39751 + C39750) * C98471) *
                C153563 +
            ((C59316 + C59315) * C153600 + (C40059 + C40058) * C98471) *
                C153556) *
               C153477) *
              C153397 * C1135)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C34887 * C144 + C34892 + C34892 + C153705 * C160 + C34889 * C145 +
             C34893 + C34893 + C153348 * C161) *
                C98471 +
            (C39432 + C39433) * C153600) *
               C153556 +
           ((C35190 + C35191) * C98471 + C40446 * C153600) * C153563 +
           C137985 * C83544) *
              C2144 -
          (C140988 * C83544 + (C41229 * C153600 + C40447 * C98471) * C153563 +
           ((C39434 + C39435) * C153600 + (C39433 + C39432) * C98471) *
               C153556) *
              C2145 +
          ((C58686 * C98471 + C63735 * C153600) * C153556 +
           (C41230 * C98471 + C60479 * C153600) * C153563 +
           (C41235 * C98471 + (C41250 + C41251) * C153600) * C83544) *
              C2146 -
          (((C34889 * C31240 + C43000 + C43000 + C153348 * C31244 +
             C34887 * C31239 + C43001 + C43001 + C153705 * C31243) *
                C153600 +
            (C41251 + C41250) * C98471) *
               C83544 +
           ((C60489 + C60488) * C153600 + C60478 * C98471) * C153563 +
           (C66089 * C153600 + C62230 * C98471) * C153556) *
              C2147) *
         C153397 * C153378) /
            (p * q * std::sqrt(p + q));
    d2ee[88] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C34887 * C144 + C34892 + C34892 + C153705 * C160 + C34889 * C145 +
              C34893 + C34893 + C153348 * C161) *
                 C98471 +
             (C39432 + C39433) * C153600) *
                C153556 +
            ((C35190 + C35191) * C98471 + C40446 * C153600) * C153563 +
            C137985 * C83544) *
               C153797 -
           (C140988 * C83544 + (C41229 * C153600 + C40447 * C98471) * C153563 +
            ((C39434 + C39435) * C153600 + (C39433 + C39432) * C98471) *
                C153556) *
               C153798 +
           ((C58686 * C98471 + C63735 * C153600) * C153556 +
            (C41230 * C98471 + C60479 * C153600) * C153563 +
            (C41235 * C98471 + (C41250 + C41251) * C153600) * C83544) *
               C2454) *
              C153397 * C153716 +
          ((((C39436 + C39437) * C98471 + (C39438 + C39439) * C153600) *
                C153556 +
            (C40448 * C98471 + C59703 * C153600) * C153563 +
            (C40449 * C98471 + (C39442 + C39443) * C153600) * C83544) *
               C153798 -
           (C137986 * C83544 +
            (C40450 * C153600 + (C35199 + C35198) * C98471) * C153563 +
            ((C39437 + C39436) * C153600 +
             (C34889 * C146 + C34906 + C34906 + C153348 * C162 + C34887 * C145 +
              C34907 + C34907 + C153705 * C161) *
                 C98471) *
                C153556) *
               C153797 -
           (((C34889 * C6213 + C39402 + C39402 + C153348 * C6225 +
              C34887 * C6214 + C39403 + C39403 + C153705 * C6226) *
                 C153600 +
             (C39443 + C39442) * C98471) *
                C83544 +
            ((C58712 + C58711) * C153600 + C58695 * C98471) * C153563 +
            (C63740 * C153600 + C58696 * C98471) * C153556) *
               C2454) *
              C153397 * C153384)) /
        (p * q * std::sqrt(p + q));
    d2ee[89] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C34887 * C144 + C34892 + C34892 + C153705 * C160 + C34889 * C145 +
              C34893 + C34893 + C153348 * C161) *
                 C98471 +
             (C39432 + C39433) * C153600) *
                C153556 +
            ((C35190 + C35191) * C98471 + C40446 * C153600) * C153563 +
            C137985 * C83544) *
               C1938 -
           (C140988 * C83544 + (C41229 * C153600 + C40447 * C98471) * C153563 +
            ((C39434 + C39435) * C153600 + (C39433 + C39432) * C98471) *
                C153556) *
               C153477) *
              C153397 * C1133 +
          ((((C39436 + C39437) * C98471 + (C39438 + C39439) * C153600) *
                C153556 +
            (C40448 * C98471 + C59703 * C153600) * C153563 +
            (C40449 * C98471 + (C39442 + C39443) * C153600) * C83544) *
               C153477 -
           (C137986 * C83544 +
            (C40450 * C153600 + (C35199 + C35198) * C98471) * C153563 +
            ((C39437 + C39436) * C153600 +
             (C34889 * C146 + C34906 + C34906 + C153348 * C162 + C34887 * C145 +
              C34907 + C34907 + C153705 * C161) *
                 C98471) *
                C153556) *
               C1938) *
              C153397 * C1134 +
          ((((C34887 * C146 + C34908 + C34908 + C153705 * C162 + C34889 * C147 +
              C34909 + C34909 + C153348 * C163) *
                 C98471 +
             (C40058 + C40059) * C153600) *
                C153556 +
            ((C35660 + C35661) * C98471 + (C39750 + C39751) * C153600) *
                C153563 +
            ((C35662 + C35663) * C98471 + (C39752 + C39753) * C153600) *
                C83544) *
               C1938 -
           (((C34889 * C3330 + C40048 + C40048 + C153348 * C3338 +
              C34887 * C3329 + C40049 + C40049 + C153705 * C3337) *
                 C153600 +
             (C39753 + C39752) * C98471) *
                C83544 +
            ((C59012 + C59011) * C153600 + (C39751 + C39750) * C98471) *
                C153563 +
            ((C59316 + C59315) * C153600 + (C40059 + C40058) * C98471) *
                C153556) *
               C153477) *
              C153397 * C1135)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C34887 * C144 + C34892 + C34892 + C153705 * C160 + C34889 * C145 +
              C34893 + C34893 + C153348 * C161) *
                 C98471 +
             (C39432 + C39433) * C153600) *
                C153556 +
            ((C35190 + C35191) * C98471 + C40446 * C153600) * C153563 +
            C137985 * C83544) *
               C1938 -
           (C140988 * C83544 + (C41229 * C153600 + C40447 * C98471) * C153563 +
            ((C39434 + C39435) * C153600 + (C39433 + C39432) * C98471) *
                C153556) *
               C153477) *
              C310 +
          (((C40446 * C98471 + C41230 * C153600) * C153556 +
            (C39081 * C98471 + C41235 * C153600) * C153563 +
            (C42220 * C98471 + (C36754 + C36755) * C153600) * C83544) *
               C153477 -
           (C139729 * C83544 +
            (C37403 * C153600 + (C35193 + C35192) * C98471) * C153563 +
            (C40447 * C153600 + (C35191 + C35190) * C98471) * C153556) *
               C1938) *
              C311 +
          ((C137985 * C153556 + (C35207 * C98471 + C42220 * C153600) * C153563 +
            ((C35197 + C35196) * C98471 + (C37416 + C37417) * C153600) *
                C83544) *
               C1938 -
           (((C34889 * C28571 + C36736 + C36736 + C153348 * C28575 +
              C34887 * C28570 + C36737 + C36737 + C153705 * C28574) *
                 C153600 +
             (C37417 + C37416) * C98471) *
                C83544 +
            ((C36755 + C36754) * C153600 + C37402 * C98471) * C153563 +
            C140988 * C153556) *
               C153477) *
              C312) *
         C153378) /
            (p * q * std::sqrt(p + q));
    d2ee[90] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153596 +
             C31295 * C153603 + C31296 * C116108) *
                C153556 +
            (C148313 + C148314 + C148315) * C153563 + C148333 * C83544) *
               C153413 * C153724 -
           ((C148319 + C148320 + C148321) * C83544 +
            (C148318 + C148317 + C148316) * C153563 +
            (C148315 + C148314 + C148313) * C153556) *
               C153413 * C153449) *
              C153793 +
          (((C148322 + C148323 + C148324) * C153556 +
            (C148325 + C148326 + C148327) * C153563 +
            (C148328 + C148329 + C148330) * C83544) *
               C153413 * C153449 -
           (C148334 * C83544 + (C148324 + C148323 + C148322) * C153563 +
            (C31301 * C116108 + C31300 * C153603 +
             (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C153596) *
                C153556) *
               C153413 * C153724) *
              C153794 +
          ((((C28234 * C146 + C28247 + C28247 + C153338 * C162) * C153596 +
             C31779 * C153603 + C31780 * C116108) *
                C153556 +
            (C148771 + C148772 + C148773) * C153563 +
            (C148774 + C148775 + C148776) * C83544) *
               C153413 * C153724 -
           (((C28234 * C4833 + C31533 + C31533 + C153338 * C4839) * C116108 +
             C44720 * C153603 + C28738 * C153596) *
                C83544 +
            (C148776 + C148775 + C148774) * C153563 +
            (C148773 + C148772 + C148771) * C153556) *
               C153413 * C153449) *
              C678)) /
        (p * q * std::sqrt(p + q));
    d2ee[91] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153596 +
              C31295 * C153603 + C31296 * C116108) *
                 C153556 +
             (C148313 + C148314 + C148315) * C153563 + C148333 * C83544) *
                C153725 -
            ((C149285 + C149286 + C149287) * C83544 +
             (C149288 + C149289 + C149290) * C153563 +
             (C31299 * C116108 + C31296 * C153603 + C31295 * C153596) *
                 C153556) *
                C153477) *
               C153724 +
           (((C149290 + C149289 + C149288) * C153556 +
             (C149287 + C149286 + C149285) * C153563 +
             (C29074 * C153596 + C29447 * C153603 + C32696 * C116108) *
                 C83544) *
                C153477 -
            ((C148319 + C148320 + C148321) * C83544 +
             (C148318 + C148317 + C148316) * C153563 +
             (C148315 + C148314 + C148313) * C153556) *
                C153725) *
               C153449) *
              C313 +
          ((((C31300 * C153596 + C31301 * C153603 + C31302 * C116108) *
                 C153556 +
             (C149291 + C149292 + C149293) * C153563 +
             (C149294 + C149295 + C149296) * C83544) *
                C153477 -
            (C148334 * C83544 + (C148324 + C148323 + C148322) * C153563 +
             (C31301 * C116108 + C31300 * C153603 +
              (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C153596) *
                 C153556) *
                C153725) *
               C153724 +
           (((C148322 + C148323 + C148324) * C153556 +
             (C148325 + C148326 + C148327) * C153563 +
             (C148328 + C148329 + C148330) * C83544) *
                C153725 -
            (((C28234 * C32070 + C32086 + C32086 + C153338 * C32072) * C116108 +
              C31017 * C153603 + C29079 * C153596) *
                 C83544 +
             (C149296 + C149295 + C149294) * C153563 +
             (C149293 + C149292 + C149291) * C153556) *
                C153477) *
               C153449) *
              C153384)) /
        (p * q * std::sqrt(p + q));
    d2ee[92] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153596 +
             C31295 * C153603 + C31296 * C116108) *
                C153556 +
            (C148313 + C148314 + C148315) * C153563 + C148333 * C83544) *
               C153413 * C310 -
           ((C148319 + C148320 + C148321) * C83544 +
            (C148318 + C148317 + C148316) * C153563 +
            (C148315 + C148314 + C148313) * C153556) *
               C153413 * C311 +
           (C148333 * C153556 + (C148321 + C148320 + C148319) * C153563 +
            (C28432 * C153596 + C29073 * C153603 + C29448 * C116108) * C83544) *
               C153413 * C312) *
              C313 +
          (((C148322 + C148323 + C148324) * C153556 +
            (C148325 + C148326 + C148327) * C153563 +
            (C148328 + C148329 + C148330) * C83544) *
               C153413 * C311 -
           (C148334 * C83544 + (C148324 + C148323 + C148322) * C153563 +
            (C31301 * C116108 + C31300 * C153603 +
             (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C153596) *
                C153556) *
               C153413 * C310 -
           (((C28234 * C28571 + C28592 + C28592 + C153338 * C28575) * C116108 +
             C29080 * C153603 + C28437 * C153596) *
                C83544 +
            (C148330 + C148329 + C148328) * C153563 + C148334 * C153556) *
               C153413 * C312) *
              C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153596 +
            C31295 * C153603 + C31296 * C116108) *
               C153556 +
           (C28429 * C153596 + C29076 * C153603 + C29445 * C116108) * C153563 +
           (C28430 * C153596 + C29075 * C153603 + C29446 * C116108) * C83544) *
              C153413 * C153397 * C130 -
          ((C31016 * C116108 + C29078 * C153603 + C28435 * C153596) * C83544 +
           (C31015 * C116108 + C29077 * C153603 + C28434 * C153596) * C153563 +
           (C31301 * C116108 + C31300 * C153603 +
            (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C153596) *
               C153556) *
              C153413 * C153397 * C131 +
          (((C28234 * C146 + C28247 + C28247 + C153338 * C162) * C153596 +
            C31779 * C153603 + C31780 * C116108) *
               C153556 +
           (C28736 * C153596 + C31542 * C153603 + C31543 * C116108) * C153563 +
           (C28737 * C153596 + C31544 * C153603 + C31545 * C116108) * C83544) *
              C153413 * C153397 * C132 -
          (((C28234 * C3330 + C30761 + C30761 + C153338 * C3338) * C116108 +
            (C28234 * C1797 + C30762 + C30762 + C153338 * C1807) * C153603 +
            (C28234 * C323 + C28254 + C28254 + C153338 * C347) * C153596) *
               C83544 +
           ((C28234 * C1366 + C30763 + C30763 + C153338 * C1376) * C116108 +
            (C28234 * C984 + C30764 + C30764 + C153338 * C996) * C153603 +
            (C28234 * C316 + C28255 + C28255 + C153338 * C340) * C153596) *
               C153563 +
           ((C28234 * C504 + C30765 + C30765 + C153338 * C528) * C116108 +
            (C28234 * C497 + C30766 + C30766 + C153338 * C521) * C153603 +
            (C28234 * C147 + C28256 + C28256 + C153338 * C163) * C153596) *
               C153556) *
              C153413 * C153397 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153596 +
             C31295 * C153603 + C31296 * C116108) *
                C153556 +
            (C148313 + C148314 + C148315) * C153563 + C148333 * C83544) *
               C493 -
           ((C31297 * C116108 + C29446 * C153603 + C29075 * C153596) * C83544 +
            (C31298 * C116108 + C29445 * C153603 + C29076 * C153596) * C153563 +
            (C31299 * C116108 + C31296 * C153603 + C31295 * C153596) *
                C153556) *
               C494 +
           ((C31296 * C153596 + C31299 * C153603 + C34025 * C116108) * C153556 +
            (C29445 * C153596 + C31298 * C153603 + C32694 * C116108) * C153563 +
            (C29446 * C153596 + C31297 * C153603 + C32695 * C116108) * C83544) *
               C495) *
              C153397 * C313 +
          (((C31300 * C153596 + C31301 * C153603 + C31302 * C116108) * C153556 +
            (C29077 * C153596 + C31015 * C153603 + C31303 * C116108) * C153563 +
            (C29078 * C153596 + C31016 * C153603 + C31304 * C116108) * C83544) *
               C494 -
           (C148334 * C83544 + (C148324 + C148323 + C148322) * C153563 +
            (C31301 * C116108 + C31300 * C153603 +
             (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C153596) *
                C153556) *
               C493 -
           (((C28234 * C31240 + C31272 + C31272 + C153338 * C31244) * C116108 +
             C31304 * C153603 + C31016 * C153596) *
                C83544 +
            (C56425 * C116108 + C31303 * C153603 + C31015 * C153596) * C153563 +
            (C55997 * C116108 + C31302 * C153603 + C31301 * C153596) *
                C153556) *
               C495) *
              C153397 * C153384)) /
            (p * q * std::sqrt(p + q));
    d2ee[93] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153596 +
             C31295 * C153603 + C31296 * C116108) *
                C153556 +
            (C148313 + C148314 + C148315) * C153563 + C148333 * C83544) *
               C153725 -
           ((C31297 * C116108 + C29446 * C153603 + C29075 * C153596) * C83544 +
            (C31298 * C116108 + C29445 * C153603 + C29076 * C153596) * C153563 +
            (C31299 * C116108 + C31296 * C153603 + C31295 * C153596) *
                C153556) *
               C153477) *
              C153397 * C153793 +
          (((C31300 * C153596 + C31301 * C153603 + C31302 * C116108) * C153556 +
            (C29077 * C153596 + C31015 * C153603 + C31303 * C116108) * C153563 +
            (C29078 * C153596 + C31016 * C153603 + C31304 * C116108) * C83544) *
               C153477 -
           (C148334 * C83544 + (C148324 + C148323 + C148322) * C153563 +
            (C31301 * C116108 + C31300 * C153603 +
             (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C153596) *
                C153556) *
               C153725) *
              C153397 * C153794 +
          ((((C28234 * C146 + C28247 + C28247 + C153338 * C162) * C153596 +
             C31779 * C153603 + C31780 * C116108) *
                C153556 +
            (C148771 + C148772 + C148773) * C153563 +
            (C148774 + C148775 + C148776) * C83544) *
               C153725 -
           (((C28234 * C6213 + C31772 + C31772 + C153338 * C6225) * C116108 +
             C31545 * C153603 + C31544 * C153596) *
                C83544 +
            (C67484 * C116108 + C31543 * C153603 + C31542 * C153596) * C153563 +
            (C56253 * C116108 + C31780 * C153603 + C31779 * C153596) *
                C153556) *
               C153477) *
              C153397 * C678)) /
        (p * q * std::sqrt(p + q));
    d2ee[94] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153596 +
            C31295 * C153603 + C31296 * C116108) *
               C153556 +
           (C28429 * C153596 + C29076 * C153603 + C29445 * C116108) * C153563 +
           (C28430 * C153596 + C29075 * C153603 + C29446 * C116108) * C83544) *
              C153413 * C153397 * C130 -
          ((C31016 * C116108 + C29078 * C153603 + C28435 * C153596) * C83544 +
           (C31015 * C116108 + C29077 * C153603 + C28434 * C153596) * C153563 +
           (C31301 * C116108 + C31300 * C153603 +
            (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C153596) *
               C153556) *
              C153413 * C153397 * C131 +
          (((C28234 * C146 + C28247 + C28247 + C153338 * C162) * C153596 +
            C31779 * C153603 + C31780 * C116108) *
               C153556 +
           (C28736 * C153596 + C31542 * C153603 + C31543 * C116108) * C153563 +
           (C28737 * C153596 + C31544 * C153603 + C31545 * C116108) * C83544) *
              C153413 * C153397 * C132 -
          (((C28234 * C3330 + C30761 + C30761 + C153338 * C3338) * C116108 +
            (C28234 * C1797 + C30762 + C30762 + C153338 * C1807) * C153603 +
            (C28234 * C323 + C28254 + C28254 + C153338 * C347) * C153596) *
               C83544 +
           ((C28234 * C1366 + C30763 + C30763 + C153338 * C1376) * C116108 +
            (C28234 * C984 + C30764 + C30764 + C153338 * C996) * C153603 +
            (C28234 * C316 + C28255 + C28255 + C153338 * C340) * C153596) *
               C153563 +
           ((C28234 * C504 + C30765 + C30765 + C153338 * C528) * C116108 +
            (C28234 * C497 + C30766 + C30766 + C153338 * C521) * C153603 +
            (C28234 * C147 + C28256 + C28256 + C153338 * C163) * C153596) *
               C153556) *
              C153413 * C153397 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153596 +
             C31295 * C153603 + C31296 * C116108) *
                C153556 +
            (C148313 + C148314 + C148315) * C153563 + C148333 * C83544) *
               C153413 * C310 -
           ((C148319 + C148320 + C148321) * C83544 +
            (C148318 + C148317 + C148316) * C153563 +
            (C148315 + C148314 + C148313) * C153556) *
               C153413 * C311 +
           (C148333 * C153556 + (C148321 + C148320 + C148319) * C153563 +
            (C28432 * C153596 + C29073 * C153603 + C29448 * C116108) * C83544) *
               C153413 * C312) *
              C313 +
          (((C148322 + C148323 + C148324) * C153556 +
            (C148325 + C148326 + C148327) * C153563 +
            (C148328 + C148329 + C148330) * C83544) *
               C153413 * C311 -
           (C148334 * C83544 + (C148324 + C148323 + C148322) * C153563 +
            (C31301 * C116108 + C31300 * C153603 +
             (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C153596) *
                C153556) *
               C153413 * C310 -
           (((C28234 * C28571 + C28592 + C28592 + C153338 * C28575) * C116108 +
             C29080 * C153603 + C28437 * C153596) *
                C83544 +
            (C148330 + C148329 + C148328) * C153563 + C148334 * C153556) *
               C153413 * C312) *
              C153384)) /
            (p * q * std::sqrt(p + q));
    d2ee[95] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153596 +
             C31295 * C153603 + C31296 * C116108) *
                C153556 +
            (C148313 + C148314 + C148315) * C153563 + C148333 * C83544) *
               C153413 * C153795 -
           (C149665 * C83544 + (C148318 + C148317 + C148316) * C153563 +
            (C148315 + C148314 + C148313) * C153556) *
               C153413 * C153796 +
           (C148333 * C153556 + (C148321 + C148320 + C148319) * C153563 +
            (C149662 + C149663 + C149664) * C83544) *
               C153413 * C1509) *
              C153716 +
          (((C148322 + C148323 + C148324) * C153556 +
            (C148325 + C148326 + C148327) * C153563 +
            (C148328 + C148329 + C148330) * C83544) *
               C153413 * C153796 -
           (C148334 * C83544 + (C148324 + C148323 + C148322) * C153563 +
            (C31301 * C116108 + C31300 * C153603 +
             (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C153596) *
                C153556) *
               C153413 * C153795 -
           (((C28234 * C28571 + C28592 + C28592 + C153338 * C28575) * C116108 +
             C29080 * C153603 + C28437 * C153596) *
                C83544 +
            (C148330 + C148329 + C148328) * C153563 + C148334 * C153556) *
               C153413 * C1509) *
              C153384)) /
        (p * q * std::sqrt(p + q));
    d2ee[96] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153596 +
             C31295 * C153603 + C31296 * C116108) *
                C153556 +
            (C148313 + C148314 + C148315) * C153563 + C148333 * C83544) *
               C153725 -
           (C150620 * C83544 + (C149288 + C149289 + C149290) * C153563 +
            (C31299 * C116108 + C31296 * C153603 + C31295 * C153596) *
                C153556) *
               C153477) *
              C153795 +
          (((C149290 + C149289 + C149288) * C153556 +
            (C149287 + C149286 + C149285) * C153563 +
            (C150617 + C150618 + C150619) * C83544) *
               C153477 -
           (C149665 * C83544 + (C148318 + C148317 + C148316) * C153563 +
            (C148315 + C148314 + C148313) * C153556) *
               C153725) *
              C153796 +
          ((C148333 * C153556 + (C148321 + C148320 + C148319) * C153563 +
            (C149662 + C149663 + C149664) * C83544) *
               C153725 -
           (((C28234 * C30194 + C30201 + C30201 + C153338 * C30198) * C116108 +
             C29448 * C153603 + C29073 * C153596) *
                C83544 +
            (C150619 + C150618 + C150617) * C153563 + C150620 * C153556) *
               C153477) *
              C1509) *
         C153378) /
        (p * q * std::sqrt(p + q));
    d2ee[97] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153596 +
            C31295 * C153603 + C31296 * C116108) *
               C153556 +
           (C148313 + C148314 + C148315) * C153563 + C148333 * C83544) *
              C153413 * C1218 -
          (C149665 * C83544 + (C148318 + C148317 + C148316) * C153563 +
           (C148315 + C148314 + C148313) * C153556) *
              C153413 * C1219 +
          (C148333 * C153556 + (C148321 + C148320 + C148319) * C153563 +
           (C149662 + C149663 + C149664) * C83544) *
              C153413 * C1220 -
          (((C28234 * C29424 + C29436 + C29436 + C153338 * C29426) * C116108 +
            C29867 * C153603 + C28433 * C153596) *
               C83544 +
           (C149664 + C149663 + C149662) * C153563 + C149665 * C153556) *
              C153413 * C1221) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153596 +
             C31295 * C153603 + C31296 * C116108) *
                C153556 +
            (C148313 + C148314 + C148315) * C153563 + C148333 * C83544) *
               C153413 * C1131 -
           ((C148319 + C148320 + C148321) * C83544 +
            (C148318 + C148317 + C148316) * C153563 +
            (C148315 + C148314 + C148313) * C153556) *
               C153413 * C153449) *
              C1133 +
          (((C148322 + C148323 + C148324) * C153556 +
            (C148325 + C148326 + C148327) * C153563 +
            (C148328 + C148329 + C148330) * C83544) *
               C153413 * C153449 -
           (C148334 * C83544 + (C148324 + C148323 + C148322) * C153563 +
            (C31301 * C116108 + C31300 * C153603 +
             (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C153596) *
                C153556) *
               C153413 * C1131) *
              C1134 +
          ((((C28234 * C146 + C28247 + C28247 + C153338 * C162) * C153596 +
             C31779 * C153603 + C31780 * C116108) *
                C153556 +
            (C148771 + C148772 + C148773) * C153563 +
            (C148774 + C148775 + C148776) * C83544) *
               C153413 * C1131 -
           (((C28234 * C4833 + C31533 + C31533 + C153338 * C4839) * C116108 +
             C44720 * C153603 + C28738 * C153596) *
                C83544 +
            (C148776 + C148775 + C148774) * C153563 +
            (C148773 + C148772 + C148771) * C153556) *
               C153413 * C153449) *
              C1135)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153596 +
             C31295 * C153603 + C31296 * C116108) *
                C153556 +
            (C148313 + C148314 + C148315) * C153563 + C148333 * C83544) *
               C493 -
           ((C149285 + C149286 + C149287) * C83544 +
            (C149288 + C149289 + C149290) * C153563 +
            (C31299 * C116108 + C31296 * C153603 + C31295 * C153596) *
                C153556) *
               C494 +
           ((C31296 * C153596 + C31299 * C153603 + C34025 * C116108) * C153556 +
            (C149884 + C149885 + C149886) * C153563 +
            (C149887 + C149888 + C149889) * C83544) *
               C495) *
              C1131 +
          (((C149290 + C149289 + C149288) * C153556 +
            (C149287 + C149286 + C149285) * C153563 +
            (C29074 * C153596 + C29447 * C153603 + C32696 * C116108) * C83544) *
               C494 -
           (C149665 * C83544 + (C148318 + C148317 + C148316) * C153563 +
            (C148315 + C148314 + C148313) * C153556) *
               C493 -
           (((C28234 * C32673 + C32687 + C32687 + C153338 * C32675) * C116108 +
             C32696 * C153603 + C29447 * C153596) *
                C83544 +
            (C149889 + C149888 + C149887) * C153563 +
            (C149886 + C149885 + C149884) * C153556) *
               C495) *
              C153449) *
         C153378) /
            (p * q * std::sqrt(p + q));
    d2ee[98] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153596 +
              C31295 * C153603 + C31296 * C116108) *
                 C153556 +
             (C148313 + C148314 + C148315) * C153563 + C148333 * C83544) *
                C153725 -
            ((C149285 + C149286 + C149287) * C83544 +
             (C149288 + C149289 + C149290) * C153563 +
             (C31299 * C116108 + C31296 * C153603 + C31295 * C153596) *
                 C153556) *
                C153477) *
               C1131 +
           (((C149290 + C149289 + C149288) * C153556 +
             (C149287 + C149286 + C149285) * C153563 +
             (C29074 * C153596 + C29447 * C153603 + C32696 * C116108) *
                 C83544) *
                C153477 -
            (C149665 * C83544 + (C148318 + C148317 + C148316) * C153563 +
             (C148315 + C148314 + C148313) * C153556) *
                C153725) *
               C153449) *
              C153716 +
          ((((C31300 * C153596 + C31301 * C153603 + C31302 * C116108) *
                 C153556 +
             (C149291 + C149292 + C149293) * C153563 +
             (C149294 + C149295 + C149296) * C83544) *
                C153477 -
            (C148334 * C83544 + (C148324 + C148323 + C148322) * C153563 +
             (C31301 * C116108 + C31300 * C153603 +
              (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C153596) *
                 C153556) *
                C153725) *
               C1131 +
           (((C148322 + C148323 + C148324) * C153556 +
             (C148325 + C148326 + C148327) * C153563 +
             (C148328 + C148329 + C148330) * C83544) *
                C153725 -
            (((C28234 * C32070 + C32086 + C32086 + C153338 * C32072) * C116108 +
              C31017 * C153603 + C29079 * C153596) *
                 C83544 +
             (C149296 + C149295 + C149294) * C153563 +
             (C149293 + C149292 + C149291) * C153556) *
                C153477) *
               C153449) *
              C153384)) /
        (p * q * std::sqrt(p + q));
    d2ee[99] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153596 +
             C31295 * C153603 + C31296 * C116108) *
                C153556 +
            (C148313 + C148314 + C148315) * C153563 + C148333 * C83544) *
               C153413 * C1131 -
           ((C148319 + C148320 + C148321) * C83544 +
            (C148318 + C148317 + C148316) * C153563 +
            (C148315 + C148314 + C148313) * C153556) *
               C153413 * C153449) *
              C1133 +
          (((C148322 + C148323 + C148324) * C153556 +
            (C148325 + C148326 + C148327) * C153563 +
            (C148328 + C148329 + C148330) * C83544) *
               C153413 * C153449 -
           (C148334 * C83544 + (C148324 + C148323 + C148322) * C153563 +
            (C31301 * C116108 + C31300 * C153603 +
             (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C153596) *
                C153556) *
               C153413 * C1131) *
              C1134 +
          ((((C28234 * C146 + C28247 + C28247 + C153338 * C162) * C153596 +
             C31779 * C153603 + C31780 * C116108) *
                C153556 +
            (C148771 + C148772 + C148773) * C153563 +
            (C148774 + C148775 + C148776) * C83544) *
               C153413 * C1131 -
           (((C28234 * C4833 + C31533 + C31533 + C153338 * C4839) * C116108 +
             C44720 * C153603 + C28738 * C153596) *
                C83544 +
            (C148776 + C148775 + C148774) * C153563 +
            (C148773 + C148772 + C148771) * C153556) *
               C153413 * C153449) *
              C1135)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153596 +
            C31295 * C153603 + C31296 * C116108) *
               C153556 +
           (C148313 + C148314 + C148315) * C153563 + C148333 * C83544) *
              C153413 * C1218 -
          (C149665 * C83544 + (C148318 + C148317 + C148316) * C153563 +
           (C148315 + C148314 + C148313) * C153556) *
              C153413 * C1219 +
          (C148333 * C153556 + (C148321 + C148320 + C148319) * C153563 +
           (C149662 + C149663 + C149664) * C83544) *
              C153413 * C1220 -
          (((C28234 * C29424 + C29436 + C29436 + C153338 * C29426) * C116108 +
            C29867 * C153603 + C28433 * C153596) *
               C83544 +
           (C149664 + C149663 + C149662) * C153563 + C149665 * C153556) *
              C153413 * C1221) *
         C153378) /
            (p * q * std::sqrt(p + q));
    d2ee[100] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153596 +
              C31295 * C153603 + C31296 * C116108) *
                 C153556 +
             (C148313 + C148314 + C148315) * C153563 + C148333 * C83544) *
                C1938 -
            (C150620 * C83544 + (C149288 + C149289 + C149290) * C153563 +
             (C31299 * C116108 + C31296 * C153603 + C31295 * C153596) *
                 C153556) *
                C153477) *
               C153724 +
           (((C149290 + C149289 + C149288) * C153556 +
             (C149287 + C149286 + C149285) * C153563 +
             (C150617 + C150618 + C150619) * C83544) *
                C153477 -
            (C149665 * C83544 + (C148318 + C148317 + C148316) * C153563 +
             (C148315 + C148314 + C148313) * C153556) *
                C1938) *
               C153449) *
              C153716 +
          ((((C31300 * C153596 + C31301 * C153603 + C31302 * C116108) *
                 C153556 +
             (C149291 + C149292 + C149293) * C153563 +
             (C149294 + C149295 + C149296) * C83544) *
                C153477 -
            (C148334 * C83544 + (C148324 + C148323 + C148322) * C153563 +
             (C31301 * C116108 + C31300 * C153603 +
              (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C153596) *
                 C153556) *
                C1938) *
               C153724 +
           (((C148322 + C148323 + C148324) * C153556 +
             (C148325 + C148326 + C148327) * C153563 +
             (C148328 + C148329 + C148330) * C83544) *
                C1938 -
            (((C28234 * C32070 + C32086 + C32086 + C153338 * C32072) * C116108 +
              C31017 * C153603 + C29079 * C153596) *
                 C83544 +
             (C149296 + C149295 + C149294) * C153563 +
             (C149293 + C149292 + C149291) * C153556) *
                C153477) *
               C153449) *
              C153384)) /
        (p * q * std::sqrt(p + q));
    d2ee[101] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153596 +
             C31295 * C153603 + C31296 * C116108) *
                C153556 +
            (C148313 + C148314 + C148315) * C153563 + C148333 * C83544) *
               C153797 -
           (C150620 * C83544 + (C149288 + C149289 + C149290) * C153563 +
            (C31299 * C116108 + C31296 * C153603 + C31295 * C153596) *
                C153556) *
               C153798 +
           ((C31296 * C153596 + C31299 * C153603 + C34025 * C116108) * C153556 +
            (C149884 + C149885 + C149886) * C153563 +
            (C149887 + C149888 + C149889) * C83544) *
               C2454) *
              C153724 +
          (((C149290 + C149289 + C149288) * C153556 +
            (C149287 + C149286 + C149285) * C153563 +
            (C150617 + C150618 + C150619) * C83544) *
               C153798 -
           (C149665 * C83544 + (C148318 + C148317 + C148316) * C153563 +
            (C148315 + C148314 + C148313) * C153556) *
               C153797 -
           (((C28234 * C32673 + C32687 + C32687 + C153338 * C32675) * C116108 +
             C32696 * C153603 + C29447 * C153596) *
                C83544 +
            (C149889 + C149888 + C149887) * C153563 +
            (C149886 + C149885 + C149884) * C153556) *
               C2454) *
              C153449) *
         C153378) /
        (p * q * std::sqrt(p + q));
    d2ee[102] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153596 +
             C31295 * C153603 + C31296 * C116108) *
                C153556 +
            (C148313 + C148314 + C148315) * C153563 + C148333 * C83544) *
               C1938 -
           (C150620 * C83544 + (C149288 + C149289 + C149290) * C153563 +
            (C31299 * C116108 + C31296 * C153603 + C31295 * C153596) *
                C153556) *
               C153477) *
              C310 +
          (((C149290 + C149289 + C149288) * C153556 +
            (C149287 + C149286 + C149285) * C153563 +
            (C150617 + C150618 + C150619) * C83544) *
               C153477 -
           (C149665 * C83544 + (C148318 + C148317 + C148316) * C153563 +
            (C148315 + C148314 + C148313) * C153556) *
               C1938) *
              C311 +
          ((C148333 * C153556 + (C148321 + C148320 + C148319) * C153563 +
            (C149662 + C149663 + C149664) * C83544) *
               C1938 -
           (((C28234 * C30194 + C30201 + C30201 + C153338 * C30198) * C116108 +
             C29448 * C153603 + C29073 * C153596) *
                C83544 +
            (C150619 + C150618 + C150617) * C153563 + C150620 * C153556) *
               C153477) *
              C312) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153596 +
             C31295 * C153603 + C31296 * C116108) *
                C153556 +
            (C148313 + C148314 + C148315) * C153563 + C148333 * C83544) *
               C1938 -
           (C150620 * C83544 + (C149288 + C149289 + C149290) * C153563 +
            (C31299 * C116108 + C31296 * C153603 + C31295 * C153596) *
                C153556) *
               C153477) *
              C153397 * C1133 +
          (((C31300 * C153596 + C31301 * C153603 + C31302 * C116108) * C153556 +
            (C149291 + C149292 + C149293) * C153563 +
            (C149294 + C149295 + C149296) * C83544) *
               C153477 -
           (C148334 * C83544 + (C148324 + C148323 + C148322) * C153563 +
            (C31301 * C116108 + C31300 * C153603 +
             (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C153596) *
                C153556) *
               C1938) *
              C153397 * C1134 +
          ((((C28234 * C146 + C28247 + C28247 + C153338 * C162) * C153596 +
             C31779 * C153603 + C31780 * C116108) *
                C153556 +
            (C148771 + C148772 + C148773) * C153563 +
            (C148774 + C148775 + C148776) * C83544) *
               C1938 -
           (((C28234 * C6213 + C31772 + C31772 + C153338 * C6225) * C116108 +
             C31545 * C153603 + C31544 * C153596) *
                C83544 +
            (C67484 * C116108 + C31543 * C153603 + C31542 * C153596) * C153563 +
            (C56253 * C116108 + C31780 * C153603 + C31779 * C153596) *
                C153556) *
               C153477) *
              C153397 * C1135)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153596 +
            C31295 * C153603 + C31296 * C116108) *
               C153556 +
           (C148313 + C148314 + C148315) * C153563 + C148333 * C83544) *
              C2144 -
          (C150620 * C83544 + (C149288 + C149289 + C149290) * C153563 +
           (C31299 * C116108 + C31296 * C153603 + C31295 * C153596) * C153556) *
              C2145 +
          ((C31296 * C153596 + C31299 * C153603 + C34025 * C116108) * C153556 +
           (C149884 + C149885 + C149886) * C153563 +
           (C149887 + C149888 + C149889) * C83544) *
              C2146 -
          (((C28234 * C34011 + C34020 + C34020 + C153338 * C34015) * C116108 +
            C32695 * C153603 + C31297 * C153596) *
               C83544 +
           (C56760 * C116108 + C32694 * C153603 + C31298 * C153596) * C153563 +
           (C55996 * C116108 + C34025 * C153603 + C31299 * C153596) * C153556) *
              C2147) *
         C153397 * C153378) /
            (p * q * std::sqrt(p + q));
    d2ee[103] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153596 +
             C31295 * C153603 + C31296 * C116108) *
                C153556 +
            (C148313 + C148314 + C148315) * C153563 + C148333 * C83544) *
               C153797 -
           (C150620 * C83544 + (C149288 + C149289 + C149290) * C153563 +
            (C31299 * C116108 + C31296 * C153603 + C31295 * C153596) *
                C153556) *
               C153798 +
           ((C31296 * C153596 + C31299 * C153603 + C34025 * C116108) * C153556 +
            (C149884 + C149885 + C149886) * C153563 +
            (C149887 + C149888 + C149889) * C83544) *
               C2454) *
              C153397 * C153716 +
          (((C31300 * C153596 + C31301 * C153603 + C31302 * C116108) * C153556 +
            (C149291 + C149292 + C149293) * C153563 +
            (C149294 + C149295 + C149296) * C83544) *
               C153798 -
           (C148334 * C83544 + (C148324 + C148323 + C148322) * C153563 +
            (C31301 * C116108 + C31300 * C153603 +
             (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C153596) *
                C153556) *
               C153797 -
           (((C28234 * C31240 + C31272 + C31272 + C153338 * C31244) * C116108 +
             C31304 * C153603 + C31016 * C153596) *
                C83544 +
            (C56425 * C116108 + C31303 * C153603 + C31015 * C153596) * C153563 +
            (C55997 * C116108 + C31302 * C153603 + C31301 * C153596) *
                C153556) *
               C2454) *
              C153397 * C153384)) /
        (p * q * std::sqrt(p + q));
    d2ee[104] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153596 +
             C31295 * C153603 + C31296 * C116108) *
                C153556 +
            (C148313 + C148314 + C148315) * C153563 + C148333 * C83544) *
               C1938 -
           (C150620 * C83544 + (C149288 + C149289 + C149290) * C153563 +
            (C31299 * C116108 + C31296 * C153603 + C31295 * C153596) *
                C153556) *
               C153477) *
              C153397 * C1133 +
          (((C31300 * C153596 + C31301 * C153603 + C31302 * C116108) * C153556 +
            (C149291 + C149292 + C149293) * C153563 +
            (C149294 + C149295 + C149296) * C83544) *
               C153477 -
           (C148334 * C83544 + (C148324 + C148323 + C148322) * C153563 +
            (C31301 * C116108 + C31300 * C153603 +
             (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C153596) *
                C153556) *
               C1938) *
              C153397 * C1134 +
          ((((C28234 * C146 + C28247 + C28247 + C153338 * C162) * C153596 +
             C31779 * C153603 + C31780 * C116108) *
                C153556 +
            (C148771 + C148772 + C148773) * C153563 +
            (C148774 + C148775 + C148776) * C83544) *
               C1938 -
           (((C28234 * C6213 + C31772 + C31772 + C153338 * C6225) * C116108 +
             C31545 * C153603 + C31544 * C153596) *
                C83544 +
            (C67484 * C116108 + C31543 * C153603 + C31542 * C153596) * C153563 +
            (C56253 * C116108 + C31780 * C153603 + C31779 * C153596) *
                C153556) *
               C153477) *
              C153397 * C1135)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153596 +
             C31295 * C153603 + C31296 * C116108) *
                C153556 +
            (C148313 + C148314 + C148315) * C153563 + C148333 * C83544) *
               C1938 -
           (C150620 * C83544 + (C149288 + C149289 + C149290) * C153563 +
            (C31299 * C116108 + C31296 * C153603 + C31295 * C153596) *
                C153556) *
               C153477) *
              C310 +
          (((C149290 + C149289 + C149288) * C153556 +
            (C149287 + C149286 + C149285) * C153563 +
            (C150617 + C150618 + C150619) * C83544) *
               C153477 -
           (C149665 * C83544 + (C148318 + C148317 + C148316) * C153563 +
            (C148315 + C148314 + C148313) * C153556) *
               C1938) *
              C311 +
          ((C148333 * C153556 + (C148321 + C148320 + C148319) * C153563 +
            (C149662 + C149663 + C149664) * C83544) *
               C1938 -
           (((C28234 * C30194 + C30201 + C30201 + C153338 * C30198) * C116108 +
             C29448 * C153603 + C29073 * C153596) *
                C83544 +
            (C150619 + C150618 + C150617) * C153563 + C150620 * C153556) *
               C153477) *
              C312) *
         C153378) /
            (p * q * std::sqrt(p + q));
    d2ee[105] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C98471 +
             C31295 * C153600) *
                C153819 +
            (C130745 + C130746) * C153815 + C130761 * C153805 +
            C130762 * C153747) *
               C153413 * C153724 -
           ((C130751 + C130752) * C153747 + (C130750 + C130749) * C153805 +
            (C130748 + C130747) * C153815 + (C130746 + C130745) * C153819) *
               C153413 * C153449) *
              C153793 +
          (((C130753 + C130754) * C153819 + (C130755 + C130756) * C153815 +
            (C130757 + C130758) * C153805 + (C130759 + C130760) * C153747) *
               C153413 * C153449 -
           (C130763 * C153747 + C130764 * C153805 +
            (C130754 + C130753) * C153815 +
            (C31300 * C153600 +
             (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C98471) *
                C153819) *
               C153413 * C153724) *
              C153794 +
          ((((C28234 * C146 + C28247 + C28247 + C153338 * C162) * C98471 +
             C31779 * C153600) *
                C153819 +
            (C131153 + C131154) * C153815 + (C131155 + C131156) * C153805 +
            (C131157 + C131158) * C153747) *
               C153413 * C153724 -
           (((C28234 * C5601 + C28866 + C28866 + C153338 * C5607) * C153600 +
             C28739 * C98471) *
                C153747 +
            (C131158 + C131157) * C153805 + (C131156 + C131155) * C153815 +
            (C131154 + C131153) * C153819) *
               C153413 * C153449) *
              C678)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
              C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 +
              C23999 + C153761 * C162) *
                 C98471 +
             (C48203 + C48204 + C48205) * C153600) *
                C70419 +
            ((C24335 + C24336 + C24337) * C98471 +
             (C25440 + C25439 + C25438) * C153600) *
                C153560) *
               C153413 * C153724 -
           ((C26819 * C153600 + (C24340 + C24339 + C24338) * C98471) * C153560 +
            ((C25438 + C25439 + C25440) * C153600 +
             (C24337 + C24336 + C24335) * C98471) *
                C70419) *
               C153413 * C153449) *
              C153793 +
          ((((C24344 + C24345 + C24346) * C98471 +
             (C25441 + C25442 + C25443) * C153600) *
                C70419 +
            ((C24347 + C24348 + C24349) * C98471 +
             (C25444 + C25445 + C25446) * C153600) *
                C153560) *
               C153413 * C153449 -
           (((C25443 + C25442 + C25441) * C153600 +
             (C24346 + C24345 + C24344) * C98471) *
                C153560 +
            ((C48214 + C48213 + C48212) * C153600 +
             (C23994 * C147 + C24012 + C24012 + C153761 * C163 + C23992 * C146 +
              C24013 + C24013 + C153790 * C162 + C23990 * C145 + C24014 +
              C24014 + C153809 * C161) *
                 C98471) *
                C70419) *
               C153413 * C153724) *
              C153794 +
          ((((C23990 * C146 + C24015 + C24015 + C153809 * C162 + C23992 * C147 +
              C24016 + C24016 + C153790 * C163 + C23994 * C148 + C24017 +
              C24017 + C153761 * C164) *
                 C98471 +
             (C48691 + C48692 + C48693) * C153600) *
                C70419 +
            ((C24858 + C24859 + C24860) * C98471 +
             (C126250 + C126251 + C126252) * C153600) *
                C153560) *
               C153413 * C153724 -
           (((C23994 * C1796 + C25082 + C25082 + C153761 * C1806 +
              C23992 * C1797 + C25083 + C25083 + C153790 * C1807 +
              C23990 * C1798 + C25084 + C25084 + C153809 * C1808) *
                 C153600 +
             (C24863 + C24862 + C24861) * C98471) *
                C153560 +
            ((C126252 + C126251 + C126250) * C153600 +
             (C24860 + C24859 + C24858) * C98471) *
                C70419) *
               C153413 * C153449) *
              C678)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153820 +
             C31295 * C153817 + C31296 * C153808 + C31299 * C153754) *
                C70419 +
            (C134289 + C134290 + C134291 + C134292) * C153560) *
               C153413 * C153724 -
           ((C134293 + C134294 + C134295 + C134296) * C153560 +
            (C134292 + C134291 + C134290 + C134289) * C70419) *
               C153413 * C153449) *
              C153793 +
          (((C134297 + C134298 + C134299 + C134300) * C70419 +
            (C134301 + C134302 + C134303 + C134304) * C153560) *
               C153413 * C153449 -
           ((C134300 + C134299 + C134298 + C134297) * C153560 +
            (C31302 * C153754 + C31301 * C153808 + C31300 * C153817 +
             (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C153820) *
                C70419) *
               C153413 * C153724) *
              C153794 +
          ((((C28234 * C146 + C28247 + C28247 + C153338 * C162) * C153820 +
             C31779 * C153817 + C31780 * C153808 + C56253 * C153754) *
                C70419 +
            (C134693 + C134694 + C134695 + C134696) * C153560) *
               C153413 * C153724 -
           (((C28234 * C6213 + C31772 + C31772 + C153338 * C6225) * C153754 +
             C31545 * C153808 + C31544 * C153817 + C28737 * C153820) *
                C153560 +
            (C134696 + C134695 + C134694 + C134693) * C70419) *
               C153413 * C153449) *
              C678)) /
            (p * q * std::sqrt(p + q));
    d2ee[106] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C98471 +
              C31295 * C153600) *
                 C153819 +
             (C130745 + C130746) * C153815 + C130761 * C153805 +
             C130762 * C153747) *
                C153725 -
            ((C131611 + C131612) * C153747 + (C131613 + C131614) * C153805 +
             (C131615 + C131616) * C153815 +
             (C31296 * C153600 + C31295 * C98471) * C153819) *
                C153477) *
               C153724 +
           (((C131616 + C131615) * C153819 + (C131614 + C131613) * C153815 +
             (C131612 + C131611) * C153805 +
             (C29073 * C98471 + C29448 * C153600) * C153747) *
                C153477 -
            ((C130751 + C130752) * C153747 + (C130750 + C130749) * C153805 +
             (C130748 + C130747) * C153815 + (C130746 + C130745) * C153819) *
                C153725) *
               C153449) *
              C313 +
          ((((C31300 * C98471 + C31301 * C153600) * C153819 +
             (C131617 + C131618) * C153815 + (C131619 + C131620) * C153805 +
             (C131621 + C131622) * C153747) *
                C153477 -
            (C130763 * C153747 + C130764 * C153805 +
             (C130754 + C130753) * C153815 +
             (C31300 * C153600 +
              (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C98471) *
                 C153819) *
                C153725) *
               C153724 +
           (((C130753 + C130754) * C153819 + (C130755 + C130756) * C153815 +
             (C130757 + C130758) * C153805 + (C130759 + C130760) * C153747) *
                C153725 -
            (((C28234 * C28571 + C28592 + C28592 + C153338 * C28575) * C153600 +
              C29080 * C98471) *
                 C153747 +
             (C131622 + C131621) * C153805 + (C131620 + C131619) * C153815 +
             (C131618 + C131617) * C153819) *
                C153477) *
               C153449) *
              C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C23990 * C144 + C23997 + C23997 + C153809 * C160 +
               C23992 * C145 + C23998 + C23998 + C153790 * C161 +
               C23994 * C146 + C23999 + C23999 + C153761 * C162) *
                  C98471 +
              (C48203 + C48204 + C48205) * C153600) *
                 C70419 +
             ((C24335 + C24336 + C24337) * C98471 + C126933 * C153600) *
                 C153560) *
                C153725 -
            ((C49600 * C153600 + C126934 * C98471) * C153560 +
             ((C48208 + C48207 + C48206) * C153600 +
              (C48205 + C48204 + C48203) * C98471) *
                 C70419) *
                C153477) *
               C153724 +
           (((C126933 * C98471 + (C26077 + C26078 + C26079) * C153600) *
                 C70419 +
             ((C25437 + C25436 + C25435) * C98471 +
              (C26080 + C26081 + C26082) * C153600) *
                 C153560) *
                C153477 -
            ((C26819 * C153600 + (C24340 + C24339 + C24338) * C98471) *
                 C153560 +
             (C126934 * C153600 + (C24337 + C24336 + C24335) * C98471) *
                 C70419) *
                C153725) *
               C153449) *
              C313 +
          (((((C48212 + C48213 + C48214) * C98471 +
              (C48215 + C48216 + C48217) * C153600) *
                 C70419 +
             (C126935 * C98471 + (C49002 + C49003 + C49004) * C153600) *
                 C153560) *
                C153477 -
            ((C126936 * C153600 + (C24346 + C24345 + C24344) * C98471) *
                 C153560 +
             ((C48214 + C48213 + C48212) * C153600 +
              (C23994 * C147 + C24012 + C24012 + C153761 * C163 +
               C23992 * C146 + C24013 + C24013 + C153790 * C162 +
               C23990 * C145 + C24014 + C24014 + C153809 * C161) *
                  C98471) *
                 C70419) *
                C153725) *
               C153724 +
           ((((C24344 + C24345 + C24346) * C98471 + C126935 * C153600) *
                 C70419 +
             ((C24347 + C24348 + C24349) * C98471 +
              (C25444 + C25445 + C25446) * C153600) *
                 C153560) *
                C153725 -
            (((C23994 * C3330 + C24604 + C24604 + C153761 * C3338 +
               C23992 * C3329 + C24605 + C24605 + C153790 * C3337 +
               C23990 * C3328 + C24606 + C24606 + C153809 * C3336) *
                  C153600 +
              (C25446 + C25445 + C25444) * C98471) *
                 C153560 +
             ((C49004 + C49003 + C49002) * C153600 + C126936 * C98471) *
                 C70419) *
                C153477) *
               C153449) *
              C153384)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153820 +
              C31295 * C153817 + C31296 * C153808 + C31299 * C153754) *
                 C70419 +
             (C134289 + C134290 + C134291 + C134292) * C153560) *
                C153725 -
            ((C135149 + C135150 + C135151 + C135152) * C153560 +
             (C34025 * C153754 + C31299 * C153808 + C31296 * C153817 +
              C31295 * C153820) *
                 C70419) *
                C153477) *
               C153724 +
           (((C135152 + C135151 + C135150 + C135149) * C70419 +
             (C29075 * C153820 + C29446 * C153817 + C31297 * C153808 +
              C32695 * C153754) *
                 C153560) *
                C153477 -
            ((C134293 + C134294 + C134295 + C134296) * C153560 +
             (C134292 + C134291 + C134290 + C134289) * C70419) *
                C153725) *
               C153449) *
              C313 +
          ((((C31300 * C153820 + C31301 * C153817 + C31302 * C153808 +
              C55997 * C153754) *
                 C70419 +
             (C135153 + C135154 + C135155 + C135156) * C153560) *
                C153477 -
            ((C134300 + C134299 + C134298 + C134297) * C153560 +
             (C31302 * C153754 + C31301 * C153808 + C31300 * C153817 +
              (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C153820) *
                 C70419) *
                C153725) *
               C153724 +
           (((C134297 + C134298 + C134299 + C134300) * C70419 +
             (C134301 + C134302 + C134303 + C134304) * C153560) *
                C153725 -
            (((C28234 * C31240 + C31272 + C31272 + C153338 * C31244) * C153754 +
              C31304 * C153808 + C31016 * C153817 + C29078 * C153820) *
                 C153560 +
             (C135156 + C135155 + C135154 + C135153) * C70419) *
                C153477) *
               C153449) *
              C153384)) /
            (p * q * std::sqrt(p + q));
    d2ee[107] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C23990 * C144 + C23997 + C23997 + C153809 * C160 +
                 C23992 * C145 + C23998 + C23998 + C153790 * C161 +
                 C23994 * C146 + C23999 + C23999 + C153761 * C162) *
                    C98471 +
                (C48203 + C48204 + C48205) * C153600) *
                   C70419 +
               ((C24335 + C24336 + C24337) * C98471 +
                (C25440 + C25439 + C25438) * C153600) *
                   C153560) *
                  C153413 * C153397 * C130 -
              (((C25443 + C25442 + C25441) * C153600 +
                (C24346 + C24345 + C24344) * C98471) *
                   C153560 +
               ((C48214 + C48213 + C48212) * C153600 +
                (C23994 * C147 + C24012 + C24012 + C153761 * C163 +
                 C23992 * C146 + C24013 + C24013 + C153790 * C162 +
                 C23990 * C145 + C24014 + C24014 + C153809 * C161) *
                    C98471) *
                   C70419) *
                  C153413 * C153397 * C131 +
              (((C23990 * C146 + C24015 + C24015 + C153809 * C162 +
                 C23992 * C147 + C24016 + C24016 + C153790 * C163 +
                 C23994 * C148 + C24017 + C24017 + C153761 * C164) *
                    C98471 +
                (C48691 + C48692 + C48693) * C153600) *
                   C70419 +
               ((C24858 + C24859 + C24860) * C98471 +
                (C23990 * C983 + C25087 + C25087 + C153809 * C995 +
                 C23992 * C984 + C25086 + C25086 + C153790 * C996 +
                 C23994 * C985 + C25085 + C25085 + C153761 * C997) *
                    C153600) *
                   C153560) *
                  C153413 * C153397 * C132 -
              (((C23994 * C986 + C125365 + C125365 + C153761 * C998 +
                 C23992 * C985 + C125366 + C125366 + C153790 * C997 +
                 C23990 * C984 + C125367 + C125367 + C153809 * C996) *
                    C153600 +
                (C23994 * C325 + C24027 + C24027 + C153761 * C349 +
                 C23992 * C315 + C24028 + C24028 + C153790 * C339 +
                 C23990 * C316 + C24029 + C24029 + C153809 * C340) *
                    C98471) *
                   C153560 +
               ((C23994 * C506 + C47683 + C47683 + C153761 * C530 +
                 C23992 * C496 + C47684 + C47684 + C153790 * C520 +
                 C23990 * C497 + C47685 + C47685 + C153809 * C521) *
                    C153600 +
                (C23994 * C149 + C24030 + C24030 + C153761 * C165 +
                 C23992 * C148 + C24031 + C24031 + C153790 * C164 +
                 C23990 * C147 + C24032 + C24032 + C153809 * C163) *
                    C98471) *
                   C70419) *
                  C153413 * C153397 * C133) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C23990 * C144 + C23997 + C23997 + C153809 * C160 +
                  C23992 * C145 + C23998 + C23998 + C153790 * C161 +
                  C23994 * C146 + C23999 + C23999 + C153761 * C162) *
                     C98471 +
                 (C48203 + C48204 + C48205) * C153600) *
                    C70419 +
                ((C24335 + C24336 + C24337) * C98471 +
                 (C25440 + C25439 + C25438) * C153600) *
                    C153560) *
                   C153413 * C310 -
               ((C26819 * C153600 + (C24340 + C24339 + C24338) * C98471) *
                    C153560 +
                ((C25438 + C25439 + C25440) * C153600 +
                 (C24337 + C24336 + C24335) * C98471) *
                    C70419) *
                   C153413 * C311 +
               ((C24355 * C98471 + (C25437 + C25436 + C25435) * C153600) *
                    C70419 +
                ((C24343 + C24342 + C24341) * C98471 +
                 (C26827 + C26828 + C26829) * C153600) *
                    C153560) *
                   C153413 * C312) *
                  C313 +
              ((((C24344 + C24345 + C24346) * C98471 +
                 (C25441 + C25442 + C25443) * C153600) *
                    C70419 +
                ((C24347 + C24348 + C24349) * C98471 +
                 (C25444 + C25445 + C25446) * C153600) *
                    C153560) *
                   C153413 * C311 -
               (((C25443 + C25442 + C25441) * C153600 +
                 (C24346 + C24345 + C24344) * C98471) *
                    C153560 +
                ((C48214 + C48213 + C48212) * C153600 +
                 (C23994 * C147 + C24012 + C24012 + C153761 * C163 +
                  C23992 * C146 + C24013 + C24013 + C153790 * C162 +
                  C23990 * C145 + C24014 + C24014 + C153809 * C161) *
                     C98471) *
                    C70419) *
                   C153413 * C310 -
               (((C23994 * C4146 + C25408 + C25408 + C153761 * C4154 +
                  C23992 * C4145 + C25409 + C25409 + C153790 * C4153 +
                  C23990 * C4144 + C25410 + C25410 + C153809 * C4152) *
                     C153600 +
                 (C24352 + C24351 + C24350) * C98471) *
                    C153560 +
                ((C25446 + C25445 + C25444) * C153600 + C24356 * C98471) *
                    C70419) *
                   C153413 * C312) *
                  C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
              C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 +
              C23999 + C153761 * C162) *
                 C98471 +
             (C48203 + C48204 + C48205) * C153600) *
                C70419 +
            ((C24335 + C24336 + C24337) * C98471 +
             (C25440 + C25439 + C25438) * C153600) *
                C153560) *
               C493 -
           ((C49600 * C153600 + (C25438 + C25439 + C25440) * C98471) * C153560 +
            ((C48208 + C48207 + C48206) * C153600 +
             (C48205 + C48204 + C48203) * C98471) *
                C70419) *
               C494 +
           ((C48223 * C98471 + (C48211 + C48210 + C48209) * C153600) * C70419 +
            ((C26077 + C26078 + C26079) * C98471 +
             (C49604 + C49605 + C49606) * C153600) *
                C153560) *
               C495) *
              C153397 * C313 +
          ((((C48212 + C48213 + C48214) * C98471 +
             (C48215 + C48216 + C48217) * C153600) *
                C70419 +
            ((C25441 + C25442 + C25443) * C98471 +
             (C49002 + C49003 + C49004) * C153600) *
                C153560) *
               C494 -
           (((C25443 + C25442 + C25441) * C153600 +
             (C24346 + C24345 + C24344) * C98471) *
                C153560 +
            ((C48214 + C48213 + C48212) * C153600 +
             (C23994 * C147 + C24012 + C24012 + C153761 * C163 + C23992 * C146 +
              C24013 + C24013 + C153790 * C162 + C23990 * C145 + C24014 +
              C24014 + C153809 * C161) *
                 C98471) *
                C70419) *
               C493 -
           (((C23994 * C8437 + C48993 + C48993 + C153761 * C8439 +
              C23992 * C6216 + C48994 + C48994 + C153790 * C6228 +
              C23990 * C6217 + C48995 + C48995 + C153809 * C6229) *
                 C153600 +
             (C49004 + C49003 + C49002) * C98471) *
                C153560 +
            ((C48220 + C48219 + C48218) * C153600 + C48224 * C98471) * C70419) *
               C495) *
              C153397 * C153384)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C98471 +
            C31295 * C153600) *
               C153819 +
           (C28429 * C98471 + C29076 * C153600) * C153815 +
           (C28430 * C98471 + C29075 * C153600) * C153805 +
           (C28431 * C98471 + C29074 * C153600) * C153747) *
              C153413 * C153397 * C130 -
          ((C29079 * C153600 + C28436 * C98471) * C153747 +
           (C29078 * C153600 + C28435 * C98471) * C153805 +
           (C29077 * C153600 + C28434 * C98471) * C153815 +
           (C31300 * C153600 +
            (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C98471) *
               C153819) *
              C153413 * C153397 * C131 +
          (((C28234 * C146 + C28247 + C28247 + C153338 * C162) * C98471 +
            C31779 * C153600) *
               C153819 +
           (C28736 * C98471 + C31542 * C153600) * C153815 +
           (C28737 * C98471 + C31544 * C153600) * C153805 +
           (C28738 * C98471 + C44720 * C153600) * C153747) *
              C153413 * C153397 * C132 -
          (((C28234 * C4146 + C44108 + C44108 + C153338 * C4154) * C153600 +
            (C28234 * C1224 + C28253 + C28253 + C153338 * C1234) * C98471) *
               C153747 +
           ((C28234 * C1797 + C30762 + C30762 + C153338 * C1807) * C153600 +
            (C28234 * C323 + C28254 + C28254 + C153338 * C347) * C98471) *
               C153805 +
           ((C28234 * C984 + C30764 + C30764 + C153338 * C996) * C153600 +
            (C28234 * C316 + C28255 + C28255 + C153338 * C340) * C98471) *
               C153815 +
           ((C28234 * C497 + C30766 + C30766 + C153338 * C521) * C153600 +
            (C28234 * C147 + C28256 + C28256 + C153338 * C163) * C98471) *
               C153819) *
              C153413 * C153397 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C98471 +
             C31295 * C153600) *
                C153819 +
            (C130745 + C130746) * C153815 + C130761 * C153805 +
            C130762 * C153747) *
               C153413 * C310 -
           ((C130751 + C130752) * C153747 + (C130750 + C130749) * C153805 +
            (C130748 + C130747) * C153815 + (C130746 + C130745) * C153819) *
               C153413 * C311 +
           (C130761 * C153819 + C130762 * C153815 +
            (C130752 + C130751) * C153805 +
            (C28433 * C98471 + C29867 * C153600) * C153747) *
               C153413 * C312) *
              C313 +
          (((C130753 + C130754) * C153819 + (C130755 + C130756) * C153815 +
            (C130757 + C130758) * C153805 + (C130759 + C130760) * C153747) *
               C153413 * C311 -
           (C130763 * C153747 + C130764 * C153805 +
            (C130754 + C130753) * C153815 +
            (C31300 * C153600 +
             (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C98471) *
                C153819) *
               C153413 * C310 -
           (((C28234 * C29033 + C29056 + C29056 + C153338 * C29037) * C153600 +
             C28438 * C98471) *
                C153747 +
            (C130760 + C130759) * C153805 + C130763 * C153815 +
            C130764 * C153819) *
               C153413 * C312) *
              C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C98471 +
             C31295 * C153600) *
                C153819 +
            (C130745 + C130746) * C153815 + C130761 * C153805 +
            C130762 * C153747) *
               C493 -
           ((C29447 * C153600 + C29074 * C98471) * C153747 +
            (C29446 * C153600 + C29075 * C98471) * C153805 +
            (C29445 * C153600 + C29076 * C98471) * C153815 +
            (C31296 * C153600 + C31295 * C98471) * C153819) *
               C494 +
           ((C31296 * C98471 + C31299 * C153600) * C153819 +
            (C29445 * C98471 + C31298 * C153600) * C153815 +
            (C29446 * C98471 + C31297 * C153600) * C153805 +
            (C29447 * C98471 + C32696 * C153600) * C153747) *
               C495) *
              C153397 * C313 +
          (((C31300 * C98471 + C31301 * C153600) * C153819 +
            (C29077 * C98471 + C31015 * C153600) * C153815 +
            (C29078 * C98471 + C31016 * C153600) * C153805 +
            (C29079 * C98471 + C31017 * C153600) * C153747) *
               C494 -
           (C130763 * C153747 + C130764 * C153805 +
            (C130754 + C130753) * C153815 +
            (C31300 * C153600 +
             (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C98471) *
                C153819) *
               C493 -
           (((C28234 * C32070 + C32086 + C32086 + C153338 * C32072) * C153600 +
             C31017 * C98471) *
                C153747 +
            (C31304 * C153600 + C31016 * C98471) * C153805 +
            (C31303 * C153600 + C31015 * C98471) * C153815 +
            (C31302 * C153600 + C31301 * C98471) * C153819) *
               C495) *
              C153397 * C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153820 +
            C31295 * C153817 + C31296 * C153808 + C31299 * C153754) *
               C70419 +
           (C28429 * C153820 + C29076 * C153817 + C29445 * C153808 +
            C31298 * C153754) *
               C153560) *
              C153413 * C153397 * C130 -
          ((C31303 * C153754 + C31015 * C153808 + C29077 * C153817 +
            C28434 * C153820) *
               C153560 +
           (C31302 * C153754 + C31301 * C153808 + C31300 * C153817 +
            (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C153820) *
               C70419) *
              C153413 * C153397 * C131 +
          (((C28234 * C146 + C28247 + C28247 + C153338 * C162) * C153820 +
            C31779 * C153817 + C31780 * C153808 + C56253 * C153754) *
               C70419 +
           (C28736 * C153820 + C31542 * C153817 + C31543 * C153808 +
            C67484 * C153754) *
               C153560) *
              C153413 * C153397 * C132 -
          (((C28234 * C8437 + C66878 + C66878 + C153338 * C8439) * C153754 +
            (C28234 * C1366 + C30763 + C30763 + C153338 * C1376) * C153808 +
            (C28234 * C984 + C30764 + C30764 + C153338 * C996) * C153817 +
            (C28234 * C316 + C28255 + C28255 + C153338 * C340) * C153820) *
               C153560 +
           ((C28234 * C2149 + C55730 + C55730 + C153338 * C2159) * C153754 +
            (C28234 * C504 + C30765 + C30765 + C153338 * C528) * C153808 +
            (C28234 * C497 + C30766 + C30766 + C153338 * C521) * C153817 +
            (C28234 * C147 + C28256 + C28256 + C153338 * C163) * C153820) *
               C70419) *
              C153413 * C153397 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153820 +
             C31295 * C153817 + C31296 * C153808 + C31299 * C153754) *
                C70419 +
            (C134289 + C134290 + C134291 + C134292) * C153560) *
               C153413 * C310 -
           ((C134293 + C134294 + C134295 + C134296) * C153560 +
            (C134292 + C134291 + C134290 + C134289) * C70419) *
               C153413 * C311 +
           ((C134296 + C134295 + C134294 + C134293) * C70419 +
            (C28431 * C153820 + C29074 * C153817 + C29447 * C153808 +
             C32696 * C153754) *
                C153560) *
               C153413 * C312) *
              C313 +
          (((C134297 + C134298 + C134299 + C134300) * C70419 +
            (C134301 + C134302 + C134303 + C134304) * C153560) *
               C153413 * C311 -
           ((C134300 + C134299 + C134298 + C134297) * C153560 +
            (C31302 * C153754 + C31301 * C153808 + C31300 * C153817 +
             (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C153820) *
                C70419) *
               C153413 * C310 -
           (((C28234 * C32070 + C32086 + C32086 + C153338 * C32072) * C153754 +
             C31017 * C153808 + C29079 * C153817 + C28436 * C153820) *
                C153560 +
            (C134304 + C134303 + C134302 + C134301) * C70419) *
               C153413 * C312) *
              C153384)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153820 +
             C31295 * C153817 + C31296 * C153808 + C31299 * C153754) *
                C70419 +
            (C134289 + C134290 + C134291 + C134292) * C153560) *
               C493 -
           ((C32694 * C153754 + C31298 * C153808 + C29445 * C153817 +
             C29076 * C153820) *
                C153560 +
            (C34025 * C153754 + C31299 * C153808 + C31296 * C153817 +
             C31295 * C153820) *
                C70419) *
               C494 +
           ((C31296 * C153820 + C31299 * C153817 + C34025 * C153808 +
             C55996 * C153754) *
                C70419 +
            (C29445 * C153820 + C31298 * C153817 + C32694 * C153808 +
             C56760 * C153754) *
                C153560) *
               C495) *
              C153397 * C313 +
          (((C31300 * C153820 + C31301 * C153817 + C31302 * C153808 +
             C55997 * C153754) *
                C70419 +
            (C29077 * C153820 + C31015 * C153817 + C31303 * C153808 +
             C56425 * C153754) *
                C153560) *
               C494 -
           ((C134300 + C134299 + C134298 + C134297) * C153560 +
            (C31302 * C153754 + C31301 * C153808 + C31300 * C153817 +
             (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C153820) *
                C70419) *
               C493 -
           (((C28234 * C56416 + C56422 + C56422 + C153338 * C56418) * C153754 +
             C56425 * C153808 + C31303 * C153817 + C31015 * C153820) *
                C153560 +
            (C55998 * C153754 + C55997 * C153808 + C31302 * C153817 +
             C31301 * C153820) *
                C70419) *
               C495) *
              C153397 * C153384)) /
            (p * q * std::sqrt(p + q));
    d2ee[108] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C98471 +
             C31295 * C153600) *
                C153819 +
            (C130745 + C130746) * C153815 + C130761 * C153805 +
            C130762 * C153747) *
               C153725 -
           ((C29447 * C153600 + C29074 * C98471) * C153747 +
            (C29446 * C153600 + C29075 * C98471) * C153805 +
            (C29445 * C153600 + C29076 * C98471) * C153815 +
            (C31296 * C153600 + C31295 * C98471) * C153819) *
               C153477) *
              C153397 * C153793 +
          (((C31300 * C98471 + C31301 * C153600) * C153819 +
            (C29077 * C98471 + C31015 * C153600) * C153815 +
            (C29078 * C98471 + C31016 * C153600) * C153805 +
            (C29079 * C98471 + C31017 * C153600) * C153747) *
               C153477 -
           (C130763 * C153747 + C130764 * C153805 +
            (C130754 + C130753) * C153815 +
            (C31300 * C153600 +
             (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C98471) *
                C153819) *
               C153725) *
              C153397 * C153794 +
          ((((C28234 * C146 + C28247 + C28247 + C153338 * C162) * C98471 +
             C31779 * C153600) *
                C153819 +
            (C131153 + C131154) * C153815 + (C131155 + C131156) * C153805 +
            (C131157 + C131158) * C153747) *
               C153725 -
           (((C28234 * C4833 + C31533 + C31533 + C153338 * C4839) * C153600 +
             C44720 * C98471) *
                C153747 +
            (C31545 * C153600 + C31544 * C98471) * C153805 +
            (C31543 * C153600 + C31542 * C98471) * C153815 +
            (C31780 * C153600 + C31779 * C98471) * C153819) *
               C153477) *
              C153397 * C678)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
              C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 +
              C23999 + C153761 * C162) *
                 C98471 +
             (C48203 + C48204 + C48205) * C153600) *
                C70419 +
            ((C24335 + C24336 + C24337) * C98471 +
             (C25440 + C25439 + C25438) * C153600) *
                C153560) *
               C153725 -
           ((C49600 * C153600 + (C25438 + C25439 + C25440) * C98471) * C153560 +
            ((C48208 + C48207 + C48206) * C153600 +
             (C48205 + C48204 + C48203) * C98471) *
                C70419) *
               C153477) *
              C153397 * C153793 +
          ((((C48212 + C48213 + C48214) * C98471 +
             (C48215 + C48216 + C48217) * C153600) *
                C70419 +
            ((C25441 + C25442 + C25443) * C98471 +
             (C49002 + C49003 + C49004) * C153600) *
                C153560) *
               C153477 -
           (((C25443 + C25442 + C25441) * C153600 +
             (C24346 + C24345 + C24344) * C98471) *
                C153560 +
            ((C48214 + C48213 + C48212) * C153600 +
             (C23994 * C147 + C24012 + C24012 + C153761 * C163 + C23992 * C146 +
              C24013 + C24013 + C153790 * C162 + C23990 * C145 + C24014 +
              C24014 + C153809 * C161) *
                 C98471) *
                C70419) *
               C153725) *
              C153397 * C153794 +
          ((((C23990 * C146 + C24015 + C24015 + C153809 * C162 + C23992 * C147 +
              C24016 + C24016 + C153790 * C163 + C23994 * C148 + C24017 +
              C24017 + C153761 * C164) *
                 C98471 +
             (C48691 + C48692 + C48693) * C153600) *
                C70419 +
            ((C24858 + C24859 + C24860) * C98471 +
             (C126250 + C126251 + C126252) * C153600) *
                C153560) *
               C153725 -
           (((C23994 * C1365 + C48443 + C48443 + C153761 * C1375 +
              C23992 * C1366 + C48444 + C48444 + C153790 * C1376 +
              C23990 * C1367 + C48445 + C48445 + C153809 * C1377) *
                 C153600 +
             (C126252 + C126251 + C126250) * C98471) *
                C153560 +
            ((C48696 + C48695 + C48694) * C153600 +
             (C48693 + C48692 + C48691) * C98471) *
                C70419) *
               C153477) *
              C153397 * C678)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153820 +
             C31295 * C153817 + C31296 * C153808 + C31299 * C153754) *
                C70419 +
            (C134289 + C134290 + C134291 + C134292) * C153560) *
               C153725 -
           ((C32694 * C153754 + C31298 * C153808 + C29445 * C153817 +
             C29076 * C153820) *
                C153560 +
            (C34025 * C153754 + C31299 * C153808 + C31296 * C153817 +
             C31295 * C153820) *
                C70419) *
               C153477) *
              C153397 * C153793 +
          (((C31300 * C153820 + C31301 * C153817 + C31302 * C153808 +
             C55997 * C153754) *
                C70419 +
            (C29077 * C153820 + C31015 * C153817 + C31303 * C153808 +
             C56425 * C153754) *
                C153560) *
               C153477 -
           ((C134300 + C134299 + C134298 + C134297) * C153560 +
            (C31302 * C153754 + C31301 * C153808 + C31300 * C153817 +
             (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C153820) *
                C70419) *
               C153725) *
              C153397 * C153794 +
          ((((C28234 * C146 + C28247 + C28247 + C153338 * C162) * C153820 +
             C31779 * C153817 + C31780 * C153808 + C56253 * C153754) *
                C70419 +
            (C134693 + C134694 + C134695 + C134696) * C153560) *
               C153725 -
           (((C28234 * C9040 + C56121 + C56121 + C153338 * C9046) * C153754 +
             C67484 * C153808 + C31543 * C153817 + C31542 * C153820) *
                C153560 +
            (C56254 * C153754 + C56253 * C153808 + C31780 * C153817 +
             C31779 * C153820) *
                C70419) *
               C153477) *
              C153397 * C678)) /
            (p * q * std::sqrt(p + q));
    d2ee[109] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
              C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 +
              C23999 + C153761 * C162) *
                 C98471 +
             (C48203 + C48204 + C48205) * C153600) *
                C70419 +
            ((C24335 + C24336 + C24337) * C98471 +
             (C25440 + C25439 + C25438) * C153600) *
                C153560) *
               C153413 * C310 -
           ((C26819 * C153600 + (C24340 + C24339 + C24338) * C98471) * C153560 +
            ((C25438 + C25439 + C25440) * C153600 +
             (C24337 + C24336 + C24335) * C98471) *
                C70419) *
               C153413 * C311 +
           ((C24355 * C98471 + (C25437 + C25436 + C25435) * C153600) * C70419 +
            ((C24343 + C24342 + C24341) * C98471 +
             (C26827 + C26828 + C26829) * C153600) *
                C153560) *
               C153413 * C312) *
              C313 +
          ((((C24344 + C24345 + C24346) * C98471 +
             (C25441 + C25442 + C25443) * C153600) *
                C70419 +
            ((C24347 + C24348 + C24349) * C98471 +
             (C25444 + C25445 + C25446) * C153600) *
                C153560) *
               C153413 * C311 -
           (((C25443 + C25442 + C25441) * C153600 +
             (C24346 + C24345 + C24344) * C98471) *
                C153560 +
            ((C48214 + C48213 + C48212) * C153600 +
             (C23994 * C147 + C24012 + C24012 + C153761 * C163 + C23992 * C146 +
              C24013 + C24013 + C153790 * C162 + C23990 * C145 + C24014 +
              C24014 + C153809 * C161) *
                 C98471) *
                C70419) *
               C153413 * C310 -
           (((C23994 * C4146 + C25408 + C25408 + C153761 * C4154 +
              C23992 * C4145 + C25409 + C25409 + C153790 * C4153 +
              C23990 * C4144 + C25410 + C25410 + C153809 * C4152) *
                 C153600 +
             (C24352 + C24351 + C24350) * C98471) *
                C153560 +
            ((C25446 + C25445 + C25444) * C153600 + C24356 * C98471) * C70419) *
               C153413 * C312) *
              C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
             C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 +
             C23999 + C153761 * C162) *
                C98471 +
            (C48203 + C48204 + C48205) * C153600) *
               C70419 +
           ((C24335 + C24336 + C24337) * C98471 +
            (C25440 + C25439 + C25438) * C153600) *
               C153560) *
              C153413 * C153397 * C130 -
          (((C25443 + C25442 + C25441) * C153600 +
            (C24346 + C24345 + C24344) * C98471) *
               C153560 +
           ((C48214 + C48213 + C48212) * C153600 +
            (C23994 * C147 + C24012 + C24012 + C153761 * C163 + C23992 * C146 +
             C24013 + C24013 + C153790 * C162 + C23990 * C145 + C24014 +
             C24014 + C153809 * C161) *
                C98471) *
               C70419) *
              C153413 * C153397 * C131 +
          (((C23990 * C146 + C24015 + C24015 + C153809 * C162 + C23992 * C147 +
             C24016 + C24016 + C153790 * C163 + C23994 * C148 + C24017 +
             C24017 + C153761 * C164) *
                C98471 +
            (C48691 + C48692 + C48693) * C153600) *
               C70419 +
           ((C24858 + C24859 + C24860) * C98471 +
            (C23990 * C983 + C25087 + C25087 + C153809 * C995 + C23992 * C984 +
             C25086 + C25086 + C153790 * C996 + C23994 * C985 + C25085 +
             C25085 + C153761 * C997) *
                C153600) *
               C153560) *
              C153413 * C153397 * C132 -
          (((C23994 * C986 + C125365 + C125365 + C153761 * C998 +
             C23992 * C985 + C125366 + C125366 + C153790 * C997 +
             C23990 * C984 + C125367 + C125367 + C153809 * C996) *
                C153600 +
            (C23994 * C325 + C24027 + C24027 + C153761 * C349 + C23992 * C315 +
             C24028 + C24028 + C153790 * C339 + C23990 * C316 + C24029 +
             C24029 + C153809 * C340) *
                C98471) *
               C153560 +
           ((C23994 * C506 + C47683 + C47683 + C153761 * C530 + C23992 * C496 +
             C47684 + C47684 + C153790 * C520 + C23990 * C497 + C47685 +
             C47685 + C153809 * C521) *
                C153600 +
            (C23994 * C149 + C24030 + C24030 + C153761 * C165 + C23992 * C148 +
             C24031 + C24031 + C153790 * C164 + C23990 * C147 + C24032 +
             C24032 + C153809 * C163) *
                C98471) *
               C70419) *
              C153413 * C153397 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C98471 +
            C31295 * C153600) *
               C153819 +
           (C28429 * C98471 + C29076 * C153600) * C153815 +
           (C28430 * C98471 + C29075 * C153600) * C153805 +
           (C28431 * C98471 + C29074 * C153600) * C153747) *
              C153413 * C153397 * C130 -
          ((C29079 * C153600 + C28436 * C98471) * C153747 +
           (C29078 * C153600 + C28435 * C98471) * C153805 +
           (C29077 * C153600 + C28434 * C98471) * C153815 +
           (C31300 * C153600 +
            (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C98471) *
               C153819) *
              C153413 * C153397 * C131 +
          (((C28234 * C146 + C28247 + C28247 + C153338 * C162) * C98471 +
            C31779 * C153600) *
               C153819 +
           (C28736 * C98471 + C31542 * C153600) * C153815 +
           (C28737 * C98471 + C31544 * C153600) * C153805 +
           (C28738 * C98471 + C44720 * C153600) * C153747) *
              C153413 * C153397 * C132 -
          (((C28234 * C4146 + C44108 + C44108 + C153338 * C4154) * C153600 +
            (C28234 * C1224 + C28253 + C28253 + C153338 * C1234) * C98471) *
               C153747 +
           ((C28234 * C1797 + C30762 + C30762 + C153338 * C1807) * C153600 +
            (C28234 * C323 + C28254 + C28254 + C153338 * C347) * C98471) *
               C153805 +
           ((C28234 * C984 + C30764 + C30764 + C153338 * C996) * C153600 +
            (C28234 * C316 + C28255 + C28255 + C153338 * C340) * C98471) *
               C153815 +
           ((C28234 * C497 + C30766 + C30766 + C153338 * C521) * C153600 +
            (C28234 * C147 + C28256 + C28256 + C153338 * C163) * C98471) *
               C153819) *
              C153413 * C153397 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C98471 +
             C31295 * C153600) *
                C153819 +
            (C130745 + C130746) * C153815 + C130761 * C153805 +
            C130762 * C153747) *
               C153413 * C310 -
           ((C130751 + C130752) * C153747 + (C130750 + C130749) * C153805 +
            (C130748 + C130747) * C153815 + (C130746 + C130745) * C153819) *
               C153413 * C311 +
           (C130761 * C153819 + C130762 * C153815 +
            (C130752 + C130751) * C153805 +
            (C28433 * C98471 + C29867 * C153600) * C153747) *
               C153413 * C312) *
              C313 +
          (((C130753 + C130754) * C153819 + (C130755 + C130756) * C153815 +
            (C130757 + C130758) * C153805 + (C130759 + C130760) * C153747) *
               C153413 * C311 -
           (C130763 * C153747 + C130764 * C153805 +
            (C130754 + C130753) * C153815 +
            (C31300 * C153600 +
             (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C98471) *
                C153819) *
               C153413 * C310 -
           (((C28234 * C29033 + C29056 + C29056 + C153338 * C29037) * C153600 +
             C28438 * C98471) *
                C153747 +
            (C130760 + C130759) * C153805 + C130763 * C153815 +
            C130764 * C153819) *
               C153413 * C312) *
              C153384)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153820 +
            C31295 * C153817 + C31296 * C153808 + C31299 * C153754) *
               C70419 +
           (C28429 * C153820 + C29076 * C153817 + C29445 * C153808 +
            C31298 * C153754) *
               C153560) *
              C153413 * C153397 * C130 -
          ((C31303 * C153754 + C31015 * C153808 + C29077 * C153817 +
            C28434 * C153820) *
               C153560 +
           (C31302 * C153754 + C31301 * C153808 + C31300 * C153817 +
            (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C153820) *
               C70419) *
              C153413 * C153397 * C131 +
          (((C28234 * C146 + C28247 + C28247 + C153338 * C162) * C153820 +
            C31779 * C153817 + C31780 * C153808 + C56253 * C153754) *
               C70419 +
           (C28736 * C153820 + C31542 * C153817 + C31543 * C153808 +
            C67484 * C153754) *
               C153560) *
              C153413 * C153397 * C132 -
          (((C28234 * C8437 + C66878 + C66878 + C153338 * C8439) * C153754 +
            (C28234 * C1366 + C30763 + C30763 + C153338 * C1376) * C153808 +
            (C28234 * C984 + C30764 + C30764 + C153338 * C996) * C153817 +
            (C28234 * C316 + C28255 + C28255 + C153338 * C340) * C153820) *
               C153560 +
           ((C28234 * C2149 + C55730 + C55730 + C153338 * C2159) * C153754 +
            (C28234 * C504 + C30765 + C30765 + C153338 * C528) * C153808 +
            (C28234 * C497 + C30766 + C30766 + C153338 * C521) * C153817 +
            (C28234 * C147 + C28256 + C28256 + C153338 * C163) * C153820) *
               C70419) *
              C153413 * C153397 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153820 +
             C31295 * C153817 + C31296 * C153808 + C31299 * C153754) *
                C70419 +
            (C134289 + C134290 + C134291 + C134292) * C153560) *
               C153413 * C310 -
           ((C134293 + C134294 + C134295 + C134296) * C153560 +
            (C134292 + C134291 + C134290 + C134289) * C70419) *
               C153413 * C311 +
           ((C134296 + C134295 + C134294 + C134293) * C70419 +
            (C28431 * C153820 + C29074 * C153817 + C29447 * C153808 +
             C32696 * C153754) *
                C153560) *
               C153413 * C312) *
              C313 +
          (((C134297 + C134298 + C134299 + C134300) * C70419 +
            (C134301 + C134302 + C134303 + C134304) * C153560) *
               C153413 * C311 -
           ((C134300 + C134299 + C134298 + C134297) * C153560 +
            (C31302 * C153754 + C31301 * C153808 + C31300 * C153817 +
             (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C153820) *
                C70419) *
               C153413 * C310 -
           (((C28234 * C32070 + C32086 + C32086 + C153338 * C32072) * C153754 +
             C31017 * C153808 + C29079 * C153817 + C28436 * C153820) *
                C153560 +
            (C134304 + C134303 + C134302 + C134301) * C70419) *
               C153413 * C312) *
              C153384)) /
            (p * q * std::sqrt(p + q));
    d2ee[110] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C98471 +
             C31295 * C153600) *
                C153819 +
            (C130745 + C130746) * C153815 + C130761 * C153805 +
            C130762 * C153747) *
               C153413 * C153795 -
           (C131947 * C153747 + C131948 * C153805 +
            (C130748 + C130747) * C153815 + (C130746 + C130745) * C153819) *
               C153413 * C153796 +
           (C130761 * C153819 + C130762 * C153815 +
            (C130752 + C130751) * C153805 + (C131949 + C131950) * C153747) *
               C153413 * C1509) *
              C153716 +
          (((C130753 + C130754) * C153819 + (C130755 + C130756) * C153815 +
            (C130757 + C130758) * C153805 + (C130759 + C130760) * C153747) *
               C153413 * C153796 -
           (C130763 * C153747 + C130764 * C153805 +
            (C130754 + C130753) * C153815 +
            (C31300 * C153600 +
             (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C98471) *
                C153819) *
               C153413 * C153795 -
           (((C28234 * C29033 + C29056 + C29056 + C153338 * C29037) * C153600 +
             C28438 * C98471) *
                C153747 +
            (C130760 + C130759) * C153805 + C130763 * C153815 +
            C130764 * C153819) *
               C153413 * C1509) *
              C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
              C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 +
              C23999 + C153761 * C162) *
                 C98471 +
             (C48203 + C48204 + C48205) * C153600) *
                C70419 +
            ((C24335 + C24336 + C24337) * C98471 + C126933 * C153600) *
                C153560) *
               C153413 * C153795 -
           ((C26819 * C153600 + (C24340 + C24339 + C24338) * C98471) * C153560 +
            (C126934 * C153600 + (C24337 + C24336 + C24335) * C98471) *
                C70419) *
               C153413 * C153796 +
           ((C24355 * C98471 + (C25437 + C25436 + C25435) * C153600) * C70419 +
            ((C24343 + C24342 + C24341) * C98471 +
             (C26827 + C26828 + C26829) * C153600) *
                C153560) *
               C153413 * C1509) *
              C153716 +
          ((((C24344 + C24345 + C24346) * C98471 + C126935 * C153600) * C70419 +
            ((C24347 + C24348 + C24349) * C98471 +
             (C25444 + C25445 + C25446) * C153600) *
                C153560) *
               C153413 * C153796 -
           ((C126936 * C153600 + (C24346 + C24345 + C24344) * C98471) *
                C153560 +
            ((C48214 + C48213 + C48212) * C153600 +
             (C23994 * C147 + C24012 + C24012 + C153761 * C163 + C23992 * C146 +
              C24013 + C24013 + C153790 * C162 + C23990 * C145 + C24014 +
              C24014 + C153809 * C161) *
                 C98471) *
                C70419) *
               C153413 * C153795 -
           (((C23994 * C4146 + C25408 + C25408 + C153761 * C4154 +
              C23992 * C4145 + C25409 + C25409 + C153790 * C4153 +
              C23990 * C4144 + C25410 + C25410 + C153809 * C4152) *
                 C153600 +
             (C24352 + C24351 + C24350) * C98471) *
                C153560 +
            ((C25446 + C25445 + C25444) * C153600 + C24356 * C98471) * C70419) *
               C153413 * C1509) *
              C153384)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153820 +
             C31295 * C153817 + C31296 * C153808 + C31299 * C153754) *
                C70419 +
            (C134289 + C134290 + C134291 + C134292) * C153560) *
               C153413 * C153795 -
           ((C134293 + C134294 + C134295 + C134296) * C153560 +
            (C134292 + C134291 + C134290 + C134289) * C70419) *
               C153413 * C153796 +
           ((C134296 + C134295 + C134294 + C134293) * C70419 +
            (C135481 + C135482 + C135483 + C135484) * C153560) *
               C153413 * C1509) *
              C153716 +
          (((C134297 + C134298 + C134299 + C134300) * C70419 +
            (C134301 + C134302 + C134303 + C134304) * C153560) *
               C153413 * C153796 -
           ((C134300 + C134299 + C134298 + C134297) * C153560 +
            (C31302 * C153754 + C31301 * C153808 + C31300 * C153817 +
             (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C153820) *
                C70419) *
               C153413 * C153795 -
           (((C28234 * C32070 + C32086 + C32086 + C153338 * C32072) * C153754 +
             C31017 * C153808 + C29079 * C153817 + C28436 * C153820) *
                C153560 +
            (C134304 + C134303 + C134302 + C134301) * C70419) *
               C153413 * C1509) *
              C153384)) /
            (p * q * std::sqrt(p + q));
    d2ee[111] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C98471 +
             C31295 * C153600) *
                C153819 +
            (C130745 + C130746) * C153815 + C130761 * C153805 +
            C130762 * C153747) *
               C153725 -
           (C132797 * C153747 + C132798 * C153805 +
            (C131615 + C131616) * C153815 +
            (C31296 * C153600 + C31295 * C98471) * C153819) *
               C153477) *
              C153795 +
          (((C131616 + C131615) * C153819 + (C131614 + C131613) * C153815 +
            (C131612 + C131611) * C153805 + (C132799 + C132800) * C153747) *
               C153477 -
           (C131947 * C153747 + C131948 * C153805 +
            (C130748 + C130747) * C153815 + (C130746 + C130745) * C153819) *
               C153725) *
              C153796 +
          ((C130761 * C153819 + C130762 * C153815 +
            (C130752 + C130751) * C153805 + (C131949 + C131950) * C153747) *
               C153725 -
           (((C28234 * C29424 + C29436 + C29436 + C153338 * C29426) * C153600 +
             C29867 * C98471) *
                C153747 +
            (C132800 + C132799) * C153805 + C132797 * C153815 +
            C132798 * C153819) *
               C153477) *
              C1509) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
              C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 +
              C23999 + C153761 * C162) *
                 C98471 +
             (C48203 + C48204 + C48205) * C153600) *
                C70419 +
            ((C24335 + C24336 + C24337) * C98471 + C126933 * C153600) *
                C153560) *
               C153725 -
           ((C49600 * C153600 + C126934 * C98471) * C153560 +
            ((C48208 + C48207 + C48206) * C153600 +
             (C48205 + C48204 + C48203) * C98471) *
                C70419) *
               C153477) *
              C153795 +
          (((C126933 * C98471 + C127712 * C153600) * C70419 +
            (C128680 * C98471 + (C26080 + C26081 + C26082) * C153600) *
                C153560) *
               C153477 -
           ((C26819 * C153600 + (C24340 + C24339 + C24338) * C98471) * C153560 +
            (C126934 * C153600 + (C24337 + C24336 + C24335) * C98471) *
                C70419) *
               C153725) *
              C153796 +
          (((C24355 * C98471 + C128680 * C153600) * C70419 +
            ((C24343 + C24342 + C24341) * C98471 +
             (C26827 + C26828 + C26829) * C153600) *
                C153560) *
               C153725 -
           (((C23994 * C4833 + C26062 + C26062 + C153761 * C4839 +
              C23992 * C4834 + C26063 + C26063 + C153790 * C4840 +
              C23990 * C4835 + C26064 + C26064 + C153809 * C4841) *
                 C153600 +
             (C26829 + C26828 + C26827) * C98471) *
                C153560 +
            ((C26082 + C26081 + C26080) * C153600 + C26819 * C98471) * C70419) *
               C153477) *
              C1509) *
         C153378) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153820 +
             C31295 * C153817 + C31296 * C153808 + C31299 * C153754) *
                C70419 +
            (C134289 + C134290 + C134291 + C134292) * C153560) *
               C153725 -
           ((C135149 + C135150 + C135151 + C135152) * C153560 +
            (C34025 * C153754 + C31299 * C153808 + C31296 * C153817 +
             C31295 * C153820) *
                C70419) *
               C153477) *
              C153795 +
          (((C135152 + C135151 + C135150 + C135149) * C70419 +
            (C136329 + C136330 + C136331 + C136332) * C153560) *
               C153477 -
           ((C134293 + C134294 + C134295 + C134296) * C153560 +
            (C134292 + C134291 + C134290 + C134289) * C70419) *
               C153725) *
              C153796 +
          (((C134296 + C134295 + C134294 + C134293) * C70419 +
            (C135481 + C135482 + C135483 + C135484) * C153560) *
               C153725 -
           (((C28234 * C32673 + C32687 + C32687 + C153338 * C32675) * C153754 +
             C32696 * C153808 + C29447 * C153817 + C29074 * C153820) *
                C153560 +
            (C136332 + C136331 + C136330 + C136329) * C70419) *
               C153477) *
              C1509) *
         C153378) /
            (p * q * std::sqrt(p + q));
    d2ee[112] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C23990 * C144 + C23997 + C23997 + C153809 * C160 +
                  C23992 * C145 + C23998 + C23998 + C153790 * C161 +
                  C23994 * C146 + C23999 + C23999 + C153761 * C162) *
                     C98471 +
                 (C48203 + C48204 + C48205) * C153600) *
                    C70419 +
                ((C24335 + C24336 + C24337) * C98471 + C126933 * C153600) *
                    C153560) *
                   C153413 * C1131 -
               ((C26819 * C153600 + (C24340 + C24339 + C24338) * C98471) *
                    C153560 +
                (C126934 * C153600 + (C24337 + C24336 + C24335) * C98471) *
                    C70419) *
                   C153413 * C153449) *
                  C1133 +
              ((((C24344 + C24345 + C24346) * C98471 + C126935 * C153600) *
                    C70419 +
                ((C24347 + C24348 + C24349) * C98471 +
                 (C25444 + C25445 + C25446) * C153600) *
                    C153560) *
                   C153413 * C153449 -
               ((C126936 * C153600 + (C24346 + C24345 + C24344) * C98471) *
                    C153560 +
                ((C48214 + C48213 + C48212) * C153600 +
                 (C23994 * C147 + C24012 + C24012 + C153761 * C163 +
                  C23992 * C146 + C24013 + C24013 + C153790 * C162 +
                  C23990 * C145 + C24014 + C24014 + C153809 * C161) *
                     C98471) *
                    C70419) *
                   C153413 * C1131) *
                  C1134 +
              ((((C23990 * C146 + C24015 + C24015 + C153809 * C162 +
                  C23992 * C147 + C24016 + C24016 + C153790 * C163 +
                  C23994 * C148 + C24017 + C24017 + C153761 * C164) *
                     C98471 +
                 (C48691 + C48692 + C48693) * C153600) *
                    C70419 +
                ((C24858 + C24859 + C24860) * C98471 +
                 (C126250 + C126251 + C126252) * C153600) *
                    C153560) *
                   C153413 * C1131 -
               (((C23994 * C1796 + C25082 + C25082 + C153761 * C1806 +
                  C23992 * C1797 + C25083 + C25083 + C153790 * C1807 +
                  C23990 * C1798 + C25084 + C25084 + C153809 * C1808) *
                     C153600 +
                 (C24863 + C24862 + C24861) * C98471) *
                    C153560 +
                ((C126252 + C126251 + C126250) * C153600 +
                 (C24860 + C24859 + C24858) * C98471) *
                    C70419) *
                   C153413 * C153449) *
                  C1135) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C23990 * C144 + C23997 + C23997 + C153809 * C160 +
                 C23992 * C145 + C23998 + C23998 + C153790 * C161 +
                 C23994 * C146 + C23999 + C23999 + C153761 * C162) *
                    C98471 +
                (C48203 + C48204 + C48205) * C153600) *
                   C70419 +
               ((C24335 + C24336 + C24337) * C98471 + C126933 * C153600) *
                   C153560) *
                  C153413 * C1218 -
              ((C26819 * C153600 + (C24340 + C24339 + C24338) * C98471) *
                   C153560 +
               (C126934 * C153600 + (C24337 + C24336 + C24335) * C98471) *
                   C70419) *
                  C153413 * C1219 +
              ((C24355 * C98471 + (C25437 + C25436 + C25435) * C153600) *
                   C70419 +
               ((C24343 + C24342 + C24341) * C98471 +
                (C26827 + C26828 + C26829) * C153600) *
                   C153560) *
                  C153413 * C1220 -
              (((C23994 * C5601 + C26816 + C26816 + C153761 * C5607 +
                 C23992 * C5602 + C26817 + C26817 + C153790 * C5608 +
                 C23990 * C5603 + C26818 + C26818 + C153809 * C5609) *
                    C153600 +
                (C25831 + C25830 + C25829) * C98471) *
                   C153560 +
               ((C26829 + C26828 + C26827) * C153600 + C25821 * C98471) *
                   C70419) *
                  C153413 * C1221) *
             C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
              C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 +
              C23999 + C153761 * C162) *
                 C98471 +
             (C48203 + C48204 + C48205) * C153600) *
                C70419 +
            ((C24335 + C24336 + C24337) * C98471 + C126933 * C153600) *
                C153560) *
               C493 -
           ((C49600 * C153600 + C126934 * C98471) * C153560 +
            ((C48208 + C48207 + C48206) * C153600 +
             (C48205 + C48204 + C48203) * C98471) *
                C70419) *
               C494 +
           ((C48223 * C98471 + (C48211 + C48210 + C48209) * C153600) * C70419 +
            (C127712 * C98471 + (C49604 + C49605 + C49606) * C153600) *
                C153560) *
               C495) *
              C1131 +
          (((C126933 * C98471 + C127712 * C153600) * C70419 +
            ((C25437 + C25436 + C25435) * C98471 +
             (C26080 + C26081 + C26082) * C153600) *
                C153560) *
               C494 -
           ((C26819 * C153600 + (C24340 + C24339 + C24338) * C98471) * C153560 +
            (C126934 * C153600 + (C24337 + C24336 + C24335) * C98471) *
                C70419) *
               C493 -
           (((C23994 * C6213 + C27412 + C27412 + C153761 * C6225 +
              C23992 * C6214 + C27413 + C27413 + C153790 * C6226 +
              C23990 * C6215 + C27414 + C27414 + C153809 * C6227) *
                 C153600 +
             (C26082 + C26081 + C26080) * C98471) *
                C153560 +
            ((C49606 + C49605 + C49604) * C153600 + C49600 * C98471) * C70419) *
               C495) *
              C153449) *
         C153378) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C98471 +
             C31295 * C153600) *
                C153819 +
            (C130745 + C130746) * C153815 + C130761 * C153805 +
            C130762 * C153747) *
               C153413 * C1131 -
           ((C130751 + C130752) * C153747 + (C130750 + C130749) * C153805 +
            (C130748 + C130747) * C153815 + (C130746 + C130745) * C153819) *
               C153413 * C153449) *
              C1133 +
          (((C130753 + C130754) * C153819 + (C130755 + C130756) * C153815 +
            (C130757 + C130758) * C153805 + (C130759 + C130760) * C153747) *
               C153413 * C153449 -
           (C130763 * C153747 + C130764 * C153805 +
            (C130754 + C130753) * C153815 +
            (C31300 * C153600 +
             (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C98471) *
                C153819) *
               C153413 * C1131) *
              C1134 +
          ((((C28234 * C146 + C28247 + C28247 + C153338 * C162) * C98471 +
             C31779 * C153600) *
                C153819 +
            (C131153 + C131154) * C153815 + (C131155 + C131156) * C153805 +
            (C131157 + C131158) * C153747) *
               C153413 * C1131 -
           (((C28234 * C5601 + C28866 + C28866 + C153338 * C5607) * C153600 +
             C28739 * C98471) *
                C153747 +
            (C131158 + C131157) * C153805 + (C131156 + C131155) * C153815 +
            (C131154 + C131153) * C153819) *
               C153413 * C153449) *
              C1135)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C98471 +
            C31295 * C153600) *
               C153819 +
           (C130745 + C130746) * C153815 + C130761 * C153805 +
           C130762 * C153747) *
              C153413 * C1218 -
          (C131947 * C153747 + C131948 * C153805 +
           (C130748 + C130747) * C153815 + (C130746 + C130745) * C153819) *
              C153413 * C1219 +
          (C130761 * C153819 + C130762 * C153815 +
           (C130752 + C130751) * C153805 + (C131949 + C131950) * C153747) *
              C153413 * C1220 -
          (((C28234 * C29858 + C29864 + C29864 + C153338 * C29860) * C153600 +
            C29301 * C98471) *
               C153747 +
           (C131950 + C131949) * C153805 + C131947 * C153815 +
           C131948 * C153819) *
              C153413 * C1221) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C98471 +
             C31295 * C153600) *
                C153819 +
            (C130745 + C130746) * C153815 + C130761 * C153805 +
            C130762 * C153747) *
               C493 -
           ((C131611 + C131612) * C153747 + (C131613 + C131614) * C153805 +
            (C131615 + C131616) * C153815 +
            (C31296 * C153600 + C31295 * C98471) * C153819) *
               C494 +
           ((C31296 * C98471 + C31299 * C153600) * C153819 +
            (C132145 + C132146) * C153815 + (C132147 + C132148) * C153805 +
            (C132149 + C132150) * C153747) *
               C495) *
              C1131 +
          (((C131616 + C131615) * C153819 + (C131614 + C131613) * C153815 +
            (C131612 + C131611) * C153805 +
            (C29073 * C98471 + C29448 * C153600) * C153747) *
               C494 -
           (C131947 * C153747 + C131948 * C153805 +
            (C130748 + C130747) * C153815 + (C130746 + C130745) * C153819) *
               C493 -
           (((C28234 * C30194 + C30201 + C30201 + C153338 * C30198) * C153600 +
             C29448 * C98471) *
                C153747 +
            (C132150 + C132149) * C153805 + (C132148 + C132147) * C153815 +
            (C132146 + C132145) * C153819) *
               C495) *
              C153449) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153820 +
             C31295 * C153817 + C31296 * C153808 + C31299 * C153754) *
                C70419 +
            (C134289 + C134290 + C134291 + C134292) * C153560) *
               C153413 * C1131 -
           ((C134293 + C134294 + C134295 + C134296) * C153560 +
            (C134292 + C134291 + C134290 + C134289) * C70419) *
               C153413 * C153449) *
              C1133 +
          (((C134297 + C134298 + C134299 + C134300) * C70419 +
            (C134301 + C134302 + C134303 + C134304) * C153560) *
               C153413 * C153449 -
           ((C134300 + C134299 + C134298 + C134297) * C153560 +
            (C31302 * C153754 + C31301 * C153808 + C31300 * C153817 +
             (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C153820) *
                C70419) *
               C153413 * C1131) *
              C1134 +
          ((((C28234 * C146 + C28247 + C28247 + C153338 * C162) * C153820 +
             C31779 * C153817 + C31780 * C153808 + C56253 * C153754) *
                C70419 +
            (C134693 + C134694 + C134695 + C134696) * C153560) *
               C153413 * C1131 -
           (((C28234 * C6213 + C31772 + C31772 + C153338 * C6225) * C153754 +
             C31545 * C153808 + C31544 * C153817 + C28737 * C153820) *
                C153560 +
            (C134696 + C134695 + C134694 + C134693) * C70419) *
               C153413 * C153449) *
              C1135)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153820 +
            C31295 * C153817 + C31296 * C153808 + C31299 * C153754) *
               C70419 +
           (C134289 + C134290 + C134291 + C134292) * C153560) *
              C153413 * C1218 -
          ((C134293 + C134294 + C134295 + C134296) * C153560 +
           (C134292 + C134291 + C134290 + C134289) * C70419) *
              C153413 * C1219 +
          ((C134296 + C134295 + C134294 + C134293) * C70419 +
           (C135481 + C135482 + C135483 + C135484) * C153560) *
              C153413 * C1220 -
          (((C28234 * C30194 + C30201 + C30201 + C153338 * C30198) * C153754 +
            C29448 * C153808 + C29073 * C153817 + C28432 * C153820) *
               C153560 +
           (C135484 + C135483 + C135482 + C135481) * C70419) *
              C153413 * C1221) *
         C153378) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153820 +
             C31295 * C153817 + C31296 * C153808 + C31299 * C153754) *
                C70419 +
            (C134289 + C134290 + C134291 + C134292) * C153560) *
               C493 -
           ((C135149 + C135150 + C135151 + C135152) * C153560 +
            (C34025 * C153754 + C31299 * C153808 + C31296 * C153817 +
             C31295 * C153820) *
                C70419) *
               C494 +
           ((C31296 * C153820 + C31299 * C153817 + C34025 * C153808 +
             C55996 * C153754) *
                C70419 +
            (C135679 + C135680 + C135681 + C135682) * C153560) *
               C495) *
              C1131 +
          (((C135152 + C135151 + C135150 + C135149) * C70419 +
            (C29075 * C153820 + C29446 * C153817 + C31297 * C153808 +
             C32695 * C153754) *
                C153560) *
               C494 -
           ((C134293 + C134294 + C134295 + C134296) * C153560 +
            (C134292 + C134291 + C134290 + C134289) * C70419) *
               C493 -
           (((C28234 * C34011 + C34020 + C34020 + C153338 * C34015) * C153754 +
             C32695 * C153808 + C31297 * C153817 + C29446 * C153820) *
                C153560 +
            (C135682 + C135681 + C135680 + C135679) * C70419) *
               C495) *
              C153449) *
         C153378) /
            (p * q * std::sqrt(p + q));
    d2ee[113] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C98471 +
              C31295 * C153600) *
                 C153819 +
             (C130745 + C130746) * C153815 + C130761 * C153805 +
             C130762 * C153747) *
                C153725 -
            ((C131611 + C131612) * C153747 + (C131613 + C131614) * C153805 +
             (C131615 + C131616) * C153815 +
             (C31296 * C153600 + C31295 * C98471) * C153819) *
                C153477) *
               C1131 +
           (((C131616 + C131615) * C153819 + (C131614 + C131613) * C153815 +
             (C131612 + C131611) * C153805 +
             (C29073 * C98471 + C29448 * C153600) * C153747) *
                C153477 -
            (C131947 * C153747 + C131948 * C153805 +
             (C130748 + C130747) * C153815 + (C130746 + C130745) * C153819) *
                C153725) *
               C153449) *
              C153716 +
          ((((C31300 * C98471 + C31301 * C153600) * C153819 +
             (C131617 + C131618) * C153815 + (C131619 + C131620) * C153805 +
             (C131621 + C131622) * C153747) *
                C153477 -
            (C130763 * C153747 + C130764 * C153805 +
             (C130754 + C130753) * C153815 +
             (C31300 * C153600 +
              (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C98471) *
                 C153819) *
                C153725) *
               C1131 +
           (((C130753 + C130754) * C153819 + (C130755 + C130756) * C153815 +
             (C130757 + C130758) * C153805 + (C130759 + C130760) * C153747) *
                C153725 -
            (((C28234 * C28571 + C28592 + C28592 + C153338 * C28575) * C153600 +
              C29080 * C98471) *
                 C153747 +
             (C131622 + C131621) * C153805 + (C131620 + C131619) * C153815 +
             (C131618 + C131617) * C153819) *
                C153477) *
               C153449) *
              C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C23990 * C144 + C23997 + C23997 + C153809 * C160 +
               C23992 * C145 + C23998 + C23998 + C153790 * C161 +
               C23994 * C146 + C23999 + C23999 + C153761 * C162) *
                  C98471 +
              (C48203 + C48204 + C48205) * C153600) *
                 C70419 +
             ((C24335 + C24336 + C24337) * C98471 + C126933 * C153600) *
                 C153560) *
                C153725 -
            ((C49600 * C153600 + C126934 * C98471) * C153560 +
             ((C48208 + C48207 + C48206) * C153600 +
              (C48205 + C48204 + C48203) * C98471) *
                 C70419) *
                C153477) *
               C1131 +
           (((C126933 * C98471 + C127712 * C153600) * C70419 +
             ((C25437 + C25436 + C25435) * C98471 +
              (C26080 + C26081 + C26082) * C153600) *
                 C153560) *
                C153477 -
            ((C26819 * C153600 + (C24340 + C24339 + C24338) * C98471) *
                 C153560 +
             (C126934 * C153600 + (C24337 + C24336 + C24335) * C98471) *
                 C70419) *
                C153725) *
               C153449) *
              C153716 +
          (((((C48212 + C48213 + C48214) * C98471 +
              (C48215 + C48216 + C48217) * C153600) *
                 C70419 +
             (C126935 * C98471 + (C49002 + C49003 + C49004) * C153600) *
                 C153560) *
                C153477 -
            ((C126936 * C153600 + (C24346 + C24345 + C24344) * C98471) *
                 C153560 +
             ((C48214 + C48213 + C48212) * C153600 +
              (C23994 * C147 + C24012 + C24012 + C153761 * C163 +
               C23992 * C146 + C24013 + C24013 + C153790 * C162 +
               C23990 * C145 + C24014 + C24014 + C153809 * C161) *
                  C98471) *
                 C70419) *
                C153725) *
               C1131 +
           ((((C24344 + C24345 + C24346) * C98471 + C126935 * C153600) *
                 C70419 +
             ((C24347 + C24348 + C24349) * C98471 +
              (C25444 + C25445 + C25446) * C153600) *
                 C153560) *
                C153725 -
            (((C23994 * C3330 + C24604 + C24604 + C153761 * C3338 +
               C23992 * C3329 + C24605 + C24605 + C153790 * C3337 +
               C23990 * C3328 + C24606 + C24606 + C153809 * C3336) *
                  C153600 +
              (C25446 + C25445 + C25444) * C98471) *
                 C153560 +
             ((C49004 + C49003 + C49002) * C153600 + C126936 * C98471) *
                 C70419) *
                C153477) *
               C153449) *
              C153384)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153820 +
              C31295 * C153817 + C31296 * C153808 + C31299 * C153754) *
                 C70419 +
             (C134289 + C134290 + C134291 + C134292) * C153560) *
                C153725 -
            ((C135149 + C135150 + C135151 + C135152) * C153560 +
             (C34025 * C153754 + C31299 * C153808 + C31296 * C153817 +
              C31295 * C153820) *
                 C70419) *
                C153477) *
               C1131 +
           (((C135152 + C135151 + C135150 + C135149) * C70419 +
             (C29075 * C153820 + C29446 * C153817 + C31297 * C153808 +
              C32695 * C153754) *
                 C153560) *
                C153477 -
            ((C134293 + C134294 + C134295 + C134296) * C153560 +
             (C134292 + C134291 + C134290 + C134289) * C70419) *
                C153725) *
               C153449) *
              C153716 +
          ((((C31300 * C153820 + C31301 * C153817 + C31302 * C153808 +
              C55997 * C153754) *
                 C70419 +
             (C135153 + C135154 + C135155 + C135156) * C153560) *
                C153477 -
            ((C134300 + C134299 + C134298 + C134297) * C153560 +
             (C31302 * C153754 + C31301 * C153808 + C31300 * C153817 +
              (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C153820) *
                 C70419) *
                C153725) *
               C1131 +
           (((C134297 + C134298 + C134299 + C134300) * C70419 +
             (C134301 + C134302 + C134303 + C134304) * C153560) *
                C153725 -
            (((C28234 * C31240 + C31272 + C31272 + C153338 * C31244) * C153754 +
              C31304 * C153808 + C31016 * C153817 + C29078 * C153820) *
                 C153560 +
             (C135156 + C135155 + C135154 + C135153) * C70419) *
                C153477) *
               C153449) *
              C153384)) /
            (p * q * std::sqrt(p + q));
    d2ee[114] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
             C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 +
             C23999 + C153761 * C162) *
                C98471 +
            (C48203 + C48204 + C48205) * C153600) *
               C70419 +
           ((C24335 + C24336 + C24337) * C98471 + C126933 * C153600) *
               C153560) *
              C153413 * C1218 -
          ((C26819 * C153600 + (C24340 + C24339 + C24338) * C98471) * C153560 +
           (C126934 * C153600 + (C24337 + C24336 + C24335) * C98471) * C70419) *
              C153413 * C1219 +
          ((C24355 * C98471 + (C25437 + C25436 + C25435) * C153600) * C70419 +
           ((C24343 + C24342 + C24341) * C98471 +
            (C26827 + C26828 + C26829) * C153600) *
               C153560) *
              C153413 * C1220 -
          (((C23994 * C5601 + C26816 + C26816 + C153761 * C5607 +
             C23992 * C5602 + C26817 + C26817 + C153790 * C5608 +
             C23990 * C5603 + C26818 + C26818 + C153809 * C5609) *
                C153600 +
            (C25831 + C25830 + C25829) * C98471) *
               C153560 +
           ((C26829 + C26828 + C26827) * C153600 + C25821 * C98471) * C70419) *
              C153413 * C1221) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
              C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 +
              C23999 + C153761 * C162) *
                 C98471 +
             (C48203 + C48204 + C48205) * C153600) *
                C70419 +
            ((C24335 + C24336 + C24337) * C98471 + C126933 * C153600) *
                C153560) *
               C153413 * C1131 -
           ((C26819 * C153600 + (C24340 + C24339 + C24338) * C98471) * C153560 +
            (C126934 * C153600 + (C24337 + C24336 + C24335) * C98471) *
                C70419) *
               C153413 * C153449) *
              C1133 +
          ((((C24344 + C24345 + C24346) * C98471 + C126935 * C153600) * C70419 +
            ((C24347 + C24348 + C24349) * C98471 +
             (C25444 + C25445 + C25446) * C153600) *
                C153560) *
               C153413 * C153449 -
           ((C126936 * C153600 + (C24346 + C24345 + C24344) * C98471) *
                C153560 +
            ((C48214 + C48213 + C48212) * C153600 +
             (C23994 * C147 + C24012 + C24012 + C153761 * C163 + C23992 * C146 +
              C24013 + C24013 + C153790 * C162 + C23990 * C145 + C24014 +
              C24014 + C153809 * C161) *
                 C98471) *
                C70419) *
               C153413 * C1131) *
              C1134 +
          ((((C23990 * C146 + C24015 + C24015 + C153809 * C162 + C23992 * C147 +
              C24016 + C24016 + C153790 * C163 + C23994 * C148 + C24017 +
              C24017 + C153761 * C164) *
                 C98471 +
             (C48691 + C48692 + C48693) * C153600) *
                C70419 +
            ((C24858 + C24859 + C24860) * C98471 +
             (C126250 + C126251 + C126252) * C153600) *
                C153560) *
               C153413 * C1131 -
           (((C23994 * C1796 + C25082 + C25082 + C153761 * C1806 +
              C23992 * C1797 + C25083 + C25083 + C153790 * C1807 +
              C23990 * C1798 + C25084 + C25084 + C153809 * C1808) *
                 C153600 +
             (C24863 + C24862 + C24861) * C98471) *
                C153560 +
            ((C126252 + C126251 + C126250) * C153600 +
             (C24860 + C24859 + C24858) * C98471) *
                C70419) *
               C153413 * C153449) *
              C1135)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C98471 +
             C31295 * C153600) *
                C153819 +
            (C130745 + C130746) * C153815 + C130761 * C153805 +
            C130762 * C153747) *
               C153413 * C1131 -
           ((C130751 + C130752) * C153747 + (C130750 + C130749) * C153805 +
            (C130748 + C130747) * C153815 + (C130746 + C130745) * C153819) *
               C153413 * C153449) *
              C1133 +
          (((C130753 + C130754) * C153819 + (C130755 + C130756) * C153815 +
            (C130757 + C130758) * C153805 + (C130759 + C130760) * C153747) *
               C153413 * C153449 -
           (C130763 * C153747 + C130764 * C153805 +
            (C130754 + C130753) * C153815 +
            (C31300 * C153600 +
             (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C98471) *
                C153819) *
               C153413 * C1131) *
              C1134 +
          ((((C28234 * C146 + C28247 + C28247 + C153338 * C162) * C98471 +
             C31779 * C153600) *
                C153819 +
            (C131153 + C131154) * C153815 + (C131155 + C131156) * C153805 +
            (C131157 + C131158) * C153747) *
               C153413 * C1131 -
           (((C28234 * C5601 + C28866 + C28866 + C153338 * C5607) * C153600 +
             C28739 * C98471) *
                C153747 +
            (C131158 + C131157) * C153805 + (C131156 + C131155) * C153815 +
            (C131154 + C131153) * C153819) *
               C153413 * C153449) *
              C1135)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C98471 +
            C31295 * C153600) *
               C153819 +
           (C130745 + C130746) * C153815 + C130761 * C153805 +
           C130762 * C153747) *
              C153413 * C1218 -
          (C131947 * C153747 + C131948 * C153805 +
           (C130748 + C130747) * C153815 + (C130746 + C130745) * C153819) *
              C153413 * C1219 +
          (C130761 * C153819 + C130762 * C153815 +
           (C130752 + C130751) * C153805 + (C131949 + C131950) * C153747) *
              C153413 * C1220 -
          (((C28234 * C29858 + C29864 + C29864 + C153338 * C29860) * C153600 +
            C29301 * C98471) *
               C153747 +
           (C131950 + C131949) * C153805 + C131947 * C153815 +
           C131948 * C153819) *
              C153413 * C1221) *
         C153378) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153820 +
             C31295 * C153817 + C31296 * C153808 + C31299 * C153754) *
                C70419 +
            (C134289 + C134290 + C134291 + C134292) * C153560) *
               C153413 * C1131 -
           ((C134293 + C134294 + C134295 + C134296) * C153560 +
            (C134292 + C134291 + C134290 + C134289) * C70419) *
               C153413 * C153449) *
              C1133 +
          (((C134297 + C134298 + C134299 + C134300) * C70419 +
            (C134301 + C134302 + C134303 + C134304) * C153560) *
               C153413 * C153449 -
           ((C134300 + C134299 + C134298 + C134297) * C153560 +
            (C31302 * C153754 + C31301 * C153808 + C31300 * C153817 +
             (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C153820) *
                C70419) *
               C153413 * C1131) *
              C1134 +
          ((((C28234 * C146 + C28247 + C28247 + C153338 * C162) * C153820 +
             C31779 * C153817 + C31780 * C153808 + C56253 * C153754) *
                C70419 +
            (C134693 + C134694 + C134695 + C134696) * C153560) *
               C153413 * C1131 -
           (((C28234 * C6213 + C31772 + C31772 + C153338 * C6225) * C153754 +
             C31545 * C153808 + C31544 * C153817 + C28737 * C153820) *
                C153560 +
            (C134696 + C134695 + C134694 + C134693) * C70419) *
               C153413 * C153449) *
              C1135)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153820 +
            C31295 * C153817 + C31296 * C153808 + C31299 * C153754) *
               C70419 +
           (C134289 + C134290 + C134291 + C134292) * C153560) *
              C153413 * C1218 -
          ((C134293 + C134294 + C134295 + C134296) * C153560 +
           (C134292 + C134291 + C134290 + C134289) * C70419) *
              C153413 * C1219 +
          ((C134296 + C134295 + C134294 + C134293) * C70419 +
           (C135481 + C135482 + C135483 + C135484) * C153560) *
              C153413 * C1220 -
          (((C28234 * C30194 + C30201 + C30201 + C153338 * C30198) * C153754 +
            C29448 * C153808 + C29073 * C153817 + C28432 * C153820) *
               C153560 +
           (C135484 + C135483 + C135482 + C135481) * C70419) *
              C153413 * C1221) *
         C153378) /
            (p * q * std::sqrt(p + q));
    d2ee[115] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C98471 +
              C31295 * C153600) *
                 C153819 +
             (C130745 + C130746) * C153815 + C130761 * C153805 +
             C130762 * C153747) *
                C1938 -
            (C132797 * C153747 + C132798 * C153805 +
             (C131615 + C131616) * C153815 +
             (C31296 * C153600 + C31295 * C98471) * C153819) *
                C153477) *
               C153724 +
           (((C131616 + C131615) * C153819 + (C131614 + C131613) * C153815 +
             (C131612 + C131611) * C153805 + (C132799 + C132800) * C153747) *
                C153477 -
            (C131947 * C153747 + C131948 * C153805 +
             (C130748 + C130747) * C153815 + (C130746 + C130745) * C153819) *
                C1938) *
               C153449) *
              C153716 +
          ((((C31300 * C98471 + C31301 * C153600) * C153819 +
             (C131617 + C131618) * C153815 + (C131619 + C131620) * C153805 +
             (C131621 + C131622) * C153747) *
                C153477 -
            (C130763 * C153747 + C130764 * C153805 +
             (C130754 + C130753) * C153815 +
             (C31300 * C153600 +
              (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C98471) *
                 C153819) *
                C1938) *
               C153724 +
           (((C130753 + C130754) * C153819 + (C130755 + C130756) * C153815 +
             (C130757 + C130758) * C153805 + (C130759 + C130760) * C153747) *
                C1938 -
            (((C28234 * C28571 + C28592 + C28592 + C153338 * C28575) * C153600 +
              C29080 * C98471) *
                 C153747 +
             (C131622 + C131621) * C153805 + (C131620 + C131619) * C153815 +
             (C131618 + C131617) * C153819) *
                C153477) *
               C153449) *
              C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C23990 * C144 + C23997 + C23997 + C153809 * C160 +
               C23992 * C145 + C23998 + C23998 + C153790 * C161 +
               C23994 * C146 + C23999 + C23999 + C153761 * C162) *
                  C98471 +
              (C48203 + C48204 + C48205) * C153600) *
                 C70419 +
             ((C24335 + C24336 + C24337) * C98471 + C126933 * C153600) *
                 C153560) *
                C1938 -
            ((C49600 * C153600 + C126934 * C98471) * C153560 +
             ((C48208 + C48207 + C48206) * C153600 +
              (C48205 + C48204 + C48203) * C98471) *
                 C70419) *
                C153477) *
               C153724 +
           (((C126933 * C98471 + C127712 * C153600) * C70419 +
             (C128680 * C98471 + (C26080 + C26081 + C26082) * C153600) *
                 C153560) *
                C153477 -
            ((C26819 * C153600 + (C24340 + C24339 + C24338) * C98471) *
                 C153560 +
             (C126934 * C153600 + (C24337 + C24336 + C24335) * C98471) *
                 C70419) *
                C1938) *
               C153449) *
              C153716 +
          (((((C48212 + C48213 + C48214) * C98471 +
              (C48215 + C48216 + C48217) * C153600) *
                 C70419 +
             (C126935 * C98471 + (C49002 + C49003 + C49004) * C153600) *
                 C153560) *
                C153477 -
            ((C126936 * C153600 + (C24346 + C24345 + C24344) * C98471) *
                 C153560 +
             ((C48214 + C48213 + C48212) * C153600 +
              (C23994 * C147 + C24012 + C24012 + C153761 * C163 +
               C23992 * C146 + C24013 + C24013 + C153790 * C162 +
               C23990 * C145 + C24014 + C24014 + C153809 * C161) *
                  C98471) *
                 C70419) *
                C1938) *
               C153724 +
           ((((C24344 + C24345 + C24346) * C98471 + C126935 * C153600) *
                 C70419 +
             ((C24347 + C24348 + C24349) * C98471 +
              (C25444 + C25445 + C25446) * C153600) *
                 C153560) *
                C1938 -
            (((C23994 * C3330 + C24604 + C24604 + C153761 * C3338 +
               C23992 * C3329 + C24605 + C24605 + C153790 * C3337 +
               C23990 * C3328 + C24606 + C24606 + C153809 * C3336) *
                  C153600 +
              (C25446 + C25445 + C25444) * C98471) *
                 C153560 +
             ((C49004 + C49003 + C49002) * C153600 + C126936 * C98471) *
                 C70419) *
                C153477) *
               C153449) *
              C153384)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153820 +
              C31295 * C153817 + C31296 * C153808 + C31299 * C153754) *
                 C70419 +
             (C134289 + C134290 + C134291 + C134292) * C153560) *
                C1938 -
            ((C135149 + C135150 + C135151 + C135152) * C153560 +
             (C34025 * C153754 + C31299 * C153808 + C31296 * C153817 +
              C31295 * C153820) *
                 C70419) *
                C153477) *
               C153724 +
           (((C135152 + C135151 + C135150 + C135149) * C70419 +
             (C136329 + C136330 + C136331 + C136332) * C153560) *
                C153477 -
            ((C134293 + C134294 + C134295 + C134296) * C153560 +
             (C134292 + C134291 + C134290 + C134289) * C70419) *
                C1938) *
               C153449) *
              C153716 +
          ((((C31300 * C153820 + C31301 * C153817 + C31302 * C153808 +
              C55997 * C153754) *
                 C70419 +
             (C135153 + C135154 + C135155 + C135156) * C153560) *
                C153477 -
            ((C134300 + C134299 + C134298 + C134297) * C153560 +
             (C31302 * C153754 + C31301 * C153808 + C31300 * C153817 +
              (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C153820) *
                 C70419) *
                C1938) *
               C153724 +
           (((C134297 + C134298 + C134299 + C134300) * C70419 +
             (C134301 + C134302 + C134303 + C134304) * C153560) *
                C1938 -
            (((C28234 * C31240 + C31272 + C31272 + C153338 * C31244) * C153754 +
              C31304 * C153808 + C31016 * C153817 + C29078 * C153820) *
                 C153560 +
             (C135156 + C135155 + C135154 + C135153) * C70419) *
                C153477) *
               C153449) *
              C153384)) /
            (p * q * std::sqrt(p + q));
    d2ee[116] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C98471 +
             C31295 * C153600) *
                C153819 +
            (C130745 + C130746) * C153815 + C130761 * C153805 +
            C130762 * C153747) *
               C153797 -
           (C132797 * C153747 + C132798 * C153805 +
            (C131615 + C131616) * C153815 +
            (C31296 * C153600 + C31295 * C98471) * C153819) *
               C153798 +
           ((C31296 * C98471 + C31299 * C153600) * C153819 +
            (C132145 + C132146) * C153815 + (C132147 + C132148) * C153805 +
            (C132149 + C132150) * C153747) *
               C2454) *
              C153724 +
          (((C131616 + C131615) * C153819 + (C131614 + C131613) * C153815 +
            (C131612 + C131611) * C153805 + (C132799 + C132800) * C153747) *
               C153798 -
           (C131947 * C153747 + C131948 * C153805 +
            (C130748 + C130747) * C153815 + (C130746 + C130745) * C153819) *
               C153797 -
           (((C28234 * C30194 + C30201 + C30201 + C153338 * C30198) * C153600 +
             C29448 * C98471) *
                C153747 +
            (C132150 + C132149) * C153805 + (C132148 + C132147) * C153815 +
            (C132146 + C132145) * C153819) *
               C2454) *
              C153449) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
              C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 +
              C23999 + C153761 * C162) *
                 C98471 +
             (C48203 + C48204 + C48205) * C153600) *
                C70419 +
            ((C24335 + C24336 + C24337) * C98471 + C126933 * C153600) *
                C153560) *
               C153797 -
           ((C49600 * C153600 + C126934 * C98471) * C153560 +
            ((C48208 + C48207 + C48206) * C153600 +
             (C48205 + C48204 + C48203) * C98471) *
                C70419) *
               C153798 +
           ((C48223 * C98471 + (C48211 + C48210 + C48209) * C153600) * C70419 +
            (C127712 * C98471 + (C49604 + C49605 + C49606) * C153600) *
                C153560) *
               C2454) *
              C153724 +
          (((C126933 * C98471 + C127712 * C153600) * C70419 +
            (C128680 * C98471 + (C26080 + C26081 + C26082) * C153600) *
                C153560) *
               C153798 -
           ((C26819 * C153600 + (C24340 + C24339 + C24338) * C98471) * C153560 +
            (C126934 * C153600 + (C24337 + C24336 + C24335) * C98471) *
                C70419) *
               C153797 -
           (((C23994 * C6213 + C27412 + C27412 + C153761 * C6225 +
              C23992 * C6214 + C27413 + C27413 + C153790 * C6226 +
              C23990 * C6215 + C27414 + C27414 + C153809 * C6227) *
                 C153600 +
             (C26082 + C26081 + C26080) * C98471) *
                C153560 +
            ((C49606 + C49605 + C49604) * C153600 + C49600 * C98471) * C70419) *
               C2454) *
              C153449) *
         C153378) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153820 +
             C31295 * C153817 + C31296 * C153808 + C31299 * C153754) *
                C70419 +
            (C134289 + C134290 + C134291 + C134292) * C153560) *
               C153797 -
           ((C135149 + C135150 + C135151 + C135152) * C153560 +
            (C34025 * C153754 + C31299 * C153808 + C31296 * C153817 +
             C31295 * C153820) *
                C70419) *
               C153798 +
           ((C31296 * C153820 + C31299 * C153817 + C34025 * C153808 +
             C55996 * C153754) *
                C70419 +
            (C135679 + C135680 + C135681 + C135682) * C153560) *
               C2454) *
              C153724 +
          (((C135152 + C135151 + C135150 + C135149) * C70419 +
            (C136329 + C136330 + C136331 + C136332) * C153560) *
               C153798 -
           ((C134293 + C134294 + C134295 + C134296) * C153560 +
            (C134292 + C134291 + C134290 + C134289) * C70419) *
               C153797 -
           (((C28234 * C34011 + C34020 + C34020 + C153338 * C34015) * C153754 +
             C32695 * C153808 + C31297 * C153817 + C29446 * C153820) *
                C153560 +
            (C135682 + C135681 + C135680 + C135679) * C70419) *
               C2454) *
              C153449) *
         C153378) /
            (p * q * std::sqrt(p + q));
    d2ee[117] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C23990 * C144 + C23997 + C23997 + C153809 * C160 +
                  C23992 * C145 + C23998 + C23998 + C153790 * C161 +
                  C23994 * C146 + C23999 + C23999 + C153761 * C162) *
                     C98471 +
                 (C48203 + C48204 + C48205) * C153600) *
                    C70419 +
                ((C24335 + C24336 + C24337) * C98471 + C126933 * C153600) *
                    C153560) *
                   C1938 -
               ((C49600 * C153600 + C126934 * C98471) * C153560 +
                ((C48208 + C48207 + C48206) * C153600 +
                 (C48205 + C48204 + C48203) * C98471) *
                    C70419) *
                   C153477) *
                  C153397 * C1133 +
              ((((C48212 + C48213 + C48214) * C98471 +
                 (C48215 + C48216 + C48217) * C153600) *
                    C70419 +
                (C126935 * C98471 + (C49002 + C49003 + C49004) * C153600) *
                    C153560) *
                   C153477 -
               ((C126936 * C153600 + (C24346 + C24345 + C24344) * C98471) *
                    C153560 +
                ((C48214 + C48213 + C48212) * C153600 +
                 (C23994 * C147 + C24012 + C24012 + C153761 * C163 +
                  C23992 * C146 + C24013 + C24013 + C153790 * C162 +
                  C23990 * C145 + C24014 + C24014 + C153809 * C161) *
                     C98471) *
                    C70419) *
                   C1938) *
                  C153397 * C1134 +
              ((((C23990 * C146 + C24015 + C24015 + C153809 * C162 +
                  C23992 * C147 + C24016 + C24016 + C153790 * C163 +
                  C23994 * C148 + C24017 + C24017 + C153761 * C164) *
                     C98471 +
                 (C48691 + C48692 + C48693) * C153600) *
                    C70419 +
                ((C24858 + C24859 + C24860) * C98471 +
                 (C126250 + C126251 + C126252) * C153600) *
                    C153560) *
                   C1938 -
               (((C23994 * C1365 + C48443 + C48443 + C153761 * C1375 +
                  C23992 * C1366 + C48444 + C48444 + C153790 * C1376 +
                  C23990 * C1367 + C48445 + C48445 + C153809 * C1377) *
                     C153600 +
                 (C126252 + C126251 + C126250) * C98471) *
                    C153560 +
                ((C48696 + C48695 + C48694) * C153600 +
                 (C48693 + C48692 + C48691) * C98471) *
                    C70419) *
                   C153477) *
                  C153397 * C1135) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C23990 * C144 + C23997 + C23997 + C153809 * C160 +
                  C23992 * C145 + C23998 + C23998 + C153790 * C161 +
                  C23994 * C146 + C23999 + C23999 + C153761 * C162) *
                     C98471 +
                 (C48203 + C48204 + C48205) * C153600) *
                    C70419 +
                ((C24335 + C24336 + C24337) * C98471 + C126933 * C153600) *
                    C153560) *
                   C1938 -
               ((C49600 * C153600 + C126934 * C98471) * C153560 +
                ((C48208 + C48207 + C48206) * C153600 +
                 (C48205 + C48204 + C48203) * C98471) *
                    C70419) *
                   C153477) *
                  C310 +
              (((C126933 * C98471 + C127712 * C153600) * C70419 +
                (C128680 * C98471 + (C26080 + C26081 + C26082) * C153600) *
                    C153560) *
                   C153477 -
               ((C26819 * C153600 + (C24340 + C24339 + C24338) * C98471) *
                    C153560 +
                (C126934 * C153600 + (C24337 + C24336 + C24335) * C98471) *
                    C70419) *
                   C1938) *
                  C311 +
              (((C24355 * C98471 + C128680 * C153600) * C70419 +
                ((C24343 + C24342 + C24341) * C98471 +
                 (C26827 + C26828 + C26829) * C153600) *
                    C153560) *
                   C1938 -
               (((C23994 * C4833 + C26062 + C26062 + C153761 * C4839 +
                  C23992 * C4834 + C26063 + C26063 + C153790 * C4840 +
                  C23990 * C4835 + C26064 + C26064 + C153809 * C4841) *
                     C153600 +
                 (C26829 + C26828 + C26827) * C98471) *
                    C153560 +
                ((C26082 + C26081 + C26080) * C153600 + C26819 * C98471) *
                    C70419) *
                   C153477) *
                  C312) *
             C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
             C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 +
             C23999 + C153761 * C162) *
                C98471 +
            (C48203 + C48204 + C48205) * C153600) *
               C70419 +
           ((C24335 + C24336 + C24337) * C98471 + C126933 * C153600) *
               C153560) *
              C2144 -
          ((C49600 * C153600 + C126934 * C98471) * C153560 +
           ((C48208 + C48207 + C48206) * C153600 +
            (C48205 + C48204 + C48203) * C98471) *
               C70419) *
              C2145 +
          ((C48223 * C98471 + (C48211 + C48210 + C48209) * C153600) * C70419 +
           (C127712 * C98471 + (C49604 + C49605 + C49606) * C153600) *
               C153560) *
              C2146 -
          (((C23994 * C9040 + C49594 + C49594 + C153761 * C9046 +
             C23992 * C9041 + C49595 + C49595 + C153790 * C9047 +
             C23990 * C9042 + C49596 + C49596 + C153809 * C9048) *
                C153600 +
            (C49606 + C49605 + C49604) * C98471) *
               C153560 +
           ((C50934 + C50933 + C50932) * C153600 + C50925 * C98471) * C70419) *
              C2147) *
         C153397 * C153378) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C98471 +
             C31295 * C153600) *
                C153819 +
            (C130745 + C130746) * C153815 + C130761 * C153805 +
            C130762 * C153747) *
               C1938 -
           (C132797 * C153747 + C132798 * C153805 +
            (C131615 + C131616) * C153815 +
            (C31296 * C153600 + C31295 * C98471) * C153819) *
               C153477) *
              C153397 * C1133 +
          (((C31300 * C98471 + C31301 * C153600) * C153819 +
            (C131617 + C131618) * C153815 + (C131619 + C131620) * C153805 +
            (C131621 + C131622) * C153747) *
               C153477 -
           (C130763 * C153747 + C130764 * C153805 +
            (C130754 + C130753) * C153815 +
            (C31300 * C153600 +
             (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C98471) *
                C153819) *
               C1938) *
              C153397 * C1134 +
          ((((C28234 * C146 + C28247 + C28247 + C153338 * C162) * C98471 +
             C31779 * C153600) *
                C153819 +
            (C131153 + C131154) * C153815 + (C131155 + C131156) * C153805 +
            (C131157 + C131158) * C153747) *
               C1938 -
           (((C28234 * C4833 + C31533 + C31533 + C153338 * C4839) * C153600 +
             C44720 * C98471) *
                C153747 +
            (C31545 * C153600 + C31544 * C98471) * C153805 +
            (C31543 * C153600 + C31542 * C98471) * C153815 +
            (C31780 * C153600 + C31779 * C98471) * C153819) *
               C153477) *
              C153397 * C1135)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C98471 +
             C31295 * C153600) *
                C153819 +
            (C130745 + C130746) * C153815 + C130761 * C153805 +
            C130762 * C153747) *
               C1938 -
           (C132797 * C153747 + C132798 * C153805 +
            (C131615 + C131616) * C153815 +
            (C31296 * C153600 + C31295 * C98471) * C153819) *
               C153477) *
              C310 +
          (((C131616 + C131615) * C153819 + (C131614 + C131613) * C153815 +
            (C131612 + C131611) * C153805 + (C132799 + C132800) * C153747) *
               C153477 -
           (C131947 * C153747 + C131948 * C153805 +
            (C130748 + C130747) * C153815 + (C130746 + C130745) * C153819) *
               C1938) *
              C311 +
          ((C130761 * C153819 + C130762 * C153815 +
            (C130752 + C130751) * C153805 + (C131949 + C131950) * C153747) *
               C1938 -
           (((C28234 * C29424 + C29436 + C29436 + C153338 * C29426) * C153600 +
             C29867 * C98471) *
                C153747 +
            (C132800 + C132799) * C153805 + C132797 * C153815 +
            C132798 * C153819) *
               C153477) *
              C312) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C98471 +
            C31295 * C153600) *
               C153819 +
           (C130745 + C130746) * C153815 + C130761 * C153805 +
           C130762 * C153747) *
              C2144 -
          (C132797 * C153747 + C132798 * C153805 +
           (C131615 + C131616) * C153815 +
           (C31296 * C153600 + C31295 * C98471) * C153819) *
              C2145 +
          ((C31296 * C98471 + C31299 * C153600) * C153819 +
           (C132145 + C132146) * C153815 + (C132147 + C132148) * C153805 +
           (C132149 + C132150) * C153747) *
              C2146 -
          (((C28234 * C32673 + C32687 + C32687 + C153338 * C32675) * C153600 +
            C32696 * C98471) *
               C153747 +
           (C32695 * C153600 + C31297 * C98471) * C153805 +
           (C32694 * C153600 + C31298 * C98471) * C153815 +
           (C34025 * C153600 + C31299 * C98471) * C153819) *
              C2147) *
         C153397 * C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153820 +
             C31295 * C153817 + C31296 * C153808 + C31299 * C153754) *
                C70419 +
            (C134289 + C134290 + C134291 + C134292) * C153560) *
               C1938 -
           ((C135149 + C135150 + C135151 + C135152) * C153560 +
            (C34025 * C153754 + C31299 * C153808 + C31296 * C153817 +
             C31295 * C153820) *
                C70419) *
               C153477) *
              C153397 * C1133 +
          (((C31300 * C153820 + C31301 * C153817 + C31302 * C153808 +
             C55997 * C153754) *
                C70419 +
            (C135153 + C135154 + C135155 + C135156) * C153560) *
               C153477 -
           ((C134300 + C134299 + C134298 + C134297) * C153560 +
            (C31302 * C153754 + C31301 * C153808 + C31300 * C153817 +
             (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C153820) *
                C70419) *
               C1938) *
              C153397 * C1134 +
          ((((C28234 * C146 + C28247 + C28247 + C153338 * C162) * C153820 +
             C31779 * C153817 + C31780 * C153808 + C56253 * C153754) *
                C70419 +
            (C134693 + C134694 + C134695 + C134696) * C153560) *
               C1938 -
           (((C28234 * C9040 + C56121 + C56121 + C153338 * C9046) * C153754 +
             C67484 * C153808 + C31543 * C153817 + C31542 * C153820) *
                C153560 +
            (C56254 * C153754 + C56253 * C153808 + C31780 * C153817 +
             C31779 * C153820) *
                C70419) *
               C153477) *
              C153397 * C1135)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153820 +
             C31295 * C153817 + C31296 * C153808 + C31299 * C153754) *
                C70419 +
            (C134289 + C134290 + C134291 + C134292) * C153560) *
               C1938 -
           ((C135149 + C135150 + C135151 + C135152) * C153560 +
            (C34025 * C153754 + C31299 * C153808 + C31296 * C153817 +
             C31295 * C153820) *
                C70419) *
               C153477) *
              C310 +
          (((C135152 + C135151 + C135150 + C135149) * C70419 +
            (C136329 + C136330 + C136331 + C136332) * C153560) *
               C153477 -
           ((C134293 + C134294 + C134295 + C134296) * C153560 +
            (C134292 + C134291 + C134290 + C134289) * C70419) *
               C1938) *
              C311 +
          (((C134296 + C134295 + C134294 + C134293) * C70419 +
            (C135481 + C135482 + C135483 + C135484) * C153560) *
               C1938 -
           (((C28234 * C32673 + C32687 + C32687 + C153338 * C32675) * C153754 +
             C32696 * C153808 + C29447 * C153817 + C29074 * C153820) *
                C153560 +
            (C136332 + C136331 + C136330 + C136329) * C70419) *
               C153477) *
              C312) *
         C153378) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153820 +
            C31295 * C153817 + C31296 * C153808 + C31299 * C153754) *
               C70419 +
           (C134289 + C134290 + C134291 + C134292) * C153560) *
              C2144 -
          ((C135149 + C135150 + C135151 + C135152) * C153560 +
           (C34025 * C153754 + C31299 * C153808 + C31296 * C153817 +
            C31295 * C153820) *
               C70419) *
              C2145 +
          ((C31296 * C153820 + C31299 * C153817 + C34025 * C153808 +
            C55996 * C153754) *
               C70419 +
           (C135679 + C135680 + C135681 + C135682) * C153560) *
              C2146 -
          (((C28234 * C56751 + C56757 + C56757 + C153338 * C56753) * C153754 +
            C56760 * C153808 + C32694 * C153817 + C31298 * C153820) *
               C153560 +
           (C57501 * C153754 + C55996 * C153808 + C34025 * C153817 +
            C31299 * C153820) *
               C70419) *
              C2147) *
         C153397 * C153378) /
            (p * q * std::sqrt(p + q));
    d2ee[118] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C98471 +
             C31295 * C153600) *
                C153819 +
            (C130745 + C130746) * C153815 + C130761 * C153805 +
            C130762 * C153747) *
               C153797 -
           (C132797 * C153747 + C132798 * C153805 +
            (C131615 + C131616) * C153815 +
            (C31296 * C153600 + C31295 * C98471) * C153819) *
               C153798 +
           ((C31296 * C98471 + C31299 * C153600) * C153819 +
            (C132145 + C132146) * C153815 + (C132147 + C132148) * C153805 +
            (C132149 + C132150) * C153747) *
               C2454) *
              C153397 * C153716 +
          (((C31300 * C98471 + C31301 * C153600) * C153819 +
            (C131617 + C131618) * C153815 + (C131619 + C131620) * C153805 +
            (C131621 + C131622) * C153747) *
               C153798 -
           (C130763 * C153747 + C130764 * C153805 +
            (C130754 + C130753) * C153815 +
            (C31300 * C153600 +
             (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C98471) *
                C153819) *
               C153797 -
           (((C28234 * C32070 + C32086 + C32086 + C153338 * C32072) * C153600 +
             C31017 * C98471) *
                C153747 +
            (C31304 * C153600 + C31016 * C98471) * C153805 +
            (C31303 * C153600 + C31015 * C98471) * C153815 +
            (C31302 * C153600 + C31301 * C98471) * C153819) *
               C2454) *
              C153397 * C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
              C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 +
              C23999 + C153761 * C162) *
                 C98471 +
             (C48203 + C48204 + C48205) * C153600) *
                C70419 +
            ((C24335 + C24336 + C24337) * C98471 + C126933 * C153600) *
                C153560) *
               C153797 -
           ((C49600 * C153600 + C126934 * C98471) * C153560 +
            ((C48208 + C48207 + C48206) * C153600 +
             (C48205 + C48204 + C48203) * C98471) *
                C70419) *
               C153798 +
           ((C48223 * C98471 + (C48211 + C48210 + C48209) * C153600) * C70419 +
            (C127712 * C98471 + (C49604 + C49605 + C49606) * C153600) *
                C153560) *
               C2454) *
              C153397 * C153716 +
          ((((C48212 + C48213 + C48214) * C98471 +
             (C48215 + C48216 + C48217) * C153600) *
                C70419 +
            (C126935 * C98471 + (C49002 + C49003 + C49004) * C153600) *
                C153560) *
               C153798 -
           ((C126936 * C153600 + (C24346 + C24345 + C24344) * C98471) *
                C153560 +
            ((C48214 + C48213 + C48212) * C153600 +
             (C23994 * C147 + C24012 + C24012 + C153761 * C163 + C23992 * C146 +
              C24013 + C24013 + C153790 * C162 + C23990 * C145 + C24014 +
              C24014 + C153809 * C161) *
                 C98471) *
                C70419) *
               C153797 -
           (((C23994 * C8437 + C48993 + C48993 + C153761 * C8439 +
              C23992 * C6216 + C48994 + C48994 + C153790 * C6228 +
              C23990 * C6217 + C48995 + C48995 + C153809 * C6229) *
                 C153600 +
             (C49004 + C49003 + C49002) * C98471) *
                C153560 +
            ((C48220 + C48219 + C48218) * C153600 + C48224 * C98471) * C70419) *
               C2454) *
              C153397 * C153384)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153820 +
             C31295 * C153817 + C31296 * C153808 + C31299 * C153754) *
                C70419 +
            (C134289 + C134290 + C134291 + C134292) * C153560) *
               C153797 -
           ((C135149 + C135150 + C135151 + C135152) * C153560 +
            (C34025 * C153754 + C31299 * C153808 + C31296 * C153817 +
             C31295 * C153820) *
                C70419) *
               C153798 +
           ((C31296 * C153820 + C31299 * C153817 + C34025 * C153808 +
             C55996 * C153754) *
                C70419 +
            (C135679 + C135680 + C135681 + C135682) * C153560) *
               C2454) *
              C153397 * C153716 +
          (((C31300 * C153820 + C31301 * C153817 + C31302 * C153808 +
             C55997 * C153754) *
                C70419 +
            (C135153 + C135154 + C135155 + C135156) * C153560) *
               C153798 -
           ((C134300 + C134299 + C134298 + C134297) * C153560 +
            (C31302 * C153754 + C31301 * C153808 + C31300 * C153817 +
             (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C153820) *
                C70419) *
               C153797 -
           (((C28234 * C56416 + C56422 + C56422 + C153338 * C56418) * C153754 +
             C56425 * C153808 + C31303 * C153817 + C31015 * C153820) *
                C153560 +
            (C55998 * C153754 + C55997 * C153808 + C31302 * C153817 +
             C31301 * C153820) *
                C70419) *
               C2454) *
              C153397 * C153384)) /
            (p * q * std::sqrt(p + q));
    d2ee[119] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
              C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 +
              C23999 + C153761 * C162) *
                 C98471 +
             (C48203 + C48204 + C48205) * C153600) *
                C70419 +
            ((C24335 + C24336 + C24337) * C98471 + C126933 * C153600) *
                C153560) *
               C1938 -
           ((C49600 * C153600 + C126934 * C98471) * C153560 +
            ((C48208 + C48207 + C48206) * C153600 +
             (C48205 + C48204 + C48203) * C98471) *
                C70419) *
               C153477) *
              C310 +
          (((C126933 * C98471 + C127712 * C153600) * C70419 +
            (C128680 * C98471 + (C26080 + C26081 + C26082) * C153600) *
                C153560) *
               C153477 -
           ((C26819 * C153600 + (C24340 + C24339 + C24338) * C98471) * C153560 +
            (C126934 * C153600 + (C24337 + C24336 + C24335) * C98471) *
                C70419) *
               C1938) *
              C311 +
          (((C24355 * C98471 + C128680 * C153600) * C70419 +
            ((C24343 + C24342 + C24341) * C98471 +
             (C26827 + C26828 + C26829) * C153600) *
                C153560) *
               C1938 -
           (((C23994 * C4833 + C26062 + C26062 + C153761 * C4839 +
              C23992 * C4834 + C26063 + C26063 + C153790 * C4840 +
              C23990 * C4835 + C26064 + C26064 + C153809 * C4841) *
                 C153600 +
             (C26829 + C26828 + C26827) * C98471) *
                C153560 +
            ((C26082 + C26081 + C26080) * C153600 + C26819 * C98471) * C70419) *
               C153477) *
              C312) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
              C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 +
              C23999 + C153761 * C162) *
                 C98471 +
             (C48203 + C48204 + C48205) * C153600) *
                C70419 +
            ((C24335 + C24336 + C24337) * C98471 + C126933 * C153600) *
                C153560) *
               C1938 -
           ((C49600 * C153600 + C126934 * C98471) * C153560 +
            ((C48208 + C48207 + C48206) * C153600 +
             (C48205 + C48204 + C48203) * C98471) *
                C70419) *
               C153477) *
              C153397 * C1133 +
          ((((C48212 + C48213 + C48214) * C98471 +
             (C48215 + C48216 + C48217) * C153600) *
                C70419 +
            (C126935 * C98471 + (C49002 + C49003 + C49004) * C153600) *
                C153560) *
               C153477 -
           ((C126936 * C153600 + (C24346 + C24345 + C24344) * C98471) *
                C153560 +
            ((C48214 + C48213 + C48212) * C153600 +
             (C23994 * C147 + C24012 + C24012 + C153761 * C163 + C23992 * C146 +
              C24013 + C24013 + C153790 * C162 + C23990 * C145 + C24014 +
              C24014 + C153809 * C161) *
                 C98471) *
                C70419) *
               C1938) *
              C153397 * C1134 +
          ((((C23990 * C146 + C24015 + C24015 + C153809 * C162 + C23992 * C147 +
              C24016 + C24016 + C153790 * C163 + C23994 * C148 + C24017 +
              C24017 + C153761 * C164) *
                 C98471 +
             (C48691 + C48692 + C48693) * C153600) *
                C70419 +
            ((C24858 + C24859 + C24860) * C98471 +
             (C126250 + C126251 + C126252) * C153600) *
                C153560) *
               C1938 -
           (((C23994 * C1365 + C48443 + C48443 + C153761 * C1375 +
              C23992 * C1366 + C48444 + C48444 + C153790 * C1376 +
              C23990 * C1367 + C48445 + C48445 + C153809 * C1377) *
                 C153600 +
             (C126252 + C126251 + C126250) * C98471) *
                C153560 +
            ((C48696 + C48695 + C48694) * C153600 +
             (C48693 + C48692 + C48691) * C98471) *
                C70419) *
               C153477) *
              C153397 * C1135)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C98471 +
             C31295 * C153600) *
                C153819 +
            (C130745 + C130746) * C153815 + C130761 * C153805 +
            C130762 * C153747) *
               C1938 -
           (C132797 * C153747 + C132798 * C153805 +
            (C131615 + C131616) * C153815 +
            (C31296 * C153600 + C31295 * C98471) * C153819) *
               C153477) *
              C153397 * C1133 +
          (((C31300 * C98471 + C31301 * C153600) * C153819 +
            (C131617 + C131618) * C153815 + (C131619 + C131620) * C153805 +
            (C131621 + C131622) * C153747) *
               C153477 -
           (C130763 * C153747 + C130764 * C153805 +
            (C130754 + C130753) * C153815 +
            (C31300 * C153600 +
             (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C98471) *
                C153819) *
               C1938) *
              C153397 * C1134 +
          ((((C28234 * C146 + C28247 + C28247 + C153338 * C162) * C98471 +
             C31779 * C153600) *
                C153819 +
            (C131153 + C131154) * C153815 + (C131155 + C131156) * C153805 +
            (C131157 + C131158) * C153747) *
               C1938 -
           (((C28234 * C4833 + C31533 + C31533 + C153338 * C4839) * C153600 +
             C44720 * C98471) *
                C153747 +
            (C31545 * C153600 + C31544 * C98471) * C153805 +
            (C31543 * C153600 + C31542 * C98471) * C153815 +
            (C31780 * C153600 + C31779 * C98471) * C153819) *
               C153477) *
              C153397 * C1135)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C98471 +
             C31295 * C153600) *
                C153819 +
            (C130745 + C130746) * C153815 + C130761 * C153805 +
            C130762 * C153747) *
               C1938 -
           (C132797 * C153747 + C132798 * C153805 +
            (C131615 + C131616) * C153815 +
            (C31296 * C153600 + C31295 * C98471) * C153819) *
               C153477) *
              C310 +
          (((C131616 + C131615) * C153819 + (C131614 + C131613) * C153815 +
            (C131612 + C131611) * C153805 + (C132799 + C132800) * C153747) *
               C153477 -
           (C131947 * C153747 + C131948 * C153805 +
            (C130748 + C130747) * C153815 + (C130746 + C130745) * C153819) *
               C1938) *
              C311 +
          ((C130761 * C153819 + C130762 * C153815 +
            (C130752 + C130751) * C153805 + (C131949 + C131950) * C153747) *
               C1938 -
           (((C28234 * C29424 + C29436 + C29436 + C153338 * C29426) * C153600 +
             C29867 * C98471) *
                C153747 +
            (C132800 + C132799) * C153805 + C132797 * C153815 +
            C132798 * C153819) *
               C153477) *
              C312) *
         C153378) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153820 +
             C31295 * C153817 + C31296 * C153808 + C31299 * C153754) *
                C70419 +
            (C134289 + C134290 + C134291 + C134292) * C153560) *
               C1938 -
           ((C135149 + C135150 + C135151 + C135152) * C153560 +
            (C34025 * C153754 + C31299 * C153808 + C31296 * C153817 +
             C31295 * C153820) *
                C70419) *
               C153477) *
              C153397 * C1133 +
          (((C31300 * C153820 + C31301 * C153817 + C31302 * C153808 +
             C55997 * C153754) *
                C70419 +
            (C135153 + C135154 + C135155 + C135156) * C153560) *
               C153477 -
           ((C134300 + C134299 + C134298 + C134297) * C153560 +
            (C31302 * C153754 + C31301 * C153808 + C31300 * C153817 +
             (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C153820) *
                C70419) *
               C1938) *
              C153397 * C1134 +
          ((((C28234 * C146 + C28247 + C28247 + C153338 * C162) * C153820 +
             C31779 * C153817 + C31780 * C153808 + C56253 * C153754) *
                C70419 +
            (C134693 + C134694 + C134695 + C134696) * C153560) *
               C1938 -
           (((C28234 * C9040 + C56121 + C56121 + C153338 * C9046) * C153754 +
             C67484 * C153808 + C31543 * C153817 + C31542 * C153820) *
                C153560 +
            (C56254 * C153754 + C56253 * C153808 + C31780 * C153817 +
             C31779 * C153820) *
                C70419) *
               C153477) *
              C153397 * C1135)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153820 +
             C31295 * C153817 + C31296 * C153808 + C31299 * C153754) *
                C70419 +
            (C134289 + C134290 + C134291 + C134292) * C153560) *
               C1938 -
           ((C135149 + C135150 + C135151 + C135152) * C153560 +
            (C34025 * C153754 + C31299 * C153808 + C31296 * C153817 +
             C31295 * C153820) *
                C70419) *
               C153477) *
              C310 +
          (((C135152 + C135151 + C135150 + C135149) * C70419 +
            (C136329 + C136330 + C136331 + C136332) * C153560) *
               C153477 -
           ((C134293 + C134294 + C134295 + C134296) * C153560 +
            (C134292 + C134291 + C134290 + C134289) * C70419) *
               C1938) *
              C311 +
          (((C134296 + C134295 + C134294 + C134293) * C70419 +
            (C135481 + C135482 + C135483 + C135484) * C153560) *
               C1938 -
           (((C28234 * C32673 + C32687 + C32687 + C153338 * C32675) * C153754 +
             C32696 * C153808 + C29447 * C153817 + C29074 * C153820) *
                C153560 +
            (C136332 + C136331 + C136330 + C136329) * C70419) *
               C153477) *
              C312) *
         C153378) /
            (p * q * std::sqrt(p + q));
    d2ee[120] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C34887 * C144 + C34892 + C34892 + C153705 * C160 + C34889 * C145 +
              C34893 + C34893 + C153348 * C161) *
                 C153596 +
             (C39432 + C39433) * C153603 + C58686 * C116108) *
                C70419 +
            ((C35190 + C35191) * C153596 + C40446 * C153603 +
             C41230 * C116108) *
                C153560) *
               C153413 * C153724 -
           ((C41228 * C116108 + C37403 * C153603 +
             (C35193 + C35192) * C153596) *
                C153560 +
            (C41229 * C116108 + C40447 * C153603 +
             (C35191 + C35190) * C153596) *
                C70419) *
               C153413 * C153449) *
              C153793 +
          ((((C35198 + C35199) * C153596 + C40448 * C153603 +
             C59703 * C116108) *
                C70419 +
            ((C35200 + C35201) * C153596 + C40449 * C153603 +
             (C39442 + C39443) * C116108) *
                C153560) *
               C153413 * C153449 -
           ((C58695 * C116108 + C40450 * C153603 +
             (C35199 + C35198) * C153596) *
                C153560 +
            (C58696 * C116108 + (C39437 + C39436) * C153603 +
             (C34889 * C146 + C34906 + C34906 + C153348 * C162 + C34887 * C145 +
              C34907 + C34907 + C153705 * C161) *
                 C153596) *
                C70419) *
               C153413 * C153724) *
              C153794 +
          ((((C34887 * C146 + C34908 + C34908 + C153705 * C162 + C34889 * C147 +
              C34909 + C34909 + C153348 * C163) *
                 C153596 +
             (C40058 + C40059) * C153603 + (C59315 + C59316) * C116108) *
                C70419 +
            ((C35660 + C35661) * C153596 + (C39750 + C39751) * C153603 +
             (C59011 + C59012) * C116108) *
                C153560) *
               C153413 * C153724 -
           (((C34889 * C3330 + C40048 + C40048 + C153348 * C3338 +
              C34887 * C3329 + C40049 + C40049 + C153705 * C3337) *
                 C116108 +
             (C39753 + C39752) * C153603 + (C35663 + C35662) * C153596) *
                C153560 +
            ((C59012 + C59011) * C116108 + (C39751 + C39750) * C153603 +
             (C35661 + C35660) * C153596) *
                C70419) *
               C153413 * C153449) *
              C678)) /
        (p * q * std::sqrt(p + q));
    d2ee[121] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C34887 * C144 + C34892 + C34892 + C153705 * C160 +
               C34889 * C145 + C34893 + C34893 + C153348 * C161) *
                  C153596 +
              (C39432 + C39433) * C153603 + C58686 * C116108) *
                 C70419 +
             ((C35190 + C35191) * C153596 + C40446 * C153603 +
              C41230 * C116108) *
                 C153560) *
                C153725 -
            ((C60478 * C116108 + C41229 * C153603 + C40447 * C153596) *
                 C153560 +
             (C62230 * C116108 + (C39434 + C39435) * C153603 +
              (C39433 + C39432) * C153596) *
                 C70419) *
                C153477) *
               C153724 +
           (((C40446 * C153596 + C41230 * C153603 + C60479 * C116108) * C70419 +
             (C39081 * C153596 + C41235 * C153603 +
              (C41250 + C41251) * C116108) *
                 C153560) *
                C153477 -
            ((C41228 * C116108 + C37403 * C153603 +
              (C35193 + C35192) * C153596) *
                 C153560 +
             (C41229 * C116108 + C40447 * C153603 +
              (C35191 + C35190) * C153596) *
                 C70419) *
                C153725) *
               C153449) *
              C313 +
          (((((C39436 + C39437) * C153596 + (C39438 + C39439) * C153603 +
              (C58709 + C58710) * C116108) *
                 C70419 +
             (C40448 * C153596 + C59703 * C153603 +
              (C58711 + C58712) * C116108) *
                 C153560) *
                C153477 -
            ((C58695 * C116108 + C40450 * C153603 +
              (C35199 + C35198) * C153596) *
                 C153560 +
             (C58696 * C116108 + (C39437 + C39436) * C153603 +
              (C34889 * C146 + C34906 + C34906 + C153348 * C162 +
               C34887 * C145 + C34907 + C34907 + C153705 * C161) *
                  C153596) *
                 C70419) *
                C153725) *
               C153724 +
           ((((C35198 + C35199) * C153596 + C40448 * C153603 +
              C59703 * C116108) *
                 C70419 +
             ((C35200 + C35201) * C153596 + C40449 * C153603 +
              (C39442 + C39443) * C116108) *
                 C153560) *
                C153725 -
            (((C34889 * C6213 + C39402 + C39402 + C153348 * C6225 +
               C34887 * C6214 + C39403 + C39403 + C153705 * C6226) *
                  C116108 +
              (C39443 + C39442) * C153603 + C39082 * C153596) *
                 C153560 +
             ((C58712 + C58711) * C116108 + C58695 * C153603 +
              C40450 * C153596) *
                 C70419) *
                C153477) *
               C153449) *
              C153384)) /
        (p * q * std::sqrt(p + q));
    d2ee[122] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C34887 * C144 + C34892 + C34892 + C153705 * C160 + C34889 * C145 +
              C34893 + C34893 + C153348 * C161) *
                 C153596 +
             (C39432 + C39433) * C153603 + C58686 * C116108) *
                C70419 +
            ((C35190 + C35191) * C153596 + C40446 * C153603 +
             C41230 * C116108) *
                C153560) *
               C153413 * C310 -
           ((C41228 * C116108 + C37403 * C153603 +
             (C35193 + C35192) * C153596) *
                C153560 +
            (C41229 * C116108 + C40447 * C153603 +
             (C35191 + C35190) * C153596) *
                C70419) *
               C153413 * C311 +
           ((C35206 * C153596 + C39081 * C153603 + C41235 * C116108) * C70419 +
            (C35207 * C153596 + C42220 * C153603 +
             (C36754 + C36755) * C116108) *
                C153560) *
               C153413 * C312) *
              C313 +
          ((((C35198 + C35199) * C153596 + C40448 * C153603 +
             C59703 * C116108) *
                C70419 +
            ((C35200 + C35201) * C153596 + C40449 * C153603 +
             (C39442 + C39443) * C116108) *
                C153560) *
               C153413 * C311 -
           ((C58695 * C116108 + C40450 * C153603 +
             (C35199 + C35198) * C153596) *
                C153560 +
            (C58696 * C116108 + (C39437 + C39436) * C153603 +
             (C34889 * C146 + C34906 + C34906 + C153348 * C162 + C34887 * C145 +
              C34907 + C34907 + C153705 * C161) *
                 C153596) *
                C70419) *
               C153413 * C310 -
           (((C34889 * C4833 + C35432 + C35432 + C153348 * C4839 +
              C34887 * C4834 + C35433 + C35433 + C153705 * C4840) *
                 C116108 +
             (C36189 + C36188) * C153603 + C35208 * C153596) *
                C153560 +
            ((C39443 + C39442) * C116108 + C39082 * C153603 +
             C35209 * C153596) *
                C70419) *
               C153413 * C312) *
              C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C34887 * C144 + C34892 + C34892 + C153705 * C160 + C34889 * C145 +
             C34893 + C34893 + C153348 * C161) *
                C153596 +
            (C39432 + C39433) * C153603 + C58686 * C116108) *
               C70419 +
           ((C35190 + C35191) * C153596 + C40446 * C153603 + C41230 * C116108) *
               C153560) *
              C153413 * C153397 * C130 -
          ((C58695 * C116108 + C40450 * C153603 + (C35199 + C35198) * C153596) *
               C153560 +
           (C58696 * C116108 + (C39437 + C39436) * C153603 +
            (C34889 * C146 + C34906 + C34906 + C153348 * C162 + C34887 * C145 +
             C34907 + C34907 + C153705 * C161) *
                C153596) *
               C70419) *
              C153413 * C153397 * C131 +
          (((C34887 * C146 + C34908 + C34908 + C153705 * C162 + C34889 * C147 +
             C34909 + C34909 + C153348 * C163) *
                C153596 +
            (C40058 + C40059) * C153603 + (C59315 + C59316) * C116108) *
               C70419 +
           ((C35660 + C35661) * C153596 + (C39750 + C39751) * C153603 +
            (C59011 + C59012) * C116108) *
               C153560) *
              C153413 * C153397 * C132 -
          (((C34889 * C1365 + C58102 + C58102 + C153348 * C1375 +
             C34887 * C1366 + C58103 + C58103 + C153705 * C1376) *
                C116108 +
            (C34889 * C985 + C38786 + C38786 + C153348 * C997 + C34887 * C984 +
             C38787 + C38787 + C153705 * C996) *
                C153603 +
            (C34889 * C315 + C34920 + C34920 + C153348 * C339 + C34887 * C316 +
             C34921 + C34921 + C153705 * C340) *
                C153596) *
               C153560 +
           ((C34889 * C505 + C58104 + C58104 + C153348 * C529 + C34887 * C504 +
             C58105 + C58105 + C153705 * C528) *
                C116108 +
            (C34889 * C496 + C38788 + C38788 + C153348 * C520 + C34887 * C497 +
             C38789 + C38789 + C153705 * C521) *
                C153603 +
            (C34889 * C148 + C34922 + C34922 + C153348 * C164 + C34887 * C147 +
             C34923 + C34923 + C153705 * C163) *
                C153596) *
               C70419) *
              C153413 * C153397 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C34887 * C144 + C34892 + C34892 + C153705 * C160 + C34889 * C145 +
              C34893 + C34893 + C153348 * C161) *
                 C153596 +
             (C39432 + C39433) * C153603 + C58686 * C116108) *
                C70419 +
            ((C35190 + C35191) * C153596 + C40446 * C153603 +
             C41230 * C116108) *
                C153560) *
               C493 -
           ((C60478 * C116108 + C41229 * C153603 + C40447 * C153596) * C153560 +
            (C62230 * C116108 + (C39434 + C39435) * C153603 +
             (C39433 + C39432) * C153596) *
                C70419) *
               C494 +
           ((C58686 * C153596 + C63735 * C153603 +
             (C62243 + C62244) * C116108) *
                C70419 +
            (C41230 * C153596 + C60479 * C153603 +
             (C60488 + C60489) * C116108) *
                C153560) *
               C495) *
              C153397 * C313 +
          ((((C39436 + C39437) * C153596 + (C39438 + C39439) * C153603 +
             (C58709 + C58710) * C116108) *
                C70419 +
            (C40448 * C153596 + C59703 * C153603 +
             (C58711 + C58712) * C116108) *
                C153560) *
               C494 -
           ((C58695 * C116108 + C40450 * C153603 +
             (C35199 + C35198) * C153596) *
                C153560 +
            (C58696 * C116108 + (C39437 + C39436) * C153603 +
             (C34889 * C146 + C34906 + C34906 + C153348 * C162 + C34887 * C145 +
              C34907 + C34907 + C153705 * C161) *
                 C153596) *
                C70419) *
               C493 -
           (((C34889 * C9040 + C58697 + C58697 + C153348 * C9046 +
              C34887 * C9041 + C58698 + C58698 + C153705 * C9047) *
                 C116108 +
             (C58712 + C58711) * C153603 + C58695 * C153596) *
                C153560 +
            ((C63748 + C63747) * C116108 + C63740 * C153603 +
             C58696 * C153596) *
                C70419) *
               C495) *
              C153397 * C153384)) /
            (p * q * std::sqrt(p + q));
    d2ee[123] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C34887 * C144 + C34892 + C34892 + C153705 * C160 + C34889 * C145 +
              C34893 + C34893 + C153348 * C161) *
                 C153596 +
             (C39432 + C39433) * C153603 + C58686 * C116108) *
                C70419 +
            ((C35190 + C35191) * C153596 + C40446 * C153603 +
             C41230 * C116108) *
                C153560) *
               C153725 -
           ((C60478 * C116108 + C41229 * C153603 + C40447 * C153596) * C153560 +
            (C62230 * C116108 + (C39434 + C39435) * C153603 +
             (C39433 + C39432) * C153596) *
                C70419) *
               C153477) *
              C153397 * C153793 +
          ((((C39436 + C39437) * C153596 + (C39438 + C39439) * C153603 +
             (C58709 + C58710) * C116108) *
                C70419 +
            (C40448 * C153596 + C59703 * C153603 +
             (C58711 + C58712) * C116108) *
                C153560) *
               C153477 -
           ((C58695 * C116108 + C40450 * C153603 +
             (C35199 + C35198) * C153596) *
                C153560 +
            (C58696 * C116108 + (C39437 + C39436) * C153603 +
             (C34889 * C146 + C34906 + C34906 + C153348 * C162 + C34887 * C145 +
              C34907 + C34907 + C153705 * C161) *
                 C153596) *
                C70419) *
               C153725) *
              C153397 * C153794 +
          ((((C34887 * C146 + C34908 + C34908 + C153705 * C162 + C34889 * C147 +
              C34909 + C34909 + C153348 * C163) *
                 C153596 +
             (C40058 + C40059) * C153603 + (C59315 + C59316) * C116108) *
                C70419 +
            ((C35660 + C35661) * C153596 + (C39750 + C39751) * C153603 +
             (C59011 + C59012) * C116108) *
                C153560) *
               C153725 -
           (((C34889 * C8437 + C59307 + C59307 + C153348 * C8439 +
              C34887 * C6216 + C59308 + C59308 + C153705 * C6228) *
                 C116108 +
             (C59012 + C59011) * C153603 + (C39751 + C39750) * C153596) *
                C153560 +
            ((C64148 + C64147) * C116108 + (C59316 + C59315) * C153603 +
             (C40059 + C40058) * C153596) *
                C70419) *
               C153477) *
              C153397 * C678)) /
        (p * q * std::sqrt(p + q));
    d2ee[124] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C34887 * C144 + C34892 + C34892 + C153705 * C160 + C34889 * C145 +
             C34893 + C34893 + C153348 * C161) *
                C153596 +
            (C39432 + C39433) * C153603 + C58686 * C116108) *
               C70419 +
           ((C35190 + C35191) * C153596 + C40446 * C153603 + C41230 * C116108) *
               C153560) *
              C153413 * C153397 * C130 -
          ((C58695 * C116108 + C40450 * C153603 + (C35199 + C35198) * C153596) *
               C153560 +
           (C58696 * C116108 + (C39437 + C39436) * C153603 +
            (C34889 * C146 + C34906 + C34906 + C153348 * C162 + C34887 * C145 +
             C34907 + C34907 + C153705 * C161) *
                C153596) *
               C70419) *
              C153413 * C153397 * C131 +
          (((C34887 * C146 + C34908 + C34908 + C153705 * C162 + C34889 * C147 +
             C34909 + C34909 + C153348 * C163) *
                C153596 +
            (C40058 + C40059) * C153603 + (C59315 + C59316) * C116108) *
               C70419 +
           ((C35660 + C35661) * C153596 + (C39750 + C39751) * C153603 +
            (C59011 + C59012) * C116108) *
               C153560) *
              C153413 * C153397 * C132 -
          (((C34889 * C1365 + C58102 + C58102 + C153348 * C1375 +
             C34887 * C1366 + C58103 + C58103 + C153705 * C1376) *
                C116108 +
            (C34889 * C985 + C38786 + C38786 + C153348 * C997 + C34887 * C984 +
             C38787 + C38787 + C153705 * C996) *
                C153603 +
            (C34889 * C315 + C34920 + C34920 + C153348 * C339 + C34887 * C316 +
             C34921 + C34921 + C153705 * C340) *
                C153596) *
               C153560 +
           ((C34889 * C505 + C58104 + C58104 + C153348 * C529 + C34887 * C504 +
             C58105 + C58105 + C153705 * C528) *
                C116108 +
            (C34889 * C496 + C38788 + C38788 + C153348 * C520 + C34887 * C497 +
             C38789 + C38789 + C153705 * C521) *
                C153603 +
            (C34889 * C148 + C34922 + C34922 + C153348 * C164 + C34887 * C147 +
             C34923 + C34923 + C153705 * C163) *
                C153596) *
               C70419) *
              C153413 * C153397 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C34887 * C144 + C34892 + C34892 + C153705 * C160 + C34889 * C145 +
              C34893 + C34893 + C153348 * C161) *
                 C153596 +
             (C39432 + C39433) * C153603 + C58686 * C116108) *
                C70419 +
            ((C35190 + C35191) * C153596 + C40446 * C153603 +
             C41230 * C116108) *
                C153560) *
               C153413 * C310 -
           ((C41228 * C116108 + C37403 * C153603 +
             (C35193 + C35192) * C153596) *
                C153560 +
            (C41229 * C116108 + C40447 * C153603 +
             (C35191 + C35190) * C153596) *
                C70419) *
               C153413 * C311 +
           ((C35206 * C153596 + C39081 * C153603 + C41235 * C116108) * C70419 +
            (C35207 * C153596 + C42220 * C153603 +
             (C36754 + C36755) * C116108) *
                C153560) *
               C153413 * C312) *
              C313 +
          ((((C35198 + C35199) * C153596 + C40448 * C153603 +
             C59703 * C116108) *
                C70419 +
            ((C35200 + C35201) * C153596 + C40449 * C153603 +
             (C39442 + C39443) * C116108) *
                C153560) *
               C153413 * C311 -
           ((C58695 * C116108 + C40450 * C153603 +
             (C35199 + C35198) * C153596) *
                C153560 +
            (C58696 * C116108 + (C39437 + C39436) * C153603 +
             (C34889 * C146 + C34906 + C34906 + C153348 * C162 + C34887 * C145 +
              C34907 + C34907 + C153705 * C161) *
                 C153596) *
                C70419) *
               C153413 * C310 -
           (((C34889 * C4833 + C35432 + C35432 + C153348 * C4839 +
              C34887 * C4834 + C35433 + C35433 + C153705 * C4840) *
                 C116108 +
             (C36189 + C36188) * C153603 + C35208 * C153596) *
                C153560 +
            ((C39443 + C39442) * C116108 + C39082 * C153603 +
             C35209 * C153596) *
                C70419) *
               C153413 * C312) *
              C153384)) /
            (p * q * std::sqrt(p + q));
    d2ee[125] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C34887 * C144 + C34892 + C34892 + C153705 * C160 + C34889 * C145 +
              C34893 + C34893 + C153348 * C161) *
                 C153596 +
             (C39432 + C39433) * C153603 + C58686 * C116108) *
                C70419 +
            ((C35190 + C35191) * C153596 + C40446 * C153603 +
             C41230 * C116108) *
                C153560) *
               C153413 * C153795 -
           ((C41228 * C116108 + C37403 * C153603 +
             (C35193 + C35192) * C153596) *
                C153560 +
            (C41229 * C116108 + C40447 * C153603 +
             (C35191 + C35190) * C153596) *
                C70419) *
               C153413 * C153796 +
           ((C35206 * C153596 + C39081 * C153603 + C41235 * C116108) * C70419 +
            (C35207 * C153596 + C42220 * C153603 +
             (C36754 + C36755) * C116108) *
                C153560) *
               C153413 * C1509) *
              C153716 +
          ((((C35198 + C35199) * C153596 + C40448 * C153603 +
             C59703 * C116108) *
                C70419 +
            ((C35200 + C35201) * C153596 + C40449 * C153603 +
             (C39442 + C39443) * C116108) *
                C153560) *
               C153413 * C153796 -
           ((C58695 * C116108 + C40450 * C153603 +
             (C35199 + C35198) * C153596) *
                C153560 +
            (C58696 * C116108 + (C39437 + C39436) * C153603 +
             (C34889 * C146 + C34906 + C34906 + C153348 * C162 + C34887 * C145 +
              C34907 + C34907 + C153705 * C161) *
                 C153596) *
                C70419) *
               C153413 * C153795 -
           (((C34889 * C4833 + C35432 + C35432 + C153348 * C4839 +
              C34887 * C4834 + C35433 + C35433 + C153705 * C4840) *
                 C116108 +
             (C36189 + C36188) * C153603 + C35208 * C153596) *
                C153560 +
            ((C39443 + C39442) * C116108 + C39082 * C153603 +
             C35209 * C153596) *
                C70419) *
               C153413 * C1509) *
              C153384)) /
        (p * q * std::sqrt(p + q));
    d2ee[126] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C34887 * C144 + C34892 + C34892 + C153705 * C160 + C34889 * C145 +
              C34893 + C34893 + C153348 * C161) *
                 C153596 +
             (C39432 + C39433) * C153603 + C58686 * C116108) *
                C70419 +
            ((C35190 + C35191) * C153596 + C40446 * C153603 +
             C41230 * C116108) *
                C153560) *
               C153725 -
           ((C60478 * C116108 + C41229 * C153603 + C40447 * C153596) * C153560 +
            (C62230 * C116108 + (C39434 + C39435) * C153603 +
             (C39433 + C39432) * C153596) *
                C70419) *
               C153477) *
              C153795 +
          (((C40446 * C153596 + C41230 * C153603 + C60479 * C116108) * C70419 +
            (C39081 * C153596 + C41235 * C153603 +
             (C41250 + C41251) * C116108) *
                C153560) *
               C153477 -
           ((C41228 * C116108 + C37403 * C153603 +
             (C35193 + C35192) * C153596) *
                C153560 +
            (C41229 * C116108 + C40447 * C153603 +
             (C35191 + C35190) * C153596) *
                C70419) *
               C153725) *
              C153796 +
          (((C35206 * C153596 + C39081 * C153603 + C41235 * C116108) * C70419 +
            (C35207 * C153596 + C42220 * C153603 +
             (C36754 + C36755) * C116108) *
                C153560) *
               C153725 -
           (((C34889 * C32070 + C37936 + C37936 + C153348 * C32072 +
              C34887 * C30195 + C37937 + C37937 + C153705 * C30199) *
                 C116108 +
             (C36755 + C36754) * C153603 + C37402 * C153596) *
                C153560 +
            ((C41251 + C41250) * C116108 + C41228 * C153603 +
             C37403 * C153596) *
                C70419) *
               C153477) *
              C1509) *
         C153378) /
        (p * q * std::sqrt(p + q));
    d2ee[127] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C34887 * C144 + C34892 + C34892 + C153705 * C160 + C34889 * C145 +
             C34893 + C34893 + C153348 * C161) *
                C153596 +
            (C39432 + C39433) * C153603 + C58686 * C116108) *
               C70419 +
           ((C35190 + C35191) * C153596 + C40446 * C153603 + C41230 * C116108) *
               C153560) *
              C153413 * C1218 -
          ((C41228 * C116108 + C37403 * C153603 + (C35193 + C35192) * C153596) *
               C153560 +
           (C41229 * C116108 + C40447 * C153603 + (C35191 + C35190) * C153596) *
               C70419) *
              C153413 * C1219 +
          ((C35206 * C153596 + C39081 * C153603 + C41235 * C116108) * C70419 +
           (C35207 * C153596 + C42220 * C153603 + (C36754 + C36755) * C116108) *
               C153560) *
              C153413 * C1220 -
          (((C34889 * C28571 + C36736 + C36736 + C153348 * C28575 +
             C34887 * C28570 + C36737 + C36737 + C153705 * C28574) *
                C116108 +
            (C37417 + C37416) * C153603 + C36514 * C153596) *
               C153560 +
           ((C36755 + C36754) * C116108 + C37402 * C153603 + C36515 * C153596) *
               C70419) *
              C153413 * C1221) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C34887 * C144 + C34892 + C34892 + C153705 * C160 + C34889 * C145 +
              C34893 + C34893 + C153348 * C161) *
                 C153596 +
             (C39432 + C39433) * C153603 + C58686 * C116108) *
                C70419 +
            ((C35190 + C35191) * C153596 + C40446 * C153603 +
             C41230 * C116108) *
                C153560) *
               C153413 * C1131 -
           ((C41228 * C116108 + C37403 * C153603 +
             (C35193 + C35192) * C153596) *
                C153560 +
            (C41229 * C116108 + C40447 * C153603 +
             (C35191 + C35190) * C153596) *
                C70419) *
               C153413 * C153449) *
              C1133 +
          ((((C35198 + C35199) * C153596 + C40448 * C153603 +
             C59703 * C116108) *
                C70419 +
            ((C35200 + C35201) * C153596 + C40449 * C153603 +
             (C39442 + C39443) * C116108) *
                C153560) *
               C153413 * C153449 -
           ((C58695 * C116108 + C40450 * C153603 +
             (C35199 + C35198) * C153596) *
                C153560 +
            (C58696 * C116108 + (C39437 + C39436) * C153603 +
             (C34889 * C146 + C34906 + C34906 + C153348 * C162 + C34887 * C145 +
              C34907 + C34907 + C153705 * C161) *
                 C153596) *
                C70419) *
               C153413 * C1131) *
              C1134 +
          ((((C34887 * C146 + C34908 + C34908 + C153705 * C162 + C34889 * C147 +
              C34909 + C34909 + C153348 * C163) *
                 C153596 +
             (C40058 + C40059) * C153603 + (C59315 + C59316) * C116108) *
                C70419 +
            ((C35660 + C35661) * C153596 + (C39750 + C39751) * C153603 +
             (C59011 + C59012) * C116108) *
                C153560) *
               C153413 * C1131 -
           (((C34889 * C3330 + C40048 + C40048 + C153348 * C3338 +
              C34887 * C3329 + C40049 + C40049 + C153705 * C3337) *
                 C116108 +
             (C39753 + C39752) * C153603 + (C35663 + C35662) * C153596) *
                C153560 +
            ((C59012 + C59011) * C116108 + (C39751 + C39750) * C153603 +
             (C35661 + C35660) * C153596) *
                C70419) *
               C153413 * C153449) *
              C1135)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C34887 * C144 + C34892 + C34892 + C153705 * C160 + C34889 * C145 +
              C34893 + C34893 + C153348 * C161) *
                 C153596 +
             (C39432 + C39433) * C153603 + C58686 * C116108) *
                C70419 +
            ((C35190 + C35191) * C153596 + C40446 * C153603 +
             C41230 * C116108) *
                C153560) *
               C493 -
           ((C60478 * C116108 + C41229 * C153603 + C40447 * C153596) * C153560 +
            (C62230 * C116108 + (C39434 + C39435) * C153603 +
             (C39433 + C39432) * C153596) *
                C70419) *
               C494 +
           ((C58686 * C153596 + C63735 * C153603 +
             (C62243 + C62244) * C116108) *
                C70419 +
            (C41230 * C153596 + C60479 * C153603 +
             (C60488 + C60489) * C116108) *
                C153560) *
               C495) *
              C1131 +
          (((C40446 * C153596 + C41230 * C153603 + C60479 * C116108) * C70419 +
            (C39081 * C153596 + C41235 * C153603 +
             (C41250 + C41251) * C116108) *
                C153560) *
               C494 -
           ((C41228 * C116108 + C37403 * C153603 +
             (C35193 + C35192) * C153596) *
                C153560 +
            (C41229 * C116108 + C40447 * C153603 +
             (C35191 + C35190) * C153596) *
                C70419) *
               C493 -
           (((C34889 * C31240 + C43000 + C43000 + C153348 * C31244 +
              C34887 * C31239 + C43001 + C43001 + C153705 * C31243) *
                 C116108 +
             (C41251 + C41250) * C153603 + C41228 * C153596) *
                C153560 +
            ((C60489 + C60488) * C116108 + C60478 * C153603 +
             C41229 * C153596) *
                C70419) *
               C495) *
              C153449) *
         C153378) /
            (p * q * std::sqrt(p + q));
    d2ee[128] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C34887 * C144 + C34892 + C34892 + C153705 * C160 +
               C34889 * C145 + C34893 + C34893 + C153348 * C161) *
                  C153596 +
              (C39432 + C39433) * C153603 + C58686 * C116108) *
                 C70419 +
             ((C35190 + C35191) * C153596 + C40446 * C153603 +
              C41230 * C116108) *
                 C153560) *
                C153725 -
            ((C60478 * C116108 + C41229 * C153603 + C40447 * C153596) *
                 C153560 +
             (C62230 * C116108 + (C39434 + C39435) * C153603 +
              (C39433 + C39432) * C153596) *
                 C70419) *
                C153477) *
               C1131 +
           (((C40446 * C153596 + C41230 * C153603 + C60479 * C116108) * C70419 +
             (C39081 * C153596 + C41235 * C153603 +
              (C41250 + C41251) * C116108) *
                 C153560) *
                C153477 -
            ((C41228 * C116108 + C37403 * C153603 +
              (C35193 + C35192) * C153596) *
                 C153560 +
             (C41229 * C116108 + C40447 * C153603 +
              (C35191 + C35190) * C153596) *
                 C70419) *
                C153725) *
               C153449) *
              C153716 +
          (((((C39436 + C39437) * C153596 + (C39438 + C39439) * C153603 +
              (C58709 + C58710) * C116108) *
                 C70419 +
             (C40448 * C153596 + C59703 * C153603 +
              (C58711 + C58712) * C116108) *
                 C153560) *
                C153477 -
            ((C58695 * C116108 + C40450 * C153603 +
              (C35199 + C35198) * C153596) *
                 C153560 +
             (C58696 * C116108 + (C39437 + C39436) * C153603 +
              (C34889 * C146 + C34906 + C34906 + C153348 * C162 +
               C34887 * C145 + C34907 + C34907 + C153705 * C161) *
                  C153596) *
                 C70419) *
                C153725) *
               C1131 +
           ((((C35198 + C35199) * C153596 + C40448 * C153603 +
              C59703 * C116108) *
                 C70419 +
             ((C35200 + C35201) * C153596 + C40449 * C153603 +
              (C39442 + C39443) * C116108) *
                 C153560) *
                C153725 -
            (((C34889 * C6213 + C39402 + C39402 + C153348 * C6225 +
               C34887 * C6214 + C39403 + C39403 + C153705 * C6226) *
                  C116108 +
              (C39443 + C39442) * C153603 + C39082 * C153596) *
                 C153560 +
             ((C58712 + C58711) * C116108 + C58695 * C153603 +
              C40450 * C153596) *
                 C70419) *
                C153477) *
               C153449) *
              C153384)) /
        (p * q * std::sqrt(p + q));
    d2ee[129] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C34887 * C144 + C34892 + C34892 + C153705 * C160 + C34889 * C145 +
              C34893 + C34893 + C153348 * C161) *
                 C153596 +
             (C39432 + C39433) * C153603 + C58686 * C116108) *
                C70419 +
            ((C35190 + C35191) * C153596 + C40446 * C153603 +
             C41230 * C116108) *
                C153560) *
               C153413 * C1131 -
           ((C41228 * C116108 + C37403 * C153603 +
             (C35193 + C35192) * C153596) *
                C153560 +
            (C41229 * C116108 + C40447 * C153603 +
             (C35191 + C35190) * C153596) *
                C70419) *
               C153413 * C153449) *
              C1133 +
          ((((C35198 + C35199) * C153596 + C40448 * C153603 +
             C59703 * C116108) *
                C70419 +
            ((C35200 + C35201) * C153596 + C40449 * C153603 +
             (C39442 + C39443) * C116108) *
                C153560) *
               C153413 * C153449 -
           ((C58695 * C116108 + C40450 * C153603 +
             (C35199 + C35198) * C153596) *
                C153560 +
            (C58696 * C116108 + (C39437 + C39436) * C153603 +
             (C34889 * C146 + C34906 + C34906 + C153348 * C162 + C34887 * C145 +
              C34907 + C34907 + C153705 * C161) *
                 C153596) *
                C70419) *
               C153413 * C1131) *
              C1134 +
          ((((C34887 * C146 + C34908 + C34908 + C153705 * C162 + C34889 * C147 +
              C34909 + C34909 + C153348 * C163) *
                 C153596 +
             (C40058 + C40059) * C153603 + (C59315 + C59316) * C116108) *
                C70419 +
            ((C35660 + C35661) * C153596 + (C39750 + C39751) * C153603 +
             (C59011 + C59012) * C116108) *
                C153560) *
               C153413 * C1131 -
           (((C34889 * C3330 + C40048 + C40048 + C153348 * C3338 +
              C34887 * C3329 + C40049 + C40049 + C153705 * C3337) *
                 C116108 +
             (C39753 + C39752) * C153603 + (C35663 + C35662) * C153596) *
                C153560 +
            ((C59012 + C59011) * C116108 + (C39751 + C39750) * C153603 +
             (C35661 + C35660) * C153596) *
                C70419) *
               C153413 * C153449) *
              C1135)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C34887 * C144 + C34892 + C34892 + C153705 * C160 + C34889 * C145 +
             C34893 + C34893 + C153348 * C161) *
                C153596 +
            (C39432 + C39433) * C153603 + C58686 * C116108) *
               C70419 +
           ((C35190 + C35191) * C153596 + C40446 * C153603 + C41230 * C116108) *
               C153560) *
              C153413 * C1218 -
          ((C41228 * C116108 + C37403 * C153603 + (C35193 + C35192) * C153596) *
               C153560 +
           (C41229 * C116108 + C40447 * C153603 + (C35191 + C35190) * C153596) *
               C70419) *
              C153413 * C1219 +
          ((C35206 * C153596 + C39081 * C153603 + C41235 * C116108) * C70419 +
           (C35207 * C153596 + C42220 * C153603 + (C36754 + C36755) * C116108) *
               C153560) *
              C153413 * C1220 -
          (((C34889 * C28571 + C36736 + C36736 + C153348 * C28575 +
             C34887 * C28570 + C36737 + C36737 + C153705 * C28574) *
                C116108 +
            (C37417 + C37416) * C153603 + C36514 * C153596) *
               C153560 +
           ((C36755 + C36754) * C116108 + C37402 * C153603 + C36515 * C153596) *
               C70419) *
              C153413 * C1221) *
         C153378) /
            (p * q * std::sqrt(p + q));
    d2ee[130] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C34887 * C144 + C34892 + C34892 + C153705 * C160 +
               C34889 * C145 + C34893 + C34893 + C153348 * C161) *
                  C153596 +
              (C39432 + C39433) * C153603 + C58686 * C116108) *
                 C70419 +
             ((C35190 + C35191) * C153596 + C40446 * C153603 +
              C41230 * C116108) *
                 C153560) *
                C1938 -
            ((C60478 * C116108 + C41229 * C153603 + C40447 * C153596) *
                 C153560 +
             (C62230 * C116108 + (C39434 + C39435) * C153603 +
              (C39433 + C39432) * C153596) *
                 C70419) *
                C153477) *
               C153724 +
           (((C40446 * C153596 + C41230 * C153603 + C60479 * C116108) * C70419 +
             (C39081 * C153596 + C41235 * C153603 +
              (C41250 + C41251) * C116108) *
                 C153560) *
                C153477 -
            ((C41228 * C116108 + C37403 * C153603 +
              (C35193 + C35192) * C153596) *
                 C153560 +
             (C41229 * C116108 + C40447 * C153603 +
              (C35191 + C35190) * C153596) *
                 C70419) *
                C1938) *
               C153449) *
              C153716 +
          (((((C39436 + C39437) * C153596 + (C39438 + C39439) * C153603 +
              (C58709 + C58710) * C116108) *
                 C70419 +
             (C40448 * C153596 + C59703 * C153603 +
              (C58711 + C58712) * C116108) *
                 C153560) *
                C153477 -
            ((C58695 * C116108 + C40450 * C153603 +
              (C35199 + C35198) * C153596) *
                 C153560 +
             (C58696 * C116108 + (C39437 + C39436) * C153603 +
              (C34889 * C146 + C34906 + C34906 + C153348 * C162 +
               C34887 * C145 + C34907 + C34907 + C153705 * C161) *
                  C153596) *
                 C70419) *
                C1938) *
               C153724 +
           ((((C35198 + C35199) * C153596 + C40448 * C153603 +
              C59703 * C116108) *
                 C70419 +
             ((C35200 + C35201) * C153596 + C40449 * C153603 +
              (C39442 + C39443) * C116108) *
                 C153560) *
                C1938 -
            (((C34889 * C6213 + C39402 + C39402 + C153348 * C6225 +
               C34887 * C6214 + C39403 + C39403 + C153705 * C6226) *
                  C116108 +
              (C39443 + C39442) * C153603 + C39082 * C153596) *
                 C153560 +
             ((C58712 + C58711) * C116108 + C58695 * C153603 +
              C40450 * C153596) *
                 C70419) *
                C153477) *
               C153449) *
              C153384)) /
        (p * q * std::sqrt(p + q));
    d2ee[131] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C34887 * C144 + C34892 + C34892 + C153705 * C160 + C34889 * C145 +
              C34893 + C34893 + C153348 * C161) *
                 C153596 +
             (C39432 + C39433) * C153603 + C58686 * C116108) *
                C70419 +
            ((C35190 + C35191) * C153596 + C40446 * C153603 +
             C41230 * C116108) *
                C153560) *
               C153797 -
           ((C60478 * C116108 + C41229 * C153603 + C40447 * C153596) * C153560 +
            (C62230 * C116108 + (C39434 + C39435) * C153603 +
             (C39433 + C39432) * C153596) *
                C70419) *
               C153798 +
           ((C58686 * C153596 + C63735 * C153603 +
             (C62243 + C62244) * C116108) *
                C70419 +
            (C41230 * C153596 + C60479 * C153603 +
             (C60488 + C60489) * C116108) *
                C153560) *
               C2454) *
              C153724 +
          (((C40446 * C153596 + C41230 * C153603 + C60479 * C116108) * C70419 +
            (C39081 * C153596 + C41235 * C153603 +
             (C41250 + C41251) * C116108) *
                C153560) *
               C153798 -
           ((C41228 * C116108 + C37403 * C153603 +
             (C35193 + C35192) * C153596) *
                C153560 +
            (C41229 * C116108 + C40447 * C153603 +
             (C35191 + C35190) * C153596) *
                C70419) *
               C153797 -
           (((C34889 * C31240 + C43000 + C43000 + C153348 * C31244 +
              C34887 * C31239 + C43001 + C43001 + C153705 * C31243) *
                 C116108 +
             (C41251 + C41250) * C153603 + C41228 * C153596) *
                C153560 +
            ((C60489 + C60488) * C116108 + C60478 * C153603 +
             C41229 * C153596) *
                C70419) *
               C2454) *
              C153449) *
         C153378) /
        (p * q * std::sqrt(p + q));
    d2ee[132] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C34887 * C144 + C34892 + C34892 + C153705 * C160 + C34889 * C145 +
              C34893 + C34893 + C153348 * C161) *
                 C153596 +
             (C39432 + C39433) * C153603 + C58686 * C116108) *
                C70419 +
            ((C35190 + C35191) * C153596 + C40446 * C153603 +
             C41230 * C116108) *
                C153560) *
               C1938 -
           ((C60478 * C116108 + C41229 * C153603 + C40447 * C153596) * C153560 +
            (C62230 * C116108 + (C39434 + C39435) * C153603 +
             (C39433 + C39432) * C153596) *
                C70419) *
               C153477) *
              C310 +
          (((C40446 * C153596 + C41230 * C153603 + C60479 * C116108) * C70419 +
            (C39081 * C153596 + C41235 * C153603 +
             (C41250 + C41251) * C116108) *
                C153560) *
               C153477 -
           ((C41228 * C116108 + C37403 * C153603 +
             (C35193 + C35192) * C153596) *
                C153560 +
            (C41229 * C116108 + C40447 * C153603 +
             (C35191 + C35190) * C153596) *
                C70419) *
               C1938) *
              C311 +
          (((C35206 * C153596 + C39081 * C153603 + C41235 * C116108) * C70419 +
            (C35207 * C153596 + C42220 * C153603 +
             (C36754 + C36755) * C116108) *
                C153560) *
               C1938 -
           (((C34889 * C32070 + C37936 + C37936 + C153348 * C32072 +
              C34887 * C30195 + C37937 + C37937 + C153705 * C30199) *
                 C116108 +
             (C36755 + C36754) * C153603 + C37402 * C153596) *
                C153560 +
            ((C41251 + C41250) * C116108 + C41228 * C153603 +
             C37403 * C153596) *
                C70419) *
               C153477) *
              C312) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C34887 * C144 + C34892 + C34892 + C153705 * C160 + C34889 * C145 +
              C34893 + C34893 + C153348 * C161) *
                 C153596 +
             (C39432 + C39433) * C153603 + C58686 * C116108) *
                C70419 +
            ((C35190 + C35191) * C153596 + C40446 * C153603 +
             C41230 * C116108) *
                C153560) *
               C1938 -
           ((C60478 * C116108 + C41229 * C153603 + C40447 * C153596) * C153560 +
            (C62230 * C116108 + (C39434 + C39435) * C153603 +
             (C39433 + C39432) * C153596) *
                C70419) *
               C153477) *
              C153397 * C1133 +
          ((((C39436 + C39437) * C153596 + (C39438 + C39439) * C153603 +
             (C58709 + C58710) * C116108) *
                C70419 +
            (C40448 * C153596 + C59703 * C153603 +
             (C58711 + C58712) * C116108) *
                C153560) *
               C153477 -
           ((C58695 * C116108 + C40450 * C153603 +
             (C35199 + C35198) * C153596) *
                C153560 +
            (C58696 * C116108 + (C39437 + C39436) * C153603 +
             (C34889 * C146 + C34906 + C34906 + C153348 * C162 + C34887 * C145 +
              C34907 + C34907 + C153705 * C161) *
                 C153596) *
                C70419) *
               C1938) *
              C153397 * C1134 +
          ((((C34887 * C146 + C34908 + C34908 + C153705 * C162 + C34889 * C147 +
              C34909 + C34909 + C153348 * C163) *
                 C153596 +
             (C40058 + C40059) * C153603 + (C59315 + C59316) * C116108) *
                C70419 +
            ((C35660 + C35661) * C153596 + (C39750 + C39751) * C153603 +
             (C59011 + C59012) * C116108) *
                C153560) *
               C1938 -
           (((C34889 * C8437 + C59307 + C59307 + C153348 * C8439 +
              C34887 * C6216 + C59308 + C59308 + C153705 * C6228) *
                 C116108 +
             (C59012 + C59011) * C153603 + (C39751 + C39750) * C153596) *
                C153560 +
            ((C64148 + C64147) * C116108 + (C59316 + C59315) * C153603 +
             (C40059 + C40058) * C153596) *
                C70419) *
               C153477) *
              C153397 * C1135)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C34887 * C144 + C34892 + C34892 + C153705 * C160 + C34889 * C145 +
             C34893 + C34893 + C153348 * C161) *
                C153596 +
            (C39432 + C39433) * C153603 + C58686 * C116108) *
               C70419 +
           ((C35190 + C35191) * C153596 + C40446 * C153603 + C41230 * C116108) *
               C153560) *
              C2144 -
          ((C60478 * C116108 + C41229 * C153603 + C40447 * C153596) * C153560 +
           (C62230 * C116108 + (C39434 + C39435) * C153603 +
            (C39433 + C39432) * C153596) *
               C70419) *
              C2145 +
          ((C58686 * C153596 + C63735 * C153603 + (C62243 + C62244) * C116108) *
               C70419 +
           (C41230 * C153596 + C60479 * C153603 + (C60488 + C60489) * C116108) *
               C153560) *
              C2146 -
          (((C34889 * C56416 + C62235 + C62235 + C153348 * C56418 +
             C34887 * C34012 + C62236 + C62236 + C153705 * C34016) *
                C116108 +
            (C60489 + C60488) * C153603 + C60478 * C153596) *
               C153560 +
           ((C66101 + C66100) * C116108 + C66089 * C153603 + C62230 * C153596) *
               C70419) *
              C2147) *
         C153397 * C153378) /
            (p * q * std::sqrt(p + q));
    d2ee[133] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C34887 * C144 + C34892 + C34892 + C153705 * C160 + C34889 * C145 +
              C34893 + C34893 + C153348 * C161) *
                 C153596 +
             (C39432 + C39433) * C153603 + C58686 * C116108) *
                C70419 +
            ((C35190 + C35191) * C153596 + C40446 * C153603 +
             C41230 * C116108) *
                C153560) *
               C153797 -
           ((C60478 * C116108 + C41229 * C153603 + C40447 * C153596) * C153560 +
            (C62230 * C116108 + (C39434 + C39435) * C153603 +
             (C39433 + C39432) * C153596) *
                C70419) *
               C153798 +
           ((C58686 * C153596 + C63735 * C153603 +
             (C62243 + C62244) * C116108) *
                C70419 +
            (C41230 * C153596 + C60479 * C153603 +
             (C60488 + C60489) * C116108) *
                C153560) *
               C2454) *
              C153397 * C153716 +
          ((((C39436 + C39437) * C153596 + (C39438 + C39439) * C153603 +
             (C58709 + C58710) * C116108) *
                C70419 +
            (C40448 * C153596 + C59703 * C153603 +
             (C58711 + C58712) * C116108) *
                C153560) *
               C153798 -
           ((C58695 * C116108 + C40450 * C153603 +
             (C35199 + C35198) * C153596) *
                C153560 +
            (C58696 * C116108 + (C39437 + C39436) * C153603 +
             (C34889 * C146 + C34906 + C34906 + C153348 * C162 + C34887 * C145 +
              C34907 + C34907 + C153705 * C161) *
                 C153596) *
                C70419) *
               C153797 -
           (((C34889 * C9040 + C58697 + C58697 + C153348 * C9046 +
              C34887 * C9041 + C58698 + C58698 + C153705 * C9047) *
                 C116108 +
             (C58712 + C58711) * C153603 + C58695 * C153596) *
                C153560 +
            ((C63748 + C63747) * C116108 + C63740 * C153603 +
             C58696 * C153596) *
                C70419) *
               C2454) *
              C153397 * C153384)) /
        (p * q * std::sqrt(p + q));
    d2ee[134] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C34887 * C144 + C34892 + C34892 + C153705 * C160 + C34889 * C145 +
              C34893 + C34893 + C153348 * C161) *
                 C153596 +
             (C39432 + C39433) * C153603 + C58686 * C116108) *
                C70419 +
            ((C35190 + C35191) * C153596 + C40446 * C153603 +
             C41230 * C116108) *
                C153560) *
               C1938 -
           ((C60478 * C116108 + C41229 * C153603 + C40447 * C153596) * C153560 +
            (C62230 * C116108 + (C39434 + C39435) * C153603 +
             (C39433 + C39432) * C153596) *
                C70419) *
               C153477) *
              C153397 * C1133 +
          ((((C39436 + C39437) * C153596 + (C39438 + C39439) * C153603 +
             (C58709 + C58710) * C116108) *
                C70419 +
            (C40448 * C153596 + C59703 * C153603 +
             (C58711 + C58712) * C116108) *
                C153560) *
               C153477 -
           ((C58695 * C116108 + C40450 * C153603 +
             (C35199 + C35198) * C153596) *
                C153560 +
            (C58696 * C116108 + (C39437 + C39436) * C153603 +
             (C34889 * C146 + C34906 + C34906 + C153348 * C162 + C34887 * C145 +
              C34907 + C34907 + C153705 * C161) *
                 C153596) *
                C70419) *
               C1938) *
              C153397 * C1134 +
          ((((C34887 * C146 + C34908 + C34908 + C153705 * C162 + C34889 * C147 +
              C34909 + C34909 + C153348 * C163) *
                 C153596 +
             (C40058 + C40059) * C153603 + (C59315 + C59316) * C116108) *
                C70419 +
            ((C35660 + C35661) * C153596 + (C39750 + C39751) * C153603 +
             (C59011 + C59012) * C116108) *
                C153560) *
               C1938 -
           (((C34889 * C8437 + C59307 + C59307 + C153348 * C8439 +
              C34887 * C6216 + C59308 + C59308 + C153705 * C6228) *
                 C116108 +
             (C59012 + C59011) * C153603 + (C39751 + C39750) * C153596) *
                C153560 +
            ((C64148 + C64147) * C116108 + (C59316 + C59315) * C153603 +
             (C40059 + C40058) * C153596) *
                C70419) *
               C153477) *
              C153397 * C1135)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C34887 * C144 + C34892 + C34892 + C153705 * C160 + C34889 * C145 +
              C34893 + C34893 + C153348 * C161) *
                 C153596 +
             (C39432 + C39433) * C153603 + C58686 * C116108) *
                C70419 +
            ((C35190 + C35191) * C153596 + C40446 * C153603 +
             C41230 * C116108) *
                C153560) *
               C1938 -
           ((C60478 * C116108 + C41229 * C153603 + C40447 * C153596) * C153560 +
            (C62230 * C116108 + (C39434 + C39435) * C153603 +
             (C39433 + C39432) * C153596) *
                C70419) *
               C153477) *
              C310 +
          (((C40446 * C153596 + C41230 * C153603 + C60479 * C116108) * C70419 +
            (C39081 * C153596 + C41235 * C153603 +
             (C41250 + C41251) * C116108) *
                C153560) *
               C153477 -
           ((C41228 * C116108 + C37403 * C153603 +
             (C35193 + C35192) * C153596) *
                C153560 +
            (C41229 * C116108 + C40447 * C153603 +
             (C35191 + C35190) * C153596) *
                C70419) *
               C1938) *
              C311 +
          (((C35206 * C153596 + C39081 * C153603 + C41235 * C116108) * C70419 +
            (C35207 * C153596 + C42220 * C153603 +
             (C36754 + C36755) * C116108) *
                C153560) *
               C1938 -
           (((C34889 * C32070 + C37936 + C37936 + C153348 * C32072 +
              C34887 * C30195 + C37937 + C37937 + C153705 * C30199) *
                 C116108 +
             (C36755 + C36754) * C153603 + C37402 * C153596) *
                C153560 +
            ((C41251 + C41250) * C116108 + C41228 * C153603 +
             C37403 * C153596) *
                C70419) *
               C153477) *
              C312) *
         C153378) /
            (p * q * std::sqrt(p + q));
    d2ee[135] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
              C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 +
              C23999 + C153761 * C162) *
                 C98471 +
             (C48203 + C48204 + C48205) * C153600) *
                C70419 +
            ((C24335 + C24336 + C24337) * C98471 +
             (C25440 + C25439 + C25438) * C153600) *
                C153560) *
               C153413 * C153724 -
           ((C26819 * C153600 + (C24340 + C24339 + C24338) * C98471) * C153560 +
            ((C25438 + C25439 + C25440) * C153600 +
             (C24337 + C24336 + C24335) * C98471) *
                C70419) *
               C153413 * C153449) *
              C153793 +
          ((((C24344 + C24345 + C24346) * C98471 +
             (C25441 + C25442 + C25443) * C153600) *
                C70419 +
            ((C24347 + C24348 + C24349) * C98471 +
             (C25444 + C25445 + C25446) * C153600) *
                C153560) *
               C153413 * C153449 -
           (((C25443 + C25442 + C25441) * C153600 +
             (C24346 + C24345 + C24344) * C98471) *
                C153560 +
            ((C48214 + C48213 + C48212) * C153600 +
             (C23994 * C147 + C24012 + C24012 + C153761 * C163 + C23992 * C146 +
              C24013 + C24013 + C153790 * C162 + C23990 * C145 + C24014 +
              C24014 + C153809 * C161) *
                 C98471) *
                C70419) *
               C153413 * C153724) *
              C153794 +
          ((((C23990 * C146 + C24015 + C24015 + C153809 * C162 + C23992 * C147 +
              C24016 + C24016 + C153790 * C163 + C23994 * C148 + C24017 +
              C24017 + C153761 * C164) *
                 C98471 +
             (C48691 + C48692 + C48693) * C153600) *
                C70419 +
            ((C24858 + C24859 + C24860) * C98471 +
             (C126250 + C126251 + C126252) * C153600) *
                C153560) *
               C153413 * C153724 -
           (((C23994 * C1796 + C25082 + C25082 + C153761 * C1806 +
              C23992 * C1797 + C25083 + C25083 + C153790 * C1807 +
              C23990 * C1798 + C25084 + C25084 + C153809 * C1808) *
                 C153600 +
             (C24863 + C24862 + C24861) * C98471) *
                C153560 +
            ((C126252 + C126251 + C126250) * C153600 +
             (C24860 + C24859 + C24858) * C98471) *
                C70419) *
               C153413 * C153449) *
              C678)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C98471 +
             C31295 * C153600) *
                C153819 +
            (C130745 + C130746) * C153815 + C130761 * C153805 +
            C130762 * C153747) *
               C153413 * C153724 -
           ((C130751 + C130752) * C153747 + (C130750 + C130749) * C153805 +
            (C130748 + C130747) * C153815 + (C130746 + C130745) * C153819) *
               C153413 * C153449) *
              C153793 +
          (((C130753 + C130754) * C153819 + (C130755 + C130756) * C153815 +
            (C130757 + C130758) * C153805 + (C130759 + C130760) * C153747) *
               C153413 * C153449 -
           (C130763 * C153747 + C130764 * C153805 +
            (C130754 + C130753) * C153815 +
            (C31300 * C153600 +
             (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C98471) *
                C153819) *
               C153413 * C153724) *
              C153794 +
          ((((C28234 * C146 + C28247 + C28247 + C153338 * C162) * C98471 +
             C31779 * C153600) *
                C153819 +
            (C131153 + C131154) * C153815 + (C131155 + C131156) * C153805 +
            (C131157 + C131158) * C153747) *
               C153413 * C153724 -
           (((C28234 * C5601 + C28866 + C28866 + C153338 * C5607) * C153600 +
             C28739 * C98471) *
                C153747 +
            (C131158 + C131157) * C153805 + (C131156 + C131155) * C153815 +
            (C131154 + C131153) * C153819) *
               C153413 * C153449) *
              C678)) /
            (p * q * std::sqrt(p + q));
    d2ee[136] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C23990 * C144 + C23997 + C23997 + C153809 * C160 +
               C23992 * C145 + C23998 + C23998 + C153790 * C161 +
               C23994 * C146 + C23999 + C23999 + C153761 * C162) *
                  C98471 +
              (C48203 + C48204 + C48205) * C153600) *
                 C70419 +
             ((C24335 + C24336 + C24337) * C98471 + C126933 * C153600) *
                 C153560) *
                C153725 -
            ((C49600 * C153600 + C126934 * C98471) * C153560 +
             ((C48208 + C48207 + C48206) * C153600 +
              (C48205 + C48204 + C48203) * C98471) *
                 C70419) *
                C153477) *
               C153724 +
           (((C126933 * C98471 + (C26077 + C26078 + C26079) * C153600) *
                 C70419 +
             ((C25437 + C25436 + C25435) * C98471 +
              (C26080 + C26081 + C26082) * C153600) *
                 C153560) *
                C153477 -
            ((C26819 * C153600 + (C24340 + C24339 + C24338) * C98471) *
                 C153560 +
             (C126934 * C153600 + (C24337 + C24336 + C24335) * C98471) *
                 C70419) *
                C153725) *
               C153449) *
              C313 +
          (((((C48212 + C48213 + C48214) * C98471 +
              (C48215 + C48216 + C48217) * C153600) *
                 C70419 +
             (C126935 * C98471 + (C49002 + C49003 + C49004) * C153600) *
                 C153560) *
                C153477 -
            ((C126936 * C153600 + (C24346 + C24345 + C24344) * C98471) *
                 C153560 +
             ((C48214 + C48213 + C48212) * C153600 +
              (C23994 * C147 + C24012 + C24012 + C153761 * C163 +
               C23992 * C146 + C24013 + C24013 + C153790 * C162 +
               C23990 * C145 + C24014 + C24014 + C153809 * C161) *
                  C98471) *
                 C70419) *
                C153725) *
               C153724 +
           ((((C24344 + C24345 + C24346) * C98471 + C126935 * C153600) *
                 C70419 +
             ((C24347 + C24348 + C24349) * C98471 +
              (C25444 + C25445 + C25446) * C153600) *
                 C153560) *
                C153725 -
            (((C23994 * C3330 + C24604 + C24604 + C153761 * C3338 +
               C23992 * C3329 + C24605 + C24605 + C153790 * C3337 +
               C23990 * C3328 + C24606 + C24606 + C153809 * C3336) *
                  C153600 +
              (C25446 + C25445 + C25444) * C98471) *
                 C153560 +
             ((C49004 + C49003 + C49002) * C153600 + C126936 * C98471) *
                 C70419) *
                C153477) *
               C153449) *
              C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C98471 +
              C31295 * C153600) *
                 C153819 +
             (C130745 + C130746) * C153815 + C130761 * C153805 +
             C130762 * C153747) *
                C153725 -
            ((C131611 + C131612) * C153747 + (C131613 + C131614) * C153805 +
             (C131615 + C131616) * C153815 +
             (C31296 * C153600 + C31295 * C98471) * C153819) *
                C153477) *
               C153724 +
           (((C131616 + C131615) * C153819 + (C131614 + C131613) * C153815 +
             (C131612 + C131611) * C153805 +
             (C29073 * C98471 + C29448 * C153600) * C153747) *
                C153477 -
            ((C130751 + C130752) * C153747 + (C130750 + C130749) * C153805 +
             (C130748 + C130747) * C153815 + (C130746 + C130745) * C153819) *
                C153725) *
               C153449) *
              C313 +
          ((((C31300 * C98471 + C31301 * C153600) * C153819 +
             (C131617 + C131618) * C153815 + (C131619 + C131620) * C153805 +
             (C131621 + C131622) * C153747) *
                C153477 -
            (C130763 * C153747 + C130764 * C153805 +
             (C130754 + C130753) * C153815 +
             (C31300 * C153600 +
              (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C98471) *
                 C153819) *
                C153725) *
               C153724 +
           (((C130753 + C130754) * C153819 + (C130755 + C130756) * C153815 +
             (C130757 + C130758) * C153805 + (C130759 + C130760) * C153747) *
                C153725 -
            (((C28234 * C28571 + C28592 + C28592 + C153338 * C28575) * C153600 +
              C29080 * C98471) *
                 C153747 +
             (C131622 + C131621) * C153805 + (C131620 + C131619) * C153815 +
             (C131618 + C131617) * C153819) *
                C153477) *
               C153449) *
              C153384)) /
            (p * q * std::sqrt(p + q));
    d2ee[137] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
              C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 +
              C23999 + C153761 * C162) *
                 C98471 +
             (C48203 + C48204 + C48205) * C153600) *
                C70419 +
            ((C24335 + C24336 + C24337) * C98471 +
             (C25440 + C25439 + C25438) * C153600) *
                C153560) *
               C153413 * C310 -
           ((C26819 * C153600 + (C24340 + C24339 + C24338) * C98471) * C153560 +
            ((C25438 + C25439 + C25440) * C153600 +
             (C24337 + C24336 + C24335) * C98471) *
                C70419) *
               C153413 * C311 +
           ((C24355 * C98471 + (C25437 + C25436 + C25435) * C153600) * C70419 +
            ((C24343 + C24342 + C24341) * C98471 +
             (C26827 + C26828 + C26829) * C153600) *
                C153560) *
               C153413 * C312) *
              C313 +
          ((((C24344 + C24345 + C24346) * C98471 +
             (C25441 + C25442 + C25443) * C153600) *
                C70419 +
            ((C24347 + C24348 + C24349) * C98471 +
             (C25444 + C25445 + C25446) * C153600) *
                C153560) *
               C153413 * C311 -
           (((C25443 + C25442 + C25441) * C153600 +
             (C24346 + C24345 + C24344) * C98471) *
                C153560 +
            ((C48214 + C48213 + C48212) * C153600 +
             (C23994 * C147 + C24012 + C24012 + C153761 * C163 + C23992 * C146 +
              C24013 + C24013 + C153790 * C162 + C23990 * C145 + C24014 +
              C24014 + C153809 * C161) *
                 C98471) *
                C70419) *
               C153413 * C310 -
           (((C23994 * C4146 + C25408 + C25408 + C153761 * C4154 +
              C23992 * C4145 + C25409 + C25409 + C153790 * C4153 +
              C23990 * C4144 + C25410 + C25410 + C153809 * C4152) *
                 C153600 +
             (C24352 + C24351 + C24350) * C98471) *
                C153560 +
            ((C25446 + C25445 + C25444) * C153600 + C24356 * C98471) * C70419) *
               C153413 * C312) *
              C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
             C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 +
             C23999 + C153761 * C162) *
                C98471 +
            (C48203 + C48204 + C48205) * C153600) *
               C70419 +
           ((C24335 + C24336 + C24337) * C98471 +
            (C25440 + C25439 + C25438) * C153600) *
               C153560) *
              C153413 * C153397 * C130 -
          (((C25443 + C25442 + C25441) * C153600 +
            (C24346 + C24345 + C24344) * C98471) *
               C153560 +
           ((C48214 + C48213 + C48212) * C153600 +
            (C23994 * C147 + C24012 + C24012 + C153761 * C163 + C23992 * C146 +
             C24013 + C24013 + C153790 * C162 + C23990 * C145 + C24014 +
             C24014 + C153809 * C161) *
                C98471) *
               C70419) *
              C153413 * C153397 * C131 +
          (((C23990 * C146 + C24015 + C24015 + C153809 * C162 + C23992 * C147 +
             C24016 + C24016 + C153790 * C163 + C23994 * C148 + C24017 +
             C24017 + C153761 * C164) *
                C98471 +
            (C48691 + C48692 + C48693) * C153600) *
               C70419 +
           ((C24858 + C24859 + C24860) * C98471 +
            (C23990 * C983 + C25087 + C25087 + C153809 * C995 + C23992 * C984 +
             C25086 + C25086 + C153790 * C996 + C23994 * C985 + C25085 +
             C25085 + C153761 * C997) *
                C153600) *
               C153560) *
              C153413 * C153397 * C132 -
          (((C23994 * C986 + C125365 + C125365 + C153761 * C998 +
             C23992 * C985 + C125366 + C125366 + C153790 * C997 +
             C23990 * C984 + C125367 + C125367 + C153809 * C996) *
                C153600 +
            (C23994 * C325 + C24027 + C24027 + C153761 * C349 + C23992 * C315 +
             C24028 + C24028 + C153790 * C339 + C23990 * C316 + C24029 +
             C24029 + C153809 * C340) *
                C98471) *
               C153560 +
           ((C23994 * C506 + C47683 + C47683 + C153761 * C530 + C23992 * C496 +
             C47684 + C47684 + C153790 * C520 + C23990 * C497 + C47685 +
             C47685 + C153809 * C521) *
                C153600 +
            (C23994 * C149 + C24030 + C24030 + C153761 * C165 + C23992 * C148 +
             C24031 + C24031 + C153790 * C164 + C23990 * C147 + C24032 +
             C24032 + C153809 * C163) *
                C98471) *
               C70419) *
              C153413 * C153397 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
              C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 +
              C23999 + C153761 * C162) *
                 C98471 +
             (C48203 + C48204 + C48205) * C153600) *
                C70419 +
            ((C24335 + C24336 + C24337) * C98471 +
             (C25440 + C25439 + C25438) * C153600) *
                C153560) *
               C493 -
           ((C49600 * C153600 + (C25438 + C25439 + C25440) * C98471) * C153560 +
            ((C48208 + C48207 + C48206) * C153600 +
             (C48205 + C48204 + C48203) * C98471) *
                C70419) *
               C494 +
           ((C48223 * C98471 + (C48211 + C48210 + C48209) * C153600) * C70419 +
            ((C26077 + C26078 + C26079) * C98471 +
             (C49604 + C49605 + C49606) * C153600) *
                C153560) *
               C495) *
              C153397 * C313 +
          ((((C48212 + C48213 + C48214) * C98471 +
             (C48215 + C48216 + C48217) * C153600) *
                C70419 +
            ((C25441 + C25442 + C25443) * C98471 +
             (C49002 + C49003 + C49004) * C153600) *
                C153560) *
               C494 -
           (((C25443 + C25442 + C25441) * C153600 +
             (C24346 + C24345 + C24344) * C98471) *
                C153560 +
            ((C48214 + C48213 + C48212) * C153600 +
             (C23994 * C147 + C24012 + C24012 + C153761 * C163 + C23992 * C146 +
              C24013 + C24013 + C153790 * C162 + C23990 * C145 + C24014 +
              C24014 + C153809 * C161) *
                 C98471) *
                C70419) *
               C493 -
           (((C23994 * C8437 + C48993 + C48993 + C153761 * C8439 +
              C23992 * C6216 + C48994 + C48994 + C153790 * C6228 +
              C23990 * C6217 + C48995 + C48995 + C153809 * C6229) *
                 C153600 +
             (C49004 + C49003 + C49002) * C98471) *
                C153560 +
            ((C48220 + C48219 + C48218) * C153600 + C48224 * C98471) * C70419) *
               C495) *
              C153397 * C153384)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C98471 +
            C31295 * C153600) *
               C153819 +
           (C28429 * C98471 + C29076 * C153600) * C153815 +
           (C28430 * C98471 + C29075 * C153600) * C153805 +
           (C28431 * C98471 + C29074 * C153600) * C153747) *
              C153413 * C153397 * C130 -
          ((C29079 * C153600 + C28436 * C98471) * C153747 +
           (C29078 * C153600 + C28435 * C98471) * C153805 +
           (C29077 * C153600 + C28434 * C98471) * C153815 +
           (C31300 * C153600 +
            (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C98471) *
               C153819) *
              C153413 * C153397 * C131 +
          (((C28234 * C146 + C28247 + C28247 + C153338 * C162) * C98471 +
            C31779 * C153600) *
               C153819 +
           (C28736 * C98471 + C31542 * C153600) * C153815 +
           (C28737 * C98471 + C31544 * C153600) * C153805 +
           (C28738 * C98471 + C44720 * C153600) * C153747) *
              C153413 * C153397 * C132 -
          (((C28234 * C4146 + C44108 + C44108 + C153338 * C4154) * C153600 +
            (C28234 * C1224 + C28253 + C28253 + C153338 * C1234) * C98471) *
               C153747 +
           ((C28234 * C1797 + C30762 + C30762 + C153338 * C1807) * C153600 +
            (C28234 * C323 + C28254 + C28254 + C153338 * C347) * C98471) *
               C153805 +
           ((C28234 * C984 + C30764 + C30764 + C153338 * C996) * C153600 +
            (C28234 * C316 + C28255 + C28255 + C153338 * C340) * C98471) *
               C153815 +
           ((C28234 * C497 + C30766 + C30766 + C153338 * C521) * C153600 +
            (C28234 * C147 + C28256 + C28256 + C153338 * C163) * C98471) *
               C153819) *
              C153413 * C153397 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C98471 +
             C31295 * C153600) *
                C153819 +
            (C130745 + C130746) * C153815 + C130761 * C153805 +
            C130762 * C153747) *
               C153413 * C310 -
           ((C130751 + C130752) * C153747 + (C130750 + C130749) * C153805 +
            (C130748 + C130747) * C153815 + (C130746 + C130745) * C153819) *
               C153413 * C311 +
           (C130761 * C153819 + C130762 * C153815 +
            (C130752 + C130751) * C153805 +
            (C28433 * C98471 + C29867 * C153600) * C153747) *
               C153413 * C312) *
              C313 +
          (((C130753 + C130754) * C153819 + (C130755 + C130756) * C153815 +
            (C130757 + C130758) * C153805 + (C130759 + C130760) * C153747) *
               C153413 * C311 -
           (C130763 * C153747 + C130764 * C153805 +
            (C130754 + C130753) * C153815 +
            (C31300 * C153600 +
             (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C98471) *
                C153819) *
               C153413 * C310 -
           (((C28234 * C29033 + C29056 + C29056 + C153338 * C29037) * C153600 +
             C28438 * C98471) *
                C153747 +
            (C130760 + C130759) * C153805 + C130763 * C153815 +
            C130764 * C153819) *
               C153413 * C312) *
              C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C98471 +
             C31295 * C153600) *
                C153819 +
            (C130745 + C130746) * C153815 + C130761 * C153805 +
            C130762 * C153747) *
               C493 -
           ((C29447 * C153600 + C29074 * C98471) * C153747 +
            (C29446 * C153600 + C29075 * C98471) * C153805 +
            (C29445 * C153600 + C29076 * C98471) * C153815 +
            (C31296 * C153600 + C31295 * C98471) * C153819) *
               C494 +
           ((C31296 * C98471 + C31299 * C153600) * C153819 +
            (C29445 * C98471 + C31298 * C153600) * C153815 +
            (C29446 * C98471 + C31297 * C153600) * C153805 +
            (C29447 * C98471 + C32696 * C153600) * C153747) *
               C495) *
              C153397 * C313 +
          (((C31300 * C98471 + C31301 * C153600) * C153819 +
            (C29077 * C98471 + C31015 * C153600) * C153815 +
            (C29078 * C98471 + C31016 * C153600) * C153805 +
            (C29079 * C98471 + C31017 * C153600) * C153747) *
               C494 -
           (C130763 * C153747 + C130764 * C153805 +
            (C130754 + C130753) * C153815 +
            (C31300 * C153600 +
             (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C98471) *
                C153819) *
               C493 -
           (((C28234 * C32070 + C32086 + C32086 + C153338 * C32072) * C153600 +
             C31017 * C98471) *
                C153747 +
            (C31304 * C153600 + C31016 * C98471) * C153805 +
            (C31303 * C153600 + C31015 * C98471) * C153815 +
            (C31302 * C153600 + C31301 * C98471) * C153819) *
               C495) *
              C153397 * C153384)) /
            (p * q * std::sqrt(p + q));
    d2ee[138] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
              C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 +
              C23999 + C153761 * C162) *
                 C98471 +
             (C48203 + C48204 + C48205) * C153600) *
                C70419 +
            ((C24335 + C24336 + C24337) * C98471 +
             (C25440 + C25439 + C25438) * C153600) *
                C153560) *
               C153725 -
           ((C49600 * C153600 + (C25438 + C25439 + C25440) * C98471) * C153560 +
            ((C48208 + C48207 + C48206) * C153600 +
             (C48205 + C48204 + C48203) * C98471) *
                C70419) *
               C153477) *
              C153397 * C153793 +
          ((((C48212 + C48213 + C48214) * C98471 +
             (C48215 + C48216 + C48217) * C153600) *
                C70419 +
            ((C25441 + C25442 + C25443) * C98471 +
             (C49002 + C49003 + C49004) * C153600) *
                C153560) *
               C153477 -
           (((C25443 + C25442 + C25441) * C153600 +
             (C24346 + C24345 + C24344) * C98471) *
                C153560 +
            ((C48214 + C48213 + C48212) * C153600 +
             (C23994 * C147 + C24012 + C24012 + C153761 * C163 + C23992 * C146 +
              C24013 + C24013 + C153790 * C162 + C23990 * C145 + C24014 +
              C24014 + C153809 * C161) *
                 C98471) *
                C70419) *
               C153725) *
              C153397 * C153794 +
          ((((C23990 * C146 + C24015 + C24015 + C153809 * C162 + C23992 * C147 +
              C24016 + C24016 + C153790 * C163 + C23994 * C148 + C24017 +
              C24017 + C153761 * C164) *
                 C98471 +
             (C48691 + C48692 + C48693) * C153600) *
                C70419 +
            ((C24858 + C24859 + C24860) * C98471 +
             (C126250 + C126251 + C126252) * C153600) *
                C153560) *
               C153725 -
           (((C23994 * C1365 + C48443 + C48443 + C153761 * C1375 +
              C23992 * C1366 + C48444 + C48444 + C153790 * C1376 +
              C23990 * C1367 + C48445 + C48445 + C153809 * C1377) *
                 C153600 +
             (C126252 + C126251 + C126250) * C98471) *
                C153560 +
            ((C48696 + C48695 + C48694) * C153600 +
             (C48693 + C48692 + C48691) * C98471) *
                C70419) *
               C153477) *
              C153397 * C678)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C98471 +
             C31295 * C153600) *
                C153819 +
            (C130745 + C130746) * C153815 + C130761 * C153805 +
            C130762 * C153747) *
               C153725 -
           ((C29447 * C153600 + C29074 * C98471) * C153747 +
            (C29446 * C153600 + C29075 * C98471) * C153805 +
            (C29445 * C153600 + C29076 * C98471) * C153815 +
            (C31296 * C153600 + C31295 * C98471) * C153819) *
               C153477) *
              C153397 * C153793 +
          (((C31300 * C98471 + C31301 * C153600) * C153819 +
            (C29077 * C98471 + C31015 * C153600) * C153815 +
            (C29078 * C98471 + C31016 * C153600) * C153805 +
            (C29079 * C98471 + C31017 * C153600) * C153747) *
               C153477 -
           (C130763 * C153747 + C130764 * C153805 +
            (C130754 + C130753) * C153815 +
            (C31300 * C153600 +
             (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C98471) *
                C153819) *
               C153725) *
              C153397 * C153794 +
          ((((C28234 * C146 + C28247 + C28247 + C153338 * C162) * C98471 +
             C31779 * C153600) *
                C153819 +
            (C131153 + C131154) * C153815 + (C131155 + C131156) * C153805 +
            (C131157 + C131158) * C153747) *
               C153725 -
           (((C28234 * C4833 + C31533 + C31533 + C153338 * C4839) * C153600 +
             C44720 * C98471) *
                C153747 +
            (C31545 * C153600 + C31544 * C98471) * C153805 +
            (C31543 * C153600 + C31542 * C98471) * C153815 +
            (C31780 * C153600 + C31779 * C98471) * C153819) *
               C153477) *
              C153397 * C678)) /
            (p * q * std::sqrt(p + q));
    d2ee[139] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
             C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 +
             C23999 + C153761 * C162) *
                C98471 +
            (C48203 + C48204 + C48205) * C153600) *
               C70419 +
           ((C24335 + C24336 + C24337) * C98471 +
            (C25440 + C25439 + C25438) * C153600) *
               C153560) *
              C153413 * C153397 * C130 -
          (((C25443 + C25442 + C25441) * C153600 +
            (C24346 + C24345 + C24344) * C98471) *
               C153560 +
           ((C48214 + C48213 + C48212) * C153600 +
            (C23994 * C147 + C24012 + C24012 + C153761 * C163 + C23992 * C146 +
             C24013 + C24013 + C153790 * C162 + C23990 * C145 + C24014 +
             C24014 + C153809 * C161) *
                C98471) *
               C70419) *
              C153413 * C153397 * C131 +
          (((C23990 * C146 + C24015 + C24015 + C153809 * C162 + C23992 * C147 +
             C24016 + C24016 + C153790 * C163 + C23994 * C148 + C24017 +
             C24017 + C153761 * C164) *
                C98471 +
            (C48691 + C48692 + C48693) * C153600) *
               C70419 +
           ((C24858 + C24859 + C24860) * C98471 +
            (C23990 * C983 + C25087 + C25087 + C153809 * C995 + C23992 * C984 +
             C25086 + C25086 + C153790 * C996 + C23994 * C985 + C25085 +
             C25085 + C153761 * C997) *
                C153600) *
               C153560) *
              C153413 * C153397 * C132 -
          (((C23994 * C986 + C125365 + C125365 + C153761 * C998 +
             C23992 * C985 + C125366 + C125366 + C153790 * C997 +
             C23990 * C984 + C125367 + C125367 + C153809 * C996) *
                C153600 +
            (C23994 * C325 + C24027 + C24027 + C153761 * C349 + C23992 * C315 +
             C24028 + C24028 + C153790 * C339 + C23990 * C316 + C24029 +
             C24029 + C153809 * C340) *
                C98471) *
               C153560 +
           ((C23994 * C506 + C47683 + C47683 + C153761 * C530 + C23992 * C496 +
             C47684 + C47684 + C153790 * C520 + C23990 * C497 + C47685 +
             C47685 + C153809 * C521) *
                C153600 +
            (C23994 * C149 + C24030 + C24030 + C153761 * C165 + C23992 * C148 +
             C24031 + C24031 + C153790 * C164 + C23990 * C147 + C24032 +
             C24032 + C153809 * C163) *
                C98471) *
               C70419) *
              C153413 * C153397 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
              C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 +
              C23999 + C153761 * C162) *
                 C98471 +
             (C48203 + C48204 + C48205) * C153600) *
                C70419 +
            ((C24335 + C24336 + C24337) * C98471 +
             (C25440 + C25439 + C25438) * C153600) *
                C153560) *
               C153413 * C310 -
           ((C26819 * C153600 + (C24340 + C24339 + C24338) * C98471) * C153560 +
            ((C25438 + C25439 + C25440) * C153600 +
             (C24337 + C24336 + C24335) * C98471) *
                C70419) *
               C153413 * C311 +
           ((C24355 * C98471 + (C25437 + C25436 + C25435) * C153600) * C70419 +
            ((C24343 + C24342 + C24341) * C98471 +
             (C26827 + C26828 + C26829) * C153600) *
                C153560) *
               C153413 * C312) *
              C313 +
          ((((C24344 + C24345 + C24346) * C98471 +
             (C25441 + C25442 + C25443) * C153600) *
                C70419 +
            ((C24347 + C24348 + C24349) * C98471 +
             (C25444 + C25445 + C25446) * C153600) *
                C153560) *
               C153413 * C311 -
           (((C25443 + C25442 + C25441) * C153600 +
             (C24346 + C24345 + C24344) * C98471) *
                C153560 +
            ((C48214 + C48213 + C48212) * C153600 +
             (C23994 * C147 + C24012 + C24012 + C153761 * C163 + C23992 * C146 +
              C24013 + C24013 + C153790 * C162 + C23990 * C145 + C24014 +
              C24014 + C153809 * C161) *
                 C98471) *
                C70419) *
               C153413 * C310 -
           (((C23994 * C4146 + C25408 + C25408 + C153761 * C4154 +
              C23992 * C4145 + C25409 + C25409 + C153790 * C4153 +
              C23990 * C4144 + C25410 + C25410 + C153809 * C4152) *
                 C153600 +
             (C24352 + C24351 + C24350) * C98471) *
                C153560 +
            ((C25446 + C25445 + C25444) * C153600 + C24356 * C98471) * C70419) *
               C153413 * C312) *
              C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C98471 +
            C31295 * C153600) *
               C153819 +
           (C28429 * C98471 + C29076 * C153600) * C153815 +
           (C28430 * C98471 + C29075 * C153600) * C153805 +
           (C28431 * C98471 + C29074 * C153600) * C153747) *
              C153413 * C153397 * C130 -
          ((C29079 * C153600 + C28436 * C98471) * C153747 +
           (C29078 * C153600 + C28435 * C98471) * C153805 +
           (C29077 * C153600 + C28434 * C98471) * C153815 +
           (C31300 * C153600 +
            (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C98471) *
               C153819) *
              C153413 * C153397 * C131 +
          (((C28234 * C146 + C28247 + C28247 + C153338 * C162) * C98471 +
            C31779 * C153600) *
               C153819 +
           (C28736 * C98471 + C31542 * C153600) * C153815 +
           (C28737 * C98471 + C31544 * C153600) * C153805 +
           (C28738 * C98471 + C44720 * C153600) * C153747) *
              C153413 * C153397 * C132 -
          (((C28234 * C4146 + C44108 + C44108 + C153338 * C4154) * C153600 +
            (C28234 * C1224 + C28253 + C28253 + C153338 * C1234) * C98471) *
               C153747 +
           ((C28234 * C1797 + C30762 + C30762 + C153338 * C1807) * C153600 +
            (C28234 * C323 + C28254 + C28254 + C153338 * C347) * C98471) *
               C153805 +
           ((C28234 * C984 + C30764 + C30764 + C153338 * C996) * C153600 +
            (C28234 * C316 + C28255 + C28255 + C153338 * C340) * C98471) *
               C153815 +
           ((C28234 * C497 + C30766 + C30766 + C153338 * C521) * C153600 +
            (C28234 * C147 + C28256 + C28256 + C153338 * C163) * C98471) *
               C153819) *
              C153413 * C153397 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C98471 +
             C31295 * C153600) *
                C153819 +
            (C130745 + C130746) * C153815 + C130761 * C153805 +
            C130762 * C153747) *
               C153413 * C310 -
           ((C130751 + C130752) * C153747 + (C130750 + C130749) * C153805 +
            (C130748 + C130747) * C153815 + (C130746 + C130745) * C153819) *
               C153413 * C311 +
           (C130761 * C153819 + C130762 * C153815 +
            (C130752 + C130751) * C153805 +
            (C28433 * C98471 + C29867 * C153600) * C153747) *
               C153413 * C312) *
              C313 +
          (((C130753 + C130754) * C153819 + (C130755 + C130756) * C153815 +
            (C130757 + C130758) * C153805 + (C130759 + C130760) * C153747) *
               C153413 * C311 -
           (C130763 * C153747 + C130764 * C153805 +
            (C130754 + C130753) * C153815 +
            (C31300 * C153600 +
             (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C98471) *
                C153819) *
               C153413 * C310 -
           (((C28234 * C29033 + C29056 + C29056 + C153338 * C29037) * C153600 +
             C28438 * C98471) *
                C153747 +
            (C130760 + C130759) * C153805 + C130763 * C153815 +
            C130764 * C153819) *
               C153413 * C312) *
              C153384)) /
            (p * q * std::sqrt(p + q));
    d2ee[140] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
              C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 +
              C23999 + C153761 * C162) *
                 C98471 +
             (C48203 + C48204 + C48205) * C153600) *
                C70419 +
            ((C24335 + C24336 + C24337) * C98471 + C126933 * C153600) *
                C153560) *
               C153413 * C153795 -
           ((C26819 * C153600 + (C24340 + C24339 + C24338) * C98471) * C153560 +
            (C126934 * C153600 + (C24337 + C24336 + C24335) * C98471) *
                C70419) *
               C153413 * C153796 +
           ((C24355 * C98471 + (C25437 + C25436 + C25435) * C153600) * C70419 +
            ((C24343 + C24342 + C24341) * C98471 +
             (C26827 + C26828 + C26829) * C153600) *
                C153560) *
               C153413 * C1509) *
              C153716 +
          ((((C24344 + C24345 + C24346) * C98471 + C126935 * C153600) * C70419 +
            ((C24347 + C24348 + C24349) * C98471 +
             (C25444 + C25445 + C25446) * C153600) *
                C153560) *
               C153413 * C153796 -
           ((C126936 * C153600 + (C24346 + C24345 + C24344) * C98471) *
                C153560 +
            ((C48214 + C48213 + C48212) * C153600 +
             (C23994 * C147 + C24012 + C24012 + C153761 * C163 + C23992 * C146 +
              C24013 + C24013 + C153790 * C162 + C23990 * C145 + C24014 +
              C24014 + C153809 * C161) *
                 C98471) *
                C70419) *
               C153413 * C153795 -
           (((C23994 * C4146 + C25408 + C25408 + C153761 * C4154 +
              C23992 * C4145 + C25409 + C25409 + C153790 * C4153 +
              C23990 * C4144 + C25410 + C25410 + C153809 * C4152) *
                 C153600 +
             (C24352 + C24351 + C24350) * C98471) *
                C153560 +
            ((C25446 + C25445 + C25444) * C153600 + C24356 * C98471) * C70419) *
               C153413 * C1509) *
              C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C98471 +
             C31295 * C153600) *
                C153819 +
            (C130745 + C130746) * C153815 + C130761 * C153805 +
            C130762 * C153747) *
               C153413 * C153795 -
           (C131947 * C153747 + C131948 * C153805 +
            (C130748 + C130747) * C153815 + (C130746 + C130745) * C153819) *
               C153413 * C153796 +
           (C130761 * C153819 + C130762 * C153815 +
            (C130752 + C130751) * C153805 + (C131949 + C131950) * C153747) *
               C153413 * C1509) *
              C153716 +
          (((C130753 + C130754) * C153819 + (C130755 + C130756) * C153815 +
            (C130757 + C130758) * C153805 + (C130759 + C130760) * C153747) *
               C153413 * C153796 -
           (C130763 * C153747 + C130764 * C153805 +
            (C130754 + C130753) * C153815 +
            (C31300 * C153600 +
             (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C98471) *
                C153819) *
               C153413 * C153795 -
           (((C28234 * C29033 + C29056 + C29056 + C153338 * C29037) * C153600 +
             C28438 * C98471) *
                C153747 +
            (C130760 + C130759) * C153805 + C130763 * C153815 +
            C130764 * C153819) *
               C153413 * C1509) *
              C153384)) /
            (p * q * std::sqrt(p + q));
    d2ee[141] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
              C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 +
              C23999 + C153761 * C162) *
                 C98471 +
             (C48203 + C48204 + C48205) * C153600) *
                C70419 +
            ((C24335 + C24336 + C24337) * C98471 + C126933 * C153600) *
                C153560) *
               C153725 -
           ((C49600 * C153600 + C126934 * C98471) * C153560 +
            ((C48208 + C48207 + C48206) * C153600 +
             (C48205 + C48204 + C48203) * C98471) *
                C70419) *
               C153477) *
              C153795 +
          (((C126933 * C98471 + C127712 * C153600) * C70419 +
            (C128680 * C98471 + (C26080 + C26081 + C26082) * C153600) *
                C153560) *
               C153477 -
           ((C26819 * C153600 + (C24340 + C24339 + C24338) * C98471) * C153560 +
            (C126934 * C153600 + (C24337 + C24336 + C24335) * C98471) *
                C70419) *
               C153725) *
              C153796 +
          (((C24355 * C98471 + C128680 * C153600) * C70419 +
            ((C24343 + C24342 + C24341) * C98471 +
             (C26827 + C26828 + C26829) * C153600) *
                C153560) *
               C153725 -
           (((C23994 * C4833 + C26062 + C26062 + C153761 * C4839 +
              C23992 * C4834 + C26063 + C26063 + C153790 * C4840 +
              C23990 * C4835 + C26064 + C26064 + C153809 * C4841) *
                 C153600 +
             (C26829 + C26828 + C26827) * C98471) *
                C153560 +
            ((C26082 + C26081 + C26080) * C153600 + C26819 * C98471) * C70419) *
               C153477) *
              C1509) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C98471 +
             C31295 * C153600) *
                C153819 +
            (C130745 + C130746) * C153815 + C130761 * C153805 +
            C130762 * C153747) *
               C153725 -
           (C132797 * C153747 + C132798 * C153805 +
            (C131615 + C131616) * C153815 +
            (C31296 * C153600 + C31295 * C98471) * C153819) *
               C153477) *
              C153795 +
          (((C131616 + C131615) * C153819 + (C131614 + C131613) * C153815 +
            (C131612 + C131611) * C153805 + (C132799 + C132800) * C153747) *
               C153477 -
           (C131947 * C153747 + C131948 * C153805 +
            (C130748 + C130747) * C153815 + (C130746 + C130745) * C153819) *
               C153725) *
              C153796 +
          ((C130761 * C153819 + C130762 * C153815 +
            (C130752 + C130751) * C153805 + (C131949 + C131950) * C153747) *
               C153725 -
           (((C28234 * C29424 + C29436 + C29436 + C153338 * C29426) * C153600 +
             C29867 * C98471) *
                C153747 +
            (C132800 + C132799) * C153805 + C132797 * C153815 +
            C132798 * C153819) *
               C153477) *
              C1509) *
         C153378) /
            (p * q * std::sqrt(p + q));
    d2ee[142] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
             C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 +
             C23999 + C153761 * C162) *
                C98471 +
            (C48203 + C48204 + C48205) * C153600) *
               C70419 +
           ((C24335 + C24336 + C24337) * C98471 + C126933 * C153600) *
               C153560) *
              C153413 * C1218 -
          ((C26819 * C153600 + (C24340 + C24339 + C24338) * C98471) * C153560 +
           (C126934 * C153600 + (C24337 + C24336 + C24335) * C98471) * C70419) *
              C153413 * C1219 +
          ((C24355 * C98471 + (C25437 + C25436 + C25435) * C153600) * C70419 +
           ((C24343 + C24342 + C24341) * C98471 +
            (C26827 + C26828 + C26829) * C153600) *
               C153560) *
              C153413 * C1220 -
          (((C23994 * C5601 + C26816 + C26816 + C153761 * C5607 +
             C23992 * C5602 + C26817 + C26817 + C153790 * C5608 +
             C23990 * C5603 + C26818 + C26818 + C153809 * C5609) *
                C153600 +
            (C25831 + C25830 + C25829) * C98471) *
               C153560 +
           ((C26829 + C26828 + C26827) * C153600 + C25821 * C98471) * C70419) *
              C153413 * C1221) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
              C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 +
              C23999 + C153761 * C162) *
                 C98471 +
             (C48203 + C48204 + C48205) * C153600) *
                C70419 +
            ((C24335 + C24336 + C24337) * C98471 + C126933 * C153600) *
                C153560) *
               C153413 * C1131 -
           ((C26819 * C153600 + (C24340 + C24339 + C24338) * C98471) * C153560 +
            (C126934 * C153600 + (C24337 + C24336 + C24335) * C98471) *
                C70419) *
               C153413 * C153449) *
              C1133 +
          ((((C24344 + C24345 + C24346) * C98471 + C126935 * C153600) * C70419 +
            ((C24347 + C24348 + C24349) * C98471 +
             (C25444 + C25445 + C25446) * C153600) *
                C153560) *
               C153413 * C153449 -
           ((C126936 * C153600 + (C24346 + C24345 + C24344) * C98471) *
                C153560 +
            ((C48214 + C48213 + C48212) * C153600 +
             (C23994 * C147 + C24012 + C24012 + C153761 * C163 + C23992 * C146 +
              C24013 + C24013 + C153790 * C162 + C23990 * C145 + C24014 +
              C24014 + C153809 * C161) *
                 C98471) *
                C70419) *
               C153413 * C1131) *
              C1134 +
          ((((C23990 * C146 + C24015 + C24015 + C153809 * C162 + C23992 * C147 +
              C24016 + C24016 + C153790 * C163 + C23994 * C148 + C24017 +
              C24017 + C153761 * C164) *
                 C98471 +
             (C48691 + C48692 + C48693) * C153600) *
                C70419 +
            ((C24858 + C24859 + C24860) * C98471 +
             (C126250 + C126251 + C126252) * C153600) *
                C153560) *
               C153413 * C1131 -
           (((C23994 * C1796 + C25082 + C25082 + C153761 * C1806 +
              C23992 * C1797 + C25083 + C25083 + C153790 * C1807 +
              C23990 * C1798 + C25084 + C25084 + C153809 * C1808) *
                 C153600 +
             (C24863 + C24862 + C24861) * C98471) *
                C153560 +
            ((C126252 + C126251 + C126250) * C153600 +
             (C24860 + C24859 + C24858) * C98471) *
                C70419) *
               C153413 * C153449) *
              C1135)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
              C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 +
              C23999 + C153761 * C162) *
                 C98471 +
             (C48203 + C48204 + C48205) * C153600) *
                C70419 +
            ((C24335 + C24336 + C24337) * C98471 + C126933 * C153600) *
                C153560) *
               C493 -
           ((C49600 * C153600 + C126934 * C98471) * C153560 +
            ((C48208 + C48207 + C48206) * C153600 +
             (C48205 + C48204 + C48203) * C98471) *
                C70419) *
               C494 +
           ((C48223 * C98471 + (C48211 + C48210 + C48209) * C153600) * C70419 +
            (C127712 * C98471 + (C49604 + C49605 + C49606) * C153600) *
                C153560) *
               C495) *
              C1131 +
          (((C126933 * C98471 + C127712 * C153600) * C70419 +
            ((C25437 + C25436 + C25435) * C98471 +
             (C26080 + C26081 + C26082) * C153600) *
                C153560) *
               C494 -
           ((C26819 * C153600 + (C24340 + C24339 + C24338) * C98471) * C153560 +
            (C126934 * C153600 + (C24337 + C24336 + C24335) * C98471) *
                C70419) *
               C493 -
           (((C23994 * C6213 + C27412 + C27412 + C153761 * C6225 +
              C23992 * C6214 + C27413 + C27413 + C153790 * C6226 +
              C23990 * C6215 + C27414 + C27414 + C153809 * C6227) *
                 C153600 +
             (C26082 + C26081 + C26080) * C98471) *
                C153560 +
            ((C49606 + C49605 + C49604) * C153600 + C49600 * C98471) * C70419) *
               C495) *
              C153449) *
         C153378) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C98471 +
             C31295 * C153600) *
                C153819 +
            (C130745 + C130746) * C153815 + C130761 * C153805 +
            C130762 * C153747) *
               C153413 * C1131 -
           ((C130751 + C130752) * C153747 + (C130750 + C130749) * C153805 +
            (C130748 + C130747) * C153815 + (C130746 + C130745) * C153819) *
               C153413 * C153449) *
              C1133 +
          (((C130753 + C130754) * C153819 + (C130755 + C130756) * C153815 +
            (C130757 + C130758) * C153805 + (C130759 + C130760) * C153747) *
               C153413 * C153449 -
           (C130763 * C153747 + C130764 * C153805 +
            (C130754 + C130753) * C153815 +
            (C31300 * C153600 +
             (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C98471) *
                C153819) *
               C153413 * C1131) *
              C1134 +
          ((((C28234 * C146 + C28247 + C28247 + C153338 * C162) * C98471 +
             C31779 * C153600) *
                C153819 +
            (C131153 + C131154) * C153815 + (C131155 + C131156) * C153805 +
            (C131157 + C131158) * C153747) *
               C153413 * C1131 -
           (((C28234 * C5601 + C28866 + C28866 + C153338 * C5607) * C153600 +
             C28739 * C98471) *
                C153747 +
            (C131158 + C131157) * C153805 + (C131156 + C131155) * C153815 +
            (C131154 + C131153) * C153819) *
               C153413 * C153449) *
              C1135)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C98471 +
            C31295 * C153600) *
               C153819 +
           (C130745 + C130746) * C153815 + C130761 * C153805 +
           C130762 * C153747) *
              C153413 * C1218 -
          (C131947 * C153747 + C131948 * C153805 +
           (C130748 + C130747) * C153815 + (C130746 + C130745) * C153819) *
              C153413 * C1219 +
          (C130761 * C153819 + C130762 * C153815 +
           (C130752 + C130751) * C153805 + (C131949 + C131950) * C153747) *
              C153413 * C1220 -
          (((C28234 * C29858 + C29864 + C29864 + C153338 * C29860) * C153600 +
            C29301 * C98471) *
               C153747 +
           (C131950 + C131949) * C153805 + C131947 * C153815 +
           C131948 * C153819) *
              C153413 * C1221) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C98471 +
             C31295 * C153600) *
                C153819 +
            (C130745 + C130746) * C153815 + C130761 * C153805 +
            C130762 * C153747) *
               C493 -
           ((C131611 + C131612) * C153747 + (C131613 + C131614) * C153805 +
            (C131615 + C131616) * C153815 +
            (C31296 * C153600 + C31295 * C98471) * C153819) *
               C494 +
           ((C31296 * C98471 + C31299 * C153600) * C153819 +
            (C132145 + C132146) * C153815 + (C132147 + C132148) * C153805 +
            (C132149 + C132150) * C153747) *
               C495) *
              C1131 +
          (((C131616 + C131615) * C153819 + (C131614 + C131613) * C153815 +
            (C131612 + C131611) * C153805 +
            (C29073 * C98471 + C29448 * C153600) * C153747) *
               C494 -
           (C131947 * C153747 + C131948 * C153805 +
            (C130748 + C130747) * C153815 + (C130746 + C130745) * C153819) *
               C493 -
           (((C28234 * C30194 + C30201 + C30201 + C153338 * C30198) * C153600 +
             C29448 * C98471) *
                C153747 +
            (C132150 + C132149) * C153805 + (C132148 + C132147) * C153815 +
            (C132146 + C132145) * C153819) *
               C495) *
              C153449) *
         C153378) /
            (p * q * std::sqrt(p + q));
    d2ee[143] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C23990 * C144 + C23997 + C23997 + C153809 * C160 +
               C23992 * C145 + C23998 + C23998 + C153790 * C161 +
               C23994 * C146 + C23999 + C23999 + C153761 * C162) *
                  C98471 +
              (C48203 + C48204 + C48205) * C153600) *
                 C70419 +
             ((C24335 + C24336 + C24337) * C98471 + C126933 * C153600) *
                 C153560) *
                C153725 -
            ((C49600 * C153600 + C126934 * C98471) * C153560 +
             ((C48208 + C48207 + C48206) * C153600 +
              (C48205 + C48204 + C48203) * C98471) *
                 C70419) *
                C153477) *
               C1131 +
           (((C126933 * C98471 + C127712 * C153600) * C70419 +
             ((C25437 + C25436 + C25435) * C98471 +
              (C26080 + C26081 + C26082) * C153600) *
                 C153560) *
                C153477 -
            ((C26819 * C153600 + (C24340 + C24339 + C24338) * C98471) *
                 C153560 +
             (C126934 * C153600 + (C24337 + C24336 + C24335) * C98471) *
                 C70419) *
                C153725) *
               C153449) *
              C153716 +
          (((((C48212 + C48213 + C48214) * C98471 +
              (C48215 + C48216 + C48217) * C153600) *
                 C70419 +
             (C126935 * C98471 + (C49002 + C49003 + C49004) * C153600) *
                 C153560) *
                C153477 -
            ((C126936 * C153600 + (C24346 + C24345 + C24344) * C98471) *
                 C153560 +
             ((C48214 + C48213 + C48212) * C153600 +
              (C23994 * C147 + C24012 + C24012 + C153761 * C163 +
               C23992 * C146 + C24013 + C24013 + C153790 * C162 +
               C23990 * C145 + C24014 + C24014 + C153809 * C161) *
                  C98471) *
                 C70419) *
                C153725) *
               C1131 +
           ((((C24344 + C24345 + C24346) * C98471 + C126935 * C153600) *
                 C70419 +
             ((C24347 + C24348 + C24349) * C98471 +
              (C25444 + C25445 + C25446) * C153600) *
                 C153560) *
                C153725 -
            (((C23994 * C3330 + C24604 + C24604 + C153761 * C3338 +
               C23992 * C3329 + C24605 + C24605 + C153790 * C3337 +
               C23990 * C3328 + C24606 + C24606 + C153809 * C3336) *
                  C153600 +
              (C25446 + C25445 + C25444) * C98471) *
                 C153560 +
             ((C49004 + C49003 + C49002) * C153600 + C126936 * C98471) *
                 C70419) *
                C153477) *
               C153449) *
              C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C98471 +
              C31295 * C153600) *
                 C153819 +
             (C130745 + C130746) * C153815 + C130761 * C153805 +
             C130762 * C153747) *
                C153725 -
            ((C131611 + C131612) * C153747 + (C131613 + C131614) * C153805 +
             (C131615 + C131616) * C153815 +
             (C31296 * C153600 + C31295 * C98471) * C153819) *
                C153477) *
               C1131 +
           (((C131616 + C131615) * C153819 + (C131614 + C131613) * C153815 +
             (C131612 + C131611) * C153805 +
             (C29073 * C98471 + C29448 * C153600) * C153747) *
                C153477 -
            (C131947 * C153747 + C131948 * C153805 +
             (C130748 + C130747) * C153815 + (C130746 + C130745) * C153819) *
                C153725) *
               C153449) *
              C153716 +
          ((((C31300 * C98471 + C31301 * C153600) * C153819 +
             (C131617 + C131618) * C153815 + (C131619 + C131620) * C153805 +
             (C131621 + C131622) * C153747) *
                C153477 -
            (C130763 * C153747 + C130764 * C153805 +
             (C130754 + C130753) * C153815 +
             (C31300 * C153600 +
              (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C98471) *
                 C153819) *
                C153725) *
               C1131 +
           (((C130753 + C130754) * C153819 + (C130755 + C130756) * C153815 +
             (C130757 + C130758) * C153805 + (C130759 + C130760) * C153747) *
                C153725 -
            (((C28234 * C28571 + C28592 + C28592 + C153338 * C28575) * C153600 +
              C29080 * C98471) *
                 C153747 +
             (C131622 + C131621) * C153805 + (C131620 + C131619) * C153815 +
             (C131618 + C131617) * C153819) *
                C153477) *
               C153449) *
              C153384)) /
            (p * q * std::sqrt(p + q));
    d2ee[144] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
              C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 +
              C23999 + C153761 * C162) *
                 C98471 +
             (C48203 + C48204 + C48205) * C153600) *
                C70419 +
            ((C24335 + C24336 + C24337) * C98471 + C126933 * C153600) *
                C153560) *
               C153413 * C1131 -
           ((C26819 * C153600 + (C24340 + C24339 + C24338) * C98471) * C153560 +
            (C126934 * C153600 + (C24337 + C24336 + C24335) * C98471) *
                C70419) *
               C153413 * C153449) *
              C1133 +
          ((((C24344 + C24345 + C24346) * C98471 + C126935 * C153600) * C70419 +
            ((C24347 + C24348 + C24349) * C98471 +
             (C25444 + C25445 + C25446) * C153600) *
                C153560) *
               C153413 * C153449 -
           ((C126936 * C153600 + (C24346 + C24345 + C24344) * C98471) *
                C153560 +
            ((C48214 + C48213 + C48212) * C153600 +
             (C23994 * C147 + C24012 + C24012 + C153761 * C163 + C23992 * C146 +
              C24013 + C24013 + C153790 * C162 + C23990 * C145 + C24014 +
              C24014 + C153809 * C161) *
                 C98471) *
                C70419) *
               C153413 * C1131) *
              C1134 +
          ((((C23990 * C146 + C24015 + C24015 + C153809 * C162 + C23992 * C147 +
              C24016 + C24016 + C153790 * C163 + C23994 * C148 + C24017 +
              C24017 + C153761 * C164) *
                 C98471 +
             (C48691 + C48692 + C48693) * C153600) *
                C70419 +
            ((C24858 + C24859 + C24860) * C98471 +
             (C126250 + C126251 + C126252) * C153600) *
                C153560) *
               C153413 * C1131 -
           (((C23994 * C1796 + C25082 + C25082 + C153761 * C1806 +
              C23992 * C1797 + C25083 + C25083 + C153790 * C1807 +
              C23990 * C1798 + C25084 + C25084 + C153809 * C1808) *
                 C153600 +
             (C24863 + C24862 + C24861) * C98471) *
                C153560 +
            ((C126252 + C126251 + C126250) * C153600 +
             (C24860 + C24859 + C24858) * C98471) *
                C70419) *
               C153413 * C153449) *
              C1135)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
             C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 +
             C23999 + C153761 * C162) *
                C98471 +
            (C48203 + C48204 + C48205) * C153600) *
               C70419 +
           ((C24335 + C24336 + C24337) * C98471 + C126933 * C153600) *
               C153560) *
              C153413 * C1218 -
          ((C26819 * C153600 + (C24340 + C24339 + C24338) * C98471) * C153560 +
           (C126934 * C153600 + (C24337 + C24336 + C24335) * C98471) * C70419) *
              C153413 * C1219 +
          ((C24355 * C98471 + (C25437 + C25436 + C25435) * C153600) * C70419 +
           ((C24343 + C24342 + C24341) * C98471 +
            (C26827 + C26828 + C26829) * C153600) *
               C153560) *
              C153413 * C1220 -
          (((C23994 * C5601 + C26816 + C26816 + C153761 * C5607 +
             C23992 * C5602 + C26817 + C26817 + C153790 * C5608 +
             C23990 * C5603 + C26818 + C26818 + C153809 * C5609) *
                C153600 +
            (C25831 + C25830 + C25829) * C98471) *
               C153560 +
           ((C26829 + C26828 + C26827) * C153600 + C25821 * C98471) * C70419) *
              C153413 * C1221) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C98471 +
             C31295 * C153600) *
                C153819 +
            (C130745 + C130746) * C153815 + C130761 * C153805 +
            C130762 * C153747) *
               C153413 * C1131 -
           ((C130751 + C130752) * C153747 + (C130750 + C130749) * C153805 +
            (C130748 + C130747) * C153815 + (C130746 + C130745) * C153819) *
               C153413 * C153449) *
              C1133 +
          (((C130753 + C130754) * C153819 + (C130755 + C130756) * C153815 +
            (C130757 + C130758) * C153805 + (C130759 + C130760) * C153747) *
               C153413 * C153449 -
           (C130763 * C153747 + C130764 * C153805 +
            (C130754 + C130753) * C153815 +
            (C31300 * C153600 +
             (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C98471) *
                C153819) *
               C153413 * C1131) *
              C1134 +
          ((((C28234 * C146 + C28247 + C28247 + C153338 * C162) * C98471 +
             C31779 * C153600) *
                C153819 +
            (C131153 + C131154) * C153815 + (C131155 + C131156) * C153805 +
            (C131157 + C131158) * C153747) *
               C153413 * C1131 -
           (((C28234 * C5601 + C28866 + C28866 + C153338 * C5607) * C153600 +
             C28739 * C98471) *
                C153747 +
            (C131158 + C131157) * C153805 + (C131156 + C131155) * C153815 +
            (C131154 + C131153) * C153819) *
               C153413 * C153449) *
              C1135)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C98471 +
            C31295 * C153600) *
               C153819 +
           (C130745 + C130746) * C153815 + C130761 * C153805 +
           C130762 * C153747) *
              C153413 * C1218 -
          (C131947 * C153747 + C131948 * C153805 +
           (C130748 + C130747) * C153815 + (C130746 + C130745) * C153819) *
              C153413 * C1219 +
          (C130761 * C153819 + C130762 * C153815 +
           (C130752 + C130751) * C153805 + (C131949 + C131950) * C153747) *
              C153413 * C1220 -
          (((C28234 * C29858 + C29864 + C29864 + C153338 * C29860) * C153600 +
            C29301 * C98471) *
               C153747 +
           (C131950 + C131949) * C153805 + C131947 * C153815 +
           C131948 * C153819) *
              C153413 * C1221) *
         C153378) /
            (p * q * std::sqrt(p + q));
    d2ee[145] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C23990 * C144 + C23997 + C23997 + C153809 * C160 +
               C23992 * C145 + C23998 + C23998 + C153790 * C161 +
               C23994 * C146 + C23999 + C23999 + C153761 * C162) *
                  C98471 +
              (C48203 + C48204 + C48205) * C153600) *
                 C70419 +
             ((C24335 + C24336 + C24337) * C98471 + C126933 * C153600) *
                 C153560) *
                C1938 -
            ((C49600 * C153600 + C126934 * C98471) * C153560 +
             ((C48208 + C48207 + C48206) * C153600 +
              (C48205 + C48204 + C48203) * C98471) *
                 C70419) *
                C153477) *
               C153724 +
           (((C126933 * C98471 + C127712 * C153600) * C70419 +
             (C128680 * C98471 + (C26080 + C26081 + C26082) * C153600) *
                 C153560) *
                C153477 -
            ((C26819 * C153600 + (C24340 + C24339 + C24338) * C98471) *
                 C153560 +
             (C126934 * C153600 + (C24337 + C24336 + C24335) * C98471) *
                 C70419) *
                C1938) *
               C153449) *
              C153716 +
          (((((C48212 + C48213 + C48214) * C98471 +
              (C48215 + C48216 + C48217) * C153600) *
                 C70419 +
             (C126935 * C98471 + (C49002 + C49003 + C49004) * C153600) *
                 C153560) *
                C153477 -
            ((C126936 * C153600 + (C24346 + C24345 + C24344) * C98471) *
                 C153560 +
             ((C48214 + C48213 + C48212) * C153600 +
              (C23994 * C147 + C24012 + C24012 + C153761 * C163 +
               C23992 * C146 + C24013 + C24013 + C153790 * C162 +
               C23990 * C145 + C24014 + C24014 + C153809 * C161) *
                  C98471) *
                 C70419) *
                C1938) *
               C153724 +
           ((((C24344 + C24345 + C24346) * C98471 + C126935 * C153600) *
                 C70419 +
             ((C24347 + C24348 + C24349) * C98471 +
              (C25444 + C25445 + C25446) * C153600) *
                 C153560) *
                C1938 -
            (((C23994 * C3330 + C24604 + C24604 + C153761 * C3338 +
               C23992 * C3329 + C24605 + C24605 + C153790 * C3337 +
               C23990 * C3328 + C24606 + C24606 + C153809 * C3336) *
                  C153600 +
              (C25446 + C25445 + C25444) * C98471) *
                 C153560 +
             ((C49004 + C49003 + C49002) * C153600 + C126936 * C98471) *
                 C70419) *
                C153477) *
               C153449) *
              C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C98471 +
              C31295 * C153600) *
                 C153819 +
             (C130745 + C130746) * C153815 + C130761 * C153805 +
             C130762 * C153747) *
                C1938 -
            (C132797 * C153747 + C132798 * C153805 +
             (C131615 + C131616) * C153815 +
             (C31296 * C153600 + C31295 * C98471) * C153819) *
                C153477) *
               C153724 +
           (((C131616 + C131615) * C153819 + (C131614 + C131613) * C153815 +
             (C131612 + C131611) * C153805 + (C132799 + C132800) * C153747) *
                C153477 -
            (C131947 * C153747 + C131948 * C153805 +
             (C130748 + C130747) * C153815 + (C130746 + C130745) * C153819) *
                C1938) *
               C153449) *
              C153716 +
          ((((C31300 * C98471 + C31301 * C153600) * C153819 +
             (C131617 + C131618) * C153815 + (C131619 + C131620) * C153805 +
             (C131621 + C131622) * C153747) *
                C153477 -
            (C130763 * C153747 + C130764 * C153805 +
             (C130754 + C130753) * C153815 +
             (C31300 * C153600 +
              (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C98471) *
                 C153819) *
                C1938) *
               C153724 +
           (((C130753 + C130754) * C153819 + (C130755 + C130756) * C153815 +
             (C130757 + C130758) * C153805 + (C130759 + C130760) * C153747) *
                C1938 -
            (((C28234 * C28571 + C28592 + C28592 + C153338 * C28575) * C153600 +
              C29080 * C98471) *
                 C153747 +
             (C131622 + C131621) * C153805 + (C131620 + C131619) * C153815 +
             (C131618 + C131617) * C153819) *
                C153477) *
               C153449) *
              C153384)) /
            (p * q * std::sqrt(p + q));
    d2ee[146] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
              C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 +
              C23999 + C153761 * C162) *
                 C98471 +
             (C48203 + C48204 + C48205) * C153600) *
                C70419 +
            ((C24335 + C24336 + C24337) * C98471 + C126933 * C153600) *
                C153560) *
               C153797 -
           ((C49600 * C153600 + C126934 * C98471) * C153560 +
            ((C48208 + C48207 + C48206) * C153600 +
             (C48205 + C48204 + C48203) * C98471) *
                C70419) *
               C153798 +
           ((C48223 * C98471 + (C48211 + C48210 + C48209) * C153600) * C70419 +
            (C127712 * C98471 + (C49604 + C49605 + C49606) * C153600) *
                C153560) *
               C2454) *
              C153724 +
          (((C126933 * C98471 + C127712 * C153600) * C70419 +
            (C128680 * C98471 + (C26080 + C26081 + C26082) * C153600) *
                C153560) *
               C153798 -
           ((C26819 * C153600 + (C24340 + C24339 + C24338) * C98471) * C153560 +
            (C126934 * C153600 + (C24337 + C24336 + C24335) * C98471) *
                C70419) *
               C153797 -
           (((C23994 * C6213 + C27412 + C27412 + C153761 * C6225 +
              C23992 * C6214 + C27413 + C27413 + C153790 * C6226 +
              C23990 * C6215 + C27414 + C27414 + C153809 * C6227) *
                 C153600 +
             (C26082 + C26081 + C26080) * C98471) *
                C153560 +
            ((C49606 + C49605 + C49604) * C153600 + C49600 * C98471) * C70419) *
               C2454) *
              C153449) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C98471 +
             C31295 * C153600) *
                C153819 +
            (C130745 + C130746) * C153815 + C130761 * C153805 +
            C130762 * C153747) *
               C153797 -
           (C132797 * C153747 + C132798 * C153805 +
            (C131615 + C131616) * C153815 +
            (C31296 * C153600 + C31295 * C98471) * C153819) *
               C153798 +
           ((C31296 * C98471 + C31299 * C153600) * C153819 +
            (C132145 + C132146) * C153815 + (C132147 + C132148) * C153805 +
            (C132149 + C132150) * C153747) *
               C2454) *
              C153724 +
          (((C131616 + C131615) * C153819 + (C131614 + C131613) * C153815 +
            (C131612 + C131611) * C153805 + (C132799 + C132800) * C153747) *
               C153798 -
           (C131947 * C153747 + C131948 * C153805 +
            (C130748 + C130747) * C153815 + (C130746 + C130745) * C153819) *
               C153797 -
           (((C28234 * C30194 + C30201 + C30201 + C153338 * C30198) * C153600 +
             C29448 * C98471) *
                C153747 +
            (C132150 + C132149) * C153805 + (C132148 + C132147) * C153815 +
            (C132146 + C132145) * C153819) *
               C2454) *
              C153449) *
         C153378) /
            (p * q * std::sqrt(p + q));
    d2ee[147] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
              C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 +
              C23999 + C153761 * C162) *
                 C98471 +
             (C48203 + C48204 + C48205) * C153600) *
                C70419 +
            ((C24335 + C24336 + C24337) * C98471 + C126933 * C153600) *
                C153560) *
               C1938 -
           ((C49600 * C153600 + C126934 * C98471) * C153560 +
            ((C48208 + C48207 + C48206) * C153600 +
             (C48205 + C48204 + C48203) * C98471) *
                C70419) *
               C153477) *
              C310 +
          (((C126933 * C98471 + C127712 * C153600) * C70419 +
            (C128680 * C98471 + (C26080 + C26081 + C26082) * C153600) *
                C153560) *
               C153477 -
           ((C26819 * C153600 + (C24340 + C24339 + C24338) * C98471) * C153560 +
            (C126934 * C153600 + (C24337 + C24336 + C24335) * C98471) *
                C70419) *
               C1938) *
              C311 +
          (((C24355 * C98471 + C128680 * C153600) * C70419 +
            ((C24343 + C24342 + C24341) * C98471 +
             (C26827 + C26828 + C26829) * C153600) *
                C153560) *
               C1938 -
           (((C23994 * C4833 + C26062 + C26062 + C153761 * C4839 +
              C23992 * C4834 + C26063 + C26063 + C153790 * C4840 +
              C23990 * C4835 + C26064 + C26064 + C153809 * C4841) *
                 C153600 +
             (C26829 + C26828 + C26827) * C98471) *
                C153560 +
            ((C26082 + C26081 + C26080) * C153600 + C26819 * C98471) * C70419) *
               C153477) *
              C312) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
              C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 +
              C23999 + C153761 * C162) *
                 C98471 +
             (C48203 + C48204 + C48205) * C153600) *
                C70419 +
            ((C24335 + C24336 + C24337) * C98471 + C126933 * C153600) *
                C153560) *
               C1938 -
           ((C49600 * C153600 + C126934 * C98471) * C153560 +
            ((C48208 + C48207 + C48206) * C153600 +
             (C48205 + C48204 + C48203) * C98471) *
                C70419) *
               C153477) *
              C153397 * C1133 +
          ((((C48212 + C48213 + C48214) * C98471 +
             (C48215 + C48216 + C48217) * C153600) *
                C70419 +
            (C126935 * C98471 + (C49002 + C49003 + C49004) * C153600) *
                C153560) *
               C153477 -
           ((C126936 * C153600 + (C24346 + C24345 + C24344) * C98471) *
                C153560 +
            ((C48214 + C48213 + C48212) * C153600 +
             (C23994 * C147 + C24012 + C24012 + C153761 * C163 + C23992 * C146 +
              C24013 + C24013 + C153790 * C162 + C23990 * C145 + C24014 +
              C24014 + C153809 * C161) *
                 C98471) *
                C70419) *
               C1938) *
              C153397 * C1134 +
          ((((C23990 * C146 + C24015 + C24015 + C153809 * C162 + C23992 * C147 +
              C24016 + C24016 + C153790 * C163 + C23994 * C148 + C24017 +
              C24017 + C153761 * C164) *
                 C98471 +
             (C48691 + C48692 + C48693) * C153600) *
                C70419 +
            ((C24858 + C24859 + C24860) * C98471 +
             (C126250 + C126251 + C126252) * C153600) *
                C153560) *
               C1938 -
           (((C23994 * C1365 + C48443 + C48443 + C153761 * C1375 +
              C23992 * C1366 + C48444 + C48444 + C153790 * C1376 +
              C23990 * C1367 + C48445 + C48445 + C153809 * C1377) *
                 C153600 +
             (C126252 + C126251 + C126250) * C98471) *
                C153560 +
            ((C48696 + C48695 + C48694) * C153600 +
             (C48693 + C48692 + C48691) * C98471) *
                C70419) *
               C153477) *
              C153397 * C1135)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
             C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 +
             C23999 + C153761 * C162) *
                C98471 +
            (C48203 + C48204 + C48205) * C153600) *
               C70419 +
           ((C24335 + C24336 + C24337) * C98471 + C126933 * C153600) *
               C153560) *
              C2144 -
          ((C49600 * C153600 + C126934 * C98471) * C153560 +
           ((C48208 + C48207 + C48206) * C153600 +
            (C48205 + C48204 + C48203) * C98471) *
               C70419) *
              C2145 +
          ((C48223 * C98471 + (C48211 + C48210 + C48209) * C153600) * C70419 +
           (C127712 * C98471 + (C49604 + C49605 + C49606) * C153600) *
               C153560) *
              C2146 -
          (((C23994 * C9040 + C49594 + C49594 + C153761 * C9046 +
             C23992 * C9041 + C49595 + C49595 + C153790 * C9047 +
             C23990 * C9042 + C49596 + C49596 + C153809 * C9048) *
                C153600 +
            (C49606 + C49605 + C49604) * C98471) *
               C153560 +
           ((C50934 + C50933 + C50932) * C153600 + C50925 * C98471) * C70419) *
              C2147) *
         C153397 * C153378) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C98471 +
             C31295 * C153600) *
                C153819 +
            (C130745 + C130746) * C153815 + C130761 * C153805 +
            C130762 * C153747) *
               C1938 -
           (C132797 * C153747 + C132798 * C153805 +
            (C131615 + C131616) * C153815 +
            (C31296 * C153600 + C31295 * C98471) * C153819) *
               C153477) *
              C153397 * C1133 +
          (((C31300 * C98471 + C31301 * C153600) * C153819 +
            (C131617 + C131618) * C153815 + (C131619 + C131620) * C153805 +
            (C131621 + C131622) * C153747) *
               C153477 -
           (C130763 * C153747 + C130764 * C153805 +
            (C130754 + C130753) * C153815 +
            (C31300 * C153600 +
             (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C98471) *
                C153819) *
               C1938) *
              C153397 * C1134 +
          ((((C28234 * C146 + C28247 + C28247 + C153338 * C162) * C98471 +
             C31779 * C153600) *
                C153819 +
            (C131153 + C131154) * C153815 + (C131155 + C131156) * C153805 +
            (C131157 + C131158) * C153747) *
               C1938 -
           (((C28234 * C4833 + C31533 + C31533 + C153338 * C4839) * C153600 +
             C44720 * C98471) *
                C153747 +
            (C31545 * C153600 + C31544 * C98471) * C153805 +
            (C31543 * C153600 + C31542 * C98471) * C153815 +
            (C31780 * C153600 + C31779 * C98471) * C153819) *
               C153477) *
              C153397 * C1135)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C98471 +
             C31295 * C153600) *
                C153819 +
            (C130745 + C130746) * C153815 + C130761 * C153805 +
            C130762 * C153747) *
               C1938 -
           (C132797 * C153747 + C132798 * C153805 +
            (C131615 + C131616) * C153815 +
            (C31296 * C153600 + C31295 * C98471) * C153819) *
               C153477) *
              C310 +
          (((C131616 + C131615) * C153819 + (C131614 + C131613) * C153815 +
            (C131612 + C131611) * C153805 + (C132799 + C132800) * C153747) *
               C153477 -
           (C131947 * C153747 + C131948 * C153805 +
            (C130748 + C130747) * C153815 + (C130746 + C130745) * C153819) *
               C1938) *
              C311 +
          ((C130761 * C153819 + C130762 * C153815 +
            (C130752 + C130751) * C153805 + (C131949 + C131950) * C153747) *
               C1938 -
           (((C28234 * C29424 + C29436 + C29436 + C153338 * C29426) * C153600 +
             C29867 * C98471) *
                C153747 +
            (C132800 + C132799) * C153805 + C132797 * C153815 +
            C132798 * C153819) *
               C153477) *
              C312) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C98471 +
            C31295 * C153600) *
               C153819 +
           (C130745 + C130746) * C153815 + C130761 * C153805 +
           C130762 * C153747) *
              C2144 -
          (C132797 * C153747 + C132798 * C153805 +
           (C131615 + C131616) * C153815 +
           (C31296 * C153600 + C31295 * C98471) * C153819) *
              C2145 +
          ((C31296 * C98471 + C31299 * C153600) * C153819 +
           (C132145 + C132146) * C153815 + (C132147 + C132148) * C153805 +
           (C132149 + C132150) * C153747) *
              C2146 -
          (((C28234 * C32673 + C32687 + C32687 + C153338 * C32675) * C153600 +
            C32696 * C98471) *
               C153747 +
           (C32695 * C153600 + C31297 * C98471) * C153805 +
           (C32694 * C153600 + C31298 * C98471) * C153815 +
           (C34025 * C153600 + C31299 * C98471) * C153819) *
              C2147) *
         C153397 * C153378) /
            (p * q * std::sqrt(p + q));
    d2ee[148] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
              C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 +
              C23999 + C153761 * C162) *
                 C98471 +
             (C48203 + C48204 + C48205) * C153600) *
                C70419 +
            ((C24335 + C24336 + C24337) * C98471 + C126933 * C153600) *
                C153560) *
               C153797 -
           ((C49600 * C153600 + C126934 * C98471) * C153560 +
            ((C48208 + C48207 + C48206) * C153600 +
             (C48205 + C48204 + C48203) * C98471) *
                C70419) *
               C153798 +
           ((C48223 * C98471 + (C48211 + C48210 + C48209) * C153600) * C70419 +
            (C127712 * C98471 + (C49604 + C49605 + C49606) * C153600) *
                C153560) *
               C2454) *
              C153397 * C153716 +
          ((((C48212 + C48213 + C48214) * C98471 +
             (C48215 + C48216 + C48217) * C153600) *
                C70419 +
            (C126935 * C98471 + (C49002 + C49003 + C49004) * C153600) *
                C153560) *
               C153798 -
           ((C126936 * C153600 + (C24346 + C24345 + C24344) * C98471) *
                C153560 +
            ((C48214 + C48213 + C48212) * C153600 +
             (C23994 * C147 + C24012 + C24012 + C153761 * C163 + C23992 * C146 +
              C24013 + C24013 + C153790 * C162 + C23990 * C145 + C24014 +
              C24014 + C153809 * C161) *
                 C98471) *
                C70419) *
               C153797 -
           (((C23994 * C8437 + C48993 + C48993 + C153761 * C8439 +
              C23992 * C6216 + C48994 + C48994 + C153790 * C6228 +
              C23990 * C6217 + C48995 + C48995 + C153809 * C6229) *
                 C153600 +
             (C49004 + C49003 + C49002) * C98471) *
                C153560 +
            ((C48220 + C48219 + C48218) * C153600 + C48224 * C98471) * C70419) *
               C2454) *
              C153397 * C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C98471 +
             C31295 * C153600) *
                C153819 +
            (C130745 + C130746) * C153815 + C130761 * C153805 +
            C130762 * C153747) *
               C153797 -
           (C132797 * C153747 + C132798 * C153805 +
            (C131615 + C131616) * C153815 +
            (C31296 * C153600 + C31295 * C98471) * C153819) *
               C153798 +
           ((C31296 * C98471 + C31299 * C153600) * C153819 +
            (C132145 + C132146) * C153815 + (C132147 + C132148) * C153805 +
            (C132149 + C132150) * C153747) *
               C2454) *
              C153397 * C153716 +
          (((C31300 * C98471 + C31301 * C153600) * C153819 +
            (C131617 + C131618) * C153815 + (C131619 + C131620) * C153805 +
            (C131621 + C131622) * C153747) *
               C153798 -
           (C130763 * C153747 + C130764 * C153805 +
            (C130754 + C130753) * C153815 +
            (C31300 * C153600 +
             (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C98471) *
                C153819) *
               C153797 -
           (((C28234 * C32070 + C32086 + C32086 + C153338 * C32072) * C153600 +
             C31017 * C98471) *
                C153747 +
            (C31304 * C153600 + C31016 * C98471) * C153805 +
            (C31303 * C153600 + C31015 * C98471) * C153815 +
            (C31302 * C153600 + C31301 * C98471) * C153819) *
               C2454) *
              C153397 * C153384)) /
            (p * q * std::sqrt(p + q));
    d2ee[149] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
              C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 +
              C23999 + C153761 * C162) *
                 C98471 +
             (C48203 + C48204 + C48205) * C153600) *
                C70419 +
            ((C24335 + C24336 + C24337) * C98471 + C126933 * C153600) *
                C153560) *
               C1938 -
           ((C49600 * C153600 + C126934 * C98471) * C153560 +
            ((C48208 + C48207 + C48206) * C153600 +
             (C48205 + C48204 + C48203) * C98471) *
                C70419) *
               C153477) *
              C153397 * C1133 +
          ((((C48212 + C48213 + C48214) * C98471 +
             (C48215 + C48216 + C48217) * C153600) *
                C70419 +
            (C126935 * C98471 + (C49002 + C49003 + C49004) * C153600) *
                C153560) *
               C153477 -
           ((C126936 * C153600 + (C24346 + C24345 + C24344) * C98471) *
                C153560 +
            ((C48214 + C48213 + C48212) * C153600 +
             (C23994 * C147 + C24012 + C24012 + C153761 * C163 + C23992 * C146 +
              C24013 + C24013 + C153790 * C162 + C23990 * C145 + C24014 +
              C24014 + C153809 * C161) *
                 C98471) *
                C70419) *
               C1938) *
              C153397 * C1134 +
          ((((C23990 * C146 + C24015 + C24015 + C153809 * C162 + C23992 * C147 +
              C24016 + C24016 + C153790 * C163 + C23994 * C148 + C24017 +
              C24017 + C153761 * C164) *
                 C98471 +
             (C48691 + C48692 + C48693) * C153600) *
                C70419 +
            ((C24858 + C24859 + C24860) * C98471 +
             (C126250 + C126251 + C126252) * C153600) *
                C153560) *
               C1938 -
           (((C23994 * C1365 + C48443 + C48443 + C153761 * C1375 +
              C23992 * C1366 + C48444 + C48444 + C153790 * C1376 +
              C23990 * C1367 + C48445 + C48445 + C153809 * C1377) *
                 C153600 +
             (C126252 + C126251 + C126250) * C98471) *
                C153560 +
            ((C48696 + C48695 + C48694) * C153600 +
             (C48693 + C48692 + C48691) * C98471) *
                C70419) *
               C153477) *
              C153397 * C1135)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
              C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 +
              C23999 + C153761 * C162) *
                 C98471 +
             (C48203 + C48204 + C48205) * C153600) *
                C70419 +
            ((C24335 + C24336 + C24337) * C98471 + C126933 * C153600) *
                C153560) *
               C1938 -
           ((C49600 * C153600 + C126934 * C98471) * C153560 +
            ((C48208 + C48207 + C48206) * C153600 +
             (C48205 + C48204 + C48203) * C98471) *
                C70419) *
               C153477) *
              C310 +
          (((C126933 * C98471 + C127712 * C153600) * C70419 +
            (C128680 * C98471 + (C26080 + C26081 + C26082) * C153600) *
                C153560) *
               C153477 -
           ((C26819 * C153600 + (C24340 + C24339 + C24338) * C98471) * C153560 +
            (C126934 * C153600 + (C24337 + C24336 + C24335) * C98471) *
                C70419) *
               C1938) *
              C311 +
          (((C24355 * C98471 + C128680 * C153600) * C70419 +
            ((C24343 + C24342 + C24341) * C98471 +
             (C26827 + C26828 + C26829) * C153600) *
                C153560) *
               C1938 -
           (((C23994 * C4833 + C26062 + C26062 + C153761 * C4839 +
              C23992 * C4834 + C26063 + C26063 + C153790 * C4840 +
              C23990 * C4835 + C26064 + C26064 + C153809 * C4841) *
                 C153600 +
             (C26829 + C26828 + C26827) * C98471) *
                C153560 +
            ((C26082 + C26081 + C26080) * C153600 + C26819 * C98471) * C70419) *
               C153477) *
              C312) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C98471 +
             C31295 * C153600) *
                C153819 +
            (C130745 + C130746) * C153815 + C130761 * C153805 +
            C130762 * C153747) *
               C1938 -
           (C132797 * C153747 + C132798 * C153805 +
            (C131615 + C131616) * C153815 +
            (C31296 * C153600 + C31295 * C98471) * C153819) *
               C153477) *
              C153397 * C1133 +
          (((C31300 * C98471 + C31301 * C153600) * C153819 +
            (C131617 + C131618) * C153815 + (C131619 + C131620) * C153805 +
            (C131621 + C131622) * C153747) *
               C153477 -
           (C130763 * C153747 + C130764 * C153805 +
            (C130754 + C130753) * C153815 +
            (C31300 * C153600 +
             (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C98471) *
                C153819) *
               C1938) *
              C153397 * C1134 +
          ((((C28234 * C146 + C28247 + C28247 + C153338 * C162) * C98471 +
             C31779 * C153600) *
                C153819 +
            (C131153 + C131154) * C153815 + (C131155 + C131156) * C153805 +
            (C131157 + C131158) * C153747) *
               C1938 -
           (((C28234 * C4833 + C31533 + C31533 + C153338 * C4839) * C153600 +
             C44720 * C98471) *
                C153747 +
            (C31545 * C153600 + C31544 * C98471) * C153805 +
            (C31543 * C153600 + C31542 * C98471) * C153815 +
            (C31780 * C153600 + C31779 * C98471) * C153819) *
               C153477) *
              C153397 * C1135)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C98471 +
             C31295 * C153600) *
                C153819 +
            (C130745 + C130746) * C153815 + C130761 * C153805 +
            C130762 * C153747) *
               C1938 -
           (C132797 * C153747 + C132798 * C153805 +
            (C131615 + C131616) * C153815 +
            (C31296 * C153600 + C31295 * C98471) * C153819) *
               C153477) *
              C310 +
          (((C131616 + C131615) * C153819 + (C131614 + C131613) * C153815 +
            (C131612 + C131611) * C153805 + (C132799 + C132800) * C153747) *
               C153477 -
           (C131947 * C153747 + C131948 * C153805 +
            (C130748 + C130747) * C153815 + (C130746 + C130745) * C153819) *
               C1938) *
              C311 +
          ((C130761 * C153819 + C130762 * C153815 +
            (C130752 + C130751) * C153805 + (C131949 + C131950) * C153747) *
               C1938 -
           (((C28234 * C29424 + C29436 + C29436 + C153338 * C29426) * C153600 +
             C29867 * C98471) *
                C153747 +
            (C132800 + C132799) * C153805 + C132797 * C153815 +
            C132798 * C153819) *
               C153477) *
              C312) *
         C153378) /
            (p * q * std::sqrt(p + q));
    d2ee[150] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C34887 * C144 + C34892 + C34892 + C153705 * C160 + C34889 * C145 +
             C34893 + C34893 + C153348 * C161) *
                C153513 * C34883 +
            (C35190 + C35191) * C153513 * C34884 + C35210 * C34885 +
            C35211 * C153747) *
               C153413 * C153724 -
           ((C35196 + C35197) * C153513 * C153747 +
            (C35195 + C35194) * C153513 * C34885 +
            (C35193 + C35192) * C153513 * C34884 +
            (C35191 + C35190) * C153513 * C34883) *
               C153413 * C153449) *
              C153793 +
          (((C35198 + C35199) * C153513 * C34883 +
            (C35200 + C35201) * C153513 * C34884 +
            (C35202 + C35203) * C153513 * C34885 +
            (C35204 + C35205) * C153513 * C153747) *
               C153413 * C153449 -
           (C35212 * C153747 + C35213 * C34885 +
            (C35199 + C35198) * C153513 * C34884 +
            (C34889 * C146 + C34906 + C34906 + C153348 * C162 + C34887 * C145 +
             C34907 + C34907 + C153705 * C161) *
                C153513 * C34883) *
               C153413 * C153724) *
              C153794 +
          (((C34887 * C146 + C34908 + C34908 + C153705 * C162 + C34889 * C147 +
             C34909 + C34909 + C153348 * C163) *
                C153513 * C34883 +
            (C35660 + C35661) * C153513 * C34884 +
            (C35662 + C35663) * C153513 * C34885 +
            (C35664 + C35665) * C153513 * C153747) *
               C153413 * C153724 -
           ((C34889 * C2992 + C35646 + C35646 + C153348 * C3000 +
             C34887 * C2991 + C35647 + C35647 + C153705 * C2999) *
                C153513 * C153747 +
            (C35665 + C35664) * C153513 * C34885 +
            (C35663 + C35662) * C153513 * C34884 +
            (C35661 + C35660) * C153513 * C34883) *
               C153413 * C153449) *
              C678)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C11268 * C144 + C11277 + C11277 + C11262 * C160 + C11270 * C145 +
             C11278 + C11278 + C11263 * C161 + C11272 * C146 + C11279 + C11279 +
             C11264 * C162 + C11274 * C147 + C11280 + C11280 + C153738 * C163) *
                C153513 * C153739 +
            (C11583 + C11584 + C11585 + C11586) * C153513 * C153560) *
               C153413 * C153724 -
           ((C11587 + C11588 + C11589 + C11590) * C153513 * C153560 +
            (C11586 + C11585 + C11584 + C11583) * C153513 * C153739) *
               C153413 * C153449) *
              C153793 +
          (((C11591 + C11592 + C11593 + C11594) * C153513 * C153739 +
            (C11595 + C11596 + C11597 + C11598) * C153513 * C153560) *
               C153413 * C153449 -
           ((C11594 + C11593 + C11592 + C11591) * C153513 * C153560 +
            (C11274 * C148 + C11289 + C11289 + C153738 * C164 + C11272 * C147 +
             C11290 + C11290 + C11264 * C163 + C11270 * C146 + C11291 + C11291 +
             C11263 * C162 + C11268 * C145 + C11292 + C11292 + C11262 * C161) *
                C153513 * C153739) *
               C153413 * C153724) *
              C153794 +
          (((C11268 * C146 + C11293 + C11293 + C11262 * C162 + C11270 * C147 +
             C11294 + C11294 + C11263 * C163 + C11272 * C148 + C11295 + C11295 +
             C11264 * C164 + C11274 * C149 + C11296 + C11296 + C153738 * C165) *
                C153513 * C153739 +
            (C12039 + C12040 + C12041 + C12042) * C153513 * C153560) *
               C153413 * C153724 -
           ((C11274 * C326 + C12027 + C12027 + C153738 * C350 + C11272 * C324 +
             C12028 + C12028 + C11264 * C348 + C11270 * C323 + C12029 + C12029 +
             C11263 * C347 + C11268 * C322 + C12030 + C12030 + C11262 * C346) *
                C153513 * C153560 +
            (C12042 + C12041 + C12040 + C12039) * C153513 * C153739) *
               C153413 * C153449) *
              C678)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C34887 * C144 + C34892 + C34892 + C153705 * C160 + C34889 * C145 +
              C34893 + C34893 + C153348 * C161) *
                 C47673 +
             (C39432 + C39433) * C47674 + C58686 * C153777) *
                C153739 +
            ((C35190 + C35191) * C47673 + C40446 * C47674 + C41230 * C153777) *
                C153560) *
               C153413 * C153724 -
           ((C41228 * C153777 + C37403 * C47674 + (C35193 + C35192) * C47673) *
                C153560 +
            (C41229 * C153777 + C40447 * C47674 + (C35191 + C35190) * C47673) *
                C153739) *
               C153413 * C153449) *
              C153793 +
          ((((C35198 + C35199) * C47673 + C40448 * C47674 +
             (C39440 + C39441) * C153777) *
                C153739 +
            ((C35200 + C35201) * C47673 + C40449 * C47674 +
             (C39442 + C39443) * C153777) *
                C153560) *
               C153413 * C153449 -
           ((C58695 * C153777 + C40450 * C47674 + (C35199 + C35198) * C47673) *
                C153560 +
            (C58696 * C153777 + (C39437 + C39436) * C47674 +
             (C34889 * C146 + C34906 + C34906 + C153348 * C162 + C34887 * C145 +
              C34907 + C34907 + C153705 * C161) *
                 C47673) *
                C153739) *
               C153413 * C153724) *
              C153794 +
          ((((C34887 * C146 + C34908 + C34908 + C153705 * C162 + C34889 * C147 +
              C34909 + C34909 + C153348 * C163) *
                 C47673 +
             (C40058 + C40059) * C47674 +
             (C34887 * C503 + C40053 + C40053 + C153705 * C527 + C34889 * C504 +
              C40052 + C40052 + C153348 * C528) *
                 C153777) *
                C153739 +
            ((C35660 + C35661) * C47673 + (C39750 + C39751) * C47674 +
             (C59011 + C59012) * C153777) *
                C153560) *
               C153413 * C153724 -
           (((C34889 * C3330 + C40048 + C40048 + C153348 * C3338 +
              C34887 * C3329 + C40049 + C40049 + C153705 * C3337) *
                 C153777 +
             (C39753 + C39752) * C47674 + (C35663 + C35662) * C47673) *
                C153560 +
            ((C59012 + C59011) * C153777 + (C39751 + C39750) * C47674 +
             (C35661 + C35660) * C47673) *
                C153739) *
               C153413 * C153449) *
              C678)) /
            (p * q * std::sqrt(p + q));
    d2ee[151] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C34887 * C144 + C34892 + C34892 + C153705 * C160 + C34889 * C145 +
              C34893 + C34893 + C153348 * C161) *
                 C153513 * C34883 +
             (C35190 + C35191) * C153513 * C34884 + C35210 * C34885 +
             C35211 * C153747) *
                C153725 -
            ((C36178 + C36179) * C153513 * C153747 +
             (C36180 + C36181) * C153513 * C34885 +
             (C36182 + C36183) * C153513 * C34884 +
             (C34889 * C499 + C35414 + C35414 + C153348 * C523 + C34887 * C500 +
              C35415 + C35415 + C153705 * C524) *
                 C153513 * C34883) *
                C153477) *
               C153724 +
           (((C36183 + C36182) * C153513 * C34883 +
             (C36181 + C36180) * C153513 * C34884 +
             (C36179 + C36178) * C153513 * C34885 +
             (C34887 * C5603 + C36138 + C36138 + C153705 * C5609 +
              C34889 * C5602 + C36139 + C36139 + C153348 * C5608) *
                 C153513 * C153747) *
                C153477 -
            ((C35196 + C35197) * C153513 * C153747 +
             (C35195 + C35194) * C153513 * C34885 +
             (C35193 + C35192) * C153513 * C34884 +
             (C35191 + C35190) * C153513 * C34883) *
                C153725) *
               C153449) *
              C313 +
          ((((C34887 * C499 + C35424 + C35424 + C153705 * C523 + C34889 * C498 +
              C35425 + C35425 + C153348 * C522) *
                 C153513 * C34883 +
             (C36184 + C36185) * C153513 * C34884 +
             (C36186 + C36187) * C153513 * C34885 +
             (C36188 + C36189) * C153513 * C153747) *
                C153477 -
            (C35212 * C153747 + C35213 * C34885 +
             (C35199 + C35198) * C153513 * C34884 +
             (C34889 * C146 + C34906 + C34906 + C153348 * C162 + C34887 * C145 +
              C34907 + C34907 + C153705 * C161) *
                 C153513 * C34883) *
                C153725) *
               C153724 +
           (((C35198 + C35199) * C153513 * C34883 +
             (C35200 + C35201) * C153513 * C34884 +
             (C35202 + C35203) * C153513 * C34885 +
             (C35204 + C35205) * C153513 * C153747) *
                C153725 -
            ((C34889 * C5601 + C36152 + C36152 + C153348 * C5607 +
              C34887 * C5602 + C36153 + C36153 + C153705 * C5608) *
                 C153513 * C153747 +
             (C36189 + C36188) * C153513 * C34885 +
             (C36187 + C36186) * C153513 * C34884 +
             (C36185 + C36184) * C153513 * C34883) *
                C153477) *
               C153449) *
              C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C11268 * C144 + C11277 + C11277 + C11262 * C160 + C11270 * C145 +
              C11278 + C11278 + C11263 * C161 + C11272 * C146 + C11279 +
              C11279 + C11264 * C162 + C11274 * C147 + C11280 + C11280 +
              C153738 * C163) *
                 C153513 * C153739 +
             (C11583 + C11584 + C11585 + C11586) * C153513 * C153560) *
                C153725 -
            ((C12543 + C12544 + C12545 + C12546) * C153513 * C153560 +
             (C11274 * C497 + C11797 + C11797 + C153738 * C521 + C11272 * C498 +
              C11798 + C11798 + C11264 * C522 + C11270 * C499 + C11799 +
              C11799 + C11263 * C523 + C11268 * C500 + C11800 + C11800 +
              C11262 * C524) *
                 C153513 * C153739) *
                C153477) *
               C153724 +
           (((C12546 + C12545 + C12544 + C12543) * C153513 * C153739 +
             (C11268 * C1800 + C12511 + C12511 + C11262 * C1810 +
              C11270 * C1799 + C12512 + C12512 + C11263 * C1809 +
              C11272 * C1798 + C12513 + C12513 + C11264 * C1808 +
              C11274 * C1797 + C12514 + C12514 + C153738 * C1807) *
                 C153513 * C153560) *
                C153477 -
            ((C11587 + C11588 + C11589 + C11590) * C153513 * C153560 +
             (C11586 + C11585 + C11584 + C11583) * C153513 * C153739) *
                C153725) *
               C153449) *
              C313 +
          ((((C11268 * C499 + C11809 + C11809 + C11262 * C523 + C11270 * C498 +
              C11810 + C11810 + C11263 * C522 + C11272 * C497 + C11811 +
              C11811 + C11264 * C521 + C11274 * C496 + C11812 + C11812 +
              C153738 * C520) *
                 C153513 * C153739 +
             (C12547 + C12548 + C12549 + C12550) * C153513 * C153560) *
                C153477 -
            ((C11594 + C11593 + C11592 + C11591) * C153513 * C153560 +
             (C11274 * C148 + C11289 + C11289 + C153738 * C164 + C11272 * C147 +
              C11290 + C11290 + C11264 * C163 + C11270 * C146 + C11291 +
              C11291 + C11263 * C162 + C11268 * C145 + C11292 + C11292 +
              C11262 * C161) *
                 C153513 * C153739) *
                C153725) *
               C153724 +
           (((C11591 + C11592 + C11593 + C11594) * C153513 * C153739 +
             (C11595 + C11596 + C11597 + C11598) * C153513 * C153560) *
                C153725 -
            ((C11274 * C1796 + C12523 + C12523 + C153738 * C1806 +
              C11272 * C1797 + C12524 + C12524 + C11264 * C1807 +
              C11270 * C1798 + C12525 + C12525 + C11263 * C1808 +
              C11268 * C1799 + C12526 + C12526 + C11262 * C1809) *
                 C153513 * C153560 +
             (C12550 + C12549 + C12548 + C12547) * C153513 * C153739) *
                C153477) *
               C153449) *
              C153384)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C34887 * C144 + C34892 + C34892 + C153705 * C160 +
               C34889 * C145 + C34893 + C34893 + C153348 * C161) *
                  C47673 +
              (C39432 + C39433) * C47674 + C58686 * C153777) *
                 C153739 +
             ((C35190 + C35191) * C47673 + C40446 * C47674 + C41230 * C153777) *
                 C153560) *
                C153725 -
            (((C41249 + C41248) * C153777 + C41229 * C47674 + C40447 * C47673) *
                 C153560 +
             ((C43011 + C43010) * C153777 + (C39434 + C39435) * C47674 +
              (C39433 + C39432) * C47673) *
                 C153739) *
                C153477) *
               C153724 +
           (((C40446 * C47673 + C41230 * C47674 + (C41248 + C41249) * C153777) *
                 C153739 +
             (C39081 * C47673 + C41235 * C47674 + (C41250 + C41251) * C153777) *
                 C153560) *
                C153477 -
            ((C41228 * C153777 + C37403 * C47674 + (C35193 + C35192) * C47673) *
                 C153560 +
             (C41229 * C153777 + C40447 * C47674 + (C35191 + C35190) * C47673) *
                 C153739) *
                C153725) *
               C153449) *
              C313 +
          (((((C39436 + C39437) * C47673 + (C39438 + C39439) * C47674 +
              (C58709 + C58710) * C153777) *
                 C153739 +
             (C40448 * C47673 + C59703 * C47674 + (C58711 + C58712) * C153777) *
                 C153560) *
                C153477 -
            ((C58695 * C153777 + C40450 * C47674 + (C35199 + C35198) * C47673) *
                 C153560 +
             (C58696 * C153777 + (C39437 + C39436) * C47674 +
              (C34889 * C146 + C34906 + C34906 + C153348 * C162 +
               C34887 * C145 + C34907 + C34907 + C153705 * C161) *
                  C47673) *
                 C153739) *
                C153725) *
               C153724 +
           ((((C35198 + C35199) * C47673 + C40448 * C47674 + C59703 * C153777) *
                 C153739 +
             ((C35200 + C35201) * C47673 + C40449 * C47674 +
              (C39442 + C39443) * C153777) *
                 C153560) *
                C153725 -
            (((C34889 * C6213 + C39402 + C39402 + C153348 * C6225 +
               C34887 * C6214 + C39403 + C39403 + C153705 * C6226) *
                  C153777 +
              (C39443 + C39442) * C47674 + C39082 * C47673) *
                 C153560 +
             ((C58712 + C58711) * C153777 + C58695 * C47674 + C40450 * C47673) *
                 C153739) *
                C153477) *
               C153449) *
              C153384)) /
            (p * q * std::sqrt(p + q));
    d2ee[152] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((C11268 * C144 + C11277 + C11277 + C11262 * C160 +
                C11270 * C145 + C11278 + C11278 + C11263 * C161 +
                C11272 * C146 + C11279 + C11279 + C11264 * C162 +
                C11274 * C147 + C11280 + C11280 + C153738 * C163) *
                   C153513 * C153739 +
               (C11268 * C319 + C11281 + C11281 + C11262 * C343 +
                C11270 * C318 + C11282 + C11282 + C11263 * C342 +
                C11272 * C317 + C11283 + C11283 + C11264 * C341 +
                C11274 * C316 + C11284 + C11284 + C153738 * C340) *
                   C153513 * C153560) *
                  C153413 * C153397 * C130 -
              ((C11274 * C315 + C11285 + C11285 + C153738 * C339 +
                C11272 * C316 + C11286 + C11286 + C11264 * C340 +
                C11270 * C317 + C11287 + C11287 + C11263 * C341 +
                C11268 * C318 + C11288 + C11288 + C11262 * C342) *
                   C153513 * C153560 +
               (C11274 * C148 + C11289 + C11289 + C153738 * C164 +
                C11272 * C147 + C11290 + C11290 + C11264 * C163 +
                C11270 * C146 + C11291 + C11291 + C11263 * C162 +
                C11268 * C145 + C11292 + C11292 + C11262 * C161) *
                   C153513 * C153739) *
                  C153413 * C153397 * C131 +
              ((C11268 * C146 + C11293 + C11293 + C11262 * C162 +
                C11270 * C147 + C11294 + C11294 + C11263 * C163 +
                C11272 * C148 + C11295 + C11295 + C11264 * C164 +
                C11274 * C149 + C11296 + C11296 + C153738 * C165) *
                   C153513 * C153739 +
               (C11268 * C317 + C11297 + C11297 + C11262 * C341 +
                C11270 * C316 + C11298 + C11298 + C11263 * C340 +
                C11272 * C315 + C11299 + C11299 + C11264 * C339 +
                C11274 * C325 + C11300 + C11300 + C153738 * C349) *
                   C153513 * C153560) *
                  C153413 * C153397 * C132 -
              ((C11274 * C679 + C11301 + C11301 + C153738 * C681 +
                C11272 * C325 + C11302 + C11302 + C11264 * C349 +
                C11270 * C315 + C11303 + C11303 + C11263 * C339 +
                C11268 * C316 + C11304 + C11304 + C11262 * C340) *
                   C153513 * C153560 +
               (C11274 * C150 + C11305 + C11305 + C153738 * C166 +
                C11272 * C149 + C11306 + C11306 + C11264 * C165 +
                C11270 * C148 + C11307 + C11307 + C11263 * C164 +
                C11268 * C147 + C11308 + C11308 + C11262 * C163) *
                   C153513 * C153739) *
                  C153413 * C153397 * C133) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C11268 * C144 + C11277 + C11277 + C11262 * C160 +
                 C11270 * C145 + C11278 + C11278 + C11263 * C161 +
                 C11272 * C146 + C11279 + C11279 + C11264 * C162 +
                 C11274 * C147 + C11280 + C11280 + C153738 * C163) *
                    C153513 * C153739 +
                (C11583 + C11584 + C11585 + C11586) * C153513 * C153560) *
                   C153413 * C310 -
               ((C11587 + C11588 + C11589 + C11590) * C153513 * C153560 +
                (C11586 + C11585 + C11584 + C11583) * C153513 * C153739) *
                   C153413 * C311 +
               ((C11590 + C11589 + C11588 + C11587) * C153513 * C153739 +
                (C11268 * C1227 + C11523 + C11523 + C11262 * C1237 +
                 C11270 * C1226 + C11524 + C11524 + C11263 * C1236 +
                 C11272 * C1225 + C11525 + C11525 + C11264 * C1235 +
                 C11274 * C1224 + C11526 + C11526 + C153738 * C1234) *
                    C153513 * C153560) *
                   C153413 * C312) *
                  C313 +
              (((C11591 + C11592 + C11593 + C11594) * C153513 * C153739 +
                (C11595 + C11596 + C11597 + C11598) * C153513 * C153560) *
                   C153413 * C311 -
               ((C11594 + C11593 + C11592 + C11591) * C153513 * C153560 +
                (C11274 * C148 + C11289 + C11289 + C153738 * C164 +
                 C11272 * C147 + C11290 + C11290 + C11264 * C163 +
                 C11270 * C146 + C11291 + C11291 + C11263 * C162 +
                 C11268 * C145 + C11292 + C11292 + C11262 * C161) *
                    C153513 * C153739) *
                   C153413 * C310 -
               ((C11274 * C1223 + C11547 + C11547 + C153738 * C1233 +
                 C11272 * C1224 + C11548 + C11548 + C11264 * C1234 +
                 C11270 * C1225 + C11549 + C11549 + C11263 * C1235 +
                 C11268 * C1226 + C11550 + C11550 + C11262 * C1236) *
                    C153513 * C153560 +
                (C11598 + C11597 + C11596 + C11595) * C153513 * C153739) *
                   C153413 * C312) *
                  C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C11268 * C144 + C11277 + C11277 + C11262 * C160 + C11270 * C145 +
             C11278 + C11278 + C11263 * C161 + C11272 * C146 + C11279 + C11279 +
             C11264 * C162 + C11274 * C147 + C11280 + C11280 + C153738 * C163) *
                C153513 * C153739 +
            (C11583 + C11584 + C11585 + C11586) * C153513 * C153560) *
               C493 -
           ((C11274 * C984 + C11793 + C11793 + C153738 * C996 + C11272 * C983 +
             C11794 + C11794 + C11264 * C995 + C11270 * C982 + C11795 + C11795 +
             C11263 * C994 + C11268 * C981 + C11796 + C11796 + C11262 * C993) *
                C153513 * C153560 +
            (C11274 * C497 + C11797 + C11797 + C153738 * C521 + C11272 * C498 +
             C11798 + C11798 + C11264 * C522 + C11270 * C499 + C11799 + C11799 +
             C11263 * C523 + C11268 * C500 + C11800 + C11800 + C11262 * C524) *
                C153513 * C153739) *
               C494 +
           ((C11268 * C501 + C11801 + C11801 + C11262 * C525 + C11270 * C502 +
             C11802 + C11802 + C11263 * C526 + C11272 * C503 + C11803 + C11803 +
             C11264 * C527 + C11274 * C504 + C11804 + C11804 + C153738 * C528) *
                C153513 * C153739 +
            (C11268 * C1369 + C11805 + C11805 + C11262 * C1379 +
             C11270 * C1368 + C11806 + C11806 + C11263 * C1378 +
             C11272 * C1367 + C11807 + C11807 + C11264 * C1377 +
             C11274 * C1366 + C11808 + C11808 + C153738 * C1376) *
                C153513 * C153560) *
               C495) *
              C153397 * C313 +
          (((C11268 * C499 + C11809 + C11809 + C11262 * C523 + C11270 * C498 +
             C11810 + C11810 + C11263 * C522 + C11272 * C497 + C11811 + C11811 +
             C11264 * C521 + C11274 * C496 + C11812 + C11812 + C153738 * C520) *
                C153513 * C153739 +
            (C11268 * C982 + C11813 + C11813 + C11262 * C994 + C11270 * C983 +
             C11814 + C11814 + C11263 * C995 + C11272 * C984 + C11815 + C11815 +
             C11264 * C996 + C11274 * C985 + C11816 + C11816 + C153738 * C997) *
                C153513 * C153560) *
               C494 -
           ((C11594 + C11593 + C11592 + C11591) * C153513 * C153560 +
            (C11274 * C148 + C11289 + C11289 + C153738 * C164 + C11272 * C147 +
             C11290 + C11290 + C11264 * C163 + C11270 * C146 + C11291 + C11291 +
             C11263 * C162 + C11268 * C145 + C11292 + C11292 + C11262 * C161) *
                C153513 * C153739) *
               C493 -
           ((C11274 * C1365 + C11817 + C11817 + C153738 * C1375 +
             C11272 * C1366 + C11818 + C11818 + C11264 * C1376 +
             C11270 * C1367 + C11819 + C11819 + C11263 * C1377 +
             C11268 * C1368 + C11820 + C11820 + C11262 * C1378) *
                C153513 * C153560 +
            (C11274 * C505 + C11821 + C11821 + C153738 * C529 + C11272 * C504 +
             C11822 + C11822 + C11264 * C528 + C11270 * C503 + C11823 + C11823 +
             C11263 * C527 + C11268 * C502 + C11824 + C11824 + C11262 * C526) *
                C153513 * C153739) *
               C495) *
              C153397 * C153384)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C34887 * C144 + C34892 + C34892 + C153705 * C160 + C34889 * C145 +
            C34893 + C34893 + C153348 * C161) *
               C153513 * C34883 +
           (C34887 * C319 + C34894 + C34894 + C153705 * C343 + C34889 * C318 +
            C34895 + C34895 + C153348 * C342) *
               C153513 * C34884 +
           (C34887 * C320 + C34896 + C34896 + C153705 * C344 + C34889 * C321 +
            C34897 + C34897 + C153348 * C345) *
               C153513 * C34885 +
           (C34887 * C1227 + C34898 + C34898 + C153705 * C1237 +
            C34889 * C1226 + C34899 + C34899 + C153348 * C1236) *
               C153513 * C153747) *
              C153413 * C153397 * C130 -
          ((C34889 * C1225 + C34900 + C34900 + C153348 * C1235 +
            C34887 * C1226 + C34901 + C34901 + C153705 * C1236) *
               C153513 * C153747 +
           (C34889 * C322 + C34902 + C34902 + C153348 * C346 + C34887 * C321 +
            C34903 + C34903 + C153705 * C345) *
               C153513 * C34885 +
           (C34889 * C317 + C34904 + C34904 + C153348 * C341 + C34887 * C318 +
            C34905 + C34905 + C153705 * C342) *
               C153513 * C34884 +
           (C34889 * C146 + C34906 + C34906 + C153348 * C162 + C34887 * C145 +
            C34907 + C34907 + C153705 * C161) *
               C153513 * C34883) *
              C153413 * C153397 * C131 +
          ((C34887 * C146 + C34908 + C34908 + C153705 * C162 + C34889 * C147 +
            C34909 + C34909 + C153348 * C163) *
               C153513 * C34883 +
           (C34887 * C317 + C34910 + C34910 + C153705 * C341 + C34889 * C316 +
            C34911 + C34911 + C153348 * C340) *
               C153513 * C34884 +
           (C34887 * C322 + C34912 + C34912 + C153705 * C346 + C34889 * C323 +
            C34913 + C34913 + C153348 * C347) *
               C153513 * C34885 +
           (C34887 * C1225 + C34914 + C34914 + C153705 * C1235 +
            C34889 * C1224 + C34915 + C34915 + C153348 * C1234) *
               C153513 * C153747) *
              C153413 * C153397 * C132 -
          ((C34889 * C1223 + C34916 + C34916 + C153348 * C1233 +
            C34887 * C1224 + C34917 + C34917 + C153705 * C1234) *
               C153513 * C153747 +
           (C34889 * C324 + C34918 + C34918 + C153348 * C348 + C34887 * C323 +
            C34919 + C34919 + C153705 * C347) *
               C153513 * C34885 +
           (C34889 * C315 + C34920 + C34920 + C153348 * C339 + C34887 * C316 +
            C34921 + C34921 + C153705 * C340) *
               C153513 * C34884 +
           (C34889 * C148 + C34922 + C34922 + C153348 * C164 + C34887 * C147 +
            C34923 + C34923 + C153705 * C163) *
               C153513 * C34883) *
              C153413 * C153397 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C34887 * C144 + C34892 + C34892 + C153705 * C160 + C34889 * C145 +
             C34893 + C34893 + C153348 * C161) *
                C153513 * C34883 +
            (C35190 + C35191) * C153513 * C34884 + C35210 * C34885 +
            C35211 * C153747) *
               C153413 * C310 -
           ((C35196 + C35197) * C153513 * C153747 +
            (C35195 + C35194) * C153513 * C34885 +
            (C35193 + C35192) * C153513 * C34884 +
            (C35191 + C35190) * C153513 * C34883) *
               C153413 * C311 +
           (C35210 * C34883 + C35211 * C34884 +
            (C35197 + C35196) * C153513 * C34885 +
            (C34887 * C4587 + C35136 + C35136 + C153705 * C4593 +
             C34889 * C4586 + C35137 + C35137 + C153348 * C4592) *
                C153513 * C153747) *
               C153413 * C312) *
              C313 +
          (((C35198 + C35199) * C153513 * C34883 +
            (C35200 + C35201) * C153513 * C34884 +
            (C35202 + C35203) * C153513 * C34885 +
            (C35204 + C35205) * C153513 * C153747) *
               C153413 * C311 -
           (C35212 * C153747 + C35213 * C34885 +
            (C35199 + C35198) * C153513 * C34884 +
            (C34889 * C146 + C34906 + C34906 + C153348 * C162 + C34887 * C145 +
             C34907 + C34907 + C153705 * C161) *
                C153513 * C34883) *
               C153413 * C310 -
           ((C34889 * C4585 + C35156 + C35156 + C153348 * C4591 +
             C34887 * C4586 + C35157 + C35157 + C153705 * C4592) *
                C153513 * C153747 +
            (C35205 + C35204) * C153513 * C34885 + C35212 * C34884 +
            C35213 * C34883) *
               C153413 * C312) *
              C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C34887 * C144 + C34892 + C34892 + C153705 * C160 + C34889 * C145 +
             C34893 + C34893 + C153348 * C161) *
                C153513 * C34883 +
            (C35190 + C35191) * C153513 * C34884 + C35210 * C34885 +
            C35211 * C153747) *
               C493 -
           ((C34889 * C4144 + C35408 + C35408 + C153348 * C4152 +
             C34887 * C4143 + C35409 + C35409 + C153705 * C4151) *
                C153513 * C153747 +
            (C34889 * C1799 + C35410 + C35410 + C153348 * C1809 +
             C34887 * C1800 + C35411 + C35411 + C153705 * C1810) *
                C153513 * C34885 +
            (C34889 * C982 + C35412 + C35412 + C153348 * C994 + C34887 * C981 +
             C35413 + C35413 + C153705 * C993) *
                C153513 * C34884 +
            (C34889 * C499 + C35414 + C35414 + C153348 * C523 + C34887 * C500 +
             C35415 + C35415 + C153705 * C524) *
                C153513 * C34883) *
               C494 +
           ((C34887 * C501 + C35416 + C35416 + C153705 * C525 + C34889 * C502 +
             C35417 + C35417 + C153348 * C526) *
                C153513 * C34883 +
            (C34887 * C1369 + C35418 + C35418 + C153705 * C1379 +
             C34889 * C1368 + C35419 + C35419 + C153348 * C1378) *
                C153513 * C34884 +
            (C34887 * C3327 + C35420 + C35420 + C153705 * C3335 +
             C34889 * C3328 + C35421 + C35421 + C153348 * C3336) *
                C153513 * C34885 +
            (C34887 * C4835 + C35422 + C35422 + C153705 * C4841 +
             C34889 * C4834 + C35423 + C35423 + C153348 * C4840) *
                C153513 * C153747) *
               C495) *
              C153397 * C313 +
          (((C34887 * C499 + C35424 + C35424 + C153705 * C523 + C34889 * C498 +
             C35425 + C35425 + C153348 * C522) *
                C153513 * C34883 +
            (C34887 * C982 + C35426 + C35426 + C153705 * C994 + C34889 * C983 +
             C35427 + C35427 + C153348 * C995) *
                C153513 * C34884 +
            (C34887 * C1799 + C35428 + C35428 + C153705 * C1809 +
             C34889 * C1798 + C35429 + C35429 + C153348 * C1808) *
                C153513 * C34885 +
            (C34887 * C4144 + C35430 + C35430 + C153705 * C4152 +
             C34889 * C4145 + C35431 + C35431 + C153348 * C4153) *
                C153513 * C153747) *
               C494 -
           (C35212 * C153747 + C35213 * C34885 +
            (C35199 + C35198) * C153513 * C34884 +
            (C34889 * C146 + C34906 + C34906 + C153348 * C162 + C34887 * C145 +
             C34907 + C34907 + C153705 * C161) *
                C153513 * C34883) *
               C493 -
           ((C34889 * C4833 + C35432 + C35432 + C153348 * C4839 +
             C34887 * C4834 + C35433 + C35433 + C153705 * C4840) *
                C153513 * C153747 +
            (C34889 * C3329 + C35434 + C35434 + C153348 * C3337 +
             C34887 * C3328 + C35435 + C35435 + C153705 * C3336) *
                C153513 * C34885 +
            (C34889 * C1367 + C35436 + C35436 + C153348 * C1377 +
             C34887 * C1368 + C35437 + C35437 + C153705 * C1378) *
                C153513 * C34884 +
            (C34889 * C503 + C35438 + C35438 + C153348 * C527 + C34887 * C502 +
             C35439 + C35439 + C153705 * C526) *
                C153513 * C34883) *
               C495) *
              C153397 * C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C34887 * C144 + C34892 + C34892 + C153705 * C160 + C34889 * C145 +
             C34893 + C34893 + C153348 * C161) *
                C47673 +
            (C39432 + C39433) * C47674 + (C39435 + C39434) * C153777) *
               C153739 +
           ((C35190 + C35191) * C47673 + C40446 * C47674 + C41230 * C153777) *
               C153560) *
              C153413 * C153397 * C130 -
          (((C39441 + C39440) * C153777 + C40450 * C47674 +
            (C35199 + C35198) * C47673) *
               C153560 +
           ((C39439 + C39438) * C153777 + (C39437 + C39436) * C47674 +
            (C34889 * C146 + C34906 + C34906 + C153348 * C162 + C34887 * C145 +
             C34907 + C34907 + C153705 * C161) *
                C47673) *
               C153739) *
              C153413 * C153397 * C131 +
          (((C34887 * C146 + C34908 + C34908 + C153705 * C162 + C34889 * C147 +
             C34909 + C34909 + C153348 * C163) *
                C47673 +
            (C40058 + C40059) * C47674 +
            (C34887 * C503 + C40053 + C40053 + C153705 * C527 + C34889 * C504 +
             C40052 + C40052 + C153348 * C528) *
                C153777) *
               C153739 +
           ((C35660 + C35661) * C47673 + (C39750 + C39751) * C47674 +
            (C34887 * C1367 + C40051 + C40051 + C153705 * C1377 +
             C34889 * C1366 + C40050 + C40050 + C153348 * C1376) *
                C153777) *
               C153560) *
              C153413 * C153397 * C132 -
          (((C34889 * C1365 + C58102 + C58102 + C153348 * C1375 +
             C34887 * C1366 + C58103 + C58103 + C153705 * C1376) *
                C153777 +
            (C34889 * C985 + C38786 + C38786 + C153348 * C997 + C34887 * C984 +
             C38787 + C38787 + C153705 * C996) *
                C47674 +
            (C34889 * C315 + C34920 + C34920 + C153348 * C339 + C34887 * C316 +
             C34921 + C34921 + C153705 * C340) *
                C47673) *
               C153560 +
           ((C34889 * C505 + C58104 + C58104 + C153348 * C529 + C34887 * C504 +
             C58105 + C58105 + C153705 * C528) *
                C153777 +
            (C34889 * C496 + C38788 + C38788 + C153348 * C520 + C34887 * C497 +
             C38789 + C38789 + C153705 * C521) *
                C47674 +
            (C34889 * C148 + C34922 + C34922 + C153348 * C164 + C34887 * C147 +
             C34923 + C34923 + C153705 * C163) *
                C47673) *
               C153739) *
              C153413 * C153397 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C34887 * C144 + C34892 + C34892 + C153705 * C160 + C34889 * C145 +
              C34893 + C34893 + C153348 * C161) *
                 C47673 +
             (C39432 + C39433) * C47674 + (C39435 + C39434) * C153777) *
                C153739 +
            ((C35190 + C35191) * C47673 + C40446 * C47674 + C41230 * C153777) *
                C153560) *
               C153413 * C310 -
           ((C41228 * C153777 + C37403 * C47674 + (C35193 + C35192) * C47673) *
                C153560 +
            (C41229 * C153777 + C40447 * C47674 + (C35191 + C35190) * C47673) *
                C153739) *
               C153413 * C311 +
           ((C35206 * C47673 + C39081 * C47674 + C41235 * C153777) * C153739 +
            (C35207 * C47673 + C42220 * C47674 + (C36754 + C36755) * C153777) *
                C153560) *
               C153413 * C312) *
              C313 +
          ((((C35198 + C35199) * C47673 + C40448 * C47674 +
             (C39440 + C39441) * C153777) *
                C153739 +
            ((C35200 + C35201) * C47673 + C40449 * C47674 +
             (C39442 + C39443) * C153777) *
                C153560) *
               C153413 * C311 -
           (((C39441 + C39440) * C153777 + C40450 * C47674 +
             (C35199 + C35198) * C47673) *
                C153560 +
            ((C39439 + C39438) * C153777 + (C39437 + C39436) * C47674 +
             (C34889 * C146 + C34906 + C34906 + C153348 * C162 + C34887 * C145 +
              C34907 + C34907 + C153705 * C161) *
                 C47673) *
                C153739) *
               C153413 * C310 -
           (((C34889 * C4833 + C35432 + C35432 + C153348 * C4839 +
              C34887 * C4834 + C35433 + C35433 + C153705 * C4840) *
                 C153777 +
             (C36189 + C36188) * C47674 + C35208 * C47673) *
                C153560 +
            ((C39443 + C39442) * C153777 + C39082 * C47674 + C35209 * C47673) *
                C153739) *
               C153413 * C312) *
              C153384)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C34887 * C144 + C34892 + C34892 + C153705 * C160 + C34889 * C145 +
              C34893 + C34893 + C153348 * C161) *
                 C47673 +
             (C39432 + C39433) * C47674 + C58686 * C153777) *
                C153739 +
            ((C35190 + C35191) * C47673 + C40446 * C47674 + C41230 * C153777) *
                C153560) *
               C493 -
           (((C41249 + C41248) * C153777 + C41229 * C47674 + C40447 * C47673) *
                C153560 +
            ((C43011 + C43010) * C153777 + (C39434 + C39435) * C47674 +
             (C39433 + C39432) * C47673) *
                C153739) *
               C494 +
           ((C58686 * C47673 + (C43010 + C43011) * C47674 +
             (C34887 * C7560 + C43005 + C43005 + C153705 * C7568 +
              C34889 * C7561 + C43004 + C43004 + C153348 * C7569) *
                 C153777) *
                C153739 +
            (C41230 * C47673 + (C41248 + C41249) * C47674 +
             (C34887 * C9042 + C43003 + C43003 + C153705 * C9048 +
              C34889 * C9041 + C43002 + C43002 + C153348 * C9047) *
                 C153777) *
                C153560) *
               C495) *
              C153397 * C313 +
          ((((C39436 + C39437) * C47673 + (C39438 + C39439) * C47674 +
             (C58709 + C58710) * C153777) *
                C153739 +
            (C40448 * C47673 + (C39440 + C39441) * C47674 +
             (C58711 + C58712) * C153777) *
                C153560) *
               C494 -
           ((C58695 * C153777 + C40450 * C47674 + (C35199 + C35198) * C47673) *
                C153560 +
            (C58696 * C153777 + (C39437 + C39436) * C47674 +
             (C34889 * C146 + C34906 + C34906 + C153348 * C162 + C34887 * C145 +
              C34907 + C34907 + C153705 * C161) *
                 C47673) *
                C153739) *
               C493 -
           (((C34889 * C9040 + C58697 + C58697 + C153348 * C9046 +
              C34887 * C9041 + C58698 + C58698 + C153705 * C9047) *
                 C153777 +
             (C58712 + C58711) * C47674 + C58695 * C47673) *
                C153560 +
            ((C34889 * C7562 + C58699 + C58699 + C153348 * C7570 +
              C34887 * C7561 + C58700 + C58700 + C153705 * C7569) *
                 C153777 +
             (C58710 + C58709) * C47674 + C58696 * C47673) *
                C153739) *
               C495) *
              C153397 * C153384)) /
            (p * q * std::sqrt(p + q));
    d2ee[153] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C34887 * C144 + C34892 + C34892 + C153705 * C160 + C34889 * C145 +
             C34893 + C34893 + C153348 * C161) *
                C153513 * C34883 +
            (C35190 + C35191) * C153513 * C34884 + C35210 * C34885 +
            C35211 * C153747) *
               C153725 -
           ((C34889 * C4144 + C35408 + C35408 + C153348 * C4152 +
             C34887 * C4143 + C35409 + C35409 + C153705 * C4151) *
                C153513 * C153747 +
            (C34889 * C1799 + C35410 + C35410 + C153348 * C1809 +
             C34887 * C1800 + C35411 + C35411 + C153705 * C1810) *
                C153513 * C34885 +
            (C34889 * C982 + C35412 + C35412 + C153348 * C994 + C34887 * C981 +
             C35413 + C35413 + C153705 * C993) *
                C153513 * C34884 +
            (C34889 * C499 + C35414 + C35414 + C153348 * C523 + C34887 * C500 +
             C35415 + C35415 + C153705 * C524) *
                C153513 * C34883) *
               C153477) *
              C153397 * C153793 +
          (((C34887 * C499 + C35424 + C35424 + C153705 * C523 + C34889 * C498 +
             C35425 + C35425 + C153348 * C522) *
                C153513 * C34883 +
            (C34887 * C982 + C35426 + C35426 + C153705 * C994 + C34889 * C983 +
             C35427 + C35427 + C153348 * C995) *
                C153513 * C34884 +
            (C34887 * C1799 + C35428 + C35428 + C153705 * C1809 +
             C34889 * C1798 + C35429 + C35429 + C153348 * C1808) *
                C153513 * C34885 +
            (C34887 * C4144 + C35430 + C35430 + C153705 * C4152 +
             C34889 * C4145 + C35431 + C35431 + C153348 * C4153) *
                C153513 * C153747) *
               C153477 -
           (C35212 * C153747 + C35213 * C34885 +
            (C35199 + C35198) * C153513 * C34884 +
            (C34889 * C146 + C34906 + C34906 + C153348 * C162 + C34887 * C145 +
             C34907 + C34907 + C153705 * C161) *
                C153513 * C34883) *
               C153725) *
              C153397 * C153794 +
          (((C34887 * C146 + C34908 + C34908 + C153705 * C162 + C34889 * C147 +
             C34909 + C34909 + C153348 * C163) *
                C153513 * C34883 +
            (C35660 + C35661) * C153513 * C34884 +
            (C35662 + C35663) * C153513 * C34885 +
            (C35664 + C35665) * C153513 * C153747) *
               C153725 -
           ((C34889 * C4146 + C35860 + C35860 + C153348 * C4154 +
             C34887 * C4145 + C35861 + C35861 + C153705 * C4153) *
                C153513 * C153747 +
            (C34889 * C1797 + C35862 + C35862 + C153348 * C1807 +
             C34887 * C1798 + C35863 + C35863 + C153705 * C1808) *
                C153513 * C34885 +
            (C34889 * C984 + C35864 + C35864 + C153348 * C996 + C34887 * C983 +
             C35865 + C35865 + C153705 * C995) *
                C153513 * C34884 +
            (C34889 * C497 + C35866 + C35866 + C153348 * C521 + C34887 * C498 +
             C35867 + C35867 + C153705 * C522) *
                C153513 * C34883) *
               C153477) *
              C153397 * C678)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C11268 * C144 + C11277 + C11277 + C11262 * C160 + C11270 * C145 +
             C11278 + C11278 + C11263 * C161 + C11272 * C146 + C11279 + C11279 +
             C11264 * C162 + C11274 * C147 + C11280 + C11280 + C153738 * C163) *
                C153513 * C153739 +
            (C11583 + C11584 + C11585 + C11586) * C153513 * C153560) *
               C153725 -
           ((C11274 * C984 + C11793 + C11793 + C153738 * C996 + C11272 * C983 +
             C11794 + C11794 + C11264 * C995 + C11270 * C982 + C11795 + C11795 +
             C11263 * C994 + C11268 * C981 + C11796 + C11796 + C11262 * C993) *
                C153513 * C153560 +
            (C11274 * C497 + C11797 + C11797 + C153738 * C521 + C11272 * C498 +
             C11798 + C11798 + C11264 * C522 + C11270 * C499 + C11799 + C11799 +
             C11263 * C523 + C11268 * C500 + C11800 + C11800 + C11262 * C524) *
                C153513 * C153739) *
               C153477) *
              C153397 * C153793 +
          (((C11268 * C499 + C11809 + C11809 + C11262 * C523 + C11270 * C498 +
             C11810 + C11810 + C11263 * C522 + C11272 * C497 + C11811 + C11811 +
             C11264 * C521 + C11274 * C496 + C11812 + C11812 + C153738 * C520) *
                C153513 * C153739 +
            (C11268 * C982 + C11813 + C11813 + C11262 * C994 + C11270 * C983 +
             C11814 + C11814 + C11263 * C995 + C11272 * C984 + C11815 + C11815 +
             C11264 * C996 + C11274 * C985 + C11816 + C11816 + C153738 * C997) *
                C153513 * C153560) *
               C153477 -
           ((C11594 + C11593 + C11592 + C11591) * C153513 * C153560 +
            (C11274 * C148 + C11289 + C11289 + C153738 * C164 + C11272 * C147 +
             C11290 + C11290 + C11264 * C163 + C11270 * C146 + C11291 + C11291 +
             C11263 * C162 + C11268 * C145 + C11292 + C11292 + C11262 * C161) *
                C153513 * C153739) *
               C153725) *
              C153397 * C153794 +
          (((C11268 * C146 + C11293 + C11293 + C11262 * C162 + C11270 * C147 +
             C11294 + C11294 + C11263 * C163 + C11272 * C148 + C11295 + C11295 +
             C11264 * C164 + C11274 * C149 + C11296 + C11296 + C153738 * C165) *
                C153513 * C153739 +
            (C12039 + C12040 + C12041 + C12042) * C153513 * C153560) *
               C153725 -
           ((C11274 * C986 + C12237 + C12237 + C153738 * C998 + C11272 * C985 +
             C12238 + C12238 + C11264 * C997 + C11270 * C984 + C12239 + C12239 +
             C11263 * C996 + C11268 * C983 + C12240 + C12240 + C11262 * C995) *
                C153513 * C153560 +
            (C11274 * C506 + C12241 + C12241 + C153738 * C530 + C11272 * C496 +
             C12242 + C12242 + C11264 * C520 + C11270 * C497 + C12243 + C12243 +
             C11263 * C521 + C11268 * C498 + C12244 + C12244 + C11262 * C522) *
                C153513 * C153739) *
               C153477) *
              C153397 * C678)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C34887 * C144 + C34892 + C34892 + C153705 * C160 + C34889 * C145 +
              C34893 + C34893 + C153348 * C161) *
                 C47673 +
             (C39432 + C39433) * C47674 + C58686 * C153777) *
                C153739 +
            ((C35190 + C35191) * C47673 + C40446 * C47674 + C41230 * C153777) *
                C153560) *
               C153725 -
           (((C41249 + C41248) * C153777 + C41229 * C47674 + C40447 * C47673) *
                C153560 +
            ((C43011 + C43010) * C153777 + (C39434 + C39435) * C47674 +
             (C39433 + C39432) * C47673) *
                C153739) *
               C153477) *
              C153397 * C153793 +
          ((((C39436 + C39437) * C47673 + (C39438 + C39439) * C47674 +
             (C58709 + C58710) * C153777) *
                C153739 +
            (C40448 * C47673 + (C39440 + C39441) * C47674 +
             (C58711 + C58712) * C153777) *
                C153560) *
               C153477 -
           ((C58695 * C153777 + C40450 * C47674 + (C35199 + C35198) * C47673) *
                C153560 +
            (C58696 * C153777 + (C39437 + C39436) * C47674 +
             (C34889 * C146 + C34906 + C34906 + C153348 * C162 + C34887 * C145 +
              C34907 + C34907 + C153705 * C161) *
                 C47673) *
                C153739) *
               C153725) *
              C153397 * C153794 +
          ((((C34887 * C146 + C34908 + C34908 + C153705 * C162 + C34889 * C147 +
              C34909 + C34909 + C153348 * C163) *
                 C47673 +
             (C40058 + C40059) * C47674 + (C59315 + C59316) * C153777) *
                C153739 +
            ((C35660 + C35661) * C47673 + (C39750 + C39751) * C47674 +
             (C59011 + C59012) * C153777) *
                C153560) *
               C153725 -
           (((C34889 * C8437 + C59307 + C59307 + C153348 * C8439 +
              C34887 * C6216 + C59308 + C59308 + C153705 * C6228) *
                 C153777 +
             (C59012 + C59011) * C47674 + (C39751 + C39750) * C47673) *
                C153560 +
            ((C34889 * C2149 + C59309 + C59309 + C153348 * C2159 +
              C34887 * C2150 + C59310 + C59310 + C153705 * C2160) *
                 C153777 +
             (C59316 + C59315) * C47674 + (C40059 + C40058) * C47673) *
                C153739) *
               C153477) *
              C153397 * C678)) /
            (p * q * std::sqrt(p + q));
    d2ee[154] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C11268 * C144 + C11277 + C11277 + C11262 * C160 + C11270 * C145 +
             C11278 + C11278 + C11263 * C161 + C11272 * C146 + C11279 + C11279 +
             C11264 * C162 + C11274 * C147 + C11280 + C11280 + C153738 * C163) *
                C153513 * C153739 +
            (C11583 + C11584 + C11585 + C11586) * C153513 * C153560) *
               C153413 * C310 -
           ((C11587 + C11588 + C11589 + C11590) * C153513 * C153560 +
            (C11586 + C11585 + C11584 + C11583) * C153513 * C153739) *
               C153413 * C311 +
           ((C11590 + C11589 + C11588 + C11587) * C153513 * C153739 +
            (C11268 * C1227 + C11523 + C11523 + C11262 * C1237 +
             C11270 * C1226 + C11524 + C11524 + C11263 * C1236 +
             C11272 * C1225 + C11525 + C11525 + C11264 * C1235 +
             C11274 * C1224 + C11526 + C11526 + C153738 * C1234) *
                C153513 * C153560) *
               C153413 * C312) *
              C313 +
          (((C11591 + C11592 + C11593 + C11594) * C153513 * C153739 +
            (C11595 + C11596 + C11597 + C11598) * C153513 * C153560) *
               C153413 * C311 -
           ((C11594 + C11593 + C11592 + C11591) * C153513 * C153560 +
            (C11274 * C148 + C11289 + C11289 + C153738 * C164 + C11272 * C147 +
             C11290 + C11290 + C11264 * C163 + C11270 * C146 + C11291 + C11291 +
             C11263 * C162 + C11268 * C145 + C11292 + C11292 + C11262 * C161) *
                C153513 * C153739) *
               C153413 * C310 -
           ((C11274 * C1223 + C11547 + C11547 + C153738 * C1233 +
             C11272 * C1224 + C11548 + C11548 + C11264 * C1234 +
             C11270 * C1225 + C11549 + C11549 + C11263 * C1235 +
             C11268 * C1226 + C11550 + C11550 + C11262 * C1236) *
                C153513 * C153560 +
            (C11598 + C11597 + C11596 + C11595) * C153513 * C153739) *
               C153413 * C312) *
              C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C11268 * C144 + C11277 + C11277 + C11262 * C160 + C11270 * C145 +
            C11278 + C11278 + C11263 * C161 + C11272 * C146 + C11279 + C11279 +
            C11264 * C162 + C11274 * C147 + C11280 + C11280 + C153738 * C163) *
               C153513 * C153739 +
           (C11268 * C319 + C11281 + C11281 + C11262 * C343 + C11270 * C318 +
            C11282 + C11282 + C11263 * C342 + C11272 * C317 + C11283 + C11283 +
            C11264 * C341 + C11274 * C316 + C11284 + C11284 + C153738 * C340) *
               C153513 * C153560) *
              C153413 * C153397 * C130 -
          ((C11274 * C315 + C11285 + C11285 + C153738 * C339 + C11272 * C316 +
            C11286 + C11286 + C11264 * C340 + C11270 * C317 + C11287 + C11287 +
            C11263 * C341 + C11268 * C318 + C11288 + C11288 + C11262 * C342) *
               C153513 * C153560 +
           (C11274 * C148 + C11289 + C11289 + C153738 * C164 + C11272 * C147 +
            C11290 + C11290 + C11264 * C163 + C11270 * C146 + C11291 + C11291 +
            C11263 * C162 + C11268 * C145 + C11292 + C11292 + C11262 * C161) *
               C153513 * C153739) *
              C153413 * C153397 * C131 +
          ((C11268 * C146 + C11293 + C11293 + C11262 * C162 + C11270 * C147 +
            C11294 + C11294 + C11263 * C163 + C11272 * C148 + C11295 + C11295 +
            C11264 * C164 + C11274 * C149 + C11296 + C11296 + C153738 * C165) *
               C153513 * C153739 +
           (C11268 * C317 + C11297 + C11297 + C11262 * C341 + C11270 * C316 +
            C11298 + C11298 + C11263 * C340 + C11272 * C315 + C11299 + C11299 +
            C11264 * C339 + C11274 * C325 + C11300 + C11300 + C153738 * C349) *
               C153513 * C153560) *
              C153413 * C153397 * C132 -
          ((C11274 * C679 + C11301 + C11301 + C153738 * C681 + C11272 * C325 +
            C11302 + C11302 + C11264 * C349 + C11270 * C315 + C11303 + C11303 +
            C11263 * C339 + C11268 * C316 + C11304 + C11304 + C11262 * C340) *
               C153513 * C153560 +
           (C11274 * C150 + C11305 + C11305 + C153738 * C166 + C11272 * C149 +
            C11306 + C11306 + C11264 * C165 + C11270 * C148 + C11307 + C11307 +
            C11263 * C164 + C11268 * C147 + C11308 + C11308 + C11262 * C163) *
               C153513 * C153739) *
              C153413 * C153397 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C34887 * C144 + C34892 + C34892 + C153705 * C160 + C34889 * C145 +
            C34893 + C34893 + C153348 * C161) *
               C153513 * C34883 +
           (C34887 * C319 + C34894 + C34894 + C153705 * C343 + C34889 * C318 +
            C34895 + C34895 + C153348 * C342) *
               C153513 * C34884 +
           (C34887 * C320 + C34896 + C34896 + C153705 * C344 + C34889 * C321 +
            C34897 + C34897 + C153348 * C345) *
               C153513 * C34885 +
           (C34887 * C1227 + C34898 + C34898 + C153705 * C1237 +
            C34889 * C1226 + C34899 + C34899 + C153348 * C1236) *
               C153513 * C153747) *
              C153413 * C153397 * C130 -
          ((C34889 * C1225 + C34900 + C34900 + C153348 * C1235 +
            C34887 * C1226 + C34901 + C34901 + C153705 * C1236) *
               C153513 * C153747 +
           (C34889 * C322 + C34902 + C34902 + C153348 * C346 + C34887 * C321 +
            C34903 + C34903 + C153705 * C345) *
               C153513 * C34885 +
           (C34889 * C317 + C34904 + C34904 + C153348 * C341 + C34887 * C318 +
            C34905 + C34905 + C153705 * C342) *
               C153513 * C34884 +
           (C34889 * C146 + C34906 + C34906 + C153348 * C162 + C34887 * C145 +
            C34907 + C34907 + C153705 * C161) *
               C153513 * C34883) *
              C153413 * C153397 * C131 +
          ((C34887 * C146 + C34908 + C34908 + C153705 * C162 + C34889 * C147 +
            C34909 + C34909 + C153348 * C163) *
               C153513 * C34883 +
           (C34887 * C317 + C34910 + C34910 + C153705 * C341 + C34889 * C316 +
            C34911 + C34911 + C153348 * C340) *
               C153513 * C34884 +
           (C34887 * C322 + C34912 + C34912 + C153705 * C346 + C34889 * C323 +
            C34913 + C34913 + C153348 * C347) *
               C153513 * C34885 +
           (C34887 * C1225 + C34914 + C34914 + C153705 * C1235 +
            C34889 * C1224 + C34915 + C34915 + C153348 * C1234) *
               C153513 * C153747) *
              C153413 * C153397 * C132 -
          ((C34889 * C1223 + C34916 + C34916 + C153348 * C1233 +
            C34887 * C1224 + C34917 + C34917 + C153705 * C1234) *
               C153513 * C153747 +
           (C34889 * C324 + C34918 + C34918 + C153348 * C348 + C34887 * C323 +
            C34919 + C34919 + C153705 * C347) *
               C153513 * C34885 +
           (C34889 * C315 + C34920 + C34920 + C153348 * C339 + C34887 * C316 +
            C34921 + C34921 + C153705 * C340) *
               C153513 * C34884 +
           (C34889 * C148 + C34922 + C34922 + C153348 * C164 + C34887 * C147 +
            C34923 + C34923 + C153705 * C163) *
               C153513 * C34883) *
              C153413 * C153397 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C34887 * C144 + C34892 + C34892 + C153705 * C160 + C34889 * C145 +
             C34893 + C34893 + C153348 * C161) *
                C153513 * C34883 +
            (C35190 + C35191) * C153513 * C34884 + C35210 * C34885 +
            C35211 * C153747) *
               C153413 * C310 -
           ((C35196 + C35197) * C153513 * C153747 +
            (C35195 + C35194) * C153513 * C34885 +
            (C35193 + C35192) * C153513 * C34884 +
            (C35191 + C35190) * C153513 * C34883) *
               C153413 * C311 +
           (C35210 * C34883 + C35211 * C34884 +
            (C35197 + C35196) * C153513 * C34885 +
            (C34887 * C4587 + C35136 + C35136 + C153705 * C4593 +
             C34889 * C4586 + C35137 + C35137 + C153348 * C4592) *
                C153513 * C153747) *
               C153413 * C312) *
              C313 +
          (((C35198 + C35199) * C153513 * C34883 +
            (C35200 + C35201) * C153513 * C34884 +
            (C35202 + C35203) * C153513 * C34885 +
            (C35204 + C35205) * C153513 * C153747) *
               C153413 * C311 -
           (C35212 * C153747 + C35213 * C34885 +
            (C35199 + C35198) * C153513 * C34884 +
            (C34889 * C146 + C34906 + C34906 + C153348 * C162 + C34887 * C145 +
             C34907 + C34907 + C153705 * C161) *
                C153513 * C34883) *
               C153413 * C310 -
           ((C34889 * C4585 + C35156 + C35156 + C153348 * C4591 +
             C34887 * C4586 + C35157 + C35157 + C153705 * C4592) *
                C153513 * C153747 +
            (C35205 + C35204) * C153513 * C34885 + C35212 * C34884 +
            C35213 * C34883) *
               C153413 * C312) *
              C153384)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C34887 * C144 + C34892 + C34892 + C153705 * C160 + C34889 * C145 +
             C34893 + C34893 + C153348 * C161) *
                C47673 +
            (C39432 + C39433) * C47674 + (C39435 + C39434) * C153777) *
               C153739 +
           ((C35190 + C35191) * C47673 + C40446 * C47674 + C41230 * C153777) *
               C153560) *
              C153413 * C153397 * C130 -
          (((C39441 + C39440) * C153777 + C40450 * C47674 +
            (C35199 + C35198) * C47673) *
               C153560 +
           ((C39439 + C39438) * C153777 + (C39437 + C39436) * C47674 +
            (C34889 * C146 + C34906 + C34906 + C153348 * C162 + C34887 * C145 +
             C34907 + C34907 + C153705 * C161) *
                C47673) *
               C153739) *
              C153413 * C153397 * C131 +
          (((C34887 * C146 + C34908 + C34908 + C153705 * C162 + C34889 * C147 +
             C34909 + C34909 + C153348 * C163) *
                C47673 +
            (C40058 + C40059) * C47674 +
            (C34887 * C503 + C40053 + C40053 + C153705 * C527 + C34889 * C504 +
             C40052 + C40052 + C153348 * C528) *
                C153777) *
               C153739 +
           ((C35660 + C35661) * C47673 + (C39750 + C39751) * C47674 +
            (C34887 * C1367 + C40051 + C40051 + C153705 * C1377 +
             C34889 * C1366 + C40050 + C40050 + C153348 * C1376) *
                C153777) *
               C153560) *
              C153413 * C153397 * C132 -
          (((C34889 * C1365 + C58102 + C58102 + C153348 * C1375 +
             C34887 * C1366 + C58103 + C58103 + C153705 * C1376) *
                C153777 +
            (C34889 * C985 + C38786 + C38786 + C153348 * C997 + C34887 * C984 +
             C38787 + C38787 + C153705 * C996) *
                C47674 +
            (C34889 * C315 + C34920 + C34920 + C153348 * C339 + C34887 * C316 +
             C34921 + C34921 + C153705 * C340) *
                C47673) *
               C153560 +
           ((C34889 * C505 + C58104 + C58104 + C153348 * C529 + C34887 * C504 +
             C58105 + C58105 + C153705 * C528) *
                C153777 +
            (C34889 * C496 + C38788 + C38788 + C153348 * C520 + C34887 * C497 +
             C38789 + C38789 + C153705 * C521) *
                C47674 +
            (C34889 * C148 + C34922 + C34922 + C153348 * C164 + C34887 * C147 +
             C34923 + C34923 + C153705 * C163) *
                C47673) *
               C153739) *
              C153413 * C153397 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C34887 * C144 + C34892 + C34892 + C153705 * C160 + C34889 * C145 +
              C34893 + C34893 + C153348 * C161) *
                 C47673 +
             (C39432 + C39433) * C47674 + (C39435 + C39434) * C153777) *
                C153739 +
            ((C35190 + C35191) * C47673 + C40446 * C47674 + C41230 * C153777) *
                C153560) *
               C153413 * C310 -
           ((C41228 * C153777 + C37403 * C47674 + (C35193 + C35192) * C47673) *
                C153560 +
            (C41229 * C153777 + C40447 * C47674 + (C35191 + C35190) * C47673) *
                C153739) *
               C153413 * C311 +
           ((C35206 * C47673 + C39081 * C47674 + C41235 * C153777) * C153739 +
            (C35207 * C47673 + C42220 * C47674 + (C36754 + C36755) * C153777) *
                C153560) *
               C153413 * C312) *
              C313 +
          ((((C35198 + C35199) * C47673 + C40448 * C47674 +
             (C39440 + C39441) * C153777) *
                C153739 +
            ((C35200 + C35201) * C47673 + C40449 * C47674 +
             (C39442 + C39443) * C153777) *
                C153560) *
               C153413 * C311 -
           (((C39441 + C39440) * C153777 + C40450 * C47674 +
             (C35199 + C35198) * C47673) *
                C153560 +
            ((C39439 + C39438) * C153777 + (C39437 + C39436) * C47674 +
             (C34889 * C146 + C34906 + C34906 + C153348 * C162 + C34887 * C145 +
              C34907 + C34907 + C153705 * C161) *
                 C47673) *
                C153739) *
               C153413 * C310 -
           (((C34889 * C4833 + C35432 + C35432 + C153348 * C4839 +
              C34887 * C4834 + C35433 + C35433 + C153705 * C4840) *
                 C153777 +
             (C36189 + C36188) * C47674 + C35208 * C47673) *
                C153560 +
            ((C39443 + C39442) * C153777 + C39082 * C47674 + C35209 * C47673) *
                C153739) *
               C153413 * C312) *
              C153384)) /
            (p * q * std::sqrt(p + q));
    d2ee[155] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C34887 * C144 + C34892 + C34892 + C153705 * C160 + C34889 * C145 +
             C34893 + C34893 + C153348 * C161) *
                C153513 * C34883 +
            (C35190 + C35191) * C153513 * C34884 + C35210 * C34885 +
            C35211 * C153747) *
               C153413 * C153795 -
           (C36522 * C153747 + C36523 * C34885 +
            (C35193 + C35192) * C153513 * C34884 +
            (C35191 + C35190) * C153513 * C34883) *
               C153413 * C153796 +
           (C35210 * C34883 + C35211 * C34884 +
            (C35197 + C35196) * C153513 * C34885 +
            (C36528 + C36529) * C153513 * C153747) *
               C153413 * C1509) *
              C153716 +
          (((C35198 + C35199) * C153513 * C34883 +
            (C35200 + C35201) * C153513 * C34884 +
            (C35202 + C35203) * C153513 * C34885 +
            (C35204 + C35205) * C153513 * C153747) *
               C153413 * C153796 -
           (C35212 * C153747 + C35213 * C34885 +
            (C35199 + C35198) * C153513 * C34884 +
            (C34889 * C146 + C34906 + C34906 + C153348 * C162 + C34887 * C145 +
             C34907 + C34907 + C153705 * C161) *
                C153513 * C34883) *
               C153413 * C153795 -
           ((C34889 * C4585 + C35156 + C35156 + C153348 * C4591 +
             C34887 * C4586 + C35157 + C35157 + C153705 * C4592) *
                C153513 * C153747 +
            (C35205 + C35204) * C153513 * C34885 + C35212 * C34884 +
            C35213 * C34883) *
               C153413 * C1509) *
              C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C11268 * C144 + C11277 + C11277 + C11262 * C160 + C11270 * C145 +
             C11278 + C11278 + C11263 * C161 + C11272 * C146 + C11279 + C11279 +
             C11264 * C162 + C11274 * C147 + C11280 + C11280 + C153738 * C163) *
                C153513 * C153739 +
            (C11583 + C11584 + C11585 + C11586) * C153513 * C153560) *
               C153413 * C153795 -
           ((C11587 + C11588 + C11589 + C11590) * C153513 * C153560 +
            (C11586 + C11585 + C11584 + C11583) * C153513 * C153739) *
               C153413 * C153796 +
           ((C11590 + C11589 + C11588 + C11587) * C153513 * C153739 +
            (C12895 + C12896 + C12897 + C12898) * C153513 * C153560) *
               C153413 * C1509) *
              C153716 +
          (((C11591 + C11592 + C11593 + C11594) * C153513 * C153739 +
            (C11595 + C11596 + C11597 + C11598) * C153513 * C153560) *
               C153413 * C153796 -
           ((C11594 + C11593 + C11592 + C11591) * C153513 * C153560 +
            (C11274 * C148 + C11289 + C11289 + C153738 * C164 + C11272 * C147 +
             C11290 + C11290 + C11264 * C163 + C11270 * C146 + C11291 + C11291 +
             C11263 * C162 + C11268 * C145 + C11292 + C11292 + C11262 * C161) *
                C153513 * C153739) *
               C153413 * C153795 -
           ((C11274 * C1223 + C11547 + C11547 + C153738 * C1233 +
             C11272 * C1224 + C11548 + C11548 + C11264 * C1234 +
             C11270 * C1225 + C11549 + C11549 + C11263 * C1235 +
             C11268 * C1226 + C11550 + C11550 + C11262 * C1236) *
                C153513 * C153560 +
            (C11598 + C11597 + C11596 + C11595) * C153513 * C153739) *
               C153413 * C1509) *
              C153384)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C34887 * C144 + C34892 + C34892 + C153705 * C160 + C34889 * C145 +
              C34893 + C34893 + C153348 * C161) *
                 C47673 +
             (C39432 + C39433) * C47674 + C58686 * C153777) *
                C153739 +
            ((C35190 + C35191) * C47673 + C40446 * C47674 + C41230 * C153777) *
                C153560) *
               C153413 * C153795 -
           ((C41228 * C153777 + C37403 * C47674 + (C35193 + C35192) * C47673) *
                C153560 +
            (C41229 * C153777 + C40447 * C47674 + (C35191 + C35190) * C47673) *
                C153739) *
               C153413 * C153796 +
           ((C35206 * C47673 + C39081 * C47674 + C41235 * C153777) * C153739 +
            (C35207 * C47673 + C42220 * C47674 + (C36754 + C36755) * C153777) *
                C153560) *
               C153413 * C1509) *
              C153716 +
          ((((C35198 + C35199) * C47673 + C40448 * C47674 + C59703 * C153777) *
                C153739 +
            ((C35200 + C35201) * C47673 + C40449 * C47674 +
             (C39442 + C39443) * C153777) *
                C153560) *
               C153413 * C153796 -
           ((C58695 * C153777 + C40450 * C47674 + (C35199 + C35198) * C47673) *
                C153560 +
            (C58696 * C153777 + (C39437 + C39436) * C47674 +
             (C34889 * C146 + C34906 + C34906 + C153348 * C162 + C34887 * C145 +
              C34907 + C34907 + C153705 * C161) *
                 C47673) *
                C153739) *
               C153413 * C153795 -
           (((C34889 * C4833 + C35432 + C35432 + C153348 * C4839 +
              C34887 * C4834 + C35433 + C35433 + C153705 * C4840) *
                 C153777 +
             (C36189 + C36188) * C47674 + C35208 * C47673) *
                C153560 +
            ((C39443 + C39442) * C153777 + C39082 * C47674 + C35209 * C47673) *
                C153739) *
               C153413 * C1509) *
              C153384)) /
            (p * q * std::sqrt(p + q));
    d2ee[156] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C34887 * C144 + C34892 + C34892 + C153705 * C160 + C34889 * C145 +
             C34893 + C34893 + C153348 * C161) *
                C153513 * C34883 +
            (C35190 + C35191) * C153513 * C34884 + C35210 * C34885 +
            C35211 * C153747) *
               C153725 -
           (C37410 * C153747 + C37411 * C34885 +
            (C36182 + C36183) * C153513 * C34884 +
            (C34889 * C499 + C35414 + C35414 + C153348 * C523 + C34887 * C500 +
             C35415 + C35415 + C153705 * C524) *
                C153513 * C34883) *
               C153477) *
              C153795 +
          (((C36183 + C36182) * C153513 * C34883 +
            (C36181 + C36180) * C153513 * C34884 +
            (C36179 + C36178) * C153513 * C34885 +
            (C37416 + C37417) * C153513 * C153747) *
               C153477 -
           (C36522 * C153747 + C36523 * C34885 +
            (C35193 + C35192) * C153513 * C34884 +
            (C35191 + C35190) * C153513 * C34883) *
               C153725) *
              C153796 +
          ((C35210 * C34883 + C35211 * C34884 +
            (C35197 + C35196) * C153513 * C34885 +
            (C36528 + C36529) * C153513 * C153747) *
               C153725 -
           ((C34889 * C29033 + C37408 + C37408 + C153348 * C29037 +
             C34887 * C29032 + C37409 + C37409 + C153705 * C29036) *
                C153513 * C153747 +
            (C37417 + C37416) * C153513 * C34885 + C37410 * C34884 +
            C37411 * C34883) *
               C153477) *
              C1509) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C11268 * C144 + C11277 + C11277 + C11262 * C160 + C11270 * C145 +
             C11278 + C11278 + C11263 * C161 + C11272 * C146 + C11279 + C11279 +
             C11264 * C162 + C11274 * C147 + C11280 + C11280 + C153738 * C163) *
                C153513 * C153739 +
            (C11583 + C11584 + C11585 + C11586) * C153513 * C153560) *
               C153725 -
           ((C12543 + C12544 + C12545 + C12546) * C153513 * C153560 +
            (C11274 * C497 + C11797 + C11797 + C153738 * C521 + C11272 * C498 +
             C11798 + C11798 + C11264 * C522 + C11270 * C499 + C11799 + C11799 +
             C11263 * C523 + C11268 * C500 + C11800 + C11800 + C11262 * C524) *
                C153513 * C153739) *
               C153477) *
              C153795 +
          (((C12546 + C12545 + C12544 + C12543) * C153513 * C153739 +
            (C13783 + C13784 + C13785 + C13786) * C153513 * C153560) *
               C153477 -
           ((C11587 + C11588 + C11589 + C11590) * C153513 * C153560 +
            (C11586 + C11585 + C11584 + C11583) * C153513 * C153739) *
               C153725) *
              C153796 +
          (((C11590 + C11589 + C11588 + C11587) * C153513 * C153739 +
            (C12895 + C12896 + C12897 + C12898) * C153513 * C153560) *
               C153725 -
           ((C11274 * C4146 + C13771 + C13771 + C153738 * C4154 +
             C11272 * C4145 + C13772 + C13772 + C11264 * C4153 +
             C11270 * C4144 + C13773 + C13773 + C11263 * C4152 +
             C11268 * C4143 + C13774 + C13774 + C11262 * C4151) *
                C153513 * C153560 +
            (C13786 + C13785 + C13784 + C13783) * C153513 * C153739) *
               C153477) *
              C1509) *
         C153378) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C34887 * C144 + C34892 + C34892 + C153705 * C160 + C34889 * C145 +
              C34893 + C34893 + C153348 * C161) *
                 C47673 +
             (C39432 + C39433) * C47674 + C58686 * C153777) *
                C153739 +
            ((C35190 + C35191) * C47673 + C40446 * C47674 + C41230 * C153777) *
                C153560) *
               C153725 -
           ((C60478 * C153777 + C41229 * C47674 + C40447 * C47673) * C153560 +
            ((C43011 + C43010) * C153777 + (C39434 + C39435) * C47674 +
             (C39433 + C39432) * C47673) *
                C153739) *
               C153477) *
              C153795 +
          (((C40446 * C47673 + C41230 * C47674 + C60479 * C153777) * C153739 +
            (C39081 * C47673 + C41235 * C47674 + (C41250 + C41251) * C153777) *
                C153560) *
               C153477 -
           ((C41228 * C153777 + C37403 * C47674 + (C35193 + C35192) * C47673) *
                C153560 +
            (C41229 * C153777 + C40447 * C47674 + (C35191 + C35190) * C47673) *
                C153739) *
               C153725) *
              C153796 +
          (((C35206 * C47673 + C39081 * C47674 + C41235 * C153777) * C153739 +
            (C35207 * C47673 + C42220 * C47674 + (C36754 + C36755) * C153777) *
                C153560) *
               C153725 -
           (((C34889 * C32070 + C37936 + C37936 + C153348 * C32072 +
              C34887 * C30195 + C37937 + C37937 + C153705 * C30199) *
                 C153777 +
             (C36755 + C36754) * C47674 + C37402 * C47673) *
                C153560 +
            ((C41251 + C41250) * C153777 + C41228 * C47674 + C37403 * C47673) *
                C153739) *
               C153477) *
              C1509) *
         C153378) /
            (p * q * std::sqrt(p + q));
    d2ee[157] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C11268 * C144 + C11277 + C11277 + C11262 * C160 +
                 C11270 * C145 + C11278 + C11278 + C11263 * C161 +
                 C11272 * C146 + C11279 + C11279 + C11264 * C162 +
                 C11274 * C147 + C11280 + C11280 + C153738 * C163) *
                    C153513 * C153739 +
                (C11583 + C11584 + C11585 + C11586) * C153513 * C153560) *
                   C153413 * C1131 -
               ((C11587 + C11588 + C11589 + C11590) * C153513 * C153560 +
                (C11586 + C11585 + C11584 + C11583) * C153513 * C153739) *
                   C153413 * C153449) *
                  C1133 +
              (((C11591 + C11592 + C11593 + C11594) * C153513 * C153739 +
                (C11595 + C11596 + C11597 + C11598) * C153513 * C153560) *
                   C153413 * C153449 -
               ((C11594 + C11593 + C11592 + C11591) * C153513 * C153560 +
                (C11274 * C148 + C11289 + C11289 + C153738 * C164 +
                 C11272 * C147 + C11290 + C11290 + C11264 * C163 +
                 C11270 * C146 + C11291 + C11291 + C11263 * C162 +
                 C11268 * C145 + C11292 + C11292 + C11262 * C161) *
                    C153513 * C153739) *
                   C153413 * C1131) *
                  C1134 +
              (((C11268 * C146 + C11293 + C11293 + C11262 * C162 +
                 C11270 * C147 + C11294 + C11294 + C11263 * C163 +
                 C11272 * C148 + C11295 + C11295 + C11264 * C164 +
                 C11274 * C149 + C11296 + C11296 + C153738 * C165) *
                    C153513 * C153739 +
                (C12039 + C12040 + C12041 + C12042) * C153513 * C153560) *
                   C153413 * C1131 -
               ((C11274 * C326 + C12027 + C12027 + C153738 * C350 +
                 C11272 * C324 + C12028 + C12028 + C11264 * C348 +
                 C11270 * C323 + C12029 + C12029 + C11263 * C347 +
                 C11268 * C322 + C12030 + C12030 + C11262 * C346) *
                    C153513 * C153560 +
                (C12042 + C12041 + C12040 + C12039) * C153513 * C153739) *
                   C153413 * C153449) *
                  C1135) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((C11268 * C144 + C11277 + C11277 + C11262 * C160 +
                C11270 * C145 + C11278 + C11278 + C11263 * C161 +
                C11272 * C146 + C11279 + C11279 + C11264 * C162 +
                C11274 * C147 + C11280 + C11280 + C153738 * C163) *
                   C153513 * C153739 +
               (C11583 + C11584 + C11585 + C11586) * C153513 * C153560) *
                  C153413 * C1218 -
              ((C11587 + C11588 + C11589 + C11590) * C153513 * C153560 +
               (C11586 + C11585 + C11584 + C11583) * C153513 * C153739) *
                  C153413 * C1219 +
              ((C11590 + C11589 + C11588 + C11587) * C153513 * C153739 +
               (C12895 + C12896 + C12897 + C12898) * C153513 * C153560) *
                  C153413 * C1220 -
              ((C11274 * C2992 + C12883 + C12883 + C153738 * C3000 +
                C11272 * C2991 + C12884 + C12884 + C11264 * C2999 +
                C11270 * C2990 + C12885 + C12885 + C11263 * C2998 +
                C11268 * C2989 + C12886 + C12886 + C11262 * C2997) *
                   C153513 * C153560 +
               (C12898 + C12897 + C12896 + C12895) * C153513 * C153739) *
                  C153413 * C1221) *
             C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C11268 * C144 + C11277 + C11277 + C11262 * C160 + C11270 * C145 +
             C11278 + C11278 + C11263 * C161 + C11272 * C146 + C11279 + C11279 +
             C11264 * C162 + C11274 * C147 + C11280 + C11280 + C153738 * C163) *
                C153513 * C153739 +
            (C11583 + C11584 + C11585 + C11586) * C153513 * C153560) *
               C493 -
           ((C12543 + C12544 + C12545 + C12546) * C153513 * C153560 +
            (C11274 * C497 + C11797 + C11797 + C153738 * C521 + C11272 * C498 +
             C11798 + C11798 + C11264 * C522 + C11270 * C499 + C11799 + C11799 +
             C11263 * C523 + C11268 * C500 + C11800 + C11800 + C11262 * C524) *
                C153513 * C153739) *
               C494 +
           ((C11268 * C501 + C11801 + C11801 + C11262 * C525 + C11270 * C502 +
             C11802 + C11802 + C11263 * C526 + C11272 * C503 + C11803 + C11803 +
             C11264 * C527 + C11274 * C504 + C11804 + C11804 + C153738 * C528) *
                C153513 * C153739 +
            (C13113 + C13114 + C13115 + C13116) * C153513 * C153560) *
               C495) *
              C1131 +
          (((C12546 + C12545 + C12544 + C12543) * C153513 * C153739 +
            (C11268 * C1800 + C12511 + C12511 + C11262 * C1810 +
             C11270 * C1799 + C12512 + C12512 + C11263 * C1809 +
             C11272 * C1798 + C12513 + C12513 + C11264 * C1808 +
             C11274 * C1797 + C12514 + C12514 + C153738 * C1807) *
                C153513 * C153560) *
               C494 -
           ((C11587 + C11588 + C11589 + C11590) * C153513 * C153560 +
            (C11586 + C11585 + C11584 + C11583) * C153513 * C153739) *
               C493 -
           ((C11274 * C3330 + C13101 + C13101 + C153738 * C3338 +
             C11272 * C3329 + C13102 + C13102 + C11264 * C3337 +
             C11270 * C3328 + C13103 + C13103 + C11263 * C3336 +
             C11268 * C3327 + C13104 + C13104 + C11262 * C3335) *
                C153513 * C153560 +
            (C13116 + C13115 + C13114 + C13113) * C153513 * C153739) *
               C495) *
              C153449) *
         C153378) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C34887 * C144 + C34892 + C34892 + C153705 * C160 + C34889 * C145 +
             C34893 + C34893 + C153348 * C161) *
                C153513 * C34883 +
            (C35190 + C35191) * C153513 * C34884 + C35210 * C34885 +
            C35211 * C153747) *
               C153413 * C1131 -
           ((C35196 + C35197) * C153513 * C153747 +
            (C35195 + C35194) * C153513 * C34885 +
            (C35193 + C35192) * C153513 * C34884 +
            (C35191 + C35190) * C153513 * C34883) *
               C153413 * C153449) *
              C1133 +
          (((C35198 + C35199) * C153513 * C34883 +
            (C35200 + C35201) * C153513 * C34884 +
            (C35202 + C35203) * C153513 * C34885 +
            (C35204 + C35205) * C153513 * C153747) *
               C153413 * C153449 -
           (C35212 * C153747 + C35213 * C34885 +
            (C35199 + C35198) * C153513 * C34884 +
            (C34889 * C146 + C34906 + C34906 + C153348 * C162 + C34887 * C145 +
             C34907 + C34907 + C153705 * C161) *
                C153513 * C34883) *
               C153413 * C1131) *
              C1134 +
          (((C34887 * C146 + C34908 + C34908 + C153705 * C162 + C34889 * C147 +
             C34909 + C34909 + C153348 * C163) *
                C153513 * C34883 +
            (C35660 + C35661) * C153513 * C34884 +
            (C35662 + C35663) * C153513 * C34885 +
            (C35664 + C35665) * C153513 * C153747) *
               C153413 * C1131 -
           ((C34889 * C2992 + C35646 + C35646 + C153348 * C3000 +
             C34887 * C2991 + C35647 + C35647 + C153705 * C2999) *
                C153513 * C153747 +
            (C35665 + C35664) * C153513 * C34885 +
            (C35663 + C35662) * C153513 * C34884 +
            (C35661 + C35660) * C153513 * C34883) *
               C153413 * C153449) *
              C1135)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C34887 * C144 + C34892 + C34892 + C153705 * C160 + C34889 * C145 +
            C34893 + C34893 + C153348 * C161) *
               C153513 * C34883 +
           (C35190 + C35191) * C153513 * C34884 + C35210 * C34885 +
           C35211 * C153747) *
              C153413 * C1218 -
          (C36522 * C153747 + C36523 * C34885 +
           (C35193 + C35192) * C153513 * C34884 +
           (C35191 + C35190) * C153513 * C34883) *
              C153413 * C1219 +
          (C35210 * C34883 + C35211 * C34884 +
           (C35197 + C35196) * C153513 * C34885 +
           (C36528 + C36529) * C153513 * C153747) *
              C153413 * C1220 -
          ((C34889 * C28379 + C36520 + C36520 + C153348 * C28383 +
            C34887 * C28378 + C36521 + C36521 + C153705 * C28382) *
               C153513 * C153747 +
           (C36529 + C36528) * C153513 * C34885 + C36522 * C34884 +
           C36523 * C34883) *
              C153413 * C1221) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C34887 * C144 + C34892 + C34892 + C153705 * C160 + C34889 * C145 +
             C34893 + C34893 + C153348 * C161) *
                C153513 * C34883 +
            (C35190 + C35191) * C153513 * C34884 + C35210 * C34885 +
            C35211 * C153747) *
               C493 -
           ((C36178 + C36179) * C153513 * C153747 +
            (C36180 + C36181) * C153513 * C34885 +
            (C36182 + C36183) * C153513 * C34884 +
            (C34889 * C499 + C35414 + C35414 + C153348 * C523 + C34887 * C500 +
             C35415 + C35415 + C153705 * C524) *
                C153513 * C34883) *
               C494 +
           ((C34887 * C501 + C35416 + C35416 + C153705 * C525 + C34889 * C502 +
             C35417 + C35417 + C153348 * C526) *
                C153513 * C34883 +
            (C36750 + C36751) * C153513 * C34884 +
            (C36752 + C36753) * C153513 * C34885 +
            (C36754 + C36755) * C153513 * C153747) *
               C495) *
              C1131 +
          (((C36183 + C36182) * C153513 * C34883 +
            (C36181 + C36180) * C153513 * C34884 +
            (C36179 + C36178) * C153513 * C34885 +
            (C34887 * C5603 + C36138 + C36138 + C153705 * C5609 +
             C34889 * C5602 + C36139 + C36139 + C153348 * C5608) *
                C153513 * C153747) *
               C494 -
           (C36522 * C153747 + C36523 * C34885 +
            (C35193 + C35192) * C153513 * C34884 +
            (C35191 + C35190) * C153513 * C34883) *
               C493 -
           ((C34889 * C28571 + C36736 + C36736 + C153348 * C28575 +
             C34887 * C28570 + C36737 + C36737 + C153705 * C28574) *
                C153513 * C153747 +
            (C36755 + C36754) * C153513 * C34885 +
            (C36753 + C36752) * C153513 * C34884 +
            (C36751 + C36750) * C153513 * C34883) *
               C495) *
              C153449) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C34887 * C144 + C34892 + C34892 + C153705 * C160 + C34889 * C145 +
              C34893 + C34893 + C153348 * C161) *
                 C47673 +
             (C39432 + C39433) * C47674 + C58686 * C153777) *
                C153739 +
            ((C35190 + C35191) * C47673 + C40446 * C47674 + C41230 * C153777) *
                C153560) *
               C153413 * C1131 -
           ((C41228 * C153777 + C37403 * C47674 + (C35193 + C35192) * C47673) *
                C153560 +
            (C41229 * C153777 + C40447 * C47674 + (C35191 + C35190) * C47673) *
                C153739) *
               C153413 * C153449) *
              C1133 +
          ((((C35198 + C35199) * C47673 + C40448 * C47674 + C59703 * C153777) *
                C153739 +
            ((C35200 + C35201) * C47673 + C40449 * C47674 +
             (C39442 + C39443) * C153777) *
                C153560) *
               C153413 * C153449 -
           ((C58695 * C153777 + C40450 * C47674 + (C35199 + C35198) * C47673) *
                C153560 +
            (C58696 * C153777 + (C39437 + C39436) * C47674 +
             (C34889 * C146 + C34906 + C34906 + C153348 * C162 + C34887 * C145 +
              C34907 + C34907 + C153705 * C161) *
                 C47673) *
                C153739) *
               C153413 * C1131) *
              C1134 +
          ((((C34887 * C146 + C34908 + C34908 + C153705 * C162 + C34889 * C147 +
              C34909 + C34909 + C153348 * C163) *
                 C47673 +
             (C40058 + C40059) * C47674 + (C59315 + C59316) * C153777) *
                C153739 +
            ((C35660 + C35661) * C47673 + (C39750 + C39751) * C47674 +
             (C59011 + C59012) * C153777) *
                C153560) *
               C153413 * C1131 -
           (((C34889 * C3330 + C40048 + C40048 + C153348 * C3338 +
              C34887 * C3329 + C40049 + C40049 + C153705 * C3337) *
                 C153777 +
             (C39753 + C39752) * C47674 + (C35663 + C35662) * C47673) *
                C153560 +
            ((C59012 + C59011) * C153777 + (C39751 + C39750) * C47674 +
             (C35661 + C35660) * C47673) *
                C153739) *
               C153413 * C153449) *
              C1135)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C34887 * C144 + C34892 + C34892 + C153705 * C160 + C34889 * C145 +
             C34893 + C34893 + C153348 * C161) *
                C47673 +
            (C39432 + C39433) * C47674 + C58686 * C153777) *
               C153739 +
           ((C35190 + C35191) * C47673 + C40446 * C47674 + C41230 * C153777) *
               C153560) *
              C153413 * C1218 -
          ((C41228 * C153777 + C37403 * C47674 + (C35193 + C35192) * C47673) *
               C153560 +
           (C41229 * C153777 + C40447 * C47674 + (C35191 + C35190) * C47673) *
               C153739) *
              C153413 * C1219 +
          ((C35206 * C47673 + C39081 * C47674 + C41235 * C153777) * C153739 +
           (C35207 * C47673 + C42220 * C47674 + (C36754 + C36755) * C153777) *
               C153560) *
              C153413 * C1220 -
          (((C34889 * C28571 + C36736 + C36736 + C153348 * C28575 +
             C34887 * C28570 + C36737 + C36737 + C153705 * C28574) *
                C153777 +
            (C37417 + C37416) * C47674 + C36514 * C47673) *
               C153560 +
           ((C36755 + C36754) * C153777 + C37402 * C47674 + C36515 * C47673) *
               C153739) *
              C153413 * C1221) *
         C153378) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C34887 * C144 + C34892 + C34892 + C153705 * C160 + C34889 * C145 +
              C34893 + C34893 + C153348 * C161) *
                 C47673 +
             (C39432 + C39433) * C47674 + C58686 * C153777) *
                C153739 +
            ((C35190 + C35191) * C47673 + C40446 * C47674 + C41230 * C153777) *
                C153560) *
               C493 -
           ((C60478 * C153777 + C41229 * C47674 + C40447 * C47673) * C153560 +
            ((C43011 + C43010) * C153777 + (C39434 + C39435) * C47674 +
             (C39433 + C39432) * C47673) *
                C153739) *
               C494 +
           ((C58686 * C47673 + (C43010 + C43011) * C47674 +
             (C34887 * C7560 + C43005 + C43005 + C153705 * C7568 +
              C34889 * C7561 + C43004 + C43004 + C153348 * C7569) *
                 C153777) *
                C153739 +
            (C41230 * C47673 + C60479 * C47674 + (C60488 + C60489) * C153777) *
                C153560) *
               C495) *
              C1131 +
          (((C40446 * C47673 + C41230 * C47674 + C60479 * C153777) * C153739 +
            (C39081 * C47673 + C41235 * C47674 + (C41250 + C41251) * C153777) *
                C153560) *
               C494 -
           ((C41228 * C153777 + C37403 * C47674 + (C35193 + C35192) * C47673) *
                C153560 +
            (C41229 * C153777 + C40447 * C47674 + (C35191 + C35190) * C47673) *
                C153739) *
               C493 -
           (((C34889 * C31240 + C43000 + C43000 + C153348 * C31244 +
              C34887 * C31239 + C43001 + C43001 + C153705 * C31243) *
                 C153777 +
             (C41251 + C41250) * C47674 + C41228 * C47673) *
                C153560 +
            ((C60489 + C60488) * C153777 + C60478 * C47674 + C41229 * C47673) *
                C153739) *
               C495) *
              C153449) *
         C153378) /
            (p * q * std::sqrt(p + q));
    d2ee[158] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C34887 * C144 + C34892 + C34892 + C153705 * C160 + C34889 * C145 +
              C34893 + C34893 + C153348 * C161) *
                 C153513 * C34883 +
             (C35190 + C35191) * C153513 * C34884 + C35210 * C34885 +
             C35211 * C153747) *
                C153725 -
            ((C36178 + C36179) * C153513 * C153747 +
             (C36180 + C36181) * C153513 * C34885 +
             (C36182 + C36183) * C153513 * C34884 +
             (C34889 * C499 + C35414 + C35414 + C153348 * C523 + C34887 * C500 +
              C35415 + C35415 + C153705 * C524) *
                 C153513 * C34883) *
                C153477) *
               C1131 +
           (((C36183 + C36182) * C153513 * C34883 +
             (C36181 + C36180) * C153513 * C34884 +
             (C36179 + C36178) * C153513 * C34885 +
             (C34887 * C5603 + C36138 + C36138 + C153705 * C5609 +
              C34889 * C5602 + C36139 + C36139 + C153348 * C5608) *
                 C153513 * C153747) *
                C153477 -
            (C36522 * C153747 + C36523 * C34885 +
             (C35193 + C35192) * C153513 * C34884 +
             (C35191 + C35190) * C153513 * C34883) *
                C153725) *
               C153449) *
              C153716 +
          ((((C34887 * C499 + C35424 + C35424 + C153705 * C523 + C34889 * C498 +
              C35425 + C35425 + C153348 * C522) *
                 C153513 * C34883 +
             (C36184 + C36185) * C153513 * C34884 +
             (C36186 + C36187) * C153513 * C34885 +
             (C36188 + C36189) * C153513 * C153747) *
                C153477 -
            (C35212 * C153747 + C35213 * C34885 +
             (C35199 + C35198) * C153513 * C34884 +
             (C34889 * C146 + C34906 + C34906 + C153348 * C162 + C34887 * C145 +
              C34907 + C34907 + C153705 * C161) *
                 C153513 * C34883) *
                C153725) *
               C1131 +
           (((C35198 + C35199) * C153513 * C34883 +
             (C35200 + C35201) * C153513 * C34884 +
             (C35202 + C35203) * C153513 * C34885 +
             (C35204 + C35205) * C153513 * C153747) *
                C153725 -
            ((C34889 * C5601 + C36152 + C36152 + C153348 * C5607 +
              C34887 * C5602 + C36153 + C36153 + C153705 * C5608) *
                 C153513 * C153747 +
             (C36189 + C36188) * C153513 * C34885 +
             (C36187 + C36186) * C153513 * C34884 +
             (C36185 + C36184) * C153513 * C34883) *
                C153477) *
               C153449) *
              C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C11268 * C144 + C11277 + C11277 + C11262 * C160 + C11270 * C145 +
              C11278 + C11278 + C11263 * C161 + C11272 * C146 + C11279 +
              C11279 + C11264 * C162 + C11274 * C147 + C11280 + C11280 +
              C153738 * C163) *
                 C153513 * C153739 +
             (C11583 + C11584 + C11585 + C11586) * C153513 * C153560) *
                C153725 -
            ((C12543 + C12544 + C12545 + C12546) * C153513 * C153560 +
             (C11274 * C497 + C11797 + C11797 + C153738 * C521 + C11272 * C498 +
              C11798 + C11798 + C11264 * C522 + C11270 * C499 + C11799 +
              C11799 + C11263 * C523 + C11268 * C500 + C11800 + C11800 +
              C11262 * C524) *
                 C153513 * C153739) *
                C153477) *
               C1131 +
           (((C12546 + C12545 + C12544 + C12543) * C153513 * C153739 +
             (C11268 * C1800 + C12511 + C12511 + C11262 * C1810 +
              C11270 * C1799 + C12512 + C12512 + C11263 * C1809 +
              C11272 * C1798 + C12513 + C12513 + C11264 * C1808 +
              C11274 * C1797 + C12514 + C12514 + C153738 * C1807) *
                 C153513 * C153560) *
                C153477 -
            ((C11587 + C11588 + C11589 + C11590) * C153513 * C153560 +
             (C11586 + C11585 + C11584 + C11583) * C153513 * C153739) *
                C153725) *
               C153449) *
              C153716 +
          ((((C11268 * C499 + C11809 + C11809 + C11262 * C523 + C11270 * C498 +
              C11810 + C11810 + C11263 * C522 + C11272 * C497 + C11811 +
              C11811 + C11264 * C521 + C11274 * C496 + C11812 + C11812 +
              C153738 * C520) *
                 C153513 * C153739 +
             (C12547 + C12548 + C12549 + C12550) * C153513 * C153560) *
                C153477 -
            ((C11594 + C11593 + C11592 + C11591) * C153513 * C153560 +
             (C11274 * C148 + C11289 + C11289 + C153738 * C164 + C11272 * C147 +
              C11290 + C11290 + C11264 * C163 + C11270 * C146 + C11291 +
              C11291 + C11263 * C162 + C11268 * C145 + C11292 + C11292 +
              C11262 * C161) *
                 C153513 * C153739) *
                C153725) *
               C1131 +
           (((C11591 + C11592 + C11593 + C11594) * C153513 * C153739 +
             (C11595 + C11596 + C11597 + C11598) * C153513 * C153560) *
                C153725 -
            ((C11274 * C1796 + C12523 + C12523 + C153738 * C1806 +
              C11272 * C1797 + C12524 + C12524 + C11264 * C1807 +
              C11270 * C1798 + C12525 + C12525 + C11263 * C1808 +
              C11268 * C1799 + C12526 + C12526 + C11262 * C1809) *
                 C153513 * C153560 +
             (C12550 + C12549 + C12548 + C12547) * C153513 * C153739) *
                C153477) *
               C153449) *
              C153384)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C34887 * C144 + C34892 + C34892 + C153705 * C160 +
               C34889 * C145 + C34893 + C34893 + C153348 * C161) *
                  C47673 +
              (C39432 + C39433) * C47674 + C58686 * C153777) *
                 C153739 +
             ((C35190 + C35191) * C47673 + C40446 * C47674 + C41230 * C153777) *
                 C153560) *
                C153725 -
            ((C60478 * C153777 + C41229 * C47674 + C40447 * C47673) * C153560 +
             ((C43011 + C43010) * C153777 + (C39434 + C39435) * C47674 +
              (C39433 + C39432) * C47673) *
                 C153739) *
                C153477) *
               C1131 +
           (((C40446 * C47673 + C41230 * C47674 + C60479 * C153777) * C153739 +
             (C39081 * C47673 + C41235 * C47674 + (C41250 + C41251) * C153777) *
                 C153560) *
                C153477 -
            ((C41228 * C153777 + C37403 * C47674 + (C35193 + C35192) * C47673) *
                 C153560 +
             (C41229 * C153777 + C40447 * C47674 + (C35191 + C35190) * C47673) *
                 C153739) *
                C153725) *
               C153449) *
              C153716 +
          (((((C39436 + C39437) * C47673 + (C39438 + C39439) * C47674 +
              (C58709 + C58710) * C153777) *
                 C153739 +
             (C40448 * C47673 + C59703 * C47674 + (C58711 + C58712) * C153777) *
                 C153560) *
                C153477 -
            ((C58695 * C153777 + C40450 * C47674 + (C35199 + C35198) * C47673) *
                 C153560 +
             (C58696 * C153777 + (C39437 + C39436) * C47674 +
              (C34889 * C146 + C34906 + C34906 + C153348 * C162 +
               C34887 * C145 + C34907 + C34907 + C153705 * C161) *
                  C47673) *
                 C153739) *
                C153725) *
               C1131 +
           ((((C35198 + C35199) * C47673 + C40448 * C47674 + C59703 * C153777) *
                 C153739 +
             ((C35200 + C35201) * C47673 + C40449 * C47674 +
              (C39442 + C39443) * C153777) *
                 C153560) *
                C153725 -
            (((C34889 * C6213 + C39402 + C39402 + C153348 * C6225 +
               C34887 * C6214 + C39403 + C39403 + C153705 * C6226) *
                  C153777 +
              (C39443 + C39442) * C47674 + C39082 * C47673) *
                 C153560 +
             ((C58712 + C58711) * C153777 + C58695 * C47674 + C40450 * C47673) *
                 C153739) *
                C153477) *
               C153449) *
              C153384)) /
            (p * q * std::sqrt(p + q));
    d2ee[159] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C11268 * C144 + C11277 + C11277 + C11262 * C160 + C11270 * C145 +
            C11278 + C11278 + C11263 * C161 + C11272 * C146 + C11279 + C11279 +
            C11264 * C162 + C11274 * C147 + C11280 + C11280 + C153738 * C163) *
               C153513 * C153739 +
           (C11583 + C11584 + C11585 + C11586) * C153513 * C153560) *
              C153413 * C1218 -
          ((C11587 + C11588 + C11589 + C11590) * C153513 * C153560 +
           (C11586 + C11585 + C11584 + C11583) * C153513 * C153739) *
              C153413 * C1219 +
          ((C11590 + C11589 + C11588 + C11587) * C153513 * C153739 +
           (C12895 + C12896 + C12897 + C12898) * C153513 * C153560) *
              C153413 * C1220 -
          ((C11274 * C2992 + C12883 + C12883 + C153738 * C3000 +
            C11272 * C2991 + C12884 + C12884 + C11264 * C2999 + C11270 * C2990 +
            C12885 + C12885 + C11263 * C2998 + C11268 * C2989 + C12886 +
            C12886 + C11262 * C2997) *
               C153513 * C153560 +
           (C12898 + C12897 + C12896 + C12895) * C153513 * C153739) *
              C153413 * C1221) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C11268 * C144 + C11277 + C11277 + C11262 * C160 + C11270 * C145 +
             C11278 + C11278 + C11263 * C161 + C11272 * C146 + C11279 + C11279 +
             C11264 * C162 + C11274 * C147 + C11280 + C11280 + C153738 * C163) *
                C153513 * C153739 +
            (C11583 + C11584 + C11585 + C11586) * C153513 * C153560) *
               C153413 * C1131 -
           ((C11587 + C11588 + C11589 + C11590) * C153513 * C153560 +
            (C11586 + C11585 + C11584 + C11583) * C153513 * C153739) *
               C153413 * C153449) *
              C1133 +
          (((C11591 + C11592 + C11593 + C11594) * C153513 * C153739 +
            (C11595 + C11596 + C11597 + C11598) * C153513 * C153560) *
               C153413 * C153449 -
           ((C11594 + C11593 + C11592 + C11591) * C153513 * C153560 +
            (C11274 * C148 + C11289 + C11289 + C153738 * C164 + C11272 * C147 +
             C11290 + C11290 + C11264 * C163 + C11270 * C146 + C11291 + C11291 +
             C11263 * C162 + C11268 * C145 + C11292 + C11292 + C11262 * C161) *
                C153513 * C153739) *
               C153413 * C1131) *
              C1134 +
          (((C11268 * C146 + C11293 + C11293 + C11262 * C162 + C11270 * C147 +
             C11294 + C11294 + C11263 * C163 + C11272 * C148 + C11295 + C11295 +
             C11264 * C164 + C11274 * C149 + C11296 + C11296 + C153738 * C165) *
                C153513 * C153739 +
            (C12039 + C12040 + C12041 + C12042) * C153513 * C153560) *
               C153413 * C1131 -
           ((C11274 * C326 + C12027 + C12027 + C153738 * C350 + C11272 * C324 +
             C12028 + C12028 + C11264 * C348 + C11270 * C323 + C12029 + C12029 +
             C11263 * C347 + C11268 * C322 + C12030 + C12030 + C11262 * C346) *
                C153513 * C153560 +
            (C12042 + C12041 + C12040 + C12039) * C153513 * C153739) *
               C153413 * C153449) *
              C1135)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C34887 * C144 + C34892 + C34892 + C153705 * C160 + C34889 * C145 +
             C34893 + C34893 + C153348 * C161) *
                C153513 * C34883 +
            (C35190 + C35191) * C153513 * C34884 + C35210 * C34885 +
            C35211 * C153747) *
               C153413 * C1131 -
           ((C35196 + C35197) * C153513 * C153747 +
            (C35195 + C35194) * C153513 * C34885 +
            (C35193 + C35192) * C153513 * C34884 +
            (C35191 + C35190) * C153513 * C34883) *
               C153413 * C153449) *
              C1133 +
          (((C35198 + C35199) * C153513 * C34883 +
            (C35200 + C35201) * C153513 * C34884 +
            (C35202 + C35203) * C153513 * C34885 +
            (C35204 + C35205) * C153513 * C153747) *
               C153413 * C153449 -
           (C35212 * C153747 + C35213 * C34885 +
            (C35199 + C35198) * C153513 * C34884 +
            (C34889 * C146 + C34906 + C34906 + C153348 * C162 + C34887 * C145 +
             C34907 + C34907 + C153705 * C161) *
                C153513 * C34883) *
               C153413 * C1131) *
              C1134 +
          (((C34887 * C146 + C34908 + C34908 + C153705 * C162 + C34889 * C147 +
             C34909 + C34909 + C153348 * C163) *
                C153513 * C34883 +
            (C35660 + C35661) * C153513 * C34884 +
            (C35662 + C35663) * C153513 * C34885 +
            (C35664 + C35665) * C153513 * C153747) *
               C153413 * C1131 -
           ((C34889 * C2992 + C35646 + C35646 + C153348 * C3000 +
             C34887 * C2991 + C35647 + C35647 + C153705 * C2999) *
                C153513 * C153747 +
            (C35665 + C35664) * C153513 * C34885 +
            (C35663 + C35662) * C153513 * C34884 +
            (C35661 + C35660) * C153513 * C34883) *
               C153413 * C153449) *
              C1135)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C34887 * C144 + C34892 + C34892 + C153705 * C160 + C34889 * C145 +
            C34893 + C34893 + C153348 * C161) *
               C153513 * C34883 +
           (C35190 + C35191) * C153513 * C34884 + C35210 * C34885 +
           C35211 * C153747) *
              C153413 * C1218 -
          (C36522 * C153747 + C36523 * C34885 +
           (C35193 + C35192) * C153513 * C34884 +
           (C35191 + C35190) * C153513 * C34883) *
              C153413 * C1219 +
          (C35210 * C34883 + C35211 * C34884 +
           (C35197 + C35196) * C153513 * C34885 +
           (C36528 + C36529) * C153513 * C153747) *
              C153413 * C1220 -
          ((C34889 * C28379 + C36520 + C36520 + C153348 * C28383 +
            C34887 * C28378 + C36521 + C36521 + C153705 * C28382) *
               C153513 * C153747 +
           (C36529 + C36528) * C153513 * C34885 + C36522 * C34884 +
           C36523 * C34883) *
              C153413 * C1221) *
         C153378) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C34887 * C144 + C34892 + C34892 + C153705 * C160 + C34889 * C145 +
              C34893 + C34893 + C153348 * C161) *
                 C47673 +
             (C39432 + C39433) * C47674 + C58686 * C153777) *
                C153739 +
            ((C35190 + C35191) * C47673 + C40446 * C47674 + C41230 * C153777) *
                C153560) *
               C153413 * C1131 -
           ((C41228 * C153777 + C37403 * C47674 + (C35193 + C35192) * C47673) *
                C153560 +
            (C41229 * C153777 + C40447 * C47674 + (C35191 + C35190) * C47673) *
                C153739) *
               C153413 * C153449) *
              C1133 +
          ((((C35198 + C35199) * C47673 + C40448 * C47674 + C59703 * C153777) *
                C153739 +
            ((C35200 + C35201) * C47673 + C40449 * C47674 +
             (C39442 + C39443) * C153777) *
                C153560) *
               C153413 * C153449 -
           ((C58695 * C153777 + C40450 * C47674 + (C35199 + C35198) * C47673) *
                C153560 +
            (C58696 * C153777 + (C39437 + C39436) * C47674 +
             (C34889 * C146 + C34906 + C34906 + C153348 * C162 + C34887 * C145 +
              C34907 + C34907 + C153705 * C161) *
                 C47673) *
                C153739) *
               C153413 * C1131) *
              C1134 +
          ((((C34887 * C146 + C34908 + C34908 + C153705 * C162 + C34889 * C147 +
              C34909 + C34909 + C153348 * C163) *
                 C47673 +
             (C40058 + C40059) * C47674 + (C59315 + C59316) * C153777) *
                C153739 +
            ((C35660 + C35661) * C47673 + (C39750 + C39751) * C47674 +
             (C59011 + C59012) * C153777) *
                C153560) *
               C153413 * C1131 -
           (((C34889 * C3330 + C40048 + C40048 + C153348 * C3338 +
              C34887 * C3329 + C40049 + C40049 + C153705 * C3337) *
                 C153777 +
             (C39753 + C39752) * C47674 + (C35663 + C35662) * C47673) *
                C153560 +
            ((C59012 + C59011) * C153777 + (C39751 + C39750) * C47674 +
             (C35661 + C35660) * C47673) *
                C153739) *
               C153413 * C153449) *
              C1135)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C34887 * C144 + C34892 + C34892 + C153705 * C160 + C34889 * C145 +
             C34893 + C34893 + C153348 * C161) *
                C47673 +
            (C39432 + C39433) * C47674 + C58686 * C153777) *
               C153739 +
           ((C35190 + C35191) * C47673 + C40446 * C47674 + C41230 * C153777) *
               C153560) *
              C153413 * C1218 -
          ((C41228 * C153777 + C37403 * C47674 + (C35193 + C35192) * C47673) *
               C153560 +
           (C41229 * C153777 + C40447 * C47674 + (C35191 + C35190) * C47673) *
               C153739) *
              C153413 * C1219 +
          ((C35206 * C47673 + C39081 * C47674 + C41235 * C153777) * C153739 +
           (C35207 * C47673 + C42220 * C47674 + (C36754 + C36755) * C153777) *
               C153560) *
              C153413 * C1220 -
          (((C34889 * C28571 + C36736 + C36736 + C153348 * C28575 +
             C34887 * C28570 + C36737 + C36737 + C153705 * C28574) *
                C153777 +
            (C37417 + C37416) * C47674 + C36514 * C47673) *
               C153560 +
           ((C36755 + C36754) * C153777 + C37402 * C47674 + C36515 * C47673) *
               C153739) *
              C153413 * C1221) *
         C153378) /
            (p * q * std::sqrt(p + q));
    d2ee[160] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C34887 * C144 + C34892 + C34892 + C153705 * C160 + C34889 * C145 +
              C34893 + C34893 + C153348 * C161) *
                 C153513 * C34883 +
             (C35190 + C35191) * C153513 * C34884 + C35210 * C34885 +
             C35211 * C153747) *
                C1938 -
            (C37410 * C153747 + C37411 * C34885 +
             (C36182 + C36183) * C153513 * C34884 +
             (C34889 * C499 + C35414 + C35414 + C153348 * C523 + C34887 * C500 +
              C35415 + C35415 + C153705 * C524) *
                 C153513 * C34883) *
                C153477) *
               C153724 +
           (((C36183 + C36182) * C153513 * C34883 +
             (C36181 + C36180) * C153513 * C34884 +
             (C36179 + C36178) * C153513 * C34885 +
             (C37416 + C37417) * C153513 * C153747) *
                C153477 -
            (C36522 * C153747 + C36523 * C34885 +
             (C35193 + C35192) * C153513 * C34884 +
             (C35191 + C35190) * C153513 * C34883) *
                C1938) *
               C153449) *
              C153716 +
          ((((C34887 * C499 + C35424 + C35424 + C153705 * C523 + C34889 * C498 +
              C35425 + C35425 + C153348 * C522) *
                 C153513 * C34883 +
             (C36184 + C36185) * C153513 * C34884 +
             (C36186 + C36187) * C153513 * C34885 +
             (C36188 + C36189) * C153513 * C153747) *
                C153477 -
            (C35212 * C153747 + C35213 * C34885 +
             (C35199 + C35198) * C153513 * C34884 +
             (C34889 * C146 + C34906 + C34906 + C153348 * C162 + C34887 * C145 +
              C34907 + C34907 + C153705 * C161) *
                 C153513 * C34883) *
                C1938) *
               C153724 +
           (((C35198 + C35199) * C153513 * C34883 +
             (C35200 + C35201) * C153513 * C34884 +
             (C35202 + C35203) * C153513 * C34885 +
             (C35204 + C35205) * C153513 * C153747) *
                C1938 -
            ((C34889 * C5601 + C36152 + C36152 + C153348 * C5607 +
              C34887 * C5602 + C36153 + C36153 + C153705 * C5608) *
                 C153513 * C153747 +
             (C36189 + C36188) * C153513 * C34885 +
             (C36187 + C36186) * C153513 * C34884 +
             (C36185 + C36184) * C153513 * C34883) *
                C153477) *
               C153449) *
              C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C11268 * C144 + C11277 + C11277 + C11262 * C160 + C11270 * C145 +
              C11278 + C11278 + C11263 * C161 + C11272 * C146 + C11279 +
              C11279 + C11264 * C162 + C11274 * C147 + C11280 + C11280 +
              C153738 * C163) *
                 C153513 * C153739 +
             (C11583 + C11584 + C11585 + C11586) * C153513 * C153560) *
                C1938 -
            ((C12543 + C12544 + C12545 + C12546) * C153513 * C153560 +
             (C11274 * C497 + C11797 + C11797 + C153738 * C521 + C11272 * C498 +
              C11798 + C11798 + C11264 * C522 + C11270 * C499 + C11799 +
              C11799 + C11263 * C523 + C11268 * C500 + C11800 + C11800 +
              C11262 * C524) *
                 C153513 * C153739) *
                C153477) *
               C153724 +
           (((C12546 + C12545 + C12544 + C12543) * C153513 * C153739 +
             (C13783 + C13784 + C13785 + C13786) * C153513 * C153560) *
                C153477 -
            ((C11587 + C11588 + C11589 + C11590) * C153513 * C153560 +
             (C11586 + C11585 + C11584 + C11583) * C153513 * C153739) *
                C1938) *
               C153449) *
              C153716 +
          ((((C11268 * C499 + C11809 + C11809 + C11262 * C523 + C11270 * C498 +
              C11810 + C11810 + C11263 * C522 + C11272 * C497 + C11811 +
              C11811 + C11264 * C521 + C11274 * C496 + C11812 + C11812 +
              C153738 * C520) *
                 C153513 * C153739 +
             (C12547 + C12548 + C12549 + C12550) * C153513 * C153560) *
                C153477 -
            ((C11594 + C11593 + C11592 + C11591) * C153513 * C153560 +
             (C11274 * C148 + C11289 + C11289 + C153738 * C164 + C11272 * C147 +
              C11290 + C11290 + C11264 * C163 + C11270 * C146 + C11291 +
              C11291 + C11263 * C162 + C11268 * C145 + C11292 + C11292 +
              C11262 * C161) *
                 C153513 * C153739) *
                C1938) *
               C153724 +
           (((C11591 + C11592 + C11593 + C11594) * C153513 * C153739 +
             (C11595 + C11596 + C11597 + C11598) * C153513 * C153560) *
                C1938 -
            ((C11274 * C1796 + C12523 + C12523 + C153738 * C1806 +
              C11272 * C1797 + C12524 + C12524 + C11264 * C1807 +
              C11270 * C1798 + C12525 + C12525 + C11263 * C1808 +
              C11268 * C1799 + C12526 + C12526 + C11262 * C1809) *
                 C153513 * C153560 +
             (C12550 + C12549 + C12548 + C12547) * C153513 * C153739) *
                C153477) *
               C153449) *
              C153384)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C34887 * C144 + C34892 + C34892 + C153705 * C160 +
               C34889 * C145 + C34893 + C34893 + C153348 * C161) *
                  C47673 +
              (C39432 + C39433) * C47674 + C58686 * C153777) *
                 C153739 +
             ((C35190 + C35191) * C47673 + C40446 * C47674 + C41230 * C153777) *
                 C153560) *
                C1938 -
            ((C60478 * C153777 + C41229 * C47674 + C40447 * C47673) * C153560 +
             (C62230 * C153777 + (C39434 + C39435) * C47674 +
              (C39433 + C39432) * C47673) *
                 C153739) *
                C153477) *
               C153724 +
           (((C40446 * C47673 + C41230 * C47674 + C60479 * C153777) * C153739 +
             (C39081 * C47673 + C41235 * C47674 + (C41250 + C41251) * C153777) *
                 C153560) *
                C153477 -
            ((C41228 * C153777 + C37403 * C47674 + (C35193 + C35192) * C47673) *
                 C153560 +
             (C41229 * C153777 + C40447 * C47674 + (C35191 + C35190) * C47673) *
                 C153739) *
                C1938) *
               C153449) *
              C153716 +
          (((((C39436 + C39437) * C47673 + (C39438 + C39439) * C47674 +
              (C58709 + C58710) * C153777) *
                 C153739 +
             (C40448 * C47673 + C59703 * C47674 + (C58711 + C58712) * C153777) *
                 C153560) *
                C153477 -
            ((C58695 * C153777 + C40450 * C47674 + (C35199 + C35198) * C47673) *
                 C153560 +
             (C58696 * C153777 + (C39437 + C39436) * C47674 +
              (C34889 * C146 + C34906 + C34906 + C153348 * C162 +
               C34887 * C145 + C34907 + C34907 + C153705 * C161) *
                  C47673) *
                 C153739) *
                C1938) *
               C153724 +
           ((((C35198 + C35199) * C47673 + C40448 * C47674 + C59703 * C153777) *
                 C153739 +
             ((C35200 + C35201) * C47673 + C40449 * C47674 +
              (C39442 + C39443) * C153777) *
                 C153560) *
                C1938 -
            (((C34889 * C6213 + C39402 + C39402 + C153348 * C6225 +
               C34887 * C6214 + C39403 + C39403 + C153705 * C6226) *
                  C153777 +
              (C39443 + C39442) * C47674 + C39082 * C47673) *
                 C153560 +
             ((C58712 + C58711) * C153777 + C58695 * C47674 + C40450 * C47673) *
                 C153739) *
                C153477) *
               C153449) *
              C153384)) /
            (p * q * std::sqrt(p + q));
    d2ee[161] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C34887 * C144 + C34892 + C34892 + C153705 * C160 + C34889 * C145 +
             C34893 + C34893 + C153348 * C161) *
                C153513 * C34883 +
            (C35190 + C35191) * C153513 * C34884 + C35210 * C34885 +
            C35211 * C153747) *
               C153797 -
           (C37410 * C153747 + C37411 * C34885 +
            (C36182 + C36183) * C153513 * C34884 +
            (C34889 * C499 + C35414 + C35414 + C153348 * C523 + C34887 * C500 +
             C35415 + C35415 + C153705 * C524) *
                C153513 * C34883) *
               C153798 +
           ((C34887 * C501 + C35416 + C35416 + C153705 * C525 + C34889 * C502 +
             C35417 + C35417 + C153348 * C526) *
                C153513 * C34883 +
            (C36750 + C36751) * C153513 * C34884 +
            (C36752 + C36753) * C153513 * C34885 +
            (C36754 + C36755) * C153513 * C153747) *
               C2454) *
              C153724 +
          (((C36183 + C36182) * C153513 * C34883 +
            (C36181 + C36180) * C153513 * C34884 +
            (C36179 + C36178) * C153513 * C34885 +
            (C37416 + C37417) * C153513 * C153747) *
               C153798 -
           (C36522 * C153747 + C36523 * C34885 +
            (C35193 + C35192) * C153513 * C34884 +
            (C35191 + C35190) * C153513 * C34883) *
               C153797 -
           ((C34889 * C28571 + C36736 + C36736 + C153348 * C28575 +
             C34887 * C28570 + C36737 + C36737 + C153705 * C28574) *
                C153513 * C153747 +
            (C36755 + C36754) * C153513 * C34885 +
            (C36753 + C36752) * C153513 * C34884 +
            (C36751 + C36750) * C153513 * C34883) *
               C2454) *
              C153449) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C11268 * C144 + C11277 + C11277 + C11262 * C160 + C11270 * C145 +
             C11278 + C11278 + C11263 * C161 + C11272 * C146 + C11279 + C11279 +
             C11264 * C162 + C11274 * C147 + C11280 + C11280 + C153738 * C163) *
                C153513 * C153739 +
            (C11583 + C11584 + C11585 + C11586) * C153513 * C153560) *
               C153797 -
           ((C12543 + C12544 + C12545 + C12546) * C153513 * C153560 +
            (C11274 * C497 + C11797 + C11797 + C153738 * C521 + C11272 * C498 +
             C11798 + C11798 + C11264 * C522 + C11270 * C499 + C11799 + C11799 +
             C11263 * C523 + C11268 * C500 + C11800 + C11800 + C11262 * C524) *
                C153513 * C153739) *
               C153798 +
           ((C11268 * C501 + C11801 + C11801 + C11262 * C525 + C11270 * C502 +
             C11802 + C11802 + C11263 * C526 + C11272 * C503 + C11803 + C11803 +
             C11264 * C527 + C11274 * C504 + C11804 + C11804 + C153738 * C528) *
                C153513 * C153739 +
            (C13113 + C13114 + C13115 + C13116) * C153513 * C153560) *
               C2454) *
              C153724 +
          (((C12546 + C12545 + C12544 + C12543) * C153513 * C153739 +
            (C13783 + C13784 + C13785 + C13786) * C153513 * C153560) *
               C153798 -
           ((C11587 + C11588 + C11589 + C11590) * C153513 * C153560 +
            (C11586 + C11585 + C11584 + C11583) * C153513 * C153739) *
               C153797 -
           ((C11274 * C3330 + C13101 + C13101 + C153738 * C3338 +
             C11272 * C3329 + C13102 + C13102 + C11264 * C3337 +
             C11270 * C3328 + C13103 + C13103 + C11263 * C3336 +
             C11268 * C3327 + C13104 + C13104 + C11262 * C3335) *
                C153513 * C153560 +
            (C13116 + C13115 + C13114 + C13113) * C153513 * C153739) *
               C2454) *
              C153449) *
         C153378) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C34887 * C144 + C34892 + C34892 + C153705 * C160 + C34889 * C145 +
              C34893 + C34893 + C153348 * C161) *
                 C47673 +
             (C39432 + C39433) * C47674 + C58686 * C153777) *
                C153739 +
            ((C35190 + C35191) * C47673 + C40446 * C47674 + C41230 * C153777) *
                C153560) *
               C153797 -
           ((C60478 * C153777 + C41229 * C47674 + C40447 * C47673) * C153560 +
            (C62230 * C153777 + (C39434 + C39435) * C47674 +
             (C39433 + C39432) * C47673) *
                C153739) *
               C153798 +
           ((C58686 * C47673 + (C43010 + C43011) * C47674 +
             (C62243 + C62244) * C153777) *
                C153739 +
            (C41230 * C47673 + C60479 * C47674 + (C60488 + C60489) * C153777) *
                C153560) *
               C2454) *
              C153724 +
          (((C40446 * C47673 + C41230 * C47674 + C60479 * C153777) * C153739 +
            (C39081 * C47673 + C41235 * C47674 + (C41250 + C41251) * C153777) *
                C153560) *
               C153798 -
           ((C41228 * C153777 + C37403 * C47674 + (C35193 + C35192) * C47673) *
                C153560 +
            (C41229 * C153777 + C40447 * C47674 + (C35191 + C35190) * C47673) *
                C153739) *
               C153797 -
           (((C34889 * C31240 + C43000 + C43000 + C153348 * C31244 +
              C34887 * C31239 + C43001 + C43001 + C153705 * C31243) *
                 C153777 +
             (C41251 + C41250) * C47674 + C41228 * C47673) *
                C153560 +
            ((C60489 + C60488) * C153777 + C60478 * C47674 + C41229 * C47673) *
                C153739) *
               C2454) *
              C153449) *
         C153378) /
            (p * q * std::sqrt(p + q));
    d2ee[162] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C11268 * C144 + C11277 + C11277 + C11262 * C160 +
                 C11270 * C145 + C11278 + C11278 + C11263 * C161 +
                 C11272 * C146 + C11279 + C11279 + C11264 * C162 +
                 C11274 * C147 + C11280 + C11280 + C153738 * C163) *
                    C153513 * C153739 +
                (C11583 + C11584 + C11585 + C11586) * C153513 * C153560) *
                   C1938 -
               ((C12543 + C12544 + C12545 + C12546) * C153513 * C153560 +
                (C11274 * C497 + C11797 + C11797 + C153738 * C521 +
                 C11272 * C498 + C11798 + C11798 + C11264 * C522 +
                 C11270 * C499 + C11799 + C11799 + C11263 * C523 +
                 C11268 * C500 + C11800 + C11800 + C11262 * C524) *
                    C153513 * C153739) *
                   C153477) *
                  C153397 * C1133 +
              (((C11268 * C499 + C11809 + C11809 + C11262 * C523 +
                 C11270 * C498 + C11810 + C11810 + C11263 * C522 +
                 C11272 * C497 + C11811 + C11811 + C11264 * C521 +
                 C11274 * C496 + C11812 + C11812 + C153738 * C520) *
                    C153513 * C153739 +
                (C12547 + C12548 + C12549 + C12550) * C153513 * C153560) *
                   C153477 -
               ((C11594 + C11593 + C11592 + C11591) * C153513 * C153560 +
                (C11274 * C148 + C11289 + C11289 + C153738 * C164 +
                 C11272 * C147 + C11290 + C11290 + C11264 * C163 +
                 C11270 * C146 + C11291 + C11291 + C11263 * C162 +
                 C11268 * C145 + C11292 + C11292 + C11262 * C161) *
                    C153513 * C153739) *
                   C1938) *
                  C153397 * C1134 +
              (((C11268 * C146 + C11293 + C11293 + C11262 * C162 +
                 C11270 * C147 + C11294 + C11294 + C11263 * C163 +
                 C11272 * C148 + C11295 + C11295 + C11264 * C164 +
                 C11274 * C149 + C11296 + C11296 + C153738 * C165) *
                    C153513 * C153739 +
                (C12039 + C12040 + C12041 + C12042) * C153513 * C153560) *
                   C1938 -
               ((C11274 * C986 + C12237 + C12237 + C153738 * C998 +
                 C11272 * C985 + C12238 + C12238 + C11264 * C997 +
                 C11270 * C984 + C12239 + C12239 + C11263 * C996 +
                 C11268 * C983 + C12240 + C12240 + C11262 * C995) *
                    C153513 * C153560 +
                (C11274 * C506 + C12241 + C12241 + C153738 * C530 +
                 C11272 * C496 + C12242 + C12242 + C11264 * C520 +
                 C11270 * C497 + C12243 + C12243 + C11263 * C521 +
                 C11268 * C498 + C12244 + C12244 + C11262 * C522) *
                    C153513 * C153739) *
                   C153477) *
                  C153397 * C1135) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C11268 * C144 + C11277 + C11277 + C11262 * C160 +
                 C11270 * C145 + C11278 + C11278 + C11263 * C161 +
                 C11272 * C146 + C11279 + C11279 + C11264 * C162 +
                 C11274 * C147 + C11280 + C11280 + C153738 * C163) *
                    C153513 * C153739 +
                (C11583 + C11584 + C11585 + C11586) * C153513 * C153560) *
                   C1938 -
               ((C12543 + C12544 + C12545 + C12546) * C153513 * C153560 +
                (C11274 * C497 + C11797 + C11797 + C153738 * C521 +
                 C11272 * C498 + C11798 + C11798 + C11264 * C522 +
                 C11270 * C499 + C11799 + C11799 + C11263 * C523 +
                 C11268 * C500 + C11800 + C11800 + C11262 * C524) *
                    C153513 * C153739) *
                   C153477) *
                  C310 +
              (((C12546 + C12545 + C12544 + C12543) * C153513 * C153739 +
                (C13783 + C13784 + C13785 + C13786) * C153513 * C153560) *
                   C153477 -
               ((C11587 + C11588 + C11589 + C11590) * C153513 * C153560 +
                (C11586 + C11585 + C11584 + C11583) * C153513 * C153739) *
                   C1938) *
                  C311 +
              (((C11590 + C11589 + C11588 + C11587) * C153513 * C153739 +
                (C12895 + C12896 + C12897 + C12898) * C153513 * C153560) *
                   C1938 -
               ((C11274 * C4146 + C13771 + C13771 + C153738 * C4154 +
                 C11272 * C4145 + C13772 + C13772 + C11264 * C4153 +
                 C11270 * C4144 + C13773 + C13773 + C11263 * C4152 +
                 C11268 * C4143 + C13774 + C13774 + C11262 * C4151) *
                    C153513 * C153560 +
                (C13786 + C13785 + C13784 + C13783) * C153513 * C153739) *
                   C153477) *
                  C312) *
             C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C11268 * C144 + C11277 + C11277 + C11262 * C160 + C11270 * C145 +
            C11278 + C11278 + C11263 * C161 + C11272 * C146 + C11279 + C11279 +
            C11264 * C162 + C11274 * C147 + C11280 + C11280 + C153738 * C163) *
               C153513 * C153739 +
           (C11583 + C11584 + C11585 + C11586) * C153513 * C153560) *
              C2144 -
          ((C12543 + C12544 + C12545 + C12546) * C153513 * C153560 +
           (C11274 * C497 + C11797 + C11797 + C153738 * C521 + C11272 * C498 +
            C11798 + C11798 + C11264 * C522 + C11270 * C499 + C11799 + C11799 +
            C11263 * C523 + C11268 * C500 + C11800 + C11800 + C11262 * C524) *
               C153513 * C153739) *
              C2145 +
          ((C11268 * C501 + C11801 + C11801 + C11262 * C525 + C11270 * C502 +
            C11802 + C11802 + C11263 * C526 + C11272 * C503 + C11803 + C11803 +
            C11264 * C527 + C11274 * C504 + C11804 + C11804 + C153738 * C528) *
               C153513 * C153739 +
           (C13113 + C13114 + C13115 + C13116) * C153513 * C153560) *
              C2146 -
          ((C11274 * C8437 + C14305 + C14305 + C153738 * C8439 +
            C11272 * C6216 + C14306 + C14306 + C11264 * C6228 + C11270 * C6217 +
            C14307 + C14307 + C11263 * C6229 + C11268 * C6218 + C14308 +
            C14308 + C11262 * C6230) *
               C153513 * C153560 +
           (C11274 * C2149 + C14309 + C14309 + C153738 * C2159 +
            C11272 * C2150 + C14310 + C14310 + C11264 * C2160 + C11270 * C2151 +
            C14311 + C14311 + C11263 * C2161 + C11268 * C2152 + C14312 +
            C14312 + C11262 * C2162) *
               C153513 * C153739) *
              C2147) *
         C153397 * C153378) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C34887 * C144 + C34892 + C34892 + C153705 * C160 + C34889 * C145 +
             C34893 + C34893 + C153348 * C161) *
                C153513 * C34883 +
            (C35190 + C35191) * C153513 * C34884 + C35210 * C34885 +
            C35211 * C153747) *
               C1938 -
           (C37410 * C153747 + C37411 * C34885 +
            (C36182 + C36183) * C153513 * C34884 +
            (C34889 * C499 + C35414 + C35414 + C153348 * C523 + C34887 * C500 +
             C35415 + C35415 + C153705 * C524) *
                C153513 * C34883) *
               C153477) *
              C153397 * C1133 +
          (((C34887 * C499 + C35424 + C35424 + C153705 * C523 + C34889 * C498 +
             C35425 + C35425 + C153348 * C522) *
                C153513 * C34883 +
            (C36184 + C36185) * C153513 * C34884 +
            (C36186 + C36187) * C153513 * C34885 +
            (C36188 + C36189) * C153513 * C153747) *
               C153477 -
           (C35212 * C153747 + C35213 * C34885 +
            (C35199 + C35198) * C153513 * C34884 +
            (C34889 * C146 + C34906 + C34906 + C153348 * C162 + C34887 * C145 +
             C34907 + C34907 + C153705 * C161) *
                C153513 * C34883) *
               C1938) *
              C153397 * C1134 +
          (((C34887 * C146 + C34908 + C34908 + C153705 * C162 + C34889 * C147 +
             C34909 + C34909 + C153348 * C163) *
                C153513 * C34883 +
            (C35660 + C35661) * C153513 * C34884 +
            (C35662 + C35663) * C153513 * C34885 +
            (C35664 + C35665) * C153513 * C153747) *
               C1938 -
           ((C34889 * C4146 + C35860 + C35860 + C153348 * C4154 +
             C34887 * C4145 + C35861 + C35861 + C153705 * C4153) *
                C153513 * C153747 +
            (C34889 * C1797 + C35862 + C35862 + C153348 * C1807 +
             C34887 * C1798 + C35863 + C35863 + C153705 * C1808) *
                C153513 * C34885 +
            (C34889 * C984 + C35864 + C35864 + C153348 * C996 + C34887 * C983 +
             C35865 + C35865 + C153705 * C995) *
                C153513 * C34884 +
            (C34889 * C497 + C35866 + C35866 + C153348 * C521 + C34887 * C498 +
             C35867 + C35867 + C153705 * C522) *
                C153513 * C34883) *
               C153477) *
              C153397 * C1135)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C34887 * C144 + C34892 + C34892 + C153705 * C160 + C34889 * C145 +
             C34893 + C34893 + C153348 * C161) *
                C153513 * C34883 +
            (C35190 + C35191) * C153513 * C34884 + C35210 * C34885 +
            C35211 * C153747) *
               C1938 -
           (C37410 * C153747 + C37411 * C34885 +
            (C36182 + C36183) * C153513 * C34884 +
            (C34889 * C499 + C35414 + C35414 + C153348 * C523 + C34887 * C500 +
             C35415 + C35415 + C153705 * C524) *
                C153513 * C34883) *
               C153477) *
              C310 +
          (((C36183 + C36182) * C153513 * C34883 +
            (C36181 + C36180) * C153513 * C34884 +
            (C36179 + C36178) * C153513 * C34885 +
            (C37416 + C37417) * C153513 * C153747) *
               C153477 -
           (C36522 * C153747 + C36523 * C34885 +
            (C35193 + C35192) * C153513 * C34884 +
            (C35191 + C35190) * C153513 * C34883) *
               C1938) *
              C311 +
          ((C35210 * C34883 + C35211 * C34884 +
            (C35197 + C35196) * C153513 * C34885 +
            (C36528 + C36529) * C153513 * C153747) *
               C1938 -
           ((C34889 * C29033 + C37408 + C37408 + C153348 * C29037 +
             C34887 * C29032 + C37409 + C37409 + C153705 * C29036) *
                C153513 * C153747 +
            (C37417 + C37416) * C153513 * C34885 + C37410 * C34884 +
            C37411 * C34883) *
               C153477) *
              C312) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C34887 * C144 + C34892 + C34892 + C153705 * C160 + C34889 * C145 +
            C34893 + C34893 + C153348 * C161) *
               C153513 * C34883 +
           (C35190 + C35191) * C153513 * C34884 + C35210 * C34885 +
           C35211 * C153747) *
              C2144 -
          (C37410 * C153747 + C37411 * C34885 +
           (C36182 + C36183) * C153513 * C34884 +
           (C34889 * C499 + C35414 + C35414 + C153348 * C523 + C34887 * C500 +
            C35415 + C35415 + C153705 * C524) *
               C153513 * C34883) *
              C2145 +
          ((C34887 * C501 + C35416 + C35416 + C153705 * C525 + C34889 * C502 +
            C35417 + C35417 + C153348 * C526) *
               C153513 * C34883 +
           (C36750 + C36751) * C153513 * C34884 +
           (C36752 + C36753) * C153513 * C34885 +
           (C36754 + C36755) * C153513 * C153747) *
              C2146 -
          ((C34889 * C32070 + C37936 + C37936 + C153348 * C32072 +
            C34887 * C30195 + C37937 + C37937 + C153705 * C30199) *
               C153513 * C153747 +
           (C34889 * C6214 + C37938 + C37938 + C153348 * C6226 +
            C34887 * C6215 + C37939 + C37939 + C153705 * C6227) *
               C153513 * C34885 +
           (C34889 * C6217 + C37940 + C37940 + C153348 * C6229 +
            C34887 * C6218 + C37941 + C37941 + C153705 * C6230) *
               C153513 * C34884 +
           (C34889 * C2151 + C37942 + C37942 + C153348 * C2161 +
            C34887 * C2152 + C37943 + C37943 + C153705 * C2162) *
               C153513 * C34883) *
              C2147) *
         C153397 * C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C34887 * C144 + C34892 + C34892 + C153705 * C160 + C34889 * C145 +
              C34893 + C34893 + C153348 * C161) *
                 C47673 +
             (C39432 + C39433) * C47674 + C58686 * C153777) *
                C153739 +
            ((C35190 + C35191) * C47673 + C40446 * C47674 + C41230 * C153777) *
                C153560) *
               C1938 -
           ((C60478 * C153777 + C41229 * C47674 + C40447 * C47673) * C153560 +
            ((C43011 + C43010) * C153777 + (C39434 + C39435) * C47674 +
             (C39433 + C39432) * C47673) *
                C153739) *
               C153477) *
              C153397 * C1133 +
          ((((C39436 + C39437) * C47673 + (C39438 + C39439) * C47674 +
             (C58709 + C58710) * C153777) *
                C153739 +
            (C40448 * C47673 + C59703 * C47674 + (C58711 + C58712) * C153777) *
                C153560) *
               C153477 -
           ((C58695 * C153777 + C40450 * C47674 + (C35199 + C35198) * C47673) *
                C153560 +
            (C58696 * C153777 + (C39437 + C39436) * C47674 +
             (C34889 * C146 + C34906 + C34906 + C153348 * C162 + C34887 * C145 +
              C34907 + C34907 + C153705 * C161) *
                 C47673) *
                C153739) *
               C1938) *
              C153397 * C1134 +
          ((((C34887 * C146 + C34908 + C34908 + C153705 * C162 + C34889 * C147 +
              C34909 + C34909 + C153348 * C163) *
                 C47673 +
             (C40058 + C40059) * C47674 + (C59315 + C59316) * C153777) *
                C153739 +
            ((C35660 + C35661) * C47673 + (C39750 + C39751) * C47674 +
             (C59011 + C59012) * C153777) *
                C153560) *
               C1938 -
           (((C34889 * C8437 + C59307 + C59307 + C153348 * C8439 +
              C34887 * C6216 + C59308 + C59308 + C153705 * C6228) *
                 C153777 +
             (C59012 + C59011) * C47674 + (C39751 + C39750) * C47673) *
                C153560 +
            ((C34889 * C2149 + C59309 + C59309 + C153348 * C2159 +
              C34887 * C2150 + C59310 + C59310 + C153705 * C2160) *
                 C153777 +
             (C59316 + C59315) * C47674 + (C40059 + C40058) * C47673) *
                C153739) *
               C153477) *
              C153397 * C1135)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C34887 * C144 + C34892 + C34892 + C153705 * C160 + C34889 * C145 +
              C34893 + C34893 + C153348 * C161) *
                 C47673 +
             (C39432 + C39433) * C47674 + C58686 * C153777) *
                C153739 +
            ((C35190 + C35191) * C47673 + C40446 * C47674 + C41230 * C153777) *
                C153560) *
               C1938 -
           ((C60478 * C153777 + C41229 * C47674 + C40447 * C47673) * C153560 +
            ((C43011 + C43010) * C153777 + (C39434 + C39435) * C47674 +
             (C39433 + C39432) * C47673) *
                C153739) *
               C153477) *
              C310 +
          (((C40446 * C47673 + C41230 * C47674 + C60479 * C153777) * C153739 +
            (C39081 * C47673 + C41235 * C47674 + (C41250 + C41251) * C153777) *
                C153560) *
               C153477 -
           ((C41228 * C153777 + C37403 * C47674 + (C35193 + C35192) * C47673) *
                C153560 +
            (C41229 * C153777 + C40447 * C47674 + (C35191 + C35190) * C47673) *
                C153739) *
               C1938) *
              C311 +
          (((C35206 * C47673 + C39081 * C47674 + C41235 * C153777) * C153739 +
            (C35207 * C47673 + C42220 * C47674 + (C36754 + C36755) * C153777) *
                C153560) *
               C1938 -
           (((C34889 * C32070 + C37936 + C37936 + C153348 * C32072 +
              C34887 * C30195 + C37937 + C37937 + C153705 * C30199) *
                 C153777 +
             (C36755 + C36754) * C47674 + C37402 * C47673) *
                C153560 +
            ((C41251 + C41250) * C153777 + C41228 * C47674 + C37403 * C47673) *
                C153739) *
               C153477) *
              C312) *
         C153378) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C34887 * C144 + C34892 + C34892 + C153705 * C160 + C34889 * C145 +
             C34893 + C34893 + C153348 * C161) *
                C47673 +
            (C39432 + C39433) * C47674 + C58686 * C153777) *
               C153739 +
           ((C35190 + C35191) * C47673 + C40446 * C47674 + C41230 * C153777) *
               C153560) *
              C2144 -
          ((C60478 * C153777 + C41229 * C47674 + C40447 * C47673) * C153560 +
           (C62230 * C153777 + (C39434 + C39435) * C47674 +
            (C39433 + C39432) * C47673) *
               C153739) *
              C2145 +
          ((C58686 * C47673 + (C43010 + C43011) * C47674 +
            (C62243 + C62244) * C153777) *
               C153739 +
           (C41230 * C47673 + C60479 * C47674 + (C60488 + C60489) * C153777) *
               C153560) *
              C2146 -
          (((C34889 * C56416 + C62235 + C62235 + C153348 * C56418 +
             C34887 * C34012 + C62236 + C62236 + C153705 * C34016) *
                C153777 +
            (C60489 + C60488) * C47674 + C60478 * C47673) *
               C153560 +
           ((C34889 * C10378 + C62237 + C62237 + C153348 * C10384 +
             C34887 * C10379 + C62238 + C62238 + C153705 * C10385) *
                C153777 +
            (C62244 + C62243) * C47674 + C62230 * C47673) *
               C153739) *
              C2147) *
         C153397 * C153378) /
            (p * q * std::sqrt(p + q));
    d2ee[163] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C34887 * C144 + C34892 + C34892 + C153705 * C160 + C34889 * C145 +
             C34893 + C34893 + C153348 * C161) *
                C153513 * C34883 +
            (C35190 + C35191) * C153513 * C34884 + C35210 * C34885 +
            C35211 * C153747) *
               C153797 -
           (C37410 * C153747 + C37411 * C34885 +
            (C36182 + C36183) * C153513 * C34884 +
            (C34889 * C499 + C35414 + C35414 + C153348 * C523 + C34887 * C500 +
             C35415 + C35415 + C153705 * C524) *
                C153513 * C34883) *
               C153798 +
           ((C34887 * C501 + C35416 + C35416 + C153705 * C525 + C34889 * C502 +
             C35417 + C35417 + C153348 * C526) *
                C153513 * C34883 +
            (C36750 + C36751) * C153513 * C34884 +
            (C36752 + C36753) * C153513 * C34885 +
            (C36754 + C36755) * C153513 * C153747) *
               C2454) *
              C153397 * C153716 +
          (((C34887 * C499 + C35424 + C35424 + C153705 * C523 + C34889 * C498 +
             C35425 + C35425 + C153348 * C522) *
                C153513 * C34883 +
            (C36184 + C36185) * C153513 * C34884 +
            (C36186 + C36187) * C153513 * C34885 +
            (C36188 + C36189) * C153513 * C153747) *
               C153798 -
           (C35212 * C153747 + C35213 * C34885 +
            (C35199 + C35198) * C153513 * C34884 +
            (C34889 * C146 + C34906 + C34906 + C153348 * C162 + C34887 * C145 +
             C34907 + C34907 + C153705 * C161) *
                C153513 * C34883) *
               C153797 -
           ((C34889 * C4833 + C35432 + C35432 + C153348 * C4839 +
             C34887 * C4834 + C35433 + C35433 + C153705 * C4840) *
                C153513 * C153747 +
            (C34889 * C3329 + C35434 + C35434 + C153348 * C3337 +
             C34887 * C3328 + C35435 + C35435 + C153705 * C3336) *
                C153513 * C34885 +
            (C34889 * C1367 + C35436 + C35436 + C153348 * C1377 +
             C34887 * C1368 + C35437 + C35437 + C153705 * C1378) *
                C153513 * C34884 +
            (C34889 * C503 + C35438 + C35438 + C153348 * C527 + C34887 * C502 +
             C35439 + C35439 + C153705 * C526) *
                C153513 * C34883) *
               C2454) *
              C153397 * C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C11268 * C144 + C11277 + C11277 + C11262 * C160 + C11270 * C145 +
             C11278 + C11278 + C11263 * C161 + C11272 * C146 + C11279 + C11279 +
             C11264 * C162 + C11274 * C147 + C11280 + C11280 + C153738 * C163) *
                C153513 * C153739 +
            (C11583 + C11584 + C11585 + C11586) * C153513 * C153560) *
               C153797 -
           ((C12543 + C12544 + C12545 + C12546) * C153513 * C153560 +
            (C11274 * C497 + C11797 + C11797 + C153738 * C521 + C11272 * C498 +
             C11798 + C11798 + C11264 * C522 + C11270 * C499 + C11799 + C11799 +
             C11263 * C523 + C11268 * C500 + C11800 + C11800 + C11262 * C524) *
                C153513 * C153739) *
               C153798 +
           ((C11268 * C501 + C11801 + C11801 + C11262 * C525 + C11270 * C502 +
             C11802 + C11802 + C11263 * C526 + C11272 * C503 + C11803 + C11803 +
             C11264 * C527 + C11274 * C504 + C11804 + C11804 + C153738 * C528) *
                C153513 * C153739 +
            (C13113 + C13114 + C13115 + C13116) * C153513 * C153560) *
               C2454) *
              C153397 * C153716 +
          (((C11268 * C499 + C11809 + C11809 + C11262 * C523 + C11270 * C498 +
             C11810 + C11810 + C11263 * C522 + C11272 * C497 + C11811 + C11811 +
             C11264 * C521 + C11274 * C496 + C11812 + C11812 + C153738 * C520) *
                C153513 * C153739 +
            (C12547 + C12548 + C12549 + C12550) * C153513 * C153560) *
               C153798 -
           ((C11594 + C11593 + C11592 + C11591) * C153513 * C153560 +
            (C11274 * C148 + C11289 + C11289 + C153738 * C164 + C11272 * C147 +
             C11290 + C11290 + C11264 * C163 + C11270 * C146 + C11291 + C11291 +
             C11263 * C162 + C11268 * C145 + C11292 + C11292 + C11262 * C161) *
                C153513 * C153739) *
               C153797 -
           ((C11274 * C1365 + C11817 + C11817 + C153738 * C1375 +
             C11272 * C1366 + C11818 + C11818 + C11264 * C1376 +
             C11270 * C1367 + C11819 + C11819 + C11263 * C1377 +
             C11268 * C1368 + C11820 + C11820 + C11262 * C1378) *
                C153513 * C153560 +
            (C11274 * C505 + C11821 + C11821 + C153738 * C529 + C11272 * C504 +
             C11822 + C11822 + C11264 * C528 + C11270 * C503 + C11823 + C11823 +
             C11263 * C527 + C11268 * C502 + C11824 + C11824 + C11262 * C526) *
                C153513 * C153739) *
               C2454) *
              C153397 * C153384)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C34887 * C144 + C34892 + C34892 + C153705 * C160 + C34889 * C145 +
              C34893 + C34893 + C153348 * C161) *
                 C47673 +
             (C39432 + C39433) * C47674 + C58686 * C153777) *
                C153739 +
            ((C35190 + C35191) * C47673 + C40446 * C47674 + C41230 * C153777) *
                C153560) *
               C153797 -
           ((C60478 * C153777 + C41229 * C47674 + C40447 * C47673) * C153560 +
            (C62230 * C153777 + (C39434 + C39435) * C47674 +
             (C39433 + C39432) * C47673) *
                C153739) *
               C153798 +
           ((C58686 * C47673 + (C43010 + C43011) * C47674 +
             (C62243 + C62244) * C153777) *
                C153739 +
            (C41230 * C47673 + C60479 * C47674 + (C60488 + C60489) * C153777) *
                C153560) *
               C2454) *
              C153397 * C153716 +
          ((((C39436 + C39437) * C47673 + (C39438 + C39439) * C47674 +
             (C58709 + C58710) * C153777) *
                C153739 +
            (C40448 * C47673 + C59703 * C47674 + (C58711 + C58712) * C153777) *
                C153560) *
               C153798 -
           ((C58695 * C153777 + C40450 * C47674 + (C35199 + C35198) * C47673) *
                C153560 +
            (C58696 * C153777 + (C39437 + C39436) * C47674 +
             (C34889 * C146 + C34906 + C34906 + C153348 * C162 + C34887 * C145 +
              C34907 + C34907 + C153705 * C161) *
                 C47673) *
                C153739) *
               C153797 -
           (((C34889 * C9040 + C58697 + C58697 + C153348 * C9046 +
              C34887 * C9041 + C58698 + C58698 + C153705 * C9047) *
                 C153777 +
             (C58712 + C58711) * C47674 + C58695 * C47673) *
                C153560 +
            ((C34889 * C7562 + C58699 + C58699 + C153348 * C7570 +
              C34887 * C7561 + C58700 + C58700 + C153705 * C7569) *
                 C153777 +
             (C58710 + C58709) * C47674 + C58696 * C47673) *
                C153739) *
               C2454) *
              C153397 * C153384)) /
            (p * q * std::sqrt(p + q));
    d2ee[164] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C11268 * C144 + C11277 + C11277 + C11262 * C160 + C11270 * C145 +
             C11278 + C11278 + C11263 * C161 + C11272 * C146 + C11279 + C11279 +
             C11264 * C162 + C11274 * C147 + C11280 + C11280 + C153738 * C163) *
                C153513 * C153739 +
            (C11583 + C11584 + C11585 + C11586) * C153513 * C153560) *
               C1938 -
           ((C12543 + C12544 + C12545 + C12546) * C153513 * C153560 +
            (C11274 * C497 + C11797 + C11797 + C153738 * C521 + C11272 * C498 +
             C11798 + C11798 + C11264 * C522 + C11270 * C499 + C11799 + C11799 +
             C11263 * C523 + C11268 * C500 + C11800 + C11800 + C11262 * C524) *
                C153513 * C153739) *
               C153477) *
              C310 +
          (((C12546 + C12545 + C12544 + C12543) * C153513 * C153739 +
            (C13783 + C13784 + C13785 + C13786) * C153513 * C153560) *
               C153477 -
           ((C11587 + C11588 + C11589 + C11590) * C153513 * C153560 +
            (C11586 + C11585 + C11584 + C11583) * C153513 * C153739) *
               C1938) *
              C311 +
          (((C11590 + C11589 + C11588 + C11587) * C153513 * C153739 +
            (C12895 + C12896 + C12897 + C12898) * C153513 * C153560) *
               C1938 -
           ((C11274 * C4146 + C13771 + C13771 + C153738 * C4154 +
             C11272 * C4145 + C13772 + C13772 + C11264 * C4153 +
             C11270 * C4144 + C13773 + C13773 + C11263 * C4152 +
             C11268 * C4143 + C13774 + C13774 + C11262 * C4151) *
                C153513 * C153560 +
            (C13786 + C13785 + C13784 + C13783) * C153513 * C153739) *
               C153477) *
              C312) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C11268 * C144 + C11277 + C11277 + C11262 * C160 + C11270 * C145 +
             C11278 + C11278 + C11263 * C161 + C11272 * C146 + C11279 + C11279 +
             C11264 * C162 + C11274 * C147 + C11280 + C11280 + C153738 * C163) *
                C153513 * C153739 +
            (C11583 + C11584 + C11585 + C11586) * C153513 * C153560) *
               C1938 -
           ((C12543 + C12544 + C12545 + C12546) * C153513 * C153560 +
            (C11274 * C497 + C11797 + C11797 + C153738 * C521 + C11272 * C498 +
             C11798 + C11798 + C11264 * C522 + C11270 * C499 + C11799 + C11799 +
             C11263 * C523 + C11268 * C500 + C11800 + C11800 + C11262 * C524) *
                C153513 * C153739) *
               C153477) *
              C153397 * C1133 +
          (((C11268 * C499 + C11809 + C11809 + C11262 * C523 + C11270 * C498 +
             C11810 + C11810 + C11263 * C522 + C11272 * C497 + C11811 + C11811 +
             C11264 * C521 + C11274 * C496 + C11812 + C11812 + C153738 * C520) *
                C153513 * C153739 +
            (C12547 + C12548 + C12549 + C12550) * C153513 * C153560) *
               C153477 -
           ((C11594 + C11593 + C11592 + C11591) * C153513 * C153560 +
            (C11274 * C148 + C11289 + C11289 + C153738 * C164 + C11272 * C147 +
             C11290 + C11290 + C11264 * C163 + C11270 * C146 + C11291 + C11291 +
             C11263 * C162 + C11268 * C145 + C11292 + C11292 + C11262 * C161) *
                C153513 * C153739) *
               C1938) *
              C153397 * C1134 +
          (((C11268 * C146 + C11293 + C11293 + C11262 * C162 + C11270 * C147 +
             C11294 + C11294 + C11263 * C163 + C11272 * C148 + C11295 + C11295 +
             C11264 * C164 + C11274 * C149 + C11296 + C11296 + C153738 * C165) *
                C153513 * C153739 +
            (C12039 + C12040 + C12041 + C12042) * C153513 * C153560) *
               C1938 -
           ((C11274 * C986 + C12237 + C12237 + C153738 * C998 + C11272 * C985 +
             C12238 + C12238 + C11264 * C997 + C11270 * C984 + C12239 + C12239 +
             C11263 * C996 + C11268 * C983 + C12240 + C12240 + C11262 * C995) *
                C153513 * C153560 +
            (C11274 * C506 + C12241 + C12241 + C153738 * C530 + C11272 * C496 +
             C12242 + C12242 + C11264 * C520 + C11270 * C497 + C12243 + C12243 +
             C11263 * C521 + C11268 * C498 + C12244 + C12244 + C11262 * C522) *
                C153513 * C153739) *
               C153477) *
              C153397 * C1135)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C34887 * C144 + C34892 + C34892 + C153705 * C160 + C34889 * C145 +
             C34893 + C34893 + C153348 * C161) *
                C153513 * C34883 +
            (C35190 + C35191) * C153513 * C34884 + C35210 * C34885 +
            C35211 * C153747) *
               C1938 -
           (C37410 * C153747 + C37411 * C34885 +
            (C36182 + C36183) * C153513 * C34884 +
            (C34889 * C499 + C35414 + C35414 + C153348 * C523 + C34887 * C500 +
             C35415 + C35415 + C153705 * C524) *
                C153513 * C34883) *
               C153477) *
              C153397 * C1133 +
          (((C34887 * C499 + C35424 + C35424 + C153705 * C523 + C34889 * C498 +
             C35425 + C35425 + C153348 * C522) *
                C153513 * C34883 +
            (C36184 + C36185) * C153513 * C34884 +
            (C36186 + C36187) * C153513 * C34885 +
            (C36188 + C36189) * C153513 * C153747) *
               C153477 -
           (C35212 * C153747 + C35213 * C34885 +
            (C35199 + C35198) * C153513 * C34884 +
            (C34889 * C146 + C34906 + C34906 + C153348 * C162 + C34887 * C145 +
             C34907 + C34907 + C153705 * C161) *
                C153513 * C34883) *
               C1938) *
              C153397 * C1134 +
          (((C34887 * C146 + C34908 + C34908 + C153705 * C162 + C34889 * C147 +
             C34909 + C34909 + C153348 * C163) *
                C153513 * C34883 +
            (C35660 + C35661) * C153513 * C34884 +
            (C35662 + C35663) * C153513 * C34885 +
            (C35664 + C35665) * C153513 * C153747) *
               C1938 -
           ((C34889 * C4146 + C35860 + C35860 + C153348 * C4154 +
             C34887 * C4145 + C35861 + C35861 + C153705 * C4153) *
                C153513 * C153747 +
            (C34889 * C1797 + C35862 + C35862 + C153348 * C1807 +
             C34887 * C1798 + C35863 + C35863 + C153705 * C1808) *
                C153513 * C34885 +
            (C34889 * C984 + C35864 + C35864 + C153348 * C996 + C34887 * C983 +
             C35865 + C35865 + C153705 * C995) *
                C153513 * C34884 +
            (C34889 * C497 + C35866 + C35866 + C153348 * C521 + C34887 * C498 +
             C35867 + C35867 + C153705 * C522) *
                C153513 * C34883) *
               C153477) *
              C153397 * C1135)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C34887 * C144 + C34892 + C34892 + C153705 * C160 + C34889 * C145 +
             C34893 + C34893 + C153348 * C161) *
                C153513 * C34883 +
            (C35190 + C35191) * C153513 * C34884 + C35210 * C34885 +
            C35211 * C153747) *
               C1938 -
           (C37410 * C153747 + C37411 * C34885 +
            (C36182 + C36183) * C153513 * C34884 +
            (C34889 * C499 + C35414 + C35414 + C153348 * C523 + C34887 * C500 +
             C35415 + C35415 + C153705 * C524) *
                C153513 * C34883) *
               C153477) *
              C310 +
          (((C36183 + C36182) * C153513 * C34883 +
            (C36181 + C36180) * C153513 * C34884 +
            (C36179 + C36178) * C153513 * C34885 +
            (C37416 + C37417) * C153513 * C153747) *
               C153477 -
           (C36522 * C153747 + C36523 * C34885 +
            (C35193 + C35192) * C153513 * C34884 +
            (C35191 + C35190) * C153513 * C34883) *
               C1938) *
              C311 +
          ((C35210 * C34883 + C35211 * C34884 +
            (C35197 + C35196) * C153513 * C34885 +
            (C36528 + C36529) * C153513 * C153747) *
               C1938 -
           ((C34889 * C29033 + C37408 + C37408 + C153348 * C29037 +
             C34887 * C29032 + C37409 + C37409 + C153705 * C29036) *
                C153513 * C153747 +
            (C37417 + C37416) * C153513 * C34885 + C37410 * C34884 +
            C37411 * C34883) *
               C153477) *
              C312) *
         C153378) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C34887 * C144 + C34892 + C34892 + C153705 * C160 + C34889 * C145 +
              C34893 + C34893 + C153348 * C161) *
                 C47673 +
             (C39432 + C39433) * C47674 + C58686 * C153777) *
                C153739 +
            ((C35190 + C35191) * C47673 + C40446 * C47674 + C41230 * C153777) *
                C153560) *
               C1938 -
           ((C60478 * C153777 + C41229 * C47674 + C40447 * C47673) * C153560 +
            ((C43011 + C43010) * C153777 + (C39434 + C39435) * C47674 +
             (C39433 + C39432) * C47673) *
                C153739) *
               C153477) *
              C153397 * C1133 +
          ((((C39436 + C39437) * C47673 + (C39438 + C39439) * C47674 +
             (C58709 + C58710) * C153777) *
                C153739 +
            (C40448 * C47673 + C59703 * C47674 + (C58711 + C58712) * C153777) *
                C153560) *
               C153477 -
           ((C58695 * C153777 + C40450 * C47674 + (C35199 + C35198) * C47673) *
                C153560 +
            (C58696 * C153777 + (C39437 + C39436) * C47674 +
             (C34889 * C146 + C34906 + C34906 + C153348 * C162 + C34887 * C145 +
              C34907 + C34907 + C153705 * C161) *
                 C47673) *
                C153739) *
               C1938) *
              C153397 * C1134 +
          ((((C34887 * C146 + C34908 + C34908 + C153705 * C162 + C34889 * C147 +
              C34909 + C34909 + C153348 * C163) *
                 C47673 +
             (C40058 + C40059) * C47674 + (C59315 + C59316) * C153777) *
                C153739 +
            ((C35660 + C35661) * C47673 + (C39750 + C39751) * C47674 +
             (C59011 + C59012) * C153777) *
                C153560) *
               C1938 -
           (((C34889 * C8437 + C59307 + C59307 + C153348 * C8439 +
              C34887 * C6216 + C59308 + C59308 + C153705 * C6228) *
                 C153777 +
             (C59012 + C59011) * C47674 + (C39751 + C39750) * C47673) *
                C153560 +
            ((C34889 * C2149 + C59309 + C59309 + C153348 * C2159 +
              C34887 * C2150 + C59310 + C59310 + C153705 * C2160) *
                 C153777 +
             (C59316 + C59315) * C47674 + (C40059 + C40058) * C47673) *
                C153739) *
               C153477) *
              C153397 * C1135)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C34887 * C144 + C34892 + C34892 + C153705 * C160 + C34889 * C145 +
              C34893 + C34893 + C153348 * C161) *
                 C47673 +
             (C39432 + C39433) * C47674 + C58686 * C153777) *
                C153739 +
            ((C35190 + C35191) * C47673 + C40446 * C47674 + C41230 * C153777) *
                C153560) *
               C1938 -
           ((C60478 * C153777 + C41229 * C47674 + C40447 * C47673) * C153560 +
            ((C43011 + C43010) * C153777 + (C39434 + C39435) * C47674 +
             (C39433 + C39432) * C47673) *
                C153739) *
               C153477) *
              C310 +
          (((C40446 * C47673 + C41230 * C47674 + C60479 * C153777) * C153739 +
            (C39081 * C47673 + C41235 * C47674 + (C41250 + C41251) * C153777) *
                C153560) *
               C153477 -
           ((C41228 * C153777 + C37403 * C47674 + (C35193 + C35192) * C47673) *
                C153560 +
            (C41229 * C153777 + C40447 * C47674 + (C35191 + C35190) * C47673) *
                C153739) *
               C1938) *
              C311 +
          (((C35206 * C47673 + C39081 * C47674 + C41235 * C153777) * C153739 +
            (C35207 * C47673 + C42220 * C47674 + (C36754 + C36755) * C153777) *
                C153560) *
               C1938 -
           (((C34889 * C32070 + C37936 + C37936 + C153348 * C32072 +
              C34887 * C30195 + C37937 + C37937 + C153705 * C30199) *
                 C153777 +
             (C36755 + C36754) * C47674 + C37402 * C47673) *
                C153560 +
            ((C41251 + C41250) * C153777 + C41228 * C47674 + C37403 * C47673) *
                C153739) *
               C153477) *
              C312) *
         C153378) /
            (p * q * std::sqrt(p + q));
    d2ee[165] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153740 +
             C31295 * C153600) *
                C34883 +
            (C44303 + C44304) * C34884 + C44319 * C34885 + C44320 * C153747) *
               C153413 * C153724 -
           ((C44309 + C44310) * C153747 + (C44308 + C44307) * C34885 +
            (C44306 + C44305) * C34884 + (C44304 + C44303) * C34883) *
               C153413 * C153449) *
              C153793 +
          (((C44311 + C44312) * C34883 + (C44313 + C44314) * C34884 +
            (C44315 + C44316) * C34885 + (C44317 + C44318) * C153747) *
               C153413 * C153449 -
           (C44321 * C153747 + C44322 * C34885 + (C44312 + C44311) * C34884 +
            (C31300 * C153600 +
             (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C153740) *
                C34883) *
               C153413 * C153724) *
              C153794 +
          ((((C28234 * C146 + C28247 + C28247 + C153338 * C162) * C153740 +
             C31779 * C153600) *
                C34883 +
            (C44711 + C44712) * C34884 + (C44713 + C44714) * C34885 +
            (C44715 + C44721) * C153747) *
               C153413 * C153724 -
           (((C28234 * C5601 + C28866 + C28866 + C153338 * C5607) * C153600 +
             C28739 * C153740) *
                C153747 +
            (C44721 + C44715) * C34885 + (C44714 + C44713) * C34884 +
            (C44712 + C44711) * C34883) *
               C153413 * C153449) *
              C678)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 +
              C2737 + C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
              C153761 * C162) *
                 C153740 +
             (C7654 + C7655 + C7656) * C153600) *
                C153739 +
            ((C3086 + C3087 + C3088) * C153740 +
             (C4215 + C4214 + C4213) * C153600) *
                C153560) *
               C153413 * C153724 -
           ((C5621 * C153600 + (C3091 + C3090 + C3089) * C153740) * C153560 +
            ((C4213 + C4214 + C4215) * C153600 +
             (C3088 + C3087 + C3086) * C153740) *
                C153739) *
               C153413 * C153449) *
              C153793 +
          ((((C3095 + C3096 + C3097) * C153740 +
             (C4216 + C4217 + C4218) * C153600) *
                C153739 +
            ((C3098 + C3099 + C3100) * C153740 +
             (C4219 + C4220 + C4221) * C153600) *
                C153560) *
               C153413 * C153449 -
           (((C4218 + C4217 + C4216) * C153600 +
             (C3097 + C3096 + C3095) * C153740) *
                C153560 +
            ((C7665 + C7664 + C7663) * C153600 +
             (C2733 * C147 + C2751 + C2751 + C153761 * C163 + C2731 * C146 +
              C2752 + C2752 + C2724 * C162 + C2729 * C145 + C2753 + C2753 +
              C2723 * C161) *
                 C153740) *
                C153739) *
               C153413 * C153724) *
              C153794 +
          ((((C2729 * C146 + C2754 + C2754 + C2723 * C162 + C2731 * C147 +
              C2755 + C2755 + C2724 * C163 + C2733 * C148 + C2756 + C2756 +
              C153761 * C164) *
                 C153740 +
             (C8142 + C8143 + C8144) * C153600) *
                C153739 +
            ((C3621 + C3622 + C3623) * C153740 +
             (C19668 + C19669 + C19670) * C153600) *
                C153560) *
               C153413 * C153724 -
           (((C2733 * C1796 + C3845 + C3845 + C153761 * C1806 + C2731 * C1797 +
              C3846 + C3846 + C2724 * C1807 + C2729 * C1798 + C3847 + C3847 +
              C2723 * C1808) *
                 C153600 +
             (C3626 + C3625 + C3624) * C153740) *
                C153560 +
            ((C19670 + C19669 + C19668) * C153600 +
             (C3623 + C3622 + C3621) * C153740) *
                C153739) *
               C153413 * C153449) *
              C678)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C63340 +
             C31295 * C63341 + C31296 * C63342 + C31299 * C153754) *
                C153739 +
            (C67073 + C67074 + C67075 + C67076) * C153560) *
               C153413 * C153724 -
           ((C67077 + C67078 + C67079 + C67080) * C153560 +
            (C67076 + C67075 + C67074 + C67073) * C153739) *
               C153413 * C153449) *
              C153793 +
          (((C67081 + C67082 + C67083 + C67084) * C153739 +
            (C67085 + C67086 + C67087 + C67088) * C153560) *
               C153413 * C153449 -
           ((C67084 + C67083 + C67082 + C67081) * C153560 +
            (C31302 * C153754 + C31301 * C63342 + C31300 * C63341 +
             (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C63340) *
                C153739) *
               C153413 * C153724) *
              C153794 +
          ((((C28234 * C146 + C28247 + C28247 + C153338 * C162) * C63340 +
             C31779 * C63341 + C31780 * C63342 + C56253 * C153754) *
                C153739 +
            (C67477 + C67478 + C67479 + C67485) * C153560) *
               C153413 * C153724 -
           (((C28234 * C6213 + C31772 + C31772 + C153338 * C6225) * C153754 +
             C31545 * C63342 + C31544 * C63341 + C28737 * C63340) *
                C153560 +
            (C67485 + C67479 + C67478 + C67477) * C153739) *
               C153413 * C153449) *
              C678)) /
            (p * q * std::sqrt(p + q));
    d2ee[166] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153740 +
              C31295 * C153600) *
                 C34883 +
             (C44303 + C44304) * C34884 + C44319 * C34885 + C44320 * C153747) *
                C153725 -
            ((C45174 + C45175) * C153747 + (C45176 + C45177) * C34885 +
             (C45178 + C45179) * C34884 +
             (C31296 * C153600 + C31295 * C153740) * C34883) *
                C153477) *
               C153724 +
           (((C45179 + C45178) * C34883 + (C45177 + C45176) * C34884 +
             (C45175 + C45174) * C34885 +
             (C29073 * C153740 + C29448 * C153600) * C153747) *
                C153477 -
            ((C44309 + C44310) * C153747 + (C44308 + C44307) * C34885 +
             (C44306 + C44305) * C34884 + (C44304 + C44303) * C34883) *
                C153725) *
               C153449) *
              C313 +
          ((((C31300 * C153740 + C31301 * C153600) * C34883 +
             (C45180 + C45181) * C34884 + (C45182 + C45183) * C34885 +
             (C45184 + C45185) * C153747) *
                C153477 -
            (C44321 * C153747 + C44322 * C34885 + (C44312 + C44311) * C34884 +
             (C31300 * C153600 +
              (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C153740) *
                 C34883) *
                C153725) *
               C153724 +
           (((C44311 + C44312) * C34883 + (C44313 + C44314) * C34884 +
             (C44315 + C44316) * C34885 + (C44317 + C44318) * C153747) *
                C153725 -
            (((C28234 * C28571 + C28592 + C28592 + C153338 * C28575) * C153600 +
              C29080 * C153740) *
                 C153747 +
             (C45185 + C45184) * C34885 + (C45183 + C45182) * C34884 +
             (C45181 + C45180) * C34883) *
                C153477) *
               C153449) *
              C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 +
               C2737 + C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
               C153761 * C162) *
                  C153740 +
              (C7654 + C7655 + C7656) * C153600) *
                 C153739 +
             ((C3086 + C3087 + C3088) * C153740 + C20351 * C153600) * C153560) *
                C153725 -
            ((C9063 * C153600 + C20352 * C153740) * C153560 +
             ((C7659 + C7658 + C7657) * C153600 +
              (C7656 + C7655 + C7654) * C153740) *
                 C153739) *
                C153477) *
               C153724 +
           (((C20351 * C153740 + (C4870 + C4871 + C4872) * C153600) * C153739 +
             ((C4212 + C4211 + C4210) * C153740 +
              (C4873 + C4874 + C4875) * C153600) *
                 C153560) *
                C153477 -
            ((C5621 * C153600 + (C3091 + C3090 + C3089) * C153740) * C153560 +
             (C20352 * C153600 + (C3088 + C3087 + C3086) * C153740) * C153739) *
                C153725) *
               C153449) *
              C313 +
          (((((C7663 + C7664 + C7665) * C153740 +
              (C7666 + C7667 + C7668) * C153600) *
                 C153739 +
             (C20353 * C153740 + (C8456 + C8457 + C8458) * C153600) * C153560) *
                C153477 -
            ((C20354 * C153600 + (C3097 + C3096 + C3095) * C153740) * C153560 +
             ((C7665 + C7664 + C7663) * C153600 +
              (C2733 * C147 + C2751 + C2751 + C153761 * C163 + C2731 * C146 +
               C2752 + C2752 + C2724 * C162 + C2729 * C145 + C2753 + C2753 +
               C2723 * C161) *
                  C153740) *
                 C153739) *
                C153725) *
               C153724 +
           ((((C3095 + C3096 + C3097) * C153740 + C20353 * C153600) * C153739 +
             ((C3098 + C3099 + C3100) * C153740 +
              (C4219 + C4220 + C4221) * C153600) *
                 C153560) *
                C153725 -
            (((C2733 * C3330 + C3367 + C3367 + C153761 * C3338 + C2731 * C3329 +
               C3368 + C3368 + C2724 * C3337 + C2729 * C3328 + C3369 + C3369 +
               C2723 * C3336) *
                  C153600 +
              (C4221 + C4220 + C4219) * C153740) *
                 C153560 +
             ((C8458 + C8457 + C8456) * C153600 + C20354 * C153740) * C153739) *
                C153477) *
               C153449) *
              C153384)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C63340 +
              C31295 * C63341 + C31296 * C63342 + C31299 * C153754) *
                 C153739 +
             (C67073 + C67074 + C67075 + C67076) * C153560) *
                C153725 -
            ((C67938 + C67939 + C67940 + C67941) * C153560 +
             (C34025 * C153754 + C31299 * C63342 + C31296 * C63341 +
              C31295 * C63340) *
                 C153739) *
                C153477) *
               C153724 +
           (((C67941 + C67940 + C67939 + C67938) * C153739 +
             (C29075 * C63340 + C29446 * C63341 + C31297 * C63342 +
              C32695 * C153754) *
                 C153560) *
                C153477 -
            ((C67077 + C67078 + C67079 + C67080) * C153560 +
             (C67076 + C67075 + C67074 + C67073) * C153739) *
                C153725) *
               C153449) *
              C313 +
          ((((C31300 * C63340 + C31301 * C63341 + C31302 * C63342 +
              C55997 * C153754) *
                 C153739 +
             (C67942 + C67943 + C67944 + C67945) * C153560) *
                C153477 -
            ((C67084 + C67083 + C67082 + C67081) * C153560 +
             (C31302 * C153754 + C31301 * C63342 + C31300 * C63341 +
              (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C63340) *
                 C153739) *
                C153725) *
               C153724 +
           (((C67081 + C67082 + C67083 + C67084) * C153739 +
             (C67085 + C67086 + C67087 + C67088) * C153560) *
                C153725 -
            (((C28234 * C31240 + C31272 + C31272 + C153338 * C31244) * C153754 +
              C31304 * C63342 + C31016 * C63341 + C29078 * C63340) *
                 C153560 +
             (C67945 + C67944 + C67943 + C67942) * C153739) *
                C153477) *
               C153449) *
              C153384)) /
            (p * q * std::sqrt(p + q));
    d2ee[167] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 +
                 C2737 + C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
                 C153761 * C162) *
                    C153740 +
                (C7654 + C7655 + C7656) * C153600) *
                   C153739 +
               ((C3086 + C3087 + C3088) * C153740 +
                (C4215 + C4214 + C4213) * C153600) *
                   C153560) *
                  C153413 * C153397 * C130 -
              (((C4218 + C4217 + C4216) * C153600 +
                (C3097 + C3096 + C3095) * C153740) *
                   C153560 +
               ((C7665 + C7664 + C7663) * C153600 +
                (C2733 * C147 + C2751 + C2751 + C153761 * C163 + C2731 * C146 +
                 C2752 + C2752 + C2724 * C162 + C2729 * C145 + C2753 + C2753 +
                 C2723 * C161) *
                    C153740) *
                   C153739) *
                  C153413 * C153397 * C131 +
              (((C2729 * C146 + C2754 + C2754 + C2723 * C162 + C2731 * C147 +
                 C2755 + C2755 + C2724 * C163 + C2733 * C148 + C2756 + C2756 +
                 C153761 * C164) *
                    C153740 +
                (C8142 + C8143 + C8144) * C153600) *
                   C153739 +
               ((C3621 + C3622 + C3623) * C153740 +
                (C2729 * C983 + C3850 + C3850 + C2723 * C995 + C2731 * C984 +
                 C3849 + C3849 + C2724 * C996 + C2733 * C985 + C3848 + C3848 +
                 C153761 * C997) *
                    C153600) *
                   C153560) *
                  C153413 * C153397 * C132 -
              (((C2733 * C986 + C18783 + C18783 + C153761 * C998 +
                 C2731 * C985 + C18784 + C18784 + C2724 * C997 + C2729 * C984 +
                 C18785 + C18785 + C2723 * C996) *
                    C153600 +
                (C2733 * C325 + C2766 + C2766 + C153761 * C349 + C2731 * C315 +
                 C2767 + C2767 + C2724 * C339 + C2729 * C316 + C2768 + C2768 +
                 C2723 * C340) *
                    C153740) *
                   C153560 +
               ((C2733 * C506 + C7122 + C7122 + C153761 * C530 + C2731 * C496 +
                 C7123 + C7123 + C2724 * C520 + C2729 * C497 + C7124 + C7124 +
                 C2723 * C521) *
                    C153600 +
                (C2733 * C149 + C2769 + C2769 + C153761 * C165 + C2731 * C148 +
                 C2770 + C2770 + C2724 * C164 + C2729 * C147 + C2771 + C2771 +
                 C2723 * C163) *
                    C153740) *
                   C153739) *
                  C153413 * C153397 * C133) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 +
                  C2737 + C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
                  C153761 * C162) *
                     C153740 +
                 (C7654 + C7655 + C7656) * C153600) *
                    C153739 +
                ((C3086 + C3087 + C3088) * C153740 +
                 (C4215 + C4214 + C4213) * C153600) *
                    C153560) *
                   C153413 * C310 -
               ((C5621 * C153600 + (C3091 + C3090 + C3089) * C153740) *
                    C153560 +
                ((C4213 + C4214 + C4215) * C153600 +
                 (C3088 + C3087 + C3086) * C153740) *
                    C153739) *
                   C153413 * C311 +
               ((C3106 * C153740 + (C4212 + C4211 + C4210) * C153600) *
                    C153739 +
                ((C3094 + C3093 + C3092) * C153740 +
                 (C5629 + C5630 + C5631) * C153600) *
                    C153560) *
                   C153413 * C312) *
                  C313 +
              ((((C3095 + C3096 + C3097) * C153740 +
                 (C4216 + C4217 + C4218) * C153600) *
                    C153739 +
                ((C3098 + C3099 + C3100) * C153740 +
                 (C4219 + C4220 + C4221) * C153600) *
                    C153560) *
                   C153413 * C311 -
               (((C4218 + C4217 + C4216) * C153600 +
                 (C3097 + C3096 + C3095) * C153740) *
                    C153560 +
                ((C7665 + C7664 + C7663) * C153600 +
                 (C2733 * C147 + C2751 + C2751 + C153761 * C163 + C2731 * C146 +
                  C2752 + C2752 + C2724 * C162 + C2729 * C145 + C2753 + C2753 +
                  C2723 * C161) *
                     C153740) *
                    C153739) *
                   C153413 * C310 -
               (((C2733 * C4146 + C4183 + C4183 + C153761 * C4154 +
                  C2731 * C4145 + C4184 + C4184 + C2724 * C4153 +
                  C2729 * C4144 + C4185 + C4185 + C2723 * C4152) *
                     C153600 +
                 (C3103 + C3102 + C3101) * C153740) *
                    C153560 +
                ((C4221 + C4220 + C4219) * C153600 + C3107 * C153740) *
                    C153739) *
                   C153413 * C312) *
                  C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 +
              C2737 + C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
              C153761 * C162) *
                 C153740 +
             (C7654 + C7655 + C7656) * C153600) *
                C153739 +
            ((C3086 + C3087 + C3088) * C153740 +
             (C4215 + C4214 + C4213) * C153600) *
                C153560) *
               C493 -
           ((C9063 * C153600 + (C4213 + C4214 + C4215) * C153740) * C153560 +
            ((C7659 + C7658 + C7657) * C153600 +
             (C7656 + C7655 + C7654) * C153740) *
                C153739) *
               C494 +
           ((C7674 * C153740 + (C7662 + C7661 + C7660) * C153600) * C153739 +
            ((C4870 + C4871 + C4872) * C153740 +
             (C9067 + C9068 + C9069) * C153600) *
                C153560) *
               C495) *
              C153397 * C313 +
          ((((C7663 + C7664 + C7665) * C153740 +
             (C7666 + C7667 + C7668) * C153600) *
                C153739 +
            ((C4216 + C4217 + C4218) * C153740 +
             (C8456 + C8457 + C8458) * C153600) *
                C153560) *
               C494 -
           (((C4218 + C4217 + C4216) * C153600 +
             (C3097 + C3096 + C3095) * C153740) *
                C153560 +
            ((C7665 + C7664 + C7663) * C153600 +
             (C2733 * C147 + C2751 + C2751 + C153761 * C163 + C2731 * C146 +
              C2752 + C2752 + C2724 * C162 + C2729 * C145 + C2753 + C2753 +
              C2723 * C161) *
                 C153740) *
                C153739) *
               C493 -
           (((C2733 * C8437 + C8447 + C8447 + C153761 * C8439 + C2731 * C6216 +
              C8448 + C8448 + C2724 * C6228 + C2729 * C6217 + C8449 + C8449 +
              C2723 * C6229) *
                 C153600 +
             (C8458 + C8457 + C8456) * C153740) *
                C153560 +
            ((C7671 + C7670 + C7669) * C153600 + C7675 * C153740) * C153739) *
               C495) *
              C153397 * C153384)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153740 +
            C31295 * C153600) *
               C34883 +
           (C28429 * C153740 + C29076 * C153600) * C34884 +
           (C28430 * C153740 + C29075 * C153600) * C34885 +
           (C28431 * C153740 + C29074 * C153600) * C153747) *
              C153413 * C153397 * C130 -
          ((C29079 * C153600 + C28436 * C153740) * C153747 +
           (C29078 * C153600 + C28435 * C153740) * C34885 +
           (C29077 * C153600 + C28434 * C153740) * C34884 +
           (C31300 * C153600 +
            (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C153740) *
               C34883) *
              C153413 * C153397 * C131 +
          (((C28234 * C146 + C28247 + C28247 + C153338 * C162) * C153740 +
            C31779 * C153600) *
               C34883 +
           (C28736 * C153740 + C31542 * C153600) * C34884 +
           (C28737 * C153740 + C31544 * C153600) * C34885 +
           (C28738 * C153740 +
            (C28234 * C4145 + C28867 + C28867 + C153338 * C4153) * C153600) *
               C153747) *
              C153413 * C153397 * C132 -
          (((C28234 * C4146 + C44108 + C44108 + C153338 * C4154) * C153600 +
            (C28234 * C1224 + C28253 + C28253 + C153338 * C1234) * C153740) *
               C153747 +
           ((C28234 * C1797 + C30762 + C30762 + C153338 * C1807) * C153600 +
            (C28234 * C323 + C28254 + C28254 + C153338 * C347) * C153740) *
               C34885 +
           ((C28234 * C984 + C30764 + C30764 + C153338 * C996) * C153600 +
            (C28234 * C316 + C28255 + C28255 + C153338 * C340) * C153740) *
               C34884 +
           ((C28234 * C497 + C30766 + C30766 + C153338 * C521) * C153600 +
            (C28234 * C147 + C28256 + C28256 + C153338 * C163) * C153740) *
               C34883) *
              C153413 * C153397 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153740 +
             C31295 * C153600) *
                C34883 +
            (C44303 + C44304) * C34884 + C44319 * C34885 + C44320 * C153747) *
               C153413 * C310 -
           ((C44309 + C44310) * C153747 + (C44308 + C44307) * C34885 +
            (C44306 + C44305) * C34884 + (C44304 + C44303) * C34883) *
               C153413 * C311 +
           (C44319 * C34883 + C44320 * C34884 + (C44310 + C44309) * C34885 +
            (C28433 * C153740 + C29867 * C153600) * C153747) *
               C153413 * C312) *
              C313 +
          (((C44311 + C44312) * C34883 + (C44313 + C44314) * C34884 +
            (C44315 + C44316) * C34885 + (C44317 + C44318) * C153747) *
               C153413 * C311 -
           (C44321 * C153747 + C44322 * C34885 + (C44312 + C44311) * C34884 +
            (C31300 * C153600 +
             (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C153740) *
                C34883) *
               C153413 * C310 -
           (((C28234 * C29033 + C29056 + C29056 + C153338 * C29037) * C153600 +
             C28438 * C153740) *
                C153747 +
            (C44318 + C44317) * C34885 + C44321 * C34884 + C44322 * C34883) *
               C153413 * C312) *
              C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153740 +
             C31295 * C153600) *
                C34883 +
            (C44303 + C44304) * C34884 + C44319 * C34885 + C44320 * C153747) *
               C493 -
           ((C29447 * C153600 + C29074 * C153740) * C153747 +
            (C29446 * C153600 + C29075 * C153740) * C34885 +
            (C29445 * C153600 + C29076 * C153740) * C34884 +
            (C31296 * C153600 + C31295 * C153740) * C34883) *
               C494 +
           ((C31296 * C153740 + C31299 * C153600) * C34883 +
            (C29445 * C153740 + C31298 * C153600) * C34884 +
            (C29446 * C153740 + C31297 * C153600) * C34885 +
            (C29447 * C153740 + C32696 * C153600) * C153747) *
               C495) *
              C153397 * C313 +
          (((C31300 * C153740 + C31301 * C153600) * C34883 +
            (C29077 * C153740 + C31015 * C153600) * C34884 +
            (C29078 * C153740 + C31016 * C153600) * C34885 +
            (C29079 * C153740 + C31017 * C153600) * C153747) *
               C494 -
           (C44321 * C153747 + C44322 * C34885 + (C44312 + C44311) * C34884 +
            (C31300 * C153600 +
             (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C153740) *
                C34883) *
               C493 -
           (((C28234 * C32070 + C32086 + C32086 + C153338 * C32072) * C153600 +
             C31017 * C153740) *
                C153747 +
            (C31304 * C153600 + C31016 * C153740) * C34885 +
            (C31303 * C153600 + C31015 * C153740) * C34884 +
            (C31302 * C153600 + C31301 * C153740) * C34883) *
               C495) *
              C153397 * C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C63340 +
            C31295 * C63341 + C31296 * C63342 + C31299 * C153754) *
               C153739 +
           (C28429 * C63340 + C29076 * C63341 + C29445 * C63342 +
            C31298 * C153754) *
               C153560) *
              C153413 * C153397 * C130 -
          ((C31303 * C153754 + C31015 * C63342 + C29077 * C63341 +
            C28434 * C63340) *
               C153560 +
           (C31302 * C153754 + C31301 * C63342 + C31300 * C63341 +
            (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C63340) *
               C153739) *
              C153413 * C153397 * C131 +
          (((C28234 * C146 + C28247 + C28247 + C153338 * C162) * C63340 +
            C31779 * C63341 + C31780 * C63342 + C56253 * C153754) *
               C153739 +
           (C28736 * C63340 + C31542 * C63341 + C31543 * C63342 +
            (C28234 * C6216 + C31773 + C31773 + C153338 * C6228) * C153754) *
               C153560) *
              C153413 * C153397 * C132 -
          (((C28234 * C8437 + C66878 + C66878 + C153338 * C8439) * C153754 +
            (C28234 * C1366 + C30763 + C30763 + C153338 * C1376) * C63342 +
            (C28234 * C984 + C30764 + C30764 + C153338 * C996) * C63341 +
            (C28234 * C316 + C28255 + C28255 + C153338 * C340) * C63340) *
               C153560 +
           ((C28234 * C2149 + C55730 + C55730 + C153338 * C2159) * C153754 +
            (C28234 * C504 + C30765 + C30765 + C153338 * C528) * C63342 +
            (C28234 * C497 + C30766 + C30766 + C153338 * C521) * C63341 +
            (C28234 * C147 + C28256 + C28256 + C153338 * C163) * C63340) *
               C153739) *
              C153413 * C153397 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C63340 +
             C31295 * C63341 + C31296 * C63342 + C31299 * C153754) *
                C153739 +
            (C67073 + C67074 + C67075 + C67076) * C153560) *
               C153413 * C310 -
           ((C67077 + C67078 + C67079 + C67080) * C153560 +
            (C67076 + C67075 + C67074 + C67073) * C153739) *
               C153413 * C311 +
           ((C67080 + C67079 + C67078 + C67077) * C153739 +
            (C28431 * C63340 + C29074 * C63341 + C29447 * C63342 +
             C32696 * C153754) *
                C153560) *
               C153413 * C312) *
              C313 +
          (((C67081 + C67082 + C67083 + C67084) * C153739 +
            (C67085 + C67086 + C67087 + C67088) * C153560) *
               C153413 * C311 -
           ((C67084 + C67083 + C67082 + C67081) * C153560 +
            (C31302 * C153754 + C31301 * C63342 + C31300 * C63341 +
             (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C63340) *
                C153739) *
               C153413 * C310 -
           (((C28234 * C32070 + C32086 + C32086 + C153338 * C32072) * C153754 +
             C31017 * C63342 + C29079 * C63341 + C28436 * C63340) *
                C153560 +
            (C67088 + C67087 + C67086 + C67085) * C153739) *
               C153413 * C312) *
              C153384)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C63340 +
             C31295 * C63341 + C31296 * C63342 + C31299 * C153754) *
                C153739 +
            (C67073 + C67074 + C67075 + C67076) * C153560) *
               C493 -
           ((C32694 * C153754 + C31298 * C63342 + C29445 * C63341 +
             C29076 * C63340) *
                C153560 +
            (C34025 * C153754 + C31299 * C63342 + C31296 * C63341 +
             C31295 * C63340) *
                C153739) *
               C494 +
           ((C31296 * C63340 + C31299 * C63341 + C34025 * C63342 +
             C55996 * C153754) *
                C153739 +
            (C29445 * C63340 + C31298 * C63341 + C32694 * C63342 +
             C56760 * C153754) *
                C153560) *
               C495) *
              C153397 * C313 +
          (((C31300 * C63340 + C31301 * C63341 + C31302 * C63342 +
             C55997 * C153754) *
                C153739 +
            (C29077 * C63340 + C31015 * C63341 + C31303 * C63342 +
             C56425 * C153754) *
                C153560) *
               C494 -
           ((C67084 + C67083 + C67082 + C67081) * C153560 +
            (C31302 * C153754 + C31301 * C63342 + C31300 * C63341 +
             (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C63340) *
                C153739) *
               C493 -
           (((C28234 * C56416 + C56422 + C56422 + C153338 * C56418) * C153754 +
             C56425 * C63342 + C31303 * C63341 + C31015 * C63340) *
                C153560 +
            (C55998 * C153754 + C55997 * C63342 + C31302 * C63341 +
             C31301 * C63340) *
                C153739) *
               C495) *
              C153397 * C153384)) /
            (p * q * std::sqrt(p + q));
    d2ee[168] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153740 +
             C31295 * C153600) *
                C34883 +
            (C44303 + C44304) * C34884 + C44319 * C34885 + C44320 * C153747) *
               C153725 -
           ((C29447 * C153600 + C29074 * C153740) * C153747 +
            (C29446 * C153600 + C29075 * C153740) * C34885 +
            (C29445 * C153600 + C29076 * C153740) * C34884 +
            (C31296 * C153600 + C31295 * C153740) * C34883) *
               C153477) *
              C153397 * C153793 +
          (((C31300 * C153740 + C31301 * C153600) * C34883 +
            (C29077 * C153740 + C31015 * C153600) * C34884 +
            (C29078 * C153740 + C31016 * C153600) * C34885 +
            (C29079 * C153740 + C31017 * C153600) * C153747) *
               C153477 -
           (C44321 * C153747 + C44322 * C34885 + (C44312 + C44311) * C34884 +
            (C31300 * C153600 +
             (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C153740) *
                C34883) *
               C153725) *
              C153397 * C153794 +
          ((((C28234 * C146 + C28247 + C28247 + C153338 * C162) * C153740 +
             C31779 * C153600) *
                C34883 +
            (C44711 + C44712) * C34884 + (C44713 + C44714) * C34885 +
            (C44715 + C44721) * C153747) *
               C153725 -
           (((C28234 * C4833 + C31533 + C31533 + C153338 * C4839) * C153600 +
             C44720 * C153740) *
                C153747 +
            (C31545 * C153600 + C31544 * C153740) * C34885 +
            (C31543 * C153600 + C31542 * C153740) * C34884 +
            (C31780 * C153600 + C31779 * C153740) * C34883) *
               C153477) *
              C153397 * C678)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 +
              C2737 + C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
              C153761 * C162) *
                 C153740 +
             (C7654 + C7655 + C7656) * C153600) *
                C153739 +
            ((C3086 + C3087 + C3088) * C153740 +
             (C4215 + C4214 + C4213) * C153600) *
                C153560) *
               C153725 -
           ((C9063 * C153600 + (C4213 + C4214 + C4215) * C153740) * C153560 +
            ((C7659 + C7658 + C7657) * C153600 +
             (C7656 + C7655 + C7654) * C153740) *
                C153739) *
               C153477) *
              C153397 * C153793 +
          ((((C7663 + C7664 + C7665) * C153740 +
             (C7666 + C7667 + C7668) * C153600) *
                C153739 +
            ((C4216 + C4217 + C4218) * C153740 +
             (C8456 + C8457 + C8458) * C153600) *
                C153560) *
               C153477 -
           (((C4218 + C4217 + C4216) * C153600 +
             (C3097 + C3096 + C3095) * C153740) *
                C153560 +
            ((C7665 + C7664 + C7663) * C153600 +
             (C2733 * C147 + C2751 + C2751 + C153761 * C163 + C2731 * C146 +
              C2752 + C2752 + C2724 * C162 + C2729 * C145 + C2753 + C2753 +
              C2723 * C161) *
                 C153740) *
                C153739) *
               C153725) *
              C153397 * C153794 +
          ((((C2729 * C146 + C2754 + C2754 + C2723 * C162 + C2731 * C147 +
              C2755 + C2755 + C2724 * C163 + C2733 * C148 + C2756 + C2756 +
              C153761 * C164) *
                 C153740 +
             (C8142 + C8143 + C8144) * C153600) *
                C153739 +
            ((C3621 + C3622 + C3623) * C153740 +
             (C19668 + C19669 + C19670) * C153600) *
                C153560) *
               C153725 -
           (((C2733 * C1365 + C7894 + C7894 + C153761 * C1375 + C2731 * C1366 +
              C7895 + C7895 + C2724 * C1376 + C2729 * C1367 + C7896 + C7896 +
              C2723 * C1377) *
                 C153600 +
             (C19670 + C19669 + C19668) * C153740) *
                C153560 +
            ((C8147 + C8146 + C8145) * C153600 +
             (C8144 + C8143 + C8142) * C153740) *
                C153739) *
               C153477) *
              C153397 * C678)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C63340 +
             C31295 * C63341 + C31296 * C63342 + C31299 * C153754) *
                C153739 +
            (C67073 + C67074 + C67075 + C67076) * C153560) *
               C153725 -
           ((C32694 * C153754 + C31298 * C63342 + C29445 * C63341 +
             C29076 * C63340) *
                C153560 +
            (C34025 * C153754 + C31299 * C63342 + C31296 * C63341 +
             C31295 * C63340) *
                C153739) *
               C153477) *
              C153397 * C153793 +
          (((C31300 * C63340 + C31301 * C63341 + C31302 * C63342 +
             C55997 * C153754) *
                C153739 +
            (C29077 * C63340 + C31015 * C63341 + C31303 * C63342 +
             C56425 * C153754) *
                C153560) *
               C153477 -
           ((C67084 + C67083 + C67082 + C67081) * C153560 +
            (C31302 * C153754 + C31301 * C63342 + C31300 * C63341 +
             (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C63340) *
                C153739) *
               C153725) *
              C153397 * C153794 +
          ((((C28234 * C146 + C28247 + C28247 + C153338 * C162) * C63340 +
             C31779 * C63341 + C31780 * C63342 + C56253 * C153754) *
                C153739 +
            (C67477 + C67478 + C67479 + C67485) * C153560) *
               C153725 -
           (((C28234 * C9040 + C56121 + C56121 + C153338 * C9046) * C153754 +
             C67484 * C63342 + C31543 * C63341 + C31542 * C63340) *
                C153560 +
            (C56254 * C153754 + C56253 * C63342 + C31780 * C63341 +
             C31779 * C63340) *
                C153739) *
               C153477) *
              C153397 * C678)) /
            (p * q * std::sqrt(p + q));
    d2ee[169] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 +
              C2737 + C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
              C153761 * C162) *
                 C153740 +
             (C7654 + C7655 + C7656) * C153600) *
                C153739 +
            ((C3086 + C3087 + C3088) * C153740 +
             (C4215 + C4214 + C4213) * C153600) *
                C153560) *
               C153413 * C310 -
           ((C5621 * C153600 + (C3091 + C3090 + C3089) * C153740) * C153560 +
            ((C4213 + C4214 + C4215) * C153600 +
             (C3088 + C3087 + C3086) * C153740) *
                C153739) *
               C153413 * C311 +
           ((C3106 * C153740 + (C4212 + C4211 + C4210) * C153600) * C153739 +
            ((C3094 + C3093 + C3092) * C153740 +
             (C5629 + C5630 + C5631) * C153600) *
                C153560) *
               C153413 * C312) *
              C313 +
          ((((C3095 + C3096 + C3097) * C153740 +
             (C4216 + C4217 + C4218) * C153600) *
                C153739 +
            ((C3098 + C3099 + C3100) * C153740 +
             (C4219 + C4220 + C4221) * C153600) *
                C153560) *
               C153413 * C311 -
           (((C4218 + C4217 + C4216) * C153600 +
             (C3097 + C3096 + C3095) * C153740) *
                C153560 +
            ((C7665 + C7664 + C7663) * C153600 +
             (C2733 * C147 + C2751 + C2751 + C153761 * C163 + C2731 * C146 +
              C2752 + C2752 + C2724 * C162 + C2729 * C145 + C2753 + C2753 +
              C2723 * C161) *
                 C153740) *
                C153739) *
               C153413 * C310 -
           (((C2733 * C4146 + C4183 + C4183 + C153761 * C4154 + C2731 * C4145 +
              C4184 + C4184 + C2724 * C4153 + C2729 * C4144 + C4185 + C4185 +
              C2723 * C4152) *
                 C153600 +
             (C3103 + C3102 + C3101) * C153740) *
                C153560 +
            ((C4221 + C4220 + C4219) * C153600 + C3107 * C153740) * C153739) *
               C153413 * C312) *
              C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 +
             C2737 + C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
             C153761 * C162) *
                C153740 +
            (C7654 + C7655 + C7656) * C153600) *
               C153739 +
           ((C3086 + C3087 + C3088) * C153740 +
            (C4215 + C4214 + C4213) * C153600) *
               C153560) *
              C153413 * C153397 * C130 -
          (((C4218 + C4217 + C4216) * C153600 +
            (C3097 + C3096 + C3095) * C153740) *
               C153560 +
           ((C7665 + C7664 + C7663) * C153600 +
            (C2733 * C147 + C2751 + C2751 + C153761 * C163 + C2731 * C146 +
             C2752 + C2752 + C2724 * C162 + C2729 * C145 + C2753 + C2753 +
             C2723 * C161) *
                C153740) *
               C153739) *
              C153413 * C153397 * C131 +
          (((C2729 * C146 + C2754 + C2754 + C2723 * C162 + C2731 * C147 +
             C2755 + C2755 + C2724 * C163 + C2733 * C148 + C2756 + C2756 +
             C153761 * C164) *
                C153740 +
            (C8142 + C8143 + C8144) * C153600) *
               C153739 +
           ((C3621 + C3622 + C3623) * C153740 +
            (C2729 * C983 + C3850 + C3850 + C2723 * C995 + C2731 * C984 +
             C3849 + C3849 + C2724 * C996 + C2733 * C985 + C3848 + C3848 +
             C153761 * C997) *
                C153600) *
               C153560) *
              C153413 * C153397 * C132 -
          (((C2733 * C986 + C18783 + C18783 + C153761 * C998 + C2731 * C985 +
             C18784 + C18784 + C2724 * C997 + C2729 * C984 + C18785 + C18785 +
             C2723 * C996) *
                C153600 +
            (C2733 * C325 + C2766 + C2766 + C153761 * C349 + C2731 * C315 +
             C2767 + C2767 + C2724 * C339 + C2729 * C316 + C2768 + C2768 +
             C2723 * C340) *
                C153740) *
               C153560 +
           ((C2733 * C506 + C7122 + C7122 + C153761 * C530 + C2731 * C496 +
             C7123 + C7123 + C2724 * C520 + C2729 * C497 + C7124 + C7124 +
             C2723 * C521) *
                C153600 +
            (C2733 * C149 + C2769 + C2769 + C153761 * C165 + C2731 * C148 +
             C2770 + C2770 + C2724 * C164 + C2729 * C147 + C2771 + C2771 +
             C2723 * C163) *
                C153740) *
               C153739) *
              C153413 * C153397 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153740 +
            C31295 * C153600) *
               C34883 +
           (C28429 * C153740 + C29076 * C153600) * C34884 +
           (C28430 * C153740 + C29075 * C153600) * C34885 +
           (C28431 * C153740 + C29074 * C153600) * C153747) *
              C153413 * C153397 * C130 -
          ((C29079 * C153600 + C28436 * C153740) * C153747 +
           (C29078 * C153600 + C28435 * C153740) * C34885 +
           (C29077 * C153600 + C28434 * C153740) * C34884 +
           (C31300 * C153600 +
            (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C153740) *
               C34883) *
              C153413 * C153397 * C131 +
          (((C28234 * C146 + C28247 + C28247 + C153338 * C162) * C153740 +
            C31779 * C153600) *
               C34883 +
           (C28736 * C153740 + C31542 * C153600) * C34884 +
           (C28737 * C153740 + C31544 * C153600) * C34885 +
           (C28738 * C153740 +
            (C28234 * C4145 + C28867 + C28867 + C153338 * C4153) * C153600) *
               C153747) *
              C153413 * C153397 * C132 -
          (((C28234 * C4146 + C44108 + C44108 + C153338 * C4154) * C153600 +
            (C28234 * C1224 + C28253 + C28253 + C153338 * C1234) * C153740) *
               C153747 +
           ((C28234 * C1797 + C30762 + C30762 + C153338 * C1807) * C153600 +
            (C28234 * C323 + C28254 + C28254 + C153338 * C347) * C153740) *
               C34885 +
           ((C28234 * C984 + C30764 + C30764 + C153338 * C996) * C153600 +
            (C28234 * C316 + C28255 + C28255 + C153338 * C340) * C153740) *
               C34884 +
           ((C28234 * C497 + C30766 + C30766 + C153338 * C521) * C153600 +
            (C28234 * C147 + C28256 + C28256 + C153338 * C163) * C153740) *
               C34883) *
              C153413 * C153397 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153740 +
             C31295 * C153600) *
                C34883 +
            (C44303 + C44304) * C34884 + C44319 * C34885 + C44320 * C153747) *
               C153413 * C310 -
           ((C44309 + C44310) * C153747 + (C44308 + C44307) * C34885 +
            (C44306 + C44305) * C34884 + (C44304 + C44303) * C34883) *
               C153413 * C311 +
           (C44319 * C34883 + C44320 * C34884 + (C44310 + C44309) * C34885 +
            (C28433 * C153740 + C29867 * C153600) * C153747) *
               C153413 * C312) *
              C313 +
          (((C44311 + C44312) * C34883 + (C44313 + C44314) * C34884 +
            (C44315 + C44316) * C34885 + (C44317 + C44318) * C153747) *
               C153413 * C311 -
           (C44321 * C153747 + C44322 * C34885 + (C44312 + C44311) * C34884 +
            (C31300 * C153600 +
             (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C153740) *
                C34883) *
               C153413 * C310 -
           (((C28234 * C29033 + C29056 + C29056 + C153338 * C29037) * C153600 +
             C28438 * C153740) *
                C153747 +
            (C44318 + C44317) * C34885 + C44321 * C34884 + C44322 * C34883) *
               C153413 * C312) *
              C153384)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C63340 +
            C31295 * C63341 + C31296 * C63342 + C31299 * C153754) *
               C153739 +
           (C28429 * C63340 + C29076 * C63341 + C29445 * C63342 +
            C31298 * C153754) *
               C153560) *
              C153413 * C153397 * C130 -
          ((C31303 * C153754 + C31015 * C63342 + C29077 * C63341 +
            C28434 * C63340) *
               C153560 +
           (C31302 * C153754 + C31301 * C63342 + C31300 * C63341 +
            (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C63340) *
               C153739) *
              C153413 * C153397 * C131 +
          (((C28234 * C146 + C28247 + C28247 + C153338 * C162) * C63340 +
            C31779 * C63341 + C31780 * C63342 + C56253 * C153754) *
               C153739 +
           (C28736 * C63340 + C31542 * C63341 + C31543 * C63342 +
            (C28234 * C6216 + C31773 + C31773 + C153338 * C6228) * C153754) *
               C153560) *
              C153413 * C153397 * C132 -
          (((C28234 * C8437 + C66878 + C66878 + C153338 * C8439) * C153754 +
            (C28234 * C1366 + C30763 + C30763 + C153338 * C1376) * C63342 +
            (C28234 * C984 + C30764 + C30764 + C153338 * C996) * C63341 +
            (C28234 * C316 + C28255 + C28255 + C153338 * C340) * C63340) *
               C153560 +
           ((C28234 * C2149 + C55730 + C55730 + C153338 * C2159) * C153754 +
            (C28234 * C504 + C30765 + C30765 + C153338 * C528) * C63342 +
            (C28234 * C497 + C30766 + C30766 + C153338 * C521) * C63341 +
            (C28234 * C147 + C28256 + C28256 + C153338 * C163) * C63340) *
               C153739) *
              C153413 * C153397 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C63340 +
             C31295 * C63341 + C31296 * C63342 + C31299 * C153754) *
                C153739 +
            (C67073 + C67074 + C67075 + C67076) * C153560) *
               C153413 * C310 -
           ((C67077 + C67078 + C67079 + C67080) * C153560 +
            (C67076 + C67075 + C67074 + C67073) * C153739) *
               C153413 * C311 +
           ((C67080 + C67079 + C67078 + C67077) * C153739 +
            (C28431 * C63340 + C29074 * C63341 + C29447 * C63342 +
             C32696 * C153754) *
                C153560) *
               C153413 * C312) *
              C313 +
          (((C67081 + C67082 + C67083 + C67084) * C153739 +
            (C67085 + C67086 + C67087 + C67088) * C153560) *
               C153413 * C311 -
           ((C67084 + C67083 + C67082 + C67081) * C153560 +
            (C31302 * C153754 + C31301 * C63342 + C31300 * C63341 +
             (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C63340) *
                C153739) *
               C153413 * C310 -
           (((C28234 * C32070 + C32086 + C32086 + C153338 * C32072) * C153754 +
             C31017 * C63342 + C29079 * C63341 + C28436 * C63340) *
                C153560 +
            (C67088 + C67087 + C67086 + C67085) * C153739) *
               C153413 * C312) *
              C153384)) /
            (p * q * std::sqrt(p + q));
    d2ee[170] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153740 +
             C31295 * C153600) *
                C34883 +
            (C44303 + C44304) * C34884 + C44319 * C34885 + C44320 * C153747) *
               C153413 * C153795 -
           (C45510 * C153747 + C45511 * C34885 + (C44306 + C44305) * C34884 +
            (C44304 + C44303) * C34883) *
               C153413 * C153796 +
           (C44319 * C34883 + C44320 * C34884 + (C44310 + C44309) * C34885 +
            (C45512 + C45513) * C153747) *
               C153413 * C1509) *
              C153716 +
          (((C44311 + C44312) * C34883 + (C44313 + C44314) * C34884 +
            (C44315 + C44316) * C34885 + (C44317 + C44318) * C153747) *
               C153413 * C153796 -
           (C44321 * C153747 + C44322 * C34885 + (C44312 + C44311) * C34884 +
            (C31300 * C153600 +
             (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C153740) *
                C34883) *
               C153413 * C153795 -
           (((C28234 * C29033 + C29056 + C29056 + C153338 * C29037) * C153600 +
             C28438 * C153740) *
                C153747 +
            (C44318 + C44317) * C34885 + C44321 * C34884 + C44322 * C34883) *
               C153413 * C1509) *
              C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 +
              C2737 + C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
              C153761 * C162) *
                 C153740 +
             (C7654 + C7655 + C7656) * C153600) *
                C153739 +
            ((C3086 + C3087 + C3088) * C153740 + C20351 * C153600) * C153560) *
               C153413 * C153795 -
           ((C5621 * C153600 + (C3091 + C3090 + C3089) * C153740) * C153560 +
            (C20352 * C153600 + (C3088 + C3087 + C3086) * C153740) * C153739) *
               C153413 * C153796 +
           ((C3106 * C153740 + (C4212 + C4211 + C4210) * C153600) * C153739 +
            ((C3094 + C3093 + C3092) * C153740 +
             (C5629 + C5630 + C5631) * C153600) *
                C153560) *
               C153413 * C1509) *
              C153716 +
          ((((C3095 + C3096 + C3097) * C153740 + C20353 * C153600) * C153739 +
            ((C3098 + C3099 + C3100) * C153740 +
             (C4219 + C4220 + C4221) * C153600) *
                C153560) *
               C153413 * C153796 -
           ((C20354 * C153600 + (C3097 + C3096 + C3095) * C153740) * C153560 +
            ((C7665 + C7664 + C7663) * C153600 +
             (C2733 * C147 + C2751 + C2751 + C153761 * C163 + C2731 * C146 +
              C2752 + C2752 + C2724 * C162 + C2729 * C145 + C2753 + C2753 +
              C2723 * C161) *
                 C153740) *
                C153739) *
               C153413 * C153795 -
           (((C2733 * C4146 + C4183 + C4183 + C153761 * C4154 + C2731 * C4145 +
              C4184 + C4184 + C2724 * C4153 + C2729 * C4144 + C4185 + C4185 +
              C2723 * C4152) *
                 C153600 +
             (C3103 + C3102 + C3101) * C153740) *
                C153560 +
            ((C4221 + C4220 + C4219) * C153600 + C3107 * C153740) * C153739) *
               C153413 * C1509) *
              C153384)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C63340 +
             C31295 * C63341 + C31296 * C63342 + C31299 * C153754) *
                C153739 +
            (C67073 + C67074 + C67075 + C67076) * C153560) *
               C153413 * C153795 -
           ((C67077 + C67078 + C67079 + C67080) * C153560 +
            (C67076 + C67075 + C67074 + C67073) * C153739) *
               C153413 * C153796 +
           ((C67080 + C67079 + C67078 + C67077) * C153739 +
            (C68270 + C68271 + C68272 + C68273) * C153560) *
               C153413 * C1509) *
              C153716 +
          (((C67081 + C67082 + C67083 + C67084) * C153739 +
            (C67085 + C67086 + C67087 + C67088) * C153560) *
               C153413 * C153796 -
           ((C67084 + C67083 + C67082 + C67081) * C153560 +
            (C31302 * C153754 + C31301 * C63342 + C31300 * C63341 +
             (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C63340) *
                C153739) *
               C153413 * C153795 -
           (((C28234 * C32070 + C32086 + C32086 + C153338 * C32072) * C153754 +
             C31017 * C63342 + C29079 * C63341 + C28436 * C63340) *
                C153560 +
            (C67088 + C67087 + C67086 + C67085) * C153739) *
               C153413 * C1509) *
              C153384)) /
            (p * q * std::sqrt(p + q));
    d2ee[171] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153740 +
             C31295 * C153600) *
                C34883 +
            (C44303 + C44304) * C34884 + C44319 * C34885 + C44320 * C153747) *
               C153725 -
           (C46360 * C153747 + C46361 * C34885 + (C45178 + C45179) * C34884 +
            (C31296 * C153600 + C31295 * C153740) * C34883) *
               C153477) *
              C153795 +
          (((C45179 + C45178) * C34883 + (C45177 + C45176) * C34884 +
            (C45175 + C45174) * C34885 + (C46362 + C46363) * C153747) *
               C153477 -
           (C45510 * C153747 + C45511 * C34885 + (C44306 + C44305) * C34884 +
            (C44304 + C44303) * C34883) *
               C153725) *
              C153796 +
          ((C44319 * C34883 + C44320 * C34884 + (C44310 + C44309) * C34885 +
            (C45512 + C45513) * C153747) *
               C153725 -
           (((C28234 * C29424 + C29436 + C29436 + C153338 * C29426) * C153600 +
             C29867 * C153740) *
                C153747 +
            (C46363 + C46362) * C34885 + C46360 * C34884 + C46361 * C34883) *
               C153477) *
              C1509) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 +
              C2737 + C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
              C153761 * C162) *
                 C153740 +
             (C7654 + C7655 + C7656) * C153600) *
                C153739 +
            ((C3086 + C3087 + C3088) * C153740 + C20351 * C153600) * C153560) *
               C153725 -
           ((C9063 * C153600 + C20352 * C153740) * C153560 +
            ((C7659 + C7658 + C7657) * C153600 +
             (C7656 + C7655 + C7654) * C153740) *
                C153739) *
               C153477) *
              C153795 +
          (((C20351 * C153740 + C21130 * C153600) * C153739 +
            (C22098 * C153740 + (C4873 + C4874 + C4875) * C153600) * C153560) *
               C153477 -
           ((C5621 * C153600 + (C3091 + C3090 + C3089) * C153740) * C153560 +
            (C20352 * C153600 + (C3088 + C3087 + C3086) * C153740) * C153739) *
               C153725) *
              C153796 +
          (((C3106 * C153740 + C22098 * C153600) * C153739 +
            ((C3094 + C3093 + C3092) * C153740 +
             (C5629 + C5630 + C5631) * C153600) *
                C153560) *
               C153725 -
           (((C2733 * C4833 + C4855 + C4855 + C153761 * C4839 + C2731 * C4834 +
              C4856 + C4856 + C2724 * C4840 + C2729 * C4835 + C4857 + C4857 +
              C2723 * C4841) *
                 C153600 +
             (C5631 + C5630 + C5629) * C153740) *
                C153560 +
            ((C4875 + C4874 + C4873) * C153600 + C5621 * C153740) * C153739) *
               C153477) *
              C1509) *
         C153378) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C63340 +
             C31295 * C63341 + C31296 * C63342 + C31299 * C153754) *
                C153739 +
            (C67073 + C67074 + C67075 + C67076) * C153560) *
               C153725 -
           ((C67938 + C67939 + C67940 + C67941) * C153560 +
            (C34025 * C153754 + C31299 * C63342 + C31296 * C63341 +
             C31295 * C63340) *
                C153739) *
               C153477) *
              C153795 +
          (((C67941 + C67940 + C67939 + C67938) * C153739 +
            (C69118 + C69119 + C69120 + C69121) * C153560) *
               C153477 -
           ((C67077 + C67078 + C67079 + C67080) * C153560 +
            (C67076 + C67075 + C67074 + C67073) * C153739) *
               C153725) *
              C153796 +
          (((C67080 + C67079 + C67078 + C67077) * C153739 +
            (C68270 + C68271 + C68272 + C68273) * C153560) *
               C153725 -
           (((C28234 * C32673 + C32687 + C32687 + C153338 * C32675) * C153754 +
             C32696 * C63342 + C29447 * C63341 + C29074 * C63340) *
                C153560 +
            (C69121 + C69120 + C69119 + C69118) * C153739) *
               C153477) *
              C1509) *
         C153378) /
            (p * q * std::sqrt(p + q));
    d2ee[172] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 +
                  C2737 + C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
                  C153761 * C162) *
                     C153740 +
                 (C7654 + C7655 + C7656) * C153600) *
                    C153739 +
                ((C3086 + C3087 + C3088) * C153740 + C20351 * C153600) *
                    C153560) *
                   C153413 * C1131 -
               ((C5621 * C153600 + (C3091 + C3090 + C3089) * C153740) *
                    C153560 +
                (C20352 * C153600 + (C3088 + C3087 + C3086) * C153740) *
                    C153739) *
                   C153413 * C153449) *
                  C1133 +
              ((((C3095 + C3096 + C3097) * C153740 + C20353 * C153600) *
                    C153739 +
                ((C3098 + C3099 + C3100) * C153740 +
                 (C4219 + C4220 + C4221) * C153600) *
                    C153560) *
                   C153413 * C153449 -
               ((C20354 * C153600 + (C3097 + C3096 + C3095) * C153740) *
                    C153560 +
                ((C7665 + C7664 + C7663) * C153600 +
                 (C2733 * C147 + C2751 + C2751 + C153761 * C163 + C2731 * C146 +
                  C2752 + C2752 + C2724 * C162 + C2729 * C145 + C2753 + C2753 +
                  C2723 * C161) *
                     C153740) *
                    C153739) *
                   C153413 * C1131) *
                  C1134 +
              ((((C2729 * C146 + C2754 + C2754 + C2723 * C162 + C2731 * C147 +
                  C2755 + C2755 + C2724 * C163 + C2733 * C148 + C2756 + C2756 +
                  C153761 * C164) *
                     C153740 +
                 (C8142 + C8143 + C8144) * C153600) *
                    C153739 +
                ((C3621 + C3622 + C3623) * C153740 +
                 (C19668 + C19669 + C19670) * C153600) *
                    C153560) *
                   C153413 * C1131 -
               (((C2733 * C1796 + C3845 + C3845 + C153761 * C1806 +
                  C2731 * C1797 + C3846 + C3846 + C2724 * C1807 +
                  C2729 * C1798 + C3847 + C3847 + C2723 * C1808) *
                     C153600 +
                 (C3626 + C3625 + C3624) * C153740) *
                    C153560 +
                ((C19670 + C19669 + C19668) * C153600 +
                 (C3623 + C3622 + C3621) * C153740) *
                    C153739) *
                   C153413 * C153449) *
                  C1135) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 +
                 C2737 + C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
                 C153761 * C162) *
                    C153740 +
                (C7654 + C7655 + C7656) * C153600) *
                   C153739 +
               ((C3086 + C3087 + C3088) * C153740 + C20351 * C153600) *
                   C153560) *
                  C153413 * C1218 -
              ((C5621 * C153600 + (C3091 + C3090 + C3089) * C153740) * C153560 +
               (C20352 * C153600 + (C3088 + C3087 + C3086) * C153740) *
                   C153739) *
                  C153413 * C1219 +
              ((C3106 * C153740 + (C4212 + C4211 + C4210) * C153600) * C153739 +
               ((C3094 + C3093 + C3092) * C153740 +
                (C5629 + C5630 + C5631) * C153600) *
                   C153560) *
                  C153413 * C1220 -
              (((C2733 * C5601 + C5618 + C5618 + C153761 * C5607 +
                 C2731 * C5602 + C5619 + C5619 + C2724 * C5608 + C2729 * C5603 +
                 C5620 + C5620 + C2723 * C5609) *
                    C153600 +
                (C4615 + C4614 + C4613) * C153740) *
                   C153560 +
               ((C5631 + C5630 + C5629) * C153600 + C4605 * C153740) *
                   C153739) *
                  C153413 * C1221) *
             C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 +
              C2737 + C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
              C153761 * C162) *
                 C153740 +
             (C7654 + C7655 + C7656) * C153600) *
                C153739 +
            ((C3086 + C3087 + C3088) * C153740 + C20351 * C153600) * C153560) *
               C493 -
           ((C9063 * C153600 + C20352 * C153740) * C153560 +
            ((C7659 + C7658 + C7657) * C153600 +
             (C7656 + C7655 + C7654) * C153740) *
                C153739) *
               C494 +
           ((C7674 * C153740 + (C7662 + C7661 + C7660) * C153600) * C153739 +
            (C21130 * C153740 + (C9067 + C9068 + C9069) * C153600) * C153560) *
               C495) *
              C1131 +
          (((C20351 * C153740 + C21130 * C153600) * C153739 +
            ((C4212 + C4211 + C4210) * C153740 +
             (C4873 + C4874 + C4875) * C153600) *
                C153560) *
               C494 -
           ((C5621 * C153600 + (C3091 + C3090 + C3089) * C153740) * C153560 +
            (C20352 * C153600 + (C3088 + C3087 + C3086) * C153740) * C153739) *
               C493 -
           (((C2733 * C6213 + C6232 + C6232 + C153761 * C6225 + C2731 * C6214 +
              C6233 + C6233 + C2724 * C6226 + C2729 * C6215 + C6234 + C6234 +
              C2723 * C6227) *
                 C153600 +
             (C4875 + C4874 + C4873) * C153740) *
                C153560 +
            ((C9069 + C9068 + C9067) * C153600 + C9063 * C153740) * C153739) *
               C495) *
              C153449) *
         C153378) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153740 +
             C31295 * C153600) *
                C34883 +
            (C44303 + C44304) * C34884 + C44319 * C34885 + C44320 * C153747) *
               C153413 * C1131 -
           ((C44309 + C44310) * C153747 + (C44308 + C44307) * C34885 +
            (C44306 + C44305) * C34884 + (C44304 + C44303) * C34883) *
               C153413 * C153449) *
              C1133 +
          (((C44311 + C44312) * C34883 + (C44313 + C44314) * C34884 +
            (C44315 + C44316) * C34885 + (C44317 + C44318) * C153747) *
               C153413 * C153449 -
           (C44321 * C153747 + C44322 * C34885 + (C44312 + C44311) * C34884 +
            (C31300 * C153600 +
             (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C153740) *
                C34883) *
               C153413 * C1131) *
              C1134 +
          ((((C28234 * C146 + C28247 + C28247 + C153338 * C162) * C153740 +
             C31779 * C153600) *
                C34883 +
            (C44711 + C44712) * C34884 + (C44713 + C44714) * C34885 +
            (C44715 + C44721) * C153747) *
               C153413 * C1131 -
           (((C28234 * C5601 + C28866 + C28866 + C153338 * C5607) * C153600 +
             C28739 * C153740) *
                C153747 +
            (C44721 + C44715) * C34885 + (C44714 + C44713) * C34884 +
            (C44712 + C44711) * C34883) *
               C153413 * C153449) *
              C1135)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153740 +
            C31295 * C153600) *
               C34883 +
           (C44303 + C44304) * C34884 + C44319 * C34885 + C44320 * C153747) *
              C153413 * C1218 -
          (C45510 * C153747 + C45511 * C34885 + (C44306 + C44305) * C34884 +
           (C44304 + C44303) * C34883) *
              C153413 * C1219 +
          (C44319 * C34883 + C44320 * C34884 + (C44310 + C44309) * C34885 +
           (C45512 + C45513) * C153747) *
              C153413 * C1220 -
          (((C28234 * C29858 + C29864 + C29864 + C153338 * C29860) * C153600 +
            C29301 * C153740) *
               C153747 +
           (C45513 + C45512) * C34885 + C45510 * C34884 + C45511 * C34883) *
              C153413 * C1221) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153740 +
             C31295 * C153600) *
                C34883 +
            (C44303 + C44304) * C34884 + C44319 * C34885 + C44320 * C153747) *
               C493 -
           ((C45174 + C45175) * C153747 + (C45176 + C45177) * C34885 +
            (C45178 + C45179) * C34884 +
            (C31296 * C153600 + C31295 * C153740) * C34883) *
               C494 +
           ((C31296 * C153740 + C31299 * C153600) * C34883 +
            (C45708 + C45709) * C34884 + (C45710 + C45711) * C34885 +
            (C45712 + C45713) * C153747) *
               C495) *
              C1131 +
          (((C45179 + C45178) * C34883 + (C45177 + C45176) * C34884 +
            (C45175 + C45174) * C34885 +
            (C29073 * C153740 + C29448 * C153600) * C153747) *
               C494 -
           (C45510 * C153747 + C45511 * C34885 + (C44306 + C44305) * C34884 +
            (C44304 + C44303) * C34883) *
               C493 -
           (((C28234 * C30194 + C30201 + C30201 + C153338 * C30198) * C153600 +
             C29448 * C153740) *
                C153747 +
            (C45713 + C45712) * C34885 + (C45711 + C45710) * C34884 +
            (C45709 + C45708) * C34883) *
               C495) *
              C153449) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C63340 +
             C31295 * C63341 + C31296 * C63342 + C31299 * C153754) *
                C153739 +
            (C67073 + C67074 + C67075 + C67076) * C153560) *
               C153413 * C1131 -
           ((C67077 + C67078 + C67079 + C67080) * C153560 +
            (C67076 + C67075 + C67074 + C67073) * C153739) *
               C153413 * C153449) *
              C1133 +
          (((C67081 + C67082 + C67083 + C67084) * C153739 +
            (C67085 + C67086 + C67087 + C67088) * C153560) *
               C153413 * C153449 -
           ((C67084 + C67083 + C67082 + C67081) * C153560 +
            (C31302 * C153754 + C31301 * C63342 + C31300 * C63341 +
             (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C63340) *
                C153739) *
               C153413 * C1131) *
              C1134 +
          ((((C28234 * C146 + C28247 + C28247 + C153338 * C162) * C63340 +
             C31779 * C63341 + C31780 * C63342 + C56253 * C153754) *
                C153739 +
            (C67477 + C67478 + C67479 + C67485) * C153560) *
               C153413 * C1131 -
           (((C28234 * C6213 + C31772 + C31772 + C153338 * C6225) * C153754 +
             C31545 * C63342 + C31544 * C63341 + C28737 * C63340) *
                C153560 +
            (C67485 + C67479 + C67478 + C67477) * C153739) *
               C153413 * C153449) *
              C1135)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C63340 +
            C31295 * C63341 + C31296 * C63342 + C31299 * C153754) *
               C153739 +
           (C67073 + C67074 + C67075 + C67076) * C153560) *
              C153413 * C1218 -
          ((C67077 + C67078 + C67079 + C67080) * C153560 +
           (C67076 + C67075 + C67074 + C67073) * C153739) *
              C153413 * C1219 +
          ((C67080 + C67079 + C67078 + C67077) * C153739 +
           (C68270 + C68271 + C68272 + C68273) * C153560) *
              C153413 * C1220 -
          (((C28234 * C30194 + C30201 + C30201 + C153338 * C30198) * C153754 +
            C29448 * C63342 + C29073 * C63341 + C28432 * C63340) *
               C153560 +
           (C68273 + C68272 + C68271 + C68270) * C153739) *
              C153413 * C1221) *
         C153378) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C63340 +
             C31295 * C63341 + C31296 * C63342 + C31299 * C153754) *
                C153739 +
            (C67073 + C67074 + C67075 + C67076) * C153560) *
               C493 -
           ((C67938 + C67939 + C67940 + C67941) * C153560 +
            (C34025 * C153754 + C31299 * C63342 + C31296 * C63341 +
             C31295 * C63340) *
                C153739) *
               C494 +
           ((C31296 * C63340 + C31299 * C63341 + C34025 * C63342 +
             C55996 * C153754) *
                C153739 +
            (C68468 + C68469 + C68470 + C68471) * C153560) *
               C495) *
              C1131 +
          (((C67941 + C67940 + C67939 + C67938) * C153739 +
            (C29075 * C63340 + C29446 * C63341 + C31297 * C63342 +
             C32695 * C153754) *
                C153560) *
               C494 -
           ((C67077 + C67078 + C67079 + C67080) * C153560 +
            (C67076 + C67075 + C67074 + C67073) * C153739) *
               C493 -
           (((C28234 * C34011 + C34020 + C34020 + C153338 * C34015) * C153754 +
             C32695 * C63342 + C31297 * C63341 + C29446 * C63340) *
                C153560 +
            (C68471 + C68470 + C68469 + C68468) * C153739) *
               C495) *
              C153449) *
         C153378) /
            (p * q * std::sqrt(p + q));
    d2ee[173] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153740 +
              C31295 * C153600) *
                 C34883 +
             (C44303 + C44304) * C34884 + C44319 * C34885 + C44320 * C153747) *
                C153725 -
            ((C45174 + C45175) * C153747 + (C45176 + C45177) * C34885 +
             (C45178 + C45179) * C34884 +
             (C31296 * C153600 + C31295 * C153740) * C34883) *
                C153477) *
               C1131 +
           (((C45179 + C45178) * C34883 + (C45177 + C45176) * C34884 +
             (C45175 + C45174) * C34885 +
             (C29073 * C153740 + C29448 * C153600) * C153747) *
                C153477 -
            (C45510 * C153747 + C45511 * C34885 + (C44306 + C44305) * C34884 +
             (C44304 + C44303) * C34883) *
                C153725) *
               C153449) *
              C153716 +
          ((((C31300 * C153740 + C31301 * C153600) * C34883 +
             (C45180 + C45181) * C34884 + (C45182 + C45183) * C34885 +
             (C45184 + C45185) * C153747) *
                C153477 -
            (C44321 * C153747 + C44322 * C34885 + (C44312 + C44311) * C34884 +
             (C31300 * C153600 +
              (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C153740) *
                 C34883) *
                C153725) *
               C1131 +
           (((C44311 + C44312) * C34883 + (C44313 + C44314) * C34884 +
             (C44315 + C44316) * C34885 + (C44317 + C44318) * C153747) *
                C153725 -
            (((C28234 * C28571 + C28592 + C28592 + C153338 * C28575) * C153600 +
              C29080 * C153740) *
                 C153747 +
             (C45185 + C45184) * C34885 + (C45183 + C45182) * C34884 +
             (C45181 + C45180) * C34883) *
                C153477) *
               C153449) *
              C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 +
               C2737 + C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
               C153761 * C162) *
                  C153740 +
              (C7654 + C7655 + C7656) * C153600) *
                 C153739 +
             ((C3086 + C3087 + C3088) * C153740 + C20351 * C153600) * C153560) *
                C153725 -
            ((C9063 * C153600 + C20352 * C153740) * C153560 +
             ((C7659 + C7658 + C7657) * C153600 +
              (C7656 + C7655 + C7654) * C153740) *
                 C153739) *
                C153477) *
               C1131 +
           (((C20351 * C153740 + C21130 * C153600) * C153739 +
             ((C4212 + C4211 + C4210) * C153740 +
              (C4873 + C4874 + C4875) * C153600) *
                 C153560) *
                C153477 -
            ((C5621 * C153600 + (C3091 + C3090 + C3089) * C153740) * C153560 +
             (C20352 * C153600 + (C3088 + C3087 + C3086) * C153740) * C153739) *
                C153725) *
               C153449) *
              C153716 +
          (((((C7663 + C7664 + C7665) * C153740 +
              (C7666 + C7667 + C7668) * C153600) *
                 C153739 +
             (C20353 * C153740 + (C8456 + C8457 + C8458) * C153600) * C153560) *
                C153477 -
            ((C20354 * C153600 + (C3097 + C3096 + C3095) * C153740) * C153560 +
             ((C7665 + C7664 + C7663) * C153600 +
              (C2733 * C147 + C2751 + C2751 + C153761 * C163 + C2731 * C146 +
               C2752 + C2752 + C2724 * C162 + C2729 * C145 + C2753 + C2753 +
               C2723 * C161) *
                  C153740) *
                 C153739) *
                C153725) *
               C1131 +
           ((((C3095 + C3096 + C3097) * C153740 + C20353 * C153600) * C153739 +
             ((C3098 + C3099 + C3100) * C153740 +
              (C4219 + C4220 + C4221) * C153600) *
                 C153560) *
                C153725 -
            (((C2733 * C3330 + C3367 + C3367 + C153761 * C3338 + C2731 * C3329 +
               C3368 + C3368 + C2724 * C3337 + C2729 * C3328 + C3369 + C3369 +
               C2723 * C3336) *
                  C153600 +
              (C4221 + C4220 + C4219) * C153740) *
                 C153560 +
             ((C8458 + C8457 + C8456) * C153600 + C20354 * C153740) * C153739) *
                C153477) *
               C153449) *
              C153384)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C63340 +
              C31295 * C63341 + C31296 * C63342 + C31299 * C153754) *
                 C153739 +
             (C67073 + C67074 + C67075 + C67076) * C153560) *
                C153725 -
            ((C67938 + C67939 + C67940 + C67941) * C153560 +
             (C34025 * C153754 + C31299 * C63342 + C31296 * C63341 +
              C31295 * C63340) *
                 C153739) *
                C153477) *
               C1131 +
           (((C67941 + C67940 + C67939 + C67938) * C153739 +
             (C29075 * C63340 + C29446 * C63341 + C31297 * C63342 +
              C32695 * C153754) *
                 C153560) *
                C153477 -
            ((C67077 + C67078 + C67079 + C67080) * C153560 +
             (C67076 + C67075 + C67074 + C67073) * C153739) *
                C153725) *
               C153449) *
              C153716 +
          ((((C31300 * C63340 + C31301 * C63341 + C31302 * C63342 +
              C55997 * C153754) *
                 C153739 +
             (C67942 + C67943 + C67944 + C67945) * C153560) *
                C153477 -
            ((C67084 + C67083 + C67082 + C67081) * C153560 +
             (C31302 * C153754 + C31301 * C63342 + C31300 * C63341 +
              (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C63340) *
                 C153739) *
                C153725) *
               C1131 +
           (((C67081 + C67082 + C67083 + C67084) * C153739 +
             (C67085 + C67086 + C67087 + C67088) * C153560) *
                C153725 -
            (((C28234 * C31240 + C31272 + C31272 + C153338 * C31244) * C153754 +
              C31304 * C63342 + C31016 * C63341 + C29078 * C63340) *
                 C153560 +
             (C67945 + C67944 + C67943 + C67942) * C153739) *
                C153477) *
               C153449) *
              C153384)) /
            (p * q * std::sqrt(p + q));
    d2ee[174] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 +
             C2737 + C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
             C153761 * C162) *
                C153740 +
            (C7654 + C7655 + C7656) * C153600) *
               C153739 +
           ((C3086 + C3087 + C3088) * C153740 + C20351 * C153600) * C153560) *
              C153413 * C1218 -
          ((C5621 * C153600 + (C3091 + C3090 + C3089) * C153740) * C153560 +
           (C20352 * C153600 + (C3088 + C3087 + C3086) * C153740) * C153739) *
              C153413 * C1219 +
          ((C3106 * C153740 + (C4212 + C4211 + C4210) * C153600) * C153739 +
           ((C3094 + C3093 + C3092) * C153740 +
            (C5629 + C5630 + C5631) * C153600) *
               C153560) *
              C153413 * C1220 -
          (((C2733 * C5601 + C5618 + C5618 + C153761 * C5607 + C2731 * C5602 +
             C5619 + C5619 + C2724 * C5608 + C2729 * C5603 + C5620 + C5620 +
             C2723 * C5609) *
                C153600 +
            (C4615 + C4614 + C4613) * C153740) *
               C153560 +
           ((C5631 + C5630 + C5629) * C153600 + C4605 * C153740) * C153739) *
              C153413 * C1221) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 +
              C2737 + C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
              C153761 * C162) *
                 C153740 +
             (C7654 + C7655 + C7656) * C153600) *
                C153739 +
            ((C3086 + C3087 + C3088) * C153740 + C20351 * C153600) * C153560) *
               C153413 * C1131 -
           ((C5621 * C153600 + (C3091 + C3090 + C3089) * C153740) * C153560 +
            (C20352 * C153600 + (C3088 + C3087 + C3086) * C153740) * C153739) *
               C153413 * C153449) *
              C1133 +
          ((((C3095 + C3096 + C3097) * C153740 + C20353 * C153600) * C153739 +
            ((C3098 + C3099 + C3100) * C153740 +
             (C4219 + C4220 + C4221) * C153600) *
                C153560) *
               C153413 * C153449 -
           ((C20354 * C153600 + (C3097 + C3096 + C3095) * C153740) * C153560 +
            ((C7665 + C7664 + C7663) * C153600 +
             (C2733 * C147 + C2751 + C2751 + C153761 * C163 + C2731 * C146 +
              C2752 + C2752 + C2724 * C162 + C2729 * C145 + C2753 + C2753 +
              C2723 * C161) *
                 C153740) *
                C153739) *
               C153413 * C1131) *
              C1134 +
          ((((C2729 * C146 + C2754 + C2754 + C2723 * C162 + C2731 * C147 +
              C2755 + C2755 + C2724 * C163 + C2733 * C148 + C2756 + C2756 +
              C153761 * C164) *
                 C153740 +
             (C8142 + C8143 + C8144) * C153600) *
                C153739 +
            ((C3621 + C3622 + C3623) * C153740 +
             (C19668 + C19669 + C19670) * C153600) *
                C153560) *
               C153413 * C1131 -
           (((C2733 * C1796 + C3845 + C3845 + C153761 * C1806 + C2731 * C1797 +
              C3846 + C3846 + C2724 * C1807 + C2729 * C1798 + C3847 + C3847 +
              C2723 * C1808) *
                 C153600 +
             (C3626 + C3625 + C3624) * C153740) *
                C153560 +
            ((C19670 + C19669 + C19668) * C153600 +
             (C3623 + C3622 + C3621) * C153740) *
                C153739) *
               C153413 * C153449) *
              C1135)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153740 +
             C31295 * C153600) *
                C34883 +
            (C44303 + C44304) * C34884 + C44319 * C34885 + C44320 * C153747) *
               C153413 * C1131 -
           ((C44309 + C44310) * C153747 + (C44308 + C44307) * C34885 +
            (C44306 + C44305) * C34884 + (C44304 + C44303) * C34883) *
               C153413 * C153449) *
              C1133 +
          (((C44311 + C44312) * C34883 + (C44313 + C44314) * C34884 +
            (C44315 + C44316) * C34885 + (C44317 + C44318) * C153747) *
               C153413 * C153449 -
           (C44321 * C153747 + C44322 * C34885 + (C44312 + C44311) * C34884 +
            (C31300 * C153600 +
             (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C153740) *
                C34883) *
               C153413 * C1131) *
              C1134 +
          ((((C28234 * C146 + C28247 + C28247 + C153338 * C162) * C153740 +
             C31779 * C153600) *
                C34883 +
            (C44711 + C44712) * C34884 + (C44713 + C44714) * C34885 +
            (C44715 + C44721) * C153747) *
               C153413 * C1131 -
           (((C28234 * C5601 + C28866 + C28866 + C153338 * C5607) * C153600 +
             C28739 * C153740) *
                C153747 +
            (C44721 + C44715) * C34885 + (C44714 + C44713) * C34884 +
            (C44712 + C44711) * C34883) *
               C153413 * C153449) *
              C1135)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153740 +
            C31295 * C153600) *
               C34883 +
           (C44303 + C44304) * C34884 + C44319 * C34885 + C44320 * C153747) *
              C153413 * C1218 -
          (C45510 * C153747 + C45511 * C34885 + (C44306 + C44305) * C34884 +
           (C44304 + C44303) * C34883) *
              C153413 * C1219 +
          (C44319 * C34883 + C44320 * C34884 + (C44310 + C44309) * C34885 +
           (C45512 + C45513) * C153747) *
              C153413 * C1220 -
          (((C28234 * C29858 + C29864 + C29864 + C153338 * C29860) * C153600 +
            C29301 * C153740) *
               C153747 +
           (C45513 + C45512) * C34885 + C45510 * C34884 + C45511 * C34883) *
              C153413 * C1221) *
         C153378) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C63340 +
             C31295 * C63341 + C31296 * C63342 + C31299 * C153754) *
                C153739 +
            (C67073 + C67074 + C67075 + C67076) * C153560) *
               C153413 * C1131 -
           ((C67077 + C67078 + C67079 + C67080) * C153560 +
            (C67076 + C67075 + C67074 + C67073) * C153739) *
               C153413 * C153449) *
              C1133 +
          (((C67081 + C67082 + C67083 + C67084) * C153739 +
            (C67085 + C67086 + C67087 + C67088) * C153560) *
               C153413 * C153449 -
           ((C67084 + C67083 + C67082 + C67081) * C153560 +
            (C31302 * C153754 + C31301 * C63342 + C31300 * C63341 +
             (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C63340) *
                C153739) *
               C153413 * C1131) *
              C1134 +
          ((((C28234 * C146 + C28247 + C28247 + C153338 * C162) * C63340 +
             C31779 * C63341 + C31780 * C63342 + C56253 * C153754) *
                C153739 +
            (C67477 + C67478 + C67479 + C67485) * C153560) *
               C153413 * C1131 -
           (((C28234 * C6213 + C31772 + C31772 + C153338 * C6225) * C153754 +
             C31545 * C63342 + C31544 * C63341 + C28737 * C63340) *
                C153560 +
            (C67485 + C67479 + C67478 + C67477) * C153739) *
               C153413 * C153449) *
              C1135)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C63340 +
            C31295 * C63341 + C31296 * C63342 + C31299 * C153754) *
               C153739 +
           (C67073 + C67074 + C67075 + C67076) * C153560) *
              C153413 * C1218 -
          ((C67077 + C67078 + C67079 + C67080) * C153560 +
           (C67076 + C67075 + C67074 + C67073) * C153739) *
              C153413 * C1219 +
          ((C67080 + C67079 + C67078 + C67077) * C153739 +
           (C68270 + C68271 + C68272 + C68273) * C153560) *
              C153413 * C1220 -
          (((C28234 * C30194 + C30201 + C30201 + C153338 * C30198) * C153754 +
            C29448 * C63342 + C29073 * C63341 + C28432 * C63340) *
               C153560 +
           (C68273 + C68272 + C68271 + C68270) * C153739) *
              C153413 * C1221) *
         C153378) /
            (p * q * std::sqrt(p + q));
    d2ee[175] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153740 +
              C31295 * C153600) *
                 C34883 +
             (C44303 + C44304) * C34884 + C44319 * C34885 + C44320 * C153747) *
                C1938 -
            (C46360 * C153747 + C46361 * C34885 + (C45178 + C45179) * C34884 +
             (C31296 * C153600 + C31295 * C153740) * C34883) *
                C153477) *
               C153724 +
           (((C45179 + C45178) * C34883 + (C45177 + C45176) * C34884 +
             (C45175 + C45174) * C34885 + (C46362 + C46363) * C153747) *
                C153477 -
            (C45510 * C153747 + C45511 * C34885 + (C44306 + C44305) * C34884 +
             (C44304 + C44303) * C34883) *
                C1938) *
               C153449) *
              C153716 +
          ((((C31300 * C153740 + C31301 * C153600) * C34883 +
             (C45180 + C45181) * C34884 + (C45182 + C45183) * C34885 +
             (C45184 + C45185) * C153747) *
                C153477 -
            (C44321 * C153747 + C44322 * C34885 + (C44312 + C44311) * C34884 +
             (C31300 * C153600 +
              (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C153740) *
                 C34883) *
                C1938) *
               C153724 +
           (((C44311 + C44312) * C34883 + (C44313 + C44314) * C34884 +
             (C44315 + C44316) * C34885 + (C44317 + C44318) * C153747) *
                C1938 -
            (((C28234 * C28571 + C28592 + C28592 + C153338 * C28575) * C153600 +
              C29080 * C153740) *
                 C153747 +
             (C45185 + C45184) * C34885 + (C45183 + C45182) * C34884 +
             (C45181 + C45180) * C34883) *
                C153477) *
               C153449) *
              C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 +
               C2737 + C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
               C153761 * C162) *
                  C153740 +
              (C7654 + C7655 + C7656) * C153600) *
                 C153739 +
             ((C3086 + C3087 + C3088) * C153740 + C20351 * C153600) * C153560) *
                C1938 -
            ((C9063 * C153600 + C20352 * C153740) * C153560 +
             ((C7659 + C7658 + C7657) * C153600 +
              (C7656 + C7655 + C7654) * C153740) *
                 C153739) *
                C153477) *
               C153724 +
           (((C20351 * C153740 + C21130 * C153600) * C153739 +
             (C22098 * C153740 + (C4873 + C4874 + C4875) * C153600) * C153560) *
                C153477 -
            ((C5621 * C153600 + (C3091 + C3090 + C3089) * C153740) * C153560 +
             (C20352 * C153600 + (C3088 + C3087 + C3086) * C153740) * C153739) *
                C1938) *
               C153449) *
              C153716 +
          (((((C7663 + C7664 + C7665) * C153740 +
              (C7666 + C7667 + C7668) * C153600) *
                 C153739 +
             (C20353 * C153740 + (C8456 + C8457 + C8458) * C153600) * C153560) *
                C153477 -
            ((C20354 * C153600 + (C3097 + C3096 + C3095) * C153740) * C153560 +
             ((C7665 + C7664 + C7663) * C153600 +
              (C2733 * C147 + C2751 + C2751 + C153761 * C163 + C2731 * C146 +
               C2752 + C2752 + C2724 * C162 + C2729 * C145 + C2753 + C2753 +
               C2723 * C161) *
                  C153740) *
                 C153739) *
                C1938) *
               C153724 +
           ((((C3095 + C3096 + C3097) * C153740 + C20353 * C153600) * C153739 +
             ((C3098 + C3099 + C3100) * C153740 +
              (C4219 + C4220 + C4221) * C153600) *
                 C153560) *
                C1938 -
            (((C2733 * C3330 + C3367 + C3367 + C153761 * C3338 + C2731 * C3329 +
               C3368 + C3368 + C2724 * C3337 + C2729 * C3328 + C3369 + C3369 +
               C2723 * C3336) *
                  C153600 +
              (C4221 + C4220 + C4219) * C153740) *
                 C153560 +
             ((C8458 + C8457 + C8456) * C153600 + C20354 * C153740) * C153739) *
                C153477) *
               C153449) *
              C153384)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C63340 +
              C31295 * C63341 + C31296 * C63342 + C31299 * C153754) *
                 C153739 +
             (C67073 + C67074 + C67075 + C67076) * C153560) *
                C1938 -
            ((C67938 + C67939 + C67940 + C67941) * C153560 +
             (C34025 * C153754 + C31299 * C63342 + C31296 * C63341 +
              C31295 * C63340) *
                 C153739) *
                C153477) *
               C153724 +
           (((C67941 + C67940 + C67939 + C67938) * C153739 +
             (C69118 + C69119 + C69120 + C69121) * C153560) *
                C153477 -
            ((C67077 + C67078 + C67079 + C67080) * C153560 +
             (C67076 + C67075 + C67074 + C67073) * C153739) *
                C1938) *
               C153449) *
              C153716 +
          ((((C31300 * C63340 + C31301 * C63341 + C31302 * C63342 +
              C55997 * C153754) *
                 C153739 +
             (C67942 + C67943 + C67944 + C67945) * C153560) *
                C153477 -
            ((C67084 + C67083 + C67082 + C67081) * C153560 +
             (C31302 * C153754 + C31301 * C63342 + C31300 * C63341 +
              (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C63340) *
                 C153739) *
                C1938) *
               C153724 +
           (((C67081 + C67082 + C67083 + C67084) * C153739 +
             (C67085 + C67086 + C67087 + C67088) * C153560) *
                C1938 -
            (((C28234 * C31240 + C31272 + C31272 + C153338 * C31244) * C153754 +
              C31304 * C63342 + C31016 * C63341 + C29078 * C63340) *
                 C153560 +
             (C67945 + C67944 + C67943 + C67942) * C153739) *
                C153477) *
               C153449) *
              C153384)) /
            (p * q * std::sqrt(p + q));
    d2ee[176] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153740 +
             C31295 * C153600) *
                C34883 +
            (C44303 + C44304) * C34884 + C44319 * C34885 + C44320 * C153747) *
               C153797 -
           (C46360 * C153747 + C46361 * C34885 + (C45178 + C45179) * C34884 +
            (C31296 * C153600 + C31295 * C153740) * C34883) *
               C153798 +
           ((C31296 * C153740 + C31299 * C153600) * C34883 +
            (C45708 + C45709) * C34884 + (C45710 + C45711) * C34885 +
            (C45712 + C45713) * C153747) *
               C2454) *
              C153724 +
          (((C45179 + C45178) * C34883 + (C45177 + C45176) * C34884 +
            (C45175 + C45174) * C34885 + (C46362 + C46363) * C153747) *
               C153798 -
           (C45510 * C153747 + C45511 * C34885 + (C44306 + C44305) * C34884 +
            (C44304 + C44303) * C34883) *
               C153797 -
           (((C28234 * C30194 + C30201 + C30201 + C153338 * C30198) * C153600 +
             C29448 * C153740) *
                C153747 +
            (C45713 + C45712) * C34885 + (C45711 + C45710) * C34884 +
            (C45709 + C45708) * C34883) *
               C2454) *
              C153449) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 +
              C2737 + C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
              C153761 * C162) *
                 C153740 +
             (C7654 + C7655 + C7656) * C153600) *
                C153739 +
            ((C3086 + C3087 + C3088) * C153740 + C20351 * C153600) * C153560) *
               C153797 -
           ((C9063 * C153600 + C20352 * C153740) * C153560 +
            ((C7659 + C7658 + C7657) * C153600 +
             (C7656 + C7655 + C7654) * C153740) *
                C153739) *
               C153798 +
           ((C7674 * C153740 + (C7662 + C7661 + C7660) * C153600) * C153739 +
            (C21130 * C153740 + (C9067 + C9068 + C9069) * C153600) * C153560) *
               C2454) *
              C153724 +
          (((C20351 * C153740 + C21130 * C153600) * C153739 +
            (C22098 * C153740 + (C4873 + C4874 + C4875) * C153600) * C153560) *
               C153798 -
           ((C5621 * C153600 + (C3091 + C3090 + C3089) * C153740) * C153560 +
            (C20352 * C153600 + (C3088 + C3087 + C3086) * C153740) * C153739) *
               C153797 -
           (((C2733 * C6213 + C6232 + C6232 + C153761 * C6225 + C2731 * C6214 +
              C6233 + C6233 + C2724 * C6226 + C2729 * C6215 + C6234 + C6234 +
              C2723 * C6227) *
                 C153600 +
             (C4875 + C4874 + C4873) * C153740) *
                C153560 +
            ((C9069 + C9068 + C9067) * C153600 + C9063 * C153740) * C153739) *
               C2454) *
              C153449) *
         C153378) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C63340 +
             C31295 * C63341 + C31296 * C63342 + C31299 * C153754) *
                C153739 +
            (C67073 + C67074 + C67075 + C67076) * C153560) *
               C153797 -
           ((C67938 + C67939 + C67940 + C67941) * C153560 +
            (C34025 * C153754 + C31299 * C63342 + C31296 * C63341 +
             C31295 * C63340) *
                C153739) *
               C153798 +
           ((C31296 * C63340 + C31299 * C63341 + C34025 * C63342 +
             C55996 * C153754) *
                C153739 +
            (C68468 + C68469 + C68470 + C68471) * C153560) *
               C2454) *
              C153724 +
          (((C67941 + C67940 + C67939 + C67938) * C153739 +
            (C69118 + C69119 + C69120 + C69121) * C153560) *
               C153798 -
           ((C67077 + C67078 + C67079 + C67080) * C153560 +
            (C67076 + C67075 + C67074 + C67073) * C153739) *
               C153797 -
           (((C28234 * C34011 + C34020 + C34020 + C153338 * C34015) * C153754 +
             C32695 * C63342 + C31297 * C63341 + C29446 * C63340) *
                C153560 +
            (C68471 + C68470 + C68469 + C68468) * C153739) *
               C2454) *
              C153449) *
         C153378) /
            (p * q * std::sqrt(p + q));
    d2ee[177] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 +
                  C2737 + C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
                  C153761 * C162) *
                     C153740 +
                 (C7654 + C7655 + C7656) * C153600) *
                    C153739 +
                ((C3086 + C3087 + C3088) * C153740 + C20351 * C153600) *
                    C153560) *
                   C1938 -
               ((C9063 * C153600 + C20352 * C153740) * C153560 +
                ((C7659 + C7658 + C7657) * C153600 +
                 (C7656 + C7655 + C7654) * C153740) *
                    C153739) *
                   C153477) *
                  C153397 * C1133 +
              ((((C7663 + C7664 + C7665) * C153740 +
                 (C7666 + C7667 + C7668) * C153600) *
                    C153739 +
                (C20353 * C153740 + (C8456 + C8457 + C8458) * C153600) *
                    C153560) *
                   C153477 -
               ((C20354 * C153600 + (C3097 + C3096 + C3095) * C153740) *
                    C153560 +
                ((C7665 + C7664 + C7663) * C153600 +
                 (C2733 * C147 + C2751 + C2751 + C153761 * C163 + C2731 * C146 +
                  C2752 + C2752 + C2724 * C162 + C2729 * C145 + C2753 + C2753 +
                  C2723 * C161) *
                     C153740) *
                    C153739) *
                   C1938) *
                  C153397 * C1134 +
              ((((C2729 * C146 + C2754 + C2754 + C2723 * C162 + C2731 * C147 +
                  C2755 + C2755 + C2724 * C163 + C2733 * C148 + C2756 + C2756 +
                  C153761 * C164) *
                     C153740 +
                 (C8142 + C8143 + C8144) * C153600) *
                    C153739 +
                ((C3621 + C3622 + C3623) * C153740 +
                 (C19668 + C19669 + C19670) * C153600) *
                    C153560) *
                   C1938 -
               (((C2733 * C1365 + C7894 + C7894 + C153761 * C1375 +
                  C2731 * C1366 + C7895 + C7895 + C2724 * C1376 +
                  C2729 * C1367 + C7896 + C7896 + C2723 * C1377) *
                     C153600 +
                 (C19670 + C19669 + C19668) * C153740) *
                    C153560 +
                ((C8147 + C8146 + C8145) * C153600 +
                 (C8144 + C8143 + C8142) * C153740) *
                    C153739) *
                   C153477) *
                  C153397 * C1135) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 +
                  C2737 + C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
                  C153761 * C162) *
                     C153740 +
                 (C7654 + C7655 + C7656) * C153600) *
                    C153739 +
                ((C3086 + C3087 + C3088) * C153740 + C20351 * C153600) *
                    C153560) *
                   C1938 -
               ((C9063 * C153600 + C20352 * C153740) * C153560 +
                ((C7659 + C7658 + C7657) * C153600 +
                 (C7656 + C7655 + C7654) * C153740) *
                    C153739) *
                   C153477) *
                  C310 +
              (((C20351 * C153740 + C21130 * C153600) * C153739 +
                (C22098 * C153740 + (C4873 + C4874 + C4875) * C153600) *
                    C153560) *
                   C153477 -
               ((C5621 * C153600 + (C3091 + C3090 + C3089) * C153740) *
                    C153560 +
                (C20352 * C153600 + (C3088 + C3087 + C3086) * C153740) *
                    C153739) *
                   C1938) *
                  C311 +
              (((C3106 * C153740 + C22098 * C153600) * C153739 +
                ((C3094 + C3093 + C3092) * C153740 +
                 (C5629 + C5630 + C5631) * C153600) *
                    C153560) *
                   C1938 -
               (((C2733 * C4833 + C4855 + C4855 + C153761 * C4839 +
                  C2731 * C4834 + C4856 + C4856 + C2724 * C4840 +
                  C2729 * C4835 + C4857 + C4857 + C2723 * C4841) *
                     C153600 +
                 (C5631 + C5630 + C5629) * C153740) *
                    C153560 +
                ((C4875 + C4874 + C4873) * C153600 + C5621 * C153740) *
                    C153739) *
                   C153477) *
                  C312) *
             C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 +
             C2737 + C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
             C153761 * C162) *
                C153740 +
            (C7654 + C7655 + C7656) * C153600) *
               C153739 +
           ((C3086 + C3087 + C3088) * C153740 + C20351 * C153600) * C153560) *
              C2144 -
          ((C9063 * C153600 + C20352 * C153740) * C153560 +
           ((C7659 + C7658 + C7657) * C153600 +
            (C7656 + C7655 + C7654) * C153740) *
               C153739) *
              C2145 +
          ((C7674 * C153740 + (C7662 + C7661 + C7660) * C153600) * C153739 +
           (C21130 * C153740 + (C9067 + C9068 + C9069) * C153600) * C153560) *
              C2146 -
          (((C2733 * C9040 + C9057 + C9057 + C153761 * C9046 + C2731 * C9041 +
             C9058 + C9058 + C2724 * C9047 + C2729 * C9042 + C9059 + C9059 +
             C2723 * C9048) *
                C153600 +
            (C9069 + C9068 + C9067) * C153740) *
               C153560 +
           ((C10406 + C10405 + C10404) * C153600 + C10397 * C153740) *
               C153739) *
              C2147) *
         C153397 * C153378) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153740 +
             C31295 * C153600) *
                C34883 +
            (C44303 + C44304) * C34884 + C44319 * C34885 + C44320 * C153747) *
               C1938 -
           (C46360 * C153747 + C46361 * C34885 + (C45178 + C45179) * C34884 +
            (C31296 * C153600 + C31295 * C153740) * C34883) *
               C153477) *
              C153397 * C1133 +
          (((C31300 * C153740 + C31301 * C153600) * C34883 +
            (C45180 + C45181) * C34884 + (C45182 + C45183) * C34885 +
            (C45184 + C45185) * C153747) *
               C153477 -
           (C44321 * C153747 + C44322 * C34885 + (C44312 + C44311) * C34884 +
            (C31300 * C153600 +
             (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C153740) *
                C34883) *
               C1938) *
              C153397 * C1134 +
          ((((C28234 * C146 + C28247 + C28247 + C153338 * C162) * C153740 +
             C31779 * C153600) *
                C34883 +
            (C44711 + C44712) * C34884 + (C44713 + C44714) * C34885 +
            (C44715 + C44721) * C153747) *
               C1938 -
           (((C28234 * C4833 + C31533 + C31533 + C153338 * C4839) * C153600 +
             C44720 * C153740) *
                C153747 +
            (C31545 * C153600 + C31544 * C153740) * C34885 +
            (C31543 * C153600 + C31542 * C153740) * C34884 +
            (C31780 * C153600 + C31779 * C153740) * C34883) *
               C153477) *
              C153397 * C1135)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153740 +
             C31295 * C153600) *
                C34883 +
            (C44303 + C44304) * C34884 + C44319 * C34885 + C44320 * C153747) *
               C1938 -
           (C46360 * C153747 + C46361 * C34885 + (C45178 + C45179) * C34884 +
            (C31296 * C153600 + C31295 * C153740) * C34883) *
               C153477) *
              C310 +
          (((C45179 + C45178) * C34883 + (C45177 + C45176) * C34884 +
            (C45175 + C45174) * C34885 + (C46362 + C46363) * C153747) *
               C153477 -
           (C45510 * C153747 + C45511 * C34885 + (C44306 + C44305) * C34884 +
            (C44304 + C44303) * C34883) *
               C1938) *
              C311 +
          ((C44319 * C34883 + C44320 * C34884 + (C44310 + C44309) * C34885 +
            (C45512 + C45513) * C153747) *
               C1938 -
           (((C28234 * C29424 + C29436 + C29436 + C153338 * C29426) * C153600 +
             C29867 * C153740) *
                C153747 +
            (C46363 + C46362) * C34885 + C46360 * C34884 + C46361 * C34883) *
               C153477) *
              C312) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153740 +
            C31295 * C153600) *
               C34883 +
           (C44303 + C44304) * C34884 + C44319 * C34885 + C44320 * C153747) *
              C2144 -
          (C46360 * C153747 + C46361 * C34885 + (C45178 + C45179) * C34884 +
           (C31296 * C153600 + C31295 * C153740) * C34883) *
              C2145 +
          ((C31296 * C153740 + C31299 * C153600) * C34883 +
           (C45708 + C45709) * C34884 + (C45710 + C45711) * C34885 +
           (C45712 + C45713) * C153747) *
              C2146 -
          (((C28234 * C32673 + C32687 + C32687 + C153338 * C32675) * C153600 +
            C32696 * C153740) *
               C153747 +
           (C32695 * C153600 + C31297 * C153740) * C34885 +
           (C32694 * C153600 + C31298 * C153740) * C34884 +
           (C34025 * C153600 + C31299 * C153740) * C34883) *
              C2147) *
         C153397 * C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C63340 +
             C31295 * C63341 + C31296 * C63342 + C31299 * C153754) *
                C153739 +
            (C67073 + C67074 + C67075 + C67076) * C153560) *
               C1938 -
           ((C67938 + C67939 + C67940 + C67941) * C153560 +
            (C34025 * C153754 + C31299 * C63342 + C31296 * C63341 +
             C31295 * C63340) *
                C153739) *
               C153477) *
              C153397 * C1133 +
          (((C31300 * C63340 + C31301 * C63341 + C31302 * C63342 +
             C55997 * C153754) *
                C153739 +
            (C67942 + C67943 + C67944 + C67945) * C153560) *
               C153477 -
           ((C67084 + C67083 + C67082 + C67081) * C153560 +
            (C31302 * C153754 + C31301 * C63342 + C31300 * C63341 +
             (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C63340) *
                C153739) *
               C1938) *
              C153397 * C1134 +
          ((((C28234 * C146 + C28247 + C28247 + C153338 * C162) * C63340 +
             C31779 * C63341 + C31780 * C63342 + C56253 * C153754) *
                C153739 +
            (C67477 + C67478 + C67479 + C67485) * C153560) *
               C1938 -
           (((C28234 * C9040 + C56121 + C56121 + C153338 * C9046) * C153754 +
             C67484 * C63342 + C31543 * C63341 + C31542 * C63340) *
                C153560 +
            (C56254 * C153754 + C56253 * C63342 + C31780 * C63341 +
             C31779 * C63340) *
                C153739) *
               C153477) *
              C153397 * C1135)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C63340 +
             C31295 * C63341 + C31296 * C63342 + C31299 * C153754) *
                C153739 +
            (C67073 + C67074 + C67075 + C67076) * C153560) *
               C1938 -
           ((C67938 + C67939 + C67940 + C67941) * C153560 +
            (C34025 * C153754 + C31299 * C63342 + C31296 * C63341 +
             C31295 * C63340) *
                C153739) *
               C153477) *
              C310 +
          (((C67941 + C67940 + C67939 + C67938) * C153739 +
            (C69118 + C69119 + C69120 + C69121) * C153560) *
               C153477 -
           ((C67077 + C67078 + C67079 + C67080) * C153560 +
            (C67076 + C67075 + C67074 + C67073) * C153739) *
               C1938) *
              C311 +
          (((C67080 + C67079 + C67078 + C67077) * C153739 +
            (C68270 + C68271 + C68272 + C68273) * C153560) *
               C1938 -
           (((C28234 * C32673 + C32687 + C32687 + C153338 * C32675) * C153754 +
             C32696 * C63342 + C29447 * C63341 + C29074 * C63340) *
                C153560 +
            (C69121 + C69120 + C69119 + C69118) * C153739) *
               C153477) *
              C312) *
         C153378) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C63340 +
            C31295 * C63341 + C31296 * C63342 + C31299 * C153754) *
               C153739 +
           (C67073 + C67074 + C67075 + C67076) * C153560) *
              C2144 -
          ((C67938 + C67939 + C67940 + C67941) * C153560 +
           (C34025 * C153754 + C31299 * C63342 + C31296 * C63341 +
            C31295 * C63340) *
               C153739) *
              C2145 +
          ((C31296 * C63340 + C31299 * C63341 + C34025 * C63342 +
            C55996 * C153754) *
               C153739 +
           (C68468 + C68469 + C68470 + C68471) * C153560) *
              C2146 -
          (((C28234 * C56751 + C56757 + C56757 + C153338 * C56753) * C153754 +
            C56760 * C63342 + C32694 * C63341 + C31298 * C63340) *
               C153560 +
           (C57501 * C153754 + C55996 * C63342 + C34025 * C63341 +
            C31299 * C63340) *
               C153739) *
              C2147) *
         C153397 * C153378) /
            (p * q * std::sqrt(p + q));
    d2ee[178] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153740 +
             C31295 * C153600) *
                C34883 +
            (C44303 + C44304) * C34884 + C44319 * C34885 + C44320 * C153747) *
               C153797 -
           (C46360 * C153747 + C46361 * C34885 + (C45178 + C45179) * C34884 +
            (C31296 * C153600 + C31295 * C153740) * C34883) *
               C153798 +
           ((C31296 * C153740 + C31299 * C153600) * C34883 +
            (C45708 + C45709) * C34884 + (C45710 + C45711) * C34885 +
            (C45712 + C45713) * C153747) *
               C2454) *
              C153397 * C153716 +
          (((C31300 * C153740 + C31301 * C153600) * C34883 +
            (C45180 + C45181) * C34884 + (C45182 + C45183) * C34885 +
            (C45184 + C45185) * C153747) *
               C153798 -
           (C44321 * C153747 + C44322 * C34885 + (C44312 + C44311) * C34884 +
            (C31300 * C153600 +
             (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C153740) *
                C34883) *
               C153797 -
           (((C28234 * C32070 + C32086 + C32086 + C153338 * C32072) * C153600 +
             C31017 * C153740) *
                C153747 +
            (C31304 * C153600 + C31016 * C153740) * C34885 +
            (C31303 * C153600 + C31015 * C153740) * C34884 +
            (C31302 * C153600 + C31301 * C153740) * C34883) *
               C2454) *
              C153397 * C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 +
              C2737 + C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
              C153761 * C162) *
                 C153740 +
             (C7654 + C7655 + C7656) * C153600) *
                C153739 +
            ((C3086 + C3087 + C3088) * C153740 + C20351 * C153600) * C153560) *
               C153797 -
           ((C9063 * C153600 + C20352 * C153740) * C153560 +
            ((C7659 + C7658 + C7657) * C153600 +
             (C7656 + C7655 + C7654) * C153740) *
                C153739) *
               C153798 +
           ((C7674 * C153740 + (C7662 + C7661 + C7660) * C153600) * C153739 +
            (C21130 * C153740 + (C9067 + C9068 + C9069) * C153600) * C153560) *
               C2454) *
              C153397 * C153716 +
          ((((C7663 + C7664 + C7665) * C153740 +
             (C7666 + C7667 + C7668) * C153600) *
                C153739 +
            (C20353 * C153740 + (C8456 + C8457 + C8458) * C153600) * C153560) *
               C153798 -
           ((C20354 * C153600 + (C3097 + C3096 + C3095) * C153740) * C153560 +
            ((C7665 + C7664 + C7663) * C153600 +
             (C2733 * C147 + C2751 + C2751 + C153761 * C163 + C2731 * C146 +
              C2752 + C2752 + C2724 * C162 + C2729 * C145 + C2753 + C2753 +
              C2723 * C161) *
                 C153740) *
                C153739) *
               C153797 -
           (((C2733 * C8437 + C8447 + C8447 + C153761 * C8439 + C2731 * C6216 +
              C8448 + C8448 + C2724 * C6228 + C2729 * C6217 + C8449 + C8449 +
              C2723 * C6229) *
                 C153600 +
             (C8458 + C8457 + C8456) * C153740) *
                C153560 +
            ((C7671 + C7670 + C7669) * C153600 + C7675 * C153740) * C153739) *
               C2454) *
              C153397 * C153384)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C63340 +
             C31295 * C63341 + C31296 * C63342 + C31299 * C153754) *
                C153739 +
            (C67073 + C67074 + C67075 + C67076) * C153560) *
               C153797 -
           ((C67938 + C67939 + C67940 + C67941) * C153560 +
            (C34025 * C153754 + C31299 * C63342 + C31296 * C63341 +
             C31295 * C63340) *
                C153739) *
               C153798 +
           ((C31296 * C63340 + C31299 * C63341 + C34025 * C63342 +
             C55996 * C153754) *
                C153739 +
            (C68468 + C68469 + C68470 + C68471) * C153560) *
               C2454) *
              C153397 * C153716 +
          (((C31300 * C63340 + C31301 * C63341 + C31302 * C63342 +
             C55997 * C153754) *
                C153739 +
            (C67942 + C67943 + C67944 + C67945) * C153560) *
               C153798 -
           ((C67084 + C67083 + C67082 + C67081) * C153560 +
            (C31302 * C153754 + C31301 * C63342 + C31300 * C63341 +
             (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C63340) *
                C153739) *
               C153797 -
           (((C28234 * C56416 + C56422 + C56422 + C153338 * C56418) * C153754 +
             C56425 * C63342 + C31303 * C63341 + C31015 * C63340) *
                C153560 +
            (C55998 * C153754 + C55997 * C63342 + C31302 * C63341 +
             C31301 * C63340) *
                C153739) *
               C2454) *
              C153397 * C153384)) /
            (p * q * std::sqrt(p + q));
    d2ee[179] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 +
              C2737 + C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
              C153761 * C162) *
                 C153740 +
             (C7654 + C7655 + C7656) * C153600) *
                C153739 +
            ((C3086 + C3087 + C3088) * C153740 + C20351 * C153600) * C153560) *
               C1938 -
           ((C9063 * C153600 + C20352 * C153740) * C153560 +
            ((C7659 + C7658 + C7657) * C153600 +
             (C7656 + C7655 + C7654) * C153740) *
                C153739) *
               C153477) *
              C310 +
          (((C20351 * C153740 + C21130 * C153600) * C153739 +
            (C22098 * C153740 + (C4873 + C4874 + C4875) * C153600) * C153560) *
               C153477 -
           ((C5621 * C153600 + (C3091 + C3090 + C3089) * C153740) * C153560 +
            (C20352 * C153600 + (C3088 + C3087 + C3086) * C153740) * C153739) *
               C1938) *
              C311 +
          (((C3106 * C153740 + C22098 * C153600) * C153739 +
            ((C3094 + C3093 + C3092) * C153740 +
             (C5629 + C5630 + C5631) * C153600) *
                C153560) *
               C1938 -
           (((C2733 * C4833 + C4855 + C4855 + C153761 * C4839 + C2731 * C4834 +
              C4856 + C4856 + C2724 * C4840 + C2729 * C4835 + C4857 + C4857 +
              C2723 * C4841) *
                 C153600 +
             (C5631 + C5630 + C5629) * C153740) *
                C153560 +
            ((C4875 + C4874 + C4873) * C153600 + C5621 * C153740) * C153739) *
               C153477) *
              C312) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 +
              C2737 + C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
              C153761 * C162) *
                 C153740 +
             (C7654 + C7655 + C7656) * C153600) *
                C153739 +
            ((C3086 + C3087 + C3088) * C153740 + C20351 * C153600) * C153560) *
               C1938 -
           ((C9063 * C153600 + C20352 * C153740) * C153560 +
            ((C7659 + C7658 + C7657) * C153600 +
             (C7656 + C7655 + C7654) * C153740) *
                C153739) *
               C153477) *
              C153397 * C1133 +
          ((((C7663 + C7664 + C7665) * C153740 +
             (C7666 + C7667 + C7668) * C153600) *
                C153739 +
            (C20353 * C153740 + (C8456 + C8457 + C8458) * C153600) * C153560) *
               C153477 -
           ((C20354 * C153600 + (C3097 + C3096 + C3095) * C153740) * C153560 +
            ((C7665 + C7664 + C7663) * C153600 +
             (C2733 * C147 + C2751 + C2751 + C153761 * C163 + C2731 * C146 +
              C2752 + C2752 + C2724 * C162 + C2729 * C145 + C2753 + C2753 +
              C2723 * C161) *
                 C153740) *
                C153739) *
               C1938) *
              C153397 * C1134 +
          ((((C2729 * C146 + C2754 + C2754 + C2723 * C162 + C2731 * C147 +
              C2755 + C2755 + C2724 * C163 + C2733 * C148 + C2756 + C2756 +
              C153761 * C164) *
                 C153740 +
             (C8142 + C8143 + C8144) * C153600) *
                C153739 +
            ((C3621 + C3622 + C3623) * C153740 +
             (C19668 + C19669 + C19670) * C153600) *
                C153560) *
               C1938 -
           (((C2733 * C1365 + C7894 + C7894 + C153761 * C1375 + C2731 * C1366 +
              C7895 + C7895 + C2724 * C1376 + C2729 * C1367 + C7896 + C7896 +
              C2723 * C1377) *
                 C153600 +
             (C19670 + C19669 + C19668) * C153740) *
                C153560 +
            ((C8147 + C8146 + C8145) * C153600 +
             (C8144 + C8143 + C8142) * C153740) *
                C153739) *
               C153477) *
              C153397 * C1135)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153740 +
             C31295 * C153600) *
                C34883 +
            (C44303 + C44304) * C34884 + C44319 * C34885 + C44320 * C153747) *
               C1938 -
           (C46360 * C153747 + C46361 * C34885 + (C45178 + C45179) * C34884 +
            (C31296 * C153600 + C31295 * C153740) * C34883) *
               C153477) *
              C153397 * C1133 +
          (((C31300 * C153740 + C31301 * C153600) * C34883 +
            (C45180 + C45181) * C34884 + (C45182 + C45183) * C34885 +
            (C45184 + C45185) * C153747) *
               C153477 -
           (C44321 * C153747 + C44322 * C34885 + (C44312 + C44311) * C34884 +
            (C31300 * C153600 +
             (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C153740) *
                C34883) *
               C1938) *
              C153397 * C1134 +
          ((((C28234 * C146 + C28247 + C28247 + C153338 * C162) * C153740 +
             C31779 * C153600) *
                C34883 +
            (C44711 + C44712) * C34884 + (C44713 + C44714) * C34885 +
            (C44715 + C44721) * C153747) *
               C1938 -
           (((C28234 * C4833 + C31533 + C31533 + C153338 * C4839) * C153600 +
             C44720 * C153740) *
                C153747 +
            (C31545 * C153600 + C31544 * C153740) * C34885 +
            (C31543 * C153600 + C31542 * C153740) * C34884 +
            (C31780 * C153600 + C31779 * C153740) * C34883) *
               C153477) *
              C153397 * C1135)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153740 +
             C31295 * C153600) *
                C34883 +
            (C44303 + C44304) * C34884 + C44319 * C34885 + C44320 * C153747) *
               C1938 -
           (C46360 * C153747 + C46361 * C34885 + (C45178 + C45179) * C34884 +
            (C31296 * C153600 + C31295 * C153740) * C34883) *
               C153477) *
              C310 +
          (((C45179 + C45178) * C34883 + (C45177 + C45176) * C34884 +
            (C45175 + C45174) * C34885 + (C46362 + C46363) * C153747) *
               C153477 -
           (C45510 * C153747 + C45511 * C34885 + (C44306 + C44305) * C34884 +
            (C44304 + C44303) * C34883) *
               C1938) *
              C311 +
          ((C44319 * C34883 + C44320 * C34884 + (C44310 + C44309) * C34885 +
            (C45512 + C45513) * C153747) *
               C1938 -
           (((C28234 * C29424 + C29436 + C29436 + C153338 * C29426) * C153600 +
             C29867 * C153740) *
                C153747 +
            (C46363 + C46362) * C34885 + C46360 * C34884 + C46361 * C34883) *
               C153477) *
              C312) *
         C153378) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C63340 +
             C31295 * C63341 + C31296 * C63342 + C31299 * C153754) *
                C153739 +
            (C67073 + C67074 + C67075 + C67076) * C153560) *
               C1938 -
           ((C67938 + C67939 + C67940 + C67941) * C153560 +
            (C34025 * C153754 + C31299 * C63342 + C31296 * C63341 +
             C31295 * C63340) *
                C153739) *
               C153477) *
              C153397 * C1133 +
          (((C31300 * C63340 + C31301 * C63341 + C31302 * C63342 +
             C55997 * C153754) *
                C153739 +
            (C67942 + C67943 + C67944 + C67945) * C153560) *
               C153477 -
           ((C67084 + C67083 + C67082 + C67081) * C153560 +
            (C31302 * C153754 + C31301 * C63342 + C31300 * C63341 +
             (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C63340) *
                C153739) *
               C1938) *
              C153397 * C1134 +
          ((((C28234 * C146 + C28247 + C28247 + C153338 * C162) * C63340 +
             C31779 * C63341 + C31780 * C63342 + C56253 * C153754) *
                C153739 +
            (C67477 + C67478 + C67479 + C67485) * C153560) *
               C1938 -
           (((C28234 * C9040 + C56121 + C56121 + C153338 * C9046) * C153754 +
             C67484 * C63342 + C31543 * C63341 + C31542 * C63340) *
                C153560 +
            (C56254 * C153754 + C56253 * C63342 + C31780 * C63341 +
             C31779 * C63340) *
                C153739) *
               C153477) *
              C153397 * C1135)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C63340 +
             C31295 * C63341 + C31296 * C63342 + C31299 * C153754) *
                C153739 +
            (C67073 + C67074 + C67075 + C67076) * C153560) *
               C1938 -
           ((C67938 + C67939 + C67940 + C67941) * C153560 +
            (C34025 * C153754 + C31299 * C63342 + C31296 * C63341 +
             C31295 * C63340) *
                C153739) *
               C153477) *
              C310 +
          (((C67941 + C67940 + C67939 + C67938) * C153739 +
            (C69118 + C69119 + C69120 + C69121) * C153560) *
               C153477 -
           ((C67077 + C67078 + C67079 + C67080) * C153560 +
            (C67076 + C67075 + C67074 + C67073) * C153739) *
               C1938) *
              C311 +
          (((C67080 + C67079 + C67078 + C67077) * C153739 +
            (C68270 + C68271 + C68272 + C68273) * C153560) *
               C1938 -
           (((C28234 * C32673 + C32687 + C32687 + C153338 * C32675) * C153754 +
             C32696 * C63342 + C29447 * C63341 + C29074 * C63340) *
                C153560 +
            (C69121 + C69120 + C69119 + C69118) * C153739) *
               C153477) *
              C312) *
         C153378) /
            (p * q * std::sqrt(p + q));
    d2ee[180] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((C134 * C144 + C169 + C169 + C121 * C160 + C136 * C145 + C170 +
                C170 + C122 * C161 + C138 * C146 + C171 + C171 + C123 * C162 +
                C140 * C147 + C172 + C172 + C124 * C163 + C142 * C148 + C173 +
                C173 + C125 * C164) *
                   C153513 * C153501 * C153413 * C153724 -
               (C142 * C315 + C352 + C352 + C125 * C339 + C140 * C316 + C353 +
                C353 + C124 * C340 + C138 * C317 + C354 + C354 + C123 * C341 +
                C136 * C318 + C355 + C355 + C122 * C342 + C134 * C319 + C356 +
                C356 + C121 * C343) *
                   C153513 * C153501 * C153413 * C153449) *
                  C153793 +
              ((C134 * C318 + C362 + C362 + C121 * C342 + C136 * C317 + C363 +
                C363 + C122 * C341 + C138 * C316 + C364 + C364 + C123 * C340 +
                C140 * C315 + C365 + C365 + C124 * C339 + C142 * C325 + C366 +
                C366 + C125 * C349) *
                   C153513 * C153501 * C153413 * C153449 -
               (C142 * C149 + C174 + C174 + C125 * C165 + C140 * C148 + C175 +
                C175 + C124 * C164 + C138 * C147 + C176 + C176 + C123 * C163 +
                C136 * C146 + C177 + C177 + C122 * C162 + C134 * C145 + C178 +
                C178 + C121 * C161) *
                   C153513 * C153501 * C153413 * C153724) *
                  C153794 +
              ((C134 * C146 + C179 + C179 + C121 * C162 + C136 * C147 + C180 +
                C180 + C122 * C163 + C138 * C148 + C181 + C181 + C123 * C164 +
                C140 * C149 + C182 + C182 + C124 * C165 + C142 * C150 + C183 +
                C183 + C125 * C166) *
                   C153513 * C153501 * C153413 * C153724 -
               (C142 * C679 + C683 + C683 + C125 * C681 + C140 * C325 + C684 +
                C684 + C124 * C349 + C138 * C315 + C685 + C685 + C123 * C339 +
                C136 * C316 + C686 + C686 + C122 * C340 + C134 * C317 + C687 +
                C687 + C121 * C341) *
                   C153513 * C153501 * C153413 * C153449) *
                  C678) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 +
                 C2737 + C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
                 C153761 * C162) *
                    C153513 * C153812 +
                (C3086 + C3087 + C3088) * C153513 * C153800 + C3108 * C153774) *
                   C153413 * C153724 -
               ((C3092 + C3093 + C3094) * C153513 * C153774 +
                (C3091 + C3090 + C3089) * C153513 * C153800 +
                (C3088 + C3087 + C3086) * C153513 * C153812) *
                   C153413 * C153449) *
                  C153793 +
              (((C3095 + C3096 + C3097) * C153513 * C153812 +
                (C3098 + C3099 + C3100) * C153513 * C153800 +
                (C3101 + C3102 + C3103) * C153513 * C153774) *
                   C153413 * C153449 -
               (C3109 * C153774 + (C3097 + C3096 + C3095) * C153513 * C153800 +
                (C2733 * C147 + C2751 + C2751 + C153761 * C163 + C2731 * C146 +
                 C2752 + C2752 + C2724 * C162 + C2729 * C145 + C2753 + C2753 +
                 C2723 * C161) *
                    C153513 * C153812) *
                   C153413 * C153724) *
                  C153794 +
              (((C2729 * C146 + C2754 + C2754 + C2723 * C162 + C2731 * C147 +
                 C2755 + C2755 + C2724 * C163 + C2733 * C148 + C2756 + C2756 +
                 C153761 * C164) *
                    C153513 * C153812 +
                (C3621 + C3622 + C3623) * C153513 * C153800 +
                (C3624 + C3625 + C3626) * C153513 * C153774) *
                   C153413 * C153724 -
               ((C2733 * C1223 + C3606 + C3606 + C153761 * C1233 +
                 C2731 * C1224 + C3607 + C3607 + C2724 * C1234 + C2729 * C1225 +
                 C3608 + C3608 + C2723 * C1235) *
                    C153513 * C153774 +
                (C3626 + C3625 + C3624) * C153513 * C153800 +
                (C3623 + C3622 + C3621) * C153513 * C153812) *
                   C153413 * C153449) *
                  C678)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 +
             C2737 + C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
             C153761 * C162) *
                C153813 +
            (C7654 + C7655 + C7656) * C153802 + C7674 * C153777) *
               C153501 * C153413 * C153724 -
           ((C4872 + C4871 + C4870) * C153777 +
            (C4213 + C4214 + C4215) * C153802 +
            (C3088 + C3087 + C3086) * C153813) *
               C153501 * C153413 * C153449) *
              C153793 +
          (((C3095 + C3096 + C3097) * C153813 +
            (C4216 + C4217 + C4218) * C153802 +
            (C2729 * C1368 + C3372 + C3372 + C2723 * C1378 + C2731 * C1367 +
             C3371 + C3371 + C2724 * C1377 + C2733 * C1366 + C3370 + C3370 +
             C153761 * C1376) *
                C153777) *
               C153501 * C153413 * C153449 -
           (C7675 * C153777 + (C7665 + C7664 + C7663) * C153802 +
            (C2733 * C147 + C2751 + C2751 + C153761 * C163 + C2731 * C146 +
             C2752 + C2752 + C2724 * C162 + C2729 * C145 + C2753 + C2753 +
             C2723 * C161) *
                C153813) *
               C153501 * C153413 * C153724) *
              C153794 +
          (((C2729 * C146 + C2754 + C2754 + C2723 * C162 + C2731 * C147 +
             C2755 + C2755 + C2724 * C163 + C2733 * C148 + C2756 + C2756 +
             C153761 * C164) *
                C153813 +
            (C2729 * C498 + C3853 + C3853 + C2723 * C522 + C2731 * C497 +
             C3852 + C3852 + C2724 * C521 + C2733 * C496 + C3851 + C3851 +
             C153761 * C520) *
                C153802 +
            (C2729 * C503 + C7116 + C7116 + C2723 * C527 + C2731 * C504 +
             C7117 + C7117 + C2724 * C528 + C2733 * C505 + C7118 + C7118 +
             C153761 * C529) *
                C153777) *
               C153501 * C153413 * C153724 -
           ((C2733 * C1365 + C7894 + C7894 + C153761 * C1375 + C2731 * C1366 +
             C7895 + C7895 + C2724 * C1376 + C2729 * C1367 + C7896 + C7896 +
             C2723 * C1377) *
                C153777 +
            (C2733 * C985 + C3848 + C3848 + C153761 * C997 + C2731 * C984 +
             C3849 + C3849 + C2724 * C996 + C2729 * C983 + C3850 + C3850 +
             C2723 * C995) *
                C153802 +
            (C3623 + C3622 + C3621) * C153813) *
               C153501 * C153413 * C153449) *
              C678)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
             C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 +
             C23999 + C153761 * C162) *
                C153513 * C23987 +
            (C24335 + C24336 + C24337) * C153513 * C23988 + C24357 * C153774) *
               C153413 * C153724 -
           ((C24341 + C24342 + C24343) * C153513 * C153774 +
            (C24340 + C24339 + C24338) * C153513 * C23988 +
            (C24337 + C24336 + C24335) * C153513 * C23987) *
               C153413 * C153449) *
              C153793 +
          (((C24344 + C24345 + C24346) * C153513 * C23987 +
            (C24347 + C24348 + C24349) * C153513 * C23988 +
            (C24350 + C24351 + C24352) * C153513 * C153774) *
               C153413 * C153449 -
           (C24358 * C153774 + (C24346 + C24345 + C24344) * C153513 * C23988 +
            (C23994 * C147 + C24012 + C24012 + C153761 * C163 + C23992 * C146 +
             C24013 + C24013 + C153790 * C162 + C23990 * C145 + C24014 +
             C24014 + C153809 * C161) *
                C153513 * C23987) *
               C153413 * C153724) *
              C153794 +
          (((C23990 * C146 + C24015 + C24015 + C153809 * C162 + C23992 * C147 +
             C24016 + C24016 + C153790 * C163 + C23994 * C148 + C24017 +
             C24017 + C153761 * C164) *
                C153513 * C23987 +
            (C24858 + C24859 + C24860) * C153513 * C23988 +
            (C24861 + C24862 + C24863) * C153513 * C153774) *
               C153413 * C153724 -
           ((C23994 * C1223 + C24843 + C24843 + C153761 * C1233 +
             C23992 * C1224 + C24844 + C24844 + C153790 * C1234 +
             C23990 * C1225 + C24845 + C24845 + C153809 * C1235) *
                C153513 * C153774 +
            (C24863 + C24862 + C24861) * C153513 * C23988 +
            (C24860 + C24859 + C24858) * C153513 * C23987) *
               C153413 * C153449) *
              C678)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153513 *
                C28229 +
            C28439 * C28230 + C28440 * C28231 + C28441 * C28232 +
            C28442 * C28233) *
               C153413 * C153724 -
           (C28443 * C28233 + C28442 * C28232 + C28441 * C28231 +
            C28440 * C28230 + C28439 * C28229) *
               C153413 * C153449) *
              C153793 +
          ((C28444 * C28229 + C28445 * C28230 + C28446 * C28231 +
            C28447 * C28232 + C28448 * C28233) *
               C153413 * C153449 -
           (C28447 * C28233 + C28446 * C28232 + C28445 * C28231 +
            C28444 * C28230 +
            (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C153513 *
                C28229) *
               C153413 * C153724) *
              C153794 +
          (((C28234 * C146 + C28247 + C28247 + C153338 * C162) * C153513 *
                C28229 +
            C28740 * C28230 + C28741 * C28231 + C28742 * C28232 +
            C28743 * C28233) *
               C153413 * C153724 -
           ((C28234 * C4585 + C28727 + C28727 + C153338 * C4591) * C153513 *
                C28233 +
            C28743 * C28232 + C28742 * C28231 + C28741 * C28230 +
            C28740 * C28229) *
               C153413 * C153449) *
              C678)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153813 +
             C31295 * C153802 + C31296 * C153777) *
                C23987 +
            (C30985 + C30986 + C30987) * C23988 + C31011 * C153774) *
               C153413 * C153724 -
           ((C30991 + C30992 + C30993) * C153774 +
            (C30990 + C30989 + C30988) * C23988 +
            (C30987 + C30986 + C30985) * C23987) *
               C153413 * C153449) *
              C153793 +
          (((C30994 + C30995 + C31018) * C23987 +
            (C30998 + C30999 + C31019) * C23988 +
            (C31002 + C31003 + C31020) * C153774) *
               C153413 * C153449 -
           (C31021 * C153774 + (C31018 + C30995 + C30994) * C23988 +
            (C31301 * C153777 + C31300 * C153802 +
             (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C153813) *
                C23987) *
               C153413 * C153724) *
              C153794 +
          ((((C28234 * C146 + C28247 + C28247 + C153338 * C162) * C153813 +
             (C28234 * C498 + C28870 + C28870 + C153338 * C522) * C153802 +
             (C28234 * C503 + C30758 + C30758 + C153338 * C527) * C153777) *
                C23987 +
            (C31523 + C31546 + C31547) * C23988 +
            (C31528 + C31548 + C31549) * C153774) *
               C153413 * C153724 -
           (((C28234 * C4833 + C31533 + C31533 + C153338 * C4839) * C153777 +
             (C28234 * C4145 + C28867 + C28867 + C153338 * C4153) * C153802 +
             C28738 * C153813) *
                C153774 +
            (C31549 + C31548 + C31528) * C23988 +
            (C31547 + C31546 + C31523) * C23987) *
               C153413 * C153449) *
              C678)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
             C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 +
             C23999 + C153761 * C162) *
                C47673 +
            (C48203 + C48204 + C48205) * C47674 + C48223 * C153777) *
               C153501 * C153413 * C153724 -
           ((C26079 + C26078 + C26077) * C153777 +
            (C25438 + C25439 + C25440) * C47674 +
            (C24337 + C24336 + C24335) * C47673) *
               C153501 * C153413 * C153449) *
              C153793 +
          (((C24344 + C24345 + C24346) * C47673 +
            (C25441 + C25442 + C25443) * C47674 +
            (C23990 * C1368 + C24609 + C24609 + C153809 * C1378 +
             C23992 * C1367 + C24608 + C24608 + C153790 * C1377 +
             C23994 * C1366 + C24607 + C24607 + C153761 * C1376) *
                C153777) *
               C153501 * C153413 * C153449 -
           (C48224 * C153777 + (C48214 + C48213 + C48212) * C47674 +
            (C23994 * C147 + C24012 + C24012 + C153761 * C163 + C23992 * C146 +
             C24013 + C24013 + C153790 * C162 + C23990 * C145 + C24014 +
             C24014 + C153809 * C161) *
                C47673) *
               C153501 * C153413 * C153724) *
              C153794 +
          (((C23990 * C146 + C24015 + C24015 + C153809 * C162 + C23992 * C147 +
             C24016 + C24016 + C153790 * C163 + C23994 * C148 + C24017 +
             C24017 + C153761 * C164) *
                C47673 +
            (C23990 * C498 + C25090 + C25090 + C153809 * C522 + C23992 * C497 +
             C25089 + C25089 + C153790 * C521 + C23994 * C496 + C25088 +
             C25088 + C153761 * C520) *
                C47674 +
            (C23990 * C503 + C47677 + C47677 + C153809 * C527 + C23992 * C504 +
             C47678 + C47678 + C153790 * C528 + C23994 * C505 + C47679 +
             C47679 + C153761 * C529) *
                C153777) *
               C153501 * C153413 * C153724 -
           ((C23994 * C1365 + C48443 + C48443 + C153761 * C1375 +
             C23992 * C1366 + C48444 + C48444 + C153790 * C1376 +
             C23990 * C1367 + C48445 + C48445 + C153809 * C1377) *
                C153777 +
            (C23994 * C985 + C25085 + C25085 + C153761 * C997 + C23992 * C984 +
             C25086 + C25086 + C153790 * C996 + C23990 * C983 + C25087 +
             C25087 + C153809 * C995) *
                C47674 +
            (C24860 + C24859 + C24858) * C47673) *
               C153501 * C153413 * C153449) *
              C678)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C47673 +
             C31295 * C47674 + C31296 * C153777) *
                C153812 +
            (C52025 + C52026 + C52027) * C153800 + C52045 * C153774) *
               C153413 * C153724 -
           ((C52031 + C52032 + C52033) * C153774 +
            (C52030 + C52029 + C52028) * C153800 +
            (C52027 + C52026 + C52025) * C153812) *
               C153413 * C153449) *
              C153793 +
          (((C52034 + C52035 + C52036) * C153812 +
            (C52037 + C52038 + C52039) * C153800 +
            (C52040 + C52041 + C52042) * C153774) *
               C153413 * C153449 -
           (C52046 * C153774 + (C52036 + C52035 + C52034) * C153800 +
            (C31301 * C153777 + C31300 * C47674 +
             (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C47673) *
                C153812) *
               C153413 * C153724) *
              C153794 +
          ((((C28234 * C146 + C28247 + C28247 + C153338 * C162) * C47673 +
             C31779 * C47674 + C31780 * C153777) *
                C153812 +
            (C52483 + C52484 + C52485) * C153800 +
            (C52486 + C52487 + C52488) * C153774) *
               C153413 * C153724 -
           (((C28234 * C4833 + C31533 + C31533 + C153338 * C4839) * C153777 +
             C44720 * C47674 + C28738 * C47673) *
                C153774 +
            (C52488 + C52487 + C52486) * C153800 +
            (C52485 + C52484 + C52483) * C153812) *
               C153413 * C153449) *
              C678)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C55722 +
            C31295 * C55723 + C31296 * C55724 + C31299 * C55725 +
            C34025 * C55726) *
               C153501 * C153413 * C153724 -
           (C32694 * C55726 + C31298 * C55725 + C29445 * C55724 +
            C29076 * C55723 + C28429 * C55722) *
               C153501 * C153413 * C153449) *
              C153793 +
          ((C28434 * C55722 + C29077 * C55723 + C31015 * C55724 +
            C31303 * C55725 +
            (C28234 * C9041 + C31273 + C31273 + C153338 * C9047) * C55726) *
               C153501 * C153413 * C153449 -
           (C55997 * C55726 + C31302 * C55725 + C31301 * C55724 +
            C31300 * C55723 +
            (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C55722) *
               C153501 * C153413 * C153724) *
              C153794 +
          (((C28234 * C146 + C28247 + C28247 + C153338 * C162) * C55722 +
            C31779 * C55723 + C31780 * C55724 +
            (C28234 * C2150 + C31774 + C31774 + C153338 * C2160) * C55725 +
            (C28234 * C7562 + C55728 + C55728 + C153338 * C7570) * C55726) *
               C153501 * C153413 * C153724 -
           ((C28234 * C9040 + C56121 + C56121 + C153338 * C9046) * C55726 +
            (C28234 * C6216 + C31773 + C31773 + C153338 * C6228) * C55725 +
            C31543 * C55724 + C31542 * C55723 + C28736 * C55722) *
               C153501 * C153413 * C153449) *
              C678)) /
            (p * q * std::sqrt(p + q));
    d2ee[181] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C144 + C169 + C169 + C121 * C160 + C136 * C145 + C170 +
                 C170 + C122 * C161 + C138 * C146 + C171 + C171 + C123 * C162 +
                 C140 * C147 + C172 + C172 + C124 * C163 + C142 * C148 + C173 +
                 C173 + C125 * C164) *
                    C153513 * C153501 * C153725 -
                (C142 * C496 + C533 + C533 + C125 * C520 + C140 * C497 + C534 +
                 C534 + C124 * C521 + C138 * C498 + C535 + C535 + C123 * C522 +
                 C136 * C499 + C536 + C536 + C122 * C523 + C134 * C500 + C537 +
                 C537 + C121 * C524) *
                    C153513 * C153501 * C153477) *
                   C153724 +
               ((C134 * C981 + C1000 + C1000 + C121 * C993 + C136 * C982 +
                 C1001 + C1001 + C122 * C994 + C138 * C983 + C1002 + C1002 +
                 C123 * C995 + C140 * C984 + C1003 + C1003 + C124 * C996 +
                 C142 * C985 + C1004 + C1004 + C125 * C997) *
                    C153513 * C153501 * C153477 -
                (C142 * C315 + C352 + C352 + C125 * C339 + C140 * C316 + C353 +
                 C353 + C124 * C340 + C138 * C317 + C354 + C354 + C123 * C341 +
                 C136 * C318 + C355 + C355 + C122 * C342 + C134 * C319 + C356 +
                 C356 + C121 * C343) *
                    C153513 * C153501 * C153725) *
                   C153449) *
                  C313 +
              (((C134 * C499 + C543 + C543 + C121 * C523 + C136 * C498 + C544 +
                 C544 + C122 * C522 + C138 * C497 + C545 + C545 + C123 * C521 +
                 C140 * C496 + C546 + C546 + C124 * C520 + C142 * C506 + C547 +
                 C547 + C125 * C530) *
                    C153513 * C153501 * C153477 -
                (C142 * C149 + C174 + C174 + C125 * C165 + C140 * C148 + C175 +
                 C175 + C124 * C164 + C138 * C147 + C176 + C176 + C123 * C163 +
                 C136 * C146 + C177 + C177 + C122 * C162 + C134 * C145 + C178 +
                 C178 + C121 * C161) *
                    C153513 * C153501 * C153725) *
                   C153724 +
               ((C134 * C318 + C362 + C362 + C121 * C342 + C136 * C317 + C363 +
                 C363 + C122 * C341 + C138 * C316 + C364 + C364 + C123 * C340 +
                 C140 * C315 + C365 + C365 + C124 * C339 + C142 * C325 + C366 +
                 C366 + C125 * C349) *
                    C153513 * C153501 * C153725 -
                (C142 * C986 + C1005 + C1005 + C125 * C998 + C140 * C985 +
                 C1006 + C1006 + C124 * C997 + C138 * C984 + C1007 + C1007 +
                 C123 * C996 + C136 * C983 + C1008 + C1008 + C122 * C995 +
                 C134 * C982 + C1009 + C1009 + C121 * C994) *
                    C153513 * C153501 * C153477) *
                   C153449) *
                  C153384) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 +
                  C2737 + C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
                  C153761 * C162) *
                     C153513 * C153812 +
                 (C3086 + C3087 + C3088) * C153513 * C153800 +
                 C3108 * C153774) *
                    C153725 -
                ((C4210 + C4211 + C4212) * C153513 * C153774 +
                 (C4213 + C4214 + C4215) * C153513 * C153800 +
                 (C2733 * C498 + C3346 + C3346 + C153761 * C522 + C2731 * C499 +
                  C3347 + C3347 + C2724 * C523 + C2729 * C500 + C3348 + C3348 +
                  C2723 * C524) *
                     C153513 * C153812) *
                    C153477) *
                   C153724 +
               (((C4215 + C4214 + C4213) * C153513 * C153812 +
                 (C4212 + C4211 + C4210) * C153513 * C153800 +
                 (C2729 * C4143 + C4168 + C4168 + C2723 * C4151 +
                  C2731 * C4144 + C4169 + C4169 + C2724 * C4152 +
                  C2733 * C4145 + C4170 + C4170 + C153761 * C4153) *
                     C153513 * C153774) *
                    C153477 -
                ((C3092 + C3093 + C3094) * C153513 * C153774 +
                 (C3091 + C3090 + C3089) * C153513 * C153800 +
                 (C3088 + C3087 + C3086) * C153513 * C153812) *
                    C153725) *
                   C153449) *
                  C313 +
              ((((C2729 * C499 + C3358 + C3358 + C2723 * C523 + C2731 * C498 +
                  C3359 + C3359 + C2724 * C522 + C2733 * C497 + C3360 + C3360 +
                  C153761 * C521) *
                     C153513 * C153812 +
                 (C4216 + C4217 + C4218) * C153513 * C153800 +
                 (C4219 + C4220 + C4221) * C153513 * C153774) *
                    C153477 -
                (C3109 * C153774 + (C3097 + C3096 + C3095) * C153513 * C153800 +
                 (C2733 * C147 + C2751 + C2751 + C153761 * C163 + C2731 * C146 +
                  C2752 + C2752 + C2724 * C162 + C2729 * C145 + C2753 + C2753 +
                  C2723 * C161) *
                     C153513 * C153812) *
                    C153725) *
                   C153724 +
               (((C3095 + C3096 + C3097) * C153513 * C153812 +
                 (C3098 + C3099 + C3100) * C153513 * C153800 +
                 (C3101 + C3102 + C3103) * C153513 * C153774) *
                    C153725 -
                ((C2733 * C4146 + C4183 + C4183 + C153761 * C4154 +
                  C2731 * C4145 + C4184 + C4184 + C2724 * C4153 +
                  C2729 * C4144 + C4185 + C4185 + C2723 * C4152) *
                     C153513 * C153774 +
                 (C4221 + C4220 + C4219) * C153513 * C153800 +
                 (C4218 + C4217 + C4216) * C153513 * C153812) *
                    C153477) *
                   C153449) *
                  C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 +
              C2737 + C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
              C153761 * C162) *
                 C153813 +
             (C7654 + C7655 + C7656) * C153802 + C7674 * C153777) *
                C153501 * C153725 -
            ((C7660 + C7661 + C7662) * C153777 +
             (C7659 + C7658 + C7657) * C153802 +
             (C7656 + C7655 + C7654) * C153813) *
                C153501 * C153477) *
               C153724 +
           (((C4215 + C4214 + C4213) * C153813 +
             (C4870 + C4871 + C4872) * C153802 +
             (C2729 * C6218 + C6237 + C6237 + C2723 * C6230 + C2731 * C6217 +
              C6236 + C6236 + C2724 * C6229 + C2733 * C6216 + C6235 + C6235 +
              C153761 * C6228) *
                 C153777) *
                C153501 * C153477 -
            ((C4872 + C4871 + C4870) * C153777 +
             (C4213 + C4214 + C4215) * C153802 +
             (C3088 + C3087 + C3086) * C153813) *
                C153501 * C153725) *
               C153449) *
              C313 +
          ((((C7663 + C7664 + C7665) * C153813 +
             (C7666 + C7667 + C7668) * C153802 +
             (C7669 + C7670 + C7671) * C153777) *
                C153501 * C153477 -
            (C7675 * C153777 + (C7665 + C7664 + C7663) * C153802 +
             (C2733 * C147 + C2751 + C2751 + C153761 * C163 + C2731 * C146 +
              C2752 + C2752 + C2724 * C162 + C2729 * C145 + C2753 + C2753 +
              C2723 * C161) *
                 C153813) *
                C153501 * C153725) *
               C153724 +
           (((C3095 + C3096 + C3097) * C153813 +
             (C4216 + C4217 + C4218) * C153802 +
             (C8456 + C8457 + C8458) * C153777) *
                C153501 * C153725 -
            ((C2733 * C8437 + C8447 + C8447 + C153761 * C8439 + C2731 * C6216 +
              C8448 + C8448 + C2724 * C6228 + C2729 * C6217 + C8449 + C8449 +
              C2723 * C6229) *
                 C153777 +
             (C8458 + C8457 + C8456) * C153802 +
             (C4218 + C4217 + C4216) * C153813) *
                C153501 * C153477) *
               C153449) *
              C153384)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
              C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 +
              C23999 + C153761 * C162) *
                 C153513 * C23987 +
             (C24335 + C24336 + C24337) * C153513 * C23988 + C24357 * C153774) *
                C153725 -
            ((C25435 + C25436 + C25437) * C153513 * C153774 +
             (C25438 + C25439 + C25440) * C153513 * C23988 +
             (C23994 * C498 + C24583 + C24583 + C153761 * C522 + C23992 * C499 +
              C24584 + C24584 + C153790 * C523 + C23990 * C500 + C24585 +
              C24585 + C153809 * C524) *
                 C153513 * C23987) *
                C153477) *
               C153724 +
           (((C25440 + C25439 + C25438) * C153513 * C23987 +
             (C25437 + C25436 + C25435) * C153513 * C23988 +
             (C23990 * C4143 + C25393 + C25393 + C153809 * C4151 +
              C23992 * C4144 + C25394 + C25394 + C153790 * C4152 +
              C23994 * C4145 + C25395 + C25395 + C153761 * C4153) *
                 C153513 * C153774) *
                C153477 -
            ((C24341 + C24342 + C24343) * C153513 * C153774 +
             (C24340 + C24339 + C24338) * C153513 * C23988 +
             (C24337 + C24336 + C24335) * C153513 * C23987) *
                C153725) *
               C153449) *
              C313 +
          ((((C23990 * C499 + C24595 + C24595 + C153809 * C523 + C23992 * C498 +
              C24596 + C24596 + C153790 * C522 + C23994 * C497 + C24597 +
              C24597 + C153761 * C521) *
                 C153513 * C23987 +
             (C25441 + C25442 + C25443) * C153513 * C23988 +
             (C25444 + C25445 + C25446) * C153513 * C153774) *
                C153477 -
            (C24358 * C153774 + (C24346 + C24345 + C24344) * C153513 * C23988 +
             (C23994 * C147 + C24012 + C24012 + C153761 * C163 + C23992 * C146 +
              C24013 + C24013 + C153790 * C162 + C23990 * C145 + C24014 +
              C24014 + C153809 * C161) *
                 C153513 * C23987) *
                C153725) *
               C153724 +
           (((C24344 + C24345 + C24346) * C153513 * C23987 +
             (C24347 + C24348 + C24349) * C153513 * C23988 +
             (C24350 + C24351 + C24352) * C153513 * C153774) *
                C153725 -
            ((C23994 * C4146 + C25408 + C25408 + C153761 * C4154 +
              C23992 * C4145 + C25409 + C25409 + C153790 * C4153 +
              C23990 * C4144 + C25410 + C25410 + C153809 * C4152) *
                 C153513 * C153774 +
             (C25446 + C25445 + C25444) * C153513 * C23988 +
             (C25443 + C25442 + C25441) * C153513 * C23987) *
                C153477) *
               C153449) *
              C153384)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153513 *
                 C28229 +
             C28439 * C28230 + C28440 * C28231 + C28441 * C28232 +
             C28442 * C28233) *
                C153725 -
            (C29081 * C28233 + C29082 * C28232 + C29083 * C28231 +
             C29084 * C28230 +
             (C28234 * C500 + C28581 + C28581 + C153338 * C524) * C153513 *
                 C28229) *
                C153477) *
               C153724 +
           ((C29084 * C28229 + C29083 * C28230 + C29082 * C28231 +
             C29081 * C28232 +
             (C28234 * C29032 + C29047 + C29047 + C153338 * C29036) * C153513 *
                 C28233) *
                C153477 -
            (C28443 * C28233 + C28442 * C28232 + C28441 * C28231 +
             C28440 * C28230 + C28439 * C28229) *
                C153725) *
               C153449) *
              C313 +
          ((((C28234 * C499 + C28587 + C28587 + C153338 * C523) * C153513 *
                 C28229 +
             C29085 * C28230 + C29086 * C28231 + C29087 * C28232 +
             C29088 * C28233) *
                C153477 -
            (C28447 * C28233 + C28446 * C28232 + C28445 * C28231 +
             C28444 * C28230 +
             (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C153513 *
                 C28229) *
                C153725) *
               C153724 +
           ((C28444 * C28229 + C28445 * C28230 + C28446 * C28231 +
             C28447 * C28232 + C28448 * C28233) *
                C153725 -
            ((C28234 * C29033 + C29056 + C29056 + C153338 * C29037) * C153513 *
                 C28233 +
             C29088 * C28232 + C29087 * C28231 + C29086 * C28230 +
             C29085 * C28229) *
                C153477) *
               C153449) *
              C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153813 +
              C31295 * C153802 + C31296 * C153777) *
                 C23987 +
             (C30985 + C30986 + C30987) * C23988 + C31011 * C153774) *
                C153725 -
            ((C32074 + C32075 + C32076) * C153774 +
             (C32077 + C32078 + C32079) * C23988 +
             (C31299 * C153777 + C31296 * C153802 + C31295 * C153813) *
                 C23987) *
                C153477) *
               C153724 +
           (((C32079 + C32078 + C32077) * C23987 +
             (C32076 + C32075 + C32074) * C23988 +
             (C29074 * C153813 + C29447 * C153802 +
              (C28234 * C30195 + C30202 + C30202 + C153338 * C30199) *
                  C153777) *
                 C153774) *
                C153477 -
            ((C30991 + C30992 + C30993) * C153774 +
             (C30990 + C30989 + C30988) * C23988 +
             (C30987 + C30986 + C30985) * C23987) *
                C153725) *
               C153449) *
              C313 +
          ((((C31300 * C153813 + C31301 * C153802 + C31302 * C153777) * C23987 +
             (C32080 + C32081 + C32082) * C23988 +
             (C32083 + C32084 + C32085) * C153774) *
                C153477 -
            (C31021 * C153774 + (C31018 + C30995 + C30994) * C23988 +
             (C31301 * C153777 + C31300 * C153802 +
              (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C153813) *
                 C23987) *
                C153725) *
               C153724 +
           (((C30994 + C30995 + C31018) * C23987 +
             (C30998 + C30999 + C31019) * C23988 +
             (C31002 + C31003 + C31020) * C153774) *
                C153725 -
            (((C28234 * C32070 + C32086 + C32086 + C153338 * C32072) * C153777 +
              C31017 * C153802 + C29079 * C153813) *
                 C153774 +
             (C32085 + C32084 + C32083) * C23988 +
             (C32082 + C32081 + C32080) * C23987) *
                C153477) *
               C153449) *
              C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
              C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 +
              C23999 + C153761 * C162) *
                 C47673 +
             (C48203 + C48204 + C48205) * C47674 + C48223 * C153777) *
                C153501 * C153725 -
            ((C48209 + C48210 + C48211) * C153777 +
             (C48208 + C48207 + C48206) * C47674 +
             (C48205 + C48204 + C48203) * C47673) *
                C153501 * C153477) *
               C153724 +
           (((C25440 + C25439 + C25438) * C47673 +
             (C26077 + C26078 + C26079) * C47674 +
             (C23990 * C6218 + C27417 + C27417 + C153809 * C6230 +
              C23992 * C6217 + C27416 + C27416 + C153790 * C6229 +
              C23994 * C6216 + C27415 + C27415 + C153761 * C6228) *
                 C153777) *
                C153501 * C153477 -
            ((C26079 + C26078 + C26077) * C153777 +
             (C25438 + C25439 + C25440) * C47674 +
             (C24337 + C24336 + C24335) * C47673) *
                C153501 * C153725) *
               C153449) *
              C313 +
          ((((C48212 + C48213 + C48214) * C47673 +
             (C48215 + C48216 + C48217) * C47674 +
             (C48218 + C48219 + C48220) * C153777) *
                C153501 * C153477 -
            (C48224 * C153777 + (C48214 + C48213 + C48212) * C47674 +
             (C23994 * C147 + C24012 + C24012 + C153761 * C163 + C23992 * C146 +
              C24013 + C24013 + C153790 * C162 + C23990 * C145 + C24014 +
              C24014 + C153809 * C161) *
                 C47673) *
                C153501 * C153725) *
               C153724 +
           (((C24344 + C24345 + C24346) * C47673 +
             (C25441 + C25442 + C25443) * C47674 +
             (C49002 + C49003 + C49004) * C153777) *
                C153501 * C153725 -
            ((C23994 * C8437 + C48993 + C48993 + C153761 * C8439 +
              C23992 * C6216 + C48994 + C48994 + C153790 * C6228 +
              C23990 * C6217 + C48995 + C48995 + C153809 * C6229) *
                 C153777 +
             (C49004 + C49003 + C49002) * C47674 +
             (C25443 + C25442 + C25441) * C47673) *
                C153501 * C153477) *
               C153449) *
              C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C47673 +
              C31295 * C47674 + C31296 * C153777) *
                 C153812 +
             (C52025 + C52026 + C52027) * C153800 + C52045 * C153774) *
                C153725 -
            ((C52997 + C52998 + C52999) * C153774 +
             (C53000 + C53001 + C53002) * C153800 +
             (C31299 * C153777 + C31296 * C47674 + C31295 * C47673) * C153812) *
                C153477) *
               C153724 +
           (((C53002 + C53001 + C53000) * C153812 +
             (C52999 + C52998 + C52997) * C153800 +
             (C29074 * C47673 + C29447 * C47674 + C32696 * C153777) * C153774) *
                C153477 -
            ((C52031 + C52032 + C52033) * C153774 +
             (C52030 + C52029 + C52028) * C153800 +
             (C52027 + C52026 + C52025) * C153812) *
                C153725) *
               C153449) *
              C313 +
          ((((C31300 * C47673 + C31301 * C47674 + C31302 * C153777) * C153812 +
             (C53003 + C53004 + C53005) * C153800 +
             (C53006 + C53007 + C53008) * C153774) *
                C153477 -
            (C52046 * C153774 + (C52036 + C52035 + C52034) * C153800 +
             (C31301 * C153777 + C31300 * C47674 +
              (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C47673) *
                 C153812) *
                C153725) *
               C153724 +
           (((C52034 + C52035 + C52036) * C153812 +
             (C52037 + C52038 + C52039) * C153800 +
             (C52040 + C52041 + C52042) * C153774) *
                C153725 -
            (((C28234 * C32070 + C32086 + C32086 + C153338 * C32072) * C153777 +
              C31017 * C47674 + C29079 * C47673) *
                 C153774 +
             (C53008 + C53007 + C53006) * C153800 +
             (C53005 + C53004 + C53003) * C153812) *
                C153477) *
               C153449) *
              C153384)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C55722 +
             C31295 * C55723 + C31296 * C55724 + C31299 * C55725 +
             C34025 * C55726) *
                C153501 * C153725 -
            (C55996 * C55726 + C34025 * C55725 + C31299 * C55724 +
             C31296 * C55723 + C31295 * C55722) *
                C153501 * C153477) *
               C153724 +
           ((C29076 * C55722 + C29445 * C55723 + C31298 * C55724 +
             C32694 * C55725 +
             (C28234 * C34012 + C34021 + C34021 + C153338 * C34016) * C55726) *
                C153501 * C153477 -
            (C32694 * C55726 + C31298 * C55725 + C29445 * C55724 +
             C29076 * C55723 + C28429 * C55722) *
                C153501 * C153725) *
               C153449) *
              C313 +
          (((C31300 * C55722 + C31301 * C55723 + C31302 * C55724 +
             C55997 * C55725 + C55998 * C55726) *
                C153501 * C153477 -
            (C55997 * C55726 + C31302 * C55725 + C31301 * C55724 +
             C31300 * C55723 +
             (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C55722) *
                C153501 * C153725) *
               C153724 +
           ((C28434 * C55722 + C29077 * C55723 + C31015 * C55724 +
             C31303 * C55725 + C56425 * C55726) *
                C153501 * C153725 -
            ((C28234 * C56416 + C56422 + C56422 + C153338 * C56418) * C55726 +
             C56425 * C55725 + C31303 * C55724 + C31015 * C55723 +
             C29077 * C55722) *
                C153501 * C153477) *
               C153449) *
              C153384)) /
            (p * q * std::sqrt(p + q));
    d2ee[182] +=
        (-0.25 * std::pow(Pi, 2.5) *
             ((C134 * C144 + C169 + C169 + C121 * C160 + C136 * C145 + C170 +
               C170 + C122 * C161 + C138 * C146 + C171 + C171 + C123 * C162 +
               C140 * C147 + C172 + C172 + C124 * C163 + C142 * C148 + C173 +
               C173 + C125 * C164) *
                  C153513 * C153501 * C153413 * C153397 * C130 -
              (C142 * C149 + C174 + C174 + C125 * C165 + C140 * C148 + C175 +
               C175 + C124 * C164 + C138 * C147 + C176 + C176 + C123 * C163 +
               C136 * C146 + C177 + C177 + C122 * C162 + C134 * C145 + C178 +
               C178 + C121 * C161) *
                  C153513 * C153501 * C153413 * C153397 * C131 +
              (C134 * C146 + C179 + C179 + C121 * C162 + C136 * C147 + C180 +
               C180 + C122 * C163 + C138 * C148 + C181 + C181 + C123 * C164 +
               C140 * C149 + C182 + C182 + C124 * C165 + C142 * C150 + C183 +
               C183 + C125 * C166) *
                  C153513 * C153501 * C153413 * C153397 * C132 -
              (C142 * C151 + C184 + C184 + C125 * C167 + C140 * C150 + C185 +
               C185 + C124 * C166 + C138 * C149 + C186 + C186 + C123 * C165 +
               C136 * C148 + C187 + C187 + C122 * C164 + C134 * C147 + C188 +
               C188 + C121 * C163) *
                  C153513 * C153501 * C153413 * C153397 * C133) -
         0.25 * std::pow(Pi, 2.5) *
             (((C134 * C144 + C169 + C169 + C121 * C160 + C136 * C145 + C170 +
                C170 + C122 * C161 + C138 * C146 + C171 + C171 + C123 * C162 +
                C140 * C147 + C172 + C172 + C124 * C163 + C142 * C148 + C173 +
                C173 + C125 * C164) *
                   C153513 * C153501 * C153413 * C310 -
               (C142 * C315 + C352 + C352 + C125 * C339 + C140 * C316 + C353 +
                C353 + C124 * C340 + C138 * C317 + C354 + C354 + C123 * C341 +
                C136 * C318 + C355 + C355 + C122 * C342 + C134 * C319 + C356 +
                C356 + C121 * C343) *
                   C153513 * C153501 * C153413 * C311 +
               (C134 * C320 + C357 + C357 + C121 * C344 + C136 * C321 + C358 +
                C358 + C122 * C345 + C138 * C322 + C359 + C359 + C123 * C346 +
                C140 * C323 + C360 + C360 + C124 * C347 + C142 * C324 + C361 +
                C361 + C125 * C348) *
                   C153513 * C153501 * C153413 * C312) *
                  C313 +
              ((C134 * C318 + C362 + C362 + C121 * C342 + C136 * C317 + C363 +
                C363 + C122 * C341 + C138 * C316 + C364 + C364 + C123 * C340 +
                C140 * C315 + C365 + C365 + C124 * C339 + C142 * C325 + C366 +
                C366 + C125 * C349) *
                   C153513 * C153501 * C153413 * C311 -
               (C142 * C149 + C174 + C174 + C125 * C165 + C140 * C148 + C175 +
                C175 + C124 * C164 + C138 * C147 + C176 + C176 + C123 * C163 +
                C136 * C146 + C177 + C177 + C122 * C162 + C134 * C145 + C178 +
                C178 + C121 * C161) *
                   C153513 * C153501 * C153413 * C310 -
               (C142 * C326 + C367 + C367 + C125 * C350 + C140 * C324 + C368 +
                C368 + C124 * C348 + C138 * C323 + C369 + C369 + C123 * C347 +
                C136 * C322 + C370 + C370 + C122 * C346 + C134 * C321 + C371 +
                C371 + C121 * C345) *
                   C153513 * C153501 * C153413 * C312) *
                  C153384) +
         0.5 * std::pow(Pi, 2.5) *
             (((C134 * C144 + C169 + C169 + C121 * C160 + C136 * C145 + C170 +
                C170 + C122 * C161 + C138 * C146 + C171 + C171 + C123 * C162 +
                C140 * C147 + C172 + C172 + C124 * C163 + C142 * C148 + C173 +
                C173 + C125 * C164) *
                   C153513 * C153501 * C493 -
               (C142 * C496 + C533 + C533 + C125 * C520 + C140 * C497 + C534 +
                C534 + C124 * C521 + C138 * C498 + C535 + C535 + C123 * C522 +
                C136 * C499 + C536 + C536 + C122 * C523 + C134 * C500 + C537 +
                C537 + C121 * C524) *
                   C153513 * C153501 * C494 +
               (C134 * C501 + C538 + C538 + C121 * C525 + C136 * C502 + C539 +
                C539 + C122 * C526 + C138 * C503 + C540 + C540 + C123 * C527 +
                C140 * C504 + C541 + C541 + C124 * C528 + C142 * C505 + C542 +
                C542 + C125 * C529) *
                   C153513 * C153501 * C495) *
                  C153397 * C313 +
              ((C134 * C499 + C543 + C543 + C121 * C523 + C136 * C498 + C544 +
                C544 + C122 * C522 + C138 * C497 + C545 + C545 + C123 * C521 +
                C140 * C496 + C546 + C546 + C124 * C520 + C142 * C506 + C547 +
                C547 + C125 * C530) *
                   C153513 * C153501 * C494 -
               (C142 * C149 + C174 + C174 + C125 * C165 + C140 * C148 + C175 +
                C175 + C124 * C164 + C138 * C147 + C176 + C176 + C123 * C163 +
                C136 * C146 + C177 + C177 + C122 * C162 + C134 * C145 + C178 +
                C178 + C121 * C161) *
                   C153513 * C153501 * C493 -
               (C142 * C507 + C548 + C548 + C125 * C531 + C140 * C505 + C549 +
                C549 + C124 * C529 + C138 * C504 + C550 + C550 + C123 * C528 +
                C136 * C503 + C551 + C551 + C122 * C527 + C134 * C502 + C552 +
                C552 + C121 * C526) *
                   C153513 * C153501 * C495) *
                  C153397 * C153384) -
         0.25 * std::pow(Pi, 2.5) *
             (((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 +
                C2737 + C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
                C153761 * C162) *
                   C153513 * C153812 +
               (C2729 * C319 + C2739 + C2739 + C2723 * C343 + C2731 * C318 +
                C2740 + C2740 + C2724 * C342 + C2733 * C317 + C2741 + C2741 +
                C153761 * C341) *
                   C153513 * C153800 +
               (C2729 * C320 + C2742 + C2742 + C2723 * C344 + C2731 * C321 +
                C2743 + C2743 + C2724 * C345 + C2733 * C322 + C2744 + C2744 +
                C153761 * C346) *
                   C153513 * C153774) *
                  C153413 * C153397 * C130 -
              ((C2733 * C323 + C2745 + C2745 + C153761 * C347 + C2731 * C322 +
                C2746 + C2746 + C2724 * C346 + C2729 * C321 + C2747 + C2747 +
                C2723 * C345) *
                   C153513 * C153774 +
               (C2733 * C316 + C2748 + C2748 + C153761 * C340 + C2731 * C317 +
                C2749 + C2749 + C2724 * C341 + C2729 * C318 + C2750 + C2750 +
                C2723 * C342) *
                   C153513 * C153800 +
               (C2733 * C147 + C2751 + C2751 + C153761 * C163 + C2731 * C146 +
                C2752 + C2752 + C2724 * C162 + C2729 * C145 + C2753 + C2753 +
                C2723 * C161) *
                   C153513 * C153812) *
                  C153413 * C153397 * C131 +
              ((C2729 * C146 + C2754 + C2754 + C2723 * C162 + C2731 * C147 +
                C2755 + C2755 + C2724 * C163 + C2733 * C148 + C2756 + C2756 +
                C153761 * C164) *
                   C153513 * C153812 +
               (C2729 * C317 + C2757 + C2757 + C2723 * C341 + C2731 * C316 +
                C2758 + C2758 + C2724 * C340 + C2733 * C315 + C2759 + C2759 +
                C153761 * C339) *
                   C153513 * C153800 +
               (C2729 * C322 + C2760 + C2760 + C2723 * C346 + C2731 * C323 +
                C2761 + C2761 + C2724 * C347 + C2733 * C324 + C2762 + C2762 +
                C153761 * C348) *
                   C153513 * C153774) *
                  C153413 * C153397 * C132 -
              ((C2733 * C326 + C2763 + C2763 + C153761 * C350 + C2731 * C324 +
                C2764 + C2764 + C2724 * C348 + C2729 * C323 + C2765 + C2765 +
                C2723 * C347) *
                   C153513 * C153774 +
               (C2733 * C325 + C2766 + C2766 + C153761 * C349 + C2731 * C315 +
                C2767 + C2767 + C2724 * C339 + C2729 * C316 + C2768 + C2768 +
                C2723 * C340) *
                   C153513 * C153800 +
               (C2733 * C149 + C2769 + C2769 + C153761 * C165 + C2731 * C148 +
                C2770 + C2770 + C2724 * C164 + C2729 * C147 + C2771 + C2771 +
                C2723 * C163) *
                   C153513 * C153812) *
                  C153413 * C153397 * C133) -
         0.25 * std::pow(Pi, 2.5) *
             ((((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 +
                 C2737 + C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
                 C153761 * C162) *
                    C153513 * C153812 +
                (C3086 + C3087 + C3088) * C153513 * C153800 + C3108 * C153774) *
                   C153413 * C310 -
               ((C3092 + C3093 + C3094) * C153513 * C153774 +
                (C3091 + C3090 + C3089) * C153513 * C153800 +
                (C3088 + C3087 + C3086) * C153513 * C153812) *
                   C153413 * C311 +
               (C3108 * C153812 + (C3094 + C3093 + C3092) * C153513 * C153800 +
                (C2729 * C2989 + C3023 + C3023 + C2723 * C2997 + C2731 * C2990 +
                 C3024 + C3024 + C2724 * C2998 + C2733 * C2991 + C3025 + C3025 +
                 C153761 * C2999) *
                    C153513 * C153774) *
                   C153413 * C312) *
                  C313 +
              (((C3095 + C3096 + C3097) * C153513 * C153812 +
                (C3098 + C3099 + C3100) * C153513 * C153800 +
                (C3101 + C3102 + C3103) * C153513 * C153774) *
                   C153413 * C311 -
               (C3109 * C153774 + (C3097 + C3096 + C3095) * C153513 * C153800 +
                (C2733 * C147 + C2751 + C2751 + C153761 * C163 + C2731 * C146 +
                 C2752 + C2752 + C2724 * C162 + C2729 * C145 + C2753 + C2753 +
                 C2723 * C161) *
                    C153513 * C153812) *
                   C153413 * C310 -
               ((C2733 * C2992 + C3047 + C3047 + C153761 * C3000 +
                 C2731 * C2991 + C3048 + C3048 + C2724 * C2999 + C2729 * C2990 +
                 C3049 + C3049 + C2723 * C2998) *
                    C153513 * C153774 +
                (C3103 + C3102 + C3101) * C153513 * C153800 + C3109 * C153812) *
                   C153413 * C312) *
                  C153384) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 +
                 C2737 + C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
                 C153761 * C162) *
                    C153513 * C153812 +
                (C3086 + C3087 + C3088) * C153513 * C153800 + C3108 * C153774) *
                   C493 -
               ((C2733 * C1798 + C3340 + C3340 + C153761 * C1808 +
                 C2731 * C1799 + C3341 + C3341 + C2724 * C1809 + C2729 * C1800 +
                 C3342 + C3342 + C2723 * C1810) *
                    C153513 * C153774 +
                (C2733 * C983 + C3343 + C3343 + C153761 * C995 + C2731 * C982 +
                 C3344 + C3344 + C2724 * C994 + C2729 * C981 + C3345 + C3345 +
                 C2723 * C993) *
                    C153513 * C153800 +
                (C2733 * C498 + C3346 + C3346 + C153761 * C522 + C2731 * C499 +
                 C3347 + C3347 + C2724 * C523 + C2729 * C500 + C3348 + C3348 +
                 C2723 * C524) *
                    C153513 * C153812) *
                   C494 +
               ((C2729 * C501 + C3349 + C3349 + C2723 * C525 + C2731 * C502 +
                 C3350 + C3350 + C2724 * C526 + C2733 * C503 + C3351 + C3351 +
                 C153761 * C527) *
                    C153513 * C153812 +
                (C2729 * C1369 + C3352 + C3352 + C2723 * C1379 + C2731 * C1368 +
                 C3353 + C3353 + C2724 * C1378 + C2733 * C1367 + C3354 + C3354 +
                 C153761 * C1377) *
                    C153513 * C153800 +
                (C2729 * C3327 + C3355 + C3355 + C2723 * C3335 + C2731 * C3328 +
                 C3356 + C3356 + C2724 * C3336 + C2733 * C3329 + C3357 + C3357 +
                 C153761 * C3337) *
                    C153513 * C153774) *
                   C495) *
                  C153397 * C313 +
              (((C2729 * C499 + C3358 + C3358 + C2723 * C523 + C2731 * C498 +
                 C3359 + C3359 + C2724 * C522 + C2733 * C497 + C3360 + C3360 +
                 C153761 * C521) *
                    C153513 * C153812 +
                (C2729 * C982 + C3361 + C3361 + C2723 * C994 + C2731 * C983 +
                 C3362 + C3362 + C2724 * C995 + C2733 * C984 + C3363 + C3363 +
                 C153761 * C996) *
                    C153513 * C153800 +
                (C2729 * C1799 + C3364 + C3364 + C2723 * C1809 + C2731 * C1798 +
                 C3365 + C3365 + C2724 * C1808 + C2733 * C1797 + C3366 + C3366 +
                 C153761 * C1807) *
                    C153513 * C153774) *
                   C494 -
               (C3109 * C153774 + (C3097 + C3096 + C3095) * C153513 * C153800 +
                (C2733 * C147 + C2751 + C2751 + C153761 * C163 + C2731 * C146 +
                 C2752 + C2752 + C2724 * C162 + C2729 * C145 + C2753 + C2753 +
                 C2723 * C161) *
                    C153513 * C153812) *
                   C493 -
               ((C2733 * C3330 + C3367 + C3367 + C153761 * C3338 +
                 C2731 * C3329 + C3368 + C3368 + C2724 * C3337 + C2729 * C3328 +
                 C3369 + C3369 + C2723 * C3336) *
                    C153513 * C153774 +
                (C2733 * C1366 + C3370 + C3370 + C153761 * C1376 +
                 C2731 * C1367 + C3371 + C3371 + C2724 * C1377 + C2729 * C1368 +
                 C3372 + C3372 + C2723 * C1378) *
                    C153513 * C153800 +
                (C2733 * C504 + C3373 + C3373 + C153761 * C528 + C2731 * C503 +
                 C3374 + C3374 + C2724 * C527 + C2729 * C502 + C3375 + C3375 +
                 C2723 * C526) *
                    C153513 * C153812) *
                   C495) *
                  C153397 * C153384) +
         0.5 * std::pow(Pi, 2.5) *
             (((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 +
                C2737 + C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
                C153761 * C162) *
                   C153813 +
               (C2729 * C500 + C3348 + C3348 + C2723 * C524 + C2731 * C499 +
                C3347 + C3347 + C2724 * C523 + C2733 * C498 + C3346 + C3346 +
                C153761 * C522) *
                   C153802 +
               (C2729 * C501 + C3349 + C3349 + C2723 * C525 + C2731 * C502 +
                C3350 + C3350 + C2724 * C526 + C2733 * C503 + C3351 + C3351 +
                C153761 * C527) *
                   C153777) *
                  C153501 * C153413 * C153397 * C130 -
              ((C2733 * C504 + C3373 + C3373 + C153761 * C528 + C2731 * C503 +
                C3374 + C3374 + C2724 * C527 + C2729 * C502 + C3375 + C3375 +
                C2723 * C526) *
                   C153777 +
               (C2733 * C497 + C3360 + C3360 + C153761 * C521 + C2731 * C498 +
                C3359 + C3359 + C2724 * C522 + C2729 * C499 + C3358 + C3358 +
                C2723 * C523) *
                   C153802 +
               (C2733 * C147 + C2751 + C2751 + C153761 * C163 + C2731 * C146 +
                C2752 + C2752 + C2724 * C162 + C2729 * C145 + C2753 + C2753 +
                C2723 * C161) *
                   C153813) *
                  C153501 * C153413 * C153397 * C131 +
              ((C2729 * C146 + C2754 + C2754 + C2723 * C162 + C2731 * C147 +
                C2755 + C2755 + C2724 * C163 + C2733 * C148 + C2756 + C2756 +
                C153761 * C164) *
                   C153813 +
               (C2729 * C498 + C3853 + C3853 + C2723 * C522 + C2731 * C497 +
                C3852 + C3852 + C2724 * C521 + C2733 * C496 + C3851 + C3851 +
                C153761 * C520) *
                   C153802 +
               (C2729 * C503 + C7116 + C7116 + C2723 * C527 + C2731 * C504 +
                C7117 + C7117 + C2724 * C528 + C2733 * C505 + C7118 + C7118 +
                C153761 * C529) *
                   C153777) *
                  C153501 * C153413 * C153397 * C132 -
              ((C2733 * C507 + C7119 + C7119 + C153761 * C531 + C2731 * C505 +
                C7120 + C7120 + C2724 * C529 + C2729 * C504 + C7121 + C7121 +
                C2723 * C528) *
                   C153777 +
               (C2733 * C506 + C7122 + C7122 + C153761 * C530 + C2731 * C496 +
                C7123 + C7123 + C2724 * C520 + C2729 * C497 + C7124 + C7124 +
                C2723 * C521) *
                   C153802 +
               (C2733 * C149 + C2769 + C2769 + C153761 * C165 + C2731 * C148 +
                C2770 + C2770 + C2724 * C164 + C2729 * C147 + C2771 + C2771 +
                C2723 * C163) *
                   C153813) *
                  C153501 * C153413 * C153397 * C133) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 +
                 C2737 + C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
                 C153761 * C162) *
                    C153813 +
                (C2729 * C500 + C3348 + C3348 + C2723 * C524 + C2731 * C499 +
                 C3347 + C3347 + C2724 * C523 + C2733 * C498 + C3346 + C3346 +
                 C153761 * C522) *
                    C153802 +
                (C2729 * C501 + C3349 + C3349 + C2723 * C525 + C2731 * C502 +
                 C3350 + C3350 + C2724 * C526 + C2733 * C503 + C3351 + C3351 +
                 C153761 * C527) *
                    C153777) *
                   C153501 * C153413 * C310 -
               ((C4872 + C4871 + C4870) * C153777 +
                (C4213 + C4214 + C4215) * C153802 +
                (C3088 + C3087 + C3086) * C153813) *
                   C153501 * C153413 * C311 +
               (C3106 * C153813 + (C4212 + C4211 + C4210) * C153802 +
                (C4873 + C4874 + C4875) * C153777) *
                   C153501 * C153413 * C312) *
                  C313 +
              (((C3095 + C3096 + C3097) * C153813 +
                (C4216 + C4217 + C4218) * C153802 +
                (C2729 * C1368 + C3372 + C3372 + C2723 * C1378 + C2731 * C1367 +
                 C3371 + C3371 + C2724 * C1377 + C2733 * C1366 + C3370 + C3370 +
                 C153761 * C1376) *
                    C153777) *
                   C153501 * C153413 * C311 -
               ((C2733 * C504 + C3373 + C3373 + C153761 * C528 + C2731 * C503 +
                 C3374 + C3374 + C2724 * C527 + C2729 * C502 + C3375 + C3375 +
                 C2723 * C526) *
                    C153777 +
                (C2733 * C497 + C3360 + C3360 + C153761 * C521 + C2731 * C498 +
                 C3359 + C3359 + C2724 * C522 + C2729 * C499 + C3358 + C3358 +
                 C2723 * C523) *
                    C153802 +
                (C2733 * C147 + C2751 + C2751 + C153761 * C163 + C2731 * C146 +
                 C2752 + C2752 + C2724 * C162 + C2729 * C145 + C2753 + C2753 +
                 C2723 * C161) *
                    C153813) *
                   C153501 * C153413 * C310 -
               ((C2733 * C3330 + C3367 + C3367 + C153761 * C3338 +
                 C2731 * C3329 + C3368 + C3368 + C2724 * C3337 + C2729 * C3328 +
                 C3369 + C3369 + C2723 * C3336) *
                    C153777 +
                (C4221 + C4220 + C4219) * C153802 + C3107 * C153813) *
                   C153501 * C153413 * C312) *
                  C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 +
             C2737 + C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
             C153761 * C162) *
                C153813 +
            (C7654 + C7655 + C7656) * C153802 + C7674 * C153777) *
               C153501 * C493 -
           ((C7660 + C7661 + C7662) * C153777 +
            (C7659 + C7658 + C7657) * C153802 +
            (C7656 + C7655 + C7654) * C153813) *
               C153501 * C494 +
           (C7674 * C153813 + (C7662 + C7661 + C7660) * C153802 +
            (C2729 * C7560 + C7591 + C7591 + C2723 * C7568 + C2731 * C7561 +
             C7592 + C7592 + C2724 * C7569 + C2733 * C7562 + C7593 + C7593 +
             C153761 * C7570) *
                C153777) *
               C153501 * C495) *
              C153397 * C313 +
          (((C7663 + C7664 + C7665) * C153813 +
            (C7666 + C7667 + C7668) * C153802 +
            (C7669 + C7670 + C7671) * C153777) *
               C153501 * C494 -
           (C7675 * C153777 + (C7665 + C7664 + C7663) * C153802 +
            (C2733 * C147 + C2751 + C2751 + C153761 * C163 + C2731 * C146 +
             C2752 + C2752 + C2724 * C162 + C2729 * C145 + C2753 + C2753 +
             C2723 * C161) *
                C153813) *
               C153501 * C493 -
           ((C2733 * C7563 + C7615 + C7615 + C153761 * C7571 + C2731 * C7562 +
             C7616 + C7616 + C2724 * C7570 + C2729 * C7561 + C7617 + C7617 +
             C2723 * C7569) *
                C153777 +
            (C7671 + C7670 + C7669) * C153802 + C7675 * C153813) *
               C153501 * C495) *
              C153397 * C153384)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         (((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
            C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 + C23999 +
            C153761 * C162) *
               C153513 * C23987 +
           (C23990 * C319 + C24000 + C24000 + C153809 * C343 + C23992 * C318 +
            C24001 + C24001 + C153790 * C342 + C23994 * C317 + C24002 + C24002 +
            C153761 * C341) *
               C153513 * C23988 +
           (C23990 * C320 + C24003 + C24003 + C153809 * C344 + C23992 * C321 +
            C24004 + C24004 + C153790 * C345 + C23994 * C322 + C24005 + C24005 +
            C153761 * C346) *
               C153513 * C153774) *
              C153413 * C153397 * C130 -
          ((C23994 * C323 + C24006 + C24006 + C153761 * C347 + C23992 * C322 +
            C24007 + C24007 + C153790 * C346 + C23990 * C321 + C24008 + C24008 +
            C153809 * C345) *
               C153513 * C153774 +
           (C23994 * C316 + C24009 + C24009 + C153761 * C340 + C23992 * C317 +
            C24010 + C24010 + C153790 * C341 + C23990 * C318 + C24011 + C24011 +
            C153809 * C342) *
               C153513 * C23988 +
           (C23994 * C147 + C24012 + C24012 + C153761 * C163 + C23992 * C146 +
            C24013 + C24013 + C153790 * C162 + C23990 * C145 + C24014 + C24014 +
            C153809 * C161) *
               C153513 * C23987) *
              C153413 * C153397 * C131 +
          ((C23990 * C146 + C24015 + C24015 + C153809 * C162 + C23992 * C147 +
            C24016 + C24016 + C153790 * C163 + C23994 * C148 + C24017 + C24017 +
            C153761 * C164) *
               C153513 * C23987 +
           (C23990 * C317 + C24018 + C24018 + C153809 * C341 + C23992 * C316 +
            C24019 + C24019 + C153790 * C340 + C23994 * C315 + C24020 + C24020 +
            C153761 * C339) *
               C153513 * C23988 +
           (C23990 * C322 + C24021 + C24021 + C153809 * C346 + C23992 * C323 +
            C24022 + C24022 + C153790 * C347 + C23994 * C324 + C24023 + C24023 +
            C153761 * C348) *
               C153513 * C153774) *
              C153413 * C153397 * C132 -
          ((C23994 * C326 + C24024 + C24024 + C153761 * C350 + C23992 * C324 +
            C24025 + C24025 + C153790 * C348 + C23990 * C323 + C24026 + C24026 +
            C153809 * C347) *
               C153513 * C153774 +
           (C23994 * C325 + C24027 + C24027 + C153761 * C349 + C23992 * C315 +
            C24028 + C24028 + C153790 * C339 + C23990 * C316 + C24029 + C24029 +
            C153809 * C340) *
               C153513 * C23988 +
           (C23994 * C149 + C24030 + C24030 + C153761 * C165 + C23992 * C148 +
            C24031 + C24031 + C153790 * C164 + C23990 * C147 + C24032 + C24032 +
            C153809 * C163) *
               C153513 * C23987) *
              C153413 * C153397 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         ((((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
             C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 +
             C23999 + C153761 * C162) *
                C153513 * C23987 +
            (C24335 + C24336 + C24337) * C153513 * C23988 + C24357 * C153774) *
               C153413 * C310 -
           ((C24341 + C24342 + C24343) * C153513 * C153774 +
            (C24340 + C24339 + C24338) * C153513 * C23988 +
            (C24337 + C24336 + C24335) * C153513 * C23987) *
               C153413 * C311 +
           (C24357 * C23987 + (C24343 + C24342 + C24341) * C153513 * C23988 +
            (C23990 * C2989 + C24272 + C24272 + C153809 * C2997 +
             C23992 * C2990 + C24273 + C24273 + C153790 * C2998 +
             C23994 * C2991 + C24274 + C24274 + C153761 * C2999) *
                C153513 * C153774) *
               C153413 * C312) *
              C313 +
          (((C24344 + C24345 + C24346) * C153513 * C23987 +
            (C24347 + C24348 + C24349) * C153513 * C23988 +
            (C24350 + C24351 + C24352) * C153513 * C153774) *
               C153413 * C311 -
           (C24358 * C153774 + (C24346 + C24345 + C24344) * C153513 * C23988 +
            (C23994 * C147 + C24012 + C24012 + C153761 * C163 + C23992 * C146 +
             C24013 + C24013 + C153790 * C162 + C23990 * C145 + C24014 +
             C24014 + C153809 * C161) *
                C153513 * C23987) *
               C153413 * C310 -
           ((C23994 * C2992 + C24296 + C24296 + C153761 * C3000 +
             C23992 * C2991 + C24297 + C24297 + C153790 * C2999 +
             C23990 * C2990 + C24298 + C24298 + C153809 * C2998) *
                C153513 * C153774 +
            (C24352 + C24351 + C24350) * C153513 * C23988 + C24358 * C23987) *
               C153413 * C312) *
              C153384)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
             C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 +
             C23999 + C153761 * C162) *
                C153513 * C23987 +
            (C24335 + C24336 + C24337) * C153513 * C23988 + C24357 * C153774) *
               C493 -
           ((C23994 * C1798 + C24577 + C24577 + C153761 * C1808 +
             C23992 * C1799 + C24578 + C24578 + C153790 * C1809 +
             C23990 * C1800 + C24579 + C24579 + C153809 * C1810) *
                C153513 * C153774 +
            (C23994 * C983 + C24580 + C24580 + C153761 * C995 + C23992 * C982 +
             C24581 + C24581 + C153790 * C994 + C23990 * C981 + C24582 +
             C24582 + C153809 * C993) *
                C153513 * C23988 +
            (C23994 * C498 + C24583 + C24583 + C153761 * C522 + C23992 * C499 +
             C24584 + C24584 + C153790 * C523 + C23990 * C500 + C24585 +
             C24585 + C153809 * C524) *
                C153513 * C23987) *
               C494 +
           ((C23990 * C501 + C24586 + C24586 + C153809 * C525 + C23992 * C502 +
             C24587 + C24587 + C153790 * C526 + C23994 * C503 + C24588 +
             C24588 + C153761 * C527) *
                C153513 * C23987 +
            (C23990 * C1369 + C24589 + C24589 + C153809 * C1379 +
             C23992 * C1368 + C24590 + C24590 + C153790 * C1378 +
             C23994 * C1367 + C24591 + C24591 + C153761 * C1377) *
                C153513 * C23988 +
            (C23990 * C3327 + C24592 + C24592 + C153809 * C3335 +
             C23992 * C3328 + C24593 + C24593 + C153790 * C3336 +
             C23994 * C3329 + C24594 + C24594 + C153761 * C3337) *
                C153513 * C153774) *
               C495) *
              C153397 * C313 +
          (((C23990 * C499 + C24595 + C24595 + C153809 * C523 + C23992 * C498 +
             C24596 + C24596 + C153790 * C522 + C23994 * C497 + C24597 +
             C24597 + C153761 * C521) *
                C153513 * C23987 +
            (C23990 * C982 + C24598 + C24598 + C153809 * C994 + C23992 * C983 +
             C24599 + C24599 + C153790 * C995 + C23994 * C984 + C24600 +
             C24600 + C153761 * C996) *
                C153513 * C23988 +
            (C23990 * C1799 + C24601 + C24601 + C153809 * C1809 +
             C23992 * C1798 + C24602 + C24602 + C153790 * C1808 +
             C23994 * C1797 + C24603 + C24603 + C153761 * C1807) *
                C153513 * C153774) *
               C494 -
           (C24358 * C153774 + (C24346 + C24345 + C24344) * C153513 * C23988 +
            (C23994 * C147 + C24012 + C24012 + C153761 * C163 + C23992 * C146 +
             C24013 + C24013 + C153790 * C162 + C23990 * C145 + C24014 +
             C24014 + C153809 * C161) *
                C153513 * C23987) *
               C493 -
           ((C23994 * C3330 + C24604 + C24604 + C153761 * C3338 +
             C23992 * C3329 + C24605 + C24605 + C153790 * C3337 +
             C23990 * C3328 + C24606 + C24606 + C153809 * C3336) *
                C153513 * C153774 +
            (C23994 * C1366 + C24607 + C24607 + C153761 * C1376 +
             C23992 * C1367 + C24608 + C24608 + C153790 * C1377 +
             C23990 * C1368 + C24609 + C24609 + C153809 * C1378) *
                C153513 * C23988 +
            (C23994 * C504 + C24610 + C24610 + C153761 * C528 + C23992 * C503 +
             C24611 + C24611 + C153790 * C527 + C23990 * C502 + C24612 +
             C24612 + C153809 * C526) *
                C153513 * C23987) *
               C495) *
              C153397 * C153384)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         (((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153513 *
               C28229 +
           (C28234 * C319 + C28238 + C28238 + C153338 * C343) * C153513 *
               C28230 +
           (C28234 * C320 + C28239 + C28239 + C153338 * C344) * C153513 *
               C28231 +
           (C28234 * C1227 + C28240 + C28240 + C153338 * C1237) * C153513 *
               C28232 +
           (C28234 * C2989 + C28241 + C28241 + C153338 * C2997) * C153513 *
               C28233) *
              C153413 * C153397 * C130 -
          ((C28234 * C2990 + C28242 + C28242 + C153338 * C2998) * C153513 *
               C28233 +
           (C28234 * C1226 + C28243 + C28243 + C153338 * C1236) * C153513 *
               C28232 +
           (C28234 * C321 + C28244 + C28244 + C153338 * C345) * C153513 *
               C28231 +
           (C28234 * C318 + C28245 + C28245 + C153338 * C342) * C153513 *
               C28230 +
           (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C153513 *
               C28229) *
              C153413 * C153397 * C131 +
          ((C28234 * C146 + C28247 + C28247 + C153338 * C162) * C153513 *
               C28229 +
           (C28234 * C317 + C28248 + C28248 + C153338 * C341) * C153513 *
               C28230 +
           (C28234 * C322 + C28249 + C28249 + C153338 * C346) * C153513 *
               C28231 +
           (C28234 * C1225 + C28250 + C28250 + C153338 * C1235) * C153513 *
               C28232 +
           (C28234 * C2991 + C28251 + C28251 + C153338 * C2999) * C153513 *
               C28233) *
              C153413 * C153397 * C132 -
          ((C28234 * C2992 + C28252 + C28252 + C153338 * C3000) * C153513 *
               C28233 +
           (C28234 * C1224 + C28253 + C28253 + C153338 * C1234) * C153513 *
               C28232 +
           (C28234 * C323 + C28254 + C28254 + C153338 * C347) * C153513 *
               C28231 +
           (C28234 * C316 + C28255 + C28255 + C153338 * C340) * C153513 *
               C28230 +
           (C28234 * C147 + C28256 + C28256 + C153338 * C163) * C153513 *
               C28229) *
              C153413 * C153397 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         ((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153513 *
                C28229 +
            C28439 * C28230 + C28440 * C28231 + C28441 * C28232 +
            C28442 * C28233) *
               C153413 * C310 -
           (C28443 * C28233 + C28442 * C28232 + C28441 * C28231 +
            C28440 * C28230 + C28439 * C28229) *
               C153413 * C311 +
           (C28440 * C28229 + C28441 * C28230 + C28442 * C28231 +
            C28443 * C28232 +
            (C28234 * C28378 + C28396 + C28396 + C153338 * C28382) * C153513 *
                C28233) *
               C153413 * C312) *
              C313 +
          ((C28444 * C28229 + C28445 * C28230 + C28446 * C28231 +
            C28447 * C28232 + C28448 * C28233) *
               C153413 * C311 -
           (C28447 * C28233 + C28446 * C28232 + C28445 * C28231 +
            C28444 * C28230 +
            (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C153513 *
                C28229) *
               C153413 * C310 -
           ((C28234 * C28379 + C28408 + C28408 + C153338 * C28383) * C153513 *
                C28233 +
            C28448 * C28232 + C28447 * C28231 + C28446 * C28230 +
            C28445 * C28229) *
               C153413 * C312) *
              C153384)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153513 *
                C28229 +
            C28439 * C28230 + C28440 * C28231 + C28441 * C28232 +
            C28442 * C28233) *
               C493 -
           ((C28234 * C5603 + C28577 + C28577 + C153338 * C5609) * C153513 *
                C28233 +
            (C28234 * C4143 + C28578 + C28578 + C153338 * C4151) * C153513 *
                C28232 +
            (C28234 * C1800 + C28579 + C28579 + C153338 * C1810) * C153513 *
                C28231 +
            (C28234 * C981 + C28580 + C28580 + C153338 * C993) * C153513 *
                C28230 +
            (C28234 * C500 + C28581 + C28581 + C153338 * C524) * C153513 *
                C28229) *
               C494 +
           ((C28234 * C501 + C28582 + C28582 + C153338 * C525) * C153513 *
                C28229 +
            (C28234 * C1369 + C28583 + C28583 + C153338 * C1379) * C153513 *
                C28230 +
            (C28234 * C3327 + C28584 + C28584 + C153338 * C3335) * C153513 *
                C28231 +
            (C28234 * C4835 + C28585 + C28585 + C153338 * C4841) * C153513 *
                C28232 +
            (C28234 * C28570 + C28586 + C28586 + C153338 * C28574) * C153513 *
                C28233) *
               C495) *
              C153397 * C313 +
          (((C28234 * C499 + C28587 + C28587 + C153338 * C523) * C153513 *
                C28229 +
            (C28234 * C982 + C28588 + C28588 + C153338 * C994) * C153513 *
                C28230 +
            (C28234 * C1799 + C28589 + C28589 + C153338 * C1809) * C153513 *
                C28231 +
            (C28234 * C4144 + C28590 + C28590 + C153338 * C4152) * C153513 *
                C28232 +
            (C28234 * C5602 + C28591 + C28591 + C153338 * C5608) * C153513 *
                C28233) *
               C494 -
           (C28447 * C28233 + C28446 * C28232 + C28445 * C28231 +
            C28444 * C28230 +
            (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C153513 *
                C28229) *
               C493 -
           ((C28234 * C28571 + C28592 + C28592 + C153338 * C28575) * C153513 *
                C28233 +
            (C28234 * C4834 + C28593 + C28593 + C153338 * C4840) * C153513 *
                C28232 +
            (C28234 * C3328 + C28594 + C28594 + C153338 * C3336) * C153513 *
                C28231 +
            (C28234 * C1368 + C28595 + C28595 + C153338 * C1378) * C153513 *
                C28230 +
            (C28234 * C502 + C28596 + C28596 + C153338 * C526) * C153513 *
                C28229) *
               C495) *
              C153397 * C153384)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153813 +
            (C28234 * C500 + C28581 + C28581 + C153338 * C524) * C153802 +
            (C28234 * C501 + C28582 + C28582 + C153338 * C525) * C153777) *
               C23987 +
           (C28429 * C153813 + C29076 * C153802 + C29445 * C153777) * C23988 +
           (C28430 * C153813 + C29075 * C153802 + C29446 * C153777) * C153774) *
              C153413 * C153397 * C130 -
          (((C28234 * C3328 + C28594 + C28594 + C153338 * C3336) * C153777 +
            C29078 * C153802 + C28435 * C153813) *
               C153774 +
           ((C28234 * C1368 + C28595 + C28595 + C153338 * C1378) * C153777 +
            C29077 * C153802 + C28434 * C153813) *
               C23988 +
           ((C28234 * C502 + C28596 + C28596 + C153338 * C526) * C153777 +
            (C28234 * C499 + C28587 + C28587 + C153338 * C523) * C153802 +
            (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C153813) *
               C23987) *
              C153413 * C153397 * C131 +
          (((C28234 * C146 + C28247 + C28247 + C153338 * C162) * C153813 +
            (C28234 * C498 + C28870 + C28870 + C153338 * C522) * C153802 +
            (C28234 * C503 + C30758 + C30758 + C153338 * C527) * C153777) *
               C23987 +
           (C28736 * C153813 +
            (C28234 * C983 + C28869 + C28869 + C153338 * C995) * C153802 +
            (C28234 * C1367 + C30759 + C30759 + C153338 * C1377) * C153777) *
               C23988 +
           (C28737 * C153813 +
            (C28234 * C1798 + C28868 + C28868 + C153338 * C1808) * C153802 +
            (C28234 * C3329 + C30760 + C30760 + C153338 * C3337) * C153777) *
               C153774) *
              C153413 * C153397 * C132 -
          (((C28234 * C3330 + C30761 + C30761 + C153338 * C3338) * C153777 +
            (C28234 * C1797 + C30762 + C30762 + C153338 * C1807) * C153802 +
            (C28234 * C323 + C28254 + C28254 + C153338 * C347) * C153813) *
               C153774 +
           ((C28234 * C1366 + C30763 + C30763 + C153338 * C1376) * C153777 +
            (C28234 * C984 + C30764 + C30764 + C153338 * C996) * C153802 +
            (C28234 * C316 + C28255 + C28255 + C153338 * C340) * C153813) *
               C23988 +
           ((C28234 * C504 + C30765 + C30765 + C153338 * C528) * C153777 +
            (C28234 * C497 + C30766 + C30766 + C153338 * C521) * C153802 +
            (C28234 * C147 + C28256 + C28256 + C153338 * C163) * C153813) *
               C23987) *
              C153413 * C153397 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153813 +
             (C28234 * C500 + C28581 + C28581 + C153338 * C524) * C153802 +
             (C28234 * C501 + C28582 + C28582 + C153338 * C525) * C153777) *
                C23987 +
            (C30985 + C30986 + C30987) * C23988 + C31011 * C153774) *
               C153413 * C310 -
           ((C30991 + C30992 + C30993) * C153774 +
            (C30990 + C30989 + C30988) * C23988 +
            (C30987 + C30986 + C30985) * C23987) *
               C153413 * C311 +
           (C31011 * C23987 + (C30993 + C30992 + C30991) * C23988 +
            (C28432 * C153813 + C29073 * C153802 + C29448 * C153777) *
                C153774) *
               C153413 * C312) *
              C313 +
          (((C30994 + C30995 + C31018) * C23987 +
            (C30998 + C30999 + C31019) * C23988 +
            (C31002 + C31003 + C31020) * C153774) *
               C153413 * C311 -
           (C31021 * C153774 + (C31018 + C30995 + C30994) * C23988 +
            ((C28234 * C502 + C28596 + C28596 + C153338 * C526) * C153777 +
             (C28234 * C499 + C28587 + C28587 + C153338 * C523) * C153802 +
             (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C153813) *
                C23987) *
               C153413 * C310 -
           (((C28234 * C28571 + C28592 + C28592 + C153338 * C28575) * C153777 +
             C29080 * C153802 + C28437 * C153813) *
                C153774 +
            (C31020 + C31003 + C31002) * C23988 + C31021 * C23987) *
               C153413 * C312) *
              C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153813 +
             C31295 * C153802 + C31296 * C153777) *
                C23987 +
            (C30985 + C30986 + C30987) * C23988 + C31011 * C153774) *
               C493 -
           ((C31297 * C153777 + C29446 * C153802 + C29075 * C153813) * C153774 +
            (C31298 * C153777 + C29445 * C153802 + C29076 * C153813) * C23988 +
            (C31299 * C153777 + C31296 * C153802 + C31295 * C153813) * C23987) *
               C494 +
           ((C31296 * C153813 + C31299 * C153802 +
             (C28234 * C7560 + C31256 + C31256 + C153338 * C7568) * C153777) *
                C23987 +
            (C29445 * C153813 + C31298 * C153802 +
             (C28234 * C9042 + C31257 + C31257 + C153338 * C9048) * C153777) *
                C23988 +
            (C29446 * C153813 + C31297 * C153802 +
             (C28234 * C31239 + C31258 + C31258 + C153338 * C31243) * C153777) *
                C153774) *
               C495) *
              C153397 * C313 +
          (((C31300 * C153813 + C31301 * C153802 + C31302 * C153777) * C23987 +
            (C29077 * C153813 + C31015 * C153802 + C31303 * C153777) * C23988 +
            (C29078 * C153813 + C31016 * C153802 + C31304 * C153777) *
                C153774) *
               C494 -
           (C31021 * C153774 + (C31018 + C30995 + C30994) * C23988 +
            (C31301 * C153777 + C31300 * C153802 +
             (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C153813) *
                C23987) *
               C493 -
           (((C28234 * C31240 + C31272 + C31272 + C153338 * C31244) * C153777 +
             C31304 * C153802 + C31016 * C153813) *
                C153774 +
            ((C28234 * C9041 + C31273 + C31273 + C153338 * C9047) * C153777 +
             C31303 * C153802 + C31015 * C153813) *
                C23988 +
            ((C28234 * C7561 + C31274 + C31274 + C153338 * C7569) * C153777 +
             C31302 * C153802 + C31301 * C153813) *
                C23987) *
               C495) *
              C153397 * C153384)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
            C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 + C23999 +
            C153761 * C162) *
               C47673 +
           (C23990 * C500 + C24585 + C24585 + C153809 * C524 + C23992 * C499 +
            C24584 + C24584 + C153790 * C523 + C23994 * C498 + C24583 + C24583 +
            C153761 * C522) *
               C47674 +
           (C23990 * C501 + C24586 + C24586 + C153809 * C525 + C23992 * C502 +
            C24587 + C24587 + C153790 * C526 + C23994 * C503 + C24588 + C24588 +
            C153761 * C527) *
               C153777) *
              C153501 * C153413 * C153397 * C130 -
          ((C23994 * C504 + C24610 + C24610 + C153761 * C528 + C23992 * C503 +
            C24611 + C24611 + C153790 * C527 + C23990 * C502 + C24612 + C24612 +
            C153809 * C526) *
               C153777 +
           (C23994 * C497 + C24597 + C24597 + C153761 * C521 + C23992 * C498 +
            C24596 + C24596 + C153790 * C522 + C23990 * C499 + C24595 + C24595 +
            C153809 * C523) *
               C47674 +
           (C23994 * C147 + C24012 + C24012 + C153761 * C163 + C23992 * C146 +
            C24013 + C24013 + C153790 * C162 + C23990 * C145 + C24014 + C24014 +
            C153809 * C161) *
               C47673) *
              C153501 * C153413 * C153397 * C131 +
          ((C23990 * C146 + C24015 + C24015 + C153809 * C162 + C23992 * C147 +
            C24016 + C24016 + C153790 * C163 + C23994 * C148 + C24017 + C24017 +
            C153761 * C164) *
               C47673 +
           (C23990 * C498 + C25090 + C25090 + C153809 * C522 + C23992 * C497 +
            C25089 + C25089 + C153790 * C521 + C23994 * C496 + C25088 + C25088 +
            C153761 * C520) *
               C47674 +
           (C23990 * C503 + C47677 + C47677 + C153809 * C527 + C23992 * C504 +
            C47678 + C47678 + C153790 * C528 + C23994 * C505 + C47679 + C47679 +
            C153761 * C529) *
               C153777) *
              C153501 * C153413 * C153397 * C132 -
          ((C23994 * C507 + C47680 + C47680 + C153761 * C531 + C23992 * C505 +
            C47681 + C47681 + C153790 * C529 + C23990 * C504 + C47682 + C47682 +
            C153809 * C528) *
               C153777 +
           (C23994 * C506 + C47683 + C47683 + C153761 * C530 + C23992 * C496 +
            C47684 + C47684 + C153790 * C520 + C23990 * C497 + C47685 + C47685 +
            C153809 * C521) *
               C47674 +
           (C23994 * C149 + C24030 + C24030 + C153761 * C165 + C23992 * C148 +
            C24031 + C24031 + C153790 * C164 + C23990 * C147 + C24032 + C24032 +
            C153809 * C163) *
               C47673) *
              C153501 * C153413 * C153397 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
             C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 +
             C23999 + C153761 * C162) *
                C47673 +
            (C23990 * C500 + C24585 + C24585 + C153809 * C524 + C23992 * C499 +
             C24584 + C24584 + C153790 * C523 + C23994 * C498 + C24583 +
             C24583 + C153761 * C522) *
                C47674 +
            (C23990 * C501 + C24586 + C24586 + C153809 * C525 + C23992 * C502 +
             C24587 + C24587 + C153790 * C526 + C23994 * C503 + C24588 +
             C24588 + C153761 * C527) *
                C153777) *
               C153501 * C153413 * C310 -
           ((C26079 + C26078 + C26077) * C153777 +
            (C25438 + C25439 + C25440) * C47674 +
            (C24337 + C24336 + C24335) * C47673) *
               C153501 * C153413 * C311 +
           (C24355 * C47673 + (C25437 + C25436 + C25435) * C47674 +
            (C26080 + C26081 + C26082) * C153777) *
               C153501 * C153413 * C312) *
              C313 +
          (((C24344 + C24345 + C24346) * C47673 +
            (C25441 + C25442 + C25443) * C47674 +
            (C23990 * C1368 + C24609 + C24609 + C153809 * C1378 +
             C23992 * C1367 + C24608 + C24608 + C153790 * C1377 +
             C23994 * C1366 + C24607 + C24607 + C153761 * C1376) *
                C153777) *
               C153501 * C153413 * C311 -
           ((C23994 * C504 + C24610 + C24610 + C153761 * C528 + C23992 * C503 +
             C24611 + C24611 + C153790 * C527 + C23990 * C502 + C24612 +
             C24612 + C153809 * C526) *
                C153777 +
            (C23994 * C497 + C24597 + C24597 + C153761 * C521 + C23992 * C498 +
             C24596 + C24596 + C153790 * C522 + C23990 * C499 + C24595 +
             C24595 + C153809 * C523) *
                C47674 +
            (C23994 * C147 + C24012 + C24012 + C153761 * C163 + C23992 * C146 +
             C24013 + C24013 + C153790 * C162 + C23990 * C145 + C24014 +
             C24014 + C153809 * C161) *
                C47673) *
               C153501 * C153413 * C310 -
           ((C23994 * C3330 + C24604 + C24604 + C153761 * C3338 +
             C23992 * C3329 + C24605 + C24605 + C153790 * C3337 +
             C23990 * C3328 + C24606 + C24606 + C153809 * C3336) *
                C153777 +
            (C25446 + C25445 + C25444) * C47674 + C24356 * C47673) *
               C153501 * C153413 * C312) *
              C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
             C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 +
             C23999 + C153761 * C162) *
                C47673 +
            (C48203 + C48204 + C48205) * C47674 + C48223 * C153777) *
               C153501 * C493 -
           ((C48209 + C48210 + C48211) * C153777 +
            (C48208 + C48207 + C48206) * C47674 +
            (C48205 + C48204 + C48203) * C47673) *
               C153501 * C494 +
           (C48223 * C47673 + (C48211 + C48210 + C48209) * C47674 +
            (C23990 * C7560 + C48140 + C48140 + C153809 * C7568 +
             C23992 * C7561 + C48141 + C48141 + C153790 * C7569 +
             C23994 * C7562 + C48142 + C48142 + C153761 * C7570) *
                C153777) *
               C153501 * C495) *
              C153397 * C313 +
          (((C48212 + C48213 + C48214) * C47673 +
            (C48215 + C48216 + C48217) * C47674 +
            (C48218 + C48219 + C48220) * C153777) *
               C153501 * C494 -
           (C48224 * C153777 + (C48214 + C48213 + C48212) * C47674 +
            (C23994 * C147 + C24012 + C24012 + C153761 * C163 + C23992 * C146 +
             C24013 + C24013 + C153790 * C162 + C23990 * C145 + C24014 +
             C24014 + C153809 * C161) *
                C47673) *
               C153501 * C493 -
           ((C23994 * C7563 + C48164 + C48164 + C153761 * C7571 +
             C23992 * C7562 + C48165 + C48165 + C153790 * C7570 +
             C23990 * C7561 + C48166 + C48166 + C153809 * C7569) *
                C153777 +
            (C48220 + C48219 + C48218) * C47674 + C48224 * C47673) *
               C153501 * C495) *
              C153397 * C153384)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C47673 +
            C31295 * C47674 + C31296 * C153777) *
               C153812 +
           (C28429 * C47673 + C29076 * C47674 + C29445 * C153777) * C153800 +
           (C28430 * C47673 + C29075 * C47674 + C29446 * C153777) * C153774) *
              C153413 * C153397 * C130 -
          ((C31016 * C153777 + C29078 * C47674 + C28435 * C47673) * C153774 +
           (C31015 * C153777 + C29077 * C47674 + C28434 * C47673) * C153800 +
           (C31301 * C153777 + C31300 * C47674 +
            (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C47673) *
               C153812) *
              C153413 * C153397 * C131 +
          (((C28234 * C146 + C28247 + C28247 + C153338 * C162) * C47673 +
            C31779 * C47674 + C31780 * C153777) *
               C153812 +
           (C28736 * C47673 + C31542 * C47674 + C31543 * C153777) * C153800 +
           (C28737 * C47673 + C31544 * C47674 + C31545 * C153777) * C153774) *
              C153413 * C153397 * C132 -
          (((C28234 * C3330 + C30761 + C30761 + C153338 * C3338) * C153777 +
            (C28234 * C1797 + C30762 + C30762 + C153338 * C1807) * C47674 +
            (C28234 * C323 + C28254 + C28254 + C153338 * C347) * C47673) *
               C153774 +
           ((C28234 * C1366 + C30763 + C30763 + C153338 * C1376) * C153777 +
            (C28234 * C984 + C30764 + C30764 + C153338 * C996) * C47674 +
            (C28234 * C316 + C28255 + C28255 + C153338 * C340) * C47673) *
               C153800 +
           ((C28234 * C504 + C30765 + C30765 + C153338 * C528) * C153777 +
            (C28234 * C497 + C30766 + C30766 + C153338 * C521) * C47674 +
            (C28234 * C147 + C28256 + C28256 + C153338 * C163) * C47673) *
               C153812) *
              C153413 * C153397 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C47673 +
             C31295 * C47674 + C31296 * C153777) *
                C153812 +
            (C52025 + C52026 + C52027) * C153800 + C52045 * C153774) *
               C153413 * C310 -
           ((C52031 + C52032 + C52033) * C153774 +
            (C52030 + C52029 + C52028) * C153800 +
            (C52027 + C52026 + C52025) * C153812) *
               C153413 * C311 +
           (C52045 * C153812 + (C52033 + C52032 + C52031) * C153800 +
            (C28432 * C47673 + C29073 * C47674 + C29448 * C153777) * C153774) *
               C153413 * C312) *
              C313 +
          (((C52034 + C52035 + C52036) * C153812 +
            (C52037 + C52038 + C52039) * C153800 +
            (C52040 + C52041 + C52042) * C153774) *
               C153413 * C311 -
           (C52046 * C153774 + (C52036 + C52035 + C52034) * C153800 +
            (C31301 * C153777 + C31300 * C47674 +
             (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C47673) *
                C153812) *
               C153413 * C310 -
           (((C28234 * C28571 + C28592 + C28592 + C153338 * C28575) * C153777 +
             C29080 * C47674 + C28437 * C47673) *
                C153774 +
            (C52042 + C52041 + C52040) * C153800 + C52046 * C153812) *
               C153413 * C312) *
              C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C47673 +
             C31295 * C47674 + C31296 * C153777) *
                C153812 +
            (C52025 + C52026 + C52027) * C153800 + C52045 * C153774) *
               C493 -
           ((C31297 * C153777 + C29446 * C47674 + C29075 * C47673) * C153774 +
            (C31298 * C153777 + C29445 * C47674 + C29076 * C47673) * C153800 +
            (C31299 * C153777 + C31296 * C47674 + C31295 * C47673) * C153812) *
               C494 +
           ((C31296 * C47673 + C31299 * C47674 + C34025 * C153777) * C153812 +
            (C29445 * C47673 + C31298 * C47674 + C32694 * C153777) * C153800 +
            (C29446 * C47673 + C31297 * C47674 + C32695 * C153777) * C153774) *
               C495) *
              C153397 * C313 +
          (((C31300 * C47673 + C31301 * C47674 + C31302 * C153777) * C153812 +
            (C29077 * C47673 + C31015 * C47674 + C31303 * C153777) * C153800 +
            (C29078 * C47673 + C31016 * C47674 + C31304 * C153777) * C153774) *
               C494 -
           (C52046 * C153774 + (C52036 + C52035 + C52034) * C153800 +
            (C31301 * C153777 + C31300 * C47674 +
             (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C47673) *
                C153812) *
               C493 -
           (((C28234 * C31240 + C31272 + C31272 + C153338 * C31244) * C153777 +
             C31304 * C47674 + C31016 * C47673) *
                C153774 +
            ((C28234 * C9041 + C31273 + C31273 + C153338 * C9047) * C153777 +
             C31303 * C47674 + C31015 * C47673) *
                C153800 +
            ((C28234 * C7561 + C31274 + C31274 + C153338 * C7569) * C153777 +
             C31302 * C47674 + C31301 * C47673) *
                C153812) *
               C495) *
              C153397 * C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C55722 +
           C31295 * C55723 + C31296 * C55724 + C31299 * C55725 +
           C34025 * C55726) *
              C153501 * C153413 * C153397 * C130 -
          ((C28234 * C7561 + C31274 + C31274 + C153338 * C7569) * C55726 +
           C31302 * C55725 + C31301 * C55724 + C31300 * C55723 +
           (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C55722) *
              C153501 * C153413 * C153397 * C131 +
          ((C28234 * C146 + C28247 + C28247 + C153338 * C162) * C55722 +
           C31779 * C55723 + C31780 * C55724 +
           (C28234 * C2150 + C31774 + C31774 + C153338 * C2160) * C55725 +
           (C28234 * C7562 + C55728 + C55728 + C153338 * C7570) * C55726) *
              C153501 * C153413 * C153397 * C132 -
          ((C28234 * C7563 + C55729 + C55729 + C153338 * C7571) * C55726 +
           (C28234 * C2149 + C55730 + C55730 + C153338 * C2159) * C55725 +
           (C28234 * C504 + C30765 + C30765 + C153338 * C528) * C55724 +
           (C28234 * C497 + C30766 + C30766 + C153338 * C521) * C55723 +
           (C28234 * C147 + C28256 + C28256 + C153338 * C163) * C55722) *
              C153501 * C153413 * C153397 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C55722 +
            C31295 * C55723 + C31296 * C55724 + C31299 * C55725 +
            C34025 * C55726) *
               C153501 * C153413 * C310 -
           (C32694 * C55726 + C31298 * C55725 + C29445 * C55724 +
            C29076 * C55723 + C28429 * C55722) *
               C153501 * C153413 * C311 +
           (C28430 * C55722 + C29075 * C55723 + C29446 * C55724 +
            C31297 * C55725 + C32695 * C55726) *
               C153501 * C153413 * C312) *
              C313 +
          ((C28434 * C55722 + C29077 * C55723 + C31015 * C55724 +
            C31303 * C55725 +
            (C28234 * C9041 + C31273 + C31273 + C153338 * C9047) * C55726) *
               C153501 * C153413 * C311 -
           ((C28234 * C7561 + C31274 + C31274 + C153338 * C7569) * C55726 +
            C31302 * C55725 + C31301 * C55724 + C31300 * C55723 +
            (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C55722) *
               C153501 * C153413 * C310 -
           ((C28234 * C31240 + C31272 + C31272 + C153338 * C31244) * C55726 +
            C31304 * C55725 + C31016 * C55724 + C29078 * C55723 +
            C28435 * C55722) *
               C153501 * C153413 * C312) *
              C153384)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C55722 +
            C31295 * C55723 + C31296 * C55724 + C31299 * C55725 +
            C34025 * C55726) *
               C153501 * C493 -
           (C55996 * C55726 + C34025 * C55725 + C31299 * C55724 +
            C31296 * C55723 + C31295 * C55722) *
               C153501 * C494 +
           (C31296 * C55722 + C31299 * C55723 + C34025 * C55724 +
            C55996 * C55725 +
            (C28234 * C55974 + C55983 + C55983 + C153338 * C55978) * C55726) *
               C153501 * C495) *
              C153397 * C313 +
          ((C31300 * C55722 + C31301 * C55723 + C31302 * C55724 +
            C55997 * C55725 + C55998 * C55726) *
               C153501 * C494 -
           (C55997 * C55726 + C31302 * C55725 + C31301 * C55724 +
            C31300 * C55723 +
            (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C55722) *
               C153501 * C493 -
           ((C28234 * C55975 + C55989 + C55989 + C153338 * C55979) * C55726 +
            C55998 * C55725 + C55997 * C55724 + C31302 * C55723 +
            C31301 * C55722) *
               C153501 * C495) *
              C153397 * C153384)) /
            (p * q * std::sqrt(p + q));
    d2ee[183] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((C134 * C144 + C169 + C169 + C121 * C160 + C136 * C145 + C170 +
                C170 + C122 * C161 + C138 * C146 + C171 + C171 + C123 * C162 +
                C140 * C147 + C172 + C172 + C124 * C163 + C142 * C148 + C173 +
                C173 + C125 * C164) *
                   C153513 * C153501 * C153725 -
               (C142 * C496 + C533 + C533 + C125 * C520 + C140 * C497 + C534 +
                C534 + C124 * C521 + C138 * C498 + C535 + C535 + C123 * C522 +
                C136 * C499 + C536 + C536 + C122 * C523 + C134 * C500 + C537 +
                C537 + C121 * C524) *
                   C153513 * C153501 * C153477) *
                  C153397 * C153793 +
              ((C134 * C499 + C543 + C543 + C121 * C523 + C136 * C498 + C544 +
                C544 + C122 * C522 + C138 * C497 + C545 + C545 + C123 * C521 +
                C140 * C496 + C546 + C546 + C124 * C520 + C142 * C506 + C547 +
                C547 + C125 * C530) *
                   C153513 * C153501 * C153477 -
               (C142 * C149 + C174 + C174 + C125 * C165 + C140 * C148 + C175 +
                C175 + C124 * C164 + C138 * C147 + C176 + C176 + C123 * C163 +
                C136 * C146 + C177 + C177 + C122 * C162 + C134 * C145 + C178 +
                C178 + C121 * C161) *
                   C153513 * C153501 * C153725) *
                  C153397 * C153794 +
              ((C134 * C146 + C179 + C179 + C121 * C162 + C136 * C147 + C180 +
                C180 + C122 * C163 + C138 * C148 + C181 + C181 + C123 * C164 +
                C140 * C149 + C182 + C182 + C124 * C165 + C142 * C150 + C183 +
                C183 + C125 * C166) *
                   C153513 * C153501 * C153725 -
               (C142 * C811 + C815 + C815 + C125 * C813 + C140 * C506 + C816 +
                C816 + C124 * C530 + C138 * C496 + C817 + C817 + C123 * C520 +
                C136 * C497 + C818 + C818 + C122 * C521 + C134 * C498 + C819 +
                C819 + C121 * C522) *
                   C153513 * C153501 * C153477) *
                  C153397 * C678) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 +
                 C2737 + C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
                 C153761 * C162) *
                    C153513 * C153812 +
                (C3086 + C3087 + C3088) * C153513 * C153800 + C3108 * C153774) *
                   C153725 -
               ((C2733 * C1798 + C3340 + C3340 + C153761 * C1808 +
                 C2731 * C1799 + C3341 + C3341 + C2724 * C1809 + C2729 * C1800 +
                 C3342 + C3342 + C2723 * C1810) *
                    C153513 * C153774 +
                (C2733 * C983 + C3343 + C3343 + C153761 * C995 + C2731 * C982 +
                 C3344 + C3344 + C2724 * C994 + C2729 * C981 + C3345 + C3345 +
                 C2723 * C993) *
                    C153513 * C153800 +
                (C2733 * C498 + C3346 + C3346 + C153761 * C522 + C2731 * C499 +
                 C3347 + C3347 + C2724 * C523 + C2729 * C500 + C3348 + C3348 +
                 C2723 * C524) *
                    C153513 * C153812) *
                   C153477) *
                  C153397 * C153793 +
              (((C2729 * C499 + C3358 + C3358 + C2723 * C523 + C2731 * C498 +
                 C3359 + C3359 + C2724 * C522 + C2733 * C497 + C3360 + C3360 +
                 C153761 * C521) *
                    C153513 * C153812 +
                (C2729 * C982 + C3361 + C3361 + C2723 * C994 + C2731 * C983 +
                 C3362 + C3362 + C2724 * C995 + C2733 * C984 + C3363 + C3363 +
                 C153761 * C996) *
                    C153513 * C153800 +
                (C2729 * C1799 + C3364 + C3364 + C2723 * C1809 + C2731 * C1798 +
                 C3365 + C3365 + C2724 * C1808 + C2733 * C1797 + C3366 + C3366 +
                 C153761 * C1807) *
                    C153513 * C153774) *
                   C153477 -
               (C3109 * C153774 + (C3097 + C3096 + C3095) * C153513 * C153800 +
                (C2733 * C147 + C2751 + C2751 + C153761 * C163 + C2731 * C146 +
                 C2752 + C2752 + C2724 * C162 + C2729 * C145 + C2753 + C2753 +
                 C2723 * C161) *
                    C153513 * C153812) *
                   C153725) *
                  C153397 * C153794 +
              (((C2729 * C146 + C2754 + C2754 + C2723 * C162 + C2731 * C147 +
                 C2755 + C2755 + C2724 * C163 + C2733 * C148 + C2756 + C2756 +
                 C153761 * C164) *
                    C153513 * C153812 +
                (C3621 + C3622 + C3623) * C153513 * C153800 +
                (C3624 + C3625 + C3626) * C153513 * C153774) *
                   C153725 -
               ((C2733 * C1796 + C3845 + C3845 + C153761 * C1806 +
                 C2731 * C1797 + C3846 + C3846 + C2724 * C1807 + C2729 * C1798 +
                 C3847 + C3847 + C2723 * C1808) *
                    C153513 * C153774 +
                (C2733 * C985 + C3848 + C3848 + C153761 * C997 + C2731 * C984 +
                 C3849 + C3849 + C2724 * C996 + C2729 * C983 + C3850 + C3850 +
                 C2723 * C995) *
                    C153513 * C153800 +
                (C2733 * C496 + C3851 + C3851 + C153761 * C520 + C2731 * C497 +
                 C3852 + C3852 + C2724 * C521 + C2729 * C498 + C3853 + C3853 +
                 C2723 * C522) *
                    C153513 * C153812) *
                   C153477) *
                  C153397 * C678)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 +
             C2737 + C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
             C153761 * C162) *
                C153813 +
            (C7654 + C7655 + C7656) * C153802 + C7674 * C153777) *
               C153501 * C153725 -
           ((C7660 + C7661 + C7662) * C153777 +
            (C7659 + C7658 + C7657) * C153802 +
            (C7656 + C7655 + C7654) * C153813) *
               C153501 * C153477) *
              C153397 * C153793 +
          (((C7663 + C7664 + C7665) * C153813 +
            (C7666 + C7667 + C7668) * C153802 +
            (C7669 + C7670 + C7671) * C153777) *
               C153501 * C153477 -
           (C7675 * C153777 + (C7665 + C7664 + C7663) * C153802 +
            (C2733 * C147 + C2751 + C2751 + C153761 * C163 + C2731 * C146 +
             C2752 + C2752 + C2724 * C162 + C2729 * C145 + C2753 + C2753 +
             C2723 * C161) *
                C153813) *
               C153501 * C153725) *
              C153397 * C153794 +
          (((C2729 * C146 + C2754 + C2754 + C2723 * C162 + C2731 * C147 +
             C2755 + C2755 + C2724 * C163 + C2733 * C148 + C2756 + C2756 +
             C153761 * C164) *
                C153813 +
            (C8142 + C8143 + C8144) * C153802 +
            (C8145 + C8146 + C8147) * C153777) *
               C153501 * C153725 -
           ((C2733 * C2148 + C8127 + C8127 + C153761 * C2158 + C2731 * C2149 +
             C8128 + C8128 + C2724 * C2159 + C2729 * C2150 + C8129 + C8129 +
             C2723 * C2160) *
                C153777 +
            (C8147 + C8146 + C8145) * C153802 +
            (C8144 + C8143 + C8142) * C153813) *
               C153501 * C153477) *
              C153397 * C678)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
             C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 +
             C23999 + C153761 * C162) *
                C153513 * C23987 +
            (C24335 + C24336 + C24337) * C153513 * C23988 + C24357 * C153774) *
               C153725 -
           ((C23994 * C1798 + C24577 + C24577 + C153761 * C1808 +
             C23992 * C1799 + C24578 + C24578 + C153790 * C1809 +
             C23990 * C1800 + C24579 + C24579 + C153809 * C1810) *
                C153513 * C153774 +
            (C23994 * C983 + C24580 + C24580 + C153761 * C995 + C23992 * C982 +
             C24581 + C24581 + C153790 * C994 + C23990 * C981 + C24582 +
             C24582 + C153809 * C993) *
                C153513 * C23988 +
            (C23994 * C498 + C24583 + C24583 + C153761 * C522 + C23992 * C499 +
             C24584 + C24584 + C153790 * C523 + C23990 * C500 + C24585 +
             C24585 + C153809 * C524) *
                C153513 * C23987) *
               C153477) *
              C153397 * C153793 +
          (((C23990 * C499 + C24595 + C24595 + C153809 * C523 + C23992 * C498 +
             C24596 + C24596 + C153790 * C522 + C23994 * C497 + C24597 +
             C24597 + C153761 * C521) *
                C153513 * C23987 +
            (C23990 * C982 + C24598 + C24598 + C153809 * C994 + C23992 * C983 +
             C24599 + C24599 + C153790 * C995 + C23994 * C984 + C24600 +
             C24600 + C153761 * C996) *
                C153513 * C23988 +
            (C23990 * C1799 + C24601 + C24601 + C153809 * C1809 +
             C23992 * C1798 + C24602 + C24602 + C153790 * C1808 +
             C23994 * C1797 + C24603 + C24603 + C153761 * C1807) *
                C153513 * C153774) *
               C153477 -
           (C24358 * C153774 + (C24346 + C24345 + C24344) * C153513 * C23988 +
            (C23994 * C147 + C24012 + C24012 + C153761 * C163 + C23992 * C146 +
             C24013 + C24013 + C153790 * C162 + C23990 * C145 + C24014 +
             C24014 + C153809 * C161) *
                C153513 * C23987) *
               C153725) *
              C153397 * C153794 +
          (((C23990 * C146 + C24015 + C24015 + C153809 * C162 + C23992 * C147 +
             C24016 + C24016 + C153790 * C163 + C23994 * C148 + C24017 +
             C24017 + C153761 * C164) *
                C153513 * C23987 +
            (C24858 + C24859 + C24860) * C153513 * C23988 +
            (C24861 + C24862 + C24863) * C153513 * C153774) *
               C153725 -
           ((C23994 * C1796 + C25082 + C25082 + C153761 * C1806 +
             C23992 * C1797 + C25083 + C25083 + C153790 * C1807 +
             C23990 * C1798 + C25084 + C25084 + C153809 * C1808) *
                C153513 * C153774 +
            (C23994 * C985 + C25085 + C25085 + C153761 * C997 + C23992 * C984 +
             C25086 + C25086 + C153790 * C996 + C23990 * C983 + C25087 +
             C25087 + C153809 * C995) *
                C153513 * C23988 +
            (C23994 * C496 + C25088 + C25088 + C153761 * C520 + C23992 * C497 +
             C25089 + C25089 + C153790 * C521 + C23990 * C498 + C25090 +
             C25090 + C153809 * C522) *
                C153513 * C23987) *
               C153477) *
              C153397 * C678)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153513 *
                C28229 +
            C28439 * C28230 + C28440 * C28231 + C28441 * C28232 +
            C28442 * C28233) *
               C153725 -
           ((C28234 * C5603 + C28577 + C28577 + C153338 * C5609) * C153513 *
                C28233 +
            (C28234 * C4143 + C28578 + C28578 + C153338 * C4151) * C153513 *
                C28232 +
            (C28234 * C1800 + C28579 + C28579 + C153338 * C1810) * C153513 *
                C28231 +
            (C28234 * C981 + C28580 + C28580 + C153338 * C993) * C153513 *
                C28230 +
            (C28234 * C500 + C28581 + C28581 + C153338 * C524) * C153513 *
                C28229) *
               C153477) *
              C153397 * C153793 +
          (((C28234 * C499 + C28587 + C28587 + C153338 * C523) * C153513 *
                C28229 +
            (C28234 * C982 + C28588 + C28588 + C153338 * C994) * C153513 *
                C28230 +
            (C28234 * C1799 + C28589 + C28589 + C153338 * C1809) * C153513 *
                C28231 +
            (C28234 * C4144 + C28590 + C28590 + C153338 * C4152) * C153513 *
                C28232 +
            (C28234 * C5602 + C28591 + C28591 + C153338 * C5608) * C153513 *
                C28233) *
               C153477 -
           (C28447 * C28233 + C28446 * C28232 + C28445 * C28231 +
            C28444 * C28230 +
            (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C153513 *
                C28229) *
               C153725) *
              C153397 * C153794 +
          (((C28234 * C146 + C28247 + C28247 + C153338 * C162) * C153513 *
                C28229 +
            C28740 * C28230 + C28741 * C28231 + C28742 * C28232 +
            C28743 * C28233) *
               C153725 -
           ((C28234 * C5601 + C28866 + C28866 + C153338 * C5607) * C153513 *
                C28233 +
            (C28234 * C4145 + C28867 + C28867 + C153338 * C4153) * C153513 *
                C28232 +
            (C28234 * C1798 + C28868 + C28868 + C153338 * C1808) * C153513 *
                C28231 +
            (C28234 * C983 + C28869 + C28869 + C153338 * C995) * C153513 *
                C28230 +
            (C28234 * C498 + C28870 + C28870 + C153338 * C522) * C153513 *
                C28229) *
               C153477) *
              C153397 * C678)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153813 +
             C31295 * C153802 + C31296 * C153777) *
                C23987 +
            (C30985 + C30986 + C30987) * C23988 + C31011 * C153774) *
               C153725 -
           ((C31297 * C153777 + C29446 * C153802 + C29075 * C153813) * C153774 +
            (C31298 * C153777 + C29445 * C153802 + C29076 * C153813) * C23988 +
            (C31299 * C153777 + C31296 * C153802 + C31295 * C153813) * C23987) *
               C153477) *
              C153397 * C153793 +
          (((C31300 * C153813 + C31301 * C153802 + C31302 * C153777) * C23987 +
            (C29077 * C153813 + C31015 * C153802 + C31303 * C153777) * C23988 +
            (C29078 * C153813 + C31016 * C153802 + C31304 * C153777) *
                C153774) *
               C153477 -
           (C31021 * C153774 + (C31018 + C30995 + C30994) * C23988 +
            (C31301 * C153777 + C31300 * C153802 +
             (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C153813) *
                C23987) *
               C153725) *
              C153397 * C153794 +
          ((((C28234 * C146 + C28247 + C28247 + C153338 * C162) * C153813 +
             C31779 * C153802 + C31780 * C153777) *
                C23987 +
            (C31523 + C31546 + C31547) * C23988 +
            (C31528 + C31548 + C31549) * C153774) *
               C153725 -
           (((C28234 * C6213 + C31772 + C31772 + C153338 * C6225) * C153777 +
             C31545 * C153802 + C31544 * C153813) *
                C153774 +
            ((C28234 * C6216 + C31773 + C31773 + C153338 * C6228) * C153777 +
             C31543 * C153802 + C31542 * C153813) *
                C23988 +
            ((C28234 * C2150 + C31774 + C31774 + C153338 * C2160) * C153777 +
             C31780 * C153802 + C31779 * C153813) *
                C23987) *
               C153477) *
              C153397 * C678)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
             C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 +
             C23999 + C153761 * C162) *
                C47673 +
            (C48203 + C48204 + C48205) * C47674 + C48223 * C153777) *
               C153501 * C153725 -
           ((C48209 + C48210 + C48211) * C153777 +
            (C48208 + C48207 + C48206) * C47674 +
            (C48205 + C48204 + C48203) * C47673) *
               C153501 * C153477) *
              C153397 * C153793 +
          (((C48212 + C48213 + C48214) * C47673 +
            (C48215 + C48216 + C48217) * C47674 +
            (C48218 + C48219 + C48220) * C153777) *
               C153501 * C153477 -
           (C48224 * C153777 + (C48214 + C48213 + C48212) * C47674 +
            (C23994 * C147 + C24012 + C24012 + C153761 * C163 + C23992 * C146 +
             C24013 + C24013 + C153790 * C162 + C23990 * C145 + C24014 +
             C24014 + C153809 * C161) *
                C47673) *
               C153501 * C153725) *
              C153397 * C153794 +
          (((C23990 * C146 + C24015 + C24015 + C153809 * C162 + C23992 * C147 +
             C24016 + C24016 + C153790 * C163 + C23994 * C148 + C24017 +
             C24017 + C153761 * C164) *
                C47673 +
            (C48691 + C48692 + C48693) * C47674 +
            (C48694 + C48695 + C48696) * C153777) *
               C153501 * C153725 -
           ((C23994 * C2148 + C48676 + C48676 + C153761 * C2158 +
             C23992 * C2149 + C48677 + C48677 + C153790 * C2159 +
             C23990 * C2150 + C48678 + C48678 + C153809 * C2160) *
                C153777 +
            (C48696 + C48695 + C48694) * C47674 +
            (C48693 + C48692 + C48691) * C47673) *
               C153501 * C153477) *
              C153397 * C678)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C47673 +
             C31295 * C47674 + C31296 * C153777) *
                C153812 +
            (C52025 + C52026 + C52027) * C153800 + C52045 * C153774) *
               C153725 -
           ((C31297 * C153777 + C29446 * C47674 + C29075 * C47673) * C153774 +
            (C31298 * C153777 + C29445 * C47674 + C29076 * C47673) * C153800 +
            (C31299 * C153777 + C31296 * C47674 + C31295 * C47673) * C153812) *
               C153477) *
              C153397 * C153793 +
          (((C31300 * C47673 + C31301 * C47674 + C31302 * C153777) * C153812 +
            (C29077 * C47673 + C31015 * C47674 + C31303 * C153777) * C153800 +
            (C29078 * C47673 + C31016 * C47674 + C31304 * C153777) * C153774) *
               C153477 -
           (C52046 * C153774 + (C52036 + C52035 + C52034) * C153800 +
            (C31301 * C153777 + C31300 * C47674 +
             (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C47673) *
                C153812) *
               C153725) *
              C153397 * C153794 +
          ((((C28234 * C146 + C28247 + C28247 + C153338 * C162) * C47673 +
             C31779 * C47674 + C31780 * C153777) *
                C153812 +
            (C52483 + C52484 + C52485) * C153800 +
            (C52486 + C52487 + C52488) * C153774) *
               C153725 -
           (((C28234 * C6213 + C31772 + C31772 + C153338 * C6225) * C153777 +
             C31545 * C47674 + C31544 * C47673) *
                C153774 +
            ((C28234 * C6216 + C31773 + C31773 + C153338 * C6228) * C153777 +
             C31543 * C47674 + C31542 * C47673) *
                C153800 +
            ((C28234 * C2150 + C31774 + C31774 + C153338 * C2160) * C153777 +
             C31780 * C47674 + C31779 * C47673) *
                C153812) *
               C153477) *
              C153397 * C678)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C55722 +
            C31295 * C55723 + C31296 * C55724 + C31299 * C55725 +
            C34025 * C55726) *
               C153501 * C153725 -
           (C55996 * C55726 + C34025 * C55725 + C31299 * C55724 +
            C31296 * C55723 + C31295 * C55722) *
               C153501 * C153477) *
              C153397 * C153793 +
          ((C31300 * C55722 + C31301 * C55723 + C31302 * C55724 +
            C55997 * C55725 + C55998 * C55726) *
               C153501 * C153477 -
           (C55997 * C55726 + C31302 * C55725 + C31301 * C55724 +
            C31300 * C55723 +
            (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C55722) *
               C153501 * C153725) *
              C153397 * C153794 +
          (((C28234 * C146 + C28247 + C28247 + C153338 * C162) * C55722 +
            C31779 * C55723 + C31780 * C55724 + C56253 * C55725 +
            C56254 * C55726) *
               C153501 * C153725 -
           ((C28234 * C10377 + C56248 + C56248 + C153338 * C10383) * C55726 +
            C56254 * C55725 + C56253 * C55724 + C31780 * C55723 +
            C31779 * C55722) *
               C153501 * C153477) *
              C153397 * C678)) /
            (p * q * std::sqrt(p + q));
    d2ee[184] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((C134 * C144 + C169 + C169 + C121 * C160 + C136 * C145 + C170 + C170 +
           C122 * C161 + C138 * C146 + C171 + C171 + C123 * C162 + C140 * C147 +
           C172 + C172 + C124 * C163 + C142 * C148 + C173 + C173 +
           C125 * C164) *
              C153513 * C153501 * C153413 * C153397 * C130 -
          (C142 * C149 + C174 + C174 + C125 * C165 + C140 * C148 + C175 + C175 +
           C124 * C164 + C138 * C147 + C176 + C176 + C123 * C163 + C136 * C146 +
           C177 + C177 + C122 * C162 + C134 * C145 + C178 + C178 +
           C121 * C161) *
              C153513 * C153501 * C153413 * C153397 * C131 +
          (C134 * C146 + C179 + C179 + C121 * C162 + C136 * C147 + C180 + C180 +
           C122 * C163 + C138 * C148 + C181 + C181 + C123 * C164 + C140 * C149 +
           C182 + C182 + C124 * C165 + C142 * C150 + C183 + C183 +
           C125 * C166) *
              C153513 * C153501 * C153413 * C153397 * C132 -
          (C142 * C151 + C184 + C184 + C125 * C167 + C140 * C150 + C185 + C185 +
           C124 * C166 + C138 * C149 + C186 + C186 + C123 * C165 + C136 * C148 +
           C187 + C187 + C122 * C164 + C134 * C147 + C188 + C188 +
           C121 * C163) *
              C153513 * C153501 * C153413 * C153397 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C144 + C169 + C169 + C121 * C160 + C136 * C145 + C170 +
            C170 + C122 * C161 + C138 * C146 + C171 + C171 + C123 * C162 +
            C140 * C147 + C172 + C172 + C124 * C163 + C142 * C148 + C173 +
            C173 + C125 * C164) *
               C153513 * C153501 * C153413 * C310 -
           (C142 * C315 + C352 + C352 + C125 * C339 + C140 * C316 + C353 +
            C353 + C124 * C340 + C138 * C317 + C354 + C354 + C123 * C341 +
            C136 * C318 + C355 + C355 + C122 * C342 + C134 * C319 + C356 +
            C356 + C121 * C343) *
               C153513 * C153501 * C153413 * C311 +
           (C134 * C320 + C357 + C357 + C121 * C344 + C136 * C321 + C358 +
            C358 + C122 * C345 + C138 * C322 + C359 + C359 + C123 * C346 +
            C140 * C323 + C360 + C360 + C124 * C347 + C142 * C324 + C361 +
            C361 + C125 * C348) *
               C153513 * C153501 * C153413 * C312) *
              C313 +
          ((C134 * C318 + C362 + C362 + C121 * C342 + C136 * C317 + C363 +
            C363 + C122 * C341 + C138 * C316 + C364 + C364 + C123 * C340 +
            C140 * C315 + C365 + C365 + C124 * C339 + C142 * C325 + C366 +
            C366 + C125 * C349) *
               C153513 * C153501 * C153413 * C311 -
           (C142 * C149 + C174 + C174 + C125 * C165 + C140 * C148 + C175 +
            C175 + C124 * C164 + C138 * C147 + C176 + C176 + C123 * C163 +
            C136 * C146 + C177 + C177 + C122 * C162 + C134 * C145 + C178 +
            C178 + C121 * C161) *
               C153513 * C153501 * C153413 * C310 -
           (C142 * C326 + C367 + C367 + C125 * C350 + C140 * C324 + C368 +
            C368 + C124 * C348 + C138 * C323 + C369 + C369 + C123 * C347 +
            C136 * C322 + C370 + C370 + C122 * C346 + C134 * C321 + C371 +
            C371 + C121 * C345) *
               C153513 * C153501 * C153413 * C312) *
              C153384)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 + C2737 +
            C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
            C153761 * C162) *
               C153513 * C153812 +
           (C2729 * C319 + C2739 + C2739 + C2723 * C343 + C2731 * C318 + C2740 +
            C2740 + C2724 * C342 + C2733 * C317 + C2741 + C2741 +
            C153761 * C341) *
               C153513 * C153800 +
           (C2729 * C320 + C2742 + C2742 + C2723 * C344 + C2731 * C321 + C2743 +
            C2743 + C2724 * C345 + C2733 * C322 + C2744 + C2744 +
            C153761 * C346) *
               C153513 * C153774) *
              C153413 * C153397 * C130 -
          ((C2733 * C323 + C2745 + C2745 + C153761 * C347 + C2731 * C322 +
            C2746 + C2746 + C2724 * C346 + C2729 * C321 + C2747 + C2747 +
            C2723 * C345) *
               C153513 * C153774 +
           (C2733 * C316 + C2748 + C2748 + C153761 * C340 + C2731 * C317 +
            C2749 + C2749 + C2724 * C341 + C2729 * C318 + C2750 + C2750 +
            C2723 * C342) *
               C153513 * C153800 +
           (C2733 * C147 + C2751 + C2751 + C153761 * C163 + C2731 * C146 +
            C2752 + C2752 + C2724 * C162 + C2729 * C145 + C2753 + C2753 +
            C2723 * C161) *
               C153513 * C153812) *
              C153413 * C153397 * C131 +
          ((C2729 * C146 + C2754 + C2754 + C2723 * C162 + C2731 * C147 + C2755 +
            C2755 + C2724 * C163 + C2733 * C148 + C2756 + C2756 +
            C153761 * C164) *
               C153513 * C153812 +
           (C2729 * C317 + C2757 + C2757 + C2723 * C341 + C2731 * C316 + C2758 +
            C2758 + C2724 * C340 + C2733 * C315 + C2759 + C2759 +
            C153761 * C339) *
               C153513 * C153800 +
           (C2729 * C322 + C2760 + C2760 + C2723 * C346 + C2731 * C323 + C2761 +
            C2761 + C2724 * C347 + C2733 * C324 + C2762 + C2762 +
            C153761 * C348) *
               C153513 * C153774) *
              C153413 * C153397 * C132 -
          ((C2733 * C326 + C2763 + C2763 + C153761 * C350 + C2731 * C324 +
            C2764 + C2764 + C2724 * C348 + C2729 * C323 + C2765 + C2765 +
            C2723 * C347) *
               C153513 * C153774 +
           (C2733 * C325 + C2766 + C2766 + C153761 * C349 + C2731 * C315 +
            C2767 + C2767 + C2724 * C339 + C2729 * C316 + C2768 + C2768 +
            C2723 * C340) *
               C153513 * C153800 +
           (C2733 * C149 + C2769 + C2769 + C153761 * C165 + C2731 * C148 +
            C2770 + C2770 + C2724 * C164 + C2729 * C147 + C2771 + C2771 +
            C2723 * C163) *
               C153513 * C153812) *
              C153413 * C153397 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 +
             C2737 + C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
             C153761 * C162) *
                C153513 * C153812 +
            (C3086 + C3087 + C3088) * C153513 * C153800 + C3108 * C153774) *
               C153413 * C310 -
           ((C3092 + C3093 + C3094) * C153513 * C153774 +
            (C3091 + C3090 + C3089) * C153513 * C153800 +
            (C3088 + C3087 + C3086) * C153513 * C153812) *
               C153413 * C311 +
           (C3108 * C153812 + (C3094 + C3093 + C3092) * C153513 * C153800 +
            (C2729 * C2989 + C3023 + C3023 + C2723 * C2997 + C2731 * C2990 +
             C3024 + C3024 + C2724 * C2998 + C2733 * C2991 + C3025 + C3025 +
             C153761 * C2999) *
                C153513 * C153774) *
               C153413 * C312) *
              C313 +
          (((C3095 + C3096 + C3097) * C153513 * C153812 +
            (C3098 + C3099 + C3100) * C153513 * C153800 +
            (C3101 + C3102 + C3103) * C153513 * C153774) *
               C153413 * C311 -
           (C3109 * C153774 + (C3097 + C3096 + C3095) * C153513 * C153800 +
            (C2733 * C147 + C2751 + C2751 + C153761 * C163 + C2731 * C146 +
             C2752 + C2752 + C2724 * C162 + C2729 * C145 + C2753 + C2753 +
             C2723 * C161) *
                C153513 * C153812) *
               C153413 * C310 -
           ((C2733 * C2992 + C3047 + C3047 + C153761 * C3000 + C2731 * C2991 +
             C3048 + C3048 + C2724 * C2999 + C2729 * C2990 + C3049 + C3049 +
             C2723 * C2998) *
                C153513 * C153774 +
            (C3103 + C3102 + C3101) * C153513 * C153800 + C3109 * C153812) *
               C153413 * C312) *
              C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 + C2737 +
            C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
            C153761 * C162) *
               C153813 +
           (C2729 * C500 + C3348 + C3348 + C2723 * C524 + C2731 * C499 + C3347 +
            C3347 + C2724 * C523 + C2733 * C498 + C3346 + C3346 +
            C153761 * C522) *
               C153802 +
           (C2729 * C501 + C3349 + C3349 + C2723 * C525 + C2731 * C502 + C3350 +
            C3350 + C2724 * C526 + C2733 * C503 + C3351 + C3351 +
            C153761 * C527) *
               C153777) *
              C153501 * C153413 * C153397 * C130 -
          ((C2733 * C504 + C3373 + C3373 + C153761 * C528 + C2731 * C503 +
            C3374 + C3374 + C2724 * C527 + C2729 * C502 + C3375 + C3375 +
            C2723 * C526) *
               C153777 +
           (C2733 * C497 + C3360 + C3360 + C153761 * C521 + C2731 * C498 +
            C3359 + C3359 + C2724 * C522 + C2729 * C499 + C3358 + C3358 +
            C2723 * C523) *
               C153802 +
           (C2733 * C147 + C2751 + C2751 + C153761 * C163 + C2731 * C146 +
            C2752 + C2752 + C2724 * C162 + C2729 * C145 + C2753 + C2753 +
            C2723 * C161) *
               C153813) *
              C153501 * C153413 * C153397 * C131 +
          ((C2729 * C146 + C2754 + C2754 + C2723 * C162 + C2731 * C147 + C2755 +
            C2755 + C2724 * C163 + C2733 * C148 + C2756 + C2756 +
            C153761 * C164) *
               C153813 +
           (C2729 * C498 + C3853 + C3853 + C2723 * C522 + C2731 * C497 + C3852 +
            C3852 + C2724 * C521 + C2733 * C496 + C3851 + C3851 +
            C153761 * C520) *
               C153802 +
           (C2729 * C503 + C7116 + C7116 + C2723 * C527 + C2731 * C504 + C7117 +
            C7117 + C2724 * C528 + C2733 * C505 + C7118 + C7118 +
            C153761 * C529) *
               C153777) *
              C153501 * C153413 * C153397 * C132 -
          ((C2733 * C507 + C7119 + C7119 + C153761 * C531 + C2731 * C505 +
            C7120 + C7120 + C2724 * C529 + C2729 * C504 + C7121 + C7121 +
            C2723 * C528) *
               C153777 +
           (C2733 * C506 + C7122 + C7122 + C153761 * C530 + C2731 * C496 +
            C7123 + C7123 + C2724 * C520 + C2729 * C497 + C7124 + C7124 +
            C2723 * C521) *
               C153802 +
           (C2733 * C149 + C2769 + C2769 + C153761 * C165 + C2731 * C148 +
            C2770 + C2770 + C2724 * C164 + C2729 * C147 + C2771 + C2771 +
            C2723 * C163) *
               C153813) *
              C153501 * C153413 * C153397 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 +
             C2737 + C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
             C153761 * C162) *
                C153813 +
            (C2729 * C500 + C3348 + C3348 + C2723 * C524 + C2731 * C499 +
             C3347 + C3347 + C2724 * C523 + C2733 * C498 + C3346 + C3346 +
             C153761 * C522) *
                C153802 +
            (C2729 * C501 + C3349 + C3349 + C2723 * C525 + C2731 * C502 +
             C3350 + C3350 + C2724 * C526 + C2733 * C503 + C3351 + C3351 +
             C153761 * C527) *
                C153777) *
               C153501 * C153413 * C310 -
           ((C4872 + C4871 + C4870) * C153777 +
            (C4213 + C4214 + C4215) * C153802 +
            (C3088 + C3087 + C3086) * C153813) *
               C153501 * C153413 * C311 +
           (C3106 * C153813 + (C4212 + C4211 + C4210) * C153802 +
            (C4873 + C4874 + C4875) * C153777) *
               C153501 * C153413 * C312) *
              C313 +
          (((C3095 + C3096 + C3097) * C153813 +
            (C4216 + C4217 + C4218) * C153802 +
            (C2729 * C1368 + C3372 + C3372 + C2723 * C1378 + C2731 * C1367 +
             C3371 + C3371 + C2724 * C1377 + C2733 * C1366 + C3370 + C3370 +
             C153761 * C1376) *
                C153777) *
               C153501 * C153413 * C311 -
           ((C2733 * C504 + C3373 + C3373 + C153761 * C528 + C2731 * C503 +
             C3374 + C3374 + C2724 * C527 + C2729 * C502 + C3375 + C3375 +
             C2723 * C526) *
                C153777 +
            (C2733 * C497 + C3360 + C3360 + C153761 * C521 + C2731 * C498 +
             C3359 + C3359 + C2724 * C522 + C2729 * C499 + C3358 + C3358 +
             C2723 * C523) *
                C153802 +
            (C2733 * C147 + C2751 + C2751 + C153761 * C163 + C2731 * C146 +
             C2752 + C2752 + C2724 * C162 + C2729 * C145 + C2753 + C2753 +
             C2723 * C161) *
                C153813) *
               C153501 * C153413 * C310 -
           ((C2733 * C3330 + C3367 + C3367 + C153761 * C3338 + C2731 * C3329 +
             C3368 + C3368 + C2724 * C3337 + C2729 * C3328 + C3369 + C3369 +
             C2723 * C3336) *
                C153777 +
            (C4221 + C4220 + C4219) * C153802 + C3107 * C153813) *
               C153501 * C153413 * C312) *
              C153384)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
            C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 + C23999 +
            C153761 * C162) *
               C153513 * C23987 +
           (C23990 * C319 + C24000 + C24000 + C153809 * C343 + C23992 * C318 +
            C24001 + C24001 + C153790 * C342 + C23994 * C317 + C24002 + C24002 +
            C153761 * C341) *
               C153513 * C23988 +
           (C23990 * C320 + C24003 + C24003 + C153809 * C344 + C23992 * C321 +
            C24004 + C24004 + C153790 * C345 + C23994 * C322 + C24005 + C24005 +
            C153761 * C346) *
               C153513 * C153774) *
              C153413 * C153397 * C130 -
          ((C23994 * C323 + C24006 + C24006 + C153761 * C347 + C23992 * C322 +
            C24007 + C24007 + C153790 * C346 + C23990 * C321 + C24008 + C24008 +
            C153809 * C345) *
               C153513 * C153774 +
           (C23994 * C316 + C24009 + C24009 + C153761 * C340 + C23992 * C317 +
            C24010 + C24010 + C153790 * C341 + C23990 * C318 + C24011 + C24011 +
            C153809 * C342) *
               C153513 * C23988 +
           (C23994 * C147 + C24012 + C24012 + C153761 * C163 + C23992 * C146 +
            C24013 + C24013 + C153790 * C162 + C23990 * C145 + C24014 + C24014 +
            C153809 * C161) *
               C153513 * C23987) *
              C153413 * C153397 * C131 +
          ((C23990 * C146 + C24015 + C24015 + C153809 * C162 + C23992 * C147 +
            C24016 + C24016 + C153790 * C163 + C23994 * C148 + C24017 + C24017 +
            C153761 * C164) *
               C153513 * C23987 +
           (C23990 * C317 + C24018 + C24018 + C153809 * C341 + C23992 * C316 +
            C24019 + C24019 + C153790 * C340 + C23994 * C315 + C24020 + C24020 +
            C153761 * C339) *
               C153513 * C23988 +
           (C23990 * C322 + C24021 + C24021 + C153809 * C346 + C23992 * C323 +
            C24022 + C24022 + C153790 * C347 + C23994 * C324 + C24023 + C24023 +
            C153761 * C348) *
               C153513 * C153774) *
              C153413 * C153397 * C132 -
          ((C23994 * C326 + C24024 + C24024 + C153761 * C350 + C23992 * C324 +
            C24025 + C24025 + C153790 * C348 + C23990 * C323 + C24026 + C24026 +
            C153809 * C347) *
               C153513 * C153774 +
           (C23994 * C325 + C24027 + C24027 + C153761 * C349 + C23992 * C315 +
            C24028 + C24028 + C153790 * C339 + C23990 * C316 + C24029 + C24029 +
            C153809 * C340) *
               C153513 * C23988 +
           (C23994 * C149 + C24030 + C24030 + C153761 * C165 + C23992 * C148 +
            C24031 + C24031 + C153790 * C164 + C23990 * C147 + C24032 + C24032 +
            C153809 * C163) *
               C153513 * C23987) *
              C153413 * C153397 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
             C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 +
             C23999 + C153761 * C162) *
                C153513 * C23987 +
            (C24335 + C24336 + C24337) * C153513 * C23988 + C24357 * C153774) *
               C153413 * C310 -
           ((C24341 + C24342 + C24343) * C153513 * C153774 +
            (C24340 + C24339 + C24338) * C153513 * C23988 +
            (C24337 + C24336 + C24335) * C153513 * C23987) *
               C153413 * C311 +
           (C24357 * C23987 + (C24343 + C24342 + C24341) * C153513 * C23988 +
            (C23990 * C2989 + C24272 + C24272 + C153809 * C2997 +
             C23992 * C2990 + C24273 + C24273 + C153790 * C2998 +
             C23994 * C2991 + C24274 + C24274 + C153761 * C2999) *
                C153513 * C153774) *
               C153413 * C312) *
              C313 +
          (((C24344 + C24345 + C24346) * C153513 * C23987 +
            (C24347 + C24348 + C24349) * C153513 * C23988 +
            (C24350 + C24351 + C24352) * C153513 * C153774) *
               C153413 * C311 -
           (C24358 * C153774 + (C24346 + C24345 + C24344) * C153513 * C23988 +
            (C23994 * C147 + C24012 + C24012 + C153761 * C163 + C23992 * C146 +
             C24013 + C24013 + C153790 * C162 + C23990 * C145 + C24014 +
             C24014 + C153809 * C161) *
                C153513 * C23987) *
               C153413 * C310 -
           ((C23994 * C2992 + C24296 + C24296 + C153761 * C3000 +
             C23992 * C2991 + C24297 + C24297 + C153790 * C2999 +
             C23990 * C2990 + C24298 + C24298 + C153809 * C2998) *
                C153513 * C153774 +
            (C24352 + C24351 + C24350) * C153513 * C23988 + C24358 * C23987) *
               C153413 * C312) *
              C153384)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153513 *
               C28229 +
           (C28234 * C319 + C28238 + C28238 + C153338 * C343) * C153513 *
               C28230 +
           (C28234 * C320 + C28239 + C28239 + C153338 * C344) * C153513 *
               C28231 +
           (C28234 * C1227 + C28240 + C28240 + C153338 * C1237) * C153513 *
               C28232 +
           (C28234 * C2989 + C28241 + C28241 + C153338 * C2997) * C153513 *
               C28233) *
              C153413 * C153397 * C130 -
          ((C28234 * C2990 + C28242 + C28242 + C153338 * C2998) * C153513 *
               C28233 +
           (C28234 * C1226 + C28243 + C28243 + C153338 * C1236) * C153513 *
               C28232 +
           (C28234 * C321 + C28244 + C28244 + C153338 * C345) * C153513 *
               C28231 +
           (C28234 * C318 + C28245 + C28245 + C153338 * C342) * C153513 *
               C28230 +
           (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C153513 *
               C28229) *
              C153413 * C153397 * C131 +
          ((C28234 * C146 + C28247 + C28247 + C153338 * C162) * C153513 *
               C28229 +
           (C28234 * C317 + C28248 + C28248 + C153338 * C341) * C153513 *
               C28230 +
           (C28234 * C322 + C28249 + C28249 + C153338 * C346) * C153513 *
               C28231 +
           (C28234 * C1225 + C28250 + C28250 + C153338 * C1235) * C153513 *
               C28232 +
           (C28234 * C2991 + C28251 + C28251 + C153338 * C2999) * C153513 *
               C28233) *
              C153413 * C153397 * C132 -
          ((C28234 * C2992 + C28252 + C28252 + C153338 * C3000) * C153513 *
               C28233 +
           (C28234 * C1224 + C28253 + C28253 + C153338 * C1234) * C153513 *
               C28232 +
           (C28234 * C323 + C28254 + C28254 + C153338 * C347) * C153513 *
               C28231 +
           (C28234 * C316 + C28255 + C28255 + C153338 * C340) * C153513 *
               C28230 +
           (C28234 * C147 + C28256 + C28256 + C153338 * C163) * C153513 *
               C28229) *
              C153413 * C153397 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153513 *
                C28229 +
            C28439 * C28230 + C28440 * C28231 + C28441 * C28232 +
            C28442 * C28233) *
               C153413 * C310 -
           (C28443 * C28233 + C28442 * C28232 + C28441 * C28231 +
            C28440 * C28230 + C28439 * C28229) *
               C153413 * C311 +
           (C28440 * C28229 + C28441 * C28230 + C28442 * C28231 +
            C28443 * C28232 +
            (C28234 * C28378 + C28396 + C28396 + C153338 * C28382) * C153513 *
                C28233) *
               C153413 * C312) *
              C313 +
          ((C28444 * C28229 + C28445 * C28230 + C28446 * C28231 +
            C28447 * C28232 + C28448 * C28233) *
               C153413 * C311 -
           (C28447 * C28233 + C28446 * C28232 + C28445 * C28231 +
            C28444 * C28230 +
            (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C153513 *
                C28229) *
               C153413 * C310 -
           ((C28234 * C28379 + C28408 + C28408 + C153338 * C28383) * C153513 *
                C28233 +
            C28448 * C28232 + C28447 * C28231 + C28446 * C28230 +
            C28445 * C28229) *
               C153413 * C312) *
              C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153813 +
            (C28234 * C500 + C28581 + C28581 + C153338 * C524) * C153802 +
            (C28234 * C501 + C28582 + C28582 + C153338 * C525) * C153777) *
               C23987 +
           (C28429 * C153813 + C29076 * C153802 + C29445 * C153777) * C23988 +
           (C28430 * C153813 + C29075 * C153802 + C29446 * C153777) * C153774) *
              C153413 * C153397 * C130 -
          (((C28234 * C3328 + C28594 + C28594 + C153338 * C3336) * C153777 +
            C29078 * C153802 + C28435 * C153813) *
               C153774 +
           ((C28234 * C1368 + C28595 + C28595 + C153338 * C1378) * C153777 +
            C29077 * C153802 + C28434 * C153813) *
               C23988 +
           ((C28234 * C502 + C28596 + C28596 + C153338 * C526) * C153777 +
            (C28234 * C499 + C28587 + C28587 + C153338 * C523) * C153802 +
            (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C153813) *
               C23987) *
              C153413 * C153397 * C131 +
          (((C28234 * C146 + C28247 + C28247 + C153338 * C162) * C153813 +
            (C28234 * C498 + C28870 + C28870 + C153338 * C522) * C153802 +
            (C28234 * C503 + C30758 + C30758 + C153338 * C527) * C153777) *
               C23987 +
           (C28736 * C153813 +
            (C28234 * C983 + C28869 + C28869 + C153338 * C995) * C153802 +
            (C28234 * C1367 + C30759 + C30759 + C153338 * C1377) * C153777) *
               C23988 +
           (C28737 * C153813 +
            (C28234 * C1798 + C28868 + C28868 + C153338 * C1808) * C153802 +
            (C28234 * C3329 + C30760 + C30760 + C153338 * C3337) * C153777) *
               C153774) *
              C153413 * C153397 * C132 -
          (((C28234 * C3330 + C30761 + C30761 + C153338 * C3338) * C153777 +
            (C28234 * C1797 + C30762 + C30762 + C153338 * C1807) * C153802 +
            (C28234 * C323 + C28254 + C28254 + C153338 * C347) * C153813) *
               C153774 +
           ((C28234 * C1366 + C30763 + C30763 + C153338 * C1376) * C153777 +
            (C28234 * C984 + C30764 + C30764 + C153338 * C996) * C153802 +
            (C28234 * C316 + C28255 + C28255 + C153338 * C340) * C153813) *
               C23988 +
           ((C28234 * C504 + C30765 + C30765 + C153338 * C528) * C153777 +
            (C28234 * C497 + C30766 + C30766 + C153338 * C521) * C153802 +
            (C28234 * C147 + C28256 + C28256 + C153338 * C163) * C153813) *
               C23987) *
              C153413 * C153397 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153813 +
             (C28234 * C500 + C28581 + C28581 + C153338 * C524) * C153802 +
             (C28234 * C501 + C28582 + C28582 + C153338 * C525) * C153777) *
                C23987 +
            (C30985 + C30986 + C30987) * C23988 + C31011 * C153774) *
               C153413 * C310 -
           ((C30991 + C30992 + C30993) * C153774 +
            (C30990 + C30989 + C30988) * C23988 +
            (C30987 + C30986 + C30985) * C23987) *
               C153413 * C311 +
           (C31011 * C23987 + (C30993 + C30992 + C30991) * C23988 +
            (C28432 * C153813 + C29073 * C153802 + C29448 * C153777) *
                C153774) *
               C153413 * C312) *
              C313 +
          (((C30994 + C30995 + C31018) * C23987 +
            (C30998 + C30999 + C31019) * C23988 +
            (C31002 + C31003 + C31020) * C153774) *
               C153413 * C311 -
           (C31021 * C153774 + (C31018 + C30995 + C30994) * C23988 +
            ((C28234 * C502 + C28596 + C28596 + C153338 * C526) * C153777 +
             (C28234 * C499 + C28587 + C28587 + C153338 * C523) * C153802 +
             (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C153813) *
                C23987) *
               C153413 * C310 -
           (((C28234 * C28571 + C28592 + C28592 + C153338 * C28575) * C153777 +
             C29080 * C153802 + C28437 * C153813) *
                C153774 +
            (C31020 + C31003 + C31002) * C23988 + C31021 * C23987) *
               C153413 * C312) *
              C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
            C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 + C23999 +
            C153761 * C162) *
               C47673 +
           (C23990 * C500 + C24585 + C24585 + C153809 * C524 + C23992 * C499 +
            C24584 + C24584 + C153790 * C523 + C23994 * C498 + C24583 + C24583 +
            C153761 * C522) *
               C47674 +
           (C23990 * C501 + C24586 + C24586 + C153809 * C525 + C23992 * C502 +
            C24587 + C24587 + C153790 * C526 + C23994 * C503 + C24588 + C24588 +
            C153761 * C527) *
               C153777) *
              C153501 * C153413 * C153397 * C130 -
          ((C23994 * C504 + C24610 + C24610 + C153761 * C528 + C23992 * C503 +
            C24611 + C24611 + C153790 * C527 + C23990 * C502 + C24612 + C24612 +
            C153809 * C526) *
               C153777 +
           (C23994 * C497 + C24597 + C24597 + C153761 * C521 + C23992 * C498 +
            C24596 + C24596 + C153790 * C522 + C23990 * C499 + C24595 + C24595 +
            C153809 * C523) *
               C47674 +
           (C23994 * C147 + C24012 + C24012 + C153761 * C163 + C23992 * C146 +
            C24013 + C24013 + C153790 * C162 + C23990 * C145 + C24014 + C24014 +
            C153809 * C161) *
               C47673) *
              C153501 * C153413 * C153397 * C131 +
          ((C23990 * C146 + C24015 + C24015 + C153809 * C162 + C23992 * C147 +
            C24016 + C24016 + C153790 * C163 + C23994 * C148 + C24017 + C24017 +
            C153761 * C164) *
               C47673 +
           (C23990 * C498 + C25090 + C25090 + C153809 * C522 + C23992 * C497 +
            C25089 + C25089 + C153790 * C521 + C23994 * C496 + C25088 + C25088 +
            C153761 * C520) *
               C47674 +
           (C23990 * C503 + C47677 + C47677 + C153809 * C527 + C23992 * C504 +
            C47678 + C47678 + C153790 * C528 + C23994 * C505 + C47679 + C47679 +
            C153761 * C529) *
               C153777) *
              C153501 * C153413 * C153397 * C132 -
          ((C23994 * C507 + C47680 + C47680 + C153761 * C531 + C23992 * C505 +
            C47681 + C47681 + C153790 * C529 + C23990 * C504 + C47682 + C47682 +
            C153809 * C528) *
               C153777 +
           (C23994 * C506 + C47683 + C47683 + C153761 * C530 + C23992 * C496 +
            C47684 + C47684 + C153790 * C520 + C23990 * C497 + C47685 + C47685 +
            C153809 * C521) *
               C47674 +
           (C23994 * C149 + C24030 + C24030 + C153761 * C165 + C23992 * C148 +
            C24031 + C24031 + C153790 * C164 + C23990 * C147 + C24032 + C24032 +
            C153809 * C163) *
               C47673) *
              C153501 * C153413 * C153397 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
             C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 +
             C23999 + C153761 * C162) *
                C47673 +
            (C23990 * C500 + C24585 + C24585 + C153809 * C524 + C23992 * C499 +
             C24584 + C24584 + C153790 * C523 + C23994 * C498 + C24583 +
             C24583 + C153761 * C522) *
                C47674 +
            (C23990 * C501 + C24586 + C24586 + C153809 * C525 + C23992 * C502 +
             C24587 + C24587 + C153790 * C526 + C23994 * C503 + C24588 +
             C24588 + C153761 * C527) *
                C153777) *
               C153501 * C153413 * C310 -
           ((C26079 + C26078 + C26077) * C153777 +
            (C25438 + C25439 + C25440) * C47674 +
            (C24337 + C24336 + C24335) * C47673) *
               C153501 * C153413 * C311 +
           (C24355 * C47673 + (C25437 + C25436 + C25435) * C47674 +
            (C26080 + C26081 + C26082) * C153777) *
               C153501 * C153413 * C312) *
              C313 +
          (((C24344 + C24345 + C24346) * C47673 +
            (C25441 + C25442 + C25443) * C47674 +
            (C23990 * C1368 + C24609 + C24609 + C153809 * C1378 +
             C23992 * C1367 + C24608 + C24608 + C153790 * C1377 +
             C23994 * C1366 + C24607 + C24607 + C153761 * C1376) *
                C153777) *
               C153501 * C153413 * C311 -
           ((C23994 * C504 + C24610 + C24610 + C153761 * C528 + C23992 * C503 +
             C24611 + C24611 + C153790 * C527 + C23990 * C502 + C24612 +
             C24612 + C153809 * C526) *
                C153777 +
            (C23994 * C497 + C24597 + C24597 + C153761 * C521 + C23992 * C498 +
             C24596 + C24596 + C153790 * C522 + C23990 * C499 + C24595 +
             C24595 + C153809 * C523) *
                C47674 +
            (C23994 * C147 + C24012 + C24012 + C153761 * C163 + C23992 * C146 +
             C24013 + C24013 + C153790 * C162 + C23990 * C145 + C24014 +
             C24014 + C153809 * C161) *
                C47673) *
               C153501 * C153413 * C310 -
           ((C23994 * C3330 + C24604 + C24604 + C153761 * C3338 +
             C23992 * C3329 + C24605 + C24605 + C153790 * C3337 +
             C23990 * C3328 + C24606 + C24606 + C153809 * C3336) *
                C153777 +
            (C25446 + C25445 + C25444) * C47674 + C24356 * C47673) *
               C153501 * C153413 * C312) *
              C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C47673 +
            C31295 * C47674 + C31296 * C153777) *
               C153812 +
           (C28429 * C47673 + C29076 * C47674 + C29445 * C153777) * C153800 +
           (C28430 * C47673 + C29075 * C47674 + C29446 * C153777) * C153774) *
              C153413 * C153397 * C130 -
          ((C31016 * C153777 + C29078 * C47674 + C28435 * C47673) * C153774 +
           (C31015 * C153777 + C29077 * C47674 + C28434 * C47673) * C153800 +
           (C31301 * C153777 + C31300 * C47674 +
            (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C47673) *
               C153812) *
              C153413 * C153397 * C131 +
          (((C28234 * C146 + C28247 + C28247 + C153338 * C162) * C47673 +
            C31779 * C47674 + C31780 * C153777) *
               C153812 +
           (C28736 * C47673 + C31542 * C47674 + C31543 * C153777) * C153800 +
           (C28737 * C47673 + C31544 * C47674 + C31545 * C153777) * C153774) *
              C153413 * C153397 * C132 -
          (((C28234 * C3330 + C30761 + C30761 + C153338 * C3338) * C153777 +
            (C28234 * C1797 + C30762 + C30762 + C153338 * C1807) * C47674 +
            (C28234 * C323 + C28254 + C28254 + C153338 * C347) * C47673) *
               C153774 +
           ((C28234 * C1366 + C30763 + C30763 + C153338 * C1376) * C153777 +
            (C28234 * C984 + C30764 + C30764 + C153338 * C996) * C47674 +
            (C28234 * C316 + C28255 + C28255 + C153338 * C340) * C47673) *
               C153800 +
           ((C28234 * C504 + C30765 + C30765 + C153338 * C528) * C153777 +
            (C28234 * C497 + C30766 + C30766 + C153338 * C521) * C47674 +
            (C28234 * C147 + C28256 + C28256 + C153338 * C163) * C47673) *
               C153812) *
              C153413 * C153397 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C47673 +
             C31295 * C47674 + C31296 * C153777) *
                C153812 +
            (C52025 + C52026 + C52027) * C153800 + C52045 * C153774) *
               C153413 * C310 -
           ((C52031 + C52032 + C52033) * C153774 +
            (C52030 + C52029 + C52028) * C153800 +
            (C52027 + C52026 + C52025) * C153812) *
               C153413 * C311 +
           (C52045 * C153812 + (C52033 + C52032 + C52031) * C153800 +
            (C28432 * C47673 + C29073 * C47674 + C29448 * C153777) * C153774) *
               C153413 * C312) *
              C313 +
          (((C52034 + C52035 + C52036) * C153812 +
            (C52037 + C52038 + C52039) * C153800 +
            (C52040 + C52041 + C52042) * C153774) *
               C153413 * C311 -
           (C52046 * C153774 + (C52036 + C52035 + C52034) * C153800 +
            (C31301 * C153777 + C31300 * C47674 +
             (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C47673) *
                C153812) *
               C153413 * C310 -
           (((C28234 * C28571 + C28592 + C28592 + C153338 * C28575) * C153777 +
             C29080 * C47674 + C28437 * C47673) *
                C153774 +
            (C52042 + C52041 + C52040) * C153800 + C52046 * C153812) *
               C153413 * C312) *
              C153384)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C55722 +
           C31295 * C55723 + C31296 * C55724 + C31299 * C55725 +
           C34025 * C55726) *
              C153501 * C153413 * C153397 * C130 -
          ((C28234 * C7561 + C31274 + C31274 + C153338 * C7569) * C55726 +
           C31302 * C55725 + C31301 * C55724 + C31300 * C55723 +
           (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C55722) *
              C153501 * C153413 * C153397 * C131 +
          ((C28234 * C146 + C28247 + C28247 + C153338 * C162) * C55722 +
           C31779 * C55723 + C31780 * C55724 +
           (C28234 * C2150 + C31774 + C31774 + C153338 * C2160) * C55725 +
           (C28234 * C7562 + C55728 + C55728 + C153338 * C7570) * C55726) *
              C153501 * C153413 * C153397 * C132 -
          ((C28234 * C7563 + C55729 + C55729 + C153338 * C7571) * C55726 +
           (C28234 * C2149 + C55730 + C55730 + C153338 * C2159) * C55725 +
           (C28234 * C504 + C30765 + C30765 + C153338 * C528) * C55724 +
           (C28234 * C497 + C30766 + C30766 + C153338 * C521) * C55723 +
           (C28234 * C147 + C28256 + C28256 + C153338 * C163) * C55722) *
              C153501 * C153413 * C153397 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C55722 +
            C31295 * C55723 + C31296 * C55724 + C31299 * C55725 +
            C34025 * C55726) *
               C153501 * C153413 * C310 -
           (C32694 * C55726 + C31298 * C55725 + C29445 * C55724 +
            C29076 * C55723 + C28429 * C55722) *
               C153501 * C153413 * C311 +
           (C28430 * C55722 + C29075 * C55723 + C29446 * C55724 +
            C31297 * C55725 + C32695 * C55726) *
               C153501 * C153413 * C312) *
              C313 +
          ((C28434 * C55722 + C29077 * C55723 + C31015 * C55724 +
            C31303 * C55725 +
            (C28234 * C9041 + C31273 + C31273 + C153338 * C9047) * C55726) *
               C153501 * C153413 * C311 -
           ((C28234 * C7561 + C31274 + C31274 + C153338 * C7569) * C55726 +
            C31302 * C55725 + C31301 * C55724 + C31300 * C55723 +
            (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C55722) *
               C153501 * C153413 * C310 -
           ((C28234 * C31240 + C31272 + C31272 + C153338 * C31244) * C55726 +
            C31304 * C55725 + C31016 * C55724 + C29078 * C55723 +
            C28435 * C55722) *
               C153501 * C153413 * C312) *
              C153384)) /
            (p * q * std::sqrt(p + q));
    d2ee[185] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((C134 * C144 + C169 + C169 + C121 * C160 + C136 * C145 + C170 +
                C170 + C122 * C161 + C138 * C146 + C171 + C171 + C123 * C162 +
                C140 * C147 + C172 + C172 + C124 * C163 + C142 * C148 + C173 +
                C173 + C125 * C164) *
                   C153513 * C153501 * C153413 * C153795 -
               (C142 * C315 + C352 + C352 + C125 * C339 + C140 * C316 + C353 +
                C353 + C124 * C340 + C138 * C317 + C354 + C354 + C123 * C341 +
                C136 * C318 + C355 + C355 + C122 * C342 + C134 * C319 + C356 +
                C356 + C121 * C343) *
                   C153513 * C153501 * C153413 * C153796 +
               (C134 * C320 + C357 + C357 + C121 * C344 + C136 * C321 + C358 +
                C358 + C122 * C345 + C138 * C322 + C359 + C359 + C123 * C346 +
                C140 * C323 + C360 + C360 + C124 * C347 + C142 * C324 + C361 +
                C361 + C125 * C348) *
                   C153513 * C153501 * C153413 * C1509) *
                  C153716 +
              ((C134 * C318 + C362 + C362 + C121 * C342 + C136 * C317 + C363 +
                C363 + C122 * C341 + C138 * C316 + C364 + C364 + C123 * C340 +
                C140 * C315 + C365 + C365 + C124 * C339 + C142 * C325 + C366 +
                C366 + C125 * C349) *
                   C153513 * C153501 * C153413 * C153796 -
               (C142 * C149 + C174 + C174 + C125 * C165 + C140 * C148 + C175 +
                C175 + C124 * C164 + C138 * C147 + C176 + C176 + C123 * C163 +
                C136 * C146 + C177 + C177 + C122 * C162 + C134 * C145 + C178 +
                C178 + C121 * C161) *
                   C153513 * C153501 * C153413 * C153795 -
               (C142 * C326 + C367 + C367 + C125 * C350 + C140 * C324 + C368 +
                C368 + C124 * C348 + C138 * C323 + C369 + C369 + C123 * C347 +
                C136 * C322 + C370 + C370 + C122 * C346 + C134 * C321 + C371 +
                C371 + C121 * C345) *
                   C153513 * C153501 * C153413 * C1509) *
                  C153384) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 +
                 C2737 + C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
                 C153761 * C162) *
                    C153513 * C153812 +
                (C3086 + C3087 + C3088) * C153513 * C153800 + C3108 * C153774) *
                   C153413 * C153795 -
               (C4609 * C153774 + (C3091 + C3090 + C3089) * C153513 * C153800 +
                (C3088 + C3087 + C3086) * C153513 * C153812) *
                   C153413 * C153796 +
               (C3108 * C153812 + (C3094 + C3093 + C3092) * C153513 * C153800 +
                (C4613 + C4614 + C4615) * C153513 * C153774) *
                   C153413 * C1509) *
                  C153716 +
              (((C3095 + C3096 + C3097) * C153513 * C153812 +
                (C3098 + C3099 + C3100) * C153513 * C153800 +
                (C3101 + C3102 + C3103) * C153513 * C153774) *
                   C153413 * C153796 -
               (C3109 * C153774 + (C3097 + C3096 + C3095) * C153513 * C153800 +
                (C2733 * C147 + C2751 + C2751 + C153761 * C163 + C2731 * C146 +
                 C2752 + C2752 + C2724 * C162 + C2729 * C145 + C2753 + C2753 +
                 C2723 * C161) *
                    C153513 * C153812) *
                   C153413 * C153795 -
               ((C2733 * C2992 + C3047 + C3047 + C153761 * C3000 +
                 C2731 * C2991 + C3048 + C3048 + C2724 * C2999 + C2729 * C2990 +
                 C3049 + C3049 + C2723 * C2998) *
                    C153513 * C153774 +
                (C3103 + C3102 + C3101) * C153513 * C153800 + C3109 * C153812) *
                   C153413 * C1509) *
                  C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 +
             C2737 + C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
             C153761 * C162) *
                C153813 +
            (C7654 + C7655 + C7656) * C153802 + C7674 * C153777) *
               C153501 * C153413 * C153795 -
           (C9063 * C153777 + (C4213 + C4214 + C4215) * C153802 +
            (C3088 + C3087 + C3086) * C153813) *
               C153501 * C153413 * C153796 +
           (C3106 * C153813 + (C4212 + C4211 + C4210) * C153802 +
            (C4873 + C4874 + C4875) * C153777) *
               C153501 * C153413 * C1509) *
              C153716 +
          (((C3095 + C3096 + C3097) * C153813 +
            (C4216 + C4217 + C4218) * C153802 +
            (C8456 + C8457 + C8458) * C153777) *
               C153501 * C153413 * C153796 -
           (C7675 * C153777 + (C7665 + C7664 + C7663) * C153802 +
            (C2733 * C147 + C2751 + C2751 + C153761 * C163 + C2731 * C146 +
             C2752 + C2752 + C2724 * C162 + C2729 * C145 + C2753 + C2753 +
             C2723 * C161) *
                C153813) *
               C153501 * C153413 * C153795 -
           ((C2733 * C3330 + C3367 + C3367 + C153761 * C3338 + C2731 * C3329 +
             C3368 + C3368 + C2724 * C3337 + C2729 * C3328 + C3369 + C3369 +
             C2723 * C3336) *
                C153777 +
            (C4221 + C4220 + C4219) * C153802 + C3107 * C153813) *
               C153501 * C153413 * C1509) *
              C153384)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
             C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 +
             C23999 + C153761 * C162) *
                C153513 * C23987 +
            (C24335 + C24336 + C24337) * C153513 * C23988 + C24357 * C153774) *
               C153413 * C153795 -
           (C25825 * C153774 + (C24340 + C24339 + C24338) * C153513 * C23988 +
            (C24337 + C24336 + C24335) * C153513 * C23987) *
               C153413 * C153796 +
           (C24357 * C23987 + (C24343 + C24342 + C24341) * C153513 * C23988 +
            (C25829 + C25830 + C25831) * C153513 * C153774) *
               C153413 * C1509) *
              C153716 +
          (((C24344 + C24345 + C24346) * C153513 * C23987 +
            (C24347 + C24348 + C24349) * C153513 * C23988 +
            (C24350 + C24351 + C24352) * C153513 * C153774) *
               C153413 * C153796 -
           (C24358 * C153774 + (C24346 + C24345 + C24344) * C153513 * C23988 +
            (C23994 * C147 + C24012 + C24012 + C153761 * C163 + C23992 * C146 +
             C24013 + C24013 + C153790 * C162 + C23990 * C145 + C24014 +
             C24014 + C153809 * C161) *
                C153513 * C23987) *
               C153413 * C153795 -
           ((C23994 * C2992 + C24296 + C24296 + C153761 * C3000 +
             C23992 * C2991 + C24297 + C24297 + C153790 * C2999 +
             C23990 * C2990 + C24298 + C24298 + C153809 * C2998) *
                C153513 * C153774 +
            (C24352 + C24351 + C24350) * C153513 * C23988 + C24358 * C23987) *
               C153413 * C1509) *
              C153384)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153513 *
                C28229 +
            C28439 * C28230 + C28440 * C28231 + C28441 * C28232 +
            C28442 * C28233) *
               C153413 * C153795 -
           (C28443 * C28233 + C28442 * C28232 + C28441 * C28231 +
            C28440 * C28230 + C28439 * C28229) *
               C153413 * C153796 +
           (C28440 * C28229 + C28441 * C28230 + C28442 * C28231 +
            C28443 * C28232 + C29302 * C28233) *
               C153413 * C1509) *
              C153716 +
          ((C28444 * C28229 + C28445 * C28230 + C28446 * C28231 +
            C28447 * C28232 + C28448 * C28233) *
               C153413 * C153796 -
           (C28447 * C28233 + C28446 * C28232 + C28445 * C28231 +
            C28444 * C28230 +
            (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C153513 *
                C28229) *
               C153413 * C153795 -
           ((C28234 * C28379 + C28408 + C28408 + C153338 * C28383) * C153513 *
                C28233 +
            C28448 * C28232 + C28447 * C28231 + C28446 * C28230 +
            C28445 * C28229) *
               C153413 * C1509) *
              C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153813 +
             C31295 * C153802 + C31296 * C153777) *
                C23987 +
            (C30985 + C30986 + C30987) * C23988 + C31011 * C153774) *
               C153413 * C153795 -
           (C32455 * C153774 + (C30990 + C30989 + C30988) * C23988 +
            (C30987 + C30986 + C30985) * C23987) *
               C153413 * C153796 +
           (C31011 * C23987 + (C30993 + C30992 + C30991) * C23988 +
            (C32452 + C32453 + C32454) * C153774) *
               C153413 * C1509) *
              C153716 +
          (((C30994 + C30995 + C31018) * C23987 +
            (C30998 + C30999 + C31019) * C23988 +
            (C31002 + C31003 + C31020) * C153774) *
               C153413 * C153796 -
           (C31021 * C153774 + (C31018 + C30995 + C30994) * C23988 +
            (C31301 * C153777 + C31300 * C153802 +
             (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C153813) *
                C23987) *
               C153413 * C153795 -
           (((C28234 * C28571 + C28592 + C28592 + C153338 * C28575) * C153777 +
             C29080 * C153802 + C28437 * C153813) *
                C153774 +
            (C31020 + C31003 + C31002) * C23988 + C31021 * C23987) *
               C153413 * C1509) *
              C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
             C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 +
             C23999 + C153761 * C162) *
                C47673 +
            (C48203 + C48204 + C48205) * C47674 + C48223 * C153777) *
               C153501 * C153413 * C153795 -
           (C49600 * C153777 + (C25438 + C25439 + C25440) * C47674 +
            (C24337 + C24336 + C24335) * C47673) *
               C153501 * C153413 * C153796 +
           (C24355 * C47673 + (C25437 + C25436 + C25435) * C47674 +
            (C26080 + C26081 + C26082) * C153777) *
               C153501 * C153413 * C1509) *
              C153716 +
          (((C24344 + C24345 + C24346) * C47673 +
            (C25441 + C25442 + C25443) * C47674 +
            (C49002 + C49003 + C49004) * C153777) *
               C153501 * C153413 * C153796 -
           (C48224 * C153777 + (C48214 + C48213 + C48212) * C47674 +
            (C23994 * C147 + C24012 + C24012 + C153761 * C163 + C23992 * C146 +
             C24013 + C24013 + C153790 * C162 + C23990 * C145 + C24014 +
             C24014 + C153809 * C161) *
                C47673) *
               C153501 * C153413 * C153795 -
           ((C23994 * C3330 + C24604 + C24604 + C153761 * C3338 +
             C23992 * C3329 + C24605 + C24605 + C153790 * C3337 +
             C23990 * C3328 + C24606 + C24606 + C153809 * C3336) *
                C153777 +
            (C25446 + C25445 + C25444) * C47674 + C24356 * C47673) *
               C153501 * C153413 * C1509) *
              C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C47673 +
             C31295 * C47674 + C31296 * C153777) *
                C153812 +
            (C52025 + C52026 + C52027) * C153800 + C52045 * C153774) *
               C153413 * C153795 -
           (C53377 * C153774 + (C52030 + C52029 + C52028) * C153800 +
            (C52027 + C52026 + C52025) * C153812) *
               C153413 * C153796 +
           (C52045 * C153812 + (C52033 + C52032 + C52031) * C153800 +
            (C53374 + C53375 + C53376) * C153774) *
               C153413 * C1509) *
              C153716 +
          (((C52034 + C52035 + C52036) * C153812 +
            (C52037 + C52038 + C52039) * C153800 +
            (C52040 + C52041 + C52042) * C153774) *
               C153413 * C153796 -
           (C52046 * C153774 + (C52036 + C52035 + C52034) * C153800 +
            (C31301 * C153777 + C31300 * C47674 +
             (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C47673) *
                C153812) *
               C153413 * C153795 -
           (((C28234 * C28571 + C28592 + C28592 + C153338 * C28575) * C153777 +
             C29080 * C47674 + C28437 * C47673) *
                C153774 +
            (C52042 + C52041 + C52040) * C153800 + C52046 * C153812) *
               C153413 * C1509) *
              C153384)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C55722 +
            C31295 * C55723 + C31296 * C55724 + C31299 * C55725 +
            C34025 * C55726) *
               C153501 * C153413 * C153795 -
           (C32694 * C55726 + C31298 * C55725 + C29445 * C55724 +
            C29076 * C55723 + C28429 * C55722) *
               C153501 * C153413 * C153796 +
           (C28430 * C55722 + C29075 * C55723 + C29446 * C55724 +
            C31297 * C55725 + C32695 * C55726) *
               C153501 * C153413 * C1509) *
              C153716 +
          ((C28434 * C55722 + C29077 * C55723 + C31015 * C55724 +
            C31303 * C55725 + C56425 * C55726) *
               C153501 * C153413 * C153796 -
           (C55997 * C55726 + C31302 * C55725 + C31301 * C55724 +
            C31300 * C55723 +
            (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C55722) *
               C153501 * C153413 * C153795 -
           ((C28234 * C31240 + C31272 + C31272 + C153338 * C31244) * C55726 +
            C31304 * C55725 + C31016 * C55724 + C29078 * C55723 +
            C28435 * C55722) *
               C153501 * C153413 * C1509) *
              C153384)) /
            (p * q * std::sqrt(p + q));
    d2ee[186] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((C134 * C144 + C169 + C169 + C121 * C160 + C136 * C145 + C170 +
                C170 + C122 * C161 + C138 * C146 + C171 + C171 + C123 * C162 +
                C140 * C147 + C172 + C172 + C124 * C163 + C142 * C148 + C173 +
                C173 + C125 * C164) *
                   C153513 * C153501 * C153725 -
               (C142 * C496 + C533 + C533 + C125 * C520 + C140 * C497 + C534 +
                C534 + C124 * C521 + C138 * C498 + C535 + C535 + C123 * C522 +
                C136 * C499 + C536 + C536 + C122 * C523 + C134 * C500 + C537 +
                C537 + C121 * C524) *
                   C153513 * C153501 * C153477) *
                  C153795 +
              ((C134 * C981 + C1000 + C1000 + C121 * C993 + C136 * C982 +
                C1001 + C1001 + C122 * C994 + C138 * C983 + C1002 + C1002 +
                C123 * C995 + C140 * C984 + C1003 + C1003 + C124 * C996 +
                C142 * C985 + C1004 + C1004 + C125 * C997) *
                   C153513 * C153501 * C153477 -
               (C142 * C315 + C352 + C352 + C125 * C339 + C140 * C316 + C353 +
                C353 + C124 * C340 + C138 * C317 + C354 + C354 + C123 * C341 +
                C136 * C318 + C355 + C355 + C122 * C342 + C134 * C319 + C356 +
                C356 + C121 * C343) *
                   C153513 * C153501 * C153725) *
                  C153796 +
              ((C134 * C320 + C357 + C357 + C121 * C344 + C136 * C321 + C358 +
                C358 + C122 * C345 + C138 * C322 + C359 + C359 + C123 * C346 +
                C140 * C323 + C360 + C360 + C124 * C347 + C142 * C324 + C361 +
                C361 + C125 * C348) *
                   C153513 * C153501 * C153725 -
               (C142 * C1796 + C1812 + C1812 + C125 * C1806 + C140 * C1797 +
                C1813 + C1813 + C124 * C1807 + C138 * C1798 + C1814 + C1814 +
                C123 * C1808 + C136 * C1799 + C1815 + C1815 + C122 * C1809 +
                C134 * C1800 + C1816 + C1816 + C121 * C1810) *
                   C153513 * C153501 * C153477) *
                  C1509) *
             C153378 +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 +
                 C2737 + C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
                 C153761 * C162) *
                    C153513 * C153812 +
                (C3086 + C3087 + C3088) * C153513 * C153800 + C3108 * C153774) *
                   C153725 -
               (C5625 * C153774 + (C4213 + C4214 + C4215) * C153513 * C153800 +
                (C2733 * C498 + C3346 + C3346 + C153761 * C522 + C2731 * C499 +
                 C3347 + C3347 + C2724 * C523 + C2729 * C500 + C3348 + C3348 +
                 C2723 * C524) *
                    C153513 * C153812) *
                   C153477) *
                  C153795 +
              (((C4215 + C4214 + C4213) * C153513 * C153812 +
                (C4212 + C4211 + C4210) * C153513 * C153800 +
                (C5629 + C5630 + C5631) * C153513 * C153774) *
                   C153477 -
               (C4609 * C153774 + (C3091 + C3090 + C3089) * C153513 * C153800 +
                (C3088 + C3087 + C3086) * C153513 * C153812) *
                   C153725) *
                  C153796 +
              ((C3108 * C153812 + (C3094 + C3093 + C3092) * C153513 * C153800 +
                (C4613 + C4614 + C4615) * C153513 * C153774) *
                   C153725 -
               ((C2733 * C5601 + C5618 + C5618 + C153761 * C5607 +
                 C2731 * C5602 + C5619 + C5619 + C2724 * C5608 + C2729 * C5603 +
                 C5620 + C5620 + C2723 * C5609) *
                    C153513 * C153774 +
                (C5631 + C5630 + C5629) * C153513 * C153800 + C5625 * C153812) *
                   C153477) *
                  C1509) *
             C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 +
             C2737 + C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
             C153761 * C162) *
                C153813 +
            (C7654 + C7655 + C7656) * C153802 + C7674 * C153777) *
               C153501 * C153725 -
           ((C7660 + C7661 + C7662) * C153777 +
            (C7659 + C7658 + C7657) * C153802 +
            (C7656 + C7655 + C7654) * C153813) *
               C153501 * C153477) *
              C153795 +
          (((C4215 + C4214 + C4213) * C153813 +
            (C4870 + C4871 + C4872) * C153802 +
            (C9067 + C9068 + C9069) * C153777) *
               C153501 * C153477 -
           (C9063 * C153777 + (C4213 + C4214 + C4215) * C153802 +
            (C3088 + C3087 + C3086) * C153813) *
               C153501 * C153725) *
              C153796 +
          ((C3106 * C153813 + (C4212 + C4211 + C4210) * C153802 +
            (C4873 + C4874 + C4875) * C153777) *
               C153501 * C153725 -
           ((C2733 * C6213 + C6232 + C6232 + C153761 * C6225 + C2731 * C6214 +
             C6233 + C6233 + C2724 * C6226 + C2729 * C6215 + C6234 + C6234 +
             C2723 * C6227) *
                C153777 +
            (C4875 + C4874 + C4873) * C153802 + C5621 * C153813) *
               C153501 * C153477) *
              C1509) *
         C153378) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
             C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 +
             C23999 + C153761 * C162) *
                C153513 * C23987 +
            (C24335 + C24336 + C24337) * C153513 * C23988 + C24357 * C153774) *
               C153725 -
           (C26823 * C153774 + (C25438 + C25439 + C25440) * C153513 * C23988 +
            (C23994 * C498 + C24583 + C24583 + C153761 * C522 + C23992 * C499 +
             C24584 + C24584 + C153790 * C523 + C23990 * C500 + C24585 +
             C24585 + C153809 * C524) *
                C153513 * C23987) *
               C153477) *
              C153795 +
          (((C25440 + C25439 + C25438) * C153513 * C23987 +
            (C25437 + C25436 + C25435) * C153513 * C23988 +
            (C26827 + C26828 + C26829) * C153513 * C153774) *
               C153477 -
           (C25825 * C153774 + (C24340 + C24339 + C24338) * C153513 * C23988 +
            (C24337 + C24336 + C24335) * C153513 * C23987) *
               C153725) *
              C153796 +
          ((C24357 * C23987 + (C24343 + C24342 + C24341) * C153513 * C23988 +
            (C25829 + C25830 + C25831) * C153513 * C153774) *
               C153725 -
           ((C23994 * C5601 + C26816 + C26816 + C153761 * C5607 +
             C23992 * C5602 + C26817 + C26817 + C153790 * C5608 +
             C23990 * C5603 + C26818 + C26818 + C153809 * C5609) *
                C153513 * C153774 +
            (C26829 + C26828 + C26827) * C153513 * C23988 + C26823 * C23987) *
               C153477) *
              C1509) *
         C153378) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153513 *
                C28229 +
            C28439 * C28230 + C28440 * C28231 + C28441 * C28232 +
            C28442 * C28233) *
               C153725 -
           (C29081 * C28233 + C29082 * C28232 + C29083 * C28231 +
            C29084 * C28230 +
            (C28234 * C500 + C28581 + C28581 + C153338 * C524) * C153513 *
                C28229) *
               C153477) *
              C153795 +
          ((C29084 * C28229 + C29083 * C28230 + C29082 * C28231 +
            C29081 * C28232 + C29868 * C28233) *
               C153477 -
           (C28443 * C28233 + C28442 * C28232 + C28441 * C28231 +
            C28440 * C28230 + C28439 * C28229) *
               C153725) *
              C153796 +
          ((C28440 * C28229 + C28441 * C28230 + C28442 * C28231 +
            C28443 * C28232 + C29302 * C28233) *
               C153725 -
           ((C28234 * C29858 + C29864 + C29864 + C153338 * C29860) * C153513 *
                C28233 +
            C29868 * C28232 + C29081 * C28231 + C29082 * C28230 +
            C29083 * C28229) *
               C153477) *
              C1509) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153813 +
             C31295 * C153802 + C31296 * C153777) *
                C23987 +
            (C30985 + C30986 + C30987) * C23988 + C31011 * C153774) *
               C153725 -
           (C33429 * C153774 + (C32077 + C32078 + C32079) * C23988 +
            (C31299 * C153777 + C31296 * C153802 + C31295 * C153813) * C23987) *
               C153477) *
              C153795 +
          (((C32079 + C32078 + C32077) * C23987 +
            (C32076 + C32075 + C32074) * C23988 +
            (C33426 + C33427 + C33428) * C153774) *
               C153477 -
           (C32455 * C153774 + (C30990 + C30989 + C30988) * C23988 +
            (C30987 + C30986 + C30985) * C23987) *
               C153725) *
              C153796 +
          ((C31011 * C23987 + (C30993 + C30992 + C30991) * C23988 +
            (C32452 + C32453 + C32454) * C153774) *
               C153725 -
           (((C28234 * C30194 + C30201 + C30201 + C153338 * C30198) * C153777 +
             C29448 * C153802 + C29073 * C153813) *
                C153774 +
            (C33428 + C33427 + C33426) * C23988 + C33429 * C23987) *
               C153477) *
              C1509) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
             C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 +
             C23999 + C153761 * C162) *
                C47673 +
            (C48203 + C48204 + C48205) * C47674 + C48223 * C153777) *
               C153501 * C153725 -
           ((C48209 + C48210 + C48211) * C153777 +
            (C48208 + C48207 + C48206) * C47674 +
            (C48205 + C48204 + C48203) * C47673) *
               C153501 * C153477) *
              C153795 +
          (((C25440 + C25439 + C25438) * C47673 +
            (C26077 + C26078 + C26079) * C47674 +
            (C49604 + C49605 + C49606) * C153777) *
               C153501 * C153477 -
           (C49600 * C153777 + (C25438 + C25439 + C25440) * C47674 +
            (C24337 + C24336 + C24335) * C47673) *
               C153501 * C153725) *
              C153796 +
          ((C24355 * C47673 + (C25437 + C25436 + C25435) * C47674 +
            (C26080 + C26081 + C26082) * C153777) *
               C153501 * C153725 -
           ((C23994 * C6213 + C27412 + C27412 + C153761 * C6225 +
             C23992 * C6214 + C27413 + C27413 + C153790 * C6226 +
             C23990 * C6215 + C27414 + C27414 + C153809 * C6227) *
                C153777 +
            (C26082 + C26081 + C26080) * C47674 + C26819 * C47673) *
               C153501 * C153477) *
              C1509) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C47673 +
             C31295 * C47674 + C31296 * C153777) *
                C153812 +
            (C52025 + C52026 + C52027) * C153800 + C52045 * C153774) *
               C153725 -
           (C54332 * C153774 + (C53000 + C53001 + C53002) * C153800 +
            (C31299 * C153777 + C31296 * C47674 + C31295 * C47673) * C153812) *
               C153477) *
              C153795 +
          (((C53002 + C53001 + C53000) * C153812 +
            (C52999 + C52998 + C52997) * C153800 +
            (C54329 + C54330 + C54331) * C153774) *
               C153477 -
           (C53377 * C153774 + (C52030 + C52029 + C52028) * C153800 +
            (C52027 + C52026 + C52025) * C153812) *
               C153725) *
              C153796 +
          ((C52045 * C153812 + (C52033 + C52032 + C52031) * C153800 +
            (C53374 + C53375 + C53376) * C153774) *
               C153725 -
           (((C28234 * C30194 + C30201 + C30201 + C153338 * C30198) * C153777 +
             C29448 * C47674 + C29073 * C47673) *
                C153774 +
            (C54331 + C54330 + C54329) * C153800 + C54332 * C153812) *
               C153477) *
              C1509) *
         C153378) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C55722 +
            C31295 * C55723 + C31296 * C55724 + C31299 * C55725 +
            C34025 * C55726) *
               C153501 * C153725 -
           (C55996 * C55726 + C34025 * C55725 + C31299 * C55724 +
            C31296 * C55723 + C31295 * C55722) *
               C153501 * C153477) *
              C153795 +
          ((C29076 * C55722 + C29445 * C55723 + C31298 * C55724 +
            C32694 * C55725 + C56760 * C55726) *
               C153501 * C153477 -
           (C32694 * C55726 + C31298 * C55725 + C29445 * C55724 +
            C29076 * C55723 + C28429 * C55722) *
               C153501 * C153725) *
              C153796 +
          ((C28430 * C55722 + C29075 * C55723 + C29446 * C55724 +
            C31297 * C55725 + C32695 * C55726) *
               C153501 * C153725 -
           ((C28234 * C34011 + C34020 + C34020 + C153338 * C34015) * C55726 +
            C32695 * C55725 + C31297 * C55724 + C29446 * C55723 +
            C29075 * C55722) *
               C153501 * C153477) *
              C1509) *
         C153378) /
            (p * q * std::sqrt(p + q));
    d2ee[187] +=
        (-0.25 * std::pow(Pi, 2.5) *
             (((C134 * C144 + C169 + C169 + C121 * C160 + C136 * C145 + C170 +
                C170 + C122 * C161 + C138 * C146 + C171 + C171 + C123 * C162 +
                C140 * C147 + C172 + C172 + C124 * C163 + C142 * C148 + C173 +
                C173 + C125 * C164) *
                   C153513 * C153501 * C153413 * C1131 -
               (C142 * C315 + C352 + C352 + C125 * C339 + C140 * C316 + C353 +
                C353 + C124 * C340 + C138 * C317 + C354 + C354 + C123 * C341 +
                C136 * C318 + C355 + C355 + C122 * C342 + C134 * C319 + C356 +
                C356 + C121 * C343) *
                   C153513 * C153501 * C153413 * C153449) *
                  C1133 +
              ((C134 * C318 + C362 + C362 + C121 * C342 + C136 * C317 + C363 +
                C363 + C122 * C341 + C138 * C316 + C364 + C364 + C123 * C340 +
                C140 * C315 + C365 + C365 + C124 * C339 + C142 * C325 + C366 +
                C366 + C125 * C349) *
                   C153513 * C153501 * C153413 * C153449 -
               (C142 * C149 + C174 + C174 + C125 * C165 + C140 * C148 + C175 +
                C175 + C124 * C164 + C138 * C147 + C176 + C176 + C123 * C163 +
                C136 * C146 + C177 + C177 + C122 * C162 + C134 * C145 + C178 +
                C178 + C121 * C161) *
                   C153513 * C153501 * C153413 * C1131) *
                  C1134 +
              ((C134 * C146 + C179 + C179 + C121 * C162 + C136 * C147 + C180 +
                C180 + C122 * C163 + C138 * C148 + C181 + C181 + C123 * C164 +
                C140 * C149 + C182 + C182 + C124 * C165 + C142 * C150 + C183 +
                C183 + C125 * C166) *
                   C153513 * C153501 * C153413 * C1131 -
               (C142 * C679 + C683 + C683 + C125 * C681 + C140 * C325 + C684 +
                C684 + C124 * C349 + C138 * C315 + C685 + C685 + C123 * C339 +
                C136 * C316 + C686 + C686 + C122 * C340 + C134 * C317 + C687 +
                C687 + C121 * C341) *
                   C153513 * C153501 * C153413 * C153449) *
                  C1135) -
         0.25 * std::pow(Pi, 2.5) *
             ((C134 * C144 + C169 + C169 + C121 * C160 + C136 * C145 + C170 +
               C170 + C122 * C161 + C138 * C146 + C171 + C171 + C123 * C162 +
               C140 * C147 + C172 + C172 + C124 * C163 + C142 * C148 + C173 +
               C173 + C125 * C164) *
                  C153513 * C153501 * C153413 * C1218 -
              (C142 * C315 + C352 + C352 + C125 * C339 + C140 * C316 + C353 +
               C353 + C124 * C340 + C138 * C317 + C354 + C354 + C123 * C341 +
               C136 * C318 + C355 + C355 + C122 * C342 + C134 * C319 + C356 +
               C356 + C121 * C343) *
                  C153513 * C153501 * C153413 * C1219 +
              (C134 * C320 + C357 + C357 + C121 * C344 + C136 * C321 + C358 +
               C358 + C122 * C345 + C138 * C322 + C359 + C359 + C123 * C346 +
               C140 * C323 + C360 + C360 + C124 * C347 + C142 * C324 + C361 +
               C361 + C125 * C348) *
                  C153513 * C153501 * C153413 * C1220 -
              (C142 * C1223 + C1239 + C1239 + C125 * C1233 + C140 * C1224 +
               C1240 + C1240 + C124 * C1234 + C138 * C1225 + C1241 + C1241 +
               C123 * C1235 + C136 * C1226 + C1242 + C1242 + C122 * C1236 +
               C134 * C1227 + C1243 + C1243 + C121 * C1237) *
                  C153513 * C153501 * C153413 * C1221) *
             C153378 +
         0.5 * std::pow(Pi, 2.5) *
             (((C134 * C144 + C169 + C169 + C121 * C160 + C136 * C145 + C170 +
                C170 + C122 * C161 + C138 * C146 + C171 + C171 + C123 * C162 +
                C140 * C147 + C172 + C172 + C124 * C163 + C142 * C148 + C173 +
                C173 + C125 * C164) *
                   C153513 * C153501 * C493 -
               (C142 * C496 + C533 + C533 + C125 * C520 + C140 * C497 + C534 +
                C534 + C124 * C521 + C138 * C498 + C535 + C535 + C123 * C522 +
                C136 * C499 + C536 + C536 + C122 * C523 + C134 * C500 + C537 +
                C537 + C121 * C524) *
                   C153513 * C153501 * C494 +
               (C134 * C501 + C538 + C538 + C121 * C525 + C136 * C502 + C539 +
                C539 + C122 * C526 + C138 * C503 + C540 + C540 + C123 * C527 +
                C140 * C504 + C541 + C541 + C124 * C528 + C142 * C505 + C542 +
                C542 + C125 * C529) *
                   C153513 * C153501 * C495) *
                  C1131 +
              ((C134 * C981 + C1000 + C1000 + C121 * C993 + C136 * C982 +
                C1001 + C1001 + C122 * C994 + C138 * C983 + C1002 + C1002 +
                C123 * C995 + C140 * C984 + C1003 + C1003 + C124 * C996 +
                C142 * C985 + C1004 + C1004 + C125 * C997) *
                   C153513 * C153501 * C494 -
               (C142 * C315 + C352 + C352 + C125 * C339 + C140 * C316 + C353 +
                C353 + C124 * C340 + C138 * C317 + C354 + C354 + C123 * C341 +
                C136 * C318 + C355 + C355 + C122 * C342 + C134 * C319 + C356 +
                C356 + C121 * C343) *
                   C153513 * C153501 * C493 -
               (C142 * C1365 + C1381 + C1381 + C125 * C1375 + C140 * C1366 +
                C1382 + C1382 + C124 * C1376 + C138 * C1367 + C1383 + C1383 +
                C123 * C1377 + C136 * C1368 + C1384 + C1384 + C122 * C1378 +
                C134 * C1369 + C1385 + C1385 + C121 * C1379) *
                   C153513 * C153501 * C495) *
                  C153449) *
             C153378 -
         0.25 * std::pow(Pi, 2.5) *
             ((((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 +
                 C2737 + C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
                 C153761 * C162) *
                    C153513 * C153812 +
                (C3086 + C3087 + C3088) * C153513 * C153800 + C3108 * C153774) *
                   C153413 * C1131 -
               ((C3092 + C3093 + C3094) * C153513 * C153774 +
                (C3091 + C3090 + C3089) * C153513 * C153800 +
                (C3088 + C3087 + C3086) * C153513 * C153812) *
                   C153413 * C153449) *
                  C1133 +
              (((C3095 + C3096 + C3097) * C153513 * C153812 +
                (C3098 + C3099 + C3100) * C153513 * C153800 +
                (C3101 + C3102 + C3103) * C153513 * C153774) *
                   C153413 * C153449 -
               (C3109 * C153774 + (C3097 + C3096 + C3095) * C153513 * C153800 +
                (C2733 * C147 + C2751 + C2751 + C153761 * C163 + C2731 * C146 +
                 C2752 + C2752 + C2724 * C162 + C2729 * C145 + C2753 + C2753 +
                 C2723 * C161) *
                    C153513 * C153812) *
                   C153413 * C1131) *
                  C1134 +
              (((C2729 * C146 + C2754 + C2754 + C2723 * C162 + C2731 * C147 +
                 C2755 + C2755 + C2724 * C163 + C2733 * C148 + C2756 + C2756 +
                 C153761 * C164) *
                    C153513 * C153812 +
                (C3621 + C3622 + C3623) * C153513 * C153800 +
                (C3624 + C3625 + C3626) * C153513 * C153774) *
                   C153413 * C1131 -
               ((C2733 * C1223 + C3606 + C3606 + C153761 * C1233 +
                 C2731 * C1224 + C3607 + C3607 + C2724 * C1234 + C2729 * C1225 +
                 C3608 + C3608 + C2723 * C1235) *
                    C153513 * C153774 +
                (C3626 + C3625 + C3624) * C153513 * C153800 +
                (C3623 + C3622 + C3621) * C153513 * C153812) *
                   C153413 * C153449) *
                  C1135) -
         0.25 * std::pow(Pi, 2.5) *
             (((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 +
                C2737 + C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
                C153761 * C162) *
                   C153513 * C153812 +
               (C3086 + C3087 + C3088) * C153513 * C153800 + C3108 * C153774) *
                  C153413 * C1218 -
              (C4609 * C153774 + (C3091 + C3090 + C3089) * C153513 * C153800 +
               (C3088 + C3087 + C3086) * C153513 * C153812) *
                  C153413 * C1219 +
              (C3108 * C153812 + (C3094 + C3093 + C3092) * C153513 * C153800 +
               (C4613 + C4614 + C4615) * C153513 * C153774) *
                  C153413 * C1220 -
              ((C2733 * C4585 + C4602 + C4602 + C153761 * C4591 +
                C2731 * C4586 + C4603 + C4603 + C2724 * C4592 + C2729 * C4587 +
                C4604 + C4604 + C2723 * C4593) *
                   C153513 * C153774 +
               (C4615 + C4614 + C4613) * C153513 * C153800 + C4609 * C153812) *
                  C153413 * C1221) *
             C153378 +
         0.5 * std::pow(Pi, 2.5) *
             ((((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 +
                 C2737 + C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
                 C153761 * C162) *
                    C153513 * C153812 +
                (C3086 + C3087 + C3088) * C153513 * C153800 + C3108 * C153774) *
                   C493 -
               ((C4210 + C4211 + C4212) * C153513 * C153774 +
                (C4213 + C4214 + C4215) * C153513 * C153800 +
                (C2733 * C498 + C3346 + C3346 + C153761 * C522 + C2731 * C499 +
                 C3347 + C3347 + C2724 * C523 + C2729 * C500 + C3348 + C3348 +
                 C2723 * C524) *
                    C153513 * C153812) *
                   C494 +
               ((C2729 * C501 + C3349 + C3349 + C2723 * C525 + C2731 * C502 +
                 C3350 + C3350 + C2724 * C526 + C2733 * C503 + C3351 + C3351 +
                 C153761 * C527) *
                    C153513 * C153812 +
                (C4870 + C4871 + C4872) * C153513 * C153800 +
                (C4873 + C4874 + C4875) * C153513 * C153774) *
                   C495) *
                  C1131 +
              (((C4215 + C4214 + C4213) * C153513 * C153812 +
                (C4212 + C4211 + C4210) * C153513 * C153800 +
                (C2729 * C4143 + C4168 + C4168 + C2723 * C4151 + C2731 * C4144 +
                 C4169 + C4169 + C2724 * C4152 + C2733 * C4145 + C4170 + C4170 +
                 C153761 * C4153) *
                    C153513 * C153774) *
                   C494 -
               (C4609 * C153774 + (C3091 + C3090 + C3089) * C153513 * C153800 +
                (C3088 + C3087 + C3086) * C153513 * C153812) *
                   C493 -
               ((C2733 * C4833 + C4855 + C4855 + C153761 * C4839 +
                 C2731 * C4834 + C4856 + C4856 + C2724 * C4840 + C2729 * C4835 +
                 C4857 + C4857 + C2723 * C4841) *
                    C153513 * C153774 +
                (C4875 + C4874 + C4873) * C153513 * C153800 +
                (C4872 + C4871 + C4870) * C153513 * C153812) *
                   C495) *
                  C153449) *
             C153378 +
         0.5 * std::pow(Pi, 2.5) *
             ((((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 +
                 C2737 + C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
                 C153761 * C162) *
                    C153813 +
                (C7654 + C7655 + C7656) * C153802 + C7674 * C153777) *
                   C153501 * C153413 * C1131 -
               ((C4872 + C4871 + C4870) * C153777 +
                (C4213 + C4214 + C4215) * C153802 +
                (C3088 + C3087 + C3086) * C153813) *
                   C153501 * C153413 * C153449) *
                  C1133 +
              (((C3095 + C3096 + C3097) * C153813 +
                (C4216 + C4217 + C4218) * C153802 +
                (C8456 + C8457 + C8458) * C153777) *
                   C153501 * C153413 * C153449 -
               (C7675 * C153777 + (C7665 + C7664 + C7663) * C153802 +
                (C2733 * C147 + C2751 + C2751 + C153761 * C163 + C2731 * C146 +
                 C2752 + C2752 + C2724 * C162 + C2729 * C145 + C2753 + C2753 +
                 C2723 * C161) *
                    C153813) *
                   C153501 * C153413 * C1131) *
                  C1134 +
              (((C2729 * C146 + C2754 + C2754 + C2723 * C162 + C2731 * C147 +
                 C2755 + C2755 + C2724 * C163 + C2733 * C148 + C2756 + C2756 +
                 C153761 * C164) *
                    C153813 +
                (C8142 + C8143 + C8144) * C153802 +
                (C8145 + C8146 + C8147) * C153777) *
                   C153501 * C153413 * C1131 -
               ((C2733 * C1365 + C7894 + C7894 + C153761 * C1375 +
                 C2731 * C1366 + C7895 + C7895 + C2724 * C1376 + C2729 * C1367 +
                 C7896 + C7896 + C2723 * C1377) *
                    C153777 +
                (C2733 * C985 + C3848 + C3848 + C153761 * C997 + C2731 * C984 +
                 C3849 + C3849 + C2724 * C996 + C2729 * C983 + C3850 + C3850 +
                 C2723 * C995) *
                    C153802 +
                (C3623 + C3622 + C3621) * C153813) *
                   C153501 * C153413 * C153449) *
                  C1135) +
         0.5 * std::pow(Pi, 2.5) *
             (((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 +
                C2737 + C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
                C153761 * C162) *
                   C153813 +
               (C7654 + C7655 + C7656) * C153802 + C7674 * C153777) *
                  C153501 * C153413 * C1218 -
              ((C4872 + C4871 + C4870) * C153777 +
               (C4213 + C4214 + C4215) * C153802 +
               (C3088 + C3087 + C3086) * C153813) *
                  C153501 * C153413 * C1219 +
              (C3106 * C153813 + (C4212 + C4211 + C4210) * C153802 +
               (C4873 + C4874 + C4875) * C153777) *
                  C153501 * C153413 * C1220 -
              ((C2733 * C4833 + C4855 + C4855 + C153761 * C4839 +
                C2731 * C4834 + C4856 + C4856 + C2724 * C4840 + C2729 * C4835 +
                C4857 + C4857 + C2723 * C4841) *
                   C153777 +
               (C5631 + C5630 + C5629) * C153802 + C4605 * C153813) *
                  C153501 * C153413 * C1221) *
             C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 +
             C2737 + C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
             C153761 * C162) *
                C153813 +
            (C7654 + C7655 + C7656) * C153802 + C7674 * C153777) *
               C153501 * C493 -
           ((C7660 + C7661 + C7662) * C153777 +
            (C7659 + C7658 + C7657) * C153802 +
            (C7656 + C7655 + C7654) * C153813) *
               C153501 * C494 +
           (C7674 * C153813 + (C7662 + C7661 + C7660) * C153802 +
            (C2729 * C7560 + C7591 + C7591 + C2723 * C7568 + C2731 * C7561 +
             C7592 + C7592 + C2724 * C7569 + C2733 * C7562 + C7593 + C7593 +
             C153761 * C7570) *
                C153777) *
               C153501 * C495) *
              C1131 +
          (((C4215 + C4214 + C4213) * C153813 +
            (C4870 + C4871 + C4872) * C153802 +
            (C9067 + C9068 + C9069) * C153777) *
               C153501 * C494 -
           (C9063 * C153777 + (C4213 + C4214 + C4215) * C153802 +
            (C3088 + C3087 + C3086) * C153813) *
               C153501 * C493 -
           ((C2733 * C9040 + C9057 + C9057 + C153761 * C9046 + C2731 * C9041 +
             C9058 + C9058 + C2724 * C9047 + C2729 * C9042 + C9059 + C9059 +
             C2723 * C9048) *
                C153777 +
            (C9069 + C9068 + C9067) * C153802 + C9063 * C153813) *
               C153501 * C495) *
              C153449) *
         C153378) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         ((((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
             C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 +
             C23999 + C153761 * C162) *
                C153513 * C23987 +
            (C24335 + C24336 + C24337) * C153513 * C23988 + C24357 * C153774) *
               C153413 * C1131 -
           ((C24341 + C24342 + C24343) * C153513 * C153774 +
            (C24340 + C24339 + C24338) * C153513 * C23988 +
            (C24337 + C24336 + C24335) * C153513 * C23987) *
               C153413 * C153449) *
              C1133 +
          (((C24344 + C24345 + C24346) * C153513 * C23987 +
            (C24347 + C24348 + C24349) * C153513 * C23988 +
            (C24350 + C24351 + C24352) * C153513 * C153774) *
               C153413 * C153449 -
           (C24358 * C153774 + (C24346 + C24345 + C24344) * C153513 * C23988 +
            (C23994 * C147 + C24012 + C24012 + C153761 * C163 + C23992 * C146 +
             C24013 + C24013 + C153790 * C162 + C23990 * C145 + C24014 +
             C24014 + C153809 * C161) *
                C153513 * C23987) *
               C153413 * C1131) *
              C1134 +
          (((C23990 * C146 + C24015 + C24015 + C153809 * C162 + C23992 * C147 +
             C24016 + C24016 + C153790 * C163 + C23994 * C148 + C24017 +
             C24017 + C153761 * C164) *
                C153513 * C23987 +
            (C24858 + C24859 + C24860) * C153513 * C23988 +
            (C24861 + C24862 + C24863) * C153513 * C153774) *
               C153413 * C1131 -
           ((C23994 * C1223 + C24843 + C24843 + C153761 * C1233 +
             C23992 * C1224 + C24844 + C24844 + C153790 * C1234 +
             C23990 * C1225 + C24845 + C24845 + C153809 * C1235) *
                C153513 * C153774 +
            (C24863 + C24862 + C24861) * C153513 * C23988 +
            (C24860 + C24859 + C24858) * C153513 * C23987) *
               C153413 * C153449) *
              C1135)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         (((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
            C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 + C23999 +
            C153761 * C162) *
               C153513 * C23987 +
           (C24335 + C24336 + C24337) * C153513 * C23988 + C24357 * C153774) *
              C153413 * C1218 -
          (C25825 * C153774 + (C24340 + C24339 + C24338) * C153513 * C23988 +
           (C24337 + C24336 + C24335) * C153513 * C23987) *
              C153413 * C1219 +
          (C24357 * C23987 + (C24343 + C24342 + C24341) * C153513 * C23988 +
           (C25829 + C25830 + C25831) * C153513 * C153774) *
              C153413 * C1220 -
          ((C23994 * C4585 + C25818 + C25818 + C153761 * C4591 +
            C23992 * C4586 + C25819 + C25819 + C153790 * C4592 +
            C23990 * C4587 + C25820 + C25820 + C153809 * C4593) *
               C153513 * C153774 +
           (C25831 + C25830 + C25829) * C153513 * C23988 + C25825 * C23987) *
              C153413 * C1221) *
         C153378) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
             C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 +
             C23999 + C153761 * C162) *
                C153513 * C23987 +
            (C24335 + C24336 + C24337) * C153513 * C23988 + C24357 * C153774) *
               C493 -
           ((C25435 + C25436 + C25437) * C153513 * C153774 +
            (C25438 + C25439 + C25440) * C153513 * C23988 +
            (C23994 * C498 + C24583 + C24583 + C153761 * C522 + C23992 * C499 +
             C24584 + C24584 + C153790 * C523 + C23990 * C500 + C24585 +
             C24585 + C153809 * C524) *
                C153513 * C23987) *
               C494 +
           ((C23990 * C501 + C24586 + C24586 + C153809 * C525 + C23992 * C502 +
             C24587 + C24587 + C153790 * C526 + C23994 * C503 + C24588 +
             C24588 + C153761 * C527) *
                C153513 * C23987 +
            (C26077 + C26078 + C26079) * C153513 * C23988 +
            (C26080 + C26081 + C26082) * C153513 * C153774) *
               C495) *
              C1131 +
          (((C25440 + C25439 + C25438) * C153513 * C23987 +
            (C25437 + C25436 + C25435) * C153513 * C23988 +
            (C23990 * C4143 + C25393 + C25393 + C153809 * C4151 +
             C23992 * C4144 + C25394 + C25394 + C153790 * C4152 +
             C23994 * C4145 + C25395 + C25395 + C153761 * C4153) *
                C153513 * C153774) *
               C494 -
           (C25825 * C153774 + (C24340 + C24339 + C24338) * C153513 * C23988 +
            (C24337 + C24336 + C24335) * C153513 * C23987) *
               C493 -
           ((C23994 * C4833 + C26062 + C26062 + C153761 * C4839 +
             C23992 * C4834 + C26063 + C26063 + C153790 * C4840 +
             C23990 * C4835 + C26064 + C26064 + C153809 * C4841) *
                C153513 * C153774 +
            (C26082 + C26081 + C26080) * C153513 * C23988 +
            (C26079 + C26078 + C26077) * C153513 * C23987) *
               C495) *
              C153449) *
         C153378) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         ((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153513 *
                C28229 +
            C28439 * C28230 + C28440 * C28231 + C28441 * C28232 +
            C28442 * C28233) *
               C153413 * C1131 -
           (C28443 * C28233 + C28442 * C28232 + C28441 * C28231 +
            C28440 * C28230 + C28439 * C28229) *
               C153413 * C153449) *
              C1133 +
          ((C28444 * C28229 + C28445 * C28230 + C28446 * C28231 +
            C28447 * C28232 + C28448 * C28233) *
               C153413 * C153449 -
           (C28447 * C28233 + C28446 * C28232 + C28445 * C28231 +
            C28444 * C28230 +
            (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C153513 *
                C28229) *
               C153413 * C1131) *
              C1134 +
          (((C28234 * C146 + C28247 + C28247 + C153338 * C162) * C153513 *
                C28229 +
            C28740 * C28230 + C28741 * C28231 + C28742 * C28232 +
            C28743 * C28233) *
               C153413 * C1131 -
           ((C28234 * C4585 + C28727 + C28727 + C153338 * C4591) * C153513 *
                C28233 +
            C28743 * C28232 + C28742 * C28231 + C28741 * C28230 +
            C28740 * C28229) *
               C153413 * C153449) *
              C1135)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         (((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153513 *
               C28229 +
           C28439 * C28230 + C28440 * C28231 + C28441 * C28232 +
           C28442 * C28233) *
              C153413 * C1218 -
          (C28443 * C28233 + C28442 * C28232 + C28441 * C28231 +
           C28440 * C28230 + C28439 * C28229) *
              C153413 * C1219 +
          (C28440 * C28229 + C28441 * C28230 + C28442 * C28231 +
           C28443 * C28232 + C29302 * C28233) *
              C153413 * C1220 -
          ((C28234 * C29292 + C29298 + C29298 + C153338 * C29294) * C153513 *
               C28233 +
           C29302 * C28232 + C28443 * C28231 + C28442 * C28230 +
           C28441 * C28229) *
              C153413 * C1221) *
         C153378) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153513 *
                C28229 +
            C28439 * C28230 + C28440 * C28231 + C28441 * C28232 +
            C28442 * C28233) *
               C493 -
           (C29081 * C28233 + C29082 * C28232 + C29083 * C28231 +
            C29084 * C28230 +
            (C28234 * C500 + C28581 + C28581 + C153338 * C524) * C153513 *
                C28229) *
               C494 +
           ((C28234 * C501 + C28582 + C28582 + C153338 * C525) * C153513 *
                C28229 +
            C29449 * C28230 + C29450 * C28231 + C29451 * C28232 +
            C29452 * C28233) *
               C495) *
              C1131 +
          ((C29084 * C28229 + C29083 * C28230 + C29082 * C28231 +
            C29081 * C28232 +
            (C28234 * C29032 + C29047 + C29047 + C153338 * C29036) * C153513 *
                C28233) *
               C494 -
           (C28443 * C28233 + C28442 * C28232 + C28441 * C28231 +
            C28440 * C28230 + C28439 * C28229) *
               C493 -
           ((C28234 * C29424 + C29436 + C29436 + C153338 * C29426) * C153513 *
                C28233 +
            C29452 * C28232 + C29451 * C28231 + C29450 * C28230 +
            C29449 * C28229) *
               C495) *
              C153449) *
         C153378) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153813 +
             C31295 * C153802 + C31296 * C153777) *
                C23987 +
            (C30985 + C30986 + C30987) * C23988 + C31011 * C153774) *
               C153413 * C1131 -
           ((C30991 + C30992 + C30993) * C153774 +
            (C30990 + C30989 + C30988) * C23988 +
            (C30987 + C30986 + C30985) * C23987) *
               C153413 * C153449) *
              C1133 +
          (((C30994 + C30995 + C31018) * C23987 +
            (C30998 + C30999 + C31019) * C23988 +
            (C31002 + C31003 + C31020) * C153774) *
               C153413 * C153449 -
           (C31021 * C153774 + (C31018 + C30995 + C30994) * C23988 +
            (C31301 * C153777 + C31300 * C153802 +
             (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C153813) *
                C23987) *
               C153413 * C1131) *
              C1134 +
          ((((C28234 * C146 + C28247 + C28247 + C153338 * C162) * C153813 +
             C31779 * C153802 + C31780 * C153777) *
                C23987 +
            (C31523 + C31546 + C31547) * C23988 +
            (C31528 + C31548 + C31549) * C153774) *
               C153413 * C1131 -
           (((C28234 * C4833 + C31533 + C31533 + C153338 * C4839) * C153777 +
             (C28234 * C4145 + C28867 + C28867 + C153338 * C4153) * C153802 +
             C28738 * C153813) *
                C153774 +
            (C31549 + C31548 + C31528) * C23988 +
            (C31547 + C31546 + C31523) * C23987) *
               C153413 * C153449) *
              C1135)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153813 +
            C31295 * C153802 + C31296 * C153777) *
               C23987 +
           (C30985 + C30986 + C30987) * C23988 + C31011 * C153774) *
              C153413 * C1218 -
          (C32455 * C153774 + (C30990 + C30989 + C30988) * C23988 +
           (C30987 + C30986 + C30985) * C23987) *
              C153413 * C1219 +
          (C31011 * C23987 + (C30993 + C30992 + C30991) * C23988 +
           (C32452 + C32453 + C32454) * C153774) *
              C153413 * C1220 -
          (((C28234 * C29424 + C29436 + C29436 + C153338 * C29426) * C153777 +
            C29867 * C153802 + C28433 * C153813) *
               C153774 +
           (C32454 + C32453 + C32452) * C23988 + C32455 * C23987) *
              C153413 * C1221) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153813 +
             C31295 * C153802 + C31296 * C153777) *
                C23987 +
            (C30985 + C30986 + C30987) * C23988 + C31011 * C153774) *
               C493 -
           ((C32074 + C32075 + C32076) * C153774 +
            (C32077 + C32078 + C32079) * C23988 +
            (C31299 * C153777 + C31296 * C153802 + C31295 * C153813) * C23987) *
               C494 +
           ((C31296 * C153813 + C31299 * C153802 +
             (C28234 * C7560 + C31256 + C31256 + C153338 * C7568) * C153777) *
                C23987 +
            (C32677 + C32678 + C32697) * C23988 +
            (C32681 + C32682 + C32698) * C153774) *
               C495) *
              C1131 +
          (((C32079 + C32078 + C32077) * C23987 +
            (C32076 + C32075 + C32074) * C23988 +
            (C29074 * C153813 + C29447 * C153802 + C32696 * C153777) *
                C153774) *
               C494 -
           (C32455 * C153774 + (C30990 + C30989 + C30988) * C23988 +
            (C30987 + C30986 + C30985) * C23987) *
               C493 -
           (((C28234 * C32673 + C32687 + C32687 + C153338 * C32675) * C153777 +
             C32696 * C153802 + C29447 * C153813) *
                C153774 +
            (C32698 + C32682 + C32681) * C23988 +
            (C32697 + C32678 + C32677) * C23987) *
               C495) *
              C153449) *
         C153378) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
             C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 +
             C23999 + C153761 * C162) *
                C47673 +
            (C48203 + C48204 + C48205) * C47674 + C48223 * C153777) *
               C153501 * C153413 * C1131 -
           ((C26079 + C26078 + C26077) * C153777 +
            (C25438 + C25439 + C25440) * C47674 +
            (C24337 + C24336 + C24335) * C47673) *
               C153501 * C153413 * C153449) *
              C1133 +
          (((C24344 + C24345 + C24346) * C47673 +
            (C25441 + C25442 + C25443) * C47674 +
            (C49002 + C49003 + C49004) * C153777) *
               C153501 * C153413 * C153449 -
           (C48224 * C153777 + (C48214 + C48213 + C48212) * C47674 +
            (C23994 * C147 + C24012 + C24012 + C153761 * C163 + C23992 * C146 +
             C24013 + C24013 + C153790 * C162 + C23990 * C145 + C24014 +
             C24014 + C153809 * C161) *
                C47673) *
               C153501 * C153413 * C1131) *
              C1134 +
          (((C23990 * C146 + C24015 + C24015 + C153809 * C162 + C23992 * C147 +
             C24016 + C24016 + C153790 * C163 + C23994 * C148 + C24017 +
             C24017 + C153761 * C164) *
                C47673 +
            (C48691 + C48692 + C48693) * C47674 +
            (C48694 + C48695 + C48696) * C153777) *
               C153501 * C153413 * C1131 -
           ((C23994 * C1365 + C48443 + C48443 + C153761 * C1375 +
             C23992 * C1366 + C48444 + C48444 + C153790 * C1376 +
             C23990 * C1367 + C48445 + C48445 + C153809 * C1377) *
                C153777 +
            (C23994 * C985 + C25085 + C25085 + C153761 * C997 + C23992 * C984 +
             C25086 + C25086 + C153790 * C996 + C23990 * C983 + C25087 +
             C25087 + C153809 * C995) *
                C47674 +
            (C24860 + C24859 + C24858) * C47673) *
               C153501 * C153413 * C153449) *
              C1135)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
            C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 + C23999 +
            C153761 * C162) *
               C47673 +
           (C48203 + C48204 + C48205) * C47674 + C48223 * C153777) *
              C153501 * C153413 * C1218 -
          ((C26079 + C26078 + C26077) * C153777 +
           (C25438 + C25439 + C25440) * C47674 +
           (C24337 + C24336 + C24335) * C47673) *
              C153501 * C153413 * C1219 +
          (C24355 * C47673 + (C25437 + C25436 + C25435) * C47674 +
           (C26080 + C26081 + C26082) * C153777) *
              C153501 * C153413 * C1220 -
          ((C23994 * C4833 + C26062 + C26062 + C153761 * C4839 +
            C23992 * C4834 + C26063 + C26063 + C153790 * C4840 +
            C23990 * C4835 + C26064 + C26064 + C153809 * C4841) *
               C153777 +
           (C26829 + C26828 + C26827) * C47674 + C25821 * C47673) *
              C153501 * C153413 * C1221) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
             C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 +
             C23999 + C153761 * C162) *
                C47673 +
            (C48203 + C48204 + C48205) * C47674 + C48223 * C153777) *
               C153501 * C493 -
           ((C48209 + C48210 + C48211) * C153777 +
            (C48208 + C48207 + C48206) * C47674 +
            (C48205 + C48204 + C48203) * C47673) *
               C153501 * C494 +
           (C48223 * C47673 + (C48211 + C48210 + C48209) * C47674 +
            (C23990 * C7560 + C48140 + C48140 + C153809 * C7568 +
             C23992 * C7561 + C48141 + C48141 + C153790 * C7569 +
             C23994 * C7562 + C48142 + C48142 + C153761 * C7570) *
                C153777) *
               C153501 * C495) *
              C1131 +
          (((C25440 + C25439 + C25438) * C47673 +
            (C26077 + C26078 + C26079) * C47674 +
            (C49604 + C49605 + C49606) * C153777) *
               C153501 * C494 -
           (C49600 * C153777 + (C25438 + C25439 + C25440) * C47674 +
            (C24337 + C24336 + C24335) * C47673) *
               C153501 * C493 -
           ((C23994 * C9040 + C49594 + C49594 + C153761 * C9046 +
             C23992 * C9041 + C49595 + C49595 + C153790 * C9047 +
             C23990 * C9042 + C49596 + C49596 + C153809 * C9048) *
                C153777 +
            (C49606 + C49605 + C49604) * C47674 + C49600 * C47673) *
               C153501 * C495) *
              C153449) *
         C153378) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C47673 +
             C31295 * C47674 + C31296 * C153777) *
                C153812 +
            (C52025 + C52026 + C52027) * C153800 + C52045 * C153774) *
               C153413 * C1131 -
           ((C52031 + C52032 + C52033) * C153774 +
            (C52030 + C52029 + C52028) * C153800 +
            (C52027 + C52026 + C52025) * C153812) *
               C153413 * C153449) *
              C1133 +
          (((C52034 + C52035 + C52036) * C153812 +
            (C52037 + C52038 + C52039) * C153800 +
            (C52040 + C52041 + C52042) * C153774) *
               C153413 * C153449 -
           (C52046 * C153774 + (C52036 + C52035 + C52034) * C153800 +
            (C31301 * C153777 + C31300 * C47674 +
             (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C47673) *
                C153812) *
               C153413 * C1131) *
              C1134 +
          ((((C28234 * C146 + C28247 + C28247 + C153338 * C162) * C47673 +
             C31779 * C47674 + C31780 * C153777) *
                C153812 +
            (C52483 + C52484 + C52485) * C153800 +
            (C52486 + C52487 + C52488) * C153774) *
               C153413 * C1131 -
           (((C28234 * C4833 + C31533 + C31533 + C153338 * C4839) * C153777 +
             C44720 * C47674 + C28738 * C47673) *
                C153774 +
            (C52488 + C52487 + C52486) * C153800 +
            (C52485 + C52484 + C52483) * C153812) *
               C153413 * C153449) *
              C1135)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C47673 +
            C31295 * C47674 + C31296 * C153777) *
               C153812 +
           (C52025 + C52026 + C52027) * C153800 + C52045 * C153774) *
              C153413 * C1218 -
          (C53377 * C153774 + (C52030 + C52029 + C52028) * C153800 +
           (C52027 + C52026 + C52025) * C153812) *
              C153413 * C1219 +
          (C52045 * C153812 + (C52033 + C52032 + C52031) * C153800 +
           (C53374 + C53375 + C53376) * C153774) *
              C153413 * C1220 -
          (((C28234 * C29424 + C29436 + C29436 + C153338 * C29426) * C153777 +
            C29867 * C47674 + C28433 * C47673) *
               C153774 +
           (C53376 + C53375 + C53374) * C153800 + C53377 * C153812) *
              C153413 * C1221) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C47673 +
             C31295 * C47674 + C31296 * C153777) *
                C153812 +
            (C52025 + C52026 + C52027) * C153800 + C52045 * C153774) *
               C493 -
           ((C52997 + C52998 + C52999) * C153774 +
            (C53000 + C53001 + C53002) * C153800 +
            (C31299 * C153777 + C31296 * C47674 + C31295 * C47673) * C153812) *
               C494 +
           ((C31296 * C47673 + C31299 * C47674 + C34025 * C153777) * C153812 +
            (C53596 + C53597 + C53598) * C153800 +
            (C53599 + C53600 + C53601) * C153774) *
               C495) *
              C1131 +
          (((C53002 + C53001 + C53000) * C153812 +
            (C52999 + C52998 + C52997) * C153800 +
            (C29074 * C47673 + C29447 * C47674 + C32696 * C153777) * C153774) *
               C494 -
           (C53377 * C153774 + (C52030 + C52029 + C52028) * C153800 +
            (C52027 + C52026 + C52025) * C153812) *
               C493 -
           (((C28234 * C32673 + C32687 + C32687 + C153338 * C32675) * C153777 +
             C32696 * C47674 + C29447 * C47673) *
                C153774 +
            (C53601 + C53600 + C53599) * C153800 +
            (C53598 + C53597 + C53596) * C153812) *
               C495) *
              C153449) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C55722 +
            C31295 * C55723 + C31296 * C55724 + C31299 * C55725 +
            C34025 * C55726) *
               C153501 * C153413 * C1131 -
           (C32694 * C55726 + C31298 * C55725 + C29445 * C55724 +
            C29076 * C55723 + C28429 * C55722) *
               C153501 * C153413 * C153449) *
              C1133 +
          ((C28434 * C55722 + C29077 * C55723 + C31015 * C55724 +
            C31303 * C55725 + C56425 * C55726) *
               C153501 * C153413 * C153449 -
           (C55997 * C55726 + C31302 * C55725 + C31301 * C55724 +
            C31300 * C55723 +
            (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C55722) *
               C153501 * C153413 * C1131) *
              C1134 +
          (((C28234 * C146 + C28247 + C28247 + C153338 * C162) * C55722 +
            C31779 * C55723 + C31780 * C55724 + C56253 * C55725 +
            C56254 * C55726) *
               C153501 * C153413 * C1131 -
           ((C28234 * C9040 + C56121 + C56121 + C153338 * C9046) * C55726 +
            (C28234 * C6216 + C31773 + C31773 + C153338 * C6228) * C55725 +
            C31543 * C55724 + C31542 * C55723 + C28736 * C55722) *
               C153501 * C153413 * C153449) *
              C1135)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C55722 +
           C31295 * C55723 + C31296 * C55724 + C31299 * C55725 +
           C34025 * C55726) *
              C153501 * C153413 * C1218 -
          (C32694 * C55726 + C31298 * C55725 + C29445 * C55724 +
           C29076 * C55723 + C28429 * C55722) *
              C153501 * C153413 * C1219 +
          (C28430 * C55722 + C29075 * C55723 + C29446 * C55724 +
           C31297 * C55725 + C32695 * C55726) *
              C153501 * C153413 * C1220 -
          ((C28234 * C32673 + C32687 + C32687 + C153338 * C32675) * C55726 +
           C32696 * C55725 + C29447 * C55724 + C29074 * C55723 +
           C28431 * C55722) *
              C153501 * C153413 * C1221) *
         C153378) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C55722 +
            C31295 * C55723 + C31296 * C55724 + C31299 * C55725 +
            C34025 * C55726) *
               C153501 * C493 -
           (C55996 * C55726 + C34025 * C55725 + C31299 * C55724 +
            C31296 * C55723 + C31295 * C55722) *
               C153501 * C494 +
           (C31296 * C55722 + C31299 * C55723 + C34025 * C55724 +
            C55996 * C55725 +
            (C28234 * C55974 + C55983 + C55983 + C153338 * C55978) * C55726) *
               C153501 * C495) *
              C1131 +
          ((C29076 * C55722 + C29445 * C55723 + C31298 * C55724 +
            C32694 * C55725 + C56760 * C55726) *
               C153501 * C494 -
           (C32694 * C55726 + C31298 * C55725 + C29445 * C55724 +
            C29076 * C55723 + C28429 * C55722) *
               C153501 * C493 -
           ((C28234 * C56751 + C56757 + C56757 + C153338 * C56753) * C55726 +
            C56760 * C55725 + C32694 * C55724 + C31298 * C55723 +
            C29445 * C55722) *
               C153501 * C495) *
              C153449) *
         C153378) /
            (p * q * std::sqrt(p + q));
    d2ee[188] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C144 + C169 + C169 + C121 * C160 + C136 * C145 + C170 +
                 C170 + C122 * C161 + C138 * C146 + C171 + C171 + C123 * C162 +
                 C140 * C147 + C172 + C172 + C124 * C163 + C142 * C148 + C173 +
                 C173 + C125 * C164) *
                    C153513 * C153501 * C153725 -
                (C142 * C496 + C533 + C533 + C125 * C520 + C140 * C497 + C534 +
                 C534 + C124 * C521 + C138 * C498 + C535 + C535 + C123 * C522 +
                 C136 * C499 + C536 + C536 + C122 * C523 + C134 * C500 + C537 +
                 C537 + C121 * C524) *
                    C153513 * C153501 * C153477) *
                   C1131 +
               ((C134 * C981 + C1000 + C1000 + C121 * C993 + C136 * C982 +
                 C1001 + C1001 + C122 * C994 + C138 * C983 + C1002 + C1002 +
                 C123 * C995 + C140 * C984 + C1003 + C1003 + C124 * C996 +
                 C142 * C985 + C1004 + C1004 + C125 * C997) *
                    C153513 * C153501 * C153477 -
                (C142 * C315 + C352 + C352 + C125 * C339 + C140 * C316 + C353 +
                 C353 + C124 * C340 + C138 * C317 + C354 + C354 + C123 * C341 +
                 C136 * C318 + C355 + C355 + C122 * C342 + C134 * C319 + C356 +
                 C356 + C121 * C343) *
                    C153513 * C153501 * C153725) *
                   C153449) *
                  C153716 +
              (((C134 * C499 + C543 + C543 + C121 * C523 + C136 * C498 + C544 +
                 C544 + C122 * C522 + C138 * C497 + C545 + C545 + C123 * C521 +
                 C140 * C496 + C546 + C546 + C124 * C520 + C142 * C506 + C547 +
                 C547 + C125 * C530) *
                    C153513 * C153501 * C153477 -
                (C142 * C149 + C174 + C174 + C125 * C165 + C140 * C148 + C175 +
                 C175 + C124 * C164 + C138 * C147 + C176 + C176 + C123 * C163 +
                 C136 * C146 + C177 + C177 + C122 * C162 + C134 * C145 + C178 +
                 C178 + C121 * C161) *
                    C153513 * C153501 * C153725) *
                   C1131 +
               ((C134 * C318 + C362 + C362 + C121 * C342 + C136 * C317 + C363 +
                 C363 + C122 * C341 + C138 * C316 + C364 + C364 + C123 * C340 +
                 C140 * C315 + C365 + C365 + C124 * C339 + C142 * C325 + C366 +
                 C366 + C125 * C349) *
                    C153513 * C153501 * C153725 -
                (C142 * C986 + C1005 + C1005 + C125 * C998 + C140 * C985 +
                 C1006 + C1006 + C124 * C997 + C138 * C984 + C1007 + C1007 +
                 C123 * C996 + C136 * C983 + C1008 + C1008 + C122 * C995 +
                 C134 * C982 + C1009 + C1009 + C121 * C994) *
                    C153513 * C153501 * C153477) *
                   C153449) *
                  C153384) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 +
                  C2737 + C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
                  C153761 * C162) *
                     C153513 * C153812 +
                 (C3086 + C3087 + C3088) * C153513 * C153800 +
                 C3108 * C153774) *
                    C153725 -
                ((C4210 + C4211 + C4212) * C153513 * C153774 +
                 (C4213 + C4214 + C4215) * C153513 * C153800 +
                 (C2733 * C498 + C3346 + C3346 + C153761 * C522 + C2731 * C499 +
                  C3347 + C3347 + C2724 * C523 + C2729 * C500 + C3348 + C3348 +
                  C2723 * C524) *
                     C153513 * C153812) *
                    C153477) *
                   C1131 +
               (((C4215 + C4214 + C4213) * C153513 * C153812 +
                 (C4212 + C4211 + C4210) * C153513 * C153800 +
                 (C2729 * C4143 + C4168 + C4168 + C2723 * C4151 +
                  C2731 * C4144 + C4169 + C4169 + C2724 * C4152 +
                  C2733 * C4145 + C4170 + C4170 + C153761 * C4153) *
                     C153513 * C153774) *
                    C153477 -
                (C4609 * C153774 + (C3091 + C3090 + C3089) * C153513 * C153800 +
                 (C3088 + C3087 + C3086) * C153513 * C153812) *
                    C153725) *
                   C153449) *
                  C153716 +
              ((((C2729 * C499 + C3358 + C3358 + C2723 * C523 + C2731 * C498 +
                  C3359 + C3359 + C2724 * C522 + C2733 * C497 + C3360 + C3360 +
                  C153761 * C521) *
                     C153513 * C153812 +
                 (C4216 + C4217 + C4218) * C153513 * C153800 +
                 (C4219 + C4220 + C4221) * C153513 * C153774) *
                    C153477 -
                (C3109 * C153774 + (C3097 + C3096 + C3095) * C153513 * C153800 +
                 (C2733 * C147 + C2751 + C2751 + C153761 * C163 + C2731 * C146 +
                  C2752 + C2752 + C2724 * C162 + C2729 * C145 + C2753 + C2753 +
                  C2723 * C161) *
                     C153513 * C153812) *
                    C153725) *
                   C1131 +
               (((C3095 + C3096 + C3097) * C153513 * C153812 +
                 (C3098 + C3099 + C3100) * C153513 * C153800 +
                 (C3101 + C3102 + C3103) * C153513 * C153774) *
                    C153725 -
                ((C2733 * C4146 + C4183 + C4183 + C153761 * C4154 +
                  C2731 * C4145 + C4184 + C4184 + C2724 * C4153 +
                  C2729 * C4144 + C4185 + C4185 + C2723 * C4152) *
                     C153513 * C153774 +
                 (C4221 + C4220 + C4219) * C153513 * C153800 +
                 (C4218 + C4217 + C4216) * C153513 * C153812) *
                    C153477) *
                   C153449) *
                  C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 +
              C2737 + C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
              C153761 * C162) *
                 C153813 +
             (C7654 + C7655 + C7656) * C153802 + C7674 * C153777) *
                C153501 * C153725 -
            ((C7660 + C7661 + C7662) * C153777 +
             (C7659 + C7658 + C7657) * C153802 +
             (C7656 + C7655 + C7654) * C153813) *
                C153501 * C153477) *
               C1131 +
           (((C4215 + C4214 + C4213) * C153813 +
             (C4870 + C4871 + C4872) * C153802 +
             (C9067 + C9068 + C9069) * C153777) *
                C153501 * C153477 -
            (C9063 * C153777 + (C4213 + C4214 + C4215) * C153802 +
             (C3088 + C3087 + C3086) * C153813) *
                C153501 * C153725) *
               C153449) *
              C153716 +
          ((((C7663 + C7664 + C7665) * C153813 +
             (C7666 + C7667 + C7668) * C153802 +
             (C7669 + C7670 + C7671) * C153777) *
                C153501 * C153477 -
            (C7675 * C153777 + (C7665 + C7664 + C7663) * C153802 +
             (C2733 * C147 + C2751 + C2751 + C153761 * C163 + C2731 * C146 +
              C2752 + C2752 + C2724 * C162 + C2729 * C145 + C2753 + C2753 +
              C2723 * C161) *
                 C153813) *
                C153501 * C153725) *
               C1131 +
           (((C3095 + C3096 + C3097) * C153813 +
             (C4216 + C4217 + C4218) * C153802 +
             (C8456 + C8457 + C8458) * C153777) *
                C153501 * C153725 -
            ((C2733 * C8437 + C8447 + C8447 + C153761 * C8439 + C2731 * C6216 +
              C8448 + C8448 + C2724 * C6228 + C2729 * C6217 + C8449 + C8449 +
              C2723 * C6229) *
                 C153777 +
             (C8458 + C8457 + C8456) * C153802 +
             (C4218 + C4217 + C4216) * C153813) *
                C153501 * C153477) *
               C153449) *
              C153384)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
              C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 +
              C23999 + C153761 * C162) *
                 C153513 * C23987 +
             (C24335 + C24336 + C24337) * C153513 * C23988 + C24357 * C153774) *
                C153725 -
            ((C25435 + C25436 + C25437) * C153513 * C153774 +
             (C25438 + C25439 + C25440) * C153513 * C23988 +
             (C23994 * C498 + C24583 + C24583 + C153761 * C522 + C23992 * C499 +
              C24584 + C24584 + C153790 * C523 + C23990 * C500 + C24585 +
              C24585 + C153809 * C524) *
                 C153513 * C23987) *
                C153477) *
               C1131 +
           (((C25440 + C25439 + C25438) * C153513 * C23987 +
             (C25437 + C25436 + C25435) * C153513 * C23988 +
             (C23990 * C4143 + C25393 + C25393 + C153809 * C4151 +
              C23992 * C4144 + C25394 + C25394 + C153790 * C4152 +
              C23994 * C4145 + C25395 + C25395 + C153761 * C4153) *
                 C153513 * C153774) *
                C153477 -
            (C25825 * C153774 + (C24340 + C24339 + C24338) * C153513 * C23988 +
             (C24337 + C24336 + C24335) * C153513 * C23987) *
                C153725) *
               C153449) *
              C153716 +
          ((((C23990 * C499 + C24595 + C24595 + C153809 * C523 + C23992 * C498 +
              C24596 + C24596 + C153790 * C522 + C23994 * C497 + C24597 +
              C24597 + C153761 * C521) *
                 C153513 * C23987 +
             (C25441 + C25442 + C25443) * C153513 * C23988 +
             (C25444 + C25445 + C25446) * C153513 * C153774) *
                C153477 -
            (C24358 * C153774 + (C24346 + C24345 + C24344) * C153513 * C23988 +
             (C23994 * C147 + C24012 + C24012 + C153761 * C163 + C23992 * C146 +
              C24013 + C24013 + C153790 * C162 + C23990 * C145 + C24014 +
              C24014 + C153809 * C161) *
                 C153513 * C23987) *
                C153725) *
               C1131 +
           (((C24344 + C24345 + C24346) * C153513 * C23987 +
             (C24347 + C24348 + C24349) * C153513 * C23988 +
             (C24350 + C24351 + C24352) * C153513 * C153774) *
                C153725 -
            ((C23994 * C4146 + C25408 + C25408 + C153761 * C4154 +
              C23992 * C4145 + C25409 + C25409 + C153790 * C4153 +
              C23990 * C4144 + C25410 + C25410 + C153809 * C4152) *
                 C153513 * C153774 +
             (C25446 + C25445 + C25444) * C153513 * C23988 +
             (C25443 + C25442 + C25441) * C153513 * C23987) *
                C153477) *
               C153449) *
              C153384)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153513 *
                 C28229 +
             C28439 * C28230 + C28440 * C28231 + C28441 * C28232 +
             C28442 * C28233) *
                C153725 -
            (C29081 * C28233 + C29082 * C28232 + C29083 * C28231 +
             C29084 * C28230 +
             (C28234 * C500 + C28581 + C28581 + C153338 * C524) * C153513 *
                 C28229) *
                C153477) *
               C1131 +
           ((C29084 * C28229 + C29083 * C28230 + C29082 * C28231 +
             C29081 * C28232 +
             (C28234 * C29032 + C29047 + C29047 + C153338 * C29036) * C153513 *
                 C28233) *
                C153477 -
            (C28443 * C28233 + C28442 * C28232 + C28441 * C28231 +
             C28440 * C28230 + C28439 * C28229) *
                C153725) *
               C153449) *
              C153716 +
          ((((C28234 * C499 + C28587 + C28587 + C153338 * C523) * C153513 *
                 C28229 +
             C29085 * C28230 + C29086 * C28231 + C29087 * C28232 +
             C29088 * C28233) *
                C153477 -
            (C28447 * C28233 + C28446 * C28232 + C28445 * C28231 +
             C28444 * C28230 +
             (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C153513 *
                 C28229) *
                C153725) *
               C1131 +
           ((C28444 * C28229 + C28445 * C28230 + C28446 * C28231 +
             C28447 * C28232 + C28448 * C28233) *
                C153725 -
            ((C28234 * C29033 + C29056 + C29056 + C153338 * C29037) * C153513 *
                 C28233 +
             C29088 * C28232 + C29087 * C28231 + C29086 * C28230 +
             C29085 * C28229) *
                C153477) *
               C153449) *
              C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153813 +
              C31295 * C153802 + C31296 * C153777) *
                 C23987 +
             (C30985 + C30986 + C30987) * C23988 + C31011 * C153774) *
                C153725 -
            ((C32074 + C32075 + C32076) * C153774 +
             (C32077 + C32078 + C32079) * C23988 +
             (C31299 * C153777 + C31296 * C153802 + C31295 * C153813) *
                 C23987) *
                C153477) *
               C1131 +
           (((C32079 + C32078 + C32077) * C23987 +
             (C32076 + C32075 + C32074) * C23988 +
             (C29074 * C153813 + C29447 * C153802 + C32696 * C153777) *
                 C153774) *
                C153477 -
            (C32455 * C153774 + (C30990 + C30989 + C30988) * C23988 +
             (C30987 + C30986 + C30985) * C23987) *
                C153725) *
               C153449) *
              C153716 +
          ((((C31300 * C153813 + C31301 * C153802 + C31302 * C153777) * C23987 +
             (C32080 + C32081 + C32082) * C23988 +
             (C32083 + C32084 + C32085) * C153774) *
                C153477 -
            (C31021 * C153774 + (C31018 + C30995 + C30994) * C23988 +
             (C31301 * C153777 + C31300 * C153802 +
              (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C153813) *
                 C23987) *
                C153725) *
               C1131 +
           (((C30994 + C30995 + C31018) * C23987 +
             (C30998 + C30999 + C31019) * C23988 +
             (C31002 + C31003 + C31020) * C153774) *
                C153725 -
            (((C28234 * C32070 + C32086 + C32086 + C153338 * C32072) * C153777 +
              C31017 * C153802 + C29079 * C153813) *
                 C153774 +
             (C32085 + C32084 + C32083) * C23988 +
             (C32082 + C32081 + C32080) * C23987) *
                C153477) *
               C153449) *
              C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
              C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 +
              C23999 + C153761 * C162) *
                 C47673 +
             (C48203 + C48204 + C48205) * C47674 + C48223 * C153777) *
                C153501 * C153725 -
            ((C48209 + C48210 + C48211) * C153777 +
             (C48208 + C48207 + C48206) * C47674 +
             (C48205 + C48204 + C48203) * C47673) *
                C153501 * C153477) *
               C1131 +
           (((C25440 + C25439 + C25438) * C47673 +
             (C26077 + C26078 + C26079) * C47674 +
             (C49604 + C49605 + C49606) * C153777) *
                C153501 * C153477 -
            (C49600 * C153777 + (C25438 + C25439 + C25440) * C47674 +
             (C24337 + C24336 + C24335) * C47673) *
                C153501 * C153725) *
               C153449) *
              C153716 +
          ((((C48212 + C48213 + C48214) * C47673 +
             (C48215 + C48216 + C48217) * C47674 +
             (C48218 + C48219 + C48220) * C153777) *
                C153501 * C153477 -
            (C48224 * C153777 + (C48214 + C48213 + C48212) * C47674 +
             (C23994 * C147 + C24012 + C24012 + C153761 * C163 + C23992 * C146 +
              C24013 + C24013 + C153790 * C162 + C23990 * C145 + C24014 +
              C24014 + C153809 * C161) *
                 C47673) *
                C153501 * C153725) *
               C1131 +
           (((C24344 + C24345 + C24346) * C47673 +
             (C25441 + C25442 + C25443) * C47674 +
             (C49002 + C49003 + C49004) * C153777) *
                C153501 * C153725 -
            ((C23994 * C8437 + C48993 + C48993 + C153761 * C8439 +
              C23992 * C6216 + C48994 + C48994 + C153790 * C6228 +
              C23990 * C6217 + C48995 + C48995 + C153809 * C6229) *
                 C153777 +
             (C49004 + C49003 + C49002) * C47674 +
             (C25443 + C25442 + C25441) * C47673) *
                C153501 * C153477) *
               C153449) *
              C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C47673 +
              C31295 * C47674 + C31296 * C153777) *
                 C153812 +
             (C52025 + C52026 + C52027) * C153800 + C52045 * C153774) *
                C153725 -
            ((C52997 + C52998 + C52999) * C153774 +
             (C53000 + C53001 + C53002) * C153800 +
             (C31299 * C153777 + C31296 * C47674 + C31295 * C47673) * C153812) *
                C153477) *
               C1131 +
           (((C53002 + C53001 + C53000) * C153812 +
             (C52999 + C52998 + C52997) * C153800 +
             (C29074 * C47673 + C29447 * C47674 + C32696 * C153777) * C153774) *
                C153477 -
            (C53377 * C153774 + (C52030 + C52029 + C52028) * C153800 +
             (C52027 + C52026 + C52025) * C153812) *
                C153725) *
               C153449) *
              C153716 +
          ((((C31300 * C47673 + C31301 * C47674 + C31302 * C153777) * C153812 +
             (C53003 + C53004 + C53005) * C153800 +
             (C53006 + C53007 + C53008) * C153774) *
                C153477 -
            (C52046 * C153774 + (C52036 + C52035 + C52034) * C153800 +
             (C31301 * C153777 + C31300 * C47674 +
              (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C47673) *
                 C153812) *
                C153725) *
               C1131 +
           (((C52034 + C52035 + C52036) * C153812 +
             (C52037 + C52038 + C52039) * C153800 +
             (C52040 + C52041 + C52042) * C153774) *
                C153725 -
            (((C28234 * C32070 + C32086 + C32086 + C153338 * C32072) * C153777 +
              C31017 * C47674 + C29079 * C47673) *
                 C153774 +
             (C53008 + C53007 + C53006) * C153800 +
             (C53005 + C53004 + C53003) * C153812) *
                C153477) *
               C153449) *
              C153384)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C55722 +
             C31295 * C55723 + C31296 * C55724 + C31299 * C55725 +
             C34025 * C55726) *
                C153501 * C153725 -
            (C55996 * C55726 + C34025 * C55725 + C31299 * C55724 +
             C31296 * C55723 + C31295 * C55722) *
                C153501 * C153477) *
               C1131 +
           ((C29076 * C55722 + C29445 * C55723 + C31298 * C55724 +
             C32694 * C55725 + C56760 * C55726) *
                C153501 * C153477 -
            (C32694 * C55726 + C31298 * C55725 + C29445 * C55724 +
             C29076 * C55723 + C28429 * C55722) *
                C153501 * C153725) *
               C153449) *
              C153716 +
          (((C31300 * C55722 + C31301 * C55723 + C31302 * C55724 +
             C55997 * C55725 + C55998 * C55726) *
                C153501 * C153477 -
            (C55997 * C55726 + C31302 * C55725 + C31301 * C55724 +
             C31300 * C55723 +
             (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C55722) *
                C153501 * C153725) *
               C1131 +
           ((C28434 * C55722 + C29077 * C55723 + C31015 * C55724 +
             C31303 * C55725 + C56425 * C55726) *
                C153501 * C153725 -
            ((C28234 * C56416 + C56422 + C56422 + C153338 * C56418) * C55726 +
             C56425 * C55725 + C31303 * C55724 + C31015 * C55723 +
             C29077 * C55722) *
                C153501 * C153477) *
               C153449) *
              C153384)) /
            (p * q * std::sqrt(p + q));
    d2ee[189] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C144 + C169 + C169 + C121 * C160 + C136 * C145 + C170 +
            C170 + C122 * C161 + C138 * C146 + C171 + C171 + C123 * C162 +
            C140 * C147 + C172 + C172 + C124 * C163 + C142 * C148 + C173 +
            C173 + C125 * C164) *
               C153513 * C153501 * C153413 * C1131 -
           (C142 * C315 + C352 + C352 + C125 * C339 + C140 * C316 + C353 +
            C353 + C124 * C340 + C138 * C317 + C354 + C354 + C123 * C341 +
            C136 * C318 + C355 + C355 + C122 * C342 + C134 * C319 + C356 +
            C356 + C121 * C343) *
               C153513 * C153501 * C153413 * C153449) *
              C1133 +
          ((C134 * C318 + C362 + C362 + C121 * C342 + C136 * C317 + C363 +
            C363 + C122 * C341 + C138 * C316 + C364 + C364 + C123 * C340 +
            C140 * C315 + C365 + C365 + C124 * C339 + C142 * C325 + C366 +
            C366 + C125 * C349) *
               C153513 * C153501 * C153413 * C153449 -
           (C142 * C149 + C174 + C174 + C125 * C165 + C140 * C148 + C175 +
            C175 + C124 * C164 + C138 * C147 + C176 + C176 + C123 * C163 +
            C136 * C146 + C177 + C177 + C122 * C162 + C134 * C145 + C178 +
            C178 + C121 * C161) *
               C153513 * C153501 * C153413 * C1131) *
              C1134 +
          ((C134 * C146 + C179 + C179 + C121 * C162 + C136 * C147 + C180 +
            C180 + C122 * C163 + C138 * C148 + C181 + C181 + C123 * C164 +
            C140 * C149 + C182 + C182 + C124 * C165 + C142 * C150 + C183 +
            C183 + C125 * C166) *
               C153513 * C153501 * C153413 * C1131 -
           (C142 * C679 + C683 + C683 + C125 * C681 + C140 * C325 + C684 +
            C684 + C124 * C349 + C138 * C315 + C685 + C685 + C123 * C339 +
            C136 * C316 + C686 + C686 + C122 * C340 + C134 * C317 + C687 +
            C687 + C121 * C341) *
               C153513 * C153501 * C153413 * C153449) *
              C1135)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((C134 * C144 + C169 + C169 + C121 * C160 + C136 * C145 + C170 + C170 +
           C122 * C161 + C138 * C146 + C171 + C171 + C123 * C162 + C140 * C147 +
           C172 + C172 + C124 * C163 + C142 * C148 + C173 + C173 +
           C125 * C164) *
              C153513 * C153501 * C153413 * C1218 -
          (C142 * C315 + C352 + C352 + C125 * C339 + C140 * C316 + C353 + C353 +
           C124 * C340 + C138 * C317 + C354 + C354 + C123 * C341 + C136 * C318 +
           C355 + C355 + C122 * C342 + C134 * C319 + C356 + C356 +
           C121 * C343) *
              C153513 * C153501 * C153413 * C1219 +
          (C134 * C320 + C357 + C357 + C121 * C344 + C136 * C321 + C358 + C358 +
           C122 * C345 + C138 * C322 + C359 + C359 + C123 * C346 + C140 * C323 +
           C360 + C360 + C124 * C347 + C142 * C324 + C361 + C361 +
           C125 * C348) *
              C153513 * C153501 * C153413 * C1220 -
          (C142 * C1223 + C1239 + C1239 + C125 * C1233 + C140 * C1224 + C1240 +
           C1240 + C124 * C1234 + C138 * C1225 + C1241 + C1241 + C123 * C1235 +
           C136 * C1226 + C1242 + C1242 + C122 * C1236 + C134 * C1227 + C1243 +
           C1243 + C121 * C1237) *
              C153513 * C153501 * C153413 * C1221) *
         C153378) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 +
             C2737 + C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
             C153761 * C162) *
                C153513 * C153812 +
            (C3086 + C3087 + C3088) * C153513 * C153800 + C3108 * C153774) *
               C153413 * C1131 -
           ((C3092 + C3093 + C3094) * C153513 * C153774 +
            (C3091 + C3090 + C3089) * C153513 * C153800 +
            (C3088 + C3087 + C3086) * C153513 * C153812) *
               C153413 * C153449) *
              C1133 +
          (((C3095 + C3096 + C3097) * C153513 * C153812 +
            (C3098 + C3099 + C3100) * C153513 * C153800 +
            (C3101 + C3102 + C3103) * C153513 * C153774) *
               C153413 * C153449 -
           (C3109 * C153774 + (C3097 + C3096 + C3095) * C153513 * C153800 +
            (C2733 * C147 + C2751 + C2751 + C153761 * C163 + C2731 * C146 +
             C2752 + C2752 + C2724 * C162 + C2729 * C145 + C2753 + C2753 +
             C2723 * C161) *
                C153513 * C153812) *
               C153413 * C1131) *
              C1134 +
          (((C2729 * C146 + C2754 + C2754 + C2723 * C162 + C2731 * C147 +
             C2755 + C2755 + C2724 * C163 + C2733 * C148 + C2756 + C2756 +
             C153761 * C164) *
                C153513 * C153812 +
            (C3621 + C3622 + C3623) * C153513 * C153800 +
            (C3624 + C3625 + C3626) * C153513 * C153774) *
               C153413 * C1131 -
           ((C2733 * C1223 + C3606 + C3606 + C153761 * C1233 + C2731 * C1224 +
             C3607 + C3607 + C2724 * C1234 + C2729 * C1225 + C3608 + C3608 +
             C2723 * C1235) *
                C153513 * C153774 +
            (C3626 + C3625 + C3624) * C153513 * C153800 +
            (C3623 + C3622 + C3621) * C153513 * C153812) *
               C153413 * C153449) *
              C1135)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 + C2737 +
            C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
            C153761 * C162) *
               C153513 * C153812 +
           (C3086 + C3087 + C3088) * C153513 * C153800 + C3108 * C153774) *
              C153413 * C1218 -
          (C4609 * C153774 + (C3091 + C3090 + C3089) * C153513 * C153800 +
           (C3088 + C3087 + C3086) * C153513 * C153812) *
              C153413 * C1219 +
          (C3108 * C153812 + (C3094 + C3093 + C3092) * C153513 * C153800 +
           (C4613 + C4614 + C4615) * C153513 * C153774) *
              C153413 * C1220 -
          ((C2733 * C4585 + C4602 + C4602 + C153761 * C4591 + C2731 * C4586 +
            C4603 + C4603 + C2724 * C4592 + C2729 * C4587 + C4604 + C4604 +
            C2723 * C4593) *
               C153513 * C153774 +
           (C4615 + C4614 + C4613) * C153513 * C153800 + C4609 * C153812) *
              C153413 * C1221) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 +
             C2737 + C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
             C153761 * C162) *
                C153813 +
            (C7654 + C7655 + C7656) * C153802 + C7674 * C153777) *
               C153501 * C153413 * C1131 -
           ((C4872 + C4871 + C4870) * C153777 +
            (C4213 + C4214 + C4215) * C153802 +
            (C3088 + C3087 + C3086) * C153813) *
               C153501 * C153413 * C153449) *
              C1133 +
          (((C3095 + C3096 + C3097) * C153813 +
            (C4216 + C4217 + C4218) * C153802 +
            (C8456 + C8457 + C8458) * C153777) *
               C153501 * C153413 * C153449 -
           (C7675 * C153777 + (C7665 + C7664 + C7663) * C153802 +
            (C2733 * C147 + C2751 + C2751 + C153761 * C163 + C2731 * C146 +
             C2752 + C2752 + C2724 * C162 + C2729 * C145 + C2753 + C2753 +
             C2723 * C161) *
                C153813) *
               C153501 * C153413 * C1131) *
              C1134 +
          (((C2729 * C146 + C2754 + C2754 + C2723 * C162 + C2731 * C147 +
             C2755 + C2755 + C2724 * C163 + C2733 * C148 + C2756 + C2756 +
             C153761 * C164) *
                C153813 +
            (C8142 + C8143 + C8144) * C153802 +
            (C8145 + C8146 + C8147) * C153777) *
               C153501 * C153413 * C1131 -
           ((C2733 * C1365 + C7894 + C7894 + C153761 * C1375 + C2731 * C1366 +
             C7895 + C7895 + C2724 * C1376 + C2729 * C1367 + C7896 + C7896 +
             C2723 * C1377) *
                C153777 +
            (C2733 * C985 + C3848 + C3848 + C153761 * C997 + C2731 * C984 +
             C3849 + C3849 + C2724 * C996 + C2729 * C983 + C3850 + C3850 +
             C2723 * C995) *
                C153802 +
            (C3623 + C3622 + C3621) * C153813) *
               C153501 * C153413 * C153449) *
              C1135)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 + C2737 +
            C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
            C153761 * C162) *
               C153813 +
           (C7654 + C7655 + C7656) * C153802 + C7674 * C153777) *
              C153501 * C153413 * C1218 -
          ((C4872 + C4871 + C4870) * C153777 +
           (C4213 + C4214 + C4215) * C153802 +
           (C3088 + C3087 + C3086) * C153813) *
              C153501 * C153413 * C1219 +
          (C3106 * C153813 + (C4212 + C4211 + C4210) * C153802 +
           (C4873 + C4874 + C4875) * C153777) *
              C153501 * C153413 * C1220 -
          ((C2733 * C4833 + C4855 + C4855 + C153761 * C4839 + C2731 * C4834 +
            C4856 + C4856 + C2724 * C4840 + C2729 * C4835 + C4857 + C4857 +
            C2723 * C4841) *
               C153777 +
           (C5631 + C5630 + C5629) * C153802 + C4605 * C153813) *
              C153501 * C153413 * C1221) *
         C153378) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
             C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 +
             C23999 + C153761 * C162) *
                C153513 * C23987 +
            (C24335 + C24336 + C24337) * C153513 * C23988 + C24357 * C153774) *
               C153413 * C1131 -
           ((C24341 + C24342 + C24343) * C153513 * C153774 +
            (C24340 + C24339 + C24338) * C153513 * C23988 +
            (C24337 + C24336 + C24335) * C153513 * C23987) *
               C153413 * C153449) *
              C1133 +
          (((C24344 + C24345 + C24346) * C153513 * C23987 +
            (C24347 + C24348 + C24349) * C153513 * C23988 +
            (C24350 + C24351 + C24352) * C153513 * C153774) *
               C153413 * C153449 -
           (C24358 * C153774 + (C24346 + C24345 + C24344) * C153513 * C23988 +
            (C23994 * C147 + C24012 + C24012 + C153761 * C163 + C23992 * C146 +
             C24013 + C24013 + C153790 * C162 + C23990 * C145 + C24014 +
             C24014 + C153809 * C161) *
                C153513 * C23987) *
               C153413 * C1131) *
              C1134 +
          (((C23990 * C146 + C24015 + C24015 + C153809 * C162 + C23992 * C147 +
             C24016 + C24016 + C153790 * C163 + C23994 * C148 + C24017 +
             C24017 + C153761 * C164) *
                C153513 * C23987 +
            (C24858 + C24859 + C24860) * C153513 * C23988 +
            (C24861 + C24862 + C24863) * C153513 * C153774) *
               C153413 * C1131 -
           ((C23994 * C1223 + C24843 + C24843 + C153761 * C1233 +
             C23992 * C1224 + C24844 + C24844 + C153790 * C1234 +
             C23990 * C1225 + C24845 + C24845 + C153809 * C1235) *
                C153513 * C153774 +
            (C24863 + C24862 + C24861) * C153513 * C23988 +
            (C24860 + C24859 + C24858) * C153513 * C23987) *
               C153413 * C153449) *
              C1135)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
            C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 + C23999 +
            C153761 * C162) *
               C153513 * C23987 +
           (C24335 + C24336 + C24337) * C153513 * C23988 + C24357 * C153774) *
              C153413 * C1218 -
          (C25825 * C153774 + (C24340 + C24339 + C24338) * C153513 * C23988 +
           (C24337 + C24336 + C24335) * C153513 * C23987) *
              C153413 * C1219 +
          (C24357 * C23987 + (C24343 + C24342 + C24341) * C153513 * C23988 +
           (C25829 + C25830 + C25831) * C153513 * C153774) *
              C153413 * C1220 -
          ((C23994 * C4585 + C25818 + C25818 + C153761 * C4591 +
            C23992 * C4586 + C25819 + C25819 + C153790 * C4592 +
            C23990 * C4587 + C25820 + C25820 + C153809 * C4593) *
               C153513 * C153774 +
           (C25831 + C25830 + C25829) * C153513 * C23988 + C25825 * C23987) *
              C153413 * C1221) *
         C153378) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153513 *
                C28229 +
            C28439 * C28230 + C28440 * C28231 + C28441 * C28232 +
            C28442 * C28233) *
               C153413 * C1131 -
           (C28443 * C28233 + C28442 * C28232 + C28441 * C28231 +
            C28440 * C28230 + C28439 * C28229) *
               C153413 * C153449) *
              C1133 +
          ((C28444 * C28229 + C28445 * C28230 + C28446 * C28231 +
            C28447 * C28232 + C28448 * C28233) *
               C153413 * C153449 -
           (C28447 * C28233 + C28446 * C28232 + C28445 * C28231 +
            C28444 * C28230 +
            (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C153513 *
                C28229) *
               C153413 * C1131) *
              C1134 +
          (((C28234 * C146 + C28247 + C28247 + C153338 * C162) * C153513 *
                C28229 +
            C28740 * C28230 + C28741 * C28231 + C28742 * C28232 +
            C28743 * C28233) *
               C153413 * C1131 -
           ((C28234 * C4585 + C28727 + C28727 + C153338 * C4591) * C153513 *
                C28233 +
            C28743 * C28232 + C28742 * C28231 + C28741 * C28230 +
            C28740 * C28229) *
               C153413 * C153449) *
              C1135)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153513 *
               C28229 +
           C28439 * C28230 + C28440 * C28231 + C28441 * C28232 +
           C28442 * C28233) *
              C153413 * C1218 -
          (C28443 * C28233 + C28442 * C28232 + C28441 * C28231 +
           C28440 * C28230 + C28439 * C28229) *
              C153413 * C1219 +
          (C28440 * C28229 + C28441 * C28230 + C28442 * C28231 +
           C28443 * C28232 + C29302 * C28233) *
              C153413 * C1220 -
          ((C28234 * C29292 + C29298 + C29298 + C153338 * C29294) * C153513 *
               C28233 +
           C29302 * C28232 + C28443 * C28231 + C28442 * C28230 +
           C28441 * C28229) *
              C153413 * C1221) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153813 +
             C31295 * C153802 + C31296 * C153777) *
                C23987 +
            (C30985 + C30986 + C30987) * C23988 + C31011 * C153774) *
               C153413 * C1131 -
           ((C30991 + C30992 + C30993) * C153774 +
            (C30990 + C30989 + C30988) * C23988 +
            (C30987 + C30986 + C30985) * C23987) *
               C153413 * C153449) *
              C1133 +
          (((C30994 + C30995 + C31018) * C23987 +
            (C30998 + C30999 + C31019) * C23988 +
            (C31002 + C31003 + C31020) * C153774) *
               C153413 * C153449 -
           (C31021 * C153774 + (C31018 + C30995 + C30994) * C23988 +
            (C31301 * C153777 + C31300 * C153802 +
             (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C153813) *
                C23987) *
               C153413 * C1131) *
              C1134 +
          ((((C28234 * C146 + C28247 + C28247 + C153338 * C162) * C153813 +
             C31779 * C153802 + C31780 * C153777) *
                C23987 +
            (C31523 + C31546 + C31547) * C23988 +
            (C31528 + C31548 + C31549) * C153774) *
               C153413 * C1131 -
           (((C28234 * C4833 + C31533 + C31533 + C153338 * C4839) * C153777 +
             (C28234 * C4145 + C28867 + C28867 + C153338 * C4153) * C153802 +
             C28738 * C153813) *
                C153774 +
            (C31549 + C31548 + C31528) * C23988 +
            (C31547 + C31546 + C31523) * C23987) *
               C153413 * C153449) *
              C1135)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153813 +
            C31295 * C153802 + C31296 * C153777) *
               C23987 +
           (C30985 + C30986 + C30987) * C23988 + C31011 * C153774) *
              C153413 * C1218 -
          (C32455 * C153774 + (C30990 + C30989 + C30988) * C23988 +
           (C30987 + C30986 + C30985) * C23987) *
              C153413 * C1219 +
          (C31011 * C23987 + (C30993 + C30992 + C30991) * C23988 +
           (C32452 + C32453 + C32454) * C153774) *
              C153413 * C1220 -
          (((C28234 * C29424 + C29436 + C29436 + C153338 * C29426) * C153777 +
            C29867 * C153802 + C28433 * C153813) *
               C153774 +
           (C32454 + C32453 + C32452) * C23988 + C32455 * C23987) *
              C153413 * C1221) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
             C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 +
             C23999 + C153761 * C162) *
                C47673 +
            (C48203 + C48204 + C48205) * C47674 + C48223 * C153777) *
               C153501 * C153413 * C1131 -
           ((C26079 + C26078 + C26077) * C153777 +
            (C25438 + C25439 + C25440) * C47674 +
            (C24337 + C24336 + C24335) * C47673) *
               C153501 * C153413 * C153449) *
              C1133 +
          (((C24344 + C24345 + C24346) * C47673 +
            (C25441 + C25442 + C25443) * C47674 +
            (C49002 + C49003 + C49004) * C153777) *
               C153501 * C153413 * C153449 -
           (C48224 * C153777 + (C48214 + C48213 + C48212) * C47674 +
            (C23994 * C147 + C24012 + C24012 + C153761 * C163 + C23992 * C146 +
             C24013 + C24013 + C153790 * C162 + C23990 * C145 + C24014 +
             C24014 + C153809 * C161) *
                C47673) *
               C153501 * C153413 * C1131) *
              C1134 +
          (((C23990 * C146 + C24015 + C24015 + C153809 * C162 + C23992 * C147 +
             C24016 + C24016 + C153790 * C163 + C23994 * C148 + C24017 +
             C24017 + C153761 * C164) *
                C47673 +
            (C48691 + C48692 + C48693) * C47674 +
            (C48694 + C48695 + C48696) * C153777) *
               C153501 * C153413 * C1131 -
           ((C23994 * C1365 + C48443 + C48443 + C153761 * C1375 +
             C23992 * C1366 + C48444 + C48444 + C153790 * C1376 +
             C23990 * C1367 + C48445 + C48445 + C153809 * C1377) *
                C153777 +
            (C23994 * C985 + C25085 + C25085 + C153761 * C997 + C23992 * C984 +
             C25086 + C25086 + C153790 * C996 + C23990 * C983 + C25087 +
             C25087 + C153809 * C995) *
                C47674 +
            (C24860 + C24859 + C24858) * C47673) *
               C153501 * C153413 * C153449) *
              C1135)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
            C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 + C23999 +
            C153761 * C162) *
               C47673 +
           (C48203 + C48204 + C48205) * C47674 + C48223 * C153777) *
              C153501 * C153413 * C1218 -
          ((C26079 + C26078 + C26077) * C153777 +
           (C25438 + C25439 + C25440) * C47674 +
           (C24337 + C24336 + C24335) * C47673) *
              C153501 * C153413 * C1219 +
          (C24355 * C47673 + (C25437 + C25436 + C25435) * C47674 +
           (C26080 + C26081 + C26082) * C153777) *
              C153501 * C153413 * C1220 -
          ((C23994 * C4833 + C26062 + C26062 + C153761 * C4839 +
            C23992 * C4834 + C26063 + C26063 + C153790 * C4840 +
            C23990 * C4835 + C26064 + C26064 + C153809 * C4841) *
               C153777 +
           (C26829 + C26828 + C26827) * C47674 + C25821 * C47673) *
              C153501 * C153413 * C1221) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C47673 +
             C31295 * C47674 + C31296 * C153777) *
                C153812 +
            (C52025 + C52026 + C52027) * C153800 + C52045 * C153774) *
               C153413 * C1131 -
           ((C52031 + C52032 + C52033) * C153774 +
            (C52030 + C52029 + C52028) * C153800 +
            (C52027 + C52026 + C52025) * C153812) *
               C153413 * C153449) *
              C1133 +
          (((C52034 + C52035 + C52036) * C153812 +
            (C52037 + C52038 + C52039) * C153800 +
            (C52040 + C52041 + C52042) * C153774) *
               C153413 * C153449 -
           (C52046 * C153774 + (C52036 + C52035 + C52034) * C153800 +
            (C31301 * C153777 + C31300 * C47674 +
             (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C47673) *
                C153812) *
               C153413 * C1131) *
              C1134 +
          ((((C28234 * C146 + C28247 + C28247 + C153338 * C162) * C47673 +
             C31779 * C47674 + C31780 * C153777) *
                C153812 +
            (C52483 + C52484 + C52485) * C153800 +
            (C52486 + C52487 + C52488) * C153774) *
               C153413 * C1131 -
           (((C28234 * C4833 + C31533 + C31533 + C153338 * C4839) * C153777 +
             C44720 * C47674 + C28738 * C47673) *
                C153774 +
            (C52488 + C52487 + C52486) * C153800 +
            (C52485 + C52484 + C52483) * C153812) *
               C153413 * C153449) *
              C1135)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C47673 +
            C31295 * C47674 + C31296 * C153777) *
               C153812 +
           (C52025 + C52026 + C52027) * C153800 + C52045 * C153774) *
              C153413 * C1218 -
          (C53377 * C153774 + (C52030 + C52029 + C52028) * C153800 +
           (C52027 + C52026 + C52025) * C153812) *
              C153413 * C1219 +
          (C52045 * C153812 + (C52033 + C52032 + C52031) * C153800 +
           (C53374 + C53375 + C53376) * C153774) *
              C153413 * C1220 -
          (((C28234 * C29424 + C29436 + C29436 + C153338 * C29426) * C153777 +
            C29867 * C47674 + C28433 * C47673) *
               C153774 +
           (C53376 + C53375 + C53374) * C153800 + C53377 * C153812) *
              C153413 * C1221) *
         C153378) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C55722 +
            C31295 * C55723 + C31296 * C55724 + C31299 * C55725 +
            C34025 * C55726) *
               C153501 * C153413 * C1131 -
           (C32694 * C55726 + C31298 * C55725 + C29445 * C55724 +
            C29076 * C55723 + C28429 * C55722) *
               C153501 * C153413 * C153449) *
              C1133 +
          ((C28434 * C55722 + C29077 * C55723 + C31015 * C55724 +
            C31303 * C55725 + C56425 * C55726) *
               C153501 * C153413 * C153449 -
           (C55997 * C55726 + C31302 * C55725 + C31301 * C55724 +
            C31300 * C55723 +
            (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C55722) *
               C153501 * C153413 * C1131) *
              C1134 +
          (((C28234 * C146 + C28247 + C28247 + C153338 * C162) * C55722 +
            C31779 * C55723 + C31780 * C55724 + C56253 * C55725 +
            C56254 * C55726) *
               C153501 * C153413 * C1131 -
           ((C28234 * C9040 + C56121 + C56121 + C153338 * C9046) * C55726 +
            (C28234 * C6216 + C31773 + C31773 + C153338 * C6228) * C55725 +
            C31543 * C55724 + C31542 * C55723 + C28736 * C55722) *
               C153501 * C153413 * C153449) *
              C1135)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C55722 +
           C31295 * C55723 + C31296 * C55724 + C31299 * C55725 +
           C34025 * C55726) *
              C153501 * C153413 * C1218 -
          (C32694 * C55726 + C31298 * C55725 + C29445 * C55724 +
           C29076 * C55723 + C28429 * C55722) *
              C153501 * C153413 * C1219 +
          (C28430 * C55722 + C29075 * C55723 + C29446 * C55724 +
           C31297 * C55725 + C32695 * C55726) *
              C153501 * C153413 * C1220 -
          ((C28234 * C32673 + C32687 + C32687 + C153338 * C32675) * C55726 +
           C32696 * C55725 + C29447 * C55724 + C29074 * C55723 +
           C28431 * C55722) *
              C153501 * C153413 * C1221) *
         C153378) /
            (p * q * std::sqrt(p + q));
    d2ee[190] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C144 + C169 + C169 + C121 * C160 + C136 * C145 + C170 +
                 C170 + C122 * C161 + C138 * C146 + C171 + C171 + C123 * C162 +
                 C140 * C147 + C172 + C172 + C124 * C163 + C142 * C148 + C173 +
                 C173 + C125 * C164) *
                    C153513 * C153501 * C1938 -
                (C142 * C496 + C533 + C533 + C125 * C520 + C140 * C497 + C534 +
                 C534 + C124 * C521 + C138 * C498 + C535 + C535 + C123 * C522 +
                 C136 * C499 + C536 + C536 + C122 * C523 + C134 * C500 + C537 +
                 C537 + C121 * C524) *
                    C153513 * C153501 * C153477) *
                   C153724 +
               ((C134 * C981 + C1000 + C1000 + C121 * C993 + C136 * C982 +
                 C1001 + C1001 + C122 * C994 + C138 * C983 + C1002 + C1002 +
                 C123 * C995 + C140 * C984 + C1003 + C1003 + C124 * C996 +
                 C142 * C985 + C1004 + C1004 + C125 * C997) *
                    C153513 * C153501 * C153477 -
                (C142 * C315 + C352 + C352 + C125 * C339 + C140 * C316 + C353 +
                 C353 + C124 * C340 + C138 * C317 + C354 + C354 + C123 * C341 +
                 C136 * C318 + C355 + C355 + C122 * C342 + C134 * C319 + C356 +
                 C356 + C121 * C343) *
                    C153513 * C153501 * C1938) *
                   C153449) *
                  C153716 +
              (((C134 * C499 + C543 + C543 + C121 * C523 + C136 * C498 + C544 +
                 C544 + C122 * C522 + C138 * C497 + C545 + C545 + C123 * C521 +
                 C140 * C496 + C546 + C546 + C124 * C520 + C142 * C506 + C547 +
                 C547 + C125 * C530) *
                    C153513 * C153501 * C153477 -
                (C142 * C149 + C174 + C174 + C125 * C165 + C140 * C148 + C175 +
                 C175 + C124 * C164 + C138 * C147 + C176 + C176 + C123 * C163 +
                 C136 * C146 + C177 + C177 + C122 * C162 + C134 * C145 + C178 +
                 C178 + C121 * C161) *
                    C153513 * C153501 * C1938) *
                   C153724 +
               ((C134 * C318 + C362 + C362 + C121 * C342 + C136 * C317 + C363 +
                 C363 + C122 * C341 + C138 * C316 + C364 + C364 + C123 * C340 +
                 C140 * C315 + C365 + C365 + C124 * C339 + C142 * C325 + C366 +
                 C366 + C125 * C349) *
                    C153513 * C153501 * C1938 -
                (C142 * C986 + C1005 + C1005 + C125 * C998 + C140 * C985 +
                 C1006 + C1006 + C124 * C997 + C138 * C984 + C1007 + C1007 +
                 C123 * C996 + C136 * C983 + C1008 + C1008 + C122 * C995 +
                 C134 * C982 + C1009 + C1009 + C121 * C994) *
                    C153513 * C153501 * C153477) *
                   C153449) *
                  C153384) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 +
                  C2737 + C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
                  C153761 * C162) *
                     C153513 * C153812 +
                 (C3086 + C3087 + C3088) * C153513 * C153800 +
                 C3108 * C153774) *
                    C1938 -
                (C5625 * C153774 + (C4213 + C4214 + C4215) * C153513 * C153800 +
                 (C2733 * C498 + C3346 + C3346 + C153761 * C522 + C2731 * C499 +
                  C3347 + C3347 + C2724 * C523 + C2729 * C500 + C3348 + C3348 +
                  C2723 * C524) *
                     C153513 * C153812) *
                    C153477) *
                   C153724 +
               (((C4215 + C4214 + C4213) * C153513 * C153812 +
                 (C4212 + C4211 + C4210) * C153513 * C153800 +
                 (C5629 + C5630 + C5631) * C153513 * C153774) *
                    C153477 -
                (C4609 * C153774 + (C3091 + C3090 + C3089) * C153513 * C153800 +
                 (C3088 + C3087 + C3086) * C153513 * C153812) *
                    C1938) *
                   C153449) *
                  C153716 +
              ((((C2729 * C499 + C3358 + C3358 + C2723 * C523 + C2731 * C498 +
                  C3359 + C3359 + C2724 * C522 + C2733 * C497 + C3360 + C3360 +
                  C153761 * C521) *
                     C153513 * C153812 +
                 (C4216 + C4217 + C4218) * C153513 * C153800 +
                 (C4219 + C4220 + C4221) * C153513 * C153774) *
                    C153477 -
                (C3109 * C153774 + (C3097 + C3096 + C3095) * C153513 * C153800 +
                 (C2733 * C147 + C2751 + C2751 + C153761 * C163 + C2731 * C146 +
                  C2752 + C2752 + C2724 * C162 + C2729 * C145 + C2753 + C2753 +
                  C2723 * C161) *
                     C153513 * C153812) *
                    C1938) *
                   C153724 +
               (((C3095 + C3096 + C3097) * C153513 * C153812 +
                 (C3098 + C3099 + C3100) * C153513 * C153800 +
                 (C3101 + C3102 + C3103) * C153513 * C153774) *
                    C1938 -
                ((C2733 * C4146 + C4183 + C4183 + C153761 * C4154 +
                  C2731 * C4145 + C4184 + C4184 + C2724 * C4153 +
                  C2729 * C4144 + C4185 + C4185 + C2723 * C4152) *
                     C153513 * C153774 +
                 (C4221 + C4220 + C4219) * C153513 * C153800 +
                 (C4218 + C4217 + C4216) * C153513 * C153812) *
                    C153477) *
                   C153449) *
                  C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 +
              C2737 + C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
              C153761 * C162) *
                 C153813 +
             (C7654 + C7655 + C7656) * C153802 + C7674 * C153777) *
                C153501 * C1938 -
            (C10397 * C153777 + (C7659 + C7658 + C7657) * C153802 +
             (C7656 + C7655 + C7654) * C153813) *
                C153501 * C153477) *
               C153724 +
           (((C4215 + C4214 + C4213) * C153813 +
             (C4870 + C4871 + C4872) * C153802 +
             (C9067 + C9068 + C9069) * C153777) *
                C153501 * C153477 -
            (C9063 * C153777 + (C4213 + C4214 + C4215) * C153802 +
             (C3088 + C3087 + C3086) * C153813) *
                C153501 * C1938) *
               C153449) *
              C153716 +
          ((((C7663 + C7664 + C7665) * C153813 +
             (C7666 + C7667 + C7668) * C153802 +
             (C7669 + C7670 + C7671) * C153777) *
                C153501 * C153477 -
            (C7675 * C153777 + (C7665 + C7664 + C7663) * C153802 +
             (C2733 * C147 + C2751 + C2751 + C153761 * C163 + C2731 * C146 +
              C2752 + C2752 + C2724 * C162 + C2729 * C145 + C2753 + C2753 +
              C2723 * C161) *
                 C153813) *
                C153501 * C1938) *
               C153724 +
           (((C3095 + C3096 + C3097) * C153813 +
             (C4216 + C4217 + C4218) * C153802 +
             (C8456 + C8457 + C8458) * C153777) *
                C153501 * C1938 -
            ((C2733 * C8437 + C8447 + C8447 + C153761 * C8439 + C2731 * C6216 +
              C8448 + C8448 + C2724 * C6228 + C2729 * C6217 + C8449 + C8449 +
              C2723 * C6229) *
                 C153777 +
             (C8458 + C8457 + C8456) * C153802 +
             (C4218 + C4217 + C4216) * C153813) *
                C153501 * C153477) *
               C153449) *
              C153384)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
              C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 +
              C23999 + C153761 * C162) *
                 C153513 * C23987 +
             (C24335 + C24336 + C24337) * C153513 * C23988 + C24357 * C153774) *
                C1938 -
            (C26823 * C153774 + (C25438 + C25439 + C25440) * C153513 * C23988 +
             (C23994 * C498 + C24583 + C24583 + C153761 * C522 + C23992 * C499 +
              C24584 + C24584 + C153790 * C523 + C23990 * C500 + C24585 +
              C24585 + C153809 * C524) *
                 C153513 * C23987) *
                C153477) *
               C153724 +
           (((C25440 + C25439 + C25438) * C153513 * C23987 +
             (C25437 + C25436 + C25435) * C153513 * C23988 +
             (C26827 + C26828 + C26829) * C153513 * C153774) *
                C153477 -
            (C25825 * C153774 + (C24340 + C24339 + C24338) * C153513 * C23988 +
             (C24337 + C24336 + C24335) * C153513 * C23987) *
                C1938) *
               C153449) *
              C153716 +
          ((((C23990 * C499 + C24595 + C24595 + C153809 * C523 + C23992 * C498 +
              C24596 + C24596 + C153790 * C522 + C23994 * C497 + C24597 +
              C24597 + C153761 * C521) *
                 C153513 * C23987 +
             (C25441 + C25442 + C25443) * C153513 * C23988 +
             (C25444 + C25445 + C25446) * C153513 * C153774) *
                C153477 -
            (C24358 * C153774 + (C24346 + C24345 + C24344) * C153513 * C23988 +
             (C23994 * C147 + C24012 + C24012 + C153761 * C163 + C23992 * C146 +
              C24013 + C24013 + C153790 * C162 + C23990 * C145 + C24014 +
              C24014 + C153809 * C161) *
                 C153513 * C23987) *
                C1938) *
               C153724 +
           (((C24344 + C24345 + C24346) * C153513 * C23987 +
             (C24347 + C24348 + C24349) * C153513 * C23988 +
             (C24350 + C24351 + C24352) * C153513 * C153774) *
                C1938 -
            ((C23994 * C4146 + C25408 + C25408 + C153761 * C4154 +
              C23992 * C4145 + C25409 + C25409 + C153790 * C4153 +
              C23990 * C4144 + C25410 + C25410 + C153809 * C4152) *
                 C153513 * C153774 +
             (C25446 + C25445 + C25444) * C153513 * C23988 +
             (C25443 + C25442 + C25441) * C153513 * C23987) *
                C153477) *
               C153449) *
              C153384)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153513 *
                 C28229 +
             C28439 * C28230 + C28440 * C28231 + C28441 * C28232 +
             C28442 * C28233) *
                C1938 -
            (C29081 * C28233 + C29082 * C28232 + C29083 * C28231 +
             C29084 * C28230 +
             (C28234 * C500 + C28581 + C28581 + C153338 * C524) * C153513 *
                 C28229) *
                C153477) *
               C153724 +
           ((C29084 * C28229 + C29083 * C28230 + C29082 * C28231 +
             C29081 * C28232 + C29868 * C28233) *
                C153477 -
            (C28443 * C28233 + C28442 * C28232 + C28441 * C28231 +
             C28440 * C28230 + C28439 * C28229) *
                C1938) *
               C153449) *
              C153716 +
          ((((C28234 * C499 + C28587 + C28587 + C153338 * C523) * C153513 *
                 C28229 +
             C29085 * C28230 + C29086 * C28231 + C29087 * C28232 +
             C29088 * C28233) *
                C153477 -
            (C28447 * C28233 + C28446 * C28232 + C28445 * C28231 +
             C28444 * C28230 +
             (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C153513 *
                 C28229) *
                C1938) *
               C153724 +
           ((C28444 * C28229 + C28445 * C28230 + C28446 * C28231 +
             C28447 * C28232 + C28448 * C28233) *
                C1938 -
            ((C28234 * C29033 + C29056 + C29056 + C153338 * C29037) * C153513 *
                 C28233 +
             C29088 * C28232 + C29087 * C28231 + C29086 * C28230 +
             C29085 * C28229) *
                C153477) *
               C153449) *
              C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153813 +
              C31295 * C153802 + C31296 * C153777) *
                 C23987 +
             (C30985 + C30986 + C30987) * C23988 + C31011 * C153774) *
                C1938 -
            (C33429 * C153774 + (C32077 + C32078 + C32079) * C23988 +
             (C31299 * C153777 + C31296 * C153802 + C31295 * C153813) *
                 C23987) *
                C153477) *
               C153724 +
           (((C32079 + C32078 + C32077) * C23987 +
             (C32076 + C32075 + C32074) * C23988 +
             (C33426 + C33427 + C33428) * C153774) *
                C153477 -
            (C32455 * C153774 + (C30990 + C30989 + C30988) * C23988 +
             (C30987 + C30986 + C30985) * C23987) *
                C1938) *
               C153449) *
              C153716 +
          ((((C31300 * C153813 + C31301 * C153802 + C31302 * C153777) * C23987 +
             (C32080 + C32081 + C32082) * C23988 +
             (C32083 + C32084 + C32085) * C153774) *
                C153477 -
            (C31021 * C153774 + (C31018 + C30995 + C30994) * C23988 +
             (C31301 * C153777 + C31300 * C153802 +
              (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C153813) *
                 C23987) *
                C1938) *
               C153724 +
           (((C30994 + C30995 + C31018) * C23987 +
             (C30998 + C30999 + C31019) * C23988 +
             (C31002 + C31003 + C31020) * C153774) *
                C1938 -
            (((C28234 * C32070 + C32086 + C32086 + C153338 * C32072) * C153777 +
              C31017 * C153802 + C29079 * C153813) *
                 C153774 +
             (C32085 + C32084 + C32083) * C23988 +
             (C32082 + C32081 + C32080) * C23987) *
                C153477) *
               C153449) *
              C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
              C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 +
              C23999 + C153761 * C162) *
                 C47673 +
             (C48203 + C48204 + C48205) * C47674 + C48223 * C153777) *
                C153501 * C1938 -
            (C50925 * C153777 + (C48208 + C48207 + C48206) * C47674 +
             (C48205 + C48204 + C48203) * C47673) *
                C153501 * C153477) *
               C153724 +
           (((C25440 + C25439 + C25438) * C47673 +
             (C26077 + C26078 + C26079) * C47674 +
             (C49604 + C49605 + C49606) * C153777) *
                C153501 * C153477 -
            (C49600 * C153777 + (C25438 + C25439 + C25440) * C47674 +
             (C24337 + C24336 + C24335) * C47673) *
                C153501 * C1938) *
               C153449) *
              C153716 +
          ((((C48212 + C48213 + C48214) * C47673 +
             (C48215 + C48216 + C48217) * C47674 +
             (C48218 + C48219 + C48220) * C153777) *
                C153501 * C153477 -
            (C48224 * C153777 + (C48214 + C48213 + C48212) * C47674 +
             (C23994 * C147 + C24012 + C24012 + C153761 * C163 + C23992 * C146 +
              C24013 + C24013 + C153790 * C162 + C23990 * C145 + C24014 +
              C24014 + C153809 * C161) *
                 C47673) *
                C153501 * C1938) *
               C153724 +
           (((C24344 + C24345 + C24346) * C47673 +
             (C25441 + C25442 + C25443) * C47674 +
             (C49002 + C49003 + C49004) * C153777) *
                C153501 * C1938 -
            ((C23994 * C8437 + C48993 + C48993 + C153761 * C8439 +
              C23992 * C6216 + C48994 + C48994 + C153790 * C6228 +
              C23990 * C6217 + C48995 + C48995 + C153809 * C6229) *
                 C153777 +
             (C49004 + C49003 + C49002) * C47674 +
             (C25443 + C25442 + C25441) * C47673) *
                C153501 * C153477) *
               C153449) *
              C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C47673 +
              C31295 * C47674 + C31296 * C153777) *
                 C153812 +
             (C52025 + C52026 + C52027) * C153800 + C52045 * C153774) *
                C1938 -
            (C54332 * C153774 + (C53000 + C53001 + C53002) * C153800 +
             (C31299 * C153777 + C31296 * C47674 + C31295 * C47673) * C153812) *
                C153477) *
               C153724 +
           (((C53002 + C53001 + C53000) * C153812 +
             (C52999 + C52998 + C52997) * C153800 +
             (C54329 + C54330 + C54331) * C153774) *
                C153477 -
            (C53377 * C153774 + (C52030 + C52029 + C52028) * C153800 +
             (C52027 + C52026 + C52025) * C153812) *
                C1938) *
               C153449) *
              C153716 +
          ((((C31300 * C47673 + C31301 * C47674 + C31302 * C153777) * C153812 +
             (C53003 + C53004 + C53005) * C153800 +
             (C53006 + C53007 + C53008) * C153774) *
                C153477 -
            (C52046 * C153774 + (C52036 + C52035 + C52034) * C153800 +
             (C31301 * C153777 + C31300 * C47674 +
              (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C47673) *
                 C153812) *
                C1938) *
               C153724 +
           (((C52034 + C52035 + C52036) * C153812 +
             (C52037 + C52038 + C52039) * C153800 +
             (C52040 + C52041 + C52042) * C153774) *
                C1938 -
            (((C28234 * C32070 + C32086 + C32086 + C153338 * C32072) * C153777 +
              C31017 * C47674 + C29079 * C47673) *
                 C153774 +
             (C53008 + C53007 + C53006) * C153800 +
             (C53005 + C53004 + C53003) * C153812) *
                C153477) *
               C153449) *
              C153384)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C55722 +
             C31295 * C55723 + C31296 * C55724 + C31299 * C55725 +
             C34025 * C55726) *
                C153501 * C1938 -
            (C55996 * C55726 + C34025 * C55725 + C31299 * C55724 +
             C31296 * C55723 + C31295 * C55722) *
                C153501 * C153477) *
               C153724 +
           ((C29076 * C55722 + C29445 * C55723 + C31298 * C55724 +
             C32694 * C55725 + C56760 * C55726) *
                C153501 * C153477 -
            (C32694 * C55726 + C31298 * C55725 + C29445 * C55724 +
             C29076 * C55723 + C28429 * C55722) *
                C153501 * C1938) *
               C153449) *
              C153716 +
          (((C31300 * C55722 + C31301 * C55723 + C31302 * C55724 +
             C55997 * C55725 + C55998 * C55726) *
                C153501 * C153477 -
            (C55997 * C55726 + C31302 * C55725 + C31301 * C55724 +
             C31300 * C55723 +
             (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C55722) *
                C153501 * C1938) *
               C153724 +
           ((C28434 * C55722 + C29077 * C55723 + C31015 * C55724 +
             C31303 * C55725 + C56425 * C55726) *
                C153501 * C1938 -
            ((C28234 * C56416 + C56422 + C56422 + C153338 * C56418) * C55726 +
             C56425 * C55725 + C31303 * C55724 + C31015 * C55723 +
             C29077 * C55722) *
                C153501 * C153477) *
               C153449) *
              C153384)) /
            (p * q * std::sqrt(p + q));
    d2ee[191] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((C134 * C144 + C169 + C169 + C121 * C160 + C136 * C145 + C170 +
                C170 + C122 * C161 + C138 * C146 + C171 + C171 + C123 * C162 +
                C140 * C147 + C172 + C172 + C124 * C163 + C142 * C148 + C173 +
                C173 + C125 * C164) *
                   C153513 * C153501 * C153797 -
               (C142 * C496 + C533 + C533 + C125 * C520 + C140 * C497 + C534 +
                C534 + C124 * C521 + C138 * C498 + C535 + C535 + C123 * C522 +
                C136 * C499 + C536 + C536 + C122 * C523 + C134 * C500 + C537 +
                C537 + C121 * C524) *
                   C153513 * C153501 * C153798 +
               (C134 * C501 + C538 + C538 + C121 * C525 + C136 * C502 + C539 +
                C539 + C122 * C526 + C138 * C503 + C540 + C540 + C123 * C527 +
                C140 * C504 + C541 + C541 + C124 * C528 + C142 * C505 + C542 +
                C542 + C125 * C529) *
                   C153513 * C153501 * C2454) *
                  C153724 +
              ((C134 * C981 + C1000 + C1000 + C121 * C993 + C136 * C982 +
                C1001 + C1001 + C122 * C994 + C138 * C983 + C1002 + C1002 +
                C123 * C995 + C140 * C984 + C1003 + C1003 + C124 * C996 +
                C142 * C985 + C1004 + C1004 + C125 * C997) *
                   C153513 * C153501 * C153798 -
               (C142 * C315 + C352 + C352 + C125 * C339 + C140 * C316 + C353 +
                C353 + C124 * C340 + C138 * C317 + C354 + C354 + C123 * C341 +
                C136 * C318 + C355 + C355 + C122 * C342 + C134 * C319 + C356 +
                C356 + C121 * C343) *
                   C153513 * C153501 * C153797 -
               (C142 * C1365 + C1381 + C1381 + C125 * C1375 + C140 * C1366 +
                C1382 + C1382 + C124 * C1376 + C138 * C1367 + C1383 + C1383 +
                C123 * C1377 + C136 * C1368 + C1384 + C1384 + C122 * C1378 +
                C134 * C1369 + C1385 + C1385 + C121 * C1379) *
                   C153513 * C153501 * C2454) *
                  C153449) *
             C153378 +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 +
                 C2737 + C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
                 C153761 * C162) *
                    C153513 * C153812 +
                (C3086 + C3087 + C3088) * C153513 * C153800 + C3108 * C153774) *
                   C153797 -
               (C5625 * C153774 + (C4213 + C4214 + C4215) * C153513 * C153800 +
                (C2733 * C498 + C3346 + C3346 + C153761 * C522 + C2731 * C499 +
                 C3347 + C3347 + C2724 * C523 + C2729 * C500 + C3348 + C3348 +
                 C2723 * C524) *
                    C153513 * C153812) *
                   C153798 +
               ((C2729 * C501 + C3349 + C3349 + C2723 * C525 + C2731 * C502 +
                 C3350 + C3350 + C2724 * C526 + C2733 * C503 + C3351 + C3351 +
                 C153761 * C527) *
                    C153513 * C153812 +
                (C4870 + C4871 + C4872) * C153513 * C153800 +
                (C4873 + C4874 + C4875) * C153513 * C153774) *
                   C2454) *
                  C153724 +
              (((C4215 + C4214 + C4213) * C153513 * C153812 +
                (C4212 + C4211 + C4210) * C153513 * C153800 +
                (C5629 + C5630 + C5631) * C153513 * C153774) *
                   C153798 -
               (C4609 * C153774 + (C3091 + C3090 + C3089) * C153513 * C153800 +
                (C3088 + C3087 + C3086) * C153513 * C153812) *
                   C153797 -
               ((C2733 * C4833 + C4855 + C4855 + C153761 * C4839 +
                 C2731 * C4834 + C4856 + C4856 + C2724 * C4840 + C2729 * C4835 +
                 C4857 + C4857 + C2723 * C4841) *
                    C153513 * C153774 +
                (C4875 + C4874 + C4873) * C153513 * C153800 +
                (C4872 + C4871 + C4870) * C153513 * C153812) *
                   C2454) *
                  C153449) *
             C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 +
             C2737 + C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
             C153761 * C162) *
                C153813 +
            (C7654 + C7655 + C7656) * C153802 + C7674 * C153777) *
               C153501 * C153797 -
           (C10397 * C153777 + (C7659 + C7658 + C7657) * C153802 +
            (C7656 + C7655 + C7654) * C153813) *
               C153501 * C153798 +
           (C7674 * C153813 + (C7662 + C7661 + C7660) * C153802 +
            (C10404 + C10405 + C10406) * C153777) *
               C153501 * C2454) *
              C153724 +
          (((C4215 + C4214 + C4213) * C153813 +
            (C4870 + C4871 + C4872) * C153802 +
            (C9067 + C9068 + C9069) * C153777) *
               C153501 * C153798 -
           (C9063 * C153777 + (C4213 + C4214 + C4215) * C153802 +
            (C3088 + C3087 + C3086) * C153813) *
               C153501 * C153797 -
           ((C2733 * C9040 + C9057 + C9057 + C153761 * C9046 + C2731 * C9041 +
             C9058 + C9058 + C2724 * C9047 + C2729 * C9042 + C9059 + C9059 +
             C2723 * C9048) *
                C153777 +
            (C9069 + C9068 + C9067) * C153802 + C9063 * C153813) *
               C153501 * C2454) *
              C153449) *
         C153378) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
             C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 +
             C23999 + C153761 * C162) *
                C153513 * C23987 +
            (C24335 + C24336 + C24337) * C153513 * C23988 + C24357 * C153774) *
               C153797 -
           (C26823 * C153774 + (C25438 + C25439 + C25440) * C153513 * C23988 +
            (C23994 * C498 + C24583 + C24583 + C153761 * C522 + C23992 * C499 +
             C24584 + C24584 + C153790 * C523 + C23990 * C500 + C24585 +
             C24585 + C153809 * C524) *
                C153513 * C23987) *
               C153798 +
           ((C23990 * C501 + C24586 + C24586 + C153809 * C525 + C23992 * C502 +
             C24587 + C24587 + C153790 * C526 + C23994 * C503 + C24588 +
             C24588 + C153761 * C527) *
                C153513 * C23987 +
            (C26077 + C26078 + C26079) * C153513 * C23988 +
            (C26080 + C26081 + C26082) * C153513 * C153774) *
               C2454) *
              C153724 +
          (((C25440 + C25439 + C25438) * C153513 * C23987 +
            (C25437 + C25436 + C25435) * C153513 * C23988 +
            (C26827 + C26828 + C26829) * C153513 * C153774) *
               C153798 -
           (C25825 * C153774 + (C24340 + C24339 + C24338) * C153513 * C23988 +
            (C24337 + C24336 + C24335) * C153513 * C23987) *
               C153797 -
           ((C23994 * C4833 + C26062 + C26062 + C153761 * C4839 +
             C23992 * C4834 + C26063 + C26063 + C153790 * C4840 +
             C23990 * C4835 + C26064 + C26064 + C153809 * C4841) *
                C153513 * C153774 +
            (C26082 + C26081 + C26080) * C153513 * C23988 +
            (C26079 + C26078 + C26077) * C153513 * C23987) *
               C2454) *
              C153449) *
         C153378) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153513 *
                C28229 +
            C28439 * C28230 + C28440 * C28231 + C28441 * C28232 +
            C28442 * C28233) *
               C153797 -
           (C29081 * C28233 + C29082 * C28232 + C29083 * C28231 +
            C29084 * C28230 +
            (C28234 * C500 + C28581 + C28581 + C153338 * C524) * C153513 *
                C28229) *
               C153798 +
           ((C28234 * C501 + C28582 + C28582 + C153338 * C525) * C153513 *
                C28229 +
            C29449 * C28230 + C29450 * C28231 + C29451 * C28232 +
            C29452 * C28233) *
               C2454) *
              C153724 +
          ((C29084 * C28229 + C29083 * C28230 + C29082 * C28231 +
            C29081 * C28232 + C29868 * C28233) *
               C153798 -
           (C28443 * C28233 + C28442 * C28232 + C28441 * C28231 +
            C28440 * C28230 + C28439 * C28229) *
               C153797 -
           ((C28234 * C29424 + C29436 + C29436 + C153338 * C29426) * C153513 *
                C28233 +
            C29452 * C28232 + C29451 * C28231 + C29450 * C28230 +
            C29449 * C28229) *
               C2454) *
              C153449) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153813 +
             C31295 * C153802 + C31296 * C153777) *
                C23987 +
            (C30985 + C30986 + C30987) * C23988 + C31011 * C153774) *
               C153797 -
           (C33429 * C153774 + (C32077 + C32078 + C32079) * C23988 +
            (C31299 * C153777 + C31296 * C153802 + C31295 * C153813) * C23987) *
               C153798 +
           ((C31296 * C153813 + C31299 * C153802 + C34025 * C153777) * C23987 +
            (C32677 + C32678 + C32697) * C23988 +
            (C32681 + C32682 + C32698) * C153774) *
               C2454) *
              C153724 +
          (((C32079 + C32078 + C32077) * C23987 +
            (C32076 + C32075 + C32074) * C23988 +
            (C33426 + C33427 + C33428) * C153774) *
               C153798 -
           (C32455 * C153774 + (C30990 + C30989 + C30988) * C23988 +
            (C30987 + C30986 + C30985) * C23987) *
               C153797 -
           (((C28234 * C32673 + C32687 + C32687 + C153338 * C32675) * C153777 +
             C32696 * C153802 + C29447 * C153813) *
                C153774 +
            (C32698 + C32682 + C32681) * C23988 +
            (C32697 + C32678 + C32677) * C23987) *
               C2454) *
              C153449) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
             C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 +
             C23999 + C153761 * C162) *
                C47673 +
            (C48203 + C48204 + C48205) * C47674 + C48223 * C153777) *
               C153501 * C153797 -
           (C50925 * C153777 + (C48208 + C48207 + C48206) * C47674 +
            (C48205 + C48204 + C48203) * C47673) *
               C153501 * C153798 +
           (C48223 * C47673 + (C48211 + C48210 + C48209) * C47674 +
            (C50932 + C50933 + C50934) * C153777) *
               C153501 * C2454) *
              C153724 +
          (((C25440 + C25439 + C25438) * C47673 +
            (C26077 + C26078 + C26079) * C47674 +
            (C49604 + C49605 + C49606) * C153777) *
               C153501 * C153798 -
           (C49600 * C153777 + (C25438 + C25439 + C25440) * C47674 +
            (C24337 + C24336 + C24335) * C47673) *
               C153501 * C153797 -
           ((C23994 * C9040 + C49594 + C49594 + C153761 * C9046 +
             C23992 * C9041 + C49595 + C49595 + C153790 * C9047 +
             C23990 * C9042 + C49596 + C49596 + C153809 * C9048) *
                C153777 +
            (C49606 + C49605 + C49604) * C47674 + C49600 * C47673) *
               C153501 * C2454) *
              C153449) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C47673 +
             C31295 * C47674 + C31296 * C153777) *
                C153812 +
            (C52025 + C52026 + C52027) * C153800 + C52045 * C153774) *
               C153797 -
           (C54332 * C153774 + (C53000 + C53001 + C53002) * C153800 +
            (C31299 * C153777 + C31296 * C47674 + C31295 * C47673) * C153812) *
               C153798 +
           ((C31296 * C47673 + C31299 * C47674 + C34025 * C153777) * C153812 +
            (C53596 + C53597 + C53598) * C153800 +
            (C53599 + C53600 + C53601) * C153774) *
               C2454) *
              C153724 +
          (((C53002 + C53001 + C53000) * C153812 +
            (C52999 + C52998 + C52997) * C153800 +
            (C54329 + C54330 + C54331) * C153774) *
               C153798 -
           (C53377 * C153774 + (C52030 + C52029 + C52028) * C153800 +
            (C52027 + C52026 + C52025) * C153812) *
               C153797 -
           (((C28234 * C32673 + C32687 + C32687 + C153338 * C32675) * C153777 +
             C32696 * C47674 + C29447 * C47673) *
                C153774 +
            (C53601 + C53600 + C53599) * C153800 +
            (C53598 + C53597 + C53596) * C153812) *
               C2454) *
              C153449) *
         C153378) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C55722 +
            C31295 * C55723 + C31296 * C55724 + C31299 * C55725 +
            C34025 * C55726) *
               C153501 * C153797 -
           (C55996 * C55726 + C34025 * C55725 + C31299 * C55724 +
            C31296 * C55723 + C31295 * C55722) *
               C153501 * C153798 +
           (C31296 * C55722 + C31299 * C55723 + C34025 * C55724 +
            C55996 * C55725 + C57501 * C55726) *
               C153501 * C2454) *
              C153724 +
          ((C29076 * C55722 + C29445 * C55723 + C31298 * C55724 +
            C32694 * C55725 + C56760 * C55726) *
               C153501 * C153798 -
           (C32694 * C55726 + C31298 * C55725 + C29445 * C55724 +
            C29076 * C55723 + C28429 * C55722) *
               C153501 * C153797 -
           ((C28234 * C56751 + C56757 + C56757 + C153338 * C56753) * C55726 +
            C56760 * C55725 + C32694 * C55724 + C31298 * C55723 +
            C29445 * C55722) *
               C153501 * C2454) *
              C153449) *
         C153378) /
            (p * q * std::sqrt(p + q));
    d2ee[192] +=
        (-0.25 * std::pow(Pi, 2.5) *
             (((C134 * C144 + C169 + C169 + C121 * C160 + C136 * C145 + C170 +
                C170 + C122 * C161 + C138 * C146 + C171 + C171 + C123 * C162 +
                C140 * C147 + C172 + C172 + C124 * C163 + C142 * C148 + C173 +
                C173 + C125 * C164) *
                   C153513 * C153501 * C1938 -
               (C142 * C496 + C533 + C533 + C125 * C520 + C140 * C497 + C534 +
                C534 + C124 * C521 + C138 * C498 + C535 + C535 + C123 * C522 +
                C136 * C499 + C536 + C536 + C122 * C523 + C134 * C500 + C537 +
                C537 + C121 * C524) *
                   C153513 * C153501 * C153477) *
                  C153397 * C1133 +
              ((C134 * C499 + C543 + C543 + C121 * C523 + C136 * C498 + C544 +
                C544 + C122 * C522 + C138 * C497 + C545 + C545 + C123 * C521 +
                C140 * C496 + C546 + C546 + C124 * C520 + C142 * C506 + C547 +
                C547 + C125 * C530) *
                   C153513 * C153501 * C153477 -
               (C142 * C149 + C174 + C174 + C125 * C165 + C140 * C148 + C175 +
                C175 + C124 * C164 + C138 * C147 + C176 + C176 + C123 * C163 +
                C136 * C146 + C177 + C177 + C122 * C162 + C134 * C145 + C178 +
                C178 + C121 * C161) *
                   C153513 * C153501 * C1938) *
                  C153397 * C1134 +
              ((C134 * C146 + C179 + C179 + C121 * C162 + C136 * C147 + C180 +
                C180 + C122 * C163 + C138 * C148 + C181 + C181 + C123 * C164 +
                C140 * C149 + C182 + C182 + C124 * C165 + C142 * C150 + C183 +
                C183 + C125 * C166) *
                   C153513 * C153501 * C1938 -
               (C142 * C811 + C815 + C815 + C125 * C813 + C140 * C506 + C816 +
                C816 + C124 * C530 + C138 * C496 + C817 + C817 + C123 * C520 +
                C136 * C497 + C818 + C818 + C122 * C521 + C134 * C498 + C819 +
                C819 + C121 * C522) *
                   C153513 * C153501 * C153477) *
                  C153397 * C1135) -
         0.25 * std::pow(Pi, 2.5) *
             (((C134 * C144 + C169 + C169 + C121 * C160 + C136 * C145 + C170 +
                C170 + C122 * C161 + C138 * C146 + C171 + C171 + C123 * C162 +
                C140 * C147 + C172 + C172 + C124 * C163 + C142 * C148 + C173 +
                C173 + C125 * C164) *
                   C153513 * C153501 * C1938 -
               (C142 * C496 + C533 + C533 + C125 * C520 + C140 * C497 + C534 +
                C534 + C124 * C521 + C138 * C498 + C535 + C535 + C123 * C522 +
                C136 * C499 + C536 + C536 + C122 * C523 + C134 * C500 + C537 +
                C537 + C121 * C524) *
                   C153513 * C153501 * C153477) *
                  C310 +
              ((C134 * C981 + C1000 + C1000 + C121 * C993 + C136 * C982 +
                C1001 + C1001 + C122 * C994 + C138 * C983 + C1002 + C1002 +
                C123 * C995 + C140 * C984 + C1003 + C1003 + C124 * C996 +
                C142 * C985 + C1004 + C1004 + C125 * C997) *
                   C153513 * C153501 * C153477 -
               (C142 * C315 + C352 + C352 + C125 * C339 + C140 * C316 + C353 +
                C353 + C124 * C340 + C138 * C317 + C354 + C354 + C123 * C341 +
                C136 * C318 + C355 + C355 + C122 * C342 + C134 * C319 + C356 +
                C356 + C121 * C343) *
                   C153513 * C153501 * C1938) *
                  C311 +
              ((C134 * C320 + C357 + C357 + C121 * C344 + C136 * C321 + C358 +
                C358 + C122 * C345 + C138 * C322 + C359 + C359 + C123 * C346 +
                C140 * C323 + C360 + C360 + C124 * C347 + C142 * C324 + C361 +
                C361 + C125 * C348) *
                   C153513 * C153501 * C1938 -
               (C142 * C1796 + C1812 + C1812 + C125 * C1806 + C140 * C1797 +
                C1813 + C1813 + C124 * C1807 + C138 * C1798 + C1814 + C1814 +
                C123 * C1808 + C136 * C1799 + C1815 + C1815 + C122 * C1809 +
                C134 * C1800 + C1816 + C1816 + C121 * C1810) *
                   C153513 * C153501 * C153477) *
                  C312) *
             C153378 +
         0.5 * std::pow(Pi, 2.5) *
             ((C134 * C144 + C169 + C169 + C121 * C160 + C136 * C145 + C170 +
               C170 + C122 * C161 + C138 * C146 + C171 + C171 + C123 * C162 +
               C140 * C147 + C172 + C172 + C124 * C163 + C142 * C148 + C173 +
               C173 + C125 * C164) *
                  C153513 * C153501 * C2144 -
              (C142 * C496 + C533 + C533 + C125 * C520 + C140 * C497 + C534 +
               C534 + C124 * C521 + C138 * C498 + C535 + C535 + C123 * C522 +
               C136 * C499 + C536 + C536 + C122 * C523 + C134 * C500 + C537 +
               C537 + C121 * C524) *
                  C153513 * C153501 * C2145 +
              (C134 * C501 + C538 + C538 + C121 * C525 + C136 * C502 + C539 +
               C539 + C122 * C526 + C138 * C503 + C540 + C540 + C123 * C527 +
               C140 * C504 + C541 + C541 + C124 * C528 + C142 * C505 + C542 +
               C542 + C125 * C529) *
                  C153513 * C153501 * C2146 -
              (C142 * C2148 + C2164 + C2164 + C125 * C2158 + C140 * C2149 +
               C2165 + C2165 + C124 * C2159 + C138 * C2150 + C2166 + C2166 +
               C123 * C2160 + C136 * C2151 + C2167 + C2167 + C122 * C2161 +
               C134 * C2152 + C2168 + C2168 + C121 * C2162) *
                  C153513 * C153501 * C2147) *
             C153397 * C153378 -
         0.25 * std::pow(Pi, 2.5) *
             ((((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 +
                 C2737 + C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
                 C153761 * C162) *
                    C153513 * C153812 +
                (C3086 + C3087 + C3088) * C153513 * C153800 + C3108 * C153774) *
                   C1938 -
               (C5625 * C153774 + (C4213 + C4214 + C4215) * C153513 * C153800 +
                (C2733 * C498 + C3346 + C3346 + C153761 * C522 + C2731 * C499 +
                 C3347 + C3347 + C2724 * C523 + C2729 * C500 + C3348 + C3348 +
                 C2723 * C524) *
                    C153513 * C153812) *
                   C153477) *
                  C153397 * C1133 +
              (((C2729 * C499 + C3358 + C3358 + C2723 * C523 + C2731 * C498 +
                 C3359 + C3359 + C2724 * C522 + C2733 * C497 + C3360 + C3360 +
                 C153761 * C521) *
                    C153513 * C153812 +
                (C4216 + C4217 + C4218) * C153513 * C153800 +
                (C4219 + C4220 + C4221) * C153513 * C153774) *
                   C153477 -
               (C3109 * C153774 + (C3097 + C3096 + C3095) * C153513 * C153800 +
                (C2733 * C147 + C2751 + C2751 + C153761 * C163 + C2731 * C146 +
                 C2752 + C2752 + C2724 * C162 + C2729 * C145 + C2753 + C2753 +
                 C2723 * C161) *
                    C153513 * C153812) *
                   C1938) *
                  C153397 * C1134 +
              (((C2729 * C146 + C2754 + C2754 + C2723 * C162 + C2731 * C147 +
                 C2755 + C2755 + C2724 * C163 + C2733 * C148 + C2756 + C2756 +
                 C153761 * C164) *
                    C153513 * C153812 +
                (C3621 + C3622 + C3623) * C153513 * C153800 +
                (C3624 + C3625 + C3626) * C153513 * C153774) *
                   C1938 -
               ((C2733 * C1796 + C3845 + C3845 + C153761 * C1806 +
                 C2731 * C1797 + C3846 + C3846 + C2724 * C1807 + C2729 * C1798 +
                 C3847 + C3847 + C2723 * C1808) *
                    C153513 * C153774 +
                (C2733 * C985 + C3848 + C3848 + C153761 * C997 + C2731 * C984 +
                 C3849 + C3849 + C2724 * C996 + C2729 * C983 + C3850 + C3850 +
                 C2723 * C995) *
                    C153513 * C153800 +
                (C2733 * C496 + C3851 + C3851 + C153761 * C520 + C2731 * C497 +
                 C3852 + C3852 + C2724 * C521 + C2729 * C498 + C3853 + C3853 +
                 C2723 * C522) *
                    C153513 * C153812) *
                   C153477) *
                  C153397 * C1135) -
         0.25 * std::pow(Pi, 2.5) *
             ((((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 +
                 C2737 + C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
                 C153761 * C162) *
                    C153513 * C153812 +
                (C3086 + C3087 + C3088) * C153513 * C153800 + C3108 * C153774) *
                   C1938 -
               (C5625 * C153774 + (C4213 + C4214 + C4215) * C153513 * C153800 +
                (C2733 * C498 + C3346 + C3346 + C153761 * C522 + C2731 * C499 +
                 C3347 + C3347 + C2724 * C523 + C2729 * C500 + C3348 + C3348 +
                 C2723 * C524) *
                    C153513 * C153812) *
                   C153477) *
                  C310 +
              (((C4215 + C4214 + C4213) * C153513 * C153812 +
                (C4212 + C4211 + C4210) * C153513 * C153800 +
                (C5629 + C5630 + C5631) * C153513 * C153774) *
                   C153477 -
               (C4609 * C153774 + (C3091 + C3090 + C3089) * C153513 * C153800 +
                (C3088 + C3087 + C3086) * C153513 * C153812) *
                   C1938) *
                  C311 +
              ((C3108 * C153812 + (C3094 + C3093 + C3092) * C153513 * C153800 +
                (C4613 + C4614 + C4615) * C153513 * C153774) *
                   C1938 -
               ((C2733 * C5601 + C5618 + C5618 + C153761 * C5607 +
                 C2731 * C5602 + C5619 + C5619 + C2724 * C5608 + C2729 * C5603 +
                 C5620 + C5620 + C2723 * C5609) *
                    C153513 * C153774 +
                (C5631 + C5630 + C5629) * C153513 * C153800 + C5625 * C153812) *
                   C153477) *
                  C312) *
             C153378 +
         0.5 * std::pow(Pi, 2.5) *
             (((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 +
                C2737 + C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
                C153761 * C162) *
                   C153513 * C153812 +
               (C3086 + C3087 + C3088) * C153513 * C153800 + C3108 * C153774) *
                  C2144 -
              (C5625 * C153774 + (C4213 + C4214 + C4215) * C153513 * C153800 +
               (C2733 * C498 + C3346 + C3346 + C153761 * C522 + C2731 * C499 +
                C3347 + C3347 + C2724 * C523 + C2729 * C500 + C3348 + C3348 +
                C2723 * C524) *
                   C153513 * C153812) *
                  C2145 +
              ((C2729 * C501 + C3349 + C3349 + C2723 * C525 + C2731 * C502 +
                C3350 + C3350 + C2724 * C526 + C2733 * C503 + C3351 + C3351 +
                C153761 * C527) *
                   C153513 * C153812 +
               (C4870 + C4871 + C4872) * C153513 * C153800 +
               (C4873 + C4874 + C4875) * C153513 * C153774) *
                  C2146 -
              ((C2733 * C6213 + C6232 + C6232 + C153761 * C6225 +
                C2731 * C6214 + C6233 + C6233 + C2724 * C6226 + C2729 * C6215 +
                C6234 + C6234 + C2723 * C6227) *
                   C153513 * C153774 +
               (C2733 * C6216 + C6235 + C6235 + C153761 * C6228 +
                C2731 * C6217 + C6236 + C6236 + C2724 * C6229 + C2729 * C6218 +
                C6237 + C6237 + C2723 * C6230) *
                   C153513 * C153800 +
               (C2733 * C2150 + C6238 + C6238 + C153761 * C2160 +
                C2731 * C2151 + C6239 + C6239 + C2724 * C2161 + C2729 * C2152 +
                C6240 + C6240 + C2723 * C2162) *
                   C153513 * C153812) *
                  C2147) *
             C153397 * C153378 +
         0.5 * std::pow(Pi, 2.5) *
             ((((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 +
                 C2737 + C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
                 C153761 * C162) *
                    C153813 +
                (C7654 + C7655 + C7656) * C153802 + C7674 * C153777) *
                   C153501 * C1938 -
               ((C7660 + C7661 + C7662) * C153777 +
                (C7659 + C7658 + C7657) * C153802 +
                (C7656 + C7655 + C7654) * C153813) *
                   C153501 * C153477) *
                  C153397 * C1133 +
              (((C7663 + C7664 + C7665) * C153813 +
                (C7666 + C7667 + C7668) * C153802 +
                (C7669 + C7670 + C7671) * C153777) *
                   C153501 * C153477 -
               (C7675 * C153777 + (C7665 + C7664 + C7663) * C153802 +
                (C2733 * C147 + C2751 + C2751 + C153761 * C163 + C2731 * C146 +
                 C2752 + C2752 + C2724 * C162 + C2729 * C145 + C2753 + C2753 +
                 C2723 * C161) *
                    C153813) *
                   C153501 * C1938) *
                  C153397 * C1134 +
              (((C2729 * C146 + C2754 + C2754 + C2723 * C162 + C2731 * C147 +
                 C2755 + C2755 + C2724 * C163 + C2733 * C148 + C2756 + C2756 +
                 C153761 * C164) *
                    C153813 +
                (C8142 + C8143 + C8144) * C153802 +
                (C8145 + C8146 + C8147) * C153777) *
                   C153501 * C1938 -
               ((C2733 * C2148 + C8127 + C8127 + C153761 * C2158 +
                 C2731 * C2149 + C8128 + C8128 + C2724 * C2159 + C2729 * C2150 +
                 C8129 + C8129 + C2723 * C2160) *
                    C153777 +
                (C8147 + C8146 + C8145) * C153802 +
                (C8144 + C8143 + C8142) * C153813) *
                   C153501 * C153477) *
                  C153397 * C1135) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 +
                 C2737 + C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
                 C153761 * C162) *
                    C153813 +
                (C7654 + C7655 + C7656) * C153802 + C7674 * C153777) *
                   C153501 * C1938 -
               ((C7660 + C7661 + C7662) * C153777 +
                (C7659 + C7658 + C7657) * C153802 +
                (C7656 + C7655 + C7654) * C153813) *
                   C153501 * C153477) *
                  C310 +
              (((C4215 + C4214 + C4213) * C153813 +
                (C4870 + C4871 + C4872) * C153802 +
                (C9067 + C9068 + C9069) * C153777) *
                   C153501 * C153477 -
               (C9063 * C153777 + (C4213 + C4214 + C4215) * C153802 +
                (C3088 + C3087 + C3086) * C153813) *
                   C153501 * C1938) *
                  C311 +
              ((C3106 * C153813 + (C4212 + C4211 + C4210) * C153802 +
                (C4873 + C4874 + C4875) * C153777) *
                   C153501 * C1938 -
               ((C2733 * C6213 + C6232 + C6232 + C153761 * C6225 +
                 C2731 * C6214 + C6233 + C6233 + C2724 * C6226 + C2729 * C6215 +
                 C6234 + C6234 + C2723 * C6227) *
                    C153777 +
                (C4875 + C4874 + C4873) * C153802 + C5621 * C153813) *
                   C153501 * C153477) *
                  C312) *
             C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 + C2737 +
            C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
            C153761 * C162) *
               C153813 +
           (C7654 + C7655 + C7656) * C153802 + C7674 * C153777) *
              C153501 * C2144 -
          (C10397 * C153777 + (C7659 + C7658 + C7657) * C153802 +
           (C7656 + C7655 + C7654) * C153813) *
              C153501 * C2145 +
          (C7674 * C153813 + (C7662 + C7661 + C7660) * C153802 +
           (C10404 + C10405 + C10406) * C153777) *
              C153501 * C2146 -
          ((C2733 * C10377 + C10394 + C10394 + C153761 * C10383 +
            C2731 * C10378 + C10395 + C10395 + C2724 * C10384 + C2729 * C10379 +
            C10396 + C10396 + C2723 * C10385) *
               C153777 +
           (C10406 + C10405 + C10404) * C153802 + C10397 * C153813) *
              C153501 * C2147) *
         C153397 * C153378) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         ((((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
             C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 +
             C23999 + C153761 * C162) *
                C153513 * C23987 +
            (C24335 + C24336 + C24337) * C153513 * C23988 + C24357 * C153774) *
               C1938 -
           (C26823 * C153774 + (C25438 + C25439 + C25440) * C153513 * C23988 +
            (C23994 * C498 + C24583 + C24583 + C153761 * C522 + C23992 * C499 +
             C24584 + C24584 + C153790 * C523 + C23990 * C500 + C24585 +
             C24585 + C153809 * C524) *
                C153513 * C23987) *
               C153477) *
              C153397 * C1133 +
          (((C23990 * C499 + C24595 + C24595 + C153809 * C523 + C23992 * C498 +
             C24596 + C24596 + C153790 * C522 + C23994 * C497 + C24597 +
             C24597 + C153761 * C521) *
                C153513 * C23987 +
            (C25441 + C25442 + C25443) * C153513 * C23988 +
            (C25444 + C25445 + C25446) * C153513 * C153774) *
               C153477 -
           (C24358 * C153774 + (C24346 + C24345 + C24344) * C153513 * C23988 +
            (C23994 * C147 + C24012 + C24012 + C153761 * C163 + C23992 * C146 +
             C24013 + C24013 + C153790 * C162 + C23990 * C145 + C24014 +
             C24014 + C153809 * C161) *
                C153513 * C23987) *
               C1938) *
              C153397 * C1134 +
          (((C23990 * C146 + C24015 + C24015 + C153809 * C162 + C23992 * C147 +
             C24016 + C24016 + C153790 * C163 + C23994 * C148 + C24017 +
             C24017 + C153761 * C164) *
                C153513 * C23987 +
            (C24858 + C24859 + C24860) * C153513 * C23988 +
            (C24861 + C24862 + C24863) * C153513 * C153774) *
               C1938 -
           ((C23994 * C1796 + C25082 + C25082 + C153761 * C1806 +
             C23992 * C1797 + C25083 + C25083 + C153790 * C1807 +
             C23990 * C1798 + C25084 + C25084 + C153809 * C1808) *
                C153513 * C153774 +
            (C23994 * C985 + C25085 + C25085 + C153761 * C997 + C23992 * C984 +
             C25086 + C25086 + C153790 * C996 + C23990 * C983 + C25087 +
             C25087 + C153809 * C995) *
                C153513 * C23988 +
            (C23994 * C496 + C25088 + C25088 + C153761 * C520 + C23992 * C497 +
             C25089 + C25089 + C153790 * C521 + C23990 * C498 + C25090 +
             C25090 + C153809 * C522) *
                C153513 * C23987) *
               C153477) *
              C153397 * C1135)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         ((((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
             C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 +
             C23999 + C153761 * C162) *
                C153513 * C23987 +
            (C24335 + C24336 + C24337) * C153513 * C23988 + C24357 * C153774) *
               C1938 -
           (C26823 * C153774 + (C25438 + C25439 + C25440) * C153513 * C23988 +
            (C23994 * C498 + C24583 + C24583 + C153761 * C522 + C23992 * C499 +
             C24584 + C24584 + C153790 * C523 + C23990 * C500 + C24585 +
             C24585 + C153809 * C524) *
                C153513 * C23987) *
               C153477) *
              C310 +
          (((C25440 + C25439 + C25438) * C153513 * C23987 +
            (C25437 + C25436 + C25435) * C153513 * C23988 +
            (C26827 + C26828 + C26829) * C153513 * C153774) *
               C153477 -
           (C25825 * C153774 + (C24340 + C24339 + C24338) * C153513 * C23988 +
            (C24337 + C24336 + C24335) * C153513 * C23987) *
               C1938) *
              C311 +
          ((C24357 * C23987 + (C24343 + C24342 + C24341) * C153513 * C23988 +
            (C25829 + C25830 + C25831) * C153513 * C153774) *
               C1938 -
           ((C23994 * C5601 + C26816 + C26816 + C153761 * C5607 +
             C23992 * C5602 + C26817 + C26817 + C153790 * C5608 +
             C23990 * C5603 + C26818 + C26818 + C153809 * C5609) *
                C153513 * C153774 +
            (C26829 + C26828 + C26827) * C153513 * C23988 + C26823 * C23987) *
               C153477) *
              C312) *
         C153378) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
            C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 + C23999 +
            C153761 * C162) *
               C153513 * C23987 +
           (C24335 + C24336 + C24337) * C153513 * C23988 + C24357 * C153774) *
              C2144 -
          (C26823 * C153774 + (C25438 + C25439 + C25440) * C153513 * C23988 +
           (C23994 * C498 + C24583 + C24583 + C153761 * C522 + C23992 * C499 +
            C24584 + C24584 + C153790 * C523 + C23990 * C500 + C24585 + C24585 +
            C153809 * C524) *
               C153513 * C23987) *
              C2145 +
          ((C23990 * C501 + C24586 + C24586 + C153809 * C525 + C23992 * C502 +
            C24587 + C24587 + C153790 * C526 + C23994 * C503 + C24588 + C24588 +
            C153761 * C527) *
               C153513 * C23987 +
           (C26077 + C26078 + C26079) * C153513 * C23988 +
           (C26080 + C26081 + C26082) * C153513 * C153774) *
              C2146 -
          ((C23994 * C6213 + C27412 + C27412 + C153761 * C6225 +
            C23992 * C6214 + C27413 + C27413 + C153790 * C6226 +
            C23990 * C6215 + C27414 + C27414 + C153809 * C6227) *
               C153513 * C153774 +
           (C23994 * C6216 + C27415 + C27415 + C153761 * C6228 +
            C23992 * C6217 + C27416 + C27416 + C153790 * C6229 +
            C23990 * C6218 + C27417 + C27417 + C153809 * C6230) *
               C153513 * C23988 +
           (C23994 * C2150 + C27418 + C27418 + C153761 * C2160 +
            C23992 * C2151 + C27419 + C27419 + C153790 * C2161 +
            C23990 * C2152 + C27420 + C27420 + C153809 * C2162) *
               C153513 * C23987) *
              C2147) *
         C153397 * C153378) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         ((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153513 *
                C28229 +
            C28439 * C28230 + C28440 * C28231 + C28441 * C28232 +
            C28442 * C28233) *
               C1938 -
           (C29081 * C28233 + C29082 * C28232 + C29083 * C28231 +
            C29084 * C28230 +
            (C28234 * C500 + C28581 + C28581 + C153338 * C524) * C153513 *
                C28229) *
               C153477) *
              C153397 * C1133 +
          (((C28234 * C499 + C28587 + C28587 + C153338 * C523) * C153513 *
                C28229 +
            C29085 * C28230 + C29086 * C28231 + C29087 * C28232 +
            C29088 * C28233) *
               C153477 -
           (C28447 * C28233 + C28446 * C28232 + C28445 * C28231 +
            C28444 * C28230 +
            (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C153513 *
                C28229) *
               C1938) *
              C153397 * C1134 +
          (((C28234 * C146 + C28247 + C28247 + C153338 * C162) * C153513 *
                C28229 +
            C28740 * C28230 + C28741 * C28231 + C28742 * C28232 +
            C28743 * C28233) *
               C1938 -
           ((C28234 * C5601 + C28866 + C28866 + C153338 * C5607) * C153513 *
                C28233 +
            (C28234 * C4145 + C28867 + C28867 + C153338 * C4153) * C153513 *
                C28232 +
            (C28234 * C1798 + C28868 + C28868 + C153338 * C1808) * C153513 *
                C28231 +
            (C28234 * C983 + C28869 + C28869 + C153338 * C995) * C153513 *
                C28230 +
            (C28234 * C498 + C28870 + C28870 + C153338 * C522) * C153513 *
                C28229) *
               C153477) *
              C153397 * C1135)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         ((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153513 *
                C28229 +
            C28439 * C28230 + C28440 * C28231 + C28441 * C28232 +
            C28442 * C28233) *
               C1938 -
           (C29081 * C28233 + C29082 * C28232 + C29083 * C28231 +
            C29084 * C28230 +
            (C28234 * C500 + C28581 + C28581 + C153338 * C524) * C153513 *
                C28229) *
               C153477) *
              C310 +
          ((C29084 * C28229 + C29083 * C28230 + C29082 * C28231 +
            C29081 * C28232 + C29868 * C28233) *
               C153477 -
           (C28443 * C28233 + C28442 * C28232 + C28441 * C28231 +
            C28440 * C28230 + C28439 * C28229) *
               C1938) *
              C311 +
          ((C28440 * C28229 + C28441 * C28230 + C28442 * C28231 +
            C28443 * C28232 + C29302 * C28233) *
               C1938 -
           ((C28234 * C29858 + C29864 + C29864 + C153338 * C29860) * C153513 *
                C28233 +
            C29868 * C28232 + C29081 * C28231 + C29082 * C28230 +
            C29083 * C28229) *
               C153477) *
              C312) *
         C153378) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153513 *
               C28229 +
           C28439 * C28230 + C28440 * C28231 + C28441 * C28232 +
           C28442 * C28233) *
              C2144 -
          (C29081 * C28233 + C29082 * C28232 + C29083 * C28231 +
           C29084 * C28230 +
           (C28234 * C500 + C28581 + C28581 + C153338 * C524) * C153513 *
               C28229) *
              C2145 +
          ((C28234 * C501 + C28582 + C28582 + C153338 * C525) * C153513 *
               C28229 +
           C29449 * C28230 + C29450 * C28231 + C29451 * C28232 +
           C29452 * C28233) *
              C2146 -
          ((C28234 * C30194 + C30201 + C30201 + C153338 * C30198) * C153513 *
               C28233 +
           (C28234 * C30195 + C30202 + C30202 + C153338 * C30199) * C153513 *
               C28232 +
           (C28234 * C6215 + C30203 + C30203 + C153338 * C6227) * C153513 *
               C28231 +
           (C28234 * C6218 + C30204 + C30204 + C153338 * C6230) * C153513 *
               C28230 +
           (C28234 * C2152 + C30205 + C30205 + C153338 * C2162) * C153513 *
               C28229) *
              C2147) *
         C153397 * C153378) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153813 +
             C31295 * C153802 + C31296 * C153777) *
                C23987 +
            (C30985 + C30986 + C30987) * C23988 + C31011 * C153774) *
               C1938 -
           (C33429 * C153774 + (C32077 + C32078 + C32079) * C23988 +
            (C31299 * C153777 + C31296 * C153802 + C31295 * C153813) * C23987) *
               C153477) *
              C153397 * C1133 +
          (((C31300 * C153813 + C31301 * C153802 + C31302 * C153777) * C23987 +
            (C32080 + C32081 + C32082) * C23988 +
            (C32083 + C32084 + C32085) * C153774) *
               C153477 -
           (C31021 * C153774 + (C31018 + C30995 + C30994) * C23988 +
            (C31301 * C153777 + C31300 * C153802 +
             (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C153813) *
                C23987) *
               C1938) *
              C153397 * C1134 +
          ((((C28234 * C146 + C28247 + C28247 + C153338 * C162) * C153813 +
             C31779 * C153802 + C31780 * C153777) *
                C23987 +
            (C31523 + C31546 + C31547) * C23988 +
            (C31528 + C31548 + C31549) * C153774) *
               C1938 -
           (((C28234 * C6213 + C31772 + C31772 + C153338 * C6225) * C153777 +
             C31545 * C153802 + C31544 * C153813) *
                C153774 +
            ((C28234 * C6216 + C31773 + C31773 + C153338 * C6228) * C153777 +
             C31543 * C153802 + C31542 * C153813) *
                C23988 +
            ((C28234 * C2150 + C31774 + C31774 + C153338 * C2160) * C153777 +
             C31780 * C153802 + C31779 * C153813) *
                C23987) *
               C153477) *
              C153397 * C1135)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153813 +
             C31295 * C153802 + C31296 * C153777) *
                C23987 +
            (C30985 + C30986 + C30987) * C23988 + C31011 * C153774) *
               C1938 -
           (C33429 * C153774 + (C32077 + C32078 + C32079) * C23988 +
            (C31299 * C153777 + C31296 * C153802 + C31295 * C153813) * C23987) *
               C153477) *
              C310 +
          (((C32079 + C32078 + C32077) * C23987 +
            (C32076 + C32075 + C32074) * C23988 +
            (C33426 + C33427 + C33428) * C153774) *
               C153477 -
           (C32455 * C153774 + (C30990 + C30989 + C30988) * C23988 +
            (C30987 + C30986 + C30985) * C23987) *
               C1938) *
              C311 +
          ((C31011 * C23987 + (C30993 + C30992 + C30991) * C23988 +
            (C32452 + C32453 + C32454) * C153774) *
               C1938 -
           (((C28234 * C30194 + C30201 + C30201 + C153338 * C30198) * C153777 +
             C29448 * C153802 + C29073 * C153813) *
                C153774 +
            (C33428 + C33427 + C33426) * C23988 + C33429 * C23987) *
               C153477) *
              C312) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153813 +
            C31295 * C153802 + C31296 * C153777) *
               C23987 +
           (C30985 + C30986 + C30987) * C23988 + C31011 * C153774) *
              C2144 -
          (C33429 * C153774 + (C32077 + C32078 + C32079) * C23988 +
           (C31299 * C153777 + C31296 * C153802 + C31295 * C153813) * C23987) *
              C2145 +
          ((C31296 * C153813 + C31299 * C153802 + C34025 * C153777) * C23987 +
           (C32677 + C32678 + C32697) * C23988 +
           (C32681 + C32682 + C32698) * C153774) *
              C2146 -
          (((C28234 * C34011 + C34020 + C34020 + C153338 * C34015) * C153777 +
            C32695 * C153802 + C31297 * C153813) *
               C153774 +
           ((C28234 * C34012 + C34021 + C34021 + C153338 * C34016) * C153777 +
            C32694 * C153802 + C31298 * C153813) *
               C23988 +
           ((C28234 * C10379 + C34022 + C34022 + C153338 * C10385) * C153777 +
            C34025 * C153802 + C31299 * C153813) *
               C23987) *
              C2147) *
         C153397 * C153378) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
             C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 +
             C23999 + C153761 * C162) *
                C47673 +
            (C48203 + C48204 + C48205) * C47674 + C48223 * C153777) *
               C153501 * C1938 -
           ((C48209 + C48210 + C48211) * C153777 +
            (C48208 + C48207 + C48206) * C47674 +
            (C48205 + C48204 + C48203) * C47673) *
               C153501 * C153477) *
              C153397 * C1133 +
          (((C48212 + C48213 + C48214) * C47673 +
            (C48215 + C48216 + C48217) * C47674 +
            (C48218 + C48219 + C48220) * C153777) *
               C153501 * C153477 -
           (C48224 * C153777 + (C48214 + C48213 + C48212) * C47674 +
            (C23994 * C147 + C24012 + C24012 + C153761 * C163 + C23992 * C146 +
             C24013 + C24013 + C153790 * C162 + C23990 * C145 + C24014 +
             C24014 + C153809 * C161) *
                C47673) *
               C153501 * C1938) *
              C153397 * C1134 +
          (((C23990 * C146 + C24015 + C24015 + C153809 * C162 + C23992 * C147 +
             C24016 + C24016 + C153790 * C163 + C23994 * C148 + C24017 +
             C24017 + C153761 * C164) *
                C47673 +
            (C48691 + C48692 + C48693) * C47674 +
            (C48694 + C48695 + C48696) * C153777) *
               C153501 * C1938 -
           ((C23994 * C2148 + C48676 + C48676 + C153761 * C2158 +
             C23992 * C2149 + C48677 + C48677 + C153790 * C2159 +
             C23990 * C2150 + C48678 + C48678 + C153809 * C2160) *
                C153777 +
            (C48696 + C48695 + C48694) * C47674 +
            (C48693 + C48692 + C48691) * C47673) *
               C153501 * C153477) *
              C153397 * C1135)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
             C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 +
             C23999 + C153761 * C162) *
                C47673 +
            (C48203 + C48204 + C48205) * C47674 + C48223 * C153777) *
               C153501 * C1938 -
           ((C48209 + C48210 + C48211) * C153777 +
            (C48208 + C48207 + C48206) * C47674 +
            (C48205 + C48204 + C48203) * C47673) *
               C153501 * C153477) *
              C310 +
          (((C25440 + C25439 + C25438) * C47673 +
            (C26077 + C26078 + C26079) * C47674 +
            (C49604 + C49605 + C49606) * C153777) *
               C153501 * C153477 -
           (C49600 * C153777 + (C25438 + C25439 + C25440) * C47674 +
            (C24337 + C24336 + C24335) * C47673) *
               C153501 * C1938) *
              C311 +
          ((C24355 * C47673 + (C25437 + C25436 + C25435) * C47674 +
            (C26080 + C26081 + C26082) * C153777) *
               C153501 * C1938 -
           ((C23994 * C6213 + C27412 + C27412 + C153761 * C6225 +
             C23992 * C6214 + C27413 + C27413 + C153790 * C6226 +
             C23990 * C6215 + C27414 + C27414 + C153809 * C6227) *
                C153777 +
            (C26082 + C26081 + C26080) * C47674 + C26819 * C47673) *
               C153501 * C153477) *
              C312) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
            C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 + C23999 +
            C153761 * C162) *
               C47673 +
           (C48203 + C48204 + C48205) * C47674 + C48223 * C153777) *
              C153501 * C2144 -
          (C50925 * C153777 + (C48208 + C48207 + C48206) * C47674 +
           (C48205 + C48204 + C48203) * C47673) *
              C153501 * C2145 +
          (C48223 * C47673 + (C48211 + C48210 + C48209) * C47674 +
           (C50932 + C50933 + C50934) * C153777) *
              C153501 * C2146 -
          ((C23994 * C10377 + C50922 + C50922 + C153761 * C10383 +
            C23992 * C10378 + C50923 + C50923 + C153790 * C10384 +
            C23990 * C10379 + C50924 + C50924 + C153809 * C10385) *
               C153777 +
           (C50934 + C50933 + C50932) * C47674 + C50925 * C47673) *
              C153501 * C2147) *
         C153397 * C153378) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C47673 +
             C31295 * C47674 + C31296 * C153777) *
                C153812 +
            (C52025 + C52026 + C52027) * C153800 + C52045 * C153774) *
               C1938 -
           (C54332 * C153774 + (C53000 + C53001 + C53002) * C153800 +
            (C31299 * C153777 + C31296 * C47674 + C31295 * C47673) * C153812) *
               C153477) *
              C153397 * C1133 +
          (((C31300 * C47673 + C31301 * C47674 + C31302 * C153777) * C153812 +
            (C53003 + C53004 + C53005) * C153800 +
            (C53006 + C53007 + C53008) * C153774) *
               C153477 -
           (C52046 * C153774 + (C52036 + C52035 + C52034) * C153800 +
            (C31301 * C153777 + C31300 * C47674 +
             (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C47673) *
                C153812) *
               C1938) *
              C153397 * C1134 +
          ((((C28234 * C146 + C28247 + C28247 + C153338 * C162) * C47673 +
             C31779 * C47674 + C31780 * C153777) *
                C153812 +
            (C52483 + C52484 + C52485) * C153800 +
            (C52486 + C52487 + C52488) * C153774) *
               C1938 -
           (((C28234 * C6213 + C31772 + C31772 + C153338 * C6225) * C153777 +
             C31545 * C47674 + C31544 * C47673) *
                C153774 +
            ((C28234 * C6216 + C31773 + C31773 + C153338 * C6228) * C153777 +
             C31543 * C47674 + C31542 * C47673) *
                C153800 +
            ((C28234 * C2150 + C31774 + C31774 + C153338 * C2160) * C153777 +
             C31780 * C47674 + C31779 * C47673) *
                C153812) *
               C153477) *
              C153397 * C1135)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C47673 +
             C31295 * C47674 + C31296 * C153777) *
                C153812 +
            (C52025 + C52026 + C52027) * C153800 + C52045 * C153774) *
               C1938 -
           (C54332 * C153774 + (C53000 + C53001 + C53002) * C153800 +
            (C31299 * C153777 + C31296 * C47674 + C31295 * C47673) * C153812) *
               C153477) *
              C310 +
          (((C53002 + C53001 + C53000) * C153812 +
            (C52999 + C52998 + C52997) * C153800 +
            (C54329 + C54330 + C54331) * C153774) *
               C153477 -
           (C53377 * C153774 + (C52030 + C52029 + C52028) * C153800 +
            (C52027 + C52026 + C52025) * C153812) *
               C1938) *
              C311 +
          ((C52045 * C153812 + (C52033 + C52032 + C52031) * C153800 +
            (C53374 + C53375 + C53376) * C153774) *
               C1938 -
           (((C28234 * C30194 + C30201 + C30201 + C153338 * C30198) * C153777 +
             C29448 * C47674 + C29073 * C47673) *
                C153774 +
            (C54331 + C54330 + C54329) * C153800 + C54332 * C153812) *
               C153477) *
              C312) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C47673 +
            C31295 * C47674 + C31296 * C153777) *
               C153812 +
           (C52025 + C52026 + C52027) * C153800 + C52045 * C153774) *
              C2144 -
          (C54332 * C153774 + (C53000 + C53001 + C53002) * C153800 +
           (C31299 * C153777 + C31296 * C47674 + C31295 * C47673) * C153812) *
              C2145 +
          ((C31296 * C47673 + C31299 * C47674 + C34025 * C153777) * C153812 +
           (C53596 + C53597 + C53598) * C153800 +
           (C53599 + C53600 + C53601) * C153774) *
              C2146 -
          (((C28234 * C34011 + C34020 + C34020 + C153338 * C34015) * C153777 +
            C32695 * C47674 + C31297 * C47673) *
               C153774 +
           ((C28234 * C34012 + C34021 + C34021 + C153338 * C34016) * C153777 +
            C32694 * C47674 + C31298 * C47673) *
               C153800 +
           ((C28234 * C10379 + C34022 + C34022 + C153338 * C10385) * C153777 +
            C34025 * C47674 + C31299 * C47673) *
               C153812) *
              C2147) *
         C153397 * C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C55722 +
            C31295 * C55723 + C31296 * C55724 + C31299 * C55725 +
            C34025 * C55726) *
               C153501 * C1938 -
           (C55996 * C55726 + C34025 * C55725 + C31299 * C55724 +
            C31296 * C55723 + C31295 * C55722) *
               C153501 * C153477) *
              C153397 * C1133 +
          ((C31300 * C55722 + C31301 * C55723 + C31302 * C55724 +
            C55997 * C55725 + C55998 * C55726) *
               C153501 * C153477 -
           (C55997 * C55726 + C31302 * C55725 + C31301 * C55724 +
            C31300 * C55723 +
            (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C55722) *
               C153501 * C1938) *
              C153397 * C1134 +
          (((C28234 * C146 + C28247 + C28247 + C153338 * C162) * C55722 +
            C31779 * C55723 + C31780 * C55724 + C56253 * C55725 +
            C56254 * C55726) *
               C153501 * C1938 -
           ((C28234 * C10377 + C56248 + C56248 + C153338 * C10383) * C55726 +
            C56254 * C55725 + C56253 * C55724 + C31780 * C55723 +
            C31779 * C55722) *
               C153501 * C153477) *
              C153397 * C1135)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C55722 +
            C31295 * C55723 + C31296 * C55724 + C31299 * C55725 +
            C34025 * C55726) *
               C153501 * C1938 -
           (C55996 * C55726 + C34025 * C55725 + C31299 * C55724 +
            C31296 * C55723 + C31295 * C55722) *
               C153501 * C153477) *
              C310 +
          ((C29076 * C55722 + C29445 * C55723 + C31298 * C55724 +
            C32694 * C55725 + C56760 * C55726) *
               C153501 * C153477 -
           (C32694 * C55726 + C31298 * C55725 + C29445 * C55724 +
            C29076 * C55723 + C28429 * C55722) *
               C153501 * C1938) *
              C311 +
          ((C28430 * C55722 + C29075 * C55723 + C29446 * C55724 +
            C31297 * C55725 + C32695 * C55726) *
               C153501 * C1938 -
           ((C28234 * C34011 + C34020 + C34020 + C153338 * C34015) * C55726 +
            C32695 * C55725 + C31297 * C55724 + C29446 * C55723 +
            C29075 * C55722) *
               C153501 * C153477) *
              C312) *
         C153378) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C55722 +
           C31295 * C55723 + C31296 * C55724 + C31299 * C55725 +
           C34025 * C55726) *
              C153501 * C2144 -
          (C55996 * C55726 + C34025 * C55725 + C31299 * C55724 +
           C31296 * C55723 + C31295 * C55722) *
              C153501 * C2145 +
          (C31296 * C55722 + C31299 * C55723 + C34025 * C55724 +
           C55996 * C55725 + C57501 * C55726) *
              C153501 * C2146 -
          ((C28234 * C57492 + C57498 + C57498 + C153338 * C57494) * C55726 +
           C57501 * C55725 + C55996 * C55724 + C34025 * C55723 +
           C31299 * C55722) *
              C153501 * C2147) *
         C153397 * C153378) /
            (p * q * std::sqrt(p + q));
    d2ee[193] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((C134 * C144 + C169 + C169 + C121 * C160 + C136 * C145 + C170 +
                C170 + C122 * C161 + C138 * C146 + C171 + C171 + C123 * C162 +
                C140 * C147 + C172 + C172 + C124 * C163 + C142 * C148 + C173 +
                C173 + C125 * C164) *
                   C153513 * C153501 * C153797 -
               (C142 * C496 + C533 + C533 + C125 * C520 + C140 * C497 + C534 +
                C534 + C124 * C521 + C138 * C498 + C535 + C535 + C123 * C522 +
                C136 * C499 + C536 + C536 + C122 * C523 + C134 * C500 + C537 +
                C537 + C121 * C524) *
                   C153513 * C153501 * C153798 +
               (C134 * C501 + C538 + C538 + C121 * C525 + C136 * C502 + C539 +
                C539 + C122 * C526 + C138 * C503 + C540 + C540 + C123 * C527 +
                C140 * C504 + C541 + C541 + C124 * C528 + C142 * C505 + C542 +
                C542 + C125 * C529) *
                   C153513 * C153501 * C2454) *
                  C153397 * C153716 +
              ((C134 * C499 + C543 + C543 + C121 * C523 + C136 * C498 + C544 +
                C544 + C122 * C522 + C138 * C497 + C545 + C545 + C123 * C521 +
                C140 * C496 + C546 + C546 + C124 * C520 + C142 * C506 + C547 +
                C547 + C125 * C530) *
                   C153513 * C153501 * C153798 -
               (C142 * C149 + C174 + C174 + C125 * C165 + C140 * C148 + C175 +
                C175 + C124 * C164 + C138 * C147 + C176 + C176 + C123 * C163 +
                C136 * C146 + C177 + C177 + C122 * C162 + C134 * C145 + C178 +
                C178 + C121 * C161) *
                   C153513 * C153501 * C153797 -
               (C142 * C507 + C548 + C548 + C125 * C531 + C140 * C505 + C549 +
                C549 + C124 * C529 + C138 * C504 + C550 + C550 + C123 * C528 +
                C136 * C503 + C551 + C551 + C122 * C527 + C134 * C502 + C552 +
                C552 + C121 * C526) *
                   C153513 * C153501 * C2454) *
                  C153397 * C153384) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 +
                 C2737 + C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
                 C153761 * C162) *
                    C153513 * C153812 +
                (C3086 + C3087 + C3088) * C153513 * C153800 + C3108 * C153774) *
                   C153797 -
               (C5625 * C153774 + (C4213 + C4214 + C4215) * C153513 * C153800 +
                (C2733 * C498 + C3346 + C3346 + C153761 * C522 + C2731 * C499 +
                 C3347 + C3347 + C2724 * C523 + C2729 * C500 + C3348 + C3348 +
                 C2723 * C524) *
                    C153513 * C153812) *
                   C153798 +
               ((C2729 * C501 + C3349 + C3349 + C2723 * C525 + C2731 * C502 +
                 C3350 + C3350 + C2724 * C526 + C2733 * C503 + C3351 + C3351 +
                 C153761 * C527) *
                    C153513 * C153812 +
                (C4870 + C4871 + C4872) * C153513 * C153800 +
                (C4873 + C4874 + C4875) * C153513 * C153774) *
                   C2454) *
                  C153397 * C153716 +
              (((C2729 * C499 + C3358 + C3358 + C2723 * C523 + C2731 * C498 +
                 C3359 + C3359 + C2724 * C522 + C2733 * C497 + C3360 + C3360 +
                 C153761 * C521) *
                    C153513 * C153812 +
                (C4216 + C4217 + C4218) * C153513 * C153800 +
                (C4219 + C4220 + C4221) * C153513 * C153774) *
                   C153798 -
               (C3109 * C153774 + (C3097 + C3096 + C3095) * C153513 * C153800 +
                (C2733 * C147 + C2751 + C2751 + C153761 * C163 + C2731 * C146 +
                 C2752 + C2752 + C2724 * C162 + C2729 * C145 + C2753 + C2753 +
                 C2723 * C161) *
                    C153513 * C153812) *
                   C153797 -
               ((C2733 * C3330 + C3367 + C3367 + C153761 * C3338 +
                 C2731 * C3329 + C3368 + C3368 + C2724 * C3337 + C2729 * C3328 +
                 C3369 + C3369 + C2723 * C3336) *
                    C153513 * C153774 +
                (C2733 * C1366 + C3370 + C3370 + C153761 * C1376 +
                 C2731 * C1367 + C3371 + C3371 + C2724 * C1377 + C2729 * C1368 +
                 C3372 + C3372 + C2723 * C1378) *
                    C153513 * C153800 +
                (C2733 * C504 + C3373 + C3373 + C153761 * C528 + C2731 * C503 +
                 C3374 + C3374 + C2724 * C527 + C2729 * C502 + C3375 + C3375 +
                 C2723 * C526) *
                    C153513 * C153812) *
                   C2454) *
                  C153397 * C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 +
             C2737 + C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
             C153761 * C162) *
                C153813 +
            (C7654 + C7655 + C7656) * C153802 + C7674 * C153777) *
               C153501 * C153797 -
           (C10397 * C153777 + (C7659 + C7658 + C7657) * C153802 +
            (C7656 + C7655 + C7654) * C153813) *
               C153501 * C153798 +
           (C7674 * C153813 + (C7662 + C7661 + C7660) * C153802 +
            (C10404 + C10405 + C10406) * C153777) *
               C153501 * C2454) *
              C153397 * C153716 +
          (((C7663 + C7664 + C7665) * C153813 +
            (C7666 + C7667 + C7668) * C153802 +
            (C7669 + C7670 + C7671) * C153777) *
               C153501 * C153798 -
           (C7675 * C153777 + (C7665 + C7664 + C7663) * C153802 +
            (C2733 * C147 + C2751 + C2751 + C153761 * C163 + C2731 * C146 +
             C2752 + C2752 + C2724 * C162 + C2729 * C145 + C2753 + C2753 +
             C2723 * C161) *
                C153813) *
               C153501 * C153797 -
           ((C2733 * C7563 + C7615 + C7615 + C153761 * C7571 + C2731 * C7562 +
             C7616 + C7616 + C2724 * C7570 + C2729 * C7561 + C7617 + C7617 +
             C2723 * C7569) *
                C153777 +
            (C7671 + C7670 + C7669) * C153802 + C7675 * C153813) *
               C153501 * C2454) *
              C153397 * C153384)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
             C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 +
             C23999 + C153761 * C162) *
                C153513 * C23987 +
            (C24335 + C24336 + C24337) * C153513 * C23988 + C24357 * C153774) *
               C153797 -
           (C26823 * C153774 + (C25438 + C25439 + C25440) * C153513 * C23988 +
            (C23994 * C498 + C24583 + C24583 + C153761 * C522 + C23992 * C499 +
             C24584 + C24584 + C153790 * C523 + C23990 * C500 + C24585 +
             C24585 + C153809 * C524) *
                C153513 * C23987) *
               C153798 +
           ((C23990 * C501 + C24586 + C24586 + C153809 * C525 + C23992 * C502 +
             C24587 + C24587 + C153790 * C526 + C23994 * C503 + C24588 +
             C24588 + C153761 * C527) *
                C153513 * C23987 +
            (C26077 + C26078 + C26079) * C153513 * C23988 +
            (C26080 + C26081 + C26082) * C153513 * C153774) *
               C2454) *
              C153397 * C153716 +
          (((C23990 * C499 + C24595 + C24595 + C153809 * C523 + C23992 * C498 +
             C24596 + C24596 + C153790 * C522 + C23994 * C497 + C24597 +
             C24597 + C153761 * C521) *
                C153513 * C23987 +
            (C25441 + C25442 + C25443) * C153513 * C23988 +
            (C25444 + C25445 + C25446) * C153513 * C153774) *
               C153798 -
           (C24358 * C153774 + (C24346 + C24345 + C24344) * C153513 * C23988 +
            (C23994 * C147 + C24012 + C24012 + C153761 * C163 + C23992 * C146 +
             C24013 + C24013 + C153790 * C162 + C23990 * C145 + C24014 +
             C24014 + C153809 * C161) *
                C153513 * C23987) *
               C153797 -
           ((C23994 * C3330 + C24604 + C24604 + C153761 * C3338 +
             C23992 * C3329 + C24605 + C24605 + C153790 * C3337 +
             C23990 * C3328 + C24606 + C24606 + C153809 * C3336) *
                C153513 * C153774 +
            (C23994 * C1366 + C24607 + C24607 + C153761 * C1376 +
             C23992 * C1367 + C24608 + C24608 + C153790 * C1377 +
             C23990 * C1368 + C24609 + C24609 + C153809 * C1378) *
                C153513 * C23988 +
            (C23994 * C504 + C24610 + C24610 + C153761 * C528 + C23992 * C503 +
             C24611 + C24611 + C153790 * C527 + C23990 * C502 + C24612 +
             C24612 + C153809 * C526) *
                C153513 * C23987) *
               C2454) *
              C153397 * C153384)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153513 *
                C28229 +
            C28439 * C28230 + C28440 * C28231 + C28441 * C28232 +
            C28442 * C28233) *
               C153797 -
           (C29081 * C28233 + C29082 * C28232 + C29083 * C28231 +
            C29084 * C28230 +
            (C28234 * C500 + C28581 + C28581 + C153338 * C524) * C153513 *
                C28229) *
               C153798 +
           ((C28234 * C501 + C28582 + C28582 + C153338 * C525) * C153513 *
                C28229 +
            C29449 * C28230 + C29450 * C28231 + C29451 * C28232 +
            C29452 * C28233) *
               C2454) *
              C153397 * C153716 +
          (((C28234 * C499 + C28587 + C28587 + C153338 * C523) * C153513 *
                C28229 +
            C29085 * C28230 + C29086 * C28231 + C29087 * C28232 +
            C29088 * C28233) *
               C153798 -
           (C28447 * C28233 + C28446 * C28232 + C28445 * C28231 +
            C28444 * C28230 +
            (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C153513 *
                C28229) *
               C153797 -
           ((C28234 * C28571 + C28592 + C28592 + C153338 * C28575) * C153513 *
                C28233 +
            (C28234 * C4834 + C28593 + C28593 + C153338 * C4840) * C153513 *
                C28232 +
            (C28234 * C3328 + C28594 + C28594 + C153338 * C3336) * C153513 *
                C28231 +
            (C28234 * C1368 + C28595 + C28595 + C153338 * C1378) * C153513 *
                C28230 +
            (C28234 * C502 + C28596 + C28596 + C153338 * C526) * C153513 *
                C28229) *
               C2454) *
              C153397 * C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153813 +
             C31295 * C153802 + C31296 * C153777) *
                C23987 +
            (C30985 + C30986 + C30987) * C23988 + C31011 * C153774) *
               C153797 -
           (C33429 * C153774 + (C32077 + C32078 + C32079) * C23988 +
            (C31299 * C153777 + C31296 * C153802 + C31295 * C153813) * C23987) *
               C153798 +
           ((C31296 * C153813 + C31299 * C153802 + C34025 * C153777) * C23987 +
            (C32677 + C32678 + C32697) * C23988 +
            (C32681 + C32682 + C32698) * C153774) *
               C2454) *
              C153397 * C153716 +
          (((C31300 * C153813 + C31301 * C153802 + C31302 * C153777) * C23987 +
            (C32080 + C32081 + C32082) * C23988 +
            (C32083 + C32084 + C32085) * C153774) *
               C153798 -
           (C31021 * C153774 + (C31018 + C30995 + C30994) * C23988 +
            (C31301 * C153777 + C31300 * C153802 +
             (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C153813) *
                C23987) *
               C153797 -
           (((C28234 * C31240 + C31272 + C31272 + C153338 * C31244) * C153777 +
             C31304 * C153802 + C31016 * C153813) *
                C153774 +
            ((C28234 * C9041 + C31273 + C31273 + C153338 * C9047) * C153777 +
             C31303 * C153802 + C31015 * C153813) *
                C23988 +
            ((C28234 * C7561 + C31274 + C31274 + C153338 * C7569) * C153777 +
             C31302 * C153802 + C31301 * C153813) *
                C23987) *
               C2454) *
              C153397 * C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
             C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 +
             C23999 + C153761 * C162) *
                C47673 +
            (C48203 + C48204 + C48205) * C47674 + C48223 * C153777) *
               C153501 * C153797 -
           (C50925 * C153777 + (C48208 + C48207 + C48206) * C47674 +
            (C48205 + C48204 + C48203) * C47673) *
               C153501 * C153798 +
           (C48223 * C47673 + (C48211 + C48210 + C48209) * C47674 +
            (C50932 + C50933 + C50934) * C153777) *
               C153501 * C2454) *
              C153397 * C153716 +
          (((C48212 + C48213 + C48214) * C47673 +
            (C48215 + C48216 + C48217) * C47674 +
            (C48218 + C48219 + C48220) * C153777) *
               C153501 * C153798 -
           (C48224 * C153777 + (C48214 + C48213 + C48212) * C47674 +
            (C23994 * C147 + C24012 + C24012 + C153761 * C163 + C23992 * C146 +
             C24013 + C24013 + C153790 * C162 + C23990 * C145 + C24014 +
             C24014 + C153809 * C161) *
                C47673) *
               C153501 * C153797 -
           ((C23994 * C7563 + C48164 + C48164 + C153761 * C7571 +
             C23992 * C7562 + C48165 + C48165 + C153790 * C7570 +
             C23990 * C7561 + C48166 + C48166 + C153809 * C7569) *
                C153777 +
            (C48220 + C48219 + C48218) * C47674 + C48224 * C47673) *
               C153501 * C2454) *
              C153397 * C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C47673 +
             C31295 * C47674 + C31296 * C153777) *
                C153812 +
            (C52025 + C52026 + C52027) * C153800 + C52045 * C153774) *
               C153797 -
           (C54332 * C153774 + (C53000 + C53001 + C53002) * C153800 +
            (C31299 * C153777 + C31296 * C47674 + C31295 * C47673) * C153812) *
               C153798 +
           ((C31296 * C47673 + C31299 * C47674 + C34025 * C153777) * C153812 +
            (C53596 + C53597 + C53598) * C153800 +
            (C53599 + C53600 + C53601) * C153774) *
               C2454) *
              C153397 * C153716 +
          (((C31300 * C47673 + C31301 * C47674 + C31302 * C153777) * C153812 +
            (C53003 + C53004 + C53005) * C153800 +
            (C53006 + C53007 + C53008) * C153774) *
               C153798 -
           (C52046 * C153774 + (C52036 + C52035 + C52034) * C153800 +
            (C31301 * C153777 + C31300 * C47674 +
             (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C47673) *
                C153812) *
               C153797 -
           (((C28234 * C31240 + C31272 + C31272 + C153338 * C31244) * C153777 +
             C31304 * C47674 + C31016 * C47673) *
                C153774 +
            ((C28234 * C9041 + C31273 + C31273 + C153338 * C9047) * C153777 +
             C31303 * C47674 + C31015 * C47673) *
                C153800 +
            ((C28234 * C7561 + C31274 + C31274 + C153338 * C7569) * C153777 +
             C31302 * C47674 + C31301 * C47673) *
                C153812) *
               C2454) *
              C153397 * C153384)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C55722 +
            C31295 * C55723 + C31296 * C55724 + C31299 * C55725 +
            C34025 * C55726) *
               C153501 * C153797 -
           (C55996 * C55726 + C34025 * C55725 + C31299 * C55724 +
            C31296 * C55723 + C31295 * C55722) *
               C153501 * C153798 +
           (C31296 * C55722 + C31299 * C55723 + C34025 * C55724 +
            C55996 * C55725 + C57501 * C55726) *
               C153501 * C2454) *
              C153397 * C153716 +
          ((C31300 * C55722 + C31301 * C55723 + C31302 * C55724 +
            C55997 * C55725 + C55998 * C55726) *
               C153501 * C153798 -
           (C55997 * C55726 + C31302 * C55725 + C31301 * C55724 +
            C31300 * C55723 +
            (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C55722) *
               C153501 * C153797 -
           ((C28234 * C55975 + C55989 + C55989 + C153338 * C55979) * C55726 +
            C55998 * C55725 + C55997 * C55724 + C31302 * C55723 +
            C31301 * C55722) *
               C153501 * C2454) *
              C153397 * C153384)) /
            (p * q * std::sqrt(p + q));
    d2ee[194] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C144 + C169 + C169 + C121 * C160 + C136 * C145 + C170 +
            C170 + C122 * C161 + C138 * C146 + C171 + C171 + C123 * C162 +
            C140 * C147 + C172 + C172 + C124 * C163 + C142 * C148 + C173 +
            C173 + C125 * C164) *
               C153513 * C153501 * C1938 -
           (C142 * C496 + C533 + C533 + C125 * C520 + C140 * C497 + C534 +
            C534 + C124 * C521 + C138 * C498 + C535 + C535 + C123 * C522 +
            C136 * C499 + C536 + C536 + C122 * C523 + C134 * C500 + C537 +
            C537 + C121 * C524) *
               C153513 * C153501 * C153477) *
              C153397 * C1133 +
          ((C134 * C499 + C543 + C543 + C121 * C523 + C136 * C498 + C544 +
            C544 + C122 * C522 + C138 * C497 + C545 + C545 + C123 * C521 +
            C140 * C496 + C546 + C546 + C124 * C520 + C142 * C506 + C547 +
            C547 + C125 * C530) *
               C153513 * C153501 * C153477 -
           (C142 * C149 + C174 + C174 + C125 * C165 + C140 * C148 + C175 +
            C175 + C124 * C164 + C138 * C147 + C176 + C176 + C123 * C163 +
            C136 * C146 + C177 + C177 + C122 * C162 + C134 * C145 + C178 +
            C178 + C121 * C161) *
               C153513 * C153501 * C1938) *
              C153397 * C1134 +
          ((C134 * C146 + C179 + C179 + C121 * C162 + C136 * C147 + C180 +
            C180 + C122 * C163 + C138 * C148 + C181 + C181 + C123 * C164 +
            C140 * C149 + C182 + C182 + C124 * C165 + C142 * C150 + C183 +
            C183 + C125 * C166) *
               C153513 * C153501 * C1938 -
           (C142 * C811 + C815 + C815 + C125 * C813 + C140 * C506 + C816 +
            C816 + C124 * C530 + C138 * C496 + C817 + C817 + C123 * C520 +
            C136 * C497 + C818 + C818 + C122 * C521 + C134 * C498 + C819 +
            C819 + C121 * C522) *
               C153513 * C153501 * C153477) *
              C153397 * C1135)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C144 + C169 + C169 + C121 * C160 + C136 * C145 + C170 +
            C170 + C122 * C161 + C138 * C146 + C171 + C171 + C123 * C162 +
            C140 * C147 + C172 + C172 + C124 * C163 + C142 * C148 + C173 +
            C173 + C125 * C164) *
               C153513 * C153501 * C1938 -
           (C142 * C496 + C533 + C533 + C125 * C520 + C140 * C497 + C534 +
            C534 + C124 * C521 + C138 * C498 + C535 + C535 + C123 * C522 +
            C136 * C499 + C536 + C536 + C122 * C523 + C134 * C500 + C537 +
            C537 + C121 * C524) *
               C153513 * C153501 * C153477) *
              C310 +
          ((C134 * C981 + C1000 + C1000 + C121 * C993 + C136 * C982 + C1001 +
            C1001 + C122 * C994 + C138 * C983 + C1002 + C1002 + C123 * C995 +
            C140 * C984 + C1003 + C1003 + C124 * C996 + C142 * C985 + C1004 +
            C1004 + C125 * C997) *
               C153513 * C153501 * C153477 -
           (C142 * C315 + C352 + C352 + C125 * C339 + C140 * C316 + C353 +
            C353 + C124 * C340 + C138 * C317 + C354 + C354 + C123 * C341 +
            C136 * C318 + C355 + C355 + C122 * C342 + C134 * C319 + C356 +
            C356 + C121 * C343) *
               C153513 * C153501 * C1938) *
              C311 +
          ((C134 * C320 + C357 + C357 + C121 * C344 + C136 * C321 + C358 +
            C358 + C122 * C345 + C138 * C322 + C359 + C359 + C123 * C346 +
            C140 * C323 + C360 + C360 + C124 * C347 + C142 * C324 + C361 +
            C361 + C125 * C348) *
               C153513 * C153501 * C1938 -
           (C142 * C1796 + C1812 + C1812 + C125 * C1806 + C140 * C1797 + C1813 +
            C1813 + C124 * C1807 + C138 * C1798 + C1814 + C1814 + C123 * C1808 +
            C136 * C1799 + C1815 + C1815 + C122 * C1809 + C134 * C1800 + C1816 +
            C1816 + C121 * C1810) *
               C153513 * C153501 * C153477) *
              C312) *
         C153378) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 +
             C2737 + C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
             C153761 * C162) *
                C153513 * C153812 +
            (C3086 + C3087 + C3088) * C153513 * C153800 + C3108 * C153774) *
               C1938 -
           (C5625 * C153774 + (C4213 + C4214 + C4215) * C153513 * C153800 +
            (C2733 * C498 + C3346 + C3346 + C153761 * C522 + C2731 * C499 +
             C3347 + C3347 + C2724 * C523 + C2729 * C500 + C3348 + C3348 +
             C2723 * C524) *
                C153513 * C153812) *
               C153477) *
              C153397 * C1133 +
          (((C2729 * C499 + C3358 + C3358 + C2723 * C523 + C2731 * C498 +
             C3359 + C3359 + C2724 * C522 + C2733 * C497 + C3360 + C3360 +
             C153761 * C521) *
                C153513 * C153812 +
            (C4216 + C4217 + C4218) * C153513 * C153800 +
            (C4219 + C4220 + C4221) * C153513 * C153774) *
               C153477 -
           (C3109 * C153774 + (C3097 + C3096 + C3095) * C153513 * C153800 +
            (C2733 * C147 + C2751 + C2751 + C153761 * C163 + C2731 * C146 +
             C2752 + C2752 + C2724 * C162 + C2729 * C145 + C2753 + C2753 +
             C2723 * C161) *
                C153513 * C153812) *
               C1938) *
              C153397 * C1134 +
          (((C2729 * C146 + C2754 + C2754 + C2723 * C162 + C2731 * C147 +
             C2755 + C2755 + C2724 * C163 + C2733 * C148 + C2756 + C2756 +
             C153761 * C164) *
                C153513 * C153812 +
            (C3621 + C3622 + C3623) * C153513 * C153800 +
            (C3624 + C3625 + C3626) * C153513 * C153774) *
               C1938 -
           ((C2733 * C1796 + C3845 + C3845 + C153761 * C1806 + C2731 * C1797 +
             C3846 + C3846 + C2724 * C1807 + C2729 * C1798 + C3847 + C3847 +
             C2723 * C1808) *
                C153513 * C153774 +
            (C2733 * C985 + C3848 + C3848 + C153761 * C997 + C2731 * C984 +
             C3849 + C3849 + C2724 * C996 + C2729 * C983 + C3850 + C3850 +
             C2723 * C995) *
                C153513 * C153800 +
            (C2733 * C496 + C3851 + C3851 + C153761 * C520 + C2731 * C497 +
             C3852 + C3852 + C2724 * C521 + C2729 * C498 + C3853 + C3853 +
             C2723 * C522) *
                C153513 * C153812) *
               C153477) *
              C153397 * C1135)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 +
             C2737 + C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
             C153761 * C162) *
                C153513 * C153812 +
            (C3086 + C3087 + C3088) * C153513 * C153800 + C3108 * C153774) *
               C1938 -
           (C5625 * C153774 + (C4213 + C4214 + C4215) * C153513 * C153800 +
            (C2733 * C498 + C3346 + C3346 + C153761 * C522 + C2731 * C499 +
             C3347 + C3347 + C2724 * C523 + C2729 * C500 + C3348 + C3348 +
             C2723 * C524) *
                C153513 * C153812) *
               C153477) *
              C310 +
          (((C4215 + C4214 + C4213) * C153513 * C153812 +
            (C4212 + C4211 + C4210) * C153513 * C153800 +
            (C5629 + C5630 + C5631) * C153513 * C153774) *
               C153477 -
           (C4609 * C153774 + (C3091 + C3090 + C3089) * C153513 * C153800 +
            (C3088 + C3087 + C3086) * C153513 * C153812) *
               C1938) *
              C311 +
          ((C3108 * C153812 + (C3094 + C3093 + C3092) * C153513 * C153800 +
            (C4613 + C4614 + C4615) * C153513 * C153774) *
               C1938 -
           ((C2733 * C5601 + C5618 + C5618 + C153761 * C5607 + C2731 * C5602 +
             C5619 + C5619 + C2724 * C5608 + C2729 * C5603 + C5620 + C5620 +
             C2723 * C5609) *
                C153513 * C153774 +
            (C5631 + C5630 + C5629) * C153513 * C153800 + C5625 * C153812) *
               C153477) *
              C312) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 +
             C2737 + C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
             C153761 * C162) *
                C153813 +
            (C7654 + C7655 + C7656) * C153802 + C7674 * C153777) *
               C153501 * C1938 -
           ((C7660 + C7661 + C7662) * C153777 +
            (C7659 + C7658 + C7657) * C153802 +
            (C7656 + C7655 + C7654) * C153813) *
               C153501 * C153477) *
              C153397 * C1133 +
          (((C7663 + C7664 + C7665) * C153813 +
            (C7666 + C7667 + C7668) * C153802 +
            (C7669 + C7670 + C7671) * C153777) *
               C153501 * C153477 -
           (C7675 * C153777 + (C7665 + C7664 + C7663) * C153802 +
            (C2733 * C147 + C2751 + C2751 + C153761 * C163 + C2731 * C146 +
             C2752 + C2752 + C2724 * C162 + C2729 * C145 + C2753 + C2753 +
             C2723 * C161) *
                C153813) *
               C153501 * C1938) *
              C153397 * C1134 +
          (((C2729 * C146 + C2754 + C2754 + C2723 * C162 + C2731 * C147 +
             C2755 + C2755 + C2724 * C163 + C2733 * C148 + C2756 + C2756 +
             C153761 * C164) *
                C153813 +
            (C8142 + C8143 + C8144) * C153802 +
            (C8145 + C8146 + C8147) * C153777) *
               C153501 * C1938 -
           ((C2733 * C2148 + C8127 + C8127 + C153761 * C2158 + C2731 * C2149 +
             C8128 + C8128 + C2724 * C2159 + C2729 * C2150 + C8129 + C8129 +
             C2723 * C2160) *
                C153777 +
            (C8147 + C8146 + C8145) * C153802 +
            (C8144 + C8143 + C8142) * C153813) *
               C153501 * C153477) *
              C153397 * C1135)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 +
             C2737 + C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
             C153761 * C162) *
                C153813 +
            (C7654 + C7655 + C7656) * C153802 + C7674 * C153777) *
               C153501 * C1938 -
           ((C7660 + C7661 + C7662) * C153777 +
            (C7659 + C7658 + C7657) * C153802 +
            (C7656 + C7655 + C7654) * C153813) *
               C153501 * C153477) *
              C310 +
          (((C4215 + C4214 + C4213) * C153813 +
            (C4870 + C4871 + C4872) * C153802 +
            (C9067 + C9068 + C9069) * C153777) *
               C153501 * C153477 -
           (C9063 * C153777 + (C4213 + C4214 + C4215) * C153802 +
            (C3088 + C3087 + C3086) * C153813) *
               C153501 * C1938) *
              C311 +
          ((C3106 * C153813 + (C4212 + C4211 + C4210) * C153802 +
            (C4873 + C4874 + C4875) * C153777) *
               C153501 * C1938 -
           ((C2733 * C6213 + C6232 + C6232 + C153761 * C6225 + C2731 * C6214 +
             C6233 + C6233 + C2724 * C6226 + C2729 * C6215 + C6234 + C6234 +
             C2723 * C6227) *
                C153777 +
            (C4875 + C4874 + C4873) * C153802 + C5621 * C153813) *
               C153501 * C153477) *
              C312) *
         C153378) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
             C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 +
             C23999 + C153761 * C162) *
                C153513 * C23987 +
            (C24335 + C24336 + C24337) * C153513 * C23988 + C24357 * C153774) *
               C1938 -
           (C26823 * C153774 + (C25438 + C25439 + C25440) * C153513 * C23988 +
            (C23994 * C498 + C24583 + C24583 + C153761 * C522 + C23992 * C499 +
             C24584 + C24584 + C153790 * C523 + C23990 * C500 + C24585 +
             C24585 + C153809 * C524) *
                C153513 * C23987) *
               C153477) *
              C153397 * C1133 +
          (((C23990 * C499 + C24595 + C24595 + C153809 * C523 + C23992 * C498 +
             C24596 + C24596 + C153790 * C522 + C23994 * C497 + C24597 +
             C24597 + C153761 * C521) *
                C153513 * C23987 +
            (C25441 + C25442 + C25443) * C153513 * C23988 +
            (C25444 + C25445 + C25446) * C153513 * C153774) *
               C153477 -
           (C24358 * C153774 + (C24346 + C24345 + C24344) * C153513 * C23988 +
            (C23994 * C147 + C24012 + C24012 + C153761 * C163 + C23992 * C146 +
             C24013 + C24013 + C153790 * C162 + C23990 * C145 + C24014 +
             C24014 + C153809 * C161) *
                C153513 * C23987) *
               C1938) *
              C153397 * C1134 +
          (((C23990 * C146 + C24015 + C24015 + C153809 * C162 + C23992 * C147 +
             C24016 + C24016 + C153790 * C163 + C23994 * C148 + C24017 +
             C24017 + C153761 * C164) *
                C153513 * C23987 +
            (C24858 + C24859 + C24860) * C153513 * C23988 +
            (C24861 + C24862 + C24863) * C153513 * C153774) *
               C1938 -
           ((C23994 * C1796 + C25082 + C25082 + C153761 * C1806 +
             C23992 * C1797 + C25083 + C25083 + C153790 * C1807 +
             C23990 * C1798 + C25084 + C25084 + C153809 * C1808) *
                C153513 * C153774 +
            (C23994 * C985 + C25085 + C25085 + C153761 * C997 + C23992 * C984 +
             C25086 + C25086 + C153790 * C996 + C23990 * C983 + C25087 +
             C25087 + C153809 * C995) *
                C153513 * C23988 +
            (C23994 * C496 + C25088 + C25088 + C153761 * C520 + C23992 * C497 +
             C25089 + C25089 + C153790 * C521 + C23990 * C498 + C25090 +
             C25090 + C153809 * C522) *
                C153513 * C23987) *
               C153477) *
              C153397 * C1135)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
             C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 +
             C23999 + C153761 * C162) *
                C153513 * C23987 +
            (C24335 + C24336 + C24337) * C153513 * C23988 + C24357 * C153774) *
               C1938 -
           (C26823 * C153774 + (C25438 + C25439 + C25440) * C153513 * C23988 +
            (C23994 * C498 + C24583 + C24583 + C153761 * C522 + C23992 * C499 +
             C24584 + C24584 + C153790 * C523 + C23990 * C500 + C24585 +
             C24585 + C153809 * C524) *
                C153513 * C23987) *
               C153477) *
              C310 +
          (((C25440 + C25439 + C25438) * C153513 * C23987 +
            (C25437 + C25436 + C25435) * C153513 * C23988 +
            (C26827 + C26828 + C26829) * C153513 * C153774) *
               C153477 -
           (C25825 * C153774 + (C24340 + C24339 + C24338) * C153513 * C23988 +
            (C24337 + C24336 + C24335) * C153513 * C23987) *
               C1938) *
              C311 +
          ((C24357 * C23987 + (C24343 + C24342 + C24341) * C153513 * C23988 +
            (C25829 + C25830 + C25831) * C153513 * C153774) *
               C1938 -
           ((C23994 * C5601 + C26816 + C26816 + C153761 * C5607 +
             C23992 * C5602 + C26817 + C26817 + C153790 * C5608 +
             C23990 * C5603 + C26818 + C26818 + C153809 * C5609) *
                C153513 * C153774 +
            (C26829 + C26828 + C26827) * C153513 * C23988 + C26823 * C23987) *
               C153477) *
              C312) *
         C153378) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153513 *
                C28229 +
            C28439 * C28230 + C28440 * C28231 + C28441 * C28232 +
            C28442 * C28233) *
               C1938 -
           (C29081 * C28233 + C29082 * C28232 + C29083 * C28231 +
            C29084 * C28230 +
            (C28234 * C500 + C28581 + C28581 + C153338 * C524) * C153513 *
                C28229) *
               C153477) *
              C153397 * C1133 +
          (((C28234 * C499 + C28587 + C28587 + C153338 * C523) * C153513 *
                C28229 +
            C29085 * C28230 + C29086 * C28231 + C29087 * C28232 +
            C29088 * C28233) *
               C153477 -
           (C28447 * C28233 + C28446 * C28232 + C28445 * C28231 +
            C28444 * C28230 +
            (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C153513 *
                C28229) *
               C1938) *
              C153397 * C1134 +
          (((C28234 * C146 + C28247 + C28247 + C153338 * C162) * C153513 *
                C28229 +
            C28740 * C28230 + C28741 * C28231 + C28742 * C28232 +
            C28743 * C28233) *
               C1938 -
           ((C28234 * C5601 + C28866 + C28866 + C153338 * C5607) * C153513 *
                C28233 +
            (C28234 * C4145 + C28867 + C28867 + C153338 * C4153) * C153513 *
                C28232 +
            (C28234 * C1798 + C28868 + C28868 + C153338 * C1808) * C153513 *
                C28231 +
            (C28234 * C983 + C28869 + C28869 + C153338 * C995) * C153513 *
                C28230 +
            (C28234 * C498 + C28870 + C28870 + C153338 * C522) * C153513 *
                C28229) *
               C153477) *
              C153397 * C1135)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153513 *
                C28229 +
            C28439 * C28230 + C28440 * C28231 + C28441 * C28232 +
            C28442 * C28233) *
               C1938 -
           (C29081 * C28233 + C29082 * C28232 + C29083 * C28231 +
            C29084 * C28230 +
            (C28234 * C500 + C28581 + C28581 + C153338 * C524) * C153513 *
                C28229) *
               C153477) *
              C310 +
          ((C29084 * C28229 + C29083 * C28230 + C29082 * C28231 +
            C29081 * C28232 + C29868 * C28233) *
               C153477 -
           (C28443 * C28233 + C28442 * C28232 + C28441 * C28231 +
            C28440 * C28230 + C28439 * C28229) *
               C1938) *
              C311 +
          ((C28440 * C28229 + C28441 * C28230 + C28442 * C28231 +
            C28443 * C28232 + C29302 * C28233) *
               C1938 -
           ((C28234 * C29858 + C29864 + C29864 + C153338 * C29860) * C153513 *
                C28233 +
            C29868 * C28232 + C29081 * C28231 + C29082 * C28230 +
            C29083 * C28229) *
               C153477) *
              C312) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153813 +
             C31295 * C153802 + C31296 * C153777) *
                C23987 +
            (C30985 + C30986 + C30987) * C23988 + C31011 * C153774) *
               C1938 -
           (C33429 * C153774 + (C32077 + C32078 + C32079) * C23988 +
            (C31299 * C153777 + C31296 * C153802 + C31295 * C153813) * C23987) *
               C153477) *
              C153397 * C1133 +
          (((C31300 * C153813 + C31301 * C153802 + C31302 * C153777) * C23987 +
            (C32080 + C32081 + C32082) * C23988 +
            (C32083 + C32084 + C32085) * C153774) *
               C153477 -
           (C31021 * C153774 + (C31018 + C30995 + C30994) * C23988 +
            (C31301 * C153777 + C31300 * C153802 +
             (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C153813) *
                C23987) *
               C1938) *
              C153397 * C1134 +
          ((((C28234 * C146 + C28247 + C28247 + C153338 * C162) * C153813 +
             C31779 * C153802 + C31780 * C153777) *
                C23987 +
            (C31523 + C31546 + C31547) * C23988 +
            (C31528 + C31548 + C31549) * C153774) *
               C1938 -
           (((C28234 * C6213 + C31772 + C31772 + C153338 * C6225) * C153777 +
             C31545 * C153802 + C31544 * C153813) *
                C153774 +
            ((C28234 * C6216 + C31773 + C31773 + C153338 * C6228) * C153777 +
             C31543 * C153802 + C31542 * C153813) *
                C23988 +
            ((C28234 * C2150 + C31774 + C31774 + C153338 * C2160) * C153777 +
             C31780 * C153802 + C31779 * C153813) *
                C23987) *
               C153477) *
              C153397 * C1135)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153813 +
             C31295 * C153802 + C31296 * C153777) *
                C23987 +
            (C30985 + C30986 + C30987) * C23988 + C31011 * C153774) *
               C1938 -
           (C33429 * C153774 + (C32077 + C32078 + C32079) * C23988 +
            (C31299 * C153777 + C31296 * C153802 + C31295 * C153813) * C23987) *
               C153477) *
              C310 +
          (((C32079 + C32078 + C32077) * C23987 +
            (C32076 + C32075 + C32074) * C23988 +
            (C33426 + C33427 + C33428) * C153774) *
               C153477 -
           (C32455 * C153774 + (C30990 + C30989 + C30988) * C23988 +
            (C30987 + C30986 + C30985) * C23987) *
               C1938) *
              C311 +
          ((C31011 * C23987 + (C30993 + C30992 + C30991) * C23988 +
            (C32452 + C32453 + C32454) * C153774) *
               C1938 -
           (((C28234 * C30194 + C30201 + C30201 + C153338 * C30198) * C153777 +
             C29448 * C153802 + C29073 * C153813) *
                C153774 +
            (C33428 + C33427 + C33426) * C23988 + C33429 * C23987) *
               C153477) *
              C312) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
             C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 +
             C23999 + C153761 * C162) *
                C47673 +
            (C48203 + C48204 + C48205) * C47674 + C48223 * C153777) *
               C153501 * C1938 -
           ((C48209 + C48210 + C48211) * C153777 +
            (C48208 + C48207 + C48206) * C47674 +
            (C48205 + C48204 + C48203) * C47673) *
               C153501 * C153477) *
              C153397 * C1133 +
          (((C48212 + C48213 + C48214) * C47673 +
            (C48215 + C48216 + C48217) * C47674 +
            (C48218 + C48219 + C48220) * C153777) *
               C153501 * C153477 -
           (C48224 * C153777 + (C48214 + C48213 + C48212) * C47674 +
            (C23994 * C147 + C24012 + C24012 + C153761 * C163 + C23992 * C146 +
             C24013 + C24013 + C153790 * C162 + C23990 * C145 + C24014 +
             C24014 + C153809 * C161) *
                C47673) *
               C153501 * C1938) *
              C153397 * C1134 +
          (((C23990 * C146 + C24015 + C24015 + C153809 * C162 + C23992 * C147 +
             C24016 + C24016 + C153790 * C163 + C23994 * C148 + C24017 +
             C24017 + C153761 * C164) *
                C47673 +
            (C48691 + C48692 + C48693) * C47674 +
            (C48694 + C48695 + C48696) * C153777) *
               C153501 * C1938 -
           ((C23994 * C2148 + C48676 + C48676 + C153761 * C2158 +
             C23992 * C2149 + C48677 + C48677 + C153790 * C2159 +
             C23990 * C2150 + C48678 + C48678 + C153809 * C2160) *
                C153777 +
            (C48696 + C48695 + C48694) * C47674 +
            (C48693 + C48692 + C48691) * C47673) *
               C153501 * C153477) *
              C153397 * C1135)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
             C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 +
             C23999 + C153761 * C162) *
                C47673 +
            (C48203 + C48204 + C48205) * C47674 + C48223 * C153777) *
               C153501 * C1938 -
           ((C48209 + C48210 + C48211) * C153777 +
            (C48208 + C48207 + C48206) * C47674 +
            (C48205 + C48204 + C48203) * C47673) *
               C153501 * C153477) *
              C310 +
          (((C25440 + C25439 + C25438) * C47673 +
            (C26077 + C26078 + C26079) * C47674 +
            (C49604 + C49605 + C49606) * C153777) *
               C153501 * C153477 -
           (C49600 * C153777 + (C25438 + C25439 + C25440) * C47674 +
            (C24337 + C24336 + C24335) * C47673) *
               C153501 * C1938) *
              C311 +
          ((C24355 * C47673 + (C25437 + C25436 + C25435) * C47674 +
            (C26080 + C26081 + C26082) * C153777) *
               C153501 * C1938 -
           ((C23994 * C6213 + C27412 + C27412 + C153761 * C6225 +
             C23992 * C6214 + C27413 + C27413 + C153790 * C6226 +
             C23990 * C6215 + C27414 + C27414 + C153809 * C6227) *
                C153777 +
            (C26082 + C26081 + C26080) * C47674 + C26819 * C47673) *
               C153501 * C153477) *
              C312) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C47673 +
             C31295 * C47674 + C31296 * C153777) *
                C153812 +
            (C52025 + C52026 + C52027) * C153800 + C52045 * C153774) *
               C1938 -
           (C54332 * C153774 + (C53000 + C53001 + C53002) * C153800 +
            (C31299 * C153777 + C31296 * C47674 + C31295 * C47673) * C153812) *
               C153477) *
              C153397 * C1133 +
          (((C31300 * C47673 + C31301 * C47674 + C31302 * C153777) * C153812 +
            (C53003 + C53004 + C53005) * C153800 +
            (C53006 + C53007 + C53008) * C153774) *
               C153477 -
           (C52046 * C153774 + (C52036 + C52035 + C52034) * C153800 +
            (C31301 * C153777 + C31300 * C47674 +
             (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C47673) *
                C153812) *
               C1938) *
              C153397 * C1134 +
          ((((C28234 * C146 + C28247 + C28247 + C153338 * C162) * C47673 +
             C31779 * C47674 + C31780 * C153777) *
                C153812 +
            (C52483 + C52484 + C52485) * C153800 +
            (C52486 + C52487 + C52488) * C153774) *
               C1938 -
           (((C28234 * C6213 + C31772 + C31772 + C153338 * C6225) * C153777 +
             C31545 * C47674 + C31544 * C47673) *
                C153774 +
            ((C28234 * C6216 + C31773 + C31773 + C153338 * C6228) * C153777 +
             C31543 * C47674 + C31542 * C47673) *
                C153800 +
            ((C28234 * C2150 + C31774 + C31774 + C153338 * C2160) * C153777 +
             C31780 * C47674 + C31779 * C47673) *
                C153812) *
               C153477) *
              C153397 * C1135)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C47673 +
             C31295 * C47674 + C31296 * C153777) *
                C153812 +
            (C52025 + C52026 + C52027) * C153800 + C52045 * C153774) *
               C1938 -
           (C54332 * C153774 + (C53000 + C53001 + C53002) * C153800 +
            (C31299 * C153777 + C31296 * C47674 + C31295 * C47673) * C153812) *
               C153477) *
              C310 +
          (((C53002 + C53001 + C53000) * C153812 +
            (C52999 + C52998 + C52997) * C153800 +
            (C54329 + C54330 + C54331) * C153774) *
               C153477 -
           (C53377 * C153774 + (C52030 + C52029 + C52028) * C153800 +
            (C52027 + C52026 + C52025) * C153812) *
               C1938) *
              C311 +
          ((C52045 * C153812 + (C52033 + C52032 + C52031) * C153800 +
            (C53374 + C53375 + C53376) * C153774) *
               C1938 -
           (((C28234 * C30194 + C30201 + C30201 + C153338 * C30198) * C153777 +
             C29448 * C47674 + C29073 * C47673) *
                C153774 +
            (C54331 + C54330 + C54329) * C153800 + C54332 * C153812) *
               C153477) *
              C312) *
         C153378) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C55722 +
            C31295 * C55723 + C31296 * C55724 + C31299 * C55725 +
            C34025 * C55726) *
               C153501 * C1938 -
           (C55996 * C55726 + C34025 * C55725 + C31299 * C55724 +
            C31296 * C55723 + C31295 * C55722) *
               C153501 * C153477) *
              C153397 * C1133 +
          ((C31300 * C55722 + C31301 * C55723 + C31302 * C55724 +
            C55997 * C55725 + C55998 * C55726) *
               C153501 * C153477 -
           (C55997 * C55726 + C31302 * C55725 + C31301 * C55724 +
            C31300 * C55723 +
            (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C55722) *
               C153501 * C1938) *
              C153397 * C1134 +
          (((C28234 * C146 + C28247 + C28247 + C153338 * C162) * C55722 +
            C31779 * C55723 + C31780 * C55724 + C56253 * C55725 +
            C56254 * C55726) *
               C153501 * C1938 -
           ((C28234 * C10377 + C56248 + C56248 + C153338 * C10383) * C55726 +
            C56254 * C55725 + C56253 * C55724 + C31780 * C55723 +
            C31779 * C55722) *
               C153501 * C153477) *
              C153397 * C1135)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C55722 +
            C31295 * C55723 + C31296 * C55724 + C31299 * C55725 +
            C34025 * C55726) *
               C153501 * C1938 -
           (C55996 * C55726 + C34025 * C55725 + C31299 * C55724 +
            C31296 * C55723 + C31295 * C55722) *
               C153501 * C153477) *
              C310 +
          ((C29076 * C55722 + C29445 * C55723 + C31298 * C55724 +
            C32694 * C55725 + C56760 * C55726) *
               C153501 * C153477 -
           (C32694 * C55726 + C31298 * C55725 + C29445 * C55724 +
            C29076 * C55723 + C28429 * C55722) *
               C153501 * C1938) *
              C311 +
          ((C28430 * C55722 + C29075 * C55723 + C29446 * C55724 +
            C31297 * C55725 + C32695 * C55726) *
               C153501 * C1938 -
           ((C28234 * C34011 + C34020 + C34020 + C153338 * C34015) * C55726 +
            C32695 * C55725 + C31297 * C55724 + C29446 * C55723 +
            C29075 * C55722) *
               C153501 * C153477) *
              C312) *
         C153378) /
            (p * q * std::sqrt(p + q));
    d2ee[195] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C34887 * C144 + C34892 + C34892 + C153705 * C160 + C34889 * C145 +
              C34893 + C34893 + C153348 * C161) *
                 C153740 +
             (C39432 + C39433) * C153600) *
                C23987 +
            ((C35190 + C35191) * C153740 + (C36183 + C36182) * C153600) *
                C23988 +
            C39086 * C153774) *
               C153413 * C153724 -
           ((C37402 * C153600 + C36515 * C153740) * C153774 +
            (C37403 * C153600 + (C35193 + C35192) * C153740) * C23988 +
            ((C36182 + C36183) * C153600 + (C35191 + C35190) * C153740) *
                C23987) *
               C153413 * C153449) *
              C153793 +
          ((((C35198 + C35199) * C153740 + (C36184 + C36185) * C153600) *
                C23987 +
            ((C35200 + C35201) * C153740 + (C36186 + C36187) * C153600) *
                C23988 +
            ((C35202 + C35203) * C153740 + (C36188 + C36189) * C153600) *
                C153774) *
               C153413 * C153449 -
           (C39087 * C153774 +
            ((C36185 + C36184) * C153600 + (C35199 + C35198) * C153740) *
                C23988 +
            ((C39437 + C39436) * C153600 +
             (C34889 * C146 + C34906 + C34906 + C153348 * C162 + C34887 * C145 +
              C34907 + C34907 + C153705 * C161) *
                 C153740) *
                C23987) *
               C153413 * C153724) *
              C153794 +
          ((((C34887 * C146 + C34908 + C34908 + C153705 * C162 + C34889 * C147 +
              C34909 + C34909 + C153348 * C163) *
                 C153740 +
             (C34887 * C498 + C35867 + C35867 + C153705 * C522 + C34889 * C497 +
              C35866 + C35866 + C153348 * C521) *
                 C153600) *
                C23987 +
            ((C35660 + C35661) * C153740 + (C39750 + C39751) * C153600) *
                C23988 +
            ((C35662 + C35663) * C153740 + (C39752 + C39753) * C153600) *
                C153774) *
               C153413 * C153724 -
           (((C34889 * C4146 + C35860 + C35860 + C153348 * C4154 +
              C34887 * C4145 + C35861 + C35861 + C153705 * C4153) *
                 C153600 +
             (C35665 + C35664) * C153740) *
                C153774 +
            ((C39753 + C39752) * C153600 + (C35663 + C35662) * C153740) *
                C23988 +
            ((C39751 + C39750) * C153600 + (C35661 + C35660) * C153740) *
                C23987) *
               C153413 * C153449) *
              C678)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C11268 * C144 + C11277 + C11277 + C11262 * C160 + C11270 * C145 +
             C11278 + C11278 + C11263 * C161 + C11272 * C146 + C11279 + C11279 +
             C11264 * C162 + C11274 * C147 + C11280 + C11280 + C153738 * C163) *
                C153740 +
            (C15551 + C15552 + C15553 + C15554) * C153600) *
               C153501 * C153413 * C153724 -
           ((C12543 + C12544 + C12545 + C12546) * C153600 +
            (C11586 + C11585 + C11584 + C11583) * C153740) *
               C153501 * C153413 * C153449) *
              C153793 +
          (((C11591 + C11592 + C11593 + C11594) * C153740 +
            (C12547 + C12548 + C12549 + C12550) * C153600) *
               C153501 * C153413 * C153449 -
           ((C15562 + C15561 + C15560 + C15559) * C153600 +
            (C11274 * C148 + C11289 + C11289 + C153738 * C164 + C11272 * C147 +
             C11290 + C11290 + C11264 * C163 + C11270 * C146 + C11291 + C11291 +
             C11263 * C162 + C11268 * C145 + C11292 + C11292 + C11262 * C161) *
                C153740) *
               C153501 * C153413 * C153724) *
              C153794 +
          (((C11268 * C146 + C11293 + C11293 + C11262 * C162 + C11270 * C147 +
             C11294 + C11294 + C11263 * C163 + C11272 * C148 + C11295 + C11295 +
             C11264 * C164 + C11274 * C149 + C11296 + C11296 + C153738 * C165) *
                C153740 +
            (C11268 * C498 + C12244 + C12244 + C11262 * C522 + C11270 * C497 +
             C12243 + C12243 + C11263 * C521 + C11272 * C496 + C12242 + C12242 +
             C11264 * C520 + C11274 * C506 + C12241 + C12241 + C153738 * C530) *
                C153600) *
               C153501 * C153413 * C153724 -
           ((C11274 * C986 + C12237 + C12237 + C153738 * C998 + C11272 * C985 +
             C12238 + C12238 + C11264 * C997 + C11270 * C984 + C12239 + C12239 +
             C11263 * C996 + C11268 * C983 + C12240 + C12240 + C11262 * C995) *
                C153600 +
            (C12042 + C12041 + C12040 + C12039) * C153740) *
               C153501 * C153413 * C153449) *
              C678)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C34887 * C144 + C34892 + C34892 + C153705 * C160 + C34889 * C145 +
             C34893 + C34893 + C153348 * C161) *
                C63340 +
            (C39432 + C39433) * C63341 + C58686 * C63342 + C63735 * C153754) *
               C153501 * C153413 * C153724 -
           (C60478 * C153754 + C41229 * C63342 + C40447 * C63341 +
            (C35191 + C35190) * C63340) *
               C153501 * C153413 * C153449) *
              C153793 +
          (((C35198 + C35199) * C63340 + C40448 * C63341 + C59703 * C63342 +
            (C58711 + C58712) * C153754) *
               C153501 * C153413 * C153449 -
           (C63740 * C153754 + C58696 * C63342 + (C39437 + C39436) * C63341 +
            (C34889 * C146 + C34906 + C34906 + C153348 * C162 + C34887 * C145 +
             C34907 + C34907 + C153705 * C161) *
                C63340) *
               C153501 * C153413 * C153724) *
              C153794 +
          (((C34887 * C146 + C34908 + C34908 + C153705 * C162 + C34889 * C147 +
             C34909 + C34909 + C153348 * C163) *
                C63340 +
            (C40058 + C40059) * C63341 + (C59315 + C59316) * C63342 +
            (C34887 * C2150 + C59310 + C59310 + C153705 * C2160 +
             C34889 * C2149 + C59309 + C59309 + C153348 * C2159) *
                C153754) *
               C153501 * C153413 * C153724 -
           ((C34889 * C8437 + C59307 + C59307 + C153348 * C8439 +
             C34887 * C6216 + C59308 + C59308 + C153705 * C6228) *
                C153754 +
            (C59012 + C59011) * C63342 + (C39751 + C39750) * C63341 +
            (C35661 + C35660) * C63340) *
               C153501 * C153413 * C153449) *
              C678)) /
            (p * q * std::sqrt(p + q));
    d2ee[196] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C34887 * C144 + C34892 + C34892 + C153705 * C160 +
               C34889 * C145 + C34893 + C34893 + C153348 * C161) *
                  C153740 +
              (C39432 + C39433) * C153600) *
                 C23987 +
             ((C35190 + C35191) * C153740 + C40446 * C153600) * C23988 +
             C39086 * C153774) *
                C153725 -
            (((C36753 + C36752) * C153600 + C37403 * C153740) * C153774 +
             ((C36751 + C36750) * C153600 + C40447 * C153740) * C23988 +
             ((C39434 + C39435) * C153600 + (C39433 + C39432) * C153740) *
                 C23987) *
                C153477) *
               C153724 +
           (((C40446 * C153740 + (C36750 + C36751) * C153600) * C23987 +
             (C39081 * C153740 + (C36752 + C36753) * C153600) * C23988 +
             ((C36179 + C36178) * C153740 + (C36754 + C36755) * C153600) *
                 C153774) *
                C153477 -
            ((C37402 * C153600 + C36515 * C153740) * C153774 +
             (C37403 * C153600 + (C35193 + C35192) * C153740) * C23988 +
             (C40447 * C153600 + (C35191 + C35190) * C153740) * C23987) *
                C153725) *
               C153449) *
              C313 +
          (((((C39436 + C39437) * C153740 + (C39438 + C39439) * C153600) *
                 C23987 +
             (C40448 * C153740 + (C39440 + C39441) * C153600) * C23988 +
             (C40449 * C153740 + (C39442 + C39443) * C153600) * C153774) *
                C153477 -
            (C39087 * C153774 +
             (C40450 * C153600 + (C35199 + C35198) * C153740) * C23988 +
             ((C39437 + C39436) * C153600 +
              (C34889 * C146 + C34906 + C34906 + C153348 * C162 +
               C34887 * C145 + C34907 + C34907 + C153705 * C161) *
                  C153740) *
                 C23987) *
                C153725) *
               C153724 +
           ((((C35198 + C35199) * C153740 + C40448 * C153600) * C23987 +
             ((C35200 + C35201) * C153740 + C40449 * C153600) * C23988 +
             ((C35202 + C35203) * C153740 + (C36188 + C36189) * C153600) *
                 C153774) *
                C153725 -
            (((C34889 * C4833 + C35432 + C35432 + C153348 * C4839 +
               C34887 * C4834 + C35433 + C35433 + C153705 * C4840) *
                  C153600 +
              (C36189 + C36188) * C153740) *
                 C153774 +
             ((C39443 + C39442) * C153600 + C39082 * C153740) * C23988 +
             ((C39441 + C39440) * C153600 + C40450 * C153740) * C23987) *
                C153477) *
               C153449) *
              C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C11268 * C144 + C11277 + C11277 + C11262 * C160 + C11270 * C145 +
              C11278 + C11278 + C11263 * C161 + C11272 * C146 + C11279 +
              C11279 + C11264 * C162 + C11274 * C147 + C11280 + C11280 +
              C153738 * C163) *
                 C153740 +
             (C15551 + C15552 + C15553 + C15554) * C153600) *
                C153501 * C153725 -
            ((C15555 + C15556 + C15557 + C15558) * C153600 +
             (C15554 + C15553 + C15552 + C15551) * C153740) *
                C153501 * C153477) *
               C153724 +
           (((C12546 + C12545 + C12544 + C12543) * C153740 +
             (C13113 + C13114 + C13115 + C13116) * C153600) *
                C153501 * C153477 -
            ((C12543 + C12544 + C12545 + C12546) * C153600 +
             (C11586 + C11585 + C11584 + C11583) * C153740) *
                C153501 * C153725) *
               C153449) *
              C313 +
          ((((C15559 + C15560 + C15561 + C15562) * C153740 +
             (C15563 + C15564 + C15565 + C15566) * C153600) *
                C153501 * C153477 -
            ((C15562 + C15561 + C15560 + C15559) * C153600 +
             (C11274 * C148 + C11289 + C11289 + C153738 * C164 + C11272 * C147 +
              C11290 + C11290 + C11264 * C163 + C11270 * C146 + C11291 +
              C11291 + C11263 * C162 + C11268 * C145 + C11292 + C11292 +
              C11262 * C161) *
                 C153740) *
                C153501 * C153725) *
               C153724 +
           (((C11591 + C11592 + C11593 + C11594) * C153740 +
             (C12547 + C12548 + C12549 + C12550) * C153600) *
                C153501 * C153725 -
            ((C11274 * C1365 + C11817 + C11817 + C153738 * C1375 +
              C11272 * C1366 + C11818 + C11818 + C11264 * C1376 +
              C11270 * C1367 + C11819 + C11819 + C11263 * C1377 +
              C11268 * C1368 + C11820 + C11820 + C11262 * C1378) *
                 C153600 +
             (C12550 + C12549 + C12548 + C12547) * C153740) *
                C153501 * C153477) *
               C153449) *
              C153384)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C34887 * C144 + C34892 + C34892 + C153705 * C160 + C34889 * C145 +
              C34893 + C34893 + C153348 * C161) *
                 C63340 +
             (C39432 + C39433) * C63341 + C58686 * C63342 + C63735 * C153754) *
                C153501 * C153725 -
            ((C62244 + C62243) * C153754 + C62230 * C63342 +
             (C39434 + C39435) * C63341 + (C39433 + C39432) * C63340) *
                C153501 * C153477) *
               C153724 +
           ((C40446 * C63340 + C41230 * C63341 + C60479 * C63342 +
             (C60488 + C60489) * C153754) *
                C153501 * C153477 -
            (C60478 * C153754 + C41229 * C63342 + C40447 * C63341 +
             (C35191 + C35190) * C63340) *
                C153501 * C153725) *
               C153449) *
              C313 +
          ((((C39436 + C39437) * C63340 + (C39438 + C39439) * C63341 +
             (C58709 + C58710) * C63342 + (C63747 + C63748) * C153754) *
                C153501 * C153477 -
            (C63740 * C153754 + C58696 * C63342 + (C39437 + C39436) * C63341 +
             (C34889 * C146 + C34906 + C34906 + C153348 * C162 + C34887 * C145 +
              C34907 + C34907 + C153705 * C161) *
                 C63340) *
                C153501 * C153725) *
               C153724 +
           (((C35198 + C35199) * C63340 + C40448 * C63341 + C59703 * C63342 +
             (C58711 + C58712) * C153754) *
                C153501 * C153725 -
            ((C34889 * C9040 + C58697 + C58697 + C153348 * C9046 +
              C34887 * C9041 + C58698 + C58698 + C153705 * C9047) *
                 C153754 +
             (C58712 + C58711) * C63342 + C58695 * C63341 + C40450 * C63340) *
                C153501 * C153477) *
               C153449) *
              C153384)) /
            (p * q * std::sqrt(p + q));
    d2ee[197] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((C11268 * C144 + C11277 + C11277 + C11262 * C160 +
                C11270 * C145 + C11278 + C11278 + C11263 * C161 +
                C11272 * C146 + C11279 + C11279 + C11264 * C162 +
                C11274 * C147 + C11280 + C11280 + C153738 * C163) *
                   C153740 +
               (C11268 * C500 + C11800 + C11800 + C11262 * C524 +
                C11270 * C499 + C11799 + C11799 + C11263 * C523 +
                C11272 * C498 + C11798 + C11798 + C11264 * C522 +
                C11274 * C497 + C11797 + C11797 + C153738 * C521) *
                   C153600) *
                  C153501 * C153413 * C153397 * C130 -
              ((C11274 * C496 + C11812 + C11812 + C153738 * C520 +
                C11272 * C497 + C11811 + C11811 + C11264 * C521 +
                C11270 * C498 + C11810 + C11810 + C11263 * C522 +
                C11268 * C499 + C11809 + C11809 + C11262 * C523) *
                   C153600 +
               (C11274 * C148 + C11289 + C11289 + C153738 * C164 +
                C11272 * C147 + C11290 + C11290 + C11264 * C163 +
                C11270 * C146 + C11291 + C11291 + C11263 * C162 +
                C11268 * C145 + C11292 + C11292 + C11262 * C161) *
                   C153740) *
                  C153501 * C153413 * C153397 * C131 +
              ((C11268 * C146 + C11293 + C11293 + C11262 * C162 +
                C11270 * C147 + C11294 + C11294 + C11263 * C163 +
                C11272 * C148 + C11295 + C11295 + C11264 * C164 +
                C11274 * C149 + C11296 + C11296 + C153738 * C165) *
                   C153740 +
               (C11268 * C498 + C12244 + C12244 + C11262 * C522 +
                C11270 * C497 + C12243 + C12243 + C11263 * C521 +
                C11272 * C496 + C12242 + C12242 + C11264 * C520 +
                C11274 * C506 + C12241 + C12241 + C153738 * C530) *
                   C153600) *
                  C153501 * C153413 * C153397 * C132 -
              ((C11274 * C811 + C15091 + C15091 + C153738 * C813 +
                C11272 * C506 + C15092 + C15092 + C11264 * C530 +
                C11270 * C496 + C15093 + C15093 + C11263 * C520 +
                C11268 * C497 + C15094 + C15094 + C11262 * C521) *
                   C153600 +
               (C11274 * C150 + C11305 + C11305 + C153738 * C166 +
                C11272 * C149 + C11306 + C11306 + C11264 * C165 +
                C11270 * C148 + C11307 + C11307 + C11263 * C164 +
                C11268 * C147 + C11308 + C11308 + C11262 * C163) *
                   C153740) *
                  C153501 * C153413 * C153397 * C133) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C11268 * C144 + C11277 + C11277 + C11262 * C160 +
                 C11270 * C145 + C11278 + C11278 + C11263 * C161 +
                 C11272 * C146 + C11279 + C11279 + C11264 * C162 +
                 C11274 * C147 + C11280 + C11280 + C153738 * C163) *
                    C153740 +
                (C11268 * C500 + C11800 + C11800 + C11262 * C524 +
                 C11270 * C499 + C11799 + C11799 + C11263 * C523 +
                 C11272 * C498 + C11798 + C11798 + C11264 * C522 +
                 C11274 * C497 + C11797 + C11797 + C153738 * C521) *
                    C153600) *
                   C153501 * C153413 * C310 -
               ((C12543 + C12544 + C12545 + C12546) * C153600 +
                (C11586 + C11585 + C11584 + C11583) * C153740) *
                   C153501 * C153413 * C311 +
               ((C11590 + C11589 + C11588 + C11587) * C153740 +
                (C13783 + C13784 + C13785 + C13786) * C153600) *
                   C153501 * C153413 * C312) *
                  C313 +
              (((C11591 + C11592 + C11593 + C11594) * C153740 +
                (C12547 + C12548 + C12549 + C12550) * C153600) *
                   C153501 * C153413 * C311 -
               ((C11274 * C496 + C11812 + C11812 + C153738 * C520 +
                 C11272 * C497 + C11811 + C11811 + C11264 * C521 +
                 C11270 * C498 + C11810 + C11810 + C11263 * C522 +
                 C11268 * C499 + C11809 + C11809 + C11262 * C523) *
                    C153600 +
                (C11274 * C148 + C11289 + C11289 + C153738 * C164 +
                 C11272 * C147 + C11290 + C11290 + C11264 * C163 +
                 C11270 * C146 + C11291 + C11291 + C11263 * C162 +
                 C11268 * C145 + C11292 + C11292 + C11262 * C161) *
                    C153740) *
                   C153501 * C153413 * C310 -
               ((C11274 * C1796 + C12523 + C12523 + C153738 * C1806 +
                 C11272 * C1797 + C12524 + C12524 + C11264 * C1807 +
                 C11270 * C1798 + C12525 + C12525 + C11263 * C1808 +
                 C11268 * C1799 + C12526 + C12526 + C11262 * C1809) *
                    C153600 +
                (C11598 + C11597 + C11596 + C11595) * C153740) *
                   C153501 * C153413 * C312) *
                  C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C11268 * C144 + C11277 + C11277 + C11262 * C160 + C11270 * C145 +
             C11278 + C11278 + C11263 * C161 + C11272 * C146 + C11279 + C11279 +
             C11264 * C162 + C11274 * C147 + C11280 + C11280 + C153738 * C163) *
                C153740 +
            (C15551 + C15552 + C15553 + C15554) * C153600) *
               C153501 * C493 -
           ((C15555 + C15556 + C15557 + C15558) * C153600 +
            (C15554 + C15553 + C15552 + C15551) * C153740) *
               C153501 * C494 +
           ((C15558 + C15557 + C15556 + C15555) * C153740 +
            (C11268 * C2152 + C14312 + C14312 + C11262 * C2162 +
             C11270 * C2151 + C14311 + C14311 + C11263 * C2161 +
             C11272 * C2150 + C14310 + C14310 + C11264 * C2160 +
             C11274 * C2149 + C14309 + C14309 + C153738 * C2159) *
                C153600) *
               C153501 * C495) *
              C153397 * C313 +
          (((C15559 + C15560 + C15561 + C15562) * C153740 +
            (C15563 + C15564 + C15565 + C15566) * C153600) *
               C153501 * C494 -
           ((C15562 + C15561 + C15560 + C15559) * C153600 +
            (C11274 * C148 + C11289 + C11289 + C153738 * C164 + C11272 * C147 +
             C11290 + C11290 + C11264 * C163 + C11270 * C146 + C11291 + C11291 +
             C11263 * C162 + C11268 * C145 + C11292 + C11292 + C11262 * C161) *
                C153740) *
               C153501 * C493 -
           ((C11274 * C2148 + C15515 + C15515 + C153738 * C2158 +
             C11272 * C2149 + C15516 + C15516 + C11264 * C2159 +
             C11270 * C2150 + C15517 + C15517 + C11263 * C2160 +
             C11268 * C2151 + C15518 + C15518 + C11262 * C2161) *
                C153600 +
            (C15566 + C15565 + C15564 + C15563) * C153740) *
               C153501 * C495) *
              C153397 * C153384)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C34887 * C144 + C34892 + C34892 + C153705 * C160 + C34889 * C145 +
             C34893 + C34893 + C153348 * C161) *
                C153740 +
            (C34887 * C500 + C35415 + C35415 + C153705 * C524 + C34889 * C499 +
             C35414 + C35414 + C153348 * C523) *
                C153600) *
               C23987 +
           ((C35190 + C35191) * C153740 + (C36183 + C36182) * C153600) *
               C23988 +
           (C35206 * C153740 + (C36181 + C36180) * C153600) * C153774) *
              C153413 * C153397 * C130 -
          (((C36187 + C36186) * C153600 + C35209 * C153740) * C153774 +
           ((C36185 + C36184) * C153600 + (C35199 + C35198) * C153740) *
               C23988 +
           ((C34889 * C498 + C35425 + C35425 + C153348 * C522 + C34887 * C499 +
             C35424 + C35424 + C153705 * C523) *
                C153600 +
            (C34889 * C146 + C34906 + C34906 + C153348 * C162 + C34887 * C145 +
             C34907 + C34907 + C153705 * C161) *
                C153740) *
               C23987) *
              C153413 * C153397 * C131 +
          (((C34887 * C146 + C34908 + C34908 + C153705 * C162 + C34889 * C147 +
             C34909 + C34909 + C153348 * C163) *
                C153740 +
            (C34887 * C498 + C35867 + C35867 + C153705 * C522 + C34889 * C497 +
             C35866 + C35866 + C153348 * C521) *
                C153600) *
               C23987 +
           ((C35660 + C35661) * C153740 +
            (C34887 * C983 + C35865 + C35865 + C153705 * C995 + C34889 * C984 +
             C35864 + C35864 + C153348 * C996) *
                C153600) *
               C23988 +
           ((C35662 + C35663) * C153740 +
            (C34887 * C1798 + C35863 + C35863 + C153705 * C1808 +
             C34889 * C1797 + C35862 + C35862 + C153348 * C1807) *
                C153600) *
               C153774) *
              C153413 * C153397 * C132 -
          (((C34889 * C1796 + C38784 + C38784 + C153348 * C1806 +
             C34887 * C1797 + C38785 + C38785 + C153705 * C1807) *
                C153600 +
            (C34889 * C324 + C34918 + C34918 + C153348 * C348 + C34887 * C323 +
             C34919 + C34919 + C153705 * C347) *
                C153740) *
               C153774 +
           ((C34889 * C985 + C38786 + C38786 + C153348 * C997 + C34887 * C984 +
             C38787 + C38787 + C153705 * C996) *
                C153600 +
            (C34889 * C315 + C34920 + C34920 + C153348 * C339 + C34887 * C316 +
             C34921 + C34921 + C153705 * C340) *
                C153740) *
               C23988 +
           ((C34889 * C496 + C38788 + C38788 + C153348 * C520 + C34887 * C497 +
             C38789 + C38789 + C153705 * C521) *
                C153600 +
            (C34889 * C148 + C34922 + C34922 + C153348 * C164 + C34887 * C147 +
             C34923 + C34923 + C153705 * C163) *
                C153740) *
               C23987) *
              C153413 * C153397 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C34887 * C144 + C34892 + C34892 + C153705 * C160 + C34889 * C145 +
              C34893 + C34893 + C153348 * C161) *
                 C153740 +
             (C34887 * C500 + C35415 + C35415 + C153705 * C524 + C34889 * C499 +
              C35414 + C35414 + C153348 * C523) *
                 C153600) *
                C23987 +
            ((C35190 + C35191) * C153740 + (C36183 + C36182) * C153600) *
                C23988 +
            C39086 * C153774) *
               C153413 * C310 -
           ((C37402 * C153600 + C36515 * C153740) * C153774 +
            (C37403 * C153600 + (C35193 + C35192) * C153740) * C23988 +
            ((C36182 + C36183) * C153600 + (C35191 + C35190) * C153740) *
                C23987) *
               C153413 * C311 +
           (C39086 * C23987 +
            (C35207 * C153740 + (C36179 + C36178) * C153600) * C23988 +
            ((C35197 + C35196) * C153740 + (C37416 + C37417) * C153600) *
                C153774) *
               C153413 * C312) *
              C313 +
          ((((C35198 + C35199) * C153740 + (C36184 + C36185) * C153600) *
                C23987 +
            ((C35200 + C35201) * C153740 + (C36186 + C36187) * C153600) *
                C23988 +
            ((C35202 + C35203) * C153740 + (C36188 + C36189) * C153600) *
                C153774) *
               C153413 * C311 -
           (C39087 * C153774 +
            ((C36185 + C36184) * C153600 + (C35199 + C35198) * C153740) *
                C23988 +
            ((C34889 * C498 + C35425 + C35425 + C153348 * C522 + C34887 * C499 +
              C35424 + C35424 + C153705 * C523) *
                 C153600 +
             (C34889 * C146 + C34906 + C34906 + C153348 * C162 + C34887 * C145 +
              C34907 + C34907 + C153705 * C161) *
                 C153740) *
                C23987) *
               C153413 * C310 -
           (((C34889 * C5601 + C36152 + C36152 + C153348 * C5607 +
              C34887 * C5602 + C36153 + C36153 + C153705 * C5608) *
                 C153600 +
             (C35205 + C35204) * C153740) *
                C153774 +
            ((C36189 + C36188) * C153600 + C35208 * C153740) * C23988 +
            C39087 * C23987) *
               C153413 * C312) *
              C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C34887 * C144 + C34892 + C34892 + C153705 * C160 + C34889 * C145 +
              C34893 + C34893 + C153348 * C161) *
                 C153740 +
             (C39432 + C39433) * C153600) *
                C23987 +
            ((C35190 + C35191) * C153740 + (C36183 + C36182) * C153600) *
                C23988 +
            C39086 * C153774) *
               C493 -
           (((C36753 + C36752) * C153600 + C37403 * C153740) * C153774 +
            ((C36751 + C36750) * C153600 + (C36182 + C36183) * C153740) *
                C23988 +
            ((C39434 + C39435) * C153600 + (C39433 + C39432) * C153740) *
                C23987) *
               C494 +
           (((C39435 + C39434) * C153740 +
             (C34887 * C2152 + C37943 + C37943 + C153705 * C2162 +
              C34889 * C2151 + C37942 + C37942 + C153348 * C2161) *
                 C153600) *
                C23987 +
            ((C36750 + C36751) * C153740 +
             (C34887 * C6218 + C37941 + C37941 + C153705 * C6230 +
              C34889 * C6217 + C37940 + C37940 + C153348 * C6229) *
                 C153600) *
                C23988 +
            ((C36752 + C36753) * C153740 +
             (C34887 * C6215 + C37939 + C37939 + C153705 * C6227 +
              C34889 * C6214 + C37938 + C37938 + C153348 * C6226) *
                 C153600) *
                C153774) *
               C495) *
              C153397 * C313 +
          ((((C39436 + C39437) * C153740 + (C39438 + C39439) * C153600) *
                C23987 +
            ((C36184 + C36185) * C153740 + (C39440 + C39441) * C153600) *
                C23988 +
            ((C36186 + C36187) * C153740 + (C39442 + C39443) * C153600) *
                C153774) *
               C494 -
           (C39087 * C153774 +
            ((C36185 + C36184) * C153600 + (C35199 + C35198) * C153740) *
                C23988 +
            ((C39437 + C39436) * C153600 +
             (C34889 * C146 + C34906 + C34906 + C153348 * C162 + C34887 * C145 +
              C34907 + C34907 + C153705 * C161) *
                 C153740) *
                C23987) *
               C493 -
           (((C34889 * C6213 + C39402 + C39402 + C153348 * C6225 +
              C34887 * C6214 + C39403 + C39403 + C153705 * C6226) *
                 C153600 +
             (C39443 + C39442) * C153740) *
                C153774 +
            ((C34889 * C6216 + C39404 + C39404 + C153348 * C6228 +
              C34887 * C6217 + C39405 + C39405 + C153705 * C6229) *
                 C153600 +
             (C39441 + C39440) * C153740) *
                C23988 +
            ((C34889 * C2150 + C39406 + C39406 + C153348 * C2160 +
              C34887 * C2151 + C39407 + C39407 + C153705 * C2161) *
                 C153600 +
             (C39439 + C39438) * C153740) *
                C23987) *
               C495) *
              C153397 * C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C34887 * C144 + C34892 + C34892 + C153705 * C160 + C34889 * C145 +
            C34893 + C34893 + C153348 * C161) *
               C63340 +
           (C39432 + C39433) * C63341 + C58686 * C63342 +
           (C43010 + C43011) * C153754) *
              C153501 * C153413 * C153397 * C130 -
          ((C58710 + C58709) * C153754 + C58696 * C63342 +
           (C39437 + C39436) * C63341 +
           (C34889 * C146 + C34906 + C34906 + C153348 * C162 + C34887 * C145 +
            C34907 + C34907 + C153705 * C161) *
               C63340) *
              C153501 * C153413 * C153397 * C131 +
          ((C34887 * C146 + C34908 + C34908 + C153705 * C162 + C34889 * C147 +
            C34909 + C34909 + C153348 * C163) *
               C63340 +
           (C40058 + C40059) * C63341 + (C59315 + C59316) * C63342 +
           (C34887 * C2150 + C59310 + C59310 + C153705 * C2160 +
            C34889 * C2149 + C59309 + C59309 + C153348 * C2159) *
               C153754) *
              C153501 * C153413 * C153397 * C132 -
          ((C34889 * C2148 + C63345 + C63345 + C153348 * C2158 +
            C34887 * C2149 + C63346 + C63346 + C153705 * C2159) *
               C153754 +
           (C34889 * C505 + C58104 + C58104 + C153348 * C529 + C34887 * C504 +
            C58105 + C58105 + C153705 * C528) *
               C63342 +
           (C34889 * C496 + C38788 + C38788 + C153348 * C520 + C34887 * C497 +
            C38789 + C38789 + C153705 * C521) *
               C63341 +
           (C34889 * C148 + C34922 + C34922 + C153348 * C164 + C34887 * C147 +
            C34923 + C34923 + C153705 * C163) *
               C63340) *
              C153501 * C153413 * C153397 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C34887 * C144 + C34892 + C34892 + C153705 * C160 + C34889 * C145 +
             C34893 + C34893 + C153348 * C161) *
                C63340 +
            (C39432 + C39433) * C63341 + C58686 * C63342 +
            (C43010 + C43011) * C153754) *
               C153501 * C153413 * C310 -
           (C60478 * C153754 + C41229 * C63342 + C40447 * C63341 +
            (C35191 + C35190) * C63340) *
               C153501 * C153413 * C311 +
           (C35206 * C63340 + C39081 * C63341 + C41235 * C63342 +
            (C41250 + C41251) * C153754) *
               C153501 * C153413 * C312) *
              C313 +
          (((C35198 + C35199) * C63340 + C40448 * C63341 + C59703 * C63342 +
            (C58711 + C58712) * C153754) *
               C153501 * C153413 * C311 -
           ((C58710 + C58709) * C153754 + C58696 * C63342 +
            (C39437 + C39436) * C63341 +
            (C34889 * C146 + C34906 + C34906 + C153348 * C162 + C34887 * C145 +
             C34907 + C34907 + C153705 * C161) *
                C63340) *
               C153501 * C153413 * C310 -
           ((C34889 * C6213 + C39402 + C39402 + C153348 * C6225 +
             C34887 * C6214 + C39403 + C39403 + C153705 * C6226) *
                C153754 +
            (C39443 + C39442) * C63342 + C39082 * C63341 + C35209 * C63340) *
               C153501 * C153413 * C312) *
              C153384)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C34887 * C144 + C34892 + C34892 + C153705 * C160 + C34889 * C145 +
             C34893 + C34893 + C153348 * C161) *
                C63340 +
            (C39432 + C39433) * C63341 + C58686 * C63342 + C63735 * C153754) *
               C153501 * C493 -
           ((C62244 + C62243) * C153754 + C62230 * C63342 +
            (C39434 + C39435) * C63341 + (C39433 + C39432) * C63340) *
               C153501 * C494 +
           (C58686 * C63340 + C63735 * C63341 + (C62243 + C62244) * C63342 +
            (C34887 * C10379 + C62238 + C62238 + C153705 * C10385 +
             C34889 * C10378 + C62237 + C62237 + C153348 * C10384) *
                C153754) *
               C153501 * C495) *
              C153397 * C313 +
          (((C39436 + C39437) * C63340 + (C39438 + C39439) * C63341 +
            (C58709 + C58710) * C63342 + (C63747 + C63748) * C153754) *
               C153501 * C494 -
           (C63740 * C153754 + C58696 * C63342 + (C39437 + C39436) * C63341 +
            (C34889 * C146 + C34906 + C34906 + C153348 * C162 + C34887 * C145 +
             C34907 + C34907 + C153705 * C161) *
                C63340) *
               C153501 * C493 -
           ((C34889 * C10377 + C63741 + C63741 + C153348 * C10383 +
             C34887 * C10378 + C63742 + C63742 + C153705 * C10384) *
                C153754 +
            (C63748 + C63747) * C63342 + C63740 * C63341 + C58696 * C63340) *
               C153501 * C495) *
              C153397 * C153384)) /
            (p * q * std::sqrt(p + q));
    d2ee[198] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C34887 * C144 + C34892 + C34892 + C153705 * C160 + C34889 * C145 +
              C34893 + C34893 + C153348 * C161) *
                 C153740 +
             (C39432 + C39433) * C153600) *
                C23987 +
            ((C35190 + C35191) * C153740 + (C36183 + C36182) * C153600) *
                C23988 +
            C39086 * C153774) *
               C153725 -
           (((C36753 + C36752) * C153600 + C37403 * C153740) * C153774 +
            ((C36751 + C36750) * C153600 + (C36182 + C36183) * C153740) *
                C23988 +
            ((C39434 + C39435) * C153600 + (C39433 + C39432) * C153740) *
                C23987) *
               C153477) *
              C153397 * C153793 +
          ((((C39436 + C39437) * C153740 + (C39438 + C39439) * C153600) *
                C23987 +
            ((C36184 + C36185) * C153740 + (C39440 + C39441) * C153600) *
                C23988 +
            ((C36186 + C36187) * C153740 + (C39442 + C39443) * C153600) *
                C153774) *
               C153477 -
           (C39087 * C153774 +
            ((C36185 + C36184) * C153600 + (C35199 + C35198) * C153740) *
                C23988 +
            ((C39437 + C39436) * C153600 +
             (C34889 * C146 + C34906 + C34906 + C153348 * C162 + C34887 * C145 +
              C34907 + C34907 + C153705 * C161) *
                 C153740) *
                C23987) *
               C153725) *
              C153397 * C153794 +
          ((((C34887 * C146 + C34908 + C34908 + C153705 * C162 + C34889 * C147 +
              C34909 + C34909 + C153348 * C163) *
                 C153740 +
             (C40058 + C40059) * C153600) *
                C23987 +
            ((C35660 + C35661) * C153740 + (C39750 + C39751) * C153600) *
                C23988 +
            ((C35662 + C35663) * C153740 + (C39752 + C39753) * C153600) *
                C153774) *
               C153725 -
           (((C34889 * C3330 + C40048 + C40048 + C153348 * C3338 +
              C34887 * C3329 + C40049 + C40049 + C153705 * C3337) *
                 C153600 +
             (C39753 + C39752) * C153740) *
                C153774 +
            ((C34889 * C1366 + C40050 + C40050 + C153348 * C1376 +
              C34887 * C1367 + C40051 + C40051 + C153705 * C1377) *
                 C153600 +
             (C39751 + C39750) * C153740) *
                C23988 +
            ((C34889 * C504 + C40052 + C40052 + C153348 * C528 + C34887 * C503 +
              C40053 + C40053 + C153705 * C527) *
                 C153600 +
             (C40059 + C40058) * C153740) *
                C23987) *
               C153477) *
              C153397 * C678)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C11268 * C144 + C11277 + C11277 + C11262 * C160 + C11270 * C145 +
             C11278 + C11278 + C11263 * C161 + C11272 * C146 + C11279 + C11279 +
             C11264 * C162 + C11274 * C147 + C11280 + C11280 + C153738 * C163) *
                C153740 +
            (C15551 + C15552 + C15553 + C15554) * C153600) *
               C153501 * C153725 -
           ((C15555 + C15556 + C15557 + C15558) * C153600 +
            (C15554 + C15553 + C15552 + C15551) * C153740) *
               C153501 * C153477) *
              C153397 * C153793 +
          (((C15559 + C15560 + C15561 + C15562) * C153740 +
            (C15563 + C15564 + C15565 + C15566) * C153600) *
               C153501 * C153477 -
           ((C15562 + C15561 + C15560 + C15559) * C153600 +
            (C11274 * C148 + C11289 + C11289 + C153738 * C164 + C11272 * C147 +
             C11290 + C11290 + C11264 * C163 + C11270 * C146 + C11291 + C11291 +
             C11263 * C162 + C11268 * C145 + C11292 + C11292 + C11262 * C161) *
                C153740) *
               C153501 * C153725) *
              C153397 * C153794 +
          (((C11268 * C146 + C11293 + C11293 + C11262 * C162 + C11270 * C147 +
             C11294 + C11294 + C11263 * C163 + C11272 * C148 + C11295 + C11295 +
             C11264 * C164 + C11274 * C149 + C11296 + C11296 + C153738 * C165) *
                C153740 +
            (C15975 + C15976 + C15977 + C15978) * C153600) *
               C153501 * C153725 -
           ((C11274 * C507 + C15963 + C15963 + C153738 * C531 + C11272 * C505 +
             C15964 + C15964 + C11264 * C529 + C11270 * C504 + C15965 + C15965 +
             C11263 * C528 + C11268 * C503 + C15966 + C15966 + C11262 * C527) *
                C153600 +
            (C15978 + C15977 + C15976 + C15975) * C153740) *
               C153501 * C153477) *
              C153397 * C678)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C34887 * C144 + C34892 + C34892 + C153705 * C160 + C34889 * C145 +
             C34893 + C34893 + C153348 * C161) *
                C63340 +
            (C39432 + C39433) * C63341 + C58686 * C63342 + C63735 * C153754) *
               C153501 * C153725 -
           ((C62244 + C62243) * C153754 + C62230 * C63342 +
            (C39434 + C39435) * C63341 + (C39433 + C39432) * C63340) *
               C153501 * C153477) *
              C153397 * C153793 +
          (((C39436 + C39437) * C63340 + (C39438 + C39439) * C63341 +
            (C58709 + C58710) * C63342 + (C63747 + C63748) * C153754) *
               C153501 * C153477 -
           (C63740 * C153754 + C58696 * C63342 + (C39437 + C39436) * C63341 +
            (C34889 * C146 + C34906 + C34906 + C153348 * C162 + C34887 * C145 +
             C34907 + C34907 + C153705 * C161) *
                C63340) *
               C153501 * C153725) *
              C153397 * C153794 +
          (((C34887 * C146 + C34908 + C34908 + C153705 * C162 + C34889 * C147 +
             C34909 + C34909 + C153348 * C163) *
                C63340 +
            (C40058 + C40059) * C63341 + (C59315 + C59316) * C63342 +
            (C64147 + C64148) * C153754) *
               C153501 * C153725 -
           ((C34889 * C7563 + C64141 + C64141 + C153348 * C7571 +
             C34887 * C7562 + C64142 + C64142 + C153705 * C7570) *
                C153754 +
            (C64148 + C64147) * C63342 + (C59316 + C59315) * C63341 +
            (C40059 + C40058) * C63340) *
               C153501 * C153477) *
              C153397 * C678)) /
            (p * q * std::sqrt(p + q));
    d2ee[199] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C11268 * C144 + C11277 + C11277 + C11262 * C160 + C11270 * C145 +
             C11278 + C11278 + C11263 * C161 + C11272 * C146 + C11279 + C11279 +
             C11264 * C162 + C11274 * C147 + C11280 + C11280 + C153738 * C163) *
                C153740 +
            (C11268 * C500 + C11800 + C11800 + C11262 * C524 + C11270 * C499 +
             C11799 + C11799 + C11263 * C523 + C11272 * C498 + C11798 + C11798 +
             C11264 * C522 + C11274 * C497 + C11797 + C11797 + C153738 * C521) *
                C153600) *
               C153501 * C153413 * C310 -
           ((C12543 + C12544 + C12545 + C12546) * C153600 +
            (C11586 + C11585 + C11584 + C11583) * C153740) *
               C153501 * C153413 * C311 +
           ((C11590 + C11589 + C11588 + C11587) * C153740 +
            (C13783 + C13784 + C13785 + C13786) * C153600) *
               C153501 * C153413 * C312) *
              C313 +
          (((C11591 + C11592 + C11593 + C11594) * C153740 +
            (C12547 + C12548 + C12549 + C12550) * C153600) *
               C153501 * C153413 * C311 -
           ((C11274 * C496 + C11812 + C11812 + C153738 * C520 + C11272 * C497 +
             C11811 + C11811 + C11264 * C521 + C11270 * C498 + C11810 + C11810 +
             C11263 * C522 + C11268 * C499 + C11809 + C11809 + C11262 * C523) *
                C153600 +
            (C11274 * C148 + C11289 + C11289 + C153738 * C164 + C11272 * C147 +
             C11290 + C11290 + C11264 * C163 + C11270 * C146 + C11291 + C11291 +
             C11263 * C162 + C11268 * C145 + C11292 + C11292 + C11262 * C161) *
                C153740) *
               C153501 * C153413 * C310 -
           ((C11274 * C1796 + C12523 + C12523 + C153738 * C1806 +
             C11272 * C1797 + C12524 + C12524 + C11264 * C1807 +
             C11270 * C1798 + C12525 + C12525 + C11263 * C1808 +
             C11268 * C1799 + C12526 + C12526 + C11262 * C1809) *
                C153600 +
            (C11598 + C11597 + C11596 + C11595) * C153740) *
               C153501 * C153413 * C312) *
              C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C11268 * C144 + C11277 + C11277 + C11262 * C160 + C11270 * C145 +
            C11278 + C11278 + C11263 * C161 + C11272 * C146 + C11279 + C11279 +
            C11264 * C162 + C11274 * C147 + C11280 + C11280 + C153738 * C163) *
               C153740 +
           (C11268 * C500 + C11800 + C11800 + C11262 * C524 + C11270 * C499 +
            C11799 + C11799 + C11263 * C523 + C11272 * C498 + C11798 + C11798 +
            C11264 * C522 + C11274 * C497 + C11797 + C11797 + C153738 * C521) *
               C153600) *
              C153501 * C153413 * C153397 * C130 -
          ((C11274 * C496 + C11812 + C11812 + C153738 * C520 + C11272 * C497 +
            C11811 + C11811 + C11264 * C521 + C11270 * C498 + C11810 + C11810 +
            C11263 * C522 + C11268 * C499 + C11809 + C11809 + C11262 * C523) *
               C153600 +
           (C11274 * C148 + C11289 + C11289 + C153738 * C164 + C11272 * C147 +
            C11290 + C11290 + C11264 * C163 + C11270 * C146 + C11291 + C11291 +
            C11263 * C162 + C11268 * C145 + C11292 + C11292 + C11262 * C161) *
               C153740) *
              C153501 * C153413 * C153397 * C131 +
          ((C11268 * C146 + C11293 + C11293 + C11262 * C162 + C11270 * C147 +
            C11294 + C11294 + C11263 * C163 + C11272 * C148 + C11295 + C11295 +
            C11264 * C164 + C11274 * C149 + C11296 + C11296 + C153738 * C165) *
               C153740 +
           (C11268 * C498 + C12244 + C12244 + C11262 * C522 + C11270 * C497 +
            C12243 + C12243 + C11263 * C521 + C11272 * C496 + C12242 + C12242 +
            C11264 * C520 + C11274 * C506 + C12241 + C12241 + C153738 * C530) *
               C153600) *
              C153501 * C153413 * C153397 * C132 -
          ((C11274 * C811 + C15091 + C15091 + C153738 * C813 + C11272 * C506 +
            C15092 + C15092 + C11264 * C530 + C11270 * C496 + C15093 + C15093 +
            C11263 * C520 + C11268 * C497 + C15094 + C15094 + C11262 * C521) *
               C153600 +
           (C11274 * C150 + C11305 + C11305 + C153738 * C166 + C11272 * C149 +
            C11306 + C11306 + C11264 * C165 + C11270 * C148 + C11307 + C11307 +
            C11263 * C164 + C11268 * C147 + C11308 + C11308 + C11262 * C163) *
               C153740) *
              C153501 * C153413 * C153397 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C34887 * C144 + C34892 + C34892 + C153705 * C160 + C34889 * C145 +
             C34893 + C34893 + C153348 * C161) *
                C153740 +
            (C34887 * C500 + C35415 + C35415 + C153705 * C524 + C34889 * C499 +
             C35414 + C35414 + C153348 * C523) *
                C153600) *
               C23987 +
           ((C35190 + C35191) * C153740 + (C36183 + C36182) * C153600) *
               C23988 +
           (C35206 * C153740 + (C36181 + C36180) * C153600) * C153774) *
              C153413 * C153397 * C130 -
          (((C36187 + C36186) * C153600 + C35209 * C153740) * C153774 +
           ((C36185 + C36184) * C153600 + (C35199 + C35198) * C153740) *
               C23988 +
           ((C34889 * C498 + C35425 + C35425 + C153348 * C522 + C34887 * C499 +
             C35424 + C35424 + C153705 * C523) *
                C153600 +
            (C34889 * C146 + C34906 + C34906 + C153348 * C162 + C34887 * C145 +
             C34907 + C34907 + C153705 * C161) *
                C153740) *
               C23987) *
              C153413 * C153397 * C131 +
          (((C34887 * C146 + C34908 + C34908 + C153705 * C162 + C34889 * C147 +
             C34909 + C34909 + C153348 * C163) *
                C153740 +
            (C34887 * C498 + C35867 + C35867 + C153705 * C522 + C34889 * C497 +
             C35866 + C35866 + C153348 * C521) *
                C153600) *
               C23987 +
           ((C35660 + C35661) * C153740 +
            (C34887 * C983 + C35865 + C35865 + C153705 * C995 + C34889 * C984 +
             C35864 + C35864 + C153348 * C996) *
                C153600) *
               C23988 +
           ((C35662 + C35663) * C153740 +
            (C34887 * C1798 + C35863 + C35863 + C153705 * C1808 +
             C34889 * C1797 + C35862 + C35862 + C153348 * C1807) *
                C153600) *
               C153774) *
              C153413 * C153397 * C132 -
          (((C34889 * C1796 + C38784 + C38784 + C153348 * C1806 +
             C34887 * C1797 + C38785 + C38785 + C153705 * C1807) *
                C153600 +
            (C34889 * C324 + C34918 + C34918 + C153348 * C348 + C34887 * C323 +
             C34919 + C34919 + C153705 * C347) *
                C153740) *
               C153774 +
           ((C34889 * C985 + C38786 + C38786 + C153348 * C997 + C34887 * C984 +
             C38787 + C38787 + C153705 * C996) *
                C153600 +
            (C34889 * C315 + C34920 + C34920 + C153348 * C339 + C34887 * C316 +
             C34921 + C34921 + C153705 * C340) *
                C153740) *
               C23988 +
           ((C34889 * C496 + C38788 + C38788 + C153348 * C520 + C34887 * C497 +
             C38789 + C38789 + C153705 * C521) *
                C153600 +
            (C34889 * C148 + C34922 + C34922 + C153348 * C164 + C34887 * C147 +
             C34923 + C34923 + C153705 * C163) *
                C153740) *
               C23987) *
              C153413 * C153397 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C34887 * C144 + C34892 + C34892 + C153705 * C160 + C34889 * C145 +
              C34893 + C34893 + C153348 * C161) *
                 C153740 +
             (C34887 * C500 + C35415 + C35415 + C153705 * C524 + C34889 * C499 +
              C35414 + C35414 + C153348 * C523) *
                 C153600) *
                C23987 +
            ((C35190 + C35191) * C153740 + (C36183 + C36182) * C153600) *
                C23988 +
            C39086 * C153774) *
               C153413 * C310 -
           ((C37402 * C153600 + C36515 * C153740) * C153774 +
            (C37403 * C153600 + (C35193 + C35192) * C153740) * C23988 +
            ((C36182 + C36183) * C153600 + (C35191 + C35190) * C153740) *
                C23987) *
               C153413 * C311 +
           (C39086 * C23987 +
            (C35207 * C153740 + (C36179 + C36178) * C153600) * C23988 +
            ((C35197 + C35196) * C153740 + (C37416 + C37417) * C153600) *
                C153774) *
               C153413 * C312) *
              C313 +
          ((((C35198 + C35199) * C153740 + (C36184 + C36185) * C153600) *
                C23987 +
            ((C35200 + C35201) * C153740 + (C36186 + C36187) * C153600) *
                C23988 +
            ((C35202 + C35203) * C153740 + (C36188 + C36189) * C153600) *
                C153774) *
               C153413 * C311 -
           (C39087 * C153774 +
            ((C36185 + C36184) * C153600 + (C35199 + C35198) * C153740) *
                C23988 +
            ((C34889 * C498 + C35425 + C35425 + C153348 * C522 + C34887 * C499 +
              C35424 + C35424 + C153705 * C523) *
                 C153600 +
             (C34889 * C146 + C34906 + C34906 + C153348 * C162 + C34887 * C145 +
              C34907 + C34907 + C153705 * C161) *
                 C153740) *
                C23987) *
               C153413 * C310 -
           (((C34889 * C5601 + C36152 + C36152 + C153348 * C5607 +
              C34887 * C5602 + C36153 + C36153 + C153705 * C5608) *
                 C153600 +
             (C35205 + C35204) * C153740) *
                C153774 +
            ((C36189 + C36188) * C153600 + C35208 * C153740) * C23988 +
            C39087 * C23987) *
               C153413 * C312) *
              C153384)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C34887 * C144 + C34892 + C34892 + C153705 * C160 + C34889 * C145 +
            C34893 + C34893 + C153348 * C161) *
               C63340 +
           (C39432 + C39433) * C63341 + C58686 * C63342 +
           (C43010 + C43011) * C153754) *
              C153501 * C153413 * C153397 * C130 -
          ((C58710 + C58709) * C153754 + C58696 * C63342 +
           (C39437 + C39436) * C63341 +
           (C34889 * C146 + C34906 + C34906 + C153348 * C162 + C34887 * C145 +
            C34907 + C34907 + C153705 * C161) *
               C63340) *
              C153501 * C153413 * C153397 * C131 +
          ((C34887 * C146 + C34908 + C34908 + C153705 * C162 + C34889 * C147 +
            C34909 + C34909 + C153348 * C163) *
               C63340 +
           (C40058 + C40059) * C63341 + (C59315 + C59316) * C63342 +
           (C34887 * C2150 + C59310 + C59310 + C153705 * C2160 +
            C34889 * C2149 + C59309 + C59309 + C153348 * C2159) *
               C153754) *
              C153501 * C153413 * C153397 * C132 -
          ((C34889 * C2148 + C63345 + C63345 + C153348 * C2158 +
            C34887 * C2149 + C63346 + C63346 + C153705 * C2159) *
               C153754 +
           (C34889 * C505 + C58104 + C58104 + C153348 * C529 + C34887 * C504 +
            C58105 + C58105 + C153705 * C528) *
               C63342 +
           (C34889 * C496 + C38788 + C38788 + C153348 * C520 + C34887 * C497 +
            C38789 + C38789 + C153705 * C521) *
               C63341 +
           (C34889 * C148 + C34922 + C34922 + C153348 * C164 + C34887 * C147 +
            C34923 + C34923 + C153705 * C163) *
               C63340) *
              C153501 * C153413 * C153397 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C34887 * C144 + C34892 + C34892 + C153705 * C160 + C34889 * C145 +
             C34893 + C34893 + C153348 * C161) *
                C63340 +
            (C39432 + C39433) * C63341 + C58686 * C63342 +
            (C43010 + C43011) * C153754) *
               C153501 * C153413 * C310 -
           (C60478 * C153754 + C41229 * C63342 + C40447 * C63341 +
            (C35191 + C35190) * C63340) *
               C153501 * C153413 * C311 +
           (C35206 * C63340 + C39081 * C63341 + C41235 * C63342 +
            (C41250 + C41251) * C153754) *
               C153501 * C153413 * C312) *
              C313 +
          (((C35198 + C35199) * C63340 + C40448 * C63341 + C59703 * C63342 +
            (C58711 + C58712) * C153754) *
               C153501 * C153413 * C311 -
           ((C58710 + C58709) * C153754 + C58696 * C63342 +
            (C39437 + C39436) * C63341 +
            (C34889 * C146 + C34906 + C34906 + C153348 * C162 + C34887 * C145 +
             C34907 + C34907 + C153705 * C161) *
                C63340) *
               C153501 * C153413 * C310 -
           ((C34889 * C6213 + C39402 + C39402 + C153348 * C6225 +
             C34887 * C6214 + C39403 + C39403 + C153705 * C6226) *
                C153754 +
            (C39443 + C39442) * C63342 + C39082 * C63341 + C35209 * C63340) *
               C153501 * C153413 * C312) *
              C153384)) /
            (p * q * std::sqrt(p + q));
    d2ee[200] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C34887 * C144 + C34892 + C34892 + C153705 * C160 + C34889 * C145 +
              C34893 + C34893 + C153348 * C161) *
                 C153740 +
             (C39432 + C39433) * C153600) *
                C23987 +
            ((C35190 + C35191) * C153740 + C40446 * C153600) * C23988 +
            C39086 * C153774) *
               C153413 * C153795 -
           (C40937 * C153774 +
            (C37403 * C153600 + (C35193 + C35192) * C153740) * C23988 +
            (C40447 * C153600 + (C35191 + C35190) * C153740) * C23987) *
               C153413 * C153796 +
           (C39086 * C23987 +
            (C35207 * C153740 + (C36179 + C36178) * C153600) * C23988 +
            ((C35197 + C35196) * C153740 + (C37416 + C37417) * C153600) *
                C153774) *
               C153413 * C1509) *
              C153716 +
          ((((C35198 + C35199) * C153740 + C40448 * C153600) * C23987 +
            ((C35200 + C35201) * C153740 + C40449 * C153600) * C23988 +
            ((C35202 + C35203) * C153740 + (C36188 + C36189) * C153600) *
                C153774) *
               C153413 * C153796 -
           (C39087 * C153774 +
            (C40450 * C153600 + (C35199 + C35198) * C153740) * C23988 +
            ((C39437 + C39436) * C153600 +
             (C34889 * C146 + C34906 + C34906 + C153348 * C162 + C34887 * C145 +
              C34907 + C34907 + C153705 * C161) *
                 C153740) *
                C23987) *
               C153413 * C153795 -
           (((C34889 * C5601 + C36152 + C36152 + C153348 * C5607 +
              C34887 * C5602 + C36153 + C36153 + C153705 * C5608) *
                 C153600 +
             (C35205 + C35204) * C153740) *
                C153774 +
            ((C36189 + C36188) * C153600 + C35208 * C153740) * C23988 +
            C39087 * C23987) *
               C153413 * C1509) *
              C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C11268 * C144 + C11277 + C11277 + C11262 * C160 + C11270 * C145 +
             C11278 + C11278 + C11263 * C161 + C11272 * C146 + C11279 + C11279 +
             C11264 * C162 + C11274 * C147 + C11280 + C11280 + C153738 * C163) *
                C153740 +
            (C15551 + C15552 + C15553 + C15554) * C153600) *
               C153501 * C153413 * C153795 -
           ((C12543 + C12544 + C12545 + C12546) * C153600 +
            (C11586 + C11585 + C11584 + C11583) * C153740) *
               C153501 * C153413 * C153796 +
           ((C11590 + C11589 + C11588 + C11587) * C153740 +
            (C13783 + C13784 + C13785 + C13786) * C153600) *
               C153501 * C153413 * C1509) *
              C153716 +
          (((C11591 + C11592 + C11593 + C11594) * C153740 +
            (C12547 + C12548 + C12549 + C12550) * C153600) *
               C153501 * C153413 * C153796 -
           ((C15562 + C15561 + C15560 + C15559) * C153600 +
            (C11274 * C148 + C11289 + C11289 + C153738 * C164 + C11272 * C147 +
             C11290 + C11290 + C11264 * C163 + C11270 * C146 + C11291 + C11291 +
             C11263 * C162 + C11268 * C145 + C11292 + C11292 + C11262 * C161) *
                C153740) *
               C153501 * C153413 * C153795 -
           ((C11274 * C1796 + C12523 + C12523 + C153738 * C1806 +
             C11272 * C1797 + C12524 + C12524 + C11264 * C1807 +
             C11270 * C1798 + C12525 + C12525 + C11263 * C1808 +
             C11268 * C1799 + C12526 + C12526 + C11262 * C1809) *
                C153600 +
            (C11598 + C11597 + C11596 + C11595) * C153740) *
               C153501 * C153413 * C1509) *
              C153384)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C34887 * C144 + C34892 + C34892 + C153705 * C160 + C34889 * C145 +
             C34893 + C34893 + C153348 * C161) *
                C63340 +
            (C39432 + C39433) * C63341 + C58686 * C63342 + C63735 * C153754) *
               C153501 * C153413 * C153795 -
           (C60478 * C153754 + C41229 * C63342 + C40447 * C63341 +
            (C35191 + C35190) * C63340) *
               C153501 * C153413 * C153796 +
           (C35206 * C63340 + C39081 * C63341 + C41235 * C63342 +
            (C41250 + C41251) * C153754) *
               C153501 * C153413 * C1509) *
              C153716 +
          (((C35198 + C35199) * C63340 + C40448 * C63341 + C59703 * C63342 +
            (C58711 + C58712) * C153754) *
               C153501 * C153413 * C153796 -
           (C63740 * C153754 + C58696 * C63342 + (C39437 + C39436) * C63341 +
            (C34889 * C146 + C34906 + C34906 + C153348 * C162 + C34887 * C145 +
             C34907 + C34907 + C153705 * C161) *
                C63340) *
               C153501 * C153413 * C153795 -
           ((C34889 * C6213 + C39402 + C39402 + C153348 * C6225 +
             C34887 * C6214 + C39403 + C39403 + C153705 * C6226) *
                C153754 +
            (C39443 + C39442) * C63342 + C39082 * C63341 + C35209 * C63340) *
               C153501 * C153413 * C1509) *
              C153384)) /
            (p * q * std::sqrt(p + q));
    d2ee[201] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C34887 * C144 + C34892 + C34892 + C153705 * C160 + C34889 * C145 +
              C34893 + C34893 + C153348 * C161) *
                 C153740 +
             (C39432 + C39433) * C153600) *
                C23987 +
            ((C35190 + C35191) * C153740 + C40446 * C153600) * C23988 +
            C39086 * C153774) *
               C153725 -
           (C42221 * C153774 + (C41229 * C153600 + C40447 * C153740) * C23988 +
            ((C39434 + C39435) * C153600 + (C39433 + C39432) * C153740) *
                C23987) *
               C153477) *
              C153795 +
          (((C40446 * C153740 + C41230 * C153600) * C23987 +
            (C39081 * C153740 + C41235 * C153600) * C23988 +
            (C42220 * C153740 + (C36754 + C36755) * C153600) * C153774) *
               C153477 -
           (C40937 * C153774 +
            (C37403 * C153600 + (C35193 + C35192) * C153740) * C23988 +
            (C40447 * C153600 + (C35191 + C35190) * C153740) * C23987) *
               C153725) *
              C153796 +
          ((C39086 * C23987 + (C35207 * C153740 + C42220 * C153600) * C23988 +
            ((C35197 + C35196) * C153740 + (C37416 + C37417) * C153600) *
                C153774) *
               C153725 -
           (((C34889 * C28571 + C36736 + C36736 + C153348 * C28575 +
              C34887 * C28570 + C36737 + C36737 + C153705 * C28574) *
                 C153600 +
             (C37417 + C37416) * C153740) *
                C153774 +
            ((C36755 + C36754) * C153600 + C37402 * C153740) * C23988 +
            C42221 * C23987) *
               C153477) *
              C1509) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C11268 * C144 + C11277 + C11277 + C11262 * C160 + C11270 * C145 +
             C11278 + C11278 + C11263 * C161 + C11272 * C146 + C11279 + C11279 +
             C11264 * C162 + C11274 * C147 + C11280 + C11280 + C153738 * C163) *
                C153740 +
            (C15551 + C15552 + C15553 + C15554) * C153600) *
               C153501 * C153725 -
           ((C15555 + C15556 + C15557 + C15558) * C153600 +
            (C15554 + C15553 + C15552 + C15551) * C153740) *
               C153501 * C153477) *
              C153795 +
          (((C12546 + C12545 + C12544 + C12543) * C153740 +
            (C13113 + C13114 + C13115 + C13116) * C153600) *
               C153501 * C153477 -
           ((C12543 + C12544 + C12545 + C12546) * C153600 +
            (C11586 + C11585 + C11584 + C11583) * C153740) *
               C153501 * C153725) *
              C153796 +
          (((C11590 + C11589 + C11588 + C11587) * C153740 +
            (C13783 + C13784 + C13785 + C13786) * C153600) *
               C153501 * C153725 -
           ((C11274 * C3330 + C13101 + C13101 + C153738 * C3338 +
             C11272 * C3329 + C13102 + C13102 + C11264 * C3337 +
             C11270 * C3328 + C13103 + C13103 + C11263 * C3336 +
             C11268 * C3327 + C13104 + C13104 + C11262 * C3335) *
                C153600 +
            (C13786 + C13785 + C13784 + C13783) * C153740) *
               C153501 * C153477) *
              C1509) *
         C153378) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C34887 * C144 + C34892 + C34892 + C153705 * C160 + C34889 * C145 +
             C34893 + C34893 + C153348 * C161) *
                C63340 +
            (C39432 + C39433) * C63341 + C58686 * C63342 + C63735 * C153754) *
               C153501 * C153725 -
           ((C62244 + C62243) * C153754 + C62230 * C63342 +
            (C39434 + C39435) * C63341 + (C39433 + C39432) * C63340) *
               C153501 * C153477) *
              C153795 +
          ((C40446 * C63340 + C41230 * C63341 + C60479 * C63342 +
            (C60488 + C60489) * C153754) *
               C153501 * C153477 -
           (C60478 * C153754 + C41229 * C63342 + C40447 * C63341 +
            (C35191 + C35190) * C63340) *
               C153501 * C153725) *
              C153796 +
          ((C35206 * C63340 + C39081 * C63341 + C41235 * C63342 +
            (C41250 + C41251) * C153754) *
               C153501 * C153725 -
           ((C34889 * C31240 + C43000 + C43000 + C153348 * C31244 +
             C34887 * C31239 + C43001 + C43001 + C153705 * C31243) *
                C153754 +
            (C41251 + C41250) * C63342 + C41228 * C63341 + C37403 * C63340) *
               C153501 * C153477) *
              C1509) *
         C153378) /
            (p * q * std::sqrt(p + q));
    d2ee[202] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C11268 * C144 + C11277 + C11277 + C11262 * C160 +
                 C11270 * C145 + C11278 + C11278 + C11263 * C161 +
                 C11272 * C146 + C11279 + C11279 + C11264 * C162 +
                 C11274 * C147 + C11280 + C11280 + C153738 * C163) *
                    C153740 +
                (C15551 + C15552 + C15553 + C15554) * C153600) *
                   C153501 * C153413 * C1131 -
               ((C12543 + C12544 + C12545 + C12546) * C153600 +
                (C11586 + C11585 + C11584 + C11583) * C153740) *
                   C153501 * C153413 * C153449) *
                  C1133 +
              (((C11591 + C11592 + C11593 + C11594) * C153740 +
                (C12547 + C12548 + C12549 + C12550) * C153600) *
                   C153501 * C153413 * C153449 -
               ((C15562 + C15561 + C15560 + C15559) * C153600 +
                (C11274 * C148 + C11289 + C11289 + C153738 * C164 +
                 C11272 * C147 + C11290 + C11290 + C11264 * C163 +
                 C11270 * C146 + C11291 + C11291 + C11263 * C162 +
                 C11268 * C145 + C11292 + C11292 + C11262 * C161) *
                    C153740) *
                   C153501 * C153413 * C1131) *
                  C1134 +
              (((C11268 * C146 + C11293 + C11293 + C11262 * C162 +
                 C11270 * C147 + C11294 + C11294 + C11263 * C163 +
                 C11272 * C148 + C11295 + C11295 + C11264 * C164 +
                 C11274 * C149 + C11296 + C11296 + C153738 * C165) *
                    C153740 +
                (C15975 + C15976 + C15977 + C15978) * C153600) *
                   C153501 * C153413 * C1131 -
               ((C11274 * C986 + C12237 + C12237 + C153738 * C998 +
                 C11272 * C985 + C12238 + C12238 + C11264 * C997 +
                 C11270 * C984 + C12239 + C12239 + C11263 * C996 +
                 C11268 * C983 + C12240 + C12240 + C11262 * C995) *
                    C153600 +
                (C12042 + C12041 + C12040 + C12039) * C153740) *
                   C153501 * C153413 * C153449) *
                  C1135) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((C11268 * C144 + C11277 + C11277 + C11262 * C160 +
                C11270 * C145 + C11278 + C11278 + C11263 * C161 +
                C11272 * C146 + C11279 + C11279 + C11264 * C162 +
                C11274 * C147 + C11280 + C11280 + C153738 * C163) *
                   C153740 +
               (C15551 + C15552 + C15553 + C15554) * C153600) *
                  C153501 * C153413 * C1218 -
              ((C12543 + C12544 + C12545 + C12546) * C153600 +
               (C11586 + C11585 + C11584 + C11583) * C153740) *
                  C153501 * C153413 * C1219 +
              ((C11590 + C11589 + C11588 + C11587) * C153740 +
               (C13783 + C13784 + C13785 + C13786) * C153600) *
                  C153501 * C153413 * C1220 -
              ((C11274 * C4146 + C13771 + C13771 + C153738 * C4154 +
                C11272 * C4145 + C13772 + C13772 + C11264 * C4153 +
                C11270 * C4144 + C13773 + C13773 + C11263 * C4152 +
                C11268 * C4143 + C13774 + C13774 + C11262 * C4151) *
                   C153600 +
               (C12898 + C12897 + C12896 + C12895) * C153740) *
                  C153501 * C153413 * C1221) *
             C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C11268 * C144 + C11277 + C11277 + C11262 * C160 + C11270 * C145 +
             C11278 + C11278 + C11263 * C161 + C11272 * C146 + C11279 + C11279 +
             C11264 * C162 + C11274 * C147 + C11280 + C11280 + C153738 * C163) *
                C153740 +
            (C15551 + C15552 + C15553 + C15554) * C153600) *
               C153501 * C493 -
           ((C15555 + C15556 + C15557 + C15558) * C153600 +
            (C15554 + C15553 + C15552 + C15551) * C153740) *
               C153501 * C494 +
           ((C15558 + C15557 + C15556 + C15555) * C153740 +
            (C11268 * C2152 + C14312 + C14312 + C11262 * C2162 +
             C11270 * C2151 + C14311 + C14311 + C11263 * C2161 +
             C11272 * C2150 + C14310 + C14310 + C11264 * C2160 +
             C11274 * C2149 + C14309 + C14309 + C153738 * C2159) *
                C153600) *
               C153501 * C495) *
              C1131 +
          (((C12546 + C12545 + C12544 + C12543) * C153740 +
            (C13113 + C13114 + C13115 + C13116) * C153600) *
               C153501 * C494 -
           ((C12543 + C12544 + C12545 + C12546) * C153600 +
            (C11586 + C11585 + C11584 + C11583) * C153740) *
               C153501 * C493 -
           ((C11274 * C8437 + C14305 + C14305 + C153738 * C8439 +
             C11272 * C6216 + C14306 + C14306 + C11264 * C6228 +
             C11270 * C6217 + C14307 + C14307 + C11263 * C6229 +
             C11268 * C6218 + C14308 + C14308 + C11262 * C6230) *
                C153600 +
            (C13116 + C13115 + C13114 + C13113) * C153740) *
               C153501 * C495) *
              C153449) *
         C153378) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C34887 * C144 + C34892 + C34892 + C153705 * C160 + C34889 * C145 +
              C34893 + C34893 + C153348 * C161) *
                 C153740 +
             (C39432 + C39433) * C153600) *
                C23987 +
            ((C35190 + C35191) * C153740 + C40446 * C153600) * C23988 +
            C39086 * C153774) *
               C153413 * C1131 -
           ((C37402 * C153600 + C36515 * C153740) * C153774 +
            (C37403 * C153600 + (C35193 + C35192) * C153740) * C23988 +
            (C40447 * C153600 + (C35191 + C35190) * C153740) * C23987) *
               C153413 * C153449) *
              C1133 +
          ((((C35198 + C35199) * C153740 + C40448 * C153600) * C23987 +
            ((C35200 + C35201) * C153740 + C40449 * C153600) * C23988 +
            ((C35202 + C35203) * C153740 + (C36188 + C36189) * C153600) *
                C153774) *
               C153413 * C153449 -
           (C39087 * C153774 +
            (C40450 * C153600 + (C35199 + C35198) * C153740) * C23988 +
            ((C39437 + C39436) * C153600 +
             (C34889 * C146 + C34906 + C34906 + C153348 * C162 + C34887 * C145 +
              C34907 + C34907 + C153705 * C161) *
                 C153740) *
                C23987) *
               C153413 * C1131) *
              C1134 +
          ((((C34887 * C146 + C34908 + C34908 + C153705 * C162 + C34889 * C147 +
              C34909 + C34909 + C153348 * C163) *
                 C153740 +
             (C40058 + C40059) * C153600) *
                C23987 +
            ((C35660 + C35661) * C153740 + (C39750 + C39751) * C153600) *
                C23988 +
            ((C35662 + C35663) * C153740 + (C39752 + C39753) * C153600) *
                C153774) *
               C153413 * C1131 -
           (((C34889 * C4146 + C35860 + C35860 + C153348 * C4154 +
              C34887 * C4145 + C35861 + C35861 + C153705 * C4153) *
                 C153600 +
             (C35665 + C35664) * C153740) *
                C153774 +
            ((C39753 + C39752) * C153600 + (C35663 + C35662) * C153740) *
                C23988 +
            ((C39751 + C39750) * C153600 + (C35661 + C35660) * C153740) *
                C23987) *
               C153413 * C153449) *
              C1135)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C34887 * C144 + C34892 + C34892 + C153705 * C160 + C34889 * C145 +
             C34893 + C34893 + C153348 * C161) *
                C153740 +
            (C39432 + C39433) * C153600) *
               C23987 +
           ((C35190 + C35191) * C153740 + C40446 * C153600) * C23988 +
           C39086 * C153774) *
              C153413 * C1218 -
          (C40937 * C153774 +
           (C37403 * C153600 + (C35193 + C35192) * C153740) * C23988 +
           (C40447 * C153600 + (C35191 + C35190) * C153740) * C23987) *
              C153413 * C1219 +
          (C39086 * C23987 +
           (C35207 * C153740 + (C36179 + C36178) * C153600) * C23988 +
           ((C35197 + C35196) * C153740 + (C37416 + C37417) * C153600) *
               C153774) *
              C153413 * C1220 -
          (((C34889 * C29033 + C37408 + C37408 + C153348 * C29037 +
             C34887 * C29032 + C37409 + C37409 + C153705 * C29036) *
                C153600 +
            (C36529 + C36528) * C153740) *
               C153774 +
           ((C37417 + C37416) * C153600 + C36514 * C153740) * C23988 +
           C40937 * C23987) *
              C153413 * C1221) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C34887 * C144 + C34892 + C34892 + C153705 * C160 + C34889 * C145 +
              C34893 + C34893 + C153348 * C161) *
                 C153740 +
             (C39432 + C39433) * C153600) *
                C23987 +
            ((C35190 + C35191) * C153740 + C40446 * C153600) * C23988 +
            C39086 * C153774) *
               C493 -
           ((C41228 * C153600 + C37403 * C153740) * C153774 +
            (C41229 * C153600 + C40447 * C153740) * C23988 +
            ((C39434 + C39435) * C153600 + (C39433 + C39432) * C153740) *
                C23987) *
               C494 +
           (((C39435 + C39434) * C153740 +
             (C34887 * C2152 + C37943 + C37943 + C153705 * C2162 +
              C34889 * C2151 + C37942 + C37942 + C153348 * C2161) *
                 C153600) *
                C23987 +
            (C41230 * C153740 + (C41248 + C41249) * C153600) * C23988 +
            (C41235 * C153740 + (C41250 + C41251) * C153600) * C153774) *
               C495) *
              C1131 +
          (((C40446 * C153740 + C41230 * C153600) * C23987 +
            (C39081 * C153740 + C41235 * C153600) * C23988 +
            ((C36179 + C36178) * C153740 + (C36754 + C36755) * C153600) *
                C153774) *
               C494 -
           (C40937 * C153774 +
            (C37403 * C153600 + (C35193 + C35192) * C153740) * C23988 +
            (C40447 * C153600 + (C35191 + C35190) * C153740) * C23987) *
               C493 -
           (((C34889 * C32070 + C37936 + C37936 + C153348 * C32072 +
              C34887 * C30195 + C37937 + C37937 + C153705 * C30199) *
                 C153600 +
             (C36755 + C36754) * C153740) *
                C153774 +
            ((C41251 + C41250) * C153600 + C41228 * C153740) * C23988 +
            ((C41249 + C41248) * C153600 + C41229 * C153740) * C23987) *
               C495) *
              C153449) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C34887 * C144 + C34892 + C34892 + C153705 * C160 + C34889 * C145 +
             C34893 + C34893 + C153348 * C161) *
                C63340 +
            (C39432 + C39433) * C63341 + C58686 * C63342 + C63735 * C153754) *
               C153501 * C153413 * C1131 -
           (C60478 * C153754 + C41229 * C63342 + C40447 * C63341 +
            (C35191 + C35190) * C63340) *
               C153501 * C153413 * C153449) *
              C1133 +
          (((C35198 + C35199) * C63340 + C40448 * C63341 + C59703 * C63342 +
            (C58711 + C58712) * C153754) *
               C153501 * C153413 * C153449 -
           (C63740 * C153754 + C58696 * C63342 + (C39437 + C39436) * C63341 +
            (C34889 * C146 + C34906 + C34906 + C153348 * C162 + C34887 * C145 +
             C34907 + C34907 + C153705 * C161) *
                C63340) *
               C153501 * C153413 * C1131) *
              C1134 +
          (((C34887 * C146 + C34908 + C34908 + C153705 * C162 + C34889 * C147 +
             C34909 + C34909 + C153348 * C163) *
                C63340 +
            (C40058 + C40059) * C63341 + (C59315 + C59316) * C63342 +
            (C64147 + C64148) * C153754) *
               C153501 * C153413 * C1131 -
           ((C34889 * C8437 + C59307 + C59307 + C153348 * C8439 +
             C34887 * C6216 + C59308 + C59308 + C153705 * C6228) *
                C153754 +
            (C59012 + C59011) * C63342 + (C39751 + C39750) * C63341 +
            (C35661 + C35660) * C63340) *
               C153501 * C153413 * C153449) *
              C1135)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C34887 * C144 + C34892 + C34892 + C153705 * C160 + C34889 * C145 +
            C34893 + C34893 + C153348 * C161) *
               C63340 +
           (C39432 + C39433) * C63341 + C58686 * C63342 + C63735 * C153754) *
              C153501 * C153413 * C1218 -
          (C60478 * C153754 + C41229 * C63342 + C40447 * C63341 +
           (C35191 + C35190) * C63340) *
              C153501 * C153413 * C1219 +
          (C35206 * C63340 + C39081 * C63341 + C41235 * C63342 +
           (C41250 + C41251) * C153754) *
              C153501 * C153413 * C1220 -
          ((C34889 * C32070 + C37936 + C37936 + C153348 * C32072 +
            C34887 * C30195 + C37937 + C37937 + C153705 * C30199) *
               C153754 +
           (C36755 + C36754) * C63342 + C37402 * C63341 + C36515 * C63340) *
              C153501 * C153413 * C1221) *
         C153378) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C34887 * C144 + C34892 + C34892 + C153705 * C160 + C34889 * C145 +
             C34893 + C34893 + C153348 * C161) *
                C63340 +
            (C39432 + C39433) * C63341 + C58686 * C63342 + C63735 * C153754) *
               C153501 * C493 -
           ((C62244 + C62243) * C153754 + C62230 * C63342 +
            (C39434 + C39435) * C63341 + (C39433 + C39432) * C63340) *
               C153501 * C494 +
           (C58686 * C63340 + C63735 * C63341 + (C62243 + C62244) * C63342 +
            (C34887 * C10379 + C62238 + C62238 + C153705 * C10385 +
             C34889 * C10378 + C62237 + C62237 + C153348 * C10384) *
                C153754) *
               C153501 * C495) *
              C1131 +
          ((C40446 * C63340 + C41230 * C63341 + C60479 * C63342 +
            (C60488 + C60489) * C153754) *
               C153501 * C494 -
           (C60478 * C153754 + C41229 * C63342 + C40447 * C63341 +
            (C35191 + C35190) * C63340) *
               C153501 * C493 -
           ((C34889 * C56416 + C62235 + C62235 + C153348 * C56418 +
             C34887 * C34012 + C62236 + C62236 + C153705 * C34016) *
                C153754 +
            (C60489 + C60488) * C63342 + C60478 * C63341 + C41229 * C63340) *
               C153501 * C495) *
              C153449) *
         C153378) /
            (p * q * std::sqrt(p + q));
    d2ee[203] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C34887 * C144 + C34892 + C34892 + C153705 * C160 +
               C34889 * C145 + C34893 + C34893 + C153348 * C161) *
                  C153740 +
              (C39432 + C39433) * C153600) *
                 C23987 +
             ((C35190 + C35191) * C153740 + C40446 * C153600) * C23988 +
             C39086 * C153774) *
                C153725 -
            ((C41228 * C153600 + C37403 * C153740) * C153774 +
             (C41229 * C153600 + C40447 * C153740) * C23988 +
             ((C39434 + C39435) * C153600 + (C39433 + C39432) * C153740) *
                 C23987) *
                C153477) *
               C1131 +
           (((C40446 * C153740 + C41230 * C153600) * C23987 +
             (C39081 * C153740 + C41235 * C153600) * C23988 +
             ((C36179 + C36178) * C153740 + (C36754 + C36755) * C153600) *
                 C153774) *
                C153477 -
            (C40937 * C153774 +
             (C37403 * C153600 + (C35193 + C35192) * C153740) * C23988 +
             (C40447 * C153600 + (C35191 + C35190) * C153740) * C23987) *
                C153725) *
               C153449) *
              C153716 +
          (((((C39436 + C39437) * C153740 + (C39438 + C39439) * C153600) *
                 C23987 +
             (C40448 * C153740 + (C39440 + C39441) * C153600) * C23988 +
             (C40449 * C153740 + (C39442 + C39443) * C153600) * C153774) *
                C153477 -
            (C39087 * C153774 +
             (C40450 * C153600 + (C35199 + C35198) * C153740) * C23988 +
             ((C39437 + C39436) * C153600 +
              (C34889 * C146 + C34906 + C34906 + C153348 * C162 +
               C34887 * C145 + C34907 + C34907 + C153705 * C161) *
                  C153740) *
                 C23987) *
                C153725) *
               C1131 +
           ((((C35198 + C35199) * C153740 + C40448 * C153600) * C23987 +
             ((C35200 + C35201) * C153740 + C40449 * C153600) * C23988 +
             ((C35202 + C35203) * C153740 + (C36188 + C36189) * C153600) *
                 C153774) *
                C153725 -
            (((C34889 * C4833 + C35432 + C35432 + C153348 * C4839 +
               C34887 * C4834 + C35433 + C35433 + C153705 * C4840) *
                  C153600 +
              (C36189 + C36188) * C153740) *
                 C153774 +
             ((C39443 + C39442) * C153600 + C39082 * C153740) * C23988 +
             ((C39441 + C39440) * C153600 + C40450 * C153740) * C23987) *
                C153477) *
               C153449) *
              C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C11268 * C144 + C11277 + C11277 + C11262 * C160 + C11270 * C145 +
              C11278 + C11278 + C11263 * C161 + C11272 * C146 + C11279 +
              C11279 + C11264 * C162 + C11274 * C147 + C11280 + C11280 +
              C153738 * C163) *
                 C153740 +
             (C15551 + C15552 + C15553 + C15554) * C153600) *
                C153501 * C153725 -
            ((C15555 + C15556 + C15557 + C15558) * C153600 +
             (C15554 + C15553 + C15552 + C15551) * C153740) *
                C153501 * C153477) *
               C1131 +
           (((C12546 + C12545 + C12544 + C12543) * C153740 +
             (C13113 + C13114 + C13115 + C13116) * C153600) *
                C153501 * C153477 -
            ((C12543 + C12544 + C12545 + C12546) * C153600 +
             (C11586 + C11585 + C11584 + C11583) * C153740) *
                C153501 * C153725) *
               C153449) *
              C153716 +
          ((((C15559 + C15560 + C15561 + C15562) * C153740 +
             (C15563 + C15564 + C15565 + C15566) * C153600) *
                C153501 * C153477 -
            ((C15562 + C15561 + C15560 + C15559) * C153600 +
             (C11274 * C148 + C11289 + C11289 + C153738 * C164 + C11272 * C147 +
              C11290 + C11290 + C11264 * C163 + C11270 * C146 + C11291 +
              C11291 + C11263 * C162 + C11268 * C145 + C11292 + C11292 +
              C11262 * C161) *
                 C153740) *
                C153501 * C153725) *
               C1131 +
           (((C11591 + C11592 + C11593 + C11594) * C153740 +
             (C12547 + C12548 + C12549 + C12550) * C153600) *
                C153501 * C153725 -
            ((C11274 * C1365 + C11817 + C11817 + C153738 * C1375 +
              C11272 * C1366 + C11818 + C11818 + C11264 * C1376 +
              C11270 * C1367 + C11819 + C11819 + C11263 * C1377 +
              C11268 * C1368 + C11820 + C11820 + C11262 * C1378) *
                 C153600 +
             (C12550 + C12549 + C12548 + C12547) * C153740) *
                C153501 * C153477) *
               C153449) *
              C153384)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C34887 * C144 + C34892 + C34892 + C153705 * C160 + C34889 * C145 +
              C34893 + C34893 + C153348 * C161) *
                 C63340 +
             (C39432 + C39433) * C63341 + C58686 * C63342 + C63735 * C153754) *
                C153501 * C153725 -
            ((C62244 + C62243) * C153754 + C62230 * C63342 +
             (C39434 + C39435) * C63341 + (C39433 + C39432) * C63340) *
                C153501 * C153477) *
               C1131 +
           ((C40446 * C63340 + C41230 * C63341 + C60479 * C63342 +
             (C60488 + C60489) * C153754) *
                C153501 * C153477 -
            (C60478 * C153754 + C41229 * C63342 + C40447 * C63341 +
             (C35191 + C35190) * C63340) *
                C153501 * C153725) *
               C153449) *
              C153716 +
          ((((C39436 + C39437) * C63340 + (C39438 + C39439) * C63341 +
             (C58709 + C58710) * C63342 + (C63747 + C63748) * C153754) *
                C153501 * C153477 -
            (C63740 * C153754 + C58696 * C63342 + (C39437 + C39436) * C63341 +
             (C34889 * C146 + C34906 + C34906 + C153348 * C162 + C34887 * C145 +
              C34907 + C34907 + C153705 * C161) *
                 C63340) *
                C153501 * C153725) *
               C1131 +
           (((C35198 + C35199) * C63340 + C40448 * C63341 + C59703 * C63342 +
             (C58711 + C58712) * C153754) *
                C153501 * C153725 -
            ((C34889 * C9040 + C58697 + C58697 + C153348 * C9046 +
              C34887 * C9041 + C58698 + C58698 + C153705 * C9047) *
                 C153754 +
             (C58712 + C58711) * C63342 + C58695 * C63341 + C40450 * C63340) *
                C153501 * C153477) *
               C153449) *
              C153384)) /
            (p * q * std::sqrt(p + q));
    d2ee[204] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C11268 * C144 + C11277 + C11277 + C11262 * C160 + C11270 * C145 +
            C11278 + C11278 + C11263 * C161 + C11272 * C146 + C11279 + C11279 +
            C11264 * C162 + C11274 * C147 + C11280 + C11280 + C153738 * C163) *
               C153740 +
           (C15551 + C15552 + C15553 + C15554) * C153600) *
              C153501 * C153413 * C1218 -
          ((C12543 + C12544 + C12545 + C12546) * C153600 +
           (C11586 + C11585 + C11584 + C11583) * C153740) *
              C153501 * C153413 * C1219 +
          ((C11590 + C11589 + C11588 + C11587) * C153740 +
           (C13783 + C13784 + C13785 + C13786) * C153600) *
              C153501 * C153413 * C1220 -
          ((C11274 * C4146 + C13771 + C13771 + C153738 * C4154 +
            C11272 * C4145 + C13772 + C13772 + C11264 * C4153 + C11270 * C4144 +
            C13773 + C13773 + C11263 * C4152 + C11268 * C4143 + C13774 +
            C13774 + C11262 * C4151) *
               C153600 +
           (C12898 + C12897 + C12896 + C12895) * C153740) *
              C153501 * C153413 * C1221) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C11268 * C144 + C11277 + C11277 + C11262 * C160 + C11270 * C145 +
             C11278 + C11278 + C11263 * C161 + C11272 * C146 + C11279 + C11279 +
             C11264 * C162 + C11274 * C147 + C11280 + C11280 + C153738 * C163) *
                C153740 +
            (C15551 + C15552 + C15553 + C15554) * C153600) *
               C153501 * C153413 * C1131 -
           ((C12543 + C12544 + C12545 + C12546) * C153600 +
            (C11586 + C11585 + C11584 + C11583) * C153740) *
               C153501 * C153413 * C153449) *
              C1133 +
          (((C11591 + C11592 + C11593 + C11594) * C153740 +
            (C12547 + C12548 + C12549 + C12550) * C153600) *
               C153501 * C153413 * C153449 -
           ((C15562 + C15561 + C15560 + C15559) * C153600 +
            (C11274 * C148 + C11289 + C11289 + C153738 * C164 + C11272 * C147 +
             C11290 + C11290 + C11264 * C163 + C11270 * C146 + C11291 + C11291 +
             C11263 * C162 + C11268 * C145 + C11292 + C11292 + C11262 * C161) *
                C153740) *
               C153501 * C153413 * C1131) *
              C1134 +
          (((C11268 * C146 + C11293 + C11293 + C11262 * C162 + C11270 * C147 +
             C11294 + C11294 + C11263 * C163 + C11272 * C148 + C11295 + C11295 +
             C11264 * C164 + C11274 * C149 + C11296 + C11296 + C153738 * C165) *
                C153740 +
            (C15975 + C15976 + C15977 + C15978) * C153600) *
               C153501 * C153413 * C1131 -
           ((C11274 * C986 + C12237 + C12237 + C153738 * C998 + C11272 * C985 +
             C12238 + C12238 + C11264 * C997 + C11270 * C984 + C12239 + C12239 +
             C11263 * C996 + C11268 * C983 + C12240 + C12240 + C11262 * C995) *
                C153600 +
            (C12042 + C12041 + C12040 + C12039) * C153740) *
               C153501 * C153413 * C153449) *
              C1135)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C34887 * C144 + C34892 + C34892 + C153705 * C160 + C34889 * C145 +
              C34893 + C34893 + C153348 * C161) *
                 C153740 +
             (C39432 + C39433) * C153600) *
                C23987 +
            ((C35190 + C35191) * C153740 + C40446 * C153600) * C23988 +
            C39086 * C153774) *
               C153413 * C1131 -
           ((C37402 * C153600 + C36515 * C153740) * C153774 +
            (C37403 * C153600 + (C35193 + C35192) * C153740) * C23988 +
            (C40447 * C153600 + (C35191 + C35190) * C153740) * C23987) *
               C153413 * C153449) *
              C1133 +
          ((((C35198 + C35199) * C153740 + C40448 * C153600) * C23987 +
            ((C35200 + C35201) * C153740 + C40449 * C153600) * C23988 +
            ((C35202 + C35203) * C153740 + (C36188 + C36189) * C153600) *
                C153774) *
               C153413 * C153449 -
           (C39087 * C153774 +
            (C40450 * C153600 + (C35199 + C35198) * C153740) * C23988 +
            ((C39437 + C39436) * C153600 +
             (C34889 * C146 + C34906 + C34906 + C153348 * C162 + C34887 * C145 +
              C34907 + C34907 + C153705 * C161) *
                 C153740) *
                C23987) *
               C153413 * C1131) *
              C1134 +
          ((((C34887 * C146 + C34908 + C34908 + C153705 * C162 + C34889 * C147 +
              C34909 + C34909 + C153348 * C163) *
                 C153740 +
             (C40058 + C40059) * C153600) *
                C23987 +
            ((C35660 + C35661) * C153740 + (C39750 + C39751) * C153600) *
                C23988 +
            ((C35662 + C35663) * C153740 + (C39752 + C39753) * C153600) *
                C153774) *
               C153413 * C1131 -
           (((C34889 * C4146 + C35860 + C35860 + C153348 * C4154 +
              C34887 * C4145 + C35861 + C35861 + C153705 * C4153) *
                 C153600 +
             (C35665 + C35664) * C153740) *
                C153774 +
            ((C39753 + C39752) * C153600 + (C35663 + C35662) * C153740) *
                C23988 +
            ((C39751 + C39750) * C153600 + (C35661 + C35660) * C153740) *
                C23987) *
               C153413 * C153449) *
              C1135)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C34887 * C144 + C34892 + C34892 + C153705 * C160 + C34889 * C145 +
             C34893 + C34893 + C153348 * C161) *
                C153740 +
            (C39432 + C39433) * C153600) *
               C23987 +
           ((C35190 + C35191) * C153740 + C40446 * C153600) * C23988 +
           C39086 * C153774) *
              C153413 * C1218 -
          (C40937 * C153774 +
           (C37403 * C153600 + (C35193 + C35192) * C153740) * C23988 +
           (C40447 * C153600 + (C35191 + C35190) * C153740) * C23987) *
              C153413 * C1219 +
          (C39086 * C23987 +
           (C35207 * C153740 + (C36179 + C36178) * C153600) * C23988 +
           ((C35197 + C35196) * C153740 + (C37416 + C37417) * C153600) *
               C153774) *
              C153413 * C1220 -
          (((C34889 * C29033 + C37408 + C37408 + C153348 * C29037 +
             C34887 * C29032 + C37409 + C37409 + C153705 * C29036) *
                C153600 +
            (C36529 + C36528) * C153740) *
               C153774 +
           ((C37417 + C37416) * C153600 + C36514 * C153740) * C23988 +
           C40937 * C23987) *
              C153413 * C1221) *
         C153378) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C34887 * C144 + C34892 + C34892 + C153705 * C160 + C34889 * C145 +
             C34893 + C34893 + C153348 * C161) *
                C63340 +
            (C39432 + C39433) * C63341 + C58686 * C63342 + C63735 * C153754) *
               C153501 * C153413 * C1131 -
           (C60478 * C153754 + C41229 * C63342 + C40447 * C63341 +
            (C35191 + C35190) * C63340) *
               C153501 * C153413 * C153449) *
              C1133 +
          (((C35198 + C35199) * C63340 + C40448 * C63341 + C59703 * C63342 +
            (C58711 + C58712) * C153754) *
               C153501 * C153413 * C153449 -
           (C63740 * C153754 + C58696 * C63342 + (C39437 + C39436) * C63341 +
            (C34889 * C146 + C34906 + C34906 + C153348 * C162 + C34887 * C145 +
             C34907 + C34907 + C153705 * C161) *
                C63340) *
               C153501 * C153413 * C1131) *
              C1134 +
          (((C34887 * C146 + C34908 + C34908 + C153705 * C162 + C34889 * C147 +
             C34909 + C34909 + C153348 * C163) *
                C63340 +
            (C40058 + C40059) * C63341 + (C59315 + C59316) * C63342 +
            (C64147 + C64148) * C153754) *
               C153501 * C153413 * C1131 -
           ((C34889 * C8437 + C59307 + C59307 + C153348 * C8439 +
             C34887 * C6216 + C59308 + C59308 + C153705 * C6228) *
                C153754 +
            (C59012 + C59011) * C63342 + (C39751 + C39750) * C63341 +
            (C35661 + C35660) * C63340) *
               C153501 * C153413 * C153449) *
              C1135)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C34887 * C144 + C34892 + C34892 + C153705 * C160 + C34889 * C145 +
            C34893 + C34893 + C153348 * C161) *
               C63340 +
           (C39432 + C39433) * C63341 + C58686 * C63342 + C63735 * C153754) *
              C153501 * C153413 * C1218 -
          (C60478 * C153754 + C41229 * C63342 + C40447 * C63341 +
           (C35191 + C35190) * C63340) *
              C153501 * C153413 * C1219 +
          (C35206 * C63340 + C39081 * C63341 + C41235 * C63342 +
           (C41250 + C41251) * C153754) *
              C153501 * C153413 * C1220 -
          ((C34889 * C32070 + C37936 + C37936 + C153348 * C32072 +
            C34887 * C30195 + C37937 + C37937 + C153705 * C30199) *
               C153754 +
           (C36755 + C36754) * C63342 + C37402 * C63341 + C36515 * C63340) *
              C153501 * C153413 * C1221) *
         C153378) /
            (p * q * std::sqrt(p + q));
    d2ee[205] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C34887 * C144 + C34892 + C34892 + C153705 * C160 +
               C34889 * C145 + C34893 + C34893 + C153348 * C161) *
                  C153740 +
              (C39432 + C39433) * C153600) *
                 C23987 +
             ((C35190 + C35191) * C153740 + C40446 * C153600) * C23988 +
             C39086 * C153774) *
                C1938 -
            (C42221 * C153774 + (C41229 * C153600 + C40447 * C153740) * C23988 +
             ((C39434 + C39435) * C153600 + (C39433 + C39432) * C153740) *
                 C23987) *
                C153477) *
               C153724 +
           (((C40446 * C153740 + C41230 * C153600) * C23987 +
             (C39081 * C153740 + C41235 * C153600) * C23988 +
             (C42220 * C153740 + (C36754 + C36755) * C153600) * C153774) *
                C153477 -
            (C40937 * C153774 +
             (C37403 * C153600 + (C35193 + C35192) * C153740) * C23988 +
             (C40447 * C153600 + (C35191 + C35190) * C153740) * C23987) *
                C1938) *
               C153449) *
              C153716 +
          (((((C39436 + C39437) * C153740 + (C39438 + C39439) * C153600) *
                 C23987 +
             (C40448 * C153740 + (C39440 + C39441) * C153600) * C23988 +
             (C40449 * C153740 + (C39442 + C39443) * C153600) * C153774) *
                C153477 -
            (C39087 * C153774 +
             (C40450 * C153600 + (C35199 + C35198) * C153740) * C23988 +
             ((C39437 + C39436) * C153600 +
              (C34889 * C146 + C34906 + C34906 + C153348 * C162 +
               C34887 * C145 + C34907 + C34907 + C153705 * C161) *
                  C153740) *
                 C23987) *
                C1938) *
               C153724 +
           ((((C35198 + C35199) * C153740 + C40448 * C153600) * C23987 +
             ((C35200 + C35201) * C153740 + C40449 * C153600) * C23988 +
             ((C35202 + C35203) * C153740 + (C36188 + C36189) * C153600) *
                 C153774) *
                C1938 -
            (((C34889 * C4833 + C35432 + C35432 + C153348 * C4839 +
               C34887 * C4834 + C35433 + C35433 + C153705 * C4840) *
                  C153600 +
              (C36189 + C36188) * C153740) *
                 C153774 +
             ((C39443 + C39442) * C153600 + C39082 * C153740) * C23988 +
             ((C39441 + C39440) * C153600 + C40450 * C153740) * C23987) *
                C153477) *
               C153449) *
              C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C11268 * C144 + C11277 + C11277 + C11262 * C160 + C11270 * C145 +
              C11278 + C11278 + C11263 * C161 + C11272 * C146 + C11279 +
              C11279 + C11264 * C162 + C11274 * C147 + C11280 + C11280 +
              C153738 * C163) *
                 C153740 +
             (C15551 + C15552 + C15553 + C15554) * C153600) *
                C153501 * C1938 -
            ((C15555 + C15556 + C15557 + C15558) * C153600 +
             (C15554 + C15553 + C15552 + C15551) * C153740) *
                C153501 * C153477) *
               C153724 +
           (((C12546 + C12545 + C12544 + C12543) * C153740 +
             (C13113 + C13114 + C13115 + C13116) * C153600) *
                C153501 * C153477 -
            ((C12543 + C12544 + C12545 + C12546) * C153600 +
             (C11586 + C11585 + C11584 + C11583) * C153740) *
                C153501 * C1938) *
               C153449) *
              C153716 +
          ((((C15559 + C15560 + C15561 + C15562) * C153740 +
             (C15563 + C15564 + C15565 + C15566) * C153600) *
                C153501 * C153477 -
            ((C15562 + C15561 + C15560 + C15559) * C153600 +
             (C11274 * C148 + C11289 + C11289 + C153738 * C164 + C11272 * C147 +
              C11290 + C11290 + C11264 * C163 + C11270 * C146 + C11291 +
              C11291 + C11263 * C162 + C11268 * C145 + C11292 + C11292 +
              C11262 * C161) *
                 C153740) *
                C153501 * C1938) *
               C153724 +
           (((C11591 + C11592 + C11593 + C11594) * C153740 +
             (C12547 + C12548 + C12549 + C12550) * C153600) *
                C153501 * C1938 -
            ((C11274 * C1365 + C11817 + C11817 + C153738 * C1375 +
              C11272 * C1366 + C11818 + C11818 + C11264 * C1376 +
              C11270 * C1367 + C11819 + C11819 + C11263 * C1377 +
              C11268 * C1368 + C11820 + C11820 + C11262 * C1378) *
                 C153600 +
             (C12550 + C12549 + C12548 + C12547) * C153740) *
                C153501 * C153477) *
               C153449) *
              C153384)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C34887 * C144 + C34892 + C34892 + C153705 * C160 + C34889 * C145 +
              C34893 + C34893 + C153348 * C161) *
                 C63340 +
             (C39432 + C39433) * C63341 + C58686 * C63342 + C63735 * C153754) *
                C153501 * C1938 -
            (C66089 * C153754 + C62230 * C63342 + (C39434 + C39435) * C63341 +
             (C39433 + C39432) * C63340) *
                C153501 * C153477) *
               C153724 +
           ((C40446 * C63340 + C41230 * C63341 + C60479 * C63342 +
             (C60488 + C60489) * C153754) *
                C153501 * C153477 -
            (C60478 * C153754 + C41229 * C63342 + C40447 * C63341 +
             (C35191 + C35190) * C63340) *
                C153501 * C1938) *
               C153449) *
              C153716 +
          ((((C39436 + C39437) * C63340 + (C39438 + C39439) * C63341 +
             (C58709 + C58710) * C63342 + (C63747 + C63748) * C153754) *
                C153501 * C153477 -
            (C63740 * C153754 + C58696 * C63342 + (C39437 + C39436) * C63341 +
             (C34889 * C146 + C34906 + C34906 + C153348 * C162 + C34887 * C145 +
              C34907 + C34907 + C153705 * C161) *
                 C63340) *
                C153501 * C1938) *
               C153724 +
           (((C35198 + C35199) * C63340 + C40448 * C63341 + C59703 * C63342 +
             (C58711 + C58712) * C153754) *
                C153501 * C1938 -
            ((C34889 * C9040 + C58697 + C58697 + C153348 * C9046 +
              C34887 * C9041 + C58698 + C58698 + C153705 * C9047) *
                 C153754 +
             (C58712 + C58711) * C63342 + C58695 * C63341 + C40450 * C63340) *
                C153501 * C153477) *
               C153449) *
              C153384)) /
            (p * q * std::sqrt(p + q));
    d2ee[206] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C34887 * C144 + C34892 + C34892 + C153705 * C160 + C34889 * C145 +
              C34893 + C34893 + C153348 * C161) *
                 C153740 +
             (C39432 + C39433) * C153600) *
                C23987 +
            ((C35190 + C35191) * C153740 + C40446 * C153600) * C23988 +
            C39086 * C153774) *
               C153797 -
           (C42221 * C153774 + (C41229 * C153600 + C40447 * C153740) * C23988 +
            ((C39434 + C39435) * C153600 + (C39433 + C39432) * C153740) *
                C23987) *
               C153798 +
           (((C39435 + C39434) * C153740 + (C43010 + C43011) * C153600) *
                C23987 +
            (C41230 * C153740 + (C41248 + C41249) * C153600) * C23988 +
            (C41235 * C153740 + (C41250 + C41251) * C153600) * C153774) *
               C2454) *
              C153724 +
          (((C40446 * C153740 + C41230 * C153600) * C23987 +
            (C39081 * C153740 + C41235 * C153600) * C23988 +
            (C42220 * C153740 + (C36754 + C36755) * C153600) * C153774) *
               C153798 -
           (C40937 * C153774 +
            (C37403 * C153600 + (C35193 + C35192) * C153740) * C23988 +
            (C40447 * C153600 + (C35191 + C35190) * C153740) * C23987) *
               C153797 -
           (((C34889 * C32070 + C37936 + C37936 + C153348 * C32072 +
              C34887 * C30195 + C37937 + C37937 + C153705 * C30199) *
                 C153600 +
             (C36755 + C36754) * C153740) *
                C153774 +
            ((C41251 + C41250) * C153600 + C41228 * C153740) * C23988 +
            ((C41249 + C41248) * C153600 + C41229 * C153740) * C23987) *
               C2454) *
              C153449) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C11268 * C144 + C11277 + C11277 + C11262 * C160 + C11270 * C145 +
             C11278 + C11278 + C11263 * C161 + C11272 * C146 + C11279 + C11279 +
             C11264 * C162 + C11274 * C147 + C11280 + C11280 + C153738 * C163) *
                C153740 +
            (C15551 + C15552 + C15553 + C15554) * C153600) *
               C153501 * C153797 -
           ((C15555 + C15556 + C15557 + C15558) * C153600 +
            (C15554 + C15553 + C15552 + C15551) * C153740) *
               C153501 * C153798 +
           ((C15558 + C15557 + C15556 + C15555) * C153740 +
            (C17939 + C17940 + C17941 + C17942) * C153600) *
               C153501 * C2454) *
              C153724 +
          (((C12546 + C12545 + C12544 + C12543) * C153740 +
            (C13113 + C13114 + C13115 + C13116) * C153600) *
               C153501 * C153798 -
           ((C12543 + C12544 + C12545 + C12546) * C153600 +
            (C11586 + C11585 + C11584 + C11583) * C153740) *
               C153501 * C153797 -
           ((C11274 * C8437 + C14305 + C14305 + C153738 * C8439 +
             C11272 * C6216 + C14306 + C14306 + C11264 * C6228 +
             C11270 * C6217 + C14307 + C14307 + C11263 * C6229 +
             C11268 * C6218 + C14308 + C14308 + C11262 * C6230) *
                C153600 +
            (C13116 + C13115 + C13114 + C13113) * C153740) *
               C153501 * C2454) *
              C153449) *
         C153378) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C34887 * C144 + C34892 + C34892 + C153705 * C160 + C34889 * C145 +
             C34893 + C34893 + C153348 * C161) *
                C63340 +
            (C39432 + C39433) * C63341 + C58686 * C63342 + C63735 * C153754) *
               C153501 * C153797 -
           (C66089 * C153754 + C62230 * C63342 + (C39434 + C39435) * C63341 +
            (C39433 + C39432) * C63340) *
               C153501 * C153798 +
           (C58686 * C63340 + C63735 * C63341 + (C62243 + C62244) * C63342 +
            (C66100 + C66101) * C153754) *
               C153501 * C2454) *
              C153724 +
          ((C40446 * C63340 + C41230 * C63341 + C60479 * C63342 +
            (C60488 + C60489) * C153754) *
               C153501 * C153798 -
           (C60478 * C153754 + C41229 * C63342 + C40447 * C63341 +
            (C35191 + C35190) * C63340) *
               C153501 * C153797 -
           ((C34889 * C56416 + C62235 + C62235 + C153348 * C56418 +
             C34887 * C34012 + C62236 + C62236 + C153705 * C34016) *
                C153754 +
            (C60489 + C60488) * C63342 + C60478 * C63341 + C41229 * C63340) *
               C153501 * C2454) *
              C153449) *
         C153378) /
            (p * q * std::sqrt(p + q));
    d2ee[207] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C11268 * C144 + C11277 + C11277 + C11262 * C160 +
                 C11270 * C145 + C11278 + C11278 + C11263 * C161 +
                 C11272 * C146 + C11279 + C11279 + C11264 * C162 +
                 C11274 * C147 + C11280 + C11280 + C153738 * C163) *
                    C153740 +
                (C15551 + C15552 + C15553 + C15554) * C153600) *
                   C153501 * C1938 -
               ((C15555 + C15556 + C15557 + C15558) * C153600 +
                (C15554 + C15553 + C15552 + C15551) * C153740) *
                   C153501 * C153477) *
                  C153397 * C1133 +
              (((C15559 + C15560 + C15561 + C15562) * C153740 +
                (C15563 + C15564 + C15565 + C15566) * C153600) *
                   C153501 * C153477 -
               ((C15562 + C15561 + C15560 + C15559) * C153600 +
                (C11274 * C148 + C11289 + C11289 + C153738 * C164 +
                 C11272 * C147 + C11290 + C11290 + C11264 * C163 +
                 C11270 * C146 + C11291 + C11291 + C11263 * C162 +
                 C11268 * C145 + C11292 + C11292 + C11262 * C161) *
                    C153740) *
                   C153501 * C1938) *
                  C153397 * C1134 +
              (((C11268 * C146 + C11293 + C11293 + C11262 * C162 +
                 C11270 * C147 + C11294 + C11294 + C11263 * C163 +
                 C11272 * C148 + C11295 + C11295 + C11264 * C164 +
                 C11274 * C149 + C11296 + C11296 + C153738 * C165) *
                    C153740 +
                (C15975 + C15976 + C15977 + C15978) * C153600) *
                   C153501 * C1938 -
               ((C11274 * C507 + C15963 + C15963 + C153738 * C531 +
                 C11272 * C505 + C15964 + C15964 + C11264 * C529 +
                 C11270 * C504 + C15965 + C15965 + C11263 * C528 +
                 C11268 * C503 + C15966 + C15966 + C11262 * C527) *
                    C153600 +
                (C15978 + C15977 + C15976 + C15975) * C153740) *
                   C153501 * C153477) *
                  C153397 * C1135) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C11268 * C144 + C11277 + C11277 + C11262 * C160 +
                 C11270 * C145 + C11278 + C11278 + C11263 * C161 +
                 C11272 * C146 + C11279 + C11279 + C11264 * C162 +
                 C11274 * C147 + C11280 + C11280 + C153738 * C163) *
                    C153740 +
                (C15551 + C15552 + C15553 + C15554) * C153600) *
                   C153501 * C1938 -
               ((C15555 + C15556 + C15557 + C15558) * C153600 +
                (C15554 + C15553 + C15552 + C15551) * C153740) *
                   C153501 * C153477) *
                  C310 +
              (((C12546 + C12545 + C12544 + C12543) * C153740 +
                (C13113 + C13114 + C13115 + C13116) * C153600) *
                   C153501 * C153477 -
               ((C12543 + C12544 + C12545 + C12546) * C153600 +
                (C11586 + C11585 + C11584 + C11583) * C153740) *
                   C153501 * C1938) *
                  C311 +
              (((C11590 + C11589 + C11588 + C11587) * C153740 +
                (C13783 + C13784 + C13785 + C13786) * C153600) *
                   C153501 * C1938 -
               ((C11274 * C3330 + C13101 + C13101 + C153738 * C3338 +
                 C11272 * C3329 + C13102 + C13102 + C11264 * C3337 +
                 C11270 * C3328 + C13103 + C13103 + C11263 * C3336 +
                 C11268 * C3327 + C13104 + C13104 + C11262 * C3335) *
                    C153600 +
                (C13786 + C13785 + C13784 + C13783) * C153740) *
                   C153501 * C153477) *
                  C312) *
             C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C11268 * C144 + C11277 + C11277 + C11262 * C160 + C11270 * C145 +
            C11278 + C11278 + C11263 * C161 + C11272 * C146 + C11279 + C11279 +
            C11264 * C162 + C11274 * C147 + C11280 + C11280 + C153738 * C163) *
               C153740 +
           (C15551 + C15552 + C15553 + C15554) * C153600) *
              C153501 * C2144 -
          ((C15555 + C15556 + C15557 + C15558) * C153600 +
           (C15554 + C15553 + C15552 + C15551) * C153740) *
              C153501 * C2145 +
          ((C15558 + C15557 + C15556 + C15555) * C153740 +
           (C17939 + C17940 + C17941 + C17942) * C153600) *
              C153501 * C2146 -
          ((C11274 * C7563 + C17927 + C17927 + C153738 * C7571 +
            C11272 * C7562 + C17928 + C17928 + C11264 * C7570 + C11270 * C7561 +
            C17929 + C17929 + C11263 * C7569 + C11268 * C7560 + C17930 +
            C17930 + C11262 * C7568) *
               C153600 +
           (C17942 + C17941 + C17940 + C17939) * C153740) *
              C153501 * C2147) *
         C153397 * C153378) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C34887 * C144 + C34892 + C34892 + C153705 * C160 + C34889 * C145 +
              C34893 + C34893 + C153348 * C161) *
                 C153740 +
             (C39432 + C39433) * C153600) *
                C23987 +
            ((C35190 + C35191) * C153740 + C40446 * C153600) * C23988 +
            C39086 * C153774) *
               C1938 -
           (C42221 * C153774 + (C41229 * C153600 + C40447 * C153740) * C23988 +
            ((C39434 + C39435) * C153600 + (C39433 + C39432) * C153740) *
                C23987) *
               C153477) *
              C153397 * C1133 +
          ((((C39436 + C39437) * C153740 + (C39438 + C39439) * C153600) *
                C23987 +
            (C40448 * C153740 + (C39440 + C39441) * C153600) * C23988 +
            (C40449 * C153740 + (C39442 + C39443) * C153600) * C153774) *
               C153477 -
           (C39087 * C153774 +
            (C40450 * C153600 + (C35199 + C35198) * C153740) * C23988 +
            ((C39437 + C39436) * C153600 +
             (C34889 * C146 + C34906 + C34906 + C153348 * C162 + C34887 * C145 +
              C34907 + C34907 + C153705 * C161) *
                 C153740) *
                C23987) *
               C1938) *
              C153397 * C1134 +
          ((((C34887 * C146 + C34908 + C34908 + C153705 * C162 + C34889 * C147 +
              C34909 + C34909 + C153348 * C163) *
                 C153740 +
             (C40058 + C40059) * C153600) *
                C23987 +
            ((C35660 + C35661) * C153740 + (C39750 + C39751) * C153600) *
                C23988 +
            ((C35662 + C35663) * C153740 + (C39752 + C39753) * C153600) *
                C153774) *
               C1938 -
           (((C34889 * C3330 + C40048 + C40048 + C153348 * C3338 +
              C34887 * C3329 + C40049 + C40049 + C153705 * C3337) *
                 C153600 +
             (C39753 + C39752) * C153740) *
                C153774 +
            ((C34889 * C1366 + C40050 + C40050 + C153348 * C1376 +
              C34887 * C1367 + C40051 + C40051 + C153705 * C1377) *
                 C153600 +
             (C39751 + C39750) * C153740) *
                C23988 +
            ((C34889 * C504 + C40052 + C40052 + C153348 * C528 + C34887 * C503 +
              C40053 + C40053 + C153705 * C527) *
                 C153600 +
             (C40059 + C40058) * C153740) *
                C23987) *
               C153477) *
              C153397 * C1135)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C34887 * C144 + C34892 + C34892 + C153705 * C160 + C34889 * C145 +
              C34893 + C34893 + C153348 * C161) *
                 C153740 +
             (C39432 + C39433) * C153600) *
                C23987 +
            ((C35190 + C35191) * C153740 + C40446 * C153600) * C23988 +
            C39086 * C153774) *
               C1938 -
           (C42221 * C153774 + (C41229 * C153600 + C40447 * C153740) * C23988 +
            ((C39434 + C39435) * C153600 + (C39433 + C39432) * C153740) *
                C23987) *
               C153477) *
              C310 +
          (((C40446 * C153740 + C41230 * C153600) * C23987 +
            (C39081 * C153740 + C41235 * C153600) * C23988 +
            (C42220 * C153740 + (C36754 + C36755) * C153600) * C153774) *
               C153477 -
           (C40937 * C153774 +
            (C37403 * C153600 + (C35193 + C35192) * C153740) * C23988 +
            (C40447 * C153600 + (C35191 + C35190) * C153740) * C23987) *
               C1938) *
              C311 +
          ((C39086 * C23987 + (C35207 * C153740 + C42220 * C153600) * C23988 +
            ((C35197 + C35196) * C153740 + (C37416 + C37417) * C153600) *
                C153774) *
               C1938 -
           (((C34889 * C28571 + C36736 + C36736 + C153348 * C28575 +
              C34887 * C28570 + C36737 + C36737 + C153705 * C28574) *
                 C153600 +
             (C37417 + C37416) * C153740) *
                C153774 +
            ((C36755 + C36754) * C153600 + C37402 * C153740) * C23988 +
            C42221 * C23987) *
               C153477) *
              C312) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C34887 * C144 + C34892 + C34892 + C153705 * C160 + C34889 * C145 +
             C34893 + C34893 + C153348 * C161) *
                C153740 +
            (C39432 + C39433) * C153600) *
               C23987 +
           ((C35190 + C35191) * C153740 + C40446 * C153600) * C23988 +
           C39086 * C153774) *
              C2144 -
          (C42221 * C153774 + (C41229 * C153600 + C40447 * C153740) * C23988 +
           ((C39434 + C39435) * C153600 + (C39433 + C39432) * C153740) *
               C23987) *
              C2145 +
          (((C39435 + C39434) * C153740 + (C43010 + C43011) * C153600) *
               C23987 +
           (C41230 * C153740 + (C41248 + C41249) * C153600) * C23988 +
           (C41235 * C153740 + (C41250 + C41251) * C153600) * C153774) *
              C2146 -
          (((C34889 * C31240 + C43000 + C43000 + C153348 * C31244 +
             C34887 * C31239 + C43001 + C43001 + C153705 * C31243) *
                C153600 +
            (C41251 + C41250) * C153740) *
               C153774 +
           ((C34889 * C9041 + C43002 + C43002 + C153348 * C9047 +
             C34887 * C9042 + C43003 + C43003 + C153705 * C9048) *
                C153600 +
            (C41249 + C41248) * C153740) *
               C23988 +
           ((C34889 * C7561 + C43004 + C43004 + C153348 * C7569 +
             C34887 * C7560 + C43005 + C43005 + C153705 * C7568) *
                C153600 +
            (C43011 + C43010) * C153740) *
               C23987) *
              C2147) *
         C153397 * C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C34887 * C144 + C34892 + C34892 + C153705 * C160 + C34889 * C145 +
             C34893 + C34893 + C153348 * C161) *
                C63340 +
            (C39432 + C39433) * C63341 + C58686 * C63342 + C63735 * C153754) *
               C153501 * C1938 -
           ((C62244 + C62243) * C153754 + C62230 * C63342 +
            (C39434 + C39435) * C63341 + (C39433 + C39432) * C63340) *
               C153501 * C153477) *
              C153397 * C1133 +
          (((C39436 + C39437) * C63340 + (C39438 + C39439) * C63341 +
            (C58709 + C58710) * C63342 + (C63747 + C63748) * C153754) *
               C153501 * C153477 -
           (C63740 * C153754 + C58696 * C63342 + (C39437 + C39436) * C63341 +
            (C34889 * C146 + C34906 + C34906 + C153348 * C162 + C34887 * C145 +
             C34907 + C34907 + C153705 * C161) *
                C63340) *
               C153501 * C1938) *
              C153397 * C1134 +
          (((C34887 * C146 + C34908 + C34908 + C153705 * C162 + C34889 * C147 +
             C34909 + C34909 + C153348 * C163) *
                C63340 +
            (C40058 + C40059) * C63341 + (C59315 + C59316) * C63342 +
            (C64147 + C64148) * C153754) *
               C153501 * C1938 -
           ((C34889 * C7563 + C64141 + C64141 + C153348 * C7571 +
             C34887 * C7562 + C64142 + C64142 + C153705 * C7570) *
                C153754 +
            (C64148 + C64147) * C63342 + (C59316 + C59315) * C63341 +
            (C40059 + C40058) * C63340) *
               C153501 * C153477) *
              C153397 * C1135)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C34887 * C144 + C34892 + C34892 + C153705 * C160 + C34889 * C145 +
             C34893 + C34893 + C153348 * C161) *
                C63340 +
            (C39432 + C39433) * C63341 + C58686 * C63342 + C63735 * C153754) *
               C153501 * C1938 -
           ((C62244 + C62243) * C153754 + C62230 * C63342 +
            (C39434 + C39435) * C63341 + (C39433 + C39432) * C63340) *
               C153501 * C153477) *
              C310 +
          ((C40446 * C63340 + C41230 * C63341 + C60479 * C63342 +
            (C60488 + C60489) * C153754) *
               C153501 * C153477 -
           (C60478 * C153754 + C41229 * C63342 + C40447 * C63341 +
            (C35191 + C35190) * C63340) *
               C153501 * C1938) *
              C311 +
          ((C35206 * C63340 + C39081 * C63341 + C41235 * C63342 +
            (C41250 + C41251) * C153754) *
               C153501 * C1938 -
           ((C34889 * C31240 + C43000 + C43000 + C153348 * C31244 +
             C34887 * C31239 + C43001 + C43001 + C153705 * C31243) *
                C153754 +
            (C41251 + C41250) * C63342 + C41228 * C63341 + C37403 * C63340) *
               C153501 * C153477) *
              C312) *
         C153378) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C34887 * C144 + C34892 + C34892 + C153705 * C160 + C34889 * C145 +
            C34893 + C34893 + C153348 * C161) *
               C63340 +
           (C39432 + C39433) * C63341 + C58686 * C63342 + C63735 * C153754) *
              C153501 * C2144 -
          (C66089 * C153754 + C62230 * C63342 + (C39434 + C39435) * C63341 +
           (C39433 + C39432) * C63340) *
              C153501 * C2145 +
          (C58686 * C63340 + C63735 * C63341 + (C62243 + C62244) * C63342 +
           (C66100 + C66101) * C153754) *
              C153501 * C2146 -
          ((C34889 * C55975 + C66094 + C66094 + C153348 * C55979 +
            C34887 * C55974 + C66095 + C66095 + C153705 * C55978) *
               C153754 +
           (C66101 + C66100) * C63342 + C66089 * C63341 + C62230 * C63340) *
              C153501 * C2147) *
         C153397 * C153378) /
            (p * q * std::sqrt(p + q));
    d2ee[208] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C34887 * C144 + C34892 + C34892 + C153705 * C160 + C34889 * C145 +
              C34893 + C34893 + C153348 * C161) *
                 C153740 +
             (C39432 + C39433) * C153600) *
                C23987 +
            ((C35190 + C35191) * C153740 + C40446 * C153600) * C23988 +
            C39086 * C153774) *
               C153797 -
           (C42221 * C153774 + (C41229 * C153600 + C40447 * C153740) * C23988 +
            ((C39434 + C39435) * C153600 + (C39433 + C39432) * C153740) *
                C23987) *
               C153798 +
           (((C39435 + C39434) * C153740 + (C43010 + C43011) * C153600) *
                C23987 +
            (C41230 * C153740 + (C41248 + C41249) * C153600) * C23988 +
            (C41235 * C153740 + (C41250 + C41251) * C153600) * C153774) *
               C2454) *
              C153397 * C153716 +
          ((((C39436 + C39437) * C153740 + (C39438 + C39439) * C153600) *
                C23987 +
            (C40448 * C153740 + (C39440 + C39441) * C153600) * C23988 +
            (C40449 * C153740 + (C39442 + C39443) * C153600) * C153774) *
               C153798 -
           (C39087 * C153774 +
            (C40450 * C153600 + (C35199 + C35198) * C153740) * C23988 +
            ((C39437 + C39436) * C153600 +
             (C34889 * C146 + C34906 + C34906 + C153348 * C162 + C34887 * C145 +
              C34907 + C34907 + C153705 * C161) *
                 C153740) *
                C23987) *
               C153797 -
           (((C34889 * C6213 + C39402 + C39402 + C153348 * C6225 +
              C34887 * C6214 + C39403 + C39403 + C153705 * C6226) *
                 C153600 +
             (C39443 + C39442) * C153740) *
                C153774 +
            ((C34889 * C6216 + C39404 + C39404 + C153348 * C6228 +
              C34887 * C6217 + C39405 + C39405 + C153705 * C6229) *
                 C153600 +
             (C39441 + C39440) * C153740) *
                C23988 +
            ((C34889 * C2150 + C39406 + C39406 + C153348 * C2160 +
              C34887 * C2151 + C39407 + C39407 + C153705 * C2161) *
                 C153600 +
             (C39439 + C39438) * C153740) *
                C23987) *
               C2454) *
              C153397 * C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C11268 * C144 + C11277 + C11277 + C11262 * C160 + C11270 * C145 +
             C11278 + C11278 + C11263 * C161 + C11272 * C146 + C11279 + C11279 +
             C11264 * C162 + C11274 * C147 + C11280 + C11280 + C153738 * C163) *
                C153740 +
            (C15551 + C15552 + C15553 + C15554) * C153600) *
               C153501 * C153797 -
           ((C15555 + C15556 + C15557 + C15558) * C153600 +
            (C15554 + C15553 + C15552 + C15551) * C153740) *
               C153501 * C153798 +
           ((C15558 + C15557 + C15556 + C15555) * C153740 +
            (C17939 + C17940 + C17941 + C17942) * C153600) *
               C153501 * C2454) *
              C153397 * C153716 +
          (((C15559 + C15560 + C15561 + C15562) * C153740 +
            (C15563 + C15564 + C15565 + C15566) * C153600) *
               C153501 * C153798 -
           ((C15562 + C15561 + C15560 + C15559) * C153600 +
            (C11274 * C148 + C11289 + C11289 + C153738 * C164 + C11272 * C147 +
             C11290 + C11290 + C11264 * C163 + C11270 * C146 + C11291 + C11291 +
             C11263 * C162 + C11268 * C145 + C11292 + C11292 + C11262 * C161) *
                C153740) *
               C153501 * C153797 -
           ((C11274 * C2148 + C15515 + C15515 + C153738 * C2158 +
             C11272 * C2149 + C15516 + C15516 + C11264 * C2159 +
             C11270 * C2150 + C15517 + C15517 + C11263 * C2160 +
             C11268 * C2151 + C15518 + C15518 + C11262 * C2161) *
                C153600 +
            (C15566 + C15565 + C15564 + C15563) * C153740) *
               C153501 * C2454) *
              C153397 * C153384)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C34887 * C144 + C34892 + C34892 + C153705 * C160 + C34889 * C145 +
             C34893 + C34893 + C153348 * C161) *
                C63340 +
            (C39432 + C39433) * C63341 + C58686 * C63342 + C63735 * C153754) *
               C153501 * C153797 -
           (C66089 * C153754 + C62230 * C63342 + (C39434 + C39435) * C63341 +
            (C39433 + C39432) * C63340) *
               C153501 * C153798 +
           (C58686 * C63340 + C63735 * C63341 + (C62243 + C62244) * C63342 +
            (C66100 + C66101) * C153754) *
               C153501 * C2454) *
              C153397 * C153716 +
          (((C39436 + C39437) * C63340 + (C39438 + C39439) * C63341 +
            (C58709 + C58710) * C63342 + (C63747 + C63748) * C153754) *
               C153501 * C153798 -
           (C63740 * C153754 + C58696 * C63342 + (C39437 + C39436) * C63341 +
            (C34889 * C146 + C34906 + C34906 + C153348 * C162 + C34887 * C145 +
             C34907 + C34907 + C153705 * C161) *
                C63340) *
               C153501 * C153797 -
           ((C34889 * C10377 + C63741 + C63741 + C153348 * C10383 +
             C34887 * C10378 + C63742 + C63742 + C153705 * C10384) *
                C153754 +
            (C63748 + C63747) * C63342 + C63740 * C63341 + C58696 * C63340) *
               C153501 * C2454) *
              C153397 * C153384)) /
            (p * q * std::sqrt(p + q));
    d2ee[209] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C11268 * C144 + C11277 + C11277 + C11262 * C160 + C11270 * C145 +
             C11278 + C11278 + C11263 * C161 + C11272 * C146 + C11279 + C11279 +
             C11264 * C162 + C11274 * C147 + C11280 + C11280 + C153738 * C163) *
                C153740 +
            (C15551 + C15552 + C15553 + C15554) * C153600) *
               C153501 * C1938 -
           ((C15555 + C15556 + C15557 + C15558) * C153600 +
            (C15554 + C15553 + C15552 + C15551) * C153740) *
               C153501 * C153477) *
              C310 +
          (((C12546 + C12545 + C12544 + C12543) * C153740 +
            (C13113 + C13114 + C13115 + C13116) * C153600) *
               C153501 * C153477 -
           ((C12543 + C12544 + C12545 + C12546) * C153600 +
            (C11586 + C11585 + C11584 + C11583) * C153740) *
               C153501 * C1938) *
              C311 +
          (((C11590 + C11589 + C11588 + C11587) * C153740 +
            (C13783 + C13784 + C13785 + C13786) * C153600) *
               C153501 * C1938 -
           ((C11274 * C3330 + C13101 + C13101 + C153738 * C3338 +
             C11272 * C3329 + C13102 + C13102 + C11264 * C3337 +
             C11270 * C3328 + C13103 + C13103 + C11263 * C3336 +
             C11268 * C3327 + C13104 + C13104 + C11262 * C3335) *
                C153600 +
            (C13786 + C13785 + C13784 + C13783) * C153740) *
               C153501 * C153477) *
              C312) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C11268 * C144 + C11277 + C11277 + C11262 * C160 + C11270 * C145 +
             C11278 + C11278 + C11263 * C161 + C11272 * C146 + C11279 + C11279 +
             C11264 * C162 + C11274 * C147 + C11280 + C11280 + C153738 * C163) *
                C153740 +
            (C15551 + C15552 + C15553 + C15554) * C153600) *
               C153501 * C1938 -
           ((C15555 + C15556 + C15557 + C15558) * C153600 +
            (C15554 + C15553 + C15552 + C15551) * C153740) *
               C153501 * C153477) *
              C153397 * C1133 +
          (((C15559 + C15560 + C15561 + C15562) * C153740 +
            (C15563 + C15564 + C15565 + C15566) * C153600) *
               C153501 * C153477 -
           ((C15562 + C15561 + C15560 + C15559) * C153600 +
            (C11274 * C148 + C11289 + C11289 + C153738 * C164 + C11272 * C147 +
             C11290 + C11290 + C11264 * C163 + C11270 * C146 + C11291 + C11291 +
             C11263 * C162 + C11268 * C145 + C11292 + C11292 + C11262 * C161) *
                C153740) *
               C153501 * C1938) *
              C153397 * C1134 +
          (((C11268 * C146 + C11293 + C11293 + C11262 * C162 + C11270 * C147 +
             C11294 + C11294 + C11263 * C163 + C11272 * C148 + C11295 + C11295 +
             C11264 * C164 + C11274 * C149 + C11296 + C11296 + C153738 * C165) *
                C153740 +
            (C15975 + C15976 + C15977 + C15978) * C153600) *
               C153501 * C1938 -
           ((C11274 * C507 + C15963 + C15963 + C153738 * C531 + C11272 * C505 +
             C15964 + C15964 + C11264 * C529 + C11270 * C504 + C15965 + C15965 +
             C11263 * C528 + C11268 * C503 + C15966 + C15966 + C11262 * C527) *
                C153600 +
            (C15978 + C15977 + C15976 + C15975) * C153740) *
               C153501 * C153477) *
              C153397 * C1135)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C34887 * C144 + C34892 + C34892 + C153705 * C160 + C34889 * C145 +
              C34893 + C34893 + C153348 * C161) *
                 C153740 +
             (C39432 + C39433) * C153600) *
                C23987 +
            ((C35190 + C35191) * C153740 + C40446 * C153600) * C23988 +
            C39086 * C153774) *
               C1938 -
           (C42221 * C153774 + (C41229 * C153600 + C40447 * C153740) * C23988 +
            ((C39434 + C39435) * C153600 + (C39433 + C39432) * C153740) *
                C23987) *
               C153477) *
              C153397 * C1133 +
          ((((C39436 + C39437) * C153740 + (C39438 + C39439) * C153600) *
                C23987 +
            (C40448 * C153740 + (C39440 + C39441) * C153600) * C23988 +
            (C40449 * C153740 + (C39442 + C39443) * C153600) * C153774) *
               C153477 -
           (C39087 * C153774 +
            (C40450 * C153600 + (C35199 + C35198) * C153740) * C23988 +
            ((C39437 + C39436) * C153600 +
             (C34889 * C146 + C34906 + C34906 + C153348 * C162 + C34887 * C145 +
              C34907 + C34907 + C153705 * C161) *
                 C153740) *
                C23987) *
               C1938) *
              C153397 * C1134 +
          ((((C34887 * C146 + C34908 + C34908 + C153705 * C162 + C34889 * C147 +
              C34909 + C34909 + C153348 * C163) *
                 C153740 +
             (C40058 + C40059) * C153600) *
                C23987 +
            ((C35660 + C35661) * C153740 + (C39750 + C39751) * C153600) *
                C23988 +
            ((C35662 + C35663) * C153740 + (C39752 + C39753) * C153600) *
                C153774) *
               C1938 -
           (((C34889 * C3330 + C40048 + C40048 + C153348 * C3338 +
              C34887 * C3329 + C40049 + C40049 + C153705 * C3337) *
                 C153600 +
             (C39753 + C39752) * C153740) *
                C153774 +
            ((C34889 * C1366 + C40050 + C40050 + C153348 * C1376 +
              C34887 * C1367 + C40051 + C40051 + C153705 * C1377) *
                 C153600 +
             (C39751 + C39750) * C153740) *
                C23988 +
            ((C34889 * C504 + C40052 + C40052 + C153348 * C528 + C34887 * C503 +
              C40053 + C40053 + C153705 * C527) *
                 C153600 +
             (C40059 + C40058) * C153740) *
                C23987) *
               C153477) *
              C153397 * C1135)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C34887 * C144 + C34892 + C34892 + C153705 * C160 + C34889 * C145 +
              C34893 + C34893 + C153348 * C161) *
                 C153740 +
             (C39432 + C39433) * C153600) *
                C23987 +
            ((C35190 + C35191) * C153740 + C40446 * C153600) * C23988 +
            C39086 * C153774) *
               C1938 -
           (C42221 * C153774 + (C41229 * C153600 + C40447 * C153740) * C23988 +
            ((C39434 + C39435) * C153600 + (C39433 + C39432) * C153740) *
                C23987) *
               C153477) *
              C310 +
          (((C40446 * C153740 + C41230 * C153600) * C23987 +
            (C39081 * C153740 + C41235 * C153600) * C23988 +
            (C42220 * C153740 + (C36754 + C36755) * C153600) * C153774) *
               C153477 -
           (C40937 * C153774 +
            (C37403 * C153600 + (C35193 + C35192) * C153740) * C23988 +
            (C40447 * C153600 + (C35191 + C35190) * C153740) * C23987) *
               C1938) *
              C311 +
          ((C39086 * C23987 + (C35207 * C153740 + C42220 * C153600) * C23988 +
            ((C35197 + C35196) * C153740 + (C37416 + C37417) * C153600) *
                C153774) *
               C1938 -
           (((C34889 * C28571 + C36736 + C36736 + C153348 * C28575 +
              C34887 * C28570 + C36737 + C36737 + C153705 * C28574) *
                 C153600 +
             (C37417 + C37416) * C153740) *
                C153774 +
            ((C36755 + C36754) * C153600 + C37402 * C153740) * C23988 +
            C42221 * C23987) *
               C153477) *
              C312) *
         C153378) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C34887 * C144 + C34892 + C34892 + C153705 * C160 + C34889 * C145 +
             C34893 + C34893 + C153348 * C161) *
                C63340 +
            (C39432 + C39433) * C63341 + C58686 * C63342 + C63735 * C153754) *
               C153501 * C1938 -
           ((C62244 + C62243) * C153754 + C62230 * C63342 +
            (C39434 + C39435) * C63341 + (C39433 + C39432) * C63340) *
               C153501 * C153477) *
              C153397 * C1133 +
          (((C39436 + C39437) * C63340 + (C39438 + C39439) * C63341 +
            (C58709 + C58710) * C63342 + (C63747 + C63748) * C153754) *
               C153501 * C153477 -
           (C63740 * C153754 + C58696 * C63342 + (C39437 + C39436) * C63341 +
            (C34889 * C146 + C34906 + C34906 + C153348 * C162 + C34887 * C145 +
             C34907 + C34907 + C153705 * C161) *
                C63340) *
               C153501 * C1938) *
              C153397 * C1134 +
          (((C34887 * C146 + C34908 + C34908 + C153705 * C162 + C34889 * C147 +
             C34909 + C34909 + C153348 * C163) *
                C63340 +
            (C40058 + C40059) * C63341 + (C59315 + C59316) * C63342 +
            (C64147 + C64148) * C153754) *
               C153501 * C1938 -
           ((C34889 * C7563 + C64141 + C64141 + C153348 * C7571 +
             C34887 * C7562 + C64142 + C64142 + C153705 * C7570) *
                C153754 +
            (C64148 + C64147) * C63342 + (C59316 + C59315) * C63341 +
            (C40059 + C40058) * C63340) *
               C153501 * C153477) *
              C153397 * C1135)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C34887 * C144 + C34892 + C34892 + C153705 * C160 + C34889 * C145 +
             C34893 + C34893 + C153348 * C161) *
                C63340 +
            (C39432 + C39433) * C63341 + C58686 * C63342 + C63735 * C153754) *
               C153501 * C1938 -
           ((C62244 + C62243) * C153754 + C62230 * C63342 +
            (C39434 + C39435) * C63341 + (C39433 + C39432) * C63340) *
               C153501 * C153477) *
              C310 +
          ((C40446 * C63340 + C41230 * C63341 + C60479 * C63342 +
            (C60488 + C60489) * C153754) *
               C153501 * C153477 -
           (C60478 * C153754 + C41229 * C63342 + C40447 * C63341 +
            (C35191 + C35190) * C63340) *
               C153501 * C1938) *
              C311 +
          ((C35206 * C63340 + C39081 * C63341 + C41235 * C63342 +
            (C41250 + C41251) * C153754) *
               C153501 * C1938 -
           ((C34889 * C31240 + C43000 + C43000 + C153348 * C31244 +
             C34887 * C31239 + C43001 + C43001 + C153705 * C31243) *
                C153754 +
            (C41251 + C41250) * C63342 + C41228 * C63341 + C37403 * C63340) *
               C153501 * C153477) *
              C312) *
         C153378) /
            (p * q * std::sqrt(p + q));
    d2ee[210] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 +
             C2737 + C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
             C153761 * C162) *
                C153513 * C153812 +
            (C3086 + C3087 + C3088) * C153513 * C153800 + C3108 * C153774) *
               C153413 * C153724 -
           ((C3092 + C3093 + C3094) * C153513 * C153774 +
            (C3091 + C3090 + C3089) * C153513 * C153800 +
            (C3088 + C3087 + C3086) * C153513 * C153812) *
               C153413 * C153449) *
              C153793 +
          (((C3095 + C3096 + C3097) * C153513 * C153812 +
            (C3098 + C3099 + C3100) * C153513 * C153800 +
            (C3101 + C3102 + C3103) * C153513 * C153774) *
               C153413 * C153449 -
           (C3109 * C153774 + (C3097 + C3096 + C3095) * C153513 * C153800 +
            (C2733 * C147 + C2751 + C2751 + C153761 * C163 + C2731 * C146 +
             C2752 + C2752 + C2724 * C162 + C2729 * C145 + C2753 + C2753 +
             C2723 * C161) *
                C153513 * C153812) *
               C153413 * C153724) *
              C153794 +
          (((C2729 * C146 + C2754 + C2754 + C2723 * C162 + C2731 * C147 +
             C2755 + C2755 + C2724 * C163 + C2733 * C148 + C2756 + C2756 +
             C153761 * C164) *
                C153513 * C153812 +
            (C3621 + C3622 + C3623) * C153513 * C153800 +
            (C3624 + C3625 + C3626) * C153513 * C153774) *
               C153413 * C153724 -
           ((C2733 * C1223 + C3606 + C3606 + C153761 * C1233 + C2731 * C1224 +
             C3607 + C3607 + C2724 * C1234 + C2729 * C1225 + C3608 + C3608 +
             C2723 * C1235) *
                C153513 * C153774 +
            (C3626 + C3625 + C3624) * C153513 * C153800 +
            (C3623 + C3622 + C3621) * C153513 * C153812) *
               C153413 * C153449) *
              C678)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C144 + C169 + C169 + C121 * C160 + C136 * C145 + C170 +
            C170 + C122 * C161 + C138 * C146 + C171 + C171 + C123 * C162 +
            C140 * C147 + C172 + C172 + C124 * C163 + C142 * C148 + C173 +
            C173 + C125 * C164) *
               C153513 * C153501 * C153413 * C153724 -
           (C142 * C315 + C352 + C352 + C125 * C339 + C140 * C316 + C353 +
            C353 + C124 * C340 + C138 * C317 + C354 + C354 + C123 * C341 +
            C136 * C318 + C355 + C355 + C122 * C342 + C134 * C319 + C356 +
            C356 + C121 * C343) *
               C153513 * C153501 * C153413 * C153449) *
              C153793 +
          ((C134 * C318 + C362 + C362 + C121 * C342 + C136 * C317 + C363 +
            C363 + C122 * C341 + C138 * C316 + C364 + C364 + C123 * C340 +
            C140 * C315 + C365 + C365 + C124 * C339 + C142 * C325 + C366 +
            C366 + C125 * C349) *
               C153513 * C153501 * C153413 * C153449 -
           (C142 * C149 + C174 + C174 + C125 * C165 + C140 * C148 + C175 +
            C175 + C124 * C164 + C138 * C147 + C176 + C176 + C123 * C163 +
            C136 * C146 + C177 + C177 + C122 * C162 + C134 * C145 + C178 +
            C178 + C121 * C161) *
               C153513 * C153501 * C153413 * C153724) *
              C153794 +
          ((C134 * C146 + C179 + C179 + C121 * C162 + C136 * C147 + C180 +
            C180 + C122 * C163 + C138 * C148 + C181 + C181 + C123 * C164 +
            C140 * C149 + C182 + C182 + C124 * C165 + C142 * C150 + C183 +
            C183 + C125 * C166) *
               C153513 * C153501 * C153413 * C153724 -
           (C142 * C679 + C683 + C683 + C125 * C681 + C140 * C325 + C684 +
            C684 + C124 * C349 + C138 * C315 + C685 + C685 + C123 * C339 +
            C136 * C316 + C686 + C686 + C122 * C340 + C134 * C317 + C687 +
            C687 + C121 * C341) *
               C153513 * C153501 * C153413 * C153449) *
              C678)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
             C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 +
             C23999 + C153761 * C162) *
                C153513 * C23987 +
            (C24335 + C24336 + C24337) * C153513 * C23988 + C24357 * C153774) *
               C153413 * C153724 -
           ((C24341 + C24342 + C24343) * C153513 * C153774 +
            (C24340 + C24339 + C24338) * C153513 * C23988 +
            (C24337 + C24336 + C24335) * C153513 * C23987) *
               C153413 * C153449) *
              C153793 +
          (((C24344 + C24345 + C24346) * C153513 * C23987 +
            (C24347 + C24348 + C24349) * C153513 * C23988 +
            (C24350 + C24351 + C24352) * C153513 * C153774) *
               C153413 * C153449 -
           (C24358 * C153774 + (C24346 + C24345 + C24344) * C153513 * C23988 +
            (C23994 * C147 + C24012 + C24012 + C153761 * C163 + C23992 * C146 +
             C24013 + C24013 + C153790 * C162 + C23990 * C145 + C24014 +
             C24014 + C153809 * C161) *
                C153513 * C23987) *
               C153413 * C153724) *
              C153794 +
          (((C23990 * C146 + C24015 + C24015 + C153809 * C162 + C23992 * C147 +
             C24016 + C24016 + C153790 * C163 + C23994 * C148 + C24017 +
             C24017 + C153761 * C164) *
                C153513 * C23987 +
            (C24858 + C24859 + C24860) * C153513 * C23988 +
            (C24861 + C24862 + C24863) * C153513 * C153774) *
               C153413 * C153724 -
           ((C23994 * C1223 + C24843 + C24843 + C153761 * C1233 +
             C23992 * C1224 + C24844 + C24844 + C153790 * C1234 +
             C23990 * C1225 + C24845 + C24845 + C153809 * C1235) *
                C153513 * C153774 +
            (C24863 + C24862 + C24861) * C153513 * C23988 +
            (C24860 + C24859 + C24858) * C153513 * C23987) *
               C153413 * C153449) *
              C678)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153513 *
                C28229 +
            C28439 * C28230 + C28440 * C28231 + C28441 * C28232 +
            C28442 * C28233) *
               C153413 * C153724 -
           (C28443 * C28233 + C28442 * C28232 + C28441 * C28231 +
            C28440 * C28230 + C28439 * C28229) *
               C153413 * C153449) *
              C153793 +
          ((C28444 * C28229 + C28445 * C28230 + C28446 * C28231 +
            C28447 * C28232 + C28448 * C28233) *
               C153413 * C153449 -
           (C28447 * C28233 + C28446 * C28232 + C28445 * C28231 +
            C28444 * C28230 +
            (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C153513 *
                C28229) *
               C153413 * C153724) *
              C153794 +
          (((C28234 * C146 + C28247 + C28247 + C153338 * C162) * C153513 *
                C28229 +
            C28740 * C28230 + C28741 * C28231 + C28742 * C28232 +
            C28743 * C28233) *
               C153413 * C153724 -
           ((C28234 * C4585 + C28727 + C28727 + C153338 * C4591) * C153513 *
                C28233 +
            C28743 * C28232 + C28742 * C28231 + C28741 * C28230 +
            C28740 * C28229) *
               C153413 * C153449) *
              C678)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
             C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 +
             C23999 + C153761 * C162) *
                C47673 +
            (C48203 + C48204 + C48205) * C47674 + C48223 * C153777) *
               C153501 * C153413 * C153724 -
           ((C26079 + C26078 + C26077) * C153777 +
            (C25438 + C25439 + C25440) * C47674 +
            (C24337 + C24336 + C24335) * C47673) *
               C153501 * C153413 * C153449) *
              C153793 +
          (((C24344 + C24345 + C24346) * C47673 +
            (C25441 + C25442 + C25443) * C47674 +
            (C23990 * C1368 + C24609 + C24609 + C153809 * C1378 +
             C23992 * C1367 + C24608 + C24608 + C153790 * C1377 +
             C23994 * C1366 + C24607 + C24607 + C153761 * C1376) *
                C153777) *
               C153501 * C153413 * C153449 -
           (C48224 * C153777 + (C48214 + C48213 + C48212) * C47674 +
            (C23994 * C147 + C24012 + C24012 + C153761 * C163 + C23992 * C146 +
             C24013 + C24013 + C153790 * C162 + C23990 * C145 + C24014 +
             C24014 + C153809 * C161) *
                C47673) *
               C153501 * C153413 * C153724) *
              C153794 +
          (((C23990 * C146 + C24015 + C24015 + C153809 * C162 + C23992 * C147 +
             C24016 + C24016 + C153790 * C163 + C23994 * C148 + C24017 +
             C24017 + C153761 * C164) *
                C47673 +
            (C23990 * C498 + C25090 + C25090 + C153809 * C522 + C23992 * C497 +
             C25089 + C25089 + C153790 * C521 + C23994 * C496 + C25088 +
             C25088 + C153761 * C520) *
                C47674 +
            (C23990 * C503 + C47677 + C47677 + C153809 * C527 + C23992 * C504 +
             C47678 + C47678 + C153790 * C528 + C23994 * C505 + C47679 +
             C47679 + C153761 * C529) *
                C153777) *
               C153501 * C153413 * C153724 -
           ((C23994 * C1365 + C48443 + C48443 + C153761 * C1375 +
             C23992 * C1366 + C48444 + C48444 + C153790 * C1376 +
             C23990 * C1367 + C48445 + C48445 + C153809 * C1377) *
                C153777 +
            (C23994 * C985 + C25085 + C25085 + C153761 * C997 + C23992 * C984 +
             C25086 + C25086 + C153790 * C996 + C23990 * C983 + C25087 +
             C25087 + C153809 * C995) *
                C47674 +
            (C24860 + C24859 + C24858) * C47673) *
               C153501 * C153413 * C153449) *
              C678)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C47673 +
             C31295 * C47674 + C31296 * C153777) *
                C153812 +
            (C52025 + C52026 + C52027) * C153800 + C52045 * C153774) *
               C153413 * C153724 -
           ((C52031 + C52032 + C52033) * C153774 +
            (C52030 + C52029 + C52028) * C153800 +
            (C52027 + C52026 + C52025) * C153812) *
               C153413 * C153449) *
              C153793 +
          (((C52034 + C52035 + C52036) * C153812 +
            (C52037 + C52038 + C52039) * C153800 +
            (C52040 + C52041 + C52042) * C153774) *
               C153413 * C153449 -
           (C52046 * C153774 + (C52036 + C52035 + C52034) * C153800 +
            (C31301 * C153777 + C31300 * C47674 +
             (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C47673) *
                C153812) *
               C153413 * C153724) *
              C153794 +
          ((((C28234 * C146 + C28247 + C28247 + C153338 * C162) * C47673 +
             C31779 * C47674 + C31780 * C153777) *
                C153812 +
            (C52483 + C52484 + C52485) * C153800 +
            (C52486 + C52487 + C52488) * C153774) *
               C153413 * C153724 -
           (((C28234 * C4833 + C31533 + C31533 + C153338 * C4839) * C153777 +
             C44720 * C47674 + C28738 * C47673) *
                C153774 +
            (C52488 + C52487 + C52486) * C153800 +
            (C52485 + C52484 + C52483) * C153812) *
               C153413 * C153449) *
              C678)) /
            (p * q * std::sqrt(p + q));
    d2ee[211] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 +
              C2737 + C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
              C153761 * C162) *
                 C153513 * C153812 +
             (C3086 + C3087 + C3088) * C153513 * C153800 + C3108 * C153774) *
                C153725 -
            ((C4210 + C4211 + C4212) * C153513 * C153774 +
             (C4213 + C4214 + C4215) * C153513 * C153800 +
             (C2733 * C498 + C3346 + C3346 + C153761 * C522 + C2731 * C499 +
              C3347 + C3347 + C2724 * C523 + C2729 * C500 + C3348 + C3348 +
              C2723 * C524) *
                 C153513 * C153812) *
                C153477) *
               C153724 +
           (((C4215 + C4214 + C4213) * C153513 * C153812 +
             (C4212 + C4211 + C4210) * C153513 * C153800 +
             (C2729 * C4143 + C4168 + C4168 + C2723 * C4151 + C2731 * C4144 +
              C4169 + C4169 + C2724 * C4152 + C2733 * C4145 + C4170 + C4170 +
              C153761 * C4153) *
                 C153513 * C153774) *
                C153477 -
            ((C3092 + C3093 + C3094) * C153513 * C153774 +
             (C3091 + C3090 + C3089) * C153513 * C153800 +
             (C3088 + C3087 + C3086) * C153513 * C153812) *
                C153725) *
               C153449) *
              C313 +
          ((((C2729 * C499 + C3358 + C3358 + C2723 * C523 + C2731 * C498 +
              C3359 + C3359 + C2724 * C522 + C2733 * C497 + C3360 + C3360 +
              C153761 * C521) *
                 C153513 * C153812 +
             (C4216 + C4217 + C4218) * C153513 * C153800 +
             (C4219 + C4220 + C4221) * C153513 * C153774) *
                C153477 -
            (C3109 * C153774 + (C3097 + C3096 + C3095) * C153513 * C153800 +
             (C2733 * C147 + C2751 + C2751 + C153761 * C163 + C2731 * C146 +
              C2752 + C2752 + C2724 * C162 + C2729 * C145 + C2753 + C2753 +
              C2723 * C161) *
                 C153513 * C153812) *
                C153725) *
               C153724 +
           (((C3095 + C3096 + C3097) * C153513 * C153812 +
             (C3098 + C3099 + C3100) * C153513 * C153800 +
             (C3101 + C3102 + C3103) * C153513 * C153774) *
                C153725 -
            ((C2733 * C4146 + C4183 + C4183 + C153761 * C4154 + C2731 * C4145 +
              C4184 + C4184 + C2724 * C4153 + C2729 * C4144 + C4185 + C4185 +
              C2723 * C4152) *
                 C153513 * C153774 +
             (C4221 + C4220 + C4219) * C153513 * C153800 +
             (C4218 + C4217 + C4216) * C153513 * C153812) *
                C153477) *
               C153449) *
              C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 + C169 + C169 + C121 * C160 + C136 * C145 + C170 +
             C170 + C122 * C161 + C138 * C146 + C171 + C171 + C123 * C162 +
             C140 * C147 + C172 + C172 + C124 * C163 + C142 * C148 + C173 +
             C173 + C125 * C164) *
                C153513 * C153501 * C153725 -
            (C142 * C496 + C533 + C533 + C125 * C520 + C140 * C497 + C534 +
             C534 + C124 * C521 + C138 * C498 + C535 + C535 + C123 * C522 +
             C136 * C499 + C536 + C536 + C122 * C523 + C134 * C500 + C537 +
             C537 + C121 * C524) *
                C153513 * C153501 * C153477) *
               C153724 +
           ((C134 * C981 + C1000 + C1000 + C121 * C993 + C136 * C982 + C1001 +
             C1001 + C122 * C994 + C138 * C983 + C1002 + C1002 + C123 * C995 +
             C140 * C984 + C1003 + C1003 + C124 * C996 + C142 * C985 + C1004 +
             C1004 + C125 * C997) *
                C153513 * C153501 * C153477 -
            (C142 * C315 + C352 + C352 + C125 * C339 + C140 * C316 + C353 +
             C353 + C124 * C340 + C138 * C317 + C354 + C354 + C123 * C341 +
             C136 * C318 + C355 + C355 + C122 * C342 + C134 * C319 + C356 +
             C356 + C121 * C343) *
                C153513 * C153501 * C153725) *
               C153449) *
              C313 +
          (((C134 * C499 + C543 + C543 + C121 * C523 + C136 * C498 + C544 +
             C544 + C122 * C522 + C138 * C497 + C545 + C545 + C123 * C521 +
             C140 * C496 + C546 + C546 + C124 * C520 + C142 * C506 + C547 +
             C547 + C125 * C530) *
                C153513 * C153501 * C153477 -
            (C142 * C149 + C174 + C174 + C125 * C165 + C140 * C148 + C175 +
             C175 + C124 * C164 + C138 * C147 + C176 + C176 + C123 * C163 +
             C136 * C146 + C177 + C177 + C122 * C162 + C134 * C145 + C178 +
             C178 + C121 * C161) *
                C153513 * C153501 * C153725) *
               C153724 +
           ((C134 * C318 + C362 + C362 + C121 * C342 + C136 * C317 + C363 +
             C363 + C122 * C341 + C138 * C316 + C364 + C364 + C123 * C340 +
             C140 * C315 + C365 + C365 + C124 * C339 + C142 * C325 + C366 +
             C366 + C125 * C349) *
                C153513 * C153501 * C153725 -
            (C142 * C986 + C1005 + C1005 + C125 * C998 + C140 * C985 + C1006 +
             C1006 + C124 * C997 + C138 * C984 + C1007 + C1007 + C123 * C996 +
             C136 * C983 + C1008 + C1008 + C122 * C995 + C134 * C982 + C1009 +
             C1009 + C121 * C994) *
                C153513 * C153501 * C153477) *
               C153449) *
              C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
              C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 +
              C23999 + C153761 * C162) *
                 C153513 * C23987 +
             (C24335 + C24336 + C24337) * C153513 * C23988 + C24357 * C153774) *
                C153725 -
            ((C25435 + C25436 + C25437) * C153513 * C153774 +
             (C25438 + C25439 + C25440) * C153513 * C23988 +
             (C23994 * C498 + C24583 + C24583 + C153761 * C522 + C23992 * C499 +
              C24584 + C24584 + C153790 * C523 + C23990 * C500 + C24585 +
              C24585 + C153809 * C524) *
                 C153513 * C23987) *
                C153477) *
               C153724 +
           (((C25440 + C25439 + C25438) * C153513 * C23987 +
             (C25437 + C25436 + C25435) * C153513 * C23988 +
             (C23990 * C4143 + C25393 + C25393 + C153809 * C4151 +
              C23992 * C4144 + C25394 + C25394 + C153790 * C4152 +
              C23994 * C4145 + C25395 + C25395 + C153761 * C4153) *
                 C153513 * C153774) *
                C153477 -
            ((C24341 + C24342 + C24343) * C153513 * C153774 +
             (C24340 + C24339 + C24338) * C153513 * C23988 +
             (C24337 + C24336 + C24335) * C153513 * C23987) *
                C153725) *
               C153449) *
              C313 +
          ((((C23990 * C499 + C24595 + C24595 + C153809 * C523 + C23992 * C498 +
              C24596 + C24596 + C153790 * C522 + C23994 * C497 + C24597 +
              C24597 + C153761 * C521) *
                 C153513 * C23987 +
             (C25441 + C25442 + C25443) * C153513 * C23988 +
             (C25444 + C25445 + C25446) * C153513 * C153774) *
                C153477 -
            (C24358 * C153774 + (C24346 + C24345 + C24344) * C153513 * C23988 +
             (C23994 * C147 + C24012 + C24012 + C153761 * C163 + C23992 * C146 +
              C24013 + C24013 + C153790 * C162 + C23990 * C145 + C24014 +
              C24014 + C153809 * C161) *
                 C153513 * C23987) *
                C153725) *
               C153724 +
           (((C24344 + C24345 + C24346) * C153513 * C23987 +
             (C24347 + C24348 + C24349) * C153513 * C23988 +
             (C24350 + C24351 + C24352) * C153513 * C153774) *
                C153725 -
            ((C23994 * C4146 + C25408 + C25408 + C153761 * C4154 +
              C23992 * C4145 + C25409 + C25409 + C153790 * C4153 +
              C23990 * C4144 + C25410 + C25410 + C153809 * C4152) *
                 C153513 * C153774 +
             (C25446 + C25445 + C25444) * C153513 * C23988 +
             (C25443 + C25442 + C25441) * C153513 * C23987) *
                C153477) *
               C153449) *
              C153384)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153513 *
                 C28229 +
             C28439 * C28230 + C28440 * C28231 + C28441 * C28232 +
             C28442 * C28233) *
                C153725 -
            (C29081 * C28233 + C29082 * C28232 + C29083 * C28231 +
             C29084 * C28230 +
             (C28234 * C500 + C28581 + C28581 + C153338 * C524) * C153513 *
                 C28229) *
                C153477) *
               C153724 +
           ((C29084 * C28229 + C29083 * C28230 + C29082 * C28231 +
             C29081 * C28232 +
             (C28234 * C29032 + C29047 + C29047 + C153338 * C29036) * C153513 *
                 C28233) *
                C153477 -
            (C28443 * C28233 + C28442 * C28232 + C28441 * C28231 +
             C28440 * C28230 + C28439 * C28229) *
                C153725) *
               C153449) *
              C313 +
          ((((C28234 * C499 + C28587 + C28587 + C153338 * C523) * C153513 *
                 C28229 +
             C29085 * C28230 + C29086 * C28231 + C29087 * C28232 +
             C29088 * C28233) *
                C153477 -
            (C28447 * C28233 + C28446 * C28232 + C28445 * C28231 +
             C28444 * C28230 +
             (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C153513 *
                 C28229) *
                C153725) *
               C153724 +
           ((C28444 * C28229 + C28445 * C28230 + C28446 * C28231 +
             C28447 * C28232 + C28448 * C28233) *
                C153725 -
            ((C28234 * C29033 + C29056 + C29056 + C153338 * C29037) * C153513 *
                 C28233 +
             C29088 * C28232 + C29087 * C28231 + C29086 * C28230 +
             C29085 * C28229) *
                C153477) *
               C153449) *
              C153384)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
              C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 +
              C23999 + C153761 * C162) *
                 C47673 +
             (C48203 + C48204 + C48205) * C47674 + C48223 * C153777) *
                C153501 * C153725 -
            ((C48209 + C48210 + C48211) * C153777 +
             (C48208 + C48207 + C48206) * C47674 +
             (C48205 + C48204 + C48203) * C47673) *
                C153501 * C153477) *
               C153724 +
           (((C25440 + C25439 + C25438) * C47673 +
             (C26077 + C26078 + C26079) * C47674 +
             (C23990 * C6218 + C27417 + C27417 + C153809 * C6230 +
              C23992 * C6217 + C27416 + C27416 + C153790 * C6229 +
              C23994 * C6216 + C27415 + C27415 + C153761 * C6228) *
                 C153777) *
                C153501 * C153477 -
            ((C26079 + C26078 + C26077) * C153777 +
             (C25438 + C25439 + C25440) * C47674 +
             (C24337 + C24336 + C24335) * C47673) *
                C153501 * C153725) *
               C153449) *
              C313 +
          ((((C48212 + C48213 + C48214) * C47673 +
             (C48215 + C48216 + C48217) * C47674 +
             (C48218 + C48219 + C48220) * C153777) *
                C153501 * C153477 -
            (C48224 * C153777 + (C48214 + C48213 + C48212) * C47674 +
             (C23994 * C147 + C24012 + C24012 + C153761 * C163 + C23992 * C146 +
              C24013 + C24013 + C153790 * C162 + C23990 * C145 + C24014 +
              C24014 + C153809 * C161) *
                 C47673) *
                C153501 * C153725) *
               C153724 +
           (((C24344 + C24345 + C24346) * C47673 +
             (C25441 + C25442 + C25443) * C47674 +
             (C49002 + C49003 + C49004) * C153777) *
                C153501 * C153725 -
            ((C23994 * C8437 + C48993 + C48993 + C153761 * C8439 +
              C23992 * C6216 + C48994 + C48994 + C153790 * C6228 +
              C23990 * C6217 + C48995 + C48995 + C153809 * C6229) *
                 C153777 +
             (C49004 + C49003 + C49002) * C47674 +
             (C25443 + C25442 + C25441) * C47673) *
                C153501 * C153477) *
               C153449) *
              C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C47673 +
              C31295 * C47674 + C31296 * C153777) *
                 C153812 +
             (C52025 + C52026 + C52027) * C153800 + C52045 * C153774) *
                C153725 -
            ((C52997 + C52998 + C52999) * C153774 +
             (C53000 + C53001 + C53002) * C153800 +
             (C31299 * C153777 + C31296 * C47674 + C31295 * C47673) * C153812) *
                C153477) *
               C153724 +
           (((C53002 + C53001 + C53000) * C153812 +
             (C52999 + C52998 + C52997) * C153800 +
             (C29074 * C47673 + C29447 * C47674 + C32696 * C153777) * C153774) *
                C153477 -
            ((C52031 + C52032 + C52033) * C153774 +
             (C52030 + C52029 + C52028) * C153800 +
             (C52027 + C52026 + C52025) * C153812) *
                C153725) *
               C153449) *
              C313 +
          ((((C31300 * C47673 + C31301 * C47674 + C31302 * C153777) * C153812 +
             (C53003 + C53004 + C53005) * C153800 +
             (C53006 + C53007 + C53008) * C153774) *
                C153477 -
            (C52046 * C153774 + (C52036 + C52035 + C52034) * C153800 +
             (C31301 * C153777 + C31300 * C47674 +
              (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C47673) *
                 C153812) *
                C153725) *
               C153724 +
           (((C52034 + C52035 + C52036) * C153812 +
             (C52037 + C52038 + C52039) * C153800 +
             (C52040 + C52041 + C52042) * C153774) *
                C153725 -
            (((C28234 * C32070 + C32086 + C32086 + C153338 * C32072) * C153777 +
              C31017 * C47674 + C29079 * C47673) *
                 C153774 +
             (C53008 + C53007 + C53006) * C153800 +
             (C53005 + C53004 + C53003) * C153812) *
                C153477) *
               C153449) *
              C153384)) /
            (p * q * std::sqrt(p + q));
    d2ee[212] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             ((C134 * C144 + C169 + C169 + C121 * C160 + C136 * C145 + C170 +
               C170 + C122 * C161 + C138 * C146 + C171 + C171 + C123 * C162 +
               C140 * C147 + C172 + C172 + C124 * C163 + C142 * C148 + C173 +
               C173 + C125 * C164) *
                  C153513 * C153501 * C153413 * C153397 * C130 -
              (C142 * C149 + C174 + C174 + C125 * C165 + C140 * C148 + C175 +
               C175 + C124 * C164 + C138 * C147 + C176 + C176 + C123 * C163 +
               C136 * C146 + C177 + C177 + C122 * C162 + C134 * C145 + C178 +
               C178 + C121 * C161) *
                  C153513 * C153501 * C153413 * C153397 * C131 +
              (C134 * C146 + C179 + C179 + C121 * C162 + C136 * C147 + C180 +
               C180 + C122 * C163 + C138 * C148 + C181 + C181 + C123 * C164 +
               C140 * C149 + C182 + C182 + C124 * C165 + C142 * C150 + C183 +
               C183 + C125 * C166) *
                  C153513 * C153501 * C153413 * C153397 * C132 -
              (C142 * C151 + C184 + C184 + C125 * C167 + C140 * C150 + C185 +
               C185 + C124 * C166 + C138 * C149 + C186 + C186 + C123 * C165 +
               C136 * C148 + C187 + C187 + C122 * C164 + C134 * C147 + C188 +
               C188 + C121 * C163) *
                  C153513 * C153501 * C153413 * C153397 * C133) +
         std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             (((C134 * C144 + C169 + C169 + C121 * C160 + C136 * C145 + C170 +
                C170 + C122 * C161 + C138 * C146 + C171 + C171 + C123 * C162 +
                C140 * C147 + C172 + C172 + C124 * C163 + C142 * C148 + C173 +
                C173 + C125 * C164) *
                   C153513 * C153501 * C153413 * C310 -
               (C142 * C315 + C352 + C352 + C125 * C339 + C140 * C316 + C353 +
                C353 + C124 * C340 + C138 * C317 + C354 + C354 + C123 * C341 +
                C136 * C318 + C355 + C355 + C122 * C342 + C134 * C319 + C356 +
                C356 + C121 * C343) *
                   C153513 * C153501 * C153413 * C311 +
               (C134 * C320 + C357 + C357 + C121 * C344 + C136 * C321 + C358 +
                C358 + C122 * C345 + C138 * C322 + C359 + C359 + C123 * C346 +
                C140 * C323 + C360 + C360 + C124 * C347 + C142 * C324 + C361 +
                C361 + C125 * C348) *
                   C153513 * C153501 * C153413 * C312) *
                  C313 +
              ((C134 * C318 + C362 + C362 + C121 * C342 + C136 * C317 + C363 +
                C363 + C122 * C341 + C138 * C316 + C364 + C364 + C123 * C340 +
                C140 * C315 + C365 + C365 + C124 * C339 + C142 * C325 + C366 +
                C366 + C125 * C349) *
                   C153513 * C153501 * C153413 * C311 -
               (C142 * C149 + C174 + C174 + C125 * C165 + C140 * C148 + C175 +
                C175 + C124 * C164 + C138 * C147 + C176 + C176 + C123 * C163 +
                C136 * C146 + C177 + C177 + C122 * C162 + C134 * C145 + C178 +
                C178 + C121 * C161) *
                   C153513 * C153501 * C153413 * C310 -
               (C142 * C326 + C367 + C367 + C125 * C350 + C140 * C324 + C368 +
                C368 + C124 * C348 + C138 * C323 + C369 + C369 + C123 * C347 +
                C136 * C322 + C370 + C370 + C122 * C346 + C134 * C321 + C371 +
                C371 + C121 * C345) *
                   C153513 * C153501 * C153413 * C312) *
                  C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C144 + C169 + C169 + C121 * C160 + C136 * C145 + C170 +
            C170 + C122 * C161 + C138 * C146 + C171 + C171 + C123 * C162 +
            C140 * C147 + C172 + C172 + C124 * C163 + C142 * C148 + C173 +
            C173 + C125 * C164) *
               C153513 * C153501 * C493 -
           (C142 * C496 + C533 + C533 + C125 * C520 + C140 * C497 + C534 +
            C534 + C124 * C521 + C138 * C498 + C535 + C535 + C123 * C522 +
            C136 * C499 + C536 + C536 + C122 * C523 + C134 * C500 + C537 +
            C537 + C121 * C524) *
               C153513 * C153501 * C494 +
           (C134 * C501 + C538 + C538 + C121 * C525 + C136 * C502 + C539 +
            C539 + C122 * C526 + C138 * C503 + C540 + C540 + C123 * C527 +
            C140 * C504 + C541 + C541 + C124 * C528 + C142 * C505 + C542 +
            C542 + C125 * C529) *
               C153513 * C153501 * C495) *
              C153397 * C313 +
          ((C134 * C499 + C543 + C543 + C121 * C523 + C136 * C498 + C544 +
            C544 + C122 * C522 + C138 * C497 + C545 + C545 + C123 * C521 +
            C140 * C496 + C546 + C546 + C124 * C520 + C142 * C506 + C547 +
            C547 + C125 * C530) *
               C153513 * C153501 * C494 -
           (C142 * C149 + C174 + C174 + C125 * C165 + C140 * C148 + C175 +
            C175 + C124 * C164 + C138 * C147 + C176 + C176 + C123 * C163 +
            C136 * C146 + C177 + C177 + C122 * C162 + C134 * C145 + C178 +
            C178 + C121 * C161) *
               C153513 * C153501 * C493 -
           (C142 * C507 + C548 + C548 + C125 * C531 + C140 * C505 + C549 +
            C549 + C124 * C529 + C138 * C504 + C550 + C550 + C123 * C528 +
            C136 * C503 + C551 + C551 + C122 * C527 + C134 * C502 + C552 +
            C552 + C121 * C526) *
               C153513 * C153501 * C495) *
              C153397 * C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 + C2737 +
            C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
            C153761 * C162) *
               C153513 * C153812 +
           (C2729 * C319 + C2739 + C2739 + C2723 * C343 + C2731 * C318 + C2740 +
            C2740 + C2724 * C342 + C2733 * C317 + C2741 + C2741 +
            C153761 * C341) *
               C153513 * C153800 +
           (C2729 * C320 + C2742 + C2742 + C2723 * C344 + C2731 * C321 + C2743 +
            C2743 + C2724 * C345 + C2733 * C322 + C2744 + C2744 +
            C153761 * C346) *
               C153513 * C153774) *
              C153413 * C153397 * C130 -
          ((C2733 * C323 + C2745 + C2745 + C153761 * C347 + C2731 * C322 +
            C2746 + C2746 + C2724 * C346 + C2729 * C321 + C2747 + C2747 +
            C2723 * C345) *
               C153513 * C153774 +
           (C2733 * C316 + C2748 + C2748 + C153761 * C340 + C2731 * C317 +
            C2749 + C2749 + C2724 * C341 + C2729 * C318 + C2750 + C2750 +
            C2723 * C342) *
               C153513 * C153800 +
           (C2733 * C147 + C2751 + C2751 + C153761 * C163 + C2731 * C146 +
            C2752 + C2752 + C2724 * C162 + C2729 * C145 + C2753 + C2753 +
            C2723 * C161) *
               C153513 * C153812) *
              C153413 * C153397 * C131 +
          ((C2729 * C146 + C2754 + C2754 + C2723 * C162 + C2731 * C147 + C2755 +
            C2755 + C2724 * C163 + C2733 * C148 + C2756 + C2756 +
            C153761 * C164) *
               C153513 * C153812 +
           (C2729 * C317 + C2757 + C2757 + C2723 * C341 + C2731 * C316 + C2758 +
            C2758 + C2724 * C340 + C2733 * C315 + C2759 + C2759 +
            C153761 * C339) *
               C153513 * C153800 +
           (C2729 * C322 + C2760 + C2760 + C2723 * C346 + C2731 * C323 + C2761 +
            C2761 + C2724 * C347 + C2733 * C324 + C2762 + C2762 +
            C153761 * C348) *
               C153513 * C153774) *
              C153413 * C153397 * C132 -
          ((C2733 * C326 + C2763 + C2763 + C153761 * C350 + C2731 * C324 +
            C2764 + C2764 + C2724 * C348 + C2729 * C323 + C2765 + C2765 +
            C2723 * C347) *
               C153513 * C153774 +
           (C2733 * C325 + C2766 + C2766 + C153761 * C349 + C2731 * C315 +
            C2767 + C2767 + C2724 * C339 + C2729 * C316 + C2768 + C2768 +
            C2723 * C340) *
               C153513 * C153800 +
           (C2733 * C149 + C2769 + C2769 + C153761 * C165 + C2731 * C148 +
            C2770 + C2770 + C2724 * C164 + C2729 * C147 + C2771 + C2771 +
            C2723 * C163) *
               C153513 * C153812) *
              C153413 * C153397 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 +
             C2737 + C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
             C153761 * C162) *
                C153513 * C153812 +
            (C3086 + C3087 + C3088) * C153513 * C153800 + C3108 * C153774) *
               C153413 * C310 -
           ((C3092 + C3093 + C3094) * C153513 * C153774 +
            (C3091 + C3090 + C3089) * C153513 * C153800 +
            (C3088 + C3087 + C3086) * C153513 * C153812) *
               C153413 * C311 +
           (C3108 * C153812 + (C3094 + C3093 + C3092) * C153513 * C153800 +
            (C2729 * C2989 + C3023 + C3023 + C2723 * C2997 + C2731 * C2990 +
             C3024 + C3024 + C2724 * C2998 + C2733 * C2991 + C3025 + C3025 +
             C153761 * C2999) *
                C153513 * C153774) *
               C153413 * C312) *
              C313 +
          (((C3095 + C3096 + C3097) * C153513 * C153812 +
            (C3098 + C3099 + C3100) * C153513 * C153800 +
            (C3101 + C3102 + C3103) * C153513 * C153774) *
               C153413 * C311 -
           (C3109 * C153774 + (C3097 + C3096 + C3095) * C153513 * C153800 +
            (C2733 * C147 + C2751 + C2751 + C153761 * C163 + C2731 * C146 +
             C2752 + C2752 + C2724 * C162 + C2729 * C145 + C2753 + C2753 +
             C2723 * C161) *
                C153513 * C153812) *
               C153413 * C310 -
           ((C2733 * C2992 + C3047 + C3047 + C153761 * C3000 + C2731 * C2991 +
             C3048 + C3048 + C2724 * C2999 + C2729 * C2990 + C3049 + C3049 +
             C2723 * C2998) *
                C153513 * C153774 +
            (C3103 + C3102 + C3101) * C153513 * C153800 + C3109 * C153812) *
               C153413 * C312) *
              C153384)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 +
             C2737 + C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
             C153761 * C162) *
                C153513 * C153812 +
            (C3086 + C3087 + C3088) * C153513 * C153800 + C3108 * C153774) *
               C493 -
           ((C2733 * C1798 + C3340 + C3340 + C153761 * C1808 + C2731 * C1799 +
             C3341 + C3341 + C2724 * C1809 + C2729 * C1800 + C3342 + C3342 +
             C2723 * C1810) *
                C153513 * C153774 +
            (C2733 * C983 + C3343 + C3343 + C153761 * C995 + C2731 * C982 +
             C3344 + C3344 + C2724 * C994 + C2729 * C981 + C3345 + C3345 +
             C2723 * C993) *
                C153513 * C153800 +
            (C2733 * C498 + C3346 + C3346 + C153761 * C522 + C2731 * C499 +
             C3347 + C3347 + C2724 * C523 + C2729 * C500 + C3348 + C3348 +
             C2723 * C524) *
                C153513 * C153812) *
               C494 +
           ((C2729 * C501 + C3349 + C3349 + C2723 * C525 + C2731 * C502 +
             C3350 + C3350 + C2724 * C526 + C2733 * C503 + C3351 + C3351 +
             C153761 * C527) *
                C153513 * C153812 +
            (C2729 * C1369 + C3352 + C3352 + C2723 * C1379 + C2731 * C1368 +
             C3353 + C3353 + C2724 * C1378 + C2733 * C1367 + C3354 + C3354 +
             C153761 * C1377) *
                C153513 * C153800 +
            (C2729 * C3327 + C3355 + C3355 + C2723 * C3335 + C2731 * C3328 +
             C3356 + C3356 + C2724 * C3336 + C2733 * C3329 + C3357 + C3357 +
             C153761 * C3337) *
                C153513 * C153774) *
               C495) *
              C153397 * C313 +
          (((C2729 * C499 + C3358 + C3358 + C2723 * C523 + C2731 * C498 +
             C3359 + C3359 + C2724 * C522 + C2733 * C497 + C3360 + C3360 +
             C153761 * C521) *
                C153513 * C153812 +
            (C2729 * C982 + C3361 + C3361 + C2723 * C994 + C2731 * C983 +
             C3362 + C3362 + C2724 * C995 + C2733 * C984 + C3363 + C3363 +
             C153761 * C996) *
                C153513 * C153800 +
            (C2729 * C1799 + C3364 + C3364 + C2723 * C1809 + C2731 * C1798 +
             C3365 + C3365 + C2724 * C1808 + C2733 * C1797 + C3366 + C3366 +
             C153761 * C1807) *
                C153513 * C153774) *
               C494 -
           (C3109 * C153774 + (C3097 + C3096 + C3095) * C153513 * C153800 +
            (C2733 * C147 + C2751 + C2751 + C153761 * C163 + C2731 * C146 +
             C2752 + C2752 + C2724 * C162 + C2729 * C145 + C2753 + C2753 +
             C2723 * C161) *
                C153513 * C153812) *
               C493 -
           ((C2733 * C3330 + C3367 + C3367 + C153761 * C3338 + C2731 * C3329 +
             C3368 + C3368 + C2724 * C3337 + C2729 * C3328 + C3369 + C3369 +
             C2723 * C3336) *
                C153513 * C153774 +
            (C2733 * C1366 + C3370 + C3370 + C153761 * C1376 + C2731 * C1367 +
             C3371 + C3371 + C2724 * C1377 + C2729 * C1368 + C3372 + C3372 +
             C2723 * C1378) *
                C153513 * C153800 +
            (C2733 * C504 + C3373 + C3373 + C153761 * C528 + C2731 * C503 +
             C3374 + C3374 + C2724 * C527 + C2729 * C502 + C3375 + C3375 +
             C2723 * C526) *
                C153513 * C153812) *
               C495) *
              C153397 * C153384)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
            C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 + C23999 +
            C153761 * C162) *
               C153513 * C23987 +
           (C23990 * C319 + C24000 + C24000 + C153809 * C343 + C23992 * C318 +
            C24001 + C24001 + C153790 * C342 + C23994 * C317 + C24002 + C24002 +
            C153761 * C341) *
               C153513 * C23988 +
           (C23990 * C320 + C24003 + C24003 + C153809 * C344 + C23992 * C321 +
            C24004 + C24004 + C153790 * C345 + C23994 * C322 + C24005 + C24005 +
            C153761 * C346) *
               C153513 * C153774) *
              C153413 * C153397 * C130 -
          ((C23994 * C323 + C24006 + C24006 + C153761 * C347 + C23992 * C322 +
            C24007 + C24007 + C153790 * C346 + C23990 * C321 + C24008 + C24008 +
            C153809 * C345) *
               C153513 * C153774 +
           (C23994 * C316 + C24009 + C24009 + C153761 * C340 + C23992 * C317 +
            C24010 + C24010 + C153790 * C341 + C23990 * C318 + C24011 + C24011 +
            C153809 * C342) *
               C153513 * C23988 +
           (C23994 * C147 + C24012 + C24012 + C153761 * C163 + C23992 * C146 +
            C24013 + C24013 + C153790 * C162 + C23990 * C145 + C24014 + C24014 +
            C153809 * C161) *
               C153513 * C23987) *
              C153413 * C153397 * C131 +
          ((C23990 * C146 + C24015 + C24015 + C153809 * C162 + C23992 * C147 +
            C24016 + C24016 + C153790 * C163 + C23994 * C148 + C24017 + C24017 +
            C153761 * C164) *
               C153513 * C23987 +
           (C23990 * C317 + C24018 + C24018 + C153809 * C341 + C23992 * C316 +
            C24019 + C24019 + C153790 * C340 + C23994 * C315 + C24020 + C24020 +
            C153761 * C339) *
               C153513 * C23988 +
           (C23990 * C322 + C24021 + C24021 + C153809 * C346 + C23992 * C323 +
            C24022 + C24022 + C153790 * C347 + C23994 * C324 + C24023 + C24023 +
            C153761 * C348) *
               C153513 * C153774) *
              C153413 * C153397 * C132 -
          ((C23994 * C326 + C24024 + C24024 + C153761 * C350 + C23992 * C324 +
            C24025 + C24025 + C153790 * C348 + C23990 * C323 + C24026 + C24026 +
            C153809 * C347) *
               C153513 * C153774 +
           (C23994 * C325 + C24027 + C24027 + C153761 * C349 + C23992 * C315 +
            C24028 + C24028 + C153790 * C339 + C23990 * C316 + C24029 + C24029 +
            C153809 * C340) *
               C153513 * C23988 +
           (C23994 * C149 + C24030 + C24030 + C153761 * C165 + C23992 * C148 +
            C24031 + C24031 + C153790 * C164 + C23990 * C147 + C24032 + C24032 +
            C153809 * C163) *
               C153513 * C23987) *
              C153413 * C153397 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
             C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 +
             C23999 + C153761 * C162) *
                C153513 * C23987 +
            (C24335 + C24336 + C24337) * C153513 * C23988 + C24357 * C153774) *
               C153413 * C310 -
           ((C24341 + C24342 + C24343) * C153513 * C153774 +
            (C24340 + C24339 + C24338) * C153513 * C23988 +
            (C24337 + C24336 + C24335) * C153513 * C23987) *
               C153413 * C311 +
           (C24357 * C23987 + (C24343 + C24342 + C24341) * C153513 * C23988 +
            (C23990 * C2989 + C24272 + C24272 + C153809 * C2997 +
             C23992 * C2990 + C24273 + C24273 + C153790 * C2998 +
             C23994 * C2991 + C24274 + C24274 + C153761 * C2999) *
                C153513 * C153774) *
               C153413 * C312) *
              C313 +
          (((C24344 + C24345 + C24346) * C153513 * C23987 +
            (C24347 + C24348 + C24349) * C153513 * C23988 +
            (C24350 + C24351 + C24352) * C153513 * C153774) *
               C153413 * C311 -
           (C24358 * C153774 + (C24346 + C24345 + C24344) * C153513 * C23988 +
            (C23994 * C147 + C24012 + C24012 + C153761 * C163 + C23992 * C146 +
             C24013 + C24013 + C153790 * C162 + C23990 * C145 + C24014 +
             C24014 + C153809 * C161) *
                C153513 * C23987) *
               C153413 * C310 -
           ((C23994 * C2992 + C24296 + C24296 + C153761 * C3000 +
             C23992 * C2991 + C24297 + C24297 + C153790 * C2999 +
             C23990 * C2990 + C24298 + C24298 + C153809 * C2998) *
                C153513 * C153774 +
            (C24352 + C24351 + C24350) * C153513 * C23988 + C24358 * C23987) *
               C153413 * C312) *
              C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
             C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 +
             C23999 + C153761 * C162) *
                C153513 * C23987 +
            (C24335 + C24336 + C24337) * C153513 * C23988 + C24357 * C153774) *
               C493 -
           ((C23994 * C1798 + C24577 + C24577 + C153761 * C1808 +
             C23992 * C1799 + C24578 + C24578 + C153790 * C1809 +
             C23990 * C1800 + C24579 + C24579 + C153809 * C1810) *
                C153513 * C153774 +
            (C23994 * C983 + C24580 + C24580 + C153761 * C995 + C23992 * C982 +
             C24581 + C24581 + C153790 * C994 + C23990 * C981 + C24582 +
             C24582 + C153809 * C993) *
                C153513 * C23988 +
            (C23994 * C498 + C24583 + C24583 + C153761 * C522 + C23992 * C499 +
             C24584 + C24584 + C153790 * C523 + C23990 * C500 + C24585 +
             C24585 + C153809 * C524) *
                C153513 * C23987) *
               C494 +
           ((C23990 * C501 + C24586 + C24586 + C153809 * C525 + C23992 * C502 +
             C24587 + C24587 + C153790 * C526 + C23994 * C503 + C24588 +
             C24588 + C153761 * C527) *
                C153513 * C23987 +
            (C23990 * C1369 + C24589 + C24589 + C153809 * C1379 +
             C23992 * C1368 + C24590 + C24590 + C153790 * C1378 +
             C23994 * C1367 + C24591 + C24591 + C153761 * C1377) *
                C153513 * C23988 +
            (C23990 * C3327 + C24592 + C24592 + C153809 * C3335 +
             C23992 * C3328 + C24593 + C24593 + C153790 * C3336 +
             C23994 * C3329 + C24594 + C24594 + C153761 * C3337) *
                C153513 * C153774) *
               C495) *
              C153397 * C313 +
          (((C23990 * C499 + C24595 + C24595 + C153809 * C523 + C23992 * C498 +
             C24596 + C24596 + C153790 * C522 + C23994 * C497 + C24597 +
             C24597 + C153761 * C521) *
                C153513 * C23987 +
            (C23990 * C982 + C24598 + C24598 + C153809 * C994 + C23992 * C983 +
             C24599 + C24599 + C153790 * C995 + C23994 * C984 + C24600 +
             C24600 + C153761 * C996) *
                C153513 * C23988 +
            (C23990 * C1799 + C24601 + C24601 + C153809 * C1809 +
             C23992 * C1798 + C24602 + C24602 + C153790 * C1808 +
             C23994 * C1797 + C24603 + C24603 + C153761 * C1807) *
                C153513 * C153774) *
               C494 -
           (C24358 * C153774 + (C24346 + C24345 + C24344) * C153513 * C23988 +
            (C23994 * C147 + C24012 + C24012 + C153761 * C163 + C23992 * C146 +
             C24013 + C24013 + C153790 * C162 + C23990 * C145 + C24014 +
             C24014 + C153809 * C161) *
                C153513 * C23987) *
               C493 -
           ((C23994 * C3330 + C24604 + C24604 + C153761 * C3338 +
             C23992 * C3329 + C24605 + C24605 + C153790 * C3337 +
             C23990 * C3328 + C24606 + C24606 + C153809 * C3336) *
                C153513 * C153774 +
            (C23994 * C1366 + C24607 + C24607 + C153761 * C1376 +
             C23992 * C1367 + C24608 + C24608 + C153790 * C1377 +
             C23990 * C1368 + C24609 + C24609 + C153809 * C1378) *
                C153513 * C23988 +
            (C23994 * C504 + C24610 + C24610 + C153761 * C528 + C23992 * C503 +
             C24611 + C24611 + C153790 * C527 + C23990 * C502 + C24612 +
             C24612 + C153809 * C526) *
                C153513 * C23987) *
               C495) *
              C153397 * C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153513 *
               C28229 +
           (C28234 * C319 + C28238 + C28238 + C153338 * C343) * C153513 *
               C28230 +
           (C28234 * C320 + C28239 + C28239 + C153338 * C344) * C153513 *
               C28231 +
           (C28234 * C1227 + C28240 + C28240 + C153338 * C1237) * C153513 *
               C28232 +
           (C28234 * C2989 + C28241 + C28241 + C153338 * C2997) * C153513 *
               C28233) *
              C153413 * C153397 * C130 -
          ((C28234 * C2990 + C28242 + C28242 + C153338 * C2998) * C153513 *
               C28233 +
           (C28234 * C1226 + C28243 + C28243 + C153338 * C1236) * C153513 *
               C28232 +
           (C28234 * C321 + C28244 + C28244 + C153338 * C345) * C153513 *
               C28231 +
           (C28234 * C318 + C28245 + C28245 + C153338 * C342) * C153513 *
               C28230 +
           (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C153513 *
               C28229) *
              C153413 * C153397 * C131 +
          ((C28234 * C146 + C28247 + C28247 + C153338 * C162) * C153513 *
               C28229 +
           (C28234 * C317 + C28248 + C28248 + C153338 * C341) * C153513 *
               C28230 +
           (C28234 * C322 + C28249 + C28249 + C153338 * C346) * C153513 *
               C28231 +
           (C28234 * C1225 + C28250 + C28250 + C153338 * C1235) * C153513 *
               C28232 +
           (C28234 * C2991 + C28251 + C28251 + C153338 * C2999) * C153513 *
               C28233) *
              C153413 * C153397 * C132 -
          ((C28234 * C2992 + C28252 + C28252 + C153338 * C3000) * C153513 *
               C28233 +
           (C28234 * C1224 + C28253 + C28253 + C153338 * C1234) * C153513 *
               C28232 +
           (C28234 * C323 + C28254 + C28254 + C153338 * C347) * C153513 *
               C28231 +
           (C28234 * C316 + C28255 + C28255 + C153338 * C340) * C153513 *
               C28230 +
           (C28234 * C147 + C28256 + C28256 + C153338 * C163) * C153513 *
               C28229) *
              C153413 * C153397 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153513 *
                C28229 +
            C28439 * C28230 + C28440 * C28231 + C28441 * C28232 +
            C28442 * C28233) *
               C153413 * C310 -
           (C28443 * C28233 + C28442 * C28232 + C28441 * C28231 +
            C28440 * C28230 + C28439 * C28229) *
               C153413 * C311 +
           (C28440 * C28229 + C28441 * C28230 + C28442 * C28231 +
            C28443 * C28232 +
            (C28234 * C28378 + C28396 + C28396 + C153338 * C28382) * C153513 *
                C28233) *
               C153413 * C312) *
              C313 +
          ((C28444 * C28229 + C28445 * C28230 + C28446 * C28231 +
            C28447 * C28232 + C28448 * C28233) *
               C153413 * C311 -
           (C28447 * C28233 + C28446 * C28232 + C28445 * C28231 +
            C28444 * C28230 +
            (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C153513 *
                C28229) *
               C153413 * C310 -
           ((C28234 * C28379 + C28408 + C28408 + C153338 * C28383) * C153513 *
                C28233 +
            C28448 * C28232 + C28447 * C28231 + C28446 * C28230 +
            C28445 * C28229) *
               C153413 * C312) *
              C153384)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153513 *
                C28229 +
            C28439 * C28230 + C28440 * C28231 + C28441 * C28232 +
            C28442 * C28233) *
               C493 -
           ((C28234 * C5603 + C28577 + C28577 + C153338 * C5609) * C153513 *
                C28233 +
            (C28234 * C4143 + C28578 + C28578 + C153338 * C4151) * C153513 *
                C28232 +
            (C28234 * C1800 + C28579 + C28579 + C153338 * C1810) * C153513 *
                C28231 +
            (C28234 * C981 + C28580 + C28580 + C153338 * C993) * C153513 *
                C28230 +
            (C28234 * C500 + C28581 + C28581 + C153338 * C524) * C153513 *
                C28229) *
               C494 +
           ((C28234 * C501 + C28582 + C28582 + C153338 * C525) * C153513 *
                C28229 +
            (C28234 * C1369 + C28583 + C28583 + C153338 * C1379) * C153513 *
                C28230 +
            (C28234 * C3327 + C28584 + C28584 + C153338 * C3335) * C153513 *
                C28231 +
            (C28234 * C4835 + C28585 + C28585 + C153338 * C4841) * C153513 *
                C28232 +
            (C28234 * C28570 + C28586 + C28586 + C153338 * C28574) * C153513 *
                C28233) *
               C495) *
              C153397 * C313 +
          (((C28234 * C499 + C28587 + C28587 + C153338 * C523) * C153513 *
                C28229 +
            (C28234 * C982 + C28588 + C28588 + C153338 * C994) * C153513 *
                C28230 +
            (C28234 * C1799 + C28589 + C28589 + C153338 * C1809) * C153513 *
                C28231 +
            (C28234 * C4144 + C28590 + C28590 + C153338 * C4152) * C153513 *
                C28232 +
            (C28234 * C5602 + C28591 + C28591 + C153338 * C5608) * C153513 *
                C28233) *
               C494 -
           (C28447 * C28233 + C28446 * C28232 + C28445 * C28231 +
            C28444 * C28230 +
            (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C153513 *
                C28229) *
               C493 -
           ((C28234 * C28571 + C28592 + C28592 + C153338 * C28575) * C153513 *
                C28233 +
            (C28234 * C4834 + C28593 + C28593 + C153338 * C4840) * C153513 *
                C28232 +
            (C28234 * C3328 + C28594 + C28594 + C153338 * C3336) * C153513 *
                C28231 +
            (C28234 * C1368 + C28595 + C28595 + C153338 * C1378) * C153513 *
                C28230 +
            (C28234 * C502 + C28596 + C28596 + C153338 * C526) * C153513 *
                C28229) *
               C495) *
              C153397 * C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
            C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 + C23999 +
            C153761 * C162) *
               C47673 +
           (C23990 * C500 + C24585 + C24585 + C153809 * C524 + C23992 * C499 +
            C24584 + C24584 + C153790 * C523 + C23994 * C498 + C24583 + C24583 +
            C153761 * C522) *
               C47674 +
           (C23990 * C501 + C24586 + C24586 + C153809 * C525 + C23992 * C502 +
            C24587 + C24587 + C153790 * C526 + C23994 * C503 + C24588 + C24588 +
            C153761 * C527) *
               C153777) *
              C153501 * C153413 * C153397 * C130 -
          ((C23994 * C504 + C24610 + C24610 + C153761 * C528 + C23992 * C503 +
            C24611 + C24611 + C153790 * C527 + C23990 * C502 + C24612 + C24612 +
            C153809 * C526) *
               C153777 +
           (C23994 * C497 + C24597 + C24597 + C153761 * C521 + C23992 * C498 +
            C24596 + C24596 + C153790 * C522 + C23990 * C499 + C24595 + C24595 +
            C153809 * C523) *
               C47674 +
           (C23994 * C147 + C24012 + C24012 + C153761 * C163 + C23992 * C146 +
            C24013 + C24013 + C153790 * C162 + C23990 * C145 + C24014 + C24014 +
            C153809 * C161) *
               C47673) *
              C153501 * C153413 * C153397 * C131 +
          ((C23990 * C146 + C24015 + C24015 + C153809 * C162 + C23992 * C147 +
            C24016 + C24016 + C153790 * C163 + C23994 * C148 + C24017 + C24017 +
            C153761 * C164) *
               C47673 +
           (C23990 * C498 + C25090 + C25090 + C153809 * C522 + C23992 * C497 +
            C25089 + C25089 + C153790 * C521 + C23994 * C496 + C25088 + C25088 +
            C153761 * C520) *
               C47674 +
           (C23990 * C503 + C47677 + C47677 + C153809 * C527 + C23992 * C504 +
            C47678 + C47678 + C153790 * C528 + C23994 * C505 + C47679 + C47679 +
            C153761 * C529) *
               C153777) *
              C153501 * C153413 * C153397 * C132 -
          ((C23994 * C507 + C47680 + C47680 + C153761 * C531 + C23992 * C505 +
            C47681 + C47681 + C153790 * C529 + C23990 * C504 + C47682 + C47682 +
            C153809 * C528) *
               C153777 +
           (C23994 * C506 + C47683 + C47683 + C153761 * C530 + C23992 * C496 +
            C47684 + C47684 + C153790 * C520 + C23990 * C497 + C47685 + C47685 +
            C153809 * C521) *
               C47674 +
           (C23994 * C149 + C24030 + C24030 + C153761 * C165 + C23992 * C148 +
            C24031 + C24031 + C153790 * C164 + C23990 * C147 + C24032 + C24032 +
            C153809 * C163) *
               C47673) *
              C153501 * C153413 * C153397 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
             C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 +
             C23999 + C153761 * C162) *
                C47673 +
            (C23990 * C500 + C24585 + C24585 + C153809 * C524 + C23992 * C499 +
             C24584 + C24584 + C153790 * C523 + C23994 * C498 + C24583 +
             C24583 + C153761 * C522) *
                C47674 +
            (C23990 * C501 + C24586 + C24586 + C153809 * C525 + C23992 * C502 +
             C24587 + C24587 + C153790 * C526 + C23994 * C503 + C24588 +
             C24588 + C153761 * C527) *
                C153777) *
               C153501 * C153413 * C310 -
           ((C26079 + C26078 + C26077) * C153777 +
            (C25438 + C25439 + C25440) * C47674 +
            (C24337 + C24336 + C24335) * C47673) *
               C153501 * C153413 * C311 +
           (C24355 * C47673 + (C25437 + C25436 + C25435) * C47674 +
            (C26080 + C26081 + C26082) * C153777) *
               C153501 * C153413 * C312) *
              C313 +
          (((C24344 + C24345 + C24346) * C47673 +
            (C25441 + C25442 + C25443) * C47674 +
            (C23990 * C1368 + C24609 + C24609 + C153809 * C1378 +
             C23992 * C1367 + C24608 + C24608 + C153790 * C1377 +
             C23994 * C1366 + C24607 + C24607 + C153761 * C1376) *
                C153777) *
               C153501 * C153413 * C311 -
           ((C23994 * C504 + C24610 + C24610 + C153761 * C528 + C23992 * C503 +
             C24611 + C24611 + C153790 * C527 + C23990 * C502 + C24612 +
             C24612 + C153809 * C526) *
                C153777 +
            (C23994 * C497 + C24597 + C24597 + C153761 * C521 + C23992 * C498 +
             C24596 + C24596 + C153790 * C522 + C23990 * C499 + C24595 +
             C24595 + C153809 * C523) *
                C47674 +
            (C23994 * C147 + C24012 + C24012 + C153761 * C163 + C23992 * C146 +
             C24013 + C24013 + C153790 * C162 + C23990 * C145 + C24014 +
             C24014 + C153809 * C161) *
                C47673) *
               C153501 * C153413 * C310 -
           ((C23994 * C3330 + C24604 + C24604 + C153761 * C3338 +
             C23992 * C3329 + C24605 + C24605 + C153790 * C3337 +
             C23990 * C3328 + C24606 + C24606 + C153809 * C3336) *
                C153777 +
            (C25446 + C25445 + C25444) * C47674 + C24356 * C47673) *
               C153501 * C153413 * C312) *
              C153384)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
             C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 +
             C23999 + C153761 * C162) *
                C47673 +
            (C48203 + C48204 + C48205) * C47674 + C48223 * C153777) *
               C153501 * C493 -
           ((C48209 + C48210 + C48211) * C153777 +
            (C48208 + C48207 + C48206) * C47674 +
            (C48205 + C48204 + C48203) * C47673) *
               C153501 * C494 +
           (C48223 * C47673 + (C48211 + C48210 + C48209) * C47674 +
            (C23990 * C7560 + C48140 + C48140 + C153809 * C7568 +
             C23992 * C7561 + C48141 + C48141 + C153790 * C7569 +
             C23994 * C7562 + C48142 + C48142 + C153761 * C7570) *
                C153777) *
               C153501 * C495) *
              C153397 * C313 +
          (((C48212 + C48213 + C48214) * C47673 +
            (C48215 + C48216 + C48217) * C47674 +
            (C48218 + C48219 + C48220) * C153777) *
               C153501 * C494 -
           (C48224 * C153777 + (C48214 + C48213 + C48212) * C47674 +
            (C23994 * C147 + C24012 + C24012 + C153761 * C163 + C23992 * C146 +
             C24013 + C24013 + C153790 * C162 + C23990 * C145 + C24014 +
             C24014 + C153809 * C161) *
                C47673) *
               C153501 * C493 -
           ((C23994 * C7563 + C48164 + C48164 + C153761 * C7571 +
             C23992 * C7562 + C48165 + C48165 + C153790 * C7570 +
             C23990 * C7561 + C48166 + C48166 + C153809 * C7569) *
                C153777 +
            (C48220 + C48219 + C48218) * C47674 + C48224 * C47673) *
               C153501 * C495) *
              C153397 * C153384)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C47673 +
            C31295 * C47674 + C31296 * C153777) *
               C153812 +
           (C28429 * C47673 + C29076 * C47674 + C29445 * C153777) * C153800 +
           (C28430 * C47673 + C29075 * C47674 + C29446 * C153777) * C153774) *
              C153413 * C153397 * C130 -
          ((C31016 * C153777 + C29078 * C47674 + C28435 * C47673) * C153774 +
           (C31015 * C153777 + C29077 * C47674 + C28434 * C47673) * C153800 +
           (C31301 * C153777 + C31300 * C47674 +
            (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C47673) *
               C153812) *
              C153413 * C153397 * C131 +
          (((C28234 * C146 + C28247 + C28247 + C153338 * C162) * C47673 +
            C31779 * C47674 + C31780 * C153777) *
               C153812 +
           (C28736 * C47673 + C31542 * C47674 + C31543 * C153777) * C153800 +
           (C28737 * C47673 + C31544 * C47674 + C31545 * C153777) * C153774) *
              C153413 * C153397 * C132 -
          (((C28234 * C3330 + C30761 + C30761 + C153338 * C3338) * C153777 +
            (C28234 * C1797 + C30762 + C30762 + C153338 * C1807) * C47674 +
            (C28234 * C323 + C28254 + C28254 + C153338 * C347) * C47673) *
               C153774 +
           ((C28234 * C1366 + C30763 + C30763 + C153338 * C1376) * C153777 +
            (C28234 * C984 + C30764 + C30764 + C153338 * C996) * C47674 +
            (C28234 * C316 + C28255 + C28255 + C153338 * C340) * C47673) *
               C153800 +
           ((C28234 * C504 + C30765 + C30765 + C153338 * C528) * C153777 +
            (C28234 * C497 + C30766 + C30766 + C153338 * C521) * C47674 +
            (C28234 * C147 + C28256 + C28256 + C153338 * C163) * C47673) *
               C153812) *
              C153413 * C153397 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C47673 +
             C31295 * C47674 + C31296 * C153777) *
                C153812 +
            (C52025 + C52026 + C52027) * C153800 + C52045 * C153774) *
               C153413 * C310 -
           ((C52031 + C52032 + C52033) * C153774 +
            (C52030 + C52029 + C52028) * C153800 +
            (C52027 + C52026 + C52025) * C153812) *
               C153413 * C311 +
           (C52045 * C153812 + (C52033 + C52032 + C52031) * C153800 +
            (C28432 * C47673 + C29073 * C47674 + C29448 * C153777) * C153774) *
               C153413 * C312) *
              C313 +
          (((C52034 + C52035 + C52036) * C153812 +
            (C52037 + C52038 + C52039) * C153800 +
            (C52040 + C52041 + C52042) * C153774) *
               C153413 * C311 -
           (C52046 * C153774 + (C52036 + C52035 + C52034) * C153800 +
            (C31301 * C153777 + C31300 * C47674 +
             (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C47673) *
                C153812) *
               C153413 * C310 -
           (((C28234 * C28571 + C28592 + C28592 + C153338 * C28575) * C153777 +
             C29080 * C47674 + C28437 * C47673) *
                C153774 +
            (C52042 + C52041 + C52040) * C153800 + C52046 * C153812) *
               C153413 * C312) *
              C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C47673 +
             C31295 * C47674 + C31296 * C153777) *
                C153812 +
            (C52025 + C52026 + C52027) * C153800 + C52045 * C153774) *
               C493 -
           ((C31297 * C153777 + C29446 * C47674 + C29075 * C47673) * C153774 +
            (C31298 * C153777 + C29445 * C47674 + C29076 * C47673) * C153800 +
            (C31299 * C153777 + C31296 * C47674 + C31295 * C47673) * C153812) *
               C494 +
           ((C31296 * C47673 + C31299 * C47674 + C34025 * C153777) * C153812 +
            (C29445 * C47673 + C31298 * C47674 + C32694 * C153777) * C153800 +
            (C29446 * C47673 + C31297 * C47674 + C32695 * C153777) * C153774) *
               C495) *
              C153397 * C313 +
          (((C31300 * C47673 + C31301 * C47674 + C31302 * C153777) * C153812 +
            (C29077 * C47673 + C31015 * C47674 + C31303 * C153777) * C153800 +
            (C29078 * C47673 + C31016 * C47674 + C31304 * C153777) * C153774) *
               C494 -
           (C52046 * C153774 + (C52036 + C52035 + C52034) * C153800 +
            (C31301 * C153777 + C31300 * C47674 +
             (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C47673) *
                C153812) *
               C493 -
           (((C28234 * C31240 + C31272 + C31272 + C153338 * C31244) * C153777 +
             C31304 * C47674 + C31016 * C47673) *
                C153774 +
            ((C28234 * C9041 + C31273 + C31273 + C153338 * C9047) * C153777 +
             C31303 * C47674 + C31015 * C47673) *
                C153800 +
            ((C28234 * C7561 + C31274 + C31274 + C153338 * C7569) * C153777 +
             C31302 * C47674 + C31301 * C47673) *
                C153812) *
               C495) *
              C153397 * C153384)) /
            (p * q * std::sqrt(p + q));
    d2ee[213] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 +
             C2737 + C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
             C153761 * C162) *
                C153513 * C153812 +
            (C3086 + C3087 + C3088) * C153513 * C153800 + C3108 * C153774) *
               C153725 -
           ((C2733 * C1798 + C3340 + C3340 + C153761 * C1808 + C2731 * C1799 +
             C3341 + C3341 + C2724 * C1809 + C2729 * C1800 + C3342 + C3342 +
             C2723 * C1810) *
                C153513 * C153774 +
            (C2733 * C983 + C3343 + C3343 + C153761 * C995 + C2731 * C982 +
             C3344 + C3344 + C2724 * C994 + C2729 * C981 + C3345 + C3345 +
             C2723 * C993) *
                C153513 * C153800 +
            (C2733 * C498 + C3346 + C3346 + C153761 * C522 + C2731 * C499 +
             C3347 + C3347 + C2724 * C523 + C2729 * C500 + C3348 + C3348 +
             C2723 * C524) *
                C153513 * C153812) *
               C153477) *
              C153397 * C153793 +
          (((C2729 * C499 + C3358 + C3358 + C2723 * C523 + C2731 * C498 +
             C3359 + C3359 + C2724 * C522 + C2733 * C497 + C3360 + C3360 +
             C153761 * C521) *
                C153513 * C153812 +
            (C2729 * C982 + C3361 + C3361 + C2723 * C994 + C2731 * C983 +
             C3362 + C3362 + C2724 * C995 + C2733 * C984 + C3363 + C3363 +
             C153761 * C996) *
                C153513 * C153800 +
            (C2729 * C1799 + C3364 + C3364 + C2723 * C1809 + C2731 * C1798 +
             C3365 + C3365 + C2724 * C1808 + C2733 * C1797 + C3366 + C3366 +
             C153761 * C1807) *
                C153513 * C153774) *
               C153477 -
           (C3109 * C153774 + (C3097 + C3096 + C3095) * C153513 * C153800 +
            (C2733 * C147 + C2751 + C2751 + C153761 * C163 + C2731 * C146 +
             C2752 + C2752 + C2724 * C162 + C2729 * C145 + C2753 + C2753 +
             C2723 * C161) *
                C153513 * C153812) *
               C153725) *
              C153397 * C153794 +
          (((C2729 * C146 + C2754 + C2754 + C2723 * C162 + C2731 * C147 +
             C2755 + C2755 + C2724 * C163 + C2733 * C148 + C2756 + C2756 +
             C153761 * C164) *
                C153513 * C153812 +
            (C3621 + C3622 + C3623) * C153513 * C153800 +
            (C3624 + C3625 + C3626) * C153513 * C153774) *
               C153725 -
           ((C2733 * C1796 + C3845 + C3845 + C153761 * C1806 + C2731 * C1797 +
             C3846 + C3846 + C2724 * C1807 + C2729 * C1798 + C3847 + C3847 +
             C2723 * C1808) *
                C153513 * C153774 +
            (C2733 * C985 + C3848 + C3848 + C153761 * C997 + C2731 * C984 +
             C3849 + C3849 + C2724 * C996 + C2729 * C983 + C3850 + C3850 +
             C2723 * C995) *
                C153513 * C153800 +
            (C2733 * C496 + C3851 + C3851 + C153761 * C520 + C2731 * C497 +
             C3852 + C3852 + C2724 * C521 + C2729 * C498 + C3853 + C3853 +
             C2723 * C522) *
                C153513 * C153812) *
               C153477) *
              C153397 * C678)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C144 + C169 + C169 + C121 * C160 + C136 * C145 + C170 +
            C170 + C122 * C161 + C138 * C146 + C171 + C171 + C123 * C162 +
            C140 * C147 + C172 + C172 + C124 * C163 + C142 * C148 + C173 +
            C173 + C125 * C164) *
               C153513 * C153501 * C153725 -
           (C142 * C496 + C533 + C533 + C125 * C520 + C140 * C497 + C534 +
            C534 + C124 * C521 + C138 * C498 + C535 + C535 + C123 * C522 +
            C136 * C499 + C536 + C536 + C122 * C523 + C134 * C500 + C537 +
            C537 + C121 * C524) *
               C153513 * C153501 * C153477) *
              C153397 * C153793 +
          ((C134 * C499 + C543 + C543 + C121 * C523 + C136 * C498 + C544 +
            C544 + C122 * C522 + C138 * C497 + C545 + C545 + C123 * C521 +
            C140 * C496 + C546 + C546 + C124 * C520 + C142 * C506 + C547 +
            C547 + C125 * C530) *
               C153513 * C153501 * C153477 -
           (C142 * C149 + C174 + C174 + C125 * C165 + C140 * C148 + C175 +
            C175 + C124 * C164 + C138 * C147 + C176 + C176 + C123 * C163 +
            C136 * C146 + C177 + C177 + C122 * C162 + C134 * C145 + C178 +
            C178 + C121 * C161) *
               C153513 * C153501 * C153725) *
              C153397 * C153794 +
          ((C134 * C146 + C179 + C179 + C121 * C162 + C136 * C147 + C180 +
            C180 + C122 * C163 + C138 * C148 + C181 + C181 + C123 * C164 +
            C140 * C149 + C182 + C182 + C124 * C165 + C142 * C150 + C183 +
            C183 + C125 * C166) *
               C153513 * C153501 * C153725 -
           (C142 * C811 + C815 + C815 + C125 * C813 + C140 * C506 + C816 +
            C816 + C124 * C530 + C138 * C496 + C817 + C817 + C123 * C520 +
            C136 * C497 + C818 + C818 + C122 * C521 + C134 * C498 + C819 +
            C819 + C121 * C522) *
               C153513 * C153501 * C153477) *
              C153397 * C678)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
             C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 +
             C23999 + C153761 * C162) *
                C153513 * C23987 +
            (C24335 + C24336 + C24337) * C153513 * C23988 + C24357 * C153774) *
               C153725 -
           ((C23994 * C1798 + C24577 + C24577 + C153761 * C1808 +
             C23992 * C1799 + C24578 + C24578 + C153790 * C1809 +
             C23990 * C1800 + C24579 + C24579 + C153809 * C1810) *
                C153513 * C153774 +
            (C23994 * C983 + C24580 + C24580 + C153761 * C995 + C23992 * C982 +
             C24581 + C24581 + C153790 * C994 + C23990 * C981 + C24582 +
             C24582 + C153809 * C993) *
                C153513 * C23988 +
            (C23994 * C498 + C24583 + C24583 + C153761 * C522 + C23992 * C499 +
             C24584 + C24584 + C153790 * C523 + C23990 * C500 + C24585 +
             C24585 + C153809 * C524) *
                C153513 * C23987) *
               C153477) *
              C153397 * C153793 +
          (((C23990 * C499 + C24595 + C24595 + C153809 * C523 + C23992 * C498 +
             C24596 + C24596 + C153790 * C522 + C23994 * C497 + C24597 +
             C24597 + C153761 * C521) *
                C153513 * C23987 +
            (C23990 * C982 + C24598 + C24598 + C153809 * C994 + C23992 * C983 +
             C24599 + C24599 + C153790 * C995 + C23994 * C984 + C24600 +
             C24600 + C153761 * C996) *
                C153513 * C23988 +
            (C23990 * C1799 + C24601 + C24601 + C153809 * C1809 +
             C23992 * C1798 + C24602 + C24602 + C153790 * C1808 +
             C23994 * C1797 + C24603 + C24603 + C153761 * C1807) *
                C153513 * C153774) *
               C153477 -
           (C24358 * C153774 + (C24346 + C24345 + C24344) * C153513 * C23988 +
            (C23994 * C147 + C24012 + C24012 + C153761 * C163 + C23992 * C146 +
             C24013 + C24013 + C153790 * C162 + C23990 * C145 + C24014 +
             C24014 + C153809 * C161) *
                C153513 * C23987) *
               C153725) *
              C153397 * C153794 +
          (((C23990 * C146 + C24015 + C24015 + C153809 * C162 + C23992 * C147 +
             C24016 + C24016 + C153790 * C163 + C23994 * C148 + C24017 +
             C24017 + C153761 * C164) *
                C153513 * C23987 +
            (C24858 + C24859 + C24860) * C153513 * C23988 +
            (C24861 + C24862 + C24863) * C153513 * C153774) *
               C153725 -
           ((C23994 * C1796 + C25082 + C25082 + C153761 * C1806 +
             C23992 * C1797 + C25083 + C25083 + C153790 * C1807 +
             C23990 * C1798 + C25084 + C25084 + C153809 * C1808) *
                C153513 * C153774 +
            (C23994 * C985 + C25085 + C25085 + C153761 * C997 + C23992 * C984 +
             C25086 + C25086 + C153790 * C996 + C23990 * C983 + C25087 +
             C25087 + C153809 * C995) *
                C153513 * C23988 +
            (C23994 * C496 + C25088 + C25088 + C153761 * C520 + C23992 * C497 +
             C25089 + C25089 + C153790 * C521 + C23990 * C498 + C25090 +
             C25090 + C153809 * C522) *
                C153513 * C23987) *
               C153477) *
              C153397 * C678)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153513 *
                C28229 +
            C28439 * C28230 + C28440 * C28231 + C28441 * C28232 +
            C28442 * C28233) *
               C153725 -
           ((C28234 * C5603 + C28577 + C28577 + C153338 * C5609) * C153513 *
                C28233 +
            (C28234 * C4143 + C28578 + C28578 + C153338 * C4151) * C153513 *
                C28232 +
            (C28234 * C1800 + C28579 + C28579 + C153338 * C1810) * C153513 *
                C28231 +
            (C28234 * C981 + C28580 + C28580 + C153338 * C993) * C153513 *
                C28230 +
            (C28234 * C500 + C28581 + C28581 + C153338 * C524) * C153513 *
                C28229) *
               C153477) *
              C153397 * C153793 +
          (((C28234 * C499 + C28587 + C28587 + C153338 * C523) * C153513 *
                C28229 +
            (C28234 * C982 + C28588 + C28588 + C153338 * C994) * C153513 *
                C28230 +
            (C28234 * C1799 + C28589 + C28589 + C153338 * C1809) * C153513 *
                C28231 +
            (C28234 * C4144 + C28590 + C28590 + C153338 * C4152) * C153513 *
                C28232 +
            (C28234 * C5602 + C28591 + C28591 + C153338 * C5608) * C153513 *
                C28233) *
               C153477 -
           (C28447 * C28233 + C28446 * C28232 + C28445 * C28231 +
            C28444 * C28230 +
            (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C153513 *
                C28229) *
               C153725) *
              C153397 * C153794 +
          (((C28234 * C146 + C28247 + C28247 + C153338 * C162) * C153513 *
                C28229 +
            C28740 * C28230 + C28741 * C28231 + C28742 * C28232 +
            C28743 * C28233) *
               C153725 -
           ((C28234 * C5601 + C28866 + C28866 + C153338 * C5607) * C153513 *
                C28233 +
            (C28234 * C4145 + C28867 + C28867 + C153338 * C4153) * C153513 *
                C28232 +
            (C28234 * C1798 + C28868 + C28868 + C153338 * C1808) * C153513 *
                C28231 +
            (C28234 * C983 + C28869 + C28869 + C153338 * C995) * C153513 *
                C28230 +
            (C28234 * C498 + C28870 + C28870 + C153338 * C522) * C153513 *
                C28229) *
               C153477) *
              C153397 * C678)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
             C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 +
             C23999 + C153761 * C162) *
                C47673 +
            (C48203 + C48204 + C48205) * C47674 + C48223 * C153777) *
               C153501 * C153725 -
           ((C48209 + C48210 + C48211) * C153777 +
            (C48208 + C48207 + C48206) * C47674 +
            (C48205 + C48204 + C48203) * C47673) *
               C153501 * C153477) *
              C153397 * C153793 +
          (((C48212 + C48213 + C48214) * C47673 +
            (C48215 + C48216 + C48217) * C47674 +
            (C48218 + C48219 + C48220) * C153777) *
               C153501 * C153477 -
           (C48224 * C153777 + (C48214 + C48213 + C48212) * C47674 +
            (C23994 * C147 + C24012 + C24012 + C153761 * C163 + C23992 * C146 +
             C24013 + C24013 + C153790 * C162 + C23990 * C145 + C24014 +
             C24014 + C153809 * C161) *
                C47673) *
               C153501 * C153725) *
              C153397 * C153794 +
          (((C23990 * C146 + C24015 + C24015 + C153809 * C162 + C23992 * C147 +
             C24016 + C24016 + C153790 * C163 + C23994 * C148 + C24017 +
             C24017 + C153761 * C164) *
                C47673 +
            (C48691 + C48692 + C48693) * C47674 +
            (C48694 + C48695 + C48696) * C153777) *
               C153501 * C153725 -
           ((C23994 * C2148 + C48676 + C48676 + C153761 * C2158 +
             C23992 * C2149 + C48677 + C48677 + C153790 * C2159 +
             C23990 * C2150 + C48678 + C48678 + C153809 * C2160) *
                C153777 +
            (C48696 + C48695 + C48694) * C47674 +
            (C48693 + C48692 + C48691) * C47673) *
               C153501 * C153477) *
              C153397 * C678)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C47673 +
             C31295 * C47674 + C31296 * C153777) *
                C153812 +
            (C52025 + C52026 + C52027) * C153800 + C52045 * C153774) *
               C153725 -
           ((C31297 * C153777 + C29446 * C47674 + C29075 * C47673) * C153774 +
            (C31298 * C153777 + C29445 * C47674 + C29076 * C47673) * C153800 +
            (C31299 * C153777 + C31296 * C47674 + C31295 * C47673) * C153812) *
               C153477) *
              C153397 * C153793 +
          (((C31300 * C47673 + C31301 * C47674 + C31302 * C153777) * C153812 +
            (C29077 * C47673 + C31015 * C47674 + C31303 * C153777) * C153800 +
            (C29078 * C47673 + C31016 * C47674 + C31304 * C153777) * C153774) *
               C153477 -
           (C52046 * C153774 + (C52036 + C52035 + C52034) * C153800 +
            (C31301 * C153777 + C31300 * C47674 +
             (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C47673) *
                C153812) *
               C153725) *
              C153397 * C153794 +
          ((((C28234 * C146 + C28247 + C28247 + C153338 * C162) * C47673 +
             C31779 * C47674 + C31780 * C153777) *
                C153812 +
            (C52483 + C52484 + C52485) * C153800 +
            (C52486 + C52487 + C52488) * C153774) *
               C153725 -
           (((C28234 * C6213 + C31772 + C31772 + C153338 * C6225) * C153777 +
             C31545 * C47674 + C31544 * C47673) *
                C153774 +
            ((C28234 * C6216 + C31773 + C31773 + C153338 * C6228) * C153777 +
             C31543 * C47674 + C31542 * C47673) *
                C153800 +
            ((C28234 * C2150 + C31774 + C31774 + C153338 * C2160) * C153777 +
             C31780 * C47674 + C31779 * C47673) *
                C153812) *
               C153477) *
              C153397 * C678)) /
            (p * q * std::sqrt(p + q));
    d2ee[214] +=
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C144 + C169 + C169 + C121 * C160 + C136 * C145 + C170 +
            C170 + C122 * C161 + C138 * C146 + C171 + C171 + C123 * C162 +
            C140 * C147 + C172 + C172 + C124 * C163 + C142 * C148 + C173 +
            C173 + C125 * C164) *
               C153513 * C153501 * C153413 * C310 -
           (C142 * C315 + C352 + C352 + C125 * C339 + C140 * C316 + C353 +
            C353 + C124 * C340 + C138 * C317 + C354 + C354 + C123 * C341 +
            C136 * C318 + C355 + C355 + C122 * C342 + C134 * C319 + C356 +
            C356 + C121 * C343) *
               C153513 * C153501 * C153413 * C311 +
           (C134 * C320 + C357 + C357 + C121 * C344 + C136 * C321 + C358 +
            C358 + C122 * C345 + C138 * C322 + C359 + C359 + C123 * C346 +
            C140 * C323 + C360 + C360 + C124 * C347 + C142 * C324 + C361 +
            C361 + C125 * C348) *
               C153513 * C153501 * C153413 * C312) *
              C313 +
          ((C134 * C318 + C362 + C362 + C121 * C342 + C136 * C317 + C363 +
            C363 + C122 * C341 + C138 * C316 + C364 + C364 + C123 * C340 +
            C140 * C315 + C365 + C365 + C124 * C339 + C142 * C325 + C366 +
            C366 + C125 * C349) *
               C153513 * C153501 * C153413 * C311 -
           (C142 * C149 + C174 + C174 + C125 * C165 + C140 * C148 + C175 +
            C175 + C124 * C164 + C138 * C147 + C176 + C176 + C123 * C163 +
            C136 * C146 + C177 + C177 + C122 * C162 + C134 * C145 + C178 +
            C178 + C121 * C161) *
               C153513 * C153501 * C153413 * C310 -
           (C142 * C326 + C367 + C367 + C125 * C350 + C140 * C324 + C368 +
            C368 + C124 * C348 + C138 * C323 + C369 + C369 + C123 * C347 +
            C136 * C322 + C370 + C370 + C122 * C346 + C134 * C321 + C371 +
            C371 + C121 * C345) *
               C153513 * C153501 * C153413 * C312) *
              C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((C134 * C144 + C169 + C169 + C121 * C160 + C136 * C145 + C170 + C170 +
           C122 * C161 + C138 * C146 + C171 + C171 + C123 * C162 + C140 * C147 +
           C172 + C172 + C124 * C163 + C142 * C148 + C173 + C173 +
           C125 * C164) *
              C153513 * C153501 * C153413 * C153397 * C130 -
          (C142 * C149 + C174 + C174 + C125 * C165 + C140 * C148 + C175 + C175 +
           C124 * C164 + C138 * C147 + C176 + C176 + C123 * C163 + C136 * C146 +
           C177 + C177 + C122 * C162 + C134 * C145 + C178 + C178 +
           C121 * C161) *
              C153513 * C153501 * C153413 * C153397 * C131 +
          (C134 * C146 + C179 + C179 + C121 * C162 + C136 * C147 + C180 + C180 +
           C122 * C163 + C138 * C148 + C181 + C181 + C123 * C164 + C140 * C149 +
           C182 + C182 + C124 * C165 + C142 * C150 + C183 + C183 +
           C125 * C166) *
              C153513 * C153501 * C153413 * C153397 * C132 -
          (C142 * C151 + C184 + C184 + C125 * C167 + C140 * C150 + C185 + C185 +
           C124 * C166 + C138 * C149 + C186 + C186 + C123 * C165 + C136 * C148 +
           C187 + C187 + C122 * C164 + C134 * C147 + C188 + C188 +
           C121 * C163) *
              C153513 * C153501 * C153413 * C153397 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 + C2737 +
            C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
            C153761 * C162) *
               C153513 * C153812 +
           (C2729 * C319 + C2739 + C2739 + C2723 * C343 + C2731 * C318 + C2740 +
            C2740 + C2724 * C342 + C2733 * C317 + C2741 + C2741 +
            C153761 * C341) *
               C153513 * C153800 +
           (C2729 * C320 + C2742 + C2742 + C2723 * C344 + C2731 * C321 + C2743 +
            C2743 + C2724 * C345 + C2733 * C322 + C2744 + C2744 +
            C153761 * C346) *
               C153513 * C153774) *
              C153413 * C153397 * C130 -
          ((C2733 * C323 + C2745 + C2745 + C153761 * C347 + C2731 * C322 +
            C2746 + C2746 + C2724 * C346 + C2729 * C321 + C2747 + C2747 +
            C2723 * C345) *
               C153513 * C153774 +
           (C2733 * C316 + C2748 + C2748 + C153761 * C340 + C2731 * C317 +
            C2749 + C2749 + C2724 * C341 + C2729 * C318 + C2750 + C2750 +
            C2723 * C342) *
               C153513 * C153800 +
           (C2733 * C147 + C2751 + C2751 + C153761 * C163 + C2731 * C146 +
            C2752 + C2752 + C2724 * C162 + C2729 * C145 + C2753 + C2753 +
            C2723 * C161) *
               C153513 * C153812) *
              C153413 * C153397 * C131 +
          ((C2729 * C146 + C2754 + C2754 + C2723 * C162 + C2731 * C147 + C2755 +
            C2755 + C2724 * C163 + C2733 * C148 + C2756 + C2756 +
            C153761 * C164) *
               C153513 * C153812 +
           (C2729 * C317 + C2757 + C2757 + C2723 * C341 + C2731 * C316 + C2758 +
            C2758 + C2724 * C340 + C2733 * C315 + C2759 + C2759 +
            C153761 * C339) *
               C153513 * C153800 +
           (C2729 * C322 + C2760 + C2760 + C2723 * C346 + C2731 * C323 + C2761 +
            C2761 + C2724 * C347 + C2733 * C324 + C2762 + C2762 +
            C153761 * C348) *
               C153513 * C153774) *
              C153413 * C153397 * C132 -
          ((C2733 * C326 + C2763 + C2763 + C153761 * C350 + C2731 * C324 +
            C2764 + C2764 + C2724 * C348 + C2729 * C323 + C2765 + C2765 +
            C2723 * C347) *
               C153513 * C153774 +
           (C2733 * C325 + C2766 + C2766 + C153761 * C349 + C2731 * C315 +
            C2767 + C2767 + C2724 * C339 + C2729 * C316 + C2768 + C2768 +
            C2723 * C340) *
               C153513 * C153800 +
           (C2733 * C149 + C2769 + C2769 + C153761 * C165 + C2731 * C148 +
            C2770 + C2770 + C2724 * C164 + C2729 * C147 + C2771 + C2771 +
            C2723 * C163) *
               C153513 * C153812) *
              C153413 * C153397 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 +
             C2737 + C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
             C153761 * C162) *
                C153513 * C153812 +
            (C3086 + C3087 + C3088) * C153513 * C153800 + C3108 * C153774) *
               C153413 * C310 -
           ((C3092 + C3093 + C3094) * C153513 * C153774 +
            (C3091 + C3090 + C3089) * C153513 * C153800 +
            (C3088 + C3087 + C3086) * C153513 * C153812) *
               C153413 * C311 +
           (C3108 * C153812 + (C3094 + C3093 + C3092) * C153513 * C153800 +
            (C2729 * C2989 + C3023 + C3023 + C2723 * C2997 + C2731 * C2990 +
             C3024 + C3024 + C2724 * C2998 + C2733 * C2991 + C3025 + C3025 +
             C153761 * C2999) *
                C153513 * C153774) *
               C153413 * C312) *
              C313 +
          (((C3095 + C3096 + C3097) * C153513 * C153812 +
            (C3098 + C3099 + C3100) * C153513 * C153800 +
            (C3101 + C3102 + C3103) * C153513 * C153774) *
               C153413 * C311 -
           (C3109 * C153774 + (C3097 + C3096 + C3095) * C153513 * C153800 +
            (C2733 * C147 + C2751 + C2751 + C153761 * C163 + C2731 * C146 +
             C2752 + C2752 + C2724 * C162 + C2729 * C145 + C2753 + C2753 +
             C2723 * C161) *
                C153513 * C153812) *
               C153413 * C310 -
           ((C2733 * C2992 + C3047 + C3047 + C153761 * C3000 + C2731 * C2991 +
             C3048 + C3048 + C2724 * C2999 + C2729 * C2990 + C3049 + C3049 +
             C2723 * C2998) *
                C153513 * C153774 +
            (C3103 + C3102 + C3101) * C153513 * C153800 + C3109 * C153812) *
               C153413 * C312) *
              C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
            C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 + C23999 +
            C153761 * C162) *
               C153513 * C23987 +
           (C23990 * C319 + C24000 + C24000 + C153809 * C343 + C23992 * C318 +
            C24001 + C24001 + C153790 * C342 + C23994 * C317 + C24002 + C24002 +
            C153761 * C341) *
               C153513 * C23988 +
           (C23990 * C320 + C24003 + C24003 + C153809 * C344 + C23992 * C321 +
            C24004 + C24004 + C153790 * C345 + C23994 * C322 + C24005 + C24005 +
            C153761 * C346) *
               C153513 * C153774) *
              C153413 * C153397 * C130 -
          ((C23994 * C323 + C24006 + C24006 + C153761 * C347 + C23992 * C322 +
            C24007 + C24007 + C153790 * C346 + C23990 * C321 + C24008 + C24008 +
            C153809 * C345) *
               C153513 * C153774 +
           (C23994 * C316 + C24009 + C24009 + C153761 * C340 + C23992 * C317 +
            C24010 + C24010 + C153790 * C341 + C23990 * C318 + C24011 + C24011 +
            C153809 * C342) *
               C153513 * C23988 +
           (C23994 * C147 + C24012 + C24012 + C153761 * C163 + C23992 * C146 +
            C24013 + C24013 + C153790 * C162 + C23990 * C145 + C24014 + C24014 +
            C153809 * C161) *
               C153513 * C23987) *
              C153413 * C153397 * C131 +
          ((C23990 * C146 + C24015 + C24015 + C153809 * C162 + C23992 * C147 +
            C24016 + C24016 + C153790 * C163 + C23994 * C148 + C24017 + C24017 +
            C153761 * C164) *
               C153513 * C23987 +
           (C23990 * C317 + C24018 + C24018 + C153809 * C341 + C23992 * C316 +
            C24019 + C24019 + C153790 * C340 + C23994 * C315 + C24020 + C24020 +
            C153761 * C339) *
               C153513 * C23988 +
           (C23990 * C322 + C24021 + C24021 + C153809 * C346 + C23992 * C323 +
            C24022 + C24022 + C153790 * C347 + C23994 * C324 + C24023 + C24023 +
            C153761 * C348) *
               C153513 * C153774) *
              C153413 * C153397 * C132 -
          ((C23994 * C326 + C24024 + C24024 + C153761 * C350 + C23992 * C324 +
            C24025 + C24025 + C153790 * C348 + C23990 * C323 + C24026 + C24026 +
            C153809 * C347) *
               C153513 * C153774 +
           (C23994 * C325 + C24027 + C24027 + C153761 * C349 + C23992 * C315 +
            C24028 + C24028 + C153790 * C339 + C23990 * C316 + C24029 + C24029 +
            C153809 * C340) *
               C153513 * C23988 +
           (C23994 * C149 + C24030 + C24030 + C153761 * C165 + C23992 * C148 +
            C24031 + C24031 + C153790 * C164 + C23990 * C147 + C24032 + C24032 +
            C153809 * C163) *
               C153513 * C23987) *
              C153413 * C153397 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
             C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 +
             C23999 + C153761 * C162) *
                C153513 * C23987 +
            (C24335 + C24336 + C24337) * C153513 * C23988 + C24357 * C153774) *
               C153413 * C310 -
           ((C24341 + C24342 + C24343) * C153513 * C153774 +
            (C24340 + C24339 + C24338) * C153513 * C23988 +
            (C24337 + C24336 + C24335) * C153513 * C23987) *
               C153413 * C311 +
           (C24357 * C23987 + (C24343 + C24342 + C24341) * C153513 * C23988 +
            (C23990 * C2989 + C24272 + C24272 + C153809 * C2997 +
             C23992 * C2990 + C24273 + C24273 + C153790 * C2998 +
             C23994 * C2991 + C24274 + C24274 + C153761 * C2999) *
                C153513 * C153774) *
               C153413 * C312) *
              C313 +
          (((C24344 + C24345 + C24346) * C153513 * C23987 +
            (C24347 + C24348 + C24349) * C153513 * C23988 +
            (C24350 + C24351 + C24352) * C153513 * C153774) *
               C153413 * C311 -
           (C24358 * C153774 + (C24346 + C24345 + C24344) * C153513 * C23988 +
            (C23994 * C147 + C24012 + C24012 + C153761 * C163 + C23992 * C146 +
             C24013 + C24013 + C153790 * C162 + C23990 * C145 + C24014 +
             C24014 + C153809 * C161) *
                C153513 * C23987) *
               C153413 * C310 -
           ((C23994 * C2992 + C24296 + C24296 + C153761 * C3000 +
             C23992 * C2991 + C24297 + C24297 + C153790 * C2999 +
             C23990 * C2990 + C24298 + C24298 + C153809 * C2998) *
                C153513 * C153774 +
            (C24352 + C24351 + C24350) * C153513 * C23988 + C24358 * C23987) *
               C153413 * C312) *
              C153384)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153513 *
               C28229 +
           (C28234 * C319 + C28238 + C28238 + C153338 * C343) * C153513 *
               C28230 +
           (C28234 * C320 + C28239 + C28239 + C153338 * C344) * C153513 *
               C28231 +
           (C28234 * C1227 + C28240 + C28240 + C153338 * C1237) * C153513 *
               C28232 +
           (C28234 * C2989 + C28241 + C28241 + C153338 * C2997) * C153513 *
               C28233) *
              C153413 * C153397 * C130 -
          ((C28234 * C2990 + C28242 + C28242 + C153338 * C2998) * C153513 *
               C28233 +
           (C28234 * C1226 + C28243 + C28243 + C153338 * C1236) * C153513 *
               C28232 +
           (C28234 * C321 + C28244 + C28244 + C153338 * C345) * C153513 *
               C28231 +
           (C28234 * C318 + C28245 + C28245 + C153338 * C342) * C153513 *
               C28230 +
           (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C153513 *
               C28229) *
              C153413 * C153397 * C131 +
          ((C28234 * C146 + C28247 + C28247 + C153338 * C162) * C153513 *
               C28229 +
           (C28234 * C317 + C28248 + C28248 + C153338 * C341) * C153513 *
               C28230 +
           (C28234 * C322 + C28249 + C28249 + C153338 * C346) * C153513 *
               C28231 +
           (C28234 * C1225 + C28250 + C28250 + C153338 * C1235) * C153513 *
               C28232 +
           (C28234 * C2991 + C28251 + C28251 + C153338 * C2999) * C153513 *
               C28233) *
              C153413 * C153397 * C132 -
          ((C28234 * C2992 + C28252 + C28252 + C153338 * C3000) * C153513 *
               C28233 +
           (C28234 * C1224 + C28253 + C28253 + C153338 * C1234) * C153513 *
               C28232 +
           (C28234 * C323 + C28254 + C28254 + C153338 * C347) * C153513 *
               C28231 +
           (C28234 * C316 + C28255 + C28255 + C153338 * C340) * C153513 *
               C28230 +
           (C28234 * C147 + C28256 + C28256 + C153338 * C163) * C153513 *
               C28229) *
              C153413 * C153397 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153513 *
                C28229 +
            C28439 * C28230 + C28440 * C28231 + C28441 * C28232 +
            C28442 * C28233) *
               C153413 * C310 -
           (C28443 * C28233 + C28442 * C28232 + C28441 * C28231 +
            C28440 * C28230 + C28439 * C28229) *
               C153413 * C311 +
           (C28440 * C28229 + C28441 * C28230 + C28442 * C28231 +
            C28443 * C28232 +
            (C28234 * C28378 + C28396 + C28396 + C153338 * C28382) * C153513 *
                C28233) *
               C153413 * C312) *
              C313 +
          ((C28444 * C28229 + C28445 * C28230 + C28446 * C28231 +
            C28447 * C28232 + C28448 * C28233) *
               C153413 * C311 -
           (C28447 * C28233 + C28446 * C28232 + C28445 * C28231 +
            C28444 * C28230 +
            (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C153513 *
                C28229) *
               C153413 * C310 -
           ((C28234 * C28379 + C28408 + C28408 + C153338 * C28383) * C153513 *
                C28233 +
            C28448 * C28232 + C28447 * C28231 + C28446 * C28230 +
            C28445 * C28229) *
               C153413 * C312) *
              C153384)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
            C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 + C23999 +
            C153761 * C162) *
               C47673 +
           (C23990 * C500 + C24585 + C24585 + C153809 * C524 + C23992 * C499 +
            C24584 + C24584 + C153790 * C523 + C23994 * C498 + C24583 + C24583 +
            C153761 * C522) *
               C47674 +
           (C23990 * C501 + C24586 + C24586 + C153809 * C525 + C23992 * C502 +
            C24587 + C24587 + C153790 * C526 + C23994 * C503 + C24588 + C24588 +
            C153761 * C527) *
               C153777) *
              C153501 * C153413 * C153397 * C130 -
          ((C23994 * C504 + C24610 + C24610 + C153761 * C528 + C23992 * C503 +
            C24611 + C24611 + C153790 * C527 + C23990 * C502 + C24612 + C24612 +
            C153809 * C526) *
               C153777 +
           (C23994 * C497 + C24597 + C24597 + C153761 * C521 + C23992 * C498 +
            C24596 + C24596 + C153790 * C522 + C23990 * C499 + C24595 + C24595 +
            C153809 * C523) *
               C47674 +
           (C23994 * C147 + C24012 + C24012 + C153761 * C163 + C23992 * C146 +
            C24013 + C24013 + C153790 * C162 + C23990 * C145 + C24014 + C24014 +
            C153809 * C161) *
               C47673) *
              C153501 * C153413 * C153397 * C131 +
          ((C23990 * C146 + C24015 + C24015 + C153809 * C162 + C23992 * C147 +
            C24016 + C24016 + C153790 * C163 + C23994 * C148 + C24017 + C24017 +
            C153761 * C164) *
               C47673 +
           (C23990 * C498 + C25090 + C25090 + C153809 * C522 + C23992 * C497 +
            C25089 + C25089 + C153790 * C521 + C23994 * C496 + C25088 + C25088 +
            C153761 * C520) *
               C47674 +
           (C23990 * C503 + C47677 + C47677 + C153809 * C527 + C23992 * C504 +
            C47678 + C47678 + C153790 * C528 + C23994 * C505 + C47679 + C47679 +
            C153761 * C529) *
               C153777) *
              C153501 * C153413 * C153397 * C132 -
          ((C23994 * C507 + C47680 + C47680 + C153761 * C531 + C23992 * C505 +
            C47681 + C47681 + C153790 * C529 + C23990 * C504 + C47682 + C47682 +
            C153809 * C528) *
               C153777 +
           (C23994 * C506 + C47683 + C47683 + C153761 * C530 + C23992 * C496 +
            C47684 + C47684 + C153790 * C520 + C23990 * C497 + C47685 + C47685 +
            C153809 * C521) *
               C47674 +
           (C23994 * C149 + C24030 + C24030 + C153761 * C165 + C23992 * C148 +
            C24031 + C24031 + C153790 * C164 + C23990 * C147 + C24032 + C24032 +
            C153809 * C163) *
               C47673) *
              C153501 * C153413 * C153397 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
             C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 +
             C23999 + C153761 * C162) *
                C47673 +
            (C23990 * C500 + C24585 + C24585 + C153809 * C524 + C23992 * C499 +
             C24584 + C24584 + C153790 * C523 + C23994 * C498 + C24583 +
             C24583 + C153761 * C522) *
                C47674 +
            (C23990 * C501 + C24586 + C24586 + C153809 * C525 + C23992 * C502 +
             C24587 + C24587 + C153790 * C526 + C23994 * C503 + C24588 +
             C24588 + C153761 * C527) *
                C153777) *
               C153501 * C153413 * C310 -
           ((C26079 + C26078 + C26077) * C153777 +
            (C25438 + C25439 + C25440) * C47674 +
            (C24337 + C24336 + C24335) * C47673) *
               C153501 * C153413 * C311 +
           (C24355 * C47673 + (C25437 + C25436 + C25435) * C47674 +
            (C26080 + C26081 + C26082) * C153777) *
               C153501 * C153413 * C312) *
              C313 +
          (((C24344 + C24345 + C24346) * C47673 +
            (C25441 + C25442 + C25443) * C47674 +
            (C23990 * C1368 + C24609 + C24609 + C153809 * C1378 +
             C23992 * C1367 + C24608 + C24608 + C153790 * C1377 +
             C23994 * C1366 + C24607 + C24607 + C153761 * C1376) *
                C153777) *
               C153501 * C153413 * C311 -
           ((C23994 * C504 + C24610 + C24610 + C153761 * C528 + C23992 * C503 +
             C24611 + C24611 + C153790 * C527 + C23990 * C502 + C24612 +
             C24612 + C153809 * C526) *
                C153777 +
            (C23994 * C497 + C24597 + C24597 + C153761 * C521 + C23992 * C498 +
             C24596 + C24596 + C153790 * C522 + C23990 * C499 + C24595 +
             C24595 + C153809 * C523) *
                C47674 +
            (C23994 * C147 + C24012 + C24012 + C153761 * C163 + C23992 * C146 +
             C24013 + C24013 + C153790 * C162 + C23990 * C145 + C24014 +
             C24014 + C153809 * C161) *
                C47673) *
               C153501 * C153413 * C310 -
           ((C23994 * C3330 + C24604 + C24604 + C153761 * C3338 +
             C23992 * C3329 + C24605 + C24605 + C153790 * C3337 +
             C23990 * C3328 + C24606 + C24606 + C153809 * C3336) *
                C153777 +
            (C25446 + C25445 + C25444) * C47674 + C24356 * C47673) *
               C153501 * C153413 * C312) *
              C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C47673 +
            C31295 * C47674 + C31296 * C153777) *
               C153812 +
           (C28429 * C47673 + C29076 * C47674 + C29445 * C153777) * C153800 +
           (C28430 * C47673 + C29075 * C47674 + C29446 * C153777) * C153774) *
              C153413 * C153397 * C130 -
          ((C31016 * C153777 + C29078 * C47674 + C28435 * C47673) * C153774 +
           (C31015 * C153777 + C29077 * C47674 + C28434 * C47673) * C153800 +
           (C31301 * C153777 + C31300 * C47674 +
            (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C47673) *
               C153812) *
              C153413 * C153397 * C131 +
          (((C28234 * C146 + C28247 + C28247 + C153338 * C162) * C47673 +
            C31779 * C47674 + C31780 * C153777) *
               C153812 +
           (C28736 * C47673 + C31542 * C47674 + C31543 * C153777) * C153800 +
           (C28737 * C47673 + C31544 * C47674 + C31545 * C153777) * C153774) *
              C153413 * C153397 * C132 -
          (((C28234 * C3330 + C30761 + C30761 + C153338 * C3338) * C153777 +
            (C28234 * C1797 + C30762 + C30762 + C153338 * C1807) * C47674 +
            (C28234 * C323 + C28254 + C28254 + C153338 * C347) * C47673) *
               C153774 +
           ((C28234 * C1366 + C30763 + C30763 + C153338 * C1376) * C153777 +
            (C28234 * C984 + C30764 + C30764 + C153338 * C996) * C47674 +
            (C28234 * C316 + C28255 + C28255 + C153338 * C340) * C47673) *
               C153800 +
           ((C28234 * C504 + C30765 + C30765 + C153338 * C528) * C153777 +
            (C28234 * C497 + C30766 + C30766 + C153338 * C521) * C47674 +
            (C28234 * C147 + C28256 + C28256 + C153338 * C163) * C47673) *
               C153812) *
              C153413 * C153397 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C47673 +
             C31295 * C47674 + C31296 * C153777) *
                C153812 +
            (C52025 + C52026 + C52027) * C153800 + C52045 * C153774) *
               C153413 * C310 -
           ((C52031 + C52032 + C52033) * C153774 +
            (C52030 + C52029 + C52028) * C153800 +
            (C52027 + C52026 + C52025) * C153812) *
               C153413 * C311 +
           (C52045 * C153812 + (C52033 + C52032 + C52031) * C153800 +
            (C28432 * C47673 + C29073 * C47674 + C29448 * C153777) * C153774) *
               C153413 * C312) *
              C313 +
          (((C52034 + C52035 + C52036) * C153812 +
            (C52037 + C52038 + C52039) * C153800 +
            (C52040 + C52041 + C52042) * C153774) *
               C153413 * C311 -
           (C52046 * C153774 + (C52036 + C52035 + C52034) * C153800 +
            (C31301 * C153777 + C31300 * C47674 +
             (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C47673) *
                C153812) *
               C153413 * C310 -
           (((C28234 * C28571 + C28592 + C28592 + C153338 * C28575) * C153777 +
             C29080 * C47674 + C28437 * C47673) *
                C153774 +
            (C52042 + C52041 + C52040) * C153800 + C52046 * C153812) *
               C153413 * C312) *
              C153384)) /
            (p * q * std::sqrt(p + q));
    d2ee[215] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 +
             C2737 + C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
             C153761 * C162) *
                C153513 * C153812 +
            (C3086 + C3087 + C3088) * C153513 * C153800 + C3108 * C153774) *
               C153413 * C153795 -
           (C4609 * C153774 + (C3091 + C3090 + C3089) * C153513 * C153800 +
            (C3088 + C3087 + C3086) * C153513 * C153812) *
               C153413 * C153796 +
           (C3108 * C153812 + (C3094 + C3093 + C3092) * C153513 * C153800 +
            (C4613 + C4614 + C4615) * C153513 * C153774) *
               C153413 * C1509) *
              C153716 +
          (((C3095 + C3096 + C3097) * C153513 * C153812 +
            (C3098 + C3099 + C3100) * C153513 * C153800 +
            (C3101 + C3102 + C3103) * C153513 * C153774) *
               C153413 * C153796 -
           (C3109 * C153774 + (C3097 + C3096 + C3095) * C153513 * C153800 +
            (C2733 * C147 + C2751 + C2751 + C153761 * C163 + C2731 * C146 +
             C2752 + C2752 + C2724 * C162 + C2729 * C145 + C2753 + C2753 +
             C2723 * C161) *
                C153513 * C153812) *
               C153413 * C153795 -
           ((C2733 * C2992 + C3047 + C3047 + C153761 * C3000 + C2731 * C2991 +
             C3048 + C3048 + C2724 * C2999 + C2729 * C2990 + C3049 + C3049 +
             C2723 * C2998) *
                C153513 * C153774 +
            (C3103 + C3102 + C3101) * C153513 * C153800 + C3109 * C153812) *
               C153413 * C1509) *
              C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C144 + C169 + C169 + C121 * C160 + C136 * C145 + C170 +
            C170 + C122 * C161 + C138 * C146 + C171 + C171 + C123 * C162 +
            C140 * C147 + C172 + C172 + C124 * C163 + C142 * C148 + C173 +
            C173 + C125 * C164) *
               C153513 * C153501 * C153413 * C153795 -
           (C142 * C315 + C352 + C352 + C125 * C339 + C140 * C316 + C353 +
            C353 + C124 * C340 + C138 * C317 + C354 + C354 + C123 * C341 +
            C136 * C318 + C355 + C355 + C122 * C342 + C134 * C319 + C356 +
            C356 + C121 * C343) *
               C153513 * C153501 * C153413 * C153796 +
           (C134 * C320 + C357 + C357 + C121 * C344 + C136 * C321 + C358 +
            C358 + C122 * C345 + C138 * C322 + C359 + C359 + C123 * C346 +
            C140 * C323 + C360 + C360 + C124 * C347 + C142 * C324 + C361 +
            C361 + C125 * C348) *
               C153513 * C153501 * C153413 * C1509) *
              C153716 +
          ((C134 * C318 + C362 + C362 + C121 * C342 + C136 * C317 + C363 +
            C363 + C122 * C341 + C138 * C316 + C364 + C364 + C123 * C340 +
            C140 * C315 + C365 + C365 + C124 * C339 + C142 * C325 + C366 +
            C366 + C125 * C349) *
               C153513 * C153501 * C153413 * C153796 -
           (C142 * C149 + C174 + C174 + C125 * C165 + C140 * C148 + C175 +
            C175 + C124 * C164 + C138 * C147 + C176 + C176 + C123 * C163 +
            C136 * C146 + C177 + C177 + C122 * C162 + C134 * C145 + C178 +
            C178 + C121 * C161) *
               C153513 * C153501 * C153413 * C153795 -
           (C142 * C326 + C367 + C367 + C125 * C350 + C140 * C324 + C368 +
            C368 + C124 * C348 + C138 * C323 + C369 + C369 + C123 * C347 +
            C136 * C322 + C370 + C370 + C122 * C346 + C134 * C321 + C371 +
            C371 + C121 * C345) *
               C153513 * C153501 * C153413 * C1509) *
              C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
             C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 +
             C23999 + C153761 * C162) *
                C153513 * C23987 +
            (C24335 + C24336 + C24337) * C153513 * C23988 + C24357 * C153774) *
               C153413 * C153795 -
           (C25825 * C153774 + (C24340 + C24339 + C24338) * C153513 * C23988 +
            (C24337 + C24336 + C24335) * C153513 * C23987) *
               C153413 * C153796 +
           (C24357 * C23987 + (C24343 + C24342 + C24341) * C153513 * C23988 +
            (C25829 + C25830 + C25831) * C153513 * C153774) *
               C153413 * C1509) *
              C153716 +
          (((C24344 + C24345 + C24346) * C153513 * C23987 +
            (C24347 + C24348 + C24349) * C153513 * C23988 +
            (C24350 + C24351 + C24352) * C153513 * C153774) *
               C153413 * C153796 -
           (C24358 * C153774 + (C24346 + C24345 + C24344) * C153513 * C23988 +
            (C23994 * C147 + C24012 + C24012 + C153761 * C163 + C23992 * C146 +
             C24013 + C24013 + C153790 * C162 + C23990 * C145 + C24014 +
             C24014 + C153809 * C161) *
                C153513 * C23987) *
               C153413 * C153795 -
           ((C23994 * C2992 + C24296 + C24296 + C153761 * C3000 +
             C23992 * C2991 + C24297 + C24297 + C153790 * C2999 +
             C23990 * C2990 + C24298 + C24298 + C153809 * C2998) *
                C153513 * C153774 +
            (C24352 + C24351 + C24350) * C153513 * C23988 + C24358 * C23987) *
               C153413 * C1509) *
              C153384)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153513 *
                C28229 +
            C28439 * C28230 + C28440 * C28231 + C28441 * C28232 +
            C28442 * C28233) *
               C153413 * C153795 -
           (C28443 * C28233 + C28442 * C28232 + C28441 * C28231 +
            C28440 * C28230 + C28439 * C28229) *
               C153413 * C153796 +
           (C28440 * C28229 + C28441 * C28230 + C28442 * C28231 +
            C28443 * C28232 + C29302 * C28233) *
               C153413 * C1509) *
              C153716 +
          ((C28444 * C28229 + C28445 * C28230 + C28446 * C28231 +
            C28447 * C28232 + C28448 * C28233) *
               C153413 * C153796 -
           (C28447 * C28233 + C28446 * C28232 + C28445 * C28231 +
            C28444 * C28230 +
            (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C153513 *
                C28229) *
               C153413 * C153795 -
           ((C28234 * C28379 + C28408 + C28408 + C153338 * C28383) * C153513 *
                C28233 +
            C28448 * C28232 + C28447 * C28231 + C28446 * C28230 +
            C28445 * C28229) *
               C153413 * C1509) *
              C153384)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
             C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 +
             C23999 + C153761 * C162) *
                C47673 +
            (C48203 + C48204 + C48205) * C47674 + C48223 * C153777) *
               C153501 * C153413 * C153795 -
           (C49600 * C153777 + (C25438 + C25439 + C25440) * C47674 +
            (C24337 + C24336 + C24335) * C47673) *
               C153501 * C153413 * C153796 +
           (C24355 * C47673 + (C25437 + C25436 + C25435) * C47674 +
            (C26080 + C26081 + C26082) * C153777) *
               C153501 * C153413 * C1509) *
              C153716 +
          (((C24344 + C24345 + C24346) * C47673 +
            (C25441 + C25442 + C25443) * C47674 +
            (C49002 + C49003 + C49004) * C153777) *
               C153501 * C153413 * C153796 -
           (C48224 * C153777 + (C48214 + C48213 + C48212) * C47674 +
            (C23994 * C147 + C24012 + C24012 + C153761 * C163 + C23992 * C146 +
             C24013 + C24013 + C153790 * C162 + C23990 * C145 + C24014 +
             C24014 + C153809 * C161) *
                C47673) *
               C153501 * C153413 * C153795 -
           ((C23994 * C3330 + C24604 + C24604 + C153761 * C3338 +
             C23992 * C3329 + C24605 + C24605 + C153790 * C3337 +
             C23990 * C3328 + C24606 + C24606 + C153809 * C3336) *
                C153777 +
            (C25446 + C25445 + C25444) * C47674 + C24356 * C47673) *
               C153501 * C153413 * C1509) *
              C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C47673 +
             C31295 * C47674 + C31296 * C153777) *
                C153812 +
            (C52025 + C52026 + C52027) * C153800 + C52045 * C153774) *
               C153413 * C153795 -
           (C53377 * C153774 + (C52030 + C52029 + C52028) * C153800 +
            (C52027 + C52026 + C52025) * C153812) *
               C153413 * C153796 +
           (C52045 * C153812 + (C52033 + C52032 + C52031) * C153800 +
            (C53374 + C53375 + C53376) * C153774) *
               C153413 * C1509) *
              C153716 +
          (((C52034 + C52035 + C52036) * C153812 +
            (C52037 + C52038 + C52039) * C153800 +
            (C52040 + C52041 + C52042) * C153774) *
               C153413 * C153796 -
           (C52046 * C153774 + (C52036 + C52035 + C52034) * C153800 +
            (C31301 * C153777 + C31300 * C47674 +
             (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C47673) *
                C153812) *
               C153413 * C153795 -
           (((C28234 * C28571 + C28592 + C28592 + C153338 * C28575) * C153777 +
             C29080 * C47674 + C28437 * C47673) *
                C153774 +
            (C52042 + C52041 + C52040) * C153800 + C52046 * C153812) *
               C153413 * C1509) *
              C153384)) /
            (p * q * std::sqrt(p + q));
    d2ee[216] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 +
             C2737 + C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
             C153761 * C162) *
                C153513 * C153812 +
            (C3086 + C3087 + C3088) * C153513 * C153800 + C3108 * C153774) *
               C153725 -
           (C5625 * C153774 + (C4213 + C4214 + C4215) * C153513 * C153800 +
            (C2733 * C498 + C3346 + C3346 + C153761 * C522 + C2731 * C499 +
             C3347 + C3347 + C2724 * C523 + C2729 * C500 + C3348 + C3348 +
             C2723 * C524) *
                C153513 * C153812) *
               C153477) *
              C153795 +
          (((C4215 + C4214 + C4213) * C153513 * C153812 +
            (C4212 + C4211 + C4210) * C153513 * C153800 +
            (C5629 + C5630 + C5631) * C153513 * C153774) *
               C153477 -
           (C4609 * C153774 + (C3091 + C3090 + C3089) * C153513 * C153800 +
            (C3088 + C3087 + C3086) * C153513 * C153812) *
               C153725) *
              C153796 +
          ((C3108 * C153812 + (C3094 + C3093 + C3092) * C153513 * C153800 +
            (C4613 + C4614 + C4615) * C153513 * C153774) *
               C153725 -
           ((C2733 * C5601 + C5618 + C5618 + C153761 * C5607 + C2731 * C5602 +
             C5619 + C5619 + C2724 * C5608 + C2729 * C5603 + C5620 + C5620 +
             C2723 * C5609) *
                C153513 * C153774 +
            (C5631 + C5630 + C5629) * C153513 * C153800 + C5625 * C153812) *
               C153477) *
              C1509) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C144 + C169 + C169 + C121 * C160 + C136 * C145 + C170 +
            C170 + C122 * C161 + C138 * C146 + C171 + C171 + C123 * C162 +
            C140 * C147 + C172 + C172 + C124 * C163 + C142 * C148 + C173 +
            C173 + C125 * C164) *
               C153513 * C153501 * C153725 -
           (C142 * C496 + C533 + C533 + C125 * C520 + C140 * C497 + C534 +
            C534 + C124 * C521 + C138 * C498 + C535 + C535 + C123 * C522 +
            C136 * C499 + C536 + C536 + C122 * C523 + C134 * C500 + C537 +
            C537 + C121 * C524) *
               C153513 * C153501 * C153477) *
              C153795 +
          ((C134 * C981 + C1000 + C1000 + C121 * C993 + C136 * C982 + C1001 +
            C1001 + C122 * C994 + C138 * C983 + C1002 + C1002 + C123 * C995 +
            C140 * C984 + C1003 + C1003 + C124 * C996 + C142 * C985 + C1004 +
            C1004 + C125 * C997) *
               C153513 * C153501 * C153477 -
           (C142 * C315 + C352 + C352 + C125 * C339 + C140 * C316 + C353 +
            C353 + C124 * C340 + C138 * C317 + C354 + C354 + C123 * C341 +
            C136 * C318 + C355 + C355 + C122 * C342 + C134 * C319 + C356 +
            C356 + C121 * C343) *
               C153513 * C153501 * C153725) *
              C153796 +
          ((C134 * C320 + C357 + C357 + C121 * C344 + C136 * C321 + C358 +
            C358 + C122 * C345 + C138 * C322 + C359 + C359 + C123 * C346 +
            C140 * C323 + C360 + C360 + C124 * C347 + C142 * C324 + C361 +
            C361 + C125 * C348) *
               C153513 * C153501 * C153725 -
           (C142 * C1796 + C1812 + C1812 + C125 * C1806 + C140 * C1797 + C1813 +
            C1813 + C124 * C1807 + C138 * C1798 + C1814 + C1814 + C123 * C1808 +
            C136 * C1799 + C1815 + C1815 + C122 * C1809 + C134 * C1800 + C1816 +
            C1816 + C121 * C1810) *
               C153513 * C153501 * C153477) *
              C1509) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
             C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 +
             C23999 + C153761 * C162) *
                C153513 * C23987 +
            (C24335 + C24336 + C24337) * C153513 * C23988 + C24357 * C153774) *
               C153725 -
           (C26823 * C153774 + (C25438 + C25439 + C25440) * C153513 * C23988 +
            (C23994 * C498 + C24583 + C24583 + C153761 * C522 + C23992 * C499 +
             C24584 + C24584 + C153790 * C523 + C23990 * C500 + C24585 +
             C24585 + C153809 * C524) *
                C153513 * C23987) *
               C153477) *
              C153795 +
          (((C25440 + C25439 + C25438) * C153513 * C23987 +
            (C25437 + C25436 + C25435) * C153513 * C23988 +
            (C26827 + C26828 + C26829) * C153513 * C153774) *
               C153477 -
           (C25825 * C153774 + (C24340 + C24339 + C24338) * C153513 * C23988 +
            (C24337 + C24336 + C24335) * C153513 * C23987) *
               C153725) *
              C153796 +
          ((C24357 * C23987 + (C24343 + C24342 + C24341) * C153513 * C23988 +
            (C25829 + C25830 + C25831) * C153513 * C153774) *
               C153725 -
           ((C23994 * C5601 + C26816 + C26816 + C153761 * C5607 +
             C23992 * C5602 + C26817 + C26817 + C153790 * C5608 +
             C23990 * C5603 + C26818 + C26818 + C153809 * C5609) *
                C153513 * C153774 +
            (C26829 + C26828 + C26827) * C153513 * C23988 + C26823 * C23987) *
               C153477) *
              C1509) *
         C153378) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153513 *
                C28229 +
            C28439 * C28230 + C28440 * C28231 + C28441 * C28232 +
            C28442 * C28233) *
               C153725 -
           (C29081 * C28233 + C29082 * C28232 + C29083 * C28231 +
            C29084 * C28230 +
            (C28234 * C500 + C28581 + C28581 + C153338 * C524) * C153513 *
                C28229) *
               C153477) *
              C153795 +
          ((C29084 * C28229 + C29083 * C28230 + C29082 * C28231 +
            C29081 * C28232 + C29868 * C28233) *
               C153477 -
           (C28443 * C28233 + C28442 * C28232 + C28441 * C28231 +
            C28440 * C28230 + C28439 * C28229) *
               C153725) *
              C153796 +
          ((C28440 * C28229 + C28441 * C28230 + C28442 * C28231 +
            C28443 * C28232 + C29302 * C28233) *
               C153725 -
           ((C28234 * C29858 + C29864 + C29864 + C153338 * C29860) * C153513 *
                C28233 +
            C29868 * C28232 + C29081 * C28231 + C29082 * C28230 +
            C29083 * C28229) *
               C153477) *
              C1509) *
         C153378) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
             C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 +
             C23999 + C153761 * C162) *
                C47673 +
            (C48203 + C48204 + C48205) * C47674 + C48223 * C153777) *
               C153501 * C153725 -
           ((C48209 + C48210 + C48211) * C153777 +
            (C48208 + C48207 + C48206) * C47674 +
            (C48205 + C48204 + C48203) * C47673) *
               C153501 * C153477) *
              C153795 +
          (((C25440 + C25439 + C25438) * C47673 +
            (C26077 + C26078 + C26079) * C47674 +
            (C49604 + C49605 + C49606) * C153777) *
               C153501 * C153477 -
           (C49600 * C153777 + (C25438 + C25439 + C25440) * C47674 +
            (C24337 + C24336 + C24335) * C47673) *
               C153501 * C153725) *
              C153796 +
          ((C24355 * C47673 + (C25437 + C25436 + C25435) * C47674 +
            (C26080 + C26081 + C26082) * C153777) *
               C153501 * C153725 -
           ((C23994 * C6213 + C27412 + C27412 + C153761 * C6225 +
             C23992 * C6214 + C27413 + C27413 + C153790 * C6226 +
             C23990 * C6215 + C27414 + C27414 + C153809 * C6227) *
                C153777 +
            (C26082 + C26081 + C26080) * C47674 + C26819 * C47673) *
               C153501 * C153477) *
              C1509) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C47673 +
             C31295 * C47674 + C31296 * C153777) *
                C153812 +
            (C52025 + C52026 + C52027) * C153800 + C52045 * C153774) *
               C153725 -
           (C54332 * C153774 + (C53000 + C53001 + C53002) * C153800 +
            (C31299 * C153777 + C31296 * C47674 + C31295 * C47673) * C153812) *
               C153477) *
              C153795 +
          (((C53002 + C53001 + C53000) * C153812 +
            (C52999 + C52998 + C52997) * C153800 +
            (C54329 + C54330 + C54331) * C153774) *
               C153477 -
           (C53377 * C153774 + (C52030 + C52029 + C52028) * C153800 +
            (C52027 + C52026 + C52025) * C153812) *
               C153725) *
              C153796 +
          ((C52045 * C153812 + (C52033 + C52032 + C52031) * C153800 +
            (C53374 + C53375 + C53376) * C153774) *
               C153725 -
           (((C28234 * C30194 + C30201 + C30201 + C153338 * C30198) * C153777 +
             C29448 * C47674 + C29073 * C47673) *
                C153774 +
            (C54331 + C54330 + C54329) * C153800 + C54332 * C153812) *
               C153477) *
              C1509) *
         C153378) /
            (p * q * std::sqrt(p + q));
    d2ee[217] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             (((C134 * C144 + C169 + C169 + C121 * C160 + C136 * C145 + C170 +
                C170 + C122 * C161 + C138 * C146 + C171 + C171 + C123 * C162 +
                C140 * C147 + C172 + C172 + C124 * C163 + C142 * C148 + C173 +
                C173 + C125 * C164) *
                   C153513 * C153501 * C153413 * C1131 -
               (C142 * C315 + C352 + C352 + C125 * C339 + C140 * C316 + C353 +
                C353 + C124 * C340 + C138 * C317 + C354 + C354 + C123 * C341 +
                C136 * C318 + C355 + C355 + C122 * C342 + C134 * C319 + C356 +
                C356 + C121 * C343) *
                   C153513 * C153501 * C153413 * C153449) *
                  C1133 +
              ((C134 * C318 + C362 + C362 + C121 * C342 + C136 * C317 + C363 +
                C363 + C122 * C341 + C138 * C316 + C364 + C364 + C123 * C340 +
                C140 * C315 + C365 + C365 + C124 * C339 + C142 * C325 + C366 +
                C366 + C125 * C349) *
                   C153513 * C153501 * C153413 * C153449 -
               (C142 * C149 + C174 + C174 + C125 * C165 + C140 * C148 + C175 +
                C175 + C124 * C164 + C138 * C147 + C176 + C176 + C123 * C163 +
                C136 * C146 + C177 + C177 + C122 * C162 + C134 * C145 + C178 +
                C178 + C121 * C161) *
                   C153513 * C153501 * C153413 * C1131) *
                  C1134 +
              ((C134 * C146 + C179 + C179 + C121 * C162 + C136 * C147 + C180 +
                C180 + C122 * C163 + C138 * C148 + C181 + C181 + C123 * C164 +
                C140 * C149 + C182 + C182 + C124 * C165 + C142 * C150 + C183 +
                C183 + C125 * C166) *
                   C153513 * C153501 * C153413 * C1131 -
               (C142 * C679 + C683 + C683 + C125 * C681 + C140 * C325 + C684 +
                C684 + C124 * C349 + C138 * C315 + C685 + C685 + C123 * C339 +
                C136 * C316 + C686 + C686 + C122 * C340 + C134 * C317 + C687 +
                C687 + C121 * C341) *
                   C153513 * C153501 * C153413 * C153449) *
                  C1135) +
         std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             ((C134 * C144 + C169 + C169 + C121 * C160 + C136 * C145 + C170 +
               C170 + C122 * C161 + C138 * C146 + C171 + C171 + C123 * C162 +
               C140 * C147 + C172 + C172 + C124 * C163 + C142 * C148 + C173 +
               C173 + C125 * C164) *
                  C153513 * C153501 * C153413 * C1218 -
              (C142 * C315 + C352 + C352 + C125 * C339 + C140 * C316 + C353 +
               C353 + C124 * C340 + C138 * C317 + C354 + C354 + C123 * C341 +
               C136 * C318 + C355 + C355 + C122 * C342 + C134 * C319 + C356 +
               C356 + C121 * C343) *
                  C153513 * C153501 * C153413 * C1219 +
              (C134 * C320 + C357 + C357 + C121 * C344 + C136 * C321 + C358 +
               C358 + C122 * C345 + C138 * C322 + C359 + C359 + C123 * C346 +
               C140 * C323 + C360 + C360 + C124 * C347 + C142 * C324 + C361 +
               C361 + C125 * C348) *
                  C153513 * C153501 * C153413 * C1220 -
              (C142 * C1223 + C1239 + C1239 + C125 * C1233 + C140 * C1224 +
               C1240 + C1240 + C124 * C1234 + C138 * C1225 + C1241 + C1241 +
               C123 * C1235 + C136 * C1226 + C1242 + C1242 + C122 * C1236 +
               C134 * C1227 + C1243 + C1243 + C121 * C1237) *
                  C153513 * C153501 * C153413 * C1221) *
             C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C144 + C169 + C169 + C121 * C160 + C136 * C145 + C170 +
            C170 + C122 * C161 + C138 * C146 + C171 + C171 + C123 * C162 +
            C140 * C147 + C172 + C172 + C124 * C163 + C142 * C148 + C173 +
            C173 + C125 * C164) *
               C153513 * C153501 * C493 -
           (C142 * C496 + C533 + C533 + C125 * C520 + C140 * C497 + C534 +
            C534 + C124 * C521 + C138 * C498 + C535 + C535 + C123 * C522 +
            C136 * C499 + C536 + C536 + C122 * C523 + C134 * C500 + C537 +
            C537 + C121 * C524) *
               C153513 * C153501 * C494 +
           (C134 * C501 + C538 + C538 + C121 * C525 + C136 * C502 + C539 +
            C539 + C122 * C526 + C138 * C503 + C540 + C540 + C123 * C527 +
            C140 * C504 + C541 + C541 + C124 * C528 + C142 * C505 + C542 +
            C542 + C125 * C529) *
               C153513 * C153501 * C495) *
              C1131 +
          ((C134 * C981 + C1000 + C1000 + C121 * C993 + C136 * C982 + C1001 +
            C1001 + C122 * C994 + C138 * C983 + C1002 + C1002 + C123 * C995 +
            C140 * C984 + C1003 + C1003 + C124 * C996 + C142 * C985 + C1004 +
            C1004 + C125 * C997) *
               C153513 * C153501 * C494 -
           (C142 * C315 + C352 + C352 + C125 * C339 + C140 * C316 + C353 +
            C353 + C124 * C340 + C138 * C317 + C354 + C354 + C123 * C341 +
            C136 * C318 + C355 + C355 + C122 * C342 + C134 * C319 + C356 +
            C356 + C121 * C343) *
               C153513 * C153501 * C493 -
           (C142 * C1365 + C1381 + C1381 + C125 * C1375 + C140 * C1366 + C1382 +
            C1382 + C124 * C1376 + C138 * C1367 + C1383 + C1383 + C123 * C1377 +
            C136 * C1368 + C1384 + C1384 + C122 * C1378 + C134 * C1369 + C1385 +
            C1385 + C121 * C1379) *
               C153513 * C153501 * C495) *
              C153449) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 +
             C2737 + C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
             C153761 * C162) *
                C153513 * C153812 +
            (C3086 + C3087 + C3088) * C153513 * C153800 + C3108 * C153774) *
               C153413 * C1131 -
           ((C3092 + C3093 + C3094) * C153513 * C153774 +
            (C3091 + C3090 + C3089) * C153513 * C153800 +
            (C3088 + C3087 + C3086) * C153513 * C153812) *
               C153413 * C153449) *
              C1133 +
          (((C3095 + C3096 + C3097) * C153513 * C153812 +
            (C3098 + C3099 + C3100) * C153513 * C153800 +
            (C3101 + C3102 + C3103) * C153513 * C153774) *
               C153413 * C153449 -
           (C3109 * C153774 + (C3097 + C3096 + C3095) * C153513 * C153800 +
            (C2733 * C147 + C2751 + C2751 + C153761 * C163 + C2731 * C146 +
             C2752 + C2752 + C2724 * C162 + C2729 * C145 + C2753 + C2753 +
             C2723 * C161) *
                C153513 * C153812) *
               C153413 * C1131) *
              C1134 +
          (((C2729 * C146 + C2754 + C2754 + C2723 * C162 + C2731 * C147 +
             C2755 + C2755 + C2724 * C163 + C2733 * C148 + C2756 + C2756 +
             C153761 * C164) *
                C153513 * C153812 +
            (C3621 + C3622 + C3623) * C153513 * C153800 +
            (C3624 + C3625 + C3626) * C153513 * C153774) *
               C153413 * C1131 -
           ((C2733 * C1223 + C3606 + C3606 + C153761 * C1233 + C2731 * C1224 +
             C3607 + C3607 + C2724 * C1234 + C2729 * C1225 + C3608 + C3608 +
             C2723 * C1235) *
                C153513 * C153774 +
            (C3626 + C3625 + C3624) * C153513 * C153800 +
            (C3623 + C3622 + C3621) * C153513 * C153812) *
               C153413 * C153449) *
              C1135)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 + C2737 +
            C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
            C153761 * C162) *
               C153513 * C153812 +
           (C3086 + C3087 + C3088) * C153513 * C153800 + C3108 * C153774) *
              C153413 * C1218 -
          (C4609 * C153774 + (C3091 + C3090 + C3089) * C153513 * C153800 +
           (C3088 + C3087 + C3086) * C153513 * C153812) *
              C153413 * C1219 +
          (C3108 * C153812 + (C3094 + C3093 + C3092) * C153513 * C153800 +
           (C4613 + C4614 + C4615) * C153513 * C153774) *
              C153413 * C1220 -
          ((C2733 * C4585 + C4602 + C4602 + C153761 * C4591 + C2731 * C4586 +
            C4603 + C4603 + C2724 * C4592 + C2729 * C4587 + C4604 + C4604 +
            C2723 * C4593) *
               C153513 * C153774 +
           (C4615 + C4614 + C4613) * C153513 * C153800 + C4609 * C153812) *
              C153413 * C1221) *
         C153378) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 +
             C2737 + C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
             C153761 * C162) *
                C153513 * C153812 +
            (C3086 + C3087 + C3088) * C153513 * C153800 + C3108 * C153774) *
               C493 -
           ((C4210 + C4211 + C4212) * C153513 * C153774 +
            (C4213 + C4214 + C4215) * C153513 * C153800 +
            (C2733 * C498 + C3346 + C3346 + C153761 * C522 + C2731 * C499 +
             C3347 + C3347 + C2724 * C523 + C2729 * C500 + C3348 + C3348 +
             C2723 * C524) *
                C153513 * C153812) *
               C494 +
           ((C2729 * C501 + C3349 + C3349 + C2723 * C525 + C2731 * C502 +
             C3350 + C3350 + C2724 * C526 + C2733 * C503 + C3351 + C3351 +
             C153761 * C527) *
                C153513 * C153812 +
            (C4870 + C4871 + C4872) * C153513 * C153800 +
            (C4873 + C4874 + C4875) * C153513 * C153774) *
               C495) *
              C1131 +
          (((C4215 + C4214 + C4213) * C153513 * C153812 +
            (C4212 + C4211 + C4210) * C153513 * C153800 +
            (C2729 * C4143 + C4168 + C4168 + C2723 * C4151 + C2731 * C4144 +
             C4169 + C4169 + C2724 * C4152 + C2733 * C4145 + C4170 + C4170 +
             C153761 * C4153) *
                C153513 * C153774) *
               C494 -
           (C4609 * C153774 + (C3091 + C3090 + C3089) * C153513 * C153800 +
            (C3088 + C3087 + C3086) * C153513 * C153812) *
               C493 -
           ((C2733 * C4833 + C4855 + C4855 + C153761 * C4839 + C2731 * C4834 +
             C4856 + C4856 + C2724 * C4840 + C2729 * C4835 + C4857 + C4857 +
             C2723 * C4841) *
                C153513 * C153774 +
            (C4875 + C4874 + C4873) * C153513 * C153800 +
            (C4872 + C4871 + C4870) * C153513 * C153812) *
               C495) *
              C153449) *
         C153378) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
             C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 +
             C23999 + C153761 * C162) *
                C153513 * C23987 +
            (C24335 + C24336 + C24337) * C153513 * C23988 + C24357 * C153774) *
               C153413 * C1131 -
           ((C24341 + C24342 + C24343) * C153513 * C153774 +
            (C24340 + C24339 + C24338) * C153513 * C23988 +
            (C24337 + C24336 + C24335) * C153513 * C23987) *
               C153413 * C153449) *
              C1133 +
          (((C24344 + C24345 + C24346) * C153513 * C23987 +
            (C24347 + C24348 + C24349) * C153513 * C23988 +
            (C24350 + C24351 + C24352) * C153513 * C153774) *
               C153413 * C153449 -
           (C24358 * C153774 + (C24346 + C24345 + C24344) * C153513 * C23988 +
            (C23994 * C147 + C24012 + C24012 + C153761 * C163 + C23992 * C146 +
             C24013 + C24013 + C153790 * C162 + C23990 * C145 + C24014 +
             C24014 + C153809 * C161) *
                C153513 * C23987) *
               C153413 * C1131) *
              C1134 +
          (((C23990 * C146 + C24015 + C24015 + C153809 * C162 + C23992 * C147 +
             C24016 + C24016 + C153790 * C163 + C23994 * C148 + C24017 +
             C24017 + C153761 * C164) *
                C153513 * C23987 +
            (C24858 + C24859 + C24860) * C153513 * C23988 +
            (C24861 + C24862 + C24863) * C153513 * C153774) *
               C153413 * C1131 -
           ((C23994 * C1223 + C24843 + C24843 + C153761 * C1233 +
             C23992 * C1224 + C24844 + C24844 + C153790 * C1234 +
             C23990 * C1225 + C24845 + C24845 + C153809 * C1235) *
                C153513 * C153774 +
            (C24863 + C24862 + C24861) * C153513 * C23988 +
            (C24860 + C24859 + C24858) * C153513 * C23987) *
               C153413 * C153449) *
              C1135)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
            C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 + C23999 +
            C153761 * C162) *
               C153513 * C23987 +
           (C24335 + C24336 + C24337) * C153513 * C23988 + C24357 * C153774) *
              C153413 * C1218 -
          (C25825 * C153774 + (C24340 + C24339 + C24338) * C153513 * C23988 +
           (C24337 + C24336 + C24335) * C153513 * C23987) *
              C153413 * C1219 +
          (C24357 * C23987 + (C24343 + C24342 + C24341) * C153513 * C23988 +
           (C25829 + C25830 + C25831) * C153513 * C153774) *
              C153413 * C1220 -
          ((C23994 * C4585 + C25818 + C25818 + C153761 * C4591 +
            C23992 * C4586 + C25819 + C25819 + C153790 * C4592 +
            C23990 * C4587 + C25820 + C25820 + C153809 * C4593) *
               C153513 * C153774 +
           (C25831 + C25830 + C25829) * C153513 * C23988 + C25825 * C23987) *
              C153413 * C1221) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
             C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 +
             C23999 + C153761 * C162) *
                C153513 * C23987 +
            (C24335 + C24336 + C24337) * C153513 * C23988 + C24357 * C153774) *
               C493 -
           ((C25435 + C25436 + C25437) * C153513 * C153774 +
            (C25438 + C25439 + C25440) * C153513 * C23988 +
            (C23994 * C498 + C24583 + C24583 + C153761 * C522 + C23992 * C499 +
             C24584 + C24584 + C153790 * C523 + C23990 * C500 + C24585 +
             C24585 + C153809 * C524) *
                C153513 * C23987) *
               C494 +
           ((C23990 * C501 + C24586 + C24586 + C153809 * C525 + C23992 * C502 +
             C24587 + C24587 + C153790 * C526 + C23994 * C503 + C24588 +
             C24588 + C153761 * C527) *
                C153513 * C23987 +
            (C26077 + C26078 + C26079) * C153513 * C23988 +
            (C26080 + C26081 + C26082) * C153513 * C153774) *
               C495) *
              C1131 +
          (((C25440 + C25439 + C25438) * C153513 * C23987 +
            (C25437 + C25436 + C25435) * C153513 * C23988 +
            (C23990 * C4143 + C25393 + C25393 + C153809 * C4151 +
             C23992 * C4144 + C25394 + C25394 + C153790 * C4152 +
             C23994 * C4145 + C25395 + C25395 + C153761 * C4153) *
                C153513 * C153774) *
               C494 -
           (C25825 * C153774 + (C24340 + C24339 + C24338) * C153513 * C23988 +
            (C24337 + C24336 + C24335) * C153513 * C23987) *
               C493 -
           ((C23994 * C4833 + C26062 + C26062 + C153761 * C4839 +
             C23992 * C4834 + C26063 + C26063 + C153790 * C4840 +
             C23990 * C4835 + C26064 + C26064 + C153809 * C4841) *
                C153513 * C153774 +
            (C26082 + C26081 + C26080) * C153513 * C23988 +
            (C26079 + C26078 + C26077) * C153513 * C23987) *
               C495) *
              C153449) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153513 *
                C28229 +
            C28439 * C28230 + C28440 * C28231 + C28441 * C28232 +
            C28442 * C28233) *
               C153413 * C1131 -
           (C28443 * C28233 + C28442 * C28232 + C28441 * C28231 +
            C28440 * C28230 + C28439 * C28229) *
               C153413 * C153449) *
              C1133 +
          ((C28444 * C28229 + C28445 * C28230 + C28446 * C28231 +
            C28447 * C28232 + C28448 * C28233) *
               C153413 * C153449 -
           (C28447 * C28233 + C28446 * C28232 + C28445 * C28231 +
            C28444 * C28230 +
            (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C153513 *
                C28229) *
               C153413 * C1131) *
              C1134 +
          (((C28234 * C146 + C28247 + C28247 + C153338 * C162) * C153513 *
                C28229 +
            C28740 * C28230 + C28741 * C28231 + C28742 * C28232 +
            C28743 * C28233) *
               C153413 * C1131 -
           ((C28234 * C4585 + C28727 + C28727 + C153338 * C4591) * C153513 *
                C28233 +
            C28743 * C28232 + C28742 * C28231 + C28741 * C28230 +
            C28740 * C28229) *
               C153413 * C153449) *
              C1135)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153513 *
               C28229 +
           C28439 * C28230 + C28440 * C28231 + C28441 * C28232 +
           C28442 * C28233) *
              C153413 * C1218 -
          (C28443 * C28233 + C28442 * C28232 + C28441 * C28231 +
           C28440 * C28230 + C28439 * C28229) *
              C153413 * C1219 +
          (C28440 * C28229 + C28441 * C28230 + C28442 * C28231 +
           C28443 * C28232 + C29302 * C28233) *
              C153413 * C1220 -
          ((C28234 * C29292 + C29298 + C29298 + C153338 * C29294) * C153513 *
               C28233 +
           C29302 * C28232 + C28443 * C28231 + C28442 * C28230 +
           C28441 * C28229) *
              C153413 * C1221) *
         C153378) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153513 *
                C28229 +
            C28439 * C28230 + C28440 * C28231 + C28441 * C28232 +
            C28442 * C28233) *
               C493 -
           (C29081 * C28233 + C29082 * C28232 + C29083 * C28231 +
            C29084 * C28230 +
            (C28234 * C500 + C28581 + C28581 + C153338 * C524) * C153513 *
                C28229) *
               C494 +
           ((C28234 * C501 + C28582 + C28582 + C153338 * C525) * C153513 *
                C28229 +
            C29449 * C28230 + C29450 * C28231 + C29451 * C28232 +
            C29452 * C28233) *
               C495) *
              C1131 +
          ((C29084 * C28229 + C29083 * C28230 + C29082 * C28231 +
            C29081 * C28232 +
            (C28234 * C29032 + C29047 + C29047 + C153338 * C29036) * C153513 *
                C28233) *
               C494 -
           (C28443 * C28233 + C28442 * C28232 + C28441 * C28231 +
            C28440 * C28230 + C28439 * C28229) *
               C493 -
           ((C28234 * C29424 + C29436 + C29436 + C153338 * C29426) * C153513 *
                C28233 +
            C29452 * C28232 + C29451 * C28231 + C29450 * C28230 +
            C29449 * C28229) *
               C495) *
              C153449) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
             C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 +
             C23999 + C153761 * C162) *
                C47673 +
            (C48203 + C48204 + C48205) * C47674 + C48223 * C153777) *
               C153501 * C153413 * C1131 -
           ((C26079 + C26078 + C26077) * C153777 +
            (C25438 + C25439 + C25440) * C47674 +
            (C24337 + C24336 + C24335) * C47673) *
               C153501 * C153413 * C153449) *
              C1133 +
          (((C24344 + C24345 + C24346) * C47673 +
            (C25441 + C25442 + C25443) * C47674 +
            (C49002 + C49003 + C49004) * C153777) *
               C153501 * C153413 * C153449 -
           (C48224 * C153777 + (C48214 + C48213 + C48212) * C47674 +
            (C23994 * C147 + C24012 + C24012 + C153761 * C163 + C23992 * C146 +
             C24013 + C24013 + C153790 * C162 + C23990 * C145 + C24014 +
             C24014 + C153809 * C161) *
                C47673) *
               C153501 * C153413 * C1131) *
              C1134 +
          (((C23990 * C146 + C24015 + C24015 + C153809 * C162 + C23992 * C147 +
             C24016 + C24016 + C153790 * C163 + C23994 * C148 + C24017 +
             C24017 + C153761 * C164) *
                C47673 +
            (C48691 + C48692 + C48693) * C47674 +
            (C48694 + C48695 + C48696) * C153777) *
               C153501 * C153413 * C1131 -
           ((C23994 * C1365 + C48443 + C48443 + C153761 * C1375 +
             C23992 * C1366 + C48444 + C48444 + C153790 * C1376 +
             C23990 * C1367 + C48445 + C48445 + C153809 * C1377) *
                C153777 +
            (C23994 * C985 + C25085 + C25085 + C153761 * C997 + C23992 * C984 +
             C25086 + C25086 + C153790 * C996 + C23990 * C983 + C25087 +
             C25087 + C153809 * C995) *
                C47674 +
            (C24860 + C24859 + C24858) * C47673) *
               C153501 * C153413 * C153449) *
              C1135)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
            C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 + C23999 +
            C153761 * C162) *
               C47673 +
           (C48203 + C48204 + C48205) * C47674 + C48223 * C153777) *
              C153501 * C153413 * C1218 -
          ((C26079 + C26078 + C26077) * C153777 +
           (C25438 + C25439 + C25440) * C47674 +
           (C24337 + C24336 + C24335) * C47673) *
              C153501 * C153413 * C1219 +
          (C24355 * C47673 + (C25437 + C25436 + C25435) * C47674 +
           (C26080 + C26081 + C26082) * C153777) *
              C153501 * C153413 * C1220 -
          ((C23994 * C4833 + C26062 + C26062 + C153761 * C4839 +
            C23992 * C4834 + C26063 + C26063 + C153790 * C4840 +
            C23990 * C4835 + C26064 + C26064 + C153809 * C4841) *
               C153777 +
           (C26829 + C26828 + C26827) * C47674 + C25821 * C47673) *
              C153501 * C153413 * C1221) *
         C153378) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
             C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 +
             C23999 + C153761 * C162) *
                C47673 +
            (C48203 + C48204 + C48205) * C47674 + C48223 * C153777) *
               C153501 * C493 -
           ((C48209 + C48210 + C48211) * C153777 +
            (C48208 + C48207 + C48206) * C47674 +
            (C48205 + C48204 + C48203) * C47673) *
               C153501 * C494 +
           (C48223 * C47673 + (C48211 + C48210 + C48209) * C47674 +
            (C23990 * C7560 + C48140 + C48140 + C153809 * C7568 +
             C23992 * C7561 + C48141 + C48141 + C153790 * C7569 +
             C23994 * C7562 + C48142 + C48142 + C153761 * C7570) *
                C153777) *
               C153501 * C495) *
              C1131 +
          (((C25440 + C25439 + C25438) * C47673 +
            (C26077 + C26078 + C26079) * C47674 +
            (C49604 + C49605 + C49606) * C153777) *
               C153501 * C494 -
           (C49600 * C153777 + (C25438 + C25439 + C25440) * C47674 +
            (C24337 + C24336 + C24335) * C47673) *
               C153501 * C493 -
           ((C23994 * C9040 + C49594 + C49594 + C153761 * C9046 +
             C23992 * C9041 + C49595 + C49595 + C153790 * C9047 +
             C23990 * C9042 + C49596 + C49596 + C153809 * C9048) *
                C153777 +
            (C49606 + C49605 + C49604) * C47674 + C49600 * C47673) *
               C153501 * C495) *
              C153449) *
         C153378) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C47673 +
             C31295 * C47674 + C31296 * C153777) *
                C153812 +
            (C52025 + C52026 + C52027) * C153800 + C52045 * C153774) *
               C153413 * C1131 -
           ((C52031 + C52032 + C52033) * C153774 +
            (C52030 + C52029 + C52028) * C153800 +
            (C52027 + C52026 + C52025) * C153812) *
               C153413 * C153449) *
              C1133 +
          (((C52034 + C52035 + C52036) * C153812 +
            (C52037 + C52038 + C52039) * C153800 +
            (C52040 + C52041 + C52042) * C153774) *
               C153413 * C153449 -
           (C52046 * C153774 + (C52036 + C52035 + C52034) * C153800 +
            (C31301 * C153777 + C31300 * C47674 +
             (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C47673) *
                C153812) *
               C153413 * C1131) *
              C1134 +
          ((((C28234 * C146 + C28247 + C28247 + C153338 * C162) * C47673 +
             C31779 * C47674 + C31780 * C153777) *
                C153812 +
            (C52483 + C52484 + C52485) * C153800 +
            (C52486 + C52487 + C52488) * C153774) *
               C153413 * C1131 -
           (((C28234 * C4833 + C31533 + C31533 + C153338 * C4839) * C153777 +
             C44720 * C47674 + C28738 * C47673) *
                C153774 +
            (C52488 + C52487 + C52486) * C153800 +
            (C52485 + C52484 + C52483) * C153812) *
               C153413 * C153449) *
              C1135)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C47673 +
            C31295 * C47674 + C31296 * C153777) *
               C153812 +
           (C52025 + C52026 + C52027) * C153800 + C52045 * C153774) *
              C153413 * C1218 -
          (C53377 * C153774 + (C52030 + C52029 + C52028) * C153800 +
           (C52027 + C52026 + C52025) * C153812) *
              C153413 * C1219 +
          (C52045 * C153812 + (C52033 + C52032 + C52031) * C153800 +
           (C53374 + C53375 + C53376) * C153774) *
              C153413 * C1220 -
          (((C28234 * C29424 + C29436 + C29436 + C153338 * C29426) * C153777 +
            C29867 * C47674 + C28433 * C47673) *
               C153774 +
           (C53376 + C53375 + C53374) * C153800 + C53377 * C153812) *
              C153413 * C1221) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C47673 +
             C31295 * C47674 + C31296 * C153777) *
                C153812 +
            (C52025 + C52026 + C52027) * C153800 + C52045 * C153774) *
               C493 -
           ((C52997 + C52998 + C52999) * C153774 +
            (C53000 + C53001 + C53002) * C153800 +
            (C31299 * C153777 + C31296 * C47674 + C31295 * C47673) * C153812) *
               C494 +
           ((C31296 * C47673 + C31299 * C47674 + C34025 * C153777) * C153812 +
            (C53596 + C53597 + C53598) * C153800 +
            (C53599 + C53600 + C53601) * C153774) *
               C495) *
              C1131 +
          (((C53002 + C53001 + C53000) * C153812 +
            (C52999 + C52998 + C52997) * C153800 +
            (C29074 * C47673 + C29447 * C47674 + C32696 * C153777) * C153774) *
               C494 -
           (C53377 * C153774 + (C52030 + C52029 + C52028) * C153800 +
            (C52027 + C52026 + C52025) * C153812) *
               C493 -
           (((C28234 * C32673 + C32687 + C32687 + C153338 * C32675) * C153777 +
             C32696 * C47674 + C29447 * C47673) *
                C153774 +
            (C53601 + C53600 + C53599) * C153800 +
            (C53598 + C53597 + C53596) * C153812) *
               C495) *
              C153449) *
         C153378) /
            (p * q * std::sqrt(p + q));
    d2ee[218] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 +
              C2737 + C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
              C153761 * C162) *
                 C153513 * C153812 +
             (C3086 + C3087 + C3088) * C153513 * C153800 + C3108 * C153774) *
                C153725 -
            ((C4210 + C4211 + C4212) * C153513 * C153774 +
             (C4213 + C4214 + C4215) * C153513 * C153800 +
             (C2733 * C498 + C3346 + C3346 + C153761 * C522 + C2731 * C499 +
              C3347 + C3347 + C2724 * C523 + C2729 * C500 + C3348 + C3348 +
              C2723 * C524) *
                 C153513 * C153812) *
                C153477) *
               C1131 +
           (((C4215 + C4214 + C4213) * C153513 * C153812 +
             (C4212 + C4211 + C4210) * C153513 * C153800 +
             (C2729 * C4143 + C4168 + C4168 + C2723 * C4151 + C2731 * C4144 +
              C4169 + C4169 + C2724 * C4152 + C2733 * C4145 + C4170 + C4170 +
              C153761 * C4153) *
                 C153513 * C153774) *
                C153477 -
            (C4609 * C153774 + (C3091 + C3090 + C3089) * C153513 * C153800 +
             (C3088 + C3087 + C3086) * C153513 * C153812) *
                C153725) *
               C153449) *
              C153716 +
          ((((C2729 * C499 + C3358 + C3358 + C2723 * C523 + C2731 * C498 +
              C3359 + C3359 + C2724 * C522 + C2733 * C497 + C3360 + C3360 +
              C153761 * C521) *
                 C153513 * C153812 +
             (C4216 + C4217 + C4218) * C153513 * C153800 +
             (C4219 + C4220 + C4221) * C153513 * C153774) *
                C153477 -
            (C3109 * C153774 + (C3097 + C3096 + C3095) * C153513 * C153800 +
             (C2733 * C147 + C2751 + C2751 + C153761 * C163 + C2731 * C146 +
              C2752 + C2752 + C2724 * C162 + C2729 * C145 + C2753 + C2753 +
              C2723 * C161) *
                 C153513 * C153812) *
                C153725) *
               C1131 +
           (((C3095 + C3096 + C3097) * C153513 * C153812 +
             (C3098 + C3099 + C3100) * C153513 * C153800 +
             (C3101 + C3102 + C3103) * C153513 * C153774) *
                C153725 -
            ((C2733 * C4146 + C4183 + C4183 + C153761 * C4154 + C2731 * C4145 +
              C4184 + C4184 + C2724 * C4153 + C2729 * C4144 + C4185 + C4185 +
              C2723 * C4152) *
                 C153513 * C153774 +
             (C4221 + C4220 + C4219) * C153513 * C153800 +
             (C4218 + C4217 + C4216) * C153513 * C153812) *
                C153477) *
               C153449) *
              C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 + C169 + C169 + C121 * C160 + C136 * C145 + C170 +
             C170 + C122 * C161 + C138 * C146 + C171 + C171 + C123 * C162 +
             C140 * C147 + C172 + C172 + C124 * C163 + C142 * C148 + C173 +
             C173 + C125 * C164) *
                C153513 * C153501 * C153725 -
            (C142 * C496 + C533 + C533 + C125 * C520 + C140 * C497 + C534 +
             C534 + C124 * C521 + C138 * C498 + C535 + C535 + C123 * C522 +
             C136 * C499 + C536 + C536 + C122 * C523 + C134 * C500 + C537 +
             C537 + C121 * C524) *
                C153513 * C153501 * C153477) *
               C1131 +
           ((C134 * C981 + C1000 + C1000 + C121 * C993 + C136 * C982 + C1001 +
             C1001 + C122 * C994 + C138 * C983 + C1002 + C1002 + C123 * C995 +
             C140 * C984 + C1003 + C1003 + C124 * C996 + C142 * C985 + C1004 +
             C1004 + C125 * C997) *
                C153513 * C153501 * C153477 -
            (C142 * C315 + C352 + C352 + C125 * C339 + C140 * C316 + C353 +
             C353 + C124 * C340 + C138 * C317 + C354 + C354 + C123 * C341 +
             C136 * C318 + C355 + C355 + C122 * C342 + C134 * C319 + C356 +
             C356 + C121 * C343) *
                C153513 * C153501 * C153725) *
               C153449) *
              C153716 +
          (((C134 * C499 + C543 + C543 + C121 * C523 + C136 * C498 + C544 +
             C544 + C122 * C522 + C138 * C497 + C545 + C545 + C123 * C521 +
             C140 * C496 + C546 + C546 + C124 * C520 + C142 * C506 + C547 +
             C547 + C125 * C530) *
                C153513 * C153501 * C153477 -
            (C142 * C149 + C174 + C174 + C125 * C165 + C140 * C148 + C175 +
             C175 + C124 * C164 + C138 * C147 + C176 + C176 + C123 * C163 +
             C136 * C146 + C177 + C177 + C122 * C162 + C134 * C145 + C178 +
             C178 + C121 * C161) *
                C153513 * C153501 * C153725) *
               C1131 +
           ((C134 * C318 + C362 + C362 + C121 * C342 + C136 * C317 + C363 +
             C363 + C122 * C341 + C138 * C316 + C364 + C364 + C123 * C340 +
             C140 * C315 + C365 + C365 + C124 * C339 + C142 * C325 + C366 +
             C366 + C125 * C349) *
                C153513 * C153501 * C153725 -
            (C142 * C986 + C1005 + C1005 + C125 * C998 + C140 * C985 + C1006 +
             C1006 + C124 * C997 + C138 * C984 + C1007 + C1007 + C123 * C996 +
             C136 * C983 + C1008 + C1008 + C122 * C995 + C134 * C982 + C1009 +
             C1009 + C121 * C994) *
                C153513 * C153501 * C153477) *
               C153449) *
              C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
              C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 +
              C23999 + C153761 * C162) *
                 C153513 * C23987 +
             (C24335 + C24336 + C24337) * C153513 * C23988 + C24357 * C153774) *
                C153725 -
            ((C25435 + C25436 + C25437) * C153513 * C153774 +
             (C25438 + C25439 + C25440) * C153513 * C23988 +
             (C23994 * C498 + C24583 + C24583 + C153761 * C522 + C23992 * C499 +
              C24584 + C24584 + C153790 * C523 + C23990 * C500 + C24585 +
              C24585 + C153809 * C524) *
                 C153513 * C23987) *
                C153477) *
               C1131 +
           (((C25440 + C25439 + C25438) * C153513 * C23987 +
             (C25437 + C25436 + C25435) * C153513 * C23988 +
             (C23990 * C4143 + C25393 + C25393 + C153809 * C4151 +
              C23992 * C4144 + C25394 + C25394 + C153790 * C4152 +
              C23994 * C4145 + C25395 + C25395 + C153761 * C4153) *
                 C153513 * C153774) *
                C153477 -
            (C25825 * C153774 + (C24340 + C24339 + C24338) * C153513 * C23988 +
             (C24337 + C24336 + C24335) * C153513 * C23987) *
                C153725) *
               C153449) *
              C153716 +
          ((((C23990 * C499 + C24595 + C24595 + C153809 * C523 + C23992 * C498 +
              C24596 + C24596 + C153790 * C522 + C23994 * C497 + C24597 +
              C24597 + C153761 * C521) *
                 C153513 * C23987 +
             (C25441 + C25442 + C25443) * C153513 * C23988 +
             (C25444 + C25445 + C25446) * C153513 * C153774) *
                C153477 -
            (C24358 * C153774 + (C24346 + C24345 + C24344) * C153513 * C23988 +
             (C23994 * C147 + C24012 + C24012 + C153761 * C163 + C23992 * C146 +
              C24013 + C24013 + C153790 * C162 + C23990 * C145 + C24014 +
              C24014 + C153809 * C161) *
                 C153513 * C23987) *
                C153725) *
               C1131 +
           (((C24344 + C24345 + C24346) * C153513 * C23987 +
             (C24347 + C24348 + C24349) * C153513 * C23988 +
             (C24350 + C24351 + C24352) * C153513 * C153774) *
                C153725 -
            ((C23994 * C4146 + C25408 + C25408 + C153761 * C4154 +
              C23992 * C4145 + C25409 + C25409 + C153790 * C4153 +
              C23990 * C4144 + C25410 + C25410 + C153809 * C4152) *
                 C153513 * C153774 +
             (C25446 + C25445 + C25444) * C153513 * C23988 +
             (C25443 + C25442 + C25441) * C153513 * C23987) *
                C153477) *
               C153449) *
              C153384)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153513 *
                 C28229 +
             C28439 * C28230 + C28440 * C28231 + C28441 * C28232 +
             C28442 * C28233) *
                C153725 -
            (C29081 * C28233 + C29082 * C28232 + C29083 * C28231 +
             C29084 * C28230 +
             (C28234 * C500 + C28581 + C28581 + C153338 * C524) * C153513 *
                 C28229) *
                C153477) *
               C1131 +
           ((C29084 * C28229 + C29083 * C28230 + C29082 * C28231 +
             C29081 * C28232 +
             (C28234 * C29032 + C29047 + C29047 + C153338 * C29036) * C153513 *
                 C28233) *
                C153477 -
            (C28443 * C28233 + C28442 * C28232 + C28441 * C28231 +
             C28440 * C28230 + C28439 * C28229) *
                C153725) *
               C153449) *
              C153716 +
          ((((C28234 * C499 + C28587 + C28587 + C153338 * C523) * C153513 *
                 C28229 +
             C29085 * C28230 + C29086 * C28231 + C29087 * C28232 +
             C29088 * C28233) *
                C153477 -
            (C28447 * C28233 + C28446 * C28232 + C28445 * C28231 +
             C28444 * C28230 +
             (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C153513 *
                 C28229) *
                C153725) *
               C1131 +
           ((C28444 * C28229 + C28445 * C28230 + C28446 * C28231 +
             C28447 * C28232 + C28448 * C28233) *
                C153725 -
            ((C28234 * C29033 + C29056 + C29056 + C153338 * C29037) * C153513 *
                 C28233 +
             C29088 * C28232 + C29087 * C28231 + C29086 * C28230 +
             C29085 * C28229) *
                C153477) *
               C153449) *
              C153384)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
              C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 +
              C23999 + C153761 * C162) *
                 C47673 +
             (C48203 + C48204 + C48205) * C47674 + C48223 * C153777) *
                C153501 * C153725 -
            ((C48209 + C48210 + C48211) * C153777 +
             (C48208 + C48207 + C48206) * C47674 +
             (C48205 + C48204 + C48203) * C47673) *
                C153501 * C153477) *
               C1131 +
           (((C25440 + C25439 + C25438) * C47673 +
             (C26077 + C26078 + C26079) * C47674 +
             (C49604 + C49605 + C49606) * C153777) *
                C153501 * C153477 -
            (C49600 * C153777 + (C25438 + C25439 + C25440) * C47674 +
             (C24337 + C24336 + C24335) * C47673) *
                C153501 * C153725) *
               C153449) *
              C153716 +
          ((((C48212 + C48213 + C48214) * C47673 +
             (C48215 + C48216 + C48217) * C47674 +
             (C48218 + C48219 + C48220) * C153777) *
                C153501 * C153477 -
            (C48224 * C153777 + (C48214 + C48213 + C48212) * C47674 +
             (C23994 * C147 + C24012 + C24012 + C153761 * C163 + C23992 * C146 +
              C24013 + C24013 + C153790 * C162 + C23990 * C145 + C24014 +
              C24014 + C153809 * C161) *
                 C47673) *
                C153501 * C153725) *
               C1131 +
           (((C24344 + C24345 + C24346) * C47673 +
             (C25441 + C25442 + C25443) * C47674 +
             (C49002 + C49003 + C49004) * C153777) *
                C153501 * C153725 -
            ((C23994 * C8437 + C48993 + C48993 + C153761 * C8439 +
              C23992 * C6216 + C48994 + C48994 + C153790 * C6228 +
              C23990 * C6217 + C48995 + C48995 + C153809 * C6229) *
                 C153777 +
             (C49004 + C49003 + C49002) * C47674 +
             (C25443 + C25442 + C25441) * C47673) *
                C153501 * C153477) *
               C153449) *
              C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C47673 +
              C31295 * C47674 + C31296 * C153777) *
                 C153812 +
             (C52025 + C52026 + C52027) * C153800 + C52045 * C153774) *
                C153725 -
            ((C52997 + C52998 + C52999) * C153774 +
             (C53000 + C53001 + C53002) * C153800 +
             (C31299 * C153777 + C31296 * C47674 + C31295 * C47673) * C153812) *
                C153477) *
               C1131 +
           (((C53002 + C53001 + C53000) * C153812 +
             (C52999 + C52998 + C52997) * C153800 +
             (C29074 * C47673 + C29447 * C47674 + C32696 * C153777) * C153774) *
                C153477 -
            (C53377 * C153774 + (C52030 + C52029 + C52028) * C153800 +
             (C52027 + C52026 + C52025) * C153812) *
                C153725) *
               C153449) *
              C153716 +
          ((((C31300 * C47673 + C31301 * C47674 + C31302 * C153777) * C153812 +
             (C53003 + C53004 + C53005) * C153800 +
             (C53006 + C53007 + C53008) * C153774) *
                C153477 -
            (C52046 * C153774 + (C52036 + C52035 + C52034) * C153800 +
             (C31301 * C153777 + C31300 * C47674 +
              (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C47673) *
                 C153812) *
                C153725) *
               C1131 +
           (((C52034 + C52035 + C52036) * C153812 +
             (C52037 + C52038 + C52039) * C153800 +
             (C52040 + C52041 + C52042) * C153774) *
                C153725 -
            (((C28234 * C32070 + C32086 + C32086 + C153338 * C32072) * C153777 +
              C31017 * C47674 + C29079 * C47673) *
                 C153774 +
             (C53008 + C53007 + C53006) * C153800 +
             (C53005 + C53004 + C53003) * C153812) *
                C153477) *
               C153449) *
              C153384)) /
            (p * q * std::sqrt(p + q));
    d2ee[219] +=
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((C134 * C144 + C169 + C169 + C121 * C160 + C136 * C145 + C170 + C170 +
           C122 * C161 + C138 * C146 + C171 + C171 + C123 * C162 + C140 * C147 +
           C172 + C172 + C124 * C163 + C142 * C148 + C173 + C173 +
           C125 * C164) *
              C153513 * C153501 * C153413 * C1218 -
          (C142 * C315 + C352 + C352 + C125 * C339 + C140 * C316 + C353 + C353 +
           C124 * C340 + C138 * C317 + C354 + C354 + C123 * C341 + C136 * C318 +
           C355 + C355 + C122 * C342 + C134 * C319 + C356 + C356 +
           C121 * C343) *
              C153513 * C153501 * C153413 * C1219 +
          (C134 * C320 + C357 + C357 + C121 * C344 + C136 * C321 + C358 + C358 +
           C122 * C345 + C138 * C322 + C359 + C359 + C123 * C346 + C140 * C323 +
           C360 + C360 + C124 * C347 + C142 * C324 + C361 + C361 +
           C125 * C348) *
              C153513 * C153501 * C153413 * C1220 -
          (C142 * C1223 + C1239 + C1239 + C125 * C1233 + C140 * C1224 + C1240 +
           C1240 + C124 * C1234 + C138 * C1225 + C1241 + C1241 + C123 * C1235 +
           C136 * C1226 + C1242 + C1242 + C122 * C1236 + C134 * C1227 + C1243 +
           C1243 + C121 * C1237) *
              C153513 * C153501 * C153413 * C1221) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C144 + C169 + C169 + C121 * C160 + C136 * C145 + C170 +
            C170 + C122 * C161 + C138 * C146 + C171 + C171 + C123 * C162 +
            C140 * C147 + C172 + C172 + C124 * C163 + C142 * C148 + C173 +
            C173 + C125 * C164) *
               C153513 * C153501 * C153413 * C1131 -
           (C142 * C315 + C352 + C352 + C125 * C339 + C140 * C316 + C353 +
            C353 + C124 * C340 + C138 * C317 + C354 + C354 + C123 * C341 +
            C136 * C318 + C355 + C355 + C122 * C342 + C134 * C319 + C356 +
            C356 + C121 * C343) *
               C153513 * C153501 * C153413 * C153449) *
              C1133 +
          ((C134 * C318 + C362 + C362 + C121 * C342 + C136 * C317 + C363 +
            C363 + C122 * C341 + C138 * C316 + C364 + C364 + C123 * C340 +
            C140 * C315 + C365 + C365 + C124 * C339 + C142 * C325 + C366 +
            C366 + C125 * C349) *
               C153513 * C153501 * C153413 * C153449 -
           (C142 * C149 + C174 + C174 + C125 * C165 + C140 * C148 + C175 +
            C175 + C124 * C164 + C138 * C147 + C176 + C176 + C123 * C163 +
            C136 * C146 + C177 + C177 + C122 * C162 + C134 * C145 + C178 +
            C178 + C121 * C161) *
               C153513 * C153501 * C153413 * C1131) *
              C1134 +
          ((C134 * C146 + C179 + C179 + C121 * C162 + C136 * C147 + C180 +
            C180 + C122 * C163 + C138 * C148 + C181 + C181 + C123 * C164 +
            C140 * C149 + C182 + C182 + C124 * C165 + C142 * C150 + C183 +
            C183 + C125 * C166) *
               C153513 * C153501 * C153413 * C1131 -
           (C142 * C679 + C683 + C683 + C125 * C681 + C140 * C325 + C684 +
            C684 + C124 * C349 + C138 * C315 + C685 + C685 + C123 * C339 +
            C136 * C316 + C686 + C686 + C122 * C340 + C134 * C317 + C687 +
            C687 + C121 * C341) *
               C153513 * C153501 * C153413 * C153449) *
              C1135)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 +
             C2737 + C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
             C153761 * C162) *
                C153513 * C153812 +
            (C3086 + C3087 + C3088) * C153513 * C153800 + C3108 * C153774) *
               C153413 * C1131 -
           ((C3092 + C3093 + C3094) * C153513 * C153774 +
            (C3091 + C3090 + C3089) * C153513 * C153800 +
            (C3088 + C3087 + C3086) * C153513 * C153812) *
               C153413 * C153449) *
              C1133 +
          (((C3095 + C3096 + C3097) * C153513 * C153812 +
            (C3098 + C3099 + C3100) * C153513 * C153800 +
            (C3101 + C3102 + C3103) * C153513 * C153774) *
               C153413 * C153449 -
           (C3109 * C153774 + (C3097 + C3096 + C3095) * C153513 * C153800 +
            (C2733 * C147 + C2751 + C2751 + C153761 * C163 + C2731 * C146 +
             C2752 + C2752 + C2724 * C162 + C2729 * C145 + C2753 + C2753 +
             C2723 * C161) *
                C153513 * C153812) *
               C153413 * C1131) *
              C1134 +
          (((C2729 * C146 + C2754 + C2754 + C2723 * C162 + C2731 * C147 +
             C2755 + C2755 + C2724 * C163 + C2733 * C148 + C2756 + C2756 +
             C153761 * C164) *
                C153513 * C153812 +
            (C3621 + C3622 + C3623) * C153513 * C153800 +
            (C3624 + C3625 + C3626) * C153513 * C153774) *
               C153413 * C1131 -
           ((C2733 * C1223 + C3606 + C3606 + C153761 * C1233 + C2731 * C1224 +
             C3607 + C3607 + C2724 * C1234 + C2729 * C1225 + C3608 + C3608 +
             C2723 * C1235) *
                C153513 * C153774 +
            (C3626 + C3625 + C3624) * C153513 * C153800 +
            (C3623 + C3622 + C3621) * C153513 * C153812) *
               C153413 * C153449) *
              C1135)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 + C2737 +
            C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
            C153761 * C162) *
               C153513 * C153812 +
           (C3086 + C3087 + C3088) * C153513 * C153800 + C3108 * C153774) *
              C153413 * C1218 -
          (C4609 * C153774 + (C3091 + C3090 + C3089) * C153513 * C153800 +
           (C3088 + C3087 + C3086) * C153513 * C153812) *
              C153413 * C1219 +
          (C3108 * C153812 + (C3094 + C3093 + C3092) * C153513 * C153800 +
           (C4613 + C4614 + C4615) * C153513 * C153774) *
              C153413 * C1220 -
          ((C2733 * C4585 + C4602 + C4602 + C153761 * C4591 + C2731 * C4586 +
            C4603 + C4603 + C2724 * C4592 + C2729 * C4587 + C4604 + C4604 +
            C2723 * C4593) *
               C153513 * C153774 +
           (C4615 + C4614 + C4613) * C153513 * C153800 + C4609 * C153812) *
              C153413 * C1221) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
             C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 +
             C23999 + C153761 * C162) *
                C153513 * C23987 +
            (C24335 + C24336 + C24337) * C153513 * C23988 + C24357 * C153774) *
               C153413 * C1131 -
           ((C24341 + C24342 + C24343) * C153513 * C153774 +
            (C24340 + C24339 + C24338) * C153513 * C23988 +
            (C24337 + C24336 + C24335) * C153513 * C23987) *
               C153413 * C153449) *
              C1133 +
          (((C24344 + C24345 + C24346) * C153513 * C23987 +
            (C24347 + C24348 + C24349) * C153513 * C23988 +
            (C24350 + C24351 + C24352) * C153513 * C153774) *
               C153413 * C153449 -
           (C24358 * C153774 + (C24346 + C24345 + C24344) * C153513 * C23988 +
            (C23994 * C147 + C24012 + C24012 + C153761 * C163 + C23992 * C146 +
             C24013 + C24013 + C153790 * C162 + C23990 * C145 + C24014 +
             C24014 + C153809 * C161) *
                C153513 * C23987) *
               C153413 * C1131) *
              C1134 +
          (((C23990 * C146 + C24015 + C24015 + C153809 * C162 + C23992 * C147 +
             C24016 + C24016 + C153790 * C163 + C23994 * C148 + C24017 +
             C24017 + C153761 * C164) *
                C153513 * C23987 +
            (C24858 + C24859 + C24860) * C153513 * C23988 +
            (C24861 + C24862 + C24863) * C153513 * C153774) *
               C153413 * C1131 -
           ((C23994 * C1223 + C24843 + C24843 + C153761 * C1233 +
             C23992 * C1224 + C24844 + C24844 + C153790 * C1234 +
             C23990 * C1225 + C24845 + C24845 + C153809 * C1235) *
                C153513 * C153774 +
            (C24863 + C24862 + C24861) * C153513 * C23988 +
            (C24860 + C24859 + C24858) * C153513 * C23987) *
               C153413 * C153449) *
              C1135)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
            C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 + C23999 +
            C153761 * C162) *
               C153513 * C23987 +
           (C24335 + C24336 + C24337) * C153513 * C23988 + C24357 * C153774) *
              C153413 * C1218 -
          (C25825 * C153774 + (C24340 + C24339 + C24338) * C153513 * C23988 +
           (C24337 + C24336 + C24335) * C153513 * C23987) *
              C153413 * C1219 +
          (C24357 * C23987 + (C24343 + C24342 + C24341) * C153513 * C23988 +
           (C25829 + C25830 + C25831) * C153513 * C153774) *
              C153413 * C1220 -
          ((C23994 * C4585 + C25818 + C25818 + C153761 * C4591 +
            C23992 * C4586 + C25819 + C25819 + C153790 * C4592 +
            C23990 * C4587 + C25820 + C25820 + C153809 * C4593) *
               C153513 * C153774 +
           (C25831 + C25830 + C25829) * C153513 * C23988 + C25825 * C23987) *
              C153413 * C1221) *
         C153378) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153513 *
                C28229 +
            C28439 * C28230 + C28440 * C28231 + C28441 * C28232 +
            C28442 * C28233) *
               C153413 * C1131 -
           (C28443 * C28233 + C28442 * C28232 + C28441 * C28231 +
            C28440 * C28230 + C28439 * C28229) *
               C153413 * C153449) *
              C1133 +
          ((C28444 * C28229 + C28445 * C28230 + C28446 * C28231 +
            C28447 * C28232 + C28448 * C28233) *
               C153413 * C153449 -
           (C28447 * C28233 + C28446 * C28232 + C28445 * C28231 +
            C28444 * C28230 +
            (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C153513 *
                C28229) *
               C153413 * C1131) *
              C1134 +
          (((C28234 * C146 + C28247 + C28247 + C153338 * C162) * C153513 *
                C28229 +
            C28740 * C28230 + C28741 * C28231 + C28742 * C28232 +
            C28743 * C28233) *
               C153413 * C1131 -
           ((C28234 * C4585 + C28727 + C28727 + C153338 * C4591) * C153513 *
                C28233 +
            C28743 * C28232 + C28742 * C28231 + C28741 * C28230 +
            C28740 * C28229) *
               C153413 * C153449) *
              C1135)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153513 *
               C28229 +
           C28439 * C28230 + C28440 * C28231 + C28441 * C28232 +
           C28442 * C28233) *
              C153413 * C1218 -
          (C28443 * C28233 + C28442 * C28232 + C28441 * C28231 +
           C28440 * C28230 + C28439 * C28229) *
              C153413 * C1219 +
          (C28440 * C28229 + C28441 * C28230 + C28442 * C28231 +
           C28443 * C28232 + C29302 * C28233) *
              C153413 * C1220 -
          ((C28234 * C29292 + C29298 + C29298 + C153338 * C29294) * C153513 *
               C28233 +
           C29302 * C28232 + C28443 * C28231 + C28442 * C28230 +
           C28441 * C28229) *
              C153413 * C1221) *
         C153378) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
             C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 +
             C23999 + C153761 * C162) *
                C47673 +
            (C48203 + C48204 + C48205) * C47674 + C48223 * C153777) *
               C153501 * C153413 * C1131 -
           ((C26079 + C26078 + C26077) * C153777 +
            (C25438 + C25439 + C25440) * C47674 +
            (C24337 + C24336 + C24335) * C47673) *
               C153501 * C153413 * C153449) *
              C1133 +
          (((C24344 + C24345 + C24346) * C47673 +
            (C25441 + C25442 + C25443) * C47674 +
            (C49002 + C49003 + C49004) * C153777) *
               C153501 * C153413 * C153449 -
           (C48224 * C153777 + (C48214 + C48213 + C48212) * C47674 +
            (C23994 * C147 + C24012 + C24012 + C153761 * C163 + C23992 * C146 +
             C24013 + C24013 + C153790 * C162 + C23990 * C145 + C24014 +
             C24014 + C153809 * C161) *
                C47673) *
               C153501 * C153413 * C1131) *
              C1134 +
          (((C23990 * C146 + C24015 + C24015 + C153809 * C162 + C23992 * C147 +
             C24016 + C24016 + C153790 * C163 + C23994 * C148 + C24017 +
             C24017 + C153761 * C164) *
                C47673 +
            (C48691 + C48692 + C48693) * C47674 +
            (C48694 + C48695 + C48696) * C153777) *
               C153501 * C153413 * C1131 -
           ((C23994 * C1365 + C48443 + C48443 + C153761 * C1375 +
             C23992 * C1366 + C48444 + C48444 + C153790 * C1376 +
             C23990 * C1367 + C48445 + C48445 + C153809 * C1377) *
                C153777 +
            (C23994 * C985 + C25085 + C25085 + C153761 * C997 + C23992 * C984 +
             C25086 + C25086 + C153790 * C996 + C23990 * C983 + C25087 +
             C25087 + C153809 * C995) *
                C47674 +
            (C24860 + C24859 + C24858) * C47673) *
               C153501 * C153413 * C153449) *
              C1135)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
            C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 + C23999 +
            C153761 * C162) *
               C47673 +
           (C48203 + C48204 + C48205) * C47674 + C48223 * C153777) *
              C153501 * C153413 * C1218 -
          ((C26079 + C26078 + C26077) * C153777 +
           (C25438 + C25439 + C25440) * C47674 +
           (C24337 + C24336 + C24335) * C47673) *
              C153501 * C153413 * C1219 +
          (C24355 * C47673 + (C25437 + C25436 + C25435) * C47674 +
           (C26080 + C26081 + C26082) * C153777) *
              C153501 * C153413 * C1220 -
          ((C23994 * C4833 + C26062 + C26062 + C153761 * C4839 +
            C23992 * C4834 + C26063 + C26063 + C153790 * C4840 +
            C23990 * C4835 + C26064 + C26064 + C153809 * C4841) *
               C153777 +
           (C26829 + C26828 + C26827) * C47674 + C25821 * C47673) *
              C153501 * C153413 * C1221) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C47673 +
             C31295 * C47674 + C31296 * C153777) *
                C153812 +
            (C52025 + C52026 + C52027) * C153800 + C52045 * C153774) *
               C153413 * C1131 -
           ((C52031 + C52032 + C52033) * C153774 +
            (C52030 + C52029 + C52028) * C153800 +
            (C52027 + C52026 + C52025) * C153812) *
               C153413 * C153449) *
              C1133 +
          (((C52034 + C52035 + C52036) * C153812 +
            (C52037 + C52038 + C52039) * C153800 +
            (C52040 + C52041 + C52042) * C153774) *
               C153413 * C153449 -
           (C52046 * C153774 + (C52036 + C52035 + C52034) * C153800 +
            (C31301 * C153777 + C31300 * C47674 +
             (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C47673) *
                C153812) *
               C153413 * C1131) *
              C1134 +
          ((((C28234 * C146 + C28247 + C28247 + C153338 * C162) * C47673 +
             C31779 * C47674 + C31780 * C153777) *
                C153812 +
            (C52483 + C52484 + C52485) * C153800 +
            (C52486 + C52487 + C52488) * C153774) *
               C153413 * C1131 -
           (((C28234 * C4833 + C31533 + C31533 + C153338 * C4839) * C153777 +
             C44720 * C47674 + C28738 * C47673) *
                C153774 +
            (C52488 + C52487 + C52486) * C153800 +
            (C52485 + C52484 + C52483) * C153812) *
               C153413 * C153449) *
              C1135)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C47673 +
            C31295 * C47674 + C31296 * C153777) *
               C153812 +
           (C52025 + C52026 + C52027) * C153800 + C52045 * C153774) *
              C153413 * C1218 -
          (C53377 * C153774 + (C52030 + C52029 + C52028) * C153800 +
           (C52027 + C52026 + C52025) * C153812) *
              C153413 * C1219 +
          (C52045 * C153812 + (C52033 + C52032 + C52031) * C153800 +
           (C53374 + C53375 + C53376) * C153774) *
              C153413 * C1220 -
          (((C28234 * C29424 + C29436 + C29436 + C153338 * C29426) * C153777 +
            C29867 * C47674 + C28433 * C47673) *
               C153774 +
           (C53376 + C53375 + C53374) * C153800 + C53377 * C153812) *
              C153413 * C1221) *
         C153378) /
            (p * q * std::sqrt(p + q));
    d2ee[220] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 +
              C2737 + C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
              C153761 * C162) *
                 C153513 * C153812 +
             (C3086 + C3087 + C3088) * C153513 * C153800 + C3108 * C153774) *
                C1938 -
            (C5625 * C153774 + (C4213 + C4214 + C4215) * C153513 * C153800 +
             (C2733 * C498 + C3346 + C3346 + C153761 * C522 + C2731 * C499 +
              C3347 + C3347 + C2724 * C523 + C2729 * C500 + C3348 + C3348 +
              C2723 * C524) *
                 C153513 * C153812) *
                C153477) *
               C153724 +
           (((C4215 + C4214 + C4213) * C153513 * C153812 +
             (C4212 + C4211 + C4210) * C153513 * C153800 +
             (C5629 + C5630 + C5631) * C153513 * C153774) *
                C153477 -
            (C4609 * C153774 + (C3091 + C3090 + C3089) * C153513 * C153800 +
             (C3088 + C3087 + C3086) * C153513 * C153812) *
                C1938) *
               C153449) *
              C153716 +
          ((((C2729 * C499 + C3358 + C3358 + C2723 * C523 + C2731 * C498 +
              C3359 + C3359 + C2724 * C522 + C2733 * C497 + C3360 + C3360 +
              C153761 * C521) *
                 C153513 * C153812 +
             (C4216 + C4217 + C4218) * C153513 * C153800 +
             (C4219 + C4220 + C4221) * C153513 * C153774) *
                C153477 -
            (C3109 * C153774 + (C3097 + C3096 + C3095) * C153513 * C153800 +
             (C2733 * C147 + C2751 + C2751 + C153761 * C163 + C2731 * C146 +
              C2752 + C2752 + C2724 * C162 + C2729 * C145 + C2753 + C2753 +
              C2723 * C161) *
                 C153513 * C153812) *
                C1938) *
               C153724 +
           (((C3095 + C3096 + C3097) * C153513 * C153812 +
             (C3098 + C3099 + C3100) * C153513 * C153800 +
             (C3101 + C3102 + C3103) * C153513 * C153774) *
                C1938 -
            ((C2733 * C4146 + C4183 + C4183 + C153761 * C4154 + C2731 * C4145 +
              C4184 + C4184 + C2724 * C4153 + C2729 * C4144 + C4185 + C4185 +
              C2723 * C4152) *
                 C153513 * C153774 +
             (C4221 + C4220 + C4219) * C153513 * C153800 +
             (C4218 + C4217 + C4216) * C153513 * C153812) *
                C153477) *
               C153449) *
              C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 + C169 + C169 + C121 * C160 + C136 * C145 + C170 +
             C170 + C122 * C161 + C138 * C146 + C171 + C171 + C123 * C162 +
             C140 * C147 + C172 + C172 + C124 * C163 + C142 * C148 + C173 +
             C173 + C125 * C164) *
                C153513 * C153501 * C1938 -
            (C142 * C496 + C533 + C533 + C125 * C520 + C140 * C497 + C534 +
             C534 + C124 * C521 + C138 * C498 + C535 + C535 + C123 * C522 +
             C136 * C499 + C536 + C536 + C122 * C523 + C134 * C500 + C537 +
             C537 + C121 * C524) *
                C153513 * C153501 * C153477) *
               C153724 +
           ((C134 * C981 + C1000 + C1000 + C121 * C993 + C136 * C982 + C1001 +
             C1001 + C122 * C994 + C138 * C983 + C1002 + C1002 + C123 * C995 +
             C140 * C984 + C1003 + C1003 + C124 * C996 + C142 * C985 + C1004 +
             C1004 + C125 * C997) *
                C153513 * C153501 * C153477 -
            (C142 * C315 + C352 + C352 + C125 * C339 + C140 * C316 + C353 +
             C353 + C124 * C340 + C138 * C317 + C354 + C354 + C123 * C341 +
             C136 * C318 + C355 + C355 + C122 * C342 + C134 * C319 + C356 +
             C356 + C121 * C343) *
                C153513 * C153501 * C1938) *
               C153449) *
              C153716 +
          (((C134 * C499 + C543 + C543 + C121 * C523 + C136 * C498 + C544 +
             C544 + C122 * C522 + C138 * C497 + C545 + C545 + C123 * C521 +
             C140 * C496 + C546 + C546 + C124 * C520 + C142 * C506 + C547 +
             C547 + C125 * C530) *
                C153513 * C153501 * C153477 -
            (C142 * C149 + C174 + C174 + C125 * C165 + C140 * C148 + C175 +
             C175 + C124 * C164 + C138 * C147 + C176 + C176 + C123 * C163 +
             C136 * C146 + C177 + C177 + C122 * C162 + C134 * C145 + C178 +
             C178 + C121 * C161) *
                C153513 * C153501 * C1938) *
               C153724 +
           ((C134 * C318 + C362 + C362 + C121 * C342 + C136 * C317 + C363 +
             C363 + C122 * C341 + C138 * C316 + C364 + C364 + C123 * C340 +
             C140 * C315 + C365 + C365 + C124 * C339 + C142 * C325 + C366 +
             C366 + C125 * C349) *
                C153513 * C153501 * C1938 -
            (C142 * C986 + C1005 + C1005 + C125 * C998 + C140 * C985 + C1006 +
             C1006 + C124 * C997 + C138 * C984 + C1007 + C1007 + C123 * C996 +
             C136 * C983 + C1008 + C1008 + C122 * C995 + C134 * C982 + C1009 +
             C1009 + C121 * C994) *
                C153513 * C153501 * C153477) *
               C153449) *
              C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
              C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 +
              C23999 + C153761 * C162) *
                 C153513 * C23987 +
             (C24335 + C24336 + C24337) * C153513 * C23988 + C24357 * C153774) *
                C1938 -
            (C26823 * C153774 + (C25438 + C25439 + C25440) * C153513 * C23988 +
             (C23994 * C498 + C24583 + C24583 + C153761 * C522 + C23992 * C499 +
              C24584 + C24584 + C153790 * C523 + C23990 * C500 + C24585 +
              C24585 + C153809 * C524) *
                 C153513 * C23987) *
                C153477) *
               C153724 +
           (((C25440 + C25439 + C25438) * C153513 * C23987 +
             (C25437 + C25436 + C25435) * C153513 * C23988 +
             (C26827 + C26828 + C26829) * C153513 * C153774) *
                C153477 -
            (C25825 * C153774 + (C24340 + C24339 + C24338) * C153513 * C23988 +
             (C24337 + C24336 + C24335) * C153513 * C23987) *
                C1938) *
               C153449) *
              C153716 +
          ((((C23990 * C499 + C24595 + C24595 + C153809 * C523 + C23992 * C498 +
              C24596 + C24596 + C153790 * C522 + C23994 * C497 + C24597 +
              C24597 + C153761 * C521) *
                 C153513 * C23987 +
             (C25441 + C25442 + C25443) * C153513 * C23988 +
             (C25444 + C25445 + C25446) * C153513 * C153774) *
                C153477 -
            (C24358 * C153774 + (C24346 + C24345 + C24344) * C153513 * C23988 +
             (C23994 * C147 + C24012 + C24012 + C153761 * C163 + C23992 * C146 +
              C24013 + C24013 + C153790 * C162 + C23990 * C145 + C24014 +
              C24014 + C153809 * C161) *
                 C153513 * C23987) *
                C1938) *
               C153724 +
           (((C24344 + C24345 + C24346) * C153513 * C23987 +
             (C24347 + C24348 + C24349) * C153513 * C23988 +
             (C24350 + C24351 + C24352) * C153513 * C153774) *
                C1938 -
            ((C23994 * C4146 + C25408 + C25408 + C153761 * C4154 +
              C23992 * C4145 + C25409 + C25409 + C153790 * C4153 +
              C23990 * C4144 + C25410 + C25410 + C153809 * C4152) *
                 C153513 * C153774 +
             (C25446 + C25445 + C25444) * C153513 * C23988 +
             (C25443 + C25442 + C25441) * C153513 * C23987) *
                C153477) *
               C153449) *
              C153384)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153513 *
                 C28229 +
             C28439 * C28230 + C28440 * C28231 + C28441 * C28232 +
             C28442 * C28233) *
                C1938 -
            (C29081 * C28233 + C29082 * C28232 + C29083 * C28231 +
             C29084 * C28230 +
             (C28234 * C500 + C28581 + C28581 + C153338 * C524) * C153513 *
                 C28229) *
                C153477) *
               C153724 +
           ((C29084 * C28229 + C29083 * C28230 + C29082 * C28231 +
             C29081 * C28232 + C29868 * C28233) *
                C153477 -
            (C28443 * C28233 + C28442 * C28232 + C28441 * C28231 +
             C28440 * C28230 + C28439 * C28229) *
                C1938) *
               C153449) *
              C153716 +
          ((((C28234 * C499 + C28587 + C28587 + C153338 * C523) * C153513 *
                 C28229 +
             C29085 * C28230 + C29086 * C28231 + C29087 * C28232 +
             C29088 * C28233) *
                C153477 -
            (C28447 * C28233 + C28446 * C28232 + C28445 * C28231 +
             C28444 * C28230 +
             (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C153513 *
                 C28229) *
                C1938) *
               C153724 +
           ((C28444 * C28229 + C28445 * C28230 + C28446 * C28231 +
             C28447 * C28232 + C28448 * C28233) *
                C1938 -
            ((C28234 * C29033 + C29056 + C29056 + C153338 * C29037) * C153513 *
                 C28233 +
             C29088 * C28232 + C29087 * C28231 + C29086 * C28230 +
             C29085 * C28229) *
                C153477) *
               C153449) *
              C153384)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
              C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 +
              C23999 + C153761 * C162) *
                 C47673 +
             (C48203 + C48204 + C48205) * C47674 + C48223 * C153777) *
                C153501 * C1938 -
            (C50925 * C153777 + (C48208 + C48207 + C48206) * C47674 +
             (C48205 + C48204 + C48203) * C47673) *
                C153501 * C153477) *
               C153724 +
           (((C25440 + C25439 + C25438) * C47673 +
             (C26077 + C26078 + C26079) * C47674 +
             (C49604 + C49605 + C49606) * C153777) *
                C153501 * C153477 -
            (C49600 * C153777 + (C25438 + C25439 + C25440) * C47674 +
             (C24337 + C24336 + C24335) * C47673) *
                C153501 * C1938) *
               C153449) *
              C153716 +
          ((((C48212 + C48213 + C48214) * C47673 +
             (C48215 + C48216 + C48217) * C47674 +
             (C48218 + C48219 + C48220) * C153777) *
                C153501 * C153477 -
            (C48224 * C153777 + (C48214 + C48213 + C48212) * C47674 +
             (C23994 * C147 + C24012 + C24012 + C153761 * C163 + C23992 * C146 +
              C24013 + C24013 + C153790 * C162 + C23990 * C145 + C24014 +
              C24014 + C153809 * C161) *
                 C47673) *
                C153501 * C1938) *
               C153724 +
           (((C24344 + C24345 + C24346) * C47673 +
             (C25441 + C25442 + C25443) * C47674 +
             (C49002 + C49003 + C49004) * C153777) *
                C153501 * C1938 -
            ((C23994 * C8437 + C48993 + C48993 + C153761 * C8439 +
              C23992 * C6216 + C48994 + C48994 + C153790 * C6228 +
              C23990 * C6217 + C48995 + C48995 + C153809 * C6229) *
                 C153777 +
             (C49004 + C49003 + C49002) * C47674 +
             (C25443 + C25442 + C25441) * C47673) *
                C153501 * C153477) *
               C153449) *
              C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C47673 +
              C31295 * C47674 + C31296 * C153777) *
                 C153812 +
             (C52025 + C52026 + C52027) * C153800 + C52045 * C153774) *
                C1938 -
            (C54332 * C153774 + (C53000 + C53001 + C53002) * C153800 +
             (C31299 * C153777 + C31296 * C47674 + C31295 * C47673) * C153812) *
                C153477) *
               C153724 +
           (((C53002 + C53001 + C53000) * C153812 +
             (C52999 + C52998 + C52997) * C153800 +
             (C54329 + C54330 + C54331) * C153774) *
                C153477 -
            (C53377 * C153774 + (C52030 + C52029 + C52028) * C153800 +
             (C52027 + C52026 + C52025) * C153812) *
                C1938) *
               C153449) *
              C153716 +
          ((((C31300 * C47673 + C31301 * C47674 + C31302 * C153777) * C153812 +
             (C53003 + C53004 + C53005) * C153800 +
             (C53006 + C53007 + C53008) * C153774) *
                C153477 -
            (C52046 * C153774 + (C52036 + C52035 + C52034) * C153800 +
             (C31301 * C153777 + C31300 * C47674 +
              (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C47673) *
                 C153812) *
                C1938) *
               C153724 +
           (((C52034 + C52035 + C52036) * C153812 +
             (C52037 + C52038 + C52039) * C153800 +
             (C52040 + C52041 + C52042) * C153774) *
                C1938 -
            (((C28234 * C32070 + C32086 + C32086 + C153338 * C32072) * C153777 +
              C31017 * C47674 + C29079 * C47673) *
                 C153774 +
             (C53008 + C53007 + C53006) * C153800 +
             (C53005 + C53004 + C53003) * C153812) *
                C153477) *
               C153449) *
              C153384)) /
            (p * q * std::sqrt(p + q));
    d2ee[221] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 +
             C2737 + C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
             C153761 * C162) *
                C153513 * C153812 +
            (C3086 + C3087 + C3088) * C153513 * C153800 + C3108 * C153774) *
               C153797 -
           (C5625 * C153774 + (C4213 + C4214 + C4215) * C153513 * C153800 +
            (C2733 * C498 + C3346 + C3346 + C153761 * C522 + C2731 * C499 +
             C3347 + C3347 + C2724 * C523 + C2729 * C500 + C3348 + C3348 +
             C2723 * C524) *
                C153513 * C153812) *
               C153798 +
           ((C2729 * C501 + C3349 + C3349 + C2723 * C525 + C2731 * C502 +
             C3350 + C3350 + C2724 * C526 + C2733 * C503 + C3351 + C3351 +
             C153761 * C527) *
                C153513 * C153812 +
            (C4870 + C4871 + C4872) * C153513 * C153800 +
            (C4873 + C4874 + C4875) * C153513 * C153774) *
               C2454) *
              C153724 +
          (((C4215 + C4214 + C4213) * C153513 * C153812 +
            (C4212 + C4211 + C4210) * C153513 * C153800 +
            (C5629 + C5630 + C5631) * C153513 * C153774) *
               C153798 -
           (C4609 * C153774 + (C3091 + C3090 + C3089) * C153513 * C153800 +
            (C3088 + C3087 + C3086) * C153513 * C153812) *
               C153797 -
           ((C2733 * C4833 + C4855 + C4855 + C153761 * C4839 + C2731 * C4834 +
             C4856 + C4856 + C2724 * C4840 + C2729 * C4835 + C4857 + C4857 +
             C2723 * C4841) *
                C153513 * C153774 +
            (C4875 + C4874 + C4873) * C153513 * C153800 +
            (C4872 + C4871 + C4870) * C153513 * C153812) *
               C2454) *
              C153449) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C144 + C169 + C169 + C121 * C160 + C136 * C145 + C170 +
            C170 + C122 * C161 + C138 * C146 + C171 + C171 + C123 * C162 +
            C140 * C147 + C172 + C172 + C124 * C163 + C142 * C148 + C173 +
            C173 + C125 * C164) *
               C153513 * C153501 * C153797 -
           (C142 * C496 + C533 + C533 + C125 * C520 + C140 * C497 + C534 +
            C534 + C124 * C521 + C138 * C498 + C535 + C535 + C123 * C522 +
            C136 * C499 + C536 + C536 + C122 * C523 + C134 * C500 + C537 +
            C537 + C121 * C524) *
               C153513 * C153501 * C153798 +
           (C134 * C501 + C538 + C538 + C121 * C525 + C136 * C502 + C539 +
            C539 + C122 * C526 + C138 * C503 + C540 + C540 + C123 * C527 +
            C140 * C504 + C541 + C541 + C124 * C528 + C142 * C505 + C542 +
            C542 + C125 * C529) *
               C153513 * C153501 * C2454) *
              C153724 +
          ((C134 * C981 + C1000 + C1000 + C121 * C993 + C136 * C982 + C1001 +
            C1001 + C122 * C994 + C138 * C983 + C1002 + C1002 + C123 * C995 +
            C140 * C984 + C1003 + C1003 + C124 * C996 + C142 * C985 + C1004 +
            C1004 + C125 * C997) *
               C153513 * C153501 * C153798 -
           (C142 * C315 + C352 + C352 + C125 * C339 + C140 * C316 + C353 +
            C353 + C124 * C340 + C138 * C317 + C354 + C354 + C123 * C341 +
            C136 * C318 + C355 + C355 + C122 * C342 + C134 * C319 + C356 +
            C356 + C121 * C343) *
               C153513 * C153501 * C153797 -
           (C142 * C1365 + C1381 + C1381 + C125 * C1375 + C140 * C1366 + C1382 +
            C1382 + C124 * C1376 + C138 * C1367 + C1383 + C1383 + C123 * C1377 +
            C136 * C1368 + C1384 + C1384 + C122 * C1378 + C134 * C1369 + C1385 +
            C1385 + C121 * C1379) *
               C153513 * C153501 * C2454) *
              C153449) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
             C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 +
             C23999 + C153761 * C162) *
                C153513 * C23987 +
            (C24335 + C24336 + C24337) * C153513 * C23988 + C24357 * C153774) *
               C153797 -
           (C26823 * C153774 + (C25438 + C25439 + C25440) * C153513 * C23988 +
            (C23994 * C498 + C24583 + C24583 + C153761 * C522 + C23992 * C499 +
             C24584 + C24584 + C153790 * C523 + C23990 * C500 + C24585 +
             C24585 + C153809 * C524) *
                C153513 * C23987) *
               C153798 +
           ((C23990 * C501 + C24586 + C24586 + C153809 * C525 + C23992 * C502 +
             C24587 + C24587 + C153790 * C526 + C23994 * C503 + C24588 +
             C24588 + C153761 * C527) *
                C153513 * C23987 +
            (C26077 + C26078 + C26079) * C153513 * C23988 +
            (C26080 + C26081 + C26082) * C153513 * C153774) *
               C2454) *
              C153724 +
          (((C25440 + C25439 + C25438) * C153513 * C23987 +
            (C25437 + C25436 + C25435) * C153513 * C23988 +
            (C26827 + C26828 + C26829) * C153513 * C153774) *
               C153798 -
           (C25825 * C153774 + (C24340 + C24339 + C24338) * C153513 * C23988 +
            (C24337 + C24336 + C24335) * C153513 * C23987) *
               C153797 -
           ((C23994 * C4833 + C26062 + C26062 + C153761 * C4839 +
             C23992 * C4834 + C26063 + C26063 + C153790 * C4840 +
             C23990 * C4835 + C26064 + C26064 + C153809 * C4841) *
                C153513 * C153774 +
            (C26082 + C26081 + C26080) * C153513 * C23988 +
            (C26079 + C26078 + C26077) * C153513 * C23987) *
               C2454) *
              C153449) *
         C153378) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153513 *
                C28229 +
            C28439 * C28230 + C28440 * C28231 + C28441 * C28232 +
            C28442 * C28233) *
               C153797 -
           (C29081 * C28233 + C29082 * C28232 + C29083 * C28231 +
            C29084 * C28230 +
            (C28234 * C500 + C28581 + C28581 + C153338 * C524) * C153513 *
                C28229) *
               C153798 +
           ((C28234 * C501 + C28582 + C28582 + C153338 * C525) * C153513 *
                C28229 +
            C29449 * C28230 + C29450 * C28231 + C29451 * C28232 +
            C29452 * C28233) *
               C2454) *
              C153724 +
          ((C29084 * C28229 + C29083 * C28230 + C29082 * C28231 +
            C29081 * C28232 + C29868 * C28233) *
               C153798 -
           (C28443 * C28233 + C28442 * C28232 + C28441 * C28231 +
            C28440 * C28230 + C28439 * C28229) *
               C153797 -
           ((C28234 * C29424 + C29436 + C29436 + C153338 * C29426) * C153513 *
                C28233 +
            C29452 * C28232 + C29451 * C28231 + C29450 * C28230 +
            C29449 * C28229) *
               C2454) *
              C153449) *
         C153378) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
             C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 +
             C23999 + C153761 * C162) *
                C47673 +
            (C48203 + C48204 + C48205) * C47674 + C48223 * C153777) *
               C153501 * C153797 -
           (C50925 * C153777 + (C48208 + C48207 + C48206) * C47674 +
            (C48205 + C48204 + C48203) * C47673) *
               C153501 * C153798 +
           (C48223 * C47673 + (C48211 + C48210 + C48209) * C47674 +
            (C50932 + C50933 + C50934) * C153777) *
               C153501 * C2454) *
              C153724 +
          (((C25440 + C25439 + C25438) * C47673 +
            (C26077 + C26078 + C26079) * C47674 +
            (C49604 + C49605 + C49606) * C153777) *
               C153501 * C153798 -
           (C49600 * C153777 + (C25438 + C25439 + C25440) * C47674 +
            (C24337 + C24336 + C24335) * C47673) *
               C153501 * C153797 -
           ((C23994 * C9040 + C49594 + C49594 + C153761 * C9046 +
             C23992 * C9041 + C49595 + C49595 + C153790 * C9047 +
             C23990 * C9042 + C49596 + C49596 + C153809 * C9048) *
                C153777 +
            (C49606 + C49605 + C49604) * C47674 + C49600 * C47673) *
               C153501 * C2454) *
              C153449) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C47673 +
             C31295 * C47674 + C31296 * C153777) *
                C153812 +
            (C52025 + C52026 + C52027) * C153800 + C52045 * C153774) *
               C153797 -
           (C54332 * C153774 + (C53000 + C53001 + C53002) * C153800 +
            (C31299 * C153777 + C31296 * C47674 + C31295 * C47673) * C153812) *
               C153798 +
           ((C31296 * C47673 + C31299 * C47674 + C34025 * C153777) * C153812 +
            (C53596 + C53597 + C53598) * C153800 +
            (C53599 + C53600 + C53601) * C153774) *
               C2454) *
              C153724 +
          (((C53002 + C53001 + C53000) * C153812 +
            (C52999 + C52998 + C52997) * C153800 +
            (C54329 + C54330 + C54331) * C153774) *
               C153798 -
           (C53377 * C153774 + (C52030 + C52029 + C52028) * C153800 +
            (C52027 + C52026 + C52025) * C153812) *
               C153797 -
           (((C28234 * C32673 + C32687 + C32687 + C153338 * C32675) * C153777 +
             C32696 * C47674 + C29447 * C47673) *
                C153774 +
            (C53601 + C53600 + C53599) * C153800 +
            (C53598 + C53597 + C53596) * C153812) *
               C2454) *
              C153449) *
         C153378) /
            (p * q * std::sqrt(p + q));
    d2ee[222] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             (((C134 * C144 + C169 + C169 + C121 * C160 + C136 * C145 + C170 +
                C170 + C122 * C161 + C138 * C146 + C171 + C171 + C123 * C162 +
                C140 * C147 + C172 + C172 + C124 * C163 + C142 * C148 + C173 +
                C173 + C125 * C164) *
                   C153513 * C153501 * C1938 -
               (C142 * C496 + C533 + C533 + C125 * C520 + C140 * C497 + C534 +
                C534 + C124 * C521 + C138 * C498 + C535 + C535 + C123 * C522 +
                C136 * C499 + C536 + C536 + C122 * C523 + C134 * C500 + C537 +
                C537 + C121 * C524) *
                   C153513 * C153501 * C153477) *
                  C153397 * C1133 +
              ((C134 * C499 + C543 + C543 + C121 * C523 + C136 * C498 + C544 +
                C544 + C122 * C522 + C138 * C497 + C545 + C545 + C123 * C521 +
                C140 * C496 + C546 + C546 + C124 * C520 + C142 * C506 + C547 +
                C547 + C125 * C530) *
                   C153513 * C153501 * C153477 -
               (C142 * C149 + C174 + C174 + C125 * C165 + C140 * C148 + C175 +
                C175 + C124 * C164 + C138 * C147 + C176 + C176 + C123 * C163 +
                C136 * C146 + C177 + C177 + C122 * C162 + C134 * C145 + C178 +
                C178 + C121 * C161) *
                   C153513 * C153501 * C1938) *
                  C153397 * C1134 +
              ((C134 * C146 + C179 + C179 + C121 * C162 + C136 * C147 + C180 +
                C180 + C122 * C163 + C138 * C148 + C181 + C181 + C123 * C164 +
                C140 * C149 + C182 + C182 + C124 * C165 + C142 * C150 + C183 +
                C183 + C125 * C166) *
                   C153513 * C153501 * C1938 -
               (C142 * C811 + C815 + C815 + C125 * C813 + C140 * C506 + C816 +
                C816 + C124 * C530 + C138 * C496 + C817 + C817 + C123 * C520 +
                C136 * C497 + C818 + C818 + C122 * C521 + C134 * C498 + C819 +
                C819 + C121 * C522) *
                   C153513 * C153501 * C153477) *
                  C153397 * C1135) +
         std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             (((C134 * C144 + C169 + C169 + C121 * C160 + C136 * C145 + C170 +
                C170 + C122 * C161 + C138 * C146 + C171 + C171 + C123 * C162 +
                C140 * C147 + C172 + C172 + C124 * C163 + C142 * C148 + C173 +
                C173 + C125 * C164) *
                   C153513 * C153501 * C1938 -
               (C142 * C496 + C533 + C533 + C125 * C520 + C140 * C497 + C534 +
                C534 + C124 * C521 + C138 * C498 + C535 + C535 + C123 * C522 +
                C136 * C499 + C536 + C536 + C122 * C523 + C134 * C500 + C537 +
                C537 + C121 * C524) *
                   C153513 * C153501 * C153477) *
                  C310 +
              ((C134 * C981 + C1000 + C1000 + C121 * C993 + C136 * C982 +
                C1001 + C1001 + C122 * C994 + C138 * C983 + C1002 + C1002 +
                C123 * C995 + C140 * C984 + C1003 + C1003 + C124 * C996 +
                C142 * C985 + C1004 + C1004 + C125 * C997) *
                   C153513 * C153501 * C153477 -
               (C142 * C315 + C352 + C352 + C125 * C339 + C140 * C316 + C353 +
                C353 + C124 * C340 + C138 * C317 + C354 + C354 + C123 * C341 +
                C136 * C318 + C355 + C355 + C122 * C342 + C134 * C319 + C356 +
                C356 + C121 * C343) *
                   C153513 * C153501 * C1938) *
                  C311 +
              ((C134 * C320 + C357 + C357 + C121 * C344 + C136 * C321 + C358 +
                C358 + C122 * C345 + C138 * C322 + C359 + C359 + C123 * C346 +
                C140 * C323 + C360 + C360 + C124 * C347 + C142 * C324 + C361 +
                C361 + C125 * C348) *
                   C153513 * C153501 * C1938 -
               (C142 * C1796 + C1812 + C1812 + C125 * C1806 + C140 * C1797 +
                C1813 + C1813 + C124 * C1807 + C138 * C1798 + C1814 + C1814 +
                C123 * C1808 + C136 * C1799 + C1815 + C1815 + C122 * C1809 +
                C134 * C1800 + C1816 + C1816 + C121 * C1810) *
                   C153513 * C153501 * C153477) *
                  C312) *
             C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((C134 * C144 + C169 + C169 + C121 * C160 + C136 * C145 + C170 + C170 +
           C122 * C161 + C138 * C146 + C171 + C171 + C123 * C162 + C140 * C147 +
           C172 + C172 + C124 * C163 + C142 * C148 + C173 + C173 +
           C125 * C164) *
              C153513 * C153501 * C2144 -
          (C142 * C496 + C533 + C533 + C125 * C520 + C140 * C497 + C534 + C534 +
           C124 * C521 + C138 * C498 + C535 + C535 + C123 * C522 + C136 * C499 +
           C536 + C536 + C122 * C523 + C134 * C500 + C537 + C537 +
           C121 * C524) *
              C153513 * C153501 * C2145 +
          (C134 * C501 + C538 + C538 + C121 * C525 + C136 * C502 + C539 + C539 +
           C122 * C526 + C138 * C503 + C540 + C540 + C123 * C527 + C140 * C504 +
           C541 + C541 + C124 * C528 + C142 * C505 + C542 + C542 +
           C125 * C529) *
              C153513 * C153501 * C2146 -
          (C142 * C2148 + C2164 + C2164 + C125 * C2158 + C140 * C2149 + C2165 +
           C2165 + C124 * C2159 + C138 * C2150 + C2166 + C2166 + C123 * C2160 +
           C136 * C2151 + C2167 + C2167 + C122 * C2161 + C134 * C2152 + C2168 +
           C2168 + C121 * C2162) *
              C153513 * C153501 * C2147) *
         C153397 * C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 +
             C2737 + C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
             C153761 * C162) *
                C153513 * C153812 +
            (C3086 + C3087 + C3088) * C153513 * C153800 + C3108 * C153774) *
               C1938 -
           (C5625 * C153774 + (C4213 + C4214 + C4215) * C153513 * C153800 +
            (C2733 * C498 + C3346 + C3346 + C153761 * C522 + C2731 * C499 +
             C3347 + C3347 + C2724 * C523 + C2729 * C500 + C3348 + C3348 +
             C2723 * C524) *
                C153513 * C153812) *
               C153477) *
              C153397 * C1133 +
          (((C2729 * C499 + C3358 + C3358 + C2723 * C523 + C2731 * C498 +
             C3359 + C3359 + C2724 * C522 + C2733 * C497 + C3360 + C3360 +
             C153761 * C521) *
                C153513 * C153812 +
            (C4216 + C4217 + C4218) * C153513 * C153800 +
            (C4219 + C4220 + C4221) * C153513 * C153774) *
               C153477 -
           (C3109 * C153774 + (C3097 + C3096 + C3095) * C153513 * C153800 +
            (C2733 * C147 + C2751 + C2751 + C153761 * C163 + C2731 * C146 +
             C2752 + C2752 + C2724 * C162 + C2729 * C145 + C2753 + C2753 +
             C2723 * C161) *
                C153513 * C153812) *
               C1938) *
              C153397 * C1134 +
          (((C2729 * C146 + C2754 + C2754 + C2723 * C162 + C2731 * C147 +
             C2755 + C2755 + C2724 * C163 + C2733 * C148 + C2756 + C2756 +
             C153761 * C164) *
                C153513 * C153812 +
            (C3621 + C3622 + C3623) * C153513 * C153800 +
            (C3624 + C3625 + C3626) * C153513 * C153774) *
               C1938 -
           ((C2733 * C1796 + C3845 + C3845 + C153761 * C1806 + C2731 * C1797 +
             C3846 + C3846 + C2724 * C1807 + C2729 * C1798 + C3847 + C3847 +
             C2723 * C1808) *
                C153513 * C153774 +
            (C2733 * C985 + C3848 + C3848 + C153761 * C997 + C2731 * C984 +
             C3849 + C3849 + C2724 * C996 + C2729 * C983 + C3850 + C3850 +
             C2723 * C995) *
                C153513 * C153800 +
            (C2733 * C496 + C3851 + C3851 + C153761 * C520 + C2731 * C497 +
             C3852 + C3852 + C2724 * C521 + C2729 * C498 + C3853 + C3853 +
             C2723 * C522) *
                C153513 * C153812) *
               C153477) *
              C153397 * C1135)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 +
             C2737 + C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
             C153761 * C162) *
                C153513 * C153812 +
            (C3086 + C3087 + C3088) * C153513 * C153800 + C3108 * C153774) *
               C1938 -
           (C5625 * C153774 + (C4213 + C4214 + C4215) * C153513 * C153800 +
            (C2733 * C498 + C3346 + C3346 + C153761 * C522 + C2731 * C499 +
             C3347 + C3347 + C2724 * C523 + C2729 * C500 + C3348 + C3348 +
             C2723 * C524) *
                C153513 * C153812) *
               C153477) *
              C310 +
          (((C4215 + C4214 + C4213) * C153513 * C153812 +
            (C4212 + C4211 + C4210) * C153513 * C153800 +
            (C5629 + C5630 + C5631) * C153513 * C153774) *
               C153477 -
           (C4609 * C153774 + (C3091 + C3090 + C3089) * C153513 * C153800 +
            (C3088 + C3087 + C3086) * C153513 * C153812) *
               C1938) *
              C311 +
          ((C3108 * C153812 + (C3094 + C3093 + C3092) * C153513 * C153800 +
            (C4613 + C4614 + C4615) * C153513 * C153774) *
               C1938 -
           ((C2733 * C5601 + C5618 + C5618 + C153761 * C5607 + C2731 * C5602 +
             C5619 + C5619 + C2724 * C5608 + C2729 * C5603 + C5620 + C5620 +
             C2723 * C5609) *
                C153513 * C153774 +
            (C5631 + C5630 + C5629) * C153513 * C153800 + C5625 * C153812) *
               C153477) *
              C312) *
         C153378) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 + C2737 +
            C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
            C153761 * C162) *
               C153513 * C153812 +
           (C3086 + C3087 + C3088) * C153513 * C153800 + C3108 * C153774) *
              C2144 -
          (C5625 * C153774 + (C4213 + C4214 + C4215) * C153513 * C153800 +
           (C2733 * C498 + C3346 + C3346 + C153761 * C522 + C2731 * C499 +
            C3347 + C3347 + C2724 * C523 + C2729 * C500 + C3348 + C3348 +
            C2723 * C524) *
               C153513 * C153812) *
              C2145 +
          ((C2729 * C501 + C3349 + C3349 + C2723 * C525 + C2731 * C502 + C3350 +
            C3350 + C2724 * C526 + C2733 * C503 + C3351 + C3351 +
            C153761 * C527) *
               C153513 * C153812 +
           (C4870 + C4871 + C4872) * C153513 * C153800 +
           (C4873 + C4874 + C4875) * C153513 * C153774) *
              C2146 -
          ((C2733 * C6213 + C6232 + C6232 + C153761 * C6225 + C2731 * C6214 +
            C6233 + C6233 + C2724 * C6226 + C2729 * C6215 + C6234 + C6234 +
            C2723 * C6227) *
               C153513 * C153774 +
           (C2733 * C6216 + C6235 + C6235 + C153761 * C6228 + C2731 * C6217 +
            C6236 + C6236 + C2724 * C6229 + C2729 * C6218 + C6237 + C6237 +
            C2723 * C6230) *
               C153513 * C153800 +
           (C2733 * C2150 + C6238 + C6238 + C153761 * C2160 + C2731 * C2151 +
            C6239 + C6239 + C2724 * C2161 + C2729 * C2152 + C6240 + C6240 +
            C2723 * C2162) *
               C153513 * C153812) *
              C2147) *
         C153397 * C153378) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
             C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 +
             C23999 + C153761 * C162) *
                C153513 * C23987 +
            (C24335 + C24336 + C24337) * C153513 * C23988 + C24357 * C153774) *
               C1938 -
           (C26823 * C153774 + (C25438 + C25439 + C25440) * C153513 * C23988 +
            (C23994 * C498 + C24583 + C24583 + C153761 * C522 + C23992 * C499 +
             C24584 + C24584 + C153790 * C523 + C23990 * C500 + C24585 +
             C24585 + C153809 * C524) *
                C153513 * C23987) *
               C153477) *
              C153397 * C1133 +
          (((C23990 * C499 + C24595 + C24595 + C153809 * C523 + C23992 * C498 +
             C24596 + C24596 + C153790 * C522 + C23994 * C497 + C24597 +
             C24597 + C153761 * C521) *
                C153513 * C23987 +
            (C25441 + C25442 + C25443) * C153513 * C23988 +
            (C25444 + C25445 + C25446) * C153513 * C153774) *
               C153477 -
           (C24358 * C153774 + (C24346 + C24345 + C24344) * C153513 * C23988 +
            (C23994 * C147 + C24012 + C24012 + C153761 * C163 + C23992 * C146 +
             C24013 + C24013 + C153790 * C162 + C23990 * C145 + C24014 +
             C24014 + C153809 * C161) *
                C153513 * C23987) *
               C1938) *
              C153397 * C1134 +
          (((C23990 * C146 + C24015 + C24015 + C153809 * C162 + C23992 * C147 +
             C24016 + C24016 + C153790 * C163 + C23994 * C148 + C24017 +
             C24017 + C153761 * C164) *
                C153513 * C23987 +
            (C24858 + C24859 + C24860) * C153513 * C23988 +
            (C24861 + C24862 + C24863) * C153513 * C153774) *
               C1938 -
           ((C23994 * C1796 + C25082 + C25082 + C153761 * C1806 +
             C23992 * C1797 + C25083 + C25083 + C153790 * C1807 +
             C23990 * C1798 + C25084 + C25084 + C153809 * C1808) *
                C153513 * C153774 +
            (C23994 * C985 + C25085 + C25085 + C153761 * C997 + C23992 * C984 +
             C25086 + C25086 + C153790 * C996 + C23990 * C983 + C25087 +
             C25087 + C153809 * C995) *
                C153513 * C23988 +
            (C23994 * C496 + C25088 + C25088 + C153761 * C520 + C23992 * C497 +
             C25089 + C25089 + C153790 * C521 + C23990 * C498 + C25090 +
             C25090 + C153809 * C522) *
                C153513 * C23987) *
               C153477) *
              C153397 * C1135)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
             C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 +
             C23999 + C153761 * C162) *
                C153513 * C23987 +
            (C24335 + C24336 + C24337) * C153513 * C23988 + C24357 * C153774) *
               C1938 -
           (C26823 * C153774 + (C25438 + C25439 + C25440) * C153513 * C23988 +
            (C23994 * C498 + C24583 + C24583 + C153761 * C522 + C23992 * C499 +
             C24584 + C24584 + C153790 * C523 + C23990 * C500 + C24585 +
             C24585 + C153809 * C524) *
                C153513 * C23987) *
               C153477) *
              C310 +
          (((C25440 + C25439 + C25438) * C153513 * C23987 +
            (C25437 + C25436 + C25435) * C153513 * C23988 +
            (C26827 + C26828 + C26829) * C153513 * C153774) *
               C153477 -
           (C25825 * C153774 + (C24340 + C24339 + C24338) * C153513 * C23988 +
            (C24337 + C24336 + C24335) * C153513 * C23987) *
               C1938) *
              C311 +
          ((C24357 * C23987 + (C24343 + C24342 + C24341) * C153513 * C23988 +
            (C25829 + C25830 + C25831) * C153513 * C153774) *
               C1938 -
           ((C23994 * C5601 + C26816 + C26816 + C153761 * C5607 +
             C23992 * C5602 + C26817 + C26817 + C153790 * C5608 +
             C23990 * C5603 + C26818 + C26818 + C153809 * C5609) *
                C153513 * C153774 +
            (C26829 + C26828 + C26827) * C153513 * C23988 + C26823 * C23987) *
               C153477) *
              C312) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
            C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 + C23999 +
            C153761 * C162) *
               C153513 * C23987 +
           (C24335 + C24336 + C24337) * C153513 * C23988 + C24357 * C153774) *
              C2144 -
          (C26823 * C153774 + (C25438 + C25439 + C25440) * C153513 * C23988 +
           (C23994 * C498 + C24583 + C24583 + C153761 * C522 + C23992 * C499 +
            C24584 + C24584 + C153790 * C523 + C23990 * C500 + C24585 + C24585 +
            C153809 * C524) *
               C153513 * C23987) *
              C2145 +
          ((C23990 * C501 + C24586 + C24586 + C153809 * C525 + C23992 * C502 +
            C24587 + C24587 + C153790 * C526 + C23994 * C503 + C24588 + C24588 +
            C153761 * C527) *
               C153513 * C23987 +
           (C26077 + C26078 + C26079) * C153513 * C23988 +
           (C26080 + C26081 + C26082) * C153513 * C153774) *
              C2146 -
          ((C23994 * C6213 + C27412 + C27412 + C153761 * C6225 +
            C23992 * C6214 + C27413 + C27413 + C153790 * C6226 +
            C23990 * C6215 + C27414 + C27414 + C153809 * C6227) *
               C153513 * C153774 +
           (C23994 * C6216 + C27415 + C27415 + C153761 * C6228 +
            C23992 * C6217 + C27416 + C27416 + C153790 * C6229 +
            C23990 * C6218 + C27417 + C27417 + C153809 * C6230) *
               C153513 * C23988 +
           (C23994 * C2150 + C27418 + C27418 + C153761 * C2160 +
            C23992 * C2151 + C27419 + C27419 + C153790 * C2161 +
            C23990 * C2152 + C27420 + C27420 + C153809 * C2162) *
               C153513 * C23987) *
              C2147) *
         C153397 * C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153513 *
                C28229 +
            C28439 * C28230 + C28440 * C28231 + C28441 * C28232 +
            C28442 * C28233) *
               C1938 -
           (C29081 * C28233 + C29082 * C28232 + C29083 * C28231 +
            C29084 * C28230 +
            (C28234 * C500 + C28581 + C28581 + C153338 * C524) * C153513 *
                C28229) *
               C153477) *
              C153397 * C1133 +
          (((C28234 * C499 + C28587 + C28587 + C153338 * C523) * C153513 *
                C28229 +
            C29085 * C28230 + C29086 * C28231 + C29087 * C28232 +
            C29088 * C28233) *
               C153477 -
           (C28447 * C28233 + C28446 * C28232 + C28445 * C28231 +
            C28444 * C28230 +
            (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C153513 *
                C28229) *
               C1938) *
              C153397 * C1134 +
          (((C28234 * C146 + C28247 + C28247 + C153338 * C162) * C153513 *
                C28229 +
            C28740 * C28230 + C28741 * C28231 + C28742 * C28232 +
            C28743 * C28233) *
               C1938 -
           ((C28234 * C5601 + C28866 + C28866 + C153338 * C5607) * C153513 *
                C28233 +
            (C28234 * C4145 + C28867 + C28867 + C153338 * C4153) * C153513 *
                C28232 +
            (C28234 * C1798 + C28868 + C28868 + C153338 * C1808) * C153513 *
                C28231 +
            (C28234 * C983 + C28869 + C28869 + C153338 * C995) * C153513 *
                C28230 +
            (C28234 * C498 + C28870 + C28870 + C153338 * C522) * C153513 *
                C28229) *
               C153477) *
              C153397 * C1135)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153513 *
                C28229 +
            C28439 * C28230 + C28440 * C28231 + C28441 * C28232 +
            C28442 * C28233) *
               C1938 -
           (C29081 * C28233 + C29082 * C28232 + C29083 * C28231 +
            C29084 * C28230 +
            (C28234 * C500 + C28581 + C28581 + C153338 * C524) * C153513 *
                C28229) *
               C153477) *
              C310 +
          ((C29084 * C28229 + C29083 * C28230 + C29082 * C28231 +
            C29081 * C28232 + C29868 * C28233) *
               C153477 -
           (C28443 * C28233 + C28442 * C28232 + C28441 * C28231 +
            C28440 * C28230 + C28439 * C28229) *
               C1938) *
              C311 +
          ((C28440 * C28229 + C28441 * C28230 + C28442 * C28231 +
            C28443 * C28232 + C29302 * C28233) *
               C1938 -
           ((C28234 * C29858 + C29864 + C29864 + C153338 * C29860) * C153513 *
                C28233 +
            C29868 * C28232 + C29081 * C28231 + C29082 * C28230 +
            C29083 * C28229) *
               C153477) *
              C312) *
         C153378) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153513 *
               C28229 +
           C28439 * C28230 + C28440 * C28231 + C28441 * C28232 +
           C28442 * C28233) *
              C2144 -
          (C29081 * C28233 + C29082 * C28232 + C29083 * C28231 +
           C29084 * C28230 +
           (C28234 * C500 + C28581 + C28581 + C153338 * C524) * C153513 *
               C28229) *
              C2145 +
          ((C28234 * C501 + C28582 + C28582 + C153338 * C525) * C153513 *
               C28229 +
           C29449 * C28230 + C29450 * C28231 + C29451 * C28232 +
           C29452 * C28233) *
              C2146 -
          ((C28234 * C30194 + C30201 + C30201 + C153338 * C30198) * C153513 *
               C28233 +
           (C28234 * C30195 + C30202 + C30202 + C153338 * C30199) * C153513 *
               C28232 +
           (C28234 * C6215 + C30203 + C30203 + C153338 * C6227) * C153513 *
               C28231 +
           (C28234 * C6218 + C30204 + C30204 + C153338 * C6230) * C153513 *
               C28230 +
           (C28234 * C2152 + C30205 + C30205 + C153338 * C2162) * C153513 *
               C28229) *
              C2147) *
         C153397 * C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
             C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 +
             C23999 + C153761 * C162) *
                C47673 +
            (C48203 + C48204 + C48205) * C47674 + C48223 * C153777) *
               C153501 * C1938 -
           ((C48209 + C48210 + C48211) * C153777 +
            (C48208 + C48207 + C48206) * C47674 +
            (C48205 + C48204 + C48203) * C47673) *
               C153501 * C153477) *
              C153397 * C1133 +
          (((C48212 + C48213 + C48214) * C47673 +
            (C48215 + C48216 + C48217) * C47674 +
            (C48218 + C48219 + C48220) * C153777) *
               C153501 * C153477 -
           (C48224 * C153777 + (C48214 + C48213 + C48212) * C47674 +
            (C23994 * C147 + C24012 + C24012 + C153761 * C163 + C23992 * C146 +
             C24013 + C24013 + C153790 * C162 + C23990 * C145 + C24014 +
             C24014 + C153809 * C161) *
                C47673) *
               C153501 * C1938) *
              C153397 * C1134 +
          (((C23990 * C146 + C24015 + C24015 + C153809 * C162 + C23992 * C147 +
             C24016 + C24016 + C153790 * C163 + C23994 * C148 + C24017 +
             C24017 + C153761 * C164) *
                C47673 +
            (C48691 + C48692 + C48693) * C47674 +
            (C48694 + C48695 + C48696) * C153777) *
               C153501 * C1938 -
           ((C23994 * C2148 + C48676 + C48676 + C153761 * C2158 +
             C23992 * C2149 + C48677 + C48677 + C153790 * C2159 +
             C23990 * C2150 + C48678 + C48678 + C153809 * C2160) *
                C153777 +
            (C48696 + C48695 + C48694) * C47674 +
            (C48693 + C48692 + C48691) * C47673) *
               C153501 * C153477) *
              C153397 * C1135)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
             C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 +
             C23999 + C153761 * C162) *
                C47673 +
            (C48203 + C48204 + C48205) * C47674 + C48223 * C153777) *
               C153501 * C1938 -
           ((C48209 + C48210 + C48211) * C153777 +
            (C48208 + C48207 + C48206) * C47674 +
            (C48205 + C48204 + C48203) * C47673) *
               C153501 * C153477) *
              C310 +
          (((C25440 + C25439 + C25438) * C47673 +
            (C26077 + C26078 + C26079) * C47674 +
            (C49604 + C49605 + C49606) * C153777) *
               C153501 * C153477 -
           (C49600 * C153777 + (C25438 + C25439 + C25440) * C47674 +
            (C24337 + C24336 + C24335) * C47673) *
               C153501 * C1938) *
              C311 +
          ((C24355 * C47673 + (C25437 + C25436 + C25435) * C47674 +
            (C26080 + C26081 + C26082) * C153777) *
               C153501 * C1938 -
           ((C23994 * C6213 + C27412 + C27412 + C153761 * C6225 +
             C23992 * C6214 + C27413 + C27413 + C153790 * C6226 +
             C23990 * C6215 + C27414 + C27414 + C153809 * C6227) *
                C153777 +
            (C26082 + C26081 + C26080) * C47674 + C26819 * C47673) *
               C153501 * C153477) *
              C312) *
         C153378) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
            C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 + C23999 +
            C153761 * C162) *
               C47673 +
           (C48203 + C48204 + C48205) * C47674 + C48223 * C153777) *
              C153501 * C2144 -
          (C50925 * C153777 + (C48208 + C48207 + C48206) * C47674 +
           (C48205 + C48204 + C48203) * C47673) *
              C153501 * C2145 +
          (C48223 * C47673 + (C48211 + C48210 + C48209) * C47674 +
           (C50932 + C50933 + C50934) * C153777) *
              C153501 * C2146 -
          ((C23994 * C10377 + C50922 + C50922 + C153761 * C10383 +
            C23992 * C10378 + C50923 + C50923 + C153790 * C10384 +
            C23990 * C10379 + C50924 + C50924 + C153809 * C10385) *
               C153777 +
           (C50934 + C50933 + C50932) * C47674 + C50925 * C47673) *
              C153501 * C2147) *
         C153397 * C153378) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C47673 +
             C31295 * C47674 + C31296 * C153777) *
                C153812 +
            (C52025 + C52026 + C52027) * C153800 + C52045 * C153774) *
               C1938 -
           (C54332 * C153774 + (C53000 + C53001 + C53002) * C153800 +
            (C31299 * C153777 + C31296 * C47674 + C31295 * C47673) * C153812) *
               C153477) *
              C153397 * C1133 +
          (((C31300 * C47673 + C31301 * C47674 + C31302 * C153777) * C153812 +
            (C53003 + C53004 + C53005) * C153800 +
            (C53006 + C53007 + C53008) * C153774) *
               C153477 -
           (C52046 * C153774 + (C52036 + C52035 + C52034) * C153800 +
            (C31301 * C153777 + C31300 * C47674 +
             (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C47673) *
                C153812) *
               C1938) *
              C153397 * C1134 +
          ((((C28234 * C146 + C28247 + C28247 + C153338 * C162) * C47673 +
             C31779 * C47674 + C31780 * C153777) *
                C153812 +
            (C52483 + C52484 + C52485) * C153800 +
            (C52486 + C52487 + C52488) * C153774) *
               C1938 -
           (((C28234 * C6213 + C31772 + C31772 + C153338 * C6225) * C153777 +
             C31545 * C47674 + C31544 * C47673) *
                C153774 +
            ((C28234 * C6216 + C31773 + C31773 + C153338 * C6228) * C153777 +
             C31543 * C47674 + C31542 * C47673) *
                C153800 +
            ((C28234 * C2150 + C31774 + C31774 + C153338 * C2160) * C153777 +
             C31780 * C47674 + C31779 * C47673) *
                C153812) *
               C153477) *
              C153397 * C1135)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C47673 +
             C31295 * C47674 + C31296 * C153777) *
                C153812 +
            (C52025 + C52026 + C52027) * C153800 + C52045 * C153774) *
               C1938 -
           (C54332 * C153774 + (C53000 + C53001 + C53002) * C153800 +
            (C31299 * C153777 + C31296 * C47674 + C31295 * C47673) * C153812) *
               C153477) *
              C310 +
          (((C53002 + C53001 + C53000) * C153812 +
            (C52999 + C52998 + C52997) * C153800 +
            (C54329 + C54330 + C54331) * C153774) *
               C153477 -
           (C53377 * C153774 + (C52030 + C52029 + C52028) * C153800 +
            (C52027 + C52026 + C52025) * C153812) *
               C1938) *
              C311 +
          ((C52045 * C153812 + (C52033 + C52032 + C52031) * C153800 +
            (C53374 + C53375 + C53376) * C153774) *
               C1938 -
           (((C28234 * C30194 + C30201 + C30201 + C153338 * C30198) * C153777 +
             C29448 * C47674 + C29073 * C47673) *
                C153774 +
            (C54331 + C54330 + C54329) * C153800 + C54332 * C153812) *
               C153477) *
              C312) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C47673 +
            C31295 * C47674 + C31296 * C153777) *
               C153812 +
           (C52025 + C52026 + C52027) * C153800 + C52045 * C153774) *
              C2144 -
          (C54332 * C153774 + (C53000 + C53001 + C53002) * C153800 +
           (C31299 * C153777 + C31296 * C47674 + C31295 * C47673) * C153812) *
              C2145 +
          ((C31296 * C47673 + C31299 * C47674 + C34025 * C153777) * C153812 +
           (C53596 + C53597 + C53598) * C153800 +
           (C53599 + C53600 + C53601) * C153774) *
              C2146 -
          (((C28234 * C34011 + C34020 + C34020 + C153338 * C34015) * C153777 +
            C32695 * C47674 + C31297 * C47673) *
               C153774 +
           ((C28234 * C34012 + C34021 + C34021 + C153338 * C34016) * C153777 +
            C32694 * C47674 + C31298 * C47673) *
               C153800 +
           ((C28234 * C10379 + C34022 + C34022 + C153338 * C10385) * C153777 +
            C34025 * C47674 + C31299 * C47673) *
               C153812) *
              C2147) *
         C153397 * C153378) /
            (p * q * std::sqrt(p + q));
    d2ee[223] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 +
             C2737 + C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
             C153761 * C162) *
                C153513 * C153812 +
            (C3086 + C3087 + C3088) * C153513 * C153800 + C3108 * C153774) *
               C153797 -
           (C5625 * C153774 + (C4213 + C4214 + C4215) * C153513 * C153800 +
            (C2733 * C498 + C3346 + C3346 + C153761 * C522 + C2731 * C499 +
             C3347 + C3347 + C2724 * C523 + C2729 * C500 + C3348 + C3348 +
             C2723 * C524) *
                C153513 * C153812) *
               C153798 +
           ((C2729 * C501 + C3349 + C3349 + C2723 * C525 + C2731 * C502 +
             C3350 + C3350 + C2724 * C526 + C2733 * C503 + C3351 + C3351 +
             C153761 * C527) *
                C153513 * C153812 +
            (C4870 + C4871 + C4872) * C153513 * C153800 +
            (C4873 + C4874 + C4875) * C153513 * C153774) *
               C2454) *
              C153397 * C153716 +
          (((C2729 * C499 + C3358 + C3358 + C2723 * C523 + C2731 * C498 +
             C3359 + C3359 + C2724 * C522 + C2733 * C497 + C3360 + C3360 +
             C153761 * C521) *
                C153513 * C153812 +
            (C4216 + C4217 + C4218) * C153513 * C153800 +
            (C4219 + C4220 + C4221) * C153513 * C153774) *
               C153798 -
           (C3109 * C153774 + (C3097 + C3096 + C3095) * C153513 * C153800 +
            (C2733 * C147 + C2751 + C2751 + C153761 * C163 + C2731 * C146 +
             C2752 + C2752 + C2724 * C162 + C2729 * C145 + C2753 + C2753 +
             C2723 * C161) *
                C153513 * C153812) *
               C153797 -
           ((C2733 * C3330 + C3367 + C3367 + C153761 * C3338 + C2731 * C3329 +
             C3368 + C3368 + C2724 * C3337 + C2729 * C3328 + C3369 + C3369 +
             C2723 * C3336) *
                C153513 * C153774 +
            (C2733 * C1366 + C3370 + C3370 + C153761 * C1376 + C2731 * C1367 +
             C3371 + C3371 + C2724 * C1377 + C2729 * C1368 + C3372 + C3372 +
             C2723 * C1378) *
                C153513 * C153800 +
            (C2733 * C504 + C3373 + C3373 + C153761 * C528 + C2731 * C503 +
             C3374 + C3374 + C2724 * C527 + C2729 * C502 + C3375 + C3375 +
             C2723 * C526) *
                C153513 * C153812) *
               C2454) *
              C153397 * C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C144 + C169 + C169 + C121 * C160 + C136 * C145 + C170 +
            C170 + C122 * C161 + C138 * C146 + C171 + C171 + C123 * C162 +
            C140 * C147 + C172 + C172 + C124 * C163 + C142 * C148 + C173 +
            C173 + C125 * C164) *
               C153513 * C153501 * C153797 -
           (C142 * C496 + C533 + C533 + C125 * C520 + C140 * C497 + C534 +
            C534 + C124 * C521 + C138 * C498 + C535 + C535 + C123 * C522 +
            C136 * C499 + C536 + C536 + C122 * C523 + C134 * C500 + C537 +
            C537 + C121 * C524) *
               C153513 * C153501 * C153798 +
           (C134 * C501 + C538 + C538 + C121 * C525 + C136 * C502 + C539 +
            C539 + C122 * C526 + C138 * C503 + C540 + C540 + C123 * C527 +
            C140 * C504 + C541 + C541 + C124 * C528 + C142 * C505 + C542 +
            C542 + C125 * C529) *
               C153513 * C153501 * C2454) *
              C153397 * C153716 +
          ((C134 * C499 + C543 + C543 + C121 * C523 + C136 * C498 + C544 +
            C544 + C122 * C522 + C138 * C497 + C545 + C545 + C123 * C521 +
            C140 * C496 + C546 + C546 + C124 * C520 + C142 * C506 + C547 +
            C547 + C125 * C530) *
               C153513 * C153501 * C153798 -
           (C142 * C149 + C174 + C174 + C125 * C165 + C140 * C148 + C175 +
            C175 + C124 * C164 + C138 * C147 + C176 + C176 + C123 * C163 +
            C136 * C146 + C177 + C177 + C122 * C162 + C134 * C145 + C178 +
            C178 + C121 * C161) *
               C153513 * C153501 * C153797 -
           (C142 * C507 + C548 + C548 + C125 * C531 + C140 * C505 + C549 +
            C549 + C124 * C529 + C138 * C504 + C550 + C550 + C123 * C528 +
            C136 * C503 + C551 + C551 + C122 * C527 + C134 * C502 + C552 +
            C552 + C121 * C526) *
               C153513 * C153501 * C2454) *
              C153397 * C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
             C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 +
             C23999 + C153761 * C162) *
                C153513 * C23987 +
            (C24335 + C24336 + C24337) * C153513 * C23988 + C24357 * C153774) *
               C153797 -
           (C26823 * C153774 + (C25438 + C25439 + C25440) * C153513 * C23988 +
            (C23994 * C498 + C24583 + C24583 + C153761 * C522 + C23992 * C499 +
             C24584 + C24584 + C153790 * C523 + C23990 * C500 + C24585 +
             C24585 + C153809 * C524) *
                C153513 * C23987) *
               C153798 +
           ((C23990 * C501 + C24586 + C24586 + C153809 * C525 + C23992 * C502 +
             C24587 + C24587 + C153790 * C526 + C23994 * C503 + C24588 +
             C24588 + C153761 * C527) *
                C153513 * C23987 +
            (C26077 + C26078 + C26079) * C153513 * C23988 +
            (C26080 + C26081 + C26082) * C153513 * C153774) *
               C2454) *
              C153397 * C153716 +
          (((C23990 * C499 + C24595 + C24595 + C153809 * C523 + C23992 * C498 +
             C24596 + C24596 + C153790 * C522 + C23994 * C497 + C24597 +
             C24597 + C153761 * C521) *
                C153513 * C23987 +
            (C25441 + C25442 + C25443) * C153513 * C23988 +
            (C25444 + C25445 + C25446) * C153513 * C153774) *
               C153798 -
           (C24358 * C153774 + (C24346 + C24345 + C24344) * C153513 * C23988 +
            (C23994 * C147 + C24012 + C24012 + C153761 * C163 + C23992 * C146 +
             C24013 + C24013 + C153790 * C162 + C23990 * C145 + C24014 +
             C24014 + C153809 * C161) *
                C153513 * C23987) *
               C153797 -
           ((C23994 * C3330 + C24604 + C24604 + C153761 * C3338 +
             C23992 * C3329 + C24605 + C24605 + C153790 * C3337 +
             C23990 * C3328 + C24606 + C24606 + C153809 * C3336) *
                C153513 * C153774 +
            (C23994 * C1366 + C24607 + C24607 + C153761 * C1376 +
             C23992 * C1367 + C24608 + C24608 + C153790 * C1377 +
             C23990 * C1368 + C24609 + C24609 + C153809 * C1378) *
                C153513 * C23988 +
            (C23994 * C504 + C24610 + C24610 + C153761 * C528 + C23992 * C503 +
             C24611 + C24611 + C153790 * C527 + C23990 * C502 + C24612 +
             C24612 + C153809 * C526) *
                C153513 * C23987) *
               C2454) *
              C153397 * C153384)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153513 *
                C28229 +
            C28439 * C28230 + C28440 * C28231 + C28441 * C28232 +
            C28442 * C28233) *
               C153797 -
           (C29081 * C28233 + C29082 * C28232 + C29083 * C28231 +
            C29084 * C28230 +
            (C28234 * C500 + C28581 + C28581 + C153338 * C524) * C153513 *
                C28229) *
               C153798 +
           ((C28234 * C501 + C28582 + C28582 + C153338 * C525) * C153513 *
                C28229 +
            C29449 * C28230 + C29450 * C28231 + C29451 * C28232 +
            C29452 * C28233) *
               C2454) *
              C153397 * C153716 +
          (((C28234 * C499 + C28587 + C28587 + C153338 * C523) * C153513 *
                C28229 +
            C29085 * C28230 + C29086 * C28231 + C29087 * C28232 +
            C29088 * C28233) *
               C153798 -
           (C28447 * C28233 + C28446 * C28232 + C28445 * C28231 +
            C28444 * C28230 +
            (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C153513 *
                C28229) *
               C153797 -
           ((C28234 * C28571 + C28592 + C28592 + C153338 * C28575) * C153513 *
                C28233 +
            (C28234 * C4834 + C28593 + C28593 + C153338 * C4840) * C153513 *
                C28232 +
            (C28234 * C3328 + C28594 + C28594 + C153338 * C3336) * C153513 *
                C28231 +
            (C28234 * C1368 + C28595 + C28595 + C153338 * C1378) * C153513 *
                C28230 +
            (C28234 * C502 + C28596 + C28596 + C153338 * C526) * C153513 *
                C28229) *
               C2454) *
              C153397 * C153384)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
             C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 +
             C23999 + C153761 * C162) *
                C47673 +
            (C48203 + C48204 + C48205) * C47674 + C48223 * C153777) *
               C153501 * C153797 -
           (C50925 * C153777 + (C48208 + C48207 + C48206) * C47674 +
            (C48205 + C48204 + C48203) * C47673) *
               C153501 * C153798 +
           (C48223 * C47673 + (C48211 + C48210 + C48209) * C47674 +
            (C50932 + C50933 + C50934) * C153777) *
               C153501 * C2454) *
              C153397 * C153716 +
          (((C48212 + C48213 + C48214) * C47673 +
            (C48215 + C48216 + C48217) * C47674 +
            (C48218 + C48219 + C48220) * C153777) *
               C153501 * C153798 -
           (C48224 * C153777 + (C48214 + C48213 + C48212) * C47674 +
            (C23994 * C147 + C24012 + C24012 + C153761 * C163 + C23992 * C146 +
             C24013 + C24013 + C153790 * C162 + C23990 * C145 + C24014 +
             C24014 + C153809 * C161) *
                C47673) *
               C153501 * C153797 -
           ((C23994 * C7563 + C48164 + C48164 + C153761 * C7571 +
             C23992 * C7562 + C48165 + C48165 + C153790 * C7570 +
             C23990 * C7561 + C48166 + C48166 + C153809 * C7569) *
                C153777 +
            (C48220 + C48219 + C48218) * C47674 + C48224 * C47673) *
               C153501 * C2454) *
              C153397 * C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C47673 +
             C31295 * C47674 + C31296 * C153777) *
                C153812 +
            (C52025 + C52026 + C52027) * C153800 + C52045 * C153774) *
               C153797 -
           (C54332 * C153774 + (C53000 + C53001 + C53002) * C153800 +
            (C31299 * C153777 + C31296 * C47674 + C31295 * C47673) * C153812) *
               C153798 +
           ((C31296 * C47673 + C31299 * C47674 + C34025 * C153777) * C153812 +
            (C53596 + C53597 + C53598) * C153800 +
            (C53599 + C53600 + C53601) * C153774) *
               C2454) *
              C153397 * C153716 +
          (((C31300 * C47673 + C31301 * C47674 + C31302 * C153777) * C153812 +
            (C53003 + C53004 + C53005) * C153800 +
            (C53006 + C53007 + C53008) * C153774) *
               C153798 -
           (C52046 * C153774 + (C52036 + C52035 + C52034) * C153800 +
            (C31301 * C153777 + C31300 * C47674 +
             (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C47673) *
                C153812) *
               C153797 -
           (((C28234 * C31240 + C31272 + C31272 + C153338 * C31244) * C153777 +
             C31304 * C47674 + C31016 * C47673) *
                C153774 +
            ((C28234 * C9041 + C31273 + C31273 + C153338 * C9047) * C153777 +
             C31303 * C47674 + C31015 * C47673) *
                C153800 +
            ((C28234 * C7561 + C31274 + C31274 + C153338 * C7569) * C153777 +
             C31302 * C47674 + C31301 * C47673) *
                C153812) *
               C2454) *
              C153397 * C153384)) /
            (p * q * std::sqrt(p + q));
    d2ee[224] +=
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C144 + C169 + C169 + C121 * C160 + C136 * C145 + C170 +
            C170 + C122 * C161 + C138 * C146 + C171 + C171 + C123 * C162 +
            C140 * C147 + C172 + C172 + C124 * C163 + C142 * C148 + C173 +
            C173 + C125 * C164) *
               C153513 * C153501 * C1938 -
           (C142 * C496 + C533 + C533 + C125 * C520 + C140 * C497 + C534 +
            C534 + C124 * C521 + C138 * C498 + C535 + C535 + C123 * C522 +
            C136 * C499 + C536 + C536 + C122 * C523 + C134 * C500 + C537 +
            C537 + C121 * C524) *
               C153513 * C153501 * C153477) *
              C310 +
          ((C134 * C981 + C1000 + C1000 + C121 * C993 + C136 * C982 + C1001 +
            C1001 + C122 * C994 + C138 * C983 + C1002 + C1002 + C123 * C995 +
            C140 * C984 + C1003 + C1003 + C124 * C996 + C142 * C985 + C1004 +
            C1004 + C125 * C997) *
               C153513 * C153501 * C153477 -
           (C142 * C315 + C352 + C352 + C125 * C339 + C140 * C316 + C353 +
            C353 + C124 * C340 + C138 * C317 + C354 + C354 + C123 * C341 +
            C136 * C318 + C355 + C355 + C122 * C342 + C134 * C319 + C356 +
            C356 + C121 * C343) *
               C153513 * C153501 * C1938) *
              C311 +
          ((C134 * C320 + C357 + C357 + C121 * C344 + C136 * C321 + C358 +
            C358 + C122 * C345 + C138 * C322 + C359 + C359 + C123 * C346 +
            C140 * C323 + C360 + C360 + C124 * C347 + C142 * C324 + C361 +
            C361 + C125 * C348) *
               C153513 * C153501 * C1938 -
           (C142 * C1796 + C1812 + C1812 + C125 * C1806 + C140 * C1797 + C1813 +
            C1813 + C124 * C1807 + C138 * C1798 + C1814 + C1814 + C123 * C1808 +
            C136 * C1799 + C1815 + C1815 + C122 * C1809 + C134 * C1800 + C1816 +
            C1816 + C121 * C1810) *
               C153513 * C153501 * C153477) *
              C312) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C144 + C169 + C169 + C121 * C160 + C136 * C145 + C170 +
            C170 + C122 * C161 + C138 * C146 + C171 + C171 + C123 * C162 +
            C140 * C147 + C172 + C172 + C124 * C163 + C142 * C148 + C173 +
            C173 + C125 * C164) *
               C153513 * C153501 * C1938 -
           (C142 * C496 + C533 + C533 + C125 * C520 + C140 * C497 + C534 +
            C534 + C124 * C521 + C138 * C498 + C535 + C535 + C123 * C522 +
            C136 * C499 + C536 + C536 + C122 * C523 + C134 * C500 + C537 +
            C537 + C121 * C524) *
               C153513 * C153501 * C153477) *
              C153397 * C1133 +
          ((C134 * C499 + C543 + C543 + C121 * C523 + C136 * C498 + C544 +
            C544 + C122 * C522 + C138 * C497 + C545 + C545 + C123 * C521 +
            C140 * C496 + C546 + C546 + C124 * C520 + C142 * C506 + C547 +
            C547 + C125 * C530) *
               C153513 * C153501 * C153477 -
           (C142 * C149 + C174 + C174 + C125 * C165 + C140 * C148 + C175 +
            C175 + C124 * C164 + C138 * C147 + C176 + C176 + C123 * C163 +
            C136 * C146 + C177 + C177 + C122 * C162 + C134 * C145 + C178 +
            C178 + C121 * C161) *
               C153513 * C153501 * C1938) *
              C153397 * C1134 +
          ((C134 * C146 + C179 + C179 + C121 * C162 + C136 * C147 + C180 +
            C180 + C122 * C163 + C138 * C148 + C181 + C181 + C123 * C164 +
            C140 * C149 + C182 + C182 + C124 * C165 + C142 * C150 + C183 +
            C183 + C125 * C166) *
               C153513 * C153501 * C1938 -
           (C142 * C811 + C815 + C815 + C125 * C813 + C140 * C506 + C816 +
            C816 + C124 * C530 + C138 * C496 + C817 + C817 + C123 * C520 +
            C136 * C497 + C818 + C818 + C122 * C521 + C134 * C498 + C819 +
            C819 + C121 * C522) *
               C153513 * C153501 * C153477) *
              C153397 * C1135)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 +
             C2737 + C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
             C153761 * C162) *
                C153513 * C153812 +
            (C3086 + C3087 + C3088) * C153513 * C153800 + C3108 * C153774) *
               C1938 -
           (C5625 * C153774 + (C4213 + C4214 + C4215) * C153513 * C153800 +
            (C2733 * C498 + C3346 + C3346 + C153761 * C522 + C2731 * C499 +
             C3347 + C3347 + C2724 * C523 + C2729 * C500 + C3348 + C3348 +
             C2723 * C524) *
                C153513 * C153812) *
               C153477) *
              C153397 * C1133 +
          (((C2729 * C499 + C3358 + C3358 + C2723 * C523 + C2731 * C498 +
             C3359 + C3359 + C2724 * C522 + C2733 * C497 + C3360 + C3360 +
             C153761 * C521) *
                C153513 * C153812 +
            (C4216 + C4217 + C4218) * C153513 * C153800 +
            (C4219 + C4220 + C4221) * C153513 * C153774) *
               C153477 -
           (C3109 * C153774 + (C3097 + C3096 + C3095) * C153513 * C153800 +
            (C2733 * C147 + C2751 + C2751 + C153761 * C163 + C2731 * C146 +
             C2752 + C2752 + C2724 * C162 + C2729 * C145 + C2753 + C2753 +
             C2723 * C161) *
                C153513 * C153812) *
               C1938) *
              C153397 * C1134 +
          (((C2729 * C146 + C2754 + C2754 + C2723 * C162 + C2731 * C147 +
             C2755 + C2755 + C2724 * C163 + C2733 * C148 + C2756 + C2756 +
             C153761 * C164) *
                C153513 * C153812 +
            (C3621 + C3622 + C3623) * C153513 * C153800 +
            (C3624 + C3625 + C3626) * C153513 * C153774) *
               C1938 -
           ((C2733 * C1796 + C3845 + C3845 + C153761 * C1806 + C2731 * C1797 +
             C3846 + C3846 + C2724 * C1807 + C2729 * C1798 + C3847 + C3847 +
             C2723 * C1808) *
                C153513 * C153774 +
            (C2733 * C985 + C3848 + C3848 + C153761 * C997 + C2731 * C984 +
             C3849 + C3849 + C2724 * C996 + C2729 * C983 + C3850 + C3850 +
             C2723 * C995) *
                C153513 * C153800 +
            (C2733 * C496 + C3851 + C3851 + C153761 * C520 + C2731 * C497 +
             C3852 + C3852 + C2724 * C521 + C2729 * C498 + C3853 + C3853 +
             C2723 * C522) *
                C153513 * C153812) *
               C153477) *
              C153397 * C1135)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 +
             C2737 + C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
             C153761 * C162) *
                C153513 * C153812 +
            (C3086 + C3087 + C3088) * C153513 * C153800 + C3108 * C153774) *
               C1938 -
           (C5625 * C153774 + (C4213 + C4214 + C4215) * C153513 * C153800 +
            (C2733 * C498 + C3346 + C3346 + C153761 * C522 + C2731 * C499 +
             C3347 + C3347 + C2724 * C523 + C2729 * C500 + C3348 + C3348 +
             C2723 * C524) *
                C153513 * C153812) *
               C153477) *
              C310 +
          (((C4215 + C4214 + C4213) * C153513 * C153812 +
            (C4212 + C4211 + C4210) * C153513 * C153800 +
            (C5629 + C5630 + C5631) * C153513 * C153774) *
               C153477 -
           (C4609 * C153774 + (C3091 + C3090 + C3089) * C153513 * C153800 +
            (C3088 + C3087 + C3086) * C153513 * C153812) *
               C1938) *
              C311 +
          ((C3108 * C153812 + (C3094 + C3093 + C3092) * C153513 * C153800 +
            (C4613 + C4614 + C4615) * C153513 * C153774) *
               C1938 -
           ((C2733 * C5601 + C5618 + C5618 + C153761 * C5607 + C2731 * C5602 +
             C5619 + C5619 + C2724 * C5608 + C2729 * C5603 + C5620 + C5620 +
             C2723 * C5609) *
                C153513 * C153774 +
            (C5631 + C5630 + C5629) * C153513 * C153800 + C5625 * C153812) *
               C153477) *
              C312) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
             C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 +
             C23999 + C153761 * C162) *
                C153513 * C23987 +
            (C24335 + C24336 + C24337) * C153513 * C23988 + C24357 * C153774) *
               C1938 -
           (C26823 * C153774 + (C25438 + C25439 + C25440) * C153513 * C23988 +
            (C23994 * C498 + C24583 + C24583 + C153761 * C522 + C23992 * C499 +
             C24584 + C24584 + C153790 * C523 + C23990 * C500 + C24585 +
             C24585 + C153809 * C524) *
                C153513 * C23987) *
               C153477) *
              C153397 * C1133 +
          (((C23990 * C499 + C24595 + C24595 + C153809 * C523 + C23992 * C498 +
             C24596 + C24596 + C153790 * C522 + C23994 * C497 + C24597 +
             C24597 + C153761 * C521) *
                C153513 * C23987 +
            (C25441 + C25442 + C25443) * C153513 * C23988 +
            (C25444 + C25445 + C25446) * C153513 * C153774) *
               C153477 -
           (C24358 * C153774 + (C24346 + C24345 + C24344) * C153513 * C23988 +
            (C23994 * C147 + C24012 + C24012 + C153761 * C163 + C23992 * C146 +
             C24013 + C24013 + C153790 * C162 + C23990 * C145 + C24014 +
             C24014 + C153809 * C161) *
                C153513 * C23987) *
               C1938) *
              C153397 * C1134 +
          (((C23990 * C146 + C24015 + C24015 + C153809 * C162 + C23992 * C147 +
             C24016 + C24016 + C153790 * C163 + C23994 * C148 + C24017 +
             C24017 + C153761 * C164) *
                C153513 * C23987 +
            (C24858 + C24859 + C24860) * C153513 * C23988 +
            (C24861 + C24862 + C24863) * C153513 * C153774) *
               C1938 -
           ((C23994 * C1796 + C25082 + C25082 + C153761 * C1806 +
             C23992 * C1797 + C25083 + C25083 + C153790 * C1807 +
             C23990 * C1798 + C25084 + C25084 + C153809 * C1808) *
                C153513 * C153774 +
            (C23994 * C985 + C25085 + C25085 + C153761 * C997 + C23992 * C984 +
             C25086 + C25086 + C153790 * C996 + C23990 * C983 + C25087 +
             C25087 + C153809 * C995) *
                C153513 * C23988 +
            (C23994 * C496 + C25088 + C25088 + C153761 * C520 + C23992 * C497 +
             C25089 + C25089 + C153790 * C521 + C23990 * C498 + C25090 +
             C25090 + C153809 * C522) *
                C153513 * C23987) *
               C153477) *
              C153397 * C1135)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
             C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 +
             C23999 + C153761 * C162) *
                C153513 * C23987 +
            (C24335 + C24336 + C24337) * C153513 * C23988 + C24357 * C153774) *
               C1938 -
           (C26823 * C153774 + (C25438 + C25439 + C25440) * C153513 * C23988 +
            (C23994 * C498 + C24583 + C24583 + C153761 * C522 + C23992 * C499 +
             C24584 + C24584 + C153790 * C523 + C23990 * C500 + C24585 +
             C24585 + C153809 * C524) *
                C153513 * C23987) *
               C153477) *
              C310 +
          (((C25440 + C25439 + C25438) * C153513 * C23987 +
            (C25437 + C25436 + C25435) * C153513 * C23988 +
            (C26827 + C26828 + C26829) * C153513 * C153774) *
               C153477 -
           (C25825 * C153774 + (C24340 + C24339 + C24338) * C153513 * C23988 +
            (C24337 + C24336 + C24335) * C153513 * C23987) *
               C1938) *
              C311 +
          ((C24357 * C23987 + (C24343 + C24342 + C24341) * C153513 * C23988 +
            (C25829 + C25830 + C25831) * C153513 * C153774) *
               C1938 -
           ((C23994 * C5601 + C26816 + C26816 + C153761 * C5607 +
             C23992 * C5602 + C26817 + C26817 + C153790 * C5608 +
             C23990 * C5603 + C26818 + C26818 + C153809 * C5609) *
                C153513 * C153774 +
            (C26829 + C26828 + C26827) * C153513 * C23988 + C26823 * C23987) *
               C153477) *
              C312) *
         C153378) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153513 *
                C28229 +
            C28439 * C28230 + C28440 * C28231 + C28441 * C28232 +
            C28442 * C28233) *
               C1938 -
           (C29081 * C28233 + C29082 * C28232 + C29083 * C28231 +
            C29084 * C28230 +
            (C28234 * C500 + C28581 + C28581 + C153338 * C524) * C153513 *
                C28229) *
               C153477) *
              C153397 * C1133 +
          (((C28234 * C499 + C28587 + C28587 + C153338 * C523) * C153513 *
                C28229 +
            C29085 * C28230 + C29086 * C28231 + C29087 * C28232 +
            C29088 * C28233) *
               C153477 -
           (C28447 * C28233 + C28446 * C28232 + C28445 * C28231 +
            C28444 * C28230 +
            (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C153513 *
                C28229) *
               C1938) *
              C153397 * C1134 +
          (((C28234 * C146 + C28247 + C28247 + C153338 * C162) * C153513 *
                C28229 +
            C28740 * C28230 + C28741 * C28231 + C28742 * C28232 +
            C28743 * C28233) *
               C1938 -
           ((C28234 * C5601 + C28866 + C28866 + C153338 * C5607) * C153513 *
                C28233 +
            (C28234 * C4145 + C28867 + C28867 + C153338 * C4153) * C153513 *
                C28232 +
            (C28234 * C1798 + C28868 + C28868 + C153338 * C1808) * C153513 *
                C28231 +
            (C28234 * C983 + C28869 + C28869 + C153338 * C995) * C153513 *
                C28230 +
            (C28234 * C498 + C28870 + C28870 + C153338 * C522) * C153513 *
                C28229) *
               C153477) *
              C153397 * C1135)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153513 *
                C28229 +
            C28439 * C28230 + C28440 * C28231 + C28441 * C28232 +
            C28442 * C28233) *
               C1938 -
           (C29081 * C28233 + C29082 * C28232 + C29083 * C28231 +
            C29084 * C28230 +
            (C28234 * C500 + C28581 + C28581 + C153338 * C524) * C153513 *
                C28229) *
               C153477) *
              C310 +
          ((C29084 * C28229 + C29083 * C28230 + C29082 * C28231 +
            C29081 * C28232 + C29868 * C28233) *
               C153477 -
           (C28443 * C28233 + C28442 * C28232 + C28441 * C28231 +
            C28440 * C28230 + C28439 * C28229) *
               C1938) *
              C311 +
          ((C28440 * C28229 + C28441 * C28230 + C28442 * C28231 +
            C28443 * C28232 + C29302 * C28233) *
               C1938 -
           ((C28234 * C29858 + C29864 + C29864 + C153338 * C29860) * C153513 *
                C28233 +
            C29868 * C28232 + C29081 * C28231 + C29082 * C28230 +
            C29083 * C28229) *
               C153477) *
              C312) *
         C153378) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
             C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 +
             C23999 + C153761 * C162) *
                C47673 +
            (C48203 + C48204 + C48205) * C47674 + C48223 * C153777) *
               C153501 * C1938 -
           ((C48209 + C48210 + C48211) * C153777 +
            (C48208 + C48207 + C48206) * C47674 +
            (C48205 + C48204 + C48203) * C47673) *
               C153501 * C153477) *
              C153397 * C1133 +
          (((C48212 + C48213 + C48214) * C47673 +
            (C48215 + C48216 + C48217) * C47674 +
            (C48218 + C48219 + C48220) * C153777) *
               C153501 * C153477 -
           (C48224 * C153777 + (C48214 + C48213 + C48212) * C47674 +
            (C23994 * C147 + C24012 + C24012 + C153761 * C163 + C23992 * C146 +
             C24013 + C24013 + C153790 * C162 + C23990 * C145 + C24014 +
             C24014 + C153809 * C161) *
                C47673) *
               C153501 * C1938) *
              C153397 * C1134 +
          (((C23990 * C146 + C24015 + C24015 + C153809 * C162 + C23992 * C147 +
             C24016 + C24016 + C153790 * C163 + C23994 * C148 + C24017 +
             C24017 + C153761 * C164) *
                C47673 +
            (C48691 + C48692 + C48693) * C47674 +
            (C48694 + C48695 + C48696) * C153777) *
               C153501 * C1938 -
           ((C23994 * C2148 + C48676 + C48676 + C153761 * C2158 +
             C23992 * C2149 + C48677 + C48677 + C153790 * C2159 +
             C23990 * C2150 + C48678 + C48678 + C153809 * C2160) *
                C153777 +
            (C48696 + C48695 + C48694) * C47674 +
            (C48693 + C48692 + C48691) * C47673) *
               C153501 * C153477) *
              C153397 * C1135)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
             C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 +
             C23999 + C153761 * C162) *
                C47673 +
            (C48203 + C48204 + C48205) * C47674 + C48223 * C153777) *
               C153501 * C1938 -
           ((C48209 + C48210 + C48211) * C153777 +
            (C48208 + C48207 + C48206) * C47674 +
            (C48205 + C48204 + C48203) * C47673) *
               C153501 * C153477) *
              C310 +
          (((C25440 + C25439 + C25438) * C47673 +
            (C26077 + C26078 + C26079) * C47674 +
            (C49604 + C49605 + C49606) * C153777) *
               C153501 * C153477 -
           (C49600 * C153777 + (C25438 + C25439 + C25440) * C47674 +
            (C24337 + C24336 + C24335) * C47673) *
               C153501 * C1938) *
              C311 +
          ((C24355 * C47673 + (C25437 + C25436 + C25435) * C47674 +
            (C26080 + C26081 + C26082) * C153777) *
               C153501 * C1938 -
           ((C23994 * C6213 + C27412 + C27412 + C153761 * C6225 +
             C23992 * C6214 + C27413 + C27413 + C153790 * C6226 +
             C23990 * C6215 + C27414 + C27414 + C153809 * C6227) *
                C153777 +
            (C26082 + C26081 + C26080) * C47674 + C26819 * C47673) *
               C153501 * C153477) *
              C312) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C47673 +
             C31295 * C47674 + C31296 * C153777) *
                C153812 +
            (C52025 + C52026 + C52027) * C153800 + C52045 * C153774) *
               C1938 -
           (C54332 * C153774 + (C53000 + C53001 + C53002) * C153800 +
            (C31299 * C153777 + C31296 * C47674 + C31295 * C47673) * C153812) *
               C153477) *
              C153397 * C1133 +
          (((C31300 * C47673 + C31301 * C47674 + C31302 * C153777) * C153812 +
            (C53003 + C53004 + C53005) * C153800 +
            (C53006 + C53007 + C53008) * C153774) *
               C153477 -
           (C52046 * C153774 + (C52036 + C52035 + C52034) * C153800 +
            (C31301 * C153777 + C31300 * C47674 +
             (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C47673) *
                C153812) *
               C1938) *
              C153397 * C1134 +
          ((((C28234 * C146 + C28247 + C28247 + C153338 * C162) * C47673 +
             C31779 * C47674 + C31780 * C153777) *
                C153812 +
            (C52483 + C52484 + C52485) * C153800 +
            (C52486 + C52487 + C52488) * C153774) *
               C1938 -
           (((C28234 * C6213 + C31772 + C31772 + C153338 * C6225) * C153777 +
             C31545 * C47674 + C31544 * C47673) *
                C153774 +
            ((C28234 * C6216 + C31773 + C31773 + C153338 * C6228) * C153777 +
             C31543 * C47674 + C31542 * C47673) *
                C153800 +
            ((C28234 * C2150 + C31774 + C31774 + C153338 * C2160) * C153777 +
             C31780 * C47674 + C31779 * C47673) *
                C153812) *
               C153477) *
              C153397 * C1135)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C47673 +
             C31295 * C47674 + C31296 * C153777) *
                C153812 +
            (C52025 + C52026 + C52027) * C153800 + C52045 * C153774) *
               C1938 -
           (C54332 * C153774 + (C53000 + C53001 + C53002) * C153800 +
            (C31299 * C153777 + C31296 * C47674 + C31295 * C47673) * C153812) *
               C153477) *
              C310 +
          (((C53002 + C53001 + C53000) * C153812 +
            (C52999 + C52998 + C52997) * C153800 +
            (C54329 + C54330 + C54331) * C153774) *
               C153477 -
           (C53377 * C153774 + (C52030 + C52029 + C52028) * C153800 +
            (C52027 + C52026 + C52025) * C153812) *
               C1938) *
              C311 +
          ((C52045 * C153812 + (C52033 + C52032 + C52031) * C153800 +
            (C53374 + C53375 + C53376) * C153774) *
               C1938 -
           (((C28234 * C30194 + C30201 + C30201 + C153338 * C30198) * C153777 +
             C29448 * C47674 + C29073 * C47673) *
                C153774 +
            (C54331 + C54330 + C54329) * C153800 + C54332 * C153812) *
               C153477) *
              C312) *
         C153378) /
            (p * q * std::sqrt(p + q));
    d2ee[225] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C152033 * C144 + C83552 + C83552 + C153343 * C160 +
              C152026 * C145 + C83553 + C83553 + C153351 * C161 +
              C83549 * C146 + C83554 + C83554 + C83541 * C162) *
                 C98471 +
             (C88548 + C88549 + C88550) * C153600) *
                C153739 +
            ((C83890 + C83891 + C83892) * C98471 + C89569 * C153600) *
                C153560) *
               C153413 * C153724 -
           ((C86374 * C153600 + (C83895 + C83894 + C83893) * C98471) * C153560 +
            (C89570 * C153600 + (C83892 + C83891 + C83890) * C98471) *
                C153739) *
               C153413 * C153449) *
              C153793 +
          ((((C83899 + C83900 + C83901) * C98471 + C89571 * C153600) * C153739 +
            ((C83902 + C83903 + C83904) * C98471 +
             (C84999 + C85000 + C85001) * C153600) *
                C153560) *
               C153413 * C153449 -
           ((C89572 * C153600 + (C83901 + C83900 + C83899) * C98471) * C153560 +
            ((C88556 + C88555 + C88554) * C153600 +
             (C83549 * C147 + C83567 + C83567 + C83541 * C163 + C152026 * C146 +
              C83568 + C83568 + C153351 * C162 + C152033 * C145 + C83569 +
              C83569 + C153343 * C161) *
                 C98471) *
                C153739) *
               C153413 * C153724) *
              C153794 +
          ((((C152033 * C146 + C83570 + C83570 + C153343 * C162 +
              C152026 * C147 + C83571 + C83571 + C153351 * C163 +
              C83549 * C148 + C83572 + C83572 + C83541 * C164) *
                 C98471 +
             (C89176 + C89177 + C89178) * C153600) *
                C153739 +
            ((C84413 + C84414 + C84415) * C98471 +
             (C88865 + C88866 + C88867) * C153600) *
                C153560) *
               C153413 * C153724 -
           (((C83549 * C1796 + C84637 + C84637 + C83541 * C1806 +
              C152026 * C1797 + C84638 + C84638 + C153351 * C1807 +
              C152033 * C1798 + C84639 + C84639 + C153343 * C1808) *
                 C153600 +
             (C84418 + C84417 + C84416) * C98471) *
                C153560 +
            ((C88867 + C88866 + C88865) * C153600 +
             (C84415 + C84414 + C84413) * C98471) *
                C153739) *
               C153413 * C153449) *
              C678)) /
        (p * q * std::sqrt(p + q));
    d2ee[226] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                  ((((((C152033 * C144 + C83552 + C83552 + C153343 * C160 +
                        C152026 * C145 + C83553 + C83553 + C153351 * C161 +
                        C83549 * C146 + C83554 + C83554 + C83541 * C162) *
                           C98471 +
                       (C88548 + C88549 + C88550) * C153600) *
                          C153739 +
                      ((C83890 + C83891 + C83892) * C98471 + C89569 * C153600) *
                          C153560) *
                         C153725 -
                     ((C90355 * C153600 + C89570 * C98471) * C153560 +
                      ((C88551 + C88552 + C88553) * C153600 +
                       (C88550 + C88549 + C88548) * C98471) *
                          C153739) *
                         C153477) *
                        C153724 +
                    (((C89569 * C98471 + C90356 * C153600) * C153739 +
                      (C91333 * C98471 + (C85635 + C85636 + C85637) * C153600) *
                          C153560) *
                         C153477 -
                     ((C86374 * C153600 + (C83895 + C83894 + C83893) * C98471) *
                          C153560 +
                      (C89570 * C153600 + (C83892 + C83891 + C83890) * C98471) *
                          C153739) *
                         C153725) *
                        C153449) *
                       C313 +
                   (((((C88554 + C88555 + C88556) * C98471 +
                       (C88557 + C88558 + C88559) * C153600) *
                          C153739 +
                      (C89571 * C98471 + (C88560 + C88561 + C88562) * C153600) *
                          C153560) *
                         C153477 -
                     ((C89572 * C153600 + (C83901 + C83900 + C83899) * C98471) *
                          C153560 +
                      ((C88556 + C88555 + C88554) * C153600 +
                       (C83549 * C147 + C83567 + C83567 + C83541 * C163 +
                        C152026 * C146 + C83568 + C83568 + C153351 * C162 +
                        C152033 * C145 + C83569 + C83569 + C153343 * C161) *
                           C98471) *
                          C153739) *
                         C153725) *
                        C153724 +
                    ((((C83899 + C83900 + C83901) * C98471 + C89571 * C153600) *
                          C153739 +
                      ((C83902 + C83903 + C83904) * C98471 +
                       (C84999 + C85000 + C85001) * C153600) *
                          C153560) *
                         C153725 -
                     (((C83549 * C3330 + C84159 + C84159 + C83541 * C3338 +
                        C152026 * C3329 + C84160 + C84160 + C153351 * C3337 +
                        C152033 * C3328 + C84161 + C84161 + C153343 * C3336) *
                           C153600 +
                       (C85001 + C85000 + C84999) * C98471) *
                          C153560 +
                      ((C88562 + C88561 + C88560) * C153600 + C89572 * C98471) *
                          C153739) *
                         C153477) *
                        C153449) *
                       C153384)) /
                 (p * q * std::sqrt(p + q));
    d2ee[227] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C152033 * C144 + C83552 + C83552 + C153343 * C160 +
              C152026 * C145 + C83553 + C83553 + C153351 * C161 +
              C83549 * C146 + C83554 + C83554 + C83541 * C162) *
                 C98471 +
             (C88548 + C88549 + C88550) * C153600) *
                C153739 +
            ((C83890 + C83891 + C83892) * C98471 + C89569 * C153600) *
                C153560) *
               C153413 * C310 -
           ((C86374 * C153600 + (C83895 + C83894 + C83893) * C98471) * C153560 +
            (C89570 * C153600 + (C83892 + C83891 + C83890) * C98471) *
                C153739) *
               C153413 * C311 +
           ((C83910 * C98471 + C91333 * C153600) * C153739 +
            ((C83898 + C83897 + C83896) * C98471 +
             (C86382 + C86383 + C86384) * C153600) *
                C153560) *
               C153413 * C312) *
              C313 +
          ((((C83899 + C83900 + C83901) * C98471 + C89571 * C153600) * C153739 +
            ((C83902 + C83903 + C83904) * C98471 +
             (C84999 + C85000 + C85001) * C153600) *
                C153560) *
               C153413 * C311 -
           ((C89572 * C153600 + (C83901 + C83900 + C83899) * C98471) * C153560 +
            ((C88556 + C88555 + C88554) * C153600 +
             (C83549 * C147 + C83567 + C83567 + C83541 * C163 + C152026 * C146 +
              C83568 + C83568 + C153351 * C162 + C152033 * C145 + C83569 +
              C83569 + C153343 * C161) *
                 C98471) *
                C153739) *
               C153413 * C310 -
           (((C83549 * C4146 + C84963 + C84963 + C83541 * C4154 +
              C152026 * C4145 + C84964 + C84964 + C153351 * C4153 +
              C152033 * C4144 + C84965 + C84965 + C153343 * C4152) *
                 C153600 +
             (C83907 + C83906 + C83905) * C98471) *
                C153560 +
            ((C85001 + C85000 + C84999) * C153600 + C83911 * C98471) *
                C153739) *
               C153413 * C312) *
              C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C152033 * C144 + C83552 + C83552 + C153343 * C160 +
             C152026 * C145 + C83553 + C83553 + C153351 * C161 + C83549 * C146 +
             C83554 + C83554 + C83541 * C162) *
                C98471 +
            (C88548 + C88549 + C88550) * C153600) *
               C153739 +
           ((C83890 + C83891 + C83892) * C98471 + C89569 * C153600) * C153560) *
              C153413 * C153397 * C130 -
          ((C89572 * C153600 + (C83901 + C83900 + C83899) * C98471) * C153560 +
           ((C88556 + C88555 + C88554) * C153600 +
            (C83549 * C147 + C83567 + C83567 + C83541 * C163 + C152026 * C146 +
             C83568 + C83568 + C153351 * C162 + C152033 * C145 + C83569 +
             C83569 + C153343 * C161) *
                C98471) *
               C153739) *
              C153413 * C153397 * C131 +
          (((C152033 * C146 + C83570 + C83570 + C153343 * C162 +
             C152026 * C147 + C83571 + C83571 + C153351 * C163 + C83549 * C148 +
             C83572 + C83572 + C83541 * C164) *
                C98471 +
            (C89176 + C89177 + C89178) * C153600) *
               C153739 +
           ((C84413 + C84414 + C84415) * C98471 +
            (C88865 + C88866 + C88867) * C153600) *
               C153560) *
              C153413 * C153397 * C132 -
          (((C83549 * C986 + C87896 + C87896 + C83541 * C998 + C152026 * C985 +
             C87897 + C87897 + C153351 * C997 + C152033 * C984 + C87898 +
             C87898 + C153343 * C996) *
                C153600 +
            (C83549 * C325 + C83582 + C83582 + C83541 * C349 + C152026 * C315 +
             C83583 + C83583 + C153351 * C339 + C152033 * C316 + C83584 +
             C83584 + C153343 * C340) *
                C98471) *
               C153560 +
           ((C83549 * C506 + C87899 + C87899 + C83541 * C530 + C152026 * C496 +
             C87900 + C87900 + C153351 * C520 + C152033 * C497 + C87901 +
             C87901 + C153343 * C521) *
                C153600 +
            (C83549 * C149 + C83585 + C83585 + C83541 * C165 + C152026 * C148 +
             C83586 + C83586 + C153351 * C164 + C152033 * C147 + C83587 +
             C83587 + C153343 * C163) *
                C98471) *
               C153739) *
              C153413 * C153397 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C152033 * C144 + C83552 + C83552 + C153343 * C160 +
              C152026 * C145 + C83553 + C83553 + C153351 * C161 +
              C83549 * C146 + C83554 + C83554 + C83541 * C162) *
                 C98471 +
             (C88548 + C88549 + C88550) * C153600) *
                C153739 +
            ((C83890 + C83891 + C83892) * C98471 + C89569 * C153600) *
                C153560) *
               C493 -
           ((C90355 * C153600 + C89570 * C98471) * C153560 +
            ((C88551 + C88552 + C88553) * C153600 +
             (C88550 + C88549 + C88548) * C98471) *
                C153739) *
               C494 +
           (((C88553 + C88552 + C88551) * C98471 +
             (C92126 + C92127 + C92128) * C153600) *
                C153739 +
            (C90356 * C98471 + (C90363 + C90364 + C90365) * C153600) *
                C153560) *
               C495) *
              C153397 * C313 +
          ((((C88554 + C88555 + C88556) * C98471 +
             (C88557 + C88558 + C88559) * C153600) *
                C153739 +
            (C89571 * C98471 + (C88560 + C88561 + C88562) * C153600) *
                C153560) *
               C494 -
           ((C89572 * C153600 + (C83901 + C83900 + C83899) * C98471) * C153560 +
            ((C88556 + C88555 + C88554) * C153600 +
             (C83549 * C147 + C83567 + C83567 + C83541 * C163 + C152026 * C146 +
              C83568 + C83568 + C153351 * C162 + C152033 * C145 + C83569 +
              C83569 + C153343 * C161) *
                 C98471) *
                C153739) *
               C493 -
           (((C83549 * C8437 + C88512 + C88512 + C83541 * C8439 +
              C152026 * C6216 + C88513 + C88513 + C153351 * C6228 +
              C152033 * C6217 + C88514 + C88514 + C153343 * C6229) *
                 C153600 +
             (C88562 + C88561 + C88560) * C98471) *
                C153560 +
            ((C83549 * C2149 + C88515 + C88515 + C83541 * C2159 +
              C152026 * C2150 + C88516 + C88516 + C153351 * C2160 +
              C152033 * C2151 + C88517 + C88517 + C153343 * C2161) *
                 C153600 +
             (C88559 + C88558 + C88557) * C98471) *
                C153739) *
               C495) *
              C153397 * C153384)) /
            (p * q * std::sqrt(p + q));
    d2ee[228] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C152033 * C144 + C83552 + C83552 + C153343 * C160 +
              C152026 * C145 + C83553 + C83553 + C153351 * C161 +
              C83549 * C146 + C83554 + C83554 + C83541 * C162) *
                 C98471 +
             (C88548 + C88549 + C88550) * C153600) *
                C153739 +
            ((C83890 + C83891 + C83892) * C98471 + C89569 * C153600) *
                C153560) *
               C153725 -
           ((C90355 * C153600 + C89570 * C98471) * C153560 +
            ((C88551 + C88552 + C88553) * C153600 +
             (C88550 + C88549 + C88548) * C98471) *
                C153739) *
               C153477) *
              C153397 * C153793 +
          ((((C88554 + C88555 + C88556) * C98471 +
             (C88557 + C88558 + C88559) * C153600) *
                C153739 +
            (C89571 * C98471 + (C88560 + C88561 + C88562) * C153600) *
                C153560) *
               C153477 -
           ((C89572 * C153600 + (C83901 + C83900 + C83899) * C98471) * C153560 +
            ((C88556 + C88555 + C88554) * C153600 +
             (C83549 * C147 + C83567 + C83567 + C83541 * C163 + C152026 * C146 +
              C83568 + C83568 + C153351 * C162 + C152033 * C145 + C83569 +
              C83569 + C153343 * C161) *
                 C98471) *
                C153739) *
               C153725) *
              C153397 * C153794 +
          ((((C152033 * C146 + C83570 + C83570 + C153343 * C162 +
              C152026 * C147 + C83571 + C83571 + C153351 * C163 +
              C83549 * C148 + C83572 + C83572 + C83541 * C164) *
                 C98471 +
             (C89176 + C89177 + C89178) * C153600) *
                C153739 +
            ((C84413 + C84414 + C84415) * C98471 +
             (C88865 + C88866 + C88867) * C153600) *
                C153560) *
               C153725 -
           (((C83549 * C1365 + C89164 + C89164 + C83541 * C1375 +
              C152026 * C1366 + C89165 + C89165 + C153351 * C1376 +
              C152033 * C1367 + C89166 + C89166 + C153343 * C1377) *
                 C153600 +
             (C88867 + C88866 + C88865) * C98471) *
                C153560 +
            ((C83549 * C505 + C89167 + C89167 + C83541 * C529 + C152026 * C504 +
              C89168 + C89168 + C153351 * C528 + C152033 * C503 + C89169 +
              C89169 + C153343 * C527) *
                 C153600 +
             (C89178 + C89177 + C89176) * C98471) *
                C153739) *
               C153477) *
              C153397 * C678)) /
        (p * q * std::sqrt(p + q));
    d2ee[229] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C152033 * C144 + C83552 + C83552 + C153343 * C160 +
             C152026 * C145 + C83553 + C83553 + C153351 * C161 + C83549 * C146 +
             C83554 + C83554 + C83541 * C162) *
                C98471 +
            (C88548 + C88549 + C88550) * C153600) *
               C153739 +
           ((C83890 + C83891 + C83892) * C98471 + C89569 * C153600) * C153560) *
              C153413 * C153397 * C130 -
          ((C89572 * C153600 + (C83901 + C83900 + C83899) * C98471) * C153560 +
           ((C88556 + C88555 + C88554) * C153600 +
            (C83549 * C147 + C83567 + C83567 + C83541 * C163 + C152026 * C146 +
             C83568 + C83568 + C153351 * C162 + C152033 * C145 + C83569 +
             C83569 + C153343 * C161) *
                C98471) *
               C153739) *
              C153413 * C153397 * C131 +
          (((C152033 * C146 + C83570 + C83570 + C153343 * C162 +
             C152026 * C147 + C83571 + C83571 + C153351 * C163 + C83549 * C148 +
             C83572 + C83572 + C83541 * C164) *
                C98471 +
            (C89176 + C89177 + C89178) * C153600) *
               C153739 +
           ((C84413 + C84414 + C84415) * C98471 +
            (C88865 + C88866 + C88867) * C153600) *
               C153560) *
              C153413 * C153397 * C132 -
          (((C83549 * C986 + C87896 + C87896 + C83541 * C998 + C152026 * C985 +
             C87897 + C87897 + C153351 * C997 + C152033 * C984 + C87898 +
             C87898 + C153343 * C996) *
                C153600 +
            (C83549 * C325 + C83582 + C83582 + C83541 * C349 + C152026 * C315 +
             C83583 + C83583 + C153351 * C339 + C152033 * C316 + C83584 +
             C83584 + C153343 * C340) *
                C98471) *
               C153560 +
           ((C83549 * C506 + C87899 + C87899 + C83541 * C530 + C152026 * C496 +
             C87900 + C87900 + C153351 * C520 + C152033 * C497 + C87901 +
             C87901 + C153343 * C521) *
                C153600 +
            (C83549 * C149 + C83585 + C83585 + C83541 * C165 + C152026 * C148 +
             C83586 + C83586 + C153351 * C164 + C152033 * C147 + C83587 +
             C83587 + C153343 * C163) *
                C98471) *
               C153739) *
              C153413 * C153397 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C152033 * C144 + C83552 + C83552 + C153343 * C160 +
              C152026 * C145 + C83553 + C83553 + C153351 * C161 +
              C83549 * C146 + C83554 + C83554 + C83541 * C162) *
                 C98471 +
             (C88548 + C88549 + C88550) * C153600) *
                C153739 +
            ((C83890 + C83891 + C83892) * C98471 + C89569 * C153600) *
                C153560) *
               C153413 * C310 -
           ((C86374 * C153600 + (C83895 + C83894 + C83893) * C98471) * C153560 +
            (C89570 * C153600 + (C83892 + C83891 + C83890) * C98471) *
                C153739) *
               C153413 * C311 +
           ((C83910 * C98471 + C91333 * C153600) * C153739 +
            ((C83898 + C83897 + C83896) * C98471 +
             (C86382 + C86383 + C86384) * C153600) *
                C153560) *
               C153413 * C312) *
              C313 +
          ((((C83899 + C83900 + C83901) * C98471 + C89571 * C153600) * C153739 +
            ((C83902 + C83903 + C83904) * C98471 +
             (C84999 + C85000 + C85001) * C153600) *
                C153560) *
               C153413 * C311 -
           ((C89572 * C153600 + (C83901 + C83900 + C83899) * C98471) * C153560 +
            ((C88556 + C88555 + C88554) * C153600 +
             (C83549 * C147 + C83567 + C83567 + C83541 * C163 + C152026 * C146 +
              C83568 + C83568 + C153351 * C162 + C152033 * C145 + C83569 +
              C83569 + C153343 * C161) *
                 C98471) *
                C153739) *
               C153413 * C310 -
           (((C83549 * C4146 + C84963 + C84963 + C83541 * C4154 +
              C152026 * C4145 + C84964 + C84964 + C153351 * C4153 +
              C152033 * C4144 + C84965 + C84965 + C153343 * C4152) *
                 C153600 +
             (C83907 + C83906 + C83905) * C98471) *
                C153560 +
            ((C85001 + C85000 + C84999) * C153600 + C83911 * C98471) *
                C153739) *
               C153413 * C312) *
              C153384)) /
            (p * q * std::sqrt(p + q));
    d2ee[230] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C152033 * C144 + C83552 + C83552 + C153343 * C160 +
              C152026 * C145 + C83553 + C83553 + C153351 * C161 +
              C83549 * C146 + C83554 + C83554 + C83541 * C162) *
                 C98471 +
             (C88548 + C88549 + C88550) * C153600) *
                C153739 +
            ((C83890 + C83891 + C83892) * C98471 + C89569 * C153600) *
                C153560) *
               C153413 * C153795 -
           ((C86374 * C153600 + (C83895 + C83894 + C83893) * C98471) * C153560 +
            (C89570 * C153600 + (C83892 + C83891 + C83890) * C98471) *
                C153739) *
               C153413 * C153796 +
           ((C83910 * C98471 + C91333 * C153600) * C153739 +
            ((C83898 + C83897 + C83896) * C98471 +
             (C86382 + C86383 + C86384) * C153600) *
                C153560) *
               C153413 * C1509) *
              C153716 +
          ((((C83899 + C83900 + C83901) * C98471 + C89571 * C153600) * C153739 +
            ((C83902 + C83903 + C83904) * C98471 +
             (C84999 + C85000 + C85001) * C153600) *
                C153560) *
               C153413 * C153796 -
           ((C89572 * C153600 + (C83901 + C83900 + C83899) * C98471) * C153560 +
            ((C88556 + C88555 + C88554) * C153600 +
             (C83549 * C147 + C83567 + C83567 + C83541 * C163 + C152026 * C146 +
              C83568 + C83568 + C153351 * C162 + C152033 * C145 + C83569 +
              C83569 + C153343 * C161) *
                 C98471) *
                C153739) *
               C153413 * C153795 -
           (((C83549 * C4146 + C84963 + C84963 + C83541 * C4154 +
              C152026 * C4145 + C84964 + C84964 + C153351 * C4153 +
              C152033 * C4144 + C84965 + C84965 + C153343 * C4152) *
                 C153600 +
             (C83907 + C83906 + C83905) * C98471) *
                C153560 +
            ((C85001 + C85000 + C84999) * C153600 + C83911 * C98471) *
                C153739) *
               C153413 * C1509) *
              C153384)) /
        (p * q * std::sqrt(p + q));
    d2ee[231] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C152033 * C144 + C83552 + C83552 + C153343 * C160 +
              C152026 * C145 + C83553 + C83553 + C153351 * C161 +
              C83549 * C146 + C83554 + C83554 + C83541 * C162) *
                 C98471 +
             (C88548 + C88549 + C88550) * C153600) *
                C153739 +
            ((C83890 + C83891 + C83892) * C98471 + C89569 * C153600) *
                C153560) *
               C153725 -
           ((C90355 * C153600 + C89570 * C98471) * C153560 +
            ((C88551 + C88552 + C88553) * C153600 +
             (C88550 + C88549 + C88548) * C98471) *
                C153739) *
               C153477) *
              C153795 +
          (((C89569 * C98471 + C90356 * C153600) * C153739 +
            (C91333 * C98471 + (C85635 + C85636 + C85637) * C153600) *
                C153560) *
               C153477 -
           ((C86374 * C153600 + (C83895 + C83894 + C83893) * C98471) * C153560 +
            (C89570 * C153600 + (C83892 + C83891 + C83890) * C98471) *
                C153739) *
               C153725) *
              C153796 +
          (((C83910 * C98471 + C91333 * C153600) * C153739 +
            ((C83898 + C83897 + C83896) * C98471 +
             (C86382 + C86383 + C86384) * C153600) *
                C153560) *
               C153725 -
           (((C83549 * C4833 + C85617 + C85617 + C83541 * C4839 +
              C152026 * C4834 + C85618 + C85618 + C153351 * C4840 +
              C152033 * C4835 + C85619 + C85619 + C153343 * C4841) *
                 C153600 +
             (C86384 + C86383 + C86382) * C98471) *
                C153560 +
            ((C85637 + C85636 + C85635) * C153600 + C86374 * C98471) *
                C153739) *
               C153477) *
              C1509) *
         C153378) /
        (p * q * std::sqrt(p + q));
    d2ee[232] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C152033 * C144 + C83552 + C83552 + C153343 * C160 +
             C152026 * C145 + C83553 + C83553 + C153351 * C161 + C83549 * C146 +
             C83554 + C83554 + C83541 * C162) *
                C98471 +
            (C88548 + C88549 + C88550) * C153600) *
               C153739 +
           ((C83890 + C83891 + C83892) * C98471 + C89569 * C153600) * C153560) *
              C153413 * C1218 -
          ((C86374 * C153600 + (C83895 + C83894 + C83893) * C98471) * C153560 +
           (C89570 * C153600 + (C83892 + C83891 + C83890) * C98471) * C153739) *
              C153413 * C1219 +
          ((C83910 * C98471 + C91333 * C153600) * C153739 +
           ((C83898 + C83897 + C83896) * C98471 +
            (C86382 + C86383 + C86384) * C153600) *
               C153560) *
              C153413 * C1220 -
          (((C83549 * C5601 + C86371 + C86371 + C83541 * C5607 +
             C152026 * C5602 + C86372 + C86372 + C153351 * C5608 +
             C152033 * C5603 + C86373 + C86373 + C153343 * C5609) *
                C153600 +
            (C85386 + C85385 + C85384) * C98471) *
               C153560 +
           ((C86384 + C86383 + C86382) * C153600 + C85376 * C98471) * C153739) *
              C153413 * C1221) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C152033 * C144 + C83552 + C83552 + C153343 * C160 +
              C152026 * C145 + C83553 + C83553 + C153351 * C161 +
              C83549 * C146 + C83554 + C83554 + C83541 * C162) *
                 C98471 +
             (C88548 + C88549 + C88550) * C153600) *
                C153739 +
            ((C83890 + C83891 + C83892) * C98471 + C89569 * C153600) *
                C153560) *
               C153413 * C1131 -
           ((C86374 * C153600 + (C83895 + C83894 + C83893) * C98471) * C153560 +
            (C89570 * C153600 + (C83892 + C83891 + C83890) * C98471) *
                C153739) *
               C153413 * C153449) *
              C1133 +
          ((((C83899 + C83900 + C83901) * C98471 + C89571 * C153600) * C153739 +
            ((C83902 + C83903 + C83904) * C98471 +
             (C84999 + C85000 + C85001) * C153600) *
                C153560) *
               C153413 * C153449 -
           ((C89572 * C153600 + (C83901 + C83900 + C83899) * C98471) * C153560 +
            ((C88556 + C88555 + C88554) * C153600 +
             (C83549 * C147 + C83567 + C83567 + C83541 * C163 + C152026 * C146 +
              C83568 + C83568 + C153351 * C162 + C152033 * C145 + C83569 +
              C83569 + C153343 * C161) *
                 C98471) *
                C153739) *
               C153413 * C1131) *
              C1134 +
          ((((C152033 * C146 + C83570 + C83570 + C153343 * C162 +
              C152026 * C147 + C83571 + C83571 + C153351 * C163 +
              C83549 * C148 + C83572 + C83572 + C83541 * C164) *
                 C98471 +
             (C89176 + C89177 + C89178) * C153600) *
                C153739 +
            ((C84413 + C84414 + C84415) * C98471 +
             (C88865 + C88866 + C88867) * C153600) *
                C153560) *
               C153413 * C1131 -
           (((C83549 * C1796 + C84637 + C84637 + C83541 * C1806 +
              C152026 * C1797 + C84638 + C84638 + C153351 * C1807 +
              C152033 * C1798 + C84639 + C84639 + C153343 * C1808) *
                 C153600 +
             (C84418 + C84417 + C84416) * C98471) *
                C153560 +
            ((C88867 + C88866 + C88865) * C153600 +
             (C84415 + C84414 + C84413) * C98471) *
                C153739) *
               C153413 * C153449) *
              C1135)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C152033 * C144 + C83552 + C83552 + C153343 * C160 +
              C152026 * C145 + C83553 + C83553 + C153351 * C161 +
              C83549 * C146 + C83554 + C83554 + C83541 * C162) *
                 C98471 +
             (C88548 + C88549 + C88550) * C153600) *
                C153739 +
            ((C83890 + C83891 + C83892) * C98471 + C89569 * C153600) *
                C153560) *
               C493 -
           ((C90355 * C153600 + C89570 * C98471) * C153560 +
            ((C88551 + C88552 + C88553) * C153600 +
             (C88550 + C88549 + C88548) * C98471) *
                C153739) *
               C494 +
           (((C88553 + C88552 + C88551) * C98471 +
             (C92126 + C92127 + C92128) * C153600) *
                C153739 +
            (C90356 * C98471 + (C90363 + C90364 + C90365) * C153600) *
                C153560) *
               C495) *
              C1131 +
          (((C89569 * C98471 + C90356 * C153600) * C153739 +
            (C91333 * C98471 + (C85635 + C85636 + C85637) * C153600) *
                C153560) *
               C494 -
           ((C86374 * C153600 + (C83895 + C83894 + C83893) * C98471) * C153560 +
            (C89570 * C153600 + (C83892 + C83891 + C83890) * C98471) *
                C153739) *
               C493 -
           (((C83549 * C6213 + C86967 + C86967 + C83541 * C6225 +
              C152026 * C6214 + C86968 + C86968 + C153351 * C6226 +
              C152033 * C6215 + C86969 + C86969 + C153343 * C6227) *
                 C153600 +
             (C85637 + C85636 + C85635) * C98471) *
                C153560 +
            ((C90365 + C90364 + C90363) * C153600 + C90355 * C98471) *
                C153739) *
               C495) *
              C153449) *
         C153378) /
            (p * q * std::sqrt(p + q));
    d2ee[233] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                  ((((((C152033 * C144 + C83552 + C83552 + C153343 * C160 +
                        C152026 * C145 + C83553 + C83553 + C153351 * C161 +
                        C83549 * C146 + C83554 + C83554 + C83541 * C162) *
                           C98471 +
                       (C88548 + C88549 + C88550) * C153600) *
                          C153739 +
                      ((C83890 + C83891 + C83892) * C98471 + C89569 * C153600) *
                          C153560) *
                         C153725 -
                     ((C90355 * C153600 + C89570 * C98471) * C153560 +
                      ((C88551 + C88552 + C88553) * C153600 +
                       (C88550 + C88549 + C88548) * C98471) *
                          C153739) *
                         C153477) *
                        C1131 +
                    (((C89569 * C98471 + C90356 * C153600) * C153739 +
                      (C91333 * C98471 + (C85635 + C85636 + C85637) * C153600) *
                          C153560) *
                         C153477 -
                     ((C86374 * C153600 + (C83895 + C83894 + C83893) * C98471) *
                          C153560 +
                      (C89570 * C153600 + (C83892 + C83891 + C83890) * C98471) *
                          C153739) *
                         C153725) *
                        C153449) *
                       C153716 +
                   (((((C88554 + C88555 + C88556) * C98471 +
                       (C88557 + C88558 + C88559) * C153600) *
                          C153739 +
                      (C89571 * C98471 + (C88560 + C88561 + C88562) * C153600) *
                          C153560) *
                         C153477 -
                     ((C89572 * C153600 + (C83901 + C83900 + C83899) * C98471) *
                          C153560 +
                      ((C88556 + C88555 + C88554) * C153600 +
                       (C83549 * C147 + C83567 + C83567 + C83541 * C163 +
                        C152026 * C146 + C83568 + C83568 + C153351 * C162 +
                        C152033 * C145 + C83569 + C83569 + C153343 * C161) *
                           C98471) *
                          C153739) *
                         C153725) *
                        C1131 +
                    ((((C83899 + C83900 + C83901) * C98471 + C89571 * C153600) *
                          C153739 +
                      ((C83902 + C83903 + C83904) * C98471 +
                       (C84999 + C85000 + C85001) * C153600) *
                          C153560) *
                         C153725 -
                     (((C83549 * C3330 + C84159 + C84159 + C83541 * C3338 +
                        C152026 * C3329 + C84160 + C84160 + C153351 * C3337 +
                        C152033 * C3328 + C84161 + C84161 + C153343 * C3336) *
                           C153600 +
                       (C85001 + C85000 + C84999) * C98471) *
                          C153560 +
                      ((C88562 + C88561 + C88560) * C153600 + C89572 * C98471) *
                          C153739) *
                         C153477) *
                        C153449) *
                       C153384)) /
                 (p * q * std::sqrt(p + q));
    d2ee[234] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C152033 * C144 + C83552 + C83552 + C153343 * C160 +
              C152026 * C145 + C83553 + C83553 + C153351 * C161 +
              C83549 * C146 + C83554 + C83554 + C83541 * C162) *
                 C98471 +
             (C88548 + C88549 + C88550) * C153600) *
                C153739 +
            ((C83890 + C83891 + C83892) * C98471 + C89569 * C153600) *
                C153560) *
               C153413 * C1131 -
           ((C86374 * C153600 + (C83895 + C83894 + C83893) * C98471) * C153560 +
            (C89570 * C153600 + (C83892 + C83891 + C83890) * C98471) *
                C153739) *
               C153413 * C153449) *
              C1133 +
          ((((C83899 + C83900 + C83901) * C98471 + C89571 * C153600) * C153739 +
            ((C83902 + C83903 + C83904) * C98471 +
             (C84999 + C85000 + C85001) * C153600) *
                C153560) *
               C153413 * C153449 -
           ((C89572 * C153600 + (C83901 + C83900 + C83899) * C98471) * C153560 +
            ((C88556 + C88555 + C88554) * C153600 +
             (C83549 * C147 + C83567 + C83567 + C83541 * C163 + C152026 * C146 +
              C83568 + C83568 + C153351 * C162 + C152033 * C145 + C83569 +
              C83569 + C153343 * C161) *
                 C98471) *
                C153739) *
               C153413 * C1131) *
              C1134 +
          ((((C152033 * C146 + C83570 + C83570 + C153343 * C162 +
              C152026 * C147 + C83571 + C83571 + C153351 * C163 +
              C83549 * C148 + C83572 + C83572 + C83541 * C164) *
                 C98471 +
             (C89176 + C89177 + C89178) * C153600) *
                C153739 +
            ((C84413 + C84414 + C84415) * C98471 +
             (C88865 + C88866 + C88867) * C153600) *
                C153560) *
               C153413 * C1131 -
           (((C83549 * C1796 + C84637 + C84637 + C83541 * C1806 +
              C152026 * C1797 + C84638 + C84638 + C153351 * C1807 +
              C152033 * C1798 + C84639 + C84639 + C153343 * C1808) *
                 C153600 +
             (C84418 + C84417 + C84416) * C98471) *
                C153560 +
            ((C88867 + C88866 + C88865) * C153600 +
             (C84415 + C84414 + C84413) * C98471) *
                C153739) *
               C153413 * C153449) *
              C1135)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C152033 * C144 + C83552 + C83552 + C153343 * C160 +
             C152026 * C145 + C83553 + C83553 + C153351 * C161 + C83549 * C146 +
             C83554 + C83554 + C83541 * C162) *
                C98471 +
            (C88548 + C88549 + C88550) * C153600) *
               C153739 +
           ((C83890 + C83891 + C83892) * C98471 + C89569 * C153600) * C153560) *
              C153413 * C1218 -
          ((C86374 * C153600 + (C83895 + C83894 + C83893) * C98471) * C153560 +
           (C89570 * C153600 + (C83892 + C83891 + C83890) * C98471) * C153739) *
              C153413 * C1219 +
          ((C83910 * C98471 + C91333 * C153600) * C153739 +
           ((C83898 + C83897 + C83896) * C98471 +
            (C86382 + C86383 + C86384) * C153600) *
               C153560) *
              C153413 * C1220 -
          (((C83549 * C5601 + C86371 + C86371 + C83541 * C5607 +
             C152026 * C5602 + C86372 + C86372 + C153351 * C5608 +
             C152033 * C5603 + C86373 + C86373 + C153343 * C5609) *
                C153600 +
            (C85386 + C85385 + C85384) * C98471) *
               C153560 +
           ((C86384 + C86383 + C86382) * C153600 + C85376 * C98471) * C153739) *
              C153413 * C1221) *
         C153378) /
            (p * q * std::sqrt(p + q));
    d2ee[235] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                  ((((((C152033 * C144 + C83552 + C83552 + C153343 * C160 +
                        C152026 * C145 + C83553 + C83553 + C153351 * C161 +
                        C83549 * C146 + C83554 + C83554 + C83541 * C162) *
                           C98471 +
                       (C88548 + C88549 + C88550) * C153600) *
                          C153739 +
                      ((C83890 + C83891 + C83892) * C98471 + C89569 * C153600) *
                          C153560) *
                         C1938 -
                     ((C90355 * C153600 + C89570 * C98471) * C153560 +
                      ((C88551 + C88552 + C88553) * C153600 +
                       (C88550 + C88549 + C88548) * C98471) *
                          C153739) *
                         C153477) *
                        C153724 +
                    (((C89569 * C98471 + C90356 * C153600) * C153739 +
                      (C91333 * C98471 + (C85635 + C85636 + C85637) * C153600) *
                          C153560) *
                         C153477 -
                     ((C86374 * C153600 + (C83895 + C83894 + C83893) * C98471) *
                          C153560 +
                      (C89570 * C153600 + (C83892 + C83891 + C83890) * C98471) *
                          C153739) *
                         C1938) *
                        C153449) *
                       C153716 +
                   (((((C88554 + C88555 + C88556) * C98471 +
                       (C88557 + C88558 + C88559) * C153600) *
                          C153739 +
                      (C89571 * C98471 + (C88560 + C88561 + C88562) * C153600) *
                          C153560) *
                         C153477 -
                     ((C89572 * C153600 + (C83901 + C83900 + C83899) * C98471) *
                          C153560 +
                      ((C88556 + C88555 + C88554) * C153600 +
                       (C83549 * C147 + C83567 + C83567 + C83541 * C163 +
                        C152026 * C146 + C83568 + C83568 + C153351 * C162 +
                        C152033 * C145 + C83569 + C83569 + C153343 * C161) *
                           C98471) *
                          C153739) *
                         C1938) *
                        C153724 +
                    ((((C83899 + C83900 + C83901) * C98471 + C89571 * C153600) *
                          C153739 +
                      ((C83902 + C83903 + C83904) * C98471 +
                       (C84999 + C85000 + C85001) * C153600) *
                          C153560) *
                         C1938 -
                     (((C83549 * C3330 + C84159 + C84159 + C83541 * C3338 +
                        C152026 * C3329 + C84160 + C84160 + C153351 * C3337 +
                        C152033 * C3328 + C84161 + C84161 + C153343 * C3336) *
                           C153600 +
                       (C85001 + C85000 + C84999) * C98471) *
                          C153560 +
                      ((C88562 + C88561 + C88560) * C153600 + C89572 * C98471) *
                          C153739) *
                         C153477) *
                        C153449) *
                       C153384)) /
                 (p * q * std::sqrt(p + q));
    d2ee[236] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C152033 * C144 + C83552 + C83552 + C153343 * C160 +
              C152026 * C145 + C83553 + C83553 + C153351 * C161 +
              C83549 * C146 + C83554 + C83554 + C83541 * C162) *
                 C98471 +
             (C88548 + C88549 + C88550) * C153600) *
                C153739 +
            ((C83890 + C83891 + C83892) * C98471 + C89569 * C153600) *
                C153560) *
               C153797 -
           ((C90355 * C153600 + C89570 * C98471) * C153560 +
            ((C88551 + C88552 + C88553) * C153600 +
             (C88550 + C88549 + C88548) * C98471) *
                C153739) *
               C153798 +
           (((C88553 + C88552 + C88551) * C98471 +
             (C92126 + C92127 + C92128) * C153600) *
                C153739 +
            (C90356 * C98471 + (C90363 + C90364 + C90365) * C153600) *
                C153560) *
               C2454) *
              C153724 +
          (((C89569 * C98471 + C90356 * C153600) * C153739 +
            (C91333 * C98471 + (C85635 + C85636 + C85637) * C153600) *
                C153560) *
               C153798 -
           ((C86374 * C153600 + (C83895 + C83894 + C83893) * C98471) * C153560 +
            (C89570 * C153600 + (C83892 + C83891 + C83890) * C98471) *
                C153739) *
               C153797 -
           (((C83549 * C6213 + C86967 + C86967 + C83541 * C6225 +
              C152026 * C6214 + C86968 + C86968 + C153351 * C6226 +
              C152033 * C6215 + C86969 + C86969 + C153343 * C6227) *
                 C153600 +
             (C85637 + C85636 + C85635) * C98471) *
                C153560 +
            ((C90365 + C90364 + C90363) * C153600 + C90355 * C98471) *
                C153739) *
               C2454) *
              C153449) *
         C153378) /
        (p * q * std::sqrt(p + q));
    d2ee[237] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C152033 * C144 + C83552 + C83552 + C153343 * C160 +
              C152026 * C145 + C83553 + C83553 + C153351 * C161 +
              C83549 * C146 + C83554 + C83554 + C83541 * C162) *
                 C98471 +
             (C88548 + C88549 + C88550) * C153600) *
                C153739 +
            ((C83890 + C83891 + C83892) * C98471 + C89569 * C153600) *
                C153560) *
               C1938 -
           ((C90355 * C153600 + C89570 * C98471) * C153560 +
            ((C88551 + C88552 + C88553) * C153600 +
             (C88550 + C88549 + C88548) * C98471) *
                C153739) *
               C153477) *
              C310 +
          (((C89569 * C98471 + C90356 * C153600) * C153739 +
            (C91333 * C98471 + (C85635 + C85636 + C85637) * C153600) *
                C153560) *
               C153477 -
           ((C86374 * C153600 + (C83895 + C83894 + C83893) * C98471) * C153560 +
            (C89570 * C153600 + (C83892 + C83891 + C83890) * C98471) *
                C153739) *
               C1938) *
              C311 +
          (((C83910 * C98471 + C91333 * C153600) * C153739 +
            ((C83898 + C83897 + C83896) * C98471 +
             (C86382 + C86383 + C86384) * C153600) *
                C153560) *
               C1938 -
           (((C83549 * C4833 + C85617 + C85617 + C83541 * C4839 +
              C152026 * C4834 + C85618 + C85618 + C153351 * C4840 +
              C152033 * C4835 + C85619 + C85619 + C153343 * C4841) *
                 C153600 +
             (C86384 + C86383 + C86382) * C98471) *
                C153560 +
            ((C85637 + C85636 + C85635) * C153600 + C86374 * C98471) *
                C153739) *
               C153477) *
              C312) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C152033 * C144 + C83552 + C83552 + C153343 * C160 +
              C152026 * C145 + C83553 + C83553 + C153351 * C161 +
              C83549 * C146 + C83554 + C83554 + C83541 * C162) *
                 C98471 +
             (C88548 + C88549 + C88550) * C153600) *
                C153739 +
            ((C83890 + C83891 + C83892) * C98471 + C89569 * C153600) *
                C153560) *
               C1938 -
           ((C90355 * C153600 + C89570 * C98471) * C153560 +
            ((C88551 + C88552 + C88553) * C153600 +
             (C88550 + C88549 + C88548) * C98471) *
                C153739) *
               C153477) *
              C153397 * C1133 +
          ((((C88554 + C88555 + C88556) * C98471 +
             (C88557 + C88558 + C88559) * C153600) *
                C153739 +
            (C89571 * C98471 + (C88560 + C88561 + C88562) * C153600) *
                C153560) *
               C153477 -
           ((C89572 * C153600 + (C83901 + C83900 + C83899) * C98471) * C153560 +
            ((C88556 + C88555 + C88554) * C153600 +
             (C83549 * C147 + C83567 + C83567 + C83541 * C163 + C152026 * C146 +
              C83568 + C83568 + C153351 * C162 + C152033 * C145 + C83569 +
              C83569 + C153343 * C161) *
                 C98471) *
                C153739) *
               C1938) *
              C153397 * C1134 +
          ((((C152033 * C146 + C83570 + C83570 + C153343 * C162 +
              C152026 * C147 + C83571 + C83571 + C153351 * C163 +
              C83549 * C148 + C83572 + C83572 + C83541 * C164) *
                 C98471 +
             (C89176 + C89177 + C89178) * C153600) *
                C153739 +
            ((C84413 + C84414 + C84415) * C98471 +
             (C88865 + C88866 + C88867) * C153600) *
                C153560) *
               C1938 -
           (((C83549 * C1365 + C89164 + C89164 + C83541 * C1375 +
              C152026 * C1366 + C89165 + C89165 + C153351 * C1376 +
              C152033 * C1367 + C89166 + C89166 + C153343 * C1377) *
                 C153600 +
             (C88867 + C88866 + C88865) * C98471) *
                C153560 +
            ((C83549 * C505 + C89167 + C89167 + C83541 * C529 + C152026 * C504 +
              C89168 + C89168 + C153351 * C528 + C152033 * C503 + C89169 +
              C89169 + C153343 * C527) *
                 C153600 +
             (C89178 + C89177 + C89176) * C98471) *
                C153739) *
               C153477) *
              C153397 * C1135)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C152033 * C144 + C83552 + C83552 + C153343 * C160 +
             C152026 * C145 + C83553 + C83553 + C153351 * C161 + C83549 * C146 +
             C83554 + C83554 + C83541 * C162) *
                C98471 +
            (C88548 + C88549 + C88550) * C153600) *
               C153739 +
           ((C83890 + C83891 + C83892) * C98471 + C89569 * C153600) * C153560) *
              C2144 -
          ((C90355 * C153600 + C89570 * C98471) * C153560 +
           ((C88551 + C88552 + C88553) * C153600 +
            (C88550 + C88549 + C88548) * C98471) *
               C153739) *
              C2145 +
          (((C88553 + C88552 + C88551) * C98471 +
            (C92126 + C92127 + C92128) * C153600) *
               C153739 +
           (C90356 * C98471 + (C90363 + C90364 + C90365) * C153600) * C153560) *
              C2146 -
          (((C83549 * C9040 + C92114 + C92114 + C83541 * C9046 +
             C152026 * C9041 + C92115 + C92115 + C153351 * C9047 +
             C152033 * C9042 + C92116 + C92116 + C153343 * C9048) *
                C153600 +
            (C90365 + C90364 + C90363) * C98471) *
               C153560 +
           ((C83549 * C7562 + C92117 + C92117 + C83541 * C7570 +
             C152026 * C7561 + C92118 + C92118 + C153351 * C7569 +
             C152033 * C7560 + C92119 + C92119 + C153343 * C7568) *
                C153600 +
            (C92128 + C92127 + C92126) * C98471) *
               C153739) *
              C2147) *
         C153397 * C153378) /
            (p * q * std::sqrt(p + q));
    d2ee[238] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C152033 * C144 + C83552 + C83552 + C153343 * C160 +
              C152026 * C145 + C83553 + C83553 + C153351 * C161 +
              C83549 * C146 + C83554 + C83554 + C83541 * C162) *
                 C98471 +
             (C88548 + C88549 + C88550) * C153600) *
                C153739 +
            ((C83890 + C83891 + C83892) * C98471 + C89569 * C153600) *
                C153560) *
               C153797 -
           ((C90355 * C153600 + C89570 * C98471) * C153560 +
            ((C88551 + C88552 + C88553) * C153600 +
             (C88550 + C88549 + C88548) * C98471) *
                C153739) *
               C153798 +
           (((C88553 + C88552 + C88551) * C98471 +
             (C92126 + C92127 + C92128) * C153600) *
                C153739 +
            (C90356 * C98471 + (C90363 + C90364 + C90365) * C153600) *
                C153560) *
               C2454) *
              C153397 * C153716 +
          ((((C88554 + C88555 + C88556) * C98471 +
             (C88557 + C88558 + C88559) * C153600) *
                C153739 +
            (C89571 * C98471 + (C88560 + C88561 + C88562) * C153600) *
                C153560) *
               C153798 -
           ((C89572 * C153600 + (C83901 + C83900 + C83899) * C98471) * C153560 +
            ((C88556 + C88555 + C88554) * C153600 +
             (C83549 * C147 + C83567 + C83567 + C83541 * C163 + C152026 * C146 +
              C83568 + C83568 + C153351 * C162 + C152033 * C145 + C83569 +
              C83569 + C153343 * C161) *
                 C98471) *
                C153739) *
               C153797 -
           (((C83549 * C8437 + C88512 + C88512 + C83541 * C8439 +
              C152026 * C6216 + C88513 + C88513 + C153351 * C6228 +
              C152033 * C6217 + C88514 + C88514 + C153343 * C6229) *
                 C153600 +
             (C88562 + C88561 + C88560) * C98471) *
                C153560 +
            ((C83549 * C2149 + C88515 + C88515 + C83541 * C2159 +
              C152026 * C2150 + C88516 + C88516 + C153351 * C2160 +
              C152033 * C2151 + C88517 + C88517 + C153343 * C2161) *
                 C153600 +
             (C88559 + C88558 + C88557) * C98471) *
                C153739) *
               C2454) *
              C153397 * C153384)) /
        (p * q * std::sqrt(p + q));
    d2ee[239] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C152033 * C144 + C83552 + C83552 + C153343 * C160 +
              C152026 * C145 + C83553 + C83553 + C153351 * C161 +
              C83549 * C146 + C83554 + C83554 + C83541 * C162) *
                 C98471 +
             (C88548 + C88549 + C88550) * C153600) *
                C153739 +
            ((C83890 + C83891 + C83892) * C98471 + C89569 * C153600) *
                C153560) *
               C1938 -
           ((C90355 * C153600 + C89570 * C98471) * C153560 +
            ((C88551 + C88552 + C88553) * C153600 +
             (C88550 + C88549 + C88548) * C98471) *
                C153739) *
               C153477) *
              C153397 * C1133 +
          ((((C88554 + C88555 + C88556) * C98471 +
             (C88557 + C88558 + C88559) * C153600) *
                C153739 +
            (C89571 * C98471 + (C88560 + C88561 + C88562) * C153600) *
                C153560) *
               C153477 -
           ((C89572 * C153600 + (C83901 + C83900 + C83899) * C98471) * C153560 +
            ((C88556 + C88555 + C88554) * C153600 +
             (C83549 * C147 + C83567 + C83567 + C83541 * C163 + C152026 * C146 +
              C83568 + C83568 + C153351 * C162 + C152033 * C145 + C83569 +
              C83569 + C153343 * C161) *
                 C98471) *
                C153739) *
               C1938) *
              C153397 * C1134 +
          ((((C152033 * C146 + C83570 + C83570 + C153343 * C162 +
              C152026 * C147 + C83571 + C83571 + C153351 * C163 +
              C83549 * C148 + C83572 + C83572 + C83541 * C164) *
                 C98471 +
             (C89176 + C89177 + C89178) * C153600) *
                C153739 +
            ((C84413 + C84414 + C84415) * C98471 +
             (C88865 + C88866 + C88867) * C153600) *
                C153560) *
               C1938 -
           (((C83549 * C1365 + C89164 + C89164 + C83541 * C1375 +
              C152026 * C1366 + C89165 + C89165 + C153351 * C1376 +
              C152033 * C1367 + C89166 + C89166 + C153343 * C1377) *
                 C153600 +
             (C88867 + C88866 + C88865) * C98471) *
                C153560 +
            ((C83549 * C505 + C89167 + C89167 + C83541 * C529 + C152026 * C504 +
              C89168 + C89168 + C153351 * C528 + C152033 * C503 + C89169 +
              C89169 + C153343 * C527) *
                 C153600 +
             (C89178 + C89177 + C89176) * C98471) *
                C153739) *
               C153477) *
              C153397 * C1135)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C152033 * C144 + C83552 + C83552 + C153343 * C160 +
              C152026 * C145 + C83553 + C83553 + C153351 * C161 +
              C83549 * C146 + C83554 + C83554 + C83541 * C162) *
                 C98471 +
             (C88548 + C88549 + C88550) * C153600) *
                C153739 +
            ((C83890 + C83891 + C83892) * C98471 + C89569 * C153600) *
                C153560) *
               C1938 -
           ((C90355 * C153600 + C89570 * C98471) * C153560 +
            ((C88551 + C88552 + C88553) * C153600 +
             (C88550 + C88549 + C88548) * C98471) *
                C153739) *
               C153477) *
              C310 +
          (((C89569 * C98471 + C90356 * C153600) * C153739 +
            (C91333 * C98471 + (C85635 + C85636 + C85637) * C153600) *
                C153560) *
               C153477 -
           ((C86374 * C153600 + (C83895 + C83894 + C83893) * C98471) * C153560 +
            (C89570 * C153600 + (C83892 + C83891 + C83890) * C98471) *
                C153739) *
               C1938) *
              C311 +
          (((C83910 * C98471 + C91333 * C153600) * C153739 +
            ((C83898 + C83897 + C83896) * C98471 +
             (C86382 + C86383 + C86384) * C153600) *
                C153560) *
               C1938 -
           (((C83549 * C4833 + C85617 + C85617 + C83541 * C4839 +
              C152026 * C4834 + C85618 + C85618 + C153351 * C4840 +
              C152033 * C4835 + C85619 + C85619 + C153343 * C4841) *
                 C153600 +
             (C86384 + C86383 + C86382) * C98471) *
                C153560 +
            ((C85637 + C85636 + C85635) * C153600 + C86374 * C98471) *
                C153739) *
               C153477) *
              C312) *
         C153378) /
            (p * q * std::sqrt(p + q));
    d2ee[240] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
              C74253 + C74253 + C153348 * C161) *
                 C153596 +
             (C78834 + C78835) * C153603 + C78850 * C116108) *
                C153739 +
            ((C74550 + C74551) * C153596 + C79864 * C153603 +
             C78764 * C116108) *
                C153560) *
               C153413 * C153724 -
           ((C80656 * C116108 + C76763 * C153603 +
             (C74553 + C74552) * C153596) *
                C153560 +
            (C79865 * C116108 + C79866 * C153603 +
             (C74551 + C74550) * C153596) *
                C153739) *
               C153413 * C153449) *
              C153793 +
          ((((C74558 + C74559) * C153596 + C79867 * C153603 +
             C79868 * C116108) *
                C153739 +
            ((C74560 + C74561) * C153596 + C94854 * C153603 +
             (C78464 + C78465) * C116108) *
                C153560) *
               C153413 * C153449 -
           ((C78797 * C116108 + C79869 * C153603 +
             (C74559 + C74558) * C153596) *
                C153560 +
            (C78851 * C116108 + (C78843 + C78842) * C153603 +
             (C74249 * C146 + C74266 + C74266 + C153348 * C162 + C74247 * C145 +
              C74267 + C74267 + C74241 * C161) *
                 C153596) *
                C153739) *
               C153413 * C153724) *
              C153794 +
          ((((C74247 * C146 + C74268 + C74268 + C74241 * C162 + C74249 * C147 +
              C74269 + C74269 + C153348 * C163) *
                 C153596 +
             (C79474 + C79475) * C153603 + (C79476 + C79477) * C116108) *
                C153739 +
            ((C75020 + C75021) * C153596 + (C79160 + C79161) * C153603 +
             (C79162 + C79163) * C116108) *
                C153560) *
               C153413 * C153724 -
           (((C74249 * C3330 + C79150 + C79150 + C153348 * C3338 +
              C74247 * C3329 + C79151 + C79151 + C74241 * C3337) *
                 C116108 +
             (C94177 + C94176) * C153603 + (C75023 + C75022) * C153596) *
                C153560 +
            ((C79163 + C79162) * C116108 + (C79161 + C79160) * C153603 +
             (C75021 + C75020) * C153596) *
                C153739) *
               C153413 * C153449) *
              C678)) /
        (p * q * std::sqrt(p + q));
    d2ee[241] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
               C74253 + C74253 + C153348 * C161) *
                  C153596 +
              (C78834 + C78835) * C153603 + C78850 * C116108) *
                 C153739 +
             ((C74550 + C74551) * C153596 + C79864 * C153603 +
              C78764 * C116108) *
                 C153560) *
                C153725 -
            ((C80646 * C116108 + C79865 * C153603 + C79866 * C153596) *
                 C153560 +
             (C82413 * C116108 + (C78837 + C78836) * C153603 +
              (C78835 + C78834) * C153596) *
                 C153739) *
                C153477) *
               C153724 +
           (((C79864 * C153596 + C78764 * C153603 + C80647 * C116108) *
                 C153739 +
             (C81637 * C153596 + C81638 * C153603 +
              (C80669 + C80670) * C116108) *
                 C153560) *
                C153477 -
            ((C80656 * C116108 + C76763 * C153603 +
              (C74553 + C74552) * C153596) *
                 C153560 +
             (C79865 * C116108 + C79866 * C153603 +
              (C74551 + C74550) * C153596) *
                 C153739) *
                C153725) *
               C153449) *
              C313 +
          (((((C78842 + C78843) * C153596 + (C78844 + C78845) * C153603 +
              (C78846 + C78847) * C116108) *
                 C153739 +
             (C79867 * C153596 + C79868 * C153603 +
              (C78848 + C78849) * C116108) *
                 C153560) *
                C153477 -
            ((C78797 * C116108 + C79869 * C153603 +
              (C74559 + C74558) * C153596) *
                 C153560 +
             (C78851 * C116108 + (C78843 + C78842) * C153603 +
              (C74249 * C146 + C74266 + C74266 + C153348 * C162 +
               C74247 * C145 + C74267 + C74267 + C74241 * C161) *
                  C153596) *
                 C153739) *
                C153725) *
               C153724 +
           ((((C74558 + C74559) * C153596 + C79867 * C153603 +
              C79868 * C116108) *
                 C153739 +
             ((C74560 + C74561) * C153596 + C94854 * C153603 +
              (C78464 + C78465) * C116108) *
                 C153560) *
                C153725 -
            (((C74249 * C6213 + C79870 + C79870 + C153348 * C6225 +
               C74247 * C6214 + C79871 + C79871 + C74241 * C6226) *
                  C116108 +
              (C78465 + C78464) * C153603 + C93583 * C153596) *
                 C153560 +
             ((C78849 + C78848) * C116108 + C78797 * C153603 +
              C79869 * C153596) *
                 C153739) *
                C153477) *
               C153449) *
              C153384)) /
        (p * q * std::sqrt(p + q));
    d2ee[242] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
              C74253 + C74253 + C153348 * C161) *
                 C153596 +
             (C78834 + C78835) * C153603 + C78850 * C116108) *
                C153739 +
            ((C74550 + C74551) * C153596 + C79864 * C153603 +
             C78764 * C116108) *
                C153560) *
               C153413 * C310 -
           ((C80656 * C116108 + C76763 * C153603 +
             (C74553 + C74552) * C153596) *
                C153560 +
            (C79865 * C116108 + C79866 * C153603 +
             (C74551 + C74550) * C153596) *
                C153739) *
               C153413 * C311 +
           ((C74566 * C153596 + C81637 * C153603 + C81638 * C116108) * C153739 +
            (C74567 * C153596 + C96600 * C153603 +
             (C76114 + C76115) * C116108) *
                C153560) *
               C153413 * C312) *
              C313 +
          ((((C74558 + C74559) * C153596 + C79867 * C153603 +
             C79868 * C116108) *
                C153739 +
            ((C74560 + C74561) * C153596 + C94854 * C153603 +
             (C78464 + C78465) * C116108) *
                C153560) *
               C153413 * C311 -
           ((C78797 * C116108 + C79869 * C153603 +
             (C74559 + C74558) * C153596) *
                C153560 +
            (C78851 * C116108 + (C78843 + C78842) * C153603 +
             (C74249 * C146 + C74266 + C74266 + C153348 * C162 + C74247 * C145 +
              C74267 + C74267 + C74241 * C161) *
                 C153596) *
                C153739) *
               C153413 * C310 -
           (((C74249 * C4833 + C74792 + C74792 + C153348 * C4839 +
              C74247 * C4834 + C74793 + C74793 + C74241 * C4840) *
                 C116108 +
             (C75549 + C75548) * C153603 + C74568 * C153596) *
                C153560 +
            ((C78465 + C78464) * C116108 + C93583 * C153603 +
             C74569 * C153596) *
                C153739) *
               C153413 * C312) *
              C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
             C74253 + C74253 + C153348 * C161) *
                C153596 +
            (C78834 + C78835) * C153603 + C78850 * C116108) *
               C153739 +
           ((C74550 + C74551) * C153596 + C79864 * C153603 + C78764 * C116108) *
               C153560) *
              C153413 * C153397 * C130 -
          ((C78797 * C116108 + C79869 * C153603 + (C74559 + C74558) * C153596) *
               C153560 +
           (C78851 * C116108 + (C78843 + C78842) * C153603 +
            (C74249 * C146 + C74266 + C74266 + C153348 * C162 + C74247 * C145 +
             C74267 + C74267 + C74241 * C161) *
                C153596) *
               C153739) *
              C153413 * C153397 * C131 +
          (((C74247 * C146 + C74268 + C74268 + C74241 * C162 + C74249 * C147 +
             C74269 + C74269 + C153348 * C163) *
                C153596 +
            (C79474 + C79475) * C153603 + (C79476 + C79477) * C116108) *
               C153739 +
           ((C75020 + C75021) * C153596 + (C79160 + C79161) * C153603 +
            (C79162 + C79163) * C116108) *
               C153560) *
              C153413 * C153397 * C132 -
          (((C74249 * C1365 + C78148 + C78148 + C153348 * C1375 +
             C74247 * C1366 + C78149 + C78149 + C74241 * C1376) *
                C116108 +
            (C74249 * C985 + C78150 + C78150 + C153348 * C997 + C74247 * C984 +
             C78151 + C78151 + C74241 * C996) *
                C153603 +
            (C74249 * C315 + C74280 + C74280 + C153348 * C339 + C74247 * C316 +
             C74281 + C74281 + C74241 * C340) *
                C153596) *
               C153560 +
           ((C74249 * C505 + C78152 + C78152 + C153348 * C529 + C74247 * C504 +
             C78153 + C78153 + C74241 * C528) *
                C116108 +
            (C74249 * C496 + C78154 + C78154 + C153348 * C520 + C74247 * C497 +
             C78155 + C78155 + C74241 * C521) *
                C153603 +
            (C74249 * C148 + C74282 + C74282 + C153348 * C164 + C74247 * C147 +
             C74283 + C74283 + C74241 * C163) *
                C153596) *
               C153739) *
              C153413 * C153397 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
              C74253 + C74253 + C153348 * C161) *
                 C153596 +
             (C78834 + C78835) * C153603 + C78850 * C116108) *
                C153739 +
            ((C74550 + C74551) * C153596 + C79864 * C153603 +
             C78764 * C116108) *
                C153560) *
               C493 -
           ((C80646 * C116108 + C79865 * C153603 + C79866 * C153596) * C153560 +
            (C82413 * C116108 + (C78837 + C78836) * C153603 +
             (C78835 + C78834) * C153596) *
                C153739) *
               C494 +
           ((C78850 * C153596 + C107728 * C153603 +
             (C82426 + C82427) * C116108) *
                C153739 +
            (C78764 * C153596 + C80647 * C153603 +
             (C80667 + C80668) * C116108) *
                C153560) *
               C495) *
              C153397 * C313 +
          ((((C78842 + C78843) * C153596 + (C78844 + C78845) * C153603 +
             (C78846 + C78847) * C116108) *
                C153739 +
            (C79867 * C153596 + C79868 * C153603 +
             (C78848 + C78849) * C116108) *
                C153560) *
               C494 -
           ((C78797 * C116108 + C79869 * C153603 +
             (C74559 + C74558) * C153596) *
                C153560 +
            (C78851 * C116108 + (C78843 + C78842) * C153603 +
             (C74249 * C146 + C74266 + C74266 + C153348 * C162 + C74247 * C145 +
              C74267 + C74267 + C74241 * C161) *
                 C153596) *
                C153739) *
               C493 -
           (((C74249 * C9040 + C78798 + C78798 + C153348 * C9046 +
              C74247 * C9041 + C78799 + C78799 + C74241 * C9047) *
                 C116108 +
             (C78849 + C78848) * C153603 + C78797 * C153596) *
                C153560 +
            ((C107741 + C107740) * C116108 + C107733 * C153603 +
             C78851 * C153596) *
                C153739) *
               C495) *
              C153397 * C153384)) /
            (p * q * std::sqrt(p + q));
    d2ee[243] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
              C74253 + C74253 + C153348 * C161) *
                 C153596 +
             (C78834 + C78835) * C153603 + C78850 * C116108) *
                C153739 +
            ((C74550 + C74551) * C153596 + C79864 * C153603 +
             C78764 * C116108) *
                C153560) *
               C153725 -
           ((C80646 * C116108 + C79865 * C153603 + C79866 * C153596) * C153560 +
            (C82413 * C116108 + (C78837 + C78836) * C153603 +
             (C78835 + C78834) * C153596) *
                C153739) *
               C153477) *
              C153397 * C153793 +
          ((((C78842 + C78843) * C153596 + (C78844 + C78845) * C153603 +
             (C78846 + C78847) * C116108) *
                C153739 +
            (C79867 * C153596 + C79868 * C153603 +
             (C78848 + C78849) * C116108) *
                C153560) *
               C153477 -
           ((C78797 * C116108 + C79869 * C153603 +
             (C74559 + C74558) * C153596) *
                C153560 +
            (C78851 * C116108 + (C78843 + C78842) * C153603 +
             (C74249 * C146 + C74266 + C74266 + C153348 * C162 + C74247 * C145 +
              C74267 + C74267 + C74241 * C161) *
                 C153596) *
                C153739) *
               C153725) *
              C153397 * C153794 +
          ((((C74247 * C146 + C74268 + C74268 + C74241 * C162 + C74249 * C147 +
              C74269 + C74269 + C153348 * C163) *
                 C153596 +
             (C79474 + C79475) * C153603 + (C79476 + C79477) * C116108) *
                C153739 +
            ((C75020 + C75021) * C153596 + (C79160 + C79161) * C153603 +
             (C79162 + C79163) * C116108) *
                C153560) *
               C153725 -
           (((C74249 * C8437 + C79462 + C79462 + C153348 * C8439 +
              C74247 * C6216 + C79463 + C79463 + C74241 * C6228) *
                 C116108 +
             (C79163 + C79162) * C153603 + (C79161 + C79160) * C153596) *
                C153560 +
            ((C108141 + C108140) * C116108 + (C79477 + C79476) * C153603 +
             (C79475 + C79474) * C153596) *
                C153739) *
               C153477) *
              C153397 * C678)) /
        (p * q * std::sqrt(p + q));
    d2ee[244] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
             C74253 + C74253 + C153348 * C161) *
                C153596 +
            (C78834 + C78835) * C153603 + C78850 * C116108) *
               C153739 +
           ((C74550 + C74551) * C153596 + C79864 * C153603 + C78764 * C116108) *
               C153560) *
              C153413 * C153397 * C130 -
          ((C78797 * C116108 + C79869 * C153603 + (C74559 + C74558) * C153596) *
               C153560 +
           (C78851 * C116108 + (C78843 + C78842) * C153603 +
            (C74249 * C146 + C74266 + C74266 + C153348 * C162 + C74247 * C145 +
             C74267 + C74267 + C74241 * C161) *
                C153596) *
               C153739) *
              C153413 * C153397 * C131 +
          (((C74247 * C146 + C74268 + C74268 + C74241 * C162 + C74249 * C147 +
             C74269 + C74269 + C153348 * C163) *
                C153596 +
            (C79474 + C79475) * C153603 + (C79476 + C79477) * C116108) *
               C153739 +
           ((C75020 + C75021) * C153596 + (C79160 + C79161) * C153603 +
            (C79162 + C79163) * C116108) *
               C153560) *
              C153413 * C153397 * C132 -
          (((C74249 * C1365 + C78148 + C78148 + C153348 * C1375 +
             C74247 * C1366 + C78149 + C78149 + C74241 * C1376) *
                C116108 +
            (C74249 * C985 + C78150 + C78150 + C153348 * C997 + C74247 * C984 +
             C78151 + C78151 + C74241 * C996) *
                C153603 +
            (C74249 * C315 + C74280 + C74280 + C153348 * C339 + C74247 * C316 +
             C74281 + C74281 + C74241 * C340) *
                C153596) *
               C153560 +
           ((C74249 * C505 + C78152 + C78152 + C153348 * C529 + C74247 * C504 +
             C78153 + C78153 + C74241 * C528) *
                C116108 +
            (C74249 * C496 + C78154 + C78154 + C153348 * C520 + C74247 * C497 +
             C78155 + C78155 + C74241 * C521) *
                C153603 +
            (C74249 * C148 + C74282 + C74282 + C153348 * C164 + C74247 * C147 +
             C74283 + C74283 + C74241 * C163) *
                C153596) *
               C153739) *
              C153413 * C153397 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
              C74253 + C74253 + C153348 * C161) *
                 C153596 +
             (C78834 + C78835) * C153603 + C78850 * C116108) *
                C153739 +
            ((C74550 + C74551) * C153596 + C79864 * C153603 +
             C78764 * C116108) *
                C153560) *
               C153413 * C310 -
           ((C80656 * C116108 + C76763 * C153603 +
             (C74553 + C74552) * C153596) *
                C153560 +
            (C79865 * C116108 + C79866 * C153603 +
             (C74551 + C74550) * C153596) *
                C153739) *
               C153413 * C311 +
           ((C74566 * C153596 + C81637 * C153603 + C81638 * C116108) * C153739 +
            (C74567 * C153596 + C96600 * C153603 +
             (C76114 + C76115) * C116108) *
                C153560) *
               C153413 * C312) *
              C313 +
          ((((C74558 + C74559) * C153596 + C79867 * C153603 +
             C79868 * C116108) *
                C153739 +
            ((C74560 + C74561) * C153596 + C94854 * C153603 +
             (C78464 + C78465) * C116108) *
                C153560) *
               C153413 * C311 -
           ((C78797 * C116108 + C79869 * C153603 +
             (C74559 + C74558) * C153596) *
                C153560 +
            (C78851 * C116108 + (C78843 + C78842) * C153603 +
             (C74249 * C146 + C74266 + C74266 + C153348 * C162 + C74247 * C145 +
              C74267 + C74267 + C74241 * C161) *
                 C153596) *
                C153739) *
               C153413 * C310 -
           (((C74249 * C4833 + C74792 + C74792 + C153348 * C4839 +
              C74247 * C4834 + C74793 + C74793 + C74241 * C4840) *
                 C116108 +
             (C75549 + C75548) * C153603 + C74568 * C153596) *
                C153560 +
            ((C78465 + C78464) * C116108 + C93583 * C153603 +
             C74569 * C153596) *
                C153739) *
               C153413 * C312) *
              C153384)) /
            (p * q * std::sqrt(p + q));
    d2ee[245] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
              C74253 + C74253 + C153348 * C161) *
                 C153596 +
             (C78834 + C78835) * C153603 + C78850 * C116108) *
                C153739 +
            ((C74550 + C74551) * C153596 + C79864 * C153603 +
             C78764 * C116108) *
                C153560) *
               C153413 * C153795 -
           ((C80656 * C116108 + C76763 * C153603 +
             (C74553 + C74552) * C153596) *
                C153560 +
            (C79865 * C116108 + C79866 * C153603 +
             (C74551 + C74550) * C153596) *
                C153739) *
               C153413 * C153796 +
           ((C74566 * C153596 + C81637 * C153603 + C81638 * C116108) * C153739 +
            (C74567 * C153596 + C96600 * C153603 +
             (C76114 + C76115) * C116108) *
                C153560) *
               C153413 * C1509) *
              C153716 +
          ((((C74558 + C74559) * C153596 + C79867 * C153603 +
             C79868 * C116108) *
                C153739 +
            ((C74560 + C74561) * C153596 + C94854 * C153603 +
             (C78464 + C78465) * C116108) *
                C153560) *
               C153413 * C153796 -
           ((C78797 * C116108 + C79869 * C153603 +
             (C74559 + C74558) * C153596) *
                C153560 +
            (C78851 * C116108 + (C78843 + C78842) * C153603 +
             (C74249 * C146 + C74266 + C74266 + C153348 * C162 + C74247 * C145 +
              C74267 + C74267 + C74241 * C161) *
                 C153596) *
                C153739) *
               C153413 * C153795 -
           (((C74249 * C4833 + C74792 + C74792 + C153348 * C4839 +
              C74247 * C4834 + C74793 + C74793 + C74241 * C4840) *
                 C116108 +
             (C75549 + C75548) * C153603 + C74568 * C153596) *
                C153560 +
            ((C78465 + C78464) * C116108 + C93583 * C153603 +
             C74569 * C153596) *
                C153739) *
               C153413 * C1509) *
              C153384)) /
        (p * q * std::sqrt(p + q));
    d2ee[246] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
              C74253 + C74253 + C153348 * C161) *
                 C153596 +
             (C78834 + C78835) * C153603 + C78850 * C116108) *
                C153739 +
            ((C74550 + C74551) * C153596 + C79864 * C153603 +
             C78764 * C116108) *
                C153560) *
               C153725 -
           ((C80646 * C116108 + C79865 * C153603 + C79866 * C153596) * C153560 +
            (C82413 * C116108 + (C78837 + C78836) * C153603 +
             (C78835 + C78834) * C153596) *
                C153739) *
               C153477) *
              C153795 +
          (((C79864 * C153596 + C78764 * C153603 + C80647 * C116108) * C153739 +
            (C81637 * C153596 + C81638 * C153603 +
             (C80669 + C80670) * C116108) *
                C153560) *
               C153477 -
           ((C80656 * C116108 + C76763 * C153603 +
             (C74553 + C74552) * C153596) *
                C153560 +
            (C79865 * C116108 + C79866 * C153603 +
             (C74551 + C74550) * C153596) *
                C153739) *
               C153725) *
              C153796 +
          (((C74566 * C153596 + C81637 * C153603 + C81638 * C116108) * C153739 +
            (C74567 * C153596 + C96600 * C153603 +
             (C76114 + C76115) * C116108) *
                C153560) *
               C153725 -
           (((C74249 * C32070 + C77296 + C77296 + C153348 * C32072 +
              C74247 * C30195 + C77297 + C77297 + C74241 * C30199) *
                 C116108 +
             (C76115 + C76114) * C153603 + C76762 * C153596) *
                C153560 +
            ((C80670 + C80669) * C116108 + C80656 * C153603 +
             C76763 * C153596) *
                C153739) *
               C153477) *
              C1509) *
         C153378) /
        (p * q * std::sqrt(p + q));
    d2ee[247] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
             C74253 + C74253 + C153348 * C161) *
                C153596 +
            (C78834 + C78835) * C153603 + C78850 * C116108) *
               C153739 +
           ((C74550 + C74551) * C153596 + C79864 * C153603 + C78764 * C116108) *
               C153560) *
              C153413 * C1218 -
          ((C80656 * C116108 + C76763 * C153603 + (C74553 + C74552) * C153596) *
               C153560 +
           (C79865 * C116108 + C79866 * C153603 + (C74551 + C74550) * C153596) *
               C153739) *
              C153413 * C1219 +
          ((C74566 * C153596 + C81637 * C153603 + C81638 * C116108) * C153739 +
           (C74567 * C153596 + C96600 * C153603 + (C76114 + C76115) * C116108) *
               C153560) *
              C153413 * C1220 -
          (((C74249 * C28571 + C76096 + C76096 + C153348 * C28575 +
             C74247 * C28570 + C76097 + C76097 + C74241 * C28574) *
                C116108 +
            (C76777 + C76776) * C153603 + C75874 * C153596) *
               C153560 +
           ((C76115 + C76114) * C116108 + C76762 * C153603 + C75875 * C153596) *
               C153739) *
              C153413 * C1221) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
              C74253 + C74253 + C153348 * C161) *
                 C153596 +
             (C78834 + C78835) * C153603 + C78850 * C116108) *
                C153739 +
            ((C74550 + C74551) * C153596 + C79864 * C153603 +
             C78764 * C116108) *
                C153560) *
               C153413 * C1131 -
           ((C80656 * C116108 + C76763 * C153603 +
             (C74553 + C74552) * C153596) *
                C153560 +
            (C79865 * C116108 + C79866 * C153603 +
             (C74551 + C74550) * C153596) *
                C153739) *
               C153413 * C153449) *
              C1133 +
          ((((C74558 + C74559) * C153596 + C79867 * C153603 +
             C79868 * C116108) *
                C153739 +
            ((C74560 + C74561) * C153596 + C94854 * C153603 +
             (C78464 + C78465) * C116108) *
                C153560) *
               C153413 * C153449 -
           ((C78797 * C116108 + C79869 * C153603 +
             (C74559 + C74558) * C153596) *
                C153560 +
            (C78851 * C116108 + (C78843 + C78842) * C153603 +
             (C74249 * C146 + C74266 + C74266 + C153348 * C162 + C74247 * C145 +
              C74267 + C74267 + C74241 * C161) *
                 C153596) *
                C153739) *
               C153413 * C1131) *
              C1134 +
          ((((C74247 * C146 + C74268 + C74268 + C74241 * C162 + C74249 * C147 +
              C74269 + C74269 + C153348 * C163) *
                 C153596 +
             (C79474 + C79475) * C153603 + (C79476 + C79477) * C116108) *
                C153739 +
            ((C75020 + C75021) * C153596 + (C79160 + C79161) * C153603 +
             (C79162 + C79163) * C116108) *
                C153560) *
               C153413 * C1131 -
           (((C74249 * C3330 + C79150 + C79150 + C153348 * C3338 +
              C74247 * C3329 + C79151 + C79151 + C74241 * C3337) *
                 C116108 +
             (C94177 + C94176) * C153603 + (C75023 + C75022) * C153596) *
                C153560 +
            ((C79163 + C79162) * C116108 + (C79161 + C79160) * C153603 +
             (C75021 + C75020) * C153596) *
                C153739) *
               C153413 * C153449) *
              C1135)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
              C74253 + C74253 + C153348 * C161) *
                 C153596 +
             (C78834 + C78835) * C153603 + C78850 * C116108) *
                C153739 +
            ((C74550 + C74551) * C153596 + C79864 * C153603 +
             C78764 * C116108) *
                C153560) *
               C493 -
           ((C80646 * C116108 + C79865 * C153603 + C79866 * C153596) * C153560 +
            (C82413 * C116108 + (C78837 + C78836) * C153603 +
             (C78835 + C78834) * C153596) *
                C153739) *
               C494 +
           ((C78850 * C153596 + C107728 * C153603 +
             (C82426 + C82427) * C116108) *
                C153739 +
            (C78764 * C153596 + C80647 * C153603 +
             (C80667 + C80668) * C116108) *
                C153560) *
               C495) *
              C1131 +
          (((C79864 * C153596 + C78764 * C153603 + C80647 * C116108) * C153739 +
            (C81637 * C153596 + C81638 * C153603 +
             (C80669 + C80670) * C116108) *
                C153560) *
               C494 -
           ((C80656 * C116108 + C76763 * C153603 +
             (C74553 + C74552) * C153596) *
                C153560 +
            (C79865 * C116108 + C79866 * C153603 +
             (C74551 + C74550) * C153596) *
                C153739) *
               C493 -
           (((C74249 * C31240 + C80657 + C80657 + C153348 * C31244 +
              C74247 * C31239 + C80658 + C80658 + C74241 * C31243) *
                 C116108 +
             (C80670 + C80669) * C153603 + C80656 * C153596) *
                C153560 +
            ((C80668 + C80667) * C116108 + C80646 * C153603 +
             C79865 * C153596) *
                C153739) *
               C495) *
              C153449) *
         C153378) /
            (p * q * std::sqrt(p + q));
    d2ee[248] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
               C74253 + C74253 + C153348 * C161) *
                  C153596 +
              (C78834 + C78835) * C153603 + C78850 * C116108) *
                 C153739 +
             ((C74550 + C74551) * C153596 + C79864 * C153603 +
              C78764 * C116108) *
                 C153560) *
                C153725 -
            ((C80646 * C116108 + C79865 * C153603 + C79866 * C153596) *
                 C153560 +
             (C82413 * C116108 + (C78837 + C78836) * C153603 +
              (C78835 + C78834) * C153596) *
                 C153739) *
                C153477) *
               C1131 +
           (((C79864 * C153596 + C78764 * C153603 + C80647 * C116108) *
                 C153739 +
             (C81637 * C153596 + C81638 * C153603 +
              (C80669 + C80670) * C116108) *
                 C153560) *
                C153477 -
            ((C80656 * C116108 + C76763 * C153603 +
              (C74553 + C74552) * C153596) *
                 C153560 +
             (C79865 * C116108 + C79866 * C153603 +
              (C74551 + C74550) * C153596) *
                 C153739) *
                C153725) *
               C153449) *
              C153716 +
          (((((C78842 + C78843) * C153596 + (C78844 + C78845) * C153603 +
              (C78846 + C78847) * C116108) *
                 C153739 +
             (C79867 * C153596 + C79868 * C153603 +
              (C78848 + C78849) * C116108) *
                 C153560) *
                C153477 -
            ((C78797 * C116108 + C79869 * C153603 +
              (C74559 + C74558) * C153596) *
                 C153560 +
             (C78851 * C116108 + (C78843 + C78842) * C153603 +
              (C74249 * C146 + C74266 + C74266 + C153348 * C162 +
               C74247 * C145 + C74267 + C74267 + C74241 * C161) *
                  C153596) *
                 C153739) *
                C153725) *
               C1131 +
           ((((C74558 + C74559) * C153596 + C79867 * C153603 +
              C79868 * C116108) *
                 C153739 +
             ((C74560 + C74561) * C153596 + C94854 * C153603 +
              (C78464 + C78465) * C116108) *
                 C153560) *
                C153725 -
            (((C74249 * C6213 + C79870 + C79870 + C153348 * C6225 +
               C74247 * C6214 + C79871 + C79871 + C74241 * C6226) *
                  C116108 +
              (C78465 + C78464) * C153603 + C93583 * C153596) *
                 C153560 +
             ((C78849 + C78848) * C116108 + C78797 * C153603 +
              C79869 * C153596) *
                 C153739) *
                C153477) *
               C153449) *
              C153384)) /
        (p * q * std::sqrt(p + q));
    d2ee[249] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
              C74253 + C74253 + C153348 * C161) *
                 C153596 +
             (C78834 + C78835) * C153603 + C78850 * C116108) *
                C153739 +
            ((C74550 + C74551) * C153596 + C79864 * C153603 +
             C78764 * C116108) *
                C153560) *
               C153413 * C1131 -
           ((C80656 * C116108 + C76763 * C153603 +
             (C74553 + C74552) * C153596) *
                C153560 +
            (C79865 * C116108 + C79866 * C153603 +
             (C74551 + C74550) * C153596) *
                C153739) *
               C153413 * C153449) *
              C1133 +
          ((((C74558 + C74559) * C153596 + C79867 * C153603 +
             C79868 * C116108) *
                C153739 +
            ((C74560 + C74561) * C153596 + C94854 * C153603 +
             (C78464 + C78465) * C116108) *
                C153560) *
               C153413 * C153449 -
           ((C78797 * C116108 + C79869 * C153603 +
             (C74559 + C74558) * C153596) *
                C153560 +
            (C78851 * C116108 + (C78843 + C78842) * C153603 +
             (C74249 * C146 + C74266 + C74266 + C153348 * C162 + C74247 * C145 +
              C74267 + C74267 + C74241 * C161) *
                 C153596) *
                C153739) *
               C153413 * C1131) *
              C1134 +
          ((((C74247 * C146 + C74268 + C74268 + C74241 * C162 + C74249 * C147 +
              C74269 + C74269 + C153348 * C163) *
                 C153596 +
             (C79474 + C79475) * C153603 + (C79476 + C79477) * C116108) *
                C153739 +
            ((C75020 + C75021) * C153596 + (C79160 + C79161) * C153603 +
             (C79162 + C79163) * C116108) *
                C153560) *
               C153413 * C1131 -
           (((C74249 * C3330 + C79150 + C79150 + C153348 * C3338 +
              C74247 * C3329 + C79151 + C79151 + C74241 * C3337) *
                 C116108 +
             (C94177 + C94176) * C153603 + (C75023 + C75022) * C153596) *
                C153560 +
            ((C79163 + C79162) * C116108 + (C79161 + C79160) * C153603 +
             (C75021 + C75020) * C153596) *
                C153739) *
               C153413 * C153449) *
              C1135)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
             C74253 + C74253 + C153348 * C161) *
                C153596 +
            (C78834 + C78835) * C153603 + C78850 * C116108) *
               C153739 +
           ((C74550 + C74551) * C153596 + C79864 * C153603 + C78764 * C116108) *
               C153560) *
              C153413 * C1218 -
          ((C80656 * C116108 + C76763 * C153603 + (C74553 + C74552) * C153596) *
               C153560 +
           (C79865 * C116108 + C79866 * C153603 + (C74551 + C74550) * C153596) *
               C153739) *
              C153413 * C1219 +
          ((C74566 * C153596 + C81637 * C153603 + C81638 * C116108) * C153739 +
           (C74567 * C153596 + C96600 * C153603 + (C76114 + C76115) * C116108) *
               C153560) *
              C153413 * C1220 -
          (((C74249 * C28571 + C76096 + C76096 + C153348 * C28575 +
             C74247 * C28570 + C76097 + C76097 + C74241 * C28574) *
                C116108 +
            (C76777 + C76776) * C153603 + C75874 * C153596) *
               C153560 +
           ((C76115 + C76114) * C116108 + C76762 * C153603 + C75875 * C153596) *
               C153739) *
              C153413 * C1221) *
         C153378) /
            (p * q * std::sqrt(p + q));
    d2ee[250] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
               C74253 + C74253 + C153348 * C161) *
                  C153596 +
              (C78834 + C78835) * C153603 + C78850 * C116108) *
                 C153739 +
             ((C74550 + C74551) * C153596 + C79864 * C153603 +
              C78764 * C116108) *
                 C153560) *
                C1938 -
            ((C80646 * C116108 + C79865 * C153603 + C79866 * C153596) *
                 C153560 +
             (C82413 * C116108 + (C78837 + C78836) * C153603 +
              (C78835 + C78834) * C153596) *
                 C153739) *
                C153477) *
               C153724 +
           (((C79864 * C153596 + C78764 * C153603 + C80647 * C116108) *
                 C153739 +
             (C81637 * C153596 + C81638 * C153603 +
              (C80669 + C80670) * C116108) *
                 C153560) *
                C153477 -
            ((C80656 * C116108 + C76763 * C153603 +
              (C74553 + C74552) * C153596) *
                 C153560 +
             (C79865 * C116108 + C79866 * C153603 +
              (C74551 + C74550) * C153596) *
                 C153739) *
                C1938) *
               C153449) *
              C153716 +
          (((((C78842 + C78843) * C153596 + (C78844 + C78845) * C153603 +
              (C78846 + C78847) * C116108) *
                 C153739 +
             (C79867 * C153596 + C79868 * C153603 +
              (C78848 + C78849) * C116108) *
                 C153560) *
                C153477 -
            ((C78797 * C116108 + C79869 * C153603 +
              (C74559 + C74558) * C153596) *
                 C153560 +
             (C78851 * C116108 + (C78843 + C78842) * C153603 +
              (C74249 * C146 + C74266 + C74266 + C153348 * C162 +
               C74247 * C145 + C74267 + C74267 + C74241 * C161) *
                  C153596) *
                 C153739) *
                C1938) *
               C153724 +
           ((((C74558 + C74559) * C153596 + C79867 * C153603 +
              C79868 * C116108) *
                 C153739 +
             ((C74560 + C74561) * C153596 + C94854 * C153603 +
              (C78464 + C78465) * C116108) *
                 C153560) *
                C1938 -
            (((C74249 * C6213 + C79870 + C79870 + C153348 * C6225 +
               C74247 * C6214 + C79871 + C79871 + C74241 * C6226) *
                  C116108 +
              (C78465 + C78464) * C153603 + C93583 * C153596) *
                 C153560 +
             ((C78849 + C78848) * C116108 + C78797 * C153603 +
              C79869 * C153596) *
                 C153739) *
                C153477) *
               C153449) *
              C153384)) /
        (p * q * std::sqrt(p + q));
    d2ee[251] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
              C74253 + C74253 + C153348 * C161) *
                 C153596 +
             (C78834 + C78835) * C153603 + C78850 * C116108) *
                C153739 +
            ((C74550 + C74551) * C153596 + C79864 * C153603 +
             C78764 * C116108) *
                C153560) *
               C153797 -
           ((C80646 * C116108 + C79865 * C153603 + C79866 * C153596) * C153560 +
            (C82413 * C116108 + (C78837 + C78836) * C153603 +
             (C78835 + C78834) * C153596) *
                C153739) *
               C153798 +
           ((C78850 * C153596 + C107728 * C153603 +
             (C82426 + C82427) * C116108) *
                C153739 +
            (C78764 * C153596 + C80647 * C153603 +
             (C80667 + C80668) * C116108) *
                C153560) *
               C2454) *
              C153724 +
          (((C79864 * C153596 + C78764 * C153603 + C80647 * C116108) * C153739 +
            (C81637 * C153596 + C81638 * C153603 +
             (C80669 + C80670) * C116108) *
                C153560) *
               C153798 -
           ((C80656 * C116108 + C76763 * C153603 +
             (C74553 + C74552) * C153596) *
                C153560 +
            (C79865 * C116108 + C79866 * C153603 +
             (C74551 + C74550) * C153596) *
                C153739) *
               C153797 -
           (((C74249 * C31240 + C80657 + C80657 + C153348 * C31244 +
              C74247 * C31239 + C80658 + C80658 + C74241 * C31243) *
                 C116108 +
             (C80670 + C80669) * C153603 + C80656 * C153596) *
                C153560 +
            ((C80668 + C80667) * C116108 + C80646 * C153603 +
             C79865 * C153596) *
                C153739) *
               C2454) *
              C153449) *
         C153378) /
        (p * q * std::sqrt(p + q));
    d2ee[252] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
              C74253 + C74253 + C153348 * C161) *
                 C153596 +
             (C78834 + C78835) * C153603 + C78850 * C116108) *
                C153739 +
            ((C74550 + C74551) * C153596 + C79864 * C153603 +
             C78764 * C116108) *
                C153560) *
               C1938 -
           ((C80646 * C116108 + C79865 * C153603 + C79866 * C153596) * C153560 +
            (C82413 * C116108 + (C78837 + C78836) * C153603 +
             (C78835 + C78834) * C153596) *
                C153739) *
               C153477) *
              C310 +
          (((C79864 * C153596 + C78764 * C153603 + C80647 * C116108) * C153739 +
            (C81637 * C153596 + C81638 * C153603 +
             (C80669 + C80670) * C116108) *
                C153560) *
               C153477 -
           ((C80656 * C116108 + C76763 * C153603 +
             (C74553 + C74552) * C153596) *
                C153560 +
            (C79865 * C116108 + C79866 * C153603 +
             (C74551 + C74550) * C153596) *
                C153739) *
               C1938) *
              C311 +
          (((C74566 * C153596 + C81637 * C153603 + C81638 * C116108) * C153739 +
            (C74567 * C153596 + C96600 * C153603 +
             (C76114 + C76115) * C116108) *
                C153560) *
               C1938 -
           (((C74249 * C32070 + C77296 + C77296 + C153348 * C32072 +
              C74247 * C30195 + C77297 + C77297 + C74241 * C30199) *
                 C116108 +
             (C76115 + C76114) * C153603 + C76762 * C153596) *
                C153560 +
            ((C80670 + C80669) * C116108 + C80656 * C153603 +
             C76763 * C153596) *
                C153739) *
               C153477) *
              C312) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
              C74253 + C74253 + C153348 * C161) *
                 C153596 +
             (C78834 + C78835) * C153603 + C78850 * C116108) *
                C153739 +
            ((C74550 + C74551) * C153596 + C79864 * C153603 +
             C78764 * C116108) *
                C153560) *
               C1938 -
           ((C80646 * C116108 + C79865 * C153603 + C79866 * C153596) * C153560 +
            (C82413 * C116108 + (C78837 + C78836) * C153603 +
             (C78835 + C78834) * C153596) *
                C153739) *
               C153477) *
              C153397 * C1133 +
          ((((C78842 + C78843) * C153596 + (C78844 + C78845) * C153603 +
             (C78846 + C78847) * C116108) *
                C153739 +
            (C79867 * C153596 + C79868 * C153603 +
             (C78848 + C78849) * C116108) *
                C153560) *
               C153477 -
           ((C78797 * C116108 + C79869 * C153603 +
             (C74559 + C74558) * C153596) *
                C153560 +
            (C78851 * C116108 + (C78843 + C78842) * C153603 +
             (C74249 * C146 + C74266 + C74266 + C153348 * C162 + C74247 * C145 +
              C74267 + C74267 + C74241 * C161) *
                 C153596) *
                C153739) *
               C1938) *
              C153397 * C1134 +
          ((((C74247 * C146 + C74268 + C74268 + C74241 * C162 + C74249 * C147 +
              C74269 + C74269 + C153348 * C163) *
                 C153596 +
             (C79474 + C79475) * C153603 + (C79476 + C79477) * C116108) *
                C153739 +
            ((C75020 + C75021) * C153596 + (C79160 + C79161) * C153603 +
             (C79162 + C79163) * C116108) *
                C153560) *
               C1938 -
           (((C74249 * C8437 + C79462 + C79462 + C153348 * C8439 +
              C74247 * C6216 + C79463 + C79463 + C74241 * C6228) *
                 C116108 +
             (C79163 + C79162) * C153603 + (C79161 + C79160) * C153596) *
                C153560 +
            ((C108141 + C108140) * C116108 + (C79477 + C79476) * C153603 +
             (C79475 + C79474) * C153596) *
                C153739) *
               C153477) *
              C153397 * C1135)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
             C74253 + C74253 + C153348 * C161) *
                C153596 +
            (C78834 + C78835) * C153603 + C78850 * C116108) *
               C153739 +
           ((C74550 + C74551) * C153596 + C79864 * C153603 + C78764 * C116108) *
               C153560) *
              C2144 -
          ((C80646 * C116108 + C79865 * C153603 + C79866 * C153596) * C153560 +
           (C82413 * C116108 + (C78837 + C78836) * C153603 +
            (C78835 + C78834) * C153596) *
               C153739) *
              C2145 +
          ((C78850 * C153596 + C107728 * C153603 +
            (C82426 + C82427) * C116108) *
               C153739 +
           (C78764 * C153596 + C80647 * C153603 + (C80667 + C80668) * C116108) *
               C153560) *
              C2146 -
          (((C74249 * C56416 + C82418 + C82418 + C153348 * C56418 +
             C74247 * C34012 + C82419 + C82419 + C74241 * C34016) *
                C116108 +
            (C80668 + C80667) * C153603 + C80646 * C153596) *
               C153560 +
           ((C110094 + C110093) * C116108 + C110082 * C153603 +
            C82413 * C153596) *
               C153739) *
              C2147) *
         C153397 * C153378) /
            (p * q * std::sqrt(p + q));
    d2ee[253] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
              C74253 + C74253 + C153348 * C161) *
                 C153596 +
             (C78834 + C78835) * C153603 + C78850 * C116108) *
                C153739 +
            ((C74550 + C74551) * C153596 + C79864 * C153603 +
             C78764 * C116108) *
                C153560) *
               C153797 -
           ((C80646 * C116108 + C79865 * C153603 + C79866 * C153596) * C153560 +
            (C82413 * C116108 + (C78837 + C78836) * C153603 +
             (C78835 + C78834) * C153596) *
                C153739) *
               C153798 +
           ((C78850 * C153596 + C107728 * C153603 +
             (C82426 + C82427) * C116108) *
                C153739 +
            (C78764 * C153596 + C80647 * C153603 +
             (C80667 + C80668) * C116108) *
                C153560) *
               C2454) *
              C153397 * C153716 +
          ((((C78842 + C78843) * C153596 + (C78844 + C78845) * C153603 +
             (C78846 + C78847) * C116108) *
                C153739 +
            (C79867 * C153596 + C79868 * C153603 +
             (C78848 + C78849) * C116108) *
                C153560) *
               C153798 -
           ((C78797 * C116108 + C79869 * C153603 +
             (C74559 + C74558) * C153596) *
                C153560 +
            (C78851 * C116108 + (C78843 + C78842) * C153603 +
             (C74249 * C146 + C74266 + C74266 + C153348 * C162 + C74247 * C145 +
              C74267 + C74267 + C74241 * C161) *
                 C153596) *
                C153739) *
               C153797 -
           (((C74249 * C9040 + C78798 + C78798 + C153348 * C9046 +
              C74247 * C9041 + C78799 + C78799 + C74241 * C9047) *
                 C116108 +
             (C78849 + C78848) * C153603 + C78797 * C153596) *
                C153560 +
            ((C107741 + C107740) * C116108 + C107733 * C153603 +
             C78851 * C153596) *
                C153739) *
               C2454) *
              C153397 * C153384)) /
        (p * q * std::sqrt(p + q));
    d2ee[254] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
              C74253 + C74253 + C153348 * C161) *
                 C153596 +
             (C78834 + C78835) * C153603 + C78850 * C116108) *
                C153739 +
            ((C74550 + C74551) * C153596 + C79864 * C153603 +
             C78764 * C116108) *
                C153560) *
               C1938 -
           ((C80646 * C116108 + C79865 * C153603 + C79866 * C153596) * C153560 +
            (C82413 * C116108 + (C78837 + C78836) * C153603 +
             (C78835 + C78834) * C153596) *
                C153739) *
               C153477) *
              C153397 * C1133 +
          ((((C78842 + C78843) * C153596 + (C78844 + C78845) * C153603 +
             (C78846 + C78847) * C116108) *
                C153739 +
            (C79867 * C153596 + C79868 * C153603 +
             (C78848 + C78849) * C116108) *
                C153560) *
               C153477 -
           ((C78797 * C116108 + C79869 * C153603 +
             (C74559 + C74558) * C153596) *
                C153560 +
            (C78851 * C116108 + (C78843 + C78842) * C153603 +
             (C74249 * C146 + C74266 + C74266 + C153348 * C162 + C74247 * C145 +
              C74267 + C74267 + C74241 * C161) *
                 C153596) *
                C153739) *
               C1938) *
              C153397 * C1134 +
          ((((C74247 * C146 + C74268 + C74268 + C74241 * C162 + C74249 * C147 +
              C74269 + C74269 + C153348 * C163) *
                 C153596 +
             (C79474 + C79475) * C153603 + (C79476 + C79477) * C116108) *
                C153739 +
            ((C75020 + C75021) * C153596 + (C79160 + C79161) * C153603 +
             (C79162 + C79163) * C116108) *
                C153560) *
               C1938 -
           (((C74249 * C8437 + C79462 + C79462 + C153348 * C8439 +
              C74247 * C6216 + C79463 + C79463 + C74241 * C6228) *
                 C116108 +
             (C79163 + C79162) * C153603 + (C79161 + C79160) * C153596) *
                C153560 +
            ((C108141 + C108140) * C116108 + (C79477 + C79476) * C153603 +
             (C79475 + C79474) * C153596) *
                C153739) *
               C153477) *
              C153397 * C1135)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
              C74253 + C74253 + C153348 * C161) *
                 C153596 +
             (C78834 + C78835) * C153603 + C78850 * C116108) *
                C153739 +
            ((C74550 + C74551) * C153596 + C79864 * C153603 +
             C78764 * C116108) *
                C153560) *
               C1938 -
           ((C80646 * C116108 + C79865 * C153603 + C79866 * C153596) * C153560 +
            (C82413 * C116108 + (C78837 + C78836) * C153603 +
             (C78835 + C78834) * C153596) *
                C153739) *
               C153477) *
              C310 +
          (((C79864 * C153596 + C78764 * C153603 + C80647 * C116108) * C153739 +
            (C81637 * C153596 + C81638 * C153603 +
             (C80669 + C80670) * C116108) *
                C153560) *
               C153477 -
           ((C80656 * C116108 + C76763 * C153603 +
             (C74553 + C74552) * C153596) *
                C153560 +
            (C79865 * C116108 + C79866 * C153603 +
             (C74551 + C74550) * C153596) *
                C153739) *
               C1938) *
              C311 +
          (((C74566 * C153596 + C81637 * C153603 + C81638 * C116108) * C153739 +
            (C74567 * C153596 + C96600 * C153603 +
             (C76114 + C76115) * C116108) *
                C153560) *
               C1938 -
           (((C74249 * C32070 + C77296 + C77296 + C153348 * C32072 +
              C74247 * C30195 + C77297 + C77297 + C74241 * C30199) *
                 C116108 +
             (C76115 + C76114) * C153603 + C76762 * C153596) *
                C153560 +
            ((C80670 + C80669) * C116108 + C80656 * C153603 +
             C76763 * C153596) *
                C153739) *
               C153477) *
              C312) *
         C153378) /
            (p * q * std::sqrt(p + q));
    d2ee[255] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
              C74253 + C74253 + C153348 * C161) *
                 C98471 +
             (C78834 + C78835) * C153600) *
                C153812 +
            ((C74550 + C74551) * C98471 + C79864 * C153600) * C153800 +
            C102460 * C153774) *
               C153413 * C153724 -
           ((C76762 * C153600 + C75875 * C98471) * C153774 +
            (C76763 * C153600 + (C74553 + C74552) * C98471) * C153800 +
            (C79866 * C153600 + (C74551 + C74550) * C98471) * C153812) *
               C153413 * C153449) *
              C153793 +
          ((((C74558 + C74559) * C98471 + C79867 * C153600) * C153812 +
            ((C74560 + C74561) * C98471 + C94854 * C153600) * C153800 +
            ((C74562 + C74563) * C98471 + (C75548 + C75549) * C153600) *
                C153774) *
               C153413 * C153449 -
           (C102461 * C153774 +
            (C79869 * C153600 + (C74559 + C74558) * C98471) * C153800 +
            ((C78843 + C78842) * C153600 +
             (C74249 * C146 + C74266 + C74266 + C153348 * C162 + C74247 * C145 +
              C74267 + C74267 + C74241 * C161) *
                 C98471) *
                C153812) *
               C153413 * C153724) *
              C153794 +
          ((((C74247 * C146 + C74268 + C74268 + C74241 * C162 + C74249 * C147 +
              C74269 + C74269 + C153348 * C163) *
                 C98471 +
             (C79474 + C79475) * C153600) *
                C153812 +
            ((C75020 + C75021) * C98471 + (C79160 + C79161) * C153600) *
                C153800 +
            ((C75022 + C75023) * C98471 + (C94176 + C94177) * C153600) *
                C153774) *
               C153413 * C153724 -
           (((C74249 * C4146 + C75220 + C75220 + C153348 * C4154 +
              C74247 * C4145 + C75221 + C75221 + C74241 * C4153) *
                 C153600 +
             (C75025 + C75024) * C98471) *
                C153774 +
            ((C94177 + C94176) * C153600 + (C75023 + C75022) * C98471) *
                C153800 +
            ((C79161 + C79160) * C153600 + (C75021 + C75020) * C98471) *
                C153812) *
               C153413 * C153449) *
              C678)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C70421 * C144 + C70430 + C70430 + C153818 * C160 + C70423 * C145 +
             C70431 + C70431 + C153811 * C161 + C70425 * C146 + C70432 +
             C70432 + C153792 * C162 + C70427 * C147 + C70433 + C70433 +
             C153738 * C163) *
                C98471 +
            (C98934 + C98935 + C98936 + C98937) * C153600) *
               C153501 * C153413 * C153724 -
           ((C71696 + C71697 + C71698 + C71699) * C153600 +
            (C70739 + C70738 + C70737 + C70736) * C98471) *
               C153501 * C153413 * C153449) *
              C153793 +
          (((C70744 + C70745 + C70746 + C70747) * C98471 +
            (C71700 + C71701 + C71702 + C71703) * C153600) *
               C153501 * C153413 * C153449 -
           ((C98945 + C98944 + C98943 + C98942) * C153600 +
            (C70427 * C148 + C70442 + C70442 + C153738 * C164 + C70425 * C147 +
             C70443 + C70443 + C153792 * C163 + C70423 * C146 + C70444 +
             C70444 + C153811 * C162 + C70421 * C145 + C70445 + C70445 +
             C153818 * C161) *
                C98471) *
               C153501 * C153413 * C153724) *
              C153794 +
          (((C70421 * C146 + C70446 + C70446 + C153818 * C162 + C70423 * C147 +
             C70447 + C70447 + C153811 * C163 + C70425 * C148 + C70448 +
             C70448 + C153792 * C164 + C70427 * C149 + C70449 + C70449 +
             C153738 * C165) *
                C98471 +
            (C70421 * C498 + C71397 + C71397 + C153818 * C522 + C70423 * C497 +
             C71396 + C71396 + C153811 * C521 + C70425 * C496 + C71395 +
             C71395 + C153792 * C520 + C70427 * C506 + C71394 + C71394 +
             C153738 * C530) *
                C153600) *
               C153501 * C153413 * C153724 -
           ((C70427 * C986 + C71390 + C71390 + C153738 * C998 + C70425 * C985 +
             C71391 + C71391 + C153792 * C997 + C70423 * C984 + C71392 +
             C71392 + C153811 * C996 + C70421 * C983 + C71393 + C71393 +
             C153818 * C995) *
                C153600 +
            (C71195 + C71194 + C71193 + C71192) * C98471) *
               C153501 * C153413 * C153449) *
              C678)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
             C74253 + C74253 + C153348 * C161) *
                C153820 +
            (C78834 + C78835) * C153817 + C78850 * C153808 +
            C107728 * C153754) *
               C153501 * C153413 * C153724 -
           (C80646 * C153754 + C79865 * C153808 + C79866 * C153817 +
            (C74551 + C74550) * C153820) *
               C153501 * C153413 * C153449) *
              C153793 +
          (((C74558 + C74559) * C153820 + C79867 * C153817 + C79868 * C153808 +
            (C78848 + C78849) * C153754) *
               C153501 * C153413 * C153449 -
           (C107733 * C153754 + C78851 * C153808 + (C78843 + C78842) * C153817 +
            (C74249 * C146 + C74266 + C74266 + C153348 * C162 + C74247 * C145 +
             C74267 + C74267 + C74241 * C161) *
                C153820) *
               C153501 * C153413 * C153724) *
              C153794 +
          (((C74247 * C146 + C74268 + C74268 + C74241 * C162 + C74249 * C147 +
             C74269 + C74269 + C153348 * C163) *
                C153820 +
            (C79474 + C79475) * C153817 + (C79476 + C79477) * C153808 +
            (C74247 * C2150 + C79465 + C79465 + C74241 * C2160 +
             C74249 * C2149 + C79464 + C79464 + C153348 * C2159) *
                C153754) *
               C153501 * C153413 * C153724 -
           ((C74249 * C8437 + C79462 + C79462 + C153348 * C8439 +
             C74247 * C6216 + C79463 + C79463 + C74241 * C6228) *
                C153754 +
            (C79163 + C79162) * C153808 + (C79161 + C79160) * C153817 +
            (C75021 + C75020) * C153820) *
               C153501 * C153413 * C153449) *
              C678)) /
            (p * q * std::sqrt(p + q));
    d2ee[256] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
               C74253 + C74253 + C153348 * C161) *
                  C98471 +
              (C78834 + C78835) * C153600) *
                 C153812 +
             ((C74550 + C74551) * C98471 + C79864 * C153600) * C153800 +
             C102460 * C153774) *
                C153725 -
            ((C80656 * C153600 + C76763 * C98471) * C153774 +
             (C79865 * C153600 + C79866 * C98471) * C153800 +
             ((C78837 + C78836) * C153600 + (C78835 + C78834) * C98471) *
                 C153812) *
                C153477) *
               C153724 +
           (((C79864 * C98471 + C78764 * C153600) * C153812 +
             (C81637 * C98471 + C81638 * C153600) * C153800 +
             (C96600 * C98471 + (C76114 + C76115) * C153600) * C153774) *
                C153477 -
            ((C76762 * C153600 + C75875 * C98471) * C153774 +
             (C76763 * C153600 + (C74553 + C74552) * C98471) * C153800 +
             (C79866 * C153600 + (C74551 + C74550) * C98471) * C153812) *
                C153725) *
               C153449) *
              C313 +
          (((((C78842 + C78843) * C98471 + (C78844 + C78845) * C153600) *
                 C153812 +
             (C79867 * C98471 + C79868 * C153600) * C153800 +
             (C94854 * C98471 + (C78464 + C78465) * C153600) * C153774) *
                C153477 -
            (C102461 * C153774 +
             (C79869 * C153600 + (C74559 + C74558) * C98471) * C153800 +
             ((C78843 + C78842) * C153600 +
              (C74249 * C146 + C74266 + C74266 + C153348 * C162 +
               C74247 * C145 + C74267 + C74267 + C74241 * C161) *
                  C98471) *
                 C153812) *
                C153725) *
               C153724 +
           ((((C74558 + C74559) * C98471 + C79867 * C153600) * C153812 +
             ((C74560 + C74561) * C98471 + C94854 * C153600) * C153800 +
             ((C74562 + C74563) * C98471 + (C75548 + C75549) * C153600) *
                 C153774) *
                C153725 -
            (((C74249 * C4833 + C74792 + C74792 + C153348 * C4839 +
               C74247 * C4834 + C74793 + C74793 + C74241 * C4840) *
                  C153600 +
              (C75549 + C75548) * C98471) *
                 C153774 +
             ((C78465 + C78464) * C153600 + C93583 * C98471) * C153800 +
             (C78797 * C153600 + C79869 * C98471) * C153812) *
                C153477) *
               C153449) *
              C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C70421 * C144 + C70430 + C70430 + C153818 * C160 + C70423 * C145 +
              C70431 + C70431 + C153811 * C161 + C70425 * C146 + C70432 +
              C70432 + C153792 * C162 + C70427 * C147 + C70433 + C70433 +
              C153738 * C163) *
                 C98471 +
             (C98934 + C98935 + C98936 + C98937) * C153600) *
                C153501 * C153725 -
            ((C98938 + C98939 + C98940 + C98941) * C153600 +
             (C98937 + C98936 + C98935 + C98934) * C98471) *
                C153501 * C153477) *
               C153724 +
           (((C71699 + C71698 + C71697 + C71696) * C98471 +
             (C72266 + C72267 + C72268 + C72269) * C153600) *
                C153501 * C153477 -
            ((C71696 + C71697 + C71698 + C71699) * C153600 +
             (C70739 + C70738 + C70737 + C70736) * C98471) *
                C153501 * C153725) *
               C153449) *
              C313 +
          ((((C98942 + C98943 + C98944 + C98945) * C98471 +
             (C98946 + C98947 + C98948 + C98949) * C153600) *
                C153501 * C153477 -
            ((C98945 + C98944 + C98943 + C98942) * C153600 +
             (C70427 * C148 + C70442 + C70442 + C153738 * C164 + C70425 * C147 +
              C70443 + C70443 + C153792 * C163 + C70423 * C146 + C70444 +
              C70444 + C153811 * C162 + C70421 * C145 + C70445 + C70445 +
              C153818 * C161) *
                 C98471) *
                C153501 * C153725) *
               C153724 +
           (((C70744 + C70745 + C70746 + C70747) * C98471 +
             (C71700 + C71701 + C71702 + C71703) * C153600) *
                C153501 * C153725 -
            ((C70427 * C1365 + C70970 + C70970 + C153738 * C1375 +
              C70425 * C1366 + C70971 + C70971 + C153792 * C1376 +
              C70423 * C1367 + C70972 + C70972 + C153811 * C1377 +
              C70421 * C1368 + C70973 + C70973 + C153818 * C1378) *
                 C153600 +
             (C71703 + C71702 + C71701 + C71700) * C98471) *
                C153501 * C153477) *
               C153449) *
              C153384)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
              C74253 + C74253 + C153348 * C161) *
                 C153820 +
             (C78834 + C78835) * C153817 + C78850 * C153808 +
             C107728 * C153754) *
                C153501 * C153725 -
            ((C82427 + C82426) * C153754 + C82413 * C153808 +
             (C78837 + C78836) * C153817 + (C78835 + C78834) * C153820) *
                C153501 * C153477) *
               C153724 +
           ((C79864 * C153820 + C78764 * C153817 + C80647 * C153808 +
             (C80667 + C80668) * C153754) *
                C153501 * C153477 -
            (C80646 * C153754 + C79865 * C153808 + C79866 * C153817 +
             (C74551 + C74550) * C153820) *
                C153501 * C153725) *
               C153449) *
              C313 +
          ((((C78842 + C78843) * C153820 + (C78844 + C78845) * C153817 +
             (C78846 + C78847) * C153808 + (C107740 + C107741) * C153754) *
                C153501 * C153477 -
            (C107733 * C153754 + C78851 * C153808 +
             (C78843 + C78842) * C153817 +
             (C74249 * C146 + C74266 + C74266 + C153348 * C162 + C74247 * C145 +
              C74267 + C74267 + C74241 * C161) *
                 C153820) *
                C153501 * C153725) *
               C153724 +
           (((C74558 + C74559) * C153820 + C79867 * C153817 + C79868 * C153808 +
             (C78848 + C78849) * C153754) *
                C153501 * C153725 -
            ((C74249 * C9040 + C78798 + C78798 + C153348 * C9046 +
              C74247 * C9041 + C78799 + C78799 + C74241 * C9047) *
                 C153754 +
             (C78849 + C78848) * C153808 + C78797 * C153817 +
             C79869 * C153820) *
                C153501 * C153477) *
               C153449) *
              C153384)) /
            (p * q * std::sqrt(p + q));
    d2ee[257] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((C70421 * C144 + C70430 + C70430 + C153818 * C160 +
                C70423 * C145 + C70431 + C70431 + C153811 * C161 +
                C70425 * C146 + C70432 + C70432 + C153792 * C162 +
                C70427 * C147 + C70433 + C70433 + C153738 * C163) *
                   C98471 +
               (C70421 * C500 + C70953 + C70953 + C153818 * C524 +
                C70423 * C499 + C70952 + C70952 + C153811 * C523 +
                C70425 * C498 + C70951 + C70951 + C153792 * C522 +
                C70427 * C497 + C70950 + C70950 + C153738 * C521) *
                   C153600) *
                  C153501 * C153413 * C153397 * C130 -
              ((C70427 * C496 + C70965 + C70965 + C153738 * C520 +
                C70425 * C497 + C70964 + C70964 + C153792 * C521 +
                C70423 * C498 + C70963 + C70963 + C153811 * C522 +
                C70421 * C499 + C70962 + C70962 + C153818 * C523) *
                   C153600 +
               (C70427 * C148 + C70442 + C70442 + C153738 * C164 +
                C70425 * C147 + C70443 + C70443 + C153792 * C163 +
                C70423 * C146 + C70444 + C70444 + C153811 * C162 +
                C70421 * C145 + C70445 + C70445 + C153818 * C161) *
                   C98471) *
                  C153501 * C153413 * C153397 * C131 +
              ((C70421 * C146 + C70446 + C70446 + C153818 * C162 +
                C70423 * C147 + C70447 + C70447 + C153811 * C163 +
                C70425 * C148 + C70448 + C70448 + C153792 * C164 +
                C70427 * C149 + C70449 + C70449 + C153738 * C165) *
                   C98471 +
               (C70421 * C498 + C71397 + C71397 + C153818 * C522 +
                C70423 * C497 + C71396 + C71396 + C153811 * C521 +
                C70425 * C496 + C71395 + C71395 + C153792 * C520 +
                C70427 * C506 + C71394 + C71394 + C153738 * C530) *
                   C153600) *
                  C153501 * C153413 * C153397 * C132 -
              ((C70427 * C811 + C98474 + C98474 + C153738 * C813 +
                C70425 * C506 + C98475 + C98475 + C153792 * C530 +
                C70423 * C496 + C98476 + C98476 + C153811 * C520 +
                C70421 * C497 + C98477 + C98477 + C153818 * C521) *
                   C153600 +
               (C70427 * C150 + C70458 + C70458 + C153738 * C166 +
                C70425 * C149 + C70459 + C70459 + C153792 * C165 +
                C70423 * C148 + C70460 + C70460 + C153811 * C164 +
                C70421 * C147 + C70461 + C70461 + C153818 * C163) *
                   C98471) *
                  C153501 * C153413 * C153397 * C133) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C70421 * C144 + C70430 + C70430 + C153818 * C160 +
                 C70423 * C145 + C70431 + C70431 + C153811 * C161 +
                 C70425 * C146 + C70432 + C70432 + C153792 * C162 +
                 C70427 * C147 + C70433 + C70433 + C153738 * C163) *
                    C98471 +
                (C70421 * C500 + C70953 + C70953 + C153818 * C524 +
                 C70423 * C499 + C70952 + C70952 + C153811 * C523 +
                 C70425 * C498 + C70951 + C70951 + C153792 * C522 +
                 C70427 * C497 + C70950 + C70950 + C153738 * C521) *
                    C153600) *
                   C153501 * C153413 * C310 -
               ((C71696 + C71697 + C71698 + C71699) * C153600 +
                (C70739 + C70738 + C70737 + C70736) * C98471) *
                   C153501 * C153413 * C311 +
               ((C70743 + C70742 + C70741 + C70740) * C98471 +
                (C72936 + C72937 + C72938 + C72939) * C153600) *
                   C153501 * C153413 * C312) *
                  C313 +
              (((C70744 + C70745 + C70746 + C70747) * C98471 +
                (C71700 + C71701 + C71702 + C71703) * C153600) *
                   C153501 * C153413 * C311 -
               ((C70427 * C496 + C70965 + C70965 + C153738 * C520 +
                 C70425 * C497 + C70964 + C70964 + C153792 * C521 +
                 C70423 * C498 + C70963 + C70963 + C153811 * C522 +
                 C70421 * C499 + C70962 + C70962 + C153818 * C523) *
                    C153600 +
                (C70427 * C148 + C70442 + C70442 + C153738 * C164 +
                 C70425 * C147 + C70443 + C70443 + C153792 * C163 +
                 C70423 * C146 + C70444 + C70444 + C153811 * C162 +
                 C70421 * C145 + C70445 + C70445 + C153818 * C161) *
                    C98471) *
                   C153501 * C153413 * C310 -
               ((C70427 * C1796 + C71676 + C71676 + C153738 * C1806 +
                 C70425 * C1797 + C71677 + C71677 + C153792 * C1807 +
                 C70423 * C1798 + C71678 + C71678 + C153811 * C1808 +
                 C70421 * C1799 + C71679 + C71679 + C153818 * C1809) *
                    C153600 +
                (C70751 + C70750 + C70749 + C70748) * C98471) *
                   C153501 * C153413 * C312) *
                  C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C70421 * C144 + C70430 + C70430 + C153818 * C160 + C70423 * C145 +
             C70431 + C70431 + C153811 * C161 + C70425 * C146 + C70432 +
             C70432 + C153792 * C162 + C70427 * C147 + C70433 + C70433 +
             C153738 * C163) *
                C98471 +
            (C98934 + C98935 + C98936 + C98937) * C153600) *
               C153501 * C493 -
           ((C98938 + C98939 + C98940 + C98941) * C153600 +
            (C98937 + C98936 + C98935 + C98934) * C98471) *
               C153501 * C494 +
           ((C98941 + C98940 + C98939 + C98938) * C98471 +
            (C70421 * C2152 + C73465 + C73465 + C153818 * C2162 +
             C70423 * C2151 + C73464 + C73464 + C153811 * C2161 +
             C70425 * C2150 + C73463 + C73463 + C153792 * C2160 +
             C70427 * C2149 + C73462 + C73462 + C153738 * C2159) *
                C153600) *
               C153501 * C495) *
              C153397 * C313 +
          (((C98942 + C98943 + C98944 + C98945) * C98471 +
            (C98946 + C98947 + C98948 + C98949) * C153600) *
               C153501 * C494 -
           ((C98945 + C98944 + C98943 + C98942) * C153600 +
            (C70427 * C148 + C70442 + C70442 + C153738 * C164 + C70425 * C147 +
             C70443 + C70443 + C153792 * C163 + C70423 * C146 + C70444 +
             C70444 + C153811 * C162 + C70421 * C145 + C70445 + C70445 +
             C153818 * C161) *
                C98471) *
               C153501 * C493 -
           ((C70427 * C2148 + C98898 + C98898 + C153738 * C2158 +
             C70425 * C2149 + C98899 + C98899 + C153792 * C2159 +
             C70423 * C2150 + C98900 + C98900 + C153811 * C2160 +
             C70421 * C2151 + C98901 + C98901 + C153818 * C2161) *
                C153600 +
            (C98949 + C98948 + C98947 + C98946) * C98471) *
               C153501 * C495) *
              C153397 * C153384)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
             C74253 + C74253 + C153348 * C161) *
                C98471 +
            (C78834 + C78835) * C153600) *
               C153812 +
           ((C74550 + C74551) * C98471 + C79864 * C153600) * C153800 +
           (C74566 * C98471 + C81637 * C153600) * C153774) *
              C153413 * C153397 * C130 -
          ((C93583 * C153600 + C74569 * C98471) * C153774 +
           (C79869 * C153600 + (C74559 + C74558) * C98471) * C153800 +
           ((C78843 + C78842) * C153600 +
            (C74249 * C146 + C74266 + C74266 + C153348 * C162 + C74247 * C145 +
             C74267 + C74267 + C74241 * C161) *
                C98471) *
               C153812) *
              C153413 * C153397 * C131 +
          (((C74247 * C146 + C74268 + C74268 + C74241 * C162 + C74249 * C147 +
             C74269 + C74269 + C153348 * C163) *
                C98471 +
            (C79474 + C79475) * C153600) *
               C153812 +
           ((C75020 + C75021) * C98471 + (C79160 + C79161) * C153600) *
               C153800 +
           ((C75022 + C75023) * C98471 + (C94176 + C94177) * C153600) *
               C153774) *
              C153413 * C153397 * C132 -
          (((C74249 * C1796 + C93289 + C93289 + C153348 * C1806 +
             C74247 * C1797 + C93290 + C93290 + C74241 * C1807) *
                C153600 +
            (C74249 * C324 + C74278 + C74278 + C153348 * C348 + C74247 * C323 +
             C74279 + C74279 + C74241 * C347) *
                C98471) *
               C153774 +
           ((C74249 * C985 + C78150 + C78150 + C153348 * C997 + C74247 * C984 +
             C78151 + C78151 + C74241 * C996) *
                C153600 +
            (C74249 * C315 + C74280 + C74280 + C153348 * C339 + C74247 * C316 +
             C74281 + C74281 + C74241 * C340) *
                C98471) *
               C153800 +
           ((C74249 * C496 + C78154 + C78154 + C153348 * C520 + C74247 * C497 +
             C78155 + C78155 + C74241 * C521) *
                C153600 +
            (C74249 * C148 + C74282 + C74282 + C153348 * C164 + C74247 * C147 +
             C74283 + C74283 + C74241 * C163) *
                C98471) *
               C153812) *
              C153413 * C153397 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
              C74253 + C74253 + C153348 * C161) *
                 C98471 +
             (C78834 + C78835) * C153600) *
                C153812 +
            ((C74550 + C74551) * C98471 + C79864 * C153600) * C153800 +
            C102460 * C153774) *
               C153413 * C310 -
           ((C76762 * C153600 + C75875 * C98471) * C153774 +
            (C76763 * C153600 + (C74553 + C74552) * C98471) * C153800 +
            (C79866 * C153600 + (C74551 + C74550) * C98471) * C153812) *
               C153413 * C311 +
           (C102460 * C153812 + (C74567 * C98471 + C96600 * C153600) * C153800 +
            ((C74557 + C74556) * C98471 + (C76776 + C76777) * C153600) *
                C153774) *
               C153413 * C312) *
              C313 +
          ((((C74558 + C74559) * C98471 + C79867 * C153600) * C153812 +
            ((C74560 + C74561) * C98471 + C94854 * C153600) * C153800 +
            ((C74562 + C74563) * C98471 + (C75548 + C75549) * C153600) *
                C153774) *
               C153413 * C311 -
           (C102461 * C153774 +
            (C79869 * C153600 + (C74559 + C74558) * C98471) * C153800 +
            ((C78843 + C78842) * C153600 +
             (C74249 * C146 + C74266 + C74266 + C153348 * C162 + C74247 * C145 +
              C74267 + C74267 + C74241 * C161) *
                 C98471) *
                C153812) *
               C153413 * C310 -
           (((C74249 * C5601 + C75512 + C75512 + C153348 * C5607 +
              C74247 * C5602 + C75513 + C75513 + C74241 * C5608) *
                 C153600 +
             (C74565 + C74564) * C98471) *
                C153774 +
            ((C75549 + C75548) * C153600 + C74568 * C98471) * C153800 +
            C102461 * C153812) *
               C153413 * C312) *
              C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
              C74253 + C74253 + C153348 * C161) *
                 C98471 +
             (C78834 + C78835) * C153600) *
                C153812 +
            ((C74550 + C74551) * C98471 + C79864 * C153600) * C153800 +
            C102460 * C153774) *
               C493 -
           ((C80656 * C153600 + C76763 * C98471) * C153774 +
            (C79865 * C153600 + C79866 * C98471) * C153800 +
            ((C78837 + C78836) * C153600 + (C78835 + C78834) * C98471) *
                C153812) *
               C494 +
           ((C78850 * C98471 + (C78841 + C78840) * C153600) * C153812 +
            (C78764 * C98471 + C80647 * C153600) * C153800 +
            (C81638 * C98471 + (C80669 + C80670) * C153600) * C153774) *
               C495) *
              C153397 * C313 +
          ((((C78842 + C78843) * C98471 + (C78844 + C78845) * C153600) *
                C153812 +
            (C79867 * C98471 + C79868 * C153600) * C153800 +
            (C94854 * C98471 + (C78464 + C78465) * C153600) * C153774) *
               C494 -
           (C102461 * C153774 +
            (C79869 * C153600 + (C74559 + C74558) * C98471) * C153800 +
            ((C78843 + C78842) * C153600 +
             (C74249 * C146 + C74266 + C74266 + C153348 * C162 + C74247 * C145 +
              C74267 + C74267 + C74241 * C161) *
                 C98471) *
                C153812) *
               C493 -
           (((C74249 * C6213 + C79870 + C79870 + C153348 * C6225 +
              C74247 * C6214 + C79871 + C79871 + C74241 * C6226) *
                 C153600 +
             (C78465 + C78464) * C98471) *
                C153774 +
            ((C78849 + C78848) * C153600 + C78797 * C98471) * C153800 +
            ((C78847 + C78846) * C153600 + C78851 * C98471) * C153812) *
               C495) *
              C153397 * C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
            C74253 + C74253 + C153348 * C161) *
               C153820 +
           (C78834 + C78835) * C153817 + C78850 * C153808 +
           (C78841 + C78840) * C153754) *
              C153501 * C153413 * C153397 * C130 -
          ((C78847 + C78846) * C153754 + C78851 * C153808 +
           (C78843 + C78842) * C153817 +
           (C74249 * C146 + C74266 + C74266 + C153348 * C162 + C74247 * C145 +
            C74267 + C74267 + C74241 * C161) *
               C153820) *
              C153501 * C153413 * C153397 * C131 +
          ((C74247 * C146 + C74268 + C74268 + C74241 * C162 + C74249 * C147 +
            C74269 + C74269 + C153348 * C163) *
               C153820 +
           (C79474 + C79475) * C153817 + (C79476 + C79477) * C153808 +
           (C74247 * C2150 + C79465 + C79465 + C74241 * C2160 + C74249 * C2149 +
            C79464 + C79464 + C153348 * C2159) *
               C153754) *
              C153501 * C153413 * C153397 * C132 -
          ((C74249 * C2148 + C107338 + C107338 + C153348 * C2158 +
            C74247 * C2149 + C107339 + C107339 + C74241 * C2159) *
               C153754 +
           (C74249 * C505 + C78152 + C78152 + C153348 * C529 + C74247 * C504 +
            C78153 + C78153 + C74241 * C528) *
               C153808 +
           (C74249 * C496 + C78154 + C78154 + C153348 * C520 + C74247 * C497 +
            C78155 + C78155 + C74241 * C521) *
               C153817 +
           (C74249 * C148 + C74282 + C74282 + C153348 * C164 + C74247 * C147 +
            C74283 + C74283 + C74241 * C163) *
               C153820) *
              C153501 * C153413 * C153397 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
             C74253 + C74253 + C153348 * C161) *
                C153820 +
            (C78834 + C78835) * C153817 + C78850 * C153808 +
            (C78841 + C78840) * C153754) *
               C153501 * C153413 * C310 -
           (C80646 * C153754 + C79865 * C153808 + C79866 * C153817 +
            (C74551 + C74550) * C153820) *
               C153501 * C153413 * C311 +
           (C74566 * C153820 + C81637 * C153817 + C81638 * C153808 +
            (C80669 + C80670) * C153754) *
               C153501 * C153413 * C312) *
              C313 +
          (((C74558 + C74559) * C153820 + C79867 * C153817 + C79868 * C153808 +
            (C78848 + C78849) * C153754) *
               C153501 * C153413 * C311 -
           ((C78847 + C78846) * C153754 + C78851 * C153808 +
            (C78843 + C78842) * C153817 +
            (C74249 * C146 + C74266 + C74266 + C153348 * C162 + C74247 * C145 +
             C74267 + C74267 + C74241 * C161) *
                C153820) *
               C153501 * C153413 * C310 -
           ((C74249 * C6213 + C79870 + C79870 + C153348 * C6225 +
             C74247 * C6214 + C79871 + C79871 + C74241 * C6226) *
                C153754 +
            (C78465 + C78464) * C153808 + C93583 * C153817 + C74569 * C153820) *
               C153501 * C153413 * C312) *
              C153384)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
             C74253 + C74253 + C153348 * C161) *
                C153820 +
            (C78834 + C78835) * C153817 + C78850 * C153808 +
            C107728 * C153754) *
               C153501 * C493 -
           ((C82427 + C82426) * C153754 + C82413 * C153808 +
            (C78837 + C78836) * C153817 + (C78835 + C78834) * C153820) *
               C153501 * C494 +
           (C78850 * C153820 + C107728 * C153817 + (C82426 + C82427) * C153808 +
            (C74247 * C10379 + C82421 + C82421 + C74241 * C10385 +
             C74249 * C10378 + C82420 + C82420 + C153348 * C10384) *
                C153754) *
               C153501 * C495) *
              C153397 * C313 +
          (((C78842 + C78843) * C153820 + (C78844 + C78845) * C153817 +
            (C78846 + C78847) * C153808 + (C107740 + C107741) * C153754) *
               C153501 * C494 -
           (C107733 * C153754 + C78851 * C153808 + (C78843 + C78842) * C153817 +
            (C74249 * C146 + C74266 + C74266 + C153348 * C162 + C74247 * C145 +
             C74267 + C74267 + C74241 * C161) *
                C153820) *
               C153501 * C493 -
           ((C74249 * C10377 + C107734 + C107734 + C153348 * C10383 +
             C74247 * C10378 + C107735 + C107735 + C74241 * C10384) *
                C153754 +
            (C107741 + C107740) * C153808 + C107733 * C153817 +
            C78851 * C153820) *
               C153501 * C495) *
              C153397 * C153384)) /
            (p * q * std::sqrt(p + q));
    d2ee[258] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
              C74253 + C74253 + C153348 * C161) *
                 C98471 +
             (C78834 + C78835) * C153600) *
                C153812 +
            ((C74550 + C74551) * C98471 + C79864 * C153600) * C153800 +
            C102460 * C153774) *
               C153725 -
           ((C80656 * C153600 + C76763 * C98471) * C153774 +
            (C79865 * C153600 + C79866 * C98471) * C153800 +
            ((C78837 + C78836) * C153600 + (C78835 + C78834) * C98471) *
                C153812) *
               C153477) *
              C153397 * C153793 +
          ((((C78842 + C78843) * C98471 + (C78844 + C78845) * C153600) *
                C153812 +
            (C79867 * C98471 + C79868 * C153600) * C153800 +
            (C94854 * C98471 + (C78464 + C78465) * C153600) * C153774) *
               C153477 -
           (C102461 * C153774 +
            (C79869 * C153600 + (C74559 + C74558) * C98471) * C153800 +
            ((C78843 + C78842) * C153600 +
             (C74249 * C146 + C74266 + C74266 + C153348 * C162 + C74247 * C145 +
              C74267 + C74267 + C74241 * C161) *
                 C98471) *
                C153812) *
               C153725) *
              C153397 * C153794 +
          ((((C74247 * C146 + C74268 + C74268 + C74241 * C162 + C74249 * C147 +
              C74269 + C74269 + C153348 * C163) *
                 C98471 +
             (C79474 + C79475) * C153600) *
                C153812 +
            ((C75020 + C75021) * C98471 + (C79160 + C79161) * C153600) *
                C153800 +
            ((C75022 + C75023) * C98471 + (C94176 + C94177) * C153600) *
                C153774) *
               C153725 -
           (((C74249 * C3330 + C79150 + C79150 + C153348 * C3338 +
              C74247 * C3329 + C79151 + C79151 + C74241 * C3337) *
                 C153600 +
             (C94177 + C94176) * C98471) *
                C153774 +
            ((C79163 + C79162) * C153600 + (C79161 + C79160) * C98471) *
                C153800 +
            ((C79477 + C79476) * C153600 + (C79475 + C79474) * C98471) *
                C153812) *
               C153477) *
              C153397 * C678)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C70421 * C144 + C70430 + C70430 + C153818 * C160 + C70423 * C145 +
             C70431 + C70431 + C153811 * C161 + C70425 * C146 + C70432 +
             C70432 + C153792 * C162 + C70427 * C147 + C70433 + C70433 +
             C153738 * C163) *
                C98471 +
            (C98934 + C98935 + C98936 + C98937) * C153600) *
               C153501 * C153725 -
           ((C98938 + C98939 + C98940 + C98941) * C153600 +
            (C98937 + C98936 + C98935 + C98934) * C98471) *
               C153501 * C153477) *
              C153397 * C153793 +
          (((C98942 + C98943 + C98944 + C98945) * C98471 +
            (C98946 + C98947 + C98948 + C98949) * C153600) *
               C153501 * C153477 -
           ((C98945 + C98944 + C98943 + C98942) * C153600 +
            (C70427 * C148 + C70442 + C70442 + C153738 * C164 + C70425 * C147 +
             C70443 + C70443 + C153792 * C163 + C70423 * C146 + C70444 +
             C70444 + C153811 * C162 + C70421 * C145 + C70445 + C70445 +
             C153818 * C161) *
                C98471) *
               C153501 * C153725) *
              C153397 * C153794 +
          (((C70421 * C146 + C70446 + C70446 + C153818 * C162 + C70423 * C147 +
             C70447 + C70447 + C153811 * C163 + C70425 * C148 + C70448 +
             C70448 + C153792 * C164 + C70427 * C149 + C70449 + C70449 +
             C153738 * C165) *
                C98471 +
            (C99358 + C99359 + C99360 + C99361) * C153600) *
               C153501 * C153725 -
           ((C70427 * C507 + C99346 + C99346 + C153738 * C531 + C70425 * C505 +
             C99347 + C99347 + C153792 * C529 + C70423 * C504 + C99348 +
             C99348 + C153811 * C528 + C70421 * C503 + C99349 + C99349 +
             C153818 * C527) *
                C153600 +
            (C99361 + C99360 + C99359 + C99358) * C98471) *
               C153501 * C153477) *
              C153397 * C678)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
             C74253 + C74253 + C153348 * C161) *
                C153820 +
            (C78834 + C78835) * C153817 + C78850 * C153808 +
            C107728 * C153754) *
               C153501 * C153725 -
           ((C82427 + C82426) * C153754 + C82413 * C153808 +
            (C78837 + C78836) * C153817 + (C78835 + C78834) * C153820) *
               C153501 * C153477) *
              C153397 * C153793 +
          (((C78842 + C78843) * C153820 + (C78844 + C78845) * C153817 +
            (C78846 + C78847) * C153808 + (C107740 + C107741) * C153754) *
               C153501 * C153477 -
           (C107733 * C153754 + C78851 * C153808 + (C78843 + C78842) * C153817 +
            (C74249 * C146 + C74266 + C74266 + C153348 * C162 + C74247 * C145 +
             C74267 + C74267 + C74241 * C161) *
                C153820) *
               C153501 * C153725) *
              C153397 * C153794 +
          (((C74247 * C146 + C74268 + C74268 + C74241 * C162 + C74249 * C147 +
             C74269 + C74269 + C153348 * C163) *
                C153820 +
            (C79474 + C79475) * C153817 + (C79476 + C79477) * C153808 +
            (C108140 + C108141) * C153754) *
               C153501 * C153725 -
           ((C74249 * C7563 + C108134 + C108134 + C153348 * C7571 +
             C74247 * C7562 + C108135 + C108135 + C74241 * C7570) *
                C153754 +
            (C108141 + C108140) * C153808 + (C79477 + C79476) * C153817 +
            (C79475 + C79474) * C153820) *
               C153501 * C153477) *
              C153397 * C678)) /
            (p * q * std::sqrt(p + q));
    d2ee[259] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C70421 * C144 + C70430 + C70430 + C153818 * C160 + C70423 * C145 +
             C70431 + C70431 + C153811 * C161 + C70425 * C146 + C70432 +
             C70432 + C153792 * C162 + C70427 * C147 + C70433 + C70433 +
             C153738 * C163) *
                C98471 +
            (C70421 * C500 + C70953 + C70953 + C153818 * C524 + C70423 * C499 +
             C70952 + C70952 + C153811 * C523 + C70425 * C498 + C70951 +
             C70951 + C153792 * C522 + C70427 * C497 + C70950 + C70950 +
             C153738 * C521) *
                C153600) *
               C153501 * C153413 * C310 -
           ((C71696 + C71697 + C71698 + C71699) * C153600 +
            (C70739 + C70738 + C70737 + C70736) * C98471) *
               C153501 * C153413 * C311 +
           ((C70743 + C70742 + C70741 + C70740) * C98471 +
            (C72936 + C72937 + C72938 + C72939) * C153600) *
               C153501 * C153413 * C312) *
              C313 +
          (((C70744 + C70745 + C70746 + C70747) * C98471 +
            (C71700 + C71701 + C71702 + C71703) * C153600) *
               C153501 * C153413 * C311 -
           ((C70427 * C496 + C70965 + C70965 + C153738 * C520 + C70425 * C497 +
             C70964 + C70964 + C153792 * C521 + C70423 * C498 + C70963 +
             C70963 + C153811 * C522 + C70421 * C499 + C70962 + C70962 +
             C153818 * C523) *
                C153600 +
            (C70427 * C148 + C70442 + C70442 + C153738 * C164 + C70425 * C147 +
             C70443 + C70443 + C153792 * C163 + C70423 * C146 + C70444 +
             C70444 + C153811 * C162 + C70421 * C145 + C70445 + C70445 +
             C153818 * C161) *
                C98471) *
               C153501 * C153413 * C310 -
           ((C70427 * C1796 + C71676 + C71676 + C153738 * C1806 +
             C70425 * C1797 + C71677 + C71677 + C153792 * C1807 +
             C70423 * C1798 + C71678 + C71678 + C153811 * C1808 +
             C70421 * C1799 + C71679 + C71679 + C153818 * C1809) *
                C153600 +
            (C70751 + C70750 + C70749 + C70748) * C98471) *
               C153501 * C153413 * C312) *
              C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C70421 * C144 + C70430 + C70430 + C153818 * C160 + C70423 * C145 +
            C70431 + C70431 + C153811 * C161 + C70425 * C146 + C70432 + C70432 +
            C153792 * C162 + C70427 * C147 + C70433 + C70433 + C153738 * C163) *
               C98471 +
           (C70421 * C500 + C70953 + C70953 + C153818 * C524 + C70423 * C499 +
            C70952 + C70952 + C153811 * C523 + C70425 * C498 + C70951 + C70951 +
            C153792 * C522 + C70427 * C497 + C70950 + C70950 + C153738 * C521) *
               C153600) *
              C153501 * C153413 * C153397 * C130 -
          ((C70427 * C496 + C70965 + C70965 + C153738 * C520 + C70425 * C497 +
            C70964 + C70964 + C153792 * C521 + C70423 * C498 + C70963 + C70963 +
            C153811 * C522 + C70421 * C499 + C70962 + C70962 + C153818 * C523) *
               C153600 +
           (C70427 * C148 + C70442 + C70442 + C153738 * C164 + C70425 * C147 +
            C70443 + C70443 + C153792 * C163 + C70423 * C146 + C70444 + C70444 +
            C153811 * C162 + C70421 * C145 + C70445 + C70445 + C153818 * C161) *
               C98471) *
              C153501 * C153413 * C153397 * C131 +
          ((C70421 * C146 + C70446 + C70446 + C153818 * C162 + C70423 * C147 +
            C70447 + C70447 + C153811 * C163 + C70425 * C148 + C70448 + C70448 +
            C153792 * C164 + C70427 * C149 + C70449 + C70449 + C153738 * C165) *
               C98471 +
           (C70421 * C498 + C71397 + C71397 + C153818 * C522 + C70423 * C497 +
            C71396 + C71396 + C153811 * C521 + C70425 * C496 + C71395 + C71395 +
            C153792 * C520 + C70427 * C506 + C71394 + C71394 + C153738 * C530) *
               C153600) *
              C153501 * C153413 * C153397 * C132 -
          ((C70427 * C811 + C98474 + C98474 + C153738 * C813 + C70425 * C506 +
            C98475 + C98475 + C153792 * C530 + C70423 * C496 + C98476 + C98476 +
            C153811 * C520 + C70421 * C497 + C98477 + C98477 + C153818 * C521) *
               C153600 +
           (C70427 * C150 + C70458 + C70458 + C153738 * C166 + C70425 * C149 +
            C70459 + C70459 + C153792 * C165 + C70423 * C148 + C70460 + C70460 +
            C153811 * C164 + C70421 * C147 + C70461 + C70461 + C153818 * C163) *
               C98471) *
              C153501 * C153413 * C153397 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
             C74253 + C74253 + C153348 * C161) *
                C98471 +
            (C78834 + C78835) * C153600) *
               C153812 +
           ((C74550 + C74551) * C98471 + C79864 * C153600) * C153800 +
           (C74566 * C98471 + C81637 * C153600) * C153774) *
              C153413 * C153397 * C130 -
          ((C93583 * C153600 + C74569 * C98471) * C153774 +
           (C79869 * C153600 + (C74559 + C74558) * C98471) * C153800 +
           ((C78843 + C78842) * C153600 +
            (C74249 * C146 + C74266 + C74266 + C153348 * C162 + C74247 * C145 +
             C74267 + C74267 + C74241 * C161) *
                C98471) *
               C153812) *
              C153413 * C153397 * C131 +
          (((C74247 * C146 + C74268 + C74268 + C74241 * C162 + C74249 * C147 +
             C74269 + C74269 + C153348 * C163) *
                C98471 +
            (C79474 + C79475) * C153600) *
               C153812 +
           ((C75020 + C75021) * C98471 + (C79160 + C79161) * C153600) *
               C153800 +
           ((C75022 + C75023) * C98471 + (C94176 + C94177) * C153600) *
               C153774) *
              C153413 * C153397 * C132 -
          (((C74249 * C1796 + C93289 + C93289 + C153348 * C1806 +
             C74247 * C1797 + C93290 + C93290 + C74241 * C1807) *
                C153600 +
            (C74249 * C324 + C74278 + C74278 + C153348 * C348 + C74247 * C323 +
             C74279 + C74279 + C74241 * C347) *
                C98471) *
               C153774 +
           ((C74249 * C985 + C78150 + C78150 + C153348 * C997 + C74247 * C984 +
             C78151 + C78151 + C74241 * C996) *
                C153600 +
            (C74249 * C315 + C74280 + C74280 + C153348 * C339 + C74247 * C316 +
             C74281 + C74281 + C74241 * C340) *
                C98471) *
               C153800 +
           ((C74249 * C496 + C78154 + C78154 + C153348 * C520 + C74247 * C497 +
             C78155 + C78155 + C74241 * C521) *
                C153600 +
            (C74249 * C148 + C74282 + C74282 + C153348 * C164 + C74247 * C147 +
             C74283 + C74283 + C74241 * C163) *
                C98471) *
               C153812) *
              C153413 * C153397 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
              C74253 + C74253 + C153348 * C161) *
                 C98471 +
             (C78834 + C78835) * C153600) *
                C153812 +
            ((C74550 + C74551) * C98471 + C79864 * C153600) * C153800 +
            C102460 * C153774) *
               C153413 * C310 -
           ((C76762 * C153600 + C75875 * C98471) * C153774 +
            (C76763 * C153600 + (C74553 + C74552) * C98471) * C153800 +
            (C79866 * C153600 + (C74551 + C74550) * C98471) * C153812) *
               C153413 * C311 +
           (C102460 * C153812 + (C74567 * C98471 + C96600 * C153600) * C153800 +
            ((C74557 + C74556) * C98471 + (C76776 + C76777) * C153600) *
                C153774) *
               C153413 * C312) *
              C313 +
          ((((C74558 + C74559) * C98471 + C79867 * C153600) * C153812 +
            ((C74560 + C74561) * C98471 + C94854 * C153600) * C153800 +
            ((C74562 + C74563) * C98471 + (C75548 + C75549) * C153600) *
                C153774) *
               C153413 * C311 -
           (C102461 * C153774 +
            (C79869 * C153600 + (C74559 + C74558) * C98471) * C153800 +
            ((C78843 + C78842) * C153600 +
             (C74249 * C146 + C74266 + C74266 + C153348 * C162 + C74247 * C145 +
              C74267 + C74267 + C74241 * C161) *
                 C98471) *
                C153812) *
               C153413 * C310 -
           (((C74249 * C5601 + C75512 + C75512 + C153348 * C5607 +
              C74247 * C5602 + C75513 + C75513 + C74241 * C5608) *
                 C153600 +
             (C74565 + C74564) * C98471) *
                C153774 +
            ((C75549 + C75548) * C153600 + C74568 * C98471) * C153800 +
            C102461 * C153812) *
               C153413 * C312) *
              C153384)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
            C74253 + C74253 + C153348 * C161) *
               C153820 +
           (C78834 + C78835) * C153817 + C78850 * C153808 +
           (C78841 + C78840) * C153754) *
              C153501 * C153413 * C153397 * C130 -
          ((C78847 + C78846) * C153754 + C78851 * C153808 +
           (C78843 + C78842) * C153817 +
           (C74249 * C146 + C74266 + C74266 + C153348 * C162 + C74247 * C145 +
            C74267 + C74267 + C74241 * C161) *
               C153820) *
              C153501 * C153413 * C153397 * C131 +
          ((C74247 * C146 + C74268 + C74268 + C74241 * C162 + C74249 * C147 +
            C74269 + C74269 + C153348 * C163) *
               C153820 +
           (C79474 + C79475) * C153817 + (C79476 + C79477) * C153808 +
           (C74247 * C2150 + C79465 + C79465 + C74241 * C2160 + C74249 * C2149 +
            C79464 + C79464 + C153348 * C2159) *
               C153754) *
              C153501 * C153413 * C153397 * C132 -
          ((C74249 * C2148 + C107338 + C107338 + C153348 * C2158 +
            C74247 * C2149 + C107339 + C107339 + C74241 * C2159) *
               C153754 +
           (C74249 * C505 + C78152 + C78152 + C153348 * C529 + C74247 * C504 +
            C78153 + C78153 + C74241 * C528) *
               C153808 +
           (C74249 * C496 + C78154 + C78154 + C153348 * C520 + C74247 * C497 +
            C78155 + C78155 + C74241 * C521) *
               C153817 +
           (C74249 * C148 + C74282 + C74282 + C153348 * C164 + C74247 * C147 +
            C74283 + C74283 + C74241 * C163) *
               C153820) *
              C153501 * C153413 * C153397 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
             C74253 + C74253 + C153348 * C161) *
                C153820 +
            (C78834 + C78835) * C153817 + C78850 * C153808 +
            (C78841 + C78840) * C153754) *
               C153501 * C153413 * C310 -
           (C80646 * C153754 + C79865 * C153808 + C79866 * C153817 +
            (C74551 + C74550) * C153820) *
               C153501 * C153413 * C311 +
           (C74566 * C153820 + C81637 * C153817 + C81638 * C153808 +
            (C80669 + C80670) * C153754) *
               C153501 * C153413 * C312) *
              C313 +
          (((C74558 + C74559) * C153820 + C79867 * C153817 + C79868 * C153808 +
            (C78848 + C78849) * C153754) *
               C153501 * C153413 * C311 -
           ((C78847 + C78846) * C153754 + C78851 * C153808 +
            (C78843 + C78842) * C153817 +
            (C74249 * C146 + C74266 + C74266 + C153348 * C162 + C74247 * C145 +
             C74267 + C74267 + C74241 * C161) *
                C153820) *
               C153501 * C153413 * C310 -
           ((C74249 * C6213 + C79870 + C79870 + C153348 * C6225 +
             C74247 * C6214 + C79871 + C79871 + C74241 * C6226) *
                C153754 +
            (C78465 + C78464) * C153808 + C93583 * C153817 + C74569 * C153820) *
               C153501 * C153413 * C312) *
              C153384)) /
            (p * q * std::sqrt(p + q));
    d2ee[260] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
              C74253 + C74253 + C153348 * C161) *
                 C98471 +
             (C78834 + C78835) * C153600) *
                C153812 +
            ((C74550 + C74551) * C98471 + C79864 * C153600) * C153800 +
            C102460 * C153774) *
               C153413 * C153795 -
           (C104204 * C153774 +
            (C76763 * C153600 + (C74553 + C74552) * C98471) * C153800 +
            (C79866 * C153600 + (C74551 + C74550) * C98471) * C153812) *
               C153413 * C153796 +
           (C102460 * C153812 + (C74567 * C98471 + C96600 * C153600) * C153800 +
            ((C74557 + C74556) * C98471 + (C76776 + C76777) * C153600) *
                C153774) *
               C153413 * C1509) *
              C153716 +
          ((((C74558 + C74559) * C98471 + C79867 * C153600) * C153812 +
            ((C74560 + C74561) * C98471 + C94854 * C153600) * C153800 +
            ((C74562 + C74563) * C98471 + (C75548 + C75549) * C153600) *
                C153774) *
               C153413 * C153796 -
           (C102461 * C153774 +
            (C79869 * C153600 + (C74559 + C74558) * C98471) * C153800 +
            ((C78843 + C78842) * C153600 +
             (C74249 * C146 + C74266 + C74266 + C153348 * C162 + C74247 * C145 +
              C74267 + C74267 + C74241 * C161) *
                 C98471) *
                C153812) *
               C153413 * C153795 -
           (((C74249 * C5601 + C75512 + C75512 + C153348 * C5607 +
              C74247 * C5602 + C75513 + C75513 + C74241 * C5608) *
                 C153600 +
             (C74565 + C74564) * C98471) *
                C153774 +
            ((C75549 + C75548) * C153600 + C74568 * C98471) * C153800 +
            C102461 * C153812) *
               C153413 * C1509) *
              C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C70421 * C144 + C70430 + C70430 + C153818 * C160 + C70423 * C145 +
             C70431 + C70431 + C153811 * C161 + C70425 * C146 + C70432 +
             C70432 + C153792 * C162 + C70427 * C147 + C70433 + C70433 +
             C153738 * C163) *
                C98471 +
            (C98934 + C98935 + C98936 + C98937) * C153600) *
               C153501 * C153413 * C153795 -
           ((C71696 + C71697 + C71698 + C71699) * C153600 +
            (C70739 + C70738 + C70737 + C70736) * C98471) *
               C153501 * C153413 * C153796 +
           ((C70743 + C70742 + C70741 + C70740) * C98471 +
            (C72936 + C72937 + C72938 + C72939) * C153600) *
               C153501 * C153413 * C1509) *
              C153716 +
          (((C70744 + C70745 + C70746 + C70747) * C98471 +
            (C71700 + C71701 + C71702 + C71703) * C153600) *
               C153501 * C153413 * C153796 -
           ((C98945 + C98944 + C98943 + C98942) * C153600 +
            (C70427 * C148 + C70442 + C70442 + C153738 * C164 + C70425 * C147 +
             C70443 + C70443 + C153792 * C163 + C70423 * C146 + C70444 +
             C70444 + C153811 * C162 + C70421 * C145 + C70445 + C70445 +
             C153818 * C161) *
                C98471) *
               C153501 * C153413 * C153795 -
           ((C70427 * C1796 + C71676 + C71676 + C153738 * C1806 +
             C70425 * C1797 + C71677 + C71677 + C153792 * C1807 +
             C70423 * C1798 + C71678 + C71678 + C153811 * C1808 +
             C70421 * C1799 + C71679 + C71679 + C153818 * C1809) *
                C153600 +
            (C70751 + C70750 + C70749 + C70748) * C98471) *
               C153501 * C153413 * C1509) *
              C153384)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
             C74253 + C74253 + C153348 * C161) *
                C153820 +
            (C78834 + C78835) * C153817 + C78850 * C153808 +
            C107728 * C153754) *
               C153501 * C153413 * C153795 -
           (C80646 * C153754 + C79865 * C153808 + C79866 * C153817 +
            (C74551 + C74550) * C153820) *
               C153501 * C153413 * C153796 +
           (C74566 * C153820 + C81637 * C153817 + C81638 * C153808 +
            (C80669 + C80670) * C153754) *
               C153501 * C153413 * C1509) *
              C153716 +
          (((C74558 + C74559) * C153820 + C79867 * C153817 + C79868 * C153808 +
            (C78848 + C78849) * C153754) *
               C153501 * C153413 * C153796 -
           (C107733 * C153754 + C78851 * C153808 + (C78843 + C78842) * C153817 +
            (C74249 * C146 + C74266 + C74266 + C153348 * C162 + C74247 * C145 +
             C74267 + C74267 + C74241 * C161) *
                C153820) *
               C153501 * C153413 * C153795 -
           ((C74249 * C6213 + C79870 + C79870 + C153348 * C6225 +
             C74247 * C6214 + C79871 + C79871 + C74241 * C6226) *
                C153754 +
            (C78465 + C78464) * C153808 + C93583 * C153817 + C74569 * C153820) *
               C153501 * C153413 * C1509) *
              C153384)) /
            (p * q * std::sqrt(p + q));
    d2ee[261] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
              C74253 + C74253 + C153348 * C161) *
                 C98471 +
             (C78834 + C78835) * C153600) *
                C153812 +
            ((C74550 + C74551) * C98471 + C79864 * C153600) * C153800 +
            C102460 * C153774) *
               C153725 -
           (C105463 * C153774 + (C79865 * C153600 + C79866 * C98471) * C153800 +
            ((C78837 + C78836) * C153600 + (C78835 + C78834) * C98471) *
                C153812) *
               C153477) *
              C153795 +
          (((C79864 * C98471 + C78764 * C153600) * C153812 +
            (C81637 * C98471 + C81638 * C153600) * C153800 +
            (C96600 * C98471 + (C76114 + C76115) * C153600) * C153774) *
               C153477 -
           (C104204 * C153774 +
            (C76763 * C153600 + (C74553 + C74552) * C98471) * C153800 +
            (C79866 * C153600 + (C74551 + C74550) * C98471) * C153812) *
               C153725) *
              C153796 +
          ((C102460 * C153812 + (C74567 * C98471 + C96600 * C153600) * C153800 +
            ((C74557 + C74556) * C98471 + (C76776 + C76777) * C153600) *
                C153774) *
               C153725 -
           (((C74249 * C28571 + C76096 + C76096 + C153348 * C28575 +
              C74247 * C28570 + C76097 + C76097 + C74241 * C28574) *
                 C153600 +
             (C76777 + C76776) * C98471) *
                C153774 +
            ((C76115 + C76114) * C153600 + C76762 * C98471) * C153800 +
            C105463 * C153812) *
               C153477) *
              C1509) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C70421 * C144 + C70430 + C70430 + C153818 * C160 + C70423 * C145 +
             C70431 + C70431 + C153811 * C161 + C70425 * C146 + C70432 +
             C70432 + C153792 * C162 + C70427 * C147 + C70433 + C70433 +
             C153738 * C163) *
                C98471 +
            (C98934 + C98935 + C98936 + C98937) * C153600) *
               C153501 * C153725 -
           ((C98938 + C98939 + C98940 + C98941) * C153600 +
            (C98937 + C98936 + C98935 + C98934) * C98471) *
               C153501 * C153477) *
              C153795 +
          (((C71699 + C71698 + C71697 + C71696) * C98471 +
            (C72266 + C72267 + C72268 + C72269) * C153600) *
               C153501 * C153477 -
           ((C71696 + C71697 + C71698 + C71699) * C153600 +
            (C70739 + C70738 + C70737 + C70736) * C98471) *
               C153501 * C153725) *
              C153796 +
          (((C70743 + C70742 + C70741 + C70740) * C98471 +
            (C72936 + C72937 + C72938 + C72939) * C153600) *
               C153501 * C153725 -
           ((C70427 * C3330 + C72254 + C72254 + C153738 * C3338 +
             C70425 * C3329 + C72255 + C72255 + C153792 * C3337 +
             C70423 * C3328 + C72256 + C72256 + C153811 * C3336 +
             C70421 * C3327 + C72257 + C72257 + C153818 * C3335) *
                C153600 +
            (C72939 + C72938 + C72937 + C72936) * C98471) *
               C153501 * C153477) *
              C1509) *
         C153378) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
             C74253 + C74253 + C153348 * C161) *
                C153820 +
            (C78834 + C78835) * C153817 + C78850 * C153808 +
            C107728 * C153754) *
               C153501 * C153725 -
           ((C82427 + C82426) * C153754 + C82413 * C153808 +
            (C78837 + C78836) * C153817 + (C78835 + C78834) * C153820) *
               C153501 * C153477) *
              C153795 +
          ((C79864 * C153820 + C78764 * C153817 + C80647 * C153808 +
            (C80667 + C80668) * C153754) *
               C153501 * C153477 -
           (C80646 * C153754 + C79865 * C153808 + C79866 * C153817 +
            (C74551 + C74550) * C153820) *
               C153501 * C153725) *
              C153796 +
          ((C74566 * C153820 + C81637 * C153817 + C81638 * C153808 +
            (C80669 + C80670) * C153754) *
               C153501 * C153725 -
           ((C74249 * C31240 + C80657 + C80657 + C153348 * C31244 +
             C74247 * C31239 + C80658 + C80658 + C74241 * C31243) *
                C153754 +
            (C80670 + C80669) * C153808 + C80656 * C153817 + C76763 * C153820) *
               C153501 * C153477) *
              C1509) *
         C153378) /
            (p * q * std::sqrt(p + q));
    d2ee[262] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C70421 * C144 + C70430 + C70430 + C153818 * C160 +
                 C70423 * C145 + C70431 + C70431 + C153811 * C161 +
                 C70425 * C146 + C70432 + C70432 + C153792 * C162 +
                 C70427 * C147 + C70433 + C70433 + C153738 * C163) *
                    C98471 +
                (C98934 + C98935 + C98936 + C98937) * C153600) *
                   C153501 * C153413 * C1131 -
               ((C71696 + C71697 + C71698 + C71699) * C153600 +
                (C70739 + C70738 + C70737 + C70736) * C98471) *
                   C153501 * C153413 * C153449) *
                  C1133 +
              (((C70744 + C70745 + C70746 + C70747) * C98471 +
                (C71700 + C71701 + C71702 + C71703) * C153600) *
                   C153501 * C153413 * C153449 -
               ((C98945 + C98944 + C98943 + C98942) * C153600 +
                (C70427 * C148 + C70442 + C70442 + C153738 * C164 +
                 C70425 * C147 + C70443 + C70443 + C153792 * C163 +
                 C70423 * C146 + C70444 + C70444 + C153811 * C162 +
                 C70421 * C145 + C70445 + C70445 + C153818 * C161) *
                    C98471) *
                   C153501 * C153413 * C1131) *
                  C1134 +
              (((C70421 * C146 + C70446 + C70446 + C153818 * C162 +
                 C70423 * C147 + C70447 + C70447 + C153811 * C163 +
                 C70425 * C148 + C70448 + C70448 + C153792 * C164 +
                 C70427 * C149 + C70449 + C70449 + C153738 * C165) *
                    C98471 +
                (C99358 + C99359 + C99360 + C99361) * C153600) *
                   C153501 * C153413 * C1131 -
               ((C70427 * C986 + C71390 + C71390 + C153738 * C998 +
                 C70425 * C985 + C71391 + C71391 + C153792 * C997 +
                 C70423 * C984 + C71392 + C71392 + C153811 * C996 +
                 C70421 * C983 + C71393 + C71393 + C153818 * C995) *
                    C153600 +
                (C71195 + C71194 + C71193 + C71192) * C98471) *
                   C153501 * C153413 * C153449) *
                  C1135) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((C70421 * C144 + C70430 + C70430 + C153818 * C160 +
                C70423 * C145 + C70431 + C70431 + C153811 * C161 +
                C70425 * C146 + C70432 + C70432 + C153792 * C162 +
                C70427 * C147 + C70433 + C70433 + C153738 * C163) *
                   C98471 +
               (C98934 + C98935 + C98936 + C98937) * C153600) *
                  C153501 * C153413 * C1218 -
              ((C71696 + C71697 + C71698 + C71699) * C153600 +
               (C70739 + C70738 + C70737 + C70736) * C98471) *
                  C153501 * C153413 * C1219 +
              ((C70743 + C70742 + C70741 + C70740) * C98471 +
               (C72936 + C72937 + C72938 + C72939) * C153600) *
                  C153501 * C153413 * C1220 -
              ((C70427 * C4146 + C72924 + C72924 + C153738 * C4154 +
                C70425 * C4145 + C72925 + C72925 + C153792 * C4153 +
                C70423 * C4144 + C72926 + C72926 + C153811 * C4152 +
                C70421 * C4143 + C72927 + C72927 + C153818 * C4151) *
                   C153600 +
               (C72051 + C72050 + C72049 + C72048) * C98471) *
                  C153501 * C153413 * C1221) *
             C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C70421 * C144 + C70430 + C70430 + C153818 * C160 + C70423 * C145 +
             C70431 + C70431 + C153811 * C161 + C70425 * C146 + C70432 +
             C70432 + C153792 * C162 + C70427 * C147 + C70433 + C70433 +
             C153738 * C163) *
                C98471 +
            (C98934 + C98935 + C98936 + C98937) * C153600) *
               C153501 * C493 -
           ((C98938 + C98939 + C98940 + C98941) * C153600 +
            (C98937 + C98936 + C98935 + C98934) * C98471) *
               C153501 * C494 +
           ((C98941 + C98940 + C98939 + C98938) * C98471 +
            (C70421 * C2152 + C73465 + C73465 + C153818 * C2162 +
             C70423 * C2151 + C73464 + C73464 + C153811 * C2161 +
             C70425 * C2150 + C73463 + C73463 + C153792 * C2160 +
             C70427 * C2149 + C73462 + C73462 + C153738 * C2159) *
                C153600) *
               C153501 * C495) *
              C1131 +
          (((C71699 + C71698 + C71697 + C71696) * C98471 +
            (C72266 + C72267 + C72268 + C72269) * C153600) *
               C153501 * C494 -
           ((C71696 + C71697 + C71698 + C71699) * C153600 +
            (C70739 + C70738 + C70737 + C70736) * C98471) *
               C153501 * C493 -
           ((C70427 * C8437 + C73458 + C73458 + C153738 * C8439 +
             C70425 * C6216 + C73459 + C73459 + C153792 * C6228 +
             C70423 * C6217 + C73460 + C73460 + C153811 * C6229 +
             C70421 * C6218 + C73461 + C73461 + C153818 * C6230) *
                C153600 +
            (C72269 + C72268 + C72267 + C72266) * C98471) *
               C153501 * C495) *
              C153449) *
         C153378) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
              C74253 + C74253 + C153348 * C161) *
                 C98471 +
             (C78834 + C78835) * C153600) *
                C153812 +
            ((C74550 + C74551) * C98471 + C79864 * C153600) * C153800 +
            C102460 * C153774) *
               C153413 * C1131 -
           ((C76762 * C153600 + C75875 * C98471) * C153774 +
            (C76763 * C153600 + (C74553 + C74552) * C98471) * C153800 +
            (C79866 * C153600 + (C74551 + C74550) * C98471) * C153812) *
               C153413 * C153449) *
              C1133 +
          ((((C74558 + C74559) * C98471 + C79867 * C153600) * C153812 +
            ((C74560 + C74561) * C98471 + C94854 * C153600) * C153800 +
            ((C74562 + C74563) * C98471 + (C75548 + C75549) * C153600) *
                C153774) *
               C153413 * C153449 -
           (C102461 * C153774 +
            (C79869 * C153600 + (C74559 + C74558) * C98471) * C153800 +
            ((C78843 + C78842) * C153600 +
             (C74249 * C146 + C74266 + C74266 + C153348 * C162 + C74247 * C145 +
              C74267 + C74267 + C74241 * C161) *
                 C98471) *
                C153812) *
               C153413 * C1131) *
              C1134 +
          ((((C74247 * C146 + C74268 + C74268 + C74241 * C162 + C74249 * C147 +
              C74269 + C74269 + C153348 * C163) *
                 C98471 +
             (C79474 + C79475) * C153600) *
                C153812 +
            ((C75020 + C75021) * C98471 + (C79160 + C79161) * C153600) *
                C153800 +
            ((C75022 + C75023) * C98471 + (C94176 + C94177) * C153600) *
                C153774) *
               C153413 * C1131 -
           (((C74249 * C4146 + C75220 + C75220 + C153348 * C4154 +
              C74247 * C4145 + C75221 + C75221 + C74241 * C4153) *
                 C153600 +
             (C75025 + C75024) * C98471) *
                C153774 +
            ((C94177 + C94176) * C153600 + (C75023 + C75022) * C98471) *
                C153800 +
            ((C79161 + C79160) * C153600 + (C75021 + C75020) * C98471) *
                C153812) *
               C153413 * C153449) *
              C1135)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
             C74253 + C74253 + C153348 * C161) *
                C98471 +
            (C78834 + C78835) * C153600) *
               C153812 +
           ((C74550 + C74551) * C98471 + C79864 * C153600) * C153800 +
           C102460 * C153774) *
              C153413 * C1218 -
          (C104204 * C153774 +
           (C76763 * C153600 + (C74553 + C74552) * C98471) * C153800 +
           (C79866 * C153600 + (C74551 + C74550) * C98471) * C153812) *
              C153413 * C1219 +
          (C102460 * C153812 + (C74567 * C98471 + C96600 * C153600) * C153800 +
           ((C74557 + C74556) * C98471 + (C76776 + C76777) * C153600) *
               C153774) *
              C153413 * C1220 -
          (((C74249 * C29033 + C76768 + C76768 + C153348 * C29037 +
             C74247 * C29032 + C76769 + C76769 + C74241 * C29036) *
                C153600 +
            (C75889 + C75888) * C98471) *
               C153774 +
           ((C76777 + C76776) * C153600 + C75874 * C98471) * C153800 +
           C104204 * C153812) *
              C153413 * C1221) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
              C74253 + C74253 + C153348 * C161) *
                 C98471 +
             (C78834 + C78835) * C153600) *
                C153812 +
            ((C74550 + C74551) * C98471 + C79864 * C153600) * C153800 +
            C102460 * C153774) *
               C493 -
           ((C80656 * C153600 + C76763 * C98471) * C153774 +
            (C79865 * C153600 + C79866 * C98471) * C153800 +
            ((C78837 + C78836) * C153600 + (C78835 + C78834) * C98471) *
                C153812) *
               C494 +
           ((C78850 * C98471 + (C78841 + C78840) * C153600) * C153812 +
            (C78764 * C98471 + C80647 * C153600) * C153800 +
            (C81638 * C98471 + (C80669 + C80670) * C153600) * C153774) *
               C495) *
              C1131 +
          (((C79864 * C98471 + C78764 * C153600) * C153812 +
            (C81637 * C98471 + C81638 * C153600) * C153800 +
            (C96600 * C98471 + (C76114 + C76115) * C153600) * C153774) *
               C494 -
           (C104204 * C153774 +
            (C76763 * C153600 + (C74553 + C74552) * C98471) * C153800 +
            (C79866 * C153600 + (C74551 + C74550) * C98471) * C153812) *
               C493 -
           (((C74249 * C32070 + C77296 + C77296 + C153348 * C32072 +
              C74247 * C30195 + C77297 + C77297 + C74241 * C30199) *
                 C153600 +
             (C76115 + C76114) * C98471) *
                C153774 +
            ((C80670 + C80669) * C153600 + C80656 * C98471) * C153800 +
            (C80646 * C153600 + C79865 * C98471) * C153812) *
               C495) *
              C153449) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
             C74253 + C74253 + C153348 * C161) *
                C153820 +
            (C78834 + C78835) * C153817 + C78850 * C153808 +
            C107728 * C153754) *
               C153501 * C153413 * C1131 -
           (C80646 * C153754 + C79865 * C153808 + C79866 * C153817 +
            (C74551 + C74550) * C153820) *
               C153501 * C153413 * C153449) *
              C1133 +
          (((C74558 + C74559) * C153820 + C79867 * C153817 + C79868 * C153808 +
            (C78848 + C78849) * C153754) *
               C153501 * C153413 * C153449 -
           (C107733 * C153754 + C78851 * C153808 + (C78843 + C78842) * C153817 +
            (C74249 * C146 + C74266 + C74266 + C153348 * C162 + C74247 * C145 +
             C74267 + C74267 + C74241 * C161) *
                C153820) *
               C153501 * C153413 * C1131) *
              C1134 +
          (((C74247 * C146 + C74268 + C74268 + C74241 * C162 + C74249 * C147 +
             C74269 + C74269 + C153348 * C163) *
                C153820 +
            (C79474 + C79475) * C153817 + (C79476 + C79477) * C153808 +
            (C108140 + C108141) * C153754) *
               C153501 * C153413 * C1131 -
           ((C74249 * C8437 + C79462 + C79462 + C153348 * C8439 +
             C74247 * C6216 + C79463 + C79463 + C74241 * C6228) *
                C153754 +
            (C79163 + C79162) * C153808 + (C79161 + C79160) * C153817 +
            (C75021 + C75020) * C153820) *
               C153501 * C153413 * C153449) *
              C1135)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
            C74253 + C74253 + C153348 * C161) *
               C153820 +
           (C78834 + C78835) * C153817 + C78850 * C153808 + C107728 * C153754) *
              C153501 * C153413 * C1218 -
          (C80646 * C153754 + C79865 * C153808 + C79866 * C153817 +
           (C74551 + C74550) * C153820) *
              C153501 * C153413 * C1219 +
          (C74566 * C153820 + C81637 * C153817 + C81638 * C153808 +
           (C80669 + C80670) * C153754) *
              C153501 * C153413 * C1220 -
          ((C74249 * C32070 + C77296 + C77296 + C153348 * C32072 +
            C74247 * C30195 + C77297 + C77297 + C74241 * C30199) *
               C153754 +
           (C76115 + C76114) * C153808 + C76762 * C153817 + C75875 * C153820) *
              C153501 * C153413 * C1221) *
         C153378) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
             C74253 + C74253 + C153348 * C161) *
                C153820 +
            (C78834 + C78835) * C153817 + C78850 * C153808 +
            C107728 * C153754) *
               C153501 * C493 -
           ((C82427 + C82426) * C153754 + C82413 * C153808 +
            (C78837 + C78836) * C153817 + (C78835 + C78834) * C153820) *
               C153501 * C494 +
           (C78850 * C153820 + C107728 * C153817 + (C82426 + C82427) * C153808 +
            (C74247 * C10379 + C82421 + C82421 + C74241 * C10385 +
             C74249 * C10378 + C82420 + C82420 + C153348 * C10384) *
                C153754) *
               C153501 * C495) *
              C1131 +
          ((C79864 * C153820 + C78764 * C153817 + C80647 * C153808 +
            (C80667 + C80668) * C153754) *
               C153501 * C494 -
           (C80646 * C153754 + C79865 * C153808 + C79866 * C153817 +
            (C74551 + C74550) * C153820) *
               C153501 * C493 -
           ((C74249 * C56416 + C82418 + C82418 + C153348 * C56418 +
             C74247 * C34012 + C82419 + C82419 + C74241 * C34016) *
                C153754 +
            (C80668 + C80667) * C153808 + C80646 * C153817 + C79865 * C153820) *
               C153501 * C495) *
              C153449) *
         C153378) /
            (p * q * std::sqrt(p + q));
    d2ee[263] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
               C74253 + C74253 + C153348 * C161) *
                  C98471 +
              (C78834 + C78835) * C153600) *
                 C153812 +
             ((C74550 + C74551) * C98471 + C79864 * C153600) * C153800 +
             C102460 * C153774) *
                C153725 -
            ((C80656 * C153600 + C76763 * C98471) * C153774 +
             (C79865 * C153600 + C79866 * C98471) * C153800 +
             ((C78837 + C78836) * C153600 + (C78835 + C78834) * C98471) *
                 C153812) *
                C153477) *
               C1131 +
           (((C79864 * C98471 + C78764 * C153600) * C153812 +
             (C81637 * C98471 + C81638 * C153600) * C153800 +
             (C96600 * C98471 + (C76114 + C76115) * C153600) * C153774) *
                C153477 -
            (C104204 * C153774 +
             (C76763 * C153600 + (C74553 + C74552) * C98471) * C153800 +
             (C79866 * C153600 + (C74551 + C74550) * C98471) * C153812) *
                C153725) *
               C153449) *
              C153716 +
          (((((C78842 + C78843) * C98471 + (C78844 + C78845) * C153600) *
                 C153812 +
             (C79867 * C98471 + C79868 * C153600) * C153800 +
             (C94854 * C98471 + (C78464 + C78465) * C153600) * C153774) *
                C153477 -
            (C102461 * C153774 +
             (C79869 * C153600 + (C74559 + C74558) * C98471) * C153800 +
             ((C78843 + C78842) * C153600 +
              (C74249 * C146 + C74266 + C74266 + C153348 * C162 +
               C74247 * C145 + C74267 + C74267 + C74241 * C161) *
                  C98471) *
                 C153812) *
                C153725) *
               C1131 +
           ((((C74558 + C74559) * C98471 + C79867 * C153600) * C153812 +
             ((C74560 + C74561) * C98471 + C94854 * C153600) * C153800 +
             ((C74562 + C74563) * C98471 + (C75548 + C75549) * C153600) *
                 C153774) *
                C153725 -
            (((C74249 * C4833 + C74792 + C74792 + C153348 * C4839 +
               C74247 * C4834 + C74793 + C74793 + C74241 * C4840) *
                  C153600 +
              (C75549 + C75548) * C98471) *
                 C153774 +
             ((C78465 + C78464) * C153600 + C93583 * C98471) * C153800 +
             (C78797 * C153600 + C79869 * C98471) * C153812) *
                C153477) *
               C153449) *
              C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C70421 * C144 + C70430 + C70430 + C153818 * C160 + C70423 * C145 +
              C70431 + C70431 + C153811 * C161 + C70425 * C146 + C70432 +
              C70432 + C153792 * C162 + C70427 * C147 + C70433 + C70433 +
              C153738 * C163) *
                 C98471 +
             (C98934 + C98935 + C98936 + C98937) * C153600) *
                C153501 * C153725 -
            ((C98938 + C98939 + C98940 + C98941) * C153600 +
             (C98937 + C98936 + C98935 + C98934) * C98471) *
                C153501 * C153477) *
               C1131 +
           (((C71699 + C71698 + C71697 + C71696) * C98471 +
             (C72266 + C72267 + C72268 + C72269) * C153600) *
                C153501 * C153477 -
            ((C71696 + C71697 + C71698 + C71699) * C153600 +
             (C70739 + C70738 + C70737 + C70736) * C98471) *
                C153501 * C153725) *
               C153449) *
              C153716 +
          ((((C98942 + C98943 + C98944 + C98945) * C98471 +
             (C98946 + C98947 + C98948 + C98949) * C153600) *
                C153501 * C153477 -
            ((C98945 + C98944 + C98943 + C98942) * C153600 +
             (C70427 * C148 + C70442 + C70442 + C153738 * C164 + C70425 * C147 +
              C70443 + C70443 + C153792 * C163 + C70423 * C146 + C70444 +
              C70444 + C153811 * C162 + C70421 * C145 + C70445 + C70445 +
              C153818 * C161) *
                 C98471) *
                C153501 * C153725) *
               C1131 +
           (((C70744 + C70745 + C70746 + C70747) * C98471 +
             (C71700 + C71701 + C71702 + C71703) * C153600) *
                C153501 * C153725 -
            ((C70427 * C1365 + C70970 + C70970 + C153738 * C1375 +
              C70425 * C1366 + C70971 + C70971 + C153792 * C1376 +
              C70423 * C1367 + C70972 + C70972 + C153811 * C1377 +
              C70421 * C1368 + C70973 + C70973 + C153818 * C1378) *
                 C153600 +
             (C71703 + C71702 + C71701 + C71700) * C98471) *
                C153501 * C153477) *
               C153449) *
              C153384)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
              C74253 + C74253 + C153348 * C161) *
                 C153820 +
             (C78834 + C78835) * C153817 + C78850 * C153808 +
             C107728 * C153754) *
                C153501 * C153725 -
            ((C82427 + C82426) * C153754 + C82413 * C153808 +
             (C78837 + C78836) * C153817 + (C78835 + C78834) * C153820) *
                C153501 * C153477) *
               C1131 +
           ((C79864 * C153820 + C78764 * C153817 + C80647 * C153808 +
             (C80667 + C80668) * C153754) *
                C153501 * C153477 -
            (C80646 * C153754 + C79865 * C153808 + C79866 * C153817 +
             (C74551 + C74550) * C153820) *
                C153501 * C153725) *
               C153449) *
              C153716 +
          ((((C78842 + C78843) * C153820 + (C78844 + C78845) * C153817 +
             (C78846 + C78847) * C153808 + (C107740 + C107741) * C153754) *
                C153501 * C153477 -
            (C107733 * C153754 + C78851 * C153808 +
             (C78843 + C78842) * C153817 +
             (C74249 * C146 + C74266 + C74266 + C153348 * C162 + C74247 * C145 +
              C74267 + C74267 + C74241 * C161) *
                 C153820) *
                C153501 * C153725) *
               C1131 +
           (((C74558 + C74559) * C153820 + C79867 * C153817 + C79868 * C153808 +
             (C78848 + C78849) * C153754) *
                C153501 * C153725 -
            ((C74249 * C9040 + C78798 + C78798 + C153348 * C9046 +
              C74247 * C9041 + C78799 + C78799 + C74241 * C9047) *
                 C153754 +
             (C78849 + C78848) * C153808 + C78797 * C153817 +
             C79869 * C153820) *
                C153501 * C153477) *
               C153449) *
              C153384)) /
            (p * q * std::sqrt(p + q));
    d2ee[264] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C70421 * C144 + C70430 + C70430 + C153818 * C160 + C70423 * C145 +
            C70431 + C70431 + C153811 * C161 + C70425 * C146 + C70432 + C70432 +
            C153792 * C162 + C70427 * C147 + C70433 + C70433 + C153738 * C163) *
               C98471 +
           (C98934 + C98935 + C98936 + C98937) * C153600) *
              C153501 * C153413 * C1218 -
          ((C71696 + C71697 + C71698 + C71699) * C153600 +
           (C70739 + C70738 + C70737 + C70736) * C98471) *
              C153501 * C153413 * C1219 +
          ((C70743 + C70742 + C70741 + C70740) * C98471 +
           (C72936 + C72937 + C72938 + C72939) * C153600) *
              C153501 * C153413 * C1220 -
          ((C70427 * C4146 + C72924 + C72924 + C153738 * C4154 +
            C70425 * C4145 + C72925 + C72925 + C153792 * C4153 +
            C70423 * C4144 + C72926 + C72926 + C153811 * C4152 +
            C70421 * C4143 + C72927 + C72927 + C153818 * C4151) *
               C153600 +
           (C72051 + C72050 + C72049 + C72048) * C98471) *
              C153501 * C153413 * C1221) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C70421 * C144 + C70430 + C70430 + C153818 * C160 + C70423 * C145 +
             C70431 + C70431 + C153811 * C161 + C70425 * C146 + C70432 +
             C70432 + C153792 * C162 + C70427 * C147 + C70433 + C70433 +
             C153738 * C163) *
                C98471 +
            (C98934 + C98935 + C98936 + C98937) * C153600) *
               C153501 * C153413 * C1131 -
           ((C71696 + C71697 + C71698 + C71699) * C153600 +
            (C70739 + C70738 + C70737 + C70736) * C98471) *
               C153501 * C153413 * C153449) *
              C1133 +
          (((C70744 + C70745 + C70746 + C70747) * C98471 +
            (C71700 + C71701 + C71702 + C71703) * C153600) *
               C153501 * C153413 * C153449 -
           ((C98945 + C98944 + C98943 + C98942) * C153600 +
            (C70427 * C148 + C70442 + C70442 + C153738 * C164 + C70425 * C147 +
             C70443 + C70443 + C153792 * C163 + C70423 * C146 + C70444 +
             C70444 + C153811 * C162 + C70421 * C145 + C70445 + C70445 +
             C153818 * C161) *
                C98471) *
               C153501 * C153413 * C1131) *
              C1134 +
          (((C70421 * C146 + C70446 + C70446 + C153818 * C162 + C70423 * C147 +
             C70447 + C70447 + C153811 * C163 + C70425 * C148 + C70448 +
             C70448 + C153792 * C164 + C70427 * C149 + C70449 + C70449 +
             C153738 * C165) *
                C98471 +
            (C99358 + C99359 + C99360 + C99361) * C153600) *
               C153501 * C153413 * C1131 -
           ((C70427 * C986 + C71390 + C71390 + C153738 * C998 + C70425 * C985 +
             C71391 + C71391 + C153792 * C997 + C70423 * C984 + C71392 +
             C71392 + C153811 * C996 + C70421 * C983 + C71393 + C71393 +
             C153818 * C995) *
                C153600 +
            (C71195 + C71194 + C71193 + C71192) * C98471) *
               C153501 * C153413 * C153449) *
              C1135)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
              C74253 + C74253 + C153348 * C161) *
                 C98471 +
             (C78834 + C78835) * C153600) *
                C153812 +
            ((C74550 + C74551) * C98471 + C79864 * C153600) * C153800 +
            C102460 * C153774) *
               C153413 * C1131 -
           ((C76762 * C153600 + C75875 * C98471) * C153774 +
            (C76763 * C153600 + (C74553 + C74552) * C98471) * C153800 +
            (C79866 * C153600 + (C74551 + C74550) * C98471) * C153812) *
               C153413 * C153449) *
              C1133 +
          ((((C74558 + C74559) * C98471 + C79867 * C153600) * C153812 +
            ((C74560 + C74561) * C98471 + C94854 * C153600) * C153800 +
            ((C74562 + C74563) * C98471 + (C75548 + C75549) * C153600) *
                C153774) *
               C153413 * C153449 -
           (C102461 * C153774 +
            (C79869 * C153600 + (C74559 + C74558) * C98471) * C153800 +
            ((C78843 + C78842) * C153600 +
             (C74249 * C146 + C74266 + C74266 + C153348 * C162 + C74247 * C145 +
              C74267 + C74267 + C74241 * C161) *
                 C98471) *
                C153812) *
               C153413 * C1131) *
              C1134 +
          ((((C74247 * C146 + C74268 + C74268 + C74241 * C162 + C74249 * C147 +
              C74269 + C74269 + C153348 * C163) *
                 C98471 +
             (C79474 + C79475) * C153600) *
                C153812 +
            ((C75020 + C75021) * C98471 + (C79160 + C79161) * C153600) *
                C153800 +
            ((C75022 + C75023) * C98471 + (C94176 + C94177) * C153600) *
                C153774) *
               C153413 * C1131 -
           (((C74249 * C4146 + C75220 + C75220 + C153348 * C4154 +
              C74247 * C4145 + C75221 + C75221 + C74241 * C4153) *
                 C153600 +
             (C75025 + C75024) * C98471) *
                C153774 +
            ((C94177 + C94176) * C153600 + (C75023 + C75022) * C98471) *
                C153800 +
            ((C79161 + C79160) * C153600 + (C75021 + C75020) * C98471) *
                C153812) *
               C153413 * C153449) *
              C1135)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
             C74253 + C74253 + C153348 * C161) *
                C98471 +
            (C78834 + C78835) * C153600) *
               C153812 +
           ((C74550 + C74551) * C98471 + C79864 * C153600) * C153800 +
           C102460 * C153774) *
              C153413 * C1218 -
          (C104204 * C153774 +
           (C76763 * C153600 + (C74553 + C74552) * C98471) * C153800 +
           (C79866 * C153600 + (C74551 + C74550) * C98471) * C153812) *
              C153413 * C1219 +
          (C102460 * C153812 + (C74567 * C98471 + C96600 * C153600) * C153800 +
           ((C74557 + C74556) * C98471 + (C76776 + C76777) * C153600) *
               C153774) *
              C153413 * C1220 -
          (((C74249 * C29033 + C76768 + C76768 + C153348 * C29037 +
             C74247 * C29032 + C76769 + C76769 + C74241 * C29036) *
                C153600 +
            (C75889 + C75888) * C98471) *
               C153774 +
           ((C76777 + C76776) * C153600 + C75874 * C98471) * C153800 +
           C104204 * C153812) *
              C153413 * C1221) *
         C153378) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
             C74253 + C74253 + C153348 * C161) *
                C153820 +
            (C78834 + C78835) * C153817 + C78850 * C153808 +
            C107728 * C153754) *
               C153501 * C153413 * C1131 -
           (C80646 * C153754 + C79865 * C153808 + C79866 * C153817 +
            (C74551 + C74550) * C153820) *
               C153501 * C153413 * C153449) *
              C1133 +
          (((C74558 + C74559) * C153820 + C79867 * C153817 + C79868 * C153808 +
            (C78848 + C78849) * C153754) *
               C153501 * C153413 * C153449 -
           (C107733 * C153754 + C78851 * C153808 + (C78843 + C78842) * C153817 +
            (C74249 * C146 + C74266 + C74266 + C153348 * C162 + C74247 * C145 +
             C74267 + C74267 + C74241 * C161) *
                C153820) *
               C153501 * C153413 * C1131) *
              C1134 +
          (((C74247 * C146 + C74268 + C74268 + C74241 * C162 + C74249 * C147 +
             C74269 + C74269 + C153348 * C163) *
                C153820 +
            (C79474 + C79475) * C153817 + (C79476 + C79477) * C153808 +
            (C108140 + C108141) * C153754) *
               C153501 * C153413 * C1131 -
           ((C74249 * C8437 + C79462 + C79462 + C153348 * C8439 +
             C74247 * C6216 + C79463 + C79463 + C74241 * C6228) *
                C153754 +
            (C79163 + C79162) * C153808 + (C79161 + C79160) * C153817 +
            (C75021 + C75020) * C153820) *
               C153501 * C153413 * C153449) *
              C1135)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
            C74253 + C74253 + C153348 * C161) *
               C153820 +
           (C78834 + C78835) * C153817 + C78850 * C153808 + C107728 * C153754) *
              C153501 * C153413 * C1218 -
          (C80646 * C153754 + C79865 * C153808 + C79866 * C153817 +
           (C74551 + C74550) * C153820) *
              C153501 * C153413 * C1219 +
          (C74566 * C153820 + C81637 * C153817 + C81638 * C153808 +
           (C80669 + C80670) * C153754) *
              C153501 * C153413 * C1220 -
          ((C74249 * C32070 + C77296 + C77296 + C153348 * C32072 +
            C74247 * C30195 + C77297 + C77297 + C74241 * C30199) *
               C153754 +
           (C76115 + C76114) * C153808 + C76762 * C153817 + C75875 * C153820) *
              C153501 * C153413 * C1221) *
         C153378) /
            (p * q * std::sqrt(p + q));
    d2ee[265] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
               C74253 + C74253 + C153348 * C161) *
                  C98471 +
              (C78834 + C78835) * C153600) *
                 C153812 +
             ((C74550 + C74551) * C98471 + C79864 * C153600) * C153800 +
             C102460 * C153774) *
                C1938 -
            (C105463 * C153774 +
             (C79865 * C153600 + C79866 * C98471) * C153800 +
             ((C78837 + C78836) * C153600 + (C78835 + C78834) * C98471) *
                 C153812) *
                C153477) *
               C153724 +
           (((C79864 * C98471 + C78764 * C153600) * C153812 +
             (C81637 * C98471 + C81638 * C153600) * C153800 +
             (C96600 * C98471 + (C76114 + C76115) * C153600) * C153774) *
                C153477 -
            (C104204 * C153774 +
             (C76763 * C153600 + (C74553 + C74552) * C98471) * C153800 +
             (C79866 * C153600 + (C74551 + C74550) * C98471) * C153812) *
                C1938) *
               C153449) *
              C153716 +
          (((((C78842 + C78843) * C98471 + (C78844 + C78845) * C153600) *
                 C153812 +
             (C79867 * C98471 + C79868 * C153600) * C153800 +
             (C94854 * C98471 + (C78464 + C78465) * C153600) * C153774) *
                C153477 -
            (C102461 * C153774 +
             (C79869 * C153600 + (C74559 + C74558) * C98471) * C153800 +
             ((C78843 + C78842) * C153600 +
              (C74249 * C146 + C74266 + C74266 + C153348 * C162 +
               C74247 * C145 + C74267 + C74267 + C74241 * C161) *
                  C98471) *
                 C153812) *
                C1938) *
               C153724 +
           ((((C74558 + C74559) * C98471 + C79867 * C153600) * C153812 +
             ((C74560 + C74561) * C98471 + C94854 * C153600) * C153800 +
             ((C74562 + C74563) * C98471 + (C75548 + C75549) * C153600) *
                 C153774) *
                C1938 -
            (((C74249 * C4833 + C74792 + C74792 + C153348 * C4839 +
               C74247 * C4834 + C74793 + C74793 + C74241 * C4840) *
                  C153600 +
              (C75549 + C75548) * C98471) *
                 C153774 +
             ((C78465 + C78464) * C153600 + C93583 * C98471) * C153800 +
             (C78797 * C153600 + C79869 * C98471) * C153812) *
                C153477) *
               C153449) *
              C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C70421 * C144 + C70430 + C70430 + C153818 * C160 + C70423 * C145 +
              C70431 + C70431 + C153811 * C161 + C70425 * C146 + C70432 +
              C70432 + C153792 * C162 + C70427 * C147 + C70433 + C70433 +
              C153738 * C163) *
                 C98471 +
             (C98934 + C98935 + C98936 + C98937) * C153600) *
                C153501 * C1938 -
            ((C98938 + C98939 + C98940 + C98941) * C153600 +
             (C98937 + C98936 + C98935 + C98934) * C98471) *
                C153501 * C153477) *
               C153724 +
           (((C71699 + C71698 + C71697 + C71696) * C98471 +
             (C72266 + C72267 + C72268 + C72269) * C153600) *
                C153501 * C153477 -
            ((C71696 + C71697 + C71698 + C71699) * C153600 +
             (C70739 + C70738 + C70737 + C70736) * C98471) *
                C153501 * C1938) *
               C153449) *
              C153716 +
          ((((C98942 + C98943 + C98944 + C98945) * C98471 +
             (C98946 + C98947 + C98948 + C98949) * C153600) *
                C153501 * C153477 -
            ((C98945 + C98944 + C98943 + C98942) * C153600 +
             (C70427 * C148 + C70442 + C70442 + C153738 * C164 + C70425 * C147 +
              C70443 + C70443 + C153792 * C163 + C70423 * C146 + C70444 +
              C70444 + C153811 * C162 + C70421 * C145 + C70445 + C70445 +
              C153818 * C161) *
                 C98471) *
                C153501 * C1938) *
               C153724 +
           (((C70744 + C70745 + C70746 + C70747) * C98471 +
             (C71700 + C71701 + C71702 + C71703) * C153600) *
                C153501 * C1938 -
            ((C70427 * C1365 + C70970 + C70970 + C153738 * C1375 +
              C70425 * C1366 + C70971 + C70971 + C153792 * C1376 +
              C70423 * C1367 + C70972 + C70972 + C153811 * C1377 +
              C70421 * C1368 + C70973 + C70973 + C153818 * C1378) *
                 C153600 +
             (C71703 + C71702 + C71701 + C71700) * C98471) *
                C153501 * C153477) *
               C153449) *
              C153384)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
              C74253 + C74253 + C153348 * C161) *
                 C153820 +
             (C78834 + C78835) * C153817 + C78850 * C153808 +
             C107728 * C153754) *
                C153501 * C1938 -
            (C110082 * C153754 + C82413 * C153808 +
             (C78837 + C78836) * C153817 + (C78835 + C78834) * C153820) *
                C153501 * C153477) *
               C153724 +
           ((C79864 * C153820 + C78764 * C153817 + C80647 * C153808 +
             (C80667 + C80668) * C153754) *
                C153501 * C153477 -
            (C80646 * C153754 + C79865 * C153808 + C79866 * C153817 +
             (C74551 + C74550) * C153820) *
                C153501 * C1938) *
               C153449) *
              C153716 +
          ((((C78842 + C78843) * C153820 + (C78844 + C78845) * C153817 +
             (C78846 + C78847) * C153808 + (C107740 + C107741) * C153754) *
                C153501 * C153477 -
            (C107733 * C153754 + C78851 * C153808 +
             (C78843 + C78842) * C153817 +
             (C74249 * C146 + C74266 + C74266 + C153348 * C162 + C74247 * C145 +
              C74267 + C74267 + C74241 * C161) *
                 C153820) *
                C153501 * C1938) *
               C153724 +
           (((C74558 + C74559) * C153820 + C79867 * C153817 + C79868 * C153808 +
             (C78848 + C78849) * C153754) *
                C153501 * C1938 -
            ((C74249 * C9040 + C78798 + C78798 + C153348 * C9046 +
              C74247 * C9041 + C78799 + C78799 + C74241 * C9047) *
                 C153754 +
             (C78849 + C78848) * C153808 + C78797 * C153817 +
             C79869 * C153820) *
                C153501 * C153477) *
               C153449) *
              C153384)) /
            (p * q * std::sqrt(p + q));
    d2ee[266] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
              C74253 + C74253 + C153348 * C161) *
                 C98471 +
             (C78834 + C78835) * C153600) *
                C153812 +
            ((C74550 + C74551) * C98471 + C79864 * C153600) * C153800 +
            C102460 * C153774) *
               C153797 -
           (C105463 * C153774 + (C79865 * C153600 + C79866 * C98471) * C153800 +
            ((C78837 + C78836) * C153600 + (C78835 + C78834) * C98471) *
                C153812) *
               C153798 +
           ((C78850 * C98471 + (C78841 + C78840) * C153600) * C153812 +
            (C78764 * C98471 + C80647 * C153600) * C153800 +
            (C81638 * C98471 + (C80669 + C80670) * C153600) * C153774) *
               C2454) *
              C153724 +
          (((C79864 * C98471 + C78764 * C153600) * C153812 +
            (C81637 * C98471 + C81638 * C153600) * C153800 +
            (C96600 * C98471 + (C76114 + C76115) * C153600) * C153774) *
               C153798 -
           (C104204 * C153774 +
            (C76763 * C153600 + (C74553 + C74552) * C98471) * C153800 +
            (C79866 * C153600 + (C74551 + C74550) * C98471) * C153812) *
               C153797 -
           (((C74249 * C32070 + C77296 + C77296 + C153348 * C32072 +
              C74247 * C30195 + C77297 + C77297 + C74241 * C30199) *
                 C153600 +
             (C76115 + C76114) * C98471) *
                C153774 +
            ((C80670 + C80669) * C153600 + C80656 * C98471) * C153800 +
            (C80646 * C153600 + C79865 * C98471) * C153812) *
               C2454) *
              C153449) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C70421 * C144 + C70430 + C70430 + C153818 * C160 + C70423 * C145 +
             C70431 + C70431 + C153811 * C161 + C70425 * C146 + C70432 +
             C70432 + C153792 * C162 + C70427 * C147 + C70433 + C70433 +
             C153738 * C163) *
                C98471 +
            (C98934 + C98935 + C98936 + C98937) * C153600) *
               C153501 * C153797 -
           ((C98938 + C98939 + C98940 + C98941) * C153600 +
            (C98937 + C98936 + C98935 + C98934) * C98471) *
               C153501 * C153798 +
           ((C98941 + C98940 + C98939 + C98938) * C98471 +
            (C101322 + C101323 + C101324 + C101325) * C153600) *
               C153501 * C2454) *
              C153724 +
          (((C71699 + C71698 + C71697 + C71696) * C98471 +
            (C72266 + C72267 + C72268 + C72269) * C153600) *
               C153501 * C153798 -
           ((C71696 + C71697 + C71698 + C71699) * C153600 +
            (C70739 + C70738 + C70737 + C70736) * C98471) *
               C153501 * C153797 -
           ((C70427 * C8437 + C73458 + C73458 + C153738 * C8439 +
             C70425 * C6216 + C73459 + C73459 + C153792 * C6228 +
             C70423 * C6217 + C73460 + C73460 + C153811 * C6229 +
             C70421 * C6218 + C73461 + C73461 + C153818 * C6230) *
                C153600 +
            (C72269 + C72268 + C72267 + C72266) * C98471) *
               C153501 * C2454) *
              C153449) *
         C153378) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
             C74253 + C74253 + C153348 * C161) *
                C153820 +
            (C78834 + C78835) * C153817 + C78850 * C153808 +
            C107728 * C153754) *
               C153501 * C153797 -
           (C110082 * C153754 + C82413 * C153808 + (C78837 + C78836) * C153817 +
            (C78835 + C78834) * C153820) *
               C153501 * C153798 +
           (C78850 * C153820 + C107728 * C153817 + (C82426 + C82427) * C153808 +
            (C110093 + C110094) * C153754) *
               C153501 * C2454) *
              C153724 +
          ((C79864 * C153820 + C78764 * C153817 + C80647 * C153808 +
            (C80667 + C80668) * C153754) *
               C153501 * C153798 -
           (C80646 * C153754 + C79865 * C153808 + C79866 * C153817 +
            (C74551 + C74550) * C153820) *
               C153501 * C153797 -
           ((C74249 * C56416 + C82418 + C82418 + C153348 * C56418 +
             C74247 * C34012 + C82419 + C82419 + C74241 * C34016) *
                C153754 +
            (C80668 + C80667) * C153808 + C80646 * C153817 + C79865 * C153820) *
               C153501 * C2454) *
              C153449) *
         C153378) /
            (p * q * std::sqrt(p + q));
    d2ee[267] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C70421 * C144 + C70430 + C70430 + C153818 * C160 +
                 C70423 * C145 + C70431 + C70431 + C153811 * C161 +
                 C70425 * C146 + C70432 + C70432 + C153792 * C162 +
                 C70427 * C147 + C70433 + C70433 + C153738 * C163) *
                    C98471 +
                (C98934 + C98935 + C98936 + C98937) * C153600) *
                   C153501 * C1938 -
               ((C98938 + C98939 + C98940 + C98941) * C153600 +
                (C98937 + C98936 + C98935 + C98934) * C98471) *
                   C153501 * C153477) *
                  C153397 * C1133 +
              (((C98942 + C98943 + C98944 + C98945) * C98471 +
                (C98946 + C98947 + C98948 + C98949) * C153600) *
                   C153501 * C153477 -
               ((C98945 + C98944 + C98943 + C98942) * C153600 +
                (C70427 * C148 + C70442 + C70442 + C153738 * C164 +
                 C70425 * C147 + C70443 + C70443 + C153792 * C163 +
                 C70423 * C146 + C70444 + C70444 + C153811 * C162 +
                 C70421 * C145 + C70445 + C70445 + C153818 * C161) *
                    C98471) *
                   C153501 * C1938) *
                  C153397 * C1134 +
              (((C70421 * C146 + C70446 + C70446 + C153818 * C162 +
                 C70423 * C147 + C70447 + C70447 + C153811 * C163 +
                 C70425 * C148 + C70448 + C70448 + C153792 * C164 +
                 C70427 * C149 + C70449 + C70449 + C153738 * C165) *
                    C98471 +
                (C99358 + C99359 + C99360 + C99361) * C153600) *
                   C153501 * C1938 -
               ((C70427 * C507 + C99346 + C99346 + C153738 * C531 +
                 C70425 * C505 + C99347 + C99347 + C153792 * C529 +
                 C70423 * C504 + C99348 + C99348 + C153811 * C528 +
                 C70421 * C503 + C99349 + C99349 + C153818 * C527) *
                    C153600 +
                (C99361 + C99360 + C99359 + C99358) * C98471) *
                   C153501 * C153477) *
                  C153397 * C1135) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C70421 * C144 + C70430 + C70430 + C153818 * C160 +
                 C70423 * C145 + C70431 + C70431 + C153811 * C161 +
                 C70425 * C146 + C70432 + C70432 + C153792 * C162 +
                 C70427 * C147 + C70433 + C70433 + C153738 * C163) *
                    C98471 +
                (C98934 + C98935 + C98936 + C98937) * C153600) *
                   C153501 * C1938 -
               ((C98938 + C98939 + C98940 + C98941) * C153600 +
                (C98937 + C98936 + C98935 + C98934) * C98471) *
                   C153501 * C153477) *
                  C310 +
              (((C71699 + C71698 + C71697 + C71696) * C98471 +
                (C72266 + C72267 + C72268 + C72269) * C153600) *
                   C153501 * C153477 -
               ((C71696 + C71697 + C71698 + C71699) * C153600 +
                (C70739 + C70738 + C70737 + C70736) * C98471) *
                   C153501 * C1938) *
                  C311 +
              (((C70743 + C70742 + C70741 + C70740) * C98471 +
                (C72936 + C72937 + C72938 + C72939) * C153600) *
                   C153501 * C1938 -
               ((C70427 * C3330 + C72254 + C72254 + C153738 * C3338 +
                 C70425 * C3329 + C72255 + C72255 + C153792 * C3337 +
                 C70423 * C3328 + C72256 + C72256 + C153811 * C3336 +
                 C70421 * C3327 + C72257 + C72257 + C153818 * C3335) *
                    C153600 +
                (C72939 + C72938 + C72937 + C72936) * C98471) *
                   C153501 * C153477) *
                  C312) *
             C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C70421 * C144 + C70430 + C70430 + C153818 * C160 + C70423 * C145 +
            C70431 + C70431 + C153811 * C161 + C70425 * C146 + C70432 + C70432 +
            C153792 * C162 + C70427 * C147 + C70433 + C70433 + C153738 * C163) *
               C98471 +
           (C98934 + C98935 + C98936 + C98937) * C153600) *
              C153501 * C2144 -
          ((C98938 + C98939 + C98940 + C98941) * C153600 +
           (C98937 + C98936 + C98935 + C98934) * C98471) *
              C153501 * C2145 +
          ((C98941 + C98940 + C98939 + C98938) * C98471 +
           (C101322 + C101323 + C101324 + C101325) * C153600) *
              C153501 * C2146 -
          ((C70427 * C7563 + C101310 + C101310 + C153738 * C7571 +
            C70425 * C7562 + C101311 + C101311 + C153792 * C7570 +
            C70423 * C7561 + C101312 + C101312 + C153811 * C7569 +
            C70421 * C7560 + C101313 + C101313 + C153818 * C7568) *
               C153600 +
           (C101325 + C101324 + C101323 + C101322) * C98471) *
              C153501 * C2147) *
         C153397 * C153378) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
              C74253 + C74253 + C153348 * C161) *
                 C98471 +
             (C78834 + C78835) * C153600) *
                C153812 +
            ((C74550 + C74551) * C98471 + C79864 * C153600) * C153800 +
            C102460 * C153774) *
               C1938 -
           (C105463 * C153774 + (C79865 * C153600 + C79866 * C98471) * C153800 +
            ((C78837 + C78836) * C153600 + (C78835 + C78834) * C98471) *
                C153812) *
               C153477) *
              C153397 * C1133 +
          ((((C78842 + C78843) * C98471 + (C78844 + C78845) * C153600) *
                C153812 +
            (C79867 * C98471 + C79868 * C153600) * C153800 +
            (C94854 * C98471 + (C78464 + C78465) * C153600) * C153774) *
               C153477 -
           (C102461 * C153774 +
            (C79869 * C153600 + (C74559 + C74558) * C98471) * C153800 +
            ((C78843 + C78842) * C153600 +
             (C74249 * C146 + C74266 + C74266 + C153348 * C162 + C74247 * C145 +
              C74267 + C74267 + C74241 * C161) *
                 C98471) *
                C153812) *
               C1938) *
              C153397 * C1134 +
          ((((C74247 * C146 + C74268 + C74268 + C74241 * C162 + C74249 * C147 +
              C74269 + C74269 + C153348 * C163) *
                 C98471 +
             (C79474 + C79475) * C153600) *
                C153812 +
            ((C75020 + C75021) * C98471 + (C79160 + C79161) * C153600) *
                C153800 +
            ((C75022 + C75023) * C98471 + (C94176 + C94177) * C153600) *
                C153774) *
               C1938 -
           (((C74249 * C3330 + C79150 + C79150 + C153348 * C3338 +
              C74247 * C3329 + C79151 + C79151 + C74241 * C3337) *
                 C153600 +
             (C94177 + C94176) * C98471) *
                C153774 +
            ((C79163 + C79162) * C153600 + (C79161 + C79160) * C98471) *
                C153800 +
            ((C79477 + C79476) * C153600 + (C79475 + C79474) * C98471) *
                C153812) *
               C153477) *
              C153397 * C1135)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
              C74253 + C74253 + C153348 * C161) *
                 C98471 +
             (C78834 + C78835) * C153600) *
                C153812 +
            ((C74550 + C74551) * C98471 + C79864 * C153600) * C153800 +
            C102460 * C153774) *
               C1938 -
           (C105463 * C153774 + (C79865 * C153600 + C79866 * C98471) * C153800 +
            ((C78837 + C78836) * C153600 + (C78835 + C78834) * C98471) *
                C153812) *
               C153477) *
              C310 +
          (((C79864 * C98471 + C78764 * C153600) * C153812 +
            (C81637 * C98471 + C81638 * C153600) * C153800 +
            (C96600 * C98471 + (C76114 + C76115) * C153600) * C153774) *
               C153477 -
           (C104204 * C153774 +
            (C76763 * C153600 + (C74553 + C74552) * C98471) * C153800 +
            (C79866 * C153600 + (C74551 + C74550) * C98471) * C153812) *
               C1938) *
              C311 +
          ((C102460 * C153812 + (C74567 * C98471 + C96600 * C153600) * C153800 +
            ((C74557 + C74556) * C98471 + (C76776 + C76777) * C153600) *
                C153774) *
               C1938 -
           (((C74249 * C28571 + C76096 + C76096 + C153348 * C28575 +
              C74247 * C28570 + C76097 + C76097 + C74241 * C28574) *
                 C153600 +
             (C76777 + C76776) * C98471) *
                C153774 +
            ((C76115 + C76114) * C153600 + C76762 * C98471) * C153800 +
            C105463 * C153812) *
               C153477) *
              C312) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
             C74253 + C74253 + C153348 * C161) *
                C98471 +
            (C78834 + C78835) * C153600) *
               C153812 +
           ((C74550 + C74551) * C98471 + C79864 * C153600) * C153800 +
           C102460 * C153774) *
              C2144 -
          (C105463 * C153774 + (C79865 * C153600 + C79866 * C98471) * C153800 +
           ((C78837 + C78836) * C153600 + (C78835 + C78834) * C98471) *
               C153812) *
              C2145 +
          ((C78850 * C98471 + (C78841 + C78840) * C153600) * C153812 +
           (C78764 * C98471 + C80647 * C153600) * C153800 +
           (C81638 * C98471 + (C80669 + C80670) * C153600) * C153774) *
              C2146 -
          (((C74249 * C31240 + C80657 + C80657 + C153348 * C31244 +
             C74247 * C31239 + C80658 + C80658 + C74241 * C31243) *
                C153600 +
            (C80670 + C80669) * C98471) *
               C153774 +
           ((C80668 + C80667) * C153600 + C80646 * C98471) * C153800 +
           ((C82427 + C82426) * C153600 + C82413 * C98471) * C153812) *
              C2147) *
         C153397 * C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
             C74253 + C74253 + C153348 * C161) *
                C153820 +
            (C78834 + C78835) * C153817 + C78850 * C153808 +
            C107728 * C153754) *
               C153501 * C1938 -
           ((C82427 + C82426) * C153754 + C82413 * C153808 +
            (C78837 + C78836) * C153817 + (C78835 + C78834) * C153820) *
               C153501 * C153477) *
              C153397 * C1133 +
          (((C78842 + C78843) * C153820 + (C78844 + C78845) * C153817 +
            (C78846 + C78847) * C153808 + (C107740 + C107741) * C153754) *
               C153501 * C153477 -
           (C107733 * C153754 + C78851 * C153808 + (C78843 + C78842) * C153817 +
            (C74249 * C146 + C74266 + C74266 + C153348 * C162 + C74247 * C145 +
             C74267 + C74267 + C74241 * C161) *
                C153820) *
               C153501 * C1938) *
              C153397 * C1134 +
          (((C74247 * C146 + C74268 + C74268 + C74241 * C162 + C74249 * C147 +
             C74269 + C74269 + C153348 * C163) *
                C153820 +
            (C79474 + C79475) * C153817 + (C79476 + C79477) * C153808 +
            (C108140 + C108141) * C153754) *
               C153501 * C1938 -
           ((C74249 * C7563 + C108134 + C108134 + C153348 * C7571 +
             C74247 * C7562 + C108135 + C108135 + C74241 * C7570) *
                C153754 +
            (C108141 + C108140) * C153808 + (C79477 + C79476) * C153817 +
            (C79475 + C79474) * C153820) *
               C153501 * C153477) *
              C153397 * C1135)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
             C74253 + C74253 + C153348 * C161) *
                C153820 +
            (C78834 + C78835) * C153817 + C78850 * C153808 +
            C107728 * C153754) *
               C153501 * C1938 -
           ((C82427 + C82426) * C153754 + C82413 * C153808 +
            (C78837 + C78836) * C153817 + (C78835 + C78834) * C153820) *
               C153501 * C153477) *
              C310 +
          ((C79864 * C153820 + C78764 * C153817 + C80647 * C153808 +
            (C80667 + C80668) * C153754) *
               C153501 * C153477 -
           (C80646 * C153754 + C79865 * C153808 + C79866 * C153817 +
            (C74551 + C74550) * C153820) *
               C153501 * C1938) *
              C311 +
          ((C74566 * C153820 + C81637 * C153817 + C81638 * C153808 +
            (C80669 + C80670) * C153754) *
               C153501 * C1938 -
           ((C74249 * C31240 + C80657 + C80657 + C153348 * C31244 +
             C74247 * C31239 + C80658 + C80658 + C74241 * C31243) *
                C153754 +
            (C80670 + C80669) * C153808 + C80656 * C153817 + C76763 * C153820) *
               C153501 * C153477) *
              C312) *
         C153378) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
            C74253 + C74253 + C153348 * C161) *
               C153820 +
           (C78834 + C78835) * C153817 + C78850 * C153808 + C107728 * C153754) *
              C153501 * C2144 -
          (C110082 * C153754 + C82413 * C153808 + (C78837 + C78836) * C153817 +
           (C78835 + C78834) * C153820) *
              C153501 * C2145 +
          (C78850 * C153820 + C107728 * C153817 + (C82426 + C82427) * C153808 +
           (C110093 + C110094) * C153754) *
              C153501 * C2146 -
          ((C74249 * C55975 + C110087 + C110087 + C153348 * C55979 +
            C74247 * C55974 + C110088 + C110088 + C74241 * C55978) *
               C153754 +
           (C110094 + C110093) * C153808 + C110082 * C153817 +
           C82413 * C153820) *
              C153501 * C2147) *
         C153397 * C153378) /
            (p * q * std::sqrt(p + q));
    d2ee[268] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
              C74253 + C74253 + C153348 * C161) *
                 C98471 +
             (C78834 + C78835) * C153600) *
                C153812 +
            ((C74550 + C74551) * C98471 + C79864 * C153600) * C153800 +
            C102460 * C153774) *
               C153797 -
           (C105463 * C153774 + (C79865 * C153600 + C79866 * C98471) * C153800 +
            ((C78837 + C78836) * C153600 + (C78835 + C78834) * C98471) *
                C153812) *
               C153798 +
           ((C78850 * C98471 + (C78841 + C78840) * C153600) * C153812 +
            (C78764 * C98471 + C80647 * C153600) * C153800 +
            (C81638 * C98471 + (C80669 + C80670) * C153600) * C153774) *
               C2454) *
              C153397 * C153716 +
          ((((C78842 + C78843) * C98471 + (C78844 + C78845) * C153600) *
                C153812 +
            (C79867 * C98471 + C79868 * C153600) * C153800 +
            (C94854 * C98471 + (C78464 + C78465) * C153600) * C153774) *
               C153798 -
           (C102461 * C153774 +
            (C79869 * C153600 + (C74559 + C74558) * C98471) * C153800 +
            ((C78843 + C78842) * C153600 +
             (C74249 * C146 + C74266 + C74266 + C153348 * C162 + C74247 * C145 +
              C74267 + C74267 + C74241 * C161) *
                 C98471) *
                C153812) *
               C153797 -
           (((C74249 * C6213 + C79870 + C79870 + C153348 * C6225 +
              C74247 * C6214 + C79871 + C79871 + C74241 * C6226) *
                 C153600 +
             (C78465 + C78464) * C98471) *
                C153774 +
            ((C78849 + C78848) * C153600 + C78797 * C98471) * C153800 +
            ((C78847 + C78846) * C153600 + C78851 * C98471) * C153812) *
               C2454) *
              C153397 * C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C70421 * C144 + C70430 + C70430 + C153818 * C160 + C70423 * C145 +
             C70431 + C70431 + C153811 * C161 + C70425 * C146 + C70432 +
             C70432 + C153792 * C162 + C70427 * C147 + C70433 + C70433 +
             C153738 * C163) *
                C98471 +
            (C98934 + C98935 + C98936 + C98937) * C153600) *
               C153501 * C153797 -
           ((C98938 + C98939 + C98940 + C98941) * C153600 +
            (C98937 + C98936 + C98935 + C98934) * C98471) *
               C153501 * C153798 +
           ((C98941 + C98940 + C98939 + C98938) * C98471 +
            (C101322 + C101323 + C101324 + C101325) * C153600) *
               C153501 * C2454) *
              C153397 * C153716 +
          (((C98942 + C98943 + C98944 + C98945) * C98471 +
            (C98946 + C98947 + C98948 + C98949) * C153600) *
               C153501 * C153798 -
           ((C98945 + C98944 + C98943 + C98942) * C153600 +
            (C70427 * C148 + C70442 + C70442 + C153738 * C164 + C70425 * C147 +
             C70443 + C70443 + C153792 * C163 + C70423 * C146 + C70444 +
             C70444 + C153811 * C162 + C70421 * C145 + C70445 + C70445 +
             C153818 * C161) *
                C98471) *
               C153501 * C153797 -
           ((C70427 * C2148 + C98898 + C98898 + C153738 * C2158 +
             C70425 * C2149 + C98899 + C98899 + C153792 * C2159 +
             C70423 * C2150 + C98900 + C98900 + C153811 * C2160 +
             C70421 * C2151 + C98901 + C98901 + C153818 * C2161) *
                C153600 +
            (C98949 + C98948 + C98947 + C98946) * C98471) *
               C153501 * C2454) *
              C153397 * C153384)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
             C74253 + C74253 + C153348 * C161) *
                C153820 +
            (C78834 + C78835) * C153817 + C78850 * C153808 +
            C107728 * C153754) *
               C153501 * C153797 -
           (C110082 * C153754 + C82413 * C153808 + (C78837 + C78836) * C153817 +
            (C78835 + C78834) * C153820) *
               C153501 * C153798 +
           (C78850 * C153820 + C107728 * C153817 + (C82426 + C82427) * C153808 +
            (C110093 + C110094) * C153754) *
               C153501 * C2454) *
              C153397 * C153716 +
          (((C78842 + C78843) * C153820 + (C78844 + C78845) * C153817 +
            (C78846 + C78847) * C153808 + (C107740 + C107741) * C153754) *
               C153501 * C153798 -
           (C107733 * C153754 + C78851 * C153808 + (C78843 + C78842) * C153817 +
            (C74249 * C146 + C74266 + C74266 + C153348 * C162 + C74247 * C145 +
             C74267 + C74267 + C74241 * C161) *
                C153820) *
               C153501 * C153797 -
           ((C74249 * C10377 + C107734 + C107734 + C153348 * C10383 +
             C74247 * C10378 + C107735 + C107735 + C74241 * C10384) *
                C153754 +
            (C107741 + C107740) * C153808 + C107733 * C153817 +
            C78851 * C153820) *
               C153501 * C2454) *
              C153397 * C153384)) /
            (p * q * std::sqrt(p + q));
    d2ee[269] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C70421 * C144 + C70430 + C70430 + C153818 * C160 + C70423 * C145 +
             C70431 + C70431 + C153811 * C161 + C70425 * C146 + C70432 +
             C70432 + C153792 * C162 + C70427 * C147 + C70433 + C70433 +
             C153738 * C163) *
                C98471 +
            (C98934 + C98935 + C98936 + C98937) * C153600) *
               C153501 * C1938 -
           ((C98938 + C98939 + C98940 + C98941) * C153600 +
            (C98937 + C98936 + C98935 + C98934) * C98471) *
               C153501 * C153477) *
              C310 +
          (((C71699 + C71698 + C71697 + C71696) * C98471 +
            (C72266 + C72267 + C72268 + C72269) * C153600) *
               C153501 * C153477 -
           ((C71696 + C71697 + C71698 + C71699) * C153600 +
            (C70739 + C70738 + C70737 + C70736) * C98471) *
               C153501 * C1938) *
              C311 +
          (((C70743 + C70742 + C70741 + C70740) * C98471 +
            (C72936 + C72937 + C72938 + C72939) * C153600) *
               C153501 * C1938 -
           ((C70427 * C3330 + C72254 + C72254 + C153738 * C3338 +
             C70425 * C3329 + C72255 + C72255 + C153792 * C3337 +
             C70423 * C3328 + C72256 + C72256 + C153811 * C3336 +
             C70421 * C3327 + C72257 + C72257 + C153818 * C3335) *
                C153600 +
            (C72939 + C72938 + C72937 + C72936) * C98471) *
               C153501 * C153477) *
              C312) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C70421 * C144 + C70430 + C70430 + C153818 * C160 + C70423 * C145 +
             C70431 + C70431 + C153811 * C161 + C70425 * C146 + C70432 +
             C70432 + C153792 * C162 + C70427 * C147 + C70433 + C70433 +
             C153738 * C163) *
                C98471 +
            (C98934 + C98935 + C98936 + C98937) * C153600) *
               C153501 * C1938 -
           ((C98938 + C98939 + C98940 + C98941) * C153600 +
            (C98937 + C98936 + C98935 + C98934) * C98471) *
               C153501 * C153477) *
              C153397 * C1133 +
          (((C98942 + C98943 + C98944 + C98945) * C98471 +
            (C98946 + C98947 + C98948 + C98949) * C153600) *
               C153501 * C153477 -
           ((C98945 + C98944 + C98943 + C98942) * C153600 +
            (C70427 * C148 + C70442 + C70442 + C153738 * C164 + C70425 * C147 +
             C70443 + C70443 + C153792 * C163 + C70423 * C146 + C70444 +
             C70444 + C153811 * C162 + C70421 * C145 + C70445 + C70445 +
             C153818 * C161) *
                C98471) *
               C153501 * C1938) *
              C153397 * C1134 +
          (((C70421 * C146 + C70446 + C70446 + C153818 * C162 + C70423 * C147 +
             C70447 + C70447 + C153811 * C163 + C70425 * C148 + C70448 +
             C70448 + C153792 * C164 + C70427 * C149 + C70449 + C70449 +
             C153738 * C165) *
                C98471 +
            (C99358 + C99359 + C99360 + C99361) * C153600) *
               C153501 * C1938 -
           ((C70427 * C507 + C99346 + C99346 + C153738 * C531 + C70425 * C505 +
             C99347 + C99347 + C153792 * C529 + C70423 * C504 + C99348 +
             C99348 + C153811 * C528 + C70421 * C503 + C99349 + C99349 +
             C153818 * C527) *
                C153600 +
            (C99361 + C99360 + C99359 + C99358) * C98471) *
               C153501 * C153477) *
              C153397 * C1135)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
              C74253 + C74253 + C153348 * C161) *
                 C98471 +
             (C78834 + C78835) * C153600) *
                C153812 +
            ((C74550 + C74551) * C98471 + C79864 * C153600) * C153800 +
            C102460 * C153774) *
               C1938 -
           (C105463 * C153774 + (C79865 * C153600 + C79866 * C98471) * C153800 +
            ((C78837 + C78836) * C153600 + (C78835 + C78834) * C98471) *
                C153812) *
               C153477) *
              C153397 * C1133 +
          ((((C78842 + C78843) * C98471 + (C78844 + C78845) * C153600) *
                C153812 +
            (C79867 * C98471 + C79868 * C153600) * C153800 +
            (C94854 * C98471 + (C78464 + C78465) * C153600) * C153774) *
               C153477 -
           (C102461 * C153774 +
            (C79869 * C153600 + (C74559 + C74558) * C98471) * C153800 +
            ((C78843 + C78842) * C153600 +
             (C74249 * C146 + C74266 + C74266 + C153348 * C162 + C74247 * C145 +
              C74267 + C74267 + C74241 * C161) *
                 C98471) *
                C153812) *
               C1938) *
              C153397 * C1134 +
          ((((C74247 * C146 + C74268 + C74268 + C74241 * C162 + C74249 * C147 +
              C74269 + C74269 + C153348 * C163) *
                 C98471 +
             (C79474 + C79475) * C153600) *
                C153812 +
            ((C75020 + C75021) * C98471 + (C79160 + C79161) * C153600) *
                C153800 +
            ((C75022 + C75023) * C98471 + (C94176 + C94177) * C153600) *
                C153774) *
               C1938 -
           (((C74249 * C3330 + C79150 + C79150 + C153348 * C3338 +
              C74247 * C3329 + C79151 + C79151 + C74241 * C3337) *
                 C153600 +
             (C94177 + C94176) * C98471) *
                C153774 +
            ((C79163 + C79162) * C153600 + (C79161 + C79160) * C98471) *
                C153800 +
            ((C79477 + C79476) * C153600 + (C79475 + C79474) * C98471) *
                C153812) *
               C153477) *
              C153397 * C1135)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
              C74253 + C74253 + C153348 * C161) *
                 C98471 +
             (C78834 + C78835) * C153600) *
                C153812 +
            ((C74550 + C74551) * C98471 + C79864 * C153600) * C153800 +
            C102460 * C153774) *
               C1938 -
           (C105463 * C153774 + (C79865 * C153600 + C79866 * C98471) * C153800 +
            ((C78837 + C78836) * C153600 + (C78835 + C78834) * C98471) *
                C153812) *
               C153477) *
              C310 +
          (((C79864 * C98471 + C78764 * C153600) * C153812 +
            (C81637 * C98471 + C81638 * C153600) * C153800 +
            (C96600 * C98471 + (C76114 + C76115) * C153600) * C153774) *
               C153477 -
           (C104204 * C153774 +
            (C76763 * C153600 + (C74553 + C74552) * C98471) * C153800 +
            (C79866 * C153600 + (C74551 + C74550) * C98471) * C153812) *
               C1938) *
              C311 +
          ((C102460 * C153812 + (C74567 * C98471 + C96600 * C153600) * C153800 +
            ((C74557 + C74556) * C98471 + (C76776 + C76777) * C153600) *
                C153774) *
               C1938 -
           (((C74249 * C28571 + C76096 + C76096 + C153348 * C28575 +
              C74247 * C28570 + C76097 + C76097 + C74241 * C28574) *
                 C153600 +
             (C76777 + C76776) * C98471) *
                C153774 +
            ((C76115 + C76114) * C153600 + C76762 * C98471) * C153800 +
            C105463 * C153812) *
               C153477) *
              C312) *
         C153378) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
             C74253 + C74253 + C153348 * C161) *
                C153820 +
            (C78834 + C78835) * C153817 + C78850 * C153808 +
            C107728 * C153754) *
               C153501 * C1938 -
           ((C82427 + C82426) * C153754 + C82413 * C153808 +
            (C78837 + C78836) * C153817 + (C78835 + C78834) * C153820) *
               C153501 * C153477) *
              C153397 * C1133 +
          (((C78842 + C78843) * C153820 + (C78844 + C78845) * C153817 +
            (C78846 + C78847) * C153808 + (C107740 + C107741) * C153754) *
               C153501 * C153477 -
           (C107733 * C153754 + C78851 * C153808 + (C78843 + C78842) * C153817 +
            (C74249 * C146 + C74266 + C74266 + C153348 * C162 + C74247 * C145 +
             C74267 + C74267 + C74241 * C161) *
                C153820) *
               C153501 * C1938) *
              C153397 * C1134 +
          (((C74247 * C146 + C74268 + C74268 + C74241 * C162 + C74249 * C147 +
             C74269 + C74269 + C153348 * C163) *
                C153820 +
            (C79474 + C79475) * C153817 + (C79476 + C79477) * C153808 +
            (C108140 + C108141) * C153754) *
               C153501 * C1938 -
           ((C74249 * C7563 + C108134 + C108134 + C153348 * C7571 +
             C74247 * C7562 + C108135 + C108135 + C74241 * C7570) *
                C153754 +
            (C108141 + C108140) * C153808 + (C79477 + C79476) * C153817 +
            (C79475 + C79474) * C153820) *
               C153501 * C153477) *
              C153397 * C1135)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
             C74253 + C74253 + C153348 * C161) *
                C153820 +
            (C78834 + C78835) * C153817 + C78850 * C153808 +
            C107728 * C153754) *
               C153501 * C1938 -
           ((C82427 + C82426) * C153754 + C82413 * C153808 +
            (C78837 + C78836) * C153817 + (C78835 + C78834) * C153820) *
               C153501 * C153477) *
              C310 +
          ((C79864 * C153820 + C78764 * C153817 + C80647 * C153808 +
            (C80667 + C80668) * C153754) *
               C153501 * C153477 -
           (C80646 * C153754 + C79865 * C153808 + C79866 * C153817 +
            (C74551 + C74550) * C153820) *
               C153501 * C1938) *
              C311 +
          ((C74566 * C153820 + C81637 * C153817 + C81638 * C153808 +
            (C80669 + C80670) * C153754) *
               C153501 * C1938 -
           ((C74249 * C31240 + C80657 + C80657 + C153348 * C31244 +
             C74247 * C31239 + C80658 + C80658 + C74241 * C31243) *
                C153754 +
            (C80670 + C80669) * C153808 + C80656 * C153817 + C76763 * C153820) *
               C153501 * C153477) *
              C312) *
         C153378) /
            (p * q * std::sqrt(p + q));
    d2ee[270] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                  ((((C152033 * C144 + C83552 + C83552 + C153343 * C160 +
                      C152026 * C145 + C83553 + C83553 + C153351 * C161 +
                      C83549 * C146 + C83554 + C83554 + C83541 * C162) *
                         C153596 +
                     (C88548 + C88549 + C88550) * C153603 + C116560 * C116108) *
                        C153501 * C153413 * C153724 -
                    (C90355 * C116108 + C89570 * C153603 +
                     (C83892 + C83891 + C83890) * C153596) *
                        C153501 * C153413 * C153449) *
                       C153793 +
                   (((C83899 + C83900 + C83901) * C153596 + C89571 * C153603 +
                     (C88560 + C88561 + C88562) * C116108) *
                        C153501 * C153413 * C153449 -
                    (C116564 * C116108 + (C88556 + C88555 + C88554) * C153603 +
                     (C83549 * C147 + C83567 + C83567 + C83541 * C163 +
                      C152026 * C146 + C83568 + C83568 + C153351 * C162 +
                      C152033 * C145 + C83569 + C83569 + C153343 * C161) *
                         C153596) *
                        C153501 * C153413 * C153724) *
                       C153794 +
                   (((C152033 * C146 + C83570 + C83570 + C153343 * C162 +
                      C152026 * C147 + C83571 + C83571 + C153351 * C163 +
                      C83549 * C148 + C83572 + C83572 + C83541 * C164) *
                         C153596 +
                     (C89176 + C89177 + C89178) * C153603 +
                     (C152033 * C503 + C89169 + C89169 + C153343 * C527 +
                      C152026 * C504 + C89168 + C89168 + C153351 * C528 +
                      C83549 * C505 + C89167 + C89167 + C83541 * C529) *
                         C116108) *
                        C153501 * C153413 * C153724 -
                    ((C83549 * C1365 + C89164 + C89164 + C83541 * C1375 +
                      C152026 * C1366 + C89165 + C89165 + C153351 * C1376 +
                      C152033 * C1367 + C89166 + C89166 + C153343 * C1377) *
                         C116108 +
                     (C88867 + C88866 + C88865) * C153603 +
                     (C84415 + C84414 + C84413) * C153596) *
                        C153501 * C153413 * C153449) *
                       C678)) /
                 (p * q * std::sqrt(p + q));
    d2ee[271] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C152033 * C144 + C83552 + C83552 + C153343 * C160 +
              C152026 * C145 + C83553 + C83553 + C153351 * C161 +
              C83549 * C146 + C83554 + C83554 + C83541 * C162) *
                 C153596 +
             (C88548 + C88549 + C88550) * C153603 + C116560 * C116108) *
                C153501 * C153725 -
            ((C92128 + C92127 + C92126) * C116108 +
             (C88551 + C88552 + C88553) * C153603 +
             (C88550 + C88549 + C88548) * C153596) *
                C153501 * C153477) *
               C153724 +
           ((C89569 * C153596 + C90356 * C153603 +
             (C90363 + C90364 + C90365) * C116108) *
                C153501 * C153477 -
            (C90355 * C116108 + C89570 * C153603 +
             (C83892 + C83891 + C83890) * C153596) *
                C153501 * C153725) *
               C153449) *
              C313 +
          ((((C88554 + C88555 + C88556) * C153596 +
             (C88557 + C88558 + C88559) * C153603 +
             (C116568 + C116569 + C116570) * C116108) *
                C153501 * C153477 -
            (C116564 * C116108 + (C88556 + C88555 + C88554) * C153603 +
             (C83549 * C147 + C83567 + C83567 + C83541 * C163 + C152026 * C146 +
              C83568 + C83568 + C153351 * C162 + C152033 * C145 + C83569 +
              C83569 + C153343 * C161) *
                 C153596) *
                C153501 * C153725) *
               C153724 +
           (((C83899 + C83900 + C83901) * C153596 + C89571 * C153603 +
             (C88560 + C88561 + C88562) * C116108) *
                C153501 * C153725 -
            ((C83549 * C8437 + C88512 + C88512 + C83541 * C8439 +
              C152026 * C6216 + C88513 + C88513 + C153351 * C6228 +
              C152033 * C6217 + C88514 + C88514 + C153343 * C6229) *
                 C116108 +
             (C88562 + C88561 + C88560) * C153603 + C89572 * C153596) *
                C153501 * C153477) *
               C153449) *
              C153384)) /
        (p * q * std::sqrt(p + q));
    d2ee[272] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C152033 * C144 + C83552 + C83552 + C153343 * C160 +
             C152026 * C145 + C83553 + C83553 + C153351 * C161 + C83549 * C146 +
             C83554 + C83554 + C83541 * C162) *
                C153596 +
            (C88548 + C88549 + C88550) * C153603 +
            (C88553 + C88552 + C88551) * C116108) *
               C153501 * C153413 * C310 -
           (C90355 * C116108 + C89570 * C153603 +
            (C83892 + C83891 + C83890) * C153596) *
               C153501 * C153413 * C311 +
           (C83910 * C153596 + C91333 * C153603 +
            (C85635 + C85636 + C85637) * C116108) *
               C153501 * C153413 * C312) *
              C313 +
          (((C83899 + C83900 + C83901) * C153596 + C89571 * C153603 +
            (C88560 + C88561 + C88562) * C116108) *
               C153501 * C153413 * C311 -
           ((C88559 + C88558 + C88557) * C116108 +
            (C88556 + C88555 + C88554) * C153603 +
            (C83549 * C147 + C83567 + C83567 + C83541 * C163 + C152026 * C146 +
             C83568 + C83568 + C153351 * C162 + C152033 * C145 + C83569 +
             C83569 + C153343 * C161) *
                C153596) *
               C153501 * C153413 * C310 -
           ((C83549 * C3330 + C84159 + C84159 + C83541 * C3338 +
             C152026 * C3329 + C84160 + C84160 + C153351 * C3337 +
             C152033 * C3328 + C84161 + C84161 + C153343 * C3336) *
                C116108 +
            (C85001 + C85000 + C84999) * C153603 + C83911 * C153596) *
               C153501 * C153413 * C312) *
              C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C152033 * C144 + C83552 + C83552 + C153343 * C160 + C152026 * C145 +
            C83553 + C83553 + C153351 * C161 + C83549 * C146 + C83554 + C83554 +
            C83541 * C162) *
               C153596 +
           (C88548 + C88549 + C88550) * C153603 +
           (C88553 + C88552 + C88551) * C116108) *
              C153501 * C153413 * C153397 * C130 -
          ((C88559 + C88558 + C88557) * C116108 +
           (C88556 + C88555 + C88554) * C153603 +
           (C83549 * C147 + C83567 + C83567 + C83541 * C163 + C152026 * C146 +
            C83568 + C83568 + C153351 * C162 + C152033 * C145 + C83569 +
            C83569 + C153343 * C161) *
               C153596) *
              C153501 * C153413 * C153397 * C131 +
          ((C152033 * C146 + C83570 + C83570 + C153343 * C162 + C152026 * C147 +
            C83571 + C83571 + C153351 * C163 + C83549 * C148 + C83572 + C83572 +
            C83541 * C164) *
               C153596 +
           (C89176 + C89177 + C89178) * C153603 +
           (C152033 * C503 + C89169 + C89169 + C153343 * C527 + C152026 * C504 +
            C89168 + C89168 + C153351 * C528 + C83549 * C505 + C89167 + C89167 +
            C83541 * C529) *
               C116108) *
              C153501 * C153413 * C153397 * C132 -
          ((C83549 * C507 + C116110 + C116110 + C83541 * C531 + C152026 * C505 +
            C116111 + C116111 + C153351 * C529 + C152033 * C504 + C116112 +
            C116112 + C153343 * C528) *
               C116108 +
           (C83549 * C506 + C87899 + C87899 + C83541 * C530 + C152026 * C496 +
            C87900 + C87900 + C153351 * C520 + C152033 * C497 + C87901 +
            C87901 + C153343 * C521) *
               C153603 +
           (C83549 * C149 + C83585 + C83585 + C83541 * C165 + C152026 * C148 +
            C83586 + C83586 + C153351 * C164 + C152033 * C147 + C83587 +
            C83587 + C153343 * C163) *
               C153596) *
              C153501 * C153413 * C153397 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C152033 * C144 + C83552 + C83552 + C153343 * C160 +
             C152026 * C145 + C83553 + C83553 + C153351 * C161 + C83549 * C146 +
             C83554 + C83554 + C83541 * C162) *
                C153596 +
            (C88548 + C88549 + C88550) * C153603 + C116560 * C116108) *
               C153501 * C493 -
           ((C92128 + C92127 + C92126) * C116108 +
            (C88551 + C88552 + C88553) * C153603 +
            (C88550 + C88549 + C88548) * C153596) *
               C153501 * C494 +
           (C116560 * C153596 + (C92126 + C92127 + C92128) * C153603 +
            (C152033 * C7560 + C92119 + C92119 + C153343 * C7568 +
             C152026 * C7561 + C92118 + C92118 + C153351 * C7569 +
             C83549 * C7562 + C92117 + C92117 + C83541 * C7570) *
                C116108) *
               C153501 * C495) *
              C153397 * C313 +
          (((C88554 + C88555 + C88556) * C153596 +
            (C88557 + C88558 + C88559) * C153603 +
            (C116568 + C116569 + C116570) * C116108) *
               C153501 * C494 -
           (C116564 * C116108 + (C88556 + C88555 + C88554) * C153603 +
            (C83549 * C147 + C83567 + C83567 + C83541 * C163 + C152026 * C146 +
             C83568 + C83568 + C153351 * C162 + C152033 * C145 + C83569 +
             C83569 + C153343 * C161) *
                C153596) *
               C153501 * C493 -
           ((C83549 * C7563 + C116557 + C116557 + C83541 * C7571 +
             C152026 * C7562 + C116558 + C116558 + C153351 * C7570 +
             C152033 * C7561 + C116559 + C116559 + C153343 * C7569) *
                C116108 +
            (C116570 + C116569 + C116568) * C153603 + C116564 * C153596) *
               C153501 * C495) *
              C153397 * C153384)) /
            (p * q * std::sqrt(p + q));
    d2ee[273] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                  ((((C152033 * C144 + C83552 + C83552 + C153343 * C160 +
                      C152026 * C145 + C83553 + C83553 + C153351 * C161 +
                      C83549 * C146 + C83554 + C83554 + C83541 * C162) *
                         C153596 +
                     (C88548 + C88549 + C88550) * C153603 + C116560 * C116108) *
                        C153501 * C153725 -
                    ((C92128 + C92127 + C92126) * C116108 +
                     (C88551 + C88552 + C88553) * C153603 +
                     (C88550 + C88549 + C88548) * C153596) *
                        C153501 * C153477) *
                       C153397 * C153793 +
                   (((C88554 + C88555 + C88556) * C153596 +
                     (C88557 + C88558 + C88559) * C153603 +
                     (C116568 + C116569 + C116570) * C116108) *
                        C153501 * C153477 -
                    (C116564 * C116108 + (C88556 + C88555 + C88554) * C153603 +
                     (C83549 * C147 + C83567 + C83567 + C83541 * C163 +
                      C152026 * C146 + C83568 + C83568 + C153351 * C162 +
                      C152033 * C145 + C83569 + C83569 + C153343 * C161) *
                         C153596) *
                        C153501 * C153725) *
                       C153397 * C153794 +
                   (((C152033 * C146 + C83570 + C83570 + C153343 * C162 +
                      C152026 * C147 + C83571 + C83571 + C153351 * C163 +
                      C83549 * C148 + C83572 + C83572 + C83541 * C164) *
                         C153596 +
                     (C89176 + C89177 + C89178) * C153603 +
                     (C117022 + C117023 + C117024) * C116108) *
                        C153501 * C153725 -
                    ((C83549 * C2148 + C117013 + C117013 + C83541 * C2158 +
                      C152026 * C2149 + C117014 + C117014 + C153351 * C2159 +
                      C152033 * C2150 + C117015 + C117015 + C153343 * C2160) *
                         C116108 +
                     (C117024 + C117023 + C117022) * C153603 +
                     (C89178 + C89177 + C89176) * C153596) *
                        C153501 * C153477) *
                       C153397 * C678)) /
                 (p * q * std::sqrt(p + q));
    d2ee[274] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  (((C152033 * C144 + C83552 + C83552 + C153343 * C160 +
                     C152026 * C145 + C83553 + C83553 + C153351 * C161 +
                     C83549 * C146 + C83554 + C83554 + C83541 * C162) *
                        C153596 +
                    (C88548 + C88549 + C88550) * C153603 +
                    (C88553 + C88552 + C88551) * C116108) *
                       C153501 * C153413 * C153397 * C130 -
                   ((C88559 + C88558 + C88557) * C116108 +
                    (C88556 + C88555 + C88554) * C153603 +
                    (C83549 * C147 + C83567 + C83567 + C83541 * C163 +
                     C152026 * C146 + C83568 + C83568 + C153351 * C162 +
                     C152033 * C145 + C83569 + C83569 + C153343 * C161) *
                        C153596) *
                       C153501 * C153413 * C153397 * C131 +
                   ((C152033 * C146 + C83570 + C83570 + C153343 * C162 +
                     C152026 * C147 + C83571 + C83571 + C153351 * C163 +
                     C83549 * C148 + C83572 + C83572 + C83541 * C164) *
                        C153596 +
                    (C89176 + C89177 + C89178) * C153603 +
                    (C152033 * C503 + C89169 + C89169 + C153343 * C527 +
                     C152026 * C504 + C89168 + C89168 + C153351 * C528 +
                     C83549 * C505 + C89167 + C89167 + C83541 * C529) *
                        C116108) *
                       C153501 * C153413 * C153397 * C132 -
                   ((C83549 * C507 + C116110 + C116110 + C83541 * C531 +
                     C152026 * C505 + C116111 + C116111 + C153351 * C529 +
                     C152033 * C504 + C116112 + C116112 + C153343 * C528) *
                        C116108 +
                    (C83549 * C506 + C87899 + C87899 + C83541 * C530 +
                     C152026 * C496 + C87900 + C87900 + C153351 * C520 +
                     C152033 * C497 + C87901 + C87901 + C153343 * C521) *
                        C153603 +
                    (C83549 * C149 + C83585 + C83585 + C83541 * C165 +
                     C152026 * C148 + C83586 + C83586 + C153351 * C164 +
                     C152033 * C147 + C83587 + C83587 + C153343 * C163) *
                        C153596) *
                       C153501 * C153413 * C153397 * C133)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C152033 * C144 + C83552 + C83552 + C153343 * C160 +
                      C152026 * C145 + C83553 + C83553 + C153351 * C161 +
                      C83549 * C146 + C83554 + C83554 + C83541 * C162) *
                         C153596 +
                     (C88548 + C88549 + C88550) * C153603 +
                     (C88553 + C88552 + C88551) * C116108) *
                        C153501 * C153413 * C310 -
                    (C90355 * C116108 + C89570 * C153603 +
                     (C83892 + C83891 + C83890) * C153596) *
                        C153501 * C153413 * C311 +
                    (C83910 * C153596 + C91333 * C153603 +
                     (C85635 + C85636 + C85637) * C116108) *
                        C153501 * C153413 * C312) *
                       C313 +
                   (((C83899 + C83900 + C83901) * C153596 + C89571 * C153603 +
                     (C88560 + C88561 + C88562) * C116108) *
                        C153501 * C153413 * C311 -
                    ((C88559 + C88558 + C88557) * C116108 +
                     (C88556 + C88555 + C88554) * C153603 +
                     (C83549 * C147 + C83567 + C83567 + C83541 * C163 +
                      C152026 * C146 + C83568 + C83568 + C153351 * C162 +
                      C152033 * C145 + C83569 + C83569 + C153343 * C161) *
                         C153596) *
                        C153501 * C153413 * C310 -
                    ((C83549 * C3330 + C84159 + C84159 + C83541 * C3338 +
                      C152026 * C3329 + C84160 + C84160 + C153351 * C3337 +
                      C152033 * C3328 + C84161 + C84161 + C153343 * C3336) *
                         C116108 +
                     (C85001 + C85000 + C84999) * C153603 + C83911 * C153596) *
                        C153501 * C153413 * C312) *
                       C153384)) /
                     (p * q * std::sqrt(p + q));
    d2ee[275] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                  ((((C152033 * C144 + C83552 + C83552 + C153343 * C160 +
                      C152026 * C145 + C83553 + C83553 + C153351 * C161 +
                      C83549 * C146 + C83554 + C83554 + C83541 * C162) *
                         C153596 +
                     (C88548 + C88549 + C88550) * C153603 + C116560 * C116108) *
                        C153501 * C153413 * C153795 -
                    (C90355 * C116108 + C89570 * C153603 +
                     (C83892 + C83891 + C83890) * C153596) *
                        C153501 * C153413 * C153796 +
                    (C83910 * C153596 + C91333 * C153603 +
                     (C85635 + C85636 + C85637) * C116108) *
                        C153501 * C153413 * C1509) *
                       C153716 +
                   (((C83899 + C83900 + C83901) * C153596 + C89571 * C153603 +
                     (C88560 + C88561 + C88562) * C116108) *
                        C153501 * C153413 * C153796 -
                    (C116564 * C116108 + (C88556 + C88555 + C88554) * C153603 +
                     (C83549 * C147 + C83567 + C83567 + C83541 * C163 +
                      C152026 * C146 + C83568 + C83568 + C153351 * C162 +
                      C152033 * C145 + C83569 + C83569 + C153343 * C161) *
                         C153596) *
                        C153501 * C153413 * C153795 -
                    ((C83549 * C3330 + C84159 + C84159 + C83541 * C3338 +
                      C152026 * C3329 + C84160 + C84160 + C153351 * C3337 +
                      C152033 * C3328 + C84161 + C84161 + C153343 * C3336) *
                         C116108 +
                     (C85001 + C85000 + C84999) * C153603 + C83911 * C153596) *
                        C153501 * C153413 * C1509) *
                       C153384)) /
                 (p * q * std::sqrt(p + q));
    d2ee[276] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                  ((((C152033 * C144 + C83552 + C83552 + C153343 * C160 +
                      C152026 * C145 + C83553 + C83553 + C153351 * C161 +
                      C83549 * C146 + C83554 + C83554 + C83541 * C162) *
                         C153596 +
                     (C88548 + C88549 + C88550) * C153603 + C116560 * C116108) *
                        C153501 * C153725 -
                    ((C92128 + C92127 + C92126) * C116108 +
                     (C88551 + C88552 + C88553) * C153603 +
                     (C88550 + C88549 + C88548) * C153596) *
                        C153501 * C153477) *
                       C153795 +
                   ((C89569 * C153596 + C90356 * C153603 +
                     (C90363 + C90364 + C90365) * C116108) *
                        C153501 * C153477 -
                    (C90355 * C116108 + C89570 * C153603 +
                     (C83892 + C83891 + C83890) * C153596) *
                        C153501 * C153725) *
                       C153796 +
                   ((C83910 * C153596 + C91333 * C153603 +
                     (C85635 + C85636 + C85637) * C116108) *
                        C153501 * C153725 -
                    ((C83549 * C6213 + C86967 + C86967 + C83541 * C6225 +
                      C152026 * C6214 + C86968 + C86968 + C153351 * C6226 +
                      C152033 * C6215 + C86969 + C86969 + C153343 * C6227) *
                         C116108 +
                     (C85637 + C85636 + C85635) * C153603 + C86374 * C153596) *
                        C153501 * C153477) *
                       C1509) *
                  C153378) /
                 (p * q * std::sqrt(p + q));
    d2ee[277] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((C152033 * C144 + C83552 + C83552 + C153343 * C160 +
                     C152026 * C145 + C83553 + C83553 + C153351 * C161 +
                     C83549 * C146 + C83554 + C83554 + C83541 * C162) *
                        C153596 +
                    (C88548 + C88549 + C88550) * C153603 + C116560 * C116108) *
                       C153501 * C153413 * C1218 -
                   (C90355 * C116108 + C89570 * C153603 +
                    (C83892 + C83891 + C83890) * C153596) *
                       C153501 * C153413 * C1219 +
                   (C83910 * C153596 + C91333 * C153603 +
                    (C85635 + C85636 + C85637) * C116108) *
                       C153501 * C153413 * C1220 -
                   ((C83549 * C4833 + C85617 + C85617 + C83541 * C4839 +
                     C152026 * C4834 + C85618 + C85618 + C153351 * C4840 +
                     C152033 * C4835 + C85619 + C85619 + C153343 * C4841) *
                        C116108 +
                    (C86384 + C86383 + C86382) * C153603 + C85376 * C153596) *
                       C153501 * C153413 * C1221) *
                  C153378) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C152033 * C144 + C83552 + C83552 + C153343 * C160 +
                      C152026 * C145 + C83553 + C83553 + C153351 * C161 +
                      C83549 * C146 + C83554 + C83554 + C83541 * C162) *
                         C153596 +
                     (C88548 + C88549 + C88550) * C153603 + C116560 * C116108) *
                        C153501 * C153413 * C1131 -
                    (C90355 * C116108 + C89570 * C153603 +
                     (C83892 + C83891 + C83890) * C153596) *
                        C153501 * C153413 * C153449) *
                       C1133 +
                   (((C83899 + C83900 + C83901) * C153596 + C89571 * C153603 +
                     (C88560 + C88561 + C88562) * C116108) *
                        C153501 * C153413 * C153449 -
                    (C116564 * C116108 + (C88556 + C88555 + C88554) * C153603 +
                     (C83549 * C147 + C83567 + C83567 + C83541 * C163 +
                      C152026 * C146 + C83568 + C83568 + C153351 * C162 +
                      C152033 * C145 + C83569 + C83569 + C153343 * C161) *
                         C153596) *
                        C153501 * C153413 * C1131) *
                       C1134 +
                   (((C152033 * C146 + C83570 + C83570 + C153343 * C162 +
                      C152026 * C147 + C83571 + C83571 + C153351 * C163 +
                      C83549 * C148 + C83572 + C83572 + C83541 * C164) *
                         C153596 +
                     (C89176 + C89177 + C89178) * C153603 +
                     (C117022 + C117023 + C117024) * C116108) *
                        C153501 * C153413 * C1131 -
                    ((C83549 * C1365 + C89164 + C89164 + C83541 * C1375 +
                      C152026 * C1366 + C89165 + C89165 + C153351 * C1376 +
                      C152033 * C1367 + C89166 + C89166 + C153343 * C1377) *
                         C116108 +
                     (C88867 + C88866 + C88865) * C153603 +
                     (C84415 + C84414 + C84413) * C153596) *
                        C153501 * C153413 * C153449) *
                       C1135)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C152033 * C144 + C83552 + C83552 + C153343 * C160 +
                      C152026 * C145 + C83553 + C83553 + C153351 * C161 +
                      C83549 * C146 + C83554 + C83554 + C83541 * C162) *
                         C153596 +
                     (C88548 + C88549 + C88550) * C153603 + C116560 * C116108) *
                        C153501 * C493 -
                    ((C92128 + C92127 + C92126) * C116108 +
                     (C88551 + C88552 + C88553) * C153603 +
                     (C88550 + C88549 + C88548) * C153596) *
                        C153501 * C494 +
                    (C116560 * C153596 + (C92126 + C92127 + C92128) * C153603 +
                     (C152033 * C7560 + C92119 + C92119 + C153343 * C7568 +
                      C152026 * C7561 + C92118 + C92118 + C153351 * C7569 +
                      C83549 * C7562 + C92117 + C92117 + C83541 * C7570) *
                         C116108) *
                        C153501 * C495) *
                       C1131 +
                   ((C89569 * C153596 + C90356 * C153603 +
                     (C90363 + C90364 + C90365) * C116108) *
                        C153501 * C494 -
                    (C90355 * C116108 + C89570 * C153603 +
                     (C83892 + C83891 + C83890) * C153596) *
                        C153501 * C493 -
                    ((C83549 * C9040 + C92114 + C92114 + C83541 * C9046 +
                      C152026 * C9041 + C92115 + C92115 + C153351 * C9047 +
                      C152033 * C9042 + C92116 + C92116 + C153343 * C9048) *
                         C116108 +
                     (C90365 + C90364 + C90363) * C153603 + C90355 * C153596) *
                        C153501 * C495) *
                       C153449) *
                  C153378) /
                     (p * q * std::sqrt(p + q));
    d2ee[278] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C152033 * C144 + C83552 + C83552 + C153343 * C160 +
              C152026 * C145 + C83553 + C83553 + C153351 * C161 +
              C83549 * C146 + C83554 + C83554 + C83541 * C162) *
                 C153596 +
             (C88548 + C88549 + C88550) * C153603 + C116560 * C116108) *
                C153501 * C153725 -
            ((C92128 + C92127 + C92126) * C116108 +
             (C88551 + C88552 + C88553) * C153603 +
             (C88550 + C88549 + C88548) * C153596) *
                C153501 * C153477) *
               C1131 +
           ((C89569 * C153596 + C90356 * C153603 +
             (C90363 + C90364 + C90365) * C116108) *
                C153501 * C153477 -
            (C90355 * C116108 + C89570 * C153603 +
             (C83892 + C83891 + C83890) * C153596) *
                C153501 * C153725) *
               C153449) *
              C153716 +
          ((((C88554 + C88555 + C88556) * C153596 +
             (C88557 + C88558 + C88559) * C153603 +
             (C116568 + C116569 + C116570) * C116108) *
                C153501 * C153477 -
            (C116564 * C116108 + (C88556 + C88555 + C88554) * C153603 +
             (C83549 * C147 + C83567 + C83567 + C83541 * C163 + C152026 * C146 +
              C83568 + C83568 + C153351 * C162 + C152033 * C145 + C83569 +
              C83569 + C153343 * C161) *
                 C153596) *
                C153501 * C153725) *
               C1131 +
           (((C83899 + C83900 + C83901) * C153596 + C89571 * C153603 +
             (C88560 + C88561 + C88562) * C116108) *
                C153501 * C153725 -
            ((C83549 * C8437 + C88512 + C88512 + C83541 * C8439 +
              C152026 * C6216 + C88513 + C88513 + C153351 * C6228 +
              C152033 * C6217 + C88514 + C88514 + C153343 * C6229) *
                 C116108 +
             (C88562 + C88561 + C88560) * C153603 + C89572 * C153596) *
                C153501 * C153477) *
               C153449) *
              C153384)) /
        (p * q * std::sqrt(p + q));
    d2ee[279] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C152033 * C144 + C83552 + C83552 + C153343 * C160 +
                      C152026 * C145 + C83553 + C83553 + C153351 * C161 +
                      C83549 * C146 + C83554 + C83554 + C83541 * C162) *
                         C153596 +
                     (C88548 + C88549 + C88550) * C153603 + C116560 * C116108) *
                        C153501 * C153413 * C1131 -
                    (C90355 * C116108 + C89570 * C153603 +
                     (C83892 + C83891 + C83890) * C153596) *
                        C153501 * C153413 * C153449) *
                       C1133 +
                   (((C83899 + C83900 + C83901) * C153596 + C89571 * C153603 +
                     (C88560 + C88561 + C88562) * C116108) *
                        C153501 * C153413 * C153449 -
                    (C116564 * C116108 + (C88556 + C88555 + C88554) * C153603 +
                     (C83549 * C147 + C83567 + C83567 + C83541 * C163 +
                      C152026 * C146 + C83568 + C83568 + C153351 * C162 +
                      C152033 * C145 + C83569 + C83569 + C153343 * C161) *
                         C153596) *
                        C153501 * C153413 * C1131) *
                       C1134 +
                   (((C152033 * C146 + C83570 + C83570 + C153343 * C162 +
                      C152026 * C147 + C83571 + C83571 + C153351 * C163 +
                      C83549 * C148 + C83572 + C83572 + C83541 * C164) *
                         C153596 +
                     (C89176 + C89177 + C89178) * C153603 +
                     (C117022 + C117023 + C117024) * C116108) *
                        C153501 * C153413 * C1131 -
                    ((C83549 * C1365 + C89164 + C89164 + C83541 * C1375 +
                      C152026 * C1366 + C89165 + C89165 + C153351 * C1376 +
                      C152033 * C1367 + C89166 + C89166 + C153343 * C1377) *
                         C116108 +
                     (C88867 + C88866 + C88865) * C153603 +
                     (C84415 + C84414 + C84413) * C153596) *
                        C153501 * C153413 * C153449) *
                       C1135)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  (((C152033 * C144 + C83552 + C83552 + C153343 * C160 +
                     C152026 * C145 + C83553 + C83553 + C153351 * C161 +
                     C83549 * C146 + C83554 + C83554 + C83541 * C162) *
                        C153596 +
                    (C88548 + C88549 + C88550) * C153603 + C116560 * C116108) *
                       C153501 * C153413 * C1218 -
                   (C90355 * C116108 + C89570 * C153603 +
                    (C83892 + C83891 + C83890) * C153596) *
                       C153501 * C153413 * C1219 +
                   (C83910 * C153596 + C91333 * C153603 +
                    (C85635 + C85636 + C85637) * C116108) *
                       C153501 * C153413 * C1220 -
                   ((C83549 * C4833 + C85617 + C85617 + C83541 * C4839 +
                     C152026 * C4834 + C85618 + C85618 + C153351 * C4840 +
                     C152033 * C4835 + C85619 + C85619 + C153343 * C4841) *
                        C116108 +
                    (C86384 + C86383 + C86382) * C153603 + C85376 * C153596) *
                       C153501 * C153413 * C1221) *
                  C153378) /
                     (p * q * std::sqrt(p + q));
    d2ee[280] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C152033 * C144 + C83552 + C83552 + C153343 * C160 +
              C152026 * C145 + C83553 + C83553 + C153351 * C161 +
              C83549 * C146 + C83554 + C83554 + C83541 * C162) *
                 C153596 +
             (C88548 + C88549 + C88550) * C153603 + C116560 * C116108) *
                C153501 * C1938 -
            (C119215 * C116108 + (C88551 + C88552 + C88553) * C153603 +
             (C88550 + C88549 + C88548) * C153596) *
                C153501 * C153477) *
               C153724 +
           ((C89569 * C153596 + C90356 * C153603 +
             (C90363 + C90364 + C90365) * C116108) *
                C153501 * C153477 -
            (C90355 * C116108 + C89570 * C153603 +
             (C83892 + C83891 + C83890) * C153596) *
                C153501 * C1938) *
               C153449) *
              C153716 +
          ((((C88554 + C88555 + C88556) * C153596 +
             (C88557 + C88558 + C88559) * C153603 +
             (C116568 + C116569 + C116570) * C116108) *
                C153501 * C153477 -
            (C116564 * C116108 + (C88556 + C88555 + C88554) * C153603 +
             (C83549 * C147 + C83567 + C83567 + C83541 * C163 + C152026 * C146 +
              C83568 + C83568 + C153351 * C162 + C152033 * C145 + C83569 +
              C83569 + C153343 * C161) *
                 C153596) *
                C153501 * C1938) *
               C153724 +
           (((C83899 + C83900 + C83901) * C153596 + C89571 * C153603 +
             (C88560 + C88561 + C88562) * C116108) *
                C153501 * C1938 -
            ((C83549 * C8437 + C88512 + C88512 + C83541 * C8439 +
              C152026 * C6216 + C88513 + C88513 + C153351 * C6228 +
              C152033 * C6217 + C88514 + C88514 + C153343 * C6229) *
                 C116108 +
             (C88562 + C88561 + C88560) * C153603 + C89572 * C153596) *
                C153501 * C153477) *
               C153449) *
              C153384)) /
        (p * q * std::sqrt(p + q));
    d2ee[281] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                  ((((C152033 * C144 + C83552 + C83552 + C153343 * C160 +
                      C152026 * C145 + C83553 + C83553 + C153351 * C161 +
                      C83549 * C146 + C83554 + C83554 + C83541 * C162) *
                         C153596 +
                     (C88548 + C88549 + C88550) * C153603 + C116560 * C116108) *
                        C153501 * C153797 -
                    (C119215 * C116108 + (C88551 + C88552 + C88553) * C153603 +
                     (C88550 + C88549 + C88548) * C153596) *
                        C153501 * C153798 +
                    (C116560 * C153596 + (C92126 + C92127 + C92128) * C153603 +
                     (C119222 + C119223 + C119224) * C116108) *
                        C153501 * C2454) *
                       C153724 +
                   ((C89569 * C153596 + C90356 * C153603 +
                     (C90363 + C90364 + C90365) * C116108) *
                        C153501 * C153798 -
                    (C90355 * C116108 + C89570 * C153603 +
                     (C83892 + C83891 + C83890) * C153596) *
                        C153501 * C153797 -
                    ((C83549 * C9040 + C92114 + C92114 + C83541 * C9046 +
                      C152026 * C9041 + C92115 + C92115 + C153351 * C9047 +
                      C152033 * C9042 + C92116 + C92116 + C153343 * C9048) *
                         C116108 +
                     (C90365 + C90364 + C90363) * C153603 + C90355 * C153596) *
                        C153501 * C2454) *
                       C153449) *
                  C153378) /
                 (p * q * std::sqrt(p + q));
    d2ee[282] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C152033 * C144 + C83552 + C83552 + C153343 * C160 +
             C152026 * C145 + C83553 + C83553 + C153351 * C161 + C83549 * C146 +
             C83554 + C83554 + C83541 * C162) *
                C153596 +
            (C88548 + C88549 + C88550) * C153603 + C116560 * C116108) *
               C153501 * C1938 -
           ((C92128 + C92127 + C92126) * C116108 +
            (C88551 + C88552 + C88553) * C153603 +
            (C88550 + C88549 + C88548) * C153596) *
               C153501 * C153477) *
              C310 +
          ((C89569 * C153596 + C90356 * C153603 +
            (C90363 + C90364 + C90365) * C116108) *
               C153501 * C153477 -
           (C90355 * C116108 + C89570 * C153603 +
            (C83892 + C83891 + C83890) * C153596) *
               C153501 * C1938) *
              C311 +
          ((C83910 * C153596 + C91333 * C153603 +
            (C85635 + C85636 + C85637) * C116108) *
               C153501 * C1938 -
           ((C83549 * C6213 + C86967 + C86967 + C83541 * C6225 +
             C152026 * C6214 + C86968 + C86968 + C153351 * C6226 +
             C152033 * C6215 + C86969 + C86969 + C153343 * C6227) *
                C116108 +
            (C85637 + C85636 + C85635) * C153603 + C86374 * C153596) *
               C153501 * C153477) *
              C312) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C152033 * C144 + C83552 + C83552 + C153343 * C160 +
             C152026 * C145 + C83553 + C83553 + C153351 * C161 + C83549 * C146 +
             C83554 + C83554 + C83541 * C162) *
                C153596 +
            (C88548 + C88549 + C88550) * C153603 + C116560 * C116108) *
               C153501 * C1938 -
           ((C92128 + C92127 + C92126) * C116108 +
            (C88551 + C88552 + C88553) * C153603 +
            (C88550 + C88549 + C88548) * C153596) *
               C153501 * C153477) *
              C153397 * C1133 +
          (((C88554 + C88555 + C88556) * C153596 +
            (C88557 + C88558 + C88559) * C153603 +
            (C116568 + C116569 + C116570) * C116108) *
               C153501 * C153477 -
           (C116564 * C116108 + (C88556 + C88555 + C88554) * C153603 +
            (C83549 * C147 + C83567 + C83567 + C83541 * C163 + C152026 * C146 +
             C83568 + C83568 + C153351 * C162 + C152033 * C145 + C83569 +
             C83569 + C153343 * C161) *
                C153596) *
               C153501 * C1938) *
              C153397 * C1134 +
          (((C152033 * C146 + C83570 + C83570 + C153343 * C162 +
             C152026 * C147 + C83571 + C83571 + C153351 * C163 + C83549 * C148 +
             C83572 + C83572 + C83541 * C164) *
                C153596 +
            (C89176 + C89177 + C89178) * C153603 +
            (C117022 + C117023 + C117024) * C116108) *
               C153501 * C1938 -
           ((C83549 * C2148 + C117013 + C117013 + C83541 * C2158 +
             C152026 * C2149 + C117014 + C117014 + C153351 * C2159 +
             C152033 * C2150 + C117015 + C117015 + C153343 * C2160) *
                C116108 +
            (C117024 + C117023 + C117022) * C153603 +
            (C89178 + C89177 + C89176) * C153596) *
               C153501 * C153477) *
              C153397 * C1135)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((C152033 * C144 + C83552 + C83552 + C153343 * C160 + C152026 * C145 +
            C83553 + C83553 + C153351 * C161 + C83549 * C146 + C83554 + C83554 +
            C83541 * C162) *
               C153596 +
           (C88548 + C88549 + C88550) * C153603 + C116560 * C116108) *
              C153501 * C2144 -
          (C119215 * C116108 + (C88551 + C88552 + C88553) * C153603 +
           (C88550 + C88549 + C88548) * C153596) *
              C153501 * C2145 +
          (C116560 * C153596 + (C92126 + C92127 + C92128) * C153603 +
           (C119222 + C119223 + C119224) * C116108) *
              C153501 * C2146 -
          ((C83549 * C10377 + C119212 + C119212 + C83541 * C10383 +
            C152026 * C10378 + C119213 + C119213 + C153351 * C10384 +
            C152033 * C10379 + C119214 + C119214 + C153343 * C10385) *
               C116108 +
           (C119224 + C119223 + C119222) * C153603 + C119215 * C153596) *
              C153501 * C2147) *
         C153397 * C153378) /
            (p * q * std::sqrt(p + q));
    d2ee[283] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((C152033 * C144 + C83552 + C83552 + C153343 * C160 +
             C152026 * C145 + C83553 + C83553 + C153351 * C161 + C83549 * C146 +
             C83554 + C83554 + C83541 * C162) *
                C153596 +
            (C88548 + C88549 + C88550) * C153603 + C116560 * C116108) *
               C153501 * C153797 -
           (C119215 * C116108 + (C88551 + C88552 + C88553) * C153603 +
            (C88550 + C88549 + C88548) * C153596) *
               C153501 * C153798 +
           (C116560 * C153596 + (C92126 + C92127 + C92128) * C153603 +
            (C119222 + C119223 + C119224) * C116108) *
               C153501 * C2454) *
              C153397 * C153716 +
          (((C88554 + C88555 + C88556) * C153596 +
            (C88557 + C88558 + C88559) * C153603 +
            (C116568 + C116569 + C116570) * C116108) *
               C153501 * C153798 -
           (C116564 * C116108 + (C88556 + C88555 + C88554) * C153603 +
            (C83549 * C147 + C83567 + C83567 + C83541 * C163 + C152026 * C146 +
             C83568 + C83568 + C153351 * C162 + C152033 * C145 + C83569 +
             C83569 + C153343 * C161) *
                C153596) *
               C153501 * C153797 -
           ((C83549 * C7563 + C116557 + C116557 + C83541 * C7571 +
             C152026 * C7562 + C116558 + C116558 + C153351 * C7570 +
             C152033 * C7561 + C116559 + C116559 + C153343 * C7569) *
                C116108 +
            (C116570 + C116569 + C116568) * C153603 + C116564 * C153596) *
               C153501 * C2454) *
              C153397 * C153384)) /
        (p * q * std::sqrt(p + q));
    d2ee[284] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C152033 * C144 + C83552 + C83552 + C153343 * C160 +
                      C152026 * C145 + C83553 + C83553 + C153351 * C161 +
                      C83549 * C146 + C83554 + C83554 + C83541 * C162) *
                         C153596 +
                     (C88548 + C88549 + C88550) * C153603 + C116560 * C116108) *
                        C153501 * C1938 -
                    ((C92128 + C92127 + C92126) * C116108 +
                     (C88551 + C88552 + C88553) * C153603 +
                     (C88550 + C88549 + C88548) * C153596) *
                        C153501 * C153477) *
                       C153397 * C1133 +
                   (((C88554 + C88555 + C88556) * C153596 +
                     (C88557 + C88558 + C88559) * C153603 +
                     (C116568 + C116569 + C116570) * C116108) *
                        C153501 * C153477 -
                    (C116564 * C116108 + (C88556 + C88555 + C88554) * C153603 +
                     (C83549 * C147 + C83567 + C83567 + C83541 * C163 +
                      C152026 * C146 + C83568 + C83568 + C153351 * C162 +
                      C152033 * C145 + C83569 + C83569 + C153343 * C161) *
                         C153596) *
                        C153501 * C1938) *
                       C153397 * C1134 +
                   (((C152033 * C146 + C83570 + C83570 + C153343 * C162 +
                      C152026 * C147 + C83571 + C83571 + C153351 * C163 +
                      C83549 * C148 + C83572 + C83572 + C83541 * C164) *
                         C153596 +
                     (C89176 + C89177 + C89178) * C153603 +
                     (C117022 + C117023 + C117024) * C116108) *
                        C153501 * C1938 -
                    ((C83549 * C2148 + C117013 + C117013 + C83541 * C2158 +
                      C152026 * C2149 + C117014 + C117014 + C153351 * C2159 +
                      C152033 * C2150 + C117015 + C117015 + C153343 * C2160) *
                         C116108 +
                     (C117024 + C117023 + C117022) * C153603 +
                     (C89178 + C89177 + C89176) * C153596) *
                        C153501 * C153477) *
                       C153397 * C1135)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C152033 * C144 + C83552 + C83552 + C153343 * C160 +
                      C152026 * C145 + C83553 + C83553 + C153351 * C161 +
                      C83549 * C146 + C83554 + C83554 + C83541 * C162) *
                         C153596 +
                     (C88548 + C88549 + C88550) * C153603 + C116560 * C116108) *
                        C153501 * C1938 -
                    ((C92128 + C92127 + C92126) * C116108 +
                     (C88551 + C88552 + C88553) * C153603 +
                     (C88550 + C88549 + C88548) * C153596) *
                        C153501 * C153477) *
                       C310 +
                   ((C89569 * C153596 + C90356 * C153603 +
                     (C90363 + C90364 + C90365) * C116108) *
                        C153501 * C153477 -
                    (C90355 * C116108 + C89570 * C153603 +
                     (C83892 + C83891 + C83890) * C153596) *
                        C153501 * C1938) *
                       C311 +
                   ((C83910 * C153596 + C91333 * C153603 +
                     (C85635 + C85636 + C85637) * C116108) *
                        C153501 * C1938 -
                    ((C83549 * C6213 + C86967 + C86967 + C83541 * C6225 +
                      C152026 * C6214 + C86968 + C86968 + C153351 * C6226 +
                      C152033 * C6215 + C86969 + C86969 + C153343 * C6227) *
                         C116108 +
                     (C85637 + C85636 + C85635) * C153603 + C86374 * C153596) *
                        C153501 * C153477) *
                       C312) *
                  C153378) /
                     (p * q * std::sqrt(p + q));
    d2ee[285] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C70421 * C144 + C70430 + C70430 + C153818 * C160 + C70423 * C145 +
             C70431 + C70431 + C153811 * C161 + C70425 * C146 + C70432 +
             C70432 + C153792 * C162 + C70427 * C147 + C70433 + C70433 +
             C153738 * C163) *
                C98471 +
            (C98934 + C98935 + C98936 + C98937) * C153600) *
               C153501 * C153413 * C153724 -
           ((C71696 + C71697 + C71698 + C71699) * C153600 +
            (C70739 + C70738 + C70737 + C70736) * C98471) *
               C153501 * C153413 * C153449) *
              C153793 +
          (((C70744 + C70745 + C70746 + C70747) * C98471 +
            (C71700 + C71701 + C71702 + C71703) * C153600) *
               C153501 * C153413 * C153449 -
           ((C98945 + C98944 + C98943 + C98942) * C153600 +
            (C70427 * C148 + C70442 + C70442 + C153738 * C164 + C70425 * C147 +
             C70443 + C70443 + C153792 * C163 + C70423 * C146 + C70444 +
             C70444 + C153811 * C162 + C70421 * C145 + C70445 + C70445 +
             C153818 * C161) *
                C98471) *
               C153501 * C153413 * C153724) *
              C153794 +
          (((C70421 * C146 + C70446 + C70446 + C153818 * C162 + C70423 * C147 +
             C70447 + C70447 + C153811 * C163 + C70425 * C148 + C70448 +
             C70448 + C153792 * C164 + C70427 * C149 + C70449 + C70449 +
             C153738 * C165) *
                C98471 +
            (C70421 * C498 + C71397 + C71397 + C153818 * C522 + C70423 * C497 +
             C71396 + C71396 + C153811 * C521 + C70425 * C496 + C71395 +
             C71395 + C153792 * C520 + C70427 * C506 + C71394 + C71394 +
             C153738 * C530) *
                C153600) *
               C153501 * C153413 * C153724 -
           ((C70427 * C986 + C71390 + C71390 + C153738 * C998 + C70425 * C985 +
             C71391 + C71391 + C153792 * C997 + C70423 * C984 + C71392 +
             C71392 + C153811 * C996 + C70421 * C983 + C71393 + C71393 +
             C153818 * C995) *
                C153600 +
            (C71195 + C71194 + C71193 + C71192) * C98471) *
               C153501 * C153413 * C153449) *
              C678)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
              C74253 + C74253 + C153348 * C161) *
                 C98471 +
             (C78834 + C78835) * C153600) *
                C153812 +
            ((C74550 + C74551) * C98471 + C79864 * C153600) * C153800 +
            C102460 * C153774) *
               C153413 * C153724 -
           ((C76762 * C153600 + C75875 * C98471) * C153774 +
            (C76763 * C153600 + (C74553 + C74552) * C98471) * C153800 +
            (C79866 * C153600 + (C74551 + C74550) * C98471) * C153812) *
               C153413 * C153449) *
              C153793 +
          ((((C74558 + C74559) * C98471 + C79867 * C153600) * C153812 +
            ((C74560 + C74561) * C98471 + C94854 * C153600) * C153800 +
            ((C74562 + C74563) * C98471 + (C75548 + C75549) * C153600) *
                C153774) *
               C153413 * C153449 -
           (C102461 * C153774 +
            (C79869 * C153600 + (C74559 + C74558) * C98471) * C153800 +
            ((C78843 + C78842) * C153600 +
             (C74249 * C146 + C74266 + C74266 + C153348 * C162 + C74247 * C145 +
              C74267 + C74267 + C74241 * C161) *
                 C98471) *
                C153812) *
               C153413 * C153724) *
              C153794 +
          ((((C74247 * C146 + C74268 + C74268 + C74241 * C162 + C74249 * C147 +
              C74269 + C74269 + C153348 * C163) *
                 C98471 +
             (C79474 + C79475) * C153600) *
                C153812 +
            ((C75020 + C75021) * C98471 + (C79160 + C79161) * C153600) *
                C153800 +
            ((C75022 + C75023) * C98471 + (C94176 + C94177) * C153600) *
                C153774) *
               C153413 * C153724 -
           (((C74249 * C4146 + C75220 + C75220 + C153348 * C4154 +
              C74247 * C4145 + C75221 + C75221 + C74241 * C4153) *
                 C153600 +
             (C75025 + C75024) * C98471) *
                C153774 +
            ((C94177 + C94176) * C153600 + (C75023 + C75022) * C98471) *
                C153800 +
            ((C79161 + C79160) * C153600 + (C75021 + C75020) * C98471) *
                C153812) *
               C153413 * C153449) *
              C678)) /
            (p * q * std::sqrt(p + q));
    d2ee[286] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C70421 * C144 + C70430 + C70430 + C153818 * C160 + C70423 * C145 +
              C70431 + C70431 + C153811 * C161 + C70425 * C146 + C70432 +
              C70432 + C153792 * C162 + C70427 * C147 + C70433 + C70433 +
              C153738 * C163) *
                 C98471 +
             (C98934 + C98935 + C98936 + C98937) * C153600) *
                C153501 * C153725 -
            ((C98938 + C98939 + C98940 + C98941) * C153600 +
             (C98937 + C98936 + C98935 + C98934) * C98471) *
                C153501 * C153477) *
               C153724 +
           (((C71699 + C71698 + C71697 + C71696) * C98471 +
             (C72266 + C72267 + C72268 + C72269) * C153600) *
                C153501 * C153477 -
            ((C71696 + C71697 + C71698 + C71699) * C153600 +
             (C70739 + C70738 + C70737 + C70736) * C98471) *
                C153501 * C153725) *
               C153449) *
              C313 +
          ((((C98942 + C98943 + C98944 + C98945) * C98471 +
             (C98946 + C98947 + C98948 + C98949) * C153600) *
                C153501 * C153477 -
            ((C98945 + C98944 + C98943 + C98942) * C153600 +
             (C70427 * C148 + C70442 + C70442 + C153738 * C164 + C70425 * C147 +
              C70443 + C70443 + C153792 * C163 + C70423 * C146 + C70444 +
              C70444 + C153811 * C162 + C70421 * C145 + C70445 + C70445 +
              C153818 * C161) *
                 C98471) *
                C153501 * C153725) *
               C153724 +
           (((C70744 + C70745 + C70746 + C70747) * C98471 +
             (C71700 + C71701 + C71702 + C71703) * C153600) *
                C153501 * C153725 -
            ((C70427 * C1365 + C70970 + C70970 + C153738 * C1375 +
              C70425 * C1366 + C70971 + C70971 + C153792 * C1376 +
              C70423 * C1367 + C70972 + C70972 + C153811 * C1377 +
              C70421 * C1368 + C70973 + C70973 + C153818 * C1378) *
                 C153600 +
             (C71703 + C71702 + C71701 + C71700) * C98471) *
                C153501 * C153477) *
               C153449) *
              C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
               C74253 + C74253 + C153348 * C161) *
                  C98471 +
              (C78834 + C78835) * C153600) *
                 C153812 +
             ((C74550 + C74551) * C98471 + C79864 * C153600) * C153800 +
             C102460 * C153774) *
                C153725 -
            ((C80656 * C153600 + C76763 * C98471) * C153774 +
             (C79865 * C153600 + C79866 * C98471) * C153800 +
             ((C78837 + C78836) * C153600 + (C78835 + C78834) * C98471) *
                 C153812) *
                C153477) *
               C153724 +
           (((C79864 * C98471 + C78764 * C153600) * C153812 +
             (C81637 * C98471 + C81638 * C153600) * C153800 +
             (C96600 * C98471 + (C76114 + C76115) * C153600) * C153774) *
                C153477 -
            ((C76762 * C153600 + C75875 * C98471) * C153774 +
             (C76763 * C153600 + (C74553 + C74552) * C98471) * C153800 +
             (C79866 * C153600 + (C74551 + C74550) * C98471) * C153812) *
                C153725) *
               C153449) *
              C313 +
          (((((C78842 + C78843) * C98471 + (C78844 + C78845) * C153600) *
                 C153812 +
             (C79867 * C98471 + C79868 * C153600) * C153800 +
             (C94854 * C98471 + (C78464 + C78465) * C153600) * C153774) *
                C153477 -
            (C102461 * C153774 +
             (C79869 * C153600 + (C74559 + C74558) * C98471) * C153800 +
             ((C78843 + C78842) * C153600 +
              (C74249 * C146 + C74266 + C74266 + C153348 * C162 +
               C74247 * C145 + C74267 + C74267 + C74241 * C161) *
                  C98471) *
                 C153812) *
                C153725) *
               C153724 +
           ((((C74558 + C74559) * C98471 + C79867 * C153600) * C153812 +
             ((C74560 + C74561) * C98471 + C94854 * C153600) * C153800 +
             ((C74562 + C74563) * C98471 + (C75548 + C75549) * C153600) *
                 C153774) *
                C153725 -
            (((C74249 * C4833 + C74792 + C74792 + C153348 * C4839 +
               C74247 * C4834 + C74793 + C74793 + C74241 * C4840) *
                  C153600 +
              (C75549 + C75548) * C98471) *
                 C153774 +
             ((C78465 + C78464) * C153600 + C93583 * C98471) * C153800 +
             (C78797 * C153600 + C79869 * C98471) * C153812) *
                C153477) *
               C153449) *
              C153384)) /
            (p * q * std::sqrt(p + q));
    d2ee[287] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C70421 * C144 + C70430 + C70430 + C153818 * C160 + C70423 * C145 +
             C70431 + C70431 + C153811 * C161 + C70425 * C146 + C70432 +
             C70432 + C153792 * C162 + C70427 * C147 + C70433 + C70433 +
             C153738 * C163) *
                C98471 +
            (C70421 * C500 + C70953 + C70953 + C153818 * C524 + C70423 * C499 +
             C70952 + C70952 + C153811 * C523 + C70425 * C498 + C70951 +
             C70951 + C153792 * C522 + C70427 * C497 + C70950 + C70950 +
             C153738 * C521) *
                C153600) *
               C153501 * C153413 * C310 -
           ((C71696 + C71697 + C71698 + C71699) * C153600 +
            (C70739 + C70738 + C70737 + C70736) * C98471) *
               C153501 * C153413 * C311 +
           ((C70743 + C70742 + C70741 + C70740) * C98471 +
            (C72936 + C72937 + C72938 + C72939) * C153600) *
               C153501 * C153413 * C312) *
              C313 +
          (((C70744 + C70745 + C70746 + C70747) * C98471 +
            (C71700 + C71701 + C71702 + C71703) * C153600) *
               C153501 * C153413 * C311 -
           ((C70427 * C496 + C70965 + C70965 + C153738 * C520 + C70425 * C497 +
             C70964 + C70964 + C153792 * C521 + C70423 * C498 + C70963 +
             C70963 + C153811 * C522 + C70421 * C499 + C70962 + C70962 +
             C153818 * C523) *
                C153600 +
            (C70427 * C148 + C70442 + C70442 + C153738 * C164 + C70425 * C147 +
             C70443 + C70443 + C153792 * C163 + C70423 * C146 + C70444 +
             C70444 + C153811 * C162 + C70421 * C145 + C70445 + C70445 +
             C153818 * C161) *
                C98471) *
               C153501 * C153413 * C310 -
           ((C70427 * C1796 + C71676 + C71676 + C153738 * C1806 +
             C70425 * C1797 + C71677 + C71677 + C153792 * C1807 +
             C70423 * C1798 + C71678 + C71678 + C153811 * C1808 +
             C70421 * C1799 + C71679 + C71679 + C153818 * C1809) *
                C153600 +
            (C70751 + C70750 + C70749 + C70748) * C98471) *
               C153501 * C153413 * C312) *
              C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C70421 * C144 + C70430 + C70430 + C153818 * C160 + C70423 * C145 +
            C70431 + C70431 + C153811 * C161 + C70425 * C146 + C70432 + C70432 +
            C153792 * C162 + C70427 * C147 + C70433 + C70433 + C153738 * C163) *
               C98471 +
           (C70421 * C500 + C70953 + C70953 + C153818 * C524 + C70423 * C499 +
            C70952 + C70952 + C153811 * C523 + C70425 * C498 + C70951 + C70951 +
            C153792 * C522 + C70427 * C497 + C70950 + C70950 + C153738 * C521) *
               C153600) *
              C153501 * C153413 * C153397 * C130 -
          ((C70427 * C496 + C70965 + C70965 + C153738 * C520 + C70425 * C497 +
            C70964 + C70964 + C153792 * C521 + C70423 * C498 + C70963 + C70963 +
            C153811 * C522 + C70421 * C499 + C70962 + C70962 + C153818 * C523) *
               C153600 +
           (C70427 * C148 + C70442 + C70442 + C153738 * C164 + C70425 * C147 +
            C70443 + C70443 + C153792 * C163 + C70423 * C146 + C70444 + C70444 +
            C153811 * C162 + C70421 * C145 + C70445 + C70445 + C153818 * C161) *
               C98471) *
              C153501 * C153413 * C153397 * C131 +
          ((C70421 * C146 + C70446 + C70446 + C153818 * C162 + C70423 * C147 +
            C70447 + C70447 + C153811 * C163 + C70425 * C148 + C70448 + C70448 +
            C153792 * C164 + C70427 * C149 + C70449 + C70449 + C153738 * C165) *
               C98471 +
           (C70421 * C498 + C71397 + C71397 + C153818 * C522 + C70423 * C497 +
            C71396 + C71396 + C153811 * C521 + C70425 * C496 + C71395 + C71395 +
            C153792 * C520 + C70427 * C506 + C71394 + C71394 + C153738 * C530) *
               C153600) *
              C153501 * C153413 * C153397 * C132 -
          ((C70427 * C811 + C98474 + C98474 + C153738 * C813 + C70425 * C506 +
            C98475 + C98475 + C153792 * C530 + C70423 * C496 + C98476 + C98476 +
            C153811 * C520 + C70421 * C497 + C98477 + C98477 + C153818 * C521) *
               C153600 +
           (C70427 * C150 + C70458 + C70458 + C153738 * C166 + C70425 * C149 +
            C70459 + C70459 + C153792 * C165 + C70423 * C148 + C70460 + C70460 +
            C153811 * C164 + C70421 * C147 + C70461 + C70461 + C153818 * C163) *
               C98471) *
              C153501 * C153413 * C153397 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C70421 * C144 + C70430 + C70430 + C153818 * C160 + C70423 * C145 +
             C70431 + C70431 + C153811 * C161 + C70425 * C146 + C70432 +
             C70432 + C153792 * C162 + C70427 * C147 + C70433 + C70433 +
             C153738 * C163) *
                C98471 +
            (C98934 + C98935 + C98936 + C98937) * C153600) *
               C153501 * C493 -
           ((C98938 + C98939 + C98940 + C98941) * C153600 +
            (C98937 + C98936 + C98935 + C98934) * C98471) *
               C153501 * C494 +
           ((C98941 + C98940 + C98939 + C98938) * C98471 +
            (C70421 * C2152 + C73465 + C73465 + C153818 * C2162 +
             C70423 * C2151 + C73464 + C73464 + C153811 * C2161 +
             C70425 * C2150 + C73463 + C73463 + C153792 * C2160 +
             C70427 * C2149 + C73462 + C73462 + C153738 * C2159) *
                C153600) *
               C153501 * C495) *
              C153397 * C313 +
          (((C98942 + C98943 + C98944 + C98945) * C98471 +
            (C98946 + C98947 + C98948 + C98949) * C153600) *
               C153501 * C494 -
           ((C98945 + C98944 + C98943 + C98942) * C153600 +
            (C70427 * C148 + C70442 + C70442 + C153738 * C164 + C70425 * C147 +
             C70443 + C70443 + C153792 * C163 + C70423 * C146 + C70444 +
             C70444 + C153811 * C162 + C70421 * C145 + C70445 + C70445 +
             C153818 * C161) *
                C98471) *
               C153501 * C493 -
           ((C70427 * C2148 + C98898 + C98898 + C153738 * C2158 +
             C70425 * C2149 + C98899 + C98899 + C153792 * C2159 +
             C70423 * C2150 + C98900 + C98900 + C153811 * C2160 +
             C70421 * C2151 + C98901 + C98901 + C153818 * C2161) *
                C153600 +
            (C98949 + C98948 + C98947 + C98946) * C98471) *
               C153501 * C495) *
              C153397 * C153384)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
             C74253 + C74253 + C153348 * C161) *
                C98471 +
            (C78834 + C78835) * C153600) *
               C153812 +
           ((C74550 + C74551) * C98471 + C79864 * C153600) * C153800 +
           (C74566 * C98471 + C81637 * C153600) * C153774) *
              C153413 * C153397 * C130 -
          ((C93583 * C153600 + C74569 * C98471) * C153774 +
           (C79869 * C153600 + (C74559 + C74558) * C98471) * C153800 +
           ((C78843 + C78842) * C153600 +
            (C74249 * C146 + C74266 + C74266 + C153348 * C162 + C74247 * C145 +
             C74267 + C74267 + C74241 * C161) *
                C98471) *
               C153812) *
              C153413 * C153397 * C131 +
          (((C74247 * C146 + C74268 + C74268 + C74241 * C162 + C74249 * C147 +
             C74269 + C74269 + C153348 * C163) *
                C98471 +
            (C79474 + C79475) * C153600) *
               C153812 +
           ((C75020 + C75021) * C98471 + (C79160 + C79161) * C153600) *
               C153800 +
           ((C75022 + C75023) * C98471 + (C94176 + C94177) * C153600) *
               C153774) *
              C153413 * C153397 * C132 -
          (((C74249 * C1796 + C93289 + C93289 + C153348 * C1806 +
             C74247 * C1797 + C93290 + C93290 + C74241 * C1807) *
                C153600 +
            (C74249 * C324 + C74278 + C74278 + C153348 * C348 + C74247 * C323 +
             C74279 + C74279 + C74241 * C347) *
                C98471) *
               C153774 +
           ((C74249 * C985 + C78150 + C78150 + C153348 * C997 + C74247 * C984 +
             C78151 + C78151 + C74241 * C996) *
                C153600 +
            (C74249 * C315 + C74280 + C74280 + C153348 * C339 + C74247 * C316 +
             C74281 + C74281 + C74241 * C340) *
                C98471) *
               C153800 +
           ((C74249 * C496 + C78154 + C78154 + C153348 * C520 + C74247 * C497 +
             C78155 + C78155 + C74241 * C521) *
                C153600 +
            (C74249 * C148 + C74282 + C74282 + C153348 * C164 + C74247 * C147 +
             C74283 + C74283 + C74241 * C163) *
                C98471) *
               C153812) *
              C153413 * C153397 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
              C74253 + C74253 + C153348 * C161) *
                 C98471 +
             (C78834 + C78835) * C153600) *
                C153812 +
            ((C74550 + C74551) * C98471 + C79864 * C153600) * C153800 +
            C102460 * C153774) *
               C153413 * C310 -
           ((C76762 * C153600 + C75875 * C98471) * C153774 +
            (C76763 * C153600 + (C74553 + C74552) * C98471) * C153800 +
            (C79866 * C153600 + (C74551 + C74550) * C98471) * C153812) *
               C153413 * C311 +
           (C102460 * C153812 + (C74567 * C98471 + C96600 * C153600) * C153800 +
            ((C74557 + C74556) * C98471 + (C76776 + C76777) * C153600) *
                C153774) *
               C153413 * C312) *
              C313 +
          ((((C74558 + C74559) * C98471 + C79867 * C153600) * C153812 +
            ((C74560 + C74561) * C98471 + C94854 * C153600) * C153800 +
            ((C74562 + C74563) * C98471 + (C75548 + C75549) * C153600) *
                C153774) *
               C153413 * C311 -
           (C102461 * C153774 +
            (C79869 * C153600 + (C74559 + C74558) * C98471) * C153800 +
            ((C78843 + C78842) * C153600 +
             (C74249 * C146 + C74266 + C74266 + C153348 * C162 + C74247 * C145 +
              C74267 + C74267 + C74241 * C161) *
                 C98471) *
                C153812) *
               C153413 * C310 -
           (((C74249 * C5601 + C75512 + C75512 + C153348 * C5607 +
              C74247 * C5602 + C75513 + C75513 + C74241 * C5608) *
                 C153600 +
             (C74565 + C74564) * C98471) *
                C153774 +
            ((C75549 + C75548) * C153600 + C74568 * C98471) * C153800 +
            C102461 * C153812) *
               C153413 * C312) *
              C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
              C74253 + C74253 + C153348 * C161) *
                 C98471 +
             (C78834 + C78835) * C153600) *
                C153812 +
            ((C74550 + C74551) * C98471 + C79864 * C153600) * C153800 +
            C102460 * C153774) *
               C493 -
           ((C80656 * C153600 + C76763 * C98471) * C153774 +
            (C79865 * C153600 + C79866 * C98471) * C153800 +
            ((C78837 + C78836) * C153600 + (C78835 + C78834) * C98471) *
                C153812) *
               C494 +
           ((C78850 * C98471 + (C78841 + C78840) * C153600) * C153812 +
            (C78764 * C98471 + C80647 * C153600) * C153800 +
            (C81638 * C98471 + (C80669 + C80670) * C153600) * C153774) *
               C495) *
              C153397 * C313 +
          ((((C78842 + C78843) * C98471 + (C78844 + C78845) * C153600) *
                C153812 +
            (C79867 * C98471 + C79868 * C153600) * C153800 +
            (C94854 * C98471 + (C78464 + C78465) * C153600) * C153774) *
               C494 -
           (C102461 * C153774 +
            (C79869 * C153600 + (C74559 + C74558) * C98471) * C153800 +
            ((C78843 + C78842) * C153600 +
             (C74249 * C146 + C74266 + C74266 + C153348 * C162 + C74247 * C145 +
              C74267 + C74267 + C74241 * C161) *
                 C98471) *
                C153812) *
               C493 -
           (((C74249 * C6213 + C79870 + C79870 + C153348 * C6225 +
              C74247 * C6214 + C79871 + C79871 + C74241 * C6226) *
                 C153600 +
             (C78465 + C78464) * C98471) *
                C153774 +
            ((C78849 + C78848) * C153600 + C78797 * C98471) * C153800 +
            ((C78847 + C78846) * C153600 + C78851 * C98471) * C153812) *
               C495) *
              C153397 * C153384)) /
            (p * q * std::sqrt(p + q));
    d2ee[288] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C70421 * C144 + C70430 + C70430 + C153818 * C160 + C70423 * C145 +
             C70431 + C70431 + C153811 * C161 + C70425 * C146 + C70432 +
             C70432 + C153792 * C162 + C70427 * C147 + C70433 + C70433 +
             C153738 * C163) *
                C98471 +
            (C98934 + C98935 + C98936 + C98937) * C153600) *
               C153501 * C153725 -
           ((C98938 + C98939 + C98940 + C98941) * C153600 +
            (C98937 + C98936 + C98935 + C98934) * C98471) *
               C153501 * C153477) *
              C153397 * C153793 +
          (((C98942 + C98943 + C98944 + C98945) * C98471 +
            (C98946 + C98947 + C98948 + C98949) * C153600) *
               C153501 * C153477 -
           ((C98945 + C98944 + C98943 + C98942) * C153600 +
            (C70427 * C148 + C70442 + C70442 + C153738 * C164 + C70425 * C147 +
             C70443 + C70443 + C153792 * C163 + C70423 * C146 + C70444 +
             C70444 + C153811 * C162 + C70421 * C145 + C70445 + C70445 +
             C153818 * C161) *
                C98471) *
               C153501 * C153725) *
              C153397 * C153794 +
          (((C70421 * C146 + C70446 + C70446 + C153818 * C162 + C70423 * C147 +
             C70447 + C70447 + C153811 * C163 + C70425 * C148 + C70448 +
             C70448 + C153792 * C164 + C70427 * C149 + C70449 + C70449 +
             C153738 * C165) *
                C98471 +
            (C99358 + C99359 + C99360 + C99361) * C153600) *
               C153501 * C153725 -
           ((C70427 * C507 + C99346 + C99346 + C153738 * C531 + C70425 * C505 +
             C99347 + C99347 + C153792 * C529 + C70423 * C504 + C99348 +
             C99348 + C153811 * C528 + C70421 * C503 + C99349 + C99349 +
             C153818 * C527) *
                C153600 +
            (C99361 + C99360 + C99359 + C99358) * C98471) *
               C153501 * C153477) *
              C153397 * C678)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
              C74253 + C74253 + C153348 * C161) *
                 C98471 +
             (C78834 + C78835) * C153600) *
                C153812 +
            ((C74550 + C74551) * C98471 + C79864 * C153600) * C153800 +
            C102460 * C153774) *
               C153725 -
           ((C80656 * C153600 + C76763 * C98471) * C153774 +
            (C79865 * C153600 + C79866 * C98471) * C153800 +
            ((C78837 + C78836) * C153600 + (C78835 + C78834) * C98471) *
                C153812) *
               C153477) *
              C153397 * C153793 +
          ((((C78842 + C78843) * C98471 + (C78844 + C78845) * C153600) *
                C153812 +
            (C79867 * C98471 + C79868 * C153600) * C153800 +
            (C94854 * C98471 + (C78464 + C78465) * C153600) * C153774) *
               C153477 -
           (C102461 * C153774 +
            (C79869 * C153600 + (C74559 + C74558) * C98471) * C153800 +
            ((C78843 + C78842) * C153600 +
             (C74249 * C146 + C74266 + C74266 + C153348 * C162 + C74247 * C145 +
              C74267 + C74267 + C74241 * C161) *
                 C98471) *
                C153812) *
               C153725) *
              C153397 * C153794 +
          ((((C74247 * C146 + C74268 + C74268 + C74241 * C162 + C74249 * C147 +
              C74269 + C74269 + C153348 * C163) *
                 C98471 +
             (C79474 + C79475) * C153600) *
                C153812 +
            ((C75020 + C75021) * C98471 + (C79160 + C79161) * C153600) *
                C153800 +
            ((C75022 + C75023) * C98471 + (C94176 + C94177) * C153600) *
                C153774) *
               C153725 -
           (((C74249 * C3330 + C79150 + C79150 + C153348 * C3338 +
              C74247 * C3329 + C79151 + C79151 + C74241 * C3337) *
                 C153600 +
             (C94177 + C94176) * C98471) *
                C153774 +
            ((C79163 + C79162) * C153600 + (C79161 + C79160) * C98471) *
                C153800 +
            ((C79477 + C79476) * C153600 + (C79475 + C79474) * C98471) *
                C153812) *
               C153477) *
              C153397 * C678)) /
            (p * q * std::sqrt(p + q));
    d2ee[289] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C70421 * C144 + C70430 + C70430 + C153818 * C160 + C70423 * C145 +
            C70431 + C70431 + C153811 * C161 + C70425 * C146 + C70432 + C70432 +
            C153792 * C162 + C70427 * C147 + C70433 + C70433 + C153738 * C163) *
               C98471 +
           (C70421 * C500 + C70953 + C70953 + C153818 * C524 + C70423 * C499 +
            C70952 + C70952 + C153811 * C523 + C70425 * C498 + C70951 + C70951 +
            C153792 * C522 + C70427 * C497 + C70950 + C70950 + C153738 * C521) *
               C153600) *
              C153501 * C153413 * C153397 * C130 -
          ((C70427 * C496 + C70965 + C70965 + C153738 * C520 + C70425 * C497 +
            C70964 + C70964 + C153792 * C521 + C70423 * C498 + C70963 + C70963 +
            C153811 * C522 + C70421 * C499 + C70962 + C70962 + C153818 * C523) *
               C153600 +
           (C70427 * C148 + C70442 + C70442 + C153738 * C164 + C70425 * C147 +
            C70443 + C70443 + C153792 * C163 + C70423 * C146 + C70444 + C70444 +
            C153811 * C162 + C70421 * C145 + C70445 + C70445 + C153818 * C161) *
               C98471) *
              C153501 * C153413 * C153397 * C131 +
          ((C70421 * C146 + C70446 + C70446 + C153818 * C162 + C70423 * C147 +
            C70447 + C70447 + C153811 * C163 + C70425 * C148 + C70448 + C70448 +
            C153792 * C164 + C70427 * C149 + C70449 + C70449 + C153738 * C165) *
               C98471 +
           (C70421 * C498 + C71397 + C71397 + C153818 * C522 + C70423 * C497 +
            C71396 + C71396 + C153811 * C521 + C70425 * C496 + C71395 + C71395 +
            C153792 * C520 + C70427 * C506 + C71394 + C71394 + C153738 * C530) *
               C153600) *
              C153501 * C153413 * C153397 * C132 -
          ((C70427 * C811 + C98474 + C98474 + C153738 * C813 + C70425 * C506 +
            C98475 + C98475 + C153792 * C530 + C70423 * C496 + C98476 + C98476 +
            C153811 * C520 + C70421 * C497 + C98477 + C98477 + C153818 * C521) *
               C153600 +
           (C70427 * C150 + C70458 + C70458 + C153738 * C166 + C70425 * C149 +
            C70459 + C70459 + C153792 * C165 + C70423 * C148 + C70460 + C70460 +
            C153811 * C164 + C70421 * C147 + C70461 + C70461 + C153818 * C163) *
               C98471) *
              C153501 * C153413 * C153397 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C70421 * C144 + C70430 + C70430 + C153818 * C160 + C70423 * C145 +
             C70431 + C70431 + C153811 * C161 + C70425 * C146 + C70432 +
             C70432 + C153792 * C162 + C70427 * C147 + C70433 + C70433 +
             C153738 * C163) *
                C98471 +
            (C70421 * C500 + C70953 + C70953 + C153818 * C524 + C70423 * C499 +
             C70952 + C70952 + C153811 * C523 + C70425 * C498 + C70951 +
             C70951 + C153792 * C522 + C70427 * C497 + C70950 + C70950 +
             C153738 * C521) *
                C153600) *
               C153501 * C153413 * C310 -
           ((C71696 + C71697 + C71698 + C71699) * C153600 +
            (C70739 + C70738 + C70737 + C70736) * C98471) *
               C153501 * C153413 * C311 +
           ((C70743 + C70742 + C70741 + C70740) * C98471 +
            (C72936 + C72937 + C72938 + C72939) * C153600) *
               C153501 * C153413 * C312) *
              C313 +
          (((C70744 + C70745 + C70746 + C70747) * C98471 +
            (C71700 + C71701 + C71702 + C71703) * C153600) *
               C153501 * C153413 * C311 -
           ((C70427 * C496 + C70965 + C70965 + C153738 * C520 + C70425 * C497 +
             C70964 + C70964 + C153792 * C521 + C70423 * C498 + C70963 +
             C70963 + C153811 * C522 + C70421 * C499 + C70962 + C70962 +
             C153818 * C523) *
                C153600 +
            (C70427 * C148 + C70442 + C70442 + C153738 * C164 + C70425 * C147 +
             C70443 + C70443 + C153792 * C163 + C70423 * C146 + C70444 +
             C70444 + C153811 * C162 + C70421 * C145 + C70445 + C70445 +
             C153818 * C161) *
                C98471) *
               C153501 * C153413 * C310 -
           ((C70427 * C1796 + C71676 + C71676 + C153738 * C1806 +
             C70425 * C1797 + C71677 + C71677 + C153792 * C1807 +
             C70423 * C1798 + C71678 + C71678 + C153811 * C1808 +
             C70421 * C1799 + C71679 + C71679 + C153818 * C1809) *
                C153600 +
            (C70751 + C70750 + C70749 + C70748) * C98471) *
               C153501 * C153413 * C312) *
              C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
             C74253 + C74253 + C153348 * C161) *
                C98471 +
            (C78834 + C78835) * C153600) *
               C153812 +
           ((C74550 + C74551) * C98471 + C79864 * C153600) * C153800 +
           (C74566 * C98471 + C81637 * C153600) * C153774) *
              C153413 * C153397 * C130 -
          ((C93583 * C153600 + C74569 * C98471) * C153774 +
           (C79869 * C153600 + (C74559 + C74558) * C98471) * C153800 +
           ((C78843 + C78842) * C153600 +
            (C74249 * C146 + C74266 + C74266 + C153348 * C162 + C74247 * C145 +
             C74267 + C74267 + C74241 * C161) *
                C98471) *
               C153812) *
              C153413 * C153397 * C131 +
          (((C74247 * C146 + C74268 + C74268 + C74241 * C162 + C74249 * C147 +
             C74269 + C74269 + C153348 * C163) *
                C98471 +
            (C79474 + C79475) * C153600) *
               C153812 +
           ((C75020 + C75021) * C98471 + (C79160 + C79161) * C153600) *
               C153800 +
           ((C75022 + C75023) * C98471 + (C94176 + C94177) * C153600) *
               C153774) *
              C153413 * C153397 * C132 -
          (((C74249 * C1796 + C93289 + C93289 + C153348 * C1806 +
             C74247 * C1797 + C93290 + C93290 + C74241 * C1807) *
                C153600 +
            (C74249 * C324 + C74278 + C74278 + C153348 * C348 + C74247 * C323 +
             C74279 + C74279 + C74241 * C347) *
                C98471) *
               C153774 +
           ((C74249 * C985 + C78150 + C78150 + C153348 * C997 + C74247 * C984 +
             C78151 + C78151 + C74241 * C996) *
                C153600 +
            (C74249 * C315 + C74280 + C74280 + C153348 * C339 + C74247 * C316 +
             C74281 + C74281 + C74241 * C340) *
                C98471) *
               C153800 +
           ((C74249 * C496 + C78154 + C78154 + C153348 * C520 + C74247 * C497 +
             C78155 + C78155 + C74241 * C521) *
                C153600 +
            (C74249 * C148 + C74282 + C74282 + C153348 * C164 + C74247 * C147 +
             C74283 + C74283 + C74241 * C163) *
                C98471) *
               C153812) *
              C153413 * C153397 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
              C74253 + C74253 + C153348 * C161) *
                 C98471 +
             (C78834 + C78835) * C153600) *
                C153812 +
            ((C74550 + C74551) * C98471 + C79864 * C153600) * C153800 +
            C102460 * C153774) *
               C153413 * C310 -
           ((C76762 * C153600 + C75875 * C98471) * C153774 +
            (C76763 * C153600 + (C74553 + C74552) * C98471) * C153800 +
            (C79866 * C153600 + (C74551 + C74550) * C98471) * C153812) *
               C153413 * C311 +
           (C102460 * C153812 + (C74567 * C98471 + C96600 * C153600) * C153800 +
            ((C74557 + C74556) * C98471 + (C76776 + C76777) * C153600) *
                C153774) *
               C153413 * C312) *
              C313 +
          ((((C74558 + C74559) * C98471 + C79867 * C153600) * C153812 +
            ((C74560 + C74561) * C98471 + C94854 * C153600) * C153800 +
            ((C74562 + C74563) * C98471 + (C75548 + C75549) * C153600) *
                C153774) *
               C153413 * C311 -
           (C102461 * C153774 +
            (C79869 * C153600 + (C74559 + C74558) * C98471) * C153800 +
            ((C78843 + C78842) * C153600 +
             (C74249 * C146 + C74266 + C74266 + C153348 * C162 + C74247 * C145 +
              C74267 + C74267 + C74241 * C161) *
                 C98471) *
                C153812) *
               C153413 * C310 -
           (((C74249 * C5601 + C75512 + C75512 + C153348 * C5607 +
              C74247 * C5602 + C75513 + C75513 + C74241 * C5608) *
                 C153600 +
             (C74565 + C74564) * C98471) *
                C153774 +
            ((C75549 + C75548) * C153600 + C74568 * C98471) * C153800 +
            C102461 * C153812) *
               C153413 * C312) *
              C153384)) /
            (p * q * std::sqrt(p + q));
    d2ee[290] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C70421 * C144 + C70430 + C70430 + C153818 * C160 + C70423 * C145 +
             C70431 + C70431 + C153811 * C161 + C70425 * C146 + C70432 +
             C70432 + C153792 * C162 + C70427 * C147 + C70433 + C70433 +
             C153738 * C163) *
                C98471 +
            (C98934 + C98935 + C98936 + C98937) * C153600) *
               C153501 * C153413 * C153795 -
           ((C71696 + C71697 + C71698 + C71699) * C153600 +
            (C70739 + C70738 + C70737 + C70736) * C98471) *
               C153501 * C153413 * C153796 +
           ((C70743 + C70742 + C70741 + C70740) * C98471 +
            (C72936 + C72937 + C72938 + C72939) * C153600) *
               C153501 * C153413 * C1509) *
              C153716 +
          (((C70744 + C70745 + C70746 + C70747) * C98471 +
            (C71700 + C71701 + C71702 + C71703) * C153600) *
               C153501 * C153413 * C153796 -
           ((C98945 + C98944 + C98943 + C98942) * C153600 +
            (C70427 * C148 + C70442 + C70442 + C153738 * C164 + C70425 * C147 +
             C70443 + C70443 + C153792 * C163 + C70423 * C146 + C70444 +
             C70444 + C153811 * C162 + C70421 * C145 + C70445 + C70445 +
             C153818 * C161) *
                C98471) *
               C153501 * C153413 * C153795 -
           ((C70427 * C1796 + C71676 + C71676 + C153738 * C1806 +
             C70425 * C1797 + C71677 + C71677 + C153792 * C1807 +
             C70423 * C1798 + C71678 + C71678 + C153811 * C1808 +
             C70421 * C1799 + C71679 + C71679 + C153818 * C1809) *
                C153600 +
            (C70751 + C70750 + C70749 + C70748) * C98471) *
               C153501 * C153413 * C1509) *
              C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
              C74253 + C74253 + C153348 * C161) *
                 C98471 +
             (C78834 + C78835) * C153600) *
                C153812 +
            ((C74550 + C74551) * C98471 + C79864 * C153600) * C153800 +
            C102460 * C153774) *
               C153413 * C153795 -
           (C104204 * C153774 +
            (C76763 * C153600 + (C74553 + C74552) * C98471) * C153800 +
            (C79866 * C153600 + (C74551 + C74550) * C98471) * C153812) *
               C153413 * C153796 +
           (C102460 * C153812 + (C74567 * C98471 + C96600 * C153600) * C153800 +
            ((C74557 + C74556) * C98471 + (C76776 + C76777) * C153600) *
                C153774) *
               C153413 * C1509) *
              C153716 +
          ((((C74558 + C74559) * C98471 + C79867 * C153600) * C153812 +
            ((C74560 + C74561) * C98471 + C94854 * C153600) * C153800 +
            ((C74562 + C74563) * C98471 + (C75548 + C75549) * C153600) *
                C153774) *
               C153413 * C153796 -
           (C102461 * C153774 +
            (C79869 * C153600 + (C74559 + C74558) * C98471) * C153800 +
            ((C78843 + C78842) * C153600 +
             (C74249 * C146 + C74266 + C74266 + C153348 * C162 + C74247 * C145 +
              C74267 + C74267 + C74241 * C161) *
                 C98471) *
                C153812) *
               C153413 * C153795 -
           (((C74249 * C5601 + C75512 + C75512 + C153348 * C5607 +
              C74247 * C5602 + C75513 + C75513 + C74241 * C5608) *
                 C153600 +
             (C74565 + C74564) * C98471) *
                C153774 +
            ((C75549 + C75548) * C153600 + C74568 * C98471) * C153800 +
            C102461 * C153812) *
               C153413 * C1509) *
              C153384)) /
            (p * q * std::sqrt(p + q));
    d2ee[291] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C70421 * C144 + C70430 + C70430 + C153818 * C160 + C70423 * C145 +
             C70431 + C70431 + C153811 * C161 + C70425 * C146 + C70432 +
             C70432 + C153792 * C162 + C70427 * C147 + C70433 + C70433 +
             C153738 * C163) *
                C98471 +
            (C98934 + C98935 + C98936 + C98937) * C153600) *
               C153501 * C153725 -
           ((C98938 + C98939 + C98940 + C98941) * C153600 +
            (C98937 + C98936 + C98935 + C98934) * C98471) *
               C153501 * C153477) *
              C153795 +
          (((C71699 + C71698 + C71697 + C71696) * C98471 +
            (C72266 + C72267 + C72268 + C72269) * C153600) *
               C153501 * C153477 -
           ((C71696 + C71697 + C71698 + C71699) * C153600 +
            (C70739 + C70738 + C70737 + C70736) * C98471) *
               C153501 * C153725) *
              C153796 +
          (((C70743 + C70742 + C70741 + C70740) * C98471 +
            (C72936 + C72937 + C72938 + C72939) * C153600) *
               C153501 * C153725 -
           ((C70427 * C3330 + C72254 + C72254 + C153738 * C3338 +
             C70425 * C3329 + C72255 + C72255 + C153792 * C3337 +
             C70423 * C3328 + C72256 + C72256 + C153811 * C3336 +
             C70421 * C3327 + C72257 + C72257 + C153818 * C3335) *
                C153600 +
            (C72939 + C72938 + C72937 + C72936) * C98471) *
               C153501 * C153477) *
              C1509) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
              C74253 + C74253 + C153348 * C161) *
                 C98471 +
             (C78834 + C78835) * C153600) *
                C153812 +
            ((C74550 + C74551) * C98471 + C79864 * C153600) * C153800 +
            C102460 * C153774) *
               C153725 -
           (C105463 * C153774 + (C79865 * C153600 + C79866 * C98471) * C153800 +
            ((C78837 + C78836) * C153600 + (C78835 + C78834) * C98471) *
                C153812) *
               C153477) *
              C153795 +
          (((C79864 * C98471 + C78764 * C153600) * C153812 +
            (C81637 * C98471 + C81638 * C153600) * C153800 +
            (C96600 * C98471 + (C76114 + C76115) * C153600) * C153774) *
               C153477 -
           (C104204 * C153774 +
            (C76763 * C153600 + (C74553 + C74552) * C98471) * C153800 +
            (C79866 * C153600 + (C74551 + C74550) * C98471) * C153812) *
               C153725) *
              C153796 +
          ((C102460 * C153812 + (C74567 * C98471 + C96600 * C153600) * C153800 +
            ((C74557 + C74556) * C98471 + (C76776 + C76777) * C153600) *
                C153774) *
               C153725 -
           (((C74249 * C28571 + C76096 + C76096 + C153348 * C28575 +
              C74247 * C28570 + C76097 + C76097 + C74241 * C28574) *
                 C153600 +
             (C76777 + C76776) * C98471) *
                C153774 +
            ((C76115 + C76114) * C153600 + C76762 * C98471) * C153800 +
            C105463 * C153812) *
               C153477) *
              C1509) *
         C153378) /
            (p * q * std::sqrt(p + q));
    d2ee[292] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C70421 * C144 + C70430 + C70430 + C153818 * C160 + C70423 * C145 +
            C70431 + C70431 + C153811 * C161 + C70425 * C146 + C70432 + C70432 +
            C153792 * C162 + C70427 * C147 + C70433 + C70433 + C153738 * C163) *
               C98471 +
           (C98934 + C98935 + C98936 + C98937) * C153600) *
              C153501 * C153413 * C1218 -
          ((C71696 + C71697 + C71698 + C71699) * C153600 +
           (C70739 + C70738 + C70737 + C70736) * C98471) *
              C153501 * C153413 * C1219 +
          ((C70743 + C70742 + C70741 + C70740) * C98471 +
           (C72936 + C72937 + C72938 + C72939) * C153600) *
              C153501 * C153413 * C1220 -
          ((C70427 * C4146 + C72924 + C72924 + C153738 * C4154 +
            C70425 * C4145 + C72925 + C72925 + C153792 * C4153 +
            C70423 * C4144 + C72926 + C72926 + C153811 * C4152 +
            C70421 * C4143 + C72927 + C72927 + C153818 * C4151) *
               C153600 +
           (C72051 + C72050 + C72049 + C72048) * C98471) *
              C153501 * C153413 * C1221) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C70421 * C144 + C70430 + C70430 + C153818 * C160 + C70423 * C145 +
             C70431 + C70431 + C153811 * C161 + C70425 * C146 + C70432 +
             C70432 + C153792 * C162 + C70427 * C147 + C70433 + C70433 +
             C153738 * C163) *
                C98471 +
            (C98934 + C98935 + C98936 + C98937) * C153600) *
               C153501 * C153413 * C1131 -
           ((C71696 + C71697 + C71698 + C71699) * C153600 +
            (C70739 + C70738 + C70737 + C70736) * C98471) *
               C153501 * C153413 * C153449) *
              C1133 +
          (((C70744 + C70745 + C70746 + C70747) * C98471 +
            (C71700 + C71701 + C71702 + C71703) * C153600) *
               C153501 * C153413 * C153449 -
           ((C98945 + C98944 + C98943 + C98942) * C153600 +
            (C70427 * C148 + C70442 + C70442 + C153738 * C164 + C70425 * C147 +
             C70443 + C70443 + C153792 * C163 + C70423 * C146 + C70444 +
             C70444 + C153811 * C162 + C70421 * C145 + C70445 + C70445 +
             C153818 * C161) *
                C98471) *
               C153501 * C153413 * C1131) *
              C1134 +
          (((C70421 * C146 + C70446 + C70446 + C153818 * C162 + C70423 * C147 +
             C70447 + C70447 + C153811 * C163 + C70425 * C148 + C70448 +
             C70448 + C153792 * C164 + C70427 * C149 + C70449 + C70449 +
             C153738 * C165) *
                C98471 +
            (C99358 + C99359 + C99360 + C99361) * C153600) *
               C153501 * C153413 * C1131 -
           ((C70427 * C986 + C71390 + C71390 + C153738 * C998 + C70425 * C985 +
             C71391 + C71391 + C153792 * C997 + C70423 * C984 + C71392 +
             C71392 + C153811 * C996 + C70421 * C983 + C71393 + C71393 +
             C153818 * C995) *
                C153600 +
            (C71195 + C71194 + C71193 + C71192) * C98471) *
               C153501 * C153413 * C153449) *
              C1135)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C70421 * C144 + C70430 + C70430 + C153818 * C160 + C70423 * C145 +
             C70431 + C70431 + C153811 * C161 + C70425 * C146 + C70432 +
             C70432 + C153792 * C162 + C70427 * C147 + C70433 + C70433 +
             C153738 * C163) *
                C98471 +
            (C98934 + C98935 + C98936 + C98937) * C153600) *
               C153501 * C493 -
           ((C98938 + C98939 + C98940 + C98941) * C153600 +
            (C98937 + C98936 + C98935 + C98934) * C98471) *
               C153501 * C494 +
           ((C98941 + C98940 + C98939 + C98938) * C98471 +
            (C70421 * C2152 + C73465 + C73465 + C153818 * C2162 +
             C70423 * C2151 + C73464 + C73464 + C153811 * C2161 +
             C70425 * C2150 + C73463 + C73463 + C153792 * C2160 +
             C70427 * C2149 + C73462 + C73462 + C153738 * C2159) *
                C153600) *
               C153501 * C495) *
              C1131 +
          (((C71699 + C71698 + C71697 + C71696) * C98471 +
            (C72266 + C72267 + C72268 + C72269) * C153600) *
               C153501 * C494 -
           ((C71696 + C71697 + C71698 + C71699) * C153600 +
            (C70739 + C70738 + C70737 + C70736) * C98471) *
               C153501 * C493 -
           ((C70427 * C8437 + C73458 + C73458 + C153738 * C8439 +
             C70425 * C6216 + C73459 + C73459 + C153792 * C6228 +
             C70423 * C6217 + C73460 + C73460 + C153811 * C6229 +
             C70421 * C6218 + C73461 + C73461 + C153818 * C6230) *
                C153600 +
            (C72269 + C72268 + C72267 + C72266) * C98471) *
               C153501 * C495) *
              C153449) *
         C153378) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
              C74253 + C74253 + C153348 * C161) *
                 C98471 +
             (C78834 + C78835) * C153600) *
                C153812 +
            ((C74550 + C74551) * C98471 + C79864 * C153600) * C153800 +
            C102460 * C153774) *
               C153413 * C1131 -
           ((C76762 * C153600 + C75875 * C98471) * C153774 +
            (C76763 * C153600 + (C74553 + C74552) * C98471) * C153800 +
            (C79866 * C153600 + (C74551 + C74550) * C98471) * C153812) *
               C153413 * C153449) *
              C1133 +
          ((((C74558 + C74559) * C98471 + C79867 * C153600) * C153812 +
            ((C74560 + C74561) * C98471 + C94854 * C153600) * C153800 +
            ((C74562 + C74563) * C98471 + (C75548 + C75549) * C153600) *
                C153774) *
               C153413 * C153449 -
           (C102461 * C153774 +
            (C79869 * C153600 + (C74559 + C74558) * C98471) * C153800 +
            ((C78843 + C78842) * C153600 +
             (C74249 * C146 + C74266 + C74266 + C153348 * C162 + C74247 * C145 +
              C74267 + C74267 + C74241 * C161) *
                 C98471) *
                C153812) *
               C153413 * C1131) *
              C1134 +
          ((((C74247 * C146 + C74268 + C74268 + C74241 * C162 + C74249 * C147 +
              C74269 + C74269 + C153348 * C163) *
                 C98471 +
             (C79474 + C79475) * C153600) *
                C153812 +
            ((C75020 + C75021) * C98471 + (C79160 + C79161) * C153600) *
                C153800 +
            ((C75022 + C75023) * C98471 + (C94176 + C94177) * C153600) *
                C153774) *
               C153413 * C1131 -
           (((C74249 * C4146 + C75220 + C75220 + C153348 * C4154 +
              C74247 * C4145 + C75221 + C75221 + C74241 * C4153) *
                 C153600 +
             (C75025 + C75024) * C98471) *
                C153774 +
            ((C94177 + C94176) * C153600 + (C75023 + C75022) * C98471) *
                C153800 +
            ((C79161 + C79160) * C153600 + (C75021 + C75020) * C98471) *
                C153812) *
               C153413 * C153449) *
              C1135)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
             C74253 + C74253 + C153348 * C161) *
                C98471 +
            (C78834 + C78835) * C153600) *
               C153812 +
           ((C74550 + C74551) * C98471 + C79864 * C153600) * C153800 +
           C102460 * C153774) *
              C153413 * C1218 -
          (C104204 * C153774 +
           (C76763 * C153600 + (C74553 + C74552) * C98471) * C153800 +
           (C79866 * C153600 + (C74551 + C74550) * C98471) * C153812) *
              C153413 * C1219 +
          (C102460 * C153812 + (C74567 * C98471 + C96600 * C153600) * C153800 +
           ((C74557 + C74556) * C98471 + (C76776 + C76777) * C153600) *
               C153774) *
              C153413 * C1220 -
          (((C74249 * C29033 + C76768 + C76768 + C153348 * C29037 +
             C74247 * C29032 + C76769 + C76769 + C74241 * C29036) *
                C153600 +
            (C75889 + C75888) * C98471) *
               C153774 +
           ((C76777 + C76776) * C153600 + C75874 * C98471) * C153800 +
           C104204 * C153812) *
              C153413 * C1221) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
              C74253 + C74253 + C153348 * C161) *
                 C98471 +
             (C78834 + C78835) * C153600) *
                C153812 +
            ((C74550 + C74551) * C98471 + C79864 * C153600) * C153800 +
            C102460 * C153774) *
               C493 -
           ((C80656 * C153600 + C76763 * C98471) * C153774 +
            (C79865 * C153600 + C79866 * C98471) * C153800 +
            ((C78837 + C78836) * C153600 + (C78835 + C78834) * C98471) *
                C153812) *
               C494 +
           ((C78850 * C98471 + (C78841 + C78840) * C153600) * C153812 +
            (C78764 * C98471 + C80647 * C153600) * C153800 +
            (C81638 * C98471 + (C80669 + C80670) * C153600) * C153774) *
               C495) *
              C1131 +
          (((C79864 * C98471 + C78764 * C153600) * C153812 +
            (C81637 * C98471 + C81638 * C153600) * C153800 +
            (C96600 * C98471 + (C76114 + C76115) * C153600) * C153774) *
               C494 -
           (C104204 * C153774 +
            (C76763 * C153600 + (C74553 + C74552) * C98471) * C153800 +
            (C79866 * C153600 + (C74551 + C74550) * C98471) * C153812) *
               C493 -
           (((C74249 * C32070 + C77296 + C77296 + C153348 * C32072 +
              C74247 * C30195 + C77297 + C77297 + C74241 * C30199) *
                 C153600 +
             (C76115 + C76114) * C98471) *
                C153774 +
            ((C80670 + C80669) * C153600 + C80656 * C98471) * C153800 +
            (C80646 * C153600 + C79865 * C98471) * C153812) *
               C495) *
              C153449) *
         C153378) /
            (p * q * std::sqrt(p + q));
    d2ee[293] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C70421 * C144 + C70430 + C70430 + C153818 * C160 + C70423 * C145 +
              C70431 + C70431 + C153811 * C161 + C70425 * C146 + C70432 +
              C70432 + C153792 * C162 + C70427 * C147 + C70433 + C70433 +
              C153738 * C163) *
                 C98471 +
             (C98934 + C98935 + C98936 + C98937) * C153600) *
                C153501 * C153725 -
            ((C98938 + C98939 + C98940 + C98941) * C153600 +
             (C98937 + C98936 + C98935 + C98934) * C98471) *
                C153501 * C153477) *
               C1131 +
           (((C71699 + C71698 + C71697 + C71696) * C98471 +
             (C72266 + C72267 + C72268 + C72269) * C153600) *
                C153501 * C153477 -
            ((C71696 + C71697 + C71698 + C71699) * C153600 +
             (C70739 + C70738 + C70737 + C70736) * C98471) *
                C153501 * C153725) *
               C153449) *
              C153716 +
          ((((C98942 + C98943 + C98944 + C98945) * C98471 +
             (C98946 + C98947 + C98948 + C98949) * C153600) *
                C153501 * C153477 -
            ((C98945 + C98944 + C98943 + C98942) * C153600 +
             (C70427 * C148 + C70442 + C70442 + C153738 * C164 + C70425 * C147 +
              C70443 + C70443 + C153792 * C163 + C70423 * C146 + C70444 +
              C70444 + C153811 * C162 + C70421 * C145 + C70445 + C70445 +
              C153818 * C161) *
                 C98471) *
                C153501 * C153725) *
               C1131 +
           (((C70744 + C70745 + C70746 + C70747) * C98471 +
             (C71700 + C71701 + C71702 + C71703) * C153600) *
                C153501 * C153725 -
            ((C70427 * C1365 + C70970 + C70970 + C153738 * C1375 +
              C70425 * C1366 + C70971 + C70971 + C153792 * C1376 +
              C70423 * C1367 + C70972 + C70972 + C153811 * C1377 +
              C70421 * C1368 + C70973 + C70973 + C153818 * C1378) *
                 C153600 +
             (C71703 + C71702 + C71701 + C71700) * C98471) *
                C153501 * C153477) *
               C153449) *
              C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
               C74253 + C74253 + C153348 * C161) *
                  C98471 +
              (C78834 + C78835) * C153600) *
                 C153812 +
             ((C74550 + C74551) * C98471 + C79864 * C153600) * C153800 +
             C102460 * C153774) *
                C153725 -
            ((C80656 * C153600 + C76763 * C98471) * C153774 +
             (C79865 * C153600 + C79866 * C98471) * C153800 +
             ((C78837 + C78836) * C153600 + (C78835 + C78834) * C98471) *
                 C153812) *
                C153477) *
               C1131 +
           (((C79864 * C98471 + C78764 * C153600) * C153812 +
             (C81637 * C98471 + C81638 * C153600) * C153800 +
             (C96600 * C98471 + (C76114 + C76115) * C153600) * C153774) *
                C153477 -
            (C104204 * C153774 +
             (C76763 * C153600 + (C74553 + C74552) * C98471) * C153800 +
             (C79866 * C153600 + (C74551 + C74550) * C98471) * C153812) *
                C153725) *
               C153449) *
              C153716 +
          (((((C78842 + C78843) * C98471 + (C78844 + C78845) * C153600) *
                 C153812 +
             (C79867 * C98471 + C79868 * C153600) * C153800 +
             (C94854 * C98471 + (C78464 + C78465) * C153600) * C153774) *
                C153477 -
            (C102461 * C153774 +
             (C79869 * C153600 + (C74559 + C74558) * C98471) * C153800 +
             ((C78843 + C78842) * C153600 +
              (C74249 * C146 + C74266 + C74266 + C153348 * C162 +
               C74247 * C145 + C74267 + C74267 + C74241 * C161) *
                  C98471) *
                 C153812) *
                C153725) *
               C1131 +
           ((((C74558 + C74559) * C98471 + C79867 * C153600) * C153812 +
             ((C74560 + C74561) * C98471 + C94854 * C153600) * C153800 +
             ((C74562 + C74563) * C98471 + (C75548 + C75549) * C153600) *
                 C153774) *
                C153725 -
            (((C74249 * C4833 + C74792 + C74792 + C153348 * C4839 +
               C74247 * C4834 + C74793 + C74793 + C74241 * C4840) *
                  C153600 +
              (C75549 + C75548) * C98471) *
                 C153774 +
             ((C78465 + C78464) * C153600 + C93583 * C98471) * C153800 +
             (C78797 * C153600 + C79869 * C98471) * C153812) *
                C153477) *
               C153449) *
              C153384)) /
            (p * q * std::sqrt(p + q));
    d2ee[294] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C70421 * C144 + C70430 + C70430 + C153818 * C160 + C70423 * C145 +
             C70431 + C70431 + C153811 * C161 + C70425 * C146 + C70432 +
             C70432 + C153792 * C162 + C70427 * C147 + C70433 + C70433 +
             C153738 * C163) *
                C98471 +
            (C98934 + C98935 + C98936 + C98937) * C153600) *
               C153501 * C153413 * C1131 -
           ((C71696 + C71697 + C71698 + C71699) * C153600 +
            (C70739 + C70738 + C70737 + C70736) * C98471) *
               C153501 * C153413 * C153449) *
              C1133 +
          (((C70744 + C70745 + C70746 + C70747) * C98471 +
            (C71700 + C71701 + C71702 + C71703) * C153600) *
               C153501 * C153413 * C153449 -
           ((C98945 + C98944 + C98943 + C98942) * C153600 +
            (C70427 * C148 + C70442 + C70442 + C153738 * C164 + C70425 * C147 +
             C70443 + C70443 + C153792 * C163 + C70423 * C146 + C70444 +
             C70444 + C153811 * C162 + C70421 * C145 + C70445 + C70445 +
             C153818 * C161) *
                C98471) *
               C153501 * C153413 * C1131) *
              C1134 +
          (((C70421 * C146 + C70446 + C70446 + C153818 * C162 + C70423 * C147 +
             C70447 + C70447 + C153811 * C163 + C70425 * C148 + C70448 +
             C70448 + C153792 * C164 + C70427 * C149 + C70449 + C70449 +
             C153738 * C165) *
                C98471 +
            (C99358 + C99359 + C99360 + C99361) * C153600) *
               C153501 * C153413 * C1131 -
           ((C70427 * C986 + C71390 + C71390 + C153738 * C998 + C70425 * C985 +
             C71391 + C71391 + C153792 * C997 + C70423 * C984 + C71392 +
             C71392 + C153811 * C996 + C70421 * C983 + C71393 + C71393 +
             C153818 * C995) *
                C153600 +
            (C71195 + C71194 + C71193 + C71192) * C98471) *
               C153501 * C153413 * C153449) *
              C1135)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C70421 * C144 + C70430 + C70430 + C153818 * C160 + C70423 * C145 +
            C70431 + C70431 + C153811 * C161 + C70425 * C146 + C70432 + C70432 +
            C153792 * C162 + C70427 * C147 + C70433 + C70433 + C153738 * C163) *
               C98471 +
           (C98934 + C98935 + C98936 + C98937) * C153600) *
              C153501 * C153413 * C1218 -
          ((C71696 + C71697 + C71698 + C71699) * C153600 +
           (C70739 + C70738 + C70737 + C70736) * C98471) *
              C153501 * C153413 * C1219 +
          ((C70743 + C70742 + C70741 + C70740) * C98471 +
           (C72936 + C72937 + C72938 + C72939) * C153600) *
              C153501 * C153413 * C1220 -
          ((C70427 * C4146 + C72924 + C72924 + C153738 * C4154 +
            C70425 * C4145 + C72925 + C72925 + C153792 * C4153 +
            C70423 * C4144 + C72926 + C72926 + C153811 * C4152 +
            C70421 * C4143 + C72927 + C72927 + C153818 * C4151) *
               C153600 +
           (C72051 + C72050 + C72049 + C72048) * C98471) *
              C153501 * C153413 * C1221) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
              C74253 + C74253 + C153348 * C161) *
                 C98471 +
             (C78834 + C78835) * C153600) *
                C153812 +
            ((C74550 + C74551) * C98471 + C79864 * C153600) * C153800 +
            C102460 * C153774) *
               C153413 * C1131 -
           ((C76762 * C153600 + C75875 * C98471) * C153774 +
            (C76763 * C153600 + (C74553 + C74552) * C98471) * C153800 +
            (C79866 * C153600 + (C74551 + C74550) * C98471) * C153812) *
               C153413 * C153449) *
              C1133 +
          ((((C74558 + C74559) * C98471 + C79867 * C153600) * C153812 +
            ((C74560 + C74561) * C98471 + C94854 * C153600) * C153800 +
            ((C74562 + C74563) * C98471 + (C75548 + C75549) * C153600) *
                C153774) *
               C153413 * C153449 -
           (C102461 * C153774 +
            (C79869 * C153600 + (C74559 + C74558) * C98471) * C153800 +
            ((C78843 + C78842) * C153600 +
             (C74249 * C146 + C74266 + C74266 + C153348 * C162 + C74247 * C145 +
              C74267 + C74267 + C74241 * C161) *
                 C98471) *
                C153812) *
               C153413 * C1131) *
              C1134 +
          ((((C74247 * C146 + C74268 + C74268 + C74241 * C162 + C74249 * C147 +
              C74269 + C74269 + C153348 * C163) *
                 C98471 +
             (C79474 + C79475) * C153600) *
                C153812 +
            ((C75020 + C75021) * C98471 + (C79160 + C79161) * C153600) *
                C153800 +
            ((C75022 + C75023) * C98471 + (C94176 + C94177) * C153600) *
                C153774) *
               C153413 * C1131 -
           (((C74249 * C4146 + C75220 + C75220 + C153348 * C4154 +
              C74247 * C4145 + C75221 + C75221 + C74241 * C4153) *
                 C153600 +
             (C75025 + C75024) * C98471) *
                C153774 +
            ((C94177 + C94176) * C153600 + (C75023 + C75022) * C98471) *
                C153800 +
            ((C79161 + C79160) * C153600 + (C75021 + C75020) * C98471) *
                C153812) *
               C153413 * C153449) *
              C1135)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
             C74253 + C74253 + C153348 * C161) *
                C98471 +
            (C78834 + C78835) * C153600) *
               C153812 +
           ((C74550 + C74551) * C98471 + C79864 * C153600) * C153800 +
           C102460 * C153774) *
              C153413 * C1218 -
          (C104204 * C153774 +
           (C76763 * C153600 + (C74553 + C74552) * C98471) * C153800 +
           (C79866 * C153600 + (C74551 + C74550) * C98471) * C153812) *
              C153413 * C1219 +
          (C102460 * C153812 + (C74567 * C98471 + C96600 * C153600) * C153800 +
           ((C74557 + C74556) * C98471 + (C76776 + C76777) * C153600) *
               C153774) *
              C153413 * C1220 -
          (((C74249 * C29033 + C76768 + C76768 + C153348 * C29037 +
             C74247 * C29032 + C76769 + C76769 + C74241 * C29036) *
                C153600 +
            (C75889 + C75888) * C98471) *
               C153774 +
           ((C76777 + C76776) * C153600 + C75874 * C98471) * C153800 +
           C104204 * C153812) *
              C153413 * C1221) *
         C153378) /
            (p * q * std::sqrt(p + q));
    d2ee[295] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C70421 * C144 + C70430 + C70430 + C153818 * C160 + C70423 * C145 +
              C70431 + C70431 + C153811 * C161 + C70425 * C146 + C70432 +
              C70432 + C153792 * C162 + C70427 * C147 + C70433 + C70433 +
              C153738 * C163) *
                 C98471 +
             (C98934 + C98935 + C98936 + C98937) * C153600) *
                C153501 * C1938 -
            ((C98938 + C98939 + C98940 + C98941) * C153600 +
             (C98937 + C98936 + C98935 + C98934) * C98471) *
                C153501 * C153477) *
               C153724 +
           (((C71699 + C71698 + C71697 + C71696) * C98471 +
             (C72266 + C72267 + C72268 + C72269) * C153600) *
                C153501 * C153477 -
            ((C71696 + C71697 + C71698 + C71699) * C153600 +
             (C70739 + C70738 + C70737 + C70736) * C98471) *
                C153501 * C1938) *
               C153449) *
              C153716 +
          ((((C98942 + C98943 + C98944 + C98945) * C98471 +
             (C98946 + C98947 + C98948 + C98949) * C153600) *
                C153501 * C153477 -
            ((C98945 + C98944 + C98943 + C98942) * C153600 +
             (C70427 * C148 + C70442 + C70442 + C153738 * C164 + C70425 * C147 +
              C70443 + C70443 + C153792 * C163 + C70423 * C146 + C70444 +
              C70444 + C153811 * C162 + C70421 * C145 + C70445 + C70445 +
              C153818 * C161) *
                 C98471) *
                C153501 * C1938) *
               C153724 +
           (((C70744 + C70745 + C70746 + C70747) * C98471 +
             (C71700 + C71701 + C71702 + C71703) * C153600) *
                C153501 * C1938 -
            ((C70427 * C1365 + C70970 + C70970 + C153738 * C1375 +
              C70425 * C1366 + C70971 + C70971 + C153792 * C1376 +
              C70423 * C1367 + C70972 + C70972 + C153811 * C1377 +
              C70421 * C1368 + C70973 + C70973 + C153818 * C1378) *
                 C153600 +
             (C71703 + C71702 + C71701 + C71700) * C98471) *
                C153501 * C153477) *
               C153449) *
              C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
               C74253 + C74253 + C153348 * C161) *
                  C98471 +
              (C78834 + C78835) * C153600) *
                 C153812 +
             ((C74550 + C74551) * C98471 + C79864 * C153600) * C153800 +
             C102460 * C153774) *
                C1938 -
            (C105463 * C153774 +
             (C79865 * C153600 + C79866 * C98471) * C153800 +
             ((C78837 + C78836) * C153600 + (C78835 + C78834) * C98471) *
                 C153812) *
                C153477) *
               C153724 +
           (((C79864 * C98471 + C78764 * C153600) * C153812 +
             (C81637 * C98471 + C81638 * C153600) * C153800 +
             (C96600 * C98471 + (C76114 + C76115) * C153600) * C153774) *
                C153477 -
            (C104204 * C153774 +
             (C76763 * C153600 + (C74553 + C74552) * C98471) * C153800 +
             (C79866 * C153600 + (C74551 + C74550) * C98471) * C153812) *
                C1938) *
               C153449) *
              C153716 +
          (((((C78842 + C78843) * C98471 + (C78844 + C78845) * C153600) *
                 C153812 +
             (C79867 * C98471 + C79868 * C153600) * C153800 +
             (C94854 * C98471 + (C78464 + C78465) * C153600) * C153774) *
                C153477 -
            (C102461 * C153774 +
             (C79869 * C153600 + (C74559 + C74558) * C98471) * C153800 +
             ((C78843 + C78842) * C153600 +
              (C74249 * C146 + C74266 + C74266 + C153348 * C162 +
               C74247 * C145 + C74267 + C74267 + C74241 * C161) *
                  C98471) *
                 C153812) *
                C1938) *
               C153724 +
           ((((C74558 + C74559) * C98471 + C79867 * C153600) * C153812 +
             ((C74560 + C74561) * C98471 + C94854 * C153600) * C153800 +
             ((C74562 + C74563) * C98471 + (C75548 + C75549) * C153600) *
                 C153774) *
                C1938 -
            (((C74249 * C4833 + C74792 + C74792 + C153348 * C4839 +
               C74247 * C4834 + C74793 + C74793 + C74241 * C4840) *
                  C153600 +
              (C75549 + C75548) * C98471) *
                 C153774 +
             ((C78465 + C78464) * C153600 + C93583 * C98471) * C153800 +
             (C78797 * C153600 + C79869 * C98471) * C153812) *
                C153477) *
               C153449) *
              C153384)) /
            (p * q * std::sqrt(p + q));
    d2ee[296] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C70421 * C144 + C70430 + C70430 + C153818 * C160 + C70423 * C145 +
             C70431 + C70431 + C153811 * C161 + C70425 * C146 + C70432 +
             C70432 + C153792 * C162 + C70427 * C147 + C70433 + C70433 +
             C153738 * C163) *
                C98471 +
            (C98934 + C98935 + C98936 + C98937) * C153600) *
               C153501 * C153797 -
           ((C98938 + C98939 + C98940 + C98941) * C153600 +
            (C98937 + C98936 + C98935 + C98934) * C98471) *
               C153501 * C153798 +
           ((C98941 + C98940 + C98939 + C98938) * C98471 +
            (C101322 + C101323 + C101324 + C101325) * C153600) *
               C153501 * C2454) *
              C153724 +
          (((C71699 + C71698 + C71697 + C71696) * C98471 +
            (C72266 + C72267 + C72268 + C72269) * C153600) *
               C153501 * C153798 -
           ((C71696 + C71697 + C71698 + C71699) * C153600 +
            (C70739 + C70738 + C70737 + C70736) * C98471) *
               C153501 * C153797 -
           ((C70427 * C8437 + C73458 + C73458 + C153738 * C8439 +
             C70425 * C6216 + C73459 + C73459 + C153792 * C6228 +
             C70423 * C6217 + C73460 + C73460 + C153811 * C6229 +
             C70421 * C6218 + C73461 + C73461 + C153818 * C6230) *
                C153600 +
            (C72269 + C72268 + C72267 + C72266) * C98471) *
               C153501 * C2454) *
              C153449) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
              C74253 + C74253 + C153348 * C161) *
                 C98471 +
             (C78834 + C78835) * C153600) *
                C153812 +
            ((C74550 + C74551) * C98471 + C79864 * C153600) * C153800 +
            C102460 * C153774) *
               C153797 -
           (C105463 * C153774 + (C79865 * C153600 + C79866 * C98471) * C153800 +
            ((C78837 + C78836) * C153600 + (C78835 + C78834) * C98471) *
                C153812) *
               C153798 +
           ((C78850 * C98471 + (C78841 + C78840) * C153600) * C153812 +
            (C78764 * C98471 + C80647 * C153600) * C153800 +
            (C81638 * C98471 + (C80669 + C80670) * C153600) * C153774) *
               C2454) *
              C153724 +
          (((C79864 * C98471 + C78764 * C153600) * C153812 +
            (C81637 * C98471 + C81638 * C153600) * C153800 +
            (C96600 * C98471 + (C76114 + C76115) * C153600) * C153774) *
               C153798 -
           (C104204 * C153774 +
            (C76763 * C153600 + (C74553 + C74552) * C98471) * C153800 +
            (C79866 * C153600 + (C74551 + C74550) * C98471) * C153812) *
               C153797 -
           (((C74249 * C32070 + C77296 + C77296 + C153348 * C32072 +
              C74247 * C30195 + C77297 + C77297 + C74241 * C30199) *
                 C153600 +
             (C76115 + C76114) * C98471) *
                C153774 +
            ((C80670 + C80669) * C153600 + C80656 * C98471) * C153800 +
            (C80646 * C153600 + C79865 * C98471) * C153812) *
               C2454) *
              C153449) *
         C153378) /
            (p * q * std::sqrt(p + q));
    d2ee[297] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C70421 * C144 + C70430 + C70430 + C153818 * C160 + C70423 * C145 +
             C70431 + C70431 + C153811 * C161 + C70425 * C146 + C70432 +
             C70432 + C153792 * C162 + C70427 * C147 + C70433 + C70433 +
             C153738 * C163) *
                C98471 +
            (C98934 + C98935 + C98936 + C98937) * C153600) *
               C153501 * C1938 -
           ((C98938 + C98939 + C98940 + C98941) * C153600 +
            (C98937 + C98936 + C98935 + C98934) * C98471) *
               C153501 * C153477) *
              C310 +
          (((C71699 + C71698 + C71697 + C71696) * C98471 +
            (C72266 + C72267 + C72268 + C72269) * C153600) *
               C153501 * C153477 -
           ((C71696 + C71697 + C71698 + C71699) * C153600 +
            (C70739 + C70738 + C70737 + C70736) * C98471) *
               C153501 * C1938) *
              C311 +
          (((C70743 + C70742 + C70741 + C70740) * C98471 +
            (C72936 + C72937 + C72938 + C72939) * C153600) *
               C153501 * C1938 -
           ((C70427 * C3330 + C72254 + C72254 + C153738 * C3338 +
             C70425 * C3329 + C72255 + C72255 + C153792 * C3337 +
             C70423 * C3328 + C72256 + C72256 + C153811 * C3336 +
             C70421 * C3327 + C72257 + C72257 + C153818 * C3335) *
                C153600 +
            (C72939 + C72938 + C72937 + C72936) * C98471) *
               C153501 * C153477) *
              C312) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C70421 * C144 + C70430 + C70430 + C153818 * C160 + C70423 * C145 +
             C70431 + C70431 + C153811 * C161 + C70425 * C146 + C70432 +
             C70432 + C153792 * C162 + C70427 * C147 + C70433 + C70433 +
             C153738 * C163) *
                C98471 +
            (C98934 + C98935 + C98936 + C98937) * C153600) *
               C153501 * C1938 -
           ((C98938 + C98939 + C98940 + C98941) * C153600 +
            (C98937 + C98936 + C98935 + C98934) * C98471) *
               C153501 * C153477) *
              C153397 * C1133 +
          (((C98942 + C98943 + C98944 + C98945) * C98471 +
            (C98946 + C98947 + C98948 + C98949) * C153600) *
               C153501 * C153477 -
           ((C98945 + C98944 + C98943 + C98942) * C153600 +
            (C70427 * C148 + C70442 + C70442 + C153738 * C164 + C70425 * C147 +
             C70443 + C70443 + C153792 * C163 + C70423 * C146 + C70444 +
             C70444 + C153811 * C162 + C70421 * C145 + C70445 + C70445 +
             C153818 * C161) *
                C98471) *
               C153501 * C1938) *
              C153397 * C1134 +
          (((C70421 * C146 + C70446 + C70446 + C153818 * C162 + C70423 * C147 +
             C70447 + C70447 + C153811 * C163 + C70425 * C148 + C70448 +
             C70448 + C153792 * C164 + C70427 * C149 + C70449 + C70449 +
             C153738 * C165) *
                C98471 +
            (C99358 + C99359 + C99360 + C99361) * C153600) *
               C153501 * C1938 -
           ((C70427 * C507 + C99346 + C99346 + C153738 * C531 + C70425 * C505 +
             C99347 + C99347 + C153792 * C529 + C70423 * C504 + C99348 +
             C99348 + C153811 * C528 + C70421 * C503 + C99349 + C99349 +
             C153818 * C527) *
                C153600 +
            (C99361 + C99360 + C99359 + C99358) * C98471) *
               C153501 * C153477) *
              C153397 * C1135)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C70421 * C144 + C70430 + C70430 + C153818 * C160 + C70423 * C145 +
            C70431 + C70431 + C153811 * C161 + C70425 * C146 + C70432 + C70432 +
            C153792 * C162 + C70427 * C147 + C70433 + C70433 + C153738 * C163) *
               C98471 +
           (C98934 + C98935 + C98936 + C98937) * C153600) *
              C153501 * C2144 -
          ((C98938 + C98939 + C98940 + C98941) * C153600 +
           (C98937 + C98936 + C98935 + C98934) * C98471) *
              C153501 * C2145 +
          ((C98941 + C98940 + C98939 + C98938) * C98471 +
           (C101322 + C101323 + C101324 + C101325) * C153600) *
              C153501 * C2146 -
          ((C70427 * C7563 + C101310 + C101310 + C153738 * C7571 +
            C70425 * C7562 + C101311 + C101311 + C153792 * C7570 +
            C70423 * C7561 + C101312 + C101312 + C153811 * C7569 +
            C70421 * C7560 + C101313 + C101313 + C153818 * C7568) *
               C153600 +
           (C101325 + C101324 + C101323 + C101322) * C98471) *
              C153501 * C2147) *
         C153397 * C153378) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
              C74253 + C74253 + C153348 * C161) *
                 C98471 +
             (C78834 + C78835) * C153600) *
                C153812 +
            ((C74550 + C74551) * C98471 + C79864 * C153600) * C153800 +
            C102460 * C153774) *
               C1938 -
           (C105463 * C153774 + (C79865 * C153600 + C79866 * C98471) * C153800 +
            ((C78837 + C78836) * C153600 + (C78835 + C78834) * C98471) *
                C153812) *
               C153477) *
              C153397 * C1133 +
          ((((C78842 + C78843) * C98471 + (C78844 + C78845) * C153600) *
                C153812 +
            (C79867 * C98471 + C79868 * C153600) * C153800 +
            (C94854 * C98471 + (C78464 + C78465) * C153600) * C153774) *
               C153477 -
           (C102461 * C153774 +
            (C79869 * C153600 + (C74559 + C74558) * C98471) * C153800 +
            ((C78843 + C78842) * C153600 +
             (C74249 * C146 + C74266 + C74266 + C153348 * C162 + C74247 * C145 +
              C74267 + C74267 + C74241 * C161) *
                 C98471) *
                C153812) *
               C1938) *
              C153397 * C1134 +
          ((((C74247 * C146 + C74268 + C74268 + C74241 * C162 + C74249 * C147 +
              C74269 + C74269 + C153348 * C163) *
                 C98471 +
             (C79474 + C79475) * C153600) *
                C153812 +
            ((C75020 + C75021) * C98471 + (C79160 + C79161) * C153600) *
                C153800 +
            ((C75022 + C75023) * C98471 + (C94176 + C94177) * C153600) *
                C153774) *
               C1938 -
           (((C74249 * C3330 + C79150 + C79150 + C153348 * C3338 +
              C74247 * C3329 + C79151 + C79151 + C74241 * C3337) *
                 C153600 +
             (C94177 + C94176) * C98471) *
                C153774 +
            ((C79163 + C79162) * C153600 + (C79161 + C79160) * C98471) *
                C153800 +
            ((C79477 + C79476) * C153600 + (C79475 + C79474) * C98471) *
                C153812) *
               C153477) *
              C153397 * C1135)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
              C74253 + C74253 + C153348 * C161) *
                 C98471 +
             (C78834 + C78835) * C153600) *
                C153812 +
            ((C74550 + C74551) * C98471 + C79864 * C153600) * C153800 +
            C102460 * C153774) *
               C1938 -
           (C105463 * C153774 + (C79865 * C153600 + C79866 * C98471) * C153800 +
            ((C78837 + C78836) * C153600 + (C78835 + C78834) * C98471) *
                C153812) *
               C153477) *
              C310 +
          (((C79864 * C98471 + C78764 * C153600) * C153812 +
            (C81637 * C98471 + C81638 * C153600) * C153800 +
            (C96600 * C98471 + (C76114 + C76115) * C153600) * C153774) *
               C153477 -
           (C104204 * C153774 +
            (C76763 * C153600 + (C74553 + C74552) * C98471) * C153800 +
            (C79866 * C153600 + (C74551 + C74550) * C98471) * C153812) *
               C1938) *
              C311 +
          ((C102460 * C153812 + (C74567 * C98471 + C96600 * C153600) * C153800 +
            ((C74557 + C74556) * C98471 + (C76776 + C76777) * C153600) *
                C153774) *
               C1938 -
           (((C74249 * C28571 + C76096 + C76096 + C153348 * C28575 +
              C74247 * C28570 + C76097 + C76097 + C74241 * C28574) *
                 C153600 +
             (C76777 + C76776) * C98471) *
                C153774 +
            ((C76115 + C76114) * C153600 + C76762 * C98471) * C153800 +
            C105463 * C153812) *
               C153477) *
              C312) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
             C74253 + C74253 + C153348 * C161) *
                C98471 +
            (C78834 + C78835) * C153600) *
               C153812 +
           ((C74550 + C74551) * C98471 + C79864 * C153600) * C153800 +
           C102460 * C153774) *
              C2144 -
          (C105463 * C153774 + (C79865 * C153600 + C79866 * C98471) * C153800 +
           ((C78837 + C78836) * C153600 + (C78835 + C78834) * C98471) *
               C153812) *
              C2145 +
          ((C78850 * C98471 + (C78841 + C78840) * C153600) * C153812 +
           (C78764 * C98471 + C80647 * C153600) * C153800 +
           (C81638 * C98471 + (C80669 + C80670) * C153600) * C153774) *
              C2146 -
          (((C74249 * C31240 + C80657 + C80657 + C153348 * C31244 +
             C74247 * C31239 + C80658 + C80658 + C74241 * C31243) *
                C153600 +
            (C80670 + C80669) * C98471) *
               C153774 +
           ((C80668 + C80667) * C153600 + C80646 * C98471) * C153800 +
           ((C82427 + C82426) * C153600 + C82413 * C98471) * C153812) *
              C2147) *
         C153397 * C153378) /
            (p * q * std::sqrt(p + q));
    d2ee[298] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C70421 * C144 + C70430 + C70430 + C153818 * C160 + C70423 * C145 +
             C70431 + C70431 + C153811 * C161 + C70425 * C146 + C70432 +
             C70432 + C153792 * C162 + C70427 * C147 + C70433 + C70433 +
             C153738 * C163) *
                C98471 +
            (C98934 + C98935 + C98936 + C98937) * C153600) *
               C153501 * C153797 -
           ((C98938 + C98939 + C98940 + C98941) * C153600 +
            (C98937 + C98936 + C98935 + C98934) * C98471) *
               C153501 * C153798 +
           ((C98941 + C98940 + C98939 + C98938) * C98471 +
            (C101322 + C101323 + C101324 + C101325) * C153600) *
               C153501 * C2454) *
              C153397 * C153716 +
          (((C98942 + C98943 + C98944 + C98945) * C98471 +
            (C98946 + C98947 + C98948 + C98949) * C153600) *
               C153501 * C153798 -
           ((C98945 + C98944 + C98943 + C98942) * C153600 +
            (C70427 * C148 + C70442 + C70442 + C153738 * C164 + C70425 * C147 +
             C70443 + C70443 + C153792 * C163 + C70423 * C146 + C70444 +
             C70444 + C153811 * C162 + C70421 * C145 + C70445 + C70445 +
             C153818 * C161) *
                C98471) *
               C153501 * C153797 -
           ((C70427 * C2148 + C98898 + C98898 + C153738 * C2158 +
             C70425 * C2149 + C98899 + C98899 + C153792 * C2159 +
             C70423 * C2150 + C98900 + C98900 + C153811 * C2160 +
             C70421 * C2151 + C98901 + C98901 + C153818 * C2161) *
                C153600 +
            (C98949 + C98948 + C98947 + C98946) * C98471) *
               C153501 * C2454) *
              C153397 * C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
              C74253 + C74253 + C153348 * C161) *
                 C98471 +
             (C78834 + C78835) * C153600) *
                C153812 +
            ((C74550 + C74551) * C98471 + C79864 * C153600) * C153800 +
            C102460 * C153774) *
               C153797 -
           (C105463 * C153774 + (C79865 * C153600 + C79866 * C98471) * C153800 +
            ((C78837 + C78836) * C153600 + (C78835 + C78834) * C98471) *
                C153812) *
               C153798 +
           ((C78850 * C98471 + (C78841 + C78840) * C153600) * C153812 +
            (C78764 * C98471 + C80647 * C153600) * C153800 +
            (C81638 * C98471 + (C80669 + C80670) * C153600) * C153774) *
               C2454) *
              C153397 * C153716 +
          ((((C78842 + C78843) * C98471 + (C78844 + C78845) * C153600) *
                C153812 +
            (C79867 * C98471 + C79868 * C153600) * C153800 +
            (C94854 * C98471 + (C78464 + C78465) * C153600) * C153774) *
               C153798 -
           (C102461 * C153774 +
            (C79869 * C153600 + (C74559 + C74558) * C98471) * C153800 +
            ((C78843 + C78842) * C153600 +
             (C74249 * C146 + C74266 + C74266 + C153348 * C162 + C74247 * C145 +
              C74267 + C74267 + C74241 * C161) *
                 C98471) *
                C153812) *
               C153797 -
           (((C74249 * C6213 + C79870 + C79870 + C153348 * C6225 +
              C74247 * C6214 + C79871 + C79871 + C74241 * C6226) *
                 C153600 +
             (C78465 + C78464) * C98471) *
                C153774 +
            ((C78849 + C78848) * C153600 + C78797 * C98471) * C153800 +
            ((C78847 + C78846) * C153600 + C78851 * C98471) * C153812) *
               C2454) *
              C153397 * C153384)) /
            (p * q * std::sqrt(p + q));
    d2ee[299] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C70421 * C144 + C70430 + C70430 + C153818 * C160 + C70423 * C145 +
             C70431 + C70431 + C153811 * C161 + C70425 * C146 + C70432 +
             C70432 + C153792 * C162 + C70427 * C147 + C70433 + C70433 +
             C153738 * C163) *
                C98471 +
            (C98934 + C98935 + C98936 + C98937) * C153600) *
               C153501 * C1938 -
           ((C98938 + C98939 + C98940 + C98941) * C153600 +
            (C98937 + C98936 + C98935 + C98934) * C98471) *
               C153501 * C153477) *
              C153397 * C1133 +
          (((C98942 + C98943 + C98944 + C98945) * C98471 +
            (C98946 + C98947 + C98948 + C98949) * C153600) *
               C153501 * C153477 -
           ((C98945 + C98944 + C98943 + C98942) * C153600 +
            (C70427 * C148 + C70442 + C70442 + C153738 * C164 + C70425 * C147 +
             C70443 + C70443 + C153792 * C163 + C70423 * C146 + C70444 +
             C70444 + C153811 * C162 + C70421 * C145 + C70445 + C70445 +
             C153818 * C161) *
                C98471) *
               C153501 * C1938) *
              C153397 * C1134 +
          (((C70421 * C146 + C70446 + C70446 + C153818 * C162 + C70423 * C147 +
             C70447 + C70447 + C153811 * C163 + C70425 * C148 + C70448 +
             C70448 + C153792 * C164 + C70427 * C149 + C70449 + C70449 +
             C153738 * C165) *
                C98471 +
            (C99358 + C99359 + C99360 + C99361) * C153600) *
               C153501 * C1938 -
           ((C70427 * C507 + C99346 + C99346 + C153738 * C531 + C70425 * C505 +
             C99347 + C99347 + C153792 * C529 + C70423 * C504 + C99348 +
             C99348 + C153811 * C528 + C70421 * C503 + C99349 + C99349 +
             C153818 * C527) *
                C153600 +
            (C99361 + C99360 + C99359 + C99358) * C98471) *
               C153501 * C153477) *
              C153397 * C1135)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C70421 * C144 + C70430 + C70430 + C153818 * C160 + C70423 * C145 +
             C70431 + C70431 + C153811 * C161 + C70425 * C146 + C70432 +
             C70432 + C153792 * C162 + C70427 * C147 + C70433 + C70433 +
             C153738 * C163) *
                C98471 +
            (C98934 + C98935 + C98936 + C98937) * C153600) *
               C153501 * C1938 -
           ((C98938 + C98939 + C98940 + C98941) * C153600 +
            (C98937 + C98936 + C98935 + C98934) * C98471) *
               C153501 * C153477) *
              C310 +
          (((C71699 + C71698 + C71697 + C71696) * C98471 +
            (C72266 + C72267 + C72268 + C72269) * C153600) *
               C153501 * C153477 -
           ((C71696 + C71697 + C71698 + C71699) * C153600 +
            (C70739 + C70738 + C70737 + C70736) * C98471) *
               C153501 * C1938) *
              C311 +
          (((C70743 + C70742 + C70741 + C70740) * C98471 +
            (C72936 + C72937 + C72938 + C72939) * C153600) *
               C153501 * C1938 -
           ((C70427 * C3330 + C72254 + C72254 + C153738 * C3338 +
             C70425 * C3329 + C72255 + C72255 + C153792 * C3337 +
             C70423 * C3328 + C72256 + C72256 + C153811 * C3336 +
             C70421 * C3327 + C72257 + C72257 + C153818 * C3335) *
                C153600 +
            (C72939 + C72938 + C72937 + C72936) * C98471) *
               C153501 * C153477) *
              C312) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
              C74253 + C74253 + C153348 * C161) *
                 C98471 +
             (C78834 + C78835) * C153600) *
                C153812 +
            ((C74550 + C74551) * C98471 + C79864 * C153600) * C153800 +
            C102460 * C153774) *
               C1938 -
           (C105463 * C153774 + (C79865 * C153600 + C79866 * C98471) * C153800 +
            ((C78837 + C78836) * C153600 + (C78835 + C78834) * C98471) *
                C153812) *
               C153477) *
              C153397 * C1133 +
          ((((C78842 + C78843) * C98471 + (C78844 + C78845) * C153600) *
                C153812 +
            (C79867 * C98471 + C79868 * C153600) * C153800 +
            (C94854 * C98471 + (C78464 + C78465) * C153600) * C153774) *
               C153477 -
           (C102461 * C153774 +
            (C79869 * C153600 + (C74559 + C74558) * C98471) * C153800 +
            ((C78843 + C78842) * C153600 +
             (C74249 * C146 + C74266 + C74266 + C153348 * C162 + C74247 * C145 +
              C74267 + C74267 + C74241 * C161) *
                 C98471) *
                C153812) *
               C1938) *
              C153397 * C1134 +
          ((((C74247 * C146 + C74268 + C74268 + C74241 * C162 + C74249 * C147 +
              C74269 + C74269 + C153348 * C163) *
                 C98471 +
             (C79474 + C79475) * C153600) *
                C153812 +
            ((C75020 + C75021) * C98471 + (C79160 + C79161) * C153600) *
                C153800 +
            ((C75022 + C75023) * C98471 + (C94176 + C94177) * C153600) *
                C153774) *
               C1938 -
           (((C74249 * C3330 + C79150 + C79150 + C153348 * C3338 +
              C74247 * C3329 + C79151 + C79151 + C74241 * C3337) *
                 C153600 +
             (C94177 + C94176) * C98471) *
                C153774 +
            ((C79163 + C79162) * C153600 + (C79161 + C79160) * C98471) *
                C153800 +
            ((C79477 + C79476) * C153600 + (C79475 + C79474) * C98471) *
                C153812) *
               C153477) *
              C153397 * C1135)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C74247 * C144 + C74252 + C74252 + C74241 * C160 + C74249 * C145 +
              C74253 + C74253 + C153348 * C161) *
                 C98471 +
             (C78834 + C78835) * C153600) *
                C153812 +
            ((C74550 + C74551) * C98471 + C79864 * C153600) * C153800 +
            C102460 * C153774) *
               C1938 -
           (C105463 * C153774 + (C79865 * C153600 + C79866 * C98471) * C153800 +
            ((C78837 + C78836) * C153600 + (C78835 + C78834) * C98471) *
                C153812) *
               C153477) *
              C310 +
          (((C79864 * C98471 + C78764 * C153600) * C153812 +
            (C81637 * C98471 + C81638 * C153600) * C153800 +
            (C96600 * C98471 + (C76114 + C76115) * C153600) * C153774) *
               C153477 -
           (C104204 * C153774 +
            (C76763 * C153600 + (C74553 + C74552) * C98471) * C153800 +
            (C79866 * C153600 + (C74551 + C74550) * C98471) * C153812) *
               C1938) *
              C311 +
          ((C102460 * C153812 + (C74567 * C98471 + C96600 * C153600) * C153800 +
            ((C74557 + C74556) * C98471 + (C76776 + C76777) * C153600) *
                C153774) *
               C1938 -
           (((C74249 * C28571 + C76096 + C76096 + C153348 * C28575 +
              C74247 * C28570 + C76097 + C76097 + C74241 * C28574) *
                 C153600 +
             (C76777 + C76776) * C98471) *
                C153774 +
            ((C76115 + C76114) * C153600 + C76762 * C98471) * C153800 +
            C105463 * C153812) *
               C153477) *
              C312) *
         C153378) /
            (p * q * std::sqrt(p + q));
    d2ee[300] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C11268 * C144 + C11277 + C11277 + C11262 * C160 + C11270 * C145 +
             C11278 + C11278 + C11263 * C161 + C11272 * C146 + C11279 + C11279 +
             C11264 * C162 + C11274 * C147 + C11280 + C11280 + C153738 * C163) *
                C153513 * C153739 +
            (C11583 + C11584 + C11585 + C11586) * C153513 * C153560) *
               C153413 * C153724 -
           ((C11587 + C11588 + C11589 + C11590) * C153513 * C153560 +
            (C11586 + C11585 + C11584 + C11583) * C153513 * C153739) *
               C153413 * C153449) *
              C153793 +
          (((C11591 + C11592 + C11593 + C11594) * C153513 * C153739 +
            (C11595 + C11596 + C11597 + C11598) * C153513 * C153560) *
               C153413 * C153449 -
           ((C11594 + C11593 + C11592 + C11591) * C153513 * C153560 +
            (C11274 * C148 + C11289 + C11289 + C153738 * C164 + C11272 * C147 +
             C11290 + C11290 + C11264 * C163 + C11270 * C146 + C11291 + C11291 +
             C11263 * C162 + C11268 * C145 + C11292 + C11292 + C11262 * C161) *
                C153513 * C153739) *
               C153413 * C153724) *
              C153794 +
          (((C11268 * C146 + C11293 + C11293 + C11262 * C162 + C11270 * C147 +
             C11294 + C11294 + C11263 * C163 + C11272 * C148 + C11295 + C11295 +
             C11264 * C164 + C11274 * C149 + C11296 + C11296 + C153738 * C165) *
                C153513 * C153739 +
            (C12039 + C12040 + C12041 + C12042) * C153513 * C153560) *
               C153413 * C153724 -
           ((C11274 * C326 + C12027 + C12027 + C153738 * C350 + C11272 * C324 +
             C12028 + C12028 + C11264 * C348 + C11270 * C323 + C12029 + C12029 +
             C11263 * C347 + C11268 * C322 + C12030 + C12030 + C11262 * C346) *
                C153513 * C153560 +
            (C12042 + C12041 + C12040 + C12039) * C153513 * C153739) *
               C153413 * C153449) *
              C678)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C34887 * C144 + C34892 + C34892 + C153705 * C160 + C34889 * C145 +
             C34893 + C34893 + C153348 * C161) *
                C153513 * C34883 +
            (C35190 + C35191) * C153513 * C34884 + C35210 * C34885 +
            C35211 * C153747) *
               C153413 * C153724 -
           ((C35196 + C35197) * C153513 * C153747 +
            (C35195 + C35194) * C153513 * C34885 +
            (C35193 + C35192) * C153513 * C34884 +
            (C35191 + C35190) * C153513 * C34883) *
               C153413 * C153449) *
              C153793 +
          (((C35198 + C35199) * C153513 * C34883 +
            (C35200 + C35201) * C153513 * C34884 +
            (C35202 + C35203) * C153513 * C34885 +
            (C35204 + C35205) * C153513 * C153747) *
               C153413 * C153449 -
           (C35212 * C153747 + C35213 * C34885 +
            (C35199 + C35198) * C153513 * C34884 +
            (C34889 * C146 + C34906 + C34906 + C153348 * C162 + C34887 * C145 +
             C34907 + C34907 + C153705 * C161) *
                C153513 * C34883) *
               C153413 * C153724) *
              C153794 +
          (((C34887 * C146 + C34908 + C34908 + C153705 * C162 + C34889 * C147 +
             C34909 + C34909 + C153348 * C163) *
                C153513 * C34883 +
            (C35660 + C35661) * C153513 * C34884 +
            (C35662 + C35663) * C153513 * C34885 +
            (C35664 + C35665) * C153513 * C153747) *
               C153413 * C153724 -
           ((C34889 * C2992 + C35646 + C35646 + C153348 * C3000 +
             C34887 * C2991 + C35647 + C35647 + C153705 * C2999) *
                C153513 * C153747 +
            (C35665 + C35664) * C153513 * C34885 +
            (C35663 + C35662) * C153513 * C34884 +
            (C35661 + C35660) * C153513 * C34883) *
               C153413 * C153449) *
              C678)) /
            (p * q * std::sqrt(p + q));
    d2ee[301] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C11268 * C144 + C11277 + C11277 + C11262 * C160 +
                       C11270 * C145 + C11278 + C11278 + C11263 * C161 +
                       C11272 * C146 + C11279 + C11279 + C11264 * C162 +
                       C11274 * C147 + C11280 + C11280 + C153738 * C163) *
                          C153513 * C153739 +
                      (C11583 + C11584 + C11585 + C11586) * C153513 * C153560) *
                         C153725 -
                     ((C12543 + C12544 + C12545 + C12546) * C153513 * C153560 +
                      (C11274 * C497 + C11797 + C11797 + C153738 * C521 +
                       C11272 * C498 + C11798 + C11798 + C11264 * C522 +
                       C11270 * C499 + C11799 + C11799 + C11263 * C523 +
                       C11268 * C500 + C11800 + C11800 + C11262 * C524) *
                          C153513 * C153739) *
                         C153477) *
                        C153724 +
                    (((C12546 + C12545 + C12544 + C12543) * C153513 * C153739 +
                      (C11268 * C1800 + C12511 + C12511 + C11262 * C1810 +
                       C11270 * C1799 + C12512 + C12512 + C11263 * C1809 +
                       C11272 * C1798 + C12513 + C12513 + C11264 * C1808 +
                       C11274 * C1797 + C12514 + C12514 + C153738 * C1807) *
                          C153513 * C153560) *
                         C153477 -
                     ((C11587 + C11588 + C11589 + C11590) * C153513 * C153560 +
                      (C11586 + C11585 + C11584 + C11583) * C153513 * C153739) *
                         C153725) *
                        C153449) *
                       C313 +
                   ((((C11268 * C499 + C11809 + C11809 + C11262 * C523 +
                       C11270 * C498 + C11810 + C11810 + C11263 * C522 +
                       C11272 * C497 + C11811 + C11811 + C11264 * C521 +
                       C11274 * C496 + C11812 + C11812 + C153738 * C520) *
                          C153513 * C153739 +
                      (C12547 + C12548 + C12549 + C12550) * C153513 * C153560) *
                         C153477 -
                     ((C11594 + C11593 + C11592 + C11591) * C153513 * C153560 +
                      (C11274 * C148 + C11289 + C11289 + C153738 * C164 +
                       C11272 * C147 + C11290 + C11290 + C11264 * C163 +
                       C11270 * C146 + C11291 + C11291 + C11263 * C162 +
                       C11268 * C145 + C11292 + C11292 + C11262 * C161) *
                          C153513 * C153739) *
                         C153725) *
                        C153724 +
                    (((C11591 + C11592 + C11593 + C11594) * C153513 * C153739 +
                      (C11595 + C11596 + C11597 + C11598) * C153513 * C153560) *
                         C153725 -
                     ((C11274 * C1796 + C12523 + C12523 + C153738 * C1806 +
                       C11272 * C1797 + C12524 + C12524 + C11264 * C1807 +
                       C11270 * C1798 + C12525 + C12525 + C11263 * C1808 +
                       C11268 * C1799 + C12526 + C12526 + C11262 * C1809) *
                          C153513 * C153560 +
                      (C12550 + C12549 + C12548 + C12547) * C153513 * C153739) *
                         C153477) *
                        C153449) *
                       C153384)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C34887 * C144 + C34892 + C34892 + C153705 * C160 +
                       C34889 * C145 + C34893 + C34893 + C153348 * C161) *
                          C153513 * C34883 +
                      (C35190 + C35191) * C153513 * C34884 + C35210 * C34885 +
                      C35211 * C153747) *
                         C153725 -
                     ((C36178 + C36179) * C153513 * C153747 +
                      (C36180 + C36181) * C153513 * C34885 +
                      (C36182 + C36183) * C153513 * C34884 +
                      (C34889 * C499 + C35414 + C35414 + C153348 * C523 +
                       C34887 * C500 + C35415 + C35415 + C153705 * C524) *
                          C153513 * C34883) *
                         C153477) *
                        C153724 +
                    (((C36183 + C36182) * C153513 * C34883 +
                      (C36181 + C36180) * C153513 * C34884 +
                      (C36179 + C36178) * C153513 * C34885 +
                      (C34887 * C5603 + C36138 + C36138 + C153705 * C5609 +
                       C34889 * C5602 + C36139 + C36139 + C153348 * C5608) *
                          C153513 * C153747) *
                         C153477 -
                     ((C35196 + C35197) * C153513 * C153747 +
                      (C35195 + C35194) * C153513 * C34885 +
                      (C35193 + C35192) * C153513 * C34884 +
                      (C35191 + C35190) * C153513 * C34883) *
                         C153725) *
                        C153449) *
                       C313 +
                   ((((C34887 * C499 + C35424 + C35424 + C153705 * C523 +
                       C34889 * C498 + C35425 + C35425 + C153348 * C522) *
                          C153513 * C34883 +
                      (C36184 + C36185) * C153513 * C34884 +
                      (C36186 + C36187) * C153513 * C34885 +
                      (C36188 + C36189) * C153513 * C153747) *
                         C153477 -
                     (C35212 * C153747 + C35213 * C34885 +
                      (C35199 + C35198) * C153513 * C34884 +
                      (C34889 * C146 + C34906 + C34906 + C153348 * C162 +
                       C34887 * C145 + C34907 + C34907 + C153705 * C161) *
                          C153513 * C34883) *
                         C153725) *
                        C153724 +
                    (((C35198 + C35199) * C153513 * C34883 +
                      (C35200 + C35201) * C153513 * C34884 +
                      (C35202 + C35203) * C153513 * C34885 +
                      (C35204 + C35205) * C153513 * C153747) *
                         C153725 -
                     ((C34889 * C5601 + C36152 + C36152 + C153348 * C5607 +
                       C34887 * C5602 + C36153 + C36153 + C153705 * C5608) *
                          C153513 * C153747 +
                      (C36189 + C36188) * C153513 * C34885 +
                      (C36187 + C36186) * C153513 * C34884 +
                      (C36185 + C36184) * C153513 * C34883) *
                         C153477) *
                        C153449) *
                       C153384)) /
                     (p * q * std::sqrt(p + q));
    d2ee[302] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C11268 * C144 + C11277 + C11277 + C11262 * C160 + C11270 * C145 +
             C11278 + C11278 + C11263 * C161 + C11272 * C146 + C11279 + C11279 +
             C11264 * C162 + C11274 * C147 + C11280 + C11280 + C153738 * C163) *
                C153513 * C153739 +
            (C11583 + C11584 + C11585 + C11586) * C153513 * C153560) *
               C153413 * C310 -
           ((C11587 + C11588 + C11589 + C11590) * C153513 * C153560 +
            (C11586 + C11585 + C11584 + C11583) * C153513 * C153739) *
               C153413 * C311 +
           ((C11590 + C11589 + C11588 + C11587) * C153513 * C153739 +
            (C11268 * C1227 + C11523 + C11523 + C11262 * C1237 +
             C11270 * C1226 + C11524 + C11524 + C11263 * C1236 +
             C11272 * C1225 + C11525 + C11525 + C11264 * C1235 +
             C11274 * C1224 + C11526 + C11526 + C153738 * C1234) *
                C153513 * C153560) *
               C153413 * C312) *
              C313 +
          (((C11591 + C11592 + C11593 + C11594) * C153513 * C153739 +
            (C11595 + C11596 + C11597 + C11598) * C153513 * C153560) *
               C153413 * C311 -
           ((C11594 + C11593 + C11592 + C11591) * C153513 * C153560 +
            (C11274 * C148 + C11289 + C11289 + C153738 * C164 + C11272 * C147 +
             C11290 + C11290 + C11264 * C163 + C11270 * C146 + C11291 + C11291 +
             C11263 * C162 + C11268 * C145 + C11292 + C11292 + C11262 * C161) *
                C153513 * C153739) *
               C153413 * C310 -
           ((C11274 * C1223 + C11547 + C11547 + C153738 * C1233 +
             C11272 * C1224 + C11548 + C11548 + C11264 * C1234 +
             C11270 * C1225 + C11549 + C11549 + C11263 * C1235 +
             C11268 * C1226 + C11550 + C11550 + C11262 * C1236) *
                C153513 * C153560 +
            (C11598 + C11597 + C11596 + C11595) * C153513 * C153739) *
               C153413 * C312) *
              C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C11268 * C144 + C11277 + C11277 + C11262 * C160 + C11270 * C145 +
            C11278 + C11278 + C11263 * C161 + C11272 * C146 + C11279 + C11279 +
            C11264 * C162 + C11274 * C147 + C11280 + C11280 + C153738 * C163) *
               C153513 * C153739 +
           (C11268 * C319 + C11281 + C11281 + C11262 * C343 + C11270 * C318 +
            C11282 + C11282 + C11263 * C342 + C11272 * C317 + C11283 + C11283 +
            C11264 * C341 + C11274 * C316 + C11284 + C11284 + C153738 * C340) *
               C153513 * C153560) *
              C153413 * C153397 * C130 -
          ((C11274 * C315 + C11285 + C11285 + C153738 * C339 + C11272 * C316 +
            C11286 + C11286 + C11264 * C340 + C11270 * C317 + C11287 + C11287 +
            C11263 * C341 + C11268 * C318 + C11288 + C11288 + C11262 * C342) *
               C153513 * C153560 +
           (C11274 * C148 + C11289 + C11289 + C153738 * C164 + C11272 * C147 +
            C11290 + C11290 + C11264 * C163 + C11270 * C146 + C11291 + C11291 +
            C11263 * C162 + C11268 * C145 + C11292 + C11292 + C11262 * C161) *
               C153513 * C153739) *
              C153413 * C153397 * C131 +
          ((C11268 * C146 + C11293 + C11293 + C11262 * C162 + C11270 * C147 +
            C11294 + C11294 + C11263 * C163 + C11272 * C148 + C11295 + C11295 +
            C11264 * C164 + C11274 * C149 + C11296 + C11296 + C153738 * C165) *
               C153513 * C153739 +
           (C11268 * C317 + C11297 + C11297 + C11262 * C341 + C11270 * C316 +
            C11298 + C11298 + C11263 * C340 + C11272 * C315 + C11299 + C11299 +
            C11264 * C339 + C11274 * C325 + C11300 + C11300 + C153738 * C349) *
               C153513 * C153560) *
              C153413 * C153397 * C132 -
          ((C11274 * C679 + C11301 + C11301 + C153738 * C681 + C11272 * C325 +
            C11302 + C11302 + C11264 * C349 + C11270 * C315 + C11303 + C11303 +
            C11263 * C339 + C11268 * C316 + C11304 + C11304 + C11262 * C340) *
               C153513 * C153560 +
           (C11274 * C150 + C11305 + C11305 + C153738 * C166 + C11272 * C149 +
            C11306 + C11306 + C11264 * C165 + C11270 * C148 + C11307 + C11307 +
            C11263 * C164 + C11268 * C147 + C11308 + C11308 + C11262 * C163) *
               C153513 * C153739) *
              C153413 * C153397 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C11268 * C144 + C11277 + C11277 + C11262 * C160 + C11270 * C145 +
             C11278 + C11278 + C11263 * C161 + C11272 * C146 + C11279 + C11279 +
             C11264 * C162 + C11274 * C147 + C11280 + C11280 + C153738 * C163) *
                C153513 * C153739 +
            (C11583 + C11584 + C11585 + C11586) * C153513 * C153560) *
               C493 -
           ((C11274 * C984 + C11793 + C11793 + C153738 * C996 + C11272 * C983 +
             C11794 + C11794 + C11264 * C995 + C11270 * C982 + C11795 + C11795 +
             C11263 * C994 + C11268 * C981 + C11796 + C11796 + C11262 * C993) *
                C153513 * C153560 +
            (C11274 * C497 + C11797 + C11797 + C153738 * C521 + C11272 * C498 +
             C11798 + C11798 + C11264 * C522 + C11270 * C499 + C11799 + C11799 +
             C11263 * C523 + C11268 * C500 + C11800 + C11800 + C11262 * C524) *
                C153513 * C153739) *
               C494 +
           ((C11268 * C501 + C11801 + C11801 + C11262 * C525 + C11270 * C502 +
             C11802 + C11802 + C11263 * C526 + C11272 * C503 + C11803 + C11803 +
             C11264 * C527 + C11274 * C504 + C11804 + C11804 + C153738 * C528) *
                C153513 * C153739 +
            (C11268 * C1369 + C11805 + C11805 + C11262 * C1379 +
             C11270 * C1368 + C11806 + C11806 + C11263 * C1378 +
             C11272 * C1367 + C11807 + C11807 + C11264 * C1377 +
             C11274 * C1366 + C11808 + C11808 + C153738 * C1376) *
                C153513 * C153560) *
               C495) *
              C153397 * C313 +
          (((C11268 * C499 + C11809 + C11809 + C11262 * C523 + C11270 * C498 +
             C11810 + C11810 + C11263 * C522 + C11272 * C497 + C11811 + C11811 +
             C11264 * C521 + C11274 * C496 + C11812 + C11812 + C153738 * C520) *
                C153513 * C153739 +
            (C11268 * C982 + C11813 + C11813 + C11262 * C994 + C11270 * C983 +
             C11814 + C11814 + C11263 * C995 + C11272 * C984 + C11815 + C11815 +
             C11264 * C996 + C11274 * C985 + C11816 + C11816 + C153738 * C997) *
                C153513 * C153560) *
               C494 -
           ((C11594 + C11593 + C11592 + C11591) * C153513 * C153560 +
            (C11274 * C148 + C11289 + C11289 + C153738 * C164 + C11272 * C147 +
             C11290 + C11290 + C11264 * C163 + C11270 * C146 + C11291 + C11291 +
             C11263 * C162 + C11268 * C145 + C11292 + C11292 + C11262 * C161) *
                C153513 * C153739) *
               C493 -
           ((C11274 * C1365 + C11817 + C11817 + C153738 * C1375 +
             C11272 * C1366 + C11818 + C11818 + C11264 * C1376 +
             C11270 * C1367 + C11819 + C11819 + C11263 * C1377 +
             C11268 * C1368 + C11820 + C11820 + C11262 * C1378) *
                C153513 * C153560 +
            (C11274 * C505 + C11821 + C11821 + C153738 * C529 + C11272 * C504 +
             C11822 + C11822 + C11264 * C528 + C11270 * C503 + C11823 + C11823 +
             C11263 * C527 + C11268 * C502 + C11824 + C11824 + C11262 * C526) *
                C153513 * C153739) *
               C495) *
              C153397 * C153384)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C34887 * C144 + C34892 + C34892 + C153705 * C160 + C34889 * C145 +
            C34893 + C34893 + C153348 * C161) *
               C153513 * C34883 +
           (C34887 * C319 + C34894 + C34894 + C153705 * C343 + C34889 * C318 +
            C34895 + C34895 + C153348 * C342) *
               C153513 * C34884 +
           (C34887 * C320 + C34896 + C34896 + C153705 * C344 + C34889 * C321 +
            C34897 + C34897 + C153348 * C345) *
               C153513 * C34885 +
           (C34887 * C1227 + C34898 + C34898 + C153705 * C1237 +
            C34889 * C1226 + C34899 + C34899 + C153348 * C1236) *
               C153513 * C153747) *
              C153413 * C153397 * C130 -
          ((C34889 * C1225 + C34900 + C34900 + C153348 * C1235 +
            C34887 * C1226 + C34901 + C34901 + C153705 * C1236) *
               C153513 * C153747 +
           (C34889 * C322 + C34902 + C34902 + C153348 * C346 + C34887 * C321 +
            C34903 + C34903 + C153705 * C345) *
               C153513 * C34885 +
           (C34889 * C317 + C34904 + C34904 + C153348 * C341 + C34887 * C318 +
            C34905 + C34905 + C153705 * C342) *
               C153513 * C34884 +
           (C34889 * C146 + C34906 + C34906 + C153348 * C162 + C34887 * C145 +
            C34907 + C34907 + C153705 * C161) *
               C153513 * C34883) *
              C153413 * C153397 * C131 +
          ((C34887 * C146 + C34908 + C34908 + C153705 * C162 + C34889 * C147 +
            C34909 + C34909 + C153348 * C163) *
               C153513 * C34883 +
           (C34887 * C317 + C34910 + C34910 + C153705 * C341 + C34889 * C316 +
            C34911 + C34911 + C153348 * C340) *
               C153513 * C34884 +
           (C34887 * C322 + C34912 + C34912 + C153705 * C346 + C34889 * C323 +
            C34913 + C34913 + C153348 * C347) *
               C153513 * C34885 +
           (C34887 * C1225 + C34914 + C34914 + C153705 * C1235 +
            C34889 * C1224 + C34915 + C34915 + C153348 * C1234) *
               C153513 * C153747) *
              C153413 * C153397 * C132 -
          ((C34889 * C1223 + C34916 + C34916 + C153348 * C1233 +
            C34887 * C1224 + C34917 + C34917 + C153705 * C1234) *
               C153513 * C153747 +
           (C34889 * C324 + C34918 + C34918 + C153348 * C348 + C34887 * C323 +
            C34919 + C34919 + C153705 * C347) *
               C153513 * C34885 +
           (C34889 * C315 + C34920 + C34920 + C153348 * C339 + C34887 * C316 +
            C34921 + C34921 + C153705 * C340) *
               C153513 * C34884 +
           (C34889 * C148 + C34922 + C34922 + C153348 * C164 + C34887 * C147 +
            C34923 + C34923 + C153705 * C163) *
               C153513 * C34883) *
              C153413 * C153397 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C34887 * C144 + C34892 + C34892 + C153705 * C160 + C34889 * C145 +
             C34893 + C34893 + C153348 * C161) *
                C153513 * C34883 +
            (C35190 + C35191) * C153513 * C34884 + C35210 * C34885 +
            C35211 * C153747) *
               C153413 * C310 -
           ((C35196 + C35197) * C153513 * C153747 +
            (C35195 + C35194) * C153513 * C34885 +
            (C35193 + C35192) * C153513 * C34884 +
            (C35191 + C35190) * C153513 * C34883) *
               C153413 * C311 +
           (C35210 * C34883 + C35211 * C34884 +
            (C35197 + C35196) * C153513 * C34885 +
            (C34887 * C4587 + C35136 + C35136 + C153705 * C4593 +
             C34889 * C4586 + C35137 + C35137 + C153348 * C4592) *
                C153513 * C153747) *
               C153413 * C312) *
              C313 +
          (((C35198 + C35199) * C153513 * C34883 +
            (C35200 + C35201) * C153513 * C34884 +
            (C35202 + C35203) * C153513 * C34885 +
            (C35204 + C35205) * C153513 * C153747) *
               C153413 * C311 -
           (C35212 * C153747 + C35213 * C34885 +
            (C35199 + C35198) * C153513 * C34884 +
            (C34889 * C146 + C34906 + C34906 + C153348 * C162 + C34887 * C145 +
             C34907 + C34907 + C153705 * C161) *
                C153513 * C34883) *
               C153413 * C310 -
           ((C34889 * C4585 + C35156 + C35156 + C153348 * C4591 +
             C34887 * C4586 + C35157 + C35157 + C153705 * C4592) *
                C153513 * C153747 +
            (C35205 + C35204) * C153513 * C34885 + C35212 * C34884 +
            C35213 * C34883) *
               C153413 * C312) *
              C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C34887 * C144 + C34892 + C34892 + C153705 * C160 + C34889 * C145 +
             C34893 + C34893 + C153348 * C161) *
                C153513 * C34883 +
            (C35190 + C35191) * C153513 * C34884 + C35210 * C34885 +
            C35211 * C153747) *
               C493 -
           ((C34889 * C4144 + C35408 + C35408 + C153348 * C4152 +
             C34887 * C4143 + C35409 + C35409 + C153705 * C4151) *
                C153513 * C153747 +
            (C34889 * C1799 + C35410 + C35410 + C153348 * C1809 +
             C34887 * C1800 + C35411 + C35411 + C153705 * C1810) *
                C153513 * C34885 +
            (C34889 * C982 + C35412 + C35412 + C153348 * C994 + C34887 * C981 +
             C35413 + C35413 + C153705 * C993) *
                C153513 * C34884 +
            (C34889 * C499 + C35414 + C35414 + C153348 * C523 + C34887 * C500 +
             C35415 + C35415 + C153705 * C524) *
                C153513 * C34883) *
               C494 +
           ((C34887 * C501 + C35416 + C35416 + C153705 * C525 + C34889 * C502 +
             C35417 + C35417 + C153348 * C526) *
                C153513 * C34883 +
            (C34887 * C1369 + C35418 + C35418 + C153705 * C1379 +
             C34889 * C1368 + C35419 + C35419 + C153348 * C1378) *
                C153513 * C34884 +
            (C34887 * C3327 + C35420 + C35420 + C153705 * C3335 +
             C34889 * C3328 + C35421 + C35421 + C153348 * C3336) *
                C153513 * C34885 +
            (C34887 * C4835 + C35422 + C35422 + C153705 * C4841 +
             C34889 * C4834 + C35423 + C35423 + C153348 * C4840) *
                C153513 * C153747) *
               C495) *
              C153397 * C313 +
          (((C34887 * C499 + C35424 + C35424 + C153705 * C523 + C34889 * C498 +
             C35425 + C35425 + C153348 * C522) *
                C153513 * C34883 +
            (C34887 * C982 + C35426 + C35426 + C153705 * C994 + C34889 * C983 +
             C35427 + C35427 + C153348 * C995) *
                C153513 * C34884 +
            (C34887 * C1799 + C35428 + C35428 + C153705 * C1809 +
             C34889 * C1798 + C35429 + C35429 + C153348 * C1808) *
                C153513 * C34885 +
            (C34887 * C4144 + C35430 + C35430 + C153705 * C4152 +
             C34889 * C4145 + C35431 + C35431 + C153348 * C4153) *
                C153513 * C153747) *
               C494 -
           (C35212 * C153747 + C35213 * C34885 +
            (C35199 + C35198) * C153513 * C34884 +
            (C34889 * C146 + C34906 + C34906 + C153348 * C162 + C34887 * C145 +
             C34907 + C34907 + C153705 * C161) *
                C153513 * C34883) *
               C493 -
           ((C34889 * C4833 + C35432 + C35432 + C153348 * C4839 +
             C34887 * C4834 + C35433 + C35433 + C153705 * C4840) *
                C153513 * C153747 +
            (C34889 * C3329 + C35434 + C35434 + C153348 * C3337 +
             C34887 * C3328 + C35435 + C35435 + C153705 * C3336) *
                C153513 * C34885 +
            (C34889 * C1367 + C35436 + C35436 + C153348 * C1377 +
             C34887 * C1368 + C35437 + C35437 + C153705 * C1378) *
                C153513 * C34884 +
            (C34889 * C503 + C35438 + C35438 + C153348 * C527 + C34887 * C502 +
             C35439 + C35439 + C153705 * C526) *
                C153513 * C34883) *
               C495) *
              C153397 * C153384)) /
            (p * q * std::sqrt(p + q));
    d2ee[303] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C11268 * C144 + C11277 + C11277 + C11262 * C160 + C11270 * C145 +
             C11278 + C11278 + C11263 * C161 + C11272 * C146 + C11279 + C11279 +
             C11264 * C162 + C11274 * C147 + C11280 + C11280 + C153738 * C163) *
                C153513 * C153739 +
            (C11583 + C11584 + C11585 + C11586) * C153513 * C153560) *
               C153725 -
           ((C11274 * C984 + C11793 + C11793 + C153738 * C996 + C11272 * C983 +
             C11794 + C11794 + C11264 * C995 + C11270 * C982 + C11795 + C11795 +
             C11263 * C994 + C11268 * C981 + C11796 + C11796 + C11262 * C993) *
                C153513 * C153560 +
            (C11274 * C497 + C11797 + C11797 + C153738 * C521 + C11272 * C498 +
             C11798 + C11798 + C11264 * C522 + C11270 * C499 + C11799 + C11799 +
             C11263 * C523 + C11268 * C500 + C11800 + C11800 + C11262 * C524) *
                C153513 * C153739) *
               C153477) *
              C153397 * C153793 +
          (((C11268 * C499 + C11809 + C11809 + C11262 * C523 + C11270 * C498 +
             C11810 + C11810 + C11263 * C522 + C11272 * C497 + C11811 + C11811 +
             C11264 * C521 + C11274 * C496 + C11812 + C11812 + C153738 * C520) *
                C153513 * C153739 +
            (C11268 * C982 + C11813 + C11813 + C11262 * C994 + C11270 * C983 +
             C11814 + C11814 + C11263 * C995 + C11272 * C984 + C11815 + C11815 +
             C11264 * C996 + C11274 * C985 + C11816 + C11816 + C153738 * C997) *
                C153513 * C153560) *
               C153477 -
           ((C11594 + C11593 + C11592 + C11591) * C153513 * C153560 +
            (C11274 * C148 + C11289 + C11289 + C153738 * C164 + C11272 * C147 +
             C11290 + C11290 + C11264 * C163 + C11270 * C146 + C11291 + C11291 +
             C11263 * C162 + C11268 * C145 + C11292 + C11292 + C11262 * C161) *
                C153513 * C153739) *
               C153725) *
              C153397 * C153794 +
          (((C11268 * C146 + C11293 + C11293 + C11262 * C162 + C11270 * C147 +
             C11294 + C11294 + C11263 * C163 + C11272 * C148 + C11295 + C11295 +
             C11264 * C164 + C11274 * C149 + C11296 + C11296 + C153738 * C165) *
                C153513 * C153739 +
            (C12039 + C12040 + C12041 + C12042) * C153513 * C153560) *
               C153725 -
           ((C11274 * C986 + C12237 + C12237 + C153738 * C998 + C11272 * C985 +
             C12238 + C12238 + C11264 * C997 + C11270 * C984 + C12239 + C12239 +
             C11263 * C996 + C11268 * C983 + C12240 + C12240 + C11262 * C995) *
                C153513 * C153560 +
            (C11274 * C506 + C12241 + C12241 + C153738 * C530 + C11272 * C496 +
             C12242 + C12242 + C11264 * C520 + C11270 * C497 + C12243 + C12243 +
             C11263 * C521 + C11268 * C498 + C12244 + C12244 + C11262 * C522) *
                C153513 * C153739) *
               C153477) *
              C153397 * C678)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C34887 * C144 + C34892 + C34892 + C153705 * C160 + C34889 * C145 +
             C34893 + C34893 + C153348 * C161) *
                C153513 * C34883 +
            (C35190 + C35191) * C153513 * C34884 + C35210 * C34885 +
            C35211 * C153747) *
               C153725 -
           ((C34889 * C4144 + C35408 + C35408 + C153348 * C4152 +
             C34887 * C4143 + C35409 + C35409 + C153705 * C4151) *
                C153513 * C153747 +
            (C34889 * C1799 + C35410 + C35410 + C153348 * C1809 +
             C34887 * C1800 + C35411 + C35411 + C153705 * C1810) *
                C153513 * C34885 +
            (C34889 * C982 + C35412 + C35412 + C153348 * C994 + C34887 * C981 +
             C35413 + C35413 + C153705 * C993) *
                C153513 * C34884 +
            (C34889 * C499 + C35414 + C35414 + C153348 * C523 + C34887 * C500 +
             C35415 + C35415 + C153705 * C524) *
                C153513 * C34883) *
               C153477) *
              C153397 * C153793 +
          (((C34887 * C499 + C35424 + C35424 + C153705 * C523 + C34889 * C498 +
             C35425 + C35425 + C153348 * C522) *
                C153513 * C34883 +
            (C34887 * C982 + C35426 + C35426 + C153705 * C994 + C34889 * C983 +
             C35427 + C35427 + C153348 * C995) *
                C153513 * C34884 +
            (C34887 * C1799 + C35428 + C35428 + C153705 * C1809 +
             C34889 * C1798 + C35429 + C35429 + C153348 * C1808) *
                C153513 * C34885 +
            (C34887 * C4144 + C35430 + C35430 + C153705 * C4152 +
             C34889 * C4145 + C35431 + C35431 + C153348 * C4153) *
                C153513 * C153747) *
               C153477 -
           (C35212 * C153747 + C35213 * C34885 +
            (C35199 + C35198) * C153513 * C34884 +
            (C34889 * C146 + C34906 + C34906 + C153348 * C162 + C34887 * C145 +
             C34907 + C34907 + C153705 * C161) *
                C153513 * C34883) *
               C153725) *
              C153397 * C153794 +
          (((C34887 * C146 + C34908 + C34908 + C153705 * C162 + C34889 * C147 +
             C34909 + C34909 + C153348 * C163) *
                C153513 * C34883 +
            (C35660 + C35661) * C153513 * C34884 +
            (C35662 + C35663) * C153513 * C34885 +
            (C35664 + C35665) * C153513 * C153747) *
               C153725 -
           ((C34889 * C4146 + C35860 + C35860 + C153348 * C4154 +
             C34887 * C4145 + C35861 + C35861 + C153705 * C4153) *
                C153513 * C153747 +
            (C34889 * C1797 + C35862 + C35862 + C153348 * C1807 +
             C34887 * C1798 + C35863 + C35863 + C153705 * C1808) *
                C153513 * C34885 +
            (C34889 * C984 + C35864 + C35864 + C153348 * C996 + C34887 * C983 +
             C35865 + C35865 + C153705 * C995) *
                C153513 * C34884 +
            (C34889 * C497 + C35866 + C35866 + C153348 * C521 + C34887 * C498 +
             C35867 + C35867 + C153705 * C522) *
                C153513 * C34883) *
               C153477) *
              C153397 * C678)) /
            (p * q * std::sqrt(p + q));
    d2ee[304] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C11268 * C144 + C11277 + C11277 + C11262 * C160 + C11270 * C145 +
            C11278 + C11278 + C11263 * C161 + C11272 * C146 + C11279 + C11279 +
            C11264 * C162 + C11274 * C147 + C11280 + C11280 + C153738 * C163) *
               C153513 * C153739 +
           (C11268 * C319 + C11281 + C11281 + C11262 * C343 + C11270 * C318 +
            C11282 + C11282 + C11263 * C342 + C11272 * C317 + C11283 + C11283 +
            C11264 * C341 + C11274 * C316 + C11284 + C11284 + C153738 * C340) *
               C153513 * C153560) *
              C153413 * C153397 * C130 -
          ((C11274 * C315 + C11285 + C11285 + C153738 * C339 + C11272 * C316 +
            C11286 + C11286 + C11264 * C340 + C11270 * C317 + C11287 + C11287 +
            C11263 * C341 + C11268 * C318 + C11288 + C11288 + C11262 * C342) *
               C153513 * C153560 +
           (C11274 * C148 + C11289 + C11289 + C153738 * C164 + C11272 * C147 +
            C11290 + C11290 + C11264 * C163 + C11270 * C146 + C11291 + C11291 +
            C11263 * C162 + C11268 * C145 + C11292 + C11292 + C11262 * C161) *
               C153513 * C153739) *
              C153413 * C153397 * C131 +
          ((C11268 * C146 + C11293 + C11293 + C11262 * C162 + C11270 * C147 +
            C11294 + C11294 + C11263 * C163 + C11272 * C148 + C11295 + C11295 +
            C11264 * C164 + C11274 * C149 + C11296 + C11296 + C153738 * C165) *
               C153513 * C153739 +
           (C11268 * C317 + C11297 + C11297 + C11262 * C341 + C11270 * C316 +
            C11298 + C11298 + C11263 * C340 + C11272 * C315 + C11299 + C11299 +
            C11264 * C339 + C11274 * C325 + C11300 + C11300 + C153738 * C349) *
               C153513 * C153560) *
              C153413 * C153397 * C132 -
          ((C11274 * C679 + C11301 + C11301 + C153738 * C681 + C11272 * C325 +
            C11302 + C11302 + C11264 * C349 + C11270 * C315 + C11303 + C11303 +
            C11263 * C339 + C11268 * C316 + C11304 + C11304 + C11262 * C340) *
               C153513 * C153560 +
           (C11274 * C150 + C11305 + C11305 + C153738 * C166 + C11272 * C149 +
            C11306 + C11306 + C11264 * C165 + C11270 * C148 + C11307 + C11307 +
            C11263 * C164 + C11268 * C147 + C11308 + C11308 + C11262 * C163) *
               C153513 * C153739) *
              C153413 * C153397 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C11268 * C144 + C11277 + C11277 + C11262 * C160 + C11270 * C145 +
             C11278 + C11278 + C11263 * C161 + C11272 * C146 + C11279 + C11279 +
             C11264 * C162 + C11274 * C147 + C11280 + C11280 + C153738 * C163) *
                C153513 * C153739 +
            (C11583 + C11584 + C11585 + C11586) * C153513 * C153560) *
               C153413 * C310 -
           ((C11587 + C11588 + C11589 + C11590) * C153513 * C153560 +
            (C11586 + C11585 + C11584 + C11583) * C153513 * C153739) *
               C153413 * C311 +
           ((C11590 + C11589 + C11588 + C11587) * C153513 * C153739 +
            (C11268 * C1227 + C11523 + C11523 + C11262 * C1237 +
             C11270 * C1226 + C11524 + C11524 + C11263 * C1236 +
             C11272 * C1225 + C11525 + C11525 + C11264 * C1235 +
             C11274 * C1224 + C11526 + C11526 + C153738 * C1234) *
                C153513 * C153560) *
               C153413 * C312) *
              C313 +
          (((C11591 + C11592 + C11593 + C11594) * C153513 * C153739 +
            (C11595 + C11596 + C11597 + C11598) * C153513 * C153560) *
               C153413 * C311 -
           ((C11594 + C11593 + C11592 + C11591) * C153513 * C153560 +
            (C11274 * C148 + C11289 + C11289 + C153738 * C164 + C11272 * C147 +
             C11290 + C11290 + C11264 * C163 + C11270 * C146 + C11291 + C11291 +
             C11263 * C162 + C11268 * C145 + C11292 + C11292 + C11262 * C161) *
                C153513 * C153739) *
               C153413 * C310 -
           ((C11274 * C1223 + C11547 + C11547 + C153738 * C1233 +
             C11272 * C1224 + C11548 + C11548 + C11264 * C1234 +
             C11270 * C1225 + C11549 + C11549 + C11263 * C1235 +
             C11268 * C1226 + C11550 + C11550 + C11262 * C1236) *
                C153513 * C153560 +
            (C11598 + C11597 + C11596 + C11595) * C153513 * C153739) *
               C153413 * C312) *
              C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C34887 * C144 + C34892 + C34892 + C153705 * C160 + C34889 * C145 +
            C34893 + C34893 + C153348 * C161) *
               C153513 * C34883 +
           (C34887 * C319 + C34894 + C34894 + C153705 * C343 + C34889 * C318 +
            C34895 + C34895 + C153348 * C342) *
               C153513 * C34884 +
           (C34887 * C320 + C34896 + C34896 + C153705 * C344 + C34889 * C321 +
            C34897 + C34897 + C153348 * C345) *
               C153513 * C34885 +
           (C34887 * C1227 + C34898 + C34898 + C153705 * C1237 +
            C34889 * C1226 + C34899 + C34899 + C153348 * C1236) *
               C153513 * C153747) *
              C153413 * C153397 * C130 -
          ((C34889 * C1225 + C34900 + C34900 + C153348 * C1235 +
            C34887 * C1226 + C34901 + C34901 + C153705 * C1236) *
               C153513 * C153747 +
           (C34889 * C322 + C34902 + C34902 + C153348 * C346 + C34887 * C321 +
            C34903 + C34903 + C153705 * C345) *
               C153513 * C34885 +
           (C34889 * C317 + C34904 + C34904 + C153348 * C341 + C34887 * C318 +
            C34905 + C34905 + C153705 * C342) *
               C153513 * C34884 +
           (C34889 * C146 + C34906 + C34906 + C153348 * C162 + C34887 * C145 +
            C34907 + C34907 + C153705 * C161) *
               C153513 * C34883) *
              C153413 * C153397 * C131 +
          ((C34887 * C146 + C34908 + C34908 + C153705 * C162 + C34889 * C147 +
            C34909 + C34909 + C153348 * C163) *
               C153513 * C34883 +
           (C34887 * C317 + C34910 + C34910 + C153705 * C341 + C34889 * C316 +
            C34911 + C34911 + C153348 * C340) *
               C153513 * C34884 +
           (C34887 * C322 + C34912 + C34912 + C153705 * C346 + C34889 * C323 +
            C34913 + C34913 + C153348 * C347) *
               C153513 * C34885 +
           (C34887 * C1225 + C34914 + C34914 + C153705 * C1235 +
            C34889 * C1224 + C34915 + C34915 + C153348 * C1234) *
               C153513 * C153747) *
              C153413 * C153397 * C132 -
          ((C34889 * C1223 + C34916 + C34916 + C153348 * C1233 +
            C34887 * C1224 + C34917 + C34917 + C153705 * C1234) *
               C153513 * C153747 +
           (C34889 * C324 + C34918 + C34918 + C153348 * C348 + C34887 * C323 +
            C34919 + C34919 + C153705 * C347) *
               C153513 * C34885 +
           (C34889 * C315 + C34920 + C34920 + C153348 * C339 + C34887 * C316 +
            C34921 + C34921 + C153705 * C340) *
               C153513 * C34884 +
           (C34889 * C148 + C34922 + C34922 + C153348 * C164 + C34887 * C147 +
            C34923 + C34923 + C153705 * C163) *
               C153513 * C34883) *
              C153413 * C153397 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C34887 * C144 + C34892 + C34892 + C153705 * C160 + C34889 * C145 +
             C34893 + C34893 + C153348 * C161) *
                C153513 * C34883 +
            (C35190 + C35191) * C153513 * C34884 + C35210 * C34885 +
            C35211 * C153747) *
               C153413 * C310 -
           ((C35196 + C35197) * C153513 * C153747 +
            (C35195 + C35194) * C153513 * C34885 +
            (C35193 + C35192) * C153513 * C34884 +
            (C35191 + C35190) * C153513 * C34883) *
               C153413 * C311 +
           (C35210 * C34883 + C35211 * C34884 +
            (C35197 + C35196) * C153513 * C34885 +
            (C34887 * C4587 + C35136 + C35136 + C153705 * C4593 +
             C34889 * C4586 + C35137 + C35137 + C153348 * C4592) *
                C153513 * C153747) *
               C153413 * C312) *
              C313 +
          (((C35198 + C35199) * C153513 * C34883 +
            (C35200 + C35201) * C153513 * C34884 +
            (C35202 + C35203) * C153513 * C34885 +
            (C35204 + C35205) * C153513 * C153747) *
               C153413 * C311 -
           (C35212 * C153747 + C35213 * C34885 +
            (C35199 + C35198) * C153513 * C34884 +
            (C34889 * C146 + C34906 + C34906 + C153348 * C162 + C34887 * C145 +
             C34907 + C34907 + C153705 * C161) *
                C153513 * C34883) *
               C153413 * C310 -
           ((C34889 * C4585 + C35156 + C35156 + C153348 * C4591 +
             C34887 * C4586 + C35157 + C35157 + C153705 * C4592) *
                C153513 * C153747 +
            (C35205 + C35204) * C153513 * C34885 + C35212 * C34884 +
            C35213 * C34883) *
               C153413 * C312) *
              C153384)) /
            (p * q * std::sqrt(p + q));
    d2ee[305] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C11268 * C144 + C11277 + C11277 + C11262 * C160 + C11270 * C145 +
             C11278 + C11278 + C11263 * C161 + C11272 * C146 + C11279 + C11279 +
             C11264 * C162 + C11274 * C147 + C11280 + C11280 + C153738 * C163) *
                C153513 * C153739 +
            (C11583 + C11584 + C11585 + C11586) * C153513 * C153560) *
               C153413 * C153795 -
           ((C11587 + C11588 + C11589 + C11590) * C153513 * C153560 +
            (C11586 + C11585 + C11584 + C11583) * C153513 * C153739) *
               C153413 * C153796 +
           ((C11590 + C11589 + C11588 + C11587) * C153513 * C153739 +
            (C12895 + C12896 + C12897 + C12898) * C153513 * C153560) *
               C153413 * C1509) *
              C153716 +
          (((C11591 + C11592 + C11593 + C11594) * C153513 * C153739 +
            (C11595 + C11596 + C11597 + C11598) * C153513 * C153560) *
               C153413 * C153796 -
           ((C11594 + C11593 + C11592 + C11591) * C153513 * C153560 +
            (C11274 * C148 + C11289 + C11289 + C153738 * C164 + C11272 * C147 +
             C11290 + C11290 + C11264 * C163 + C11270 * C146 + C11291 + C11291 +
             C11263 * C162 + C11268 * C145 + C11292 + C11292 + C11262 * C161) *
                C153513 * C153739) *
               C153413 * C153795 -
           ((C11274 * C1223 + C11547 + C11547 + C153738 * C1233 +
             C11272 * C1224 + C11548 + C11548 + C11264 * C1234 +
             C11270 * C1225 + C11549 + C11549 + C11263 * C1235 +
             C11268 * C1226 + C11550 + C11550 + C11262 * C1236) *
                C153513 * C153560 +
            (C11598 + C11597 + C11596 + C11595) * C153513 * C153739) *
               C153413 * C1509) *
              C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C34887 * C144 + C34892 + C34892 + C153705 * C160 + C34889 * C145 +
             C34893 + C34893 + C153348 * C161) *
                C153513 * C34883 +
            (C35190 + C35191) * C153513 * C34884 + C35210 * C34885 +
            C35211 * C153747) *
               C153413 * C153795 -
           (C36522 * C153747 + C36523 * C34885 +
            (C35193 + C35192) * C153513 * C34884 +
            (C35191 + C35190) * C153513 * C34883) *
               C153413 * C153796 +
           (C35210 * C34883 + C35211 * C34884 +
            (C35197 + C35196) * C153513 * C34885 +
            (C36528 + C36529) * C153513 * C153747) *
               C153413 * C1509) *
              C153716 +
          (((C35198 + C35199) * C153513 * C34883 +
            (C35200 + C35201) * C153513 * C34884 +
            (C35202 + C35203) * C153513 * C34885 +
            (C35204 + C35205) * C153513 * C153747) *
               C153413 * C153796 -
           (C35212 * C153747 + C35213 * C34885 +
            (C35199 + C35198) * C153513 * C34884 +
            (C34889 * C146 + C34906 + C34906 + C153348 * C162 + C34887 * C145 +
             C34907 + C34907 + C153705 * C161) *
                C153513 * C34883) *
               C153413 * C153795 -
           ((C34889 * C4585 + C35156 + C35156 + C153348 * C4591 +
             C34887 * C4586 + C35157 + C35157 + C153705 * C4592) *
                C153513 * C153747 +
            (C35205 + C35204) * C153513 * C34885 + C35212 * C34884 +
            C35213 * C34883) *
               C153413 * C1509) *
              C153384)) /
            (p * q * std::sqrt(p + q));
    d2ee[306] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C11268 * C144 + C11277 + C11277 + C11262 * C160 + C11270 * C145 +
             C11278 + C11278 + C11263 * C161 + C11272 * C146 + C11279 + C11279 +
             C11264 * C162 + C11274 * C147 + C11280 + C11280 + C153738 * C163) *
                C153513 * C153739 +
            (C11583 + C11584 + C11585 + C11586) * C153513 * C153560) *
               C153725 -
           ((C12543 + C12544 + C12545 + C12546) * C153513 * C153560 +
            (C11274 * C497 + C11797 + C11797 + C153738 * C521 + C11272 * C498 +
             C11798 + C11798 + C11264 * C522 + C11270 * C499 + C11799 + C11799 +
             C11263 * C523 + C11268 * C500 + C11800 + C11800 + C11262 * C524) *
                C153513 * C153739) *
               C153477) *
              C153795 +
          (((C12546 + C12545 + C12544 + C12543) * C153513 * C153739 +
            (C13783 + C13784 + C13785 + C13786) * C153513 * C153560) *
               C153477 -
           ((C11587 + C11588 + C11589 + C11590) * C153513 * C153560 +
            (C11586 + C11585 + C11584 + C11583) * C153513 * C153739) *
               C153725) *
              C153796 +
          (((C11590 + C11589 + C11588 + C11587) * C153513 * C153739 +
            (C12895 + C12896 + C12897 + C12898) * C153513 * C153560) *
               C153725 -
           ((C11274 * C4146 + C13771 + C13771 + C153738 * C4154 +
             C11272 * C4145 + C13772 + C13772 + C11264 * C4153 +
             C11270 * C4144 + C13773 + C13773 + C11263 * C4152 +
             C11268 * C4143 + C13774 + C13774 + C11262 * C4151) *
                C153513 * C153560 +
            (C13786 + C13785 + C13784 + C13783) * C153513 * C153739) *
               C153477) *
              C1509) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C34887 * C144 + C34892 + C34892 + C153705 * C160 + C34889 * C145 +
             C34893 + C34893 + C153348 * C161) *
                C153513 * C34883 +
            (C35190 + C35191) * C153513 * C34884 + C35210 * C34885 +
            C35211 * C153747) *
               C153725 -
           (C37410 * C153747 + C37411 * C34885 +
            (C36182 + C36183) * C153513 * C34884 +
            (C34889 * C499 + C35414 + C35414 + C153348 * C523 + C34887 * C500 +
             C35415 + C35415 + C153705 * C524) *
                C153513 * C34883) *
               C153477) *
              C153795 +
          (((C36183 + C36182) * C153513 * C34883 +
            (C36181 + C36180) * C153513 * C34884 +
            (C36179 + C36178) * C153513 * C34885 +
            (C37416 + C37417) * C153513 * C153747) *
               C153477 -
           (C36522 * C153747 + C36523 * C34885 +
            (C35193 + C35192) * C153513 * C34884 +
            (C35191 + C35190) * C153513 * C34883) *
               C153725) *
              C153796 +
          ((C35210 * C34883 + C35211 * C34884 +
            (C35197 + C35196) * C153513 * C34885 +
            (C36528 + C36529) * C153513 * C153747) *
               C153725 -
           ((C34889 * C29033 + C37408 + C37408 + C153348 * C29037 +
             C34887 * C29032 + C37409 + C37409 + C153705 * C29036) *
                C153513 * C153747 +
            (C37417 + C37416) * C153513 * C34885 + C37410 * C34884 +
            C37411 * C34883) *
               C153477) *
              C1509) *
         C153378) /
            (p * q * std::sqrt(p + q));
    d2ee[307] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C11268 * C144 + C11277 + C11277 + C11262 * C160 + C11270 * C145 +
            C11278 + C11278 + C11263 * C161 + C11272 * C146 + C11279 + C11279 +
            C11264 * C162 + C11274 * C147 + C11280 + C11280 + C153738 * C163) *
               C153513 * C153739 +
           (C11583 + C11584 + C11585 + C11586) * C153513 * C153560) *
              C153413 * C1218 -
          ((C11587 + C11588 + C11589 + C11590) * C153513 * C153560 +
           (C11586 + C11585 + C11584 + C11583) * C153513 * C153739) *
              C153413 * C1219 +
          ((C11590 + C11589 + C11588 + C11587) * C153513 * C153739 +
           (C12895 + C12896 + C12897 + C12898) * C153513 * C153560) *
              C153413 * C1220 -
          ((C11274 * C2992 + C12883 + C12883 + C153738 * C3000 +
            C11272 * C2991 + C12884 + C12884 + C11264 * C2999 + C11270 * C2990 +
            C12885 + C12885 + C11263 * C2998 + C11268 * C2989 + C12886 +
            C12886 + C11262 * C2997) *
               C153513 * C153560 +
           (C12898 + C12897 + C12896 + C12895) * C153513 * C153739) *
              C153413 * C1221) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C11268 * C144 + C11277 + C11277 + C11262 * C160 + C11270 * C145 +
             C11278 + C11278 + C11263 * C161 + C11272 * C146 + C11279 + C11279 +
             C11264 * C162 + C11274 * C147 + C11280 + C11280 + C153738 * C163) *
                C153513 * C153739 +
            (C11583 + C11584 + C11585 + C11586) * C153513 * C153560) *
               C153413 * C1131 -
           ((C11587 + C11588 + C11589 + C11590) * C153513 * C153560 +
            (C11586 + C11585 + C11584 + C11583) * C153513 * C153739) *
               C153413 * C153449) *
              C1133 +
          (((C11591 + C11592 + C11593 + C11594) * C153513 * C153739 +
            (C11595 + C11596 + C11597 + C11598) * C153513 * C153560) *
               C153413 * C153449 -
           ((C11594 + C11593 + C11592 + C11591) * C153513 * C153560 +
            (C11274 * C148 + C11289 + C11289 + C153738 * C164 + C11272 * C147 +
             C11290 + C11290 + C11264 * C163 + C11270 * C146 + C11291 + C11291 +
             C11263 * C162 + C11268 * C145 + C11292 + C11292 + C11262 * C161) *
                C153513 * C153739) *
               C153413 * C1131) *
              C1134 +
          (((C11268 * C146 + C11293 + C11293 + C11262 * C162 + C11270 * C147 +
             C11294 + C11294 + C11263 * C163 + C11272 * C148 + C11295 + C11295 +
             C11264 * C164 + C11274 * C149 + C11296 + C11296 + C153738 * C165) *
                C153513 * C153739 +
            (C12039 + C12040 + C12041 + C12042) * C153513 * C153560) *
               C153413 * C1131 -
           ((C11274 * C326 + C12027 + C12027 + C153738 * C350 + C11272 * C324 +
             C12028 + C12028 + C11264 * C348 + C11270 * C323 + C12029 + C12029 +
             C11263 * C347 + C11268 * C322 + C12030 + C12030 + C11262 * C346) *
                C153513 * C153560 +
            (C12042 + C12041 + C12040 + C12039) * C153513 * C153739) *
               C153413 * C153449) *
              C1135)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C11268 * C144 + C11277 + C11277 + C11262 * C160 + C11270 * C145 +
             C11278 + C11278 + C11263 * C161 + C11272 * C146 + C11279 + C11279 +
             C11264 * C162 + C11274 * C147 + C11280 + C11280 + C153738 * C163) *
                C153513 * C153739 +
            (C11583 + C11584 + C11585 + C11586) * C153513 * C153560) *
               C493 -
           ((C12543 + C12544 + C12545 + C12546) * C153513 * C153560 +
            (C11274 * C497 + C11797 + C11797 + C153738 * C521 + C11272 * C498 +
             C11798 + C11798 + C11264 * C522 + C11270 * C499 + C11799 + C11799 +
             C11263 * C523 + C11268 * C500 + C11800 + C11800 + C11262 * C524) *
                C153513 * C153739) *
               C494 +
           ((C11268 * C501 + C11801 + C11801 + C11262 * C525 + C11270 * C502 +
             C11802 + C11802 + C11263 * C526 + C11272 * C503 + C11803 + C11803 +
             C11264 * C527 + C11274 * C504 + C11804 + C11804 + C153738 * C528) *
                C153513 * C153739 +
            (C13113 + C13114 + C13115 + C13116) * C153513 * C153560) *
               C495) *
              C1131 +
          (((C12546 + C12545 + C12544 + C12543) * C153513 * C153739 +
            (C11268 * C1800 + C12511 + C12511 + C11262 * C1810 +
             C11270 * C1799 + C12512 + C12512 + C11263 * C1809 +
             C11272 * C1798 + C12513 + C12513 + C11264 * C1808 +
             C11274 * C1797 + C12514 + C12514 + C153738 * C1807) *
                C153513 * C153560) *
               C494 -
           ((C11587 + C11588 + C11589 + C11590) * C153513 * C153560 +
            (C11586 + C11585 + C11584 + C11583) * C153513 * C153739) *
               C493 -
           ((C11274 * C3330 + C13101 + C13101 + C153738 * C3338 +
             C11272 * C3329 + C13102 + C13102 + C11264 * C3337 +
             C11270 * C3328 + C13103 + C13103 + C11263 * C3336 +
             C11268 * C3327 + C13104 + C13104 + C11262 * C3335) *
                C153513 * C153560 +
            (C13116 + C13115 + C13114 + C13113) * C153513 * C153739) *
               C495) *
              C153449) *
         C153378) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C34887 * C144 + C34892 + C34892 + C153705 * C160 + C34889 * C145 +
             C34893 + C34893 + C153348 * C161) *
                C153513 * C34883 +
            (C35190 + C35191) * C153513 * C34884 + C35210 * C34885 +
            C35211 * C153747) *
               C153413 * C1131 -
           ((C35196 + C35197) * C153513 * C153747 +
            (C35195 + C35194) * C153513 * C34885 +
            (C35193 + C35192) * C153513 * C34884 +
            (C35191 + C35190) * C153513 * C34883) *
               C153413 * C153449) *
              C1133 +
          (((C35198 + C35199) * C153513 * C34883 +
            (C35200 + C35201) * C153513 * C34884 +
            (C35202 + C35203) * C153513 * C34885 +
            (C35204 + C35205) * C153513 * C153747) *
               C153413 * C153449 -
           (C35212 * C153747 + C35213 * C34885 +
            (C35199 + C35198) * C153513 * C34884 +
            (C34889 * C146 + C34906 + C34906 + C153348 * C162 + C34887 * C145 +
             C34907 + C34907 + C153705 * C161) *
                C153513 * C34883) *
               C153413 * C1131) *
              C1134 +
          (((C34887 * C146 + C34908 + C34908 + C153705 * C162 + C34889 * C147 +
             C34909 + C34909 + C153348 * C163) *
                C153513 * C34883 +
            (C35660 + C35661) * C153513 * C34884 +
            (C35662 + C35663) * C153513 * C34885 +
            (C35664 + C35665) * C153513 * C153747) *
               C153413 * C1131 -
           ((C34889 * C2992 + C35646 + C35646 + C153348 * C3000 +
             C34887 * C2991 + C35647 + C35647 + C153705 * C2999) *
                C153513 * C153747 +
            (C35665 + C35664) * C153513 * C34885 +
            (C35663 + C35662) * C153513 * C34884 +
            (C35661 + C35660) * C153513 * C34883) *
               C153413 * C153449) *
              C1135)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C34887 * C144 + C34892 + C34892 + C153705 * C160 + C34889 * C145 +
            C34893 + C34893 + C153348 * C161) *
               C153513 * C34883 +
           (C35190 + C35191) * C153513 * C34884 + C35210 * C34885 +
           C35211 * C153747) *
              C153413 * C1218 -
          (C36522 * C153747 + C36523 * C34885 +
           (C35193 + C35192) * C153513 * C34884 +
           (C35191 + C35190) * C153513 * C34883) *
              C153413 * C1219 +
          (C35210 * C34883 + C35211 * C34884 +
           (C35197 + C35196) * C153513 * C34885 +
           (C36528 + C36529) * C153513 * C153747) *
              C153413 * C1220 -
          ((C34889 * C28379 + C36520 + C36520 + C153348 * C28383 +
            C34887 * C28378 + C36521 + C36521 + C153705 * C28382) *
               C153513 * C153747 +
           (C36529 + C36528) * C153513 * C34885 + C36522 * C34884 +
           C36523 * C34883) *
              C153413 * C1221) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C34887 * C144 + C34892 + C34892 + C153705 * C160 + C34889 * C145 +
             C34893 + C34893 + C153348 * C161) *
                C153513 * C34883 +
            (C35190 + C35191) * C153513 * C34884 + C35210 * C34885 +
            C35211 * C153747) *
               C493 -
           ((C36178 + C36179) * C153513 * C153747 +
            (C36180 + C36181) * C153513 * C34885 +
            (C36182 + C36183) * C153513 * C34884 +
            (C34889 * C499 + C35414 + C35414 + C153348 * C523 + C34887 * C500 +
             C35415 + C35415 + C153705 * C524) *
                C153513 * C34883) *
               C494 +
           ((C34887 * C501 + C35416 + C35416 + C153705 * C525 + C34889 * C502 +
             C35417 + C35417 + C153348 * C526) *
                C153513 * C34883 +
            (C36750 + C36751) * C153513 * C34884 +
            (C36752 + C36753) * C153513 * C34885 +
            (C36754 + C36755) * C153513 * C153747) *
               C495) *
              C1131 +
          (((C36183 + C36182) * C153513 * C34883 +
            (C36181 + C36180) * C153513 * C34884 +
            (C36179 + C36178) * C153513 * C34885 +
            (C34887 * C5603 + C36138 + C36138 + C153705 * C5609 +
             C34889 * C5602 + C36139 + C36139 + C153348 * C5608) *
                C153513 * C153747) *
               C494 -
           (C36522 * C153747 + C36523 * C34885 +
            (C35193 + C35192) * C153513 * C34884 +
            (C35191 + C35190) * C153513 * C34883) *
               C493 -
           ((C34889 * C28571 + C36736 + C36736 + C153348 * C28575 +
             C34887 * C28570 + C36737 + C36737 + C153705 * C28574) *
                C153513 * C153747 +
            (C36755 + C36754) * C153513 * C34885 +
            (C36753 + C36752) * C153513 * C34884 +
            (C36751 + C36750) * C153513 * C34883) *
               C495) *
              C153449) *
         C153378) /
            (p * q * std::sqrt(p + q));
    d2ee[308] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C11268 * C144 + C11277 + C11277 + C11262 * C160 +
                       C11270 * C145 + C11278 + C11278 + C11263 * C161 +
                       C11272 * C146 + C11279 + C11279 + C11264 * C162 +
                       C11274 * C147 + C11280 + C11280 + C153738 * C163) *
                          C153513 * C153739 +
                      (C11583 + C11584 + C11585 + C11586) * C153513 * C153560) *
                         C153725 -
                     ((C12543 + C12544 + C12545 + C12546) * C153513 * C153560 +
                      (C11274 * C497 + C11797 + C11797 + C153738 * C521 +
                       C11272 * C498 + C11798 + C11798 + C11264 * C522 +
                       C11270 * C499 + C11799 + C11799 + C11263 * C523 +
                       C11268 * C500 + C11800 + C11800 + C11262 * C524) *
                          C153513 * C153739) *
                         C153477) *
                        C1131 +
                    (((C12546 + C12545 + C12544 + C12543) * C153513 * C153739 +
                      (C11268 * C1800 + C12511 + C12511 + C11262 * C1810 +
                       C11270 * C1799 + C12512 + C12512 + C11263 * C1809 +
                       C11272 * C1798 + C12513 + C12513 + C11264 * C1808 +
                       C11274 * C1797 + C12514 + C12514 + C153738 * C1807) *
                          C153513 * C153560) *
                         C153477 -
                     ((C11587 + C11588 + C11589 + C11590) * C153513 * C153560 +
                      (C11586 + C11585 + C11584 + C11583) * C153513 * C153739) *
                         C153725) *
                        C153449) *
                       C153716 +
                   ((((C11268 * C499 + C11809 + C11809 + C11262 * C523 +
                       C11270 * C498 + C11810 + C11810 + C11263 * C522 +
                       C11272 * C497 + C11811 + C11811 + C11264 * C521 +
                       C11274 * C496 + C11812 + C11812 + C153738 * C520) *
                          C153513 * C153739 +
                      (C12547 + C12548 + C12549 + C12550) * C153513 * C153560) *
                         C153477 -
                     ((C11594 + C11593 + C11592 + C11591) * C153513 * C153560 +
                      (C11274 * C148 + C11289 + C11289 + C153738 * C164 +
                       C11272 * C147 + C11290 + C11290 + C11264 * C163 +
                       C11270 * C146 + C11291 + C11291 + C11263 * C162 +
                       C11268 * C145 + C11292 + C11292 + C11262 * C161) *
                          C153513 * C153739) *
                         C153725) *
                        C1131 +
                    (((C11591 + C11592 + C11593 + C11594) * C153513 * C153739 +
                      (C11595 + C11596 + C11597 + C11598) * C153513 * C153560) *
                         C153725 -
                     ((C11274 * C1796 + C12523 + C12523 + C153738 * C1806 +
                       C11272 * C1797 + C12524 + C12524 + C11264 * C1807 +
                       C11270 * C1798 + C12525 + C12525 + C11263 * C1808 +
                       C11268 * C1799 + C12526 + C12526 + C11262 * C1809) *
                          C153513 * C153560 +
                      (C12550 + C12549 + C12548 + C12547) * C153513 * C153739) *
                         C153477) *
                        C153449) *
                       C153384)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C34887 * C144 + C34892 + C34892 + C153705 * C160 +
                       C34889 * C145 + C34893 + C34893 + C153348 * C161) *
                          C153513 * C34883 +
                      (C35190 + C35191) * C153513 * C34884 + C35210 * C34885 +
                      C35211 * C153747) *
                         C153725 -
                     ((C36178 + C36179) * C153513 * C153747 +
                      (C36180 + C36181) * C153513 * C34885 +
                      (C36182 + C36183) * C153513 * C34884 +
                      (C34889 * C499 + C35414 + C35414 + C153348 * C523 +
                       C34887 * C500 + C35415 + C35415 + C153705 * C524) *
                          C153513 * C34883) *
                         C153477) *
                        C1131 +
                    (((C36183 + C36182) * C153513 * C34883 +
                      (C36181 + C36180) * C153513 * C34884 +
                      (C36179 + C36178) * C153513 * C34885 +
                      (C34887 * C5603 + C36138 + C36138 + C153705 * C5609 +
                       C34889 * C5602 + C36139 + C36139 + C153348 * C5608) *
                          C153513 * C153747) *
                         C153477 -
                     (C36522 * C153747 + C36523 * C34885 +
                      (C35193 + C35192) * C153513 * C34884 +
                      (C35191 + C35190) * C153513 * C34883) *
                         C153725) *
                        C153449) *
                       C153716 +
                   ((((C34887 * C499 + C35424 + C35424 + C153705 * C523 +
                       C34889 * C498 + C35425 + C35425 + C153348 * C522) *
                          C153513 * C34883 +
                      (C36184 + C36185) * C153513 * C34884 +
                      (C36186 + C36187) * C153513 * C34885 +
                      (C36188 + C36189) * C153513 * C153747) *
                         C153477 -
                     (C35212 * C153747 + C35213 * C34885 +
                      (C35199 + C35198) * C153513 * C34884 +
                      (C34889 * C146 + C34906 + C34906 + C153348 * C162 +
                       C34887 * C145 + C34907 + C34907 + C153705 * C161) *
                          C153513 * C34883) *
                         C153725) *
                        C1131 +
                    (((C35198 + C35199) * C153513 * C34883 +
                      (C35200 + C35201) * C153513 * C34884 +
                      (C35202 + C35203) * C153513 * C34885 +
                      (C35204 + C35205) * C153513 * C153747) *
                         C153725 -
                     ((C34889 * C5601 + C36152 + C36152 + C153348 * C5607 +
                       C34887 * C5602 + C36153 + C36153 + C153705 * C5608) *
                          C153513 * C153747 +
                      (C36189 + C36188) * C153513 * C34885 +
                      (C36187 + C36186) * C153513 * C34884 +
                      (C36185 + C36184) * C153513 * C34883) *
                         C153477) *
                        C153449) *
                       C153384)) /
                     (p * q * std::sqrt(p + q));
    d2ee[309] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C11268 * C144 + C11277 + C11277 + C11262 * C160 + C11270 * C145 +
             C11278 + C11278 + C11263 * C161 + C11272 * C146 + C11279 + C11279 +
             C11264 * C162 + C11274 * C147 + C11280 + C11280 + C153738 * C163) *
                C153513 * C153739 +
            (C11583 + C11584 + C11585 + C11586) * C153513 * C153560) *
               C153413 * C1131 -
           ((C11587 + C11588 + C11589 + C11590) * C153513 * C153560 +
            (C11586 + C11585 + C11584 + C11583) * C153513 * C153739) *
               C153413 * C153449) *
              C1133 +
          (((C11591 + C11592 + C11593 + C11594) * C153513 * C153739 +
            (C11595 + C11596 + C11597 + C11598) * C153513 * C153560) *
               C153413 * C153449 -
           ((C11594 + C11593 + C11592 + C11591) * C153513 * C153560 +
            (C11274 * C148 + C11289 + C11289 + C153738 * C164 + C11272 * C147 +
             C11290 + C11290 + C11264 * C163 + C11270 * C146 + C11291 + C11291 +
             C11263 * C162 + C11268 * C145 + C11292 + C11292 + C11262 * C161) *
                C153513 * C153739) *
               C153413 * C1131) *
              C1134 +
          (((C11268 * C146 + C11293 + C11293 + C11262 * C162 + C11270 * C147 +
             C11294 + C11294 + C11263 * C163 + C11272 * C148 + C11295 + C11295 +
             C11264 * C164 + C11274 * C149 + C11296 + C11296 + C153738 * C165) *
                C153513 * C153739 +
            (C12039 + C12040 + C12041 + C12042) * C153513 * C153560) *
               C153413 * C1131 -
           ((C11274 * C326 + C12027 + C12027 + C153738 * C350 + C11272 * C324 +
             C12028 + C12028 + C11264 * C348 + C11270 * C323 + C12029 + C12029 +
             C11263 * C347 + C11268 * C322 + C12030 + C12030 + C11262 * C346) *
                C153513 * C153560 +
            (C12042 + C12041 + C12040 + C12039) * C153513 * C153739) *
               C153413 * C153449) *
              C1135)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C11268 * C144 + C11277 + C11277 + C11262 * C160 + C11270 * C145 +
            C11278 + C11278 + C11263 * C161 + C11272 * C146 + C11279 + C11279 +
            C11264 * C162 + C11274 * C147 + C11280 + C11280 + C153738 * C163) *
               C153513 * C153739 +
           (C11583 + C11584 + C11585 + C11586) * C153513 * C153560) *
              C153413 * C1218 -
          ((C11587 + C11588 + C11589 + C11590) * C153513 * C153560 +
           (C11586 + C11585 + C11584 + C11583) * C153513 * C153739) *
              C153413 * C1219 +
          ((C11590 + C11589 + C11588 + C11587) * C153513 * C153739 +
           (C12895 + C12896 + C12897 + C12898) * C153513 * C153560) *
              C153413 * C1220 -
          ((C11274 * C2992 + C12883 + C12883 + C153738 * C3000 +
            C11272 * C2991 + C12884 + C12884 + C11264 * C2999 + C11270 * C2990 +
            C12885 + C12885 + C11263 * C2998 + C11268 * C2989 + C12886 +
            C12886 + C11262 * C2997) *
               C153513 * C153560 +
           (C12898 + C12897 + C12896 + C12895) * C153513 * C153739) *
              C153413 * C1221) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C34887 * C144 + C34892 + C34892 + C153705 * C160 + C34889 * C145 +
             C34893 + C34893 + C153348 * C161) *
                C153513 * C34883 +
            (C35190 + C35191) * C153513 * C34884 + C35210 * C34885 +
            C35211 * C153747) *
               C153413 * C1131 -
           ((C35196 + C35197) * C153513 * C153747 +
            (C35195 + C35194) * C153513 * C34885 +
            (C35193 + C35192) * C153513 * C34884 +
            (C35191 + C35190) * C153513 * C34883) *
               C153413 * C153449) *
              C1133 +
          (((C35198 + C35199) * C153513 * C34883 +
            (C35200 + C35201) * C153513 * C34884 +
            (C35202 + C35203) * C153513 * C34885 +
            (C35204 + C35205) * C153513 * C153747) *
               C153413 * C153449 -
           (C35212 * C153747 + C35213 * C34885 +
            (C35199 + C35198) * C153513 * C34884 +
            (C34889 * C146 + C34906 + C34906 + C153348 * C162 + C34887 * C145 +
             C34907 + C34907 + C153705 * C161) *
                C153513 * C34883) *
               C153413 * C1131) *
              C1134 +
          (((C34887 * C146 + C34908 + C34908 + C153705 * C162 + C34889 * C147 +
             C34909 + C34909 + C153348 * C163) *
                C153513 * C34883 +
            (C35660 + C35661) * C153513 * C34884 +
            (C35662 + C35663) * C153513 * C34885 +
            (C35664 + C35665) * C153513 * C153747) *
               C153413 * C1131 -
           ((C34889 * C2992 + C35646 + C35646 + C153348 * C3000 +
             C34887 * C2991 + C35647 + C35647 + C153705 * C2999) *
                C153513 * C153747 +
            (C35665 + C35664) * C153513 * C34885 +
            (C35663 + C35662) * C153513 * C34884 +
            (C35661 + C35660) * C153513 * C34883) *
               C153413 * C153449) *
              C1135)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C34887 * C144 + C34892 + C34892 + C153705 * C160 + C34889 * C145 +
            C34893 + C34893 + C153348 * C161) *
               C153513 * C34883 +
           (C35190 + C35191) * C153513 * C34884 + C35210 * C34885 +
           C35211 * C153747) *
              C153413 * C1218 -
          (C36522 * C153747 + C36523 * C34885 +
           (C35193 + C35192) * C153513 * C34884 +
           (C35191 + C35190) * C153513 * C34883) *
              C153413 * C1219 +
          (C35210 * C34883 + C35211 * C34884 +
           (C35197 + C35196) * C153513 * C34885 +
           (C36528 + C36529) * C153513 * C153747) *
              C153413 * C1220 -
          ((C34889 * C28379 + C36520 + C36520 + C153348 * C28383 +
            C34887 * C28378 + C36521 + C36521 + C153705 * C28382) *
               C153513 * C153747 +
           (C36529 + C36528) * C153513 * C34885 + C36522 * C34884 +
           C36523 * C34883) *
              C153413 * C1221) *
         C153378) /
            (p * q * std::sqrt(p + q));
    d2ee[310] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C11268 * C144 + C11277 + C11277 + C11262 * C160 +
                       C11270 * C145 + C11278 + C11278 + C11263 * C161 +
                       C11272 * C146 + C11279 + C11279 + C11264 * C162 +
                       C11274 * C147 + C11280 + C11280 + C153738 * C163) *
                          C153513 * C153739 +
                      (C11583 + C11584 + C11585 + C11586) * C153513 * C153560) *
                         C1938 -
                     ((C12543 + C12544 + C12545 + C12546) * C153513 * C153560 +
                      (C11274 * C497 + C11797 + C11797 + C153738 * C521 +
                       C11272 * C498 + C11798 + C11798 + C11264 * C522 +
                       C11270 * C499 + C11799 + C11799 + C11263 * C523 +
                       C11268 * C500 + C11800 + C11800 + C11262 * C524) *
                          C153513 * C153739) *
                         C153477) *
                        C153724 +
                    (((C12546 + C12545 + C12544 + C12543) * C153513 * C153739 +
                      (C13783 + C13784 + C13785 + C13786) * C153513 * C153560) *
                         C153477 -
                     ((C11587 + C11588 + C11589 + C11590) * C153513 * C153560 +
                      (C11586 + C11585 + C11584 + C11583) * C153513 * C153739) *
                         C1938) *
                        C153449) *
                       C153716 +
                   ((((C11268 * C499 + C11809 + C11809 + C11262 * C523 +
                       C11270 * C498 + C11810 + C11810 + C11263 * C522 +
                       C11272 * C497 + C11811 + C11811 + C11264 * C521 +
                       C11274 * C496 + C11812 + C11812 + C153738 * C520) *
                          C153513 * C153739 +
                      (C12547 + C12548 + C12549 + C12550) * C153513 * C153560) *
                         C153477 -
                     ((C11594 + C11593 + C11592 + C11591) * C153513 * C153560 +
                      (C11274 * C148 + C11289 + C11289 + C153738 * C164 +
                       C11272 * C147 + C11290 + C11290 + C11264 * C163 +
                       C11270 * C146 + C11291 + C11291 + C11263 * C162 +
                       C11268 * C145 + C11292 + C11292 + C11262 * C161) *
                          C153513 * C153739) *
                         C1938) *
                        C153724 +
                    (((C11591 + C11592 + C11593 + C11594) * C153513 * C153739 +
                      (C11595 + C11596 + C11597 + C11598) * C153513 * C153560) *
                         C1938 -
                     ((C11274 * C1796 + C12523 + C12523 + C153738 * C1806 +
                       C11272 * C1797 + C12524 + C12524 + C11264 * C1807 +
                       C11270 * C1798 + C12525 + C12525 + C11263 * C1808 +
                       C11268 * C1799 + C12526 + C12526 + C11262 * C1809) *
                          C153513 * C153560 +
                      (C12550 + C12549 + C12548 + C12547) * C153513 * C153739) *
                         C153477) *
                        C153449) *
                       C153384)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C34887 * C144 + C34892 + C34892 + C153705 * C160 +
                       C34889 * C145 + C34893 + C34893 + C153348 * C161) *
                          C153513 * C34883 +
                      (C35190 + C35191) * C153513 * C34884 + C35210 * C34885 +
                      C35211 * C153747) *
                         C1938 -
                     (C37410 * C153747 + C37411 * C34885 +
                      (C36182 + C36183) * C153513 * C34884 +
                      (C34889 * C499 + C35414 + C35414 + C153348 * C523 +
                       C34887 * C500 + C35415 + C35415 + C153705 * C524) *
                          C153513 * C34883) *
                         C153477) *
                        C153724 +
                    (((C36183 + C36182) * C153513 * C34883 +
                      (C36181 + C36180) * C153513 * C34884 +
                      (C36179 + C36178) * C153513 * C34885 +
                      (C37416 + C37417) * C153513 * C153747) *
                         C153477 -
                     (C36522 * C153747 + C36523 * C34885 +
                      (C35193 + C35192) * C153513 * C34884 +
                      (C35191 + C35190) * C153513 * C34883) *
                         C1938) *
                        C153449) *
                       C153716 +
                   ((((C34887 * C499 + C35424 + C35424 + C153705 * C523 +
                       C34889 * C498 + C35425 + C35425 + C153348 * C522) *
                          C153513 * C34883 +
                      (C36184 + C36185) * C153513 * C34884 +
                      (C36186 + C36187) * C153513 * C34885 +
                      (C36188 + C36189) * C153513 * C153747) *
                         C153477 -
                     (C35212 * C153747 + C35213 * C34885 +
                      (C35199 + C35198) * C153513 * C34884 +
                      (C34889 * C146 + C34906 + C34906 + C153348 * C162 +
                       C34887 * C145 + C34907 + C34907 + C153705 * C161) *
                          C153513 * C34883) *
                         C1938) *
                        C153724 +
                    (((C35198 + C35199) * C153513 * C34883 +
                      (C35200 + C35201) * C153513 * C34884 +
                      (C35202 + C35203) * C153513 * C34885 +
                      (C35204 + C35205) * C153513 * C153747) *
                         C1938 -
                     ((C34889 * C5601 + C36152 + C36152 + C153348 * C5607 +
                       C34887 * C5602 + C36153 + C36153 + C153705 * C5608) *
                          C153513 * C153747 +
                      (C36189 + C36188) * C153513 * C34885 +
                      (C36187 + C36186) * C153513 * C34884 +
                      (C36185 + C36184) * C153513 * C34883) *
                         C153477) *
                        C153449) *
                       C153384)) /
                     (p * q * std::sqrt(p + q));
    d2ee[311] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C11268 * C144 + C11277 + C11277 + C11262 * C160 + C11270 * C145 +
             C11278 + C11278 + C11263 * C161 + C11272 * C146 + C11279 + C11279 +
             C11264 * C162 + C11274 * C147 + C11280 + C11280 + C153738 * C163) *
                C153513 * C153739 +
            (C11583 + C11584 + C11585 + C11586) * C153513 * C153560) *
               C153797 -
           ((C12543 + C12544 + C12545 + C12546) * C153513 * C153560 +
            (C11274 * C497 + C11797 + C11797 + C153738 * C521 + C11272 * C498 +
             C11798 + C11798 + C11264 * C522 + C11270 * C499 + C11799 + C11799 +
             C11263 * C523 + C11268 * C500 + C11800 + C11800 + C11262 * C524) *
                C153513 * C153739) *
               C153798 +
           ((C11268 * C501 + C11801 + C11801 + C11262 * C525 + C11270 * C502 +
             C11802 + C11802 + C11263 * C526 + C11272 * C503 + C11803 + C11803 +
             C11264 * C527 + C11274 * C504 + C11804 + C11804 + C153738 * C528) *
                C153513 * C153739 +
            (C13113 + C13114 + C13115 + C13116) * C153513 * C153560) *
               C2454) *
              C153724 +
          (((C12546 + C12545 + C12544 + C12543) * C153513 * C153739 +
            (C13783 + C13784 + C13785 + C13786) * C153513 * C153560) *
               C153798 -
           ((C11587 + C11588 + C11589 + C11590) * C153513 * C153560 +
            (C11586 + C11585 + C11584 + C11583) * C153513 * C153739) *
               C153797 -
           ((C11274 * C3330 + C13101 + C13101 + C153738 * C3338 +
             C11272 * C3329 + C13102 + C13102 + C11264 * C3337 +
             C11270 * C3328 + C13103 + C13103 + C11263 * C3336 +
             C11268 * C3327 + C13104 + C13104 + C11262 * C3335) *
                C153513 * C153560 +
            (C13116 + C13115 + C13114 + C13113) * C153513 * C153739) *
               C2454) *
              C153449) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C34887 * C144 + C34892 + C34892 + C153705 * C160 + C34889 * C145 +
             C34893 + C34893 + C153348 * C161) *
                C153513 * C34883 +
            (C35190 + C35191) * C153513 * C34884 + C35210 * C34885 +
            C35211 * C153747) *
               C153797 -
           (C37410 * C153747 + C37411 * C34885 +
            (C36182 + C36183) * C153513 * C34884 +
            (C34889 * C499 + C35414 + C35414 + C153348 * C523 + C34887 * C500 +
             C35415 + C35415 + C153705 * C524) *
                C153513 * C34883) *
               C153798 +
           ((C34887 * C501 + C35416 + C35416 + C153705 * C525 + C34889 * C502 +
             C35417 + C35417 + C153348 * C526) *
                C153513 * C34883 +
            (C36750 + C36751) * C153513 * C34884 +
            (C36752 + C36753) * C153513 * C34885 +
            (C36754 + C36755) * C153513 * C153747) *
               C2454) *
              C153724 +
          (((C36183 + C36182) * C153513 * C34883 +
            (C36181 + C36180) * C153513 * C34884 +
            (C36179 + C36178) * C153513 * C34885 +
            (C37416 + C37417) * C153513 * C153747) *
               C153798 -
           (C36522 * C153747 + C36523 * C34885 +
            (C35193 + C35192) * C153513 * C34884 +
            (C35191 + C35190) * C153513 * C34883) *
               C153797 -
           ((C34889 * C28571 + C36736 + C36736 + C153348 * C28575 +
             C34887 * C28570 + C36737 + C36737 + C153705 * C28574) *
                C153513 * C153747 +
            (C36755 + C36754) * C153513 * C34885 +
            (C36753 + C36752) * C153513 * C34884 +
            (C36751 + C36750) * C153513 * C34883) *
               C2454) *
              C153449) *
         C153378) /
            (p * q * std::sqrt(p + q));
    d2ee[312] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C11268 * C144 + C11277 + C11277 + C11262 * C160 + C11270 * C145 +
             C11278 + C11278 + C11263 * C161 + C11272 * C146 + C11279 + C11279 +
             C11264 * C162 + C11274 * C147 + C11280 + C11280 + C153738 * C163) *
                C153513 * C153739 +
            (C11583 + C11584 + C11585 + C11586) * C153513 * C153560) *
               C1938 -
           ((C12543 + C12544 + C12545 + C12546) * C153513 * C153560 +
            (C11274 * C497 + C11797 + C11797 + C153738 * C521 + C11272 * C498 +
             C11798 + C11798 + C11264 * C522 + C11270 * C499 + C11799 + C11799 +
             C11263 * C523 + C11268 * C500 + C11800 + C11800 + C11262 * C524) *
                C153513 * C153739) *
               C153477) *
              C310 +
          (((C12546 + C12545 + C12544 + C12543) * C153513 * C153739 +
            (C13783 + C13784 + C13785 + C13786) * C153513 * C153560) *
               C153477 -
           ((C11587 + C11588 + C11589 + C11590) * C153513 * C153560 +
            (C11586 + C11585 + C11584 + C11583) * C153513 * C153739) *
               C1938) *
              C311 +
          (((C11590 + C11589 + C11588 + C11587) * C153513 * C153739 +
            (C12895 + C12896 + C12897 + C12898) * C153513 * C153560) *
               C1938 -
           ((C11274 * C4146 + C13771 + C13771 + C153738 * C4154 +
             C11272 * C4145 + C13772 + C13772 + C11264 * C4153 +
             C11270 * C4144 + C13773 + C13773 + C11263 * C4152 +
             C11268 * C4143 + C13774 + C13774 + C11262 * C4151) *
                C153513 * C153560 +
            (C13786 + C13785 + C13784 + C13783) * C153513 * C153739) *
               C153477) *
              C312) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C11268 * C144 + C11277 + C11277 + C11262 * C160 + C11270 * C145 +
             C11278 + C11278 + C11263 * C161 + C11272 * C146 + C11279 + C11279 +
             C11264 * C162 + C11274 * C147 + C11280 + C11280 + C153738 * C163) *
                C153513 * C153739 +
            (C11583 + C11584 + C11585 + C11586) * C153513 * C153560) *
               C1938 -
           ((C12543 + C12544 + C12545 + C12546) * C153513 * C153560 +
            (C11274 * C497 + C11797 + C11797 + C153738 * C521 + C11272 * C498 +
             C11798 + C11798 + C11264 * C522 + C11270 * C499 + C11799 + C11799 +
             C11263 * C523 + C11268 * C500 + C11800 + C11800 + C11262 * C524) *
                C153513 * C153739) *
               C153477) *
              C153397 * C1133 +
          (((C11268 * C499 + C11809 + C11809 + C11262 * C523 + C11270 * C498 +
             C11810 + C11810 + C11263 * C522 + C11272 * C497 + C11811 + C11811 +
             C11264 * C521 + C11274 * C496 + C11812 + C11812 + C153738 * C520) *
                C153513 * C153739 +
            (C12547 + C12548 + C12549 + C12550) * C153513 * C153560) *
               C153477 -
           ((C11594 + C11593 + C11592 + C11591) * C153513 * C153560 +
            (C11274 * C148 + C11289 + C11289 + C153738 * C164 + C11272 * C147 +
             C11290 + C11290 + C11264 * C163 + C11270 * C146 + C11291 + C11291 +
             C11263 * C162 + C11268 * C145 + C11292 + C11292 + C11262 * C161) *
                C153513 * C153739) *
               C1938) *
              C153397 * C1134 +
          (((C11268 * C146 + C11293 + C11293 + C11262 * C162 + C11270 * C147 +
             C11294 + C11294 + C11263 * C163 + C11272 * C148 + C11295 + C11295 +
             C11264 * C164 + C11274 * C149 + C11296 + C11296 + C153738 * C165) *
                C153513 * C153739 +
            (C12039 + C12040 + C12041 + C12042) * C153513 * C153560) *
               C1938 -
           ((C11274 * C986 + C12237 + C12237 + C153738 * C998 + C11272 * C985 +
             C12238 + C12238 + C11264 * C997 + C11270 * C984 + C12239 + C12239 +
             C11263 * C996 + C11268 * C983 + C12240 + C12240 + C11262 * C995) *
                C153513 * C153560 +
            (C11274 * C506 + C12241 + C12241 + C153738 * C530 + C11272 * C496 +
             C12242 + C12242 + C11264 * C520 + C11270 * C497 + C12243 + C12243 +
             C11263 * C521 + C11268 * C498 + C12244 + C12244 + C11262 * C522) *
                C153513 * C153739) *
               C153477) *
              C153397 * C1135)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C11268 * C144 + C11277 + C11277 + C11262 * C160 + C11270 * C145 +
            C11278 + C11278 + C11263 * C161 + C11272 * C146 + C11279 + C11279 +
            C11264 * C162 + C11274 * C147 + C11280 + C11280 + C153738 * C163) *
               C153513 * C153739 +
           (C11583 + C11584 + C11585 + C11586) * C153513 * C153560) *
              C2144 -
          ((C12543 + C12544 + C12545 + C12546) * C153513 * C153560 +
           (C11274 * C497 + C11797 + C11797 + C153738 * C521 + C11272 * C498 +
            C11798 + C11798 + C11264 * C522 + C11270 * C499 + C11799 + C11799 +
            C11263 * C523 + C11268 * C500 + C11800 + C11800 + C11262 * C524) *
               C153513 * C153739) *
              C2145 +
          ((C11268 * C501 + C11801 + C11801 + C11262 * C525 + C11270 * C502 +
            C11802 + C11802 + C11263 * C526 + C11272 * C503 + C11803 + C11803 +
            C11264 * C527 + C11274 * C504 + C11804 + C11804 + C153738 * C528) *
               C153513 * C153739 +
           (C13113 + C13114 + C13115 + C13116) * C153513 * C153560) *
              C2146 -
          ((C11274 * C8437 + C14305 + C14305 + C153738 * C8439 +
            C11272 * C6216 + C14306 + C14306 + C11264 * C6228 + C11270 * C6217 +
            C14307 + C14307 + C11263 * C6229 + C11268 * C6218 + C14308 +
            C14308 + C11262 * C6230) *
               C153513 * C153560 +
           (C11274 * C2149 + C14309 + C14309 + C153738 * C2159 +
            C11272 * C2150 + C14310 + C14310 + C11264 * C2160 + C11270 * C2151 +
            C14311 + C14311 + C11263 * C2161 + C11268 * C2152 + C14312 +
            C14312 + C11262 * C2162) *
               C153513 * C153739) *
              C2147) *
         C153397 * C153378) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C34887 * C144 + C34892 + C34892 + C153705 * C160 + C34889 * C145 +
             C34893 + C34893 + C153348 * C161) *
                C153513 * C34883 +
            (C35190 + C35191) * C153513 * C34884 + C35210 * C34885 +
            C35211 * C153747) *
               C1938 -
           (C37410 * C153747 + C37411 * C34885 +
            (C36182 + C36183) * C153513 * C34884 +
            (C34889 * C499 + C35414 + C35414 + C153348 * C523 + C34887 * C500 +
             C35415 + C35415 + C153705 * C524) *
                C153513 * C34883) *
               C153477) *
              C153397 * C1133 +
          (((C34887 * C499 + C35424 + C35424 + C153705 * C523 + C34889 * C498 +
             C35425 + C35425 + C153348 * C522) *
                C153513 * C34883 +
            (C36184 + C36185) * C153513 * C34884 +
            (C36186 + C36187) * C153513 * C34885 +
            (C36188 + C36189) * C153513 * C153747) *
               C153477 -
           (C35212 * C153747 + C35213 * C34885 +
            (C35199 + C35198) * C153513 * C34884 +
            (C34889 * C146 + C34906 + C34906 + C153348 * C162 + C34887 * C145 +
             C34907 + C34907 + C153705 * C161) *
                C153513 * C34883) *
               C1938) *
              C153397 * C1134 +
          (((C34887 * C146 + C34908 + C34908 + C153705 * C162 + C34889 * C147 +
             C34909 + C34909 + C153348 * C163) *
                C153513 * C34883 +
            (C35660 + C35661) * C153513 * C34884 +
            (C35662 + C35663) * C153513 * C34885 +
            (C35664 + C35665) * C153513 * C153747) *
               C1938 -
           ((C34889 * C4146 + C35860 + C35860 + C153348 * C4154 +
             C34887 * C4145 + C35861 + C35861 + C153705 * C4153) *
                C153513 * C153747 +
            (C34889 * C1797 + C35862 + C35862 + C153348 * C1807 +
             C34887 * C1798 + C35863 + C35863 + C153705 * C1808) *
                C153513 * C34885 +
            (C34889 * C984 + C35864 + C35864 + C153348 * C996 + C34887 * C983 +
             C35865 + C35865 + C153705 * C995) *
                C153513 * C34884 +
            (C34889 * C497 + C35866 + C35866 + C153348 * C521 + C34887 * C498 +
             C35867 + C35867 + C153705 * C522) *
                C153513 * C34883) *
               C153477) *
              C153397 * C1135)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C34887 * C144 + C34892 + C34892 + C153705 * C160 + C34889 * C145 +
             C34893 + C34893 + C153348 * C161) *
                C153513 * C34883 +
            (C35190 + C35191) * C153513 * C34884 + C35210 * C34885 +
            C35211 * C153747) *
               C1938 -
           (C37410 * C153747 + C37411 * C34885 +
            (C36182 + C36183) * C153513 * C34884 +
            (C34889 * C499 + C35414 + C35414 + C153348 * C523 + C34887 * C500 +
             C35415 + C35415 + C153705 * C524) *
                C153513 * C34883) *
               C153477) *
              C310 +
          (((C36183 + C36182) * C153513 * C34883 +
            (C36181 + C36180) * C153513 * C34884 +
            (C36179 + C36178) * C153513 * C34885 +
            (C37416 + C37417) * C153513 * C153747) *
               C153477 -
           (C36522 * C153747 + C36523 * C34885 +
            (C35193 + C35192) * C153513 * C34884 +
            (C35191 + C35190) * C153513 * C34883) *
               C1938) *
              C311 +
          ((C35210 * C34883 + C35211 * C34884 +
            (C35197 + C35196) * C153513 * C34885 +
            (C36528 + C36529) * C153513 * C153747) *
               C1938 -
           ((C34889 * C29033 + C37408 + C37408 + C153348 * C29037 +
             C34887 * C29032 + C37409 + C37409 + C153705 * C29036) *
                C153513 * C153747 +
            (C37417 + C37416) * C153513 * C34885 + C37410 * C34884 +
            C37411 * C34883) *
               C153477) *
              C312) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C34887 * C144 + C34892 + C34892 + C153705 * C160 + C34889 * C145 +
            C34893 + C34893 + C153348 * C161) *
               C153513 * C34883 +
           (C35190 + C35191) * C153513 * C34884 + C35210 * C34885 +
           C35211 * C153747) *
              C2144 -
          (C37410 * C153747 + C37411 * C34885 +
           (C36182 + C36183) * C153513 * C34884 +
           (C34889 * C499 + C35414 + C35414 + C153348 * C523 + C34887 * C500 +
            C35415 + C35415 + C153705 * C524) *
               C153513 * C34883) *
              C2145 +
          ((C34887 * C501 + C35416 + C35416 + C153705 * C525 + C34889 * C502 +
            C35417 + C35417 + C153348 * C526) *
               C153513 * C34883 +
           (C36750 + C36751) * C153513 * C34884 +
           (C36752 + C36753) * C153513 * C34885 +
           (C36754 + C36755) * C153513 * C153747) *
              C2146 -
          ((C34889 * C32070 + C37936 + C37936 + C153348 * C32072 +
            C34887 * C30195 + C37937 + C37937 + C153705 * C30199) *
               C153513 * C153747 +
           (C34889 * C6214 + C37938 + C37938 + C153348 * C6226 +
            C34887 * C6215 + C37939 + C37939 + C153705 * C6227) *
               C153513 * C34885 +
           (C34889 * C6217 + C37940 + C37940 + C153348 * C6229 +
            C34887 * C6218 + C37941 + C37941 + C153705 * C6230) *
               C153513 * C34884 +
           (C34889 * C2151 + C37942 + C37942 + C153348 * C2161 +
            C34887 * C2152 + C37943 + C37943 + C153705 * C2162) *
               C153513 * C34883) *
              C2147) *
         C153397 * C153378) /
            (p * q * std::sqrt(p + q));
    d2ee[313] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C11268 * C144 + C11277 + C11277 + C11262 * C160 + C11270 * C145 +
             C11278 + C11278 + C11263 * C161 + C11272 * C146 + C11279 + C11279 +
             C11264 * C162 + C11274 * C147 + C11280 + C11280 + C153738 * C163) *
                C153513 * C153739 +
            (C11583 + C11584 + C11585 + C11586) * C153513 * C153560) *
               C153797 -
           ((C12543 + C12544 + C12545 + C12546) * C153513 * C153560 +
            (C11274 * C497 + C11797 + C11797 + C153738 * C521 + C11272 * C498 +
             C11798 + C11798 + C11264 * C522 + C11270 * C499 + C11799 + C11799 +
             C11263 * C523 + C11268 * C500 + C11800 + C11800 + C11262 * C524) *
                C153513 * C153739) *
               C153798 +
           ((C11268 * C501 + C11801 + C11801 + C11262 * C525 + C11270 * C502 +
             C11802 + C11802 + C11263 * C526 + C11272 * C503 + C11803 + C11803 +
             C11264 * C527 + C11274 * C504 + C11804 + C11804 + C153738 * C528) *
                C153513 * C153739 +
            (C13113 + C13114 + C13115 + C13116) * C153513 * C153560) *
               C2454) *
              C153397 * C153716 +
          (((C11268 * C499 + C11809 + C11809 + C11262 * C523 + C11270 * C498 +
             C11810 + C11810 + C11263 * C522 + C11272 * C497 + C11811 + C11811 +
             C11264 * C521 + C11274 * C496 + C11812 + C11812 + C153738 * C520) *
                C153513 * C153739 +
            (C12547 + C12548 + C12549 + C12550) * C153513 * C153560) *
               C153798 -
           ((C11594 + C11593 + C11592 + C11591) * C153513 * C153560 +
            (C11274 * C148 + C11289 + C11289 + C153738 * C164 + C11272 * C147 +
             C11290 + C11290 + C11264 * C163 + C11270 * C146 + C11291 + C11291 +
             C11263 * C162 + C11268 * C145 + C11292 + C11292 + C11262 * C161) *
                C153513 * C153739) *
               C153797 -
           ((C11274 * C1365 + C11817 + C11817 + C153738 * C1375 +
             C11272 * C1366 + C11818 + C11818 + C11264 * C1376 +
             C11270 * C1367 + C11819 + C11819 + C11263 * C1377 +
             C11268 * C1368 + C11820 + C11820 + C11262 * C1378) *
                C153513 * C153560 +
            (C11274 * C505 + C11821 + C11821 + C153738 * C529 + C11272 * C504 +
             C11822 + C11822 + C11264 * C528 + C11270 * C503 + C11823 + C11823 +
             C11263 * C527 + C11268 * C502 + C11824 + C11824 + C11262 * C526) *
                C153513 * C153739) *
               C2454) *
              C153397 * C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C34887 * C144 + C34892 + C34892 + C153705 * C160 + C34889 * C145 +
             C34893 + C34893 + C153348 * C161) *
                C153513 * C34883 +
            (C35190 + C35191) * C153513 * C34884 + C35210 * C34885 +
            C35211 * C153747) *
               C153797 -
           (C37410 * C153747 + C37411 * C34885 +
            (C36182 + C36183) * C153513 * C34884 +
            (C34889 * C499 + C35414 + C35414 + C153348 * C523 + C34887 * C500 +
             C35415 + C35415 + C153705 * C524) *
                C153513 * C34883) *
               C153798 +
           ((C34887 * C501 + C35416 + C35416 + C153705 * C525 + C34889 * C502 +
             C35417 + C35417 + C153348 * C526) *
                C153513 * C34883 +
            (C36750 + C36751) * C153513 * C34884 +
            (C36752 + C36753) * C153513 * C34885 +
            (C36754 + C36755) * C153513 * C153747) *
               C2454) *
              C153397 * C153716 +
          (((C34887 * C499 + C35424 + C35424 + C153705 * C523 + C34889 * C498 +
             C35425 + C35425 + C153348 * C522) *
                C153513 * C34883 +
            (C36184 + C36185) * C153513 * C34884 +
            (C36186 + C36187) * C153513 * C34885 +
            (C36188 + C36189) * C153513 * C153747) *
               C153798 -
           (C35212 * C153747 + C35213 * C34885 +
            (C35199 + C35198) * C153513 * C34884 +
            (C34889 * C146 + C34906 + C34906 + C153348 * C162 + C34887 * C145 +
             C34907 + C34907 + C153705 * C161) *
                C153513 * C34883) *
               C153797 -
           ((C34889 * C4833 + C35432 + C35432 + C153348 * C4839 +
             C34887 * C4834 + C35433 + C35433 + C153705 * C4840) *
                C153513 * C153747 +
            (C34889 * C3329 + C35434 + C35434 + C153348 * C3337 +
             C34887 * C3328 + C35435 + C35435 + C153705 * C3336) *
                C153513 * C34885 +
            (C34889 * C1367 + C35436 + C35436 + C153348 * C1377 +
             C34887 * C1368 + C35437 + C35437 + C153705 * C1378) *
                C153513 * C34884 +
            (C34889 * C503 + C35438 + C35438 + C153348 * C527 + C34887 * C502 +
             C35439 + C35439 + C153705 * C526) *
                C153513 * C34883) *
               C2454) *
              C153397 * C153384)) /
            (p * q * std::sqrt(p + q));
    d2ee[314] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C11268 * C144 + C11277 + C11277 + C11262 * C160 + C11270 * C145 +
             C11278 + C11278 + C11263 * C161 + C11272 * C146 + C11279 + C11279 +
             C11264 * C162 + C11274 * C147 + C11280 + C11280 + C153738 * C163) *
                C153513 * C153739 +
            (C11583 + C11584 + C11585 + C11586) * C153513 * C153560) *
               C1938 -
           ((C12543 + C12544 + C12545 + C12546) * C153513 * C153560 +
            (C11274 * C497 + C11797 + C11797 + C153738 * C521 + C11272 * C498 +
             C11798 + C11798 + C11264 * C522 + C11270 * C499 + C11799 + C11799 +
             C11263 * C523 + C11268 * C500 + C11800 + C11800 + C11262 * C524) *
                C153513 * C153739) *
               C153477) *
              C153397 * C1133 +
          (((C11268 * C499 + C11809 + C11809 + C11262 * C523 + C11270 * C498 +
             C11810 + C11810 + C11263 * C522 + C11272 * C497 + C11811 + C11811 +
             C11264 * C521 + C11274 * C496 + C11812 + C11812 + C153738 * C520) *
                C153513 * C153739 +
            (C12547 + C12548 + C12549 + C12550) * C153513 * C153560) *
               C153477 -
           ((C11594 + C11593 + C11592 + C11591) * C153513 * C153560 +
            (C11274 * C148 + C11289 + C11289 + C153738 * C164 + C11272 * C147 +
             C11290 + C11290 + C11264 * C163 + C11270 * C146 + C11291 + C11291 +
             C11263 * C162 + C11268 * C145 + C11292 + C11292 + C11262 * C161) *
                C153513 * C153739) *
               C1938) *
              C153397 * C1134 +
          (((C11268 * C146 + C11293 + C11293 + C11262 * C162 + C11270 * C147 +
             C11294 + C11294 + C11263 * C163 + C11272 * C148 + C11295 + C11295 +
             C11264 * C164 + C11274 * C149 + C11296 + C11296 + C153738 * C165) *
                C153513 * C153739 +
            (C12039 + C12040 + C12041 + C12042) * C153513 * C153560) *
               C1938 -
           ((C11274 * C986 + C12237 + C12237 + C153738 * C998 + C11272 * C985 +
             C12238 + C12238 + C11264 * C997 + C11270 * C984 + C12239 + C12239 +
             C11263 * C996 + C11268 * C983 + C12240 + C12240 + C11262 * C995) *
                C153513 * C153560 +
            (C11274 * C506 + C12241 + C12241 + C153738 * C530 + C11272 * C496 +
             C12242 + C12242 + C11264 * C520 + C11270 * C497 + C12243 + C12243 +
             C11263 * C521 + C11268 * C498 + C12244 + C12244 + C11262 * C522) *
                C153513 * C153739) *
               C153477) *
              C153397 * C1135)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C11268 * C144 + C11277 + C11277 + C11262 * C160 + C11270 * C145 +
             C11278 + C11278 + C11263 * C161 + C11272 * C146 + C11279 + C11279 +
             C11264 * C162 + C11274 * C147 + C11280 + C11280 + C153738 * C163) *
                C153513 * C153739 +
            (C11583 + C11584 + C11585 + C11586) * C153513 * C153560) *
               C1938 -
           ((C12543 + C12544 + C12545 + C12546) * C153513 * C153560 +
            (C11274 * C497 + C11797 + C11797 + C153738 * C521 + C11272 * C498 +
             C11798 + C11798 + C11264 * C522 + C11270 * C499 + C11799 + C11799 +
             C11263 * C523 + C11268 * C500 + C11800 + C11800 + C11262 * C524) *
                C153513 * C153739) *
               C153477) *
              C310 +
          (((C12546 + C12545 + C12544 + C12543) * C153513 * C153739 +
            (C13783 + C13784 + C13785 + C13786) * C153513 * C153560) *
               C153477 -
           ((C11587 + C11588 + C11589 + C11590) * C153513 * C153560 +
            (C11586 + C11585 + C11584 + C11583) * C153513 * C153739) *
               C1938) *
              C311 +
          (((C11590 + C11589 + C11588 + C11587) * C153513 * C153739 +
            (C12895 + C12896 + C12897 + C12898) * C153513 * C153560) *
               C1938 -
           ((C11274 * C4146 + C13771 + C13771 + C153738 * C4154 +
             C11272 * C4145 + C13772 + C13772 + C11264 * C4153 +
             C11270 * C4144 + C13773 + C13773 + C11263 * C4152 +
             C11268 * C4143 + C13774 + C13774 + C11262 * C4151) *
                C153513 * C153560 +
            (C13786 + C13785 + C13784 + C13783) * C153513 * C153739) *
               C153477) *
              C312) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C34887 * C144 + C34892 + C34892 + C153705 * C160 + C34889 * C145 +
             C34893 + C34893 + C153348 * C161) *
                C153513 * C34883 +
            (C35190 + C35191) * C153513 * C34884 + C35210 * C34885 +
            C35211 * C153747) *
               C1938 -
           (C37410 * C153747 + C37411 * C34885 +
            (C36182 + C36183) * C153513 * C34884 +
            (C34889 * C499 + C35414 + C35414 + C153348 * C523 + C34887 * C500 +
             C35415 + C35415 + C153705 * C524) *
                C153513 * C34883) *
               C153477) *
              C153397 * C1133 +
          (((C34887 * C499 + C35424 + C35424 + C153705 * C523 + C34889 * C498 +
             C35425 + C35425 + C153348 * C522) *
                C153513 * C34883 +
            (C36184 + C36185) * C153513 * C34884 +
            (C36186 + C36187) * C153513 * C34885 +
            (C36188 + C36189) * C153513 * C153747) *
               C153477 -
           (C35212 * C153747 + C35213 * C34885 +
            (C35199 + C35198) * C153513 * C34884 +
            (C34889 * C146 + C34906 + C34906 + C153348 * C162 + C34887 * C145 +
             C34907 + C34907 + C153705 * C161) *
                C153513 * C34883) *
               C1938) *
              C153397 * C1134 +
          (((C34887 * C146 + C34908 + C34908 + C153705 * C162 + C34889 * C147 +
             C34909 + C34909 + C153348 * C163) *
                C153513 * C34883 +
            (C35660 + C35661) * C153513 * C34884 +
            (C35662 + C35663) * C153513 * C34885 +
            (C35664 + C35665) * C153513 * C153747) *
               C1938 -
           ((C34889 * C4146 + C35860 + C35860 + C153348 * C4154 +
             C34887 * C4145 + C35861 + C35861 + C153705 * C4153) *
                C153513 * C153747 +
            (C34889 * C1797 + C35862 + C35862 + C153348 * C1807 +
             C34887 * C1798 + C35863 + C35863 + C153705 * C1808) *
                C153513 * C34885 +
            (C34889 * C984 + C35864 + C35864 + C153348 * C996 + C34887 * C983 +
             C35865 + C35865 + C153705 * C995) *
                C153513 * C34884 +
            (C34889 * C497 + C35866 + C35866 + C153348 * C521 + C34887 * C498 +
             C35867 + C35867 + C153705 * C522) *
                C153513 * C34883) *
               C153477) *
              C153397 * C1135)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C34887 * C144 + C34892 + C34892 + C153705 * C160 + C34889 * C145 +
             C34893 + C34893 + C153348 * C161) *
                C153513 * C34883 +
            (C35190 + C35191) * C153513 * C34884 + C35210 * C34885 +
            C35211 * C153747) *
               C1938 -
           (C37410 * C153747 + C37411 * C34885 +
            (C36182 + C36183) * C153513 * C34884 +
            (C34889 * C499 + C35414 + C35414 + C153348 * C523 + C34887 * C500 +
             C35415 + C35415 + C153705 * C524) *
                C153513 * C34883) *
               C153477) *
              C310 +
          (((C36183 + C36182) * C153513 * C34883 +
            (C36181 + C36180) * C153513 * C34884 +
            (C36179 + C36178) * C153513 * C34885 +
            (C37416 + C37417) * C153513 * C153747) *
               C153477 -
           (C36522 * C153747 + C36523 * C34885 +
            (C35193 + C35192) * C153513 * C34884 +
            (C35191 + C35190) * C153513 * C34883) *
               C1938) *
              C311 +
          ((C35210 * C34883 + C35211 * C34884 +
            (C35197 + C35196) * C153513 * C34885 +
            (C36528 + C36529) * C153513 * C153747) *
               C1938 -
           ((C34889 * C29033 + C37408 + C37408 + C153348 * C29037 +
             C34887 * C29032 + C37409 + C37409 + C153705 * C29036) *
                C153513 * C153747 +
            (C37417 + C37416) * C153513 * C34885 + C37410 * C34884 +
            C37411 * C34883) *
               C153477) *
              C312) *
         C153378) /
            (p * q * std::sqrt(p + q));
    d2ee[315] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 +
              C2737 + C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
              C153761 * C162) *
                 C153740 +
             (C7654 + C7655 + C7656) * C153600) *
                C153739 +
            ((C3086 + C3087 + C3088) * C153740 +
             (C4215 + C4214 + C4213) * C153600) *
                C153560) *
               C153413 * C153724 -
           ((C5621 * C153600 + (C3091 + C3090 + C3089) * C153740) * C153560 +
            ((C4213 + C4214 + C4215) * C153600 +
             (C3088 + C3087 + C3086) * C153740) *
                C153739) *
               C153413 * C153449) *
              C153793 +
          ((((C3095 + C3096 + C3097) * C153740 +
             (C4216 + C4217 + C4218) * C153600) *
                C153739 +
            ((C3098 + C3099 + C3100) * C153740 +
             (C4219 + C4220 + C4221) * C153600) *
                C153560) *
               C153413 * C153449 -
           (((C4218 + C4217 + C4216) * C153600 +
             (C3097 + C3096 + C3095) * C153740) *
                C153560 +
            ((C7665 + C7664 + C7663) * C153600 +
             (C2733 * C147 + C2751 + C2751 + C153761 * C163 + C2731 * C146 +
              C2752 + C2752 + C2724 * C162 + C2729 * C145 + C2753 + C2753 +
              C2723 * C161) *
                 C153740) *
                C153739) *
               C153413 * C153724) *
              C153794 +
          ((((C2729 * C146 + C2754 + C2754 + C2723 * C162 + C2731 * C147 +
              C2755 + C2755 + C2724 * C163 + C2733 * C148 + C2756 + C2756 +
              C153761 * C164) *
                 C153740 +
             (C8142 + C8143 + C8144) * C153600) *
                C153739 +
            ((C3621 + C3622 + C3623) * C153740 +
             (C19668 + C19669 + C19670) * C153600) *
                C153560) *
               C153413 * C153724 -
           (((C2733 * C1796 + C3845 + C3845 + C153761 * C1806 + C2731 * C1797 +
              C3846 + C3846 + C2724 * C1807 + C2729 * C1798 + C3847 + C3847 +
              C2723 * C1808) *
                 C153600 +
             (C3626 + C3625 + C3624) * C153740) *
                C153560 +
            ((C19670 + C19669 + C19668) * C153600 +
             (C3623 + C3622 + C3621) * C153740) *
                C153739) *
               C153413 * C153449) *
              C678)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153740 +
             C31295 * C153600) *
                C34883 +
            (C44303 + C44304) * C34884 + C44319 * C34885 + C44320 * C153747) *
               C153413 * C153724 -
           ((C44309 + C44310) * C153747 + (C44308 + C44307) * C34885 +
            (C44306 + C44305) * C34884 + (C44304 + C44303) * C34883) *
               C153413 * C153449) *
              C153793 +
          (((C44311 + C44312) * C34883 + (C44313 + C44314) * C34884 +
            (C44315 + C44316) * C34885 + (C44317 + C44318) * C153747) *
               C153413 * C153449 -
           (C44321 * C153747 + C44322 * C34885 + (C44312 + C44311) * C34884 +
            (C31300 * C153600 +
             (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C153740) *
                C34883) *
               C153413 * C153724) *
              C153794 +
          ((((C28234 * C146 + C28247 + C28247 + C153338 * C162) * C153740 +
             C31779 * C153600) *
                C34883 +
            (C44711 + C44712) * C34884 + (C44713 + C44714) * C34885 +
            (C44715 + C44721) * C153747) *
               C153413 * C153724 -
           (((C28234 * C5601 + C28866 + C28866 + C153338 * C5607) * C153600 +
             C28739 * C153740) *
                C153747 +
            (C44721 + C44715) * C34885 + (C44714 + C44713) * C34884 +
            (C44712 + C44711) * C34883) *
               C153413 * C153449) *
              C678)) /
            (p * q * std::sqrt(p + q));
    d2ee[316] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 +
               C2737 + C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
               C153761 * C162) *
                  C153740 +
              (C7654 + C7655 + C7656) * C153600) *
                 C153739 +
             ((C3086 + C3087 + C3088) * C153740 + C20351 * C153600) * C153560) *
                C153725 -
            ((C9063 * C153600 + C20352 * C153740) * C153560 +
             ((C7659 + C7658 + C7657) * C153600 +
              (C7656 + C7655 + C7654) * C153740) *
                 C153739) *
                C153477) *
               C153724 +
           (((C20351 * C153740 + (C4870 + C4871 + C4872) * C153600) * C153739 +
             ((C4212 + C4211 + C4210) * C153740 +
              (C4873 + C4874 + C4875) * C153600) *
                 C153560) *
                C153477 -
            ((C5621 * C153600 + (C3091 + C3090 + C3089) * C153740) * C153560 +
             (C20352 * C153600 + (C3088 + C3087 + C3086) * C153740) * C153739) *
                C153725) *
               C153449) *
              C313 +
          (((((C7663 + C7664 + C7665) * C153740 +
              (C7666 + C7667 + C7668) * C153600) *
                 C153739 +
             (C20353 * C153740 + (C8456 + C8457 + C8458) * C153600) * C153560) *
                C153477 -
            ((C20354 * C153600 + (C3097 + C3096 + C3095) * C153740) * C153560 +
             ((C7665 + C7664 + C7663) * C153600 +
              (C2733 * C147 + C2751 + C2751 + C153761 * C163 + C2731 * C146 +
               C2752 + C2752 + C2724 * C162 + C2729 * C145 + C2753 + C2753 +
               C2723 * C161) *
                  C153740) *
                 C153739) *
                C153725) *
               C153724 +
           ((((C3095 + C3096 + C3097) * C153740 + C20353 * C153600) * C153739 +
             ((C3098 + C3099 + C3100) * C153740 +
              (C4219 + C4220 + C4221) * C153600) *
                 C153560) *
                C153725 -
            (((C2733 * C3330 + C3367 + C3367 + C153761 * C3338 + C2731 * C3329 +
               C3368 + C3368 + C2724 * C3337 + C2729 * C3328 + C3369 + C3369 +
               C2723 * C3336) *
                  C153600 +
              (C4221 + C4220 + C4219) * C153740) *
                 C153560 +
             ((C8458 + C8457 + C8456) * C153600 + C20354 * C153740) * C153739) *
                C153477) *
               C153449) *
              C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153740 +
              C31295 * C153600) *
                 C34883 +
             (C44303 + C44304) * C34884 + C44319 * C34885 + C44320 * C153747) *
                C153725 -
            ((C45174 + C45175) * C153747 + (C45176 + C45177) * C34885 +
             (C45178 + C45179) * C34884 +
             (C31296 * C153600 + C31295 * C153740) * C34883) *
                C153477) *
               C153724 +
           (((C45179 + C45178) * C34883 + (C45177 + C45176) * C34884 +
             (C45175 + C45174) * C34885 +
             (C29073 * C153740 + C29448 * C153600) * C153747) *
                C153477 -
            ((C44309 + C44310) * C153747 + (C44308 + C44307) * C34885 +
             (C44306 + C44305) * C34884 + (C44304 + C44303) * C34883) *
                C153725) *
               C153449) *
              C313 +
          ((((C31300 * C153740 + C31301 * C153600) * C34883 +
             (C45180 + C45181) * C34884 + (C45182 + C45183) * C34885 +
             (C45184 + C45185) * C153747) *
                C153477 -
            (C44321 * C153747 + C44322 * C34885 + (C44312 + C44311) * C34884 +
             (C31300 * C153600 +
              (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C153740) *
                 C34883) *
                C153725) *
               C153724 +
           (((C44311 + C44312) * C34883 + (C44313 + C44314) * C34884 +
             (C44315 + C44316) * C34885 + (C44317 + C44318) * C153747) *
                C153725 -
            (((C28234 * C28571 + C28592 + C28592 + C153338 * C28575) * C153600 +
              C29080 * C153740) *
                 C153747 +
             (C45185 + C45184) * C34885 + (C45183 + C45182) * C34884 +
             (C45181 + C45180) * C34883) *
                C153477) *
               C153449) *
              C153384)) /
            (p * q * std::sqrt(p + q));
    d2ee[317] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 +
              C2737 + C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
              C153761 * C162) *
                 C153740 +
             (C7654 + C7655 + C7656) * C153600) *
                C153739 +
            ((C3086 + C3087 + C3088) * C153740 +
             (C4215 + C4214 + C4213) * C153600) *
                C153560) *
               C153413 * C310 -
           ((C5621 * C153600 + (C3091 + C3090 + C3089) * C153740) * C153560 +
            ((C4213 + C4214 + C4215) * C153600 +
             (C3088 + C3087 + C3086) * C153740) *
                C153739) *
               C153413 * C311 +
           ((C3106 * C153740 + (C4212 + C4211 + C4210) * C153600) * C153739 +
            ((C3094 + C3093 + C3092) * C153740 +
             (C5629 + C5630 + C5631) * C153600) *
                C153560) *
               C153413 * C312) *
              C313 +
          ((((C3095 + C3096 + C3097) * C153740 +
             (C4216 + C4217 + C4218) * C153600) *
                C153739 +
            ((C3098 + C3099 + C3100) * C153740 +
             (C4219 + C4220 + C4221) * C153600) *
                C153560) *
               C153413 * C311 -
           (((C4218 + C4217 + C4216) * C153600 +
             (C3097 + C3096 + C3095) * C153740) *
                C153560 +
            ((C7665 + C7664 + C7663) * C153600 +
             (C2733 * C147 + C2751 + C2751 + C153761 * C163 + C2731 * C146 +
              C2752 + C2752 + C2724 * C162 + C2729 * C145 + C2753 + C2753 +
              C2723 * C161) *
                 C153740) *
                C153739) *
               C153413 * C310 -
           (((C2733 * C4146 + C4183 + C4183 + C153761 * C4154 + C2731 * C4145 +
              C4184 + C4184 + C2724 * C4153 + C2729 * C4144 + C4185 + C4185 +
              C2723 * C4152) *
                 C153600 +
             (C3103 + C3102 + C3101) * C153740) *
                C153560 +
            ((C4221 + C4220 + C4219) * C153600 + C3107 * C153740) * C153739) *
               C153413 * C312) *
              C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 +
             C2737 + C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
             C153761 * C162) *
                C153740 +
            (C7654 + C7655 + C7656) * C153600) *
               C153739 +
           ((C3086 + C3087 + C3088) * C153740 +
            (C4215 + C4214 + C4213) * C153600) *
               C153560) *
              C153413 * C153397 * C130 -
          (((C4218 + C4217 + C4216) * C153600 +
            (C3097 + C3096 + C3095) * C153740) *
               C153560 +
           ((C7665 + C7664 + C7663) * C153600 +
            (C2733 * C147 + C2751 + C2751 + C153761 * C163 + C2731 * C146 +
             C2752 + C2752 + C2724 * C162 + C2729 * C145 + C2753 + C2753 +
             C2723 * C161) *
                C153740) *
               C153739) *
              C153413 * C153397 * C131 +
          (((C2729 * C146 + C2754 + C2754 + C2723 * C162 + C2731 * C147 +
             C2755 + C2755 + C2724 * C163 + C2733 * C148 + C2756 + C2756 +
             C153761 * C164) *
                C153740 +
            (C8142 + C8143 + C8144) * C153600) *
               C153739 +
           ((C3621 + C3622 + C3623) * C153740 +
            (C2729 * C983 + C3850 + C3850 + C2723 * C995 + C2731 * C984 +
             C3849 + C3849 + C2724 * C996 + C2733 * C985 + C3848 + C3848 +
             C153761 * C997) *
                C153600) *
               C153560) *
              C153413 * C153397 * C132 -
          (((C2733 * C986 + C18783 + C18783 + C153761 * C998 + C2731 * C985 +
             C18784 + C18784 + C2724 * C997 + C2729 * C984 + C18785 + C18785 +
             C2723 * C996) *
                C153600 +
            (C2733 * C325 + C2766 + C2766 + C153761 * C349 + C2731 * C315 +
             C2767 + C2767 + C2724 * C339 + C2729 * C316 + C2768 + C2768 +
             C2723 * C340) *
                C153740) *
               C153560 +
           ((C2733 * C506 + C7122 + C7122 + C153761 * C530 + C2731 * C496 +
             C7123 + C7123 + C2724 * C520 + C2729 * C497 + C7124 + C7124 +
             C2723 * C521) *
                C153600 +
            (C2733 * C149 + C2769 + C2769 + C153761 * C165 + C2731 * C148 +
             C2770 + C2770 + C2724 * C164 + C2729 * C147 + C2771 + C2771 +
             C2723 * C163) *
                C153740) *
               C153739) *
              C153413 * C153397 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 +
              C2737 + C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
              C153761 * C162) *
                 C153740 +
             (C7654 + C7655 + C7656) * C153600) *
                C153739 +
            ((C3086 + C3087 + C3088) * C153740 +
             (C4215 + C4214 + C4213) * C153600) *
                C153560) *
               C493 -
           ((C9063 * C153600 + (C4213 + C4214 + C4215) * C153740) * C153560 +
            ((C7659 + C7658 + C7657) * C153600 +
             (C7656 + C7655 + C7654) * C153740) *
                C153739) *
               C494 +
           ((C7674 * C153740 + (C7662 + C7661 + C7660) * C153600) * C153739 +
            ((C4870 + C4871 + C4872) * C153740 +
             (C9067 + C9068 + C9069) * C153600) *
                C153560) *
               C495) *
              C153397 * C313 +
          ((((C7663 + C7664 + C7665) * C153740 +
             (C7666 + C7667 + C7668) * C153600) *
                C153739 +
            ((C4216 + C4217 + C4218) * C153740 +
             (C8456 + C8457 + C8458) * C153600) *
                C153560) *
               C494 -
           (((C4218 + C4217 + C4216) * C153600 +
             (C3097 + C3096 + C3095) * C153740) *
                C153560 +
            ((C7665 + C7664 + C7663) * C153600 +
             (C2733 * C147 + C2751 + C2751 + C153761 * C163 + C2731 * C146 +
              C2752 + C2752 + C2724 * C162 + C2729 * C145 + C2753 + C2753 +
              C2723 * C161) *
                 C153740) *
                C153739) *
               C493 -
           (((C2733 * C8437 + C8447 + C8447 + C153761 * C8439 + C2731 * C6216 +
              C8448 + C8448 + C2724 * C6228 + C2729 * C6217 + C8449 + C8449 +
              C2723 * C6229) *
                 C153600 +
             (C8458 + C8457 + C8456) * C153740) *
                C153560 +
            ((C7671 + C7670 + C7669) * C153600 + C7675 * C153740) * C153739) *
               C495) *
              C153397 * C153384)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153740 +
            C31295 * C153600) *
               C34883 +
           (C28429 * C153740 + C29076 * C153600) * C34884 +
           (C28430 * C153740 + C29075 * C153600) * C34885 +
           (C28431 * C153740 + C29074 * C153600) * C153747) *
              C153413 * C153397 * C130 -
          ((C29079 * C153600 + C28436 * C153740) * C153747 +
           (C29078 * C153600 + C28435 * C153740) * C34885 +
           (C29077 * C153600 + C28434 * C153740) * C34884 +
           (C31300 * C153600 +
            (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C153740) *
               C34883) *
              C153413 * C153397 * C131 +
          (((C28234 * C146 + C28247 + C28247 + C153338 * C162) * C153740 +
            C31779 * C153600) *
               C34883 +
           (C28736 * C153740 + C31542 * C153600) * C34884 +
           (C28737 * C153740 + C31544 * C153600) * C34885 +
           (C28738 * C153740 +
            (C28234 * C4145 + C28867 + C28867 + C153338 * C4153) * C153600) *
               C153747) *
              C153413 * C153397 * C132 -
          (((C28234 * C4146 + C44108 + C44108 + C153338 * C4154) * C153600 +
            (C28234 * C1224 + C28253 + C28253 + C153338 * C1234) * C153740) *
               C153747 +
           ((C28234 * C1797 + C30762 + C30762 + C153338 * C1807) * C153600 +
            (C28234 * C323 + C28254 + C28254 + C153338 * C347) * C153740) *
               C34885 +
           ((C28234 * C984 + C30764 + C30764 + C153338 * C996) * C153600 +
            (C28234 * C316 + C28255 + C28255 + C153338 * C340) * C153740) *
               C34884 +
           ((C28234 * C497 + C30766 + C30766 + C153338 * C521) * C153600 +
            (C28234 * C147 + C28256 + C28256 + C153338 * C163) * C153740) *
               C34883) *
              C153413 * C153397 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153740 +
             C31295 * C153600) *
                C34883 +
            (C44303 + C44304) * C34884 + C44319 * C34885 + C44320 * C153747) *
               C153413 * C310 -
           ((C44309 + C44310) * C153747 + (C44308 + C44307) * C34885 +
            (C44306 + C44305) * C34884 + (C44304 + C44303) * C34883) *
               C153413 * C311 +
           (C44319 * C34883 + C44320 * C34884 + (C44310 + C44309) * C34885 +
            (C28433 * C153740 + C29867 * C153600) * C153747) *
               C153413 * C312) *
              C313 +
          (((C44311 + C44312) * C34883 + (C44313 + C44314) * C34884 +
            (C44315 + C44316) * C34885 + (C44317 + C44318) * C153747) *
               C153413 * C311 -
           (C44321 * C153747 + C44322 * C34885 + (C44312 + C44311) * C34884 +
            (C31300 * C153600 +
             (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C153740) *
                C34883) *
               C153413 * C310 -
           (((C28234 * C29033 + C29056 + C29056 + C153338 * C29037) * C153600 +
             C28438 * C153740) *
                C153747 +
            (C44318 + C44317) * C34885 + C44321 * C34884 + C44322 * C34883) *
               C153413 * C312) *
              C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153740 +
             C31295 * C153600) *
                C34883 +
            (C44303 + C44304) * C34884 + C44319 * C34885 + C44320 * C153747) *
               C493 -
           ((C29447 * C153600 + C29074 * C153740) * C153747 +
            (C29446 * C153600 + C29075 * C153740) * C34885 +
            (C29445 * C153600 + C29076 * C153740) * C34884 +
            (C31296 * C153600 + C31295 * C153740) * C34883) *
               C494 +
           ((C31296 * C153740 + C31299 * C153600) * C34883 +
            (C29445 * C153740 + C31298 * C153600) * C34884 +
            (C29446 * C153740 + C31297 * C153600) * C34885 +
            (C29447 * C153740 + C32696 * C153600) * C153747) *
               C495) *
              C153397 * C313 +
          (((C31300 * C153740 + C31301 * C153600) * C34883 +
            (C29077 * C153740 + C31015 * C153600) * C34884 +
            (C29078 * C153740 + C31016 * C153600) * C34885 +
            (C29079 * C153740 + C31017 * C153600) * C153747) *
               C494 -
           (C44321 * C153747 + C44322 * C34885 + (C44312 + C44311) * C34884 +
            (C31300 * C153600 +
             (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C153740) *
                C34883) *
               C493 -
           (((C28234 * C32070 + C32086 + C32086 + C153338 * C32072) * C153600 +
             C31017 * C153740) *
                C153747 +
            (C31304 * C153600 + C31016 * C153740) * C34885 +
            (C31303 * C153600 + C31015 * C153740) * C34884 +
            (C31302 * C153600 + C31301 * C153740) * C34883) *
               C495) *
              C153397 * C153384)) /
            (p * q * std::sqrt(p + q));
    d2ee[318] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 +
              C2737 + C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
              C153761 * C162) *
                 C153740 +
             (C7654 + C7655 + C7656) * C153600) *
                C153739 +
            ((C3086 + C3087 + C3088) * C153740 +
             (C4215 + C4214 + C4213) * C153600) *
                C153560) *
               C153725 -
           ((C9063 * C153600 + (C4213 + C4214 + C4215) * C153740) * C153560 +
            ((C7659 + C7658 + C7657) * C153600 +
             (C7656 + C7655 + C7654) * C153740) *
                C153739) *
               C153477) *
              C153397 * C153793 +
          ((((C7663 + C7664 + C7665) * C153740 +
             (C7666 + C7667 + C7668) * C153600) *
                C153739 +
            ((C4216 + C4217 + C4218) * C153740 +
             (C8456 + C8457 + C8458) * C153600) *
                C153560) *
               C153477 -
           (((C4218 + C4217 + C4216) * C153600 +
             (C3097 + C3096 + C3095) * C153740) *
                C153560 +
            ((C7665 + C7664 + C7663) * C153600 +
             (C2733 * C147 + C2751 + C2751 + C153761 * C163 + C2731 * C146 +
              C2752 + C2752 + C2724 * C162 + C2729 * C145 + C2753 + C2753 +
              C2723 * C161) *
                 C153740) *
                C153739) *
               C153725) *
              C153397 * C153794 +
          ((((C2729 * C146 + C2754 + C2754 + C2723 * C162 + C2731 * C147 +
              C2755 + C2755 + C2724 * C163 + C2733 * C148 + C2756 + C2756 +
              C153761 * C164) *
                 C153740 +
             (C8142 + C8143 + C8144) * C153600) *
                C153739 +
            ((C3621 + C3622 + C3623) * C153740 +
             (C19668 + C19669 + C19670) * C153600) *
                C153560) *
               C153725 -
           (((C2733 * C1365 + C7894 + C7894 + C153761 * C1375 + C2731 * C1366 +
              C7895 + C7895 + C2724 * C1376 + C2729 * C1367 + C7896 + C7896 +
              C2723 * C1377) *
                 C153600 +
             (C19670 + C19669 + C19668) * C153740) *
                C153560 +
            ((C8147 + C8146 + C8145) * C153600 +
             (C8144 + C8143 + C8142) * C153740) *
                C153739) *
               C153477) *
              C153397 * C678)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153740 +
             C31295 * C153600) *
                C34883 +
            (C44303 + C44304) * C34884 + C44319 * C34885 + C44320 * C153747) *
               C153725 -
           ((C29447 * C153600 + C29074 * C153740) * C153747 +
            (C29446 * C153600 + C29075 * C153740) * C34885 +
            (C29445 * C153600 + C29076 * C153740) * C34884 +
            (C31296 * C153600 + C31295 * C153740) * C34883) *
               C153477) *
              C153397 * C153793 +
          (((C31300 * C153740 + C31301 * C153600) * C34883 +
            (C29077 * C153740 + C31015 * C153600) * C34884 +
            (C29078 * C153740 + C31016 * C153600) * C34885 +
            (C29079 * C153740 + C31017 * C153600) * C153747) *
               C153477 -
           (C44321 * C153747 + C44322 * C34885 + (C44312 + C44311) * C34884 +
            (C31300 * C153600 +
             (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C153740) *
                C34883) *
               C153725) *
              C153397 * C153794 +
          ((((C28234 * C146 + C28247 + C28247 + C153338 * C162) * C153740 +
             C31779 * C153600) *
                C34883 +
            (C44711 + C44712) * C34884 + (C44713 + C44714) * C34885 +
            (C44715 + C44721) * C153747) *
               C153725 -
           (((C28234 * C4833 + C31533 + C31533 + C153338 * C4839) * C153600 +
             C44720 * C153740) *
                C153747 +
            (C31545 * C153600 + C31544 * C153740) * C34885 +
            (C31543 * C153600 + C31542 * C153740) * C34884 +
            (C31780 * C153600 + C31779 * C153740) * C34883) *
               C153477) *
              C153397 * C678)) /
            (p * q * std::sqrt(p + q));
    d2ee[319] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 +
             C2737 + C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
             C153761 * C162) *
                C153740 +
            (C7654 + C7655 + C7656) * C153600) *
               C153739 +
           ((C3086 + C3087 + C3088) * C153740 +
            (C4215 + C4214 + C4213) * C153600) *
               C153560) *
              C153413 * C153397 * C130 -
          (((C4218 + C4217 + C4216) * C153600 +
            (C3097 + C3096 + C3095) * C153740) *
               C153560 +
           ((C7665 + C7664 + C7663) * C153600 +
            (C2733 * C147 + C2751 + C2751 + C153761 * C163 + C2731 * C146 +
             C2752 + C2752 + C2724 * C162 + C2729 * C145 + C2753 + C2753 +
             C2723 * C161) *
                C153740) *
               C153739) *
              C153413 * C153397 * C131 +
          (((C2729 * C146 + C2754 + C2754 + C2723 * C162 + C2731 * C147 +
             C2755 + C2755 + C2724 * C163 + C2733 * C148 + C2756 + C2756 +
             C153761 * C164) *
                C153740 +
            (C8142 + C8143 + C8144) * C153600) *
               C153739 +
           ((C3621 + C3622 + C3623) * C153740 +
            (C2729 * C983 + C3850 + C3850 + C2723 * C995 + C2731 * C984 +
             C3849 + C3849 + C2724 * C996 + C2733 * C985 + C3848 + C3848 +
             C153761 * C997) *
                C153600) *
               C153560) *
              C153413 * C153397 * C132 -
          (((C2733 * C986 + C18783 + C18783 + C153761 * C998 + C2731 * C985 +
             C18784 + C18784 + C2724 * C997 + C2729 * C984 + C18785 + C18785 +
             C2723 * C996) *
                C153600 +
            (C2733 * C325 + C2766 + C2766 + C153761 * C349 + C2731 * C315 +
             C2767 + C2767 + C2724 * C339 + C2729 * C316 + C2768 + C2768 +
             C2723 * C340) *
                C153740) *
               C153560 +
           ((C2733 * C506 + C7122 + C7122 + C153761 * C530 + C2731 * C496 +
             C7123 + C7123 + C2724 * C520 + C2729 * C497 + C7124 + C7124 +
             C2723 * C521) *
                C153600 +
            (C2733 * C149 + C2769 + C2769 + C153761 * C165 + C2731 * C148 +
             C2770 + C2770 + C2724 * C164 + C2729 * C147 + C2771 + C2771 +
             C2723 * C163) *
                C153740) *
               C153739) *
              C153413 * C153397 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 +
              C2737 + C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
              C153761 * C162) *
                 C153740 +
             (C7654 + C7655 + C7656) * C153600) *
                C153739 +
            ((C3086 + C3087 + C3088) * C153740 +
             (C4215 + C4214 + C4213) * C153600) *
                C153560) *
               C153413 * C310 -
           ((C5621 * C153600 + (C3091 + C3090 + C3089) * C153740) * C153560 +
            ((C4213 + C4214 + C4215) * C153600 +
             (C3088 + C3087 + C3086) * C153740) *
                C153739) *
               C153413 * C311 +
           ((C3106 * C153740 + (C4212 + C4211 + C4210) * C153600) * C153739 +
            ((C3094 + C3093 + C3092) * C153740 +
             (C5629 + C5630 + C5631) * C153600) *
                C153560) *
               C153413 * C312) *
              C313 +
          ((((C3095 + C3096 + C3097) * C153740 +
             (C4216 + C4217 + C4218) * C153600) *
                C153739 +
            ((C3098 + C3099 + C3100) * C153740 +
             (C4219 + C4220 + C4221) * C153600) *
                C153560) *
               C153413 * C311 -
           (((C4218 + C4217 + C4216) * C153600 +
             (C3097 + C3096 + C3095) * C153740) *
                C153560 +
            ((C7665 + C7664 + C7663) * C153600 +
             (C2733 * C147 + C2751 + C2751 + C153761 * C163 + C2731 * C146 +
              C2752 + C2752 + C2724 * C162 + C2729 * C145 + C2753 + C2753 +
              C2723 * C161) *
                 C153740) *
                C153739) *
               C153413 * C310 -
           (((C2733 * C4146 + C4183 + C4183 + C153761 * C4154 + C2731 * C4145 +
              C4184 + C4184 + C2724 * C4153 + C2729 * C4144 + C4185 + C4185 +
              C2723 * C4152) *
                 C153600 +
             (C3103 + C3102 + C3101) * C153740) *
                C153560 +
            ((C4221 + C4220 + C4219) * C153600 + C3107 * C153740) * C153739) *
               C153413 * C312) *
              C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153740 +
            C31295 * C153600) *
               C34883 +
           (C28429 * C153740 + C29076 * C153600) * C34884 +
           (C28430 * C153740 + C29075 * C153600) * C34885 +
           (C28431 * C153740 + C29074 * C153600) * C153747) *
              C153413 * C153397 * C130 -
          ((C29079 * C153600 + C28436 * C153740) * C153747 +
           (C29078 * C153600 + C28435 * C153740) * C34885 +
           (C29077 * C153600 + C28434 * C153740) * C34884 +
           (C31300 * C153600 +
            (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C153740) *
               C34883) *
              C153413 * C153397 * C131 +
          (((C28234 * C146 + C28247 + C28247 + C153338 * C162) * C153740 +
            C31779 * C153600) *
               C34883 +
           (C28736 * C153740 + C31542 * C153600) * C34884 +
           (C28737 * C153740 + C31544 * C153600) * C34885 +
           (C28738 * C153740 +
            (C28234 * C4145 + C28867 + C28867 + C153338 * C4153) * C153600) *
               C153747) *
              C153413 * C153397 * C132 -
          (((C28234 * C4146 + C44108 + C44108 + C153338 * C4154) * C153600 +
            (C28234 * C1224 + C28253 + C28253 + C153338 * C1234) * C153740) *
               C153747 +
           ((C28234 * C1797 + C30762 + C30762 + C153338 * C1807) * C153600 +
            (C28234 * C323 + C28254 + C28254 + C153338 * C347) * C153740) *
               C34885 +
           ((C28234 * C984 + C30764 + C30764 + C153338 * C996) * C153600 +
            (C28234 * C316 + C28255 + C28255 + C153338 * C340) * C153740) *
               C34884 +
           ((C28234 * C497 + C30766 + C30766 + C153338 * C521) * C153600 +
            (C28234 * C147 + C28256 + C28256 + C153338 * C163) * C153740) *
               C34883) *
              C153413 * C153397 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153740 +
             C31295 * C153600) *
                C34883 +
            (C44303 + C44304) * C34884 + C44319 * C34885 + C44320 * C153747) *
               C153413 * C310 -
           ((C44309 + C44310) * C153747 + (C44308 + C44307) * C34885 +
            (C44306 + C44305) * C34884 + (C44304 + C44303) * C34883) *
               C153413 * C311 +
           (C44319 * C34883 + C44320 * C34884 + (C44310 + C44309) * C34885 +
            (C28433 * C153740 + C29867 * C153600) * C153747) *
               C153413 * C312) *
              C313 +
          (((C44311 + C44312) * C34883 + (C44313 + C44314) * C34884 +
            (C44315 + C44316) * C34885 + (C44317 + C44318) * C153747) *
               C153413 * C311 -
           (C44321 * C153747 + C44322 * C34885 + (C44312 + C44311) * C34884 +
            (C31300 * C153600 +
             (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C153740) *
                C34883) *
               C153413 * C310 -
           (((C28234 * C29033 + C29056 + C29056 + C153338 * C29037) * C153600 +
             C28438 * C153740) *
                C153747 +
            (C44318 + C44317) * C34885 + C44321 * C34884 + C44322 * C34883) *
               C153413 * C312) *
              C153384)) /
            (p * q * std::sqrt(p + q));
    d2ee[320] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 +
              C2737 + C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
              C153761 * C162) *
                 C153740 +
             (C7654 + C7655 + C7656) * C153600) *
                C153739 +
            ((C3086 + C3087 + C3088) * C153740 + C20351 * C153600) * C153560) *
               C153413 * C153795 -
           ((C5621 * C153600 + (C3091 + C3090 + C3089) * C153740) * C153560 +
            (C20352 * C153600 + (C3088 + C3087 + C3086) * C153740) * C153739) *
               C153413 * C153796 +
           ((C3106 * C153740 + (C4212 + C4211 + C4210) * C153600) * C153739 +
            ((C3094 + C3093 + C3092) * C153740 +
             (C5629 + C5630 + C5631) * C153600) *
                C153560) *
               C153413 * C1509) *
              C153716 +
          ((((C3095 + C3096 + C3097) * C153740 + C20353 * C153600) * C153739 +
            ((C3098 + C3099 + C3100) * C153740 +
             (C4219 + C4220 + C4221) * C153600) *
                C153560) *
               C153413 * C153796 -
           ((C20354 * C153600 + (C3097 + C3096 + C3095) * C153740) * C153560 +
            ((C7665 + C7664 + C7663) * C153600 +
             (C2733 * C147 + C2751 + C2751 + C153761 * C163 + C2731 * C146 +
              C2752 + C2752 + C2724 * C162 + C2729 * C145 + C2753 + C2753 +
              C2723 * C161) *
                 C153740) *
                C153739) *
               C153413 * C153795 -
           (((C2733 * C4146 + C4183 + C4183 + C153761 * C4154 + C2731 * C4145 +
              C4184 + C4184 + C2724 * C4153 + C2729 * C4144 + C4185 + C4185 +
              C2723 * C4152) *
                 C153600 +
             (C3103 + C3102 + C3101) * C153740) *
                C153560 +
            ((C4221 + C4220 + C4219) * C153600 + C3107 * C153740) * C153739) *
               C153413 * C1509) *
              C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153740 +
             C31295 * C153600) *
                C34883 +
            (C44303 + C44304) * C34884 + C44319 * C34885 + C44320 * C153747) *
               C153413 * C153795 -
           (C45510 * C153747 + C45511 * C34885 + (C44306 + C44305) * C34884 +
            (C44304 + C44303) * C34883) *
               C153413 * C153796 +
           (C44319 * C34883 + C44320 * C34884 + (C44310 + C44309) * C34885 +
            (C45512 + C45513) * C153747) *
               C153413 * C1509) *
              C153716 +
          (((C44311 + C44312) * C34883 + (C44313 + C44314) * C34884 +
            (C44315 + C44316) * C34885 + (C44317 + C44318) * C153747) *
               C153413 * C153796 -
           (C44321 * C153747 + C44322 * C34885 + (C44312 + C44311) * C34884 +
            (C31300 * C153600 +
             (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C153740) *
                C34883) *
               C153413 * C153795 -
           (((C28234 * C29033 + C29056 + C29056 + C153338 * C29037) * C153600 +
             C28438 * C153740) *
                C153747 +
            (C44318 + C44317) * C34885 + C44321 * C34884 + C44322 * C34883) *
               C153413 * C1509) *
              C153384)) /
            (p * q * std::sqrt(p + q));
    d2ee[321] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 +
              C2737 + C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
              C153761 * C162) *
                 C153740 +
             (C7654 + C7655 + C7656) * C153600) *
                C153739 +
            ((C3086 + C3087 + C3088) * C153740 + C20351 * C153600) * C153560) *
               C153725 -
           ((C9063 * C153600 + C20352 * C153740) * C153560 +
            ((C7659 + C7658 + C7657) * C153600 +
             (C7656 + C7655 + C7654) * C153740) *
                C153739) *
               C153477) *
              C153795 +
          (((C20351 * C153740 + C21130 * C153600) * C153739 +
            (C22098 * C153740 + (C4873 + C4874 + C4875) * C153600) * C153560) *
               C153477 -
           ((C5621 * C153600 + (C3091 + C3090 + C3089) * C153740) * C153560 +
            (C20352 * C153600 + (C3088 + C3087 + C3086) * C153740) * C153739) *
               C153725) *
              C153796 +
          (((C3106 * C153740 + C22098 * C153600) * C153739 +
            ((C3094 + C3093 + C3092) * C153740 +
             (C5629 + C5630 + C5631) * C153600) *
                C153560) *
               C153725 -
           (((C2733 * C4833 + C4855 + C4855 + C153761 * C4839 + C2731 * C4834 +
              C4856 + C4856 + C2724 * C4840 + C2729 * C4835 + C4857 + C4857 +
              C2723 * C4841) *
                 C153600 +
             (C5631 + C5630 + C5629) * C153740) *
                C153560 +
            ((C4875 + C4874 + C4873) * C153600 + C5621 * C153740) * C153739) *
               C153477) *
              C1509) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153740 +
             C31295 * C153600) *
                C34883 +
            (C44303 + C44304) * C34884 + C44319 * C34885 + C44320 * C153747) *
               C153725 -
           (C46360 * C153747 + C46361 * C34885 + (C45178 + C45179) * C34884 +
            (C31296 * C153600 + C31295 * C153740) * C34883) *
               C153477) *
              C153795 +
          (((C45179 + C45178) * C34883 + (C45177 + C45176) * C34884 +
            (C45175 + C45174) * C34885 + (C46362 + C46363) * C153747) *
               C153477 -
           (C45510 * C153747 + C45511 * C34885 + (C44306 + C44305) * C34884 +
            (C44304 + C44303) * C34883) *
               C153725) *
              C153796 +
          ((C44319 * C34883 + C44320 * C34884 + (C44310 + C44309) * C34885 +
            (C45512 + C45513) * C153747) *
               C153725 -
           (((C28234 * C29424 + C29436 + C29436 + C153338 * C29426) * C153600 +
             C29867 * C153740) *
                C153747 +
            (C46363 + C46362) * C34885 + C46360 * C34884 + C46361 * C34883) *
               C153477) *
              C1509) *
         C153378) /
            (p * q * std::sqrt(p + q));
    d2ee[322] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 +
             C2737 + C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
             C153761 * C162) *
                C153740 +
            (C7654 + C7655 + C7656) * C153600) *
               C153739 +
           ((C3086 + C3087 + C3088) * C153740 + C20351 * C153600) * C153560) *
              C153413 * C1218 -
          ((C5621 * C153600 + (C3091 + C3090 + C3089) * C153740) * C153560 +
           (C20352 * C153600 + (C3088 + C3087 + C3086) * C153740) * C153739) *
              C153413 * C1219 +
          ((C3106 * C153740 + (C4212 + C4211 + C4210) * C153600) * C153739 +
           ((C3094 + C3093 + C3092) * C153740 +
            (C5629 + C5630 + C5631) * C153600) *
               C153560) *
              C153413 * C1220 -
          (((C2733 * C5601 + C5618 + C5618 + C153761 * C5607 + C2731 * C5602 +
             C5619 + C5619 + C2724 * C5608 + C2729 * C5603 + C5620 + C5620 +
             C2723 * C5609) *
                C153600 +
            (C4615 + C4614 + C4613) * C153740) *
               C153560 +
           ((C5631 + C5630 + C5629) * C153600 + C4605 * C153740) * C153739) *
              C153413 * C1221) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 +
              C2737 + C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
              C153761 * C162) *
                 C153740 +
             (C7654 + C7655 + C7656) * C153600) *
                C153739 +
            ((C3086 + C3087 + C3088) * C153740 + C20351 * C153600) * C153560) *
               C153413 * C1131 -
           ((C5621 * C153600 + (C3091 + C3090 + C3089) * C153740) * C153560 +
            (C20352 * C153600 + (C3088 + C3087 + C3086) * C153740) * C153739) *
               C153413 * C153449) *
              C1133 +
          ((((C3095 + C3096 + C3097) * C153740 + C20353 * C153600) * C153739 +
            ((C3098 + C3099 + C3100) * C153740 +
             (C4219 + C4220 + C4221) * C153600) *
                C153560) *
               C153413 * C153449 -
           ((C20354 * C153600 + (C3097 + C3096 + C3095) * C153740) * C153560 +
            ((C7665 + C7664 + C7663) * C153600 +
             (C2733 * C147 + C2751 + C2751 + C153761 * C163 + C2731 * C146 +
              C2752 + C2752 + C2724 * C162 + C2729 * C145 + C2753 + C2753 +
              C2723 * C161) *
                 C153740) *
                C153739) *
               C153413 * C1131) *
              C1134 +
          ((((C2729 * C146 + C2754 + C2754 + C2723 * C162 + C2731 * C147 +
              C2755 + C2755 + C2724 * C163 + C2733 * C148 + C2756 + C2756 +
              C153761 * C164) *
                 C153740 +
             (C8142 + C8143 + C8144) * C153600) *
                C153739 +
            ((C3621 + C3622 + C3623) * C153740 +
             (C19668 + C19669 + C19670) * C153600) *
                C153560) *
               C153413 * C1131 -
           (((C2733 * C1796 + C3845 + C3845 + C153761 * C1806 + C2731 * C1797 +
              C3846 + C3846 + C2724 * C1807 + C2729 * C1798 + C3847 + C3847 +
              C2723 * C1808) *
                 C153600 +
             (C3626 + C3625 + C3624) * C153740) *
                C153560 +
            ((C19670 + C19669 + C19668) * C153600 +
             (C3623 + C3622 + C3621) * C153740) *
                C153739) *
               C153413 * C153449) *
              C1135)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 +
              C2737 + C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
              C153761 * C162) *
                 C153740 +
             (C7654 + C7655 + C7656) * C153600) *
                C153739 +
            ((C3086 + C3087 + C3088) * C153740 + C20351 * C153600) * C153560) *
               C493 -
           ((C9063 * C153600 + C20352 * C153740) * C153560 +
            ((C7659 + C7658 + C7657) * C153600 +
             (C7656 + C7655 + C7654) * C153740) *
                C153739) *
               C494 +
           ((C7674 * C153740 + (C7662 + C7661 + C7660) * C153600) * C153739 +
            (C21130 * C153740 + (C9067 + C9068 + C9069) * C153600) * C153560) *
               C495) *
              C1131 +
          (((C20351 * C153740 + C21130 * C153600) * C153739 +
            ((C4212 + C4211 + C4210) * C153740 +
             (C4873 + C4874 + C4875) * C153600) *
                C153560) *
               C494 -
           ((C5621 * C153600 + (C3091 + C3090 + C3089) * C153740) * C153560 +
            (C20352 * C153600 + (C3088 + C3087 + C3086) * C153740) * C153739) *
               C493 -
           (((C2733 * C6213 + C6232 + C6232 + C153761 * C6225 + C2731 * C6214 +
              C6233 + C6233 + C2724 * C6226 + C2729 * C6215 + C6234 + C6234 +
              C2723 * C6227) *
                 C153600 +
             (C4875 + C4874 + C4873) * C153740) *
                C153560 +
            ((C9069 + C9068 + C9067) * C153600 + C9063 * C153740) * C153739) *
               C495) *
              C153449) *
         C153378) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153740 +
             C31295 * C153600) *
                C34883 +
            (C44303 + C44304) * C34884 + C44319 * C34885 + C44320 * C153747) *
               C153413 * C1131 -
           ((C44309 + C44310) * C153747 + (C44308 + C44307) * C34885 +
            (C44306 + C44305) * C34884 + (C44304 + C44303) * C34883) *
               C153413 * C153449) *
              C1133 +
          (((C44311 + C44312) * C34883 + (C44313 + C44314) * C34884 +
            (C44315 + C44316) * C34885 + (C44317 + C44318) * C153747) *
               C153413 * C153449 -
           (C44321 * C153747 + C44322 * C34885 + (C44312 + C44311) * C34884 +
            (C31300 * C153600 +
             (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C153740) *
                C34883) *
               C153413 * C1131) *
              C1134 +
          ((((C28234 * C146 + C28247 + C28247 + C153338 * C162) * C153740 +
             C31779 * C153600) *
                C34883 +
            (C44711 + C44712) * C34884 + (C44713 + C44714) * C34885 +
            (C44715 + C44721) * C153747) *
               C153413 * C1131 -
           (((C28234 * C5601 + C28866 + C28866 + C153338 * C5607) * C153600 +
             C28739 * C153740) *
                C153747 +
            (C44721 + C44715) * C34885 + (C44714 + C44713) * C34884 +
            (C44712 + C44711) * C34883) *
               C153413 * C153449) *
              C1135)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153740 +
            C31295 * C153600) *
               C34883 +
           (C44303 + C44304) * C34884 + C44319 * C34885 + C44320 * C153747) *
              C153413 * C1218 -
          (C45510 * C153747 + C45511 * C34885 + (C44306 + C44305) * C34884 +
           (C44304 + C44303) * C34883) *
              C153413 * C1219 +
          (C44319 * C34883 + C44320 * C34884 + (C44310 + C44309) * C34885 +
           (C45512 + C45513) * C153747) *
              C153413 * C1220 -
          (((C28234 * C29858 + C29864 + C29864 + C153338 * C29860) * C153600 +
            C29301 * C153740) *
               C153747 +
           (C45513 + C45512) * C34885 + C45510 * C34884 + C45511 * C34883) *
              C153413 * C1221) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153740 +
             C31295 * C153600) *
                C34883 +
            (C44303 + C44304) * C34884 + C44319 * C34885 + C44320 * C153747) *
               C493 -
           ((C45174 + C45175) * C153747 + (C45176 + C45177) * C34885 +
            (C45178 + C45179) * C34884 +
            (C31296 * C153600 + C31295 * C153740) * C34883) *
               C494 +
           ((C31296 * C153740 + C31299 * C153600) * C34883 +
            (C45708 + C45709) * C34884 + (C45710 + C45711) * C34885 +
            (C45712 + C45713) * C153747) *
               C495) *
              C1131 +
          (((C45179 + C45178) * C34883 + (C45177 + C45176) * C34884 +
            (C45175 + C45174) * C34885 +
            (C29073 * C153740 + C29448 * C153600) * C153747) *
               C494 -
           (C45510 * C153747 + C45511 * C34885 + (C44306 + C44305) * C34884 +
            (C44304 + C44303) * C34883) *
               C493 -
           (((C28234 * C30194 + C30201 + C30201 + C153338 * C30198) * C153600 +
             C29448 * C153740) *
                C153747 +
            (C45713 + C45712) * C34885 + (C45711 + C45710) * C34884 +
            (C45709 + C45708) * C34883) *
               C495) *
              C153449) *
         C153378) /
            (p * q * std::sqrt(p + q));
    d2ee[323] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 +
               C2737 + C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
               C153761 * C162) *
                  C153740 +
              (C7654 + C7655 + C7656) * C153600) *
                 C153739 +
             ((C3086 + C3087 + C3088) * C153740 + C20351 * C153600) * C153560) *
                C153725 -
            ((C9063 * C153600 + C20352 * C153740) * C153560 +
             ((C7659 + C7658 + C7657) * C153600 +
              (C7656 + C7655 + C7654) * C153740) *
                 C153739) *
                C153477) *
               C1131 +
           (((C20351 * C153740 + C21130 * C153600) * C153739 +
             ((C4212 + C4211 + C4210) * C153740 +
              (C4873 + C4874 + C4875) * C153600) *
                 C153560) *
                C153477 -
            ((C5621 * C153600 + (C3091 + C3090 + C3089) * C153740) * C153560 +
             (C20352 * C153600 + (C3088 + C3087 + C3086) * C153740) * C153739) *
                C153725) *
               C153449) *
              C153716 +
          (((((C7663 + C7664 + C7665) * C153740 +
              (C7666 + C7667 + C7668) * C153600) *
                 C153739 +
             (C20353 * C153740 + (C8456 + C8457 + C8458) * C153600) * C153560) *
                C153477 -
            ((C20354 * C153600 + (C3097 + C3096 + C3095) * C153740) * C153560 +
             ((C7665 + C7664 + C7663) * C153600 +
              (C2733 * C147 + C2751 + C2751 + C153761 * C163 + C2731 * C146 +
               C2752 + C2752 + C2724 * C162 + C2729 * C145 + C2753 + C2753 +
               C2723 * C161) *
                  C153740) *
                 C153739) *
                C153725) *
               C1131 +
           ((((C3095 + C3096 + C3097) * C153740 + C20353 * C153600) * C153739 +
             ((C3098 + C3099 + C3100) * C153740 +
              (C4219 + C4220 + C4221) * C153600) *
                 C153560) *
                C153725 -
            (((C2733 * C3330 + C3367 + C3367 + C153761 * C3338 + C2731 * C3329 +
               C3368 + C3368 + C2724 * C3337 + C2729 * C3328 + C3369 + C3369 +
               C2723 * C3336) *
                  C153600 +
              (C4221 + C4220 + C4219) * C153740) *
                 C153560 +
             ((C8458 + C8457 + C8456) * C153600 + C20354 * C153740) * C153739) *
                C153477) *
               C153449) *
              C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153740 +
              C31295 * C153600) *
                 C34883 +
             (C44303 + C44304) * C34884 + C44319 * C34885 + C44320 * C153747) *
                C153725 -
            ((C45174 + C45175) * C153747 + (C45176 + C45177) * C34885 +
             (C45178 + C45179) * C34884 +
             (C31296 * C153600 + C31295 * C153740) * C34883) *
                C153477) *
               C1131 +
           (((C45179 + C45178) * C34883 + (C45177 + C45176) * C34884 +
             (C45175 + C45174) * C34885 +
             (C29073 * C153740 + C29448 * C153600) * C153747) *
                C153477 -
            (C45510 * C153747 + C45511 * C34885 + (C44306 + C44305) * C34884 +
             (C44304 + C44303) * C34883) *
                C153725) *
               C153449) *
              C153716 +
          ((((C31300 * C153740 + C31301 * C153600) * C34883 +
             (C45180 + C45181) * C34884 + (C45182 + C45183) * C34885 +
             (C45184 + C45185) * C153747) *
                C153477 -
            (C44321 * C153747 + C44322 * C34885 + (C44312 + C44311) * C34884 +
             (C31300 * C153600 +
              (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C153740) *
                 C34883) *
                C153725) *
               C1131 +
           (((C44311 + C44312) * C34883 + (C44313 + C44314) * C34884 +
             (C44315 + C44316) * C34885 + (C44317 + C44318) * C153747) *
                C153725 -
            (((C28234 * C28571 + C28592 + C28592 + C153338 * C28575) * C153600 +
              C29080 * C153740) *
                 C153747 +
             (C45185 + C45184) * C34885 + (C45183 + C45182) * C34884 +
             (C45181 + C45180) * C34883) *
                C153477) *
               C153449) *
              C153384)) /
            (p * q * std::sqrt(p + q));
    d2ee[324] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 +
              C2737 + C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
              C153761 * C162) *
                 C153740 +
             (C7654 + C7655 + C7656) * C153600) *
                C153739 +
            ((C3086 + C3087 + C3088) * C153740 + C20351 * C153600) * C153560) *
               C153413 * C1131 -
           ((C5621 * C153600 + (C3091 + C3090 + C3089) * C153740) * C153560 +
            (C20352 * C153600 + (C3088 + C3087 + C3086) * C153740) * C153739) *
               C153413 * C153449) *
              C1133 +
          ((((C3095 + C3096 + C3097) * C153740 + C20353 * C153600) * C153739 +
            ((C3098 + C3099 + C3100) * C153740 +
             (C4219 + C4220 + C4221) * C153600) *
                C153560) *
               C153413 * C153449 -
           ((C20354 * C153600 + (C3097 + C3096 + C3095) * C153740) * C153560 +
            ((C7665 + C7664 + C7663) * C153600 +
             (C2733 * C147 + C2751 + C2751 + C153761 * C163 + C2731 * C146 +
              C2752 + C2752 + C2724 * C162 + C2729 * C145 + C2753 + C2753 +
              C2723 * C161) *
                 C153740) *
                C153739) *
               C153413 * C1131) *
              C1134 +
          ((((C2729 * C146 + C2754 + C2754 + C2723 * C162 + C2731 * C147 +
              C2755 + C2755 + C2724 * C163 + C2733 * C148 + C2756 + C2756 +
              C153761 * C164) *
                 C153740 +
             (C8142 + C8143 + C8144) * C153600) *
                C153739 +
            ((C3621 + C3622 + C3623) * C153740 +
             (C19668 + C19669 + C19670) * C153600) *
                C153560) *
               C153413 * C1131 -
           (((C2733 * C1796 + C3845 + C3845 + C153761 * C1806 + C2731 * C1797 +
              C3846 + C3846 + C2724 * C1807 + C2729 * C1798 + C3847 + C3847 +
              C2723 * C1808) *
                 C153600 +
             (C3626 + C3625 + C3624) * C153740) *
                C153560 +
            ((C19670 + C19669 + C19668) * C153600 +
             (C3623 + C3622 + C3621) * C153740) *
                C153739) *
               C153413 * C153449) *
              C1135)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 +
             C2737 + C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
             C153761 * C162) *
                C153740 +
            (C7654 + C7655 + C7656) * C153600) *
               C153739 +
           ((C3086 + C3087 + C3088) * C153740 + C20351 * C153600) * C153560) *
              C153413 * C1218 -
          ((C5621 * C153600 + (C3091 + C3090 + C3089) * C153740) * C153560 +
           (C20352 * C153600 + (C3088 + C3087 + C3086) * C153740) * C153739) *
              C153413 * C1219 +
          ((C3106 * C153740 + (C4212 + C4211 + C4210) * C153600) * C153739 +
           ((C3094 + C3093 + C3092) * C153740 +
            (C5629 + C5630 + C5631) * C153600) *
               C153560) *
              C153413 * C1220 -
          (((C2733 * C5601 + C5618 + C5618 + C153761 * C5607 + C2731 * C5602 +
             C5619 + C5619 + C2724 * C5608 + C2729 * C5603 + C5620 + C5620 +
             C2723 * C5609) *
                C153600 +
            (C4615 + C4614 + C4613) * C153740) *
               C153560 +
           ((C5631 + C5630 + C5629) * C153600 + C4605 * C153740) * C153739) *
              C153413 * C1221) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153740 +
             C31295 * C153600) *
                C34883 +
            (C44303 + C44304) * C34884 + C44319 * C34885 + C44320 * C153747) *
               C153413 * C1131 -
           ((C44309 + C44310) * C153747 + (C44308 + C44307) * C34885 +
            (C44306 + C44305) * C34884 + (C44304 + C44303) * C34883) *
               C153413 * C153449) *
              C1133 +
          (((C44311 + C44312) * C34883 + (C44313 + C44314) * C34884 +
            (C44315 + C44316) * C34885 + (C44317 + C44318) * C153747) *
               C153413 * C153449 -
           (C44321 * C153747 + C44322 * C34885 + (C44312 + C44311) * C34884 +
            (C31300 * C153600 +
             (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C153740) *
                C34883) *
               C153413 * C1131) *
              C1134 +
          ((((C28234 * C146 + C28247 + C28247 + C153338 * C162) * C153740 +
             C31779 * C153600) *
                C34883 +
            (C44711 + C44712) * C34884 + (C44713 + C44714) * C34885 +
            (C44715 + C44721) * C153747) *
               C153413 * C1131 -
           (((C28234 * C5601 + C28866 + C28866 + C153338 * C5607) * C153600 +
             C28739 * C153740) *
                C153747 +
            (C44721 + C44715) * C34885 + (C44714 + C44713) * C34884 +
            (C44712 + C44711) * C34883) *
               C153413 * C153449) *
              C1135)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153740 +
            C31295 * C153600) *
               C34883 +
           (C44303 + C44304) * C34884 + C44319 * C34885 + C44320 * C153747) *
              C153413 * C1218 -
          (C45510 * C153747 + C45511 * C34885 + (C44306 + C44305) * C34884 +
           (C44304 + C44303) * C34883) *
              C153413 * C1219 +
          (C44319 * C34883 + C44320 * C34884 + (C44310 + C44309) * C34885 +
           (C45512 + C45513) * C153747) *
              C153413 * C1220 -
          (((C28234 * C29858 + C29864 + C29864 + C153338 * C29860) * C153600 +
            C29301 * C153740) *
               C153747 +
           (C45513 + C45512) * C34885 + C45510 * C34884 + C45511 * C34883) *
              C153413 * C1221) *
         C153378) /
            (p * q * std::sqrt(p + q));
    d2ee[325] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 +
               C2737 + C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
               C153761 * C162) *
                  C153740 +
              (C7654 + C7655 + C7656) * C153600) *
                 C153739 +
             ((C3086 + C3087 + C3088) * C153740 + C20351 * C153600) * C153560) *
                C1938 -
            ((C9063 * C153600 + C20352 * C153740) * C153560 +
             ((C7659 + C7658 + C7657) * C153600 +
              (C7656 + C7655 + C7654) * C153740) *
                 C153739) *
                C153477) *
               C153724 +
           (((C20351 * C153740 + C21130 * C153600) * C153739 +
             (C22098 * C153740 + (C4873 + C4874 + C4875) * C153600) * C153560) *
                C153477 -
            ((C5621 * C153600 + (C3091 + C3090 + C3089) * C153740) * C153560 +
             (C20352 * C153600 + (C3088 + C3087 + C3086) * C153740) * C153739) *
                C1938) *
               C153449) *
              C153716 +
          (((((C7663 + C7664 + C7665) * C153740 +
              (C7666 + C7667 + C7668) * C153600) *
                 C153739 +
             (C20353 * C153740 + (C8456 + C8457 + C8458) * C153600) * C153560) *
                C153477 -
            ((C20354 * C153600 + (C3097 + C3096 + C3095) * C153740) * C153560 +
             ((C7665 + C7664 + C7663) * C153600 +
              (C2733 * C147 + C2751 + C2751 + C153761 * C163 + C2731 * C146 +
               C2752 + C2752 + C2724 * C162 + C2729 * C145 + C2753 + C2753 +
               C2723 * C161) *
                  C153740) *
                 C153739) *
                C1938) *
               C153724 +
           ((((C3095 + C3096 + C3097) * C153740 + C20353 * C153600) * C153739 +
             ((C3098 + C3099 + C3100) * C153740 +
              (C4219 + C4220 + C4221) * C153600) *
                 C153560) *
                C1938 -
            (((C2733 * C3330 + C3367 + C3367 + C153761 * C3338 + C2731 * C3329 +
               C3368 + C3368 + C2724 * C3337 + C2729 * C3328 + C3369 + C3369 +
               C2723 * C3336) *
                  C153600 +
              (C4221 + C4220 + C4219) * C153740) *
                 C153560 +
             ((C8458 + C8457 + C8456) * C153600 + C20354 * C153740) * C153739) *
                C153477) *
               C153449) *
              C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153740 +
              C31295 * C153600) *
                 C34883 +
             (C44303 + C44304) * C34884 + C44319 * C34885 + C44320 * C153747) *
                C1938 -
            (C46360 * C153747 + C46361 * C34885 + (C45178 + C45179) * C34884 +
             (C31296 * C153600 + C31295 * C153740) * C34883) *
                C153477) *
               C153724 +
           (((C45179 + C45178) * C34883 + (C45177 + C45176) * C34884 +
             (C45175 + C45174) * C34885 + (C46362 + C46363) * C153747) *
                C153477 -
            (C45510 * C153747 + C45511 * C34885 + (C44306 + C44305) * C34884 +
             (C44304 + C44303) * C34883) *
                C1938) *
               C153449) *
              C153716 +
          ((((C31300 * C153740 + C31301 * C153600) * C34883 +
             (C45180 + C45181) * C34884 + (C45182 + C45183) * C34885 +
             (C45184 + C45185) * C153747) *
                C153477 -
            (C44321 * C153747 + C44322 * C34885 + (C44312 + C44311) * C34884 +
             (C31300 * C153600 +
              (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C153740) *
                 C34883) *
                C1938) *
               C153724 +
           (((C44311 + C44312) * C34883 + (C44313 + C44314) * C34884 +
             (C44315 + C44316) * C34885 + (C44317 + C44318) * C153747) *
                C1938 -
            (((C28234 * C28571 + C28592 + C28592 + C153338 * C28575) * C153600 +
              C29080 * C153740) *
                 C153747 +
             (C45185 + C45184) * C34885 + (C45183 + C45182) * C34884 +
             (C45181 + C45180) * C34883) *
                C153477) *
               C153449) *
              C153384)) /
            (p * q * std::sqrt(p + q));
    d2ee[326] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 +
              C2737 + C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
              C153761 * C162) *
                 C153740 +
             (C7654 + C7655 + C7656) * C153600) *
                C153739 +
            ((C3086 + C3087 + C3088) * C153740 + C20351 * C153600) * C153560) *
               C153797 -
           ((C9063 * C153600 + C20352 * C153740) * C153560 +
            ((C7659 + C7658 + C7657) * C153600 +
             (C7656 + C7655 + C7654) * C153740) *
                C153739) *
               C153798 +
           ((C7674 * C153740 + (C7662 + C7661 + C7660) * C153600) * C153739 +
            (C21130 * C153740 + (C9067 + C9068 + C9069) * C153600) * C153560) *
               C2454) *
              C153724 +
          (((C20351 * C153740 + C21130 * C153600) * C153739 +
            (C22098 * C153740 + (C4873 + C4874 + C4875) * C153600) * C153560) *
               C153798 -
           ((C5621 * C153600 + (C3091 + C3090 + C3089) * C153740) * C153560 +
            (C20352 * C153600 + (C3088 + C3087 + C3086) * C153740) * C153739) *
               C153797 -
           (((C2733 * C6213 + C6232 + C6232 + C153761 * C6225 + C2731 * C6214 +
              C6233 + C6233 + C2724 * C6226 + C2729 * C6215 + C6234 + C6234 +
              C2723 * C6227) *
                 C153600 +
             (C4875 + C4874 + C4873) * C153740) *
                C153560 +
            ((C9069 + C9068 + C9067) * C153600 + C9063 * C153740) * C153739) *
               C2454) *
              C153449) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153740 +
             C31295 * C153600) *
                C34883 +
            (C44303 + C44304) * C34884 + C44319 * C34885 + C44320 * C153747) *
               C153797 -
           (C46360 * C153747 + C46361 * C34885 + (C45178 + C45179) * C34884 +
            (C31296 * C153600 + C31295 * C153740) * C34883) *
               C153798 +
           ((C31296 * C153740 + C31299 * C153600) * C34883 +
            (C45708 + C45709) * C34884 + (C45710 + C45711) * C34885 +
            (C45712 + C45713) * C153747) *
               C2454) *
              C153724 +
          (((C45179 + C45178) * C34883 + (C45177 + C45176) * C34884 +
            (C45175 + C45174) * C34885 + (C46362 + C46363) * C153747) *
               C153798 -
           (C45510 * C153747 + C45511 * C34885 + (C44306 + C44305) * C34884 +
            (C44304 + C44303) * C34883) *
               C153797 -
           (((C28234 * C30194 + C30201 + C30201 + C153338 * C30198) * C153600 +
             C29448 * C153740) *
                C153747 +
            (C45713 + C45712) * C34885 + (C45711 + C45710) * C34884 +
            (C45709 + C45708) * C34883) *
               C2454) *
              C153449) *
         C153378) /
            (p * q * std::sqrt(p + q));
    d2ee[327] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 +
              C2737 + C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
              C153761 * C162) *
                 C153740 +
             (C7654 + C7655 + C7656) * C153600) *
                C153739 +
            ((C3086 + C3087 + C3088) * C153740 + C20351 * C153600) * C153560) *
               C1938 -
           ((C9063 * C153600 + C20352 * C153740) * C153560 +
            ((C7659 + C7658 + C7657) * C153600 +
             (C7656 + C7655 + C7654) * C153740) *
                C153739) *
               C153477) *
              C310 +
          (((C20351 * C153740 + C21130 * C153600) * C153739 +
            (C22098 * C153740 + (C4873 + C4874 + C4875) * C153600) * C153560) *
               C153477 -
           ((C5621 * C153600 + (C3091 + C3090 + C3089) * C153740) * C153560 +
            (C20352 * C153600 + (C3088 + C3087 + C3086) * C153740) * C153739) *
               C1938) *
              C311 +
          (((C3106 * C153740 + C22098 * C153600) * C153739 +
            ((C3094 + C3093 + C3092) * C153740 +
             (C5629 + C5630 + C5631) * C153600) *
                C153560) *
               C1938 -
           (((C2733 * C4833 + C4855 + C4855 + C153761 * C4839 + C2731 * C4834 +
              C4856 + C4856 + C2724 * C4840 + C2729 * C4835 + C4857 + C4857 +
              C2723 * C4841) *
                 C153600 +
             (C5631 + C5630 + C5629) * C153740) *
                C153560 +
            ((C4875 + C4874 + C4873) * C153600 + C5621 * C153740) * C153739) *
               C153477) *
              C312) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 +
              C2737 + C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
              C153761 * C162) *
                 C153740 +
             (C7654 + C7655 + C7656) * C153600) *
                C153739 +
            ((C3086 + C3087 + C3088) * C153740 + C20351 * C153600) * C153560) *
               C1938 -
           ((C9063 * C153600 + C20352 * C153740) * C153560 +
            ((C7659 + C7658 + C7657) * C153600 +
             (C7656 + C7655 + C7654) * C153740) *
                C153739) *
               C153477) *
              C153397 * C1133 +
          ((((C7663 + C7664 + C7665) * C153740 +
             (C7666 + C7667 + C7668) * C153600) *
                C153739 +
            (C20353 * C153740 + (C8456 + C8457 + C8458) * C153600) * C153560) *
               C153477 -
           ((C20354 * C153600 + (C3097 + C3096 + C3095) * C153740) * C153560 +
            ((C7665 + C7664 + C7663) * C153600 +
             (C2733 * C147 + C2751 + C2751 + C153761 * C163 + C2731 * C146 +
              C2752 + C2752 + C2724 * C162 + C2729 * C145 + C2753 + C2753 +
              C2723 * C161) *
                 C153740) *
                C153739) *
               C1938) *
              C153397 * C1134 +
          ((((C2729 * C146 + C2754 + C2754 + C2723 * C162 + C2731 * C147 +
              C2755 + C2755 + C2724 * C163 + C2733 * C148 + C2756 + C2756 +
              C153761 * C164) *
                 C153740 +
             (C8142 + C8143 + C8144) * C153600) *
                C153739 +
            ((C3621 + C3622 + C3623) * C153740 +
             (C19668 + C19669 + C19670) * C153600) *
                C153560) *
               C1938 -
           (((C2733 * C1365 + C7894 + C7894 + C153761 * C1375 + C2731 * C1366 +
              C7895 + C7895 + C2724 * C1376 + C2729 * C1367 + C7896 + C7896 +
              C2723 * C1377) *
                 C153600 +
             (C19670 + C19669 + C19668) * C153740) *
                C153560 +
            ((C8147 + C8146 + C8145) * C153600 +
             (C8144 + C8143 + C8142) * C153740) *
                C153739) *
               C153477) *
              C153397 * C1135)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 +
             C2737 + C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
             C153761 * C162) *
                C153740 +
            (C7654 + C7655 + C7656) * C153600) *
               C153739 +
           ((C3086 + C3087 + C3088) * C153740 + C20351 * C153600) * C153560) *
              C2144 -
          ((C9063 * C153600 + C20352 * C153740) * C153560 +
           ((C7659 + C7658 + C7657) * C153600 +
            (C7656 + C7655 + C7654) * C153740) *
               C153739) *
              C2145 +
          ((C7674 * C153740 + (C7662 + C7661 + C7660) * C153600) * C153739 +
           (C21130 * C153740 + (C9067 + C9068 + C9069) * C153600) * C153560) *
              C2146 -
          (((C2733 * C9040 + C9057 + C9057 + C153761 * C9046 + C2731 * C9041 +
             C9058 + C9058 + C2724 * C9047 + C2729 * C9042 + C9059 + C9059 +
             C2723 * C9048) *
                C153600 +
            (C9069 + C9068 + C9067) * C153740) *
               C153560 +
           ((C10406 + C10405 + C10404) * C153600 + C10397 * C153740) *
               C153739) *
              C2147) *
         C153397 * C153378) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153740 +
             C31295 * C153600) *
                C34883 +
            (C44303 + C44304) * C34884 + C44319 * C34885 + C44320 * C153747) *
               C1938 -
           (C46360 * C153747 + C46361 * C34885 + (C45178 + C45179) * C34884 +
            (C31296 * C153600 + C31295 * C153740) * C34883) *
               C153477) *
              C153397 * C1133 +
          (((C31300 * C153740 + C31301 * C153600) * C34883 +
            (C45180 + C45181) * C34884 + (C45182 + C45183) * C34885 +
            (C45184 + C45185) * C153747) *
               C153477 -
           (C44321 * C153747 + C44322 * C34885 + (C44312 + C44311) * C34884 +
            (C31300 * C153600 +
             (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C153740) *
                C34883) *
               C1938) *
              C153397 * C1134 +
          ((((C28234 * C146 + C28247 + C28247 + C153338 * C162) * C153740 +
             C31779 * C153600) *
                C34883 +
            (C44711 + C44712) * C34884 + (C44713 + C44714) * C34885 +
            (C44715 + C44721) * C153747) *
               C1938 -
           (((C28234 * C4833 + C31533 + C31533 + C153338 * C4839) * C153600 +
             C44720 * C153740) *
                C153747 +
            (C31545 * C153600 + C31544 * C153740) * C34885 +
            (C31543 * C153600 + C31542 * C153740) * C34884 +
            (C31780 * C153600 + C31779 * C153740) * C34883) *
               C153477) *
              C153397 * C1135)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153740 +
             C31295 * C153600) *
                C34883 +
            (C44303 + C44304) * C34884 + C44319 * C34885 + C44320 * C153747) *
               C1938 -
           (C46360 * C153747 + C46361 * C34885 + (C45178 + C45179) * C34884 +
            (C31296 * C153600 + C31295 * C153740) * C34883) *
               C153477) *
              C310 +
          (((C45179 + C45178) * C34883 + (C45177 + C45176) * C34884 +
            (C45175 + C45174) * C34885 + (C46362 + C46363) * C153747) *
               C153477 -
           (C45510 * C153747 + C45511 * C34885 + (C44306 + C44305) * C34884 +
            (C44304 + C44303) * C34883) *
               C1938) *
              C311 +
          ((C44319 * C34883 + C44320 * C34884 + (C44310 + C44309) * C34885 +
            (C45512 + C45513) * C153747) *
               C1938 -
           (((C28234 * C29424 + C29436 + C29436 + C153338 * C29426) * C153600 +
             C29867 * C153740) *
                C153747 +
            (C46363 + C46362) * C34885 + C46360 * C34884 + C46361 * C34883) *
               C153477) *
              C312) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153740 +
            C31295 * C153600) *
               C34883 +
           (C44303 + C44304) * C34884 + C44319 * C34885 + C44320 * C153747) *
              C2144 -
          (C46360 * C153747 + C46361 * C34885 + (C45178 + C45179) * C34884 +
           (C31296 * C153600 + C31295 * C153740) * C34883) *
              C2145 +
          ((C31296 * C153740 + C31299 * C153600) * C34883 +
           (C45708 + C45709) * C34884 + (C45710 + C45711) * C34885 +
           (C45712 + C45713) * C153747) *
              C2146 -
          (((C28234 * C32673 + C32687 + C32687 + C153338 * C32675) * C153600 +
            C32696 * C153740) *
               C153747 +
           (C32695 * C153600 + C31297 * C153740) * C34885 +
           (C32694 * C153600 + C31298 * C153740) * C34884 +
           (C34025 * C153600 + C31299 * C153740) * C34883) *
              C2147) *
         C153397 * C153378) /
            (p * q * std::sqrt(p + q));
    d2ee[328] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 +
              C2737 + C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
              C153761 * C162) *
                 C153740 +
             (C7654 + C7655 + C7656) * C153600) *
                C153739 +
            ((C3086 + C3087 + C3088) * C153740 + C20351 * C153600) * C153560) *
               C153797 -
           ((C9063 * C153600 + C20352 * C153740) * C153560 +
            ((C7659 + C7658 + C7657) * C153600 +
             (C7656 + C7655 + C7654) * C153740) *
                C153739) *
               C153798 +
           ((C7674 * C153740 + (C7662 + C7661 + C7660) * C153600) * C153739 +
            (C21130 * C153740 + (C9067 + C9068 + C9069) * C153600) * C153560) *
               C2454) *
              C153397 * C153716 +
          ((((C7663 + C7664 + C7665) * C153740 +
             (C7666 + C7667 + C7668) * C153600) *
                C153739 +
            (C20353 * C153740 + (C8456 + C8457 + C8458) * C153600) * C153560) *
               C153798 -
           ((C20354 * C153600 + (C3097 + C3096 + C3095) * C153740) * C153560 +
            ((C7665 + C7664 + C7663) * C153600 +
             (C2733 * C147 + C2751 + C2751 + C153761 * C163 + C2731 * C146 +
              C2752 + C2752 + C2724 * C162 + C2729 * C145 + C2753 + C2753 +
              C2723 * C161) *
                 C153740) *
                C153739) *
               C153797 -
           (((C2733 * C8437 + C8447 + C8447 + C153761 * C8439 + C2731 * C6216 +
              C8448 + C8448 + C2724 * C6228 + C2729 * C6217 + C8449 + C8449 +
              C2723 * C6229) *
                 C153600 +
             (C8458 + C8457 + C8456) * C153740) *
                C153560 +
            ((C7671 + C7670 + C7669) * C153600 + C7675 * C153740) * C153739) *
               C2454) *
              C153397 * C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153740 +
             C31295 * C153600) *
                C34883 +
            (C44303 + C44304) * C34884 + C44319 * C34885 + C44320 * C153747) *
               C153797 -
           (C46360 * C153747 + C46361 * C34885 + (C45178 + C45179) * C34884 +
            (C31296 * C153600 + C31295 * C153740) * C34883) *
               C153798 +
           ((C31296 * C153740 + C31299 * C153600) * C34883 +
            (C45708 + C45709) * C34884 + (C45710 + C45711) * C34885 +
            (C45712 + C45713) * C153747) *
               C2454) *
              C153397 * C153716 +
          (((C31300 * C153740 + C31301 * C153600) * C34883 +
            (C45180 + C45181) * C34884 + (C45182 + C45183) * C34885 +
            (C45184 + C45185) * C153747) *
               C153798 -
           (C44321 * C153747 + C44322 * C34885 + (C44312 + C44311) * C34884 +
            (C31300 * C153600 +
             (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C153740) *
                C34883) *
               C153797 -
           (((C28234 * C32070 + C32086 + C32086 + C153338 * C32072) * C153600 +
             C31017 * C153740) *
                C153747 +
            (C31304 * C153600 + C31016 * C153740) * C34885 +
            (C31303 * C153600 + C31015 * C153740) * C34884 +
            (C31302 * C153600 + C31301 * C153740) * C34883) *
               C2454) *
              C153397 * C153384)) /
            (p * q * std::sqrt(p + q));
    d2ee[329] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 +
              C2737 + C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
              C153761 * C162) *
                 C153740 +
             (C7654 + C7655 + C7656) * C153600) *
                C153739 +
            ((C3086 + C3087 + C3088) * C153740 + C20351 * C153600) * C153560) *
               C1938 -
           ((C9063 * C153600 + C20352 * C153740) * C153560 +
            ((C7659 + C7658 + C7657) * C153600 +
             (C7656 + C7655 + C7654) * C153740) *
                C153739) *
               C153477) *
              C153397 * C1133 +
          ((((C7663 + C7664 + C7665) * C153740 +
             (C7666 + C7667 + C7668) * C153600) *
                C153739 +
            (C20353 * C153740 + (C8456 + C8457 + C8458) * C153600) * C153560) *
               C153477 -
           ((C20354 * C153600 + (C3097 + C3096 + C3095) * C153740) * C153560 +
            ((C7665 + C7664 + C7663) * C153600 +
             (C2733 * C147 + C2751 + C2751 + C153761 * C163 + C2731 * C146 +
              C2752 + C2752 + C2724 * C162 + C2729 * C145 + C2753 + C2753 +
              C2723 * C161) *
                 C153740) *
                C153739) *
               C1938) *
              C153397 * C1134 +
          ((((C2729 * C146 + C2754 + C2754 + C2723 * C162 + C2731 * C147 +
              C2755 + C2755 + C2724 * C163 + C2733 * C148 + C2756 + C2756 +
              C153761 * C164) *
                 C153740 +
             (C8142 + C8143 + C8144) * C153600) *
                C153739 +
            ((C3621 + C3622 + C3623) * C153740 +
             (C19668 + C19669 + C19670) * C153600) *
                C153560) *
               C1938 -
           (((C2733 * C1365 + C7894 + C7894 + C153761 * C1375 + C2731 * C1366 +
              C7895 + C7895 + C2724 * C1376 + C2729 * C1367 + C7896 + C7896 +
              C2723 * C1377) *
                 C153600 +
             (C19670 + C19669 + C19668) * C153740) *
                C153560 +
            ((C8147 + C8146 + C8145) * C153600 +
             (C8144 + C8143 + C8142) * C153740) *
                C153739) *
               C153477) *
              C153397 * C1135)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 +
              C2737 + C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
              C153761 * C162) *
                 C153740 +
             (C7654 + C7655 + C7656) * C153600) *
                C153739 +
            ((C3086 + C3087 + C3088) * C153740 + C20351 * C153600) * C153560) *
               C1938 -
           ((C9063 * C153600 + C20352 * C153740) * C153560 +
            ((C7659 + C7658 + C7657) * C153600 +
             (C7656 + C7655 + C7654) * C153740) *
                C153739) *
               C153477) *
              C310 +
          (((C20351 * C153740 + C21130 * C153600) * C153739 +
            (C22098 * C153740 + (C4873 + C4874 + C4875) * C153600) * C153560) *
               C153477 -
           ((C5621 * C153600 + (C3091 + C3090 + C3089) * C153740) * C153560 +
            (C20352 * C153600 + (C3088 + C3087 + C3086) * C153740) * C153739) *
               C1938) *
              C311 +
          (((C3106 * C153740 + C22098 * C153600) * C153739 +
            ((C3094 + C3093 + C3092) * C153740 +
             (C5629 + C5630 + C5631) * C153600) *
                C153560) *
               C1938 -
           (((C2733 * C4833 + C4855 + C4855 + C153761 * C4839 + C2731 * C4834 +
              C4856 + C4856 + C2724 * C4840 + C2729 * C4835 + C4857 + C4857 +
              C2723 * C4841) *
                 C153600 +
             (C5631 + C5630 + C5629) * C153740) *
                C153560 +
            ((C4875 + C4874 + C4873) * C153600 + C5621 * C153740) * C153739) *
               C153477) *
              C312) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153740 +
             C31295 * C153600) *
                C34883 +
            (C44303 + C44304) * C34884 + C44319 * C34885 + C44320 * C153747) *
               C1938 -
           (C46360 * C153747 + C46361 * C34885 + (C45178 + C45179) * C34884 +
            (C31296 * C153600 + C31295 * C153740) * C34883) *
               C153477) *
              C153397 * C1133 +
          (((C31300 * C153740 + C31301 * C153600) * C34883 +
            (C45180 + C45181) * C34884 + (C45182 + C45183) * C34885 +
            (C45184 + C45185) * C153747) *
               C153477 -
           (C44321 * C153747 + C44322 * C34885 + (C44312 + C44311) * C34884 +
            (C31300 * C153600 +
             (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C153740) *
                C34883) *
               C1938) *
              C153397 * C1134 +
          ((((C28234 * C146 + C28247 + C28247 + C153338 * C162) * C153740 +
             C31779 * C153600) *
                C34883 +
            (C44711 + C44712) * C34884 + (C44713 + C44714) * C34885 +
            (C44715 + C44721) * C153747) *
               C1938 -
           (((C28234 * C4833 + C31533 + C31533 + C153338 * C4839) * C153600 +
             C44720 * C153740) *
                C153747 +
            (C31545 * C153600 + C31544 * C153740) * C34885 +
            (C31543 * C153600 + C31542 * C153740) * C34884 +
            (C31780 * C153600 + C31779 * C153740) * C34883) *
               C153477) *
              C153397 * C1135)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153740 +
             C31295 * C153600) *
                C34883 +
            (C44303 + C44304) * C34884 + C44319 * C34885 + C44320 * C153747) *
               C1938 -
           (C46360 * C153747 + C46361 * C34885 + (C45178 + C45179) * C34884 +
            (C31296 * C153600 + C31295 * C153740) * C34883) *
               C153477) *
              C310 +
          (((C45179 + C45178) * C34883 + (C45177 + C45176) * C34884 +
            (C45175 + C45174) * C34885 + (C46362 + C46363) * C153747) *
               C153477 -
           (C45510 * C153747 + C45511 * C34885 + (C44306 + C44305) * C34884 +
            (C44304 + C44303) * C34883) *
               C1938) *
              C311 +
          ((C44319 * C34883 + C44320 * C34884 + (C44310 + C44309) * C34885 +
            (C45512 + C45513) * C153747) *
               C1938 -
           (((C28234 * C29424 + C29436 + C29436 + C153338 * C29426) * C153600 +
             C29867 * C153740) *
                C153747 +
            (C46363 + C46362) * C34885 + C46360 * C34884 + C46361 * C34883) *
               C153477) *
              C312) *
         C153378) /
            (p * q * std::sqrt(p + q));
    d2ee[330] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 +
             C2737 + C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
             C153761 * C162) *
                C153513 * C153812 +
            (C3086 + C3087 + C3088) * C153513 * C153800 + C3108 * C153774) *
               C153413 * C153724 -
           ((C3092 + C3093 + C3094) * C153513 * C153774 +
            (C3091 + C3090 + C3089) * C153513 * C153800 +
            (C3088 + C3087 + C3086) * C153513 * C153812) *
               C153413 * C153449) *
              C153793 +
          (((C3095 + C3096 + C3097) * C153513 * C153812 +
            (C3098 + C3099 + C3100) * C153513 * C153800 +
            (C3101 + C3102 + C3103) * C153513 * C153774) *
               C153413 * C153449 -
           (C3109 * C153774 + (C3097 + C3096 + C3095) * C153513 * C153800 +
            (C2733 * C147 + C2751 + C2751 + C153761 * C163 + C2731 * C146 +
             C2752 + C2752 + C2724 * C162 + C2729 * C145 + C2753 + C2753 +
             C2723 * C161) *
                C153513 * C153812) *
               C153413 * C153724) *
              C153794 +
          (((C2729 * C146 + C2754 + C2754 + C2723 * C162 + C2731 * C147 +
             C2755 + C2755 + C2724 * C163 + C2733 * C148 + C2756 + C2756 +
             C153761 * C164) *
                C153513 * C153812 +
            (C3621 + C3622 + C3623) * C153513 * C153800 +
            (C3624 + C3625 + C3626) * C153513 * C153774) *
               C153413 * C153724 -
           ((C2733 * C1223 + C3606 + C3606 + C153761 * C1233 + C2731 * C1224 +
             C3607 + C3607 + C2724 * C1234 + C2729 * C1225 + C3608 + C3608 +
             C2723 * C1235) *
                C153513 * C153774 +
            (C3626 + C3625 + C3624) * C153513 * C153800 +
            (C3623 + C3622 + C3621) * C153513 * C153812) *
               C153413 * C153449) *
              C678)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C144 + C169 + C169 + C121 * C160 + C136 * C145 + C170 +
            C170 + C122 * C161 + C138 * C146 + C171 + C171 + C123 * C162 +
            C140 * C147 + C172 + C172 + C124 * C163 + C142 * C148 + C173 +
            C173 + C125 * C164) *
               C153513 * C153501 * C153413 * C153724 -
           (C142 * C315 + C352 + C352 + C125 * C339 + C140 * C316 + C353 +
            C353 + C124 * C340 + C138 * C317 + C354 + C354 + C123 * C341 +
            C136 * C318 + C355 + C355 + C122 * C342 + C134 * C319 + C356 +
            C356 + C121 * C343) *
               C153513 * C153501 * C153413 * C153449) *
              C153793 +
          ((C134 * C318 + C362 + C362 + C121 * C342 + C136 * C317 + C363 +
            C363 + C122 * C341 + C138 * C316 + C364 + C364 + C123 * C340 +
            C140 * C315 + C365 + C365 + C124 * C339 + C142 * C325 + C366 +
            C366 + C125 * C349) *
               C153513 * C153501 * C153413 * C153449 -
           (C142 * C149 + C174 + C174 + C125 * C165 + C140 * C148 + C175 +
            C175 + C124 * C164 + C138 * C147 + C176 + C176 + C123 * C163 +
            C136 * C146 + C177 + C177 + C122 * C162 + C134 * C145 + C178 +
            C178 + C121 * C161) *
               C153513 * C153501 * C153413 * C153724) *
              C153794 +
          ((C134 * C146 + C179 + C179 + C121 * C162 + C136 * C147 + C180 +
            C180 + C122 * C163 + C138 * C148 + C181 + C181 + C123 * C164 +
            C140 * C149 + C182 + C182 + C124 * C165 + C142 * C150 + C183 +
            C183 + C125 * C166) *
               C153513 * C153501 * C153413 * C153724 -
           (C142 * C679 + C683 + C683 + C125 * C681 + C140 * C325 + C684 +
            C684 + C124 * C349 + C138 * C315 + C685 + C685 + C123 * C339 +
            C136 * C316 + C686 + C686 + C122 * C340 + C134 * C317 + C687 +
            C687 + C121 * C341) *
               C153513 * C153501 * C153413 * C153449) *
              C678)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 +
             C2737 + C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
             C153761 * C162) *
                C153813 +
            (C7654 + C7655 + C7656) * C153802 + C7674 * C153777) *
               C153501 * C153413 * C153724 -
           ((C4872 + C4871 + C4870) * C153777 +
            (C4213 + C4214 + C4215) * C153802 +
            (C3088 + C3087 + C3086) * C153813) *
               C153501 * C153413 * C153449) *
              C153793 +
          (((C3095 + C3096 + C3097) * C153813 +
            (C4216 + C4217 + C4218) * C153802 +
            (C2729 * C1368 + C3372 + C3372 + C2723 * C1378 + C2731 * C1367 +
             C3371 + C3371 + C2724 * C1377 + C2733 * C1366 + C3370 + C3370 +
             C153761 * C1376) *
                C153777) *
               C153501 * C153413 * C153449 -
           (C7675 * C153777 + (C7665 + C7664 + C7663) * C153802 +
            (C2733 * C147 + C2751 + C2751 + C153761 * C163 + C2731 * C146 +
             C2752 + C2752 + C2724 * C162 + C2729 * C145 + C2753 + C2753 +
             C2723 * C161) *
                C153813) *
               C153501 * C153413 * C153724) *
              C153794 +
          (((C2729 * C146 + C2754 + C2754 + C2723 * C162 + C2731 * C147 +
             C2755 + C2755 + C2724 * C163 + C2733 * C148 + C2756 + C2756 +
             C153761 * C164) *
                C153813 +
            (C2729 * C498 + C3853 + C3853 + C2723 * C522 + C2731 * C497 +
             C3852 + C3852 + C2724 * C521 + C2733 * C496 + C3851 + C3851 +
             C153761 * C520) *
                C153802 +
            (C2729 * C503 + C7116 + C7116 + C2723 * C527 + C2731 * C504 +
             C7117 + C7117 + C2724 * C528 + C2733 * C505 + C7118 + C7118 +
             C153761 * C529) *
                C153777) *
               C153501 * C153413 * C153724 -
           ((C2733 * C1365 + C7894 + C7894 + C153761 * C1375 + C2731 * C1366 +
             C7895 + C7895 + C2724 * C1376 + C2729 * C1367 + C7896 + C7896 +
             C2723 * C1377) *
                C153777 +
            (C2733 * C985 + C3848 + C3848 + C153761 * C997 + C2731 * C984 +
             C3849 + C3849 + C2724 * C996 + C2729 * C983 + C3850 + C3850 +
             C2723 * C995) *
                C153802 +
            (C3623 + C3622 + C3621) * C153813) *
               C153501 * C153413 * C153449) *
              C678)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
             C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 +
             C23999 + C153761 * C162) *
                C153513 * C23987 +
            (C24335 + C24336 + C24337) * C153513 * C23988 + C24357 * C153774) *
               C153413 * C153724 -
           ((C24341 + C24342 + C24343) * C153513 * C153774 +
            (C24340 + C24339 + C24338) * C153513 * C23988 +
            (C24337 + C24336 + C24335) * C153513 * C23987) *
               C153413 * C153449) *
              C153793 +
          (((C24344 + C24345 + C24346) * C153513 * C23987 +
            (C24347 + C24348 + C24349) * C153513 * C23988 +
            (C24350 + C24351 + C24352) * C153513 * C153774) *
               C153413 * C153449 -
           (C24358 * C153774 + (C24346 + C24345 + C24344) * C153513 * C23988 +
            (C23994 * C147 + C24012 + C24012 + C153761 * C163 + C23992 * C146 +
             C24013 + C24013 + C153790 * C162 + C23990 * C145 + C24014 +
             C24014 + C153809 * C161) *
                C153513 * C23987) *
               C153413 * C153724) *
              C153794 +
          (((C23990 * C146 + C24015 + C24015 + C153809 * C162 + C23992 * C147 +
             C24016 + C24016 + C153790 * C163 + C23994 * C148 + C24017 +
             C24017 + C153761 * C164) *
                C153513 * C23987 +
            (C24858 + C24859 + C24860) * C153513 * C23988 +
            (C24861 + C24862 + C24863) * C153513 * C153774) *
               C153413 * C153724 -
           ((C23994 * C1223 + C24843 + C24843 + C153761 * C1233 +
             C23992 * C1224 + C24844 + C24844 + C153790 * C1234 +
             C23990 * C1225 + C24845 + C24845 + C153809 * C1235) *
                C153513 * C153774 +
            (C24863 + C24862 + C24861) * C153513 * C23988 +
            (C24860 + C24859 + C24858) * C153513 * C23987) *
               C153413 * C153449) *
              C678)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153513 *
                C28229 +
            C28439 * C28230 + C28440 * C28231 + C28441 * C28232 +
            C28442 * C28233) *
               C153413 * C153724 -
           (C28443 * C28233 + C28442 * C28232 + C28441 * C28231 +
            C28440 * C28230 + C28439 * C28229) *
               C153413 * C153449) *
              C153793 +
          ((C28444 * C28229 + C28445 * C28230 + C28446 * C28231 +
            C28447 * C28232 + C28448 * C28233) *
               C153413 * C153449 -
           (C28447 * C28233 + C28446 * C28232 + C28445 * C28231 +
            C28444 * C28230 +
            (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C153513 *
                C28229) *
               C153413 * C153724) *
              C153794 +
          (((C28234 * C146 + C28247 + C28247 + C153338 * C162) * C153513 *
                C28229 +
            C28740 * C28230 + C28741 * C28231 + C28742 * C28232 +
            C28743 * C28233) *
               C153413 * C153724 -
           ((C28234 * C4585 + C28727 + C28727 + C153338 * C4591) * C153513 *
                C28233 +
            C28743 * C28232 + C28742 * C28231 + C28741 * C28230 +
            C28740 * C28229) *
               C153413 * C153449) *
              C678)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153813 +
             C31295 * C153802 + C31296 * C153777) *
                C23987 +
            (C30985 + C30986 + C30987) * C23988 + C31011 * C153774) *
               C153413 * C153724 -
           ((C30991 + C30992 + C30993) * C153774 +
            (C30990 + C30989 + C30988) * C23988 +
            (C30987 + C30986 + C30985) * C23987) *
               C153413 * C153449) *
              C153793 +
          (((C30994 + C30995 + C31018) * C23987 +
            (C30998 + C30999 + C31019) * C23988 +
            (C31002 + C31003 + C31020) * C153774) *
               C153413 * C153449 -
           (C31021 * C153774 + (C31018 + C30995 + C30994) * C23988 +
            (C31301 * C153777 + C31300 * C153802 +
             (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C153813) *
                C23987) *
               C153413 * C153724) *
              C153794 +
          ((((C28234 * C146 + C28247 + C28247 + C153338 * C162) * C153813 +
             (C28234 * C498 + C28870 + C28870 + C153338 * C522) * C153802 +
             (C28234 * C503 + C30758 + C30758 + C153338 * C527) * C153777) *
                C23987 +
            (C31523 + C31546 + C31547) * C23988 +
            (C31528 + C31548 + C31549) * C153774) *
               C153413 * C153724 -
           (((C28234 * C4833 + C31533 + C31533 + C153338 * C4839) * C153777 +
             (C28234 * C4145 + C28867 + C28867 + C153338 * C4153) * C153802 +
             C28738 * C153813) *
                C153774 +
            (C31549 + C31548 + C31528) * C23988 +
            (C31547 + C31546 + C31523) * C23987) *
               C153413 * C153449) *
              C678)) /
            (p * q * std::sqrt(p + q));
    d2ee[331] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 +
              C2737 + C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
              C153761 * C162) *
                 C153513 * C153812 +
             (C3086 + C3087 + C3088) * C153513 * C153800 + C3108 * C153774) *
                C153725 -
            ((C4210 + C4211 + C4212) * C153513 * C153774 +
             (C4213 + C4214 + C4215) * C153513 * C153800 +
             (C2733 * C498 + C3346 + C3346 + C153761 * C522 + C2731 * C499 +
              C3347 + C3347 + C2724 * C523 + C2729 * C500 + C3348 + C3348 +
              C2723 * C524) *
                 C153513 * C153812) *
                C153477) *
               C153724 +
           (((C4215 + C4214 + C4213) * C153513 * C153812 +
             (C4212 + C4211 + C4210) * C153513 * C153800 +
             (C2729 * C4143 + C4168 + C4168 + C2723 * C4151 + C2731 * C4144 +
              C4169 + C4169 + C2724 * C4152 + C2733 * C4145 + C4170 + C4170 +
              C153761 * C4153) *
                 C153513 * C153774) *
                C153477 -
            ((C3092 + C3093 + C3094) * C153513 * C153774 +
             (C3091 + C3090 + C3089) * C153513 * C153800 +
             (C3088 + C3087 + C3086) * C153513 * C153812) *
                C153725) *
               C153449) *
              C313 +
          ((((C2729 * C499 + C3358 + C3358 + C2723 * C523 + C2731 * C498 +
              C3359 + C3359 + C2724 * C522 + C2733 * C497 + C3360 + C3360 +
              C153761 * C521) *
                 C153513 * C153812 +
             (C4216 + C4217 + C4218) * C153513 * C153800 +
             (C4219 + C4220 + C4221) * C153513 * C153774) *
                C153477 -
            (C3109 * C153774 + (C3097 + C3096 + C3095) * C153513 * C153800 +
             (C2733 * C147 + C2751 + C2751 + C153761 * C163 + C2731 * C146 +
              C2752 + C2752 + C2724 * C162 + C2729 * C145 + C2753 + C2753 +
              C2723 * C161) *
                 C153513 * C153812) *
                C153725) *
               C153724 +
           (((C3095 + C3096 + C3097) * C153513 * C153812 +
             (C3098 + C3099 + C3100) * C153513 * C153800 +
             (C3101 + C3102 + C3103) * C153513 * C153774) *
                C153725 -
            ((C2733 * C4146 + C4183 + C4183 + C153761 * C4154 + C2731 * C4145 +
              C4184 + C4184 + C2724 * C4153 + C2729 * C4144 + C4185 + C4185 +
              C2723 * C4152) *
                 C153513 * C153774 +
             (C4221 + C4220 + C4219) * C153513 * C153800 +
             (C4218 + C4217 + C4216) * C153513 * C153812) *
                C153477) *
               C153449) *
              C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 + C169 + C169 + C121 * C160 + C136 * C145 + C170 +
             C170 + C122 * C161 + C138 * C146 + C171 + C171 + C123 * C162 +
             C140 * C147 + C172 + C172 + C124 * C163 + C142 * C148 + C173 +
             C173 + C125 * C164) *
                C153513 * C153501 * C153725 -
            (C142 * C496 + C533 + C533 + C125 * C520 + C140 * C497 + C534 +
             C534 + C124 * C521 + C138 * C498 + C535 + C535 + C123 * C522 +
             C136 * C499 + C536 + C536 + C122 * C523 + C134 * C500 + C537 +
             C537 + C121 * C524) *
                C153513 * C153501 * C153477) *
               C153724 +
           ((C134 * C981 + C1000 + C1000 + C121 * C993 + C136 * C982 + C1001 +
             C1001 + C122 * C994 + C138 * C983 + C1002 + C1002 + C123 * C995 +
             C140 * C984 + C1003 + C1003 + C124 * C996 + C142 * C985 + C1004 +
             C1004 + C125 * C997) *
                C153513 * C153501 * C153477 -
            (C142 * C315 + C352 + C352 + C125 * C339 + C140 * C316 + C353 +
             C353 + C124 * C340 + C138 * C317 + C354 + C354 + C123 * C341 +
             C136 * C318 + C355 + C355 + C122 * C342 + C134 * C319 + C356 +
             C356 + C121 * C343) *
                C153513 * C153501 * C153725) *
               C153449) *
              C313 +
          (((C134 * C499 + C543 + C543 + C121 * C523 + C136 * C498 + C544 +
             C544 + C122 * C522 + C138 * C497 + C545 + C545 + C123 * C521 +
             C140 * C496 + C546 + C546 + C124 * C520 + C142 * C506 + C547 +
             C547 + C125 * C530) *
                C153513 * C153501 * C153477 -
            (C142 * C149 + C174 + C174 + C125 * C165 + C140 * C148 + C175 +
             C175 + C124 * C164 + C138 * C147 + C176 + C176 + C123 * C163 +
             C136 * C146 + C177 + C177 + C122 * C162 + C134 * C145 + C178 +
             C178 + C121 * C161) *
                C153513 * C153501 * C153725) *
               C153724 +
           ((C134 * C318 + C362 + C362 + C121 * C342 + C136 * C317 + C363 +
             C363 + C122 * C341 + C138 * C316 + C364 + C364 + C123 * C340 +
             C140 * C315 + C365 + C365 + C124 * C339 + C142 * C325 + C366 +
             C366 + C125 * C349) *
                C153513 * C153501 * C153725 -
            (C142 * C986 + C1005 + C1005 + C125 * C998 + C140 * C985 + C1006 +
             C1006 + C124 * C997 + C138 * C984 + C1007 + C1007 + C123 * C996 +
             C136 * C983 + C1008 + C1008 + C122 * C995 + C134 * C982 + C1009 +
             C1009 + C121 * C994) *
                C153513 * C153501 * C153477) *
               C153449) *
              C153384)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 +
              C2737 + C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
              C153761 * C162) *
                 C153813 +
             (C7654 + C7655 + C7656) * C153802 + C7674 * C153777) *
                C153501 * C153725 -
            ((C7660 + C7661 + C7662) * C153777 +
             (C7659 + C7658 + C7657) * C153802 +
             (C7656 + C7655 + C7654) * C153813) *
                C153501 * C153477) *
               C153724 +
           (((C4215 + C4214 + C4213) * C153813 +
             (C4870 + C4871 + C4872) * C153802 +
             (C2729 * C6218 + C6237 + C6237 + C2723 * C6230 + C2731 * C6217 +
              C6236 + C6236 + C2724 * C6229 + C2733 * C6216 + C6235 + C6235 +
              C153761 * C6228) *
                 C153777) *
                C153501 * C153477 -
            ((C4872 + C4871 + C4870) * C153777 +
             (C4213 + C4214 + C4215) * C153802 +
             (C3088 + C3087 + C3086) * C153813) *
                C153501 * C153725) *
               C153449) *
              C313 +
          ((((C7663 + C7664 + C7665) * C153813 +
             (C7666 + C7667 + C7668) * C153802 +
             (C7669 + C7670 + C7671) * C153777) *
                C153501 * C153477 -
            (C7675 * C153777 + (C7665 + C7664 + C7663) * C153802 +
             (C2733 * C147 + C2751 + C2751 + C153761 * C163 + C2731 * C146 +
              C2752 + C2752 + C2724 * C162 + C2729 * C145 + C2753 + C2753 +
              C2723 * C161) *
                 C153813) *
                C153501 * C153725) *
               C153724 +
           (((C3095 + C3096 + C3097) * C153813 +
             (C4216 + C4217 + C4218) * C153802 +
             (C8456 + C8457 + C8458) * C153777) *
                C153501 * C153725 -
            ((C2733 * C8437 + C8447 + C8447 + C153761 * C8439 + C2731 * C6216 +
              C8448 + C8448 + C2724 * C6228 + C2729 * C6217 + C8449 + C8449 +
              C2723 * C6229) *
                 C153777 +
             (C8458 + C8457 + C8456) * C153802 +
             (C4218 + C4217 + C4216) * C153813) *
                C153501 * C153477) *
               C153449) *
              C153384)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
              C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 +
              C23999 + C153761 * C162) *
                 C153513 * C23987 +
             (C24335 + C24336 + C24337) * C153513 * C23988 + C24357 * C153774) *
                C153725 -
            ((C25435 + C25436 + C25437) * C153513 * C153774 +
             (C25438 + C25439 + C25440) * C153513 * C23988 +
             (C23994 * C498 + C24583 + C24583 + C153761 * C522 + C23992 * C499 +
              C24584 + C24584 + C153790 * C523 + C23990 * C500 + C24585 +
              C24585 + C153809 * C524) *
                 C153513 * C23987) *
                C153477) *
               C153724 +
           (((C25440 + C25439 + C25438) * C153513 * C23987 +
             (C25437 + C25436 + C25435) * C153513 * C23988 +
             (C23990 * C4143 + C25393 + C25393 + C153809 * C4151 +
              C23992 * C4144 + C25394 + C25394 + C153790 * C4152 +
              C23994 * C4145 + C25395 + C25395 + C153761 * C4153) *
                 C153513 * C153774) *
                C153477 -
            ((C24341 + C24342 + C24343) * C153513 * C153774 +
             (C24340 + C24339 + C24338) * C153513 * C23988 +
             (C24337 + C24336 + C24335) * C153513 * C23987) *
                C153725) *
               C153449) *
              C313 +
          ((((C23990 * C499 + C24595 + C24595 + C153809 * C523 + C23992 * C498 +
              C24596 + C24596 + C153790 * C522 + C23994 * C497 + C24597 +
              C24597 + C153761 * C521) *
                 C153513 * C23987 +
             (C25441 + C25442 + C25443) * C153513 * C23988 +
             (C25444 + C25445 + C25446) * C153513 * C153774) *
                C153477 -
            (C24358 * C153774 + (C24346 + C24345 + C24344) * C153513 * C23988 +
             (C23994 * C147 + C24012 + C24012 + C153761 * C163 + C23992 * C146 +
              C24013 + C24013 + C153790 * C162 + C23990 * C145 + C24014 +
              C24014 + C153809 * C161) *
                 C153513 * C23987) *
                C153725) *
               C153724 +
           (((C24344 + C24345 + C24346) * C153513 * C23987 +
             (C24347 + C24348 + C24349) * C153513 * C23988 +
             (C24350 + C24351 + C24352) * C153513 * C153774) *
                C153725 -
            ((C23994 * C4146 + C25408 + C25408 + C153761 * C4154 +
              C23992 * C4145 + C25409 + C25409 + C153790 * C4153 +
              C23990 * C4144 + C25410 + C25410 + C153809 * C4152) *
                 C153513 * C153774 +
             (C25446 + C25445 + C25444) * C153513 * C23988 +
             (C25443 + C25442 + C25441) * C153513 * C23987) *
                C153477) *
               C153449) *
              C153384)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153513 *
                 C28229 +
             C28439 * C28230 + C28440 * C28231 + C28441 * C28232 +
             C28442 * C28233) *
                C153725 -
            (C29081 * C28233 + C29082 * C28232 + C29083 * C28231 +
             C29084 * C28230 +
             (C28234 * C500 + C28581 + C28581 + C153338 * C524) * C153513 *
                 C28229) *
                C153477) *
               C153724 +
           ((C29084 * C28229 + C29083 * C28230 + C29082 * C28231 +
             C29081 * C28232 +
             (C28234 * C29032 + C29047 + C29047 + C153338 * C29036) * C153513 *
                 C28233) *
                C153477 -
            (C28443 * C28233 + C28442 * C28232 + C28441 * C28231 +
             C28440 * C28230 + C28439 * C28229) *
                C153725) *
               C153449) *
              C313 +
          ((((C28234 * C499 + C28587 + C28587 + C153338 * C523) * C153513 *
                 C28229 +
             C29085 * C28230 + C29086 * C28231 + C29087 * C28232 +
             C29088 * C28233) *
                C153477 -
            (C28447 * C28233 + C28446 * C28232 + C28445 * C28231 +
             C28444 * C28230 +
             (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C153513 *
                 C28229) *
                C153725) *
               C153724 +
           ((C28444 * C28229 + C28445 * C28230 + C28446 * C28231 +
             C28447 * C28232 + C28448 * C28233) *
                C153725 -
            ((C28234 * C29033 + C29056 + C29056 + C153338 * C29037) * C153513 *
                 C28233 +
             C29088 * C28232 + C29087 * C28231 + C29086 * C28230 +
             C29085 * C28229) *
                C153477) *
               C153449) *
              C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153813 +
              C31295 * C153802 + C31296 * C153777) *
                 C23987 +
             (C30985 + C30986 + C30987) * C23988 + C31011 * C153774) *
                C153725 -
            ((C32074 + C32075 + C32076) * C153774 +
             (C32077 + C32078 + C32079) * C23988 +
             (C31299 * C153777 + C31296 * C153802 + C31295 * C153813) *
                 C23987) *
                C153477) *
               C153724 +
           (((C32079 + C32078 + C32077) * C23987 +
             (C32076 + C32075 + C32074) * C23988 +
             (C29074 * C153813 + C29447 * C153802 +
              (C28234 * C30195 + C30202 + C30202 + C153338 * C30199) *
                  C153777) *
                 C153774) *
                C153477 -
            ((C30991 + C30992 + C30993) * C153774 +
             (C30990 + C30989 + C30988) * C23988 +
             (C30987 + C30986 + C30985) * C23987) *
                C153725) *
               C153449) *
              C313 +
          ((((C31300 * C153813 + C31301 * C153802 + C31302 * C153777) * C23987 +
             (C32080 + C32081 + C32082) * C23988 +
             (C32083 + C32084 + C32085) * C153774) *
                C153477 -
            (C31021 * C153774 + (C31018 + C30995 + C30994) * C23988 +
             (C31301 * C153777 + C31300 * C153802 +
              (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C153813) *
                 C23987) *
                C153725) *
               C153724 +
           (((C30994 + C30995 + C31018) * C23987 +
             (C30998 + C30999 + C31019) * C23988 +
             (C31002 + C31003 + C31020) * C153774) *
                C153725 -
            (((C28234 * C32070 + C32086 + C32086 + C153338 * C32072) * C153777 +
              C31017 * C153802 + C29079 * C153813) *
                 C153774 +
             (C32085 + C32084 + C32083) * C23988 +
             (C32082 + C32081 + C32080) * C23987) *
                C153477) *
               C153449) *
              C153384)) /
            (p * q * std::sqrt(p + q));
    d2ee[332] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             ((C134 * C144 + C169 + C169 + C121 * C160 + C136 * C145 + C170 +
               C170 + C122 * C161 + C138 * C146 + C171 + C171 + C123 * C162 +
               C140 * C147 + C172 + C172 + C124 * C163 + C142 * C148 + C173 +
               C173 + C125 * C164) *
                  C153513 * C153501 * C153413 * C153397 * C130 -
              (C142 * C149 + C174 + C174 + C125 * C165 + C140 * C148 + C175 +
               C175 + C124 * C164 + C138 * C147 + C176 + C176 + C123 * C163 +
               C136 * C146 + C177 + C177 + C122 * C162 + C134 * C145 + C178 +
               C178 + C121 * C161) *
                  C153513 * C153501 * C153413 * C153397 * C131 +
              (C134 * C146 + C179 + C179 + C121 * C162 + C136 * C147 + C180 +
               C180 + C122 * C163 + C138 * C148 + C181 + C181 + C123 * C164 +
               C140 * C149 + C182 + C182 + C124 * C165 + C142 * C150 + C183 +
               C183 + C125 * C166) *
                  C153513 * C153501 * C153413 * C153397 * C132 -
              (C142 * C151 + C184 + C184 + C125 * C167 + C140 * C150 + C185 +
               C185 + C124 * C166 + C138 * C149 + C186 + C186 + C123 * C165 +
               C136 * C148 + C187 + C187 + C122 * C164 + C134 * C147 + C188 +
               C188 + C121 * C163) *
                  C153513 * C153501 * C153413 * C153397 * C133) +
         std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             (((C134 * C144 + C169 + C169 + C121 * C160 + C136 * C145 + C170 +
                C170 + C122 * C161 + C138 * C146 + C171 + C171 + C123 * C162 +
                C140 * C147 + C172 + C172 + C124 * C163 + C142 * C148 + C173 +
                C173 + C125 * C164) *
                   C153513 * C153501 * C153413 * C310 -
               (C142 * C315 + C352 + C352 + C125 * C339 + C140 * C316 + C353 +
                C353 + C124 * C340 + C138 * C317 + C354 + C354 + C123 * C341 +
                C136 * C318 + C355 + C355 + C122 * C342 + C134 * C319 + C356 +
                C356 + C121 * C343) *
                   C153513 * C153501 * C153413 * C311 +
               (C134 * C320 + C357 + C357 + C121 * C344 + C136 * C321 + C358 +
                C358 + C122 * C345 + C138 * C322 + C359 + C359 + C123 * C346 +
                C140 * C323 + C360 + C360 + C124 * C347 + C142 * C324 + C361 +
                C361 + C125 * C348) *
                   C153513 * C153501 * C153413 * C312) *
                  C313 +
              ((C134 * C318 + C362 + C362 + C121 * C342 + C136 * C317 + C363 +
                C363 + C122 * C341 + C138 * C316 + C364 + C364 + C123 * C340 +
                C140 * C315 + C365 + C365 + C124 * C339 + C142 * C325 + C366 +
                C366 + C125 * C349) *
                   C153513 * C153501 * C153413 * C311 -
               (C142 * C149 + C174 + C174 + C125 * C165 + C140 * C148 + C175 +
                C175 + C124 * C164 + C138 * C147 + C176 + C176 + C123 * C163 +
                C136 * C146 + C177 + C177 + C122 * C162 + C134 * C145 + C178 +
                C178 + C121 * C161) *
                   C153513 * C153501 * C153413 * C310 -
               (C142 * C326 + C367 + C367 + C125 * C350 + C140 * C324 + C368 +
                C368 + C124 * C348 + C138 * C323 + C369 + C369 + C123 * C347 +
                C136 * C322 + C370 + C370 + C122 * C346 + C134 * C321 + C371 +
                C371 + C121 * C345) *
                   C153513 * C153501 * C153413 * C312) *
                  C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C144 + C169 + C169 + C121 * C160 + C136 * C145 + C170 +
            C170 + C122 * C161 + C138 * C146 + C171 + C171 + C123 * C162 +
            C140 * C147 + C172 + C172 + C124 * C163 + C142 * C148 + C173 +
            C173 + C125 * C164) *
               C153513 * C153501 * C493 -
           (C142 * C496 + C533 + C533 + C125 * C520 + C140 * C497 + C534 +
            C534 + C124 * C521 + C138 * C498 + C535 + C535 + C123 * C522 +
            C136 * C499 + C536 + C536 + C122 * C523 + C134 * C500 + C537 +
            C537 + C121 * C524) *
               C153513 * C153501 * C494 +
           (C134 * C501 + C538 + C538 + C121 * C525 + C136 * C502 + C539 +
            C539 + C122 * C526 + C138 * C503 + C540 + C540 + C123 * C527 +
            C140 * C504 + C541 + C541 + C124 * C528 + C142 * C505 + C542 +
            C542 + C125 * C529) *
               C153513 * C153501 * C495) *
              C153397 * C313 +
          ((C134 * C499 + C543 + C543 + C121 * C523 + C136 * C498 + C544 +
            C544 + C122 * C522 + C138 * C497 + C545 + C545 + C123 * C521 +
            C140 * C496 + C546 + C546 + C124 * C520 + C142 * C506 + C547 +
            C547 + C125 * C530) *
               C153513 * C153501 * C494 -
           (C142 * C149 + C174 + C174 + C125 * C165 + C140 * C148 + C175 +
            C175 + C124 * C164 + C138 * C147 + C176 + C176 + C123 * C163 +
            C136 * C146 + C177 + C177 + C122 * C162 + C134 * C145 + C178 +
            C178 + C121 * C161) *
               C153513 * C153501 * C493 -
           (C142 * C507 + C548 + C548 + C125 * C531 + C140 * C505 + C549 +
            C549 + C124 * C529 + C138 * C504 + C550 + C550 + C123 * C528 +
            C136 * C503 + C551 + C551 + C122 * C527 + C134 * C502 + C552 +
            C552 + C121 * C526) *
               C153513 * C153501 * C495) *
              C153397 * C153384)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 + C2737 +
            C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
            C153761 * C162) *
               C153513 * C153812 +
           (C2729 * C319 + C2739 + C2739 + C2723 * C343 + C2731 * C318 + C2740 +
            C2740 + C2724 * C342 + C2733 * C317 + C2741 + C2741 +
            C153761 * C341) *
               C153513 * C153800 +
           (C2729 * C320 + C2742 + C2742 + C2723 * C344 + C2731 * C321 + C2743 +
            C2743 + C2724 * C345 + C2733 * C322 + C2744 + C2744 +
            C153761 * C346) *
               C153513 * C153774) *
              C153413 * C153397 * C130 -
          ((C2733 * C323 + C2745 + C2745 + C153761 * C347 + C2731 * C322 +
            C2746 + C2746 + C2724 * C346 + C2729 * C321 + C2747 + C2747 +
            C2723 * C345) *
               C153513 * C153774 +
           (C2733 * C316 + C2748 + C2748 + C153761 * C340 + C2731 * C317 +
            C2749 + C2749 + C2724 * C341 + C2729 * C318 + C2750 + C2750 +
            C2723 * C342) *
               C153513 * C153800 +
           (C2733 * C147 + C2751 + C2751 + C153761 * C163 + C2731 * C146 +
            C2752 + C2752 + C2724 * C162 + C2729 * C145 + C2753 + C2753 +
            C2723 * C161) *
               C153513 * C153812) *
              C153413 * C153397 * C131 +
          ((C2729 * C146 + C2754 + C2754 + C2723 * C162 + C2731 * C147 + C2755 +
            C2755 + C2724 * C163 + C2733 * C148 + C2756 + C2756 +
            C153761 * C164) *
               C153513 * C153812 +
           (C2729 * C317 + C2757 + C2757 + C2723 * C341 + C2731 * C316 + C2758 +
            C2758 + C2724 * C340 + C2733 * C315 + C2759 + C2759 +
            C153761 * C339) *
               C153513 * C153800 +
           (C2729 * C322 + C2760 + C2760 + C2723 * C346 + C2731 * C323 + C2761 +
            C2761 + C2724 * C347 + C2733 * C324 + C2762 + C2762 +
            C153761 * C348) *
               C153513 * C153774) *
              C153413 * C153397 * C132 -
          ((C2733 * C326 + C2763 + C2763 + C153761 * C350 + C2731 * C324 +
            C2764 + C2764 + C2724 * C348 + C2729 * C323 + C2765 + C2765 +
            C2723 * C347) *
               C153513 * C153774 +
           (C2733 * C325 + C2766 + C2766 + C153761 * C349 + C2731 * C315 +
            C2767 + C2767 + C2724 * C339 + C2729 * C316 + C2768 + C2768 +
            C2723 * C340) *
               C153513 * C153800 +
           (C2733 * C149 + C2769 + C2769 + C153761 * C165 + C2731 * C148 +
            C2770 + C2770 + C2724 * C164 + C2729 * C147 + C2771 + C2771 +
            C2723 * C163) *
               C153513 * C153812) *
              C153413 * C153397 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 +
             C2737 + C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
             C153761 * C162) *
                C153513 * C153812 +
            (C3086 + C3087 + C3088) * C153513 * C153800 + C3108 * C153774) *
               C153413 * C310 -
           ((C3092 + C3093 + C3094) * C153513 * C153774 +
            (C3091 + C3090 + C3089) * C153513 * C153800 +
            (C3088 + C3087 + C3086) * C153513 * C153812) *
               C153413 * C311 +
           (C3108 * C153812 + (C3094 + C3093 + C3092) * C153513 * C153800 +
            (C2729 * C2989 + C3023 + C3023 + C2723 * C2997 + C2731 * C2990 +
             C3024 + C3024 + C2724 * C2998 + C2733 * C2991 + C3025 + C3025 +
             C153761 * C2999) *
                C153513 * C153774) *
               C153413 * C312) *
              C313 +
          (((C3095 + C3096 + C3097) * C153513 * C153812 +
            (C3098 + C3099 + C3100) * C153513 * C153800 +
            (C3101 + C3102 + C3103) * C153513 * C153774) *
               C153413 * C311 -
           (C3109 * C153774 + (C3097 + C3096 + C3095) * C153513 * C153800 +
            (C2733 * C147 + C2751 + C2751 + C153761 * C163 + C2731 * C146 +
             C2752 + C2752 + C2724 * C162 + C2729 * C145 + C2753 + C2753 +
             C2723 * C161) *
                C153513 * C153812) *
               C153413 * C310 -
           ((C2733 * C2992 + C3047 + C3047 + C153761 * C3000 + C2731 * C2991 +
             C3048 + C3048 + C2724 * C2999 + C2729 * C2990 + C3049 + C3049 +
             C2723 * C2998) *
                C153513 * C153774 +
            (C3103 + C3102 + C3101) * C153513 * C153800 + C3109 * C153812) *
               C153413 * C312) *
              C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 +
             C2737 + C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
             C153761 * C162) *
                C153513 * C153812 +
            (C3086 + C3087 + C3088) * C153513 * C153800 + C3108 * C153774) *
               C493 -
           ((C2733 * C1798 + C3340 + C3340 + C153761 * C1808 + C2731 * C1799 +
             C3341 + C3341 + C2724 * C1809 + C2729 * C1800 + C3342 + C3342 +
             C2723 * C1810) *
                C153513 * C153774 +
            (C2733 * C983 + C3343 + C3343 + C153761 * C995 + C2731 * C982 +
             C3344 + C3344 + C2724 * C994 + C2729 * C981 + C3345 + C3345 +
             C2723 * C993) *
                C153513 * C153800 +
            (C2733 * C498 + C3346 + C3346 + C153761 * C522 + C2731 * C499 +
             C3347 + C3347 + C2724 * C523 + C2729 * C500 + C3348 + C3348 +
             C2723 * C524) *
                C153513 * C153812) *
               C494 +
           ((C2729 * C501 + C3349 + C3349 + C2723 * C525 + C2731 * C502 +
             C3350 + C3350 + C2724 * C526 + C2733 * C503 + C3351 + C3351 +
             C153761 * C527) *
                C153513 * C153812 +
            (C2729 * C1369 + C3352 + C3352 + C2723 * C1379 + C2731 * C1368 +
             C3353 + C3353 + C2724 * C1378 + C2733 * C1367 + C3354 + C3354 +
             C153761 * C1377) *
                C153513 * C153800 +
            (C2729 * C3327 + C3355 + C3355 + C2723 * C3335 + C2731 * C3328 +
             C3356 + C3356 + C2724 * C3336 + C2733 * C3329 + C3357 + C3357 +
             C153761 * C3337) *
                C153513 * C153774) *
               C495) *
              C153397 * C313 +
          (((C2729 * C499 + C3358 + C3358 + C2723 * C523 + C2731 * C498 +
             C3359 + C3359 + C2724 * C522 + C2733 * C497 + C3360 + C3360 +
             C153761 * C521) *
                C153513 * C153812 +
            (C2729 * C982 + C3361 + C3361 + C2723 * C994 + C2731 * C983 +
             C3362 + C3362 + C2724 * C995 + C2733 * C984 + C3363 + C3363 +
             C153761 * C996) *
                C153513 * C153800 +
            (C2729 * C1799 + C3364 + C3364 + C2723 * C1809 + C2731 * C1798 +
             C3365 + C3365 + C2724 * C1808 + C2733 * C1797 + C3366 + C3366 +
             C153761 * C1807) *
                C153513 * C153774) *
               C494 -
           (C3109 * C153774 + (C3097 + C3096 + C3095) * C153513 * C153800 +
            (C2733 * C147 + C2751 + C2751 + C153761 * C163 + C2731 * C146 +
             C2752 + C2752 + C2724 * C162 + C2729 * C145 + C2753 + C2753 +
             C2723 * C161) *
                C153513 * C153812) *
               C493 -
           ((C2733 * C3330 + C3367 + C3367 + C153761 * C3338 + C2731 * C3329 +
             C3368 + C3368 + C2724 * C3337 + C2729 * C3328 + C3369 + C3369 +
             C2723 * C3336) *
                C153513 * C153774 +
            (C2733 * C1366 + C3370 + C3370 + C153761 * C1376 + C2731 * C1367 +
             C3371 + C3371 + C2724 * C1377 + C2729 * C1368 + C3372 + C3372 +
             C2723 * C1378) *
                C153513 * C153800 +
            (C2733 * C504 + C3373 + C3373 + C153761 * C528 + C2731 * C503 +
             C3374 + C3374 + C2724 * C527 + C2729 * C502 + C3375 + C3375 +
             C2723 * C526) *
                C153513 * C153812) *
               C495) *
              C153397 * C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 + C2737 +
            C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
            C153761 * C162) *
               C153813 +
           (C2729 * C500 + C3348 + C3348 + C2723 * C524 + C2731 * C499 + C3347 +
            C3347 + C2724 * C523 + C2733 * C498 + C3346 + C3346 +
            C153761 * C522) *
               C153802 +
           (C2729 * C501 + C3349 + C3349 + C2723 * C525 + C2731 * C502 + C3350 +
            C3350 + C2724 * C526 + C2733 * C503 + C3351 + C3351 +
            C153761 * C527) *
               C153777) *
              C153501 * C153413 * C153397 * C130 -
          ((C2733 * C504 + C3373 + C3373 + C153761 * C528 + C2731 * C503 +
            C3374 + C3374 + C2724 * C527 + C2729 * C502 + C3375 + C3375 +
            C2723 * C526) *
               C153777 +
           (C2733 * C497 + C3360 + C3360 + C153761 * C521 + C2731 * C498 +
            C3359 + C3359 + C2724 * C522 + C2729 * C499 + C3358 + C3358 +
            C2723 * C523) *
               C153802 +
           (C2733 * C147 + C2751 + C2751 + C153761 * C163 + C2731 * C146 +
            C2752 + C2752 + C2724 * C162 + C2729 * C145 + C2753 + C2753 +
            C2723 * C161) *
               C153813) *
              C153501 * C153413 * C153397 * C131 +
          ((C2729 * C146 + C2754 + C2754 + C2723 * C162 + C2731 * C147 + C2755 +
            C2755 + C2724 * C163 + C2733 * C148 + C2756 + C2756 +
            C153761 * C164) *
               C153813 +
           (C2729 * C498 + C3853 + C3853 + C2723 * C522 + C2731 * C497 + C3852 +
            C3852 + C2724 * C521 + C2733 * C496 + C3851 + C3851 +
            C153761 * C520) *
               C153802 +
           (C2729 * C503 + C7116 + C7116 + C2723 * C527 + C2731 * C504 + C7117 +
            C7117 + C2724 * C528 + C2733 * C505 + C7118 + C7118 +
            C153761 * C529) *
               C153777) *
              C153501 * C153413 * C153397 * C132 -
          ((C2733 * C507 + C7119 + C7119 + C153761 * C531 + C2731 * C505 +
            C7120 + C7120 + C2724 * C529 + C2729 * C504 + C7121 + C7121 +
            C2723 * C528) *
               C153777 +
           (C2733 * C506 + C7122 + C7122 + C153761 * C530 + C2731 * C496 +
            C7123 + C7123 + C2724 * C520 + C2729 * C497 + C7124 + C7124 +
            C2723 * C521) *
               C153802 +
           (C2733 * C149 + C2769 + C2769 + C153761 * C165 + C2731 * C148 +
            C2770 + C2770 + C2724 * C164 + C2729 * C147 + C2771 + C2771 +
            C2723 * C163) *
               C153813) *
              C153501 * C153413 * C153397 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 +
             C2737 + C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
             C153761 * C162) *
                C153813 +
            (C2729 * C500 + C3348 + C3348 + C2723 * C524 + C2731 * C499 +
             C3347 + C3347 + C2724 * C523 + C2733 * C498 + C3346 + C3346 +
             C153761 * C522) *
                C153802 +
            (C2729 * C501 + C3349 + C3349 + C2723 * C525 + C2731 * C502 +
             C3350 + C3350 + C2724 * C526 + C2733 * C503 + C3351 + C3351 +
             C153761 * C527) *
                C153777) *
               C153501 * C153413 * C310 -
           ((C4872 + C4871 + C4870) * C153777 +
            (C4213 + C4214 + C4215) * C153802 +
            (C3088 + C3087 + C3086) * C153813) *
               C153501 * C153413 * C311 +
           (C3106 * C153813 + (C4212 + C4211 + C4210) * C153802 +
            (C4873 + C4874 + C4875) * C153777) *
               C153501 * C153413 * C312) *
              C313 +
          (((C3095 + C3096 + C3097) * C153813 +
            (C4216 + C4217 + C4218) * C153802 +
            (C2729 * C1368 + C3372 + C3372 + C2723 * C1378 + C2731 * C1367 +
             C3371 + C3371 + C2724 * C1377 + C2733 * C1366 + C3370 + C3370 +
             C153761 * C1376) *
                C153777) *
               C153501 * C153413 * C311 -
           ((C2733 * C504 + C3373 + C3373 + C153761 * C528 + C2731 * C503 +
             C3374 + C3374 + C2724 * C527 + C2729 * C502 + C3375 + C3375 +
             C2723 * C526) *
                C153777 +
            (C2733 * C497 + C3360 + C3360 + C153761 * C521 + C2731 * C498 +
             C3359 + C3359 + C2724 * C522 + C2729 * C499 + C3358 + C3358 +
             C2723 * C523) *
                C153802 +
            (C2733 * C147 + C2751 + C2751 + C153761 * C163 + C2731 * C146 +
             C2752 + C2752 + C2724 * C162 + C2729 * C145 + C2753 + C2753 +
             C2723 * C161) *
                C153813) *
               C153501 * C153413 * C310 -
           ((C2733 * C3330 + C3367 + C3367 + C153761 * C3338 + C2731 * C3329 +
             C3368 + C3368 + C2724 * C3337 + C2729 * C3328 + C3369 + C3369 +
             C2723 * C3336) *
                C153777 +
            (C4221 + C4220 + C4219) * C153802 + C3107 * C153813) *
               C153501 * C153413 * C312) *
              C153384)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 +
             C2737 + C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
             C153761 * C162) *
                C153813 +
            (C7654 + C7655 + C7656) * C153802 + C7674 * C153777) *
               C153501 * C493 -
           ((C7660 + C7661 + C7662) * C153777 +
            (C7659 + C7658 + C7657) * C153802 +
            (C7656 + C7655 + C7654) * C153813) *
               C153501 * C494 +
           (C7674 * C153813 + (C7662 + C7661 + C7660) * C153802 +
            (C2729 * C7560 + C7591 + C7591 + C2723 * C7568 + C2731 * C7561 +
             C7592 + C7592 + C2724 * C7569 + C2733 * C7562 + C7593 + C7593 +
             C153761 * C7570) *
                C153777) *
               C153501 * C495) *
              C153397 * C313 +
          (((C7663 + C7664 + C7665) * C153813 +
            (C7666 + C7667 + C7668) * C153802 +
            (C7669 + C7670 + C7671) * C153777) *
               C153501 * C494 -
           (C7675 * C153777 + (C7665 + C7664 + C7663) * C153802 +
            (C2733 * C147 + C2751 + C2751 + C153761 * C163 + C2731 * C146 +
             C2752 + C2752 + C2724 * C162 + C2729 * C145 + C2753 + C2753 +
             C2723 * C161) *
                C153813) *
               C153501 * C493 -
           ((C2733 * C7563 + C7615 + C7615 + C153761 * C7571 + C2731 * C7562 +
             C7616 + C7616 + C2724 * C7570 + C2729 * C7561 + C7617 + C7617 +
             C2723 * C7569) *
                C153777 +
            (C7671 + C7670 + C7669) * C153802 + C7675 * C153813) *
               C153501 * C495) *
              C153397 * C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
            C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 + C23999 +
            C153761 * C162) *
               C153513 * C23987 +
           (C23990 * C319 + C24000 + C24000 + C153809 * C343 + C23992 * C318 +
            C24001 + C24001 + C153790 * C342 + C23994 * C317 + C24002 + C24002 +
            C153761 * C341) *
               C153513 * C23988 +
           (C23990 * C320 + C24003 + C24003 + C153809 * C344 + C23992 * C321 +
            C24004 + C24004 + C153790 * C345 + C23994 * C322 + C24005 + C24005 +
            C153761 * C346) *
               C153513 * C153774) *
              C153413 * C153397 * C130 -
          ((C23994 * C323 + C24006 + C24006 + C153761 * C347 + C23992 * C322 +
            C24007 + C24007 + C153790 * C346 + C23990 * C321 + C24008 + C24008 +
            C153809 * C345) *
               C153513 * C153774 +
           (C23994 * C316 + C24009 + C24009 + C153761 * C340 + C23992 * C317 +
            C24010 + C24010 + C153790 * C341 + C23990 * C318 + C24011 + C24011 +
            C153809 * C342) *
               C153513 * C23988 +
           (C23994 * C147 + C24012 + C24012 + C153761 * C163 + C23992 * C146 +
            C24013 + C24013 + C153790 * C162 + C23990 * C145 + C24014 + C24014 +
            C153809 * C161) *
               C153513 * C23987) *
              C153413 * C153397 * C131 +
          ((C23990 * C146 + C24015 + C24015 + C153809 * C162 + C23992 * C147 +
            C24016 + C24016 + C153790 * C163 + C23994 * C148 + C24017 + C24017 +
            C153761 * C164) *
               C153513 * C23987 +
           (C23990 * C317 + C24018 + C24018 + C153809 * C341 + C23992 * C316 +
            C24019 + C24019 + C153790 * C340 + C23994 * C315 + C24020 + C24020 +
            C153761 * C339) *
               C153513 * C23988 +
           (C23990 * C322 + C24021 + C24021 + C153809 * C346 + C23992 * C323 +
            C24022 + C24022 + C153790 * C347 + C23994 * C324 + C24023 + C24023 +
            C153761 * C348) *
               C153513 * C153774) *
              C153413 * C153397 * C132 -
          ((C23994 * C326 + C24024 + C24024 + C153761 * C350 + C23992 * C324 +
            C24025 + C24025 + C153790 * C348 + C23990 * C323 + C24026 + C24026 +
            C153809 * C347) *
               C153513 * C153774 +
           (C23994 * C325 + C24027 + C24027 + C153761 * C349 + C23992 * C315 +
            C24028 + C24028 + C153790 * C339 + C23990 * C316 + C24029 + C24029 +
            C153809 * C340) *
               C153513 * C23988 +
           (C23994 * C149 + C24030 + C24030 + C153761 * C165 + C23992 * C148 +
            C24031 + C24031 + C153790 * C164 + C23990 * C147 + C24032 + C24032 +
            C153809 * C163) *
               C153513 * C23987) *
              C153413 * C153397 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
             C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 +
             C23999 + C153761 * C162) *
                C153513 * C23987 +
            (C24335 + C24336 + C24337) * C153513 * C23988 + C24357 * C153774) *
               C153413 * C310 -
           ((C24341 + C24342 + C24343) * C153513 * C153774 +
            (C24340 + C24339 + C24338) * C153513 * C23988 +
            (C24337 + C24336 + C24335) * C153513 * C23987) *
               C153413 * C311 +
           (C24357 * C23987 + (C24343 + C24342 + C24341) * C153513 * C23988 +
            (C23990 * C2989 + C24272 + C24272 + C153809 * C2997 +
             C23992 * C2990 + C24273 + C24273 + C153790 * C2998 +
             C23994 * C2991 + C24274 + C24274 + C153761 * C2999) *
                C153513 * C153774) *
               C153413 * C312) *
              C313 +
          (((C24344 + C24345 + C24346) * C153513 * C23987 +
            (C24347 + C24348 + C24349) * C153513 * C23988 +
            (C24350 + C24351 + C24352) * C153513 * C153774) *
               C153413 * C311 -
           (C24358 * C153774 + (C24346 + C24345 + C24344) * C153513 * C23988 +
            (C23994 * C147 + C24012 + C24012 + C153761 * C163 + C23992 * C146 +
             C24013 + C24013 + C153790 * C162 + C23990 * C145 + C24014 +
             C24014 + C153809 * C161) *
                C153513 * C23987) *
               C153413 * C310 -
           ((C23994 * C2992 + C24296 + C24296 + C153761 * C3000 +
             C23992 * C2991 + C24297 + C24297 + C153790 * C2999 +
             C23990 * C2990 + C24298 + C24298 + C153809 * C2998) *
                C153513 * C153774 +
            (C24352 + C24351 + C24350) * C153513 * C23988 + C24358 * C23987) *
               C153413 * C312) *
              C153384)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
             C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 +
             C23999 + C153761 * C162) *
                C153513 * C23987 +
            (C24335 + C24336 + C24337) * C153513 * C23988 + C24357 * C153774) *
               C493 -
           ((C23994 * C1798 + C24577 + C24577 + C153761 * C1808 +
             C23992 * C1799 + C24578 + C24578 + C153790 * C1809 +
             C23990 * C1800 + C24579 + C24579 + C153809 * C1810) *
                C153513 * C153774 +
            (C23994 * C983 + C24580 + C24580 + C153761 * C995 + C23992 * C982 +
             C24581 + C24581 + C153790 * C994 + C23990 * C981 + C24582 +
             C24582 + C153809 * C993) *
                C153513 * C23988 +
            (C23994 * C498 + C24583 + C24583 + C153761 * C522 + C23992 * C499 +
             C24584 + C24584 + C153790 * C523 + C23990 * C500 + C24585 +
             C24585 + C153809 * C524) *
                C153513 * C23987) *
               C494 +
           ((C23990 * C501 + C24586 + C24586 + C153809 * C525 + C23992 * C502 +
             C24587 + C24587 + C153790 * C526 + C23994 * C503 + C24588 +
             C24588 + C153761 * C527) *
                C153513 * C23987 +
            (C23990 * C1369 + C24589 + C24589 + C153809 * C1379 +
             C23992 * C1368 + C24590 + C24590 + C153790 * C1378 +
             C23994 * C1367 + C24591 + C24591 + C153761 * C1377) *
                C153513 * C23988 +
            (C23990 * C3327 + C24592 + C24592 + C153809 * C3335 +
             C23992 * C3328 + C24593 + C24593 + C153790 * C3336 +
             C23994 * C3329 + C24594 + C24594 + C153761 * C3337) *
                C153513 * C153774) *
               C495) *
              C153397 * C313 +
          (((C23990 * C499 + C24595 + C24595 + C153809 * C523 + C23992 * C498 +
             C24596 + C24596 + C153790 * C522 + C23994 * C497 + C24597 +
             C24597 + C153761 * C521) *
                C153513 * C23987 +
            (C23990 * C982 + C24598 + C24598 + C153809 * C994 + C23992 * C983 +
             C24599 + C24599 + C153790 * C995 + C23994 * C984 + C24600 +
             C24600 + C153761 * C996) *
                C153513 * C23988 +
            (C23990 * C1799 + C24601 + C24601 + C153809 * C1809 +
             C23992 * C1798 + C24602 + C24602 + C153790 * C1808 +
             C23994 * C1797 + C24603 + C24603 + C153761 * C1807) *
                C153513 * C153774) *
               C494 -
           (C24358 * C153774 + (C24346 + C24345 + C24344) * C153513 * C23988 +
            (C23994 * C147 + C24012 + C24012 + C153761 * C163 + C23992 * C146 +
             C24013 + C24013 + C153790 * C162 + C23990 * C145 + C24014 +
             C24014 + C153809 * C161) *
                C153513 * C23987) *
               C493 -
           ((C23994 * C3330 + C24604 + C24604 + C153761 * C3338 +
             C23992 * C3329 + C24605 + C24605 + C153790 * C3337 +
             C23990 * C3328 + C24606 + C24606 + C153809 * C3336) *
                C153513 * C153774 +
            (C23994 * C1366 + C24607 + C24607 + C153761 * C1376 +
             C23992 * C1367 + C24608 + C24608 + C153790 * C1377 +
             C23990 * C1368 + C24609 + C24609 + C153809 * C1378) *
                C153513 * C23988 +
            (C23994 * C504 + C24610 + C24610 + C153761 * C528 + C23992 * C503 +
             C24611 + C24611 + C153790 * C527 + C23990 * C502 + C24612 +
             C24612 + C153809 * C526) *
                C153513 * C23987) *
               C495) *
              C153397 * C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153513 *
               C28229 +
           (C28234 * C319 + C28238 + C28238 + C153338 * C343) * C153513 *
               C28230 +
           (C28234 * C320 + C28239 + C28239 + C153338 * C344) * C153513 *
               C28231 +
           (C28234 * C1227 + C28240 + C28240 + C153338 * C1237) * C153513 *
               C28232 +
           (C28234 * C2989 + C28241 + C28241 + C153338 * C2997) * C153513 *
               C28233) *
              C153413 * C153397 * C130 -
          ((C28234 * C2990 + C28242 + C28242 + C153338 * C2998) * C153513 *
               C28233 +
           (C28234 * C1226 + C28243 + C28243 + C153338 * C1236) * C153513 *
               C28232 +
           (C28234 * C321 + C28244 + C28244 + C153338 * C345) * C153513 *
               C28231 +
           (C28234 * C318 + C28245 + C28245 + C153338 * C342) * C153513 *
               C28230 +
           (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C153513 *
               C28229) *
              C153413 * C153397 * C131 +
          ((C28234 * C146 + C28247 + C28247 + C153338 * C162) * C153513 *
               C28229 +
           (C28234 * C317 + C28248 + C28248 + C153338 * C341) * C153513 *
               C28230 +
           (C28234 * C322 + C28249 + C28249 + C153338 * C346) * C153513 *
               C28231 +
           (C28234 * C1225 + C28250 + C28250 + C153338 * C1235) * C153513 *
               C28232 +
           (C28234 * C2991 + C28251 + C28251 + C153338 * C2999) * C153513 *
               C28233) *
              C153413 * C153397 * C132 -
          ((C28234 * C2992 + C28252 + C28252 + C153338 * C3000) * C153513 *
               C28233 +
           (C28234 * C1224 + C28253 + C28253 + C153338 * C1234) * C153513 *
               C28232 +
           (C28234 * C323 + C28254 + C28254 + C153338 * C347) * C153513 *
               C28231 +
           (C28234 * C316 + C28255 + C28255 + C153338 * C340) * C153513 *
               C28230 +
           (C28234 * C147 + C28256 + C28256 + C153338 * C163) * C153513 *
               C28229) *
              C153413 * C153397 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153513 *
                C28229 +
            C28439 * C28230 + C28440 * C28231 + C28441 * C28232 +
            C28442 * C28233) *
               C153413 * C310 -
           (C28443 * C28233 + C28442 * C28232 + C28441 * C28231 +
            C28440 * C28230 + C28439 * C28229) *
               C153413 * C311 +
           (C28440 * C28229 + C28441 * C28230 + C28442 * C28231 +
            C28443 * C28232 +
            (C28234 * C28378 + C28396 + C28396 + C153338 * C28382) * C153513 *
                C28233) *
               C153413 * C312) *
              C313 +
          ((C28444 * C28229 + C28445 * C28230 + C28446 * C28231 +
            C28447 * C28232 + C28448 * C28233) *
               C153413 * C311 -
           (C28447 * C28233 + C28446 * C28232 + C28445 * C28231 +
            C28444 * C28230 +
            (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C153513 *
                C28229) *
               C153413 * C310 -
           ((C28234 * C28379 + C28408 + C28408 + C153338 * C28383) * C153513 *
                C28233 +
            C28448 * C28232 + C28447 * C28231 + C28446 * C28230 +
            C28445 * C28229) *
               C153413 * C312) *
              C153384)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153513 *
                C28229 +
            C28439 * C28230 + C28440 * C28231 + C28441 * C28232 +
            C28442 * C28233) *
               C493 -
           ((C28234 * C5603 + C28577 + C28577 + C153338 * C5609) * C153513 *
                C28233 +
            (C28234 * C4143 + C28578 + C28578 + C153338 * C4151) * C153513 *
                C28232 +
            (C28234 * C1800 + C28579 + C28579 + C153338 * C1810) * C153513 *
                C28231 +
            (C28234 * C981 + C28580 + C28580 + C153338 * C993) * C153513 *
                C28230 +
            (C28234 * C500 + C28581 + C28581 + C153338 * C524) * C153513 *
                C28229) *
               C494 +
           ((C28234 * C501 + C28582 + C28582 + C153338 * C525) * C153513 *
                C28229 +
            (C28234 * C1369 + C28583 + C28583 + C153338 * C1379) * C153513 *
                C28230 +
            (C28234 * C3327 + C28584 + C28584 + C153338 * C3335) * C153513 *
                C28231 +
            (C28234 * C4835 + C28585 + C28585 + C153338 * C4841) * C153513 *
                C28232 +
            (C28234 * C28570 + C28586 + C28586 + C153338 * C28574) * C153513 *
                C28233) *
               C495) *
              C153397 * C313 +
          (((C28234 * C499 + C28587 + C28587 + C153338 * C523) * C153513 *
                C28229 +
            (C28234 * C982 + C28588 + C28588 + C153338 * C994) * C153513 *
                C28230 +
            (C28234 * C1799 + C28589 + C28589 + C153338 * C1809) * C153513 *
                C28231 +
            (C28234 * C4144 + C28590 + C28590 + C153338 * C4152) * C153513 *
                C28232 +
            (C28234 * C5602 + C28591 + C28591 + C153338 * C5608) * C153513 *
                C28233) *
               C494 -
           (C28447 * C28233 + C28446 * C28232 + C28445 * C28231 +
            C28444 * C28230 +
            (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C153513 *
                C28229) *
               C493 -
           ((C28234 * C28571 + C28592 + C28592 + C153338 * C28575) * C153513 *
                C28233 +
            (C28234 * C4834 + C28593 + C28593 + C153338 * C4840) * C153513 *
                C28232 +
            (C28234 * C3328 + C28594 + C28594 + C153338 * C3336) * C153513 *
                C28231 +
            (C28234 * C1368 + C28595 + C28595 + C153338 * C1378) * C153513 *
                C28230 +
            (C28234 * C502 + C28596 + C28596 + C153338 * C526) * C153513 *
                C28229) *
               C495) *
              C153397 * C153384)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153813 +
            (C28234 * C500 + C28581 + C28581 + C153338 * C524) * C153802 +
            (C28234 * C501 + C28582 + C28582 + C153338 * C525) * C153777) *
               C23987 +
           (C28429 * C153813 + C29076 * C153802 + C29445 * C153777) * C23988 +
           (C28430 * C153813 + C29075 * C153802 + C29446 * C153777) * C153774) *
              C153413 * C153397 * C130 -
          (((C28234 * C3328 + C28594 + C28594 + C153338 * C3336) * C153777 +
            C29078 * C153802 + C28435 * C153813) *
               C153774 +
           ((C28234 * C1368 + C28595 + C28595 + C153338 * C1378) * C153777 +
            C29077 * C153802 + C28434 * C153813) *
               C23988 +
           ((C28234 * C502 + C28596 + C28596 + C153338 * C526) * C153777 +
            (C28234 * C499 + C28587 + C28587 + C153338 * C523) * C153802 +
            (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C153813) *
               C23987) *
              C153413 * C153397 * C131 +
          (((C28234 * C146 + C28247 + C28247 + C153338 * C162) * C153813 +
            (C28234 * C498 + C28870 + C28870 + C153338 * C522) * C153802 +
            (C28234 * C503 + C30758 + C30758 + C153338 * C527) * C153777) *
               C23987 +
           (C28736 * C153813 +
            (C28234 * C983 + C28869 + C28869 + C153338 * C995) * C153802 +
            (C28234 * C1367 + C30759 + C30759 + C153338 * C1377) * C153777) *
               C23988 +
           (C28737 * C153813 +
            (C28234 * C1798 + C28868 + C28868 + C153338 * C1808) * C153802 +
            (C28234 * C3329 + C30760 + C30760 + C153338 * C3337) * C153777) *
               C153774) *
              C153413 * C153397 * C132 -
          (((C28234 * C3330 + C30761 + C30761 + C153338 * C3338) * C153777 +
            (C28234 * C1797 + C30762 + C30762 + C153338 * C1807) * C153802 +
            (C28234 * C323 + C28254 + C28254 + C153338 * C347) * C153813) *
               C153774 +
           ((C28234 * C1366 + C30763 + C30763 + C153338 * C1376) * C153777 +
            (C28234 * C984 + C30764 + C30764 + C153338 * C996) * C153802 +
            (C28234 * C316 + C28255 + C28255 + C153338 * C340) * C153813) *
               C23988 +
           ((C28234 * C504 + C30765 + C30765 + C153338 * C528) * C153777 +
            (C28234 * C497 + C30766 + C30766 + C153338 * C521) * C153802 +
            (C28234 * C147 + C28256 + C28256 + C153338 * C163) * C153813) *
               C23987) *
              C153413 * C153397 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153813 +
             (C28234 * C500 + C28581 + C28581 + C153338 * C524) * C153802 +
             (C28234 * C501 + C28582 + C28582 + C153338 * C525) * C153777) *
                C23987 +
            (C30985 + C30986 + C30987) * C23988 + C31011 * C153774) *
               C153413 * C310 -
           ((C30991 + C30992 + C30993) * C153774 +
            (C30990 + C30989 + C30988) * C23988 +
            (C30987 + C30986 + C30985) * C23987) *
               C153413 * C311 +
           (C31011 * C23987 + (C30993 + C30992 + C30991) * C23988 +
            (C28432 * C153813 + C29073 * C153802 + C29448 * C153777) *
                C153774) *
               C153413 * C312) *
              C313 +
          (((C30994 + C30995 + C31018) * C23987 +
            (C30998 + C30999 + C31019) * C23988 +
            (C31002 + C31003 + C31020) * C153774) *
               C153413 * C311 -
           (C31021 * C153774 + (C31018 + C30995 + C30994) * C23988 +
            ((C28234 * C502 + C28596 + C28596 + C153338 * C526) * C153777 +
             (C28234 * C499 + C28587 + C28587 + C153338 * C523) * C153802 +
             (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C153813) *
                C23987) *
               C153413 * C310 -
           (((C28234 * C28571 + C28592 + C28592 + C153338 * C28575) * C153777 +
             C29080 * C153802 + C28437 * C153813) *
                C153774 +
            (C31020 + C31003 + C31002) * C23988 + C31021 * C23987) *
               C153413 * C312) *
              C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153813 +
             C31295 * C153802 + C31296 * C153777) *
                C23987 +
            (C30985 + C30986 + C30987) * C23988 + C31011 * C153774) *
               C493 -
           ((C31297 * C153777 + C29446 * C153802 + C29075 * C153813) * C153774 +
            (C31298 * C153777 + C29445 * C153802 + C29076 * C153813) * C23988 +
            (C31299 * C153777 + C31296 * C153802 + C31295 * C153813) * C23987) *
               C494 +
           ((C31296 * C153813 + C31299 * C153802 +
             (C28234 * C7560 + C31256 + C31256 + C153338 * C7568) * C153777) *
                C23987 +
            (C29445 * C153813 + C31298 * C153802 +
             (C28234 * C9042 + C31257 + C31257 + C153338 * C9048) * C153777) *
                C23988 +
            (C29446 * C153813 + C31297 * C153802 +
             (C28234 * C31239 + C31258 + C31258 + C153338 * C31243) * C153777) *
                C153774) *
               C495) *
              C153397 * C313 +
          (((C31300 * C153813 + C31301 * C153802 + C31302 * C153777) * C23987 +
            (C29077 * C153813 + C31015 * C153802 + C31303 * C153777) * C23988 +
            (C29078 * C153813 + C31016 * C153802 + C31304 * C153777) *
                C153774) *
               C494 -
           (C31021 * C153774 + (C31018 + C30995 + C30994) * C23988 +
            (C31301 * C153777 + C31300 * C153802 +
             (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C153813) *
                C23987) *
               C493 -
           (((C28234 * C31240 + C31272 + C31272 + C153338 * C31244) * C153777 +
             C31304 * C153802 + C31016 * C153813) *
                C153774 +
            ((C28234 * C9041 + C31273 + C31273 + C153338 * C9047) * C153777 +
             C31303 * C153802 + C31015 * C153813) *
                C23988 +
            ((C28234 * C7561 + C31274 + C31274 + C153338 * C7569) * C153777 +
             C31302 * C153802 + C31301 * C153813) *
                C23987) *
               C495) *
              C153397 * C153384)) /
            (p * q * std::sqrt(p + q));
    d2ee[333] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 +
             C2737 + C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
             C153761 * C162) *
                C153513 * C153812 +
            (C3086 + C3087 + C3088) * C153513 * C153800 + C3108 * C153774) *
               C153725 -
           ((C2733 * C1798 + C3340 + C3340 + C153761 * C1808 + C2731 * C1799 +
             C3341 + C3341 + C2724 * C1809 + C2729 * C1800 + C3342 + C3342 +
             C2723 * C1810) *
                C153513 * C153774 +
            (C2733 * C983 + C3343 + C3343 + C153761 * C995 + C2731 * C982 +
             C3344 + C3344 + C2724 * C994 + C2729 * C981 + C3345 + C3345 +
             C2723 * C993) *
                C153513 * C153800 +
            (C2733 * C498 + C3346 + C3346 + C153761 * C522 + C2731 * C499 +
             C3347 + C3347 + C2724 * C523 + C2729 * C500 + C3348 + C3348 +
             C2723 * C524) *
                C153513 * C153812) *
               C153477) *
              C153397 * C153793 +
          (((C2729 * C499 + C3358 + C3358 + C2723 * C523 + C2731 * C498 +
             C3359 + C3359 + C2724 * C522 + C2733 * C497 + C3360 + C3360 +
             C153761 * C521) *
                C153513 * C153812 +
            (C2729 * C982 + C3361 + C3361 + C2723 * C994 + C2731 * C983 +
             C3362 + C3362 + C2724 * C995 + C2733 * C984 + C3363 + C3363 +
             C153761 * C996) *
                C153513 * C153800 +
            (C2729 * C1799 + C3364 + C3364 + C2723 * C1809 + C2731 * C1798 +
             C3365 + C3365 + C2724 * C1808 + C2733 * C1797 + C3366 + C3366 +
             C153761 * C1807) *
                C153513 * C153774) *
               C153477 -
           (C3109 * C153774 + (C3097 + C3096 + C3095) * C153513 * C153800 +
            (C2733 * C147 + C2751 + C2751 + C153761 * C163 + C2731 * C146 +
             C2752 + C2752 + C2724 * C162 + C2729 * C145 + C2753 + C2753 +
             C2723 * C161) *
                C153513 * C153812) *
               C153725) *
              C153397 * C153794 +
          (((C2729 * C146 + C2754 + C2754 + C2723 * C162 + C2731 * C147 +
             C2755 + C2755 + C2724 * C163 + C2733 * C148 + C2756 + C2756 +
             C153761 * C164) *
                C153513 * C153812 +
            (C3621 + C3622 + C3623) * C153513 * C153800 +
            (C3624 + C3625 + C3626) * C153513 * C153774) *
               C153725 -
           ((C2733 * C1796 + C3845 + C3845 + C153761 * C1806 + C2731 * C1797 +
             C3846 + C3846 + C2724 * C1807 + C2729 * C1798 + C3847 + C3847 +
             C2723 * C1808) *
                C153513 * C153774 +
            (C2733 * C985 + C3848 + C3848 + C153761 * C997 + C2731 * C984 +
             C3849 + C3849 + C2724 * C996 + C2729 * C983 + C3850 + C3850 +
             C2723 * C995) *
                C153513 * C153800 +
            (C2733 * C496 + C3851 + C3851 + C153761 * C520 + C2731 * C497 +
             C3852 + C3852 + C2724 * C521 + C2729 * C498 + C3853 + C3853 +
             C2723 * C522) *
                C153513 * C153812) *
               C153477) *
              C153397 * C678)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C144 + C169 + C169 + C121 * C160 + C136 * C145 + C170 +
            C170 + C122 * C161 + C138 * C146 + C171 + C171 + C123 * C162 +
            C140 * C147 + C172 + C172 + C124 * C163 + C142 * C148 + C173 +
            C173 + C125 * C164) *
               C153513 * C153501 * C153725 -
           (C142 * C496 + C533 + C533 + C125 * C520 + C140 * C497 + C534 +
            C534 + C124 * C521 + C138 * C498 + C535 + C535 + C123 * C522 +
            C136 * C499 + C536 + C536 + C122 * C523 + C134 * C500 + C537 +
            C537 + C121 * C524) *
               C153513 * C153501 * C153477) *
              C153397 * C153793 +
          ((C134 * C499 + C543 + C543 + C121 * C523 + C136 * C498 + C544 +
            C544 + C122 * C522 + C138 * C497 + C545 + C545 + C123 * C521 +
            C140 * C496 + C546 + C546 + C124 * C520 + C142 * C506 + C547 +
            C547 + C125 * C530) *
               C153513 * C153501 * C153477 -
           (C142 * C149 + C174 + C174 + C125 * C165 + C140 * C148 + C175 +
            C175 + C124 * C164 + C138 * C147 + C176 + C176 + C123 * C163 +
            C136 * C146 + C177 + C177 + C122 * C162 + C134 * C145 + C178 +
            C178 + C121 * C161) *
               C153513 * C153501 * C153725) *
              C153397 * C153794 +
          ((C134 * C146 + C179 + C179 + C121 * C162 + C136 * C147 + C180 +
            C180 + C122 * C163 + C138 * C148 + C181 + C181 + C123 * C164 +
            C140 * C149 + C182 + C182 + C124 * C165 + C142 * C150 + C183 +
            C183 + C125 * C166) *
               C153513 * C153501 * C153725 -
           (C142 * C811 + C815 + C815 + C125 * C813 + C140 * C506 + C816 +
            C816 + C124 * C530 + C138 * C496 + C817 + C817 + C123 * C520 +
            C136 * C497 + C818 + C818 + C122 * C521 + C134 * C498 + C819 +
            C819 + C121 * C522) *
               C153513 * C153501 * C153477) *
              C153397 * C678)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 +
             C2737 + C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
             C153761 * C162) *
                C153813 +
            (C7654 + C7655 + C7656) * C153802 + C7674 * C153777) *
               C153501 * C153725 -
           ((C7660 + C7661 + C7662) * C153777 +
            (C7659 + C7658 + C7657) * C153802 +
            (C7656 + C7655 + C7654) * C153813) *
               C153501 * C153477) *
              C153397 * C153793 +
          (((C7663 + C7664 + C7665) * C153813 +
            (C7666 + C7667 + C7668) * C153802 +
            (C7669 + C7670 + C7671) * C153777) *
               C153501 * C153477 -
           (C7675 * C153777 + (C7665 + C7664 + C7663) * C153802 +
            (C2733 * C147 + C2751 + C2751 + C153761 * C163 + C2731 * C146 +
             C2752 + C2752 + C2724 * C162 + C2729 * C145 + C2753 + C2753 +
             C2723 * C161) *
                C153813) *
               C153501 * C153725) *
              C153397 * C153794 +
          (((C2729 * C146 + C2754 + C2754 + C2723 * C162 + C2731 * C147 +
             C2755 + C2755 + C2724 * C163 + C2733 * C148 + C2756 + C2756 +
             C153761 * C164) *
                C153813 +
            (C8142 + C8143 + C8144) * C153802 +
            (C8145 + C8146 + C8147) * C153777) *
               C153501 * C153725 -
           ((C2733 * C2148 + C8127 + C8127 + C153761 * C2158 + C2731 * C2149 +
             C8128 + C8128 + C2724 * C2159 + C2729 * C2150 + C8129 + C8129 +
             C2723 * C2160) *
                C153777 +
            (C8147 + C8146 + C8145) * C153802 +
            (C8144 + C8143 + C8142) * C153813) *
               C153501 * C153477) *
              C153397 * C678)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
             C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 +
             C23999 + C153761 * C162) *
                C153513 * C23987 +
            (C24335 + C24336 + C24337) * C153513 * C23988 + C24357 * C153774) *
               C153725 -
           ((C23994 * C1798 + C24577 + C24577 + C153761 * C1808 +
             C23992 * C1799 + C24578 + C24578 + C153790 * C1809 +
             C23990 * C1800 + C24579 + C24579 + C153809 * C1810) *
                C153513 * C153774 +
            (C23994 * C983 + C24580 + C24580 + C153761 * C995 + C23992 * C982 +
             C24581 + C24581 + C153790 * C994 + C23990 * C981 + C24582 +
             C24582 + C153809 * C993) *
                C153513 * C23988 +
            (C23994 * C498 + C24583 + C24583 + C153761 * C522 + C23992 * C499 +
             C24584 + C24584 + C153790 * C523 + C23990 * C500 + C24585 +
             C24585 + C153809 * C524) *
                C153513 * C23987) *
               C153477) *
              C153397 * C153793 +
          (((C23990 * C499 + C24595 + C24595 + C153809 * C523 + C23992 * C498 +
             C24596 + C24596 + C153790 * C522 + C23994 * C497 + C24597 +
             C24597 + C153761 * C521) *
                C153513 * C23987 +
            (C23990 * C982 + C24598 + C24598 + C153809 * C994 + C23992 * C983 +
             C24599 + C24599 + C153790 * C995 + C23994 * C984 + C24600 +
             C24600 + C153761 * C996) *
                C153513 * C23988 +
            (C23990 * C1799 + C24601 + C24601 + C153809 * C1809 +
             C23992 * C1798 + C24602 + C24602 + C153790 * C1808 +
             C23994 * C1797 + C24603 + C24603 + C153761 * C1807) *
                C153513 * C153774) *
               C153477 -
           (C24358 * C153774 + (C24346 + C24345 + C24344) * C153513 * C23988 +
            (C23994 * C147 + C24012 + C24012 + C153761 * C163 + C23992 * C146 +
             C24013 + C24013 + C153790 * C162 + C23990 * C145 + C24014 +
             C24014 + C153809 * C161) *
                C153513 * C23987) *
               C153725) *
              C153397 * C153794 +
          (((C23990 * C146 + C24015 + C24015 + C153809 * C162 + C23992 * C147 +
             C24016 + C24016 + C153790 * C163 + C23994 * C148 + C24017 +
             C24017 + C153761 * C164) *
                C153513 * C23987 +
            (C24858 + C24859 + C24860) * C153513 * C23988 +
            (C24861 + C24862 + C24863) * C153513 * C153774) *
               C153725 -
           ((C23994 * C1796 + C25082 + C25082 + C153761 * C1806 +
             C23992 * C1797 + C25083 + C25083 + C153790 * C1807 +
             C23990 * C1798 + C25084 + C25084 + C153809 * C1808) *
                C153513 * C153774 +
            (C23994 * C985 + C25085 + C25085 + C153761 * C997 + C23992 * C984 +
             C25086 + C25086 + C153790 * C996 + C23990 * C983 + C25087 +
             C25087 + C153809 * C995) *
                C153513 * C23988 +
            (C23994 * C496 + C25088 + C25088 + C153761 * C520 + C23992 * C497 +
             C25089 + C25089 + C153790 * C521 + C23990 * C498 + C25090 +
             C25090 + C153809 * C522) *
                C153513 * C23987) *
               C153477) *
              C153397 * C678)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153513 *
                C28229 +
            C28439 * C28230 + C28440 * C28231 + C28441 * C28232 +
            C28442 * C28233) *
               C153725 -
           ((C28234 * C5603 + C28577 + C28577 + C153338 * C5609) * C153513 *
                C28233 +
            (C28234 * C4143 + C28578 + C28578 + C153338 * C4151) * C153513 *
                C28232 +
            (C28234 * C1800 + C28579 + C28579 + C153338 * C1810) * C153513 *
                C28231 +
            (C28234 * C981 + C28580 + C28580 + C153338 * C993) * C153513 *
                C28230 +
            (C28234 * C500 + C28581 + C28581 + C153338 * C524) * C153513 *
                C28229) *
               C153477) *
              C153397 * C153793 +
          (((C28234 * C499 + C28587 + C28587 + C153338 * C523) * C153513 *
                C28229 +
            (C28234 * C982 + C28588 + C28588 + C153338 * C994) * C153513 *
                C28230 +
            (C28234 * C1799 + C28589 + C28589 + C153338 * C1809) * C153513 *
                C28231 +
            (C28234 * C4144 + C28590 + C28590 + C153338 * C4152) * C153513 *
                C28232 +
            (C28234 * C5602 + C28591 + C28591 + C153338 * C5608) * C153513 *
                C28233) *
               C153477 -
           (C28447 * C28233 + C28446 * C28232 + C28445 * C28231 +
            C28444 * C28230 +
            (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C153513 *
                C28229) *
               C153725) *
              C153397 * C153794 +
          (((C28234 * C146 + C28247 + C28247 + C153338 * C162) * C153513 *
                C28229 +
            C28740 * C28230 + C28741 * C28231 + C28742 * C28232 +
            C28743 * C28233) *
               C153725 -
           ((C28234 * C5601 + C28866 + C28866 + C153338 * C5607) * C153513 *
                C28233 +
            (C28234 * C4145 + C28867 + C28867 + C153338 * C4153) * C153513 *
                C28232 +
            (C28234 * C1798 + C28868 + C28868 + C153338 * C1808) * C153513 *
                C28231 +
            (C28234 * C983 + C28869 + C28869 + C153338 * C995) * C153513 *
                C28230 +
            (C28234 * C498 + C28870 + C28870 + C153338 * C522) * C153513 *
                C28229) *
               C153477) *
              C153397 * C678)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153813 +
             C31295 * C153802 + C31296 * C153777) *
                C23987 +
            (C30985 + C30986 + C30987) * C23988 + C31011 * C153774) *
               C153725 -
           ((C31297 * C153777 + C29446 * C153802 + C29075 * C153813) * C153774 +
            (C31298 * C153777 + C29445 * C153802 + C29076 * C153813) * C23988 +
            (C31299 * C153777 + C31296 * C153802 + C31295 * C153813) * C23987) *
               C153477) *
              C153397 * C153793 +
          (((C31300 * C153813 + C31301 * C153802 + C31302 * C153777) * C23987 +
            (C29077 * C153813 + C31015 * C153802 + C31303 * C153777) * C23988 +
            (C29078 * C153813 + C31016 * C153802 + C31304 * C153777) *
                C153774) *
               C153477 -
           (C31021 * C153774 + (C31018 + C30995 + C30994) * C23988 +
            (C31301 * C153777 + C31300 * C153802 +
             (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C153813) *
                C23987) *
               C153725) *
              C153397 * C153794 +
          ((((C28234 * C146 + C28247 + C28247 + C153338 * C162) * C153813 +
             C31779 * C153802 + C31780 * C153777) *
                C23987 +
            (C31523 + C31546 + C31547) * C23988 +
            (C31528 + C31548 + C31549) * C153774) *
               C153725 -
           (((C28234 * C6213 + C31772 + C31772 + C153338 * C6225) * C153777 +
             C31545 * C153802 + C31544 * C153813) *
                C153774 +
            ((C28234 * C6216 + C31773 + C31773 + C153338 * C6228) * C153777 +
             C31543 * C153802 + C31542 * C153813) *
                C23988 +
            ((C28234 * C2150 + C31774 + C31774 + C153338 * C2160) * C153777 +
             C31780 * C153802 + C31779 * C153813) *
                C23987) *
               C153477) *
              C153397 * C678)) /
            (p * q * std::sqrt(p + q));
    d2ee[334] +=
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C144 + C169 + C169 + C121 * C160 + C136 * C145 + C170 +
            C170 + C122 * C161 + C138 * C146 + C171 + C171 + C123 * C162 +
            C140 * C147 + C172 + C172 + C124 * C163 + C142 * C148 + C173 +
            C173 + C125 * C164) *
               C153513 * C153501 * C153413 * C310 -
           (C142 * C315 + C352 + C352 + C125 * C339 + C140 * C316 + C353 +
            C353 + C124 * C340 + C138 * C317 + C354 + C354 + C123 * C341 +
            C136 * C318 + C355 + C355 + C122 * C342 + C134 * C319 + C356 +
            C356 + C121 * C343) *
               C153513 * C153501 * C153413 * C311 +
           (C134 * C320 + C357 + C357 + C121 * C344 + C136 * C321 + C358 +
            C358 + C122 * C345 + C138 * C322 + C359 + C359 + C123 * C346 +
            C140 * C323 + C360 + C360 + C124 * C347 + C142 * C324 + C361 +
            C361 + C125 * C348) *
               C153513 * C153501 * C153413 * C312) *
              C313 +
          ((C134 * C318 + C362 + C362 + C121 * C342 + C136 * C317 + C363 +
            C363 + C122 * C341 + C138 * C316 + C364 + C364 + C123 * C340 +
            C140 * C315 + C365 + C365 + C124 * C339 + C142 * C325 + C366 +
            C366 + C125 * C349) *
               C153513 * C153501 * C153413 * C311 -
           (C142 * C149 + C174 + C174 + C125 * C165 + C140 * C148 + C175 +
            C175 + C124 * C164 + C138 * C147 + C176 + C176 + C123 * C163 +
            C136 * C146 + C177 + C177 + C122 * C162 + C134 * C145 + C178 +
            C178 + C121 * C161) *
               C153513 * C153501 * C153413 * C310 -
           (C142 * C326 + C367 + C367 + C125 * C350 + C140 * C324 + C368 +
            C368 + C124 * C348 + C138 * C323 + C369 + C369 + C123 * C347 +
            C136 * C322 + C370 + C370 + C122 * C346 + C134 * C321 + C371 +
            C371 + C121 * C345) *
               C153513 * C153501 * C153413 * C312) *
              C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((C134 * C144 + C169 + C169 + C121 * C160 + C136 * C145 + C170 + C170 +
           C122 * C161 + C138 * C146 + C171 + C171 + C123 * C162 + C140 * C147 +
           C172 + C172 + C124 * C163 + C142 * C148 + C173 + C173 +
           C125 * C164) *
              C153513 * C153501 * C153413 * C153397 * C130 -
          (C142 * C149 + C174 + C174 + C125 * C165 + C140 * C148 + C175 + C175 +
           C124 * C164 + C138 * C147 + C176 + C176 + C123 * C163 + C136 * C146 +
           C177 + C177 + C122 * C162 + C134 * C145 + C178 + C178 +
           C121 * C161) *
              C153513 * C153501 * C153413 * C153397 * C131 +
          (C134 * C146 + C179 + C179 + C121 * C162 + C136 * C147 + C180 + C180 +
           C122 * C163 + C138 * C148 + C181 + C181 + C123 * C164 + C140 * C149 +
           C182 + C182 + C124 * C165 + C142 * C150 + C183 + C183 +
           C125 * C166) *
              C153513 * C153501 * C153413 * C153397 * C132 -
          (C142 * C151 + C184 + C184 + C125 * C167 + C140 * C150 + C185 + C185 +
           C124 * C166 + C138 * C149 + C186 + C186 + C123 * C165 + C136 * C148 +
           C187 + C187 + C122 * C164 + C134 * C147 + C188 + C188 +
           C121 * C163) *
              C153513 * C153501 * C153413 * C153397 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 + C2737 +
            C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
            C153761 * C162) *
               C153513 * C153812 +
           (C2729 * C319 + C2739 + C2739 + C2723 * C343 + C2731 * C318 + C2740 +
            C2740 + C2724 * C342 + C2733 * C317 + C2741 + C2741 +
            C153761 * C341) *
               C153513 * C153800 +
           (C2729 * C320 + C2742 + C2742 + C2723 * C344 + C2731 * C321 + C2743 +
            C2743 + C2724 * C345 + C2733 * C322 + C2744 + C2744 +
            C153761 * C346) *
               C153513 * C153774) *
              C153413 * C153397 * C130 -
          ((C2733 * C323 + C2745 + C2745 + C153761 * C347 + C2731 * C322 +
            C2746 + C2746 + C2724 * C346 + C2729 * C321 + C2747 + C2747 +
            C2723 * C345) *
               C153513 * C153774 +
           (C2733 * C316 + C2748 + C2748 + C153761 * C340 + C2731 * C317 +
            C2749 + C2749 + C2724 * C341 + C2729 * C318 + C2750 + C2750 +
            C2723 * C342) *
               C153513 * C153800 +
           (C2733 * C147 + C2751 + C2751 + C153761 * C163 + C2731 * C146 +
            C2752 + C2752 + C2724 * C162 + C2729 * C145 + C2753 + C2753 +
            C2723 * C161) *
               C153513 * C153812) *
              C153413 * C153397 * C131 +
          ((C2729 * C146 + C2754 + C2754 + C2723 * C162 + C2731 * C147 + C2755 +
            C2755 + C2724 * C163 + C2733 * C148 + C2756 + C2756 +
            C153761 * C164) *
               C153513 * C153812 +
           (C2729 * C317 + C2757 + C2757 + C2723 * C341 + C2731 * C316 + C2758 +
            C2758 + C2724 * C340 + C2733 * C315 + C2759 + C2759 +
            C153761 * C339) *
               C153513 * C153800 +
           (C2729 * C322 + C2760 + C2760 + C2723 * C346 + C2731 * C323 + C2761 +
            C2761 + C2724 * C347 + C2733 * C324 + C2762 + C2762 +
            C153761 * C348) *
               C153513 * C153774) *
              C153413 * C153397 * C132 -
          ((C2733 * C326 + C2763 + C2763 + C153761 * C350 + C2731 * C324 +
            C2764 + C2764 + C2724 * C348 + C2729 * C323 + C2765 + C2765 +
            C2723 * C347) *
               C153513 * C153774 +
           (C2733 * C325 + C2766 + C2766 + C153761 * C349 + C2731 * C315 +
            C2767 + C2767 + C2724 * C339 + C2729 * C316 + C2768 + C2768 +
            C2723 * C340) *
               C153513 * C153800 +
           (C2733 * C149 + C2769 + C2769 + C153761 * C165 + C2731 * C148 +
            C2770 + C2770 + C2724 * C164 + C2729 * C147 + C2771 + C2771 +
            C2723 * C163) *
               C153513 * C153812) *
              C153413 * C153397 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 +
             C2737 + C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
             C153761 * C162) *
                C153513 * C153812 +
            (C3086 + C3087 + C3088) * C153513 * C153800 + C3108 * C153774) *
               C153413 * C310 -
           ((C3092 + C3093 + C3094) * C153513 * C153774 +
            (C3091 + C3090 + C3089) * C153513 * C153800 +
            (C3088 + C3087 + C3086) * C153513 * C153812) *
               C153413 * C311 +
           (C3108 * C153812 + (C3094 + C3093 + C3092) * C153513 * C153800 +
            (C2729 * C2989 + C3023 + C3023 + C2723 * C2997 + C2731 * C2990 +
             C3024 + C3024 + C2724 * C2998 + C2733 * C2991 + C3025 + C3025 +
             C153761 * C2999) *
                C153513 * C153774) *
               C153413 * C312) *
              C313 +
          (((C3095 + C3096 + C3097) * C153513 * C153812 +
            (C3098 + C3099 + C3100) * C153513 * C153800 +
            (C3101 + C3102 + C3103) * C153513 * C153774) *
               C153413 * C311 -
           (C3109 * C153774 + (C3097 + C3096 + C3095) * C153513 * C153800 +
            (C2733 * C147 + C2751 + C2751 + C153761 * C163 + C2731 * C146 +
             C2752 + C2752 + C2724 * C162 + C2729 * C145 + C2753 + C2753 +
             C2723 * C161) *
                C153513 * C153812) *
               C153413 * C310 -
           ((C2733 * C2992 + C3047 + C3047 + C153761 * C3000 + C2731 * C2991 +
             C3048 + C3048 + C2724 * C2999 + C2729 * C2990 + C3049 + C3049 +
             C2723 * C2998) *
                C153513 * C153774 +
            (C3103 + C3102 + C3101) * C153513 * C153800 + C3109 * C153812) *
               C153413 * C312) *
              C153384)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 + C2737 +
            C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
            C153761 * C162) *
               C153813 +
           (C2729 * C500 + C3348 + C3348 + C2723 * C524 + C2731 * C499 + C3347 +
            C3347 + C2724 * C523 + C2733 * C498 + C3346 + C3346 +
            C153761 * C522) *
               C153802 +
           (C2729 * C501 + C3349 + C3349 + C2723 * C525 + C2731 * C502 + C3350 +
            C3350 + C2724 * C526 + C2733 * C503 + C3351 + C3351 +
            C153761 * C527) *
               C153777) *
              C153501 * C153413 * C153397 * C130 -
          ((C2733 * C504 + C3373 + C3373 + C153761 * C528 + C2731 * C503 +
            C3374 + C3374 + C2724 * C527 + C2729 * C502 + C3375 + C3375 +
            C2723 * C526) *
               C153777 +
           (C2733 * C497 + C3360 + C3360 + C153761 * C521 + C2731 * C498 +
            C3359 + C3359 + C2724 * C522 + C2729 * C499 + C3358 + C3358 +
            C2723 * C523) *
               C153802 +
           (C2733 * C147 + C2751 + C2751 + C153761 * C163 + C2731 * C146 +
            C2752 + C2752 + C2724 * C162 + C2729 * C145 + C2753 + C2753 +
            C2723 * C161) *
               C153813) *
              C153501 * C153413 * C153397 * C131 +
          ((C2729 * C146 + C2754 + C2754 + C2723 * C162 + C2731 * C147 + C2755 +
            C2755 + C2724 * C163 + C2733 * C148 + C2756 + C2756 +
            C153761 * C164) *
               C153813 +
           (C2729 * C498 + C3853 + C3853 + C2723 * C522 + C2731 * C497 + C3852 +
            C3852 + C2724 * C521 + C2733 * C496 + C3851 + C3851 +
            C153761 * C520) *
               C153802 +
           (C2729 * C503 + C7116 + C7116 + C2723 * C527 + C2731 * C504 + C7117 +
            C7117 + C2724 * C528 + C2733 * C505 + C7118 + C7118 +
            C153761 * C529) *
               C153777) *
              C153501 * C153413 * C153397 * C132 -
          ((C2733 * C507 + C7119 + C7119 + C153761 * C531 + C2731 * C505 +
            C7120 + C7120 + C2724 * C529 + C2729 * C504 + C7121 + C7121 +
            C2723 * C528) *
               C153777 +
           (C2733 * C506 + C7122 + C7122 + C153761 * C530 + C2731 * C496 +
            C7123 + C7123 + C2724 * C520 + C2729 * C497 + C7124 + C7124 +
            C2723 * C521) *
               C153802 +
           (C2733 * C149 + C2769 + C2769 + C153761 * C165 + C2731 * C148 +
            C2770 + C2770 + C2724 * C164 + C2729 * C147 + C2771 + C2771 +
            C2723 * C163) *
               C153813) *
              C153501 * C153413 * C153397 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 +
             C2737 + C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
             C153761 * C162) *
                C153813 +
            (C2729 * C500 + C3348 + C3348 + C2723 * C524 + C2731 * C499 +
             C3347 + C3347 + C2724 * C523 + C2733 * C498 + C3346 + C3346 +
             C153761 * C522) *
                C153802 +
            (C2729 * C501 + C3349 + C3349 + C2723 * C525 + C2731 * C502 +
             C3350 + C3350 + C2724 * C526 + C2733 * C503 + C3351 + C3351 +
             C153761 * C527) *
                C153777) *
               C153501 * C153413 * C310 -
           ((C4872 + C4871 + C4870) * C153777 +
            (C4213 + C4214 + C4215) * C153802 +
            (C3088 + C3087 + C3086) * C153813) *
               C153501 * C153413 * C311 +
           (C3106 * C153813 + (C4212 + C4211 + C4210) * C153802 +
            (C4873 + C4874 + C4875) * C153777) *
               C153501 * C153413 * C312) *
              C313 +
          (((C3095 + C3096 + C3097) * C153813 +
            (C4216 + C4217 + C4218) * C153802 +
            (C2729 * C1368 + C3372 + C3372 + C2723 * C1378 + C2731 * C1367 +
             C3371 + C3371 + C2724 * C1377 + C2733 * C1366 + C3370 + C3370 +
             C153761 * C1376) *
                C153777) *
               C153501 * C153413 * C311 -
           ((C2733 * C504 + C3373 + C3373 + C153761 * C528 + C2731 * C503 +
             C3374 + C3374 + C2724 * C527 + C2729 * C502 + C3375 + C3375 +
             C2723 * C526) *
                C153777 +
            (C2733 * C497 + C3360 + C3360 + C153761 * C521 + C2731 * C498 +
             C3359 + C3359 + C2724 * C522 + C2729 * C499 + C3358 + C3358 +
             C2723 * C523) *
                C153802 +
            (C2733 * C147 + C2751 + C2751 + C153761 * C163 + C2731 * C146 +
             C2752 + C2752 + C2724 * C162 + C2729 * C145 + C2753 + C2753 +
             C2723 * C161) *
                C153813) *
               C153501 * C153413 * C310 -
           ((C2733 * C3330 + C3367 + C3367 + C153761 * C3338 + C2731 * C3329 +
             C3368 + C3368 + C2724 * C3337 + C2729 * C3328 + C3369 + C3369 +
             C2723 * C3336) *
                C153777 +
            (C4221 + C4220 + C4219) * C153802 + C3107 * C153813) *
               C153501 * C153413 * C312) *
              C153384)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
            C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 + C23999 +
            C153761 * C162) *
               C153513 * C23987 +
           (C23990 * C319 + C24000 + C24000 + C153809 * C343 + C23992 * C318 +
            C24001 + C24001 + C153790 * C342 + C23994 * C317 + C24002 + C24002 +
            C153761 * C341) *
               C153513 * C23988 +
           (C23990 * C320 + C24003 + C24003 + C153809 * C344 + C23992 * C321 +
            C24004 + C24004 + C153790 * C345 + C23994 * C322 + C24005 + C24005 +
            C153761 * C346) *
               C153513 * C153774) *
              C153413 * C153397 * C130 -
          ((C23994 * C323 + C24006 + C24006 + C153761 * C347 + C23992 * C322 +
            C24007 + C24007 + C153790 * C346 + C23990 * C321 + C24008 + C24008 +
            C153809 * C345) *
               C153513 * C153774 +
           (C23994 * C316 + C24009 + C24009 + C153761 * C340 + C23992 * C317 +
            C24010 + C24010 + C153790 * C341 + C23990 * C318 + C24011 + C24011 +
            C153809 * C342) *
               C153513 * C23988 +
           (C23994 * C147 + C24012 + C24012 + C153761 * C163 + C23992 * C146 +
            C24013 + C24013 + C153790 * C162 + C23990 * C145 + C24014 + C24014 +
            C153809 * C161) *
               C153513 * C23987) *
              C153413 * C153397 * C131 +
          ((C23990 * C146 + C24015 + C24015 + C153809 * C162 + C23992 * C147 +
            C24016 + C24016 + C153790 * C163 + C23994 * C148 + C24017 + C24017 +
            C153761 * C164) *
               C153513 * C23987 +
           (C23990 * C317 + C24018 + C24018 + C153809 * C341 + C23992 * C316 +
            C24019 + C24019 + C153790 * C340 + C23994 * C315 + C24020 + C24020 +
            C153761 * C339) *
               C153513 * C23988 +
           (C23990 * C322 + C24021 + C24021 + C153809 * C346 + C23992 * C323 +
            C24022 + C24022 + C153790 * C347 + C23994 * C324 + C24023 + C24023 +
            C153761 * C348) *
               C153513 * C153774) *
              C153413 * C153397 * C132 -
          ((C23994 * C326 + C24024 + C24024 + C153761 * C350 + C23992 * C324 +
            C24025 + C24025 + C153790 * C348 + C23990 * C323 + C24026 + C24026 +
            C153809 * C347) *
               C153513 * C153774 +
           (C23994 * C325 + C24027 + C24027 + C153761 * C349 + C23992 * C315 +
            C24028 + C24028 + C153790 * C339 + C23990 * C316 + C24029 + C24029 +
            C153809 * C340) *
               C153513 * C23988 +
           (C23994 * C149 + C24030 + C24030 + C153761 * C165 + C23992 * C148 +
            C24031 + C24031 + C153790 * C164 + C23990 * C147 + C24032 + C24032 +
            C153809 * C163) *
               C153513 * C23987) *
              C153413 * C153397 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
             C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 +
             C23999 + C153761 * C162) *
                C153513 * C23987 +
            (C24335 + C24336 + C24337) * C153513 * C23988 + C24357 * C153774) *
               C153413 * C310 -
           ((C24341 + C24342 + C24343) * C153513 * C153774 +
            (C24340 + C24339 + C24338) * C153513 * C23988 +
            (C24337 + C24336 + C24335) * C153513 * C23987) *
               C153413 * C311 +
           (C24357 * C23987 + (C24343 + C24342 + C24341) * C153513 * C23988 +
            (C23990 * C2989 + C24272 + C24272 + C153809 * C2997 +
             C23992 * C2990 + C24273 + C24273 + C153790 * C2998 +
             C23994 * C2991 + C24274 + C24274 + C153761 * C2999) *
                C153513 * C153774) *
               C153413 * C312) *
              C313 +
          (((C24344 + C24345 + C24346) * C153513 * C23987 +
            (C24347 + C24348 + C24349) * C153513 * C23988 +
            (C24350 + C24351 + C24352) * C153513 * C153774) *
               C153413 * C311 -
           (C24358 * C153774 + (C24346 + C24345 + C24344) * C153513 * C23988 +
            (C23994 * C147 + C24012 + C24012 + C153761 * C163 + C23992 * C146 +
             C24013 + C24013 + C153790 * C162 + C23990 * C145 + C24014 +
             C24014 + C153809 * C161) *
                C153513 * C23987) *
               C153413 * C310 -
           ((C23994 * C2992 + C24296 + C24296 + C153761 * C3000 +
             C23992 * C2991 + C24297 + C24297 + C153790 * C2999 +
             C23990 * C2990 + C24298 + C24298 + C153809 * C2998) *
                C153513 * C153774 +
            (C24352 + C24351 + C24350) * C153513 * C23988 + C24358 * C23987) *
               C153413 * C312) *
              C153384)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153513 *
               C28229 +
           (C28234 * C319 + C28238 + C28238 + C153338 * C343) * C153513 *
               C28230 +
           (C28234 * C320 + C28239 + C28239 + C153338 * C344) * C153513 *
               C28231 +
           (C28234 * C1227 + C28240 + C28240 + C153338 * C1237) * C153513 *
               C28232 +
           (C28234 * C2989 + C28241 + C28241 + C153338 * C2997) * C153513 *
               C28233) *
              C153413 * C153397 * C130 -
          ((C28234 * C2990 + C28242 + C28242 + C153338 * C2998) * C153513 *
               C28233 +
           (C28234 * C1226 + C28243 + C28243 + C153338 * C1236) * C153513 *
               C28232 +
           (C28234 * C321 + C28244 + C28244 + C153338 * C345) * C153513 *
               C28231 +
           (C28234 * C318 + C28245 + C28245 + C153338 * C342) * C153513 *
               C28230 +
           (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C153513 *
               C28229) *
              C153413 * C153397 * C131 +
          ((C28234 * C146 + C28247 + C28247 + C153338 * C162) * C153513 *
               C28229 +
           (C28234 * C317 + C28248 + C28248 + C153338 * C341) * C153513 *
               C28230 +
           (C28234 * C322 + C28249 + C28249 + C153338 * C346) * C153513 *
               C28231 +
           (C28234 * C1225 + C28250 + C28250 + C153338 * C1235) * C153513 *
               C28232 +
           (C28234 * C2991 + C28251 + C28251 + C153338 * C2999) * C153513 *
               C28233) *
              C153413 * C153397 * C132 -
          ((C28234 * C2992 + C28252 + C28252 + C153338 * C3000) * C153513 *
               C28233 +
           (C28234 * C1224 + C28253 + C28253 + C153338 * C1234) * C153513 *
               C28232 +
           (C28234 * C323 + C28254 + C28254 + C153338 * C347) * C153513 *
               C28231 +
           (C28234 * C316 + C28255 + C28255 + C153338 * C340) * C153513 *
               C28230 +
           (C28234 * C147 + C28256 + C28256 + C153338 * C163) * C153513 *
               C28229) *
              C153413 * C153397 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153513 *
                C28229 +
            C28439 * C28230 + C28440 * C28231 + C28441 * C28232 +
            C28442 * C28233) *
               C153413 * C310 -
           (C28443 * C28233 + C28442 * C28232 + C28441 * C28231 +
            C28440 * C28230 + C28439 * C28229) *
               C153413 * C311 +
           (C28440 * C28229 + C28441 * C28230 + C28442 * C28231 +
            C28443 * C28232 +
            (C28234 * C28378 + C28396 + C28396 + C153338 * C28382) * C153513 *
                C28233) *
               C153413 * C312) *
              C313 +
          ((C28444 * C28229 + C28445 * C28230 + C28446 * C28231 +
            C28447 * C28232 + C28448 * C28233) *
               C153413 * C311 -
           (C28447 * C28233 + C28446 * C28232 + C28445 * C28231 +
            C28444 * C28230 +
            (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C153513 *
                C28229) *
               C153413 * C310 -
           ((C28234 * C28379 + C28408 + C28408 + C153338 * C28383) * C153513 *
                C28233 +
            C28448 * C28232 + C28447 * C28231 + C28446 * C28230 +
            C28445 * C28229) *
               C153413 * C312) *
              C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153813 +
            (C28234 * C500 + C28581 + C28581 + C153338 * C524) * C153802 +
            (C28234 * C501 + C28582 + C28582 + C153338 * C525) * C153777) *
               C23987 +
           (C28429 * C153813 + C29076 * C153802 + C29445 * C153777) * C23988 +
           (C28430 * C153813 + C29075 * C153802 + C29446 * C153777) * C153774) *
              C153413 * C153397 * C130 -
          (((C28234 * C3328 + C28594 + C28594 + C153338 * C3336) * C153777 +
            C29078 * C153802 + C28435 * C153813) *
               C153774 +
           ((C28234 * C1368 + C28595 + C28595 + C153338 * C1378) * C153777 +
            C29077 * C153802 + C28434 * C153813) *
               C23988 +
           ((C28234 * C502 + C28596 + C28596 + C153338 * C526) * C153777 +
            (C28234 * C499 + C28587 + C28587 + C153338 * C523) * C153802 +
            (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C153813) *
               C23987) *
              C153413 * C153397 * C131 +
          (((C28234 * C146 + C28247 + C28247 + C153338 * C162) * C153813 +
            (C28234 * C498 + C28870 + C28870 + C153338 * C522) * C153802 +
            (C28234 * C503 + C30758 + C30758 + C153338 * C527) * C153777) *
               C23987 +
           (C28736 * C153813 +
            (C28234 * C983 + C28869 + C28869 + C153338 * C995) * C153802 +
            (C28234 * C1367 + C30759 + C30759 + C153338 * C1377) * C153777) *
               C23988 +
           (C28737 * C153813 +
            (C28234 * C1798 + C28868 + C28868 + C153338 * C1808) * C153802 +
            (C28234 * C3329 + C30760 + C30760 + C153338 * C3337) * C153777) *
               C153774) *
              C153413 * C153397 * C132 -
          (((C28234 * C3330 + C30761 + C30761 + C153338 * C3338) * C153777 +
            (C28234 * C1797 + C30762 + C30762 + C153338 * C1807) * C153802 +
            (C28234 * C323 + C28254 + C28254 + C153338 * C347) * C153813) *
               C153774 +
           ((C28234 * C1366 + C30763 + C30763 + C153338 * C1376) * C153777 +
            (C28234 * C984 + C30764 + C30764 + C153338 * C996) * C153802 +
            (C28234 * C316 + C28255 + C28255 + C153338 * C340) * C153813) *
               C23988 +
           ((C28234 * C504 + C30765 + C30765 + C153338 * C528) * C153777 +
            (C28234 * C497 + C30766 + C30766 + C153338 * C521) * C153802 +
            (C28234 * C147 + C28256 + C28256 + C153338 * C163) * C153813) *
               C23987) *
              C153413 * C153397 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153813 +
             (C28234 * C500 + C28581 + C28581 + C153338 * C524) * C153802 +
             (C28234 * C501 + C28582 + C28582 + C153338 * C525) * C153777) *
                C23987 +
            (C30985 + C30986 + C30987) * C23988 + C31011 * C153774) *
               C153413 * C310 -
           ((C30991 + C30992 + C30993) * C153774 +
            (C30990 + C30989 + C30988) * C23988 +
            (C30987 + C30986 + C30985) * C23987) *
               C153413 * C311 +
           (C31011 * C23987 + (C30993 + C30992 + C30991) * C23988 +
            (C28432 * C153813 + C29073 * C153802 + C29448 * C153777) *
                C153774) *
               C153413 * C312) *
              C313 +
          (((C30994 + C30995 + C31018) * C23987 +
            (C30998 + C30999 + C31019) * C23988 +
            (C31002 + C31003 + C31020) * C153774) *
               C153413 * C311 -
           (C31021 * C153774 + (C31018 + C30995 + C30994) * C23988 +
            ((C28234 * C502 + C28596 + C28596 + C153338 * C526) * C153777 +
             (C28234 * C499 + C28587 + C28587 + C153338 * C523) * C153802 +
             (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C153813) *
                C23987) *
               C153413 * C310 -
           (((C28234 * C28571 + C28592 + C28592 + C153338 * C28575) * C153777 +
             C29080 * C153802 + C28437 * C153813) *
                C153774 +
            (C31020 + C31003 + C31002) * C23988 + C31021 * C23987) *
               C153413 * C312) *
              C153384)) /
            (p * q * std::sqrt(p + q));
    d2ee[335] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 +
             C2737 + C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
             C153761 * C162) *
                C153513 * C153812 +
            (C3086 + C3087 + C3088) * C153513 * C153800 + C3108 * C153774) *
               C153413 * C153795 -
           (C4609 * C153774 + (C3091 + C3090 + C3089) * C153513 * C153800 +
            (C3088 + C3087 + C3086) * C153513 * C153812) *
               C153413 * C153796 +
           (C3108 * C153812 + (C3094 + C3093 + C3092) * C153513 * C153800 +
            (C4613 + C4614 + C4615) * C153513 * C153774) *
               C153413 * C1509) *
              C153716 +
          (((C3095 + C3096 + C3097) * C153513 * C153812 +
            (C3098 + C3099 + C3100) * C153513 * C153800 +
            (C3101 + C3102 + C3103) * C153513 * C153774) *
               C153413 * C153796 -
           (C3109 * C153774 + (C3097 + C3096 + C3095) * C153513 * C153800 +
            (C2733 * C147 + C2751 + C2751 + C153761 * C163 + C2731 * C146 +
             C2752 + C2752 + C2724 * C162 + C2729 * C145 + C2753 + C2753 +
             C2723 * C161) *
                C153513 * C153812) *
               C153413 * C153795 -
           ((C2733 * C2992 + C3047 + C3047 + C153761 * C3000 + C2731 * C2991 +
             C3048 + C3048 + C2724 * C2999 + C2729 * C2990 + C3049 + C3049 +
             C2723 * C2998) *
                C153513 * C153774 +
            (C3103 + C3102 + C3101) * C153513 * C153800 + C3109 * C153812) *
               C153413 * C1509) *
              C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C144 + C169 + C169 + C121 * C160 + C136 * C145 + C170 +
            C170 + C122 * C161 + C138 * C146 + C171 + C171 + C123 * C162 +
            C140 * C147 + C172 + C172 + C124 * C163 + C142 * C148 + C173 +
            C173 + C125 * C164) *
               C153513 * C153501 * C153413 * C153795 -
           (C142 * C315 + C352 + C352 + C125 * C339 + C140 * C316 + C353 +
            C353 + C124 * C340 + C138 * C317 + C354 + C354 + C123 * C341 +
            C136 * C318 + C355 + C355 + C122 * C342 + C134 * C319 + C356 +
            C356 + C121 * C343) *
               C153513 * C153501 * C153413 * C153796 +
           (C134 * C320 + C357 + C357 + C121 * C344 + C136 * C321 + C358 +
            C358 + C122 * C345 + C138 * C322 + C359 + C359 + C123 * C346 +
            C140 * C323 + C360 + C360 + C124 * C347 + C142 * C324 + C361 +
            C361 + C125 * C348) *
               C153513 * C153501 * C153413 * C1509) *
              C153716 +
          ((C134 * C318 + C362 + C362 + C121 * C342 + C136 * C317 + C363 +
            C363 + C122 * C341 + C138 * C316 + C364 + C364 + C123 * C340 +
            C140 * C315 + C365 + C365 + C124 * C339 + C142 * C325 + C366 +
            C366 + C125 * C349) *
               C153513 * C153501 * C153413 * C153796 -
           (C142 * C149 + C174 + C174 + C125 * C165 + C140 * C148 + C175 +
            C175 + C124 * C164 + C138 * C147 + C176 + C176 + C123 * C163 +
            C136 * C146 + C177 + C177 + C122 * C162 + C134 * C145 + C178 +
            C178 + C121 * C161) *
               C153513 * C153501 * C153413 * C153795 -
           (C142 * C326 + C367 + C367 + C125 * C350 + C140 * C324 + C368 +
            C368 + C124 * C348 + C138 * C323 + C369 + C369 + C123 * C347 +
            C136 * C322 + C370 + C370 + C122 * C346 + C134 * C321 + C371 +
            C371 + C121 * C345) *
               C153513 * C153501 * C153413 * C1509) *
              C153384)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 +
             C2737 + C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
             C153761 * C162) *
                C153813 +
            (C7654 + C7655 + C7656) * C153802 + C7674 * C153777) *
               C153501 * C153413 * C153795 -
           (C9063 * C153777 + (C4213 + C4214 + C4215) * C153802 +
            (C3088 + C3087 + C3086) * C153813) *
               C153501 * C153413 * C153796 +
           (C3106 * C153813 + (C4212 + C4211 + C4210) * C153802 +
            (C4873 + C4874 + C4875) * C153777) *
               C153501 * C153413 * C1509) *
              C153716 +
          (((C3095 + C3096 + C3097) * C153813 +
            (C4216 + C4217 + C4218) * C153802 +
            (C8456 + C8457 + C8458) * C153777) *
               C153501 * C153413 * C153796 -
           (C7675 * C153777 + (C7665 + C7664 + C7663) * C153802 +
            (C2733 * C147 + C2751 + C2751 + C153761 * C163 + C2731 * C146 +
             C2752 + C2752 + C2724 * C162 + C2729 * C145 + C2753 + C2753 +
             C2723 * C161) *
                C153813) *
               C153501 * C153413 * C153795 -
           ((C2733 * C3330 + C3367 + C3367 + C153761 * C3338 + C2731 * C3329 +
             C3368 + C3368 + C2724 * C3337 + C2729 * C3328 + C3369 + C3369 +
             C2723 * C3336) *
                C153777 +
            (C4221 + C4220 + C4219) * C153802 + C3107 * C153813) *
               C153501 * C153413 * C1509) *
              C153384)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
             C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 +
             C23999 + C153761 * C162) *
                C153513 * C23987 +
            (C24335 + C24336 + C24337) * C153513 * C23988 + C24357 * C153774) *
               C153413 * C153795 -
           (C25825 * C153774 + (C24340 + C24339 + C24338) * C153513 * C23988 +
            (C24337 + C24336 + C24335) * C153513 * C23987) *
               C153413 * C153796 +
           (C24357 * C23987 + (C24343 + C24342 + C24341) * C153513 * C23988 +
            (C25829 + C25830 + C25831) * C153513 * C153774) *
               C153413 * C1509) *
              C153716 +
          (((C24344 + C24345 + C24346) * C153513 * C23987 +
            (C24347 + C24348 + C24349) * C153513 * C23988 +
            (C24350 + C24351 + C24352) * C153513 * C153774) *
               C153413 * C153796 -
           (C24358 * C153774 + (C24346 + C24345 + C24344) * C153513 * C23988 +
            (C23994 * C147 + C24012 + C24012 + C153761 * C163 + C23992 * C146 +
             C24013 + C24013 + C153790 * C162 + C23990 * C145 + C24014 +
             C24014 + C153809 * C161) *
                C153513 * C23987) *
               C153413 * C153795 -
           ((C23994 * C2992 + C24296 + C24296 + C153761 * C3000 +
             C23992 * C2991 + C24297 + C24297 + C153790 * C2999 +
             C23990 * C2990 + C24298 + C24298 + C153809 * C2998) *
                C153513 * C153774 +
            (C24352 + C24351 + C24350) * C153513 * C23988 + C24358 * C23987) *
               C153413 * C1509) *
              C153384)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153513 *
                C28229 +
            C28439 * C28230 + C28440 * C28231 + C28441 * C28232 +
            C28442 * C28233) *
               C153413 * C153795 -
           (C28443 * C28233 + C28442 * C28232 + C28441 * C28231 +
            C28440 * C28230 + C28439 * C28229) *
               C153413 * C153796 +
           (C28440 * C28229 + C28441 * C28230 + C28442 * C28231 +
            C28443 * C28232 + C29302 * C28233) *
               C153413 * C1509) *
              C153716 +
          ((C28444 * C28229 + C28445 * C28230 + C28446 * C28231 +
            C28447 * C28232 + C28448 * C28233) *
               C153413 * C153796 -
           (C28447 * C28233 + C28446 * C28232 + C28445 * C28231 +
            C28444 * C28230 +
            (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C153513 *
                C28229) *
               C153413 * C153795 -
           ((C28234 * C28379 + C28408 + C28408 + C153338 * C28383) * C153513 *
                C28233 +
            C28448 * C28232 + C28447 * C28231 + C28446 * C28230 +
            C28445 * C28229) *
               C153413 * C1509) *
              C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153813 +
             C31295 * C153802 + C31296 * C153777) *
                C23987 +
            (C30985 + C30986 + C30987) * C23988 + C31011 * C153774) *
               C153413 * C153795 -
           (C32455 * C153774 + (C30990 + C30989 + C30988) * C23988 +
            (C30987 + C30986 + C30985) * C23987) *
               C153413 * C153796 +
           (C31011 * C23987 + (C30993 + C30992 + C30991) * C23988 +
            (C32452 + C32453 + C32454) * C153774) *
               C153413 * C1509) *
              C153716 +
          (((C30994 + C30995 + C31018) * C23987 +
            (C30998 + C30999 + C31019) * C23988 +
            (C31002 + C31003 + C31020) * C153774) *
               C153413 * C153796 -
           (C31021 * C153774 + (C31018 + C30995 + C30994) * C23988 +
            (C31301 * C153777 + C31300 * C153802 +
             (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C153813) *
                C23987) *
               C153413 * C153795 -
           (((C28234 * C28571 + C28592 + C28592 + C153338 * C28575) * C153777 +
             C29080 * C153802 + C28437 * C153813) *
                C153774 +
            (C31020 + C31003 + C31002) * C23988 + C31021 * C23987) *
               C153413 * C1509) *
              C153384)) /
            (p * q * std::sqrt(p + q));
    d2ee[336] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 +
             C2737 + C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
             C153761 * C162) *
                C153513 * C153812 +
            (C3086 + C3087 + C3088) * C153513 * C153800 + C3108 * C153774) *
               C153725 -
           (C5625 * C153774 + (C4213 + C4214 + C4215) * C153513 * C153800 +
            (C2733 * C498 + C3346 + C3346 + C153761 * C522 + C2731 * C499 +
             C3347 + C3347 + C2724 * C523 + C2729 * C500 + C3348 + C3348 +
             C2723 * C524) *
                C153513 * C153812) *
               C153477) *
              C153795 +
          (((C4215 + C4214 + C4213) * C153513 * C153812 +
            (C4212 + C4211 + C4210) * C153513 * C153800 +
            (C5629 + C5630 + C5631) * C153513 * C153774) *
               C153477 -
           (C4609 * C153774 + (C3091 + C3090 + C3089) * C153513 * C153800 +
            (C3088 + C3087 + C3086) * C153513 * C153812) *
               C153725) *
              C153796 +
          ((C3108 * C153812 + (C3094 + C3093 + C3092) * C153513 * C153800 +
            (C4613 + C4614 + C4615) * C153513 * C153774) *
               C153725 -
           ((C2733 * C5601 + C5618 + C5618 + C153761 * C5607 + C2731 * C5602 +
             C5619 + C5619 + C2724 * C5608 + C2729 * C5603 + C5620 + C5620 +
             C2723 * C5609) *
                C153513 * C153774 +
            (C5631 + C5630 + C5629) * C153513 * C153800 + C5625 * C153812) *
               C153477) *
              C1509) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C144 + C169 + C169 + C121 * C160 + C136 * C145 + C170 +
            C170 + C122 * C161 + C138 * C146 + C171 + C171 + C123 * C162 +
            C140 * C147 + C172 + C172 + C124 * C163 + C142 * C148 + C173 +
            C173 + C125 * C164) *
               C153513 * C153501 * C153725 -
           (C142 * C496 + C533 + C533 + C125 * C520 + C140 * C497 + C534 +
            C534 + C124 * C521 + C138 * C498 + C535 + C535 + C123 * C522 +
            C136 * C499 + C536 + C536 + C122 * C523 + C134 * C500 + C537 +
            C537 + C121 * C524) *
               C153513 * C153501 * C153477) *
              C153795 +
          ((C134 * C981 + C1000 + C1000 + C121 * C993 + C136 * C982 + C1001 +
            C1001 + C122 * C994 + C138 * C983 + C1002 + C1002 + C123 * C995 +
            C140 * C984 + C1003 + C1003 + C124 * C996 + C142 * C985 + C1004 +
            C1004 + C125 * C997) *
               C153513 * C153501 * C153477 -
           (C142 * C315 + C352 + C352 + C125 * C339 + C140 * C316 + C353 +
            C353 + C124 * C340 + C138 * C317 + C354 + C354 + C123 * C341 +
            C136 * C318 + C355 + C355 + C122 * C342 + C134 * C319 + C356 +
            C356 + C121 * C343) *
               C153513 * C153501 * C153725) *
              C153796 +
          ((C134 * C320 + C357 + C357 + C121 * C344 + C136 * C321 + C358 +
            C358 + C122 * C345 + C138 * C322 + C359 + C359 + C123 * C346 +
            C140 * C323 + C360 + C360 + C124 * C347 + C142 * C324 + C361 +
            C361 + C125 * C348) *
               C153513 * C153501 * C153725 -
           (C142 * C1796 + C1812 + C1812 + C125 * C1806 + C140 * C1797 + C1813 +
            C1813 + C124 * C1807 + C138 * C1798 + C1814 + C1814 + C123 * C1808 +
            C136 * C1799 + C1815 + C1815 + C122 * C1809 + C134 * C1800 + C1816 +
            C1816 + C121 * C1810) *
               C153513 * C153501 * C153477) *
              C1509) *
         C153378) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 +
             C2737 + C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
             C153761 * C162) *
                C153813 +
            (C7654 + C7655 + C7656) * C153802 + C7674 * C153777) *
               C153501 * C153725 -
           ((C7660 + C7661 + C7662) * C153777 +
            (C7659 + C7658 + C7657) * C153802 +
            (C7656 + C7655 + C7654) * C153813) *
               C153501 * C153477) *
              C153795 +
          (((C4215 + C4214 + C4213) * C153813 +
            (C4870 + C4871 + C4872) * C153802 +
            (C9067 + C9068 + C9069) * C153777) *
               C153501 * C153477 -
           (C9063 * C153777 + (C4213 + C4214 + C4215) * C153802 +
            (C3088 + C3087 + C3086) * C153813) *
               C153501 * C153725) *
              C153796 +
          ((C3106 * C153813 + (C4212 + C4211 + C4210) * C153802 +
            (C4873 + C4874 + C4875) * C153777) *
               C153501 * C153725 -
           ((C2733 * C6213 + C6232 + C6232 + C153761 * C6225 + C2731 * C6214 +
             C6233 + C6233 + C2724 * C6226 + C2729 * C6215 + C6234 + C6234 +
             C2723 * C6227) *
                C153777 +
            (C4875 + C4874 + C4873) * C153802 + C5621 * C153813) *
               C153501 * C153477) *
              C1509) *
         C153378) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
             C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 +
             C23999 + C153761 * C162) *
                C153513 * C23987 +
            (C24335 + C24336 + C24337) * C153513 * C23988 + C24357 * C153774) *
               C153725 -
           (C26823 * C153774 + (C25438 + C25439 + C25440) * C153513 * C23988 +
            (C23994 * C498 + C24583 + C24583 + C153761 * C522 + C23992 * C499 +
             C24584 + C24584 + C153790 * C523 + C23990 * C500 + C24585 +
             C24585 + C153809 * C524) *
                C153513 * C23987) *
               C153477) *
              C153795 +
          (((C25440 + C25439 + C25438) * C153513 * C23987 +
            (C25437 + C25436 + C25435) * C153513 * C23988 +
            (C26827 + C26828 + C26829) * C153513 * C153774) *
               C153477 -
           (C25825 * C153774 + (C24340 + C24339 + C24338) * C153513 * C23988 +
            (C24337 + C24336 + C24335) * C153513 * C23987) *
               C153725) *
              C153796 +
          ((C24357 * C23987 + (C24343 + C24342 + C24341) * C153513 * C23988 +
            (C25829 + C25830 + C25831) * C153513 * C153774) *
               C153725 -
           ((C23994 * C5601 + C26816 + C26816 + C153761 * C5607 +
             C23992 * C5602 + C26817 + C26817 + C153790 * C5608 +
             C23990 * C5603 + C26818 + C26818 + C153809 * C5609) *
                C153513 * C153774 +
            (C26829 + C26828 + C26827) * C153513 * C23988 + C26823 * C23987) *
               C153477) *
              C1509) *
         C153378) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153513 *
                C28229 +
            C28439 * C28230 + C28440 * C28231 + C28441 * C28232 +
            C28442 * C28233) *
               C153725 -
           (C29081 * C28233 + C29082 * C28232 + C29083 * C28231 +
            C29084 * C28230 +
            (C28234 * C500 + C28581 + C28581 + C153338 * C524) * C153513 *
                C28229) *
               C153477) *
              C153795 +
          ((C29084 * C28229 + C29083 * C28230 + C29082 * C28231 +
            C29081 * C28232 + C29868 * C28233) *
               C153477 -
           (C28443 * C28233 + C28442 * C28232 + C28441 * C28231 +
            C28440 * C28230 + C28439 * C28229) *
               C153725) *
              C153796 +
          ((C28440 * C28229 + C28441 * C28230 + C28442 * C28231 +
            C28443 * C28232 + C29302 * C28233) *
               C153725 -
           ((C28234 * C29858 + C29864 + C29864 + C153338 * C29860) * C153513 *
                C28233 +
            C29868 * C28232 + C29081 * C28231 + C29082 * C28230 +
            C29083 * C28229) *
               C153477) *
              C1509) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153813 +
             C31295 * C153802 + C31296 * C153777) *
                C23987 +
            (C30985 + C30986 + C30987) * C23988 + C31011 * C153774) *
               C153725 -
           (C33429 * C153774 + (C32077 + C32078 + C32079) * C23988 +
            (C31299 * C153777 + C31296 * C153802 + C31295 * C153813) * C23987) *
               C153477) *
              C153795 +
          (((C32079 + C32078 + C32077) * C23987 +
            (C32076 + C32075 + C32074) * C23988 +
            (C33426 + C33427 + C33428) * C153774) *
               C153477 -
           (C32455 * C153774 + (C30990 + C30989 + C30988) * C23988 +
            (C30987 + C30986 + C30985) * C23987) *
               C153725) *
              C153796 +
          ((C31011 * C23987 + (C30993 + C30992 + C30991) * C23988 +
            (C32452 + C32453 + C32454) * C153774) *
               C153725 -
           (((C28234 * C30194 + C30201 + C30201 + C153338 * C30198) * C153777 +
             C29448 * C153802 + C29073 * C153813) *
                C153774 +
            (C33428 + C33427 + C33426) * C23988 + C33429 * C23987) *
               C153477) *
              C1509) *
         C153378) /
            (p * q * std::sqrt(p + q));
    d2ee[337] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             (((C134 * C144 + C169 + C169 + C121 * C160 + C136 * C145 + C170 +
                C170 + C122 * C161 + C138 * C146 + C171 + C171 + C123 * C162 +
                C140 * C147 + C172 + C172 + C124 * C163 + C142 * C148 + C173 +
                C173 + C125 * C164) *
                   C153513 * C153501 * C153413 * C1131 -
               (C142 * C315 + C352 + C352 + C125 * C339 + C140 * C316 + C353 +
                C353 + C124 * C340 + C138 * C317 + C354 + C354 + C123 * C341 +
                C136 * C318 + C355 + C355 + C122 * C342 + C134 * C319 + C356 +
                C356 + C121 * C343) *
                   C153513 * C153501 * C153413 * C153449) *
                  C1133 +
              ((C134 * C318 + C362 + C362 + C121 * C342 + C136 * C317 + C363 +
                C363 + C122 * C341 + C138 * C316 + C364 + C364 + C123 * C340 +
                C140 * C315 + C365 + C365 + C124 * C339 + C142 * C325 + C366 +
                C366 + C125 * C349) *
                   C153513 * C153501 * C153413 * C153449 -
               (C142 * C149 + C174 + C174 + C125 * C165 + C140 * C148 + C175 +
                C175 + C124 * C164 + C138 * C147 + C176 + C176 + C123 * C163 +
                C136 * C146 + C177 + C177 + C122 * C162 + C134 * C145 + C178 +
                C178 + C121 * C161) *
                   C153513 * C153501 * C153413 * C1131) *
                  C1134 +
              ((C134 * C146 + C179 + C179 + C121 * C162 + C136 * C147 + C180 +
                C180 + C122 * C163 + C138 * C148 + C181 + C181 + C123 * C164 +
                C140 * C149 + C182 + C182 + C124 * C165 + C142 * C150 + C183 +
                C183 + C125 * C166) *
                   C153513 * C153501 * C153413 * C1131 -
               (C142 * C679 + C683 + C683 + C125 * C681 + C140 * C325 + C684 +
                C684 + C124 * C349 + C138 * C315 + C685 + C685 + C123 * C339 +
                C136 * C316 + C686 + C686 + C122 * C340 + C134 * C317 + C687 +
                C687 + C121 * C341) *
                   C153513 * C153501 * C153413 * C153449) *
                  C1135) +
         std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             ((C134 * C144 + C169 + C169 + C121 * C160 + C136 * C145 + C170 +
               C170 + C122 * C161 + C138 * C146 + C171 + C171 + C123 * C162 +
               C140 * C147 + C172 + C172 + C124 * C163 + C142 * C148 + C173 +
               C173 + C125 * C164) *
                  C153513 * C153501 * C153413 * C1218 -
              (C142 * C315 + C352 + C352 + C125 * C339 + C140 * C316 + C353 +
               C353 + C124 * C340 + C138 * C317 + C354 + C354 + C123 * C341 +
               C136 * C318 + C355 + C355 + C122 * C342 + C134 * C319 + C356 +
               C356 + C121 * C343) *
                  C153513 * C153501 * C153413 * C1219 +
              (C134 * C320 + C357 + C357 + C121 * C344 + C136 * C321 + C358 +
               C358 + C122 * C345 + C138 * C322 + C359 + C359 + C123 * C346 +
               C140 * C323 + C360 + C360 + C124 * C347 + C142 * C324 + C361 +
               C361 + C125 * C348) *
                  C153513 * C153501 * C153413 * C1220 -
              (C142 * C1223 + C1239 + C1239 + C125 * C1233 + C140 * C1224 +
               C1240 + C1240 + C124 * C1234 + C138 * C1225 + C1241 + C1241 +
               C123 * C1235 + C136 * C1226 + C1242 + C1242 + C122 * C1236 +
               C134 * C1227 + C1243 + C1243 + C121 * C1237) *
                  C153513 * C153501 * C153413 * C1221) *
             C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C144 + C169 + C169 + C121 * C160 + C136 * C145 + C170 +
            C170 + C122 * C161 + C138 * C146 + C171 + C171 + C123 * C162 +
            C140 * C147 + C172 + C172 + C124 * C163 + C142 * C148 + C173 +
            C173 + C125 * C164) *
               C153513 * C153501 * C493 -
           (C142 * C496 + C533 + C533 + C125 * C520 + C140 * C497 + C534 +
            C534 + C124 * C521 + C138 * C498 + C535 + C535 + C123 * C522 +
            C136 * C499 + C536 + C536 + C122 * C523 + C134 * C500 + C537 +
            C537 + C121 * C524) *
               C153513 * C153501 * C494 +
           (C134 * C501 + C538 + C538 + C121 * C525 + C136 * C502 + C539 +
            C539 + C122 * C526 + C138 * C503 + C540 + C540 + C123 * C527 +
            C140 * C504 + C541 + C541 + C124 * C528 + C142 * C505 + C542 +
            C542 + C125 * C529) *
               C153513 * C153501 * C495) *
              C1131 +
          ((C134 * C981 + C1000 + C1000 + C121 * C993 + C136 * C982 + C1001 +
            C1001 + C122 * C994 + C138 * C983 + C1002 + C1002 + C123 * C995 +
            C140 * C984 + C1003 + C1003 + C124 * C996 + C142 * C985 + C1004 +
            C1004 + C125 * C997) *
               C153513 * C153501 * C494 -
           (C142 * C315 + C352 + C352 + C125 * C339 + C140 * C316 + C353 +
            C353 + C124 * C340 + C138 * C317 + C354 + C354 + C123 * C341 +
            C136 * C318 + C355 + C355 + C122 * C342 + C134 * C319 + C356 +
            C356 + C121 * C343) *
               C153513 * C153501 * C493 -
           (C142 * C1365 + C1381 + C1381 + C125 * C1375 + C140 * C1366 + C1382 +
            C1382 + C124 * C1376 + C138 * C1367 + C1383 + C1383 + C123 * C1377 +
            C136 * C1368 + C1384 + C1384 + C122 * C1378 + C134 * C1369 + C1385 +
            C1385 + C121 * C1379) *
               C153513 * C153501 * C495) *
              C153449) *
         C153378) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 +
             C2737 + C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
             C153761 * C162) *
                C153513 * C153812 +
            (C3086 + C3087 + C3088) * C153513 * C153800 + C3108 * C153774) *
               C153413 * C1131 -
           ((C3092 + C3093 + C3094) * C153513 * C153774 +
            (C3091 + C3090 + C3089) * C153513 * C153800 +
            (C3088 + C3087 + C3086) * C153513 * C153812) *
               C153413 * C153449) *
              C1133 +
          (((C3095 + C3096 + C3097) * C153513 * C153812 +
            (C3098 + C3099 + C3100) * C153513 * C153800 +
            (C3101 + C3102 + C3103) * C153513 * C153774) *
               C153413 * C153449 -
           (C3109 * C153774 + (C3097 + C3096 + C3095) * C153513 * C153800 +
            (C2733 * C147 + C2751 + C2751 + C153761 * C163 + C2731 * C146 +
             C2752 + C2752 + C2724 * C162 + C2729 * C145 + C2753 + C2753 +
             C2723 * C161) *
                C153513 * C153812) *
               C153413 * C1131) *
              C1134 +
          (((C2729 * C146 + C2754 + C2754 + C2723 * C162 + C2731 * C147 +
             C2755 + C2755 + C2724 * C163 + C2733 * C148 + C2756 + C2756 +
             C153761 * C164) *
                C153513 * C153812 +
            (C3621 + C3622 + C3623) * C153513 * C153800 +
            (C3624 + C3625 + C3626) * C153513 * C153774) *
               C153413 * C1131 -
           ((C2733 * C1223 + C3606 + C3606 + C153761 * C1233 + C2731 * C1224 +
             C3607 + C3607 + C2724 * C1234 + C2729 * C1225 + C3608 + C3608 +
             C2723 * C1235) *
                C153513 * C153774 +
            (C3626 + C3625 + C3624) * C153513 * C153800 +
            (C3623 + C3622 + C3621) * C153513 * C153812) *
               C153413 * C153449) *
              C1135)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 + C2737 +
            C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
            C153761 * C162) *
               C153513 * C153812 +
           (C3086 + C3087 + C3088) * C153513 * C153800 + C3108 * C153774) *
              C153413 * C1218 -
          (C4609 * C153774 + (C3091 + C3090 + C3089) * C153513 * C153800 +
           (C3088 + C3087 + C3086) * C153513 * C153812) *
              C153413 * C1219 +
          (C3108 * C153812 + (C3094 + C3093 + C3092) * C153513 * C153800 +
           (C4613 + C4614 + C4615) * C153513 * C153774) *
              C153413 * C1220 -
          ((C2733 * C4585 + C4602 + C4602 + C153761 * C4591 + C2731 * C4586 +
            C4603 + C4603 + C2724 * C4592 + C2729 * C4587 + C4604 + C4604 +
            C2723 * C4593) *
               C153513 * C153774 +
           (C4615 + C4614 + C4613) * C153513 * C153800 + C4609 * C153812) *
              C153413 * C1221) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 +
             C2737 + C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
             C153761 * C162) *
                C153513 * C153812 +
            (C3086 + C3087 + C3088) * C153513 * C153800 + C3108 * C153774) *
               C493 -
           ((C4210 + C4211 + C4212) * C153513 * C153774 +
            (C4213 + C4214 + C4215) * C153513 * C153800 +
            (C2733 * C498 + C3346 + C3346 + C153761 * C522 + C2731 * C499 +
             C3347 + C3347 + C2724 * C523 + C2729 * C500 + C3348 + C3348 +
             C2723 * C524) *
                C153513 * C153812) *
               C494 +
           ((C2729 * C501 + C3349 + C3349 + C2723 * C525 + C2731 * C502 +
             C3350 + C3350 + C2724 * C526 + C2733 * C503 + C3351 + C3351 +
             C153761 * C527) *
                C153513 * C153812 +
            (C4870 + C4871 + C4872) * C153513 * C153800 +
            (C4873 + C4874 + C4875) * C153513 * C153774) *
               C495) *
              C1131 +
          (((C4215 + C4214 + C4213) * C153513 * C153812 +
            (C4212 + C4211 + C4210) * C153513 * C153800 +
            (C2729 * C4143 + C4168 + C4168 + C2723 * C4151 + C2731 * C4144 +
             C4169 + C4169 + C2724 * C4152 + C2733 * C4145 + C4170 + C4170 +
             C153761 * C4153) *
                C153513 * C153774) *
               C494 -
           (C4609 * C153774 + (C3091 + C3090 + C3089) * C153513 * C153800 +
            (C3088 + C3087 + C3086) * C153513 * C153812) *
               C493 -
           ((C2733 * C4833 + C4855 + C4855 + C153761 * C4839 + C2731 * C4834 +
             C4856 + C4856 + C2724 * C4840 + C2729 * C4835 + C4857 + C4857 +
             C2723 * C4841) *
                C153513 * C153774 +
            (C4875 + C4874 + C4873) * C153513 * C153800 +
            (C4872 + C4871 + C4870) * C153513 * C153812) *
               C495) *
              C153449) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 +
             C2737 + C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
             C153761 * C162) *
                C153813 +
            (C7654 + C7655 + C7656) * C153802 + C7674 * C153777) *
               C153501 * C153413 * C1131 -
           ((C4872 + C4871 + C4870) * C153777 +
            (C4213 + C4214 + C4215) * C153802 +
            (C3088 + C3087 + C3086) * C153813) *
               C153501 * C153413 * C153449) *
              C1133 +
          (((C3095 + C3096 + C3097) * C153813 +
            (C4216 + C4217 + C4218) * C153802 +
            (C8456 + C8457 + C8458) * C153777) *
               C153501 * C153413 * C153449 -
           (C7675 * C153777 + (C7665 + C7664 + C7663) * C153802 +
            (C2733 * C147 + C2751 + C2751 + C153761 * C163 + C2731 * C146 +
             C2752 + C2752 + C2724 * C162 + C2729 * C145 + C2753 + C2753 +
             C2723 * C161) *
                C153813) *
               C153501 * C153413 * C1131) *
              C1134 +
          (((C2729 * C146 + C2754 + C2754 + C2723 * C162 + C2731 * C147 +
             C2755 + C2755 + C2724 * C163 + C2733 * C148 + C2756 + C2756 +
             C153761 * C164) *
                C153813 +
            (C8142 + C8143 + C8144) * C153802 +
            (C8145 + C8146 + C8147) * C153777) *
               C153501 * C153413 * C1131 -
           ((C2733 * C1365 + C7894 + C7894 + C153761 * C1375 + C2731 * C1366 +
             C7895 + C7895 + C2724 * C1376 + C2729 * C1367 + C7896 + C7896 +
             C2723 * C1377) *
                C153777 +
            (C2733 * C985 + C3848 + C3848 + C153761 * C997 + C2731 * C984 +
             C3849 + C3849 + C2724 * C996 + C2729 * C983 + C3850 + C3850 +
             C2723 * C995) *
                C153802 +
            (C3623 + C3622 + C3621) * C153813) *
               C153501 * C153413 * C153449) *
              C1135)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 + C2737 +
            C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
            C153761 * C162) *
               C153813 +
           (C7654 + C7655 + C7656) * C153802 + C7674 * C153777) *
              C153501 * C153413 * C1218 -
          ((C4872 + C4871 + C4870) * C153777 +
           (C4213 + C4214 + C4215) * C153802 +
           (C3088 + C3087 + C3086) * C153813) *
              C153501 * C153413 * C1219 +
          (C3106 * C153813 + (C4212 + C4211 + C4210) * C153802 +
           (C4873 + C4874 + C4875) * C153777) *
              C153501 * C153413 * C1220 -
          ((C2733 * C4833 + C4855 + C4855 + C153761 * C4839 + C2731 * C4834 +
            C4856 + C4856 + C2724 * C4840 + C2729 * C4835 + C4857 + C4857 +
            C2723 * C4841) *
               C153777 +
           (C5631 + C5630 + C5629) * C153802 + C4605 * C153813) *
              C153501 * C153413 * C1221) *
         C153378) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 +
             C2737 + C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
             C153761 * C162) *
                C153813 +
            (C7654 + C7655 + C7656) * C153802 + C7674 * C153777) *
               C153501 * C493 -
           ((C7660 + C7661 + C7662) * C153777 +
            (C7659 + C7658 + C7657) * C153802 +
            (C7656 + C7655 + C7654) * C153813) *
               C153501 * C494 +
           (C7674 * C153813 + (C7662 + C7661 + C7660) * C153802 +
            (C2729 * C7560 + C7591 + C7591 + C2723 * C7568 + C2731 * C7561 +
             C7592 + C7592 + C2724 * C7569 + C2733 * C7562 + C7593 + C7593 +
             C153761 * C7570) *
                C153777) *
               C153501 * C495) *
              C1131 +
          (((C4215 + C4214 + C4213) * C153813 +
            (C4870 + C4871 + C4872) * C153802 +
            (C9067 + C9068 + C9069) * C153777) *
               C153501 * C494 -
           (C9063 * C153777 + (C4213 + C4214 + C4215) * C153802 +
            (C3088 + C3087 + C3086) * C153813) *
               C153501 * C493 -
           ((C2733 * C9040 + C9057 + C9057 + C153761 * C9046 + C2731 * C9041 +
             C9058 + C9058 + C2724 * C9047 + C2729 * C9042 + C9059 + C9059 +
             C2723 * C9048) *
                C153777 +
            (C9069 + C9068 + C9067) * C153802 + C9063 * C153813) *
               C153501 * C495) *
              C153449) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
             C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 +
             C23999 + C153761 * C162) *
                C153513 * C23987 +
            (C24335 + C24336 + C24337) * C153513 * C23988 + C24357 * C153774) *
               C153413 * C1131 -
           ((C24341 + C24342 + C24343) * C153513 * C153774 +
            (C24340 + C24339 + C24338) * C153513 * C23988 +
            (C24337 + C24336 + C24335) * C153513 * C23987) *
               C153413 * C153449) *
              C1133 +
          (((C24344 + C24345 + C24346) * C153513 * C23987 +
            (C24347 + C24348 + C24349) * C153513 * C23988 +
            (C24350 + C24351 + C24352) * C153513 * C153774) *
               C153413 * C153449 -
           (C24358 * C153774 + (C24346 + C24345 + C24344) * C153513 * C23988 +
            (C23994 * C147 + C24012 + C24012 + C153761 * C163 + C23992 * C146 +
             C24013 + C24013 + C153790 * C162 + C23990 * C145 + C24014 +
             C24014 + C153809 * C161) *
                C153513 * C23987) *
               C153413 * C1131) *
              C1134 +
          (((C23990 * C146 + C24015 + C24015 + C153809 * C162 + C23992 * C147 +
             C24016 + C24016 + C153790 * C163 + C23994 * C148 + C24017 +
             C24017 + C153761 * C164) *
                C153513 * C23987 +
            (C24858 + C24859 + C24860) * C153513 * C23988 +
            (C24861 + C24862 + C24863) * C153513 * C153774) *
               C153413 * C1131 -
           ((C23994 * C1223 + C24843 + C24843 + C153761 * C1233 +
             C23992 * C1224 + C24844 + C24844 + C153790 * C1234 +
             C23990 * C1225 + C24845 + C24845 + C153809 * C1235) *
                C153513 * C153774 +
            (C24863 + C24862 + C24861) * C153513 * C23988 +
            (C24860 + C24859 + C24858) * C153513 * C23987) *
               C153413 * C153449) *
              C1135)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
            C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 + C23999 +
            C153761 * C162) *
               C153513 * C23987 +
           (C24335 + C24336 + C24337) * C153513 * C23988 + C24357 * C153774) *
              C153413 * C1218 -
          (C25825 * C153774 + (C24340 + C24339 + C24338) * C153513 * C23988 +
           (C24337 + C24336 + C24335) * C153513 * C23987) *
              C153413 * C1219 +
          (C24357 * C23987 + (C24343 + C24342 + C24341) * C153513 * C23988 +
           (C25829 + C25830 + C25831) * C153513 * C153774) *
              C153413 * C1220 -
          ((C23994 * C4585 + C25818 + C25818 + C153761 * C4591 +
            C23992 * C4586 + C25819 + C25819 + C153790 * C4592 +
            C23990 * C4587 + C25820 + C25820 + C153809 * C4593) *
               C153513 * C153774 +
           (C25831 + C25830 + C25829) * C153513 * C23988 + C25825 * C23987) *
              C153413 * C1221) *
         C153378) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
             C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 +
             C23999 + C153761 * C162) *
                C153513 * C23987 +
            (C24335 + C24336 + C24337) * C153513 * C23988 + C24357 * C153774) *
               C493 -
           ((C25435 + C25436 + C25437) * C153513 * C153774 +
            (C25438 + C25439 + C25440) * C153513 * C23988 +
            (C23994 * C498 + C24583 + C24583 + C153761 * C522 + C23992 * C499 +
             C24584 + C24584 + C153790 * C523 + C23990 * C500 + C24585 +
             C24585 + C153809 * C524) *
                C153513 * C23987) *
               C494 +
           ((C23990 * C501 + C24586 + C24586 + C153809 * C525 + C23992 * C502 +
             C24587 + C24587 + C153790 * C526 + C23994 * C503 + C24588 +
             C24588 + C153761 * C527) *
                C153513 * C23987 +
            (C26077 + C26078 + C26079) * C153513 * C23988 +
            (C26080 + C26081 + C26082) * C153513 * C153774) *
               C495) *
              C1131 +
          (((C25440 + C25439 + C25438) * C153513 * C23987 +
            (C25437 + C25436 + C25435) * C153513 * C23988 +
            (C23990 * C4143 + C25393 + C25393 + C153809 * C4151 +
             C23992 * C4144 + C25394 + C25394 + C153790 * C4152 +
             C23994 * C4145 + C25395 + C25395 + C153761 * C4153) *
                C153513 * C153774) *
               C494 -
           (C25825 * C153774 + (C24340 + C24339 + C24338) * C153513 * C23988 +
            (C24337 + C24336 + C24335) * C153513 * C23987) *
               C493 -
           ((C23994 * C4833 + C26062 + C26062 + C153761 * C4839 +
             C23992 * C4834 + C26063 + C26063 + C153790 * C4840 +
             C23990 * C4835 + C26064 + C26064 + C153809 * C4841) *
                C153513 * C153774 +
            (C26082 + C26081 + C26080) * C153513 * C23988 +
            (C26079 + C26078 + C26077) * C153513 * C23987) *
               C495) *
              C153449) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153513 *
                C28229 +
            C28439 * C28230 + C28440 * C28231 + C28441 * C28232 +
            C28442 * C28233) *
               C153413 * C1131 -
           (C28443 * C28233 + C28442 * C28232 + C28441 * C28231 +
            C28440 * C28230 + C28439 * C28229) *
               C153413 * C153449) *
              C1133 +
          ((C28444 * C28229 + C28445 * C28230 + C28446 * C28231 +
            C28447 * C28232 + C28448 * C28233) *
               C153413 * C153449 -
           (C28447 * C28233 + C28446 * C28232 + C28445 * C28231 +
            C28444 * C28230 +
            (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C153513 *
                C28229) *
               C153413 * C1131) *
              C1134 +
          (((C28234 * C146 + C28247 + C28247 + C153338 * C162) * C153513 *
                C28229 +
            C28740 * C28230 + C28741 * C28231 + C28742 * C28232 +
            C28743 * C28233) *
               C153413 * C1131 -
           ((C28234 * C4585 + C28727 + C28727 + C153338 * C4591) * C153513 *
                C28233 +
            C28743 * C28232 + C28742 * C28231 + C28741 * C28230 +
            C28740 * C28229) *
               C153413 * C153449) *
              C1135)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153513 *
               C28229 +
           C28439 * C28230 + C28440 * C28231 + C28441 * C28232 +
           C28442 * C28233) *
              C153413 * C1218 -
          (C28443 * C28233 + C28442 * C28232 + C28441 * C28231 +
           C28440 * C28230 + C28439 * C28229) *
              C153413 * C1219 +
          (C28440 * C28229 + C28441 * C28230 + C28442 * C28231 +
           C28443 * C28232 + C29302 * C28233) *
              C153413 * C1220 -
          ((C28234 * C29292 + C29298 + C29298 + C153338 * C29294) * C153513 *
               C28233 +
           C29302 * C28232 + C28443 * C28231 + C28442 * C28230 +
           C28441 * C28229) *
              C153413 * C1221) *
         C153378) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153513 *
                C28229 +
            C28439 * C28230 + C28440 * C28231 + C28441 * C28232 +
            C28442 * C28233) *
               C493 -
           (C29081 * C28233 + C29082 * C28232 + C29083 * C28231 +
            C29084 * C28230 +
            (C28234 * C500 + C28581 + C28581 + C153338 * C524) * C153513 *
                C28229) *
               C494 +
           ((C28234 * C501 + C28582 + C28582 + C153338 * C525) * C153513 *
                C28229 +
            C29449 * C28230 + C29450 * C28231 + C29451 * C28232 +
            C29452 * C28233) *
               C495) *
              C1131 +
          ((C29084 * C28229 + C29083 * C28230 + C29082 * C28231 +
            C29081 * C28232 +
            (C28234 * C29032 + C29047 + C29047 + C153338 * C29036) * C153513 *
                C28233) *
               C494 -
           (C28443 * C28233 + C28442 * C28232 + C28441 * C28231 +
            C28440 * C28230 + C28439 * C28229) *
               C493 -
           ((C28234 * C29424 + C29436 + C29436 + C153338 * C29426) * C153513 *
                C28233 +
            C29452 * C28232 + C29451 * C28231 + C29450 * C28230 +
            C29449 * C28229) *
               C495) *
              C153449) *
         C153378) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153813 +
             C31295 * C153802 + C31296 * C153777) *
                C23987 +
            (C30985 + C30986 + C30987) * C23988 + C31011 * C153774) *
               C153413 * C1131 -
           ((C30991 + C30992 + C30993) * C153774 +
            (C30990 + C30989 + C30988) * C23988 +
            (C30987 + C30986 + C30985) * C23987) *
               C153413 * C153449) *
              C1133 +
          (((C30994 + C30995 + C31018) * C23987 +
            (C30998 + C30999 + C31019) * C23988 +
            (C31002 + C31003 + C31020) * C153774) *
               C153413 * C153449 -
           (C31021 * C153774 + (C31018 + C30995 + C30994) * C23988 +
            (C31301 * C153777 + C31300 * C153802 +
             (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C153813) *
                C23987) *
               C153413 * C1131) *
              C1134 +
          ((((C28234 * C146 + C28247 + C28247 + C153338 * C162) * C153813 +
             C31779 * C153802 + C31780 * C153777) *
                C23987 +
            (C31523 + C31546 + C31547) * C23988 +
            (C31528 + C31548 + C31549) * C153774) *
               C153413 * C1131 -
           (((C28234 * C4833 + C31533 + C31533 + C153338 * C4839) * C153777 +
             (C28234 * C4145 + C28867 + C28867 + C153338 * C4153) * C153802 +
             C28738 * C153813) *
                C153774 +
            (C31549 + C31548 + C31528) * C23988 +
            (C31547 + C31546 + C31523) * C23987) *
               C153413 * C153449) *
              C1135)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153813 +
            C31295 * C153802 + C31296 * C153777) *
               C23987 +
           (C30985 + C30986 + C30987) * C23988 + C31011 * C153774) *
              C153413 * C1218 -
          (C32455 * C153774 + (C30990 + C30989 + C30988) * C23988 +
           (C30987 + C30986 + C30985) * C23987) *
              C153413 * C1219 +
          (C31011 * C23987 + (C30993 + C30992 + C30991) * C23988 +
           (C32452 + C32453 + C32454) * C153774) *
              C153413 * C1220 -
          (((C28234 * C29424 + C29436 + C29436 + C153338 * C29426) * C153777 +
            C29867 * C153802 + C28433 * C153813) *
               C153774 +
           (C32454 + C32453 + C32452) * C23988 + C32455 * C23987) *
              C153413 * C1221) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153813 +
             C31295 * C153802 + C31296 * C153777) *
                C23987 +
            (C30985 + C30986 + C30987) * C23988 + C31011 * C153774) *
               C493 -
           ((C32074 + C32075 + C32076) * C153774 +
            (C32077 + C32078 + C32079) * C23988 +
            (C31299 * C153777 + C31296 * C153802 + C31295 * C153813) * C23987) *
               C494 +
           ((C31296 * C153813 + C31299 * C153802 +
             (C28234 * C7560 + C31256 + C31256 + C153338 * C7568) * C153777) *
                C23987 +
            (C32677 + C32678 + C32697) * C23988 +
            (C32681 + C32682 + C32698) * C153774) *
               C495) *
              C1131 +
          (((C32079 + C32078 + C32077) * C23987 +
            (C32076 + C32075 + C32074) * C23988 +
            (C29074 * C153813 + C29447 * C153802 + C32696 * C153777) *
                C153774) *
               C494 -
           (C32455 * C153774 + (C30990 + C30989 + C30988) * C23988 +
            (C30987 + C30986 + C30985) * C23987) *
               C493 -
           (((C28234 * C32673 + C32687 + C32687 + C153338 * C32675) * C153777 +
             C32696 * C153802 + C29447 * C153813) *
                C153774 +
            (C32698 + C32682 + C32681) * C23988 +
            (C32697 + C32678 + C32677) * C23987) *
               C495) *
              C153449) *
         C153378) /
            (p * q * std::sqrt(p + q));
    d2ee[338] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 +
              C2737 + C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
              C153761 * C162) *
                 C153513 * C153812 +
             (C3086 + C3087 + C3088) * C153513 * C153800 + C3108 * C153774) *
                C153725 -
            ((C4210 + C4211 + C4212) * C153513 * C153774 +
             (C4213 + C4214 + C4215) * C153513 * C153800 +
             (C2733 * C498 + C3346 + C3346 + C153761 * C522 + C2731 * C499 +
              C3347 + C3347 + C2724 * C523 + C2729 * C500 + C3348 + C3348 +
              C2723 * C524) *
                 C153513 * C153812) *
                C153477) *
               C1131 +
           (((C4215 + C4214 + C4213) * C153513 * C153812 +
             (C4212 + C4211 + C4210) * C153513 * C153800 +
             (C2729 * C4143 + C4168 + C4168 + C2723 * C4151 + C2731 * C4144 +
              C4169 + C4169 + C2724 * C4152 + C2733 * C4145 + C4170 + C4170 +
              C153761 * C4153) *
                 C153513 * C153774) *
                C153477 -
            (C4609 * C153774 + (C3091 + C3090 + C3089) * C153513 * C153800 +
             (C3088 + C3087 + C3086) * C153513 * C153812) *
                C153725) *
               C153449) *
              C153716 +
          ((((C2729 * C499 + C3358 + C3358 + C2723 * C523 + C2731 * C498 +
              C3359 + C3359 + C2724 * C522 + C2733 * C497 + C3360 + C3360 +
              C153761 * C521) *
                 C153513 * C153812 +
             (C4216 + C4217 + C4218) * C153513 * C153800 +
             (C4219 + C4220 + C4221) * C153513 * C153774) *
                C153477 -
            (C3109 * C153774 + (C3097 + C3096 + C3095) * C153513 * C153800 +
             (C2733 * C147 + C2751 + C2751 + C153761 * C163 + C2731 * C146 +
              C2752 + C2752 + C2724 * C162 + C2729 * C145 + C2753 + C2753 +
              C2723 * C161) *
                 C153513 * C153812) *
                C153725) *
               C1131 +
           (((C3095 + C3096 + C3097) * C153513 * C153812 +
             (C3098 + C3099 + C3100) * C153513 * C153800 +
             (C3101 + C3102 + C3103) * C153513 * C153774) *
                C153725 -
            ((C2733 * C4146 + C4183 + C4183 + C153761 * C4154 + C2731 * C4145 +
              C4184 + C4184 + C2724 * C4153 + C2729 * C4144 + C4185 + C4185 +
              C2723 * C4152) *
                 C153513 * C153774 +
             (C4221 + C4220 + C4219) * C153513 * C153800 +
             (C4218 + C4217 + C4216) * C153513 * C153812) *
                C153477) *
               C153449) *
              C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 + C169 + C169 + C121 * C160 + C136 * C145 + C170 +
             C170 + C122 * C161 + C138 * C146 + C171 + C171 + C123 * C162 +
             C140 * C147 + C172 + C172 + C124 * C163 + C142 * C148 + C173 +
             C173 + C125 * C164) *
                C153513 * C153501 * C153725 -
            (C142 * C496 + C533 + C533 + C125 * C520 + C140 * C497 + C534 +
             C534 + C124 * C521 + C138 * C498 + C535 + C535 + C123 * C522 +
             C136 * C499 + C536 + C536 + C122 * C523 + C134 * C500 + C537 +
             C537 + C121 * C524) *
                C153513 * C153501 * C153477) *
               C1131 +
           ((C134 * C981 + C1000 + C1000 + C121 * C993 + C136 * C982 + C1001 +
             C1001 + C122 * C994 + C138 * C983 + C1002 + C1002 + C123 * C995 +
             C140 * C984 + C1003 + C1003 + C124 * C996 + C142 * C985 + C1004 +
             C1004 + C125 * C997) *
                C153513 * C153501 * C153477 -
            (C142 * C315 + C352 + C352 + C125 * C339 + C140 * C316 + C353 +
             C353 + C124 * C340 + C138 * C317 + C354 + C354 + C123 * C341 +
             C136 * C318 + C355 + C355 + C122 * C342 + C134 * C319 + C356 +
             C356 + C121 * C343) *
                C153513 * C153501 * C153725) *
               C153449) *
              C153716 +
          (((C134 * C499 + C543 + C543 + C121 * C523 + C136 * C498 + C544 +
             C544 + C122 * C522 + C138 * C497 + C545 + C545 + C123 * C521 +
             C140 * C496 + C546 + C546 + C124 * C520 + C142 * C506 + C547 +
             C547 + C125 * C530) *
                C153513 * C153501 * C153477 -
            (C142 * C149 + C174 + C174 + C125 * C165 + C140 * C148 + C175 +
             C175 + C124 * C164 + C138 * C147 + C176 + C176 + C123 * C163 +
             C136 * C146 + C177 + C177 + C122 * C162 + C134 * C145 + C178 +
             C178 + C121 * C161) *
                C153513 * C153501 * C153725) *
               C1131 +
           ((C134 * C318 + C362 + C362 + C121 * C342 + C136 * C317 + C363 +
             C363 + C122 * C341 + C138 * C316 + C364 + C364 + C123 * C340 +
             C140 * C315 + C365 + C365 + C124 * C339 + C142 * C325 + C366 +
             C366 + C125 * C349) *
                C153513 * C153501 * C153725 -
            (C142 * C986 + C1005 + C1005 + C125 * C998 + C140 * C985 + C1006 +
             C1006 + C124 * C997 + C138 * C984 + C1007 + C1007 + C123 * C996 +
             C136 * C983 + C1008 + C1008 + C122 * C995 + C134 * C982 + C1009 +
             C1009 + C121 * C994) *
                C153513 * C153501 * C153477) *
               C153449) *
              C153384)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 +
              C2737 + C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
              C153761 * C162) *
                 C153813 +
             (C7654 + C7655 + C7656) * C153802 + C7674 * C153777) *
                C153501 * C153725 -
            ((C7660 + C7661 + C7662) * C153777 +
             (C7659 + C7658 + C7657) * C153802 +
             (C7656 + C7655 + C7654) * C153813) *
                C153501 * C153477) *
               C1131 +
           (((C4215 + C4214 + C4213) * C153813 +
             (C4870 + C4871 + C4872) * C153802 +
             (C9067 + C9068 + C9069) * C153777) *
                C153501 * C153477 -
            (C9063 * C153777 + (C4213 + C4214 + C4215) * C153802 +
             (C3088 + C3087 + C3086) * C153813) *
                C153501 * C153725) *
               C153449) *
              C153716 +
          ((((C7663 + C7664 + C7665) * C153813 +
             (C7666 + C7667 + C7668) * C153802 +
             (C7669 + C7670 + C7671) * C153777) *
                C153501 * C153477 -
            (C7675 * C153777 + (C7665 + C7664 + C7663) * C153802 +
             (C2733 * C147 + C2751 + C2751 + C153761 * C163 + C2731 * C146 +
              C2752 + C2752 + C2724 * C162 + C2729 * C145 + C2753 + C2753 +
              C2723 * C161) *
                 C153813) *
                C153501 * C153725) *
               C1131 +
           (((C3095 + C3096 + C3097) * C153813 +
             (C4216 + C4217 + C4218) * C153802 +
             (C8456 + C8457 + C8458) * C153777) *
                C153501 * C153725 -
            ((C2733 * C8437 + C8447 + C8447 + C153761 * C8439 + C2731 * C6216 +
              C8448 + C8448 + C2724 * C6228 + C2729 * C6217 + C8449 + C8449 +
              C2723 * C6229) *
                 C153777 +
             (C8458 + C8457 + C8456) * C153802 +
             (C4218 + C4217 + C4216) * C153813) *
                C153501 * C153477) *
               C153449) *
              C153384)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
              C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 +
              C23999 + C153761 * C162) *
                 C153513 * C23987 +
             (C24335 + C24336 + C24337) * C153513 * C23988 + C24357 * C153774) *
                C153725 -
            ((C25435 + C25436 + C25437) * C153513 * C153774 +
             (C25438 + C25439 + C25440) * C153513 * C23988 +
             (C23994 * C498 + C24583 + C24583 + C153761 * C522 + C23992 * C499 +
              C24584 + C24584 + C153790 * C523 + C23990 * C500 + C24585 +
              C24585 + C153809 * C524) *
                 C153513 * C23987) *
                C153477) *
               C1131 +
           (((C25440 + C25439 + C25438) * C153513 * C23987 +
             (C25437 + C25436 + C25435) * C153513 * C23988 +
             (C23990 * C4143 + C25393 + C25393 + C153809 * C4151 +
              C23992 * C4144 + C25394 + C25394 + C153790 * C4152 +
              C23994 * C4145 + C25395 + C25395 + C153761 * C4153) *
                 C153513 * C153774) *
                C153477 -
            (C25825 * C153774 + (C24340 + C24339 + C24338) * C153513 * C23988 +
             (C24337 + C24336 + C24335) * C153513 * C23987) *
                C153725) *
               C153449) *
              C153716 +
          ((((C23990 * C499 + C24595 + C24595 + C153809 * C523 + C23992 * C498 +
              C24596 + C24596 + C153790 * C522 + C23994 * C497 + C24597 +
              C24597 + C153761 * C521) *
                 C153513 * C23987 +
             (C25441 + C25442 + C25443) * C153513 * C23988 +
             (C25444 + C25445 + C25446) * C153513 * C153774) *
                C153477 -
            (C24358 * C153774 + (C24346 + C24345 + C24344) * C153513 * C23988 +
             (C23994 * C147 + C24012 + C24012 + C153761 * C163 + C23992 * C146 +
              C24013 + C24013 + C153790 * C162 + C23990 * C145 + C24014 +
              C24014 + C153809 * C161) *
                 C153513 * C23987) *
                C153725) *
               C1131 +
           (((C24344 + C24345 + C24346) * C153513 * C23987 +
             (C24347 + C24348 + C24349) * C153513 * C23988 +
             (C24350 + C24351 + C24352) * C153513 * C153774) *
                C153725 -
            ((C23994 * C4146 + C25408 + C25408 + C153761 * C4154 +
              C23992 * C4145 + C25409 + C25409 + C153790 * C4153 +
              C23990 * C4144 + C25410 + C25410 + C153809 * C4152) *
                 C153513 * C153774 +
             (C25446 + C25445 + C25444) * C153513 * C23988 +
             (C25443 + C25442 + C25441) * C153513 * C23987) *
                C153477) *
               C153449) *
              C153384)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153513 *
                 C28229 +
             C28439 * C28230 + C28440 * C28231 + C28441 * C28232 +
             C28442 * C28233) *
                C153725 -
            (C29081 * C28233 + C29082 * C28232 + C29083 * C28231 +
             C29084 * C28230 +
             (C28234 * C500 + C28581 + C28581 + C153338 * C524) * C153513 *
                 C28229) *
                C153477) *
               C1131 +
           ((C29084 * C28229 + C29083 * C28230 + C29082 * C28231 +
             C29081 * C28232 +
             (C28234 * C29032 + C29047 + C29047 + C153338 * C29036) * C153513 *
                 C28233) *
                C153477 -
            (C28443 * C28233 + C28442 * C28232 + C28441 * C28231 +
             C28440 * C28230 + C28439 * C28229) *
                C153725) *
               C153449) *
              C153716 +
          ((((C28234 * C499 + C28587 + C28587 + C153338 * C523) * C153513 *
                 C28229 +
             C29085 * C28230 + C29086 * C28231 + C29087 * C28232 +
             C29088 * C28233) *
                C153477 -
            (C28447 * C28233 + C28446 * C28232 + C28445 * C28231 +
             C28444 * C28230 +
             (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C153513 *
                 C28229) *
                C153725) *
               C1131 +
           ((C28444 * C28229 + C28445 * C28230 + C28446 * C28231 +
             C28447 * C28232 + C28448 * C28233) *
                C153725 -
            ((C28234 * C29033 + C29056 + C29056 + C153338 * C29037) * C153513 *
                 C28233 +
             C29088 * C28232 + C29087 * C28231 + C29086 * C28230 +
             C29085 * C28229) *
                C153477) *
               C153449) *
              C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153813 +
              C31295 * C153802 + C31296 * C153777) *
                 C23987 +
             (C30985 + C30986 + C30987) * C23988 + C31011 * C153774) *
                C153725 -
            ((C32074 + C32075 + C32076) * C153774 +
             (C32077 + C32078 + C32079) * C23988 +
             (C31299 * C153777 + C31296 * C153802 + C31295 * C153813) *
                 C23987) *
                C153477) *
               C1131 +
           (((C32079 + C32078 + C32077) * C23987 +
             (C32076 + C32075 + C32074) * C23988 +
             (C29074 * C153813 + C29447 * C153802 + C32696 * C153777) *
                 C153774) *
                C153477 -
            (C32455 * C153774 + (C30990 + C30989 + C30988) * C23988 +
             (C30987 + C30986 + C30985) * C23987) *
                C153725) *
               C153449) *
              C153716 +
          ((((C31300 * C153813 + C31301 * C153802 + C31302 * C153777) * C23987 +
             (C32080 + C32081 + C32082) * C23988 +
             (C32083 + C32084 + C32085) * C153774) *
                C153477 -
            (C31021 * C153774 + (C31018 + C30995 + C30994) * C23988 +
             (C31301 * C153777 + C31300 * C153802 +
              (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C153813) *
                 C23987) *
                C153725) *
               C1131 +
           (((C30994 + C30995 + C31018) * C23987 +
             (C30998 + C30999 + C31019) * C23988 +
             (C31002 + C31003 + C31020) * C153774) *
                C153725 -
            (((C28234 * C32070 + C32086 + C32086 + C153338 * C32072) * C153777 +
              C31017 * C153802 + C29079 * C153813) *
                 C153774 +
             (C32085 + C32084 + C32083) * C23988 +
             (C32082 + C32081 + C32080) * C23987) *
                C153477) *
               C153449) *
              C153384)) /
            (p * q * std::sqrt(p + q));
    d2ee[339] +=
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((C134 * C144 + C169 + C169 + C121 * C160 + C136 * C145 + C170 + C170 +
           C122 * C161 + C138 * C146 + C171 + C171 + C123 * C162 + C140 * C147 +
           C172 + C172 + C124 * C163 + C142 * C148 + C173 + C173 +
           C125 * C164) *
              C153513 * C153501 * C153413 * C1218 -
          (C142 * C315 + C352 + C352 + C125 * C339 + C140 * C316 + C353 + C353 +
           C124 * C340 + C138 * C317 + C354 + C354 + C123 * C341 + C136 * C318 +
           C355 + C355 + C122 * C342 + C134 * C319 + C356 + C356 +
           C121 * C343) *
              C153513 * C153501 * C153413 * C1219 +
          (C134 * C320 + C357 + C357 + C121 * C344 + C136 * C321 + C358 + C358 +
           C122 * C345 + C138 * C322 + C359 + C359 + C123 * C346 + C140 * C323 +
           C360 + C360 + C124 * C347 + C142 * C324 + C361 + C361 +
           C125 * C348) *
              C153513 * C153501 * C153413 * C1220 -
          (C142 * C1223 + C1239 + C1239 + C125 * C1233 + C140 * C1224 + C1240 +
           C1240 + C124 * C1234 + C138 * C1225 + C1241 + C1241 + C123 * C1235 +
           C136 * C1226 + C1242 + C1242 + C122 * C1236 + C134 * C1227 + C1243 +
           C1243 + C121 * C1237) *
              C153513 * C153501 * C153413 * C1221) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C144 + C169 + C169 + C121 * C160 + C136 * C145 + C170 +
            C170 + C122 * C161 + C138 * C146 + C171 + C171 + C123 * C162 +
            C140 * C147 + C172 + C172 + C124 * C163 + C142 * C148 + C173 +
            C173 + C125 * C164) *
               C153513 * C153501 * C153413 * C1131 -
           (C142 * C315 + C352 + C352 + C125 * C339 + C140 * C316 + C353 +
            C353 + C124 * C340 + C138 * C317 + C354 + C354 + C123 * C341 +
            C136 * C318 + C355 + C355 + C122 * C342 + C134 * C319 + C356 +
            C356 + C121 * C343) *
               C153513 * C153501 * C153413 * C153449) *
              C1133 +
          ((C134 * C318 + C362 + C362 + C121 * C342 + C136 * C317 + C363 +
            C363 + C122 * C341 + C138 * C316 + C364 + C364 + C123 * C340 +
            C140 * C315 + C365 + C365 + C124 * C339 + C142 * C325 + C366 +
            C366 + C125 * C349) *
               C153513 * C153501 * C153413 * C153449 -
           (C142 * C149 + C174 + C174 + C125 * C165 + C140 * C148 + C175 +
            C175 + C124 * C164 + C138 * C147 + C176 + C176 + C123 * C163 +
            C136 * C146 + C177 + C177 + C122 * C162 + C134 * C145 + C178 +
            C178 + C121 * C161) *
               C153513 * C153501 * C153413 * C1131) *
              C1134 +
          ((C134 * C146 + C179 + C179 + C121 * C162 + C136 * C147 + C180 +
            C180 + C122 * C163 + C138 * C148 + C181 + C181 + C123 * C164 +
            C140 * C149 + C182 + C182 + C124 * C165 + C142 * C150 + C183 +
            C183 + C125 * C166) *
               C153513 * C153501 * C153413 * C1131 -
           (C142 * C679 + C683 + C683 + C125 * C681 + C140 * C325 + C684 +
            C684 + C124 * C349 + C138 * C315 + C685 + C685 + C123 * C339 +
            C136 * C316 + C686 + C686 + C122 * C340 + C134 * C317 + C687 +
            C687 + C121 * C341) *
               C153513 * C153501 * C153413 * C153449) *
              C1135)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 +
             C2737 + C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
             C153761 * C162) *
                C153513 * C153812 +
            (C3086 + C3087 + C3088) * C153513 * C153800 + C3108 * C153774) *
               C153413 * C1131 -
           ((C3092 + C3093 + C3094) * C153513 * C153774 +
            (C3091 + C3090 + C3089) * C153513 * C153800 +
            (C3088 + C3087 + C3086) * C153513 * C153812) *
               C153413 * C153449) *
              C1133 +
          (((C3095 + C3096 + C3097) * C153513 * C153812 +
            (C3098 + C3099 + C3100) * C153513 * C153800 +
            (C3101 + C3102 + C3103) * C153513 * C153774) *
               C153413 * C153449 -
           (C3109 * C153774 + (C3097 + C3096 + C3095) * C153513 * C153800 +
            (C2733 * C147 + C2751 + C2751 + C153761 * C163 + C2731 * C146 +
             C2752 + C2752 + C2724 * C162 + C2729 * C145 + C2753 + C2753 +
             C2723 * C161) *
                C153513 * C153812) *
               C153413 * C1131) *
              C1134 +
          (((C2729 * C146 + C2754 + C2754 + C2723 * C162 + C2731 * C147 +
             C2755 + C2755 + C2724 * C163 + C2733 * C148 + C2756 + C2756 +
             C153761 * C164) *
                C153513 * C153812 +
            (C3621 + C3622 + C3623) * C153513 * C153800 +
            (C3624 + C3625 + C3626) * C153513 * C153774) *
               C153413 * C1131 -
           ((C2733 * C1223 + C3606 + C3606 + C153761 * C1233 + C2731 * C1224 +
             C3607 + C3607 + C2724 * C1234 + C2729 * C1225 + C3608 + C3608 +
             C2723 * C1235) *
                C153513 * C153774 +
            (C3626 + C3625 + C3624) * C153513 * C153800 +
            (C3623 + C3622 + C3621) * C153513 * C153812) *
               C153413 * C153449) *
              C1135)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 + C2737 +
            C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
            C153761 * C162) *
               C153513 * C153812 +
           (C3086 + C3087 + C3088) * C153513 * C153800 + C3108 * C153774) *
              C153413 * C1218 -
          (C4609 * C153774 + (C3091 + C3090 + C3089) * C153513 * C153800 +
           (C3088 + C3087 + C3086) * C153513 * C153812) *
              C153413 * C1219 +
          (C3108 * C153812 + (C3094 + C3093 + C3092) * C153513 * C153800 +
           (C4613 + C4614 + C4615) * C153513 * C153774) *
              C153413 * C1220 -
          ((C2733 * C4585 + C4602 + C4602 + C153761 * C4591 + C2731 * C4586 +
            C4603 + C4603 + C2724 * C4592 + C2729 * C4587 + C4604 + C4604 +
            C2723 * C4593) *
               C153513 * C153774 +
           (C4615 + C4614 + C4613) * C153513 * C153800 + C4609 * C153812) *
              C153413 * C1221) *
         C153378) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 +
             C2737 + C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
             C153761 * C162) *
                C153813 +
            (C7654 + C7655 + C7656) * C153802 + C7674 * C153777) *
               C153501 * C153413 * C1131 -
           ((C4872 + C4871 + C4870) * C153777 +
            (C4213 + C4214 + C4215) * C153802 +
            (C3088 + C3087 + C3086) * C153813) *
               C153501 * C153413 * C153449) *
              C1133 +
          (((C3095 + C3096 + C3097) * C153813 +
            (C4216 + C4217 + C4218) * C153802 +
            (C8456 + C8457 + C8458) * C153777) *
               C153501 * C153413 * C153449 -
           (C7675 * C153777 + (C7665 + C7664 + C7663) * C153802 +
            (C2733 * C147 + C2751 + C2751 + C153761 * C163 + C2731 * C146 +
             C2752 + C2752 + C2724 * C162 + C2729 * C145 + C2753 + C2753 +
             C2723 * C161) *
                C153813) *
               C153501 * C153413 * C1131) *
              C1134 +
          (((C2729 * C146 + C2754 + C2754 + C2723 * C162 + C2731 * C147 +
             C2755 + C2755 + C2724 * C163 + C2733 * C148 + C2756 + C2756 +
             C153761 * C164) *
                C153813 +
            (C8142 + C8143 + C8144) * C153802 +
            (C8145 + C8146 + C8147) * C153777) *
               C153501 * C153413 * C1131 -
           ((C2733 * C1365 + C7894 + C7894 + C153761 * C1375 + C2731 * C1366 +
             C7895 + C7895 + C2724 * C1376 + C2729 * C1367 + C7896 + C7896 +
             C2723 * C1377) *
                C153777 +
            (C2733 * C985 + C3848 + C3848 + C153761 * C997 + C2731 * C984 +
             C3849 + C3849 + C2724 * C996 + C2729 * C983 + C3850 + C3850 +
             C2723 * C995) *
                C153802 +
            (C3623 + C3622 + C3621) * C153813) *
               C153501 * C153413 * C153449) *
              C1135)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 + C2737 +
            C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
            C153761 * C162) *
               C153813 +
           (C7654 + C7655 + C7656) * C153802 + C7674 * C153777) *
              C153501 * C153413 * C1218 -
          ((C4872 + C4871 + C4870) * C153777 +
           (C4213 + C4214 + C4215) * C153802 +
           (C3088 + C3087 + C3086) * C153813) *
              C153501 * C153413 * C1219 +
          (C3106 * C153813 + (C4212 + C4211 + C4210) * C153802 +
           (C4873 + C4874 + C4875) * C153777) *
              C153501 * C153413 * C1220 -
          ((C2733 * C4833 + C4855 + C4855 + C153761 * C4839 + C2731 * C4834 +
            C4856 + C4856 + C2724 * C4840 + C2729 * C4835 + C4857 + C4857 +
            C2723 * C4841) *
               C153777 +
           (C5631 + C5630 + C5629) * C153802 + C4605 * C153813) *
              C153501 * C153413 * C1221) *
         C153378) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
             C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 +
             C23999 + C153761 * C162) *
                C153513 * C23987 +
            (C24335 + C24336 + C24337) * C153513 * C23988 + C24357 * C153774) *
               C153413 * C1131 -
           ((C24341 + C24342 + C24343) * C153513 * C153774 +
            (C24340 + C24339 + C24338) * C153513 * C23988 +
            (C24337 + C24336 + C24335) * C153513 * C23987) *
               C153413 * C153449) *
              C1133 +
          (((C24344 + C24345 + C24346) * C153513 * C23987 +
            (C24347 + C24348 + C24349) * C153513 * C23988 +
            (C24350 + C24351 + C24352) * C153513 * C153774) *
               C153413 * C153449 -
           (C24358 * C153774 + (C24346 + C24345 + C24344) * C153513 * C23988 +
            (C23994 * C147 + C24012 + C24012 + C153761 * C163 + C23992 * C146 +
             C24013 + C24013 + C153790 * C162 + C23990 * C145 + C24014 +
             C24014 + C153809 * C161) *
                C153513 * C23987) *
               C153413 * C1131) *
              C1134 +
          (((C23990 * C146 + C24015 + C24015 + C153809 * C162 + C23992 * C147 +
             C24016 + C24016 + C153790 * C163 + C23994 * C148 + C24017 +
             C24017 + C153761 * C164) *
                C153513 * C23987 +
            (C24858 + C24859 + C24860) * C153513 * C23988 +
            (C24861 + C24862 + C24863) * C153513 * C153774) *
               C153413 * C1131 -
           ((C23994 * C1223 + C24843 + C24843 + C153761 * C1233 +
             C23992 * C1224 + C24844 + C24844 + C153790 * C1234 +
             C23990 * C1225 + C24845 + C24845 + C153809 * C1235) *
                C153513 * C153774 +
            (C24863 + C24862 + C24861) * C153513 * C23988 +
            (C24860 + C24859 + C24858) * C153513 * C23987) *
               C153413 * C153449) *
              C1135)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
            C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 + C23999 +
            C153761 * C162) *
               C153513 * C23987 +
           (C24335 + C24336 + C24337) * C153513 * C23988 + C24357 * C153774) *
              C153413 * C1218 -
          (C25825 * C153774 + (C24340 + C24339 + C24338) * C153513 * C23988 +
           (C24337 + C24336 + C24335) * C153513 * C23987) *
              C153413 * C1219 +
          (C24357 * C23987 + (C24343 + C24342 + C24341) * C153513 * C23988 +
           (C25829 + C25830 + C25831) * C153513 * C153774) *
              C153413 * C1220 -
          ((C23994 * C4585 + C25818 + C25818 + C153761 * C4591 +
            C23992 * C4586 + C25819 + C25819 + C153790 * C4592 +
            C23990 * C4587 + C25820 + C25820 + C153809 * C4593) *
               C153513 * C153774 +
           (C25831 + C25830 + C25829) * C153513 * C23988 + C25825 * C23987) *
              C153413 * C1221) *
         C153378) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153513 *
                C28229 +
            C28439 * C28230 + C28440 * C28231 + C28441 * C28232 +
            C28442 * C28233) *
               C153413 * C1131 -
           (C28443 * C28233 + C28442 * C28232 + C28441 * C28231 +
            C28440 * C28230 + C28439 * C28229) *
               C153413 * C153449) *
              C1133 +
          ((C28444 * C28229 + C28445 * C28230 + C28446 * C28231 +
            C28447 * C28232 + C28448 * C28233) *
               C153413 * C153449 -
           (C28447 * C28233 + C28446 * C28232 + C28445 * C28231 +
            C28444 * C28230 +
            (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C153513 *
                C28229) *
               C153413 * C1131) *
              C1134 +
          (((C28234 * C146 + C28247 + C28247 + C153338 * C162) * C153513 *
                C28229 +
            C28740 * C28230 + C28741 * C28231 + C28742 * C28232 +
            C28743 * C28233) *
               C153413 * C1131 -
           ((C28234 * C4585 + C28727 + C28727 + C153338 * C4591) * C153513 *
                C28233 +
            C28743 * C28232 + C28742 * C28231 + C28741 * C28230 +
            C28740 * C28229) *
               C153413 * C153449) *
              C1135)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153513 *
               C28229 +
           C28439 * C28230 + C28440 * C28231 + C28441 * C28232 +
           C28442 * C28233) *
              C153413 * C1218 -
          (C28443 * C28233 + C28442 * C28232 + C28441 * C28231 +
           C28440 * C28230 + C28439 * C28229) *
              C153413 * C1219 +
          (C28440 * C28229 + C28441 * C28230 + C28442 * C28231 +
           C28443 * C28232 + C29302 * C28233) *
              C153413 * C1220 -
          ((C28234 * C29292 + C29298 + C29298 + C153338 * C29294) * C153513 *
               C28233 +
           C29302 * C28232 + C28443 * C28231 + C28442 * C28230 +
           C28441 * C28229) *
              C153413 * C1221) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153813 +
             C31295 * C153802 + C31296 * C153777) *
                C23987 +
            (C30985 + C30986 + C30987) * C23988 + C31011 * C153774) *
               C153413 * C1131 -
           ((C30991 + C30992 + C30993) * C153774 +
            (C30990 + C30989 + C30988) * C23988 +
            (C30987 + C30986 + C30985) * C23987) *
               C153413 * C153449) *
              C1133 +
          (((C30994 + C30995 + C31018) * C23987 +
            (C30998 + C30999 + C31019) * C23988 +
            (C31002 + C31003 + C31020) * C153774) *
               C153413 * C153449 -
           (C31021 * C153774 + (C31018 + C30995 + C30994) * C23988 +
            (C31301 * C153777 + C31300 * C153802 +
             (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C153813) *
                C23987) *
               C153413 * C1131) *
              C1134 +
          ((((C28234 * C146 + C28247 + C28247 + C153338 * C162) * C153813 +
             C31779 * C153802 + C31780 * C153777) *
                C23987 +
            (C31523 + C31546 + C31547) * C23988 +
            (C31528 + C31548 + C31549) * C153774) *
               C153413 * C1131 -
           (((C28234 * C4833 + C31533 + C31533 + C153338 * C4839) * C153777 +
             (C28234 * C4145 + C28867 + C28867 + C153338 * C4153) * C153802 +
             C28738 * C153813) *
                C153774 +
            (C31549 + C31548 + C31528) * C23988 +
            (C31547 + C31546 + C31523) * C23987) *
               C153413 * C153449) *
              C1135)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153813 +
            C31295 * C153802 + C31296 * C153777) *
               C23987 +
           (C30985 + C30986 + C30987) * C23988 + C31011 * C153774) *
              C153413 * C1218 -
          (C32455 * C153774 + (C30990 + C30989 + C30988) * C23988 +
           (C30987 + C30986 + C30985) * C23987) *
              C153413 * C1219 +
          (C31011 * C23987 + (C30993 + C30992 + C30991) * C23988 +
           (C32452 + C32453 + C32454) * C153774) *
              C153413 * C1220 -
          (((C28234 * C29424 + C29436 + C29436 + C153338 * C29426) * C153777 +
            C29867 * C153802 + C28433 * C153813) *
               C153774 +
           (C32454 + C32453 + C32452) * C23988 + C32455 * C23987) *
              C153413 * C1221) *
         C153378) /
            (p * q * std::sqrt(p + q));
    d2ee[340] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 +
              C2737 + C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
              C153761 * C162) *
                 C153513 * C153812 +
             (C3086 + C3087 + C3088) * C153513 * C153800 + C3108 * C153774) *
                C1938 -
            (C5625 * C153774 + (C4213 + C4214 + C4215) * C153513 * C153800 +
             (C2733 * C498 + C3346 + C3346 + C153761 * C522 + C2731 * C499 +
              C3347 + C3347 + C2724 * C523 + C2729 * C500 + C3348 + C3348 +
              C2723 * C524) *
                 C153513 * C153812) *
                C153477) *
               C153724 +
           (((C4215 + C4214 + C4213) * C153513 * C153812 +
             (C4212 + C4211 + C4210) * C153513 * C153800 +
             (C5629 + C5630 + C5631) * C153513 * C153774) *
                C153477 -
            (C4609 * C153774 + (C3091 + C3090 + C3089) * C153513 * C153800 +
             (C3088 + C3087 + C3086) * C153513 * C153812) *
                C1938) *
               C153449) *
              C153716 +
          ((((C2729 * C499 + C3358 + C3358 + C2723 * C523 + C2731 * C498 +
              C3359 + C3359 + C2724 * C522 + C2733 * C497 + C3360 + C3360 +
              C153761 * C521) *
                 C153513 * C153812 +
             (C4216 + C4217 + C4218) * C153513 * C153800 +
             (C4219 + C4220 + C4221) * C153513 * C153774) *
                C153477 -
            (C3109 * C153774 + (C3097 + C3096 + C3095) * C153513 * C153800 +
             (C2733 * C147 + C2751 + C2751 + C153761 * C163 + C2731 * C146 +
              C2752 + C2752 + C2724 * C162 + C2729 * C145 + C2753 + C2753 +
              C2723 * C161) *
                 C153513 * C153812) *
                C1938) *
               C153724 +
           (((C3095 + C3096 + C3097) * C153513 * C153812 +
             (C3098 + C3099 + C3100) * C153513 * C153800 +
             (C3101 + C3102 + C3103) * C153513 * C153774) *
                C1938 -
            ((C2733 * C4146 + C4183 + C4183 + C153761 * C4154 + C2731 * C4145 +
              C4184 + C4184 + C2724 * C4153 + C2729 * C4144 + C4185 + C4185 +
              C2723 * C4152) *
                 C153513 * C153774 +
             (C4221 + C4220 + C4219) * C153513 * C153800 +
             (C4218 + C4217 + C4216) * C153513 * C153812) *
                C153477) *
               C153449) *
              C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 + C169 + C169 + C121 * C160 + C136 * C145 + C170 +
             C170 + C122 * C161 + C138 * C146 + C171 + C171 + C123 * C162 +
             C140 * C147 + C172 + C172 + C124 * C163 + C142 * C148 + C173 +
             C173 + C125 * C164) *
                C153513 * C153501 * C1938 -
            (C142 * C496 + C533 + C533 + C125 * C520 + C140 * C497 + C534 +
             C534 + C124 * C521 + C138 * C498 + C535 + C535 + C123 * C522 +
             C136 * C499 + C536 + C536 + C122 * C523 + C134 * C500 + C537 +
             C537 + C121 * C524) *
                C153513 * C153501 * C153477) *
               C153724 +
           ((C134 * C981 + C1000 + C1000 + C121 * C993 + C136 * C982 + C1001 +
             C1001 + C122 * C994 + C138 * C983 + C1002 + C1002 + C123 * C995 +
             C140 * C984 + C1003 + C1003 + C124 * C996 + C142 * C985 + C1004 +
             C1004 + C125 * C997) *
                C153513 * C153501 * C153477 -
            (C142 * C315 + C352 + C352 + C125 * C339 + C140 * C316 + C353 +
             C353 + C124 * C340 + C138 * C317 + C354 + C354 + C123 * C341 +
             C136 * C318 + C355 + C355 + C122 * C342 + C134 * C319 + C356 +
             C356 + C121 * C343) *
                C153513 * C153501 * C1938) *
               C153449) *
              C153716 +
          (((C134 * C499 + C543 + C543 + C121 * C523 + C136 * C498 + C544 +
             C544 + C122 * C522 + C138 * C497 + C545 + C545 + C123 * C521 +
             C140 * C496 + C546 + C546 + C124 * C520 + C142 * C506 + C547 +
             C547 + C125 * C530) *
                C153513 * C153501 * C153477 -
            (C142 * C149 + C174 + C174 + C125 * C165 + C140 * C148 + C175 +
             C175 + C124 * C164 + C138 * C147 + C176 + C176 + C123 * C163 +
             C136 * C146 + C177 + C177 + C122 * C162 + C134 * C145 + C178 +
             C178 + C121 * C161) *
                C153513 * C153501 * C1938) *
               C153724 +
           ((C134 * C318 + C362 + C362 + C121 * C342 + C136 * C317 + C363 +
             C363 + C122 * C341 + C138 * C316 + C364 + C364 + C123 * C340 +
             C140 * C315 + C365 + C365 + C124 * C339 + C142 * C325 + C366 +
             C366 + C125 * C349) *
                C153513 * C153501 * C1938 -
            (C142 * C986 + C1005 + C1005 + C125 * C998 + C140 * C985 + C1006 +
             C1006 + C124 * C997 + C138 * C984 + C1007 + C1007 + C123 * C996 +
             C136 * C983 + C1008 + C1008 + C122 * C995 + C134 * C982 + C1009 +
             C1009 + C121 * C994) *
                C153513 * C153501 * C153477) *
               C153449) *
              C153384)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 +
              C2737 + C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
              C153761 * C162) *
                 C153813 +
             (C7654 + C7655 + C7656) * C153802 + C7674 * C153777) *
                C153501 * C1938 -
            (C10397 * C153777 + (C7659 + C7658 + C7657) * C153802 +
             (C7656 + C7655 + C7654) * C153813) *
                C153501 * C153477) *
               C153724 +
           (((C4215 + C4214 + C4213) * C153813 +
             (C4870 + C4871 + C4872) * C153802 +
             (C9067 + C9068 + C9069) * C153777) *
                C153501 * C153477 -
            (C9063 * C153777 + (C4213 + C4214 + C4215) * C153802 +
             (C3088 + C3087 + C3086) * C153813) *
                C153501 * C1938) *
               C153449) *
              C153716 +
          ((((C7663 + C7664 + C7665) * C153813 +
             (C7666 + C7667 + C7668) * C153802 +
             (C7669 + C7670 + C7671) * C153777) *
                C153501 * C153477 -
            (C7675 * C153777 + (C7665 + C7664 + C7663) * C153802 +
             (C2733 * C147 + C2751 + C2751 + C153761 * C163 + C2731 * C146 +
              C2752 + C2752 + C2724 * C162 + C2729 * C145 + C2753 + C2753 +
              C2723 * C161) *
                 C153813) *
                C153501 * C1938) *
               C153724 +
           (((C3095 + C3096 + C3097) * C153813 +
             (C4216 + C4217 + C4218) * C153802 +
             (C8456 + C8457 + C8458) * C153777) *
                C153501 * C1938 -
            ((C2733 * C8437 + C8447 + C8447 + C153761 * C8439 + C2731 * C6216 +
              C8448 + C8448 + C2724 * C6228 + C2729 * C6217 + C8449 + C8449 +
              C2723 * C6229) *
                 C153777 +
             (C8458 + C8457 + C8456) * C153802 +
             (C4218 + C4217 + C4216) * C153813) *
                C153501 * C153477) *
               C153449) *
              C153384)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
              C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 +
              C23999 + C153761 * C162) *
                 C153513 * C23987 +
             (C24335 + C24336 + C24337) * C153513 * C23988 + C24357 * C153774) *
                C1938 -
            (C26823 * C153774 + (C25438 + C25439 + C25440) * C153513 * C23988 +
             (C23994 * C498 + C24583 + C24583 + C153761 * C522 + C23992 * C499 +
              C24584 + C24584 + C153790 * C523 + C23990 * C500 + C24585 +
              C24585 + C153809 * C524) *
                 C153513 * C23987) *
                C153477) *
               C153724 +
           (((C25440 + C25439 + C25438) * C153513 * C23987 +
             (C25437 + C25436 + C25435) * C153513 * C23988 +
             (C26827 + C26828 + C26829) * C153513 * C153774) *
                C153477 -
            (C25825 * C153774 + (C24340 + C24339 + C24338) * C153513 * C23988 +
             (C24337 + C24336 + C24335) * C153513 * C23987) *
                C1938) *
               C153449) *
              C153716 +
          ((((C23990 * C499 + C24595 + C24595 + C153809 * C523 + C23992 * C498 +
              C24596 + C24596 + C153790 * C522 + C23994 * C497 + C24597 +
              C24597 + C153761 * C521) *
                 C153513 * C23987 +
             (C25441 + C25442 + C25443) * C153513 * C23988 +
             (C25444 + C25445 + C25446) * C153513 * C153774) *
                C153477 -
            (C24358 * C153774 + (C24346 + C24345 + C24344) * C153513 * C23988 +
             (C23994 * C147 + C24012 + C24012 + C153761 * C163 + C23992 * C146 +
              C24013 + C24013 + C153790 * C162 + C23990 * C145 + C24014 +
              C24014 + C153809 * C161) *
                 C153513 * C23987) *
                C1938) *
               C153724 +
           (((C24344 + C24345 + C24346) * C153513 * C23987 +
             (C24347 + C24348 + C24349) * C153513 * C23988 +
             (C24350 + C24351 + C24352) * C153513 * C153774) *
                C1938 -
            ((C23994 * C4146 + C25408 + C25408 + C153761 * C4154 +
              C23992 * C4145 + C25409 + C25409 + C153790 * C4153 +
              C23990 * C4144 + C25410 + C25410 + C153809 * C4152) *
                 C153513 * C153774 +
             (C25446 + C25445 + C25444) * C153513 * C23988 +
             (C25443 + C25442 + C25441) * C153513 * C23987) *
                C153477) *
               C153449) *
              C153384)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153513 *
                 C28229 +
             C28439 * C28230 + C28440 * C28231 + C28441 * C28232 +
             C28442 * C28233) *
                C1938 -
            (C29081 * C28233 + C29082 * C28232 + C29083 * C28231 +
             C29084 * C28230 +
             (C28234 * C500 + C28581 + C28581 + C153338 * C524) * C153513 *
                 C28229) *
                C153477) *
               C153724 +
           ((C29084 * C28229 + C29083 * C28230 + C29082 * C28231 +
             C29081 * C28232 + C29868 * C28233) *
                C153477 -
            (C28443 * C28233 + C28442 * C28232 + C28441 * C28231 +
             C28440 * C28230 + C28439 * C28229) *
                C1938) *
               C153449) *
              C153716 +
          ((((C28234 * C499 + C28587 + C28587 + C153338 * C523) * C153513 *
                 C28229 +
             C29085 * C28230 + C29086 * C28231 + C29087 * C28232 +
             C29088 * C28233) *
                C153477 -
            (C28447 * C28233 + C28446 * C28232 + C28445 * C28231 +
             C28444 * C28230 +
             (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C153513 *
                 C28229) *
                C1938) *
               C153724 +
           ((C28444 * C28229 + C28445 * C28230 + C28446 * C28231 +
             C28447 * C28232 + C28448 * C28233) *
                C1938 -
            ((C28234 * C29033 + C29056 + C29056 + C153338 * C29037) * C153513 *
                 C28233 +
             C29088 * C28232 + C29087 * C28231 + C29086 * C28230 +
             C29085 * C28229) *
                C153477) *
               C153449) *
              C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153813 +
              C31295 * C153802 + C31296 * C153777) *
                 C23987 +
             (C30985 + C30986 + C30987) * C23988 + C31011 * C153774) *
                C1938 -
            (C33429 * C153774 + (C32077 + C32078 + C32079) * C23988 +
             (C31299 * C153777 + C31296 * C153802 + C31295 * C153813) *
                 C23987) *
                C153477) *
               C153724 +
           (((C32079 + C32078 + C32077) * C23987 +
             (C32076 + C32075 + C32074) * C23988 +
             (C33426 + C33427 + C33428) * C153774) *
                C153477 -
            (C32455 * C153774 + (C30990 + C30989 + C30988) * C23988 +
             (C30987 + C30986 + C30985) * C23987) *
                C1938) *
               C153449) *
              C153716 +
          ((((C31300 * C153813 + C31301 * C153802 + C31302 * C153777) * C23987 +
             (C32080 + C32081 + C32082) * C23988 +
             (C32083 + C32084 + C32085) * C153774) *
                C153477 -
            (C31021 * C153774 + (C31018 + C30995 + C30994) * C23988 +
             (C31301 * C153777 + C31300 * C153802 +
              (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C153813) *
                 C23987) *
                C1938) *
               C153724 +
           (((C30994 + C30995 + C31018) * C23987 +
             (C30998 + C30999 + C31019) * C23988 +
             (C31002 + C31003 + C31020) * C153774) *
                C1938 -
            (((C28234 * C32070 + C32086 + C32086 + C153338 * C32072) * C153777 +
              C31017 * C153802 + C29079 * C153813) *
                 C153774 +
             (C32085 + C32084 + C32083) * C23988 +
             (C32082 + C32081 + C32080) * C23987) *
                C153477) *
               C153449) *
              C153384)) /
            (p * q * std::sqrt(p + q));
    d2ee[341] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 +
             C2737 + C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
             C153761 * C162) *
                C153513 * C153812 +
            (C3086 + C3087 + C3088) * C153513 * C153800 + C3108 * C153774) *
               C153797 -
           (C5625 * C153774 + (C4213 + C4214 + C4215) * C153513 * C153800 +
            (C2733 * C498 + C3346 + C3346 + C153761 * C522 + C2731 * C499 +
             C3347 + C3347 + C2724 * C523 + C2729 * C500 + C3348 + C3348 +
             C2723 * C524) *
                C153513 * C153812) *
               C153798 +
           ((C2729 * C501 + C3349 + C3349 + C2723 * C525 + C2731 * C502 +
             C3350 + C3350 + C2724 * C526 + C2733 * C503 + C3351 + C3351 +
             C153761 * C527) *
                C153513 * C153812 +
            (C4870 + C4871 + C4872) * C153513 * C153800 +
            (C4873 + C4874 + C4875) * C153513 * C153774) *
               C2454) *
              C153724 +
          (((C4215 + C4214 + C4213) * C153513 * C153812 +
            (C4212 + C4211 + C4210) * C153513 * C153800 +
            (C5629 + C5630 + C5631) * C153513 * C153774) *
               C153798 -
           (C4609 * C153774 + (C3091 + C3090 + C3089) * C153513 * C153800 +
            (C3088 + C3087 + C3086) * C153513 * C153812) *
               C153797 -
           ((C2733 * C4833 + C4855 + C4855 + C153761 * C4839 + C2731 * C4834 +
             C4856 + C4856 + C2724 * C4840 + C2729 * C4835 + C4857 + C4857 +
             C2723 * C4841) *
                C153513 * C153774 +
            (C4875 + C4874 + C4873) * C153513 * C153800 +
            (C4872 + C4871 + C4870) * C153513 * C153812) *
               C2454) *
              C153449) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C144 + C169 + C169 + C121 * C160 + C136 * C145 + C170 +
            C170 + C122 * C161 + C138 * C146 + C171 + C171 + C123 * C162 +
            C140 * C147 + C172 + C172 + C124 * C163 + C142 * C148 + C173 +
            C173 + C125 * C164) *
               C153513 * C153501 * C153797 -
           (C142 * C496 + C533 + C533 + C125 * C520 + C140 * C497 + C534 +
            C534 + C124 * C521 + C138 * C498 + C535 + C535 + C123 * C522 +
            C136 * C499 + C536 + C536 + C122 * C523 + C134 * C500 + C537 +
            C537 + C121 * C524) *
               C153513 * C153501 * C153798 +
           (C134 * C501 + C538 + C538 + C121 * C525 + C136 * C502 + C539 +
            C539 + C122 * C526 + C138 * C503 + C540 + C540 + C123 * C527 +
            C140 * C504 + C541 + C541 + C124 * C528 + C142 * C505 + C542 +
            C542 + C125 * C529) *
               C153513 * C153501 * C2454) *
              C153724 +
          ((C134 * C981 + C1000 + C1000 + C121 * C993 + C136 * C982 + C1001 +
            C1001 + C122 * C994 + C138 * C983 + C1002 + C1002 + C123 * C995 +
            C140 * C984 + C1003 + C1003 + C124 * C996 + C142 * C985 + C1004 +
            C1004 + C125 * C997) *
               C153513 * C153501 * C153798 -
           (C142 * C315 + C352 + C352 + C125 * C339 + C140 * C316 + C353 +
            C353 + C124 * C340 + C138 * C317 + C354 + C354 + C123 * C341 +
            C136 * C318 + C355 + C355 + C122 * C342 + C134 * C319 + C356 +
            C356 + C121 * C343) *
               C153513 * C153501 * C153797 -
           (C142 * C1365 + C1381 + C1381 + C125 * C1375 + C140 * C1366 + C1382 +
            C1382 + C124 * C1376 + C138 * C1367 + C1383 + C1383 + C123 * C1377 +
            C136 * C1368 + C1384 + C1384 + C122 * C1378 + C134 * C1369 + C1385 +
            C1385 + C121 * C1379) *
               C153513 * C153501 * C2454) *
              C153449) *
         C153378) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 +
             C2737 + C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
             C153761 * C162) *
                C153813 +
            (C7654 + C7655 + C7656) * C153802 + C7674 * C153777) *
               C153501 * C153797 -
           (C10397 * C153777 + (C7659 + C7658 + C7657) * C153802 +
            (C7656 + C7655 + C7654) * C153813) *
               C153501 * C153798 +
           (C7674 * C153813 + (C7662 + C7661 + C7660) * C153802 +
            (C10404 + C10405 + C10406) * C153777) *
               C153501 * C2454) *
              C153724 +
          (((C4215 + C4214 + C4213) * C153813 +
            (C4870 + C4871 + C4872) * C153802 +
            (C9067 + C9068 + C9069) * C153777) *
               C153501 * C153798 -
           (C9063 * C153777 + (C4213 + C4214 + C4215) * C153802 +
            (C3088 + C3087 + C3086) * C153813) *
               C153501 * C153797 -
           ((C2733 * C9040 + C9057 + C9057 + C153761 * C9046 + C2731 * C9041 +
             C9058 + C9058 + C2724 * C9047 + C2729 * C9042 + C9059 + C9059 +
             C2723 * C9048) *
                C153777 +
            (C9069 + C9068 + C9067) * C153802 + C9063 * C153813) *
               C153501 * C2454) *
              C153449) *
         C153378) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
             C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 +
             C23999 + C153761 * C162) *
                C153513 * C23987 +
            (C24335 + C24336 + C24337) * C153513 * C23988 + C24357 * C153774) *
               C153797 -
           (C26823 * C153774 + (C25438 + C25439 + C25440) * C153513 * C23988 +
            (C23994 * C498 + C24583 + C24583 + C153761 * C522 + C23992 * C499 +
             C24584 + C24584 + C153790 * C523 + C23990 * C500 + C24585 +
             C24585 + C153809 * C524) *
                C153513 * C23987) *
               C153798 +
           ((C23990 * C501 + C24586 + C24586 + C153809 * C525 + C23992 * C502 +
             C24587 + C24587 + C153790 * C526 + C23994 * C503 + C24588 +
             C24588 + C153761 * C527) *
                C153513 * C23987 +
            (C26077 + C26078 + C26079) * C153513 * C23988 +
            (C26080 + C26081 + C26082) * C153513 * C153774) *
               C2454) *
              C153724 +
          (((C25440 + C25439 + C25438) * C153513 * C23987 +
            (C25437 + C25436 + C25435) * C153513 * C23988 +
            (C26827 + C26828 + C26829) * C153513 * C153774) *
               C153798 -
           (C25825 * C153774 + (C24340 + C24339 + C24338) * C153513 * C23988 +
            (C24337 + C24336 + C24335) * C153513 * C23987) *
               C153797 -
           ((C23994 * C4833 + C26062 + C26062 + C153761 * C4839 +
             C23992 * C4834 + C26063 + C26063 + C153790 * C4840 +
             C23990 * C4835 + C26064 + C26064 + C153809 * C4841) *
                C153513 * C153774 +
            (C26082 + C26081 + C26080) * C153513 * C23988 +
            (C26079 + C26078 + C26077) * C153513 * C23987) *
               C2454) *
              C153449) *
         C153378) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153513 *
                C28229 +
            C28439 * C28230 + C28440 * C28231 + C28441 * C28232 +
            C28442 * C28233) *
               C153797 -
           (C29081 * C28233 + C29082 * C28232 + C29083 * C28231 +
            C29084 * C28230 +
            (C28234 * C500 + C28581 + C28581 + C153338 * C524) * C153513 *
                C28229) *
               C153798 +
           ((C28234 * C501 + C28582 + C28582 + C153338 * C525) * C153513 *
                C28229 +
            C29449 * C28230 + C29450 * C28231 + C29451 * C28232 +
            C29452 * C28233) *
               C2454) *
              C153724 +
          ((C29084 * C28229 + C29083 * C28230 + C29082 * C28231 +
            C29081 * C28232 + C29868 * C28233) *
               C153798 -
           (C28443 * C28233 + C28442 * C28232 + C28441 * C28231 +
            C28440 * C28230 + C28439 * C28229) *
               C153797 -
           ((C28234 * C29424 + C29436 + C29436 + C153338 * C29426) * C153513 *
                C28233 +
            C29452 * C28232 + C29451 * C28231 + C29450 * C28230 +
            C29449 * C28229) *
               C2454) *
              C153449) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153813 +
             C31295 * C153802 + C31296 * C153777) *
                C23987 +
            (C30985 + C30986 + C30987) * C23988 + C31011 * C153774) *
               C153797 -
           (C33429 * C153774 + (C32077 + C32078 + C32079) * C23988 +
            (C31299 * C153777 + C31296 * C153802 + C31295 * C153813) * C23987) *
               C153798 +
           ((C31296 * C153813 + C31299 * C153802 + C34025 * C153777) * C23987 +
            (C32677 + C32678 + C32697) * C23988 +
            (C32681 + C32682 + C32698) * C153774) *
               C2454) *
              C153724 +
          (((C32079 + C32078 + C32077) * C23987 +
            (C32076 + C32075 + C32074) * C23988 +
            (C33426 + C33427 + C33428) * C153774) *
               C153798 -
           (C32455 * C153774 + (C30990 + C30989 + C30988) * C23988 +
            (C30987 + C30986 + C30985) * C23987) *
               C153797 -
           (((C28234 * C32673 + C32687 + C32687 + C153338 * C32675) * C153777 +
             C32696 * C153802 + C29447 * C153813) *
                C153774 +
            (C32698 + C32682 + C32681) * C23988 +
            (C32697 + C32678 + C32677) * C23987) *
               C2454) *
              C153449) *
         C153378) /
            (p * q * std::sqrt(p + q));
    d2ee[342] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             (((C134 * C144 + C169 + C169 + C121 * C160 + C136 * C145 + C170 +
                C170 + C122 * C161 + C138 * C146 + C171 + C171 + C123 * C162 +
                C140 * C147 + C172 + C172 + C124 * C163 + C142 * C148 + C173 +
                C173 + C125 * C164) *
                   C153513 * C153501 * C1938 -
               (C142 * C496 + C533 + C533 + C125 * C520 + C140 * C497 + C534 +
                C534 + C124 * C521 + C138 * C498 + C535 + C535 + C123 * C522 +
                C136 * C499 + C536 + C536 + C122 * C523 + C134 * C500 + C537 +
                C537 + C121 * C524) *
                   C153513 * C153501 * C153477) *
                  C153397 * C1133 +
              ((C134 * C499 + C543 + C543 + C121 * C523 + C136 * C498 + C544 +
                C544 + C122 * C522 + C138 * C497 + C545 + C545 + C123 * C521 +
                C140 * C496 + C546 + C546 + C124 * C520 + C142 * C506 + C547 +
                C547 + C125 * C530) *
                   C153513 * C153501 * C153477 -
               (C142 * C149 + C174 + C174 + C125 * C165 + C140 * C148 + C175 +
                C175 + C124 * C164 + C138 * C147 + C176 + C176 + C123 * C163 +
                C136 * C146 + C177 + C177 + C122 * C162 + C134 * C145 + C178 +
                C178 + C121 * C161) *
                   C153513 * C153501 * C1938) *
                  C153397 * C1134 +
              ((C134 * C146 + C179 + C179 + C121 * C162 + C136 * C147 + C180 +
                C180 + C122 * C163 + C138 * C148 + C181 + C181 + C123 * C164 +
                C140 * C149 + C182 + C182 + C124 * C165 + C142 * C150 + C183 +
                C183 + C125 * C166) *
                   C153513 * C153501 * C1938 -
               (C142 * C811 + C815 + C815 + C125 * C813 + C140 * C506 + C816 +
                C816 + C124 * C530 + C138 * C496 + C817 + C817 + C123 * C520 +
                C136 * C497 + C818 + C818 + C122 * C521 + C134 * C498 + C819 +
                C819 + C121 * C522) *
                   C153513 * C153501 * C153477) *
                  C153397 * C1135) +
         std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             (((C134 * C144 + C169 + C169 + C121 * C160 + C136 * C145 + C170 +
                C170 + C122 * C161 + C138 * C146 + C171 + C171 + C123 * C162 +
                C140 * C147 + C172 + C172 + C124 * C163 + C142 * C148 + C173 +
                C173 + C125 * C164) *
                   C153513 * C153501 * C1938 -
               (C142 * C496 + C533 + C533 + C125 * C520 + C140 * C497 + C534 +
                C534 + C124 * C521 + C138 * C498 + C535 + C535 + C123 * C522 +
                C136 * C499 + C536 + C536 + C122 * C523 + C134 * C500 + C537 +
                C537 + C121 * C524) *
                   C153513 * C153501 * C153477) *
                  C310 +
              ((C134 * C981 + C1000 + C1000 + C121 * C993 + C136 * C982 +
                C1001 + C1001 + C122 * C994 + C138 * C983 + C1002 + C1002 +
                C123 * C995 + C140 * C984 + C1003 + C1003 + C124 * C996 +
                C142 * C985 + C1004 + C1004 + C125 * C997) *
                   C153513 * C153501 * C153477 -
               (C142 * C315 + C352 + C352 + C125 * C339 + C140 * C316 + C353 +
                C353 + C124 * C340 + C138 * C317 + C354 + C354 + C123 * C341 +
                C136 * C318 + C355 + C355 + C122 * C342 + C134 * C319 + C356 +
                C356 + C121 * C343) *
                   C153513 * C153501 * C1938) *
                  C311 +
              ((C134 * C320 + C357 + C357 + C121 * C344 + C136 * C321 + C358 +
                C358 + C122 * C345 + C138 * C322 + C359 + C359 + C123 * C346 +
                C140 * C323 + C360 + C360 + C124 * C347 + C142 * C324 + C361 +
                C361 + C125 * C348) *
                   C153513 * C153501 * C1938 -
               (C142 * C1796 + C1812 + C1812 + C125 * C1806 + C140 * C1797 +
                C1813 + C1813 + C124 * C1807 + C138 * C1798 + C1814 + C1814 +
                C123 * C1808 + C136 * C1799 + C1815 + C1815 + C122 * C1809 +
                C134 * C1800 + C1816 + C1816 + C121 * C1810) *
                   C153513 * C153501 * C153477) *
                  C312) *
             C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((C134 * C144 + C169 + C169 + C121 * C160 + C136 * C145 + C170 + C170 +
           C122 * C161 + C138 * C146 + C171 + C171 + C123 * C162 + C140 * C147 +
           C172 + C172 + C124 * C163 + C142 * C148 + C173 + C173 +
           C125 * C164) *
              C153513 * C153501 * C2144 -
          (C142 * C496 + C533 + C533 + C125 * C520 + C140 * C497 + C534 + C534 +
           C124 * C521 + C138 * C498 + C535 + C535 + C123 * C522 + C136 * C499 +
           C536 + C536 + C122 * C523 + C134 * C500 + C537 + C537 +
           C121 * C524) *
              C153513 * C153501 * C2145 +
          (C134 * C501 + C538 + C538 + C121 * C525 + C136 * C502 + C539 + C539 +
           C122 * C526 + C138 * C503 + C540 + C540 + C123 * C527 + C140 * C504 +
           C541 + C541 + C124 * C528 + C142 * C505 + C542 + C542 +
           C125 * C529) *
              C153513 * C153501 * C2146 -
          (C142 * C2148 + C2164 + C2164 + C125 * C2158 + C140 * C2149 + C2165 +
           C2165 + C124 * C2159 + C138 * C2150 + C2166 + C2166 + C123 * C2160 +
           C136 * C2151 + C2167 + C2167 + C122 * C2161 + C134 * C2152 + C2168 +
           C2168 + C121 * C2162) *
              C153513 * C153501 * C2147) *
         C153397 * C153378) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 +
             C2737 + C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
             C153761 * C162) *
                C153513 * C153812 +
            (C3086 + C3087 + C3088) * C153513 * C153800 + C3108 * C153774) *
               C1938 -
           (C5625 * C153774 + (C4213 + C4214 + C4215) * C153513 * C153800 +
            (C2733 * C498 + C3346 + C3346 + C153761 * C522 + C2731 * C499 +
             C3347 + C3347 + C2724 * C523 + C2729 * C500 + C3348 + C3348 +
             C2723 * C524) *
                C153513 * C153812) *
               C153477) *
              C153397 * C1133 +
          (((C2729 * C499 + C3358 + C3358 + C2723 * C523 + C2731 * C498 +
             C3359 + C3359 + C2724 * C522 + C2733 * C497 + C3360 + C3360 +
             C153761 * C521) *
                C153513 * C153812 +
            (C4216 + C4217 + C4218) * C153513 * C153800 +
            (C4219 + C4220 + C4221) * C153513 * C153774) *
               C153477 -
           (C3109 * C153774 + (C3097 + C3096 + C3095) * C153513 * C153800 +
            (C2733 * C147 + C2751 + C2751 + C153761 * C163 + C2731 * C146 +
             C2752 + C2752 + C2724 * C162 + C2729 * C145 + C2753 + C2753 +
             C2723 * C161) *
                C153513 * C153812) *
               C1938) *
              C153397 * C1134 +
          (((C2729 * C146 + C2754 + C2754 + C2723 * C162 + C2731 * C147 +
             C2755 + C2755 + C2724 * C163 + C2733 * C148 + C2756 + C2756 +
             C153761 * C164) *
                C153513 * C153812 +
            (C3621 + C3622 + C3623) * C153513 * C153800 +
            (C3624 + C3625 + C3626) * C153513 * C153774) *
               C1938 -
           ((C2733 * C1796 + C3845 + C3845 + C153761 * C1806 + C2731 * C1797 +
             C3846 + C3846 + C2724 * C1807 + C2729 * C1798 + C3847 + C3847 +
             C2723 * C1808) *
                C153513 * C153774 +
            (C2733 * C985 + C3848 + C3848 + C153761 * C997 + C2731 * C984 +
             C3849 + C3849 + C2724 * C996 + C2729 * C983 + C3850 + C3850 +
             C2723 * C995) *
                C153513 * C153800 +
            (C2733 * C496 + C3851 + C3851 + C153761 * C520 + C2731 * C497 +
             C3852 + C3852 + C2724 * C521 + C2729 * C498 + C3853 + C3853 +
             C2723 * C522) *
                C153513 * C153812) *
               C153477) *
              C153397 * C1135)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 +
             C2737 + C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
             C153761 * C162) *
                C153513 * C153812 +
            (C3086 + C3087 + C3088) * C153513 * C153800 + C3108 * C153774) *
               C1938 -
           (C5625 * C153774 + (C4213 + C4214 + C4215) * C153513 * C153800 +
            (C2733 * C498 + C3346 + C3346 + C153761 * C522 + C2731 * C499 +
             C3347 + C3347 + C2724 * C523 + C2729 * C500 + C3348 + C3348 +
             C2723 * C524) *
                C153513 * C153812) *
               C153477) *
              C310 +
          (((C4215 + C4214 + C4213) * C153513 * C153812 +
            (C4212 + C4211 + C4210) * C153513 * C153800 +
            (C5629 + C5630 + C5631) * C153513 * C153774) *
               C153477 -
           (C4609 * C153774 + (C3091 + C3090 + C3089) * C153513 * C153800 +
            (C3088 + C3087 + C3086) * C153513 * C153812) *
               C1938) *
              C311 +
          ((C3108 * C153812 + (C3094 + C3093 + C3092) * C153513 * C153800 +
            (C4613 + C4614 + C4615) * C153513 * C153774) *
               C1938 -
           ((C2733 * C5601 + C5618 + C5618 + C153761 * C5607 + C2731 * C5602 +
             C5619 + C5619 + C2724 * C5608 + C2729 * C5603 + C5620 + C5620 +
             C2723 * C5609) *
                C153513 * C153774 +
            (C5631 + C5630 + C5629) * C153513 * C153800 + C5625 * C153812) *
               C153477) *
              C312) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 + C2737 +
            C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
            C153761 * C162) *
               C153513 * C153812 +
           (C3086 + C3087 + C3088) * C153513 * C153800 + C3108 * C153774) *
              C2144 -
          (C5625 * C153774 + (C4213 + C4214 + C4215) * C153513 * C153800 +
           (C2733 * C498 + C3346 + C3346 + C153761 * C522 + C2731 * C499 +
            C3347 + C3347 + C2724 * C523 + C2729 * C500 + C3348 + C3348 +
            C2723 * C524) *
               C153513 * C153812) *
              C2145 +
          ((C2729 * C501 + C3349 + C3349 + C2723 * C525 + C2731 * C502 + C3350 +
            C3350 + C2724 * C526 + C2733 * C503 + C3351 + C3351 +
            C153761 * C527) *
               C153513 * C153812 +
           (C4870 + C4871 + C4872) * C153513 * C153800 +
           (C4873 + C4874 + C4875) * C153513 * C153774) *
              C2146 -
          ((C2733 * C6213 + C6232 + C6232 + C153761 * C6225 + C2731 * C6214 +
            C6233 + C6233 + C2724 * C6226 + C2729 * C6215 + C6234 + C6234 +
            C2723 * C6227) *
               C153513 * C153774 +
           (C2733 * C6216 + C6235 + C6235 + C153761 * C6228 + C2731 * C6217 +
            C6236 + C6236 + C2724 * C6229 + C2729 * C6218 + C6237 + C6237 +
            C2723 * C6230) *
               C153513 * C153800 +
           (C2733 * C2150 + C6238 + C6238 + C153761 * C2160 + C2731 * C2151 +
            C6239 + C6239 + C2724 * C2161 + C2729 * C2152 + C6240 + C6240 +
            C2723 * C2162) *
               C153513 * C153812) *
              C2147) *
         C153397 * C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 +
             C2737 + C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
             C153761 * C162) *
                C153813 +
            (C7654 + C7655 + C7656) * C153802 + C7674 * C153777) *
               C153501 * C1938 -
           ((C7660 + C7661 + C7662) * C153777 +
            (C7659 + C7658 + C7657) * C153802 +
            (C7656 + C7655 + C7654) * C153813) *
               C153501 * C153477) *
              C153397 * C1133 +
          (((C7663 + C7664 + C7665) * C153813 +
            (C7666 + C7667 + C7668) * C153802 +
            (C7669 + C7670 + C7671) * C153777) *
               C153501 * C153477 -
           (C7675 * C153777 + (C7665 + C7664 + C7663) * C153802 +
            (C2733 * C147 + C2751 + C2751 + C153761 * C163 + C2731 * C146 +
             C2752 + C2752 + C2724 * C162 + C2729 * C145 + C2753 + C2753 +
             C2723 * C161) *
                C153813) *
               C153501 * C1938) *
              C153397 * C1134 +
          (((C2729 * C146 + C2754 + C2754 + C2723 * C162 + C2731 * C147 +
             C2755 + C2755 + C2724 * C163 + C2733 * C148 + C2756 + C2756 +
             C153761 * C164) *
                C153813 +
            (C8142 + C8143 + C8144) * C153802 +
            (C8145 + C8146 + C8147) * C153777) *
               C153501 * C1938 -
           ((C2733 * C2148 + C8127 + C8127 + C153761 * C2158 + C2731 * C2149 +
             C8128 + C8128 + C2724 * C2159 + C2729 * C2150 + C8129 + C8129 +
             C2723 * C2160) *
                C153777 +
            (C8147 + C8146 + C8145) * C153802 +
            (C8144 + C8143 + C8142) * C153813) *
               C153501 * C153477) *
              C153397 * C1135)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 +
             C2737 + C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
             C153761 * C162) *
                C153813 +
            (C7654 + C7655 + C7656) * C153802 + C7674 * C153777) *
               C153501 * C1938 -
           ((C7660 + C7661 + C7662) * C153777 +
            (C7659 + C7658 + C7657) * C153802 +
            (C7656 + C7655 + C7654) * C153813) *
               C153501 * C153477) *
              C310 +
          (((C4215 + C4214 + C4213) * C153813 +
            (C4870 + C4871 + C4872) * C153802 +
            (C9067 + C9068 + C9069) * C153777) *
               C153501 * C153477 -
           (C9063 * C153777 + (C4213 + C4214 + C4215) * C153802 +
            (C3088 + C3087 + C3086) * C153813) *
               C153501 * C1938) *
              C311 +
          ((C3106 * C153813 + (C4212 + C4211 + C4210) * C153802 +
            (C4873 + C4874 + C4875) * C153777) *
               C153501 * C1938 -
           ((C2733 * C6213 + C6232 + C6232 + C153761 * C6225 + C2731 * C6214 +
             C6233 + C6233 + C2724 * C6226 + C2729 * C6215 + C6234 + C6234 +
             C2723 * C6227) *
                C153777 +
            (C4875 + C4874 + C4873) * C153802 + C5621 * C153813) *
               C153501 * C153477) *
              C312) *
         C153378) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 + C2737 +
            C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
            C153761 * C162) *
               C153813 +
           (C7654 + C7655 + C7656) * C153802 + C7674 * C153777) *
              C153501 * C2144 -
          (C10397 * C153777 + (C7659 + C7658 + C7657) * C153802 +
           (C7656 + C7655 + C7654) * C153813) *
              C153501 * C2145 +
          (C7674 * C153813 + (C7662 + C7661 + C7660) * C153802 +
           (C10404 + C10405 + C10406) * C153777) *
              C153501 * C2146 -
          ((C2733 * C10377 + C10394 + C10394 + C153761 * C10383 +
            C2731 * C10378 + C10395 + C10395 + C2724 * C10384 + C2729 * C10379 +
            C10396 + C10396 + C2723 * C10385) *
               C153777 +
           (C10406 + C10405 + C10404) * C153802 + C10397 * C153813) *
              C153501 * C2147) *
         C153397 * C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
             C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 +
             C23999 + C153761 * C162) *
                C153513 * C23987 +
            (C24335 + C24336 + C24337) * C153513 * C23988 + C24357 * C153774) *
               C1938 -
           (C26823 * C153774 + (C25438 + C25439 + C25440) * C153513 * C23988 +
            (C23994 * C498 + C24583 + C24583 + C153761 * C522 + C23992 * C499 +
             C24584 + C24584 + C153790 * C523 + C23990 * C500 + C24585 +
             C24585 + C153809 * C524) *
                C153513 * C23987) *
               C153477) *
              C153397 * C1133 +
          (((C23990 * C499 + C24595 + C24595 + C153809 * C523 + C23992 * C498 +
             C24596 + C24596 + C153790 * C522 + C23994 * C497 + C24597 +
             C24597 + C153761 * C521) *
                C153513 * C23987 +
            (C25441 + C25442 + C25443) * C153513 * C23988 +
            (C25444 + C25445 + C25446) * C153513 * C153774) *
               C153477 -
           (C24358 * C153774 + (C24346 + C24345 + C24344) * C153513 * C23988 +
            (C23994 * C147 + C24012 + C24012 + C153761 * C163 + C23992 * C146 +
             C24013 + C24013 + C153790 * C162 + C23990 * C145 + C24014 +
             C24014 + C153809 * C161) *
                C153513 * C23987) *
               C1938) *
              C153397 * C1134 +
          (((C23990 * C146 + C24015 + C24015 + C153809 * C162 + C23992 * C147 +
             C24016 + C24016 + C153790 * C163 + C23994 * C148 + C24017 +
             C24017 + C153761 * C164) *
                C153513 * C23987 +
            (C24858 + C24859 + C24860) * C153513 * C23988 +
            (C24861 + C24862 + C24863) * C153513 * C153774) *
               C1938 -
           ((C23994 * C1796 + C25082 + C25082 + C153761 * C1806 +
             C23992 * C1797 + C25083 + C25083 + C153790 * C1807 +
             C23990 * C1798 + C25084 + C25084 + C153809 * C1808) *
                C153513 * C153774 +
            (C23994 * C985 + C25085 + C25085 + C153761 * C997 + C23992 * C984 +
             C25086 + C25086 + C153790 * C996 + C23990 * C983 + C25087 +
             C25087 + C153809 * C995) *
                C153513 * C23988 +
            (C23994 * C496 + C25088 + C25088 + C153761 * C520 + C23992 * C497 +
             C25089 + C25089 + C153790 * C521 + C23990 * C498 + C25090 +
             C25090 + C153809 * C522) *
                C153513 * C23987) *
               C153477) *
              C153397 * C1135)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
             C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 +
             C23999 + C153761 * C162) *
                C153513 * C23987 +
            (C24335 + C24336 + C24337) * C153513 * C23988 + C24357 * C153774) *
               C1938 -
           (C26823 * C153774 + (C25438 + C25439 + C25440) * C153513 * C23988 +
            (C23994 * C498 + C24583 + C24583 + C153761 * C522 + C23992 * C499 +
             C24584 + C24584 + C153790 * C523 + C23990 * C500 + C24585 +
             C24585 + C153809 * C524) *
                C153513 * C23987) *
               C153477) *
              C310 +
          (((C25440 + C25439 + C25438) * C153513 * C23987 +
            (C25437 + C25436 + C25435) * C153513 * C23988 +
            (C26827 + C26828 + C26829) * C153513 * C153774) *
               C153477 -
           (C25825 * C153774 + (C24340 + C24339 + C24338) * C153513 * C23988 +
            (C24337 + C24336 + C24335) * C153513 * C23987) *
               C1938) *
              C311 +
          ((C24357 * C23987 + (C24343 + C24342 + C24341) * C153513 * C23988 +
            (C25829 + C25830 + C25831) * C153513 * C153774) *
               C1938 -
           ((C23994 * C5601 + C26816 + C26816 + C153761 * C5607 +
             C23992 * C5602 + C26817 + C26817 + C153790 * C5608 +
             C23990 * C5603 + C26818 + C26818 + C153809 * C5609) *
                C153513 * C153774 +
            (C26829 + C26828 + C26827) * C153513 * C23988 + C26823 * C23987) *
               C153477) *
              C312) *
         C153378) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
            C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 + C23999 +
            C153761 * C162) *
               C153513 * C23987 +
           (C24335 + C24336 + C24337) * C153513 * C23988 + C24357 * C153774) *
              C2144 -
          (C26823 * C153774 + (C25438 + C25439 + C25440) * C153513 * C23988 +
           (C23994 * C498 + C24583 + C24583 + C153761 * C522 + C23992 * C499 +
            C24584 + C24584 + C153790 * C523 + C23990 * C500 + C24585 + C24585 +
            C153809 * C524) *
               C153513 * C23987) *
              C2145 +
          ((C23990 * C501 + C24586 + C24586 + C153809 * C525 + C23992 * C502 +
            C24587 + C24587 + C153790 * C526 + C23994 * C503 + C24588 + C24588 +
            C153761 * C527) *
               C153513 * C23987 +
           (C26077 + C26078 + C26079) * C153513 * C23988 +
           (C26080 + C26081 + C26082) * C153513 * C153774) *
              C2146 -
          ((C23994 * C6213 + C27412 + C27412 + C153761 * C6225 +
            C23992 * C6214 + C27413 + C27413 + C153790 * C6226 +
            C23990 * C6215 + C27414 + C27414 + C153809 * C6227) *
               C153513 * C153774 +
           (C23994 * C6216 + C27415 + C27415 + C153761 * C6228 +
            C23992 * C6217 + C27416 + C27416 + C153790 * C6229 +
            C23990 * C6218 + C27417 + C27417 + C153809 * C6230) *
               C153513 * C23988 +
           (C23994 * C2150 + C27418 + C27418 + C153761 * C2160 +
            C23992 * C2151 + C27419 + C27419 + C153790 * C2161 +
            C23990 * C2152 + C27420 + C27420 + C153809 * C2162) *
               C153513 * C23987) *
              C2147) *
         C153397 * C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153513 *
                C28229 +
            C28439 * C28230 + C28440 * C28231 + C28441 * C28232 +
            C28442 * C28233) *
               C1938 -
           (C29081 * C28233 + C29082 * C28232 + C29083 * C28231 +
            C29084 * C28230 +
            (C28234 * C500 + C28581 + C28581 + C153338 * C524) * C153513 *
                C28229) *
               C153477) *
              C153397 * C1133 +
          (((C28234 * C499 + C28587 + C28587 + C153338 * C523) * C153513 *
                C28229 +
            C29085 * C28230 + C29086 * C28231 + C29087 * C28232 +
            C29088 * C28233) *
               C153477 -
           (C28447 * C28233 + C28446 * C28232 + C28445 * C28231 +
            C28444 * C28230 +
            (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C153513 *
                C28229) *
               C1938) *
              C153397 * C1134 +
          (((C28234 * C146 + C28247 + C28247 + C153338 * C162) * C153513 *
                C28229 +
            C28740 * C28230 + C28741 * C28231 + C28742 * C28232 +
            C28743 * C28233) *
               C1938 -
           ((C28234 * C5601 + C28866 + C28866 + C153338 * C5607) * C153513 *
                C28233 +
            (C28234 * C4145 + C28867 + C28867 + C153338 * C4153) * C153513 *
                C28232 +
            (C28234 * C1798 + C28868 + C28868 + C153338 * C1808) * C153513 *
                C28231 +
            (C28234 * C983 + C28869 + C28869 + C153338 * C995) * C153513 *
                C28230 +
            (C28234 * C498 + C28870 + C28870 + C153338 * C522) * C153513 *
                C28229) *
               C153477) *
              C153397 * C1135)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153513 *
                C28229 +
            C28439 * C28230 + C28440 * C28231 + C28441 * C28232 +
            C28442 * C28233) *
               C1938 -
           (C29081 * C28233 + C29082 * C28232 + C29083 * C28231 +
            C29084 * C28230 +
            (C28234 * C500 + C28581 + C28581 + C153338 * C524) * C153513 *
                C28229) *
               C153477) *
              C310 +
          ((C29084 * C28229 + C29083 * C28230 + C29082 * C28231 +
            C29081 * C28232 + C29868 * C28233) *
               C153477 -
           (C28443 * C28233 + C28442 * C28232 + C28441 * C28231 +
            C28440 * C28230 + C28439 * C28229) *
               C1938) *
              C311 +
          ((C28440 * C28229 + C28441 * C28230 + C28442 * C28231 +
            C28443 * C28232 + C29302 * C28233) *
               C1938 -
           ((C28234 * C29858 + C29864 + C29864 + C153338 * C29860) * C153513 *
                C28233 +
            C29868 * C28232 + C29081 * C28231 + C29082 * C28230 +
            C29083 * C28229) *
               C153477) *
              C312) *
         C153378) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153513 *
               C28229 +
           C28439 * C28230 + C28440 * C28231 + C28441 * C28232 +
           C28442 * C28233) *
              C2144 -
          (C29081 * C28233 + C29082 * C28232 + C29083 * C28231 +
           C29084 * C28230 +
           (C28234 * C500 + C28581 + C28581 + C153338 * C524) * C153513 *
               C28229) *
              C2145 +
          ((C28234 * C501 + C28582 + C28582 + C153338 * C525) * C153513 *
               C28229 +
           C29449 * C28230 + C29450 * C28231 + C29451 * C28232 +
           C29452 * C28233) *
              C2146 -
          ((C28234 * C30194 + C30201 + C30201 + C153338 * C30198) * C153513 *
               C28233 +
           (C28234 * C30195 + C30202 + C30202 + C153338 * C30199) * C153513 *
               C28232 +
           (C28234 * C6215 + C30203 + C30203 + C153338 * C6227) * C153513 *
               C28231 +
           (C28234 * C6218 + C30204 + C30204 + C153338 * C6230) * C153513 *
               C28230 +
           (C28234 * C2152 + C30205 + C30205 + C153338 * C2162) * C153513 *
               C28229) *
              C2147) *
         C153397 * C153378) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153813 +
             C31295 * C153802 + C31296 * C153777) *
                C23987 +
            (C30985 + C30986 + C30987) * C23988 + C31011 * C153774) *
               C1938 -
           (C33429 * C153774 + (C32077 + C32078 + C32079) * C23988 +
            (C31299 * C153777 + C31296 * C153802 + C31295 * C153813) * C23987) *
               C153477) *
              C153397 * C1133 +
          (((C31300 * C153813 + C31301 * C153802 + C31302 * C153777) * C23987 +
            (C32080 + C32081 + C32082) * C23988 +
            (C32083 + C32084 + C32085) * C153774) *
               C153477 -
           (C31021 * C153774 + (C31018 + C30995 + C30994) * C23988 +
            (C31301 * C153777 + C31300 * C153802 +
             (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C153813) *
                C23987) *
               C1938) *
              C153397 * C1134 +
          ((((C28234 * C146 + C28247 + C28247 + C153338 * C162) * C153813 +
             C31779 * C153802 + C31780 * C153777) *
                C23987 +
            (C31523 + C31546 + C31547) * C23988 +
            (C31528 + C31548 + C31549) * C153774) *
               C1938 -
           (((C28234 * C6213 + C31772 + C31772 + C153338 * C6225) * C153777 +
             C31545 * C153802 + C31544 * C153813) *
                C153774 +
            ((C28234 * C6216 + C31773 + C31773 + C153338 * C6228) * C153777 +
             C31543 * C153802 + C31542 * C153813) *
                C23988 +
            ((C28234 * C2150 + C31774 + C31774 + C153338 * C2160) * C153777 +
             C31780 * C153802 + C31779 * C153813) *
                C23987) *
               C153477) *
              C153397 * C1135)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153813 +
             C31295 * C153802 + C31296 * C153777) *
                C23987 +
            (C30985 + C30986 + C30987) * C23988 + C31011 * C153774) *
               C1938 -
           (C33429 * C153774 + (C32077 + C32078 + C32079) * C23988 +
            (C31299 * C153777 + C31296 * C153802 + C31295 * C153813) * C23987) *
               C153477) *
              C310 +
          (((C32079 + C32078 + C32077) * C23987 +
            (C32076 + C32075 + C32074) * C23988 +
            (C33426 + C33427 + C33428) * C153774) *
               C153477 -
           (C32455 * C153774 + (C30990 + C30989 + C30988) * C23988 +
            (C30987 + C30986 + C30985) * C23987) *
               C1938) *
              C311 +
          ((C31011 * C23987 + (C30993 + C30992 + C30991) * C23988 +
            (C32452 + C32453 + C32454) * C153774) *
               C1938 -
           (((C28234 * C30194 + C30201 + C30201 + C153338 * C30198) * C153777 +
             C29448 * C153802 + C29073 * C153813) *
                C153774 +
            (C33428 + C33427 + C33426) * C23988 + C33429 * C23987) *
               C153477) *
              C312) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153813 +
            C31295 * C153802 + C31296 * C153777) *
               C23987 +
           (C30985 + C30986 + C30987) * C23988 + C31011 * C153774) *
              C2144 -
          (C33429 * C153774 + (C32077 + C32078 + C32079) * C23988 +
           (C31299 * C153777 + C31296 * C153802 + C31295 * C153813) * C23987) *
              C2145 +
          ((C31296 * C153813 + C31299 * C153802 + C34025 * C153777) * C23987 +
           (C32677 + C32678 + C32697) * C23988 +
           (C32681 + C32682 + C32698) * C153774) *
              C2146 -
          (((C28234 * C34011 + C34020 + C34020 + C153338 * C34015) * C153777 +
            C32695 * C153802 + C31297 * C153813) *
               C153774 +
           ((C28234 * C34012 + C34021 + C34021 + C153338 * C34016) * C153777 +
            C32694 * C153802 + C31298 * C153813) *
               C23988 +
           ((C28234 * C10379 + C34022 + C34022 + C153338 * C10385) * C153777 +
            C34025 * C153802 + C31299 * C153813) *
               C23987) *
              C2147) *
         C153397 * C153378) /
            (p * q * std::sqrt(p + q));
    d2ee[343] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 +
             C2737 + C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
             C153761 * C162) *
                C153513 * C153812 +
            (C3086 + C3087 + C3088) * C153513 * C153800 + C3108 * C153774) *
               C153797 -
           (C5625 * C153774 + (C4213 + C4214 + C4215) * C153513 * C153800 +
            (C2733 * C498 + C3346 + C3346 + C153761 * C522 + C2731 * C499 +
             C3347 + C3347 + C2724 * C523 + C2729 * C500 + C3348 + C3348 +
             C2723 * C524) *
                C153513 * C153812) *
               C153798 +
           ((C2729 * C501 + C3349 + C3349 + C2723 * C525 + C2731 * C502 +
             C3350 + C3350 + C2724 * C526 + C2733 * C503 + C3351 + C3351 +
             C153761 * C527) *
                C153513 * C153812 +
            (C4870 + C4871 + C4872) * C153513 * C153800 +
            (C4873 + C4874 + C4875) * C153513 * C153774) *
               C2454) *
              C153397 * C153716 +
          (((C2729 * C499 + C3358 + C3358 + C2723 * C523 + C2731 * C498 +
             C3359 + C3359 + C2724 * C522 + C2733 * C497 + C3360 + C3360 +
             C153761 * C521) *
                C153513 * C153812 +
            (C4216 + C4217 + C4218) * C153513 * C153800 +
            (C4219 + C4220 + C4221) * C153513 * C153774) *
               C153798 -
           (C3109 * C153774 + (C3097 + C3096 + C3095) * C153513 * C153800 +
            (C2733 * C147 + C2751 + C2751 + C153761 * C163 + C2731 * C146 +
             C2752 + C2752 + C2724 * C162 + C2729 * C145 + C2753 + C2753 +
             C2723 * C161) *
                C153513 * C153812) *
               C153797 -
           ((C2733 * C3330 + C3367 + C3367 + C153761 * C3338 + C2731 * C3329 +
             C3368 + C3368 + C2724 * C3337 + C2729 * C3328 + C3369 + C3369 +
             C2723 * C3336) *
                C153513 * C153774 +
            (C2733 * C1366 + C3370 + C3370 + C153761 * C1376 + C2731 * C1367 +
             C3371 + C3371 + C2724 * C1377 + C2729 * C1368 + C3372 + C3372 +
             C2723 * C1378) *
                C153513 * C153800 +
            (C2733 * C504 + C3373 + C3373 + C153761 * C528 + C2731 * C503 +
             C3374 + C3374 + C2724 * C527 + C2729 * C502 + C3375 + C3375 +
             C2723 * C526) *
                C153513 * C153812) *
               C2454) *
              C153397 * C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C144 + C169 + C169 + C121 * C160 + C136 * C145 + C170 +
            C170 + C122 * C161 + C138 * C146 + C171 + C171 + C123 * C162 +
            C140 * C147 + C172 + C172 + C124 * C163 + C142 * C148 + C173 +
            C173 + C125 * C164) *
               C153513 * C153501 * C153797 -
           (C142 * C496 + C533 + C533 + C125 * C520 + C140 * C497 + C534 +
            C534 + C124 * C521 + C138 * C498 + C535 + C535 + C123 * C522 +
            C136 * C499 + C536 + C536 + C122 * C523 + C134 * C500 + C537 +
            C537 + C121 * C524) *
               C153513 * C153501 * C153798 +
           (C134 * C501 + C538 + C538 + C121 * C525 + C136 * C502 + C539 +
            C539 + C122 * C526 + C138 * C503 + C540 + C540 + C123 * C527 +
            C140 * C504 + C541 + C541 + C124 * C528 + C142 * C505 + C542 +
            C542 + C125 * C529) *
               C153513 * C153501 * C2454) *
              C153397 * C153716 +
          ((C134 * C499 + C543 + C543 + C121 * C523 + C136 * C498 + C544 +
            C544 + C122 * C522 + C138 * C497 + C545 + C545 + C123 * C521 +
            C140 * C496 + C546 + C546 + C124 * C520 + C142 * C506 + C547 +
            C547 + C125 * C530) *
               C153513 * C153501 * C153798 -
           (C142 * C149 + C174 + C174 + C125 * C165 + C140 * C148 + C175 +
            C175 + C124 * C164 + C138 * C147 + C176 + C176 + C123 * C163 +
            C136 * C146 + C177 + C177 + C122 * C162 + C134 * C145 + C178 +
            C178 + C121 * C161) *
               C153513 * C153501 * C153797 -
           (C142 * C507 + C548 + C548 + C125 * C531 + C140 * C505 + C549 +
            C549 + C124 * C529 + C138 * C504 + C550 + C550 + C123 * C528 +
            C136 * C503 + C551 + C551 + C122 * C527 + C134 * C502 + C552 +
            C552 + C121 * C526) *
               C153513 * C153501 * C2454) *
              C153397 * C153384)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 +
             C2737 + C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
             C153761 * C162) *
                C153813 +
            (C7654 + C7655 + C7656) * C153802 + C7674 * C153777) *
               C153501 * C153797 -
           (C10397 * C153777 + (C7659 + C7658 + C7657) * C153802 +
            (C7656 + C7655 + C7654) * C153813) *
               C153501 * C153798 +
           (C7674 * C153813 + (C7662 + C7661 + C7660) * C153802 +
            (C10404 + C10405 + C10406) * C153777) *
               C153501 * C2454) *
              C153397 * C153716 +
          (((C7663 + C7664 + C7665) * C153813 +
            (C7666 + C7667 + C7668) * C153802 +
            (C7669 + C7670 + C7671) * C153777) *
               C153501 * C153798 -
           (C7675 * C153777 + (C7665 + C7664 + C7663) * C153802 +
            (C2733 * C147 + C2751 + C2751 + C153761 * C163 + C2731 * C146 +
             C2752 + C2752 + C2724 * C162 + C2729 * C145 + C2753 + C2753 +
             C2723 * C161) *
                C153813) *
               C153501 * C153797 -
           ((C2733 * C7563 + C7615 + C7615 + C153761 * C7571 + C2731 * C7562 +
             C7616 + C7616 + C2724 * C7570 + C2729 * C7561 + C7617 + C7617 +
             C2723 * C7569) *
                C153777 +
            (C7671 + C7670 + C7669) * C153802 + C7675 * C153813) *
               C153501 * C2454) *
              C153397 * C153384)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
             C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 +
             C23999 + C153761 * C162) *
                C153513 * C23987 +
            (C24335 + C24336 + C24337) * C153513 * C23988 + C24357 * C153774) *
               C153797 -
           (C26823 * C153774 + (C25438 + C25439 + C25440) * C153513 * C23988 +
            (C23994 * C498 + C24583 + C24583 + C153761 * C522 + C23992 * C499 +
             C24584 + C24584 + C153790 * C523 + C23990 * C500 + C24585 +
             C24585 + C153809 * C524) *
                C153513 * C23987) *
               C153798 +
           ((C23990 * C501 + C24586 + C24586 + C153809 * C525 + C23992 * C502 +
             C24587 + C24587 + C153790 * C526 + C23994 * C503 + C24588 +
             C24588 + C153761 * C527) *
                C153513 * C23987 +
            (C26077 + C26078 + C26079) * C153513 * C23988 +
            (C26080 + C26081 + C26082) * C153513 * C153774) *
               C2454) *
              C153397 * C153716 +
          (((C23990 * C499 + C24595 + C24595 + C153809 * C523 + C23992 * C498 +
             C24596 + C24596 + C153790 * C522 + C23994 * C497 + C24597 +
             C24597 + C153761 * C521) *
                C153513 * C23987 +
            (C25441 + C25442 + C25443) * C153513 * C23988 +
            (C25444 + C25445 + C25446) * C153513 * C153774) *
               C153798 -
           (C24358 * C153774 + (C24346 + C24345 + C24344) * C153513 * C23988 +
            (C23994 * C147 + C24012 + C24012 + C153761 * C163 + C23992 * C146 +
             C24013 + C24013 + C153790 * C162 + C23990 * C145 + C24014 +
             C24014 + C153809 * C161) *
                C153513 * C23987) *
               C153797 -
           ((C23994 * C3330 + C24604 + C24604 + C153761 * C3338 +
             C23992 * C3329 + C24605 + C24605 + C153790 * C3337 +
             C23990 * C3328 + C24606 + C24606 + C153809 * C3336) *
                C153513 * C153774 +
            (C23994 * C1366 + C24607 + C24607 + C153761 * C1376 +
             C23992 * C1367 + C24608 + C24608 + C153790 * C1377 +
             C23990 * C1368 + C24609 + C24609 + C153809 * C1378) *
                C153513 * C23988 +
            (C23994 * C504 + C24610 + C24610 + C153761 * C528 + C23992 * C503 +
             C24611 + C24611 + C153790 * C527 + C23990 * C502 + C24612 +
             C24612 + C153809 * C526) *
                C153513 * C23987) *
               C2454) *
              C153397 * C153384)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153513 *
                C28229 +
            C28439 * C28230 + C28440 * C28231 + C28441 * C28232 +
            C28442 * C28233) *
               C153797 -
           (C29081 * C28233 + C29082 * C28232 + C29083 * C28231 +
            C29084 * C28230 +
            (C28234 * C500 + C28581 + C28581 + C153338 * C524) * C153513 *
                C28229) *
               C153798 +
           ((C28234 * C501 + C28582 + C28582 + C153338 * C525) * C153513 *
                C28229 +
            C29449 * C28230 + C29450 * C28231 + C29451 * C28232 +
            C29452 * C28233) *
               C2454) *
              C153397 * C153716 +
          (((C28234 * C499 + C28587 + C28587 + C153338 * C523) * C153513 *
                C28229 +
            C29085 * C28230 + C29086 * C28231 + C29087 * C28232 +
            C29088 * C28233) *
               C153798 -
           (C28447 * C28233 + C28446 * C28232 + C28445 * C28231 +
            C28444 * C28230 +
            (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C153513 *
                C28229) *
               C153797 -
           ((C28234 * C28571 + C28592 + C28592 + C153338 * C28575) * C153513 *
                C28233 +
            (C28234 * C4834 + C28593 + C28593 + C153338 * C4840) * C153513 *
                C28232 +
            (C28234 * C3328 + C28594 + C28594 + C153338 * C3336) * C153513 *
                C28231 +
            (C28234 * C1368 + C28595 + C28595 + C153338 * C1378) * C153513 *
                C28230 +
            (C28234 * C502 + C28596 + C28596 + C153338 * C526) * C153513 *
                C28229) *
               C2454) *
              C153397 * C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153813 +
             C31295 * C153802 + C31296 * C153777) *
                C23987 +
            (C30985 + C30986 + C30987) * C23988 + C31011 * C153774) *
               C153797 -
           (C33429 * C153774 + (C32077 + C32078 + C32079) * C23988 +
            (C31299 * C153777 + C31296 * C153802 + C31295 * C153813) * C23987) *
               C153798 +
           ((C31296 * C153813 + C31299 * C153802 + C34025 * C153777) * C23987 +
            (C32677 + C32678 + C32697) * C23988 +
            (C32681 + C32682 + C32698) * C153774) *
               C2454) *
              C153397 * C153716 +
          (((C31300 * C153813 + C31301 * C153802 + C31302 * C153777) * C23987 +
            (C32080 + C32081 + C32082) * C23988 +
            (C32083 + C32084 + C32085) * C153774) *
               C153798 -
           (C31021 * C153774 + (C31018 + C30995 + C30994) * C23988 +
            (C31301 * C153777 + C31300 * C153802 +
             (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C153813) *
                C23987) *
               C153797 -
           (((C28234 * C31240 + C31272 + C31272 + C153338 * C31244) * C153777 +
             C31304 * C153802 + C31016 * C153813) *
                C153774 +
            ((C28234 * C9041 + C31273 + C31273 + C153338 * C9047) * C153777 +
             C31303 * C153802 + C31015 * C153813) *
                C23988 +
            ((C28234 * C7561 + C31274 + C31274 + C153338 * C7569) * C153777 +
             C31302 * C153802 + C31301 * C153813) *
                C23987) *
               C2454) *
              C153397 * C153384)) /
            (p * q * std::sqrt(p + q));
    d2ee[344] +=
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C144 + C169 + C169 + C121 * C160 + C136 * C145 + C170 +
            C170 + C122 * C161 + C138 * C146 + C171 + C171 + C123 * C162 +
            C140 * C147 + C172 + C172 + C124 * C163 + C142 * C148 + C173 +
            C173 + C125 * C164) *
               C153513 * C153501 * C1938 -
           (C142 * C496 + C533 + C533 + C125 * C520 + C140 * C497 + C534 +
            C534 + C124 * C521 + C138 * C498 + C535 + C535 + C123 * C522 +
            C136 * C499 + C536 + C536 + C122 * C523 + C134 * C500 + C537 +
            C537 + C121 * C524) *
               C153513 * C153501 * C153477) *
              C310 +
          ((C134 * C981 + C1000 + C1000 + C121 * C993 + C136 * C982 + C1001 +
            C1001 + C122 * C994 + C138 * C983 + C1002 + C1002 + C123 * C995 +
            C140 * C984 + C1003 + C1003 + C124 * C996 + C142 * C985 + C1004 +
            C1004 + C125 * C997) *
               C153513 * C153501 * C153477 -
           (C142 * C315 + C352 + C352 + C125 * C339 + C140 * C316 + C353 +
            C353 + C124 * C340 + C138 * C317 + C354 + C354 + C123 * C341 +
            C136 * C318 + C355 + C355 + C122 * C342 + C134 * C319 + C356 +
            C356 + C121 * C343) *
               C153513 * C153501 * C1938) *
              C311 +
          ((C134 * C320 + C357 + C357 + C121 * C344 + C136 * C321 + C358 +
            C358 + C122 * C345 + C138 * C322 + C359 + C359 + C123 * C346 +
            C140 * C323 + C360 + C360 + C124 * C347 + C142 * C324 + C361 +
            C361 + C125 * C348) *
               C153513 * C153501 * C1938 -
           (C142 * C1796 + C1812 + C1812 + C125 * C1806 + C140 * C1797 + C1813 +
            C1813 + C124 * C1807 + C138 * C1798 + C1814 + C1814 + C123 * C1808 +
            C136 * C1799 + C1815 + C1815 + C122 * C1809 + C134 * C1800 + C1816 +
            C1816 + C121 * C1810) *
               C153513 * C153501 * C153477) *
              C312) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C144 + C169 + C169 + C121 * C160 + C136 * C145 + C170 +
            C170 + C122 * C161 + C138 * C146 + C171 + C171 + C123 * C162 +
            C140 * C147 + C172 + C172 + C124 * C163 + C142 * C148 + C173 +
            C173 + C125 * C164) *
               C153513 * C153501 * C1938 -
           (C142 * C496 + C533 + C533 + C125 * C520 + C140 * C497 + C534 +
            C534 + C124 * C521 + C138 * C498 + C535 + C535 + C123 * C522 +
            C136 * C499 + C536 + C536 + C122 * C523 + C134 * C500 + C537 +
            C537 + C121 * C524) *
               C153513 * C153501 * C153477) *
              C153397 * C1133 +
          ((C134 * C499 + C543 + C543 + C121 * C523 + C136 * C498 + C544 +
            C544 + C122 * C522 + C138 * C497 + C545 + C545 + C123 * C521 +
            C140 * C496 + C546 + C546 + C124 * C520 + C142 * C506 + C547 +
            C547 + C125 * C530) *
               C153513 * C153501 * C153477 -
           (C142 * C149 + C174 + C174 + C125 * C165 + C140 * C148 + C175 +
            C175 + C124 * C164 + C138 * C147 + C176 + C176 + C123 * C163 +
            C136 * C146 + C177 + C177 + C122 * C162 + C134 * C145 + C178 +
            C178 + C121 * C161) *
               C153513 * C153501 * C1938) *
              C153397 * C1134 +
          ((C134 * C146 + C179 + C179 + C121 * C162 + C136 * C147 + C180 +
            C180 + C122 * C163 + C138 * C148 + C181 + C181 + C123 * C164 +
            C140 * C149 + C182 + C182 + C124 * C165 + C142 * C150 + C183 +
            C183 + C125 * C166) *
               C153513 * C153501 * C1938 -
           (C142 * C811 + C815 + C815 + C125 * C813 + C140 * C506 + C816 +
            C816 + C124 * C530 + C138 * C496 + C817 + C817 + C123 * C520 +
            C136 * C497 + C818 + C818 + C122 * C521 + C134 * C498 + C819 +
            C819 + C121 * C522) *
               C153513 * C153501 * C153477) *
              C153397 * C1135)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 +
             C2737 + C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
             C153761 * C162) *
                C153513 * C153812 +
            (C3086 + C3087 + C3088) * C153513 * C153800 + C3108 * C153774) *
               C1938 -
           (C5625 * C153774 + (C4213 + C4214 + C4215) * C153513 * C153800 +
            (C2733 * C498 + C3346 + C3346 + C153761 * C522 + C2731 * C499 +
             C3347 + C3347 + C2724 * C523 + C2729 * C500 + C3348 + C3348 +
             C2723 * C524) *
                C153513 * C153812) *
               C153477) *
              C153397 * C1133 +
          (((C2729 * C499 + C3358 + C3358 + C2723 * C523 + C2731 * C498 +
             C3359 + C3359 + C2724 * C522 + C2733 * C497 + C3360 + C3360 +
             C153761 * C521) *
                C153513 * C153812 +
            (C4216 + C4217 + C4218) * C153513 * C153800 +
            (C4219 + C4220 + C4221) * C153513 * C153774) *
               C153477 -
           (C3109 * C153774 + (C3097 + C3096 + C3095) * C153513 * C153800 +
            (C2733 * C147 + C2751 + C2751 + C153761 * C163 + C2731 * C146 +
             C2752 + C2752 + C2724 * C162 + C2729 * C145 + C2753 + C2753 +
             C2723 * C161) *
                C153513 * C153812) *
               C1938) *
              C153397 * C1134 +
          (((C2729 * C146 + C2754 + C2754 + C2723 * C162 + C2731 * C147 +
             C2755 + C2755 + C2724 * C163 + C2733 * C148 + C2756 + C2756 +
             C153761 * C164) *
                C153513 * C153812 +
            (C3621 + C3622 + C3623) * C153513 * C153800 +
            (C3624 + C3625 + C3626) * C153513 * C153774) *
               C1938 -
           ((C2733 * C1796 + C3845 + C3845 + C153761 * C1806 + C2731 * C1797 +
             C3846 + C3846 + C2724 * C1807 + C2729 * C1798 + C3847 + C3847 +
             C2723 * C1808) *
                C153513 * C153774 +
            (C2733 * C985 + C3848 + C3848 + C153761 * C997 + C2731 * C984 +
             C3849 + C3849 + C2724 * C996 + C2729 * C983 + C3850 + C3850 +
             C2723 * C995) *
                C153513 * C153800 +
            (C2733 * C496 + C3851 + C3851 + C153761 * C520 + C2731 * C497 +
             C3852 + C3852 + C2724 * C521 + C2729 * C498 + C3853 + C3853 +
             C2723 * C522) *
                C153513 * C153812) *
               C153477) *
              C153397 * C1135)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 +
             C2737 + C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
             C153761 * C162) *
                C153513 * C153812 +
            (C3086 + C3087 + C3088) * C153513 * C153800 + C3108 * C153774) *
               C1938 -
           (C5625 * C153774 + (C4213 + C4214 + C4215) * C153513 * C153800 +
            (C2733 * C498 + C3346 + C3346 + C153761 * C522 + C2731 * C499 +
             C3347 + C3347 + C2724 * C523 + C2729 * C500 + C3348 + C3348 +
             C2723 * C524) *
                C153513 * C153812) *
               C153477) *
              C310 +
          (((C4215 + C4214 + C4213) * C153513 * C153812 +
            (C4212 + C4211 + C4210) * C153513 * C153800 +
            (C5629 + C5630 + C5631) * C153513 * C153774) *
               C153477 -
           (C4609 * C153774 + (C3091 + C3090 + C3089) * C153513 * C153800 +
            (C3088 + C3087 + C3086) * C153513 * C153812) *
               C1938) *
              C311 +
          ((C3108 * C153812 + (C3094 + C3093 + C3092) * C153513 * C153800 +
            (C4613 + C4614 + C4615) * C153513 * C153774) *
               C1938 -
           ((C2733 * C5601 + C5618 + C5618 + C153761 * C5607 + C2731 * C5602 +
             C5619 + C5619 + C2724 * C5608 + C2729 * C5603 + C5620 + C5620 +
             C2723 * C5609) *
                C153513 * C153774 +
            (C5631 + C5630 + C5629) * C153513 * C153800 + C5625 * C153812) *
               C153477) *
              C312) *
         C153378) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 +
             C2737 + C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
             C153761 * C162) *
                C153813 +
            (C7654 + C7655 + C7656) * C153802 + C7674 * C153777) *
               C153501 * C1938 -
           ((C7660 + C7661 + C7662) * C153777 +
            (C7659 + C7658 + C7657) * C153802 +
            (C7656 + C7655 + C7654) * C153813) *
               C153501 * C153477) *
              C153397 * C1133 +
          (((C7663 + C7664 + C7665) * C153813 +
            (C7666 + C7667 + C7668) * C153802 +
            (C7669 + C7670 + C7671) * C153777) *
               C153501 * C153477 -
           (C7675 * C153777 + (C7665 + C7664 + C7663) * C153802 +
            (C2733 * C147 + C2751 + C2751 + C153761 * C163 + C2731 * C146 +
             C2752 + C2752 + C2724 * C162 + C2729 * C145 + C2753 + C2753 +
             C2723 * C161) *
                C153813) *
               C153501 * C1938) *
              C153397 * C1134 +
          (((C2729 * C146 + C2754 + C2754 + C2723 * C162 + C2731 * C147 +
             C2755 + C2755 + C2724 * C163 + C2733 * C148 + C2756 + C2756 +
             C153761 * C164) *
                C153813 +
            (C8142 + C8143 + C8144) * C153802 +
            (C8145 + C8146 + C8147) * C153777) *
               C153501 * C1938 -
           ((C2733 * C2148 + C8127 + C8127 + C153761 * C2158 + C2731 * C2149 +
             C8128 + C8128 + C2724 * C2159 + C2729 * C2150 + C8129 + C8129 +
             C2723 * C2160) *
                C153777 +
            (C8147 + C8146 + C8145) * C153802 +
            (C8144 + C8143 + C8142) * C153813) *
               C153501 * C153477) *
              C153397 * C1135)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 +
             C2737 + C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
             C153761 * C162) *
                C153813 +
            (C7654 + C7655 + C7656) * C153802 + C7674 * C153777) *
               C153501 * C1938 -
           ((C7660 + C7661 + C7662) * C153777 +
            (C7659 + C7658 + C7657) * C153802 +
            (C7656 + C7655 + C7654) * C153813) *
               C153501 * C153477) *
              C310 +
          (((C4215 + C4214 + C4213) * C153813 +
            (C4870 + C4871 + C4872) * C153802 +
            (C9067 + C9068 + C9069) * C153777) *
               C153501 * C153477 -
           (C9063 * C153777 + (C4213 + C4214 + C4215) * C153802 +
            (C3088 + C3087 + C3086) * C153813) *
               C153501 * C1938) *
              C311 +
          ((C3106 * C153813 + (C4212 + C4211 + C4210) * C153802 +
            (C4873 + C4874 + C4875) * C153777) *
               C153501 * C1938 -
           ((C2733 * C6213 + C6232 + C6232 + C153761 * C6225 + C2731 * C6214 +
             C6233 + C6233 + C2724 * C6226 + C2729 * C6215 + C6234 + C6234 +
             C2723 * C6227) *
                C153777 +
            (C4875 + C4874 + C4873) * C153802 + C5621 * C153813) *
               C153501 * C153477) *
              C312) *
         C153378) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
             C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 +
             C23999 + C153761 * C162) *
                C153513 * C23987 +
            (C24335 + C24336 + C24337) * C153513 * C23988 + C24357 * C153774) *
               C1938 -
           (C26823 * C153774 + (C25438 + C25439 + C25440) * C153513 * C23988 +
            (C23994 * C498 + C24583 + C24583 + C153761 * C522 + C23992 * C499 +
             C24584 + C24584 + C153790 * C523 + C23990 * C500 + C24585 +
             C24585 + C153809 * C524) *
                C153513 * C23987) *
               C153477) *
              C153397 * C1133 +
          (((C23990 * C499 + C24595 + C24595 + C153809 * C523 + C23992 * C498 +
             C24596 + C24596 + C153790 * C522 + C23994 * C497 + C24597 +
             C24597 + C153761 * C521) *
                C153513 * C23987 +
            (C25441 + C25442 + C25443) * C153513 * C23988 +
            (C25444 + C25445 + C25446) * C153513 * C153774) *
               C153477 -
           (C24358 * C153774 + (C24346 + C24345 + C24344) * C153513 * C23988 +
            (C23994 * C147 + C24012 + C24012 + C153761 * C163 + C23992 * C146 +
             C24013 + C24013 + C153790 * C162 + C23990 * C145 + C24014 +
             C24014 + C153809 * C161) *
                C153513 * C23987) *
               C1938) *
              C153397 * C1134 +
          (((C23990 * C146 + C24015 + C24015 + C153809 * C162 + C23992 * C147 +
             C24016 + C24016 + C153790 * C163 + C23994 * C148 + C24017 +
             C24017 + C153761 * C164) *
                C153513 * C23987 +
            (C24858 + C24859 + C24860) * C153513 * C23988 +
            (C24861 + C24862 + C24863) * C153513 * C153774) *
               C1938 -
           ((C23994 * C1796 + C25082 + C25082 + C153761 * C1806 +
             C23992 * C1797 + C25083 + C25083 + C153790 * C1807 +
             C23990 * C1798 + C25084 + C25084 + C153809 * C1808) *
                C153513 * C153774 +
            (C23994 * C985 + C25085 + C25085 + C153761 * C997 + C23992 * C984 +
             C25086 + C25086 + C153790 * C996 + C23990 * C983 + C25087 +
             C25087 + C153809 * C995) *
                C153513 * C23988 +
            (C23994 * C496 + C25088 + C25088 + C153761 * C520 + C23992 * C497 +
             C25089 + C25089 + C153790 * C521 + C23990 * C498 + C25090 +
             C25090 + C153809 * C522) *
                C153513 * C23987) *
               C153477) *
              C153397 * C1135)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
             C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 +
             C23999 + C153761 * C162) *
                C153513 * C23987 +
            (C24335 + C24336 + C24337) * C153513 * C23988 + C24357 * C153774) *
               C1938 -
           (C26823 * C153774 + (C25438 + C25439 + C25440) * C153513 * C23988 +
            (C23994 * C498 + C24583 + C24583 + C153761 * C522 + C23992 * C499 +
             C24584 + C24584 + C153790 * C523 + C23990 * C500 + C24585 +
             C24585 + C153809 * C524) *
                C153513 * C23987) *
               C153477) *
              C310 +
          (((C25440 + C25439 + C25438) * C153513 * C23987 +
            (C25437 + C25436 + C25435) * C153513 * C23988 +
            (C26827 + C26828 + C26829) * C153513 * C153774) *
               C153477 -
           (C25825 * C153774 + (C24340 + C24339 + C24338) * C153513 * C23988 +
            (C24337 + C24336 + C24335) * C153513 * C23987) *
               C1938) *
              C311 +
          ((C24357 * C23987 + (C24343 + C24342 + C24341) * C153513 * C23988 +
            (C25829 + C25830 + C25831) * C153513 * C153774) *
               C1938 -
           ((C23994 * C5601 + C26816 + C26816 + C153761 * C5607 +
             C23992 * C5602 + C26817 + C26817 + C153790 * C5608 +
             C23990 * C5603 + C26818 + C26818 + C153809 * C5609) *
                C153513 * C153774 +
            (C26829 + C26828 + C26827) * C153513 * C23988 + C26823 * C23987) *
               C153477) *
              C312) *
         C153378) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153513 *
                C28229 +
            C28439 * C28230 + C28440 * C28231 + C28441 * C28232 +
            C28442 * C28233) *
               C1938 -
           (C29081 * C28233 + C29082 * C28232 + C29083 * C28231 +
            C29084 * C28230 +
            (C28234 * C500 + C28581 + C28581 + C153338 * C524) * C153513 *
                C28229) *
               C153477) *
              C153397 * C1133 +
          (((C28234 * C499 + C28587 + C28587 + C153338 * C523) * C153513 *
                C28229 +
            C29085 * C28230 + C29086 * C28231 + C29087 * C28232 +
            C29088 * C28233) *
               C153477 -
           (C28447 * C28233 + C28446 * C28232 + C28445 * C28231 +
            C28444 * C28230 +
            (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C153513 *
                C28229) *
               C1938) *
              C153397 * C1134 +
          (((C28234 * C146 + C28247 + C28247 + C153338 * C162) * C153513 *
                C28229 +
            C28740 * C28230 + C28741 * C28231 + C28742 * C28232 +
            C28743 * C28233) *
               C1938 -
           ((C28234 * C5601 + C28866 + C28866 + C153338 * C5607) * C153513 *
                C28233 +
            (C28234 * C4145 + C28867 + C28867 + C153338 * C4153) * C153513 *
                C28232 +
            (C28234 * C1798 + C28868 + C28868 + C153338 * C1808) * C153513 *
                C28231 +
            (C28234 * C983 + C28869 + C28869 + C153338 * C995) * C153513 *
                C28230 +
            (C28234 * C498 + C28870 + C28870 + C153338 * C522) * C153513 *
                C28229) *
               C153477) *
              C153397 * C1135)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153513 *
                C28229 +
            C28439 * C28230 + C28440 * C28231 + C28441 * C28232 +
            C28442 * C28233) *
               C1938 -
           (C29081 * C28233 + C29082 * C28232 + C29083 * C28231 +
            C29084 * C28230 +
            (C28234 * C500 + C28581 + C28581 + C153338 * C524) * C153513 *
                C28229) *
               C153477) *
              C310 +
          ((C29084 * C28229 + C29083 * C28230 + C29082 * C28231 +
            C29081 * C28232 + C29868 * C28233) *
               C153477 -
           (C28443 * C28233 + C28442 * C28232 + C28441 * C28231 +
            C28440 * C28230 + C28439 * C28229) *
               C1938) *
              C311 +
          ((C28440 * C28229 + C28441 * C28230 + C28442 * C28231 +
            C28443 * C28232 + C29302 * C28233) *
               C1938 -
           ((C28234 * C29858 + C29864 + C29864 + C153338 * C29860) * C153513 *
                C28233 +
            C29868 * C28232 + C29081 * C28231 + C29082 * C28230 +
            C29083 * C28229) *
               C153477) *
              C312) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153813 +
             C31295 * C153802 + C31296 * C153777) *
                C23987 +
            (C30985 + C30986 + C30987) * C23988 + C31011 * C153774) *
               C1938 -
           (C33429 * C153774 + (C32077 + C32078 + C32079) * C23988 +
            (C31299 * C153777 + C31296 * C153802 + C31295 * C153813) * C23987) *
               C153477) *
              C153397 * C1133 +
          (((C31300 * C153813 + C31301 * C153802 + C31302 * C153777) * C23987 +
            (C32080 + C32081 + C32082) * C23988 +
            (C32083 + C32084 + C32085) * C153774) *
               C153477 -
           (C31021 * C153774 + (C31018 + C30995 + C30994) * C23988 +
            (C31301 * C153777 + C31300 * C153802 +
             (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C153813) *
                C23987) *
               C1938) *
              C153397 * C1134 +
          ((((C28234 * C146 + C28247 + C28247 + C153338 * C162) * C153813 +
             C31779 * C153802 + C31780 * C153777) *
                C23987 +
            (C31523 + C31546 + C31547) * C23988 +
            (C31528 + C31548 + C31549) * C153774) *
               C1938 -
           (((C28234 * C6213 + C31772 + C31772 + C153338 * C6225) * C153777 +
             C31545 * C153802 + C31544 * C153813) *
                C153774 +
            ((C28234 * C6216 + C31773 + C31773 + C153338 * C6228) * C153777 +
             C31543 * C153802 + C31542 * C153813) *
                C23988 +
            ((C28234 * C2150 + C31774 + C31774 + C153338 * C2160) * C153777 +
             C31780 * C153802 + C31779 * C153813) *
                C23987) *
               C153477) *
              C153397 * C1135)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153813 +
             C31295 * C153802 + C31296 * C153777) *
                C23987 +
            (C30985 + C30986 + C30987) * C23988 + C31011 * C153774) *
               C1938 -
           (C33429 * C153774 + (C32077 + C32078 + C32079) * C23988 +
            (C31299 * C153777 + C31296 * C153802 + C31295 * C153813) * C23987) *
               C153477) *
              C310 +
          (((C32079 + C32078 + C32077) * C23987 +
            (C32076 + C32075 + C32074) * C23988 +
            (C33426 + C33427 + C33428) * C153774) *
               C153477 -
           (C32455 * C153774 + (C30990 + C30989 + C30988) * C23988 +
            (C30987 + C30986 + C30985) * C23987) *
               C1938) *
              C311 +
          ((C31011 * C23987 + (C30993 + C30992 + C30991) * C23988 +
            (C32452 + C32453 + C32454) * C153774) *
               C1938 -
           (((C28234 * C30194 + C30201 + C30201 + C153338 * C30198) * C153777 +
             C29448 * C153802 + C29073 * C153813) *
                C153774 +
            (C33428 + C33427 + C33426) * C23988 + C33429 * C23987) *
               C153477) *
              C312) *
         C153378) /
            (p * q * std::sqrt(p + q));
    d2ee[345] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C11268 * C144 + C11277 + C11277 + C11262 * C160 + C11270 * C145 +
             C11278 + C11278 + C11263 * C161 + C11272 * C146 + C11279 + C11279 +
             C11264 * C162 + C11274 * C147 + C11280 + C11280 + C153738 * C163) *
                C153740 +
            (C15551 + C15552 + C15553 + C15554) * C153600) *
               C153501 * C153413 * C153724 -
           ((C12543 + C12544 + C12545 + C12546) * C153600 +
            (C11586 + C11585 + C11584 + C11583) * C153740) *
               C153501 * C153413 * C153449) *
              C153793 +
          (((C11591 + C11592 + C11593 + C11594) * C153740 +
            (C12547 + C12548 + C12549 + C12550) * C153600) *
               C153501 * C153413 * C153449 -
           ((C15562 + C15561 + C15560 + C15559) * C153600 +
            (C11274 * C148 + C11289 + C11289 + C153738 * C164 + C11272 * C147 +
             C11290 + C11290 + C11264 * C163 + C11270 * C146 + C11291 + C11291 +
             C11263 * C162 + C11268 * C145 + C11292 + C11292 + C11262 * C161) *
                C153740) *
               C153501 * C153413 * C153724) *
              C153794 +
          (((C11268 * C146 + C11293 + C11293 + C11262 * C162 + C11270 * C147 +
             C11294 + C11294 + C11263 * C163 + C11272 * C148 + C11295 + C11295 +
             C11264 * C164 + C11274 * C149 + C11296 + C11296 + C153738 * C165) *
                C153740 +
            (C11268 * C498 + C12244 + C12244 + C11262 * C522 + C11270 * C497 +
             C12243 + C12243 + C11263 * C521 + C11272 * C496 + C12242 + C12242 +
             C11264 * C520 + C11274 * C506 + C12241 + C12241 + C153738 * C530) *
                C153600) *
               C153501 * C153413 * C153724 -
           ((C11274 * C986 + C12237 + C12237 + C153738 * C998 + C11272 * C985 +
             C12238 + C12238 + C11264 * C997 + C11270 * C984 + C12239 + C12239 +
             C11263 * C996 + C11268 * C983 + C12240 + C12240 + C11262 * C995) *
                C153600 +
            (C12042 + C12041 + C12040 + C12039) * C153740) *
               C153501 * C153413 * C153449) *
              C678)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C34887 * C144 + C34892 + C34892 + C153705 * C160 + C34889 * C145 +
              C34893 + C34893 + C153348 * C161) *
                 C153740 +
             (C39432 + C39433) * C153600) *
                C23987 +
            ((C35190 + C35191) * C153740 + (C36183 + C36182) * C153600) *
                C23988 +
            C39086 * C153774) *
               C153413 * C153724 -
           ((C37402 * C153600 + C36515 * C153740) * C153774 +
            (C37403 * C153600 + (C35193 + C35192) * C153740) * C23988 +
            ((C36182 + C36183) * C153600 + (C35191 + C35190) * C153740) *
                C23987) *
               C153413 * C153449) *
              C153793 +
          ((((C35198 + C35199) * C153740 + (C36184 + C36185) * C153600) *
                C23987 +
            ((C35200 + C35201) * C153740 + (C36186 + C36187) * C153600) *
                C23988 +
            ((C35202 + C35203) * C153740 + (C36188 + C36189) * C153600) *
                C153774) *
               C153413 * C153449 -
           (C39087 * C153774 +
            ((C36185 + C36184) * C153600 + (C35199 + C35198) * C153740) *
                C23988 +
            ((C39437 + C39436) * C153600 +
             (C34889 * C146 + C34906 + C34906 + C153348 * C162 + C34887 * C145 +
              C34907 + C34907 + C153705 * C161) *
                 C153740) *
                C23987) *
               C153413 * C153724) *
              C153794 +
          ((((C34887 * C146 + C34908 + C34908 + C153705 * C162 + C34889 * C147 +
              C34909 + C34909 + C153348 * C163) *
                 C153740 +
             (C34887 * C498 + C35867 + C35867 + C153705 * C522 + C34889 * C497 +
              C35866 + C35866 + C153348 * C521) *
                 C153600) *
                C23987 +
            ((C35660 + C35661) * C153740 + (C39750 + C39751) * C153600) *
                C23988 +
            ((C35662 + C35663) * C153740 + (C39752 + C39753) * C153600) *
                C153774) *
               C153413 * C153724 -
           (((C34889 * C4146 + C35860 + C35860 + C153348 * C4154 +
              C34887 * C4145 + C35861 + C35861 + C153705 * C4153) *
                 C153600 +
             (C35665 + C35664) * C153740) *
                C153774 +
            ((C39753 + C39752) * C153600 + (C35663 + C35662) * C153740) *
                C23988 +
            ((C39751 + C39750) * C153600 + (C35661 + C35660) * C153740) *
                C23987) *
               C153413 * C153449) *
              C678)) /
            (p * q * std::sqrt(p + q));
    d2ee[346] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C11268 * C144 + C11277 + C11277 + C11262 * C160 + C11270 * C145 +
              C11278 + C11278 + C11263 * C161 + C11272 * C146 + C11279 +
              C11279 + C11264 * C162 + C11274 * C147 + C11280 + C11280 +
              C153738 * C163) *
                 C153740 +
             (C15551 + C15552 + C15553 + C15554) * C153600) *
                C153501 * C153725 -
            ((C15555 + C15556 + C15557 + C15558) * C153600 +
             (C15554 + C15553 + C15552 + C15551) * C153740) *
                C153501 * C153477) *
               C153724 +
           (((C12546 + C12545 + C12544 + C12543) * C153740 +
             (C13113 + C13114 + C13115 + C13116) * C153600) *
                C153501 * C153477 -
            ((C12543 + C12544 + C12545 + C12546) * C153600 +
             (C11586 + C11585 + C11584 + C11583) * C153740) *
                C153501 * C153725) *
               C153449) *
              C313 +
          ((((C15559 + C15560 + C15561 + C15562) * C153740 +
             (C15563 + C15564 + C15565 + C15566) * C153600) *
                C153501 * C153477 -
            ((C15562 + C15561 + C15560 + C15559) * C153600 +
             (C11274 * C148 + C11289 + C11289 + C153738 * C164 + C11272 * C147 +
              C11290 + C11290 + C11264 * C163 + C11270 * C146 + C11291 +
              C11291 + C11263 * C162 + C11268 * C145 + C11292 + C11292 +
              C11262 * C161) *
                 C153740) *
                C153501 * C153725) *
               C153724 +
           (((C11591 + C11592 + C11593 + C11594) * C153740 +
             (C12547 + C12548 + C12549 + C12550) * C153600) *
                C153501 * C153725 -
            ((C11274 * C1365 + C11817 + C11817 + C153738 * C1375 +
              C11272 * C1366 + C11818 + C11818 + C11264 * C1376 +
              C11270 * C1367 + C11819 + C11819 + C11263 * C1377 +
              C11268 * C1368 + C11820 + C11820 + C11262 * C1378) *
                 C153600 +
             (C12550 + C12549 + C12548 + C12547) * C153740) *
                C153501 * C153477) *
               C153449) *
              C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C34887 * C144 + C34892 + C34892 + C153705 * C160 +
               C34889 * C145 + C34893 + C34893 + C153348 * C161) *
                  C153740 +
              (C39432 + C39433) * C153600) *
                 C23987 +
             ((C35190 + C35191) * C153740 + C40446 * C153600) * C23988 +
             C39086 * C153774) *
                C153725 -
            (((C36753 + C36752) * C153600 + C37403 * C153740) * C153774 +
             ((C36751 + C36750) * C153600 + C40447 * C153740) * C23988 +
             ((C39434 + C39435) * C153600 + (C39433 + C39432) * C153740) *
                 C23987) *
                C153477) *
               C153724 +
           (((C40446 * C153740 + (C36750 + C36751) * C153600) * C23987 +
             (C39081 * C153740 + (C36752 + C36753) * C153600) * C23988 +
             ((C36179 + C36178) * C153740 + (C36754 + C36755) * C153600) *
                 C153774) *
                C153477 -
            ((C37402 * C153600 + C36515 * C153740) * C153774 +
             (C37403 * C153600 + (C35193 + C35192) * C153740) * C23988 +
             (C40447 * C153600 + (C35191 + C35190) * C153740) * C23987) *
                C153725) *
               C153449) *
              C313 +
          (((((C39436 + C39437) * C153740 + (C39438 + C39439) * C153600) *
                 C23987 +
             (C40448 * C153740 + (C39440 + C39441) * C153600) * C23988 +
             (C40449 * C153740 + (C39442 + C39443) * C153600) * C153774) *
                C153477 -
            (C39087 * C153774 +
             (C40450 * C153600 + (C35199 + C35198) * C153740) * C23988 +
             ((C39437 + C39436) * C153600 +
              (C34889 * C146 + C34906 + C34906 + C153348 * C162 +
               C34887 * C145 + C34907 + C34907 + C153705 * C161) *
                  C153740) *
                 C23987) *
                C153725) *
               C153724 +
           ((((C35198 + C35199) * C153740 + C40448 * C153600) * C23987 +
             ((C35200 + C35201) * C153740 + C40449 * C153600) * C23988 +
             ((C35202 + C35203) * C153740 + (C36188 + C36189) * C153600) *
                 C153774) *
                C153725 -
            (((C34889 * C4833 + C35432 + C35432 + C153348 * C4839 +
               C34887 * C4834 + C35433 + C35433 + C153705 * C4840) *
                  C153600 +
              (C36189 + C36188) * C153740) *
                 C153774 +
             ((C39443 + C39442) * C153600 + C39082 * C153740) * C23988 +
             ((C39441 + C39440) * C153600 + C40450 * C153740) * C23987) *
                C153477) *
               C153449) *
              C153384)) /
            (p * q * std::sqrt(p + q));
    d2ee[347] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C11268 * C144 + C11277 + C11277 + C11262 * C160 + C11270 * C145 +
             C11278 + C11278 + C11263 * C161 + C11272 * C146 + C11279 + C11279 +
             C11264 * C162 + C11274 * C147 + C11280 + C11280 + C153738 * C163) *
                C153740 +
            (C11268 * C500 + C11800 + C11800 + C11262 * C524 + C11270 * C499 +
             C11799 + C11799 + C11263 * C523 + C11272 * C498 + C11798 + C11798 +
             C11264 * C522 + C11274 * C497 + C11797 + C11797 + C153738 * C521) *
                C153600) *
               C153501 * C153413 * C310 -
           ((C12543 + C12544 + C12545 + C12546) * C153600 +
            (C11586 + C11585 + C11584 + C11583) * C153740) *
               C153501 * C153413 * C311 +
           ((C11590 + C11589 + C11588 + C11587) * C153740 +
            (C13783 + C13784 + C13785 + C13786) * C153600) *
               C153501 * C153413 * C312) *
              C313 +
          (((C11591 + C11592 + C11593 + C11594) * C153740 +
            (C12547 + C12548 + C12549 + C12550) * C153600) *
               C153501 * C153413 * C311 -
           ((C11274 * C496 + C11812 + C11812 + C153738 * C520 + C11272 * C497 +
             C11811 + C11811 + C11264 * C521 + C11270 * C498 + C11810 + C11810 +
             C11263 * C522 + C11268 * C499 + C11809 + C11809 + C11262 * C523) *
                C153600 +
            (C11274 * C148 + C11289 + C11289 + C153738 * C164 + C11272 * C147 +
             C11290 + C11290 + C11264 * C163 + C11270 * C146 + C11291 + C11291 +
             C11263 * C162 + C11268 * C145 + C11292 + C11292 + C11262 * C161) *
                C153740) *
               C153501 * C153413 * C310 -
           ((C11274 * C1796 + C12523 + C12523 + C153738 * C1806 +
             C11272 * C1797 + C12524 + C12524 + C11264 * C1807 +
             C11270 * C1798 + C12525 + C12525 + C11263 * C1808 +
             C11268 * C1799 + C12526 + C12526 + C11262 * C1809) *
                C153600 +
            (C11598 + C11597 + C11596 + C11595) * C153740) *
               C153501 * C153413 * C312) *
              C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C11268 * C144 + C11277 + C11277 + C11262 * C160 + C11270 * C145 +
            C11278 + C11278 + C11263 * C161 + C11272 * C146 + C11279 + C11279 +
            C11264 * C162 + C11274 * C147 + C11280 + C11280 + C153738 * C163) *
               C153740 +
           (C11268 * C500 + C11800 + C11800 + C11262 * C524 + C11270 * C499 +
            C11799 + C11799 + C11263 * C523 + C11272 * C498 + C11798 + C11798 +
            C11264 * C522 + C11274 * C497 + C11797 + C11797 + C153738 * C521) *
               C153600) *
              C153501 * C153413 * C153397 * C130 -
          ((C11274 * C496 + C11812 + C11812 + C153738 * C520 + C11272 * C497 +
            C11811 + C11811 + C11264 * C521 + C11270 * C498 + C11810 + C11810 +
            C11263 * C522 + C11268 * C499 + C11809 + C11809 + C11262 * C523) *
               C153600 +
           (C11274 * C148 + C11289 + C11289 + C153738 * C164 + C11272 * C147 +
            C11290 + C11290 + C11264 * C163 + C11270 * C146 + C11291 + C11291 +
            C11263 * C162 + C11268 * C145 + C11292 + C11292 + C11262 * C161) *
               C153740) *
              C153501 * C153413 * C153397 * C131 +
          ((C11268 * C146 + C11293 + C11293 + C11262 * C162 + C11270 * C147 +
            C11294 + C11294 + C11263 * C163 + C11272 * C148 + C11295 + C11295 +
            C11264 * C164 + C11274 * C149 + C11296 + C11296 + C153738 * C165) *
               C153740 +
           (C11268 * C498 + C12244 + C12244 + C11262 * C522 + C11270 * C497 +
            C12243 + C12243 + C11263 * C521 + C11272 * C496 + C12242 + C12242 +
            C11264 * C520 + C11274 * C506 + C12241 + C12241 + C153738 * C530) *
               C153600) *
              C153501 * C153413 * C153397 * C132 -
          ((C11274 * C811 + C15091 + C15091 + C153738 * C813 + C11272 * C506 +
            C15092 + C15092 + C11264 * C530 + C11270 * C496 + C15093 + C15093 +
            C11263 * C520 + C11268 * C497 + C15094 + C15094 + C11262 * C521) *
               C153600 +
           (C11274 * C150 + C11305 + C11305 + C153738 * C166 + C11272 * C149 +
            C11306 + C11306 + C11264 * C165 + C11270 * C148 + C11307 + C11307 +
            C11263 * C164 + C11268 * C147 + C11308 + C11308 + C11262 * C163) *
               C153740) *
              C153501 * C153413 * C153397 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C11268 * C144 + C11277 + C11277 + C11262 * C160 + C11270 * C145 +
             C11278 + C11278 + C11263 * C161 + C11272 * C146 + C11279 + C11279 +
             C11264 * C162 + C11274 * C147 + C11280 + C11280 + C153738 * C163) *
                C153740 +
            (C15551 + C15552 + C15553 + C15554) * C153600) *
               C153501 * C493 -
           ((C15555 + C15556 + C15557 + C15558) * C153600 +
            (C15554 + C15553 + C15552 + C15551) * C153740) *
               C153501 * C494 +
           ((C15558 + C15557 + C15556 + C15555) * C153740 +
            (C11268 * C2152 + C14312 + C14312 + C11262 * C2162 +
             C11270 * C2151 + C14311 + C14311 + C11263 * C2161 +
             C11272 * C2150 + C14310 + C14310 + C11264 * C2160 +
             C11274 * C2149 + C14309 + C14309 + C153738 * C2159) *
                C153600) *
               C153501 * C495) *
              C153397 * C313 +
          (((C15559 + C15560 + C15561 + C15562) * C153740 +
            (C15563 + C15564 + C15565 + C15566) * C153600) *
               C153501 * C494 -
           ((C15562 + C15561 + C15560 + C15559) * C153600 +
            (C11274 * C148 + C11289 + C11289 + C153738 * C164 + C11272 * C147 +
             C11290 + C11290 + C11264 * C163 + C11270 * C146 + C11291 + C11291 +
             C11263 * C162 + C11268 * C145 + C11292 + C11292 + C11262 * C161) *
                C153740) *
               C153501 * C493 -
           ((C11274 * C2148 + C15515 + C15515 + C153738 * C2158 +
             C11272 * C2149 + C15516 + C15516 + C11264 * C2159 +
             C11270 * C2150 + C15517 + C15517 + C11263 * C2160 +
             C11268 * C2151 + C15518 + C15518 + C11262 * C2161) *
                C153600 +
            (C15566 + C15565 + C15564 + C15563) * C153740) *
               C153501 * C495) *
              C153397 * C153384)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C34887 * C144 + C34892 + C34892 + C153705 * C160 + C34889 * C145 +
             C34893 + C34893 + C153348 * C161) *
                C153740 +
            (C34887 * C500 + C35415 + C35415 + C153705 * C524 + C34889 * C499 +
             C35414 + C35414 + C153348 * C523) *
                C153600) *
               C23987 +
           ((C35190 + C35191) * C153740 + (C36183 + C36182) * C153600) *
               C23988 +
           (C35206 * C153740 + (C36181 + C36180) * C153600) * C153774) *
              C153413 * C153397 * C130 -
          (((C36187 + C36186) * C153600 + C35209 * C153740) * C153774 +
           ((C36185 + C36184) * C153600 + (C35199 + C35198) * C153740) *
               C23988 +
           ((C34889 * C498 + C35425 + C35425 + C153348 * C522 + C34887 * C499 +
             C35424 + C35424 + C153705 * C523) *
                C153600 +
            (C34889 * C146 + C34906 + C34906 + C153348 * C162 + C34887 * C145 +
             C34907 + C34907 + C153705 * C161) *
                C153740) *
               C23987) *
              C153413 * C153397 * C131 +
          (((C34887 * C146 + C34908 + C34908 + C153705 * C162 + C34889 * C147 +
             C34909 + C34909 + C153348 * C163) *
                C153740 +
            (C34887 * C498 + C35867 + C35867 + C153705 * C522 + C34889 * C497 +
             C35866 + C35866 + C153348 * C521) *
                C153600) *
               C23987 +
           ((C35660 + C35661) * C153740 +
            (C34887 * C983 + C35865 + C35865 + C153705 * C995 + C34889 * C984 +
             C35864 + C35864 + C153348 * C996) *
                C153600) *
               C23988 +
           ((C35662 + C35663) * C153740 +
            (C34887 * C1798 + C35863 + C35863 + C153705 * C1808 +
             C34889 * C1797 + C35862 + C35862 + C153348 * C1807) *
                C153600) *
               C153774) *
              C153413 * C153397 * C132 -
          (((C34889 * C1796 + C38784 + C38784 + C153348 * C1806 +
             C34887 * C1797 + C38785 + C38785 + C153705 * C1807) *
                C153600 +
            (C34889 * C324 + C34918 + C34918 + C153348 * C348 + C34887 * C323 +
             C34919 + C34919 + C153705 * C347) *
                C153740) *
               C153774 +
           ((C34889 * C985 + C38786 + C38786 + C153348 * C997 + C34887 * C984 +
             C38787 + C38787 + C153705 * C996) *
                C153600 +
            (C34889 * C315 + C34920 + C34920 + C153348 * C339 + C34887 * C316 +
             C34921 + C34921 + C153705 * C340) *
                C153740) *
               C23988 +
           ((C34889 * C496 + C38788 + C38788 + C153348 * C520 + C34887 * C497 +
             C38789 + C38789 + C153705 * C521) *
                C153600 +
            (C34889 * C148 + C34922 + C34922 + C153348 * C164 + C34887 * C147 +
             C34923 + C34923 + C153705 * C163) *
                C153740) *
               C23987) *
              C153413 * C153397 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C34887 * C144 + C34892 + C34892 + C153705 * C160 + C34889 * C145 +
              C34893 + C34893 + C153348 * C161) *
                 C153740 +
             (C34887 * C500 + C35415 + C35415 + C153705 * C524 + C34889 * C499 +
              C35414 + C35414 + C153348 * C523) *
                 C153600) *
                C23987 +
            ((C35190 + C35191) * C153740 + (C36183 + C36182) * C153600) *
                C23988 +
            C39086 * C153774) *
               C153413 * C310 -
           ((C37402 * C153600 + C36515 * C153740) * C153774 +
            (C37403 * C153600 + (C35193 + C35192) * C153740) * C23988 +
            ((C36182 + C36183) * C153600 + (C35191 + C35190) * C153740) *
                C23987) *
               C153413 * C311 +
           (C39086 * C23987 +
            (C35207 * C153740 + (C36179 + C36178) * C153600) * C23988 +
            ((C35197 + C35196) * C153740 + (C37416 + C37417) * C153600) *
                C153774) *
               C153413 * C312) *
              C313 +
          ((((C35198 + C35199) * C153740 + (C36184 + C36185) * C153600) *
                C23987 +
            ((C35200 + C35201) * C153740 + (C36186 + C36187) * C153600) *
                C23988 +
            ((C35202 + C35203) * C153740 + (C36188 + C36189) * C153600) *
                C153774) *
               C153413 * C311 -
           (C39087 * C153774 +
            ((C36185 + C36184) * C153600 + (C35199 + C35198) * C153740) *
                C23988 +
            ((C34889 * C498 + C35425 + C35425 + C153348 * C522 + C34887 * C499 +
              C35424 + C35424 + C153705 * C523) *
                 C153600 +
             (C34889 * C146 + C34906 + C34906 + C153348 * C162 + C34887 * C145 +
              C34907 + C34907 + C153705 * C161) *
                 C153740) *
                C23987) *
               C153413 * C310 -
           (((C34889 * C5601 + C36152 + C36152 + C153348 * C5607 +
              C34887 * C5602 + C36153 + C36153 + C153705 * C5608) *
                 C153600 +
             (C35205 + C35204) * C153740) *
                C153774 +
            ((C36189 + C36188) * C153600 + C35208 * C153740) * C23988 +
            C39087 * C23987) *
               C153413 * C312) *
              C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C34887 * C144 + C34892 + C34892 + C153705 * C160 + C34889 * C145 +
              C34893 + C34893 + C153348 * C161) *
                 C153740 +
             (C39432 + C39433) * C153600) *
                C23987 +
            ((C35190 + C35191) * C153740 + (C36183 + C36182) * C153600) *
                C23988 +
            C39086 * C153774) *
               C493 -
           (((C36753 + C36752) * C153600 + C37403 * C153740) * C153774 +
            ((C36751 + C36750) * C153600 + (C36182 + C36183) * C153740) *
                C23988 +
            ((C39434 + C39435) * C153600 + (C39433 + C39432) * C153740) *
                C23987) *
               C494 +
           (((C39435 + C39434) * C153740 +
             (C34887 * C2152 + C37943 + C37943 + C153705 * C2162 +
              C34889 * C2151 + C37942 + C37942 + C153348 * C2161) *
                 C153600) *
                C23987 +
            ((C36750 + C36751) * C153740 +
             (C34887 * C6218 + C37941 + C37941 + C153705 * C6230 +
              C34889 * C6217 + C37940 + C37940 + C153348 * C6229) *
                 C153600) *
                C23988 +
            ((C36752 + C36753) * C153740 +
             (C34887 * C6215 + C37939 + C37939 + C153705 * C6227 +
              C34889 * C6214 + C37938 + C37938 + C153348 * C6226) *
                 C153600) *
                C153774) *
               C495) *
              C153397 * C313 +
          ((((C39436 + C39437) * C153740 + (C39438 + C39439) * C153600) *
                C23987 +
            ((C36184 + C36185) * C153740 + (C39440 + C39441) * C153600) *
                C23988 +
            ((C36186 + C36187) * C153740 + (C39442 + C39443) * C153600) *
                C153774) *
               C494 -
           (C39087 * C153774 +
            ((C36185 + C36184) * C153600 + (C35199 + C35198) * C153740) *
                C23988 +
            ((C39437 + C39436) * C153600 +
             (C34889 * C146 + C34906 + C34906 + C153348 * C162 + C34887 * C145 +
              C34907 + C34907 + C153705 * C161) *
                 C153740) *
                C23987) *
               C493 -
           (((C34889 * C6213 + C39402 + C39402 + C153348 * C6225 +
              C34887 * C6214 + C39403 + C39403 + C153705 * C6226) *
                 C153600 +
             (C39443 + C39442) * C153740) *
                C153774 +
            ((C34889 * C6216 + C39404 + C39404 + C153348 * C6228 +
              C34887 * C6217 + C39405 + C39405 + C153705 * C6229) *
                 C153600 +
             (C39441 + C39440) * C153740) *
                C23988 +
            ((C34889 * C2150 + C39406 + C39406 + C153348 * C2160 +
              C34887 * C2151 + C39407 + C39407 + C153705 * C2161) *
                 C153600 +
             (C39439 + C39438) * C153740) *
                C23987) *
               C495) *
              C153397 * C153384)) /
            (p * q * std::sqrt(p + q));
    d2ee[348] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C11268 * C144 + C11277 + C11277 + C11262 * C160 + C11270 * C145 +
             C11278 + C11278 + C11263 * C161 + C11272 * C146 + C11279 + C11279 +
             C11264 * C162 + C11274 * C147 + C11280 + C11280 + C153738 * C163) *
                C153740 +
            (C15551 + C15552 + C15553 + C15554) * C153600) *
               C153501 * C153725 -
           ((C15555 + C15556 + C15557 + C15558) * C153600 +
            (C15554 + C15553 + C15552 + C15551) * C153740) *
               C153501 * C153477) *
              C153397 * C153793 +
          (((C15559 + C15560 + C15561 + C15562) * C153740 +
            (C15563 + C15564 + C15565 + C15566) * C153600) *
               C153501 * C153477 -
           ((C15562 + C15561 + C15560 + C15559) * C153600 +
            (C11274 * C148 + C11289 + C11289 + C153738 * C164 + C11272 * C147 +
             C11290 + C11290 + C11264 * C163 + C11270 * C146 + C11291 + C11291 +
             C11263 * C162 + C11268 * C145 + C11292 + C11292 + C11262 * C161) *
                C153740) *
               C153501 * C153725) *
              C153397 * C153794 +
          (((C11268 * C146 + C11293 + C11293 + C11262 * C162 + C11270 * C147 +
             C11294 + C11294 + C11263 * C163 + C11272 * C148 + C11295 + C11295 +
             C11264 * C164 + C11274 * C149 + C11296 + C11296 + C153738 * C165) *
                C153740 +
            (C15975 + C15976 + C15977 + C15978) * C153600) *
               C153501 * C153725 -
           ((C11274 * C507 + C15963 + C15963 + C153738 * C531 + C11272 * C505 +
             C15964 + C15964 + C11264 * C529 + C11270 * C504 + C15965 + C15965 +
             C11263 * C528 + C11268 * C503 + C15966 + C15966 + C11262 * C527) *
                C153600 +
            (C15978 + C15977 + C15976 + C15975) * C153740) *
               C153501 * C153477) *
              C153397 * C678)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C34887 * C144 + C34892 + C34892 + C153705 * C160 + C34889 * C145 +
              C34893 + C34893 + C153348 * C161) *
                 C153740 +
             (C39432 + C39433) * C153600) *
                C23987 +
            ((C35190 + C35191) * C153740 + (C36183 + C36182) * C153600) *
                C23988 +
            C39086 * C153774) *
               C153725 -
           (((C36753 + C36752) * C153600 + C37403 * C153740) * C153774 +
            ((C36751 + C36750) * C153600 + (C36182 + C36183) * C153740) *
                C23988 +
            ((C39434 + C39435) * C153600 + (C39433 + C39432) * C153740) *
                C23987) *
               C153477) *
              C153397 * C153793 +
          ((((C39436 + C39437) * C153740 + (C39438 + C39439) * C153600) *
                C23987 +
            ((C36184 + C36185) * C153740 + (C39440 + C39441) * C153600) *
                C23988 +
            ((C36186 + C36187) * C153740 + (C39442 + C39443) * C153600) *
                C153774) *
               C153477 -
           (C39087 * C153774 +
            ((C36185 + C36184) * C153600 + (C35199 + C35198) * C153740) *
                C23988 +
            ((C39437 + C39436) * C153600 +
             (C34889 * C146 + C34906 + C34906 + C153348 * C162 + C34887 * C145 +
              C34907 + C34907 + C153705 * C161) *
                 C153740) *
                C23987) *
               C153725) *
              C153397 * C153794 +
          ((((C34887 * C146 + C34908 + C34908 + C153705 * C162 + C34889 * C147 +
              C34909 + C34909 + C153348 * C163) *
                 C153740 +
             (C40058 + C40059) * C153600) *
                C23987 +
            ((C35660 + C35661) * C153740 + (C39750 + C39751) * C153600) *
                C23988 +
            ((C35662 + C35663) * C153740 + (C39752 + C39753) * C153600) *
                C153774) *
               C153725 -
           (((C34889 * C3330 + C40048 + C40048 + C153348 * C3338 +
              C34887 * C3329 + C40049 + C40049 + C153705 * C3337) *
                 C153600 +
             (C39753 + C39752) * C153740) *
                C153774 +
            ((C34889 * C1366 + C40050 + C40050 + C153348 * C1376 +
              C34887 * C1367 + C40051 + C40051 + C153705 * C1377) *
                 C153600 +
             (C39751 + C39750) * C153740) *
                C23988 +
            ((C34889 * C504 + C40052 + C40052 + C153348 * C528 + C34887 * C503 +
              C40053 + C40053 + C153705 * C527) *
                 C153600 +
             (C40059 + C40058) * C153740) *
                C23987) *
               C153477) *
              C153397 * C678)) /
            (p * q * std::sqrt(p + q));
    d2ee[349] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C11268 * C144 + C11277 + C11277 + C11262 * C160 + C11270 * C145 +
            C11278 + C11278 + C11263 * C161 + C11272 * C146 + C11279 + C11279 +
            C11264 * C162 + C11274 * C147 + C11280 + C11280 + C153738 * C163) *
               C153740 +
           (C11268 * C500 + C11800 + C11800 + C11262 * C524 + C11270 * C499 +
            C11799 + C11799 + C11263 * C523 + C11272 * C498 + C11798 + C11798 +
            C11264 * C522 + C11274 * C497 + C11797 + C11797 + C153738 * C521) *
               C153600) *
              C153501 * C153413 * C153397 * C130 -
          ((C11274 * C496 + C11812 + C11812 + C153738 * C520 + C11272 * C497 +
            C11811 + C11811 + C11264 * C521 + C11270 * C498 + C11810 + C11810 +
            C11263 * C522 + C11268 * C499 + C11809 + C11809 + C11262 * C523) *
               C153600 +
           (C11274 * C148 + C11289 + C11289 + C153738 * C164 + C11272 * C147 +
            C11290 + C11290 + C11264 * C163 + C11270 * C146 + C11291 + C11291 +
            C11263 * C162 + C11268 * C145 + C11292 + C11292 + C11262 * C161) *
               C153740) *
              C153501 * C153413 * C153397 * C131 +
          ((C11268 * C146 + C11293 + C11293 + C11262 * C162 + C11270 * C147 +
            C11294 + C11294 + C11263 * C163 + C11272 * C148 + C11295 + C11295 +
            C11264 * C164 + C11274 * C149 + C11296 + C11296 + C153738 * C165) *
               C153740 +
           (C11268 * C498 + C12244 + C12244 + C11262 * C522 + C11270 * C497 +
            C12243 + C12243 + C11263 * C521 + C11272 * C496 + C12242 + C12242 +
            C11264 * C520 + C11274 * C506 + C12241 + C12241 + C153738 * C530) *
               C153600) *
              C153501 * C153413 * C153397 * C132 -
          ((C11274 * C811 + C15091 + C15091 + C153738 * C813 + C11272 * C506 +
            C15092 + C15092 + C11264 * C530 + C11270 * C496 + C15093 + C15093 +
            C11263 * C520 + C11268 * C497 + C15094 + C15094 + C11262 * C521) *
               C153600 +
           (C11274 * C150 + C11305 + C11305 + C153738 * C166 + C11272 * C149 +
            C11306 + C11306 + C11264 * C165 + C11270 * C148 + C11307 + C11307 +
            C11263 * C164 + C11268 * C147 + C11308 + C11308 + C11262 * C163) *
               C153740) *
              C153501 * C153413 * C153397 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C11268 * C144 + C11277 + C11277 + C11262 * C160 + C11270 * C145 +
             C11278 + C11278 + C11263 * C161 + C11272 * C146 + C11279 + C11279 +
             C11264 * C162 + C11274 * C147 + C11280 + C11280 + C153738 * C163) *
                C153740 +
            (C11268 * C500 + C11800 + C11800 + C11262 * C524 + C11270 * C499 +
             C11799 + C11799 + C11263 * C523 + C11272 * C498 + C11798 + C11798 +
             C11264 * C522 + C11274 * C497 + C11797 + C11797 + C153738 * C521) *
                C153600) *
               C153501 * C153413 * C310 -
           ((C12543 + C12544 + C12545 + C12546) * C153600 +
            (C11586 + C11585 + C11584 + C11583) * C153740) *
               C153501 * C153413 * C311 +
           ((C11590 + C11589 + C11588 + C11587) * C153740 +
            (C13783 + C13784 + C13785 + C13786) * C153600) *
               C153501 * C153413 * C312) *
              C313 +
          (((C11591 + C11592 + C11593 + C11594) * C153740 +
            (C12547 + C12548 + C12549 + C12550) * C153600) *
               C153501 * C153413 * C311 -
           ((C11274 * C496 + C11812 + C11812 + C153738 * C520 + C11272 * C497 +
             C11811 + C11811 + C11264 * C521 + C11270 * C498 + C11810 + C11810 +
             C11263 * C522 + C11268 * C499 + C11809 + C11809 + C11262 * C523) *
                C153600 +
            (C11274 * C148 + C11289 + C11289 + C153738 * C164 + C11272 * C147 +
             C11290 + C11290 + C11264 * C163 + C11270 * C146 + C11291 + C11291 +
             C11263 * C162 + C11268 * C145 + C11292 + C11292 + C11262 * C161) *
                C153740) *
               C153501 * C153413 * C310 -
           ((C11274 * C1796 + C12523 + C12523 + C153738 * C1806 +
             C11272 * C1797 + C12524 + C12524 + C11264 * C1807 +
             C11270 * C1798 + C12525 + C12525 + C11263 * C1808 +
             C11268 * C1799 + C12526 + C12526 + C11262 * C1809) *
                C153600 +
            (C11598 + C11597 + C11596 + C11595) * C153740) *
               C153501 * C153413 * C312) *
              C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C34887 * C144 + C34892 + C34892 + C153705 * C160 + C34889 * C145 +
             C34893 + C34893 + C153348 * C161) *
                C153740 +
            (C34887 * C500 + C35415 + C35415 + C153705 * C524 + C34889 * C499 +
             C35414 + C35414 + C153348 * C523) *
                C153600) *
               C23987 +
           ((C35190 + C35191) * C153740 + (C36183 + C36182) * C153600) *
               C23988 +
           (C35206 * C153740 + (C36181 + C36180) * C153600) * C153774) *
              C153413 * C153397 * C130 -
          (((C36187 + C36186) * C153600 + C35209 * C153740) * C153774 +
           ((C36185 + C36184) * C153600 + (C35199 + C35198) * C153740) *
               C23988 +
           ((C34889 * C498 + C35425 + C35425 + C153348 * C522 + C34887 * C499 +
             C35424 + C35424 + C153705 * C523) *
                C153600 +
            (C34889 * C146 + C34906 + C34906 + C153348 * C162 + C34887 * C145 +
             C34907 + C34907 + C153705 * C161) *
                C153740) *
               C23987) *
              C153413 * C153397 * C131 +
          (((C34887 * C146 + C34908 + C34908 + C153705 * C162 + C34889 * C147 +
             C34909 + C34909 + C153348 * C163) *
                C153740 +
            (C34887 * C498 + C35867 + C35867 + C153705 * C522 + C34889 * C497 +
             C35866 + C35866 + C153348 * C521) *
                C153600) *
               C23987 +
           ((C35660 + C35661) * C153740 +
            (C34887 * C983 + C35865 + C35865 + C153705 * C995 + C34889 * C984 +
             C35864 + C35864 + C153348 * C996) *
                C153600) *
               C23988 +
           ((C35662 + C35663) * C153740 +
            (C34887 * C1798 + C35863 + C35863 + C153705 * C1808 +
             C34889 * C1797 + C35862 + C35862 + C153348 * C1807) *
                C153600) *
               C153774) *
              C153413 * C153397 * C132 -
          (((C34889 * C1796 + C38784 + C38784 + C153348 * C1806 +
             C34887 * C1797 + C38785 + C38785 + C153705 * C1807) *
                C153600 +
            (C34889 * C324 + C34918 + C34918 + C153348 * C348 + C34887 * C323 +
             C34919 + C34919 + C153705 * C347) *
                C153740) *
               C153774 +
           ((C34889 * C985 + C38786 + C38786 + C153348 * C997 + C34887 * C984 +
             C38787 + C38787 + C153705 * C996) *
                C153600 +
            (C34889 * C315 + C34920 + C34920 + C153348 * C339 + C34887 * C316 +
             C34921 + C34921 + C153705 * C340) *
                C153740) *
               C23988 +
           ((C34889 * C496 + C38788 + C38788 + C153348 * C520 + C34887 * C497 +
             C38789 + C38789 + C153705 * C521) *
                C153600 +
            (C34889 * C148 + C34922 + C34922 + C153348 * C164 + C34887 * C147 +
             C34923 + C34923 + C153705 * C163) *
                C153740) *
               C23987) *
              C153413 * C153397 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C34887 * C144 + C34892 + C34892 + C153705 * C160 + C34889 * C145 +
              C34893 + C34893 + C153348 * C161) *
                 C153740 +
             (C34887 * C500 + C35415 + C35415 + C153705 * C524 + C34889 * C499 +
              C35414 + C35414 + C153348 * C523) *
                 C153600) *
                C23987 +
            ((C35190 + C35191) * C153740 + (C36183 + C36182) * C153600) *
                C23988 +
            C39086 * C153774) *
               C153413 * C310 -
           ((C37402 * C153600 + C36515 * C153740) * C153774 +
            (C37403 * C153600 + (C35193 + C35192) * C153740) * C23988 +
            ((C36182 + C36183) * C153600 + (C35191 + C35190) * C153740) *
                C23987) *
               C153413 * C311 +
           (C39086 * C23987 +
            (C35207 * C153740 + (C36179 + C36178) * C153600) * C23988 +
            ((C35197 + C35196) * C153740 + (C37416 + C37417) * C153600) *
                C153774) *
               C153413 * C312) *
              C313 +
          ((((C35198 + C35199) * C153740 + (C36184 + C36185) * C153600) *
                C23987 +
            ((C35200 + C35201) * C153740 + (C36186 + C36187) * C153600) *
                C23988 +
            ((C35202 + C35203) * C153740 + (C36188 + C36189) * C153600) *
                C153774) *
               C153413 * C311 -
           (C39087 * C153774 +
            ((C36185 + C36184) * C153600 + (C35199 + C35198) * C153740) *
                C23988 +
            ((C34889 * C498 + C35425 + C35425 + C153348 * C522 + C34887 * C499 +
              C35424 + C35424 + C153705 * C523) *
                 C153600 +
             (C34889 * C146 + C34906 + C34906 + C153348 * C162 + C34887 * C145 +
              C34907 + C34907 + C153705 * C161) *
                 C153740) *
                C23987) *
               C153413 * C310 -
           (((C34889 * C5601 + C36152 + C36152 + C153348 * C5607 +
              C34887 * C5602 + C36153 + C36153 + C153705 * C5608) *
                 C153600 +
             (C35205 + C35204) * C153740) *
                C153774 +
            ((C36189 + C36188) * C153600 + C35208 * C153740) * C23988 +
            C39087 * C23987) *
               C153413 * C312) *
              C153384)) /
            (p * q * std::sqrt(p + q));
    d2ee[350] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C11268 * C144 + C11277 + C11277 + C11262 * C160 + C11270 * C145 +
             C11278 + C11278 + C11263 * C161 + C11272 * C146 + C11279 + C11279 +
             C11264 * C162 + C11274 * C147 + C11280 + C11280 + C153738 * C163) *
                C153740 +
            (C15551 + C15552 + C15553 + C15554) * C153600) *
               C153501 * C153413 * C153795 -
           ((C12543 + C12544 + C12545 + C12546) * C153600 +
            (C11586 + C11585 + C11584 + C11583) * C153740) *
               C153501 * C153413 * C153796 +
           ((C11590 + C11589 + C11588 + C11587) * C153740 +
            (C13783 + C13784 + C13785 + C13786) * C153600) *
               C153501 * C153413 * C1509) *
              C153716 +
          (((C11591 + C11592 + C11593 + C11594) * C153740 +
            (C12547 + C12548 + C12549 + C12550) * C153600) *
               C153501 * C153413 * C153796 -
           ((C15562 + C15561 + C15560 + C15559) * C153600 +
            (C11274 * C148 + C11289 + C11289 + C153738 * C164 + C11272 * C147 +
             C11290 + C11290 + C11264 * C163 + C11270 * C146 + C11291 + C11291 +
             C11263 * C162 + C11268 * C145 + C11292 + C11292 + C11262 * C161) *
                C153740) *
               C153501 * C153413 * C153795 -
           ((C11274 * C1796 + C12523 + C12523 + C153738 * C1806 +
             C11272 * C1797 + C12524 + C12524 + C11264 * C1807 +
             C11270 * C1798 + C12525 + C12525 + C11263 * C1808 +
             C11268 * C1799 + C12526 + C12526 + C11262 * C1809) *
                C153600 +
            (C11598 + C11597 + C11596 + C11595) * C153740) *
               C153501 * C153413 * C1509) *
              C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C34887 * C144 + C34892 + C34892 + C153705 * C160 + C34889 * C145 +
              C34893 + C34893 + C153348 * C161) *
                 C153740 +
             (C39432 + C39433) * C153600) *
                C23987 +
            ((C35190 + C35191) * C153740 + C40446 * C153600) * C23988 +
            C39086 * C153774) *
               C153413 * C153795 -
           (C40937 * C153774 +
            (C37403 * C153600 + (C35193 + C35192) * C153740) * C23988 +
            (C40447 * C153600 + (C35191 + C35190) * C153740) * C23987) *
               C153413 * C153796 +
           (C39086 * C23987 +
            (C35207 * C153740 + (C36179 + C36178) * C153600) * C23988 +
            ((C35197 + C35196) * C153740 + (C37416 + C37417) * C153600) *
                C153774) *
               C153413 * C1509) *
              C153716 +
          ((((C35198 + C35199) * C153740 + C40448 * C153600) * C23987 +
            ((C35200 + C35201) * C153740 + C40449 * C153600) * C23988 +
            ((C35202 + C35203) * C153740 + (C36188 + C36189) * C153600) *
                C153774) *
               C153413 * C153796 -
           (C39087 * C153774 +
            (C40450 * C153600 + (C35199 + C35198) * C153740) * C23988 +
            ((C39437 + C39436) * C153600 +
             (C34889 * C146 + C34906 + C34906 + C153348 * C162 + C34887 * C145 +
              C34907 + C34907 + C153705 * C161) *
                 C153740) *
                C23987) *
               C153413 * C153795 -
           (((C34889 * C5601 + C36152 + C36152 + C153348 * C5607 +
              C34887 * C5602 + C36153 + C36153 + C153705 * C5608) *
                 C153600 +
             (C35205 + C35204) * C153740) *
                C153774 +
            ((C36189 + C36188) * C153600 + C35208 * C153740) * C23988 +
            C39087 * C23987) *
               C153413 * C1509) *
              C153384)) /
            (p * q * std::sqrt(p + q));
    d2ee[351] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C11268 * C144 + C11277 + C11277 + C11262 * C160 + C11270 * C145 +
             C11278 + C11278 + C11263 * C161 + C11272 * C146 + C11279 + C11279 +
             C11264 * C162 + C11274 * C147 + C11280 + C11280 + C153738 * C163) *
                C153740 +
            (C15551 + C15552 + C15553 + C15554) * C153600) *
               C153501 * C153725 -
           ((C15555 + C15556 + C15557 + C15558) * C153600 +
            (C15554 + C15553 + C15552 + C15551) * C153740) *
               C153501 * C153477) *
              C153795 +
          (((C12546 + C12545 + C12544 + C12543) * C153740 +
            (C13113 + C13114 + C13115 + C13116) * C153600) *
               C153501 * C153477 -
           ((C12543 + C12544 + C12545 + C12546) * C153600 +
            (C11586 + C11585 + C11584 + C11583) * C153740) *
               C153501 * C153725) *
              C153796 +
          (((C11590 + C11589 + C11588 + C11587) * C153740 +
            (C13783 + C13784 + C13785 + C13786) * C153600) *
               C153501 * C153725 -
           ((C11274 * C3330 + C13101 + C13101 + C153738 * C3338 +
             C11272 * C3329 + C13102 + C13102 + C11264 * C3337 +
             C11270 * C3328 + C13103 + C13103 + C11263 * C3336 +
             C11268 * C3327 + C13104 + C13104 + C11262 * C3335) *
                C153600 +
            (C13786 + C13785 + C13784 + C13783) * C153740) *
               C153501 * C153477) *
              C1509) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C34887 * C144 + C34892 + C34892 + C153705 * C160 + C34889 * C145 +
              C34893 + C34893 + C153348 * C161) *
                 C153740 +
             (C39432 + C39433) * C153600) *
                C23987 +
            ((C35190 + C35191) * C153740 + C40446 * C153600) * C23988 +
            C39086 * C153774) *
               C153725 -
           (C42221 * C153774 + (C41229 * C153600 + C40447 * C153740) * C23988 +
            ((C39434 + C39435) * C153600 + (C39433 + C39432) * C153740) *
                C23987) *
               C153477) *
              C153795 +
          (((C40446 * C153740 + C41230 * C153600) * C23987 +
            (C39081 * C153740 + C41235 * C153600) * C23988 +
            (C42220 * C153740 + (C36754 + C36755) * C153600) * C153774) *
               C153477 -
           (C40937 * C153774 +
            (C37403 * C153600 + (C35193 + C35192) * C153740) * C23988 +
            (C40447 * C153600 + (C35191 + C35190) * C153740) * C23987) *
               C153725) *
              C153796 +
          ((C39086 * C23987 + (C35207 * C153740 + C42220 * C153600) * C23988 +
            ((C35197 + C35196) * C153740 + (C37416 + C37417) * C153600) *
                C153774) *
               C153725 -
           (((C34889 * C28571 + C36736 + C36736 + C153348 * C28575 +
              C34887 * C28570 + C36737 + C36737 + C153705 * C28574) *
                 C153600 +
             (C37417 + C37416) * C153740) *
                C153774 +
            ((C36755 + C36754) * C153600 + C37402 * C153740) * C23988 +
            C42221 * C23987) *
               C153477) *
              C1509) *
         C153378) /
            (p * q * std::sqrt(p + q));
    d2ee[352] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C11268 * C144 + C11277 + C11277 + C11262 * C160 + C11270 * C145 +
            C11278 + C11278 + C11263 * C161 + C11272 * C146 + C11279 + C11279 +
            C11264 * C162 + C11274 * C147 + C11280 + C11280 + C153738 * C163) *
               C153740 +
           (C15551 + C15552 + C15553 + C15554) * C153600) *
              C153501 * C153413 * C1218 -
          ((C12543 + C12544 + C12545 + C12546) * C153600 +
           (C11586 + C11585 + C11584 + C11583) * C153740) *
              C153501 * C153413 * C1219 +
          ((C11590 + C11589 + C11588 + C11587) * C153740 +
           (C13783 + C13784 + C13785 + C13786) * C153600) *
              C153501 * C153413 * C1220 -
          ((C11274 * C4146 + C13771 + C13771 + C153738 * C4154 +
            C11272 * C4145 + C13772 + C13772 + C11264 * C4153 + C11270 * C4144 +
            C13773 + C13773 + C11263 * C4152 + C11268 * C4143 + C13774 +
            C13774 + C11262 * C4151) *
               C153600 +
           (C12898 + C12897 + C12896 + C12895) * C153740) *
              C153501 * C153413 * C1221) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C11268 * C144 + C11277 + C11277 + C11262 * C160 + C11270 * C145 +
             C11278 + C11278 + C11263 * C161 + C11272 * C146 + C11279 + C11279 +
             C11264 * C162 + C11274 * C147 + C11280 + C11280 + C153738 * C163) *
                C153740 +
            (C15551 + C15552 + C15553 + C15554) * C153600) *
               C153501 * C153413 * C1131 -
           ((C12543 + C12544 + C12545 + C12546) * C153600 +
            (C11586 + C11585 + C11584 + C11583) * C153740) *
               C153501 * C153413 * C153449) *
              C1133 +
          (((C11591 + C11592 + C11593 + C11594) * C153740 +
            (C12547 + C12548 + C12549 + C12550) * C153600) *
               C153501 * C153413 * C153449 -
           ((C15562 + C15561 + C15560 + C15559) * C153600 +
            (C11274 * C148 + C11289 + C11289 + C153738 * C164 + C11272 * C147 +
             C11290 + C11290 + C11264 * C163 + C11270 * C146 + C11291 + C11291 +
             C11263 * C162 + C11268 * C145 + C11292 + C11292 + C11262 * C161) *
                C153740) *
               C153501 * C153413 * C1131) *
              C1134 +
          (((C11268 * C146 + C11293 + C11293 + C11262 * C162 + C11270 * C147 +
             C11294 + C11294 + C11263 * C163 + C11272 * C148 + C11295 + C11295 +
             C11264 * C164 + C11274 * C149 + C11296 + C11296 + C153738 * C165) *
                C153740 +
            (C15975 + C15976 + C15977 + C15978) * C153600) *
               C153501 * C153413 * C1131 -
           ((C11274 * C986 + C12237 + C12237 + C153738 * C998 + C11272 * C985 +
             C12238 + C12238 + C11264 * C997 + C11270 * C984 + C12239 + C12239 +
             C11263 * C996 + C11268 * C983 + C12240 + C12240 + C11262 * C995) *
                C153600 +
            (C12042 + C12041 + C12040 + C12039) * C153740) *
               C153501 * C153413 * C153449) *
              C1135)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C11268 * C144 + C11277 + C11277 + C11262 * C160 + C11270 * C145 +
             C11278 + C11278 + C11263 * C161 + C11272 * C146 + C11279 + C11279 +
             C11264 * C162 + C11274 * C147 + C11280 + C11280 + C153738 * C163) *
                C153740 +
            (C15551 + C15552 + C15553 + C15554) * C153600) *
               C153501 * C493 -
           ((C15555 + C15556 + C15557 + C15558) * C153600 +
            (C15554 + C15553 + C15552 + C15551) * C153740) *
               C153501 * C494 +
           ((C15558 + C15557 + C15556 + C15555) * C153740 +
            (C11268 * C2152 + C14312 + C14312 + C11262 * C2162 +
             C11270 * C2151 + C14311 + C14311 + C11263 * C2161 +
             C11272 * C2150 + C14310 + C14310 + C11264 * C2160 +
             C11274 * C2149 + C14309 + C14309 + C153738 * C2159) *
                C153600) *
               C153501 * C495) *
              C1131 +
          (((C12546 + C12545 + C12544 + C12543) * C153740 +
            (C13113 + C13114 + C13115 + C13116) * C153600) *
               C153501 * C494 -
           ((C12543 + C12544 + C12545 + C12546) * C153600 +
            (C11586 + C11585 + C11584 + C11583) * C153740) *
               C153501 * C493 -
           ((C11274 * C8437 + C14305 + C14305 + C153738 * C8439 +
             C11272 * C6216 + C14306 + C14306 + C11264 * C6228 +
             C11270 * C6217 + C14307 + C14307 + C11263 * C6229 +
             C11268 * C6218 + C14308 + C14308 + C11262 * C6230) *
                C153600 +
            (C13116 + C13115 + C13114 + C13113) * C153740) *
               C153501 * C495) *
              C153449) *
         C153378) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C34887 * C144 + C34892 + C34892 + C153705 * C160 + C34889 * C145 +
              C34893 + C34893 + C153348 * C161) *
                 C153740 +
             (C39432 + C39433) * C153600) *
                C23987 +
            ((C35190 + C35191) * C153740 + C40446 * C153600) * C23988 +
            C39086 * C153774) *
               C153413 * C1131 -
           ((C37402 * C153600 + C36515 * C153740) * C153774 +
            (C37403 * C153600 + (C35193 + C35192) * C153740) * C23988 +
            (C40447 * C153600 + (C35191 + C35190) * C153740) * C23987) *
               C153413 * C153449) *
              C1133 +
          ((((C35198 + C35199) * C153740 + C40448 * C153600) * C23987 +
            ((C35200 + C35201) * C153740 + C40449 * C153600) * C23988 +
            ((C35202 + C35203) * C153740 + (C36188 + C36189) * C153600) *
                C153774) *
               C153413 * C153449 -
           (C39087 * C153774 +
            (C40450 * C153600 + (C35199 + C35198) * C153740) * C23988 +
            ((C39437 + C39436) * C153600 +
             (C34889 * C146 + C34906 + C34906 + C153348 * C162 + C34887 * C145 +
              C34907 + C34907 + C153705 * C161) *
                 C153740) *
                C23987) *
               C153413 * C1131) *
              C1134 +
          ((((C34887 * C146 + C34908 + C34908 + C153705 * C162 + C34889 * C147 +
              C34909 + C34909 + C153348 * C163) *
                 C153740 +
             (C40058 + C40059) * C153600) *
                C23987 +
            ((C35660 + C35661) * C153740 + (C39750 + C39751) * C153600) *
                C23988 +
            ((C35662 + C35663) * C153740 + (C39752 + C39753) * C153600) *
                C153774) *
               C153413 * C1131 -
           (((C34889 * C4146 + C35860 + C35860 + C153348 * C4154 +
              C34887 * C4145 + C35861 + C35861 + C153705 * C4153) *
                 C153600 +
             (C35665 + C35664) * C153740) *
                C153774 +
            ((C39753 + C39752) * C153600 + (C35663 + C35662) * C153740) *
                C23988 +
            ((C39751 + C39750) * C153600 + (C35661 + C35660) * C153740) *
                C23987) *
               C153413 * C153449) *
              C1135)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C34887 * C144 + C34892 + C34892 + C153705 * C160 + C34889 * C145 +
             C34893 + C34893 + C153348 * C161) *
                C153740 +
            (C39432 + C39433) * C153600) *
               C23987 +
           ((C35190 + C35191) * C153740 + C40446 * C153600) * C23988 +
           C39086 * C153774) *
              C153413 * C1218 -
          (C40937 * C153774 +
           (C37403 * C153600 + (C35193 + C35192) * C153740) * C23988 +
           (C40447 * C153600 + (C35191 + C35190) * C153740) * C23987) *
              C153413 * C1219 +
          (C39086 * C23987 +
           (C35207 * C153740 + (C36179 + C36178) * C153600) * C23988 +
           ((C35197 + C35196) * C153740 + (C37416 + C37417) * C153600) *
               C153774) *
              C153413 * C1220 -
          (((C34889 * C29033 + C37408 + C37408 + C153348 * C29037 +
             C34887 * C29032 + C37409 + C37409 + C153705 * C29036) *
                C153600 +
            (C36529 + C36528) * C153740) *
               C153774 +
           ((C37417 + C37416) * C153600 + C36514 * C153740) * C23988 +
           C40937 * C23987) *
              C153413 * C1221) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C34887 * C144 + C34892 + C34892 + C153705 * C160 + C34889 * C145 +
              C34893 + C34893 + C153348 * C161) *
                 C153740 +
             (C39432 + C39433) * C153600) *
                C23987 +
            ((C35190 + C35191) * C153740 + C40446 * C153600) * C23988 +
            C39086 * C153774) *
               C493 -
           ((C41228 * C153600 + C37403 * C153740) * C153774 +
            (C41229 * C153600 + C40447 * C153740) * C23988 +
            ((C39434 + C39435) * C153600 + (C39433 + C39432) * C153740) *
                C23987) *
               C494 +
           (((C39435 + C39434) * C153740 +
             (C34887 * C2152 + C37943 + C37943 + C153705 * C2162 +
              C34889 * C2151 + C37942 + C37942 + C153348 * C2161) *
                 C153600) *
                C23987 +
            (C41230 * C153740 + (C41248 + C41249) * C153600) * C23988 +
            (C41235 * C153740 + (C41250 + C41251) * C153600) * C153774) *
               C495) *
              C1131 +
          (((C40446 * C153740 + C41230 * C153600) * C23987 +
            (C39081 * C153740 + C41235 * C153600) * C23988 +
            ((C36179 + C36178) * C153740 + (C36754 + C36755) * C153600) *
                C153774) *
               C494 -
           (C40937 * C153774 +
            (C37403 * C153600 + (C35193 + C35192) * C153740) * C23988 +
            (C40447 * C153600 + (C35191 + C35190) * C153740) * C23987) *
               C493 -
           (((C34889 * C32070 + C37936 + C37936 + C153348 * C32072 +
              C34887 * C30195 + C37937 + C37937 + C153705 * C30199) *
                 C153600 +
             (C36755 + C36754) * C153740) *
                C153774 +
            ((C41251 + C41250) * C153600 + C41228 * C153740) * C23988 +
            ((C41249 + C41248) * C153600 + C41229 * C153740) * C23987) *
               C495) *
              C153449) *
         C153378) /
            (p * q * std::sqrt(p + q));
    d2ee[353] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C11268 * C144 + C11277 + C11277 + C11262 * C160 + C11270 * C145 +
              C11278 + C11278 + C11263 * C161 + C11272 * C146 + C11279 +
              C11279 + C11264 * C162 + C11274 * C147 + C11280 + C11280 +
              C153738 * C163) *
                 C153740 +
             (C15551 + C15552 + C15553 + C15554) * C153600) *
                C153501 * C153725 -
            ((C15555 + C15556 + C15557 + C15558) * C153600 +
             (C15554 + C15553 + C15552 + C15551) * C153740) *
                C153501 * C153477) *
               C1131 +
           (((C12546 + C12545 + C12544 + C12543) * C153740 +
             (C13113 + C13114 + C13115 + C13116) * C153600) *
                C153501 * C153477 -
            ((C12543 + C12544 + C12545 + C12546) * C153600 +
             (C11586 + C11585 + C11584 + C11583) * C153740) *
                C153501 * C153725) *
               C153449) *
              C153716 +
          ((((C15559 + C15560 + C15561 + C15562) * C153740 +
             (C15563 + C15564 + C15565 + C15566) * C153600) *
                C153501 * C153477 -
            ((C15562 + C15561 + C15560 + C15559) * C153600 +
             (C11274 * C148 + C11289 + C11289 + C153738 * C164 + C11272 * C147 +
              C11290 + C11290 + C11264 * C163 + C11270 * C146 + C11291 +
              C11291 + C11263 * C162 + C11268 * C145 + C11292 + C11292 +
              C11262 * C161) *
                 C153740) *
                C153501 * C153725) *
               C1131 +
           (((C11591 + C11592 + C11593 + C11594) * C153740 +
             (C12547 + C12548 + C12549 + C12550) * C153600) *
                C153501 * C153725 -
            ((C11274 * C1365 + C11817 + C11817 + C153738 * C1375 +
              C11272 * C1366 + C11818 + C11818 + C11264 * C1376 +
              C11270 * C1367 + C11819 + C11819 + C11263 * C1377 +
              C11268 * C1368 + C11820 + C11820 + C11262 * C1378) *
                 C153600 +
             (C12550 + C12549 + C12548 + C12547) * C153740) *
                C153501 * C153477) *
               C153449) *
              C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C34887 * C144 + C34892 + C34892 + C153705 * C160 +
               C34889 * C145 + C34893 + C34893 + C153348 * C161) *
                  C153740 +
              (C39432 + C39433) * C153600) *
                 C23987 +
             ((C35190 + C35191) * C153740 + C40446 * C153600) * C23988 +
             C39086 * C153774) *
                C153725 -
            ((C41228 * C153600 + C37403 * C153740) * C153774 +
             (C41229 * C153600 + C40447 * C153740) * C23988 +
             ((C39434 + C39435) * C153600 + (C39433 + C39432) * C153740) *
                 C23987) *
                C153477) *
               C1131 +
           (((C40446 * C153740 + C41230 * C153600) * C23987 +
             (C39081 * C153740 + C41235 * C153600) * C23988 +
             ((C36179 + C36178) * C153740 + (C36754 + C36755) * C153600) *
                 C153774) *
                C153477 -
            (C40937 * C153774 +
             (C37403 * C153600 + (C35193 + C35192) * C153740) * C23988 +
             (C40447 * C153600 + (C35191 + C35190) * C153740) * C23987) *
                C153725) *
               C153449) *
              C153716 +
          (((((C39436 + C39437) * C153740 + (C39438 + C39439) * C153600) *
                 C23987 +
             (C40448 * C153740 + (C39440 + C39441) * C153600) * C23988 +
             (C40449 * C153740 + (C39442 + C39443) * C153600) * C153774) *
                C153477 -
            (C39087 * C153774 +
             (C40450 * C153600 + (C35199 + C35198) * C153740) * C23988 +
             ((C39437 + C39436) * C153600 +
              (C34889 * C146 + C34906 + C34906 + C153348 * C162 +
               C34887 * C145 + C34907 + C34907 + C153705 * C161) *
                  C153740) *
                 C23987) *
                C153725) *
               C1131 +
           ((((C35198 + C35199) * C153740 + C40448 * C153600) * C23987 +
             ((C35200 + C35201) * C153740 + C40449 * C153600) * C23988 +
             ((C35202 + C35203) * C153740 + (C36188 + C36189) * C153600) *
                 C153774) *
                C153725 -
            (((C34889 * C4833 + C35432 + C35432 + C153348 * C4839 +
               C34887 * C4834 + C35433 + C35433 + C153705 * C4840) *
                  C153600 +
              (C36189 + C36188) * C153740) *
                 C153774 +
             ((C39443 + C39442) * C153600 + C39082 * C153740) * C23988 +
             ((C39441 + C39440) * C153600 + C40450 * C153740) * C23987) *
                C153477) *
               C153449) *
              C153384)) /
            (p * q * std::sqrt(p + q));
    d2ee[354] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C11268 * C144 + C11277 + C11277 + C11262 * C160 + C11270 * C145 +
             C11278 + C11278 + C11263 * C161 + C11272 * C146 + C11279 + C11279 +
             C11264 * C162 + C11274 * C147 + C11280 + C11280 + C153738 * C163) *
                C153740 +
            (C15551 + C15552 + C15553 + C15554) * C153600) *
               C153501 * C153413 * C1131 -
           ((C12543 + C12544 + C12545 + C12546) * C153600 +
            (C11586 + C11585 + C11584 + C11583) * C153740) *
               C153501 * C153413 * C153449) *
              C1133 +
          (((C11591 + C11592 + C11593 + C11594) * C153740 +
            (C12547 + C12548 + C12549 + C12550) * C153600) *
               C153501 * C153413 * C153449 -
           ((C15562 + C15561 + C15560 + C15559) * C153600 +
            (C11274 * C148 + C11289 + C11289 + C153738 * C164 + C11272 * C147 +
             C11290 + C11290 + C11264 * C163 + C11270 * C146 + C11291 + C11291 +
             C11263 * C162 + C11268 * C145 + C11292 + C11292 + C11262 * C161) *
                C153740) *
               C153501 * C153413 * C1131) *
              C1134 +
          (((C11268 * C146 + C11293 + C11293 + C11262 * C162 + C11270 * C147 +
             C11294 + C11294 + C11263 * C163 + C11272 * C148 + C11295 + C11295 +
             C11264 * C164 + C11274 * C149 + C11296 + C11296 + C153738 * C165) *
                C153740 +
            (C15975 + C15976 + C15977 + C15978) * C153600) *
               C153501 * C153413 * C1131 -
           ((C11274 * C986 + C12237 + C12237 + C153738 * C998 + C11272 * C985 +
             C12238 + C12238 + C11264 * C997 + C11270 * C984 + C12239 + C12239 +
             C11263 * C996 + C11268 * C983 + C12240 + C12240 + C11262 * C995) *
                C153600 +
            (C12042 + C12041 + C12040 + C12039) * C153740) *
               C153501 * C153413 * C153449) *
              C1135)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C11268 * C144 + C11277 + C11277 + C11262 * C160 + C11270 * C145 +
            C11278 + C11278 + C11263 * C161 + C11272 * C146 + C11279 + C11279 +
            C11264 * C162 + C11274 * C147 + C11280 + C11280 + C153738 * C163) *
               C153740 +
           (C15551 + C15552 + C15553 + C15554) * C153600) *
              C153501 * C153413 * C1218 -
          ((C12543 + C12544 + C12545 + C12546) * C153600 +
           (C11586 + C11585 + C11584 + C11583) * C153740) *
              C153501 * C153413 * C1219 +
          ((C11590 + C11589 + C11588 + C11587) * C153740 +
           (C13783 + C13784 + C13785 + C13786) * C153600) *
              C153501 * C153413 * C1220 -
          ((C11274 * C4146 + C13771 + C13771 + C153738 * C4154 +
            C11272 * C4145 + C13772 + C13772 + C11264 * C4153 + C11270 * C4144 +
            C13773 + C13773 + C11263 * C4152 + C11268 * C4143 + C13774 +
            C13774 + C11262 * C4151) *
               C153600 +
           (C12898 + C12897 + C12896 + C12895) * C153740) *
              C153501 * C153413 * C1221) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C34887 * C144 + C34892 + C34892 + C153705 * C160 + C34889 * C145 +
              C34893 + C34893 + C153348 * C161) *
                 C153740 +
             (C39432 + C39433) * C153600) *
                C23987 +
            ((C35190 + C35191) * C153740 + C40446 * C153600) * C23988 +
            C39086 * C153774) *
               C153413 * C1131 -
           ((C37402 * C153600 + C36515 * C153740) * C153774 +
            (C37403 * C153600 + (C35193 + C35192) * C153740) * C23988 +
            (C40447 * C153600 + (C35191 + C35190) * C153740) * C23987) *
               C153413 * C153449) *
              C1133 +
          ((((C35198 + C35199) * C153740 + C40448 * C153600) * C23987 +
            ((C35200 + C35201) * C153740 + C40449 * C153600) * C23988 +
            ((C35202 + C35203) * C153740 + (C36188 + C36189) * C153600) *
                C153774) *
               C153413 * C153449 -
           (C39087 * C153774 +
            (C40450 * C153600 + (C35199 + C35198) * C153740) * C23988 +
            ((C39437 + C39436) * C153600 +
             (C34889 * C146 + C34906 + C34906 + C153348 * C162 + C34887 * C145 +
              C34907 + C34907 + C153705 * C161) *
                 C153740) *
                C23987) *
               C153413 * C1131) *
              C1134 +
          ((((C34887 * C146 + C34908 + C34908 + C153705 * C162 + C34889 * C147 +
              C34909 + C34909 + C153348 * C163) *
                 C153740 +
             (C40058 + C40059) * C153600) *
                C23987 +
            ((C35660 + C35661) * C153740 + (C39750 + C39751) * C153600) *
                C23988 +
            ((C35662 + C35663) * C153740 + (C39752 + C39753) * C153600) *
                C153774) *
               C153413 * C1131 -
           (((C34889 * C4146 + C35860 + C35860 + C153348 * C4154 +
              C34887 * C4145 + C35861 + C35861 + C153705 * C4153) *
                 C153600 +
             (C35665 + C35664) * C153740) *
                C153774 +
            ((C39753 + C39752) * C153600 + (C35663 + C35662) * C153740) *
                C23988 +
            ((C39751 + C39750) * C153600 + (C35661 + C35660) * C153740) *
                C23987) *
               C153413 * C153449) *
              C1135)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C34887 * C144 + C34892 + C34892 + C153705 * C160 + C34889 * C145 +
             C34893 + C34893 + C153348 * C161) *
                C153740 +
            (C39432 + C39433) * C153600) *
               C23987 +
           ((C35190 + C35191) * C153740 + C40446 * C153600) * C23988 +
           C39086 * C153774) *
              C153413 * C1218 -
          (C40937 * C153774 +
           (C37403 * C153600 + (C35193 + C35192) * C153740) * C23988 +
           (C40447 * C153600 + (C35191 + C35190) * C153740) * C23987) *
              C153413 * C1219 +
          (C39086 * C23987 +
           (C35207 * C153740 + (C36179 + C36178) * C153600) * C23988 +
           ((C35197 + C35196) * C153740 + (C37416 + C37417) * C153600) *
               C153774) *
              C153413 * C1220 -
          (((C34889 * C29033 + C37408 + C37408 + C153348 * C29037 +
             C34887 * C29032 + C37409 + C37409 + C153705 * C29036) *
                C153600 +
            (C36529 + C36528) * C153740) *
               C153774 +
           ((C37417 + C37416) * C153600 + C36514 * C153740) * C23988 +
           C40937 * C23987) *
              C153413 * C1221) *
         C153378) /
            (p * q * std::sqrt(p + q));
    d2ee[355] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C11268 * C144 + C11277 + C11277 + C11262 * C160 + C11270 * C145 +
              C11278 + C11278 + C11263 * C161 + C11272 * C146 + C11279 +
              C11279 + C11264 * C162 + C11274 * C147 + C11280 + C11280 +
              C153738 * C163) *
                 C153740 +
             (C15551 + C15552 + C15553 + C15554) * C153600) *
                C153501 * C1938 -
            ((C15555 + C15556 + C15557 + C15558) * C153600 +
             (C15554 + C15553 + C15552 + C15551) * C153740) *
                C153501 * C153477) *
               C153724 +
           (((C12546 + C12545 + C12544 + C12543) * C153740 +
             (C13113 + C13114 + C13115 + C13116) * C153600) *
                C153501 * C153477 -
            ((C12543 + C12544 + C12545 + C12546) * C153600 +
             (C11586 + C11585 + C11584 + C11583) * C153740) *
                C153501 * C1938) *
               C153449) *
              C153716 +
          ((((C15559 + C15560 + C15561 + C15562) * C153740 +
             (C15563 + C15564 + C15565 + C15566) * C153600) *
                C153501 * C153477 -
            ((C15562 + C15561 + C15560 + C15559) * C153600 +
             (C11274 * C148 + C11289 + C11289 + C153738 * C164 + C11272 * C147 +
              C11290 + C11290 + C11264 * C163 + C11270 * C146 + C11291 +
              C11291 + C11263 * C162 + C11268 * C145 + C11292 + C11292 +
              C11262 * C161) *
                 C153740) *
                C153501 * C1938) *
               C153724 +
           (((C11591 + C11592 + C11593 + C11594) * C153740 +
             (C12547 + C12548 + C12549 + C12550) * C153600) *
                C153501 * C1938 -
            ((C11274 * C1365 + C11817 + C11817 + C153738 * C1375 +
              C11272 * C1366 + C11818 + C11818 + C11264 * C1376 +
              C11270 * C1367 + C11819 + C11819 + C11263 * C1377 +
              C11268 * C1368 + C11820 + C11820 + C11262 * C1378) *
                 C153600 +
             (C12550 + C12549 + C12548 + C12547) * C153740) *
                C153501 * C153477) *
               C153449) *
              C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C34887 * C144 + C34892 + C34892 + C153705 * C160 +
               C34889 * C145 + C34893 + C34893 + C153348 * C161) *
                  C153740 +
              (C39432 + C39433) * C153600) *
                 C23987 +
             ((C35190 + C35191) * C153740 + C40446 * C153600) * C23988 +
             C39086 * C153774) *
                C1938 -
            (C42221 * C153774 + (C41229 * C153600 + C40447 * C153740) * C23988 +
             ((C39434 + C39435) * C153600 + (C39433 + C39432) * C153740) *
                 C23987) *
                C153477) *
               C153724 +
           (((C40446 * C153740 + C41230 * C153600) * C23987 +
             (C39081 * C153740 + C41235 * C153600) * C23988 +
             (C42220 * C153740 + (C36754 + C36755) * C153600) * C153774) *
                C153477 -
            (C40937 * C153774 +
             (C37403 * C153600 + (C35193 + C35192) * C153740) * C23988 +
             (C40447 * C153600 + (C35191 + C35190) * C153740) * C23987) *
                C1938) *
               C153449) *
              C153716 +
          (((((C39436 + C39437) * C153740 + (C39438 + C39439) * C153600) *
                 C23987 +
             (C40448 * C153740 + (C39440 + C39441) * C153600) * C23988 +
             (C40449 * C153740 + (C39442 + C39443) * C153600) * C153774) *
                C153477 -
            (C39087 * C153774 +
             (C40450 * C153600 + (C35199 + C35198) * C153740) * C23988 +
             ((C39437 + C39436) * C153600 +
              (C34889 * C146 + C34906 + C34906 + C153348 * C162 +
               C34887 * C145 + C34907 + C34907 + C153705 * C161) *
                  C153740) *
                 C23987) *
                C1938) *
               C153724 +
           ((((C35198 + C35199) * C153740 + C40448 * C153600) * C23987 +
             ((C35200 + C35201) * C153740 + C40449 * C153600) * C23988 +
             ((C35202 + C35203) * C153740 + (C36188 + C36189) * C153600) *
                 C153774) *
                C1938 -
            (((C34889 * C4833 + C35432 + C35432 + C153348 * C4839 +
               C34887 * C4834 + C35433 + C35433 + C153705 * C4840) *
                  C153600 +
              (C36189 + C36188) * C153740) *
                 C153774 +
             ((C39443 + C39442) * C153600 + C39082 * C153740) * C23988 +
             ((C39441 + C39440) * C153600 + C40450 * C153740) * C23987) *
                C153477) *
               C153449) *
              C153384)) /
            (p * q * std::sqrt(p + q));
    d2ee[356] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C11268 * C144 + C11277 + C11277 + C11262 * C160 + C11270 * C145 +
             C11278 + C11278 + C11263 * C161 + C11272 * C146 + C11279 + C11279 +
             C11264 * C162 + C11274 * C147 + C11280 + C11280 + C153738 * C163) *
                C153740 +
            (C15551 + C15552 + C15553 + C15554) * C153600) *
               C153501 * C153797 -
           ((C15555 + C15556 + C15557 + C15558) * C153600 +
            (C15554 + C15553 + C15552 + C15551) * C153740) *
               C153501 * C153798 +
           ((C15558 + C15557 + C15556 + C15555) * C153740 +
            (C17939 + C17940 + C17941 + C17942) * C153600) *
               C153501 * C2454) *
              C153724 +
          (((C12546 + C12545 + C12544 + C12543) * C153740 +
            (C13113 + C13114 + C13115 + C13116) * C153600) *
               C153501 * C153798 -
           ((C12543 + C12544 + C12545 + C12546) * C153600 +
            (C11586 + C11585 + C11584 + C11583) * C153740) *
               C153501 * C153797 -
           ((C11274 * C8437 + C14305 + C14305 + C153738 * C8439 +
             C11272 * C6216 + C14306 + C14306 + C11264 * C6228 +
             C11270 * C6217 + C14307 + C14307 + C11263 * C6229 +
             C11268 * C6218 + C14308 + C14308 + C11262 * C6230) *
                C153600 +
            (C13116 + C13115 + C13114 + C13113) * C153740) *
               C153501 * C2454) *
              C153449) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C34887 * C144 + C34892 + C34892 + C153705 * C160 + C34889 * C145 +
              C34893 + C34893 + C153348 * C161) *
                 C153740 +
             (C39432 + C39433) * C153600) *
                C23987 +
            ((C35190 + C35191) * C153740 + C40446 * C153600) * C23988 +
            C39086 * C153774) *
               C153797 -
           (C42221 * C153774 + (C41229 * C153600 + C40447 * C153740) * C23988 +
            ((C39434 + C39435) * C153600 + (C39433 + C39432) * C153740) *
                C23987) *
               C153798 +
           (((C39435 + C39434) * C153740 + (C43010 + C43011) * C153600) *
                C23987 +
            (C41230 * C153740 + (C41248 + C41249) * C153600) * C23988 +
            (C41235 * C153740 + (C41250 + C41251) * C153600) * C153774) *
               C2454) *
              C153724 +
          (((C40446 * C153740 + C41230 * C153600) * C23987 +
            (C39081 * C153740 + C41235 * C153600) * C23988 +
            (C42220 * C153740 + (C36754 + C36755) * C153600) * C153774) *
               C153798 -
           (C40937 * C153774 +
            (C37403 * C153600 + (C35193 + C35192) * C153740) * C23988 +
            (C40447 * C153600 + (C35191 + C35190) * C153740) * C23987) *
               C153797 -
           (((C34889 * C32070 + C37936 + C37936 + C153348 * C32072 +
              C34887 * C30195 + C37937 + C37937 + C153705 * C30199) *
                 C153600 +
             (C36755 + C36754) * C153740) *
                C153774 +
            ((C41251 + C41250) * C153600 + C41228 * C153740) * C23988 +
            ((C41249 + C41248) * C153600 + C41229 * C153740) * C23987) *
               C2454) *
              C153449) *
         C153378) /
            (p * q * std::sqrt(p + q));
    d2ee[357] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C11268 * C144 + C11277 + C11277 + C11262 * C160 + C11270 * C145 +
             C11278 + C11278 + C11263 * C161 + C11272 * C146 + C11279 + C11279 +
             C11264 * C162 + C11274 * C147 + C11280 + C11280 + C153738 * C163) *
                C153740 +
            (C15551 + C15552 + C15553 + C15554) * C153600) *
               C153501 * C1938 -
           ((C15555 + C15556 + C15557 + C15558) * C153600 +
            (C15554 + C15553 + C15552 + C15551) * C153740) *
               C153501 * C153477) *
              C310 +
          (((C12546 + C12545 + C12544 + C12543) * C153740 +
            (C13113 + C13114 + C13115 + C13116) * C153600) *
               C153501 * C153477 -
           ((C12543 + C12544 + C12545 + C12546) * C153600 +
            (C11586 + C11585 + C11584 + C11583) * C153740) *
               C153501 * C1938) *
              C311 +
          (((C11590 + C11589 + C11588 + C11587) * C153740 +
            (C13783 + C13784 + C13785 + C13786) * C153600) *
               C153501 * C1938 -
           ((C11274 * C3330 + C13101 + C13101 + C153738 * C3338 +
             C11272 * C3329 + C13102 + C13102 + C11264 * C3337 +
             C11270 * C3328 + C13103 + C13103 + C11263 * C3336 +
             C11268 * C3327 + C13104 + C13104 + C11262 * C3335) *
                C153600 +
            (C13786 + C13785 + C13784 + C13783) * C153740) *
               C153501 * C153477) *
              C312) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C11268 * C144 + C11277 + C11277 + C11262 * C160 + C11270 * C145 +
             C11278 + C11278 + C11263 * C161 + C11272 * C146 + C11279 + C11279 +
             C11264 * C162 + C11274 * C147 + C11280 + C11280 + C153738 * C163) *
                C153740 +
            (C15551 + C15552 + C15553 + C15554) * C153600) *
               C153501 * C1938 -
           ((C15555 + C15556 + C15557 + C15558) * C153600 +
            (C15554 + C15553 + C15552 + C15551) * C153740) *
               C153501 * C153477) *
              C153397 * C1133 +
          (((C15559 + C15560 + C15561 + C15562) * C153740 +
            (C15563 + C15564 + C15565 + C15566) * C153600) *
               C153501 * C153477 -
           ((C15562 + C15561 + C15560 + C15559) * C153600 +
            (C11274 * C148 + C11289 + C11289 + C153738 * C164 + C11272 * C147 +
             C11290 + C11290 + C11264 * C163 + C11270 * C146 + C11291 + C11291 +
             C11263 * C162 + C11268 * C145 + C11292 + C11292 + C11262 * C161) *
                C153740) *
               C153501 * C1938) *
              C153397 * C1134 +
          (((C11268 * C146 + C11293 + C11293 + C11262 * C162 + C11270 * C147 +
             C11294 + C11294 + C11263 * C163 + C11272 * C148 + C11295 + C11295 +
             C11264 * C164 + C11274 * C149 + C11296 + C11296 + C153738 * C165) *
                C153740 +
            (C15975 + C15976 + C15977 + C15978) * C153600) *
               C153501 * C1938 -
           ((C11274 * C507 + C15963 + C15963 + C153738 * C531 + C11272 * C505 +
             C15964 + C15964 + C11264 * C529 + C11270 * C504 + C15965 + C15965 +
             C11263 * C528 + C11268 * C503 + C15966 + C15966 + C11262 * C527) *
                C153600 +
            (C15978 + C15977 + C15976 + C15975) * C153740) *
               C153501 * C153477) *
              C153397 * C1135)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C11268 * C144 + C11277 + C11277 + C11262 * C160 + C11270 * C145 +
            C11278 + C11278 + C11263 * C161 + C11272 * C146 + C11279 + C11279 +
            C11264 * C162 + C11274 * C147 + C11280 + C11280 + C153738 * C163) *
               C153740 +
           (C15551 + C15552 + C15553 + C15554) * C153600) *
              C153501 * C2144 -
          ((C15555 + C15556 + C15557 + C15558) * C153600 +
           (C15554 + C15553 + C15552 + C15551) * C153740) *
              C153501 * C2145 +
          ((C15558 + C15557 + C15556 + C15555) * C153740 +
           (C17939 + C17940 + C17941 + C17942) * C153600) *
              C153501 * C2146 -
          ((C11274 * C7563 + C17927 + C17927 + C153738 * C7571 +
            C11272 * C7562 + C17928 + C17928 + C11264 * C7570 + C11270 * C7561 +
            C17929 + C17929 + C11263 * C7569 + C11268 * C7560 + C17930 +
            C17930 + C11262 * C7568) *
               C153600 +
           (C17942 + C17941 + C17940 + C17939) * C153740) *
              C153501 * C2147) *
         C153397 * C153378) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C34887 * C144 + C34892 + C34892 + C153705 * C160 + C34889 * C145 +
              C34893 + C34893 + C153348 * C161) *
                 C153740 +
             (C39432 + C39433) * C153600) *
                C23987 +
            ((C35190 + C35191) * C153740 + C40446 * C153600) * C23988 +
            C39086 * C153774) *
               C1938 -
           (C42221 * C153774 + (C41229 * C153600 + C40447 * C153740) * C23988 +
            ((C39434 + C39435) * C153600 + (C39433 + C39432) * C153740) *
                C23987) *
               C153477) *
              C153397 * C1133 +
          ((((C39436 + C39437) * C153740 + (C39438 + C39439) * C153600) *
                C23987 +
            (C40448 * C153740 + (C39440 + C39441) * C153600) * C23988 +
            (C40449 * C153740 + (C39442 + C39443) * C153600) * C153774) *
               C153477 -
           (C39087 * C153774 +
            (C40450 * C153600 + (C35199 + C35198) * C153740) * C23988 +
            ((C39437 + C39436) * C153600 +
             (C34889 * C146 + C34906 + C34906 + C153348 * C162 + C34887 * C145 +
              C34907 + C34907 + C153705 * C161) *
                 C153740) *
                C23987) *
               C1938) *
              C153397 * C1134 +
          ((((C34887 * C146 + C34908 + C34908 + C153705 * C162 + C34889 * C147 +
              C34909 + C34909 + C153348 * C163) *
                 C153740 +
             (C40058 + C40059) * C153600) *
                C23987 +
            ((C35660 + C35661) * C153740 + (C39750 + C39751) * C153600) *
                C23988 +
            ((C35662 + C35663) * C153740 + (C39752 + C39753) * C153600) *
                C153774) *
               C1938 -
           (((C34889 * C3330 + C40048 + C40048 + C153348 * C3338 +
              C34887 * C3329 + C40049 + C40049 + C153705 * C3337) *
                 C153600 +
             (C39753 + C39752) * C153740) *
                C153774 +
            ((C34889 * C1366 + C40050 + C40050 + C153348 * C1376 +
              C34887 * C1367 + C40051 + C40051 + C153705 * C1377) *
                 C153600 +
             (C39751 + C39750) * C153740) *
                C23988 +
            ((C34889 * C504 + C40052 + C40052 + C153348 * C528 + C34887 * C503 +
              C40053 + C40053 + C153705 * C527) *
                 C153600 +
             (C40059 + C40058) * C153740) *
                C23987) *
               C153477) *
              C153397 * C1135)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C34887 * C144 + C34892 + C34892 + C153705 * C160 + C34889 * C145 +
              C34893 + C34893 + C153348 * C161) *
                 C153740 +
             (C39432 + C39433) * C153600) *
                C23987 +
            ((C35190 + C35191) * C153740 + C40446 * C153600) * C23988 +
            C39086 * C153774) *
               C1938 -
           (C42221 * C153774 + (C41229 * C153600 + C40447 * C153740) * C23988 +
            ((C39434 + C39435) * C153600 + (C39433 + C39432) * C153740) *
                C23987) *
               C153477) *
              C310 +
          (((C40446 * C153740 + C41230 * C153600) * C23987 +
            (C39081 * C153740 + C41235 * C153600) * C23988 +
            (C42220 * C153740 + (C36754 + C36755) * C153600) * C153774) *
               C153477 -
           (C40937 * C153774 +
            (C37403 * C153600 + (C35193 + C35192) * C153740) * C23988 +
            (C40447 * C153600 + (C35191 + C35190) * C153740) * C23987) *
               C1938) *
              C311 +
          ((C39086 * C23987 + (C35207 * C153740 + C42220 * C153600) * C23988 +
            ((C35197 + C35196) * C153740 + (C37416 + C37417) * C153600) *
                C153774) *
               C1938 -
           (((C34889 * C28571 + C36736 + C36736 + C153348 * C28575 +
              C34887 * C28570 + C36737 + C36737 + C153705 * C28574) *
                 C153600 +
             (C37417 + C37416) * C153740) *
                C153774 +
            ((C36755 + C36754) * C153600 + C37402 * C153740) * C23988 +
            C42221 * C23987) *
               C153477) *
              C312) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C34887 * C144 + C34892 + C34892 + C153705 * C160 + C34889 * C145 +
             C34893 + C34893 + C153348 * C161) *
                C153740 +
            (C39432 + C39433) * C153600) *
               C23987 +
           ((C35190 + C35191) * C153740 + C40446 * C153600) * C23988 +
           C39086 * C153774) *
              C2144 -
          (C42221 * C153774 + (C41229 * C153600 + C40447 * C153740) * C23988 +
           ((C39434 + C39435) * C153600 + (C39433 + C39432) * C153740) *
               C23987) *
              C2145 +
          (((C39435 + C39434) * C153740 + (C43010 + C43011) * C153600) *
               C23987 +
           (C41230 * C153740 + (C41248 + C41249) * C153600) * C23988 +
           (C41235 * C153740 + (C41250 + C41251) * C153600) * C153774) *
              C2146 -
          (((C34889 * C31240 + C43000 + C43000 + C153348 * C31244 +
             C34887 * C31239 + C43001 + C43001 + C153705 * C31243) *
                C153600 +
            (C41251 + C41250) * C153740) *
               C153774 +
           ((C34889 * C9041 + C43002 + C43002 + C153348 * C9047 +
             C34887 * C9042 + C43003 + C43003 + C153705 * C9048) *
                C153600 +
            (C41249 + C41248) * C153740) *
               C23988 +
           ((C34889 * C7561 + C43004 + C43004 + C153348 * C7569 +
             C34887 * C7560 + C43005 + C43005 + C153705 * C7568) *
                C153600 +
            (C43011 + C43010) * C153740) *
               C23987) *
              C2147) *
         C153397 * C153378) /
            (p * q * std::sqrt(p + q));
    d2ee[358] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C11268 * C144 + C11277 + C11277 + C11262 * C160 + C11270 * C145 +
             C11278 + C11278 + C11263 * C161 + C11272 * C146 + C11279 + C11279 +
             C11264 * C162 + C11274 * C147 + C11280 + C11280 + C153738 * C163) *
                C153740 +
            (C15551 + C15552 + C15553 + C15554) * C153600) *
               C153501 * C153797 -
           ((C15555 + C15556 + C15557 + C15558) * C153600 +
            (C15554 + C15553 + C15552 + C15551) * C153740) *
               C153501 * C153798 +
           ((C15558 + C15557 + C15556 + C15555) * C153740 +
            (C17939 + C17940 + C17941 + C17942) * C153600) *
               C153501 * C2454) *
              C153397 * C153716 +
          (((C15559 + C15560 + C15561 + C15562) * C153740 +
            (C15563 + C15564 + C15565 + C15566) * C153600) *
               C153501 * C153798 -
           ((C15562 + C15561 + C15560 + C15559) * C153600 +
            (C11274 * C148 + C11289 + C11289 + C153738 * C164 + C11272 * C147 +
             C11290 + C11290 + C11264 * C163 + C11270 * C146 + C11291 + C11291 +
             C11263 * C162 + C11268 * C145 + C11292 + C11292 + C11262 * C161) *
                C153740) *
               C153501 * C153797 -
           ((C11274 * C2148 + C15515 + C15515 + C153738 * C2158 +
             C11272 * C2149 + C15516 + C15516 + C11264 * C2159 +
             C11270 * C2150 + C15517 + C15517 + C11263 * C2160 +
             C11268 * C2151 + C15518 + C15518 + C11262 * C2161) *
                C153600 +
            (C15566 + C15565 + C15564 + C15563) * C153740) *
               C153501 * C2454) *
              C153397 * C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C34887 * C144 + C34892 + C34892 + C153705 * C160 + C34889 * C145 +
              C34893 + C34893 + C153348 * C161) *
                 C153740 +
             (C39432 + C39433) * C153600) *
                C23987 +
            ((C35190 + C35191) * C153740 + C40446 * C153600) * C23988 +
            C39086 * C153774) *
               C153797 -
           (C42221 * C153774 + (C41229 * C153600 + C40447 * C153740) * C23988 +
            ((C39434 + C39435) * C153600 + (C39433 + C39432) * C153740) *
                C23987) *
               C153798 +
           (((C39435 + C39434) * C153740 + (C43010 + C43011) * C153600) *
                C23987 +
            (C41230 * C153740 + (C41248 + C41249) * C153600) * C23988 +
            (C41235 * C153740 + (C41250 + C41251) * C153600) * C153774) *
               C2454) *
              C153397 * C153716 +
          ((((C39436 + C39437) * C153740 + (C39438 + C39439) * C153600) *
                C23987 +
            (C40448 * C153740 + (C39440 + C39441) * C153600) * C23988 +
            (C40449 * C153740 + (C39442 + C39443) * C153600) * C153774) *
               C153798 -
           (C39087 * C153774 +
            (C40450 * C153600 + (C35199 + C35198) * C153740) * C23988 +
            ((C39437 + C39436) * C153600 +
             (C34889 * C146 + C34906 + C34906 + C153348 * C162 + C34887 * C145 +
              C34907 + C34907 + C153705 * C161) *
                 C153740) *
                C23987) *
               C153797 -
           (((C34889 * C6213 + C39402 + C39402 + C153348 * C6225 +
              C34887 * C6214 + C39403 + C39403 + C153705 * C6226) *
                 C153600 +
             (C39443 + C39442) * C153740) *
                C153774 +
            ((C34889 * C6216 + C39404 + C39404 + C153348 * C6228 +
              C34887 * C6217 + C39405 + C39405 + C153705 * C6229) *
                 C153600 +
             (C39441 + C39440) * C153740) *
                C23988 +
            ((C34889 * C2150 + C39406 + C39406 + C153348 * C2160 +
              C34887 * C2151 + C39407 + C39407 + C153705 * C2161) *
                 C153600 +
             (C39439 + C39438) * C153740) *
                C23987) *
               C2454) *
              C153397 * C153384)) /
            (p * q * std::sqrt(p + q));
    d2ee[359] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C11268 * C144 + C11277 + C11277 + C11262 * C160 + C11270 * C145 +
             C11278 + C11278 + C11263 * C161 + C11272 * C146 + C11279 + C11279 +
             C11264 * C162 + C11274 * C147 + C11280 + C11280 + C153738 * C163) *
                C153740 +
            (C15551 + C15552 + C15553 + C15554) * C153600) *
               C153501 * C1938 -
           ((C15555 + C15556 + C15557 + C15558) * C153600 +
            (C15554 + C15553 + C15552 + C15551) * C153740) *
               C153501 * C153477) *
              C153397 * C1133 +
          (((C15559 + C15560 + C15561 + C15562) * C153740 +
            (C15563 + C15564 + C15565 + C15566) * C153600) *
               C153501 * C153477 -
           ((C15562 + C15561 + C15560 + C15559) * C153600 +
            (C11274 * C148 + C11289 + C11289 + C153738 * C164 + C11272 * C147 +
             C11290 + C11290 + C11264 * C163 + C11270 * C146 + C11291 + C11291 +
             C11263 * C162 + C11268 * C145 + C11292 + C11292 + C11262 * C161) *
                C153740) *
               C153501 * C1938) *
              C153397 * C1134 +
          (((C11268 * C146 + C11293 + C11293 + C11262 * C162 + C11270 * C147 +
             C11294 + C11294 + C11263 * C163 + C11272 * C148 + C11295 + C11295 +
             C11264 * C164 + C11274 * C149 + C11296 + C11296 + C153738 * C165) *
                C153740 +
            (C15975 + C15976 + C15977 + C15978) * C153600) *
               C153501 * C1938 -
           ((C11274 * C507 + C15963 + C15963 + C153738 * C531 + C11272 * C505 +
             C15964 + C15964 + C11264 * C529 + C11270 * C504 + C15965 + C15965 +
             C11263 * C528 + C11268 * C503 + C15966 + C15966 + C11262 * C527) *
                C153600 +
            (C15978 + C15977 + C15976 + C15975) * C153740) *
               C153501 * C153477) *
              C153397 * C1135)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C11268 * C144 + C11277 + C11277 + C11262 * C160 + C11270 * C145 +
             C11278 + C11278 + C11263 * C161 + C11272 * C146 + C11279 + C11279 +
             C11264 * C162 + C11274 * C147 + C11280 + C11280 + C153738 * C163) *
                C153740 +
            (C15551 + C15552 + C15553 + C15554) * C153600) *
               C153501 * C1938 -
           ((C15555 + C15556 + C15557 + C15558) * C153600 +
            (C15554 + C15553 + C15552 + C15551) * C153740) *
               C153501 * C153477) *
              C310 +
          (((C12546 + C12545 + C12544 + C12543) * C153740 +
            (C13113 + C13114 + C13115 + C13116) * C153600) *
               C153501 * C153477 -
           ((C12543 + C12544 + C12545 + C12546) * C153600 +
            (C11586 + C11585 + C11584 + C11583) * C153740) *
               C153501 * C1938) *
              C311 +
          (((C11590 + C11589 + C11588 + C11587) * C153740 +
            (C13783 + C13784 + C13785 + C13786) * C153600) *
               C153501 * C1938 -
           ((C11274 * C3330 + C13101 + C13101 + C153738 * C3338 +
             C11272 * C3329 + C13102 + C13102 + C11264 * C3337 +
             C11270 * C3328 + C13103 + C13103 + C11263 * C3336 +
             C11268 * C3327 + C13104 + C13104 + C11262 * C3335) *
                C153600 +
            (C13786 + C13785 + C13784 + C13783) * C153740) *
               C153501 * C153477) *
              C312) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C34887 * C144 + C34892 + C34892 + C153705 * C160 + C34889 * C145 +
              C34893 + C34893 + C153348 * C161) *
                 C153740 +
             (C39432 + C39433) * C153600) *
                C23987 +
            ((C35190 + C35191) * C153740 + C40446 * C153600) * C23988 +
            C39086 * C153774) *
               C1938 -
           (C42221 * C153774 + (C41229 * C153600 + C40447 * C153740) * C23988 +
            ((C39434 + C39435) * C153600 + (C39433 + C39432) * C153740) *
                C23987) *
               C153477) *
              C153397 * C1133 +
          ((((C39436 + C39437) * C153740 + (C39438 + C39439) * C153600) *
                C23987 +
            (C40448 * C153740 + (C39440 + C39441) * C153600) * C23988 +
            (C40449 * C153740 + (C39442 + C39443) * C153600) * C153774) *
               C153477 -
           (C39087 * C153774 +
            (C40450 * C153600 + (C35199 + C35198) * C153740) * C23988 +
            ((C39437 + C39436) * C153600 +
             (C34889 * C146 + C34906 + C34906 + C153348 * C162 + C34887 * C145 +
              C34907 + C34907 + C153705 * C161) *
                 C153740) *
                C23987) *
               C1938) *
              C153397 * C1134 +
          ((((C34887 * C146 + C34908 + C34908 + C153705 * C162 + C34889 * C147 +
              C34909 + C34909 + C153348 * C163) *
                 C153740 +
             (C40058 + C40059) * C153600) *
                C23987 +
            ((C35660 + C35661) * C153740 + (C39750 + C39751) * C153600) *
                C23988 +
            ((C35662 + C35663) * C153740 + (C39752 + C39753) * C153600) *
                C153774) *
               C1938 -
           (((C34889 * C3330 + C40048 + C40048 + C153348 * C3338 +
              C34887 * C3329 + C40049 + C40049 + C153705 * C3337) *
                 C153600 +
             (C39753 + C39752) * C153740) *
                C153774 +
            ((C34889 * C1366 + C40050 + C40050 + C153348 * C1376 +
              C34887 * C1367 + C40051 + C40051 + C153705 * C1377) *
                 C153600 +
             (C39751 + C39750) * C153740) *
                C23988 +
            ((C34889 * C504 + C40052 + C40052 + C153348 * C528 + C34887 * C503 +
              C40053 + C40053 + C153705 * C527) *
                 C153600 +
             (C40059 + C40058) * C153740) *
                C23987) *
               C153477) *
              C153397 * C1135)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C34887 * C144 + C34892 + C34892 + C153705 * C160 + C34889 * C145 +
              C34893 + C34893 + C153348 * C161) *
                 C153740 +
             (C39432 + C39433) * C153600) *
                C23987 +
            ((C35190 + C35191) * C153740 + C40446 * C153600) * C23988 +
            C39086 * C153774) *
               C1938 -
           (C42221 * C153774 + (C41229 * C153600 + C40447 * C153740) * C23988 +
            ((C39434 + C39435) * C153600 + (C39433 + C39432) * C153740) *
                C23987) *
               C153477) *
              C310 +
          (((C40446 * C153740 + C41230 * C153600) * C23987 +
            (C39081 * C153740 + C41235 * C153600) * C23988 +
            (C42220 * C153740 + (C36754 + C36755) * C153600) * C153774) *
               C153477 -
           (C40937 * C153774 +
            (C37403 * C153600 + (C35193 + C35192) * C153740) * C23988 +
            (C40447 * C153600 + (C35191 + C35190) * C153740) * C23987) *
               C1938) *
              C311 +
          ((C39086 * C23987 + (C35207 * C153740 + C42220 * C153600) * C23988 +
            ((C35197 + C35196) * C153740 + (C37416 + C37417) * C153600) *
                C153774) *
               C1938 -
           (((C34889 * C28571 + C36736 + C36736 + C153348 * C28575 +
              C34887 * C28570 + C36737 + C36737 + C153705 * C28574) *
                 C153600 +
             (C37417 + C37416) * C153740) *
                C153774 +
            ((C36755 + C36754) * C153600 + C37402 * C153740) * C23988 +
            C42221 * C23987) *
               C153477) *
              C312) *
         C153378) /
            (p * q * std::sqrt(p + q));
    d2ee[360] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C144 + C169 + C169 + C121 * C160 + C136 * C145 + C170 +
            C170 + C122 * C161 + C138 * C146 + C171 + C171 + C123 * C162 +
            C140 * C147 + C172 + C172 + C124 * C163 + C142 * C148 + C173 +
            C173 + C125 * C164) *
               C153513 * C153501 * C153413 * C153724 -
           (C142 * C315 + C352 + C352 + C125 * C339 + C140 * C316 + C353 +
            C353 + C124 * C340 + C138 * C317 + C354 + C354 + C123 * C341 +
            C136 * C318 + C355 + C355 + C122 * C342 + C134 * C319 + C356 +
            C356 + C121 * C343) *
               C153513 * C153501 * C153413 * C153449) *
              C153793 +
          ((C134 * C318 + C362 + C362 + C121 * C342 + C136 * C317 + C363 +
            C363 + C122 * C341 + C138 * C316 + C364 + C364 + C123 * C340 +
            C140 * C315 + C365 + C365 + C124 * C339 + C142 * C325 + C366 +
            C366 + C125 * C349) *
               C153513 * C153501 * C153413 * C153449 -
           (C142 * C149 + C174 + C174 + C125 * C165 + C140 * C148 + C175 +
            C175 + C124 * C164 + C138 * C147 + C176 + C176 + C123 * C163 +
            C136 * C146 + C177 + C177 + C122 * C162 + C134 * C145 + C178 +
            C178 + C121 * C161) *
               C153513 * C153501 * C153413 * C153724) *
              C153794 +
          ((C134 * C146 + C179 + C179 + C121 * C162 + C136 * C147 + C180 +
            C180 + C122 * C163 + C138 * C148 + C181 + C181 + C123 * C164 +
            C140 * C149 + C182 + C182 + C124 * C165 + C142 * C150 + C183 +
            C183 + C125 * C166) *
               C153513 * C153501 * C153413 * C153724 -
           (C142 * C679 + C683 + C683 + C125 * C681 + C140 * C325 + C684 +
            C684 + C124 * C349 + C138 * C315 + C685 + C685 + C123 * C339 +
            C136 * C316 + C686 + C686 + C122 * C340 + C134 * C317 + C687 +
            C687 + C121 * C341) *
               C153513 * C153501 * C153413 * C153449) *
              C678)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 +
             C2737 + C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
             C153761 * C162) *
                C153513 * C153812 +
            (C3086 + C3087 + C3088) * C153513 * C153800 + C3108 * C153774) *
               C153413 * C153724 -
           ((C3092 + C3093 + C3094) * C153513 * C153774 +
            (C3091 + C3090 + C3089) * C153513 * C153800 +
            (C3088 + C3087 + C3086) * C153513 * C153812) *
               C153413 * C153449) *
              C153793 +
          (((C3095 + C3096 + C3097) * C153513 * C153812 +
            (C3098 + C3099 + C3100) * C153513 * C153800 +
            (C3101 + C3102 + C3103) * C153513 * C153774) *
               C153413 * C153449 -
           (C3109 * C153774 + (C3097 + C3096 + C3095) * C153513 * C153800 +
            (C2733 * C147 + C2751 + C2751 + C153761 * C163 + C2731 * C146 +
             C2752 + C2752 + C2724 * C162 + C2729 * C145 + C2753 + C2753 +
             C2723 * C161) *
                C153513 * C153812) *
               C153413 * C153724) *
              C153794 +
          (((C2729 * C146 + C2754 + C2754 + C2723 * C162 + C2731 * C147 +
             C2755 + C2755 + C2724 * C163 + C2733 * C148 + C2756 + C2756 +
             C153761 * C164) *
                C153513 * C153812 +
            (C3621 + C3622 + C3623) * C153513 * C153800 +
            (C3624 + C3625 + C3626) * C153513 * C153774) *
               C153413 * C153724 -
           ((C2733 * C1223 + C3606 + C3606 + C153761 * C1233 + C2731 * C1224 +
             C3607 + C3607 + C2724 * C1234 + C2729 * C1225 + C3608 + C3608 +
             C2723 * C1235) *
                C153513 * C153774 +
            (C3626 + C3625 + C3624) * C153513 * C153800 +
            (C3623 + C3622 + C3621) * C153513 * C153812) *
               C153413 * C153449) *
              C678)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
             C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 +
             C23999 + C153761 * C162) *
                C153513 * C23987 +
            (C24335 + C24336 + C24337) * C153513 * C23988 + C24357 * C153774) *
               C153413 * C153724 -
           ((C24341 + C24342 + C24343) * C153513 * C153774 +
            (C24340 + C24339 + C24338) * C153513 * C23988 +
            (C24337 + C24336 + C24335) * C153513 * C23987) *
               C153413 * C153449) *
              C153793 +
          (((C24344 + C24345 + C24346) * C153513 * C23987 +
            (C24347 + C24348 + C24349) * C153513 * C23988 +
            (C24350 + C24351 + C24352) * C153513 * C153774) *
               C153413 * C153449 -
           (C24358 * C153774 + (C24346 + C24345 + C24344) * C153513 * C23988 +
            (C23994 * C147 + C24012 + C24012 + C153761 * C163 + C23992 * C146 +
             C24013 + C24013 + C153790 * C162 + C23990 * C145 + C24014 +
             C24014 + C153809 * C161) *
                C153513 * C23987) *
               C153413 * C153724) *
              C153794 +
          (((C23990 * C146 + C24015 + C24015 + C153809 * C162 + C23992 * C147 +
             C24016 + C24016 + C153790 * C163 + C23994 * C148 + C24017 +
             C24017 + C153761 * C164) *
                C153513 * C23987 +
            (C24858 + C24859 + C24860) * C153513 * C23988 +
            (C24861 + C24862 + C24863) * C153513 * C153774) *
               C153413 * C153724 -
           ((C23994 * C1223 + C24843 + C24843 + C153761 * C1233 +
             C23992 * C1224 + C24844 + C24844 + C153790 * C1234 +
             C23990 * C1225 + C24845 + C24845 + C153809 * C1235) *
                C153513 * C153774 +
            (C24863 + C24862 + C24861) * C153513 * C23988 +
            (C24860 + C24859 + C24858) * C153513 * C23987) *
               C153413 * C153449) *
              C678)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153513 *
                C28229 +
            C28439 * C28230 + C28440 * C28231 + C28441 * C28232 +
            C28442 * C28233) *
               C153413 * C153724 -
           (C28443 * C28233 + C28442 * C28232 + C28441 * C28231 +
            C28440 * C28230 + C28439 * C28229) *
               C153413 * C153449) *
              C153793 +
          ((C28444 * C28229 + C28445 * C28230 + C28446 * C28231 +
            C28447 * C28232 + C28448 * C28233) *
               C153413 * C153449 -
           (C28447 * C28233 + C28446 * C28232 + C28445 * C28231 +
            C28444 * C28230 +
            (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C153513 *
                C28229) *
               C153413 * C153724) *
              C153794 +
          (((C28234 * C146 + C28247 + C28247 + C153338 * C162) * C153513 *
                C28229 +
            C28740 * C28230 + C28741 * C28231 + C28742 * C28232 +
            C28743 * C28233) *
               C153413 * C153724 -
           ((C28234 * C4585 + C28727 + C28727 + C153338 * C4591) * C153513 *
                C28233 +
            C28743 * C28232 + C28742 * C28231 + C28741 * C28230 +
            C28740 * C28229) *
               C153413 * C153449) *
              C678)) /
            (p * q * std::sqrt(p + q));
    d2ee[361] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 + C169 + C169 + C121 * C160 + C136 * C145 + C170 +
             C170 + C122 * C161 + C138 * C146 + C171 + C171 + C123 * C162 +
             C140 * C147 + C172 + C172 + C124 * C163 + C142 * C148 + C173 +
             C173 + C125 * C164) *
                C153513 * C153501 * C153725 -
            (C142 * C496 + C533 + C533 + C125 * C520 + C140 * C497 + C534 +
             C534 + C124 * C521 + C138 * C498 + C535 + C535 + C123 * C522 +
             C136 * C499 + C536 + C536 + C122 * C523 + C134 * C500 + C537 +
             C537 + C121 * C524) *
                C153513 * C153501 * C153477) *
               C153724 +
           ((C134 * C981 + C1000 + C1000 + C121 * C993 + C136 * C982 + C1001 +
             C1001 + C122 * C994 + C138 * C983 + C1002 + C1002 + C123 * C995 +
             C140 * C984 + C1003 + C1003 + C124 * C996 + C142 * C985 + C1004 +
             C1004 + C125 * C997) *
                C153513 * C153501 * C153477 -
            (C142 * C315 + C352 + C352 + C125 * C339 + C140 * C316 + C353 +
             C353 + C124 * C340 + C138 * C317 + C354 + C354 + C123 * C341 +
             C136 * C318 + C355 + C355 + C122 * C342 + C134 * C319 + C356 +
             C356 + C121 * C343) *
                C153513 * C153501 * C153725) *
               C153449) *
              C313 +
          (((C134 * C499 + C543 + C543 + C121 * C523 + C136 * C498 + C544 +
             C544 + C122 * C522 + C138 * C497 + C545 + C545 + C123 * C521 +
             C140 * C496 + C546 + C546 + C124 * C520 + C142 * C506 + C547 +
             C547 + C125 * C530) *
                C153513 * C153501 * C153477 -
            (C142 * C149 + C174 + C174 + C125 * C165 + C140 * C148 + C175 +
             C175 + C124 * C164 + C138 * C147 + C176 + C176 + C123 * C163 +
             C136 * C146 + C177 + C177 + C122 * C162 + C134 * C145 + C178 +
             C178 + C121 * C161) *
                C153513 * C153501 * C153725) *
               C153724 +
           ((C134 * C318 + C362 + C362 + C121 * C342 + C136 * C317 + C363 +
             C363 + C122 * C341 + C138 * C316 + C364 + C364 + C123 * C340 +
             C140 * C315 + C365 + C365 + C124 * C339 + C142 * C325 + C366 +
             C366 + C125 * C349) *
                C153513 * C153501 * C153725 -
            (C142 * C986 + C1005 + C1005 + C125 * C998 + C140 * C985 + C1006 +
             C1006 + C124 * C997 + C138 * C984 + C1007 + C1007 + C123 * C996 +
             C136 * C983 + C1008 + C1008 + C122 * C995 + C134 * C982 + C1009 +
             C1009 + C121 * C994) *
                C153513 * C153501 * C153477) *
               C153449) *
              C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 +
              C2737 + C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
              C153761 * C162) *
                 C153513 * C153812 +
             (C3086 + C3087 + C3088) * C153513 * C153800 + C3108 * C153774) *
                C153725 -
            ((C4210 + C4211 + C4212) * C153513 * C153774 +
             (C4213 + C4214 + C4215) * C153513 * C153800 +
             (C2733 * C498 + C3346 + C3346 + C153761 * C522 + C2731 * C499 +
              C3347 + C3347 + C2724 * C523 + C2729 * C500 + C3348 + C3348 +
              C2723 * C524) *
                 C153513 * C153812) *
                C153477) *
               C153724 +
           (((C4215 + C4214 + C4213) * C153513 * C153812 +
             (C4212 + C4211 + C4210) * C153513 * C153800 +
             (C2729 * C4143 + C4168 + C4168 + C2723 * C4151 + C2731 * C4144 +
              C4169 + C4169 + C2724 * C4152 + C2733 * C4145 + C4170 + C4170 +
              C153761 * C4153) *
                 C153513 * C153774) *
                C153477 -
            ((C3092 + C3093 + C3094) * C153513 * C153774 +
             (C3091 + C3090 + C3089) * C153513 * C153800 +
             (C3088 + C3087 + C3086) * C153513 * C153812) *
                C153725) *
               C153449) *
              C313 +
          ((((C2729 * C499 + C3358 + C3358 + C2723 * C523 + C2731 * C498 +
              C3359 + C3359 + C2724 * C522 + C2733 * C497 + C3360 + C3360 +
              C153761 * C521) *
                 C153513 * C153812 +
             (C4216 + C4217 + C4218) * C153513 * C153800 +
             (C4219 + C4220 + C4221) * C153513 * C153774) *
                C153477 -
            (C3109 * C153774 + (C3097 + C3096 + C3095) * C153513 * C153800 +
             (C2733 * C147 + C2751 + C2751 + C153761 * C163 + C2731 * C146 +
              C2752 + C2752 + C2724 * C162 + C2729 * C145 + C2753 + C2753 +
              C2723 * C161) *
                 C153513 * C153812) *
                C153725) *
               C153724 +
           (((C3095 + C3096 + C3097) * C153513 * C153812 +
             (C3098 + C3099 + C3100) * C153513 * C153800 +
             (C3101 + C3102 + C3103) * C153513 * C153774) *
                C153725 -
            ((C2733 * C4146 + C4183 + C4183 + C153761 * C4154 + C2731 * C4145 +
              C4184 + C4184 + C2724 * C4153 + C2729 * C4144 + C4185 + C4185 +
              C2723 * C4152) *
                 C153513 * C153774 +
             (C4221 + C4220 + C4219) * C153513 * C153800 +
             (C4218 + C4217 + C4216) * C153513 * C153812) *
                C153477) *
               C153449) *
              C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
              C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 +
              C23999 + C153761 * C162) *
                 C153513 * C23987 +
             (C24335 + C24336 + C24337) * C153513 * C23988 + C24357 * C153774) *
                C153725 -
            ((C25435 + C25436 + C25437) * C153513 * C153774 +
             (C25438 + C25439 + C25440) * C153513 * C23988 +
             (C23994 * C498 + C24583 + C24583 + C153761 * C522 + C23992 * C499 +
              C24584 + C24584 + C153790 * C523 + C23990 * C500 + C24585 +
              C24585 + C153809 * C524) *
                 C153513 * C23987) *
                C153477) *
               C153724 +
           (((C25440 + C25439 + C25438) * C153513 * C23987 +
             (C25437 + C25436 + C25435) * C153513 * C23988 +
             (C23990 * C4143 + C25393 + C25393 + C153809 * C4151 +
              C23992 * C4144 + C25394 + C25394 + C153790 * C4152 +
              C23994 * C4145 + C25395 + C25395 + C153761 * C4153) *
                 C153513 * C153774) *
                C153477 -
            ((C24341 + C24342 + C24343) * C153513 * C153774 +
             (C24340 + C24339 + C24338) * C153513 * C23988 +
             (C24337 + C24336 + C24335) * C153513 * C23987) *
                C153725) *
               C153449) *
              C313 +
          ((((C23990 * C499 + C24595 + C24595 + C153809 * C523 + C23992 * C498 +
              C24596 + C24596 + C153790 * C522 + C23994 * C497 + C24597 +
              C24597 + C153761 * C521) *
                 C153513 * C23987 +
             (C25441 + C25442 + C25443) * C153513 * C23988 +
             (C25444 + C25445 + C25446) * C153513 * C153774) *
                C153477 -
            (C24358 * C153774 + (C24346 + C24345 + C24344) * C153513 * C23988 +
             (C23994 * C147 + C24012 + C24012 + C153761 * C163 + C23992 * C146 +
              C24013 + C24013 + C153790 * C162 + C23990 * C145 + C24014 +
              C24014 + C153809 * C161) *
                 C153513 * C23987) *
                C153725) *
               C153724 +
           (((C24344 + C24345 + C24346) * C153513 * C23987 +
             (C24347 + C24348 + C24349) * C153513 * C23988 +
             (C24350 + C24351 + C24352) * C153513 * C153774) *
                C153725 -
            ((C23994 * C4146 + C25408 + C25408 + C153761 * C4154 +
              C23992 * C4145 + C25409 + C25409 + C153790 * C4153 +
              C23990 * C4144 + C25410 + C25410 + C153809 * C4152) *
                 C153513 * C153774 +
             (C25446 + C25445 + C25444) * C153513 * C23988 +
             (C25443 + C25442 + C25441) * C153513 * C23987) *
                C153477) *
               C153449) *
              C153384)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153513 *
                 C28229 +
             C28439 * C28230 + C28440 * C28231 + C28441 * C28232 +
             C28442 * C28233) *
                C153725 -
            (C29081 * C28233 + C29082 * C28232 + C29083 * C28231 +
             C29084 * C28230 +
             (C28234 * C500 + C28581 + C28581 + C153338 * C524) * C153513 *
                 C28229) *
                C153477) *
               C153724 +
           ((C29084 * C28229 + C29083 * C28230 + C29082 * C28231 +
             C29081 * C28232 +
             (C28234 * C29032 + C29047 + C29047 + C153338 * C29036) * C153513 *
                 C28233) *
                C153477 -
            (C28443 * C28233 + C28442 * C28232 + C28441 * C28231 +
             C28440 * C28230 + C28439 * C28229) *
                C153725) *
               C153449) *
              C313 +
          ((((C28234 * C499 + C28587 + C28587 + C153338 * C523) * C153513 *
                 C28229 +
             C29085 * C28230 + C29086 * C28231 + C29087 * C28232 +
             C29088 * C28233) *
                C153477 -
            (C28447 * C28233 + C28446 * C28232 + C28445 * C28231 +
             C28444 * C28230 +
             (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C153513 *
                 C28229) *
                C153725) *
               C153724 +
           ((C28444 * C28229 + C28445 * C28230 + C28446 * C28231 +
             C28447 * C28232 + C28448 * C28233) *
                C153725 -
            ((C28234 * C29033 + C29056 + C29056 + C153338 * C29037) * C153513 *
                 C28233 +
             C29088 * C28232 + C29087 * C28231 + C29086 * C28230 +
             C29085 * C28229) *
                C153477) *
               C153449) *
              C153384)) /
            (p * q * std::sqrt(p + q));
    d2ee[362] +=
        (-std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C144 + C169 + C169 + C121 * C160 + C136 * C145 + C170 +
            C170 + C122 * C161 + C138 * C146 + C171 + C171 + C123 * C162 +
            C140 * C147 + C172 + C172 + C124 * C163 + C142 * C148 + C173 +
            C173 + C125 * C164) *
               C153513 * C153501 * C153413 * C310 -
           (C142 * C315 + C352 + C352 + C125 * C339 + C140 * C316 + C353 +
            C353 + C124 * C340 + C138 * C317 + C354 + C354 + C123 * C341 +
            C136 * C318 + C355 + C355 + C122 * C342 + C134 * C319 + C356 +
            C356 + C121 * C343) *
               C153513 * C153501 * C153413 * C311 +
           (C134 * C320 + C357 + C357 + C121 * C344 + C136 * C321 + C358 +
            C358 + C122 * C345 + C138 * C322 + C359 + C359 + C123 * C346 +
            C140 * C323 + C360 + C360 + C124 * C347 + C142 * C324 + C361 +
            C361 + C125 * C348) *
               C153513 * C153501 * C153413 * C312) *
              C313 +
          ((C134 * C318 + C362 + C362 + C121 * C342 + C136 * C317 + C363 +
            C363 + C122 * C341 + C138 * C316 + C364 + C364 + C123 * C340 +
            C140 * C315 + C365 + C365 + C124 * C339 + C142 * C325 + C366 +
            C366 + C125 * C349) *
               C153513 * C153501 * C153413 * C311 -
           (C142 * C149 + C174 + C174 + C125 * C165 + C140 * C148 + C175 +
            C175 + C124 * C164 + C138 * C147 + C176 + C176 + C123 * C163 +
            C136 * C146 + C177 + C177 + C122 * C162 + C134 * C145 + C178 +
            C178 + C121 * C161) *
               C153513 * C153501 * C153413 * C310 -
           (C142 * C326 + C367 + C367 + C125 * C350 + C140 * C324 + C368 +
            C368 + C124 * C348 + C138 * C323 + C369 + C369 + C123 * C347 +
            C136 * C322 + C370 + C370 + C122 * C346 + C134 * C321 + C371 +
            C371 + C121 * C345) *
               C153513 * C153501 * C153413 * C312) *
              C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((C134 * C144 + C169 + C169 + C121 * C160 + C136 * C145 + C170 + C170 +
           C122 * C161 + C138 * C146 + C171 + C171 + C123 * C162 + C140 * C147 +
           C172 + C172 + C124 * C163 + C142 * C148 + C173 + C173 +
           C125 * C164) *
              C153513 * C153501 * C153413 * C153397 * C130 -
          (C142 * C149 + C174 + C174 + C125 * C165 + C140 * C148 + C175 + C175 +
           C124 * C164 + C138 * C147 + C176 + C176 + C123 * C163 + C136 * C146 +
           C177 + C177 + C122 * C162 + C134 * C145 + C178 + C178 +
           C121 * C161) *
              C153513 * C153501 * C153413 * C153397 * C131 +
          (C134 * C146 + C179 + C179 + C121 * C162 + C136 * C147 + C180 + C180 +
           C122 * C163 + C138 * C148 + C181 + C181 + C123 * C164 + C140 * C149 +
           C182 + C182 + C124 * C165 + C142 * C150 + C183 + C183 +
           C125 * C166) *
              C153513 * C153501 * C153413 * C153397 * C132 -
          (C142 * C151 + C184 + C184 + C125 * C167 + C140 * C150 + C185 + C185 +
           C124 * C166 + C138 * C149 + C186 + C186 + C123 * C165 + C136 * C148 +
           C187 + C187 + C122 * C164 + C134 * C147 + C188 + C188 +
           C121 * C163) *
              C153513 * C153501 * C153413 * C153397 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C144 + C169 + C169 + C121 * C160 + C136 * C145 + C170 +
            C170 + C122 * C161 + C138 * C146 + C171 + C171 + C123 * C162 +
            C140 * C147 + C172 + C172 + C124 * C163 + C142 * C148 + C173 +
            C173 + C125 * C164) *
               C153513 * C153501 * C493 -
           (C142 * C496 + C533 + C533 + C125 * C520 + C140 * C497 + C534 +
            C534 + C124 * C521 + C138 * C498 + C535 + C535 + C123 * C522 +
            C136 * C499 + C536 + C536 + C122 * C523 + C134 * C500 + C537 +
            C537 + C121 * C524) *
               C153513 * C153501 * C494 +
           (C134 * C501 + C538 + C538 + C121 * C525 + C136 * C502 + C539 +
            C539 + C122 * C526 + C138 * C503 + C540 + C540 + C123 * C527 +
            C140 * C504 + C541 + C541 + C124 * C528 + C142 * C505 + C542 +
            C542 + C125 * C529) *
               C153513 * C153501 * C495) *
              C153397 * C313 +
          ((C134 * C499 + C543 + C543 + C121 * C523 + C136 * C498 + C544 +
            C544 + C122 * C522 + C138 * C497 + C545 + C545 + C123 * C521 +
            C140 * C496 + C546 + C546 + C124 * C520 + C142 * C506 + C547 +
            C547 + C125 * C530) *
               C153513 * C153501 * C494 -
           (C142 * C149 + C174 + C174 + C125 * C165 + C140 * C148 + C175 +
            C175 + C124 * C164 + C138 * C147 + C176 + C176 + C123 * C163 +
            C136 * C146 + C177 + C177 + C122 * C162 + C134 * C145 + C178 +
            C178 + C121 * C161) *
               C153513 * C153501 * C493 -
           (C142 * C507 + C548 + C548 + C125 * C531 + C140 * C505 + C549 +
            C549 + C124 * C529 + C138 * C504 + C550 + C550 + C123 * C528 +
            C136 * C503 + C551 + C551 + C122 * C527 + C134 * C502 + C552 +
            C552 + C121 * C526) *
               C153513 * C153501 * C495) *
              C153397 * C153384)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 + C2737 +
            C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
            C153761 * C162) *
               C153513 * C153812 +
           (C2729 * C319 + C2739 + C2739 + C2723 * C343 + C2731 * C318 + C2740 +
            C2740 + C2724 * C342 + C2733 * C317 + C2741 + C2741 +
            C153761 * C341) *
               C153513 * C153800 +
           (C2729 * C320 + C2742 + C2742 + C2723 * C344 + C2731 * C321 + C2743 +
            C2743 + C2724 * C345 + C2733 * C322 + C2744 + C2744 +
            C153761 * C346) *
               C153513 * C153774) *
              C153413 * C153397 * C130 -
          ((C2733 * C323 + C2745 + C2745 + C153761 * C347 + C2731 * C322 +
            C2746 + C2746 + C2724 * C346 + C2729 * C321 + C2747 + C2747 +
            C2723 * C345) *
               C153513 * C153774 +
           (C2733 * C316 + C2748 + C2748 + C153761 * C340 + C2731 * C317 +
            C2749 + C2749 + C2724 * C341 + C2729 * C318 + C2750 + C2750 +
            C2723 * C342) *
               C153513 * C153800 +
           (C2733 * C147 + C2751 + C2751 + C153761 * C163 + C2731 * C146 +
            C2752 + C2752 + C2724 * C162 + C2729 * C145 + C2753 + C2753 +
            C2723 * C161) *
               C153513 * C153812) *
              C153413 * C153397 * C131 +
          ((C2729 * C146 + C2754 + C2754 + C2723 * C162 + C2731 * C147 + C2755 +
            C2755 + C2724 * C163 + C2733 * C148 + C2756 + C2756 +
            C153761 * C164) *
               C153513 * C153812 +
           (C2729 * C317 + C2757 + C2757 + C2723 * C341 + C2731 * C316 + C2758 +
            C2758 + C2724 * C340 + C2733 * C315 + C2759 + C2759 +
            C153761 * C339) *
               C153513 * C153800 +
           (C2729 * C322 + C2760 + C2760 + C2723 * C346 + C2731 * C323 + C2761 +
            C2761 + C2724 * C347 + C2733 * C324 + C2762 + C2762 +
            C153761 * C348) *
               C153513 * C153774) *
              C153413 * C153397 * C132 -
          ((C2733 * C326 + C2763 + C2763 + C153761 * C350 + C2731 * C324 +
            C2764 + C2764 + C2724 * C348 + C2729 * C323 + C2765 + C2765 +
            C2723 * C347) *
               C153513 * C153774 +
           (C2733 * C325 + C2766 + C2766 + C153761 * C349 + C2731 * C315 +
            C2767 + C2767 + C2724 * C339 + C2729 * C316 + C2768 + C2768 +
            C2723 * C340) *
               C153513 * C153800 +
           (C2733 * C149 + C2769 + C2769 + C153761 * C165 + C2731 * C148 +
            C2770 + C2770 + C2724 * C164 + C2729 * C147 + C2771 + C2771 +
            C2723 * C163) *
               C153513 * C153812) *
              C153413 * C153397 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 +
             C2737 + C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
             C153761 * C162) *
                C153513 * C153812 +
            (C3086 + C3087 + C3088) * C153513 * C153800 + C3108 * C153774) *
               C153413 * C310 -
           ((C3092 + C3093 + C3094) * C153513 * C153774 +
            (C3091 + C3090 + C3089) * C153513 * C153800 +
            (C3088 + C3087 + C3086) * C153513 * C153812) *
               C153413 * C311 +
           (C3108 * C153812 + (C3094 + C3093 + C3092) * C153513 * C153800 +
            (C2729 * C2989 + C3023 + C3023 + C2723 * C2997 + C2731 * C2990 +
             C3024 + C3024 + C2724 * C2998 + C2733 * C2991 + C3025 + C3025 +
             C153761 * C2999) *
                C153513 * C153774) *
               C153413 * C312) *
              C313 +
          (((C3095 + C3096 + C3097) * C153513 * C153812 +
            (C3098 + C3099 + C3100) * C153513 * C153800 +
            (C3101 + C3102 + C3103) * C153513 * C153774) *
               C153413 * C311 -
           (C3109 * C153774 + (C3097 + C3096 + C3095) * C153513 * C153800 +
            (C2733 * C147 + C2751 + C2751 + C153761 * C163 + C2731 * C146 +
             C2752 + C2752 + C2724 * C162 + C2729 * C145 + C2753 + C2753 +
             C2723 * C161) *
                C153513 * C153812) *
               C153413 * C310 -
           ((C2733 * C2992 + C3047 + C3047 + C153761 * C3000 + C2731 * C2991 +
             C3048 + C3048 + C2724 * C2999 + C2729 * C2990 + C3049 + C3049 +
             C2723 * C2998) *
                C153513 * C153774 +
            (C3103 + C3102 + C3101) * C153513 * C153800 + C3109 * C153812) *
               C153413 * C312) *
              C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 +
             C2737 + C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
             C153761 * C162) *
                C153513 * C153812 +
            (C3086 + C3087 + C3088) * C153513 * C153800 + C3108 * C153774) *
               C493 -
           ((C2733 * C1798 + C3340 + C3340 + C153761 * C1808 + C2731 * C1799 +
             C3341 + C3341 + C2724 * C1809 + C2729 * C1800 + C3342 + C3342 +
             C2723 * C1810) *
                C153513 * C153774 +
            (C2733 * C983 + C3343 + C3343 + C153761 * C995 + C2731 * C982 +
             C3344 + C3344 + C2724 * C994 + C2729 * C981 + C3345 + C3345 +
             C2723 * C993) *
                C153513 * C153800 +
            (C2733 * C498 + C3346 + C3346 + C153761 * C522 + C2731 * C499 +
             C3347 + C3347 + C2724 * C523 + C2729 * C500 + C3348 + C3348 +
             C2723 * C524) *
                C153513 * C153812) *
               C494 +
           ((C2729 * C501 + C3349 + C3349 + C2723 * C525 + C2731 * C502 +
             C3350 + C3350 + C2724 * C526 + C2733 * C503 + C3351 + C3351 +
             C153761 * C527) *
                C153513 * C153812 +
            (C2729 * C1369 + C3352 + C3352 + C2723 * C1379 + C2731 * C1368 +
             C3353 + C3353 + C2724 * C1378 + C2733 * C1367 + C3354 + C3354 +
             C153761 * C1377) *
                C153513 * C153800 +
            (C2729 * C3327 + C3355 + C3355 + C2723 * C3335 + C2731 * C3328 +
             C3356 + C3356 + C2724 * C3336 + C2733 * C3329 + C3357 + C3357 +
             C153761 * C3337) *
                C153513 * C153774) *
               C495) *
              C153397 * C313 +
          (((C2729 * C499 + C3358 + C3358 + C2723 * C523 + C2731 * C498 +
             C3359 + C3359 + C2724 * C522 + C2733 * C497 + C3360 + C3360 +
             C153761 * C521) *
                C153513 * C153812 +
            (C2729 * C982 + C3361 + C3361 + C2723 * C994 + C2731 * C983 +
             C3362 + C3362 + C2724 * C995 + C2733 * C984 + C3363 + C3363 +
             C153761 * C996) *
                C153513 * C153800 +
            (C2729 * C1799 + C3364 + C3364 + C2723 * C1809 + C2731 * C1798 +
             C3365 + C3365 + C2724 * C1808 + C2733 * C1797 + C3366 + C3366 +
             C153761 * C1807) *
                C153513 * C153774) *
               C494 -
           (C3109 * C153774 + (C3097 + C3096 + C3095) * C153513 * C153800 +
            (C2733 * C147 + C2751 + C2751 + C153761 * C163 + C2731 * C146 +
             C2752 + C2752 + C2724 * C162 + C2729 * C145 + C2753 + C2753 +
             C2723 * C161) *
                C153513 * C153812) *
               C493 -
           ((C2733 * C3330 + C3367 + C3367 + C153761 * C3338 + C2731 * C3329 +
             C3368 + C3368 + C2724 * C3337 + C2729 * C3328 + C3369 + C3369 +
             C2723 * C3336) *
                C153513 * C153774 +
            (C2733 * C1366 + C3370 + C3370 + C153761 * C1376 + C2731 * C1367 +
             C3371 + C3371 + C2724 * C1377 + C2729 * C1368 + C3372 + C3372 +
             C2723 * C1378) *
                C153513 * C153800 +
            (C2733 * C504 + C3373 + C3373 + C153761 * C528 + C2731 * C503 +
             C3374 + C3374 + C2724 * C527 + C2729 * C502 + C3375 + C3375 +
             C2723 * C526) *
                C153513 * C153812) *
               C495) *
              C153397 * C153384)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
            C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 + C23999 +
            C153761 * C162) *
               C153513 * C23987 +
           (C23990 * C319 + C24000 + C24000 + C153809 * C343 + C23992 * C318 +
            C24001 + C24001 + C153790 * C342 + C23994 * C317 + C24002 + C24002 +
            C153761 * C341) *
               C153513 * C23988 +
           (C23990 * C320 + C24003 + C24003 + C153809 * C344 + C23992 * C321 +
            C24004 + C24004 + C153790 * C345 + C23994 * C322 + C24005 + C24005 +
            C153761 * C346) *
               C153513 * C153774) *
              C153413 * C153397 * C130 -
          ((C23994 * C323 + C24006 + C24006 + C153761 * C347 + C23992 * C322 +
            C24007 + C24007 + C153790 * C346 + C23990 * C321 + C24008 + C24008 +
            C153809 * C345) *
               C153513 * C153774 +
           (C23994 * C316 + C24009 + C24009 + C153761 * C340 + C23992 * C317 +
            C24010 + C24010 + C153790 * C341 + C23990 * C318 + C24011 + C24011 +
            C153809 * C342) *
               C153513 * C23988 +
           (C23994 * C147 + C24012 + C24012 + C153761 * C163 + C23992 * C146 +
            C24013 + C24013 + C153790 * C162 + C23990 * C145 + C24014 + C24014 +
            C153809 * C161) *
               C153513 * C23987) *
              C153413 * C153397 * C131 +
          ((C23990 * C146 + C24015 + C24015 + C153809 * C162 + C23992 * C147 +
            C24016 + C24016 + C153790 * C163 + C23994 * C148 + C24017 + C24017 +
            C153761 * C164) *
               C153513 * C23987 +
           (C23990 * C317 + C24018 + C24018 + C153809 * C341 + C23992 * C316 +
            C24019 + C24019 + C153790 * C340 + C23994 * C315 + C24020 + C24020 +
            C153761 * C339) *
               C153513 * C23988 +
           (C23990 * C322 + C24021 + C24021 + C153809 * C346 + C23992 * C323 +
            C24022 + C24022 + C153790 * C347 + C23994 * C324 + C24023 + C24023 +
            C153761 * C348) *
               C153513 * C153774) *
              C153413 * C153397 * C132 -
          ((C23994 * C326 + C24024 + C24024 + C153761 * C350 + C23992 * C324 +
            C24025 + C24025 + C153790 * C348 + C23990 * C323 + C24026 + C24026 +
            C153809 * C347) *
               C153513 * C153774 +
           (C23994 * C325 + C24027 + C24027 + C153761 * C349 + C23992 * C315 +
            C24028 + C24028 + C153790 * C339 + C23990 * C316 + C24029 + C24029 +
            C153809 * C340) *
               C153513 * C23988 +
           (C23994 * C149 + C24030 + C24030 + C153761 * C165 + C23992 * C148 +
            C24031 + C24031 + C153790 * C164 + C23990 * C147 + C24032 + C24032 +
            C153809 * C163) *
               C153513 * C23987) *
              C153413 * C153397 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
             C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 +
             C23999 + C153761 * C162) *
                C153513 * C23987 +
            (C24335 + C24336 + C24337) * C153513 * C23988 + C24357 * C153774) *
               C153413 * C310 -
           ((C24341 + C24342 + C24343) * C153513 * C153774 +
            (C24340 + C24339 + C24338) * C153513 * C23988 +
            (C24337 + C24336 + C24335) * C153513 * C23987) *
               C153413 * C311 +
           (C24357 * C23987 + (C24343 + C24342 + C24341) * C153513 * C23988 +
            (C23990 * C2989 + C24272 + C24272 + C153809 * C2997 +
             C23992 * C2990 + C24273 + C24273 + C153790 * C2998 +
             C23994 * C2991 + C24274 + C24274 + C153761 * C2999) *
                C153513 * C153774) *
               C153413 * C312) *
              C313 +
          (((C24344 + C24345 + C24346) * C153513 * C23987 +
            (C24347 + C24348 + C24349) * C153513 * C23988 +
            (C24350 + C24351 + C24352) * C153513 * C153774) *
               C153413 * C311 -
           (C24358 * C153774 + (C24346 + C24345 + C24344) * C153513 * C23988 +
            (C23994 * C147 + C24012 + C24012 + C153761 * C163 + C23992 * C146 +
             C24013 + C24013 + C153790 * C162 + C23990 * C145 + C24014 +
             C24014 + C153809 * C161) *
                C153513 * C23987) *
               C153413 * C310 -
           ((C23994 * C2992 + C24296 + C24296 + C153761 * C3000 +
             C23992 * C2991 + C24297 + C24297 + C153790 * C2999 +
             C23990 * C2990 + C24298 + C24298 + C153809 * C2998) *
                C153513 * C153774 +
            (C24352 + C24351 + C24350) * C153513 * C23988 + C24358 * C23987) *
               C153413 * C312) *
              C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
             C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 +
             C23999 + C153761 * C162) *
                C153513 * C23987 +
            (C24335 + C24336 + C24337) * C153513 * C23988 + C24357 * C153774) *
               C493 -
           ((C23994 * C1798 + C24577 + C24577 + C153761 * C1808 +
             C23992 * C1799 + C24578 + C24578 + C153790 * C1809 +
             C23990 * C1800 + C24579 + C24579 + C153809 * C1810) *
                C153513 * C153774 +
            (C23994 * C983 + C24580 + C24580 + C153761 * C995 + C23992 * C982 +
             C24581 + C24581 + C153790 * C994 + C23990 * C981 + C24582 +
             C24582 + C153809 * C993) *
                C153513 * C23988 +
            (C23994 * C498 + C24583 + C24583 + C153761 * C522 + C23992 * C499 +
             C24584 + C24584 + C153790 * C523 + C23990 * C500 + C24585 +
             C24585 + C153809 * C524) *
                C153513 * C23987) *
               C494 +
           ((C23990 * C501 + C24586 + C24586 + C153809 * C525 + C23992 * C502 +
             C24587 + C24587 + C153790 * C526 + C23994 * C503 + C24588 +
             C24588 + C153761 * C527) *
                C153513 * C23987 +
            (C23990 * C1369 + C24589 + C24589 + C153809 * C1379 +
             C23992 * C1368 + C24590 + C24590 + C153790 * C1378 +
             C23994 * C1367 + C24591 + C24591 + C153761 * C1377) *
                C153513 * C23988 +
            (C23990 * C3327 + C24592 + C24592 + C153809 * C3335 +
             C23992 * C3328 + C24593 + C24593 + C153790 * C3336 +
             C23994 * C3329 + C24594 + C24594 + C153761 * C3337) *
                C153513 * C153774) *
               C495) *
              C153397 * C313 +
          (((C23990 * C499 + C24595 + C24595 + C153809 * C523 + C23992 * C498 +
             C24596 + C24596 + C153790 * C522 + C23994 * C497 + C24597 +
             C24597 + C153761 * C521) *
                C153513 * C23987 +
            (C23990 * C982 + C24598 + C24598 + C153809 * C994 + C23992 * C983 +
             C24599 + C24599 + C153790 * C995 + C23994 * C984 + C24600 +
             C24600 + C153761 * C996) *
                C153513 * C23988 +
            (C23990 * C1799 + C24601 + C24601 + C153809 * C1809 +
             C23992 * C1798 + C24602 + C24602 + C153790 * C1808 +
             C23994 * C1797 + C24603 + C24603 + C153761 * C1807) *
                C153513 * C153774) *
               C494 -
           (C24358 * C153774 + (C24346 + C24345 + C24344) * C153513 * C23988 +
            (C23994 * C147 + C24012 + C24012 + C153761 * C163 + C23992 * C146 +
             C24013 + C24013 + C153790 * C162 + C23990 * C145 + C24014 +
             C24014 + C153809 * C161) *
                C153513 * C23987) *
               C493 -
           ((C23994 * C3330 + C24604 + C24604 + C153761 * C3338 +
             C23992 * C3329 + C24605 + C24605 + C153790 * C3337 +
             C23990 * C3328 + C24606 + C24606 + C153809 * C3336) *
                C153513 * C153774 +
            (C23994 * C1366 + C24607 + C24607 + C153761 * C1376 +
             C23992 * C1367 + C24608 + C24608 + C153790 * C1377 +
             C23990 * C1368 + C24609 + C24609 + C153809 * C1378) *
                C153513 * C23988 +
            (C23994 * C504 + C24610 + C24610 + C153761 * C528 + C23992 * C503 +
             C24611 + C24611 + C153790 * C527 + C23990 * C502 + C24612 +
             C24612 + C153809 * C526) *
                C153513 * C23987) *
               C495) *
              C153397 * C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153513 *
               C28229 +
           (C28234 * C319 + C28238 + C28238 + C153338 * C343) * C153513 *
               C28230 +
           (C28234 * C320 + C28239 + C28239 + C153338 * C344) * C153513 *
               C28231 +
           (C28234 * C1227 + C28240 + C28240 + C153338 * C1237) * C153513 *
               C28232 +
           (C28234 * C2989 + C28241 + C28241 + C153338 * C2997) * C153513 *
               C28233) *
              C153413 * C153397 * C130 -
          ((C28234 * C2990 + C28242 + C28242 + C153338 * C2998) * C153513 *
               C28233 +
           (C28234 * C1226 + C28243 + C28243 + C153338 * C1236) * C153513 *
               C28232 +
           (C28234 * C321 + C28244 + C28244 + C153338 * C345) * C153513 *
               C28231 +
           (C28234 * C318 + C28245 + C28245 + C153338 * C342) * C153513 *
               C28230 +
           (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C153513 *
               C28229) *
              C153413 * C153397 * C131 +
          ((C28234 * C146 + C28247 + C28247 + C153338 * C162) * C153513 *
               C28229 +
           (C28234 * C317 + C28248 + C28248 + C153338 * C341) * C153513 *
               C28230 +
           (C28234 * C322 + C28249 + C28249 + C153338 * C346) * C153513 *
               C28231 +
           (C28234 * C1225 + C28250 + C28250 + C153338 * C1235) * C153513 *
               C28232 +
           (C28234 * C2991 + C28251 + C28251 + C153338 * C2999) * C153513 *
               C28233) *
              C153413 * C153397 * C132 -
          ((C28234 * C2992 + C28252 + C28252 + C153338 * C3000) * C153513 *
               C28233 +
           (C28234 * C1224 + C28253 + C28253 + C153338 * C1234) * C153513 *
               C28232 +
           (C28234 * C323 + C28254 + C28254 + C153338 * C347) * C153513 *
               C28231 +
           (C28234 * C316 + C28255 + C28255 + C153338 * C340) * C153513 *
               C28230 +
           (C28234 * C147 + C28256 + C28256 + C153338 * C163) * C153513 *
               C28229) *
              C153413 * C153397 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153513 *
                C28229 +
            C28439 * C28230 + C28440 * C28231 + C28441 * C28232 +
            C28442 * C28233) *
               C153413 * C310 -
           (C28443 * C28233 + C28442 * C28232 + C28441 * C28231 +
            C28440 * C28230 + C28439 * C28229) *
               C153413 * C311 +
           (C28440 * C28229 + C28441 * C28230 + C28442 * C28231 +
            C28443 * C28232 +
            (C28234 * C28378 + C28396 + C28396 + C153338 * C28382) * C153513 *
                C28233) *
               C153413 * C312) *
              C313 +
          ((C28444 * C28229 + C28445 * C28230 + C28446 * C28231 +
            C28447 * C28232 + C28448 * C28233) *
               C153413 * C311 -
           (C28447 * C28233 + C28446 * C28232 + C28445 * C28231 +
            C28444 * C28230 +
            (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C153513 *
                C28229) *
               C153413 * C310 -
           ((C28234 * C28379 + C28408 + C28408 + C153338 * C28383) * C153513 *
                C28233 +
            C28448 * C28232 + C28447 * C28231 + C28446 * C28230 +
            C28445 * C28229) *
               C153413 * C312) *
              C153384)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153513 *
                C28229 +
            C28439 * C28230 + C28440 * C28231 + C28441 * C28232 +
            C28442 * C28233) *
               C493 -
           ((C28234 * C5603 + C28577 + C28577 + C153338 * C5609) * C153513 *
                C28233 +
            (C28234 * C4143 + C28578 + C28578 + C153338 * C4151) * C153513 *
                C28232 +
            (C28234 * C1800 + C28579 + C28579 + C153338 * C1810) * C153513 *
                C28231 +
            (C28234 * C981 + C28580 + C28580 + C153338 * C993) * C153513 *
                C28230 +
            (C28234 * C500 + C28581 + C28581 + C153338 * C524) * C153513 *
                C28229) *
               C494 +
           ((C28234 * C501 + C28582 + C28582 + C153338 * C525) * C153513 *
                C28229 +
            (C28234 * C1369 + C28583 + C28583 + C153338 * C1379) * C153513 *
                C28230 +
            (C28234 * C3327 + C28584 + C28584 + C153338 * C3335) * C153513 *
                C28231 +
            (C28234 * C4835 + C28585 + C28585 + C153338 * C4841) * C153513 *
                C28232 +
            (C28234 * C28570 + C28586 + C28586 + C153338 * C28574) * C153513 *
                C28233) *
               C495) *
              C153397 * C313 +
          (((C28234 * C499 + C28587 + C28587 + C153338 * C523) * C153513 *
                C28229 +
            (C28234 * C982 + C28588 + C28588 + C153338 * C994) * C153513 *
                C28230 +
            (C28234 * C1799 + C28589 + C28589 + C153338 * C1809) * C153513 *
                C28231 +
            (C28234 * C4144 + C28590 + C28590 + C153338 * C4152) * C153513 *
                C28232 +
            (C28234 * C5602 + C28591 + C28591 + C153338 * C5608) * C153513 *
                C28233) *
               C494 -
           (C28447 * C28233 + C28446 * C28232 + C28445 * C28231 +
            C28444 * C28230 +
            (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C153513 *
                C28229) *
               C493 -
           ((C28234 * C28571 + C28592 + C28592 + C153338 * C28575) * C153513 *
                C28233 +
            (C28234 * C4834 + C28593 + C28593 + C153338 * C4840) * C153513 *
                C28232 +
            (C28234 * C3328 + C28594 + C28594 + C153338 * C3336) * C153513 *
                C28231 +
            (C28234 * C1368 + C28595 + C28595 + C153338 * C1378) * C153513 *
                C28230 +
            (C28234 * C502 + C28596 + C28596 + C153338 * C526) * C153513 *
                C28229) *
               C495) *
              C153397 * C153384)) /
            (p * q * std::sqrt(p + q));
    d2ee[363] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C144 + C169 + C169 + C121 * C160 + C136 * C145 + C170 +
            C170 + C122 * C161 + C138 * C146 + C171 + C171 + C123 * C162 +
            C140 * C147 + C172 + C172 + C124 * C163 + C142 * C148 + C173 +
            C173 + C125 * C164) *
               C153513 * C153501 * C153725 -
           (C142 * C496 + C533 + C533 + C125 * C520 + C140 * C497 + C534 +
            C534 + C124 * C521 + C138 * C498 + C535 + C535 + C123 * C522 +
            C136 * C499 + C536 + C536 + C122 * C523 + C134 * C500 + C537 +
            C537 + C121 * C524) *
               C153513 * C153501 * C153477) *
              C153397 * C153793 +
          ((C134 * C499 + C543 + C543 + C121 * C523 + C136 * C498 + C544 +
            C544 + C122 * C522 + C138 * C497 + C545 + C545 + C123 * C521 +
            C140 * C496 + C546 + C546 + C124 * C520 + C142 * C506 + C547 +
            C547 + C125 * C530) *
               C153513 * C153501 * C153477 -
           (C142 * C149 + C174 + C174 + C125 * C165 + C140 * C148 + C175 +
            C175 + C124 * C164 + C138 * C147 + C176 + C176 + C123 * C163 +
            C136 * C146 + C177 + C177 + C122 * C162 + C134 * C145 + C178 +
            C178 + C121 * C161) *
               C153513 * C153501 * C153725) *
              C153397 * C153794 +
          ((C134 * C146 + C179 + C179 + C121 * C162 + C136 * C147 + C180 +
            C180 + C122 * C163 + C138 * C148 + C181 + C181 + C123 * C164 +
            C140 * C149 + C182 + C182 + C124 * C165 + C142 * C150 + C183 +
            C183 + C125 * C166) *
               C153513 * C153501 * C153725 -
           (C142 * C811 + C815 + C815 + C125 * C813 + C140 * C506 + C816 +
            C816 + C124 * C530 + C138 * C496 + C817 + C817 + C123 * C520 +
            C136 * C497 + C818 + C818 + C122 * C521 + C134 * C498 + C819 +
            C819 + C121 * C522) *
               C153513 * C153501 * C153477) *
              C153397 * C678)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 +
             C2737 + C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
             C153761 * C162) *
                C153513 * C153812 +
            (C3086 + C3087 + C3088) * C153513 * C153800 + C3108 * C153774) *
               C153725 -
           ((C2733 * C1798 + C3340 + C3340 + C153761 * C1808 + C2731 * C1799 +
             C3341 + C3341 + C2724 * C1809 + C2729 * C1800 + C3342 + C3342 +
             C2723 * C1810) *
                C153513 * C153774 +
            (C2733 * C983 + C3343 + C3343 + C153761 * C995 + C2731 * C982 +
             C3344 + C3344 + C2724 * C994 + C2729 * C981 + C3345 + C3345 +
             C2723 * C993) *
                C153513 * C153800 +
            (C2733 * C498 + C3346 + C3346 + C153761 * C522 + C2731 * C499 +
             C3347 + C3347 + C2724 * C523 + C2729 * C500 + C3348 + C3348 +
             C2723 * C524) *
                C153513 * C153812) *
               C153477) *
              C153397 * C153793 +
          (((C2729 * C499 + C3358 + C3358 + C2723 * C523 + C2731 * C498 +
             C3359 + C3359 + C2724 * C522 + C2733 * C497 + C3360 + C3360 +
             C153761 * C521) *
                C153513 * C153812 +
            (C2729 * C982 + C3361 + C3361 + C2723 * C994 + C2731 * C983 +
             C3362 + C3362 + C2724 * C995 + C2733 * C984 + C3363 + C3363 +
             C153761 * C996) *
                C153513 * C153800 +
            (C2729 * C1799 + C3364 + C3364 + C2723 * C1809 + C2731 * C1798 +
             C3365 + C3365 + C2724 * C1808 + C2733 * C1797 + C3366 + C3366 +
             C153761 * C1807) *
                C153513 * C153774) *
               C153477 -
           (C3109 * C153774 + (C3097 + C3096 + C3095) * C153513 * C153800 +
            (C2733 * C147 + C2751 + C2751 + C153761 * C163 + C2731 * C146 +
             C2752 + C2752 + C2724 * C162 + C2729 * C145 + C2753 + C2753 +
             C2723 * C161) *
                C153513 * C153812) *
               C153725) *
              C153397 * C153794 +
          (((C2729 * C146 + C2754 + C2754 + C2723 * C162 + C2731 * C147 +
             C2755 + C2755 + C2724 * C163 + C2733 * C148 + C2756 + C2756 +
             C153761 * C164) *
                C153513 * C153812 +
            (C3621 + C3622 + C3623) * C153513 * C153800 +
            (C3624 + C3625 + C3626) * C153513 * C153774) *
               C153725 -
           ((C2733 * C1796 + C3845 + C3845 + C153761 * C1806 + C2731 * C1797 +
             C3846 + C3846 + C2724 * C1807 + C2729 * C1798 + C3847 + C3847 +
             C2723 * C1808) *
                C153513 * C153774 +
            (C2733 * C985 + C3848 + C3848 + C153761 * C997 + C2731 * C984 +
             C3849 + C3849 + C2724 * C996 + C2729 * C983 + C3850 + C3850 +
             C2723 * C995) *
                C153513 * C153800 +
            (C2733 * C496 + C3851 + C3851 + C153761 * C520 + C2731 * C497 +
             C3852 + C3852 + C2724 * C521 + C2729 * C498 + C3853 + C3853 +
             C2723 * C522) *
                C153513 * C153812) *
               C153477) *
              C153397 * C678)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
             C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 +
             C23999 + C153761 * C162) *
                C153513 * C23987 +
            (C24335 + C24336 + C24337) * C153513 * C23988 + C24357 * C153774) *
               C153725 -
           ((C23994 * C1798 + C24577 + C24577 + C153761 * C1808 +
             C23992 * C1799 + C24578 + C24578 + C153790 * C1809 +
             C23990 * C1800 + C24579 + C24579 + C153809 * C1810) *
                C153513 * C153774 +
            (C23994 * C983 + C24580 + C24580 + C153761 * C995 + C23992 * C982 +
             C24581 + C24581 + C153790 * C994 + C23990 * C981 + C24582 +
             C24582 + C153809 * C993) *
                C153513 * C23988 +
            (C23994 * C498 + C24583 + C24583 + C153761 * C522 + C23992 * C499 +
             C24584 + C24584 + C153790 * C523 + C23990 * C500 + C24585 +
             C24585 + C153809 * C524) *
                C153513 * C23987) *
               C153477) *
              C153397 * C153793 +
          (((C23990 * C499 + C24595 + C24595 + C153809 * C523 + C23992 * C498 +
             C24596 + C24596 + C153790 * C522 + C23994 * C497 + C24597 +
             C24597 + C153761 * C521) *
                C153513 * C23987 +
            (C23990 * C982 + C24598 + C24598 + C153809 * C994 + C23992 * C983 +
             C24599 + C24599 + C153790 * C995 + C23994 * C984 + C24600 +
             C24600 + C153761 * C996) *
                C153513 * C23988 +
            (C23990 * C1799 + C24601 + C24601 + C153809 * C1809 +
             C23992 * C1798 + C24602 + C24602 + C153790 * C1808 +
             C23994 * C1797 + C24603 + C24603 + C153761 * C1807) *
                C153513 * C153774) *
               C153477 -
           (C24358 * C153774 + (C24346 + C24345 + C24344) * C153513 * C23988 +
            (C23994 * C147 + C24012 + C24012 + C153761 * C163 + C23992 * C146 +
             C24013 + C24013 + C153790 * C162 + C23990 * C145 + C24014 +
             C24014 + C153809 * C161) *
                C153513 * C23987) *
               C153725) *
              C153397 * C153794 +
          (((C23990 * C146 + C24015 + C24015 + C153809 * C162 + C23992 * C147 +
             C24016 + C24016 + C153790 * C163 + C23994 * C148 + C24017 +
             C24017 + C153761 * C164) *
                C153513 * C23987 +
            (C24858 + C24859 + C24860) * C153513 * C23988 +
            (C24861 + C24862 + C24863) * C153513 * C153774) *
               C153725 -
           ((C23994 * C1796 + C25082 + C25082 + C153761 * C1806 +
             C23992 * C1797 + C25083 + C25083 + C153790 * C1807 +
             C23990 * C1798 + C25084 + C25084 + C153809 * C1808) *
                C153513 * C153774 +
            (C23994 * C985 + C25085 + C25085 + C153761 * C997 + C23992 * C984 +
             C25086 + C25086 + C153790 * C996 + C23990 * C983 + C25087 +
             C25087 + C153809 * C995) *
                C153513 * C23988 +
            (C23994 * C496 + C25088 + C25088 + C153761 * C520 + C23992 * C497 +
             C25089 + C25089 + C153790 * C521 + C23990 * C498 + C25090 +
             C25090 + C153809 * C522) *
                C153513 * C23987) *
               C153477) *
              C153397 * C678)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153513 *
                C28229 +
            C28439 * C28230 + C28440 * C28231 + C28441 * C28232 +
            C28442 * C28233) *
               C153725 -
           ((C28234 * C5603 + C28577 + C28577 + C153338 * C5609) * C153513 *
                C28233 +
            (C28234 * C4143 + C28578 + C28578 + C153338 * C4151) * C153513 *
                C28232 +
            (C28234 * C1800 + C28579 + C28579 + C153338 * C1810) * C153513 *
                C28231 +
            (C28234 * C981 + C28580 + C28580 + C153338 * C993) * C153513 *
                C28230 +
            (C28234 * C500 + C28581 + C28581 + C153338 * C524) * C153513 *
                C28229) *
               C153477) *
              C153397 * C153793 +
          (((C28234 * C499 + C28587 + C28587 + C153338 * C523) * C153513 *
                C28229 +
            (C28234 * C982 + C28588 + C28588 + C153338 * C994) * C153513 *
                C28230 +
            (C28234 * C1799 + C28589 + C28589 + C153338 * C1809) * C153513 *
                C28231 +
            (C28234 * C4144 + C28590 + C28590 + C153338 * C4152) * C153513 *
                C28232 +
            (C28234 * C5602 + C28591 + C28591 + C153338 * C5608) * C153513 *
                C28233) *
               C153477 -
           (C28447 * C28233 + C28446 * C28232 + C28445 * C28231 +
            C28444 * C28230 +
            (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C153513 *
                C28229) *
               C153725) *
              C153397 * C153794 +
          (((C28234 * C146 + C28247 + C28247 + C153338 * C162) * C153513 *
                C28229 +
            C28740 * C28230 + C28741 * C28231 + C28742 * C28232 +
            C28743 * C28233) *
               C153725 -
           ((C28234 * C5601 + C28866 + C28866 + C153338 * C5607) * C153513 *
                C28233 +
            (C28234 * C4145 + C28867 + C28867 + C153338 * C4153) * C153513 *
                C28232 +
            (C28234 * C1798 + C28868 + C28868 + C153338 * C1808) * C153513 *
                C28231 +
            (C28234 * C983 + C28869 + C28869 + C153338 * C995) * C153513 *
                C28230 +
            (C28234 * C498 + C28870 + C28870 + C153338 * C522) * C153513 *
                C28229) *
               C153477) *
              C153397 * C678)) /
            (p * q * std::sqrt(p + q));
    d2ee[364] +=
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((C134 * C144 + C169 + C169 + C121 * C160 + C136 * C145 + C170 + C170 +
           C122 * C161 + C138 * C146 + C171 + C171 + C123 * C162 + C140 * C147 +
           C172 + C172 + C124 * C163 + C142 * C148 + C173 + C173 +
           C125 * C164) *
              C153513 * C153501 * C153413 * C153397 * C130 -
          (C142 * C149 + C174 + C174 + C125 * C165 + C140 * C148 + C175 + C175 +
           C124 * C164 + C138 * C147 + C176 + C176 + C123 * C163 + C136 * C146 +
           C177 + C177 + C122 * C162 + C134 * C145 + C178 + C178 +
           C121 * C161) *
              C153513 * C153501 * C153413 * C153397 * C131 +
          (C134 * C146 + C179 + C179 + C121 * C162 + C136 * C147 + C180 + C180 +
           C122 * C163 + C138 * C148 + C181 + C181 + C123 * C164 + C140 * C149 +
           C182 + C182 + C124 * C165 + C142 * C150 + C183 + C183 +
           C125 * C166) *
              C153513 * C153501 * C153413 * C153397 * C132 -
          (C142 * C151 + C184 + C184 + C125 * C167 + C140 * C150 + C185 + C185 +
           C124 * C166 + C138 * C149 + C186 + C186 + C123 * C165 + C136 * C148 +
           C187 + C187 + C122 * C164 + C134 * C147 + C188 + C188 +
           C121 * C163) *
              C153513 * C153501 * C153413 * C153397 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C144 + C169 + C169 + C121 * C160 + C136 * C145 + C170 +
            C170 + C122 * C161 + C138 * C146 + C171 + C171 + C123 * C162 +
            C140 * C147 + C172 + C172 + C124 * C163 + C142 * C148 + C173 +
            C173 + C125 * C164) *
               C153513 * C153501 * C153413 * C310 -
           (C142 * C315 + C352 + C352 + C125 * C339 + C140 * C316 + C353 +
            C353 + C124 * C340 + C138 * C317 + C354 + C354 + C123 * C341 +
            C136 * C318 + C355 + C355 + C122 * C342 + C134 * C319 + C356 +
            C356 + C121 * C343) *
               C153513 * C153501 * C153413 * C311 +
           (C134 * C320 + C357 + C357 + C121 * C344 + C136 * C321 + C358 +
            C358 + C122 * C345 + C138 * C322 + C359 + C359 + C123 * C346 +
            C140 * C323 + C360 + C360 + C124 * C347 + C142 * C324 + C361 +
            C361 + C125 * C348) *
               C153513 * C153501 * C153413 * C312) *
              C313 +
          ((C134 * C318 + C362 + C362 + C121 * C342 + C136 * C317 + C363 +
            C363 + C122 * C341 + C138 * C316 + C364 + C364 + C123 * C340 +
            C140 * C315 + C365 + C365 + C124 * C339 + C142 * C325 + C366 +
            C366 + C125 * C349) *
               C153513 * C153501 * C153413 * C311 -
           (C142 * C149 + C174 + C174 + C125 * C165 + C140 * C148 + C175 +
            C175 + C124 * C164 + C138 * C147 + C176 + C176 + C123 * C163 +
            C136 * C146 + C177 + C177 + C122 * C162 + C134 * C145 + C178 +
            C178 + C121 * C161) *
               C153513 * C153501 * C153413 * C310 -
           (C142 * C326 + C367 + C367 + C125 * C350 + C140 * C324 + C368 +
            C368 + C124 * C348 + C138 * C323 + C369 + C369 + C123 * C347 +
            C136 * C322 + C370 + C370 + C122 * C346 + C134 * C321 + C371 +
            C371 + C121 * C345) *
               C153513 * C153501 * C153413 * C312) *
              C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 + C2737 +
            C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
            C153761 * C162) *
               C153513 * C153812 +
           (C2729 * C319 + C2739 + C2739 + C2723 * C343 + C2731 * C318 + C2740 +
            C2740 + C2724 * C342 + C2733 * C317 + C2741 + C2741 +
            C153761 * C341) *
               C153513 * C153800 +
           (C2729 * C320 + C2742 + C2742 + C2723 * C344 + C2731 * C321 + C2743 +
            C2743 + C2724 * C345 + C2733 * C322 + C2744 + C2744 +
            C153761 * C346) *
               C153513 * C153774) *
              C153413 * C153397 * C130 -
          ((C2733 * C323 + C2745 + C2745 + C153761 * C347 + C2731 * C322 +
            C2746 + C2746 + C2724 * C346 + C2729 * C321 + C2747 + C2747 +
            C2723 * C345) *
               C153513 * C153774 +
           (C2733 * C316 + C2748 + C2748 + C153761 * C340 + C2731 * C317 +
            C2749 + C2749 + C2724 * C341 + C2729 * C318 + C2750 + C2750 +
            C2723 * C342) *
               C153513 * C153800 +
           (C2733 * C147 + C2751 + C2751 + C153761 * C163 + C2731 * C146 +
            C2752 + C2752 + C2724 * C162 + C2729 * C145 + C2753 + C2753 +
            C2723 * C161) *
               C153513 * C153812) *
              C153413 * C153397 * C131 +
          ((C2729 * C146 + C2754 + C2754 + C2723 * C162 + C2731 * C147 + C2755 +
            C2755 + C2724 * C163 + C2733 * C148 + C2756 + C2756 +
            C153761 * C164) *
               C153513 * C153812 +
           (C2729 * C317 + C2757 + C2757 + C2723 * C341 + C2731 * C316 + C2758 +
            C2758 + C2724 * C340 + C2733 * C315 + C2759 + C2759 +
            C153761 * C339) *
               C153513 * C153800 +
           (C2729 * C322 + C2760 + C2760 + C2723 * C346 + C2731 * C323 + C2761 +
            C2761 + C2724 * C347 + C2733 * C324 + C2762 + C2762 +
            C153761 * C348) *
               C153513 * C153774) *
              C153413 * C153397 * C132 -
          ((C2733 * C326 + C2763 + C2763 + C153761 * C350 + C2731 * C324 +
            C2764 + C2764 + C2724 * C348 + C2729 * C323 + C2765 + C2765 +
            C2723 * C347) *
               C153513 * C153774 +
           (C2733 * C325 + C2766 + C2766 + C153761 * C349 + C2731 * C315 +
            C2767 + C2767 + C2724 * C339 + C2729 * C316 + C2768 + C2768 +
            C2723 * C340) *
               C153513 * C153800 +
           (C2733 * C149 + C2769 + C2769 + C153761 * C165 + C2731 * C148 +
            C2770 + C2770 + C2724 * C164 + C2729 * C147 + C2771 + C2771 +
            C2723 * C163) *
               C153513 * C153812) *
              C153413 * C153397 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 +
             C2737 + C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
             C153761 * C162) *
                C153513 * C153812 +
            (C3086 + C3087 + C3088) * C153513 * C153800 + C3108 * C153774) *
               C153413 * C310 -
           ((C3092 + C3093 + C3094) * C153513 * C153774 +
            (C3091 + C3090 + C3089) * C153513 * C153800 +
            (C3088 + C3087 + C3086) * C153513 * C153812) *
               C153413 * C311 +
           (C3108 * C153812 + (C3094 + C3093 + C3092) * C153513 * C153800 +
            (C2729 * C2989 + C3023 + C3023 + C2723 * C2997 + C2731 * C2990 +
             C3024 + C3024 + C2724 * C2998 + C2733 * C2991 + C3025 + C3025 +
             C153761 * C2999) *
                C153513 * C153774) *
               C153413 * C312) *
              C313 +
          (((C3095 + C3096 + C3097) * C153513 * C153812 +
            (C3098 + C3099 + C3100) * C153513 * C153800 +
            (C3101 + C3102 + C3103) * C153513 * C153774) *
               C153413 * C311 -
           (C3109 * C153774 + (C3097 + C3096 + C3095) * C153513 * C153800 +
            (C2733 * C147 + C2751 + C2751 + C153761 * C163 + C2731 * C146 +
             C2752 + C2752 + C2724 * C162 + C2729 * C145 + C2753 + C2753 +
             C2723 * C161) *
                C153513 * C153812) *
               C153413 * C310 -
           ((C2733 * C2992 + C3047 + C3047 + C153761 * C3000 + C2731 * C2991 +
             C3048 + C3048 + C2724 * C2999 + C2729 * C2990 + C3049 + C3049 +
             C2723 * C2998) *
                C153513 * C153774 +
            (C3103 + C3102 + C3101) * C153513 * C153800 + C3109 * C153812) *
               C153413 * C312) *
              C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
            C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 + C23999 +
            C153761 * C162) *
               C153513 * C23987 +
           (C23990 * C319 + C24000 + C24000 + C153809 * C343 + C23992 * C318 +
            C24001 + C24001 + C153790 * C342 + C23994 * C317 + C24002 + C24002 +
            C153761 * C341) *
               C153513 * C23988 +
           (C23990 * C320 + C24003 + C24003 + C153809 * C344 + C23992 * C321 +
            C24004 + C24004 + C153790 * C345 + C23994 * C322 + C24005 + C24005 +
            C153761 * C346) *
               C153513 * C153774) *
              C153413 * C153397 * C130 -
          ((C23994 * C323 + C24006 + C24006 + C153761 * C347 + C23992 * C322 +
            C24007 + C24007 + C153790 * C346 + C23990 * C321 + C24008 + C24008 +
            C153809 * C345) *
               C153513 * C153774 +
           (C23994 * C316 + C24009 + C24009 + C153761 * C340 + C23992 * C317 +
            C24010 + C24010 + C153790 * C341 + C23990 * C318 + C24011 + C24011 +
            C153809 * C342) *
               C153513 * C23988 +
           (C23994 * C147 + C24012 + C24012 + C153761 * C163 + C23992 * C146 +
            C24013 + C24013 + C153790 * C162 + C23990 * C145 + C24014 + C24014 +
            C153809 * C161) *
               C153513 * C23987) *
              C153413 * C153397 * C131 +
          ((C23990 * C146 + C24015 + C24015 + C153809 * C162 + C23992 * C147 +
            C24016 + C24016 + C153790 * C163 + C23994 * C148 + C24017 + C24017 +
            C153761 * C164) *
               C153513 * C23987 +
           (C23990 * C317 + C24018 + C24018 + C153809 * C341 + C23992 * C316 +
            C24019 + C24019 + C153790 * C340 + C23994 * C315 + C24020 + C24020 +
            C153761 * C339) *
               C153513 * C23988 +
           (C23990 * C322 + C24021 + C24021 + C153809 * C346 + C23992 * C323 +
            C24022 + C24022 + C153790 * C347 + C23994 * C324 + C24023 + C24023 +
            C153761 * C348) *
               C153513 * C153774) *
              C153413 * C153397 * C132 -
          ((C23994 * C326 + C24024 + C24024 + C153761 * C350 + C23992 * C324 +
            C24025 + C24025 + C153790 * C348 + C23990 * C323 + C24026 + C24026 +
            C153809 * C347) *
               C153513 * C153774 +
           (C23994 * C325 + C24027 + C24027 + C153761 * C349 + C23992 * C315 +
            C24028 + C24028 + C153790 * C339 + C23990 * C316 + C24029 + C24029 +
            C153809 * C340) *
               C153513 * C23988 +
           (C23994 * C149 + C24030 + C24030 + C153761 * C165 + C23992 * C148 +
            C24031 + C24031 + C153790 * C164 + C23990 * C147 + C24032 + C24032 +
            C153809 * C163) *
               C153513 * C23987) *
              C153413 * C153397 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
             C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 +
             C23999 + C153761 * C162) *
                C153513 * C23987 +
            (C24335 + C24336 + C24337) * C153513 * C23988 + C24357 * C153774) *
               C153413 * C310 -
           ((C24341 + C24342 + C24343) * C153513 * C153774 +
            (C24340 + C24339 + C24338) * C153513 * C23988 +
            (C24337 + C24336 + C24335) * C153513 * C23987) *
               C153413 * C311 +
           (C24357 * C23987 + (C24343 + C24342 + C24341) * C153513 * C23988 +
            (C23990 * C2989 + C24272 + C24272 + C153809 * C2997 +
             C23992 * C2990 + C24273 + C24273 + C153790 * C2998 +
             C23994 * C2991 + C24274 + C24274 + C153761 * C2999) *
                C153513 * C153774) *
               C153413 * C312) *
              C313 +
          (((C24344 + C24345 + C24346) * C153513 * C23987 +
            (C24347 + C24348 + C24349) * C153513 * C23988 +
            (C24350 + C24351 + C24352) * C153513 * C153774) *
               C153413 * C311 -
           (C24358 * C153774 + (C24346 + C24345 + C24344) * C153513 * C23988 +
            (C23994 * C147 + C24012 + C24012 + C153761 * C163 + C23992 * C146 +
             C24013 + C24013 + C153790 * C162 + C23990 * C145 + C24014 +
             C24014 + C153809 * C161) *
                C153513 * C23987) *
               C153413 * C310 -
           ((C23994 * C2992 + C24296 + C24296 + C153761 * C3000 +
             C23992 * C2991 + C24297 + C24297 + C153790 * C2999 +
             C23990 * C2990 + C24298 + C24298 + C153809 * C2998) *
                C153513 * C153774 +
            (C24352 + C24351 + C24350) * C153513 * C23988 + C24358 * C23987) *
               C153413 * C312) *
              C153384)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153513 *
               C28229 +
           (C28234 * C319 + C28238 + C28238 + C153338 * C343) * C153513 *
               C28230 +
           (C28234 * C320 + C28239 + C28239 + C153338 * C344) * C153513 *
               C28231 +
           (C28234 * C1227 + C28240 + C28240 + C153338 * C1237) * C153513 *
               C28232 +
           (C28234 * C2989 + C28241 + C28241 + C153338 * C2997) * C153513 *
               C28233) *
              C153413 * C153397 * C130 -
          ((C28234 * C2990 + C28242 + C28242 + C153338 * C2998) * C153513 *
               C28233 +
           (C28234 * C1226 + C28243 + C28243 + C153338 * C1236) * C153513 *
               C28232 +
           (C28234 * C321 + C28244 + C28244 + C153338 * C345) * C153513 *
               C28231 +
           (C28234 * C318 + C28245 + C28245 + C153338 * C342) * C153513 *
               C28230 +
           (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C153513 *
               C28229) *
              C153413 * C153397 * C131 +
          ((C28234 * C146 + C28247 + C28247 + C153338 * C162) * C153513 *
               C28229 +
           (C28234 * C317 + C28248 + C28248 + C153338 * C341) * C153513 *
               C28230 +
           (C28234 * C322 + C28249 + C28249 + C153338 * C346) * C153513 *
               C28231 +
           (C28234 * C1225 + C28250 + C28250 + C153338 * C1235) * C153513 *
               C28232 +
           (C28234 * C2991 + C28251 + C28251 + C153338 * C2999) * C153513 *
               C28233) *
              C153413 * C153397 * C132 -
          ((C28234 * C2992 + C28252 + C28252 + C153338 * C3000) * C153513 *
               C28233 +
           (C28234 * C1224 + C28253 + C28253 + C153338 * C1234) * C153513 *
               C28232 +
           (C28234 * C323 + C28254 + C28254 + C153338 * C347) * C153513 *
               C28231 +
           (C28234 * C316 + C28255 + C28255 + C153338 * C340) * C153513 *
               C28230 +
           (C28234 * C147 + C28256 + C28256 + C153338 * C163) * C153513 *
               C28229) *
              C153413 * C153397 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153513 *
                C28229 +
            C28439 * C28230 + C28440 * C28231 + C28441 * C28232 +
            C28442 * C28233) *
               C153413 * C310 -
           (C28443 * C28233 + C28442 * C28232 + C28441 * C28231 +
            C28440 * C28230 + C28439 * C28229) *
               C153413 * C311 +
           (C28440 * C28229 + C28441 * C28230 + C28442 * C28231 +
            C28443 * C28232 +
            (C28234 * C28378 + C28396 + C28396 + C153338 * C28382) * C153513 *
                C28233) *
               C153413 * C312) *
              C313 +
          ((C28444 * C28229 + C28445 * C28230 + C28446 * C28231 +
            C28447 * C28232 + C28448 * C28233) *
               C153413 * C311 -
           (C28447 * C28233 + C28446 * C28232 + C28445 * C28231 +
            C28444 * C28230 +
            (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C153513 *
                C28229) *
               C153413 * C310 -
           ((C28234 * C28379 + C28408 + C28408 + C153338 * C28383) * C153513 *
                C28233 +
            C28448 * C28232 + C28447 * C28231 + C28446 * C28230 +
            C28445 * C28229) *
               C153413 * C312) *
              C153384)) /
            (p * q * std::sqrt(p + q));
    d2ee[365] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C144 + C169 + C169 + C121 * C160 + C136 * C145 + C170 +
            C170 + C122 * C161 + C138 * C146 + C171 + C171 + C123 * C162 +
            C140 * C147 + C172 + C172 + C124 * C163 + C142 * C148 + C173 +
            C173 + C125 * C164) *
               C153513 * C153501 * C153413 * C153795 -
           (C142 * C315 + C352 + C352 + C125 * C339 + C140 * C316 + C353 +
            C353 + C124 * C340 + C138 * C317 + C354 + C354 + C123 * C341 +
            C136 * C318 + C355 + C355 + C122 * C342 + C134 * C319 + C356 +
            C356 + C121 * C343) *
               C153513 * C153501 * C153413 * C153796 +
           (C134 * C320 + C357 + C357 + C121 * C344 + C136 * C321 + C358 +
            C358 + C122 * C345 + C138 * C322 + C359 + C359 + C123 * C346 +
            C140 * C323 + C360 + C360 + C124 * C347 + C142 * C324 + C361 +
            C361 + C125 * C348) *
               C153513 * C153501 * C153413 * C1509) *
              C153716 +
          ((C134 * C318 + C362 + C362 + C121 * C342 + C136 * C317 + C363 +
            C363 + C122 * C341 + C138 * C316 + C364 + C364 + C123 * C340 +
            C140 * C315 + C365 + C365 + C124 * C339 + C142 * C325 + C366 +
            C366 + C125 * C349) *
               C153513 * C153501 * C153413 * C153796 -
           (C142 * C149 + C174 + C174 + C125 * C165 + C140 * C148 + C175 +
            C175 + C124 * C164 + C138 * C147 + C176 + C176 + C123 * C163 +
            C136 * C146 + C177 + C177 + C122 * C162 + C134 * C145 + C178 +
            C178 + C121 * C161) *
               C153513 * C153501 * C153413 * C153795 -
           (C142 * C326 + C367 + C367 + C125 * C350 + C140 * C324 + C368 +
            C368 + C124 * C348 + C138 * C323 + C369 + C369 + C123 * C347 +
            C136 * C322 + C370 + C370 + C122 * C346 + C134 * C321 + C371 +
            C371 + C121 * C345) *
               C153513 * C153501 * C153413 * C1509) *
              C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 +
             C2737 + C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
             C153761 * C162) *
                C153513 * C153812 +
            (C3086 + C3087 + C3088) * C153513 * C153800 + C3108 * C153774) *
               C153413 * C153795 -
           (C4609 * C153774 + (C3091 + C3090 + C3089) * C153513 * C153800 +
            (C3088 + C3087 + C3086) * C153513 * C153812) *
               C153413 * C153796 +
           (C3108 * C153812 + (C3094 + C3093 + C3092) * C153513 * C153800 +
            (C4613 + C4614 + C4615) * C153513 * C153774) *
               C153413 * C1509) *
              C153716 +
          (((C3095 + C3096 + C3097) * C153513 * C153812 +
            (C3098 + C3099 + C3100) * C153513 * C153800 +
            (C3101 + C3102 + C3103) * C153513 * C153774) *
               C153413 * C153796 -
           (C3109 * C153774 + (C3097 + C3096 + C3095) * C153513 * C153800 +
            (C2733 * C147 + C2751 + C2751 + C153761 * C163 + C2731 * C146 +
             C2752 + C2752 + C2724 * C162 + C2729 * C145 + C2753 + C2753 +
             C2723 * C161) *
                C153513 * C153812) *
               C153413 * C153795 -
           ((C2733 * C2992 + C3047 + C3047 + C153761 * C3000 + C2731 * C2991 +
             C3048 + C3048 + C2724 * C2999 + C2729 * C2990 + C3049 + C3049 +
             C2723 * C2998) *
                C153513 * C153774 +
            (C3103 + C3102 + C3101) * C153513 * C153800 + C3109 * C153812) *
               C153413 * C1509) *
              C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
             C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 +
             C23999 + C153761 * C162) *
                C153513 * C23987 +
            (C24335 + C24336 + C24337) * C153513 * C23988 + C24357 * C153774) *
               C153413 * C153795 -
           (C25825 * C153774 + (C24340 + C24339 + C24338) * C153513 * C23988 +
            (C24337 + C24336 + C24335) * C153513 * C23987) *
               C153413 * C153796 +
           (C24357 * C23987 + (C24343 + C24342 + C24341) * C153513 * C23988 +
            (C25829 + C25830 + C25831) * C153513 * C153774) *
               C153413 * C1509) *
              C153716 +
          (((C24344 + C24345 + C24346) * C153513 * C23987 +
            (C24347 + C24348 + C24349) * C153513 * C23988 +
            (C24350 + C24351 + C24352) * C153513 * C153774) *
               C153413 * C153796 -
           (C24358 * C153774 + (C24346 + C24345 + C24344) * C153513 * C23988 +
            (C23994 * C147 + C24012 + C24012 + C153761 * C163 + C23992 * C146 +
             C24013 + C24013 + C153790 * C162 + C23990 * C145 + C24014 +
             C24014 + C153809 * C161) *
                C153513 * C23987) *
               C153413 * C153795 -
           ((C23994 * C2992 + C24296 + C24296 + C153761 * C3000 +
             C23992 * C2991 + C24297 + C24297 + C153790 * C2999 +
             C23990 * C2990 + C24298 + C24298 + C153809 * C2998) *
                C153513 * C153774 +
            (C24352 + C24351 + C24350) * C153513 * C23988 + C24358 * C23987) *
               C153413 * C1509) *
              C153384)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153513 *
                C28229 +
            C28439 * C28230 + C28440 * C28231 + C28441 * C28232 +
            C28442 * C28233) *
               C153413 * C153795 -
           (C28443 * C28233 + C28442 * C28232 + C28441 * C28231 +
            C28440 * C28230 + C28439 * C28229) *
               C153413 * C153796 +
           (C28440 * C28229 + C28441 * C28230 + C28442 * C28231 +
            C28443 * C28232 + C29302 * C28233) *
               C153413 * C1509) *
              C153716 +
          ((C28444 * C28229 + C28445 * C28230 + C28446 * C28231 +
            C28447 * C28232 + C28448 * C28233) *
               C153413 * C153796 -
           (C28447 * C28233 + C28446 * C28232 + C28445 * C28231 +
            C28444 * C28230 +
            (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C153513 *
                C28229) *
               C153413 * C153795 -
           ((C28234 * C28379 + C28408 + C28408 + C153338 * C28383) * C153513 *
                C28233 +
            C28448 * C28232 + C28447 * C28231 + C28446 * C28230 +
            C28445 * C28229) *
               C153413 * C1509) *
              C153384)) /
            (p * q * std::sqrt(p + q));
    d2ee[366] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C144 + C169 + C169 + C121 * C160 + C136 * C145 + C170 +
            C170 + C122 * C161 + C138 * C146 + C171 + C171 + C123 * C162 +
            C140 * C147 + C172 + C172 + C124 * C163 + C142 * C148 + C173 +
            C173 + C125 * C164) *
               C153513 * C153501 * C153725 -
           (C142 * C496 + C533 + C533 + C125 * C520 + C140 * C497 + C534 +
            C534 + C124 * C521 + C138 * C498 + C535 + C535 + C123 * C522 +
            C136 * C499 + C536 + C536 + C122 * C523 + C134 * C500 + C537 +
            C537 + C121 * C524) *
               C153513 * C153501 * C153477) *
              C153795 +
          ((C134 * C981 + C1000 + C1000 + C121 * C993 + C136 * C982 + C1001 +
            C1001 + C122 * C994 + C138 * C983 + C1002 + C1002 + C123 * C995 +
            C140 * C984 + C1003 + C1003 + C124 * C996 + C142 * C985 + C1004 +
            C1004 + C125 * C997) *
               C153513 * C153501 * C153477 -
           (C142 * C315 + C352 + C352 + C125 * C339 + C140 * C316 + C353 +
            C353 + C124 * C340 + C138 * C317 + C354 + C354 + C123 * C341 +
            C136 * C318 + C355 + C355 + C122 * C342 + C134 * C319 + C356 +
            C356 + C121 * C343) *
               C153513 * C153501 * C153725) *
              C153796 +
          ((C134 * C320 + C357 + C357 + C121 * C344 + C136 * C321 + C358 +
            C358 + C122 * C345 + C138 * C322 + C359 + C359 + C123 * C346 +
            C140 * C323 + C360 + C360 + C124 * C347 + C142 * C324 + C361 +
            C361 + C125 * C348) *
               C153513 * C153501 * C153725 -
           (C142 * C1796 + C1812 + C1812 + C125 * C1806 + C140 * C1797 + C1813 +
            C1813 + C124 * C1807 + C138 * C1798 + C1814 + C1814 + C123 * C1808 +
            C136 * C1799 + C1815 + C1815 + C122 * C1809 + C134 * C1800 + C1816 +
            C1816 + C121 * C1810) *
               C153513 * C153501 * C153477) *
              C1509) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 +
             C2737 + C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
             C153761 * C162) *
                C153513 * C153812 +
            (C3086 + C3087 + C3088) * C153513 * C153800 + C3108 * C153774) *
               C153725 -
           (C5625 * C153774 + (C4213 + C4214 + C4215) * C153513 * C153800 +
            (C2733 * C498 + C3346 + C3346 + C153761 * C522 + C2731 * C499 +
             C3347 + C3347 + C2724 * C523 + C2729 * C500 + C3348 + C3348 +
             C2723 * C524) *
                C153513 * C153812) *
               C153477) *
              C153795 +
          (((C4215 + C4214 + C4213) * C153513 * C153812 +
            (C4212 + C4211 + C4210) * C153513 * C153800 +
            (C5629 + C5630 + C5631) * C153513 * C153774) *
               C153477 -
           (C4609 * C153774 + (C3091 + C3090 + C3089) * C153513 * C153800 +
            (C3088 + C3087 + C3086) * C153513 * C153812) *
               C153725) *
              C153796 +
          ((C3108 * C153812 + (C3094 + C3093 + C3092) * C153513 * C153800 +
            (C4613 + C4614 + C4615) * C153513 * C153774) *
               C153725 -
           ((C2733 * C5601 + C5618 + C5618 + C153761 * C5607 + C2731 * C5602 +
             C5619 + C5619 + C2724 * C5608 + C2729 * C5603 + C5620 + C5620 +
             C2723 * C5609) *
                C153513 * C153774 +
            (C5631 + C5630 + C5629) * C153513 * C153800 + C5625 * C153812) *
               C153477) *
              C1509) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
             C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 +
             C23999 + C153761 * C162) *
                C153513 * C23987 +
            (C24335 + C24336 + C24337) * C153513 * C23988 + C24357 * C153774) *
               C153725 -
           (C26823 * C153774 + (C25438 + C25439 + C25440) * C153513 * C23988 +
            (C23994 * C498 + C24583 + C24583 + C153761 * C522 + C23992 * C499 +
             C24584 + C24584 + C153790 * C523 + C23990 * C500 + C24585 +
             C24585 + C153809 * C524) *
                C153513 * C23987) *
               C153477) *
              C153795 +
          (((C25440 + C25439 + C25438) * C153513 * C23987 +
            (C25437 + C25436 + C25435) * C153513 * C23988 +
            (C26827 + C26828 + C26829) * C153513 * C153774) *
               C153477 -
           (C25825 * C153774 + (C24340 + C24339 + C24338) * C153513 * C23988 +
            (C24337 + C24336 + C24335) * C153513 * C23987) *
               C153725) *
              C153796 +
          ((C24357 * C23987 + (C24343 + C24342 + C24341) * C153513 * C23988 +
            (C25829 + C25830 + C25831) * C153513 * C153774) *
               C153725 -
           ((C23994 * C5601 + C26816 + C26816 + C153761 * C5607 +
             C23992 * C5602 + C26817 + C26817 + C153790 * C5608 +
             C23990 * C5603 + C26818 + C26818 + C153809 * C5609) *
                C153513 * C153774 +
            (C26829 + C26828 + C26827) * C153513 * C23988 + C26823 * C23987) *
               C153477) *
              C1509) *
         C153378) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153513 *
                C28229 +
            C28439 * C28230 + C28440 * C28231 + C28441 * C28232 +
            C28442 * C28233) *
               C153725 -
           (C29081 * C28233 + C29082 * C28232 + C29083 * C28231 +
            C29084 * C28230 +
            (C28234 * C500 + C28581 + C28581 + C153338 * C524) * C153513 *
                C28229) *
               C153477) *
              C153795 +
          ((C29084 * C28229 + C29083 * C28230 + C29082 * C28231 +
            C29081 * C28232 + C29868 * C28233) *
               C153477 -
           (C28443 * C28233 + C28442 * C28232 + C28441 * C28231 +
            C28440 * C28230 + C28439 * C28229) *
               C153725) *
              C153796 +
          ((C28440 * C28229 + C28441 * C28230 + C28442 * C28231 +
            C28443 * C28232 + C29302 * C28233) *
               C153725 -
           ((C28234 * C29858 + C29864 + C29864 + C153338 * C29860) * C153513 *
                C28233 +
            C29868 * C28232 + C29081 * C28231 + C29082 * C28230 +
            C29083 * C28229) *
               C153477) *
              C1509) *
         C153378) /
            (p * q * std::sqrt(p + q));
    d2ee[367] +=
        (-std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((C134 * C144 + C169 + C169 + C121 * C160 + C136 * C145 + C170 + C170 +
           C122 * C161 + C138 * C146 + C171 + C171 + C123 * C162 + C140 * C147 +
           C172 + C172 + C124 * C163 + C142 * C148 + C173 + C173 +
           C125 * C164) *
              C153513 * C153501 * C153413 * C1218 -
          (C142 * C315 + C352 + C352 + C125 * C339 + C140 * C316 + C353 + C353 +
           C124 * C340 + C138 * C317 + C354 + C354 + C123 * C341 + C136 * C318 +
           C355 + C355 + C122 * C342 + C134 * C319 + C356 + C356 +
           C121 * C343) *
              C153513 * C153501 * C153413 * C1219 +
          (C134 * C320 + C357 + C357 + C121 * C344 + C136 * C321 + C358 + C358 +
           C122 * C345 + C138 * C322 + C359 + C359 + C123 * C346 + C140 * C323 +
           C360 + C360 + C124 * C347 + C142 * C324 + C361 + C361 +
           C125 * C348) *
              C153513 * C153501 * C153413 * C1220 -
          (C142 * C1223 + C1239 + C1239 + C125 * C1233 + C140 * C1224 + C1240 +
           C1240 + C124 * C1234 + C138 * C1225 + C1241 + C1241 + C123 * C1235 +
           C136 * C1226 + C1242 + C1242 + C122 * C1236 + C134 * C1227 + C1243 +
           C1243 + C121 * C1237) *
              C153513 * C153501 * C153413 * C1221) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C144 + C169 + C169 + C121 * C160 + C136 * C145 + C170 +
            C170 + C122 * C161 + C138 * C146 + C171 + C171 + C123 * C162 +
            C140 * C147 + C172 + C172 + C124 * C163 + C142 * C148 + C173 +
            C173 + C125 * C164) *
               C153513 * C153501 * C153413 * C1131 -
           (C142 * C315 + C352 + C352 + C125 * C339 + C140 * C316 + C353 +
            C353 + C124 * C340 + C138 * C317 + C354 + C354 + C123 * C341 +
            C136 * C318 + C355 + C355 + C122 * C342 + C134 * C319 + C356 +
            C356 + C121 * C343) *
               C153513 * C153501 * C153413 * C153449) *
              C1133 +
          ((C134 * C318 + C362 + C362 + C121 * C342 + C136 * C317 + C363 +
            C363 + C122 * C341 + C138 * C316 + C364 + C364 + C123 * C340 +
            C140 * C315 + C365 + C365 + C124 * C339 + C142 * C325 + C366 +
            C366 + C125 * C349) *
               C153513 * C153501 * C153413 * C153449 -
           (C142 * C149 + C174 + C174 + C125 * C165 + C140 * C148 + C175 +
            C175 + C124 * C164 + C138 * C147 + C176 + C176 + C123 * C163 +
            C136 * C146 + C177 + C177 + C122 * C162 + C134 * C145 + C178 +
            C178 + C121 * C161) *
               C153513 * C153501 * C153413 * C1131) *
              C1134 +
          ((C134 * C146 + C179 + C179 + C121 * C162 + C136 * C147 + C180 +
            C180 + C122 * C163 + C138 * C148 + C181 + C181 + C123 * C164 +
            C140 * C149 + C182 + C182 + C124 * C165 + C142 * C150 + C183 +
            C183 + C125 * C166) *
               C153513 * C153501 * C153413 * C1131 -
           (C142 * C679 + C683 + C683 + C125 * C681 + C140 * C325 + C684 +
            C684 + C124 * C349 + C138 * C315 + C685 + C685 + C123 * C339 +
            C136 * C316 + C686 + C686 + C122 * C340 + C134 * C317 + C687 +
            C687 + C121 * C341) *
               C153513 * C153501 * C153413 * C153449) *
              C1135)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C144 + C169 + C169 + C121 * C160 + C136 * C145 + C170 +
            C170 + C122 * C161 + C138 * C146 + C171 + C171 + C123 * C162 +
            C140 * C147 + C172 + C172 + C124 * C163 + C142 * C148 + C173 +
            C173 + C125 * C164) *
               C153513 * C153501 * C493 -
           (C142 * C496 + C533 + C533 + C125 * C520 + C140 * C497 + C534 +
            C534 + C124 * C521 + C138 * C498 + C535 + C535 + C123 * C522 +
            C136 * C499 + C536 + C536 + C122 * C523 + C134 * C500 + C537 +
            C537 + C121 * C524) *
               C153513 * C153501 * C494 +
           (C134 * C501 + C538 + C538 + C121 * C525 + C136 * C502 + C539 +
            C539 + C122 * C526 + C138 * C503 + C540 + C540 + C123 * C527 +
            C140 * C504 + C541 + C541 + C124 * C528 + C142 * C505 + C542 +
            C542 + C125 * C529) *
               C153513 * C153501 * C495) *
              C1131 +
          ((C134 * C981 + C1000 + C1000 + C121 * C993 + C136 * C982 + C1001 +
            C1001 + C122 * C994 + C138 * C983 + C1002 + C1002 + C123 * C995 +
            C140 * C984 + C1003 + C1003 + C124 * C996 + C142 * C985 + C1004 +
            C1004 + C125 * C997) *
               C153513 * C153501 * C494 -
           (C142 * C315 + C352 + C352 + C125 * C339 + C140 * C316 + C353 +
            C353 + C124 * C340 + C138 * C317 + C354 + C354 + C123 * C341 +
            C136 * C318 + C355 + C355 + C122 * C342 + C134 * C319 + C356 +
            C356 + C121 * C343) *
               C153513 * C153501 * C493 -
           (C142 * C1365 + C1381 + C1381 + C125 * C1375 + C140 * C1366 + C1382 +
            C1382 + C124 * C1376 + C138 * C1367 + C1383 + C1383 + C123 * C1377 +
            C136 * C1368 + C1384 + C1384 + C122 * C1378 + C134 * C1369 + C1385 +
            C1385 + C121 * C1379) *
               C153513 * C153501 * C495) *
              C153449) *
         C153378) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 +
             C2737 + C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
             C153761 * C162) *
                C153513 * C153812 +
            (C3086 + C3087 + C3088) * C153513 * C153800 + C3108 * C153774) *
               C153413 * C1131 -
           ((C3092 + C3093 + C3094) * C153513 * C153774 +
            (C3091 + C3090 + C3089) * C153513 * C153800 +
            (C3088 + C3087 + C3086) * C153513 * C153812) *
               C153413 * C153449) *
              C1133 +
          (((C3095 + C3096 + C3097) * C153513 * C153812 +
            (C3098 + C3099 + C3100) * C153513 * C153800 +
            (C3101 + C3102 + C3103) * C153513 * C153774) *
               C153413 * C153449 -
           (C3109 * C153774 + (C3097 + C3096 + C3095) * C153513 * C153800 +
            (C2733 * C147 + C2751 + C2751 + C153761 * C163 + C2731 * C146 +
             C2752 + C2752 + C2724 * C162 + C2729 * C145 + C2753 + C2753 +
             C2723 * C161) *
                C153513 * C153812) *
               C153413 * C1131) *
              C1134 +
          (((C2729 * C146 + C2754 + C2754 + C2723 * C162 + C2731 * C147 +
             C2755 + C2755 + C2724 * C163 + C2733 * C148 + C2756 + C2756 +
             C153761 * C164) *
                C153513 * C153812 +
            (C3621 + C3622 + C3623) * C153513 * C153800 +
            (C3624 + C3625 + C3626) * C153513 * C153774) *
               C153413 * C1131 -
           ((C2733 * C1223 + C3606 + C3606 + C153761 * C1233 + C2731 * C1224 +
             C3607 + C3607 + C2724 * C1234 + C2729 * C1225 + C3608 + C3608 +
             C2723 * C1235) *
                C153513 * C153774 +
            (C3626 + C3625 + C3624) * C153513 * C153800 +
            (C3623 + C3622 + C3621) * C153513 * C153812) *
               C153413 * C153449) *
              C1135)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 + C2737 +
            C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
            C153761 * C162) *
               C153513 * C153812 +
           (C3086 + C3087 + C3088) * C153513 * C153800 + C3108 * C153774) *
              C153413 * C1218 -
          (C4609 * C153774 + (C3091 + C3090 + C3089) * C153513 * C153800 +
           (C3088 + C3087 + C3086) * C153513 * C153812) *
              C153413 * C1219 +
          (C3108 * C153812 + (C3094 + C3093 + C3092) * C153513 * C153800 +
           (C4613 + C4614 + C4615) * C153513 * C153774) *
              C153413 * C1220 -
          ((C2733 * C4585 + C4602 + C4602 + C153761 * C4591 + C2731 * C4586 +
            C4603 + C4603 + C2724 * C4592 + C2729 * C4587 + C4604 + C4604 +
            C2723 * C4593) *
               C153513 * C153774 +
           (C4615 + C4614 + C4613) * C153513 * C153800 + C4609 * C153812) *
              C153413 * C1221) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 +
             C2737 + C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
             C153761 * C162) *
                C153513 * C153812 +
            (C3086 + C3087 + C3088) * C153513 * C153800 + C3108 * C153774) *
               C493 -
           ((C4210 + C4211 + C4212) * C153513 * C153774 +
            (C4213 + C4214 + C4215) * C153513 * C153800 +
            (C2733 * C498 + C3346 + C3346 + C153761 * C522 + C2731 * C499 +
             C3347 + C3347 + C2724 * C523 + C2729 * C500 + C3348 + C3348 +
             C2723 * C524) *
                C153513 * C153812) *
               C494 +
           ((C2729 * C501 + C3349 + C3349 + C2723 * C525 + C2731 * C502 +
             C3350 + C3350 + C2724 * C526 + C2733 * C503 + C3351 + C3351 +
             C153761 * C527) *
                C153513 * C153812 +
            (C4870 + C4871 + C4872) * C153513 * C153800 +
            (C4873 + C4874 + C4875) * C153513 * C153774) *
               C495) *
              C1131 +
          (((C4215 + C4214 + C4213) * C153513 * C153812 +
            (C4212 + C4211 + C4210) * C153513 * C153800 +
            (C2729 * C4143 + C4168 + C4168 + C2723 * C4151 + C2731 * C4144 +
             C4169 + C4169 + C2724 * C4152 + C2733 * C4145 + C4170 + C4170 +
             C153761 * C4153) *
                C153513 * C153774) *
               C494 -
           (C4609 * C153774 + (C3091 + C3090 + C3089) * C153513 * C153800 +
            (C3088 + C3087 + C3086) * C153513 * C153812) *
               C493 -
           ((C2733 * C4833 + C4855 + C4855 + C153761 * C4839 + C2731 * C4834 +
             C4856 + C4856 + C2724 * C4840 + C2729 * C4835 + C4857 + C4857 +
             C2723 * C4841) *
                C153513 * C153774 +
            (C4875 + C4874 + C4873) * C153513 * C153800 +
            (C4872 + C4871 + C4870) * C153513 * C153812) *
               C495) *
              C153449) *
         C153378) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
             C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 +
             C23999 + C153761 * C162) *
                C153513 * C23987 +
            (C24335 + C24336 + C24337) * C153513 * C23988 + C24357 * C153774) *
               C153413 * C1131 -
           ((C24341 + C24342 + C24343) * C153513 * C153774 +
            (C24340 + C24339 + C24338) * C153513 * C23988 +
            (C24337 + C24336 + C24335) * C153513 * C23987) *
               C153413 * C153449) *
              C1133 +
          (((C24344 + C24345 + C24346) * C153513 * C23987 +
            (C24347 + C24348 + C24349) * C153513 * C23988 +
            (C24350 + C24351 + C24352) * C153513 * C153774) *
               C153413 * C153449 -
           (C24358 * C153774 + (C24346 + C24345 + C24344) * C153513 * C23988 +
            (C23994 * C147 + C24012 + C24012 + C153761 * C163 + C23992 * C146 +
             C24013 + C24013 + C153790 * C162 + C23990 * C145 + C24014 +
             C24014 + C153809 * C161) *
                C153513 * C23987) *
               C153413 * C1131) *
              C1134 +
          (((C23990 * C146 + C24015 + C24015 + C153809 * C162 + C23992 * C147 +
             C24016 + C24016 + C153790 * C163 + C23994 * C148 + C24017 +
             C24017 + C153761 * C164) *
                C153513 * C23987 +
            (C24858 + C24859 + C24860) * C153513 * C23988 +
            (C24861 + C24862 + C24863) * C153513 * C153774) *
               C153413 * C1131 -
           ((C23994 * C1223 + C24843 + C24843 + C153761 * C1233 +
             C23992 * C1224 + C24844 + C24844 + C153790 * C1234 +
             C23990 * C1225 + C24845 + C24845 + C153809 * C1235) *
                C153513 * C153774 +
            (C24863 + C24862 + C24861) * C153513 * C23988 +
            (C24860 + C24859 + C24858) * C153513 * C23987) *
               C153413 * C153449) *
              C1135)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
            C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 + C23999 +
            C153761 * C162) *
               C153513 * C23987 +
           (C24335 + C24336 + C24337) * C153513 * C23988 + C24357 * C153774) *
              C153413 * C1218 -
          (C25825 * C153774 + (C24340 + C24339 + C24338) * C153513 * C23988 +
           (C24337 + C24336 + C24335) * C153513 * C23987) *
              C153413 * C1219 +
          (C24357 * C23987 + (C24343 + C24342 + C24341) * C153513 * C23988 +
           (C25829 + C25830 + C25831) * C153513 * C153774) *
              C153413 * C1220 -
          ((C23994 * C4585 + C25818 + C25818 + C153761 * C4591 +
            C23992 * C4586 + C25819 + C25819 + C153790 * C4592 +
            C23990 * C4587 + C25820 + C25820 + C153809 * C4593) *
               C153513 * C153774 +
           (C25831 + C25830 + C25829) * C153513 * C23988 + C25825 * C23987) *
              C153413 * C1221) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
             C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 +
             C23999 + C153761 * C162) *
                C153513 * C23987 +
            (C24335 + C24336 + C24337) * C153513 * C23988 + C24357 * C153774) *
               C493 -
           ((C25435 + C25436 + C25437) * C153513 * C153774 +
            (C25438 + C25439 + C25440) * C153513 * C23988 +
            (C23994 * C498 + C24583 + C24583 + C153761 * C522 + C23992 * C499 +
             C24584 + C24584 + C153790 * C523 + C23990 * C500 + C24585 +
             C24585 + C153809 * C524) *
                C153513 * C23987) *
               C494 +
           ((C23990 * C501 + C24586 + C24586 + C153809 * C525 + C23992 * C502 +
             C24587 + C24587 + C153790 * C526 + C23994 * C503 + C24588 +
             C24588 + C153761 * C527) *
                C153513 * C23987 +
            (C26077 + C26078 + C26079) * C153513 * C23988 +
            (C26080 + C26081 + C26082) * C153513 * C153774) *
               C495) *
              C1131 +
          (((C25440 + C25439 + C25438) * C153513 * C23987 +
            (C25437 + C25436 + C25435) * C153513 * C23988 +
            (C23990 * C4143 + C25393 + C25393 + C153809 * C4151 +
             C23992 * C4144 + C25394 + C25394 + C153790 * C4152 +
             C23994 * C4145 + C25395 + C25395 + C153761 * C4153) *
                C153513 * C153774) *
               C494 -
           (C25825 * C153774 + (C24340 + C24339 + C24338) * C153513 * C23988 +
            (C24337 + C24336 + C24335) * C153513 * C23987) *
               C493 -
           ((C23994 * C4833 + C26062 + C26062 + C153761 * C4839 +
             C23992 * C4834 + C26063 + C26063 + C153790 * C4840 +
             C23990 * C4835 + C26064 + C26064 + C153809 * C4841) *
                C153513 * C153774 +
            (C26082 + C26081 + C26080) * C153513 * C23988 +
            (C26079 + C26078 + C26077) * C153513 * C23987) *
               C495) *
              C153449) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153513 *
                C28229 +
            C28439 * C28230 + C28440 * C28231 + C28441 * C28232 +
            C28442 * C28233) *
               C153413 * C1131 -
           (C28443 * C28233 + C28442 * C28232 + C28441 * C28231 +
            C28440 * C28230 + C28439 * C28229) *
               C153413 * C153449) *
              C1133 +
          ((C28444 * C28229 + C28445 * C28230 + C28446 * C28231 +
            C28447 * C28232 + C28448 * C28233) *
               C153413 * C153449 -
           (C28447 * C28233 + C28446 * C28232 + C28445 * C28231 +
            C28444 * C28230 +
            (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C153513 *
                C28229) *
               C153413 * C1131) *
              C1134 +
          (((C28234 * C146 + C28247 + C28247 + C153338 * C162) * C153513 *
                C28229 +
            C28740 * C28230 + C28741 * C28231 + C28742 * C28232 +
            C28743 * C28233) *
               C153413 * C1131 -
           ((C28234 * C4585 + C28727 + C28727 + C153338 * C4591) * C153513 *
                C28233 +
            C28743 * C28232 + C28742 * C28231 + C28741 * C28230 +
            C28740 * C28229) *
               C153413 * C153449) *
              C1135)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153513 *
               C28229 +
           C28439 * C28230 + C28440 * C28231 + C28441 * C28232 +
           C28442 * C28233) *
              C153413 * C1218 -
          (C28443 * C28233 + C28442 * C28232 + C28441 * C28231 +
           C28440 * C28230 + C28439 * C28229) *
              C153413 * C1219 +
          (C28440 * C28229 + C28441 * C28230 + C28442 * C28231 +
           C28443 * C28232 + C29302 * C28233) *
              C153413 * C1220 -
          ((C28234 * C29292 + C29298 + C29298 + C153338 * C29294) * C153513 *
               C28233 +
           C29302 * C28232 + C28443 * C28231 + C28442 * C28230 +
           C28441 * C28229) *
              C153413 * C1221) *
         C153378) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153513 *
                C28229 +
            C28439 * C28230 + C28440 * C28231 + C28441 * C28232 +
            C28442 * C28233) *
               C493 -
           (C29081 * C28233 + C29082 * C28232 + C29083 * C28231 +
            C29084 * C28230 +
            (C28234 * C500 + C28581 + C28581 + C153338 * C524) * C153513 *
                C28229) *
               C494 +
           ((C28234 * C501 + C28582 + C28582 + C153338 * C525) * C153513 *
                C28229 +
            C29449 * C28230 + C29450 * C28231 + C29451 * C28232 +
            C29452 * C28233) *
               C495) *
              C1131 +
          ((C29084 * C28229 + C29083 * C28230 + C29082 * C28231 +
            C29081 * C28232 +
            (C28234 * C29032 + C29047 + C29047 + C153338 * C29036) * C153513 *
                C28233) *
               C494 -
           (C28443 * C28233 + C28442 * C28232 + C28441 * C28231 +
            C28440 * C28230 + C28439 * C28229) *
               C493 -
           ((C28234 * C29424 + C29436 + C29436 + C153338 * C29426) * C153513 *
                C28233 +
            C29452 * C28232 + C29451 * C28231 + C29450 * C28230 +
            C29449 * C28229) *
               C495) *
              C153449) *
         C153378) /
            (p * q * std::sqrt(p + q));
    d2ee[368] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 + C169 + C169 + C121 * C160 + C136 * C145 + C170 +
             C170 + C122 * C161 + C138 * C146 + C171 + C171 + C123 * C162 +
             C140 * C147 + C172 + C172 + C124 * C163 + C142 * C148 + C173 +
             C173 + C125 * C164) *
                C153513 * C153501 * C153725 -
            (C142 * C496 + C533 + C533 + C125 * C520 + C140 * C497 + C534 +
             C534 + C124 * C521 + C138 * C498 + C535 + C535 + C123 * C522 +
             C136 * C499 + C536 + C536 + C122 * C523 + C134 * C500 + C537 +
             C537 + C121 * C524) *
                C153513 * C153501 * C153477) *
               C1131 +
           ((C134 * C981 + C1000 + C1000 + C121 * C993 + C136 * C982 + C1001 +
             C1001 + C122 * C994 + C138 * C983 + C1002 + C1002 + C123 * C995 +
             C140 * C984 + C1003 + C1003 + C124 * C996 + C142 * C985 + C1004 +
             C1004 + C125 * C997) *
                C153513 * C153501 * C153477 -
            (C142 * C315 + C352 + C352 + C125 * C339 + C140 * C316 + C353 +
             C353 + C124 * C340 + C138 * C317 + C354 + C354 + C123 * C341 +
             C136 * C318 + C355 + C355 + C122 * C342 + C134 * C319 + C356 +
             C356 + C121 * C343) *
                C153513 * C153501 * C153725) *
               C153449) *
              C153716 +
          (((C134 * C499 + C543 + C543 + C121 * C523 + C136 * C498 + C544 +
             C544 + C122 * C522 + C138 * C497 + C545 + C545 + C123 * C521 +
             C140 * C496 + C546 + C546 + C124 * C520 + C142 * C506 + C547 +
             C547 + C125 * C530) *
                C153513 * C153501 * C153477 -
            (C142 * C149 + C174 + C174 + C125 * C165 + C140 * C148 + C175 +
             C175 + C124 * C164 + C138 * C147 + C176 + C176 + C123 * C163 +
             C136 * C146 + C177 + C177 + C122 * C162 + C134 * C145 + C178 +
             C178 + C121 * C161) *
                C153513 * C153501 * C153725) *
               C1131 +
           ((C134 * C318 + C362 + C362 + C121 * C342 + C136 * C317 + C363 +
             C363 + C122 * C341 + C138 * C316 + C364 + C364 + C123 * C340 +
             C140 * C315 + C365 + C365 + C124 * C339 + C142 * C325 + C366 +
             C366 + C125 * C349) *
                C153513 * C153501 * C153725 -
            (C142 * C986 + C1005 + C1005 + C125 * C998 + C140 * C985 + C1006 +
             C1006 + C124 * C997 + C138 * C984 + C1007 + C1007 + C123 * C996 +
             C136 * C983 + C1008 + C1008 + C122 * C995 + C134 * C982 + C1009 +
             C1009 + C121 * C994) *
                C153513 * C153501 * C153477) *
               C153449) *
              C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 +
              C2737 + C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
              C153761 * C162) *
                 C153513 * C153812 +
             (C3086 + C3087 + C3088) * C153513 * C153800 + C3108 * C153774) *
                C153725 -
            ((C4210 + C4211 + C4212) * C153513 * C153774 +
             (C4213 + C4214 + C4215) * C153513 * C153800 +
             (C2733 * C498 + C3346 + C3346 + C153761 * C522 + C2731 * C499 +
              C3347 + C3347 + C2724 * C523 + C2729 * C500 + C3348 + C3348 +
              C2723 * C524) *
                 C153513 * C153812) *
                C153477) *
               C1131 +
           (((C4215 + C4214 + C4213) * C153513 * C153812 +
             (C4212 + C4211 + C4210) * C153513 * C153800 +
             (C2729 * C4143 + C4168 + C4168 + C2723 * C4151 + C2731 * C4144 +
              C4169 + C4169 + C2724 * C4152 + C2733 * C4145 + C4170 + C4170 +
              C153761 * C4153) *
                 C153513 * C153774) *
                C153477 -
            (C4609 * C153774 + (C3091 + C3090 + C3089) * C153513 * C153800 +
             (C3088 + C3087 + C3086) * C153513 * C153812) *
                C153725) *
               C153449) *
              C153716 +
          ((((C2729 * C499 + C3358 + C3358 + C2723 * C523 + C2731 * C498 +
              C3359 + C3359 + C2724 * C522 + C2733 * C497 + C3360 + C3360 +
              C153761 * C521) *
                 C153513 * C153812 +
             (C4216 + C4217 + C4218) * C153513 * C153800 +
             (C4219 + C4220 + C4221) * C153513 * C153774) *
                C153477 -
            (C3109 * C153774 + (C3097 + C3096 + C3095) * C153513 * C153800 +
             (C2733 * C147 + C2751 + C2751 + C153761 * C163 + C2731 * C146 +
              C2752 + C2752 + C2724 * C162 + C2729 * C145 + C2753 + C2753 +
              C2723 * C161) *
                 C153513 * C153812) *
                C153725) *
               C1131 +
           (((C3095 + C3096 + C3097) * C153513 * C153812 +
             (C3098 + C3099 + C3100) * C153513 * C153800 +
             (C3101 + C3102 + C3103) * C153513 * C153774) *
                C153725 -
            ((C2733 * C4146 + C4183 + C4183 + C153761 * C4154 + C2731 * C4145 +
              C4184 + C4184 + C2724 * C4153 + C2729 * C4144 + C4185 + C4185 +
              C2723 * C4152) *
                 C153513 * C153774 +
             (C4221 + C4220 + C4219) * C153513 * C153800 +
             (C4218 + C4217 + C4216) * C153513 * C153812) *
                C153477) *
               C153449) *
              C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
              C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 +
              C23999 + C153761 * C162) *
                 C153513 * C23987 +
             (C24335 + C24336 + C24337) * C153513 * C23988 + C24357 * C153774) *
                C153725 -
            ((C25435 + C25436 + C25437) * C153513 * C153774 +
             (C25438 + C25439 + C25440) * C153513 * C23988 +
             (C23994 * C498 + C24583 + C24583 + C153761 * C522 + C23992 * C499 +
              C24584 + C24584 + C153790 * C523 + C23990 * C500 + C24585 +
              C24585 + C153809 * C524) *
                 C153513 * C23987) *
                C153477) *
               C1131 +
           (((C25440 + C25439 + C25438) * C153513 * C23987 +
             (C25437 + C25436 + C25435) * C153513 * C23988 +
             (C23990 * C4143 + C25393 + C25393 + C153809 * C4151 +
              C23992 * C4144 + C25394 + C25394 + C153790 * C4152 +
              C23994 * C4145 + C25395 + C25395 + C153761 * C4153) *
                 C153513 * C153774) *
                C153477 -
            (C25825 * C153774 + (C24340 + C24339 + C24338) * C153513 * C23988 +
             (C24337 + C24336 + C24335) * C153513 * C23987) *
                C153725) *
               C153449) *
              C153716 +
          ((((C23990 * C499 + C24595 + C24595 + C153809 * C523 + C23992 * C498 +
              C24596 + C24596 + C153790 * C522 + C23994 * C497 + C24597 +
              C24597 + C153761 * C521) *
                 C153513 * C23987 +
             (C25441 + C25442 + C25443) * C153513 * C23988 +
             (C25444 + C25445 + C25446) * C153513 * C153774) *
                C153477 -
            (C24358 * C153774 + (C24346 + C24345 + C24344) * C153513 * C23988 +
             (C23994 * C147 + C24012 + C24012 + C153761 * C163 + C23992 * C146 +
              C24013 + C24013 + C153790 * C162 + C23990 * C145 + C24014 +
              C24014 + C153809 * C161) *
                 C153513 * C23987) *
                C153725) *
               C1131 +
           (((C24344 + C24345 + C24346) * C153513 * C23987 +
             (C24347 + C24348 + C24349) * C153513 * C23988 +
             (C24350 + C24351 + C24352) * C153513 * C153774) *
                C153725 -
            ((C23994 * C4146 + C25408 + C25408 + C153761 * C4154 +
              C23992 * C4145 + C25409 + C25409 + C153790 * C4153 +
              C23990 * C4144 + C25410 + C25410 + C153809 * C4152) *
                 C153513 * C153774 +
             (C25446 + C25445 + C25444) * C153513 * C23988 +
             (C25443 + C25442 + C25441) * C153513 * C23987) *
                C153477) *
               C153449) *
              C153384)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153513 *
                 C28229 +
             C28439 * C28230 + C28440 * C28231 + C28441 * C28232 +
             C28442 * C28233) *
                C153725 -
            (C29081 * C28233 + C29082 * C28232 + C29083 * C28231 +
             C29084 * C28230 +
             (C28234 * C500 + C28581 + C28581 + C153338 * C524) * C153513 *
                 C28229) *
                C153477) *
               C1131 +
           ((C29084 * C28229 + C29083 * C28230 + C29082 * C28231 +
             C29081 * C28232 +
             (C28234 * C29032 + C29047 + C29047 + C153338 * C29036) * C153513 *
                 C28233) *
                C153477 -
            (C28443 * C28233 + C28442 * C28232 + C28441 * C28231 +
             C28440 * C28230 + C28439 * C28229) *
                C153725) *
               C153449) *
              C153716 +
          ((((C28234 * C499 + C28587 + C28587 + C153338 * C523) * C153513 *
                 C28229 +
             C29085 * C28230 + C29086 * C28231 + C29087 * C28232 +
             C29088 * C28233) *
                C153477 -
            (C28447 * C28233 + C28446 * C28232 + C28445 * C28231 +
             C28444 * C28230 +
             (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C153513 *
                 C28229) *
                C153725) *
               C1131 +
           ((C28444 * C28229 + C28445 * C28230 + C28446 * C28231 +
             C28447 * C28232 + C28448 * C28233) *
                C153725 -
            ((C28234 * C29033 + C29056 + C29056 + C153338 * C29037) * C153513 *
                 C28233 +
             C29088 * C28232 + C29087 * C28231 + C29086 * C28230 +
             C29085 * C28229) *
                C153477) *
               C153449) *
              C153384)) /
            (p * q * std::sqrt(p + q));
    d2ee[369] +=
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C144 + C169 + C169 + C121 * C160 + C136 * C145 + C170 +
            C170 + C122 * C161 + C138 * C146 + C171 + C171 + C123 * C162 +
            C140 * C147 + C172 + C172 + C124 * C163 + C142 * C148 + C173 +
            C173 + C125 * C164) *
               C153513 * C153501 * C153413 * C1131 -
           (C142 * C315 + C352 + C352 + C125 * C339 + C140 * C316 + C353 +
            C353 + C124 * C340 + C138 * C317 + C354 + C354 + C123 * C341 +
            C136 * C318 + C355 + C355 + C122 * C342 + C134 * C319 + C356 +
            C356 + C121 * C343) *
               C153513 * C153501 * C153413 * C153449) *
              C1133 +
          ((C134 * C318 + C362 + C362 + C121 * C342 + C136 * C317 + C363 +
            C363 + C122 * C341 + C138 * C316 + C364 + C364 + C123 * C340 +
            C140 * C315 + C365 + C365 + C124 * C339 + C142 * C325 + C366 +
            C366 + C125 * C349) *
               C153513 * C153501 * C153413 * C153449 -
           (C142 * C149 + C174 + C174 + C125 * C165 + C140 * C148 + C175 +
            C175 + C124 * C164 + C138 * C147 + C176 + C176 + C123 * C163 +
            C136 * C146 + C177 + C177 + C122 * C162 + C134 * C145 + C178 +
            C178 + C121 * C161) *
               C153513 * C153501 * C153413 * C1131) *
              C1134 +
          ((C134 * C146 + C179 + C179 + C121 * C162 + C136 * C147 + C180 +
            C180 + C122 * C163 + C138 * C148 + C181 + C181 + C123 * C164 +
            C140 * C149 + C182 + C182 + C124 * C165 + C142 * C150 + C183 +
            C183 + C125 * C166) *
               C153513 * C153501 * C153413 * C1131 -
           (C142 * C679 + C683 + C683 + C125 * C681 + C140 * C325 + C684 +
            C684 + C124 * C349 + C138 * C315 + C685 + C685 + C123 * C339 +
            C136 * C316 + C686 + C686 + C122 * C340 + C134 * C317 + C687 +
            C687 + C121 * C341) *
               C153513 * C153501 * C153413 * C153449) *
              C1135)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((C134 * C144 + C169 + C169 + C121 * C160 + C136 * C145 + C170 + C170 +
           C122 * C161 + C138 * C146 + C171 + C171 + C123 * C162 + C140 * C147 +
           C172 + C172 + C124 * C163 + C142 * C148 + C173 + C173 +
           C125 * C164) *
              C153513 * C153501 * C153413 * C1218 -
          (C142 * C315 + C352 + C352 + C125 * C339 + C140 * C316 + C353 + C353 +
           C124 * C340 + C138 * C317 + C354 + C354 + C123 * C341 + C136 * C318 +
           C355 + C355 + C122 * C342 + C134 * C319 + C356 + C356 +
           C121 * C343) *
              C153513 * C153501 * C153413 * C1219 +
          (C134 * C320 + C357 + C357 + C121 * C344 + C136 * C321 + C358 + C358 +
           C122 * C345 + C138 * C322 + C359 + C359 + C123 * C346 + C140 * C323 +
           C360 + C360 + C124 * C347 + C142 * C324 + C361 + C361 +
           C125 * C348) *
              C153513 * C153501 * C153413 * C1220 -
          (C142 * C1223 + C1239 + C1239 + C125 * C1233 + C140 * C1224 + C1240 +
           C1240 + C124 * C1234 + C138 * C1225 + C1241 + C1241 + C123 * C1235 +
           C136 * C1226 + C1242 + C1242 + C122 * C1236 + C134 * C1227 + C1243 +
           C1243 + C121 * C1237) *
              C153513 * C153501 * C153413 * C1221) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 +
             C2737 + C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
             C153761 * C162) *
                C153513 * C153812 +
            (C3086 + C3087 + C3088) * C153513 * C153800 + C3108 * C153774) *
               C153413 * C1131 -
           ((C3092 + C3093 + C3094) * C153513 * C153774 +
            (C3091 + C3090 + C3089) * C153513 * C153800 +
            (C3088 + C3087 + C3086) * C153513 * C153812) *
               C153413 * C153449) *
              C1133 +
          (((C3095 + C3096 + C3097) * C153513 * C153812 +
            (C3098 + C3099 + C3100) * C153513 * C153800 +
            (C3101 + C3102 + C3103) * C153513 * C153774) *
               C153413 * C153449 -
           (C3109 * C153774 + (C3097 + C3096 + C3095) * C153513 * C153800 +
            (C2733 * C147 + C2751 + C2751 + C153761 * C163 + C2731 * C146 +
             C2752 + C2752 + C2724 * C162 + C2729 * C145 + C2753 + C2753 +
             C2723 * C161) *
                C153513 * C153812) *
               C153413 * C1131) *
              C1134 +
          (((C2729 * C146 + C2754 + C2754 + C2723 * C162 + C2731 * C147 +
             C2755 + C2755 + C2724 * C163 + C2733 * C148 + C2756 + C2756 +
             C153761 * C164) *
                C153513 * C153812 +
            (C3621 + C3622 + C3623) * C153513 * C153800 +
            (C3624 + C3625 + C3626) * C153513 * C153774) *
               C153413 * C1131 -
           ((C2733 * C1223 + C3606 + C3606 + C153761 * C1233 + C2731 * C1224 +
             C3607 + C3607 + C2724 * C1234 + C2729 * C1225 + C3608 + C3608 +
             C2723 * C1235) *
                C153513 * C153774 +
            (C3626 + C3625 + C3624) * C153513 * C153800 +
            (C3623 + C3622 + C3621) * C153513 * C153812) *
               C153413 * C153449) *
              C1135)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 + C2737 +
            C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
            C153761 * C162) *
               C153513 * C153812 +
           (C3086 + C3087 + C3088) * C153513 * C153800 + C3108 * C153774) *
              C153413 * C1218 -
          (C4609 * C153774 + (C3091 + C3090 + C3089) * C153513 * C153800 +
           (C3088 + C3087 + C3086) * C153513 * C153812) *
              C153413 * C1219 +
          (C3108 * C153812 + (C3094 + C3093 + C3092) * C153513 * C153800 +
           (C4613 + C4614 + C4615) * C153513 * C153774) *
              C153413 * C1220 -
          ((C2733 * C4585 + C4602 + C4602 + C153761 * C4591 + C2731 * C4586 +
            C4603 + C4603 + C2724 * C4592 + C2729 * C4587 + C4604 + C4604 +
            C2723 * C4593) *
               C153513 * C153774 +
           (C4615 + C4614 + C4613) * C153513 * C153800 + C4609 * C153812) *
              C153413 * C1221) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
             C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 +
             C23999 + C153761 * C162) *
                C153513 * C23987 +
            (C24335 + C24336 + C24337) * C153513 * C23988 + C24357 * C153774) *
               C153413 * C1131 -
           ((C24341 + C24342 + C24343) * C153513 * C153774 +
            (C24340 + C24339 + C24338) * C153513 * C23988 +
            (C24337 + C24336 + C24335) * C153513 * C23987) *
               C153413 * C153449) *
              C1133 +
          (((C24344 + C24345 + C24346) * C153513 * C23987 +
            (C24347 + C24348 + C24349) * C153513 * C23988 +
            (C24350 + C24351 + C24352) * C153513 * C153774) *
               C153413 * C153449 -
           (C24358 * C153774 + (C24346 + C24345 + C24344) * C153513 * C23988 +
            (C23994 * C147 + C24012 + C24012 + C153761 * C163 + C23992 * C146 +
             C24013 + C24013 + C153790 * C162 + C23990 * C145 + C24014 +
             C24014 + C153809 * C161) *
                C153513 * C23987) *
               C153413 * C1131) *
              C1134 +
          (((C23990 * C146 + C24015 + C24015 + C153809 * C162 + C23992 * C147 +
             C24016 + C24016 + C153790 * C163 + C23994 * C148 + C24017 +
             C24017 + C153761 * C164) *
                C153513 * C23987 +
            (C24858 + C24859 + C24860) * C153513 * C23988 +
            (C24861 + C24862 + C24863) * C153513 * C153774) *
               C153413 * C1131 -
           ((C23994 * C1223 + C24843 + C24843 + C153761 * C1233 +
             C23992 * C1224 + C24844 + C24844 + C153790 * C1234 +
             C23990 * C1225 + C24845 + C24845 + C153809 * C1235) *
                C153513 * C153774 +
            (C24863 + C24862 + C24861) * C153513 * C23988 +
            (C24860 + C24859 + C24858) * C153513 * C23987) *
               C153413 * C153449) *
              C1135)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
            C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 + C23999 +
            C153761 * C162) *
               C153513 * C23987 +
           (C24335 + C24336 + C24337) * C153513 * C23988 + C24357 * C153774) *
              C153413 * C1218 -
          (C25825 * C153774 + (C24340 + C24339 + C24338) * C153513 * C23988 +
           (C24337 + C24336 + C24335) * C153513 * C23987) *
              C153413 * C1219 +
          (C24357 * C23987 + (C24343 + C24342 + C24341) * C153513 * C23988 +
           (C25829 + C25830 + C25831) * C153513 * C153774) *
              C153413 * C1220 -
          ((C23994 * C4585 + C25818 + C25818 + C153761 * C4591 +
            C23992 * C4586 + C25819 + C25819 + C153790 * C4592 +
            C23990 * C4587 + C25820 + C25820 + C153809 * C4593) *
               C153513 * C153774 +
           (C25831 + C25830 + C25829) * C153513 * C23988 + C25825 * C23987) *
              C153413 * C1221) *
         C153378) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153513 *
                C28229 +
            C28439 * C28230 + C28440 * C28231 + C28441 * C28232 +
            C28442 * C28233) *
               C153413 * C1131 -
           (C28443 * C28233 + C28442 * C28232 + C28441 * C28231 +
            C28440 * C28230 + C28439 * C28229) *
               C153413 * C153449) *
              C1133 +
          ((C28444 * C28229 + C28445 * C28230 + C28446 * C28231 +
            C28447 * C28232 + C28448 * C28233) *
               C153413 * C153449 -
           (C28447 * C28233 + C28446 * C28232 + C28445 * C28231 +
            C28444 * C28230 +
            (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C153513 *
                C28229) *
               C153413 * C1131) *
              C1134 +
          (((C28234 * C146 + C28247 + C28247 + C153338 * C162) * C153513 *
                C28229 +
            C28740 * C28230 + C28741 * C28231 + C28742 * C28232 +
            C28743 * C28233) *
               C153413 * C1131 -
           ((C28234 * C4585 + C28727 + C28727 + C153338 * C4591) * C153513 *
                C28233 +
            C28743 * C28232 + C28742 * C28231 + C28741 * C28230 +
            C28740 * C28229) *
               C153413 * C153449) *
              C1135)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153513 *
               C28229 +
           C28439 * C28230 + C28440 * C28231 + C28441 * C28232 +
           C28442 * C28233) *
              C153413 * C1218 -
          (C28443 * C28233 + C28442 * C28232 + C28441 * C28231 +
           C28440 * C28230 + C28439 * C28229) *
              C153413 * C1219 +
          (C28440 * C28229 + C28441 * C28230 + C28442 * C28231 +
           C28443 * C28232 + C29302 * C28233) *
              C153413 * C1220 -
          ((C28234 * C29292 + C29298 + C29298 + C153338 * C29294) * C153513 *
               C28233 +
           C29302 * C28232 + C28443 * C28231 + C28442 * C28230 +
           C28441 * C28229) *
              C153413 * C1221) *
         C153378) /
            (p * q * std::sqrt(p + q));
    d2ee[370] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 + C169 + C169 + C121 * C160 + C136 * C145 + C170 +
             C170 + C122 * C161 + C138 * C146 + C171 + C171 + C123 * C162 +
             C140 * C147 + C172 + C172 + C124 * C163 + C142 * C148 + C173 +
             C173 + C125 * C164) *
                C153513 * C153501 * C1938 -
            (C142 * C496 + C533 + C533 + C125 * C520 + C140 * C497 + C534 +
             C534 + C124 * C521 + C138 * C498 + C535 + C535 + C123 * C522 +
             C136 * C499 + C536 + C536 + C122 * C523 + C134 * C500 + C537 +
             C537 + C121 * C524) *
                C153513 * C153501 * C153477) *
               C153724 +
           ((C134 * C981 + C1000 + C1000 + C121 * C993 + C136 * C982 + C1001 +
             C1001 + C122 * C994 + C138 * C983 + C1002 + C1002 + C123 * C995 +
             C140 * C984 + C1003 + C1003 + C124 * C996 + C142 * C985 + C1004 +
             C1004 + C125 * C997) *
                C153513 * C153501 * C153477 -
            (C142 * C315 + C352 + C352 + C125 * C339 + C140 * C316 + C353 +
             C353 + C124 * C340 + C138 * C317 + C354 + C354 + C123 * C341 +
             C136 * C318 + C355 + C355 + C122 * C342 + C134 * C319 + C356 +
             C356 + C121 * C343) *
                C153513 * C153501 * C1938) *
               C153449) *
              C153716 +
          (((C134 * C499 + C543 + C543 + C121 * C523 + C136 * C498 + C544 +
             C544 + C122 * C522 + C138 * C497 + C545 + C545 + C123 * C521 +
             C140 * C496 + C546 + C546 + C124 * C520 + C142 * C506 + C547 +
             C547 + C125 * C530) *
                C153513 * C153501 * C153477 -
            (C142 * C149 + C174 + C174 + C125 * C165 + C140 * C148 + C175 +
             C175 + C124 * C164 + C138 * C147 + C176 + C176 + C123 * C163 +
             C136 * C146 + C177 + C177 + C122 * C162 + C134 * C145 + C178 +
             C178 + C121 * C161) *
                C153513 * C153501 * C1938) *
               C153724 +
           ((C134 * C318 + C362 + C362 + C121 * C342 + C136 * C317 + C363 +
             C363 + C122 * C341 + C138 * C316 + C364 + C364 + C123 * C340 +
             C140 * C315 + C365 + C365 + C124 * C339 + C142 * C325 + C366 +
             C366 + C125 * C349) *
                C153513 * C153501 * C1938 -
            (C142 * C986 + C1005 + C1005 + C125 * C998 + C140 * C985 + C1006 +
             C1006 + C124 * C997 + C138 * C984 + C1007 + C1007 + C123 * C996 +
             C136 * C983 + C1008 + C1008 + C122 * C995 + C134 * C982 + C1009 +
             C1009 + C121 * C994) *
                C153513 * C153501 * C153477) *
               C153449) *
              C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 +
              C2737 + C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
              C153761 * C162) *
                 C153513 * C153812 +
             (C3086 + C3087 + C3088) * C153513 * C153800 + C3108 * C153774) *
                C1938 -
            (C5625 * C153774 + (C4213 + C4214 + C4215) * C153513 * C153800 +
             (C2733 * C498 + C3346 + C3346 + C153761 * C522 + C2731 * C499 +
              C3347 + C3347 + C2724 * C523 + C2729 * C500 + C3348 + C3348 +
              C2723 * C524) *
                 C153513 * C153812) *
                C153477) *
               C153724 +
           (((C4215 + C4214 + C4213) * C153513 * C153812 +
             (C4212 + C4211 + C4210) * C153513 * C153800 +
             (C5629 + C5630 + C5631) * C153513 * C153774) *
                C153477 -
            (C4609 * C153774 + (C3091 + C3090 + C3089) * C153513 * C153800 +
             (C3088 + C3087 + C3086) * C153513 * C153812) *
                C1938) *
               C153449) *
              C153716 +
          ((((C2729 * C499 + C3358 + C3358 + C2723 * C523 + C2731 * C498 +
              C3359 + C3359 + C2724 * C522 + C2733 * C497 + C3360 + C3360 +
              C153761 * C521) *
                 C153513 * C153812 +
             (C4216 + C4217 + C4218) * C153513 * C153800 +
             (C4219 + C4220 + C4221) * C153513 * C153774) *
                C153477 -
            (C3109 * C153774 + (C3097 + C3096 + C3095) * C153513 * C153800 +
             (C2733 * C147 + C2751 + C2751 + C153761 * C163 + C2731 * C146 +
              C2752 + C2752 + C2724 * C162 + C2729 * C145 + C2753 + C2753 +
              C2723 * C161) *
                 C153513 * C153812) *
                C1938) *
               C153724 +
           (((C3095 + C3096 + C3097) * C153513 * C153812 +
             (C3098 + C3099 + C3100) * C153513 * C153800 +
             (C3101 + C3102 + C3103) * C153513 * C153774) *
                C1938 -
            ((C2733 * C4146 + C4183 + C4183 + C153761 * C4154 + C2731 * C4145 +
              C4184 + C4184 + C2724 * C4153 + C2729 * C4144 + C4185 + C4185 +
              C2723 * C4152) *
                 C153513 * C153774 +
             (C4221 + C4220 + C4219) * C153513 * C153800 +
             (C4218 + C4217 + C4216) * C153513 * C153812) *
                C153477) *
               C153449) *
              C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
              C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 +
              C23999 + C153761 * C162) *
                 C153513 * C23987 +
             (C24335 + C24336 + C24337) * C153513 * C23988 + C24357 * C153774) *
                C1938 -
            (C26823 * C153774 + (C25438 + C25439 + C25440) * C153513 * C23988 +
             (C23994 * C498 + C24583 + C24583 + C153761 * C522 + C23992 * C499 +
              C24584 + C24584 + C153790 * C523 + C23990 * C500 + C24585 +
              C24585 + C153809 * C524) *
                 C153513 * C23987) *
                C153477) *
               C153724 +
           (((C25440 + C25439 + C25438) * C153513 * C23987 +
             (C25437 + C25436 + C25435) * C153513 * C23988 +
             (C26827 + C26828 + C26829) * C153513 * C153774) *
                C153477 -
            (C25825 * C153774 + (C24340 + C24339 + C24338) * C153513 * C23988 +
             (C24337 + C24336 + C24335) * C153513 * C23987) *
                C1938) *
               C153449) *
              C153716 +
          ((((C23990 * C499 + C24595 + C24595 + C153809 * C523 + C23992 * C498 +
              C24596 + C24596 + C153790 * C522 + C23994 * C497 + C24597 +
              C24597 + C153761 * C521) *
                 C153513 * C23987 +
             (C25441 + C25442 + C25443) * C153513 * C23988 +
             (C25444 + C25445 + C25446) * C153513 * C153774) *
                C153477 -
            (C24358 * C153774 + (C24346 + C24345 + C24344) * C153513 * C23988 +
             (C23994 * C147 + C24012 + C24012 + C153761 * C163 + C23992 * C146 +
              C24013 + C24013 + C153790 * C162 + C23990 * C145 + C24014 +
              C24014 + C153809 * C161) *
                 C153513 * C23987) *
                C1938) *
               C153724 +
           (((C24344 + C24345 + C24346) * C153513 * C23987 +
             (C24347 + C24348 + C24349) * C153513 * C23988 +
             (C24350 + C24351 + C24352) * C153513 * C153774) *
                C1938 -
            ((C23994 * C4146 + C25408 + C25408 + C153761 * C4154 +
              C23992 * C4145 + C25409 + C25409 + C153790 * C4153 +
              C23990 * C4144 + C25410 + C25410 + C153809 * C4152) *
                 C153513 * C153774 +
             (C25446 + C25445 + C25444) * C153513 * C23988 +
             (C25443 + C25442 + C25441) * C153513 * C23987) *
                C153477) *
               C153449) *
              C153384)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153513 *
                 C28229 +
             C28439 * C28230 + C28440 * C28231 + C28441 * C28232 +
             C28442 * C28233) *
                C1938 -
            (C29081 * C28233 + C29082 * C28232 + C29083 * C28231 +
             C29084 * C28230 +
             (C28234 * C500 + C28581 + C28581 + C153338 * C524) * C153513 *
                 C28229) *
                C153477) *
               C153724 +
           ((C29084 * C28229 + C29083 * C28230 + C29082 * C28231 +
             C29081 * C28232 + C29868 * C28233) *
                C153477 -
            (C28443 * C28233 + C28442 * C28232 + C28441 * C28231 +
             C28440 * C28230 + C28439 * C28229) *
                C1938) *
               C153449) *
              C153716 +
          ((((C28234 * C499 + C28587 + C28587 + C153338 * C523) * C153513 *
                 C28229 +
             C29085 * C28230 + C29086 * C28231 + C29087 * C28232 +
             C29088 * C28233) *
                C153477 -
            (C28447 * C28233 + C28446 * C28232 + C28445 * C28231 +
             C28444 * C28230 +
             (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C153513 *
                 C28229) *
                C1938) *
               C153724 +
           ((C28444 * C28229 + C28445 * C28230 + C28446 * C28231 +
             C28447 * C28232 + C28448 * C28233) *
                C1938 -
            ((C28234 * C29033 + C29056 + C29056 + C153338 * C29037) * C153513 *
                 C28233 +
             C29088 * C28232 + C29087 * C28231 + C29086 * C28230 +
             C29085 * C28229) *
                C153477) *
               C153449) *
              C153384)) /
            (p * q * std::sqrt(p + q));
    d2ee[371] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C144 + C169 + C169 + C121 * C160 + C136 * C145 + C170 +
            C170 + C122 * C161 + C138 * C146 + C171 + C171 + C123 * C162 +
            C140 * C147 + C172 + C172 + C124 * C163 + C142 * C148 + C173 +
            C173 + C125 * C164) *
               C153513 * C153501 * C153797 -
           (C142 * C496 + C533 + C533 + C125 * C520 + C140 * C497 + C534 +
            C534 + C124 * C521 + C138 * C498 + C535 + C535 + C123 * C522 +
            C136 * C499 + C536 + C536 + C122 * C523 + C134 * C500 + C537 +
            C537 + C121 * C524) *
               C153513 * C153501 * C153798 +
           (C134 * C501 + C538 + C538 + C121 * C525 + C136 * C502 + C539 +
            C539 + C122 * C526 + C138 * C503 + C540 + C540 + C123 * C527 +
            C140 * C504 + C541 + C541 + C124 * C528 + C142 * C505 + C542 +
            C542 + C125 * C529) *
               C153513 * C153501 * C2454) *
              C153724 +
          ((C134 * C981 + C1000 + C1000 + C121 * C993 + C136 * C982 + C1001 +
            C1001 + C122 * C994 + C138 * C983 + C1002 + C1002 + C123 * C995 +
            C140 * C984 + C1003 + C1003 + C124 * C996 + C142 * C985 + C1004 +
            C1004 + C125 * C997) *
               C153513 * C153501 * C153798 -
           (C142 * C315 + C352 + C352 + C125 * C339 + C140 * C316 + C353 +
            C353 + C124 * C340 + C138 * C317 + C354 + C354 + C123 * C341 +
            C136 * C318 + C355 + C355 + C122 * C342 + C134 * C319 + C356 +
            C356 + C121 * C343) *
               C153513 * C153501 * C153797 -
           (C142 * C1365 + C1381 + C1381 + C125 * C1375 + C140 * C1366 + C1382 +
            C1382 + C124 * C1376 + C138 * C1367 + C1383 + C1383 + C123 * C1377 +
            C136 * C1368 + C1384 + C1384 + C122 * C1378 + C134 * C1369 + C1385 +
            C1385 + C121 * C1379) *
               C153513 * C153501 * C2454) *
              C153449) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 +
             C2737 + C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
             C153761 * C162) *
                C153513 * C153812 +
            (C3086 + C3087 + C3088) * C153513 * C153800 + C3108 * C153774) *
               C153797 -
           (C5625 * C153774 + (C4213 + C4214 + C4215) * C153513 * C153800 +
            (C2733 * C498 + C3346 + C3346 + C153761 * C522 + C2731 * C499 +
             C3347 + C3347 + C2724 * C523 + C2729 * C500 + C3348 + C3348 +
             C2723 * C524) *
                C153513 * C153812) *
               C153798 +
           ((C2729 * C501 + C3349 + C3349 + C2723 * C525 + C2731 * C502 +
             C3350 + C3350 + C2724 * C526 + C2733 * C503 + C3351 + C3351 +
             C153761 * C527) *
                C153513 * C153812 +
            (C4870 + C4871 + C4872) * C153513 * C153800 +
            (C4873 + C4874 + C4875) * C153513 * C153774) *
               C2454) *
              C153724 +
          (((C4215 + C4214 + C4213) * C153513 * C153812 +
            (C4212 + C4211 + C4210) * C153513 * C153800 +
            (C5629 + C5630 + C5631) * C153513 * C153774) *
               C153798 -
           (C4609 * C153774 + (C3091 + C3090 + C3089) * C153513 * C153800 +
            (C3088 + C3087 + C3086) * C153513 * C153812) *
               C153797 -
           ((C2733 * C4833 + C4855 + C4855 + C153761 * C4839 + C2731 * C4834 +
             C4856 + C4856 + C2724 * C4840 + C2729 * C4835 + C4857 + C4857 +
             C2723 * C4841) *
                C153513 * C153774 +
            (C4875 + C4874 + C4873) * C153513 * C153800 +
            (C4872 + C4871 + C4870) * C153513 * C153812) *
               C2454) *
              C153449) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
             C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 +
             C23999 + C153761 * C162) *
                C153513 * C23987 +
            (C24335 + C24336 + C24337) * C153513 * C23988 + C24357 * C153774) *
               C153797 -
           (C26823 * C153774 + (C25438 + C25439 + C25440) * C153513 * C23988 +
            (C23994 * C498 + C24583 + C24583 + C153761 * C522 + C23992 * C499 +
             C24584 + C24584 + C153790 * C523 + C23990 * C500 + C24585 +
             C24585 + C153809 * C524) *
                C153513 * C23987) *
               C153798 +
           ((C23990 * C501 + C24586 + C24586 + C153809 * C525 + C23992 * C502 +
             C24587 + C24587 + C153790 * C526 + C23994 * C503 + C24588 +
             C24588 + C153761 * C527) *
                C153513 * C23987 +
            (C26077 + C26078 + C26079) * C153513 * C23988 +
            (C26080 + C26081 + C26082) * C153513 * C153774) *
               C2454) *
              C153724 +
          (((C25440 + C25439 + C25438) * C153513 * C23987 +
            (C25437 + C25436 + C25435) * C153513 * C23988 +
            (C26827 + C26828 + C26829) * C153513 * C153774) *
               C153798 -
           (C25825 * C153774 + (C24340 + C24339 + C24338) * C153513 * C23988 +
            (C24337 + C24336 + C24335) * C153513 * C23987) *
               C153797 -
           ((C23994 * C4833 + C26062 + C26062 + C153761 * C4839 +
             C23992 * C4834 + C26063 + C26063 + C153790 * C4840 +
             C23990 * C4835 + C26064 + C26064 + C153809 * C4841) *
                C153513 * C153774 +
            (C26082 + C26081 + C26080) * C153513 * C23988 +
            (C26079 + C26078 + C26077) * C153513 * C23987) *
               C2454) *
              C153449) *
         C153378) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153513 *
                C28229 +
            C28439 * C28230 + C28440 * C28231 + C28441 * C28232 +
            C28442 * C28233) *
               C153797 -
           (C29081 * C28233 + C29082 * C28232 + C29083 * C28231 +
            C29084 * C28230 +
            (C28234 * C500 + C28581 + C28581 + C153338 * C524) * C153513 *
                C28229) *
               C153798 +
           ((C28234 * C501 + C28582 + C28582 + C153338 * C525) * C153513 *
                C28229 +
            C29449 * C28230 + C29450 * C28231 + C29451 * C28232 +
            C29452 * C28233) *
               C2454) *
              C153724 +
          ((C29084 * C28229 + C29083 * C28230 + C29082 * C28231 +
            C29081 * C28232 + C29868 * C28233) *
               C153798 -
           (C28443 * C28233 + C28442 * C28232 + C28441 * C28231 +
            C28440 * C28230 + C28439 * C28229) *
               C153797 -
           ((C28234 * C29424 + C29436 + C29436 + C153338 * C29426) * C153513 *
                C28233 +
            C29452 * C28232 + C29451 * C28231 + C29450 * C28230 +
            C29449 * C28229) *
               C2454) *
              C153449) *
         C153378) /
            (p * q * std::sqrt(p + q));
    d2ee[372] +=
        (-std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C144 + C169 + C169 + C121 * C160 + C136 * C145 + C170 +
            C170 + C122 * C161 + C138 * C146 + C171 + C171 + C123 * C162 +
            C140 * C147 + C172 + C172 + C124 * C163 + C142 * C148 + C173 +
            C173 + C125 * C164) *
               C153513 * C153501 * C1938 -
           (C142 * C496 + C533 + C533 + C125 * C520 + C140 * C497 + C534 +
            C534 + C124 * C521 + C138 * C498 + C535 + C535 + C123 * C522 +
            C136 * C499 + C536 + C536 + C122 * C523 + C134 * C500 + C537 +
            C537 + C121 * C524) *
               C153513 * C153501 * C153477) *
              C310 +
          ((C134 * C981 + C1000 + C1000 + C121 * C993 + C136 * C982 + C1001 +
            C1001 + C122 * C994 + C138 * C983 + C1002 + C1002 + C123 * C995 +
            C140 * C984 + C1003 + C1003 + C124 * C996 + C142 * C985 + C1004 +
            C1004 + C125 * C997) *
               C153513 * C153501 * C153477 -
           (C142 * C315 + C352 + C352 + C125 * C339 + C140 * C316 + C353 +
            C353 + C124 * C340 + C138 * C317 + C354 + C354 + C123 * C341 +
            C136 * C318 + C355 + C355 + C122 * C342 + C134 * C319 + C356 +
            C356 + C121 * C343) *
               C153513 * C153501 * C1938) *
              C311 +
          ((C134 * C320 + C357 + C357 + C121 * C344 + C136 * C321 + C358 +
            C358 + C122 * C345 + C138 * C322 + C359 + C359 + C123 * C346 +
            C140 * C323 + C360 + C360 + C124 * C347 + C142 * C324 + C361 +
            C361 + C125 * C348) *
               C153513 * C153501 * C1938 -
           (C142 * C1796 + C1812 + C1812 + C125 * C1806 + C140 * C1797 + C1813 +
            C1813 + C124 * C1807 + C138 * C1798 + C1814 + C1814 + C123 * C1808 +
            C136 * C1799 + C1815 + C1815 + C122 * C1809 + C134 * C1800 + C1816 +
            C1816 + C121 * C1810) *
               C153513 * C153501 * C153477) *
              C312) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C144 + C169 + C169 + C121 * C160 + C136 * C145 + C170 +
            C170 + C122 * C161 + C138 * C146 + C171 + C171 + C123 * C162 +
            C140 * C147 + C172 + C172 + C124 * C163 + C142 * C148 + C173 +
            C173 + C125 * C164) *
               C153513 * C153501 * C1938 -
           (C142 * C496 + C533 + C533 + C125 * C520 + C140 * C497 + C534 +
            C534 + C124 * C521 + C138 * C498 + C535 + C535 + C123 * C522 +
            C136 * C499 + C536 + C536 + C122 * C523 + C134 * C500 + C537 +
            C537 + C121 * C524) *
               C153513 * C153501 * C153477) *
              C153397 * C1133 +
          ((C134 * C499 + C543 + C543 + C121 * C523 + C136 * C498 + C544 +
            C544 + C122 * C522 + C138 * C497 + C545 + C545 + C123 * C521 +
            C140 * C496 + C546 + C546 + C124 * C520 + C142 * C506 + C547 +
            C547 + C125 * C530) *
               C153513 * C153501 * C153477 -
           (C142 * C149 + C174 + C174 + C125 * C165 + C140 * C148 + C175 +
            C175 + C124 * C164 + C138 * C147 + C176 + C176 + C123 * C163 +
            C136 * C146 + C177 + C177 + C122 * C162 + C134 * C145 + C178 +
            C178 + C121 * C161) *
               C153513 * C153501 * C1938) *
              C153397 * C1134 +
          ((C134 * C146 + C179 + C179 + C121 * C162 + C136 * C147 + C180 +
            C180 + C122 * C163 + C138 * C148 + C181 + C181 + C123 * C164 +
            C140 * C149 + C182 + C182 + C124 * C165 + C142 * C150 + C183 +
            C183 + C125 * C166) *
               C153513 * C153501 * C1938 -
           (C142 * C811 + C815 + C815 + C125 * C813 + C140 * C506 + C816 +
            C816 + C124 * C530 + C138 * C496 + C817 + C817 + C123 * C520 +
            C136 * C497 + C818 + C818 + C122 * C521 + C134 * C498 + C819 +
            C819 + C121 * C522) *
               C153513 * C153501 * C153477) *
              C153397 * C1135)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((C134 * C144 + C169 + C169 + C121 * C160 + C136 * C145 + C170 + C170 +
           C122 * C161 + C138 * C146 + C171 + C171 + C123 * C162 + C140 * C147 +
           C172 + C172 + C124 * C163 + C142 * C148 + C173 + C173 +
           C125 * C164) *
              C153513 * C153501 * C2144 -
          (C142 * C496 + C533 + C533 + C125 * C520 + C140 * C497 + C534 + C534 +
           C124 * C521 + C138 * C498 + C535 + C535 + C123 * C522 + C136 * C499 +
           C536 + C536 + C122 * C523 + C134 * C500 + C537 + C537 +
           C121 * C524) *
              C153513 * C153501 * C2145 +
          (C134 * C501 + C538 + C538 + C121 * C525 + C136 * C502 + C539 + C539 +
           C122 * C526 + C138 * C503 + C540 + C540 + C123 * C527 + C140 * C504 +
           C541 + C541 + C124 * C528 + C142 * C505 + C542 + C542 +
           C125 * C529) *
              C153513 * C153501 * C2146 -
          (C142 * C2148 + C2164 + C2164 + C125 * C2158 + C140 * C2149 + C2165 +
           C2165 + C124 * C2159 + C138 * C2150 + C2166 + C2166 + C123 * C2160 +
           C136 * C2151 + C2167 + C2167 + C122 * C2161 + C134 * C2152 + C2168 +
           C2168 + C121 * C2162) *
              C153513 * C153501 * C2147) *
         C153397 * C153378) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 +
             C2737 + C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
             C153761 * C162) *
                C153513 * C153812 +
            (C3086 + C3087 + C3088) * C153513 * C153800 + C3108 * C153774) *
               C1938 -
           (C5625 * C153774 + (C4213 + C4214 + C4215) * C153513 * C153800 +
            (C2733 * C498 + C3346 + C3346 + C153761 * C522 + C2731 * C499 +
             C3347 + C3347 + C2724 * C523 + C2729 * C500 + C3348 + C3348 +
             C2723 * C524) *
                C153513 * C153812) *
               C153477) *
              C153397 * C1133 +
          (((C2729 * C499 + C3358 + C3358 + C2723 * C523 + C2731 * C498 +
             C3359 + C3359 + C2724 * C522 + C2733 * C497 + C3360 + C3360 +
             C153761 * C521) *
                C153513 * C153812 +
            (C4216 + C4217 + C4218) * C153513 * C153800 +
            (C4219 + C4220 + C4221) * C153513 * C153774) *
               C153477 -
           (C3109 * C153774 + (C3097 + C3096 + C3095) * C153513 * C153800 +
            (C2733 * C147 + C2751 + C2751 + C153761 * C163 + C2731 * C146 +
             C2752 + C2752 + C2724 * C162 + C2729 * C145 + C2753 + C2753 +
             C2723 * C161) *
                C153513 * C153812) *
               C1938) *
              C153397 * C1134 +
          (((C2729 * C146 + C2754 + C2754 + C2723 * C162 + C2731 * C147 +
             C2755 + C2755 + C2724 * C163 + C2733 * C148 + C2756 + C2756 +
             C153761 * C164) *
                C153513 * C153812 +
            (C3621 + C3622 + C3623) * C153513 * C153800 +
            (C3624 + C3625 + C3626) * C153513 * C153774) *
               C1938 -
           ((C2733 * C1796 + C3845 + C3845 + C153761 * C1806 + C2731 * C1797 +
             C3846 + C3846 + C2724 * C1807 + C2729 * C1798 + C3847 + C3847 +
             C2723 * C1808) *
                C153513 * C153774 +
            (C2733 * C985 + C3848 + C3848 + C153761 * C997 + C2731 * C984 +
             C3849 + C3849 + C2724 * C996 + C2729 * C983 + C3850 + C3850 +
             C2723 * C995) *
                C153513 * C153800 +
            (C2733 * C496 + C3851 + C3851 + C153761 * C520 + C2731 * C497 +
             C3852 + C3852 + C2724 * C521 + C2729 * C498 + C3853 + C3853 +
             C2723 * C522) *
                C153513 * C153812) *
               C153477) *
              C153397 * C1135)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 +
             C2737 + C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
             C153761 * C162) *
                C153513 * C153812 +
            (C3086 + C3087 + C3088) * C153513 * C153800 + C3108 * C153774) *
               C1938 -
           (C5625 * C153774 + (C4213 + C4214 + C4215) * C153513 * C153800 +
            (C2733 * C498 + C3346 + C3346 + C153761 * C522 + C2731 * C499 +
             C3347 + C3347 + C2724 * C523 + C2729 * C500 + C3348 + C3348 +
             C2723 * C524) *
                C153513 * C153812) *
               C153477) *
              C310 +
          (((C4215 + C4214 + C4213) * C153513 * C153812 +
            (C4212 + C4211 + C4210) * C153513 * C153800 +
            (C5629 + C5630 + C5631) * C153513 * C153774) *
               C153477 -
           (C4609 * C153774 + (C3091 + C3090 + C3089) * C153513 * C153800 +
            (C3088 + C3087 + C3086) * C153513 * C153812) *
               C1938) *
              C311 +
          ((C3108 * C153812 + (C3094 + C3093 + C3092) * C153513 * C153800 +
            (C4613 + C4614 + C4615) * C153513 * C153774) *
               C1938 -
           ((C2733 * C5601 + C5618 + C5618 + C153761 * C5607 + C2731 * C5602 +
             C5619 + C5619 + C2724 * C5608 + C2729 * C5603 + C5620 + C5620 +
             C2723 * C5609) *
                C153513 * C153774 +
            (C5631 + C5630 + C5629) * C153513 * C153800 + C5625 * C153812) *
               C153477) *
              C312) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 + C2737 +
            C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
            C153761 * C162) *
               C153513 * C153812 +
           (C3086 + C3087 + C3088) * C153513 * C153800 + C3108 * C153774) *
              C2144 -
          (C5625 * C153774 + (C4213 + C4214 + C4215) * C153513 * C153800 +
           (C2733 * C498 + C3346 + C3346 + C153761 * C522 + C2731 * C499 +
            C3347 + C3347 + C2724 * C523 + C2729 * C500 + C3348 + C3348 +
            C2723 * C524) *
               C153513 * C153812) *
              C2145 +
          ((C2729 * C501 + C3349 + C3349 + C2723 * C525 + C2731 * C502 + C3350 +
            C3350 + C2724 * C526 + C2733 * C503 + C3351 + C3351 +
            C153761 * C527) *
               C153513 * C153812 +
           (C4870 + C4871 + C4872) * C153513 * C153800 +
           (C4873 + C4874 + C4875) * C153513 * C153774) *
              C2146 -
          ((C2733 * C6213 + C6232 + C6232 + C153761 * C6225 + C2731 * C6214 +
            C6233 + C6233 + C2724 * C6226 + C2729 * C6215 + C6234 + C6234 +
            C2723 * C6227) *
               C153513 * C153774 +
           (C2733 * C6216 + C6235 + C6235 + C153761 * C6228 + C2731 * C6217 +
            C6236 + C6236 + C2724 * C6229 + C2729 * C6218 + C6237 + C6237 +
            C2723 * C6230) *
               C153513 * C153800 +
           (C2733 * C2150 + C6238 + C6238 + C153761 * C2160 + C2731 * C2151 +
            C6239 + C6239 + C2724 * C2161 + C2729 * C2152 + C6240 + C6240 +
            C2723 * C2162) *
               C153513 * C153812) *
              C2147) *
         C153397 * C153378) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
             C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 +
             C23999 + C153761 * C162) *
                C153513 * C23987 +
            (C24335 + C24336 + C24337) * C153513 * C23988 + C24357 * C153774) *
               C1938 -
           (C26823 * C153774 + (C25438 + C25439 + C25440) * C153513 * C23988 +
            (C23994 * C498 + C24583 + C24583 + C153761 * C522 + C23992 * C499 +
             C24584 + C24584 + C153790 * C523 + C23990 * C500 + C24585 +
             C24585 + C153809 * C524) *
                C153513 * C23987) *
               C153477) *
              C153397 * C1133 +
          (((C23990 * C499 + C24595 + C24595 + C153809 * C523 + C23992 * C498 +
             C24596 + C24596 + C153790 * C522 + C23994 * C497 + C24597 +
             C24597 + C153761 * C521) *
                C153513 * C23987 +
            (C25441 + C25442 + C25443) * C153513 * C23988 +
            (C25444 + C25445 + C25446) * C153513 * C153774) *
               C153477 -
           (C24358 * C153774 + (C24346 + C24345 + C24344) * C153513 * C23988 +
            (C23994 * C147 + C24012 + C24012 + C153761 * C163 + C23992 * C146 +
             C24013 + C24013 + C153790 * C162 + C23990 * C145 + C24014 +
             C24014 + C153809 * C161) *
                C153513 * C23987) *
               C1938) *
              C153397 * C1134 +
          (((C23990 * C146 + C24015 + C24015 + C153809 * C162 + C23992 * C147 +
             C24016 + C24016 + C153790 * C163 + C23994 * C148 + C24017 +
             C24017 + C153761 * C164) *
                C153513 * C23987 +
            (C24858 + C24859 + C24860) * C153513 * C23988 +
            (C24861 + C24862 + C24863) * C153513 * C153774) *
               C1938 -
           ((C23994 * C1796 + C25082 + C25082 + C153761 * C1806 +
             C23992 * C1797 + C25083 + C25083 + C153790 * C1807 +
             C23990 * C1798 + C25084 + C25084 + C153809 * C1808) *
                C153513 * C153774 +
            (C23994 * C985 + C25085 + C25085 + C153761 * C997 + C23992 * C984 +
             C25086 + C25086 + C153790 * C996 + C23990 * C983 + C25087 +
             C25087 + C153809 * C995) *
                C153513 * C23988 +
            (C23994 * C496 + C25088 + C25088 + C153761 * C520 + C23992 * C497 +
             C25089 + C25089 + C153790 * C521 + C23990 * C498 + C25090 +
             C25090 + C153809 * C522) *
                C153513 * C23987) *
               C153477) *
              C153397 * C1135)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
             C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 +
             C23999 + C153761 * C162) *
                C153513 * C23987 +
            (C24335 + C24336 + C24337) * C153513 * C23988 + C24357 * C153774) *
               C1938 -
           (C26823 * C153774 + (C25438 + C25439 + C25440) * C153513 * C23988 +
            (C23994 * C498 + C24583 + C24583 + C153761 * C522 + C23992 * C499 +
             C24584 + C24584 + C153790 * C523 + C23990 * C500 + C24585 +
             C24585 + C153809 * C524) *
                C153513 * C23987) *
               C153477) *
              C310 +
          (((C25440 + C25439 + C25438) * C153513 * C23987 +
            (C25437 + C25436 + C25435) * C153513 * C23988 +
            (C26827 + C26828 + C26829) * C153513 * C153774) *
               C153477 -
           (C25825 * C153774 + (C24340 + C24339 + C24338) * C153513 * C23988 +
            (C24337 + C24336 + C24335) * C153513 * C23987) *
               C1938) *
              C311 +
          ((C24357 * C23987 + (C24343 + C24342 + C24341) * C153513 * C23988 +
            (C25829 + C25830 + C25831) * C153513 * C153774) *
               C1938 -
           ((C23994 * C5601 + C26816 + C26816 + C153761 * C5607 +
             C23992 * C5602 + C26817 + C26817 + C153790 * C5608 +
             C23990 * C5603 + C26818 + C26818 + C153809 * C5609) *
                C153513 * C153774 +
            (C26829 + C26828 + C26827) * C153513 * C23988 + C26823 * C23987) *
               C153477) *
              C312) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
            C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 + C23999 +
            C153761 * C162) *
               C153513 * C23987 +
           (C24335 + C24336 + C24337) * C153513 * C23988 + C24357 * C153774) *
              C2144 -
          (C26823 * C153774 + (C25438 + C25439 + C25440) * C153513 * C23988 +
           (C23994 * C498 + C24583 + C24583 + C153761 * C522 + C23992 * C499 +
            C24584 + C24584 + C153790 * C523 + C23990 * C500 + C24585 + C24585 +
            C153809 * C524) *
               C153513 * C23987) *
              C2145 +
          ((C23990 * C501 + C24586 + C24586 + C153809 * C525 + C23992 * C502 +
            C24587 + C24587 + C153790 * C526 + C23994 * C503 + C24588 + C24588 +
            C153761 * C527) *
               C153513 * C23987 +
           (C26077 + C26078 + C26079) * C153513 * C23988 +
           (C26080 + C26081 + C26082) * C153513 * C153774) *
              C2146 -
          ((C23994 * C6213 + C27412 + C27412 + C153761 * C6225 +
            C23992 * C6214 + C27413 + C27413 + C153790 * C6226 +
            C23990 * C6215 + C27414 + C27414 + C153809 * C6227) *
               C153513 * C153774 +
           (C23994 * C6216 + C27415 + C27415 + C153761 * C6228 +
            C23992 * C6217 + C27416 + C27416 + C153790 * C6229 +
            C23990 * C6218 + C27417 + C27417 + C153809 * C6230) *
               C153513 * C23988 +
           (C23994 * C2150 + C27418 + C27418 + C153761 * C2160 +
            C23992 * C2151 + C27419 + C27419 + C153790 * C2161 +
            C23990 * C2152 + C27420 + C27420 + C153809 * C2162) *
               C153513 * C23987) *
              C2147) *
         C153397 * C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153513 *
                C28229 +
            C28439 * C28230 + C28440 * C28231 + C28441 * C28232 +
            C28442 * C28233) *
               C1938 -
           (C29081 * C28233 + C29082 * C28232 + C29083 * C28231 +
            C29084 * C28230 +
            (C28234 * C500 + C28581 + C28581 + C153338 * C524) * C153513 *
                C28229) *
               C153477) *
              C153397 * C1133 +
          (((C28234 * C499 + C28587 + C28587 + C153338 * C523) * C153513 *
                C28229 +
            C29085 * C28230 + C29086 * C28231 + C29087 * C28232 +
            C29088 * C28233) *
               C153477 -
           (C28447 * C28233 + C28446 * C28232 + C28445 * C28231 +
            C28444 * C28230 +
            (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C153513 *
                C28229) *
               C1938) *
              C153397 * C1134 +
          (((C28234 * C146 + C28247 + C28247 + C153338 * C162) * C153513 *
                C28229 +
            C28740 * C28230 + C28741 * C28231 + C28742 * C28232 +
            C28743 * C28233) *
               C1938 -
           ((C28234 * C5601 + C28866 + C28866 + C153338 * C5607) * C153513 *
                C28233 +
            (C28234 * C4145 + C28867 + C28867 + C153338 * C4153) * C153513 *
                C28232 +
            (C28234 * C1798 + C28868 + C28868 + C153338 * C1808) * C153513 *
                C28231 +
            (C28234 * C983 + C28869 + C28869 + C153338 * C995) * C153513 *
                C28230 +
            (C28234 * C498 + C28870 + C28870 + C153338 * C522) * C153513 *
                C28229) *
               C153477) *
              C153397 * C1135)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153513 *
                C28229 +
            C28439 * C28230 + C28440 * C28231 + C28441 * C28232 +
            C28442 * C28233) *
               C1938 -
           (C29081 * C28233 + C29082 * C28232 + C29083 * C28231 +
            C29084 * C28230 +
            (C28234 * C500 + C28581 + C28581 + C153338 * C524) * C153513 *
                C28229) *
               C153477) *
              C310 +
          ((C29084 * C28229 + C29083 * C28230 + C29082 * C28231 +
            C29081 * C28232 + C29868 * C28233) *
               C153477 -
           (C28443 * C28233 + C28442 * C28232 + C28441 * C28231 +
            C28440 * C28230 + C28439 * C28229) *
               C1938) *
              C311 +
          ((C28440 * C28229 + C28441 * C28230 + C28442 * C28231 +
            C28443 * C28232 + C29302 * C28233) *
               C1938 -
           ((C28234 * C29858 + C29864 + C29864 + C153338 * C29860) * C153513 *
                C28233 +
            C29868 * C28232 + C29081 * C28231 + C29082 * C28230 +
            C29083 * C28229) *
               C153477) *
              C312) *
         C153378) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153513 *
               C28229 +
           C28439 * C28230 + C28440 * C28231 + C28441 * C28232 +
           C28442 * C28233) *
              C2144 -
          (C29081 * C28233 + C29082 * C28232 + C29083 * C28231 +
           C29084 * C28230 +
           (C28234 * C500 + C28581 + C28581 + C153338 * C524) * C153513 *
               C28229) *
              C2145 +
          ((C28234 * C501 + C28582 + C28582 + C153338 * C525) * C153513 *
               C28229 +
           C29449 * C28230 + C29450 * C28231 + C29451 * C28232 +
           C29452 * C28233) *
              C2146 -
          ((C28234 * C30194 + C30201 + C30201 + C153338 * C30198) * C153513 *
               C28233 +
           (C28234 * C30195 + C30202 + C30202 + C153338 * C30199) * C153513 *
               C28232 +
           (C28234 * C6215 + C30203 + C30203 + C153338 * C6227) * C153513 *
               C28231 +
           (C28234 * C6218 + C30204 + C30204 + C153338 * C6230) * C153513 *
               C28230 +
           (C28234 * C2152 + C30205 + C30205 + C153338 * C2162) * C153513 *
               C28229) *
              C2147) *
         C153397 * C153378) /
            (p * q * std::sqrt(p + q));
    d2ee[373] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C144 + C169 + C169 + C121 * C160 + C136 * C145 + C170 +
            C170 + C122 * C161 + C138 * C146 + C171 + C171 + C123 * C162 +
            C140 * C147 + C172 + C172 + C124 * C163 + C142 * C148 + C173 +
            C173 + C125 * C164) *
               C153513 * C153501 * C153797 -
           (C142 * C496 + C533 + C533 + C125 * C520 + C140 * C497 + C534 +
            C534 + C124 * C521 + C138 * C498 + C535 + C535 + C123 * C522 +
            C136 * C499 + C536 + C536 + C122 * C523 + C134 * C500 + C537 +
            C537 + C121 * C524) *
               C153513 * C153501 * C153798 +
           (C134 * C501 + C538 + C538 + C121 * C525 + C136 * C502 + C539 +
            C539 + C122 * C526 + C138 * C503 + C540 + C540 + C123 * C527 +
            C140 * C504 + C541 + C541 + C124 * C528 + C142 * C505 + C542 +
            C542 + C125 * C529) *
               C153513 * C153501 * C2454) *
              C153397 * C153716 +
          ((C134 * C499 + C543 + C543 + C121 * C523 + C136 * C498 + C544 +
            C544 + C122 * C522 + C138 * C497 + C545 + C545 + C123 * C521 +
            C140 * C496 + C546 + C546 + C124 * C520 + C142 * C506 + C547 +
            C547 + C125 * C530) *
               C153513 * C153501 * C153798 -
           (C142 * C149 + C174 + C174 + C125 * C165 + C140 * C148 + C175 +
            C175 + C124 * C164 + C138 * C147 + C176 + C176 + C123 * C163 +
            C136 * C146 + C177 + C177 + C122 * C162 + C134 * C145 + C178 +
            C178 + C121 * C161) *
               C153513 * C153501 * C153797 -
           (C142 * C507 + C548 + C548 + C125 * C531 + C140 * C505 + C549 +
            C549 + C124 * C529 + C138 * C504 + C550 + C550 + C123 * C528 +
            C136 * C503 + C551 + C551 + C122 * C527 + C134 * C502 + C552 +
            C552 + C121 * C526) *
               C153513 * C153501 * C2454) *
              C153397 * C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 +
             C2737 + C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
             C153761 * C162) *
                C153513 * C153812 +
            (C3086 + C3087 + C3088) * C153513 * C153800 + C3108 * C153774) *
               C153797 -
           (C5625 * C153774 + (C4213 + C4214 + C4215) * C153513 * C153800 +
            (C2733 * C498 + C3346 + C3346 + C153761 * C522 + C2731 * C499 +
             C3347 + C3347 + C2724 * C523 + C2729 * C500 + C3348 + C3348 +
             C2723 * C524) *
                C153513 * C153812) *
               C153798 +
           ((C2729 * C501 + C3349 + C3349 + C2723 * C525 + C2731 * C502 +
             C3350 + C3350 + C2724 * C526 + C2733 * C503 + C3351 + C3351 +
             C153761 * C527) *
                C153513 * C153812 +
            (C4870 + C4871 + C4872) * C153513 * C153800 +
            (C4873 + C4874 + C4875) * C153513 * C153774) *
               C2454) *
              C153397 * C153716 +
          (((C2729 * C499 + C3358 + C3358 + C2723 * C523 + C2731 * C498 +
             C3359 + C3359 + C2724 * C522 + C2733 * C497 + C3360 + C3360 +
             C153761 * C521) *
                C153513 * C153812 +
            (C4216 + C4217 + C4218) * C153513 * C153800 +
            (C4219 + C4220 + C4221) * C153513 * C153774) *
               C153798 -
           (C3109 * C153774 + (C3097 + C3096 + C3095) * C153513 * C153800 +
            (C2733 * C147 + C2751 + C2751 + C153761 * C163 + C2731 * C146 +
             C2752 + C2752 + C2724 * C162 + C2729 * C145 + C2753 + C2753 +
             C2723 * C161) *
                C153513 * C153812) *
               C153797 -
           ((C2733 * C3330 + C3367 + C3367 + C153761 * C3338 + C2731 * C3329 +
             C3368 + C3368 + C2724 * C3337 + C2729 * C3328 + C3369 + C3369 +
             C2723 * C3336) *
                C153513 * C153774 +
            (C2733 * C1366 + C3370 + C3370 + C153761 * C1376 + C2731 * C1367 +
             C3371 + C3371 + C2724 * C1377 + C2729 * C1368 + C3372 + C3372 +
             C2723 * C1378) *
                C153513 * C153800 +
            (C2733 * C504 + C3373 + C3373 + C153761 * C528 + C2731 * C503 +
             C3374 + C3374 + C2724 * C527 + C2729 * C502 + C3375 + C3375 +
             C2723 * C526) *
                C153513 * C153812) *
               C2454) *
              C153397 * C153384)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
             C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 +
             C23999 + C153761 * C162) *
                C153513 * C23987 +
            (C24335 + C24336 + C24337) * C153513 * C23988 + C24357 * C153774) *
               C153797 -
           (C26823 * C153774 + (C25438 + C25439 + C25440) * C153513 * C23988 +
            (C23994 * C498 + C24583 + C24583 + C153761 * C522 + C23992 * C499 +
             C24584 + C24584 + C153790 * C523 + C23990 * C500 + C24585 +
             C24585 + C153809 * C524) *
                C153513 * C23987) *
               C153798 +
           ((C23990 * C501 + C24586 + C24586 + C153809 * C525 + C23992 * C502 +
             C24587 + C24587 + C153790 * C526 + C23994 * C503 + C24588 +
             C24588 + C153761 * C527) *
                C153513 * C23987 +
            (C26077 + C26078 + C26079) * C153513 * C23988 +
            (C26080 + C26081 + C26082) * C153513 * C153774) *
               C2454) *
              C153397 * C153716 +
          (((C23990 * C499 + C24595 + C24595 + C153809 * C523 + C23992 * C498 +
             C24596 + C24596 + C153790 * C522 + C23994 * C497 + C24597 +
             C24597 + C153761 * C521) *
                C153513 * C23987 +
            (C25441 + C25442 + C25443) * C153513 * C23988 +
            (C25444 + C25445 + C25446) * C153513 * C153774) *
               C153798 -
           (C24358 * C153774 + (C24346 + C24345 + C24344) * C153513 * C23988 +
            (C23994 * C147 + C24012 + C24012 + C153761 * C163 + C23992 * C146 +
             C24013 + C24013 + C153790 * C162 + C23990 * C145 + C24014 +
             C24014 + C153809 * C161) *
                C153513 * C23987) *
               C153797 -
           ((C23994 * C3330 + C24604 + C24604 + C153761 * C3338 +
             C23992 * C3329 + C24605 + C24605 + C153790 * C3337 +
             C23990 * C3328 + C24606 + C24606 + C153809 * C3336) *
                C153513 * C153774 +
            (C23994 * C1366 + C24607 + C24607 + C153761 * C1376 +
             C23992 * C1367 + C24608 + C24608 + C153790 * C1377 +
             C23990 * C1368 + C24609 + C24609 + C153809 * C1378) *
                C153513 * C23988 +
            (C23994 * C504 + C24610 + C24610 + C153761 * C528 + C23992 * C503 +
             C24611 + C24611 + C153790 * C527 + C23990 * C502 + C24612 +
             C24612 + C153809 * C526) *
                C153513 * C23987) *
               C2454) *
              C153397 * C153384)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153513 *
                C28229 +
            C28439 * C28230 + C28440 * C28231 + C28441 * C28232 +
            C28442 * C28233) *
               C153797 -
           (C29081 * C28233 + C29082 * C28232 + C29083 * C28231 +
            C29084 * C28230 +
            (C28234 * C500 + C28581 + C28581 + C153338 * C524) * C153513 *
                C28229) *
               C153798 +
           ((C28234 * C501 + C28582 + C28582 + C153338 * C525) * C153513 *
                C28229 +
            C29449 * C28230 + C29450 * C28231 + C29451 * C28232 +
            C29452 * C28233) *
               C2454) *
              C153397 * C153716 +
          (((C28234 * C499 + C28587 + C28587 + C153338 * C523) * C153513 *
                C28229 +
            C29085 * C28230 + C29086 * C28231 + C29087 * C28232 +
            C29088 * C28233) *
               C153798 -
           (C28447 * C28233 + C28446 * C28232 + C28445 * C28231 +
            C28444 * C28230 +
            (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C153513 *
                C28229) *
               C153797 -
           ((C28234 * C28571 + C28592 + C28592 + C153338 * C28575) * C153513 *
                C28233 +
            (C28234 * C4834 + C28593 + C28593 + C153338 * C4840) * C153513 *
                C28232 +
            (C28234 * C3328 + C28594 + C28594 + C153338 * C3336) * C153513 *
                C28231 +
            (C28234 * C1368 + C28595 + C28595 + C153338 * C1378) * C153513 *
                C28230 +
            (C28234 * C502 + C28596 + C28596 + C153338 * C526) * C153513 *
                C28229) *
               C2454) *
              C153397 * C153384)) /
            (p * q * std::sqrt(p + q));
    d2ee[374] +=
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C144 + C169 + C169 + C121 * C160 + C136 * C145 + C170 +
            C170 + C122 * C161 + C138 * C146 + C171 + C171 + C123 * C162 +
            C140 * C147 + C172 + C172 + C124 * C163 + C142 * C148 + C173 +
            C173 + C125 * C164) *
               C153513 * C153501 * C1938 -
           (C142 * C496 + C533 + C533 + C125 * C520 + C140 * C497 + C534 +
            C534 + C124 * C521 + C138 * C498 + C535 + C535 + C123 * C522 +
            C136 * C499 + C536 + C536 + C122 * C523 + C134 * C500 + C537 +
            C537 + C121 * C524) *
               C153513 * C153501 * C153477) *
              C153397 * C1133 +
          ((C134 * C499 + C543 + C543 + C121 * C523 + C136 * C498 + C544 +
            C544 + C122 * C522 + C138 * C497 + C545 + C545 + C123 * C521 +
            C140 * C496 + C546 + C546 + C124 * C520 + C142 * C506 + C547 +
            C547 + C125 * C530) *
               C153513 * C153501 * C153477 -
           (C142 * C149 + C174 + C174 + C125 * C165 + C140 * C148 + C175 +
            C175 + C124 * C164 + C138 * C147 + C176 + C176 + C123 * C163 +
            C136 * C146 + C177 + C177 + C122 * C162 + C134 * C145 + C178 +
            C178 + C121 * C161) *
               C153513 * C153501 * C1938) *
              C153397 * C1134 +
          ((C134 * C146 + C179 + C179 + C121 * C162 + C136 * C147 + C180 +
            C180 + C122 * C163 + C138 * C148 + C181 + C181 + C123 * C164 +
            C140 * C149 + C182 + C182 + C124 * C165 + C142 * C150 + C183 +
            C183 + C125 * C166) *
               C153513 * C153501 * C1938 -
           (C142 * C811 + C815 + C815 + C125 * C813 + C140 * C506 + C816 +
            C816 + C124 * C530 + C138 * C496 + C817 + C817 + C123 * C520 +
            C136 * C497 + C818 + C818 + C122 * C521 + C134 * C498 + C819 +
            C819 + C121 * C522) *
               C153513 * C153501 * C153477) *
              C153397 * C1135)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C144 + C169 + C169 + C121 * C160 + C136 * C145 + C170 +
            C170 + C122 * C161 + C138 * C146 + C171 + C171 + C123 * C162 +
            C140 * C147 + C172 + C172 + C124 * C163 + C142 * C148 + C173 +
            C173 + C125 * C164) *
               C153513 * C153501 * C1938 -
           (C142 * C496 + C533 + C533 + C125 * C520 + C140 * C497 + C534 +
            C534 + C124 * C521 + C138 * C498 + C535 + C535 + C123 * C522 +
            C136 * C499 + C536 + C536 + C122 * C523 + C134 * C500 + C537 +
            C537 + C121 * C524) *
               C153513 * C153501 * C153477) *
              C310 +
          ((C134 * C981 + C1000 + C1000 + C121 * C993 + C136 * C982 + C1001 +
            C1001 + C122 * C994 + C138 * C983 + C1002 + C1002 + C123 * C995 +
            C140 * C984 + C1003 + C1003 + C124 * C996 + C142 * C985 + C1004 +
            C1004 + C125 * C997) *
               C153513 * C153501 * C153477 -
           (C142 * C315 + C352 + C352 + C125 * C339 + C140 * C316 + C353 +
            C353 + C124 * C340 + C138 * C317 + C354 + C354 + C123 * C341 +
            C136 * C318 + C355 + C355 + C122 * C342 + C134 * C319 + C356 +
            C356 + C121 * C343) *
               C153513 * C153501 * C1938) *
              C311 +
          ((C134 * C320 + C357 + C357 + C121 * C344 + C136 * C321 + C358 +
            C358 + C122 * C345 + C138 * C322 + C359 + C359 + C123 * C346 +
            C140 * C323 + C360 + C360 + C124 * C347 + C142 * C324 + C361 +
            C361 + C125 * C348) *
               C153513 * C153501 * C1938 -
           (C142 * C1796 + C1812 + C1812 + C125 * C1806 + C140 * C1797 + C1813 +
            C1813 + C124 * C1807 + C138 * C1798 + C1814 + C1814 + C123 * C1808 +
            C136 * C1799 + C1815 + C1815 + C122 * C1809 + C134 * C1800 + C1816 +
            C1816 + C121 * C1810) *
               C153513 * C153501 * C153477) *
              C312) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 +
             C2737 + C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
             C153761 * C162) *
                C153513 * C153812 +
            (C3086 + C3087 + C3088) * C153513 * C153800 + C3108 * C153774) *
               C1938 -
           (C5625 * C153774 + (C4213 + C4214 + C4215) * C153513 * C153800 +
            (C2733 * C498 + C3346 + C3346 + C153761 * C522 + C2731 * C499 +
             C3347 + C3347 + C2724 * C523 + C2729 * C500 + C3348 + C3348 +
             C2723 * C524) *
                C153513 * C153812) *
               C153477) *
              C153397 * C1133 +
          (((C2729 * C499 + C3358 + C3358 + C2723 * C523 + C2731 * C498 +
             C3359 + C3359 + C2724 * C522 + C2733 * C497 + C3360 + C3360 +
             C153761 * C521) *
                C153513 * C153812 +
            (C4216 + C4217 + C4218) * C153513 * C153800 +
            (C4219 + C4220 + C4221) * C153513 * C153774) *
               C153477 -
           (C3109 * C153774 + (C3097 + C3096 + C3095) * C153513 * C153800 +
            (C2733 * C147 + C2751 + C2751 + C153761 * C163 + C2731 * C146 +
             C2752 + C2752 + C2724 * C162 + C2729 * C145 + C2753 + C2753 +
             C2723 * C161) *
                C153513 * C153812) *
               C1938) *
              C153397 * C1134 +
          (((C2729 * C146 + C2754 + C2754 + C2723 * C162 + C2731 * C147 +
             C2755 + C2755 + C2724 * C163 + C2733 * C148 + C2756 + C2756 +
             C153761 * C164) *
                C153513 * C153812 +
            (C3621 + C3622 + C3623) * C153513 * C153800 +
            (C3624 + C3625 + C3626) * C153513 * C153774) *
               C1938 -
           ((C2733 * C1796 + C3845 + C3845 + C153761 * C1806 + C2731 * C1797 +
             C3846 + C3846 + C2724 * C1807 + C2729 * C1798 + C3847 + C3847 +
             C2723 * C1808) *
                C153513 * C153774 +
            (C2733 * C985 + C3848 + C3848 + C153761 * C997 + C2731 * C984 +
             C3849 + C3849 + C2724 * C996 + C2729 * C983 + C3850 + C3850 +
             C2723 * C995) *
                C153513 * C153800 +
            (C2733 * C496 + C3851 + C3851 + C153761 * C520 + C2731 * C497 +
             C3852 + C3852 + C2724 * C521 + C2729 * C498 + C3853 + C3853 +
             C2723 * C522) *
                C153513 * C153812) *
               C153477) *
              C153397 * C1135)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C2729 * C144 + C2736 + C2736 + C2723 * C160 + C2731 * C145 +
             C2737 + C2737 + C2724 * C161 + C2733 * C146 + C2738 + C2738 +
             C153761 * C162) *
                C153513 * C153812 +
            (C3086 + C3087 + C3088) * C153513 * C153800 + C3108 * C153774) *
               C1938 -
           (C5625 * C153774 + (C4213 + C4214 + C4215) * C153513 * C153800 +
            (C2733 * C498 + C3346 + C3346 + C153761 * C522 + C2731 * C499 +
             C3347 + C3347 + C2724 * C523 + C2729 * C500 + C3348 + C3348 +
             C2723 * C524) *
                C153513 * C153812) *
               C153477) *
              C310 +
          (((C4215 + C4214 + C4213) * C153513 * C153812 +
            (C4212 + C4211 + C4210) * C153513 * C153800 +
            (C5629 + C5630 + C5631) * C153513 * C153774) *
               C153477 -
           (C4609 * C153774 + (C3091 + C3090 + C3089) * C153513 * C153800 +
            (C3088 + C3087 + C3086) * C153513 * C153812) *
               C1938) *
              C311 +
          ((C3108 * C153812 + (C3094 + C3093 + C3092) * C153513 * C153800 +
            (C4613 + C4614 + C4615) * C153513 * C153774) *
               C1938 -
           ((C2733 * C5601 + C5618 + C5618 + C153761 * C5607 + C2731 * C5602 +
             C5619 + C5619 + C2724 * C5608 + C2729 * C5603 + C5620 + C5620 +
             C2723 * C5609) *
                C153513 * C153774 +
            (C5631 + C5630 + C5629) * C153513 * C153800 + C5625 * C153812) *
               C153477) *
              C312) *
         C153378) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
             C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 +
             C23999 + C153761 * C162) *
                C153513 * C23987 +
            (C24335 + C24336 + C24337) * C153513 * C23988 + C24357 * C153774) *
               C1938 -
           (C26823 * C153774 + (C25438 + C25439 + C25440) * C153513 * C23988 +
            (C23994 * C498 + C24583 + C24583 + C153761 * C522 + C23992 * C499 +
             C24584 + C24584 + C153790 * C523 + C23990 * C500 + C24585 +
             C24585 + C153809 * C524) *
                C153513 * C23987) *
               C153477) *
              C153397 * C1133 +
          (((C23990 * C499 + C24595 + C24595 + C153809 * C523 + C23992 * C498 +
             C24596 + C24596 + C153790 * C522 + C23994 * C497 + C24597 +
             C24597 + C153761 * C521) *
                C153513 * C23987 +
            (C25441 + C25442 + C25443) * C153513 * C23988 +
            (C25444 + C25445 + C25446) * C153513 * C153774) *
               C153477 -
           (C24358 * C153774 + (C24346 + C24345 + C24344) * C153513 * C23988 +
            (C23994 * C147 + C24012 + C24012 + C153761 * C163 + C23992 * C146 +
             C24013 + C24013 + C153790 * C162 + C23990 * C145 + C24014 +
             C24014 + C153809 * C161) *
                C153513 * C23987) *
               C1938) *
              C153397 * C1134 +
          (((C23990 * C146 + C24015 + C24015 + C153809 * C162 + C23992 * C147 +
             C24016 + C24016 + C153790 * C163 + C23994 * C148 + C24017 +
             C24017 + C153761 * C164) *
                C153513 * C23987 +
            (C24858 + C24859 + C24860) * C153513 * C23988 +
            (C24861 + C24862 + C24863) * C153513 * C153774) *
               C1938 -
           ((C23994 * C1796 + C25082 + C25082 + C153761 * C1806 +
             C23992 * C1797 + C25083 + C25083 + C153790 * C1807 +
             C23990 * C1798 + C25084 + C25084 + C153809 * C1808) *
                C153513 * C153774 +
            (C23994 * C985 + C25085 + C25085 + C153761 * C997 + C23992 * C984 +
             C25086 + C25086 + C153790 * C996 + C23990 * C983 + C25087 +
             C25087 + C153809 * C995) *
                C153513 * C23988 +
            (C23994 * C496 + C25088 + C25088 + C153761 * C520 + C23992 * C497 +
             C25089 + C25089 + C153790 * C521 + C23990 * C498 + C25090 +
             C25090 + C153809 * C522) *
                C153513 * C23987) *
               C153477) *
              C153397 * C1135)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C23990 * C144 + C23997 + C23997 + C153809 * C160 + C23992 * C145 +
             C23998 + C23998 + C153790 * C161 + C23994 * C146 + C23999 +
             C23999 + C153761 * C162) *
                C153513 * C23987 +
            (C24335 + C24336 + C24337) * C153513 * C23988 + C24357 * C153774) *
               C1938 -
           (C26823 * C153774 + (C25438 + C25439 + C25440) * C153513 * C23988 +
            (C23994 * C498 + C24583 + C24583 + C153761 * C522 + C23992 * C499 +
             C24584 + C24584 + C153790 * C523 + C23990 * C500 + C24585 +
             C24585 + C153809 * C524) *
                C153513 * C23987) *
               C153477) *
              C310 +
          (((C25440 + C25439 + C25438) * C153513 * C23987 +
            (C25437 + C25436 + C25435) * C153513 * C23988 +
            (C26827 + C26828 + C26829) * C153513 * C153774) *
               C153477 -
           (C25825 * C153774 + (C24340 + C24339 + C24338) * C153513 * C23988 +
            (C24337 + C24336 + C24335) * C153513 * C23987) *
               C1938) *
              C311 +
          ((C24357 * C23987 + (C24343 + C24342 + C24341) * C153513 * C23988 +
            (C25829 + C25830 + C25831) * C153513 * C153774) *
               C1938 -
           ((C23994 * C5601 + C26816 + C26816 + C153761 * C5607 +
             C23992 * C5602 + C26817 + C26817 + C153790 * C5608 +
             C23990 * C5603 + C26818 + C26818 + C153809 * C5609) *
                C153513 * C153774 +
            (C26829 + C26828 + C26827) * C153513 * C23988 + C26823 * C23987) *
               C153477) *
              C312) *
         C153378) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153513 *
                C28229 +
            C28439 * C28230 + C28440 * C28231 + C28441 * C28232 +
            C28442 * C28233) *
               C1938 -
           (C29081 * C28233 + C29082 * C28232 + C29083 * C28231 +
            C29084 * C28230 +
            (C28234 * C500 + C28581 + C28581 + C153338 * C524) * C153513 *
                C28229) *
               C153477) *
              C153397 * C1133 +
          (((C28234 * C499 + C28587 + C28587 + C153338 * C523) * C153513 *
                C28229 +
            C29085 * C28230 + C29086 * C28231 + C29087 * C28232 +
            C29088 * C28233) *
               C153477 -
           (C28447 * C28233 + C28446 * C28232 + C28445 * C28231 +
            C28444 * C28230 +
            (C28234 * C145 + C28246 + C28246 + C153338 * C161) * C153513 *
                C28229) *
               C1938) *
              C153397 * C1134 +
          (((C28234 * C146 + C28247 + C28247 + C153338 * C162) * C153513 *
                C28229 +
            C28740 * C28230 + C28741 * C28231 + C28742 * C28232 +
            C28743 * C28233) *
               C1938 -
           ((C28234 * C5601 + C28866 + C28866 + C153338 * C5607) * C153513 *
                C28233 +
            (C28234 * C4145 + C28867 + C28867 + C153338 * C4153) * C153513 *
                C28232 +
            (C28234 * C1798 + C28868 + C28868 + C153338 * C1808) * C153513 *
                C28231 +
            (C28234 * C983 + C28869 + C28869 + C153338 * C995) * C153513 *
                C28230 +
            (C28234 * C498 + C28870 + C28870 + C153338 * C522) * C153513 *
                C28229) *
               C153477) *
              C153397 * C1135)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C28234 * C144 + C28237 + C28237 + C153338 * C160) * C153513 *
                C28229 +
            C28439 * C28230 + C28440 * C28231 + C28441 * C28232 +
            C28442 * C28233) *
               C1938 -
           (C29081 * C28233 + C29082 * C28232 + C29083 * C28231 +
            C29084 * C28230 +
            (C28234 * C500 + C28581 + C28581 + C153338 * C524) * C153513 *
                C28229) *
               C153477) *
              C310 +
          ((C29084 * C28229 + C29083 * C28230 + C29082 * C28231 +
            C29081 * C28232 + C29868 * C28233) *
               C153477 -
           (C28443 * C28233 + C28442 * C28232 + C28441 * C28231 +
            C28440 * C28230 + C28439 * C28229) *
               C1938) *
              C311 +
          ((C28440 * C28229 + C28441 * C28230 + C28442 * C28231 +
            C28443 * C28232 + C29302 * C28233) *
               C1938 -
           ((C28234 * C29858 + C29864 + C29864 + C153338 * C29860) * C153513 *
                C28233 +
            C29868 * C28232 + C29081 * C28231 + C29082 * C28230 +
            C29083 * C28229) *
               C153477) *
              C312) *
         C153378) /
            (p * q * std::sqrt(p + q));
}
