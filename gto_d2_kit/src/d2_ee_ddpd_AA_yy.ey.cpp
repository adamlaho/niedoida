/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

#include "gto_d2_kit/d2_ee_ddpd_AA_yy.hpp"
#include <cmath>
/*

*/
#pragma GCC optimize("O0")
namespace {
    const double Pi = M_PI;
}
#pragma GCC optimize("O0")

void second_derivative_ee_2212_11_22(const double ae,
                                     const double xA,
                                     const double yA,
                                     const double zA,
                                     const double be,
                                     const double xB,
                                     const double yB,
                                     const double zB,
                                     const double ce,
                                     const double xC,
                                     const double yC,
                                     const double zC,
                                     const double de,
                                     const double xD,
                                     const double yD,
                                     const double zD,
                                     const double* const bs,
                                     double* const d2ee)
{
    const double p = ae + be;
    const double q = ce + de;
    const double xP = (ae * xA + be * xB) / p;
    const double yP = (ae * yA + be * yB) / p;
    const double zP = (ae * zA + be * zB) / p;
    const double xQ = (ce * xC + de * xD) / q;
    const double yQ = (ce * yC + de * yD) / q;
    const double zQ = (ce * zC + de * zD) / q;
    const double C151933 = ae + be;
    const double C151932 = ae * be;
    const double C151931 = yA - yB;
    const double C151939 = 0 * be;
    const double C152003 = 0 * ae;
    const double C151994 = 0 * be;
    const double C151992 = 0 * be;
    const double C152082 = 0 * be;
    const double C152157 = p + q;
    const double C152156 = p * q;
    const double C152165 = std::pow(ae, 2);
    const double C152163 = bs[3];
    const double C152162 = yP - yQ;
    const double C152171 = bs[4];
    const double C152169 = xP - xQ;
    const double C152179 = bs[5];
    const double C152188 = bs[6];
    const double C152199 = bs[7];
    const double C152214 = bs[8];
    const double C152238 = bs[2];
    const double C152354 = zP - zQ;
    const double C136 = bs[0];
    const double C153447 = xA - xB;
    const double C153484 = ce + de;
    const double C153483 = ce * de;
    const double C153482 = xC - xD;
    const double C153506 = yC - yD;
    const double C153522 = zC - zD;
    const double C153621 = zA - zB;
    const double C151940 = std::pow(C151933, 2);
    const double C151975 = 2 * C151933;
    const double C151942 = 2 * C151932;
    const double C151941 = C151932 * C151931;
    const double C153604 = std::pow(C151931, 2);
    const double C153663 = C151931 * be;
    const double C153661 = C151931 * ae;
    const double C151997 = C151931 * C151939;
    const double C151996 = -2 * C151939;
    const double C151995 = C151939 / C151933;
    const double C152014 = C152003 / C151933;
    const double C152007 = C151931 * C151994;
    const double C152006 = -2 * C151994;
    const double C152084 = C152082 / C151933;
    const double C152158 = 2 * C152156;
    const double C152166 = std::pow(C152162, 2);
    const double C152228 = C152162 * ae;
    const double C152181 = std::pow(C152169, 2);
    const double C152417 = std::pow(C152354, 2);
    const double C153450 = C153447 * be;
    const double C153449 = C153447 * ae;
    const double C153448 = std::pow(C153447, 2);
    const double C153486 = 2 * C153484;
    const double C153496 = std::pow(C153484, 2);
    const double C153488 = C153482 * de;
    const double C153487 = C153482 * ce;
    const double C153485 = std::pow(C153482, 2);
    const double C153507 = std::pow(C153506, 2);
    const double C153559 = C153506 * de;
    const double C153558 = C153506 * ce;
    const double C153523 = std::pow(C153522, 2);
    const double C153587 = C153522 * de;
    const double C153586 = C153522 * ce;
    const double C153622 = std::pow(C153621, 2);
    const double C153705 = C153621 * be;
    const double C153703 = C153621 * ae;
    const double C151944 = 2 * C151940;
    const double C152080 = 4 * C151940;
    const double C151993 = C151940 * C151975;
    const double C153462 = std::pow(C151975, -1);
    const double C153823 = std::pow(C151975, -2);
    const double C153605 = C153604 * C151932;
    const double C153847 = std::pow(C153661, 2);
    const double C152010 = C151997 / C151933;
    const double C152009 = ae * C151996;
    const double C152016 = C152007 / C151933;
    const double C152015 = ae * C152006;
    const double C152160 = C152158 / C152157;
    const double C152 =
        ((std::pow(yP - yQ, 2) * bs[2] * std::pow(C152158 / C152157, 2) -
          (bs[1] * C152158) / C152157) *
         std::pow(ae, 2)) /
        C151940;
    const double C137 = -(C152169 * bs[1] * C152158) / C152157;
    const double C329 = -(C152162 * bs[1] * C152158) / C152157;
    const double C542 = -(C152354 * bs[1] * C152158) / C152157;
    const double C152173 = C152166 * C152171;
    const double C152182 = C152166 * C152179;
    const double C152190 = C152166 * C152188;
    const double C152202 = C152166 * C152199;
    const double C152217 = C152166 * C152214;
    const double C152229 = C152179 * C152228;
    const double C152232 = C152171 * C152228;
    const double C152241 = C152163 * C152228;
    const double C152265 = C152188 * C152228;
    const double C152285 = C152199 * C152228;
    const double C152312 = C152214 * C152228;
    const double C144 = (-(bs[1] * C152228 * C152158) / C152157) / C151933;
    const double C153816 = std::pow(C153449, 2);
    const double C153451 = C153448 * C151932;
    const double C153497 = std::pow(C153486, -1);
    const double C153835 = std::pow(C153486, -2);
    const double C153501 = 2 * C153496;
    const double C153833 = 4 * C153496;
    const double C153489 = C153485 * C153483;
    const double C153508 = C153507 * C153483;
    const double C153524 = C153523 * C153483;
    const double C153623 = C153622 * C151932;
    const double C153849 = std::pow(C153703, 2);
    const double C152001 = C151939 / C151944;
    const double C152011 = C151994 / C151944;
    const double C152008 = C151992 / C151944;
    const double C152083 = C151933 * C152080;
    const double C153826 = 4 * C151993;
    const double C153606 = C153605 / C151933;
    const double C152018 = 0 - C152010;
    const double C152019 = C152009 / C151993;
    const double C152017 = C151931 * C152009;
    const double C152023 = 0 - C152016;
    const double C152024 = C152015 / C151993;
    const double C152164 = -C152160;
    const double C152172 = std::pow(C152160, 4);
    const double C152189 = std::pow(C152160, 6);
    const double C152215 = std::pow(C152160, 8);
    const double C152237 = std::pow(C152160, 2);
    const double C153 =
        ((xP - xQ) *
         (bs[2] * std::pow(C152160, 2) +
          std::pow(yP - yQ, 2) * bs[3] * std::pow(-C152160, 3)) *
         std::pow(ae, 2)) /
        C151940;
    const double C153452 = C153451 / C151933;
    const double C153490 = C153489 / C153484;
    const double C153509 = C153508 / C153484;
    const double C153525 = C153524 / C153484;
    const double C153624 = C153623 / C151933;
    const double C153607 = -C153606;
    const double C152026 = C152018 * ae;
    const double C152025 = C152017 / C151940;
    const double C152033 = C152023 * ae;
    const double C152167 = std::pow(C152164, 3);
    const double C152180 = std::pow(C152164, 5);
    const double C152200 = std::pow(C152164, 7);
    const double C152174 = C152173 * C152172;
    const double C152178 = C152171 * C152172;
    const double C152233 = C152172 * C152232;
    const double C152191 = C152190 * C152189;
    const double C152198 = C152188 * C152189;
    const double C152269 = C152189 * C152265;
    const double C152218 = C152217 * C152215;
    const double C152318 = C152215 * C152312;
    const double C152240 = C152238 * C152237;
    const double C145 = (C152169 * C152237 * C152238 * C152228) / C151933;
    const double C341 = (C152162 * C152237 * C152238 * C152228) / C151933 -
                        (ae * bs[1] * C152158) / (C152157 * C151933);
    const double C554 = (C152354 * C152237 * C152238 * C152228) / C151933;
    const double C153453 = -C153452;
    const double C153491 = -C153490;
    const double C153510 = -C153509;
    const double C153526 = -C153525;
    const double C153625 = -C153624;
    const double C153608 = std::exp(C153607);
    const double C152034 = C152026 / C151933;
    const double C152040 = C152033 / C151933;
    const double C152170 = C152163 * C152167;
    const double C152242 = C152167 * C152241;
    const double C154 =
        ((bs[2] * std::pow(C152160, 2) + C152166 * C152163 * C152167) *
             C152165 +
         (C152163 * C152167 + C152166 * bs[4] * std::pow(C152160, 4)) *
             C152165 * std::pow(xP - xQ, 2)) /
        C151940;
    const double C353 =
        (2 * ae * C152237 * C152238 * C152228 +
         C152162 * (C152238 * C152237 + C152166 * C152163 * C152167) *
             C152165) /
        C151940;
    const double C152183 = C152182 * C152180;
    const double C152187 = C152179 * C152180;
    const double C152230 = C152180 * C152229;
    const double C152203 = C152202 * C152200;
    const double C152213 = C152199 * C152200;
    const double C152290 = C152200 * C152285;
    const double C152256 = C152178 * C152181;
    const double C152266 = C152169 * C152178;
    const double C152449 = C152178 * C152166;
    const double C152448 = C152162 * C152178;
    const double C152447 = C152178 * ae;
    const double C153386 = C152178 * C152417;
    const double C153410 = C152354 * C152178;
    const double C152248 = C152169 * C152233;
    const double C152406 = C152162 * C152233;
    const double C152443 = ae * C152233;
    const double C152288 = C152198 * C152181;
    const double C152315 = C152169 * C152198;
    const double C152788 = C152198 * C152166;
    const double C152787 = C152162 * C152198;
    const double C152786 = C152198 * ae;
    const double C153436 = C152198 * C152417;
    const double C152272 = C152269 * C152181;
    const double C152284 = C152169 * C152269;
    const double C152652 = C152162 * C152269;
    const double C152780 = ae * C152269;
    const double C152881 = C152269 * C152417;
    const double C152918 = C152354 * C152269;
    const double C152321 = C152318 * C152181;
    const double C152835 = C152169 * C152318;
    const double C152964 = C152162 * C152318;
    const double C152243 = C152240 * ae;
    const double C566 =
        ((zP - zQ) * (C152240 + C152166 * C152163 * C152167) * C152165) /
        C151940;
    const double C138 = C152240 * C152181 - (bs[1] * C152158) / C152157;
    const double C328 = C152162 * C152169 * C152240;
    const double C330 = C152240 * C152166 - (bs[1] * C152158) / C152157;
    const double C541 = C152354 * C152169 * C152240;
    const double C543 = C152240 * C152417 - (bs[1] * C152158) / C152157;
    const double C1057 = C152354 * C152162 * C152240;
    const double C153454 = std::exp(C153453);
    const double C153492 = std::exp(C153491);
    const double C153511 = std::exp(C153510);
    const double C153527 = std::exp(C153526);
    const double C153626 = std::exp(C153625);
    const double C164 = C153608 * C153;
    const double C151943 = C151941 * C153608;
    const double C134 =
        -((C153608 - (C151931 * 2 * C151932 * C151931 * C153608) / C151933) *
          2 * C151932) /
        C151933;
    const double C135 = -(2 * C151932 * C151931 * C153608) / C151933;
    const double C153662 = C153608 / C151975;
    const double C153664 = C153608 * C153661;
    const double C153671 = C153462 * C153608;
    const double C153854 = C153608 * C153663;
    const double C153887 = C153823 * C153608;
    const double C153885 = C153608 * C153847;
    const double C152041 = C152034 - C152011;
    const double C152046 = C152040 - C152008;
    const double C152175 = C152170 + C152174;
    const double C152249 = C152169 * C152170;
    const double C152408 = C152162 * C152170;
    const double C152407 = C152170 * ae;
    const double C139 =
        2 * C152169 * C152240 + C152169 * (C152240 + C152170 * C152181);
    const double C327 = C152162 * (C152240 + C152170 * C152181);
    const double C540 = C152354 * (C152240 + C152170 * C152181);
    const double C1319 =
        2 * C152162 * C152240 + C152162 * (C152240 + C152170 * C152166);
    const double C1892 = C152354 * (C152240 + C152170 * C152166);
    const double C2244 =
        2 * C152354 * C152240 + C152354 * (C152240 + C152170 * C152417);
    const double C7673 = 3 * (C152240 + C152170 * C152417) +
                         C152354 * (2 * C152354 * C152170 +
                                    C152354 * (C152170 + C152178 * C152417));
    const double C152244 = C152162 * C152242;
    const double C146 =
        (C152237 * C152238 * C152228 + C152242 * C152181) / C151933;
    const double C147 =
        (2 * C152169 * C152242 + C152169 * (C152242 + C152233 * C152181)) /
        C151933;
    const double C339 = (C152162 * (C152242 + C152233 * C152181) +
                         (C152240 + C152170 * C152181) * ae) /
                        C151933;
    const double C340 =
        (C152162 * C152169 * C152242 + C152169 * C152240 * ae) / C151933;
    const double C552 = (C152354 * (C152242 + C152233 * C152181)) / C151933;
    const double C553 = (C152354 * C152169 * C152242) / C151933;
    const double C555 =
        (C152237 * C152238 * C152228 + C152242 * C152417) / C151933;
    const double C2249 =
        (2 * C152354 * C152242 + C152354 * (C152242 + C152233 * C152417)) /
        C151933;
    const double C167 = C153608 * C154;
    const double C152184 = C152178 + C152183;
    const double C152192 = C152187 + C152191;
    const double C152267 = C152187 * C152181;
    const double C152287 = C152169 * C152187;
    const double C152655 = C152187 * C152166;
    const double C152654 = C152162 * C152187;
    const double C152653 = C152187 * ae;
    const double C153411 = C152187 * C152417;
    const double C153435 = C152354 * C152187;
    const double C152255 = C152230 * C152181;
    const double C152264 = C152169 * C152230;
    const double C152446 = C152162 * C152230;
    const double C152648 = ae * C152230;
    const double C152736 = C152354 * C152230;
    const double C153251 = C152230 * C152417;
    const double C7677 = (3 * (C152242 + C152233 * C152417) +
                          C152354 * (2 * C152354 * C152233 +
                                     C152354 * (C152233 + C152230 * C152417))) /
                         C151933;
    const double C152204 = C152198 + C152203;
    const double C152219 = C152213 + C152218;
    const double C152316 = C152213 * C152181;
    const double C152836 = C152169 * C152213;
    const double C152967 = C152213 * C152166;
    const double C152966 = C152162 * C152213;
    const double C152965 = C152213 * ae;
    const double C152293 = C152290 * C152181;
    const double C152311 = C152169 * C152290;
    const double C152785 = C152162 * C152290;
    const double C152958 = ae * C152290;
    const double C153020 = C152290 * C152417;
    const double C153046 = C152354 * C152290;
    const double C152258 = C152170 + C152256;
    const double C152270 = 2 * C152266;
    const double C152397 = C152162 * C152266;
    const double C152396 = C152266 * ae;
    const double C152453 = C152170 + C152449;
    const double C152452 = C152448 * ae;
    const double C152656 = 2 * C152448;
    const double C153387 = C152170 + C153386;
    const double C153412 = 2 * C153410;
    const double C152250 = C152162 * C152248;
    const double C556 = (C152169 * C152242 + C152248 * C152417) / C151933;
    const double C152450 = 2 * C152443;
    const double C152292 = C152187 + C152288;
    const double C152319 = 2 * C152315;
    const double C152619 = C152315 * C152166;
    const double C152618 = C152162 * C152315;
    const double C152617 = C152315 * ae;
    const double C153418 = C152315 * C152417;
    const double C152796 = C152187 + C152788;
    const double C152795 = C152787 * ae;
    const double C152968 = 2 * C152787;
    const double C153428 = C152787 * C152417;
    const double C153438 = C152187 + C153436;
    const double C152274 = C152230 + C152272;
    const double C152289 = 2 * C152284;
    const double C152469 = C152162 * C152284;
    const double C152612 = ae * C152284;
    const double C152723 = C152354 * C152284;
    const double C153248 = C152284 * C152417;
    const double C152793 = 2 * C152780;
    const double C152886 = C152230 + C152881;
    const double C152925 = ae * C152918;
    const double C153072 = 2 * C152918;
    const double C152323 = C152290 + C152321;
    const double C152843 = C152162 * C152835;
    const double C7687 = C153608 * C566;
    const double C153456 = C153454 * C153449;
    const double C153455 = C153454 / C151975;
    const double C153464 = C153462 * C153454;
    const double C153819 = C153454 * C153450;
    const double C153874 = C153823 * C153454;
    const double C153868 = C153454 * C153816;
    const double C153493 = C153492 * C153487;
    const double C153498 = C153497 * C153492;
    const double C153830 = C153492 * C153488;
    const double C153827 = C153492 / C153486;
    const double C1227 = C153835 * C153492;
    const double C153560 = C153511 * C153558;
    const double C153563 = C153497 * C153511;
    const double C153839 = C153511 * C153559;
    const double C153834 = C153511 / C153486;
    const double C322 = C153835 * C153511;
    const double C153588 = C153527 * C153586;
    const double C153591 = C153497 * C153527;
    const double C153843 = C153527 * C153587;
    const double C153836 = C153527 / C153486;
    const double C537 = C153835 * C153527;
    const double C153704 = C153626 / C151975;
    const double C153706 = C153626 * C153703;
    const double C153713 = C153462 * C153626;
    const double C153861 = C153626 * C153705;
    const double C153890 = C153823 * C153626;
    const double C153888 = C153626 * C153849;
    const double C151945 = 2 * C151943;
    const double C152004 = C151943 / C151940;
    const double C151998 = -4 * C151943;
    const double C2826 =
        ((0 * ae) / C151933 - C151943 / C151940) / (2 * C151933) +
        (0 * ae) / C151933;
    const double C11351 = (0 * ae) / C151933 - C151943 / C151940;
    const double C165 = C134 * C138;
    const double C162 = C134 * C137;
    const double C371 = C134 * C328;
    const double C584 = C134 * C541;
    const double C7690 = C134 * C543;
    const double C7686 = C134 * C542;
    const double C8492 = C134 * C1057;
    const double C163 = C135 * C145;
    const double C161 = C135 * C144;
    const double C374 = C135 * C341;
    const double C587 = C135 * C554;
    const double C24104 = (C153608 * std::pow(C153663, 2)) / C151940 + C153662;
    const double C153665 = C153664 * C153663;
    const double C153670 = C153664 / C151944;
    const double C153851 = C153664 / C151933;
    const double C153848 = C153462 * C153664;
    const double C153672 = C153671 * C153663;
    const double C153860 = C153671 / C152080;
    const double C153858 = C153661 * C153671;
    const double C153857 = 2 * C153671;
    const double C28348 = C153671 / C153826;
    const double C83545 = C153671 / C151975;
    const double C153892 = C153854 / C151933;
    const double C24105 = (-2 * C153462 * C153854) / C151933;
    const double C153912 = C153885 / C151940;
    const double C152050 = C152041 / C151975;
    const double C152048 = C151931 * C152041;
    const double C152047 = 2 * C152041;
    const double C152054 = C152046 + C151995;
    const double C152176 = C152175 * C152165;
    const double C152251 = C152249 * ae;
    const double C331 = C152169 * C152240 + C152249 * C152166;
    const double C544 = C152169 * C152240 + C152249 * C152417;
    const double C1058 = C152354 * C152162 * C152249;
    const double C1318 =
        2 * C152162 * C152249 + C152162 * (C152249 + C152266 * C152166);
    const double C1891 = C152354 * (C152249 + C152266 * C152166);
    const double C2243 =
        2 * C152354 * C152249 + C152354 * (C152249 + C152266 * C152417);
    const double C152410 = C152408 * ae;
    const double C1461 = C152162 * C152240 + C152408 * C152417;
    const double C6306 =
        2 * C152354 * C152408 + C152354 * (C152408 + C152448 * C152417);
    const double C152409 = C152406 + C152407;
    const double C168 = C134 * C139;
    const double C368 = C134 * C327;
    const double C581 = C134 * C540;
    const double C9864 = C134 * C1892;
    const double C7698 = C134 * C2244;
    const double C10475 = C134 * C7673;
    const double C152245 = C152244 + C152243;
    const double C166 = C135 * C146;
    const double C169 = C135 * C147;
    const double C369 = C135 * C339;
    const double C372 = C135 * C340;
    const double C582 = C135 * C552;
    const double C585 = C135 * C553;
    const double C588 = C135 * C555;
    const double C2260 = C135 * C2249;
    const double C152185 = C152184 * C152165;
    const double C152193 = C152192 * C152165;
    const double C152271 = C152178 + C152267;
    const double C152291 = 2 * C152287;
    const double C152472 = C152287 * C152166;
    const double C152471 = C152162 * C152287;
    const double C152470 = C152287 * ae;
    const double C153383 = C152287 * C152417;
    const double C153417 = C152354 * C152287;
    const double C7674 = 3 * (C152249 + C152266 * C152417) +
                         C152354 * (2 * C152354 * C152266 +
                                    C152354 * (C152266 + C152287 * C152417));
    const double C152661 = C152178 + C152655;
    const double C152660 = C152654 * ae;
    const double C152789 = 2 * C152654;
    const double C153407 = C152654 * C152417;
    const double C153427 = C152354 * C152654;
    const double C9117 = 3 * (C152408 + C152448 * C152417) +
                         C152354 * (2 * C152354 * C152448 +
                                    C152354 * (C152448 + C152654 * C152417));
    const double C152659 = C152652 + C152653;
    const double C153413 = C152178 + C153411;
    const double C153437 = 2 * C153435;
    const double C152257 = C152233 + C152255;
    const double C152268 = 2 * C152264;
    const double C152395 = C152162 * C152264;
    const double C152466 = ae * C152264;
    const double C2248 =
        (2 * C152354 * C152248 + C152354 * (C152248 + C152264 * C152417)) /
        C151933;
    const double C7678 = (3 * (C152248 + C152264 * C152417) +
                          C152354 * (2 * C152354 * C152264 +
                                     C152354 * (C152264 + C152284 * C152417))) /
                         C151933;
    const double C152451 = C152446 + C152447;
    const double C152658 = 2 * C152648;
    const double C152741 = ae * C152736;
    const double C153271 = 2 * C152736;
    const double C153252 = C152233 + C153251;
    const double C7700 = C135 * C7677;
    const double C152205 = C152204 * C152165;
    const double C152220 = C152219 * C152165;
    const double C152320 = C152198 + C152316;
    const double C152846 = C152836 * C152166;
    const double C152845 = C152162 * C152836;
    const double C152844 = C152836 * ae;
    const double C152977 = C152198 + C152967;
    const double C152976 = C152966 * ae;
    const double C152975 = C152964 + C152965;
    const double C152295 = C152269 + C152293;
    const double C152317 = 2 * C152311;
    const double C152616 = C152162 * C152311;
    const double C152830 = ae * C152311;
    const double C152899 = C152311 * C152417;
    const double C152937 = C152354 * C152311;
    const double C152794 = C152785 + C152786;
    const double C152974 = 2 * C152958;
    const double C153027 = C152269 + C153020;
    const double C153055 = ae * C153046;
    const double C152260 = C152258 * ae;
    const double C140 = 3 * (C152240 + C152170 * C152181) +
                        C152169 * (2 * C152249 + C152169 * C152258);
    const double C326 = C152162 * (2 * C152249 + C152169 * C152258);
    const double C332 = C152240 + C152170 * C152181 + C152258 * C152166;
    const double C539 = C152354 * (2 * C152249 + C152169 * C152258);
    const double C545 = C152240 + C152170 * C152181 + C152258 * C152417;
    const double C1059 = C152354 * C152162 * C152258;
    const double C152399 = C152397 * ae;
    const double C1460 = C152162 * C152249 + C152397 * C152417;
    const double C152456 = C152453 * ae;
    const double C3127 = 3 * (C152240 + C152170 * C152166) +
                         C152162 * (2 * C152408 + C152162 * C152453);
    const double C3441 = C152240 + C152170 * C152166 + C152453 * C152417;
    const double C4303 = C152354 * (2 * C152408 + C152162 * C152453);
    const double C10466 =
        4 * (2 * C152354 * C152170 + C152354 * C153387) +
        C152354 *
            (3 * C153387 + C152354 * (2 * C152354 * C152178 +
                                      C152354 * (C152178 + C152187 * C152417)));
    const double C590 = C135 * C556;
    const double C152294 = C152169 * C152292;
    const double C152314 = 3 * C152292;
    const double C152495 = C152292 * C152166;
    const double C152494 = C152162 * C152292;
    const double C152493 = C152292 * ae;
    const double C153380 = C152292 * C152417;
    const double C152625 = C152287 + C152619;
    const double C152624 = C152618 * ae;
    const double C152837 = 2 * C152618;
    const double C153424 = C152618 * C152417;
    const double C153420 = C152287 + C153418;
    const double C152801 = C152162 * C152796;
    const double C152800 = C152796 * ae;
    const double C152969 = 3 * C152796;
    const double C153404 = C152796 * C152417;
    const double C153430 = C152654 + C153428;
    const double C153439 = C152354 * C153438;
    const double C152276 = C152169 * C152274;
    const double C152283 = 3 * C152274;
    const double C152383 = C152162 * C152274;
    const double C152489 = ae * C152274;
    const double C152622 = 2 * C152612;
    const double C152728 = ae * C152723;
    const double C153275 = 2 * C152723;
    const double C153249 = C152264 + C153248;
    const double C152891 = ae * C152886;
    const double C153272 = C152354 * C152886;
    const double C153281 = 3 * C152886;
    const double C152931 = 2 * C152925;
    const double C152325 = C152169 * C152323;
    const double C152580 = C152162 * C152323;
    const double C153457 = C153456 * C153450;
    const double C153463 = C153456 / C151944;
    const double C153820 = C153462 * C153456;
    const double C153818 = C153456 / C151933;
    const double C2818 = (C153454 * std::pow(C153450, 2)) / C151940 + C153455;
    const double C153465 = C153464 * C153450;
    const double C153852 = C153464 / C152080;
    const double C153824 = C153449 * C153464;
    const double C153822 = 2 * C153464;
    const double C126 = C153464 / C153826;
    const double C83548 = C153464 / C151975;
    const double C153870 = C153819 / C151933;
    const double C2819 = (-2 * C153462 * C153819) / C151933;
    const double C153901 = C153868 / C151940;
    const double C153831 = C153493 / C153501;
    const double C153829 = C153493 / C153484;
    const double C153828 = C153493 * C153488;
    const double C1226 = (2 * C153497 * C153493) / C153484;
    const double C153832 = C153498 * C153488;
    const double C133 = C153498 / C153833;
    const double C752 = C153498 / C153486;
    const double C153877 = C153830 / C153484;
    const double C1225 = (C153492 * std::pow(C153487, 2)) / C153496 + C153827;
    const double C153841 = C153560 / C153501;
    const double C153840 = C153560 * C153559;
    const double C153837 = C153560 / C153484;
    const double C321 = (2 * C153497 * C153560) / C153484;
    const double C153842 = C153563 * C153559;
    const double C1313 = C153563 / C153833;
    const double C1601 = C153563 / C153486;
    const double C153879 = C153839 / C153484;
    const double C320 = (C153511 * std::pow(C153558, 2)) / C153496 + C153834;
    const double C153845 = C153588 / C153501;
    const double C153844 = C153588 * C153587;
    const double C153838 = C153588 / C153484;
    const double C536 = (2 * C153497 * C153588) / C153484;
    const double C153846 = C153591 * C153587;
    const double C2239 = C153591 / C153833;
    const double C2546 = C153591 / C153486;
    const double C153882 = C153843 / C153484;
    const double C535 = (C153527 * std::pow(C153586, 2)) / C153496 + C153836;
    const double C47609 = (C153626 * std::pow(C153705, 2)) / C151940 + C153704;
    const double C153707 = C153706 * C153705;
    const double C153712 = C153706 / C151944;
    const double C153853 = C153706 / C151933;
    const double C153850 = C153462 * C153706;
    const double C153714 = C153713 * C153705;
    const double C153867 = C153713 / C152080;
    const double C153865 = C153703 * C153713;
    const double C153864 = 2 * C153713;
    const double C55666 = C153713 / C153826;
    const double C116029 = C153713 / C151975;
    const double C153897 = C153861 / C151933;
    const double C47610 = (-2 * C153462 * C153861) / C151933;
    const double C153914 = C153888 / C151940;
    const double C151946 = C151931 * C151945;
    const double C24115 =
        ((-C151945 / C151933) / C151975 - (0 * be) / C151933) / C151975 -
        (0 * be) / C151933;
    const double C70424 = (-C151945 / C151933) / C151975 - (0 * be) / C151933;
    const double C152022 = C152014 - C152004;
    const double C152012 = C151998 / C151933;
    const double C11365 = C11351 * C339;
    const double C11359 = C11351 * C340;
    const double C11354 = C11351 * C341;
    const double C181 = C162 + C163;
    const double C7716 = C7686 + C587;
    const double C24131 = C24104 * C154;
    const double C24122 = C24104 * C153;
    const double C31203 = C24104 * C566;
    const double C153666 = C153665 / C151940;
    const double C11363 = C153851 * C154;
    const double C11357 = C153851 * C153;
    const double C19379 = C153851 * C566;
    const double C153886 = 2 * C153848;
    const double C153673 = C153672 / C151933;
    const double C153895 = C153858 / C151944;
    const double C153916 = C153851 - C153892;
    const double C70415 = -C153892;
    const double C153925 = C153912 + C153662;
    const double C152056 = C152048 + 0;
    const double C152055 = C152025 + C152047;
    const double C152062 = C152054 / C151975;
    const double C155 =
        (2 * C152169 * C152176 +
         C152169 * (C152176 + (C152171 * C152172 +
                               C152166 * bs[5] * std::pow(C152164, 5)) *
                                  C152165 * std::pow(C152169, 2))) /
        C151940;
    const double C352 = (2 * ae * C152169 * C152167 * C152163 * C152228 +
                         C152162 * C152169 * C152176) /
                        C151940;
    const double C565 = ((zP - zQ) * C152169 * C152176) / C151940;
    const double C567 = ((C152240 + C152166 * C152163 * C152167) * C152165 +
                         C152176 * std::pow(zP - zQ, 2)) /
                        C151940;
    const double C1069 =
        (2 * ae * C152354 * C152242 + C152162 * C152354 * C152176) / C151940;
    const double C152252 = C152250 + C152251;
    const double C376 = C134 * C331;
    const double C589 = C134 * C544;
    const double C1077 = C134 * C1058;
    const double C7426 = C134 * C1891;
    const double C7696 = C134 * C2243;
    const double C8496 = C134 * C1461;
    const double C9125 = C134 * C6306;
    const double C152412 = ae * C152409;
    const double C152411 = C152162 * C152409;
    const double C152435 = C152354 * C152409;
    const double C152445 = 2 * C152409;
    const double C152246 = ae * C152245;
    const double C342 = (C152237 * C152238 * C152228 + C152162 * C152245 +
                         C152162 * C152240 * ae) /
                        C151933;
    const double C1063 = (C152354 * C152245) / C151933;
    const double C1466 = (C152245 + C152409 * C152417) / C151933;
    const double C182 = C165 + C166;
    const double C183 = C168 + C169;
    const double C392 = C368 + C369;
    const double C393 = C371 + C372;
    const double C605 = C581 + C582;
    const double C606 = C584 + C585;
    const double C7717 = C7690 + C588;
    const double C7720 = C7698 + C2260;
    const double C152394 = C152169 * C152185;
    const double C152444 = C152162 * C152185;
    const double C152551 = C152354 * C152185;
    const double C156 =
        (3 * (C152176 + C152185 * C152181) +
         C152169 *
             (2 * C152169 * C152185 +
              C152169 * (C152185 + (C152179 * C152180 +
                                    C152166 * bs[6] * std::pow(C152160, 6)) *
                                       C152165 * C152181))) /
        C151940;
    const double C351 =
        (2 * ae * (C152167 * C152163 * C152228 + C152233 * C152181) +
         C152162 * (C152176 + C152185 * C152181)) /
        C151940;
    const double C564 = ((zP - zQ) * (C152176 + C152185 * C152181)) / C151940;
    const double C568 =
        (C152169 * C152176 + C152169 * C152185 * std::pow(zP - zQ, 2)) /
        C151940;
    const double C1070 =
        (2 * ae * C152354 * C152248 + C152162 * C152354 * C152169 * C152185) /
        C151940;
    const double C1471 = (2 * ae * (C152242 + C152233 * C152417) +
                          C152162 * (C152176 + C152185 * C152417)) /
                         C151940;
    const double C2254 =
        (2 * C152354 * C152176 + C152354 * (C152176 + C152185 * C152417)) /
        C151940;
    const double C152194 = C152193 * C152181;
    const double C152197 = C152169 * C152193;
    const double C152649 = C152162 * C152193;
    const double C152701 = C152193 * C152417;
    const double C152737 = C152354 * C152193;
    const double C152273 = C152169 * C152271;
    const double C152286 = 3 * C152271;
    const double C152385 = C152162 * C152271;
    const double C152384 = C152271 * ae;
    const double C1317 =
        2 * C152162 * C152258 + C152162 * (C152258 + C152271 * C152166);
    const double C1890 = C152354 * (C152258 + C152271 * C152166);
    const double C2242 =
        2 * C152354 * C152258 + C152354 * (C152258 + C152271 * C152417);
    const double C7675 = 3 * (C152258 + C152271 * C152417) +
                         C152354 * (2 * C152354 * C152271 +
                                    C152354 * (C152271 + C152292 * C152417));
    const double C152476 = C152266 + C152472;
    const double C152475 = C152471 * ae;
    const double C152620 = 2 * C152471;
    const double C6304 =
        2 * C152354 * C152397 + C152354 * (C152397 + C152471 * C152417);
    const double C9116 = 3 * (C152397 + C152471 * C152417) +
                         C152354 * (2 * C152354 * C152471 +
                                    C152354 * (C152471 + C152618 * C152417));
    const double C152474 = C152469 + C152470;
    const double C153384 = C152266 + C153383;
    const double C153419 = 2 * C153417;
    const double C7701 = C134 * C7674;
    const double C152665 = C152162 * C152661;
    const double C152664 = C152661 * ae;
    const double C152790 = 3 * C152661;
    const double C6305 =
        2 * C152354 * C152453 + C152354 * (C152453 + C152661 * C152417);
    const double C31195 = 3 * (C152453 + C152661 * C152417) +
                          C152354 * (2 * C152354 * C152661 +
                                     C152354 * (C152661 + C152796 * C152417));
    const double C153408 = C152448 + C153407;
    const double C153429 = 2 * C153427;
    const double C56358 = C134 * C9117;
    const double C152666 = ae * C152659;
    const double C152663 = C152162 * C152659;
    const double C152703 = C152659 * C152417;
    const double C152740 = C152354 * C152659;
    const double C152784 = 2 * C152659;
    const double C153414 = C152354 * C153413;
    const double C153434 = 3 * C153413;
    const double C152259 = C152162 * C152257;
    const double C148 = (3 * (C152242 + C152233 * C152181) +
                         C152169 * (2 * C152248 + C152169 * C152257)) /
                        C151933;
    const double C338 = (C152162 * (2 * C152248 + C152169 * C152257) +
                         (2 * C152249 + C152169 * C152258) * ae) /
                        C151933;
    const double C551 = (C152354 * (2 * C152248 + C152169 * C152257)) / C151933;
    const double C557 =
        (C152242 + C152233 * C152181 + C152257 * C152417) / C151933;
    const double C2247 =
        (2 * C152354 * C152257 + C152354 * (C152257 + C152274 * C152417)) /
        C151933;
    const double C152398 = C152395 + C152396;
    const double C152473 = 2 * C152466;
    const double C2259 = C135 * C2248;
    const double C7702 = C135 * C7678;
    const double C152457 = ae * C152451;
    const double C152455 = C152162 * C152451;
    const double C152535 = C152451 * C152417;
    const double C152553 = C152354 * C152451;
    const double C152651 = 2 * C152451;
    const double C152746 = 2 * C152741;
    const double C10469 =
        (4 * (2 * C152354 * C152233 + C152354 * C153252) +
         C152354 *
             (3 * C153252 + C152354 * (2 * C152736 + C152354 * C152886))) /
        C151933;
    const double C10483 = C10475 + C7700;
    const double C152206 = C152205 * C152181;
    const double C152212 = C152169 * C152205;
    const double C152781 = C152162 * C152205;
    const double C152882 = C152205 * C152417;
    const double C152919 = C152354 * C152205;
    const double C152221 = C152220 * C152181;
    const double C152831 = C152169 * C152220;
    const double C152959 = C152162 * C152220;
    const double C153021 = C152220 * C152417;
    const double C153047 = C152354 * C152220;
    const double C152322 = C152169 * C152320;
    const double C152583 = C152320 * C152166;
    const double C152582 = C152162 * C152320;
    const double C152581 = C152320 * ae;
    const double C152851 = C152315 + C152846;
    const double C152850 = C152845 * ae;
    const double C152849 = C152843 + C152844;
    const double C152983 = C152162 * C152977;
    const double C152982 = C152977 * ae;
    const double C152984 = ae * C152975;
    const double C152981 = C152162 * C152975;
    const double C153025 = C152975 * C152417;
    const double C153052 = C152354 * C152975;
    const double C152297 = C152169 * C152295;
    const double C152310 = 3 * C152295;
    const double C152492 = C152162 * C152295;
    const double C152576 = ae * C152295;
    const double C152710 = C152354 * C152295;
    const double C153245 = C152295 * C152417;
    const double C7679 = (3 * (C152257 + C152274 * C152417) +
                          C152354 * (2 * C152354 * C152274 +
                                     C152354 * (C152274 + C152295 * C152417))) /
                         C151933;
    const double C152623 = C152616 + C152617;
    const double C152841 = 2 * C152830;
    const double C152904 = C152284 + C152899;
    const double C152944 = ae * C152937;
    const double C152802 = ae * C152794;
    const double C152799 = C152162 * C152794;
    const double C152885 = C152794 * C152417;
    const double C152923 = C152354 * C152794;
    const double C152963 = 2 * C152794;
    const double C153033 = ae * C153027;
    const double C153073 = C152354 * C153027;
    const double C153063 = 2 * C153055;
    const double C171 = C134 * C140;
    const double C365 = C134 * C326;
    const double C379 = C134 * C332;
    const double C578 = C134 * C539;
    const double C592 = C134 * C545;
    const double C1080 = C134 * C1059;
    const double C7424 = C134 * C1460;
    const double C9868 = C134 * C3441;
    const double C55924 = C134 * C10466;
    const double C152296 = C152291 + C152294;
    const double C152499 = C152271 + C152495;
    const double C152498 = C152494 * ae;
    const double C152584 = 2 * C152494;
    const double C153381 = C152271 + C153380;
    const double C152629 = C152162 * C152625;
    const double C152628 = C152625 * ae;
    const double C152838 = 3 * C152625;
    const double C153425 = C152471 + C153424;
    const double C153421 = C152354 * C153420;
    const double C152805 = C152789 + C152801;
    const double C153405 = C152661 + C153404;
    const double C153431 = C152354 * C153430;
    const double C153440 = C153437 + C153439;
    const double C152278 = C152268 + C152276;
    const double C152496 = 2 * C152489;
    const double C152733 = 2 * C152728;
    const double C152896 = 2 * C152891;
    const double C153273 = C153271 + C153272;
    const double C152327 = C152317 + C152325;
    const double C153458 = C153457 / C151940;
    const double C153871 = 2 * C153820;
    const double C153466 = C153465 / C151933;
    const double C153875 = C153824 / C151944;
    const double C153902 = C153818 - C153870;
    const double C74249 = -C153870;
    const double C153922 = C153901 + C153455;
    const double C153876 = C153828 / C153496;
    const double C153878 = C153832 / C153484;
    const double C323 = -C153877;
    const double C153880 = C153840 / C153496;
    const double C153881 = C153842 / C153484;
    const double C1223 = -C153879;
    const double C153883 = C153844 / C153496;
    const double C153884 = C153846 / C153484;
    const double C2030 = -C153882;
    const double C153708 = C153707 / C151940;
    const double C153889 = 2 * C153850;
    const double C153715 = C153714 / C151933;
    const double C153900 = C153865 / C151944;
    const double C153919 = C153853 - C153897;
    const double C98459 = -C153897;
    const double C153926 = C153914 + C153704;
    const double C151947 = C151946 / C151933;
    const double C70438 = C70424 * C339;
    const double C70432 = C70424 * C340;
    const double C70427 = C70424 * C341;
    const double C152032 = C151931 * C152022;
    const double C152030 = 2 * C152022;
    const double C152081 = C152022 / C151975;
    const double C187 = C181 + C163;
    const double C7725 = C7716 + C587;
    const double C153667 = C153662 - C153666;
    const double C153913 = C153886 / C151933;
    const double C153674 = C153670 - C153673;
    const double C153927 = C153916 / C151975;
    const double C70436 = C70415 * C154;
    const double C70430 = C70415 * C153;
    const double C78753 = C70415 * C566;
    const double C2842 = C153925 * C154;
    const double C2833 = C153925 * C153;
    const double C52036 = C153925 * C566;
    const double C152063 = C152056 * be;
    const double C152061 = C152055 * be;
    const double C170 = C153608 * C155;
    const double C2857 = C153925 * C155;
    const double C11369 = C153851 * C155;
    const double C24146 = C24104 * C155;
    const double C70442 = C70415 * C155;
    const double C373 = C153608 * C352;
    const double C3157 = C153925 * C352;
    const double C11360 = C153671 * C352;
    const double C11632 = C153851 * C352;
    const double C24125 = C24105 * C352;
    const double C24434 = C24104 * C352;
    const double C70433 = C153671 * C352;
    const double C70705 = C70415 * C352;
    const double C586 = C153608 * C565;
    const double C3471 = C153925 * C565;
    const double C11906 = C153851 * C565;
    const double C24736 = C24104 * C565;
    const double C70979 = C70415 * C565;
    const double C7691 = C153608 * C567;
    const double C19388 = C153851 * C567;
    const double C31209 = C24104 * C567;
    const double C52042 = C153925 * C567;
    const double C78758 = C70415 * C567;
    const double C8493 = C153608 * C1069;
    const double C19381 = C153671 * C1069;
    const double C20393 = C153851 * C1069;
    const double C31205 = C24105 * C1069;
    const double C32004 = C24104 * C1069;
    const double C52834 = C153925 * C1069;
    const double C78755 = C153671 * C1069;
    const double C79811 = C70415 * C1069;
    const double C152253 = ae * C152252;
    const double C343 =
        (C152169 * C152242 + C152162 * C152252 + C152162 * C152249 * ae) /
        C151933;
    const double C1064 = (C152354 * C152252) / C151933;
    const double C607 = C589 + C590;
    const double C152413 = C152242 + C152411;
    const double C152436 = ae * C152435;
    const double C354 =
        ((C152240 + C152166 * C152163 * C152167) * C152165 + C152246 + C152246 +
         C152162 * (2 * ae * C152242 + C152162 * C152176)) /
        C151940;
    const double C375 = C135 * C342;
    const double C2830 = C2826 * C342;
    const double C11633 = C11351 * C342;
    const double C24119 = C24115 * C342;
    const double C70706 = C70424 * C342;
    const double C1076 = C135 * C1063;
    const double C11907 = C11351 * C1063;
    const double C70980 = C70424 * C1063;
    const double C1477 = C135 * C1466;
    const double C11910 = C11351 * C1466;
    const double C70983 = C70424 * C1466;
    const double C188 = C182 + C166;
    const double C189 = C183 + C169;
    const double C400 = C392 + C369;
    const double C401 = C393 + C372;
    const double C613 = C605 + C582;
    const double C614 = C606 + C585;
    const double C7726 = C7717 + C588;
    const double C7729 = C7720 + C2260;
    const double C152454 = C152450 + C152444;
    const double C173 = C153608 * C156;
    const double C2860 = C153925 * C156;
    const double C11378 = C153851 * C156;
    const double C24149 = C24104 * C156;
    const double C70451 = C70415 * C156;
    const double C370 = C153608 * C351;
    const double C3148 = C153925 * C351;
    const double C11366 = C153671 * C351;
    const double C11626 = C153851 * C351;
    const double C24134 = C24105 * C351;
    const double C24425 = C24104 * C351;
    const double C70439 = C153671 * C351;
    const double C70699 = C70415 * C351;
    const double C583 = C153608 * C564;
    const double C3462 = C153925 * C564;
    const double C11900 = C153851 * C564;
    const double C24727 = C24104 * C564;
    const double C70973 = C70415 * C564;
    const double C591 = C153608 * C568;
    const double C3480 = C153925 * C568;
    const double C11913 = C153851 * C568;
    const double C24745 = C24104 * C568;
    const double C70986 = C70415 * C568;
    const double C1079 = C153608 * C1070;
    const double C4321 = C153925 * C1070;
    const double C11903 = C153671 * C1070;
    const double C12647 = C153851 * C1070;
    const double C24733 = C24105 * C1070;
    const double C25574 = C24104 * C1070;
    const double C70976 = C153671 * C1070;
    const double C71720 = C70415 * C1070;
    const double C8497 = C153608 * C1471;
    const double C19386 = C153671 * C1471;
    const double C21206 = C153851 * C1471;
    const double C31211 = C24105 * C1471;
    const double C32010 = C24104 * C1471;
    const double C52840 = C153925 * C1471;
    const double C78760 = C153671 * C1471;
    const double C79816 = C70415 * C1471;
    const double C7699 = C153608 * C2254;
    const double C22978 = C153851 * C2254;
    const double C31219 = C24104 * C2254;
    const double C52052 = C153925 * C2254;
    const double C78769 = C70415 * C2254;
    const double C152195 = C152185 + C152194;
    const double C152201 = 2 * C152197;
    const double C152467 = C152162 * C152197;
    const double C152557 = C152354 * C152197;
    const double C1470 = (2 * ae * (C152248 + C152264 * C152417) +
                          C152162 * (C152394 + C152197 * C152417)) /
                         C151940;
    const double C2253 =
        (2 * C152354 * C152394 + C152354 * (C152394 + C152197 * C152417)) /
        C151940;
    const double C152662 = C152658 + C152649;
    const double C152704 = C152185 + C152701;
    const double C152742 = C152162 * C152737;
    const double C153097 = 2 * C152737;
    const double C152275 = C152270 + C152273;
    const double C152387 = C152385 * ae;
    const double C1459 = C152162 * C152258 + C152385 * C152417;
    const double C6302 =
        2 * C152354 * C152385 + C152354 * (C152385 + C152494 * C152417);
    const double C152386 = C152383 + C152384;
    const double C7428 = C134 * C1890;
    const double C7694 = C134 * C2242;
    const double C7704 = C134 * C7675;
    const double C152479 = C152476 * ae;
    const double C3128 = 3 * (C152249 + C152266 * C152166) +
                         C152162 * (2 * C152397 + C152162 * C152476);
    const double C3442 = C152249 + C152266 * C152166 + C152476 * C152417;
    const double C4304 = C152354 * (2 * C152397 + C152162 * C152476);
    const double C6303 =
        2 * C152354 * C152476 + C152354 * (C152476 + C152625 * C152417);
    const double C8501 = C134 * C6304;
    const double C56364 = C134 * C9116;
    const double C152480 = ae * C152474;
    const double C152478 = C152162 * C152474;
    const double C152539 = C152474 * C152417;
    const double C152559 = C152354 * C152474;
    const double C152615 = 2 * C152474;
    const double C10465 =
        4 * (2 * C152354 * C152266 + C152354 * C153384) +
        C152354 *
            (3 * C153384 + C152354 * (2 * C152354 * C152287 +
                                      C152354 * (C152287 + C152315 * C152417)));
    const double C152669 = C152656 + C152665;
    const double C57121 = C134 * C6305;
    const double C57123 = C134 * C31195;
    const double C34007 =
        4 * (2 * C152354 * C152448 + C152354 * C153408) +
        C152354 *
            (3 * C153408 + C152354 * (2 * C152354 * C152654 +
                                      C152354 * (C152654 + C152787 * C152417)));
    const double C152779 = C152193 + C152666;
    const double C152668 = C152230 + C152663;
    const double C152706 = C152451 + C152703;
    const double C152745 = ae * C152740;
    const double C153070 = 2 * C152740;
    const double C153415 = C153412 + C153414;
    const double C152261 = C152259 + C152260;
    const double C172 = C135 * C148;
    const double C366 = C135 * C338;
    const double C11371 = C11351 * C338;
    const double C70444 = C70424 * C338;
    const double C579 = C135 * C551;
    const double C593 = C135 * C557;
    const double C2258 = C135 * C2247;
    const double C152401 = ae * C152398;
    const double C152400 = C152162 * C152398;
    const double C152432 = C152354 * C152398;
    const double C152468 = 2 * C152398;
    const double C1465 = (C152252 + C152398 * C152417) / C151933;
    const double C7719 = C7696 + C2259;
    const double C7721 = C7701 + C7702;
    const double C152647 = C152185 + C152457;
    const double C152458 = C152233 + C152455;
    const double C152536 = C152409 + C152535;
    const double C152555 = ae * C152553;
    const double C152761 = 2 * C152553;
    const double C10481 = C135 * C10469;
    const double C10484 = C10483 + C7700;
    const double C152207 = C152193 + C152206;
    const double C152216 = 2 * C152212;
    const double C152613 = C152162 * C152212;
    const double C152692 = C152212 * C152417;
    const double C152724 = C152354 * C152212;
    const double C152798 = C152793 + C152781;
    const double C152887 = C152193 + C152882;
    const double C152926 = C152162 * C152919;
    const double C153074 = 2 * C152919;
    const double C152222 = C152205 + C152221;
    const double C152842 = C152162 * C152831;
    const double C152900 = C152831 * C152417;
    const double C152938 = C152354 * C152831;
    const double C152980 = C152974 + C152959;
    const double C153028 = C152205 + C153021;
    const double C153056 = C152162 * C153047;
    const double C152324 = C152319 + C152322;
    const double C152589 = C152292 + C152583;
    const double C152588 = C152582 * ae;
    const double C9115 = 3 * (C152385 + C152494 * C152417) +
                         C152354 * (2 * C152354 * C152494 +
                                    C152354 * (C152494 + C152582 * C152417));
    const double C152587 = C152580 + C152581;
    const double C152855 = C152162 * C152851;
    const double C152854 = C152851 * ae;
    const double C31196 = 3 * (C152476 + C152625 * C152417) +
                          C152354 * (2 * C152354 * C152625 +
                                     C152354 * (C152625 + C152851 * C152417));
    const double C152856 = ae * C152849;
    const double C152853 = C152162 * C152849;
    const double C152903 = C152849 * C152417;
    const double C152942 = C152354 * C152849;
    const double C152987 = C152968 + C152983;
    const double C152986 = C152290 + C152981;
    const double C153032 = C152794 + C153025;
    const double C153061 = ae * C153052;
    const double C152299 = C152289 + C152297;
    const double C152497 = C152492 + C152493;
    const double C152586 = 2 * C152576;
    const double C152715 = ae * C152710;
    const double C153246 = C152274 + C153245;
    const double C7705 = C135 * C7679;
    const double C152630 = ae * C152623;
    const double C152627 = C152162 * C152623;
    const double C152694 = C152623 * C152417;
    const double C152727 = C152354 * C152623;
    const double C152834 = 2 * C152623;
    const double C152909 = ae * C152904;
    const double C153276 = C152354 * C152904;
    const double C10468 =
        (4 * (2 * C152354 * C152264 + C152354 * C153249) +
         C152354 *
             (3 * C153249 + C152354 * (2 * C152723 + C152354 * C152904))) /
        C151933;
    const double C152950 = 2 * C152944;
    const double C152957 = C152205 + C152802;
    const double C152804 = C152269 + C152799;
    const double C152890 = C152659 + C152885;
    const double C152930 = ae * C152923;
    const double C153080 = 2 * C152923;
    const double C153039 = 2 * C153033;
    const double C153083 = C153072 + C153073;
    const double C152298 = C152169 * C152296;
    const double C152313 = 4 * C152296;
    const double C152374 = C152162 * C152296;
    const double C152373 = C152296 * ae;
    const double C152502 = C152499 * ae;
    const double C3129 = 3 * (C152258 + C152271 * C152166) +
                         C152162 * (2 * C152385 + C152162 * C152499);
    const double C3443 = C152258 + C152271 * C152166 + C152499 * C152417;
    const double C4305 = C152354 * (2 * C152385 + C152162 * C152499);
    const double C10464 =
        4 * (2 * C152354 * C152271 + C152354 * C153381) +
        C152354 *
            (3 * C153381 + C152354 * (2 * C152354 * C152292 +
                                      C152354 * (C152292 + C152320 * C152417)));
    const double C152633 = C152620 + C152629;
    const double C56351 =
        4 * (2 * C152354 * C152471 + C152354 * C153425) +
        C152354 *
            (3 * C153425 + C152354 * (2 * C152354 * C152618 +
                                      C152354 * (C152618 + C152845 * C152417)));
    const double C153422 = C153419 + C153421;
    const double C152809 = C152162 * C152805;
    const double C152808 = C152805 * ae;
    const double C152970 = 4 * C152805;
    const double C34006 =
        4 * (2 * C152354 * C152661 + C152354 * C153405) +
        C152354 *
            (3 * C153405 + C152354 * (2 * C152354 * C152796 +
                                      C152354 * (C152796 + C152977 * C152417)));
    const double C153432 = C153429 + C153431;
    const double C153441 = C152354 * C153440;
    const double C152279 = C152162 * C152278;
    const double C149 = (4 * (2 * C152248 + C152169 * C152257) +
                         C152169 * (3 * C152257 + C152169 * C152278)) /
                        C151933;
    const double C550 = (C152354 * (3 * C152257 + C152169 * C152278)) / C151933;
    const double C558 =
        (2 * C152248 + C152169 * C152257 + C152278 * C152417) / C151933;
    const double C152329 = C152169 * C152327;
    const double C152515 = C152162 * C152327;
    const double C153459 = C153455 - C153458;
    const double C153903 = C153871 / C151933;
    const double C153467 = C153463 - C153466;
    const double C153923 = C153902 / C151975;
    const double C153906 = C153827 - C153876;
    const double C153907 = C153831 - C153878;
    const double C153908 = C153834 - C153880;
    const double C153909 = C153841 - C153881;
    const double C153910 = C153836 - C153883;
    const double C153911 = C153845 - C153884;
    const double C153709 = C153704 - C153708;
    const double C153915 = C153889 / C151933;
    const double C153716 = C153712 - C153715;
    const double C153929 = C153919 / C151975;
    const double C151948 = C153608 - C151947;
    const double C152039 = C152032 + C153671;
    const double C152085 = C152081 - C152084;
    const double C193 = C187 + C164;
    const double C7734 = C7725 + C7687;
    const double C83588 = C153667 * C156;
    const double C83585 = C153667 * C155;
    const double C83570 = C153667 * C154;
    const double C83561 = C153667 * C153;
    const double C83873 = C153667 * C352;
    const double C83864 = C153667 * C351;
    const double C84184 = C153667 * C568;
    const double C84175 = C153667 * C565;
    const double C84166 = C153667 * C564;
    const double C85013 = C153667 * C1070;
    const double C93739 = C153667 * C567;
    const double C93727 = C153667 * C566;
    const double C94748 = C153667 * C1069;
    const double C95562 = C153667 * C1471;
    const double C97344 = C153667 * C2254;
    const double C153855 = C153667 * C153661;
    const double C153894 = C153857 + C153667;
    const double C2845 = C153913 * C351;
    const double C2836 = C153913 * C352;
    const double C3468 = C153913 * C1070;
    const double C52044 = C153913 * C1471;
    const double C52038 = C153913 * C1069;
    const double C83573 = C153674 * C351;
    const double C83564 = C153674 * C352;
    const double C84172 = C153674 * C1070;
    const double C93737 = C153674 * C1471;
    const double C93729 = C153674 * C1069;
    const double C153859 = C153674 / C151975;
    const double C153856 = C153674 * C153661;
    const double C34889 = C153927 - (C153667 * C153663) / C151933;
    const double C152067 = C152063 / C151933;
    const double C152066 = C152061 / C151933;
    const double C355 =
        (C152169 * C152176 + C152253 + C152253 +
         C152162 * (2 * ae * C152248 + C152162 * C152169 * C152185)) /
        C151940;
    const double C377 = C135 * C343;
    const double C2838 = C2826 * C343;
    const double C11628 = C11351 * C343;
    const double C24127 = C24115 * C343;
    const double C70701 = C70424 * C343;
    const double C1078 = C135 * C1064;
    const double C11902 = C11351 * C1064;
    const double C70975 = C70424 * C1064;
    const double C615 = C607 + C590;
    const double C152414 = C152413 + C152410;
    const double C1902 =
        (C152354 * C152176 + C152436 + C152436 +
         C152162 * (2 * ae * C152354 * C152233 + C152162 * C152354 * C152185)) /
        C151940;
    const double C8514 = C8492 + C1076;
    const double C8515 = C8496 + C1477;
    const double C194 = C188 + C167;
    const double C195 = C189 + C170;
    const double C409 = C401 + C373;
    const double C622 = C614 + C586;
    const double C7735 = C7726 + C7691;
    const double C408 = C400 + C370;
    const double C621 = C613 + C583;
    const double C7738 = C7729 + C7699;
    const double C157 =
        (4 * (2 * C152169 * C152185 + C152169 * C152195) +
         C152169 * (3 * C152195 +
                    C152169 * (2 * C152169 * C152193 +
                               C152169 * (C152193 + (C152188 * C152189 +
                                                     C152166 * bs[7] *
                                                         std::pow(C152164, 7)) *
                                                        C152165 * C152181)))) /
        C151940;
    const double C350 =
        (2 * ae *
             (2 * C152169 * C152233 + C152169 * (C152233 + C152230 * C152181)) +
         C152162 * (2 * C152169 * C152185 + C152169 * C152195)) /
        C151940;
    const double C563 =
        ((zP - zQ) * (2 * C152169 * C152185 + C152169 * C152195)) / C151940;
    const double C569 =
        (C152176 + C152185 * C152181 + C152195 * std::pow(zP - zQ, 2)) /
        C151940;
    const double C1071 =
        (2 * ae * C152354 * C152257 + C152162 * C152354 * C152195) / C151940;
    const double C152477 = C152473 + C152467;
    const double C3483 = C153913 * C1470;
    const double C7425 = C153608 * C1470;
    const double C11916 = C153671 * C1470;
    const double C20399 = C153851 * C1470;
    const double C24748 = C24105 * C1470;
    const double C32019 = C24104 * C1470;
    const double C52849 = C153925 * C1470;
    const double C70989 = C153671 * C1470;
    const double C78429 = C70415 * C1470;
    const double C84187 = C153674 * C1470;
    const double C94755 = C153667 * C1470;
    const double C7697 = C153608 * C2253;
    const double C19393 = C153851 * C2253;
    const double C31224 = C24104 * C2253;
    const double C52057 = C153925 * C2253;
    const double C78765 = C70415 * C2253;
    const double C93743 = C153667 * C2253;
    const double C152667 = C152162 * C152662;
    const double C152778 = 2 * C152662;
    const double C6318 =
        (2 * ae *
             (2 * C152354 * C152233 + C152354 * (C152233 + C152230 * C152417)) +
         C152162 * (2 * C152551 + C152354 * C152704)) /
        C151940;
    const double C7681 = (3 * (C152176 + C152185 * C152417) +
                          C152354 * (2 * C152551 + C152354 * C152704)) /
                         C151940;
    const double C9123 =
        (2 * ae *
             (3 * (C152233 + C152230 * C152417) +
              C152354 *
                  (2 * C152736 + C152354 * (C152230 + C152269 * C152417))) +
         C152162 * (3 * C152704 +
                    C152354 * (2 * C152737 +
                               C152354 * (C152193 + C152205 * C152417)))) /
        C151940;
    const double C10472 =
        (4 * (2 * C152551 + C152354 * C152704) +
         C152354 * (3 * C152704 +
                    C152354 * (2 * C152737 +
                               C152354 * (C152193 + C152205 * C152417)))) /
        C151940;
    const double C152747 = C152746 + C152742;
    const double C152277 = C152275 * ae;
    const double C337 = (C152162 * (3 * C152257 + C152169 * C152278) +
                         (3 * C152258 + C152169 * C152275) * ae) /
                        C151933;
    const double C141 = 4 * (2 * C152249 + C152169 * C152258) +
                        C152169 * (3 * C152258 + C152169 * C152275);
    const double C325 = C152162 * (3 * C152258 + C152169 * C152275);
    const double C333 = 2 * C152249 + C152169 * C152258 + C152275 * C152166;
    const double C538 = C152354 * (3 * C152258 + C152169 * C152275);
    const double C546 = 2 * C152249 + C152169 * C152258 + C152275 * C152417;
    const double C1060 = C152354 * C152162 * C152275;
    const double C1316 =
        2 * C152162 * C152275 + C152162 * (C152275 + C152296 * C152166);
    const double C1889 = C152354 * (C152275 + C152296 * C152166);
    const double C2241 =
        2 * C152354 * C152275 + C152354 * (C152275 + C152296 * C152417);
    const double C7422 = C134 * C1459;
    const double C8504 = C134 * C6302;
    const double C152389 = ae * C152386;
    const double C152388 = C152162 * C152386;
    const double C152429 = C152354 * C152386;
    const double C152491 = 2 * C152386;
    const double C7431 = C134 * C3442;
    const double C63519 = C134 * C6303;
    const double C152611 = C152197 + C152480;
    const double C152481 = C152264 + C152478;
    const double C152540 = C152398 + C152539;
    const double C152561 = ae * C152559;
    const double C152755 = 2 * C152559;
    const double C55931 = C134 * C10465;
    const double C152672 = C152669 * ae;
    const double C4723 = 4 * (2 * C152408 + C152162 * C152453) +
                         C152162 * (3 * C152453 + C152162 * C152669);
    const double C4959 = 2 * C152408 + C152162 * C152453 + C152669 * C152417;
    const double C5703 = C152354 * (3 * C152453 + C152162 * C152669);
    const double C30191 =
        2 * C152354 * C152669 + C152354 * (C152669 + C152805 * C152417);
    const double C56706 = C134 * C34007;
    const double C152792 = C152779 + C152666;
    const double C152671 = C152668 + C152660;
    const double C152708 = ae * C152706;
    const double C152762 = C152354 * C152706;
    const double C153105 = 3 * C152706;
    const double C152917 = C152737 + C152745;
    const double C55913 =
        5 * (3 * C153387 + C152354 * C153415) +
        C152354 *
            (4 * C153415 +
             C152354 * (3 * C153413 +
                        C152354 * (2 * C152354 * C152187 +
                                   C152354 * (C152187 + C152198 * C152417))));
    const double C152262 = ae * C152261;
    const double C344 = (C152242 + C152233 * C152181 + C152162 * C152261 +
                         C152162 * C152258 * ae) /
                        C151933;
    const double C1065 = (C152354 * C152261) / C151933;
    const double C1464 = (C152261 + C152386 * C152417) / C151933;
    const double C184 = C171 + C172;
    const double C391 = C365 + C366;
    const double C604 = C578 + C579;
    const double C608 = C592 + C593;
    const double C7718 = C7694 + C2258;
    const double C152402 = C152248 + C152400;
    const double C152433 = ae * C152432;
    const double C1476 = C135 * C1465;
    const double C11915 = C11351 * C1465;
    const double C70988 = C70424 * C1465;
    const double C7728 = C7719 + C2259;
    const double C7730 = C7721 + C7702;
    const double C152657 = C152647 + C152457;
    const double C152459 = C152458 + C152452;
    const double C152537 = ae * C152536;
    const double C6312 = (2 * C152435 + C152354 * C152536) / C151933;
    const double C55934 = C55924 + C10481;
    const double C152208 = C152169 * C152207;
    const double C152211 = 3 * C152207;
    const double C152490 = C152162 * C152207;
    const double C152563 = C152354 * C152207;
    const double C1469 = (2 * ae * (C152257 + C152274 * C152417) +
                          C152162 * (C152195 + C152207 * C152417)) /
                         C151940;
    const double C2252 =
        (2 * C152354 * C152195 + C152354 * (C152195 + C152207 * C152417)) /
        C151940;
    const double C152626 = C152622 + C152613;
    const double C152695 = C152197 + C152692;
    const double C152729 = C152162 * C152724;
    const double C153118 = 2 * C152724;
    const double C152803 = C152162 * C152798;
    const double C152956 = 2 * C152798;
    const double C152892 = C152162 * C152887;
    const double C153098 = C152354 * C152887;
    const double C153127 = 3 * C152887;
    const double C152932 = C152931 + C152926;
    const double C152223 = C152169 * C152222;
    const double C152577 = C152162 * C152222;
    const double C152683 = C152222 * C152417;
    const double C152711 = C152354 * C152222;
    const double C152848 = C152841 + C152842;
    const double C152905 = C152212 + C152900;
    const double C152945 = C152162 * C152938;
    const double C152985 = C152162 * C152980;
    const double C153034 = C152162 * C153028;
    const double C153075 = C152354 * C153028;
    const double C153064 = C153063 + C153056;
    const double C152326 = C152169 * C152324;
    const double C152518 = C152324 * C152166;
    const double C152517 = C152162 * C152324;
    const double C152516 = C152324 * ae;
    const double C7676 = 3 * (C152275 + C152296 * C152417) +
                         C152354 * (2 * C152354 * C152296 +
                                    C152354 * (C152296 + C152324 * C152417));
    const double C152593 = C152162 * C152589;
    const double C152592 = C152589 * ae;
    const double C6301 =
        2 * C152354 * C152499 + C152354 * (C152499 + C152589 * C152417);
    const double C152594 = ae * C152587;
    const double C152591 = C152162 * C152587;
    const double C152685 = C152587 * C152417;
    const double C152714 = C152354 * C152587;
    const double C152859 = C152837 + C152855;
    const double C152858 = C152311 + C152853;
    const double C152908 = C152623 + C152903;
    const double C152949 = ae * C152942;
    const double C152991 = C152162 * C152987;
    const double C152990 = C152987 * ae;
    const double C32641 = 3 * (C152669 + C152805 * C152417) +
                          C152354 * (2 * C152354 * C152805 +
                                     C152354 * (C152805 + C152987 * C152417));
    const double C152989 = C152986 + C152976;
    const double C153038 = ae * C153032;
    const double C153081 = C152354 * C153032;
    const double C152301 = C152169 * C152299;
    const double C152309 = 4 * C152299;
    const double C152372 = C152162 * C152299;
    const double C152512 = ae * C152299;
    const double C2246 =
        (2 * C152354 * C152278 + C152354 * (C152278 + C152299 * C152417)) /
        C151933;
    const double C7680 = (3 * (C152278 + C152299 * C152417) +
                          C152354 * (2 * C152354 * C152299 +
                                     C152354 * (C152299 + C152327 * C152417))) /
                         C151933;
    const double C152503 = ae * C152497;
    const double C152501 = C152162 * C152497;
    const double C152543 = C152497 * C152417;
    const double C152565 = C152354 * C152497;
    const double C152579 = 2 * C152497;
    const double C152720 = 2 * C152715;
    const double C10467 =
        (4 * (2 * C152354 * C152274 + C152354 * C153246) +
         C152354 * (3 * C153246 +
                    C152354 * (2 * C152710 +
                               C152354 * (C152295 + C152323 * C152417)))) /
        C151933;
    const double C7722 = C7704 + C7705;
    const double C152829 = C152212 + C152630;
    const double C152632 = C152284 + C152627;
    const double C152697 = C152474 + C152694;
    const double C152732 = ae * C152727;
    const double C153111 = 2 * C152727;
    const double C152914 = 2 * C152909;
    const double C153277 = C153275 + C153276;
    const double C10480 = C135 * C10468;
    const double C152973 = C152957 + C152802;
    const double C152807 = C152804 + C152795;
    const double C152895 = ae * C152890;
    const double C153071 = C152354 * C152890;
    const double C153131 = 3 * C152890;
    const double C153045 = C152919 + C152930;
    const double C153089 = ae * C153083;
    const double C153282 = C152354 * C153083;
    const double C55915 =
        (5 * (3 * C153252 + C152354 * C153273) +
         C152354 *
             (4 * C153273 + C152354 * (3 * C152886 + C152354 * C153083))) /
        C151933;
    const double C152300 = C152286 + C152298;
    const double C152376 = C152374 * ae;
    const double C1458 = C152162 * C152275 + C152374 * C152417;
    const double C7434 = C134 * C3443;
    const double C152636 = C152633 * ae;
    const double C4722 = 4 * (2 * C152397 + C152162 * C152476) +
                         C152162 * (3 * C152476 + C152162 * C152633);
    const double C4958 = 2 * C152397 + C152162 * C152476 + C152633 * C152417;
    const double C5702 = C152354 * (3 * C152476 + C152162 * C152633);
    const double C55914 =
        5 * (3 * C153384 + C152354 * C153422) +
        C152354 *
            (4 * C153422 +
             C152354 * (3 * C153420 +
                        C152354 * (2 * C152354 * C152315 +
                                   C152354 * (C152315 + C152836 * C152417))));
    const double C152812 = C152790 + C152809;
    const double C56702 =
        5 * (3 * C153408 + C152354 * C153432) +
        C152354 *
            (4 * C153432 +
             C152354 * (3 * C153430 +
                        C152354 * (2 * C152354 * C152787 +
                                   C152354 * (C152787 + C152966 * C152417))));
    const double C153442 = C153434 + C153441;
    const double C175 = C135 * C149;
    const double C576 = C135 * C550;
    const double C596 = C135 * C558;
    const double C152331 = C152310 + C152329;
    const double C153817 = C153459 * C153449;
    const double C153873 = C153822 + C153459;
    const double C153825 = C153467 / C151975;
    const double C153821 = C153467 * C153449;
    const double C11344 = C153923 - (C153459 * C153450) / C151933;
    const double C130 =
        (C153906 * C153487) / C153484 + (C153829 - C153877) / C153486;
    const double C131 =
        (C153907 * C153487) / C153484 + (2 * C153498 + C153906) / C153486;
    const double C132 = (C153487 * C153498) / C153501 + C153907 / C153486;
    const double C1310 =
        (C153908 * C153558) / C153484 + (C153837 - C153879) / C153486;
    const double C1311 =
        (C153909 * C153558) / C153484 + (2 * C153563 + C153908) / C153486;
    const double C1312 = (C153558 * C153563) / C153501 + C153909 / C153486;
    const double C2236 =
        (C153910 * C153586) / C153484 + (C153838 - C153882) / C153486;
    const double C2237 =
        (C153911 * C153586) / C153484 + (2 * C153591 + C153910) / C153486;
    const double C2238 = (C153586 * C153591) / C153501 + C153911 / C153486;
    const double C153862 = C153709 * C153703;
    const double C153899 = C153864 + C153709;
    const double C153866 = C153716 / C151975;
    const double C153863 = C153716 * C153703;
    const double C63320 = C153929 - (C153709 * C153705) / C151933;
    const double C151949 = C151948 * C151942;
    const double C152000 = C151948 * ae;
    const double C2822 =
        (((0 - (C151931 * C151939) / C151933) * ae) / C151933 -
         (0 * be) / C151944) /
            (2 * C151933) +
        ((C151931 * ((C151948 * ae) / C151933 - C151939 / C151944) + C153851) *
         ae) /
            C151933 +
        (0 * ae) / C151933 - C151943 / C151940;
    const double C2824 =
        ((C151948 * ae) / C151933 - C151939 / C151944) / (2 * C151933) +
        ((C151931 * ((0 * ae) / C151933 - C151943 / C151940) + C153671) * ae) /
            C151933;
    const double C11349 = (C151948 * ae) / C151933 - C151939 / C151944;
    const double C24111 =
        ((-(0 * be) / C151933) / C151975 -
         ((0 - (C151931 * C151939) / C151933) * be) / C151933) /
            C151975 -
        ((C151931 *
              ((-C151939 / C151933) / C151975 - (C151948 * be) / C151933) +
          C70415) *
         be) /
            C151933 +
        (-C151945 / C151933) / C151975 - (0 * be) / C151933;
    const double C24113 =
        ((-C151939 / C151933) / C151975 - (C151948 * be) / C151933) / C151975 -
        ((C151931 * ((-C151945 / C151933) / C151975 - (0 * be) / C151933) +
          C153671) *
         be) /
            C151933;
    const double C70422 = (-C151995) / C151975 - (C151948 * be) / C151933;
    const double C152045 = C152039 * be;
    const double C83566 = C152085 * C343;
    const double C83558 = C152085 * C342;
    const double C152086 = 2 * C152085;
    const double C28359 =
        (C152085 / C151975 + (0 * ae) / C151933) / C151975 - (0 * be) / C151933;
    const double C34902 = C152085 / C151975 - (0 * be) / C151933;
    const double C74258 = C152085 / C151975 + (0 * ae) / C151933;
    const double C7742 = C7734 * C2818;
    const double C48049 = C7734 * C153922;
    const double C55920 = C7734 * C153454;
    const double C63718 = C7734 * C153818;
    const double C107636 = C7734 * C74249;
    const double C116467 = C7734 * C153459;
    const double C153891 = C153855 / C151933;
    const double C153917 = C153894 / C151975;
    const double C153918 = C153895 + C153859;
    const double C34891 = C153859 - C153672 / C151944;
    const double C153893 = C153856 / C151933;
    const double C34934 = C34889 * C155;
    const double C34931 = C34889 * C154;
    const double C34910 = C34889 * C153;
    const double C35189 = C34889 * C352;
    const double C35458 = C34889 * C568;
    const double C35447 = C34889 * C565;
    const double C35695 = C34889 * C351;
    const double C35913 = C34889 * C564;
    const double C36200 = C34889 * C1070;
    const double C44369 = C34889 * C567;
    const double C44355 = C34889 * C566;
    const double C45041 = C34889 * C1069;
    const double C45583 = C34889 * C1471;
    const double C46795 = C34889 * C2254;
    const double C152070 = C152062 - C152067;
    const double C152069 = C152024 - C152066;
    const double C378 = C153608 * C355;
    const double C2839 = C153887 * C355;
    const double C3166 = C153925 * C355;
    const double C3154 = C153913 * C355;
    const double C11639 = C153851 * C355;
    const double C11629 = C153671 * C355;
    const double C24128 = C153887 * C355;
    const double C24443 = C24104 * C355;
    const double C24431 = C24105 * C355;
    const double C35200 = C34889 * C355;
    const double C70712 = C70415 * C355;
    const double C70702 = C153671 * C355;
    const double C83567 = C83545 * C355;
    const double C83882 = C153667 * C355;
    const double C83870 = C153674 * C355;
    const double C394 = C376 + C377;
    const double C1090 = C1077 + C1078;
    const double C623 = C615 + C591;
    const double C152415 = ae * C152414;
    const double C1324 =
        (2 * C152245 + C152162 * C152414 + (C152240 + C152170 * C152166) * ae) /
        C151933;
    const double C1897 = (C152354 * C152414) / C151933;
    const double C9865 = C153608 * C1902;
    const double C20395 = C153671 * C1902;
    const double C22188 = C153851 * C1902;
    const double C31207 = C153887 * C1902;
    const double C32006 = C24105 * C1902;
    const double C33393 = C24104 * C1902;
    const double C46253 = C34889 * C1902;
    const double C52040 = C153887 * C1902;
    const double C52836 = C153913 * C1902;
    const double C54220 = C153925 * C1902;
    const double C79813 = C153671 * C1902;
    const double C81617 = C70415 * C1902;
    const double C93731 = C83545 * C1902;
    const double C94750 = C153674 * C1902;
    const double C96549 = C153667 * C1902;
    const double C8518 = C8514 + C1076;
    const double C8519 = C8515 + C1477;
    const double C7707 = C622 * C2818;
    const double C7688 = C622 * C2819;
    const double C48058 = C622 * C153922;
    const double C48050 = C622 * C153903;
    const double C55927 = C622 * C153454;
    const double C63726 = C622 * C153818;
    const double C63719 = C622 * C153464;
    const double C107644 = C622 * C74249;
    const double C107637 = C622 * C153464;
    const double C116476 = C622 * C153459;
    const double C116468 = C622 * C153467;
    const double C7743 = C7735 * C2818;
    const double C48052 = C7735 * C153922;
    const double C55921 = C7735 * C153454;
    const double C63720 = C7735 * C153818;
    const double C107638 = C7735 * C74249;
    const double C116470 = C7735 * C153459;
    const double C7708 = C621 * C2819;
    const double C7689 = C621 * C153874;
    const double C8193 = C621 * C2818;
    const double C48059 = C621 * C153903;
    const double C48051 = C621 * C153874;
    const double C48507 = C621 * C153922;
    const double C56186 = C621 * C153454;
    const double C63727 = C621 * C153464;
    const double C64126 = C621 * C153818;
    const double C107645 = C621 * C153464;
    const double C108044 = C621 * C74249;
    const double C116477 = C621 * C153467;
    const double C116469 = C621 * C83548;
    const double C116925 = C621 * C153459;
    const double C7746 = C7738 * C2818;
    const double C48057 = C7738 * C153922;
    const double C55922 = C7738 * C153454;
    const double C63722 = C7738 * C153818;
    const double C107640 = C7738 * C74249;
    const double C116475 = C7738 * C153459;
    const double C176 = C153608 * C157;
    const double C11381 = C153851 * C157;
    const double C70454 = C70415 * C157;
    const double C367 = C153608 * C350;
    const double C2854 = C153913 * C350;
    const double C3758 = C153925 * C350;
    const double C11372 = C153671 * C350;
    const double C11620 = C153851 * C350;
    const double C24143 = C24105 * C350;
    const double C25023 = C24104 * C350;
    const double C70445 = C153671 * C350;
    const double C70693 = C70415 * C350;
    const double C83582 = C153674 * C350;
    const double C84462 = C153667 * C350;
    const double C580 = C153608 * C563;
    const double C3996 = C153925 * C563;
    const double C11894 = C153851 * C563;
    const double C25261 = C24104 * C563;
    const double C70967 = C70415 * C563;
    const double C84700 = C153667 * C563;
    const double C594 = C153608 * C569;
    const double C3489 = C153925 * C569;
    const double C11919 = C153851 * C569;
    const double C24754 = C24104 * C569;
    const double C70992 = C70415 * C569;
    const double C84193 = C153667 * C569;
    const double C1082 = C153608 * C1071;
    const double C3459 = C153913 * C1071;
    const double C4330 = C153925 * C1071;
    const double C11897 = C153671 * C1071;
    const double C12653 = C153851 * C1071;
    const double C24724 = C24105 * C1071;
    const double C25583 = C24104 * C1071;
    const double C70970 = C153671 * C1071;
    const double C71726 = C70415 * C1071;
    const double C84163 = C153674 * C1071;
    const double C85022 = C153667 * C1071;
    const double C9126 = C153608 * C6318;
    const double C22980 = C153671 * C6318;
    const double C31217 = C24105 * C6318;
    const double C32646 = C24104 * C6318;
    const double C52050 = C153913 * C6318;
    const double C53473 = C153925 * C6318;
    const double C60436 = C153851 * C6318;
    const double C78767 = C153671 * C6318;
    const double C80633 = C70415 * C6318;
    const double C97346 = C153674 * C6318;
    const double C149836 = C153667 * C6318;
    const double C10476 = C153608 * C7681;
    const double C34015 = C24104 * C7681;
    const double C54836 = C153925 * C7681;
    const double C62210 = C153851 * C7681;
    const double C82417 = C70415 * C7681;
    const double C151184 = C153667 * C7681;
    const double C34017 = C24105 * C9123;
    const double C54838 = C153913 * C9123;
    const double C56359 = C153608 * C9123;
    const double C62212 = C153671 * C9123;
    const double C68435 = C153851 * C9123;
    const double C82419 = C153671 * C9123;
    const double C135635 = C70415 * C9123;
    const double C151186 = C153674 * C9123;
    const double C55925 = C153608 * C10472;
    const double C69628 = C153851 * C10472;
    const double C136828 = C70415 * C10472;
    const double C152280 = C152279 + C152277;
    const double C363 = C135 * C337;
    const double C11374 = C11351 * C337;
    const double C70447 = C70424 * C337;
    const double C174 = C134 * C141;
    const double C362 = C134 * C325;
    const double C382 = C134 * C333;
    const double C575 = C134 * C538;
    const double C595 = C134 * C546;
    const double C1083 = C134 * C1060;
    const double C15369 = C134 * C1889;
    const double C7713 = C134 * C2241;
    const double C152390 = C152257 + C152388;
    const double C152430 = ae * C152429;
    const double C152621 = C152611 + C152480;
    const double C152482 = C152481 + C152475;
    const double C152541 = ae * C152540;
    const double C6310 = (2 * C152432 + C152354 * C152540) / C151933;
    const double C152674 = ae * C152671;
    const double C152673 = C152162 * C152671;
    const double C152702 = C152671 * C152417;
    const double C152739 = C152354 * C152671;
    const double C152783 = 3 * C152671;
    const double C152763 = C152761 + C152762;
    const double C152924 = C152917 + C152745;
    const double C57463 = C134 * C55913;
    const double C356 = (C152176 + C152185 * C152181 + C152262 + C152262 +
                         C152162 * (2 * ae * C152257 + C152162 * C152195)) /
                        C151940;
    const double C380 = C135 * C344;
    const double C2847 = C2826 * C344;
    const double C11622 = C11351 * C344;
    const double C24136 = C24115 * C344;
    const double C70695 = C70424 * C344;
    const double C83575 = C152085 * C344;
    const double C1081 = C135 * C1065;
    const double C11896 = C11351 * C1065;
    const double C70969 = C70424 * C1065;
    const double C1475 = C135 * C1464;
    const double C11921 = C11351 * C1464;
    const double C70994 = C70424 * C1464;
    const double C190 = C184 + C172;
    const double C399 = C391 + C366;
    const double C612 = C604 + C579;
    const double C616 = C608 + C593;
    const double C7727 = C7718 + C2258;
    const double C152403 = C152402 + C152399;
    const double C1901 =
        (C152354 * C152394 + C152433 + C152433 +
         C152162 * (2 * ae * C152354 * C152264 + C152162 * C152354 * C152197)) /
        C151940;
    const double C7439 = C7424 + C1476;
    const double C7737 = C7728 + C7697;
    const double C152670 = C152657 + C152667;
    const double C152461 = ae * C152459;
    const double C152460 = C152162 * C152459;
    const double C152552 = C152354 * C152459;
    const double C152650 = 3 * C152459;
    const double C3445 = (C152414 + C152459 * C152417) / C151933;
    const double C3449 = (C152176 + C152185 * C152417 + C152537 + C152537 +
                          C152162 * (2 * ae * (C152233 + C152230 * C152417) +
                                     C152162 * (C152185 + C152193 * C152417))) /
                         C151940;
    const double C8500 = C135 * C6312;
    const double C14395 = C11351 * C6312;
    const double C73468 = C70424 * C6312;
    const double C55936 = C55934 + C10481;
    const double C152209 = C152201 + C152208;
    const double C152500 = C152496 + C152490;
    const double C3492 = C153913 * C1469;
    const double C7423 = C153608 * C1469;
    const double C11922 = C153671 * C1469;
    const double C20403 = C153851 * C1469;
    const double C24757 = C24105 * C1469;
    const double C70995 = C153671 * C1469;
    const double C79123 = C70415 * C1469;
    const double C84196 = C153674 * C1469;
    const double C7695 = C153608 * C2252;
    const double C19397 = C153851 * C2252;
    const double C78781 = C70415 * C2252;
    const double C152631 = C152162 * C152626;
    const double C152828 = 2 * C152626;
    const double C6316 =
        (2 * ae *
             (2 * C152354 * C152264 + C152354 * (C152264 + C152284 * C152417)) +
         C152162 * (2 * C152557 + C152354 * C152695)) /
        C151940;
    const double C7682 = (3 * (C152394 + C152197 * C152417) +
                          C152354 * (2 * C152557 + C152354 * C152695)) /
                         C151940;
    const double C9122 =
        (2 * ae *
             (3 * (C152264 + C152284 * C152417) +
              C152354 *
                  (2 * C152723 + C152354 * (C152284 + C152311 * C152417))) +
         C152162 *
             (3 * C152695 +
              C152354 * (2 * C152724 +
                         C152354 * (C152212 + C152169 * C152220 * C152417)))) /
        C151940;
    const double C10471 =
        (4 * (2 * C152557 + C152354 * C152695) +
         C152354 *
             (3 * C152695 +
              C152354 * (2 * C152724 +
                         C152354 * (C152212 + C152169 * C152220 * C152417)))) /
        C151940;
    const double C152734 = C152733 + C152729;
    const double C152806 = C152792 + C152803;
    const double C152897 = C152896 + C152892;
    const double C153101 = C153097 + C153098;
    const double C152933 = C152162 * C152932;
    const double C153044 = 2 * C152932;
    const double C152224 = C152216 + C152223;
    const double C152590 = C152586 + C152577;
    const double C152686 = C152207 + C152683;
    const double C152716 = C152162 * C152711;
    const double C152852 = C152162 * C152848;
    const double C152910 = C152162 * C152905;
    const double C153119 = C152354 * C152905;
    const double C152951 = C152950 + C152945;
    const double C153040 = C153039 + C153034;
    const double C153084 = C153074 + C153075;
    const double C153065 = C152162 * C153064;
    const double C152328 = C152314 + C152326;
    const double C152522 = C152296 + C152518;
    const double C152521 = C152517 * ae;
    const double C8488 =
        2 * C152354 * C152374 + C152354 * (C152374 + C152517 * C152417);
    const double C152520 = C152515 + C152516;
    const double C152597 = C152584 + C152593;
    const double C152596 = C152295 + C152591;
    const double C152688 = C152497 + C152685;
    const double C152719 = ae * C152714;
    const double C152863 = C152162 * C152859;
    const double C152862 = C152859 * ae;
    const double C31999 =
        2 * C152354 * C152633 + C152354 * (C152633 + C152859 * C152417);
    const double C152861 = C152858 + C152850;
    const double C152913 = ae * C152908;
    const double C153112 = C152354 * C152908;
    const double C152994 = C152969 + C152991;
    const double C152995 = ae * C152989;
    const double C152993 = C152162 * C152989;
    const double C153024 = C152989 * C152417;
    const double C153051 = C152354 * C152989;
    const double C153087 = C153080 + C153081;
    const double C152303 = C152283 + C152301;
    const double C152375 = C152372 + C152373;
    const double C152519 = 2 * C152512;
    const double C2257 = C135 * C2246;
    const double C7715 = C135 * C7680;
    const double C152575 = C152207 + C152503;
    const double C152504 = C152274 + C152501;
    const double C152544 = C152386 + C152543;
    const double C152567 = ae * C152565;
    const double C152749 = 2 * C152565;
    const double C10479 = C135 * C10467;
    const double C7731 = C7722 + C7705;
    const double C152840 = C152829 + C152630;
    const double C152635 = C152632 + C152624;
    const double C152699 = ae * C152697;
    const double C152756 = C152354 * C152697;
    const double C153110 = 3 * C152697;
    const double C152936 = C152724 + C152732;
    const double C55916 =
        (5 * (3 * C153249 + C152354 * C153277) +
         C152354 * (4 * C153277 +
                    C152354 * (3 * C152904 +
                               C152354 * (2 * C152937 +
                                          C152354 * (C152311 +
                                                     C152835 * C152417))))) /
        C151933;
    const double C55935 = C55931 + C10480;
    const double C152988 = C152973 + C152985;
    const double C152813 = ae * C152807;
    const double C152811 = C152162 * C152807;
    const double C152884 = C152807 * C152417;
    const double C152922 = C152354 * C152807;
    const double C152962 = 3 * C152807;
    const double C153019 = C152887 + C152895;
    const double C153082 = C153070 + C153071;
    const double C153054 = C153045 + C152930;
    const double C153094 = 2 * C153089;
    const double C153283 = C153281 + C153282;
    const double C55926 = C135 * C55915;
    const double C152302 = C152300 * ae;
    const double C142 = 5 * (3 * C152258 + C152169 * C152275) +
                        C152169 * (4 * C152275 + C152169 * C152300);
    const double C334 = 3 * C152258 + C152169 * C152275 + C152300 * C152166;
    const double C335 = C152162 * (4 * C152275 + C152169 * C152300);
    const double C547 = 3 * C152258 + C152169 * C152275 + C152300 * C152417;
    const double C548 = C152354 * (4 * C152275 + C152169 * C152300);
    const double C1061 = C152354 * C152162 * C152300;
    const double C7970 = C134 * C1458;
    const double C152816 = C152812 * ae;
    const double C28502 = 5 * (3 * C152453 + C152162 * C152669) +
                          C152162 * (4 * C152669 + C152162 * C152812);
    const double C28650 = 3 * C152453 + C152162 * C152669 + C152812 * C152417;
    const double C29092 = C152354 * (4 * C152669 + C152162 * C152812);
    const double C57459 =
        6 * (4 * C153415 + C152354 * C153442) +
        C152354 *
            (5 * C153442 +
             C152354 * (4 * C153440 +
                        C152354 * (3 * C153438 +
                                   C152354 * (2 * C152354 * C152198 +
                                              C152354 * (C152198 +
                                                         C152213 * C152417)))));
    const double C152333 = C152169 * C152331;
    const double C152361 = C152162 * C152331;
    const double C153869 = C153817 / C151933;
    const double C153904 = C153873 / C151975;
    const double C153905 = C153875 + C153825;
    const double C11346 = C153825 - C153465 / C151944;
    const double C153872 = C153821 / C151933;
    const double C15576 = C622 * C11344;
    const double C15575 = C7735 * C11344;
    const double C15568 = C7734 * C11344;
    const double C15972 = C621 * C11344;
    const double C17933 = C7738 * C11344;
    const double C153896 = C153862 / C151933;
    const double C153920 = C153899 / C151975;
    const double C153921 = C153900 + C153866;
    const double C63322 = C153866 - C153714 / C151944;
    const double C153898 = C153863 / C151933;
    const double C151957 = C151931 * C151949;
    const double C152002 = C151949 / C151944;
    const double C2821 =
        (ae * -2 * C151939) / (C151940 * 2 * C151933) +
        (((C151931 *
           ((-4 * C151943) / C151933 - (C151931 * C151949) / C151933) * ae) /
              C151933 +
          2 * ((C151948 * ae) / C151933 - C151939 / C151944)) *
         ae) /
            C151933 -
        C151949 / C151944;
    const double C2825 = (-C151949 / C151933) / (4 * C151940);
    const double C11350 = (-C151949 / C151933) / (2 * C151933);
    const double C24114 = (-C151949 / C151933) / (4 * C151940);
    const double C28358 =
        (-C151949 / C151933) / (4 * C151940 * std::pow(C151975, 2));
    const double C34901 = (-C151949 / C151933) / (4 * C151993);
    const double C70423 = (-C151949 / C151933) / C151975;
    const double C74257 = (-C151949 / C151933) / (4 * C151993);
    const double C83553 = (-C151949 / C151933) / C152080;
    const double C152013 = C152000 / C151933;
    const double C2869 = C2822 * C149;
    const double C2859 = C2822 * C148;
    const double C2856 = C2822 * C147;
    const double C2841 = C2822 * C146;
    const double C2832 = C2822 * C145;
    const double C2828 = C2822 * C144;
    const double C3182 = C2822 * C338;
    const double C3174 = C2822 * C344;
    const double C3165 = C2822 * C343;
    const double C3161 = C2822 * C342;
    const double C3160 = C2822 * C341;
    const double C3156 = C2822 * C340;
    const double C3147 = C2822 * C339;
    const double C3501 = C2822 * C558;
    const double C3496 = C2822 * C551;
    const double C3488 = C2822 * C557;
    const double C3479 = C2822 * C556;
    const double C3475 = C2822 * C555;
    const double C3474 = C2822 * C554;
    const double C3470 = C2822 * C553;
    const double C3461 = C2822 * C552;
    const double C3765 = C2822 * C337;
    const double C4003 = C2822 * C550;
    const double C4329 = C2822 * C1065;
    const double C4320 = C2822 * C1064;
    const double C4316 = C2822 * C1063;
    const double C4975 = C2822 * C1466;
    const double C4972 = C2822 * C1465;
    const double C4969 = C2822 * C1464;
    const double C6328 = C2822 * C2249;
    const double C6325 = C2822 * C2248;
    const double C6322 = C2822 * C2247;
    const double C52065 = C2822 * C7678;
    const double C52053 = C2822 * C7677;
    const double C52845 = C2822 * C6312;
    const double C54843 = C2822 * C10469;
    const double C2862 = C2824 * C337;
    const double C2853 = C2824 * C338;
    const double C2844 = C2824 * C339;
    const double C2835 = C2824 * C340;
    const double C2829 = C2824 * C341;
    const double C3159 = C2824 * C342;
    const double C3153 = C2824 * C343;
    const double C3144 = C2824 * C344;
    const double C3491 = C2824 * C1464;
    const double C3482 = C2824 * C1465;
    const double C3476 = C2824 * C1466;
    const double C3473 = C2824 * C1063;
    const double C3467 = C2824 * C1064;
    const double C3458 = C2824 * C1065;
    const double C6327 = C2824 * C6312;
    const double C11380 = C11349 * C149;
    const double C11377 = C11349 * C148;
    const double C11368 = C11349 * C147;
    const double C11362 = C11349 * C146;
    const double C11356 = C11349 * C145;
    const double C11353 = C11349 * C144;
    const double C11655 = C11349 * C337;
    const double C11644 = C11349 * C344;
    const double C11638 = C11349 * C343;
    const double C11635 = C11349 * C342;
    const double C11634 = C11349 * C341;
    const double C11631 = C11349 * C340;
    const double C11625 = C11349 * C339;
    const double C11619 = C11349 * C338;
    const double C11929 = C11349 * C550;
    const double C11924 = C11349 * C558;
    const double C11918 = C11349 * C557;
    const double C11912 = C11349 * C556;
    const double C11909 = C11349 * C555;
    const double C11908 = C11349 * C554;
    const double C11905 = C11349 * C553;
    const double C11899 = C11349 * C552;
    const double C11893 = C11349 * C551;
    const double C12652 = C11349 * C1065;
    const double C12646 = C11349 * C1064;
    const double C12643 = C11349 * C1063;
    const double C13216 = C11349 * C1466;
    const double C13214 = C11349 * C1465;
    const double C13212 = C11349 * C1464;
    const double C14396 = C11349 * C2249;
    const double C14394 = C11349 * C2248;
    const double C14392 = C11349 * C2247;
    const double C14390 = C11349 * C2246;
    const double C21214 = C11349 * C6312;
    const double C22986 = C11349 * C7677;
    const double C22984 = C11349 * C7678;
    const double C22982 = C11349 * C7679;
    const double C62216 = C11349 * C10469;
    const double C62214 = C11349 * C10468;
    const double C69632 = C11349 * C55915;
    const double C24158 = C24111 * C149;
    const double C24148 = C24111 * C148;
    const double C24145 = C24111 * C147;
    const double C24130 = C24111 * C146;
    const double C24121 = C24111 * C145;
    const double C24117 = C24111 * C144;
    const double C24459 = C24111 * C338;
    const double C24451 = C24111 * C344;
    const double C24442 = C24111 * C343;
    const double C24438 = C24111 * C342;
    const double C24437 = C24111 * C341;
    const double C24433 = C24111 * C340;
    const double C24424 = C24111 * C339;
    const double C24766 = C24111 * C558;
    const double C24761 = C24111 * C551;
    const double C24753 = C24111 * C557;
    const double C24744 = C24111 * C556;
    const double C24740 = C24111 * C555;
    const double C24739 = C24111 * C554;
    const double C24735 = C24111 * C553;
    const double C24726 = C24111 * C552;
    const double C25030 = C24111 * C337;
    const double C25268 = C24111 * C550;
    const double C25582 = C24111 * C1065;
    const double C25573 = C24111 * C1064;
    const double C25569 = C24111 * C1063;
    const double C26210 = C24111 * C1466;
    const double C26207 = C24111 * C1465;
    const double C26204 = C24111 * C1464;
    const double C27536 = C24111 * C2249;
    const double C27533 = C24111 * C2248;
    const double C27530 = C24111 * C2247;
    const double C31232 = C24111 * C7678;
    const double C31220 = C24111 * C7677;
    const double C32015 = C24111 * C6312;
    const double C34022 = C24111 * C10469;
    const double C24151 = C24113 * C337;
    const double C24142 = C24113 * C338;
    const double C24133 = C24113 * C339;
    const double C24124 = C24113 * C340;
    const double C24118 = C24113 * C341;
    const double C24436 = C24113 * C342;
    const double C24430 = C24113 * C343;
    const double C24421 = C24113 * C344;
    const double C24756 = C24113 * C1464;
    const double C24747 = C24113 * C1465;
    const double C24741 = C24113 * C1466;
    const double C24738 = C24113 * C1063;
    const double C24732 = C24113 * C1064;
    const double C24723 = C24113 * C1065;
    const double C27535 = C24113 * C6312;
    const double C70453 = C70422 * C149;
    const double C70450 = C70422 * C148;
    const double C70441 = C70422 * C147;
    const double C70435 = C70422 * C146;
    const double C70429 = C70422 * C145;
    const double C70426 = C70422 * C144;
    const double C70728 = C70422 * C337;
    const double C70717 = C70422 * C344;
    const double C70711 = C70422 * C343;
    const double C70708 = C70422 * C342;
    const double C70707 = C70422 * C341;
    const double C70704 = C70422 * C340;
    const double C70698 = C70422 * C339;
    const double C70692 = C70422 * C338;
    const double C71002 = C70422 * C550;
    const double C70997 = C70422 * C558;
    const double C70991 = C70422 * C557;
    const double C70985 = C70422 * C556;
    const double C70982 = C70422 * C555;
    const double C70981 = C70422 * C554;
    const double C70978 = C70422 * C553;
    const double C70972 = C70422 * C552;
    const double C70966 = C70422 * C551;
    const double C71725 = C70422 * C1065;
    const double C71719 = C70422 * C1064;
    const double C71716 = C70422 * C1063;
    const double C72289 = C70422 * C1466;
    const double C72287 = C70422 * C1465;
    const double C72285 = C70422 * C1464;
    const double C73469 = C70422 * C2249;
    const double C73467 = C70422 * C2248;
    const double C73465 = C70422 * C2247;
    const double C73463 = C70422 * C2246;
    const double C78786 = C70422 * C7679;
    const double C78775 = C70422 * C7678;
    const double C78772 = C70422 * C7677;
    const double C79820 = C70422 * C6312;
    const double C82423 = C70422 * C10469;
    const double C82421 = C70422 * C10468;
    const double C136832 = C70422 * C55915;
    const double C152053 = C152045 / C151933;
    const double C153932 = C153891 + C153927;
    const double C34890 = C153917 - (C153674 * C153663) / C151933;
    const double C74272 = C153918 * C355;
    const double C130840 = C153918 * C1902;
    const double C28347 = C153918 / C151975 - C153672 / C152083;
    const double C34916 = C34891 * C355;
    const double C44359 = C34891 * C1902;
    const double C153928 = C153893 + C153917;
    const double C402 = C394 + C377;
    const double C1094 = C1090 + C1078;
    const double C7710 = C623 * C2818;
    const double C7692 = C623 * C2819;
    const double C15580 = C623 * C11344;
    const double C48061 = C623 * C153922;
    const double C48053 = C623 * C153903;
    const double C55928 = C623 * C153454;
    const double C63728 = C623 * C153818;
    const double C63721 = C623 * C153464;
    const double C107646 = C623 * C74249;
    const double C107639 = C623 * C153464;
    const double C116479 = C623 * C153459;
    const double C116471 = C623 * C153467;
    const double C1329 =
        (2 * (2 * ae * C152242 + C152162 * C152176) + C152415 + C152415 +
         C152162 * (C152176 + C152412 + C152412 +
                    C152162 * (2 * ae * C152233 + C152162 * C152185))) /
        C151940;
    const double C1335 = C135 * C1324;
    const double C3162 = C2824 * C1324;
    const double C3158 = C2826 * C1324;
    const double C4739 = C2822 * C1324;
    const double C11636 = C11351 * C1324;
    const double C13014 = C11349 * C1324;
    const double C24439 = C24113 * C1324;
    const double C24435 = C24115 * C1324;
    const double C25983 = C24111 * C1324;
    const double C34907 = C34902 * C1324;
    const double C70709 = C70424 * C1324;
    const double C72087 = C70422 * C1324;
    const double C74263 = C74258 * C1324;
    const double C83874 = C152085 * C1324;
    const double C1908 = C135 * C1897;
    const double C3472 = C2826 * C1897;
    const double C4317 = C2824 * C1897;
    const double C5719 = C2822 * C1897;
    const double C12644 = C11351 * C1897;
    const double C13870 = C11349 * C1897;
    const double C24737 = C24115 * C1897;
    const double C25570 = C24113 * C1897;
    const double C26945 = C24111 * C1897;
    const double C71717 = C70424 * C1897;
    const double C72943 = C70422 * C1897;
    const double C84176 = C152085 * C1897;
    const double C8522 = C8518 + C8493;
    const double C8523 = C8519 + C8497;
    const double C10485 = C10484 + C10476;
    const double C152281 = ae * C152280;
    const double C345 = (2 * C152248 + C152169 * C152257 + C152162 * C152280 +
                         C152162 * C152275 * ae) /
                        C151933;
    const double C1066 = (C152354 * C152280) / C151933;
    const double C185 = C174 + C175;
    const double C390 = C362 + C363;
    const double C603 = C575 + C576;
    const double C609 = C595 + C596;
    const double C152391 = C152390 + C152387;
    const double C1900 =
        (C152354 * C152195 + C152430 + C152430 +
         C152162 * (2 * ae * C152354 * C152274 + C152162 * C152354 * C152207)) /
        C151940;
    const double C152484 = ae * C152482;
    const double C152483 = C152162 * C152482;
    const double C152558 = C152354 * C152482;
    const double C152614 = 3 * C152482;
    const double C3450 = (C152394 + C152197 * C152417 + C152541 + C152541 +
                          C152162 * (2 * ae * (C152264 + C152284 * C152417) +
                                     C152162 * (C152197 + C152212 * C152417))) /
                         C151940;
    const double C6324 = C2824 * C6310;
    const double C8502 = C135 * C6310;
    const double C14393 = C11351 * C6310;
    const double C21212 = C11349 * C6310;
    const double C27532 = C24113 * C6310;
    const double C32026 = C24111 * C6310;
    const double C52856 = C2822 * C6310;
    const double C73466 = C70424 * C6310;
    const double C79823 = C70422 * C6310;
    const double C152791 = C152778 + C152674;
    const double C152675 = C152651 + C152673;
    const double C152705 = C152459 + C152702;
    const double C152744 = ae * C152739;
    const double C153099 = 2 * C152739;
    const double C152764 = ae * C152763;
    const double C9120 = (3 * C152536 + C152354 * C152763) / C151933;
    const double C381 = C153608 * C356;
    const double C2848 = C153887 * C356;
    const double C3175 = C153925 * C356;
    const double C3145 = C153913 * C356;
    const double C11645 = C153851 * C356;
    const double C11623 = C153671 * C356;
    const double C24137 = C153887 * C356;
    const double C24452 = C24104 * C356;
    const double C24422 = C24105 * C356;
    const double C34925 = C34891 * C356;
    const double C70718 = C70415 * C356;
    const double C70696 = C153671 * C356;
    const double C74281 = C153918 * C356;
    const double C83576 = C83545 * C356;
    const double C83891 = C153667 * C356;
    const double C83861 = C153674 * C356;
    const double C395 = C379 + C380;
    const double C1091 = C1080 + C1081;
    const double C7438 = C7422 + C1475;
    const double C196 = C190 + C173;
    const double C407 = C399 + C367;
    const double C620 = C612 + C580;
    const double C624 = C616 + C594;
    const double C152404 = ae * C152403;
    const double C1323 =
        (2 * C152252 + C152162 * C152403 + (C152249 + C152266 * C152166) * ae) /
        C151933;
    const double C1896 = (C152354 * C152403) / C151933;
    const double C3446 = (C152403 + C152482 * C152417) / C151933;
    const double C3465 = C153887 * C1901;
    const double C4324 = C153913 * C1901;
    const double C7427 = C153608 * C1901;
    const double C12650 = C153671 * C1901;
    const double C19069 = C153851 * C1901;
    const double C24730 = C153887 * C1901;
    const double C25577 = C24105 * C1901;
    const double C35441 = C34891 * C1901;
    const double C39071 = C24104 * C1901;
    const double C71723 = C153671 * C1901;
    const double C74797 = C153918 * C1901;
    const double C78431 = C70415 * C1901;
    const double C84169 = C83545 * C1901;
    const double C85016 = C153674 * C1901;
    const double C93422 = C153667 * C1901;
    const double C102349 = C153925 * C1901;
    const double C7445 = C7439 + C1476;
    const double C7747 = C7737 * C2818;
    const double C7745 = C7737 * C2819;
    const double C48064 = C7737 * C153922;
    const double C48056 = C7737 * C153903;
    const double C55929 = C7737 * C153454;
    const double C63730 = C7737 * C153818;
    const double C63723 = C7737 * C153464;
    const double C107648 = C7737 * C74249;
    const double C107641 = C7737 * C153464;
    const double C116482 = C7737 * C153459;
    const double C116474 = C7737 * C153467;
    const double C152462 = C152445 + C152460;
    const double C152554 = ae * C152552;
    const double C3477 = C2826 * C3445;
    const double C4974 = C2824 * C3445;
    const double C7430 = C135 * C3445;
    const double C13215 = C11351 * C3445;
    const double C22196 = C11349 * C3445;
    const double C24742 = C24115 * C3445;
    const double C26209 = C24113 * C3445;
    const double C30972 = C24111 * C3445;
    const double C51811 = C2822 * C3445;
    const double C72288 = C70424 * C3445;
    const double C78434 = C70422 * C3445;
    const double C84181 = C152085 * C3445;
    const double C9869 = C153608 * C3449;
    const double C21208 = C153671 * C3449;
    const double C31213 = C153887 * C3449;
    const double C32012 = C24105 * C3449;
    const double C33399 = C24104 * C3449;
    const double C44365 = C34891 * C3449;
    const double C52046 = C153887 * C3449;
    const double C52842 = C153913 * C3449;
    const double C54226 = C153925 * C3449;
    const double C61420 = C153851 * C3449;
    const double C79818 = C153671 * C3449;
    const double C81621 = C70415 * C3449;
    const double C93735 = C83545 * C3449;
    const double C95564 = C153674 * C3449;
    const double C130846 = C153918 * C3449;
    const double C150583 = C153667 * C3449;
    const double C9133 = C9125 + C8500;
    const double C55938 = C55936 + C55925;
    const double C158 =
        (5 * (3 * C152195 + C152169 * C152209) +
         C152169 *
             (4 * C152209 +
              C152169 *
                  (3 * C152207 +
                   C152169 * (2 * C152169 * C152205 +
                              C152169 * (C152205 + (C152199 * C152200 +
                                                    C152166 * bs[8] *
                                                        std::pow(C152160, 8)) *
                                                       C152165 * C152181))))) /
        C151940;
    const double C349 =
        (2 * ae *
             (3 * (C152172 * C152171 * C152228 + C152230 * C152181) +
              C152169 * (2 * C152169 * C152230 +
                         C152169 * (C152230 +
                                    C152189 * C152188 * C152228 * C152181))) +
         C152162 * (3 * C152195 + C152169 * C152209)) /
        C151940;
    const double C562 =
        ((zP - zQ) * (3 * C152195 + C152169 * C152209)) / C151940;
    const double C570 = (2 * C152169 * C152185 + C152169 * C152195 +
                         C152209 * std::pow(zP - zQ, 2)) /
                        C151940;
    const double C1072 =
        (2 * ae * C152354 * C152278 + C152162 * C152354 * C152209) / C151940;
    const double C7736 = C7727 + C7695;
    const double C152634 = C152621 + C152631;
    const double C8503 = C153608 * C6316;
    const double C19395 = C153671 * C6316;
    const double C31226 = C24105 * C6316;
    const double C52059 = C153913 * C6316;
    const double C59647 = C153851 * C6316;
    const double C78763 = C153671 * C6316;
    const double C79824 = C70415 * C6316;
    const double C93745 = C153674 * C6316;
    const double C7703 = C153608 * C7682;
    const double C58665 = C153851 * C7682;
    const double C78776 = C70415 * C7682;
    const double C56365 = C153608 * C9122;
    const double C58667 = C153671 * C9122;
    const double C78779 = C153671 * C9122;
    const double C55932 = C153608 * C10471;
    const double C152810 = C152162 * C152806;
    const double C152955 = 3 * C152806;
    const double C152934 = C152924 + C152933;
    const double C152225 = C152169 * C152224;
    const double C152513 = C152162 * C152224;
    const double C152569 = C152354 * C152224;
    const double C1468 = (2 * ae * (C152278 + C152299 * C152417) +
                          C152162 * (C152209 + C152224 * C152417)) /
                         C151940;
    const double C2251 =
        (2 * C152354 * C152209 + C152354 * (C152209 + C152224 * C152417)) /
        C151940;
    const double C152595 = C152162 * C152590;
    const double C6314 =
        (2 * ae *
             (2 * C152354 * C152274 + C152354 * (C152274 + C152295 * C152417)) +
         C152162 * (2 * C152563 + C152354 * C152686)) /
        C151940;
    const double C7683 = (3 * (C152195 + C152207 * C152417) +
                          C152354 * (2 * C152563 + C152354 * C152686)) /
                         C151940;
    const double C9121 =
        (2 * ae *
             (3 * (C152274 + C152295 * C152417) +
              C152354 *
                  (2 * C152710 + C152354 * (C152295 + C152323 * C152417))) +
         C152162 *
             (3 * C152686 +
              C152354 *
                  (2 * C152711 +
                   C152354 * (C152222 + (C152220 + (C152214 * C152215 +
                                                    C152166 * bs[9] *
                                                        std::pow(C152164, 9)) *
                                                       C152165 * C152181) *
                                            C152417)))) /
        C151940;
    const double C10470 =
        (4 * (2 * C152563 + C152354 * C152686) +
         C152354 *
             (3 * C152686 +
              C152354 *
                  (2 * C152711 +
                   C152354 * (C152222 + (C152220 + (C152214 * C152215 +
                                                    C152166 * bs[9] *
                                                        std::pow(C152164, 9)) *
                                                       C152165 * C152181) *
                                            C152417)))) /
        C151940;
    const double C152721 = C152720 + C152716;
    const double C152915 = C152914 + C152910;
    const double C153123 = C153118 + C153119;
    const double C152952 = C152162 * C152951;
    const double C153041 = C152162 * C153040;
    const double C153090 = C152162 * C153084;
    const double C153128 = C152354 * C153084;
    const double C152330 = C152169 * C152328;
    const double C152363 = C152162 * C152328;
    const double C152362 = C152328 * ae;
    const double C1315 =
        2 * C152162 * C152300 + C152162 * (C152300 + C152328 * C152166);
    const double C1888 = C152354 * (C152300 + C152328 * C152166);
    const double C2240 =
        2 * C152354 * C152300 + C152354 * (C152300 + C152328 * C152417);
    const double C152525 = C152522 * ae;
    const double C3130 = 3 * (C152275 + C152296 * C152166) +
                         C152162 * (2 * C152374 + C152162 * C152522);
    const double C3444 = C152275 + C152296 * C152166 + C152522 * C152417;
    const double C4306 = C152354 * (2 * C152374 + C152162 * C152522);
    const double C152526 = ae * C152520;
    const double C152524 = C152162 * C152520;
    const double C152547 = C152520 * C152417;
    const double C152571 = C152354 * C152520;
    const double C152600 = C152597 * ae;
    const double C4721 = 4 * (2 * C152385 + C152162 * C152499) +
                         C152162 * (3 * C152499 + C152162 * C152597);
    const double C4957 = 2 * C152385 + C152162 * C152499 + C152597 * C152417;
    const double C5701 = C152354 * (3 * C152499 + C152162 * C152597);
    const double C152599 = C152596 + C152588;
    const double C152690 = ae * C152688;
    const double C152750 = C152354 * C152688;
    const double C152866 = C152838 + C152863;
    const double C152867 = ae * C152861;
    const double C152865 = C152162 * C152861;
    const double C152902 = C152861 * C152417;
    const double C152941 = C152354 * C152861;
    const double C153113 = C153111 + C153112;
    const double C152999 = C152162 * C152994;
    const double C152998 = C152994 * ae;
    const double C30190 =
        2 * C152354 * C152812 + C152354 * (C152812 + C152994 * C152417);
    const double C152997 = C152963 + C152993;
    const double C153031 = C152807 + C153024;
    const double C153060 = ae * C153051;
    const double C153093 = ae * C153087;
    const double C153132 = C152354 * C153087;
    const double C152304 = C152162 * C152303;
    const double C150 = (5 * (3 * C152257 + C152169 * C152278) +
                         C152169 * (4 * C152278 + C152169 * C152303)) /
                        C151933;
    const double C347 = (C152162 * (4 * C152278 + C152169 * C152303) +
                         (4 * C152275 + C152169 * C152300) * ae) /
                        C151933;
    const double C559 =
        (3 * C152257 + C152169 * C152278 + C152303 * C152417) / C151933;
    const double C560 = (C152354 * (4 * C152278 + C152169 * C152303)) / C151933;
    const double C2245 =
        (2 * C152354 * C152303 + C152354 * (C152303 + C152331 * C152417)) /
        C151933;
    const double C152378 = ae * C152375;
    const double C152377 = C152162 * C152375;
    const double C152426 = C152354 * C152375;
    const double C152514 = 2 * C152375;
    const double C1463 = (C152280 + C152375 * C152417) / C151933;
    const double C7723 = C7713 + C2257;
    const double C152585 = C152575 + C152503;
    const double C152505 = C152504 + C152498;
    const double C152545 = ae * C152544;
    const double C6308 = (2 * C152429 + C152354 * C152544) / C151933;
    const double C152857 = C152840 + C152852;
    const double C152638 = ae * C152635;
    const double C152637 = C152162 * C152635;
    const double C152693 = C152635 * C152417;
    const double C152726 = C152354 * C152635;
    const double C152833 = 3 * C152635;
    const double C152757 = C152755 + C152756;
    const double C152943 = C152936 + C152732;
    const double C55933 = C135 * C55916;
    const double C55937 = C55935 + C10480;
    const double C152992 = C152162 * C152988;
    const double C152972 = C152956 + C152813;
    const double C152815 = C152784 + C152811;
    const double C152889 = C152671 + C152884;
    const double C152929 = ae * C152922;
    const double C153078 = 2 * C152922;
    const double C153026 = C153019 + C152895;
    const double C153088 = ae * C153082;
    const double C153106 = C152354 * C153082;
    const double C153139 = 4 * C153082;
    const double C153066 = C153054 + C153065;
    const double C57460 =
        (6 * (4 * C153273 + C152354 * C153283) +
         C152354 *
             (5 * C153283 +
              C152354 *
                  (4 * C153083 +
                   C152354 * (3 * C153027 +
                              C152354 * (2 * C153046 +
                                         C152354 * (C152290 +
                                                    C152318 * C152417)))))) /
        C151933;
    const double C57466 = C57463 + C55926;
    const double C177 = C134 * C142;
    const double C385 = C134 * C334;
    const double C757 = C134 * C335;
    const double C598 = C134 * C547;
    const double C890 = C134 * C548;
    const double C1086 = C134 * C1061;
    const double C152335 = C152309 + C152333;
    const double C153931 = C153869 + C153923;
    const double C11345 = C153904 - (C153467 * C153450) / C151933;
    const double C98852 = C621 * C153905;
    const double C125 = C153905 / C151975 - C153465 / C152083;
    const double C15570 = C621 * C11346;
    const double C153924 = C153872 + C153904;
    const double C153933 = C153896 + C153929;
    const double C63321 = C153920 - (C153716 * C153705) / C151933;
    const double C55665 = C153921 / C151975 - C153714 / C152083;
    const double C153930 = C153898 + C153920;
    const double C152005 = C151957 / C151944;
    const double C151999 = C151957 / C151933;
    const double C2823 =
        (((-4 * C151943) / C151933 - C151957 / C151933) * ae) / C151944 +
        ((2 * ((0 * ae) / C151933 - C151943 / C151940) - C151957 / C151944) *
         ae) /
            C151933;
    const double C11348 =
        (((-4 * C151943) / C151933 - C151957 / C151933) * ae) / C151933;
    const double C24110 =
        (-(be * -2 * C151939) / C151940) / C151975 -
        ((2 * ((-C151939 / C151933) / C151975 - (C151948 * be) / C151933) -
          (C151931 * ((-4 * C151943) / C151933 - C151957 / C151933) * be) /
              C151933) *
         be) /
            C151933 -
        C151949 / C151944;
    const double C24112 =
        (-(((-4 * C151943) / C151933 - C151957 / C151933) * be) / C151933) /
            C151975 -
        ((2 * ((-C151945 / C151933) / C151975 - (0 * be) / C151933) -
          C151957 / C151944) *
         be) /
            C151933;
    const double C2858 = C2821 * C140;
    const double C2855 = C2821 * C139;
    const double C2840 = C2821 * C138;
    const double C2831 = C2821 * C137;
    const double C3173 = C2821 * C332;
    const double C3164 = C2821 * C331;
    const double C3155 = C2821 * C328;
    const double C3146 = C2821 * C327;
    const double C3487 = C2821 * C545;
    const double C3478 = C2821 * C544;
    const double C3469 = C2821 * C541;
    const double C3460 = C2821 * C540;
    const double C3757 = C2821 * C326;
    const double C3995 = C2821 * C539;
    const double C4328 = C2821 * C1059;
    const double C4319 = C2821 * C1058;
    const double C52056 = C2821 * C2243;
    const double C52051 = C2821 * C2244;
    const double C52041 = C2821 * C543;
    const double C52035 = C2821 * C542;
    const double C52848 = C2821 * C1460;
    const double C52839 = C2821 * C1461;
    const double C52833 = C2821 * C1057;
    const double C53472 = C2821 * C6306;
    const double C54225 = C2821 * C3441;
    const double C54219 = C2821 * C1892;
    const double C54835 = C2821 * C7673;
    const double C102348 = C2821 * C1891;
    const double C2864 = C2825 * C334;
    const double C2849 = C2825 * C333;
    const double C2846 = C2825 * C332;
    const double C2837 = C2825 * C331;
    const double C3179 = C2825 * C3129;
    const double C3170 = C2825 * C3128;
    const double C3149 = C2825 * C1318;
    const double C3140 = C2825 * C1317;
    const double C3493 = C2825 * C3443;
    const double C3484 = C2825 * C3442;
    const double C3463 = C2825 * C1891;
    const double C3454 = C2825 * C1890;
    const double C3761 = C2825 * C1316;
    const double C3999 = C2825 * C1889;
    const double C4334 = C2825 * C4305;
    const double C4325 = C2825 * C4304;
    const double C52060 = C2825 * C6303;
    const double C52047 = C2825 * C6305;
    const double C52045 = C2825 * C3441;
    const double C52039 = C2825 * C1892;
    const double C52852 = C2825 * C4958;
    const double C52843 = C2825 * C4959;
    const double C52837 = C2825 * C4303;
    const double C53476 = C2825 * C30191;
    const double C54229 = C2825 * C28650;
    const double C54223 = C2825 * C5703;
    const double C54839 = C2825 * C31195;
    const double C102352 = C2825 * C5702;
    const double C11382 = C11350 * C335;
    const double C11373 = C11350 * C325;
    const double C11370 = C11350 * C326;
    const double C11364 = C11350 * C327;
    const double C11358 = C11350 * C328;
    const double C11652 = C11350 * C1316;
    const double C11646 = C11350 * C1317;
    const double C11640 = C11350 * C1318;
    const double C11627 = C11350 * C331;
    const double C11621 = C11350 * C332;
    const double C11615 = C11350 * C333;
    const double C11926 = C11350 * C1458;
    const double C11920 = C11350 * C1459;
    const double C11914 = C11350 * C1460;
    const double C11901 = C11350 * C1058;
    const double C11895 = C11350 * C1059;
    const double C11889 = C11350 * C1060;
    const double C12167 = C11350 * C334;
    const double C12375 = C11350 * C1061;
    const double C12660 = C11350 * C1889;
    const double C12654 = C11350 * C1890;
    const double C12648 = C11350 * C1891;
    const double C19074 = C11350 * C4305;
    const double C19070 = C11350 * C4304;
    const double C19398 = C11350 * C6302;
    const double C19394 = C11350 * C6304;
    const double C19385 = C11350 * C1461;
    const double C19380 = C11350 * C1057;
    const double C20404 = C11350 * C3443;
    const double C20400 = C11350 * C3442;
    const double C20394 = C11350 * C1892;
    const double C21207 = C11350 * C3441;
    const double C22189 = C11350 * C4303;
    const double C22979 = C11350 * C6306;
    const double C58362 = C11350 * C4958;
    const double C58666 = C11350 * C9116;
    const double C59648 = C11350 * C6303;
    const double C60437 = C11350 * C6305;
    const double C61421 = C11350 * C4959;
    const double C62211 = C11350 * C9117;
    const double C68436 = C11350 * C31195;
    const double C69097 = C11350 * C30191;
    const double C69629 = C11350 * C34007;
    const double C24153 = C24114 * C334;
    const double C24138 = C24114 * C333;
    const double C24135 = C24114 * C332;
    const double C24126 = C24114 * C331;
    const double C24456 = C24114 * C3129;
    const double C24447 = C24114 * C3128;
    const double C24426 = C24114 * C1318;
    const double C24417 = C24114 * C1317;
    const double C24758 = C24114 * C3443;
    const double C24749 = C24114 * C3442;
    const double C24728 = C24114 * C1891;
    const double C24719 = C24114 * C1890;
    const double C25026 = C24114 * C1316;
    const double C25264 = C24114 * C1889;
    const double C25587 = C24114 * C4305;
    const double C25578 = C24114 * C4304;
    const double C31227 = C24114 * C6303;
    const double C31214 = C24114 * C6305;
    const double C31212 = C24114 * C3441;
    const double C31206 = C24114 * C1892;
    const double C32022 = C24114 * C4958;
    const double C32013 = C24114 * C4959;
    const double C32007 = C24114 * C4303;
    const double C32649 = C24114 * C30191;
    const double C33402 = C24114 * C28650;
    const double C33396 = C24114 * C5703;
    const double C34018 = C24114 * C31195;
    const double C39074 = C24114 * C5702;
    const double C34941 = C34901 * C1316;
    const double C34920 = C34901 * C1317;
    const double C34917 = C34901 * C1318;
    const double C35207 = C34901 * C4722;
    const double C35178 = C34901 * C3128;
    const double C35465 = C34901 * C4958;
    const double C35436 = C34901 * C4304;
    const double C35700 = C34901 * C3129;
    const double C35918 = C34901 * C4305;
    const double C36207 = C34901 * C5702;
    const double C44362 = C34901 * C4959;
    const double C44360 = C34901 * C4303;
    const double C45046 = C34901 * C5703;
    const double C45588 = C34901 * C28650;
    const double C46258 = C34901 * C29092;
    const double C46800 = C34901 * C30191;
    const double C70455 = C70423 * C335;
    const double C70446 = C70423 * C325;
    const double C70443 = C70423 * C326;
    const double C70437 = C70423 * C327;
    const double C70431 = C70423 * C328;
    const double C70725 = C70423 * C1316;
    const double C70719 = C70423 * C1317;
    const double C70713 = C70423 * C1318;
    const double C70700 = C70423 * C331;
    const double C70694 = C70423 * C332;
    const double C70688 = C70423 * C333;
    const double C70999 = C70423 * C1458;
    const double C70993 = C70423 * C1459;
    const double C70987 = C70423 * C1460;
    const double C70974 = C70423 * C1058;
    const double C70968 = C70423 * C1059;
    const double C70962 = C70423 * C1060;
    const double C71240 = C70423 * C334;
    const double C71448 = C70423 * C1061;
    const double C71733 = C70423 * C1889;
    const double C71727 = C70423 * C1890;
    const double C71721 = C70423 * C1891;
    const double C78439 = C70423 * C4958;
    const double C78432 = C70423 * C4304;
    const double C78426 = C70423 * C3442;
    const double C78782 = C70423 * C6302;
    const double C78777 = C70423 * C9116;
    const double C78766 = C70423 * C6306;
    const double C78762 = C70423 * C6304;
    const double C78759 = C70423 * C1461;
    const double C78754 = C70423 * C1057;
    const double C79124 = C70423 * C3443;
    const double C79825 = C70423 * C6303;
    const double C79817 = C70423 * C3441;
    const double C79812 = C70423 * C1892;
    const double C80634 = C70423 * C6305;
    const double C81622 = C70423 * C4959;
    const double C81618 = C70423 * C4303;
    const double C82418 = C70423 * C9117;
    const double C88188 = C70423 * C4305;
    const double C135636 = C70423 * C31195;
    const double C136297 = C70423 * C30191;
    const double C136829 = C70423 * C34007;
    const double C74297 = C74257 * C1316;
    const double C74276 = C74257 * C1317;
    const double C74273 = C74257 * C1318;
    const double C74563 = C74257 * C4722;
    const double C74534 = C74257 * C3128;
    const double C74821 = C74257 * C4958;
    const double C74792 = C74257 * C4304;
    const double C75056 = C74257 * C3129;
    const double C75274 = C74257 * C4305;
    const double C75563 = C74257 * C5702;
    const double C130843 = C74257 * C4959;
    const double C130841 = C74257 * C4303;
    const double C131527 = C74257 * C5703;
    const double C132069 = C74257 * C28650;
    const double C132739 = C74257 * C29092;
    const double C133281 = C74257 * C30191;
    const double C83592 = C83553 * C334;
    const double C83577 = C83553 * C333;
    const double C83574 = C83553 * C332;
    const double C83565 = C83553 * C331;
    const double C83895 = C83553 * C3129;
    const double C83886 = C83553 * C3128;
    const double C83865 = C83553 * C1318;
    const double C83856 = C83553 * C1317;
    const double C84197 = C83553 * C3443;
    const double C84188 = C83553 * C3442;
    const double C84167 = C83553 * C1891;
    const double C84158 = C83553 * C1890;
    const double C84465 = C83553 * C1316;
    const double C84703 = C83553 * C1889;
    const double C85026 = C83553 * C4305;
    const double C85017 = C83553 * C4304;
    const double C93425 = C83553 * C5702;
    const double C93746 = C83553 * C6303;
    const double C93734 = C83553 * C3441;
    const double C93730 = C83553 * C1892;
    const double C94758 = C83553 * C4958;
    const double C94751 = C83553 * C4303;
    const double C95565 = C83553 * C4959;
    const double C96552 = C83553 * C5703;
    const double C97347 = C83553 * C6305;
    const double C149839 = C83553 * C30191;
    const double C150586 = C83553 * C28650;
    const double C151187 = C83553 * C31195;
    const double C152021 = C152013 - C152001;
    const double C74290 = C153932 * C155;
    const double C74287 = C153932 * C154;
    const double C74266 = C153932 * C153;
    const double C74556 = C153932 * C355;
    const double C74545 = C153932 * C352;
    const double C74814 = C153932 * C568;
    const double C74803 = C153932 * C565;
    const double C75051 = C153932 * C351;
    const double C75269 = C153932 * C564;
    const double C75556 = C153932 * C1070;
    const double C130850 = C153932 * C567;
    const double C130836 = C153932 * C566;
    const double C131522 = C153932 * C1069;
    const double C132064 = C153932 * C1471;
    const double C132734 = C153932 * C1902;
    const double C133276 = C153932 * C2254;
    const double C28344 =
        (C153925 + 2 * C153667) / C151975 - (C153932 * C153663) / C151933;
    const double C34937 = C34890 * C350;
    const double C34928 = C34890 * C351;
    const double C34913 = C34890 * C352;
    const double C35186 = C34890 * C355;
    const double C35461 = C34890 * C1470;
    const double C35444 = C34890 * C1070;
    const double C35697 = C34890 * C356;
    const double C35915 = C34890 * C1071;
    const double C36203 = C34890 * C1901;
    const double C44367 = C34890 * C1471;
    const double C44357 = C34890 * C1069;
    const double C45043 = C34890 * C1902;
    const double C45585 = C34890 * C3449;
    const double C46797 = C34890 * C6318;
    const double C74293 = C153928 * C350;
    const double C74284 = C153928 * C351;
    const double C74269 = C153928 * C352;
    const double C74542 = C153928 * C355;
    const double C74817 = C153928 * C1470;
    const double C74800 = C153928 * C1070;
    const double C75053 = C153928 * C356;
    const double C75271 = C153928 * C1071;
    const double C75559 = C153928 * C1901;
    const double C130848 = C153928 * C1471;
    const double C130838 = C153928 * C1069;
    const double C131524 = C153928 * C1902;
    const double C132066 = C153928 * C3449;
    const double C133278 = C153928 * C6318;
    const double C28345 = (C153913 + 2 * C153674 + C153932) / C151975 -
                          (C153928 * C153663) / C151933;
    const double C28346 = (C153887 + C153671 / C151933 + C153928) / C151975 -
                          (C153918 * C153663) / C151933;
    const double C410 = C402 + C378;
    const double C1098 = C1094 + C1079;
    const double C7750 = C7743 + C7692;
    const double C48067 = C48052 + C48053;
    const double C63734 = C63720 + C63721;
    const double C107652 = C107638 + C107639;
    const double C116485 = C116470 + C116471;
    const double C9875 = C9864 + C1908;
    const double C8526 = C8522 * C2818;
    const double C16234 = C8522 * C11344;
    const double C48803 = C8522 * C153922;
    const double C56355 = C8522 * C153454;
    const double C64390 = C8522 * C153818;
    const double C108308 = C8522 * C74249;
    const double C117221 = C8522 * C153459;
    const double C8527 = C8523 * C2818;
    const double C16761 = C8523 * C11344;
    const double C48806 = C8523 * C153922;
    const double C56356 = C8523 * C153454;
    const double C64392 = C8523 * C153818;
    const double C108310 = C8523 * C74249;
    const double C117224 = C8523 * C153459;
    const double C10486 = C10485 * C2818;
    const double C50717 = C10485 * C153922;
    const double C55923 = C10485 * C153454;
    const double C63725 = C10485 * C153818;
    const double C107643 = C10485 * C74249;
    const double C119135 = C10485 * C153459;
    const double C357 =
        (2 * C152169 * C152185 + C152169 * C152195 + C152281 + C152281 +
         C152162 * (2 * ae * C152278 + C152162 * C152209)) /
        C151940;
    const double C383 = C135 * C345;
    const double C2850 = C2826 * C345;
    const double C3187 = C2822 * C345;
    const double C3183 = C2824 * C345;
    const double C11650 = C11349 * C345;
    const double C11616 = C11351 * C345;
    const double C24139 = C24115 * C345;
    const double C24464 = C24111 * C345;
    const double C24460 = C24113 * C345;
    const double C70723 = C70422 * C345;
    const double C70689 = C70424 * C345;
    const double C83578 = C152085 * C345;
    const double C1084 = C135 * C1066;
    const double C3497 = C2824 * C1066;
    const double C4339 = C2822 * C1066;
    const double C11890 = C11351 * C1066;
    const double C12658 = C11349 * C1066;
    const double C24762 = C24113 * C1066;
    const double C25592 = C24111 * C1066;
    const double C70963 = C70424 * C1066;
    const double C71731 = C70422 * C1066;
    const double C191 = C185 + C175;
    const double C398 = C390 + C363;
    const double C611 = C603 + C576;
    const double C617 = C609 + C596;
    const double C152392 = ae * C152391;
    const double C1322 =
        (2 * C152261 + C152162 * C152391 + (C152258 + C152271 * C152166) * ae) /
        C151933;
    const double C1895 = (C152354 * C152391) / C151933;
    const double C3456 = C153887 * C1900;
    const double C4333 = C153913 * C1900;
    const double C7429 = C153608 * C1900;
    const double C12656 = C153671 * C1900;
    const double C19073 = C153851 * C1900;
    const double C24721 = C153887 * C1900;
    const double C25586 = C24105 * C1900;
    const double C35917 = C34891 * C1900;
    const double C71729 = C153671 * C1900;
    const double C75273 = C153918 * C1900;
    const double C84160 = C83545 * C1900;
    const double C85025 = C153674 * C1900;
    const double C88187 = C70415 * C1900;
    const double C152485 = C152468 + C152483;
    const double C152560 = ae * C152558;
    const double C3486 = C153887 * C3450;
    const double C7433 = C153608 * C3450;
    const double C20401 = C153671 * C3450;
    const double C24751 = C153887 * C3450;
    const double C32021 = C24105 * C3450;
    const double C35464 = C34891 * C3450;
    const double C52851 = C153913 * C3450;
    const double C58361 = C153851 * C3450;
    const double C74820 = C153918 * C3450;
    const double C78438 = C70415 * C3450;
    const double C78427 = C153671 * C3450;
    const double C84190 = C83545 * C3450;
    const double C94757 = C153674 * C3450;
    const double C8516 = C8501 + C8502;
    const double C152797 = C152791 + C152674;
    const double C152676 = C152675 + C152664;
    const double C152707 = ae * C152705;
    const double C6311 = (2 * C152552 + C152354 * C152705) / C151933;
    const double C6317 =
        (2 * C152551 + C152354 * C152704 + C152764 + C152764 +
         C152162 *
             (2 * ae * (2 * C152736 + C152354 * (C152230 + C152269 * C152417)) +
              C152162 *
                  (2 * C152737 + C152354 * (C152193 + C152205 * C152417)))) /
        C151940;
    const double C9132 = C135 * C9120;
    const double C22985 = C11351 * C9120;
    const double C31221 = C24113 * C9120;
    const double C32654 = C24111 * C9120;
    const double C52054 = C2824 * C9120;
    const double C53481 = C2822 * C9120;
    const double C60444 = C11349 * C9120;
    const double C78773 = C70424 * C9120;
    const double C80641 = C70422 * C9120;
    const double C403 = C395 + C380;
    const double C1095 = C1091 + C1081;
    const double C7444 = C7438 + C1475;
    const double C7709 = C620 * C153874;
    const double C8194 = C620 * C2819;
    const double C15578 = C620 * C11346;
    const double C15571 = C620 * C153852;
    const double C48060 = C620 * C153874;
    const double C48508 = C620 * C153903;
    const double C64127 = C620 * C153464;
    const double C98860 = C620 * C153905;
    const double C98853 = C620 * C153852;
    const double C108045 = C620 * C153464;
    const double C116478 = C620 * C83548;
    const double C116926 = C620 * C153467;
    const double C7711 = C624 * C2819;
    const double C7693 = C624 * C153874;
    const double C8196 = C624 * C2818;
    const double C15573 = C624 * C11346;
    const double C48062 = C624 * C153903;
    const double C48054 = C624 * C153874;
    const double C48510 = C624 * C153922;
    const double C56187 = C624 * C153454;
    const double C63729 = C624 * C153464;
    const double C64128 = C624 * C153818;
    const double C98855 = C624 * C153905;
    const double C107647 = C624 * C153464;
    const double C108046 = C624 * C74249;
    const double C116480 = C624 * C153467;
    const double C116472 = C624 * C83548;
    const double C116928 = C624 * C153459;
    const double C1328 =
        (2 * (2 * ae * C152248 + C152162 * C152394) + C152404 + C152404 +
         C152162 * (C152394 + C152401 + C152401 +
                    C152162 * (2 * ae * C152264 + C152162 * C152197))) /
        C151940;
    const double C1334 = C135 * C1323;
    const double C3168 = C2824 * C1323;
    const double C3150 = C2826 * C1323;
    const double C4736 = C2822 * C1323;
    const double C11641 = C11351 * C1323;
    const double C13012 = C11349 * C1323;
    const double C24445 = C24113 * C1323;
    const double C24427 = C24115 * C1323;
    const double C25980 = C24111 * C1323;
    const double C34918 = C34902 * C1323;
    const double C70714 = C70424 * C1323;
    const double C72085 = C70422 * C1323;
    const double C74274 = C74258 * C1323;
    const double C83866 = C152085 * C1323;
    const double C1907 = C135 * C1896;
    const double C3464 = C2826 * C1896;
    const double C4323 = C2824 * C1896;
    const double C5716 = C2822 * C1896;
    const double C12649 = C11351 * C1896;
    const double C13868 = C11349 * C1896;
    const double C24729 = C24115 * C1896;
    const double C25576 = C24113 * C1896;
    const double C26942 = C24111 * C1896;
    const double C71722 = C70424 * C1896;
    const double C72941 = C70422 * C1896;
    const double C84168 = C152085 * C1896;
    const double C3485 = C2826 * C3446;
    const double C4971 = C2824 * C3446;
    const double C7432 = C135 * C3446;
    const double C13213 = C11351 * C3446;
    const double C22194 = C11349 * C3446;
    const double C24750 = C24115 * C3446;
    const double C26206 = C24113 * C3446;
    const double C30977 = C24111 * C3446;
    const double C51816 = C2822 * C3446;
    const double C72286 = C70424 * C3446;
    const double C78437 = C70422 * C3446;
    const double C84189 = C152085 * C3446;
    const double C7451 = C7445 + C7425;
    const double C10474 = C7745 + C7746;
    const double C50716 = C48056 + C48057;
    const double C63735 = C63722 + C63723;
    const double C66096 = C63723 + C63722;
    const double C107653 = C107640 + C107641;
    const double C110013 = C107641 + C107640;
    const double C119134 = C116474 + C116475;
    const double C152463 = C152462 + C152456;
    const double C4311 = (2 * (2 * ae * C152354 * C152233 + C152162 * C152551) +
                          C152554 + C152554 +
                          C152162 * (C152551 + C152555 + C152555 +
                                     C152162 * (2 * ae * C152354 * C152230 +
                                                C152162 * C152354 * C152193))) /
                         C151940;
    const double C9876 = C9868 + C7430;
    const double C9135 = C9133 + C8500;
    const double C55940 = C55938 * C153454;
    const double C66097 = C55938 * C153818;
    const double C110014 = C55938 * C74249;
    const double C179 = C153608 * C158;
    const double C364 = C153608 * C349;
    const double C2863 = C153913 * C349;
    const double C11375 = C153671 * C349;
    const double C12166 = C153851 * C349;
    const double C24152 = C24105 * C349;
    const double C70448 = C153671 * C349;
    const double C71239 = C70415 * C349;
    const double C83591 = C153674 * C349;
    const double C577 = C153608 * C562;
    const double C12374 = C153851 * C562;
    const double C71447 = C70415 * C562;
    const double C597 = C153608 * C570;
    const double C11925 = C153851 * C570;
    const double C70998 = C70415 * C570;
    const double C1085 = C153608 * C1072;
    const double C3998 = C153913 * C1072;
    const double C11891 = C153671 * C1072;
    const double C12659 = C153851 * C1072;
    const double C25263 = C24105 * C1072;
    const double C70964 = C153671 * C1072;
    const double C71732 = C70415 * C1072;
    const double C84702 = C153674 * C1072;
    const double C7748 = C7736 * C2819;
    const double C7744 = C7736 * C153874;
    const double C17935 = C7736 * C11346;
    const double C48065 = C7736 * C153903;
    const double C48055 = C7736 * C153874;
    const double C56188 = C7736 * C153454;
    const double C63731 = C7736 * C153464;
    const double C64130 = C7736 * C153818;
    const double C101216 = C7736 * C153905;
    const double C107649 = C7736 * C153464;
    const double C108048 = C7736 * C74249;
    const double C116483 = C7736 * C153467;
    const double C116473 = C7736 * C83548;
    const double C7739 = C7730 + C7703;
    const double C152226 = C152211 + C152225;
    const double C152523 = C152519 + C152513;
    const double C7684 =
        (3 * (C152209 + C152224 * C152417) +
         C152354 *
             (2 * C152569 +
              C152354 * (C152224 +
                         (2 * C152169 * C152220 +
                          C152169 * (C152220 +
                                     (C152214 * C152215 +
                                      C152166 * bs[9] * std::pow(C152164, 9)) *
                                         C152165 * C152181)) *
                             C152417))) /
        C151940;
    const double C8490 =
        (2 * ae *
             (2 * C152354 * C152299 + C152354 * (C152299 + C152327 * C152417)) +
         C152162 *
             (2 * C152569 +
              C152354 * (C152224 +
                         (2 * C152169 * C152220 +
                          C152169 * (C152220 +
                                     (C152214 * C152215 +
                                      C152166 * bs[9] * std::pow(C152164, 9)) *
                                         C152165 * C152181)) *
                             C152417))) /
        C151940;
    const double C7971 = C153608 * C1468;
    const double C11928 = C153671 * C1468;
    const double C71001 = C153671 * C1468;
    const double C7714 = C153608 * C2251;
    const double C8506 = C153608 * C6314;
    const double C19399 = C153671 * C6314;
    const double C78783 = C153671 * C6314;
    const double C7706 = C153608 * C7683;
    const double C55918 =
        (5 * (3 * C152695 + C152354 * C153123) +
         C152354 *
             (4 * C153123 +
              C152354 * (3 * C152905 +
                         C152354 * (2 * C152938 +
                                    C152354 * (C152831 +
                                               C152169 *
                                                   (C152214 * C152215 +
                                                    C152166 * bs[9] *
                                                        std::pow(C152164, 9)) *
                                                   C152165 * C152417))))) /
        C151940;
    const double C56353 =
        (2 * ae *
             (4 * (2 * C152723 + C152354 * C152904) +
              C152354 * (3 * C152904 +
                         C152354 * (2 * C152937 +
                                    C152354 * (C152311 + C152835 * C152417)))) +
         C152162 *
             (4 * C153123 +
              C152354 * (3 * C152905 +
                         C152354 * (2 * C152938 +
                                    C152354 * (C152831 +
                                               C152169 *
                                                   (C152214 * C152215 +
                                                    C152166 * bs[9] *
                                                        std::pow(C152164, 9)) *
                                                   C152165 * C152417))))) /
        C151940;
    const double C153095 = C153094 + C153090;
    const double C153133 = C153127 + C153128;
    const double C152332 = C152313 + C152330;
    const double C152365 = C152363 * ae;
    const double C1457 = C152162 * C152300 + C152363 * C152417;
    const double C152364 = C152361 + C152362;
    const double C152527 = C152299 + C152524;
    const double C152548 = C152375 + C152547;
    const double C152573 = ae * C152571;
    const double C152602 = ae * C152599;
    const double C152601 = C152162 * C152599;
    const double C152684 = C152599 * C152417;
    const double C152713 = C152354 * C152599;
    const double C152751 = C152749 + C152750;
    const double C152869 = C152866 * ae;
    const double C28503 = 5 * (3 * C152476 + C152162 * C152633) +
                          C152162 * (4 * C152633 + C152162 * C152866);
    const double C28651 = 3 * C152476 + C152162 * C152633 + C152866 * C152417;
    const double C29093 = C152354 * (4 * C152633 + C152162 * C152866);
    const double C152868 = C152834 + C152865;
    const double C152907 = C152635 + C152902;
    const double C152948 = ae * C152941;
    const double C153114 = C152354 * C153113;
    const double C153122 = ae * C153113;
    const double C153002 = C152970 + C152999;
    const double C153001 = C152997 + C152982;
    const double C153037 = ae * C153031;
    const double C153079 = C152354 * C153031;
    const double C153135 = C153131 + C153132;
    const double C152305 = C152304 + C152302;
    const double C178 = C135 * C150;
    const double C11386 = C11349 * C150;
    const double C70459 = C70422 * C150;
    const double C388 = C135 * C347;
    const double C2868 = C2824 * C347;
    const double C11383 = C11351 * C347;
    const double C12170 = C11349 * C347;
    const double C24157 = C24113 * C347;
    const double C70456 = C70424 * C347;
    const double C71243 = C70422 * C347;
    const double C599 = C135 * C559;
    const double C11932 = C11349 * C559;
    const double C71005 = C70422 * C559;
    const double C601 = C135 * C560;
    const double C12378 = C11349 * C560;
    const double C71451 = C70422 * C560;
    const double C2256 = C135 * C2245;
    const double C152379 = C152278 + C152377;
    const double C152427 = ae * C152426;
    const double C1474 = C135 * C1463;
    const double C3500 = C2824 * C1463;
    const double C11927 = C11351 * C1463;
    const double C13210 = C11349 * C1463;
    const double C24765 = C24113 * C1463;
    const double C71000 = C70424 * C1463;
    const double C72283 = C70422 * C1463;
    const double C7732 = C7723 + C2257;
    const double C152598 = C152585 + C152595;
    const double C152507 = ae * C152505;
    const double C152506 = C152162 * C152505;
    const double C152564 = C152354 * C152505;
    const double C152578 = 3 * C152505;
    const double C3447 = (C152391 + C152505 * C152417) / C151933;
    const double C3451 = (C152195 + C152207 * C152417 + C152545 + C152545 +
                          C152162 * (2 * ae * (C152274 + C152295 * C152417) +
                                     C152162 * (C152207 + C152222 * C152417))) /
                         C151940;
    const double C6321 = C2824 * C6308;
    const double C8505 = C135 * C6308;
    const double C14391 = C11351 * C6308;
    const double C21210 = C11349 * C6308;
    const double C27529 = C24113 * C6308;
    const double C73464 = C70424 * C6308;
    const double C79831 = C70422 * C6308;
    const double C152860 = C152162 * C152857;
    const double C152839 = C152828 + C152638;
    const double C152639 = C152615 + C152637;
    const double C152696 = C152482 + C152693;
    const double C152731 = ae * C152726;
    const double C153120 = 2 * C152726;
    const double C152758 = ae * C152757;
    const double C9119 = (3 * C152540 + C152354 * C152757) / C151933;
    const double C152953 = C152943 + C152952;
    const double C55939 = C55937 + C55932;
    const double C152979 = C152972 + C152813;
    const double C152817 = C152815 + C152800;
    const double C152894 = ae * C152889;
    const double C153100 = C152354 * C152889;
    const double C153129 = 3 * C152889;
    const double C153053 = C153044 + C152929;
    const double C153042 = C153026 + C153041;
    const double C153107 = C153105 + C153106;
    const double C153067 = C152162 * C153066;
    const double C57465 = C135 * C57460;
    const double C57467 = C57466 + C55926;
    const double C152336 = C152162 * C152335;
    const double C1074 =
        (2 * ae * C152354 * C152335 +
         C152162 * C152354 *
             (4 * C152224 +
              C152169 *
                  (3 * C152222 +
                   C152169 * (2 * C152169 * C152220 +
                              C152169 * (C152220 + (C152214 * C152215 +
                                                    C152166 * bs[9] *
                                                        std::pow(C152164, 9)) *
                                                       C152165 * C152181))))) /
        C151940;
    const double C151 = (6 * (4 * C152278 + C152169 * C152303) +
                         C152169 * (5 * C152303 + C152169 * C152335)) /
                        C151933;
    const double C561 =
        (4 * C152278 + C152169 * C152303 + C152335 * C152417) / C151933;
    const double C887 = (C152354 * (5 * C152303 + C152169 * C152335)) / C151933;
    const double C98862 = C623 * C153931;
    const double C98858 = C622 * C153931;
    const double C98857 = C7735 * C153931;
    const double C98850 = C7734 * C153931;
    const double C99254 = C621 * C153931;
    const double C99516 = C8522 * C153931;
    const double C100042 = C8523 * C153931;
    const double C101214 = C7738 * C153931;
    const double C122 =
        (C153922 + 2 * C153459) / C151975 - (C153931 * C153450) / C151933;
    const double C15581 = C624 * C11345;
    const double C15577 = C621 * C11345;
    const double C15574 = C623 * C11345;
    const double C15569 = C622 * C11345;
    const double C15973 = C620 * C11345;
    const double C17934 = C7737 * C11345;
    const double C98863 = C624 * C153924;
    const double C98859 = C621 * C153924;
    const double C98856 = C623 * C153924;
    const double C98851 = C622 * C153924;
    const double C99255 = C620 * C153924;
    const double C101215 = C7737 * C153924;
    const double C123 = (C153903 + 2 * C153467 + C153931) / C151975 -
                        (C153924 * C153450) / C151933;
    const double C124 = (C153874 + C153464 / C151933 + C153924) / C151975 -
                        (C153905 * C153450) / C151933;
    const double C55662 =
        (C153926 + 2 * C153709) / C151975 - (C153933 * C153705) / C151933;
    const double C55663 = (C153915 + 2 * C153716 + C153933) / C151975 -
                          (C153930 * C153705) / C151933;
    const double C55664 = (C153890 + C153713 / C151933 + C153930) / C151975 -
                          (C153921 * C153705) / C151933;
    const double C152038 = C152030 - C152005;
    const double C152020 = C152012 - C151999;
    const double C2861 = C2823 * C325;
    const double C2852 = C2823 * C326;
    const double C2843 = C2823 * C327;
    const double C2834 = C2823 * C328;
    const double C3176 = C2823 * C1317;
    const double C3167 = C2823 * C1318;
    const double C3152 = C2823 * C331;
    const double C3143 = C2823 * C332;
    const double C3490 = C2823 * C1459;
    const double C3481 = C2823 * C1460;
    const double C3466 = C2823 * C1058;
    const double C3457 = C2823 * C1059;
    const double C3759 = C2823 * C333;
    const double C3997 = C2823 * C1060;
    const double C4331 = C2823 * C1890;
    const double C4322 = C2823 * C1891;
    const double C52058 = C2823 * C6304;
    const double C52049 = C2823 * C6306;
    const double C52043 = C2823 * C1461;
    const double C52037 = C2823 * C1057;
    const double C52850 = C2823 * C3442;
    const double C52841 = C2823 * C3441;
    const double C52835 = C2823 * C1892;
    const double C53474 = C2823 * C6305;
    const double C54227 = C2823 * C4959;
    const double C54221 = C2823 * C4303;
    const double C54837 = C2823 * C9117;
    const double C102350 = C2823 * C4304;
    const double C11379 = C11348 * C141;
    const double C11376 = C11348 * C140;
    const double C11367 = C11348 * C139;
    const double C11361 = C11348 * C138;
    const double C11355 = C11348 * C137;
    const double C11649 = C11348 * C333;
    const double C11643 = C11348 * C332;
    const double C11637 = C11348 * C331;
    const double C11630 = C11348 * C328;
    const double C11624 = C11348 * C327;
    const double C11618 = C11348 * C326;
    const double C11923 = C11348 * C546;
    const double C11917 = C11348 * C545;
    const double C11911 = C11348 * C544;
    const double C11904 = C11348 * C541;
    const double C11898 = C11348 * C540;
    const double C11892 = C11348 * C539;
    const double C12165 = C11348 * C325;
    const double C12373 = C11348 * C538;
    const double C12657 = C11348 * C1060;
    const double C12651 = C11348 * C1059;
    const double C12645 = C11348 * C1058;
    const double C19072 = C11348 * C1890;
    const double C19068 = C11348 * C1891;
    const double C19396 = C11348 * C2242;
    const double C19392 = C11348 * C2243;
    const double C19387 = C11348 * C543;
    const double C19378 = C11348 * C542;
    const double C20402 = C11348 * C1459;
    const double C20398 = C11348 * C1460;
    const double C20392 = C11348 * C1057;
    const double C21205 = C11348 * C1461;
    const double C22187 = C11348 * C1892;
    const double C22977 = C11348 * C2244;
    const double C58360 = C11348 * C3442;
    const double C58664 = C11348 * C7674;
    const double C59646 = C11348 * C6304;
    const double C60435 = C11348 * C6306;
    const double C61419 = C11348 * C3441;
    const double C62209 = C11348 * C7673;
    const double C68434 = C11348 * C9117;
    const double C69095 = C11348 * C6305;
    const double C69627 = C11348 * C10466;
    const double C24147 = C24110 * C140;
    const double C24144 = C24110 * C139;
    const double C24129 = C24110 * C138;
    const double C24120 = C24110 * C137;
    const double C24450 = C24110 * C332;
    const double C24441 = C24110 * C331;
    const double C24432 = C24110 * C328;
    const double C24423 = C24110 * C327;
    const double C24752 = C24110 * C545;
    const double C24743 = C24110 * C544;
    const double C24734 = C24110 * C541;
    const double C24725 = C24110 * C540;
    const double C25022 = C24110 * C326;
    const double C25260 = C24110 * C539;
    const double C25581 = C24110 * C1059;
    const double C25572 = C24110 * C1058;
    const double C31223 = C24110 * C2243;
    const double C31218 = C24110 * C2244;
    const double C31208 = C24110 * C543;
    const double C31202 = C24110 * C542;
    const double C32018 = C24110 * C1460;
    const double C32009 = C24110 * C1461;
    const double C32003 = C24110 * C1057;
    const double C32645 = C24110 * C6306;
    const double C33398 = C24110 * C3441;
    const double C33392 = C24110 * C1892;
    const double C34014 = C24110 * C7673;
    const double C39070 = C24110 * C1891;
    const double C24150 = C24112 * C325;
    const double C24141 = C24112 * C326;
    const double C24132 = C24112 * C327;
    const double C24123 = C24112 * C328;
    const double C24453 = C24112 * C1317;
    const double C24444 = C24112 * C1318;
    const double C24429 = C24112 * C331;
    const double C24420 = C24112 * C332;
    const double C24755 = C24112 * C1459;
    const double C24746 = C24112 * C1460;
    const double C24731 = C24112 * C1058;
    const double C24722 = C24112 * C1059;
    const double C25024 = C24112 * C333;
    const double C25262 = C24112 * C1060;
    const double C25584 = C24112 * C1890;
    const double C25575 = C24112 * C1891;
    const double C31225 = C24112 * C6304;
    const double C31216 = C24112 * C6306;
    const double C31210 = C24112 * C1461;
    const double C31204 = C24112 * C1057;
    const double C32020 = C24112 * C3442;
    const double C32011 = C24112 * C3441;
    const double C32005 = C24112 * C1892;
    const double C32647 = C24112 * C6305;
    const double C33400 = C24112 * C4959;
    const double C33394 = C24112 * C4303;
    const double C34016 = C24112 * C9117;
    const double C39072 = C24112 * C4304;
    const double C2879 = C2858 + C2859;
    const double C2878 = C2855 + C2856;
    const double C2873 = C2840 + C2841;
    const double C2870 = C2831 + C2832;
    const double C3197 = C3173 + C3174;
    const double C3194 = C3164 + C3165;
    const double C3193 = C3155 + C3156;
    const double C3190 = C3146 + C3147;
    const double C3511 = C3487 + C3488;
    const double C3508 = C3478 + C3479;
    const double C3507 = C3469 + C3470;
    const double C3504 = C3460 + C3461;
    const double C3767 = C3757 + C3182;
    const double C4005 = C3995 + C3496;
    const double C4343 = C4328 + C4329;
    const double C4340 = C4319 + C4320;
    const double C52075 = C52056 + C6325;
    const double C52074 = C52051 + C6328;
    const double C52069 = C52041 + C3475;
    const double C52066 = C52035 + C3474;
    const double C52863 = C52848 + C4972;
    const double C52860 = C52839 + C4975;
    const double C52857 = C52833 + C4316;
    const double C53482 = C53472 + C52845;
    const double C54237 = C54225 + C51811;
    const double C54234 = C54219 + C5719;
    const double C54845 = C54835 + C52053;
    const double C2875 = C2846 + C2847;
    const double C2872 = C2837 + C2838;
    const double C52071 = C52045 + C3477;
    const double C52068 = C52039 + C3472;
    const double C11393 = C11373 + C11374;
    const double C11392 = C11370 + C11371;
    const double C11390 = C11364 + C11365;
    const double C11388 = C11358 + C11359;
    const double C11663 = C11627 + C11628;
    const double C11661 = C11621 + C11622;
    const double C11942 = C11920 + C11921;
    const double C11940 = C11914 + C11915;
    const double C11937 = C11901 + C11902;
    const double C11935 = C11895 + C11896;
    const double C19405 = C19394 + C14393;
    const double C19402 = C19385 + C11910;
    const double C19401 = C19380 + C11907;
    const double C20408 = C20394 + C12644;
    const double C21216 = C21207 + C13215;
    const double C22988 = C22979 + C14395;
    const double C24164 = C24135 + C24136;
    const double C24161 = C24126 + C24127;
    const double C31238 = C31212 + C24742;
    const double C31235 = C31206 + C24737;
    const double C70466 = C70446 + C70447;
    const double C70465 = C70443 + C70444;
    const double C70463 = C70437 + C70438;
    const double C70461 = C70431 + C70432;
    const double C70736 = C70700 + C70701;
    const double C70734 = C70694 + C70695;
    const double C71015 = C70993 + C70994;
    const double C71013 = C70987 + C70988;
    const double C71010 = C70974 + C70975;
    const double C71008 = C70968 + C70969;
    const double C78794 = C78766 + C73468;
    const double C78792 = C78762 + C73466;
    const double C78790 = C78759 + C70983;
    const double C78788 = C78754 + C70980;
    const double C79835 = C79817 + C72288;
    const double C79833 = C79812 + C71717;
    const double C83603 = C83574 + C83575;
    const double C83600 = C83565 + C83566;
    const double C93753 = C93734 + C84181;
    const double C93750 = C93730 + C84176;
    const double C152031 = C152021 / C151975;
    const double C152029 = C151931 * C152021;
    const double C152028 = 2 * C152021;
    const double C8507 = C1098 * C2818;
    const double C8494 = C1098 * C2819;
    const double C16238 = C1098 * C11344;
    const double C16235 = C1098 * C11345;
    const double C48809 = C1098 * C153922;
    const double C48804 = C1098 * C153903;
    const double C56361 = C1098 * C153454;
    const double C64396 = C1098 * C153818;
    const double C64391 = C1098 * C153464;
    const double C99520 = C1098 * C153931;
    const double C99517 = C1098 * C153924;
    const double C108314 = C1098 * C74249;
    const double C108309 = C1098 * C153464;
    const double C117227 = C1098 * C153459;
    const double C117222 = C1098 * C153467;
    const double C9877 = C9875 + C1908;
    const double C384 = C153608 * C357;
    const double C2851 = C153887 * C357;
    const double C3760 = C153913 * C357;
    const double C11651 = C153851 * C357;
    const double C11617 = C153671 * C357;
    const double C24140 = C153887 * C357;
    const double C25025 = C24105 * C357;
    const double C34940 = C34891 * C357;
    const double C70724 = C70415 * C357;
    const double C70690 = C153671 * C357;
    const double C74296 = C153918 * C357;
    const double C83579 = C83545 * C357;
    const double C84464 = C153674 * C357;
    const double C396 = C382 + C383;
    const double C2876 = C2849 + C2850;
    const double C11659 = C11615 + C11616;
    const double C24165 = C24138 + C24139;
    const double C70732 = C70688 + C70689;
    const double C83604 = C83577 + C83578;
    const double C1092 = C1083 + C1084;
    const double C11933 = C11889 + C11890;
    const double C71006 = C70962 + C70963;
    const double C197 = C191 + C176;
    const double C1327 =
        (2 * (2 * ae * C152257 + C152162 * C152195) + C152392 + C152392 +
         C152162 * (C152195 + C152389 + C152389 +
                    C152162 * (2 * ae * C152274 + C152162 * C152207))) /
        C151940;
    const double C1333 = C135 * C1322;
    const double C3177 = C2824 * C1322;
    const double C3141 = C2826 * C1322;
    const double C4733 = C2822 * C1322;
    const double C11647 = C11351 * C1322;
    const double C13010 = C11349 * C1322;
    const double C24454 = C24113 * C1322;
    const double C24418 = C24115 * C1322;
    const double C25977 = C24111 * C1322;
    const double C34921 = C34902 * C1322;
    const double C70720 = C70424 * C1322;
    const double C72083 = C70422 * C1322;
    const double C74277 = C74258 * C1322;
    const double C83857 = C152085 * C1322;
    const double C1906 = C135 * C1895;
    const double C3455 = C2826 * C1895;
    const double C4332 = C2824 * C1895;
    const double C5713 = C2822 * C1895;
    const double C12655 = C11351 * C1895;
    const double C13866 = C11349 * C1895;
    const double C24720 = C24115 * C1895;
    const double C25585 = C24113 * C1895;
    const double C26939 = C24111 * C1895;
    const double C71728 = C70424 * C1895;
    const double C72939 = C70422 * C1895;
    const double C84159 = C152085 * C1895;
    const double C152486 = C152485 + C152479;
    const double C4312 = (2 * (2 * ae * C152354 * C152264 + C152162 * C152557) +
                          C152560 + C152560 +
                          C152162 * (C152557 + C152561 + C152561 +
                                     C152162 * (2 * ae * C152354 * C152284 +
                                                C152162 * C152354 * C152212))) /
                         C151940;
    const double C8520 = C8516 + C8502;
    const double C152814 = C152797 + C152810;
    const double C152678 = ae * C152676;
    const double C152677 = C152162 * C152676;
    const double C152738 = C152354 * C152676;
    const double C152782 = 4 * C152676;
    const double C4965 =
        (2 * (2 * ae * (C152233 + C152230 * C152417) + C152162 * C152704) +
         C152707 + C152707 +
         C152162 * (C152704 + C152708 + C152708 +
                    C152162 * (2 * ae * (C152230 + C152269 * C152417) +
                               C152162 * (C152193 + C152205 * C152417)))) /
        C151940;
    const double C6326 = C2826 * C6311;
    const double C9874 = C135 * C6311;
    const double C21213 = C11351 * C6311;
    const double C27534 = C24115 * C6311;
    const double C32016 = C24113 * C6311;
    const double C33406 = C24111 * C6311;
    const double C52846 = C2824 * C6311;
    const double C54233 = C2822 * C6311;
    const double C61426 = C11349 * C6311;
    const double C79821 = C70424 * C6311;
    const double C81627 = C70422 * C6311;
    const double C86973 = C152085 * C6311;
    const double C31215 = C153887 * C6317;
    const double C32648 = C24105 * C6317;
    const double C46799 = C34891 * C6317;
    const double C52048 = C153887 * C6317;
    const double C53475 = C153913 * C6317;
    const double C57122 = C153608 * C6317;
    const double C60438 = C153671 * C6317;
    const double C69096 = C153851 * C6317;
    const double C80635 = C153671 * C6317;
    const double C97348 = C83545 * C6317;
    const double C133280 = C153918 * C6317;
    const double C136296 = C70415 * C6317;
    const double C149838 = C153674 * C6317;
    const double C56367 = C56358 + C9132;
    const double C62219 = C62211 + C22985;
    const double C82426 = C82418 + C78773;
    const double C411 = C403 + C381;
    const double C1099 = C1095 + C1082;
    const double C7450 = C7444 + C7423;
    const double C7724 = C7711 + C7710;
    const double C7751 = C7750 + C7693;
    const double C48068 = C48062 + C48061;
    const double C48069 = C48067 + C48054;
    const double C63737 = C63729 + C63728;
    const double C107655 = C107647 + C107646;
    const double C116486 = C116480 + C116479;
    const double C116487 = C116485 + C116472;
    const double C3169 = C153913 * C1328;
    const double C3151 = C153887 * C1328;
    const double C11642 = C153671 * C1328;
    const double C24446 = C24105 * C1328;
    const double C24428 = C153887 * C1328;
    const double C34919 = C153860 * C1328;
    const double C35203 = C34890 * C1328;
    const double C35183 = C34891 * C1328;
    const double C70715 = C153671 * C1328;
    const double C74275 = C153860 * C1328;
    const double C74559 = C153928 * C1328;
    const double C74539 = C153918 * C1328;
    const double C83885 = C153674 * C1328;
    const double C83867 = C83545 * C1328;
    const double C3191 = C3149 + C3150;
    const double C11666 = C11640 + C11641;
    const double C24468 = C24426 + C24427;
    const double C34951 = C34917 + C34918;
    const double C70739 = C70713 + C70714;
    const double C74307 = C74273 + C74274;
    const double C83907 = C83865 + C83866;
    const double C7440 = C7426 + C1907;
    const double C3505 = C3463 + C3464;
    const double C102354 = C102348 + C5716;
    const double C12666 = C12648 + C12649;
    const double C24770 = C24728 + C24729;
    const double C71739 = C71721 + C71722;
    const double C84209 = C84167 + C84168;
    const double C3510 = C3484 + C3485;
    const double C7442 = C7431 + C7432;
    const double C20410 = C20400 + C13213;
    const double C24775 = C24749 + C24750;
    const double C78444 = C78426 + C72286;
    const double C84214 = C84188 + C84189;
    const double C8510 = C7451 * C2818;
    const double C8498 = C7451 * C2819;
    const double C16762 = C7451 * C11345;
    const double C48812 = C7451 * C153922;
    const double C48807 = C7451 * C153903;
    const double C56362 = C7451 * C153454;
    const double C64398 = C7451 * C153818;
    const double C64393 = C7451 * C153464;
    const double C100043 = C7451 * C153924;
    const double C108316 = C7451 * C74249;
    const double C108311 = C7451 * C153464;
    const double C117230 = C7451 * C153459;
    const double C117225 = C7451 * C153467;
    const double C152464 = ae * C152463;
    const double C3131 = (3 * C152414 + C152162 * C152463 +
                          (2 * C152408 + C152162 * C152453) * ae) /
                         C151933;
    const double C4307 = (C152354 * C152463) / C151933;
    const double C4962 = (C152463 + C152676 * C152417) / C151933;
    const double C22190 = C153671 * C4311;
    const double C32008 = C153887 * C4311;
    const double C33395 = C24105 * C4311;
    const double C44361 = C153860 * C4311;
    const double C45045 = C34891 * C4311;
    const double C46255 = C34890 * C4311;
    const double C52838 = C153887 * C4311;
    const double C54222 = C153913 * C4311;
    const double C81619 = C153671 * C4311;
    const double C94752 = C83545 * C4311;
    const double C96551 = C153674 * C4311;
    const double C130842 = C153860 * C4311;
    const double C131526 = C153918 * C4311;
    const double C132736 = C153928 * C4311;
    const double C9878 = C9876 + C7430;
    const double C9136 = C9135 + C9126;
    const double C406 = C398 + C364;
    const double C619 = C611 + C577;
    const double C625 = C617 + C597;
    const double C10482 = C7744 + C10474;
    const double C50720 = C48055 + C50716;
    const double C63736 = C63731 + C63730;
    const double C107654 = C107649 + C107648;
    const double C119138 = C116473 + C119134;
    const double C10477 = C7739 * C2819;
    const double C50718 = C7739 * C153903;
    const double C55930 = C7739 * C153454;
    const double C63732 = C7739 * C153818;
    const double C63724 = C7739 * C153464;
    const double C107650 = C7739 * C74249;
    const double C107642 = C7739 * C153464;
    const double C119136 = C7739 * C153467;
    const double C159 =
        (6 * (4 * C152209 + C152169 * C152226) +
         C152169 *
             (5 * C152226 +
              C152169 *
                  (4 * C152224 +
                   C152169 *
                       (3 * C152222 +
                        C152169 *
                            (2 * C152169 * C152220 +
                             C152169 * (C152220 + (C152214 * C152215 +
                                                   C152166 * bs[9] *
                                                       std::pow(C152164, 9)) *
                                                      C152165 * C152181)))))) /
        C151940;
    const double C359 = (2 * ae * (4 * C152278 + C152169 * C152303) +
                         C152162 * (4 * C152209 + C152169 * C152226)) /
                        C151940;
    const double C571 =
        (3 * C152195 + C152169 * C152209 + C152226 * std::pow(zP - zQ, 2)) /
        C151940;
    const double C572 =
        ((zP - zQ) * (4 * C152209 + C152169 * C152226)) / C151940;
    const double C573 =
        (4 * C152209 + C152169 * C152226 +
         (4 * C152224 +
          C152169 *
              (3 * C152222 +
               C152169 * (2 * C152169 * C152220 +
                          C152169 * (C152220 +
                                     (C152214 * C152215 +
                                      C152166 * bs[9] * std::pow(C152164, 9)) *
                                         C152165 * C152181)))) *
             std::pow(zP - zQ, 2)) /
        C151940;
    const double C755 =
        (2 * ae * (5 * C152303 + C152169 * C152335) +
         C152162 *
             (5 * C152226 +
              C152169 *
                  (4 * C152224 +
                   C152169 *
                       (3 * C152222 +
                        C152169 *
                            (2 * C152169 * C152220 +
                             C152169 * (C152220 + (C152214 * C152215 +
                                                   C152166 * bs[9] *
                                                       std::pow(C152164, 9)) *
                                                      C152165 * C152181)))))) /
        C151940;
    const double C888 =
        ((zP - zQ) *
         (5 * C152226 +
          C152169 *
              (4 * C152224 +
               C152169 * (3 * C152222 +
                          C152169 * (2 * C152169 * C152220 +
                                     C152169 * (C152220 +
                                                (C152214 * C152215 +
                                                 C152166 * bs[9] *
                                                     std::pow(C152164, 9)) *
                                                    C152165 * C152181)))))) /
        C151940;
    const double C1073 =
        (2 * ae * C152354 * C152303 + C152162 * C152354 * C152226) / C151940;
    const double C1467 =
        (2 * ae * (C152303 + C152331 * C152417) +
         C152162 *
             (C152226 +
              (3 * C152222 +
               C152169 * (2 * C152169 * C152220 +
                          C152169 * (C152220 +
                                     (C152214 * C152215 +
                                      C152166 * bs[9] * std::pow(C152164, 9)) *
                                         C152165 * C152181))) *
                  C152417)) /
        C151940;
    const double C2250 =
        (2 * C152354 * C152226 +
         C152354 *
             (C152226 +
              (3 * C152222 +
               C152169 * (2 * C152169 * C152220 +
                          C152169 * (C152220 +
                                     (C152214 * C152215 +
                                      C152166 * bs[9] * std::pow(C152164, 9)) *
                                         C152165 * C152181))) *
                  C152417)) /
        C151940;
    const double C7740 = C7731 + C7706;
    const double C34011 = (2 * ae *
                               (4 * (2 * C152736 + C152354 * C152886) +
                                C152354 * (3 * C152886 + C152354 * C153083)) +
                           C152162 * (4 * C153101 + C152354 * C153133)) /
                          C151940;
    const double C55917 = (5 * (3 * C152704 + C152354 * C153101) +
                           C152354 * (4 * C153101 + C152354 * C153133)) /
                          C151940;
    const double C56704 =
        (2 * ae *
             (5 * (3 * C152886 + C152354 * C153083) +
              C152354 *
                  (4 * C153083 +
                   C152354 *
                       (3 * C153027 +
                        C152354 * (2 * C153046 +
                                   C152354 * (C152290 + C152318 * C152417))))) +
         C152162 *
             (5 * C153133 +
              C152354 *
                  (4 * C153084 +
                   C152354 *
                       (3 * C153028 +
                        C152354 *
                            (2 * C153047 +
                             C152354 * (C152220 + (C152214 * C152215 +
                                                   C152166 * bs[9] *
                                                       std::pow(C152164, 9)) *
                                                      C152165 * C152417)))))) /
        C151940;
    const double C57461 =
        (6 * (4 * C153101 + C152354 * C153133) +
         C152354 *
             (5 * C153133 +
              C152354 *
                  (4 * C153084 +
                   C152354 *
                       (3 * C153028 +
                        C152354 *
                            (2 * C153047 +
                             C152354 * (C152220 + (C152214 * C152215 +
                                                   C152166 * bs[9] *
                                                       std::pow(C152164, 9)) *
                                                      C152165 * C152417)))))) /
        C151940;
    const double C152334 = C152332 * ae;
    const double C754 = (C152162 * (5 * C152303 + C152169 * C152335) +
                         (5 * C152300 + C152169 * C152332) * ae) /
                        C151933;
    const double C143 = 6 * (4 * C152275 + C152169 * C152300) +
                        C152169 * (5 * C152300 + C152169 * C152332);
    const double C336 = 4 * C152275 + C152169 * C152300 + C152332 * C152166;
    const double C549 = 4 * C152275 + C152169 * C152300 + C152332 * C152417;
    const double C753 = C152162 * (5 * C152300 + C152169 * C152332);
    const double C886 = C152354 * (5 * C152300 + C152169 * C152332);
    const double C1062 = C152354 * C152162 * C152332;
    const double C152367 = ae * C152364;
    const double C152366 = C152162 * C152364;
    const double C152423 = C152354 * C152364;
    const double C152528 = C152527 + C152521;
    const double C152549 = ae * C152548;
    const double C8489 = (2 * C152426 + C152354 * C152548) / C151933;
    const double C152603 = C152579 + C152601;
    const double C152687 = C152505 + C152684;
    const double C152718 = ae * C152713;
    const double C152752 = ae * C152751;
    const double C9118 = (3 * C152544 + C152354 * C152751) / C151933;
    const double C152870 = C152868 + C152854;
    const double C152912 = ae * C152907;
    const double C153121 = C152354 * C152907;
    const double C153115 = C153110 + C153114;
    const double C153005 = C153002 * ae;
    const double C29312 = 6 * (4 * C152669 + C152162 * C152812) +
                          C152162 * (5 * C152812 + C152162 * C153002);
    const double C29442 = 4 * C152669 + C152162 * C152812 + C153002 * C152417;
    const double C29856 = C152354 * (5 * C152812 + C152162 * C153002);
    const double C153006 = ae * C153001;
    const double C153004 = C152162 * C153001;
    const double C153023 = C153001 * C152417;
    const double C153050 = C152354 * C153001;
    const double C153086 = C153078 + C153079;
    const double C153137 = ae * C153135;
    const double C153140 = C152354 * C153135;
    const double C152306 = ae * C152305;
    const double C346 = (3 * C152257 + C152169 * C152278 + C152162 * C152305 +
                         C152162 * C152300 * ae) /
                        C151933;
    const double C1067 = (C152354 * C152305) / C151933;
    const double C1462 = (C152305 + C152364 * C152417) / C151933;
    const double C186 = C177 + C178;
    const double C760 = C757 + C388;
    const double C11396 = C11382 + C11383;
    const double C70469 = C70455 + C70456;
    const double C610 = C598 + C599;
    const double C893 = C890 + C601;
    const double C152380 = C152379 + C152376;
    const double C1899 =
        (C152354 * C152209 + C152427 + C152427 +
         C152162 * (2 * ae * C152354 * C152299 + C152162 * C152354 * C152224)) /
        C151940;
    const double C7972 = C7970 + C1474;
    const double C11944 = C11926 + C11927;
    const double C71017 = C70999 + C71000;
    const double C7741 = C7732 + C7714;
    const double C152508 = C152491 + C152506;
    const double C152566 = ae * C152564;
    const double C3494 = C2826 * C3447;
    const double C4968 = C2824 * C3447;
    const double C7435 = C135 * C3447;
    const double C13211 = C11351 * C3447;
    const double C22192 = C11349 * C3447;
    const double C24759 = C24115 * C3447;
    const double C26203 = C24113 * C3447;
    const double C72284 = C70424 * C3447;
    const double C78443 = C70422 * C3447;
    const double C84198 = C152085 * C3447;
    const double C3495 = C153887 * C3451;
    const double C7436 = C153608 * C3451;
    const double C20405 = C153671 * C3451;
    const double C24760 = C153887 * C3451;
    const double C79125 = C153671 * C3451;
    const double C84199 = C83545 * C3451;
    const double C8517 = C8504 + C8505;
    const double C19407 = C19398 + C14391;
    const double C78799 = C78782 + C73464;
    const double C152847 = C152839 + C152638;
    const double C152640 = C152639 + C152628;
    const double C152698 = ae * C152696;
    const double C6309 = (2 * C152558 + C152354 * C152696) / C151933;
    const double C6315 =
        (2 * C152557 + C152354 * C152695 + C152758 + C152758 +
         C152162 *
             (2 * ae * (2 * C152723 + C152354 * (C152284 + C152311 * C152417)) +
              C152162 * (2 * C152724 +
                         C152354 * (C152212 + C152169 * C152220 * C152417)))) /
        C151940;
    const double C9131 = C135 * C9119;
    const double C22983 = C11351 * C9119;
    const double C31231 = C24113 * C9119;
    const double C52064 = C2824 * C9119;
    const double C60442 = C11349 * C9119;
    const double C78778 = C70424 * C9119;
    const double C80639 = C70422 * C9119;
    const double C55941 = C55939 * C153454;
    const double C66098 = C55939 * C153464;
    const double C110015 = C55939 * C153464;
    const double C152996 = C152979 + C152992;
    const double C152819 = ae * C152817;
    const double C152818 = C152162 * C152817;
    const double C152883 = C152817 * C152417;
    const double C152921 = C152354 * C152817;
    const double C152961 = 4 * C152817;
    const double C153102 = C153099 + C153100;
    const double C153062 = C153053 + C152929;
    const double C153108 = ae * C153107;
    const double C34009 = (4 * C152763 + C152354 * C153107) / C151933;
    const double C180 = C135 * C151;
    const double C602 = C135 * C561;
    const double C892 = C135 * C887;
    const double C152044 = C152038 * be;
    const double C152027 = C152020 * ae;
    const double C70421 = -(C152020 * be) / C151933;
    const double C2880 = C2861 + C2862;
    const double C2877 = C2852 + C2853;
    const double C2874 = C2843 + C2844;
    const double C2871 = C2834 + C2835;
    const double C3195 = C3167 + C3168;
    const double C3192 = C3152 + C3153;
    const double C3189 = C3143 + C3144;
    const double C3512 = C3490 + C3491;
    const double C3509 = C3481 + C3482;
    const double C3506 = C3466 + C3467;
    const double C3503 = C3457 + C3458;
    const double C3768 = C3759 + C3183;
    const double C4006 = C3997 + C3497;
    const double C4341 = C4322 + C4323;
    const double C52076 = C52058 + C6324;
    const double C52073 = C52049 + C6327;
    const double C52070 = C52043 + C3476;
    const double C52067 = C52037 + C3473;
    const double C52864 = C52850 + C4971;
    const double C52861 = C52841 + C4974;
    const double C52858 = C52835 + C4317;
    const double C54846 = C54837 + C52054;
    const double C11395 = C11379 + C11380;
    const double C11394 = C11376 + C11377;
    const double C11391 = C11367 + C11368;
    const double C11389 = C11361 + C11362;
    const double C11387 = C11355 + C11356;
    const double C11669 = C11649 + C11650;
    const double C11667 = C11643 + C11644;
    const double C11665 = C11637 + C11638;
    const double C11664 = C11630 + C11631;
    const double C11662 = C11624 + C11625;
    const double C11660 = C11618 + C11619;
    const double C11943 = C11923 + C11924;
    const double C11941 = C11917 + C11918;
    const double C11939 = C11911 + C11912;
    const double C11938 = C11904 + C11905;
    const double C11936 = C11898 + C11899;
    const double C11934 = C11892 + C11893;
    const double C12171 = C12165 + C11655;
    const double C12379 = C12373 + C11929;
    const double C12669 = C12657 + C12658;
    const double C12667 = C12651 + C12652;
    const double C12665 = C12645 + C12646;
    const double C19076 = C19068 + C13868;
    const double C19406 = C19396 + C14392;
    const double C19404 = C19392 + C14394;
    const double C19403 = C19387 + C11909;
    const double C19400 = C19378 + C11908;
    const double C20411 = C20402 + C13212;
    const double C20409 = C20398 + C13214;
    const double C20407 = C20392 + C12643;
    const double C21215 = C21205 + C13216;
    const double C22197 = C22187 + C13870;
    const double C22987 = C22977 + C14396;
    const double C58364 = C58360 + C22194;
    const double C58671 = C58664 + C22984;
    const double C59651 = C59646 + C21212;
    const double C60445 = C60435 + C21214;
    const double C61427 = C61419 + C22196;
    const double C62218 = C62209 + C22986;
    const double C68442 = C68434 + C60444;
    const double C69634 = C69627 + C62216;
    const double C24168 = C24147 + C24148;
    const double C24167 = C24144 + C24145;
    const double C24162 = C24129 + C24130;
    const double C24159 = C24120 + C24121;
    const double C24474 = C24450 + C24451;
    const double C24471 = C24441 + C24442;
    const double C24470 = C24432 + C24433;
    const double C24467 = C24423 + C24424;
    const double C24776 = C24752 + C24753;
    const double C24773 = C24743 + C24744;
    const double C24772 = C24734 + C24735;
    const double C24769 = C24725 + C24726;
    const double C25032 = C25022 + C24459;
    const double C25270 = C25260 + C24761;
    const double C25596 = C25581 + C25582;
    const double C25593 = C25572 + C25573;
    const double C31242 = C31223 + C27533;
    const double C31241 = C31218 + C27536;
    const double C31236 = C31208 + C24740;
    const double C31233 = C31202 + C24739;
    const double C32033 = C32018 + C26207;
    const double C32030 = C32009 + C26210;
    const double C32027 = C32003 + C25569;
    const double C32655 = C32645 + C32015;
    const double C33410 = C33398 + C30972;
    const double C33407 = C33392 + C26945;
    const double C34024 = C34014 + C31220;
    const double C39076 = C39070 + C26942;
    const double C24169 = C24150 + C24151;
    const double C24166 = C24141 + C24142;
    const double C24163 = C24132 + C24133;
    const double C24160 = C24123 + C24124;
    const double C24472 = C24444 + C24445;
    const double C24469 = C24429 + C24430;
    const double C24466 = C24420 + C24421;
    const double C24777 = C24755 + C24756;
    const double C24774 = C24746 + C24747;
    const double C24771 = C24731 + C24732;
    const double C24768 = C24722 + C24723;
    const double C25033 = C25024 + C24460;
    const double C25271 = C25262 + C24762;
    const double C25594 = C25575 + C25576;
    const double C31243 = C31225 + C27532;
    const double C31240 = C31216 + C27535;
    const double C31237 = C31210 + C24741;
    const double C31234 = C31204 + C24738;
    const double C32034 = C32020 + C26206;
    const double C32031 = C32011 + C26209;
    const double C32028 = C32005 + C25570;
    const double C34025 = C34016 + C31221;
    const double C2891 = C2879 + C2859;
    const double C2890 = C2878 + C2856;
    const double C2885 = C2873 + C2841;
    const double C2882 = C2870 + C2832;
    const double C3209 = C3197 + C3174;
    const double C3206 = C3194 + C3165;
    const double C3205 = C3193 + C3156;
    const double C3202 = C3190 + C3147;
    const double C3523 = C3511 + C3488;
    const double C3520 = C3508 + C3479;
    const double C3519 = C3507 + C3470;
    const double C3516 = C3504 + C3461;
    const double C3770 = C3767 + C3182;
    const double C4008 = C4005 + C3496;
    const double C4349 = C4343 + C4329;
    const double C4346 = C4340 + C4320;
    const double C52088 = C52075 + C6325;
    const double C52087 = C52074 + C6328;
    const double C52082 = C52069 + C3475;
    const double C52079 = C52066 + C3474;
    const double C52872 = C52863 + C4972;
    const double C52869 = C52860 + C4975;
    const double C52866 = C52857 + C4316;
    const double C53486 = C53482 + C52845;
    const double C54243 = C54237 + C51811;
    const double C54240 = C54234 + C5719;
    const double C54849 = C54845 + C52053;
    const double C2887 = C2875 + C2847;
    const double C2884 = C2872 + C2838;
    const double C52084 = C52071 + C3477;
    const double C52081 = C52068 + C3472;
    const double C11403 = C11393 + C11374;
    const double C11402 = C11392 + C11371;
    const double C11400 = C11390 + C11365;
    const double C11398 = C11388 + C11359;
    const double C11675 = C11663 + C11628;
    const double C11673 = C11661 + C11622;
    const double C11954 = C11942 + C11921;
    const double C11952 = C11940 + C11915;
    const double C11949 = C11937 + C11902;
    const double C11947 = C11935 + C11896;
    const double C19413 = C19405 + C14393;
    const double C19410 = C19402 + C11910;
    const double C19409 = C19401 + C11907;
    const double C20414 = C20408 + C12644;
    const double C21218 = C21216 + C13215;
    const double C22990 = C22988 + C14395;
    const double C24176 = C24164 + C24136;
    const double C24173 = C24161 + C24127;
    const double C31251 = C31238 + C24742;
    const double C31248 = C31235 + C24737;
    const double C70476 = C70466 + C70447;
    const double C70475 = C70465 + C70444;
    const double C70473 = C70463 + C70438;
    const double C70471 = C70461 + C70432;
    const double C70748 = C70736 + C70701;
    const double C70746 = C70734 + C70695;
    const double C71027 = C71015 + C70994;
    const double C71025 = C71013 + C70988;
    const double C71022 = C71010 + C70975;
    const double C71020 = C71008 + C70969;
    const double C78808 = C78794 + C73468;
    const double C78806 = C78792 + C73466;
    const double C78805 = C78790 + C70983;
    const double C78803 = C78788 + C70980;
    const double C79841 = C79835 + C72288;
    const double C79839 = C79833 + C71717;
    const double C83615 = C83603 + C83575;
    const double C83612 = C83600 + C83566;
    const double C93764 = C93753 + C84181;
    const double C93763 = C93750 + C84176;
    const double C152060 = C152031 - C152053;
    const double C152036 = C152029 + C153851;
    const double C9879 = C9877 + C9865;
    const double C404 = C396 + C383;
    const double C2888 = C2876 + C2850;
    const double C11671 = C11659 + C11616;
    const double C24177 = C24165 + C24139;
    const double C70744 = C70732 + C70689;
    const double C83616 = C83604 + C83578;
    const double C1096 = C1092 + C1084;
    const double C11945 = C11933 + C11890;
    const double C71018 = C71006 + C70963;
    const double C3178 = C153913 * C1327;
    const double C3142 = C153887 * C1327;
    const double C11648 = C153671 * C1327;
    const double C24455 = C24105 * C1327;
    const double C24419 = C153887 * C1327;
    const double C34922 = C153860 * C1327;
    const double C35699 = C34891 * C1327;
    const double C70721 = C153671 * C1327;
    const double C74278 = C153860 * C1327;
    const double C75055 = C153918 * C1327;
    const double C83894 = C153674 * C1327;
    const double C83858 = C83545 * C1327;
    const double C3198 = C3176 + C3177;
    const double C3188 = C3140 + C3141;
    const double C11668 = C11646 + C11647;
    const double C24475 = C24453 + C24454;
    const double C24465 = C24417 + C24418;
    const double C34952 = C34920 + C34921;
    const double C70741 = C70719 + C70720;
    const double C74308 = C74276 + C74277;
    const double C83904 = C83856 + C83857;
    const double C7441 = C7428 + C1906;
    const double C3502 = C3454 + C3455;
    const double C4344 = C4331 + C4332;
    const double C12668 = C12654 + C12655;
    const double C19078 = C19072 + C13866;
    const double C24767 = C24719 + C24720;
    const double C25597 = C25584 + C25585;
    const double C71741 = C71727 + C71728;
    const double C84206 = C84158 + C84159;
    const double C152487 = ae * C152486;
    const double C3132 = (3 * C152403 + C152162 * C152486 +
                          (2 * C152397 + C152162 * C152476) * ae) /
                         C151933;
    const double C4308 = (C152354 * C152486) / C151933;
    const double C4327 = C153887 * C4312;
    const double C19071 = C153671 * C4312;
    const double C25580 = C153887 * C4312;
    const double C35438 = C153860 * C4312;
    const double C36206 = C34891 * C4312;
    const double C39073 = C24105 * C4312;
    const double C74794 = C153860 * C4312;
    const double C75562 = C153918 * C4312;
    const double C78433 = C153671 * C4312;
    const double C85019 = C83545 * C4312;
    const double C93424 = C153674 * C4312;
    const double C102351 = C153913 * C4312;
    const double C8524 = C8520 + C8503;
    const double C152679 = C152650 + C152677;
    const double C152743 = ae * C152738;
    const double C32014 = C153887 * C4965;
    const double C33401 = C24105 * C4965;
    const double C44363 = C153860 * C4965;
    const double C45587 = C34891 * C4965;
    const double C52844 = C153887 * C4965;
    const double C54228 = C153913 * C4965;
    const double C61422 = C153671 * C4965;
    const double C81623 = C153671 * C4965;
    const double C95566 = C83545 * C4965;
    const double C130844 = C153860 * C4965;
    const double C132068 = C153918 * C4965;
    const double C150585 = C153674 * C4965;
    const double C52072 = C52047 + C6326;
    const double C57126 = C57121 + C9874;
    const double C60446 = C60437 + C21213;
    const double C31239 = C31214 + C27534;
    const double C32656 = C32647 + C32016;
    const double C53483 = C53474 + C52846;
    const double C69101 = C69095 + C61426;
    const double C80643 = C80634 + C79821;
    const double C97357 = C97347 + C86973;
    const double C56369 = C56367 + C9132;
    const double C62222 = C62219 + C22985;
    const double C82429 = C82426 + C78773;
    const double C8508 = C1099 * C2819;
    const double C8495 = C1099 * C153874;
    const double C16239 = C1099 * C11345;
    const double C16236 = C1099 * C11346;
    const double C48810 = C1099 * C153903;
    const double C48805 = C1099 * C153874;
    const double C64397 = C1099 * C153464;
    const double C99521 = C1099 * C153924;
    const double C99518 = C1099 * C153905;
    const double C108315 = C1099 * C153464;
    const double C117228 = C1099 * C153467;
    const double C117223 = C1099 * C83548;
    const double C8511 = C7450 * C2819;
    const double C8499 = C7450 * C153874;
    const double C16763 = C7450 * C11346;
    const double C48813 = C7450 * C153903;
    const double C48808 = C7450 * C153874;
    const double C64399 = C7450 * C153464;
    const double C100044 = C7450 * C153905;
    const double C108317 = C7450 * C153464;
    const double C117231 = C7450 * C153467;
    const double C117226 = C7450 * C83548;
    const double C3203 = C3191 + C3150;
    const double C11678 = C11666 + C11641;
    const double C24480 = C24468 + C24427;
    const double C34963 = C34951 + C34918;
    const double C70751 = C70739 + C70714;
    const double C74319 = C74307 + C74274;
    const double C83919 = C83907 + C83866;
    const double C7446 = C7440 + C1907;
    const double C3517 = C3505 + C3464;
    const double C102357 = C102354 + C5716;
    const double C12672 = C12666 + C12649;
    const double C24782 = C24770 + C24729;
    const double C71745 = C71739 + C71722;
    const double C84221 = C84209 + C84168;
    const double C3522 = C3510 + C3485;
    const double C7448 = C7442 + C7432;
    const double C20416 = C20410 + C13213;
    const double C24787 = C24775 + C24750;
    const double C78450 = C78444 + C72286;
    const double C84226 = C84214 + C84189;
    const double C9129 = C8498 + C8527;
    const double C49400 = C48807 + C48806;
    const double C64924 = C64393 + C64392;
    const double C108841 = C108311 + C108310;
    const double C117818 = C117225 + C117224;
    const double C3135 =
        (3 * (C152176 + C152412 + C152412 + C152162 * C152454) + C152464 +
         C152464 +
         C152162 *
             (2 * C152454 + C152461 + C152461 +
              C152162 * (C152185 + C152457 + C152457 +
                         C152162 * (2 * ae * C152230 + C152162 * C152193)))) /
        C151940;
    const double C3163 = C2826 * C3131;
    const double C4738 = C2824 * C3131;
    const double C13013 = C11351 * C3131;
    const double C24440 = C24115 * C3131;
    const double C25982 = C24113 * C3131;
    const double C28365 = C28359 * C3131;
    const double C35190 = C34902 * C3131;
    const double C72086 = C70424 * C3131;
    const double C74546 = C74258 * C3131;
    const double C83879 = C152085 * C3131;
    const double C4318 = C2826 * C4307;
    const double C5718 = C2824 * C4307;
    const double C8897 = C135 * C4307;
    const double C13869 = C11351 * C4307;
    const double C20914 = C11349 * C4307;
    const double C25571 = C24115 * C4307;
    const double C26944 = C24113 * C4307;
    const double C32423 = C24111 * C4307;
    const double C35448 = C34902 * C4307;
    const double C53253 = C2822 * C4307;
    const double C72942 = C70424 * C4307;
    const double C74804 = C74258 * C4307;
    const double C80341 = C70422 * C4307;
    const double C85010 = C152085 * C4307;
    const double C4973 = C2826 * C4962;
    const double C8894 = C135 * C4962;
    const double C22195 = C11351 * C4962;
    const double C26208 = C24115 * C4962;
    const double C30973 = C24113 * C4962;
    const double C32420 = C24111 * C4962;
    const double C35455 = C34902 * C4962;
    const double C51812 = C2824 * C4962;
    const double C53250 = C2822 * C4962;
    const double C60144 = C11349 * C4962;
    const double C74811 = C74258 * C4962;
    const double C78435 = C70424 * C4962;
    const double C80337 = C70422 * C4962;
    const double C85647 = C152085 * C4962;
    const double C9880 = C9878 + C9869;
    const double C9137 = C9136 * C2818;
    const double C49397 = C9136 * C153922;
    const double C56357 = C9136 * C153454;
    const double C64394 = C9136 * C153818;
    const double C108312 = C9136 * C74249;
    const double C117815 = C9136 * C153459;
    const double C8195 = C619 * C153874;
    const double C15579 = C619 * C153852;
    const double C15974 = C619 * C11346;
    const double C48509 = C619 * C153874;
    const double C98861 = C619 * C153852;
    const double C99256 = C619 * C153905;
    const double C116927 = C619 * C83548;
    const double C7712 = C625 * C153874;
    const double C8197 = C625 * C2819;
    const double C15582 = C625 * C11346;
    const double C15572 = C625 * C153852;
    const double C48063 = C625 * C153874;
    const double C48511 = C625 * C153903;
    const double C64129 = C625 * C153464;
    const double C98864 = C625 * C153905;
    const double C98854 = C625 * C153852;
    const double C108047 = C625 * C153464;
    const double C116481 = C625 * C83548;
    const double C116929 = C625 * C153467;
    const double C66095 = C63724 + C63725;
    const double C110012 = C107642 + C107643;
    const double C758 = C153608 * C359;
    const double C11384 = C153671 * C359;
    const double C70457 = C153671 * C359;
    const double C600 = C153608 * C571;
    const double C891 = C153608 * C572;
    const double C1088 = C153608 * C1073;
    const double C12376 = C153671 * C1073;
    const double C71449 = C153671 * C1073;
    const double C10478 = C7740 * C153874;
    const double C50719 = C7740 * C153874;
    const double C56189 = C7740 * C153454;
    const double C63733 = C7740 * C153464;
    const double C107651 = C7740 * C153464;
    const double C119137 = C7740 * C83548;
    const double C56707 = C153608 * C34011;
    const double C69630 = C153671 * C34011;
    const double C136830 = C153671 * C34011;
    const double C57464 = C153608 * C55917;
    const double C152337 = C152336 + C152334;
    const double C759 = C135 * C754;
    const double C11385 = C11351 * C754;
    const double C70458 = C70424 * C754;
    const double C152368 = C152303 + C152366;
    const double C152424 = ae * C152423;
    const double C152530 = ae * C152528;
    const double C152529 = C152162 * C152528;
    const double C152570 = C152354 * C152528;
    const double C3452 =
        (C152209 + C152224 * C152417 + C152549 + C152549 +
         C152162 *
             (2 * ae * (C152299 + C152327 * C152417) +
              C152162 * (C152224 +
                         (2 * C152169 * C152220 +
                          C152169 * (C152220 +
                                     (C152214 * C152215 +
                                      C152166 * bs[9] * std::pow(C152164, 9)) *
                                         C152165 * C152181)) *
                             C152417))) /
        C151940;
    const double C8513 = C135 * C8489;
    const double C14389 = C11351 * C8489;
    const double C73462 = C70424 * C8489;
    const double C152604 = C152603 + C152592;
    const double C152689 = ae * C152687;
    const double C6307 = (2 * C152564 + C152354 * C152687) / C151933;
    const double C6313 =
        (2 * C152563 + C152354 * C152686 + C152752 + C152752 +
         C152162 *
             (2 * ae * (2 * C152710 + C152354 * (C152295 + C152323 * C152417)) +
              C152162 *
                  (2 * C152711 +
                   C152354 * (C152222 + (C152220 + (C152214 * C152215 +
                                                    C152166 * bs[9] *
                                                        std::pow(C152164, 9)) *
                                                       C152165 * C152181) *
                                            C152417)))) /
        C151940;
    const double C9130 = C135 * C9118;
    const double C22981 = C11351 * C9118;
    const double C78785 = C70424 * C9118;
    const double C152872 = ae * C152870;
    const double C152871 = C152162 * C152870;
    const double C152901 = C152870 * C152417;
    const double C152940 = C152354 * C152870;
    const double C153124 = C153120 + C153121;
    const double C153116 = ae * C153115;
    const double C56352 = (4 * C152757 + C152354 * C153115) / C151933;
    const double C153007 = C152962 + C153004;
    const double C153030 = C152817 + C153023;
    const double C153059 = ae * C153050;
    const double C153092 = ae * C153086;
    const double C153130 = C152354 * C153086;
    const double C153141 = C153139 + C153140;
    const double C358 = (3 * C152195 + C152169 * C152209 + C152306 + C152306 +
                         C152162 * (2 * ae * C152303 + C152162 * C152226)) /
                        C151940;
    const double C386 = C135 * C346;
    const double C2865 = C2826 * C346;
    const double C3764 = C2824 * C346;
    const double C11658 = C11349 * C346;
    const double C11656 = C11351 * C346;
    const double C24154 = C24115 * C346;
    const double C25029 = C24113 * C346;
    const double C70731 = C70422 * C346;
    const double C70729 = C70424 * C346;
    const double C83593 = C152085 * C346;
    const double C1087 = C135 * C1067;
    const double C4002 = C2824 * C1067;
    const double C11930 = C11351 * C1067;
    const double C12664 = C11349 * C1067;
    const double C25267 = C24113 * C1067;
    const double C71003 = C70424 * C1067;
    const double C71737 = C70422 * C1067;
    const double C1473 = C135 * C1462;
    const double C11931 = C11351 * C1462;
    const double C71004 = C70424 * C1462;
    const double C192 = C186 + C178;
    const double C761 = C760 + C388;
    const double C11406 = C11396 + C11383;
    const double C70479 = C70469 + C70456;
    const double C618 = C610 + C599;
    const double C894 = C893 + C601;
    const double C152381 = ae * C152380;
    const double C1321 =
        (2 * C152280 + C152162 * C152380 + (C152275 + C152296 * C152166) * ae) /
        C151933;
    const double C1894 = (C152354 * C152380) / C151933;
    const double C3448 = (C152380 + C152528 * C152417) / C151933;
    const double C4000 = C153887 * C1899;
    const double C12662 = C153671 * C1899;
    const double C15370 = C153608 * C1899;
    const double C25265 = C153887 * C1899;
    const double C71735 = C153671 * C1899;
    const double C84704 = C83545 * C1899;
    const double C7973 = C7972 + C1474;
    const double C11956 = C11944 + C11927;
    const double C71029 = C71017 + C71000;
    const double C7749 = C7741 * C153874;
    const double C17936 = C7741 * C153852;
    const double C48066 = C7741 * C153874;
    const double C64131 = C7741 * C153464;
    const double C101217 = C7741 * C153852;
    const double C108049 = C7741 * C153464;
    const double C116484 = C7741 * C83548;
    const double C152509 = C152508 + C152502;
    const double C4313 = (2 * (2 * ae * C152354 * C152274 + C152162 * C152563) +
                          C152566 + C152566 +
                          C152162 * (C152563 + C152567 + C152567 +
                                     C152162 * (2 * ae * C152354 * C152295 +
                                                C152162 * C152354 * C152222))) /
                         C151940;
    const double C3513 = C3493 + C3494;
    const double C7443 = C7434 + C7435;
    const double C20412 = C20404 + C13211;
    const double C24778 = C24758 + C24759;
    const double C79127 = C79124 + C72284;
    const double C84217 = C84197 + C84198;
    const double C8521 = C8517 + C8505;
    const double C19415 = C19407 + C14391;
    const double C78813 = C78799 + C73464;
    const double C152864 = C152847 + C152860;
    const double C152642 = ae * C152640;
    const double C152641 = C152162 * C152640;
    const double C152725 = C152354 * C152640;
    const double C152832 = 4 * C152640;
    const double C4961 = (C152486 + C152640 * C152417) / C151933;
    const double C4964 =
        (2 * (2 * ae * (C152264 + C152284 * C152417) + C152162 * C152695) +
         C152698 + C152698 +
         C152162 *
             (C152695 + C152699 + C152699 +
              C152162 * (2 * ae * (C152284 + C152311 * C152417) +
                         C152162 * (C152212 + C152169 * C152220 * C152417)))) /
        C151940;
    const double C6323 = C2826 * C6309;
    const double C9873 = C135 * C6309;
    const double C21211 = C11351 * C6309;
    const double C27531 = C24115 * C6309;
    const double C32025 = C24113 * C6309;
    const double C52855 = C2824 * C6309;
    const double C61424 = C11349 * C6309;
    const double C79826 = C70424 * C6309;
    const double C81625 = C70422 * C6309;
    const double C86970 = C152085 * C6309;
    const double C31228 = C153887 * C6315;
    const double C52061 = C153887 * C6315;
    const double C59649 = C153671 * C6315;
    const double C63520 = C153608 * C6315;
    const double C79827 = C153671 * C6315;
    const double C93747 = C83545 * C6315;
    const double C56368 = C56364 + C9131;
    const double C58672 = C58666 + C22983;
    const double C78797 = C78777 + C78778;
    const double C153000 = C152162 * C152996;
    const double C152971 = C152955 + C152819;
    const double C152820 = C152783 + C152818;
    const double C152888 = C152676 + C152883;
    const double C152928 = ae * C152921;
    const double C153076 = 2 * C152921;
    const double C153103 = ae * C153102;
    const double C31197 = (3 * C152705 + C152354 * C153102) / C151933;
    const double C153068 = C153062 + C153067;
    const double C31199 =
        (3 * C152704 + C152354 * C153101 + C153108 + C153108 +
         C152162 * (2 * ae * (3 * C152886 + C152354 * C153083) +
                    C152162 * (3 * C152887 + C152354 * C153084))) /
        C151940;
    const double C34021 = C24113 * C34009;
    const double C54842 = C2824 * C34009;
    const double C56360 = C135 * C34009;
    const double C62215 = C11351 * C34009;
    const double C68441 = C11349 * C34009;
    const double C82422 = C70424 * C34009;
    const double C135641 = C70422 * C34009;
    const double C152052 = C152044 / C151933;
    const double C152037 = C152027 / C151944;
    const double C152035 = C151931 * C152027;
    const double C70452 = C70421 * C141;
    const double C70449 = C70421 * C140;
    const double C70440 = C70421 * C139;
    const double C70434 = C70421 * C138;
    const double C70428 = C70421 * C137;
    const double C70722 = C70421 * C333;
    const double C70716 = C70421 * C332;
    const double C70710 = C70421 * C331;
    const double C70703 = C70421 * C328;
    const double C70697 = C70421 * C327;
    const double C70691 = C70421 * C326;
    const double C70996 = C70421 * C546;
    const double C70990 = C70421 * C545;
    const double C70984 = C70421 * C544;
    const double C70977 = C70421 * C541;
    const double C70971 = C70421 * C540;
    const double C70965 = C70421 * C539;
    const double C71238 = C70421 * C325;
    const double C71446 = C70421 * C538;
    const double C71730 = C70421 * C1060;
    const double C71724 = C70421 * C1059;
    const double C71718 = C70421 * C1058;
    const double C78436 = C70421 * C3442;
    const double C78430 = C70421 * C1891;
    const double C78428 = C70421 * C1460;
    const double C78780 = C70421 * C2242;
    const double C78774 = C70421 * C7674;
    const double C78768 = C70421 * C2244;
    const double C78764 = C70421 * C2243;
    const double C78757 = C70421 * C543;
    const double C78752 = C70421 * C542;
    const double C79122 = C70421 * C1459;
    const double C79822 = C70421 * C6304;
    const double C79815 = C70421 * C1461;
    const double C79810 = C70421 * C1057;
    const double C80632 = C70421 * C6306;
    const double C81620 = C70421 * C3441;
    const double C81616 = C70421 * C1892;
    const double C82416 = C70421 * C7673;
    const double C88186 = C70421 * C1890;
    const double C135634 = C70421 * C9117;
    const double C136295 = C70421 * C6305;
    const double C136827 = C70421 * C10466;
    const double C2892 = C2880 + C2862;
    const double C2889 = C2877 + C2853;
    const double C2886 = C2874 + C2844;
    const double C2883 = C2871 + C2835;
    const double C3207 = C3195 + C3168;
    const double C3204 = C3192 + C3153;
    const double C3201 = C3189 + C3144;
    const double C3524 = C3512 + C3491;
    const double C3521 = C3509 + C3482;
    const double C3518 = C3506 + C3467;
    const double C3515 = C3503 + C3458;
    const double C3771 = C3768 + C3183;
    const double C4009 = C4006 + C3497;
    const double C4347 = C4341 + C4323;
    const double C52089 = C52076 + C6324;
    const double C52086 = C52073 + C6327;
    const double C52083 = C52070 + C3476;
    const double C52080 = C52067 + C3473;
    const double C52873 = C52864 + C4971;
    const double C52870 = C52861 + C4974;
    const double C52867 = C52858 + C4317;
    const double C54850 = C54846 + C52054;
    const double C11405 = C11395 + C11380;
    const double C11404 = C11394 + C11377;
    const double C11401 = C11391 + C11368;
    const double C11399 = C11389 + C11362;
    const double C11397 = C11387 + C11356;
    const double C11681 = C11669 + C11650;
    const double C11679 = C11667 + C11644;
    const double C11677 = C11665 + C11638;
    const double C11676 = C11664 + C11631;
    const double C11674 = C11662 + C11625;
    const double C11672 = C11660 + C11619;
    const double C11955 = C11943 + C11924;
    const double C11953 = C11941 + C11918;
    const double C11951 = C11939 + C11912;
    const double C11950 = C11938 + C11905;
    const double C11948 = C11936 + C11899;
    const double C11946 = C11934 + C11893;
    const double C12173 = C12171 + C11655;
    const double C12381 = C12379 + C11929;
    const double C12675 = C12669 + C12658;
    const double C12673 = C12667 + C12652;
    const double C12671 = C12665 + C12646;
    const double C19080 = C19076 + C13868;
    const double C19414 = C19406 + C14392;
    const double C19412 = C19404 + C14394;
    const double C19411 = C19403 + C11909;
    const double C19408 = C19400 + C11908;
    const double C20417 = C20411 + C13212;
    const double C20415 = C20409 + C13214;
    const double C20413 = C20407 + C12643;
    const double C21217 = C21215 + C13216;
    const double C22199 = C22197 + C13870;
    const double C22989 = C22987 + C14396;
    const double C58366 = C58364 + C22194;
    const double C58675 = C58671 + C22984;
    const double C59653 = C59651 + C21212;
    const double C60448 = C60445 + C21214;
    const double C61429 = C61427 + C22196;
    const double C62221 = C62218 + C22986;
    const double C68445 = C68442 + C60444;
    const double C69636 = C69634 + C62216;
    const double C24180 = C24168 + C24148;
    const double C24179 = C24167 + C24145;
    const double C24174 = C24162 + C24130;
    const double C24171 = C24159 + C24121;
    const double C24486 = C24474 + C24451;
    const double C24483 = C24471 + C24442;
    const double C24482 = C24470 + C24433;
    const double C24479 = C24467 + C24424;
    const double C24788 = C24776 + C24753;
    const double C24785 = C24773 + C24744;
    const double C24784 = C24772 + C24735;
    const double C24781 = C24769 + C24726;
    const double C25035 = C25032 + C24459;
    const double C25273 = C25270 + C24761;
    const double C25602 = C25596 + C25582;
    const double C25599 = C25593 + C25573;
    const double C31255 = C31242 + C27533;
    const double C31254 = C31241 + C27536;
    const double C31249 = C31236 + C24740;
    const double C31246 = C31233 + C24739;
    const double C32042 = C32033 + C26207;
    const double C32039 = C32030 + C26210;
    const double C32036 = C32027 + C25569;
    const double C32659 = C32655 + C32015;
    const double C33416 = C33410 + C30972;
    const double C33413 = C33407 + C26945;
    const double C34028 = C34024 + C31220;
    const double C39079 = C39076 + C26942;
    const double C24181 = C24169 + C24151;
    const double C24178 = C24166 + C24142;
    const double C24175 = C24163 + C24133;
    const double C24172 = C24160 + C24124;
    const double C24484 = C24472 + C24445;
    const double C24481 = C24469 + C24430;
    const double C24478 = C24466 + C24421;
    const double C24789 = C24777 + C24756;
    const double C24786 = C24774 + C24747;
    const double C24783 = C24771 + C24732;
    const double C24780 = C24768 + C24723;
    const double C25036 = C25033 + C24460;
    const double C25274 = C25271 + C24762;
    const double C25600 = C25594 + C25576;
    const double C31256 = C31243 + C27532;
    const double C31253 = C31240 + C27535;
    const double C31250 = C31237 + C24741;
    const double C31247 = C31234 + C24738;
    const double C32043 = C32034 + C26206;
    const double C32040 = C32031 + C26209;
    const double C32037 = C32028 + C25570;
    const double C34029 = C34025 + C31221;
    const double C2903 = C2891 + C2860;
    const double C2902 = C2890 + C2857;
    const double C2897 = C2885 + C2842;
    const double C2894 = C2882 + C2833;
    const double C3221 = C3209 + C3175;
    const double C3218 = C3206 + C3166;
    const double C3217 = C3205 + C3157;
    const double C3214 = C3202 + C3148;
    const double C3535 = C3523 + C3489;
    const double C3532 = C3520 + C3480;
    const double C3531 = C3519 + C3471;
    const double C3528 = C3516 + C3462;
    const double C3773 = C3770 + C3758;
    const double C4011 = C4008 + C3996;
    const double C4355 = C4349 + C4330;
    const double C4352 = C4346 + C4321;
    const double C52101 = C52088 + C52057;
    const double C52100 = C52087 + C52052;
    const double C52095 = C52082 + C52042;
    const double C52092 = C52079 + C52036;
    const double C52881 = C52872 + C52849;
    const double C52878 = C52869 + C52840;
    const double C52875 = C52866 + C52834;
    const double C53490 = C53486 + C53473;
    const double C54249 = C54243 + C54226;
    const double C54246 = C54240 + C54220;
    const double C54852 = C54849 + C54836;
    const double C2899 = C2887 + C2848;
    const double C2896 = C2884 + C2839;
    const double C52097 = C52084 + C52046;
    const double C52094 = C52081 + C52040;
    const double C11413 = C11403 + C11375;
    const double C11412 = C11402 + C11372;
    const double C11410 = C11400 + C11366;
    const double C11408 = C11398 + C11360;
    const double C11687 = C11675 + C11629;
    const double C11685 = C11673 + C11623;
    const double C11966 = C11954 + C11922;
    const double C11964 = C11952 + C11916;
    const double C11961 = C11949 + C11903;
    const double C11959 = C11947 + C11897;
    const double C19421 = C19413 + C19395;
    const double C19418 = C19410 + C19386;
    const double C19417 = C19409 + C19381;
    const double C20420 = C20414 + C20395;
    const double C21220 = C21218 + C21208;
    const double C22992 = C22990 + C22980;
    const double C24188 = C24176 + C24137;
    const double C24185 = C24173 + C24128;
    const double C31264 = C31251 + C31213;
    const double C31261 = C31248 + C31207;
    const double C70486 = C70476 + C70448;
    const double C70485 = C70475 + C70445;
    const double C70483 = C70473 + C70439;
    const double C70481 = C70471 + C70433;
    const double C70760 = C70748 + C70702;
    const double C70758 = C70746 + C70696;
    const double C71039 = C71027 + C70995;
    const double C71037 = C71025 + C70989;
    const double C71034 = C71022 + C70976;
    const double C71032 = C71020 + C70970;
    const double C78821 = C78808 + C78767;
    const double C78819 = C78806 + C78763;
    const double C78818 = C78805 + C78760;
    const double C78816 = C78803 + C78755;
    const double C79847 = C79841 + C79818;
    const double C79845 = C79839 + C79813;
    const double C83627 = C83615 + C83576;
    const double C83624 = C83612 + C83567;
    const double C93773 = C93764 + C93735;
    const double C93772 = C93763 + C93731;
    const double C83596 = C152060 * C347;
    const double C83590 = C152060 * C337;
    const double C83581 = C152060 * C338;
    const double C83572 = C152060 * C339;
    const double C83563 = C152060 * C340;
    const double C83557 = C152060 * C341;
    const double C83899 = C152060 * C345;
    const double C83893 = C152060 * C1322;
    const double C83884 = C152060 * C1323;
    const double C83878 = C152060 * C1324;
    const double C83875 = C152060 * C342;
    const double C83869 = C152060 * C343;
    const double C83860 = C152060 * C344;
    const double C84204 = C152060 * C1463;
    const double C84201 = C152060 * C1066;
    const double C84195 = C152060 * C1464;
    const double C84186 = C152060 * C1465;
    const double C84180 = C152060 * C1466;
    const double C84177 = C152060 * C1063;
    const double C84171 = C152060 * C1064;
    const double C84162 = C152060 * C1065;
    const double C84468 = C152060 * C346;
    const double C84706 = C152060 * C1067;
    const double C85024 = C152060 * C1895;
    const double C85015 = C152060 * C1896;
    const double C85009 = C152060 * C1897;
    const double C85421 = C152060 * C3131;
    const double C85648 = C152060 * C3445;
    const double C85645 = C152060 * C3446;
    const double C85642 = C152060 * C3447;
    const double C86383 = C152060 * C4307;
    const double C86974 = C152060 * C6312;
    const double C86971 = C152060 * C6310;
    const double C86968 = C152060 * C6308;
    const double C95571 = C152060 * C6311;
    const double C95568 = C152060 * C6309;
    const double C96558 = C152060 * C4962;
    const double C97353 = C152060 * C9120;
    const double C97350 = C152060 * C9119;
    const double C151190 = C152060 * C34009;
    const double C28357 =
        (C152060 / C151975 + ((C151931 * C152085 + C83545) * ae) / C151933) /
            C151975 -
        ((C151931 * (C152085 / C151975 + (0 * ae) / C151933) + C153860) * be) /
            C151933;
    const double C34900 =
        C152060 / C151975 - ((C151931 * C152085 + C83545) * be) / C151933;
    const double C74256 =
        C152060 / C151975 + ((C151931 * C152085 + C83545) * ae) / C151933;
    const double C152043 = C152036 * be;
    const double C9881 = C9879 * C2818;
    const double C17411 = C9879 * C11344;
    const double C50128 = C9879 * C153922;
    const double C57119 = C9879 * C153454;
    const double C65571 = C9879 * C153818;
    const double C100692 = C9879 * C153931;
    const double C109488 = C9879 * C74249;
    const double C118546 = C9879 * C153459;
    const double C412 = C404 + C384;
    const double C2900 = C2888 + C2851;
    const double C11683 = C11671 + C11617;
    const double C24189 = C24177 + C24140;
    const double C70756 = C70744 + C70690;
    const double C83628 = C83616 + C83579;
    const double C1100 = C1096 + C1085;
    const double C11957 = C11945 + C11891;
    const double C71030 = C71018 + C70964;
    const double C3210 = C3198 + C3177;
    const double C3200 = C3188 + C3141;
    const double C11680 = C11668 + C11647;
    const double C24487 = C24475 + C24454;
    const double C24477 = C24465 + C24418;
    const double C34964 = C34952 + C34921;
    const double C70753 = C70741 + C70720;
    const double C74320 = C74308 + C74277;
    const double C83916 = C83904 + C83857;
    const double C7447 = C7441 + C1906;
    const double C3514 = C3502 + C3455;
    const double C4350 = C4344 + C4332;
    const double C12674 = C12668 + C12655;
    const double C19082 = C19078 + C13866;
    const double C24779 = C24767 + C24720;
    const double C25603 = C25597 + C25585;
    const double C71747 = C71741 + C71728;
    const double C84218 = C84206 + C84159;
    const double C3136 =
        (3 * (C152394 + C152401 + C152401 + C152162 * C152477) + C152487 +
         C152487 +
         C152162 *
             (2 * C152477 + C152484 + C152484 +
              C152162 * (C152197 + C152480 + C152480 +
                         C152162 * (2 * ae * C152284 + C152162 * C152212)))) /
        C151940;
    const double C3171 = C2826 * C3132;
    const double C4735 = C2824 * C3132;
    const double C13011 = C11351 * C3132;
    const double C24448 = C24115 * C3132;
    const double C25979 = C24113 * C3132;
    const double C28366 = C28359 * C3132;
    const double C35179 = C34902 * C3132;
    const double C72084 = C70424 * C3132;
    const double C74535 = C74258 * C3132;
    const double C83887 = C152085 * C3132;
    const double C85418 = C152060 * C3132;
    const double C4326 = C2826 * C4308;
    const double C5715 = C2824 * C4308;
    const double C8896 = C135 * C4308;
    const double C13867 = C11351 * C4308;
    const double C20912 = C11349 * C4308;
    const double C25579 = C24115 * C4308;
    const double C26941 = C24113 * C4308;
    const double C35437 = C34902 * C4308;
    const double C40839 = C24111 * C4308;
    const double C72940 = C70424 * C4308;
    const double C74793 = C74258 * C4308;
    const double C80339 = C70422 * C4308;
    const double C85018 = C152085 * C4308;
    const double C86380 = C152060 * C4308;
    const double C104117 = C2822 * C4308;
    const double C9127 = C8524 * C2819;
    const double C49398 = C8524 * C153903;
    const double C56363 = C8524 * C153454;
    const double C64400 = C8524 * C153818;
    const double C64395 = C8524 * C153464;
    const double C108318 = C8524 * C74249;
    const double C108313 = C8524 * C153464;
    const double C117816 = C8524 * C153467;
    const double C152680 = C152679 + C152672;
    const double C5709 =
        (3 * (C152551 + C152555 + C152555 + C152162 * C152747) + C152743 +
         C152743 +
         C152162 * (2 * C152747 + C152744 + C152744 +
                    C152162 * (C152737 + C152745 + C152745 +
                               C152162 * (2 * ae * C152354 * C152269 +
                                          C152162 * C152354 * C152205)))) /
        C151940;
    const double C52085 = C52072 + C6326;
    const double C57128 = C57126 + C9874;
    const double C60449 = C60446 + C21213;
    const double C31252 = C31239 + C27534;
    const double C32660 = C32656 + C32016;
    const double C53487 = C53483 + C52846;
    const double C69103 = C69101 + C61426;
    const double C80646 = C80643 + C79821;
    const double C97360 = C97357 + C86973;
    const double C56371 = C56369 + C56359;
    const double C62224 = C62222 + C62212;
    const double C82431 = C82429 + C82419;
    const double C3215 = C3203 + C3151;
    const double C11690 = C11678 + C11642;
    const double C24492 = C24480 + C24428;
    const double C34975 = C34963 + C34919;
    const double C70763 = C70751 + C70715;
    const double C74331 = C74319 + C74275;
    const double C83931 = C83919 + C83867;
    const double C7452 = C7446 + C7427;
    const double C3529 = C3517 + C3465;
    const double C102360 = C102357 + C102349;
    const double C12678 = C12672 + C12650;
    const double C24794 = C24782 + C24730;
    const double C71751 = C71745 + C71723;
    const double C84233 = C84221 + C84169;
    const double C3534 = C3522 + C3486;
    const double C7454 = C7448 + C7433;
    const double C20422 = C20416 + C20401;
    const double C24799 = C24787 + C24751;
    const double C78456 = C78450 + C78427;
    const double C84238 = C84226 + C84190;
    const double C9134 = C8499 + C9129;
    const double C49401 = C48808 + C49400;
    const double C117819 = C117226 + C117818;
    const double C52859 = C52837 + C4318;
    const double C54235 = C54221 + C5718;
    const double C22198 = C22189 + C13869;
    const double C32029 = C32007 + C25571;
    const double C33408 = C33394 + C26944;
    const double C44373 = C44360 + C35448;
    const double C81629 = C81618 + C72942;
    const double C130854 = C130841 + C74804;
    const double C94763 = C94751 + C85010;
    const double C52862 = C52843 + C4973;
    const double C61428 = C61421 + C22195;
    const double C32032 = C32013 + C26208;
    const double C33411 = C33400 + C30973;
    const double C44374 = C44362 + C35455;
    const double C54238 = C54227 + C51812;
    const double C130855 = C130843 + C74811;
    const double C81631 = C81622 + C78435;
    const double C95575 = C95565 + C85647;
    const double C9882 = C9880 * C2818;
    const double C50131 = C9880 * C153922;
    const double C57120 = C9880 * C153454;
    const double C65573 = C9880 * C153818;
    const double C109490 = C9880 * C74249;
    const double C118549 = C9880 * C153459;
    const double C7733 = C7712 + C7724;
    const double C48070 = C48063 + C48068;
    const double C116488 = C116481 + C116486;
    const double C57468 = C57467 + C57464;
    const double C152338 = ae * C152337;
    const double C348 = (4 * C152278 + C152169 * C152303 + C152162 * C152337 +
                         C152162 * C152332 * ae) /
                        C151933;
    const double C1068 = (C152354 * C152337) / C151933;
    const double C152369 = C152368 + C152365;
    const double C1898 =
        (C152354 * C152226 + C152424 + C152424 +
         C152162 *
             (2 * ae * C152354 * C152331 +
              C152162 * C152354 *
                  (3 * C152222 +
                   C152169 * (2 * C152169 * C152220 +
                              C152169 * (C152220 + (C152214 * C152215 +
                                                    C152166 * bs[9] *
                                                        std::pow(C152164, 9)) *
                                                       C152165 * C152181))))) /
        C151940;
    const double C152531 = C152514 + C152529;
    const double C152572 = ae * C152570;
    const double C152606 = ae * C152604;
    const double C152605 = C152162 * C152604;
    const double C152712 = C152354 * C152604;
    const double C4963 =
        (2 * (2 * ae * (C152274 + C152295 * C152417) + C152162 * C152686) +
         C152689 + C152689 +
         C152162 *
             (C152686 + C152690 + C152690 +
              C152162 *
                  (2 * ae * (C152295 + C152323 * C152417) +
                   C152162 * (C152222 + (C152220 + (C152214 * C152215 +
                                                    C152166 * bs[9] *
                                                        std::pow(C152164, 9)) *
                                                       C152165 * C152181) *
                                            C152417)))) /
        C151940;
    const double C6320 = C2826 * C6307;
    const double C9872 = C135 * C6307;
    const double C21209 = C11351 * C6307;
    const double C27528 = C24115 * C6307;
    const double C79830 = C70424 * C6307;
    const double C86967 = C152085 * C6307;
    const double C152873 = C152833 + C152871;
    const double C152906 = C152640 + C152901;
    const double C152947 = ae * C152940;
    const double C153125 = ae * C153124;
    const double C31198 = (3 * C152696 + C152354 * C153124) / C151933;
    const double C31200 =
        (3 * C152695 + C152354 * (2 * C152724 + C152354 * C152905) + C153116 +
         C153116 +
         C152162 *
             (2 * ae *
                  (3 * C152904 +
                   C152354 * (2 * C152937 +
                              C152354 * (C152311 + C152835 * C152417))) +
              C152162 * (3 * C152905 +
                         C152354 * (2 * C152938 +
                                    C152354 * (C152831 +
                                               C152169 *
                                                   (C152214 * C152215 +
                                                    C152166 * bs[9] *
                                                        std::pow(C152164, 9)) *
                                                   C152165 * C152417))))) /
        C151940;
    const double C56366 = C135 * C56352;
    const double C62213 = C11351 * C56352;
    const double C82420 = C70424 * C56352;
    const double C153008 = C153007 + C152990;
    const double C153036 = ae * C153030;
    const double C153077 = C152354 * C153030;
    const double C153134 = C153129 + C153130;
    const double C153142 = ae * C153141;
    const double C56703 = (5 * C153107 + C152354 * C153141) / C151933;
    const double C387 = C153608 * C358;
    const double C2866 = C153887 * C358;
    const double C12168 = C153671 * C358;
    const double C24155 = C153887 * C358;
    const double C71241 = C153671 * C358;
    const double C83594 = C83545 * C358;
    const double C397 = C385 + C386;
    const double C2881 = C2864 + C2865;
    const double C12172 = C12167 + C11656;
    const double C24170 = C24153 + C24154;
    const double C71245 = C71240 + C70729;
    const double C83609 = C83592 + C83593;
    const double C1093 = C1086 + C1087;
    const double C12380 = C12375 + C11930;
    const double C71453 = C71448 + C71003;
    const double C198 = C192 + C179;
    const double C762 = C761 + C758;
    const double C11416 = C11406 + C11384;
    const double C70489 = C70479 + C70457;
    const double C626 = C618 + C600;
    const double C895 = C894 + C891;
    const double C1326 =
        (2 * (2 * ae * C152278 + C152162 * C152209) + C152381 + C152381 +
         C152162 * (C152209 + C152378 + C152378 +
                    C152162 * (2 * ae * C152299 + C152162 * C152224))) /
        C151940;
    const double C1332 = C135 * C1321;
    const double C3186 = C2824 * C1321;
    const double C3184 = C2826 * C1321;
    const double C11653 = C11351 * C1321;
    const double C13008 = C11349 * C1321;
    const double C24463 = C24113 * C1321;
    const double C24461 = C24115 * C1321;
    const double C34942 = C34902 * C1321;
    const double C70726 = C70424 * C1321;
    const double C72081 = C70422 * C1321;
    const double C74298 = C74258 * C1321;
    const double C83902 = C152060 * C1321;
    const double C83900 = C152085 * C1321;
    const double C1905 = C135 * C1894;
    const double C3498 = C2826 * C1894;
    const double C4338 = C2824 * C1894;
    const double C12661 = C11351 * C1894;
    const double C13864 = C11349 * C1894;
    const double C24763 = C24115 * C1894;
    const double C25591 = C24113 * C1894;
    const double C71734 = C70424 * C1894;
    const double C72937 = C70422 * C1894;
    const double C84202 = C152085 * C1894;
    const double C85030 = C152060 * C1894;
    const double C3499 = C2826 * C3448;
    const double C7437 = C135 * C3448;
    const double C13209 = C11351 * C3448;
    const double C24764 = C24115 * C3448;
    const double C72282 = C70424 * C3448;
    const double C84203 = C152085 * C3448;
    const double C7974 = C7973 + C7971;
    const double C11968 = C11956 + C11928;
    const double C71041 = C71029 + C71001;
    const double C152510 = ae * C152509;
    const double C3133 = (3 * C152391 + C152162 * C152509 +
                          (2 * C152385 + C152162 * C152499) * ae) /
                         C151933;
    const double C4309 = (C152354 * C152509) / C151933;
    const double C4960 = (C152509 + C152604 * C152417) / C151933;
    const double C4336 = C153887 * C4313;
    const double C19075 = C153671 * C4313;
    const double C25589 = C153887 * C4313;
    const double C35919 = C153860 * C4313;
    const double C75275 = C153860 * C4313;
    const double C85028 = C83545 * C4313;
    const double C88189 = C153671 * C4313;
    const double C3525 = C3513 + C3494;
    const double C7449 = C7443 + C7435;
    const double C20418 = C20412 + C13211;
    const double C24790 = C24778 + C24759;
    const double C79129 = C79127 + C72284;
    const double C84229 = C84217 + C84198;
    const double C8525 = C8521 + C8506;
    const double C19423 = C19415 + C19399;
    const double C78826 = C78813 + C78783;
    const double C152643 = C152614 + C152641;
    const double C152730 = ae * C152725;
    const double C4970 = C2826 * C4961;
    const double C8893 = C135 * C4961;
    const double C22193 = C11351 * C4961;
    const double C26205 = C24115 * C4961;
    const double C30976 = C24113 * C4961;
    const double C35466 = C34902 * C4961;
    const double C51815 = C2824 * C4961;
    const double C60142 = C11349 * C4961;
    const double C74822 = C74258 * C4961;
    const double C78440 = C70424 * C4961;
    const double C80335 = C70422 * C4961;
    const double C85644 = C152085 * C4961;
    const double C96555 = C152060 * C4961;
    const double C32023 = C153887 * C4964;
    const double C35467 = C153860 * C4964;
    const double C52853 = C153887 * C4964;
    const double C58363 = C153671 * C4964;
    const double C74823 = C153860 * C4964;
    const double C78441 = C153671 * C4964;
    const double C94759 = C83545 * C4964;
    const double C52077 = C52060 + C6323;
    const double C63521 = C63519 + C9873;
    const double C59652 = C59648 + C21211;
    const double C31244 = C31227 + C27531;
    const double C79837 = C79825 + C79826;
    const double C93760 = C93746 + C86970;
    const double C56370 = C56368 + C9131;
    const double C58676 = C58672 + C22983;
    const double C78811 = C78797 + C78778;
    const double C152978 = C152971 + C152819;
    const double C152821 = C152820 + C152808;
    const double C152893 = ae * C152888;
    const double C30193 = (2 * C152738 + C152354 * C152888) / C151933;
    const double C30195 =
        (2 * (2 * ae * (2 * C152736 + C152354 * C152886) + C152162 * C153101) +
         C153103 + C153103 +
         C152162 * (C153101 + C153088 + C153088 + C152162 * C153095)) /
        C151940;
    const double C31222 = C24115 * C31197;
    const double C32653 = C24113 * C31197;
    const double C52055 = C2826 * C31197;
    const double C53480 = C2824 * C31197;
    const double C55790 = C135 * C31197;
    const double C60443 = C11351 * C31197;
    const double C69100 = C11349 * C31197;
    const double C80640 = C70424 * C31197;
    const double C97352 = C152085 * C31197;
    const double C136300 = C70422 * C31197;
    const double C149843 = C152060 * C31197;
    const double C34019 = C153887 * C31199;
    const double C54840 = C153887 * C31199;
    const double C57124 = C153608 * C31199;
    const double C68437 = C153671 * C31199;
    const double C135637 = C153671 * C31199;
    const double C151188 = C83545 * C31199;
    const double C56709 = C56706 + C56360;
    const double C69635 = C69629 + C62215;
    const double C136835 = C136829 + C82422;
    const double C152059 = C152037 - C152052;
    const double C152042 = C152035 / C151933;
    const double C70468 = C70452 + C70453;
    const double C70467 = C70449 + C70450;
    const double C70464 = C70440 + C70441;
    const double C70462 = C70434 + C70435;
    const double C70460 = C70428 + C70429;
    const double C70742 = C70722 + C70723;
    const double C70740 = C70716 + C70717;
    const double C70738 = C70710 + C70711;
    const double C70737 = C70703 + C70704;
    const double C70735 = C70697 + C70698;
    const double C70733 = C70691 + C70692;
    const double C71016 = C70996 + C70997;
    const double C71014 = C70990 + C70991;
    const double C71012 = C70984 + C70985;
    const double C71011 = C70977 + C70978;
    const double C71009 = C70971 + C70972;
    const double C71007 = C70965 + C70966;
    const double C71244 = C71238 + C70728;
    const double C71452 = C71446 + C71002;
    const double C71742 = C71730 + C71731;
    const double C71740 = C71724 + C71725;
    const double C71738 = C71718 + C71719;
    const double C78448 = C78436 + C78437;
    const double C78446 = C78430 + C72941;
    const double C78445 = C78428 + C72287;
    const double C78798 = C78780 + C73465;
    const double C78796 = C78774 + C78775;
    const double C78795 = C78768 + C73469;
    const double C78793 = C78764 + C73467;
    const double C78789 = C78757 + C70982;
    const double C78787 = C78752 + C70981;
    const double C79126 = C79122 + C72285;
    const double C79836 = C79822 + C79823;
    const double C79834 = C79815 + C72289;
    const double C79832 = C79810 + C71716;
    const double C80642 = C80632 + C79820;
    const double C81630 = C81620 + C78434;
    const double C81628 = C81616 + C72943;
    const double C82425 = C82416 + C78772;
    const double C88190 = C88186 + C72939;
    const double C135642 = C135634 + C80641;
    const double C136301 = C136295 + C81627;
    const double C136834 = C136827 + C82423;
    const double C2904 = C2892 + C2863;
    const double C2901 = C2889 + C2854;
    const double C2898 = C2886 + C2845;
    const double C2895 = C2883 + C2836;
    const double C3219 = C3207 + C3169;
    const double C3216 = C3204 + C3154;
    const double C3213 = C3201 + C3145;
    const double C3536 = C3524 + C3492;
    const double C3533 = C3521 + C3483;
    const double C3530 = C3518 + C3468;
    const double C3527 = C3515 + C3459;
    const double C3774 = C3771 + C3760;
    const double C4012 = C4009 + C3998;
    const double C4353 = C4347 + C4324;
    const double C52102 = C52089 + C52059;
    const double C52099 = C52086 + C52050;
    const double C52096 = C52083 + C52044;
    const double C52093 = C52080 + C52038;
    const double C52882 = C52873 + C52851;
    const double C52879 = C52870 + C52842;
    const double C52876 = C52867 + C52836;
    const double C54853 = C54850 + C54838;
    const double C11415 = C11405 + C11381;
    const double C11414 = C11404 + C11378;
    const double C11411 = C11401 + C11369;
    const double C11409 = C11399 + C11363;
    const double C11407 = C11397 + C11357;
    const double C11693 = C11681 + C11651;
    const double C11691 = C11679 + C11645;
    const double C11689 = C11677 + C11639;
    const double C11688 = C11676 + C11632;
    const double C11686 = C11674 + C11626;
    const double C11684 = C11672 + C11620;
    const double C11967 = C11955 + C11925;
    const double C11965 = C11953 + C11919;
    const double C11963 = C11951 + C11913;
    const double C11962 = C11950 + C11906;
    const double C11960 = C11948 + C11900;
    const double C11958 = C11946 + C11894;
    const double C12175 = C12173 + C12166;
    const double C12383 = C12381 + C12374;
    const double C12681 = C12675 + C12659;
    const double C12679 = C12673 + C12653;
    const double C12677 = C12671 + C12647;
    const double C19084 = C19080 + C19069;
    const double C19422 = C19414 + C19397;
    const double C19420 = C19412 + C19393;
    const double C19419 = C19411 + C19388;
    const double C19416 = C19408 + C19379;
    const double C20423 = C20417 + C20403;
    const double C20421 = C20415 + C20399;
    const double C20419 = C20413 + C20393;
    const double C21219 = C21217 + C21206;
    const double C22201 = C22199 + C22188;
    const double C22991 = C22989 + C22978;
    const double C58368 = C58366 + C58361;
    const double C58677 = C58675 + C58665;
    const double C59655 = C59653 + C59647;
    const double C60451 = C60448 + C60436;
    const double C61431 = C61429 + C61420;
    const double C62223 = C62221 + C62210;
    const double C68447 = C68445 + C68435;
    const double C69638 = C69636 + C69628;
    const double C24192 = C24180 + C24149;
    const double C24191 = C24179 + C24146;
    const double C24186 = C24174 + C24131;
    const double C24183 = C24171 + C24122;
    const double C24498 = C24486 + C24452;
    const double C24495 = C24483 + C24443;
    const double C24494 = C24482 + C24434;
    const double C24491 = C24479 + C24425;
    const double C24800 = C24788 + C24754;
    const double C24797 = C24785 + C24745;
    const double C24796 = C24784 + C24736;
    const double C24793 = C24781 + C24727;
    const double C25038 = C25035 + C25023;
    const double C25276 = C25273 + C25261;
    const double C25608 = C25602 + C25583;
    const double C25605 = C25599 + C25574;
    const double C31268 = C31255 + C31224;
    const double C31267 = C31254 + C31219;
    const double C31262 = C31249 + C31209;
    const double C31259 = C31246 + C31203;
    const double C32051 = C32042 + C32019;
    const double C32048 = C32039 + C32010;
    const double C32045 = C32036 + C32004;
    const double C32663 = C32659 + C32646;
    const double C33422 = C33416 + C33399;
    const double C33419 = C33413 + C33393;
    const double C34031 = C34028 + C34015;
    const double C39082 = C39079 + C39071;
    const double C24193 = C24181 + C24152;
    const double C24190 = C24178 + C24143;
    const double C24187 = C24175 + C24134;
    const double C24184 = C24172 + C24125;
    const double C24496 = C24484 + C24446;
    const double C24493 = C24481 + C24431;
    const double C24490 = C24478 + C24422;
    const double C24801 = C24789 + C24757;
    const double C24798 = C24786 + C24748;
    const double C24795 = C24783 + C24733;
    const double C24792 = C24780 + C24724;
    const double C25039 = C25036 + C25025;
    const double C25277 = C25274 + C25263;
    const double C25606 = C25600 + C25577;
    const double C31269 = C31256 + C31226;
    const double C31266 = C31253 + C31217;
    const double C31263 = C31250 + C31211;
    const double C31260 = C31247 + C31205;
    const double C32052 = C32043 + C32021;
    const double C32049 = C32040 + C32012;
    const double C32046 = C32037 + C32006;
    const double C34032 = C34029 + C34017;
    const double C28377 = C28357 * C1321;
    const double C28374 = C28357 * C1322;
    const double C28367 = C28357 * C1323;
    const double C28364 = C28357 * C1324;
    const double C28522 = C28357 * C3132;
    const double C28510 = C28357 * C3131;
    const double C28673 = C28357 * C4961;
    const double C28670 = C28357 * C4308;
    const double C28665 = C28357 * C4962;
    const double C28658 = C28357 * C4307;
    const double C34945 = C34900 * C346;
    const double C34939 = C34900 * C345;
    const double C34924 = C34900 * C344;
    const double C34915 = C34900 * C343;
    const double C34906 = C34900 * C342;
    const double C35212 = C34900 * C1322;
    const double C35205 = C34900 * C3132;
    const double C35196 = C34900 * C3131;
    const double C35191 = C34900 * C1324;
    const double C35182 = C34900 * C1323;
    const double C35473 = C34900 * C3447;
    const double C35470 = C34900 * C1895;
    const double C35463 = C34900 * C3446;
    const double C35454 = C34900 * C3445;
    const double C35449 = C34900 * C1897;
    const double C35440 = C34900 * C1896;
    const double C35703 = C34900 * C1321;
    const double C35921 = C34900 * C1894;
    const double C36205 = C34900 * C4308;
    const double C36196 = C34900 * C4307;
    const double C36757 = C34900 * C4962;
    const double C36753 = C34900 * C4961;
    const double C37937 = C34900 * C6311;
    const double C37933 = C34900 * C6309;
    const double C46803 = C34900 * C31197;
    const double C74301 = C74256 * C346;
    const double C74295 = C74256 * C345;
    const double C74280 = C74256 * C344;
    const double C74271 = C74256 * C343;
    const double C74262 = C74256 * C342;
    const double C74568 = C74256 * C1322;
    const double C74561 = C74256 * C3132;
    const double C74552 = C74256 * C3131;
    const double C74547 = C74256 * C1324;
    const double C74538 = C74256 * C1323;
    const double C74829 = C74256 * C3447;
    const double C74826 = C74256 * C1895;
    const double C74819 = C74256 * C3446;
    const double C74810 = C74256 * C3445;
    const double C74805 = C74256 * C1897;
    const double C74796 = C74256 * C1896;
    const double C75059 = C74256 * C1321;
    const double C75277 = C74256 * C1894;
    const double C75561 = C74256 * C4308;
    const double C75552 = C74256 * C4307;
    const double C76113 = C74256 * C4962;
    const double C76109 = C74256 * C4961;
    const double C77293 = C74256 * C6311;
    const double C77289 = C74256 * C6309;
    const double C133284 = C74256 * C31197;
    const double C152051 = C152043 / C151933;
    const double C8509 = C1100 * C153874;
    const double C16240 = C1100 * C11346;
    const double C16237 = C1100 * C153852;
    const double C48811 = C1100 * C153874;
    const double C99522 = C1100 * C153905;
    const double C99519 = C1100 * C153852;
    const double C117229 = C1100 * C83548;
    const double C3222 = C3210 + C3178;
    const double C3212 = C3200 + C3142;
    const double C11692 = C11680 + C11648;
    const double C24499 = C24487 + C24455;
    const double C24489 = C24477 + C24419;
    const double C34976 = C34964 + C34922;
    const double C70765 = C70753 + C70721;
    const double C74332 = C74320 + C74278;
    const double C83928 = C83916 + C83858;
    const double C7453 = C7447 + C7429;
    const double C3526 = C3514 + C3456;
    const double C4356 = C4350 + C4333;
    const double C12680 = C12674 + C12656;
    const double C19086 = C19082 + C19073;
    const double C24791 = C24779 + C24721;
    const double C25609 = C25603 + C25586;
    const double C71753 = C71747 + C71729;
    const double C84230 = C84218 + C84160;
    const double C3172 = C153887 * C3136;
    const double C24449 = C153887 * C3136;
    const double C35206 = C34891 * C3136;
    const double C35180 = C153860 * C3136;
    const double C74562 = C153918 * C3136;
    const double C74536 = C153860 * C3136;
    const double C83888 = C83545 * C3136;
    const double C3196 = C3170 + C3171;
    const double C24473 = C24447 + C24448;
    const double C35218 = C35178 + C35179;
    const double C74574 = C74534 + C74535;
    const double C83912 = C83886 + C83887;
    const double C4342 = C4325 + C4326;
    const double C102355 = C102350 + C5715;
    const double C19077 = C19070 + C13867;
    const double C25595 = C25578 + C25579;
    const double C39077 = C39072 + C26941;
    const double C35476 = C35436 + C35437;
    const double C78447 = C78432 + C72940;
    const double C74832 = C74792 + C74793;
    const double C85034 = C85017 + C85018;
    const double C64923 = C64395 + C64394;
    const double C108840 = C108313 + C108312;
    const double C152681 = ae * C152680;
    const double C4726 = (4 * C152463 + C152162 * C152680 +
                          (3 * C152453 + C152162 * C152669) * ae) /
                         C151933;
    const double C5706 = (C152354 * C152680) / C151933;
    const double C33397 = C153887 * C5709;
    const double C45047 = C153860 * C5709;
    const double C46257 = C34891 * C5709;
    const double C54224 = C153887 * C5709;
    const double C96553 = C83545 * C5709;
    const double C131528 = C153860 * C5709;
    const double C132738 = C153918 * C5709;
    const double C52098 = C52085 + C52048;
    const double C57130 = C57128 + C57122;
    const double C60452 = C60449 + C60438;
    const double C31265 = C31252 + C31215;
    const double C32664 = C32660 + C32648;
    const double C53491 = C53487 + C53475;
    const double C69105 = C69103 + C69096;
    const double C80649 = C80646 + C80635;
    const double C97363 = C97360 + C97348;
    const double C56373 = C56371 * C153454;
    const double C64921 = C56371 * C153818;
    const double C108838 = C56371 * C74249;
    const double C9866 = C7452 * C2819;
    const double C17412 = C7452 * C11345;
    const double C50129 = C7452 * C153903;
    const double C65572 = C7452 * C153464;
    const double C100693 = C7452 * C153924;
    const double C109489 = C7452 * C153464;
    const double C118547 = C7452 * C153467;
    const double C9870 = C7454 * C2819;
    const double C50132 = C7454 * C153903;
    const double C65574 = C7454 * C153464;
    const double C109491 = C7454 * C153464;
    const double C118550 = C7454 * C153467;
    const double C52868 = C52859 + C4318;
    const double C54241 = C54235 + C5718;
    const double C22200 = C22198 + C13869;
    const double C32038 = C32029 + C25571;
    const double C33414 = C33408 + C26944;
    const double C44381 = C44373 + C35448;
    const double C81633 = C81629 + C72942;
    const double C130862 = C130854 + C74804;
    const double C94771 = C94763 + C85010;
    const double C52871 = C52862 + C4973;
    const double C61430 = C61428 + C22195;
    const double C32041 = C32032 + C26208;
    const double C33417 = C33411 + C30973;
    const double C44382 = C44374 + C35455;
    const double C54244 = C54238 + C51812;
    const double C130863 = C130855 + C74811;
    const double C81635 = C81631 + C78435;
    const double C95578 = C95575 + C85647;
    const double C57469 = C57468 * C153454;
    const double C360 =
        (4 * C152209 + C152169 * C152226 + C152338 + C152338 +
         C152162 *
             (2 * ae * C152335 +
              C152162 *
                  (4 * C152224 +
                   C152169 *
                       (3 * C152222 +
                        C152169 *
                            (2 * C152169 * C152220 +
                             C152169 * (C152220 + (C152214 * C152215 +
                                                   C152166 * bs[9] *
                                                       std::pow(C152164, 9)) *
                                                      C152165 * C152181)))))) /
        C151940;
    const double C389 = C135 * C348;
    const double C2867 = C2826 * C348;
    const double C12169 = C11351 * C348;
    const double C24156 = C24115 * C348;
    const double C71242 = C70424 * C348;
    const double C83595 = C152085 * C348;
    const double C1089 = C135 * C1068;
    const double C12377 = C11351 * C1068;
    const double C71450 = C70424 * C1068;
    const double C152370 = ae * C152369;
    const double C1320 =
        (2 * C152305 + C152162 * C152369 + (C152300 + C152328 * C152166) * ae) /
        C151933;
    const double C1893 = (C152354 * C152369) / C151933;
    const double C152532 = C152531 + C152525;
    const double C4314 =
        (2 * (2 * ae * C152354 * C152299 + C152162 * C152569) + C152572 +
         C152572 +
         C152162 *
             (C152569 + C152573 + C152573 +
              C152162 * (2 * ae * C152354 * C152327 +
                         C152162 * C152354 *
                             (2 * C152169 * C152220 +
                              C152169 * (C152220 + (C152214 * C152215 +
                                                    C152166 * bs[9] *
                                                        std::pow(C152164, 9)) *
                                                       C152165 * C152181))))) /
        C151940;
    const double C152607 = C152578 + C152605;
    const double C152717 = ae * C152712;
    const double C152874 = C152873 + C152862;
    const double C152911 = ae * C152906;
    const double C32000 = (2 * C152725 + C152354 * C152906) / C151933;
    const double C32001 =
        (2 * (2 * ae * (2 * C152723 + C152354 * C152904) + C152162 * C153123) +
         C153125 + C153125 +
         C152162 *
             (C153123 + C153122 + C153122 +
              C152162 *
                  (2 * ae *
                       (2 * C152937 + C152354 * (C152311 + C152835 * C152417)) +
                   C152162 *
                       (2 * C152938 +
                        C152354 * (C152831 + C152169 *
                                                 (C152214 * C152215 +
                                                  C152166 * bs[9] *
                                                      std::pow(C152164, 9)) *
                                                 C152165 * C152417))))) /
        C151940;
    const double C31230 = C24115 * C31198;
    const double C52063 = C2826 * C31198;
    const double C55791 = C135 * C31198;
    const double C60441 = C11351 * C31198;
    const double C80638 = C70424 * C31198;
    const double C97349 = C152085 * C31198;
    const double C153010 = ae * C153008;
    const double C153009 = C152162 * C153008;
    const double C153022 = C153008 * C152417;
    const double C153049 = C152354 * C153008;
    const double C153085 = C153076 + C153077;
    const double C153136 = ae * C153134;
    const double C34008 = (4 * C153102 + C152354 * C153134) / C151933;
    const double C34010 =
        (4 * C153101 + C152354 * C153133 + C153142 + C153142 +
         C152162 *
             (2 * ae *
                  (4 * C153083 +
                   C152354 *
                       (3 * C153027 +
                        C152354 * (2 * C153046 +
                                   C152354 * (C152290 + C152318 * C152417)))) +
              C152162 *
                  (4 * C153084 +
                   C152354 *
                       (3 * C153028 +
                        C152354 *
                            (2 * C153047 +
                             C152354 * (C152220 + (C152214 * C152215 +
                                                   C152166 * bs[9] *
                                                       std::pow(C152164, 9)) *
                                                      C152165 * C152417)))))) /
        C151940;
    const double C56708 = C135 * C56703;
    const double C69631 = C11351 * C56703;
    const double C136831 = C70424 * C56703;
    const double C405 = C397 + C386;
    const double C2893 = C2881 + C2865;
    const double C12174 = C12172 + C11656;
    const double C24182 = C24170 + C24154;
    const double C71247 = C71245 + C70729;
    const double C83621 = C83609 + C83593;
    const double C1097 = C1093 + C1087;
    const double C12382 = C12380 + C11930;
    const double C71455 = C71453 + C71003;
    const double C8198 = C626 * C153874;
    const double C15583 = C626 * C153852;
    const double C48512 = C626 * C153874;
    const double C98865 = C626 * C153852;
    const double C116930 = C626 * C83548;
    const double C15975 = C895 * C153852;
    const double C99257 = C895 * C153852;
    const double C3762 = C153887 * C1326;
    const double C11654 = C153671 * C1326;
    const double C25027 = C153887 * C1326;
    const double C34943 = C153860 * C1326;
    const double C70727 = C153671 * C1326;
    const double C74299 = C153860 * C1326;
    const double C84466 = C83545 * C1326;
    const double C3769 = C3761 + C3184;
    const double C11670 = C11652 + C11653;
    const double C25034 = C25026 + C24461;
    const double C34959 = C34941 + C34942;
    const double C70743 = C70725 + C70726;
    const double C74315 = C74297 + C74298;
    const double C84473 = C84465 + C83900;
    const double C15371 = C15369 + C1905;
    const double C4007 = C3999 + C3498;
    const double C12670 = C12660 + C12661;
    const double C25272 = C25264 + C24763;
    const double C71743 = C71733 + C71734;
    const double C84711 = C84703 + C84202;
    const double C8512 = C7974 * C153874;
    const double C16764 = C7974 * C153852;
    const double C48814 = C7974 * C153874;
    const double C100045 = C7974 * C153852;
    const double C117232 = C7974 * C83548;
    const double C3137 =
        (3 * (C152195 + C152389 + C152389 + C152162 * C152500) + C152510 +
         C152510 +
         C152162 *
             (2 * C152500 + C152507 + C152507 +
              C152162 * (C152207 + C152503 + C152503 +
                         C152162 * (2 * ae * C152295 + C152162 * C152222)))) /
        C151940;
    const double C3180 = C2826 * C3133;
    const double C4732 = C2824 * C3133;
    const double C13009 = C11351 * C3133;
    const double C24457 = C24115 * C3133;
    const double C25976 = C24113 * C3133;
    const double C28375 = C28359 * C3133;
    const double C28800 = C28357 * C3133;
    const double C35215 = C34900 * C3133;
    const double C35213 = C34902 * C3133;
    const double C72082 = C70424 * C3133;
    const double C74571 = C74256 * C3133;
    const double C74569 = C74258 * C3133;
    const double C83896 = C152085 * C3133;
    const double C85415 = C152060 * C3133;
    const double C4335 = C2826 * C4309;
    const double C5712 = C2824 * C4309;
    const double C8895 = C135 * C4309;
    const double C13865 = C11351 * C4309;
    const double C20910 = C11349 * C4309;
    const double C25588 = C24115 * C4309;
    const double C26938 = C24113 * C4309;
    const double C28927 = C28357 * C4309;
    const double C35471 = C34902 * C4309;
    const double C36211 = C34900 * C4309;
    const double C72938 = C70424 * C4309;
    const double C74827 = C74258 * C4309;
    const double C75567 = C74256 * C4309;
    const double C85027 = C152085 * C4309;
    const double C86377 = C152060 * C4309;
    const double C89940 = C70422 * C4309;
    const double C4967 = C2826 * C4960;
    const double C8892 = C135 * C4960;
    const double C22191 = C11351 * C4960;
    const double C26202 = C24115 * C4960;
    const double C35472 = C34902 * C4960;
    const double C74828 = C74258 * C4960;
    const double C78442 = C70424 * C4960;
    const double C85641 = C152085 * C4960;
    const double C3537 = C3525 + C3495;
    const double C7455 = C7449 + C7436;
    const double C20424 = C20418 + C20405;
    const double C24802 = C24790 + C24760;
    const double C79131 = C79129 + C79125;
    const double C84241 = C84229 + C84199;
    const double C9128 = C8525 * C153874;
    const double C49399 = C8525 * C153874;
    const double C64401 = C8525 * C153464;
    const double C108319 = C8525 * C153464;
    const double C117817 = C8525 * C83548;
    const double C152644 = C152643 + C152636;
    const double C5708 =
        (3 * (C152557 + C152561 + C152561 + C152162 * C152734) + C152730 +
         C152730 +
         C152162 *
             (2 * C152734 + C152731 + C152731 +
              C152162 * (C152724 + C152732 + C152732 +
                         C152162 * (2 * ae * C152354 * C152311 +
                                    C152162 * C152354 * C152169 * C152220)))) /
        C151940;
    const double C52865 = C52852 + C4970;
    const double C58365 = C58362 + C22193;
    const double C32035 = C32022 + C26205;
    const double C35483 = C35465 + C35466;
    const double C74839 = C74821 + C74822;
    const double C78449 = C78439 + C78440;
    const double C94767 = C94758 + C85644;
    const double C52090 = C52077 + C6323;
    const double C63522 = C63521 + C9873;
    const double C59654 = C59652 + C21211;
    const double C31257 = C31244 + C27531;
    const double C79843 = C79837 + C79826;
    const double C93769 = C93760 + C86970;
    const double C56372 = C56370 + C56365;
    const double C58678 = C58676 + C58667;
    const double C78824 = C78811 + C78779;
    const double C153003 = C152978 + C153000;
    const double C152823 = ae * C152821;
    const double C152822 = C152162 * C152821;
    const double C152920 = C152354 * C152821;
    const double C152960 = 5 * C152821;
    const double C28652 = (C152680 + C152821 * C152417) / C151933;
    const double C28654 =
        (3 * (C152704 + C152708 + C152708 + C152162 * C152897) + C152893 +
         C152893 +
         C152162 *
             (2 * C152897 + C152894 + C152894 +
              C152162 *
                  (C152887 + C152895 + C152895 +
                   C152162 * (2 * ae * (C152269 + C152290 * C152417) +
                              C152162 * (C152205 + C152220 * C152417))))) /
        C151940;
    const double C30198 = C28357 * C30193;
    const double C32017 = C24115 * C30193;
    const double C33405 = C24113 * C30193;
    const double C37936 = C34902 * C30193;
    const double C45591 = C34900 * C30193;
    const double C52847 = C2826 * C30193;
    const double C54232 = C2824 * C30193;
    const double C56580 = C135 * C30193;
    const double C61425 = C11351 * C30193;
    const double C68239 = C11349 * C30193;
    const double C77292 = C74258 * C30193;
    const double C81626 = C70424 * C30193;
    const double C95570 = C152085 * C30193;
    const double C132072 = C74256 * C30193;
    const double C135439 = C70422 * C30193;
    const double C150589 = C152060 * C30193;
    const double C32650 = C153887 * C30195;
    const double C46801 = C153860 * C30195;
    const double C53477 = C153887 * C30195;
    const double C69098 = C153671 * C30195;
    const double C133282 = C153860 * C30195;
    const double C136298 = C153671 * C30195;
    const double C149840 = C83545 * C30195;
    const double C34026 = C34018 + C31222;
    const double C54847 = C54839 + C52055;
    const double C57127 = C57123 + C55790;
    const double C68443 = C68436 + C60443;
    const double C135643 = C135636 + C80640;
    const double C151195 = C151187 + C97352;
    const double C56710 = C56709 + C56360;
    const double C69637 = C69635 + C62215;
    const double C136837 = C136835 + C82422;
    const double C83589 = C152059 * C325;
    const double C83580 = C152059 * C326;
    const double C83571 = C152059 * C327;
    const double C83562 = C152059 * C328;
    const double C83892 = C152059 * C1317;
    const double C83883 = C152059 * C1318;
    const double C83868 = C152059 * C331;
    const double C83859 = C152059 * C332;
    const double C84194 = C152059 * C1459;
    const double C84185 = C152059 * C1460;
    const double C84170 = C152059 * C1058;
    const double C84161 = C152059 * C1059;
    const double C84463 = C152059 * C333;
    const double C84701 = C152059 * C1060;
    const double C85023 = C152059 * C1890;
    const double C85014 = C152059 * C1891;
    const double C93423 = C152059 * C4304;
    const double C93744 = C152059 * C6304;
    const double C93736 = C152059 * C1461;
    const double C93728 = C152059 * C1057;
    const double C94756 = C152059 * C3442;
    const double C94749 = C152059 * C1892;
    const double C95563 = C152059 * C3441;
    const double C96550 = C152059 * C4303;
    const double C97345 = C152059 * C6306;
    const double C149837 = C152059 * C6305;
    const double C150584 = C152059 * C4959;
    const double C151185 = C152059 * C9117;
    const double C28356 =
        (C152059 / C151975 + ((C152086 - C151957 / C152083) * ae) / C151933) /
            C151975 -
        ((2 * (C152085 / C151975 + (0 * ae) / C151933) -
          C151957 / (C151933 * 4 * C151993)) *
         be) /
            C151933;
    const double C34899 =
        C152059 / C151975 - ((C152086 - C151957 / C152083) * be) / C151933;
    const double C74255 =
        C152059 / C151975 + ((C152086 - C151957 / C152083) * ae) / C151933;
    const double C152049 = C152042 + C152028;
    const double C70478 = C70468 + C70453;
    const double C70477 = C70467 + C70450;
    const double C70474 = C70464 + C70441;
    const double C70472 = C70462 + C70435;
    const double C70470 = C70460 + C70429;
    const double C70754 = C70742 + C70723;
    const double C70752 = C70740 + C70717;
    const double C70750 = C70738 + C70711;
    const double C70749 = C70737 + C70704;
    const double C70747 = C70735 + C70698;
    const double C70745 = C70733 + C70692;
    const double C71028 = C71016 + C70997;
    const double C71026 = C71014 + C70991;
    const double C71024 = C71012 + C70985;
    const double C71023 = C71011 + C70978;
    const double C71021 = C71009 + C70972;
    const double C71019 = C71007 + C70966;
    const double C71246 = C71244 + C70728;
    const double C71454 = C71452 + C71002;
    const double C71748 = C71742 + C71731;
    const double C71746 = C71740 + C71725;
    const double C71744 = C71738 + C71719;
    const double C78454 = C78448 + C78437;
    const double C78452 = C78446 + C72941;
    const double C78451 = C78445 + C72287;
    const double C78812 = C78798 + C73465;
    const double C78810 = C78796 + C78775;
    const double C78809 = C78795 + C73469;
    const double C78807 = C78793 + C73467;
    const double C78804 = C78789 + C70982;
    const double C78802 = C78787 + C70981;
    const double C79128 = C79126 + C72285;
    const double C79842 = C79836 + C79823;
    const double C79840 = C79834 + C72289;
    const double C79838 = C79832 + C71716;
    const double C80645 = C80642 + C79820;
    const double C81634 = C81630 + C78434;
    const double C81632 = C81628 + C72943;
    const double C82428 = C82425 + C78772;
    const double C88192 = C88190 + C72939;
    const double C135645 = C135642 + C80641;
    const double C136303 = C136301 + C81627;
    const double C136836 = C136834 + C82423;
    const double C2907 = C2901 + C2902;
    const double C2906 = C2897 + C2898;
    const double C3756 = C3213 + C3214;
    const double C52062 = C3533 + C3532;
    const double C102655 = C3532 + C3533;
    const double C102654 = C3530 + C3531;
    const double C102653 = C3531 + C3530;
    const double C3994 = C3527 + C3528;
    const double C103239 = C3528 + C3527;
    const double C103628 = C4353 + C4352;
    const double C103627 = C4352 + C4353;
    const double C54834 = C52099 + C52100;
    const double C52104 = C52095 + C52096;
    const double C53478 = C52879 + C52878;
    const double C11419 = C11413 + C11414;
    const double C11420 = C11412 + C11411;
    const double C11418 = C11411 + C11412;
    const double C11417 = C11409 + C11410;
    const double C12164 = C11685 + C11686;
    const double C12163 = C11683 + C11684;
    const double C19391 = C11965 + C11966;
    const double C19383 = C11966 + C11965;
    const double C19390 = C11963 + C11964;
    const double C19384 = C11964 + C11963;
    const double C19389 = C11961 + C11962;
    const double C19382 = C11962 + C11961;
    const double C12372 = C11959 + C11960;
    const double C18777 = C11960 + C11959;
    const double C12371 = C11957 + C11958;
    const double C20005 = C11958 + C11957;
    const double C20406 = C12678 + C12677;
    const double C20396 = C12677 + C12678;
    const double C58663 = C19420 + C19421;
    const double C58662 = C19421 + C19420;
    const double C58660 = C19419 + C19418;
    const double C59650 = C20422 + C20421;
    const double C59645 = C20421 + C20422;
    const double C60440 = C21220 + C21219;
    const double C62208 = C22992 + C22991;
    const double C67264 = C22991 + C22992;
    const double C69625 = C62224 + C62223;
    const double C24196 = C24190 + C24191;
    const double C24195 = C24186 + C24187;
    const double C25021 = C24490 + C24491;
    const double C31229 = C24798 + C24797;
    const double C39377 = C24797 + C24798;
    const double C39376 = C24795 + C24796;
    const double C39375 = C24796 + C24795;
    const double C25259 = C24792 + C24793;
    const double C39961 = C24793 + C24792;
    const double C40350 = C25606 + C25605;
    const double C40349 = C25605 + C25606;
    const double C34013 = C31266 + C31267;
    const double C31271 = C31262 + C31263;
    const double C32651 = C32049 + C32048;
    const double C152058 = C152050 - C152051;
    const double C9867 = C7453 * C153874;
    const double C17413 = C7453 * C11346;
    const double C50130 = C7453 * C153874;
    const double C100694 = C7453 * C153905;
    const double C118548 = C7453 * C83548;
    const double C19714 = C12680 + C12679;
    const double C20397 = C12679 + C12680;
    const double C3208 = C3196 + C3171;
    const double C24485 = C24473 + C24448;
    const double C35226 = C35218 + C35179;
    const double C74582 = C74574 + C74535;
    const double C83924 = C83912 + C83887;
    const double C4348 = C4342 + C4326;
    const double C102358 = C102355 + C5715;
    const double C19081 = C19077 + C13867;
    const double C25601 = C25595 + C25579;
    const double C39080 = C39077 + C26941;
    const double C35484 = C35476 + C35437;
    const double C78453 = C78447 + C72940;
    const double C74840 = C74832 + C74793;
    const double C85040 = C85034 + C85018;
    const double C4729 =
        (4 * (2 * C152454 + C152461 + C152461 + C152162 * C152670) + C152681 +
         C152681 +
         C152162 * (3 * C152670 + C152678 + C152678 +
                    C152162 * (2 * C152662 + C152674 + C152674 +
                               C152162 * (C152193 + C152666 + C152666 +
                                          C152162 * (2 * ae * C152269 +
                                                     C152162 * C152205))))) /
        C151940;
    const double C4737 = C2826 * C4726;
    const double C25981 = C24115 * C4726;
    const double C28517 = C28357 * C4726;
    const double C28509 = C28359 * C4726;
    const double C35197 = C34902 * C4726;
    const double C36555 = C34900 * C4726;
    const double C74553 = C74258 * C4726;
    const double C75911 = C74256 * C4726;
    const double C85420 = C152085 * C4726;
    const double C5717 = C2826 * C5706;
    const double C20913 = C11351 * C5706;
    const double C26943 = C24115 * C5706;
    const double C28657 = C28359 * C5706;
    const double C29102 = C28357 * C5706;
    const double C32422 = C24113 * C5706;
    const double C36197 = C34902 * C5706;
    const double C37411 = C34900 * C5706;
    const double C53252 = C2824 * C5706;
    const double C75553 = C74258 * C5706;
    const double C76767 = C74256 * C5706;
    const double C80340 = C70424 * C5706;
    const double C86382 = C152085 * C5706;
    const double C95269 = C152060 * C5706;
    const double C57132 = C57130 * C153454;
    const double C65575 = C57130 * C153818;
    const double C109492 = C57130 * C74249;
    const double C68438 = C60452 + C60451;
    const double C52877 = C52868 + C52838;
    const double C54247 = C54241 + C54222;
    const double C22202 = C22200 + C22190;
    const double C32047 = C32038 + C32008;
    const double C33420 = C33414 + C33395;
    const double C44389 = C44381 + C44361;
    const double C81637 = C81633 + C81619;
    const double C130870 = C130862 + C130842;
    const double C94777 = C94771 + C94752;
    const double C52880 = C52871 + C52844;
    const double C61432 = C61430 + C61422;
    const double C32050 = C32041 + C32014;
    const double C33423 = C33417 + C33401;
    const double C44390 = C44382 + C44363;
    const double C54250 = C54244 + C54228;
    const double C130871 = C130863 + C130844;
    const double C81639 = C81635 + C81623;
    const double C95581 = C95578 + C95566;
    const double C1325 =
        (2 * (2 * ae * C152303 + C152162 * C152226) + C152370 + C152370 +
         C152162 *
             (C152226 + C152367 + C152367 +
              C152162 *
                  (2 * ae * C152331 +
                   C152162 *
                       (3 * C152222 +
                        C152169 *
                            (2 * C152169 * C152220 +
                             C152169 * (C152220 + (C152214 * C152215 +
                                                   C152166 * bs[9] *
                                                       std::pow(C152164, 9)) *
                                                      C152165 * C152181)))))) /
        C151940;
    const double C1331 = C135 * C1320;
    const double C3763 = C2826 * C1320;
    const double C11657 = C11351 * C1320;
    const double C25028 = C24115 * C1320;
    const double C34944 = C34902 * C1320;
    const double C70730 = C70424 * C1320;
    const double C74300 = C74258 * C1320;
    const double C84467 = C152085 * C1320;
    const double C1904 = C135 * C1893;
    const double C4001 = C2826 * C1893;
    const double C12663 = C11351 * C1893;
    const double C25266 = C24115 * C1893;
    const double C71736 = C70424 * C1893;
    const double C84705 = C152085 * C1893;
    const double C152533 = ae * C152532;
    const double C3134 = (3 * C152380 + C152162 * C152532 +
                          (2 * C152374 + C152162 * C152522) * ae) /
                         C151933;
    const double C4310 = (C152354 * C152532) / C151933;
    const double C152608 = C152607 + C152600;
    const double C5707 =
        (3 * (C152563 + C152567 + C152567 + C152162 * C152721) + C152717 +
         C152717 +
         C152162 *
             (2 * C152721 + C152718 + C152718 +
              C152162 * (C152711 + C152719 + C152719 +
                         C152162 * (2 * ae * C152354 * C152323 +
                                    C152162 * C152354 *
                                        (C152220 + (C152214 * C152215 +
                                                    C152166 * bs[9] *
                                                        std::pow(C152164, 9)) *
                                                       C152165 * C152181))))) /
        C151940;
    const double C152876 = ae * C152874;
    const double C152875 = C152162 * C152874;
    const double C152939 = C152354 * C152874;
    const double C28655 =
        (3 * (C152695 + C152699 + C152699 + C152162 * C152915) + C152911 +
         C152911 +
         C152162 *
             (2 * C152915 + C152912 + C152912 +
              C152162 * (C152905 + C152913 + C152913 +
                         C152162 * (2 * ae * (C152311 + C152835 * C152417) +
                                    C152162 * (C152831 +
                                               C152169 *
                                                   (C152214 * C152215 +
                                                    C152166 * bs[9] *
                                                        std::pow(C152164, 9)) *
                                                   C152165 * C152417))))) /
        C151940;
    const double C32024 = C24115 * C32000;
    const double C37932 = C34902 * C32000;
    const double C52854 = C2826 * C32000;
    const double C61423 = C11351 * C32000;
    const double C64726 = C135 * C32000;
    const double C77288 = C74258 * C32000;
    const double C81624 = C70424 * C32000;
    const double C95567 = C152085 * C32000;
    const double C153011 = C152961 + C153009;
    const double C153029 = C152821 + C153022;
    const double C153058 = ae * C153049;
    const double C153091 = ae * C153085;
    const double C32642 = (3 * C152888 + C152354 * C153085) / C151933;
    const double C32643 =
        (2 * (2 * ae * (3 * C152886 + C152354 * C153083) + C152162 * C153133) +
         C153136 + C153136 +
         C152162 *
             (C153133 + C153137 + C153137 +
              C152162 *
                  (2 * ae *
                       (3 * C153027 +
                        C152354 * (2 * C153046 +
                                   C152354 * (C152290 + C152318 * C152417))) +
                   C152162 *
                       (3 * C153028 +
                        C152354 *
                            (2 * C153047 +
                             C152354 * (C152220 + (C152214 * C152215 +
                                                   C152166 * bs[9] *
                                                       std::pow(C152164, 9)) *
                                                      C152165 * C152417)))))) /
        C151940;
    const double C34020 = C24115 * C34008;
    const double C54841 = C2826 * C34008;
    const double C57125 = C135 * C34008;
    const double C68440 = C11351 * C34008;
    const double C135640 = C70424 * C34008;
    const double C151189 = C152085 * C34008;
    const double C413 = C405 + C387;
    const double C2905 = C2893 + C2866;
    const double C12176 = C12174 + C12168;
    const double C24194 = C24182 + C24155;
    const double C71249 = C71247 + C71241;
    const double C83633 = C83621 + C83594;
    const double C1101 = C1097 + C1088;
    const double C12384 = C12382 + C12376;
    const double C71457 = C71455 + C71449;
    const double C3772 = C3769 + C3184;
    const double C11682 = C11670 + C11653;
    const double C25037 = C25034 + C24461;
    const double C34971 = C34959 + C34942;
    const double C70755 = C70743 + C70726;
    const double C74327 = C74315 + C74298;
    const double C84476 = C84473 + C83900;
    const double C15372 = C15371 + C1905;
    const double C4010 = C4007 + C3498;
    const double C12676 = C12670 + C12661;
    const double C25275 = C25272 + C24763;
    const double C71749 = C71743 + C71734;
    const double C84714 = C84711 + C84202;
    const double C3181 = C153887 * C3137;
    const double C24458 = C153887 * C3137;
    const double C35701 = C153860 * C3137;
    const double C75057 = C153860 * C3137;
    const double C83897 = C83545 * C3137;
    const double C3199 = C3179 + C3180;
    const double C24476 = C24456 + C24457;
    const double C35709 = C35700 + C35213;
    const double C75065 = C75056 + C74569;
    const double C83915 = C83895 + C83896;
    const double C4345 = C4334 + C4335;
    const double C19079 = C19074 + C13865;
    const double C25598 = C25587 + C25588;
    const double C35927 = C35918 + C35471;
    const double C88191 = C88188 + C72938;
    const double C75283 = C75274 + C74827;
    const double C85037 = C85026 + C85027;
    const double C9871 = C7455 * C153874;
    const double C50133 = C7455 * C153874;
    const double C118551 = C7455 * C83548;
    const double C152645 = ae * C152644;
    const double C4725 = (4 * C152486 + C152162 * C152644 +
                          (3 * C152476 + C152162 * C152633) * ae) /
                         C151933;
    const double C5705 = (C152354 * C152644) / C151933;
    const double C28653 = (C152644 + C152874 * C152417) / C151933;
    const double C36209 = C153860 * C5708;
    const double C39075 = C153887 * C5708;
    const double C75565 = C153860 * C5708;
    const double C93426 = C83545 * C5708;
    const double C102353 = C153887 * C5708;
    const double C52874 = C52865 + C4970;
    const double C58367 = C58365 + C22193;
    const double C32044 = C32035 + C26205;
    const double C35491 = C35483 + C35466;
    const double C74847 = C74839 + C74822;
    const double C78455 = C78449 + C78440;
    const double C94774 = C94767 + C85644;
    const double C52103 = C52090 + C52061;
    const double C63523 = C63522 + C63520;
    const double C59656 = C59654 + C59649;
    const double C31270 = C31257 + C31228;
    const double C79849 = C79843 + C79827;
    const double C93778 = C93769 + C93747;
    const double C56374 = C56372 * C153454;
    const double C64922 = C56372 * C153464;
    const double C108839 = C56372 * C153464;
    const double C152824 = C152782 + C152822;
    const double C152927 = ae * C152920;
    const double C28666 = C28359 * C28652;
    const double C29447 = C28357 * C28652;
    const double C30974 = C24115 * C28652;
    const double C32419 = C24113 * C28652;
    const double C36756 = C34902 * C28652;
    const double C46261 = C34900 * C28652;
    const double C51813 = C2826 * C28652;
    const double C53249 = C2824 * C28652;
    const double C60143 = C11351 * C28652;
    const double C76112 = C74258 * C28652;
    const double C80336 = C70424 * C28652;
    const double C96557 = C152085 * C28652;
    const double C132742 = C74256 * C28652;
    const double C149615 = C152060 * C28652;
    const double C33403 = C153887 * C28654;
    const double C45589 = C153860 * C28654;
    const double C54230 = C153887 * C28654;
    const double C132070 = C153860 * C28654;
    const double C150587 = C83545 * C28654;
    const double C32657 = C32649 + C32017;
    const double C46809 = C46800 + C37936;
    const double C53484 = C53476 + C52847;
    const double C69102 = C69097 + C61425;
    const double C133290 = C133281 + C77292;
    const double C136302 = C136297 + C81626;
    const double C149847 = C149839 + C95570;
    const double C34030 = C34026 + C31222;
    const double C54851 = C54847 + C52055;
    const double C57129 = C57127 + C55790;
    const double C68446 = C68443 + C60443;
    const double C135646 = C135643 + C80640;
    const double C151199 = C151195 + C97352;
    const double C56711 = C56710 + C56707;
    const double C69639 = C69637 + C69630;
    const double C136839 = C136837 + C136830;
    const double C83608 = C83589 + C83590;
    const double C83605 = C83580 + C83581;
    const double C83602 = C83571 + C83572;
    const double C83599 = C83562 + C83563;
    const double C83914 = C83892 + C83893;
    const double C83911 = C83883 + C83884;
    const double C83908 = C83868 + C83869;
    const double C83905 = C83859 + C83860;
    const double C84216 = C84194 + C84195;
    const double C84213 = C84185 + C84186;
    const double C84210 = C84170 + C84171;
    const double C84207 = C84161 + C84162;
    const double C84472 = C84463 + C83899;
    const double C84710 = C84701 + C84201;
    const double C85036 = C85023 + C85024;
    const double C85033 = C85014 + C85015;
    const double C93428 = C93423 + C86380;
    const double C93759 = C93744 + C86971;
    const double C93754 = C93736 + C84180;
    const double C93749 = C93728 + C84177;
    const double C94766 = C94756 + C85645;
    const double C94762 = C94749 + C85009;
    const double C95574 = C95563 + C85648;
    const double C96561 = C96550 + C86383;
    const double C97356 = C97345 + C86974;
    const double C149846 = C149837 + C95571;
    const double C150592 = C150584 + C96558;
    const double C151194 = C151185 + C97353;
    const double C34938 = C34899 * C333;
    const double C34923 = C34899 * C332;
    const double C34914 = C34899 * C331;
    const double C35204 = C34899 * C3128;
    const double C35181 = C34899 * C1318;
    const double C35462 = C34899 * C3442;
    const double C35439 = C34899 * C1891;
    const double C35698 = C34899 * C1317;
    const double C35916 = C34899 * C1890;
    const double C36204 = C34899 * C4304;
    const double C44364 = C34899 * C3441;
    const double C44358 = C34899 * C1892;
    const double C45044 = C34899 * C4303;
    const double C45586 = C34899 * C4959;
    const double C46256 = C34899 * C5703;
    const double C46798 = C34899 * C6305;
    const double C74294 = C74255 * C333;
    const double C74279 = C74255 * C332;
    const double C74270 = C74255 * C331;
    const double C74560 = C74255 * C3128;
    const double C74537 = C74255 * C1318;
    const double C74818 = C74255 * C3442;
    const double C74795 = C74255 * C1891;
    const double C75054 = C74255 * C1317;
    const double C75272 = C74255 * C1890;
    const double C75560 = C74255 * C4304;
    const double C130845 = C74255 * C3441;
    const double C130839 = C74255 * C1892;
    const double C131525 = C74255 * C4303;
    const double C132067 = C74255 * C4959;
    const double C132737 = C74255 * C5703;
    const double C133279 = C74255 * C6305;
    const double C152057 = C152049 * be;
    const double C70488 = C70478 + C70454;
    const double C70487 = C70477 + C70451;
    const double C70484 = C70474 + C70442;
    const double C70482 = C70472 + C70436;
    const double C70480 = C70470 + C70430;
    const double C70766 = C70754 + C70724;
    const double C70764 = C70752 + C70718;
    const double C70762 = C70750 + C70712;
    const double C70761 = C70749 + C70705;
    const double C70759 = C70747 + C70699;
    const double C70757 = C70745 + C70693;
    const double C71040 = C71028 + C70998;
    const double C71038 = C71026 + C70992;
    const double C71036 = C71024 + C70986;
    const double C71035 = C71023 + C70979;
    const double C71033 = C71021 + C70973;
    const double C71031 = C71019 + C70967;
    const double C71248 = C71246 + C71239;
    const double C71456 = C71454 + C71447;
    const double C71754 = C71748 + C71732;
    const double C71752 = C71746 + C71726;
    const double C71750 = C71744 + C71720;
    const double C78460 = C78454 + C78438;
    const double C78458 = C78452 + C78431;
    const double C78457 = C78451 + C78429;
    const double C78825 = C78812 + C78781;
    const double C78823 = C78810 + C78776;
    const double C78822 = C78809 + C78769;
    const double C78820 = C78807 + C78765;
    const double C78817 = C78804 + C78758;
    const double C78815 = C78802 + C78753;
    const double C79130 = C79128 + C79123;
    const double C79848 = C79842 + C79824;
    const double C79846 = C79840 + C79816;
    const double C79844 = C79838 + C79811;
    const double C80648 = C80645 + C80633;
    const double C81638 = C81634 + C81621;
    const double C81636 = C81632 + C81617;
    const double C82430 = C82428 + C82417;
    const double C88194 = C88192 + C88187;
    const double C135647 = C135645 + C135635;
    const double C136305 = C136303 + C136296;
    const double C136838 = C136836 + C136828;
    const double C2909 = C2900 + C2907;
    const double C2908 = C2906 + C2899;
    const double C3766 = C3212 + C3756;
    const double C52078 = C3534 + C52062;
    const double C102658 = C102655 + C3534;
    const double C102657 = C3529 + C102654;
    const double C102656 = C102653 + C3529;
    const double C4004 = C3526 + C3994;
    const double C103240 = C103239 + C3526;
    const double C54844 = C52098 + C54834;
    const double C52105 = C52104 + C52097;
    const double C58668 = C19383 * C153464;
    const double C120641 = C19383 * C153464;
    const double C58661 = C19390 * C153464;
    const double C120640 = C19390 * C153464;
    const double C58669 = C19384 * C153818;
    const double C67266 = C19384 * C153454;
    const double C120642 = C19384 * C74249;
    const double C62207 = C58662 * C153464;
    const double C67265 = C58662 * C153454;
    const double C124128 = C58662 * C153464;
    const double C58670 = C58660 * C153818;
    const double C67263 = C58660 * C153454;
    const double C120639 = C58660 * C74249;
    const double C60439 = C59650 * C153464;
    const double C122385 = C59650 * C153464;
    const double C60447 = C60440 * C153818;
    const double C68439 = C60440 * C153454;
    const double C122386 = C60440 * C74249;
    const double C62217 = C62208 * C153818;
    const double C69626 = C62208 * C153454;
    const double C124129 = C62208 * C74249;
    const double C67267 = C67264 * C153454;
    const double C69633 = C69625 * C153454;
    const double C24198 = C24189 + C24196;
    const double C24197 = C24195 + C24188;
    const double C25031 = C24489 + C25021;
    const double C31245 = C24799 + C31229;
    const double C39380 = C39377 + C24799;
    const double C39379 = C24794 + C39376;
    const double C39378 = C39375 + C24794;
    const double C25269 = C24791 + C25259;
    const double C39962 = C39961 + C24791;
    const double C34023 = C31265 + C34013;
    const double C31272 = C31271 + C31264;
    const double C152065 = C152058 + C152022;
    const double C3220 = C3208 + C3172;
    const double C24497 = C24485 + C24449;
    const double C35234 = C35226 + C35180;
    const double C74590 = C74582 + C74536;
    const double C83936 = C83924 + C83888;
    const double C4354 = C4348 + C4327;
    const double C102361 = C102358 + C102351;
    const double C19085 = C19081 + C19071;
    const double C25607 = C25601 + C25580;
    const double C39083 = C39080 + C39073;
    const double C35492 = C35484 + C35438;
    const double C78459 = C78453 + C78433;
    const double C74848 = C74840 + C74794;
    const double C85046 = C85040 + C85019;
    const double C54236 = C54223 + C5717;
    const double C33409 = C33396 + C26943;
    const double C45051 = C45046 + C36197;
    const double C131532 = C131527 + C75553;
    const double C96562 = C96552 + C86382;
    const double C68444 = C68438 * C153454;
    const double C53485 = C52880 + C53478;
    const double C32658 = C32050 + C32651;
    const double C3138 =
        (3 * (C152209 + C152378 + C152378 + C152162 * C152523) + C152533 +
         C152533 +
         C152162 *
             (2 * C152523 + C152530 + C152530 +
              C152162 *
                  (C152224 + C152526 + C152526 +
                   C152162 *
                       (2 * ae * C152327 +
                        C152162 *
                            (2 * C152169 * C152220 +
                             C152169 * (C152220 + (C152214 * C152215 +
                                                   C152166 * bs[9] *
                                                       std::pow(C152164, 9)) *
                                                      C152165 * C152181)))))) /
        C151940;
    const double C3185 = C2826 * C3134;
    const double C13007 = C11351 * C3134;
    const double C24462 = C24115 * C3134;
    const double C28376 = C28359 * C3134;
    const double C35702 = C34902 * C3134;
    const double C72080 = C70424 * C3134;
    const double C75058 = C74258 * C3134;
    const double C83901 = C152085 * C3134;
    const double C4337 = C2826 * C4310;
    const double C13863 = C11351 * C4310;
    const double C16566 = C135 * C4310;
    const double C25590 = C24115 * C4310;
    const double C35920 = C34902 * C4310;
    const double C72936 = C70424 * C4310;
    const double C75276 = C74258 * C4310;
    const double C85029 = C152085 * C4310;
    const double C152609 = ae * C152608;
    const double C4724 = (4 * C152509 + C152162 * C152608 +
                          (3 * C152499 + C152162 * C152597) * ae) /
                         C151933;
    const double C5704 = (C152354 * C152608) / C151933;
    const double C152877 = C152832 + C152875;
    const double C152946 = ae * C152939;
    const double C153012 = C153011 + C152998;
    const double C153035 = ae * C153029;
    const double C30192 = (2 * C152920 + C152354 * C153029) / C151933;
    const double C30194 =
        (3 * (2 * C152737 + C152354 * C152887 + C153088 + C153088 +
              C152162 * C153095) +
         C153091 + C153091 +
         C152162 *
             (2 * C153095 + C153092 + C153092 +
              C152162 *
                  (C153084 + C153093 + C153093 +
                   C152162 *
                       (2 * ae *
                            (2 * C153046 +
                             C152354 * (C152290 + C152318 * C152417)) +
                        C152162 *
                            (2 * C153047 +
                             C152354 * (C152220 + (C152214 * C152215 +
                                                   C152166 * bs[9] *
                                                       std::pow(C152164, 9)) *
                                                      C152165 * C152417)))))) /
        C151940;
    const double C32652 = C24115 * C32642;
    const double C46802 = C34902 * C32642;
    const double C53479 = C2826 * C32642;
    const double C56579 = C135 * C32642;
    const double C69099 = C11351 * C32642;
    const double C133283 = C74258 * C32642;
    const double C136299 = C70424 * C32642;
    const double C149842 = C152085 * C32642;
    const double C16241 = C1101 * C153852;
    const double C99523 = C1101 * C153852;
    const double C3775 = C3772 + C3762;
    const double C11694 = C11682 + C11654;
    const double C25040 = C25037 + C25027;
    const double C34983 = C34971 + C34943;
    const double C70767 = C70755 + C70727;
    const double C74339 = C74327 + C74299;
    const double C84479 = C84476 + C84466;
    const double C15373 = C15372 + C15370;
    const double C4013 = C4010 + C4000;
    const double C12682 = C12676 + C12662;
    const double C25278 = C25275 + C25265;
    const double C71755 = C71749 + C71735;
    const double C84717 = C84714 + C84704;
    const double C3211 = C3199 + C3180;
    const double C24488 = C24476 + C24457;
    const double C35713 = C35709 + C35213;
    const double C75069 = C75065 + C74569;
    const double C83927 = C83915 + C83896;
    const double C4351 = C4345 + C4335;
    const double C19083 = C19079 + C13865;
    const double C25604 = C25598 + C25588;
    const double C35931 = C35927 + C35471;
    const double C88193 = C88191 + C72938;
    const double C75287 = C75283 + C74827;
    const double C85043 = C85037 + C85027;
    const double C4728 =
        (4 * (2 * C152477 + C152484 + C152484 + C152162 * C152634) + C152645 +
         C152645 +
         C152162 * (3 * C152634 + C152642 + C152642 +
                    C152162 * (2 * C152626 + C152638 + C152638 +
                               C152162 * (C152212 + C152630 + C152630 +
                                          C152162 * (2 * ae * C152311 +
                                                     C152162 * C152169 *
                                                         C152220))))) /
        C151940;
    const double C4734 = C2826 * C4725;
    const double C25978 = C24115 * C4725;
    const double C28525 = C28357 * C4725;
    const double C28523 = C28359 * C4725;
    const double C35208 = C34902 * C4725;
    const double C36551 = C34900 * C4725;
    const double C74564 = C74258 * C4725;
    const double C75907 = C74256 * C4725;
    const double C85417 = C152085 * C4725;
    const double C5714 = C2826 * C5705;
    const double C20911 = C11351 * C5705;
    const double C26940 = C24115 * C5705;
    const double C28671 = C28359 * C5705;
    const double C29105 = C28357 * C5705;
    const double C36208 = C34902 * C5705;
    const double C37407 = C34900 * C5705;
    const double C40838 = C24113 * C5705;
    const double C75564 = C74258 * C5705;
    const double C76763 = C74256 * C5705;
    const double C80338 = C70424 * C5705;
    const double C86379 = C152085 * C5705;
    const double C95266 = C152060 * C5705;
    const double C104116 = C2824 * C5705;
    const double C28672 = C28359 * C28653;
    const double C30975 = C24115 * C28653;
    const double C36752 = C34902 * C28653;
    const double C51814 = C2826 * C28653;
    const double C60141 = C11351 * C28653;
    const double C76108 = C74258 * C28653;
    const double C80334 = C70424 * C28653;
    const double C96554 = C152085 * C28653;
    const double C52883 = C52874 + C52853;
    const double C58369 = C58367 + C58363;
    const double C32053 = C32044 + C32023;
    const double C35499 = C35491 + C35467;
    const double C74855 = C74847 + C74823;
    const double C78461 = C78455 + C78441;
    const double C94780 = C94774 + C94759;
    const double C65576 = C63523 * C153464;
    const double C109493 = C63523 * C153464;
    const double C152825 = C152824 + C152816;
    const double C29096 =
        (4 * (2 * C152747 + C152744 + C152744 + C152162 * C152934) + C152927 +
         C152927 +
         C152162 *
             (3 * C152934 + C152928 + C152928 +
              C152162 *
                  (2 * C152932 + C152929 + C152929 +
                   C152162 * (C152919 + C152930 + C152930 +
                              C152162 * (2 * ae * C152354 * C152290 +
                                         C152162 * C152354 * C152220))))) /
        C151940;
    const double C33412 = C33402 + C30974;
    const double C45597 = C45588 + C36756;
    const double C54239 = C54229 + C51813;
    const double C132078 = C132069 + C76112;
    const double C150593 = C150586 + C96557;
    const double C32661 = C32657 + C32017;
    const double C46813 = C46809 + C37936;
    const double C53488 = C53484 + C52847;
    const double C69104 = C69102 + C61425;
    const double C133294 = C133290 + C77292;
    const double C136304 = C136302 + C81626;
    const double C149851 = C149847 + C95570;
    const double C34033 = C34030 + C34019;
    const double C54854 = C54851 + C54840;
    const double C57131 = C57129 + C57124;
    const double C68448 = C68446 + C68437;
    const double C135648 = C135646 + C135637;
    const double C151202 = C151199 + C151188;
    const double C56712 = C56711 * C153454;
    const double C83620 = C83608 + C83590;
    const double C83617 = C83605 + C83581;
    const double C83614 = C83602 + C83572;
    const double C83611 = C83599 + C83563;
    const double C83926 = C83914 + C83893;
    const double C83923 = C83911 + C83884;
    const double C83920 = C83908 + C83869;
    const double C83917 = C83905 + C83860;
    const double C84228 = C84216 + C84195;
    const double C84225 = C84213 + C84186;
    const double C84222 = C84210 + C84171;
    const double C84219 = C84207 + C84162;
    const double C84475 = C84472 + C83899;
    const double C84713 = C84710 + C84201;
    const double C85042 = C85036 + C85024;
    const double C85039 = C85033 + C85015;
    const double C93431 = C93428 + C86380;
    const double C93768 = C93759 + C86971;
    const double C93765 = C93754 + C84180;
    const double C93762 = C93749 + C84177;
    const double C94773 = C94766 + C85645;
    const double C94770 = C94762 + C85009;
    const double C95577 = C95574 + C85648;
    const double C96564 = C96561 + C86383;
    const double C97359 = C97356 + C86974;
    const double C149850 = C149846 + C95571;
    const double C150595 = C150592 + C96558;
    const double C151198 = C151194 + C97353;
    const double C34958 = C34938 + C34939;
    const double C34953 = C34923 + C34924;
    const double C34950 = C34914 + C34915;
    const double C35224 = C35204 + C35205;
    const double C35219 = C35181 + C35182;
    const double C35482 = C35462 + C35463;
    const double C35477 = C35439 + C35440;
    const double C35708 = C35698 + C35212;
    const double C35926 = C35916 + C35470;
    const double C36216 = C36204 + C36205;
    const double C44375 = C44364 + C35454;
    const double C44372 = C44358 + C35449;
    const double C45050 = C45044 + C36196;
    const double C45596 = C45586 + C36757;
    const double C46266 = C46256 + C37411;
    const double C46808 = C46798 + C37937;
    const double C74314 = C74294 + C74295;
    const double C74309 = C74279 + C74280;
    const double C74306 = C74270 + C74271;
    const double C74580 = C74560 + C74561;
    const double C74575 = C74537 + C74538;
    const double C74838 = C74818 + C74819;
    const double C74833 = C74795 + C74796;
    const double C75064 = C75054 + C74568;
    const double C75282 = C75272 + C74826;
    const double C75572 = C75560 + C75561;
    const double C130856 = C130845 + C74810;
    const double C130853 = C130839 + C74805;
    const double C131531 = C131525 + C75552;
    const double C132077 = C132067 + C76113;
    const double C132747 = C132737 + C76767;
    const double C133289 = C133279 + C77293;
    const double C152064 = C152057 / C151933;
    const double C70492 = C70486 + C70487;
    const double C70493 = C70485 + C70484;
    const double C70491 = C70484 + C70485;
    const double C70490 = C70482 + C70483;
    const double C71237 = C70758 + C70759;
    const double C71236 = C70756 + C70757;
    const double C78784 = C71039 + C71038;
    const double C79423 = C71038 + C71039;
    const double C78770 = C71037 + C71036;
    const double C78761 = C71036 + C71037;
    const double C78771 = C71034 + C71035;
    const double C78756 = C71035 + C71034;
    const double C71445 = C71032 + C71033;
    const double C79422 = C71033 + C71032;
    const double C71444 = C71030 + C71031;
    const double C89067 = C71031 + C71030;
    const double C88776 = C71753 + C71752;
    const double C89454 = C71752 + C71753;
    const double C79829 = C71751 + C71750;
    const double C79814 = C71750 + C71751;
    const double C79828 = C78456 + C78457;
    const double C79819 = C78457 + C78456;
    const double C82415 = C78821 + C78822;
    const double C134464 = C78822 + C78821;
    const double C78829 = C78820 + C78819;
    const double C78828 = C78819 + C78820;
    const double C78827 = C78817 + C78818;
    const double C80637 = C79847 + C79846;
    const double C135638 = C80649 + C80648;
    const double C136825 = C82431 + C82430;
    const double C52091 = C52078 * C153454;
    const double C54848 = C54844 * C153454;
    const double C52106 = C52105 * C153454;
    const double C58673 = C58668 + C58669;
    const double C120644 = C120641 + C120642;
    const double C58674 = C58670 + C58661;
    const double C120643 = C120639 + C120640;
    const double C60450 = C60439 + C60447;
    const double C122387 = C122385 + C122386;
    const double C62220 = C62207 + C62217;
    const double C124130 = C124128 + C124129;
    const double C31258 = C31245 * C153454;
    const double C34027 = C34023 * C153454;
    const double C31273 = C31272 * C153454;
    const double C83597 = C152065 * C149;
    const double C83587 = C152065 * C148;
    const double C83584 = C152065 * C147;
    const double C83569 = C152065 * C146;
    const double C83560 = C152065 * C145;
    const double C83556 = C152065 * C144;
    const double C83903 = C152065 * C345;
    const double C83898 = C152065 * C338;
    const double C83890 = C152065 * C344;
    const double C83881 = C152065 * C343;
    const double C83877 = C152065 * C342;
    const double C83876 = C152065 * C341;
    const double C83872 = C152065 * C340;
    const double C83863 = C152065 * C339;
    const double C84205 = C152065 * C558;
    const double C84200 = C152065 * C551;
    const double C84192 = C152065 * C557;
    const double C84183 = C152065 * C556;
    const double C84179 = C152065 * C555;
    const double C84178 = C152065 * C554;
    const double C84174 = C152065 * C553;
    const double C84165 = C152065 * C552;
    const double C84469 = C152065 * C337;
    const double C84707 = C152065 * C550;
    const double C85031 = C152065 * C1066;
    const double C85021 = C152065 * C1065;
    const double C85012 = C152065 * C1064;
    const double C85008 = C152065 * C1063;
    const double C85422 = C152065 * C1324;
    const double C85419 = C152065 * C1323;
    const double C85416 = C152065 * C1322;
    const double C85649 = C152065 * C1466;
    const double C85646 = C152065 * C1465;
    const double C85643 = C152065 * C1464;
    const double C86384 = C152065 * C1897;
    const double C86381 = C152065 * C1896;
    const double C86378 = C152065 * C1895;
    const double C86975 = C152065 * C2249;
    const double C86972 = C152065 * C2248;
    const double C86969 = C152065 * C2247;
    const double C95270 = C152065 * C4307;
    const double C95267 = C152065 * C4308;
    const double C95572 = C152065 * C6312;
    const double C95569 = C152065 * C6310;
    const double C96559 = C152065 * C3445;
    const double C96556 = C152065 * C3446;
    const double C97354 = C152065 * C7677;
    const double C97351 = C152065 * C7678;
    const double C149616 = C152065 * C4962;
    const double C149844 = C152065 * C9120;
    const double C150590 = C152065 * C6311;
    const double C151191 = C152065 * C10469;
    const double C28351 =
        (((((0 - (C151931 * C151992) / C151933) * ae) / C151933 -
           (0 * be) / C151944 + (2 * C151994) / C151933) /
              C151975 -
          ((C151931 * C152054 + 0) * be) / C151933 + C152011 - C152034) /
             C151975 +
         ((C151931 * C152070 + 0) * ae) / C151933) /
            C151975 -
        ((C151931 * (C152070 / C151975 +
                     ((C151931 * C152065 + C153667) * ae) / C151933 + C152060) +
          C153932) *
         be) /
            C151933 +
        C152065 / C151975 + ((C151931 * C152060 + C153674) * ae) / C151933 +
        2 * (C152022 / C151975 - (0 * be) / C151933);
    const double C28353 =
        (C152070 / C151975 + ((C151931 * C152065 + C153667) * ae) / C151933 +
         C152060) /
            C151975 -
        ((C151931 * (C152065 / C151975 +
                     ((C151931 * C152060 + C153674) * ae) / C151933 + C152086) +
          C153928) *
         be) /
            C151933 +
        2 * (C152060 / C151975 + ((C151931 * C152085 + C83545) * ae) / C151933);
    const double C28355 =
        (C152065 / C151975 + ((C151931 * C152060 + C153674) * ae) / C151933 +
         C152086) /
            C151975 -
        ((C151931 * (C152060 / C151975 +
                     ((C151931 * C152085 + C83545) * ae) / C151933) +
          C153918) *
         be) /
            C151933 +
        3 * (C152085 / C151975 + (0 * ae) / C151933);
    const double C34896 = C152070 / C151975 -
                          ((C151931 * C152065 + C153667) * be) / C151933 +
                          C152060;
    const double C34898 = C152065 / C151975 -
                          ((C151931 * C152060 + C153674) * be) / C151933 +
                          C152086;
    const double C74252 = C152070 / C151975 +
                          ((C151931 * C152065 + C153667) * ae) / C151933 +
                          C152060;
    const double C74254 = C152065 / C151975 +
                          ((C151931 * C152060 + C153674) * ae) / C151933 +
                          C152086;
    const double C103630 = C4354 + C103628;
    const double C103629 = C103627 + C4354;
    const double C40352 = C25607 + C40350;
    const double C40351 = C40349 + C25607;
    const double C54242 = C54236 + C5717;
    const double C33415 = C33409 + C26943;
    const double C45055 = C45051 + C36197;
    const double C131536 = C131532 + C75553;
    const double C96565 = C96562 + C86382;
    const double C53489 = C53485 * C153454;
    const double C32662 = C32658 * C153454;
    const double C4727 =
        (4 * (2 * C152500 + C152507 + C152507 + C152162 * C152598) + C152609 +
         C152609 +
         C152162 *
             (3 * C152598 + C152606 + C152606 +
              C152162 *
                  (2 * C152590 + C152602 + C152602 +
                   C152162 *
                       (C152222 + C152594 + C152594 +
                        C152162 *
                            (2 * ae * C152323 +
                             C152162 * (C152220 + (C152214 * C152215 +
                                                   C152166 * bs[9] *
                                                       std::pow(C152164, 9)) *
                                                      C152165 * C152181)))))) /
        C151940;
    const double C4731 = C2826 * C4724;
    const double C25975 = C24115 * C4724;
    const double C28799 = C28359 * C4724;
    const double C35214 = C34902 * C4724;
    const double C74570 = C74258 * C4724;
    const double C85414 = C152085 * C4724;
    const double C5711 = C2826 * C5704;
    const double C20909 = C11351 * C5704;
    const double C26937 = C24115 * C5704;
    const double C28926 = C28359 * C5704;
    const double C36210 = C34902 * C5704;
    const double C75566 = C74258 * C5704;
    const double C86376 = C152085 * C5704;
    const double C89939 = C70424 * C5704;
    const double C152878 = C152877 + C152869;
    const double C29097 =
        (4 * (2 * C152734 + C152731 + C152731 + C152162 * C152953) + C152946 +
         C152946 +
         C152162 *
             (3 * C152953 + C152947 + C152947 +
              C152162 * (2 * C152951 + C152948 + C152948 +
                         C152162 * (C152938 + C152949 + C152949 +
                                    C152162 * (2 * ae * C152354 * C152835 +
                                               C152162 * C152354 * C152169 *
                                                   (C152214 * C152215 +
                                                    C152166 * bs[9] *
                                                        std::pow(C152164, 9)) *
                                                   C152165))))) /
        C151940;
    const double C153014 = ae * C153012;
    const double C153013 = C152162 * C153012;
    const double C153048 = C152354 * C153012;
    const double C29444 =
        (4 * (2 * C152897 + C152894 + C152894 + C152162 * C153042) + C153035 +
         C153035 +
         C152162 *
             (3 * C153042 + C153036 + C153036 +
              C152162 *
                  (2 * C153040 + C153037 + C153037 +
                   C152162 *
                       (C153028 + C153038 + C153038 +
                        C152162 *
                            (2 * ae * (C152290 + C152318 * C152417) +
                             C152162 * (C152220 + (C152214 * C152215 +
                                                   C152166 * bs[9] *
                                                       std::pow(C152164, 9)) *
                                                      C152165 * C152417)))))) /
        C151940;
    const double C30197 = C28359 * C30192;
    const double C33404 = C24115 * C30192;
    const double C45590 = C34902 * C30192;
    const double C54231 = C2826 * C30192;
    const double C68238 = C11351 * C30192;
    const double C132071 = C74258 * C30192;
    const double C135438 = C70424 * C30192;
    const double C150588 = C152085 * C30192;
    const double C17414 = C15373 * C153852;
    const double C100695 = C15373 * C153852;
    const double C3223 = C3211 + C3181;
    const double C24500 = C24488 + C24458;
    const double C35717 = C35713 + C35701;
    const double C75073 = C75069 + C75057;
    const double C83939 = C83927 + C83897;
    const double C4357 = C4351 + C4336;
    const double C19087 = C19083 + C19075;
    const double C25610 = C25604 + C25589;
    const double C35935 = C35931 + C35919;
    const double C88195 = C88193 + C88189;
    const double C75291 = C75287 + C75275;
    const double C85049 = C85043 + C85028;
    const double C35209 = C153860 * C4728;
    const double C74565 = C153860 * C4728;
    const double C35225 = C35207 + C35208;
    const double C74581 = C74563 + C74564;
    const double C102356 = C102352 + C5714;
    const double C39078 = C39074 + C26940;
    const double C36217 = C36207 + C36208;
    const double C75573 = C75563 + C75564;
    const double C93429 = C93425 + C86379;
    const double C152826 = ae * C152825;
    const double C28504 = (5 * C152680 + C152162 * C152825 +
                           (4 * C152669 + C152162 * C152812) * ae) /
                          C151933;
    const double C29094 = (C152354 * C152825) / C151933;
    const double C29443 = (C152825 + C153012 * C152417) / C151933;
    const double C46259 = C153860 * C29096;
    const double C132740 = C153860 * C29096;
    const double C33418 = C33412 + C30974;
    const double C45601 = C45597 + C36756;
    const double C54245 = C54239 + C51813;
    const double C132082 = C132078 + C76112;
    const double C150596 = C150593 + C96557;
    const double C32665 = C32661 + C32650;
    const double C46817 = C46813 + C46801;
    const double C53492 = C53488 + C53477;
    const double C69106 = C69104 + C69098;
    const double C133298 = C133294 + C133282;
    const double C136306 = C136304 + C136298;
    const double C149855 = C149851 + C149840;
    const double C57133 = C57131 * C153454;
    const double C83632 = C83620 + C83591;
    const double C83629 = C83617 + C83582;
    const double C83626 = C83614 + C83573;
    const double C83623 = C83611 + C83564;
    const double C83938 = C83926 + C83894;
    const double C83935 = C83923 + C83885;
    const double C83932 = C83920 + C83870;
    const double C83929 = C83917 + C83861;
    const double C84240 = C84228 + C84196;
    const double C84237 = C84225 + C84187;
    const double C84234 = C84222 + C84172;
    const double C84231 = C84219 + C84163;
    const double C84478 = C84475 + C84464;
    const double C84716 = C84713 + C84702;
    const double C85048 = C85042 + C85025;
    const double C85045 = C85039 + C85016;
    const double C93434 = C93431 + C93424;
    const double C93777 = C93768 + C93745;
    const double C93774 = C93765 + C93737;
    const double C93771 = C93762 + C93729;
    const double C94779 = C94773 + C94757;
    const double C94776 = C94770 + C94750;
    const double C95580 = C95577 + C95564;
    const double C96567 = C96564 + C96551;
    const double C97362 = C97359 + C97346;
    const double C149854 = C149850 + C149838;
    const double C150598 = C150595 + C150585;
    const double C151201 = C151198 + C151186;
    const double C34970 = C34958 + C34939;
    const double C34965 = C34953 + C34924;
    const double C34962 = C34950 + C34915;
    const double C35232 = C35224 + C35205;
    const double C35227 = C35219 + C35182;
    const double C35490 = C35482 + C35463;
    const double C35485 = C35477 + C35440;
    const double C35712 = C35708 + C35212;
    const double C35930 = C35926 + C35470;
    const double C36220 = C36216 + C36205;
    const double C44383 = C44375 + C35454;
    const double C44380 = C44372 + C35449;
    const double C45054 = C45050 + C36196;
    const double C45600 = C45596 + C36757;
    const double C46270 = C46266 + C37411;
    const double C46812 = C46808 + C37937;
    const double C74326 = C74314 + C74295;
    const double C74321 = C74309 + C74280;
    const double C74318 = C74306 + C74271;
    const double C74588 = C74580 + C74561;
    const double C74583 = C74575 + C74538;
    const double C74846 = C74838 + C74819;
    const double C74841 = C74833 + C74796;
    const double C75068 = C75064 + C74568;
    const double C75286 = C75282 + C74826;
    const double C75576 = C75572 + C75561;
    const double C130864 = C130856 + C74810;
    const double C130861 = C130853 + C74805;
    const double C131535 = C131531 + C75552;
    const double C132081 = C132077 + C76113;
    const double C132751 = C132747 + C76767;
    const double C133293 = C133289 + C77293;
    const double C152068 = C152019 - C152064;
    const double C78800 = C78784 * C153464;
    const double C143482 = C78784 * C153464;
    const double C78801 = C78770 * C74249;
    const double C134466 = C78770 * C153454;
    const double C143483 = C78770 * C153818;
    const double C78791 = C78761 * C153464;
    const double C143481 = C78761 * C153464;
    const double C80636 = C79828 * C153464;
    const double C145226 = C79828 * C153464;
    const double C82424 = C82415 * C74249;
    const double C136826 = C82415 * C153454;
    const double C146970 = C82415 * C153818;
    const double C134467 = C134464 * C153454;
    const double C82414 = C78828 * C153464;
    const double C134465 = C78828 * C153454;
    const double C146969 = C78828 * C153464;
    const double C78830 = C78827 * C74249;
    const double C134463 = C78827 * C153454;
    const double C143480 = C78827 * C153818;
    const double C80644 = C80637 * C74249;
    const double C135639 = C80637 * C153454;
    const double C145227 = C80637 * C153818;
    const double C135644 = C135638 * C153454;
    const double C136833 = C136825 * C153454;
    const double C28380 = C28351 * C147;
    const double C28371 = C28351 * C146;
    const double C28370 = C28351 * C145;
    const double C28361 = C28351 * C144;
    const double C28528 = C28351 * C343;
    const double C28519 = C28351 * C340;
    const double C28514 = C28351 * C342;
    const double C28513 = C28351 * C341;
    const double C28676 = C28351 * C556;
    const double C28667 = C28351 * C553;
    const double C28662 = C28351 * C555;
    const double C28661 = C28351 * C554;
    const double C28803 = C28351 * C339;
    const double C28930 = C28351 * C552;
    const double C29108 = C28351 * C1064;
    const double C29099 = C28351 * C1063;
    const double C29320 = C28351 * C1324;
    const double C29450 = C28351 * C1466;
    const double C29864 = C28351 * C1897;
    const double C30201 = C28351 * C2249;
    const double C28379 = C28353 * C338;
    const double C28372 = C28353 * C339;
    const double C28369 = C28353 * C340;
    const double C28362 = C28353 * C341;
    const double C28527 = C28353 * C1323;
    const double C28520 = C28353 * C343;
    const double C28515 = C28353 * C1324;
    const double C28512 = C28353 * C342;
    const double C28675 = C28353 * C1465;
    const double C28668 = C28353 * C1064;
    const double C28663 = C28353 * C1466;
    const double C28660 = C28353 * C1063;
    const double C28802 = C28353 * C344;
    const double C28929 = C28353 * C1065;
    const double C29107 = C28353 * C1896;
    const double C29100 = C28353 * C1897;
    const double C29319 = C28353 * C3131;
    const double C29449 = C28353 * C3445;
    const double C29863 = C28353 * C4307;
    const double C30200 = C28353 * C6312;
    const double C28378 = C28355 * C345;
    const double C28373 = C28355 * C344;
    const double C28368 = C28355 * C343;
    const double C28363 = C28355 * C342;
    const double C28526 = C28355 * C3132;
    const double C28521 = C28355 * C1323;
    const double C28516 = C28355 * C3131;
    const double C28511 = C28355 * C1324;
    const double C28674 = C28355 * C3446;
    const double C28669 = C28355 * C1896;
    const double C28664 = C28355 * C3445;
    const double C28659 = C28355 * C1897;
    const double C28801 = C28355 * C1322;
    const double C28928 = C28355 * C1895;
    const double C29106 = C28355 * C4308;
    const double C29101 = C28355 * C4307;
    const double C29318 = C28355 * C4726;
    const double C29448 = C28355 * C4962;
    const double C29862 = C28355 * C5706;
    const double C30199 = C28355 * C6311;
    const double C34947 = C34896 * C148;
    const double C34933 = C34896 * C147;
    const double C34930 = C34896 * C146;
    const double C34909 = C34896 * C145;
    const double C34904 = C34896 * C144;
    const double C35217 = C34896 * C344;
    const double C35210 = C34896 * C339;
    const double C35199 = C34896 * C343;
    const double C35194 = C34896 * C342;
    const double C35193 = C34896 * C341;
    const double C35188 = C34896 * C340;
    const double C35475 = C34896 * C557;
    const double C35468 = C34896 * C552;
    const double C35457 = C34896 * C556;
    const double C35452 = C34896 * C555;
    const double C35451 = C34896 * C554;
    const double C35446 = C34896 * C553;
    const double C35705 = C34896 * C338;
    const double C35923 = C34896 * C551;
    const double C36213 = C34896 * C1065;
    const double C36199 = C34896 * C1064;
    const double C36194 = C34896 * C1063;
    const double C36557 = C34896 * C1324;
    const double C36553 = C34896 * C1323;
    const double C36759 = C34896 * C1466;
    const double C36755 = C34896 * C1465;
    const double C37413 = C34896 * C1897;
    const double C37409 = C34896 * C1896;
    const double C37939 = C34896 * C2249;
    const double C37935 = C34896 * C2248;
    const double C45387 = C34896 * C4307;
    const double C45593 = C34896 * C6312;
    const double C46263 = C34896 * C3445;
    const double C46805 = C34896 * C7677;
    const double C34946 = C34898 * C337;
    const double C34936 = C34898 * C338;
    const double C34927 = C34898 * C339;
    const double C34912 = C34898 * C340;
    const double C34905 = C34898 * C341;
    const double C35216 = C34898 * C1322;
    const double C35211 = C34898 * C344;
    const double C35202 = C34898 * C1323;
    const double C35195 = C34898 * C1324;
    const double C35192 = C34898 * C342;
    const double C35185 = C34898 * C343;
    const double C35474 = C34898 * C1464;
    const double C35469 = C34898 * C1065;
    const double C35460 = C34898 * C1465;
    const double C35453 = C34898 * C1466;
    const double C35450 = C34898 * C1063;
    const double C35443 = C34898 * C1064;
    const double C35704 = C34898 * C345;
    const double C35922 = C34898 * C1066;
    const double C36212 = C34898 * C1895;
    const double C36202 = C34898 * C1896;
    const double C36195 = C34898 * C1897;
    const double C36556 = C34898 * C3131;
    const double C36552 = C34898 * C3132;
    const double C36758 = C34898 * C3445;
    const double C36754 = C34898 * C3446;
    const double C37412 = C34898 * C4307;
    const double C37408 = C34898 * C4308;
    const double C37938 = C34898 * C6312;
    const double C37934 = C34898 * C6310;
    const double C45386 = C34898 * C5706;
    const double C45592 = C34898 * C6311;
    const double C46262 = C34898 * C4962;
    const double C46804 = C34898 * C9120;
    const double C74303 = C74252 * C148;
    const double C74289 = C74252 * C147;
    const double C74286 = C74252 * C146;
    const double C74265 = C74252 * C145;
    const double C74260 = C74252 * C144;
    const double C74573 = C74252 * C344;
    const double C74566 = C74252 * C339;
    const double C74555 = C74252 * C343;
    const double C74550 = C74252 * C342;
    const double C74549 = C74252 * C341;
    const double C74544 = C74252 * C340;
    const double C74831 = C74252 * C557;
    const double C74824 = C74252 * C552;
    const double C74813 = C74252 * C556;
    const double C74808 = C74252 * C555;
    const double C74807 = C74252 * C554;
    const double C74802 = C74252 * C553;
    const double C75061 = C74252 * C338;
    const double C75279 = C74252 * C551;
    const double C75569 = C74252 * C1065;
    const double C75555 = C74252 * C1064;
    const double C75550 = C74252 * C1063;
    const double C75913 = C74252 * C1324;
    const double C75909 = C74252 * C1323;
    const double C76115 = C74252 * C1466;
    const double C76111 = C74252 * C1465;
    const double C76769 = C74252 * C1897;
    const double C76765 = C74252 * C1896;
    const double C77295 = C74252 * C2249;
    const double C77291 = C74252 * C2248;
    const double C131868 = C74252 * C4307;
    const double C132074 = C74252 * C6312;
    const double C132744 = C74252 * C3445;
    const double C133286 = C74252 * C7677;
    const double C74302 = C74254 * C337;
    const double C74292 = C74254 * C338;
    const double C74283 = C74254 * C339;
    const double C74268 = C74254 * C340;
    const double C74261 = C74254 * C341;
    const double C74572 = C74254 * C1322;
    const double C74567 = C74254 * C344;
    const double C74558 = C74254 * C1323;
    const double C74551 = C74254 * C1324;
    const double C74548 = C74254 * C342;
    const double C74541 = C74254 * C343;
    const double C74830 = C74254 * C1464;
    const double C74825 = C74254 * C1065;
    const double C74816 = C74254 * C1465;
    const double C74809 = C74254 * C1466;
    const double C74806 = C74254 * C1063;
    const double C74799 = C74254 * C1064;
    const double C75060 = C74254 * C345;
    const double C75278 = C74254 * C1066;
    const double C75568 = C74254 * C1895;
    const double C75558 = C74254 * C1896;
    const double C75551 = C74254 * C1897;
    const double C75912 = C74254 * C3131;
    const double C75908 = C74254 * C3132;
    const double C76114 = C74254 * C3445;
    const double C76110 = C74254 * C3446;
    const double C76768 = C74254 * C4307;
    const double C76764 = C74254 * C4308;
    const double C77294 = C74254 * C6312;
    const double C77290 = C74254 * C6310;
    const double C131867 = C74254 * C5706;
    const double C132073 = C74254 * C6311;
    const double C132743 = C74254 * C4962;
    const double C133285 = C74254 * C9120;
    const double C54248 = C54242 + C54224;
    const double C33421 = C33415 + C33397;
    const double C45059 = C45055 + C45047;
    const double C131540 = C131536 + C131528;
    const double C96568 = C96565 + C96553;
    const double C152879 = ae * C152878;
    const double C28505 = (5 * C152644 + C152162 * C152878 +
                           (4 * C152633 + C152162 * C152866) * ae) /
                          C151933;
    const double C29095 = (C152354 * C152878) / C151933;
    const double C153015 = C152960 + C153013;
    const double C153057 = ae * C153048;
    const double C35233 = C35225 + C35208;
    const double C74589 = C74581 + C74564;
    const double C102359 = C102356 + C5714;
    const double C39081 = C39078 + C26940;
    const double C36221 = C36217 + C36208;
    const double C75577 = C75573 + C75564;
    const double C93432 = C93429 + C86379;
    const double C28506 =
        (5 * (3 * C152670 + C152678 + C152678 + C152162 * C152814) + C152826 +
         C152826 +
         C152162 *
             (4 * C152814 + C152823 + C152823 +
              C152162 *
                  (3 * C152806 + C152819 + C152819 +
                   C152162 * (2 * C152798 + C152813 + C152813 +
                              C152162 * (C152205 + C152802 + C152802 +
                                         C152162 * (2 * ae * C152290 +
                                                    C152162 * C152220)))))) /
        C151940;
    const double C28518 = C28359 * C28504;
    const double C29317 = C28357 * C28504;
    const double C36554 = C34902 * C28504;
    const double C75910 = C74258 * C28504;
    const double C29103 = C28359 * C29094;
    const double C29861 = C28357 * C29094;
    const double C32421 = C24115 * C29094;
    const double C37410 = C34902 * C29094;
    const double C45385 = C34900 * C29094;
    const double C53251 = C2826 * C29094;
    const double C76766 = C74258 * C29094;
    const double C95268 = C152085 * C29094;
    const double C131866 = C74256 * C29094;
    const double C29446 = C28359 * C29443;
    const double C32418 = C24115 * C29443;
    const double C46260 = C34902 * C29443;
    const double C53248 = C2826 * C29443;
    const double C132741 = C74258 * C29443;
    const double C149614 = C152085 * C29443;
    const double C33424 = C33418 + C33403;
    const double C45605 = C45601 + C45589;
    const double C54251 = C54245 + C54230;
    const double C132086 = C132082 + C132070;
    const double C150599 = C150596 + C150587;
    const double C34982 = C34970 + C34940;
    const double C34977 = C34965 + C34925;
    const double C34974 = C34962 + C34916;
    const double C35240 = C35232 + C35206;
    const double C35235 = C35227 + C35183;
    const double C35498 = C35490 + C35464;
    const double C35493 = C35485 + C35441;
    const double C35716 = C35712 + C35699;
    const double C35934 = C35930 + C35917;
    const double C36224 = C36220 + C36206;
    const double C44391 = C44383 + C44365;
    const double C44388 = C44380 + C44359;
    const double C45058 = C45054 + C45045;
    const double C45604 = C45600 + C45587;
    const double C46274 = C46270 + C46257;
    const double C46816 = C46812 + C46799;
    const double C74338 = C74326 + C74296;
    const double C74333 = C74321 + C74281;
    const double C74330 = C74318 + C74272;
    const double C74596 = C74588 + C74562;
    const double C74591 = C74583 + C74539;
    const double C74854 = C74846 + C74820;
    const double C74849 = C74841 + C74797;
    const double C75072 = C75068 + C75055;
    const double C75290 = C75286 + C75273;
    const double C75580 = C75576 + C75562;
    const double C130872 = C130864 + C130846;
    const double C130869 = C130861 + C130840;
    const double C131539 = C131535 + C131526;
    const double C132085 = C132081 + C132068;
    const double C132755 = C132751 + C132738;
    const double C133297 = C133293 + C133280;
    const double C152071 = C152068 - C152002;
    const double C78814 = C78800 + C78801;
    const double C143485 = C143482 + C143483;
    const double C82427 = C82414 + C82424;
    const double C146971 = C146969 + C146970;
    const double C78831 = C78830 + C78791;
    const double C143484 = C143480 + C143481;
    const double C80647 = C80636 + C80644;
    const double C145228 = C145226 + C145227;
    const double C28507 =
        (5 * (3 * C152634 + C152642 + C152642 + C152162 * C152864) + C152879 +
         C152879 +
         C152162 *
             (4 * C152864 + C152876 + C152876 +
              C152162 *
                  (3 * C152857 + C152872 + C152872 +
                   C152162 *
                       (2 * C152848 + C152867 + C152867 +
                        C152162 * (C152831 + C152856 + C152856 +
                                   C152162 * (2 * ae * C152835 +
                                              C152162 * C152169 *
                                                  (C152214 * C152215 +
                                                   C152166 * bs[9] *
                                                       std::pow(C152164, 9)) *
                                                  C152165)))))) /
        C151940;
    const double C28524 = C28359 * C28505;
    const double C36550 = C34902 * C28505;
    const double C75906 = C74258 * C28505;
    const double C29104 = C28359 * C29095;
    const double C37406 = C34902 * C29095;
    const double C40837 = C24115 * C29095;
    const double C76762 = C74258 * C29095;
    const double C95265 = C152085 * C29095;
    const double C104115 = C2826 * C29095;
    const double C153016 = C153015 + C153005;
    const double C29858 =
        (5 * (3 * C152934 + C152928 + C152928 + C152162 * C153068) + C153057 +
         C153057 +
         C152162 *
             (4 * C153068 + C153058 + C153058 +
              C152162 *
                  (3 * C153066 + C153059 + C153059 +
                   C152162 *
                       (2 * C153064 + C153060 + C153060 +
                        C152162 * (C153047 + C153061 + C153061 +
                                   C152162 * (2 * ae * C152354 * C152318 +
                                              C152162 * C152354 *
                                                  (C152214 * C152215 +
                                                   C152166 * bs[9] *
                                                       std::pow(C152164, 9)) *
                                                  C152165)))))) /
        C151940;
    const double C35241 = C35233 + C35209;
    const double C74597 = C74589 + C74565;
    const double C102362 = C102359 + C102353;
    const double C39084 = C39081 + C39075;
    const double C36225 = C36221 + C36209;
    const double C75581 = C75577 + C75565;
    const double C93435 = C93432 + C93426;
    const double C46267 = C46258 + C37410;
    const double C132748 = C132739 + C76766;
    const double C83586 = C152071 * C140;
    const double C83583 = C152071 * C139;
    const double C83568 = C152071 * C138;
    const double C83559 = C152071 * C137;
    const double C83889 = C152071 * C332;
    const double C83880 = C152071 * C331;
    const double C83871 = C152071 * C328;
    const double C83862 = C152071 * C327;
    const double C84191 = C152071 * C545;
    const double C84182 = C152071 * C544;
    const double C84173 = C152071 * C541;
    const double C84164 = C152071 * C540;
    const double C84461 = C152071 * C326;
    const double C84699 = C152071 * C539;
    const double C85020 = C152071 * C1059;
    const double C85011 = C152071 * C1058;
    const double C93421 = C152071 * C1891;
    const double C93742 = C152071 * C2243;
    const double C93738 = C152071 * C543;
    const double C93726 = C152071 * C542;
    const double C94754 = C152071 * C1460;
    const double C94747 = C152071 * C1057;
    const double C95561 = C152071 * C1461;
    const double C96548 = C152071 * C1892;
    const double C97343 = C152071 * C2244;
    const double C149835 = C152071 * C6306;
    const double C150582 = C152071 * C3441;
    const double C151183 = C152071 * C7673;
    const double C28350 =
        (((ae * -2 * C151992) / C151993 -
          (((C151931 * C152015) / C151940 + 2 * C152054) * be) / C151933 -
          C152009 / C151940) /
             C151975 +
         ((C151931 * C152069 + 2 * C152070) * ae) / C151933) /
            C151975 -
        ((C151931 *
              (C152069 / C151975 +
               ((C151931 * C152071 + 2 * C152065) * ae) / C151933 + C152059) +
          2 * (C152070 / C151975 +
               ((C151931 * C152065 + C153667) * ae) / C151933 + C152060)) *
         be) /
            C151933 +
        C152071 / C151975 + ((C151931 * C152059 + 2 * C152060) * ae) / C151933 +
        (-2 * C151949) / (C151933 * 4 * C151940);
    const double C28352 =
        (C152069 / C151975 +
         ((C151931 * C152071 + 2 * C152065) * ae) / C151933 + C152059) /
            C151975 -
        ((C151931 * (C152071 / C151975 +
                     ((C151931 * C152059 + 2 * C152060) * ae) / C151933 +
                     (-2 * C151949) / C152083) +
          2 * (C152065 / C151975 +
               ((C151931 * C152060 + C153674) * ae) / C151933 + C152086)) *
         be) /
            C151933 +
        2 * (C152059 / C151975 +
             ((C152086 - C151957 / C152083) * ae) / C151933);
    const double C28354 =
        (C152071 / C151975 +
         ((C151931 * C152059 + 2 * C152060) * ae) / C151933 +
         (-2 * C151949) / C152083) /
            C151975 -
        ((C151931 * (C152059 / C151975 +
                     ((C152086 - C151957 / C152083) * ae) / C151933) +
          2 * (C152060 / C151975 +
               ((C151931 * C152085 + C83545) * ae) / C151933)) *
         be) /
            C151933 +
        (-3 * C151949) / (C151933 * 4 * C151993);
    const double C34895 = C152069 / C151975 -
                          ((C151931 * C152071 + 2 * C152065) * be) / C151933 +
                          C152059;
    const double C34897 = C152071 / C151975 -
                          ((C151931 * C152059 + 2 * C152060) * be) / C151933 +
                          (-2 * C151949) / C152083;
    const double C74251 = C152069 / C151975 +
                          ((C151931 * C152071 + 2 * C152065) * ae) / C151933 +
                          C152059;
    const double C74253 = C152071 / C151975 +
                          ((C151931 * C152059 + 2 * C152060) * ae) / C151933 +
                          (-2 * C151949) / C152083;
    const double C153017 = ae * C153016;
    const double C29313 = (6 * C152825 + C152162 * C153016 +
                           (5 * C152812 + C152162 * C153002) * ae) /
                          C151933;
    const double C29857 = (C152354 * C153016) / C151933;
    const double C46271 = C46267 + C37410;
    const double C132752 = C132748 + C76766;
    const double C83607 = C83586 + C83587;
    const double C83606 = C83583 + C83584;
    const double C83601 = C83568 + C83569;
    const double C83598 = C83559 + C83560;
    const double C83913 = C83889 + C83890;
    const double C83910 = C83880 + C83881;
    const double C83909 = C83871 + C83872;
    const double C83906 = C83862 + C83863;
    const double C84215 = C84191 + C84192;
    const double C84212 = C84182 + C84183;
    const double C84211 = C84173 + C84174;
    const double C84208 = C84164 + C84165;
    const double C84471 = C84461 + C83898;
    const double C84709 = C84699 + C84200;
    const double C85035 = C85020 + C85021;
    const double C85032 = C85011 + C85012;
    const double C93427 = C93421 + C86381;
    const double C93758 = C93742 + C86972;
    const double C93755 = C93738 + C84179;
    const double C93748 = C93726 + C84178;
    const double C94765 = C94754 + C85646;
    const double C94761 = C94747 + C85008;
    const double C95573 = C95561 + C85649;
    const double C96560 = C96548 + C86384;
    const double C97355 = C97343 + C86975;
    const double C149845 = C149835 + C95572;
    const double C150591 = C150582 + C96559;
    const double C151193 = C151183 + C97354;
    const double C34932 = C34895 * C139;
    const double C34929 = C34895 * C138;
    const double C34908 = C34895 * C137;
    const double C35198 = C34895 * C331;
    const double C35187 = C34895 * C328;
    const double C35456 = C34895 * C544;
    const double C35445 = C34895 * C541;
    const double C35694 = C34895 * C327;
    const double C35912 = C34895 * C540;
    const double C36198 = C34895 * C1058;
    const double C44368 = C34895 * C543;
    const double C44354 = C34895 * C542;
    const double C45040 = C34895 * C1057;
    const double C45582 = C34895 * C1461;
    const double C46252 = C34895 * C1892;
    const double C46794 = C34895 * C2244;
    const double C34935 = C34897 * C326;
    const double C34926 = C34897 * C327;
    const double C34911 = C34897 * C328;
    const double C35201 = C34897 * C1318;
    const double C35184 = C34897 * C331;
    const double C35459 = C34897 * C1460;
    const double C35442 = C34897 * C1058;
    const double C35696 = C34897 * C332;
    const double C35914 = C34897 * C1059;
    const double C36201 = C34897 * C1891;
    const double C44366 = C34897 * C1461;
    const double C44356 = C34897 * C1057;
    const double C45042 = C34897 * C1892;
    const double C45584 = C34897 * C3441;
    const double C46254 = C34897 * C4303;
    const double C46796 = C34897 * C6306;
    const double C74288 = C74251 * C139;
    const double C74285 = C74251 * C138;
    const double C74264 = C74251 * C137;
    const double C74554 = C74251 * C331;
    const double C74543 = C74251 * C328;
    const double C74812 = C74251 * C544;
    const double C74801 = C74251 * C541;
    const double C75050 = C74251 * C327;
    const double C75268 = C74251 * C540;
    const double C75554 = C74251 * C1058;
    const double C130849 = C74251 * C543;
    const double C130835 = C74251 * C542;
    const double C131521 = C74251 * C1057;
    const double C132063 = C74251 * C1461;
    const double C132733 = C74251 * C1892;
    const double C133275 = C74251 * C2244;
    const double C74291 = C74253 * C326;
    const double C74282 = C74253 * C327;
    const double C74267 = C74253 * C328;
    const double C74557 = C74253 * C1318;
    const double C74540 = C74253 * C331;
    const double C74815 = C74253 * C1460;
    const double C74798 = C74253 * C1058;
    const double C75052 = C74253 * C332;
    const double C75270 = C74253 * C1059;
    const double C75557 = C74253 * C1891;
    const double C130847 = C74253 * C1461;
    const double C130837 = C74253 * C1057;
    const double C131523 = C74253 * C1892;
    const double C132065 = C74253 * C3441;
    const double C132735 = C74253 * C4303;
    const double C133277 = C74253 * C6306;
    const double C29314 =
        (6 * (4 * C152814 + C152823 + C152823 + C152162 * C153003) + C153017 +
         C153017 +
         C152162 *
             (5 * C153003 + C153014 + C153014 +
              C152162 *
                  (4 * C152996 + C153010 + C153010 +
                   C152162 *
                       (3 * C152988 + C153006 + C153006 +
                        C152162 *
                            (2 * C152980 + C152995 + C152995 +
                             C152162 *
                                 (C152220 + C152984 + C152984 +
                                  C152162 * (2 * ae * C152318 +
                                             C152162 *
                                                 (C152214 * C152215 +
                                                  C152166 * bs[9] *
                                                      std::pow(C152164, 9)) *
                                                 C152165))))))) /
        C151940;
    const double C29316 = C28359 * C29313;
    const double C29860 = C28359 * C29857;
    const double C45384 = C34902 * C29857;
    const double C131865 = C74258 * C29857;
    const double C46275 = C46271 + C46259;
    const double C132756 = C132752 + C132740;
    const double C83619 = C83607 + C83587;
    const double C83618 = C83606 + C83584;
    const double C83613 = C83601 + C83569;
    const double C83610 = C83598 + C83560;
    const double C83925 = C83913 + C83890;
    const double C83922 = C83910 + C83881;
    const double C83921 = C83909 + C83872;
    const double C83918 = C83906 + C83863;
    const double C84227 = C84215 + C84192;
    const double C84224 = C84212 + C84183;
    const double C84223 = C84211 + C84174;
    const double C84220 = C84208 + C84165;
    const double C84474 = C84471 + C83898;
    const double C84712 = C84709 + C84200;
    const double C85041 = C85035 + C85021;
    const double C85038 = C85032 + C85012;
    const double C93430 = C93427 + C86381;
    const double C93767 = C93758 + C86972;
    const double C93766 = C93755 + C84179;
    const double C93761 = C93748 + C84178;
    const double C94772 = C94765 + C85646;
    const double C94769 = C94761 + C85008;
    const double C95576 = C95573 + C85649;
    const double C96563 = C96560 + C86384;
    const double C97358 = C97355 + C86975;
    const double C149849 = C149845 + C95572;
    const double C150594 = C150591 + C96559;
    const double C151197 = C151193 + C97354;
    const double C34956 = C34932 + C34933;
    const double C34955 = C34929 + C34930;
    const double C34948 = C34908 + C34909;
    const double C35222 = C35198 + C35199;
    const double C35221 = C35187 + C35188;
    const double C35480 = C35456 + C35457;
    const double C35479 = C35445 + C35446;
    const double C35706 = C35694 + C35210;
    const double C35924 = C35912 + C35468;
    const double C36214 = C36198 + C36199;
    const double C44377 = C44368 + C35452;
    const double C44370 = C44354 + C35451;
    const double C45048 = C45040 + C36194;
    const double C45594 = C45582 + C36759;
    const double C46264 = C46252 + C37413;
    const double C46806 = C46794 + C37939;
    const double C34957 = C34935 + C34936;
    const double C34954 = C34926 + C34927;
    const double C34949 = C34911 + C34912;
    const double C35223 = C35201 + C35202;
    const double C35220 = C35184 + C35185;
    const double C35481 = C35459 + C35460;
    const double C35478 = C35442 + C35443;
    const double C35707 = C35696 + C35211;
    const double C35925 = C35914 + C35469;
    const double C36215 = C36201 + C36202;
    const double C44376 = C44366 + C35453;
    const double C44371 = C44356 + C35450;
    const double C45049 = C45042 + C36195;
    const double C45595 = C45584 + C36758;
    const double C46265 = C46254 + C37412;
    const double C46807 = C46796 + C37938;
    const double C74312 = C74288 + C74289;
    const double C74311 = C74285 + C74286;
    const double C74304 = C74264 + C74265;
    const double C74578 = C74554 + C74555;
    const double C74577 = C74543 + C74544;
    const double C74836 = C74812 + C74813;
    const double C74835 = C74801 + C74802;
    const double C75062 = C75050 + C74566;
    const double C75280 = C75268 + C74824;
    const double C75570 = C75554 + C75555;
    const double C130858 = C130849 + C74808;
    const double C130851 = C130835 + C74807;
    const double C131529 = C131521 + C75550;
    const double C132075 = C132063 + C76115;
    const double C132745 = C132733 + C76769;
    const double C133287 = C133275 + C77295;
    const double C74313 = C74291 + C74292;
    const double C74310 = C74282 + C74283;
    const double C74305 = C74267 + C74268;
    const double C74579 = C74557 + C74558;
    const double C74576 = C74540 + C74541;
    const double C74837 = C74815 + C74816;
    const double C74834 = C74798 + C74799;
    const double C75063 = C75052 + C74567;
    const double C75281 = C75270 + C74825;
    const double C75571 = C75557 + C75558;
    const double C130857 = C130847 + C74809;
    const double C130852 = C130837 + C74806;
    const double C131530 = C131523 + C75551;
    const double C132076 = C132065 + C76114;
    const double C132746 = C132735 + C76768;
    const double C133288 = C133277 + C77294;
    const double C83631 = C83619 + C83588;
    const double C83630 = C83618 + C83585;
    const double C83625 = C83613 + C83570;
    const double C83622 = C83610 + C83561;
    const double C83937 = C83925 + C83891;
    const double C83934 = C83922 + C83882;
    const double C83933 = C83921 + C83873;
    const double C83930 = C83918 + C83864;
    const double C84239 = C84227 + C84193;
    const double C84236 = C84224 + C84184;
    const double C84235 = C84223 + C84175;
    const double C84232 = C84220 + C84166;
    const double C84477 = C84474 + C84462;
    const double C84715 = C84712 + C84700;
    const double C85047 = C85041 + C85022;
    const double C85044 = C85038 + C85013;
    const double C93433 = C93430 + C93422;
    const double C93776 = C93767 + C93743;
    const double C93775 = C93766 + C93739;
    const double C93770 = C93761 + C93727;
    const double C94778 = C94772 + C94755;
    const double C94775 = C94769 + C94748;
    const double C95579 = C95576 + C95562;
    const double C96566 = C96563 + C96549;
    const double C97361 = C97358 + C97344;
    const double C149853 = C149849 + C149836;
    const double C150597 = C150594 + C150583;
    const double C151200 = C151197 + C151184;
    const double C34968 = C34956 + C34933;
    const double C34967 = C34955 + C34930;
    const double C34960 = C34948 + C34909;
    const double C35230 = C35222 + C35199;
    const double C35229 = C35221 + C35188;
    const double C35488 = C35480 + C35457;
    const double C35487 = C35479 + C35446;
    const double C35710 = C35706 + C35210;
    const double C35928 = C35924 + C35468;
    const double C36218 = C36214 + C36199;
    const double C44385 = C44377 + C35452;
    const double C44378 = C44370 + C35451;
    const double C45052 = C45048 + C36194;
    const double C45598 = C45594 + C36759;
    const double C46268 = C46264 + C37413;
    const double C46810 = C46806 + C37939;
    const double C34969 = C34957 + C34936;
    const double C34966 = C34954 + C34927;
    const double C34961 = C34949 + C34912;
    const double C35231 = C35223 + C35202;
    const double C35228 = C35220 + C35185;
    const double C35489 = C35481 + C35460;
    const double C35486 = C35478 + C35443;
    const double C35711 = C35707 + C35211;
    const double C35929 = C35925 + C35469;
    const double C36219 = C36215 + C36202;
    const double C44384 = C44376 + C35453;
    const double C44379 = C44371 + C35450;
    const double C45053 = C45049 + C36195;
    const double C45599 = C45595 + C36758;
    const double C46269 = C46265 + C37412;
    const double C46811 = C46807 + C37938;
    const double C74324 = C74312 + C74289;
    const double C74323 = C74311 + C74286;
    const double C74316 = C74304 + C74265;
    const double C74586 = C74578 + C74555;
    const double C74585 = C74577 + C74544;
    const double C74844 = C74836 + C74813;
    const double C74843 = C74835 + C74802;
    const double C75066 = C75062 + C74566;
    const double C75284 = C75280 + C74824;
    const double C75574 = C75570 + C75555;
    const double C130866 = C130858 + C74808;
    const double C130859 = C130851 + C74807;
    const double C131533 = C131529 + C75550;
    const double C132079 = C132075 + C76115;
    const double C132749 = C132745 + C76769;
    const double C133291 = C133287 + C77295;
    const double C74325 = C74313 + C74292;
    const double C74322 = C74310 + C74283;
    const double C74317 = C74305 + C74268;
    const double C74587 = C74579 + C74558;
    const double C74584 = C74576 + C74541;
    const double C74845 = C74837 + C74816;
    const double C74842 = C74834 + C74799;
    const double C75067 = C75063 + C74567;
    const double C75285 = C75281 + C74825;
    const double C75575 = C75571 + C75558;
    const double C130865 = C130857 + C74809;
    const double C130860 = C130852 + C74806;
    const double C131534 = C131530 + C75551;
    const double C132080 = C132076 + C76114;
    const double C132750 = C132746 + C76768;
    const double C133292 = C133288 + C77294;
    const double C83635 = C83629 + C83630;
    const double C83634 = C83625 + C83626;
    const double C84460 = C83929 + C83930;
    const double C93741 = C84236 + C84237;
    const double C93733 = C84237 + C84236;
    const double C93740 = C84234 + C84235;
    const double C93732 = C84235 + C84234;
    const double C84698 = C84231 + C84232;
    const double C94359 = C84232 + C84231;
    const double C94760 = C85045 + C85044;
    const double C94753 = C85044 + C85045;
    const double C148520 = C93775 + C93774;
    const double C149841 = C95580 + C95579;
    const double C151182 = C97362 + C97361;
    const double C34980 = C34968 + C34934;
    const double C34979 = C34967 + C34931;
    const double C34972 = C34960 + C34910;
    const double C35238 = C35230 + C35200;
    const double C35237 = C35229 + C35189;
    const double C35496 = C35488 + C35458;
    const double C35495 = C35487 + C35447;
    const double C35714 = C35710 + C35695;
    const double C35932 = C35928 + C35913;
    const double C36222 = C36218 + C36200;
    const double C44393 = C44385 + C44369;
    const double C44386 = C44378 + C44355;
    const double C45056 = C45052 + C45041;
    const double C45602 = C45598 + C45583;
    const double C46272 = C46268 + C46253;
    const double C46814 = C46810 + C46795;
    const double C34981 = C34969 + C34937;
    const double C34978 = C34966 + C34928;
    const double C34973 = C34961 + C34913;
    const double C35239 = C35231 + C35203;
    const double C35236 = C35228 + C35186;
    const double C35497 = C35489 + C35461;
    const double C35494 = C35486 + C35444;
    const double C35715 = C35711 + C35697;
    const double C35933 = C35929 + C35915;
    const double C36223 = C36219 + C36203;
    const double C44392 = C44384 + C44367;
    const double C44387 = C44379 + C44357;
    const double C45057 = C45053 + C45043;
    const double C45603 = C45599 + C45585;
    const double C46273 = C46269 + C46255;
    const double C46815 = C46811 + C46797;
    const double C74336 = C74324 + C74290;
    const double C74335 = C74323 + C74287;
    const double C74328 = C74316 + C74266;
    const double C74594 = C74586 + C74556;
    const double C74593 = C74585 + C74545;
    const double C74852 = C74844 + C74814;
    const double C74851 = C74843 + C74803;
    const double C75070 = C75066 + C75051;
    const double C75288 = C75284 + C75269;
    const double C75578 = C75574 + C75556;
    const double C130874 = C130866 + C130850;
    const double C130867 = C130859 + C130836;
    const double C131537 = C131533 + C131522;
    const double C132083 = C132079 + C132064;
    const double C132753 = C132749 + C132734;
    const double C133295 = C133291 + C133276;
    const double C74337 = C74325 + C74293;
    const double C74334 = C74322 + C74284;
    const double C74329 = C74317 + C74269;
    const double C74595 = C74587 + C74559;
    const double C74592 = C74584 + C74542;
    const double C74853 = C74845 + C74817;
    const double C74850 = C74842 + C74800;
    const double C75071 = C75067 + C75053;
    const double C75289 = C75285 + C75271;
    const double C75579 = C75575 + C75559;
    const double C130873 = C130865 + C130848;
    const double C130868 = C130860 + C130838;
    const double C131538 = C131534 + C131524;
    const double C132084 = C132080 + C132066;
    const double C132754 = C132750 + C132736;
    const double C133296 = C133292 + C133278;
    const double C83637 = C83628 + C83635;
    const double C83636 = C83634 + C83627;
    const double C84470 = C83928 + C84460;
    const double C93757 = C93741 + C84238;
    const double C93752 = C84238 + C93733;
    const double C93756 = C84233 + C93740;
    const double C93751 = C93732 + C84233;
    const double C84708 = C84230 + C84698;
    const double C94360 = C94359 + C84230;
    const double C94768 = C85046 + C94760;
    const double C94764 = C94753 + C85046;
    const double C148522 = C148520 + C93773;
    const double C149848 = C95581 + C149841;
    const double C151192 = C97363 + C151182;
    const double C148521 = C93752 * C153454;
    const double C148523 = C148522 * C153454;
    const double C149852 = C149848 * C153454;
    const double C151196 = C151192 * C153454;
    d2ee[0] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                ((((C152071 * C136 + C83556 + C83556 + C153667 * C152 +
                    C152059 * C329 + C83557 + C83557 + C153674 * C353 +
                    C83553 * C330 + C83558 + C83558 + C83545 * C354) *
                       C153459 +
                   (C83622 + C83623 + C83624) * C153467 + C83636 * C83548) *
                      C153626 * C153527 * C153837 -
                  (C84470 * C83548 + (C83931 + C83932 + C83933) * C153467 +
                   (C83553 * C1319 + C83874 + C83874 + C83545 * C1329 +
                    C152059 * C330 + C83875 + C83875 + C153674 * C354 +
                    C152071 * C329 + C83876 + C83876 + C153667 * C353) *
                       C153459) *
                      C153626 * C153527 * C153563) *
                     C153906 +
                 (((C83933 + C83932 + C83931) * C153459 +
                   (C83930 + C83929 + C83928) * C153467 +
                   (C84477 + C84478 + C84479) * C83548) *
                      C153626 * C153527 * C153563 -
                  (C83637 * C83548 + (C83627 + C83626 + C83625) * C153467 +
                   (C83624 + C83623 + C83622) * C153459) *
                      C153626 * C153527 * C153837) *
                     C153907 +
                 ((C83636 * C153459 + (C83630 + C83629 + C83628) * C153467 +
                   (C83631 + C83632 + C83633) * C83548) *
                      C153626 * C153527 * C153837 -
                  ((C83553 * C1315 + C84467 + C84467 + C83545 * C1325 +
                    C152059 * C334 + C84468 + C84468 + C153674 * C358 +
                    C152071 * C325 + C84469 + C84469 + C153667 * C349) *
                       C83548 +
                   (C84479 + C84478 + C84477) * C153467 + C84470 * C153459) *
                      C153626 * C153527 * C153563) *
                     C752)) /
               (p * q * std::sqrt(p + q));
    d2ee[1] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                (((((C152071 * C136 + C83556 + C83556 + C153667 * C152 +
                     C152059 * C329 + C83557 + C83557 + C153674 * C353 +
                     C83553 * C330 + C83558 + C83558 + C83545 * C354) *
                        C153459 +
                    (C83622 + C83623 + C83624) * C153467 + C83636 * C83548) *
                       C153626 * C153838 -
                   (C84708 * C83548 + (C84233 + C84234 + C84235) * C153467 +
                    (C83553 * C1892 + C84176 + C84176 + C83545 * C1902 +
                     C152059 * C1057 + C84177 + C84177 + C153674 * C1069 +
                     C152071 * C542 + C84178 + C84178 + C153667 * C566) *
                        C153459) *
                       C153626 * C153591) *
                      C153837 +
                  (((C152071 * C1057 + C85008 + C85008 + C153667 * C1069 +
                     C152059 * C1892 + C85009 + C85009 + C153674 * C1902 +
                     C83553 * C4303 + C85010 + C85010 + C83545 * C4311) *
                        C153459 +
                    (C85044 + C85045 + C85046) * C153467 +
                    (C85047 + C85048 + C85049) * C83548) *
                       C153626 * C153591 -
                   (C84470 * C83548 + (C83931 + C83932 + C83933) * C153467 +
                    (C83553 * C1319 + C83874 + C83874 + C83545 * C1329 +
                     C152059 * C330 + C83875 + C83875 + C153674 * C354 +
                     C152071 * C329 + C83876 + C83876 + C153667 * C353) *
                        C153459) *
                       C153626 * C153838) *
                      C153563) *
                     C323 +
                 ((((C84235 + C84234 + C84233) * C153459 +
                    (C84232 + C84231 + C84230) * C153467 +
                    (C84715 + C84716 + C84717) * C83548) *
                       C153626 * C153591 -
                   (C83637 * C83548 + (C83627 + C83626 + C83625) * C153467 +
                    (C83624 + C83623 + C83622) * C153459) *
                       C153626 * C153838) *
                      C153837 +
                  (((C83933 + C83932 + C83931) * C153459 +
                    (C83930 + C83929 + C83928) * C153467 +
                    (C84477 + C84478 + C84479) * C83548) *
                       C153626 * C153838 -
                   ((C83553 * C4306 + C85029 + C85029 + C83545 * C4314 +
                     C152059 * C1889 + C85030 + C85030 + C153674 * C1899 +
                     C152071 * C1060 + C85031 + C85031 + C153667 * C1072) *
                        C83548 +
                    (C85049 + C85048 + C85047) * C153467 +
                    (C85046 + C85045 + C85044) * C153459) *
                       C153626 * C153591) *
                      C153563) *
                     C153498)) /
               (p * q * std::sqrt(p + q));
    d2ee[2] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                ((((C152071 * C136 + C83556 + C83556 + C153667 * C152 +
                    C152059 * C329 + C83557 + C83557 + C153674 * C353 +
                    C83553 * C330 + C83558 + C83558 + C83545 * C354) *
                       C153459 +
                   (C83622 + C83623 + C83624) * C153467 + C83636 * C83548) *
                      C153626 * C153527 * C320 -
                  ((C83928 + C83929 + C83930) * C83548 +
                   (C83931 + C83932 + C83933) * C153467 +
                   (C83553 * C1319 + C83874 + C83874 + C83545 * C1329 +
                    C152059 * C330 + C83875 + C83875 + C153674 * C354 +
                    C152071 * C329 + C83876 + C83876 + C153667 * C353) *
                       C153459) *
                      C153626 * C153527 * C321 +
                  ((C152071 * C330 + C83877 + C83877 + C153667 * C354 +
                    C152059 * C1319 + C83878 + C83878 + C153674 * C1329 +
                    C83553 * C3127 + C83879 + C83879 + C83545 * C3135) *
                       C153459 +
                   (C83934 + C83935 + C83936) * C153467 +
                   (C83937 + C83938 + C83939) * C83548) *
                      C153626 * C153527 * C322) *
                     C323 +
                 (((C83933 + C83932 + C83931) * C153459 +
                   (C83930 + C83929 + C83928) * C153467 +
                   (C152071 * C326 + C83898 + C83898 + C153667 * C350 +
                    C152059 * C333 + C83899 + C83899 + C153674 * C357 +
                    C83553 * C1316 + C83900 + C83900 + C83545 * C1326) *
                       C83548) *
                      C153626 * C153527 * C321 -
                  (C83637 * C83548 + (C83627 + C83626 + C83625) * C153467 +
                   (C83624 + C83623 + C83622) * C153459) *
                      C153626 * C153527 * C320 -
                  ((C83553 * C3130 + C83901 + C83901 + C83545 * C3138 +
                    C152059 * C1316 + C83902 + C83902 + C153674 * C1326 +
                    C152071 * C333 + C83903 + C83903 + C153667 * C357) *
                       C83548 +
                   (C83939 + C83938 + C83937) * C153467 +
                   (C83936 + C83935 + C83934) * C153459) *
                      C153626 * C153527 * C322) *
                     C153498)) /
                   (p * q * std::sqrt(p + q)) -
               (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                (((C152071 * C136 + C83556 + C83556 + C153667 * C152 +
                   C152059 * C329 + C83557 + C83557 + C153674 * C353 +
                   C83553 * C330 + C83558 + C83558 + C83545 * C354) *
                      C153459 +
                  (C83622 + C83623 + C83624) * C153467 + C83636 * C83548) *
                     C153626 * C153527 * C153511 * C130 -
                 (C83637 * C83548 + (C83627 + C83626 + C83625) * C153467 +
                  (C83624 + C83623 + C83622) * C153459) *
                     C153626 * C153527 * C153511 * C131 +
                 (C83636 * C153459 + (C83630 + C83629 + C83628) * C153467 +
                  (C83631 + C83632 + C83633) * C83548) *
                     C153626 * C153527 * C153511 * C132 -
                 ((C83553 * C336 + C83595 + C83595 + C83545 * C360 +
                   C152059 * C335 + C83596 + C83596 + C153674 * C359 +
                   C152071 * C141 + C83597 + C83597 + C153667 * C157) *
                      C83548 +
                  (C83633 + C83632 + C83631) * C153467 + C83637 * C153459) *
                     C153626 * C153527 * C153511 * C133)) /
                   (p * q * std::sqrt(p + q)) +
               (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                ((((C152071 * C136 + C83556 + C83556 + C153667 * C152 +
                    C152059 * C329 + C83557 + C83557 + C153674 * C353 +
                    C83553 * C330 + C83558 + C83558 + C83545 * C354) *
                       C153459 +
                   (C83622 + C83623 + C83624) * C153467 + C83636 * C83548) *
                      C153626 * C535 -
                  ((C84230 + C84231 + C84232) * C83548 +
                   (C84233 + C84234 + C84235) * C153467 +
                   (C83553 * C1892 + C84176 + C84176 + C83545 * C1902 +
                    C152059 * C1057 + C84177 + C84177 + C153674 * C1069 +
                    C152071 * C542 + C84178 + C84178 + C153667 * C566) *
                       C153459) *
                      C153626 * C536 +
                  ((C152071 * C543 + C84179 + C84179 + C153667 * C567 +
                    C152059 * C1461 + C84180 + C84180 + C153674 * C1471 +
                    C83553 * C3441 + C84181 + C84181 + C83545 * C3449) *
                       C153459 +
                   (C84236 + C84237 + C84238) * C153467 +
                   (C84239 + C84240 + C84241) * C83548) *
                      C153626 * C537) *
                     C153511 * C323 +
                 (((C84235 + C84234 + C84233) * C153459 +
                   (C84232 + C84231 + C84230) * C153467 +
                   (C152071 * C539 + C84200 + C84200 + C153667 * C563 +
                    C152059 * C1060 + C84201 + C84201 + C153674 * C1072 +
                    C83553 * C1889 + C84202 + C84202 + C83545 * C1899) *
                       C83548) *
                      C153626 * C536 -
                  (C83637 * C83548 + (C83627 + C83626 + C83625) * C153467 +
                   (C83624 + C83623 + C83622) * C153459) *
                      C153626 * C535 -
                  ((C83553 * C3444 + C84203 + C84203 + C83545 * C3452 +
                    C152059 * C1458 + C84204 + C84204 + C153674 * C1468 +
                    C152071 * C546 + C84205 + C84205 + C153667 * C570) *
                       C83548 +
                   (C84241 + C84240 + C84239) * C153467 +
                   (C84238 + C84237 + C84236) * C153459) *
                      C153626 * C537) *
                     C153511 * C153498)) /
                   (p * q * std::sqrt(p + q));
    d2ee[3] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                ((((C152071 * C136 + C83556 + C83556 + C153667 * C152 +
                    C152059 * C329 + C83557 + C83557 + C153674 * C353 +
                    C83553 * C330 + C83558 + C83558 + C83545 * C354) *
                       C153459 +
                   (C83622 + C83623 + C83624) * C153467 + C83636 * C83548) *
                      C153626 * C153838 -
                  (C84708 * C83548 + (C84233 + C84234 + C84235) * C153467 +
                   (C83553 * C1892 + C84176 + C84176 + C83545 * C1902 +
                    C152059 * C1057 + C84177 + C84177 + C153674 * C1069 +
                    C152071 * C542 + C84178 + C84178 + C153667 * C566) *
                       C153459) *
                      C153626 * C153591) *
                     C153511 * C153906 +
                 (((C84235 + C84234 + C84233) * C153459 +
                   (C84232 + C84231 + C84230) * C153467 +
                   (C84715 + C84716 + C84717) * C83548) *
                      C153626 * C153591 -
                  (C83637 * C83548 + (C83627 + C83626 + C83625) * C153467 +
                   (C83624 + C83623 + C83622) * C153459) *
                      C153626 * C153838) *
                     C153511 * C153907 +
                 ((C83636 * C153459 + (C83630 + C83629 + C83628) * C153467 +
                   (C83631 + C83632 + C83633) * C83548) *
                      C153626 * C153838 -
                  ((C83553 * C1888 + C84705 + C84705 + C83545 * C1898 +
                    C152059 * C1061 + C84706 + C84706 + C153674 * C1073 +
                    C152071 * C538 + C84707 + C84707 + C153667 * C562) *
                       C83548 +
                   (C84717 + C84716 + C84715) * C153467 + C84708 * C153459) *
                      C153626 * C153591) *
                     C153511 * C752)) /
               (p * q * std::sqrt(p + q));
    d2ee[4] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                (((C152071 * C136 + C83556 + C83556 + C153667 * C152 +
                   C152059 * C329 + C83557 + C83557 + C153674 * C353 +
                   C83553 * C330 + C83558 + C83558 + C83545 * C354) *
                      C153459 +
                  (C83622 + C83623 + C83624) * C153467 + C83636 * C83548) *
                     C153626 * C153527 * C153511 * C130 -
                 (C83637 * C83548 + (C83627 + C83626 + C83625) * C153467 +
                  (C83624 + C83623 + C83622) * C153459) *
                     C153626 * C153527 * C153511 * C131 +
                 (C83636 * C153459 + (C83630 + C83629 + C83628) * C153467 +
                  (C83631 + C83632 + C83633) * C83548) *
                     C153626 * C153527 * C153511 * C132 -
                 ((C83553 * C336 + C83595 + C83595 + C83545 * C360 +
                   C152059 * C335 + C83596 + C83596 + C153674 * C359 +
                   C152071 * C141 + C83597 + C83597 + C153667 * C157) *
                      C83548 +
                  (C83633 + C83632 + C83631) * C153467 + C83637 * C153459) *
                     C153626 * C153527 * C153511 * C133)) /
                   (p * q * std::sqrt(p + q)) -
               (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                ((((C152071 * C136 + C83556 + C83556 + C153667 * C152 +
                    C152059 * C329 + C83557 + C83557 + C153674 * C353 +
                    C83553 * C330 + C83558 + C83558 + C83545 * C354) *
                       C153459 +
                   (C83622 + C83623 + C83624) * C153467 + C83636 * C83548) *
                      C153626 * C153527 * C320 -
                  ((C83928 + C83929 + C83930) * C83548 +
                   (C83931 + C83932 + C83933) * C153467 +
                   (C83553 * C1319 + C83874 + C83874 + C83545 * C1329 +
                    C152059 * C330 + C83875 + C83875 + C153674 * C354 +
                    C152071 * C329 + C83876 + C83876 + C153667 * C353) *
                       C153459) *
                      C153626 * C153527 * C321 +
                  ((C152071 * C330 + C83877 + C83877 + C153667 * C354 +
                    C152059 * C1319 + C83878 + C83878 + C153674 * C1329 +
                    C83553 * C3127 + C83879 + C83879 + C83545 * C3135) *
                       C153459 +
                   (C83934 + C83935 + C83936) * C153467 +
                   (C83937 + C83938 + C83939) * C83548) *
                      C153626 * C153527 * C322) *
                     C323 +
                 (((C83933 + C83932 + C83931) * C153459 +
                   (C83930 + C83929 + C83928) * C153467 +
                   (C152071 * C326 + C83898 + C83898 + C153667 * C350 +
                    C152059 * C333 + C83899 + C83899 + C153674 * C357 +
                    C83553 * C1316 + C83900 + C83900 + C83545 * C1326) *
                       C83548) *
                      C153626 * C153527 * C321 -
                  (C83637 * C83548 + (C83627 + C83626 + C83625) * C153467 +
                   (C83624 + C83623 + C83622) * C153459) *
                      C153626 * C153527 * C320 -
                  ((C83553 * C3130 + C83901 + C83901 + C83545 * C3138 +
                    C152059 * C1316 + C83902 + C83902 + C153674 * C1326 +
                    C152071 * C333 + C83903 + C83903 + C153667 * C357) *
                       C83548 +
                   (C83939 + C83938 + C83937) * C153467 +
                   (C83936 + C83935 + C83934) * C153459) *
                      C153626 * C153527 * C322) *
                     C153498)) /
                   (p * q * std::sqrt(p + q));
    d2ee[5] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                ((((C152071 * C136 + C83556 + C83556 + C153667 * C152 +
                    C152059 * C329 + C83557 + C83557 + C153674 * C353 +
                    C83553 * C330 + C83558 + C83558 + C83545 * C354) *
                       C153459 +
                   (C83622 + C83623 + C83624) * C153467 + C83636 * C83548) *
                      C153626 * C153527 * C153908 -
                  (C84470 * C83548 + (C83931 + C83932 + C83933) * C153467 +
                   (C83553 * C1319 + C83874 + C83874 + C83545 * C1329 +
                    C152059 * C330 + C83875 + C83875 + C153674 * C354 +
                    C152071 * C329 + C83876 + C83876 + C153667 * C353) *
                       C153459) *
                      C153626 * C153527 * C153909 +
                  ((C152071 * C330 + C83877 + C83877 + C153667 * C354 +
                    C152059 * C1319 + C83878 + C83878 + C153674 * C1329 +
                    C83553 * C3127 + C83879 + C83879 + C83545 * C3135) *
                       C153459 +
                   (C83934 + C83935 + C83936) * C153467 +
                   (C83937 + C83938 + C83939) * C83548) *
                      C153626 * C153527 * C1601) *
                     C153829 +
                 (((C83933 + C83932 + C83931) * C153459 +
                   (C83930 + C83929 + C83928) * C153467 +
                   (C84477 + C84478 + C84479) * C83548) *
                      C153626 * C153527 * C153909 -
                  (C83637 * C83548 + (C83627 + C83626 + C83625) * C153467 +
                   (C83624 + C83623 + C83622) * C153459) *
                      C153626 * C153527 * C153908 -
                  ((C83553 * C3130 + C83901 + C83901 + C83545 * C3138 +
                    C152059 * C1316 + C83902 + C83902 + C153674 * C1326 +
                    C152071 * C333 + C83903 + C83903 + C153667 * C357) *
                       C83548 +
                   (C83939 + C83938 + C83937) * C153467 +
                   (C83936 + C83935 + C83934) * C153459) *
                      C153626 * C153527 * C1601) *
                     C153498)) /
               (p * q * std::sqrt(p + q));
    d2ee[6] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                ((((C152071 * C136 + C83556 + C83556 + C153667 * C152 +
                    C152059 * C329 + C83557 + C83557 + C153674 * C353 +
                    C83553 * C330 + C83558 + C83558 + C83545 * C354) *
                       C153459 +
                   (C83622 + C83623 + C83624) * C153467 + C83636 * C83548) *
                      C153626 * C153838 -
                  (C84708 * C83548 + (C84233 + C84234 + C84235) * C153467 +
                   (C83553 * C1892 + C84176 + C84176 + C83545 * C1902 +
                    C152059 * C1057 + C84177 + C84177 + C153674 * C1069 +
                    C152071 * C542 + C84178 + C84178 + C153667 * C566) *
                       C153459) *
                      C153626 * C153591) *
                     C153908 +
                 (((C152071 * C1057 + C85008 + C85008 + C153667 * C1069 +
                    C152059 * C1892 + C85009 + C85009 + C153674 * C1902 +
                    C83553 * C4303 + C85010 + C85010 + C83545 * C4311) *
                       C153459 +
                   (C85044 + C85045 + C85046) * C153467 +
                   (C85047 + C85048 + C85049) * C83548) *
                      C153626 * C153591 -
                  (C84470 * C83548 + (C83931 + C83932 + C83933) * C153467 +
                   (C83553 * C1319 + C83874 + C83874 + C83545 * C1329 +
                    C152059 * C330 + C83875 + C83875 + C153674 * C354 +
                    C152071 * C329 + C83876 + C83876 + C153667 * C353) *
                       C153459) *
                      C153626 * C153838) *
                     C153909 +
                 (((C152071 * C330 + C83877 + C83877 + C153667 * C354 +
                    C152059 * C1319 + C83878 + C83878 + C153674 * C1329 +
                    C83553 * C3127 + C83879 + C83879 + C83545 * C3135) *
                       C153459 +
                   (C83934 + C83935 + C83936) * C153467 +
                   (C83937 + C83938 + C83939) * C83548) *
                      C153626 * C153838 -
                  ((C83553 * C5701 + C86376 + C86376 + C83545 * C5707 +
                    C152059 * C4305 + C86377 + C86377 + C153674 * C4313 +
                    C152071 * C1890 + C86378 + C86378 + C153667 * C1900) *
                       C83548 +
                   (C83553 * C5702 + C86379 + C86379 + C83545 * C5708 +
                    C152059 * C4304 + C86380 + C86380 + C153674 * C4312 +
                    C152071 * C1891 + C86381 + C86381 + C153667 * C1901) *
                       C153467 +
                   (C83553 * C5703 + C86382 + C86382 + C83545 * C5709 +
                    C152059 * C4303 + C86383 + C86383 + C153674 * C4311 +
                    C152071 * C1892 + C86384 + C86384 + C153667 * C1902) *
                       C153459) *
                      C153626 * C153591) *
                     C1601) *
                C153492) /
               (p * q * std::sqrt(p + q));
    d2ee[7] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                (((C152071 * C136 + C83556 + C83556 + C153667 * C152 +
                   C152059 * C329 + C83557 + C83557 + C153674 * C353 +
                   C83553 * C330 + C83558 + C83558 + C83545 * C354) *
                      C153459 +
                  (C83622 + C83623 + C83624) * C153467 + C83636 * C83548) *
                     C153626 * C153527 * C1310 -
                 (C84470 * C83548 + (C83931 + C83932 + C83933) * C153467 +
                  (C83553 * C1319 + C83874 + C83874 + C83545 * C1329 +
                   C152059 * C330 + C83875 + C83875 + C153674 * C354 +
                   C152071 * C329 + C83876 + C83876 + C153667 * C353) *
                      C153459) *
                     C153626 * C153527 * C1311 +
                 ((C152071 * C330 + C83877 + C83877 + C153667 * C354 +
                   C152059 * C1319 + C83878 + C83878 + C153674 * C1329 +
                   C83553 * C3127 + C83879 + C83879 + C83545 * C3135) *
                      C153459 +
                  (C83934 + C83935 + C83936) * C153467 +
                  (C83937 + C83938 + C83939) * C83548) *
                     C153626 * C153527 * C1312 -
                 ((C83553 * C4721 + C85414 + C85414 + C83545 * C4727 +
                   C152059 * C3129 + C85415 + C85415 + C153674 * C3137 +
                   C152071 * C1317 + C85416 + C85416 + C153667 * C1327) *
                      C83548 +
                  (C83553 * C4722 + C85417 + C85417 + C83545 * C4728 +
                   C152059 * C3128 + C85418 + C85418 + C153674 * C3136 +
                   C152071 * C1318 + C85419 + C85419 + C153667 * C1328) *
                      C153467 +
                  (C83553 * C4723 + C85420 + C85420 + C83545 * C4729 +
                   C152059 * C3127 + C85421 + C85421 + C153674 * C3135 +
                   C152071 * C1319 + C85422 + C85422 + C153667 * C1329) *
                      C153459) *
                     C153626 * C153527 * C1313) *
                C153492) /
                   (p * q * std::sqrt(p + q)) -
               (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                ((((C152071 * C136 + C83556 + C83556 + C153667 * C152 +
                    C152059 * C329 + C83557 + C83557 + C153674 * C353 +
                    C83553 * C330 + C83558 + C83558 + C83545 * C354) *
                       C153459 +
                   (C83622 + C83623 + C83624) * C153467 + C83636 * C83548) *
                      C153626 * C153527 * C1223 -
                  (C84470 * C83548 + (C83931 + C83932 + C83933) * C153467 +
                   (C83553 * C1319 + C83874 + C83874 + C83545 * C1329 +
                    C152059 * C330 + C83875 + C83875 + C153674 * C354 +
                    C152071 * C329 + C83876 + C83876 + C153667 * C353) *
                       C153459) *
                      C153626 * C153527 * C153563) *
                     C1225 +
                 (((C83933 + C83932 + C83931) * C153459 +
                   (C83930 + C83929 + C83928) * C153467 +
                   (C84477 + C84478 + C84479) * C83548) *
                      C153626 * C153527 * C153563 -
                  (C83637 * C83548 + (C83627 + C83626 + C83625) * C153467 +
                   (C83624 + C83623 + C83622) * C153459) *
                      C153626 * C153527 * C1223) *
                     C1226 +
                 ((C83636 * C153459 + (C83630 + C83629 + C83628) * C153467 +
                   (C83631 + C83632 + C83633) * C83548) *
                      C153626 * C153527 * C1223 -
                  ((C83553 * C1315 + C84467 + C84467 + C83545 * C1325 +
                    C152059 * C334 + C84468 + C84468 + C153674 * C358 +
                    C152071 * C325 + C84469 + C84469 + C153667 * C349) *
                       C83548 +
                   (C84479 + C84478 + C84477) * C153467 + C84470 * C153459) *
                      C153626 * C153527 * C153563) *
                     C1227)) /
                   (p * q * std::sqrt(p + q)) +
               (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                ((((C152071 * C136 + C83556 + C83556 + C153667 * C152 +
                    C152059 * C329 + C83557 + C83557 + C153674 * C353 +
                    C83553 * C330 + C83558 + C83558 + C83545 * C354) *
                       C153459 +
                   (C83622 + C83623 + C83624) * C153467 + C83636 * C83548) *
                      C153626 * C535 -
                  (C84708 * C83548 + (C84233 + C84234 + C84235) * C153467 +
                   (C83553 * C1892 + C84176 + C84176 + C83545 * C1902 +
                    C152059 * C1057 + C84177 + C84177 + C153674 * C1069 +
                    C152071 * C542 + C84178 + C84178 + C153667 * C566) *
                       C153459) *
                      C153626 * C536 +
                  ((C152071 * C543 + C84179 + C84179 + C153667 * C567 +
                    C152059 * C1461 + C84180 + C84180 + C153674 * C1471 +
                    C83553 * C3441 + C84181 + C84181 + C83545 * C3449) *
                       C153459 +
                   (C84236 + C84237 + C84238) * C153467 +
                   (C84239 + C84240 + C84241) * C83548) *
                      C153626 * C537) *
                     C1223 +
                 (((C152071 * C1057 + C85008 + C85008 + C153667 * C1069 +
                    C152059 * C1892 + C85009 + C85009 + C153674 * C1902 +
                    C83553 * C4303 + C85010 + C85010 + C83545 * C4311) *
                       C153459 +
                   (C85044 + C85045 + C85046) * C153467 +
                   (C85047 + C85048 + C85049) * C83548) *
                      C153626 * C536 -
                  (C84470 * C83548 + (C83931 + C83932 + C83933) * C153467 +
                   (C83553 * C1319 + C83874 + C83874 + C83545 * C1329 +
                    C152059 * C330 + C83875 + C83875 + C153674 * C354 +
                    C152071 * C329 + C83876 + C83876 + C153667 * C353) *
                       C153459) *
                      C153626 * C535 -
                  ((C83553 * C4957 + C85641 + C85641 + C83545 * C4963 +
                    C152059 * C3443 + C85642 + C85642 + C153674 * C3451 +
                    C152071 * C1459 + C85643 + C85643 + C153667 * C1469) *
                       C83548 +
                   (C83553 * C4958 + C85644 + C85644 + C83545 * C4964 +
                    C152059 * C3442 + C85645 + C85645 + C153674 * C3450 +
                    C152071 * C1460 + C85646 + C85646 + C153667 * C1470) *
                       C153467 +
                   (C83553 * C4959 + C85647 + C85647 + C83545 * C4965 +
                    C152059 * C3441 + C85648 + C85648 + C153674 * C3449 +
                    C152071 * C1461 + C85649 + C85649 + C153667 * C1471) *
                       C153459) *
                      C153626 * C537) *
                     C153563) *
                C153492) /
                   (p * q * std::sqrt(p + q));
    d2ee[8] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                (((((C152071 * C136 + C83556 + C83556 + C153667 * C152 +
                     C152059 * C329 + C83557 + C83557 + C153674 * C353 +
                     C83553 * C330 + C83558 + C83558 + C83545 * C354) *
                        C153459 +
                    (C83622 + C83623 + C83624) * C153467 + C83636 * C83548) *
                       C153626 * C153838 -
                   (C84708 * C83548 + (C84233 + C84234 + C84235) * C153467 +
                    (C83553 * C1892 + C84176 + C84176 + C83545 * C1902 +
                     C152059 * C1057 + C84177 + C84177 + C153674 * C1069 +
                     C152071 * C542 + C84178 + C84178 + C153667 * C566) *
                        C153459) *
                       C153626 * C153591) *
                      C1223 +
                  (((C152071 * C1057 + C85008 + C85008 + C153667 * C1069 +
                     C152059 * C1892 + C85009 + C85009 + C153674 * C1902 +
                     C83553 * C4303 + C85010 + C85010 + C83545 * C4311) *
                        C153459 +
                    (C85044 + C85045 + C85046) * C153467 +
                    (C85047 + C85048 + C85049) * C83548) *
                       C153626 * C153591 -
                   (C84470 * C83548 + (C83931 + C83932 + C83933) * C153467 +
                    (C83553 * C1319 + C83874 + C83874 + C83545 * C1329 +
                     C152059 * C330 + C83875 + C83875 + C153674 * C354 +
                     C152071 * C329 + C83876 + C83876 + C153667 * C353) *
                        C153459) *
                       C153626 * C153838) *
                      C153563) *
                     C153829 +
                 ((((C84235 + C84234 + C84233) * C153459 +
                    (C84232 + C84231 + C84230) * C153467 +
                    (C84715 + C84716 + C84717) * C83548) *
                       C153626 * C153591 -
                   (C83637 * C83548 + (C83627 + C83626 + C83625) * C153467 +
                    (C83624 + C83623 + C83622) * C153459) *
                       C153626 * C153838) *
                      C1223 +
                  (((C83933 + C83932 + C83931) * C153459 +
                    (C83930 + C83929 + C83928) * C153467 +
                    (C84477 + C84478 + C84479) * C83548) *
                       C153626 * C153838 -
                   ((C83553 * C4306 + C85029 + C85029 + C83545 * C4314 +
                     C152059 * C1889 + C85030 + C85030 + C153674 * C1899 +
                     C152071 * C1060 + C85031 + C85031 + C153667 * C1072) *
                        C83548 +
                    (C85049 + C85048 + C85047) * C153467 +
                    (C85046 + C85045 + C85044) * C153459) *
                       C153626 * C153591) *
                      C153563) *
                     C153498)) /
               (p * q * std::sqrt(p + q));
    d2ee[9] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                ((((C152071 * C136 + C83556 + C83556 + C153667 * C152 +
                    C152059 * C329 + C83557 + C83557 + C153674 * C353 +
                    C83553 * C330 + C83558 + C83558 + C83545 * C354) *
                       C153459 +
                   (C83622 + C83623 + C83624) * C153467 + C83636 * C83548) *
                      C153626 * C153527 * C1223 -
                  (C84470 * C83548 + (C83931 + C83932 + C83933) * C153467 +
                   (C83553 * C1319 + C83874 + C83874 + C83545 * C1329 +
                    C152059 * C330 + C83875 + C83875 + C153674 * C354 +
                    C152071 * C329 + C83876 + C83876 + C153667 * C353) *
                       C153459) *
                      C153626 * C153527 * C153563) *
                     C1225 +
                 (((C83933 + C83932 + C83931) * C153459 +
                   (C83930 + C83929 + C83928) * C153467 +
                   (C84477 + C84478 + C84479) * C83548) *
                      C153626 * C153527 * C153563 -
                  (C83637 * C83548 + (C83627 + C83626 + C83625) * C153467 +
                   (C83624 + C83623 + C83622) * C153459) *
                      C153626 * C153527 * C1223) *
                     C1226 +
                 ((C83636 * C153459 + (C83630 + C83629 + C83628) * C153467 +
                   (C83631 + C83632 + C83633) * C83548) *
                      C153626 * C153527 * C1223 -
                  ((C83553 * C1315 + C84467 + C84467 + C83545 * C1325 +
                    C152059 * C334 + C84468 + C84468 + C153674 * C358 +
                    C152071 * C325 + C84469 + C84469 + C153667 * C349) *
                       C83548 +
                   (C84479 + C84478 + C84477) * C153467 + C84470 * C153459) *
                      C153626 * C153527 * C153563) *
                     C1227)) /
                   (p * q * std::sqrt(p + q)) -
               (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                (((C152071 * C136 + C83556 + C83556 + C153667 * C152 +
                   C152059 * C329 + C83557 + C83557 + C153674 * C353 +
                   C83553 * C330 + C83558 + C83558 + C83545 * C354) *
                      C153459 +
                  (C83622 + C83623 + C83624) * C153467 + C83636 * C83548) *
                     C153626 * C153527 * C1310 -
                 (C84470 * C83548 + (C83931 + C83932 + C83933) * C153467 +
                  (C83553 * C1319 + C83874 + C83874 + C83545 * C1329 +
                   C152059 * C330 + C83875 + C83875 + C153674 * C354 +
                   C152071 * C329 + C83876 + C83876 + C153667 * C353) *
                      C153459) *
                     C153626 * C153527 * C1311 +
                 ((C152071 * C330 + C83877 + C83877 + C153667 * C354 +
                   C152059 * C1319 + C83878 + C83878 + C153674 * C1329 +
                   C83553 * C3127 + C83879 + C83879 + C83545 * C3135) *
                      C153459 +
                  (C83934 + C83935 + C83936) * C153467 +
                  (C83937 + C83938 + C83939) * C83548) *
                     C153626 * C153527 * C1312 -
                 ((C83553 * C4721 + C85414 + C85414 + C83545 * C4727 +
                   C152059 * C3129 + C85415 + C85415 + C153674 * C3137 +
                   C152071 * C1317 + C85416 + C85416 + C153667 * C1327) *
                      C83548 +
                  (C83553 * C4722 + C85417 + C85417 + C83545 * C4728 +
                   C152059 * C3128 + C85418 + C85418 + C153674 * C3136 +
                   C152071 * C1318 + C85419 + C85419 + C153667 * C1328) *
                      C153467 +
                  (C83553 * C4723 + C85420 + C85420 + C83545 * C4729 +
                   C152059 * C3127 + C85421 + C85421 + C153674 * C3135 +
                   C152071 * C1319 + C85422 + C85422 + C153667 * C1329) *
                      C153459) *
                     C153626 * C153527 * C1313) *
                C153492) /
                   (p * q * std::sqrt(p + q));
    d2ee[10] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 (((((C152071 * C136 + C83556 + C83556 + C153667 * C152 +
                      C152059 * C329 + C83557 + C83557 + C153674 * C353 +
                      C83553 * C330 + C83558 + C83558 + C83545 * C354) *
                         C153459 +
                     (C83622 + C83623 + C83624) * C153467 + C83636 * C83548) *
                        C153626 * C2030 -
                    (C84708 * C83548 + (C84233 + C84234 + C84235) * C153467 +
                     (C83553 * C1892 + C84176 + C84176 + C83545 * C1902 +
                      C152059 * C1057 + C84177 + C84177 + C153674 * C1069 +
                      C152071 * C542 + C84178 + C84178 + C153667 * C566) *
                         C153459) *
                        C153626 * C153591) *
                       C153837 +
                   (((C152071 * C1057 + C85008 + C85008 + C153667 * C1069 +
                      C152059 * C1892 + C85009 + C85009 + C153674 * C1902 +
                      C83553 * C4303 + C85010 + C85010 + C83545 * C4311) *
                         C153459 +
                     (C85044 + C85045 + C85046) * C153467 +
                     (C85047 + C85048 + C85049) * C83548) *
                        C153626 * C153591 -
                    (C84470 * C83548 + (C83931 + C83932 + C83933) * C153467 +
                     (C83553 * C1319 + C83874 + C83874 + C83545 * C1329 +
                      C152059 * C330 + C83875 + C83875 + C153674 * C354 +
                      C152071 * C329 + C83876 + C83876 + C153667 * C353) *
                         C153459) *
                        C153626 * C2030) *
                       C153563) *
                      C153829 +
                  ((((C84235 + C84234 + C84233) * C153459 +
                     (C84232 + C84231 + C84230) * C153467 +
                     (C84715 + C84716 + C84717) * C83548) *
                        C153626 * C153591 -
                    (C83637 * C83548 + (C83627 + C83626 + C83625) * C153467 +
                     (C83624 + C83623 + C83622) * C153459) *
                        C153626 * C2030) *
                       C153837 +
                   (((C83933 + C83932 + C83931) * C153459 +
                     (C83930 + C83929 + C83928) * C153467 +
                     (C84477 + C84478 + C84479) * C83548) *
                        C153626 * C2030 -
                    ((C83553 * C4306 + C85029 + C85029 + C83545 * C4314 +
                      C152059 * C1889 + C85030 + C85030 + C153674 * C1899 +
                      C152071 * C1060 + C85031 + C85031 + C153667 * C1072) *
                         C83548 +
                     (C85049 + C85048 + C85047) * C153467 +
                     (C85046 + C85045 + C85044) * C153459) *
                        C153626 * C153591) *
                       C153563) *
                      C153498)) /
                (p * q * std::sqrt(p + q));
    d2ee[11] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 ((((C152071 * C136 + C83556 + C83556 + C153667 * C152 +
                     C152059 * C329 + C83557 + C83557 + C153674 * C353 +
                     C83553 * C330 + C83558 + C83558 + C83545 * C354) *
                        C153459 +
                    (C83622 + C83623 + C83624) * C153467 + C83636 * C83548) *
                       C153626 * C153910 -
                   (C84708 * C83548 + (C84233 + C84234 + C84235) * C153467 +
                    (C83553 * C1892 + C84176 + C84176 + C83545 * C1902 +
                     C152059 * C1057 + C84177 + C84177 + C153674 * C1069 +
                     C152071 * C542 + C84178 + C84178 + C153667 * C566) *
                        C153459) *
                       C153626 * C153911 +
                   ((C152071 * C543 + C84179 + C84179 + C153667 * C567 +
                     C152059 * C1461 + C84180 + C84180 + C153674 * C1471 +
                     C83553 * C3441 + C84181 + C84181 + C83545 * C3449) *
                        C153459 +
                    (C84236 + C84237 + C84238) * C153467 +
                    (C84239 + C84240 + C84241) * C83548) *
                       C153626 * C2546) *
                      C153837 +
                  (((C152071 * C1057 + C85008 + C85008 + C153667 * C1069 +
                     C152059 * C1892 + C85009 + C85009 + C153674 * C1902 +
                     C83553 * C4303 + C85010 + C85010 + C83545 * C4311) *
                        C153459 +
                    (C85044 + C85045 + C85046) * C153467 +
                    (C85047 + C85048 + C85049) * C83548) *
                       C153626 * C153911 -
                   (C84470 * C83548 + (C83931 + C83932 + C83933) * C153467 +
                    (C83553 * C1319 + C83874 + C83874 + C83545 * C1329 +
                     C152059 * C330 + C83875 + C83875 + C153674 * C354 +
                     C152071 * C329 + C83876 + C83876 + C153667 * C353) *
                        C153459) *
                       C153626 * C153910 -
                   ((C83553 * C4957 + C85641 + C85641 + C83545 * C4963 +
                     C152059 * C3443 + C85642 + C85642 + C153674 * C3451 +
                     C152071 * C1459 + C85643 + C85643 + C153667 * C1469) *
                        C83548 +
                    (C83553 * C4958 + C85644 + C85644 + C83545 * C4964 +
                     C152059 * C3442 + C85645 + C85645 + C153674 * C3450 +
                     C152071 * C1460 + C85646 + C85646 + C153667 * C1470) *
                        C153467 +
                    (C83553 * C4959 + C85647 + C85647 + C83545 * C4965 +
                     C152059 * C3441 + C85648 + C85648 + C153674 * C3449 +
                     C152071 * C1461 + C85649 + C85649 + C153667 * C1471) *
                        C153459) *
                       C153626 * C2546) *
                      C153563) *
                 C153492) /
                (p * q * std::sqrt(p + q));
    d2ee[12] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C152071 * C136 + C83556 + C83556 + C153667 * C152 +
                     C152059 * C329 + C83557 + C83557 + C153674 * C353 +
                     C83553 * C330 + C83558 + C83558 + C83545 * C354) *
                        C153459 +
                    (C83622 + C83623 + C83624) * C153467 + C83636 * C83548) *
                       C153626 * C2030 -
                   (C84708 * C83548 + (C84233 + C84234 + C84235) * C153467 +
                    (C83553 * C1892 + C84176 + C84176 + C83545 * C1902 +
                     C152059 * C1057 + C84177 + C84177 + C153674 * C1069 +
                     C152071 * C542 + C84178 + C84178 + C153667 * C566) *
                        C153459) *
                       C153626 * C153591) *
                      C320 +
                  (((C152071 * C1057 + C85008 + C85008 + C153667 * C1069 +
                     C152059 * C1892 + C85009 + C85009 + C153674 * C1902 +
                     C83553 * C4303 + C85010 + C85010 + C83545 * C4311) *
                        C153459 +
                    (C85044 + C85045 + C85046) * C153467 +
                    (C85047 + C85048 + C85049) * C83548) *
                       C153626 * C153591 -
                   (C84470 * C83548 + (C83931 + C83932 + C83933) * C153467 +
                    (C83553 * C1319 + C83874 + C83874 + C83545 * C1329 +
                     C152059 * C330 + C83875 + C83875 + C153674 * C354 +
                     C152071 * C329 + C83876 + C83876 + C153667 * C353) *
                        C153459) *
                       C153626 * C2030) *
                      C321 +
                  (((C152071 * C330 + C83877 + C83877 + C153667 * C354 +
                     C152059 * C1319 + C83878 + C83878 + C153674 * C1329 +
                     C83553 * C3127 + C83879 + C83879 + C83545 * C3135) *
                        C153459 +
                    (C83934 + C83935 + C83936) * C153467 +
                    (C83937 + C83938 + C83939) * C83548) *
                       C153626 * C2030 -
                   ((C83553 * C5701 + C86376 + C86376 + C83545 * C5707 +
                     C152059 * C4305 + C86377 + C86377 + C153674 * C4313 +
                     C152071 * C1890 + C86378 + C86378 + C153667 * C1900) *
                        C83548 +
                    (C83553 * C5702 + C86379 + C86379 + C83545 * C5708 +
                     C152059 * C4304 + C86380 + C86380 + C153674 * C4312 +
                     C152071 * C1891 + C86381 + C86381 + C153667 * C1901) *
                        C153467 +
                    (C83553 * C5703 + C86382 + C86382 + C83545 * C5709 +
                     C152059 * C4303 + C86383 + C86383 + C153674 * C4311 +
                     C152071 * C1892 + C86384 + C86384 + C153667 * C1902) *
                        C153459) *
                       C153626 * C153591) *
                      C322) *
                 C153492) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C152071 * C136 + C83556 + C83556 + C153667 * C152 +
                     C152059 * C329 + C83557 + C83557 + C153674 * C353 +
                     C83553 * C330 + C83558 + C83558 + C83545 * C354) *
                        C153459 +
                    (C83622 + C83623 + C83624) * C153467 + C83636 * C83548) *
                       C153626 * C2030 -
                   (C84708 * C83548 + (C84233 + C84234 + C84235) * C153467 +
                    (C83553 * C1892 + C84176 + C84176 + C83545 * C1902 +
                     C152059 * C1057 + C84177 + C84177 + C153674 * C1069 +
                     C152071 * C542 + C84178 + C84178 + C153667 * C566) *
                        C153459) *
                       C153626 * C153591) *
                      C153511 * C1225 +
                  (((C84235 + C84234 + C84233) * C153459 +
                    (C84232 + C84231 + C84230) * C153467 +
                    (C84715 + C84716 + C84717) * C83548) *
                       C153626 * C153591 -
                   (C83637 * C83548 + (C83627 + C83626 + C83625) * C153467 +
                    (C83624 + C83623 + C83622) * C153459) *
                       C153626 * C2030) *
                      C153511 * C1226 +
                  ((C83636 * C153459 + (C83630 + C83629 + C83628) * C153467 +
                    (C83631 + C83632 + C83633) * C83548) *
                       C153626 * C2030 -
                   ((C83553 * C1888 + C84705 + C84705 + C83545 * C1898 +
                     C152059 * C1061 + C84706 + C84706 + C153674 * C1073 +
                     C152071 * C538 + C84707 + C84707 + C153667 * C562) *
                        C83548 +
                    (C84717 + C84716 + C84715) * C153467 + C84708 * C153459) *
                       C153626 * C153591) *
                      C153511 * C1227)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((C152071 * C136 + C83556 + C83556 + C153667 * C152 +
                    C152059 * C329 + C83557 + C83557 + C153674 * C353 +
                    C83553 * C330 + C83558 + C83558 + C83545 * C354) *
                       C153459 +
                   (C83622 + C83623 + C83624) * C153467 + C83636 * C83548) *
                      C153626 * C2236 -
                  (C84708 * C83548 + (C84233 + C84234 + C84235) * C153467 +
                   (C83553 * C1892 + C84176 + C84176 + C83545 * C1902 +
                    C152059 * C1057 + C84177 + C84177 + C153674 * C1069 +
                    C152071 * C542 + C84178 + C84178 + C153667 * C566) *
                       C153459) *
                      C153626 * C2237 +
                  ((C152071 * C543 + C84179 + C84179 + C153667 * C567 +
                    C152059 * C1461 + C84180 + C84180 + C153674 * C1471 +
                    C83553 * C3441 + C84181 + C84181 + C83545 * C3449) *
                       C153459 +
                   (C84236 + C84237 + C84238) * C153467 +
                   (C84239 + C84240 + C84241) * C83548) *
                      C153626 * C2238 -
                  ((C83553 * C6301 + C86967 + C86967 + C83545 * C6313 +
                    C152059 * C6302 + C86968 + C86968 + C153674 * C6314 +
                    C152071 * C2242 + C86969 + C86969 + C153667 * C2252) *
                       C83548 +
                   (C83553 * C6303 + C86970 + C86970 + C83545 * C6315 +
                    C152059 * C6304 + C86971 + C86971 + C153674 * C6316 +
                    C152071 * C2243 + C86972 + C86972 + C153667 * C2253) *
                       C153467 +
                   (C83553 * C6305 + C86973 + C86973 + C83545 * C6317 +
                    C152059 * C6306 + C86974 + C86974 + C153674 * C6318 +
                    C152071 * C2244 + C86975 + C86975 + C153667 * C2254) *
                       C153459) *
                      C153626 * C2239) *
                 C153511 * C153492) /
                    (p * q * std::sqrt(p + q));
    d2ee[13] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 ((((C152071 * C136 + C83556 + C83556 + C153667 * C152 +
                     C152059 * C329 + C83557 + C83557 + C153674 * C353 +
                     C83553 * C330 + C83558 + C83558 + C83545 * C354) *
                        C153459 +
                    (C83622 + C83623 + C83624) * C153467 + C83636 * C83548) *
                       C153626 * C153910 -
                   (C84708 * C83548 + (C84233 + C84234 + C84235) * C153467 +
                    (C83553 * C1892 + C84176 + C84176 + C83545 * C1902 +
                     C152059 * C1057 + C84177 + C84177 + C153674 * C1069 +
                     C152071 * C542 + C84178 + C84178 + C153667 * C566) *
                        C153459) *
                       C153626 * C153911 +
                   ((C152071 * C543 + C84179 + C84179 + C153667 * C567 +
                     C152059 * C1461 + C84180 + C84180 + C153674 * C1471 +
                     C83553 * C3441 + C84181 + C84181 + C83545 * C3449) *
                        C153459 +
                    (C84236 + C84237 + C84238) * C153467 +
                    (C84239 + C84240 + C84241) * C83548) *
                       C153626 * C2546) *
                      C153511 * C153829 +
                  (((C84235 + C84234 + C84233) * C153459 +
                    (C84232 + C84231 + C84230) * C153467 +
                    (C84715 + C84716 + C84717) * C83548) *
                       C153626 * C153911 -
                   (C83637 * C83548 + (C83627 + C83626 + C83625) * C153467 +
                    (C83624 + C83623 + C83622) * C153459) *
                       C153626 * C153910 -
                   ((C83553 * C3444 + C84203 + C84203 + C83545 * C3452 +
                     C152059 * C1458 + C84204 + C84204 + C153674 * C1468 +
                     C152071 * C546 + C84205 + C84205 + C153667 * C570) *
                        C83548 +
                    (C84241 + C84240 + C84239) * C153467 +
                    (C84238 + C84237 + C84236) * C153459) *
                       C153626 * C2546) *
                      C153511 * C153498)) /
                (p * q * std::sqrt(p + q));
    d2ee[14] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C152071 * C136 + C83556 + C83556 + C153667 * C152 +
                     C152059 * C329 + C83557 + C83557 + C153674 * C353 +
                     C83553 * C330 + C83558 + C83558 + C83545 * C354) *
                        C153459 +
                    (C83622 + C83623 + C83624) * C153467 + C83636 * C83548) *
                       C153626 * C2030 -
                   (C84708 * C83548 + (C84233 + C84234 + C84235) * C153467 +
                    (C83553 * C1892 + C84176 + C84176 + C83545 * C1902 +
                     C152059 * C1057 + C84177 + C84177 + C153674 * C1069 +
                     C152071 * C542 + C84178 + C84178 + C153667 * C566) *
                        C153459) *
                       C153626 * C153591) *
                      C153511 * C1225 +
                  (((C84235 + C84234 + C84233) * C153459 +
                    (C84232 + C84231 + C84230) * C153467 +
                    (C84715 + C84716 + C84717) * C83548) *
                       C153626 * C153591 -
                   (C83637 * C83548 + (C83627 + C83626 + C83625) * C153467 +
                    (C83624 + C83623 + C83622) * C153459) *
                       C153626 * C2030) *
                      C153511 * C1226 +
                  ((C83636 * C153459 + (C83630 + C83629 + C83628) * C153467 +
                    (C83631 + C83632 + C83633) * C83548) *
                       C153626 * C2030 -
                   ((C83553 * C1888 + C84705 + C84705 + C83545 * C1898 +
                     C152059 * C1061 + C84706 + C84706 + C153674 * C1073 +
                     C152071 * C538 + C84707 + C84707 + C153667 * C562) *
                        C83548 +
                    (C84717 + C84716 + C84715) * C153467 + C84708 * C153459) *
                       C153626 * C153591) *
                      C153511 * C1227)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C152071 * C136 + C83556 + C83556 + C153667 * C152 +
                     C152059 * C329 + C83557 + C83557 + C153674 * C353 +
                     C83553 * C330 + C83558 + C83558 + C83545 * C354) *
                        C153459 +
                    (C83622 + C83623 + C83624) * C153467 + C83636 * C83548) *
                       C153626 * C2030 -
                   (C84708 * C83548 + (C84233 + C84234 + C84235) * C153467 +
                    (C83553 * C1892 + C84176 + C84176 + C83545 * C1902 +
                     C152059 * C1057 + C84177 + C84177 + C153674 * C1069 +
                     C152071 * C542 + C84178 + C84178 + C153667 * C566) *
                        C153459) *
                       C153626 * C153591) *
                      C320 +
                  (((C152071 * C1057 + C85008 + C85008 + C153667 * C1069 +
                     C152059 * C1892 + C85009 + C85009 + C153674 * C1902 +
                     C83553 * C4303 + C85010 + C85010 + C83545 * C4311) *
                        C153459 +
                    (C85044 + C85045 + C85046) * C153467 +
                    (C85047 + C85048 + C85049) * C83548) *
                       C153626 * C153591 -
                   (C84470 * C83548 + (C83931 + C83932 + C83933) * C153467 +
                    (C83553 * C1319 + C83874 + C83874 + C83545 * C1329 +
                     C152059 * C330 + C83875 + C83875 + C153674 * C354 +
                     C152071 * C329 + C83876 + C83876 + C153667 * C353) *
                        C153459) *
                       C153626 * C2030) *
                      C321 +
                  (((C152071 * C330 + C83877 + C83877 + C153667 * C354 +
                     C152059 * C1319 + C83878 + C83878 + C153674 * C1329 +
                     C83553 * C3127 + C83879 + C83879 + C83545 * C3135) *
                        C153459 +
                    (C83934 + C83935 + C83936) * C153467 +
                    (C83937 + C83938 + C83939) * C83548) *
                       C153626 * C2030 -
                   ((C83553 * C5701 + C86376 + C86376 + C83545 * C5707 +
                     C152059 * C4305 + C86377 + C86377 + C153674 * C4313 +
                     C152071 * C1890 + C86378 + C86378 + C153667 * C1900) *
                        C83548 +
                    (C83553 * C5702 + C86379 + C86379 + C83545 * C5708 +
                     C152059 * C4304 + C86380 + C86380 + C153674 * C4312 +
                     C152071 * C1891 + C86381 + C86381 + C153667 * C1901) *
                        C153467 +
                    (C83553 * C5703 + C86382 + C86382 + C83545 * C5709 +
                     C152059 * C4303 + C86383 + C86383 + C153674 * C4311 +
                     C152071 * C1892 + C86384 + C86384 + C153667 * C1902) *
                        C153459) *
                       C153626 * C153591) *
                      C322) *
                 C153492) /
                    (p * q * std::sqrt(p + q));
    d2ee[15] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C152071 * C136 + C83556 + C83556 + C153667 * C152 +
              C152059 * C329 + C83557 + C83557 + C153674 * C353 +
              C83553 * C330 + C83558 + C83558 + C83545 * C354) *
                 C74249 +
             (C83622 + C83623 + C83624) * C153464) *
                C153853 +
            ((C93770 + C93771 + C93772) * C74249 + C93751 * C153464) *
                C153713) *
               C153527 * C153837 -
           (((C85046 + C85045 + C85044) * C153464 +
             (C83553 * C4303 + C85010 + C85010 + C83545 * C4311 +
              C152059 * C1892 + C85009 + C85009 + C153674 * C1902 +
              C152071 * C1057 + C85008 + C85008 + C153667 * C1069) *
                 C74249) *
                C153713 +
            ((C83931 + C83932 + C83933) * C153464 +
             (C83553 * C1319 + C83874 + C83874 + C83545 * C1329 +
              C152059 * C330 + C83875 + C83875 + C153674 * C354 +
              C152071 * C329 + C83876 + C83876 + C153667 * C353) *
                 C74249) *
                C153853) *
               C153527 * C153563) *
              C153906 +
          ((((C83933 + C83932 + C83931) * C74249 +
             (C83930 + C83929 + C83928) * C153464) *
                C153853 +
            ((C85044 + C85045 + C85046) * C74249 +
             (C85047 + C85048 + C85049) * C153464) *
                C153713) *
               C153527 * C153563 -
           ((C84708 * C153464 + C93756 * C74249) * C153713 +
            ((C83627 + C83626 + C83625) * C153464 +
             (C83624 + C83623 + C83622) * C74249) *
                C153853) *
               C153527 * C153837) *
              C153907 +
          (((C83636 * C74249 + (C83630 + C83629 + C83628) * C153464) * C153853 +
            ((C84232 + C84231 + C84230) * C74249 +
             (C84715 + C84716 + C84717) * C153464) *
                C153713) *
               C153527 * C153837 -
           (((C83553 * C4306 + C85029 + C85029 + C83545 * C4314 +
              C152059 * C1889 + C85030 + C85030 + C153674 * C1899 +
              C152071 * C1060 + C85031 + C85031 + C153667 * C1072) *
                 C153464 +
             (C85049 + C85048 + C85047) * C74249) *
                C153713 +
            ((C84479 + C84478 + C84477) * C153464 + C84470 * C74249) *
                C153853) *
               C153527 * C153563) *
              C752)) /
        (p * q * std::sqrt(p + q));
    d2ee[16] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 ((((((C152071 * C136 + C83556 + C83556 + C153667 * C152 +
                       C152059 * C329 + C83557 + C83557 + C153674 * C353 +
                       C83553 * C330 + C83558 + C83558 + C83545 * C354) *
                          C74249 +
                      (C83622 + C83623 + C83624) * C153464) *
                         C153853 +
                     ((C93770 + C93771 + C93772) * C74249 + C93751 * C153464) *
                         C153713) *
                        C153838 -
                    ((C93752 * C153464 + (C93773 + C93774 + C93775) * C74249) *
                         C153713 +
                     (C93756 * C153464 + (C93772 + C93771 + C93770) * C74249) *
                         C153853) *
                        C153591) *
                       C153837 +
                   ((((C94775 + C94776 + C94777) * C74249 + C94764 * C153464) *
                         C153853 +
                     ((C152071 * C1461 + C85649 + C85649 + C153667 * C1471 +
                       C152059 * C3441 + C85648 + C85648 + C153674 * C3449 +
                       C83553 * C4959 + C85647 + C85647 + C83545 * C4965) *
                          C74249 +
                      (C94778 + C94779 + C94780) * C153464) *
                         C153713) *
                        C153591 -
                    ((C94768 * C153464 + (C94777 + C94776 + C94775) * C74249) *
                         C153713 +
                     ((C83931 + C83932 + C83933) * C153464 +
                      (C83553 * C1319 + C83874 + C83874 + C83545 * C1329 +
                       C152059 * C330 + C83875 + C83875 + C153674 * C354 +
                       C152071 * C329 + C83876 + C83876 + C153667 * C353) *
                          C74249) *
                         C153853) *
                        C153838) *
                       C153563) *
                      C323 +
                  ((((C93751 * C74249 + C94360 * C153464) * C153853 +
                     (C93757 * C74249 + (C84239 + C84240 + C84241) * C153464) *
                         C153713) *
                        C153591 -
                    ((C84708 * C153464 + C93756 * C74249) * C153713 +
                     ((C83627 + C83626 + C83625) * C153464 +
                      (C83624 + C83623 + C83622) * C74249) *
                         C153853) *
                        C153838) *
                       C153837 +
                   ((((C83933 + C83932 + C83931) * C74249 +
                      (C83930 + C83929 + C83928) * C153464) *
                         C153853 +
                     (C94764 * C74249 + (C85047 + C85048 + C85049) * C153464) *
                         C153713) *
                        C153838 -
                    (((C83553 * C4957 + C85641 + C85641 + C83545 * C4963 +
                       C152059 * C3443 + C85642 + C85642 + C153674 * C3451 +
                       C152071 * C1459 + C85643 + C85643 + C153667 * C1469) *
                          C153464 +
                      (C94780 + C94779 + C94778) * C74249) *
                         C153713 +
                     ((C85049 + C85048 + C85047) * C153464 + C94768 * C74249) *
                         C153853) *
                        C153591) *
                       C153563) *
                      C153498)) /
                (p * q * std::sqrt(p + q));
    d2ee[17] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C152071 * C136 + C83556 + C83556 + C153667 * C152 +
              C152059 * C329 + C83557 + C83557 + C153674 * C353 +
              C83553 * C330 + C83558 + C83558 + C83545 * C354) *
                 C74249 +
             (C83622 + C83623 + C83624) * C153464) *
                C153853 +
            ((C152071 * C542 + C84178 + C84178 + C153667 * C566 +
              C152059 * C1057 + C84177 + C84177 + C153674 * C1069 +
              C83553 * C1892 + C84176 + C84176 + C83545 * C1902) *
                 C74249 +
             (C84235 + C84234 + C84233) * C153464) *
                C153713) *
               C153527 * C320 -
           (((C85046 + C85045 + C85044) * C153464 +
             (C83553 * C4303 + C85010 + C85010 + C83545 * C4311 +
              C152059 * C1892 + C85009 + C85009 + C153674 * C1902 +
              C152071 * C1057 + C85008 + C85008 + C153667 * C1069) *
                 C74249) *
                C153713 +
            ((C83931 + C83932 + C83933) * C153464 +
             (C83553 * C1319 + C83874 + C83874 + C83545 * C1329 +
              C152059 * C330 + C83875 + C83875 + C153674 * C354 +
              C152071 * C329 + C83876 + C83876 + C153667 * C353) *
                 C74249) *
                C153853) *
               C153527 * C321 +
           (((C152071 * C330 + C83877 + C83877 + C153667 * C354 +
              C152059 * C1319 + C83878 + C83878 + C153674 * C1329 +
              C83553 * C3127 + C83879 + C83879 + C83545 * C3135) *
                 C74249 +
             (C83934 + C83935 + C83936) * C153464) *
                C153853 +
            ((C152071 * C1892 + C86384 + C86384 + C153667 * C1902 +
              C152059 * C4303 + C86383 + C86383 + C153674 * C4311 +
              C83553 * C5703 + C86382 + C86382 + C83545 * C5709) *
                 C74249 +
             (C93433 + C93434 + C93435) * C153464) *
                C153713) *
               C153527 * C322) *
              C323 +
          ((((C83933 + C83932 + C83931) * C74249 +
             (C83930 + C83929 + C83928) * C153464) *
                C153853 +
            ((C85044 + C85045 + C85046) * C74249 +
             (C85047 + C85048 + C85049) * C153464) *
                C153713) *
               C153527 * C321 -
           ((C84708 * C153464 + (C84233 + C84234 + C84235) * C74249) * C153713 +
            ((C83627 + C83626 + C83625) * C153464 +
             (C83624 + C83623 + C83622) * C74249) *
                C153853) *
               C153527 * C320 -
           (((C83553 * C5701 + C86376 + C86376 + C83545 * C5707 +
              C152059 * C4305 + C86377 + C86377 + C153674 * C4313 +
              C152071 * C1890 + C86378 + C86378 + C153667 * C1900) *
                 C153464 +
             (C93435 + C93434 + C93433) * C74249) *
                C153713 +
            ((C83939 + C83938 + C83937) * C153464 +
             (C83936 + C83935 + C83934) * C74249) *
                C153853) *
               C153527 * C322) *
              C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C152071 * C136 + C83556 + C83556 + C153667 * C152 +
             C152059 * C329 + C83557 + C83557 + C153674 * C353 + C83553 * C330 +
             C83558 + C83558 + C83545 * C354) *
                C74249 +
            (C83622 + C83623 + C83624) * C153464) *
               C153853 +
           ((C152071 * C542 + C84178 + C84178 + C153667 * C566 +
             C152059 * C1057 + C84177 + C84177 + C153674 * C1069 +
             C83553 * C1892 + C84176 + C84176 + C83545 * C1902) *
                C74249 +
            (C84235 + C84234 + C84233) * C153464) *
               C153713) *
              C153527 * C153511 * C130 -
          ((C84708 * C153464 + (C84233 + C84234 + C84235) * C74249) * C153713 +
           ((C83627 + C83626 + C83625) * C153464 +
            (C83624 + C83623 + C83622) * C74249) *
               C153853) *
              C153527 * C153511 * C131 +
          ((C83636 * C74249 + (C83630 + C83629 + C83628) * C153464) * C153853 +
           ((C84232 + C84231 + C84230) * C74249 +
            (C84715 + C84716 + C84717) * C153464) *
               C153713) *
              C153527 * C153511 * C132 -
          (((C83553 * C1888 + C84705 + C84705 + C83545 * C1898 +
             C152059 * C1061 + C84706 + C84706 + C153674 * C1073 +
             C152071 * C538 + C84707 + C84707 + C153667 * C562) *
                C153464 +
            (C84717 + C84716 + C84715) * C74249) *
               C153713 +
           ((C83633 + C83632 + C83631) * C153464 + C83637 * C74249) * C153853) *
              C153527 * C153511 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C152071 * C136 + C83556 + C83556 + C153667 * C152 +
              C152059 * C329 + C83557 + C83557 + C153674 * C353 +
              C83553 * C330 + C83558 + C83558 + C83545 * C354) *
                 C74249 +
             (C83622 + C83623 + C83624) * C153464) *
                C153853 +
            ((C93770 + C93771 + C93772) * C74249 + C93751 * C153464) *
                C153713) *
               C535 -
           ((C93752 * C153464 + (C93773 + C93774 + C93775) * C74249) * C153713 +
            (C93756 * C153464 + (C93772 + C93771 + C93770) * C74249) *
                C153853) *
               C536 +
           (((C93775 + C93774 + C93773) * C74249 + C93757 * C153464) * C153853 +
            ((C152071 * C2244 + C86975 + C86975 + C153667 * C2254 +
              C152059 * C6306 + C86974 + C86974 + C153674 * C6318 +
              C83553 * C6305 + C86973 + C86973 + C83545 * C6317) *
                 C74249 +
             (C93776 + C93777 + C93778) * C153464) *
                C153713) *
               C537) *
              C153511 * C323 +
          (((C93751 * C74249 + (C84232 + C84231 + C84230) * C153464) * C153853 +
            (C93757 * C74249 + (C84239 + C84240 + C84241) * C153464) *
                C153713) *
               C536 -
           ((C84708 * C153464 + C93756 * C74249) * C153713 +
            ((C83627 + C83626 + C83625) * C153464 +
             (C83624 + C83623 + C83622) * C74249) *
                C153853) *
               C535 -
           (((C83553 * C6301 + C86967 + C86967 + C83545 * C6313 +
              C152059 * C6302 + C86968 + C86968 + C153674 * C6314 +
              C152071 * C2242 + C86969 + C86969 + C153667 * C2252) *
                 C153464 +
             (C93778 + C93777 + C93776) * C74249) *
                C153713 +
            ((C84241 + C84240 + C84239) * C153464 + C93752 * C74249) *
                C153853) *
               C537) *
              C153511 * C153498)) /
            (p * q * std::sqrt(p + q));
    d2ee[18] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C152071 * C136 + C83556 + C83556 + C153667 * C152 +
              C152059 * C329 + C83557 + C83557 + C153674 * C353 +
              C83553 * C330 + C83558 + C83558 + C83545 * C354) *
                 C74249 +
             (C83622 + C83623 + C83624) * C153464) *
                C153853 +
            ((C93770 + C93771 + C93772) * C74249 + C93751 * C153464) *
                C153713) *
               C153838 -
           ((C93752 * C153464 + (C93773 + C93774 + C93775) * C74249) * C153713 +
            (C93756 * C153464 + (C93772 + C93771 + C93770) * C74249) *
                C153853) *
               C153591) *
              C153511 * C153906 +
          (((C93751 * C74249 + C94360 * C153464) * C153853 +
            (C93757 * C74249 + (C84239 + C84240 + C84241) * C153464) *
                C153713) *
               C153591 -
           ((C84708 * C153464 + C93756 * C74249) * C153713 +
            ((C83627 + C83626 + C83625) * C153464 +
             (C83624 + C83623 + C83622) * C74249) *
                C153853) *
               C153838) *
              C153511 * C153907 +
          (((C83636 * C74249 + (C83630 + C83629 + C83628) * C153464) * C153853 +
            (C94360 * C74249 + (C84715 + C84716 + C84717) * C153464) *
                C153713) *
               C153838 -
           (((C83553 * C3444 + C84203 + C84203 + C83545 * C3452 +
              C152059 * C1458 + C84204 + C84204 + C153674 * C1468 +
              C152071 * C546 + C84205 + C84205 + C153667 * C570) *
                 C153464 +
             (C84241 + C84240 + C84239) * C74249) *
                C153713 +
            ((C84717 + C84716 + C84715) * C153464 + C84708 * C74249) *
                C153853) *
               C153591) *
              C153511 * C752)) /
        (p * q * std::sqrt(p + q));
    d2ee[19] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C152071 * C136 + C83556 + C83556 + C153667 * C152 +
             C152059 * C329 + C83557 + C83557 + C153674 * C353 + C83553 * C330 +
             C83558 + C83558 + C83545 * C354) *
                C74249 +
            (C83622 + C83623 + C83624) * C153464) *
               C153853 +
           ((C152071 * C542 + C84178 + C84178 + C153667 * C566 +
             C152059 * C1057 + C84177 + C84177 + C153674 * C1069 +
             C83553 * C1892 + C84176 + C84176 + C83545 * C1902) *
                C74249 +
            (C84235 + C84234 + C84233) * C153464) *
               C153713) *
              C153527 * C153511 * C130 -
          ((C84708 * C153464 + (C84233 + C84234 + C84235) * C74249) * C153713 +
           ((C83627 + C83626 + C83625) * C153464 +
            (C83624 + C83623 + C83622) * C74249) *
               C153853) *
              C153527 * C153511 * C131 +
          ((C83636 * C74249 + (C83630 + C83629 + C83628) * C153464) * C153853 +
           ((C84232 + C84231 + C84230) * C74249 +
            (C84715 + C84716 + C84717) * C153464) *
               C153713) *
              C153527 * C153511 * C132 -
          (((C83553 * C1888 + C84705 + C84705 + C83545 * C1898 +
             C152059 * C1061 + C84706 + C84706 + C153674 * C1073 +
             C152071 * C538 + C84707 + C84707 + C153667 * C562) *
                C153464 +
            (C84717 + C84716 + C84715) * C74249) *
               C153713 +
           ((C83633 + C83632 + C83631) * C153464 + C83637 * C74249) * C153853) *
              C153527 * C153511 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C152071 * C136 + C83556 + C83556 + C153667 * C152 +
              C152059 * C329 + C83557 + C83557 + C153674 * C353 +
              C83553 * C330 + C83558 + C83558 + C83545 * C354) *
                 C74249 +
             (C83622 + C83623 + C83624) * C153464) *
                C153853 +
            ((C152071 * C542 + C84178 + C84178 + C153667 * C566 +
              C152059 * C1057 + C84177 + C84177 + C153674 * C1069 +
              C83553 * C1892 + C84176 + C84176 + C83545 * C1902) *
                 C74249 +
             (C84235 + C84234 + C84233) * C153464) *
                C153713) *
               C153527 * C320 -
           (((C85046 + C85045 + C85044) * C153464 +
             (C83553 * C4303 + C85010 + C85010 + C83545 * C4311 +
              C152059 * C1892 + C85009 + C85009 + C153674 * C1902 +
              C152071 * C1057 + C85008 + C85008 + C153667 * C1069) *
                 C74249) *
                C153713 +
            ((C83931 + C83932 + C83933) * C153464 +
             (C83553 * C1319 + C83874 + C83874 + C83545 * C1329 +
              C152059 * C330 + C83875 + C83875 + C153674 * C354 +
              C152071 * C329 + C83876 + C83876 + C153667 * C353) *
                 C74249) *
                C153853) *
               C153527 * C321 +
           (((C152071 * C330 + C83877 + C83877 + C153667 * C354 +
              C152059 * C1319 + C83878 + C83878 + C153674 * C1329 +
              C83553 * C3127 + C83879 + C83879 + C83545 * C3135) *
                 C74249 +
             (C83934 + C83935 + C83936) * C153464) *
                C153853 +
            ((C152071 * C1892 + C86384 + C86384 + C153667 * C1902 +
              C152059 * C4303 + C86383 + C86383 + C153674 * C4311 +
              C83553 * C5703 + C86382 + C86382 + C83545 * C5709) *
                 C74249 +
             (C93433 + C93434 + C93435) * C153464) *
                C153713) *
               C153527 * C322) *
              C323 +
          ((((C83933 + C83932 + C83931) * C74249 +
             (C83930 + C83929 + C83928) * C153464) *
                C153853 +
            ((C85044 + C85045 + C85046) * C74249 +
             (C85047 + C85048 + C85049) * C153464) *
                C153713) *
               C153527 * C321 -
           ((C84708 * C153464 + (C84233 + C84234 + C84235) * C74249) * C153713 +
            ((C83627 + C83626 + C83625) * C153464 +
             (C83624 + C83623 + C83622) * C74249) *
                C153853) *
               C153527 * C320 -
           (((C83553 * C5701 + C86376 + C86376 + C83545 * C5707 +
              C152059 * C4305 + C86377 + C86377 + C153674 * C4313 +
              C152071 * C1890 + C86378 + C86378 + C153667 * C1900) *
                 C153464 +
             (C93435 + C93434 + C93433) * C74249) *
                C153713 +
            ((C83939 + C83938 + C83937) * C153464 +
             (C83936 + C83935 + C83934) * C74249) *
                C153853) *
               C153527 * C322) *
              C153498)) /
            (p * q * std::sqrt(p + q));
    d2ee[20] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C152071 * C136 + C83556 + C83556 + C153667 * C152 +
              C152059 * C329 + C83557 + C83557 + C153674 * C353 +
              C83553 * C330 + C83558 + C83558 + C83545 * C354) *
                 C74249 +
             (C83622 + C83623 + C83624) * C153464) *
                C153853 +
            ((C93770 + C93771 + C93772) * C74249 + C93751 * C153464) *
                C153713) *
               C153527 * C153908 -
           ((C94768 * C153464 + (C94777 + C94776 + C94775) * C74249) * C153713 +
            ((C83931 + C83932 + C83933) * C153464 +
             (C83553 * C1319 + C83874 + C83874 + C83545 * C1329 +
              C152059 * C330 + C83875 + C83875 + C153674 * C354 +
              C152071 * C329 + C83876 + C83876 + C153667 * C353) *
                 C74249) *
                C153853) *
               C153527 * C153909 +
           (((C152071 * C330 + C83877 + C83877 + C153667 * C354 +
              C152059 * C1319 + C83878 + C83878 + C153674 * C1329 +
              C83553 * C3127 + C83879 + C83879 + C83545 * C3135) *
                 C74249 +
             (C83934 + C83935 + C83936) * C153464) *
                C153853 +
            ((C152071 * C1892 + C86384 + C86384 + C153667 * C1902 +
              C152059 * C4303 + C86383 + C86383 + C153674 * C4311 +
              C83553 * C5703 + C86382 + C86382 + C83545 * C5709) *
                 C74249 +
             (C93433 + C93434 + C93435) * C153464) *
                C153713) *
               C153527 * C1601) *
              C153829 +
          ((((C83933 + C83932 + C83931) * C74249 +
             (C83930 + C83929 + C83928) * C153464) *
                C153853 +
            (C94764 * C74249 + (C85047 + C85048 + C85049) * C153464) *
                C153713) *
               C153527 * C153909 -
           ((C84708 * C153464 + C93756 * C74249) * C153713 +
            ((C83627 + C83626 + C83625) * C153464 +
             (C83624 + C83623 + C83622) * C74249) *
                C153853) *
               C153527 * C153908 -
           (((C83553 * C5701 + C86376 + C86376 + C83545 * C5707 +
              C152059 * C4305 + C86377 + C86377 + C153674 * C4313 +
              C152071 * C1890 + C86378 + C86378 + C153667 * C1900) *
                 C153464 +
             (C93435 + C93434 + C93433) * C74249) *
                C153713 +
            ((C83939 + C83938 + C83937) * C153464 +
             (C83936 + C83935 + C83934) * C74249) *
                C153853) *
               C153527 * C1601) *
              C153498)) /
        (p * q * std::sqrt(p + q));
    d2ee[21] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C152071 * C136 + C83556 + C83556 + C153667 * C152 +
              C152059 * C329 + C83557 + C83557 + C153674 * C353 +
              C83553 * C330 + C83558 + C83558 + C83545 * C354) *
                 C74249 +
             (C83622 + C83623 + C83624) * C153464) *
                C153853 +
            ((C93770 + C93771 + C93772) * C74249 + C93751 * C153464) *
                C153713) *
               C153838 -
           ((C93752 * C153464 + (C93773 + C93774 + C93775) * C74249) * C153713 +
            (C93756 * C153464 + (C93772 + C93771 + C93770) * C74249) *
                C153853) *
               C153591) *
              C153908 +
          ((((C94775 + C94776 + C94777) * C74249 + C94764 * C153464) * C153853 +
            ((C95579 + C95580 + C95581) * C74249 +
             (C94778 + C94779 + C94780) * C153464) *
                C153713) *
               C153591 -
           ((C94768 * C153464 + (C94777 + C94776 + C94775) * C74249) * C153713 +
            ((C83931 + C83932 + C83933) * C153464 +
             (C83553 * C1319 + C83874 + C83874 + C83545 * C1329 +
              C152059 * C330 + C83875 + C83875 + C153674 * C354 +
              C152071 * C329 + C83876 + C83876 + C153667 * C353) *
                 C74249) *
                C153853) *
               C153838) *
              C153909 +
          ((((C152071 * C330 + C83877 + C83877 + C153667 * C354 +
              C152059 * C1319 + C83878 + C83878 + C153674 * C1329 +
              C83553 * C3127 + C83879 + C83879 + C83545 * C3135) *
                 C74249 +
             (C83934 + C83935 + C83936) * C153464) *
                C153853 +
            ((C96566 + C96567 + C96568) * C74249 +
             (C93433 + C93434 + C93435) * C153464) *
                C153713) *
               C153838 -
           (((C83553 * C28651 + C96554 + C96554 + C83545 * C28655 +
              C152059 * C4958 + C96555 + C96555 + C153674 * C4964 +
              C152071 * C3442 + C96556 + C96556 + C153667 * C3450) *
                 C153464 +
             (C83553 * C28650 + C96557 + C96557 + C83545 * C28654 +
              C152059 * C4959 + C96558 + C96558 + C153674 * C4965 +
              C152071 * C3441 + C96559 + C96559 + C153667 * C3449) *
                 C74249) *
                C153713 +
            ((C93435 + C93434 + C93433) * C153464 +
             (C96568 + C96567 + C96566) * C74249) *
                C153853) *
               C153591) *
              C1601) *
         C153492) /
        (p * q * std::sqrt(p + q));
    d2ee[22] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C152071 * C136 + C83556 + C83556 + C153667 * C152 +
             C152059 * C329 + C83557 + C83557 + C153674 * C353 + C83553 * C330 +
             C83558 + C83558 + C83545 * C354) *
                C74249 +
            (C83622 + C83623 + C83624) * C153464) *
               C153853 +
           ((C93770 + C93771 + C93772) * C74249 + C93751 * C153464) * C153713) *
              C153527 * C1310 -
          ((C94768 * C153464 + (C94777 + C94776 + C94775) * C74249) * C153713 +
           ((C83931 + C83932 + C83933) * C153464 +
            (C83553 * C1319 + C83874 + C83874 + C83545 * C1329 +
             C152059 * C330 + C83875 + C83875 + C153674 * C354 +
             C152071 * C329 + C83876 + C83876 + C153667 * C353) *
                C74249) *
               C153853) *
              C153527 * C1311 +
          (((C152071 * C330 + C83877 + C83877 + C153667 * C354 +
             C152059 * C1319 + C83878 + C83878 + C153674 * C1329 +
             C83553 * C3127 + C83879 + C83879 + C83545 * C3135) *
                C74249 +
            (C83934 + C83935 + C83936) * C153464) *
               C153853 +
           ((C152071 * C1892 + C86384 + C86384 + C153667 * C1902 +
             C152059 * C4303 + C86383 + C86383 + C153674 * C4311 +
             C83553 * C5703 + C86382 + C86382 + C83545 * C5709) *
                C74249 +
            (C93433 + C93434 + C93435) * C153464) *
               C153713) *
              C153527 * C1312 -
          (((C83553 * C29093 + C95265 + C95265 + C83545 * C29097 +
             C152059 * C5702 + C95266 + C95266 + C153674 * C5708 +
             C152071 * C4304 + C95267 + C95267 + C153667 * C4312) *
                C153464 +
            (C83553 * C29092 + C95268 + C95268 + C83545 * C29096 +
             C152059 * C5703 + C95269 + C95269 + C153674 * C5709 +
             C152071 * C4303 + C95270 + C95270 + C153667 * C4311) *
                C74249) *
               C153713 +
           ((C83553 * C4722 + C85417 + C85417 + C83545 * C4728 +
             C152059 * C3128 + C85418 + C85418 + C153674 * C3136 +
             C152071 * C1318 + C85419 + C85419 + C153667 * C1328) *
                C153464 +
            (C83553 * C4723 + C85420 + C85420 + C83545 * C4729 +
             C152059 * C3127 + C85421 + C85421 + C153674 * C3135 +
             C152071 * C1319 + C85422 + C85422 + C153667 * C1329) *
                C74249) *
               C153853) *
              C153527 * C1313) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C152071 * C136 + C83556 + C83556 + C153667 * C152 +
              C152059 * C329 + C83557 + C83557 + C153674 * C353 +
              C83553 * C330 + C83558 + C83558 + C83545 * C354) *
                 C74249 +
             (C83622 + C83623 + C83624) * C153464) *
                C153853 +
            ((C93770 + C93771 + C93772) * C74249 + C93751 * C153464) *
                C153713) *
               C153527 * C1223 -
           ((C94768 * C153464 + (C94777 + C94776 + C94775) * C74249) * C153713 +
            ((C83931 + C83932 + C83933) * C153464 +
             (C83553 * C1319 + C83874 + C83874 + C83545 * C1329 +
              C152059 * C330 + C83875 + C83875 + C153674 * C354 +
              C152071 * C329 + C83876 + C83876 + C153667 * C353) *
                 C74249) *
                C153853) *
               C153527 * C153563) *
              C1225 +
          ((((C83933 + C83932 + C83931) * C74249 +
             (C83930 + C83929 + C83928) * C153464) *
                C153853 +
            (C94764 * C74249 + (C85047 + C85048 + C85049) * C153464) *
                C153713) *
               C153527 * C153563 -
           ((C84708 * C153464 + C93756 * C74249) * C153713 +
            ((C83627 + C83626 + C83625) * C153464 +
             (C83624 + C83623 + C83622) * C74249) *
                C153853) *
               C153527 * C1223) *
              C1226 +
          (((C83636 * C74249 + (C83630 + C83629 + C83628) * C153464) * C153853 +
            (C94360 * C74249 + (C84715 + C84716 + C84717) * C153464) *
                C153713) *
               C153527 * C1223 -
           (((C83553 * C4306 + C85029 + C85029 + C83545 * C4314 +
              C152059 * C1889 + C85030 + C85030 + C153674 * C1899 +
              C152071 * C1060 + C85031 + C85031 + C153667 * C1072) *
                 C153464 +
             (C85049 + C85048 + C85047) * C74249) *
                C153713 +
            ((C84479 + C84478 + C84477) * C153464 + C84470 * C74249) *
                C153853) *
               C153527 * C153563) *
              C1227)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C152071 * C136 + C83556 + C83556 + C153667 * C152 +
              C152059 * C329 + C83557 + C83557 + C153674 * C353 +
              C83553 * C330 + C83558 + C83558 + C83545 * C354) *
                 C74249 +
             (C83622 + C83623 + C83624) * C153464) *
                C153853 +
            ((C93770 + C93771 + C93772) * C74249 + C93751 * C153464) *
                C153713) *
               C535 -
           ((C93752 * C153464 + (C93773 + C93774 + C93775) * C74249) * C153713 +
            (C93756 * C153464 + (C93772 + C93771 + C93770) * C74249) *
                C153853) *
               C536 +
           (((C93775 + C93774 + C93773) * C74249 + C93757 * C153464) * C153853 +
            ((C152071 * C2244 + C86975 + C86975 + C153667 * C2254 +
              C152059 * C6306 + C86974 + C86974 + C153674 * C6318 +
              C83553 * C6305 + C86973 + C86973 + C83545 * C6317) *
                 C74249 +
             (C93776 + C93777 + C93778) * C153464) *
                C153713) *
               C537) *
              C1223 +
          ((((C94775 + C94776 + C94777) * C74249 + C94764 * C153464) * C153853 +
            ((C95579 + C95580 + C95581) * C74249 +
             (C94778 + C94779 + C94780) * C153464) *
                C153713) *
               C536 -
           ((C94768 * C153464 + (C94777 + C94776 + C94775) * C74249) * C153713 +
            ((C83931 + C83932 + C83933) * C153464 +
             (C83553 * C1319 + C83874 + C83874 + C83545 * C1329 +
              C152059 * C330 + C83875 + C83875 + C153674 * C354 +
              C152071 * C329 + C83876 + C83876 + C153667 * C353) *
                 C74249) *
                C153853) *
               C535 -
           (((C83553 * C31999 + C95567 + C95567 + C83545 * C32001 +
              C152059 * C6303 + C95568 + C95568 + C153674 * C6315 +
              C152071 * C6304 + C95569 + C95569 + C153667 * C6316) *
                 C153464 +
             (C83553 * C30191 + C95570 + C95570 + C83545 * C30195 +
              C152059 * C6305 + C95571 + C95571 + C153674 * C6317 +
              C152071 * C6306 + C95572 + C95572 + C153667 * C6318) *
                 C74249) *
                C153713 +
            ((C94780 + C94779 + C94778) * C153464 +
             (C95581 + C95580 + C95579) * C74249) *
                C153853) *
               C537) *
              C153563) *
         C153492) /
            (p * q * std::sqrt(p + q));
    d2ee[23] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 ((((((C152071 * C136 + C83556 + C83556 + C153667 * C152 +
                       C152059 * C329 + C83557 + C83557 + C153674 * C353 +
                       C83553 * C330 + C83558 + C83558 + C83545 * C354) *
                          C74249 +
                      (C83622 + C83623 + C83624) * C153464) *
                         C153853 +
                     ((C93770 + C93771 + C93772) * C74249 + C93751 * C153464) *
                         C153713) *
                        C153838 -
                    ((C93752 * C153464 + (C93773 + C93774 + C93775) * C74249) *
                         C153713 +
                     (C93756 * C153464 + (C93772 + C93771 + C93770) * C74249) *
                         C153853) *
                        C153591) *
                       C1223 +
                   ((((C94775 + C94776 + C94777) * C74249 + C94764 * C153464) *
                         C153853 +
                     ((C95579 + C95580 + C95581) * C74249 +
                      (C94778 + C94779 + C94780) * C153464) *
                         C153713) *
                        C153591 -
                    ((C94768 * C153464 + (C94777 + C94776 + C94775) * C74249) *
                         C153713 +
                     ((C83931 + C83932 + C83933) * C153464 +
                      (C83553 * C1319 + C83874 + C83874 + C83545 * C1329 +
                       C152059 * C330 + C83875 + C83875 + C153674 * C354 +
                       C152071 * C329 + C83876 + C83876 + C153667 * C353) *
                          C74249) *
                         C153853) *
                        C153838) *
                       C153563) *
                      C153829 +
                  ((((C93751 * C74249 + C94360 * C153464) * C153853 +
                     (C93757 * C74249 + (C84239 + C84240 + C84241) * C153464) *
                         C153713) *
                        C153591 -
                    ((C84708 * C153464 + C93756 * C74249) * C153713 +
                     ((C83627 + C83626 + C83625) * C153464 +
                      (C83624 + C83623 + C83622) * C74249) *
                         C153853) *
                        C153838) *
                       C1223 +
                   ((((C83933 + C83932 + C83931) * C74249 +
                      (C83930 + C83929 + C83928) * C153464) *
                         C153853 +
                     (C94764 * C74249 + (C85047 + C85048 + C85049) * C153464) *
                         C153713) *
                        C153838 -
                    (((C83553 * C4957 + C85641 + C85641 + C83545 * C4963 +
                       C152059 * C3443 + C85642 + C85642 + C153674 * C3451 +
                       C152071 * C1459 + C85643 + C85643 + C153667 * C1469) *
                          C153464 +
                      (C94780 + C94779 + C94778) * C74249) *
                         C153713 +
                     ((C85049 + C85048 + C85047) * C153464 + C94768 * C74249) *
                         C153853) *
                        C153591) *
                       C153563) *
                      C153498)) /
                (p * q * std::sqrt(p + q));
    d2ee[24] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C152071 * C136 + C83556 + C83556 + C153667 * C152 +
              C152059 * C329 + C83557 + C83557 + C153674 * C353 +
              C83553 * C330 + C83558 + C83558 + C83545 * C354) *
                 C74249 +
             (C83622 + C83623 + C83624) * C153464) *
                C153853 +
            ((C93770 + C93771 + C93772) * C74249 + C93751 * C153464) *
                C153713) *
               C153527 * C1223 -
           ((C94768 * C153464 + (C94777 + C94776 + C94775) * C74249) * C153713 +
            ((C83931 + C83932 + C83933) * C153464 +
             (C83553 * C1319 + C83874 + C83874 + C83545 * C1329 +
              C152059 * C330 + C83875 + C83875 + C153674 * C354 +
              C152071 * C329 + C83876 + C83876 + C153667 * C353) *
                 C74249) *
                C153853) *
               C153527 * C153563) *
              C1225 +
          ((((C83933 + C83932 + C83931) * C74249 +
             (C83930 + C83929 + C83928) * C153464) *
                C153853 +
            (C94764 * C74249 + (C85047 + C85048 + C85049) * C153464) *
                C153713) *
               C153527 * C153563 -
           ((C84708 * C153464 + C93756 * C74249) * C153713 +
            ((C83627 + C83626 + C83625) * C153464 +
             (C83624 + C83623 + C83622) * C74249) *
                C153853) *
               C153527 * C1223) *
              C1226 +
          (((C83636 * C74249 + (C83630 + C83629 + C83628) * C153464) * C153853 +
            (C94360 * C74249 + (C84715 + C84716 + C84717) * C153464) *
                C153713) *
               C153527 * C1223 -
           (((C83553 * C4306 + C85029 + C85029 + C83545 * C4314 +
              C152059 * C1889 + C85030 + C85030 + C153674 * C1899 +
              C152071 * C1060 + C85031 + C85031 + C153667 * C1072) *
                 C153464 +
             (C85049 + C85048 + C85047) * C74249) *
                C153713 +
            ((C84479 + C84478 + C84477) * C153464 + C84470 * C74249) *
                C153853) *
               C153527 * C153563) *
              C1227)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C152071 * C136 + C83556 + C83556 + C153667 * C152 +
             C152059 * C329 + C83557 + C83557 + C153674 * C353 + C83553 * C330 +
             C83558 + C83558 + C83545 * C354) *
                C74249 +
            (C83622 + C83623 + C83624) * C153464) *
               C153853 +
           ((C93770 + C93771 + C93772) * C74249 + C93751 * C153464) * C153713) *
              C153527 * C1310 -
          ((C94768 * C153464 + (C94777 + C94776 + C94775) * C74249) * C153713 +
           ((C83931 + C83932 + C83933) * C153464 +
            (C83553 * C1319 + C83874 + C83874 + C83545 * C1329 +
             C152059 * C330 + C83875 + C83875 + C153674 * C354 +
             C152071 * C329 + C83876 + C83876 + C153667 * C353) *
                C74249) *
               C153853) *
              C153527 * C1311 +
          (((C152071 * C330 + C83877 + C83877 + C153667 * C354 +
             C152059 * C1319 + C83878 + C83878 + C153674 * C1329 +
             C83553 * C3127 + C83879 + C83879 + C83545 * C3135) *
                C74249 +
            (C83934 + C83935 + C83936) * C153464) *
               C153853 +
           ((C152071 * C1892 + C86384 + C86384 + C153667 * C1902 +
             C152059 * C4303 + C86383 + C86383 + C153674 * C4311 +
             C83553 * C5703 + C86382 + C86382 + C83545 * C5709) *
                C74249 +
            (C93433 + C93434 + C93435) * C153464) *
               C153713) *
              C153527 * C1312 -
          (((C83553 * C29093 + C95265 + C95265 + C83545 * C29097 +
             C152059 * C5702 + C95266 + C95266 + C153674 * C5708 +
             C152071 * C4304 + C95267 + C95267 + C153667 * C4312) *
                C153464 +
            (C83553 * C29092 + C95268 + C95268 + C83545 * C29096 +
             C152059 * C5703 + C95269 + C95269 + C153674 * C5709 +
             C152071 * C4303 + C95270 + C95270 + C153667 * C4311) *
                C74249) *
               C153713 +
           ((C83553 * C4722 + C85417 + C85417 + C83545 * C4728 +
             C152059 * C3128 + C85418 + C85418 + C153674 * C3136 +
             C152071 * C1318 + C85419 + C85419 + C153667 * C1328) *
                C153464 +
            (C83553 * C4723 + C85420 + C85420 + C83545 * C4729 +
             C152059 * C3127 + C85421 + C85421 + C153674 * C3135 +
             C152071 * C1319 + C85422 + C85422 + C153667 * C1329) *
                C74249) *
               C153853) *
              C153527 * C1313) *
         C153492) /
            (p * q * std::sqrt(p + q));
    d2ee[25] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 ((((((C152071 * C136 + C83556 + C83556 + C153667 * C152 +
                       C152059 * C329 + C83557 + C83557 + C153674 * C353 +
                       C83553 * C330 + C83558 + C83558 + C83545 * C354) *
                          C74249 +
                      (C83622 + C83623 + C83624) * C153464) *
                         C153853 +
                     ((C93770 + C93771 + C93772) * C74249 + C93751 * C153464) *
                         C153713) *
                        C2030 -
                    ((C93752 * C153464 + (C93773 + C93774 + C93775) * C74249) *
                         C153713 +
                     (C93756 * C153464 + (C93772 + C93771 + C93770) * C74249) *
                         C153853) *
                        C153591) *
                       C153837 +
                   ((((C94775 + C94776 + C94777) * C74249 + C94764 * C153464) *
                         C153853 +
                     ((C95579 + C95580 + C95581) * C74249 +
                      (C94778 + C94779 + C94780) * C153464) *
                         C153713) *
                        C153591 -
                    ((C94768 * C153464 + (C94777 + C94776 + C94775) * C74249) *
                         C153713 +
                     ((C83931 + C83932 + C83933) * C153464 +
                      (C83553 * C1319 + C83874 + C83874 + C83545 * C1329 +
                       C152059 * C330 + C83875 + C83875 + C153674 * C354 +
                       C152071 * C329 + C83876 + C83876 + C153667 * C353) *
                          C74249) *
                         C153853) *
                        C2030) *
                       C153563) *
                      C153829 +
                  ((((C93751 * C74249 + C94360 * C153464) * C153853 +
                     (C93757 * C74249 + (C84239 + C84240 + C84241) * C153464) *
                         C153713) *
                        C153591 -
                    ((C84708 * C153464 + C93756 * C74249) * C153713 +
                     ((C83627 + C83626 + C83625) * C153464 +
                      (C83624 + C83623 + C83622) * C74249) *
                         C153853) *
                        C2030) *
                       C153837 +
                   ((((C83933 + C83932 + C83931) * C74249 +
                      (C83930 + C83929 + C83928) * C153464) *
                         C153853 +
                     (C94764 * C74249 + (C85047 + C85048 + C85049) * C153464) *
                         C153713) *
                        C2030 -
                    (((C83553 * C4957 + C85641 + C85641 + C83545 * C4963 +
                       C152059 * C3443 + C85642 + C85642 + C153674 * C3451 +
                       C152071 * C1459 + C85643 + C85643 + C153667 * C1469) *
                          C153464 +
                      (C94780 + C94779 + C94778) * C74249) *
                         C153713 +
                     ((C85049 + C85048 + C85047) * C153464 + C94768 * C74249) *
                         C153853) *
                        C153591) *
                       C153563) *
                      C153498)) /
                (p * q * std::sqrt(p + q));
    d2ee[26] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C152071 * C136 + C83556 + C83556 + C153667 * C152 +
              C152059 * C329 + C83557 + C83557 + C153674 * C353 +
              C83553 * C330 + C83558 + C83558 + C83545 * C354) *
                 C74249 +
             (C83622 + C83623 + C83624) * C153464) *
                C153853 +
            ((C93770 + C93771 + C93772) * C74249 + C93751 * C153464) *
                C153713) *
               C153910 -
           ((C93752 * C153464 + (C93773 + C93774 + C93775) * C74249) * C153713 +
            (C93756 * C153464 + (C93772 + C93771 + C93770) * C74249) *
                C153853) *
               C153911 +
           (((C93775 + C93774 + C93773) * C74249 + C93757 * C153464) * C153853 +
            ((C97361 + C97362 + C97363) * C74249 +
             (C93776 + C93777 + C93778) * C153464) *
                C153713) *
               C2546) *
              C153837 +
          ((((C94775 + C94776 + C94777) * C74249 + C94764 * C153464) * C153853 +
            ((C95579 + C95580 + C95581) * C74249 +
             (C94778 + C94779 + C94780) * C153464) *
                C153713) *
               C153911 -
           ((C94768 * C153464 + (C94777 + C94776 + C94775) * C74249) * C153713 +
            ((C83931 + C83932 + C83933) * C153464 +
             (C83553 * C1319 + C83874 + C83874 + C83545 * C1329 +
              C152059 * C330 + C83875 + C83875 + C153674 * C354 +
              C152071 * C329 + C83876 + C83876 + C153667 * C353) *
                 C74249) *
                C153853) *
               C153910 -
           (((C83553 * C31999 + C95567 + C95567 + C83545 * C32001 +
              C152059 * C6303 + C95568 + C95568 + C153674 * C6315 +
              C152071 * C6304 + C95569 + C95569 + C153667 * C6316) *
                 C153464 +
             (C83553 * C30191 + C95570 + C95570 + C83545 * C30195 +
              C152059 * C6305 + C95571 + C95571 + C153674 * C6317 +
              C152071 * C6306 + C95572 + C95572 + C153667 * C6318) *
                 C74249) *
                C153713 +
            ((C94780 + C94779 + C94778) * C153464 +
             (C95581 + C95580 + C95579) * C74249) *
                C153853) *
               C2546) *
              C153563) *
         C153492) /
        (p * q * std::sqrt(p + q));
    d2ee[27] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C152071 * C136 + C83556 + C83556 + C153667 * C152 +
              C152059 * C329 + C83557 + C83557 + C153674 * C353 +
              C83553 * C330 + C83558 + C83558 + C83545 * C354) *
                 C74249 +
             (C83622 + C83623 + C83624) * C153464) *
                C153853 +
            ((C93770 + C93771 + C93772) * C74249 + C93751 * C153464) *
                C153713) *
               C2030 -
           ((C93752 * C153464 + (C93773 + C93774 + C93775) * C74249) * C153713 +
            (C93756 * C153464 + (C93772 + C93771 + C93770) * C74249) *
                C153853) *
               C153591) *
              C320 +
          ((((C94775 + C94776 + C94777) * C74249 + C94764 * C153464) * C153853 +
            ((C95579 + C95580 + C95581) * C74249 +
             (C94778 + C94779 + C94780) * C153464) *
                C153713) *
               C153591 -
           ((C94768 * C153464 + (C94777 + C94776 + C94775) * C74249) * C153713 +
            ((C83931 + C83932 + C83933) * C153464 +
             (C83553 * C1319 + C83874 + C83874 + C83545 * C1329 +
              C152059 * C330 + C83875 + C83875 + C153674 * C354 +
              C152071 * C329 + C83876 + C83876 + C153667 * C353) *
                 C74249) *
                C153853) *
               C2030) *
              C321 +
          ((((C152071 * C330 + C83877 + C83877 + C153667 * C354 +
              C152059 * C1319 + C83878 + C83878 + C153674 * C1329 +
              C83553 * C3127 + C83879 + C83879 + C83545 * C3135) *
                 C74249 +
             (C83934 + C83935 + C83936) * C153464) *
                C153853 +
            ((C96566 + C96567 + C96568) * C74249 +
             (C93433 + C93434 + C93435) * C153464) *
                C153713) *
               C2030 -
           (((C83553 * C28651 + C96554 + C96554 + C83545 * C28655 +
              C152059 * C4958 + C96555 + C96555 + C153674 * C4964 +
              C152071 * C3442 + C96556 + C96556 + C153667 * C3450) *
                 C153464 +
             (C83553 * C28650 + C96557 + C96557 + C83545 * C28654 +
              C152059 * C4959 + C96558 + C96558 + C153674 * C4965 +
              C152071 * C3441 + C96559 + C96559 + C153667 * C3449) *
                 C74249) *
                C153713 +
            ((C93435 + C93434 + C93433) * C153464 +
             (C96568 + C96567 + C96566) * C74249) *
                C153853) *
               C153591) *
              C322) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C152071 * C136 + C83556 + C83556 + C153667 * C152 +
              C152059 * C329 + C83557 + C83557 + C153674 * C353 +
              C83553 * C330 + C83558 + C83558 + C83545 * C354) *
                 C74249 +
             (C83622 + C83623 + C83624) * C153464) *
                C153853 +
            ((C93770 + C93771 + C93772) * C74249 + C93751 * C153464) *
                C153713) *
               C2030 -
           ((C93752 * C153464 + (C93773 + C93774 + C93775) * C74249) * C153713 +
            (C93756 * C153464 + (C93772 + C93771 + C93770) * C74249) *
                C153853) *
               C153591) *
              C153511 * C1225 +
          (((C93751 * C74249 + C94360 * C153464) * C153853 +
            (C93757 * C74249 + (C84239 + C84240 + C84241) * C153464) *
                C153713) *
               C153591 -
           ((C84708 * C153464 + C93756 * C74249) * C153713 +
            ((C83627 + C83626 + C83625) * C153464 +
             (C83624 + C83623 + C83622) * C74249) *
                C153853) *
               C2030) *
              C153511 * C1226 +
          (((C83636 * C74249 + (C83630 + C83629 + C83628) * C153464) * C153853 +
            (C94360 * C74249 + (C84715 + C84716 + C84717) * C153464) *
                C153713) *
               C2030 -
           (((C83553 * C3444 + C84203 + C84203 + C83545 * C3452 +
              C152059 * C1458 + C84204 + C84204 + C153674 * C1468 +
              C152071 * C546 + C84205 + C84205 + C153667 * C570) *
                 C153464 +
             (C84241 + C84240 + C84239) * C74249) *
                C153713 +
            ((C84717 + C84716 + C84715) * C153464 + C84708 * C74249) *
                C153853) *
               C153591) *
              C153511 * C1227)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C152071 * C136 + C83556 + C83556 + C153667 * C152 +
             C152059 * C329 + C83557 + C83557 + C153674 * C353 + C83553 * C330 +
             C83558 + C83558 + C83545 * C354) *
                C74249 +
            (C83622 + C83623 + C83624) * C153464) *
               C153853 +
           ((C93770 + C93771 + C93772) * C74249 + C93751 * C153464) * C153713) *
              C2236 -
          ((C93752 * C153464 + (C93773 + C93774 + C93775) * C74249) * C153713 +
           (C93756 * C153464 + (C93772 + C93771 + C93770) * C74249) * C153853) *
              C2237 +
          (((C93775 + C93774 + C93773) * C74249 + C93757 * C153464) * C153853 +
           ((C97361 + C97362 + C97363) * C74249 +
            (C93776 + C93777 + C93778) * C153464) *
               C153713) *
              C2238 -
          (((C83553 * C31196 + C97349 + C97349 + C83545 * C31200 +
             C152059 * C9116 + C97350 + C97350 + C153674 * C9122 +
             C152071 * C7674 + C97351 + C97351 + C153667 * C7682) *
                C153464 +
            (C83553 * C31195 + C97352 + C97352 + C83545 * C31199 +
             C152059 * C9117 + C97353 + C97353 + C153674 * C9123 +
             C152071 * C7673 + C97354 + C97354 + C153667 * C7681) *
                C74249) *
               C153713 +
           ((C93778 + C93777 + C93776) * C153464 +
            (C97363 + C97362 + C97361) * C74249) *
               C153853) *
              C2239) *
         C153511 * C153492) /
            (p * q * std::sqrt(p + q));
    d2ee[28] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C152071 * C136 + C83556 + C83556 + C153667 * C152 +
              C152059 * C329 + C83557 + C83557 + C153674 * C353 +
              C83553 * C330 + C83558 + C83558 + C83545 * C354) *
                 C74249 +
             (C83622 + C83623 + C83624) * C153464) *
                C153853 +
            ((C93770 + C93771 + C93772) * C74249 + C93751 * C153464) *
                C153713) *
               C153910 -
           ((C93752 * C153464 + (C93773 + C93774 + C93775) * C74249) * C153713 +
            (C93756 * C153464 + (C93772 + C93771 + C93770) * C74249) *
                C153853) *
               C153911 +
           (((C93775 + C93774 + C93773) * C74249 + C93757 * C153464) * C153853 +
            ((C97361 + C97362 + C97363) * C74249 +
             (C93776 + C93777 + C93778) * C153464) *
                C153713) *
               C2546) *
              C153511 * C153829 +
          (((C93751 * C74249 + C94360 * C153464) * C153853 +
            (C93757 * C74249 + (C84239 + C84240 + C84241) * C153464) *
                C153713) *
               C153911 -
           ((C84708 * C153464 + C93756 * C74249) * C153713 +
            ((C83627 + C83626 + C83625) * C153464 +
             (C83624 + C83623 + C83622) * C74249) *
                C153853) *
               C153910 -
           (((C83553 * C6301 + C86967 + C86967 + C83545 * C6313 +
              C152059 * C6302 + C86968 + C86968 + C153674 * C6314 +
              C152071 * C2242 + C86969 + C86969 + C153667 * C2252) *
                 C153464 +
             (C93778 + C93777 + C93776) * C74249) *
                C153713 +
            ((C84241 + C84240 + C84239) * C153464 + C93752 * C74249) *
                C153853) *
               C2546) *
              C153511 * C153498)) /
        (p * q * std::sqrt(p + q));
    d2ee[29] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C152071 * C136 + C83556 + C83556 + C153667 * C152 +
              C152059 * C329 + C83557 + C83557 + C153674 * C353 +
              C83553 * C330 + C83558 + C83558 + C83545 * C354) *
                 C74249 +
             (C83622 + C83623 + C83624) * C153464) *
                C153853 +
            ((C93770 + C93771 + C93772) * C74249 + C93751 * C153464) *
                C153713) *
               C2030 -
           ((C93752 * C153464 + (C93773 + C93774 + C93775) * C74249) * C153713 +
            (C93756 * C153464 + (C93772 + C93771 + C93770) * C74249) *
                C153853) *
               C153591) *
              C153511 * C1225 +
          (((C93751 * C74249 + C94360 * C153464) * C153853 +
            (C93757 * C74249 + (C84239 + C84240 + C84241) * C153464) *
                C153713) *
               C153591 -
           ((C84708 * C153464 + C93756 * C74249) * C153713 +
            ((C83627 + C83626 + C83625) * C153464 +
             (C83624 + C83623 + C83622) * C74249) *
                C153853) *
               C2030) *
              C153511 * C1226 +
          (((C83636 * C74249 + (C83630 + C83629 + C83628) * C153464) * C153853 +
            (C94360 * C74249 + (C84715 + C84716 + C84717) * C153464) *
                C153713) *
               C2030 -
           (((C83553 * C3444 + C84203 + C84203 + C83545 * C3452 +
              C152059 * C1458 + C84204 + C84204 + C153674 * C1468 +
              C152071 * C546 + C84205 + C84205 + C153667 * C570) *
                 C153464 +
             (C84241 + C84240 + C84239) * C74249) *
                C153713 +
            ((C84717 + C84716 + C84715) * C153464 + C84708 * C74249) *
                C153853) *
               C153591) *
              C153511 * C1227)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C152071 * C136 + C83556 + C83556 + C153667 * C152 +
              C152059 * C329 + C83557 + C83557 + C153674 * C353 +
              C83553 * C330 + C83558 + C83558 + C83545 * C354) *
                 C74249 +
             (C83622 + C83623 + C83624) * C153464) *
                C153853 +
            ((C93770 + C93771 + C93772) * C74249 + C93751 * C153464) *
                C153713) *
               C2030 -
           ((C93752 * C153464 + (C93773 + C93774 + C93775) * C74249) * C153713 +
            (C93756 * C153464 + (C93772 + C93771 + C93770) * C74249) *
                C153853) *
               C153591) *
              C320 +
          ((((C94775 + C94776 + C94777) * C74249 + C94764 * C153464) * C153853 +
            ((C95579 + C95580 + C95581) * C74249 +
             (C94778 + C94779 + C94780) * C153464) *
                C153713) *
               C153591 -
           ((C94768 * C153464 + (C94777 + C94776 + C94775) * C74249) * C153713 +
            ((C83931 + C83932 + C83933) * C153464 +
             (C83553 * C1319 + C83874 + C83874 + C83545 * C1329 +
              C152059 * C330 + C83875 + C83875 + C153674 * C354 +
              C152071 * C329 + C83876 + C83876 + C153667 * C353) *
                 C74249) *
                C153853) *
               C2030) *
              C321 +
          ((((C152071 * C330 + C83877 + C83877 + C153667 * C354 +
              C152059 * C1319 + C83878 + C83878 + C153674 * C1329 +
              C83553 * C3127 + C83879 + C83879 + C83545 * C3135) *
                 C74249 +
             (C83934 + C83935 + C83936) * C153464) *
                C153853 +
            ((C96566 + C96567 + C96568) * C74249 +
             (C93433 + C93434 + C93435) * C153464) *
                C153713) *
               C2030 -
           (((C83553 * C28651 + C96554 + C96554 + C83545 * C28655 +
              C152059 * C4958 + C96555 + C96555 + C153674 * C4964 +
              C152071 * C3442 + C96556 + C96556 + C153667 * C3450) *
                 C153464 +
             (C83553 * C28650 + C96557 + C96557 + C83545 * C28654 +
              C152059 * C4959 + C96558 + C96558 + C153674 * C4965 +
              C152071 * C3441 + C96559 + C96559 + C153667 * C3449) *
                 C74249) *
                C153713 +
            ((C93435 + C93434 + C93433) * C153464 +
             (C96568 + C96567 + C96566) * C74249) *
                C153853) *
               C153591) *
              C322) *
         C153492) /
            (p * q * std::sqrt(p + q));
    d2ee[30] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C74251 * C136 + C74260 + C74260 + C153932 * C152 + C74253 * C329 +
             C74261 + C74261 + C153928 * C353 + C74255 * C330 + C74262 +
             C74262 + C153918 * C354 + C74257 * C1319 + C74263 + C74263 +
             C153860 * C1329) *
                C74249 +
            (C74328 + C74329 + C74330 + C74331) * C153464) *
               C153626 * C153527 * C153837 -
           ((C74590 + C74591 + C74592 + C74593) * C153464 +
            (C74257 * C3127 + C74546 + C74546 + C153860 * C3135 +
             C74255 * C1319 + C74547 + C74547 + C153918 * C1329 +
             C74253 * C330 + C74548 + C74548 + C153928 * C354 + C74251 * C329 +
             C74549 + C74549 + C153932 * C353) *
                C74249) *
               C153626 * C153527 * C153563) *
              C153906 +
          (((C74593 + C74592 + C74591 + C74590) * C74249 +
            (C75070 + C75071 + C75072 + C75073) * C153464) *
               C153626 * C153527 * C153563 -
           ((C74332 + C74333 + C74334 + C74335) * C153464 +
            (C74331 + C74330 + C74329 + C74328) * C74249) *
               C153626 * C153527 * C153837) *
              C153907 +
          (((C74335 + C74334 + C74333 + C74332) * C74249 +
            (C74336 + C74337 + C74338 + C74339) * C153464) *
               C153626 * C153527 * C153837 -
           ((C74257 * C3130 + C75058 + C75058 + C153860 * C3138 +
             C74255 * C1316 + C75059 + C75059 + C153918 * C1326 +
             C74253 * C333 + C75060 + C75060 + C153928 * C357 + C74251 * C326 +
             C75061 + C75061 + C153932 * C350) *
                C153464 +
            (C75073 + C75072 + C75071 + C75070) * C74249) *
               C153626 * C153527 * C153563) *
              C752)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
             C70427 + C70427 + C153671 * C353) *
                C153931 +
            (C70480 + C70481) * C153924 + C70490 * C153905 + C70491 * C153852) *
               C153626 * C153527 * C153837 -
           (C71236 * C153852 + C71237 * C153905 + (C70760 + C70761) * C153924 +
            (C70423 * C330 + C70706 + C70706 + C153671 * C354 + C70421 * C329 +
             C70707 + C70707 + C70415 * C353) *
                C153931) *
               C153626 * C153527 * C153563) *
              C153906 +
          (((C70761 + C70760) * C153931 + (C70759 + C70758) * C153924 +
            (C70757 + C70756) * C153905 + (C71248 + C71249) * C153852) *
               C153626 * C153527 * C153563 -
           (C70492 * C153852 + C70493 * C153905 + (C70483 + C70482) * C153924 +
            (C70481 + C70480) * C153931) *
               C153626 * C153527 * C153837) *
              C153907 +
          ((C70490 * C153931 + C70491 * C153924 + (C70487 + C70486) * C153905 +
            (C70488 + C70489) * C153852) *
               C153626 * C153527 * C153837 -
           ((C70423 * C336 + C71242 + C71242 + C153671 * C360 + C70421 * C335 +
             C71243 + C71243 + C70415 * C359) *
                C153852 +
            (C71249 + C71248) * C153905 + C71236 * C153924 + C71237 * C153931) *
               C153626 * C153527 * C153563) *
              C752)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
              C70427 + C70427 + C153671 * C353) *
                 C74249 +
             (C70480 + C70481) * C153464) *
                C153926 +
            ((C78815 + C78816) * C74249 + C78756 * C153464) * C153915 +
            C78831 * C153890) *
               C153527 * C153837 -
           (((C78456 + C78457) * C153464 +
             (C70423 * C3441 + C72288 + C72288 + C153671 * C3449 +
              C70421 * C1461 + C72289 + C72289 + C70415 * C1471) *
                 C74249) *
                C153890 +
            ((C71751 + C71750) * C153464 +
             (C70423 * C1892 + C71717 + C71717 + C153671 * C1902 +
              C70421 * C1057 + C71716 + C71716 + C70415 * C1069) *
                 C74249) *
                C153915 +
            ((C70760 + C70761) * C153464 +
             (C70423 * C330 + C70706 + C70706 + C153671 * C354 + C70421 * C329 +
              C70707 + C70707 + C70415 * C353) *
                 C74249) *
                C153926) *
               C153527 * C153563) *
              C153906 +
          ((((C70761 + C70760) * C74249 + (C70759 + C70758) * C153464) *
                C153926 +
            ((C71750 + C71751) * C74249 + (C71752 + C71753) * C153464) *
                C153915 +
            ((C78457 + C78456) * C74249 + (C79130 + C79131) * C153464) *
                C153890) *
               C153527 * C153563 -
           (C78814 * C153890 + (C71445 * C153464 + C78771 * C74249) * C153915 +
            ((C70483 + C70482) * C153464 + (C70481 + C70480) * C74249) *
                C153926) *
               C153527 * C153837) *
              C153907 +
          (((C70490 * C74249 + C70491 * C153464) * C153926 +
            ((C71033 + C71032) * C74249 + (C71031 + C71030) * C153464) *
                C153915 +
            ((C71038 + C71039) * C74249 + (C71040 + C71041) * C153464) *
                C153890) *
               C153527 * C153837 -
           (((C70423 * C3444 + C72282 + C72282 + C153671 * C3452 +
              C70421 * C1458 + C72283 + C72283 + C70415 * C1468) *
                 C153464 +
             (C79131 + C79130) * C74249) *
                C153890 +
            ((C71755 + C71754) * C153464 + (C71753 + C71752) * C74249) *
                C153915 +
            (C71236 * C153464 + C71237 * C74249) * C153926) *
               C153527 * C153563) *
              C752)) /
            (p * q * std::sqrt(p + q));
    d2ee[31] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C74251 * C136 + C74260 + C74260 + C153932 * C152 + C74253 * C329 +
              C74261 + C74261 + C153928 * C353 + C74255 * C330 + C74262 +
              C74262 + C153918 * C354 + C74257 * C1319 + C74263 + C74263 +
              C153860 * C1329) *
                 C74249 +
             (C74328 + C74329 + C74330 + C74331) * C153464) *
                C153626 * C153838 -
            ((C74848 + C74849 + C74850 + C74851) * C153464 +
             (C74257 * C4303 + C74804 + C74804 + C153860 * C4311 +
              C74255 * C1892 + C74805 + C74805 + C153918 * C1902 +
              C74253 * C1057 + C74806 + C74806 + C153928 * C1069 +
              C74251 * C542 + C74807 + C74807 + C153932 * C566) *
                 C74249) *
                C153626 * C153591) *
               C153837 +
           (((C74251 * C1057 + C75550 + C75550 + C153932 * C1069 +
              C74253 * C1892 + C75551 + C75551 + C153928 * C1902 +
              C74255 * C4303 + C75552 + C75552 + C153918 * C4311 +
              C74257 * C5703 + C75553 + C75553 + C153860 * C5709) *
                 C74249 +
             (C75578 + C75579 + C75580 + C75581) * C153464) *
                C153626 * C153591 -
            ((C74590 + C74591 + C74592 + C74593) * C153464 +
             (C74257 * C3127 + C74546 + C74546 + C153860 * C3135 +
              C74255 * C1319 + C74547 + C74547 + C153918 * C1329 +
              C74253 * C330 + C74548 + C74548 + C153928 * C354 + C74251 * C329 +
              C74549 + C74549 + C153932 * C353) *
                 C74249) *
                C153626 * C153838) *
               C153563) *
              C323 +
          ((((C74851 + C74850 + C74849 + C74848) * C74249 +
             (C75288 + C75289 + C75290 + C75291) * C153464) *
                C153626 * C153591 -
            ((C74332 + C74333 + C74334 + C74335) * C153464 +
             (C74331 + C74330 + C74329 + C74328) * C74249) *
                C153626 * C153838) *
               C153837 +
           (((C74593 + C74592 + C74591 + C74590) * C74249 +
             (C75070 + C75071 + C75072 + C75073) * C153464) *
                C153626 * C153838 -
            ((C74257 * C5701 + C75566 + C75566 + C153860 * C5707 +
              C74255 * C4305 + C75567 + C75567 + C153918 * C4313 +
              C74253 * C1890 + C75568 + C75568 + C153928 * C1900 +
              C74251 * C1059 + C75569 + C75569 + C153932 * C1071) *
                 C153464 +
             (C75581 + C75580 + C75579 + C75578) * C74249) *
                C153626 * C153591) *
               C153563) *
              C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
              C70427 + C70427 + C153671 * C353) *
                 C153931 +
             (C70480 + C70481) * C153924 + C70490 * C153905 +
             C70491 * C153852) *
                C153626 * C153838 -
            (C71444 * C153852 + C71445 * C153905 + (C71034 + C71035) * C153924 +
             (C70423 * C1057 + C70980 + C70980 + C153671 * C1069 +
              C70421 * C542 + C70981 + C70981 + C70415 * C566) *
                 C153931) *
                C153626 * C153591) *
               C153837 +
           (((C70421 * C1057 + C71716 + C71716 + C70415 * C1069 +
              C70423 * C1892 + C71717 + C71717 + C153671 * C1902) *
                 C153931 +
             (C71750 + C71751) * C153924 + (C71752 + C71753) * C153905 +
             (C71754 + C71755) * C153852) *
                C153626 * C153591 -
            (C71236 * C153852 + C71237 * C153905 + (C70760 + C70761) * C153924 +
             (C70423 * C330 + C70706 + C70706 + C153671 * C354 + C70421 * C329 +
              C70707 + C70707 + C70415 * C353) *
                 C153931) *
                C153626 * C153838) *
               C153563) *
              C323 +
          ((((C71035 + C71034) * C153931 + (C71033 + C71032) * C153924 +
             (C71031 + C71030) * C153905 + (C71456 + C71457) * C153852) *
                C153626 * C153591 -
            (C70492 * C153852 + C70493 * C153905 + (C70483 + C70482) * C153924 +
             (C70481 + C70480) * C153931) *
                C153626 * C153838) *
               C153837 +
           (((C70761 + C70760) * C153931 + (C70759 + C70758) * C153924 +
             (C70757 + C70756) * C153905 + (C71248 + C71249) * C153852) *
                C153626 * C153838 -
            ((C70423 * C1888 + C71736 + C71736 + C153671 * C1898 +
              C70421 * C1061 + C71737 + C71737 + C70415 * C1073) *
                 C153852 +
             (C71755 + C71754) * C153905 + (C71753 + C71752) * C153924 +
             (C71751 + C71750) * C153931) *
                C153626 * C153591) *
               C153563) *
              C153498)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
               C70427 + C70427 + C153671 * C353) *
                  C74249 +
              (C70480 + C70481) * C153464) *
                 C153926 +
             ((C78815 + C78816) * C74249 + C78756 * C153464) * C153915 +
             C78831 * C153890) *
                C153838 -
            ((C78828 * C153464 + (C78821 + C78822) * C74249) * C153890 +
             (C78770 * C153464 + (C78818 + C78817) * C74249) * C153915 +
             (C78771 * C153464 + (C78816 + C78815) * C74249) * C153926) *
                C153591) *
               C153837 +
           ((((C79844 + C79845) * C74249 + C79814 * C153464) * C153926 +
             ((C79846 + C79847) * C74249 + C79819 * C153464) * C153915 +
             ((C70421 * C6306 + C79820 + C79820 + C70415 * C6318 +
               C70423 * C6305 + C79821 + C79821 + C153671 * C6317) *
                  C74249 +
              (C79848 + C79849) * C153464) *
                 C153890) *
                C153591 -
            ((C79828 * C153464 + (C79847 + C79846) * C74249) * C153890 +
             (C79829 * C153464 + (C79845 + C79844) * C74249) * C153915 +
             ((C70760 + C70761) * C153464 +
              (C70423 * C330 + C70706 + C70706 + C153671 * C354 +
               C70421 * C329 + C70707 + C70707 + C70415 * C353) *
                  C74249) *
                 C153926) *
                C153838) *
               C153563) *
              C323 +
          ((((C78756 * C74249 + C79422 * C153464) * C153926 +
             (C78761 * C74249 + C79423 * C153464) * C153915 +
             (C78829 * C74249 + (C78825 + C78826) * C153464) * C153890) *
                C153591 -
            (C78814 * C153890 + (C71445 * C153464 + C78771 * C74249) * C153915 +
             ((C70483 + C70482) * C153464 + (C70481 + C70480) * C74249) *
                 C153926) *
                C153838) *
               C153837 +
           ((((C70761 + C70760) * C74249 + (C70759 + C70758) * C153464) *
                 C153926 +
             (C79814 * C74249 + (C71752 + C71753) * C153464) * C153915 +
             (C79819 * C74249 + (C79130 + C79131) * C153464) * C153890) *
                C153838 -
            (((C70423 * C6301 + C79830 + C79830 + C153671 * C6313 +
               C70421 * C6302 + C79831 + C79831 + C70415 * C6314) *
                  C153464 +
              (C79849 + C79848) * C74249) *
                 C153890 +
             ((C79131 + C79130) * C153464 + C79828 * C74249) * C153915 +
             ((C71753 + C71752) * C153464 + C79829 * C74249) * C153926) *
                C153591) *
               C153563) *
              C153498)) /
            (p * q * std::sqrt(p + q));
    d2ee[32] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((C70421 * C136 + C70426 + C70426 + C70415 * C152 +
                C70423 * C329 + C70427 + C70427 + C153671 * C353) *
                   C153931 +
               (C70480 + C70481) * C153924 + C70490 * C153905 +
               C70491 * C153852) *
                  C153626 * C153527 * C153511 * C130 -
              (C70492 * C153852 + C70493 * C153905 +
               (C70483 + C70482) * C153924 + (C70481 + C70480) * C153931) *
                  C153626 * C153527 * C153511 * C131 +
              (C70490 * C153931 + C70491 * C153924 +
               (C70487 + C70486) * C153905 + (C70488 + C70489) * C153852) *
                  C153626 * C153527 * C153511 * C132 -
              ((C70423 * C753 + C70458 + C70458 + C153671 * C755 +
                C70421 * C142 + C70459 + C70459 + C70415 * C158) *
                   C153852 +
               (C70489 + C70488) * C153905 + C70492 * C153924 +
               C70493 * C153931) *
                  C153626 * C153527 * C153511 * C133) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C70421 * C136 + C70426 + C70426 + C70415 * C152 +
                 C70423 * C329 + C70427 + C70427 + C153671 * C353) *
                    C153931 +
                (C70480 + C70481) * C153924 + C70490 * C153905 +
                C70491 * C153852) *
                   C153626 * C153527 * C320 -
               ((C70756 + C70757) * C153852 + (C70758 + C70759) * C153905 +
                (C70760 + C70761) * C153924 +
                (C70423 * C330 + C70706 + C70706 + C153671 * C354 +
                 C70421 * C329 + C70707 + C70707 + C70415 * C353) *
                    C153931) *
                   C153626 * C153527 * C321 +
               ((C70421 * C330 + C70708 + C70708 + C70415 * C354 +
                 C70423 * C1319 + C70709 + C70709 + C153671 * C1329) *
                    C153931 +
                (C70762 + C70763) * C153924 + (C70764 + C70765) * C153905 +
                (C70766 + C70767) * C153852) *
                   C153626 * C153527 * C322) *
                  C323 +
              (((C70761 + C70760) * C153931 + (C70759 + C70758) * C153924 +
                (C70757 + C70756) * C153905 +
                (C70421 * C325 + C70728 + C70728 + C70415 * C349 +
                 C70423 * C334 + C70729 + C70729 + C153671 * C358) *
                    C153852) *
                   C153626 * C153527 * C321 -
               (C70492 * C153852 + C70493 * C153905 +
                (C70483 + C70482) * C153924 + (C70481 + C70480) * C153931) *
                   C153626 * C153527 * C320 -
               ((C70423 * C1315 + C70730 + C70730 + C153671 * C1325 +
                 C70421 * C334 + C70731 + C70731 + C70415 * C358) *
                    C153852 +
                (C70767 + C70766) * C153905 + (C70765 + C70764) * C153924 +
                (C70763 + C70762) * C153931) *
                   C153626 * C153527 * C322) *
                  C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
             C70427 + C70427 + C153671 * C353) *
                C153931 +
            (C70480 + C70481) * C153924 + C70490 * C153905 + C70491 * C153852) *
               C153626 * C535 -
           ((C71030 + C71031) * C153852 + (C71032 + C71033) * C153905 +
            (C71034 + C71035) * C153924 +
            (C70423 * C1057 + C70980 + C70980 + C153671 * C1069 +
             C70421 * C542 + C70981 + C70981 + C70415 * C566) *
                C153931) *
               C153626 * C536 +
           ((C70421 * C543 + C70982 + C70982 + C70415 * C567 + C70423 * C1461 +
             C70983 + C70983 + C153671 * C1471) *
                C153931 +
            (C71036 + C71037) * C153924 + (C71038 + C71039) * C153905 +
            (C71040 + C71041) * C153852) *
               C153626 * C537) *
              C153511 * C323 +
          (((C71035 + C71034) * C153931 + (C71033 + C71032) * C153924 +
            (C71031 + C71030) * C153905 +
            (C70421 * C538 + C71002 + C71002 + C70415 * C562 + C70423 * C1061 +
             C71003 + C71003 + C153671 * C1073) *
                C153852) *
               C153626 * C536 -
           (C70492 * C153852 + C70493 * C153905 + (C70483 + C70482) * C153924 +
            (C70481 + C70480) * C153931) *
               C153626 * C535 -
           ((C70423 * C1457 + C71004 + C71004 + C153671 * C1467 +
             C70421 * C547 + C71005 + C71005 + C70415 * C571) *
                C153852 +
            (C71041 + C71040) * C153905 + (C71039 + C71038) * C153924 +
            (C71037 + C71036) * C153931) *
               C153626 * C537) *
              C153511 * C153498)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C74251 * C136 + C74260 + C74260 + C153932 * C152 + C74253 * C329 +
            C74261 + C74261 + C153928 * C353 + C74255 * C330 + C74262 + C74262 +
            C153918 * C354 + C74257 * C1319 + C74263 + C74263 +
            C153860 * C1329) *
               C74249 +
           (C74328 + C74329 + C74330 + C74331) * C153464) *
              C153626 * C153527 * C153511 * C130 -
          ((C74332 + C74333 + C74334 + C74335) * C153464 +
           (C74331 + C74330 + C74329 + C74328) * C74249) *
              C153626 * C153527 * C153511 * C131 +
          ((C74335 + C74334 + C74333 + C74332) * C74249 +
           (C74336 + C74337 + C74338 + C74339) * C153464) *
              C153626 * C153527 * C153511 * C132 -
          ((C74257 * C1315 + C74300 + C74300 + C153860 * C1325 + C74255 * C334 +
            C74301 + C74301 + C153918 * C358 + C74253 * C325 + C74302 + C74302 +
            C153928 * C349 + C74251 * C140 + C74303 + C74303 + C153932 * C156) *
               C153464 +
           (C74339 + C74338 + C74337 + C74336) * C74249) *
              C153626 * C153527 * C153511 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C74251 * C136 + C74260 + C74260 + C153932 * C152 + C74253 * C329 +
             C74261 + C74261 + C153928 * C353 + C74255 * C330 + C74262 +
             C74262 + C153918 * C354 + C74257 * C1319 + C74263 + C74263 +
             C153860 * C1329) *
                C74249 +
            (C74328 + C74329 + C74330 + C74331) * C153464) *
               C153626 * C153527 * C320 -
           ((C74590 + C74591 + C74592 + C74593) * C153464 +
            (C74257 * C3127 + C74546 + C74546 + C153860 * C3135 +
             C74255 * C1319 + C74547 + C74547 + C153918 * C1329 +
             C74253 * C330 + C74548 + C74548 + C153928 * C354 + C74251 * C329 +
             C74549 + C74549 + C153932 * C353) *
                C74249) *
               C153626 * C153527 * C321 +
           ((C74251 * C330 + C74550 + C74550 + C153932 * C354 + C74253 * C1319 +
             C74551 + C74551 + C153928 * C1329 + C74255 * C3127 + C74552 +
             C74552 + C153918 * C3135 + C74257 * C4723 + C74553 + C74553 +
             C153860 * C4729) *
                C74249 +
            (C74594 + C74595 + C74596 + C74597) * C153464) *
               C153626 * C153527 * C322) *
              C323 +
          (((C74593 + C74592 + C74591 + C74590) * C74249 +
            (C74251 * C327 + C74566 + C74566 + C153932 * C351 + C74253 * C332 +
             C74567 + C74567 + C153928 * C356 + C74255 * C1317 + C74568 +
             C74568 + C153918 * C1327 + C74257 * C3129 + C74569 + C74569 +
             C153860 * C3137) *
                C153464) *
               C153626 * C153527 * C321 -
           ((C74332 + C74333 + C74334 + C74335) * C153464 +
            (C74331 + C74330 + C74329 + C74328) * C74249) *
               C153626 * C153527 * C320 -
           ((C74257 * C4721 + C74570 + C74570 + C153860 * C4727 +
             C74255 * C3129 + C74571 + C74571 + C153918 * C3137 +
             C74253 * C1317 + C74572 + C74572 + C153928 * C1327 +
             C74251 * C332 + C74573 + C74573 + C153932 * C356) *
                C153464 +
            (C74597 + C74596 + C74595 + C74594) * C74249) *
               C153626 * C153527 * C322) *
              C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C74251 * C136 + C74260 + C74260 + C153932 * C152 + C74253 * C329 +
             C74261 + C74261 + C153928 * C353 + C74255 * C330 + C74262 +
             C74262 + C153918 * C354 + C74257 * C1319 + C74263 + C74263 +
             C153860 * C1329) *
                C74249 +
            (C74328 + C74329 + C74330 + C74331) * C153464) *
               C153626 * C535 -
           ((C74848 + C74849 + C74850 + C74851) * C153464 +
            (C74257 * C4303 + C74804 + C74804 + C153860 * C4311 +
             C74255 * C1892 + C74805 + C74805 + C153918 * C1902 +
             C74253 * C1057 + C74806 + C74806 + C153928 * C1069 +
             C74251 * C542 + C74807 + C74807 + C153932 * C566) *
                C74249) *
               C153626 * C536 +
           ((C74251 * C543 + C74808 + C74808 + C153932 * C567 + C74253 * C1461 +
             C74809 + C74809 + C153928 * C1471 + C74255 * C3441 + C74810 +
             C74810 + C153918 * C3449 + C74257 * C4959 + C74811 + C74811 +
             C153860 * C4965) *
                C74249 +
            (C74852 + C74853 + C74854 + C74855) * C153464) *
               C153626 * C537) *
              C153511 * C323 +
          (((C74851 + C74850 + C74849 + C74848) * C74249 +
            (C74251 * C540 + C74824 + C74824 + C153932 * C564 + C74253 * C1059 +
             C74825 + C74825 + C153928 * C1071 + C74255 * C1890 + C74826 +
             C74826 + C153918 * C1900 + C74257 * C4305 + C74827 + C74827 +
             C153860 * C4313) *
                C153464) *
               C153626 * C536 -
           ((C74332 + C74333 + C74334 + C74335) * C153464 +
            (C74331 + C74330 + C74329 + C74328) * C74249) *
               C153626 * C535 -
           ((C74257 * C4957 + C74828 + C74828 + C153860 * C4963 +
             C74255 * C3443 + C74829 + C74829 + C153918 * C3451 +
             C74253 * C1459 + C74830 + C74830 + C153928 * C1469 +
             C74251 * C545 + C74831 + C74831 + C153932 * C569) *
                C153464 +
            (C74855 + C74854 + C74853 + C74852) * C74249) *
               C153626 * C537) *
              C153511 * C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
             C70427 + C70427 + C153671 * C353) *
                C74249 +
            (C70480 + C70481) * C153464) *
               C153926 +
           ((C70421 * C542 + C70981 + C70981 + C70415 * C566 + C70423 * C1057 +
             C70980 + C70980 + C153671 * C1069) *
                C74249 +
            (C71035 + C71034) * C153464) *
               C153915 +
           ((C70421 * C543 + C70982 + C70982 + C70415 * C567 + C70423 * C1461 +
             C70983 + C70983 + C153671 * C1471) *
                C74249 +
            (C71036 + C71037) * C153464) *
               C153890) *
              C153527 * C153511 * C130 -
          (((C71039 + C71038) * C153464 + (C71037 + C71036) * C74249) *
               C153890 +
           (C71445 * C153464 + (C71034 + C71035) * C74249) * C153915 +
           ((C70483 + C70482) * C153464 + (C70481 + C70480) * C74249) *
               C153926) *
              C153527 * C153511 * C131 +
          ((C70490 * C74249 + C70491 * C153464) * C153926 +
           ((C71033 + C71032) * C74249 + (C71031 + C71030) * C153464) *
               C153915 +
           ((C71038 + C71039) * C74249 + (C71040 + C71041) * C153464) *
               C153890) *
              C153527 * C153511 * C132 -
          (((C70423 * C1457 + C71004 + C71004 + C153671 * C1467 +
             C70421 * C547 + C71005 + C71005 + C70415 * C571) *
                C153464 +
            (C71041 + C71040) * C74249) *
               C153890 +
           ((C71457 + C71456) * C153464 + C71444 * C74249) * C153915 +
           (C70492 * C153464 + C70493 * C74249) * C153926) *
              C153527 * C153511 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
              C70427 + C70427 + C153671 * C353) *
                 C74249 +
             (C70480 + C70481) * C153464) *
                C153926 +
            ((C70421 * C542 + C70981 + C70981 + C70415 * C566 + C70423 * C1057 +
              C70980 + C70980 + C153671 * C1069) *
                 C74249 +
             (C71035 + C71034) * C153464) *
                C153915 +
            ((C70421 * C543 + C70982 + C70982 + C70415 * C567 + C70423 * C1461 +
              C70983 + C70983 + C153671 * C1471) *
                 C74249 +
             (C71036 + C71037) * C153464) *
                C153890) *
               C153527 * C320 -
           (((C78456 + C78457) * C153464 +
             (C70423 * C3441 + C72288 + C72288 + C153671 * C3449 +
              C70421 * C1461 + C72289 + C72289 + C70415 * C1471) *
                 C74249) *
                C153890 +
            ((C71751 + C71750) * C153464 +
             (C70423 * C1892 + C71717 + C71717 + C153671 * C1902 +
              C70421 * C1057 + C71716 + C71716 + C70415 * C1069) *
                 C74249) *
                C153915 +
            ((C70760 + C70761) * C153464 +
             (C70423 * C330 + C70706 + C70706 + C153671 * C354 + C70421 * C329 +
              C70707 + C70707 + C70415 * C353) *
                 C74249) *
                C153926) *
               C153527 * C321 +
           (((C70421 * C330 + C70708 + C70708 + C70415 * C354 + C70423 * C1319 +
              C70709 + C70709 + C153671 * C1329) *
                 C74249 +
             (C70762 + C70763) * C153464) *
                C153926 +
            ((C70421 * C1892 + C72943 + C72943 + C70415 * C1902 +
              C70423 * C4303 + C72942 + C72942 + C153671 * C4311) *
                 C74249 +
             (C78458 + C78459) * C153464) *
                C153915 +
            ((C70421 * C3441 + C78434 + C78434 + C70415 * C3449 +
              C70423 * C4959 + C78435 + C78435 + C153671 * C4965) *
                 C74249 +
             (C78460 + C78461) * C153464) *
                C153890) *
               C153527 * C322) *
              C323 +
          ((((C70761 + C70760) * C74249 + (C70759 + C70758) * C153464) *
                C153926 +
            ((C71750 + C71751) * C74249 + (C71752 + C71753) * C153464) *
                C153915 +
            ((C78457 + C78456) * C74249 +
             (C70421 * C1459 + C72285 + C72285 + C70415 * C1469 +
              C70423 * C3443 + C72284 + C72284 + C153671 * C3451) *
                 C153464) *
                C153890) *
               C153527 * C321 -
           (((C71039 + C71038) * C153464 + (C71037 + C71036) * C74249) *
                C153890 +
            (C71445 * C153464 + (C71034 + C71035) * C74249) * C153915 +
            ((C70483 + C70482) * C153464 + (C70481 + C70480) * C74249) *
                C153926) *
               C153527 * C320 -
           (((C70423 * C4957 + C78442 + C78442 + C153671 * C4963 +
              C70421 * C3443 + C78443 + C78443 + C70415 * C3451) *
                 C153464 +
             (C78461 + C78460) * C74249) *
                C153890 +
            ((C70423 * C4305 + C72938 + C72938 + C153671 * C4313 +
              C70421 * C1890 + C72939 + C72939 + C70415 * C1900) *
                 C153464 +
             (C78459 + C78458) * C74249) *
                C153915 +
            ((C70765 + C70764) * C153464 + (C70763 + C70762) * C74249) *
                C153926) *
               C153527 * C322) *
              C153498)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
              C70427 + C70427 + C153671 * C353) *
                 C74249 +
             (C70480 + C70481) * C153464) *
                C153926 +
            ((C78815 + C78816) * C74249 + C78756 * C153464) * C153915 +
            C78831 * C153890) *
               C535 -
           ((C78828 * C153464 + (C78821 + C78822) * C74249) * C153890 +
            (C78770 * C153464 + (C78818 + C78817) * C74249) * C153915 +
            (C78771 * C153464 + (C78816 + C78815) * C74249) * C153926) *
               C536 +
           (C78831 * C153926 +
            ((C78822 + C78821) * C74249 + C78829 * C153464) * C153915 +
            ((C70421 * C7673 + C78772 + C78772 + C70415 * C7681 +
              C70423 * C9117 + C78773 + C78773 + C153671 * C9123) *
                 C74249 +
             (C78823 + C78824) * C153464) *
                C153890) *
               C537) *
              C153511 * C323 +
          (((C78756 * C74249 + (C71033 + C71032) * C153464) * C153926 +
            (C78761 * C74249 + (C71038 + C71039) * C153464) * C153915 +
            (C78829 * C74249 + (C78825 + C78826) * C153464) * C153890) *
               C536 -
           (C78814 * C153890 + (C71445 * C153464 + C78771 * C74249) * C153915 +
            ((C70483 + C70482) * C153464 + (C70481 + C70480) * C74249) *
                C153926) *
               C535 -
           (((C70423 * C9115 + C78785 + C78785 + C153671 * C9121 +
              C70421 * C7675 + C78786 + C78786 + C70415 * C7683) *
                 C153464 +
             (C78824 + C78823) * C74249) *
                C153890 +
            ((C78826 + C78825) * C153464 + C78828 * C74249) * C153915 +
            C78814 * C153926) *
               C537) *
              C153511 * C153498)) /
            (p * q * std::sqrt(p + q));
    d2ee[33] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C74251 * C136 + C74260 + C74260 + C153932 * C152 + C74253 * C329 +
             C74261 + C74261 + C153928 * C353 + C74255 * C330 + C74262 +
             C74262 + C153918 * C354 + C74257 * C1319 + C74263 + C74263 +
             C153860 * C1329) *
                C74249 +
            (C74328 + C74329 + C74330 + C74331) * C153464) *
               C153626 * C153838 -
           ((C74848 + C74849 + C74850 + C74851) * C153464 +
            (C74257 * C4303 + C74804 + C74804 + C153860 * C4311 +
             C74255 * C1892 + C74805 + C74805 + C153918 * C1902 +
             C74253 * C1057 + C74806 + C74806 + C153928 * C1069 +
             C74251 * C542 + C74807 + C74807 + C153932 * C566) *
                C74249) *
               C153626 * C153591) *
              C153511 * C153906 +
          (((C74851 + C74850 + C74849 + C74848) * C74249 +
            (C75288 + C75289 + C75290 + C75291) * C153464) *
               C153626 * C153591 -
           ((C74332 + C74333 + C74334 + C74335) * C153464 +
            (C74331 + C74330 + C74329 + C74328) * C74249) *
               C153626 * C153838) *
              C153511 * C153907 +
          (((C74335 + C74334 + C74333 + C74332) * C74249 +
            (C74336 + C74337 + C74338 + C74339) * C153464) *
               C153626 * C153838 -
           ((C74257 * C4306 + C75276 + C75276 + C153860 * C4314 +
             C74255 * C1889 + C75277 + C75277 + C153918 * C1899 +
             C74253 * C1060 + C75278 + C75278 + C153928 * C1072 +
             C74251 * C539 + C75279 + C75279 + C153932 * C563) *
                C153464 +
            (C75291 + C75290 + C75289 + C75288) * C74249) *
               C153626 * C153591) *
              C153511 * C752)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
             C70427 + C70427 + C153671 * C353) *
                C153931 +
            (C70480 + C70481) * C153924 + C70490 * C153905 + C70491 * C153852) *
               C153626 * C153838 -
           (C71444 * C153852 + C71445 * C153905 + (C71034 + C71035) * C153924 +
            (C70423 * C1057 + C70980 + C70980 + C153671 * C1069 +
             C70421 * C542 + C70981 + C70981 + C70415 * C566) *
                C153931) *
               C153626 * C153591) *
              C153511 * C153906 +
          (((C71035 + C71034) * C153931 + (C71033 + C71032) * C153924 +
            (C71031 + C71030) * C153905 + (C71456 + C71457) * C153852) *
               C153626 * C153591 -
           (C70492 * C153852 + C70493 * C153905 + (C70483 + C70482) * C153924 +
            (C70481 + C70480) * C153931) *
               C153626 * C153838) *
              C153511 * C153907 +
          ((C70490 * C153931 + C70491 * C153924 + (C70487 + C70486) * C153905 +
            (C70488 + C70489) * C153852) *
               C153626 * C153838 -
           ((C70423 * C1062 + C71450 + C71450 + C153671 * C1074 +
             C70421 * C548 + C71451 + C71451 + C70415 * C572) *
                C153852 +
            (C71457 + C71456) * C153905 + C71444 * C153924 + C71445 * C153931) *
               C153626 * C153591) *
              C153511 * C752)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
              C70427 + C70427 + C153671 * C353) *
                 C74249 +
             (C70480 + C70481) * C153464) *
                C153926 +
            ((C78815 + C78816) * C74249 + C78756 * C153464) * C153915 +
            C78831 * C153890) *
               C153838 -
           ((C78828 * C153464 + (C78821 + C78822) * C74249) * C153890 +
            (C78770 * C153464 + (C78818 + C78817) * C74249) * C153915 +
            (C78771 * C153464 + (C78816 + C78815) * C74249) * C153926) *
               C153591) *
              C153511 * C153906 +
          (((C78756 * C74249 + C79422 * C153464) * C153926 +
            (C78761 * C74249 + C79423 * C153464) * C153915 +
            (C78829 * C74249 + (C78825 + C78826) * C153464) * C153890) *
               C153591 -
           (C78814 * C153890 + (C71445 * C153464 + C78771 * C74249) * C153915 +
            ((C70483 + C70482) * C153464 + (C70481 + C70480) * C74249) *
                C153926) *
               C153838) *
              C153511 * C153907 +
          (((C70490 * C74249 + C70491 * C153464) * C153926 +
            (C79422 * C74249 + (C71031 + C71030) * C153464) * C153915 +
            (C79423 * C74249 + (C71040 + C71041) * C153464) * C153890) *
               C153838 -
           (((C70423 * C8488 + C73462 + C73462 + C153671 * C8490 +
              C70421 * C2241 + C73463 + C73463 + C70415 * C2251) *
                 C153464 +
             (C78826 + C78825) * C74249) *
                C153890 +
            ((C71041 + C71040) * C153464 + C78784 * C74249) * C153915 +
            (C71444 * C153464 + C71445 * C74249) * C153926) *
               C153591) *
              C153511 * C752)) /
            (p * q * std::sqrt(p + q));
    d2ee[34] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
             C70427 + C70427 + C153671 * C353) *
                C153931 +
            (C70480 + C70481) * C153924 + C70490 * C153905 + C70491 * C153852) *
               C153626 * C153527 * C320 -
           ((C70756 + C70757) * C153852 + (C70758 + C70759) * C153905 +
            (C70760 + C70761) * C153924 +
            (C70423 * C330 + C70706 + C70706 + C153671 * C354 + C70421 * C329 +
             C70707 + C70707 + C70415 * C353) *
                C153931) *
               C153626 * C153527 * C321 +
           ((C70421 * C330 + C70708 + C70708 + C70415 * C354 + C70423 * C1319 +
             C70709 + C70709 + C153671 * C1329) *
                C153931 +
            (C70762 + C70763) * C153924 + (C70764 + C70765) * C153905 +
            (C70766 + C70767) * C153852) *
               C153626 * C153527 * C322) *
              C323 +
          (((C70761 + C70760) * C153931 + (C70759 + C70758) * C153924 +
            (C70757 + C70756) * C153905 +
            (C70421 * C325 + C70728 + C70728 + C70415 * C349 + C70423 * C334 +
             C70729 + C70729 + C153671 * C358) *
                C153852) *
               C153626 * C153527 * C321 -
           (C70492 * C153852 + C70493 * C153905 + (C70483 + C70482) * C153924 +
            (C70481 + C70480) * C153931) *
               C153626 * C153527 * C320 -
           ((C70423 * C1315 + C70730 + C70730 + C153671 * C1325 +
             C70421 * C334 + C70731 + C70731 + C70415 * C358) *
                C153852 +
            (C70767 + C70766) * C153905 + (C70765 + C70764) * C153924 +
            (C70763 + C70762) * C153931) *
               C153626 * C153527 * C322) *
              C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
            C70427 + C70427 + C153671 * C353) *
               C153931 +
           (C70480 + C70481) * C153924 + C70490 * C153905 + C70491 * C153852) *
              C153626 * C153527 * C153511 * C130 -
          (C70492 * C153852 + C70493 * C153905 + (C70483 + C70482) * C153924 +
           (C70481 + C70480) * C153931) *
              C153626 * C153527 * C153511 * C131 +
          (C70490 * C153931 + C70491 * C153924 + (C70487 + C70486) * C153905 +
           (C70488 + C70489) * C153852) *
              C153626 * C153527 * C153511 * C132 -
          ((C70423 * C753 + C70458 + C70458 + C153671 * C755 + C70421 * C142 +
            C70459 + C70459 + C70415 * C158) *
               C153852 +
           (C70489 + C70488) * C153905 + C70492 * C153924 + C70493 * C153931) *
              C153626 * C153527 * C153511 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C74251 * C136 + C74260 + C74260 + C153932 * C152 + C74253 * C329 +
            C74261 + C74261 + C153928 * C353 + C74255 * C330 + C74262 + C74262 +
            C153918 * C354 + C74257 * C1319 + C74263 + C74263 +
            C153860 * C1329) *
               C74249 +
           (C74328 + C74329 + C74330 + C74331) * C153464) *
              C153626 * C153527 * C153511 * C130 -
          ((C74332 + C74333 + C74334 + C74335) * C153464 +
           (C74331 + C74330 + C74329 + C74328) * C74249) *
              C153626 * C153527 * C153511 * C131 +
          ((C74335 + C74334 + C74333 + C74332) * C74249 +
           (C74336 + C74337 + C74338 + C74339) * C153464) *
              C153626 * C153527 * C153511 * C132 -
          ((C74257 * C1315 + C74300 + C74300 + C153860 * C1325 + C74255 * C334 +
            C74301 + C74301 + C153918 * C358 + C74253 * C325 + C74302 + C74302 +
            C153928 * C349 + C74251 * C140 + C74303 + C74303 + C153932 * C156) *
               C153464 +
           (C74339 + C74338 + C74337 + C74336) * C74249) *
              C153626 * C153527 * C153511 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C74251 * C136 + C74260 + C74260 + C153932 * C152 + C74253 * C329 +
             C74261 + C74261 + C153928 * C353 + C74255 * C330 + C74262 +
             C74262 + C153918 * C354 + C74257 * C1319 + C74263 + C74263 +
             C153860 * C1329) *
                C74249 +
            (C74328 + C74329 + C74330 + C74331) * C153464) *
               C153626 * C153527 * C320 -
           ((C74590 + C74591 + C74592 + C74593) * C153464 +
            (C74257 * C3127 + C74546 + C74546 + C153860 * C3135 +
             C74255 * C1319 + C74547 + C74547 + C153918 * C1329 +
             C74253 * C330 + C74548 + C74548 + C153928 * C354 + C74251 * C329 +
             C74549 + C74549 + C153932 * C353) *
                C74249) *
               C153626 * C153527 * C321 +
           ((C74251 * C330 + C74550 + C74550 + C153932 * C354 + C74253 * C1319 +
             C74551 + C74551 + C153928 * C1329 + C74255 * C3127 + C74552 +
             C74552 + C153918 * C3135 + C74257 * C4723 + C74553 + C74553 +
             C153860 * C4729) *
                C74249 +
            (C74594 + C74595 + C74596 + C74597) * C153464) *
               C153626 * C153527 * C322) *
              C323 +
          (((C74593 + C74592 + C74591 + C74590) * C74249 +
            (C74251 * C327 + C74566 + C74566 + C153932 * C351 + C74253 * C332 +
             C74567 + C74567 + C153928 * C356 + C74255 * C1317 + C74568 +
             C74568 + C153918 * C1327 + C74257 * C3129 + C74569 + C74569 +
             C153860 * C3137) *
                C153464) *
               C153626 * C153527 * C321 -
           ((C74332 + C74333 + C74334 + C74335) * C153464 +
            (C74331 + C74330 + C74329 + C74328) * C74249) *
               C153626 * C153527 * C320 -
           ((C74257 * C4721 + C74570 + C74570 + C153860 * C4727 +
             C74255 * C3129 + C74571 + C74571 + C153918 * C3137 +
             C74253 * C1317 + C74572 + C74572 + C153928 * C1327 +
             C74251 * C332 + C74573 + C74573 + C153932 * C356) *
                C153464 +
            (C74597 + C74596 + C74595 + C74594) * C74249) *
               C153626 * C153527 * C322) *
              C153498)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
             C70427 + C70427 + C153671 * C353) *
                C74249 +
            (C70480 + C70481) * C153464) *
               C153926 +
           ((C70421 * C542 + C70981 + C70981 + C70415 * C566 + C70423 * C1057 +
             C70980 + C70980 + C153671 * C1069) *
                C74249 +
            (C71035 + C71034) * C153464) *
               C153915 +
           ((C70421 * C543 + C70982 + C70982 + C70415 * C567 + C70423 * C1461 +
             C70983 + C70983 + C153671 * C1471) *
                C74249 +
            (C71036 + C71037) * C153464) *
               C153890) *
              C153527 * C153511 * C130 -
          (((C71039 + C71038) * C153464 + (C71037 + C71036) * C74249) *
               C153890 +
           (C71445 * C153464 + (C71034 + C71035) * C74249) * C153915 +
           ((C70483 + C70482) * C153464 + (C70481 + C70480) * C74249) *
               C153926) *
              C153527 * C153511 * C131 +
          ((C70490 * C74249 + C70491 * C153464) * C153926 +
           ((C71033 + C71032) * C74249 + (C71031 + C71030) * C153464) *
               C153915 +
           ((C71038 + C71039) * C74249 + (C71040 + C71041) * C153464) *
               C153890) *
              C153527 * C153511 * C132 -
          (((C70423 * C1457 + C71004 + C71004 + C153671 * C1467 +
             C70421 * C547 + C71005 + C71005 + C70415 * C571) *
                C153464 +
            (C71041 + C71040) * C74249) *
               C153890 +
           ((C71457 + C71456) * C153464 + C71444 * C74249) * C153915 +
           (C70492 * C153464 + C70493 * C74249) * C153926) *
              C153527 * C153511 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
              C70427 + C70427 + C153671 * C353) *
                 C74249 +
             (C70480 + C70481) * C153464) *
                C153926 +
            ((C70421 * C542 + C70981 + C70981 + C70415 * C566 + C70423 * C1057 +
              C70980 + C70980 + C153671 * C1069) *
                 C74249 +
             (C71035 + C71034) * C153464) *
                C153915 +
            ((C70421 * C543 + C70982 + C70982 + C70415 * C567 + C70423 * C1461 +
              C70983 + C70983 + C153671 * C1471) *
                 C74249 +
             (C71036 + C71037) * C153464) *
                C153890) *
               C153527 * C320 -
           (((C78456 + C78457) * C153464 +
             (C70423 * C3441 + C72288 + C72288 + C153671 * C3449 +
              C70421 * C1461 + C72289 + C72289 + C70415 * C1471) *
                 C74249) *
                C153890 +
            ((C71751 + C71750) * C153464 +
             (C70423 * C1892 + C71717 + C71717 + C153671 * C1902 +
              C70421 * C1057 + C71716 + C71716 + C70415 * C1069) *
                 C74249) *
                C153915 +
            ((C70760 + C70761) * C153464 +
             (C70423 * C330 + C70706 + C70706 + C153671 * C354 + C70421 * C329 +
              C70707 + C70707 + C70415 * C353) *
                 C74249) *
                C153926) *
               C153527 * C321 +
           (((C70421 * C330 + C70708 + C70708 + C70415 * C354 + C70423 * C1319 +
              C70709 + C70709 + C153671 * C1329) *
                 C74249 +
             (C70762 + C70763) * C153464) *
                C153926 +
            ((C70421 * C1892 + C72943 + C72943 + C70415 * C1902 +
              C70423 * C4303 + C72942 + C72942 + C153671 * C4311) *
                 C74249 +
             (C78458 + C78459) * C153464) *
                C153915 +
            ((C70421 * C3441 + C78434 + C78434 + C70415 * C3449 +
              C70423 * C4959 + C78435 + C78435 + C153671 * C4965) *
                 C74249 +
             (C78460 + C78461) * C153464) *
                C153890) *
               C153527 * C322) *
              C323 +
          ((((C70761 + C70760) * C74249 + (C70759 + C70758) * C153464) *
                C153926 +
            ((C71750 + C71751) * C74249 + (C71752 + C71753) * C153464) *
                C153915 +
            ((C78457 + C78456) * C74249 +
             (C70421 * C1459 + C72285 + C72285 + C70415 * C1469 +
              C70423 * C3443 + C72284 + C72284 + C153671 * C3451) *
                 C153464) *
                C153890) *
               C153527 * C321 -
           (((C71039 + C71038) * C153464 + (C71037 + C71036) * C74249) *
                C153890 +
            (C71445 * C153464 + (C71034 + C71035) * C74249) * C153915 +
            ((C70483 + C70482) * C153464 + (C70481 + C70480) * C74249) *
                C153926) *
               C153527 * C320 -
           (((C70423 * C4957 + C78442 + C78442 + C153671 * C4963 +
              C70421 * C3443 + C78443 + C78443 + C70415 * C3451) *
                 C153464 +
             (C78461 + C78460) * C74249) *
                C153890 +
            ((C70423 * C4305 + C72938 + C72938 + C153671 * C4313 +
              C70421 * C1890 + C72939 + C72939 + C70415 * C1900) *
                 C153464 +
             (C78459 + C78458) * C74249) *
                C153915 +
            ((C70765 + C70764) * C153464 + (C70763 + C70762) * C74249) *
                C153926) *
               C153527 * C322) *
              C153498)) /
            (p * q * std::sqrt(p + q));
    d2ee[35] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C74251 * C136 + C74260 + C74260 + C153932 * C152 + C74253 * C329 +
             C74261 + C74261 + C153928 * C353 + C74255 * C330 + C74262 +
             C74262 + C153918 * C354 + C74257 * C1319 + C74263 + C74263 +
             C153860 * C1329) *
                C74249 +
            (C74328 + C74329 + C74330 + C74331) * C153464) *
               C153626 * C153527 * C153908 -
           ((C74590 + C74591 + C74592 + C74593) * C153464 +
            (C74257 * C3127 + C74546 + C74546 + C153860 * C3135 +
             C74255 * C1319 + C74547 + C74547 + C153918 * C1329 +
             C74253 * C330 + C74548 + C74548 + C153928 * C354 + C74251 * C329 +
             C74549 + C74549 + C153932 * C353) *
                C74249) *
               C153626 * C153527 * C153909 +
           ((C74251 * C330 + C74550 + C74550 + C153932 * C354 + C74253 * C1319 +
             C74551 + C74551 + C153928 * C1329 + C74255 * C3127 + C74552 +
             C74552 + C153918 * C3135 + C74257 * C4723 + C74553 + C74553 +
             C153860 * C4729) *
                C74249 +
            (C74594 + C74595 + C74596 + C74597) * C153464) *
               C153626 * C153527 * C1601) *
              C153829 +
          (((C74593 + C74592 + C74591 + C74590) * C74249 +
            (C75070 + C75071 + C75072 + C75073) * C153464) *
               C153626 * C153527 * C153909 -
           ((C74332 + C74333 + C74334 + C74335) * C153464 +
            (C74331 + C74330 + C74329 + C74328) * C74249) *
               C153626 * C153527 * C153908 -
           ((C74257 * C4721 + C74570 + C74570 + C153860 * C4727 +
             C74255 * C3129 + C74571 + C74571 + C153918 * C3137 +
             C74253 * C1317 + C74572 + C74572 + C153928 * C1327 +
             C74251 * C332 + C74573 + C74573 + C153932 * C356) *
                C153464 +
            (C74597 + C74596 + C74595 + C74594) * C74249) *
               C153626 * C153527 * C1601) *
              C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
             C70427 + C70427 + C153671 * C353) *
                C153931 +
            (C70480 + C70481) * C153924 + C70490 * C153905 + C70491 * C153852) *
               C153626 * C153527 * C153908 -
           (C71236 * C153852 + C71237 * C153905 + (C70760 + C70761) * C153924 +
            (C70423 * C330 + C70706 + C70706 + C153671 * C354 + C70421 * C329 +
             C70707 + C70707 + C70415 * C353) *
                C153931) *
               C153626 * C153527 * C153909 +
           ((C70421 * C330 + C70708 + C70708 + C70415 * C354 + C70423 * C1319 +
             C70709 + C70709 + C153671 * C1329) *
                C153931 +
            (C70762 + C70763) * C153924 + (C70764 + C70765) * C153905 +
            (C70766 + C70767) * C153852) *
               C153626 * C153527 * C1601) *
              C153829 +
          (((C70761 + C70760) * C153931 + (C70759 + C70758) * C153924 +
            (C70757 + C70756) * C153905 + (C71248 + C71249) * C153852) *
               C153626 * C153527 * C153909 -
           (C70492 * C153852 + C70493 * C153905 + (C70483 + C70482) * C153924 +
            (C70481 + C70480) * C153931) *
               C153626 * C153527 * C153908 -
           ((C70423 * C1315 + C70730 + C70730 + C153671 * C1325 +
             C70421 * C334 + C70731 + C70731 + C70415 * C358) *
                C153852 +
            (C70767 + C70766) * C153905 + (C70765 + C70764) * C153924 +
            (C70763 + C70762) * C153931) *
               C153626 * C153527 * C1601) *
              C153498)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
              C70427 + C70427 + C153671 * C353) *
                 C74249 +
             (C70480 + C70481) * C153464) *
                C153926 +
            ((C78815 + C78816) * C74249 + C78756 * C153464) * C153915 +
            C78831 * C153890) *
               C153527 * C153908 -
           (C80647 * C153890 +
            (C79829 * C153464 + (C79845 + C79844) * C74249) * C153915 +
            ((C70760 + C70761) * C153464 +
             (C70423 * C330 + C70706 + C70706 + C153671 * C354 + C70421 * C329 +
              C70707 + C70707 + C70415 * C353) *
                 C74249) *
                C153926) *
               C153527 * C153909 +
           (((C70421 * C330 + C70708 + C70708 + C70415 * C354 + C70423 * C1319 +
              C70709 + C70709 + C153671 * C1329) *
                 C74249 +
             (C70762 + C70763) * C153464) *
                C153926 +
            ((C70421 * C1892 + C72943 + C72943 + C70415 * C1902 +
              C70423 * C4303 + C72942 + C72942 + C153671 * C4311) *
                 C74249 +
             (C78458 + C78459) * C153464) *
                C153915 +
            ((C70421 * C3441 + C78434 + C78434 + C70415 * C3449 +
              C70423 * C4959 + C78435 + C78435 + C153671 * C4965) *
                 C74249 +
             (C78460 + C78461) * C153464) *
                C153890) *
               C153527 * C1601) *
              C153829 +
          ((((C70761 + C70760) * C74249 + (C70759 + C70758) * C153464) *
                C153926 +
            (C79814 * C74249 + (C71752 + C71753) * C153464) * C153915 +
            (C79819 * C74249 + (C79130 + C79131) * C153464) * C153890) *
               C153527 * C153909 -
           (C78814 * C153890 + (C71445 * C153464 + C78771 * C74249) * C153915 +
            ((C70483 + C70482) * C153464 + (C70481 + C70480) * C74249) *
                C153926) *
               C153527 * C153908 -
           (((C70423 * C4957 + C78442 + C78442 + C153671 * C4963 +
              C70421 * C3443 + C78443 + C78443 + C70415 * C3451) *
                 C153464 +
             (C78461 + C78460) * C74249) *
                C153890 +
            ((C70423 * C4305 + C72938 + C72938 + C153671 * C4313 +
              C70421 * C1890 + C72939 + C72939 + C70415 * C1900) *
                 C153464 +
             (C78459 + C78458) * C74249) *
                C153915 +
            ((C70765 + C70764) * C153464 + (C70763 + C70762) * C74249) *
                C153926) *
               C153527 * C1601) *
              C153498)) /
            (p * q * std::sqrt(p + q));
    d2ee[36] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C74251 * C136 + C74260 + C74260 + C153932 * C152 + C74253 * C329 +
             C74261 + C74261 + C153928 * C353 + C74255 * C330 + C74262 +
             C74262 + C153918 * C354 + C74257 * C1319 + C74263 + C74263 +
             C153860 * C1329) *
                C74249 +
            (C74328 + C74329 + C74330 + C74331) * C153464) *
               C153626 * C153838 -
           ((C74848 + C74849 + C74850 + C74851) * C153464 +
            (C74257 * C4303 + C74804 + C74804 + C153860 * C4311 +
             C74255 * C1892 + C74805 + C74805 + C153918 * C1902 +
             C74253 * C1057 + C74806 + C74806 + C153928 * C1069 +
             C74251 * C542 + C74807 + C74807 + C153932 * C566) *
                C74249) *
               C153626 * C153591) *
              C153908 +
          (((C74251 * C1057 + C75550 + C75550 + C153932 * C1069 +
             C74253 * C1892 + C75551 + C75551 + C153928 * C1902 +
             C74255 * C4303 + C75552 + C75552 + C153918 * C4311 +
             C74257 * C5703 + C75553 + C75553 + C153860 * C5709) *
                C74249 +
            (C75578 + C75579 + C75580 + C75581) * C153464) *
               C153626 * C153591 -
           ((C74590 + C74591 + C74592 + C74593) * C153464 +
            (C74257 * C3127 + C74546 + C74546 + C153860 * C3135 +
             C74255 * C1319 + C74547 + C74547 + C153918 * C1329 +
             C74253 * C330 + C74548 + C74548 + C153928 * C354 + C74251 * C329 +
             C74549 + C74549 + C153932 * C353) *
                C74249) *
               C153626 * C153838) *
              C153909 +
          (((C74251 * C330 + C74550 + C74550 + C153932 * C354 + C74253 * C1319 +
             C74551 + C74551 + C153928 * C1329 + C74255 * C3127 + C74552 +
             C74552 + C153918 * C3135 + C74257 * C4723 + C74553 + C74553 +
             C153860 * C4729) *
                C74249 +
            (C74594 + C74595 + C74596 + C74597) * C153464) *
               C153626 * C153838 -
           ((C74257 * C29093 + C76762 + C76762 + C153860 * C29097 +
             C74255 * C5702 + C76763 + C76763 + C153918 * C5708 +
             C74253 * C4304 + C76764 + C76764 + C153928 * C4312 +
             C74251 * C1891 + C76765 + C76765 + C153932 * C1901) *
                C153464 +
            (C74257 * C29092 + C76766 + C76766 + C153860 * C29096 +
             C74255 * C5703 + C76767 + C76767 + C153918 * C5709 +
             C74253 * C4303 + C76768 + C76768 + C153928 * C4311 +
             C74251 * C1892 + C76769 + C76769 + C153932 * C1902) *
                C74249) *
               C153626 * C153591) *
              C1601) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
             C70427 + C70427 + C153671 * C353) *
                C153931 +
            (C70480 + C70481) * C153924 + C70490 * C153905 + C70491 * C153852) *
               C153626 * C153838 -
           (C71444 * C153852 + C71445 * C153905 + (C71034 + C71035) * C153924 +
            (C70423 * C1057 + C70980 + C70980 + C153671 * C1069 +
             C70421 * C542 + C70981 + C70981 + C70415 * C566) *
                C153931) *
               C153626 * C153591) *
              C153908 +
          (((C70421 * C1057 + C71716 + C71716 + C70415 * C1069 +
             C70423 * C1892 + C71717 + C71717 + C153671 * C1902) *
                C153931 +
            (C71750 + C71751) * C153924 + (C71752 + C71753) * C153905 +
            (C71754 + C71755) * C153852) *
               C153626 * C153591 -
           (C71236 * C153852 + C71237 * C153905 + (C70760 + C70761) * C153924 +
            (C70423 * C330 + C70706 + C70706 + C153671 * C354 + C70421 * C329 +
             C70707 + C70707 + C70415 * C353) *
                C153931) *
               C153626 * C153838) *
              C153909 +
          (((C70421 * C330 + C70708 + C70708 + C70415 * C354 + C70423 * C1319 +
             C70709 + C70709 + C153671 * C1329) *
                C153931 +
            (C70762 + C70763) * C153924 + (C70764 + C70765) * C153905 +
            (C70766 + C70767) * C153852) *
               C153626 * C153838 -
           ((C70423 * C4306 + C72936 + C72936 + C153671 * C4314 +
             C70421 * C1889 + C72937 + C72937 + C70415 * C1899) *
                C153852 +
            (C70423 * C4305 + C72938 + C72938 + C153671 * C4313 +
             C70421 * C1890 + C72939 + C72939 + C70415 * C1900) *
                C153905 +
            (C70423 * C4304 + C72940 + C72940 + C153671 * C4312 +
             C70421 * C1891 + C72941 + C72941 + C70415 * C1901) *
                C153924 +
            (C70423 * C4303 + C72942 + C72942 + C153671 * C4311 +
             C70421 * C1892 + C72943 + C72943 + C70415 * C1902) *
                C153931) *
               C153626 * C153591) *
              C1601) *
         C153492) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
              C70427 + C70427 + C153671 * C353) *
                 C74249 +
             (C70480 + C70481) * C153464) *
                C153926 +
            ((C78815 + C78816) * C74249 + C78756 * C153464) * C153915 +
            C78831 * C153890) *
               C153838 -
           ((C78828 * C153464 + (C78821 + C78822) * C74249) * C153890 +
            (C78770 * C153464 + (C78818 + C78817) * C74249) * C153915 +
            (C78771 * C153464 + (C78816 + C78815) * C74249) * C153926) *
               C153591) *
              C153908 +
          ((((C79844 + C79845) * C74249 + C79814 * C153464) * C153926 +
            ((C79846 + C79847) * C74249 + C79819 * C153464) * C153915 +
            ((C80648 + C80649) * C74249 + (C79848 + C79849) * C153464) *
                C153890) *
               C153591 -
           (C80647 * C153890 +
            (C79829 * C153464 + (C79845 + C79844) * C74249) * C153915 +
            ((C70760 + C70761) * C153464 +
             (C70423 * C330 + C70706 + C70706 + C153671 * C354 + C70421 * C329 +
              C70707 + C70707 + C70415 * C353) *
                 C74249) *
                C153926) *
               C153838) *
              C153909 +
          ((((C70421 * C330 + C70708 + C70708 + C70415 * C354 + C70423 * C1319 +
              C70709 + C70709 + C153671 * C1329) *
                 C74249 +
             (C70762 + C70763) * C153464) *
                C153926 +
            ((C81636 + C81637) * C74249 + (C78458 + C78459) * C153464) *
                C153915 +
            ((C81638 + C81639) * C74249 + (C78460 + C78461) * C153464) *
                C153890) *
               C153838 -
           (((C70423 * C31999 + C81624 + C81624 + C153671 * C32001 +
              C70421 * C6303 + C81625 + C81625 + C70415 * C6315) *
                 C153464 +
             (C70423 * C30191 + C81626 + C81626 + C153671 * C30195 +
              C70421 * C6305 + C81627 + C81627 + C70415 * C6317) *
                 C74249) *
                C153890 +
            ((C78461 + C78460) * C153464 + (C81639 + C81638) * C74249) *
                C153915 +
            ((C78459 + C78458) * C153464 + (C81637 + C81636) * C74249) *
                C153926) *
               C153591) *
              C1601) *
         C153492) /
            (p * q * std::sqrt(p + q));
    d2ee[37] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C70421 * C136 + C70426 + C70426 + C70415 * C152 +
                 C70423 * C329 + C70427 + C70427 + C153671 * C353) *
                    C153931 +
                (C70480 + C70481) * C153924 + C70490 * C153905 +
                C70491 * C153852) *
                   C153626 * C153527 * C1223 -
               (C71236 * C153852 + C71237 * C153905 +
                (C70760 + C70761) * C153924 +
                (C70423 * C330 + C70706 + C70706 + C153671 * C354 +
                 C70421 * C329 + C70707 + C70707 + C70415 * C353) *
                    C153931) *
                   C153626 * C153527 * C153563) *
                  C1225 +
              (((C70761 + C70760) * C153931 + (C70759 + C70758) * C153924 +
                (C70757 + C70756) * C153905 + (C71248 + C71249) * C153852) *
                   C153626 * C153527 * C153563 -
               (C70492 * C153852 + C70493 * C153905 +
                (C70483 + C70482) * C153924 + (C70481 + C70480) * C153931) *
                   C153626 * C153527 * C1223) *
                  C1226 +
              ((C70490 * C153931 + C70491 * C153924 +
                (C70487 + C70486) * C153905 + (C70488 + C70489) * C153852) *
                   C153626 * C153527 * C1223 -
               ((C70423 * C336 + C71242 + C71242 + C153671 * C360 +
                 C70421 * C335 + C71243 + C71243 + C70415 * C359) *
                    C153852 +
                (C71249 + C71248) * C153905 + C71236 * C153924 +
                C71237 * C153931) *
                   C153626 * C153527 * C153563) *
                  C1227) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((C70421 * C136 + C70426 + C70426 + C70415 * C152 +
                C70423 * C329 + C70427 + C70427 + C153671 * C353) *
                   C153931 +
               (C70480 + C70481) * C153924 + C70490 * C153905 +
               C70491 * C153852) *
                  C153626 * C153527 * C1310 -
              (C71236 * C153852 + C71237 * C153905 +
               (C70760 + C70761) * C153924 +
               (C70423 * C330 + C70706 + C70706 + C153671 * C354 +
                C70421 * C329 + C70707 + C70707 + C70415 * C353) *
                   C153931) *
                  C153626 * C153527 * C1311 +
              ((C70421 * C330 + C70708 + C70708 + C70415 * C354 +
                C70423 * C1319 + C70709 + C70709 + C153671 * C1329) *
                   C153931 +
               (C70762 + C70763) * C153924 + (C70764 + C70765) * C153905 +
               (C70766 + C70767) * C153852) *
                  C153626 * C153527 * C1312 -
              ((C70423 * C3130 + C72080 + C72080 + C153671 * C3138 +
                C70421 * C1316 + C72081 + C72081 + C70415 * C1326) *
                   C153852 +
               (C70423 * C3129 + C72082 + C72082 + C153671 * C3137 +
                C70421 * C1317 + C72083 + C72083 + C70415 * C1327) *
                   C153905 +
               (C70423 * C3128 + C72084 + C72084 + C153671 * C3136 +
                C70421 * C1318 + C72085 + C72085 + C70415 * C1328) *
                   C153924 +
               (C70423 * C3127 + C72086 + C72086 + C153671 * C3135 +
                C70421 * C1319 + C72087 + C72087 + C70415 * C1329) *
                   C153931) *
                  C153626 * C153527 * C1313) *
             C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
             C70427 + C70427 + C153671 * C353) *
                C153931 +
            (C70480 + C70481) * C153924 + C70490 * C153905 + C70491 * C153852) *
               C153626 * C535 -
           (C71444 * C153852 + C71445 * C153905 + (C71034 + C71035) * C153924 +
            (C70423 * C1057 + C70980 + C70980 + C153671 * C1069 +
             C70421 * C542 + C70981 + C70981 + C70415 * C566) *
                C153931) *
               C153626 * C536 +
           ((C70421 * C543 + C70982 + C70982 + C70415 * C567 + C70423 * C1461 +
             C70983 + C70983 + C153671 * C1471) *
                C153931 +
            (C71036 + C71037) * C153924 + (C71038 + C71039) * C153905 +
            (C71040 + C71041) * C153852) *
               C153626 * C537) *
              C1223 +
          (((C70421 * C1057 + C71716 + C71716 + C70415 * C1069 +
             C70423 * C1892 + C71717 + C71717 + C153671 * C1902) *
                C153931 +
            (C71750 + C71751) * C153924 + (C71752 + C71753) * C153905 +
            (C71754 + C71755) * C153852) *
               C153626 * C536 -
           (C71236 * C153852 + C71237 * C153905 + (C70760 + C70761) * C153924 +
            (C70423 * C330 + C70706 + C70706 + C153671 * C354 + C70421 * C329 +
             C70707 + C70707 + C70415 * C353) *
                C153931) *
               C153626 * C535 -
           ((C70423 * C3444 + C72282 + C72282 + C153671 * C3452 +
             C70421 * C1458 + C72283 + C72283 + C70415 * C1468) *
                C153852 +
            (C70423 * C3443 + C72284 + C72284 + C153671 * C3451 +
             C70421 * C1459 + C72285 + C72285 + C70415 * C1469) *
                C153905 +
            (C70423 * C3442 + C72286 + C72286 + C153671 * C3450 +
             C70421 * C1460 + C72287 + C72287 + C70415 * C1470) *
                C153924 +
            (C70423 * C3441 + C72288 + C72288 + C153671 * C3449 +
             C70421 * C1461 + C72289 + C72289 + C70415 * C1471) *
                C153931) *
               C153626 * C537) *
              C153563) *
         C153492) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C74251 * C136 + C74260 + C74260 + C153932 * C152 + C74253 * C329 +
             C74261 + C74261 + C153928 * C353 + C74255 * C330 + C74262 +
             C74262 + C153918 * C354 + C74257 * C1319 + C74263 + C74263 +
             C153860 * C1329) *
                C74249 +
            (C74328 + C74329 + C74330 + C74331) * C153464) *
               C153626 * C153527 * C1223 -
           ((C74590 + C74591 + C74592 + C74593) * C153464 +
            (C74257 * C3127 + C74546 + C74546 + C153860 * C3135 +
             C74255 * C1319 + C74547 + C74547 + C153918 * C1329 +
             C74253 * C330 + C74548 + C74548 + C153928 * C354 + C74251 * C329 +
             C74549 + C74549 + C153932 * C353) *
                C74249) *
               C153626 * C153527 * C153563) *
              C1225 +
          (((C74593 + C74592 + C74591 + C74590) * C74249 +
            (C75070 + C75071 + C75072 + C75073) * C153464) *
               C153626 * C153527 * C153563 -
           ((C74332 + C74333 + C74334 + C74335) * C153464 +
            (C74331 + C74330 + C74329 + C74328) * C74249) *
               C153626 * C153527 * C1223) *
              C1226 +
          (((C74335 + C74334 + C74333 + C74332) * C74249 +
            (C74336 + C74337 + C74338 + C74339) * C153464) *
               C153626 * C153527 * C1223 -
           ((C74257 * C3130 + C75058 + C75058 + C153860 * C3138 +
             C74255 * C1316 + C75059 + C75059 + C153918 * C1326 +
             C74253 * C333 + C75060 + C75060 + C153928 * C357 + C74251 * C326 +
             C75061 + C75061 + C153932 * C350) *
                C153464 +
            (C75073 + C75072 + C75071 + C75070) * C74249) *
               C153626 * C153527 * C153563) *
              C1227)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C74251 * C136 + C74260 + C74260 + C153932 * C152 + C74253 * C329 +
            C74261 + C74261 + C153928 * C353 + C74255 * C330 + C74262 + C74262 +
            C153918 * C354 + C74257 * C1319 + C74263 + C74263 +
            C153860 * C1329) *
               C74249 +
           (C74328 + C74329 + C74330 + C74331) * C153464) *
              C153626 * C153527 * C1310 -
          ((C74590 + C74591 + C74592 + C74593) * C153464 +
           (C74257 * C3127 + C74546 + C74546 + C153860 * C3135 +
            C74255 * C1319 + C74547 + C74547 + C153918 * C1329 + C74253 * C330 +
            C74548 + C74548 + C153928 * C354 + C74251 * C329 + C74549 + C74549 +
            C153932 * C353) *
               C74249) *
              C153626 * C153527 * C1311 +
          ((C74251 * C330 + C74550 + C74550 + C153932 * C354 + C74253 * C1319 +
            C74551 + C74551 + C153928 * C1329 + C74255 * C3127 + C74552 +
            C74552 + C153918 * C3135 + C74257 * C4723 + C74553 + C74553 +
            C153860 * C4729) *
               C74249 +
           (C74594 + C74595 + C74596 + C74597) * C153464) *
              C153626 * C153527 * C1312 -
          ((C74257 * C28503 + C75906 + C75906 + C153860 * C28507 +
            C74255 * C4722 + C75907 + C75907 + C153918 * C4728 +
            C74253 * C3128 + C75908 + C75908 + C153928 * C3136 +
            C74251 * C1318 + C75909 + C75909 + C153932 * C1328) *
               C153464 +
           (C74257 * C28502 + C75910 + C75910 + C153860 * C28506 +
            C74255 * C4723 + C75911 + C75911 + C153918 * C4729 +
            C74253 * C3127 + C75912 + C75912 + C153928 * C3135 +
            C74251 * C1319 + C75913 + C75913 + C153932 * C1329) *
               C74249) *
              C153626 * C153527 * C1313) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C74251 * C136 + C74260 + C74260 + C153932 * C152 + C74253 * C329 +
             C74261 + C74261 + C153928 * C353 + C74255 * C330 + C74262 +
             C74262 + C153918 * C354 + C74257 * C1319 + C74263 + C74263 +
             C153860 * C1329) *
                C74249 +
            (C74328 + C74329 + C74330 + C74331) * C153464) *
               C153626 * C535 -
           ((C74848 + C74849 + C74850 + C74851) * C153464 +
            (C74257 * C4303 + C74804 + C74804 + C153860 * C4311 +
             C74255 * C1892 + C74805 + C74805 + C153918 * C1902 +
             C74253 * C1057 + C74806 + C74806 + C153928 * C1069 +
             C74251 * C542 + C74807 + C74807 + C153932 * C566) *
                C74249) *
               C153626 * C536 +
           ((C74251 * C543 + C74808 + C74808 + C153932 * C567 + C74253 * C1461 +
             C74809 + C74809 + C153928 * C1471 + C74255 * C3441 + C74810 +
             C74810 + C153918 * C3449 + C74257 * C4959 + C74811 + C74811 +
             C153860 * C4965) *
                C74249 +
            (C74852 + C74853 + C74854 + C74855) * C153464) *
               C153626 * C537) *
              C1223 +
          (((C74251 * C1057 + C75550 + C75550 + C153932 * C1069 +
             C74253 * C1892 + C75551 + C75551 + C153928 * C1902 +
             C74255 * C4303 + C75552 + C75552 + C153918 * C4311 +
             C74257 * C5703 + C75553 + C75553 + C153860 * C5709) *
                C74249 +
            (C75578 + C75579 + C75580 + C75581) * C153464) *
               C153626 * C536 -
           ((C74590 + C74591 + C74592 + C74593) * C153464 +
            (C74257 * C3127 + C74546 + C74546 + C153860 * C3135 +
             C74255 * C1319 + C74547 + C74547 + C153918 * C1329 +
             C74253 * C330 + C74548 + C74548 + C153928 * C354 + C74251 * C329 +
             C74549 + C74549 + C153932 * C353) *
                C74249) *
               C153626 * C535 -
           ((C74257 * C28651 + C76108 + C76108 + C153860 * C28655 +
             C74255 * C4958 + C76109 + C76109 + C153918 * C4964 +
             C74253 * C3442 + C76110 + C76110 + C153928 * C3450 +
             C74251 * C1460 + C76111 + C76111 + C153932 * C1470) *
                C153464 +
            (C74257 * C28650 + C76112 + C76112 + C153860 * C28654 +
             C74255 * C4959 + C76113 + C76113 + C153918 * C4965 +
             C74253 * C3441 + C76114 + C76114 + C153928 * C3449 +
             C74251 * C1461 + C76115 + C76115 + C153932 * C1471) *
                C74249) *
               C153626 * C537) *
              C153563) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
              C70427 + C70427 + C153671 * C353) *
                 C74249 +
             (C70480 + C70481) * C153464) *
                C153926 +
            ((C78815 + C78816) * C74249 + C78756 * C153464) * C153915 +
            C78831 * C153890) *
               C153527 * C1223 -
           ((C79828 * C153464 + (C79847 + C79846) * C74249) * C153890 +
            (C79829 * C153464 + (C79845 + C79844) * C74249) * C153915 +
            ((C70760 + C70761) * C153464 +
             (C70423 * C330 + C70706 + C70706 + C153671 * C354 + C70421 * C329 +
              C70707 + C70707 + C70415 * C353) *
                 C74249) *
                C153926) *
               C153527 * C153563) *
              C1225 +
          ((((C70761 + C70760) * C74249 + (C70759 + C70758) * C153464) *
                C153926 +
            (C79814 * C74249 + (C71752 + C71753) * C153464) * C153915 +
            (C79819 * C74249 + (C79130 + C79131) * C153464) * C153890) *
               C153527 * C153563 -
           (C78814 * C153890 + (C71445 * C153464 + C78771 * C74249) * C153915 +
            ((C70483 + C70482) * C153464 + (C70481 + C70480) * C74249) *
                C153926) *
               C153527 * C1223) *
              C1226 +
          (((C70490 * C74249 + C70491 * C153464) * C153926 +
            (C79422 * C74249 + (C71031 + C71030) * C153464) * C153915 +
            (C79423 * C74249 + (C71040 + C71041) * C153464) * C153890) *
               C153527 * C1223 -
           (((C70423 * C3444 + C72282 + C72282 + C153671 * C3452 +
              C70421 * C1458 + C72283 + C72283 + C70415 * C1468) *
                 C153464 +
             (C79131 + C79130) * C74249) *
                C153890 +
            ((C71755 + C71754) * C153464 + (C71753 + C71752) * C74249) *
                C153915 +
            (C71236 * C153464 + C71237 * C74249) * C153926) *
               C153527 * C153563) *
              C1227)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
             C70427 + C70427 + C153671 * C353) *
                C74249 +
            (C70480 + C70481) * C153464) *
               C153926 +
           ((C78815 + C78816) * C74249 + C78756 * C153464) * C153915 +
           C78831 * C153890) *
              C153527 * C1310 -
          ((C79828 * C153464 + (C79847 + C79846) * C74249) * C153890 +
           (C79829 * C153464 + (C79845 + C79844) * C74249) * C153915 +
           ((C70760 + C70761) * C153464 +
            (C70423 * C330 + C70706 + C70706 + C153671 * C354 + C70421 * C329 +
             C70707 + C70707 + C70415 * C353) *
                C74249) *
               C153926) *
              C153527 * C1311 +
          (((C70421 * C330 + C70708 + C70708 + C70415 * C354 + C70423 * C1319 +
             C70709 + C70709 + C153671 * C1329) *
                C74249 +
            (C70762 + C70763) * C153464) *
               C153926 +
           ((C70421 * C1892 + C72943 + C72943 + C70415 * C1902 +
             C70423 * C4303 + C72942 + C72942 + C153671 * C4311) *
                C74249 +
            (C78458 + C78459) * C153464) *
               C153915 +
           ((C70421 * C3441 + C78434 + C78434 + C70415 * C3449 +
             C70423 * C4959 + C78435 + C78435 + C153671 * C4965) *
                C74249 +
            (C78460 + C78461) * C153464) *
               C153890) *
              C153527 * C1312 -
          (((C70423 * C28651 + C80334 + C80334 + C153671 * C28655 +
             C70421 * C4958 + C80335 + C80335 + C70415 * C4964) *
                C153464 +
            (C70423 * C28650 + C80336 + C80336 + C153671 * C28654 +
             C70421 * C4959 + C80337 + C80337 + C70415 * C4965) *
                C74249) *
               C153890 +
           ((C70423 * C5702 + C80338 + C80338 + C153671 * C5708 +
             C70421 * C4304 + C80339 + C80339 + C70415 * C4312) *
                C153464 +
            (C70423 * C5703 + C80340 + C80340 + C153671 * C5709 +
             C70421 * C4303 + C80341 + C80341 + C70415 * C4311) *
                C74249) *
               C153915 +
           ((C70423 * C3128 + C72084 + C72084 + C153671 * C3136 +
             C70421 * C1318 + C72085 + C72085 + C70415 * C1328) *
                C153464 +
            (C70423 * C3127 + C72086 + C72086 + C153671 * C3135 +
             C70421 * C1319 + C72087 + C72087 + C70415 * C1329) *
                C74249) *
               C153926) *
              C153527 * C1313) *
         C153492) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
              C70427 + C70427 + C153671 * C353) *
                 C74249 +
             (C70480 + C70481) * C153464) *
                C153926 +
            ((C78815 + C78816) * C74249 + C78756 * C153464) * C153915 +
            C78831 * C153890) *
               C535 -
           ((C78828 * C153464 + (C78821 + C78822) * C74249) * C153890 +
            (C78770 * C153464 + (C78818 + C78817) * C74249) * C153915 +
            (C78771 * C153464 + (C78816 + C78815) * C74249) * C153926) *
               C536 +
           (C78831 * C153926 +
            ((C78822 + C78821) * C74249 + C78829 * C153464) * C153915 +
            ((C70421 * C7673 + C78772 + C78772 + C70415 * C7681 +
              C70423 * C9117 + C78773 + C78773 + C153671 * C9123) *
                 C74249 +
             (C78823 + C78824) * C153464) *
                C153890) *
               C537) *
              C1223 +
          ((((C79844 + C79845) * C74249 + C79814 * C153464) * C153926 +
            ((C79846 + C79847) * C74249 + C79819 * C153464) * C153915 +
            ((C80648 + C80649) * C74249 + (C79848 + C79849) * C153464) *
                C153890) *
               C536 -
           (C80647 * C153890 +
            (C79829 * C153464 + (C79845 + C79844) * C74249) * C153915 +
            ((C70760 + C70761) * C153464 +
             (C70423 * C330 + C70706 + C70706 + C153671 * C354 + C70421 * C329 +
              C70707 + C70707 + C70415 * C353) *
                 C74249) *
                C153926) *
               C535 -
           (((C70423 * C31196 + C80638 + C80638 + C153671 * C31200 +
              C70421 * C9116 + C80639 + C80639 + C70415 * C9122) *
                 C153464 +
             (C70423 * C31195 + C80640 + C80640 + C153671 * C31199 +
              C70421 * C9117 + C80641 + C80641 + C70415 * C9123) *
                 C74249) *
                C153890 +
            ((C79849 + C79848) * C153464 + (C80649 + C80648) * C74249) *
                C153915 +
            C80647 * C153926) *
               C537) *
              C153563) *
         C153492) /
            (p * q * std::sqrt(p + q));
    d2ee[38] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C74251 * C136 + C74260 + C74260 + C153932 * C152 + C74253 * C329 +
              C74261 + C74261 + C153928 * C353 + C74255 * C330 + C74262 +
              C74262 + C153918 * C354 + C74257 * C1319 + C74263 + C74263 +
              C153860 * C1329) *
                 C74249 +
             (C74328 + C74329 + C74330 + C74331) * C153464) *
                C153626 * C153838 -
            ((C74848 + C74849 + C74850 + C74851) * C153464 +
             (C74257 * C4303 + C74804 + C74804 + C153860 * C4311 +
              C74255 * C1892 + C74805 + C74805 + C153918 * C1902 +
              C74253 * C1057 + C74806 + C74806 + C153928 * C1069 +
              C74251 * C542 + C74807 + C74807 + C153932 * C566) *
                 C74249) *
                C153626 * C153591) *
               C1223 +
           (((C74251 * C1057 + C75550 + C75550 + C153932 * C1069 +
              C74253 * C1892 + C75551 + C75551 + C153928 * C1902 +
              C74255 * C4303 + C75552 + C75552 + C153918 * C4311 +
              C74257 * C5703 + C75553 + C75553 + C153860 * C5709) *
                 C74249 +
             (C75578 + C75579 + C75580 + C75581) * C153464) *
                C153626 * C153591 -
            ((C74590 + C74591 + C74592 + C74593) * C153464 +
             (C74257 * C3127 + C74546 + C74546 + C153860 * C3135 +
              C74255 * C1319 + C74547 + C74547 + C153918 * C1329 +
              C74253 * C330 + C74548 + C74548 + C153928 * C354 + C74251 * C329 +
              C74549 + C74549 + C153932 * C353) *
                 C74249) *
                C153626 * C153838) *
               C153563) *
              C153829 +
          ((((C74851 + C74850 + C74849 + C74848) * C74249 +
             (C75288 + C75289 + C75290 + C75291) * C153464) *
                C153626 * C153591 -
            ((C74332 + C74333 + C74334 + C74335) * C153464 +
             (C74331 + C74330 + C74329 + C74328) * C74249) *
                C153626 * C153838) *
               C1223 +
           (((C74593 + C74592 + C74591 + C74590) * C74249 +
             (C75070 + C75071 + C75072 + C75073) * C153464) *
                C153626 * C153838 -
            ((C74257 * C5701 + C75566 + C75566 + C153860 * C5707 +
              C74255 * C4305 + C75567 + C75567 + C153918 * C4313 +
              C74253 * C1890 + C75568 + C75568 + C153928 * C1900 +
              C74251 * C1059 + C75569 + C75569 + C153932 * C1071) *
                 C153464 +
             (C75581 + C75580 + C75579 + C75578) * C74249) *
                C153626 * C153591) *
               C153563) *
              C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
              C70427 + C70427 + C153671 * C353) *
                 C153931 +
             (C70480 + C70481) * C153924 + C70490 * C153905 +
             C70491 * C153852) *
                C153626 * C153838 -
            (C71444 * C153852 + C71445 * C153905 + (C71034 + C71035) * C153924 +
             (C70423 * C1057 + C70980 + C70980 + C153671 * C1069 +
              C70421 * C542 + C70981 + C70981 + C70415 * C566) *
                 C153931) *
                C153626 * C153591) *
               C1223 +
           (((C70421 * C1057 + C71716 + C71716 + C70415 * C1069 +
              C70423 * C1892 + C71717 + C71717 + C153671 * C1902) *
                 C153931 +
             (C71750 + C71751) * C153924 + (C71752 + C71753) * C153905 +
             (C71754 + C71755) * C153852) *
                C153626 * C153591 -
            (C71236 * C153852 + C71237 * C153905 + (C70760 + C70761) * C153924 +
             (C70423 * C330 + C70706 + C70706 + C153671 * C354 + C70421 * C329 +
              C70707 + C70707 + C70415 * C353) *
                 C153931) *
                C153626 * C153838) *
               C153563) *
              C153829 +
          ((((C71035 + C71034) * C153931 + (C71033 + C71032) * C153924 +
             (C71031 + C71030) * C153905 + (C71456 + C71457) * C153852) *
                C153626 * C153591 -
            (C70492 * C153852 + C70493 * C153905 + (C70483 + C70482) * C153924 +
             (C70481 + C70480) * C153931) *
                C153626 * C153838) *
               C1223 +
           (((C70761 + C70760) * C153931 + (C70759 + C70758) * C153924 +
             (C70757 + C70756) * C153905 + (C71248 + C71249) * C153852) *
                C153626 * C153838 -
            ((C70423 * C1888 + C71736 + C71736 + C153671 * C1898 +
              C70421 * C1061 + C71737 + C71737 + C70415 * C1073) *
                 C153852 +
             (C71755 + C71754) * C153905 + (C71753 + C71752) * C153924 +
             (C71751 + C71750) * C153931) *
                C153626 * C153591) *
               C153563) *
              C153498)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
               C70427 + C70427 + C153671 * C353) *
                  C74249 +
              (C70480 + C70481) * C153464) *
                 C153926 +
             ((C78815 + C78816) * C74249 + C78756 * C153464) * C153915 +
             C78831 * C153890) *
                C153838 -
            ((C78828 * C153464 + (C78821 + C78822) * C74249) * C153890 +
             (C78770 * C153464 + (C78818 + C78817) * C74249) * C153915 +
             (C78771 * C153464 + (C78816 + C78815) * C74249) * C153926) *
                C153591) *
               C1223 +
           ((((C79844 + C79845) * C74249 + C79814 * C153464) * C153926 +
             ((C79846 + C79847) * C74249 + C79819 * C153464) * C153915 +
             ((C80648 + C80649) * C74249 + (C79848 + C79849) * C153464) *
                 C153890) *
                C153591 -
            (C80647 * C153890 +
             (C79829 * C153464 + (C79845 + C79844) * C74249) * C153915 +
             ((C70760 + C70761) * C153464 +
              (C70423 * C330 + C70706 + C70706 + C153671 * C354 +
               C70421 * C329 + C70707 + C70707 + C70415 * C353) *
                  C74249) *
                 C153926) *
                C153838) *
               C153563) *
              C153829 +
          ((((C78756 * C74249 + C79422 * C153464) * C153926 +
             (C78761 * C74249 + C79423 * C153464) * C153915 +
             (C78829 * C74249 + (C78825 + C78826) * C153464) * C153890) *
                C153591 -
            (C78814 * C153890 + (C71445 * C153464 + C78771 * C74249) * C153915 +
             ((C70483 + C70482) * C153464 + (C70481 + C70480) * C74249) *
                 C153926) *
                C153838) *
               C1223 +
           ((((C70761 + C70760) * C74249 + (C70759 + C70758) * C153464) *
                 C153926 +
             (C79814 * C74249 + (C71752 + C71753) * C153464) * C153915 +
             (C79819 * C74249 + (C79130 + C79131) * C153464) * C153890) *
                C153838 -
            (((C70423 * C6301 + C79830 + C79830 + C153671 * C6313 +
               C70421 * C6302 + C79831 + C79831 + C70415 * C6314) *
                  C153464 +
              (C79849 + C79848) * C74249) *
                 C153890 +
             ((C79131 + C79130) * C153464 + C79828 * C74249) * C153915 +
             ((C71753 + C71752) * C153464 + C79829 * C74249) * C153926) *
                C153591) *
               C153563) *
              C153498)) /
            (p * q * std::sqrt(p + q));
    d2ee[39] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
            C70427 + C70427 + C153671 * C353) *
               C153931 +
           (C70480 + C70481) * C153924 + C70490 * C153905 + C70491 * C153852) *
              C153626 * C153527 * C1310 -
          (C71236 * C153852 + C71237 * C153905 + (C70760 + C70761) * C153924 +
           (C70423 * C330 + C70706 + C70706 + C153671 * C354 + C70421 * C329 +
            C70707 + C70707 + C70415 * C353) *
               C153931) *
              C153626 * C153527 * C1311 +
          ((C70421 * C330 + C70708 + C70708 + C70415 * C354 + C70423 * C1319 +
            C70709 + C70709 + C153671 * C1329) *
               C153931 +
           (C70762 + C70763) * C153924 + (C70764 + C70765) * C153905 +
           (C70766 + C70767) * C153852) *
              C153626 * C153527 * C1312 -
          ((C70423 * C3130 + C72080 + C72080 + C153671 * C3138 +
            C70421 * C1316 + C72081 + C72081 + C70415 * C1326) *
               C153852 +
           (C70423 * C3129 + C72082 + C72082 + C153671 * C3137 +
            C70421 * C1317 + C72083 + C72083 + C70415 * C1327) *
               C153905 +
           (C70423 * C3128 + C72084 + C72084 + C153671 * C3136 +
            C70421 * C1318 + C72085 + C72085 + C70415 * C1328) *
               C153924 +
           (C70423 * C3127 + C72086 + C72086 + C153671 * C3135 +
            C70421 * C1319 + C72087 + C72087 + C70415 * C1329) *
               C153931) *
              C153626 * C153527 * C1313) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
             C70427 + C70427 + C153671 * C353) *
                C153931 +
            (C70480 + C70481) * C153924 + C70490 * C153905 + C70491 * C153852) *
               C153626 * C153527 * C1223 -
           (C71236 * C153852 + C71237 * C153905 + (C70760 + C70761) * C153924 +
            (C70423 * C330 + C70706 + C70706 + C153671 * C354 + C70421 * C329 +
             C70707 + C70707 + C70415 * C353) *
                C153931) *
               C153626 * C153527 * C153563) *
              C1225 +
          (((C70761 + C70760) * C153931 + (C70759 + C70758) * C153924 +
            (C70757 + C70756) * C153905 + (C71248 + C71249) * C153852) *
               C153626 * C153527 * C153563 -
           (C70492 * C153852 + C70493 * C153905 + (C70483 + C70482) * C153924 +
            (C70481 + C70480) * C153931) *
               C153626 * C153527 * C1223) *
              C1226 +
          ((C70490 * C153931 + C70491 * C153924 + (C70487 + C70486) * C153905 +
            (C70488 + C70489) * C153852) *
               C153626 * C153527 * C1223 -
           ((C70423 * C336 + C71242 + C71242 + C153671 * C360 + C70421 * C335 +
             C71243 + C71243 + C70415 * C359) *
                C153852 +
            (C71249 + C71248) * C153905 + C71236 * C153924 + C71237 * C153931) *
               C153626 * C153527 * C153563) *
              C1227)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C74251 * C136 + C74260 + C74260 + C153932 * C152 + C74253 * C329 +
             C74261 + C74261 + C153928 * C353 + C74255 * C330 + C74262 +
             C74262 + C153918 * C354 + C74257 * C1319 + C74263 + C74263 +
             C153860 * C1329) *
                C74249 +
            (C74328 + C74329 + C74330 + C74331) * C153464) *
               C153626 * C153527 * C1223 -
           ((C74590 + C74591 + C74592 + C74593) * C153464 +
            (C74257 * C3127 + C74546 + C74546 + C153860 * C3135 +
             C74255 * C1319 + C74547 + C74547 + C153918 * C1329 +
             C74253 * C330 + C74548 + C74548 + C153928 * C354 + C74251 * C329 +
             C74549 + C74549 + C153932 * C353) *
                C74249) *
               C153626 * C153527 * C153563) *
              C1225 +
          (((C74593 + C74592 + C74591 + C74590) * C74249 +
            (C75070 + C75071 + C75072 + C75073) * C153464) *
               C153626 * C153527 * C153563 -
           ((C74332 + C74333 + C74334 + C74335) * C153464 +
            (C74331 + C74330 + C74329 + C74328) * C74249) *
               C153626 * C153527 * C1223) *
              C1226 +
          (((C74335 + C74334 + C74333 + C74332) * C74249 +
            (C74336 + C74337 + C74338 + C74339) * C153464) *
               C153626 * C153527 * C1223 -
           ((C74257 * C3130 + C75058 + C75058 + C153860 * C3138 +
             C74255 * C1316 + C75059 + C75059 + C153918 * C1326 +
             C74253 * C333 + C75060 + C75060 + C153928 * C357 + C74251 * C326 +
             C75061 + C75061 + C153932 * C350) *
                C153464 +
            (C75073 + C75072 + C75071 + C75070) * C74249) *
               C153626 * C153527 * C153563) *
              C1227)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C74251 * C136 + C74260 + C74260 + C153932 * C152 + C74253 * C329 +
            C74261 + C74261 + C153928 * C353 + C74255 * C330 + C74262 + C74262 +
            C153918 * C354 + C74257 * C1319 + C74263 + C74263 +
            C153860 * C1329) *
               C74249 +
           (C74328 + C74329 + C74330 + C74331) * C153464) *
              C153626 * C153527 * C1310 -
          ((C74590 + C74591 + C74592 + C74593) * C153464 +
           (C74257 * C3127 + C74546 + C74546 + C153860 * C3135 +
            C74255 * C1319 + C74547 + C74547 + C153918 * C1329 + C74253 * C330 +
            C74548 + C74548 + C153928 * C354 + C74251 * C329 + C74549 + C74549 +
            C153932 * C353) *
               C74249) *
              C153626 * C153527 * C1311 +
          ((C74251 * C330 + C74550 + C74550 + C153932 * C354 + C74253 * C1319 +
            C74551 + C74551 + C153928 * C1329 + C74255 * C3127 + C74552 +
            C74552 + C153918 * C3135 + C74257 * C4723 + C74553 + C74553 +
            C153860 * C4729) *
               C74249 +
           (C74594 + C74595 + C74596 + C74597) * C153464) *
              C153626 * C153527 * C1312 -
          ((C74257 * C28503 + C75906 + C75906 + C153860 * C28507 +
            C74255 * C4722 + C75907 + C75907 + C153918 * C4728 +
            C74253 * C3128 + C75908 + C75908 + C153928 * C3136 +
            C74251 * C1318 + C75909 + C75909 + C153932 * C1328) *
               C153464 +
           (C74257 * C28502 + C75910 + C75910 + C153860 * C28506 +
            C74255 * C4723 + C75911 + C75911 + C153918 * C4729 +
            C74253 * C3127 + C75912 + C75912 + C153928 * C3135 +
            C74251 * C1319 + C75913 + C75913 + C153932 * C1329) *
               C74249) *
              C153626 * C153527 * C1313) *
         C153492) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
              C70427 + C70427 + C153671 * C353) *
                 C74249 +
             (C70480 + C70481) * C153464) *
                C153926 +
            ((C78815 + C78816) * C74249 + C78756 * C153464) * C153915 +
            C78831 * C153890) *
               C153527 * C1223 -
           ((C79828 * C153464 + (C79847 + C79846) * C74249) * C153890 +
            (C79829 * C153464 + (C79845 + C79844) * C74249) * C153915 +
            ((C70760 + C70761) * C153464 +
             (C70423 * C330 + C70706 + C70706 + C153671 * C354 + C70421 * C329 +
              C70707 + C70707 + C70415 * C353) *
                 C74249) *
                C153926) *
               C153527 * C153563) *
              C1225 +
          ((((C70761 + C70760) * C74249 + (C70759 + C70758) * C153464) *
                C153926 +
            (C79814 * C74249 + (C71752 + C71753) * C153464) * C153915 +
            (C79819 * C74249 + (C79130 + C79131) * C153464) * C153890) *
               C153527 * C153563 -
           (C78814 * C153890 + (C71445 * C153464 + C78771 * C74249) * C153915 +
            ((C70483 + C70482) * C153464 + (C70481 + C70480) * C74249) *
                C153926) *
               C153527 * C1223) *
              C1226 +
          (((C70490 * C74249 + C70491 * C153464) * C153926 +
            (C79422 * C74249 + (C71031 + C71030) * C153464) * C153915 +
            (C79423 * C74249 + (C71040 + C71041) * C153464) * C153890) *
               C153527 * C1223 -
           (((C70423 * C3444 + C72282 + C72282 + C153671 * C3452 +
              C70421 * C1458 + C72283 + C72283 + C70415 * C1468) *
                 C153464 +
             (C79131 + C79130) * C74249) *
                C153890 +
            ((C71755 + C71754) * C153464 + (C71753 + C71752) * C74249) *
                C153915 +
            (C71236 * C153464 + C71237 * C74249) * C153926) *
               C153527 * C153563) *
              C1227)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
             C70427 + C70427 + C153671 * C353) *
                C74249 +
            (C70480 + C70481) * C153464) *
               C153926 +
           ((C78815 + C78816) * C74249 + C78756 * C153464) * C153915 +
           C78831 * C153890) *
              C153527 * C1310 -
          ((C79828 * C153464 + (C79847 + C79846) * C74249) * C153890 +
           (C79829 * C153464 + (C79845 + C79844) * C74249) * C153915 +
           ((C70760 + C70761) * C153464 +
            (C70423 * C330 + C70706 + C70706 + C153671 * C354 + C70421 * C329 +
             C70707 + C70707 + C70415 * C353) *
                C74249) *
               C153926) *
              C153527 * C1311 +
          (((C70421 * C330 + C70708 + C70708 + C70415 * C354 + C70423 * C1319 +
             C70709 + C70709 + C153671 * C1329) *
                C74249 +
            (C70762 + C70763) * C153464) *
               C153926 +
           ((C70421 * C1892 + C72943 + C72943 + C70415 * C1902 +
             C70423 * C4303 + C72942 + C72942 + C153671 * C4311) *
                C74249 +
            (C78458 + C78459) * C153464) *
               C153915 +
           ((C70421 * C3441 + C78434 + C78434 + C70415 * C3449 +
             C70423 * C4959 + C78435 + C78435 + C153671 * C4965) *
                C74249 +
            (C78460 + C78461) * C153464) *
               C153890) *
              C153527 * C1312 -
          (((C70423 * C28651 + C80334 + C80334 + C153671 * C28655 +
             C70421 * C4958 + C80335 + C80335 + C70415 * C4964) *
                C153464 +
            (C70423 * C28650 + C80336 + C80336 + C153671 * C28654 +
             C70421 * C4959 + C80337 + C80337 + C70415 * C4965) *
                C74249) *
               C153890 +
           ((C70423 * C5702 + C80338 + C80338 + C153671 * C5708 +
             C70421 * C4304 + C80339 + C80339 + C70415 * C4312) *
                C153464 +
            (C70423 * C5703 + C80340 + C80340 + C153671 * C5709 +
             C70421 * C4303 + C80341 + C80341 + C70415 * C4311) *
                C74249) *
               C153915 +
           ((C70423 * C3128 + C72084 + C72084 + C153671 * C3136 +
             C70421 * C1318 + C72085 + C72085 + C70415 * C1328) *
                C153464 +
            (C70423 * C3127 + C72086 + C72086 + C153671 * C3135 +
             C70421 * C1319 + C72087 + C72087 + C70415 * C1329) *
                C74249) *
               C153926) *
              C153527 * C1313) *
         C153492) /
            (p * q * std::sqrt(p + q));
    d2ee[40] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C74251 * C136 + C74260 + C74260 + C153932 * C152 + C74253 * C329 +
              C74261 + C74261 + C153928 * C353 + C74255 * C330 + C74262 +
              C74262 + C153918 * C354 + C74257 * C1319 + C74263 + C74263 +
              C153860 * C1329) *
                 C74249 +
             (C74328 + C74329 + C74330 + C74331) * C153464) *
                C153626 * C2030 -
            ((C74848 + C74849 + C74850 + C74851) * C153464 +
             (C74257 * C4303 + C74804 + C74804 + C153860 * C4311 +
              C74255 * C1892 + C74805 + C74805 + C153918 * C1902 +
              C74253 * C1057 + C74806 + C74806 + C153928 * C1069 +
              C74251 * C542 + C74807 + C74807 + C153932 * C566) *
                 C74249) *
                C153626 * C153591) *
               C153837 +
           (((C74251 * C1057 + C75550 + C75550 + C153932 * C1069 +
              C74253 * C1892 + C75551 + C75551 + C153928 * C1902 +
              C74255 * C4303 + C75552 + C75552 + C153918 * C4311 +
              C74257 * C5703 + C75553 + C75553 + C153860 * C5709) *
                 C74249 +
             (C75578 + C75579 + C75580 + C75581) * C153464) *
                C153626 * C153591 -
            ((C74590 + C74591 + C74592 + C74593) * C153464 +
             (C74257 * C3127 + C74546 + C74546 + C153860 * C3135 +
              C74255 * C1319 + C74547 + C74547 + C153918 * C1329 +
              C74253 * C330 + C74548 + C74548 + C153928 * C354 + C74251 * C329 +
              C74549 + C74549 + C153932 * C353) *
                 C74249) *
                C153626 * C2030) *
               C153563) *
              C153829 +
          ((((C74851 + C74850 + C74849 + C74848) * C74249 +
             (C75288 + C75289 + C75290 + C75291) * C153464) *
                C153626 * C153591 -
            ((C74332 + C74333 + C74334 + C74335) * C153464 +
             (C74331 + C74330 + C74329 + C74328) * C74249) *
                C153626 * C2030) *
               C153837 +
           (((C74593 + C74592 + C74591 + C74590) * C74249 +
             (C75070 + C75071 + C75072 + C75073) * C153464) *
                C153626 * C2030 -
            ((C74257 * C5701 + C75566 + C75566 + C153860 * C5707 +
              C74255 * C4305 + C75567 + C75567 + C153918 * C4313 +
              C74253 * C1890 + C75568 + C75568 + C153928 * C1900 +
              C74251 * C1059 + C75569 + C75569 + C153932 * C1071) *
                 C153464 +
             (C75581 + C75580 + C75579 + C75578) * C74249) *
                C153626 * C153591) *
               C153563) *
              C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
              C70427 + C70427 + C153671 * C353) *
                 C153931 +
             (C70480 + C70481) * C153924 + C70490 * C153905 +
             C70491 * C153852) *
                C153626 * C2030 -
            (C71444 * C153852 + C71445 * C153905 + (C71034 + C71035) * C153924 +
             (C70423 * C1057 + C70980 + C70980 + C153671 * C1069 +
              C70421 * C542 + C70981 + C70981 + C70415 * C566) *
                 C153931) *
                C153626 * C153591) *
               C153837 +
           (((C70421 * C1057 + C71716 + C71716 + C70415 * C1069 +
              C70423 * C1892 + C71717 + C71717 + C153671 * C1902) *
                 C153931 +
             (C71750 + C71751) * C153924 + (C71752 + C71753) * C153905 +
             (C71754 + C71755) * C153852) *
                C153626 * C153591 -
            (C71236 * C153852 + C71237 * C153905 + (C70760 + C70761) * C153924 +
             (C70423 * C330 + C70706 + C70706 + C153671 * C354 + C70421 * C329 +
              C70707 + C70707 + C70415 * C353) *
                 C153931) *
                C153626 * C2030) *
               C153563) *
              C153829 +
          ((((C71035 + C71034) * C153931 + (C71033 + C71032) * C153924 +
             (C71031 + C71030) * C153905 + (C71456 + C71457) * C153852) *
                C153626 * C153591 -
            (C70492 * C153852 + C70493 * C153905 + (C70483 + C70482) * C153924 +
             (C70481 + C70480) * C153931) *
                C153626 * C2030) *
               C153837 +
           (((C70761 + C70760) * C153931 + (C70759 + C70758) * C153924 +
             (C70757 + C70756) * C153905 + (C71248 + C71249) * C153852) *
                C153626 * C2030 -
            ((C70423 * C1888 + C71736 + C71736 + C153671 * C1898 +
              C70421 * C1061 + C71737 + C71737 + C70415 * C1073) *
                 C153852 +
             (C71755 + C71754) * C153905 + (C71753 + C71752) * C153924 +
             (C71751 + C71750) * C153931) *
                C153626 * C153591) *
               C153563) *
              C153498)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
               C70427 + C70427 + C153671 * C353) *
                  C74249 +
              (C70480 + C70481) * C153464) *
                 C153926 +
             ((C78815 + C78816) * C74249 + C78756 * C153464) * C153915 +
             C78831 * C153890) *
                C2030 -
            (C82427 * C153890 +
             (C78770 * C153464 + (C78818 + C78817) * C74249) * C153915 +
             (C78771 * C153464 + (C78816 + C78815) * C74249) * C153926) *
                C153591) *
               C153837 +
           ((((C79844 + C79845) * C74249 + C79814 * C153464) * C153926 +
             ((C79846 + C79847) * C74249 + C79819 * C153464) * C153915 +
             ((C80648 + C80649) * C74249 + (C79848 + C79849) * C153464) *
                 C153890) *
                C153591 -
            (C80647 * C153890 +
             (C79829 * C153464 + (C79845 + C79844) * C74249) * C153915 +
             ((C70760 + C70761) * C153464 +
              (C70423 * C330 + C70706 + C70706 + C153671 * C354 +
               C70421 * C329 + C70707 + C70707 + C70415 * C353) *
                  C74249) *
                 C153926) *
                C2030) *
               C153563) *
              C153829 +
          ((((C78756 * C74249 + C79422 * C153464) * C153926 +
             (C78761 * C74249 + C79423 * C153464) * C153915 +
             (C78829 * C74249 + (C78825 + C78826) * C153464) * C153890) *
                C153591 -
            (C78814 * C153890 + (C71445 * C153464 + C78771 * C74249) * C153915 +
             ((C70483 + C70482) * C153464 + (C70481 + C70480) * C74249) *
                 C153926) *
                C2030) *
               C153837 +
           ((((C70761 + C70760) * C74249 + (C70759 + C70758) * C153464) *
                 C153926 +
             (C79814 * C74249 + (C71752 + C71753) * C153464) * C153915 +
             (C79819 * C74249 + (C79130 + C79131) * C153464) * C153890) *
                C2030 -
            (((C70423 * C6301 + C79830 + C79830 + C153671 * C6313 +
               C70421 * C6302 + C79831 + C79831 + C70415 * C6314) *
                  C153464 +
              (C79849 + C79848) * C74249) *
                 C153890 +
             ((C79131 + C79130) * C153464 + C79828 * C74249) * C153915 +
             ((C71753 + C71752) * C153464 + C79829 * C74249) * C153926) *
                C153591) *
               C153563) *
              C153498)) /
            (p * q * std::sqrt(p + q));
    d2ee[41] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C74251 * C136 + C74260 + C74260 + C153932 * C152 + C74253 * C329 +
             C74261 + C74261 + C153928 * C353 + C74255 * C330 + C74262 +
             C74262 + C153918 * C354 + C74257 * C1319 + C74263 + C74263 +
             C153860 * C1329) *
                C74249 +
            (C74328 + C74329 + C74330 + C74331) * C153464) *
               C153626 * C153910 -
           ((C74848 + C74849 + C74850 + C74851) * C153464 +
            (C74257 * C4303 + C74804 + C74804 + C153860 * C4311 +
             C74255 * C1892 + C74805 + C74805 + C153918 * C1902 +
             C74253 * C1057 + C74806 + C74806 + C153928 * C1069 +
             C74251 * C542 + C74807 + C74807 + C153932 * C566) *
                C74249) *
               C153626 * C153911 +
           ((C74251 * C543 + C74808 + C74808 + C153932 * C567 + C74253 * C1461 +
             C74809 + C74809 + C153928 * C1471 + C74255 * C3441 + C74810 +
             C74810 + C153918 * C3449 + C74257 * C4959 + C74811 + C74811 +
             C153860 * C4965) *
                C74249 +
            (C74852 + C74853 + C74854 + C74855) * C153464) *
               C153626 * C2546) *
              C153837 +
          (((C74251 * C1057 + C75550 + C75550 + C153932 * C1069 +
             C74253 * C1892 + C75551 + C75551 + C153928 * C1902 +
             C74255 * C4303 + C75552 + C75552 + C153918 * C4311 +
             C74257 * C5703 + C75553 + C75553 + C153860 * C5709) *
                C74249 +
            (C75578 + C75579 + C75580 + C75581) * C153464) *
               C153626 * C153911 -
           ((C74590 + C74591 + C74592 + C74593) * C153464 +
            (C74257 * C3127 + C74546 + C74546 + C153860 * C3135 +
             C74255 * C1319 + C74547 + C74547 + C153918 * C1329 +
             C74253 * C330 + C74548 + C74548 + C153928 * C354 + C74251 * C329 +
             C74549 + C74549 + C153932 * C353) *
                C74249) *
               C153626 * C153910 -
           ((C74257 * C28651 + C76108 + C76108 + C153860 * C28655 +
             C74255 * C4958 + C76109 + C76109 + C153918 * C4964 +
             C74253 * C3442 + C76110 + C76110 + C153928 * C3450 +
             C74251 * C1460 + C76111 + C76111 + C153932 * C1470) *
                C153464 +
            (C74257 * C28650 + C76112 + C76112 + C153860 * C28654 +
             C74255 * C4959 + C76113 + C76113 + C153918 * C4965 +
             C74253 * C3441 + C76114 + C76114 + C153928 * C3449 +
             C74251 * C1461 + C76115 + C76115 + C153932 * C1471) *
                C74249) *
               C153626 * C2546) *
              C153563) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
             C70427 + C70427 + C153671 * C353) *
                C153931 +
            (C70480 + C70481) * C153924 + C70490 * C153905 + C70491 * C153852) *
               C153626 * C153910 -
           (C71444 * C153852 + C71445 * C153905 + (C71034 + C71035) * C153924 +
            (C70423 * C1057 + C70980 + C70980 + C153671 * C1069 +
             C70421 * C542 + C70981 + C70981 + C70415 * C566) *
                C153931) *
               C153626 * C153911 +
           ((C70421 * C543 + C70982 + C70982 + C70415 * C567 + C70423 * C1461 +
             C70983 + C70983 + C153671 * C1471) *
                C153931 +
            (C71036 + C71037) * C153924 + (C71038 + C71039) * C153905 +
            (C71040 + C71041) * C153852) *
               C153626 * C2546) *
              C153837 +
          (((C70421 * C1057 + C71716 + C71716 + C70415 * C1069 +
             C70423 * C1892 + C71717 + C71717 + C153671 * C1902) *
                C153931 +
            (C71750 + C71751) * C153924 + (C71752 + C71753) * C153905 +
            (C71754 + C71755) * C153852) *
               C153626 * C153911 -
           (C71236 * C153852 + C71237 * C153905 + (C70760 + C70761) * C153924 +
            (C70423 * C330 + C70706 + C70706 + C153671 * C354 + C70421 * C329 +
             C70707 + C70707 + C70415 * C353) *
                C153931) *
               C153626 * C153910 -
           ((C70423 * C3444 + C72282 + C72282 + C153671 * C3452 +
             C70421 * C1458 + C72283 + C72283 + C70415 * C1468) *
                C153852 +
            (C70423 * C3443 + C72284 + C72284 + C153671 * C3451 +
             C70421 * C1459 + C72285 + C72285 + C70415 * C1469) *
                C153905 +
            (C70423 * C3442 + C72286 + C72286 + C153671 * C3450 +
             C70421 * C1460 + C72287 + C72287 + C70415 * C1470) *
                C153924 +
            (C70423 * C3441 + C72288 + C72288 + C153671 * C3449 +
             C70421 * C1461 + C72289 + C72289 + C70415 * C1471) *
                C153931) *
               C153626 * C2546) *
              C153563) *
         C153492) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
              C70427 + C70427 + C153671 * C353) *
                 C74249 +
             (C70480 + C70481) * C153464) *
                C153926 +
            ((C78815 + C78816) * C74249 + C78756 * C153464) * C153915 +
            C78831 * C153890) *
               C153910 -
           (C82427 * C153890 +
            (C78770 * C153464 + (C78818 + C78817) * C74249) * C153915 +
            (C78771 * C153464 + (C78816 + C78815) * C74249) * C153926) *
               C153911 +
           (C78831 * C153926 +
            ((C78822 + C78821) * C74249 + C78829 * C153464) * C153915 +
            ((C82430 + C82431) * C74249 + (C78823 + C78824) * C153464) *
                C153890) *
               C2546) *
              C153837 +
          ((((C79844 + C79845) * C74249 + C79814 * C153464) * C153926 +
            ((C79846 + C79847) * C74249 + C79819 * C153464) * C153915 +
            ((C80648 + C80649) * C74249 + (C79848 + C79849) * C153464) *
                C153890) *
               C153911 -
           (C80647 * C153890 +
            (C79829 * C153464 + (C79845 + C79844) * C74249) * C153915 +
            ((C70760 + C70761) * C153464 +
             (C70423 * C330 + C70706 + C70706 + C153671 * C354 + C70421 * C329 +
              C70707 + C70707 + C70415 * C353) *
                 C74249) *
                C153926) *
               C153910 -
           (((C70423 * C31196 + C80638 + C80638 + C153671 * C31200 +
              C70421 * C9116 + C80639 + C80639 + C70415 * C9122) *
                 C153464 +
             (C70423 * C31195 + C80640 + C80640 + C153671 * C31199 +
              C70421 * C9117 + C80641 + C80641 + C70415 * C9123) *
                 C74249) *
                C153890 +
            ((C79849 + C79848) * C153464 + (C80649 + C80648) * C74249) *
                C153915 +
            C80647 * C153926) *
               C2546) *
              C153563) *
         C153492) /
            (p * q * std::sqrt(p + q));
    d2ee[42] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C70421 * C136 + C70426 + C70426 + C70415 * C152 +
                 C70423 * C329 + C70427 + C70427 + C153671 * C353) *
                    C153931 +
                (C70480 + C70481) * C153924 + C70490 * C153905 +
                C70491 * C153852) *
                   C153626 * C2030 -
               (C71444 * C153852 + C71445 * C153905 +
                (C71034 + C71035) * C153924 +
                (C70423 * C1057 + C70980 + C70980 + C153671 * C1069 +
                 C70421 * C542 + C70981 + C70981 + C70415 * C566) *
                    C153931) *
                   C153626 * C153591) *
                  C153511 * C1225 +
              (((C71035 + C71034) * C153931 + (C71033 + C71032) * C153924 +
                (C71031 + C71030) * C153905 + (C71456 + C71457) * C153852) *
                   C153626 * C153591 -
               (C70492 * C153852 + C70493 * C153905 +
                (C70483 + C70482) * C153924 + (C70481 + C70480) * C153931) *
                   C153626 * C2030) *
                  C153511 * C1226 +
              ((C70490 * C153931 + C70491 * C153924 +
                (C70487 + C70486) * C153905 + (C70488 + C70489) * C153852) *
                   C153626 * C2030 -
               ((C70423 * C1062 + C71450 + C71450 + C153671 * C1074 +
                 C70421 * C548 + C71451 + C71451 + C70415 * C572) *
                    C153852 +
                (C71457 + C71456) * C153905 + C71444 * C153924 +
                C71445 * C153931) *
                   C153626 * C153591) *
                  C153511 * C1227) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C70421 * C136 + C70426 + C70426 + C70415 * C152 +
                 C70423 * C329 + C70427 + C70427 + C153671 * C353) *
                    C153931 +
                (C70480 + C70481) * C153924 + C70490 * C153905 +
                C70491 * C153852) *
                   C153626 * C2030 -
               (C71444 * C153852 + C71445 * C153905 +
                (C71034 + C71035) * C153924 +
                (C70423 * C1057 + C70980 + C70980 + C153671 * C1069 +
                 C70421 * C542 + C70981 + C70981 + C70415 * C566) *
                    C153931) *
                   C153626 * C153591) *
                  C320 +
              (((C70421 * C1057 + C71716 + C71716 + C70415 * C1069 +
                 C70423 * C1892 + C71717 + C71717 + C153671 * C1902) *
                    C153931 +
                (C71750 + C71751) * C153924 + (C71752 + C71753) * C153905 +
                (C71754 + C71755) * C153852) *
                   C153626 * C153591 -
               (C71236 * C153852 + C71237 * C153905 +
                (C70760 + C70761) * C153924 +
                (C70423 * C330 + C70706 + C70706 + C153671 * C354 +
                 C70421 * C329 + C70707 + C70707 + C70415 * C353) *
                    C153931) *
                   C153626 * C2030) *
                  C321 +
              (((C70421 * C330 + C70708 + C70708 + C70415 * C354 +
                 C70423 * C1319 + C70709 + C70709 + C153671 * C1329) *
                    C153931 +
                (C70762 + C70763) * C153924 + (C70764 + C70765) * C153905 +
                (C70766 + C70767) * C153852) *
                   C153626 * C2030 -
               ((C70423 * C4306 + C72936 + C72936 + C153671 * C4314 +
                 C70421 * C1889 + C72937 + C72937 + C70415 * C1899) *
                    C153852 +
                (C70423 * C4305 + C72938 + C72938 + C153671 * C4313 +
                 C70421 * C1890 + C72939 + C72939 + C70415 * C1900) *
                    C153905 +
                (C70423 * C4304 + C72940 + C72940 + C153671 * C4312 +
                 C70421 * C1891 + C72941 + C72941 + C70415 * C1901) *
                    C153924 +
                (C70423 * C4303 + C72942 + C72942 + C153671 * C4311 +
                 C70421 * C1892 + C72943 + C72943 + C70415 * C1902) *
                    C153931) *
                   C153626 * C153591) *
                  C322) *
             C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
            C70427 + C70427 + C153671 * C353) *
               C153931 +
           (C70480 + C70481) * C153924 + C70490 * C153905 + C70491 * C153852) *
              C153626 * C2236 -
          (C71444 * C153852 + C71445 * C153905 + (C71034 + C71035) * C153924 +
           (C70423 * C1057 + C70980 + C70980 + C153671 * C1069 + C70421 * C542 +
            C70981 + C70981 + C70415 * C566) *
               C153931) *
              C153626 * C2237 +
          ((C70421 * C543 + C70982 + C70982 + C70415 * C567 + C70423 * C1461 +
            C70983 + C70983 + C153671 * C1471) *
               C153931 +
           (C71036 + C71037) * C153924 + (C71038 + C71039) * C153905 +
           (C71040 + C71041) * C153852) *
              C153626 * C2238 -
          ((C70423 * C8488 + C73462 + C73462 + C153671 * C8490 +
            C70421 * C2241 + C73463 + C73463 + C70415 * C2251) *
               C153852 +
           (C70423 * C6302 + C73464 + C73464 + C153671 * C6314 +
            C70421 * C2242 + C73465 + C73465 + C70415 * C2252) *
               C153905 +
           (C70423 * C6304 + C73466 + C73466 + C153671 * C6316 +
            C70421 * C2243 + C73467 + C73467 + C70415 * C2253) *
               C153924 +
           (C70423 * C6306 + C73468 + C73468 + C153671 * C6318 +
            C70421 * C2244 + C73469 + C73469 + C70415 * C2254) *
               C153931) *
              C153626 * C2239) *
         C153511 * C153492) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C74251 * C136 + C74260 + C74260 + C153932 * C152 + C74253 * C329 +
             C74261 + C74261 + C153928 * C353 + C74255 * C330 + C74262 +
             C74262 + C153918 * C354 + C74257 * C1319 + C74263 + C74263 +
             C153860 * C1329) *
                C74249 +
            (C74328 + C74329 + C74330 + C74331) * C153464) *
               C153626 * C2030 -
           ((C74848 + C74849 + C74850 + C74851) * C153464 +
            (C74257 * C4303 + C74804 + C74804 + C153860 * C4311 +
             C74255 * C1892 + C74805 + C74805 + C153918 * C1902 +
             C74253 * C1057 + C74806 + C74806 + C153928 * C1069 +
             C74251 * C542 + C74807 + C74807 + C153932 * C566) *
                C74249) *
               C153626 * C153591) *
              C153511 * C1225 +
          (((C74851 + C74850 + C74849 + C74848) * C74249 +
            (C75288 + C75289 + C75290 + C75291) * C153464) *
               C153626 * C153591 -
           ((C74332 + C74333 + C74334 + C74335) * C153464 +
            (C74331 + C74330 + C74329 + C74328) * C74249) *
               C153626 * C2030) *
              C153511 * C1226 +
          (((C74335 + C74334 + C74333 + C74332) * C74249 +
            (C74336 + C74337 + C74338 + C74339) * C153464) *
               C153626 * C2030 -
           ((C74257 * C4306 + C75276 + C75276 + C153860 * C4314 +
             C74255 * C1889 + C75277 + C75277 + C153918 * C1899 +
             C74253 * C1060 + C75278 + C75278 + C153928 * C1072 +
             C74251 * C539 + C75279 + C75279 + C153932 * C563) *
                C153464 +
            (C75291 + C75290 + C75289 + C75288) * C74249) *
               C153626 * C153591) *
              C153511 * C1227)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C74251 * C136 + C74260 + C74260 + C153932 * C152 + C74253 * C329 +
             C74261 + C74261 + C153928 * C353 + C74255 * C330 + C74262 +
             C74262 + C153918 * C354 + C74257 * C1319 + C74263 + C74263 +
             C153860 * C1329) *
                C74249 +
            (C74328 + C74329 + C74330 + C74331) * C153464) *
               C153626 * C2030 -
           ((C74848 + C74849 + C74850 + C74851) * C153464 +
            (C74257 * C4303 + C74804 + C74804 + C153860 * C4311 +
             C74255 * C1892 + C74805 + C74805 + C153918 * C1902 +
             C74253 * C1057 + C74806 + C74806 + C153928 * C1069 +
             C74251 * C542 + C74807 + C74807 + C153932 * C566) *
                C74249) *
               C153626 * C153591) *
              C320 +
          (((C74251 * C1057 + C75550 + C75550 + C153932 * C1069 +
             C74253 * C1892 + C75551 + C75551 + C153928 * C1902 +
             C74255 * C4303 + C75552 + C75552 + C153918 * C4311 +
             C74257 * C5703 + C75553 + C75553 + C153860 * C5709) *
                C74249 +
            (C75578 + C75579 + C75580 + C75581) * C153464) *
               C153626 * C153591 -
           ((C74590 + C74591 + C74592 + C74593) * C153464 +
            (C74257 * C3127 + C74546 + C74546 + C153860 * C3135 +
             C74255 * C1319 + C74547 + C74547 + C153918 * C1329 +
             C74253 * C330 + C74548 + C74548 + C153928 * C354 + C74251 * C329 +
             C74549 + C74549 + C153932 * C353) *
                C74249) *
               C153626 * C2030) *
              C321 +
          (((C74251 * C330 + C74550 + C74550 + C153932 * C354 + C74253 * C1319 +
             C74551 + C74551 + C153928 * C1329 + C74255 * C3127 + C74552 +
             C74552 + C153918 * C3135 + C74257 * C4723 + C74553 + C74553 +
             C153860 * C4729) *
                C74249 +
            (C74594 + C74595 + C74596 + C74597) * C153464) *
               C153626 * C2030 -
           ((C74257 * C29093 + C76762 + C76762 + C153860 * C29097 +
             C74255 * C5702 + C76763 + C76763 + C153918 * C5708 +
             C74253 * C4304 + C76764 + C76764 + C153928 * C4312 +
             C74251 * C1891 + C76765 + C76765 + C153932 * C1901) *
                C153464 +
            (C74257 * C29092 + C76766 + C76766 + C153860 * C29096 +
             C74255 * C5703 + C76767 + C76767 + C153918 * C5709 +
             C74253 * C4303 + C76768 + C76768 + C153928 * C4311 +
             C74251 * C1892 + C76769 + C76769 + C153932 * C1902) *
                C74249) *
               C153626 * C153591) *
              C322) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C74251 * C136 + C74260 + C74260 + C153932 * C152 + C74253 * C329 +
            C74261 + C74261 + C153928 * C353 + C74255 * C330 + C74262 + C74262 +
            C153918 * C354 + C74257 * C1319 + C74263 + C74263 +
            C153860 * C1329) *
               C74249 +
           (C74328 + C74329 + C74330 + C74331) * C153464) *
              C153626 * C2236 -
          ((C74848 + C74849 + C74850 + C74851) * C153464 +
           (C74257 * C4303 + C74804 + C74804 + C153860 * C4311 +
            C74255 * C1892 + C74805 + C74805 + C153918 * C1902 +
            C74253 * C1057 + C74806 + C74806 + C153928 * C1069 + C74251 * C542 +
            C74807 + C74807 + C153932 * C566) *
               C74249) *
              C153626 * C2237 +
          ((C74251 * C543 + C74808 + C74808 + C153932 * C567 + C74253 * C1461 +
            C74809 + C74809 + C153928 * C1471 + C74255 * C3441 + C74810 +
            C74810 + C153918 * C3449 + C74257 * C4959 + C74811 + C74811 +
            C153860 * C4965) *
               C74249 +
           (C74852 + C74853 + C74854 + C74855) * C153464) *
              C153626 * C2238 -
          ((C74257 * C31999 + C77288 + C77288 + C153860 * C32001 +
            C74255 * C6303 + C77289 + C77289 + C153918 * C6315 +
            C74253 * C6304 + C77290 + C77290 + C153928 * C6316 +
            C74251 * C2243 + C77291 + C77291 + C153932 * C2253) *
               C153464 +
           (C74257 * C30191 + C77292 + C77292 + C153860 * C30195 +
            C74255 * C6305 + C77293 + C77293 + C153918 * C6317 +
            C74253 * C6306 + C77294 + C77294 + C153928 * C6318 +
            C74251 * C2244 + C77295 + C77295 + C153932 * C2254) *
               C74249) *
              C153626 * C2239) *
         C153511 * C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
              C70427 + C70427 + C153671 * C353) *
                 C74249 +
             (C70480 + C70481) * C153464) *
                C153926 +
            ((C78815 + C78816) * C74249 + C78756 * C153464) * C153915 +
            C78831 * C153890) *
               C2030 -
           ((C78828 * C153464 + (C78821 + C78822) * C74249) * C153890 +
            (C78770 * C153464 + (C78818 + C78817) * C74249) * C153915 +
            (C78771 * C153464 + (C78816 + C78815) * C74249) * C153926) *
               C153591) *
              C153511 * C1225 +
          (((C78756 * C74249 + C79422 * C153464) * C153926 +
            (C78761 * C74249 + C79423 * C153464) * C153915 +
            (C78829 * C74249 + (C78825 + C78826) * C153464) * C153890) *
               C153591 -
           (C78814 * C153890 + (C71445 * C153464 + C78771 * C74249) * C153915 +
            ((C70483 + C70482) * C153464 + (C70481 + C70480) * C74249) *
                C153926) *
               C2030) *
              C153511 * C1226 +
          (((C70490 * C74249 + C70491 * C153464) * C153926 +
            (C79422 * C74249 + (C71031 + C71030) * C153464) * C153915 +
            (C79423 * C74249 + (C71040 + C71041) * C153464) * C153890) *
               C2030 -
           (((C70423 * C8488 + C73462 + C73462 + C153671 * C8490 +
              C70421 * C2241 + C73463 + C73463 + C70415 * C2251) *
                 C153464 +
             (C78826 + C78825) * C74249) *
                C153890 +
            ((C71041 + C71040) * C153464 + C78784 * C74249) * C153915 +
            (C71444 * C153464 + C71445 * C74249) * C153926) *
               C153591) *
              C153511 * C1227)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
              C70427 + C70427 + C153671 * C353) *
                 C74249 +
             (C70480 + C70481) * C153464) *
                C153926 +
            ((C78815 + C78816) * C74249 + C78756 * C153464) * C153915 +
            C78831 * C153890) *
               C2030 -
           ((C78828 * C153464 + (C78821 + C78822) * C74249) * C153890 +
            (C78770 * C153464 + (C78818 + C78817) * C74249) * C153915 +
            (C78771 * C153464 + (C78816 + C78815) * C74249) * C153926) *
               C153591) *
              C320 +
          ((((C79844 + C79845) * C74249 + C79814 * C153464) * C153926 +
            ((C79846 + C79847) * C74249 + C79819 * C153464) * C153915 +
            ((C80648 + C80649) * C74249 + (C79848 + C79849) * C153464) *
                C153890) *
               C153591 -
           (C80647 * C153890 +
            (C79829 * C153464 + (C79845 + C79844) * C74249) * C153915 +
            ((C70760 + C70761) * C153464 +
             (C70423 * C330 + C70706 + C70706 + C153671 * C354 + C70421 * C329 +
              C70707 + C70707 + C70415 * C353) *
                 C74249) *
                C153926) *
               C2030) *
              C321 +
          ((((C70421 * C330 + C70708 + C70708 + C70415 * C354 + C70423 * C1319 +
              C70709 + C70709 + C153671 * C1329) *
                 C74249 +
             (C70762 + C70763) * C153464) *
                C153926 +
            ((C81636 + C81637) * C74249 + (C78458 + C78459) * C153464) *
                C153915 +
            ((C81638 + C81639) * C74249 + (C78460 + C78461) * C153464) *
                C153890) *
               C2030 -
           (((C70423 * C31999 + C81624 + C81624 + C153671 * C32001 +
              C70421 * C6303 + C81625 + C81625 + C70415 * C6315) *
                 C153464 +
             (C70423 * C30191 + C81626 + C81626 + C153671 * C30195 +
              C70421 * C6305 + C81627 + C81627 + C70415 * C6317) *
                 C74249) *
                C153890 +
            ((C78461 + C78460) * C153464 + (C81639 + C81638) * C74249) *
                C153915 +
            ((C78459 + C78458) * C153464 + (C81637 + C81636) * C74249) *
                C153926) *
               C153591) *
              C322) *
         C153492) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
             C70427 + C70427 + C153671 * C353) *
                C74249 +
            (C70480 + C70481) * C153464) *
               C153926 +
           ((C78815 + C78816) * C74249 + C78756 * C153464) * C153915 +
           C78831 * C153890) *
              C2236 -
          (C82427 * C153890 +
           (C78770 * C153464 + (C78818 + C78817) * C74249) * C153915 +
           (C78771 * C153464 + (C78816 + C78815) * C74249) * C153926) *
              C2237 +
          (C78831 * C153926 +
           ((C78822 + C78821) * C74249 + C78829 * C153464) * C153915 +
           ((C82430 + C82431) * C74249 + (C78823 + C78824) * C153464) *
               C153890) *
              C2238 -
          (((C70423 * C56351 + C82420 + C82420 + C153671 * C56353 +
             C70421 * C10465 + C82421 + C82421 + C70415 * C10471) *
                C153464 +
            (C70423 * C34007 + C82422 + C82422 + C153671 * C34011 +
             C70421 * C10466 + C82423 + C82423 + C70415 * C10472) *
                C74249) *
               C153890 +
           ((C78824 + C78823) * C153464 + (C82431 + C82430) * C74249) *
               C153915 +
           C82427 * C153926) *
              C2239) *
         C153511 * C153492) /
            (p * q * std::sqrt(p + q));
    d2ee[43] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C74251 * C136 + C74260 + C74260 + C153932 * C152 + C74253 * C329 +
             C74261 + C74261 + C153928 * C353 + C74255 * C330 + C74262 +
             C74262 + C153918 * C354 + C74257 * C1319 + C74263 + C74263 +
             C153860 * C1329) *
                C74249 +
            (C74328 + C74329 + C74330 + C74331) * C153464) *
               C153626 * C153910 -
           ((C74848 + C74849 + C74850 + C74851) * C153464 +
            (C74257 * C4303 + C74804 + C74804 + C153860 * C4311 +
             C74255 * C1892 + C74805 + C74805 + C153918 * C1902 +
             C74253 * C1057 + C74806 + C74806 + C153928 * C1069 +
             C74251 * C542 + C74807 + C74807 + C153932 * C566) *
                C74249) *
               C153626 * C153911 +
           ((C74251 * C543 + C74808 + C74808 + C153932 * C567 + C74253 * C1461 +
             C74809 + C74809 + C153928 * C1471 + C74255 * C3441 + C74810 +
             C74810 + C153918 * C3449 + C74257 * C4959 + C74811 + C74811 +
             C153860 * C4965) *
                C74249 +
            (C74852 + C74853 + C74854 + C74855) * C153464) *
               C153626 * C2546) *
              C153511 * C153829 +
          (((C74851 + C74850 + C74849 + C74848) * C74249 +
            (C75288 + C75289 + C75290 + C75291) * C153464) *
               C153626 * C153911 -
           ((C74332 + C74333 + C74334 + C74335) * C153464 +
            (C74331 + C74330 + C74329 + C74328) * C74249) *
               C153626 * C153910 -
           ((C74257 * C4957 + C74828 + C74828 + C153860 * C4963 +
             C74255 * C3443 + C74829 + C74829 + C153918 * C3451 +
             C74253 * C1459 + C74830 + C74830 + C153928 * C1469 +
             C74251 * C545 + C74831 + C74831 + C153932 * C569) *
                C153464 +
            (C74855 + C74854 + C74853 + C74852) * C74249) *
               C153626 * C2546) *
              C153511 * C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
             C70427 + C70427 + C153671 * C353) *
                C153931 +
            (C70480 + C70481) * C153924 + C70490 * C153905 + C70491 * C153852) *
               C153626 * C153910 -
           (C71444 * C153852 + C71445 * C153905 + (C71034 + C71035) * C153924 +
            (C70423 * C1057 + C70980 + C70980 + C153671 * C1069 +
             C70421 * C542 + C70981 + C70981 + C70415 * C566) *
                C153931) *
               C153626 * C153911 +
           ((C70421 * C543 + C70982 + C70982 + C70415 * C567 + C70423 * C1461 +
             C70983 + C70983 + C153671 * C1471) *
                C153931 +
            (C71036 + C71037) * C153924 + (C71038 + C71039) * C153905 +
            (C71040 + C71041) * C153852) *
               C153626 * C2546) *
              C153511 * C153829 +
          (((C71035 + C71034) * C153931 + (C71033 + C71032) * C153924 +
            (C71031 + C71030) * C153905 + (C71456 + C71457) * C153852) *
               C153626 * C153911 -
           (C70492 * C153852 + C70493 * C153905 + (C70483 + C70482) * C153924 +
            (C70481 + C70480) * C153931) *
               C153626 * C153910 -
           ((C70423 * C1457 + C71004 + C71004 + C153671 * C1467 +
             C70421 * C547 + C71005 + C71005 + C70415 * C571) *
                C153852 +
            (C71041 + C71040) * C153905 + (C71039 + C71038) * C153924 +
            (C71037 + C71036) * C153931) *
               C153626 * C2546) *
              C153511 * C153498)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
              C70427 + C70427 + C153671 * C353) *
                 C74249 +
             (C70480 + C70481) * C153464) *
                C153926 +
            ((C78815 + C78816) * C74249 + C78756 * C153464) * C153915 +
            C78831 * C153890) *
               C153910 -
           (C82427 * C153890 +
            (C78770 * C153464 + (C78818 + C78817) * C74249) * C153915 +
            (C78771 * C153464 + (C78816 + C78815) * C74249) * C153926) *
               C153911 +
           (C78831 * C153926 +
            ((C78822 + C78821) * C74249 + C78829 * C153464) * C153915 +
            ((C82430 + C82431) * C74249 + (C78823 + C78824) * C153464) *
                C153890) *
               C2546) *
              C153511 * C153829 +
          (((C78756 * C74249 + C79422 * C153464) * C153926 +
            (C78761 * C74249 + C79423 * C153464) * C153915 +
            (C78829 * C74249 + (C78825 + C78826) * C153464) * C153890) *
               C153911 -
           (C78814 * C153890 + (C71445 * C153464 + C78771 * C74249) * C153915 +
            ((C70483 + C70482) * C153464 + (C70481 + C70480) * C74249) *
                C153926) *
               C153910 -
           (((C70423 * C9115 + C78785 + C78785 + C153671 * C9121 +
              C70421 * C7675 + C78786 + C78786 + C70415 * C7683) *
                 C153464 +
             (C78824 + C78823) * C74249) *
                C153890 +
            ((C78826 + C78825) * C153464 + C78828 * C74249) * C153915 +
            C78814 * C153926) *
               C2546) *
              C153511 * C153498)) /
            (p * q * std::sqrt(p + q));
    d2ee[44] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
             C70427 + C70427 + C153671 * C353) *
                C153931 +
            (C70480 + C70481) * C153924 + C70490 * C153905 + C70491 * C153852) *
               C153626 * C2030 -
           (C71444 * C153852 + C71445 * C153905 + (C71034 + C71035) * C153924 +
            (C70423 * C1057 + C70980 + C70980 + C153671 * C1069 +
             C70421 * C542 + C70981 + C70981 + C70415 * C566) *
                C153931) *
               C153626 * C153591) *
              C320 +
          (((C70421 * C1057 + C71716 + C71716 + C70415 * C1069 +
             C70423 * C1892 + C71717 + C71717 + C153671 * C1902) *
                C153931 +
            (C71750 + C71751) * C153924 + (C71752 + C71753) * C153905 +
            (C71754 + C71755) * C153852) *
               C153626 * C153591 -
           (C71236 * C153852 + C71237 * C153905 + (C70760 + C70761) * C153924 +
            (C70423 * C330 + C70706 + C70706 + C153671 * C354 + C70421 * C329 +
             C70707 + C70707 + C70415 * C353) *
                C153931) *
               C153626 * C2030) *
              C321 +
          (((C70421 * C330 + C70708 + C70708 + C70415 * C354 + C70423 * C1319 +
             C70709 + C70709 + C153671 * C1329) *
                C153931 +
            (C70762 + C70763) * C153924 + (C70764 + C70765) * C153905 +
            (C70766 + C70767) * C153852) *
               C153626 * C2030 -
           ((C70423 * C4306 + C72936 + C72936 + C153671 * C4314 +
             C70421 * C1889 + C72937 + C72937 + C70415 * C1899) *
                C153852 +
            (C70423 * C4305 + C72938 + C72938 + C153671 * C4313 +
             C70421 * C1890 + C72939 + C72939 + C70415 * C1900) *
                C153905 +
            (C70423 * C4304 + C72940 + C72940 + C153671 * C4312 +
             C70421 * C1891 + C72941 + C72941 + C70415 * C1901) *
                C153924 +
            (C70423 * C4303 + C72942 + C72942 + C153671 * C4311 +
             C70421 * C1892 + C72943 + C72943 + C70415 * C1902) *
                C153931) *
               C153626 * C153591) *
              C322) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
             C70427 + C70427 + C153671 * C353) *
                C153931 +
            (C70480 + C70481) * C153924 + C70490 * C153905 + C70491 * C153852) *
               C153626 * C2030 -
           (C71444 * C153852 + C71445 * C153905 + (C71034 + C71035) * C153924 +
            (C70423 * C1057 + C70980 + C70980 + C153671 * C1069 +
             C70421 * C542 + C70981 + C70981 + C70415 * C566) *
                C153931) *
               C153626 * C153591) *
              C153511 * C1225 +
          (((C71035 + C71034) * C153931 + (C71033 + C71032) * C153924 +
            (C71031 + C71030) * C153905 + (C71456 + C71457) * C153852) *
               C153626 * C153591 -
           (C70492 * C153852 + C70493 * C153905 + (C70483 + C70482) * C153924 +
            (C70481 + C70480) * C153931) *
               C153626 * C2030) *
              C153511 * C1226 +
          ((C70490 * C153931 + C70491 * C153924 + (C70487 + C70486) * C153905 +
            (C70488 + C70489) * C153852) *
               C153626 * C2030 -
           ((C70423 * C1062 + C71450 + C71450 + C153671 * C1074 +
             C70421 * C548 + C71451 + C71451 + C70415 * C572) *
                C153852 +
            (C71457 + C71456) * C153905 + C71444 * C153924 + C71445 * C153931) *
               C153626 * C153591) *
              C153511 * C1227)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C74251 * C136 + C74260 + C74260 + C153932 * C152 + C74253 * C329 +
             C74261 + C74261 + C153928 * C353 + C74255 * C330 + C74262 +
             C74262 + C153918 * C354 + C74257 * C1319 + C74263 + C74263 +
             C153860 * C1329) *
                C74249 +
            (C74328 + C74329 + C74330 + C74331) * C153464) *
               C153626 * C2030 -
           ((C74848 + C74849 + C74850 + C74851) * C153464 +
            (C74257 * C4303 + C74804 + C74804 + C153860 * C4311 +
             C74255 * C1892 + C74805 + C74805 + C153918 * C1902 +
             C74253 * C1057 + C74806 + C74806 + C153928 * C1069 +
             C74251 * C542 + C74807 + C74807 + C153932 * C566) *
                C74249) *
               C153626 * C153591) *
              C153511 * C1225 +
          (((C74851 + C74850 + C74849 + C74848) * C74249 +
            (C75288 + C75289 + C75290 + C75291) * C153464) *
               C153626 * C153591 -
           ((C74332 + C74333 + C74334 + C74335) * C153464 +
            (C74331 + C74330 + C74329 + C74328) * C74249) *
               C153626 * C2030) *
              C153511 * C1226 +
          (((C74335 + C74334 + C74333 + C74332) * C74249 +
            (C74336 + C74337 + C74338 + C74339) * C153464) *
               C153626 * C2030 -
           ((C74257 * C4306 + C75276 + C75276 + C153860 * C4314 +
             C74255 * C1889 + C75277 + C75277 + C153918 * C1899 +
             C74253 * C1060 + C75278 + C75278 + C153928 * C1072 +
             C74251 * C539 + C75279 + C75279 + C153932 * C563) *
                C153464 +
            (C75291 + C75290 + C75289 + C75288) * C74249) *
               C153626 * C153591) *
              C153511 * C1227)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C74251 * C136 + C74260 + C74260 + C153932 * C152 + C74253 * C329 +
             C74261 + C74261 + C153928 * C353 + C74255 * C330 + C74262 +
             C74262 + C153918 * C354 + C74257 * C1319 + C74263 + C74263 +
             C153860 * C1329) *
                C74249 +
            (C74328 + C74329 + C74330 + C74331) * C153464) *
               C153626 * C2030 -
           ((C74848 + C74849 + C74850 + C74851) * C153464 +
            (C74257 * C4303 + C74804 + C74804 + C153860 * C4311 +
             C74255 * C1892 + C74805 + C74805 + C153918 * C1902 +
             C74253 * C1057 + C74806 + C74806 + C153928 * C1069 +
             C74251 * C542 + C74807 + C74807 + C153932 * C566) *
                C74249) *
               C153626 * C153591) *
              C320 +
          (((C74251 * C1057 + C75550 + C75550 + C153932 * C1069 +
             C74253 * C1892 + C75551 + C75551 + C153928 * C1902 +
             C74255 * C4303 + C75552 + C75552 + C153918 * C4311 +
             C74257 * C5703 + C75553 + C75553 + C153860 * C5709) *
                C74249 +
            (C75578 + C75579 + C75580 + C75581) * C153464) *
               C153626 * C153591 -
           ((C74590 + C74591 + C74592 + C74593) * C153464 +
            (C74257 * C3127 + C74546 + C74546 + C153860 * C3135 +
             C74255 * C1319 + C74547 + C74547 + C153918 * C1329 +
             C74253 * C330 + C74548 + C74548 + C153928 * C354 + C74251 * C329 +
             C74549 + C74549 + C153932 * C353) *
                C74249) *
               C153626 * C2030) *
              C321 +
          (((C74251 * C330 + C74550 + C74550 + C153932 * C354 + C74253 * C1319 +
             C74551 + C74551 + C153928 * C1329 + C74255 * C3127 + C74552 +
             C74552 + C153918 * C3135 + C74257 * C4723 + C74553 + C74553 +
             C153860 * C4729) *
                C74249 +
            (C74594 + C74595 + C74596 + C74597) * C153464) *
               C153626 * C2030 -
           ((C74257 * C29093 + C76762 + C76762 + C153860 * C29097 +
             C74255 * C5702 + C76763 + C76763 + C153918 * C5708 +
             C74253 * C4304 + C76764 + C76764 + C153928 * C4312 +
             C74251 * C1891 + C76765 + C76765 + C153932 * C1901) *
                C153464 +
            (C74257 * C29092 + C76766 + C76766 + C153860 * C29096 +
             C74255 * C5703 + C76767 + C76767 + C153918 * C5709 +
             C74253 * C4303 + C76768 + C76768 + C153928 * C4311 +
             C74251 * C1892 + C76769 + C76769 + C153932 * C1902) *
                C74249) *
               C153626 * C153591) *
              C322) *
         C153492) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
              C70427 + C70427 + C153671 * C353) *
                 C74249 +
             (C70480 + C70481) * C153464) *
                C153926 +
            ((C78815 + C78816) * C74249 + C78756 * C153464) * C153915 +
            C78831 * C153890) *
               C2030 -
           ((C78828 * C153464 + (C78821 + C78822) * C74249) * C153890 +
            (C78770 * C153464 + (C78818 + C78817) * C74249) * C153915 +
            (C78771 * C153464 + (C78816 + C78815) * C74249) * C153926) *
               C153591) *
              C153511 * C1225 +
          (((C78756 * C74249 + C79422 * C153464) * C153926 +
            (C78761 * C74249 + C79423 * C153464) * C153915 +
            (C78829 * C74249 + (C78825 + C78826) * C153464) * C153890) *
               C153591 -
           (C78814 * C153890 + (C71445 * C153464 + C78771 * C74249) * C153915 +
            ((C70483 + C70482) * C153464 + (C70481 + C70480) * C74249) *
                C153926) *
               C2030) *
              C153511 * C1226 +
          (((C70490 * C74249 + C70491 * C153464) * C153926 +
            (C79422 * C74249 + (C71031 + C71030) * C153464) * C153915 +
            (C79423 * C74249 + (C71040 + C71041) * C153464) * C153890) *
               C2030 -
           (((C70423 * C8488 + C73462 + C73462 + C153671 * C8490 +
              C70421 * C2241 + C73463 + C73463 + C70415 * C2251) *
                 C153464 +
             (C78826 + C78825) * C74249) *
                C153890 +
            ((C71041 + C71040) * C153464 + C78784 * C74249) * C153915 +
            (C71444 * C153464 + C71445 * C74249) * C153926) *
               C153591) *
              C153511 * C1227)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
              C70427 + C70427 + C153671 * C353) *
                 C74249 +
             (C70480 + C70481) * C153464) *
                C153926 +
            ((C78815 + C78816) * C74249 + C78756 * C153464) * C153915 +
            C78831 * C153890) *
               C2030 -
           ((C78828 * C153464 + (C78821 + C78822) * C74249) * C153890 +
            (C78770 * C153464 + (C78818 + C78817) * C74249) * C153915 +
            (C78771 * C153464 + (C78816 + C78815) * C74249) * C153926) *
               C153591) *
              C320 +
          ((((C79844 + C79845) * C74249 + C79814 * C153464) * C153926 +
            ((C79846 + C79847) * C74249 + C79819 * C153464) * C153915 +
            ((C80648 + C80649) * C74249 + (C79848 + C79849) * C153464) *
                C153890) *
               C153591 -
           (C80647 * C153890 +
            (C79829 * C153464 + (C79845 + C79844) * C74249) * C153915 +
            ((C70760 + C70761) * C153464 +
             (C70423 * C330 + C70706 + C70706 + C153671 * C354 + C70421 * C329 +
              C70707 + C70707 + C70415 * C353) *
                 C74249) *
                C153926) *
               C2030) *
              C321 +
          ((((C70421 * C330 + C70708 + C70708 + C70415 * C354 + C70423 * C1319 +
              C70709 + C70709 + C153671 * C1329) *
                 C74249 +
             (C70762 + C70763) * C153464) *
                C153926 +
            ((C81636 + C81637) * C74249 + (C78458 + C78459) * C153464) *
                C153915 +
            ((C81638 + C81639) * C74249 + (C78460 + C78461) * C153464) *
                C153890) *
               C2030 -
           (((C70423 * C31999 + C81624 + C81624 + C153671 * C32001 +
              C70421 * C6303 + C81625 + C81625 + C70415 * C6315) *
                 C153464 +
             (C70423 * C30191 + C81626 + C81626 + C153671 * C30195 +
              C70421 * C6305 + C81627 + C81627 + C70415 * C6317) *
                 C74249) *
                C153890 +
            ((C78461 + C78460) * C153464 + (C81639 + C81638) * C74249) *
                C153915 +
            ((C78459 + C78458) * C153464 + (C81637 + C81636) * C74249) *
                C153926) *
               C153591) *
              C322) *
         C153492) /
            (p * q * std::sqrt(p + q));
    d2ee[45] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
              C70427 + C70427 + C153671 * C353) *
                 C153459 +
             (C70480 + C70481) * C153467 + C70490 * C83548) *
                C153853 +
            ((C78815 + C78816) * C153459 + C78756 * C153467 + C79422 * C83548) *
                C153713) *
               C153527 * C153837 -
           ((C88776 * C83548 + C79829 * C153467 + (C79845 + C79844) * C153459) *
                C153713 +
            (C71237 * C83548 + (C70760 + C70761) * C153467 +
             (C70423 * C330 + C70706 + C70706 + C153671 * C354 + C70421 * C329 +
              C70707 + C70707 + C70415 * C353) *
                 C153459) *
                C153853) *
               C153527 * C153563) *
              C153906 +
          ((((C70761 + C70760) * C153459 + (C70759 + C70758) * C153467 +
             (C70757 + C70756) * C83548) *
                C153853 +
            (C79814 * C153459 + (C71752 + C71753) * C153467 +
             (C71754 + C71755) * C83548) *
                C153713) *
               C153527 * C153563 -
           ((C71444 * C83548 + C71445 * C153467 + C78771 * C153459) * C153713 +
            (C70493 * C83548 + (C70483 + C70482) * C153467 +
             (C70481 + C70480) * C153459) *
                C153853) *
               C153527 * C153837) *
              C153907 +
          (((C70490 * C153459 + C70491 * C153467 + (C70487 + C70486) * C83548) *
                C153853 +
            (C79422 * C153459 + (C71031 + C71030) * C153467 +
             (C71456 + C71457) * C83548) *
                C153713) *
               C153527 * C153837 -
           (((C70423 * C1888 + C71736 + C71736 + C153671 * C1898 +
              C70421 * C1061 + C71737 + C71737 + C70415 * C1073) *
                 C83548 +
             (C71755 + C71754) * C153467 + C88776 * C153459) *
                C153713 +
            ((C71249 + C71248) * C83548 + C71236 * C153467 + C71237 * C153459) *
                C153853) *
               C153527 * C153563) *
              C752)) /
        (p * q * std::sqrt(p + q));
    d2ee[46] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
               C70427 + C70427 + C153671 * C353) *
                  C153459 +
              (C70480 + C70481) * C153467 + C70490 * C83548) *
                 C153853 +
             ((C78815 + C78816) * C153459 + C78756 * C153467 +
              C79422 * C83548) *
                 C153713) *
                C153838 -
            ((C78784 * C83548 + C78770 * C153467 +
              (C78818 + C78817) * C153459) *
                 C153713 +
             (C71445 * C83548 + C78771 * C153467 +
              (C78816 + C78815) * C153459) *
                 C153853) *
                C153591) *
               C153837 +
           ((((C79844 + C79845) * C153459 + C79814 * C153467 +
              C89454 * C83548) *
                 C153853 +
             ((C79846 + C79847) * C153459 + C79819 * C153467 +
              (C79130 + C79131) * C83548) *
                 C153713) *
                C153591 -
            ((C88776 * C83548 + C79829 * C153467 +
              (C79845 + C79844) * C153459) *
                 C153713 +
             (C71237 * C83548 + (C70760 + C70761) * C153467 +
              (C70423 * C330 + C70706 + C70706 + C153671 * C354 +
               C70421 * C329 + C70707 + C70707 + C70415 * C353) *
                  C153459) *
                 C153853) *
                C153838) *
               C153563) *
              C323 +
          ((((C78756 * C153459 + C79422 * C153467 + C89067 * C83548) * C153853 +
             (C78761 * C153459 + C79423 * C153467 +
              (C71040 + C71041) * C83548) *
                 C153713) *
                C153591 -
            ((C71444 * C83548 + C71445 * C153467 + C78771 * C153459) * C153713 +
             (C70493 * C83548 + (C70483 + C70482) * C153467 +
              (C70481 + C70480) * C153459) *
                 C153853) *
                C153838) *
               C153837 +
           ((((C70761 + C70760) * C153459 + (C70759 + C70758) * C153467 +
              (C70757 + C70756) * C83548) *
                 C153853 +
             (C79814 * C153459 + C89454 * C153467 +
              (C71754 + C71755) * C83548) *
                 C153713) *
                C153838 -
            (((C70423 * C3444 + C72282 + C72282 + C153671 * C3452 +
               C70421 * C1458 + C72283 + C72283 + C70415 * C1468) *
                  C83548 +
              (C79131 + C79130) * C153467 + C79828 * C153459) *
                 C153713 +
             ((C71755 + C71754) * C83548 + C88776 * C153467 +
              C79829 * C153459) *
                 C153853) *
                C153591) *
               C153563) *
              C153498)) /
        (p * q * std::sqrt(p + q));
    d2ee[47] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
              C70427 + C70427 + C153671 * C353) *
                 C153459 +
             (C70480 + C70481) * C153467 + C70490 * C83548) *
                C153853 +
            ((C78815 + C78816) * C153459 + C78756 * C153467 + C79422 * C83548) *
                C153713) *
               C153527 * C320 -
           (((C71753 + C71752) * C83548 + C79829 * C153467 +
             (C79845 + C79844) * C153459) *
                C153713 +
            (C71237 * C83548 + (C70760 + C70761) * C153467 +
             (C70423 * C330 + C70706 + C70706 + C153671 * C354 + C70421 * C329 +
              C70707 + C70707 + C70415 * C353) *
                 C153459) *
                C153853) *
               C153527 * C321 +
           (((C70421 * C330 + C70708 + C70708 + C70415 * C354 + C70423 * C1319 +
              C70709 + C70709 + C153671 * C1329) *
                 C153459 +
             (C70762 + C70763) * C153467 + (C70764 + C70765) * C83548) *
                C153853 +
            ((C81636 + C81637) * C153459 + (C78458 + C78459) * C153467 +
             (C88194 + C88195) * C83548) *
                C153713) *
               C153527 * C322) *
              C323 +
          ((((C70761 + C70760) * C153459 + (C70759 + C70758) * C153467 +
             (C70757 + C70756) * C83548) *
                C153853 +
            (C79814 * C153459 + (C71752 + C71753) * C153467 +
             (C71754 + C71755) * C83548) *
                C153713) *
               C153527 * C321 -
           ((C71444 * C83548 + C71445 * C153467 + C78771 * C153459) * C153713 +
            (C70493 * C83548 + (C70483 + C70482) * C153467 +
             (C70481 + C70480) * C153459) *
                C153853) *
               C153527 * C320 -
           (((C70423 * C4306 + C72936 + C72936 + C153671 * C4314 +
              C70421 * C1889 + C72937 + C72937 + C70415 * C1899) *
                 C83548 +
             (C88195 + C88194) * C153467 + (C78459 + C78458) * C153459) *
                C153713 +
            ((C70767 + C70766) * C83548 + (C70765 + C70764) * C153467 +
             (C70763 + C70762) * C153459) *
                C153853) *
               C153527 * C322) *
              C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
             C70427 + C70427 + C153671 * C353) *
                C153459 +
            (C70480 + C70481) * C153467 + C70490 * C83548) *
               C153853 +
           ((C78815 + C78816) * C153459 + C78756 * C153467 + C79422 * C83548) *
               C153713) *
              C153527 * C153511 * C130 -
          ((C71444 * C83548 + C71445 * C153467 + C78771 * C153459) * C153713 +
           (C70493 * C83548 + (C70483 + C70482) * C153467 +
            (C70481 + C70480) * C153459) *
               C153853) *
              C153527 * C153511 * C131 +
          ((C70490 * C153459 + C70491 * C153467 + (C70487 + C70486) * C83548) *
               C153853 +
           (C79422 * C153459 + (C71031 + C71030) * C153467 +
            (C71456 + C71457) * C83548) *
               C153713) *
              C153527 * C153511 * C132 -
          (((C70423 * C1062 + C71450 + C71450 + C153671 * C1074 +
             C70421 * C548 + C71451 + C71451 + C70415 * C572) *
                C83548 +
            (C71457 + C71456) * C153467 + C71444 * C153459) *
               C153713 +
           ((C70489 + C70488) * C83548 + C70492 * C153467 + C70493 * C153459) *
               C153853) *
              C153527 * C153511 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
              C70427 + C70427 + C153671 * C353) *
                 C153459 +
             (C70480 + C70481) * C153467 + C70490 * C83548) *
                C153853 +
            ((C78815 + C78816) * C153459 + C78756 * C153467 + C79422 * C83548) *
                C153713) *
               C535 -
           ((C78784 * C83548 + C78770 * C153467 + (C78818 + C78817) * C153459) *
                C153713 +
            (C71445 * C83548 + C78771 * C153467 + (C78816 + C78815) * C153459) *
                C153853) *
               C536 +
           ((C78827 * C153459 + C78761 * C153467 + C79423 * C83548) * C153853 +
            ((C78822 + C78821) * C153459 + C78829 * C153467 +
             (C78825 + C78826) * C83548) *
                C153713) *
               C537) *
              C153511 * C323 +
          (((C78756 * C153459 + C79422 * C153467 + (C71031 + C71030) * C83548) *
                C153853 +
            (C78761 * C153459 + C79423 * C153467 + (C71040 + C71041) * C83548) *
                C153713) *
               C536 -
           ((C71444 * C83548 + C71445 * C153467 + C78771 * C153459) * C153713 +
            (C70493 * C83548 + (C70483 + C70482) * C153467 +
             (C70481 + C70480) * C153459) *
                C153853) *
               C535 -
           (((C70423 * C8488 + C73462 + C73462 + C153671 * C8490 +
              C70421 * C2241 + C73463 + C73463 + C70415 * C2251) *
                 C83548 +
             (C78826 + C78825) * C153467 + C78828 * C153459) *
                C153713 +
            ((C71041 + C71040) * C83548 + C78784 * C153467 + C78770 * C153459) *
                C153853) *
               C537) *
              C153511 * C153498)) /
            (p * q * std::sqrt(p + q));
    d2ee[48] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
              C70427 + C70427 + C153671 * C353) *
                 C153459 +
             (C70480 + C70481) * C153467 + C70490 * C83548) *
                C153853 +
            ((C78815 + C78816) * C153459 + C78756 * C153467 + C79422 * C83548) *
                C153713) *
               C153838 -
           ((C78784 * C83548 + C78770 * C153467 + (C78818 + C78817) * C153459) *
                C153713 +
            (C71445 * C83548 + C78771 * C153467 + (C78816 + C78815) * C153459) *
                C153853) *
               C153591) *
              C153511 * C153906 +
          (((C78756 * C153459 + C79422 * C153467 + C89067 * C83548) * C153853 +
            (C78761 * C153459 + C79423 * C153467 + (C71040 + C71041) * C83548) *
                C153713) *
               C153591 -
           ((C71444 * C83548 + C71445 * C153467 + C78771 * C153459) * C153713 +
            (C70493 * C83548 + (C70483 + C70482) * C153467 +
             (C70481 + C70480) * C153459) *
                C153853) *
               C153838) *
              C153511 * C153907 +
          (((C70490 * C153459 + C70491 * C153467 + (C70487 + C70486) * C83548) *
                C153853 +
            (C79422 * C153459 + C89067 * C153467 + (C71456 + C71457) * C83548) *
                C153713) *
               C153838 -
           (((C70423 * C1457 + C71004 + C71004 + C153671 * C1467 +
              C70421 * C547 + C71005 + C71005 + C70415 * C571) *
                 C83548 +
             (C71041 + C71040) * C153467 + C78784 * C153459) *
                C153713 +
            ((C71457 + C71456) * C83548 + C71444 * C153467 + C71445 * C153459) *
                C153853) *
               C153591) *
              C153511 * C752)) /
        (p * q * std::sqrt(p + q));
    d2ee[49] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
             C70427 + C70427 + C153671 * C353) *
                C153459 +
            (C70480 + C70481) * C153467 + C70490 * C83548) *
               C153853 +
           ((C78815 + C78816) * C153459 + C78756 * C153467 + C79422 * C83548) *
               C153713) *
              C153527 * C153511 * C130 -
          ((C71444 * C83548 + C71445 * C153467 + C78771 * C153459) * C153713 +
           (C70493 * C83548 + (C70483 + C70482) * C153467 +
            (C70481 + C70480) * C153459) *
               C153853) *
              C153527 * C153511 * C131 +
          ((C70490 * C153459 + C70491 * C153467 + (C70487 + C70486) * C83548) *
               C153853 +
           (C79422 * C153459 + (C71031 + C71030) * C153467 +
            (C71456 + C71457) * C83548) *
               C153713) *
              C153527 * C153511 * C132 -
          (((C70423 * C1062 + C71450 + C71450 + C153671 * C1074 +
             C70421 * C548 + C71451 + C71451 + C70415 * C572) *
                C83548 +
            (C71457 + C71456) * C153467 + C71444 * C153459) *
               C153713 +
           ((C70489 + C70488) * C83548 + C70492 * C153467 + C70493 * C153459) *
               C153853) *
              C153527 * C153511 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
              C70427 + C70427 + C153671 * C353) *
                 C153459 +
             (C70480 + C70481) * C153467 + C70490 * C83548) *
                C153853 +
            ((C78815 + C78816) * C153459 + C78756 * C153467 + C79422 * C83548) *
                C153713) *
               C153527 * C320 -
           (((C71753 + C71752) * C83548 + C79829 * C153467 +
             (C79845 + C79844) * C153459) *
                C153713 +
            (C71237 * C83548 + (C70760 + C70761) * C153467 +
             (C70423 * C330 + C70706 + C70706 + C153671 * C354 + C70421 * C329 +
              C70707 + C70707 + C70415 * C353) *
                 C153459) *
                C153853) *
               C153527 * C321 +
           (((C70421 * C330 + C70708 + C70708 + C70415 * C354 + C70423 * C1319 +
              C70709 + C70709 + C153671 * C1329) *
                 C153459 +
             (C70762 + C70763) * C153467 + (C70764 + C70765) * C83548) *
                C153853 +
            ((C81636 + C81637) * C153459 + (C78458 + C78459) * C153467 +
             (C88194 + C88195) * C83548) *
                C153713) *
               C153527 * C322) *
              C323 +
          ((((C70761 + C70760) * C153459 + (C70759 + C70758) * C153467 +
             (C70757 + C70756) * C83548) *
                C153853 +
            (C79814 * C153459 + (C71752 + C71753) * C153467 +
             (C71754 + C71755) * C83548) *
                C153713) *
               C153527 * C321 -
           ((C71444 * C83548 + C71445 * C153467 + C78771 * C153459) * C153713 +
            (C70493 * C83548 + (C70483 + C70482) * C153467 +
             (C70481 + C70480) * C153459) *
                C153853) *
               C153527 * C320 -
           (((C70423 * C4306 + C72936 + C72936 + C153671 * C4314 +
              C70421 * C1889 + C72937 + C72937 + C70415 * C1899) *
                 C83548 +
             (C88195 + C88194) * C153467 + (C78459 + C78458) * C153459) *
                C153713 +
            ((C70767 + C70766) * C83548 + (C70765 + C70764) * C153467 +
             (C70763 + C70762) * C153459) *
                C153853) *
               C153527 * C322) *
              C153498)) /
            (p * q * std::sqrt(p + q));
    d2ee[50] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
              C70427 + C70427 + C153671 * C353) *
                 C153459 +
             (C70480 + C70481) * C153467 + C70490 * C83548) *
                C153853 +
            ((C78815 + C78816) * C153459 + C78756 * C153467 + C79422 * C83548) *
                C153713) *
               C153527 * C153908 -
           ((C88776 * C83548 + C79829 * C153467 + (C79845 + C79844) * C153459) *
                C153713 +
            (C71237 * C83548 + (C70760 + C70761) * C153467 +
             (C70423 * C330 + C70706 + C70706 + C153671 * C354 + C70421 * C329 +
              C70707 + C70707 + C70415 * C353) *
                 C153459) *
                C153853) *
               C153527 * C153909 +
           (((C70421 * C330 + C70708 + C70708 + C70415 * C354 + C70423 * C1319 +
              C70709 + C70709 + C153671 * C1329) *
                 C153459 +
             (C70762 + C70763) * C153467 + (C70764 + C70765) * C83548) *
                C153853 +
            ((C81636 + C81637) * C153459 + (C78458 + C78459) * C153467 +
             (C88194 + C88195) * C83548) *
                C153713) *
               C153527 * C1601) *
              C153829 +
          ((((C70761 + C70760) * C153459 + (C70759 + C70758) * C153467 +
             (C70757 + C70756) * C83548) *
                C153853 +
            (C79814 * C153459 + C89454 * C153467 + (C71754 + C71755) * C83548) *
                C153713) *
               C153527 * C153909 -
           ((C71444 * C83548 + C71445 * C153467 + C78771 * C153459) * C153713 +
            (C70493 * C83548 + (C70483 + C70482) * C153467 +
             (C70481 + C70480) * C153459) *
                C153853) *
               C153527 * C153908 -
           (((C70423 * C4306 + C72936 + C72936 + C153671 * C4314 +
              C70421 * C1889 + C72937 + C72937 + C70415 * C1899) *
                 C83548 +
             (C88195 + C88194) * C153467 + (C78459 + C78458) * C153459) *
                C153713 +
            ((C70767 + C70766) * C83548 + (C70765 + C70764) * C153467 +
             (C70763 + C70762) * C153459) *
                C153853) *
               C153527 * C1601) *
              C153498)) /
        (p * q * std::sqrt(p + q));
    d2ee[51] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
              C70427 + C70427 + C153671 * C353) *
                 C153459 +
             (C70480 + C70481) * C153467 + C70490 * C83548) *
                C153853 +
            ((C78815 + C78816) * C153459 + C78756 * C153467 + C79422 * C83548) *
                C153713) *
               C153838 -
           ((C78784 * C83548 + C78770 * C153467 + (C78818 + C78817) * C153459) *
                C153713 +
            (C71445 * C83548 + C78771 * C153467 + (C78816 + C78815) * C153459) *
                C153853) *
               C153591) *
              C153908 +
          ((((C79844 + C79845) * C153459 + C79814 * C153467 + C89454 * C83548) *
                C153853 +
            ((C79846 + C79847) * C153459 + C79819 * C153467 +
             (C79130 + C79131) * C83548) *
                C153713) *
               C153591 -
           ((C88776 * C83548 + C79829 * C153467 + (C79845 + C79844) * C153459) *
                C153713 +
            (C71237 * C83548 + (C70760 + C70761) * C153467 +
             (C70423 * C330 + C70706 + C70706 + C153671 * C354 + C70421 * C329 +
              C70707 + C70707 + C70415 * C353) *
                 C153459) *
                C153853) *
               C153838) *
              C153909 +
          ((((C70421 * C330 + C70708 + C70708 + C70415 * C354 + C70423 * C1319 +
              C70709 + C70709 + C153671 * C1329) *
                 C153459 +
             (C70762 + C70763) * C153467 + (C70764 + C70765) * C83548) *
                C153853 +
            ((C81636 + C81637) * C153459 + (C78458 + C78459) * C153467 +
             (C88194 + C88195) * C83548) *
                C153713) *
               C153838 -
           (((C70423 * C4957 + C78442 + C78442 + C153671 * C4963 +
              C70421 * C3443 + C78443 + C78443 + C70415 * C3451) *
                 C83548 +
             (C78461 + C78460) * C153467 + (C81639 + C81638) * C153459) *
                C153713 +
            ((C88195 + C88194) * C83548 + (C78459 + C78458) * C153467 +
             (C81637 + C81636) * C153459) *
                C153853) *
               C153591) *
              C1601) *
         C153492) /
        (p * q * std::sqrt(p + q));
    d2ee[52] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
             C70427 + C70427 + C153671 * C353) *
                C153459 +
            (C70480 + C70481) * C153467 + C70490 * C83548) *
               C153853 +
           ((C78815 + C78816) * C153459 + C78756 * C153467 + C79422 * C83548) *
               C153713) *
              C153527 * C1310 -
          ((C88776 * C83548 + C79829 * C153467 + (C79845 + C79844) * C153459) *
               C153713 +
           (C71237 * C83548 + (C70760 + C70761) * C153467 +
            (C70423 * C330 + C70706 + C70706 + C153671 * C354 + C70421 * C329 +
             C70707 + C70707 + C70415 * C353) *
                C153459) *
               C153853) *
              C153527 * C1311 +
          (((C70421 * C330 + C70708 + C70708 + C70415 * C354 + C70423 * C1319 +
             C70709 + C70709 + C153671 * C1329) *
                C153459 +
            (C70762 + C70763) * C153467 + (C70764 + C70765) * C83548) *
               C153853 +
           ((C81636 + C81637) * C153459 + (C78458 + C78459) * C153467 +
            (C88194 + C88195) * C83548) *
               C153713) *
              C153527 * C1312 -
          (((C70423 * C5701 + C89939 + C89939 + C153671 * C5707 +
             C70421 * C4305 + C89940 + C89940 + C70415 * C4313) *
                C83548 +
            (C70423 * C5702 + C80338 + C80338 + C153671 * C5708 +
             C70421 * C4304 + C80339 + C80339 + C70415 * C4312) *
                C153467 +
            (C70423 * C5703 + C80340 + C80340 + C153671 * C5709 +
             C70421 * C4303 + C80341 + C80341 + C70415 * C4311) *
                C153459) *
               C153713 +
           ((C70423 * C3129 + C72082 + C72082 + C153671 * C3137 +
             C70421 * C1317 + C72083 + C72083 + C70415 * C1327) *
                C83548 +
            (C70423 * C3128 + C72084 + C72084 + C153671 * C3136 +
             C70421 * C1318 + C72085 + C72085 + C70415 * C1328) *
                C153467 +
            (C70423 * C3127 + C72086 + C72086 + C153671 * C3135 +
             C70421 * C1319 + C72087 + C72087 + C70415 * C1329) *
                C153459) *
               C153853) *
              C153527 * C1313) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
              C70427 + C70427 + C153671 * C353) *
                 C153459 +
             (C70480 + C70481) * C153467 + C70490 * C83548) *
                C153853 +
            ((C78815 + C78816) * C153459 + C78756 * C153467 + C79422 * C83548) *
                C153713) *
               C153527 * C1223 -
           ((C88776 * C83548 + C79829 * C153467 + (C79845 + C79844) * C153459) *
                C153713 +
            (C71237 * C83548 + (C70760 + C70761) * C153467 +
             (C70423 * C330 + C70706 + C70706 + C153671 * C354 + C70421 * C329 +
              C70707 + C70707 + C70415 * C353) *
                 C153459) *
                C153853) *
               C153527 * C153563) *
              C1225 +
          ((((C70761 + C70760) * C153459 + (C70759 + C70758) * C153467 +
             (C70757 + C70756) * C83548) *
                C153853 +
            (C79814 * C153459 + C89454 * C153467 + (C71754 + C71755) * C83548) *
                C153713) *
               C153527 * C153563 -
           ((C71444 * C83548 + C71445 * C153467 + C78771 * C153459) * C153713 +
            (C70493 * C83548 + (C70483 + C70482) * C153467 +
             (C70481 + C70480) * C153459) *
                C153853) *
               C153527 * C1223) *
              C1226 +
          (((C70490 * C153459 + C70491 * C153467 + (C70487 + C70486) * C83548) *
                C153853 +
            (C79422 * C153459 + C89067 * C153467 + (C71456 + C71457) * C83548) *
                C153713) *
               C153527 * C1223 -
           (((C70423 * C1888 + C71736 + C71736 + C153671 * C1898 +
              C70421 * C1061 + C71737 + C71737 + C70415 * C1073) *
                 C83548 +
             (C71755 + C71754) * C153467 + C88776 * C153459) *
                C153713 +
            ((C71249 + C71248) * C83548 + C71236 * C153467 + C71237 * C153459) *
                C153853) *
               C153527 * C153563) *
              C1227)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
              C70427 + C70427 + C153671 * C353) *
                 C153459 +
             (C70480 + C70481) * C153467 + C70490 * C83548) *
                C153853 +
            ((C78815 + C78816) * C153459 + C78756 * C153467 + C79422 * C83548) *
                C153713) *
               C535 -
           ((C78784 * C83548 + C78770 * C153467 + (C78818 + C78817) * C153459) *
                C153713 +
            (C71445 * C83548 + C78771 * C153467 + (C78816 + C78815) * C153459) *
                C153853) *
               C536 +
           ((C78827 * C153459 + C78761 * C153467 + C79423 * C83548) * C153853 +
            ((C78822 + C78821) * C153459 + C78829 * C153467 +
             (C78825 + C78826) * C83548) *
                C153713) *
               C537) *
              C1223 +
          ((((C79844 + C79845) * C153459 + C79814 * C153467 + C89454 * C83548) *
                C153853 +
            ((C79846 + C79847) * C153459 + C79819 * C153467 +
             (C79130 + C79131) * C83548) *
                C153713) *
               C536 -
           ((C88776 * C83548 + C79829 * C153467 + (C79845 + C79844) * C153459) *
                C153713 +
            (C71237 * C83548 + (C70760 + C70761) * C153467 +
             (C70423 * C330 + C70706 + C70706 + C153671 * C354 + C70421 * C329 +
              C70707 + C70707 + C70415 * C353) *
                 C153459) *
                C153853) *
               C535 -
           (((C70423 * C6301 + C79830 + C79830 + C153671 * C6313 +
              C70421 * C6302 + C79831 + C79831 + C70415 * C6314) *
                 C83548 +
             (C79849 + C79848) * C153467 + (C80649 + C80648) * C153459) *
                C153713 +
            ((C79131 + C79130) * C83548 + C79828 * C153467 + C80637 * C153459) *
                C153853) *
               C537) *
              C153563) *
         C153492) /
            (p * q * std::sqrt(p + q));
    d2ee[53] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
               C70427 + C70427 + C153671 * C353) *
                  C153459 +
              (C70480 + C70481) * C153467 + C70490 * C83548) *
                 C153853 +
             ((C78815 + C78816) * C153459 + C78756 * C153467 +
              C79422 * C83548) *
                 C153713) *
                C153838 -
            ((C78784 * C83548 + C78770 * C153467 +
              (C78818 + C78817) * C153459) *
                 C153713 +
             (C71445 * C83548 + C78771 * C153467 +
              (C78816 + C78815) * C153459) *
                 C153853) *
                C153591) *
               C1223 +
           ((((C79844 + C79845) * C153459 + C79814 * C153467 +
              C89454 * C83548) *
                 C153853 +
             ((C79846 + C79847) * C153459 + C79819 * C153467 +
              (C79130 + C79131) * C83548) *
                 C153713) *
                C153591 -
            ((C88776 * C83548 + C79829 * C153467 +
              (C79845 + C79844) * C153459) *
                 C153713 +
             (C71237 * C83548 + (C70760 + C70761) * C153467 +
              (C70423 * C330 + C70706 + C70706 + C153671 * C354 +
               C70421 * C329 + C70707 + C70707 + C70415 * C353) *
                  C153459) *
                 C153853) *
                C153838) *
               C153563) *
              C153829 +
          ((((C78756 * C153459 + C79422 * C153467 + C89067 * C83548) * C153853 +
             (C78761 * C153459 + C79423 * C153467 +
              (C71040 + C71041) * C83548) *
                 C153713) *
                C153591 -
            ((C71444 * C83548 + C71445 * C153467 + C78771 * C153459) * C153713 +
             (C70493 * C83548 + (C70483 + C70482) * C153467 +
              (C70481 + C70480) * C153459) *
                 C153853) *
                C153838) *
               C1223 +
           ((((C70761 + C70760) * C153459 + (C70759 + C70758) * C153467 +
              (C70757 + C70756) * C83548) *
                 C153853 +
             (C79814 * C153459 + C89454 * C153467 +
              (C71754 + C71755) * C83548) *
                 C153713) *
                C153838 -
            (((C70423 * C3444 + C72282 + C72282 + C153671 * C3452 +
               C70421 * C1458 + C72283 + C72283 + C70415 * C1468) *
                  C83548 +
              (C79131 + C79130) * C153467 + C79828 * C153459) *
                 C153713 +
             ((C71755 + C71754) * C83548 + C88776 * C153467 +
              C79829 * C153459) *
                 C153853) *
                C153591) *
               C153563) *
              C153498)) /
        (p * q * std::sqrt(p + q));
    d2ee[54] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
              C70427 + C70427 + C153671 * C353) *
                 C153459 +
             (C70480 + C70481) * C153467 + C70490 * C83548) *
                C153853 +
            ((C78815 + C78816) * C153459 + C78756 * C153467 + C79422 * C83548) *
                C153713) *
               C153527 * C1223 -
           ((C88776 * C83548 + C79829 * C153467 + (C79845 + C79844) * C153459) *
                C153713 +
            (C71237 * C83548 + (C70760 + C70761) * C153467 +
             (C70423 * C330 + C70706 + C70706 + C153671 * C354 + C70421 * C329 +
              C70707 + C70707 + C70415 * C353) *
                 C153459) *
                C153853) *
               C153527 * C153563) *
              C1225 +
          ((((C70761 + C70760) * C153459 + (C70759 + C70758) * C153467 +
             (C70757 + C70756) * C83548) *
                C153853 +
            (C79814 * C153459 + C89454 * C153467 + (C71754 + C71755) * C83548) *
                C153713) *
               C153527 * C153563 -
           ((C71444 * C83548 + C71445 * C153467 + C78771 * C153459) * C153713 +
            (C70493 * C83548 + (C70483 + C70482) * C153467 +
             (C70481 + C70480) * C153459) *
                C153853) *
               C153527 * C1223) *
              C1226 +
          (((C70490 * C153459 + C70491 * C153467 + (C70487 + C70486) * C83548) *
                C153853 +
            (C79422 * C153459 + C89067 * C153467 + (C71456 + C71457) * C83548) *
                C153713) *
               C153527 * C1223 -
           (((C70423 * C1888 + C71736 + C71736 + C153671 * C1898 +
              C70421 * C1061 + C71737 + C71737 + C70415 * C1073) *
                 C83548 +
             (C71755 + C71754) * C153467 + C88776 * C153459) *
                C153713 +
            ((C71249 + C71248) * C83548 + C71236 * C153467 + C71237 * C153459) *
                C153853) *
               C153527 * C153563) *
              C1227)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
             C70427 + C70427 + C153671 * C353) *
                C153459 +
            (C70480 + C70481) * C153467 + C70490 * C83548) *
               C153853 +
           ((C78815 + C78816) * C153459 + C78756 * C153467 + C79422 * C83548) *
               C153713) *
              C153527 * C1310 -
          ((C88776 * C83548 + C79829 * C153467 + (C79845 + C79844) * C153459) *
               C153713 +
           (C71237 * C83548 + (C70760 + C70761) * C153467 +
            (C70423 * C330 + C70706 + C70706 + C153671 * C354 + C70421 * C329 +
             C70707 + C70707 + C70415 * C353) *
                C153459) *
               C153853) *
              C153527 * C1311 +
          (((C70421 * C330 + C70708 + C70708 + C70415 * C354 + C70423 * C1319 +
             C70709 + C70709 + C153671 * C1329) *
                C153459 +
            (C70762 + C70763) * C153467 + (C70764 + C70765) * C83548) *
               C153853 +
           ((C81636 + C81637) * C153459 + (C78458 + C78459) * C153467 +
            (C88194 + C88195) * C83548) *
               C153713) *
              C153527 * C1312 -
          (((C70423 * C5701 + C89939 + C89939 + C153671 * C5707 +
             C70421 * C4305 + C89940 + C89940 + C70415 * C4313) *
                C83548 +
            (C70423 * C5702 + C80338 + C80338 + C153671 * C5708 +
             C70421 * C4304 + C80339 + C80339 + C70415 * C4312) *
                C153467 +
            (C70423 * C5703 + C80340 + C80340 + C153671 * C5709 +
             C70421 * C4303 + C80341 + C80341 + C70415 * C4311) *
                C153459) *
               C153713 +
           ((C70423 * C3129 + C72082 + C72082 + C153671 * C3137 +
             C70421 * C1317 + C72083 + C72083 + C70415 * C1327) *
                C83548 +
            (C70423 * C3128 + C72084 + C72084 + C153671 * C3136 +
             C70421 * C1318 + C72085 + C72085 + C70415 * C1328) *
                C153467 +
            (C70423 * C3127 + C72086 + C72086 + C153671 * C3135 +
             C70421 * C1319 + C72087 + C72087 + C70415 * C1329) *
                C153459) *
               C153853) *
              C153527 * C1313) *
         C153492) /
            (p * q * std::sqrt(p + q));
    d2ee[55] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
               C70427 + C70427 + C153671 * C353) *
                  C153459 +
              (C70480 + C70481) * C153467 + C70490 * C83548) *
                 C153853 +
             ((C78815 + C78816) * C153459 + C78756 * C153467 +
              C79422 * C83548) *
                 C153713) *
                C2030 -
            ((C78784 * C83548 + C78770 * C153467 +
              (C78818 + C78817) * C153459) *
                 C153713 +
             (C71445 * C83548 + C78771 * C153467 +
              (C78816 + C78815) * C153459) *
                 C153853) *
                C153591) *
               C153837 +
           ((((C79844 + C79845) * C153459 + C79814 * C153467 +
              C89454 * C83548) *
                 C153853 +
             ((C79846 + C79847) * C153459 + C79819 * C153467 +
              (C79130 + C79131) * C83548) *
                 C153713) *
                C153591 -
            ((C88776 * C83548 + C79829 * C153467 +
              (C79845 + C79844) * C153459) *
                 C153713 +
             (C71237 * C83548 + (C70760 + C70761) * C153467 +
              (C70423 * C330 + C70706 + C70706 + C153671 * C354 +
               C70421 * C329 + C70707 + C70707 + C70415 * C353) *
                  C153459) *
                 C153853) *
                C2030) *
               C153563) *
              C153829 +
          ((((C78756 * C153459 + C79422 * C153467 + C89067 * C83548) * C153853 +
             (C78761 * C153459 + C79423 * C153467 +
              (C71040 + C71041) * C83548) *
                 C153713) *
                C153591 -
            ((C71444 * C83548 + C71445 * C153467 + C78771 * C153459) * C153713 +
             (C70493 * C83548 + (C70483 + C70482) * C153467 +
              (C70481 + C70480) * C153459) *
                 C153853) *
                C2030) *
               C153837 +
           ((((C70761 + C70760) * C153459 + (C70759 + C70758) * C153467 +
              (C70757 + C70756) * C83548) *
                 C153853 +
             (C79814 * C153459 + C89454 * C153467 +
              (C71754 + C71755) * C83548) *
                 C153713) *
                C2030 -
            (((C70423 * C3444 + C72282 + C72282 + C153671 * C3452 +
               C70421 * C1458 + C72283 + C72283 + C70415 * C1468) *
                  C83548 +
              (C79131 + C79130) * C153467 + C79828 * C153459) *
                 C153713 +
             ((C71755 + C71754) * C83548 + C88776 * C153467 +
              C79829 * C153459) *
                 C153853) *
                C153591) *
               C153563) *
              C153498)) /
        (p * q * std::sqrt(p + q));
    d2ee[56] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
              C70427 + C70427 + C153671 * C353) *
                 C153459 +
             (C70480 + C70481) * C153467 + C70490 * C83548) *
                C153853 +
            ((C78815 + C78816) * C153459 + C78756 * C153467 + C79422 * C83548) *
                C153713) *
               C153910 -
           ((C78784 * C83548 + C78770 * C153467 + (C78818 + C78817) * C153459) *
                C153713 +
            (C71445 * C83548 + C78771 * C153467 + (C78816 + C78815) * C153459) *
                C153853) *
               C153911 +
           ((C78827 * C153459 + C78761 * C153467 + C79423 * C83548) * C153853 +
            ((C78822 + C78821) * C153459 + C78829 * C153467 +
             (C78825 + C78826) * C83548) *
                C153713) *
               C2546) *
              C153837 +
          ((((C79844 + C79845) * C153459 + C79814 * C153467 + C89454 * C83548) *
                C153853 +
            ((C79846 + C79847) * C153459 + C79819 * C153467 +
             (C79130 + C79131) * C83548) *
                C153713) *
               C153911 -
           ((C88776 * C83548 + C79829 * C153467 + (C79845 + C79844) * C153459) *
                C153713 +
            (C71237 * C83548 + (C70760 + C70761) * C153467 +
             (C70423 * C330 + C70706 + C70706 + C153671 * C354 + C70421 * C329 +
              C70707 + C70707 + C70415 * C353) *
                 C153459) *
                C153853) *
               C153910 -
           (((C70423 * C6301 + C79830 + C79830 + C153671 * C6313 +
              C70421 * C6302 + C79831 + C79831 + C70415 * C6314) *
                 C83548 +
             (C79849 + C79848) * C153467 + (C80649 + C80648) * C153459) *
                C153713 +
            ((C79131 + C79130) * C83548 + C79828 * C153467 + C80637 * C153459) *
                C153853) *
               C2546) *
              C153563) *
         C153492) /
        (p * q * std::sqrt(p + q));
    d2ee[57] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
              C70427 + C70427 + C153671 * C353) *
                 C153459 +
             (C70480 + C70481) * C153467 + C70490 * C83548) *
                C153853 +
            ((C78815 + C78816) * C153459 + C78756 * C153467 + C79422 * C83548) *
                C153713) *
               C2030 -
           ((C78784 * C83548 + C78770 * C153467 + (C78818 + C78817) * C153459) *
                C153713 +
            (C71445 * C83548 + C78771 * C153467 + (C78816 + C78815) * C153459) *
                C153853) *
               C153591) *
              C320 +
          ((((C79844 + C79845) * C153459 + C79814 * C153467 + C89454 * C83548) *
                C153853 +
            ((C79846 + C79847) * C153459 + C79819 * C153467 +
             (C79130 + C79131) * C83548) *
                C153713) *
               C153591 -
           ((C88776 * C83548 + C79829 * C153467 + (C79845 + C79844) * C153459) *
                C153713 +
            (C71237 * C83548 + (C70760 + C70761) * C153467 +
             (C70423 * C330 + C70706 + C70706 + C153671 * C354 + C70421 * C329 +
              C70707 + C70707 + C70415 * C353) *
                 C153459) *
                C153853) *
               C2030) *
              C321 +
          ((((C70421 * C330 + C70708 + C70708 + C70415 * C354 + C70423 * C1319 +
              C70709 + C70709 + C153671 * C1329) *
                 C153459 +
             (C70762 + C70763) * C153467 + (C70764 + C70765) * C83548) *
                C153853 +
            ((C81636 + C81637) * C153459 + (C78458 + C78459) * C153467 +
             (C88194 + C88195) * C83548) *
                C153713) *
               C2030 -
           (((C70423 * C4957 + C78442 + C78442 + C153671 * C4963 +
              C70421 * C3443 + C78443 + C78443 + C70415 * C3451) *
                 C83548 +
             (C78461 + C78460) * C153467 + (C81639 + C81638) * C153459) *
                C153713 +
            ((C88195 + C88194) * C83548 + (C78459 + C78458) * C153467 +
             (C81637 + C81636) * C153459) *
                C153853) *
               C153591) *
              C322) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
              C70427 + C70427 + C153671 * C353) *
                 C153459 +
             (C70480 + C70481) * C153467 + C70490 * C83548) *
                C153853 +
            ((C78815 + C78816) * C153459 + C78756 * C153467 + C79422 * C83548) *
                C153713) *
               C2030 -
           ((C78784 * C83548 + C78770 * C153467 + (C78818 + C78817) * C153459) *
                C153713 +
            (C71445 * C83548 + C78771 * C153467 + (C78816 + C78815) * C153459) *
                C153853) *
               C153591) *
              C153511 * C1225 +
          (((C78756 * C153459 + C79422 * C153467 + C89067 * C83548) * C153853 +
            (C78761 * C153459 + C79423 * C153467 + (C71040 + C71041) * C83548) *
                C153713) *
               C153591 -
           ((C71444 * C83548 + C71445 * C153467 + C78771 * C153459) * C153713 +
            (C70493 * C83548 + (C70483 + C70482) * C153467 +
             (C70481 + C70480) * C153459) *
                C153853) *
               C2030) *
              C153511 * C1226 +
          (((C70490 * C153459 + C70491 * C153467 + (C70487 + C70486) * C83548) *
                C153853 +
            (C79422 * C153459 + C89067 * C153467 + (C71456 + C71457) * C83548) *
                C153713) *
               C2030 -
           (((C70423 * C1457 + C71004 + C71004 + C153671 * C1467 +
              C70421 * C547 + C71005 + C71005 + C70415 * C571) *
                 C83548 +
             (C71041 + C71040) * C153467 + C78784 * C153459) *
                C153713 +
            ((C71457 + C71456) * C83548 + C71444 * C153467 + C71445 * C153459) *
                C153853) *
               C153591) *
              C153511 * C1227)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
             C70427 + C70427 + C153671 * C353) *
                C153459 +
            (C70480 + C70481) * C153467 + C70490 * C83548) *
               C153853 +
           ((C78815 + C78816) * C153459 + C78756 * C153467 + C79422 * C83548) *
               C153713) *
              C2236 -
          ((C78784 * C83548 + C78770 * C153467 + (C78818 + C78817) * C153459) *
               C153713 +
           (C71445 * C83548 + C78771 * C153467 + (C78816 + C78815) * C153459) *
               C153853) *
              C2237 +
          ((C78827 * C153459 + C78761 * C153467 + C79423 * C83548) * C153853 +
           ((C78822 + C78821) * C153459 + C78829 * C153467 +
            (C78825 + C78826) * C83548) *
               C153713) *
              C2238 -
          (((C70423 * C9115 + C78785 + C78785 + C153671 * C9121 +
             C70421 * C7675 + C78786 + C78786 + C70415 * C7683) *
                C83548 +
            (C78824 + C78823) * C153467 + (C82431 + C82430) * C153459) *
               C153713 +
           ((C78826 + C78825) * C83548 + C78828 * C153467 + C82415 * C153459) *
               C153853) *
              C2239) *
         C153511 * C153492) /
            (p * q * std::sqrt(p + q));
    d2ee[58] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
              C70427 + C70427 + C153671 * C353) *
                 C153459 +
             (C70480 + C70481) * C153467 + C70490 * C83548) *
                C153853 +
            ((C78815 + C78816) * C153459 + C78756 * C153467 + C79422 * C83548) *
                C153713) *
               C153910 -
           ((C78784 * C83548 + C78770 * C153467 + (C78818 + C78817) * C153459) *
                C153713 +
            (C71445 * C83548 + C78771 * C153467 + (C78816 + C78815) * C153459) *
                C153853) *
               C153911 +
           ((C78827 * C153459 + C78761 * C153467 + C79423 * C83548) * C153853 +
            ((C78822 + C78821) * C153459 + C78829 * C153467 +
             (C78825 + C78826) * C83548) *
                C153713) *
               C2546) *
              C153511 * C153829 +
          (((C78756 * C153459 + C79422 * C153467 + C89067 * C83548) * C153853 +
            (C78761 * C153459 + C79423 * C153467 + (C71040 + C71041) * C83548) *
                C153713) *
               C153911 -
           ((C71444 * C83548 + C71445 * C153467 + C78771 * C153459) * C153713 +
            (C70493 * C83548 + (C70483 + C70482) * C153467 +
             (C70481 + C70480) * C153459) *
                C153853) *
               C153910 -
           (((C70423 * C8488 + C73462 + C73462 + C153671 * C8490 +
              C70421 * C2241 + C73463 + C73463 + C70415 * C2251) *
                 C83548 +
             (C78826 + C78825) * C153467 + C78828 * C153459) *
                C153713 +
            ((C71041 + C71040) * C83548 + C78784 * C153467 + C78770 * C153459) *
                C153853) *
               C2546) *
              C153511 * C153498)) /
        (p * q * std::sqrt(p + q));
    d2ee[59] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
              C70427 + C70427 + C153671 * C353) *
                 C153459 +
             (C70480 + C70481) * C153467 + C70490 * C83548) *
                C153853 +
            ((C78815 + C78816) * C153459 + C78756 * C153467 + C79422 * C83548) *
                C153713) *
               C2030 -
           ((C78784 * C83548 + C78770 * C153467 + (C78818 + C78817) * C153459) *
                C153713 +
            (C71445 * C83548 + C78771 * C153467 + (C78816 + C78815) * C153459) *
                C153853) *
               C153591) *
              C153511 * C1225 +
          (((C78756 * C153459 + C79422 * C153467 + C89067 * C83548) * C153853 +
            (C78761 * C153459 + C79423 * C153467 + (C71040 + C71041) * C83548) *
                C153713) *
               C153591 -
           ((C71444 * C83548 + C71445 * C153467 + C78771 * C153459) * C153713 +
            (C70493 * C83548 + (C70483 + C70482) * C153467 +
             (C70481 + C70480) * C153459) *
                C153853) *
               C2030) *
              C153511 * C1226 +
          (((C70490 * C153459 + C70491 * C153467 + (C70487 + C70486) * C83548) *
                C153853 +
            (C79422 * C153459 + C89067 * C153467 + (C71456 + C71457) * C83548) *
                C153713) *
               C2030 -
           (((C70423 * C1457 + C71004 + C71004 + C153671 * C1467 +
              C70421 * C547 + C71005 + C71005 + C70415 * C571) *
                 C83548 +
             (C71041 + C71040) * C153467 + C78784 * C153459) *
                C153713 +
            ((C71457 + C71456) * C83548 + C71444 * C153467 + C71445 * C153459) *
                C153853) *
               C153591) *
              C153511 * C1227)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
              C70427 + C70427 + C153671 * C353) *
                 C153459 +
             (C70480 + C70481) * C153467 + C70490 * C83548) *
                C153853 +
            ((C78815 + C78816) * C153459 + C78756 * C153467 + C79422 * C83548) *
                C153713) *
               C2030 -
           ((C78784 * C83548 + C78770 * C153467 + (C78818 + C78817) * C153459) *
                C153713 +
            (C71445 * C83548 + C78771 * C153467 + (C78816 + C78815) * C153459) *
                C153853) *
               C153591) *
              C320 +
          ((((C79844 + C79845) * C153459 + C79814 * C153467 + C89454 * C83548) *
                C153853 +
            ((C79846 + C79847) * C153459 + C79819 * C153467 +
             (C79130 + C79131) * C83548) *
                C153713) *
               C153591 -
           ((C88776 * C83548 + C79829 * C153467 + (C79845 + C79844) * C153459) *
                C153713 +
            (C71237 * C83548 + (C70760 + C70761) * C153467 +
             (C70423 * C330 + C70706 + C70706 + C153671 * C354 + C70421 * C329 +
              C70707 + C70707 + C70415 * C353) *
                 C153459) *
                C153853) *
               C2030) *
              C321 +
          ((((C70421 * C330 + C70708 + C70708 + C70415 * C354 + C70423 * C1319 +
              C70709 + C70709 + C153671 * C1329) *
                 C153459 +
             (C70762 + C70763) * C153467 + (C70764 + C70765) * C83548) *
                C153853 +
            ((C81636 + C81637) * C153459 + (C78458 + C78459) * C153467 +
             (C88194 + C88195) * C83548) *
                C153713) *
               C2030 -
           (((C70423 * C4957 + C78442 + C78442 + C153671 * C4963 +
              C70421 * C3443 + C78443 + C78443 + C70415 * C3451) *
                 C83548 +
             (C78461 + C78460) * C153467 + (C81639 + C81638) * C153459) *
                C153713 +
            ((C88195 + C88194) * C83548 + (C78459 + C78458) * C153467 +
             (C81637 + C81636) * C153459) *
                C153853) *
               C153591) *
              C322) *
         C153492) /
            (p * q * std::sqrt(p + q));
    d2ee[60] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
             C70427 + C70427 + C153671 * C353) *
                C153931 +
            (C70480 + C70481) * C153924 + C70490 * C153905 + C70491 * C153852) *
               C153626 * C153527 * C153837 -
           (C71236 * C153852 + C71237 * C153905 + (C70760 + C70761) * C153924 +
            (C70423 * C330 + C70706 + C70706 + C153671 * C354 + C70421 * C329 +
             C70707 + C70707 + C70415 * C353) *
                C153931) *
               C153626 * C153527 * C153563) *
              C153906 +
          (((C70761 + C70760) * C153931 + (C70759 + C70758) * C153924 +
            (C70757 + C70756) * C153905 + (C71248 + C71249) * C153852) *
               C153626 * C153527 * C153563 -
           (C70492 * C153852 + C70493 * C153905 + (C70483 + C70482) * C153924 +
            (C70481 + C70480) * C153931) *
               C153626 * C153527 * C153837) *
              C153907 +
          ((C70490 * C153931 + C70491 * C153924 + (C70487 + C70486) * C153905 +
            (C70488 + C70489) * C153852) *
               C153626 * C153527 * C153837 -
           ((C70423 * C336 + C71242 + C71242 + C153671 * C360 + C70421 * C335 +
             C71243 + C71243 + C70415 * C359) *
                C153852 +
            (C71249 + C71248) * C153905 + C71236 * C153924 + C71237 * C153931) *
               C153626 * C153527 * C153563) *
              C752)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C74251 * C136 + C74260 + C74260 + C153932 * C152 + C74253 * C329 +
             C74261 + C74261 + C153928 * C353 + C74255 * C330 + C74262 +
             C74262 + C153918 * C354 + C74257 * C1319 + C74263 + C74263 +
             C153860 * C1329) *
                C74249 +
            (C74328 + C74329 + C74330 + C74331) * C153464) *
               C153626 * C153527 * C153837 -
           ((C74590 + C74591 + C74592 + C74593) * C153464 +
            (C74257 * C3127 + C74546 + C74546 + C153860 * C3135 +
             C74255 * C1319 + C74547 + C74547 + C153918 * C1329 +
             C74253 * C330 + C74548 + C74548 + C153928 * C354 + C74251 * C329 +
             C74549 + C74549 + C153932 * C353) *
                C74249) *
               C153626 * C153527 * C153563) *
              C153906 +
          (((C74593 + C74592 + C74591 + C74590) * C74249 +
            (C75070 + C75071 + C75072 + C75073) * C153464) *
               C153626 * C153527 * C153563 -
           ((C74332 + C74333 + C74334 + C74335) * C153464 +
            (C74331 + C74330 + C74329 + C74328) * C74249) *
               C153626 * C153527 * C153837) *
              C153907 +
          (((C74335 + C74334 + C74333 + C74332) * C74249 +
            (C74336 + C74337 + C74338 + C74339) * C153464) *
               C153626 * C153527 * C153837 -
           ((C74257 * C3130 + C75058 + C75058 + C153860 * C3138 +
             C74255 * C1316 + C75059 + C75059 + C153918 * C1326 +
             C74253 * C333 + C75060 + C75060 + C153928 * C357 + C74251 * C326 +
             C75061 + C75061 + C153932 * C350) *
                C153464 +
            (C75073 + C75072 + C75071 + C75070) * C74249) *
               C153626 * C153527 * C153563) *
              C752)) /
            (p * q * std::sqrt(p + q));
    d2ee[61] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
              C70427 + C70427 + C153671 * C353) *
                 C153931 +
             (C70480 + C70481) * C153924 + C70490 * C153905 +
             C70491 * C153852) *
                C153626 * C153838 -
            (C71444 * C153852 + C71445 * C153905 + (C71034 + C71035) * C153924 +
             (C70423 * C1057 + C70980 + C70980 + C153671 * C1069 +
              C70421 * C542 + C70981 + C70981 + C70415 * C566) *
                 C153931) *
                C153626 * C153591) *
               C153837 +
           (((C70421 * C1057 + C71716 + C71716 + C70415 * C1069 +
              C70423 * C1892 + C71717 + C71717 + C153671 * C1902) *
                 C153931 +
             (C71750 + C71751) * C153924 + (C71752 + C71753) * C153905 +
             (C71754 + C71755) * C153852) *
                C153626 * C153591 -
            (C71236 * C153852 + C71237 * C153905 + (C70760 + C70761) * C153924 +
             (C70423 * C330 + C70706 + C70706 + C153671 * C354 + C70421 * C329 +
              C70707 + C70707 + C70415 * C353) *
                 C153931) *
                C153626 * C153838) *
               C153563) *
              C323 +
          ((((C71035 + C71034) * C153931 + (C71033 + C71032) * C153924 +
             (C71031 + C71030) * C153905 + (C71456 + C71457) * C153852) *
                C153626 * C153591 -
            (C70492 * C153852 + C70493 * C153905 + (C70483 + C70482) * C153924 +
             (C70481 + C70480) * C153931) *
                C153626 * C153838) *
               C153837 +
           (((C70761 + C70760) * C153931 + (C70759 + C70758) * C153924 +
             (C70757 + C70756) * C153905 + (C71248 + C71249) * C153852) *
                C153626 * C153838 -
            ((C70423 * C1888 + C71736 + C71736 + C153671 * C1898 +
              C70421 * C1061 + C71737 + C71737 + C70415 * C1073) *
                 C153852 +
             (C71755 + C71754) * C153905 + (C71753 + C71752) * C153924 +
             (C71751 + C71750) * C153931) *
                C153626 * C153591) *
               C153563) *
              C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C74251 * C136 + C74260 + C74260 + C153932 * C152 + C74253 * C329 +
              C74261 + C74261 + C153928 * C353 + C74255 * C330 + C74262 +
              C74262 + C153918 * C354 + C74257 * C1319 + C74263 + C74263 +
              C153860 * C1329) *
                 C74249 +
             (C74328 + C74329 + C74330 + C74331) * C153464) *
                C153626 * C153838 -
            ((C74848 + C74849 + C74850 + C74851) * C153464 +
             (C74257 * C4303 + C74804 + C74804 + C153860 * C4311 +
              C74255 * C1892 + C74805 + C74805 + C153918 * C1902 +
              C74253 * C1057 + C74806 + C74806 + C153928 * C1069 +
              C74251 * C542 + C74807 + C74807 + C153932 * C566) *
                 C74249) *
                C153626 * C153591) *
               C153837 +
           (((C74251 * C1057 + C75550 + C75550 + C153932 * C1069 +
              C74253 * C1892 + C75551 + C75551 + C153928 * C1902 +
              C74255 * C4303 + C75552 + C75552 + C153918 * C4311 +
              C74257 * C5703 + C75553 + C75553 + C153860 * C5709) *
                 C74249 +
             (C75578 + C75579 + C75580 + C75581) * C153464) *
                C153626 * C153591 -
            ((C74590 + C74591 + C74592 + C74593) * C153464 +
             (C74257 * C3127 + C74546 + C74546 + C153860 * C3135 +
              C74255 * C1319 + C74547 + C74547 + C153918 * C1329 +
              C74253 * C330 + C74548 + C74548 + C153928 * C354 + C74251 * C329 +
              C74549 + C74549 + C153932 * C353) *
                 C74249) *
                C153626 * C153838) *
               C153563) *
              C323 +
          ((((C74851 + C74850 + C74849 + C74848) * C74249 +
             (C75288 + C75289 + C75290 + C75291) * C153464) *
                C153626 * C153591 -
            ((C74332 + C74333 + C74334 + C74335) * C153464 +
             (C74331 + C74330 + C74329 + C74328) * C74249) *
                C153626 * C153838) *
               C153837 +
           (((C74593 + C74592 + C74591 + C74590) * C74249 +
             (C75070 + C75071 + C75072 + C75073) * C153464) *
                C153626 * C153838 -
            ((C74257 * C5701 + C75566 + C75566 + C153860 * C5707 +
              C74255 * C4305 + C75567 + C75567 + C153918 * C4313 +
              C74253 * C1890 + C75568 + C75568 + C153928 * C1900 +
              C74251 * C1059 + C75569 + C75569 + C153932 * C1071) *
                 C153464 +
             (C75581 + C75580 + C75579 + C75578) * C74249) *
                C153626 * C153591) *
               C153563) *
              C153498)) /
            (p * q * std::sqrt(p + q));
    d2ee[62] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
             C70427 + C70427 + C153671 * C353) *
                C153931 +
            (C70480 + C70481) * C153924 + C70490 * C153905 + C70491 * C153852) *
               C153626 * C153527 * C320 -
           ((C70756 + C70757) * C153852 + (C70758 + C70759) * C153905 +
            (C70760 + C70761) * C153924 +
            (C70423 * C330 + C70706 + C70706 + C153671 * C354 + C70421 * C329 +
             C70707 + C70707 + C70415 * C353) *
                C153931) *
               C153626 * C153527 * C321 +
           ((C70421 * C330 + C70708 + C70708 + C70415 * C354 + C70423 * C1319 +
             C70709 + C70709 + C153671 * C1329) *
                C153931 +
            (C70762 + C70763) * C153924 + (C70764 + C70765) * C153905 +
            (C70766 + C70767) * C153852) *
               C153626 * C153527 * C322) *
              C323 +
          (((C70761 + C70760) * C153931 + (C70759 + C70758) * C153924 +
            (C70757 + C70756) * C153905 +
            (C70421 * C325 + C70728 + C70728 + C70415 * C349 + C70423 * C334 +
             C70729 + C70729 + C153671 * C358) *
                C153852) *
               C153626 * C153527 * C321 -
           (C70492 * C153852 + C70493 * C153905 + (C70483 + C70482) * C153924 +
            (C70481 + C70480) * C153931) *
               C153626 * C153527 * C320 -
           ((C70423 * C1315 + C70730 + C70730 + C153671 * C1325 +
             C70421 * C334 + C70731 + C70731 + C70415 * C358) *
                C153852 +
            (C70767 + C70766) * C153905 + (C70765 + C70764) * C153924 +
            (C70763 + C70762) * C153931) *
               C153626 * C153527 * C322) *
              C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
            C70427 + C70427 + C153671 * C353) *
               C153931 +
           (C70480 + C70481) * C153924 + C70490 * C153905 + C70491 * C153852) *
              C153626 * C153527 * C153511 * C130 -
          (C70492 * C153852 + C70493 * C153905 + (C70483 + C70482) * C153924 +
           (C70481 + C70480) * C153931) *
              C153626 * C153527 * C153511 * C131 +
          (C70490 * C153931 + C70491 * C153924 + (C70487 + C70486) * C153905 +
           (C70488 + C70489) * C153852) *
              C153626 * C153527 * C153511 * C132 -
          ((C70423 * C753 + C70458 + C70458 + C153671 * C755 + C70421 * C142 +
            C70459 + C70459 + C70415 * C158) *
               C153852 +
           (C70489 + C70488) * C153905 + C70492 * C153924 + C70493 * C153931) *
              C153626 * C153527 * C153511 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
             C70427 + C70427 + C153671 * C353) *
                C153931 +
            (C70480 + C70481) * C153924 + C70490 * C153905 + C70491 * C153852) *
               C153626 * C535 -
           ((C71030 + C71031) * C153852 + (C71032 + C71033) * C153905 +
            (C71034 + C71035) * C153924 +
            (C70423 * C1057 + C70980 + C70980 + C153671 * C1069 +
             C70421 * C542 + C70981 + C70981 + C70415 * C566) *
                C153931) *
               C153626 * C536 +
           ((C70421 * C543 + C70982 + C70982 + C70415 * C567 + C70423 * C1461 +
             C70983 + C70983 + C153671 * C1471) *
                C153931 +
            (C71036 + C71037) * C153924 + (C71038 + C71039) * C153905 +
            (C71040 + C71041) * C153852) *
               C153626 * C537) *
              C153511 * C323 +
          (((C71035 + C71034) * C153931 + (C71033 + C71032) * C153924 +
            (C71031 + C71030) * C153905 +
            (C70421 * C538 + C71002 + C71002 + C70415 * C562 + C70423 * C1061 +
             C71003 + C71003 + C153671 * C1073) *
                C153852) *
               C153626 * C536 -
           (C70492 * C153852 + C70493 * C153905 + (C70483 + C70482) * C153924 +
            (C70481 + C70480) * C153931) *
               C153626 * C535 -
           ((C70423 * C1457 + C71004 + C71004 + C153671 * C1467 +
             C70421 * C547 + C71005 + C71005 + C70415 * C571) *
                C153852 +
            (C71041 + C71040) * C153905 + (C71039 + C71038) * C153924 +
            (C71037 + C71036) * C153931) *
               C153626 * C537) *
              C153511 * C153498)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C74251 * C136 + C74260 + C74260 + C153932 * C152 + C74253 * C329 +
            C74261 + C74261 + C153928 * C353 + C74255 * C330 + C74262 + C74262 +
            C153918 * C354 + C74257 * C1319 + C74263 + C74263 +
            C153860 * C1329) *
               C74249 +
           (C74328 + C74329 + C74330 + C74331) * C153464) *
              C153626 * C153527 * C153511 * C130 -
          ((C74332 + C74333 + C74334 + C74335) * C153464 +
           (C74331 + C74330 + C74329 + C74328) * C74249) *
              C153626 * C153527 * C153511 * C131 +
          ((C74335 + C74334 + C74333 + C74332) * C74249 +
           (C74336 + C74337 + C74338 + C74339) * C153464) *
              C153626 * C153527 * C153511 * C132 -
          ((C74257 * C1315 + C74300 + C74300 + C153860 * C1325 + C74255 * C334 +
            C74301 + C74301 + C153918 * C358 + C74253 * C325 + C74302 + C74302 +
            C153928 * C349 + C74251 * C140 + C74303 + C74303 + C153932 * C156) *
               C153464 +
           (C74339 + C74338 + C74337 + C74336) * C74249) *
              C153626 * C153527 * C153511 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C74251 * C136 + C74260 + C74260 + C153932 * C152 + C74253 * C329 +
             C74261 + C74261 + C153928 * C353 + C74255 * C330 + C74262 +
             C74262 + C153918 * C354 + C74257 * C1319 + C74263 + C74263 +
             C153860 * C1329) *
                C74249 +
            (C74328 + C74329 + C74330 + C74331) * C153464) *
               C153626 * C153527 * C320 -
           ((C74590 + C74591 + C74592 + C74593) * C153464 +
            (C74257 * C3127 + C74546 + C74546 + C153860 * C3135 +
             C74255 * C1319 + C74547 + C74547 + C153918 * C1329 +
             C74253 * C330 + C74548 + C74548 + C153928 * C354 + C74251 * C329 +
             C74549 + C74549 + C153932 * C353) *
                C74249) *
               C153626 * C153527 * C321 +
           ((C74251 * C330 + C74550 + C74550 + C153932 * C354 + C74253 * C1319 +
             C74551 + C74551 + C153928 * C1329 + C74255 * C3127 + C74552 +
             C74552 + C153918 * C3135 + C74257 * C4723 + C74553 + C74553 +
             C153860 * C4729) *
                C74249 +
            (C74594 + C74595 + C74596 + C74597) * C153464) *
               C153626 * C153527 * C322) *
              C323 +
          (((C74593 + C74592 + C74591 + C74590) * C74249 +
            (C74251 * C327 + C74566 + C74566 + C153932 * C351 + C74253 * C332 +
             C74567 + C74567 + C153928 * C356 + C74255 * C1317 + C74568 +
             C74568 + C153918 * C1327 + C74257 * C3129 + C74569 + C74569 +
             C153860 * C3137) *
                C153464) *
               C153626 * C153527 * C321 -
           ((C74332 + C74333 + C74334 + C74335) * C153464 +
            (C74331 + C74330 + C74329 + C74328) * C74249) *
               C153626 * C153527 * C320 -
           ((C74257 * C4721 + C74570 + C74570 + C153860 * C4727 +
             C74255 * C3129 + C74571 + C74571 + C153918 * C3137 +
             C74253 * C1317 + C74572 + C74572 + C153928 * C1327 +
             C74251 * C332 + C74573 + C74573 + C153932 * C356) *
                C153464 +
            (C74597 + C74596 + C74595 + C74594) * C74249) *
               C153626 * C153527 * C322) *
              C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C74251 * C136 + C74260 + C74260 + C153932 * C152 + C74253 * C329 +
             C74261 + C74261 + C153928 * C353 + C74255 * C330 + C74262 +
             C74262 + C153918 * C354 + C74257 * C1319 + C74263 + C74263 +
             C153860 * C1329) *
                C74249 +
            (C74328 + C74329 + C74330 + C74331) * C153464) *
               C153626 * C535 -
           ((C74848 + C74849 + C74850 + C74851) * C153464 +
            (C74257 * C4303 + C74804 + C74804 + C153860 * C4311 +
             C74255 * C1892 + C74805 + C74805 + C153918 * C1902 +
             C74253 * C1057 + C74806 + C74806 + C153928 * C1069 +
             C74251 * C542 + C74807 + C74807 + C153932 * C566) *
                C74249) *
               C153626 * C536 +
           ((C74251 * C543 + C74808 + C74808 + C153932 * C567 + C74253 * C1461 +
             C74809 + C74809 + C153928 * C1471 + C74255 * C3441 + C74810 +
             C74810 + C153918 * C3449 + C74257 * C4959 + C74811 + C74811 +
             C153860 * C4965) *
                C74249 +
            (C74852 + C74853 + C74854 + C74855) * C153464) *
               C153626 * C537) *
              C153511 * C323 +
          (((C74851 + C74850 + C74849 + C74848) * C74249 +
            (C74251 * C540 + C74824 + C74824 + C153932 * C564 + C74253 * C1059 +
             C74825 + C74825 + C153928 * C1071 + C74255 * C1890 + C74826 +
             C74826 + C153918 * C1900 + C74257 * C4305 + C74827 + C74827 +
             C153860 * C4313) *
                C153464) *
               C153626 * C536 -
           ((C74332 + C74333 + C74334 + C74335) * C153464 +
            (C74331 + C74330 + C74329 + C74328) * C74249) *
               C153626 * C535 -
           ((C74257 * C4957 + C74828 + C74828 + C153860 * C4963 +
             C74255 * C3443 + C74829 + C74829 + C153918 * C3451 +
             C74253 * C1459 + C74830 + C74830 + C153928 * C1469 +
             C74251 * C545 + C74831 + C74831 + C153932 * C569) *
                C153464 +
            (C74855 + C74854 + C74853 + C74852) * C74249) *
               C153626 * C537) *
              C153511 * C153498)) /
            (p * q * std::sqrt(p + q));
    d2ee[63] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
             C70427 + C70427 + C153671 * C353) *
                C153931 +
            (C70480 + C70481) * C153924 + C70490 * C153905 + C70491 * C153852) *
               C153626 * C153838 -
           (C71444 * C153852 + C71445 * C153905 + (C71034 + C71035) * C153924 +
            (C70423 * C1057 + C70980 + C70980 + C153671 * C1069 +
             C70421 * C542 + C70981 + C70981 + C70415 * C566) *
                C153931) *
               C153626 * C153591) *
              C153511 * C153906 +
          (((C71035 + C71034) * C153931 + (C71033 + C71032) * C153924 +
            (C71031 + C71030) * C153905 + (C71456 + C71457) * C153852) *
               C153626 * C153591 -
           (C70492 * C153852 + C70493 * C153905 + (C70483 + C70482) * C153924 +
            (C70481 + C70480) * C153931) *
               C153626 * C153838) *
              C153511 * C153907 +
          ((C70490 * C153931 + C70491 * C153924 + (C70487 + C70486) * C153905 +
            (C70488 + C70489) * C153852) *
               C153626 * C153838 -
           ((C70423 * C1062 + C71450 + C71450 + C153671 * C1074 +
             C70421 * C548 + C71451 + C71451 + C70415 * C572) *
                C153852 +
            (C71457 + C71456) * C153905 + C71444 * C153924 + C71445 * C153931) *
               C153626 * C153591) *
              C153511 * C752)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C74251 * C136 + C74260 + C74260 + C153932 * C152 + C74253 * C329 +
             C74261 + C74261 + C153928 * C353 + C74255 * C330 + C74262 +
             C74262 + C153918 * C354 + C74257 * C1319 + C74263 + C74263 +
             C153860 * C1329) *
                C74249 +
            (C74328 + C74329 + C74330 + C74331) * C153464) *
               C153626 * C153838 -
           ((C74848 + C74849 + C74850 + C74851) * C153464 +
            (C74257 * C4303 + C74804 + C74804 + C153860 * C4311 +
             C74255 * C1892 + C74805 + C74805 + C153918 * C1902 +
             C74253 * C1057 + C74806 + C74806 + C153928 * C1069 +
             C74251 * C542 + C74807 + C74807 + C153932 * C566) *
                C74249) *
               C153626 * C153591) *
              C153511 * C153906 +
          (((C74851 + C74850 + C74849 + C74848) * C74249 +
            (C75288 + C75289 + C75290 + C75291) * C153464) *
               C153626 * C153591 -
           ((C74332 + C74333 + C74334 + C74335) * C153464 +
            (C74331 + C74330 + C74329 + C74328) * C74249) *
               C153626 * C153838) *
              C153511 * C153907 +
          (((C74335 + C74334 + C74333 + C74332) * C74249 +
            (C74336 + C74337 + C74338 + C74339) * C153464) *
               C153626 * C153838 -
           ((C74257 * C4306 + C75276 + C75276 + C153860 * C4314 +
             C74255 * C1889 + C75277 + C75277 + C153918 * C1899 +
             C74253 * C1060 + C75278 + C75278 + C153928 * C1072 +
             C74251 * C539 + C75279 + C75279 + C153932 * C563) *
                C153464 +
            (C75291 + C75290 + C75289 + C75288) * C74249) *
               C153626 * C153591) *
              C153511 * C752)) /
            (p * q * std::sqrt(p + q));
    d2ee[64] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
            C70427 + C70427 + C153671 * C353) *
               C153931 +
           (C70480 + C70481) * C153924 + C70490 * C153905 + C70491 * C153852) *
              C153626 * C153527 * C153511 * C130 -
          (C70492 * C153852 + C70493 * C153905 + (C70483 + C70482) * C153924 +
           (C70481 + C70480) * C153931) *
              C153626 * C153527 * C153511 * C131 +
          (C70490 * C153931 + C70491 * C153924 + (C70487 + C70486) * C153905 +
           (C70488 + C70489) * C153852) *
              C153626 * C153527 * C153511 * C132 -
          ((C70423 * C753 + C70458 + C70458 + C153671 * C755 + C70421 * C142 +
            C70459 + C70459 + C70415 * C158) *
               C153852 +
           (C70489 + C70488) * C153905 + C70492 * C153924 + C70493 * C153931) *
              C153626 * C153527 * C153511 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
             C70427 + C70427 + C153671 * C353) *
                C153931 +
            (C70480 + C70481) * C153924 + C70490 * C153905 + C70491 * C153852) *
               C153626 * C153527 * C320 -
           ((C70756 + C70757) * C153852 + (C70758 + C70759) * C153905 +
            (C70760 + C70761) * C153924 +
            (C70423 * C330 + C70706 + C70706 + C153671 * C354 + C70421 * C329 +
             C70707 + C70707 + C70415 * C353) *
                C153931) *
               C153626 * C153527 * C321 +
           ((C70421 * C330 + C70708 + C70708 + C70415 * C354 + C70423 * C1319 +
             C70709 + C70709 + C153671 * C1329) *
                C153931 +
            (C70762 + C70763) * C153924 + (C70764 + C70765) * C153905 +
            (C70766 + C70767) * C153852) *
               C153626 * C153527 * C322) *
              C323 +
          (((C70761 + C70760) * C153931 + (C70759 + C70758) * C153924 +
            (C70757 + C70756) * C153905 +
            (C70421 * C325 + C70728 + C70728 + C70415 * C349 + C70423 * C334 +
             C70729 + C70729 + C153671 * C358) *
                C153852) *
               C153626 * C153527 * C321 -
           (C70492 * C153852 + C70493 * C153905 + (C70483 + C70482) * C153924 +
            (C70481 + C70480) * C153931) *
               C153626 * C153527 * C320 -
           ((C70423 * C1315 + C70730 + C70730 + C153671 * C1325 +
             C70421 * C334 + C70731 + C70731 + C70415 * C358) *
                C153852 +
            (C70767 + C70766) * C153905 + (C70765 + C70764) * C153924 +
            (C70763 + C70762) * C153931) *
               C153626 * C153527 * C322) *
              C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C74251 * C136 + C74260 + C74260 + C153932 * C152 + C74253 * C329 +
            C74261 + C74261 + C153928 * C353 + C74255 * C330 + C74262 + C74262 +
            C153918 * C354 + C74257 * C1319 + C74263 + C74263 +
            C153860 * C1329) *
               C74249 +
           (C74328 + C74329 + C74330 + C74331) * C153464) *
              C153626 * C153527 * C153511 * C130 -
          ((C74332 + C74333 + C74334 + C74335) * C153464 +
           (C74331 + C74330 + C74329 + C74328) * C74249) *
              C153626 * C153527 * C153511 * C131 +
          ((C74335 + C74334 + C74333 + C74332) * C74249 +
           (C74336 + C74337 + C74338 + C74339) * C153464) *
              C153626 * C153527 * C153511 * C132 -
          ((C74257 * C1315 + C74300 + C74300 + C153860 * C1325 + C74255 * C334 +
            C74301 + C74301 + C153918 * C358 + C74253 * C325 + C74302 + C74302 +
            C153928 * C349 + C74251 * C140 + C74303 + C74303 + C153932 * C156) *
               C153464 +
           (C74339 + C74338 + C74337 + C74336) * C74249) *
              C153626 * C153527 * C153511 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C74251 * C136 + C74260 + C74260 + C153932 * C152 + C74253 * C329 +
             C74261 + C74261 + C153928 * C353 + C74255 * C330 + C74262 +
             C74262 + C153918 * C354 + C74257 * C1319 + C74263 + C74263 +
             C153860 * C1329) *
                C74249 +
            (C74328 + C74329 + C74330 + C74331) * C153464) *
               C153626 * C153527 * C320 -
           ((C74590 + C74591 + C74592 + C74593) * C153464 +
            (C74257 * C3127 + C74546 + C74546 + C153860 * C3135 +
             C74255 * C1319 + C74547 + C74547 + C153918 * C1329 +
             C74253 * C330 + C74548 + C74548 + C153928 * C354 + C74251 * C329 +
             C74549 + C74549 + C153932 * C353) *
                C74249) *
               C153626 * C153527 * C321 +
           ((C74251 * C330 + C74550 + C74550 + C153932 * C354 + C74253 * C1319 +
             C74551 + C74551 + C153928 * C1329 + C74255 * C3127 + C74552 +
             C74552 + C153918 * C3135 + C74257 * C4723 + C74553 + C74553 +
             C153860 * C4729) *
                C74249 +
            (C74594 + C74595 + C74596 + C74597) * C153464) *
               C153626 * C153527 * C322) *
              C323 +
          (((C74593 + C74592 + C74591 + C74590) * C74249 +
            (C74251 * C327 + C74566 + C74566 + C153932 * C351 + C74253 * C332 +
             C74567 + C74567 + C153928 * C356 + C74255 * C1317 + C74568 +
             C74568 + C153918 * C1327 + C74257 * C3129 + C74569 + C74569 +
             C153860 * C3137) *
                C153464) *
               C153626 * C153527 * C321 -
           ((C74332 + C74333 + C74334 + C74335) * C153464 +
            (C74331 + C74330 + C74329 + C74328) * C74249) *
               C153626 * C153527 * C320 -
           ((C74257 * C4721 + C74570 + C74570 + C153860 * C4727 +
             C74255 * C3129 + C74571 + C74571 + C153918 * C3137 +
             C74253 * C1317 + C74572 + C74572 + C153928 * C1327 +
             C74251 * C332 + C74573 + C74573 + C153932 * C356) *
                C153464 +
            (C74597 + C74596 + C74595 + C74594) * C74249) *
               C153626 * C153527 * C322) *
              C153498)) /
            (p * q * std::sqrt(p + q));
    d2ee[65] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
             C70427 + C70427 + C153671 * C353) *
                C153931 +
            (C70480 + C70481) * C153924 + C70490 * C153905 + C70491 * C153852) *
               C153626 * C153527 * C153908 -
           (C71236 * C153852 + C71237 * C153905 + (C70760 + C70761) * C153924 +
            (C70423 * C330 + C70706 + C70706 + C153671 * C354 + C70421 * C329 +
             C70707 + C70707 + C70415 * C353) *
                C153931) *
               C153626 * C153527 * C153909 +
           ((C70421 * C330 + C70708 + C70708 + C70415 * C354 + C70423 * C1319 +
             C70709 + C70709 + C153671 * C1329) *
                C153931 +
            (C70762 + C70763) * C153924 + (C70764 + C70765) * C153905 +
            (C70766 + C70767) * C153852) *
               C153626 * C153527 * C1601) *
              C153829 +
          (((C70761 + C70760) * C153931 + (C70759 + C70758) * C153924 +
            (C70757 + C70756) * C153905 + (C71248 + C71249) * C153852) *
               C153626 * C153527 * C153909 -
           (C70492 * C153852 + C70493 * C153905 + (C70483 + C70482) * C153924 +
            (C70481 + C70480) * C153931) *
               C153626 * C153527 * C153908 -
           ((C70423 * C1315 + C70730 + C70730 + C153671 * C1325 +
             C70421 * C334 + C70731 + C70731 + C70415 * C358) *
                C153852 +
            (C70767 + C70766) * C153905 + (C70765 + C70764) * C153924 +
            (C70763 + C70762) * C153931) *
               C153626 * C153527 * C1601) *
              C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C74251 * C136 + C74260 + C74260 + C153932 * C152 + C74253 * C329 +
             C74261 + C74261 + C153928 * C353 + C74255 * C330 + C74262 +
             C74262 + C153918 * C354 + C74257 * C1319 + C74263 + C74263 +
             C153860 * C1329) *
                C74249 +
            (C74328 + C74329 + C74330 + C74331) * C153464) *
               C153626 * C153527 * C153908 -
           ((C74590 + C74591 + C74592 + C74593) * C153464 +
            (C74257 * C3127 + C74546 + C74546 + C153860 * C3135 +
             C74255 * C1319 + C74547 + C74547 + C153918 * C1329 +
             C74253 * C330 + C74548 + C74548 + C153928 * C354 + C74251 * C329 +
             C74549 + C74549 + C153932 * C353) *
                C74249) *
               C153626 * C153527 * C153909 +
           ((C74251 * C330 + C74550 + C74550 + C153932 * C354 + C74253 * C1319 +
             C74551 + C74551 + C153928 * C1329 + C74255 * C3127 + C74552 +
             C74552 + C153918 * C3135 + C74257 * C4723 + C74553 + C74553 +
             C153860 * C4729) *
                C74249 +
            (C74594 + C74595 + C74596 + C74597) * C153464) *
               C153626 * C153527 * C1601) *
              C153829 +
          (((C74593 + C74592 + C74591 + C74590) * C74249 +
            (C75070 + C75071 + C75072 + C75073) * C153464) *
               C153626 * C153527 * C153909 -
           ((C74332 + C74333 + C74334 + C74335) * C153464 +
            (C74331 + C74330 + C74329 + C74328) * C74249) *
               C153626 * C153527 * C153908 -
           ((C74257 * C4721 + C74570 + C74570 + C153860 * C4727 +
             C74255 * C3129 + C74571 + C74571 + C153918 * C3137 +
             C74253 * C1317 + C74572 + C74572 + C153928 * C1327 +
             C74251 * C332 + C74573 + C74573 + C153932 * C356) *
                C153464 +
            (C74597 + C74596 + C74595 + C74594) * C74249) *
               C153626 * C153527 * C1601) *
              C153498)) /
            (p * q * std::sqrt(p + q));
    d2ee[66] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
             C70427 + C70427 + C153671 * C353) *
                C153931 +
            (C70480 + C70481) * C153924 + C70490 * C153905 + C70491 * C153852) *
               C153626 * C153838 -
           (C71444 * C153852 + C71445 * C153905 + (C71034 + C71035) * C153924 +
            (C70423 * C1057 + C70980 + C70980 + C153671 * C1069 +
             C70421 * C542 + C70981 + C70981 + C70415 * C566) *
                C153931) *
               C153626 * C153591) *
              C153908 +
          (((C70421 * C1057 + C71716 + C71716 + C70415 * C1069 +
             C70423 * C1892 + C71717 + C71717 + C153671 * C1902) *
                C153931 +
            (C71750 + C71751) * C153924 + (C71752 + C71753) * C153905 +
            (C71754 + C71755) * C153852) *
               C153626 * C153591 -
           (C71236 * C153852 + C71237 * C153905 + (C70760 + C70761) * C153924 +
            (C70423 * C330 + C70706 + C70706 + C153671 * C354 + C70421 * C329 +
             C70707 + C70707 + C70415 * C353) *
                C153931) *
               C153626 * C153838) *
              C153909 +
          (((C70421 * C330 + C70708 + C70708 + C70415 * C354 + C70423 * C1319 +
             C70709 + C70709 + C153671 * C1329) *
                C153931 +
            (C70762 + C70763) * C153924 + (C70764 + C70765) * C153905 +
            (C70766 + C70767) * C153852) *
               C153626 * C153838 -
           ((C70423 * C4306 + C72936 + C72936 + C153671 * C4314 +
             C70421 * C1889 + C72937 + C72937 + C70415 * C1899) *
                C153852 +
            (C70423 * C4305 + C72938 + C72938 + C153671 * C4313 +
             C70421 * C1890 + C72939 + C72939 + C70415 * C1900) *
                C153905 +
            (C70423 * C4304 + C72940 + C72940 + C153671 * C4312 +
             C70421 * C1891 + C72941 + C72941 + C70415 * C1901) *
                C153924 +
            (C70423 * C4303 + C72942 + C72942 + C153671 * C4311 +
             C70421 * C1892 + C72943 + C72943 + C70415 * C1902) *
                C153931) *
               C153626 * C153591) *
              C1601) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C74251 * C136 + C74260 + C74260 + C153932 * C152 + C74253 * C329 +
             C74261 + C74261 + C153928 * C353 + C74255 * C330 + C74262 +
             C74262 + C153918 * C354 + C74257 * C1319 + C74263 + C74263 +
             C153860 * C1329) *
                C74249 +
            (C74328 + C74329 + C74330 + C74331) * C153464) *
               C153626 * C153838 -
           ((C74848 + C74849 + C74850 + C74851) * C153464 +
            (C74257 * C4303 + C74804 + C74804 + C153860 * C4311 +
             C74255 * C1892 + C74805 + C74805 + C153918 * C1902 +
             C74253 * C1057 + C74806 + C74806 + C153928 * C1069 +
             C74251 * C542 + C74807 + C74807 + C153932 * C566) *
                C74249) *
               C153626 * C153591) *
              C153908 +
          (((C74251 * C1057 + C75550 + C75550 + C153932 * C1069 +
             C74253 * C1892 + C75551 + C75551 + C153928 * C1902 +
             C74255 * C4303 + C75552 + C75552 + C153918 * C4311 +
             C74257 * C5703 + C75553 + C75553 + C153860 * C5709) *
                C74249 +
            (C75578 + C75579 + C75580 + C75581) * C153464) *
               C153626 * C153591 -
           ((C74590 + C74591 + C74592 + C74593) * C153464 +
            (C74257 * C3127 + C74546 + C74546 + C153860 * C3135 +
             C74255 * C1319 + C74547 + C74547 + C153918 * C1329 +
             C74253 * C330 + C74548 + C74548 + C153928 * C354 + C74251 * C329 +
             C74549 + C74549 + C153932 * C353) *
                C74249) *
               C153626 * C153838) *
              C153909 +
          (((C74251 * C330 + C74550 + C74550 + C153932 * C354 + C74253 * C1319 +
             C74551 + C74551 + C153928 * C1329 + C74255 * C3127 + C74552 +
             C74552 + C153918 * C3135 + C74257 * C4723 + C74553 + C74553 +
             C153860 * C4729) *
                C74249 +
            (C74594 + C74595 + C74596 + C74597) * C153464) *
               C153626 * C153838 -
           ((C74257 * C29093 + C76762 + C76762 + C153860 * C29097 +
             C74255 * C5702 + C76763 + C76763 + C153918 * C5708 +
             C74253 * C4304 + C76764 + C76764 + C153928 * C4312 +
             C74251 * C1891 + C76765 + C76765 + C153932 * C1901) *
                C153464 +
            (C74257 * C29092 + C76766 + C76766 + C153860 * C29096 +
             C74255 * C5703 + C76767 + C76767 + C153918 * C5709 +
             C74253 * C4303 + C76768 + C76768 + C153928 * C4311 +
             C74251 * C1892 + C76769 + C76769 + C153932 * C1902) *
                C74249) *
               C153626 * C153591) *
              C1601) *
         C153492) /
            (p * q * std::sqrt(p + q));
    d2ee[67] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
            C70427 + C70427 + C153671 * C353) *
               C153931 +
           (C70480 + C70481) * C153924 + C70490 * C153905 + C70491 * C153852) *
              C153626 * C153527 * C1310 -
          (C71236 * C153852 + C71237 * C153905 + (C70760 + C70761) * C153924 +
           (C70423 * C330 + C70706 + C70706 + C153671 * C354 + C70421 * C329 +
            C70707 + C70707 + C70415 * C353) *
               C153931) *
              C153626 * C153527 * C1311 +
          ((C70421 * C330 + C70708 + C70708 + C70415 * C354 + C70423 * C1319 +
            C70709 + C70709 + C153671 * C1329) *
               C153931 +
           (C70762 + C70763) * C153924 + (C70764 + C70765) * C153905 +
           (C70766 + C70767) * C153852) *
              C153626 * C153527 * C1312 -
          ((C70423 * C3130 + C72080 + C72080 + C153671 * C3138 +
            C70421 * C1316 + C72081 + C72081 + C70415 * C1326) *
               C153852 +
           (C70423 * C3129 + C72082 + C72082 + C153671 * C3137 +
            C70421 * C1317 + C72083 + C72083 + C70415 * C1327) *
               C153905 +
           (C70423 * C3128 + C72084 + C72084 + C153671 * C3136 +
            C70421 * C1318 + C72085 + C72085 + C70415 * C1328) *
               C153924 +
           (C70423 * C3127 + C72086 + C72086 + C153671 * C3135 +
            C70421 * C1319 + C72087 + C72087 + C70415 * C1329) *
               C153931) *
              C153626 * C153527 * C1313) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
             C70427 + C70427 + C153671 * C353) *
                C153931 +
            (C70480 + C70481) * C153924 + C70490 * C153905 + C70491 * C153852) *
               C153626 * C153527 * C1223 -
           (C71236 * C153852 + C71237 * C153905 + (C70760 + C70761) * C153924 +
            (C70423 * C330 + C70706 + C70706 + C153671 * C354 + C70421 * C329 +
             C70707 + C70707 + C70415 * C353) *
                C153931) *
               C153626 * C153527 * C153563) *
              C1225 +
          (((C70761 + C70760) * C153931 + (C70759 + C70758) * C153924 +
            (C70757 + C70756) * C153905 + (C71248 + C71249) * C153852) *
               C153626 * C153527 * C153563 -
           (C70492 * C153852 + C70493 * C153905 + (C70483 + C70482) * C153924 +
            (C70481 + C70480) * C153931) *
               C153626 * C153527 * C1223) *
              C1226 +
          ((C70490 * C153931 + C70491 * C153924 + (C70487 + C70486) * C153905 +
            (C70488 + C70489) * C153852) *
               C153626 * C153527 * C1223 -
           ((C70423 * C336 + C71242 + C71242 + C153671 * C360 + C70421 * C335 +
             C71243 + C71243 + C70415 * C359) *
                C153852 +
            (C71249 + C71248) * C153905 + C71236 * C153924 + C71237 * C153931) *
               C153626 * C153527 * C153563) *
              C1227)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
             C70427 + C70427 + C153671 * C353) *
                C153931 +
            (C70480 + C70481) * C153924 + C70490 * C153905 + C70491 * C153852) *
               C153626 * C535 -
           (C71444 * C153852 + C71445 * C153905 + (C71034 + C71035) * C153924 +
            (C70423 * C1057 + C70980 + C70980 + C153671 * C1069 +
             C70421 * C542 + C70981 + C70981 + C70415 * C566) *
                C153931) *
               C153626 * C536 +
           ((C70421 * C543 + C70982 + C70982 + C70415 * C567 + C70423 * C1461 +
             C70983 + C70983 + C153671 * C1471) *
                C153931 +
            (C71036 + C71037) * C153924 + (C71038 + C71039) * C153905 +
            (C71040 + C71041) * C153852) *
               C153626 * C537) *
              C1223 +
          (((C70421 * C1057 + C71716 + C71716 + C70415 * C1069 +
             C70423 * C1892 + C71717 + C71717 + C153671 * C1902) *
                C153931 +
            (C71750 + C71751) * C153924 + (C71752 + C71753) * C153905 +
            (C71754 + C71755) * C153852) *
               C153626 * C536 -
           (C71236 * C153852 + C71237 * C153905 + (C70760 + C70761) * C153924 +
            (C70423 * C330 + C70706 + C70706 + C153671 * C354 + C70421 * C329 +
             C70707 + C70707 + C70415 * C353) *
                C153931) *
               C153626 * C535 -
           ((C70423 * C3444 + C72282 + C72282 + C153671 * C3452 +
             C70421 * C1458 + C72283 + C72283 + C70415 * C1468) *
                C153852 +
            (C70423 * C3443 + C72284 + C72284 + C153671 * C3451 +
             C70421 * C1459 + C72285 + C72285 + C70415 * C1469) *
                C153905 +
            (C70423 * C3442 + C72286 + C72286 + C153671 * C3450 +
             C70421 * C1460 + C72287 + C72287 + C70415 * C1470) *
                C153924 +
            (C70423 * C3441 + C72288 + C72288 + C153671 * C3449 +
             C70421 * C1461 + C72289 + C72289 + C70415 * C1471) *
                C153931) *
               C153626 * C537) *
              C153563) *
         C153492) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C74251 * C136 + C74260 + C74260 + C153932 * C152 + C74253 * C329 +
             C74261 + C74261 + C153928 * C353 + C74255 * C330 + C74262 +
             C74262 + C153918 * C354 + C74257 * C1319 + C74263 + C74263 +
             C153860 * C1329) *
                C74249 +
            (C74328 + C74329 + C74330 + C74331) * C153464) *
               C153626 * C153527 * C1223 -
           ((C74590 + C74591 + C74592 + C74593) * C153464 +
            (C74257 * C3127 + C74546 + C74546 + C153860 * C3135 +
             C74255 * C1319 + C74547 + C74547 + C153918 * C1329 +
             C74253 * C330 + C74548 + C74548 + C153928 * C354 + C74251 * C329 +
             C74549 + C74549 + C153932 * C353) *
                C74249) *
               C153626 * C153527 * C153563) *
              C1225 +
          (((C74593 + C74592 + C74591 + C74590) * C74249 +
            (C75070 + C75071 + C75072 + C75073) * C153464) *
               C153626 * C153527 * C153563 -
           ((C74332 + C74333 + C74334 + C74335) * C153464 +
            (C74331 + C74330 + C74329 + C74328) * C74249) *
               C153626 * C153527 * C1223) *
              C1226 +
          (((C74335 + C74334 + C74333 + C74332) * C74249 +
            (C74336 + C74337 + C74338 + C74339) * C153464) *
               C153626 * C153527 * C1223 -
           ((C74257 * C3130 + C75058 + C75058 + C153860 * C3138 +
             C74255 * C1316 + C75059 + C75059 + C153918 * C1326 +
             C74253 * C333 + C75060 + C75060 + C153928 * C357 + C74251 * C326 +
             C75061 + C75061 + C153932 * C350) *
                C153464 +
            (C75073 + C75072 + C75071 + C75070) * C74249) *
               C153626 * C153527 * C153563) *
              C1227)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C74251 * C136 + C74260 + C74260 + C153932 * C152 + C74253 * C329 +
            C74261 + C74261 + C153928 * C353 + C74255 * C330 + C74262 + C74262 +
            C153918 * C354 + C74257 * C1319 + C74263 + C74263 +
            C153860 * C1329) *
               C74249 +
           (C74328 + C74329 + C74330 + C74331) * C153464) *
              C153626 * C153527 * C1310 -
          ((C74590 + C74591 + C74592 + C74593) * C153464 +
           (C74257 * C3127 + C74546 + C74546 + C153860 * C3135 +
            C74255 * C1319 + C74547 + C74547 + C153918 * C1329 + C74253 * C330 +
            C74548 + C74548 + C153928 * C354 + C74251 * C329 + C74549 + C74549 +
            C153932 * C353) *
               C74249) *
              C153626 * C153527 * C1311 +
          ((C74251 * C330 + C74550 + C74550 + C153932 * C354 + C74253 * C1319 +
            C74551 + C74551 + C153928 * C1329 + C74255 * C3127 + C74552 +
            C74552 + C153918 * C3135 + C74257 * C4723 + C74553 + C74553 +
            C153860 * C4729) *
               C74249 +
           (C74594 + C74595 + C74596 + C74597) * C153464) *
              C153626 * C153527 * C1312 -
          ((C74257 * C28503 + C75906 + C75906 + C153860 * C28507 +
            C74255 * C4722 + C75907 + C75907 + C153918 * C4728 +
            C74253 * C3128 + C75908 + C75908 + C153928 * C3136 +
            C74251 * C1318 + C75909 + C75909 + C153932 * C1328) *
               C153464 +
           (C74257 * C28502 + C75910 + C75910 + C153860 * C28506 +
            C74255 * C4723 + C75911 + C75911 + C153918 * C4729 +
            C74253 * C3127 + C75912 + C75912 + C153928 * C3135 +
            C74251 * C1319 + C75913 + C75913 + C153932 * C1329) *
               C74249) *
              C153626 * C153527 * C1313) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C74251 * C136 + C74260 + C74260 + C153932 * C152 + C74253 * C329 +
             C74261 + C74261 + C153928 * C353 + C74255 * C330 + C74262 +
             C74262 + C153918 * C354 + C74257 * C1319 + C74263 + C74263 +
             C153860 * C1329) *
                C74249 +
            (C74328 + C74329 + C74330 + C74331) * C153464) *
               C153626 * C535 -
           ((C74848 + C74849 + C74850 + C74851) * C153464 +
            (C74257 * C4303 + C74804 + C74804 + C153860 * C4311 +
             C74255 * C1892 + C74805 + C74805 + C153918 * C1902 +
             C74253 * C1057 + C74806 + C74806 + C153928 * C1069 +
             C74251 * C542 + C74807 + C74807 + C153932 * C566) *
                C74249) *
               C153626 * C536 +
           ((C74251 * C543 + C74808 + C74808 + C153932 * C567 + C74253 * C1461 +
             C74809 + C74809 + C153928 * C1471 + C74255 * C3441 + C74810 +
             C74810 + C153918 * C3449 + C74257 * C4959 + C74811 + C74811 +
             C153860 * C4965) *
                C74249 +
            (C74852 + C74853 + C74854 + C74855) * C153464) *
               C153626 * C537) *
              C1223 +
          (((C74251 * C1057 + C75550 + C75550 + C153932 * C1069 +
             C74253 * C1892 + C75551 + C75551 + C153928 * C1902 +
             C74255 * C4303 + C75552 + C75552 + C153918 * C4311 +
             C74257 * C5703 + C75553 + C75553 + C153860 * C5709) *
                C74249 +
            (C75578 + C75579 + C75580 + C75581) * C153464) *
               C153626 * C536 -
           ((C74590 + C74591 + C74592 + C74593) * C153464 +
            (C74257 * C3127 + C74546 + C74546 + C153860 * C3135 +
             C74255 * C1319 + C74547 + C74547 + C153918 * C1329 +
             C74253 * C330 + C74548 + C74548 + C153928 * C354 + C74251 * C329 +
             C74549 + C74549 + C153932 * C353) *
                C74249) *
               C153626 * C535 -
           ((C74257 * C28651 + C76108 + C76108 + C153860 * C28655 +
             C74255 * C4958 + C76109 + C76109 + C153918 * C4964 +
             C74253 * C3442 + C76110 + C76110 + C153928 * C3450 +
             C74251 * C1460 + C76111 + C76111 + C153932 * C1470) *
                C153464 +
            (C74257 * C28650 + C76112 + C76112 + C153860 * C28654 +
             C74255 * C4959 + C76113 + C76113 + C153918 * C4965 +
             C74253 * C3441 + C76114 + C76114 + C153928 * C3449 +
             C74251 * C1461 + C76115 + C76115 + C153932 * C1471) *
                C74249) *
               C153626 * C537) *
              C153563) *
         C153492) /
            (p * q * std::sqrt(p + q));
    d2ee[68] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
              C70427 + C70427 + C153671 * C353) *
                 C153931 +
             (C70480 + C70481) * C153924 + C70490 * C153905 +
             C70491 * C153852) *
                C153626 * C153838 -
            (C71444 * C153852 + C71445 * C153905 + (C71034 + C71035) * C153924 +
             (C70423 * C1057 + C70980 + C70980 + C153671 * C1069 +
              C70421 * C542 + C70981 + C70981 + C70415 * C566) *
                 C153931) *
                C153626 * C153591) *
               C1223 +
           (((C70421 * C1057 + C71716 + C71716 + C70415 * C1069 +
              C70423 * C1892 + C71717 + C71717 + C153671 * C1902) *
                 C153931 +
             (C71750 + C71751) * C153924 + (C71752 + C71753) * C153905 +
             (C71754 + C71755) * C153852) *
                C153626 * C153591 -
            (C71236 * C153852 + C71237 * C153905 + (C70760 + C70761) * C153924 +
             (C70423 * C330 + C70706 + C70706 + C153671 * C354 + C70421 * C329 +
              C70707 + C70707 + C70415 * C353) *
                 C153931) *
                C153626 * C153838) *
               C153563) *
              C153829 +
          ((((C71035 + C71034) * C153931 + (C71033 + C71032) * C153924 +
             (C71031 + C71030) * C153905 + (C71456 + C71457) * C153852) *
                C153626 * C153591 -
            (C70492 * C153852 + C70493 * C153905 + (C70483 + C70482) * C153924 +
             (C70481 + C70480) * C153931) *
                C153626 * C153838) *
               C1223 +
           (((C70761 + C70760) * C153931 + (C70759 + C70758) * C153924 +
             (C70757 + C70756) * C153905 + (C71248 + C71249) * C153852) *
                C153626 * C153838 -
            ((C70423 * C1888 + C71736 + C71736 + C153671 * C1898 +
              C70421 * C1061 + C71737 + C71737 + C70415 * C1073) *
                 C153852 +
             (C71755 + C71754) * C153905 + (C71753 + C71752) * C153924 +
             (C71751 + C71750) * C153931) *
                C153626 * C153591) *
               C153563) *
              C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C74251 * C136 + C74260 + C74260 + C153932 * C152 + C74253 * C329 +
              C74261 + C74261 + C153928 * C353 + C74255 * C330 + C74262 +
              C74262 + C153918 * C354 + C74257 * C1319 + C74263 + C74263 +
              C153860 * C1329) *
                 C74249 +
             (C74328 + C74329 + C74330 + C74331) * C153464) *
                C153626 * C153838 -
            ((C74848 + C74849 + C74850 + C74851) * C153464 +
             (C74257 * C4303 + C74804 + C74804 + C153860 * C4311 +
              C74255 * C1892 + C74805 + C74805 + C153918 * C1902 +
              C74253 * C1057 + C74806 + C74806 + C153928 * C1069 +
              C74251 * C542 + C74807 + C74807 + C153932 * C566) *
                 C74249) *
                C153626 * C153591) *
               C1223 +
           (((C74251 * C1057 + C75550 + C75550 + C153932 * C1069 +
              C74253 * C1892 + C75551 + C75551 + C153928 * C1902 +
              C74255 * C4303 + C75552 + C75552 + C153918 * C4311 +
              C74257 * C5703 + C75553 + C75553 + C153860 * C5709) *
                 C74249 +
             (C75578 + C75579 + C75580 + C75581) * C153464) *
                C153626 * C153591 -
            ((C74590 + C74591 + C74592 + C74593) * C153464 +
             (C74257 * C3127 + C74546 + C74546 + C153860 * C3135 +
              C74255 * C1319 + C74547 + C74547 + C153918 * C1329 +
              C74253 * C330 + C74548 + C74548 + C153928 * C354 + C74251 * C329 +
              C74549 + C74549 + C153932 * C353) *
                 C74249) *
                C153626 * C153838) *
               C153563) *
              C153829 +
          ((((C74851 + C74850 + C74849 + C74848) * C74249 +
             (C75288 + C75289 + C75290 + C75291) * C153464) *
                C153626 * C153591 -
            ((C74332 + C74333 + C74334 + C74335) * C153464 +
             (C74331 + C74330 + C74329 + C74328) * C74249) *
                C153626 * C153838) *
               C1223 +
           (((C74593 + C74592 + C74591 + C74590) * C74249 +
             (C75070 + C75071 + C75072 + C75073) * C153464) *
                C153626 * C153838 -
            ((C74257 * C5701 + C75566 + C75566 + C153860 * C5707 +
              C74255 * C4305 + C75567 + C75567 + C153918 * C4313 +
              C74253 * C1890 + C75568 + C75568 + C153928 * C1900 +
              C74251 * C1059 + C75569 + C75569 + C153932 * C1071) *
                 C153464 +
             (C75581 + C75580 + C75579 + C75578) * C74249) *
                C153626 * C153591) *
               C153563) *
              C153498)) /
            (p * q * std::sqrt(p + q));
    d2ee[69] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
             C70427 + C70427 + C153671 * C353) *
                C153931 +
            (C70480 + C70481) * C153924 + C70490 * C153905 + C70491 * C153852) *
               C153626 * C153527 * C1223 -
           (C71236 * C153852 + C71237 * C153905 + (C70760 + C70761) * C153924 +
            (C70423 * C330 + C70706 + C70706 + C153671 * C354 + C70421 * C329 +
             C70707 + C70707 + C70415 * C353) *
                C153931) *
               C153626 * C153527 * C153563) *
              C1225 +
          (((C70761 + C70760) * C153931 + (C70759 + C70758) * C153924 +
            (C70757 + C70756) * C153905 + (C71248 + C71249) * C153852) *
               C153626 * C153527 * C153563 -
           (C70492 * C153852 + C70493 * C153905 + (C70483 + C70482) * C153924 +
            (C70481 + C70480) * C153931) *
               C153626 * C153527 * C1223) *
              C1226 +
          ((C70490 * C153931 + C70491 * C153924 + (C70487 + C70486) * C153905 +
            (C70488 + C70489) * C153852) *
               C153626 * C153527 * C1223 -
           ((C70423 * C336 + C71242 + C71242 + C153671 * C360 + C70421 * C335 +
             C71243 + C71243 + C70415 * C359) *
                C153852 +
            (C71249 + C71248) * C153905 + C71236 * C153924 + C71237 * C153931) *
               C153626 * C153527 * C153563) *
              C1227)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
            C70427 + C70427 + C153671 * C353) *
               C153931 +
           (C70480 + C70481) * C153924 + C70490 * C153905 + C70491 * C153852) *
              C153626 * C153527 * C1310 -
          (C71236 * C153852 + C71237 * C153905 + (C70760 + C70761) * C153924 +
           (C70423 * C330 + C70706 + C70706 + C153671 * C354 + C70421 * C329 +
            C70707 + C70707 + C70415 * C353) *
               C153931) *
              C153626 * C153527 * C1311 +
          ((C70421 * C330 + C70708 + C70708 + C70415 * C354 + C70423 * C1319 +
            C70709 + C70709 + C153671 * C1329) *
               C153931 +
           (C70762 + C70763) * C153924 + (C70764 + C70765) * C153905 +
           (C70766 + C70767) * C153852) *
              C153626 * C153527 * C1312 -
          ((C70423 * C3130 + C72080 + C72080 + C153671 * C3138 +
            C70421 * C1316 + C72081 + C72081 + C70415 * C1326) *
               C153852 +
           (C70423 * C3129 + C72082 + C72082 + C153671 * C3137 +
            C70421 * C1317 + C72083 + C72083 + C70415 * C1327) *
               C153905 +
           (C70423 * C3128 + C72084 + C72084 + C153671 * C3136 +
            C70421 * C1318 + C72085 + C72085 + C70415 * C1328) *
               C153924 +
           (C70423 * C3127 + C72086 + C72086 + C153671 * C3135 +
            C70421 * C1319 + C72087 + C72087 + C70415 * C1329) *
               C153931) *
              C153626 * C153527 * C1313) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C74251 * C136 + C74260 + C74260 + C153932 * C152 + C74253 * C329 +
             C74261 + C74261 + C153928 * C353 + C74255 * C330 + C74262 +
             C74262 + C153918 * C354 + C74257 * C1319 + C74263 + C74263 +
             C153860 * C1329) *
                C74249 +
            (C74328 + C74329 + C74330 + C74331) * C153464) *
               C153626 * C153527 * C1223 -
           ((C74590 + C74591 + C74592 + C74593) * C153464 +
            (C74257 * C3127 + C74546 + C74546 + C153860 * C3135 +
             C74255 * C1319 + C74547 + C74547 + C153918 * C1329 +
             C74253 * C330 + C74548 + C74548 + C153928 * C354 + C74251 * C329 +
             C74549 + C74549 + C153932 * C353) *
                C74249) *
               C153626 * C153527 * C153563) *
              C1225 +
          (((C74593 + C74592 + C74591 + C74590) * C74249 +
            (C75070 + C75071 + C75072 + C75073) * C153464) *
               C153626 * C153527 * C153563 -
           ((C74332 + C74333 + C74334 + C74335) * C153464 +
            (C74331 + C74330 + C74329 + C74328) * C74249) *
               C153626 * C153527 * C1223) *
              C1226 +
          (((C74335 + C74334 + C74333 + C74332) * C74249 +
            (C74336 + C74337 + C74338 + C74339) * C153464) *
               C153626 * C153527 * C1223 -
           ((C74257 * C3130 + C75058 + C75058 + C153860 * C3138 +
             C74255 * C1316 + C75059 + C75059 + C153918 * C1326 +
             C74253 * C333 + C75060 + C75060 + C153928 * C357 + C74251 * C326 +
             C75061 + C75061 + C153932 * C350) *
                C153464 +
            (C75073 + C75072 + C75071 + C75070) * C74249) *
               C153626 * C153527 * C153563) *
              C1227)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C74251 * C136 + C74260 + C74260 + C153932 * C152 + C74253 * C329 +
            C74261 + C74261 + C153928 * C353 + C74255 * C330 + C74262 + C74262 +
            C153918 * C354 + C74257 * C1319 + C74263 + C74263 +
            C153860 * C1329) *
               C74249 +
           (C74328 + C74329 + C74330 + C74331) * C153464) *
              C153626 * C153527 * C1310 -
          ((C74590 + C74591 + C74592 + C74593) * C153464 +
           (C74257 * C3127 + C74546 + C74546 + C153860 * C3135 +
            C74255 * C1319 + C74547 + C74547 + C153918 * C1329 + C74253 * C330 +
            C74548 + C74548 + C153928 * C354 + C74251 * C329 + C74549 + C74549 +
            C153932 * C353) *
               C74249) *
              C153626 * C153527 * C1311 +
          ((C74251 * C330 + C74550 + C74550 + C153932 * C354 + C74253 * C1319 +
            C74551 + C74551 + C153928 * C1329 + C74255 * C3127 + C74552 +
            C74552 + C153918 * C3135 + C74257 * C4723 + C74553 + C74553 +
            C153860 * C4729) *
               C74249 +
           (C74594 + C74595 + C74596 + C74597) * C153464) *
              C153626 * C153527 * C1312 -
          ((C74257 * C28503 + C75906 + C75906 + C153860 * C28507 +
            C74255 * C4722 + C75907 + C75907 + C153918 * C4728 +
            C74253 * C3128 + C75908 + C75908 + C153928 * C3136 +
            C74251 * C1318 + C75909 + C75909 + C153932 * C1328) *
               C153464 +
           (C74257 * C28502 + C75910 + C75910 + C153860 * C28506 +
            C74255 * C4723 + C75911 + C75911 + C153918 * C4729 +
            C74253 * C3127 + C75912 + C75912 + C153928 * C3135 +
            C74251 * C1319 + C75913 + C75913 + C153932 * C1329) *
               C74249) *
              C153626 * C153527 * C1313) *
         C153492) /
            (p * q * std::sqrt(p + q));
    d2ee[70] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
              C70427 + C70427 + C153671 * C353) *
                 C153931 +
             (C70480 + C70481) * C153924 + C70490 * C153905 +
             C70491 * C153852) *
                C153626 * C2030 -
            (C71444 * C153852 + C71445 * C153905 + (C71034 + C71035) * C153924 +
             (C70423 * C1057 + C70980 + C70980 + C153671 * C1069 +
              C70421 * C542 + C70981 + C70981 + C70415 * C566) *
                 C153931) *
                C153626 * C153591) *
               C153837 +
           (((C70421 * C1057 + C71716 + C71716 + C70415 * C1069 +
              C70423 * C1892 + C71717 + C71717 + C153671 * C1902) *
                 C153931 +
             (C71750 + C71751) * C153924 + (C71752 + C71753) * C153905 +
             (C71754 + C71755) * C153852) *
                C153626 * C153591 -
            (C71236 * C153852 + C71237 * C153905 + (C70760 + C70761) * C153924 +
             (C70423 * C330 + C70706 + C70706 + C153671 * C354 + C70421 * C329 +
              C70707 + C70707 + C70415 * C353) *
                 C153931) *
                C153626 * C2030) *
               C153563) *
              C153829 +
          ((((C71035 + C71034) * C153931 + (C71033 + C71032) * C153924 +
             (C71031 + C71030) * C153905 + (C71456 + C71457) * C153852) *
                C153626 * C153591 -
            (C70492 * C153852 + C70493 * C153905 + (C70483 + C70482) * C153924 +
             (C70481 + C70480) * C153931) *
                C153626 * C2030) *
               C153837 +
           (((C70761 + C70760) * C153931 + (C70759 + C70758) * C153924 +
             (C70757 + C70756) * C153905 + (C71248 + C71249) * C153852) *
                C153626 * C2030 -
            ((C70423 * C1888 + C71736 + C71736 + C153671 * C1898 +
              C70421 * C1061 + C71737 + C71737 + C70415 * C1073) *
                 C153852 +
             (C71755 + C71754) * C153905 + (C71753 + C71752) * C153924 +
             (C71751 + C71750) * C153931) *
                C153626 * C153591) *
               C153563) *
              C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C74251 * C136 + C74260 + C74260 + C153932 * C152 + C74253 * C329 +
              C74261 + C74261 + C153928 * C353 + C74255 * C330 + C74262 +
              C74262 + C153918 * C354 + C74257 * C1319 + C74263 + C74263 +
              C153860 * C1329) *
                 C74249 +
             (C74328 + C74329 + C74330 + C74331) * C153464) *
                C153626 * C2030 -
            ((C74848 + C74849 + C74850 + C74851) * C153464 +
             (C74257 * C4303 + C74804 + C74804 + C153860 * C4311 +
              C74255 * C1892 + C74805 + C74805 + C153918 * C1902 +
              C74253 * C1057 + C74806 + C74806 + C153928 * C1069 +
              C74251 * C542 + C74807 + C74807 + C153932 * C566) *
                 C74249) *
                C153626 * C153591) *
               C153837 +
           (((C74251 * C1057 + C75550 + C75550 + C153932 * C1069 +
              C74253 * C1892 + C75551 + C75551 + C153928 * C1902 +
              C74255 * C4303 + C75552 + C75552 + C153918 * C4311 +
              C74257 * C5703 + C75553 + C75553 + C153860 * C5709) *
                 C74249 +
             (C75578 + C75579 + C75580 + C75581) * C153464) *
                C153626 * C153591 -
            ((C74590 + C74591 + C74592 + C74593) * C153464 +
             (C74257 * C3127 + C74546 + C74546 + C153860 * C3135 +
              C74255 * C1319 + C74547 + C74547 + C153918 * C1329 +
              C74253 * C330 + C74548 + C74548 + C153928 * C354 + C74251 * C329 +
              C74549 + C74549 + C153932 * C353) *
                 C74249) *
                C153626 * C2030) *
               C153563) *
              C153829 +
          ((((C74851 + C74850 + C74849 + C74848) * C74249 +
             (C75288 + C75289 + C75290 + C75291) * C153464) *
                C153626 * C153591 -
            ((C74332 + C74333 + C74334 + C74335) * C153464 +
             (C74331 + C74330 + C74329 + C74328) * C74249) *
                C153626 * C2030) *
               C153837 +
           (((C74593 + C74592 + C74591 + C74590) * C74249 +
             (C75070 + C75071 + C75072 + C75073) * C153464) *
                C153626 * C2030 -
            ((C74257 * C5701 + C75566 + C75566 + C153860 * C5707 +
              C74255 * C4305 + C75567 + C75567 + C153918 * C4313 +
              C74253 * C1890 + C75568 + C75568 + C153928 * C1900 +
              C74251 * C1059 + C75569 + C75569 + C153932 * C1071) *
                 C153464 +
             (C75581 + C75580 + C75579 + C75578) * C74249) *
                C153626 * C153591) *
               C153563) *
              C153498)) /
            (p * q * std::sqrt(p + q));
    d2ee[71] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
             C70427 + C70427 + C153671 * C353) *
                C153931 +
            (C70480 + C70481) * C153924 + C70490 * C153905 + C70491 * C153852) *
               C153626 * C153910 -
           (C71444 * C153852 + C71445 * C153905 + (C71034 + C71035) * C153924 +
            (C70423 * C1057 + C70980 + C70980 + C153671 * C1069 +
             C70421 * C542 + C70981 + C70981 + C70415 * C566) *
                C153931) *
               C153626 * C153911 +
           ((C70421 * C543 + C70982 + C70982 + C70415 * C567 + C70423 * C1461 +
             C70983 + C70983 + C153671 * C1471) *
                C153931 +
            (C71036 + C71037) * C153924 + (C71038 + C71039) * C153905 +
            (C71040 + C71041) * C153852) *
               C153626 * C2546) *
              C153837 +
          (((C70421 * C1057 + C71716 + C71716 + C70415 * C1069 +
             C70423 * C1892 + C71717 + C71717 + C153671 * C1902) *
                C153931 +
            (C71750 + C71751) * C153924 + (C71752 + C71753) * C153905 +
            (C71754 + C71755) * C153852) *
               C153626 * C153911 -
           (C71236 * C153852 + C71237 * C153905 + (C70760 + C70761) * C153924 +
            (C70423 * C330 + C70706 + C70706 + C153671 * C354 + C70421 * C329 +
             C70707 + C70707 + C70415 * C353) *
                C153931) *
               C153626 * C153910 -
           ((C70423 * C3444 + C72282 + C72282 + C153671 * C3452 +
             C70421 * C1458 + C72283 + C72283 + C70415 * C1468) *
                C153852 +
            (C70423 * C3443 + C72284 + C72284 + C153671 * C3451 +
             C70421 * C1459 + C72285 + C72285 + C70415 * C1469) *
                C153905 +
            (C70423 * C3442 + C72286 + C72286 + C153671 * C3450 +
             C70421 * C1460 + C72287 + C72287 + C70415 * C1470) *
                C153924 +
            (C70423 * C3441 + C72288 + C72288 + C153671 * C3449 +
             C70421 * C1461 + C72289 + C72289 + C70415 * C1471) *
                C153931) *
               C153626 * C2546) *
              C153563) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C74251 * C136 + C74260 + C74260 + C153932 * C152 + C74253 * C329 +
             C74261 + C74261 + C153928 * C353 + C74255 * C330 + C74262 +
             C74262 + C153918 * C354 + C74257 * C1319 + C74263 + C74263 +
             C153860 * C1329) *
                C74249 +
            (C74328 + C74329 + C74330 + C74331) * C153464) *
               C153626 * C153910 -
           ((C74848 + C74849 + C74850 + C74851) * C153464 +
            (C74257 * C4303 + C74804 + C74804 + C153860 * C4311 +
             C74255 * C1892 + C74805 + C74805 + C153918 * C1902 +
             C74253 * C1057 + C74806 + C74806 + C153928 * C1069 +
             C74251 * C542 + C74807 + C74807 + C153932 * C566) *
                C74249) *
               C153626 * C153911 +
           ((C74251 * C543 + C74808 + C74808 + C153932 * C567 + C74253 * C1461 +
             C74809 + C74809 + C153928 * C1471 + C74255 * C3441 + C74810 +
             C74810 + C153918 * C3449 + C74257 * C4959 + C74811 + C74811 +
             C153860 * C4965) *
                C74249 +
            (C74852 + C74853 + C74854 + C74855) * C153464) *
               C153626 * C2546) *
              C153837 +
          (((C74251 * C1057 + C75550 + C75550 + C153932 * C1069 +
             C74253 * C1892 + C75551 + C75551 + C153928 * C1902 +
             C74255 * C4303 + C75552 + C75552 + C153918 * C4311 +
             C74257 * C5703 + C75553 + C75553 + C153860 * C5709) *
                C74249 +
            (C75578 + C75579 + C75580 + C75581) * C153464) *
               C153626 * C153911 -
           ((C74590 + C74591 + C74592 + C74593) * C153464 +
            (C74257 * C3127 + C74546 + C74546 + C153860 * C3135 +
             C74255 * C1319 + C74547 + C74547 + C153918 * C1329 +
             C74253 * C330 + C74548 + C74548 + C153928 * C354 + C74251 * C329 +
             C74549 + C74549 + C153932 * C353) *
                C74249) *
               C153626 * C153910 -
           ((C74257 * C28651 + C76108 + C76108 + C153860 * C28655 +
             C74255 * C4958 + C76109 + C76109 + C153918 * C4964 +
             C74253 * C3442 + C76110 + C76110 + C153928 * C3450 +
             C74251 * C1460 + C76111 + C76111 + C153932 * C1470) *
                C153464 +
            (C74257 * C28650 + C76112 + C76112 + C153860 * C28654 +
             C74255 * C4959 + C76113 + C76113 + C153918 * C4965 +
             C74253 * C3441 + C76114 + C76114 + C153928 * C3449 +
             C74251 * C1461 + C76115 + C76115 + C153932 * C1471) *
                C74249) *
               C153626 * C2546) *
              C153563) *
         C153492) /
            (p * q * std::sqrt(p + q));
    d2ee[72] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
             C70427 + C70427 + C153671 * C353) *
                C153931 +
            (C70480 + C70481) * C153924 + C70490 * C153905 + C70491 * C153852) *
               C153626 * C2030 -
           (C71444 * C153852 + C71445 * C153905 + (C71034 + C71035) * C153924 +
            (C70423 * C1057 + C70980 + C70980 + C153671 * C1069 +
             C70421 * C542 + C70981 + C70981 + C70415 * C566) *
                C153931) *
               C153626 * C153591) *
              C320 +
          (((C70421 * C1057 + C71716 + C71716 + C70415 * C1069 +
             C70423 * C1892 + C71717 + C71717 + C153671 * C1902) *
                C153931 +
            (C71750 + C71751) * C153924 + (C71752 + C71753) * C153905 +
            (C71754 + C71755) * C153852) *
               C153626 * C153591 -
           (C71236 * C153852 + C71237 * C153905 + (C70760 + C70761) * C153924 +
            (C70423 * C330 + C70706 + C70706 + C153671 * C354 + C70421 * C329 +
             C70707 + C70707 + C70415 * C353) *
                C153931) *
               C153626 * C2030) *
              C321 +
          (((C70421 * C330 + C70708 + C70708 + C70415 * C354 + C70423 * C1319 +
             C70709 + C70709 + C153671 * C1329) *
                C153931 +
            (C70762 + C70763) * C153924 + (C70764 + C70765) * C153905 +
            (C70766 + C70767) * C153852) *
               C153626 * C2030 -
           ((C70423 * C4306 + C72936 + C72936 + C153671 * C4314 +
             C70421 * C1889 + C72937 + C72937 + C70415 * C1899) *
                C153852 +
            (C70423 * C4305 + C72938 + C72938 + C153671 * C4313 +
             C70421 * C1890 + C72939 + C72939 + C70415 * C1900) *
                C153905 +
            (C70423 * C4304 + C72940 + C72940 + C153671 * C4312 +
             C70421 * C1891 + C72941 + C72941 + C70415 * C1901) *
                C153924 +
            (C70423 * C4303 + C72942 + C72942 + C153671 * C4311 +
             C70421 * C1892 + C72943 + C72943 + C70415 * C1902) *
                C153931) *
               C153626 * C153591) *
              C322) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
             C70427 + C70427 + C153671 * C353) *
                C153931 +
            (C70480 + C70481) * C153924 + C70490 * C153905 + C70491 * C153852) *
               C153626 * C2030 -
           (C71444 * C153852 + C71445 * C153905 + (C71034 + C71035) * C153924 +
            (C70423 * C1057 + C70980 + C70980 + C153671 * C1069 +
             C70421 * C542 + C70981 + C70981 + C70415 * C566) *
                C153931) *
               C153626 * C153591) *
              C153511 * C1225 +
          (((C71035 + C71034) * C153931 + (C71033 + C71032) * C153924 +
            (C71031 + C71030) * C153905 + (C71456 + C71457) * C153852) *
               C153626 * C153591 -
           (C70492 * C153852 + C70493 * C153905 + (C70483 + C70482) * C153924 +
            (C70481 + C70480) * C153931) *
               C153626 * C2030) *
              C153511 * C1226 +
          ((C70490 * C153931 + C70491 * C153924 + (C70487 + C70486) * C153905 +
            (C70488 + C70489) * C153852) *
               C153626 * C2030 -
           ((C70423 * C1062 + C71450 + C71450 + C153671 * C1074 +
             C70421 * C548 + C71451 + C71451 + C70415 * C572) *
                C153852 +
            (C71457 + C71456) * C153905 + C71444 * C153924 + C71445 * C153931) *
               C153626 * C153591) *
              C153511 * C1227)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
            C70427 + C70427 + C153671 * C353) *
               C153931 +
           (C70480 + C70481) * C153924 + C70490 * C153905 + C70491 * C153852) *
              C153626 * C2236 -
          (C71444 * C153852 + C71445 * C153905 + (C71034 + C71035) * C153924 +
           (C70423 * C1057 + C70980 + C70980 + C153671 * C1069 + C70421 * C542 +
            C70981 + C70981 + C70415 * C566) *
               C153931) *
              C153626 * C2237 +
          ((C70421 * C543 + C70982 + C70982 + C70415 * C567 + C70423 * C1461 +
            C70983 + C70983 + C153671 * C1471) *
               C153931 +
           (C71036 + C71037) * C153924 + (C71038 + C71039) * C153905 +
           (C71040 + C71041) * C153852) *
              C153626 * C2238 -
          ((C70423 * C8488 + C73462 + C73462 + C153671 * C8490 +
            C70421 * C2241 + C73463 + C73463 + C70415 * C2251) *
               C153852 +
           (C70423 * C6302 + C73464 + C73464 + C153671 * C6314 +
            C70421 * C2242 + C73465 + C73465 + C70415 * C2252) *
               C153905 +
           (C70423 * C6304 + C73466 + C73466 + C153671 * C6316 +
            C70421 * C2243 + C73467 + C73467 + C70415 * C2253) *
               C153924 +
           (C70423 * C6306 + C73468 + C73468 + C153671 * C6318 +
            C70421 * C2244 + C73469 + C73469 + C70415 * C2254) *
               C153931) *
              C153626 * C2239) *
         C153511 * C153492) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C74251 * C136 + C74260 + C74260 + C153932 * C152 + C74253 * C329 +
             C74261 + C74261 + C153928 * C353 + C74255 * C330 + C74262 +
             C74262 + C153918 * C354 + C74257 * C1319 + C74263 + C74263 +
             C153860 * C1329) *
                C74249 +
            (C74328 + C74329 + C74330 + C74331) * C153464) *
               C153626 * C2030 -
           ((C74848 + C74849 + C74850 + C74851) * C153464 +
            (C74257 * C4303 + C74804 + C74804 + C153860 * C4311 +
             C74255 * C1892 + C74805 + C74805 + C153918 * C1902 +
             C74253 * C1057 + C74806 + C74806 + C153928 * C1069 +
             C74251 * C542 + C74807 + C74807 + C153932 * C566) *
                C74249) *
               C153626 * C153591) *
              C153511 * C1225 +
          (((C74851 + C74850 + C74849 + C74848) * C74249 +
            (C75288 + C75289 + C75290 + C75291) * C153464) *
               C153626 * C153591 -
           ((C74332 + C74333 + C74334 + C74335) * C153464 +
            (C74331 + C74330 + C74329 + C74328) * C74249) *
               C153626 * C2030) *
              C153511 * C1226 +
          (((C74335 + C74334 + C74333 + C74332) * C74249 +
            (C74336 + C74337 + C74338 + C74339) * C153464) *
               C153626 * C2030 -
           ((C74257 * C4306 + C75276 + C75276 + C153860 * C4314 +
             C74255 * C1889 + C75277 + C75277 + C153918 * C1899 +
             C74253 * C1060 + C75278 + C75278 + C153928 * C1072 +
             C74251 * C539 + C75279 + C75279 + C153932 * C563) *
                C153464 +
            (C75291 + C75290 + C75289 + C75288) * C74249) *
               C153626 * C153591) *
              C153511 * C1227)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C74251 * C136 + C74260 + C74260 + C153932 * C152 + C74253 * C329 +
             C74261 + C74261 + C153928 * C353 + C74255 * C330 + C74262 +
             C74262 + C153918 * C354 + C74257 * C1319 + C74263 + C74263 +
             C153860 * C1329) *
                C74249 +
            (C74328 + C74329 + C74330 + C74331) * C153464) *
               C153626 * C2030 -
           ((C74848 + C74849 + C74850 + C74851) * C153464 +
            (C74257 * C4303 + C74804 + C74804 + C153860 * C4311 +
             C74255 * C1892 + C74805 + C74805 + C153918 * C1902 +
             C74253 * C1057 + C74806 + C74806 + C153928 * C1069 +
             C74251 * C542 + C74807 + C74807 + C153932 * C566) *
                C74249) *
               C153626 * C153591) *
              C320 +
          (((C74251 * C1057 + C75550 + C75550 + C153932 * C1069 +
             C74253 * C1892 + C75551 + C75551 + C153928 * C1902 +
             C74255 * C4303 + C75552 + C75552 + C153918 * C4311 +
             C74257 * C5703 + C75553 + C75553 + C153860 * C5709) *
                C74249 +
            (C75578 + C75579 + C75580 + C75581) * C153464) *
               C153626 * C153591 -
           ((C74590 + C74591 + C74592 + C74593) * C153464 +
            (C74257 * C3127 + C74546 + C74546 + C153860 * C3135 +
             C74255 * C1319 + C74547 + C74547 + C153918 * C1329 +
             C74253 * C330 + C74548 + C74548 + C153928 * C354 + C74251 * C329 +
             C74549 + C74549 + C153932 * C353) *
                C74249) *
               C153626 * C2030) *
              C321 +
          (((C74251 * C330 + C74550 + C74550 + C153932 * C354 + C74253 * C1319 +
             C74551 + C74551 + C153928 * C1329 + C74255 * C3127 + C74552 +
             C74552 + C153918 * C3135 + C74257 * C4723 + C74553 + C74553 +
             C153860 * C4729) *
                C74249 +
            (C74594 + C74595 + C74596 + C74597) * C153464) *
               C153626 * C2030 -
           ((C74257 * C29093 + C76762 + C76762 + C153860 * C29097 +
             C74255 * C5702 + C76763 + C76763 + C153918 * C5708 +
             C74253 * C4304 + C76764 + C76764 + C153928 * C4312 +
             C74251 * C1891 + C76765 + C76765 + C153932 * C1901) *
                C153464 +
            (C74257 * C29092 + C76766 + C76766 + C153860 * C29096 +
             C74255 * C5703 + C76767 + C76767 + C153918 * C5709 +
             C74253 * C4303 + C76768 + C76768 + C153928 * C4311 +
             C74251 * C1892 + C76769 + C76769 + C153932 * C1902) *
                C74249) *
               C153626 * C153591) *
              C322) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C74251 * C136 + C74260 + C74260 + C153932 * C152 + C74253 * C329 +
            C74261 + C74261 + C153928 * C353 + C74255 * C330 + C74262 + C74262 +
            C153918 * C354 + C74257 * C1319 + C74263 + C74263 +
            C153860 * C1329) *
               C74249 +
           (C74328 + C74329 + C74330 + C74331) * C153464) *
              C153626 * C2236 -
          ((C74848 + C74849 + C74850 + C74851) * C153464 +
           (C74257 * C4303 + C74804 + C74804 + C153860 * C4311 +
            C74255 * C1892 + C74805 + C74805 + C153918 * C1902 +
            C74253 * C1057 + C74806 + C74806 + C153928 * C1069 + C74251 * C542 +
            C74807 + C74807 + C153932 * C566) *
               C74249) *
              C153626 * C2237 +
          ((C74251 * C543 + C74808 + C74808 + C153932 * C567 + C74253 * C1461 +
            C74809 + C74809 + C153928 * C1471 + C74255 * C3441 + C74810 +
            C74810 + C153918 * C3449 + C74257 * C4959 + C74811 + C74811 +
            C153860 * C4965) *
               C74249 +
           (C74852 + C74853 + C74854 + C74855) * C153464) *
              C153626 * C2238 -
          ((C74257 * C31999 + C77288 + C77288 + C153860 * C32001 +
            C74255 * C6303 + C77289 + C77289 + C153918 * C6315 +
            C74253 * C6304 + C77290 + C77290 + C153928 * C6316 +
            C74251 * C2243 + C77291 + C77291 + C153932 * C2253) *
               C153464 +
           (C74257 * C30191 + C77292 + C77292 + C153860 * C30195 +
            C74255 * C6305 + C77293 + C77293 + C153918 * C6317 +
            C74253 * C6306 + C77294 + C77294 + C153928 * C6318 +
            C74251 * C2244 + C77295 + C77295 + C153932 * C2254) *
               C74249) *
              C153626 * C2239) *
         C153511 * C153492) /
            (p * q * std::sqrt(p + q));
    d2ee[73] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
             C70427 + C70427 + C153671 * C353) *
                C153931 +
            (C70480 + C70481) * C153924 + C70490 * C153905 + C70491 * C153852) *
               C153626 * C153910 -
           (C71444 * C153852 + C71445 * C153905 + (C71034 + C71035) * C153924 +
            (C70423 * C1057 + C70980 + C70980 + C153671 * C1069 +
             C70421 * C542 + C70981 + C70981 + C70415 * C566) *
                C153931) *
               C153626 * C153911 +
           ((C70421 * C543 + C70982 + C70982 + C70415 * C567 + C70423 * C1461 +
             C70983 + C70983 + C153671 * C1471) *
                C153931 +
            (C71036 + C71037) * C153924 + (C71038 + C71039) * C153905 +
            (C71040 + C71041) * C153852) *
               C153626 * C2546) *
              C153511 * C153829 +
          (((C71035 + C71034) * C153931 + (C71033 + C71032) * C153924 +
            (C71031 + C71030) * C153905 + (C71456 + C71457) * C153852) *
               C153626 * C153911 -
           (C70492 * C153852 + C70493 * C153905 + (C70483 + C70482) * C153924 +
            (C70481 + C70480) * C153931) *
               C153626 * C153910 -
           ((C70423 * C1457 + C71004 + C71004 + C153671 * C1467 +
             C70421 * C547 + C71005 + C71005 + C70415 * C571) *
                C153852 +
            (C71041 + C71040) * C153905 + (C71039 + C71038) * C153924 +
            (C71037 + C71036) * C153931) *
               C153626 * C2546) *
              C153511 * C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C74251 * C136 + C74260 + C74260 + C153932 * C152 + C74253 * C329 +
             C74261 + C74261 + C153928 * C353 + C74255 * C330 + C74262 +
             C74262 + C153918 * C354 + C74257 * C1319 + C74263 + C74263 +
             C153860 * C1329) *
                C74249 +
            (C74328 + C74329 + C74330 + C74331) * C153464) *
               C153626 * C153910 -
           ((C74848 + C74849 + C74850 + C74851) * C153464 +
            (C74257 * C4303 + C74804 + C74804 + C153860 * C4311 +
             C74255 * C1892 + C74805 + C74805 + C153918 * C1902 +
             C74253 * C1057 + C74806 + C74806 + C153928 * C1069 +
             C74251 * C542 + C74807 + C74807 + C153932 * C566) *
                C74249) *
               C153626 * C153911 +
           ((C74251 * C543 + C74808 + C74808 + C153932 * C567 + C74253 * C1461 +
             C74809 + C74809 + C153928 * C1471 + C74255 * C3441 + C74810 +
             C74810 + C153918 * C3449 + C74257 * C4959 + C74811 + C74811 +
             C153860 * C4965) *
                C74249 +
            (C74852 + C74853 + C74854 + C74855) * C153464) *
               C153626 * C2546) *
              C153511 * C153829 +
          (((C74851 + C74850 + C74849 + C74848) * C74249 +
            (C75288 + C75289 + C75290 + C75291) * C153464) *
               C153626 * C153911 -
           ((C74332 + C74333 + C74334 + C74335) * C153464 +
            (C74331 + C74330 + C74329 + C74328) * C74249) *
               C153626 * C153910 -
           ((C74257 * C4957 + C74828 + C74828 + C153860 * C4963 +
             C74255 * C3443 + C74829 + C74829 + C153918 * C3451 +
             C74253 * C1459 + C74830 + C74830 + C153928 * C1469 +
             C74251 * C545 + C74831 + C74831 + C153932 * C569) *
                C153464 +
            (C74855 + C74854 + C74853 + C74852) * C74249) *
               C153626 * C2546) *
              C153511 * C153498)) /
            (p * q * std::sqrt(p + q));
    d2ee[74] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
             C70427 + C70427 + C153671 * C353) *
                C153931 +
            (C70480 + C70481) * C153924 + C70490 * C153905 + C70491 * C153852) *
               C153626 * C2030 -
           (C71444 * C153852 + C71445 * C153905 + (C71034 + C71035) * C153924 +
            (C70423 * C1057 + C70980 + C70980 + C153671 * C1069 +
             C70421 * C542 + C70981 + C70981 + C70415 * C566) *
                C153931) *
               C153626 * C153591) *
              C153511 * C1225 +
          (((C71035 + C71034) * C153931 + (C71033 + C71032) * C153924 +
            (C71031 + C71030) * C153905 + (C71456 + C71457) * C153852) *
               C153626 * C153591 -
           (C70492 * C153852 + C70493 * C153905 + (C70483 + C70482) * C153924 +
            (C70481 + C70480) * C153931) *
               C153626 * C2030) *
              C153511 * C1226 +
          ((C70490 * C153931 + C70491 * C153924 + (C70487 + C70486) * C153905 +
            (C70488 + C70489) * C153852) *
               C153626 * C2030 -
           ((C70423 * C1062 + C71450 + C71450 + C153671 * C1074 +
             C70421 * C548 + C71451 + C71451 + C70415 * C572) *
                C153852 +
            (C71457 + C71456) * C153905 + C71444 * C153924 + C71445 * C153931) *
               C153626 * C153591) *
              C153511 * C1227)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
             C70427 + C70427 + C153671 * C353) *
                C153931 +
            (C70480 + C70481) * C153924 + C70490 * C153905 + C70491 * C153852) *
               C153626 * C2030 -
           (C71444 * C153852 + C71445 * C153905 + (C71034 + C71035) * C153924 +
            (C70423 * C1057 + C70980 + C70980 + C153671 * C1069 +
             C70421 * C542 + C70981 + C70981 + C70415 * C566) *
                C153931) *
               C153626 * C153591) *
              C320 +
          (((C70421 * C1057 + C71716 + C71716 + C70415 * C1069 +
             C70423 * C1892 + C71717 + C71717 + C153671 * C1902) *
                C153931 +
            (C71750 + C71751) * C153924 + (C71752 + C71753) * C153905 +
            (C71754 + C71755) * C153852) *
               C153626 * C153591 -
           (C71236 * C153852 + C71237 * C153905 + (C70760 + C70761) * C153924 +
            (C70423 * C330 + C70706 + C70706 + C153671 * C354 + C70421 * C329 +
             C70707 + C70707 + C70415 * C353) *
                C153931) *
               C153626 * C2030) *
              C321 +
          (((C70421 * C330 + C70708 + C70708 + C70415 * C354 + C70423 * C1319 +
             C70709 + C70709 + C153671 * C1329) *
                C153931 +
            (C70762 + C70763) * C153924 + (C70764 + C70765) * C153905 +
            (C70766 + C70767) * C153852) *
               C153626 * C2030 -
           ((C70423 * C4306 + C72936 + C72936 + C153671 * C4314 +
             C70421 * C1889 + C72937 + C72937 + C70415 * C1899) *
                C153852 +
            (C70423 * C4305 + C72938 + C72938 + C153671 * C4313 +
             C70421 * C1890 + C72939 + C72939 + C70415 * C1900) *
                C153905 +
            (C70423 * C4304 + C72940 + C72940 + C153671 * C4312 +
             C70421 * C1891 + C72941 + C72941 + C70415 * C1901) *
                C153924 +
            (C70423 * C4303 + C72942 + C72942 + C153671 * C4311 +
             C70421 * C1892 + C72943 + C72943 + C70415 * C1902) *
                C153931) *
               C153626 * C153591) *
              C322) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C74251 * C136 + C74260 + C74260 + C153932 * C152 + C74253 * C329 +
             C74261 + C74261 + C153928 * C353 + C74255 * C330 + C74262 +
             C74262 + C153918 * C354 + C74257 * C1319 + C74263 + C74263 +
             C153860 * C1329) *
                C74249 +
            (C74328 + C74329 + C74330 + C74331) * C153464) *
               C153626 * C2030 -
           ((C74848 + C74849 + C74850 + C74851) * C153464 +
            (C74257 * C4303 + C74804 + C74804 + C153860 * C4311 +
             C74255 * C1892 + C74805 + C74805 + C153918 * C1902 +
             C74253 * C1057 + C74806 + C74806 + C153928 * C1069 +
             C74251 * C542 + C74807 + C74807 + C153932 * C566) *
                C74249) *
               C153626 * C153591) *
              C153511 * C1225 +
          (((C74851 + C74850 + C74849 + C74848) * C74249 +
            (C75288 + C75289 + C75290 + C75291) * C153464) *
               C153626 * C153591 -
           ((C74332 + C74333 + C74334 + C74335) * C153464 +
            (C74331 + C74330 + C74329 + C74328) * C74249) *
               C153626 * C2030) *
              C153511 * C1226 +
          (((C74335 + C74334 + C74333 + C74332) * C74249 +
            (C74336 + C74337 + C74338 + C74339) * C153464) *
               C153626 * C2030 -
           ((C74257 * C4306 + C75276 + C75276 + C153860 * C4314 +
             C74255 * C1889 + C75277 + C75277 + C153918 * C1899 +
             C74253 * C1060 + C75278 + C75278 + C153928 * C1072 +
             C74251 * C539 + C75279 + C75279 + C153932 * C563) *
                C153464 +
            (C75291 + C75290 + C75289 + C75288) * C74249) *
               C153626 * C153591) *
              C153511 * C1227)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C74251 * C136 + C74260 + C74260 + C153932 * C152 + C74253 * C329 +
             C74261 + C74261 + C153928 * C353 + C74255 * C330 + C74262 +
             C74262 + C153918 * C354 + C74257 * C1319 + C74263 + C74263 +
             C153860 * C1329) *
                C74249 +
            (C74328 + C74329 + C74330 + C74331) * C153464) *
               C153626 * C2030 -
           ((C74848 + C74849 + C74850 + C74851) * C153464 +
            (C74257 * C4303 + C74804 + C74804 + C153860 * C4311 +
             C74255 * C1892 + C74805 + C74805 + C153918 * C1902 +
             C74253 * C1057 + C74806 + C74806 + C153928 * C1069 +
             C74251 * C542 + C74807 + C74807 + C153932 * C566) *
                C74249) *
               C153626 * C153591) *
              C320 +
          (((C74251 * C1057 + C75550 + C75550 + C153932 * C1069 +
             C74253 * C1892 + C75551 + C75551 + C153928 * C1902 +
             C74255 * C4303 + C75552 + C75552 + C153918 * C4311 +
             C74257 * C5703 + C75553 + C75553 + C153860 * C5709) *
                C74249 +
            (C75578 + C75579 + C75580 + C75581) * C153464) *
               C153626 * C153591 -
           ((C74590 + C74591 + C74592 + C74593) * C153464 +
            (C74257 * C3127 + C74546 + C74546 + C153860 * C3135 +
             C74255 * C1319 + C74547 + C74547 + C153918 * C1329 +
             C74253 * C330 + C74548 + C74548 + C153928 * C354 + C74251 * C329 +
             C74549 + C74549 + C153932 * C353) *
                C74249) *
               C153626 * C2030) *
              C321 +
          (((C74251 * C330 + C74550 + C74550 + C153932 * C354 + C74253 * C1319 +
             C74551 + C74551 + C153928 * C1329 + C74255 * C3127 + C74552 +
             C74552 + C153918 * C3135 + C74257 * C4723 + C74553 + C74553 +
             C153860 * C4729) *
                C74249 +
            (C74594 + C74595 + C74596 + C74597) * C153464) *
               C153626 * C2030 -
           ((C74257 * C29093 + C76762 + C76762 + C153860 * C29097 +
             C74255 * C5702 + C76763 + C76763 + C153918 * C5708 +
             C74253 * C4304 + C76764 + C76764 + C153928 * C4312 +
             C74251 * C1891 + C76765 + C76765 + C153932 * C1901) *
                C153464 +
            (C74257 * C29092 + C76766 + C76766 + C153860 * C29096 +
             C74255 * C5703 + C76767 + C76767 + C153918 * C5709 +
             C74253 * C4303 + C76768 + C76768 + C153928 * C4311 +
             C74251 * C1892 + C76769 + C76769 + C153932 * C1902) *
                C74249) *
               C153626 * C153591) *
              C322) *
         C153492) /
            (p * q * std::sqrt(p + q));
    d2ee[75] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C152071 * C136 + C83556 + C83556 + C153667 * C152 +
              C152059 * C329 + C83557 + C83557 + C153674 * C353 +
              C83553 * C330 + C83558 + C83558 + C83545 * C354) *
                 C153818 +
             (C83622 + C83623 + C83624) * C153464) *
                C98459 +
            ((C93770 + C93771 + C93772) * C153818 + C93751 * C153464) *
                C153713) *
               C153527 * C153837 -
           ((C94768 * C153464 + (C94777 + C94776 + C94775) * C153818) *
                C153713 +
            ((C83931 + C83932 + C83933) * C153464 +
             (C83553 * C1319 + C83874 + C83874 + C83545 * C1329 +
              C152059 * C330 + C83875 + C83875 + C153674 * C354 +
              C152071 * C329 + C83876 + C83876 + C153667 * C353) *
                 C153818) *
                C98459) *
               C153527 * C153563) *
              C153906 +
          ((((C83933 + C83932 + C83931) * C153818 +
             (C83930 + C83929 + C83928) * C153464) *
                C98459 +
            (C94764 * C153818 + (C85047 + C85048 + C85049) * C153464) *
                C153713) *
               C153527 * C153563 -
           ((C84708 * C153464 + C93756 * C153818) * C153713 +
            ((C83627 + C83626 + C83625) * C153464 +
             (C83624 + C83623 + C83622) * C153818) *
                C98459) *
               C153527 * C153837) *
              C153907 +
          (((C83636 * C153818 + (C83630 + C83629 + C83628) * C153464) * C98459 +
            (C94360 * C153818 + (C84715 + C84716 + C84717) * C153464) *
                C153713) *
               C153527 * C153837 -
           (((C83553 * C4306 + C85029 + C85029 + C83545 * C4314 +
              C152059 * C1889 + C85030 + C85030 + C153674 * C1899 +
              C152071 * C1060 + C85031 + C85031 + C153667 * C1072) *
                 C153464 +
             (C85049 + C85048 + C85047) * C153818) *
                C153713 +
            ((C84479 + C84478 + C84477) * C153464 + C84470 * C153818) *
                C98459) *
               C153527 * C153563) *
              C752)) /
        (p * q * std::sqrt(p + q));
    d2ee[76] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 ((((((C152071 * C136 + C83556 + C83556 + C153667 * C152 +
                       C152059 * C329 + C83557 + C83557 + C153674 * C353 +
                       C83553 * C330 + C83558 + C83558 + C83545 * C354) *
                          C153818 +
                      (C83622 + C83623 + C83624) * C153464) *
                         C98459 +
                     ((C93770 + C93771 + C93772) * C153818 + C93751 * C153464) *
                         C153713) *
                        C153838 -
                    ((C93752 * C153464 + (C93773 + C93774 + C93775) * C153818) *
                         C153713 +
                     (C93756 * C153464 + (C93772 + C93771 + C93770) * C153818) *
                         C98459) *
                        C153591) *
                       C153837 +
                   ((((C94775 + C94776 + C94777) * C153818 + C94764 * C153464) *
                         C98459 +
                     ((C95579 + C95580 + C95581) * C153818 +
                      (C94778 + C94779 + C94780) * C153464) *
                         C153713) *
                        C153591 -
                    ((C94768 * C153464 + (C94777 + C94776 + C94775) * C153818) *
                         C153713 +
                     ((C83931 + C83932 + C83933) * C153464 +
                      (C83553 * C1319 + C83874 + C83874 + C83545 * C1329 +
                       C152059 * C330 + C83875 + C83875 + C153674 * C354 +
                       C152071 * C329 + C83876 + C83876 + C153667 * C353) *
                          C153818) *
                         C98459) *
                        C153838) *
                       C153563) *
                      C323 +
                  ((((C93751 * C153818 + C94360 * C153464) * C98459 +
                     (C93757 * C153818 + (C84239 + C84240 + C84241) * C153464) *
                         C153713) *
                        C153591 -
                    ((C84708 * C153464 + C93756 * C153818) * C153713 +
                     ((C83627 + C83626 + C83625) * C153464 +
                      (C83624 + C83623 + C83622) * C153818) *
                         C98459) *
                        C153838) *
                       C153837 +
                   ((((C83933 + C83932 + C83931) * C153818 +
                      (C83930 + C83929 + C83928) * C153464) *
                         C98459 +
                     (C94764 * C153818 + (C85047 + C85048 + C85049) * C153464) *
                         C153713) *
                        C153838 -
                    (((C83553 * C4957 + C85641 + C85641 + C83545 * C4963 +
                       C152059 * C3443 + C85642 + C85642 + C153674 * C3451 +
                       C152071 * C1459 + C85643 + C85643 + C153667 * C1469) *
                          C153464 +
                      (C94780 + C94779 + C94778) * C153818) *
                         C153713 +
                     ((C85049 + C85048 + C85047) * C153464 + C94768 * C153818) *
                         C98459) *
                        C153591) *
                       C153563) *
                      C153498)) /
                (p * q * std::sqrt(p + q));
    d2ee[77] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C152071 * C136 + C83556 + C83556 + C153667 * C152 +
              C152059 * C329 + C83557 + C83557 + C153674 * C353 +
              C83553 * C330 + C83558 + C83558 + C83545 * C354) *
                 C153818 +
             (C83622 + C83623 + C83624) * C153464) *
                C98459 +
            ((C93770 + C93771 + C93772) * C153818 + C93751 * C153464) *
                C153713) *
               C153527 * C320 -
           ((C94768 * C153464 + (C94777 + C94776 + C94775) * C153818) *
                C153713 +
            ((C83931 + C83932 + C83933) * C153464 +
             (C83553 * C1319 + C83874 + C83874 + C83545 * C1329 +
              C152059 * C330 + C83875 + C83875 + C153674 * C354 +
              C152071 * C329 + C83876 + C83876 + C153667 * C353) *
                 C153818) *
                C98459) *
               C153527 * C321 +
           (((C152071 * C330 + C83877 + C83877 + C153667 * C354 +
              C152059 * C1319 + C83878 + C83878 + C153674 * C1329 +
              C83553 * C3127 + C83879 + C83879 + C83545 * C3135) *
                 C153818 +
             (C83934 + C83935 + C83936) * C153464) *
                C98459 +
            ((C96566 + C96567 + C96568) * C153818 +
             (C93433 + C93434 + C93435) * C153464) *
                C153713) *
               C153527 * C322) *
              C323 +
          ((((C83933 + C83932 + C83931) * C153818 +
             (C83930 + C83929 + C83928) * C153464) *
                C98459 +
            (C94764 * C153818 + (C85047 + C85048 + C85049) * C153464) *
                C153713) *
               C153527 * C321 -
           ((C84708 * C153464 + C93756 * C153818) * C153713 +
            ((C83627 + C83626 + C83625) * C153464 +
             (C83624 + C83623 + C83622) * C153818) *
                C98459) *
               C153527 * C320 -
           (((C83553 * C5701 + C86376 + C86376 + C83545 * C5707 +
              C152059 * C4305 + C86377 + C86377 + C153674 * C4313 +
              C152071 * C1890 + C86378 + C86378 + C153667 * C1900) *
                 C153464 +
             (C93435 + C93434 + C93433) * C153818) *
                C153713 +
            ((C83939 + C83938 + C83937) * C153464 +
             (C83936 + C83935 + C83934) * C153818) *
                C98459) *
               C153527 * C322) *
              C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C152071 * C136 + C83556 + C83556 + C153667 * C152 +
             C152059 * C329 + C83557 + C83557 + C153674 * C353 + C83553 * C330 +
             C83558 + C83558 + C83545 * C354) *
                C153818 +
            (C83622 + C83623 + C83624) * C153464) *
               C98459 +
           ((C93770 + C93771 + C93772) * C153818 + C93751 * C153464) *
               C153713) *
              C153527 * C153511 * C130 -
          ((C84708 * C153464 + C93756 * C153818) * C153713 +
           ((C83627 + C83626 + C83625) * C153464 +
            (C83624 + C83623 + C83622) * C153818) *
               C98459) *
              C153527 * C153511 * C131 +
          ((C83636 * C153818 + (C83630 + C83629 + C83628) * C153464) * C98459 +
           (C94360 * C153818 + (C84715 + C84716 + C84717) * C153464) *
               C153713) *
              C153527 * C153511 * C132 -
          (((C83553 * C1888 + C84705 + C84705 + C83545 * C1898 +
             C152059 * C1061 + C84706 + C84706 + C153674 * C1073 +
             C152071 * C538 + C84707 + C84707 + C153667 * C562) *
                C153464 +
            (C84717 + C84716 + C84715) * C153818) *
               C153713 +
           ((C83633 + C83632 + C83631) * C153464 + C83637 * C153818) * C98459) *
              C153527 * C153511 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C152071 * C136 + C83556 + C83556 + C153667 * C152 +
              C152059 * C329 + C83557 + C83557 + C153674 * C353 +
              C83553 * C330 + C83558 + C83558 + C83545 * C354) *
                 C153818 +
             (C83622 + C83623 + C83624) * C153464) *
                C98459 +
            ((C93770 + C93771 + C93772) * C153818 + C93751 * C153464) *
                C153713) *
               C535 -
           ((C93752 * C153464 + (C93773 + C93774 + C93775) * C153818) *
                C153713 +
            (C93756 * C153464 + (C93772 + C93771 + C93770) * C153818) *
                C98459) *
               C536 +
           (((C93775 + C93774 + C93773) * C153818 + C93757 * C153464) * C98459 +
            ((C97361 + C97362 + C97363) * C153818 +
             (C93776 + C93777 + C93778) * C153464) *
                C153713) *
               C537) *
              C153511 * C323 +
          (((C93751 * C153818 + C94360 * C153464) * C98459 +
            (C93757 * C153818 + (C84239 + C84240 + C84241) * C153464) *
                C153713) *
               C536 -
           ((C84708 * C153464 + C93756 * C153818) * C153713 +
            ((C83627 + C83626 + C83625) * C153464 +
             (C83624 + C83623 + C83622) * C153818) *
                C98459) *
               C535 -
           (((C83553 * C6301 + C86967 + C86967 + C83545 * C6313 +
              C152059 * C6302 + C86968 + C86968 + C153674 * C6314 +
              C152071 * C2242 + C86969 + C86969 + C153667 * C2252) *
                 C153464 +
             (C93778 + C93777 + C93776) * C153818) *
                C153713 +
            ((C84241 + C84240 + C84239) * C153464 + C93752 * C153818) *
                C98459) *
               C537) *
              C153511 * C153498)) /
            (p * q * std::sqrt(p + q));
    d2ee[78] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C152071 * C136 + C83556 + C83556 + C153667 * C152 +
              C152059 * C329 + C83557 + C83557 + C153674 * C353 +
              C83553 * C330 + C83558 + C83558 + C83545 * C354) *
                 C153818 +
             (C83622 + C83623 + C83624) * C153464) *
                C98459 +
            ((C93770 + C93771 + C93772) * C153818 + C93751 * C153464) *
                C153713) *
               C153838 -
           ((C93752 * C153464 + (C93773 + C93774 + C93775) * C153818) *
                C153713 +
            (C93756 * C153464 + (C93772 + C93771 + C93770) * C153818) *
                C98459) *
               C153591) *
              C153511 * C153906 +
          (((C93751 * C153818 + C94360 * C153464) * C98459 +
            (C93757 * C153818 + (C84239 + C84240 + C84241) * C153464) *
                C153713) *
               C153591 -
           ((C84708 * C153464 + C93756 * C153818) * C153713 +
            ((C83627 + C83626 + C83625) * C153464 +
             (C83624 + C83623 + C83622) * C153818) *
                C98459) *
               C153838) *
              C153511 * C153907 +
          (((C83636 * C153818 + (C83630 + C83629 + C83628) * C153464) * C98459 +
            (C94360 * C153818 + (C84715 + C84716 + C84717) * C153464) *
                C153713) *
               C153838 -
           (((C83553 * C3444 + C84203 + C84203 + C83545 * C3452 +
              C152059 * C1458 + C84204 + C84204 + C153674 * C1468 +
              C152071 * C546 + C84205 + C84205 + C153667 * C570) *
                 C153464 +
             (C84241 + C84240 + C84239) * C153818) *
                C153713 +
            ((C84717 + C84716 + C84715) * C153464 + C84708 * C153818) *
                C98459) *
               C153591) *
              C153511 * C752)) /
        (p * q * std::sqrt(p + q));
    d2ee[79] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C152071 * C136 + C83556 + C83556 + C153667 * C152 +
             C152059 * C329 + C83557 + C83557 + C153674 * C353 + C83553 * C330 +
             C83558 + C83558 + C83545 * C354) *
                C153818 +
            (C83622 + C83623 + C83624) * C153464) *
               C98459 +
           ((C93770 + C93771 + C93772) * C153818 + C93751 * C153464) *
               C153713) *
              C153527 * C153511 * C130 -
          ((C84708 * C153464 + C93756 * C153818) * C153713 +
           ((C83627 + C83626 + C83625) * C153464 +
            (C83624 + C83623 + C83622) * C153818) *
               C98459) *
              C153527 * C153511 * C131 +
          ((C83636 * C153818 + (C83630 + C83629 + C83628) * C153464) * C98459 +
           (C94360 * C153818 + (C84715 + C84716 + C84717) * C153464) *
               C153713) *
              C153527 * C153511 * C132 -
          (((C83553 * C1888 + C84705 + C84705 + C83545 * C1898 +
             C152059 * C1061 + C84706 + C84706 + C153674 * C1073 +
             C152071 * C538 + C84707 + C84707 + C153667 * C562) *
                C153464 +
            (C84717 + C84716 + C84715) * C153818) *
               C153713 +
           ((C83633 + C83632 + C83631) * C153464 + C83637 * C153818) * C98459) *
              C153527 * C153511 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C152071 * C136 + C83556 + C83556 + C153667 * C152 +
              C152059 * C329 + C83557 + C83557 + C153674 * C353 +
              C83553 * C330 + C83558 + C83558 + C83545 * C354) *
                 C153818 +
             (C83622 + C83623 + C83624) * C153464) *
                C98459 +
            ((C93770 + C93771 + C93772) * C153818 + C93751 * C153464) *
                C153713) *
               C153527 * C320 -
           ((C94768 * C153464 + (C94777 + C94776 + C94775) * C153818) *
                C153713 +
            ((C83931 + C83932 + C83933) * C153464 +
             (C83553 * C1319 + C83874 + C83874 + C83545 * C1329 +
              C152059 * C330 + C83875 + C83875 + C153674 * C354 +
              C152071 * C329 + C83876 + C83876 + C153667 * C353) *
                 C153818) *
                C98459) *
               C153527 * C321 +
           (((C152071 * C330 + C83877 + C83877 + C153667 * C354 +
              C152059 * C1319 + C83878 + C83878 + C153674 * C1329 +
              C83553 * C3127 + C83879 + C83879 + C83545 * C3135) *
                 C153818 +
             (C83934 + C83935 + C83936) * C153464) *
                C98459 +
            ((C96566 + C96567 + C96568) * C153818 +
             (C93433 + C93434 + C93435) * C153464) *
                C153713) *
               C153527 * C322) *
              C323 +
          ((((C83933 + C83932 + C83931) * C153818 +
             (C83930 + C83929 + C83928) * C153464) *
                C98459 +
            (C94764 * C153818 + (C85047 + C85048 + C85049) * C153464) *
                C153713) *
               C153527 * C321 -
           ((C84708 * C153464 + C93756 * C153818) * C153713 +
            ((C83627 + C83626 + C83625) * C153464 +
             (C83624 + C83623 + C83622) * C153818) *
                C98459) *
               C153527 * C320 -
           (((C83553 * C5701 + C86376 + C86376 + C83545 * C5707 +
              C152059 * C4305 + C86377 + C86377 + C153674 * C4313 +
              C152071 * C1890 + C86378 + C86378 + C153667 * C1900) *
                 C153464 +
             (C93435 + C93434 + C93433) * C153818) *
                C153713 +
            ((C83939 + C83938 + C83937) * C153464 +
             (C83936 + C83935 + C83934) * C153818) *
                C98459) *
               C153527 * C322) *
              C153498)) /
            (p * q * std::sqrt(p + q));
    d2ee[80] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 (((((C152071 * C136 + C83556 + C83556 + C153667 * C152 +
                      C152059 * C329 + C83557 + C83557 + C153674 * C353 +
                      C83553 * C330 + C83558 + C83558 + C83545 * C354) *
                         C153818 +
                     (C83622 + C83623 + C83624) * C153464) *
                        C98459 +
                    ((C93770 + C93771 + C93772) * C153818 + C93751 * C153464) *
                        C153713) *
                       C153527 * C153908 -
                   ((C94768 * C153464 + (C94777 + C94776 + C94775) * C153818) *
                        C153713 +
                    ((C83931 + C83932 + C83933) * C153464 +
                     (C83553 * C1319 + C83874 + C83874 + C83545 * C1329 +
                      C152059 * C330 + C83875 + C83875 + C153674 * C354 +
                      C152071 * C329 + C83876 + C83876 + C153667 * C353) *
                         C153818) *
                        C98459) *
                       C153527 * C153909 +
                   (((C152071 * C330 + C83877 + C83877 + C153667 * C354 +
                      C152059 * C1319 + C83878 + C83878 + C153674 * C1329 +
                      C83553 * C3127 + C83879 + C83879 + C83545 * C3135) *
                         C153818 +
                     (C83934 + C83935 + C83936) * C153464) *
                        C98459 +
                    ((C96566 + C96567 + C96568) * C153818 +
                     (C93433 + C93434 + C93435) * C153464) *
                        C153713) *
                       C153527 * C1601) *
                      C153829 +
                  ((((C83933 + C83932 + C83931) * C153818 +
                     (C83930 + C83929 + C83928) * C153464) *
                        C98459 +
                    (C94764 * C153818 + (C85047 + C85048 + C85049) * C153464) *
                        C153713) *
                       C153527 * C153909 -
                   ((C84708 * C153464 + C93756 * C153818) * C153713 +
                    ((C83627 + C83626 + C83625) * C153464 +
                     (C83624 + C83623 + C83622) * C153818) *
                        C98459) *
                       C153527 * C153908 -
                   (((C83553 * C5701 + C86376 + C86376 + C83545 * C5707 +
                      C152059 * C4305 + C86377 + C86377 + C153674 * C4313 +
                      C152071 * C1890 + C86378 + C86378 + C153667 * C1900) *
                         C153464 +
                     (C93435 + C93434 + C93433) * C153818) *
                        C153713 +
                    ((C83939 + C83938 + C83937) * C153464 +
                     (C83936 + C83935 + C83934) * C153818) *
                        C98459) *
                       C153527 * C1601) *
                      C153498)) /
                (p * q * std::sqrt(p + q));
    d2ee[81] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C152071 * C136 + C83556 + C83556 + C153667 * C152 +
              C152059 * C329 + C83557 + C83557 + C153674 * C353 +
              C83553 * C330 + C83558 + C83558 + C83545 * C354) *
                 C153818 +
             (C83622 + C83623 + C83624) * C153464) *
                C98459 +
            ((C93770 + C93771 + C93772) * C153818 + C93751 * C153464) *
                C153713) *
               C153838 -
           ((C93752 * C153464 + (C93773 + C93774 + C93775) * C153818) *
                C153713 +
            (C93756 * C153464 + (C93772 + C93771 + C93770) * C153818) *
                C98459) *
               C153591) *
              C153908 +
          ((((C94775 + C94776 + C94777) * C153818 + C94764 * C153464) * C98459 +
            ((C95579 + C95580 + C95581) * C153818 +
             (C94778 + C94779 + C94780) * C153464) *
                C153713) *
               C153591 -
           ((C94768 * C153464 + (C94777 + C94776 + C94775) * C153818) *
                C153713 +
            ((C83931 + C83932 + C83933) * C153464 +
             (C83553 * C1319 + C83874 + C83874 + C83545 * C1329 +
              C152059 * C330 + C83875 + C83875 + C153674 * C354 +
              C152071 * C329 + C83876 + C83876 + C153667 * C353) *
                 C153818) *
                C98459) *
               C153838) *
              C153909 +
          ((((C152071 * C330 + C83877 + C83877 + C153667 * C354 +
              C152059 * C1319 + C83878 + C83878 + C153674 * C1329 +
              C83553 * C3127 + C83879 + C83879 + C83545 * C3135) *
                 C153818 +
             (C83934 + C83935 + C83936) * C153464) *
                C98459 +
            ((C96566 + C96567 + C96568) * C153818 +
             (C93433 + C93434 + C93435) * C153464) *
                C153713) *
               C153838 -
           (((C83553 * C28651 + C96554 + C96554 + C83545 * C28655 +
              C152059 * C4958 + C96555 + C96555 + C153674 * C4964 +
              C152071 * C3442 + C96556 + C96556 + C153667 * C3450) *
                 C153464 +
             (C83553 * C28650 + C96557 + C96557 + C83545 * C28654 +
              C152059 * C4959 + C96558 + C96558 + C153674 * C4965 +
              C152071 * C3441 + C96559 + C96559 + C153667 * C3449) *
                 C153818) *
                C153713 +
            ((C93435 + C93434 + C93433) * C153464 +
             (C96568 + C96567 + C96566) * C153818) *
                C98459) *
               C153591) *
              C1601) *
         C153492) /
        (p * q * std::sqrt(p + q));
    d2ee[82] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C152071 * C136 + C83556 + C83556 + C153667 * C152 +
             C152059 * C329 + C83557 + C83557 + C153674 * C353 + C83553 * C330 +
             C83558 + C83558 + C83545 * C354) *
                C153818 +
            (C83622 + C83623 + C83624) * C153464) *
               C98459 +
           ((C93770 + C93771 + C93772) * C153818 + C93751 * C153464) *
               C153713) *
              C153527 * C1310 -
          ((C94768 * C153464 + (C94777 + C94776 + C94775) * C153818) * C153713 +
           ((C83931 + C83932 + C83933) * C153464 +
            (C83553 * C1319 + C83874 + C83874 + C83545 * C1329 +
             C152059 * C330 + C83875 + C83875 + C153674 * C354 +
             C152071 * C329 + C83876 + C83876 + C153667 * C353) *
                C153818) *
               C98459) *
              C153527 * C1311 +
          (((C152071 * C330 + C83877 + C83877 + C153667 * C354 +
             C152059 * C1319 + C83878 + C83878 + C153674 * C1329 +
             C83553 * C3127 + C83879 + C83879 + C83545 * C3135) *
                C153818 +
            (C83934 + C83935 + C83936) * C153464) *
               C98459 +
           ((C96566 + C96567 + C96568) * C153818 +
            (C93433 + C93434 + C93435) * C153464) *
               C153713) *
              C153527 * C1312 -
          (((C83553 * C29093 + C95265 + C95265 + C83545 * C29097 +
             C152059 * C5702 + C95266 + C95266 + C153674 * C5708 +
             C152071 * C4304 + C95267 + C95267 + C153667 * C4312) *
                C153464 +
            (C83553 * C29092 + C95268 + C95268 + C83545 * C29096 +
             C152059 * C5703 + C95269 + C95269 + C153674 * C5709 +
             C152071 * C4303 + C95270 + C95270 + C153667 * C4311) *
                C153818) *
               C153713 +
           ((C83553 * C4722 + C85417 + C85417 + C83545 * C4728 +
             C152059 * C3128 + C85418 + C85418 + C153674 * C3136 +
             C152071 * C1318 + C85419 + C85419 + C153667 * C1328) *
                C153464 +
            (C83553 * C4723 + C85420 + C85420 + C83545 * C4729 +
             C152059 * C3127 + C85421 + C85421 + C153674 * C3135 +
             C152071 * C1319 + C85422 + C85422 + C153667 * C1329) *
                C153818) *
               C98459) *
              C153527 * C1313) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C152071 * C136 + C83556 + C83556 + C153667 * C152 +
              C152059 * C329 + C83557 + C83557 + C153674 * C353 +
              C83553 * C330 + C83558 + C83558 + C83545 * C354) *
                 C153818 +
             (C83622 + C83623 + C83624) * C153464) *
                C98459 +
            ((C93770 + C93771 + C93772) * C153818 + C93751 * C153464) *
                C153713) *
               C153527 * C1223 -
           ((C94768 * C153464 + (C94777 + C94776 + C94775) * C153818) *
                C153713 +
            ((C83931 + C83932 + C83933) * C153464 +
             (C83553 * C1319 + C83874 + C83874 + C83545 * C1329 +
              C152059 * C330 + C83875 + C83875 + C153674 * C354 +
              C152071 * C329 + C83876 + C83876 + C153667 * C353) *
                 C153818) *
                C98459) *
               C153527 * C153563) *
              C1225 +
          ((((C83933 + C83932 + C83931) * C153818 +
             (C83930 + C83929 + C83928) * C153464) *
                C98459 +
            (C94764 * C153818 + (C85047 + C85048 + C85049) * C153464) *
                C153713) *
               C153527 * C153563 -
           ((C84708 * C153464 + C93756 * C153818) * C153713 +
            ((C83627 + C83626 + C83625) * C153464 +
             (C83624 + C83623 + C83622) * C153818) *
                C98459) *
               C153527 * C1223) *
              C1226 +
          (((C83636 * C153818 + (C83630 + C83629 + C83628) * C153464) * C98459 +
            (C94360 * C153818 + (C84715 + C84716 + C84717) * C153464) *
                C153713) *
               C153527 * C1223 -
           (((C83553 * C4306 + C85029 + C85029 + C83545 * C4314 +
              C152059 * C1889 + C85030 + C85030 + C153674 * C1899 +
              C152071 * C1060 + C85031 + C85031 + C153667 * C1072) *
                 C153464 +
             (C85049 + C85048 + C85047) * C153818) *
                C153713 +
            ((C84479 + C84478 + C84477) * C153464 + C84470 * C153818) *
                C98459) *
               C153527 * C153563) *
              C1227)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C152071 * C136 + C83556 + C83556 + C153667 * C152 +
              C152059 * C329 + C83557 + C83557 + C153674 * C353 +
              C83553 * C330 + C83558 + C83558 + C83545 * C354) *
                 C153818 +
             (C83622 + C83623 + C83624) * C153464) *
                C98459 +
            ((C93770 + C93771 + C93772) * C153818 + C93751 * C153464) *
                C153713) *
               C535 -
           ((C93752 * C153464 + (C93773 + C93774 + C93775) * C153818) *
                C153713 +
            (C93756 * C153464 + (C93772 + C93771 + C93770) * C153818) *
                C98459) *
               C536 +
           (((C93775 + C93774 + C93773) * C153818 + C93757 * C153464) * C98459 +
            ((C97361 + C97362 + C97363) * C153818 +
             (C93776 + C93777 + C93778) * C153464) *
                C153713) *
               C537) *
              C1223 +
          ((((C94775 + C94776 + C94777) * C153818 + C94764 * C153464) * C98459 +
            ((C95579 + C95580 + C95581) * C153818 +
             (C94778 + C94779 + C94780) * C153464) *
                C153713) *
               C536 -
           ((C94768 * C153464 + (C94777 + C94776 + C94775) * C153818) *
                C153713 +
            ((C83931 + C83932 + C83933) * C153464 +
             (C83553 * C1319 + C83874 + C83874 + C83545 * C1329 +
              C152059 * C330 + C83875 + C83875 + C153674 * C354 +
              C152071 * C329 + C83876 + C83876 + C153667 * C353) *
                 C153818) *
                C98459) *
               C535 -
           (((C83553 * C31999 + C95567 + C95567 + C83545 * C32001 +
              C152059 * C6303 + C95568 + C95568 + C153674 * C6315 +
              C152071 * C6304 + C95569 + C95569 + C153667 * C6316) *
                 C153464 +
             (C83553 * C30191 + C95570 + C95570 + C83545 * C30195 +
              C152059 * C6305 + C95571 + C95571 + C153674 * C6317 +
              C152071 * C6306 + C95572 + C95572 + C153667 * C6318) *
                 C153818) *
                C153713 +
            ((C94780 + C94779 + C94778) * C153464 +
             (C95581 + C95580 + C95579) * C153818) *
                C98459) *
               C537) *
              C153563) *
         C153492) /
            (p * q * std::sqrt(p + q));
    d2ee[83] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 ((((((C152071 * C136 + C83556 + C83556 + C153667 * C152 +
                       C152059 * C329 + C83557 + C83557 + C153674 * C353 +
                       C83553 * C330 + C83558 + C83558 + C83545 * C354) *
                          C153818 +
                      (C83622 + C83623 + C83624) * C153464) *
                         C98459 +
                     ((C93770 + C93771 + C93772) * C153818 + C93751 * C153464) *
                         C153713) *
                        C153838 -
                    ((C93752 * C153464 + (C93773 + C93774 + C93775) * C153818) *
                         C153713 +
                     (C93756 * C153464 + (C93772 + C93771 + C93770) * C153818) *
                         C98459) *
                        C153591) *
                       C1223 +
                   ((((C94775 + C94776 + C94777) * C153818 + C94764 * C153464) *
                         C98459 +
                     ((C95579 + C95580 + C95581) * C153818 +
                      (C94778 + C94779 + C94780) * C153464) *
                         C153713) *
                        C153591 -
                    ((C94768 * C153464 + (C94777 + C94776 + C94775) * C153818) *
                         C153713 +
                     ((C83931 + C83932 + C83933) * C153464 +
                      (C83553 * C1319 + C83874 + C83874 + C83545 * C1329 +
                       C152059 * C330 + C83875 + C83875 + C153674 * C354 +
                       C152071 * C329 + C83876 + C83876 + C153667 * C353) *
                          C153818) *
                         C98459) *
                        C153838) *
                       C153563) *
                      C153829 +
                  ((((C93751 * C153818 + C94360 * C153464) * C98459 +
                     (C93757 * C153818 + (C84239 + C84240 + C84241) * C153464) *
                         C153713) *
                        C153591 -
                    ((C84708 * C153464 + C93756 * C153818) * C153713 +
                     ((C83627 + C83626 + C83625) * C153464 +
                      (C83624 + C83623 + C83622) * C153818) *
                         C98459) *
                        C153838) *
                       C1223 +
                   ((((C83933 + C83932 + C83931) * C153818 +
                      (C83930 + C83929 + C83928) * C153464) *
                         C98459 +
                     (C94764 * C153818 + (C85047 + C85048 + C85049) * C153464) *
                         C153713) *
                        C153838 -
                    (((C83553 * C4957 + C85641 + C85641 + C83545 * C4963 +
                       C152059 * C3443 + C85642 + C85642 + C153674 * C3451 +
                       C152071 * C1459 + C85643 + C85643 + C153667 * C1469) *
                          C153464 +
                      (C94780 + C94779 + C94778) * C153818) *
                         C153713 +
                     ((C85049 + C85048 + C85047) * C153464 + C94768 * C153818) *
                         C98459) *
                        C153591) *
                       C153563) *
                      C153498)) /
                (p * q * std::sqrt(p + q));
    d2ee[84] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C152071 * C136 + C83556 + C83556 + C153667 * C152 +
              C152059 * C329 + C83557 + C83557 + C153674 * C353 +
              C83553 * C330 + C83558 + C83558 + C83545 * C354) *
                 C153818 +
             (C83622 + C83623 + C83624) * C153464) *
                C98459 +
            ((C93770 + C93771 + C93772) * C153818 + C93751 * C153464) *
                C153713) *
               C153527 * C1223 -
           ((C94768 * C153464 + (C94777 + C94776 + C94775) * C153818) *
                C153713 +
            ((C83931 + C83932 + C83933) * C153464 +
             (C83553 * C1319 + C83874 + C83874 + C83545 * C1329 +
              C152059 * C330 + C83875 + C83875 + C153674 * C354 +
              C152071 * C329 + C83876 + C83876 + C153667 * C353) *
                 C153818) *
                C98459) *
               C153527 * C153563) *
              C1225 +
          ((((C83933 + C83932 + C83931) * C153818 +
             (C83930 + C83929 + C83928) * C153464) *
                C98459 +
            (C94764 * C153818 + (C85047 + C85048 + C85049) * C153464) *
                C153713) *
               C153527 * C153563 -
           ((C84708 * C153464 + C93756 * C153818) * C153713 +
            ((C83627 + C83626 + C83625) * C153464 +
             (C83624 + C83623 + C83622) * C153818) *
                C98459) *
               C153527 * C1223) *
              C1226 +
          (((C83636 * C153818 + (C83630 + C83629 + C83628) * C153464) * C98459 +
            (C94360 * C153818 + (C84715 + C84716 + C84717) * C153464) *
                C153713) *
               C153527 * C1223 -
           (((C83553 * C4306 + C85029 + C85029 + C83545 * C4314 +
              C152059 * C1889 + C85030 + C85030 + C153674 * C1899 +
              C152071 * C1060 + C85031 + C85031 + C153667 * C1072) *
                 C153464 +
             (C85049 + C85048 + C85047) * C153818) *
                C153713 +
            ((C84479 + C84478 + C84477) * C153464 + C84470 * C153818) *
                C98459) *
               C153527 * C153563) *
              C1227)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C152071 * C136 + C83556 + C83556 + C153667 * C152 +
             C152059 * C329 + C83557 + C83557 + C153674 * C353 + C83553 * C330 +
             C83558 + C83558 + C83545 * C354) *
                C153818 +
            (C83622 + C83623 + C83624) * C153464) *
               C98459 +
           ((C93770 + C93771 + C93772) * C153818 + C93751 * C153464) *
               C153713) *
              C153527 * C1310 -
          ((C94768 * C153464 + (C94777 + C94776 + C94775) * C153818) * C153713 +
           ((C83931 + C83932 + C83933) * C153464 +
            (C83553 * C1319 + C83874 + C83874 + C83545 * C1329 +
             C152059 * C330 + C83875 + C83875 + C153674 * C354 +
             C152071 * C329 + C83876 + C83876 + C153667 * C353) *
                C153818) *
               C98459) *
              C153527 * C1311 +
          (((C152071 * C330 + C83877 + C83877 + C153667 * C354 +
             C152059 * C1319 + C83878 + C83878 + C153674 * C1329 +
             C83553 * C3127 + C83879 + C83879 + C83545 * C3135) *
                C153818 +
            (C83934 + C83935 + C83936) * C153464) *
               C98459 +
           ((C96566 + C96567 + C96568) * C153818 +
            (C93433 + C93434 + C93435) * C153464) *
               C153713) *
              C153527 * C1312 -
          (((C83553 * C29093 + C95265 + C95265 + C83545 * C29097 +
             C152059 * C5702 + C95266 + C95266 + C153674 * C5708 +
             C152071 * C4304 + C95267 + C95267 + C153667 * C4312) *
                C153464 +
            (C83553 * C29092 + C95268 + C95268 + C83545 * C29096 +
             C152059 * C5703 + C95269 + C95269 + C153674 * C5709 +
             C152071 * C4303 + C95270 + C95270 + C153667 * C4311) *
                C153818) *
               C153713 +
           ((C83553 * C4722 + C85417 + C85417 + C83545 * C4728 +
             C152059 * C3128 + C85418 + C85418 + C153674 * C3136 +
             C152071 * C1318 + C85419 + C85419 + C153667 * C1328) *
                C153464 +
            (C83553 * C4723 + C85420 + C85420 + C83545 * C4729 +
             C152059 * C3127 + C85421 + C85421 + C153674 * C3135 +
             C152071 * C1319 + C85422 + C85422 + C153667 * C1329) *
                C153818) *
               C98459) *
              C153527 * C1313) *
         C153492) /
            (p * q * std::sqrt(p + q));
    d2ee[85] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 ((((((C152071 * C136 + C83556 + C83556 + C153667 * C152 +
                       C152059 * C329 + C83557 + C83557 + C153674 * C353 +
                       C83553 * C330 + C83558 + C83558 + C83545 * C354) *
                          C153818 +
                      (C83622 + C83623 + C83624) * C153464) *
                         C98459 +
                     ((C93770 + C93771 + C93772) * C153818 + C93751 * C153464) *
                         C153713) *
                        C2030 -
                    ((C93752 * C153464 + (C93773 + C93774 + C93775) * C153818) *
                         C153713 +
                     (C93756 * C153464 + (C93772 + C93771 + C93770) * C153818) *
                         C98459) *
                        C153591) *
                       C153837 +
                   ((((C94775 + C94776 + C94777) * C153818 + C94764 * C153464) *
                         C98459 +
                     ((C95579 + C95580 + C95581) * C153818 +
                      (C94778 + C94779 + C94780) * C153464) *
                         C153713) *
                        C153591 -
                    ((C94768 * C153464 + (C94777 + C94776 + C94775) * C153818) *
                         C153713 +
                     ((C83931 + C83932 + C83933) * C153464 +
                      (C83553 * C1319 + C83874 + C83874 + C83545 * C1329 +
                       C152059 * C330 + C83875 + C83875 + C153674 * C354 +
                       C152071 * C329 + C83876 + C83876 + C153667 * C353) *
                          C153818) *
                         C98459) *
                        C2030) *
                       C153563) *
                      C153829 +
                  ((((C93751 * C153818 + C94360 * C153464) * C98459 +
                     (C93757 * C153818 + (C84239 + C84240 + C84241) * C153464) *
                         C153713) *
                        C153591 -
                    ((C84708 * C153464 + C93756 * C153818) * C153713 +
                     ((C83627 + C83626 + C83625) * C153464 +
                      (C83624 + C83623 + C83622) * C153818) *
                         C98459) *
                        C2030) *
                       C153837 +
                   ((((C83933 + C83932 + C83931) * C153818 +
                      (C83930 + C83929 + C83928) * C153464) *
                         C98459 +
                     (C94764 * C153818 + (C85047 + C85048 + C85049) * C153464) *
                         C153713) *
                        C2030 -
                    (((C83553 * C4957 + C85641 + C85641 + C83545 * C4963 +
                       C152059 * C3443 + C85642 + C85642 + C153674 * C3451 +
                       C152071 * C1459 + C85643 + C85643 + C153667 * C1469) *
                          C153464 +
                      (C94780 + C94779 + C94778) * C153818) *
                         C153713 +
                     ((C85049 + C85048 + C85047) * C153464 + C94768 * C153818) *
                         C98459) *
                        C153591) *
                       C153563) *
                      C153498)) /
                (p * q * std::sqrt(p + q));
    d2ee[86] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C152071 * C136 + C83556 + C83556 + C153667 * C152 +
              C152059 * C329 + C83557 + C83557 + C153674 * C353 +
              C83553 * C330 + C83558 + C83558 + C83545 * C354) *
                 C153818 +
             (C83622 + C83623 + C83624) * C153464) *
                C98459 +
            ((C93770 + C93771 + C93772) * C153818 + C93751 * C153464) *
                C153713) *
               C153910 -
           ((C93752 * C153464 + (C93773 + C93774 + C93775) * C153818) *
                C153713 +
            (C93756 * C153464 + (C93772 + C93771 + C93770) * C153818) *
                C98459) *
               C153911 +
           (((C93775 + C93774 + C93773) * C153818 + C93757 * C153464) * C98459 +
            ((C97361 + C97362 + C97363) * C153818 +
             (C93776 + C93777 + C93778) * C153464) *
                C153713) *
               C2546) *
              C153837 +
          ((((C94775 + C94776 + C94777) * C153818 + C94764 * C153464) * C98459 +
            ((C95579 + C95580 + C95581) * C153818 +
             (C94778 + C94779 + C94780) * C153464) *
                C153713) *
               C153911 -
           ((C94768 * C153464 + (C94777 + C94776 + C94775) * C153818) *
                C153713 +
            ((C83931 + C83932 + C83933) * C153464 +
             (C83553 * C1319 + C83874 + C83874 + C83545 * C1329 +
              C152059 * C330 + C83875 + C83875 + C153674 * C354 +
              C152071 * C329 + C83876 + C83876 + C153667 * C353) *
                 C153818) *
                C98459) *
               C153910 -
           (((C83553 * C31999 + C95567 + C95567 + C83545 * C32001 +
              C152059 * C6303 + C95568 + C95568 + C153674 * C6315 +
              C152071 * C6304 + C95569 + C95569 + C153667 * C6316) *
                 C153464 +
             (C83553 * C30191 + C95570 + C95570 + C83545 * C30195 +
              C152059 * C6305 + C95571 + C95571 + C153674 * C6317 +
              C152071 * C6306 + C95572 + C95572 + C153667 * C6318) *
                 C153818) *
                C153713 +
            ((C94780 + C94779 + C94778) * C153464 +
             (C95581 + C95580 + C95579) * C153818) *
                C98459) *
               C2546) *
              C153563) *
         C153492) /
        (p * q * std::sqrt(p + q));
    d2ee[87] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C152071 * C136 + C83556 + C83556 + C153667 * C152 +
              C152059 * C329 + C83557 + C83557 + C153674 * C353 +
              C83553 * C330 + C83558 + C83558 + C83545 * C354) *
                 C153818 +
             (C83622 + C83623 + C83624) * C153464) *
                C98459 +
            ((C93770 + C93771 + C93772) * C153818 + C93751 * C153464) *
                C153713) *
               C2030 -
           ((C93752 * C153464 + (C93773 + C93774 + C93775) * C153818) *
                C153713 +
            (C93756 * C153464 + (C93772 + C93771 + C93770) * C153818) *
                C98459) *
               C153591) *
              C320 +
          ((((C94775 + C94776 + C94777) * C153818 + C94764 * C153464) * C98459 +
            ((C95579 + C95580 + C95581) * C153818 +
             (C94778 + C94779 + C94780) * C153464) *
                C153713) *
               C153591 -
           ((C94768 * C153464 + (C94777 + C94776 + C94775) * C153818) *
                C153713 +
            ((C83931 + C83932 + C83933) * C153464 +
             (C83553 * C1319 + C83874 + C83874 + C83545 * C1329 +
              C152059 * C330 + C83875 + C83875 + C153674 * C354 +
              C152071 * C329 + C83876 + C83876 + C153667 * C353) *
                 C153818) *
                C98459) *
               C2030) *
              C321 +
          ((((C152071 * C330 + C83877 + C83877 + C153667 * C354 +
              C152059 * C1319 + C83878 + C83878 + C153674 * C1329 +
              C83553 * C3127 + C83879 + C83879 + C83545 * C3135) *
                 C153818 +
             (C83934 + C83935 + C83936) * C153464) *
                C98459 +
            ((C96566 + C96567 + C96568) * C153818 +
             (C93433 + C93434 + C93435) * C153464) *
                C153713) *
               C2030 -
           (((C83553 * C28651 + C96554 + C96554 + C83545 * C28655 +
              C152059 * C4958 + C96555 + C96555 + C153674 * C4964 +
              C152071 * C3442 + C96556 + C96556 + C153667 * C3450) *
                 C153464 +
             (C83553 * C28650 + C96557 + C96557 + C83545 * C28654 +
              C152059 * C4959 + C96558 + C96558 + C153674 * C4965 +
              C152071 * C3441 + C96559 + C96559 + C153667 * C3449) *
                 C153818) *
                C153713 +
            ((C93435 + C93434 + C93433) * C153464 +
             (C96568 + C96567 + C96566) * C153818) *
                C98459) *
               C153591) *
              C322) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C152071 * C136 + C83556 + C83556 + C153667 * C152 +
              C152059 * C329 + C83557 + C83557 + C153674 * C353 +
              C83553 * C330 + C83558 + C83558 + C83545 * C354) *
                 C153818 +
             (C83622 + C83623 + C83624) * C153464) *
                C98459 +
            ((C93770 + C93771 + C93772) * C153818 + C93751 * C153464) *
                C153713) *
               C2030 -
           ((C93752 * C153464 + (C93773 + C93774 + C93775) * C153818) *
                C153713 +
            (C93756 * C153464 + (C93772 + C93771 + C93770) * C153818) *
                C98459) *
               C153591) *
              C153511 * C1225 +
          (((C93751 * C153818 + C94360 * C153464) * C98459 +
            (C93757 * C153818 + (C84239 + C84240 + C84241) * C153464) *
                C153713) *
               C153591 -
           ((C84708 * C153464 + C93756 * C153818) * C153713 +
            ((C83627 + C83626 + C83625) * C153464 +
             (C83624 + C83623 + C83622) * C153818) *
                C98459) *
               C2030) *
              C153511 * C1226 +
          (((C83636 * C153818 + (C83630 + C83629 + C83628) * C153464) * C98459 +
            (C94360 * C153818 + (C84715 + C84716 + C84717) * C153464) *
                C153713) *
               C2030 -
           (((C83553 * C3444 + C84203 + C84203 + C83545 * C3452 +
              C152059 * C1458 + C84204 + C84204 + C153674 * C1468 +
              C152071 * C546 + C84205 + C84205 + C153667 * C570) *
                 C153464 +
             (C84241 + C84240 + C84239) * C153818) *
                C153713 +
            ((C84717 + C84716 + C84715) * C153464 + C84708 * C153818) *
                C98459) *
               C153591) *
              C153511 * C1227)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C152071 * C136 + C83556 + C83556 + C153667 * C152 +
             C152059 * C329 + C83557 + C83557 + C153674 * C353 + C83553 * C330 +
             C83558 + C83558 + C83545 * C354) *
                C153818 +
            (C83622 + C83623 + C83624) * C153464) *
               C98459 +
           ((C93770 + C93771 + C93772) * C153818 + C93751 * C153464) *
               C153713) *
              C2236 -
          ((C93752 * C153464 + (C93773 + C93774 + C93775) * C153818) * C153713 +
           (C93756 * C153464 + (C93772 + C93771 + C93770) * C153818) * C98459) *
              C2237 +
          (((C93775 + C93774 + C93773) * C153818 + C93757 * C153464) * C98459 +
           ((C97361 + C97362 + C97363) * C153818 +
            (C93776 + C93777 + C93778) * C153464) *
               C153713) *
              C2238 -
          (((C83553 * C31196 + C97349 + C97349 + C83545 * C31200 +
             C152059 * C9116 + C97350 + C97350 + C153674 * C9122 +
             C152071 * C7674 + C97351 + C97351 + C153667 * C7682) *
                C153464 +
            (C83553 * C31195 + C97352 + C97352 + C83545 * C31199 +
             C152059 * C9117 + C97353 + C97353 + C153674 * C9123 +
             C152071 * C7673 + C97354 + C97354 + C153667 * C7681) *
                C153818) *
               C153713 +
           ((C93778 + C93777 + C93776) * C153464 +
            (C97363 + C97362 + C97361) * C153818) *
               C98459) *
              C2239) *
         C153511 * C153492) /
            (p * q * std::sqrt(p + q));
    d2ee[88] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C152071 * C136 + C83556 + C83556 + C153667 * C152 +
              C152059 * C329 + C83557 + C83557 + C153674 * C353 +
              C83553 * C330 + C83558 + C83558 + C83545 * C354) *
                 C153818 +
             (C83622 + C83623 + C83624) * C153464) *
                C98459 +
            ((C93770 + C93771 + C93772) * C153818 + C93751 * C153464) *
                C153713) *
               C153910 -
           ((C93752 * C153464 + (C93773 + C93774 + C93775) * C153818) *
                C153713 +
            (C93756 * C153464 + (C93772 + C93771 + C93770) * C153818) *
                C98459) *
               C153911 +
           (((C93775 + C93774 + C93773) * C153818 + C93757 * C153464) * C98459 +
            ((C97361 + C97362 + C97363) * C153818 +
             (C93776 + C93777 + C93778) * C153464) *
                C153713) *
               C2546) *
              C153511 * C153829 +
          (((C93751 * C153818 + C94360 * C153464) * C98459 +
            (C93757 * C153818 + (C84239 + C84240 + C84241) * C153464) *
                C153713) *
               C153911 -
           ((C84708 * C153464 + C93756 * C153818) * C153713 +
            ((C83627 + C83626 + C83625) * C153464 +
             (C83624 + C83623 + C83622) * C153818) *
                C98459) *
               C153910 -
           (((C83553 * C6301 + C86967 + C86967 + C83545 * C6313 +
              C152059 * C6302 + C86968 + C86968 + C153674 * C6314 +
              C152071 * C2242 + C86969 + C86969 + C153667 * C2252) *
                 C153464 +
             (C93778 + C93777 + C93776) * C153818) *
                C153713 +
            ((C84241 + C84240 + C84239) * C153464 + C93752 * C153818) *
                C98459) *
               C2546) *
              C153511 * C153498)) /
        (p * q * std::sqrt(p + q));
    d2ee[89] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C152071 * C136 + C83556 + C83556 + C153667 * C152 +
              C152059 * C329 + C83557 + C83557 + C153674 * C353 +
              C83553 * C330 + C83558 + C83558 + C83545 * C354) *
                 C153818 +
             (C83622 + C83623 + C83624) * C153464) *
                C98459 +
            ((C93770 + C93771 + C93772) * C153818 + C93751 * C153464) *
                C153713) *
               C2030 -
           ((C93752 * C153464 + (C93773 + C93774 + C93775) * C153818) *
                C153713 +
            (C93756 * C153464 + (C93772 + C93771 + C93770) * C153818) *
                C98459) *
               C153591) *
              C153511 * C1225 +
          (((C93751 * C153818 + C94360 * C153464) * C98459 +
            (C93757 * C153818 + (C84239 + C84240 + C84241) * C153464) *
                C153713) *
               C153591 -
           ((C84708 * C153464 + C93756 * C153818) * C153713 +
            ((C83627 + C83626 + C83625) * C153464 +
             (C83624 + C83623 + C83622) * C153818) *
                C98459) *
               C2030) *
              C153511 * C1226 +
          (((C83636 * C153818 + (C83630 + C83629 + C83628) * C153464) * C98459 +
            (C94360 * C153818 + (C84715 + C84716 + C84717) * C153464) *
                C153713) *
               C2030 -
           (((C83553 * C3444 + C84203 + C84203 + C83545 * C3452 +
              C152059 * C1458 + C84204 + C84204 + C153674 * C1468 +
              C152071 * C546 + C84205 + C84205 + C153667 * C570) *
                 C153464 +
             (C84241 + C84240 + C84239) * C153818) *
                C153713 +
            ((C84717 + C84716 + C84715) * C153464 + C84708 * C153818) *
                C98459) *
               C153591) *
              C153511 * C1227)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C152071 * C136 + C83556 + C83556 + C153667 * C152 +
              C152059 * C329 + C83557 + C83557 + C153674 * C353 +
              C83553 * C330 + C83558 + C83558 + C83545 * C354) *
                 C153818 +
             (C83622 + C83623 + C83624) * C153464) *
                C98459 +
            ((C93770 + C93771 + C93772) * C153818 + C93751 * C153464) *
                C153713) *
               C2030 -
           ((C93752 * C153464 + (C93773 + C93774 + C93775) * C153818) *
                C153713 +
            (C93756 * C153464 + (C93772 + C93771 + C93770) * C153818) *
                C98459) *
               C153591) *
              C320 +
          ((((C94775 + C94776 + C94777) * C153818 + C94764 * C153464) * C98459 +
            ((C95579 + C95580 + C95581) * C153818 +
             (C94778 + C94779 + C94780) * C153464) *
                C153713) *
               C153591 -
           ((C94768 * C153464 + (C94777 + C94776 + C94775) * C153818) *
                C153713 +
            ((C83931 + C83932 + C83933) * C153464 +
             (C83553 * C1319 + C83874 + C83874 + C83545 * C1329 +
              C152059 * C330 + C83875 + C83875 + C153674 * C354 +
              C152071 * C329 + C83876 + C83876 + C153667 * C353) *
                 C153818) *
                C98459) *
               C2030) *
              C321 +
          ((((C152071 * C330 + C83877 + C83877 + C153667 * C354 +
              C152059 * C1319 + C83878 + C83878 + C153674 * C1329 +
              C83553 * C3127 + C83879 + C83879 + C83545 * C3135) *
                 C153818 +
             (C83934 + C83935 + C83936) * C153464) *
                C98459 +
            ((C96566 + C96567 + C96568) * C153818 +
             (C93433 + C93434 + C93435) * C153464) *
                C153713) *
               C2030 -
           (((C83553 * C28651 + C96554 + C96554 + C83545 * C28655 +
              C152059 * C4958 + C96555 + C96555 + C153674 * C4964 +
              C152071 * C3442 + C96556 + C96556 + C153667 * C3450) *
                 C153464 +
             (C83553 * C28650 + C96557 + C96557 + C83545 * C28654 +
              C152059 * C4959 + C96558 + C96558 + C153674 * C4965 +
              C152071 * C3441 + C96559 + C96559 + C153667 * C3449) *
                 C153818) *
                C153713 +
            ((C93435 + C93434 + C93433) * C153464 +
             (C96568 + C96567 + C96566) * C153818) *
                C98459) *
               C153591) *
              C322) *
         C153492) /
            (p * q * std::sqrt(p + q));
    d2ee[90] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 ((((C152071 * C136 + C83556 + C83556 + C153667 * C152 +
                     C152059 * C329 + C83557 + C83557 + C153674 * C353 +
                     C83553 * C330 + C83558 + C83558 + C83545 * C354) *
                        C153454 * C153709 +
                    (C93770 + C93771 + C93772) * C153454 * C153716 +
                    C148523 * C116029) *
                       C153527 * C153837 -
                   ((C95581 + C95580 + C95579) * C153454 * C116029 +
                    (C94777 + C94776 + C94775) * C153454 * C153716 +
                    (C83553 * C1319 + C83874 + C83874 + C83545 * C1329 +
                     C152059 * C330 + C83875 + C83875 + C153674 * C354 +
                     C152071 * C329 + C83876 + C83876 + C153667 * C353) *
                        C153454 * C153709) *
                       C153527 * C153563) *
                      C153906 +
                  (((C83933 + C83932 + C83931) * C153454 * C153709 +
                    C94764 * C153454 * C153716 +
                    (C94778 + C94779 + C94780) * C153454 * C116029) *
                       C153527 * C153563 -
                   (C148521 * C116029 + C93756 * C153454 * C153716 +
                    (C83624 + C83623 + C83622) * C153454 * C153709) *
                       C153527 * C153837) *
                      C153907 +
                  ((C83636 * C153454 * C153709 + C94360 * C153454 * C153716 +
                    (C84239 + C84240 + C84241) * C153454 * C116029) *
                       C153527 * C153837 -
                   ((C83553 * C4957 + C85641 + C85641 + C83545 * C4963 +
                     C152059 * C3443 + C85642 + C85642 + C153674 * C3451 +
                     C152071 * C1459 + C85643 + C85643 + C153667 * C1469) *
                        C153454 * C116029 +
                    (C85049 + C85048 + C85047) * C153454 * C153716 +
                    C84470 * C153454 * C153709) *
                       C153527 * C153563) *
                      C752)) /
                (p * q * std::sqrt(p + q));
    d2ee[91] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 (((((C152071 * C136 + C83556 + C83556 + C153667 * C152 +
                      C152059 * C329 + C83557 + C83557 + C153674 * C353 +
                      C83553 * C330 + C83558 + C83558 + C83545 * C354) *
                         C153454 * C153709 +
                     (C93770 + C93771 + C93772) * C153454 * C153716 +
                     C148523 * C116029) *
                        C153838 -
                    ((C97363 + C97362 + C97361) * C153454 * C116029 +
                     (C93773 + C93774 + C93775) * C153454 * C153716 +
                     (C93772 + C93771 + C93770) * C153454 * C153709) *
                        C153591) *
                       C153837 +
                   (((C94775 + C94776 + C94777) * C153454 * C153709 +
                     (C95579 + C95580 + C95581) * C153454 * C153716 +
                     (C152071 * C6306 + C95572 + C95572 + C153667 * C6318 +
                      C152059 * C6305 + C95571 + C95571 + C153674 * C6317 +
                      C83553 * C30191 + C95570 + C95570 + C83545 * C30195) *
                         C153454 * C116029) *
                        C153591 -
                    ((C95581 + C95580 + C95579) * C153454 * C116029 +
                     (C94777 + C94776 + C94775) * C153454 * C153716 +
                     (C83553 * C1319 + C83874 + C83874 + C83545 * C1329 +
                      C152059 * C330 + C83875 + C83875 + C153674 * C354 +
                      C152071 * C329 + C83876 + C83876 + C153667 * C353) *
                         C153454 * C153709) *
                        C153838) *
                       C153563) *
                      C323 +
                  (((C93751 * C153454 * C153709 + C93757 * C153454 * C153716 +
                     (C93776 + C93777 + C93778) * C153454 * C116029) *
                        C153591 -
                    (C148521 * C116029 + C93756 * C153454 * C153716 +
                     (C83624 + C83623 + C83622) * C153454 * C153709) *
                        C153838) *
                       C153837 +
                   (((C83933 + C83932 + C83931) * C153454 * C153709 +
                     C94764 * C153454 * C153716 +
                     (C94778 + C94779 + C94780) * C153454 * C116029) *
                        C153838 -
                    ((C83553 * C31999 + C95567 + C95567 + C83545 * C32001 +
                      C152059 * C6303 + C95568 + C95568 + C153674 * C6315 +
                      C152071 * C6304 + C95569 + C95569 + C153667 * C6316) *
                         C153454 * C116029 +
                     (C94780 + C94779 + C94778) * C153454 * C153716 +
                     C94768 * C153454 * C153709) *
                        C153591) *
                       C153563) *
                      C153498)) /
                (p * q * std::sqrt(p + q));
    d2ee[92] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C152071 * C136 + C83556 + C83556 + C153667 * C152 +
             C152059 * C329 + C83557 + C83557 + C153674 * C353 + C83553 * C330 +
             C83558 + C83558 + C83545 * C354) *
                C153454 * C153709 +
            (C93770 + C93771 + C93772) * C153454 * C153716 +
            (C93775 + C93774 + C93773) * C153454 * C116029) *
               C153527 * C320 -
           ((C95581 + C95580 + C95579) * C153454 * C116029 +
            (C94777 + C94776 + C94775) * C153454 * C153716 +
            (C83553 * C1319 + C83874 + C83874 + C83545 * C1329 +
             C152059 * C330 + C83875 + C83875 + C153674 * C354 +
             C152071 * C329 + C83876 + C83876 + C153667 * C353) *
                C153454 * C153709) *
               C153527 * C321 +
           ((C152071 * C330 + C83877 + C83877 + C153667 * C354 +
             C152059 * C1319 + C83878 + C83878 + C153674 * C1329 +
             C83553 * C3127 + C83879 + C83879 + C83545 * C3135) *
                C153454 * C153709 +
            (C96566 + C96567 + C96568) * C153454 * C153716 +
            (C152071 * C3441 + C96559 + C96559 + C153667 * C3449 +
             C152059 * C4959 + C96558 + C96558 + C153674 * C4965 +
             C83553 * C28650 + C96557 + C96557 + C83545 * C28654) *
                C153454 * C116029) *
               C153527 * C322) *
              C323 +
          (((C83933 + C83932 + C83931) * C153454 * C153709 +
            C94764 * C153454 * C153716 +
            (C94778 + C94779 + C94780) * C153454 * C116029) *
               C153527 * C321 -
           (C93752 * C153454 * C116029 + C93756 * C153454 * C153716 +
            (C83624 + C83623 + C83622) * C153454 * C153709) *
               C153527 * C320 -
           ((C83553 * C28651 + C96554 + C96554 + C83545 * C28655 +
             C152059 * C4958 + C96555 + C96555 + C153674 * C4964 +
             C152071 * C3442 + C96556 + C96556 + C153667 * C3450) *
                C153454 * C116029 +
            (C93435 + C93434 + C93433) * C153454 * C153716 +
            (C83936 + C83935 + C83934) * C153454 * C153709) *
               C153527 * C322) *
              C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C152071 * C136 + C83556 + C83556 + C153667 * C152 + C152059 * C329 +
            C83557 + C83557 + C153674 * C353 + C83553 * C330 + C83558 + C83558 +
            C83545 * C354) *
               C153454 * C153709 +
           (C93770 + C93771 + C93772) * C153454 * C153716 +
           (C93775 + C93774 + C93773) * C153454 * C116029) *
              C153527 * C153511 * C130 -
          (C93752 * C153454 * C116029 + C93756 * C153454 * C153716 +
           (C83624 + C83623 + C83622) * C153454 * C153709) *
              C153527 * C153511 * C131 +
          (C83636 * C153454 * C153709 + C94360 * C153454 * C153716 +
           (C84239 + C84240 + C84241) * C153454 * C116029) *
              C153527 * C153511 * C132 -
          ((C83553 * C3444 + C84203 + C84203 + C83545 * C3452 +
            C152059 * C1458 + C84204 + C84204 + C153674 * C1468 +
            C152071 * C546 + C84205 + C84205 + C153667 * C570) *
               C153454 * C116029 +
           (C84717 + C84716 + C84715) * C153454 * C153716 +
           C83637 * C153454 * C153709) *
              C153527 * C153511 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C152071 * C136 + C83556 + C83556 + C153667 * C152 +
             C152059 * C329 + C83557 + C83557 + C153674 * C353 + C83553 * C330 +
             C83558 + C83558 + C83545 * C354) *
                C153454 * C153709 +
            (C93770 + C93771 + C93772) * C153454 * C153716 +
            C148523 * C116029) *
               C535 -
           ((C97363 + C97362 + C97361) * C153454 * C116029 +
            (C93773 + C93774 + C93775) * C153454 * C153716 +
            (C93772 + C93771 + C93770) * C153454 * C153709) *
               C536 +
           (C148523 * C153709 + (C97361 + C97362 + C97363) * C153454 * C153716 +
            (C152071 * C7673 + C97354 + C97354 + C153667 * C7681 +
             C152059 * C9117 + C97353 + C97353 + C153674 * C9123 +
             C83553 * C31195 + C97352 + C97352 + C83545 * C31199) *
                C153454 * C116029) *
               C537) *
              C153511 * C323 +
          ((C93751 * C153454 * C153709 + C93757 * C153454 * C153716 +
            (C93776 + C93777 + C93778) * C153454 * C116029) *
               C536 -
           (C148521 * C116029 + C93756 * C153454 * C153716 +
            (C83624 + C83623 + C83622) * C153454 * C153709) *
               C535 -
           ((C83553 * C31196 + C97349 + C97349 + C83545 * C31200 +
             C152059 * C9116 + C97350 + C97350 + C153674 * C9122 +
             C152071 * C7674 + C97351 + C97351 + C153667 * C7682) *
                C153454 * C116029 +
            (C93778 + C93777 + C93776) * C153454 * C153716 +
            C148521 * C153709) *
               C537) *
              C153511 * C153498)) /
            (p * q * std::sqrt(p + q));
    d2ee[93] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 ((((C152071 * C136 + C83556 + C83556 + C153667 * C152 +
                     C152059 * C329 + C83557 + C83557 + C153674 * C353 +
                     C83553 * C330 + C83558 + C83558 + C83545 * C354) *
                        C153454 * C153709 +
                    (C93770 + C93771 + C93772) * C153454 * C153716 +
                    C148523 * C116029) *
                       C153838 -
                   ((C97363 + C97362 + C97361) * C153454 * C116029 +
                    (C93773 + C93774 + C93775) * C153454 * C153716 +
                    (C93772 + C93771 + C93770) * C153454 * C153709) *
                       C153591) *
                      C153511 * C153906 +
                  ((C93751 * C153454 * C153709 + C93757 * C153454 * C153716 +
                    (C93776 + C93777 + C93778) * C153454 * C116029) *
                       C153591 -
                   (C148521 * C116029 + C93756 * C153454 * C153716 +
                    (C83624 + C83623 + C83622) * C153454 * C153709) *
                       C153838) *
                      C153511 * C153907 +
                  ((C83636 * C153454 * C153709 + C94360 * C153454 * C153716 +
                    (C84239 + C84240 + C84241) * C153454 * C116029) *
                       C153838 -
                   ((C83553 * C6301 + C86967 + C86967 + C83545 * C6313 +
                     C152059 * C6302 + C86968 + C86968 + C153674 * C6314 +
                     C152071 * C2242 + C86969 + C86969 + C153667 * C2252) *
                        C153454 * C116029 +
                    (C84241 + C84240 + C84239) * C153454 * C153716 +
                    C84708 * C153454 * C153709) *
                       C153591) *
                      C153511 * C752)) /
                (p * q * std::sqrt(p + q));
    d2ee[94] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 (((C152071 * C136 + C83556 + C83556 + C153667 * C152 +
                    C152059 * C329 + C83557 + C83557 + C153674 * C353 +
                    C83553 * C330 + C83558 + C83558 + C83545 * C354) *
                       C153454 * C153709 +
                   (C93770 + C93771 + C93772) * C153454 * C153716 +
                   (C93775 + C93774 + C93773) * C153454 * C116029) *
                      C153527 * C153511 * C130 -
                  (C93752 * C153454 * C116029 + C93756 * C153454 * C153716 +
                   (C83624 + C83623 + C83622) * C153454 * C153709) *
                      C153527 * C153511 * C131 +
                  (C83636 * C153454 * C153709 + C94360 * C153454 * C153716 +
                   (C84239 + C84240 + C84241) * C153454 * C116029) *
                      C153527 * C153511 * C132 -
                  ((C83553 * C3444 + C84203 + C84203 + C83545 * C3452 +
                    C152059 * C1458 + C84204 + C84204 + C153674 * C1468 +
                    C152071 * C546 + C84205 + C84205 + C153667 * C570) *
                       C153454 * C116029 +
                   (C84717 + C84716 + C84715) * C153454 * C153716 +
                   C83637 * C153454 * C153709) *
                      C153527 * C153511 * C133)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C152071 * C136 + C83556 + C83556 + C153667 * C152 +
                     C152059 * C329 + C83557 + C83557 + C153674 * C353 +
                     C83553 * C330 + C83558 + C83558 + C83545 * C354) *
                        C153454 * C153709 +
                    (C93770 + C93771 + C93772) * C153454 * C153716 +
                    (C93775 + C93774 + C93773) * C153454 * C116029) *
                       C153527 * C320 -
                   ((C95581 + C95580 + C95579) * C153454 * C116029 +
                    (C94777 + C94776 + C94775) * C153454 * C153716 +
                    (C83553 * C1319 + C83874 + C83874 + C83545 * C1329 +
                     C152059 * C330 + C83875 + C83875 + C153674 * C354 +
                     C152071 * C329 + C83876 + C83876 + C153667 * C353) *
                        C153454 * C153709) *
                       C153527 * C321 +
                   ((C152071 * C330 + C83877 + C83877 + C153667 * C354 +
                     C152059 * C1319 + C83878 + C83878 + C153674 * C1329 +
                     C83553 * C3127 + C83879 + C83879 + C83545 * C3135) *
                        C153454 * C153709 +
                    (C96566 + C96567 + C96568) * C153454 * C153716 +
                    (C152071 * C3441 + C96559 + C96559 + C153667 * C3449 +
                     C152059 * C4959 + C96558 + C96558 + C153674 * C4965 +
                     C83553 * C28650 + C96557 + C96557 + C83545 * C28654) *
                        C153454 * C116029) *
                       C153527 * C322) *
                      C323 +
                  (((C83933 + C83932 + C83931) * C153454 * C153709 +
                    C94764 * C153454 * C153716 +
                    (C94778 + C94779 + C94780) * C153454 * C116029) *
                       C153527 * C321 -
                   (C93752 * C153454 * C116029 + C93756 * C153454 * C153716 +
                    (C83624 + C83623 + C83622) * C153454 * C153709) *
                       C153527 * C320 -
                   ((C83553 * C28651 + C96554 + C96554 + C83545 * C28655 +
                     C152059 * C4958 + C96555 + C96555 + C153674 * C4964 +
                     C152071 * C3442 + C96556 + C96556 + C153667 * C3450) *
                        C153454 * C116029 +
                    (C93435 + C93434 + C93433) * C153454 * C153716 +
                    (C83936 + C83935 + C83934) * C153454 * C153709) *
                       C153527 * C322) *
                      C153498)) /
                    (p * q * std::sqrt(p + q));
    d2ee[95] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((C152071 * C136 + C83556 + C83556 + C153667 * C152 +
             C152059 * C329 + C83557 + C83557 + C153674 * C353 + C83553 * C330 +
             C83558 + C83558 + C83545 * C354) *
                C153454 * C153709 +
            (C93770 + C93771 + C93772) * C153454 * C153716 +
            C148523 * C116029) *
               C153527 * C153908 -
           (C149852 * C116029 + (C94777 + C94776 + C94775) * C153454 * C153716 +
            (C83553 * C1319 + C83874 + C83874 + C83545 * C1329 +
             C152059 * C330 + C83875 + C83875 + C153674 * C354 +
             C152071 * C329 + C83876 + C83876 + C153667 * C353) *
                C153454 * C153709) *
               C153527 * C153909 +
           ((C152071 * C330 + C83877 + C83877 + C153667 * C354 +
             C152059 * C1319 + C83878 + C83878 + C153674 * C1329 +
             C83553 * C3127 + C83879 + C83879 + C83545 * C3135) *
                C153454 * C153709 +
            (C96566 + C96567 + C96568) * C153454 * C153716 +
            (C152071 * C3441 + C96559 + C96559 + C153667 * C3449 +
             C152059 * C4959 + C96558 + C96558 + C153674 * C4965 +
             C83553 * C28650 + C96557 + C96557 + C83545 * C28654) *
                C153454 * C116029) *
               C153527 * C1601) *
              C153829 +
          (((C83933 + C83932 + C83931) * C153454 * C153709 +
            C94764 * C153454 * C153716 +
            (C94778 + C94779 + C94780) * C153454 * C116029) *
               C153527 * C153909 -
           (C148521 * C116029 + C93756 * C153454 * C153716 +
            (C83624 + C83623 + C83622) * C153454 * C153709) *
               C153527 * C153908 -
           ((C83553 * C28651 + C96554 + C96554 + C83545 * C28655 +
             C152059 * C4958 + C96555 + C96555 + C153674 * C4964 +
             C152071 * C3442 + C96556 + C96556 + C153667 * C3450) *
                C153454 * C116029 +
            (C93435 + C93434 + C93433) * C153454 * C153716 +
            (C83936 + C83935 + C83934) * C153454 * C153709) *
               C153527 * C1601) *
              C153498)) /
        (p * q * std::sqrt(p + q));
    d2ee[96] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((C152071 * C136 + C83556 + C83556 + C153667 * C152 +
             C152059 * C329 + C83557 + C83557 + C153674 * C353 + C83553 * C330 +
             C83558 + C83558 + C83545 * C354) *
                C153454 * C153709 +
            (C93770 + C93771 + C93772) * C153454 * C153716 +
            C148523 * C116029) *
               C153838 -
           ((C97363 + C97362 + C97361) * C153454 * C116029 +
            (C93773 + C93774 + C93775) * C153454 * C153716 +
            (C93772 + C93771 + C93770) * C153454 * C153709) *
               C153591) *
              C153908 +
          (((C94775 + C94776 + C94777) * C153454 * C153709 +
            (C95579 + C95580 + C95581) * C153454 * C153716 +
            (C149853 + C149854 + C149855) * C153454 * C116029) *
               C153591 -
           (C149852 * C116029 + (C94777 + C94776 + C94775) * C153454 * C153716 +
            (C83553 * C1319 + C83874 + C83874 + C83545 * C1329 +
             C152059 * C330 + C83875 + C83875 + C153674 * C354 +
             C152071 * C329 + C83876 + C83876 + C153667 * C353) *
                C153454 * C153709) *
               C153838) *
              C153909 +
          (((C152071 * C330 + C83877 + C83877 + C153667 * C354 +
             C152059 * C1319 + C83878 + C83878 + C153674 * C1329 +
             C83553 * C3127 + C83879 + C83879 + C83545 * C3135) *
                C153454 * C153709 +
            (C96566 + C96567 + C96568) * C153454 * C153716 +
            (C150597 + C150598 + C150599) * C153454 * C116029) *
               C153838 -
           ((C83553 * C30190 + C150588 + C150588 + C83545 * C30194 +
             C152059 * C30191 + C150589 + C150589 + C153674 * C30195 +
             C152071 * C6305 + C150590 + C150590 + C153667 * C6317) *
                C153454 * C116029 +
            (C150599 + C150598 + C150597) * C153454 * C153716 +
            (C96568 + C96567 + C96566) * C153454 * C153709) *
               C153591) *
              C1601) *
         C153492) /
        (p * q * std::sqrt(p + q));
    d2ee[97] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C152071 * C136 + C83556 + C83556 + C153667 * C152 + C152059 * C329 +
            C83557 + C83557 + C153674 * C353 + C83553 * C330 + C83558 + C83558 +
            C83545 * C354) *
               C153454 * C153709 +
           (C93770 + C93771 + C93772) * C153454 * C153716 + C148523 * C116029) *
              C153527 * C1310 -
          ((C95581 + C95580 + C95579) * C153454 * C116029 +
           (C94777 + C94776 + C94775) * C153454 * C153716 +
           (C83553 * C1319 + C83874 + C83874 + C83545 * C1329 + C152059 * C330 +
            C83875 + C83875 + C153674 * C354 + C152071 * C329 + C83876 +
            C83876 + C153667 * C353) *
               C153454 * C153709) *
              C153527 * C1311 +
          ((C152071 * C330 + C83877 + C83877 + C153667 * C354 +
            C152059 * C1319 + C83878 + C83878 + C153674 * C1329 +
            C83553 * C3127 + C83879 + C83879 + C83545 * C3135) *
               C153454 * C153709 +
           (C96566 + C96567 + C96568) * C153454 * C153716 +
           (C152071 * C3441 + C96559 + C96559 + C153667 * C3449 +
            C152059 * C4959 + C96558 + C96558 + C153674 * C4965 +
            C83553 * C28650 + C96557 + C96557 + C83545 * C28654) *
               C153454 * C116029) *
              C153527 * C1312 -
          ((C83553 * C29442 + C149614 + C149614 + C83545 * C29444 +
            C152059 * C28650 + C149615 + C149615 + C153674 * C28654 +
            C152071 * C4959 + C149616 + C149616 + C153667 * C4965) *
               C153454 * C116029 +
           (C83553 * C29092 + C95268 + C95268 + C83545 * C29096 +
            C152059 * C5703 + C95269 + C95269 + C153674 * C5709 +
            C152071 * C4303 + C95270 + C95270 + C153667 * C4311) *
               C153454 * C153716 +
           (C83553 * C4723 + C85420 + C85420 + C83545 * C4729 +
            C152059 * C3127 + C85421 + C85421 + C153674 * C3135 +
            C152071 * C1319 + C85422 + C85422 + C153667 * C1329) *
               C153454 * C153709) *
              C153527 * C1313) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C152071 * C136 + C83556 + C83556 + C153667 * C152 +
             C152059 * C329 + C83557 + C83557 + C153674 * C353 + C83553 * C330 +
             C83558 + C83558 + C83545 * C354) *
                C153454 * C153709 +
            (C93770 + C93771 + C93772) * C153454 * C153716 +
            C148523 * C116029) *
               C153527 * C1223 -
           ((C95581 + C95580 + C95579) * C153454 * C116029 +
            (C94777 + C94776 + C94775) * C153454 * C153716 +
            (C83553 * C1319 + C83874 + C83874 + C83545 * C1329 +
             C152059 * C330 + C83875 + C83875 + C153674 * C354 +
             C152071 * C329 + C83876 + C83876 + C153667 * C353) *
                C153454 * C153709) *
               C153527 * C153563) *
              C1225 +
          (((C83933 + C83932 + C83931) * C153454 * C153709 +
            C94764 * C153454 * C153716 +
            (C94778 + C94779 + C94780) * C153454 * C116029) *
               C153527 * C153563 -
           (C148521 * C116029 + C93756 * C153454 * C153716 +
            (C83624 + C83623 + C83622) * C153454 * C153709) *
               C153527 * C1223) *
              C1226 +
          ((C83636 * C153454 * C153709 + C94360 * C153454 * C153716 +
            (C84239 + C84240 + C84241) * C153454 * C116029) *
               C153527 * C1223 -
           ((C83553 * C4957 + C85641 + C85641 + C83545 * C4963 +
             C152059 * C3443 + C85642 + C85642 + C153674 * C3451 +
             C152071 * C1459 + C85643 + C85643 + C153667 * C1469) *
                C153454 * C116029 +
            (C85049 + C85048 + C85047) * C153454 * C153716 +
            C84470 * C153454 * C153709) *
               C153527 * C153563) *
              C1227)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C152071 * C136 + C83556 + C83556 + C153667 * C152 +
             C152059 * C329 + C83557 + C83557 + C153674 * C353 + C83553 * C330 +
             C83558 + C83558 + C83545 * C354) *
                C153454 * C153709 +
            (C93770 + C93771 + C93772) * C153454 * C153716 +
            C148523 * C116029) *
               C535 -
           ((C97363 + C97362 + C97361) * C153454 * C116029 +
            (C93773 + C93774 + C93775) * C153454 * C153716 +
            (C93772 + C93771 + C93770) * C153454 * C153709) *
               C536 +
           (C148523 * C153709 + (C97361 + C97362 + C97363) * C153454 * C153716 +
            (C152071 * C7673 + C97354 + C97354 + C153667 * C7681 +
             C152059 * C9117 + C97353 + C97353 + C153674 * C9123 +
             C83553 * C31195 + C97352 + C97352 + C83545 * C31199) *
                C153454 * C116029) *
               C537) *
              C1223 +
          (((C94775 + C94776 + C94777) * C153454 * C153709 +
            (C95579 + C95580 + C95581) * C153454 * C153716 +
            (C149853 + C149854 + C149855) * C153454 * C116029) *
               C536 -
           (C149852 * C116029 + (C94777 + C94776 + C94775) * C153454 * C153716 +
            (C83553 * C1319 + C83874 + C83874 + C83545 * C1329 +
             C152059 * C330 + C83875 + C83875 + C153674 * C354 +
             C152071 * C329 + C83876 + C83876 + C153667 * C353) *
                C153454 * C153709) *
               C535 -
           ((C83553 * C32641 + C149842 + C149842 + C83545 * C32643 +
             C152059 * C31195 + C149843 + C149843 + C153674 * C31199 +
             C152071 * C9117 + C149844 + C149844 + C153667 * C9123) *
                C153454 * C116029 +
            (C149855 + C149854 + C149853) * C153454 * C153716 +
            C149852 * C153709) *
               C537) *
              C153563) *
         C153492) /
            (p * q * std::sqrt(p + q));
    d2ee[98] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 (((((C152071 * C136 + C83556 + C83556 + C153667 * C152 +
                      C152059 * C329 + C83557 + C83557 + C153674 * C353 +
                      C83553 * C330 + C83558 + C83558 + C83545 * C354) *
                         C153454 * C153709 +
                     (C93770 + C93771 + C93772) * C153454 * C153716 +
                     C148523 * C116029) *
                        C153838 -
                    ((C97363 + C97362 + C97361) * C153454 * C116029 +
                     (C93773 + C93774 + C93775) * C153454 * C153716 +
                     (C93772 + C93771 + C93770) * C153454 * C153709) *
                        C153591) *
                       C1223 +
                   (((C94775 + C94776 + C94777) * C153454 * C153709 +
                     (C95579 + C95580 + C95581) * C153454 * C153716 +
                     (C149853 + C149854 + C149855) * C153454 * C116029) *
                        C153591 -
                    (C149852 * C116029 +
                     (C94777 + C94776 + C94775) * C153454 * C153716 +
                     (C83553 * C1319 + C83874 + C83874 + C83545 * C1329 +
                      C152059 * C330 + C83875 + C83875 + C153674 * C354 +
                      C152071 * C329 + C83876 + C83876 + C153667 * C353) *
                         C153454 * C153709) *
                        C153838) *
                       C153563) *
                      C153829 +
                  (((C93751 * C153454 * C153709 + C93757 * C153454 * C153716 +
                     (C93776 + C93777 + C93778) * C153454 * C116029) *
                        C153591 -
                    (C148521 * C116029 + C93756 * C153454 * C153716 +
                     (C83624 + C83623 + C83622) * C153454 * C153709) *
                        C153838) *
                       C1223 +
                   (((C83933 + C83932 + C83931) * C153454 * C153709 +
                     C94764 * C153454 * C153716 +
                     (C94778 + C94779 + C94780) * C153454 * C116029) *
                        C153838 -
                    ((C83553 * C31999 + C95567 + C95567 + C83545 * C32001 +
                      C152059 * C6303 + C95568 + C95568 + C153674 * C6315 +
                      C152071 * C6304 + C95569 + C95569 + C153667 * C6316) *
                         C153454 * C116029 +
                     (C94780 + C94779 + C94778) * C153454 * C153716 +
                     C94768 * C153454 * C153709) *
                        C153591) *
                       C153563) *
                      C153498)) /
                (p * q * std::sqrt(p + q));
    d2ee[99] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C152071 * C136 + C83556 + C83556 + C153667 * C152 +
             C152059 * C329 + C83557 + C83557 + C153674 * C353 + C83553 * C330 +
             C83558 + C83558 + C83545 * C354) *
                C153454 * C153709 +
            (C93770 + C93771 + C93772) * C153454 * C153716 +
            C148523 * C116029) *
               C153527 * C1223 -
           ((C95581 + C95580 + C95579) * C153454 * C116029 +
            (C94777 + C94776 + C94775) * C153454 * C153716 +
            (C83553 * C1319 + C83874 + C83874 + C83545 * C1329 +
             C152059 * C330 + C83875 + C83875 + C153674 * C354 +
             C152071 * C329 + C83876 + C83876 + C153667 * C353) *
                C153454 * C153709) *
               C153527 * C153563) *
              C1225 +
          (((C83933 + C83932 + C83931) * C153454 * C153709 +
            C94764 * C153454 * C153716 +
            (C94778 + C94779 + C94780) * C153454 * C116029) *
               C153527 * C153563 -
           (C148521 * C116029 + C93756 * C153454 * C153716 +
            (C83624 + C83623 + C83622) * C153454 * C153709) *
               C153527 * C1223) *
              C1226 +
          ((C83636 * C153454 * C153709 + C94360 * C153454 * C153716 +
            (C84239 + C84240 + C84241) * C153454 * C116029) *
               C153527 * C1223 -
           ((C83553 * C4957 + C85641 + C85641 + C83545 * C4963 +
             C152059 * C3443 + C85642 + C85642 + C153674 * C3451 +
             C152071 * C1459 + C85643 + C85643 + C153667 * C1469) *
                C153454 * C116029 +
            (C85049 + C85048 + C85047) * C153454 * C153716 +
            C84470 * C153454 * C153709) *
               C153527 * C153563) *
              C1227)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((C152071 * C136 + C83556 + C83556 + C153667 * C152 + C152059 * C329 +
            C83557 + C83557 + C153674 * C353 + C83553 * C330 + C83558 + C83558 +
            C83545 * C354) *
               C153454 * C153709 +
           (C93770 + C93771 + C93772) * C153454 * C153716 + C148523 * C116029) *
              C153527 * C1310 -
          ((C95581 + C95580 + C95579) * C153454 * C116029 +
           (C94777 + C94776 + C94775) * C153454 * C153716 +
           (C83553 * C1319 + C83874 + C83874 + C83545 * C1329 + C152059 * C330 +
            C83875 + C83875 + C153674 * C354 + C152071 * C329 + C83876 +
            C83876 + C153667 * C353) *
               C153454 * C153709) *
              C153527 * C1311 +
          ((C152071 * C330 + C83877 + C83877 + C153667 * C354 +
            C152059 * C1319 + C83878 + C83878 + C153674 * C1329 +
            C83553 * C3127 + C83879 + C83879 + C83545 * C3135) *
               C153454 * C153709 +
           (C96566 + C96567 + C96568) * C153454 * C153716 +
           (C152071 * C3441 + C96559 + C96559 + C153667 * C3449 +
            C152059 * C4959 + C96558 + C96558 + C153674 * C4965 +
            C83553 * C28650 + C96557 + C96557 + C83545 * C28654) *
               C153454 * C116029) *
              C153527 * C1312 -
          ((C83553 * C29442 + C149614 + C149614 + C83545 * C29444 +
            C152059 * C28650 + C149615 + C149615 + C153674 * C28654 +
            C152071 * C4959 + C149616 + C149616 + C153667 * C4965) *
               C153454 * C116029 +
           (C83553 * C29092 + C95268 + C95268 + C83545 * C29096 +
            C152059 * C5703 + C95269 + C95269 + C153674 * C5709 +
            C152071 * C4303 + C95270 + C95270 + C153667 * C4311) *
               C153454 * C153716 +
           (C83553 * C4723 + C85420 + C85420 + C83545 * C4729 +
            C152059 * C3127 + C85421 + C85421 + C153674 * C3135 +
            C152071 * C1319 + C85422 + C85422 + C153667 * C1329) *
               C153454 * C153709) *
              C153527 * C1313) *
         C153492) /
            (p * q * std::sqrt(p + q));
    d2ee[100] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                  (((((C152071 * C136 + C83556 + C83556 + C153667 * C152 +
                       C152059 * C329 + C83557 + C83557 + C153674 * C353 +
                       C83553 * C330 + C83558 + C83558 + C83545 * C354) *
                          C153454 * C153709 +
                      (C93770 + C93771 + C93772) * C153454 * C153716 +
                      C148523 * C116029) *
                         C2030 -
                     (C151196 * C116029 +
                      (C93773 + C93774 + C93775) * C153454 * C153716 +
                      (C93772 + C93771 + C93770) * C153454 * C153709) *
                         C153591) *
                        C153837 +
                    (((C94775 + C94776 + C94777) * C153454 * C153709 +
                      (C95579 + C95580 + C95581) * C153454 * C153716 +
                      (C149853 + C149854 + C149855) * C153454 * C116029) *
                         C153591 -
                     (C149852 * C116029 +
                      (C94777 + C94776 + C94775) * C153454 * C153716 +
                      (C83553 * C1319 + C83874 + C83874 + C83545 * C1329 +
                       C152059 * C330 + C83875 + C83875 + C153674 * C354 +
                       C152071 * C329 + C83876 + C83876 + C153667 * C353) *
                          C153454 * C153709) *
                         C2030) *
                        C153563) *
                       C153829 +
                   (((C93751 * C153454 * C153709 + C93757 * C153454 * C153716 +
                      (C93776 + C93777 + C93778) * C153454 * C116029) *
                         C153591 -
                     (C148521 * C116029 + C93756 * C153454 * C153716 +
                      (C83624 + C83623 + C83622) * C153454 * C153709) *
                         C2030) *
                        C153837 +
                    (((C83933 + C83932 + C83931) * C153454 * C153709 +
                      C94764 * C153454 * C153716 +
                      (C94778 + C94779 + C94780) * C153454 * C116029) *
                         C2030 -
                     ((C83553 * C31999 + C95567 + C95567 + C83545 * C32001 +
                       C152059 * C6303 + C95568 + C95568 + C153674 * C6315 +
                       C152071 * C6304 + C95569 + C95569 + C153667 * C6316) *
                          C153454 * C116029 +
                      (C94780 + C94779 + C94778) * C153454 * C153716 +
                      C94768 * C153454 * C153709) *
                         C153591) *
                        C153563) *
                       C153498)) /
                 (p * q * std::sqrt(p + q));
    d2ee[101] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((C152071 * C136 + C83556 + C83556 + C153667 * C152 +
             C152059 * C329 + C83557 + C83557 + C153674 * C353 + C83553 * C330 +
             C83558 + C83558 + C83545 * C354) *
                C153454 * C153709 +
            (C93770 + C93771 + C93772) * C153454 * C153716 +
            C148523 * C116029) *
               C153910 -
           (C151196 * C116029 + (C93773 + C93774 + C93775) * C153454 * C153716 +
            (C93772 + C93771 + C93770) * C153454 * C153709) *
               C153911 +
           (C148523 * C153709 + (C97361 + C97362 + C97363) * C153454 * C153716 +
            (C151200 + C151201 + C151202) * C153454 * C116029) *
               C2546) *
              C153837 +
          (((C94775 + C94776 + C94777) * C153454 * C153709 +
            (C95579 + C95580 + C95581) * C153454 * C153716 +
            (C149853 + C149854 + C149855) * C153454 * C116029) *
               C153911 -
           (C149852 * C116029 + (C94777 + C94776 + C94775) * C153454 * C153716 +
            (C83553 * C1319 + C83874 + C83874 + C83545 * C1329 +
             C152059 * C330 + C83875 + C83875 + C153674 * C354 +
             C152071 * C329 + C83876 + C83876 + C153667 * C353) *
                C153454 * C153709) *
               C153910 -
           ((C83553 * C32641 + C149842 + C149842 + C83545 * C32643 +
             C152059 * C31195 + C149843 + C149843 + C153674 * C31199 +
             C152071 * C9117 + C149844 + C149844 + C153667 * C9123) *
                C153454 * C116029 +
            (C149855 + C149854 + C149853) * C153454 * C153716 +
            C149852 * C153709) *
               C2546) *
              C153563) *
         C153492) /
        (p * q * std::sqrt(p + q));
    d2ee[102] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C152071 * C136 + C83556 + C83556 + C153667 * C152 +
             C152059 * C329 + C83557 + C83557 + C153674 * C353 + C83553 * C330 +
             C83558 + C83558 + C83545 * C354) *
                C153454 * C153709 +
            (C93770 + C93771 + C93772) * C153454 * C153716 +
            C148523 * C116029) *
               C2030 -
           ((C97363 + C97362 + C97361) * C153454 * C116029 +
            (C93773 + C93774 + C93775) * C153454 * C153716 +
            (C93772 + C93771 + C93770) * C153454 * C153709) *
               C153591) *
              C320 +
          (((C94775 + C94776 + C94777) * C153454 * C153709 +
            (C95579 + C95580 + C95581) * C153454 * C153716 +
            (C149853 + C149854 + C149855) * C153454 * C116029) *
               C153591 -
           (C149852 * C116029 + (C94777 + C94776 + C94775) * C153454 * C153716 +
            (C83553 * C1319 + C83874 + C83874 + C83545 * C1329 +
             C152059 * C330 + C83875 + C83875 + C153674 * C354 +
             C152071 * C329 + C83876 + C83876 + C153667 * C353) *
                C153454 * C153709) *
               C2030) *
              C321 +
          (((C152071 * C330 + C83877 + C83877 + C153667 * C354 +
             C152059 * C1319 + C83878 + C83878 + C153674 * C1329 +
             C83553 * C3127 + C83879 + C83879 + C83545 * C3135) *
                C153454 * C153709 +
            (C96566 + C96567 + C96568) * C153454 * C153716 +
            (C150597 + C150598 + C150599) * C153454 * C116029) *
               C2030 -
           ((C83553 * C30190 + C150588 + C150588 + C83545 * C30194 +
             C152059 * C30191 + C150589 + C150589 + C153674 * C30195 +
             C152071 * C6305 + C150590 + C150590 + C153667 * C6317) *
                C153454 * C116029 +
            (C150599 + C150598 + C150597) * C153454 * C153716 +
            (C96568 + C96567 + C96566) * C153454 * C153709) *
               C153591) *
              C322) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C152071 * C136 + C83556 + C83556 + C153667 * C152 +
             C152059 * C329 + C83557 + C83557 + C153674 * C353 + C83553 * C330 +
             C83558 + C83558 + C83545 * C354) *
                C153454 * C153709 +
            (C93770 + C93771 + C93772) * C153454 * C153716 +
            C148523 * C116029) *
               C2030 -
           ((C97363 + C97362 + C97361) * C153454 * C116029 +
            (C93773 + C93774 + C93775) * C153454 * C153716 +
            (C93772 + C93771 + C93770) * C153454 * C153709) *
               C153591) *
              C153511 * C1225 +
          ((C93751 * C153454 * C153709 + C93757 * C153454 * C153716 +
            (C93776 + C93777 + C93778) * C153454 * C116029) *
               C153591 -
           (C148521 * C116029 + C93756 * C153454 * C153716 +
            (C83624 + C83623 + C83622) * C153454 * C153709) *
               C2030) *
              C153511 * C1226 +
          ((C83636 * C153454 * C153709 + C94360 * C153454 * C153716 +
            (C84239 + C84240 + C84241) * C153454 * C116029) *
               C2030 -
           ((C83553 * C6301 + C86967 + C86967 + C83545 * C6313 +
             C152059 * C6302 + C86968 + C86968 + C153674 * C6314 +
             C152071 * C2242 + C86969 + C86969 + C153667 * C2252) *
                C153454 * C116029 +
            (C84241 + C84240 + C84239) * C153454 * C153716 +
            C84708 * C153454 * C153709) *
               C153591) *
              C153511 * C1227)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((C152071 * C136 + C83556 + C83556 + C153667 * C152 + C152059 * C329 +
            C83557 + C83557 + C153674 * C353 + C83553 * C330 + C83558 + C83558 +
            C83545 * C354) *
               C153454 * C153709 +
           (C93770 + C93771 + C93772) * C153454 * C153716 + C148523 * C116029) *
              C2236 -
          (C151196 * C116029 + (C93773 + C93774 + C93775) * C153454 * C153716 +
           (C93772 + C93771 + C93770) * C153454 * C153709) *
              C2237 +
          (C148523 * C153709 + (C97361 + C97362 + C97363) * C153454 * C153716 +
           (C151200 + C151201 + C151202) * C153454 * C116029) *
              C2238 -
          ((C83553 * C34006 + C151189 + C151189 + C83545 * C34010 +
            C152059 * C34007 + C151190 + C151190 + C153674 * C34011 +
            C152071 * C10466 + C151191 + C151191 + C153667 * C10472) *
               C153454 * C116029 +
           (C151202 + C151201 + C151200) * C153454 * C153716 +
           C151196 * C153709) *
              C2239) *
         C153511 * C153492) /
            (p * q * std::sqrt(p + q));
    d2ee[103] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((C152071 * C136 + C83556 + C83556 + C153667 * C152 +
             C152059 * C329 + C83557 + C83557 + C153674 * C353 + C83553 * C330 +
             C83558 + C83558 + C83545 * C354) *
                C153454 * C153709 +
            (C93770 + C93771 + C93772) * C153454 * C153716 +
            C148523 * C116029) *
               C153910 -
           (C151196 * C116029 + (C93773 + C93774 + C93775) * C153454 * C153716 +
            (C93772 + C93771 + C93770) * C153454 * C153709) *
               C153911 +
           (C148523 * C153709 + (C97361 + C97362 + C97363) * C153454 * C153716 +
            (C151200 + C151201 + C151202) * C153454 * C116029) *
               C2546) *
              C153511 * C153829 +
          ((C93751 * C153454 * C153709 + C93757 * C153454 * C153716 +
            (C93776 + C93777 + C93778) * C153454 * C116029) *
               C153911 -
           (C148521 * C116029 + C93756 * C153454 * C153716 +
            (C83624 + C83623 + C83622) * C153454 * C153709) *
               C153910 -
           ((C83553 * C31196 + C97349 + C97349 + C83545 * C31200 +
             C152059 * C9116 + C97350 + C97350 + C153674 * C9122 +
             C152071 * C7674 + C97351 + C97351 + C153667 * C7682) *
                C153454 * C116029 +
            (C93778 + C93777 + C93776) * C153454 * C153716 +
            C148521 * C153709) *
               C2546) *
              C153511 * C153498)) /
        (p * q * std::sqrt(p + q));
    d2ee[104] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C152071 * C136 + C83556 + C83556 + C153667 * C152 +
             C152059 * C329 + C83557 + C83557 + C153674 * C353 + C83553 * C330 +
             C83558 + C83558 + C83545 * C354) *
                C153454 * C153709 +
            (C93770 + C93771 + C93772) * C153454 * C153716 +
            C148523 * C116029) *
               C2030 -
           ((C97363 + C97362 + C97361) * C153454 * C116029 +
            (C93773 + C93774 + C93775) * C153454 * C153716 +
            (C93772 + C93771 + C93770) * C153454 * C153709) *
               C153591) *
              C153511 * C1225 +
          ((C93751 * C153454 * C153709 + C93757 * C153454 * C153716 +
            (C93776 + C93777 + C93778) * C153454 * C116029) *
               C153591 -
           (C148521 * C116029 + C93756 * C153454 * C153716 +
            (C83624 + C83623 + C83622) * C153454 * C153709) *
               C2030) *
              C153511 * C1226 +
          ((C83636 * C153454 * C153709 + C94360 * C153454 * C153716 +
            (C84239 + C84240 + C84241) * C153454 * C116029) *
               C2030 -
           ((C83553 * C6301 + C86967 + C86967 + C83545 * C6313 +
             C152059 * C6302 + C86968 + C86968 + C153674 * C6314 +
             C152071 * C2242 + C86969 + C86969 + C153667 * C2252) *
                C153454 * C116029 +
            (C84241 + C84240 + C84239) * C153454 * C153716 +
            C84708 * C153454 * C153709) *
               C153591) *
              C153511 * C1227)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C152071 * C136 + C83556 + C83556 + C153667 * C152 +
             C152059 * C329 + C83557 + C83557 + C153674 * C353 + C83553 * C330 +
             C83558 + C83558 + C83545 * C354) *
                C153454 * C153709 +
            (C93770 + C93771 + C93772) * C153454 * C153716 +
            C148523 * C116029) *
               C2030 -
           ((C97363 + C97362 + C97361) * C153454 * C116029 +
            (C93773 + C93774 + C93775) * C153454 * C153716 +
            (C93772 + C93771 + C93770) * C153454 * C153709) *
               C153591) *
              C320 +
          (((C94775 + C94776 + C94777) * C153454 * C153709 +
            (C95579 + C95580 + C95581) * C153454 * C153716 +
            (C149853 + C149854 + C149855) * C153454 * C116029) *
               C153591 -
           (C149852 * C116029 + (C94777 + C94776 + C94775) * C153454 * C153716 +
            (C83553 * C1319 + C83874 + C83874 + C83545 * C1329 +
             C152059 * C330 + C83875 + C83875 + C153674 * C354 +
             C152071 * C329 + C83876 + C83876 + C153667 * C353) *
                C153454 * C153709) *
               C2030) *
              C321 +
          (((C152071 * C330 + C83877 + C83877 + C153667 * C354 +
             C152059 * C1319 + C83878 + C83878 + C153674 * C1329 +
             C83553 * C3127 + C83879 + C83879 + C83545 * C3135) *
                C153454 * C153709 +
            (C96566 + C96567 + C96568) * C153454 * C153716 +
            (C150597 + C150598 + C150599) * C153454 * C116029) *
               C2030 -
           ((C83553 * C30190 + C150588 + C150588 + C83545 * C30194 +
             C152059 * C30191 + C150589 + C150589 + C153674 * C30195 +
             C152071 * C6305 + C150590 + C150590 + C153667 * C6317) *
                C153454 * C116029 +
            (C150599 + C150598 + C150597) * C153454 * C153716 +
            (C96568 + C96567 + C96566) * C153454 * C153709) *
               C153591) *
              C322) *
         C153492) /
            (p * q * std::sqrt(p + q));
    d2ee[105] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C74251 * C136 + C74260 + C74260 + C153932 * C152 + C74253 * C329 +
             C74261 + C74261 + C153928 * C353 + C74255 * C330 + C74262 +
             C74262 + C153918 * C354 + C74257 * C1319 + C74263 + C74263 +
             C153860 * C1329) *
                C153454 * C98459 +
            (C130867 + C130868 + C130869 + C130870) * C153454 * C153713) *
               C153527 * C153837 -
           ((C74257 * C5703 + C75553 + C75553 + C153860 * C5709 +
             C74255 * C4303 + C75552 + C75552 + C153918 * C4311 +
             C74253 * C1892 + C75551 + C75551 + C153928 * C1902 +
             C74251 * C1057 + C75550 + C75550 + C153932 * C1069) *
                C153454 * C153713 +
            (C74257 * C3127 + C74546 + C74546 + C153860 * C3135 +
             C74255 * C1319 + C74547 + C74547 + C153918 * C1329 +
             C74253 * C330 + C74548 + C74548 + C153928 * C354 + C74251 * C329 +
             C74549 + C74549 + C153932 * C353) *
                C153454 * C98459) *
               C153527 * C153563) *
              C153906 +
          (((C74593 + C74592 + C74591 + C74590) * C153454 * C98459 +
            (C75578 + C75579 + C75580 + C75581) * C153454 * C153713) *
               C153527 * C153563 -
           ((C74848 + C74849 + C74850 + C74851) * C153454 * C153713 +
            (C74331 + C74330 + C74329 + C74328) * C153454 * C98459) *
               C153527 * C153837) *
              C153907 +
          (((C74335 + C74334 + C74333 + C74332) * C153454 * C98459 +
            (C75288 + C75289 + C75290 + C75291) * C153454 * C153713) *
               C153527 * C153837 -
           ((C74257 * C5701 + C75566 + C75566 + C153860 * C5707 +
             C74255 * C4305 + C75567 + C75567 + C153918 * C4313 +
             C74253 * C1890 + C75568 + C75568 + C153928 * C1900 +
             C74251 * C1059 + C75569 + C75569 + C153932 * C1071) *
                C153454 * C153713 +
            (C75073 + C75072 + C75071 + C75070) * C153454 * C98459) *
               C153527 * C153563) *
              C752)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
              C70427 + C70427 + C153671 * C353) *
                 C153922 +
             (C70480 + C70481) * C153903 + C70490 * C153874) *
                C98459 +
            ((C78815 + C78816) * C153922 + C78756 * C153903 +
             C79422 * C153874) *
                C153713) *
               C153527 * C153837 -
           ((C88776 * C153874 + C79829 * C153903 +
             (C79845 + C79844) * C153922) *
                C153713 +
            (C71237 * C153874 + (C70760 + C70761) * C153903 +
             (C70423 * C330 + C70706 + C70706 + C153671 * C354 + C70421 * C329 +
              C70707 + C70707 + C70415 * C353) *
                 C153922) *
                C98459) *
               C153527 * C153563) *
              C153906 +
          ((((C70761 + C70760) * C153922 + (C70759 + C70758) * C153903 +
             (C70757 + C70756) * C153874) *
                C98459 +
            (C79814 * C153922 + C89454 * C153903 +
             (C71754 + C71755) * C153874) *
                C153713) *
               C153527 * C153563 -
           ((C71444 * C153874 + C71445 * C153903 + C78771 * C153922) * C153713 +
            (C70493 * C153874 + (C70483 + C70482) * C153903 +
             (C70481 + C70480) * C153922) *
                C98459) *
               C153527 * C153837) *
              C153907 +
          (((C70490 * C153922 + C70491 * C153903 +
             (C70487 + C70486) * C153874) *
                C98459 +
            (C79422 * C153922 + C89067 * C153903 +
             (C71456 + C71457) * C153874) *
                C153713) *
               C153527 * C153837 -
           (((C70423 * C1888 + C71736 + C71736 + C153671 * C1898 +
              C70421 * C1061 + C71737 + C71737 + C70415 * C1073) *
                 C153874 +
             (C71755 + C71754) * C153903 + C88776 * C153922) *
                C153713 +
            ((C71249 + C71248) * C153874 + C71236 * C153903 +
             C71237 * C153922) *
                C98459) *
               C153527 * C153563) *
              C752)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
             C70427 + C70427 + C153671 * C353) *
                C153454 * C153933 +
            (C78815 + C78816) * C153454 * C153930 + C134463 * C153921 +
            C134467 * C153867) *
               C153527 * C153837 -
           ((C80649 + C80648) * C153454 * C153867 + C80637 * C153454 * C153921 +
            (C79845 + C79844) * C153454 * C153930 +
            (C70423 * C330 + C70706 + C70706 + C153671 * C354 + C70421 * C329 +
             C70707 + C70707 + C70415 * C353) *
                C153454 * C153933) *
               C153527 * C153563) *
              C153906 +
          (((C70761 + C70760) * C153454 * C153933 + C79814 * C153454 * C153930 +
            C79819 * C153454 * C153921 +
            (C79848 + C79849) * C153454 * C153867) *
               C153527 * C153563 -
           (C134465 * C153867 + C134466 * C153921 + C78771 * C153454 * C153930 +
            (C70481 + C70480) * C153454 * C153933) *
               C153527 * C153837) *
              C153907 +
          ((C70490 * C153454 * C153933 + C79422 * C153454 * C153930 +
            C79423 * C153454 * C153921 +
            (C78825 + C78826) * C153454 * C153867) *
               C153527 * C153837 -
           ((C70423 * C6301 + C79830 + C79830 + C153671 * C6313 +
             C70421 * C6302 + C79831 + C79831 + C70415 * C6314) *
                C153454 * C153867 +
            (C79131 + C79130) * C153454 * C153921 + C88776 * C153454 * C153930 +
            C71237 * C153454 * C153933) *
               C153527 * C153563) *
              C752)) /
            (p * q * std::sqrt(p + q));
    d2ee[106] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C74251 * C136 + C74260 + C74260 + C153932 * C152 + C74253 * C329 +
              C74261 + C74261 + C153928 * C353 + C74255 * C330 + C74262 +
              C74262 + C153918 * C354 + C74257 * C1319 + C74263 + C74263 +
              C153860 * C1329) *
                 C153454 * C98459 +
             (C130867 + C130868 + C130869 + C130870) * C153454 * C153713) *
                C153838 -
            ((C130871 + C130872 + C130873 + C130874) * C153454 * C153713 +
             (C130870 + C130869 + C130868 + C130867) * C153454 * C98459) *
                C153591) *
               C153837 +
           (((C131537 + C131538 + C131539 + C131540) * C153454 * C98459 +
             (C74251 * C1461 + C76115 + C76115 + C153932 * C1471 +
              C74253 * C3441 + C76114 + C76114 + C153928 * C3449 +
              C74255 * C4959 + C76113 + C76113 + C153918 * C4965 +
              C74257 * C28650 + C76112 + C76112 + C153860 * C28654) *
                 C153454 * C153713) *
                C153591 -
            ((C131540 + C131539 + C131538 + C131537) * C153454 * C153713 +
             (C74257 * C3127 + C74546 + C74546 + C153860 * C3135 +
              C74255 * C1319 + C74547 + C74547 + C153918 * C1329 +
              C74253 * C330 + C74548 + C74548 + C153928 * C354 + C74251 * C329 +
              C74549 + C74549 + C153932 * C353) *
                 C153454 * C98459) *
                C153838) *
               C153563) *
              C323 +
          ((((C74851 + C74850 + C74849 + C74848) * C153454 * C98459 +
             (C74852 + C74853 + C74854 + C74855) * C153454 * C153713) *
                C153591 -
            ((C74848 + C74849 + C74850 + C74851) * C153454 * C153713 +
             (C74331 + C74330 + C74329 + C74328) * C153454 * C98459) *
                C153838) *
               C153837 +
           (((C74593 + C74592 + C74591 + C74590) * C153454 * C98459 +
             (C75578 + C75579 + C75580 + C75581) * C153454 * C153713) *
                C153838 -
            ((C74257 * C28651 + C76108 + C76108 + C153860 * C28655 +
              C74255 * C4958 + C76109 + C76109 + C153918 * C4964 +
              C74253 * C3442 + C76110 + C76110 + C153928 * C3450 +
              C74251 * C1460 + C76111 + C76111 + C153932 * C1470) *
                 C153454 * C153713 +
             (C75581 + C75580 + C75579 + C75578) * C153454 * C98459) *
                C153591) *
               C153563) *
              C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
               C70427 + C70427 + C153671 * C353) *
                  C153922 +
              (C70480 + C70481) * C153903 + C70490 * C153874) *
                 C98459 +
             ((C78815 + C78816) * C153922 + C78756 * C153903 +
              C79422 * C153874) *
                 C153713) *
                C153838 -
            ((C78784 * C153874 + C78770 * C153903 +
              (C78818 + C78817) * C153922) *
                 C153713 +
             (C71445 * C153874 + C78771 * C153903 +
              (C78816 + C78815) * C153922) *
                 C98459) *
                C153591) *
               C153837 +
           ((((C79844 + C79845) * C153922 + C79814 * C153903 +
              C89454 * C153874) *
                 C98459 +
             ((C79846 + C79847) * C153922 + C79819 * C153903 +
              (C79130 + C79131) * C153874) *
                 C153713) *
                C153591 -
            ((C88776 * C153874 + C79829 * C153903 +
              (C79845 + C79844) * C153922) *
                 C153713 +
             (C71237 * C153874 + (C70760 + C70761) * C153903 +
              (C70423 * C330 + C70706 + C70706 + C153671 * C354 +
               C70421 * C329 + C70707 + C70707 + C70415 * C353) *
                  C153922) *
                 C98459) *
                C153838) *
               C153563) *
              C323 +
          ((((C78756 * C153922 + C79422 * C153903 + C89067 * C153874) * C98459 +
             (C78761 * C153922 + C79423 * C153903 +
              (C71040 + C71041) * C153874) *
                 C153713) *
                C153591 -
            ((C71444 * C153874 + C71445 * C153903 + C78771 * C153922) *
                 C153713 +
             (C70493 * C153874 + (C70483 + C70482) * C153903 +
              (C70481 + C70480) * C153922) *
                 C98459) *
                C153838) *
               C153837 +
           ((((C70761 + C70760) * C153922 + (C70759 + C70758) * C153903 +
              (C70757 + C70756) * C153874) *
                 C98459 +
             (C79814 * C153922 + C89454 * C153903 +
              (C71754 + C71755) * C153874) *
                 C153713) *
                C153838 -
            (((C70423 * C3444 + C72282 + C72282 + C153671 * C3452 +
               C70421 * C1458 + C72283 + C72283 + C70415 * C1468) *
                  C153874 +
              (C79131 + C79130) * C153903 + C79828 * C153922) *
                 C153713 +
             ((C71755 + C71754) * C153874 + C88776 * C153903 +
              C79829 * C153922) *
                 C98459) *
                C153591) *
               C153563) *
              C153498)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
              C70427 + C70427 + C153671 * C353) *
                 C153454 * C153933 +
             (C78815 + C78816) * C153454 * C153930 + C134463 * C153921 +
             C134467 * C153867) *
                C153838 -
            ((C82431 + C82430) * C153454 * C153867 +
             C82415 * C153454 * C153921 +
             (C78818 + C78817) * C153454 * C153930 +
             (C78816 + C78815) * C153454 * C153933) *
                C153591) *
               C153837 +
           (((C79844 + C79845) * C153454 * C153933 +
             (C79846 + C79847) * C153454 * C153930 +
             (C80648 + C80649) * C153454 * C153921 +
             (C70421 * C9117 + C80641 + C80641 + C70415 * C9123 +
              C70423 * C31195 + C80640 + C80640 + C153671 * C31199) *
                 C153454 * C153867) *
                C153591 -
            ((C80649 + C80648) * C153454 * C153867 +
             C80637 * C153454 * C153921 +
             (C79845 + C79844) * C153454 * C153930 +
             (C70423 * C330 + C70706 + C70706 + C153671 * C354 + C70421 * C329 +
              C70707 + C70707 + C70415 * C353) *
                 C153454 * C153933) *
                C153838) *
               C153563) *
              C323 +
          (((C78756 * C153454 * C153933 + C78761 * C153454 * C153930 +
             C78829 * C153454 * C153921 +
             (C78823 + C78824) * C153454 * C153867) *
                C153591 -
            (C134465 * C153867 + C134466 * C153921 +
             C78771 * C153454 * C153930 +
             (C70481 + C70480) * C153454 * C153933) *
                C153838) *
               C153837 +
           (((C70761 + C70760) * C153454 * C153933 +
             C79814 * C153454 * C153930 + C79819 * C153454 * C153921 +
             (C79848 + C79849) * C153454 * C153867) *
                C153838 -
            ((C70423 * C31196 + C80638 + C80638 + C153671 * C31200 +
              C70421 * C9116 + C80639 + C80639 + C70415 * C9122) *
                 C153454 * C153867 +
             (C79849 + C79848) * C153454 * C153921 +
             C79828 * C153454 * C153930 + C79829 * C153454 * C153933) *
                C153591) *
               C153563) *
              C153498)) /
            (p * q * std::sqrt(p + q));
    d2ee[107] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C70421 * C136 + C70426 + C70426 + C70415 * C152 +
                 C70423 * C329 + C70427 + C70427 + C153671 * C353) *
                    C153922 +
                (C70480 + C70481) * C153903 + C70490 * C153874) *
                   C98459 +
               ((C78815 + C78816) * C153922 + C78756 * C153903 +
                C79422 * C153874) *
                   C153713) *
                  C153527 * C153511 * C130 -
              ((C71444 * C153874 + C71445 * C153903 + C78771 * C153922) *
                   C153713 +
               (C70493 * C153874 + (C70483 + C70482) * C153903 +
                (C70481 + C70480) * C153922) *
                   C98459) *
                  C153527 * C153511 * C131 +
              ((C70490 * C153922 + C70491 * C153903 +
                (C70487 + C70486) * C153874) *
                   C98459 +
               (C79422 * C153922 + C89067 * C153903 +
                (C71456 + C71457) * C153874) *
                   C153713) *
                  C153527 * C153511 * C132 -
              (((C70423 * C1062 + C71450 + C71450 + C153671 * C1074 +
                 C70421 * C548 + C71451 + C71451 + C70415 * C572) *
                    C153874 +
                (C71457 + C71456) * C153903 + C71444 * C153922) *
                   C153713 +
               ((C70489 + C70488) * C153874 + C70492 * C153903 +
                C70493 * C153922) *
                   C98459) *
                  C153527 * C153511 * C133) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C70421 * C136 + C70426 + C70426 + C70415 * C152 +
                  C70423 * C329 + C70427 + C70427 + C153671 * C353) *
                     C153922 +
                 (C70480 + C70481) * C153903 + C70490 * C153874) *
                    C98459 +
                ((C78815 + C78816) * C153922 + C78756 * C153903 +
                 C79422 * C153874) *
                    C153713) *
                   C153527 * C320 -
               ((C88776 * C153874 + C79829 * C153903 +
                 (C79845 + C79844) * C153922) *
                    C153713 +
                (C71237 * C153874 + (C70760 + C70761) * C153903 +
                 (C70423 * C330 + C70706 + C70706 + C153671 * C354 +
                  C70421 * C329 + C70707 + C70707 + C70415 * C353) *
                     C153922) *
                    C98459) *
                   C153527 * C321 +
               (((C70421 * C330 + C70708 + C70708 + C70415 * C354 +
                  C70423 * C1319 + C70709 + C70709 + C153671 * C1329) *
                     C153922 +
                 (C70762 + C70763) * C153903 + (C70764 + C70765) * C153874) *
                    C98459 +
                ((C81636 + C81637) * C153922 + (C78458 + C78459) * C153903 +
                 (C88194 + C88195) * C153874) *
                    C153713) *
                   C153527 * C322) *
                  C323 +
              ((((C70761 + C70760) * C153922 + (C70759 + C70758) * C153903 +
                 (C70757 + C70756) * C153874) *
                    C98459 +
                (C79814 * C153922 + C89454 * C153903 +
                 (C71754 + C71755) * C153874) *
                    C153713) *
                   C153527 * C321 -
               ((C71444 * C153874 + C71445 * C153903 + C78771 * C153922) *
                    C153713 +
                (C70493 * C153874 + (C70483 + C70482) * C153903 +
                 (C70481 + C70480) * C153922) *
                    C98459) *
                   C153527 * C320 -
               (((C70423 * C4306 + C72936 + C72936 + C153671 * C4314 +
                  C70421 * C1889 + C72937 + C72937 + C70415 * C1899) *
                     C153874 +
                 (C88195 + C88194) * C153903 + (C78459 + C78458) * C153922) *
                    C153713 +
                ((C70767 + C70766) * C153874 + (C70765 + C70764) * C153903 +
                 (C70763 + C70762) * C153922) *
                    C98459) *
                   C153527 * C322) *
                  C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
              C70427 + C70427 + C153671 * C353) *
                 C153922 +
             (C70480 + C70481) * C153903 + C70490 * C153874) *
                C98459 +
            ((C78815 + C78816) * C153922 + C78756 * C153903 +
             C79422 * C153874) *
                C153713) *
               C535 -
           ((C78784 * C153874 + C78770 * C153903 +
             (C78818 + C78817) * C153922) *
                C153713 +
            (C71445 * C153874 + C78771 * C153903 +
             (C78816 + C78815) * C153922) *
                C98459) *
               C536 +
           ((C78827 * C153922 + C78761 * C153903 + C79423 * C153874) * C98459 +
            ((C78822 + C78821) * C153922 + C78829 * C153903 +
             (C78825 + C78826) * C153874) *
                C153713) *
               C537) *
              C153511 * C323 +
          (((C78756 * C153922 + C79422 * C153903 + C89067 * C153874) * C98459 +
            (C78761 * C153922 + C79423 * C153903 +
             (C71040 + C71041) * C153874) *
                C153713) *
               C536 -
           ((C71444 * C153874 + C71445 * C153903 + C78771 * C153922) * C153713 +
            (C70493 * C153874 + (C70483 + C70482) * C153903 +
             (C70481 + C70480) * C153922) *
                C98459) *
               C535 -
           (((C70423 * C8488 + C73462 + C73462 + C153671 * C8490 +
              C70421 * C2241 + C73463 + C73463 + C70415 * C2251) *
                 C153874 +
             (C78826 + C78825) * C153903 + C78828 * C153922) *
                C153713 +
            ((C71041 + C71040) * C153874 + C78784 * C153903 +
             C78770 * C153922) *
                C98459) *
               C537) *
              C153511 * C153498)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C74251 * C136 + C74260 + C74260 + C153932 * C152 + C74253 * C329 +
            C74261 + C74261 + C153928 * C353 + C74255 * C330 + C74262 + C74262 +
            C153918 * C354 + C74257 * C1319 + C74263 + C74263 +
            C153860 * C1329) *
               C153454 * C98459 +
           (C74251 * C542 + C74807 + C74807 + C153932 * C566 + C74253 * C1057 +
            C74806 + C74806 + C153928 * C1069 + C74255 * C1892 + C74805 +
            C74805 + C153918 * C1902 + C74257 * C4303 + C74804 + C74804 +
            C153860 * C4311) *
               C153454 * C153713) *
              C153527 * C153511 * C130 -
          ((C74848 + C74849 + C74850 + C74851) * C153454 * C153713 +
           (C74331 + C74330 + C74329 + C74328) * C153454 * C98459) *
              C153527 * C153511 * C131 +
          ((C74335 + C74334 + C74333 + C74332) * C153454 * C98459 +
           (C75288 + C75289 + C75290 + C75291) * C153454 * C153713) *
              C153527 * C153511 * C132 -
          ((C74257 * C4306 + C75276 + C75276 + C153860 * C4314 +
            C74255 * C1889 + C75277 + C75277 + C153918 * C1899 +
            C74253 * C1060 + C75278 + C75278 + C153928 * C1072 + C74251 * C539 +
            C75279 + C75279 + C153932 * C563) *
               C153454 * C153713 +
           (C74339 + C74338 + C74337 + C74336) * C153454 * C98459) *
              C153527 * C153511 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C74251 * C136 + C74260 + C74260 + C153932 * C152 + C74253 * C329 +
             C74261 + C74261 + C153928 * C353 + C74255 * C330 + C74262 +
             C74262 + C153918 * C354 + C74257 * C1319 + C74263 + C74263 +
             C153860 * C1329) *
                C153454 * C98459 +
            (C74251 * C542 + C74807 + C74807 + C153932 * C566 + C74253 * C1057 +
             C74806 + C74806 + C153928 * C1069 + C74255 * C1892 + C74805 +
             C74805 + C153918 * C1902 + C74257 * C4303 + C74804 + C74804 +
             C153860 * C4311) *
                C153454 * C153713) *
               C153527 * C320 -
           ((C74257 * C5703 + C75553 + C75553 + C153860 * C5709 +
             C74255 * C4303 + C75552 + C75552 + C153918 * C4311 +
             C74253 * C1892 + C75551 + C75551 + C153928 * C1902 +
             C74251 * C1057 + C75550 + C75550 + C153932 * C1069) *
                C153454 * C153713 +
            (C74257 * C3127 + C74546 + C74546 + C153860 * C3135 +
             C74255 * C1319 + C74547 + C74547 + C153918 * C1329 +
             C74253 * C330 + C74548 + C74548 + C153928 * C354 + C74251 * C329 +
             C74549 + C74549 + C153932 * C353) *
                C153454 * C98459) *
               C153527 * C321 +
           ((C74251 * C330 + C74550 + C74550 + C153932 * C354 + C74253 * C1319 +
             C74551 + C74551 + C153928 * C1329 + C74255 * C3127 + C74552 +
             C74552 + C153918 * C3135 + C74257 * C4723 + C74553 + C74553 +
             C153860 * C4729) *
                C153454 * C98459 +
            (C74251 * C1892 + C76769 + C76769 + C153932 * C1902 +
             C74253 * C4303 + C76768 + C76768 + C153928 * C4311 +
             C74255 * C5703 + C76767 + C76767 + C153918 * C5709 +
             C74257 * C29092 + C76766 + C76766 + C153860 * C29096) *
                C153454 * C153713) *
               C153527 * C322) *
              C323 +
          (((C74593 + C74592 + C74591 + C74590) * C153454 * C98459 +
            (C75578 + C75579 + C75580 + C75581) * C153454 * C153713) *
               C153527 * C321 -
           ((C74848 + C74849 + C74850 + C74851) * C153454 * C153713 +
            (C74331 + C74330 + C74329 + C74328) * C153454 * C98459) *
               C153527 * C320 -
           ((C74257 * C29093 + C76762 + C76762 + C153860 * C29097 +
             C74255 * C5702 + C76763 + C76763 + C153918 * C5708 +
             C74253 * C4304 + C76764 + C76764 + C153928 * C4312 +
             C74251 * C1891 + C76765 + C76765 + C153932 * C1901) *
                C153454 * C153713 +
            (C74597 + C74596 + C74595 + C74594) * C153454 * C98459) *
               C153527 * C322) *
              C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C74251 * C136 + C74260 + C74260 + C153932 * C152 + C74253 * C329 +
             C74261 + C74261 + C153928 * C353 + C74255 * C330 + C74262 +
             C74262 + C153918 * C354 + C74257 * C1319 + C74263 + C74263 +
             C153860 * C1329) *
                C153454 * C98459 +
            (C130867 + C130868 + C130869 + C130870) * C153454 * C153713) *
               C535 -
           ((C130871 + C130872 + C130873 + C130874) * C153454 * C153713 +
            (C130870 + C130869 + C130868 + C130867) * C153454 * C98459) *
               C536 +
           ((C130874 + C130873 + C130872 + C130871) * C153454 * C98459 +
            (C74251 * C2244 + C77295 + C77295 + C153932 * C2254 +
             C74253 * C6306 + C77294 + C77294 + C153928 * C6318 +
             C74255 * C6305 + C77293 + C77293 + C153918 * C6317 +
             C74257 * C30191 + C77292 + C77292 + C153860 * C30195) *
                C153454 * C153713) *
               C537) *
              C153511 * C323 +
          (((C74851 + C74850 + C74849 + C74848) * C153454 * C98459 +
            (C74852 + C74853 + C74854 + C74855) * C153454 * C153713) *
               C536 -
           ((C74848 + C74849 + C74850 + C74851) * C153454 * C153713 +
            (C74331 + C74330 + C74329 + C74328) * C153454 * C98459) *
               C535 -
           ((C74257 * C31999 + C77288 + C77288 + C153860 * C32001 +
             C74255 * C6303 + C77289 + C77289 + C153918 * C6315 +
             C74253 * C6304 + C77290 + C77290 + C153928 * C6316 +
             C74251 * C2243 + C77291 + C77291 + C153932 * C2253) *
                C153454 * C153713 +
            (C74855 + C74854 + C74853 + C74852) * C153454 * C98459) *
               C537) *
              C153511 * C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
            C70427 + C70427 + C153671 * C353) *
               C153454 * C153933 +
           (C78815 + C78816) * C153454 * C153930 + C78827 * C153454 * C153921 +
           (C78822 + C78821) * C153454 * C153867) *
              C153527 * C153511 * C130 -
          (C78828 * C153454 * C153867 + C78770 * C153454 * C153921 +
           C78771 * C153454 * C153930 + (C70481 + C70480) * C153454 * C153933) *
              C153527 * C153511 * C131 +
          (C70490 * C153454 * C153933 + C79422 * C153454 * C153930 +
           C79423 * C153454 * C153921 + (C78825 + C78826) * C153454 * C153867) *
              C153527 * C153511 * C132 -
          ((C70423 * C8488 + C73462 + C73462 + C153671 * C8490 +
            C70421 * C2241 + C73463 + C73463 + C70415 * C2251) *
               C153454 * C153867 +
           (C71041 + C71040) * C153454 * C153921 + C71444 * C153454 * C153930 +
           C70493 * C153454 * C153933) *
              C153527 * C153511 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
             C70427 + C70427 + C153671 * C353) *
                C153454 * C153933 +
            (C78815 + C78816) * C153454 * C153930 + C78827 * C153454 * C153921 +
            (C78822 + C78821) * C153454 * C153867) *
               C153527 * C320 -
           ((C80649 + C80648) * C153454 * C153867 + C80637 * C153454 * C153921 +
            (C79845 + C79844) * C153454 * C153930 +
            (C70423 * C330 + C70706 + C70706 + C153671 * C354 + C70421 * C329 +
             C70707 + C70707 + C70415 * C353) *
                C153454 * C153933) *
               C153527 * C321 +
           ((C70421 * C330 + C70708 + C70708 + C70415 * C354 + C70423 * C1319 +
             C70709 + C70709 + C153671 * C1329) *
                C153454 * C153933 +
            (C81636 + C81637) * C153454 * C153930 +
            (C81638 + C81639) * C153454 * C153921 +
            (C70421 * C6305 + C81627 + C81627 + C70415 * C6317 +
             C70423 * C30191 + C81626 + C81626 + C153671 * C30195) *
                C153454 * C153867) *
               C153527 * C322) *
              C323 +
          (((C70761 + C70760) * C153454 * C153933 + C79814 * C153454 * C153930 +
            C79819 * C153454 * C153921 +
            (C79848 + C79849) * C153454 * C153867) *
               C153527 * C321 -
           (C78828 * C153454 * C153867 + C78770 * C153454 * C153921 +
            C78771 * C153454 * C153930 +
            (C70481 + C70480) * C153454 * C153933) *
               C153527 * C320 -
           ((C70423 * C31999 + C81624 + C81624 + C153671 * C32001 +
             C70421 * C6303 + C81625 + C81625 + C70415 * C6315) *
                C153454 * C153867 +
            (C78461 + C78460) * C153454 * C153921 +
            (C78459 + C78458) * C153454 * C153930 +
            (C70763 + C70762) * C153454 * C153933) *
               C153527 * C322) *
              C153498)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
             C70427 + C70427 + C153671 * C353) *
                C153454 * C153933 +
            (C78815 + C78816) * C153454 * C153930 + C134463 * C153921 +
            C134467 * C153867) *
               C535 -
           ((C82431 + C82430) * C153454 * C153867 + C82415 * C153454 * C153921 +
            (C78818 + C78817) * C153454 * C153930 +
            (C78816 + C78815) * C153454 * C153933) *
               C536 +
           (C134463 * C153933 + C134467 * C153930 +
            (C82430 + C82431) * C153454 * C153921 +
            (C70421 * C10466 + C82423 + C82423 + C70415 * C10472 +
             C70423 * C34007 + C82422 + C82422 + C153671 * C34011) *
                C153454 * C153867) *
               C537) *
              C153511 * C323 +
          ((C78756 * C153454 * C153933 + C78761 * C153454 * C153930 +
            C78829 * C153454 * C153921 +
            (C78823 + C78824) * C153454 * C153867) *
               C536 -
           (C134465 * C153867 + C134466 * C153921 + C78771 * C153454 * C153930 +
            (C70481 + C70480) * C153454 * C153933) *
               C535 -
           ((C70423 * C56351 + C82420 + C82420 + C153671 * C56353 +
             C70421 * C10465 + C82421 + C82421 + C70415 * C10471) *
                C153454 * C153867 +
            (C78824 + C78823) * C153454 * C153921 + C134465 * C153930 +
            C134466 * C153933) *
               C537) *
              C153511 * C153498)) /
            (p * q * std::sqrt(p + q));
    d2ee[108] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C74251 * C136 + C74260 + C74260 + C153932 * C152 + C74253 * C329 +
             C74261 + C74261 + C153928 * C353 + C74255 * C330 + C74262 +
             C74262 + C153918 * C354 + C74257 * C1319 + C74263 + C74263 +
             C153860 * C1329) *
                C153454 * C98459 +
            (C130867 + C130868 + C130869 + C130870) * C153454 * C153713) *
               C153838 -
           ((C130871 + C130872 + C130873 + C130874) * C153454 * C153713 +
            (C130870 + C130869 + C130868 + C130867) * C153454 * C98459) *
               C153591) *
              C153511 * C153906 +
          (((C74851 + C74850 + C74849 + C74848) * C153454 * C98459 +
            (C74852 + C74853 + C74854 + C74855) * C153454 * C153713) *
               C153591 -
           ((C74848 + C74849 + C74850 + C74851) * C153454 * C153713 +
            (C74331 + C74330 + C74329 + C74328) * C153454 * C98459) *
               C153838) *
              C153511 * C153907 +
          (((C74335 + C74334 + C74333 + C74332) * C153454 * C98459 +
            (C75288 + C75289 + C75290 + C75291) * C153454 * C153713) *
               C153838 -
           ((C74257 * C4957 + C74828 + C74828 + C153860 * C4963 +
             C74255 * C3443 + C74829 + C74829 + C153918 * C3451 +
             C74253 * C1459 + C74830 + C74830 + C153928 * C1469 +
             C74251 * C545 + C74831 + C74831 + C153932 * C569) *
                C153454 * C153713 +
            (C75291 + C75290 + C75289 + C75288) * C153454 * C98459) *
               C153591) *
              C153511 * C752)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
              C70427 + C70427 + C153671 * C353) *
                 C153922 +
             (C70480 + C70481) * C153903 + C70490 * C153874) *
                C98459 +
            ((C78815 + C78816) * C153922 + C78756 * C153903 +
             C79422 * C153874) *
                C153713) *
               C153838 -
           ((C78784 * C153874 + C78770 * C153903 +
             (C78818 + C78817) * C153922) *
                C153713 +
            (C71445 * C153874 + C78771 * C153903 +
             (C78816 + C78815) * C153922) *
                C98459) *
               C153591) *
              C153511 * C153906 +
          (((C78756 * C153922 + C79422 * C153903 + C89067 * C153874) * C98459 +
            (C78761 * C153922 + C79423 * C153903 +
             (C71040 + C71041) * C153874) *
                C153713) *
               C153591 -
           ((C71444 * C153874 + C71445 * C153903 + C78771 * C153922) * C153713 +
            (C70493 * C153874 + (C70483 + C70482) * C153903 +
             (C70481 + C70480) * C153922) *
                C98459) *
               C153838) *
              C153511 * C153907 +
          (((C70490 * C153922 + C70491 * C153903 +
             (C70487 + C70486) * C153874) *
                C98459 +
            (C79422 * C153922 + C89067 * C153903 +
             (C71456 + C71457) * C153874) *
                C153713) *
               C153838 -
           (((C70423 * C1457 + C71004 + C71004 + C153671 * C1467 +
              C70421 * C547 + C71005 + C71005 + C70415 * C571) *
                 C153874 +
             (C71041 + C71040) * C153903 + C78784 * C153922) *
                C153713 +
            ((C71457 + C71456) * C153874 + C71444 * C153903 +
             C71445 * C153922) *
                C98459) *
               C153591) *
              C153511 * C752)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
             C70427 + C70427 + C153671 * C353) *
                C153454 * C153933 +
            (C78815 + C78816) * C153454 * C153930 + C134463 * C153921 +
            C134467 * C153867) *
               C153838 -
           ((C82431 + C82430) * C153454 * C153867 + C82415 * C153454 * C153921 +
            (C78818 + C78817) * C153454 * C153930 +
            (C78816 + C78815) * C153454 * C153933) *
               C153591) *
              C153511 * C153906 +
          ((C78756 * C153454 * C153933 + C78761 * C153454 * C153930 +
            C78829 * C153454 * C153921 +
            (C78823 + C78824) * C153454 * C153867) *
               C153591 -
           (C134465 * C153867 + C134466 * C153921 + C78771 * C153454 * C153930 +
            (C70481 + C70480) * C153454 * C153933) *
               C153838) *
              C153511 * C153907 +
          ((C70490 * C153454 * C153933 + C79422 * C153454 * C153930 +
            C79423 * C153454 * C153921 +
            (C78825 + C78826) * C153454 * C153867) *
               C153838 -
           ((C70423 * C9115 + C78785 + C78785 + C153671 * C9121 +
             C70421 * C7675 + C78786 + C78786 + C70415 * C7683) *
                C153454 * C153867 +
            (C78826 + C78825) * C153454 * C153921 + C78784 * C153454 * C153930 +
            C71445 * C153454 * C153933) *
               C153591) *
              C153511 * C752)) /
            (p * q * std::sqrt(p + q));
    d2ee[109] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
              C70427 + C70427 + C153671 * C353) *
                 C153922 +
             (C70480 + C70481) * C153903 + C70490 * C153874) *
                C98459 +
            ((C78815 + C78816) * C153922 + C78756 * C153903 +
             C79422 * C153874) *
                C153713) *
               C153527 * C320 -
           ((C88776 * C153874 + C79829 * C153903 +
             (C79845 + C79844) * C153922) *
                C153713 +
            (C71237 * C153874 + (C70760 + C70761) * C153903 +
             (C70423 * C330 + C70706 + C70706 + C153671 * C354 + C70421 * C329 +
              C70707 + C70707 + C70415 * C353) *
                 C153922) *
                C98459) *
               C153527 * C321 +
           (((C70421 * C330 + C70708 + C70708 + C70415 * C354 + C70423 * C1319 +
              C70709 + C70709 + C153671 * C1329) *
                 C153922 +
             (C70762 + C70763) * C153903 + (C70764 + C70765) * C153874) *
                C98459 +
            ((C81636 + C81637) * C153922 + (C78458 + C78459) * C153903 +
             (C88194 + C88195) * C153874) *
                C153713) *
               C153527 * C322) *
              C323 +
          ((((C70761 + C70760) * C153922 + (C70759 + C70758) * C153903 +
             (C70757 + C70756) * C153874) *
                C98459 +
            (C79814 * C153922 + C89454 * C153903 +
             (C71754 + C71755) * C153874) *
                C153713) *
               C153527 * C321 -
           ((C71444 * C153874 + C71445 * C153903 + C78771 * C153922) * C153713 +
            (C70493 * C153874 + (C70483 + C70482) * C153903 +
             (C70481 + C70480) * C153922) *
                C98459) *
               C153527 * C320 -
           (((C70423 * C4306 + C72936 + C72936 + C153671 * C4314 +
              C70421 * C1889 + C72937 + C72937 + C70415 * C1899) *
                 C153874 +
             (C88195 + C88194) * C153903 + (C78459 + C78458) * C153922) *
                C153713 +
            ((C70767 + C70766) * C153874 + (C70765 + C70764) * C153903 +
             (C70763 + C70762) * C153922) *
                C98459) *
               C153527 * C322) *
              C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
             C70427 + C70427 + C153671 * C353) *
                C153922 +
            (C70480 + C70481) * C153903 + C70490 * C153874) *
               C98459 +
           ((C78815 + C78816) * C153922 + C78756 * C153903 + C79422 * C153874) *
               C153713) *
              C153527 * C153511 * C130 -
          ((C71444 * C153874 + C71445 * C153903 + C78771 * C153922) * C153713 +
           (C70493 * C153874 + (C70483 + C70482) * C153903 +
            (C70481 + C70480) * C153922) *
               C98459) *
              C153527 * C153511 * C131 +
          ((C70490 * C153922 + C70491 * C153903 + (C70487 + C70486) * C153874) *
               C98459 +
           (C79422 * C153922 + C89067 * C153903 + (C71456 + C71457) * C153874) *
               C153713) *
              C153527 * C153511 * C132 -
          (((C70423 * C1062 + C71450 + C71450 + C153671 * C1074 +
             C70421 * C548 + C71451 + C71451 + C70415 * C572) *
                C153874 +
            (C71457 + C71456) * C153903 + C71444 * C153922) *
               C153713 +
           ((C70489 + C70488) * C153874 + C70492 * C153903 + C70493 * C153922) *
               C98459) *
              C153527 * C153511 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C74251 * C136 + C74260 + C74260 + C153932 * C152 + C74253 * C329 +
            C74261 + C74261 + C153928 * C353 + C74255 * C330 + C74262 + C74262 +
            C153918 * C354 + C74257 * C1319 + C74263 + C74263 +
            C153860 * C1329) *
               C153454 * C98459 +
           (C74251 * C542 + C74807 + C74807 + C153932 * C566 + C74253 * C1057 +
            C74806 + C74806 + C153928 * C1069 + C74255 * C1892 + C74805 +
            C74805 + C153918 * C1902 + C74257 * C4303 + C74804 + C74804 +
            C153860 * C4311) *
               C153454 * C153713) *
              C153527 * C153511 * C130 -
          ((C74848 + C74849 + C74850 + C74851) * C153454 * C153713 +
           (C74331 + C74330 + C74329 + C74328) * C153454 * C98459) *
              C153527 * C153511 * C131 +
          ((C74335 + C74334 + C74333 + C74332) * C153454 * C98459 +
           (C75288 + C75289 + C75290 + C75291) * C153454 * C153713) *
              C153527 * C153511 * C132 -
          ((C74257 * C4306 + C75276 + C75276 + C153860 * C4314 +
            C74255 * C1889 + C75277 + C75277 + C153918 * C1899 +
            C74253 * C1060 + C75278 + C75278 + C153928 * C1072 + C74251 * C539 +
            C75279 + C75279 + C153932 * C563) *
               C153454 * C153713 +
           (C74339 + C74338 + C74337 + C74336) * C153454 * C98459) *
              C153527 * C153511 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C74251 * C136 + C74260 + C74260 + C153932 * C152 + C74253 * C329 +
             C74261 + C74261 + C153928 * C353 + C74255 * C330 + C74262 +
             C74262 + C153918 * C354 + C74257 * C1319 + C74263 + C74263 +
             C153860 * C1329) *
                C153454 * C98459 +
            (C74251 * C542 + C74807 + C74807 + C153932 * C566 + C74253 * C1057 +
             C74806 + C74806 + C153928 * C1069 + C74255 * C1892 + C74805 +
             C74805 + C153918 * C1902 + C74257 * C4303 + C74804 + C74804 +
             C153860 * C4311) *
                C153454 * C153713) *
               C153527 * C320 -
           ((C74257 * C5703 + C75553 + C75553 + C153860 * C5709 +
             C74255 * C4303 + C75552 + C75552 + C153918 * C4311 +
             C74253 * C1892 + C75551 + C75551 + C153928 * C1902 +
             C74251 * C1057 + C75550 + C75550 + C153932 * C1069) *
                C153454 * C153713 +
            (C74257 * C3127 + C74546 + C74546 + C153860 * C3135 +
             C74255 * C1319 + C74547 + C74547 + C153918 * C1329 +
             C74253 * C330 + C74548 + C74548 + C153928 * C354 + C74251 * C329 +
             C74549 + C74549 + C153932 * C353) *
                C153454 * C98459) *
               C153527 * C321 +
           ((C74251 * C330 + C74550 + C74550 + C153932 * C354 + C74253 * C1319 +
             C74551 + C74551 + C153928 * C1329 + C74255 * C3127 + C74552 +
             C74552 + C153918 * C3135 + C74257 * C4723 + C74553 + C74553 +
             C153860 * C4729) *
                C153454 * C98459 +
            (C74251 * C1892 + C76769 + C76769 + C153932 * C1902 +
             C74253 * C4303 + C76768 + C76768 + C153928 * C4311 +
             C74255 * C5703 + C76767 + C76767 + C153918 * C5709 +
             C74257 * C29092 + C76766 + C76766 + C153860 * C29096) *
                C153454 * C153713) *
               C153527 * C322) *
              C323 +
          (((C74593 + C74592 + C74591 + C74590) * C153454 * C98459 +
            (C75578 + C75579 + C75580 + C75581) * C153454 * C153713) *
               C153527 * C321 -
           ((C74848 + C74849 + C74850 + C74851) * C153454 * C153713 +
            (C74331 + C74330 + C74329 + C74328) * C153454 * C98459) *
               C153527 * C320 -
           ((C74257 * C29093 + C76762 + C76762 + C153860 * C29097 +
             C74255 * C5702 + C76763 + C76763 + C153918 * C5708 +
             C74253 * C4304 + C76764 + C76764 + C153928 * C4312 +
             C74251 * C1891 + C76765 + C76765 + C153932 * C1901) *
                C153454 * C153713 +
            (C74597 + C74596 + C74595 + C74594) * C153454 * C98459) *
               C153527 * C322) *
              C153498)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
            C70427 + C70427 + C153671 * C353) *
               C153454 * C153933 +
           (C78815 + C78816) * C153454 * C153930 + C78827 * C153454 * C153921 +
           (C78822 + C78821) * C153454 * C153867) *
              C153527 * C153511 * C130 -
          (C78828 * C153454 * C153867 + C78770 * C153454 * C153921 +
           C78771 * C153454 * C153930 + (C70481 + C70480) * C153454 * C153933) *
              C153527 * C153511 * C131 +
          (C70490 * C153454 * C153933 + C79422 * C153454 * C153930 +
           C79423 * C153454 * C153921 + (C78825 + C78826) * C153454 * C153867) *
              C153527 * C153511 * C132 -
          ((C70423 * C8488 + C73462 + C73462 + C153671 * C8490 +
            C70421 * C2241 + C73463 + C73463 + C70415 * C2251) *
               C153454 * C153867 +
           (C71041 + C71040) * C153454 * C153921 + C71444 * C153454 * C153930 +
           C70493 * C153454 * C153933) *
              C153527 * C153511 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
             C70427 + C70427 + C153671 * C353) *
                C153454 * C153933 +
            (C78815 + C78816) * C153454 * C153930 + C78827 * C153454 * C153921 +
            (C78822 + C78821) * C153454 * C153867) *
               C153527 * C320 -
           ((C80649 + C80648) * C153454 * C153867 + C80637 * C153454 * C153921 +
            (C79845 + C79844) * C153454 * C153930 +
            (C70423 * C330 + C70706 + C70706 + C153671 * C354 + C70421 * C329 +
             C70707 + C70707 + C70415 * C353) *
                C153454 * C153933) *
               C153527 * C321 +
           ((C70421 * C330 + C70708 + C70708 + C70415 * C354 + C70423 * C1319 +
             C70709 + C70709 + C153671 * C1329) *
                C153454 * C153933 +
            (C81636 + C81637) * C153454 * C153930 +
            (C81638 + C81639) * C153454 * C153921 +
            (C70421 * C6305 + C81627 + C81627 + C70415 * C6317 +
             C70423 * C30191 + C81626 + C81626 + C153671 * C30195) *
                C153454 * C153867) *
               C153527 * C322) *
              C323 +
          (((C70761 + C70760) * C153454 * C153933 + C79814 * C153454 * C153930 +
            C79819 * C153454 * C153921 +
            (C79848 + C79849) * C153454 * C153867) *
               C153527 * C321 -
           (C78828 * C153454 * C153867 + C78770 * C153454 * C153921 +
            C78771 * C153454 * C153930 +
            (C70481 + C70480) * C153454 * C153933) *
               C153527 * C320 -
           ((C70423 * C31999 + C81624 + C81624 + C153671 * C32001 +
             C70421 * C6303 + C81625 + C81625 + C70415 * C6315) *
                C153454 * C153867 +
            (C78461 + C78460) * C153454 * C153921 +
            (C78459 + C78458) * C153454 * C153930 +
            (C70763 + C70762) * C153454 * C153933) *
               C153527 * C322) *
              C153498)) /
            (p * q * std::sqrt(p + q));
    d2ee[110] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C74251 * C136 + C74260 + C74260 + C153932 * C152 + C74253 * C329 +
             C74261 + C74261 + C153928 * C353 + C74255 * C330 + C74262 +
             C74262 + C153918 * C354 + C74257 * C1319 + C74263 + C74263 +
             C153860 * C1329) *
                C153454 * C98459 +
            (C130867 + C130868 + C130869 + C130870) * C153454 * C153713) *
               C153527 * C153908 -
           ((C131540 + C131539 + C131538 + C131537) * C153454 * C153713 +
            (C74257 * C3127 + C74546 + C74546 + C153860 * C3135 +
             C74255 * C1319 + C74547 + C74547 + C153918 * C1329 +
             C74253 * C330 + C74548 + C74548 + C153928 * C354 + C74251 * C329 +
             C74549 + C74549 + C153932 * C353) *
                C153454 * C98459) *
               C153527 * C153909 +
           ((C74251 * C330 + C74550 + C74550 + C153932 * C354 + C74253 * C1319 +
             C74551 + C74551 + C153928 * C1329 + C74255 * C3127 + C74552 +
             C74552 + C153918 * C3135 + C74257 * C4723 + C74553 + C74553 +
             C153860 * C4729) *
                C153454 * C98459 +
            (C74251 * C1892 + C76769 + C76769 + C153932 * C1902 +
             C74253 * C4303 + C76768 + C76768 + C153928 * C4311 +
             C74255 * C5703 + C76767 + C76767 + C153918 * C5709 +
             C74257 * C29092 + C76766 + C76766 + C153860 * C29096) *
                C153454 * C153713) *
               C153527 * C1601) *
              C153829 +
          (((C74593 + C74592 + C74591 + C74590) * C153454 * C98459 +
            (C75578 + C75579 + C75580 + C75581) * C153454 * C153713) *
               C153527 * C153909 -
           ((C74848 + C74849 + C74850 + C74851) * C153454 * C153713 +
            (C74331 + C74330 + C74329 + C74328) * C153454 * C98459) *
               C153527 * C153908 -
           ((C74257 * C29093 + C76762 + C76762 + C153860 * C29097 +
             C74255 * C5702 + C76763 + C76763 + C153918 * C5708 +
             C74253 * C4304 + C76764 + C76764 + C153928 * C4312 +
             C74251 * C1891 + C76765 + C76765 + C153932 * C1901) *
                C153454 * C153713 +
            (C74597 + C74596 + C74595 + C74594) * C153454 * C98459) *
               C153527 * C1601) *
              C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
              C70427 + C70427 + C153671 * C353) *
                 C153922 +
             (C70480 + C70481) * C153903 + C70490 * C153874) *
                C98459 +
            ((C78815 + C78816) * C153922 + C78756 * C153903 +
             C79422 * C153874) *
                C153713) *
               C153527 * C153908 -
           ((C88776 * C153874 + C79829 * C153903 +
             (C79845 + C79844) * C153922) *
                C153713 +
            (C71237 * C153874 + (C70760 + C70761) * C153903 +
             (C70423 * C330 + C70706 + C70706 + C153671 * C354 + C70421 * C329 +
              C70707 + C70707 + C70415 * C353) *
                 C153922) *
                C98459) *
               C153527 * C153909 +
           (((C70421 * C330 + C70708 + C70708 + C70415 * C354 + C70423 * C1319 +
              C70709 + C70709 + C153671 * C1329) *
                 C153922 +
             (C70762 + C70763) * C153903 + (C70764 + C70765) * C153874) *
                C98459 +
            ((C81636 + C81637) * C153922 + (C78458 + C78459) * C153903 +
             (C88194 + C88195) * C153874) *
                C153713) *
               C153527 * C1601) *
              C153829 +
          ((((C70761 + C70760) * C153922 + (C70759 + C70758) * C153903 +
             (C70757 + C70756) * C153874) *
                C98459 +
            (C79814 * C153922 + C89454 * C153903 +
             (C71754 + C71755) * C153874) *
                C153713) *
               C153527 * C153909 -
           ((C71444 * C153874 + C71445 * C153903 + C78771 * C153922) * C153713 +
            (C70493 * C153874 + (C70483 + C70482) * C153903 +
             (C70481 + C70480) * C153922) *
                C98459) *
               C153527 * C153908 -
           (((C70423 * C4306 + C72936 + C72936 + C153671 * C4314 +
              C70421 * C1889 + C72937 + C72937 + C70415 * C1899) *
                 C153874 +
             (C88195 + C88194) * C153903 + (C78459 + C78458) * C153922) *
                C153713 +
            ((C70767 + C70766) * C153874 + (C70765 + C70764) * C153903 +
             (C70763 + C70762) * C153922) *
                C98459) *
               C153527 * C1601) *
              C153498)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
             C70427 + C70427 + C153671 * C353) *
                C153454 * C153933 +
            (C78815 + C78816) * C153454 * C153930 + C134463 * C153921 +
            C134467 * C153867) *
               C153527 * C153908 -
           (C135644 * C153867 + C135639 * C153921 +
            (C79845 + C79844) * C153454 * C153930 +
            (C70423 * C330 + C70706 + C70706 + C153671 * C354 + C70421 * C329 +
             C70707 + C70707 + C70415 * C353) *
                C153454 * C153933) *
               C153527 * C153909 +
           ((C70421 * C330 + C70708 + C70708 + C70415 * C354 + C70423 * C1319 +
             C70709 + C70709 + C153671 * C1329) *
                C153454 * C153933 +
            (C81636 + C81637) * C153454 * C153930 +
            (C81638 + C81639) * C153454 * C153921 +
            (C70421 * C6305 + C81627 + C81627 + C70415 * C6317 +
             C70423 * C30191 + C81626 + C81626 + C153671 * C30195) *
                C153454 * C153867) *
               C153527 * C1601) *
              C153829 +
          (((C70761 + C70760) * C153454 * C153933 + C79814 * C153454 * C153930 +
            C79819 * C153454 * C153921 +
            (C79848 + C79849) * C153454 * C153867) *
               C153527 * C153909 -
           (C134465 * C153867 + C134466 * C153921 + C78771 * C153454 * C153930 +
            (C70481 + C70480) * C153454 * C153933) *
               C153527 * C153908 -
           ((C70423 * C31999 + C81624 + C81624 + C153671 * C32001 +
             C70421 * C6303 + C81625 + C81625 + C70415 * C6315) *
                C153454 * C153867 +
            (C78461 + C78460) * C153454 * C153921 +
            (C78459 + C78458) * C153454 * C153930 +
            (C70763 + C70762) * C153454 * C153933) *
               C153527 * C1601) *
              C153498)) /
            (p * q * std::sqrt(p + q));
    d2ee[111] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C74251 * C136 + C74260 + C74260 + C153932 * C152 + C74253 * C329 +
             C74261 + C74261 + C153928 * C353 + C74255 * C330 + C74262 +
             C74262 + C153918 * C354 + C74257 * C1319 + C74263 + C74263 +
             C153860 * C1329) *
                C153454 * C98459 +
            (C130867 + C130868 + C130869 + C130870) * C153454 * C153713) *
               C153838 -
           ((C130871 + C130872 + C130873 + C130874) * C153454 * C153713 +
            (C130870 + C130869 + C130868 + C130867) * C153454 * C98459) *
               C153591) *
              C153908 +
          (((C131537 + C131538 + C131539 + C131540) * C153454 * C98459 +
            (C132083 + C132084 + C132085 + C132086) * C153454 * C153713) *
               C153591 -
           ((C131540 + C131539 + C131538 + C131537) * C153454 * C153713 +
            (C74257 * C3127 + C74546 + C74546 + C153860 * C3135 +
             C74255 * C1319 + C74547 + C74547 + C153918 * C1329 +
             C74253 * C330 + C74548 + C74548 + C153928 * C354 + C74251 * C329 +
             C74549 + C74549 + C153932 * C353) *
                C153454 * C98459) *
               C153838) *
              C153909 +
          (((C74251 * C330 + C74550 + C74550 + C153932 * C354 + C74253 * C1319 +
             C74551 + C74551 + C153928 * C1329 + C74255 * C3127 + C74552 +
             C74552 + C153918 * C3135 + C74257 * C4723 + C74553 + C74553 +
             C153860 * C4729) *
                C153454 * C98459 +
            (C132753 + C132754 + C132755 + C132756) * C153454 * C153713) *
               C153838 -
           ((C74257 * C29442 + C132741 + C132741 + C153860 * C29444 +
             C74255 * C28650 + C132742 + C132742 + C153918 * C28654 +
             C74253 * C4959 + C132743 + C132743 + C153928 * C4965 +
             C74251 * C3441 + C132744 + C132744 + C153932 * C3449) *
                C153454 * C153713 +
            (C132756 + C132755 + C132754 + C132753) * C153454 * C98459) *
               C153591) *
              C1601) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
              C70427 + C70427 + C153671 * C353) *
                 C153922 +
             (C70480 + C70481) * C153903 + C70490 * C153874) *
                C98459 +
            ((C78815 + C78816) * C153922 + C78756 * C153903 +
             C79422 * C153874) *
                C153713) *
               C153838 -
           ((C78784 * C153874 + C78770 * C153903 +
             (C78818 + C78817) * C153922) *
                C153713 +
            (C71445 * C153874 + C78771 * C153903 +
             (C78816 + C78815) * C153922) *
                C98459) *
               C153591) *
              C153908 +
          ((((C79844 + C79845) * C153922 + C79814 * C153903 +
             C89454 * C153874) *
                C98459 +
            ((C79846 + C79847) * C153922 + C79819 * C153903 +
             (C79130 + C79131) * C153874) *
                C153713) *
               C153591 -
           ((C88776 * C153874 + C79829 * C153903 +
             (C79845 + C79844) * C153922) *
                C153713 +
            (C71237 * C153874 + (C70760 + C70761) * C153903 +
             (C70423 * C330 + C70706 + C70706 + C153671 * C354 + C70421 * C329 +
              C70707 + C70707 + C70415 * C353) *
                 C153922) *
                C98459) *
               C153838) *
              C153909 +
          ((((C70421 * C330 + C70708 + C70708 + C70415 * C354 + C70423 * C1319 +
              C70709 + C70709 + C153671 * C1329) *
                 C153922 +
             (C70762 + C70763) * C153903 + (C70764 + C70765) * C153874) *
                C98459 +
            ((C81636 + C81637) * C153922 + (C78458 + C78459) * C153903 +
             (C88194 + C88195) * C153874) *
                C153713) *
               C153838 -
           (((C70423 * C4957 + C78442 + C78442 + C153671 * C4963 +
              C70421 * C3443 + C78443 + C78443 + C70415 * C3451) *
                 C153874 +
             (C78461 + C78460) * C153903 + (C81639 + C81638) * C153922) *
                C153713 +
            ((C88195 + C88194) * C153874 + (C78459 + C78458) * C153903 +
             (C81637 + C81636) * C153922) *
                C98459) *
               C153591) *
              C1601) *
         C153492) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
             C70427 + C70427 + C153671 * C353) *
                C153454 * C153933 +
            (C78815 + C78816) * C153454 * C153930 + C134463 * C153921 +
            C134467 * C153867) *
               C153838 -
           ((C82431 + C82430) * C153454 * C153867 + C82415 * C153454 * C153921 +
            (C78818 + C78817) * C153454 * C153930 +
            (C78816 + C78815) * C153454 * C153933) *
               C153591) *
              C153908 +
          (((C79844 + C79845) * C153454 * C153933 +
            (C79846 + C79847) * C153454 * C153930 +
            (C80648 + C80649) * C153454 * C153921 +
            (C135647 + C135648) * C153454 * C153867) *
               C153591 -
           (C135644 * C153867 + C135639 * C153921 +
            (C79845 + C79844) * C153454 * C153930 +
            (C70423 * C330 + C70706 + C70706 + C153671 * C354 + C70421 * C329 +
             C70707 + C70707 + C70415 * C353) *
                C153454 * C153933) *
               C153838) *
              C153909 +
          (((C70421 * C330 + C70708 + C70708 + C70415 * C354 + C70423 * C1319 +
             C70709 + C70709 + C153671 * C1329) *
                C153454 * C153933 +
            (C81636 + C81637) * C153454 * C153930 +
            (C81638 + C81639) * C153454 * C153921 +
            (C136305 + C136306) * C153454 * C153867) *
               C153838 -
           ((C70423 * C32641 + C136299 + C136299 + C153671 * C32643 +
             C70421 * C31195 + C136300 + C136300 + C70415 * C31199) *
                C153454 * C153867 +
            (C136306 + C136305) * C153454 * C153921 +
            (C81639 + C81638) * C153454 * C153930 +
            (C81637 + C81636) * C153454 * C153933) *
               C153591) *
              C1601) *
         C153492) /
            (p * q * std::sqrt(p + q));
    d2ee[112] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C70421 * C136 + C70426 + C70426 + C70415 * C152 +
                  C70423 * C329 + C70427 + C70427 + C153671 * C353) *
                     C153922 +
                 (C70480 + C70481) * C153903 + C70490 * C153874) *
                    C98459 +
                ((C78815 + C78816) * C153922 + C78756 * C153903 +
                 C79422 * C153874) *
                    C153713) *
                   C153527 * C1223 -
               ((C88776 * C153874 + C79829 * C153903 +
                 (C79845 + C79844) * C153922) *
                    C153713 +
                (C71237 * C153874 + (C70760 + C70761) * C153903 +
                 (C70423 * C330 + C70706 + C70706 + C153671 * C354 +
                  C70421 * C329 + C70707 + C70707 + C70415 * C353) *
                     C153922) *
                    C98459) *
                   C153527 * C153563) *
                  C1225 +
              ((((C70761 + C70760) * C153922 + (C70759 + C70758) * C153903 +
                 (C70757 + C70756) * C153874) *
                    C98459 +
                (C79814 * C153922 + C89454 * C153903 +
                 (C71754 + C71755) * C153874) *
                    C153713) *
                   C153527 * C153563 -
               ((C71444 * C153874 + C71445 * C153903 + C78771 * C153922) *
                    C153713 +
                (C70493 * C153874 + (C70483 + C70482) * C153903 +
                 (C70481 + C70480) * C153922) *
                    C98459) *
                   C153527 * C1223) *
                  C1226 +
              (((C70490 * C153922 + C70491 * C153903 +
                 (C70487 + C70486) * C153874) *
                    C98459 +
                (C79422 * C153922 + C89067 * C153903 +
                 (C71456 + C71457) * C153874) *
                    C153713) *
                   C153527 * C1223 -
               (((C70423 * C1888 + C71736 + C71736 + C153671 * C1898 +
                  C70421 * C1061 + C71737 + C71737 + C70415 * C1073) *
                     C153874 +
                 (C71755 + C71754) * C153903 + C88776 * C153922) *
                    C153713 +
                ((C71249 + C71248) * C153874 + C71236 * C153903 +
                 C71237 * C153922) *
                    C98459) *
                   C153527 * C153563) *
                  C1227) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C70421 * C136 + C70426 + C70426 + C70415 * C152 +
                 C70423 * C329 + C70427 + C70427 + C153671 * C353) *
                    C153922 +
                (C70480 + C70481) * C153903 + C70490 * C153874) *
                   C98459 +
               ((C78815 + C78816) * C153922 + C78756 * C153903 +
                C79422 * C153874) *
                   C153713) *
                  C153527 * C1310 -
              ((C88776 * C153874 + C79829 * C153903 +
                (C79845 + C79844) * C153922) *
                   C153713 +
               (C71237 * C153874 + (C70760 + C70761) * C153903 +
                (C70423 * C330 + C70706 + C70706 + C153671 * C354 +
                 C70421 * C329 + C70707 + C70707 + C70415 * C353) *
                    C153922) *
                   C98459) *
                  C153527 * C1311 +
              (((C70421 * C330 + C70708 + C70708 + C70415 * C354 +
                 C70423 * C1319 + C70709 + C70709 + C153671 * C1329) *
                    C153922 +
                (C70762 + C70763) * C153903 + (C70764 + C70765) * C153874) *
                   C98459 +
               ((C81636 + C81637) * C153922 + (C78458 + C78459) * C153903 +
                (C88194 + C88195) * C153874) *
                   C153713) *
                  C153527 * C1312 -
              (((C70423 * C5701 + C89939 + C89939 + C153671 * C5707 +
                 C70421 * C4305 + C89940 + C89940 + C70415 * C4313) *
                    C153874 +
                (C70423 * C5702 + C80338 + C80338 + C153671 * C5708 +
                 C70421 * C4304 + C80339 + C80339 + C70415 * C4312) *
                    C153903 +
                (C70423 * C5703 + C80340 + C80340 + C153671 * C5709 +
                 C70421 * C4303 + C80341 + C80341 + C70415 * C4311) *
                    C153922) *
                   C153713 +
               ((C70423 * C3129 + C72082 + C72082 + C153671 * C3137 +
                 C70421 * C1317 + C72083 + C72083 + C70415 * C1327) *
                    C153874 +
                (C70423 * C3128 + C72084 + C72084 + C153671 * C3136 +
                 C70421 * C1318 + C72085 + C72085 + C70415 * C1328) *
                    C153903 +
                (C70423 * C3127 + C72086 + C72086 + C153671 * C3135 +
                 C70421 * C1319 + C72087 + C72087 + C70415 * C1329) *
                    C153922) *
                   C98459) *
                  C153527 * C1313) *
             C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
              C70427 + C70427 + C153671 * C353) *
                 C153922 +
             (C70480 + C70481) * C153903 + C70490 * C153874) *
                C98459 +
            ((C78815 + C78816) * C153922 + C78756 * C153903 +
             C79422 * C153874) *
                C153713) *
               C535 -
           ((C78784 * C153874 + C78770 * C153903 +
             (C78818 + C78817) * C153922) *
                C153713 +
            (C71445 * C153874 + C78771 * C153903 +
             (C78816 + C78815) * C153922) *
                C98459) *
               C536 +
           ((C78827 * C153922 + C78761 * C153903 + C79423 * C153874) * C98459 +
            ((C78822 + C78821) * C153922 + C78829 * C153903 +
             (C78825 + C78826) * C153874) *
                C153713) *
               C537) *
              C1223 +
          ((((C79844 + C79845) * C153922 + C79814 * C153903 +
             C89454 * C153874) *
                C98459 +
            ((C79846 + C79847) * C153922 + C79819 * C153903 +
             (C79130 + C79131) * C153874) *
                C153713) *
               C536 -
           ((C88776 * C153874 + C79829 * C153903 +
             (C79845 + C79844) * C153922) *
                C153713 +
            (C71237 * C153874 + (C70760 + C70761) * C153903 +
             (C70423 * C330 + C70706 + C70706 + C153671 * C354 + C70421 * C329 +
              C70707 + C70707 + C70415 * C353) *
                 C153922) *
                C98459) *
               C535 -
           (((C70423 * C6301 + C79830 + C79830 + C153671 * C6313 +
              C70421 * C6302 + C79831 + C79831 + C70415 * C6314) *
                 C153874 +
             (C79849 + C79848) * C153903 + (C80649 + C80648) * C153922) *
                C153713 +
            ((C79131 + C79130) * C153874 + C79828 * C153903 +
             C80637 * C153922) *
                C98459) *
               C537) *
              C153563) *
         C153492) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C74251 * C136 + C74260 + C74260 + C153932 * C152 + C74253 * C329 +
             C74261 + C74261 + C153928 * C353 + C74255 * C330 + C74262 +
             C74262 + C153918 * C354 + C74257 * C1319 + C74263 + C74263 +
             C153860 * C1329) *
                C153454 * C98459 +
            (C130867 + C130868 + C130869 + C130870) * C153454 * C153713) *
               C153527 * C1223 -
           ((C131540 + C131539 + C131538 + C131537) * C153454 * C153713 +
            (C74257 * C3127 + C74546 + C74546 + C153860 * C3135 +
             C74255 * C1319 + C74547 + C74547 + C153918 * C1329 +
             C74253 * C330 + C74548 + C74548 + C153928 * C354 + C74251 * C329 +
             C74549 + C74549 + C153932 * C353) *
                C153454 * C98459) *
               C153527 * C153563) *
              C1225 +
          (((C74593 + C74592 + C74591 + C74590) * C153454 * C98459 +
            (C75578 + C75579 + C75580 + C75581) * C153454 * C153713) *
               C153527 * C153563 -
           ((C74848 + C74849 + C74850 + C74851) * C153454 * C153713 +
            (C74331 + C74330 + C74329 + C74328) * C153454 * C98459) *
               C153527 * C1223) *
              C1226 +
          (((C74335 + C74334 + C74333 + C74332) * C153454 * C98459 +
            (C75288 + C75289 + C75290 + C75291) * C153454 * C153713) *
               C153527 * C1223 -
           ((C74257 * C5701 + C75566 + C75566 + C153860 * C5707 +
             C74255 * C4305 + C75567 + C75567 + C153918 * C4313 +
             C74253 * C1890 + C75568 + C75568 + C153928 * C1900 +
             C74251 * C1059 + C75569 + C75569 + C153932 * C1071) *
                C153454 * C153713 +
            (C75073 + C75072 + C75071 + C75070) * C153454 * C98459) *
               C153527 * C153563) *
              C1227)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C74251 * C136 + C74260 + C74260 + C153932 * C152 + C74253 * C329 +
            C74261 + C74261 + C153928 * C353 + C74255 * C330 + C74262 + C74262 +
            C153918 * C354 + C74257 * C1319 + C74263 + C74263 +
            C153860 * C1329) *
               C153454 * C98459 +
           (C130867 + C130868 + C130869 + C130870) * C153454 * C153713) *
              C153527 * C1310 -
          ((C131540 + C131539 + C131538 + C131537) * C153454 * C153713 +
           (C74257 * C3127 + C74546 + C74546 + C153860 * C3135 +
            C74255 * C1319 + C74547 + C74547 + C153918 * C1329 + C74253 * C330 +
            C74548 + C74548 + C153928 * C354 + C74251 * C329 + C74549 + C74549 +
            C153932 * C353) *
               C153454 * C98459) *
              C153527 * C1311 +
          ((C74251 * C330 + C74550 + C74550 + C153932 * C354 + C74253 * C1319 +
            C74551 + C74551 + C153928 * C1329 + C74255 * C3127 + C74552 +
            C74552 + C153918 * C3135 + C74257 * C4723 + C74553 + C74553 +
            C153860 * C4729) *
               C153454 * C98459 +
           (C74251 * C1892 + C76769 + C76769 + C153932 * C1902 +
            C74253 * C4303 + C76768 + C76768 + C153928 * C4311 +
            C74255 * C5703 + C76767 + C76767 + C153918 * C5709 +
            C74257 * C29092 + C76766 + C76766 + C153860 * C29096) *
               C153454 * C153713) *
              C153527 * C1312 -
          ((C74257 * C29856 + C131865 + C131865 + C153860 * C29858 +
            C74255 * C29092 + C131866 + C131866 + C153918 * C29096 +
            C74253 * C5703 + C131867 + C131867 + C153928 * C5709 +
            C74251 * C4303 + C131868 + C131868 + C153932 * C4311) *
               C153454 * C153713 +
           (C74257 * C28502 + C75910 + C75910 + C153860 * C28506 +
            C74255 * C4723 + C75911 + C75911 + C153918 * C4729 +
            C74253 * C3127 + C75912 + C75912 + C153928 * C3135 +
            C74251 * C1319 + C75913 + C75913 + C153932 * C1329) *
               C153454 * C98459) *
              C153527 * C1313) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C74251 * C136 + C74260 + C74260 + C153932 * C152 + C74253 * C329 +
             C74261 + C74261 + C153928 * C353 + C74255 * C330 + C74262 +
             C74262 + C153918 * C354 + C74257 * C1319 + C74263 + C74263 +
             C153860 * C1329) *
                C153454 * C98459 +
            (C130867 + C130868 + C130869 + C130870) * C153454 * C153713) *
               C535 -
           ((C130871 + C130872 + C130873 + C130874) * C153454 * C153713 +
            (C130870 + C130869 + C130868 + C130867) * C153454 * C98459) *
               C536 +
           ((C130874 + C130873 + C130872 + C130871) * C153454 * C98459 +
            (C74251 * C2244 + C77295 + C77295 + C153932 * C2254 +
             C74253 * C6306 + C77294 + C77294 + C153928 * C6318 +
             C74255 * C6305 + C77293 + C77293 + C153918 * C6317 +
             C74257 * C30191 + C77292 + C77292 + C153860 * C30195) *
                C153454 * C153713) *
               C537) *
              C1223 +
          (((C131537 + C131538 + C131539 + C131540) * C153454 * C98459 +
            (C132083 + C132084 + C132085 + C132086) * C153454 * C153713) *
               C536 -
           ((C131540 + C131539 + C131538 + C131537) * C153454 * C153713 +
            (C74257 * C3127 + C74546 + C74546 + C153860 * C3135 +
             C74255 * C1319 + C74547 + C74547 + C153918 * C1329 +
             C74253 * C330 + C74548 + C74548 + C153928 * C354 + C74251 * C329 +
             C74549 + C74549 + C153932 * C353) *
                C153454 * C98459) *
               C535 -
           ((C74257 * C30190 + C132071 + C132071 + C153860 * C30194 +
             C74255 * C30191 + C132072 + C132072 + C153918 * C30195 +
             C74253 * C6305 + C132073 + C132073 + C153928 * C6317 +
             C74251 * C6306 + C132074 + C132074 + C153932 * C6318) *
                C153454 * C153713 +
            (C132086 + C132085 + C132084 + C132083) * C153454 * C98459) *
               C537) *
              C153563) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
             C70427 + C70427 + C153671 * C353) *
                C153454 * C153933 +
            (C78815 + C78816) * C153454 * C153930 + C134463 * C153921 +
            C134467 * C153867) *
               C153527 * C1223 -
           ((C80649 + C80648) * C153454 * C153867 + C80637 * C153454 * C153921 +
            (C79845 + C79844) * C153454 * C153930 +
            (C70423 * C330 + C70706 + C70706 + C153671 * C354 + C70421 * C329 +
             C70707 + C70707 + C70415 * C353) *
                C153454 * C153933) *
               C153527 * C153563) *
              C1225 +
          (((C70761 + C70760) * C153454 * C153933 + C79814 * C153454 * C153930 +
            C79819 * C153454 * C153921 +
            (C79848 + C79849) * C153454 * C153867) *
               C153527 * C153563 -
           (C134465 * C153867 + C134466 * C153921 + C78771 * C153454 * C153930 +
            (C70481 + C70480) * C153454 * C153933) *
               C153527 * C1223) *
              C1226 +
          ((C70490 * C153454 * C153933 + C79422 * C153454 * C153930 +
            C79423 * C153454 * C153921 +
            (C78825 + C78826) * C153454 * C153867) *
               C153527 * C1223 -
           ((C70423 * C6301 + C79830 + C79830 + C153671 * C6313 +
             C70421 * C6302 + C79831 + C79831 + C70415 * C6314) *
                C153454 * C153867 +
            (C79131 + C79130) * C153454 * C153921 + C88776 * C153454 * C153930 +
            C71237 * C153454 * C153933) *
               C153527 * C153563) *
              C1227)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
            C70427 + C70427 + C153671 * C353) *
               C153454 * C153933 +
           (C78815 + C78816) * C153454 * C153930 + C134463 * C153921 +
           C134467 * C153867) *
              C153527 * C1310 -
          ((C80649 + C80648) * C153454 * C153867 + C80637 * C153454 * C153921 +
           (C79845 + C79844) * C153454 * C153930 +
           (C70423 * C330 + C70706 + C70706 + C153671 * C354 + C70421 * C329 +
            C70707 + C70707 + C70415 * C353) *
               C153454 * C153933) *
              C153527 * C1311 +
          ((C70421 * C330 + C70708 + C70708 + C70415 * C354 + C70423 * C1319 +
            C70709 + C70709 + C153671 * C1329) *
               C153454 * C153933 +
           (C81636 + C81637) * C153454 * C153930 +
           (C81638 + C81639) * C153454 * C153921 +
           (C70421 * C6305 + C81627 + C81627 + C70415 * C6317 +
            C70423 * C30191 + C81626 + C81626 + C153671 * C30195) *
               C153454 * C153867) *
              C153527 * C1312 -
          ((C70423 * C30190 + C135438 + C135438 + C153671 * C30194 +
            C70421 * C30191 + C135439 + C135439 + C70415 * C30195) *
               C153454 * C153867 +
           (C70423 * C28650 + C80336 + C80336 + C153671 * C28654 +
            C70421 * C4959 + C80337 + C80337 + C70415 * C4965) *
               C153454 * C153921 +
           (C70423 * C5703 + C80340 + C80340 + C153671 * C5709 +
            C70421 * C4303 + C80341 + C80341 + C70415 * C4311) *
               C153454 * C153930 +
           (C70423 * C3127 + C72086 + C72086 + C153671 * C3135 +
            C70421 * C1319 + C72087 + C72087 + C70415 * C1329) *
               C153454 * C153933) *
              C153527 * C1313) *
         C153492) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
             C70427 + C70427 + C153671 * C353) *
                C153454 * C153933 +
            (C78815 + C78816) * C153454 * C153930 + C134463 * C153921 +
            C134467 * C153867) *
               C535 -
           ((C82431 + C82430) * C153454 * C153867 + C82415 * C153454 * C153921 +
            (C78818 + C78817) * C153454 * C153930 +
            (C78816 + C78815) * C153454 * C153933) *
               C536 +
           (C134463 * C153933 + C134467 * C153930 +
            (C82430 + C82431) * C153454 * C153921 +
            (C70421 * C10466 + C82423 + C82423 + C70415 * C10472 +
             C70423 * C34007 + C82422 + C82422 + C153671 * C34011) *
                C153454 * C153867) *
               C537) *
              C1223 +
          (((C79844 + C79845) * C153454 * C153933 +
            (C79846 + C79847) * C153454 * C153930 +
            (C80648 + C80649) * C153454 * C153921 +
            (C135647 + C135648) * C153454 * C153867) *
               C536 -
           (C135644 * C153867 + C135639 * C153921 +
            (C79845 + C79844) * C153454 * C153930 +
            (C70423 * C330 + C70706 + C70706 + C153671 * C354 + C70421 * C329 +
             C70707 + C70707 + C70415 * C353) *
                C153454 * C153933) *
               C535 -
           ((C70423 * C34006 + C135640 + C135640 + C153671 * C34010 +
             C70421 * C34007 + C135641 + C135641 + C70415 * C34011) *
                C153454 * C153867 +
            (C135648 + C135647) * C153454 * C153921 + C135644 * C153930 +
            C135639 * C153933) *
               C537) *
              C153563) *
         C153492) /
            (p * q * std::sqrt(p + q));
    d2ee[113] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C74251 * C136 + C74260 + C74260 + C153932 * C152 + C74253 * C329 +
              C74261 + C74261 + C153928 * C353 + C74255 * C330 + C74262 +
              C74262 + C153918 * C354 + C74257 * C1319 + C74263 + C74263 +
              C153860 * C1329) *
                 C153454 * C98459 +
             (C130867 + C130868 + C130869 + C130870) * C153454 * C153713) *
                C153838 -
            ((C130871 + C130872 + C130873 + C130874) * C153454 * C153713 +
             (C130870 + C130869 + C130868 + C130867) * C153454 * C98459) *
                C153591) *
               C1223 +
           (((C131537 + C131538 + C131539 + C131540) * C153454 * C98459 +
             (C132083 + C132084 + C132085 + C132086) * C153454 * C153713) *
                C153591 -
            ((C131540 + C131539 + C131538 + C131537) * C153454 * C153713 +
             (C74257 * C3127 + C74546 + C74546 + C153860 * C3135 +
              C74255 * C1319 + C74547 + C74547 + C153918 * C1329 +
              C74253 * C330 + C74548 + C74548 + C153928 * C354 + C74251 * C329 +
              C74549 + C74549 + C153932 * C353) *
                 C153454 * C98459) *
                C153838) *
               C153563) *
              C153829 +
          ((((C74851 + C74850 + C74849 + C74848) * C153454 * C98459 +
             (C74852 + C74853 + C74854 + C74855) * C153454 * C153713) *
                C153591 -
            ((C74848 + C74849 + C74850 + C74851) * C153454 * C153713 +
             (C74331 + C74330 + C74329 + C74328) * C153454 * C98459) *
                C153838) *
               C1223 +
           (((C74593 + C74592 + C74591 + C74590) * C153454 * C98459 +
             (C75578 + C75579 + C75580 + C75581) * C153454 * C153713) *
                C153838 -
            ((C74257 * C28651 + C76108 + C76108 + C153860 * C28655 +
              C74255 * C4958 + C76109 + C76109 + C153918 * C4964 +
              C74253 * C3442 + C76110 + C76110 + C153928 * C3450 +
              C74251 * C1460 + C76111 + C76111 + C153932 * C1470) *
                 C153454 * C153713 +
             (C75581 + C75580 + C75579 + C75578) * C153454 * C98459) *
                C153591) *
               C153563) *
              C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
               C70427 + C70427 + C153671 * C353) *
                  C153922 +
              (C70480 + C70481) * C153903 + C70490 * C153874) *
                 C98459 +
             ((C78815 + C78816) * C153922 + C78756 * C153903 +
              C79422 * C153874) *
                 C153713) *
                C153838 -
            ((C78784 * C153874 + C78770 * C153903 +
              (C78818 + C78817) * C153922) *
                 C153713 +
             (C71445 * C153874 + C78771 * C153903 +
              (C78816 + C78815) * C153922) *
                 C98459) *
                C153591) *
               C1223 +
           ((((C79844 + C79845) * C153922 + C79814 * C153903 +
              C89454 * C153874) *
                 C98459 +
             ((C79846 + C79847) * C153922 + C79819 * C153903 +
              (C79130 + C79131) * C153874) *
                 C153713) *
                C153591 -
            ((C88776 * C153874 + C79829 * C153903 +
              (C79845 + C79844) * C153922) *
                 C153713 +
             (C71237 * C153874 + (C70760 + C70761) * C153903 +
              (C70423 * C330 + C70706 + C70706 + C153671 * C354 +
               C70421 * C329 + C70707 + C70707 + C70415 * C353) *
                  C153922) *
                 C98459) *
                C153838) *
               C153563) *
              C153829 +
          ((((C78756 * C153922 + C79422 * C153903 + C89067 * C153874) * C98459 +
             (C78761 * C153922 + C79423 * C153903 +
              (C71040 + C71041) * C153874) *
                 C153713) *
                C153591 -
            ((C71444 * C153874 + C71445 * C153903 + C78771 * C153922) *
                 C153713 +
             (C70493 * C153874 + (C70483 + C70482) * C153903 +
              (C70481 + C70480) * C153922) *
                 C98459) *
                C153838) *
               C1223 +
           ((((C70761 + C70760) * C153922 + (C70759 + C70758) * C153903 +
              (C70757 + C70756) * C153874) *
                 C98459 +
             (C79814 * C153922 + C89454 * C153903 +
              (C71754 + C71755) * C153874) *
                 C153713) *
                C153838 -
            (((C70423 * C3444 + C72282 + C72282 + C153671 * C3452 +
               C70421 * C1458 + C72283 + C72283 + C70415 * C1468) *
                  C153874 +
              (C79131 + C79130) * C153903 + C79828 * C153922) *
                 C153713 +
             ((C71755 + C71754) * C153874 + C88776 * C153903 +
              C79829 * C153922) *
                 C98459) *
                C153591) *
               C153563) *
              C153498)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
              C70427 + C70427 + C153671 * C353) *
                 C153454 * C153933 +
             (C78815 + C78816) * C153454 * C153930 + C134463 * C153921 +
             C134467 * C153867) *
                C153838 -
            ((C82431 + C82430) * C153454 * C153867 +
             C82415 * C153454 * C153921 +
             (C78818 + C78817) * C153454 * C153930 +
             (C78816 + C78815) * C153454 * C153933) *
                C153591) *
               C1223 +
           (((C79844 + C79845) * C153454 * C153933 +
             (C79846 + C79847) * C153454 * C153930 +
             (C80648 + C80649) * C153454 * C153921 +
             (C135647 + C135648) * C153454 * C153867) *
                C153591 -
            (C135644 * C153867 + C135639 * C153921 +
             (C79845 + C79844) * C153454 * C153930 +
             (C70423 * C330 + C70706 + C70706 + C153671 * C354 + C70421 * C329 +
              C70707 + C70707 + C70415 * C353) *
                 C153454 * C153933) *
                C153838) *
               C153563) *
              C153829 +
          (((C78756 * C153454 * C153933 + C78761 * C153454 * C153930 +
             C78829 * C153454 * C153921 +
             (C78823 + C78824) * C153454 * C153867) *
                C153591 -
            (C134465 * C153867 + C134466 * C153921 +
             C78771 * C153454 * C153930 +
             (C70481 + C70480) * C153454 * C153933) *
                C153838) *
               C1223 +
           (((C70761 + C70760) * C153454 * C153933 +
             C79814 * C153454 * C153930 + C79819 * C153454 * C153921 +
             (C79848 + C79849) * C153454 * C153867) *
                C153838 -
            ((C70423 * C31196 + C80638 + C80638 + C153671 * C31200 +
              C70421 * C9116 + C80639 + C80639 + C70415 * C9122) *
                 C153454 * C153867 +
             (C79849 + C79848) * C153454 * C153921 +
             C79828 * C153454 * C153930 + C79829 * C153454 * C153933) *
                C153591) *
               C153563) *
              C153498)) /
            (p * q * std::sqrt(p + q));
    d2ee[114] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
             C70427 + C70427 + C153671 * C353) *
                C153922 +
            (C70480 + C70481) * C153903 + C70490 * C153874) *
               C98459 +
           ((C78815 + C78816) * C153922 + C78756 * C153903 + C79422 * C153874) *
               C153713) *
              C153527 * C1310 -
          ((C88776 * C153874 + C79829 * C153903 + (C79845 + C79844) * C153922) *
               C153713 +
           (C71237 * C153874 + (C70760 + C70761) * C153903 +
            (C70423 * C330 + C70706 + C70706 + C153671 * C354 + C70421 * C329 +
             C70707 + C70707 + C70415 * C353) *
                C153922) *
               C98459) *
              C153527 * C1311 +
          (((C70421 * C330 + C70708 + C70708 + C70415 * C354 + C70423 * C1319 +
             C70709 + C70709 + C153671 * C1329) *
                C153922 +
            (C70762 + C70763) * C153903 + (C70764 + C70765) * C153874) *
               C98459 +
           ((C81636 + C81637) * C153922 + (C78458 + C78459) * C153903 +
            (C88194 + C88195) * C153874) *
               C153713) *
              C153527 * C1312 -
          (((C70423 * C5701 + C89939 + C89939 + C153671 * C5707 +
             C70421 * C4305 + C89940 + C89940 + C70415 * C4313) *
                C153874 +
            (C70423 * C5702 + C80338 + C80338 + C153671 * C5708 +
             C70421 * C4304 + C80339 + C80339 + C70415 * C4312) *
                C153903 +
            (C70423 * C5703 + C80340 + C80340 + C153671 * C5709 +
             C70421 * C4303 + C80341 + C80341 + C70415 * C4311) *
                C153922) *
               C153713 +
           ((C70423 * C3129 + C72082 + C72082 + C153671 * C3137 +
             C70421 * C1317 + C72083 + C72083 + C70415 * C1327) *
                C153874 +
            (C70423 * C3128 + C72084 + C72084 + C153671 * C3136 +
             C70421 * C1318 + C72085 + C72085 + C70415 * C1328) *
                C153903 +
            (C70423 * C3127 + C72086 + C72086 + C153671 * C3135 +
             C70421 * C1319 + C72087 + C72087 + C70415 * C1329) *
                C153922) *
               C98459) *
              C153527 * C1313) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
              C70427 + C70427 + C153671 * C353) *
                 C153922 +
             (C70480 + C70481) * C153903 + C70490 * C153874) *
                C98459 +
            ((C78815 + C78816) * C153922 + C78756 * C153903 +
             C79422 * C153874) *
                C153713) *
               C153527 * C1223 -
           ((C88776 * C153874 + C79829 * C153903 +
             (C79845 + C79844) * C153922) *
                C153713 +
            (C71237 * C153874 + (C70760 + C70761) * C153903 +
             (C70423 * C330 + C70706 + C70706 + C153671 * C354 + C70421 * C329 +
              C70707 + C70707 + C70415 * C353) *
                 C153922) *
                C98459) *
               C153527 * C153563) *
              C1225 +
          ((((C70761 + C70760) * C153922 + (C70759 + C70758) * C153903 +
             (C70757 + C70756) * C153874) *
                C98459 +
            (C79814 * C153922 + C89454 * C153903 +
             (C71754 + C71755) * C153874) *
                C153713) *
               C153527 * C153563 -
           ((C71444 * C153874 + C71445 * C153903 + C78771 * C153922) * C153713 +
            (C70493 * C153874 + (C70483 + C70482) * C153903 +
             (C70481 + C70480) * C153922) *
                C98459) *
               C153527 * C1223) *
              C1226 +
          (((C70490 * C153922 + C70491 * C153903 +
             (C70487 + C70486) * C153874) *
                C98459 +
            (C79422 * C153922 + C89067 * C153903 +
             (C71456 + C71457) * C153874) *
                C153713) *
               C153527 * C1223 -
           (((C70423 * C1888 + C71736 + C71736 + C153671 * C1898 +
              C70421 * C1061 + C71737 + C71737 + C70415 * C1073) *
                 C153874 +
             (C71755 + C71754) * C153903 + C88776 * C153922) *
                C153713 +
            ((C71249 + C71248) * C153874 + C71236 * C153903 +
             C71237 * C153922) *
                C98459) *
               C153527 * C153563) *
              C1227)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C74251 * C136 + C74260 + C74260 + C153932 * C152 + C74253 * C329 +
             C74261 + C74261 + C153928 * C353 + C74255 * C330 + C74262 +
             C74262 + C153918 * C354 + C74257 * C1319 + C74263 + C74263 +
             C153860 * C1329) *
                C153454 * C98459 +
            (C130867 + C130868 + C130869 + C130870) * C153454 * C153713) *
               C153527 * C1223 -
           ((C131540 + C131539 + C131538 + C131537) * C153454 * C153713 +
            (C74257 * C3127 + C74546 + C74546 + C153860 * C3135 +
             C74255 * C1319 + C74547 + C74547 + C153918 * C1329 +
             C74253 * C330 + C74548 + C74548 + C153928 * C354 + C74251 * C329 +
             C74549 + C74549 + C153932 * C353) *
                C153454 * C98459) *
               C153527 * C153563) *
              C1225 +
          (((C74593 + C74592 + C74591 + C74590) * C153454 * C98459 +
            (C75578 + C75579 + C75580 + C75581) * C153454 * C153713) *
               C153527 * C153563 -
           ((C74848 + C74849 + C74850 + C74851) * C153454 * C153713 +
            (C74331 + C74330 + C74329 + C74328) * C153454 * C98459) *
               C153527 * C1223) *
              C1226 +
          (((C74335 + C74334 + C74333 + C74332) * C153454 * C98459 +
            (C75288 + C75289 + C75290 + C75291) * C153454 * C153713) *
               C153527 * C1223 -
           ((C74257 * C5701 + C75566 + C75566 + C153860 * C5707 +
             C74255 * C4305 + C75567 + C75567 + C153918 * C4313 +
             C74253 * C1890 + C75568 + C75568 + C153928 * C1900 +
             C74251 * C1059 + C75569 + C75569 + C153932 * C1071) *
                C153454 * C153713 +
            (C75073 + C75072 + C75071 + C75070) * C153454 * C98459) *
               C153527 * C153563) *
              C1227)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C74251 * C136 + C74260 + C74260 + C153932 * C152 + C74253 * C329 +
            C74261 + C74261 + C153928 * C353 + C74255 * C330 + C74262 + C74262 +
            C153918 * C354 + C74257 * C1319 + C74263 + C74263 +
            C153860 * C1329) *
               C153454 * C98459 +
           (C130867 + C130868 + C130869 + C130870) * C153454 * C153713) *
              C153527 * C1310 -
          ((C131540 + C131539 + C131538 + C131537) * C153454 * C153713 +
           (C74257 * C3127 + C74546 + C74546 + C153860 * C3135 +
            C74255 * C1319 + C74547 + C74547 + C153918 * C1329 + C74253 * C330 +
            C74548 + C74548 + C153928 * C354 + C74251 * C329 + C74549 + C74549 +
            C153932 * C353) *
               C153454 * C98459) *
              C153527 * C1311 +
          ((C74251 * C330 + C74550 + C74550 + C153932 * C354 + C74253 * C1319 +
            C74551 + C74551 + C153928 * C1329 + C74255 * C3127 + C74552 +
            C74552 + C153918 * C3135 + C74257 * C4723 + C74553 + C74553 +
            C153860 * C4729) *
               C153454 * C98459 +
           (C74251 * C1892 + C76769 + C76769 + C153932 * C1902 +
            C74253 * C4303 + C76768 + C76768 + C153928 * C4311 +
            C74255 * C5703 + C76767 + C76767 + C153918 * C5709 +
            C74257 * C29092 + C76766 + C76766 + C153860 * C29096) *
               C153454 * C153713) *
              C153527 * C1312 -
          ((C74257 * C29856 + C131865 + C131865 + C153860 * C29858 +
            C74255 * C29092 + C131866 + C131866 + C153918 * C29096 +
            C74253 * C5703 + C131867 + C131867 + C153928 * C5709 +
            C74251 * C4303 + C131868 + C131868 + C153932 * C4311) *
               C153454 * C153713 +
           (C74257 * C28502 + C75910 + C75910 + C153860 * C28506 +
            C74255 * C4723 + C75911 + C75911 + C153918 * C4729 +
            C74253 * C3127 + C75912 + C75912 + C153928 * C3135 +
            C74251 * C1319 + C75913 + C75913 + C153932 * C1329) *
               C153454 * C98459) *
              C153527 * C1313) *
         C153492) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
             C70427 + C70427 + C153671 * C353) *
                C153454 * C153933 +
            (C78815 + C78816) * C153454 * C153930 + C134463 * C153921 +
            C134467 * C153867) *
               C153527 * C1223 -
           ((C80649 + C80648) * C153454 * C153867 + C80637 * C153454 * C153921 +
            (C79845 + C79844) * C153454 * C153930 +
            (C70423 * C330 + C70706 + C70706 + C153671 * C354 + C70421 * C329 +
             C70707 + C70707 + C70415 * C353) *
                C153454 * C153933) *
               C153527 * C153563) *
              C1225 +
          (((C70761 + C70760) * C153454 * C153933 + C79814 * C153454 * C153930 +
            C79819 * C153454 * C153921 +
            (C79848 + C79849) * C153454 * C153867) *
               C153527 * C153563 -
           (C134465 * C153867 + C134466 * C153921 + C78771 * C153454 * C153930 +
            (C70481 + C70480) * C153454 * C153933) *
               C153527 * C1223) *
              C1226 +
          ((C70490 * C153454 * C153933 + C79422 * C153454 * C153930 +
            C79423 * C153454 * C153921 +
            (C78825 + C78826) * C153454 * C153867) *
               C153527 * C1223 -
           ((C70423 * C6301 + C79830 + C79830 + C153671 * C6313 +
             C70421 * C6302 + C79831 + C79831 + C70415 * C6314) *
                C153454 * C153867 +
            (C79131 + C79130) * C153454 * C153921 + C88776 * C153454 * C153930 +
            C71237 * C153454 * C153933) *
               C153527 * C153563) *
              C1227)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
            C70427 + C70427 + C153671 * C353) *
               C153454 * C153933 +
           (C78815 + C78816) * C153454 * C153930 + C134463 * C153921 +
           C134467 * C153867) *
              C153527 * C1310 -
          ((C80649 + C80648) * C153454 * C153867 + C80637 * C153454 * C153921 +
           (C79845 + C79844) * C153454 * C153930 +
           (C70423 * C330 + C70706 + C70706 + C153671 * C354 + C70421 * C329 +
            C70707 + C70707 + C70415 * C353) *
               C153454 * C153933) *
              C153527 * C1311 +
          ((C70421 * C330 + C70708 + C70708 + C70415 * C354 + C70423 * C1319 +
            C70709 + C70709 + C153671 * C1329) *
               C153454 * C153933 +
           (C81636 + C81637) * C153454 * C153930 +
           (C81638 + C81639) * C153454 * C153921 +
           (C70421 * C6305 + C81627 + C81627 + C70415 * C6317 +
            C70423 * C30191 + C81626 + C81626 + C153671 * C30195) *
               C153454 * C153867) *
              C153527 * C1312 -
          ((C70423 * C30190 + C135438 + C135438 + C153671 * C30194 +
            C70421 * C30191 + C135439 + C135439 + C70415 * C30195) *
               C153454 * C153867 +
           (C70423 * C28650 + C80336 + C80336 + C153671 * C28654 +
            C70421 * C4959 + C80337 + C80337 + C70415 * C4965) *
               C153454 * C153921 +
           (C70423 * C5703 + C80340 + C80340 + C153671 * C5709 +
            C70421 * C4303 + C80341 + C80341 + C70415 * C4311) *
               C153454 * C153930 +
           (C70423 * C3127 + C72086 + C72086 + C153671 * C3135 +
            C70421 * C1319 + C72087 + C72087 + C70415 * C1329) *
               C153454 * C153933) *
              C153527 * C1313) *
         C153492) /
            (p * q * std::sqrt(p + q));
    d2ee[115] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C74251 * C136 + C74260 + C74260 + C153932 * C152 + C74253 * C329 +
              C74261 + C74261 + C153928 * C353 + C74255 * C330 + C74262 +
              C74262 + C153918 * C354 + C74257 * C1319 + C74263 + C74263 +
              C153860 * C1329) *
                 C153454 * C98459 +
             (C130867 + C130868 + C130869 + C130870) * C153454 * C153713) *
                C2030 -
            ((C130871 + C130872 + C130873 + C130874) * C153454 * C153713 +
             (C130870 + C130869 + C130868 + C130867) * C153454 * C98459) *
                C153591) *
               C153837 +
           (((C131537 + C131538 + C131539 + C131540) * C153454 * C98459 +
             (C132083 + C132084 + C132085 + C132086) * C153454 * C153713) *
                C153591 -
            ((C131540 + C131539 + C131538 + C131537) * C153454 * C153713 +
             (C74257 * C3127 + C74546 + C74546 + C153860 * C3135 +
              C74255 * C1319 + C74547 + C74547 + C153918 * C1329 +
              C74253 * C330 + C74548 + C74548 + C153928 * C354 + C74251 * C329 +
              C74549 + C74549 + C153932 * C353) *
                 C153454 * C98459) *
                C2030) *
               C153563) *
              C153829 +
          ((((C74851 + C74850 + C74849 + C74848) * C153454 * C98459 +
             (C74852 + C74853 + C74854 + C74855) * C153454 * C153713) *
                C153591 -
            ((C74848 + C74849 + C74850 + C74851) * C153454 * C153713 +
             (C74331 + C74330 + C74329 + C74328) * C153454 * C98459) *
                C2030) *
               C153837 +
           (((C74593 + C74592 + C74591 + C74590) * C153454 * C98459 +
             (C75578 + C75579 + C75580 + C75581) * C153454 * C153713) *
                C2030 -
            ((C74257 * C28651 + C76108 + C76108 + C153860 * C28655 +
              C74255 * C4958 + C76109 + C76109 + C153918 * C4964 +
              C74253 * C3442 + C76110 + C76110 + C153928 * C3450 +
              C74251 * C1460 + C76111 + C76111 + C153932 * C1470) *
                 C153454 * C153713 +
             (C75581 + C75580 + C75579 + C75578) * C153454 * C98459) *
                C153591) *
               C153563) *
              C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
               C70427 + C70427 + C153671 * C353) *
                  C153922 +
              (C70480 + C70481) * C153903 + C70490 * C153874) *
                 C98459 +
             ((C78815 + C78816) * C153922 + C78756 * C153903 +
              C79422 * C153874) *
                 C153713) *
                C2030 -
            ((C78784 * C153874 + C78770 * C153903 +
              (C78818 + C78817) * C153922) *
                 C153713 +
             (C71445 * C153874 + C78771 * C153903 +
              (C78816 + C78815) * C153922) *
                 C98459) *
                C153591) *
               C153837 +
           ((((C79844 + C79845) * C153922 + C79814 * C153903 +
              C89454 * C153874) *
                 C98459 +
             ((C79846 + C79847) * C153922 + C79819 * C153903 +
              (C79130 + C79131) * C153874) *
                 C153713) *
                C153591 -
            ((C88776 * C153874 + C79829 * C153903 +
              (C79845 + C79844) * C153922) *
                 C153713 +
             (C71237 * C153874 + (C70760 + C70761) * C153903 +
              (C70423 * C330 + C70706 + C70706 + C153671 * C354 +
               C70421 * C329 + C70707 + C70707 + C70415 * C353) *
                  C153922) *
                 C98459) *
                C2030) *
               C153563) *
              C153829 +
          ((((C78756 * C153922 + C79422 * C153903 + C89067 * C153874) * C98459 +
             (C78761 * C153922 + C79423 * C153903 +
              (C71040 + C71041) * C153874) *
                 C153713) *
                C153591 -
            ((C71444 * C153874 + C71445 * C153903 + C78771 * C153922) *
                 C153713 +
             (C70493 * C153874 + (C70483 + C70482) * C153903 +
              (C70481 + C70480) * C153922) *
                 C98459) *
                C2030) *
               C153837 +
           ((((C70761 + C70760) * C153922 + (C70759 + C70758) * C153903 +
              (C70757 + C70756) * C153874) *
                 C98459 +
             (C79814 * C153922 + C89454 * C153903 +
              (C71754 + C71755) * C153874) *
                 C153713) *
                C2030 -
            (((C70423 * C3444 + C72282 + C72282 + C153671 * C3452 +
               C70421 * C1458 + C72283 + C72283 + C70415 * C1468) *
                  C153874 +
              (C79131 + C79130) * C153903 + C79828 * C153922) *
                 C153713 +
             ((C71755 + C71754) * C153874 + C88776 * C153903 +
              C79829 * C153922) *
                 C98459) *
                C153591) *
               C153563) *
              C153498)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
              C70427 + C70427 + C153671 * C353) *
                 C153454 * C153933 +
             (C78815 + C78816) * C153454 * C153930 + C134463 * C153921 +
             C134467 * C153867) *
                C2030 -
            (C136833 * C153867 + C136826 * C153921 +
             (C78818 + C78817) * C153454 * C153930 +
             (C78816 + C78815) * C153454 * C153933) *
                C153591) *
               C153837 +
           (((C79844 + C79845) * C153454 * C153933 +
             (C79846 + C79847) * C153454 * C153930 +
             (C80648 + C80649) * C153454 * C153921 +
             (C135647 + C135648) * C153454 * C153867) *
                C153591 -
            (C135644 * C153867 + C135639 * C153921 +
             (C79845 + C79844) * C153454 * C153930 +
             (C70423 * C330 + C70706 + C70706 + C153671 * C354 + C70421 * C329 +
              C70707 + C70707 + C70415 * C353) *
                 C153454 * C153933) *
                C2030) *
               C153563) *
              C153829 +
          (((C78756 * C153454 * C153933 + C78761 * C153454 * C153930 +
             C78829 * C153454 * C153921 +
             (C78823 + C78824) * C153454 * C153867) *
                C153591 -
            (C134465 * C153867 + C134466 * C153921 +
             C78771 * C153454 * C153930 +
             (C70481 + C70480) * C153454 * C153933) *
                C2030) *
               C153837 +
           (((C70761 + C70760) * C153454 * C153933 +
             C79814 * C153454 * C153930 + C79819 * C153454 * C153921 +
             (C79848 + C79849) * C153454 * C153867) *
                C2030 -
            ((C70423 * C31196 + C80638 + C80638 + C153671 * C31200 +
              C70421 * C9116 + C80639 + C80639 + C70415 * C9122) *
                 C153454 * C153867 +
             (C79849 + C79848) * C153454 * C153921 +
             C79828 * C153454 * C153930 + C79829 * C153454 * C153933) *
                C153591) *
               C153563) *
              C153498)) /
            (p * q * std::sqrt(p + q));
    d2ee[116] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C74251 * C136 + C74260 + C74260 + C153932 * C152 + C74253 * C329 +
             C74261 + C74261 + C153928 * C353 + C74255 * C330 + C74262 +
             C74262 + C153918 * C354 + C74257 * C1319 + C74263 + C74263 +
             C153860 * C1329) *
                C153454 * C98459 +
            (C130867 + C130868 + C130869 + C130870) * C153454 * C153713) *
               C153910 -
           ((C130871 + C130872 + C130873 + C130874) * C153454 * C153713 +
            (C130870 + C130869 + C130868 + C130867) * C153454 * C98459) *
               C153911 +
           ((C130874 + C130873 + C130872 + C130871) * C153454 * C98459 +
            (C133295 + C133296 + C133297 + C133298) * C153454 * C153713) *
               C2546) *
              C153837 +
          (((C131537 + C131538 + C131539 + C131540) * C153454 * C98459 +
            (C132083 + C132084 + C132085 + C132086) * C153454 * C153713) *
               C153911 -
           ((C131540 + C131539 + C131538 + C131537) * C153454 * C153713 +
            (C74257 * C3127 + C74546 + C74546 + C153860 * C3135 +
             C74255 * C1319 + C74547 + C74547 + C153918 * C1329 +
             C74253 * C330 + C74548 + C74548 + C153928 * C354 + C74251 * C329 +
             C74549 + C74549 + C153932 * C353) *
                C153454 * C98459) *
               C153910 -
           ((C74257 * C30190 + C132071 + C132071 + C153860 * C30194 +
             C74255 * C30191 + C132072 + C132072 + C153918 * C30195 +
             C74253 * C6305 + C132073 + C132073 + C153928 * C6317 +
             C74251 * C6306 + C132074 + C132074 + C153932 * C6318) *
                C153454 * C153713 +
            (C132086 + C132085 + C132084 + C132083) * C153454 * C98459) *
               C2546) *
              C153563) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
              C70427 + C70427 + C153671 * C353) *
                 C153922 +
             (C70480 + C70481) * C153903 + C70490 * C153874) *
                C98459 +
            ((C78815 + C78816) * C153922 + C78756 * C153903 +
             C79422 * C153874) *
                C153713) *
               C153910 -
           ((C78784 * C153874 + C78770 * C153903 +
             (C78818 + C78817) * C153922) *
                C153713 +
            (C71445 * C153874 + C78771 * C153903 +
             (C78816 + C78815) * C153922) *
                C98459) *
               C153911 +
           ((C78827 * C153922 + C78761 * C153903 + C79423 * C153874) * C98459 +
            ((C78822 + C78821) * C153922 + C78829 * C153903 +
             (C78825 + C78826) * C153874) *
                C153713) *
               C2546) *
              C153837 +
          ((((C79844 + C79845) * C153922 + C79814 * C153903 +
             C89454 * C153874) *
                C98459 +
            ((C79846 + C79847) * C153922 + C79819 * C153903 +
             (C79130 + C79131) * C153874) *
                C153713) *
               C153911 -
           ((C88776 * C153874 + C79829 * C153903 +
             (C79845 + C79844) * C153922) *
                C153713 +
            (C71237 * C153874 + (C70760 + C70761) * C153903 +
             (C70423 * C330 + C70706 + C70706 + C153671 * C354 + C70421 * C329 +
              C70707 + C70707 + C70415 * C353) *
                 C153922) *
                C98459) *
               C153910 -
           (((C70423 * C6301 + C79830 + C79830 + C153671 * C6313 +
              C70421 * C6302 + C79831 + C79831 + C70415 * C6314) *
                 C153874 +
             (C79849 + C79848) * C153903 + (C80649 + C80648) * C153922) *
                C153713 +
            ((C79131 + C79130) * C153874 + C79828 * C153903 +
             C80637 * C153922) *
                C98459) *
               C2546) *
              C153563) *
         C153492) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
             C70427 + C70427 + C153671 * C353) *
                C153454 * C153933 +
            (C78815 + C78816) * C153454 * C153930 + C134463 * C153921 +
            C134467 * C153867) *
               C153910 -
           (C136833 * C153867 + C136826 * C153921 +
            (C78818 + C78817) * C153454 * C153930 +
            (C78816 + C78815) * C153454 * C153933) *
               C153911 +
           (C134463 * C153933 + C134467 * C153930 +
            (C82430 + C82431) * C153454 * C153921 +
            (C136838 + C136839) * C153454 * C153867) *
               C2546) *
              C153837 +
          (((C79844 + C79845) * C153454 * C153933 +
            (C79846 + C79847) * C153454 * C153930 +
            (C80648 + C80649) * C153454 * C153921 +
            (C135647 + C135648) * C153454 * C153867) *
               C153911 -
           (C135644 * C153867 + C135639 * C153921 +
            (C79845 + C79844) * C153454 * C153930 +
            (C70423 * C330 + C70706 + C70706 + C153671 * C354 + C70421 * C329 +
             C70707 + C70707 + C70415 * C353) *
                C153454 * C153933) *
               C153910 -
           ((C70423 * C34006 + C135640 + C135640 + C153671 * C34010 +
             C70421 * C34007 + C135641 + C135641 + C70415 * C34011) *
                C153454 * C153867 +
            (C135648 + C135647) * C153454 * C153921 + C135644 * C153930 +
            C135639 * C153933) *
               C2546) *
              C153563) *
         C153492) /
            (p * q * std::sqrt(p + q));
    d2ee[117] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C70421 * C136 + C70426 + C70426 + C70415 * C152 +
                  C70423 * C329 + C70427 + C70427 + C153671 * C353) *
                     C153922 +
                 (C70480 + C70481) * C153903 + C70490 * C153874) *
                    C98459 +
                ((C78815 + C78816) * C153922 + C78756 * C153903 +
                 C79422 * C153874) *
                    C153713) *
                   C2030 -
               ((C78784 * C153874 + C78770 * C153903 +
                 (C78818 + C78817) * C153922) *
                    C153713 +
                (C71445 * C153874 + C78771 * C153903 +
                 (C78816 + C78815) * C153922) *
                    C98459) *
                   C153591) *
                  C153511 * C1225 +
              (((C78756 * C153922 + C79422 * C153903 + C89067 * C153874) *
                    C98459 +
                (C78761 * C153922 + C79423 * C153903 +
                 (C71040 + C71041) * C153874) *
                    C153713) *
                   C153591 -
               ((C71444 * C153874 + C71445 * C153903 + C78771 * C153922) *
                    C153713 +
                (C70493 * C153874 + (C70483 + C70482) * C153903 +
                 (C70481 + C70480) * C153922) *
                    C98459) *
                   C2030) *
                  C153511 * C1226 +
              (((C70490 * C153922 + C70491 * C153903 +
                 (C70487 + C70486) * C153874) *
                    C98459 +
                (C79422 * C153922 + C89067 * C153903 +
                 (C71456 + C71457) * C153874) *
                    C153713) *
                   C2030 -
               (((C70423 * C1457 + C71004 + C71004 + C153671 * C1467 +
                  C70421 * C547 + C71005 + C71005 + C70415 * C571) *
                     C153874 +
                 (C71041 + C71040) * C153903 + C78784 * C153922) *
                    C153713 +
                ((C71457 + C71456) * C153874 + C71444 * C153903 +
                 C71445 * C153922) *
                    C98459) *
                   C153591) *
                  C153511 * C1227) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C70421 * C136 + C70426 + C70426 + C70415 * C152 +
                  C70423 * C329 + C70427 + C70427 + C153671 * C353) *
                     C153922 +
                 (C70480 + C70481) * C153903 + C70490 * C153874) *
                    C98459 +
                ((C78815 + C78816) * C153922 + C78756 * C153903 +
                 C79422 * C153874) *
                    C153713) *
                   C2030 -
               ((C78784 * C153874 + C78770 * C153903 +
                 (C78818 + C78817) * C153922) *
                    C153713 +
                (C71445 * C153874 + C78771 * C153903 +
                 (C78816 + C78815) * C153922) *
                    C98459) *
                   C153591) *
                  C320 +
              ((((C79844 + C79845) * C153922 + C79814 * C153903 +
                 C89454 * C153874) *
                    C98459 +
                ((C79846 + C79847) * C153922 + C79819 * C153903 +
                 (C79130 + C79131) * C153874) *
                    C153713) *
                   C153591 -
               ((C88776 * C153874 + C79829 * C153903 +
                 (C79845 + C79844) * C153922) *
                    C153713 +
                (C71237 * C153874 + (C70760 + C70761) * C153903 +
                 (C70423 * C330 + C70706 + C70706 + C153671 * C354 +
                  C70421 * C329 + C70707 + C70707 + C70415 * C353) *
                     C153922) *
                    C98459) *
                   C2030) *
                  C321 +
              ((((C70421 * C330 + C70708 + C70708 + C70415 * C354 +
                  C70423 * C1319 + C70709 + C70709 + C153671 * C1329) *
                     C153922 +
                 (C70762 + C70763) * C153903 + (C70764 + C70765) * C153874) *
                    C98459 +
                ((C81636 + C81637) * C153922 + (C78458 + C78459) * C153903 +
                 (C88194 + C88195) * C153874) *
                    C153713) *
                   C2030 -
               (((C70423 * C4957 + C78442 + C78442 + C153671 * C4963 +
                  C70421 * C3443 + C78443 + C78443 + C70415 * C3451) *
                     C153874 +
                 (C78461 + C78460) * C153903 + (C81639 + C81638) * C153922) *
                    C153713 +
                ((C88195 + C88194) * C153874 + (C78459 + C78458) * C153903 +
                 (C81637 + C81636) * C153922) *
                    C98459) *
                   C153591) *
                  C322) *
             C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
             C70427 + C70427 + C153671 * C353) *
                C153922 +
            (C70480 + C70481) * C153903 + C70490 * C153874) *
               C98459 +
           ((C78815 + C78816) * C153922 + C78756 * C153903 + C79422 * C153874) *
               C153713) *
              C2236 -
          ((C78784 * C153874 + C78770 * C153903 + (C78818 + C78817) * C153922) *
               C153713 +
           (C71445 * C153874 + C78771 * C153903 + (C78816 + C78815) * C153922) *
               C98459) *
              C2237 +
          ((C78827 * C153922 + C78761 * C153903 + C79423 * C153874) * C98459 +
           ((C78822 + C78821) * C153922 + C78829 * C153903 +
            (C78825 + C78826) * C153874) *
               C153713) *
              C2238 -
          (((C70423 * C9115 + C78785 + C78785 + C153671 * C9121 +
             C70421 * C7675 + C78786 + C78786 + C70415 * C7683) *
                C153874 +
            (C78824 + C78823) * C153903 + (C82431 + C82430) * C153922) *
               C153713 +
           ((C78826 + C78825) * C153874 + C78828 * C153903 + C82415 * C153922) *
               C98459) *
              C2239) *
         C153511 * C153492) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C74251 * C136 + C74260 + C74260 + C153932 * C152 + C74253 * C329 +
             C74261 + C74261 + C153928 * C353 + C74255 * C330 + C74262 +
             C74262 + C153918 * C354 + C74257 * C1319 + C74263 + C74263 +
             C153860 * C1329) *
                C153454 * C98459 +
            (C130867 + C130868 + C130869 + C130870) * C153454 * C153713) *
               C2030 -
           ((C130871 + C130872 + C130873 + C130874) * C153454 * C153713 +
            (C130870 + C130869 + C130868 + C130867) * C153454 * C98459) *
               C153591) *
              C153511 * C1225 +
          (((C74851 + C74850 + C74849 + C74848) * C153454 * C98459 +
            (C74852 + C74853 + C74854 + C74855) * C153454 * C153713) *
               C153591 -
           ((C74848 + C74849 + C74850 + C74851) * C153454 * C153713 +
            (C74331 + C74330 + C74329 + C74328) * C153454 * C98459) *
               C2030) *
              C153511 * C1226 +
          (((C74335 + C74334 + C74333 + C74332) * C153454 * C98459 +
            (C75288 + C75289 + C75290 + C75291) * C153454 * C153713) *
               C2030 -
           ((C74257 * C4957 + C74828 + C74828 + C153860 * C4963 +
             C74255 * C3443 + C74829 + C74829 + C153918 * C3451 +
             C74253 * C1459 + C74830 + C74830 + C153928 * C1469 +
             C74251 * C545 + C74831 + C74831 + C153932 * C569) *
                C153454 * C153713 +
            (C75291 + C75290 + C75289 + C75288) * C153454 * C98459) *
               C153591) *
              C153511 * C1227)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C74251 * C136 + C74260 + C74260 + C153932 * C152 + C74253 * C329 +
             C74261 + C74261 + C153928 * C353 + C74255 * C330 + C74262 +
             C74262 + C153918 * C354 + C74257 * C1319 + C74263 + C74263 +
             C153860 * C1329) *
                C153454 * C98459 +
            (C130867 + C130868 + C130869 + C130870) * C153454 * C153713) *
               C2030 -
           ((C130871 + C130872 + C130873 + C130874) * C153454 * C153713 +
            (C130870 + C130869 + C130868 + C130867) * C153454 * C98459) *
               C153591) *
              C320 +
          (((C131537 + C131538 + C131539 + C131540) * C153454 * C98459 +
            (C132083 + C132084 + C132085 + C132086) * C153454 * C153713) *
               C153591 -
           ((C131540 + C131539 + C131538 + C131537) * C153454 * C153713 +
            (C74257 * C3127 + C74546 + C74546 + C153860 * C3135 +
             C74255 * C1319 + C74547 + C74547 + C153918 * C1329 +
             C74253 * C330 + C74548 + C74548 + C153928 * C354 + C74251 * C329 +
             C74549 + C74549 + C153932 * C353) *
                C153454 * C98459) *
               C2030) *
              C321 +
          (((C74251 * C330 + C74550 + C74550 + C153932 * C354 + C74253 * C1319 +
             C74551 + C74551 + C153928 * C1329 + C74255 * C3127 + C74552 +
             C74552 + C153918 * C3135 + C74257 * C4723 + C74553 + C74553 +
             C153860 * C4729) *
                C153454 * C98459 +
            (C132753 + C132754 + C132755 + C132756) * C153454 * C153713) *
               C2030 -
           ((C74257 * C29442 + C132741 + C132741 + C153860 * C29444 +
             C74255 * C28650 + C132742 + C132742 + C153918 * C28654 +
             C74253 * C4959 + C132743 + C132743 + C153928 * C4965 +
             C74251 * C3441 + C132744 + C132744 + C153932 * C3449) *
                C153454 * C153713 +
            (C132756 + C132755 + C132754 + C132753) * C153454 * C98459) *
               C153591) *
              C322) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C74251 * C136 + C74260 + C74260 + C153932 * C152 + C74253 * C329 +
            C74261 + C74261 + C153928 * C353 + C74255 * C330 + C74262 + C74262 +
            C153918 * C354 + C74257 * C1319 + C74263 + C74263 +
            C153860 * C1329) *
               C153454 * C98459 +
           (C130867 + C130868 + C130869 + C130870) * C153454 * C153713) *
              C2236 -
          ((C130871 + C130872 + C130873 + C130874) * C153454 * C153713 +
           (C130870 + C130869 + C130868 + C130867) * C153454 * C98459) *
              C2237 +
          ((C130874 + C130873 + C130872 + C130871) * C153454 * C98459 +
           (C133295 + C133296 + C133297 + C133298) * C153454 * C153713) *
              C2238 -
          ((C74257 * C32641 + C133283 + C133283 + C153860 * C32643 +
            C74255 * C31195 + C133284 + C133284 + C153918 * C31199 +
            C74253 * C9117 + C133285 + C133285 + C153928 * C9123 +
            C74251 * C7673 + C133286 + C133286 + C153932 * C7681) *
               C153454 * C153713 +
           (C133298 + C133297 + C133296 + C133295) * C153454 * C98459) *
              C2239) *
         C153511 * C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
             C70427 + C70427 + C153671 * C353) *
                C153454 * C153933 +
            (C78815 + C78816) * C153454 * C153930 + C134463 * C153921 +
            C134467 * C153867) *
               C2030 -
           ((C82431 + C82430) * C153454 * C153867 + C82415 * C153454 * C153921 +
            (C78818 + C78817) * C153454 * C153930 +
            (C78816 + C78815) * C153454 * C153933) *
               C153591) *
              C153511 * C1225 +
          ((C78756 * C153454 * C153933 + C78761 * C153454 * C153930 +
            C78829 * C153454 * C153921 +
            (C78823 + C78824) * C153454 * C153867) *
               C153591 -
           (C134465 * C153867 + C134466 * C153921 + C78771 * C153454 * C153930 +
            (C70481 + C70480) * C153454 * C153933) *
               C2030) *
              C153511 * C1226 +
          ((C70490 * C153454 * C153933 + C79422 * C153454 * C153930 +
            C79423 * C153454 * C153921 +
            (C78825 + C78826) * C153454 * C153867) *
               C2030 -
           ((C70423 * C9115 + C78785 + C78785 + C153671 * C9121 +
             C70421 * C7675 + C78786 + C78786 + C70415 * C7683) *
                C153454 * C153867 +
            (C78826 + C78825) * C153454 * C153921 + C78784 * C153454 * C153930 +
            C71445 * C153454 * C153933) *
               C153591) *
              C153511 * C1227)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
             C70427 + C70427 + C153671 * C353) *
                C153454 * C153933 +
            (C78815 + C78816) * C153454 * C153930 + C134463 * C153921 +
            C134467 * C153867) *
               C2030 -
           ((C82431 + C82430) * C153454 * C153867 + C82415 * C153454 * C153921 +
            (C78818 + C78817) * C153454 * C153930 +
            (C78816 + C78815) * C153454 * C153933) *
               C153591) *
              C320 +
          (((C79844 + C79845) * C153454 * C153933 +
            (C79846 + C79847) * C153454 * C153930 +
            (C80648 + C80649) * C153454 * C153921 +
            (C135647 + C135648) * C153454 * C153867) *
               C153591 -
           (C135644 * C153867 + C135639 * C153921 +
            (C79845 + C79844) * C153454 * C153930 +
            (C70423 * C330 + C70706 + C70706 + C153671 * C354 + C70421 * C329 +
             C70707 + C70707 + C70415 * C353) *
                C153454 * C153933) *
               C2030) *
              C321 +
          (((C70421 * C330 + C70708 + C70708 + C70415 * C354 + C70423 * C1319 +
             C70709 + C70709 + C153671 * C1329) *
                C153454 * C153933 +
            (C81636 + C81637) * C153454 * C153930 +
            (C81638 + C81639) * C153454 * C153921 +
            (C136305 + C136306) * C153454 * C153867) *
               C2030 -
           ((C70423 * C32641 + C136299 + C136299 + C153671 * C32643 +
             C70421 * C31195 + C136300 + C136300 + C70415 * C31199) *
                C153454 * C153867 +
            (C136306 + C136305) * C153454 * C153921 +
            (C81639 + C81638) * C153454 * C153930 +
            (C81637 + C81636) * C153454 * C153933) *
               C153591) *
              C322) *
         C153492) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
            C70427 + C70427 + C153671 * C353) *
               C153454 * C153933 +
           (C78815 + C78816) * C153454 * C153930 + C134463 * C153921 +
           C134467 * C153867) *
              C2236 -
          (C136833 * C153867 + C136826 * C153921 +
           (C78818 + C78817) * C153454 * C153930 +
           (C78816 + C78815) * C153454 * C153933) *
              C2237 +
          (C134463 * C153933 + C134467 * C153930 +
           (C82430 + C82431) * C153454 * C153921 +
           (C136838 + C136839) * C153454 * C153867) *
              C2238 -
          ((C70423 * C56702 + C136831 + C136831 + C153671 * C56704 +
            C70421 * C55913 + C136832 + C136832 + C70415 * C55917) *
               C153454 * C153867 +
           (C136839 + C136838) * C153454 * C153921 + C136833 * C153930 +
           C136826 * C153933) *
              C2239) *
         C153511 * C153492) /
            (p * q * std::sqrt(p + q));
    d2ee[118] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C74251 * C136 + C74260 + C74260 + C153932 * C152 + C74253 * C329 +
             C74261 + C74261 + C153928 * C353 + C74255 * C330 + C74262 +
             C74262 + C153918 * C354 + C74257 * C1319 + C74263 + C74263 +
             C153860 * C1329) *
                C153454 * C98459 +
            (C130867 + C130868 + C130869 + C130870) * C153454 * C153713) *
               C153910 -
           ((C130871 + C130872 + C130873 + C130874) * C153454 * C153713 +
            (C130870 + C130869 + C130868 + C130867) * C153454 * C98459) *
               C153911 +
           ((C130874 + C130873 + C130872 + C130871) * C153454 * C98459 +
            (C133295 + C133296 + C133297 + C133298) * C153454 * C153713) *
               C2546) *
              C153511 * C153829 +
          (((C74851 + C74850 + C74849 + C74848) * C153454 * C98459 +
            (C74852 + C74853 + C74854 + C74855) * C153454 * C153713) *
               C153911 -
           ((C74848 + C74849 + C74850 + C74851) * C153454 * C153713 +
            (C74331 + C74330 + C74329 + C74328) * C153454 * C98459) *
               C153910 -
           ((C74257 * C31999 + C77288 + C77288 + C153860 * C32001 +
             C74255 * C6303 + C77289 + C77289 + C153918 * C6315 +
             C74253 * C6304 + C77290 + C77290 + C153928 * C6316 +
             C74251 * C2243 + C77291 + C77291 + C153932 * C2253) *
                C153454 * C153713 +
            (C74855 + C74854 + C74853 + C74852) * C153454 * C98459) *
               C2546) *
              C153511 * C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
              C70427 + C70427 + C153671 * C353) *
                 C153922 +
             (C70480 + C70481) * C153903 + C70490 * C153874) *
                C98459 +
            ((C78815 + C78816) * C153922 + C78756 * C153903 +
             C79422 * C153874) *
                C153713) *
               C153910 -
           ((C78784 * C153874 + C78770 * C153903 +
             (C78818 + C78817) * C153922) *
                C153713 +
            (C71445 * C153874 + C78771 * C153903 +
             (C78816 + C78815) * C153922) *
                C98459) *
               C153911 +
           ((C78827 * C153922 + C78761 * C153903 + C79423 * C153874) * C98459 +
            ((C78822 + C78821) * C153922 + C78829 * C153903 +
             (C78825 + C78826) * C153874) *
                C153713) *
               C2546) *
              C153511 * C153829 +
          (((C78756 * C153922 + C79422 * C153903 + C89067 * C153874) * C98459 +
            (C78761 * C153922 + C79423 * C153903 +
             (C71040 + C71041) * C153874) *
                C153713) *
               C153911 -
           ((C71444 * C153874 + C71445 * C153903 + C78771 * C153922) * C153713 +
            (C70493 * C153874 + (C70483 + C70482) * C153903 +
             (C70481 + C70480) * C153922) *
                C98459) *
               C153910 -
           (((C70423 * C8488 + C73462 + C73462 + C153671 * C8490 +
              C70421 * C2241 + C73463 + C73463 + C70415 * C2251) *
                 C153874 +
             (C78826 + C78825) * C153903 + C78828 * C153922) *
                C153713 +
            ((C71041 + C71040) * C153874 + C78784 * C153903 +
             C78770 * C153922) *
                C98459) *
               C2546) *
              C153511 * C153498)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
             C70427 + C70427 + C153671 * C353) *
                C153454 * C153933 +
            (C78815 + C78816) * C153454 * C153930 + C134463 * C153921 +
            C134467 * C153867) *
               C153910 -
           (C136833 * C153867 + C136826 * C153921 +
            (C78818 + C78817) * C153454 * C153930 +
            (C78816 + C78815) * C153454 * C153933) *
               C153911 +
           (C134463 * C153933 + C134467 * C153930 +
            (C82430 + C82431) * C153454 * C153921 +
            (C136838 + C136839) * C153454 * C153867) *
               C2546) *
              C153511 * C153829 +
          ((C78756 * C153454 * C153933 + C78761 * C153454 * C153930 +
            C78829 * C153454 * C153921 +
            (C78823 + C78824) * C153454 * C153867) *
               C153911 -
           (C134465 * C153867 + C134466 * C153921 + C78771 * C153454 * C153930 +
            (C70481 + C70480) * C153454 * C153933) *
               C153910 -
           ((C70423 * C56351 + C82420 + C82420 + C153671 * C56353 +
             C70421 * C10465 + C82421 + C82421 + C70415 * C10471) *
                C153454 * C153867 +
            (C78824 + C78823) * C153454 * C153921 + C134465 * C153930 +
            C134466 * C153933) *
               C2546) *
              C153511 * C153498)) /
            (p * q * std::sqrt(p + q));
    d2ee[119] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
              C70427 + C70427 + C153671 * C353) *
                 C153922 +
             (C70480 + C70481) * C153903 + C70490 * C153874) *
                C98459 +
            ((C78815 + C78816) * C153922 + C78756 * C153903 +
             C79422 * C153874) *
                C153713) *
               C2030 -
           ((C78784 * C153874 + C78770 * C153903 +
             (C78818 + C78817) * C153922) *
                C153713 +
            (C71445 * C153874 + C78771 * C153903 +
             (C78816 + C78815) * C153922) *
                C98459) *
               C153591) *
              C320 +
          ((((C79844 + C79845) * C153922 + C79814 * C153903 +
             C89454 * C153874) *
                C98459 +
            ((C79846 + C79847) * C153922 + C79819 * C153903 +
             (C79130 + C79131) * C153874) *
                C153713) *
               C153591 -
           ((C88776 * C153874 + C79829 * C153903 +
             (C79845 + C79844) * C153922) *
                C153713 +
            (C71237 * C153874 + (C70760 + C70761) * C153903 +
             (C70423 * C330 + C70706 + C70706 + C153671 * C354 + C70421 * C329 +
              C70707 + C70707 + C70415 * C353) *
                 C153922) *
                C98459) *
               C2030) *
              C321 +
          ((((C70421 * C330 + C70708 + C70708 + C70415 * C354 + C70423 * C1319 +
              C70709 + C70709 + C153671 * C1329) *
                 C153922 +
             (C70762 + C70763) * C153903 + (C70764 + C70765) * C153874) *
                C98459 +
            ((C81636 + C81637) * C153922 + (C78458 + C78459) * C153903 +
             (C88194 + C88195) * C153874) *
                C153713) *
               C2030 -
           (((C70423 * C4957 + C78442 + C78442 + C153671 * C4963 +
              C70421 * C3443 + C78443 + C78443 + C70415 * C3451) *
                 C153874 +
             (C78461 + C78460) * C153903 + (C81639 + C81638) * C153922) *
                C153713 +
            ((C88195 + C88194) * C153874 + (C78459 + C78458) * C153903 +
             (C81637 + C81636) * C153922) *
                C98459) *
               C153591) *
              C322) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
              C70427 + C70427 + C153671 * C353) *
                 C153922 +
             (C70480 + C70481) * C153903 + C70490 * C153874) *
                C98459 +
            ((C78815 + C78816) * C153922 + C78756 * C153903 +
             C79422 * C153874) *
                C153713) *
               C2030 -
           ((C78784 * C153874 + C78770 * C153903 +
             (C78818 + C78817) * C153922) *
                C153713 +
            (C71445 * C153874 + C78771 * C153903 +
             (C78816 + C78815) * C153922) *
                C98459) *
               C153591) *
              C153511 * C1225 +
          (((C78756 * C153922 + C79422 * C153903 + C89067 * C153874) * C98459 +
            (C78761 * C153922 + C79423 * C153903 +
             (C71040 + C71041) * C153874) *
                C153713) *
               C153591 -
           ((C71444 * C153874 + C71445 * C153903 + C78771 * C153922) * C153713 +
            (C70493 * C153874 + (C70483 + C70482) * C153903 +
             (C70481 + C70480) * C153922) *
                C98459) *
               C2030) *
              C153511 * C1226 +
          (((C70490 * C153922 + C70491 * C153903 +
             (C70487 + C70486) * C153874) *
                C98459 +
            (C79422 * C153922 + C89067 * C153903 +
             (C71456 + C71457) * C153874) *
                C153713) *
               C2030 -
           (((C70423 * C1457 + C71004 + C71004 + C153671 * C1467 +
              C70421 * C547 + C71005 + C71005 + C70415 * C571) *
                 C153874 +
             (C71041 + C71040) * C153903 + C78784 * C153922) *
                C153713 +
            ((C71457 + C71456) * C153874 + C71444 * C153903 +
             C71445 * C153922) *
                C98459) *
               C153591) *
              C153511 * C1227)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C74251 * C136 + C74260 + C74260 + C153932 * C152 + C74253 * C329 +
             C74261 + C74261 + C153928 * C353 + C74255 * C330 + C74262 +
             C74262 + C153918 * C354 + C74257 * C1319 + C74263 + C74263 +
             C153860 * C1329) *
                C153454 * C98459 +
            (C130867 + C130868 + C130869 + C130870) * C153454 * C153713) *
               C2030 -
           ((C130871 + C130872 + C130873 + C130874) * C153454 * C153713 +
            (C130870 + C130869 + C130868 + C130867) * C153454 * C98459) *
               C153591) *
              C153511 * C1225 +
          (((C74851 + C74850 + C74849 + C74848) * C153454 * C98459 +
            (C74852 + C74853 + C74854 + C74855) * C153454 * C153713) *
               C153591 -
           ((C74848 + C74849 + C74850 + C74851) * C153454 * C153713 +
            (C74331 + C74330 + C74329 + C74328) * C153454 * C98459) *
               C2030) *
              C153511 * C1226 +
          (((C74335 + C74334 + C74333 + C74332) * C153454 * C98459 +
            (C75288 + C75289 + C75290 + C75291) * C153454 * C153713) *
               C2030 -
           ((C74257 * C4957 + C74828 + C74828 + C153860 * C4963 +
             C74255 * C3443 + C74829 + C74829 + C153918 * C3451 +
             C74253 * C1459 + C74830 + C74830 + C153928 * C1469 +
             C74251 * C545 + C74831 + C74831 + C153932 * C569) *
                C153454 * C153713 +
            (C75291 + C75290 + C75289 + C75288) * C153454 * C98459) *
               C153591) *
              C153511 * C1227)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C74251 * C136 + C74260 + C74260 + C153932 * C152 + C74253 * C329 +
             C74261 + C74261 + C153928 * C353 + C74255 * C330 + C74262 +
             C74262 + C153918 * C354 + C74257 * C1319 + C74263 + C74263 +
             C153860 * C1329) *
                C153454 * C98459 +
            (C130867 + C130868 + C130869 + C130870) * C153454 * C153713) *
               C2030 -
           ((C130871 + C130872 + C130873 + C130874) * C153454 * C153713 +
            (C130870 + C130869 + C130868 + C130867) * C153454 * C98459) *
               C153591) *
              C320 +
          (((C131537 + C131538 + C131539 + C131540) * C153454 * C98459 +
            (C132083 + C132084 + C132085 + C132086) * C153454 * C153713) *
               C153591 -
           ((C131540 + C131539 + C131538 + C131537) * C153454 * C153713 +
            (C74257 * C3127 + C74546 + C74546 + C153860 * C3135 +
             C74255 * C1319 + C74547 + C74547 + C153918 * C1329 +
             C74253 * C330 + C74548 + C74548 + C153928 * C354 + C74251 * C329 +
             C74549 + C74549 + C153932 * C353) *
                C153454 * C98459) *
               C2030) *
              C321 +
          (((C74251 * C330 + C74550 + C74550 + C153932 * C354 + C74253 * C1319 +
             C74551 + C74551 + C153928 * C1329 + C74255 * C3127 + C74552 +
             C74552 + C153918 * C3135 + C74257 * C4723 + C74553 + C74553 +
             C153860 * C4729) *
                C153454 * C98459 +
            (C132753 + C132754 + C132755 + C132756) * C153454 * C153713) *
               C2030 -
           ((C74257 * C29442 + C132741 + C132741 + C153860 * C29444 +
             C74255 * C28650 + C132742 + C132742 + C153918 * C28654 +
             C74253 * C4959 + C132743 + C132743 + C153928 * C4965 +
             C74251 * C3441 + C132744 + C132744 + C153932 * C3449) *
                C153454 * C153713 +
            (C132756 + C132755 + C132754 + C132753) * C153454 * C98459) *
               C153591) *
              C322) *
         C153492) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
             C70427 + C70427 + C153671 * C353) *
                C153454 * C153933 +
            (C78815 + C78816) * C153454 * C153930 + C134463 * C153921 +
            C134467 * C153867) *
               C2030 -
           ((C82431 + C82430) * C153454 * C153867 + C82415 * C153454 * C153921 +
            (C78818 + C78817) * C153454 * C153930 +
            (C78816 + C78815) * C153454 * C153933) *
               C153591) *
              C153511 * C1225 +
          ((C78756 * C153454 * C153933 + C78761 * C153454 * C153930 +
            C78829 * C153454 * C153921 +
            (C78823 + C78824) * C153454 * C153867) *
               C153591 -
           (C134465 * C153867 + C134466 * C153921 + C78771 * C153454 * C153930 +
            (C70481 + C70480) * C153454 * C153933) *
               C2030) *
              C153511 * C1226 +
          ((C70490 * C153454 * C153933 + C79422 * C153454 * C153930 +
            C79423 * C153454 * C153921 +
            (C78825 + C78826) * C153454 * C153867) *
               C2030 -
           ((C70423 * C9115 + C78785 + C78785 + C153671 * C9121 +
             C70421 * C7675 + C78786 + C78786 + C70415 * C7683) *
                C153454 * C153867 +
            (C78826 + C78825) * C153454 * C153921 + C78784 * C153454 * C153930 +
            C71445 * C153454 * C153933) *
               C153591) *
              C153511 * C1227)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
             C70427 + C70427 + C153671 * C353) *
                C153454 * C153933 +
            (C78815 + C78816) * C153454 * C153930 + C134463 * C153921 +
            C134467 * C153867) *
               C2030 -
           ((C82431 + C82430) * C153454 * C153867 + C82415 * C153454 * C153921 +
            (C78818 + C78817) * C153454 * C153930 +
            (C78816 + C78815) * C153454 * C153933) *
               C153591) *
              C320 +
          (((C79844 + C79845) * C153454 * C153933 +
            (C79846 + C79847) * C153454 * C153930 +
            (C80648 + C80649) * C153454 * C153921 +
            (C135647 + C135648) * C153454 * C153867) *
               C153591 -
           (C135644 * C153867 + C135639 * C153921 +
            (C79845 + C79844) * C153454 * C153930 +
            (C70423 * C330 + C70706 + C70706 + C153671 * C354 + C70421 * C329 +
             C70707 + C70707 + C70415 * C353) *
                C153454 * C153933) *
               C2030) *
              C321 +
          (((C70421 * C330 + C70708 + C70708 + C70415 * C354 + C70423 * C1319 +
             C70709 + C70709 + C153671 * C1329) *
                C153454 * C153933 +
            (C81636 + C81637) * C153454 * C153930 +
            (C81638 + C81639) * C153454 * C153921 +
            (C136305 + C136306) * C153454 * C153867) *
               C2030 -
           ((C70423 * C32641 + C136299 + C136299 + C153671 * C32643 +
             C70421 * C31195 + C136300 + C136300 + C70415 * C31199) *
                C153454 * C153867 +
            (C136306 + C136305) * C153454 * C153921 +
            (C81639 + C81638) * C153454 * C153930 +
            (C81637 + C81636) * C153454 * C153933) *
               C153591) *
              C322) *
         C153492) /
            (p * q * std::sqrt(p + q));
    d2ee[120] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
              C70427 + C70427 + C153671 * C353) *
                 C153818 +
             (C70480 + C70481) * C153464) *
                C153709 +
            ((C78815 + C78816) * C153818 + C78756 * C153464) * C153716 +
            C143484 * C116029) *
               C153527 * C153837 -
           ((C79828 * C153464 + C80637 * C153818) * C116029 +
            (C79829 * C153464 + (C79845 + C79844) * C153818) * C153716 +
            ((C70760 + C70761) * C153464 +
             (C70423 * C330 + C70706 + C70706 + C153671 * C354 + C70421 * C329 +
              C70707 + C70707 + C70415 * C353) *
                 C153818) *
                C153709) *
               C153527 * C153563) *
              C153906 +
          ((((C70761 + C70760) * C153818 + (C70759 + C70758) * C153464) *
                C153709 +
            (C79814 * C153818 + C89454 * C153464) * C153716 +
            (C79819 * C153818 + (C79130 + C79131) * C153464) * C116029) *
               C153527 * C153563 -
           (C143485 * C116029 +
            (C71445 * C153464 + C78771 * C153818) * C153716 +
            ((C70483 + C70482) * C153464 + (C70481 + C70480) * C153818) *
                C153709) *
               C153527 * C153837) *
              C153907 +
          (((C70490 * C153818 + C70491 * C153464) * C153709 +
            (C79422 * C153818 + C89067 * C153464) * C153716 +
            (C79423 * C153818 + (C71040 + C71041) * C153464) * C116029) *
               C153527 * C153837 -
           (((C70423 * C3444 + C72282 + C72282 + C153671 * C3452 +
              C70421 * C1458 + C72283 + C72283 + C70415 * C1468) *
                 C153464 +
             (C79131 + C79130) * C153818) *
                C116029 +
            ((C71755 + C71754) * C153464 + C88776 * C153818) * C153716 +
            (C71236 * C153464 + C71237 * C153818) * C153709) *
               C153527 * C153563) *
              C752)) /
        (p * q * std::sqrt(p + q));
    d2ee[121] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
               C70427 + C70427 + C153671 * C353) *
                  C153818 +
              (C70480 + C70481) * C153464) *
                 C153709 +
             ((C78815 + C78816) * C153818 + C78756 * C153464) * C153716 +
             C143484 * C116029) *
                C153838 -
            ((C78828 * C153464 + C82415 * C153818) * C116029 +
             (C78770 * C153464 + (C78818 + C78817) * C153818) * C153716 +
             (C78771 * C153464 + (C78816 + C78815) * C153818) * C153709) *
                C153591) *
               C153837 +
           ((((C79844 + C79845) * C153818 + C79814 * C153464) * C153709 +
             ((C79846 + C79847) * C153818 + C79819 * C153464) * C153716 +
             ((C80648 + C80649) * C153818 + (C79848 + C79849) * C153464) *
                 C116029) *
                C153591 -
            ((C79828 * C153464 + C80637 * C153818) * C116029 +
             (C79829 * C153464 + (C79845 + C79844) * C153818) * C153716 +
             ((C70760 + C70761) * C153464 +
              (C70423 * C330 + C70706 + C70706 + C153671 * C354 +
               C70421 * C329 + C70707 + C70707 + C70415 * C353) *
                  C153818) *
                 C153709) *
                C153838) *
               C153563) *
              C323 +
          ((((C78756 * C153818 + C79422 * C153464) * C153709 +
             (C78761 * C153818 + C79423 * C153464) * C153716 +
             (C78829 * C153818 + (C78825 + C78826) * C153464) * C116029) *
                C153591 -
            (C143485 * C116029 +
             (C71445 * C153464 + C78771 * C153818) * C153716 +
             ((C70483 + C70482) * C153464 + (C70481 + C70480) * C153818) *
                 C153709) *
                C153838) *
               C153837 +
           ((((C70761 + C70760) * C153818 + (C70759 + C70758) * C153464) *
                 C153709 +
             (C79814 * C153818 + C89454 * C153464) * C153716 +
             (C79819 * C153818 + (C79130 + C79131) * C153464) * C116029) *
                C153838 -
            (((C70423 * C6301 + C79830 + C79830 + C153671 * C6313 +
               C70421 * C6302 + C79831 + C79831 + C70415 * C6314) *
                  C153464 +
              (C79849 + C79848) * C153818) *
                 C116029 +
             ((C79131 + C79130) * C153464 + C79828 * C153818) * C153716 +
             (C88776 * C153464 + C79829 * C153818) * C153709) *
                C153591) *
               C153563) *
              C153498)) /
        (p * q * std::sqrt(p + q));
    d2ee[122] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
              C70427 + C70427 + C153671 * C353) *
                 C153818 +
             (C70480 + C70481) * C153464) *
                C153709 +
            ((C78815 + C78816) * C153818 + C78756 * C153464) * C153716 +
            (C78827 * C153818 + C78761 * C153464) * C116029) *
               C153527 * C320 -
           ((C79828 * C153464 + C80637 * C153818) * C116029 +
            (C79829 * C153464 + (C79845 + C79844) * C153818) * C153716 +
            ((C70760 + C70761) * C153464 +
             (C70423 * C330 + C70706 + C70706 + C153671 * C354 + C70421 * C329 +
              C70707 + C70707 + C70415 * C353) *
                 C153818) *
                C153709) *
               C153527 * C321 +
           (((C70421 * C330 + C70708 + C70708 + C70415 * C354 + C70423 * C1319 +
              C70709 + C70709 + C153671 * C1329) *
                 C153818 +
             (C70762 + C70763) * C153464) *
                C153709 +
            ((C81636 + C81637) * C153818 + (C78458 + C78459) * C153464) *
                C153716 +
            ((C81638 + C81639) * C153818 + (C78460 + C78461) * C153464) *
                C116029) *
               C153527 * C322) *
              C323 +
          ((((C70761 + C70760) * C153818 + (C70759 + C70758) * C153464) *
                C153709 +
            (C79814 * C153818 + C89454 * C153464) * C153716 +
            (C79819 * C153818 + (C79130 + C79131) * C153464) * C116029) *
               C153527 * C321 -
           ((C78784 * C153464 + C78770 * C153818) * C116029 +
            (C71445 * C153464 + C78771 * C153818) * C153716 +
            ((C70483 + C70482) * C153464 + (C70481 + C70480) * C153818) *
                C153709) *
               C153527 * C320 -
           (((C70423 * C4957 + C78442 + C78442 + C153671 * C4963 +
              C70421 * C3443 + C78443 + C78443 + C70415 * C3451) *
                 C153464 +
             (C78461 + C78460) * C153818) *
                C116029 +
            ((C88195 + C88194) * C153464 + (C78459 + C78458) * C153818) *
                C153716 +
            ((C70765 + C70764) * C153464 + (C70763 + C70762) * C153818) *
                C153709) *
               C153527 * C322) *
              C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
             C70427 + C70427 + C153671 * C353) *
                C153818 +
            (C70480 + C70481) * C153464) *
               C153709 +
           ((C78815 + C78816) * C153818 + C78756 * C153464) * C153716 +
           (C78827 * C153818 + C78761 * C153464) * C116029) *
              C153527 * C153511 * C130 -
          ((C78784 * C153464 + C78770 * C153818) * C116029 +
           (C71445 * C153464 + C78771 * C153818) * C153716 +
           ((C70483 + C70482) * C153464 + (C70481 + C70480) * C153818) *
               C153709) *
              C153527 * C153511 * C131 +
          ((C70490 * C153818 + C70491 * C153464) * C153709 +
           (C79422 * C153818 + C89067 * C153464) * C153716 +
           (C79423 * C153818 + (C71040 + C71041) * C153464) * C116029) *
              C153527 * C153511 * C132 -
          (((C70423 * C1457 + C71004 + C71004 + C153671 * C1467 +
             C70421 * C547 + C71005 + C71005 + C70415 * C571) *
                C153464 +
            (C71041 + C71040) * C153818) *
               C116029 +
           ((C71457 + C71456) * C153464 + C71444 * C153818) * C153716 +
           (C70492 * C153464 + C70493 * C153818) * C153709) *
              C153527 * C153511 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
              C70427 + C70427 + C153671 * C353) *
                 C153818 +
             (C70480 + C70481) * C153464) *
                C153709 +
            ((C78815 + C78816) * C153818 + C78756 * C153464) * C153716 +
            C143484 * C116029) *
               C535 -
           ((C78828 * C153464 + C82415 * C153818) * C116029 +
            (C78770 * C153464 + (C78818 + C78817) * C153818) * C153716 +
            (C78771 * C153464 + (C78816 + C78815) * C153818) * C153709) *
               C536 +
           (C143484 * C153709 +
            (C134464 * C153818 + C78829 * C153464) * C153716 +
            ((C82430 + C82431) * C153818 + (C78823 + C78824) * C153464) *
                C116029) *
               C537) *
              C153511 * C323 +
          (((C78756 * C153818 + C79422 * C153464) * C153709 +
            (C78761 * C153818 + C79423 * C153464) * C153716 +
            (C78829 * C153818 + (C78825 + C78826) * C153464) * C116029) *
               C536 -
           (C143485 * C116029 +
            (C71445 * C153464 + C78771 * C153818) * C153716 +
            ((C70483 + C70482) * C153464 + (C70481 + C70480) * C153818) *
                C153709) *
               C535 -
           (((C70423 * C9115 + C78785 + C78785 + C153671 * C9121 +
              C70421 * C7675 + C78786 + C78786 + C70415 * C7683) *
                 C153464 +
             (C78824 + C78823) * C153818) *
                C116029 +
            ((C78826 + C78825) * C153464 + C78828 * C153818) * C153716 +
            C143485 * C153709) *
               C537) *
              C153511 * C153498)) /
            (p * q * std::sqrt(p + q));
    d2ee[123] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
              C70427 + C70427 + C153671 * C353) *
                 C153818 +
             (C70480 + C70481) * C153464) *
                C153709 +
            ((C78815 + C78816) * C153818 + C78756 * C153464) * C153716 +
            C143484 * C116029) *
               C153838 -
           ((C78828 * C153464 + C82415 * C153818) * C116029 +
            (C78770 * C153464 + (C78818 + C78817) * C153818) * C153716 +
            (C78771 * C153464 + (C78816 + C78815) * C153818) * C153709) *
               C153591) *
              C153511 * C153906 +
          (((C78756 * C153818 + C79422 * C153464) * C153709 +
            (C78761 * C153818 + C79423 * C153464) * C153716 +
            (C78829 * C153818 + (C78825 + C78826) * C153464) * C116029) *
               C153591 -
           (C143485 * C116029 +
            (C71445 * C153464 + C78771 * C153818) * C153716 +
            ((C70483 + C70482) * C153464 + (C70481 + C70480) * C153818) *
                C153709) *
               C153838) *
              C153511 * C153907 +
          (((C70490 * C153818 + C70491 * C153464) * C153709 +
            (C79422 * C153818 + C89067 * C153464) * C153716 +
            (C79423 * C153818 + (C71040 + C71041) * C153464) * C116029) *
               C153838 -
           (((C70423 * C8488 + C73462 + C73462 + C153671 * C8490 +
              C70421 * C2241 + C73463 + C73463 + C70415 * C2251) *
                 C153464 +
             (C78826 + C78825) * C153818) *
                C116029 +
            ((C71041 + C71040) * C153464 + C78784 * C153818) * C153716 +
            (C71444 * C153464 + C71445 * C153818) * C153709) *
               C153591) *
              C153511 * C752)) /
        (p * q * std::sqrt(p + q));
    d2ee[124] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
             C70427 + C70427 + C153671 * C353) *
                C153818 +
            (C70480 + C70481) * C153464) *
               C153709 +
           ((C78815 + C78816) * C153818 + C78756 * C153464) * C153716 +
           (C78827 * C153818 + C78761 * C153464) * C116029) *
              C153527 * C153511 * C130 -
          ((C78784 * C153464 + C78770 * C153818) * C116029 +
           (C71445 * C153464 + C78771 * C153818) * C153716 +
           ((C70483 + C70482) * C153464 + (C70481 + C70480) * C153818) *
               C153709) *
              C153527 * C153511 * C131 +
          ((C70490 * C153818 + C70491 * C153464) * C153709 +
           (C79422 * C153818 + C89067 * C153464) * C153716 +
           (C79423 * C153818 + (C71040 + C71041) * C153464) * C116029) *
              C153527 * C153511 * C132 -
          (((C70423 * C1457 + C71004 + C71004 + C153671 * C1467 +
             C70421 * C547 + C71005 + C71005 + C70415 * C571) *
                C153464 +
            (C71041 + C71040) * C153818) *
               C116029 +
           ((C71457 + C71456) * C153464 + C71444 * C153818) * C153716 +
           (C70492 * C153464 + C70493 * C153818) * C153709) *
              C153527 * C153511 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
              C70427 + C70427 + C153671 * C353) *
                 C153818 +
             (C70480 + C70481) * C153464) *
                C153709 +
            ((C78815 + C78816) * C153818 + C78756 * C153464) * C153716 +
            (C78827 * C153818 + C78761 * C153464) * C116029) *
               C153527 * C320 -
           ((C79828 * C153464 + C80637 * C153818) * C116029 +
            (C79829 * C153464 + (C79845 + C79844) * C153818) * C153716 +
            ((C70760 + C70761) * C153464 +
             (C70423 * C330 + C70706 + C70706 + C153671 * C354 + C70421 * C329 +
              C70707 + C70707 + C70415 * C353) *
                 C153818) *
                C153709) *
               C153527 * C321 +
           (((C70421 * C330 + C70708 + C70708 + C70415 * C354 + C70423 * C1319 +
              C70709 + C70709 + C153671 * C1329) *
                 C153818 +
             (C70762 + C70763) * C153464) *
                C153709 +
            ((C81636 + C81637) * C153818 + (C78458 + C78459) * C153464) *
                C153716 +
            ((C81638 + C81639) * C153818 + (C78460 + C78461) * C153464) *
                C116029) *
               C153527 * C322) *
              C323 +
          ((((C70761 + C70760) * C153818 + (C70759 + C70758) * C153464) *
                C153709 +
            (C79814 * C153818 + C89454 * C153464) * C153716 +
            (C79819 * C153818 + (C79130 + C79131) * C153464) * C116029) *
               C153527 * C321 -
           ((C78784 * C153464 + C78770 * C153818) * C116029 +
            (C71445 * C153464 + C78771 * C153818) * C153716 +
            ((C70483 + C70482) * C153464 + (C70481 + C70480) * C153818) *
                C153709) *
               C153527 * C320 -
           (((C70423 * C4957 + C78442 + C78442 + C153671 * C4963 +
              C70421 * C3443 + C78443 + C78443 + C70415 * C3451) *
                 C153464 +
             (C78461 + C78460) * C153818) *
                C116029 +
            ((C88195 + C88194) * C153464 + (C78459 + C78458) * C153818) *
                C153716 +
            ((C70765 + C70764) * C153464 + (C70763 + C70762) * C153818) *
                C153709) *
               C153527 * C322) *
              C153498)) /
            (p * q * std::sqrt(p + q));
    d2ee[125] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
              C70427 + C70427 + C153671 * C353) *
                 C153818 +
             (C70480 + C70481) * C153464) *
                C153709 +
            ((C78815 + C78816) * C153818 + C78756 * C153464) * C153716 +
            C143484 * C116029) *
               C153527 * C153908 -
           (C145228 * C116029 +
            (C79829 * C153464 + (C79845 + C79844) * C153818) * C153716 +
            ((C70760 + C70761) * C153464 +
             (C70423 * C330 + C70706 + C70706 + C153671 * C354 + C70421 * C329 +
              C70707 + C70707 + C70415 * C353) *
                 C153818) *
                C153709) *
               C153527 * C153909 +
           (((C70421 * C330 + C70708 + C70708 + C70415 * C354 + C70423 * C1319 +
              C70709 + C70709 + C153671 * C1329) *
                 C153818 +
             (C70762 + C70763) * C153464) *
                C153709 +
            ((C81636 + C81637) * C153818 + (C78458 + C78459) * C153464) *
                C153716 +
            ((C81638 + C81639) * C153818 + (C78460 + C78461) * C153464) *
                C116029) *
               C153527 * C1601) *
              C153829 +
          ((((C70761 + C70760) * C153818 + (C70759 + C70758) * C153464) *
                C153709 +
            (C79814 * C153818 + C89454 * C153464) * C153716 +
            (C79819 * C153818 + (C79130 + C79131) * C153464) * C116029) *
               C153527 * C153909 -
           (C143485 * C116029 +
            (C71445 * C153464 + C78771 * C153818) * C153716 +
            ((C70483 + C70482) * C153464 + (C70481 + C70480) * C153818) *
                C153709) *
               C153527 * C153908 -
           (((C70423 * C4957 + C78442 + C78442 + C153671 * C4963 +
              C70421 * C3443 + C78443 + C78443 + C70415 * C3451) *
                 C153464 +
             (C78461 + C78460) * C153818) *
                C116029 +
            ((C88195 + C88194) * C153464 + (C78459 + C78458) * C153818) *
                C153716 +
            ((C70765 + C70764) * C153464 + (C70763 + C70762) * C153818) *
                C153709) *
               C153527 * C1601) *
              C153498)) /
        (p * q * std::sqrt(p + q));
    d2ee[126] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
              C70427 + C70427 + C153671 * C353) *
                 C153818 +
             (C70480 + C70481) * C153464) *
                C153709 +
            ((C78815 + C78816) * C153818 + C78756 * C153464) * C153716 +
            C143484 * C116029) *
               C153838 -
           ((C78828 * C153464 + C82415 * C153818) * C116029 +
            (C78770 * C153464 + (C78818 + C78817) * C153818) * C153716 +
            (C78771 * C153464 + (C78816 + C78815) * C153818) * C153709) *
               C153591) *
              C153908 +
          ((((C79844 + C79845) * C153818 + C79814 * C153464) * C153709 +
            ((C79846 + C79847) * C153818 + C79819 * C153464) * C153716 +
            ((C80648 + C80649) * C153818 + (C79848 + C79849) * C153464) *
                C116029) *
               C153591 -
           (C145228 * C116029 +
            (C79829 * C153464 + (C79845 + C79844) * C153818) * C153716 +
            ((C70760 + C70761) * C153464 +
             (C70423 * C330 + C70706 + C70706 + C153671 * C354 + C70421 * C329 +
              C70707 + C70707 + C70415 * C353) *
                 C153818) *
                C153709) *
               C153838) *
              C153909 +
          ((((C70421 * C330 + C70708 + C70708 + C70415 * C354 + C70423 * C1319 +
              C70709 + C70709 + C153671 * C1329) *
                 C153818 +
             (C70762 + C70763) * C153464) *
                C153709 +
            ((C81636 + C81637) * C153818 + (C78458 + C78459) * C153464) *
                C153716 +
            ((C81638 + C81639) * C153818 + (C78460 + C78461) * C153464) *
                C116029) *
               C153838 -
           (((C70423 * C31999 + C81624 + C81624 + C153671 * C32001 +
              C70421 * C6303 + C81625 + C81625 + C70415 * C6315) *
                 C153464 +
             (C136306 + C136305) * C153818) *
                C116029 +
            ((C78461 + C78460) * C153464 + (C81639 + C81638) * C153818) *
                C153716 +
            ((C78459 + C78458) * C153464 + (C81637 + C81636) * C153818) *
                C153709) *
               C153591) *
              C1601) *
         C153492) /
        (p * q * std::sqrt(p + q));
    d2ee[127] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
             C70427 + C70427 + C153671 * C353) *
                C153818 +
            (C70480 + C70481) * C153464) *
               C153709 +
           ((C78815 + C78816) * C153818 + C78756 * C153464) * C153716 +
           C143484 * C116029) *
              C153527 * C1310 -
          ((C79828 * C153464 + C80637 * C153818) * C116029 +
           (C79829 * C153464 + (C79845 + C79844) * C153818) * C153716 +
           ((C70760 + C70761) * C153464 +
            (C70423 * C330 + C70706 + C70706 + C153671 * C354 + C70421 * C329 +
             C70707 + C70707 + C70415 * C353) *
                C153818) *
               C153709) *
              C153527 * C1311 +
          (((C70421 * C330 + C70708 + C70708 + C70415 * C354 + C70423 * C1319 +
             C70709 + C70709 + C153671 * C1329) *
                C153818 +
            (C70762 + C70763) * C153464) *
               C153709 +
           ((C81636 + C81637) * C153818 + (C78458 + C78459) * C153464) *
               C153716 +
           ((C81638 + C81639) * C153818 + (C78460 + C78461) * C153464) *
               C116029) *
              C153527 * C1312 -
          (((C70423 * C28651 + C80334 + C80334 + C153671 * C28655 +
             C70421 * C4958 + C80335 + C80335 + C70415 * C4964) *
                C153464 +
            (C70423 * C28650 + C80336 + C80336 + C153671 * C28654 +
             C70421 * C4959 + C80337 + C80337 + C70415 * C4965) *
                C153818) *
               C116029 +
           ((C70423 * C5702 + C80338 + C80338 + C153671 * C5708 +
             C70421 * C4304 + C80339 + C80339 + C70415 * C4312) *
                C153464 +
            (C70423 * C5703 + C80340 + C80340 + C153671 * C5709 +
             C70421 * C4303 + C80341 + C80341 + C70415 * C4311) *
                C153818) *
               C153716 +
           ((C70423 * C3128 + C72084 + C72084 + C153671 * C3136 +
             C70421 * C1318 + C72085 + C72085 + C70415 * C1328) *
                C153464 +
            (C70423 * C3127 + C72086 + C72086 + C153671 * C3135 +
             C70421 * C1319 + C72087 + C72087 + C70415 * C1329) *
                C153818) *
               C153709) *
              C153527 * C1313) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
              C70427 + C70427 + C153671 * C353) *
                 C153818 +
             (C70480 + C70481) * C153464) *
                C153709 +
            ((C78815 + C78816) * C153818 + C78756 * C153464) * C153716 +
            C143484 * C116029) *
               C153527 * C1223 -
           ((C79828 * C153464 + C80637 * C153818) * C116029 +
            (C79829 * C153464 + (C79845 + C79844) * C153818) * C153716 +
            ((C70760 + C70761) * C153464 +
             (C70423 * C330 + C70706 + C70706 + C153671 * C354 + C70421 * C329 +
              C70707 + C70707 + C70415 * C353) *
                 C153818) *
                C153709) *
               C153527 * C153563) *
              C1225 +
          ((((C70761 + C70760) * C153818 + (C70759 + C70758) * C153464) *
                C153709 +
            (C79814 * C153818 + C89454 * C153464) * C153716 +
            (C79819 * C153818 + (C79130 + C79131) * C153464) * C116029) *
               C153527 * C153563 -
           (C143485 * C116029 +
            (C71445 * C153464 + C78771 * C153818) * C153716 +
            ((C70483 + C70482) * C153464 + (C70481 + C70480) * C153818) *
                C153709) *
               C153527 * C1223) *
              C1226 +
          (((C70490 * C153818 + C70491 * C153464) * C153709 +
            (C79422 * C153818 + C89067 * C153464) * C153716 +
            (C79423 * C153818 + (C71040 + C71041) * C153464) * C116029) *
               C153527 * C1223 -
           (((C70423 * C3444 + C72282 + C72282 + C153671 * C3452 +
              C70421 * C1458 + C72283 + C72283 + C70415 * C1468) *
                 C153464 +
             (C79131 + C79130) * C153818) *
                C116029 +
            ((C71755 + C71754) * C153464 + C88776 * C153818) * C153716 +
            (C71236 * C153464 + C71237 * C153818) * C153709) *
               C153527 * C153563) *
              C1227)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
              C70427 + C70427 + C153671 * C353) *
                 C153818 +
             (C70480 + C70481) * C153464) *
                C153709 +
            ((C78815 + C78816) * C153818 + C78756 * C153464) * C153716 +
            C143484 * C116029) *
               C535 -
           ((C78828 * C153464 + C82415 * C153818) * C116029 +
            (C78770 * C153464 + (C78818 + C78817) * C153818) * C153716 +
            (C78771 * C153464 + (C78816 + C78815) * C153818) * C153709) *
               C536 +
           (C143484 * C153709 +
            (C134464 * C153818 + C78829 * C153464) * C153716 +
            ((C82430 + C82431) * C153818 + (C78823 + C78824) * C153464) *
                C116029) *
               C537) *
              C1223 +
          ((((C79844 + C79845) * C153818 + C79814 * C153464) * C153709 +
            ((C79846 + C79847) * C153818 + C79819 * C153464) * C153716 +
            ((C80648 + C80649) * C153818 + (C79848 + C79849) * C153464) *
                C116029) *
               C536 -
           (C145228 * C116029 +
            (C79829 * C153464 + (C79845 + C79844) * C153818) * C153716 +
            ((C70760 + C70761) * C153464 +
             (C70423 * C330 + C70706 + C70706 + C153671 * C354 + C70421 * C329 +
              C70707 + C70707 + C70415 * C353) *
                 C153818) *
                C153709) *
               C535 -
           (((C70423 * C31196 + C80638 + C80638 + C153671 * C31200 +
              C70421 * C9116 + C80639 + C80639 + C70415 * C9122) *
                 C153464 +
             (C135648 + C135647) * C153818) *
                C116029 +
            ((C79849 + C79848) * C153464 + C135638 * C153818) * C153716 +
            C145228 * C153709) *
               C537) *
              C153563) *
         C153492) /
            (p * q * std::sqrt(p + q));
    d2ee[128] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
               C70427 + C70427 + C153671 * C353) *
                  C153818 +
              (C70480 + C70481) * C153464) *
                 C153709 +
             ((C78815 + C78816) * C153818 + C78756 * C153464) * C153716 +
             C143484 * C116029) *
                C153838 -
            ((C78828 * C153464 + C82415 * C153818) * C116029 +
             (C78770 * C153464 + (C78818 + C78817) * C153818) * C153716 +
             (C78771 * C153464 + (C78816 + C78815) * C153818) * C153709) *
                C153591) *
               C1223 +
           ((((C79844 + C79845) * C153818 + C79814 * C153464) * C153709 +
             ((C79846 + C79847) * C153818 + C79819 * C153464) * C153716 +
             ((C80648 + C80649) * C153818 + (C79848 + C79849) * C153464) *
                 C116029) *
                C153591 -
            (C145228 * C116029 +
             (C79829 * C153464 + (C79845 + C79844) * C153818) * C153716 +
             ((C70760 + C70761) * C153464 +
              (C70423 * C330 + C70706 + C70706 + C153671 * C354 +
               C70421 * C329 + C70707 + C70707 + C70415 * C353) *
                  C153818) *
                 C153709) *
                C153838) *
               C153563) *
              C153829 +
          ((((C78756 * C153818 + C79422 * C153464) * C153709 +
             (C78761 * C153818 + C79423 * C153464) * C153716 +
             (C78829 * C153818 + (C78825 + C78826) * C153464) * C116029) *
                C153591 -
            (C143485 * C116029 +
             (C71445 * C153464 + C78771 * C153818) * C153716 +
             ((C70483 + C70482) * C153464 + (C70481 + C70480) * C153818) *
                 C153709) *
                C153838) *
               C1223 +
           ((((C70761 + C70760) * C153818 + (C70759 + C70758) * C153464) *
                 C153709 +
             (C79814 * C153818 + C89454 * C153464) * C153716 +
             (C79819 * C153818 + (C79130 + C79131) * C153464) * C116029) *
                C153838 -
            (((C70423 * C6301 + C79830 + C79830 + C153671 * C6313 +
               C70421 * C6302 + C79831 + C79831 + C70415 * C6314) *
                  C153464 +
              (C79849 + C79848) * C153818) *
                 C116029 +
             ((C79131 + C79130) * C153464 + C79828 * C153818) * C153716 +
             (C88776 * C153464 + C79829 * C153818) * C153709) *
                C153591) *
               C153563) *
              C153498)) /
        (p * q * std::sqrt(p + q));
    d2ee[129] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
              C70427 + C70427 + C153671 * C353) *
                 C153818 +
             (C70480 + C70481) * C153464) *
                C153709 +
            ((C78815 + C78816) * C153818 + C78756 * C153464) * C153716 +
            C143484 * C116029) *
               C153527 * C1223 -
           ((C79828 * C153464 + C80637 * C153818) * C116029 +
            (C79829 * C153464 + (C79845 + C79844) * C153818) * C153716 +
            ((C70760 + C70761) * C153464 +
             (C70423 * C330 + C70706 + C70706 + C153671 * C354 + C70421 * C329 +
              C70707 + C70707 + C70415 * C353) *
                 C153818) *
                C153709) *
               C153527 * C153563) *
              C1225 +
          ((((C70761 + C70760) * C153818 + (C70759 + C70758) * C153464) *
                C153709 +
            (C79814 * C153818 + C89454 * C153464) * C153716 +
            (C79819 * C153818 + (C79130 + C79131) * C153464) * C116029) *
               C153527 * C153563 -
           (C143485 * C116029 +
            (C71445 * C153464 + C78771 * C153818) * C153716 +
            ((C70483 + C70482) * C153464 + (C70481 + C70480) * C153818) *
                C153709) *
               C153527 * C1223) *
              C1226 +
          (((C70490 * C153818 + C70491 * C153464) * C153709 +
            (C79422 * C153818 + C89067 * C153464) * C153716 +
            (C79423 * C153818 + (C71040 + C71041) * C153464) * C116029) *
               C153527 * C1223 -
           (((C70423 * C3444 + C72282 + C72282 + C153671 * C3452 +
              C70421 * C1458 + C72283 + C72283 + C70415 * C1468) *
                 C153464 +
             (C79131 + C79130) * C153818) *
                C116029 +
            ((C71755 + C71754) * C153464 + C88776 * C153818) * C153716 +
            (C71236 * C153464 + C71237 * C153818) * C153709) *
               C153527 * C153563) *
              C1227)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
             C70427 + C70427 + C153671 * C353) *
                C153818 +
            (C70480 + C70481) * C153464) *
               C153709 +
           ((C78815 + C78816) * C153818 + C78756 * C153464) * C153716 +
           C143484 * C116029) *
              C153527 * C1310 -
          ((C79828 * C153464 + C80637 * C153818) * C116029 +
           (C79829 * C153464 + (C79845 + C79844) * C153818) * C153716 +
           ((C70760 + C70761) * C153464 +
            (C70423 * C330 + C70706 + C70706 + C153671 * C354 + C70421 * C329 +
             C70707 + C70707 + C70415 * C353) *
                C153818) *
               C153709) *
              C153527 * C1311 +
          (((C70421 * C330 + C70708 + C70708 + C70415 * C354 + C70423 * C1319 +
             C70709 + C70709 + C153671 * C1329) *
                C153818 +
            (C70762 + C70763) * C153464) *
               C153709 +
           ((C81636 + C81637) * C153818 + (C78458 + C78459) * C153464) *
               C153716 +
           ((C81638 + C81639) * C153818 + (C78460 + C78461) * C153464) *
               C116029) *
              C153527 * C1312 -
          (((C70423 * C28651 + C80334 + C80334 + C153671 * C28655 +
             C70421 * C4958 + C80335 + C80335 + C70415 * C4964) *
                C153464 +
            (C70423 * C28650 + C80336 + C80336 + C153671 * C28654 +
             C70421 * C4959 + C80337 + C80337 + C70415 * C4965) *
                C153818) *
               C116029 +
           ((C70423 * C5702 + C80338 + C80338 + C153671 * C5708 +
             C70421 * C4304 + C80339 + C80339 + C70415 * C4312) *
                C153464 +
            (C70423 * C5703 + C80340 + C80340 + C153671 * C5709 +
             C70421 * C4303 + C80341 + C80341 + C70415 * C4311) *
                C153818) *
               C153716 +
           ((C70423 * C3128 + C72084 + C72084 + C153671 * C3136 +
             C70421 * C1318 + C72085 + C72085 + C70415 * C1328) *
                C153464 +
            (C70423 * C3127 + C72086 + C72086 + C153671 * C3135 +
             C70421 * C1319 + C72087 + C72087 + C70415 * C1329) *
                C153818) *
               C153709) *
              C153527 * C1313) *
         C153492) /
            (p * q * std::sqrt(p + q));
    d2ee[130] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
               C70427 + C70427 + C153671 * C353) *
                  C153818 +
              (C70480 + C70481) * C153464) *
                 C153709 +
             ((C78815 + C78816) * C153818 + C78756 * C153464) * C153716 +
             C143484 * C116029) *
                C2030 -
            (C146971 * C116029 +
             (C78770 * C153464 + (C78818 + C78817) * C153818) * C153716 +
             (C78771 * C153464 + (C78816 + C78815) * C153818) * C153709) *
                C153591) *
               C153837 +
           ((((C79844 + C79845) * C153818 + C79814 * C153464) * C153709 +
             ((C79846 + C79847) * C153818 + C79819 * C153464) * C153716 +
             ((C80648 + C80649) * C153818 + (C79848 + C79849) * C153464) *
                 C116029) *
                C153591 -
            (C145228 * C116029 +
             (C79829 * C153464 + (C79845 + C79844) * C153818) * C153716 +
             ((C70760 + C70761) * C153464 +
              (C70423 * C330 + C70706 + C70706 + C153671 * C354 +
               C70421 * C329 + C70707 + C70707 + C70415 * C353) *
                  C153818) *
                 C153709) *
                C2030) *
               C153563) *
              C153829 +
          ((((C78756 * C153818 + C79422 * C153464) * C153709 +
             (C78761 * C153818 + C79423 * C153464) * C153716 +
             (C78829 * C153818 + (C78825 + C78826) * C153464) * C116029) *
                C153591 -
            (C143485 * C116029 +
             (C71445 * C153464 + C78771 * C153818) * C153716 +
             ((C70483 + C70482) * C153464 + (C70481 + C70480) * C153818) *
                 C153709) *
                C2030) *
               C153837 +
           ((((C70761 + C70760) * C153818 + (C70759 + C70758) * C153464) *
                 C153709 +
             (C79814 * C153818 + C89454 * C153464) * C153716 +
             (C79819 * C153818 + (C79130 + C79131) * C153464) * C116029) *
                C2030 -
            (((C70423 * C6301 + C79830 + C79830 + C153671 * C6313 +
               C70421 * C6302 + C79831 + C79831 + C70415 * C6314) *
                  C153464 +
              (C79849 + C79848) * C153818) *
                 C116029 +
             ((C79131 + C79130) * C153464 + C79828 * C153818) * C153716 +
             (C88776 * C153464 + C79829 * C153818) * C153709) *
                C153591) *
               C153563) *
              C153498)) /
        (p * q * std::sqrt(p + q));
    d2ee[131] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
              C70427 + C70427 + C153671 * C353) *
                 C153818 +
             (C70480 + C70481) * C153464) *
                C153709 +
            ((C78815 + C78816) * C153818 + C78756 * C153464) * C153716 +
            C143484 * C116029) *
               C153910 -
           (C146971 * C116029 +
            (C78770 * C153464 + (C78818 + C78817) * C153818) * C153716 +
            (C78771 * C153464 + (C78816 + C78815) * C153818) * C153709) *
               C153911 +
           (C143484 * C153709 +
            (C134464 * C153818 + C78829 * C153464) * C153716 +
            ((C82430 + C82431) * C153818 + (C78823 + C78824) * C153464) *
                C116029) *
               C2546) *
              C153837 +
          ((((C79844 + C79845) * C153818 + C79814 * C153464) * C153709 +
            ((C79846 + C79847) * C153818 + C79819 * C153464) * C153716 +
            ((C80648 + C80649) * C153818 + (C79848 + C79849) * C153464) *
                C116029) *
               C153911 -
           (C145228 * C116029 +
            (C79829 * C153464 + (C79845 + C79844) * C153818) * C153716 +
            ((C70760 + C70761) * C153464 +
             (C70423 * C330 + C70706 + C70706 + C153671 * C354 + C70421 * C329 +
              C70707 + C70707 + C70415 * C353) *
                 C153818) *
                C153709) *
               C153910 -
           (((C70423 * C31196 + C80638 + C80638 + C153671 * C31200 +
              C70421 * C9116 + C80639 + C80639 + C70415 * C9122) *
                 C153464 +
             (C135648 + C135647) * C153818) *
                C116029 +
            ((C79849 + C79848) * C153464 + C135638 * C153818) * C153716 +
            C145228 * C153709) *
               C2546) *
              C153563) *
         C153492) /
        (p * q * std::sqrt(p + q));
    d2ee[132] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
              C70427 + C70427 + C153671 * C353) *
                 C153818 +
             (C70480 + C70481) * C153464) *
                C153709 +
            ((C78815 + C78816) * C153818 + C78756 * C153464) * C153716 +
            C143484 * C116029) *
               C2030 -
           ((C78828 * C153464 + C82415 * C153818) * C116029 +
            (C78770 * C153464 + (C78818 + C78817) * C153818) * C153716 +
            (C78771 * C153464 + (C78816 + C78815) * C153818) * C153709) *
               C153591) *
              C320 +
          ((((C79844 + C79845) * C153818 + C79814 * C153464) * C153709 +
            ((C79846 + C79847) * C153818 + C79819 * C153464) * C153716 +
            ((C80648 + C80649) * C153818 + (C79848 + C79849) * C153464) *
                C116029) *
               C153591 -
           (C145228 * C116029 +
            (C79829 * C153464 + (C79845 + C79844) * C153818) * C153716 +
            ((C70760 + C70761) * C153464 +
             (C70423 * C330 + C70706 + C70706 + C153671 * C354 + C70421 * C329 +
              C70707 + C70707 + C70415 * C353) *
                 C153818) *
                C153709) *
               C2030) *
              C321 +
          ((((C70421 * C330 + C70708 + C70708 + C70415 * C354 + C70423 * C1319 +
              C70709 + C70709 + C153671 * C1329) *
                 C153818 +
             (C70762 + C70763) * C153464) *
                C153709 +
            ((C81636 + C81637) * C153818 + (C78458 + C78459) * C153464) *
                C153716 +
            ((C81638 + C81639) * C153818 + (C78460 + C78461) * C153464) *
                C116029) *
               C2030 -
           (((C70423 * C31999 + C81624 + C81624 + C153671 * C32001 +
              C70421 * C6303 + C81625 + C81625 + C70415 * C6315) *
                 C153464 +
             (C136306 + C136305) * C153818) *
                C116029 +
            ((C78461 + C78460) * C153464 + (C81639 + C81638) * C153818) *
                C153716 +
            ((C78459 + C78458) * C153464 + (C81637 + C81636) * C153818) *
                C153709) *
               C153591) *
              C322) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
              C70427 + C70427 + C153671 * C353) *
                 C153818 +
             (C70480 + C70481) * C153464) *
                C153709 +
            ((C78815 + C78816) * C153818 + C78756 * C153464) * C153716 +
            C143484 * C116029) *
               C2030 -
           ((C78828 * C153464 + C82415 * C153818) * C116029 +
            (C78770 * C153464 + (C78818 + C78817) * C153818) * C153716 +
            (C78771 * C153464 + (C78816 + C78815) * C153818) * C153709) *
               C153591) *
              C153511 * C1225 +
          (((C78756 * C153818 + C79422 * C153464) * C153709 +
            (C78761 * C153818 + C79423 * C153464) * C153716 +
            (C78829 * C153818 + (C78825 + C78826) * C153464) * C116029) *
               C153591 -
           (C143485 * C116029 +
            (C71445 * C153464 + C78771 * C153818) * C153716 +
            ((C70483 + C70482) * C153464 + (C70481 + C70480) * C153818) *
                C153709) *
               C2030) *
              C153511 * C1226 +
          (((C70490 * C153818 + C70491 * C153464) * C153709 +
            (C79422 * C153818 + C89067 * C153464) * C153716 +
            (C79423 * C153818 + (C71040 + C71041) * C153464) * C116029) *
               C2030 -
           (((C70423 * C8488 + C73462 + C73462 + C153671 * C8490 +
              C70421 * C2241 + C73463 + C73463 + C70415 * C2251) *
                 C153464 +
             (C78826 + C78825) * C153818) *
                C116029 +
            ((C71041 + C71040) * C153464 + C78784 * C153818) * C153716 +
            (C71444 * C153464 + C71445 * C153818) * C153709) *
               C153591) *
              C153511 * C1227)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
             C70427 + C70427 + C153671 * C353) *
                C153818 +
            (C70480 + C70481) * C153464) *
               C153709 +
           ((C78815 + C78816) * C153818 + C78756 * C153464) * C153716 +
           C143484 * C116029) *
              C2236 -
          (C146971 * C116029 +
           (C78770 * C153464 + (C78818 + C78817) * C153818) * C153716 +
           (C78771 * C153464 + (C78816 + C78815) * C153818) * C153709) *
              C2237 +
          (C143484 * C153709 +
           (C134464 * C153818 + C78829 * C153464) * C153716 +
           ((C82430 + C82431) * C153818 + (C78823 + C78824) * C153464) *
               C116029) *
              C2238 -
          (((C70423 * C56351 + C82420 + C82420 + C153671 * C56353 +
             C70421 * C10465 + C82421 + C82421 + C70415 * C10471) *
                C153464 +
            (C136839 + C136838) * C153818) *
               C116029 +
           ((C78824 + C78823) * C153464 + C136825 * C153818) * C153716 +
           C146971 * C153709) *
              C2239) *
         C153511 * C153492) /
            (p * q * std::sqrt(p + q));
    d2ee[133] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
              C70427 + C70427 + C153671 * C353) *
                 C153818 +
             (C70480 + C70481) * C153464) *
                C153709 +
            ((C78815 + C78816) * C153818 + C78756 * C153464) * C153716 +
            C143484 * C116029) *
               C153910 -
           (C146971 * C116029 +
            (C78770 * C153464 + (C78818 + C78817) * C153818) * C153716 +
            (C78771 * C153464 + (C78816 + C78815) * C153818) * C153709) *
               C153911 +
           (C143484 * C153709 +
            (C134464 * C153818 + C78829 * C153464) * C153716 +
            ((C82430 + C82431) * C153818 + (C78823 + C78824) * C153464) *
                C116029) *
               C2546) *
              C153511 * C153829 +
          (((C78756 * C153818 + C79422 * C153464) * C153709 +
            (C78761 * C153818 + C79423 * C153464) * C153716 +
            (C78829 * C153818 + (C78825 + C78826) * C153464) * C116029) *
               C153911 -
           (C143485 * C116029 +
            (C71445 * C153464 + C78771 * C153818) * C153716 +
            ((C70483 + C70482) * C153464 + (C70481 + C70480) * C153818) *
                C153709) *
               C153910 -
           (((C70423 * C9115 + C78785 + C78785 + C153671 * C9121 +
              C70421 * C7675 + C78786 + C78786 + C70415 * C7683) *
                 C153464 +
             (C78824 + C78823) * C153818) *
                C116029 +
            ((C78826 + C78825) * C153464 + C78828 * C153818) * C153716 +
            C143485 * C153709) *
               C2546) *
              C153511 * C153498)) /
        (p * q * std::sqrt(p + q));
    d2ee[134] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
              C70427 + C70427 + C153671 * C353) *
                 C153818 +
             (C70480 + C70481) * C153464) *
                C153709 +
            ((C78815 + C78816) * C153818 + C78756 * C153464) * C153716 +
            C143484 * C116029) *
               C2030 -
           ((C78828 * C153464 + C82415 * C153818) * C116029 +
            (C78770 * C153464 + (C78818 + C78817) * C153818) * C153716 +
            (C78771 * C153464 + (C78816 + C78815) * C153818) * C153709) *
               C153591) *
              C153511 * C1225 +
          (((C78756 * C153818 + C79422 * C153464) * C153709 +
            (C78761 * C153818 + C79423 * C153464) * C153716 +
            (C78829 * C153818 + (C78825 + C78826) * C153464) * C116029) *
               C153591 -
           (C143485 * C116029 +
            (C71445 * C153464 + C78771 * C153818) * C153716 +
            ((C70483 + C70482) * C153464 + (C70481 + C70480) * C153818) *
                C153709) *
               C2030) *
              C153511 * C1226 +
          (((C70490 * C153818 + C70491 * C153464) * C153709 +
            (C79422 * C153818 + C89067 * C153464) * C153716 +
            (C79423 * C153818 + (C71040 + C71041) * C153464) * C116029) *
               C2030 -
           (((C70423 * C8488 + C73462 + C73462 + C153671 * C8490 +
              C70421 * C2241 + C73463 + C73463 + C70415 * C2251) *
                 C153464 +
             (C78826 + C78825) * C153818) *
                C116029 +
            ((C71041 + C71040) * C153464 + C78784 * C153818) * C153716 +
            (C71444 * C153464 + C71445 * C153818) * C153709) *
               C153591) *
              C153511 * C1227)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
              C70427 + C70427 + C153671 * C353) *
                 C153818 +
             (C70480 + C70481) * C153464) *
                C153709 +
            ((C78815 + C78816) * C153818 + C78756 * C153464) * C153716 +
            C143484 * C116029) *
               C2030 -
           ((C78828 * C153464 + C82415 * C153818) * C116029 +
            (C78770 * C153464 + (C78818 + C78817) * C153818) * C153716 +
            (C78771 * C153464 + (C78816 + C78815) * C153818) * C153709) *
               C153591) *
              C320 +
          ((((C79844 + C79845) * C153818 + C79814 * C153464) * C153709 +
            ((C79846 + C79847) * C153818 + C79819 * C153464) * C153716 +
            ((C80648 + C80649) * C153818 + (C79848 + C79849) * C153464) *
                C116029) *
               C153591 -
           (C145228 * C116029 +
            (C79829 * C153464 + (C79845 + C79844) * C153818) * C153716 +
            ((C70760 + C70761) * C153464 +
             (C70423 * C330 + C70706 + C70706 + C153671 * C354 + C70421 * C329 +
              C70707 + C70707 + C70415 * C353) *
                 C153818) *
                C153709) *
               C2030) *
              C321 +
          ((((C70421 * C330 + C70708 + C70708 + C70415 * C354 + C70423 * C1319 +
              C70709 + C70709 + C153671 * C1329) *
                 C153818 +
             (C70762 + C70763) * C153464) *
                C153709 +
            ((C81636 + C81637) * C153818 + (C78458 + C78459) * C153464) *
                C153716 +
            ((C81638 + C81639) * C153818 + (C78460 + C78461) * C153464) *
                C116029) *
               C2030 -
           (((C70423 * C31999 + C81624 + C81624 + C153671 * C32001 +
              C70421 * C6303 + C81625 + C81625 + C70415 * C6315) *
                 C153464 +
             (C136306 + C136305) * C153818) *
                C116029 +
            ((C78461 + C78460) * C153464 + (C81639 + C81638) * C153818) *
                C153716 +
            ((C78459 + C78458) * C153464 + (C81637 + C81636) * C153818) *
                C153709) *
               C153591) *
              C322) *
         C153492) /
            (p * q * std::sqrt(p + q));
    d2ee[135] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
              C70427 + C70427 + C153671 * C353) *
                 C153922 +
             (C70480 + C70481) * C153903 + C70490 * C153874) *
                C98459 +
            ((C78815 + C78816) * C153922 + C78756 * C153903 +
             C79422 * C153874) *
                C153713) *
               C153527 * C153837 -
           ((C88776 * C153874 + C79829 * C153903 +
             (C79845 + C79844) * C153922) *
                C153713 +
            (C71237 * C153874 + (C70760 + C70761) * C153903 +
             (C70423 * C330 + C70706 + C70706 + C153671 * C354 + C70421 * C329 +
              C70707 + C70707 + C70415 * C353) *
                 C153922) *
                C98459) *
               C153527 * C153563) *
              C153906 +
          ((((C70761 + C70760) * C153922 + (C70759 + C70758) * C153903 +
             (C70757 + C70756) * C153874) *
                C98459 +
            (C79814 * C153922 + C89454 * C153903 +
             (C71754 + C71755) * C153874) *
                C153713) *
               C153527 * C153563 -
           ((C71444 * C153874 + C71445 * C153903 + C78771 * C153922) * C153713 +
            (C70493 * C153874 + (C70483 + C70482) * C153903 +
             (C70481 + C70480) * C153922) *
                C98459) *
               C153527 * C153837) *
              C153907 +
          (((C70490 * C153922 + C70491 * C153903 +
             (C70487 + C70486) * C153874) *
                C98459 +
            (C79422 * C153922 + C89067 * C153903 +
             (C71456 + C71457) * C153874) *
                C153713) *
               C153527 * C153837 -
           (((C70423 * C1888 + C71736 + C71736 + C153671 * C1898 +
              C70421 * C1061 + C71737 + C71737 + C70415 * C1073) *
                 C153874 +
             (C71755 + C71754) * C153903 + C88776 * C153922) *
                C153713 +
            ((C71249 + C71248) * C153874 + C71236 * C153903 +
             C71237 * C153922) *
                C98459) *
               C153527 * C153563) *
              C752)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C74251 * C136 + C74260 + C74260 + C153932 * C152 + C74253 * C329 +
             C74261 + C74261 + C153928 * C353 + C74255 * C330 + C74262 +
             C74262 + C153918 * C354 + C74257 * C1319 + C74263 + C74263 +
             C153860 * C1329) *
                C153454 * C98459 +
            (C130867 + C130868 + C130869 + C130870) * C153454 * C153713) *
               C153527 * C153837 -
           ((C74257 * C5703 + C75553 + C75553 + C153860 * C5709 +
             C74255 * C4303 + C75552 + C75552 + C153918 * C4311 +
             C74253 * C1892 + C75551 + C75551 + C153928 * C1902 +
             C74251 * C1057 + C75550 + C75550 + C153932 * C1069) *
                C153454 * C153713 +
            (C74257 * C3127 + C74546 + C74546 + C153860 * C3135 +
             C74255 * C1319 + C74547 + C74547 + C153918 * C1329 +
             C74253 * C330 + C74548 + C74548 + C153928 * C354 + C74251 * C329 +
             C74549 + C74549 + C153932 * C353) *
                C153454 * C98459) *
               C153527 * C153563) *
              C153906 +
          (((C74593 + C74592 + C74591 + C74590) * C153454 * C98459 +
            (C75578 + C75579 + C75580 + C75581) * C153454 * C153713) *
               C153527 * C153563 -
           ((C74848 + C74849 + C74850 + C74851) * C153454 * C153713 +
            (C74331 + C74330 + C74329 + C74328) * C153454 * C98459) *
               C153527 * C153837) *
              C153907 +
          (((C74335 + C74334 + C74333 + C74332) * C153454 * C98459 +
            (C75288 + C75289 + C75290 + C75291) * C153454 * C153713) *
               C153527 * C153837 -
           ((C74257 * C5701 + C75566 + C75566 + C153860 * C5707 +
             C74255 * C4305 + C75567 + C75567 + C153918 * C4313 +
             C74253 * C1890 + C75568 + C75568 + C153928 * C1900 +
             C74251 * C1059 + C75569 + C75569 + C153932 * C1071) *
                C153454 * C153713 +
            (C75073 + C75072 + C75071 + C75070) * C153454 * C98459) *
               C153527 * C153563) *
              C752)) /
            (p * q * std::sqrt(p + q));
    d2ee[136] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
               C70427 + C70427 + C153671 * C353) *
                  C153922 +
              (C70480 + C70481) * C153903 + C70490 * C153874) *
                 C98459 +
             ((C78815 + C78816) * C153922 + C78756 * C153903 +
              C79422 * C153874) *
                 C153713) *
                C153838 -
            ((C78784 * C153874 + C78770 * C153903 +
              (C78818 + C78817) * C153922) *
                 C153713 +
             (C71445 * C153874 + C78771 * C153903 +
              (C78816 + C78815) * C153922) *
                 C98459) *
                C153591) *
               C153837 +
           ((((C79844 + C79845) * C153922 + C79814 * C153903 +
              C89454 * C153874) *
                 C98459 +
             ((C79846 + C79847) * C153922 + C79819 * C153903 +
              (C79130 + C79131) * C153874) *
                 C153713) *
                C153591 -
            ((C88776 * C153874 + C79829 * C153903 +
              (C79845 + C79844) * C153922) *
                 C153713 +
             (C71237 * C153874 + (C70760 + C70761) * C153903 +
              (C70423 * C330 + C70706 + C70706 + C153671 * C354 +
               C70421 * C329 + C70707 + C70707 + C70415 * C353) *
                  C153922) *
                 C98459) *
                C153838) *
               C153563) *
              C323 +
          ((((C78756 * C153922 + C79422 * C153903 + C89067 * C153874) * C98459 +
             (C78761 * C153922 + C79423 * C153903 +
              (C71040 + C71041) * C153874) *
                 C153713) *
                C153591 -
            ((C71444 * C153874 + C71445 * C153903 + C78771 * C153922) *
                 C153713 +
             (C70493 * C153874 + (C70483 + C70482) * C153903 +
              (C70481 + C70480) * C153922) *
                 C98459) *
                C153838) *
               C153837 +
           ((((C70761 + C70760) * C153922 + (C70759 + C70758) * C153903 +
              (C70757 + C70756) * C153874) *
                 C98459 +
             (C79814 * C153922 + C89454 * C153903 +
              (C71754 + C71755) * C153874) *
                 C153713) *
                C153838 -
            (((C70423 * C3444 + C72282 + C72282 + C153671 * C3452 +
               C70421 * C1458 + C72283 + C72283 + C70415 * C1468) *
                  C153874 +
              (C79131 + C79130) * C153903 + C79828 * C153922) *
                 C153713 +
             ((C71755 + C71754) * C153874 + C88776 * C153903 +
              C79829 * C153922) *
                 C98459) *
                C153591) *
               C153563) *
              C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C74251 * C136 + C74260 + C74260 + C153932 * C152 + C74253 * C329 +
              C74261 + C74261 + C153928 * C353 + C74255 * C330 + C74262 +
              C74262 + C153918 * C354 + C74257 * C1319 + C74263 + C74263 +
              C153860 * C1329) *
                 C153454 * C98459 +
             (C130867 + C130868 + C130869 + C130870) * C153454 * C153713) *
                C153838 -
            ((C130871 + C130872 + C130873 + C130874) * C153454 * C153713 +
             (C130870 + C130869 + C130868 + C130867) * C153454 * C98459) *
                C153591) *
               C153837 +
           (((C131537 + C131538 + C131539 + C131540) * C153454 * C98459 +
             (C74251 * C1461 + C76115 + C76115 + C153932 * C1471 +
              C74253 * C3441 + C76114 + C76114 + C153928 * C3449 +
              C74255 * C4959 + C76113 + C76113 + C153918 * C4965 +
              C74257 * C28650 + C76112 + C76112 + C153860 * C28654) *
                 C153454 * C153713) *
                C153591 -
            ((C131540 + C131539 + C131538 + C131537) * C153454 * C153713 +
             (C74257 * C3127 + C74546 + C74546 + C153860 * C3135 +
              C74255 * C1319 + C74547 + C74547 + C153918 * C1329 +
              C74253 * C330 + C74548 + C74548 + C153928 * C354 + C74251 * C329 +
              C74549 + C74549 + C153932 * C353) *
                 C153454 * C98459) *
                C153838) *
               C153563) *
              C323 +
          ((((C74851 + C74850 + C74849 + C74848) * C153454 * C98459 +
             (C74852 + C74853 + C74854 + C74855) * C153454 * C153713) *
                C153591 -
            ((C74848 + C74849 + C74850 + C74851) * C153454 * C153713 +
             (C74331 + C74330 + C74329 + C74328) * C153454 * C98459) *
                C153838) *
               C153837 +
           (((C74593 + C74592 + C74591 + C74590) * C153454 * C98459 +
             (C75578 + C75579 + C75580 + C75581) * C153454 * C153713) *
                C153838 -
            ((C74257 * C28651 + C76108 + C76108 + C153860 * C28655 +
              C74255 * C4958 + C76109 + C76109 + C153918 * C4964 +
              C74253 * C3442 + C76110 + C76110 + C153928 * C3450 +
              C74251 * C1460 + C76111 + C76111 + C153932 * C1470) *
                 C153454 * C153713 +
             (C75581 + C75580 + C75579 + C75578) * C153454 * C98459) *
                C153591) *
               C153563) *
              C153498)) /
            (p * q * std::sqrt(p + q));
    d2ee[137] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
              C70427 + C70427 + C153671 * C353) *
                 C153922 +
             (C70480 + C70481) * C153903 + C70490 * C153874) *
                C98459 +
            ((C78815 + C78816) * C153922 + C78756 * C153903 +
             C79422 * C153874) *
                C153713) *
               C153527 * C320 -
           ((C88776 * C153874 + C79829 * C153903 +
             (C79845 + C79844) * C153922) *
                C153713 +
            (C71237 * C153874 + (C70760 + C70761) * C153903 +
             (C70423 * C330 + C70706 + C70706 + C153671 * C354 + C70421 * C329 +
              C70707 + C70707 + C70415 * C353) *
                 C153922) *
                C98459) *
               C153527 * C321 +
           (((C70421 * C330 + C70708 + C70708 + C70415 * C354 + C70423 * C1319 +
              C70709 + C70709 + C153671 * C1329) *
                 C153922 +
             (C70762 + C70763) * C153903 + (C70764 + C70765) * C153874) *
                C98459 +
            ((C81636 + C81637) * C153922 + (C78458 + C78459) * C153903 +
             (C88194 + C88195) * C153874) *
                C153713) *
               C153527 * C322) *
              C323 +
          ((((C70761 + C70760) * C153922 + (C70759 + C70758) * C153903 +
             (C70757 + C70756) * C153874) *
                C98459 +
            (C79814 * C153922 + C89454 * C153903 +
             (C71754 + C71755) * C153874) *
                C153713) *
               C153527 * C321 -
           ((C71444 * C153874 + C71445 * C153903 + C78771 * C153922) * C153713 +
            (C70493 * C153874 + (C70483 + C70482) * C153903 +
             (C70481 + C70480) * C153922) *
                C98459) *
               C153527 * C320 -
           (((C70423 * C4306 + C72936 + C72936 + C153671 * C4314 +
              C70421 * C1889 + C72937 + C72937 + C70415 * C1899) *
                 C153874 +
             (C88195 + C88194) * C153903 + (C78459 + C78458) * C153922) *
                C153713 +
            ((C70767 + C70766) * C153874 + (C70765 + C70764) * C153903 +
             (C70763 + C70762) * C153922) *
                C98459) *
               C153527 * C322) *
              C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
             C70427 + C70427 + C153671 * C353) *
                C153922 +
            (C70480 + C70481) * C153903 + C70490 * C153874) *
               C98459 +
           ((C78815 + C78816) * C153922 + C78756 * C153903 + C79422 * C153874) *
               C153713) *
              C153527 * C153511 * C130 -
          ((C71444 * C153874 + C71445 * C153903 + C78771 * C153922) * C153713 +
           (C70493 * C153874 + (C70483 + C70482) * C153903 +
            (C70481 + C70480) * C153922) *
               C98459) *
              C153527 * C153511 * C131 +
          ((C70490 * C153922 + C70491 * C153903 + (C70487 + C70486) * C153874) *
               C98459 +
           (C79422 * C153922 + C89067 * C153903 + (C71456 + C71457) * C153874) *
               C153713) *
              C153527 * C153511 * C132 -
          (((C70423 * C1062 + C71450 + C71450 + C153671 * C1074 +
             C70421 * C548 + C71451 + C71451 + C70415 * C572) *
                C153874 +
            (C71457 + C71456) * C153903 + C71444 * C153922) *
               C153713 +
           ((C70489 + C70488) * C153874 + C70492 * C153903 + C70493 * C153922) *
               C98459) *
              C153527 * C153511 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
              C70427 + C70427 + C153671 * C353) *
                 C153922 +
             (C70480 + C70481) * C153903 + C70490 * C153874) *
                C98459 +
            ((C78815 + C78816) * C153922 + C78756 * C153903 +
             C79422 * C153874) *
                C153713) *
               C535 -
           ((C78784 * C153874 + C78770 * C153903 +
             (C78818 + C78817) * C153922) *
                C153713 +
            (C71445 * C153874 + C78771 * C153903 +
             (C78816 + C78815) * C153922) *
                C98459) *
               C536 +
           ((C78827 * C153922 + C78761 * C153903 + C79423 * C153874) * C98459 +
            ((C78822 + C78821) * C153922 + C78829 * C153903 +
             (C78825 + C78826) * C153874) *
                C153713) *
               C537) *
              C153511 * C323 +
          (((C78756 * C153922 + C79422 * C153903 + C89067 * C153874) * C98459 +
            (C78761 * C153922 + C79423 * C153903 +
             (C71040 + C71041) * C153874) *
                C153713) *
               C536 -
           ((C71444 * C153874 + C71445 * C153903 + C78771 * C153922) * C153713 +
            (C70493 * C153874 + (C70483 + C70482) * C153903 +
             (C70481 + C70480) * C153922) *
                C98459) *
               C535 -
           (((C70423 * C8488 + C73462 + C73462 + C153671 * C8490 +
              C70421 * C2241 + C73463 + C73463 + C70415 * C2251) *
                 C153874 +
             (C78826 + C78825) * C153903 + C78828 * C153922) *
                C153713 +
            ((C71041 + C71040) * C153874 + C78784 * C153903 +
             C78770 * C153922) *
                C98459) *
               C537) *
              C153511 * C153498)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C74251 * C136 + C74260 + C74260 + C153932 * C152 + C74253 * C329 +
            C74261 + C74261 + C153928 * C353 + C74255 * C330 + C74262 + C74262 +
            C153918 * C354 + C74257 * C1319 + C74263 + C74263 +
            C153860 * C1329) *
               C153454 * C98459 +
           (C74251 * C542 + C74807 + C74807 + C153932 * C566 + C74253 * C1057 +
            C74806 + C74806 + C153928 * C1069 + C74255 * C1892 + C74805 +
            C74805 + C153918 * C1902 + C74257 * C4303 + C74804 + C74804 +
            C153860 * C4311) *
               C153454 * C153713) *
              C153527 * C153511 * C130 -
          ((C74848 + C74849 + C74850 + C74851) * C153454 * C153713 +
           (C74331 + C74330 + C74329 + C74328) * C153454 * C98459) *
              C153527 * C153511 * C131 +
          ((C74335 + C74334 + C74333 + C74332) * C153454 * C98459 +
           (C75288 + C75289 + C75290 + C75291) * C153454 * C153713) *
              C153527 * C153511 * C132 -
          ((C74257 * C4306 + C75276 + C75276 + C153860 * C4314 +
            C74255 * C1889 + C75277 + C75277 + C153918 * C1899 +
            C74253 * C1060 + C75278 + C75278 + C153928 * C1072 + C74251 * C539 +
            C75279 + C75279 + C153932 * C563) *
               C153454 * C153713 +
           (C74339 + C74338 + C74337 + C74336) * C153454 * C98459) *
              C153527 * C153511 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C74251 * C136 + C74260 + C74260 + C153932 * C152 + C74253 * C329 +
             C74261 + C74261 + C153928 * C353 + C74255 * C330 + C74262 +
             C74262 + C153918 * C354 + C74257 * C1319 + C74263 + C74263 +
             C153860 * C1329) *
                C153454 * C98459 +
            (C74251 * C542 + C74807 + C74807 + C153932 * C566 + C74253 * C1057 +
             C74806 + C74806 + C153928 * C1069 + C74255 * C1892 + C74805 +
             C74805 + C153918 * C1902 + C74257 * C4303 + C74804 + C74804 +
             C153860 * C4311) *
                C153454 * C153713) *
               C153527 * C320 -
           ((C74257 * C5703 + C75553 + C75553 + C153860 * C5709 +
             C74255 * C4303 + C75552 + C75552 + C153918 * C4311 +
             C74253 * C1892 + C75551 + C75551 + C153928 * C1902 +
             C74251 * C1057 + C75550 + C75550 + C153932 * C1069) *
                C153454 * C153713 +
            (C74257 * C3127 + C74546 + C74546 + C153860 * C3135 +
             C74255 * C1319 + C74547 + C74547 + C153918 * C1329 +
             C74253 * C330 + C74548 + C74548 + C153928 * C354 + C74251 * C329 +
             C74549 + C74549 + C153932 * C353) *
                C153454 * C98459) *
               C153527 * C321 +
           ((C74251 * C330 + C74550 + C74550 + C153932 * C354 + C74253 * C1319 +
             C74551 + C74551 + C153928 * C1329 + C74255 * C3127 + C74552 +
             C74552 + C153918 * C3135 + C74257 * C4723 + C74553 + C74553 +
             C153860 * C4729) *
                C153454 * C98459 +
            (C74251 * C1892 + C76769 + C76769 + C153932 * C1902 +
             C74253 * C4303 + C76768 + C76768 + C153928 * C4311 +
             C74255 * C5703 + C76767 + C76767 + C153918 * C5709 +
             C74257 * C29092 + C76766 + C76766 + C153860 * C29096) *
                C153454 * C153713) *
               C153527 * C322) *
              C323 +
          (((C74593 + C74592 + C74591 + C74590) * C153454 * C98459 +
            (C75578 + C75579 + C75580 + C75581) * C153454 * C153713) *
               C153527 * C321 -
           ((C74848 + C74849 + C74850 + C74851) * C153454 * C153713 +
            (C74331 + C74330 + C74329 + C74328) * C153454 * C98459) *
               C153527 * C320 -
           ((C74257 * C29093 + C76762 + C76762 + C153860 * C29097 +
             C74255 * C5702 + C76763 + C76763 + C153918 * C5708 +
             C74253 * C4304 + C76764 + C76764 + C153928 * C4312 +
             C74251 * C1891 + C76765 + C76765 + C153932 * C1901) *
                C153454 * C153713 +
            (C74597 + C74596 + C74595 + C74594) * C153454 * C98459) *
               C153527 * C322) *
              C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C74251 * C136 + C74260 + C74260 + C153932 * C152 + C74253 * C329 +
             C74261 + C74261 + C153928 * C353 + C74255 * C330 + C74262 +
             C74262 + C153918 * C354 + C74257 * C1319 + C74263 + C74263 +
             C153860 * C1329) *
                C153454 * C98459 +
            (C130867 + C130868 + C130869 + C130870) * C153454 * C153713) *
               C535 -
           ((C130871 + C130872 + C130873 + C130874) * C153454 * C153713 +
            (C130870 + C130869 + C130868 + C130867) * C153454 * C98459) *
               C536 +
           ((C130874 + C130873 + C130872 + C130871) * C153454 * C98459 +
            (C74251 * C2244 + C77295 + C77295 + C153932 * C2254 +
             C74253 * C6306 + C77294 + C77294 + C153928 * C6318 +
             C74255 * C6305 + C77293 + C77293 + C153918 * C6317 +
             C74257 * C30191 + C77292 + C77292 + C153860 * C30195) *
                C153454 * C153713) *
               C537) *
              C153511 * C323 +
          (((C74851 + C74850 + C74849 + C74848) * C153454 * C98459 +
            (C74852 + C74853 + C74854 + C74855) * C153454 * C153713) *
               C536 -
           ((C74848 + C74849 + C74850 + C74851) * C153454 * C153713 +
            (C74331 + C74330 + C74329 + C74328) * C153454 * C98459) *
               C535 -
           ((C74257 * C31999 + C77288 + C77288 + C153860 * C32001 +
             C74255 * C6303 + C77289 + C77289 + C153918 * C6315 +
             C74253 * C6304 + C77290 + C77290 + C153928 * C6316 +
             C74251 * C2243 + C77291 + C77291 + C153932 * C2253) *
                C153454 * C153713 +
            (C74855 + C74854 + C74853 + C74852) * C153454 * C98459) *
               C537) *
              C153511 * C153498)) /
            (p * q * std::sqrt(p + q));
    d2ee[138] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
              C70427 + C70427 + C153671 * C353) *
                 C153922 +
             (C70480 + C70481) * C153903 + C70490 * C153874) *
                C98459 +
            ((C78815 + C78816) * C153922 + C78756 * C153903 +
             C79422 * C153874) *
                C153713) *
               C153838 -
           ((C78784 * C153874 + C78770 * C153903 +
             (C78818 + C78817) * C153922) *
                C153713 +
            (C71445 * C153874 + C78771 * C153903 +
             (C78816 + C78815) * C153922) *
                C98459) *
               C153591) *
              C153511 * C153906 +
          (((C78756 * C153922 + C79422 * C153903 + C89067 * C153874) * C98459 +
            (C78761 * C153922 + C79423 * C153903 +
             (C71040 + C71041) * C153874) *
                C153713) *
               C153591 -
           ((C71444 * C153874 + C71445 * C153903 + C78771 * C153922) * C153713 +
            (C70493 * C153874 + (C70483 + C70482) * C153903 +
             (C70481 + C70480) * C153922) *
                C98459) *
               C153838) *
              C153511 * C153907 +
          (((C70490 * C153922 + C70491 * C153903 +
             (C70487 + C70486) * C153874) *
                C98459 +
            (C79422 * C153922 + C89067 * C153903 +
             (C71456 + C71457) * C153874) *
                C153713) *
               C153838 -
           (((C70423 * C1457 + C71004 + C71004 + C153671 * C1467 +
              C70421 * C547 + C71005 + C71005 + C70415 * C571) *
                 C153874 +
             (C71041 + C71040) * C153903 + C78784 * C153922) *
                C153713 +
            ((C71457 + C71456) * C153874 + C71444 * C153903 +
             C71445 * C153922) *
                C98459) *
               C153591) *
              C153511 * C752)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C74251 * C136 + C74260 + C74260 + C153932 * C152 + C74253 * C329 +
             C74261 + C74261 + C153928 * C353 + C74255 * C330 + C74262 +
             C74262 + C153918 * C354 + C74257 * C1319 + C74263 + C74263 +
             C153860 * C1329) *
                C153454 * C98459 +
            (C130867 + C130868 + C130869 + C130870) * C153454 * C153713) *
               C153838 -
           ((C130871 + C130872 + C130873 + C130874) * C153454 * C153713 +
            (C130870 + C130869 + C130868 + C130867) * C153454 * C98459) *
               C153591) *
              C153511 * C153906 +
          (((C74851 + C74850 + C74849 + C74848) * C153454 * C98459 +
            (C74852 + C74853 + C74854 + C74855) * C153454 * C153713) *
               C153591 -
           ((C74848 + C74849 + C74850 + C74851) * C153454 * C153713 +
            (C74331 + C74330 + C74329 + C74328) * C153454 * C98459) *
               C153838) *
              C153511 * C153907 +
          (((C74335 + C74334 + C74333 + C74332) * C153454 * C98459 +
            (C75288 + C75289 + C75290 + C75291) * C153454 * C153713) *
               C153838 -
           ((C74257 * C4957 + C74828 + C74828 + C153860 * C4963 +
             C74255 * C3443 + C74829 + C74829 + C153918 * C3451 +
             C74253 * C1459 + C74830 + C74830 + C153928 * C1469 +
             C74251 * C545 + C74831 + C74831 + C153932 * C569) *
                C153454 * C153713 +
            (C75291 + C75290 + C75289 + C75288) * C153454 * C98459) *
               C153591) *
              C153511 * C752)) /
            (p * q * std::sqrt(p + q));
    d2ee[139] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
             C70427 + C70427 + C153671 * C353) *
                C153922 +
            (C70480 + C70481) * C153903 + C70490 * C153874) *
               C98459 +
           ((C78815 + C78816) * C153922 + C78756 * C153903 + C79422 * C153874) *
               C153713) *
              C153527 * C153511 * C130 -
          ((C71444 * C153874 + C71445 * C153903 + C78771 * C153922) * C153713 +
           (C70493 * C153874 + (C70483 + C70482) * C153903 +
            (C70481 + C70480) * C153922) *
               C98459) *
              C153527 * C153511 * C131 +
          ((C70490 * C153922 + C70491 * C153903 + (C70487 + C70486) * C153874) *
               C98459 +
           (C79422 * C153922 + C89067 * C153903 + (C71456 + C71457) * C153874) *
               C153713) *
              C153527 * C153511 * C132 -
          (((C70423 * C1062 + C71450 + C71450 + C153671 * C1074 +
             C70421 * C548 + C71451 + C71451 + C70415 * C572) *
                C153874 +
            (C71457 + C71456) * C153903 + C71444 * C153922) *
               C153713 +
           ((C70489 + C70488) * C153874 + C70492 * C153903 + C70493 * C153922) *
               C98459) *
              C153527 * C153511 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
              C70427 + C70427 + C153671 * C353) *
                 C153922 +
             (C70480 + C70481) * C153903 + C70490 * C153874) *
                C98459 +
            ((C78815 + C78816) * C153922 + C78756 * C153903 +
             C79422 * C153874) *
                C153713) *
               C153527 * C320 -
           ((C88776 * C153874 + C79829 * C153903 +
             (C79845 + C79844) * C153922) *
                C153713 +
            (C71237 * C153874 + (C70760 + C70761) * C153903 +
             (C70423 * C330 + C70706 + C70706 + C153671 * C354 + C70421 * C329 +
              C70707 + C70707 + C70415 * C353) *
                 C153922) *
                C98459) *
               C153527 * C321 +
           (((C70421 * C330 + C70708 + C70708 + C70415 * C354 + C70423 * C1319 +
              C70709 + C70709 + C153671 * C1329) *
                 C153922 +
             (C70762 + C70763) * C153903 + (C70764 + C70765) * C153874) *
                C98459 +
            ((C81636 + C81637) * C153922 + (C78458 + C78459) * C153903 +
             (C88194 + C88195) * C153874) *
                C153713) *
               C153527 * C322) *
              C323 +
          ((((C70761 + C70760) * C153922 + (C70759 + C70758) * C153903 +
             (C70757 + C70756) * C153874) *
                C98459 +
            (C79814 * C153922 + C89454 * C153903 +
             (C71754 + C71755) * C153874) *
                C153713) *
               C153527 * C321 -
           ((C71444 * C153874 + C71445 * C153903 + C78771 * C153922) * C153713 +
            (C70493 * C153874 + (C70483 + C70482) * C153903 +
             (C70481 + C70480) * C153922) *
                C98459) *
               C153527 * C320 -
           (((C70423 * C4306 + C72936 + C72936 + C153671 * C4314 +
              C70421 * C1889 + C72937 + C72937 + C70415 * C1899) *
                 C153874 +
             (C88195 + C88194) * C153903 + (C78459 + C78458) * C153922) *
                C153713 +
            ((C70767 + C70766) * C153874 + (C70765 + C70764) * C153903 +
             (C70763 + C70762) * C153922) *
                C98459) *
               C153527 * C322) *
              C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C74251 * C136 + C74260 + C74260 + C153932 * C152 + C74253 * C329 +
            C74261 + C74261 + C153928 * C353 + C74255 * C330 + C74262 + C74262 +
            C153918 * C354 + C74257 * C1319 + C74263 + C74263 +
            C153860 * C1329) *
               C153454 * C98459 +
           (C74251 * C542 + C74807 + C74807 + C153932 * C566 + C74253 * C1057 +
            C74806 + C74806 + C153928 * C1069 + C74255 * C1892 + C74805 +
            C74805 + C153918 * C1902 + C74257 * C4303 + C74804 + C74804 +
            C153860 * C4311) *
               C153454 * C153713) *
              C153527 * C153511 * C130 -
          ((C74848 + C74849 + C74850 + C74851) * C153454 * C153713 +
           (C74331 + C74330 + C74329 + C74328) * C153454 * C98459) *
              C153527 * C153511 * C131 +
          ((C74335 + C74334 + C74333 + C74332) * C153454 * C98459 +
           (C75288 + C75289 + C75290 + C75291) * C153454 * C153713) *
              C153527 * C153511 * C132 -
          ((C74257 * C4306 + C75276 + C75276 + C153860 * C4314 +
            C74255 * C1889 + C75277 + C75277 + C153918 * C1899 +
            C74253 * C1060 + C75278 + C75278 + C153928 * C1072 + C74251 * C539 +
            C75279 + C75279 + C153932 * C563) *
               C153454 * C153713 +
           (C74339 + C74338 + C74337 + C74336) * C153454 * C98459) *
              C153527 * C153511 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C74251 * C136 + C74260 + C74260 + C153932 * C152 + C74253 * C329 +
             C74261 + C74261 + C153928 * C353 + C74255 * C330 + C74262 +
             C74262 + C153918 * C354 + C74257 * C1319 + C74263 + C74263 +
             C153860 * C1329) *
                C153454 * C98459 +
            (C74251 * C542 + C74807 + C74807 + C153932 * C566 + C74253 * C1057 +
             C74806 + C74806 + C153928 * C1069 + C74255 * C1892 + C74805 +
             C74805 + C153918 * C1902 + C74257 * C4303 + C74804 + C74804 +
             C153860 * C4311) *
                C153454 * C153713) *
               C153527 * C320 -
           ((C74257 * C5703 + C75553 + C75553 + C153860 * C5709 +
             C74255 * C4303 + C75552 + C75552 + C153918 * C4311 +
             C74253 * C1892 + C75551 + C75551 + C153928 * C1902 +
             C74251 * C1057 + C75550 + C75550 + C153932 * C1069) *
                C153454 * C153713 +
            (C74257 * C3127 + C74546 + C74546 + C153860 * C3135 +
             C74255 * C1319 + C74547 + C74547 + C153918 * C1329 +
             C74253 * C330 + C74548 + C74548 + C153928 * C354 + C74251 * C329 +
             C74549 + C74549 + C153932 * C353) *
                C153454 * C98459) *
               C153527 * C321 +
           ((C74251 * C330 + C74550 + C74550 + C153932 * C354 + C74253 * C1319 +
             C74551 + C74551 + C153928 * C1329 + C74255 * C3127 + C74552 +
             C74552 + C153918 * C3135 + C74257 * C4723 + C74553 + C74553 +
             C153860 * C4729) *
                C153454 * C98459 +
            (C74251 * C1892 + C76769 + C76769 + C153932 * C1902 +
             C74253 * C4303 + C76768 + C76768 + C153928 * C4311 +
             C74255 * C5703 + C76767 + C76767 + C153918 * C5709 +
             C74257 * C29092 + C76766 + C76766 + C153860 * C29096) *
                C153454 * C153713) *
               C153527 * C322) *
              C323 +
          (((C74593 + C74592 + C74591 + C74590) * C153454 * C98459 +
            (C75578 + C75579 + C75580 + C75581) * C153454 * C153713) *
               C153527 * C321 -
           ((C74848 + C74849 + C74850 + C74851) * C153454 * C153713 +
            (C74331 + C74330 + C74329 + C74328) * C153454 * C98459) *
               C153527 * C320 -
           ((C74257 * C29093 + C76762 + C76762 + C153860 * C29097 +
             C74255 * C5702 + C76763 + C76763 + C153918 * C5708 +
             C74253 * C4304 + C76764 + C76764 + C153928 * C4312 +
             C74251 * C1891 + C76765 + C76765 + C153932 * C1901) *
                C153454 * C153713 +
            (C74597 + C74596 + C74595 + C74594) * C153454 * C98459) *
               C153527 * C322) *
              C153498)) /
            (p * q * std::sqrt(p + q));
    d2ee[140] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
              C70427 + C70427 + C153671 * C353) *
                 C153922 +
             (C70480 + C70481) * C153903 + C70490 * C153874) *
                C98459 +
            ((C78815 + C78816) * C153922 + C78756 * C153903 +
             C79422 * C153874) *
                C153713) *
               C153527 * C153908 -
           ((C88776 * C153874 + C79829 * C153903 +
             (C79845 + C79844) * C153922) *
                C153713 +
            (C71237 * C153874 + (C70760 + C70761) * C153903 +
             (C70423 * C330 + C70706 + C70706 + C153671 * C354 + C70421 * C329 +
              C70707 + C70707 + C70415 * C353) *
                 C153922) *
                C98459) *
               C153527 * C153909 +
           (((C70421 * C330 + C70708 + C70708 + C70415 * C354 + C70423 * C1319 +
              C70709 + C70709 + C153671 * C1329) *
                 C153922 +
             (C70762 + C70763) * C153903 + (C70764 + C70765) * C153874) *
                C98459 +
            ((C81636 + C81637) * C153922 + (C78458 + C78459) * C153903 +
             (C88194 + C88195) * C153874) *
                C153713) *
               C153527 * C1601) *
              C153829 +
          ((((C70761 + C70760) * C153922 + (C70759 + C70758) * C153903 +
             (C70757 + C70756) * C153874) *
                C98459 +
            (C79814 * C153922 + C89454 * C153903 +
             (C71754 + C71755) * C153874) *
                C153713) *
               C153527 * C153909 -
           ((C71444 * C153874 + C71445 * C153903 + C78771 * C153922) * C153713 +
            (C70493 * C153874 + (C70483 + C70482) * C153903 +
             (C70481 + C70480) * C153922) *
                C98459) *
               C153527 * C153908 -
           (((C70423 * C4306 + C72936 + C72936 + C153671 * C4314 +
              C70421 * C1889 + C72937 + C72937 + C70415 * C1899) *
                 C153874 +
             (C88195 + C88194) * C153903 + (C78459 + C78458) * C153922) *
                C153713 +
            ((C70767 + C70766) * C153874 + (C70765 + C70764) * C153903 +
             (C70763 + C70762) * C153922) *
                C98459) *
               C153527 * C1601) *
              C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C74251 * C136 + C74260 + C74260 + C153932 * C152 + C74253 * C329 +
             C74261 + C74261 + C153928 * C353 + C74255 * C330 + C74262 +
             C74262 + C153918 * C354 + C74257 * C1319 + C74263 + C74263 +
             C153860 * C1329) *
                C153454 * C98459 +
            (C130867 + C130868 + C130869 + C130870) * C153454 * C153713) *
               C153527 * C153908 -
           ((C131540 + C131539 + C131538 + C131537) * C153454 * C153713 +
            (C74257 * C3127 + C74546 + C74546 + C153860 * C3135 +
             C74255 * C1319 + C74547 + C74547 + C153918 * C1329 +
             C74253 * C330 + C74548 + C74548 + C153928 * C354 + C74251 * C329 +
             C74549 + C74549 + C153932 * C353) *
                C153454 * C98459) *
               C153527 * C153909 +
           ((C74251 * C330 + C74550 + C74550 + C153932 * C354 + C74253 * C1319 +
             C74551 + C74551 + C153928 * C1329 + C74255 * C3127 + C74552 +
             C74552 + C153918 * C3135 + C74257 * C4723 + C74553 + C74553 +
             C153860 * C4729) *
                C153454 * C98459 +
            (C74251 * C1892 + C76769 + C76769 + C153932 * C1902 +
             C74253 * C4303 + C76768 + C76768 + C153928 * C4311 +
             C74255 * C5703 + C76767 + C76767 + C153918 * C5709 +
             C74257 * C29092 + C76766 + C76766 + C153860 * C29096) *
                C153454 * C153713) *
               C153527 * C1601) *
              C153829 +
          (((C74593 + C74592 + C74591 + C74590) * C153454 * C98459 +
            (C75578 + C75579 + C75580 + C75581) * C153454 * C153713) *
               C153527 * C153909 -
           ((C74848 + C74849 + C74850 + C74851) * C153454 * C153713 +
            (C74331 + C74330 + C74329 + C74328) * C153454 * C98459) *
               C153527 * C153908 -
           ((C74257 * C29093 + C76762 + C76762 + C153860 * C29097 +
             C74255 * C5702 + C76763 + C76763 + C153918 * C5708 +
             C74253 * C4304 + C76764 + C76764 + C153928 * C4312 +
             C74251 * C1891 + C76765 + C76765 + C153932 * C1901) *
                C153454 * C153713 +
            (C74597 + C74596 + C74595 + C74594) * C153454 * C98459) *
               C153527 * C1601) *
              C153498)) /
            (p * q * std::sqrt(p + q));
    d2ee[141] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
              C70427 + C70427 + C153671 * C353) *
                 C153922 +
             (C70480 + C70481) * C153903 + C70490 * C153874) *
                C98459 +
            ((C78815 + C78816) * C153922 + C78756 * C153903 +
             C79422 * C153874) *
                C153713) *
               C153838 -
           ((C78784 * C153874 + C78770 * C153903 +
             (C78818 + C78817) * C153922) *
                C153713 +
            (C71445 * C153874 + C78771 * C153903 +
             (C78816 + C78815) * C153922) *
                C98459) *
               C153591) *
              C153908 +
          ((((C79844 + C79845) * C153922 + C79814 * C153903 +
             C89454 * C153874) *
                C98459 +
            ((C79846 + C79847) * C153922 + C79819 * C153903 +
             (C79130 + C79131) * C153874) *
                C153713) *
               C153591 -
           ((C88776 * C153874 + C79829 * C153903 +
             (C79845 + C79844) * C153922) *
                C153713 +
            (C71237 * C153874 + (C70760 + C70761) * C153903 +
             (C70423 * C330 + C70706 + C70706 + C153671 * C354 + C70421 * C329 +
              C70707 + C70707 + C70415 * C353) *
                 C153922) *
                C98459) *
               C153838) *
              C153909 +
          ((((C70421 * C330 + C70708 + C70708 + C70415 * C354 + C70423 * C1319 +
              C70709 + C70709 + C153671 * C1329) *
                 C153922 +
             (C70762 + C70763) * C153903 + (C70764 + C70765) * C153874) *
                C98459 +
            ((C81636 + C81637) * C153922 + (C78458 + C78459) * C153903 +
             (C88194 + C88195) * C153874) *
                C153713) *
               C153838 -
           (((C70423 * C4957 + C78442 + C78442 + C153671 * C4963 +
              C70421 * C3443 + C78443 + C78443 + C70415 * C3451) *
                 C153874 +
             (C78461 + C78460) * C153903 + (C81639 + C81638) * C153922) *
                C153713 +
            ((C88195 + C88194) * C153874 + (C78459 + C78458) * C153903 +
             (C81637 + C81636) * C153922) *
                C98459) *
               C153591) *
              C1601) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C74251 * C136 + C74260 + C74260 + C153932 * C152 + C74253 * C329 +
             C74261 + C74261 + C153928 * C353 + C74255 * C330 + C74262 +
             C74262 + C153918 * C354 + C74257 * C1319 + C74263 + C74263 +
             C153860 * C1329) *
                C153454 * C98459 +
            (C130867 + C130868 + C130869 + C130870) * C153454 * C153713) *
               C153838 -
           ((C130871 + C130872 + C130873 + C130874) * C153454 * C153713 +
            (C130870 + C130869 + C130868 + C130867) * C153454 * C98459) *
               C153591) *
              C153908 +
          (((C131537 + C131538 + C131539 + C131540) * C153454 * C98459 +
            (C132083 + C132084 + C132085 + C132086) * C153454 * C153713) *
               C153591 -
           ((C131540 + C131539 + C131538 + C131537) * C153454 * C153713 +
            (C74257 * C3127 + C74546 + C74546 + C153860 * C3135 +
             C74255 * C1319 + C74547 + C74547 + C153918 * C1329 +
             C74253 * C330 + C74548 + C74548 + C153928 * C354 + C74251 * C329 +
             C74549 + C74549 + C153932 * C353) *
                C153454 * C98459) *
               C153838) *
              C153909 +
          (((C74251 * C330 + C74550 + C74550 + C153932 * C354 + C74253 * C1319 +
             C74551 + C74551 + C153928 * C1329 + C74255 * C3127 + C74552 +
             C74552 + C153918 * C3135 + C74257 * C4723 + C74553 + C74553 +
             C153860 * C4729) *
                C153454 * C98459 +
            (C132753 + C132754 + C132755 + C132756) * C153454 * C153713) *
               C153838 -
           ((C74257 * C29442 + C132741 + C132741 + C153860 * C29444 +
             C74255 * C28650 + C132742 + C132742 + C153918 * C28654 +
             C74253 * C4959 + C132743 + C132743 + C153928 * C4965 +
             C74251 * C3441 + C132744 + C132744 + C153932 * C3449) *
                C153454 * C153713 +
            (C132756 + C132755 + C132754 + C132753) * C153454 * C98459) *
               C153591) *
              C1601) *
         C153492) /
            (p * q * std::sqrt(p + q));
    d2ee[142] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
             C70427 + C70427 + C153671 * C353) *
                C153922 +
            (C70480 + C70481) * C153903 + C70490 * C153874) *
               C98459 +
           ((C78815 + C78816) * C153922 + C78756 * C153903 + C79422 * C153874) *
               C153713) *
              C153527 * C1310 -
          ((C88776 * C153874 + C79829 * C153903 + (C79845 + C79844) * C153922) *
               C153713 +
           (C71237 * C153874 + (C70760 + C70761) * C153903 +
            (C70423 * C330 + C70706 + C70706 + C153671 * C354 + C70421 * C329 +
             C70707 + C70707 + C70415 * C353) *
                C153922) *
               C98459) *
              C153527 * C1311 +
          (((C70421 * C330 + C70708 + C70708 + C70415 * C354 + C70423 * C1319 +
             C70709 + C70709 + C153671 * C1329) *
                C153922 +
            (C70762 + C70763) * C153903 + (C70764 + C70765) * C153874) *
               C98459 +
           ((C81636 + C81637) * C153922 + (C78458 + C78459) * C153903 +
            (C88194 + C88195) * C153874) *
               C153713) *
              C153527 * C1312 -
          (((C70423 * C5701 + C89939 + C89939 + C153671 * C5707 +
             C70421 * C4305 + C89940 + C89940 + C70415 * C4313) *
                C153874 +
            (C70423 * C5702 + C80338 + C80338 + C153671 * C5708 +
             C70421 * C4304 + C80339 + C80339 + C70415 * C4312) *
                C153903 +
            (C70423 * C5703 + C80340 + C80340 + C153671 * C5709 +
             C70421 * C4303 + C80341 + C80341 + C70415 * C4311) *
                C153922) *
               C153713 +
           ((C70423 * C3129 + C72082 + C72082 + C153671 * C3137 +
             C70421 * C1317 + C72083 + C72083 + C70415 * C1327) *
                C153874 +
            (C70423 * C3128 + C72084 + C72084 + C153671 * C3136 +
             C70421 * C1318 + C72085 + C72085 + C70415 * C1328) *
                C153903 +
            (C70423 * C3127 + C72086 + C72086 + C153671 * C3135 +
             C70421 * C1319 + C72087 + C72087 + C70415 * C1329) *
                C153922) *
               C98459) *
              C153527 * C1313) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
              C70427 + C70427 + C153671 * C353) *
                 C153922 +
             (C70480 + C70481) * C153903 + C70490 * C153874) *
                C98459 +
            ((C78815 + C78816) * C153922 + C78756 * C153903 +
             C79422 * C153874) *
                C153713) *
               C153527 * C1223 -
           ((C88776 * C153874 + C79829 * C153903 +
             (C79845 + C79844) * C153922) *
                C153713 +
            (C71237 * C153874 + (C70760 + C70761) * C153903 +
             (C70423 * C330 + C70706 + C70706 + C153671 * C354 + C70421 * C329 +
              C70707 + C70707 + C70415 * C353) *
                 C153922) *
                C98459) *
               C153527 * C153563) *
              C1225 +
          ((((C70761 + C70760) * C153922 + (C70759 + C70758) * C153903 +
             (C70757 + C70756) * C153874) *
                C98459 +
            (C79814 * C153922 + C89454 * C153903 +
             (C71754 + C71755) * C153874) *
                C153713) *
               C153527 * C153563 -
           ((C71444 * C153874 + C71445 * C153903 + C78771 * C153922) * C153713 +
            (C70493 * C153874 + (C70483 + C70482) * C153903 +
             (C70481 + C70480) * C153922) *
                C98459) *
               C153527 * C1223) *
              C1226 +
          (((C70490 * C153922 + C70491 * C153903 +
             (C70487 + C70486) * C153874) *
                C98459 +
            (C79422 * C153922 + C89067 * C153903 +
             (C71456 + C71457) * C153874) *
                C153713) *
               C153527 * C1223 -
           (((C70423 * C1888 + C71736 + C71736 + C153671 * C1898 +
              C70421 * C1061 + C71737 + C71737 + C70415 * C1073) *
                 C153874 +
             (C71755 + C71754) * C153903 + C88776 * C153922) *
                C153713 +
            ((C71249 + C71248) * C153874 + C71236 * C153903 +
             C71237 * C153922) *
                C98459) *
               C153527 * C153563) *
              C1227)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
              C70427 + C70427 + C153671 * C353) *
                 C153922 +
             (C70480 + C70481) * C153903 + C70490 * C153874) *
                C98459 +
            ((C78815 + C78816) * C153922 + C78756 * C153903 +
             C79422 * C153874) *
                C153713) *
               C535 -
           ((C78784 * C153874 + C78770 * C153903 +
             (C78818 + C78817) * C153922) *
                C153713 +
            (C71445 * C153874 + C78771 * C153903 +
             (C78816 + C78815) * C153922) *
                C98459) *
               C536 +
           ((C78827 * C153922 + C78761 * C153903 + C79423 * C153874) * C98459 +
            ((C78822 + C78821) * C153922 + C78829 * C153903 +
             (C78825 + C78826) * C153874) *
                C153713) *
               C537) *
              C1223 +
          ((((C79844 + C79845) * C153922 + C79814 * C153903 +
             C89454 * C153874) *
                C98459 +
            ((C79846 + C79847) * C153922 + C79819 * C153903 +
             (C79130 + C79131) * C153874) *
                C153713) *
               C536 -
           ((C88776 * C153874 + C79829 * C153903 +
             (C79845 + C79844) * C153922) *
                C153713 +
            (C71237 * C153874 + (C70760 + C70761) * C153903 +
             (C70423 * C330 + C70706 + C70706 + C153671 * C354 + C70421 * C329 +
              C70707 + C70707 + C70415 * C353) *
                 C153922) *
                C98459) *
               C535 -
           (((C70423 * C6301 + C79830 + C79830 + C153671 * C6313 +
              C70421 * C6302 + C79831 + C79831 + C70415 * C6314) *
                 C153874 +
             (C79849 + C79848) * C153903 + (C80649 + C80648) * C153922) *
                C153713 +
            ((C79131 + C79130) * C153874 + C79828 * C153903 +
             C80637 * C153922) *
                C98459) *
               C537) *
              C153563) *
         C153492) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C74251 * C136 + C74260 + C74260 + C153932 * C152 + C74253 * C329 +
             C74261 + C74261 + C153928 * C353 + C74255 * C330 + C74262 +
             C74262 + C153918 * C354 + C74257 * C1319 + C74263 + C74263 +
             C153860 * C1329) *
                C153454 * C98459 +
            (C130867 + C130868 + C130869 + C130870) * C153454 * C153713) *
               C153527 * C1223 -
           ((C131540 + C131539 + C131538 + C131537) * C153454 * C153713 +
            (C74257 * C3127 + C74546 + C74546 + C153860 * C3135 +
             C74255 * C1319 + C74547 + C74547 + C153918 * C1329 +
             C74253 * C330 + C74548 + C74548 + C153928 * C354 + C74251 * C329 +
             C74549 + C74549 + C153932 * C353) *
                C153454 * C98459) *
               C153527 * C153563) *
              C1225 +
          (((C74593 + C74592 + C74591 + C74590) * C153454 * C98459 +
            (C75578 + C75579 + C75580 + C75581) * C153454 * C153713) *
               C153527 * C153563 -
           ((C74848 + C74849 + C74850 + C74851) * C153454 * C153713 +
            (C74331 + C74330 + C74329 + C74328) * C153454 * C98459) *
               C153527 * C1223) *
              C1226 +
          (((C74335 + C74334 + C74333 + C74332) * C153454 * C98459 +
            (C75288 + C75289 + C75290 + C75291) * C153454 * C153713) *
               C153527 * C1223 -
           ((C74257 * C5701 + C75566 + C75566 + C153860 * C5707 +
             C74255 * C4305 + C75567 + C75567 + C153918 * C4313 +
             C74253 * C1890 + C75568 + C75568 + C153928 * C1900 +
             C74251 * C1059 + C75569 + C75569 + C153932 * C1071) *
                C153454 * C153713 +
            (C75073 + C75072 + C75071 + C75070) * C153454 * C98459) *
               C153527 * C153563) *
              C1227)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C74251 * C136 + C74260 + C74260 + C153932 * C152 + C74253 * C329 +
            C74261 + C74261 + C153928 * C353 + C74255 * C330 + C74262 + C74262 +
            C153918 * C354 + C74257 * C1319 + C74263 + C74263 +
            C153860 * C1329) *
               C153454 * C98459 +
           (C130867 + C130868 + C130869 + C130870) * C153454 * C153713) *
              C153527 * C1310 -
          ((C131540 + C131539 + C131538 + C131537) * C153454 * C153713 +
           (C74257 * C3127 + C74546 + C74546 + C153860 * C3135 +
            C74255 * C1319 + C74547 + C74547 + C153918 * C1329 + C74253 * C330 +
            C74548 + C74548 + C153928 * C354 + C74251 * C329 + C74549 + C74549 +
            C153932 * C353) *
               C153454 * C98459) *
              C153527 * C1311 +
          ((C74251 * C330 + C74550 + C74550 + C153932 * C354 + C74253 * C1319 +
            C74551 + C74551 + C153928 * C1329 + C74255 * C3127 + C74552 +
            C74552 + C153918 * C3135 + C74257 * C4723 + C74553 + C74553 +
            C153860 * C4729) *
               C153454 * C98459 +
           (C74251 * C1892 + C76769 + C76769 + C153932 * C1902 +
            C74253 * C4303 + C76768 + C76768 + C153928 * C4311 +
            C74255 * C5703 + C76767 + C76767 + C153918 * C5709 +
            C74257 * C29092 + C76766 + C76766 + C153860 * C29096) *
               C153454 * C153713) *
              C153527 * C1312 -
          ((C74257 * C29856 + C131865 + C131865 + C153860 * C29858 +
            C74255 * C29092 + C131866 + C131866 + C153918 * C29096 +
            C74253 * C5703 + C131867 + C131867 + C153928 * C5709 +
            C74251 * C4303 + C131868 + C131868 + C153932 * C4311) *
               C153454 * C153713 +
           (C74257 * C28502 + C75910 + C75910 + C153860 * C28506 +
            C74255 * C4723 + C75911 + C75911 + C153918 * C4729 +
            C74253 * C3127 + C75912 + C75912 + C153928 * C3135 +
            C74251 * C1319 + C75913 + C75913 + C153932 * C1329) *
               C153454 * C98459) *
              C153527 * C1313) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C74251 * C136 + C74260 + C74260 + C153932 * C152 + C74253 * C329 +
             C74261 + C74261 + C153928 * C353 + C74255 * C330 + C74262 +
             C74262 + C153918 * C354 + C74257 * C1319 + C74263 + C74263 +
             C153860 * C1329) *
                C153454 * C98459 +
            (C130867 + C130868 + C130869 + C130870) * C153454 * C153713) *
               C535 -
           ((C130871 + C130872 + C130873 + C130874) * C153454 * C153713 +
            (C130870 + C130869 + C130868 + C130867) * C153454 * C98459) *
               C536 +
           ((C130874 + C130873 + C130872 + C130871) * C153454 * C98459 +
            (C74251 * C2244 + C77295 + C77295 + C153932 * C2254 +
             C74253 * C6306 + C77294 + C77294 + C153928 * C6318 +
             C74255 * C6305 + C77293 + C77293 + C153918 * C6317 +
             C74257 * C30191 + C77292 + C77292 + C153860 * C30195) *
                C153454 * C153713) *
               C537) *
              C1223 +
          (((C131537 + C131538 + C131539 + C131540) * C153454 * C98459 +
            (C132083 + C132084 + C132085 + C132086) * C153454 * C153713) *
               C536 -
           ((C131540 + C131539 + C131538 + C131537) * C153454 * C153713 +
            (C74257 * C3127 + C74546 + C74546 + C153860 * C3135 +
             C74255 * C1319 + C74547 + C74547 + C153918 * C1329 +
             C74253 * C330 + C74548 + C74548 + C153928 * C354 + C74251 * C329 +
             C74549 + C74549 + C153932 * C353) *
                C153454 * C98459) *
               C535 -
           ((C74257 * C30190 + C132071 + C132071 + C153860 * C30194 +
             C74255 * C30191 + C132072 + C132072 + C153918 * C30195 +
             C74253 * C6305 + C132073 + C132073 + C153928 * C6317 +
             C74251 * C6306 + C132074 + C132074 + C153932 * C6318) *
                C153454 * C153713 +
            (C132086 + C132085 + C132084 + C132083) * C153454 * C98459) *
               C537) *
              C153563) *
         C153492) /
            (p * q * std::sqrt(p + q));
    d2ee[143] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
               C70427 + C70427 + C153671 * C353) *
                  C153922 +
              (C70480 + C70481) * C153903 + C70490 * C153874) *
                 C98459 +
             ((C78815 + C78816) * C153922 + C78756 * C153903 +
              C79422 * C153874) *
                 C153713) *
                C153838 -
            ((C78784 * C153874 + C78770 * C153903 +
              (C78818 + C78817) * C153922) *
                 C153713 +
             (C71445 * C153874 + C78771 * C153903 +
              (C78816 + C78815) * C153922) *
                 C98459) *
                C153591) *
               C1223 +
           ((((C79844 + C79845) * C153922 + C79814 * C153903 +
              C89454 * C153874) *
                 C98459 +
             ((C79846 + C79847) * C153922 + C79819 * C153903 +
              (C79130 + C79131) * C153874) *
                 C153713) *
                C153591 -
            ((C88776 * C153874 + C79829 * C153903 +
              (C79845 + C79844) * C153922) *
                 C153713 +
             (C71237 * C153874 + (C70760 + C70761) * C153903 +
              (C70423 * C330 + C70706 + C70706 + C153671 * C354 +
               C70421 * C329 + C70707 + C70707 + C70415 * C353) *
                  C153922) *
                 C98459) *
                C153838) *
               C153563) *
              C153829 +
          ((((C78756 * C153922 + C79422 * C153903 + C89067 * C153874) * C98459 +
             (C78761 * C153922 + C79423 * C153903 +
              (C71040 + C71041) * C153874) *
                 C153713) *
                C153591 -
            ((C71444 * C153874 + C71445 * C153903 + C78771 * C153922) *
                 C153713 +
             (C70493 * C153874 + (C70483 + C70482) * C153903 +
              (C70481 + C70480) * C153922) *
                 C98459) *
                C153838) *
               C1223 +
           ((((C70761 + C70760) * C153922 + (C70759 + C70758) * C153903 +
              (C70757 + C70756) * C153874) *
                 C98459 +
             (C79814 * C153922 + C89454 * C153903 +
              (C71754 + C71755) * C153874) *
                 C153713) *
                C153838 -
            (((C70423 * C3444 + C72282 + C72282 + C153671 * C3452 +
               C70421 * C1458 + C72283 + C72283 + C70415 * C1468) *
                  C153874 +
              (C79131 + C79130) * C153903 + C79828 * C153922) *
                 C153713 +
             ((C71755 + C71754) * C153874 + C88776 * C153903 +
              C79829 * C153922) *
                 C98459) *
                C153591) *
               C153563) *
              C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C74251 * C136 + C74260 + C74260 + C153932 * C152 + C74253 * C329 +
              C74261 + C74261 + C153928 * C353 + C74255 * C330 + C74262 +
              C74262 + C153918 * C354 + C74257 * C1319 + C74263 + C74263 +
              C153860 * C1329) *
                 C153454 * C98459 +
             (C130867 + C130868 + C130869 + C130870) * C153454 * C153713) *
                C153838 -
            ((C130871 + C130872 + C130873 + C130874) * C153454 * C153713 +
             (C130870 + C130869 + C130868 + C130867) * C153454 * C98459) *
                C153591) *
               C1223 +
           (((C131537 + C131538 + C131539 + C131540) * C153454 * C98459 +
             (C132083 + C132084 + C132085 + C132086) * C153454 * C153713) *
                C153591 -
            ((C131540 + C131539 + C131538 + C131537) * C153454 * C153713 +
             (C74257 * C3127 + C74546 + C74546 + C153860 * C3135 +
              C74255 * C1319 + C74547 + C74547 + C153918 * C1329 +
              C74253 * C330 + C74548 + C74548 + C153928 * C354 + C74251 * C329 +
              C74549 + C74549 + C153932 * C353) *
                 C153454 * C98459) *
                C153838) *
               C153563) *
              C153829 +
          ((((C74851 + C74850 + C74849 + C74848) * C153454 * C98459 +
             (C74852 + C74853 + C74854 + C74855) * C153454 * C153713) *
                C153591 -
            ((C74848 + C74849 + C74850 + C74851) * C153454 * C153713 +
             (C74331 + C74330 + C74329 + C74328) * C153454 * C98459) *
                C153838) *
               C1223 +
           (((C74593 + C74592 + C74591 + C74590) * C153454 * C98459 +
             (C75578 + C75579 + C75580 + C75581) * C153454 * C153713) *
                C153838 -
            ((C74257 * C28651 + C76108 + C76108 + C153860 * C28655 +
              C74255 * C4958 + C76109 + C76109 + C153918 * C4964 +
              C74253 * C3442 + C76110 + C76110 + C153928 * C3450 +
              C74251 * C1460 + C76111 + C76111 + C153932 * C1470) *
                 C153454 * C153713 +
             (C75581 + C75580 + C75579 + C75578) * C153454 * C98459) *
                C153591) *
               C153563) *
              C153498)) /
            (p * q * std::sqrt(p + q));
    d2ee[144] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
              C70427 + C70427 + C153671 * C353) *
                 C153922 +
             (C70480 + C70481) * C153903 + C70490 * C153874) *
                C98459 +
            ((C78815 + C78816) * C153922 + C78756 * C153903 +
             C79422 * C153874) *
                C153713) *
               C153527 * C1223 -
           ((C88776 * C153874 + C79829 * C153903 +
             (C79845 + C79844) * C153922) *
                C153713 +
            (C71237 * C153874 + (C70760 + C70761) * C153903 +
             (C70423 * C330 + C70706 + C70706 + C153671 * C354 + C70421 * C329 +
              C70707 + C70707 + C70415 * C353) *
                 C153922) *
                C98459) *
               C153527 * C153563) *
              C1225 +
          ((((C70761 + C70760) * C153922 + (C70759 + C70758) * C153903 +
             (C70757 + C70756) * C153874) *
                C98459 +
            (C79814 * C153922 + C89454 * C153903 +
             (C71754 + C71755) * C153874) *
                C153713) *
               C153527 * C153563 -
           ((C71444 * C153874 + C71445 * C153903 + C78771 * C153922) * C153713 +
            (C70493 * C153874 + (C70483 + C70482) * C153903 +
             (C70481 + C70480) * C153922) *
                C98459) *
               C153527 * C1223) *
              C1226 +
          (((C70490 * C153922 + C70491 * C153903 +
             (C70487 + C70486) * C153874) *
                C98459 +
            (C79422 * C153922 + C89067 * C153903 +
             (C71456 + C71457) * C153874) *
                C153713) *
               C153527 * C1223 -
           (((C70423 * C1888 + C71736 + C71736 + C153671 * C1898 +
              C70421 * C1061 + C71737 + C71737 + C70415 * C1073) *
                 C153874 +
             (C71755 + C71754) * C153903 + C88776 * C153922) *
                C153713 +
            ((C71249 + C71248) * C153874 + C71236 * C153903 +
             C71237 * C153922) *
                C98459) *
               C153527 * C153563) *
              C1227)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
             C70427 + C70427 + C153671 * C353) *
                C153922 +
            (C70480 + C70481) * C153903 + C70490 * C153874) *
               C98459 +
           ((C78815 + C78816) * C153922 + C78756 * C153903 + C79422 * C153874) *
               C153713) *
              C153527 * C1310 -
          ((C88776 * C153874 + C79829 * C153903 + (C79845 + C79844) * C153922) *
               C153713 +
           (C71237 * C153874 + (C70760 + C70761) * C153903 +
            (C70423 * C330 + C70706 + C70706 + C153671 * C354 + C70421 * C329 +
             C70707 + C70707 + C70415 * C353) *
                C153922) *
               C98459) *
              C153527 * C1311 +
          (((C70421 * C330 + C70708 + C70708 + C70415 * C354 + C70423 * C1319 +
             C70709 + C70709 + C153671 * C1329) *
                C153922 +
            (C70762 + C70763) * C153903 + (C70764 + C70765) * C153874) *
               C98459 +
           ((C81636 + C81637) * C153922 + (C78458 + C78459) * C153903 +
            (C88194 + C88195) * C153874) *
               C153713) *
              C153527 * C1312 -
          (((C70423 * C5701 + C89939 + C89939 + C153671 * C5707 +
             C70421 * C4305 + C89940 + C89940 + C70415 * C4313) *
                C153874 +
            (C70423 * C5702 + C80338 + C80338 + C153671 * C5708 +
             C70421 * C4304 + C80339 + C80339 + C70415 * C4312) *
                C153903 +
            (C70423 * C5703 + C80340 + C80340 + C153671 * C5709 +
             C70421 * C4303 + C80341 + C80341 + C70415 * C4311) *
                C153922) *
               C153713 +
           ((C70423 * C3129 + C72082 + C72082 + C153671 * C3137 +
             C70421 * C1317 + C72083 + C72083 + C70415 * C1327) *
                C153874 +
            (C70423 * C3128 + C72084 + C72084 + C153671 * C3136 +
             C70421 * C1318 + C72085 + C72085 + C70415 * C1328) *
                C153903 +
            (C70423 * C3127 + C72086 + C72086 + C153671 * C3135 +
             C70421 * C1319 + C72087 + C72087 + C70415 * C1329) *
                C153922) *
               C98459) *
              C153527 * C1313) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C74251 * C136 + C74260 + C74260 + C153932 * C152 + C74253 * C329 +
             C74261 + C74261 + C153928 * C353 + C74255 * C330 + C74262 +
             C74262 + C153918 * C354 + C74257 * C1319 + C74263 + C74263 +
             C153860 * C1329) *
                C153454 * C98459 +
            (C130867 + C130868 + C130869 + C130870) * C153454 * C153713) *
               C153527 * C1223 -
           ((C131540 + C131539 + C131538 + C131537) * C153454 * C153713 +
            (C74257 * C3127 + C74546 + C74546 + C153860 * C3135 +
             C74255 * C1319 + C74547 + C74547 + C153918 * C1329 +
             C74253 * C330 + C74548 + C74548 + C153928 * C354 + C74251 * C329 +
             C74549 + C74549 + C153932 * C353) *
                C153454 * C98459) *
               C153527 * C153563) *
              C1225 +
          (((C74593 + C74592 + C74591 + C74590) * C153454 * C98459 +
            (C75578 + C75579 + C75580 + C75581) * C153454 * C153713) *
               C153527 * C153563 -
           ((C74848 + C74849 + C74850 + C74851) * C153454 * C153713 +
            (C74331 + C74330 + C74329 + C74328) * C153454 * C98459) *
               C153527 * C1223) *
              C1226 +
          (((C74335 + C74334 + C74333 + C74332) * C153454 * C98459 +
            (C75288 + C75289 + C75290 + C75291) * C153454 * C153713) *
               C153527 * C1223 -
           ((C74257 * C5701 + C75566 + C75566 + C153860 * C5707 +
             C74255 * C4305 + C75567 + C75567 + C153918 * C4313 +
             C74253 * C1890 + C75568 + C75568 + C153928 * C1900 +
             C74251 * C1059 + C75569 + C75569 + C153932 * C1071) *
                C153454 * C153713 +
            (C75073 + C75072 + C75071 + C75070) * C153454 * C98459) *
               C153527 * C153563) *
              C1227)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C74251 * C136 + C74260 + C74260 + C153932 * C152 + C74253 * C329 +
            C74261 + C74261 + C153928 * C353 + C74255 * C330 + C74262 + C74262 +
            C153918 * C354 + C74257 * C1319 + C74263 + C74263 +
            C153860 * C1329) *
               C153454 * C98459 +
           (C130867 + C130868 + C130869 + C130870) * C153454 * C153713) *
              C153527 * C1310 -
          ((C131540 + C131539 + C131538 + C131537) * C153454 * C153713 +
           (C74257 * C3127 + C74546 + C74546 + C153860 * C3135 +
            C74255 * C1319 + C74547 + C74547 + C153918 * C1329 + C74253 * C330 +
            C74548 + C74548 + C153928 * C354 + C74251 * C329 + C74549 + C74549 +
            C153932 * C353) *
               C153454 * C98459) *
              C153527 * C1311 +
          ((C74251 * C330 + C74550 + C74550 + C153932 * C354 + C74253 * C1319 +
            C74551 + C74551 + C153928 * C1329 + C74255 * C3127 + C74552 +
            C74552 + C153918 * C3135 + C74257 * C4723 + C74553 + C74553 +
            C153860 * C4729) *
               C153454 * C98459 +
           (C74251 * C1892 + C76769 + C76769 + C153932 * C1902 +
            C74253 * C4303 + C76768 + C76768 + C153928 * C4311 +
            C74255 * C5703 + C76767 + C76767 + C153918 * C5709 +
            C74257 * C29092 + C76766 + C76766 + C153860 * C29096) *
               C153454 * C153713) *
              C153527 * C1312 -
          ((C74257 * C29856 + C131865 + C131865 + C153860 * C29858 +
            C74255 * C29092 + C131866 + C131866 + C153918 * C29096 +
            C74253 * C5703 + C131867 + C131867 + C153928 * C5709 +
            C74251 * C4303 + C131868 + C131868 + C153932 * C4311) *
               C153454 * C153713 +
           (C74257 * C28502 + C75910 + C75910 + C153860 * C28506 +
            C74255 * C4723 + C75911 + C75911 + C153918 * C4729 +
            C74253 * C3127 + C75912 + C75912 + C153928 * C3135 +
            C74251 * C1319 + C75913 + C75913 + C153932 * C1329) *
               C153454 * C98459) *
              C153527 * C1313) *
         C153492) /
            (p * q * std::sqrt(p + q));
    d2ee[145] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
               C70427 + C70427 + C153671 * C353) *
                  C153922 +
              (C70480 + C70481) * C153903 + C70490 * C153874) *
                 C98459 +
             ((C78815 + C78816) * C153922 + C78756 * C153903 +
              C79422 * C153874) *
                 C153713) *
                C2030 -
            ((C78784 * C153874 + C78770 * C153903 +
              (C78818 + C78817) * C153922) *
                 C153713 +
             (C71445 * C153874 + C78771 * C153903 +
              (C78816 + C78815) * C153922) *
                 C98459) *
                C153591) *
               C153837 +
           ((((C79844 + C79845) * C153922 + C79814 * C153903 +
              C89454 * C153874) *
                 C98459 +
             ((C79846 + C79847) * C153922 + C79819 * C153903 +
              (C79130 + C79131) * C153874) *
                 C153713) *
                C153591 -
            ((C88776 * C153874 + C79829 * C153903 +
              (C79845 + C79844) * C153922) *
                 C153713 +
             (C71237 * C153874 + (C70760 + C70761) * C153903 +
              (C70423 * C330 + C70706 + C70706 + C153671 * C354 +
               C70421 * C329 + C70707 + C70707 + C70415 * C353) *
                  C153922) *
                 C98459) *
                C2030) *
               C153563) *
              C153829 +
          ((((C78756 * C153922 + C79422 * C153903 + C89067 * C153874) * C98459 +
             (C78761 * C153922 + C79423 * C153903 +
              (C71040 + C71041) * C153874) *
                 C153713) *
                C153591 -
            ((C71444 * C153874 + C71445 * C153903 + C78771 * C153922) *
                 C153713 +
             (C70493 * C153874 + (C70483 + C70482) * C153903 +
              (C70481 + C70480) * C153922) *
                 C98459) *
                C2030) *
               C153837 +
           ((((C70761 + C70760) * C153922 + (C70759 + C70758) * C153903 +
              (C70757 + C70756) * C153874) *
                 C98459 +
             (C79814 * C153922 + C89454 * C153903 +
              (C71754 + C71755) * C153874) *
                 C153713) *
                C2030 -
            (((C70423 * C3444 + C72282 + C72282 + C153671 * C3452 +
               C70421 * C1458 + C72283 + C72283 + C70415 * C1468) *
                  C153874 +
              (C79131 + C79130) * C153903 + C79828 * C153922) *
                 C153713 +
             ((C71755 + C71754) * C153874 + C88776 * C153903 +
              C79829 * C153922) *
                 C98459) *
                C153591) *
               C153563) *
              C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C74251 * C136 + C74260 + C74260 + C153932 * C152 + C74253 * C329 +
              C74261 + C74261 + C153928 * C353 + C74255 * C330 + C74262 +
              C74262 + C153918 * C354 + C74257 * C1319 + C74263 + C74263 +
              C153860 * C1329) *
                 C153454 * C98459 +
             (C130867 + C130868 + C130869 + C130870) * C153454 * C153713) *
                C2030 -
            ((C130871 + C130872 + C130873 + C130874) * C153454 * C153713 +
             (C130870 + C130869 + C130868 + C130867) * C153454 * C98459) *
                C153591) *
               C153837 +
           (((C131537 + C131538 + C131539 + C131540) * C153454 * C98459 +
             (C132083 + C132084 + C132085 + C132086) * C153454 * C153713) *
                C153591 -
            ((C131540 + C131539 + C131538 + C131537) * C153454 * C153713 +
             (C74257 * C3127 + C74546 + C74546 + C153860 * C3135 +
              C74255 * C1319 + C74547 + C74547 + C153918 * C1329 +
              C74253 * C330 + C74548 + C74548 + C153928 * C354 + C74251 * C329 +
              C74549 + C74549 + C153932 * C353) *
                 C153454 * C98459) *
                C2030) *
               C153563) *
              C153829 +
          ((((C74851 + C74850 + C74849 + C74848) * C153454 * C98459 +
             (C74852 + C74853 + C74854 + C74855) * C153454 * C153713) *
                C153591 -
            ((C74848 + C74849 + C74850 + C74851) * C153454 * C153713 +
             (C74331 + C74330 + C74329 + C74328) * C153454 * C98459) *
                C2030) *
               C153837 +
           (((C74593 + C74592 + C74591 + C74590) * C153454 * C98459 +
             (C75578 + C75579 + C75580 + C75581) * C153454 * C153713) *
                C2030 -
            ((C74257 * C28651 + C76108 + C76108 + C153860 * C28655 +
              C74255 * C4958 + C76109 + C76109 + C153918 * C4964 +
              C74253 * C3442 + C76110 + C76110 + C153928 * C3450 +
              C74251 * C1460 + C76111 + C76111 + C153932 * C1470) *
                 C153454 * C153713 +
             (C75581 + C75580 + C75579 + C75578) * C153454 * C98459) *
                C153591) *
               C153563) *
              C153498)) /
            (p * q * std::sqrt(p + q));
    d2ee[146] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
              C70427 + C70427 + C153671 * C353) *
                 C153922 +
             (C70480 + C70481) * C153903 + C70490 * C153874) *
                C98459 +
            ((C78815 + C78816) * C153922 + C78756 * C153903 +
             C79422 * C153874) *
                C153713) *
               C153910 -
           ((C78784 * C153874 + C78770 * C153903 +
             (C78818 + C78817) * C153922) *
                C153713 +
            (C71445 * C153874 + C78771 * C153903 +
             (C78816 + C78815) * C153922) *
                C98459) *
               C153911 +
           ((C78827 * C153922 + C78761 * C153903 + C79423 * C153874) * C98459 +
            ((C78822 + C78821) * C153922 + C78829 * C153903 +
             (C78825 + C78826) * C153874) *
                C153713) *
               C2546) *
              C153837 +
          ((((C79844 + C79845) * C153922 + C79814 * C153903 +
             C89454 * C153874) *
                C98459 +
            ((C79846 + C79847) * C153922 + C79819 * C153903 +
             (C79130 + C79131) * C153874) *
                C153713) *
               C153911 -
           ((C88776 * C153874 + C79829 * C153903 +
             (C79845 + C79844) * C153922) *
                C153713 +
            (C71237 * C153874 + (C70760 + C70761) * C153903 +
             (C70423 * C330 + C70706 + C70706 + C153671 * C354 + C70421 * C329 +
              C70707 + C70707 + C70415 * C353) *
                 C153922) *
                C98459) *
               C153910 -
           (((C70423 * C6301 + C79830 + C79830 + C153671 * C6313 +
              C70421 * C6302 + C79831 + C79831 + C70415 * C6314) *
                 C153874 +
             (C79849 + C79848) * C153903 + (C80649 + C80648) * C153922) *
                C153713 +
            ((C79131 + C79130) * C153874 + C79828 * C153903 +
             C80637 * C153922) *
                C98459) *
               C2546) *
              C153563) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C74251 * C136 + C74260 + C74260 + C153932 * C152 + C74253 * C329 +
             C74261 + C74261 + C153928 * C353 + C74255 * C330 + C74262 +
             C74262 + C153918 * C354 + C74257 * C1319 + C74263 + C74263 +
             C153860 * C1329) *
                C153454 * C98459 +
            (C130867 + C130868 + C130869 + C130870) * C153454 * C153713) *
               C153910 -
           ((C130871 + C130872 + C130873 + C130874) * C153454 * C153713 +
            (C130870 + C130869 + C130868 + C130867) * C153454 * C98459) *
               C153911 +
           ((C130874 + C130873 + C130872 + C130871) * C153454 * C98459 +
            (C133295 + C133296 + C133297 + C133298) * C153454 * C153713) *
               C2546) *
              C153837 +
          (((C131537 + C131538 + C131539 + C131540) * C153454 * C98459 +
            (C132083 + C132084 + C132085 + C132086) * C153454 * C153713) *
               C153911 -
           ((C131540 + C131539 + C131538 + C131537) * C153454 * C153713 +
            (C74257 * C3127 + C74546 + C74546 + C153860 * C3135 +
             C74255 * C1319 + C74547 + C74547 + C153918 * C1329 +
             C74253 * C330 + C74548 + C74548 + C153928 * C354 + C74251 * C329 +
             C74549 + C74549 + C153932 * C353) *
                C153454 * C98459) *
               C153910 -
           ((C74257 * C30190 + C132071 + C132071 + C153860 * C30194 +
             C74255 * C30191 + C132072 + C132072 + C153918 * C30195 +
             C74253 * C6305 + C132073 + C132073 + C153928 * C6317 +
             C74251 * C6306 + C132074 + C132074 + C153932 * C6318) *
                C153454 * C153713 +
            (C132086 + C132085 + C132084 + C132083) * C153454 * C98459) *
               C2546) *
              C153563) *
         C153492) /
            (p * q * std::sqrt(p + q));
    d2ee[147] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
              C70427 + C70427 + C153671 * C353) *
                 C153922 +
             (C70480 + C70481) * C153903 + C70490 * C153874) *
                C98459 +
            ((C78815 + C78816) * C153922 + C78756 * C153903 +
             C79422 * C153874) *
                C153713) *
               C2030 -
           ((C78784 * C153874 + C78770 * C153903 +
             (C78818 + C78817) * C153922) *
                C153713 +
            (C71445 * C153874 + C78771 * C153903 +
             (C78816 + C78815) * C153922) *
                C98459) *
               C153591) *
              C320 +
          ((((C79844 + C79845) * C153922 + C79814 * C153903 +
             C89454 * C153874) *
                C98459 +
            ((C79846 + C79847) * C153922 + C79819 * C153903 +
             (C79130 + C79131) * C153874) *
                C153713) *
               C153591 -
           ((C88776 * C153874 + C79829 * C153903 +
             (C79845 + C79844) * C153922) *
                C153713 +
            (C71237 * C153874 + (C70760 + C70761) * C153903 +
             (C70423 * C330 + C70706 + C70706 + C153671 * C354 + C70421 * C329 +
              C70707 + C70707 + C70415 * C353) *
                 C153922) *
                C98459) *
               C2030) *
              C321 +
          ((((C70421 * C330 + C70708 + C70708 + C70415 * C354 + C70423 * C1319 +
              C70709 + C70709 + C153671 * C1329) *
                 C153922 +
             (C70762 + C70763) * C153903 + (C70764 + C70765) * C153874) *
                C98459 +
            ((C81636 + C81637) * C153922 + (C78458 + C78459) * C153903 +
             (C88194 + C88195) * C153874) *
                C153713) *
               C2030 -
           (((C70423 * C4957 + C78442 + C78442 + C153671 * C4963 +
              C70421 * C3443 + C78443 + C78443 + C70415 * C3451) *
                 C153874 +
             (C78461 + C78460) * C153903 + (C81639 + C81638) * C153922) *
                C153713 +
            ((C88195 + C88194) * C153874 + (C78459 + C78458) * C153903 +
             (C81637 + C81636) * C153922) *
                C98459) *
               C153591) *
              C322) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
              C70427 + C70427 + C153671 * C353) *
                 C153922 +
             (C70480 + C70481) * C153903 + C70490 * C153874) *
                C98459 +
            ((C78815 + C78816) * C153922 + C78756 * C153903 +
             C79422 * C153874) *
                C153713) *
               C2030 -
           ((C78784 * C153874 + C78770 * C153903 +
             (C78818 + C78817) * C153922) *
                C153713 +
            (C71445 * C153874 + C78771 * C153903 +
             (C78816 + C78815) * C153922) *
                C98459) *
               C153591) *
              C153511 * C1225 +
          (((C78756 * C153922 + C79422 * C153903 + C89067 * C153874) * C98459 +
            (C78761 * C153922 + C79423 * C153903 +
             (C71040 + C71041) * C153874) *
                C153713) *
               C153591 -
           ((C71444 * C153874 + C71445 * C153903 + C78771 * C153922) * C153713 +
            (C70493 * C153874 + (C70483 + C70482) * C153903 +
             (C70481 + C70480) * C153922) *
                C98459) *
               C2030) *
              C153511 * C1226 +
          (((C70490 * C153922 + C70491 * C153903 +
             (C70487 + C70486) * C153874) *
                C98459 +
            (C79422 * C153922 + C89067 * C153903 +
             (C71456 + C71457) * C153874) *
                C153713) *
               C2030 -
           (((C70423 * C1457 + C71004 + C71004 + C153671 * C1467 +
              C70421 * C547 + C71005 + C71005 + C70415 * C571) *
                 C153874 +
             (C71041 + C71040) * C153903 + C78784 * C153922) *
                C153713 +
            ((C71457 + C71456) * C153874 + C71444 * C153903 +
             C71445 * C153922) *
                C98459) *
               C153591) *
              C153511 * C1227)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
             C70427 + C70427 + C153671 * C353) *
                C153922 +
            (C70480 + C70481) * C153903 + C70490 * C153874) *
               C98459 +
           ((C78815 + C78816) * C153922 + C78756 * C153903 + C79422 * C153874) *
               C153713) *
              C2236 -
          ((C78784 * C153874 + C78770 * C153903 + (C78818 + C78817) * C153922) *
               C153713 +
           (C71445 * C153874 + C78771 * C153903 + (C78816 + C78815) * C153922) *
               C98459) *
              C2237 +
          ((C78827 * C153922 + C78761 * C153903 + C79423 * C153874) * C98459 +
           ((C78822 + C78821) * C153922 + C78829 * C153903 +
            (C78825 + C78826) * C153874) *
               C153713) *
              C2238 -
          (((C70423 * C9115 + C78785 + C78785 + C153671 * C9121 +
             C70421 * C7675 + C78786 + C78786 + C70415 * C7683) *
                C153874 +
            (C78824 + C78823) * C153903 + (C82431 + C82430) * C153922) *
               C153713 +
           ((C78826 + C78825) * C153874 + C78828 * C153903 + C82415 * C153922) *
               C98459) *
              C2239) *
         C153511 * C153492) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C74251 * C136 + C74260 + C74260 + C153932 * C152 + C74253 * C329 +
             C74261 + C74261 + C153928 * C353 + C74255 * C330 + C74262 +
             C74262 + C153918 * C354 + C74257 * C1319 + C74263 + C74263 +
             C153860 * C1329) *
                C153454 * C98459 +
            (C130867 + C130868 + C130869 + C130870) * C153454 * C153713) *
               C2030 -
           ((C130871 + C130872 + C130873 + C130874) * C153454 * C153713 +
            (C130870 + C130869 + C130868 + C130867) * C153454 * C98459) *
               C153591) *
              C153511 * C1225 +
          (((C74851 + C74850 + C74849 + C74848) * C153454 * C98459 +
            (C74852 + C74853 + C74854 + C74855) * C153454 * C153713) *
               C153591 -
           ((C74848 + C74849 + C74850 + C74851) * C153454 * C153713 +
            (C74331 + C74330 + C74329 + C74328) * C153454 * C98459) *
               C2030) *
              C153511 * C1226 +
          (((C74335 + C74334 + C74333 + C74332) * C153454 * C98459 +
            (C75288 + C75289 + C75290 + C75291) * C153454 * C153713) *
               C2030 -
           ((C74257 * C4957 + C74828 + C74828 + C153860 * C4963 +
             C74255 * C3443 + C74829 + C74829 + C153918 * C3451 +
             C74253 * C1459 + C74830 + C74830 + C153928 * C1469 +
             C74251 * C545 + C74831 + C74831 + C153932 * C569) *
                C153454 * C153713 +
            (C75291 + C75290 + C75289 + C75288) * C153454 * C98459) *
               C153591) *
              C153511 * C1227)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C74251 * C136 + C74260 + C74260 + C153932 * C152 + C74253 * C329 +
             C74261 + C74261 + C153928 * C353 + C74255 * C330 + C74262 +
             C74262 + C153918 * C354 + C74257 * C1319 + C74263 + C74263 +
             C153860 * C1329) *
                C153454 * C98459 +
            (C130867 + C130868 + C130869 + C130870) * C153454 * C153713) *
               C2030 -
           ((C130871 + C130872 + C130873 + C130874) * C153454 * C153713 +
            (C130870 + C130869 + C130868 + C130867) * C153454 * C98459) *
               C153591) *
              C320 +
          (((C131537 + C131538 + C131539 + C131540) * C153454 * C98459 +
            (C132083 + C132084 + C132085 + C132086) * C153454 * C153713) *
               C153591 -
           ((C131540 + C131539 + C131538 + C131537) * C153454 * C153713 +
            (C74257 * C3127 + C74546 + C74546 + C153860 * C3135 +
             C74255 * C1319 + C74547 + C74547 + C153918 * C1329 +
             C74253 * C330 + C74548 + C74548 + C153928 * C354 + C74251 * C329 +
             C74549 + C74549 + C153932 * C353) *
                C153454 * C98459) *
               C2030) *
              C321 +
          (((C74251 * C330 + C74550 + C74550 + C153932 * C354 + C74253 * C1319 +
             C74551 + C74551 + C153928 * C1329 + C74255 * C3127 + C74552 +
             C74552 + C153918 * C3135 + C74257 * C4723 + C74553 + C74553 +
             C153860 * C4729) *
                C153454 * C98459 +
            (C132753 + C132754 + C132755 + C132756) * C153454 * C153713) *
               C2030 -
           ((C74257 * C29442 + C132741 + C132741 + C153860 * C29444 +
             C74255 * C28650 + C132742 + C132742 + C153918 * C28654 +
             C74253 * C4959 + C132743 + C132743 + C153928 * C4965 +
             C74251 * C3441 + C132744 + C132744 + C153932 * C3449) *
                C153454 * C153713 +
            (C132756 + C132755 + C132754 + C132753) * C153454 * C98459) *
               C153591) *
              C322) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C74251 * C136 + C74260 + C74260 + C153932 * C152 + C74253 * C329 +
            C74261 + C74261 + C153928 * C353 + C74255 * C330 + C74262 + C74262 +
            C153918 * C354 + C74257 * C1319 + C74263 + C74263 +
            C153860 * C1329) *
               C153454 * C98459 +
           (C130867 + C130868 + C130869 + C130870) * C153454 * C153713) *
              C2236 -
          ((C130871 + C130872 + C130873 + C130874) * C153454 * C153713 +
           (C130870 + C130869 + C130868 + C130867) * C153454 * C98459) *
              C2237 +
          ((C130874 + C130873 + C130872 + C130871) * C153454 * C98459 +
           (C133295 + C133296 + C133297 + C133298) * C153454 * C153713) *
              C2238 -
          ((C74257 * C32641 + C133283 + C133283 + C153860 * C32643 +
            C74255 * C31195 + C133284 + C133284 + C153918 * C31199 +
            C74253 * C9117 + C133285 + C133285 + C153928 * C9123 +
            C74251 * C7673 + C133286 + C133286 + C153932 * C7681) *
               C153454 * C153713 +
           (C133298 + C133297 + C133296 + C133295) * C153454 * C98459) *
              C2239) *
         C153511 * C153492) /
            (p * q * std::sqrt(p + q));
    d2ee[148] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
              C70427 + C70427 + C153671 * C353) *
                 C153922 +
             (C70480 + C70481) * C153903 + C70490 * C153874) *
                C98459 +
            ((C78815 + C78816) * C153922 + C78756 * C153903 +
             C79422 * C153874) *
                C153713) *
               C153910 -
           ((C78784 * C153874 + C78770 * C153903 +
             (C78818 + C78817) * C153922) *
                C153713 +
            (C71445 * C153874 + C78771 * C153903 +
             (C78816 + C78815) * C153922) *
                C98459) *
               C153911 +
           ((C78827 * C153922 + C78761 * C153903 + C79423 * C153874) * C98459 +
            ((C78822 + C78821) * C153922 + C78829 * C153903 +
             (C78825 + C78826) * C153874) *
                C153713) *
               C2546) *
              C153511 * C153829 +
          (((C78756 * C153922 + C79422 * C153903 + C89067 * C153874) * C98459 +
            (C78761 * C153922 + C79423 * C153903 +
             (C71040 + C71041) * C153874) *
                C153713) *
               C153911 -
           ((C71444 * C153874 + C71445 * C153903 + C78771 * C153922) * C153713 +
            (C70493 * C153874 + (C70483 + C70482) * C153903 +
             (C70481 + C70480) * C153922) *
                C98459) *
               C153910 -
           (((C70423 * C8488 + C73462 + C73462 + C153671 * C8490 +
              C70421 * C2241 + C73463 + C73463 + C70415 * C2251) *
                 C153874 +
             (C78826 + C78825) * C153903 + C78828 * C153922) *
                C153713 +
            ((C71041 + C71040) * C153874 + C78784 * C153903 +
             C78770 * C153922) *
                C98459) *
               C2546) *
              C153511 * C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C74251 * C136 + C74260 + C74260 + C153932 * C152 + C74253 * C329 +
             C74261 + C74261 + C153928 * C353 + C74255 * C330 + C74262 +
             C74262 + C153918 * C354 + C74257 * C1319 + C74263 + C74263 +
             C153860 * C1329) *
                C153454 * C98459 +
            (C130867 + C130868 + C130869 + C130870) * C153454 * C153713) *
               C153910 -
           ((C130871 + C130872 + C130873 + C130874) * C153454 * C153713 +
            (C130870 + C130869 + C130868 + C130867) * C153454 * C98459) *
               C153911 +
           ((C130874 + C130873 + C130872 + C130871) * C153454 * C98459 +
            (C133295 + C133296 + C133297 + C133298) * C153454 * C153713) *
               C2546) *
              C153511 * C153829 +
          (((C74851 + C74850 + C74849 + C74848) * C153454 * C98459 +
            (C74852 + C74853 + C74854 + C74855) * C153454 * C153713) *
               C153911 -
           ((C74848 + C74849 + C74850 + C74851) * C153454 * C153713 +
            (C74331 + C74330 + C74329 + C74328) * C153454 * C98459) *
               C153910 -
           ((C74257 * C31999 + C77288 + C77288 + C153860 * C32001 +
             C74255 * C6303 + C77289 + C77289 + C153918 * C6315 +
             C74253 * C6304 + C77290 + C77290 + C153928 * C6316 +
             C74251 * C2243 + C77291 + C77291 + C153932 * C2253) *
                C153454 * C153713 +
            (C74855 + C74854 + C74853 + C74852) * C153454 * C98459) *
               C2546) *
              C153511 * C153498)) /
            (p * q * std::sqrt(p + q));
    d2ee[149] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
              C70427 + C70427 + C153671 * C353) *
                 C153922 +
             (C70480 + C70481) * C153903 + C70490 * C153874) *
                C98459 +
            ((C78815 + C78816) * C153922 + C78756 * C153903 +
             C79422 * C153874) *
                C153713) *
               C2030 -
           ((C78784 * C153874 + C78770 * C153903 +
             (C78818 + C78817) * C153922) *
                C153713 +
            (C71445 * C153874 + C78771 * C153903 +
             (C78816 + C78815) * C153922) *
                C98459) *
               C153591) *
              C153511 * C1225 +
          (((C78756 * C153922 + C79422 * C153903 + C89067 * C153874) * C98459 +
            (C78761 * C153922 + C79423 * C153903 +
             (C71040 + C71041) * C153874) *
                C153713) *
               C153591 -
           ((C71444 * C153874 + C71445 * C153903 + C78771 * C153922) * C153713 +
            (C70493 * C153874 + (C70483 + C70482) * C153903 +
             (C70481 + C70480) * C153922) *
                C98459) *
               C2030) *
              C153511 * C1226 +
          (((C70490 * C153922 + C70491 * C153903 +
             (C70487 + C70486) * C153874) *
                C98459 +
            (C79422 * C153922 + C89067 * C153903 +
             (C71456 + C71457) * C153874) *
                C153713) *
               C2030 -
           (((C70423 * C1457 + C71004 + C71004 + C153671 * C1467 +
              C70421 * C547 + C71005 + C71005 + C70415 * C571) *
                 C153874 +
             (C71041 + C71040) * C153903 + C78784 * C153922) *
                C153713 +
            ((C71457 + C71456) * C153874 + C71444 * C153903 +
             C71445 * C153922) *
                C98459) *
               C153591) *
              C153511 * C1227)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C70421 * C136 + C70426 + C70426 + C70415 * C152 + C70423 * C329 +
              C70427 + C70427 + C153671 * C353) *
                 C153922 +
             (C70480 + C70481) * C153903 + C70490 * C153874) *
                C98459 +
            ((C78815 + C78816) * C153922 + C78756 * C153903 +
             C79422 * C153874) *
                C153713) *
               C2030 -
           ((C78784 * C153874 + C78770 * C153903 +
             (C78818 + C78817) * C153922) *
                C153713 +
            (C71445 * C153874 + C78771 * C153903 +
             (C78816 + C78815) * C153922) *
                C98459) *
               C153591) *
              C320 +
          ((((C79844 + C79845) * C153922 + C79814 * C153903 +
             C89454 * C153874) *
                C98459 +
            ((C79846 + C79847) * C153922 + C79819 * C153903 +
             (C79130 + C79131) * C153874) *
                C153713) *
               C153591 -
           ((C88776 * C153874 + C79829 * C153903 +
             (C79845 + C79844) * C153922) *
                C153713 +
            (C71237 * C153874 + (C70760 + C70761) * C153903 +
             (C70423 * C330 + C70706 + C70706 + C153671 * C354 + C70421 * C329 +
              C70707 + C70707 + C70415 * C353) *
                 C153922) *
                C98459) *
               C2030) *
              C321 +
          ((((C70421 * C330 + C70708 + C70708 + C70415 * C354 + C70423 * C1319 +
              C70709 + C70709 + C153671 * C1329) *
                 C153922 +
             (C70762 + C70763) * C153903 + (C70764 + C70765) * C153874) *
                C98459 +
            ((C81636 + C81637) * C153922 + (C78458 + C78459) * C153903 +
             (C88194 + C88195) * C153874) *
                C153713) *
               C2030 -
           (((C70423 * C4957 + C78442 + C78442 + C153671 * C4963 +
              C70421 * C3443 + C78443 + C78443 + C70415 * C3451) *
                 C153874 +
             (C78461 + C78460) * C153903 + (C81639 + C81638) * C153922) *
                C153713 +
            ((C88195 + C88194) * C153874 + (C78459 + C78458) * C153903 +
             (C81637 + C81636) * C153922) *
                C98459) *
               C153591) *
              C322) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C74251 * C136 + C74260 + C74260 + C153932 * C152 + C74253 * C329 +
             C74261 + C74261 + C153928 * C353 + C74255 * C330 + C74262 +
             C74262 + C153918 * C354 + C74257 * C1319 + C74263 + C74263 +
             C153860 * C1329) *
                C153454 * C98459 +
            (C130867 + C130868 + C130869 + C130870) * C153454 * C153713) *
               C2030 -
           ((C130871 + C130872 + C130873 + C130874) * C153454 * C153713 +
            (C130870 + C130869 + C130868 + C130867) * C153454 * C98459) *
               C153591) *
              C153511 * C1225 +
          (((C74851 + C74850 + C74849 + C74848) * C153454 * C98459 +
            (C74852 + C74853 + C74854 + C74855) * C153454 * C153713) *
               C153591 -
           ((C74848 + C74849 + C74850 + C74851) * C153454 * C153713 +
            (C74331 + C74330 + C74329 + C74328) * C153454 * C98459) *
               C2030) *
              C153511 * C1226 +
          (((C74335 + C74334 + C74333 + C74332) * C153454 * C98459 +
            (C75288 + C75289 + C75290 + C75291) * C153454 * C153713) *
               C2030 -
           ((C74257 * C4957 + C74828 + C74828 + C153860 * C4963 +
             C74255 * C3443 + C74829 + C74829 + C153918 * C3451 +
             C74253 * C1459 + C74830 + C74830 + C153928 * C1469 +
             C74251 * C545 + C74831 + C74831 + C153932 * C569) *
                C153454 * C153713 +
            (C75291 + C75290 + C75289 + C75288) * C153454 * C98459) *
               C153591) *
              C153511 * C1227)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C74251 * C136 + C74260 + C74260 + C153932 * C152 + C74253 * C329 +
             C74261 + C74261 + C153928 * C353 + C74255 * C330 + C74262 +
             C74262 + C153918 * C354 + C74257 * C1319 + C74263 + C74263 +
             C153860 * C1329) *
                C153454 * C98459 +
            (C130867 + C130868 + C130869 + C130870) * C153454 * C153713) *
               C2030 -
           ((C130871 + C130872 + C130873 + C130874) * C153454 * C153713 +
            (C130870 + C130869 + C130868 + C130867) * C153454 * C98459) *
               C153591) *
              C320 +
          (((C131537 + C131538 + C131539 + C131540) * C153454 * C98459 +
            (C132083 + C132084 + C132085 + C132086) * C153454 * C153713) *
               C153591 -
           ((C131540 + C131539 + C131538 + C131537) * C153454 * C153713 +
            (C74257 * C3127 + C74546 + C74546 + C153860 * C3135 +
             C74255 * C1319 + C74547 + C74547 + C153918 * C1329 +
             C74253 * C330 + C74548 + C74548 + C153928 * C354 + C74251 * C329 +
             C74549 + C74549 + C153932 * C353) *
                C153454 * C98459) *
               C2030) *
              C321 +
          (((C74251 * C330 + C74550 + C74550 + C153932 * C354 + C74253 * C1319 +
             C74551 + C74551 + C153928 * C1329 + C74255 * C3127 + C74552 +
             C74552 + C153918 * C3135 + C74257 * C4723 + C74553 + C74553 +
             C153860 * C4729) *
                C153454 * C98459 +
            (C132753 + C132754 + C132755 + C132756) * C153454 * C153713) *
               C2030 -
           ((C74257 * C29442 + C132741 + C132741 + C153860 * C29444 +
             C74255 * C28650 + C132742 + C132742 + C153918 * C28654 +
             C74253 * C4959 + C132743 + C132743 + C153928 * C4965 +
             C74251 * C3441 + C132744 + C132744 + C153932 * C3449) *
                C153454 * C153713 +
            (C132756 + C132755 + C132754 + C132753) * C153454 * C98459) *
               C153591) *
              C322) *
         C153492) /
            (p * q * std::sqrt(p + q));
    d2ee[150] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C34895 * C136 + C34904 + C34904 + C34889 * C152 + C34897 * C329 +
             C34905 + C34905 + C34890 * C353 + C34899 * C330 + C34906 + C34906 +
             C34891 * C354 + C34901 * C1319 + C34907 + C34907 +
             C153860 * C1329) *
                C153818 +
            (C34972 + C34973 + C34974 + C34975) * C153464) *
               C153626 * C153527 * C153837 -
           ((C35234 + C35235 + C35236 + C35237) * C153464 +
            (C34901 * C3127 + C35190 + C35190 + C153860 * C3135 +
             C34899 * C1319 + C35191 + C35191 + C34891 * C1329 + C34897 * C330 +
             C35192 + C35192 + C34890 * C354 + C34895 * C329 + C35193 + C35193 +
             C34889 * C353) *
                C153818) *
               C153626 * C153527 * C153563) *
              C153906 +
          (((C35237 + C35236 + C35235 + C35234) * C153818 +
            (C35714 + C35715 + C35716 + C35717) * C153464) *
               C153626 * C153527 * C153563 -
           ((C34976 + C34977 + C34978 + C34979) * C153464 +
            (C34975 + C34974 + C34973 + C34972) * C153818) *
               C153626 * C153527 * C153837) *
              C153907 +
          (((C34979 + C34978 + C34977 + C34976) * C153818 +
            (C34980 + C34981 + C34982 + C34983) * C153464) *
               C153626 * C153527 * C153837 -
           ((C34901 * C3130 + C35702 + C35702 + C153860 * C3138 +
             C34899 * C1316 + C35703 + C35703 + C34891 * C1326 + C34897 * C333 +
             C35704 + C35704 + C34890 * C357 + C34895 * C326 + C35705 + C35705 +
             C34889 * C350) *
                C153464 +
            (C35717 + C35716 + C35715 + C35714) * C153818) *
               C153626 * C153527 * C153563) *
              C752)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C11348 * C136 + C11353 + C11353 + C153851 * C152 + C11350 * C329 +
             C11354 + C11354 + C153671 * C353) *
                C11344 +
            (C11407 + C11408) * C11345 + C11417 * C11346 + C11418 * C153852) *
               C153626 * C153527 * C153837 -
           (C12163 * C153852 + C12164 * C11346 + (C11687 + C11688) * C11345 +
            (C11350 * C330 + C11633 + C11633 + C153671 * C354 + C11348 * C329 +
             C11634 + C11634 + C153851 * C353) *
                C11344) *
               C153626 * C153527 * C153563) *
              C153906 +
          (((C11688 + C11687) * C11344 + (C11686 + C11685) * C11345 +
            (C11684 + C11683) * C11346 + (C12175 + C12176) * C153852) *
               C153626 * C153527 * C153563 -
           (C11419 * C153852 + C11420 * C11346 + (C11410 + C11409) * C11345 +
            (C11408 + C11407) * C11344) *
               C153626 * C153527 * C153837) *
              C153907 +
          ((C11417 * C11344 + C11418 * C11345 + (C11414 + C11413) * C11346 +
            (C11415 + C11416) * C153852) *
               C153626 * C153527 * C153837 -
           ((C11350 * C336 + C12169 + C12169 + C153671 * C360 + C11348 * C335 +
             C12170 + C12170 + C153851 * C359) *
                C153852 +
            (C12176 + C12175) * C11346 + C12163 * C11345 + C12164 * C11344) *
               C153626 * C153527 * C153563) *
              C752)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C11348 * C136 + C11353 + C11353 + C153851 * C152 + C11350 * C329 +
              C11354 + C11354 + C153671 * C353) *
                 C153818 +
             (C11407 + C11408) * C153464) *
                C47609 +
            ((C19416 + C19417) * C153818 + C19382 * C153464) * C47610 +
            C58674 * C153890) *
               C153527 * C153837 -
           (((C20422 + C20421) * C153464 + (C21220 + C21219) * C153818) *
                C153890 +
            (C20406 * C153464 + (C20420 + C20419) * C153818) * C47610 +
            ((C11687 + C11688) * C153464 +
             (C11350 * C330 + C11633 + C11633 + C153671 * C354 + C11348 * C329 +
              C11634 + C11634 + C153851 * C353) *
                 C153818) *
                C47609) *
               C153527 * C153563) *
              C153906 +
          ((((C11688 + C11687) * C153818 + (C11686 + C11685) * C153464) *
                C47609 +
            (C20396 * C153818 + C20397 * C153464) * C47610 +
            ((C20421 + C20422) * C153818 + (C20423 + C20424) * C153464) *
                C153890) *
               C153527 * C153563 -
           (C58673 * C153890 + (C12372 * C153464 + C19389 * C153818) * C47610 +
            ((C11410 + C11409) * C153464 + (C11408 + C11407) * C153818) *
                C47609) *
               C153527 * C153837) *
              C153907 +
          (((C11417 * C153818 + C11418 * C153464) * C47609 +
            (C18777 * C153818 + C20005 * C153464) * C47610 +
            (C19391 * C153818 + (C11967 + C11968) * C153464) * C153890) *
               C153527 * C153837 -
           (((C11350 * C3444 + C13209 + C13209 + C153671 * C3452 +
              C11348 * C1458 + C13210 + C13210 + C153851 * C1468) *
                 C153464 +
             (C20424 + C20423) * C153818) *
                C153890 +
            ((C12682 + C12681) * C153464 + C19714 * C153818) * C47610 +
            (C12163 * C153464 + C12164 * C153818) * C47609) *
               C153527 * C153563) *
              C752)) /
            (p * q * std::sqrt(p + q));
    d2ee[151] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C34895 * C136 + C34904 + C34904 + C34889 * C152 + C34897 * C329 +
              C34905 + C34905 + C34890 * C353 + C34899 * C330 + C34906 +
              C34906 + C34891 * C354 + C34901 * C1319 + C34907 + C34907 +
              C153860 * C1329) *
                 C153818 +
             (C34972 + C34973 + C34974 + C34975) * C153464) *
                C153626 * C153838 -
            ((C35492 + C35493 + C35494 + C35495) * C153464 +
             (C34901 * C4303 + C35448 + C35448 + C153860 * C4311 +
              C34899 * C1892 + C35449 + C35449 + C34891 * C1902 +
              C34897 * C1057 + C35450 + C35450 + C34890 * C1069 +
              C34895 * C542 + C35451 + C35451 + C34889 * C566) *
                 C153818) *
                C153626 * C153591) *
               C153837 +
           (((C34895 * C1057 + C36194 + C36194 + C34889 * C1069 +
              C34897 * C1892 + C36195 + C36195 + C34890 * C1902 +
              C34899 * C4303 + C36196 + C36196 + C34891 * C4311 +
              C34901 * C5703 + C36197 + C36197 + C153860 * C5709) *
                 C153818 +
             (C36222 + C36223 + C36224 + C36225) * C153464) *
                C153626 * C153591 -
            ((C35234 + C35235 + C35236 + C35237) * C153464 +
             (C34901 * C3127 + C35190 + C35190 + C153860 * C3135 +
              C34899 * C1319 + C35191 + C35191 + C34891 * C1329 +
              C34897 * C330 + C35192 + C35192 + C34890 * C354 + C34895 * C329 +
              C35193 + C35193 + C34889 * C353) *
                 C153818) *
                C153626 * C153838) *
               C153563) *
              C323 +
          ((((C35495 + C35494 + C35493 + C35492) * C153818 +
             (C35932 + C35933 + C35934 + C35935) * C153464) *
                C153626 * C153591 -
            ((C34976 + C34977 + C34978 + C34979) * C153464 +
             (C34975 + C34974 + C34973 + C34972) * C153818) *
                C153626 * C153838) *
               C153837 +
           (((C35237 + C35236 + C35235 + C35234) * C153818 +
             (C35714 + C35715 + C35716 + C35717) * C153464) *
                C153626 * C153838 -
            ((C34901 * C5701 + C36210 + C36210 + C153860 * C5707 +
              C34899 * C4305 + C36211 + C36211 + C34891 * C4313 +
              C34897 * C1890 + C36212 + C36212 + C34890 * C1900 +
              C34895 * C1059 + C36213 + C36213 + C34889 * C1071) *
                 C153464 +
             (C36225 + C36224 + C36223 + C36222) * C153818) *
                C153626 * C153591) *
               C153563) *
              C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C11348 * C136 + C11353 + C11353 + C153851 * C152 + C11350 * C329 +
              C11354 + C11354 + C153671 * C353) *
                 C11344 +
             (C11407 + C11408) * C11345 + C11417 * C11346 + C11418 * C153852) *
                C153626 * C153838 -
            (C12371 * C153852 + C12372 * C11346 + (C11961 + C11962) * C11345 +
             (C11350 * C1057 + C11907 + C11907 + C153671 * C1069 +
              C11348 * C542 + C11908 + C11908 + C153851 * C566) *
                 C11344) *
                C153626 * C153591) *
               C153837 +
           (((C11348 * C1057 + C12643 + C12643 + C153851 * C1069 +
              C11350 * C1892 + C12644 + C12644 + C153671 * C1902) *
                 C11344 +
             (C12677 + C12678) * C11345 + (C12679 + C12680) * C11346 +
             (C12681 + C12682) * C153852) *
                C153626 * C153591 -
            (C12163 * C153852 + C12164 * C11346 + (C11687 + C11688) * C11345 +
             (C11350 * C330 + C11633 + C11633 + C153671 * C354 + C11348 * C329 +
              C11634 + C11634 + C153851 * C353) *
                 C11344) *
                C153626 * C153838) *
               C153563) *
              C323 +
          ((((C11962 + C11961) * C11344 + (C11960 + C11959) * C11345 +
             (C11958 + C11957) * C11346 + (C12383 + C12384) * C153852) *
                C153626 * C153591 -
            (C11419 * C153852 + C11420 * C11346 + (C11410 + C11409) * C11345 +
             (C11408 + C11407) * C11344) *
                C153626 * C153838) *
               C153837 +
           (((C11688 + C11687) * C11344 + (C11686 + C11685) * C11345 +
             (C11684 + C11683) * C11346 + (C12175 + C12176) * C153852) *
                C153626 * C153838 -
            ((C11350 * C1888 + C12663 + C12663 + C153671 * C1898 +
              C11348 * C1061 + C12664 + C12664 + C153851 * C1073) *
                 C153852 +
             (C12682 + C12681) * C11346 + (C12680 + C12679) * C11345 +
             (C12678 + C12677) * C11344) *
                C153626 * C153591) *
               C153563) *
              C153498)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C11348 * C136 + C11353 + C11353 + C153851 * C152 +
               C11350 * C329 + C11354 + C11354 + C153671 * C353) *
                  C153818 +
              (C11407 + C11408) * C153464) *
                 C47609 +
             ((C19416 + C19417) * C153818 + C19382 * C153464) * C47610 +
             C58674 * C153890) *
                C153838 -
            ((C58662 * C153464 + (C22992 + C22991) * C153818) * C153890 +
             (C19384 * C153464 + (C19418 + C19419) * C153818) * C47610 +
             (C19389 * C153464 + (C19417 + C19416) * C153818) * C47609) *
                C153591) *
               C153837 +
           ((((C20419 + C20420) * C153818 + C20396 * C153464) * C47609 +
             ((C21219 + C21220) * C153818 + C59645 * C153464) * C47610 +
             ((C11348 * C6306 + C21214 + C21214 + C153851 * C6318 +
               C11350 * C6305 + C21213 + C21213 + C153671 * C6317) *
                  C153818 +
              (C59655 + C59656) * C153464) *
                 C153890) *
                C153591 -
            ((C59650 * C153464 + (C21220 + C21219) * C153818) * C153890 +
             (C20406 * C153464 + (C20420 + C20419) * C153818) * C47610 +
             ((C11687 + C11688) * C153464 +
              (C11350 * C330 + C11633 + C11633 + C153671 * C354 +
               C11348 * C329 + C11634 + C11634 + C153851 * C353) *
                  C153818) *
                 C47609) *
                C153838) *
               C153563) *
              C323 +
          ((((C19382 * C153818 + C18777 * C153464) * C47609 +
             (C19390 * C153818 + C19391 * C153464) * C47610 +
             (C58663 * C153818 + (C19422 + C19423) * C153464) * C153890) *
                C153591 -
            (C58673 * C153890 + (C12372 * C153464 + C19389 * C153818) * C47610 +
             ((C11410 + C11409) * C153464 + (C11408 + C11407) * C153818) *
                 C47609) *
                C153838) *
               C153837 +
           ((((C11688 + C11687) * C153818 + (C11686 + C11685) * C153464) *
                 C47609 +
             (C20396 * C153818 + C20397 * C153464) * C47610 +
             (C59645 * C153818 + (C20423 + C20424) * C153464) * C153890) *
                C153838 -
            (((C11350 * C6301 + C21209 + C21209 + C153671 * C6313 +
               C11348 * C6302 + C21210 + C21210 + C153851 * C6314) *
                  C153464 +
              (C59656 + C59655) * C153818) *
                 C153890 +
             ((C20424 + C20423) * C153464 + C59650 * C153818) * C47610 +
             (C19714 * C153464 + C20406 * C153818) * C47609) *
                C153591) *
               C153563) *
              C153498)) /
            (p * q * std::sqrt(p + q));
    d2ee[152] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((C11348 * C136 + C11353 + C11353 + C153851 * C152 +
                C11350 * C329 + C11354 + C11354 + C153671 * C353) *
                   C11344 +
               (C11407 + C11408) * C11345 + C11417 * C11346 +
               C11418 * C153852) *
                  C153626 * C153527 * C153511 * C130 -
              (C11419 * C153852 + C11420 * C11346 + (C11410 + C11409) * C11345 +
               (C11408 + C11407) * C11344) *
                  C153626 * C153527 * C153511 * C131 +
              (C11417 * C11344 + C11418 * C11345 + (C11414 + C11413) * C11346 +
               (C11415 + C11416) * C153852) *
                  C153626 * C153527 * C153511 * C132 -
              ((C11350 * C753 + C11385 + C11385 + C153671 * C755 +
                C11348 * C142 + C11386 + C11386 + C153851 * C158) *
                   C153852 +
               (C11416 + C11415) * C11346 + C11419 * C11345 + C11420 * C11344) *
                  C153626 * C153527 * C153511 * C133) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C11348 * C136 + C11353 + C11353 + C153851 * C152 +
                 C11350 * C329 + C11354 + C11354 + C153671 * C353) *
                    C11344 +
                (C11407 + C11408) * C11345 + C11417 * C11346 +
                C11418 * C153852) *
                   C153626 * C153527 * C320 -
               ((C11683 + C11684) * C153852 + (C11685 + C11686) * C11346 +
                (C11687 + C11688) * C11345 +
                (C11350 * C330 + C11633 + C11633 + C153671 * C354 +
                 C11348 * C329 + C11634 + C11634 + C153851 * C353) *
                    C11344) *
                   C153626 * C153527 * C321 +
               ((C11348 * C330 + C11635 + C11635 + C153851 * C354 +
                 C11350 * C1319 + C11636 + C11636 + C153671 * C1329) *
                    C11344 +
                (C11689 + C11690) * C11345 + (C11691 + C11692) * C11346 +
                (C11693 + C11694) * C153852) *
                   C153626 * C153527 * C322) *
                  C323 +
              (((C11688 + C11687) * C11344 + (C11686 + C11685) * C11345 +
                (C11684 + C11683) * C11346 +
                (C11348 * C325 + C11655 + C11655 + C153851 * C349 +
                 C11350 * C334 + C11656 + C11656 + C153671 * C358) *
                    C153852) *
                   C153626 * C153527 * C321 -
               (C11419 * C153852 + C11420 * C11346 +
                (C11410 + C11409) * C11345 + (C11408 + C11407) * C11344) *
                   C153626 * C153527 * C320 -
               ((C11350 * C1315 + C11657 + C11657 + C153671 * C1325 +
                 C11348 * C334 + C11658 + C11658 + C153851 * C358) *
                    C153852 +
                (C11694 + C11693) * C11346 + (C11692 + C11691) * C11345 +
                (C11690 + C11689) * C11344) *
                   C153626 * C153527 * C322) *
                  C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C11348 * C136 + C11353 + C11353 + C153851 * C152 + C11350 * C329 +
             C11354 + C11354 + C153671 * C353) *
                C11344 +
            (C11407 + C11408) * C11345 + C11417 * C11346 + C11418 * C153852) *
               C153626 * C535 -
           ((C11957 + C11958) * C153852 + (C11959 + C11960) * C11346 +
            (C11961 + C11962) * C11345 +
            (C11350 * C1057 + C11907 + C11907 + C153671 * C1069 +
             C11348 * C542 + C11908 + C11908 + C153851 * C566) *
                C11344) *
               C153626 * C536 +
           ((C11348 * C543 + C11909 + C11909 + C153851 * C567 + C11350 * C1461 +
             C11910 + C11910 + C153671 * C1471) *
                C11344 +
            (C11963 + C11964) * C11345 + (C11965 + C11966) * C11346 +
            (C11967 + C11968) * C153852) *
               C153626 * C537) *
              C153511 * C323 +
          (((C11962 + C11961) * C11344 + (C11960 + C11959) * C11345 +
            (C11958 + C11957) * C11346 +
            (C11348 * C538 + C11929 + C11929 + C153851 * C562 + C11350 * C1061 +
             C11930 + C11930 + C153671 * C1073) *
                C153852) *
               C153626 * C536 -
           (C11419 * C153852 + C11420 * C11346 + (C11410 + C11409) * C11345 +
            (C11408 + C11407) * C11344) *
               C153626 * C535 -
           ((C11350 * C1457 + C11931 + C11931 + C153671 * C1467 +
             C11348 * C547 + C11932 + C11932 + C153851 * C571) *
                C153852 +
            (C11968 + C11967) * C11346 + (C11966 + C11965) * C11345 +
            (C11964 + C11963) * C11344) *
               C153626 * C537) *
              C153511 * C153498)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C34895 * C136 + C34904 + C34904 + C34889 * C152 + C34897 * C329 +
            C34905 + C34905 + C34890 * C353 + C34899 * C330 + C34906 + C34906 +
            C34891 * C354 + C34901 * C1319 + C34907 + C34907 +
            C153860 * C1329) *
               C153818 +
           (C34972 + C34973 + C34974 + C34975) * C153464) *
              C153626 * C153527 * C153511 * C130 -
          ((C34976 + C34977 + C34978 + C34979) * C153464 +
           (C34975 + C34974 + C34973 + C34972) * C153818) *
              C153626 * C153527 * C153511 * C131 +
          ((C34979 + C34978 + C34977 + C34976) * C153818 +
           (C34980 + C34981 + C34982 + C34983) * C153464) *
              C153626 * C153527 * C153511 * C132 -
          ((C34901 * C1315 + C34944 + C34944 + C153860 * C1325 + C34899 * C334 +
            C34945 + C34945 + C34891 * C358 + C34897 * C325 + C34946 + C34946 +
            C34890 * C349 + C34895 * C140 + C34947 + C34947 + C34889 * C156) *
               C153464 +
           (C34983 + C34982 + C34981 + C34980) * C153818) *
              C153626 * C153527 * C153511 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C34895 * C136 + C34904 + C34904 + C34889 * C152 + C34897 * C329 +
             C34905 + C34905 + C34890 * C353 + C34899 * C330 + C34906 + C34906 +
             C34891 * C354 + C34901 * C1319 + C34907 + C34907 +
             C153860 * C1329) *
                C153818 +
            (C34972 + C34973 + C34974 + C34975) * C153464) *
               C153626 * C153527 * C320 -
           ((C35234 + C35235 + C35236 + C35237) * C153464 +
            (C34901 * C3127 + C35190 + C35190 + C153860 * C3135 +
             C34899 * C1319 + C35191 + C35191 + C34891 * C1329 + C34897 * C330 +
             C35192 + C35192 + C34890 * C354 + C34895 * C329 + C35193 + C35193 +
             C34889 * C353) *
                C153818) *
               C153626 * C153527 * C321 +
           ((C34895 * C330 + C35194 + C35194 + C34889 * C354 + C34897 * C1319 +
             C35195 + C35195 + C34890 * C1329 + C34899 * C3127 + C35196 +
             C35196 + C34891 * C3135 + C34901 * C4723 + C35197 + C35197 +
             C153860 * C4729) *
                C153818 +
            (C35238 + C35239 + C35240 + C35241) * C153464) *
               C153626 * C153527 * C322) *
              C323 +
          (((C35237 + C35236 + C35235 + C35234) * C153818 +
            (C34895 * C327 + C35210 + C35210 + C34889 * C351 + C34897 * C332 +
             C35211 + C35211 + C34890 * C356 + C34899 * C1317 + C35212 +
             C35212 + C34891 * C1327 + C34901 * C3129 + C35213 + C35213 +
             C153860 * C3137) *
                C153464) *
               C153626 * C153527 * C321 -
           ((C34976 + C34977 + C34978 + C34979) * C153464 +
            (C34975 + C34974 + C34973 + C34972) * C153818) *
               C153626 * C153527 * C320 -
           ((C34901 * C4721 + C35214 + C35214 + C153860 * C4727 +
             C34899 * C3129 + C35215 + C35215 + C34891 * C3137 +
             C34897 * C1317 + C35216 + C35216 + C34890 * C1327 + C34895 * C332 +
             C35217 + C35217 + C34889 * C356) *
                C153464 +
            (C35241 + C35240 + C35239 + C35238) * C153818) *
               C153626 * C153527 * C322) *
              C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C34895 * C136 + C34904 + C34904 + C34889 * C152 + C34897 * C329 +
             C34905 + C34905 + C34890 * C353 + C34899 * C330 + C34906 + C34906 +
             C34891 * C354 + C34901 * C1319 + C34907 + C34907 +
             C153860 * C1329) *
                C153818 +
            (C34972 + C34973 + C34974 + C34975) * C153464) *
               C153626 * C535 -
           ((C35492 + C35493 + C35494 + C35495) * C153464 +
            (C34901 * C4303 + C35448 + C35448 + C153860 * C4311 +
             C34899 * C1892 + C35449 + C35449 + C34891 * C1902 +
             C34897 * C1057 + C35450 + C35450 + C34890 * C1069 + C34895 * C542 +
             C35451 + C35451 + C34889 * C566) *
                C153818) *
               C153626 * C536 +
           ((C34895 * C543 + C35452 + C35452 + C34889 * C567 + C34897 * C1461 +
             C35453 + C35453 + C34890 * C1471 + C34899 * C3441 + C35454 +
             C35454 + C34891 * C3449 + C34901 * C4959 + C35455 + C35455 +
             C153860 * C4965) *
                C153818 +
            (C35496 + C35497 + C35498 + C35499) * C153464) *
               C153626 * C537) *
              C153511 * C323 +
          (((C35495 + C35494 + C35493 + C35492) * C153818 +
            (C34895 * C540 + C35468 + C35468 + C34889 * C564 + C34897 * C1059 +
             C35469 + C35469 + C34890 * C1071 + C34899 * C1890 + C35470 +
             C35470 + C34891 * C1900 + C34901 * C4305 + C35471 + C35471 +
             C153860 * C4313) *
                C153464) *
               C153626 * C536 -
           ((C34976 + C34977 + C34978 + C34979) * C153464 +
            (C34975 + C34974 + C34973 + C34972) * C153818) *
               C153626 * C535 -
           ((C34901 * C4957 + C35472 + C35472 + C153860 * C4963 +
             C34899 * C3443 + C35473 + C35473 + C34891 * C3451 +
             C34897 * C1459 + C35474 + C35474 + C34890 * C1469 + C34895 * C545 +
             C35475 + C35475 + C34889 * C569) *
                C153464 +
            (C35499 + C35498 + C35497 + C35496) * C153818) *
               C153626 * C537) *
              C153511 * C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C11348 * C136 + C11353 + C11353 + C153851 * C152 + C11350 * C329 +
             C11354 + C11354 + C153671 * C353) *
                C153818 +
            (C11407 + C11408) * C153464) *
               C47609 +
           ((C19416 + C19417) * C153818 + C19382 * C153464) * C47610 +
           ((C19419 + C19418) * C153818 + C19390 * C153464) * C153890) *
              C153527 * C153511 * C130 -
          ((C19383 * C153464 + C19384 * C153818) * C153890 +
           (C12372 * C153464 + C19389 * C153818) * C47610 +
           ((C11410 + C11409) * C153464 + (C11408 + C11407) * C153818) *
               C47609) *
              C153527 * C153511 * C131 +
          ((C11417 * C153818 + C11418 * C153464) * C47609 +
           (C18777 * C153818 + C20005 * C153464) * C47610 +
           (C19391 * C153818 + (C11967 + C11968) * C153464) * C153890) *
              C153527 * C153511 * C132 -
          (((C11350 * C1457 + C11931 + C11931 + C153671 * C1467 +
             C11348 * C547 + C11932 + C11932 + C153851 * C571) *
                C153464 +
            (C11968 + C11967) * C153818) *
               C153890 +
           ((C12384 + C12383) * C153464 + C12371 * C153818) * C47610 +
           (C11419 * C153464 + C11420 * C153818) * C47609) *
              C153527 * C153511 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C11348 * C136 + C11353 + C11353 + C153851 * C152 + C11350 * C329 +
              C11354 + C11354 + C153671 * C353) *
                 C153818 +
             (C11407 + C11408) * C153464) *
                C47609 +
            ((C19416 + C19417) * C153818 + C19382 * C153464) * C47610 +
            ((C19419 + C19418) * C153818 + C19390 * C153464) * C153890) *
               C153527 * C320 -
           (((C20422 + C20421) * C153464 + (C21220 + C21219) * C153818) *
                C153890 +
            (C20406 * C153464 + (C20420 + C20419) * C153818) * C47610 +
            ((C11687 + C11688) * C153464 +
             (C11350 * C330 + C11633 + C11633 + C153671 * C354 + C11348 * C329 +
              C11634 + C11634 + C153851 * C353) *
                 C153818) *
                C47609) *
               C153527 * C321 +
           (((C11348 * C330 + C11635 + C11635 + C153851 * C354 +
              C11350 * C1319 + C11636 + C11636 + C153671 * C1329) *
                 C153818 +
             (C11689 + C11690) * C153464) *
                C47609 +
            ((C22201 + C22202) * C153818 + (C19084 + C19085) * C153464) *
                C47610 +
            ((C11348 * C3441 + C22196 + C22196 + C153851 * C3449 +
              C11350 * C4959 + C22195 + C22195 + C153671 * C4965) *
                 C153818 +
             (C58368 + C58369) * C153464) *
                C153890) *
               C153527 * C322) *
              C323 +
          ((((C11688 + C11687) * C153818 + (C11686 + C11685) * C153464) *
                C47609 +
            (C20396 * C153818 + C20397 * C153464) * C47610 +
            ((C20421 + C20422) * C153818 + (C20423 + C20424) * C153464) *
                C153890) *
               C153527 * C321 -
           ((C19383 * C153464 + C19384 * C153818) * C153890 +
            (C12372 * C153464 + C19389 * C153818) * C47610 +
            ((C11410 + C11409) * C153464 + (C11408 + C11407) * C153818) *
                C47609) *
               C153527 * C320 -
           (((C11350 * C4957 + C22191 + C22191 + C153671 * C4963 +
              C11348 * C3443 + C22192 + C22192 + C153851 * C3451) *
                 C153464 +
             (C58369 + C58368) * C153818) *
                C153890 +
            ((C19087 + C19086) * C153464 + (C19085 + C19084) * C153818) *
                C47610 +
            ((C11692 + C11691) * C153464 + (C11690 + C11689) * C153818) *
                C47609) *
               C153527 * C322) *
              C153498)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C11348 * C136 + C11353 + C11353 + C153851 * C152 + C11350 * C329 +
              C11354 + C11354 + C153671 * C353) *
                 C153818 +
             (C11407 + C11408) * C153464) *
                C47609 +
            ((C19416 + C19417) * C153818 + C19382 * C153464) * C47610 +
            C58674 * C153890) *
               C535 -
           ((C58662 * C153464 + (C22992 + C22991) * C153818) * C153890 +
            (C19384 * C153464 + (C19418 + C19419) * C153818) * C47610 +
            (C19389 * C153464 + (C19417 + C19416) * C153818) * C47609) *
               C536 +
           (C58674 * C47609 +
            ((C22991 + C22992) * C153818 + C58663 * C153464) * C47610 +
            ((C11348 * C7673 + C22986 + C22986 + C153851 * C7681 +
              C11350 * C9117 + C22985 + C22985 + C153671 * C9123) *
                 C153818 +
             (C58677 + C58678) * C153464) *
                C153890) *
               C537) *
              C153511 * C323 +
          (((C19382 * C153818 + C18777 * C153464) * C47609 +
            (C19390 * C153818 + C19391 * C153464) * C47610 +
            (C58663 * C153818 + (C19422 + C19423) * C153464) * C153890) *
               C536 -
           (C58673 * C153890 + (C12372 * C153464 + C19389 * C153818) * C47610 +
            ((C11410 + C11409) * C153464 + (C11408 + C11407) * C153818) *
                C47609) *
               C535 -
           (((C11350 * C9115 + C22981 + C22981 + C153671 * C9121 +
              C11348 * C7675 + C22982 + C22982 + C153851 * C7683) *
                 C153464 +
             (C58678 + C58677) * C153818) *
                C153890 +
            ((C19423 + C19422) * C153464 + C58662 * C153818) * C47610 +
            C58673 * C47609) *
               C537) *
              C153511 * C153498)) /
            (p * q * std::sqrt(p + q));
    d2ee[153] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C34895 * C136 + C34904 + C34904 + C34889 * C152 + C34897 * C329 +
             C34905 + C34905 + C34890 * C353 + C34899 * C330 + C34906 + C34906 +
             C34891 * C354 + C34901 * C1319 + C34907 + C34907 +
             C153860 * C1329) *
                C153818 +
            (C34972 + C34973 + C34974 + C34975) * C153464) *
               C153626 * C153838 -
           ((C35492 + C35493 + C35494 + C35495) * C153464 +
            (C34901 * C4303 + C35448 + C35448 + C153860 * C4311 +
             C34899 * C1892 + C35449 + C35449 + C34891 * C1902 +
             C34897 * C1057 + C35450 + C35450 + C34890 * C1069 + C34895 * C542 +
             C35451 + C35451 + C34889 * C566) *
                C153818) *
               C153626 * C153591) *
              C153511 * C153906 +
          (((C35495 + C35494 + C35493 + C35492) * C153818 +
            (C35932 + C35933 + C35934 + C35935) * C153464) *
               C153626 * C153591 -
           ((C34976 + C34977 + C34978 + C34979) * C153464 +
            (C34975 + C34974 + C34973 + C34972) * C153818) *
               C153626 * C153838) *
              C153511 * C153907 +
          (((C34979 + C34978 + C34977 + C34976) * C153818 +
            (C34980 + C34981 + C34982 + C34983) * C153464) *
               C153626 * C153838 -
           ((C34901 * C4306 + C35920 + C35920 + C153860 * C4314 +
             C34899 * C1889 + C35921 + C35921 + C34891 * C1899 +
             C34897 * C1060 + C35922 + C35922 + C34890 * C1072 + C34895 * C539 +
             C35923 + C35923 + C34889 * C563) *
                C153464 +
            (C35935 + C35934 + C35933 + C35932) * C153818) *
               C153626 * C153591) *
              C153511 * C752)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C11348 * C136 + C11353 + C11353 + C153851 * C152 + C11350 * C329 +
             C11354 + C11354 + C153671 * C353) *
                C11344 +
            (C11407 + C11408) * C11345 + C11417 * C11346 + C11418 * C153852) *
               C153626 * C153838 -
           (C12371 * C153852 + C12372 * C11346 + (C11961 + C11962) * C11345 +
            (C11350 * C1057 + C11907 + C11907 + C153671 * C1069 +
             C11348 * C542 + C11908 + C11908 + C153851 * C566) *
                C11344) *
               C153626 * C153591) *
              C153511 * C153906 +
          (((C11962 + C11961) * C11344 + (C11960 + C11959) * C11345 +
            (C11958 + C11957) * C11346 + (C12383 + C12384) * C153852) *
               C153626 * C153591 -
           (C11419 * C153852 + C11420 * C11346 + (C11410 + C11409) * C11345 +
            (C11408 + C11407) * C11344) *
               C153626 * C153838) *
              C153511 * C153907 +
          ((C11417 * C11344 + C11418 * C11345 + (C11414 + C11413) * C11346 +
            (C11415 + C11416) * C153852) *
               C153626 * C153838 -
           ((C11350 * C1062 + C12377 + C12377 + C153671 * C1074 +
             C11348 * C548 + C12378 + C12378 + C153851 * C572) *
                C153852 +
            (C12384 + C12383) * C11346 + C12371 * C11345 + C12372 * C11344) *
               C153626 * C153591) *
              C153511 * C752)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C11348 * C136 + C11353 + C11353 + C153851 * C152 + C11350 * C329 +
              C11354 + C11354 + C153671 * C353) *
                 C153818 +
             (C11407 + C11408) * C153464) *
                C47609 +
            ((C19416 + C19417) * C153818 + C19382 * C153464) * C47610 +
            C58674 * C153890) *
               C153838 -
           ((C58662 * C153464 + (C22992 + C22991) * C153818) * C153890 +
            (C19384 * C153464 + (C19418 + C19419) * C153818) * C47610 +
            (C19389 * C153464 + (C19417 + C19416) * C153818) * C47609) *
               C153591) *
              C153511 * C153906 +
          (((C19382 * C153818 + C18777 * C153464) * C47609 +
            (C19390 * C153818 + C19391 * C153464) * C47610 +
            (C58663 * C153818 + (C19422 + C19423) * C153464) * C153890) *
               C153591 -
           (C58673 * C153890 + (C12372 * C153464 + C19389 * C153818) * C47610 +
            ((C11410 + C11409) * C153464 + (C11408 + C11407) * C153818) *
                C47609) *
               C153838) *
              C153511 * C153907 +
          (((C11417 * C153818 + C11418 * C153464) * C47609 +
            (C18777 * C153818 + C20005 * C153464) * C47610 +
            (C19391 * C153818 + (C11967 + C11968) * C153464) * C153890) *
               C153838 -
           (((C11350 * C8488 + C14389 + C14389 + C153671 * C8490 +
              C11348 * C2241 + C14390 + C14390 + C153851 * C2251) *
                 C153464 +
             (C19423 + C19422) * C153818) *
                C153890 +
            ((C11968 + C11967) * C153464 + C19383 * C153818) * C47610 +
            (C12371 * C153464 + C12372 * C153818) * C47609) *
               C153591) *
              C153511 * C752)) /
            (p * q * std::sqrt(p + q));
    d2ee[154] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C11348 * C136 + C11353 + C11353 + C153851 * C152 + C11350 * C329 +
             C11354 + C11354 + C153671 * C353) *
                C11344 +
            (C11407 + C11408) * C11345 + C11417 * C11346 + C11418 * C153852) *
               C153626 * C153527 * C320 -
           ((C11683 + C11684) * C153852 + (C11685 + C11686) * C11346 +
            (C11687 + C11688) * C11345 +
            (C11350 * C330 + C11633 + C11633 + C153671 * C354 + C11348 * C329 +
             C11634 + C11634 + C153851 * C353) *
                C11344) *
               C153626 * C153527 * C321 +
           ((C11348 * C330 + C11635 + C11635 + C153851 * C354 + C11350 * C1319 +
             C11636 + C11636 + C153671 * C1329) *
                C11344 +
            (C11689 + C11690) * C11345 + (C11691 + C11692) * C11346 +
            (C11693 + C11694) * C153852) *
               C153626 * C153527 * C322) *
              C323 +
          (((C11688 + C11687) * C11344 + (C11686 + C11685) * C11345 +
            (C11684 + C11683) * C11346 +
            (C11348 * C325 + C11655 + C11655 + C153851 * C349 + C11350 * C334 +
             C11656 + C11656 + C153671 * C358) *
                C153852) *
               C153626 * C153527 * C321 -
           (C11419 * C153852 + C11420 * C11346 + (C11410 + C11409) * C11345 +
            (C11408 + C11407) * C11344) *
               C153626 * C153527 * C320 -
           ((C11350 * C1315 + C11657 + C11657 + C153671 * C1325 +
             C11348 * C334 + C11658 + C11658 + C153851 * C358) *
                C153852 +
            (C11694 + C11693) * C11346 + (C11692 + C11691) * C11345 +
            (C11690 + C11689) * C11344) *
               C153626 * C153527 * C322) *
              C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C11348 * C136 + C11353 + C11353 + C153851 * C152 + C11350 * C329 +
            C11354 + C11354 + C153671 * C353) *
               C11344 +
           (C11407 + C11408) * C11345 + C11417 * C11346 + C11418 * C153852) *
              C153626 * C153527 * C153511 * C130 -
          (C11419 * C153852 + C11420 * C11346 + (C11410 + C11409) * C11345 +
           (C11408 + C11407) * C11344) *
              C153626 * C153527 * C153511 * C131 +
          (C11417 * C11344 + C11418 * C11345 + (C11414 + C11413) * C11346 +
           (C11415 + C11416) * C153852) *
              C153626 * C153527 * C153511 * C132 -
          ((C11350 * C753 + C11385 + C11385 + C153671 * C755 + C11348 * C142 +
            C11386 + C11386 + C153851 * C158) *
               C153852 +
           (C11416 + C11415) * C11346 + C11419 * C11345 + C11420 * C11344) *
              C153626 * C153527 * C153511 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C34895 * C136 + C34904 + C34904 + C34889 * C152 + C34897 * C329 +
            C34905 + C34905 + C34890 * C353 + C34899 * C330 + C34906 + C34906 +
            C34891 * C354 + C34901 * C1319 + C34907 + C34907 +
            C153860 * C1329) *
               C153818 +
           (C34972 + C34973 + C34974 + C34975) * C153464) *
              C153626 * C153527 * C153511 * C130 -
          ((C34976 + C34977 + C34978 + C34979) * C153464 +
           (C34975 + C34974 + C34973 + C34972) * C153818) *
              C153626 * C153527 * C153511 * C131 +
          ((C34979 + C34978 + C34977 + C34976) * C153818 +
           (C34980 + C34981 + C34982 + C34983) * C153464) *
              C153626 * C153527 * C153511 * C132 -
          ((C34901 * C1315 + C34944 + C34944 + C153860 * C1325 + C34899 * C334 +
            C34945 + C34945 + C34891 * C358 + C34897 * C325 + C34946 + C34946 +
            C34890 * C349 + C34895 * C140 + C34947 + C34947 + C34889 * C156) *
               C153464 +
           (C34983 + C34982 + C34981 + C34980) * C153818) *
              C153626 * C153527 * C153511 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C34895 * C136 + C34904 + C34904 + C34889 * C152 + C34897 * C329 +
             C34905 + C34905 + C34890 * C353 + C34899 * C330 + C34906 + C34906 +
             C34891 * C354 + C34901 * C1319 + C34907 + C34907 +
             C153860 * C1329) *
                C153818 +
            (C34972 + C34973 + C34974 + C34975) * C153464) *
               C153626 * C153527 * C320 -
           ((C35234 + C35235 + C35236 + C35237) * C153464 +
            (C34901 * C3127 + C35190 + C35190 + C153860 * C3135 +
             C34899 * C1319 + C35191 + C35191 + C34891 * C1329 + C34897 * C330 +
             C35192 + C35192 + C34890 * C354 + C34895 * C329 + C35193 + C35193 +
             C34889 * C353) *
                C153818) *
               C153626 * C153527 * C321 +
           ((C34895 * C330 + C35194 + C35194 + C34889 * C354 + C34897 * C1319 +
             C35195 + C35195 + C34890 * C1329 + C34899 * C3127 + C35196 +
             C35196 + C34891 * C3135 + C34901 * C4723 + C35197 + C35197 +
             C153860 * C4729) *
                C153818 +
            (C35238 + C35239 + C35240 + C35241) * C153464) *
               C153626 * C153527 * C322) *
              C323 +
          (((C35237 + C35236 + C35235 + C35234) * C153818 +
            (C34895 * C327 + C35210 + C35210 + C34889 * C351 + C34897 * C332 +
             C35211 + C35211 + C34890 * C356 + C34899 * C1317 + C35212 +
             C35212 + C34891 * C1327 + C34901 * C3129 + C35213 + C35213 +
             C153860 * C3137) *
                C153464) *
               C153626 * C153527 * C321 -
           ((C34976 + C34977 + C34978 + C34979) * C153464 +
            (C34975 + C34974 + C34973 + C34972) * C153818) *
               C153626 * C153527 * C320 -
           ((C34901 * C4721 + C35214 + C35214 + C153860 * C4727 +
             C34899 * C3129 + C35215 + C35215 + C34891 * C3137 +
             C34897 * C1317 + C35216 + C35216 + C34890 * C1327 + C34895 * C332 +
             C35217 + C35217 + C34889 * C356) *
                C153464 +
            (C35241 + C35240 + C35239 + C35238) * C153818) *
               C153626 * C153527 * C322) *
              C153498)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C11348 * C136 + C11353 + C11353 + C153851 * C152 + C11350 * C329 +
             C11354 + C11354 + C153671 * C353) *
                C153818 +
            (C11407 + C11408) * C153464) *
               C47609 +
           ((C19416 + C19417) * C153818 + C19382 * C153464) * C47610 +
           ((C19419 + C19418) * C153818 + C19390 * C153464) * C153890) *
              C153527 * C153511 * C130 -
          ((C19383 * C153464 + C19384 * C153818) * C153890 +
           (C12372 * C153464 + C19389 * C153818) * C47610 +
           ((C11410 + C11409) * C153464 + (C11408 + C11407) * C153818) *
               C47609) *
              C153527 * C153511 * C131 +
          ((C11417 * C153818 + C11418 * C153464) * C47609 +
           (C18777 * C153818 + C20005 * C153464) * C47610 +
           (C19391 * C153818 + (C11967 + C11968) * C153464) * C153890) *
              C153527 * C153511 * C132 -
          (((C11350 * C1457 + C11931 + C11931 + C153671 * C1467 +
             C11348 * C547 + C11932 + C11932 + C153851 * C571) *
                C153464 +
            (C11968 + C11967) * C153818) *
               C153890 +
           ((C12384 + C12383) * C153464 + C12371 * C153818) * C47610 +
           (C11419 * C153464 + C11420 * C153818) * C47609) *
              C153527 * C153511 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C11348 * C136 + C11353 + C11353 + C153851 * C152 + C11350 * C329 +
              C11354 + C11354 + C153671 * C353) *
                 C153818 +
             (C11407 + C11408) * C153464) *
                C47609 +
            ((C19416 + C19417) * C153818 + C19382 * C153464) * C47610 +
            ((C19419 + C19418) * C153818 + C19390 * C153464) * C153890) *
               C153527 * C320 -
           (((C20422 + C20421) * C153464 + (C21220 + C21219) * C153818) *
                C153890 +
            (C20406 * C153464 + (C20420 + C20419) * C153818) * C47610 +
            ((C11687 + C11688) * C153464 +
             (C11350 * C330 + C11633 + C11633 + C153671 * C354 + C11348 * C329 +
              C11634 + C11634 + C153851 * C353) *
                 C153818) *
                C47609) *
               C153527 * C321 +
           (((C11348 * C330 + C11635 + C11635 + C153851 * C354 +
              C11350 * C1319 + C11636 + C11636 + C153671 * C1329) *
                 C153818 +
             (C11689 + C11690) * C153464) *
                C47609 +
            ((C22201 + C22202) * C153818 + (C19084 + C19085) * C153464) *
                C47610 +
            ((C11348 * C3441 + C22196 + C22196 + C153851 * C3449 +
              C11350 * C4959 + C22195 + C22195 + C153671 * C4965) *
                 C153818 +
             (C58368 + C58369) * C153464) *
                C153890) *
               C153527 * C322) *
              C323 +
          ((((C11688 + C11687) * C153818 + (C11686 + C11685) * C153464) *
                C47609 +
            (C20396 * C153818 + C20397 * C153464) * C47610 +
            ((C20421 + C20422) * C153818 + (C20423 + C20424) * C153464) *
                C153890) *
               C153527 * C321 -
           ((C19383 * C153464 + C19384 * C153818) * C153890 +
            (C12372 * C153464 + C19389 * C153818) * C47610 +
            ((C11410 + C11409) * C153464 + (C11408 + C11407) * C153818) *
                C47609) *
               C153527 * C320 -
           (((C11350 * C4957 + C22191 + C22191 + C153671 * C4963 +
              C11348 * C3443 + C22192 + C22192 + C153851 * C3451) *
                 C153464 +
             (C58369 + C58368) * C153818) *
                C153890 +
            ((C19087 + C19086) * C153464 + (C19085 + C19084) * C153818) *
                C47610 +
            ((C11692 + C11691) * C153464 + (C11690 + C11689) * C153818) *
                C47609) *
               C153527 * C322) *
              C153498)) /
            (p * q * std::sqrt(p + q));
    d2ee[155] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C34895 * C136 + C34904 + C34904 + C34889 * C152 + C34897 * C329 +
             C34905 + C34905 + C34890 * C353 + C34899 * C330 + C34906 + C34906 +
             C34891 * C354 + C34901 * C1319 + C34907 + C34907 +
             C153860 * C1329) *
                C153818 +
            (C34972 + C34973 + C34974 + C34975) * C153464) *
               C153626 * C153527 * C153908 -
           ((C35234 + C35235 + C35236 + C35237) * C153464 +
            (C34901 * C3127 + C35190 + C35190 + C153860 * C3135 +
             C34899 * C1319 + C35191 + C35191 + C34891 * C1329 + C34897 * C330 +
             C35192 + C35192 + C34890 * C354 + C34895 * C329 + C35193 + C35193 +
             C34889 * C353) *
                C153818) *
               C153626 * C153527 * C153909 +
           ((C34895 * C330 + C35194 + C35194 + C34889 * C354 + C34897 * C1319 +
             C35195 + C35195 + C34890 * C1329 + C34899 * C3127 + C35196 +
             C35196 + C34891 * C3135 + C34901 * C4723 + C35197 + C35197 +
             C153860 * C4729) *
                C153818 +
            (C35238 + C35239 + C35240 + C35241) * C153464) *
               C153626 * C153527 * C1601) *
              C153829 +
          (((C35237 + C35236 + C35235 + C35234) * C153818 +
            (C35714 + C35715 + C35716 + C35717) * C153464) *
               C153626 * C153527 * C153909 -
           ((C34976 + C34977 + C34978 + C34979) * C153464 +
            (C34975 + C34974 + C34973 + C34972) * C153818) *
               C153626 * C153527 * C153908 -
           ((C34901 * C4721 + C35214 + C35214 + C153860 * C4727 +
             C34899 * C3129 + C35215 + C35215 + C34891 * C3137 +
             C34897 * C1317 + C35216 + C35216 + C34890 * C1327 + C34895 * C332 +
             C35217 + C35217 + C34889 * C356) *
                C153464 +
            (C35241 + C35240 + C35239 + C35238) * C153818) *
               C153626 * C153527 * C1601) *
              C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C11348 * C136 + C11353 + C11353 + C153851 * C152 + C11350 * C329 +
             C11354 + C11354 + C153671 * C353) *
                C11344 +
            (C11407 + C11408) * C11345 + C11417 * C11346 + C11418 * C153852) *
               C153626 * C153527 * C153908 -
           (C12163 * C153852 + C12164 * C11346 + (C11687 + C11688) * C11345 +
            (C11350 * C330 + C11633 + C11633 + C153671 * C354 + C11348 * C329 +
             C11634 + C11634 + C153851 * C353) *
                C11344) *
               C153626 * C153527 * C153909 +
           ((C11348 * C330 + C11635 + C11635 + C153851 * C354 + C11350 * C1319 +
             C11636 + C11636 + C153671 * C1329) *
                C11344 +
            (C11689 + C11690) * C11345 + (C11691 + C11692) * C11346 +
            (C11693 + C11694) * C153852) *
               C153626 * C153527 * C1601) *
              C153829 +
          (((C11688 + C11687) * C11344 + (C11686 + C11685) * C11345 +
            (C11684 + C11683) * C11346 + (C12175 + C12176) * C153852) *
               C153626 * C153527 * C153909 -
           (C11419 * C153852 + C11420 * C11346 + (C11410 + C11409) * C11345 +
            (C11408 + C11407) * C11344) *
               C153626 * C153527 * C153908 -
           ((C11350 * C1315 + C11657 + C11657 + C153671 * C1325 +
             C11348 * C334 + C11658 + C11658 + C153851 * C358) *
                C153852 +
            (C11694 + C11693) * C11346 + (C11692 + C11691) * C11345 +
            (C11690 + C11689) * C11344) *
               C153626 * C153527 * C1601) *
              C153498)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C11348 * C136 + C11353 + C11353 + C153851 * C152 + C11350 * C329 +
              C11354 + C11354 + C153671 * C353) *
                 C153818 +
             (C11407 + C11408) * C153464) *
                C47609 +
            ((C19416 + C19417) * C153818 + C19382 * C153464) * C47610 +
            C58674 * C153890) *
               C153527 * C153908 -
           (C60450 * C153890 +
            (C20406 * C153464 + (C20420 + C20419) * C153818) * C47610 +
            ((C11687 + C11688) * C153464 +
             (C11350 * C330 + C11633 + C11633 + C153671 * C354 + C11348 * C329 +
              C11634 + C11634 + C153851 * C353) *
                 C153818) *
                C47609) *
               C153527 * C153909 +
           (((C11348 * C330 + C11635 + C11635 + C153851 * C354 +
              C11350 * C1319 + C11636 + C11636 + C153671 * C1329) *
                 C153818 +
             (C11689 + C11690) * C153464) *
                C47609 +
            ((C22201 + C22202) * C153818 + (C19084 + C19085) * C153464) *
                C47610 +
            ((C11348 * C3441 + C22196 + C22196 + C153851 * C3449 +
              C11350 * C4959 + C22195 + C22195 + C153671 * C4965) *
                 C153818 +
             (C58368 + C58369) * C153464) *
                C153890) *
               C153527 * C1601) *
              C153829 +
          ((((C11688 + C11687) * C153818 + (C11686 + C11685) * C153464) *
                C47609 +
            (C20396 * C153818 + C20397 * C153464) * C47610 +
            (C59645 * C153818 + (C20423 + C20424) * C153464) * C153890) *
               C153527 * C153909 -
           (C58673 * C153890 + (C12372 * C153464 + C19389 * C153818) * C47610 +
            ((C11410 + C11409) * C153464 + (C11408 + C11407) * C153818) *
                C47609) *
               C153527 * C153908 -
           (((C11350 * C4957 + C22191 + C22191 + C153671 * C4963 +
              C11348 * C3443 + C22192 + C22192 + C153851 * C3451) *
                 C153464 +
             (C58369 + C58368) * C153818) *
                C153890 +
            ((C19087 + C19086) * C153464 + (C19085 + C19084) * C153818) *
                C47610 +
            ((C11692 + C11691) * C153464 + (C11690 + C11689) * C153818) *
                C47609) *
               C153527 * C1601) *
              C153498)) /
            (p * q * std::sqrt(p + q));
    d2ee[156] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C34895 * C136 + C34904 + C34904 + C34889 * C152 + C34897 * C329 +
             C34905 + C34905 + C34890 * C353 + C34899 * C330 + C34906 + C34906 +
             C34891 * C354 + C34901 * C1319 + C34907 + C34907 +
             C153860 * C1329) *
                C153818 +
            (C34972 + C34973 + C34974 + C34975) * C153464) *
               C153626 * C153838 -
           ((C35492 + C35493 + C35494 + C35495) * C153464 +
            (C34901 * C4303 + C35448 + C35448 + C153860 * C4311 +
             C34899 * C1892 + C35449 + C35449 + C34891 * C1902 +
             C34897 * C1057 + C35450 + C35450 + C34890 * C1069 + C34895 * C542 +
             C35451 + C35451 + C34889 * C566) *
                C153818) *
               C153626 * C153591) *
              C153908 +
          (((C34895 * C1057 + C36194 + C36194 + C34889 * C1069 +
             C34897 * C1892 + C36195 + C36195 + C34890 * C1902 +
             C34899 * C4303 + C36196 + C36196 + C34891 * C4311 +
             C34901 * C5703 + C36197 + C36197 + C153860 * C5709) *
                C153818 +
            (C36222 + C36223 + C36224 + C36225) * C153464) *
               C153626 * C153591 -
           ((C35234 + C35235 + C35236 + C35237) * C153464 +
            (C34901 * C3127 + C35190 + C35190 + C153860 * C3135 +
             C34899 * C1319 + C35191 + C35191 + C34891 * C1329 + C34897 * C330 +
             C35192 + C35192 + C34890 * C354 + C34895 * C329 + C35193 + C35193 +
             C34889 * C353) *
                C153818) *
               C153626 * C153838) *
              C153909 +
          (((C34895 * C330 + C35194 + C35194 + C34889 * C354 + C34897 * C1319 +
             C35195 + C35195 + C34890 * C1329 + C34899 * C3127 + C35196 +
             C35196 + C34891 * C3135 + C34901 * C4723 + C35197 + C35197 +
             C153860 * C4729) *
                C153818 +
            (C35238 + C35239 + C35240 + C35241) * C153464) *
               C153626 * C153838 -
           ((C34901 * C29093 + C37406 + C37406 + C153860 * C29097 +
             C34899 * C5702 + C37407 + C37407 + C34891 * C5708 +
             C34897 * C4304 + C37408 + C37408 + C34890 * C4312 +
             C34895 * C1891 + C37409 + C37409 + C34889 * C1901) *
                C153464 +
            (C34901 * C29092 + C37410 + C37410 + C153860 * C29096 +
             C34899 * C5703 + C37411 + C37411 + C34891 * C5709 +
             C34897 * C4303 + C37412 + C37412 + C34890 * C4311 +
             C34895 * C1892 + C37413 + C37413 + C34889 * C1902) *
                C153818) *
               C153626 * C153591) *
              C1601) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C11348 * C136 + C11353 + C11353 + C153851 * C152 + C11350 * C329 +
             C11354 + C11354 + C153671 * C353) *
                C11344 +
            (C11407 + C11408) * C11345 + C11417 * C11346 + C11418 * C153852) *
               C153626 * C153838 -
           (C12371 * C153852 + C12372 * C11346 + (C11961 + C11962) * C11345 +
            (C11350 * C1057 + C11907 + C11907 + C153671 * C1069 +
             C11348 * C542 + C11908 + C11908 + C153851 * C566) *
                C11344) *
               C153626 * C153591) *
              C153908 +
          (((C11348 * C1057 + C12643 + C12643 + C153851 * C1069 +
             C11350 * C1892 + C12644 + C12644 + C153671 * C1902) *
                C11344 +
            (C12677 + C12678) * C11345 + (C12679 + C12680) * C11346 +
            (C12681 + C12682) * C153852) *
               C153626 * C153591 -
           (C12163 * C153852 + C12164 * C11346 + (C11687 + C11688) * C11345 +
            (C11350 * C330 + C11633 + C11633 + C153671 * C354 + C11348 * C329 +
             C11634 + C11634 + C153851 * C353) *
                C11344) *
               C153626 * C153838) *
              C153909 +
          (((C11348 * C330 + C11635 + C11635 + C153851 * C354 + C11350 * C1319 +
             C11636 + C11636 + C153671 * C1329) *
                C11344 +
            (C11689 + C11690) * C11345 + (C11691 + C11692) * C11346 +
            (C11693 + C11694) * C153852) *
               C153626 * C153838 -
           ((C11350 * C4306 + C13863 + C13863 + C153671 * C4314 +
             C11348 * C1889 + C13864 + C13864 + C153851 * C1899) *
                C153852 +
            (C11350 * C4305 + C13865 + C13865 + C153671 * C4313 +
             C11348 * C1890 + C13866 + C13866 + C153851 * C1900) *
                C11346 +
            (C11350 * C4304 + C13867 + C13867 + C153671 * C4312 +
             C11348 * C1891 + C13868 + C13868 + C153851 * C1901) *
                C11345 +
            (C11350 * C4303 + C13869 + C13869 + C153671 * C4311 +
             C11348 * C1892 + C13870 + C13870 + C153851 * C1902) *
                C11344) *
               C153626 * C153591) *
              C1601) *
         C153492) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C11348 * C136 + C11353 + C11353 + C153851 * C152 + C11350 * C329 +
              C11354 + C11354 + C153671 * C353) *
                 C153818 +
             (C11407 + C11408) * C153464) *
                C47609 +
            ((C19416 + C19417) * C153818 + C19382 * C153464) * C47610 +
            C58674 * C153890) *
               C153838 -
           ((C58662 * C153464 + (C22992 + C22991) * C153818) * C153890 +
            (C19384 * C153464 + (C19418 + C19419) * C153818) * C47610 +
            (C19389 * C153464 + (C19417 + C19416) * C153818) * C47609) *
               C153591) *
              C153908 +
          ((((C20419 + C20420) * C153818 + C20396 * C153464) * C47609 +
            ((C21219 + C21220) * C153818 + C59645 * C153464) * C47610 +
            ((C60451 + C60452) * C153818 + (C59655 + C59656) * C153464) *
                C153890) *
               C153591 -
           (C60450 * C153890 +
            (C20406 * C153464 + (C20420 + C20419) * C153818) * C47610 +
            ((C11687 + C11688) * C153464 +
             (C11350 * C330 + C11633 + C11633 + C153671 * C354 + C11348 * C329 +
              C11634 + C11634 + C153851 * C353) *
                 C153818) *
                C47609) *
               C153838) *
              C153909 +
          ((((C11348 * C330 + C11635 + C11635 + C153851 * C354 +
              C11350 * C1319 + C11636 + C11636 + C153671 * C1329) *
                 C153818 +
             (C11689 + C11690) * C153464) *
                C47609 +
            ((C22201 + C22202) * C153818 + (C19084 + C19085) * C153464) *
                C47610 +
            ((C61431 + C61432) * C153818 + (C58368 + C58369) * C153464) *
                C153890) *
               C153838 -
           (((C11350 * C31999 + C61423 + C61423 + C153671 * C32001 +
              C11348 * C6303 + C61424 + C61424 + C153851 * C6315) *
                 C153464 +
             (C11350 * C30191 + C61425 + C61425 + C153671 * C30195 +
              C11348 * C6305 + C61426 + C61426 + C153851 * C6317) *
                 C153818) *
                C153890 +
            ((C58369 + C58368) * C153464 + (C61432 + C61431) * C153818) *
                C47610 +
            ((C19085 + C19084) * C153464 + (C22202 + C22201) * C153818) *
                C47609) *
               C153591) *
              C1601) *
         C153492) /
            (p * q * std::sqrt(p + q));
    d2ee[157] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C11348 * C136 + C11353 + C11353 + C153851 * C152 +
                 C11350 * C329 + C11354 + C11354 + C153671 * C353) *
                    C11344 +
                (C11407 + C11408) * C11345 + C11417 * C11346 +
                C11418 * C153852) *
                   C153626 * C153527 * C1223 -
               (C12163 * C153852 + C12164 * C11346 +
                (C11687 + C11688) * C11345 +
                (C11350 * C330 + C11633 + C11633 + C153671 * C354 +
                 C11348 * C329 + C11634 + C11634 + C153851 * C353) *
                    C11344) *
                   C153626 * C153527 * C153563) *
                  C1225 +
              (((C11688 + C11687) * C11344 + (C11686 + C11685) * C11345 +
                (C11684 + C11683) * C11346 + (C12175 + C12176) * C153852) *
                   C153626 * C153527 * C153563 -
               (C11419 * C153852 + C11420 * C11346 +
                (C11410 + C11409) * C11345 + (C11408 + C11407) * C11344) *
                   C153626 * C153527 * C1223) *
                  C1226 +
              ((C11417 * C11344 + C11418 * C11345 + (C11414 + C11413) * C11346 +
                (C11415 + C11416) * C153852) *
                   C153626 * C153527 * C1223 -
               ((C11350 * C336 + C12169 + C12169 + C153671 * C360 +
                 C11348 * C335 + C12170 + C12170 + C153851 * C359) *
                    C153852 +
                (C12176 + C12175) * C11346 + C12163 * C11345 +
                C12164 * C11344) *
                   C153626 * C153527 * C153563) *
                  C1227) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((C11348 * C136 + C11353 + C11353 + C153851 * C152 +
                C11350 * C329 + C11354 + C11354 + C153671 * C353) *
                   C11344 +
               (C11407 + C11408) * C11345 + C11417 * C11346 +
               C11418 * C153852) *
                  C153626 * C153527 * C1310 -
              (C12163 * C153852 + C12164 * C11346 + (C11687 + C11688) * C11345 +
               (C11350 * C330 + C11633 + C11633 + C153671 * C354 +
                C11348 * C329 + C11634 + C11634 + C153851 * C353) *
                   C11344) *
                  C153626 * C153527 * C1311 +
              ((C11348 * C330 + C11635 + C11635 + C153851 * C354 +
                C11350 * C1319 + C11636 + C11636 + C153671 * C1329) *
                   C11344 +
               (C11689 + C11690) * C11345 + (C11691 + C11692) * C11346 +
               (C11693 + C11694) * C153852) *
                  C153626 * C153527 * C1312 -
              ((C11350 * C3130 + C13007 + C13007 + C153671 * C3138 +
                C11348 * C1316 + C13008 + C13008 + C153851 * C1326) *
                   C153852 +
               (C11350 * C3129 + C13009 + C13009 + C153671 * C3137 +
                C11348 * C1317 + C13010 + C13010 + C153851 * C1327) *
                   C11346 +
               (C11350 * C3128 + C13011 + C13011 + C153671 * C3136 +
                C11348 * C1318 + C13012 + C13012 + C153851 * C1328) *
                   C11345 +
               (C11350 * C3127 + C13013 + C13013 + C153671 * C3135 +
                C11348 * C1319 + C13014 + C13014 + C153851 * C1329) *
                   C11344) *
                  C153626 * C153527 * C1313) *
             C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C11348 * C136 + C11353 + C11353 + C153851 * C152 + C11350 * C329 +
             C11354 + C11354 + C153671 * C353) *
                C11344 +
            (C11407 + C11408) * C11345 + C11417 * C11346 + C11418 * C153852) *
               C153626 * C535 -
           (C12371 * C153852 + C12372 * C11346 + (C11961 + C11962) * C11345 +
            (C11350 * C1057 + C11907 + C11907 + C153671 * C1069 +
             C11348 * C542 + C11908 + C11908 + C153851 * C566) *
                C11344) *
               C153626 * C536 +
           ((C11348 * C543 + C11909 + C11909 + C153851 * C567 + C11350 * C1461 +
             C11910 + C11910 + C153671 * C1471) *
                C11344 +
            (C11963 + C11964) * C11345 + (C11965 + C11966) * C11346 +
            (C11967 + C11968) * C153852) *
               C153626 * C537) *
              C1223 +
          (((C11348 * C1057 + C12643 + C12643 + C153851 * C1069 +
             C11350 * C1892 + C12644 + C12644 + C153671 * C1902) *
                C11344 +
            (C12677 + C12678) * C11345 + (C12679 + C12680) * C11346 +
            (C12681 + C12682) * C153852) *
               C153626 * C536 -
           (C12163 * C153852 + C12164 * C11346 + (C11687 + C11688) * C11345 +
            (C11350 * C330 + C11633 + C11633 + C153671 * C354 + C11348 * C329 +
             C11634 + C11634 + C153851 * C353) *
                C11344) *
               C153626 * C535 -
           ((C11350 * C3444 + C13209 + C13209 + C153671 * C3452 +
             C11348 * C1458 + C13210 + C13210 + C153851 * C1468) *
                C153852 +
            (C11350 * C3443 + C13211 + C13211 + C153671 * C3451 +
             C11348 * C1459 + C13212 + C13212 + C153851 * C1469) *
                C11346 +
            (C11350 * C3442 + C13213 + C13213 + C153671 * C3450 +
             C11348 * C1460 + C13214 + C13214 + C153851 * C1470) *
                C11345 +
            (C11350 * C3441 + C13215 + C13215 + C153671 * C3449 +
             C11348 * C1461 + C13216 + C13216 + C153851 * C1471) *
                C11344) *
               C153626 * C537) *
              C153563) *
         C153492) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C34895 * C136 + C34904 + C34904 + C34889 * C152 + C34897 * C329 +
             C34905 + C34905 + C34890 * C353 + C34899 * C330 + C34906 + C34906 +
             C34891 * C354 + C34901 * C1319 + C34907 + C34907 +
             C153860 * C1329) *
                C153818 +
            (C34972 + C34973 + C34974 + C34975) * C153464) *
               C153626 * C153527 * C1223 -
           ((C35234 + C35235 + C35236 + C35237) * C153464 +
            (C34901 * C3127 + C35190 + C35190 + C153860 * C3135 +
             C34899 * C1319 + C35191 + C35191 + C34891 * C1329 + C34897 * C330 +
             C35192 + C35192 + C34890 * C354 + C34895 * C329 + C35193 + C35193 +
             C34889 * C353) *
                C153818) *
               C153626 * C153527 * C153563) *
              C1225 +
          (((C35237 + C35236 + C35235 + C35234) * C153818 +
            (C35714 + C35715 + C35716 + C35717) * C153464) *
               C153626 * C153527 * C153563 -
           ((C34976 + C34977 + C34978 + C34979) * C153464 +
            (C34975 + C34974 + C34973 + C34972) * C153818) *
               C153626 * C153527 * C1223) *
              C1226 +
          (((C34979 + C34978 + C34977 + C34976) * C153818 +
            (C34980 + C34981 + C34982 + C34983) * C153464) *
               C153626 * C153527 * C1223 -
           ((C34901 * C3130 + C35702 + C35702 + C153860 * C3138 +
             C34899 * C1316 + C35703 + C35703 + C34891 * C1326 + C34897 * C333 +
             C35704 + C35704 + C34890 * C357 + C34895 * C326 + C35705 + C35705 +
             C34889 * C350) *
                C153464 +
            (C35717 + C35716 + C35715 + C35714) * C153818) *
               C153626 * C153527 * C153563) *
              C1227)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C34895 * C136 + C34904 + C34904 + C34889 * C152 + C34897 * C329 +
            C34905 + C34905 + C34890 * C353 + C34899 * C330 + C34906 + C34906 +
            C34891 * C354 + C34901 * C1319 + C34907 + C34907 +
            C153860 * C1329) *
               C153818 +
           (C34972 + C34973 + C34974 + C34975) * C153464) *
              C153626 * C153527 * C1310 -
          ((C35234 + C35235 + C35236 + C35237) * C153464 +
           (C34901 * C3127 + C35190 + C35190 + C153860 * C3135 +
            C34899 * C1319 + C35191 + C35191 + C34891 * C1329 + C34897 * C330 +
            C35192 + C35192 + C34890 * C354 + C34895 * C329 + C35193 + C35193 +
            C34889 * C353) *
               C153818) *
              C153626 * C153527 * C1311 +
          ((C34895 * C330 + C35194 + C35194 + C34889 * C354 + C34897 * C1319 +
            C35195 + C35195 + C34890 * C1329 + C34899 * C3127 + C35196 +
            C35196 + C34891 * C3135 + C34901 * C4723 + C35197 + C35197 +
            C153860 * C4729) *
               C153818 +
           (C35238 + C35239 + C35240 + C35241) * C153464) *
              C153626 * C153527 * C1312 -
          ((C34901 * C28503 + C36550 + C36550 + C153860 * C28507 +
            C34899 * C4722 + C36551 + C36551 + C34891 * C4728 + C34897 * C3128 +
            C36552 + C36552 + C34890 * C3136 + C34895 * C1318 + C36553 +
            C36553 + C34889 * C1328) *
               C153464 +
           (C34901 * C28502 + C36554 + C36554 + C153860 * C28506 +
            C34899 * C4723 + C36555 + C36555 + C34891 * C4729 + C34897 * C3127 +
            C36556 + C36556 + C34890 * C3135 + C34895 * C1319 + C36557 +
            C36557 + C34889 * C1329) *
               C153818) *
              C153626 * C153527 * C1313) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C34895 * C136 + C34904 + C34904 + C34889 * C152 + C34897 * C329 +
             C34905 + C34905 + C34890 * C353 + C34899 * C330 + C34906 + C34906 +
             C34891 * C354 + C34901 * C1319 + C34907 + C34907 +
             C153860 * C1329) *
                C153818 +
            (C34972 + C34973 + C34974 + C34975) * C153464) *
               C153626 * C535 -
           ((C35492 + C35493 + C35494 + C35495) * C153464 +
            (C34901 * C4303 + C35448 + C35448 + C153860 * C4311 +
             C34899 * C1892 + C35449 + C35449 + C34891 * C1902 +
             C34897 * C1057 + C35450 + C35450 + C34890 * C1069 + C34895 * C542 +
             C35451 + C35451 + C34889 * C566) *
                C153818) *
               C153626 * C536 +
           ((C34895 * C543 + C35452 + C35452 + C34889 * C567 + C34897 * C1461 +
             C35453 + C35453 + C34890 * C1471 + C34899 * C3441 + C35454 +
             C35454 + C34891 * C3449 + C34901 * C4959 + C35455 + C35455 +
             C153860 * C4965) *
                C153818 +
            (C35496 + C35497 + C35498 + C35499) * C153464) *
               C153626 * C537) *
              C1223 +
          (((C34895 * C1057 + C36194 + C36194 + C34889 * C1069 +
             C34897 * C1892 + C36195 + C36195 + C34890 * C1902 +
             C34899 * C4303 + C36196 + C36196 + C34891 * C4311 +
             C34901 * C5703 + C36197 + C36197 + C153860 * C5709) *
                C153818 +
            (C36222 + C36223 + C36224 + C36225) * C153464) *
               C153626 * C536 -
           ((C35234 + C35235 + C35236 + C35237) * C153464 +
            (C34901 * C3127 + C35190 + C35190 + C153860 * C3135 +
             C34899 * C1319 + C35191 + C35191 + C34891 * C1329 + C34897 * C330 +
             C35192 + C35192 + C34890 * C354 + C34895 * C329 + C35193 + C35193 +
             C34889 * C353) *
                C153818) *
               C153626 * C535 -
           ((C34901 * C28651 + C36752 + C36752 + C153860 * C28655 +
             C34899 * C4958 + C36753 + C36753 + C34891 * C4964 +
             C34897 * C3442 + C36754 + C36754 + C34890 * C3450 +
             C34895 * C1460 + C36755 + C36755 + C34889 * C1470) *
                C153464 +
            (C34901 * C28650 + C36756 + C36756 + C153860 * C28654 +
             C34899 * C4959 + C36757 + C36757 + C34891 * C4965 +
             C34897 * C3441 + C36758 + C36758 + C34890 * C3449 +
             C34895 * C1461 + C36759 + C36759 + C34889 * C1471) *
                C153818) *
               C153626 * C537) *
              C153563) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C11348 * C136 + C11353 + C11353 + C153851 * C152 + C11350 * C329 +
              C11354 + C11354 + C153671 * C353) *
                 C153818 +
             (C11407 + C11408) * C153464) *
                C47609 +
            ((C19416 + C19417) * C153818 + C19382 * C153464) * C47610 +
            C58674 * C153890) *
               C153527 * C1223 -
           ((C59650 * C153464 + (C21220 + C21219) * C153818) * C153890 +
            (C20406 * C153464 + (C20420 + C20419) * C153818) * C47610 +
            ((C11687 + C11688) * C153464 +
             (C11350 * C330 + C11633 + C11633 + C153671 * C354 + C11348 * C329 +
              C11634 + C11634 + C153851 * C353) *
                 C153818) *
                C47609) *
               C153527 * C153563) *
              C1225 +
          ((((C11688 + C11687) * C153818 + (C11686 + C11685) * C153464) *
                C47609 +
            (C20396 * C153818 + C20397 * C153464) * C47610 +
            (C59645 * C153818 + (C20423 + C20424) * C153464) * C153890) *
               C153527 * C153563 -
           (C58673 * C153890 + (C12372 * C153464 + C19389 * C153818) * C47610 +
            ((C11410 + C11409) * C153464 + (C11408 + C11407) * C153818) *
                C47609) *
               C153527 * C1223) *
              C1226 +
          (((C11417 * C153818 + C11418 * C153464) * C47609 +
            (C18777 * C153818 + C20005 * C153464) * C47610 +
            (C19391 * C153818 + (C11967 + C11968) * C153464) * C153890) *
               C153527 * C1223 -
           (((C11350 * C3444 + C13209 + C13209 + C153671 * C3452 +
              C11348 * C1458 + C13210 + C13210 + C153851 * C1468) *
                 C153464 +
             (C20424 + C20423) * C153818) *
                C153890 +
            ((C12682 + C12681) * C153464 + C19714 * C153818) * C47610 +
            (C12163 * C153464 + C12164 * C153818) * C47609) *
               C153527 * C153563) *
              C1227)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C11348 * C136 + C11353 + C11353 + C153851 * C152 + C11350 * C329 +
             C11354 + C11354 + C153671 * C353) *
                C153818 +
            (C11407 + C11408) * C153464) *
               C47609 +
           ((C19416 + C19417) * C153818 + C19382 * C153464) * C47610 +
           C58674 * C153890) *
              C153527 * C1310 -
          ((C59650 * C153464 + (C21220 + C21219) * C153818) * C153890 +
           (C20406 * C153464 + (C20420 + C20419) * C153818) * C47610 +
           ((C11687 + C11688) * C153464 +
            (C11350 * C330 + C11633 + C11633 + C153671 * C354 + C11348 * C329 +
             C11634 + C11634 + C153851 * C353) *
                C153818) *
               C47609) *
              C153527 * C1311 +
          (((C11348 * C330 + C11635 + C11635 + C153851 * C354 + C11350 * C1319 +
             C11636 + C11636 + C153671 * C1329) *
                C153818 +
            (C11689 + C11690) * C153464) *
               C47609 +
           ((C22201 + C22202) * C153818 + (C19084 + C19085) * C153464) *
               C47610 +
           ((C11348 * C3441 + C22196 + C22196 + C153851 * C3449 +
             C11350 * C4959 + C22195 + C22195 + C153671 * C4965) *
                C153818 +
            (C58368 + C58369) * C153464) *
               C153890) *
              C153527 * C1312 -
          (((C11350 * C28651 + C60141 + C60141 + C153671 * C28655 +
             C11348 * C4958 + C60142 + C60142 + C153851 * C4964) *
                C153464 +
            (C11350 * C28650 + C60143 + C60143 + C153671 * C28654 +
             C11348 * C4959 + C60144 + C60144 + C153851 * C4965) *
                C153818) *
               C153890 +
           ((C11350 * C5702 + C20911 + C20911 + C153671 * C5708 +
             C11348 * C4304 + C20912 + C20912 + C153851 * C4312) *
                C153464 +
            (C11350 * C5703 + C20913 + C20913 + C153671 * C5709 +
             C11348 * C4303 + C20914 + C20914 + C153851 * C4311) *
                C153818) *
               C47610 +
           ((C11350 * C3128 + C13011 + C13011 + C153671 * C3136 +
             C11348 * C1318 + C13012 + C13012 + C153851 * C1328) *
                C153464 +
            (C11350 * C3127 + C13013 + C13013 + C153671 * C3135 +
             C11348 * C1319 + C13014 + C13014 + C153851 * C1329) *
                C153818) *
               C47609) *
              C153527 * C1313) *
         C153492) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C11348 * C136 + C11353 + C11353 + C153851 * C152 + C11350 * C329 +
              C11354 + C11354 + C153671 * C353) *
                 C153818 +
             (C11407 + C11408) * C153464) *
                C47609 +
            ((C19416 + C19417) * C153818 + C19382 * C153464) * C47610 +
            C58674 * C153890) *
               C535 -
           ((C58662 * C153464 + (C22992 + C22991) * C153818) * C153890 +
            (C19384 * C153464 + (C19418 + C19419) * C153818) * C47610 +
            (C19389 * C153464 + (C19417 + C19416) * C153818) * C47609) *
               C536 +
           (C58674 * C47609 +
            ((C22991 + C22992) * C153818 + C58663 * C153464) * C47610 +
            ((C11348 * C7673 + C22986 + C22986 + C153851 * C7681 +
              C11350 * C9117 + C22985 + C22985 + C153671 * C9123) *
                 C153818 +
             (C58677 + C58678) * C153464) *
                C153890) *
               C537) *
              C1223 +
          ((((C20419 + C20420) * C153818 + C20396 * C153464) * C47609 +
            ((C21219 + C21220) * C153818 + C59645 * C153464) * C47610 +
            ((C60451 + C60452) * C153818 + (C59655 + C59656) * C153464) *
                C153890) *
               C536 -
           (C60450 * C153890 +
            (C20406 * C153464 + (C20420 + C20419) * C153818) * C47610 +
            ((C11687 + C11688) * C153464 +
             (C11350 * C330 + C11633 + C11633 + C153671 * C354 + C11348 * C329 +
              C11634 + C11634 + C153851 * C353) *
                 C153818) *
                C47609) *
               C535 -
           (((C11350 * C31196 + C60441 + C60441 + C153671 * C31200 +
              C11348 * C9116 + C60442 + C60442 + C153851 * C9122) *
                 C153464 +
             (C11350 * C31195 + C60443 + C60443 + C153671 * C31199 +
              C11348 * C9117 + C60444 + C60444 + C153851 * C9123) *
                 C153818) *
                C153890 +
            ((C59656 + C59655) * C153464 + (C60452 + C60451) * C153818) *
                C47610 +
            C60450 * C47609) *
               C537) *
              C153563) *
         C153492) /
            (p * q * std::sqrt(p + q));
    d2ee[158] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C34895 * C136 + C34904 + C34904 + C34889 * C152 + C34897 * C329 +
              C34905 + C34905 + C34890 * C353 + C34899 * C330 + C34906 +
              C34906 + C34891 * C354 + C34901 * C1319 + C34907 + C34907 +
              C153860 * C1329) *
                 C153818 +
             (C34972 + C34973 + C34974 + C34975) * C153464) *
                C153626 * C153838 -
            ((C35492 + C35493 + C35494 + C35495) * C153464 +
             (C34901 * C4303 + C35448 + C35448 + C153860 * C4311 +
              C34899 * C1892 + C35449 + C35449 + C34891 * C1902 +
              C34897 * C1057 + C35450 + C35450 + C34890 * C1069 +
              C34895 * C542 + C35451 + C35451 + C34889 * C566) *
                 C153818) *
                C153626 * C153591) *
               C1223 +
           (((C34895 * C1057 + C36194 + C36194 + C34889 * C1069 +
              C34897 * C1892 + C36195 + C36195 + C34890 * C1902 +
              C34899 * C4303 + C36196 + C36196 + C34891 * C4311 +
              C34901 * C5703 + C36197 + C36197 + C153860 * C5709) *
                 C153818 +
             (C36222 + C36223 + C36224 + C36225) * C153464) *
                C153626 * C153591 -
            ((C35234 + C35235 + C35236 + C35237) * C153464 +
             (C34901 * C3127 + C35190 + C35190 + C153860 * C3135 +
              C34899 * C1319 + C35191 + C35191 + C34891 * C1329 +
              C34897 * C330 + C35192 + C35192 + C34890 * C354 + C34895 * C329 +
              C35193 + C35193 + C34889 * C353) *
                 C153818) *
                C153626 * C153838) *
               C153563) *
              C153829 +
          ((((C35495 + C35494 + C35493 + C35492) * C153818 +
             (C35932 + C35933 + C35934 + C35935) * C153464) *
                C153626 * C153591 -
            ((C34976 + C34977 + C34978 + C34979) * C153464 +
             (C34975 + C34974 + C34973 + C34972) * C153818) *
                C153626 * C153838) *
               C1223 +
           (((C35237 + C35236 + C35235 + C35234) * C153818 +
             (C35714 + C35715 + C35716 + C35717) * C153464) *
                C153626 * C153838 -
            ((C34901 * C5701 + C36210 + C36210 + C153860 * C5707 +
              C34899 * C4305 + C36211 + C36211 + C34891 * C4313 +
              C34897 * C1890 + C36212 + C36212 + C34890 * C1900 +
              C34895 * C1059 + C36213 + C36213 + C34889 * C1071) *
                 C153464 +
             (C36225 + C36224 + C36223 + C36222) * C153818) *
                C153626 * C153591) *
               C153563) *
              C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C11348 * C136 + C11353 + C11353 + C153851 * C152 + C11350 * C329 +
              C11354 + C11354 + C153671 * C353) *
                 C11344 +
             (C11407 + C11408) * C11345 + C11417 * C11346 + C11418 * C153852) *
                C153626 * C153838 -
            (C12371 * C153852 + C12372 * C11346 + (C11961 + C11962) * C11345 +
             (C11350 * C1057 + C11907 + C11907 + C153671 * C1069 +
              C11348 * C542 + C11908 + C11908 + C153851 * C566) *
                 C11344) *
                C153626 * C153591) *
               C1223 +
           (((C11348 * C1057 + C12643 + C12643 + C153851 * C1069 +
              C11350 * C1892 + C12644 + C12644 + C153671 * C1902) *
                 C11344 +
             (C12677 + C12678) * C11345 + (C12679 + C12680) * C11346 +
             (C12681 + C12682) * C153852) *
                C153626 * C153591 -
            (C12163 * C153852 + C12164 * C11346 + (C11687 + C11688) * C11345 +
             (C11350 * C330 + C11633 + C11633 + C153671 * C354 + C11348 * C329 +
              C11634 + C11634 + C153851 * C353) *
                 C11344) *
                C153626 * C153838) *
               C153563) *
              C153829 +
          ((((C11962 + C11961) * C11344 + (C11960 + C11959) * C11345 +
             (C11958 + C11957) * C11346 + (C12383 + C12384) * C153852) *
                C153626 * C153591 -
            (C11419 * C153852 + C11420 * C11346 + (C11410 + C11409) * C11345 +
             (C11408 + C11407) * C11344) *
                C153626 * C153838) *
               C1223 +
           (((C11688 + C11687) * C11344 + (C11686 + C11685) * C11345 +
             (C11684 + C11683) * C11346 + (C12175 + C12176) * C153852) *
                C153626 * C153838 -
            ((C11350 * C1888 + C12663 + C12663 + C153671 * C1898 +
              C11348 * C1061 + C12664 + C12664 + C153851 * C1073) *
                 C153852 +
             (C12682 + C12681) * C11346 + (C12680 + C12679) * C11345 +
             (C12678 + C12677) * C11344) *
                C153626 * C153591) *
               C153563) *
              C153498)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C11348 * C136 + C11353 + C11353 + C153851 * C152 +
               C11350 * C329 + C11354 + C11354 + C153671 * C353) *
                  C153818 +
              (C11407 + C11408) * C153464) *
                 C47609 +
             ((C19416 + C19417) * C153818 + C19382 * C153464) * C47610 +
             C58674 * C153890) *
                C153838 -
            ((C58662 * C153464 + (C22992 + C22991) * C153818) * C153890 +
             (C19384 * C153464 + (C19418 + C19419) * C153818) * C47610 +
             (C19389 * C153464 + (C19417 + C19416) * C153818) * C47609) *
                C153591) *
               C1223 +
           ((((C20419 + C20420) * C153818 + C20396 * C153464) * C47609 +
             ((C21219 + C21220) * C153818 + C59645 * C153464) * C47610 +
             ((C60451 + C60452) * C153818 + (C59655 + C59656) * C153464) *
                 C153890) *
                C153591 -
            (C60450 * C153890 +
             (C20406 * C153464 + (C20420 + C20419) * C153818) * C47610 +
             ((C11687 + C11688) * C153464 +
              (C11350 * C330 + C11633 + C11633 + C153671 * C354 +
               C11348 * C329 + C11634 + C11634 + C153851 * C353) *
                  C153818) *
                 C47609) *
                C153838) *
               C153563) *
              C153829 +
          ((((C19382 * C153818 + C18777 * C153464) * C47609 +
             (C19390 * C153818 + C19391 * C153464) * C47610 +
             (C58663 * C153818 + (C19422 + C19423) * C153464) * C153890) *
                C153591 -
            (C58673 * C153890 + (C12372 * C153464 + C19389 * C153818) * C47610 +
             ((C11410 + C11409) * C153464 + (C11408 + C11407) * C153818) *
                 C47609) *
                C153838) *
               C1223 +
           ((((C11688 + C11687) * C153818 + (C11686 + C11685) * C153464) *
                 C47609 +
             (C20396 * C153818 + C20397 * C153464) * C47610 +
             (C59645 * C153818 + (C20423 + C20424) * C153464) * C153890) *
                C153838 -
            (((C11350 * C6301 + C21209 + C21209 + C153671 * C6313 +
               C11348 * C6302 + C21210 + C21210 + C153851 * C6314) *
                  C153464 +
              (C59656 + C59655) * C153818) *
                 C153890 +
             ((C20424 + C20423) * C153464 + C59650 * C153818) * C47610 +
             (C19714 * C153464 + C20406 * C153818) * C47609) *
                C153591) *
               C153563) *
              C153498)) /
            (p * q * std::sqrt(p + q));
    d2ee[159] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C11348 * C136 + C11353 + C11353 + C153851 * C152 + C11350 * C329 +
            C11354 + C11354 + C153671 * C353) *
               C11344 +
           (C11407 + C11408) * C11345 + C11417 * C11346 + C11418 * C153852) *
              C153626 * C153527 * C1310 -
          (C12163 * C153852 + C12164 * C11346 + (C11687 + C11688) * C11345 +
           (C11350 * C330 + C11633 + C11633 + C153671 * C354 + C11348 * C329 +
            C11634 + C11634 + C153851 * C353) *
               C11344) *
              C153626 * C153527 * C1311 +
          ((C11348 * C330 + C11635 + C11635 + C153851 * C354 + C11350 * C1319 +
            C11636 + C11636 + C153671 * C1329) *
               C11344 +
           (C11689 + C11690) * C11345 + (C11691 + C11692) * C11346 +
           (C11693 + C11694) * C153852) *
              C153626 * C153527 * C1312 -
          ((C11350 * C3130 + C13007 + C13007 + C153671 * C3138 +
            C11348 * C1316 + C13008 + C13008 + C153851 * C1326) *
               C153852 +
           (C11350 * C3129 + C13009 + C13009 + C153671 * C3137 +
            C11348 * C1317 + C13010 + C13010 + C153851 * C1327) *
               C11346 +
           (C11350 * C3128 + C13011 + C13011 + C153671 * C3136 +
            C11348 * C1318 + C13012 + C13012 + C153851 * C1328) *
               C11345 +
           (C11350 * C3127 + C13013 + C13013 + C153671 * C3135 +
            C11348 * C1319 + C13014 + C13014 + C153851 * C1329) *
               C11344) *
              C153626 * C153527 * C1313) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C11348 * C136 + C11353 + C11353 + C153851 * C152 + C11350 * C329 +
             C11354 + C11354 + C153671 * C353) *
                C11344 +
            (C11407 + C11408) * C11345 + C11417 * C11346 + C11418 * C153852) *
               C153626 * C153527 * C1223 -
           (C12163 * C153852 + C12164 * C11346 + (C11687 + C11688) * C11345 +
            (C11350 * C330 + C11633 + C11633 + C153671 * C354 + C11348 * C329 +
             C11634 + C11634 + C153851 * C353) *
                C11344) *
               C153626 * C153527 * C153563) *
              C1225 +
          (((C11688 + C11687) * C11344 + (C11686 + C11685) * C11345 +
            (C11684 + C11683) * C11346 + (C12175 + C12176) * C153852) *
               C153626 * C153527 * C153563 -
           (C11419 * C153852 + C11420 * C11346 + (C11410 + C11409) * C11345 +
            (C11408 + C11407) * C11344) *
               C153626 * C153527 * C1223) *
              C1226 +
          ((C11417 * C11344 + C11418 * C11345 + (C11414 + C11413) * C11346 +
            (C11415 + C11416) * C153852) *
               C153626 * C153527 * C1223 -
           ((C11350 * C336 + C12169 + C12169 + C153671 * C360 + C11348 * C335 +
             C12170 + C12170 + C153851 * C359) *
                C153852 +
            (C12176 + C12175) * C11346 + C12163 * C11345 + C12164 * C11344) *
               C153626 * C153527 * C153563) *
              C1227)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C34895 * C136 + C34904 + C34904 + C34889 * C152 + C34897 * C329 +
             C34905 + C34905 + C34890 * C353 + C34899 * C330 + C34906 + C34906 +
             C34891 * C354 + C34901 * C1319 + C34907 + C34907 +
             C153860 * C1329) *
                C153818 +
            (C34972 + C34973 + C34974 + C34975) * C153464) *
               C153626 * C153527 * C1223 -
           ((C35234 + C35235 + C35236 + C35237) * C153464 +
            (C34901 * C3127 + C35190 + C35190 + C153860 * C3135 +
             C34899 * C1319 + C35191 + C35191 + C34891 * C1329 + C34897 * C330 +
             C35192 + C35192 + C34890 * C354 + C34895 * C329 + C35193 + C35193 +
             C34889 * C353) *
                C153818) *
               C153626 * C153527 * C153563) *
              C1225 +
          (((C35237 + C35236 + C35235 + C35234) * C153818 +
            (C35714 + C35715 + C35716 + C35717) * C153464) *
               C153626 * C153527 * C153563 -
           ((C34976 + C34977 + C34978 + C34979) * C153464 +
            (C34975 + C34974 + C34973 + C34972) * C153818) *
               C153626 * C153527 * C1223) *
              C1226 +
          (((C34979 + C34978 + C34977 + C34976) * C153818 +
            (C34980 + C34981 + C34982 + C34983) * C153464) *
               C153626 * C153527 * C1223 -
           ((C34901 * C3130 + C35702 + C35702 + C153860 * C3138 +
             C34899 * C1316 + C35703 + C35703 + C34891 * C1326 + C34897 * C333 +
             C35704 + C35704 + C34890 * C357 + C34895 * C326 + C35705 + C35705 +
             C34889 * C350) *
                C153464 +
            (C35717 + C35716 + C35715 + C35714) * C153818) *
               C153626 * C153527 * C153563) *
              C1227)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C34895 * C136 + C34904 + C34904 + C34889 * C152 + C34897 * C329 +
            C34905 + C34905 + C34890 * C353 + C34899 * C330 + C34906 + C34906 +
            C34891 * C354 + C34901 * C1319 + C34907 + C34907 +
            C153860 * C1329) *
               C153818 +
           (C34972 + C34973 + C34974 + C34975) * C153464) *
              C153626 * C153527 * C1310 -
          ((C35234 + C35235 + C35236 + C35237) * C153464 +
           (C34901 * C3127 + C35190 + C35190 + C153860 * C3135 +
            C34899 * C1319 + C35191 + C35191 + C34891 * C1329 + C34897 * C330 +
            C35192 + C35192 + C34890 * C354 + C34895 * C329 + C35193 + C35193 +
            C34889 * C353) *
               C153818) *
              C153626 * C153527 * C1311 +
          ((C34895 * C330 + C35194 + C35194 + C34889 * C354 + C34897 * C1319 +
            C35195 + C35195 + C34890 * C1329 + C34899 * C3127 + C35196 +
            C35196 + C34891 * C3135 + C34901 * C4723 + C35197 + C35197 +
            C153860 * C4729) *
               C153818 +
           (C35238 + C35239 + C35240 + C35241) * C153464) *
              C153626 * C153527 * C1312 -
          ((C34901 * C28503 + C36550 + C36550 + C153860 * C28507 +
            C34899 * C4722 + C36551 + C36551 + C34891 * C4728 + C34897 * C3128 +
            C36552 + C36552 + C34890 * C3136 + C34895 * C1318 + C36553 +
            C36553 + C34889 * C1328) *
               C153464 +
           (C34901 * C28502 + C36554 + C36554 + C153860 * C28506 +
            C34899 * C4723 + C36555 + C36555 + C34891 * C4729 + C34897 * C3127 +
            C36556 + C36556 + C34890 * C3135 + C34895 * C1319 + C36557 +
            C36557 + C34889 * C1329) *
               C153818) *
              C153626 * C153527 * C1313) *
         C153492) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C11348 * C136 + C11353 + C11353 + C153851 * C152 + C11350 * C329 +
              C11354 + C11354 + C153671 * C353) *
                 C153818 +
             (C11407 + C11408) * C153464) *
                C47609 +
            ((C19416 + C19417) * C153818 + C19382 * C153464) * C47610 +
            C58674 * C153890) *
               C153527 * C1223 -
           ((C59650 * C153464 + (C21220 + C21219) * C153818) * C153890 +
            (C20406 * C153464 + (C20420 + C20419) * C153818) * C47610 +
            ((C11687 + C11688) * C153464 +
             (C11350 * C330 + C11633 + C11633 + C153671 * C354 + C11348 * C329 +
              C11634 + C11634 + C153851 * C353) *
                 C153818) *
                C47609) *
               C153527 * C153563) *
              C1225 +
          ((((C11688 + C11687) * C153818 + (C11686 + C11685) * C153464) *
                C47609 +
            (C20396 * C153818 + C20397 * C153464) * C47610 +
            (C59645 * C153818 + (C20423 + C20424) * C153464) * C153890) *
               C153527 * C153563 -
           (C58673 * C153890 + (C12372 * C153464 + C19389 * C153818) * C47610 +
            ((C11410 + C11409) * C153464 + (C11408 + C11407) * C153818) *
                C47609) *
               C153527 * C1223) *
              C1226 +
          (((C11417 * C153818 + C11418 * C153464) * C47609 +
            (C18777 * C153818 + C20005 * C153464) * C47610 +
            (C19391 * C153818 + (C11967 + C11968) * C153464) * C153890) *
               C153527 * C1223 -
           (((C11350 * C3444 + C13209 + C13209 + C153671 * C3452 +
              C11348 * C1458 + C13210 + C13210 + C153851 * C1468) *
                 C153464 +
             (C20424 + C20423) * C153818) *
                C153890 +
            ((C12682 + C12681) * C153464 + C19714 * C153818) * C47610 +
            (C12163 * C153464 + C12164 * C153818) * C47609) *
               C153527 * C153563) *
              C1227)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C11348 * C136 + C11353 + C11353 + C153851 * C152 + C11350 * C329 +
             C11354 + C11354 + C153671 * C353) *
                C153818 +
            (C11407 + C11408) * C153464) *
               C47609 +
           ((C19416 + C19417) * C153818 + C19382 * C153464) * C47610 +
           C58674 * C153890) *
              C153527 * C1310 -
          ((C59650 * C153464 + (C21220 + C21219) * C153818) * C153890 +
           (C20406 * C153464 + (C20420 + C20419) * C153818) * C47610 +
           ((C11687 + C11688) * C153464 +
            (C11350 * C330 + C11633 + C11633 + C153671 * C354 + C11348 * C329 +
             C11634 + C11634 + C153851 * C353) *
                C153818) *
               C47609) *
              C153527 * C1311 +
          (((C11348 * C330 + C11635 + C11635 + C153851 * C354 + C11350 * C1319 +
             C11636 + C11636 + C153671 * C1329) *
                C153818 +
            (C11689 + C11690) * C153464) *
               C47609 +
           ((C22201 + C22202) * C153818 + (C19084 + C19085) * C153464) *
               C47610 +
           ((C11348 * C3441 + C22196 + C22196 + C153851 * C3449 +
             C11350 * C4959 + C22195 + C22195 + C153671 * C4965) *
                C153818 +
            (C58368 + C58369) * C153464) *
               C153890) *
              C153527 * C1312 -
          (((C11350 * C28651 + C60141 + C60141 + C153671 * C28655 +
             C11348 * C4958 + C60142 + C60142 + C153851 * C4964) *
                C153464 +
            (C11350 * C28650 + C60143 + C60143 + C153671 * C28654 +
             C11348 * C4959 + C60144 + C60144 + C153851 * C4965) *
                C153818) *
               C153890 +
           ((C11350 * C5702 + C20911 + C20911 + C153671 * C5708 +
             C11348 * C4304 + C20912 + C20912 + C153851 * C4312) *
                C153464 +
            (C11350 * C5703 + C20913 + C20913 + C153671 * C5709 +
             C11348 * C4303 + C20914 + C20914 + C153851 * C4311) *
                C153818) *
               C47610 +
           ((C11350 * C3128 + C13011 + C13011 + C153671 * C3136 +
             C11348 * C1318 + C13012 + C13012 + C153851 * C1328) *
                C153464 +
            (C11350 * C3127 + C13013 + C13013 + C153671 * C3135 +
             C11348 * C1319 + C13014 + C13014 + C153851 * C1329) *
                C153818) *
               C47609) *
              C153527 * C1313) *
         C153492) /
            (p * q * std::sqrt(p + q));
    d2ee[160] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C34895 * C136 + C34904 + C34904 + C34889 * C152 + C34897 * C329 +
              C34905 + C34905 + C34890 * C353 + C34899 * C330 + C34906 +
              C34906 + C34891 * C354 + C34901 * C1319 + C34907 + C34907 +
              C153860 * C1329) *
                 C153818 +
             (C34972 + C34973 + C34974 + C34975) * C153464) *
                C153626 * C2030 -
            ((C35492 + C35493 + C35494 + C35495) * C153464 +
             (C34901 * C4303 + C35448 + C35448 + C153860 * C4311 +
              C34899 * C1892 + C35449 + C35449 + C34891 * C1902 +
              C34897 * C1057 + C35450 + C35450 + C34890 * C1069 +
              C34895 * C542 + C35451 + C35451 + C34889 * C566) *
                 C153818) *
                C153626 * C153591) *
               C153837 +
           (((C34895 * C1057 + C36194 + C36194 + C34889 * C1069 +
              C34897 * C1892 + C36195 + C36195 + C34890 * C1902 +
              C34899 * C4303 + C36196 + C36196 + C34891 * C4311 +
              C34901 * C5703 + C36197 + C36197 + C153860 * C5709) *
                 C153818 +
             (C36222 + C36223 + C36224 + C36225) * C153464) *
                C153626 * C153591 -
            ((C35234 + C35235 + C35236 + C35237) * C153464 +
             (C34901 * C3127 + C35190 + C35190 + C153860 * C3135 +
              C34899 * C1319 + C35191 + C35191 + C34891 * C1329 +
              C34897 * C330 + C35192 + C35192 + C34890 * C354 + C34895 * C329 +
              C35193 + C35193 + C34889 * C353) *
                 C153818) *
                C153626 * C2030) *
               C153563) *
              C153829 +
          ((((C35495 + C35494 + C35493 + C35492) * C153818 +
             (C35932 + C35933 + C35934 + C35935) * C153464) *
                C153626 * C153591 -
            ((C34976 + C34977 + C34978 + C34979) * C153464 +
             (C34975 + C34974 + C34973 + C34972) * C153818) *
                C153626 * C2030) *
               C153837 +
           (((C35237 + C35236 + C35235 + C35234) * C153818 +
             (C35714 + C35715 + C35716 + C35717) * C153464) *
                C153626 * C2030 -
            ((C34901 * C5701 + C36210 + C36210 + C153860 * C5707 +
              C34899 * C4305 + C36211 + C36211 + C34891 * C4313 +
              C34897 * C1890 + C36212 + C36212 + C34890 * C1900 +
              C34895 * C1059 + C36213 + C36213 + C34889 * C1071) *
                 C153464 +
             (C36225 + C36224 + C36223 + C36222) * C153818) *
                C153626 * C153591) *
               C153563) *
              C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C11348 * C136 + C11353 + C11353 + C153851 * C152 + C11350 * C329 +
              C11354 + C11354 + C153671 * C353) *
                 C11344 +
             (C11407 + C11408) * C11345 + C11417 * C11346 + C11418 * C153852) *
                C153626 * C2030 -
            (C12371 * C153852 + C12372 * C11346 + (C11961 + C11962) * C11345 +
             (C11350 * C1057 + C11907 + C11907 + C153671 * C1069 +
              C11348 * C542 + C11908 + C11908 + C153851 * C566) *
                 C11344) *
                C153626 * C153591) *
               C153837 +
           (((C11348 * C1057 + C12643 + C12643 + C153851 * C1069 +
              C11350 * C1892 + C12644 + C12644 + C153671 * C1902) *
                 C11344 +
             (C12677 + C12678) * C11345 + (C12679 + C12680) * C11346 +
             (C12681 + C12682) * C153852) *
                C153626 * C153591 -
            (C12163 * C153852 + C12164 * C11346 + (C11687 + C11688) * C11345 +
             (C11350 * C330 + C11633 + C11633 + C153671 * C354 + C11348 * C329 +
              C11634 + C11634 + C153851 * C353) *
                 C11344) *
                C153626 * C2030) *
               C153563) *
              C153829 +
          ((((C11962 + C11961) * C11344 + (C11960 + C11959) * C11345 +
             (C11958 + C11957) * C11346 + (C12383 + C12384) * C153852) *
                C153626 * C153591 -
            (C11419 * C153852 + C11420 * C11346 + (C11410 + C11409) * C11345 +
             (C11408 + C11407) * C11344) *
                C153626 * C2030) *
               C153837 +
           (((C11688 + C11687) * C11344 + (C11686 + C11685) * C11345 +
             (C11684 + C11683) * C11346 + (C12175 + C12176) * C153852) *
                C153626 * C2030 -
            ((C11350 * C1888 + C12663 + C12663 + C153671 * C1898 +
              C11348 * C1061 + C12664 + C12664 + C153851 * C1073) *
                 C153852 +
             (C12682 + C12681) * C11346 + (C12680 + C12679) * C11345 +
             (C12678 + C12677) * C11344) *
                C153626 * C153591) *
               C153563) *
              C153498)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C11348 * C136 + C11353 + C11353 + C153851 * C152 +
               C11350 * C329 + C11354 + C11354 + C153671 * C353) *
                  C153818 +
              (C11407 + C11408) * C153464) *
                 C47609 +
             ((C19416 + C19417) * C153818 + C19382 * C153464) * C47610 +
             C58674 * C153890) *
                C2030 -
            (C62220 * C153890 +
             (C19384 * C153464 + (C19418 + C19419) * C153818) * C47610 +
             (C19389 * C153464 + (C19417 + C19416) * C153818) * C47609) *
                C153591) *
               C153837 +
           ((((C20419 + C20420) * C153818 + C20396 * C153464) * C47609 +
             ((C21219 + C21220) * C153818 + C59645 * C153464) * C47610 +
             ((C60451 + C60452) * C153818 + (C59655 + C59656) * C153464) *
                 C153890) *
                C153591 -
            (C60450 * C153890 +
             (C20406 * C153464 + (C20420 + C20419) * C153818) * C47610 +
             ((C11687 + C11688) * C153464 +
              (C11350 * C330 + C11633 + C11633 + C153671 * C354 +
               C11348 * C329 + C11634 + C11634 + C153851 * C353) *
                  C153818) *
                 C47609) *
                C2030) *
               C153563) *
              C153829 +
          ((((C19382 * C153818 + C18777 * C153464) * C47609 +
             (C19390 * C153818 + C19391 * C153464) * C47610 +
             (C58663 * C153818 + (C19422 + C19423) * C153464) * C153890) *
                C153591 -
            (C58673 * C153890 + (C12372 * C153464 + C19389 * C153818) * C47610 +
             ((C11410 + C11409) * C153464 + (C11408 + C11407) * C153818) *
                 C47609) *
                C2030) *
               C153837 +
           ((((C11688 + C11687) * C153818 + (C11686 + C11685) * C153464) *
                 C47609 +
             (C20396 * C153818 + C20397 * C153464) * C47610 +
             (C59645 * C153818 + (C20423 + C20424) * C153464) * C153890) *
                C2030 -
            (((C11350 * C6301 + C21209 + C21209 + C153671 * C6313 +
               C11348 * C6302 + C21210 + C21210 + C153851 * C6314) *
                  C153464 +
              (C59656 + C59655) * C153818) *
                 C153890 +
             ((C20424 + C20423) * C153464 + C59650 * C153818) * C47610 +
             (C19714 * C153464 + C20406 * C153818) * C47609) *
                C153591) *
               C153563) *
              C153498)) /
            (p * q * std::sqrt(p + q));
    d2ee[161] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C34895 * C136 + C34904 + C34904 + C34889 * C152 + C34897 * C329 +
             C34905 + C34905 + C34890 * C353 + C34899 * C330 + C34906 + C34906 +
             C34891 * C354 + C34901 * C1319 + C34907 + C34907 +
             C153860 * C1329) *
                C153818 +
            (C34972 + C34973 + C34974 + C34975) * C153464) *
               C153626 * C153910 -
           ((C35492 + C35493 + C35494 + C35495) * C153464 +
            (C34901 * C4303 + C35448 + C35448 + C153860 * C4311 +
             C34899 * C1892 + C35449 + C35449 + C34891 * C1902 +
             C34897 * C1057 + C35450 + C35450 + C34890 * C1069 + C34895 * C542 +
             C35451 + C35451 + C34889 * C566) *
                C153818) *
               C153626 * C153911 +
           ((C34895 * C543 + C35452 + C35452 + C34889 * C567 + C34897 * C1461 +
             C35453 + C35453 + C34890 * C1471 + C34899 * C3441 + C35454 +
             C35454 + C34891 * C3449 + C34901 * C4959 + C35455 + C35455 +
             C153860 * C4965) *
                C153818 +
            (C35496 + C35497 + C35498 + C35499) * C153464) *
               C153626 * C2546) *
              C153837 +
          (((C34895 * C1057 + C36194 + C36194 + C34889 * C1069 +
             C34897 * C1892 + C36195 + C36195 + C34890 * C1902 +
             C34899 * C4303 + C36196 + C36196 + C34891 * C4311 +
             C34901 * C5703 + C36197 + C36197 + C153860 * C5709) *
                C153818 +
            (C36222 + C36223 + C36224 + C36225) * C153464) *
               C153626 * C153911 -
           ((C35234 + C35235 + C35236 + C35237) * C153464 +
            (C34901 * C3127 + C35190 + C35190 + C153860 * C3135 +
             C34899 * C1319 + C35191 + C35191 + C34891 * C1329 + C34897 * C330 +
             C35192 + C35192 + C34890 * C354 + C34895 * C329 + C35193 + C35193 +
             C34889 * C353) *
                C153818) *
               C153626 * C153910 -
           ((C34901 * C28651 + C36752 + C36752 + C153860 * C28655 +
             C34899 * C4958 + C36753 + C36753 + C34891 * C4964 +
             C34897 * C3442 + C36754 + C36754 + C34890 * C3450 +
             C34895 * C1460 + C36755 + C36755 + C34889 * C1470) *
                C153464 +
            (C34901 * C28650 + C36756 + C36756 + C153860 * C28654 +
             C34899 * C4959 + C36757 + C36757 + C34891 * C4965 +
             C34897 * C3441 + C36758 + C36758 + C34890 * C3449 +
             C34895 * C1461 + C36759 + C36759 + C34889 * C1471) *
                C153818) *
               C153626 * C2546) *
              C153563) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C11348 * C136 + C11353 + C11353 + C153851 * C152 + C11350 * C329 +
             C11354 + C11354 + C153671 * C353) *
                C11344 +
            (C11407 + C11408) * C11345 + C11417 * C11346 + C11418 * C153852) *
               C153626 * C153910 -
           (C12371 * C153852 + C12372 * C11346 + (C11961 + C11962) * C11345 +
            (C11350 * C1057 + C11907 + C11907 + C153671 * C1069 +
             C11348 * C542 + C11908 + C11908 + C153851 * C566) *
                C11344) *
               C153626 * C153911 +
           ((C11348 * C543 + C11909 + C11909 + C153851 * C567 + C11350 * C1461 +
             C11910 + C11910 + C153671 * C1471) *
                C11344 +
            (C11963 + C11964) * C11345 + (C11965 + C11966) * C11346 +
            (C11967 + C11968) * C153852) *
               C153626 * C2546) *
              C153837 +
          (((C11348 * C1057 + C12643 + C12643 + C153851 * C1069 +
             C11350 * C1892 + C12644 + C12644 + C153671 * C1902) *
                C11344 +
            (C12677 + C12678) * C11345 + (C12679 + C12680) * C11346 +
            (C12681 + C12682) * C153852) *
               C153626 * C153911 -
           (C12163 * C153852 + C12164 * C11346 + (C11687 + C11688) * C11345 +
            (C11350 * C330 + C11633 + C11633 + C153671 * C354 + C11348 * C329 +
             C11634 + C11634 + C153851 * C353) *
                C11344) *
               C153626 * C153910 -
           ((C11350 * C3444 + C13209 + C13209 + C153671 * C3452 +
             C11348 * C1458 + C13210 + C13210 + C153851 * C1468) *
                C153852 +
            (C11350 * C3443 + C13211 + C13211 + C153671 * C3451 +
             C11348 * C1459 + C13212 + C13212 + C153851 * C1469) *
                C11346 +
            (C11350 * C3442 + C13213 + C13213 + C153671 * C3450 +
             C11348 * C1460 + C13214 + C13214 + C153851 * C1470) *
                C11345 +
            (C11350 * C3441 + C13215 + C13215 + C153671 * C3449 +
             C11348 * C1461 + C13216 + C13216 + C153851 * C1471) *
                C11344) *
               C153626 * C2546) *
              C153563) *
         C153492) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C11348 * C136 + C11353 + C11353 + C153851 * C152 + C11350 * C329 +
              C11354 + C11354 + C153671 * C353) *
                 C153818 +
             (C11407 + C11408) * C153464) *
                C47609 +
            ((C19416 + C19417) * C153818 + C19382 * C153464) * C47610 +
            C58674 * C153890) *
               C153910 -
           (C62220 * C153890 +
            (C19384 * C153464 + (C19418 + C19419) * C153818) * C47610 +
            (C19389 * C153464 + (C19417 + C19416) * C153818) * C47609) *
               C153911 +
           (C58674 * C47609 +
            ((C22991 + C22992) * C153818 + C58663 * C153464) * C47610 +
            ((C62223 + C62224) * C153818 + (C58677 + C58678) * C153464) *
                C153890) *
               C2546) *
              C153837 +
          ((((C20419 + C20420) * C153818 + C20396 * C153464) * C47609 +
            ((C21219 + C21220) * C153818 + C59645 * C153464) * C47610 +
            ((C60451 + C60452) * C153818 + (C59655 + C59656) * C153464) *
                C153890) *
               C153911 -
           (C60450 * C153890 +
            (C20406 * C153464 + (C20420 + C20419) * C153818) * C47610 +
            ((C11687 + C11688) * C153464 +
             (C11350 * C330 + C11633 + C11633 + C153671 * C354 + C11348 * C329 +
              C11634 + C11634 + C153851 * C353) *
                 C153818) *
                C47609) *
               C153910 -
           (((C11350 * C31196 + C60441 + C60441 + C153671 * C31200 +
              C11348 * C9116 + C60442 + C60442 + C153851 * C9122) *
                 C153464 +
             (C11350 * C31195 + C60443 + C60443 + C153671 * C31199 +
              C11348 * C9117 + C60444 + C60444 + C153851 * C9123) *
                 C153818) *
                C153890 +
            ((C59656 + C59655) * C153464 + (C60452 + C60451) * C153818) *
                C47610 +
            C60450 * C47609) *
               C2546) *
              C153563) *
         C153492) /
            (p * q * std::sqrt(p + q));
    d2ee[162] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C11348 * C136 + C11353 + C11353 + C153851 * C152 +
                 C11350 * C329 + C11354 + C11354 + C153671 * C353) *
                    C11344 +
                (C11407 + C11408) * C11345 + C11417 * C11346 +
                C11418 * C153852) *
                   C153626 * C2030 -
               (C12371 * C153852 + C12372 * C11346 +
                (C11961 + C11962) * C11345 +
                (C11350 * C1057 + C11907 + C11907 + C153671 * C1069 +
                 C11348 * C542 + C11908 + C11908 + C153851 * C566) *
                    C11344) *
                   C153626 * C153591) *
                  C153511 * C1225 +
              (((C11962 + C11961) * C11344 + (C11960 + C11959) * C11345 +
                (C11958 + C11957) * C11346 + (C12383 + C12384) * C153852) *
                   C153626 * C153591 -
               (C11419 * C153852 + C11420 * C11346 +
                (C11410 + C11409) * C11345 + (C11408 + C11407) * C11344) *
                   C153626 * C2030) *
                  C153511 * C1226 +
              ((C11417 * C11344 + C11418 * C11345 + (C11414 + C11413) * C11346 +
                (C11415 + C11416) * C153852) *
                   C153626 * C2030 -
               ((C11350 * C1062 + C12377 + C12377 + C153671 * C1074 +
                 C11348 * C548 + C12378 + C12378 + C153851 * C572) *
                    C153852 +
                (C12384 + C12383) * C11346 + C12371 * C11345 +
                C12372 * C11344) *
                   C153626 * C153591) *
                  C153511 * C1227) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C11348 * C136 + C11353 + C11353 + C153851 * C152 +
                 C11350 * C329 + C11354 + C11354 + C153671 * C353) *
                    C11344 +
                (C11407 + C11408) * C11345 + C11417 * C11346 +
                C11418 * C153852) *
                   C153626 * C2030 -
               (C12371 * C153852 + C12372 * C11346 +
                (C11961 + C11962) * C11345 +
                (C11350 * C1057 + C11907 + C11907 + C153671 * C1069 +
                 C11348 * C542 + C11908 + C11908 + C153851 * C566) *
                    C11344) *
                   C153626 * C153591) *
                  C320 +
              (((C11348 * C1057 + C12643 + C12643 + C153851 * C1069 +
                 C11350 * C1892 + C12644 + C12644 + C153671 * C1902) *
                    C11344 +
                (C12677 + C12678) * C11345 + (C12679 + C12680) * C11346 +
                (C12681 + C12682) * C153852) *
                   C153626 * C153591 -
               (C12163 * C153852 + C12164 * C11346 +
                (C11687 + C11688) * C11345 +
                (C11350 * C330 + C11633 + C11633 + C153671 * C354 +
                 C11348 * C329 + C11634 + C11634 + C153851 * C353) *
                    C11344) *
                   C153626 * C2030) *
                  C321 +
              (((C11348 * C330 + C11635 + C11635 + C153851 * C354 +
                 C11350 * C1319 + C11636 + C11636 + C153671 * C1329) *
                    C11344 +
                (C11689 + C11690) * C11345 + (C11691 + C11692) * C11346 +
                (C11693 + C11694) * C153852) *
                   C153626 * C2030 -
               ((C11350 * C4306 + C13863 + C13863 + C153671 * C4314 +
                 C11348 * C1889 + C13864 + C13864 + C153851 * C1899) *
                    C153852 +
                (C11350 * C4305 + C13865 + C13865 + C153671 * C4313 +
                 C11348 * C1890 + C13866 + C13866 + C153851 * C1900) *
                    C11346 +
                (C11350 * C4304 + C13867 + C13867 + C153671 * C4312 +
                 C11348 * C1891 + C13868 + C13868 + C153851 * C1901) *
                    C11345 +
                (C11350 * C4303 + C13869 + C13869 + C153671 * C4311 +
                 C11348 * C1892 + C13870 + C13870 + C153851 * C1902) *
                    C11344) *
                   C153626 * C153591) *
                  C322) *
             C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C11348 * C136 + C11353 + C11353 + C153851 * C152 + C11350 * C329 +
            C11354 + C11354 + C153671 * C353) *
               C11344 +
           (C11407 + C11408) * C11345 + C11417 * C11346 + C11418 * C153852) *
              C153626 * C2236 -
          (C12371 * C153852 + C12372 * C11346 + (C11961 + C11962) * C11345 +
           (C11350 * C1057 + C11907 + C11907 + C153671 * C1069 + C11348 * C542 +
            C11908 + C11908 + C153851 * C566) *
               C11344) *
              C153626 * C2237 +
          ((C11348 * C543 + C11909 + C11909 + C153851 * C567 + C11350 * C1461 +
            C11910 + C11910 + C153671 * C1471) *
               C11344 +
           (C11963 + C11964) * C11345 + (C11965 + C11966) * C11346 +
           (C11967 + C11968) * C153852) *
              C153626 * C2238 -
          ((C11350 * C8488 + C14389 + C14389 + C153671 * C8490 +
            C11348 * C2241 + C14390 + C14390 + C153851 * C2251) *
               C153852 +
           (C11350 * C6302 + C14391 + C14391 + C153671 * C6314 +
            C11348 * C2242 + C14392 + C14392 + C153851 * C2252) *
               C11346 +
           (C11350 * C6304 + C14393 + C14393 + C153671 * C6316 +
            C11348 * C2243 + C14394 + C14394 + C153851 * C2253) *
               C11345 +
           (C11350 * C6306 + C14395 + C14395 + C153671 * C6318 +
            C11348 * C2244 + C14396 + C14396 + C153851 * C2254) *
               C11344) *
              C153626 * C2239) *
         C153511 * C153492) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C34895 * C136 + C34904 + C34904 + C34889 * C152 + C34897 * C329 +
             C34905 + C34905 + C34890 * C353 + C34899 * C330 + C34906 + C34906 +
             C34891 * C354 + C34901 * C1319 + C34907 + C34907 +
             C153860 * C1329) *
                C153818 +
            (C34972 + C34973 + C34974 + C34975) * C153464) *
               C153626 * C2030 -
           ((C35492 + C35493 + C35494 + C35495) * C153464 +
            (C34901 * C4303 + C35448 + C35448 + C153860 * C4311 +
             C34899 * C1892 + C35449 + C35449 + C34891 * C1902 +
             C34897 * C1057 + C35450 + C35450 + C34890 * C1069 + C34895 * C542 +
             C35451 + C35451 + C34889 * C566) *
                C153818) *
               C153626 * C153591) *
              C153511 * C1225 +
          (((C35495 + C35494 + C35493 + C35492) * C153818 +
            (C35932 + C35933 + C35934 + C35935) * C153464) *
               C153626 * C153591 -
           ((C34976 + C34977 + C34978 + C34979) * C153464 +
            (C34975 + C34974 + C34973 + C34972) * C153818) *
               C153626 * C2030) *
              C153511 * C1226 +
          (((C34979 + C34978 + C34977 + C34976) * C153818 +
            (C34980 + C34981 + C34982 + C34983) * C153464) *
               C153626 * C2030 -
           ((C34901 * C4306 + C35920 + C35920 + C153860 * C4314 +
             C34899 * C1889 + C35921 + C35921 + C34891 * C1899 +
             C34897 * C1060 + C35922 + C35922 + C34890 * C1072 + C34895 * C539 +
             C35923 + C35923 + C34889 * C563) *
                C153464 +
            (C35935 + C35934 + C35933 + C35932) * C153818) *
               C153626 * C153591) *
              C153511 * C1227)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C34895 * C136 + C34904 + C34904 + C34889 * C152 + C34897 * C329 +
             C34905 + C34905 + C34890 * C353 + C34899 * C330 + C34906 + C34906 +
             C34891 * C354 + C34901 * C1319 + C34907 + C34907 +
             C153860 * C1329) *
                C153818 +
            (C34972 + C34973 + C34974 + C34975) * C153464) *
               C153626 * C2030 -
           ((C35492 + C35493 + C35494 + C35495) * C153464 +
            (C34901 * C4303 + C35448 + C35448 + C153860 * C4311 +
             C34899 * C1892 + C35449 + C35449 + C34891 * C1902 +
             C34897 * C1057 + C35450 + C35450 + C34890 * C1069 + C34895 * C542 +
             C35451 + C35451 + C34889 * C566) *
                C153818) *
               C153626 * C153591) *
              C320 +
          (((C34895 * C1057 + C36194 + C36194 + C34889 * C1069 +
             C34897 * C1892 + C36195 + C36195 + C34890 * C1902 +
             C34899 * C4303 + C36196 + C36196 + C34891 * C4311 +
             C34901 * C5703 + C36197 + C36197 + C153860 * C5709) *
                C153818 +
            (C36222 + C36223 + C36224 + C36225) * C153464) *
               C153626 * C153591 -
           ((C35234 + C35235 + C35236 + C35237) * C153464 +
            (C34901 * C3127 + C35190 + C35190 + C153860 * C3135 +
             C34899 * C1319 + C35191 + C35191 + C34891 * C1329 + C34897 * C330 +
             C35192 + C35192 + C34890 * C354 + C34895 * C329 + C35193 + C35193 +
             C34889 * C353) *
                C153818) *
               C153626 * C2030) *
              C321 +
          (((C34895 * C330 + C35194 + C35194 + C34889 * C354 + C34897 * C1319 +
             C35195 + C35195 + C34890 * C1329 + C34899 * C3127 + C35196 +
             C35196 + C34891 * C3135 + C34901 * C4723 + C35197 + C35197 +
             C153860 * C4729) *
                C153818 +
            (C35238 + C35239 + C35240 + C35241) * C153464) *
               C153626 * C2030 -
           ((C34901 * C29093 + C37406 + C37406 + C153860 * C29097 +
             C34899 * C5702 + C37407 + C37407 + C34891 * C5708 +
             C34897 * C4304 + C37408 + C37408 + C34890 * C4312 +
             C34895 * C1891 + C37409 + C37409 + C34889 * C1901) *
                C153464 +
            (C34901 * C29092 + C37410 + C37410 + C153860 * C29096 +
             C34899 * C5703 + C37411 + C37411 + C34891 * C5709 +
             C34897 * C4303 + C37412 + C37412 + C34890 * C4311 +
             C34895 * C1892 + C37413 + C37413 + C34889 * C1902) *
                C153818) *
               C153626 * C153591) *
              C322) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C34895 * C136 + C34904 + C34904 + C34889 * C152 + C34897 * C329 +
            C34905 + C34905 + C34890 * C353 + C34899 * C330 + C34906 + C34906 +
            C34891 * C354 + C34901 * C1319 + C34907 + C34907 +
            C153860 * C1329) *
               C153818 +
           (C34972 + C34973 + C34974 + C34975) * C153464) *
              C153626 * C2236 -
          ((C35492 + C35493 + C35494 + C35495) * C153464 +
           (C34901 * C4303 + C35448 + C35448 + C153860 * C4311 +
            C34899 * C1892 + C35449 + C35449 + C34891 * C1902 + C34897 * C1057 +
            C35450 + C35450 + C34890 * C1069 + C34895 * C542 + C35451 + C35451 +
            C34889 * C566) *
               C153818) *
              C153626 * C2237 +
          ((C34895 * C543 + C35452 + C35452 + C34889 * C567 + C34897 * C1461 +
            C35453 + C35453 + C34890 * C1471 + C34899 * C3441 + C35454 +
            C35454 + C34891 * C3449 + C34901 * C4959 + C35455 + C35455 +
            C153860 * C4965) *
               C153818 +
           (C35496 + C35497 + C35498 + C35499) * C153464) *
              C153626 * C2238 -
          ((C34901 * C31999 + C37932 + C37932 + C153860 * C32001 +
            C34899 * C6303 + C37933 + C37933 + C34891 * C6315 + C34897 * C6304 +
            C37934 + C37934 + C34890 * C6316 + C34895 * C2243 + C37935 +
            C37935 + C34889 * C2253) *
               C153464 +
           (C34901 * C30191 + C37936 + C37936 + C153860 * C30195 +
            C34899 * C6305 + C37937 + C37937 + C34891 * C6317 + C34897 * C6306 +
            C37938 + C37938 + C34890 * C6318 + C34895 * C2244 + C37939 +
            C37939 + C34889 * C2254) *
               C153818) *
              C153626 * C2239) *
         C153511 * C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C11348 * C136 + C11353 + C11353 + C153851 * C152 + C11350 * C329 +
              C11354 + C11354 + C153671 * C353) *
                 C153818 +
             (C11407 + C11408) * C153464) *
                C47609 +
            ((C19416 + C19417) * C153818 + C19382 * C153464) * C47610 +
            C58674 * C153890) *
               C2030 -
           ((C58662 * C153464 + (C22992 + C22991) * C153818) * C153890 +
            (C19384 * C153464 + (C19418 + C19419) * C153818) * C47610 +
            (C19389 * C153464 + (C19417 + C19416) * C153818) * C47609) *
               C153591) *
              C153511 * C1225 +
          (((C19382 * C153818 + C18777 * C153464) * C47609 +
            (C19390 * C153818 + C19391 * C153464) * C47610 +
            (C58663 * C153818 + (C19422 + C19423) * C153464) * C153890) *
               C153591 -
           (C58673 * C153890 + (C12372 * C153464 + C19389 * C153818) * C47610 +
            ((C11410 + C11409) * C153464 + (C11408 + C11407) * C153818) *
                C47609) *
               C2030) *
              C153511 * C1226 +
          (((C11417 * C153818 + C11418 * C153464) * C47609 +
            (C18777 * C153818 + C20005 * C153464) * C47610 +
            (C19391 * C153818 + (C11967 + C11968) * C153464) * C153890) *
               C2030 -
           (((C11350 * C8488 + C14389 + C14389 + C153671 * C8490 +
              C11348 * C2241 + C14390 + C14390 + C153851 * C2251) *
                 C153464 +
             (C19423 + C19422) * C153818) *
                C153890 +
            ((C11968 + C11967) * C153464 + C19383 * C153818) * C47610 +
            (C12371 * C153464 + C12372 * C153818) * C47609) *
               C153591) *
              C153511 * C1227)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C11348 * C136 + C11353 + C11353 + C153851 * C152 + C11350 * C329 +
              C11354 + C11354 + C153671 * C353) *
                 C153818 +
             (C11407 + C11408) * C153464) *
                C47609 +
            ((C19416 + C19417) * C153818 + C19382 * C153464) * C47610 +
            C58674 * C153890) *
               C2030 -
           ((C58662 * C153464 + (C22992 + C22991) * C153818) * C153890 +
            (C19384 * C153464 + (C19418 + C19419) * C153818) * C47610 +
            (C19389 * C153464 + (C19417 + C19416) * C153818) * C47609) *
               C153591) *
              C320 +
          ((((C20419 + C20420) * C153818 + C20396 * C153464) * C47609 +
            ((C21219 + C21220) * C153818 + C59645 * C153464) * C47610 +
            ((C60451 + C60452) * C153818 + (C59655 + C59656) * C153464) *
                C153890) *
               C153591 -
           (C60450 * C153890 +
            (C20406 * C153464 + (C20420 + C20419) * C153818) * C47610 +
            ((C11687 + C11688) * C153464 +
             (C11350 * C330 + C11633 + C11633 + C153671 * C354 + C11348 * C329 +
              C11634 + C11634 + C153851 * C353) *
                 C153818) *
                C47609) *
               C2030) *
              C321 +
          ((((C11348 * C330 + C11635 + C11635 + C153851 * C354 +
              C11350 * C1319 + C11636 + C11636 + C153671 * C1329) *
                 C153818 +
             (C11689 + C11690) * C153464) *
                C47609 +
            ((C22201 + C22202) * C153818 + (C19084 + C19085) * C153464) *
                C47610 +
            ((C61431 + C61432) * C153818 + (C58368 + C58369) * C153464) *
                C153890) *
               C2030 -
           (((C11350 * C31999 + C61423 + C61423 + C153671 * C32001 +
              C11348 * C6303 + C61424 + C61424 + C153851 * C6315) *
                 C153464 +
             (C11350 * C30191 + C61425 + C61425 + C153671 * C30195 +
              C11348 * C6305 + C61426 + C61426 + C153851 * C6317) *
                 C153818) *
                C153890 +
            ((C58369 + C58368) * C153464 + (C61432 + C61431) * C153818) *
                C47610 +
            ((C19085 + C19084) * C153464 + (C22202 + C22201) * C153818) *
                C47609) *
               C153591) *
              C322) *
         C153492) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C11348 * C136 + C11353 + C11353 + C153851 * C152 + C11350 * C329 +
             C11354 + C11354 + C153671 * C353) *
                C153818 +
            (C11407 + C11408) * C153464) *
               C47609 +
           ((C19416 + C19417) * C153818 + C19382 * C153464) * C47610 +
           C58674 * C153890) *
              C2236 -
          (C62220 * C153890 +
           (C19384 * C153464 + (C19418 + C19419) * C153818) * C47610 +
           (C19389 * C153464 + (C19417 + C19416) * C153818) * C47609) *
              C2237 +
          (C58674 * C47609 +
           ((C22991 + C22992) * C153818 + C58663 * C153464) * C47610 +
           ((C62223 + C62224) * C153818 + (C58677 + C58678) * C153464) *
               C153890) *
              C2238 -
          (((C11350 * C56351 + C62213 + C62213 + C153671 * C56353 +
             C11348 * C10465 + C62214 + C62214 + C153851 * C10471) *
                C153464 +
            (C11350 * C34007 + C62215 + C62215 + C153671 * C34011 +
             C11348 * C10466 + C62216 + C62216 + C153851 * C10472) *
                C153818) *
               C153890 +
           ((C58678 + C58677) * C153464 + (C62224 + C62223) * C153818) *
               C47610 +
           C62220 * C47609) *
              C2239) *
         C153511 * C153492) /
            (p * q * std::sqrt(p + q));
    d2ee[163] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C34895 * C136 + C34904 + C34904 + C34889 * C152 + C34897 * C329 +
             C34905 + C34905 + C34890 * C353 + C34899 * C330 + C34906 + C34906 +
             C34891 * C354 + C34901 * C1319 + C34907 + C34907 +
             C153860 * C1329) *
                C153818 +
            (C34972 + C34973 + C34974 + C34975) * C153464) *
               C153626 * C153910 -
           ((C35492 + C35493 + C35494 + C35495) * C153464 +
            (C34901 * C4303 + C35448 + C35448 + C153860 * C4311 +
             C34899 * C1892 + C35449 + C35449 + C34891 * C1902 +
             C34897 * C1057 + C35450 + C35450 + C34890 * C1069 + C34895 * C542 +
             C35451 + C35451 + C34889 * C566) *
                C153818) *
               C153626 * C153911 +
           ((C34895 * C543 + C35452 + C35452 + C34889 * C567 + C34897 * C1461 +
             C35453 + C35453 + C34890 * C1471 + C34899 * C3441 + C35454 +
             C35454 + C34891 * C3449 + C34901 * C4959 + C35455 + C35455 +
             C153860 * C4965) *
                C153818 +
            (C35496 + C35497 + C35498 + C35499) * C153464) *
               C153626 * C2546) *
              C153511 * C153829 +
          (((C35495 + C35494 + C35493 + C35492) * C153818 +
            (C35932 + C35933 + C35934 + C35935) * C153464) *
               C153626 * C153911 -
           ((C34976 + C34977 + C34978 + C34979) * C153464 +
            (C34975 + C34974 + C34973 + C34972) * C153818) *
               C153626 * C153910 -
           ((C34901 * C4957 + C35472 + C35472 + C153860 * C4963 +
             C34899 * C3443 + C35473 + C35473 + C34891 * C3451 +
             C34897 * C1459 + C35474 + C35474 + C34890 * C1469 + C34895 * C545 +
             C35475 + C35475 + C34889 * C569) *
                C153464 +
            (C35499 + C35498 + C35497 + C35496) * C153818) *
               C153626 * C2546) *
              C153511 * C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C11348 * C136 + C11353 + C11353 + C153851 * C152 + C11350 * C329 +
             C11354 + C11354 + C153671 * C353) *
                C11344 +
            (C11407 + C11408) * C11345 + C11417 * C11346 + C11418 * C153852) *
               C153626 * C153910 -
           (C12371 * C153852 + C12372 * C11346 + (C11961 + C11962) * C11345 +
            (C11350 * C1057 + C11907 + C11907 + C153671 * C1069 +
             C11348 * C542 + C11908 + C11908 + C153851 * C566) *
                C11344) *
               C153626 * C153911 +
           ((C11348 * C543 + C11909 + C11909 + C153851 * C567 + C11350 * C1461 +
             C11910 + C11910 + C153671 * C1471) *
                C11344 +
            (C11963 + C11964) * C11345 + (C11965 + C11966) * C11346 +
            (C11967 + C11968) * C153852) *
               C153626 * C2546) *
              C153511 * C153829 +
          (((C11962 + C11961) * C11344 + (C11960 + C11959) * C11345 +
            (C11958 + C11957) * C11346 + (C12383 + C12384) * C153852) *
               C153626 * C153911 -
           (C11419 * C153852 + C11420 * C11346 + (C11410 + C11409) * C11345 +
            (C11408 + C11407) * C11344) *
               C153626 * C153910 -
           ((C11350 * C1457 + C11931 + C11931 + C153671 * C1467 +
             C11348 * C547 + C11932 + C11932 + C153851 * C571) *
                C153852 +
            (C11968 + C11967) * C11346 + (C11966 + C11965) * C11345 +
            (C11964 + C11963) * C11344) *
               C153626 * C2546) *
              C153511 * C153498)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C11348 * C136 + C11353 + C11353 + C153851 * C152 + C11350 * C329 +
              C11354 + C11354 + C153671 * C353) *
                 C153818 +
             (C11407 + C11408) * C153464) *
                C47609 +
            ((C19416 + C19417) * C153818 + C19382 * C153464) * C47610 +
            C58674 * C153890) *
               C153910 -
           (C62220 * C153890 +
            (C19384 * C153464 + (C19418 + C19419) * C153818) * C47610 +
            (C19389 * C153464 + (C19417 + C19416) * C153818) * C47609) *
               C153911 +
           (C58674 * C47609 +
            ((C22991 + C22992) * C153818 + C58663 * C153464) * C47610 +
            ((C62223 + C62224) * C153818 + (C58677 + C58678) * C153464) *
                C153890) *
               C2546) *
              C153511 * C153829 +
          (((C19382 * C153818 + C18777 * C153464) * C47609 +
            (C19390 * C153818 + C19391 * C153464) * C47610 +
            (C58663 * C153818 + (C19422 + C19423) * C153464) * C153890) *
               C153911 -
           (C58673 * C153890 + (C12372 * C153464 + C19389 * C153818) * C47610 +
            ((C11410 + C11409) * C153464 + (C11408 + C11407) * C153818) *
                C47609) *
               C153910 -
           (((C11350 * C9115 + C22981 + C22981 + C153671 * C9121 +
              C11348 * C7675 + C22982 + C22982 + C153851 * C7683) *
                 C153464 +
             (C58678 + C58677) * C153818) *
                C153890 +
            ((C19423 + C19422) * C153464 + C58662 * C153818) * C47610 +
            C58673 * C47609) *
               C2546) *
              C153511 * C153498)) /
            (p * q * std::sqrt(p + q));
    d2ee[164] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C11348 * C136 + C11353 + C11353 + C153851 * C152 + C11350 * C329 +
             C11354 + C11354 + C153671 * C353) *
                C11344 +
            (C11407 + C11408) * C11345 + C11417 * C11346 + C11418 * C153852) *
               C153626 * C2030 -
           (C12371 * C153852 + C12372 * C11346 + (C11961 + C11962) * C11345 +
            (C11350 * C1057 + C11907 + C11907 + C153671 * C1069 +
             C11348 * C542 + C11908 + C11908 + C153851 * C566) *
                C11344) *
               C153626 * C153591) *
              C320 +
          (((C11348 * C1057 + C12643 + C12643 + C153851 * C1069 +
             C11350 * C1892 + C12644 + C12644 + C153671 * C1902) *
                C11344 +
            (C12677 + C12678) * C11345 + (C12679 + C12680) * C11346 +
            (C12681 + C12682) * C153852) *
               C153626 * C153591 -
           (C12163 * C153852 + C12164 * C11346 + (C11687 + C11688) * C11345 +
            (C11350 * C330 + C11633 + C11633 + C153671 * C354 + C11348 * C329 +
             C11634 + C11634 + C153851 * C353) *
                C11344) *
               C153626 * C2030) *
              C321 +
          (((C11348 * C330 + C11635 + C11635 + C153851 * C354 + C11350 * C1319 +
             C11636 + C11636 + C153671 * C1329) *
                C11344 +
            (C11689 + C11690) * C11345 + (C11691 + C11692) * C11346 +
            (C11693 + C11694) * C153852) *
               C153626 * C2030 -
           ((C11350 * C4306 + C13863 + C13863 + C153671 * C4314 +
             C11348 * C1889 + C13864 + C13864 + C153851 * C1899) *
                C153852 +
            (C11350 * C4305 + C13865 + C13865 + C153671 * C4313 +
             C11348 * C1890 + C13866 + C13866 + C153851 * C1900) *
                C11346 +
            (C11350 * C4304 + C13867 + C13867 + C153671 * C4312 +
             C11348 * C1891 + C13868 + C13868 + C153851 * C1901) *
                C11345 +
            (C11350 * C4303 + C13869 + C13869 + C153671 * C4311 +
             C11348 * C1892 + C13870 + C13870 + C153851 * C1902) *
                C11344) *
               C153626 * C153591) *
              C322) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C11348 * C136 + C11353 + C11353 + C153851 * C152 + C11350 * C329 +
             C11354 + C11354 + C153671 * C353) *
                C11344 +
            (C11407 + C11408) * C11345 + C11417 * C11346 + C11418 * C153852) *
               C153626 * C2030 -
           (C12371 * C153852 + C12372 * C11346 + (C11961 + C11962) * C11345 +
            (C11350 * C1057 + C11907 + C11907 + C153671 * C1069 +
             C11348 * C542 + C11908 + C11908 + C153851 * C566) *
                C11344) *
               C153626 * C153591) *
              C153511 * C1225 +
          (((C11962 + C11961) * C11344 + (C11960 + C11959) * C11345 +
            (C11958 + C11957) * C11346 + (C12383 + C12384) * C153852) *
               C153626 * C153591 -
           (C11419 * C153852 + C11420 * C11346 + (C11410 + C11409) * C11345 +
            (C11408 + C11407) * C11344) *
               C153626 * C2030) *
              C153511 * C1226 +
          ((C11417 * C11344 + C11418 * C11345 + (C11414 + C11413) * C11346 +
            (C11415 + C11416) * C153852) *
               C153626 * C2030 -
           ((C11350 * C1062 + C12377 + C12377 + C153671 * C1074 +
             C11348 * C548 + C12378 + C12378 + C153851 * C572) *
                C153852 +
            (C12384 + C12383) * C11346 + C12371 * C11345 + C12372 * C11344) *
               C153626 * C153591) *
              C153511 * C1227)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C34895 * C136 + C34904 + C34904 + C34889 * C152 + C34897 * C329 +
             C34905 + C34905 + C34890 * C353 + C34899 * C330 + C34906 + C34906 +
             C34891 * C354 + C34901 * C1319 + C34907 + C34907 +
             C153860 * C1329) *
                C153818 +
            (C34972 + C34973 + C34974 + C34975) * C153464) *
               C153626 * C2030 -
           ((C35492 + C35493 + C35494 + C35495) * C153464 +
            (C34901 * C4303 + C35448 + C35448 + C153860 * C4311 +
             C34899 * C1892 + C35449 + C35449 + C34891 * C1902 +
             C34897 * C1057 + C35450 + C35450 + C34890 * C1069 + C34895 * C542 +
             C35451 + C35451 + C34889 * C566) *
                C153818) *
               C153626 * C153591) *
              C153511 * C1225 +
          (((C35495 + C35494 + C35493 + C35492) * C153818 +
            (C35932 + C35933 + C35934 + C35935) * C153464) *
               C153626 * C153591 -
           ((C34976 + C34977 + C34978 + C34979) * C153464 +
            (C34975 + C34974 + C34973 + C34972) * C153818) *
               C153626 * C2030) *
              C153511 * C1226 +
          (((C34979 + C34978 + C34977 + C34976) * C153818 +
            (C34980 + C34981 + C34982 + C34983) * C153464) *
               C153626 * C2030 -
           ((C34901 * C4306 + C35920 + C35920 + C153860 * C4314 +
             C34899 * C1889 + C35921 + C35921 + C34891 * C1899 +
             C34897 * C1060 + C35922 + C35922 + C34890 * C1072 + C34895 * C539 +
             C35923 + C35923 + C34889 * C563) *
                C153464 +
            (C35935 + C35934 + C35933 + C35932) * C153818) *
               C153626 * C153591) *
              C153511 * C1227)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C34895 * C136 + C34904 + C34904 + C34889 * C152 + C34897 * C329 +
             C34905 + C34905 + C34890 * C353 + C34899 * C330 + C34906 + C34906 +
             C34891 * C354 + C34901 * C1319 + C34907 + C34907 +
             C153860 * C1329) *
                C153818 +
            (C34972 + C34973 + C34974 + C34975) * C153464) *
               C153626 * C2030 -
           ((C35492 + C35493 + C35494 + C35495) * C153464 +
            (C34901 * C4303 + C35448 + C35448 + C153860 * C4311 +
             C34899 * C1892 + C35449 + C35449 + C34891 * C1902 +
             C34897 * C1057 + C35450 + C35450 + C34890 * C1069 + C34895 * C542 +
             C35451 + C35451 + C34889 * C566) *
                C153818) *
               C153626 * C153591) *
              C320 +
          (((C34895 * C1057 + C36194 + C36194 + C34889 * C1069 +
             C34897 * C1892 + C36195 + C36195 + C34890 * C1902 +
             C34899 * C4303 + C36196 + C36196 + C34891 * C4311 +
             C34901 * C5703 + C36197 + C36197 + C153860 * C5709) *
                C153818 +
            (C36222 + C36223 + C36224 + C36225) * C153464) *
               C153626 * C153591 -
           ((C35234 + C35235 + C35236 + C35237) * C153464 +
            (C34901 * C3127 + C35190 + C35190 + C153860 * C3135 +
             C34899 * C1319 + C35191 + C35191 + C34891 * C1329 + C34897 * C330 +
             C35192 + C35192 + C34890 * C354 + C34895 * C329 + C35193 + C35193 +
             C34889 * C353) *
                C153818) *
               C153626 * C2030) *
              C321 +
          (((C34895 * C330 + C35194 + C35194 + C34889 * C354 + C34897 * C1319 +
             C35195 + C35195 + C34890 * C1329 + C34899 * C3127 + C35196 +
             C35196 + C34891 * C3135 + C34901 * C4723 + C35197 + C35197 +
             C153860 * C4729) *
                C153818 +
            (C35238 + C35239 + C35240 + C35241) * C153464) *
               C153626 * C2030 -
           ((C34901 * C29093 + C37406 + C37406 + C153860 * C29097 +
             C34899 * C5702 + C37407 + C37407 + C34891 * C5708 +
             C34897 * C4304 + C37408 + C37408 + C34890 * C4312 +
             C34895 * C1891 + C37409 + C37409 + C34889 * C1901) *
                C153464 +
            (C34901 * C29092 + C37410 + C37410 + C153860 * C29096 +
             C34899 * C5703 + C37411 + C37411 + C34891 * C5709 +
             C34897 * C4303 + C37412 + C37412 + C34890 * C4311 +
             C34895 * C1892 + C37413 + C37413 + C34889 * C1902) *
                C153818) *
               C153626 * C153591) *
              C322) *
         C153492) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C11348 * C136 + C11353 + C11353 + C153851 * C152 + C11350 * C329 +
              C11354 + C11354 + C153671 * C353) *
                 C153818 +
             (C11407 + C11408) * C153464) *
                C47609 +
            ((C19416 + C19417) * C153818 + C19382 * C153464) * C47610 +
            C58674 * C153890) *
               C2030 -
           ((C58662 * C153464 + (C22992 + C22991) * C153818) * C153890 +
            (C19384 * C153464 + (C19418 + C19419) * C153818) * C47610 +
            (C19389 * C153464 + (C19417 + C19416) * C153818) * C47609) *
               C153591) *
              C153511 * C1225 +
          (((C19382 * C153818 + C18777 * C153464) * C47609 +
            (C19390 * C153818 + C19391 * C153464) * C47610 +
            (C58663 * C153818 + (C19422 + C19423) * C153464) * C153890) *
               C153591 -
           (C58673 * C153890 + (C12372 * C153464 + C19389 * C153818) * C47610 +
            ((C11410 + C11409) * C153464 + (C11408 + C11407) * C153818) *
                C47609) *
               C2030) *
              C153511 * C1226 +
          (((C11417 * C153818 + C11418 * C153464) * C47609 +
            (C18777 * C153818 + C20005 * C153464) * C47610 +
            (C19391 * C153818 + (C11967 + C11968) * C153464) * C153890) *
               C2030 -
           (((C11350 * C8488 + C14389 + C14389 + C153671 * C8490 +
              C11348 * C2241 + C14390 + C14390 + C153851 * C2251) *
                 C153464 +
             (C19423 + C19422) * C153818) *
                C153890 +
            ((C11968 + C11967) * C153464 + C19383 * C153818) * C47610 +
            (C12371 * C153464 + C12372 * C153818) * C47609) *
               C153591) *
              C153511 * C1227)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C11348 * C136 + C11353 + C11353 + C153851 * C152 + C11350 * C329 +
              C11354 + C11354 + C153671 * C353) *
                 C153818 +
             (C11407 + C11408) * C153464) *
                C47609 +
            ((C19416 + C19417) * C153818 + C19382 * C153464) * C47610 +
            C58674 * C153890) *
               C2030 -
           ((C58662 * C153464 + (C22992 + C22991) * C153818) * C153890 +
            (C19384 * C153464 + (C19418 + C19419) * C153818) * C47610 +
            (C19389 * C153464 + (C19417 + C19416) * C153818) * C47609) *
               C153591) *
              C320 +
          ((((C20419 + C20420) * C153818 + C20396 * C153464) * C47609 +
            ((C21219 + C21220) * C153818 + C59645 * C153464) * C47610 +
            ((C60451 + C60452) * C153818 + (C59655 + C59656) * C153464) *
                C153890) *
               C153591 -
           (C60450 * C153890 +
            (C20406 * C153464 + (C20420 + C20419) * C153818) * C47610 +
            ((C11687 + C11688) * C153464 +
             (C11350 * C330 + C11633 + C11633 + C153671 * C354 + C11348 * C329 +
              C11634 + C11634 + C153851 * C353) *
                 C153818) *
                C47609) *
               C2030) *
              C321 +
          ((((C11348 * C330 + C11635 + C11635 + C153851 * C354 +
              C11350 * C1319 + C11636 + C11636 + C153671 * C1329) *
                 C153818 +
             (C11689 + C11690) * C153464) *
                C47609 +
            ((C22201 + C22202) * C153818 + (C19084 + C19085) * C153464) *
                C47610 +
            ((C61431 + C61432) * C153818 + (C58368 + C58369) * C153464) *
                C153890) *
               C2030 -
           (((C11350 * C31999 + C61423 + C61423 + C153671 * C32001 +
              C11348 * C6303 + C61424 + C61424 + C153851 * C6315) *
                 C153464 +
             (C11350 * C30191 + C61425 + C61425 + C153671 * C30195 +
              C11348 * C6305 + C61426 + C61426 + C153851 * C6317) *
                 C153818) *
                C153890 +
            ((C58369 + C58368) * C153464 + (C61432 + C61431) * C153818) *
                C47610 +
            ((C19085 + C19084) * C153464 + (C22202 + C22201) * C153818) *
                C47609) *
               C153591) *
              C322) *
         C153492) /
            (p * q * std::sqrt(p + q));
    d2ee[165] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C34895 * C136 + C34904 + C34904 + C34889 * C152 + C34897 * C329 +
             C34905 + C34905 + C34890 * C353 + C34899 * C330 + C34906 + C34906 +
             C34891 * C354 + C34901 * C1319 + C34907 + C34907 +
             C153860 * C1329) *
                C153454 * C153853 +
            (C44386 + C44387 + C44388 + C44389) * C153454 * C153713) *
               C153527 * C153837 -
           ((C34901 * C5703 + C36197 + C36197 + C153860 * C5709 +
             C34899 * C4303 + C36196 + C36196 + C34891 * C4311 +
             C34897 * C1892 + C36195 + C36195 + C34890 * C1902 +
             C34895 * C1057 + C36194 + C36194 + C34889 * C1069) *
                C153454 * C153713 +
            (C34901 * C3127 + C35190 + C35190 + C153860 * C3135 +
             C34899 * C1319 + C35191 + C35191 + C34891 * C1329 + C34897 * C330 +
             C35192 + C35192 + C34890 * C354 + C34895 * C329 + C35193 + C35193 +
             C34889 * C353) *
                C153454 * C153853) *
               C153527 * C153563) *
              C153906 +
          (((C35237 + C35236 + C35235 + C35234) * C153454 * C153853 +
            (C36222 + C36223 + C36224 + C36225) * C153454 * C153713) *
               C153527 * C153563 -
           ((C35492 + C35493 + C35494 + C35495) * C153454 * C153713 +
            (C34975 + C34974 + C34973 + C34972) * C153454 * C153853) *
               C153527 * C153837) *
              C153907 +
          (((C34979 + C34978 + C34977 + C34976) * C153454 * C153853 +
            (C35932 + C35933 + C35934 + C35935) * C153454 * C153713) *
               C153527 * C153837 -
           ((C34901 * C5701 + C36210 + C36210 + C153860 * C5707 +
             C34899 * C4305 + C36211 + C36211 + C34891 * C4313 +
             C34897 * C1890 + C36212 + C36212 + C34890 * C1900 +
             C34895 * C1059 + C36213 + C36213 + C34889 * C1071) *
                C153454 * C153713 +
            (C35717 + C35716 + C35715 + C35714) * C153454 * C153853) *
               C153527 * C153563) *
              C752)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C11348 * C136 + C11353 + C11353 + C153851 * C152 + C11350 * C329 +
              C11354 + C11354 + C153671 * C353) *
                 C2818 +
             (C11407 + C11408) * C2819 + C11417 * C153874) *
                C153853 +
            ((C19416 + C19417) * C2818 + C19382 * C2819 + C18777 * C153874) *
                C153713) *
               C153527 * C153837 -
           ((C19714 * C153874 + (C12678 + C12677) * C2819 +
             (C11350 * C1892 + C12644 + C12644 + C153671 * C1902 +
              C11348 * C1057 + C12643 + C12643 + C153851 * C1069) *
                 C2818) *
                C153713 +
            (C12164 * C153874 + (C11687 + C11688) * C2819 +
             (C11350 * C330 + C11633 + C11633 + C153671 * C354 + C11348 * C329 +
              C11634 + C11634 + C153851 * C353) *
                 C2818) *
                C153853) *
               C153527 * C153563) *
              C153906 +
          ((((C11688 + C11687) * C2818 + (C11686 + C11685) * C2819 +
             (C11684 + C11683) * C153874) *
                C153853 +
            ((C12677 + C12678) * C2818 + (C12679 + C12680) * C2819 +
             (C12681 + C12682) * C153874) *
                C153713) *
               C153527 * C153563 -
           ((C12371 * C153874 + C12372 * C2819 + C19389 * C2818) * C153713 +
            (C11420 * C153874 + (C11410 + C11409) * C2819 +
             (C11408 + C11407) * C2818) *
                C153853) *
               C153527 * C153837) *
              C153907 +
          (((C11417 * C2818 + C11418 * C2819 + (C11414 + C11413) * C153874) *
                C153853 +
            (C18777 * C2818 + (C11958 + C11957) * C2819 +
             (C12383 + C12384) * C153874) *
                C153713) *
               C153527 * C153837 -
           (((C11350 * C1888 + C12663 + C12663 + C153671 * C1898 +
              C11348 * C1061 + C12664 + C12664 + C153851 * C1073) *
                 C153874 +
             (C12682 + C12681) * C2819 + C19714 * C2818) *
                C153713 +
            ((C12176 + C12175) * C153874 + C12163 * C2819 + C12164 * C2818) *
                C153853) *
               C153527 * C153563) *
              C752)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C11348 * C136 + C11353 + C11353 + C153851 * C152 + C11350 * C329 +
             C11354 + C11354 + C153671 * C353) *
                C153454 * C63320 +
            (C19416 + C19417) * C153454 * C63321 + C67263 * C63322 +
            C67267 * C153867) *
               C153527 * C153837 -
           ((C60452 + C60451) * C153454 * C153867 + C60440 * C153454 * C63322 +
            (C20420 + C20419) * C153454 * C63321 +
            (C11350 * C330 + C11633 + C11633 + C153671 * C354 + C11348 * C329 +
             C11634 + C11634 + C153851 * C353) *
                C153454 * C63320) *
               C153527 * C153563) *
              C153906 +
          (((C11688 + C11687) * C153454 * C63320 + C20396 * C153454 * C63321 +
            C59645 * C153454 * C63322 + (C59655 + C59656) * C153454 * C153867) *
               C153527 * C153563 -
           (C67265 * C153867 + C67266 * C63322 + C19389 * C153454 * C63321 +
            (C11408 + C11407) * C153454 * C63320) *
               C153527 * C153837) *
              C153907 +
          ((C11417 * C153454 * C63320 + C18777 * C153454 * C63321 +
            C19391 * C153454 * C63322 + (C19422 + C19423) * C153454 * C153867) *
               C153527 * C153837 -
           ((C11350 * C6301 + C21209 + C21209 + C153671 * C6313 +
             C11348 * C6302 + C21210 + C21210 + C153851 * C6314) *
                C153454 * C153867 +
            (C20424 + C20423) * C153454 * C63322 + C19714 * C153454 * C63321 +
            C12164 * C153454 * C63320) *
               C153527 * C153563) *
              C752)) /
            (p * q * std::sqrt(p + q));
    d2ee[166] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C34895 * C136 + C34904 + C34904 + C34889 * C152 + C34897 * C329 +
              C34905 + C34905 + C34890 * C353 + C34899 * C330 + C34906 +
              C34906 + C34891 * C354 + C34901 * C1319 + C34907 + C34907 +
              C153860 * C1329) *
                 C153454 * C153853 +
             (C44386 + C44387 + C44388 + C44389) * C153454 * C153713) *
                C153838 -
            ((C44390 + C44391 + C44392 + C44393) * C153454 * C153713 +
             (C44389 + C44388 + C44387 + C44386) * C153454 * C153853) *
                C153591) *
               C153837 +
           (((C45056 + C45057 + C45058 + C45059) * C153454 * C153853 +
             (C34895 * C1461 + C36759 + C36759 + C34889 * C1471 +
              C34897 * C3441 + C36758 + C36758 + C34890 * C3449 +
              C34899 * C4959 + C36757 + C36757 + C34891 * C4965 +
              C34901 * C28650 + C36756 + C36756 + C153860 * C28654) *
                 C153454 * C153713) *
                C153591 -
            ((C45059 + C45058 + C45057 + C45056) * C153454 * C153713 +
             (C34901 * C3127 + C35190 + C35190 + C153860 * C3135 +
              C34899 * C1319 + C35191 + C35191 + C34891 * C1329 +
              C34897 * C330 + C35192 + C35192 + C34890 * C354 + C34895 * C329 +
              C35193 + C35193 + C34889 * C353) *
                 C153454 * C153853) *
                C153838) *
               C153563) *
              C323 +
          ((((C35495 + C35494 + C35493 + C35492) * C153454 * C153853 +
             (C35496 + C35497 + C35498 + C35499) * C153454 * C153713) *
                C153591 -
            ((C35492 + C35493 + C35494 + C35495) * C153454 * C153713 +
             (C34975 + C34974 + C34973 + C34972) * C153454 * C153853) *
                C153838) *
               C153837 +
           (((C35237 + C35236 + C35235 + C35234) * C153454 * C153853 +
             (C36222 + C36223 + C36224 + C36225) * C153454 * C153713) *
                C153838 -
            ((C34901 * C28651 + C36752 + C36752 + C153860 * C28655 +
              C34899 * C4958 + C36753 + C36753 + C34891 * C4964 +
              C34897 * C3442 + C36754 + C36754 + C34890 * C3450 +
              C34895 * C1460 + C36755 + C36755 + C34889 * C1470) *
                 C153454 * C153713 +
             (C36225 + C36224 + C36223 + C36222) * C153454 * C153853) *
                C153591) *
               C153563) *
              C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C11348 * C136 + C11353 + C11353 + C153851 * C152 +
               C11350 * C329 + C11354 + C11354 + C153671 * C353) *
                  C2818 +
              (C11407 + C11408) * C2819 + C11417 * C153874) *
                 C153853 +
             ((C19416 + C19417) * C2818 + C19382 * C2819 + C18777 * C153874) *
                 C153713) *
                C153838 -
            ((C19383 * C153874 + C19384 * C2819 + (C19418 + C19419) * C2818) *
                 C153713 +
             (C12372 * C153874 + C19389 * C2819 + (C19417 + C19416) * C2818) *
                 C153853) *
                C153591) *
               C153837 +
           ((((C20419 + C20420) * C2818 + C20396 * C2819 + C20397 * C153874) *
                 C153853 +
             ((C11348 * C1461 + C13216 + C13216 + C153851 * C1471 +
               C11350 * C3441 + C13215 + C13215 + C153671 * C3449) *
                  C2818 +
              (C20421 + C20422) * C2819 + (C20423 + C20424) * C153874) *
                 C153713) *
                C153591 -
            ((C19714 * C153874 + C20406 * C2819 + (C20420 + C20419) * C2818) *
                 C153713 +
             (C12164 * C153874 + (C11687 + C11688) * C2819 +
              (C11350 * C330 + C11633 + C11633 + C153671 * C354 +
               C11348 * C329 + C11634 + C11634 + C153851 * C353) *
                  C2818) *
                 C153853) *
                C153838) *
               C153563) *
              C323 +
          ((((C19382 * C2818 + C18777 * C2819 + C20005 * C153874) * C153853 +
             (C19390 * C2818 + C19391 * C2819 + (C11967 + C11968) * C153874) *
                 C153713) *
                C153591 -
            ((C12371 * C153874 + C12372 * C2819 + C19389 * C2818) * C153713 +
             (C11420 * C153874 + (C11410 + C11409) * C2819 +
              (C11408 + C11407) * C2818) *
                 C153853) *
                C153838) *
               C153837 +
           ((((C11688 + C11687) * C2818 + (C11686 + C11685) * C2819 +
              (C11684 + C11683) * C153874) *
                 C153853 +
             (C20396 * C2818 + C20397 * C2819 + (C12681 + C12682) * C153874) *
                 C153713) *
                C153838 -
            (((C11350 * C3444 + C13209 + C13209 + C153671 * C3452 +
               C11348 * C1458 + C13210 + C13210 + C153851 * C1468) *
                  C153874 +
              (C20424 + C20423) * C2819 + (C20422 + C20421) * C2818) *
                 C153713 +
             ((C12682 + C12681) * C153874 + C19714 * C2819 + C20406 * C2818) *
                 C153853) *
                C153591) *
               C153563) *
              C153498)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C11348 * C136 + C11353 + C11353 + C153851 * C152 + C11350 * C329 +
              C11354 + C11354 + C153671 * C353) *
                 C153454 * C63320 +
             (C19416 + C19417) * C153454 * C63321 + C67263 * C63322 +
             C67267 * C153867) *
                C153838 -
            ((C62224 + C62223) * C153454 * C153867 + C62208 * C153454 * C63322 +
             (C19418 + C19419) * C153454 * C63321 +
             (C19417 + C19416) * C153454 * C63320) *
                C153591) *
               C153837 +
           (((C20419 + C20420) * C153454 * C63320 +
             (C21219 + C21220) * C153454 * C63321 +
             (C60451 + C60452) * C153454 * C63322 +
             (C11348 * C9117 + C60444 + C60444 + C153851 * C9123 +
              C11350 * C31195 + C60443 + C60443 + C153671 * C31199) *
                 C153454 * C153867) *
                C153591 -
            ((C60452 + C60451) * C153454 * C153867 + C60440 * C153454 * C63322 +
             (C20420 + C20419) * C153454 * C63321 +
             (C11350 * C330 + C11633 + C11633 + C153671 * C354 + C11348 * C329 +
              C11634 + C11634 + C153851 * C353) *
                 C153454 * C63320) *
                C153838) *
               C153563) *
              C323 +
          (((C19382 * C153454 * C63320 + C19390 * C153454 * C63321 +
             C58663 * C153454 * C63322 +
             (C58677 + C58678) * C153454 * C153867) *
                C153591 -
            (C67265 * C153867 + C67266 * C63322 + C19389 * C153454 * C63321 +
             (C11408 + C11407) * C153454 * C63320) *
                C153838) *
               C153837 +
           (((C11688 + C11687) * C153454 * C63320 + C20396 * C153454 * C63321 +
             C59645 * C153454 * C63322 +
             (C59655 + C59656) * C153454 * C153867) *
                C153838 -
            ((C11350 * C31196 + C60441 + C60441 + C153671 * C31200 +
              C11348 * C9116 + C60442 + C60442 + C153851 * C9122) *
                 C153454 * C153867 +
             (C59656 + C59655) * C153454 * C63322 + C59650 * C153454 * C63321 +
             C20406 * C153454 * C63320) *
                C153591) *
               C153563) *
              C153498)) /
            (p * q * std::sqrt(p + q));
    d2ee[167] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C11348 * C136 + C11353 + C11353 + C153851 * C152 +
                 C11350 * C329 + C11354 + C11354 + C153671 * C353) *
                    C2818 +
                (C11407 + C11408) * C2819 + C11417 * C153874) *
                   C153853 +
               ((C11348 * C542 + C11908 + C11908 + C153851 * C566 +
                 C11350 * C1057 + C11907 + C11907 + C153671 * C1069) *
                    C2818 +
                (C11962 + C11961) * C2819 + C18777 * C153874) *
                   C153713) *
                  C153527 * C153511 * C130 -
              ((C12371 * C153874 + C12372 * C2819 + (C11961 + C11962) * C2818) *
                   C153713 +
               (C11420 * C153874 + (C11410 + C11409) * C2819 +
                (C11408 + C11407) * C2818) *
                   C153853) *
                  C153527 * C153511 * C131 +
              ((C11417 * C2818 + C11418 * C2819 + (C11414 + C11413) * C153874) *
                   C153853 +
               (C18777 * C2818 + (C11958 + C11957) * C2819 +
                (C12383 + C12384) * C153874) *
                   C153713) *
                  C153527 * C153511 * C132 -
              (((C11350 * C1062 + C12377 + C12377 + C153671 * C1074 +
                 C11348 * C548 + C12378 + C12378 + C153851 * C572) *
                    C153874 +
                (C12384 + C12383) * C2819 + C12371 * C2818) *
                   C153713 +
               ((C11416 + C11415) * C153874 + C11419 * C2819 + C11420 * C2818) *
                   C153853) *
                  C153527 * C153511 * C133) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C11348 * C136 + C11353 + C11353 + C153851 * C152 +
                  C11350 * C329 + C11354 + C11354 + C153671 * C353) *
                     C2818 +
                 (C11407 + C11408) * C2819 + C11417 * C153874) *
                    C153853 +
                ((C11348 * C542 + C11908 + C11908 + C153851 * C566 +
                  C11350 * C1057 + C11907 + C11907 + C153671 * C1069) *
                     C2818 +
                 (C11962 + C11961) * C2819 + C18777 * C153874) *
                    C153713) *
                   C153527 * C320 -
               (((C12680 + C12679) * C153874 + (C12678 + C12677) * C2819 +
                 (C11350 * C1892 + C12644 + C12644 + C153671 * C1902 +
                  C11348 * C1057 + C12643 + C12643 + C153851 * C1069) *
                     C2818) *
                    C153713 +
                (C12164 * C153874 + (C11687 + C11688) * C2819 +
                 (C11350 * C330 + C11633 + C11633 + C153671 * C354 +
                  C11348 * C329 + C11634 + C11634 + C153851 * C353) *
                     C2818) *
                    C153853) *
                   C153527 * C321 +
               (((C11348 * C330 + C11635 + C11635 + C153851 * C354 +
                  C11350 * C1319 + C11636 + C11636 + C153671 * C1329) *
                     C2818 +
                 (C11689 + C11690) * C2819 + (C11691 + C11692) * C153874) *
                    C153853 +
                ((C11348 * C1892 + C13870 + C13870 + C153851 * C1902 +
                  C11350 * C4303 + C13869 + C13869 + C153671 * C4311) *
                     C2818 +
                 (C19084 + C19085) * C2819 + (C19086 + C19087) * C153874) *
                    C153713) *
                   C153527 * C322) *
                  C323 +
              ((((C11688 + C11687) * C2818 + (C11686 + C11685) * C2819 +
                 (C11684 + C11683) * C153874) *
                    C153853 +
                ((C12677 + C12678) * C2818 + (C12679 + C12680) * C2819 +
                 (C12681 + C12682) * C153874) *
                    C153713) *
                   C153527 * C321 -
               ((C12371 * C153874 + C12372 * C2819 +
                 (C11961 + C11962) * C2818) *
                    C153713 +
                (C11420 * C153874 + (C11410 + C11409) * C2819 +
                 (C11408 + C11407) * C2818) *
                    C153853) *
                   C153527 * C320 -
               (((C11350 * C4306 + C13863 + C13863 + C153671 * C4314 +
                  C11348 * C1889 + C13864 + C13864 + C153851 * C1899) *
                     C153874 +
                 (C19087 + C19086) * C2819 + (C19085 + C19084) * C2818) *
                    C153713 +
                ((C11694 + C11693) * C153874 + (C11692 + C11691) * C2819 +
                 (C11690 + C11689) * C2818) *
                    C153853) *
                   C153527 * C322) *
                  C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C11348 * C136 + C11353 + C11353 + C153851 * C152 + C11350 * C329 +
              C11354 + C11354 + C153671 * C353) *
                 C2818 +
             (C11407 + C11408) * C2819 + C11417 * C153874) *
                C153853 +
            ((C19416 + C19417) * C2818 + C19382 * C2819 + C18777 * C153874) *
                C153713) *
               C535 -
           ((C19383 * C153874 + C19384 * C2819 + (C19418 + C19419) * C2818) *
                C153713 +
            (C12372 * C153874 + C19389 * C2819 + (C19417 + C19416) * C2818) *
                C153853) *
               C536 +
           (((C19419 + C19418) * C2818 + C19390 * C2819 + C19391 * C153874) *
                C153853 +
            ((C11348 * C2244 + C14396 + C14396 + C153851 * C2254 +
              C11350 * C6306 + C14395 + C14395 + C153671 * C6318) *
                 C2818 +
             (C19420 + C19421) * C2819 + (C19422 + C19423) * C153874) *
                C153713) *
               C537) *
              C153511 * C323 +
          (((C19382 * C2818 + C18777 * C2819 + (C11958 + C11957) * C153874) *
                C153853 +
            (C19390 * C2818 + C19391 * C2819 + (C11967 + C11968) * C153874) *
                C153713) *
               C536 -
           ((C12371 * C153874 + C12372 * C2819 + C19389 * C2818) * C153713 +
            (C11420 * C153874 + (C11410 + C11409) * C2819 +
             (C11408 + C11407) * C2818) *
                C153853) *
               C535 -
           (((C11350 * C8488 + C14389 + C14389 + C153671 * C8490 +
              C11348 * C2241 + C14390 + C14390 + C153851 * C2251) *
                 C153874 +
             (C19423 + C19422) * C2819 + (C19421 + C19420) * C2818) *
                C153713 +
            ((C11968 + C11967) * C153874 + C19383 * C2819 + C19384 * C2818) *
                C153853) *
               C537) *
              C153511 * C153498)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C34895 * C136 + C34904 + C34904 + C34889 * C152 + C34897 * C329 +
            C34905 + C34905 + C34890 * C353 + C34899 * C330 + C34906 + C34906 +
            C34891 * C354 + C34901 * C1319 + C34907 + C34907 +
            C153860 * C1329) *
               C153454 * C153853 +
           (C34895 * C542 + C35451 + C35451 + C34889 * C566 + C34897 * C1057 +
            C35450 + C35450 + C34890 * C1069 + C34899 * C1892 + C35449 +
            C35449 + C34891 * C1902 + C34901 * C4303 + C35448 + C35448 +
            C153860 * C4311) *
               C153454 * C153713) *
              C153527 * C153511 * C130 -
          ((C35492 + C35493 + C35494 + C35495) * C153454 * C153713 +
           (C34975 + C34974 + C34973 + C34972) * C153454 * C153853) *
              C153527 * C153511 * C131 +
          ((C34979 + C34978 + C34977 + C34976) * C153454 * C153853 +
           (C35932 + C35933 + C35934 + C35935) * C153454 * C153713) *
              C153527 * C153511 * C132 -
          ((C34901 * C4306 + C35920 + C35920 + C153860 * C4314 +
            C34899 * C1889 + C35921 + C35921 + C34891 * C1899 + C34897 * C1060 +
            C35922 + C35922 + C34890 * C1072 + C34895 * C539 + C35923 + C35923 +
            C34889 * C563) *
               C153454 * C153713 +
           (C34983 + C34982 + C34981 + C34980) * C153454 * C153853) *
              C153527 * C153511 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C34895 * C136 + C34904 + C34904 + C34889 * C152 + C34897 * C329 +
             C34905 + C34905 + C34890 * C353 + C34899 * C330 + C34906 + C34906 +
             C34891 * C354 + C34901 * C1319 + C34907 + C34907 +
             C153860 * C1329) *
                C153454 * C153853 +
            (C34895 * C542 + C35451 + C35451 + C34889 * C566 + C34897 * C1057 +
             C35450 + C35450 + C34890 * C1069 + C34899 * C1892 + C35449 +
             C35449 + C34891 * C1902 + C34901 * C4303 + C35448 + C35448 +
             C153860 * C4311) *
                C153454 * C153713) *
               C153527 * C320 -
           ((C34901 * C5703 + C36197 + C36197 + C153860 * C5709 +
             C34899 * C4303 + C36196 + C36196 + C34891 * C4311 +
             C34897 * C1892 + C36195 + C36195 + C34890 * C1902 +
             C34895 * C1057 + C36194 + C36194 + C34889 * C1069) *
                C153454 * C153713 +
            (C34901 * C3127 + C35190 + C35190 + C153860 * C3135 +
             C34899 * C1319 + C35191 + C35191 + C34891 * C1329 + C34897 * C330 +
             C35192 + C35192 + C34890 * C354 + C34895 * C329 + C35193 + C35193 +
             C34889 * C353) *
                C153454 * C153853) *
               C153527 * C321 +
           ((C34895 * C330 + C35194 + C35194 + C34889 * C354 + C34897 * C1319 +
             C35195 + C35195 + C34890 * C1329 + C34899 * C3127 + C35196 +
             C35196 + C34891 * C3135 + C34901 * C4723 + C35197 + C35197 +
             C153860 * C4729) *
                C153454 * C153853 +
            (C34895 * C1892 + C37413 + C37413 + C34889 * C1902 +
             C34897 * C4303 + C37412 + C37412 + C34890 * C4311 +
             C34899 * C5703 + C37411 + C37411 + C34891 * C5709 +
             C34901 * C29092 + C37410 + C37410 + C153860 * C29096) *
                C153454 * C153713) *
               C153527 * C322) *
              C323 +
          (((C35237 + C35236 + C35235 + C35234) * C153454 * C153853 +
            (C36222 + C36223 + C36224 + C36225) * C153454 * C153713) *
               C153527 * C321 -
           ((C35492 + C35493 + C35494 + C35495) * C153454 * C153713 +
            (C34975 + C34974 + C34973 + C34972) * C153454 * C153853) *
               C153527 * C320 -
           ((C34901 * C29093 + C37406 + C37406 + C153860 * C29097 +
             C34899 * C5702 + C37407 + C37407 + C34891 * C5708 +
             C34897 * C4304 + C37408 + C37408 + C34890 * C4312 +
             C34895 * C1891 + C37409 + C37409 + C34889 * C1901) *
                C153454 * C153713 +
            (C35241 + C35240 + C35239 + C35238) * C153454 * C153853) *
               C153527 * C322) *
              C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C34895 * C136 + C34904 + C34904 + C34889 * C152 + C34897 * C329 +
             C34905 + C34905 + C34890 * C353 + C34899 * C330 + C34906 + C34906 +
             C34891 * C354 + C34901 * C1319 + C34907 + C34907 +
             C153860 * C1329) *
                C153454 * C153853 +
            (C44386 + C44387 + C44388 + C44389) * C153454 * C153713) *
               C535 -
           ((C44390 + C44391 + C44392 + C44393) * C153454 * C153713 +
            (C44389 + C44388 + C44387 + C44386) * C153454 * C153853) *
               C536 +
           ((C44393 + C44392 + C44391 + C44390) * C153454 * C153853 +
            (C34895 * C2244 + C37939 + C37939 + C34889 * C2254 +
             C34897 * C6306 + C37938 + C37938 + C34890 * C6318 +
             C34899 * C6305 + C37937 + C37937 + C34891 * C6317 +
             C34901 * C30191 + C37936 + C37936 + C153860 * C30195) *
                C153454 * C153713) *
               C537) *
              C153511 * C323 +
          (((C35495 + C35494 + C35493 + C35492) * C153454 * C153853 +
            (C35496 + C35497 + C35498 + C35499) * C153454 * C153713) *
               C536 -
           ((C35492 + C35493 + C35494 + C35495) * C153454 * C153713 +
            (C34975 + C34974 + C34973 + C34972) * C153454 * C153853) *
               C535 -
           ((C34901 * C31999 + C37932 + C37932 + C153860 * C32001 +
             C34899 * C6303 + C37933 + C37933 + C34891 * C6315 +
             C34897 * C6304 + C37934 + C37934 + C34890 * C6316 +
             C34895 * C2243 + C37935 + C37935 + C34889 * C2253) *
                C153454 * C153713 +
            (C35499 + C35498 + C35497 + C35496) * C153454 * C153853) *
               C537) *
              C153511 * C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C11348 * C136 + C11353 + C11353 + C153851 * C152 + C11350 * C329 +
            C11354 + C11354 + C153671 * C353) *
               C153454 * C63320 +
           (C19416 + C19417) * C153454 * C63321 + C58660 * C153454 * C63322 +
           (C22991 + C22992) * C153454 * C153867) *
              C153527 * C153511 * C130 -
          (C58662 * C153454 * C153867 + C19384 * C153454 * C63322 +
           C19389 * C153454 * C63321 + (C11408 + C11407) * C153454 * C63320) *
              C153527 * C153511 * C131 +
          (C11417 * C153454 * C63320 + C18777 * C153454 * C63321 +
           C19391 * C153454 * C63322 + (C19422 + C19423) * C153454 * C153867) *
              C153527 * C153511 * C132 -
          ((C11350 * C8488 + C14389 + C14389 + C153671 * C8490 +
            C11348 * C2241 + C14390 + C14390 + C153851 * C2251) *
               C153454 * C153867 +
           (C11968 + C11967) * C153454 * C63322 + C12371 * C153454 * C63321 +
           C11420 * C153454 * C63320) *
              C153527 * C153511 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C11348 * C136 + C11353 + C11353 + C153851 * C152 + C11350 * C329 +
             C11354 + C11354 + C153671 * C353) *
                C153454 * C63320 +
            (C19416 + C19417) * C153454 * C63321 + C58660 * C153454 * C63322 +
            (C22991 + C22992) * C153454 * C153867) *
               C153527 * C320 -
           ((C60452 + C60451) * C153454 * C153867 + C60440 * C153454 * C63322 +
            (C20420 + C20419) * C153454 * C63321 +
            (C11350 * C330 + C11633 + C11633 + C153671 * C354 + C11348 * C329 +
             C11634 + C11634 + C153851 * C353) *
                C153454 * C63320) *
               C153527 * C321 +
           ((C11348 * C330 + C11635 + C11635 + C153851 * C354 + C11350 * C1319 +
             C11636 + C11636 + C153671 * C1329) *
                C153454 * C63320 +
            (C22201 + C22202) * C153454 * C63321 +
            (C61431 + C61432) * C153454 * C63322 +
            (C11348 * C6305 + C61426 + C61426 + C153851 * C6317 +
             C11350 * C30191 + C61425 + C61425 + C153671 * C30195) *
                C153454 * C153867) *
               C153527 * C322) *
              C323 +
          (((C11688 + C11687) * C153454 * C63320 + C20396 * C153454 * C63321 +
            C59645 * C153454 * C63322 + (C59655 + C59656) * C153454 * C153867) *
               C153527 * C321 -
           (C58662 * C153454 * C153867 + C19384 * C153454 * C63322 +
            C19389 * C153454 * C63321 + (C11408 + C11407) * C153454 * C63320) *
               C153527 * C320 -
           ((C11350 * C31999 + C61423 + C61423 + C153671 * C32001 +
             C11348 * C6303 + C61424 + C61424 + C153851 * C6315) *
                C153454 * C153867 +
            (C58369 + C58368) * C153454 * C63322 +
            (C19085 + C19084) * C153454 * C63321 +
            (C11690 + C11689) * C153454 * C63320) *
               C153527 * C322) *
              C153498)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C11348 * C136 + C11353 + C11353 + C153851 * C152 + C11350 * C329 +
             C11354 + C11354 + C153671 * C353) *
                C153454 * C63320 +
            (C19416 + C19417) * C153454 * C63321 + C67263 * C63322 +
            C67267 * C153867) *
               C535 -
           ((C62224 + C62223) * C153454 * C153867 + C62208 * C153454 * C63322 +
            (C19418 + C19419) * C153454 * C63321 +
            (C19417 + C19416) * C153454 * C63320) *
               C536 +
           (C67263 * C63320 + C67267 * C63321 +
            (C62223 + C62224) * C153454 * C63322 +
            (C11348 * C10466 + C62216 + C62216 + C153851 * C10472 +
             C11350 * C34007 + C62215 + C62215 + C153671 * C34011) *
                C153454 * C153867) *
               C537) *
              C153511 * C323 +
          ((C19382 * C153454 * C63320 + C19390 * C153454 * C63321 +
            C58663 * C153454 * C63322 + (C58677 + C58678) * C153454 * C153867) *
               C536 -
           (C67265 * C153867 + C67266 * C63322 + C19389 * C153454 * C63321 +
            (C11408 + C11407) * C153454 * C63320) *
               C535 -
           ((C11350 * C56351 + C62213 + C62213 + C153671 * C56353 +
             C11348 * C10465 + C62214 + C62214 + C153851 * C10471) *
                C153454 * C153867 +
            (C58678 + C58677) * C153454 * C63322 + C67265 * C63321 +
            C67266 * C63320) *
               C537) *
              C153511 * C153498)) /
            (p * q * std::sqrt(p + q));
    d2ee[168] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C34895 * C136 + C34904 + C34904 + C34889 * C152 + C34897 * C329 +
             C34905 + C34905 + C34890 * C353 + C34899 * C330 + C34906 + C34906 +
             C34891 * C354 + C34901 * C1319 + C34907 + C34907 +
             C153860 * C1329) *
                C153454 * C153853 +
            (C44386 + C44387 + C44388 + C44389) * C153454 * C153713) *
               C153838 -
           ((C44390 + C44391 + C44392 + C44393) * C153454 * C153713 +
            (C44389 + C44388 + C44387 + C44386) * C153454 * C153853) *
               C153591) *
              C153511 * C153906 +
          (((C35495 + C35494 + C35493 + C35492) * C153454 * C153853 +
            (C35496 + C35497 + C35498 + C35499) * C153454 * C153713) *
               C153591 -
           ((C35492 + C35493 + C35494 + C35495) * C153454 * C153713 +
            (C34975 + C34974 + C34973 + C34972) * C153454 * C153853) *
               C153838) *
              C153511 * C153907 +
          (((C34979 + C34978 + C34977 + C34976) * C153454 * C153853 +
            (C35932 + C35933 + C35934 + C35935) * C153454 * C153713) *
               C153838 -
           ((C34901 * C4957 + C35472 + C35472 + C153860 * C4963 +
             C34899 * C3443 + C35473 + C35473 + C34891 * C3451 +
             C34897 * C1459 + C35474 + C35474 + C34890 * C1469 + C34895 * C545 +
             C35475 + C35475 + C34889 * C569) *
                C153454 * C153713 +
            (C35935 + C35934 + C35933 + C35932) * C153454 * C153853) *
               C153591) *
              C153511 * C752)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C11348 * C136 + C11353 + C11353 + C153851 * C152 + C11350 * C329 +
              C11354 + C11354 + C153671 * C353) *
                 C2818 +
             (C11407 + C11408) * C2819 + C11417 * C153874) *
                C153853 +
            ((C19416 + C19417) * C2818 + C19382 * C2819 + C18777 * C153874) *
                C153713) *
               C153838 -
           ((C19383 * C153874 + C19384 * C2819 + (C19418 + C19419) * C2818) *
                C153713 +
            (C12372 * C153874 + C19389 * C2819 + (C19417 + C19416) * C2818) *
                C153853) *
               C153591) *
              C153511 * C153906 +
          (((C19382 * C2818 + C18777 * C2819 + C20005 * C153874) * C153853 +
            (C19390 * C2818 + C19391 * C2819 + (C11967 + C11968) * C153874) *
                C153713) *
               C153591 -
           ((C12371 * C153874 + C12372 * C2819 + C19389 * C2818) * C153713 +
            (C11420 * C153874 + (C11410 + C11409) * C2819 +
             (C11408 + C11407) * C2818) *
                C153853) *
               C153838) *
              C153511 * C153907 +
          (((C11417 * C2818 + C11418 * C2819 + (C11414 + C11413) * C153874) *
                C153853 +
            (C18777 * C2818 + C20005 * C2819 + (C12383 + C12384) * C153874) *
                C153713) *
               C153838 -
           (((C11350 * C1457 + C11931 + C11931 + C153671 * C1467 +
              C11348 * C547 + C11932 + C11932 + C153851 * C571) *
                 C153874 +
             (C11968 + C11967) * C2819 + C19383 * C2818) *
                C153713 +
            ((C12384 + C12383) * C153874 + C12371 * C2819 + C12372 * C2818) *
                C153853) *
               C153591) *
              C153511 * C752)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C11348 * C136 + C11353 + C11353 + C153851 * C152 + C11350 * C329 +
             C11354 + C11354 + C153671 * C353) *
                C153454 * C63320 +
            (C19416 + C19417) * C153454 * C63321 + C67263 * C63322 +
            C67267 * C153867) *
               C153838 -
           ((C62224 + C62223) * C153454 * C153867 + C62208 * C153454 * C63322 +
            (C19418 + C19419) * C153454 * C63321 +
            (C19417 + C19416) * C153454 * C63320) *
               C153591) *
              C153511 * C153906 +
          ((C19382 * C153454 * C63320 + C19390 * C153454 * C63321 +
            C58663 * C153454 * C63322 + (C58677 + C58678) * C153454 * C153867) *
               C153591 -
           (C67265 * C153867 + C67266 * C63322 + C19389 * C153454 * C63321 +
            (C11408 + C11407) * C153454 * C63320) *
               C153838) *
              C153511 * C153907 +
          ((C11417 * C153454 * C63320 + C18777 * C153454 * C63321 +
            C19391 * C153454 * C63322 + (C19422 + C19423) * C153454 * C153867) *
               C153838 -
           ((C11350 * C9115 + C22981 + C22981 + C153671 * C9121 +
             C11348 * C7675 + C22982 + C22982 + C153851 * C7683) *
                C153454 * C153867 +
            (C19423 + C19422) * C153454 * C63322 + C19383 * C153454 * C63321 +
            C12372 * C153454 * C63320) *
               C153591) *
              C153511 * C752)) /
            (p * q * std::sqrt(p + q));
    d2ee[169] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C11348 * C136 + C11353 + C11353 + C153851 * C152 + C11350 * C329 +
              C11354 + C11354 + C153671 * C353) *
                 C2818 +
             (C11407 + C11408) * C2819 + C11417 * C153874) *
                C153853 +
            ((C11348 * C542 + C11908 + C11908 + C153851 * C566 +
              C11350 * C1057 + C11907 + C11907 + C153671 * C1069) *
                 C2818 +
             (C11962 + C11961) * C2819 + C18777 * C153874) *
                C153713) *
               C153527 * C320 -
           (((C12680 + C12679) * C153874 + (C12678 + C12677) * C2819 +
             (C11350 * C1892 + C12644 + C12644 + C153671 * C1902 +
              C11348 * C1057 + C12643 + C12643 + C153851 * C1069) *
                 C2818) *
                C153713 +
            (C12164 * C153874 + (C11687 + C11688) * C2819 +
             (C11350 * C330 + C11633 + C11633 + C153671 * C354 + C11348 * C329 +
              C11634 + C11634 + C153851 * C353) *
                 C2818) *
                C153853) *
               C153527 * C321 +
           (((C11348 * C330 + C11635 + C11635 + C153851 * C354 +
              C11350 * C1319 + C11636 + C11636 + C153671 * C1329) *
                 C2818 +
             (C11689 + C11690) * C2819 + (C11691 + C11692) * C153874) *
                C153853 +
            ((C11348 * C1892 + C13870 + C13870 + C153851 * C1902 +
              C11350 * C4303 + C13869 + C13869 + C153671 * C4311) *
                 C2818 +
             (C19084 + C19085) * C2819 + (C19086 + C19087) * C153874) *
                C153713) *
               C153527 * C322) *
              C323 +
          ((((C11688 + C11687) * C2818 + (C11686 + C11685) * C2819 +
             (C11684 + C11683) * C153874) *
                C153853 +
            ((C12677 + C12678) * C2818 + (C12679 + C12680) * C2819 +
             (C12681 + C12682) * C153874) *
                C153713) *
               C153527 * C321 -
           ((C12371 * C153874 + C12372 * C2819 + (C11961 + C11962) * C2818) *
                C153713 +
            (C11420 * C153874 + (C11410 + C11409) * C2819 +
             (C11408 + C11407) * C2818) *
                C153853) *
               C153527 * C320 -
           (((C11350 * C4306 + C13863 + C13863 + C153671 * C4314 +
              C11348 * C1889 + C13864 + C13864 + C153851 * C1899) *
                 C153874 +
             (C19087 + C19086) * C2819 + (C19085 + C19084) * C2818) *
                C153713 +
            ((C11694 + C11693) * C153874 + (C11692 + C11691) * C2819 +
             (C11690 + C11689) * C2818) *
                C153853) *
               C153527 * C322) *
              C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C11348 * C136 + C11353 + C11353 + C153851 * C152 + C11350 * C329 +
             C11354 + C11354 + C153671 * C353) *
                C2818 +
            (C11407 + C11408) * C2819 + C11417 * C153874) *
               C153853 +
           ((C11348 * C542 + C11908 + C11908 + C153851 * C566 + C11350 * C1057 +
             C11907 + C11907 + C153671 * C1069) *
                C2818 +
            (C11962 + C11961) * C2819 + C18777 * C153874) *
               C153713) *
              C153527 * C153511 * C130 -
          ((C12371 * C153874 + C12372 * C2819 + (C11961 + C11962) * C2818) *
               C153713 +
           (C11420 * C153874 + (C11410 + C11409) * C2819 +
            (C11408 + C11407) * C2818) *
               C153853) *
              C153527 * C153511 * C131 +
          ((C11417 * C2818 + C11418 * C2819 + (C11414 + C11413) * C153874) *
               C153853 +
           (C18777 * C2818 + (C11958 + C11957) * C2819 +
            (C12383 + C12384) * C153874) *
               C153713) *
              C153527 * C153511 * C132 -
          (((C11350 * C1062 + C12377 + C12377 + C153671 * C1074 +
             C11348 * C548 + C12378 + C12378 + C153851 * C572) *
                C153874 +
            (C12384 + C12383) * C2819 + C12371 * C2818) *
               C153713 +
           ((C11416 + C11415) * C153874 + C11419 * C2819 + C11420 * C2818) *
               C153853) *
              C153527 * C153511 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C34895 * C136 + C34904 + C34904 + C34889 * C152 + C34897 * C329 +
            C34905 + C34905 + C34890 * C353 + C34899 * C330 + C34906 + C34906 +
            C34891 * C354 + C34901 * C1319 + C34907 + C34907 +
            C153860 * C1329) *
               C153454 * C153853 +
           (C34895 * C542 + C35451 + C35451 + C34889 * C566 + C34897 * C1057 +
            C35450 + C35450 + C34890 * C1069 + C34899 * C1892 + C35449 +
            C35449 + C34891 * C1902 + C34901 * C4303 + C35448 + C35448 +
            C153860 * C4311) *
               C153454 * C153713) *
              C153527 * C153511 * C130 -
          ((C35492 + C35493 + C35494 + C35495) * C153454 * C153713 +
           (C34975 + C34974 + C34973 + C34972) * C153454 * C153853) *
              C153527 * C153511 * C131 +
          ((C34979 + C34978 + C34977 + C34976) * C153454 * C153853 +
           (C35932 + C35933 + C35934 + C35935) * C153454 * C153713) *
              C153527 * C153511 * C132 -
          ((C34901 * C4306 + C35920 + C35920 + C153860 * C4314 +
            C34899 * C1889 + C35921 + C35921 + C34891 * C1899 + C34897 * C1060 +
            C35922 + C35922 + C34890 * C1072 + C34895 * C539 + C35923 + C35923 +
            C34889 * C563) *
               C153454 * C153713 +
           (C34983 + C34982 + C34981 + C34980) * C153454 * C153853) *
              C153527 * C153511 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C34895 * C136 + C34904 + C34904 + C34889 * C152 + C34897 * C329 +
             C34905 + C34905 + C34890 * C353 + C34899 * C330 + C34906 + C34906 +
             C34891 * C354 + C34901 * C1319 + C34907 + C34907 +
             C153860 * C1329) *
                C153454 * C153853 +
            (C34895 * C542 + C35451 + C35451 + C34889 * C566 + C34897 * C1057 +
             C35450 + C35450 + C34890 * C1069 + C34899 * C1892 + C35449 +
             C35449 + C34891 * C1902 + C34901 * C4303 + C35448 + C35448 +
             C153860 * C4311) *
                C153454 * C153713) *
               C153527 * C320 -
           ((C34901 * C5703 + C36197 + C36197 + C153860 * C5709 +
             C34899 * C4303 + C36196 + C36196 + C34891 * C4311 +
             C34897 * C1892 + C36195 + C36195 + C34890 * C1902 +
             C34895 * C1057 + C36194 + C36194 + C34889 * C1069) *
                C153454 * C153713 +
            (C34901 * C3127 + C35190 + C35190 + C153860 * C3135 +
             C34899 * C1319 + C35191 + C35191 + C34891 * C1329 + C34897 * C330 +
             C35192 + C35192 + C34890 * C354 + C34895 * C329 + C35193 + C35193 +
             C34889 * C353) *
                C153454 * C153853) *
               C153527 * C321 +
           ((C34895 * C330 + C35194 + C35194 + C34889 * C354 + C34897 * C1319 +
             C35195 + C35195 + C34890 * C1329 + C34899 * C3127 + C35196 +
             C35196 + C34891 * C3135 + C34901 * C4723 + C35197 + C35197 +
             C153860 * C4729) *
                C153454 * C153853 +
            (C34895 * C1892 + C37413 + C37413 + C34889 * C1902 +
             C34897 * C4303 + C37412 + C37412 + C34890 * C4311 +
             C34899 * C5703 + C37411 + C37411 + C34891 * C5709 +
             C34901 * C29092 + C37410 + C37410 + C153860 * C29096) *
                C153454 * C153713) *
               C153527 * C322) *
              C323 +
          (((C35237 + C35236 + C35235 + C35234) * C153454 * C153853 +
            (C36222 + C36223 + C36224 + C36225) * C153454 * C153713) *
               C153527 * C321 -
           ((C35492 + C35493 + C35494 + C35495) * C153454 * C153713 +
            (C34975 + C34974 + C34973 + C34972) * C153454 * C153853) *
               C153527 * C320 -
           ((C34901 * C29093 + C37406 + C37406 + C153860 * C29097 +
             C34899 * C5702 + C37407 + C37407 + C34891 * C5708 +
             C34897 * C4304 + C37408 + C37408 + C34890 * C4312 +
             C34895 * C1891 + C37409 + C37409 + C34889 * C1901) *
                C153454 * C153713 +
            (C35241 + C35240 + C35239 + C35238) * C153454 * C153853) *
               C153527 * C322) *
              C153498)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C11348 * C136 + C11353 + C11353 + C153851 * C152 + C11350 * C329 +
            C11354 + C11354 + C153671 * C353) *
               C153454 * C63320 +
           (C19416 + C19417) * C153454 * C63321 + C58660 * C153454 * C63322 +
           (C22991 + C22992) * C153454 * C153867) *
              C153527 * C153511 * C130 -
          (C58662 * C153454 * C153867 + C19384 * C153454 * C63322 +
           C19389 * C153454 * C63321 + (C11408 + C11407) * C153454 * C63320) *
              C153527 * C153511 * C131 +
          (C11417 * C153454 * C63320 + C18777 * C153454 * C63321 +
           C19391 * C153454 * C63322 + (C19422 + C19423) * C153454 * C153867) *
              C153527 * C153511 * C132 -
          ((C11350 * C8488 + C14389 + C14389 + C153671 * C8490 +
            C11348 * C2241 + C14390 + C14390 + C153851 * C2251) *
               C153454 * C153867 +
           (C11968 + C11967) * C153454 * C63322 + C12371 * C153454 * C63321 +
           C11420 * C153454 * C63320) *
              C153527 * C153511 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C11348 * C136 + C11353 + C11353 + C153851 * C152 + C11350 * C329 +
             C11354 + C11354 + C153671 * C353) *
                C153454 * C63320 +
            (C19416 + C19417) * C153454 * C63321 + C58660 * C153454 * C63322 +
            (C22991 + C22992) * C153454 * C153867) *
               C153527 * C320 -
           ((C60452 + C60451) * C153454 * C153867 + C60440 * C153454 * C63322 +
            (C20420 + C20419) * C153454 * C63321 +
            (C11350 * C330 + C11633 + C11633 + C153671 * C354 + C11348 * C329 +
             C11634 + C11634 + C153851 * C353) *
                C153454 * C63320) *
               C153527 * C321 +
           ((C11348 * C330 + C11635 + C11635 + C153851 * C354 + C11350 * C1319 +
             C11636 + C11636 + C153671 * C1329) *
                C153454 * C63320 +
            (C22201 + C22202) * C153454 * C63321 +
            (C61431 + C61432) * C153454 * C63322 +
            (C11348 * C6305 + C61426 + C61426 + C153851 * C6317 +
             C11350 * C30191 + C61425 + C61425 + C153671 * C30195) *
                C153454 * C153867) *
               C153527 * C322) *
              C323 +
          (((C11688 + C11687) * C153454 * C63320 + C20396 * C153454 * C63321 +
            C59645 * C153454 * C63322 + (C59655 + C59656) * C153454 * C153867) *
               C153527 * C321 -
           (C58662 * C153454 * C153867 + C19384 * C153454 * C63322 +
            C19389 * C153454 * C63321 + (C11408 + C11407) * C153454 * C63320) *
               C153527 * C320 -
           ((C11350 * C31999 + C61423 + C61423 + C153671 * C32001 +
             C11348 * C6303 + C61424 + C61424 + C153851 * C6315) *
                C153454 * C153867 +
            (C58369 + C58368) * C153454 * C63322 +
            (C19085 + C19084) * C153454 * C63321 +
            (C11690 + C11689) * C153454 * C63320) *
               C153527 * C322) *
              C153498)) /
            (p * q * std::sqrt(p + q));
    d2ee[170] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C34895 * C136 + C34904 + C34904 + C34889 * C152 + C34897 * C329 +
             C34905 + C34905 + C34890 * C353 + C34899 * C330 + C34906 + C34906 +
             C34891 * C354 + C34901 * C1319 + C34907 + C34907 +
             C153860 * C1329) *
                C153454 * C153853 +
            (C44386 + C44387 + C44388 + C44389) * C153454 * C153713) *
               C153527 * C153908 -
           ((C45059 + C45058 + C45057 + C45056) * C153454 * C153713 +
            (C34901 * C3127 + C35190 + C35190 + C153860 * C3135 +
             C34899 * C1319 + C35191 + C35191 + C34891 * C1329 + C34897 * C330 +
             C35192 + C35192 + C34890 * C354 + C34895 * C329 + C35193 + C35193 +
             C34889 * C353) *
                C153454 * C153853) *
               C153527 * C153909 +
           ((C34895 * C330 + C35194 + C35194 + C34889 * C354 + C34897 * C1319 +
             C35195 + C35195 + C34890 * C1329 + C34899 * C3127 + C35196 +
             C35196 + C34891 * C3135 + C34901 * C4723 + C35197 + C35197 +
             C153860 * C4729) *
                C153454 * C153853 +
            (C34895 * C1892 + C37413 + C37413 + C34889 * C1902 +
             C34897 * C4303 + C37412 + C37412 + C34890 * C4311 +
             C34899 * C5703 + C37411 + C37411 + C34891 * C5709 +
             C34901 * C29092 + C37410 + C37410 + C153860 * C29096) *
                C153454 * C153713) *
               C153527 * C1601) *
              C153829 +
          (((C35237 + C35236 + C35235 + C35234) * C153454 * C153853 +
            (C36222 + C36223 + C36224 + C36225) * C153454 * C153713) *
               C153527 * C153909 -
           ((C35492 + C35493 + C35494 + C35495) * C153454 * C153713 +
            (C34975 + C34974 + C34973 + C34972) * C153454 * C153853) *
               C153527 * C153908 -
           ((C34901 * C29093 + C37406 + C37406 + C153860 * C29097 +
             C34899 * C5702 + C37407 + C37407 + C34891 * C5708 +
             C34897 * C4304 + C37408 + C37408 + C34890 * C4312 +
             C34895 * C1891 + C37409 + C37409 + C34889 * C1901) *
                C153454 * C153713 +
            (C35241 + C35240 + C35239 + C35238) * C153454 * C153853) *
               C153527 * C1601) *
              C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C11348 * C136 + C11353 + C11353 + C153851 * C152 + C11350 * C329 +
              C11354 + C11354 + C153671 * C353) *
                 C2818 +
             (C11407 + C11408) * C2819 + C11417 * C153874) *
                C153853 +
            ((C19416 + C19417) * C2818 + C19382 * C2819 + C18777 * C153874) *
                C153713) *
               C153527 * C153908 -
           ((C19714 * C153874 + C20406 * C2819 + (C20420 + C20419) * C2818) *
                C153713 +
            (C12164 * C153874 + (C11687 + C11688) * C2819 +
             (C11350 * C330 + C11633 + C11633 + C153671 * C354 + C11348 * C329 +
              C11634 + C11634 + C153851 * C353) *
                 C2818) *
                C153853) *
               C153527 * C153909 +
           (((C11348 * C330 + C11635 + C11635 + C153851 * C354 +
              C11350 * C1319 + C11636 + C11636 + C153671 * C1329) *
                 C2818 +
             (C11689 + C11690) * C2819 + (C11691 + C11692) * C153874) *
                C153853 +
            ((C11348 * C1892 + C13870 + C13870 + C153851 * C1902 +
              C11350 * C4303 + C13869 + C13869 + C153671 * C4311) *
                 C2818 +
             (C19084 + C19085) * C2819 + (C19086 + C19087) * C153874) *
                C153713) *
               C153527 * C1601) *
              C153829 +
          ((((C11688 + C11687) * C2818 + (C11686 + C11685) * C2819 +
             (C11684 + C11683) * C153874) *
                C153853 +
            (C20396 * C2818 + C20397 * C2819 + (C12681 + C12682) * C153874) *
                C153713) *
               C153527 * C153909 -
           ((C12371 * C153874 + C12372 * C2819 + C19389 * C2818) * C153713 +
            (C11420 * C153874 + (C11410 + C11409) * C2819 +
             (C11408 + C11407) * C2818) *
                C153853) *
               C153527 * C153908 -
           (((C11350 * C4306 + C13863 + C13863 + C153671 * C4314 +
              C11348 * C1889 + C13864 + C13864 + C153851 * C1899) *
                 C153874 +
             (C19087 + C19086) * C2819 + (C19085 + C19084) * C2818) *
                C153713 +
            ((C11694 + C11693) * C153874 + (C11692 + C11691) * C2819 +
             (C11690 + C11689) * C2818) *
                C153853) *
               C153527 * C1601) *
              C153498)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C11348 * C136 + C11353 + C11353 + C153851 * C152 + C11350 * C329 +
             C11354 + C11354 + C153671 * C353) *
                C153454 * C63320 +
            (C19416 + C19417) * C153454 * C63321 + C67263 * C63322 +
            C67267 * C153867) *
               C153527 * C153908 -
           (C68444 * C153867 + C68439 * C63322 +
            (C20420 + C20419) * C153454 * C63321 +
            (C11350 * C330 + C11633 + C11633 + C153671 * C354 + C11348 * C329 +
             C11634 + C11634 + C153851 * C353) *
                C153454 * C63320) *
               C153527 * C153909 +
           ((C11348 * C330 + C11635 + C11635 + C153851 * C354 + C11350 * C1319 +
             C11636 + C11636 + C153671 * C1329) *
                C153454 * C63320 +
            (C22201 + C22202) * C153454 * C63321 +
            (C61431 + C61432) * C153454 * C63322 +
            (C11348 * C6305 + C61426 + C61426 + C153851 * C6317 +
             C11350 * C30191 + C61425 + C61425 + C153671 * C30195) *
                C153454 * C153867) *
               C153527 * C1601) *
              C153829 +
          (((C11688 + C11687) * C153454 * C63320 + C20396 * C153454 * C63321 +
            C59645 * C153454 * C63322 + (C59655 + C59656) * C153454 * C153867) *
               C153527 * C153909 -
           (C67265 * C153867 + C67266 * C63322 + C19389 * C153454 * C63321 +
            (C11408 + C11407) * C153454 * C63320) *
               C153527 * C153908 -
           ((C11350 * C31999 + C61423 + C61423 + C153671 * C32001 +
             C11348 * C6303 + C61424 + C61424 + C153851 * C6315) *
                C153454 * C153867 +
            (C58369 + C58368) * C153454 * C63322 +
            (C19085 + C19084) * C153454 * C63321 +
            (C11690 + C11689) * C153454 * C63320) *
               C153527 * C1601) *
              C153498)) /
            (p * q * std::sqrt(p + q));
    d2ee[171] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C34895 * C136 + C34904 + C34904 + C34889 * C152 + C34897 * C329 +
             C34905 + C34905 + C34890 * C353 + C34899 * C330 + C34906 + C34906 +
             C34891 * C354 + C34901 * C1319 + C34907 + C34907 +
             C153860 * C1329) *
                C153454 * C153853 +
            (C44386 + C44387 + C44388 + C44389) * C153454 * C153713) *
               C153838 -
           ((C44390 + C44391 + C44392 + C44393) * C153454 * C153713 +
            (C44389 + C44388 + C44387 + C44386) * C153454 * C153853) *
               C153591) *
              C153908 +
          (((C45056 + C45057 + C45058 + C45059) * C153454 * C153853 +
            (C45602 + C45603 + C45604 + C45605) * C153454 * C153713) *
               C153591 -
           ((C45059 + C45058 + C45057 + C45056) * C153454 * C153713 +
            (C34901 * C3127 + C35190 + C35190 + C153860 * C3135 +
             C34899 * C1319 + C35191 + C35191 + C34891 * C1329 + C34897 * C330 +
             C35192 + C35192 + C34890 * C354 + C34895 * C329 + C35193 + C35193 +
             C34889 * C353) *
                C153454 * C153853) *
               C153838) *
              C153909 +
          (((C34895 * C330 + C35194 + C35194 + C34889 * C354 + C34897 * C1319 +
             C35195 + C35195 + C34890 * C1329 + C34899 * C3127 + C35196 +
             C35196 + C34891 * C3135 + C34901 * C4723 + C35197 + C35197 +
             C153860 * C4729) *
                C153454 * C153853 +
            (C46272 + C46273 + C46274 + C46275) * C153454 * C153713) *
               C153838 -
           ((C34901 * C29442 + C46260 + C46260 + C153860 * C29444 +
             C34899 * C28650 + C46261 + C46261 + C34891 * C28654 +
             C34897 * C4959 + C46262 + C46262 + C34890 * C4965 +
             C34895 * C3441 + C46263 + C46263 + C34889 * C3449) *
                C153454 * C153713 +
            (C46275 + C46274 + C46273 + C46272) * C153454 * C153853) *
               C153591) *
              C1601) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C11348 * C136 + C11353 + C11353 + C153851 * C152 + C11350 * C329 +
              C11354 + C11354 + C153671 * C353) *
                 C2818 +
             (C11407 + C11408) * C2819 + C11417 * C153874) *
                C153853 +
            ((C19416 + C19417) * C2818 + C19382 * C2819 + C18777 * C153874) *
                C153713) *
               C153838 -
           ((C19383 * C153874 + C19384 * C2819 + (C19418 + C19419) * C2818) *
                C153713 +
            (C12372 * C153874 + C19389 * C2819 + (C19417 + C19416) * C2818) *
                C153853) *
               C153591) *
              C153908 +
          ((((C20419 + C20420) * C2818 + C20396 * C2819 + C20397 * C153874) *
                C153853 +
            ((C21219 + C21220) * C2818 + (C20421 + C20422) * C2819 +
             (C20423 + C20424) * C153874) *
                C153713) *
               C153591 -
           ((C19714 * C153874 + C20406 * C2819 + (C20420 + C20419) * C2818) *
                C153713 +
            (C12164 * C153874 + (C11687 + C11688) * C2819 +
             (C11350 * C330 + C11633 + C11633 + C153671 * C354 + C11348 * C329 +
              C11634 + C11634 + C153851 * C353) *
                 C2818) *
                C153853) *
               C153838) *
              C153909 +
          ((((C11348 * C330 + C11635 + C11635 + C153851 * C354 +
              C11350 * C1319 + C11636 + C11636 + C153671 * C1329) *
                 C2818 +
             (C11689 + C11690) * C2819 + (C11691 + C11692) * C153874) *
                C153853 +
            ((C22201 + C22202) * C2818 + (C19084 + C19085) * C2819 +
             (C19086 + C19087) * C153874) *
                C153713) *
               C153838 -
           (((C11350 * C4957 + C22191 + C22191 + C153671 * C4963 +
              C11348 * C3443 + C22192 + C22192 + C153851 * C3451) *
                 C153874 +
             (C11350 * C4958 + C22193 + C22193 + C153671 * C4964 +
              C11348 * C3442 + C22194 + C22194 + C153851 * C3450) *
                 C2819 +
             (C11350 * C4959 + C22195 + C22195 + C153671 * C4965 +
              C11348 * C3441 + C22196 + C22196 + C153851 * C3449) *
                 C2818) *
                C153713 +
            ((C19087 + C19086) * C153874 + (C19085 + C19084) * C2819 +
             (C22202 + C22201) * C2818) *
                C153853) *
               C153591) *
              C1601) *
         C153492) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C11348 * C136 + C11353 + C11353 + C153851 * C152 + C11350 * C329 +
             C11354 + C11354 + C153671 * C353) *
                C153454 * C63320 +
            (C19416 + C19417) * C153454 * C63321 + C67263 * C63322 +
            C67267 * C153867) *
               C153838 -
           ((C62224 + C62223) * C153454 * C153867 + C62208 * C153454 * C63322 +
            (C19418 + C19419) * C153454 * C63321 +
            (C19417 + C19416) * C153454 * C63320) *
               C153591) *
              C153908 +
          (((C20419 + C20420) * C153454 * C63320 +
            (C21219 + C21220) * C153454 * C63321 +
            (C60451 + C60452) * C153454 * C63322 +
            (C68447 + C68448) * C153454 * C153867) *
               C153591 -
           (C68444 * C153867 + C68439 * C63322 +
            (C20420 + C20419) * C153454 * C63321 +
            (C11350 * C330 + C11633 + C11633 + C153671 * C354 + C11348 * C329 +
             C11634 + C11634 + C153851 * C353) *
                C153454 * C63320) *
               C153838) *
              C153909 +
          (((C11348 * C330 + C11635 + C11635 + C153851 * C354 + C11350 * C1319 +
             C11636 + C11636 + C153671 * C1329) *
                C153454 * C63320 +
            (C22201 + C22202) * C153454 * C63321 +
            (C61431 + C61432) * C153454 * C63322 +
            (C69105 + C69106) * C153454 * C153867) *
               C153838 -
           ((C11350 * C32641 + C69099 + C69099 + C153671 * C32643 +
             C11348 * C31195 + C69100 + C69100 + C153851 * C31199) *
                C153454 * C153867 +
            (C69106 + C69105) * C153454 * C63322 +
            (C61432 + C61431) * C153454 * C63321 +
            (C22202 + C22201) * C153454 * C63320) *
               C153591) *
              C1601) *
         C153492) /
            (p * q * std::sqrt(p + q));
    d2ee[172] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C11348 * C136 + C11353 + C11353 + C153851 * C152 +
                  C11350 * C329 + C11354 + C11354 + C153671 * C353) *
                     C2818 +
                 (C11407 + C11408) * C2819 + C11417 * C153874) *
                    C153853 +
                ((C19416 + C19417) * C2818 + C19382 * C2819 +
                 C18777 * C153874) *
                    C153713) *
                   C153527 * C1223 -
               ((C19714 * C153874 + C20406 * C2819 +
                 (C20420 + C20419) * C2818) *
                    C153713 +
                (C12164 * C153874 + (C11687 + C11688) * C2819 +
                 (C11350 * C330 + C11633 + C11633 + C153671 * C354 +
                  C11348 * C329 + C11634 + C11634 + C153851 * C353) *
                     C2818) *
                    C153853) *
                   C153527 * C153563) *
                  C1225 +
              ((((C11688 + C11687) * C2818 + (C11686 + C11685) * C2819 +
                 (C11684 + C11683) * C153874) *
                    C153853 +
                (C20396 * C2818 + C20397 * C2819 +
                 (C12681 + C12682) * C153874) *
                    C153713) *
                   C153527 * C153563 -
               ((C12371 * C153874 + C12372 * C2819 + C19389 * C2818) * C153713 +
                (C11420 * C153874 + (C11410 + C11409) * C2819 +
                 (C11408 + C11407) * C2818) *
                    C153853) *
                   C153527 * C1223) *
                  C1226 +
              (((C11417 * C2818 + C11418 * C2819 +
                 (C11414 + C11413) * C153874) *
                    C153853 +
                (C18777 * C2818 + C20005 * C2819 +
                 (C12383 + C12384) * C153874) *
                    C153713) *
                   C153527 * C1223 -
               (((C11350 * C1888 + C12663 + C12663 + C153671 * C1898 +
                  C11348 * C1061 + C12664 + C12664 + C153851 * C1073) *
                     C153874 +
                 (C12682 + C12681) * C2819 + C19714 * C2818) *
                    C153713 +
                ((C12176 + C12175) * C153874 + C12163 * C2819 +
                 C12164 * C2818) *
                    C153853) *
                   C153527 * C153563) *
                  C1227) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C11348 * C136 + C11353 + C11353 + C153851 * C152 +
                 C11350 * C329 + C11354 + C11354 + C153671 * C353) *
                    C2818 +
                (C11407 + C11408) * C2819 + C11417 * C153874) *
                   C153853 +
               ((C19416 + C19417) * C2818 + C19382 * C2819 + C18777 * C153874) *
                   C153713) *
                  C153527 * C1310 -
              ((C19714 * C153874 + C20406 * C2819 + (C20420 + C20419) * C2818) *
                   C153713 +
               (C12164 * C153874 + (C11687 + C11688) * C2819 +
                (C11350 * C330 + C11633 + C11633 + C153671 * C354 +
                 C11348 * C329 + C11634 + C11634 + C153851 * C353) *
                    C2818) *
                   C153853) *
                  C153527 * C1311 +
              (((C11348 * C330 + C11635 + C11635 + C153851 * C354 +
                 C11350 * C1319 + C11636 + C11636 + C153671 * C1329) *
                    C2818 +
                (C11689 + C11690) * C2819 + (C11691 + C11692) * C153874) *
                   C153853 +
               ((C11348 * C1892 + C13870 + C13870 + C153851 * C1902 +
                 C11350 * C4303 + C13869 + C13869 + C153671 * C4311) *
                    C2818 +
                (C19084 + C19085) * C2819 + (C19086 + C19087) * C153874) *
                   C153713) *
                  C153527 * C1312 -
              (((C11350 * C5701 + C20909 + C20909 + C153671 * C5707 +
                 C11348 * C4305 + C20910 + C20910 + C153851 * C4313) *
                    C153874 +
                (C11350 * C5702 + C20911 + C20911 + C153671 * C5708 +
                 C11348 * C4304 + C20912 + C20912 + C153851 * C4312) *
                    C2819 +
                (C11350 * C5703 + C20913 + C20913 + C153671 * C5709 +
                 C11348 * C4303 + C20914 + C20914 + C153851 * C4311) *
                    C2818) *
                   C153713 +
               ((C11350 * C3129 + C13009 + C13009 + C153671 * C3137 +
                 C11348 * C1317 + C13010 + C13010 + C153851 * C1327) *
                    C153874 +
                (C11350 * C3128 + C13011 + C13011 + C153671 * C3136 +
                 C11348 * C1318 + C13012 + C13012 + C153851 * C1328) *
                    C2819 +
                (C11350 * C3127 + C13013 + C13013 + C153671 * C3135 +
                 C11348 * C1319 + C13014 + C13014 + C153851 * C1329) *
                    C2818) *
                   C153853) *
                  C153527 * C1313) *
             C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C11348 * C136 + C11353 + C11353 + C153851 * C152 + C11350 * C329 +
              C11354 + C11354 + C153671 * C353) *
                 C2818 +
             (C11407 + C11408) * C2819 + C11417 * C153874) *
                C153853 +
            ((C19416 + C19417) * C2818 + C19382 * C2819 + C18777 * C153874) *
                C153713) *
               C535 -
           ((C19383 * C153874 + C19384 * C2819 + (C19418 + C19419) * C2818) *
                C153713 +
            (C12372 * C153874 + C19389 * C2819 + (C19417 + C19416) * C2818) *
                C153853) *
               C536 +
           (((C19419 + C19418) * C2818 + C19390 * C2819 + C19391 * C153874) *
                C153853 +
            ((C11348 * C2244 + C14396 + C14396 + C153851 * C2254 +
              C11350 * C6306 + C14395 + C14395 + C153671 * C6318) *
                 C2818 +
             (C19420 + C19421) * C2819 + (C19422 + C19423) * C153874) *
                C153713) *
               C537) *
              C1223 +
          ((((C20419 + C20420) * C2818 + C20396 * C2819 + C20397 * C153874) *
                C153853 +
            ((C21219 + C21220) * C2818 + (C20421 + C20422) * C2819 +
             (C20423 + C20424) * C153874) *
                C153713) *
               C536 -
           ((C19714 * C153874 + C20406 * C2819 + (C20420 + C20419) * C2818) *
                C153713 +
            (C12164 * C153874 + (C11687 + C11688) * C2819 +
             (C11350 * C330 + C11633 + C11633 + C153671 * C354 + C11348 * C329 +
              C11634 + C11634 + C153851 * C353) *
                 C2818) *
                C153853) *
               C535 -
           (((C11350 * C6301 + C21209 + C21209 + C153671 * C6313 +
              C11348 * C6302 + C21210 + C21210 + C153851 * C6314) *
                 C153874 +
             (C11350 * C6303 + C21211 + C21211 + C153671 * C6315 +
              C11348 * C6304 + C21212 + C21212 + C153851 * C6316) *
                 C2819 +
             (C11350 * C6305 + C21213 + C21213 + C153671 * C6317 +
              C11348 * C6306 + C21214 + C21214 + C153851 * C6318) *
                 C2818) *
                C153713 +
            ((C20424 + C20423) * C153874 + (C20422 + C20421) * C2819 +
             (C21220 + C21219) * C2818) *
                C153853) *
               C537) *
              C153563) *
         C153492) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C34895 * C136 + C34904 + C34904 + C34889 * C152 + C34897 * C329 +
             C34905 + C34905 + C34890 * C353 + C34899 * C330 + C34906 + C34906 +
             C34891 * C354 + C34901 * C1319 + C34907 + C34907 +
             C153860 * C1329) *
                C153454 * C153853 +
            (C44386 + C44387 + C44388 + C44389) * C153454 * C153713) *
               C153527 * C1223 -
           ((C45059 + C45058 + C45057 + C45056) * C153454 * C153713 +
            (C34901 * C3127 + C35190 + C35190 + C153860 * C3135 +
             C34899 * C1319 + C35191 + C35191 + C34891 * C1329 + C34897 * C330 +
             C35192 + C35192 + C34890 * C354 + C34895 * C329 + C35193 + C35193 +
             C34889 * C353) *
                C153454 * C153853) *
               C153527 * C153563) *
              C1225 +
          (((C35237 + C35236 + C35235 + C35234) * C153454 * C153853 +
            (C36222 + C36223 + C36224 + C36225) * C153454 * C153713) *
               C153527 * C153563 -
           ((C35492 + C35493 + C35494 + C35495) * C153454 * C153713 +
            (C34975 + C34974 + C34973 + C34972) * C153454 * C153853) *
               C153527 * C1223) *
              C1226 +
          (((C34979 + C34978 + C34977 + C34976) * C153454 * C153853 +
            (C35932 + C35933 + C35934 + C35935) * C153454 * C153713) *
               C153527 * C1223 -
           ((C34901 * C5701 + C36210 + C36210 + C153860 * C5707 +
             C34899 * C4305 + C36211 + C36211 + C34891 * C4313 +
             C34897 * C1890 + C36212 + C36212 + C34890 * C1900 +
             C34895 * C1059 + C36213 + C36213 + C34889 * C1071) *
                C153454 * C153713 +
            (C35717 + C35716 + C35715 + C35714) * C153454 * C153853) *
               C153527 * C153563) *
              C1227)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C34895 * C136 + C34904 + C34904 + C34889 * C152 + C34897 * C329 +
            C34905 + C34905 + C34890 * C353 + C34899 * C330 + C34906 + C34906 +
            C34891 * C354 + C34901 * C1319 + C34907 + C34907 +
            C153860 * C1329) *
               C153454 * C153853 +
           (C44386 + C44387 + C44388 + C44389) * C153454 * C153713) *
              C153527 * C1310 -
          ((C45059 + C45058 + C45057 + C45056) * C153454 * C153713 +
           (C34901 * C3127 + C35190 + C35190 + C153860 * C3135 +
            C34899 * C1319 + C35191 + C35191 + C34891 * C1329 + C34897 * C330 +
            C35192 + C35192 + C34890 * C354 + C34895 * C329 + C35193 + C35193 +
            C34889 * C353) *
               C153454 * C153853) *
              C153527 * C1311 +
          ((C34895 * C330 + C35194 + C35194 + C34889 * C354 + C34897 * C1319 +
            C35195 + C35195 + C34890 * C1329 + C34899 * C3127 + C35196 +
            C35196 + C34891 * C3135 + C34901 * C4723 + C35197 + C35197 +
            C153860 * C4729) *
               C153454 * C153853 +
           (C34895 * C1892 + C37413 + C37413 + C34889 * C1902 + C34897 * C4303 +
            C37412 + C37412 + C34890 * C4311 + C34899 * C5703 + C37411 +
            C37411 + C34891 * C5709 + C34901 * C29092 + C37410 + C37410 +
            C153860 * C29096) *
               C153454 * C153713) *
              C153527 * C1312 -
          ((C34901 * C29856 + C45384 + C45384 + C153860 * C29858 +
            C34899 * C29092 + C45385 + C45385 + C34891 * C29096 +
            C34897 * C5703 + C45386 + C45386 + C34890 * C5709 + C34895 * C4303 +
            C45387 + C45387 + C34889 * C4311) *
               C153454 * C153713 +
           (C34901 * C28502 + C36554 + C36554 + C153860 * C28506 +
            C34899 * C4723 + C36555 + C36555 + C34891 * C4729 + C34897 * C3127 +
            C36556 + C36556 + C34890 * C3135 + C34895 * C1319 + C36557 +
            C36557 + C34889 * C1329) *
               C153454 * C153853) *
              C153527 * C1313) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C34895 * C136 + C34904 + C34904 + C34889 * C152 + C34897 * C329 +
             C34905 + C34905 + C34890 * C353 + C34899 * C330 + C34906 + C34906 +
             C34891 * C354 + C34901 * C1319 + C34907 + C34907 +
             C153860 * C1329) *
                C153454 * C153853 +
            (C44386 + C44387 + C44388 + C44389) * C153454 * C153713) *
               C535 -
           ((C44390 + C44391 + C44392 + C44393) * C153454 * C153713 +
            (C44389 + C44388 + C44387 + C44386) * C153454 * C153853) *
               C536 +
           ((C44393 + C44392 + C44391 + C44390) * C153454 * C153853 +
            (C34895 * C2244 + C37939 + C37939 + C34889 * C2254 +
             C34897 * C6306 + C37938 + C37938 + C34890 * C6318 +
             C34899 * C6305 + C37937 + C37937 + C34891 * C6317 +
             C34901 * C30191 + C37936 + C37936 + C153860 * C30195) *
                C153454 * C153713) *
               C537) *
              C1223 +
          (((C45056 + C45057 + C45058 + C45059) * C153454 * C153853 +
            (C45602 + C45603 + C45604 + C45605) * C153454 * C153713) *
               C536 -
           ((C45059 + C45058 + C45057 + C45056) * C153454 * C153713 +
            (C34901 * C3127 + C35190 + C35190 + C153860 * C3135 +
             C34899 * C1319 + C35191 + C35191 + C34891 * C1329 + C34897 * C330 +
             C35192 + C35192 + C34890 * C354 + C34895 * C329 + C35193 + C35193 +
             C34889 * C353) *
                C153454 * C153853) *
               C535 -
           ((C34901 * C30190 + C45590 + C45590 + C153860 * C30194 +
             C34899 * C30191 + C45591 + C45591 + C34891 * C30195 +
             C34897 * C6305 + C45592 + C45592 + C34890 * C6317 +
             C34895 * C6306 + C45593 + C45593 + C34889 * C6318) *
                C153454 * C153713 +
            (C45605 + C45604 + C45603 + C45602) * C153454 * C153853) *
               C537) *
              C153563) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C11348 * C136 + C11353 + C11353 + C153851 * C152 + C11350 * C329 +
             C11354 + C11354 + C153671 * C353) *
                C153454 * C63320 +
            (C19416 + C19417) * C153454 * C63321 + C67263 * C63322 +
            C67267 * C153867) *
               C153527 * C1223 -
           ((C60452 + C60451) * C153454 * C153867 + C60440 * C153454 * C63322 +
            (C20420 + C20419) * C153454 * C63321 +
            (C11350 * C330 + C11633 + C11633 + C153671 * C354 + C11348 * C329 +
             C11634 + C11634 + C153851 * C353) *
                C153454 * C63320) *
               C153527 * C153563) *
              C1225 +
          (((C11688 + C11687) * C153454 * C63320 + C20396 * C153454 * C63321 +
            C59645 * C153454 * C63322 + (C59655 + C59656) * C153454 * C153867) *
               C153527 * C153563 -
           (C67265 * C153867 + C67266 * C63322 + C19389 * C153454 * C63321 +
            (C11408 + C11407) * C153454 * C63320) *
               C153527 * C1223) *
              C1226 +
          ((C11417 * C153454 * C63320 + C18777 * C153454 * C63321 +
            C19391 * C153454 * C63322 + (C19422 + C19423) * C153454 * C153867) *
               C153527 * C1223 -
           ((C11350 * C6301 + C21209 + C21209 + C153671 * C6313 +
             C11348 * C6302 + C21210 + C21210 + C153851 * C6314) *
                C153454 * C153867 +
            (C20424 + C20423) * C153454 * C63322 + C19714 * C153454 * C63321 +
            C12164 * C153454 * C63320) *
               C153527 * C153563) *
              C1227)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C11348 * C136 + C11353 + C11353 + C153851 * C152 + C11350 * C329 +
            C11354 + C11354 + C153671 * C353) *
               C153454 * C63320 +
           (C19416 + C19417) * C153454 * C63321 + C67263 * C63322 +
           C67267 * C153867) *
              C153527 * C1310 -
          ((C60452 + C60451) * C153454 * C153867 + C60440 * C153454 * C63322 +
           (C20420 + C20419) * C153454 * C63321 +
           (C11350 * C330 + C11633 + C11633 + C153671 * C354 + C11348 * C329 +
            C11634 + C11634 + C153851 * C353) *
               C153454 * C63320) *
              C153527 * C1311 +
          ((C11348 * C330 + C11635 + C11635 + C153851 * C354 + C11350 * C1319 +
            C11636 + C11636 + C153671 * C1329) *
               C153454 * C63320 +
           (C22201 + C22202) * C153454 * C63321 +
           (C61431 + C61432) * C153454 * C63322 +
           (C11348 * C6305 + C61426 + C61426 + C153851 * C6317 +
            C11350 * C30191 + C61425 + C61425 + C153671 * C30195) *
               C153454 * C153867) *
              C153527 * C1312 -
          ((C11350 * C30190 + C68238 + C68238 + C153671 * C30194 +
            C11348 * C30191 + C68239 + C68239 + C153851 * C30195) *
               C153454 * C153867 +
           (C11350 * C28650 + C60143 + C60143 + C153671 * C28654 +
            C11348 * C4959 + C60144 + C60144 + C153851 * C4965) *
               C153454 * C63322 +
           (C11350 * C5703 + C20913 + C20913 + C153671 * C5709 +
            C11348 * C4303 + C20914 + C20914 + C153851 * C4311) *
               C153454 * C63321 +
           (C11350 * C3127 + C13013 + C13013 + C153671 * C3135 +
            C11348 * C1319 + C13014 + C13014 + C153851 * C1329) *
               C153454 * C63320) *
              C153527 * C1313) *
         C153492) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C11348 * C136 + C11353 + C11353 + C153851 * C152 + C11350 * C329 +
             C11354 + C11354 + C153671 * C353) *
                C153454 * C63320 +
            (C19416 + C19417) * C153454 * C63321 + C67263 * C63322 +
            C67267 * C153867) *
               C535 -
           ((C62224 + C62223) * C153454 * C153867 + C62208 * C153454 * C63322 +
            (C19418 + C19419) * C153454 * C63321 +
            (C19417 + C19416) * C153454 * C63320) *
               C536 +
           (C67263 * C63320 + C67267 * C63321 +
            (C62223 + C62224) * C153454 * C63322 +
            (C11348 * C10466 + C62216 + C62216 + C153851 * C10472 +
             C11350 * C34007 + C62215 + C62215 + C153671 * C34011) *
                C153454 * C153867) *
               C537) *
              C1223 +
          (((C20419 + C20420) * C153454 * C63320 +
            (C21219 + C21220) * C153454 * C63321 +
            (C60451 + C60452) * C153454 * C63322 +
            (C68447 + C68448) * C153454 * C153867) *
               C536 -
           (C68444 * C153867 + C68439 * C63322 +
            (C20420 + C20419) * C153454 * C63321 +
            (C11350 * C330 + C11633 + C11633 + C153671 * C354 + C11348 * C329 +
             C11634 + C11634 + C153851 * C353) *
                C153454 * C63320) *
               C535 -
           ((C11350 * C34006 + C68440 + C68440 + C153671 * C34010 +
             C11348 * C34007 + C68441 + C68441 + C153851 * C34011) *
                C153454 * C153867 +
            (C68448 + C68447) * C153454 * C63322 + C68444 * C63321 +
            C68439 * C63320) *
               C537) *
              C153563) *
         C153492) /
            (p * q * std::sqrt(p + q));
    d2ee[173] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C34895 * C136 + C34904 + C34904 + C34889 * C152 + C34897 * C329 +
              C34905 + C34905 + C34890 * C353 + C34899 * C330 + C34906 +
              C34906 + C34891 * C354 + C34901 * C1319 + C34907 + C34907 +
              C153860 * C1329) *
                 C153454 * C153853 +
             (C44386 + C44387 + C44388 + C44389) * C153454 * C153713) *
                C153838 -
            ((C44390 + C44391 + C44392 + C44393) * C153454 * C153713 +
             (C44389 + C44388 + C44387 + C44386) * C153454 * C153853) *
                C153591) *
               C1223 +
           (((C45056 + C45057 + C45058 + C45059) * C153454 * C153853 +
             (C45602 + C45603 + C45604 + C45605) * C153454 * C153713) *
                C153591 -
            ((C45059 + C45058 + C45057 + C45056) * C153454 * C153713 +
             (C34901 * C3127 + C35190 + C35190 + C153860 * C3135 +
              C34899 * C1319 + C35191 + C35191 + C34891 * C1329 +
              C34897 * C330 + C35192 + C35192 + C34890 * C354 + C34895 * C329 +
              C35193 + C35193 + C34889 * C353) *
                 C153454 * C153853) *
                C153838) *
               C153563) *
              C153829 +
          ((((C35495 + C35494 + C35493 + C35492) * C153454 * C153853 +
             (C35496 + C35497 + C35498 + C35499) * C153454 * C153713) *
                C153591 -
            ((C35492 + C35493 + C35494 + C35495) * C153454 * C153713 +
             (C34975 + C34974 + C34973 + C34972) * C153454 * C153853) *
                C153838) *
               C1223 +
           (((C35237 + C35236 + C35235 + C35234) * C153454 * C153853 +
             (C36222 + C36223 + C36224 + C36225) * C153454 * C153713) *
                C153838 -
            ((C34901 * C28651 + C36752 + C36752 + C153860 * C28655 +
              C34899 * C4958 + C36753 + C36753 + C34891 * C4964 +
              C34897 * C3442 + C36754 + C36754 + C34890 * C3450 +
              C34895 * C1460 + C36755 + C36755 + C34889 * C1470) *
                 C153454 * C153713 +
             (C36225 + C36224 + C36223 + C36222) * C153454 * C153853) *
                C153591) *
               C153563) *
              C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C11348 * C136 + C11353 + C11353 + C153851 * C152 +
               C11350 * C329 + C11354 + C11354 + C153671 * C353) *
                  C2818 +
              (C11407 + C11408) * C2819 + C11417 * C153874) *
                 C153853 +
             ((C19416 + C19417) * C2818 + C19382 * C2819 + C18777 * C153874) *
                 C153713) *
                C153838 -
            ((C19383 * C153874 + C19384 * C2819 + (C19418 + C19419) * C2818) *
                 C153713 +
             (C12372 * C153874 + C19389 * C2819 + (C19417 + C19416) * C2818) *
                 C153853) *
                C153591) *
               C1223 +
           ((((C20419 + C20420) * C2818 + C20396 * C2819 + C20397 * C153874) *
                 C153853 +
             ((C21219 + C21220) * C2818 + (C20421 + C20422) * C2819 +
              (C20423 + C20424) * C153874) *
                 C153713) *
                C153591 -
            ((C19714 * C153874 + C20406 * C2819 + (C20420 + C20419) * C2818) *
                 C153713 +
             (C12164 * C153874 + (C11687 + C11688) * C2819 +
              (C11350 * C330 + C11633 + C11633 + C153671 * C354 +
               C11348 * C329 + C11634 + C11634 + C153851 * C353) *
                  C2818) *
                 C153853) *
                C153838) *
               C153563) *
              C153829 +
          ((((C19382 * C2818 + C18777 * C2819 + C20005 * C153874) * C153853 +
             (C19390 * C2818 + C19391 * C2819 + (C11967 + C11968) * C153874) *
                 C153713) *
                C153591 -
            ((C12371 * C153874 + C12372 * C2819 + C19389 * C2818) * C153713 +
             (C11420 * C153874 + (C11410 + C11409) * C2819 +
              (C11408 + C11407) * C2818) *
                 C153853) *
                C153838) *
               C1223 +
           ((((C11688 + C11687) * C2818 + (C11686 + C11685) * C2819 +
              (C11684 + C11683) * C153874) *
                 C153853 +
             (C20396 * C2818 + C20397 * C2819 + (C12681 + C12682) * C153874) *
                 C153713) *
                C153838 -
            (((C11350 * C3444 + C13209 + C13209 + C153671 * C3452 +
               C11348 * C1458 + C13210 + C13210 + C153851 * C1468) *
                  C153874 +
              (C20424 + C20423) * C2819 + (C20422 + C20421) * C2818) *
                 C153713 +
             ((C12682 + C12681) * C153874 + C19714 * C2819 + C20406 * C2818) *
                 C153853) *
                C153591) *
               C153563) *
              C153498)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C11348 * C136 + C11353 + C11353 + C153851 * C152 + C11350 * C329 +
              C11354 + C11354 + C153671 * C353) *
                 C153454 * C63320 +
             (C19416 + C19417) * C153454 * C63321 + C67263 * C63322 +
             C67267 * C153867) *
                C153838 -
            ((C62224 + C62223) * C153454 * C153867 + C62208 * C153454 * C63322 +
             (C19418 + C19419) * C153454 * C63321 +
             (C19417 + C19416) * C153454 * C63320) *
                C153591) *
               C1223 +
           (((C20419 + C20420) * C153454 * C63320 +
             (C21219 + C21220) * C153454 * C63321 +
             (C60451 + C60452) * C153454 * C63322 +
             (C68447 + C68448) * C153454 * C153867) *
                C153591 -
            (C68444 * C153867 + C68439 * C63322 +
             (C20420 + C20419) * C153454 * C63321 +
             (C11350 * C330 + C11633 + C11633 + C153671 * C354 + C11348 * C329 +
              C11634 + C11634 + C153851 * C353) *
                 C153454 * C63320) *
                C153838) *
               C153563) *
              C153829 +
          (((C19382 * C153454 * C63320 + C19390 * C153454 * C63321 +
             C58663 * C153454 * C63322 +
             (C58677 + C58678) * C153454 * C153867) *
                C153591 -
            (C67265 * C153867 + C67266 * C63322 + C19389 * C153454 * C63321 +
             (C11408 + C11407) * C153454 * C63320) *
                C153838) *
               C1223 +
           (((C11688 + C11687) * C153454 * C63320 + C20396 * C153454 * C63321 +
             C59645 * C153454 * C63322 +
             (C59655 + C59656) * C153454 * C153867) *
                C153838 -
            ((C11350 * C31196 + C60441 + C60441 + C153671 * C31200 +
              C11348 * C9116 + C60442 + C60442 + C153851 * C9122) *
                 C153454 * C153867 +
             (C59656 + C59655) * C153454 * C63322 + C59650 * C153454 * C63321 +
             C20406 * C153454 * C63320) *
                C153591) *
               C153563) *
              C153498)) /
            (p * q * std::sqrt(p + q));
    d2ee[174] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C11348 * C136 + C11353 + C11353 + C153851 * C152 + C11350 * C329 +
             C11354 + C11354 + C153671 * C353) *
                C2818 +
            (C11407 + C11408) * C2819 + C11417 * C153874) *
               C153853 +
           ((C19416 + C19417) * C2818 + C19382 * C2819 + C18777 * C153874) *
               C153713) *
              C153527 * C1310 -
          ((C19714 * C153874 + C20406 * C2819 + (C20420 + C20419) * C2818) *
               C153713 +
           (C12164 * C153874 + (C11687 + C11688) * C2819 +
            (C11350 * C330 + C11633 + C11633 + C153671 * C354 + C11348 * C329 +
             C11634 + C11634 + C153851 * C353) *
                C2818) *
               C153853) *
              C153527 * C1311 +
          (((C11348 * C330 + C11635 + C11635 + C153851 * C354 + C11350 * C1319 +
             C11636 + C11636 + C153671 * C1329) *
                C2818 +
            (C11689 + C11690) * C2819 + (C11691 + C11692) * C153874) *
               C153853 +
           ((C11348 * C1892 + C13870 + C13870 + C153851 * C1902 +
             C11350 * C4303 + C13869 + C13869 + C153671 * C4311) *
                C2818 +
            (C19084 + C19085) * C2819 + (C19086 + C19087) * C153874) *
               C153713) *
              C153527 * C1312 -
          (((C11350 * C5701 + C20909 + C20909 + C153671 * C5707 +
             C11348 * C4305 + C20910 + C20910 + C153851 * C4313) *
                C153874 +
            (C11350 * C5702 + C20911 + C20911 + C153671 * C5708 +
             C11348 * C4304 + C20912 + C20912 + C153851 * C4312) *
                C2819 +
            (C11350 * C5703 + C20913 + C20913 + C153671 * C5709 +
             C11348 * C4303 + C20914 + C20914 + C153851 * C4311) *
                C2818) *
               C153713 +
           ((C11350 * C3129 + C13009 + C13009 + C153671 * C3137 +
             C11348 * C1317 + C13010 + C13010 + C153851 * C1327) *
                C153874 +
            (C11350 * C3128 + C13011 + C13011 + C153671 * C3136 +
             C11348 * C1318 + C13012 + C13012 + C153851 * C1328) *
                C2819 +
            (C11350 * C3127 + C13013 + C13013 + C153671 * C3135 +
             C11348 * C1319 + C13014 + C13014 + C153851 * C1329) *
                C2818) *
               C153853) *
              C153527 * C1313) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C11348 * C136 + C11353 + C11353 + C153851 * C152 + C11350 * C329 +
              C11354 + C11354 + C153671 * C353) *
                 C2818 +
             (C11407 + C11408) * C2819 + C11417 * C153874) *
                C153853 +
            ((C19416 + C19417) * C2818 + C19382 * C2819 + C18777 * C153874) *
                C153713) *
               C153527 * C1223 -
           ((C19714 * C153874 + C20406 * C2819 + (C20420 + C20419) * C2818) *
                C153713 +
            (C12164 * C153874 + (C11687 + C11688) * C2819 +
             (C11350 * C330 + C11633 + C11633 + C153671 * C354 + C11348 * C329 +
              C11634 + C11634 + C153851 * C353) *
                 C2818) *
                C153853) *
               C153527 * C153563) *
              C1225 +
          ((((C11688 + C11687) * C2818 + (C11686 + C11685) * C2819 +
             (C11684 + C11683) * C153874) *
                C153853 +
            (C20396 * C2818 + C20397 * C2819 + (C12681 + C12682) * C153874) *
                C153713) *
               C153527 * C153563 -
           ((C12371 * C153874 + C12372 * C2819 + C19389 * C2818) * C153713 +
            (C11420 * C153874 + (C11410 + C11409) * C2819 +
             (C11408 + C11407) * C2818) *
                C153853) *
               C153527 * C1223) *
              C1226 +
          (((C11417 * C2818 + C11418 * C2819 + (C11414 + C11413) * C153874) *
                C153853 +
            (C18777 * C2818 + C20005 * C2819 + (C12383 + C12384) * C153874) *
                C153713) *
               C153527 * C1223 -
           (((C11350 * C1888 + C12663 + C12663 + C153671 * C1898 +
              C11348 * C1061 + C12664 + C12664 + C153851 * C1073) *
                 C153874 +
             (C12682 + C12681) * C2819 + C19714 * C2818) *
                C153713 +
            ((C12176 + C12175) * C153874 + C12163 * C2819 + C12164 * C2818) *
                C153853) *
               C153527 * C153563) *
              C1227)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C34895 * C136 + C34904 + C34904 + C34889 * C152 + C34897 * C329 +
             C34905 + C34905 + C34890 * C353 + C34899 * C330 + C34906 + C34906 +
             C34891 * C354 + C34901 * C1319 + C34907 + C34907 +
             C153860 * C1329) *
                C153454 * C153853 +
            (C44386 + C44387 + C44388 + C44389) * C153454 * C153713) *
               C153527 * C1223 -
           ((C45059 + C45058 + C45057 + C45056) * C153454 * C153713 +
            (C34901 * C3127 + C35190 + C35190 + C153860 * C3135 +
             C34899 * C1319 + C35191 + C35191 + C34891 * C1329 + C34897 * C330 +
             C35192 + C35192 + C34890 * C354 + C34895 * C329 + C35193 + C35193 +
             C34889 * C353) *
                C153454 * C153853) *
               C153527 * C153563) *
              C1225 +
          (((C35237 + C35236 + C35235 + C35234) * C153454 * C153853 +
            (C36222 + C36223 + C36224 + C36225) * C153454 * C153713) *
               C153527 * C153563 -
           ((C35492 + C35493 + C35494 + C35495) * C153454 * C153713 +
            (C34975 + C34974 + C34973 + C34972) * C153454 * C153853) *
               C153527 * C1223) *
              C1226 +
          (((C34979 + C34978 + C34977 + C34976) * C153454 * C153853 +
            (C35932 + C35933 + C35934 + C35935) * C153454 * C153713) *
               C153527 * C1223 -
           ((C34901 * C5701 + C36210 + C36210 + C153860 * C5707 +
             C34899 * C4305 + C36211 + C36211 + C34891 * C4313 +
             C34897 * C1890 + C36212 + C36212 + C34890 * C1900 +
             C34895 * C1059 + C36213 + C36213 + C34889 * C1071) *
                C153454 * C153713 +
            (C35717 + C35716 + C35715 + C35714) * C153454 * C153853) *
               C153527 * C153563) *
              C1227)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C34895 * C136 + C34904 + C34904 + C34889 * C152 + C34897 * C329 +
            C34905 + C34905 + C34890 * C353 + C34899 * C330 + C34906 + C34906 +
            C34891 * C354 + C34901 * C1319 + C34907 + C34907 +
            C153860 * C1329) *
               C153454 * C153853 +
           (C44386 + C44387 + C44388 + C44389) * C153454 * C153713) *
              C153527 * C1310 -
          ((C45059 + C45058 + C45057 + C45056) * C153454 * C153713 +
           (C34901 * C3127 + C35190 + C35190 + C153860 * C3135 +
            C34899 * C1319 + C35191 + C35191 + C34891 * C1329 + C34897 * C330 +
            C35192 + C35192 + C34890 * C354 + C34895 * C329 + C35193 + C35193 +
            C34889 * C353) *
               C153454 * C153853) *
              C153527 * C1311 +
          ((C34895 * C330 + C35194 + C35194 + C34889 * C354 + C34897 * C1319 +
            C35195 + C35195 + C34890 * C1329 + C34899 * C3127 + C35196 +
            C35196 + C34891 * C3135 + C34901 * C4723 + C35197 + C35197 +
            C153860 * C4729) *
               C153454 * C153853 +
           (C34895 * C1892 + C37413 + C37413 + C34889 * C1902 + C34897 * C4303 +
            C37412 + C37412 + C34890 * C4311 + C34899 * C5703 + C37411 +
            C37411 + C34891 * C5709 + C34901 * C29092 + C37410 + C37410 +
            C153860 * C29096) *
               C153454 * C153713) *
              C153527 * C1312 -
          ((C34901 * C29856 + C45384 + C45384 + C153860 * C29858 +
            C34899 * C29092 + C45385 + C45385 + C34891 * C29096 +
            C34897 * C5703 + C45386 + C45386 + C34890 * C5709 + C34895 * C4303 +
            C45387 + C45387 + C34889 * C4311) *
               C153454 * C153713 +
           (C34901 * C28502 + C36554 + C36554 + C153860 * C28506 +
            C34899 * C4723 + C36555 + C36555 + C34891 * C4729 + C34897 * C3127 +
            C36556 + C36556 + C34890 * C3135 + C34895 * C1319 + C36557 +
            C36557 + C34889 * C1329) *
               C153454 * C153853) *
              C153527 * C1313) *
         C153492) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C11348 * C136 + C11353 + C11353 + C153851 * C152 + C11350 * C329 +
             C11354 + C11354 + C153671 * C353) *
                C153454 * C63320 +
            (C19416 + C19417) * C153454 * C63321 + C67263 * C63322 +
            C67267 * C153867) *
               C153527 * C1223 -
           ((C60452 + C60451) * C153454 * C153867 + C60440 * C153454 * C63322 +
            (C20420 + C20419) * C153454 * C63321 +
            (C11350 * C330 + C11633 + C11633 + C153671 * C354 + C11348 * C329 +
             C11634 + C11634 + C153851 * C353) *
                C153454 * C63320) *
               C153527 * C153563) *
              C1225 +
          (((C11688 + C11687) * C153454 * C63320 + C20396 * C153454 * C63321 +
            C59645 * C153454 * C63322 + (C59655 + C59656) * C153454 * C153867) *
               C153527 * C153563 -
           (C67265 * C153867 + C67266 * C63322 + C19389 * C153454 * C63321 +
            (C11408 + C11407) * C153454 * C63320) *
               C153527 * C1223) *
              C1226 +
          ((C11417 * C153454 * C63320 + C18777 * C153454 * C63321 +
            C19391 * C153454 * C63322 + (C19422 + C19423) * C153454 * C153867) *
               C153527 * C1223 -
           ((C11350 * C6301 + C21209 + C21209 + C153671 * C6313 +
             C11348 * C6302 + C21210 + C21210 + C153851 * C6314) *
                C153454 * C153867 +
            (C20424 + C20423) * C153454 * C63322 + C19714 * C153454 * C63321 +
            C12164 * C153454 * C63320) *
               C153527 * C153563) *
              C1227)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C11348 * C136 + C11353 + C11353 + C153851 * C152 + C11350 * C329 +
            C11354 + C11354 + C153671 * C353) *
               C153454 * C63320 +
           (C19416 + C19417) * C153454 * C63321 + C67263 * C63322 +
           C67267 * C153867) *
              C153527 * C1310 -
          ((C60452 + C60451) * C153454 * C153867 + C60440 * C153454 * C63322 +
           (C20420 + C20419) * C153454 * C63321 +
           (C11350 * C330 + C11633 + C11633 + C153671 * C354 + C11348 * C329 +
            C11634 + C11634 + C153851 * C353) *
               C153454 * C63320) *
              C153527 * C1311 +
          ((C11348 * C330 + C11635 + C11635 + C153851 * C354 + C11350 * C1319 +
            C11636 + C11636 + C153671 * C1329) *
               C153454 * C63320 +
           (C22201 + C22202) * C153454 * C63321 +
           (C61431 + C61432) * C153454 * C63322 +
           (C11348 * C6305 + C61426 + C61426 + C153851 * C6317 +
            C11350 * C30191 + C61425 + C61425 + C153671 * C30195) *
               C153454 * C153867) *
              C153527 * C1312 -
          ((C11350 * C30190 + C68238 + C68238 + C153671 * C30194 +
            C11348 * C30191 + C68239 + C68239 + C153851 * C30195) *
               C153454 * C153867 +
           (C11350 * C28650 + C60143 + C60143 + C153671 * C28654 +
            C11348 * C4959 + C60144 + C60144 + C153851 * C4965) *
               C153454 * C63322 +
           (C11350 * C5703 + C20913 + C20913 + C153671 * C5709 +
            C11348 * C4303 + C20914 + C20914 + C153851 * C4311) *
               C153454 * C63321 +
           (C11350 * C3127 + C13013 + C13013 + C153671 * C3135 +
            C11348 * C1319 + C13014 + C13014 + C153851 * C1329) *
               C153454 * C63320) *
              C153527 * C1313) *
         C153492) /
            (p * q * std::sqrt(p + q));
    d2ee[175] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C34895 * C136 + C34904 + C34904 + C34889 * C152 + C34897 * C329 +
              C34905 + C34905 + C34890 * C353 + C34899 * C330 + C34906 +
              C34906 + C34891 * C354 + C34901 * C1319 + C34907 + C34907 +
              C153860 * C1329) *
                 C153454 * C153853 +
             (C44386 + C44387 + C44388 + C44389) * C153454 * C153713) *
                C2030 -
            ((C44390 + C44391 + C44392 + C44393) * C153454 * C153713 +
             (C44389 + C44388 + C44387 + C44386) * C153454 * C153853) *
                C153591) *
               C153837 +
           (((C45056 + C45057 + C45058 + C45059) * C153454 * C153853 +
             (C45602 + C45603 + C45604 + C45605) * C153454 * C153713) *
                C153591 -
            ((C45059 + C45058 + C45057 + C45056) * C153454 * C153713 +
             (C34901 * C3127 + C35190 + C35190 + C153860 * C3135 +
              C34899 * C1319 + C35191 + C35191 + C34891 * C1329 +
              C34897 * C330 + C35192 + C35192 + C34890 * C354 + C34895 * C329 +
              C35193 + C35193 + C34889 * C353) *
                 C153454 * C153853) *
                C2030) *
               C153563) *
              C153829 +
          ((((C35495 + C35494 + C35493 + C35492) * C153454 * C153853 +
             (C35496 + C35497 + C35498 + C35499) * C153454 * C153713) *
                C153591 -
            ((C35492 + C35493 + C35494 + C35495) * C153454 * C153713 +
             (C34975 + C34974 + C34973 + C34972) * C153454 * C153853) *
                C2030) *
               C153837 +
           (((C35237 + C35236 + C35235 + C35234) * C153454 * C153853 +
             (C36222 + C36223 + C36224 + C36225) * C153454 * C153713) *
                C2030 -
            ((C34901 * C28651 + C36752 + C36752 + C153860 * C28655 +
              C34899 * C4958 + C36753 + C36753 + C34891 * C4964 +
              C34897 * C3442 + C36754 + C36754 + C34890 * C3450 +
              C34895 * C1460 + C36755 + C36755 + C34889 * C1470) *
                 C153454 * C153713 +
             (C36225 + C36224 + C36223 + C36222) * C153454 * C153853) *
                C153591) *
               C153563) *
              C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C11348 * C136 + C11353 + C11353 + C153851 * C152 +
               C11350 * C329 + C11354 + C11354 + C153671 * C353) *
                  C2818 +
              (C11407 + C11408) * C2819 + C11417 * C153874) *
                 C153853 +
             ((C19416 + C19417) * C2818 + C19382 * C2819 + C18777 * C153874) *
                 C153713) *
                C2030 -
            ((C19383 * C153874 + C19384 * C2819 + (C19418 + C19419) * C2818) *
                 C153713 +
             (C12372 * C153874 + C19389 * C2819 + (C19417 + C19416) * C2818) *
                 C153853) *
                C153591) *
               C153837 +
           ((((C20419 + C20420) * C2818 + C20396 * C2819 + C20397 * C153874) *
                 C153853 +
             ((C21219 + C21220) * C2818 + (C20421 + C20422) * C2819 +
              (C20423 + C20424) * C153874) *
                 C153713) *
                C153591 -
            ((C19714 * C153874 + C20406 * C2819 + (C20420 + C20419) * C2818) *
                 C153713 +
             (C12164 * C153874 + (C11687 + C11688) * C2819 +
              (C11350 * C330 + C11633 + C11633 + C153671 * C354 +
               C11348 * C329 + C11634 + C11634 + C153851 * C353) *
                  C2818) *
                 C153853) *
                C2030) *
               C153563) *
              C153829 +
          ((((C19382 * C2818 + C18777 * C2819 + C20005 * C153874) * C153853 +
             (C19390 * C2818 + C19391 * C2819 + (C11967 + C11968) * C153874) *
                 C153713) *
                C153591 -
            ((C12371 * C153874 + C12372 * C2819 + C19389 * C2818) * C153713 +
             (C11420 * C153874 + (C11410 + C11409) * C2819 +
              (C11408 + C11407) * C2818) *
                 C153853) *
                C2030) *
               C153837 +
           ((((C11688 + C11687) * C2818 + (C11686 + C11685) * C2819 +
              (C11684 + C11683) * C153874) *
                 C153853 +
             (C20396 * C2818 + C20397 * C2819 + (C12681 + C12682) * C153874) *
                 C153713) *
                C2030 -
            (((C11350 * C3444 + C13209 + C13209 + C153671 * C3452 +
               C11348 * C1458 + C13210 + C13210 + C153851 * C1468) *
                  C153874 +
              (C20424 + C20423) * C2819 + (C20422 + C20421) * C2818) *
                 C153713 +
             ((C12682 + C12681) * C153874 + C19714 * C2819 + C20406 * C2818) *
                 C153853) *
                C153591) *
               C153563) *
              C153498)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C11348 * C136 + C11353 + C11353 + C153851 * C152 + C11350 * C329 +
              C11354 + C11354 + C153671 * C353) *
                 C153454 * C63320 +
             (C19416 + C19417) * C153454 * C63321 + C67263 * C63322 +
             C67267 * C153867) *
                C2030 -
            (C69633 * C153867 + C69626 * C63322 +
             (C19418 + C19419) * C153454 * C63321 +
             (C19417 + C19416) * C153454 * C63320) *
                C153591) *
               C153837 +
           (((C20419 + C20420) * C153454 * C63320 +
             (C21219 + C21220) * C153454 * C63321 +
             (C60451 + C60452) * C153454 * C63322 +
             (C68447 + C68448) * C153454 * C153867) *
                C153591 -
            (C68444 * C153867 + C68439 * C63322 +
             (C20420 + C20419) * C153454 * C63321 +
             (C11350 * C330 + C11633 + C11633 + C153671 * C354 + C11348 * C329 +
              C11634 + C11634 + C153851 * C353) *
                 C153454 * C63320) *
                C2030) *
               C153563) *
              C153829 +
          (((C19382 * C153454 * C63320 + C19390 * C153454 * C63321 +
             C58663 * C153454 * C63322 +
             (C58677 + C58678) * C153454 * C153867) *
                C153591 -
            (C67265 * C153867 + C67266 * C63322 + C19389 * C153454 * C63321 +
             (C11408 + C11407) * C153454 * C63320) *
                C2030) *
               C153837 +
           (((C11688 + C11687) * C153454 * C63320 + C20396 * C153454 * C63321 +
             C59645 * C153454 * C63322 +
             (C59655 + C59656) * C153454 * C153867) *
                C2030 -
            ((C11350 * C31196 + C60441 + C60441 + C153671 * C31200 +
              C11348 * C9116 + C60442 + C60442 + C153851 * C9122) *
                 C153454 * C153867 +
             (C59656 + C59655) * C153454 * C63322 + C59650 * C153454 * C63321 +
             C20406 * C153454 * C63320) *
                C153591) *
               C153563) *
              C153498)) /
            (p * q * std::sqrt(p + q));
    d2ee[176] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C34895 * C136 + C34904 + C34904 + C34889 * C152 + C34897 * C329 +
             C34905 + C34905 + C34890 * C353 + C34899 * C330 + C34906 + C34906 +
             C34891 * C354 + C34901 * C1319 + C34907 + C34907 +
             C153860 * C1329) *
                C153454 * C153853 +
            (C44386 + C44387 + C44388 + C44389) * C153454 * C153713) *
               C153910 -
           ((C44390 + C44391 + C44392 + C44393) * C153454 * C153713 +
            (C44389 + C44388 + C44387 + C44386) * C153454 * C153853) *
               C153911 +
           ((C44393 + C44392 + C44391 + C44390) * C153454 * C153853 +
            (C46814 + C46815 + C46816 + C46817) * C153454 * C153713) *
               C2546) *
              C153837 +
          (((C45056 + C45057 + C45058 + C45059) * C153454 * C153853 +
            (C45602 + C45603 + C45604 + C45605) * C153454 * C153713) *
               C153911 -
           ((C45059 + C45058 + C45057 + C45056) * C153454 * C153713 +
            (C34901 * C3127 + C35190 + C35190 + C153860 * C3135 +
             C34899 * C1319 + C35191 + C35191 + C34891 * C1329 + C34897 * C330 +
             C35192 + C35192 + C34890 * C354 + C34895 * C329 + C35193 + C35193 +
             C34889 * C353) *
                C153454 * C153853) *
               C153910 -
           ((C34901 * C30190 + C45590 + C45590 + C153860 * C30194 +
             C34899 * C30191 + C45591 + C45591 + C34891 * C30195 +
             C34897 * C6305 + C45592 + C45592 + C34890 * C6317 +
             C34895 * C6306 + C45593 + C45593 + C34889 * C6318) *
                C153454 * C153713 +
            (C45605 + C45604 + C45603 + C45602) * C153454 * C153853) *
               C2546) *
              C153563) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C11348 * C136 + C11353 + C11353 + C153851 * C152 + C11350 * C329 +
              C11354 + C11354 + C153671 * C353) *
                 C2818 +
             (C11407 + C11408) * C2819 + C11417 * C153874) *
                C153853 +
            ((C19416 + C19417) * C2818 + C19382 * C2819 + C18777 * C153874) *
                C153713) *
               C153910 -
           ((C19383 * C153874 + C19384 * C2819 + (C19418 + C19419) * C2818) *
                C153713 +
            (C12372 * C153874 + C19389 * C2819 + (C19417 + C19416) * C2818) *
                C153853) *
               C153911 +
           (((C19419 + C19418) * C2818 + C19390 * C2819 + C19391 * C153874) *
                C153853 +
            ((C22991 + C22992) * C2818 + (C19420 + C19421) * C2819 +
             (C19422 + C19423) * C153874) *
                C153713) *
               C2546) *
              C153837 +
          ((((C20419 + C20420) * C2818 + C20396 * C2819 + C20397 * C153874) *
                C153853 +
            ((C21219 + C21220) * C2818 + (C20421 + C20422) * C2819 +
             (C20423 + C20424) * C153874) *
                C153713) *
               C153911 -
           ((C19714 * C153874 + C20406 * C2819 + (C20420 + C20419) * C2818) *
                C153713 +
            (C12164 * C153874 + (C11687 + C11688) * C2819 +
             (C11350 * C330 + C11633 + C11633 + C153671 * C354 + C11348 * C329 +
              C11634 + C11634 + C153851 * C353) *
                 C2818) *
                C153853) *
               C153910 -
           (((C11350 * C6301 + C21209 + C21209 + C153671 * C6313 +
              C11348 * C6302 + C21210 + C21210 + C153851 * C6314) *
                 C153874 +
             (C11350 * C6303 + C21211 + C21211 + C153671 * C6315 +
              C11348 * C6304 + C21212 + C21212 + C153851 * C6316) *
                 C2819 +
             (C11350 * C6305 + C21213 + C21213 + C153671 * C6317 +
              C11348 * C6306 + C21214 + C21214 + C153851 * C6318) *
                 C2818) *
                C153713 +
            ((C20424 + C20423) * C153874 + (C20422 + C20421) * C2819 +
             (C21220 + C21219) * C2818) *
                C153853) *
               C2546) *
              C153563) *
         C153492) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C11348 * C136 + C11353 + C11353 + C153851 * C152 + C11350 * C329 +
             C11354 + C11354 + C153671 * C353) *
                C153454 * C63320 +
            (C19416 + C19417) * C153454 * C63321 + C67263 * C63322 +
            C67267 * C153867) *
               C153910 -
           (C69633 * C153867 + C69626 * C63322 +
            (C19418 + C19419) * C153454 * C63321 +
            (C19417 + C19416) * C153454 * C63320) *
               C153911 +
           (C67263 * C63320 + C67267 * C63321 +
            (C62223 + C62224) * C153454 * C63322 +
            (C69638 + C69639) * C153454 * C153867) *
               C2546) *
              C153837 +
          (((C20419 + C20420) * C153454 * C63320 +
            (C21219 + C21220) * C153454 * C63321 +
            (C60451 + C60452) * C153454 * C63322 +
            (C68447 + C68448) * C153454 * C153867) *
               C153911 -
           (C68444 * C153867 + C68439 * C63322 +
            (C20420 + C20419) * C153454 * C63321 +
            (C11350 * C330 + C11633 + C11633 + C153671 * C354 + C11348 * C329 +
             C11634 + C11634 + C153851 * C353) *
                C153454 * C63320) *
               C153910 -
           ((C11350 * C34006 + C68440 + C68440 + C153671 * C34010 +
             C11348 * C34007 + C68441 + C68441 + C153851 * C34011) *
                C153454 * C153867 +
            (C68448 + C68447) * C153454 * C63322 + C68444 * C63321 +
            C68439 * C63320) *
               C2546) *
              C153563) *
         C153492) /
            (p * q * std::sqrt(p + q));
    d2ee[177] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C11348 * C136 + C11353 + C11353 + C153851 * C152 +
                  C11350 * C329 + C11354 + C11354 + C153671 * C353) *
                     C2818 +
                 (C11407 + C11408) * C2819 + C11417 * C153874) *
                    C153853 +
                ((C19416 + C19417) * C2818 + C19382 * C2819 +
                 C18777 * C153874) *
                    C153713) *
                   C2030 -
               ((C19383 * C153874 + C19384 * C2819 +
                 (C19418 + C19419) * C2818) *
                    C153713 +
                (C12372 * C153874 + C19389 * C2819 +
                 (C19417 + C19416) * C2818) *
                    C153853) *
                   C153591) *
                  C153511 * C1225 +
              (((C19382 * C2818 + C18777 * C2819 + C20005 * C153874) * C153853 +
                (C19390 * C2818 + C19391 * C2819 +
                 (C11967 + C11968) * C153874) *
                    C153713) *
                   C153591 -
               ((C12371 * C153874 + C12372 * C2819 + C19389 * C2818) * C153713 +
                (C11420 * C153874 + (C11410 + C11409) * C2819 +
                 (C11408 + C11407) * C2818) *
                    C153853) *
                   C2030) *
                  C153511 * C1226 +
              (((C11417 * C2818 + C11418 * C2819 +
                 (C11414 + C11413) * C153874) *
                    C153853 +
                (C18777 * C2818 + C20005 * C2819 +
                 (C12383 + C12384) * C153874) *
                    C153713) *
                   C2030 -
               (((C11350 * C1457 + C11931 + C11931 + C153671 * C1467 +
                  C11348 * C547 + C11932 + C11932 + C153851 * C571) *
                     C153874 +
                 (C11968 + C11967) * C2819 + C19383 * C2818) *
                    C153713 +
                ((C12384 + C12383) * C153874 + C12371 * C2819 +
                 C12372 * C2818) *
                    C153853) *
                   C153591) *
                  C153511 * C1227) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C11348 * C136 + C11353 + C11353 + C153851 * C152 +
                  C11350 * C329 + C11354 + C11354 + C153671 * C353) *
                     C2818 +
                 (C11407 + C11408) * C2819 + C11417 * C153874) *
                    C153853 +
                ((C19416 + C19417) * C2818 + C19382 * C2819 +
                 C18777 * C153874) *
                    C153713) *
                   C2030 -
               ((C19383 * C153874 + C19384 * C2819 +
                 (C19418 + C19419) * C2818) *
                    C153713 +
                (C12372 * C153874 + C19389 * C2819 +
                 (C19417 + C19416) * C2818) *
                    C153853) *
                   C153591) *
                  C320 +
              ((((C20419 + C20420) * C2818 + C20396 * C2819 +
                 C20397 * C153874) *
                    C153853 +
                ((C21219 + C21220) * C2818 + (C20421 + C20422) * C2819 +
                 (C20423 + C20424) * C153874) *
                    C153713) *
                   C153591 -
               ((C19714 * C153874 + C20406 * C2819 +
                 (C20420 + C20419) * C2818) *
                    C153713 +
                (C12164 * C153874 + (C11687 + C11688) * C2819 +
                 (C11350 * C330 + C11633 + C11633 + C153671 * C354 +
                  C11348 * C329 + C11634 + C11634 + C153851 * C353) *
                     C2818) *
                    C153853) *
                   C2030) *
                  C321 +
              ((((C11348 * C330 + C11635 + C11635 + C153851 * C354 +
                  C11350 * C1319 + C11636 + C11636 + C153671 * C1329) *
                     C2818 +
                 (C11689 + C11690) * C2819 + (C11691 + C11692) * C153874) *
                    C153853 +
                ((C22201 + C22202) * C2818 + (C19084 + C19085) * C2819 +
                 (C19086 + C19087) * C153874) *
                    C153713) *
                   C2030 -
               (((C11350 * C4957 + C22191 + C22191 + C153671 * C4963 +
                  C11348 * C3443 + C22192 + C22192 + C153851 * C3451) *
                     C153874 +
                 (C11350 * C4958 + C22193 + C22193 + C153671 * C4964 +
                  C11348 * C3442 + C22194 + C22194 + C153851 * C3450) *
                     C2819 +
                 (C11350 * C4959 + C22195 + C22195 + C153671 * C4965 +
                  C11348 * C3441 + C22196 + C22196 + C153851 * C3449) *
                     C2818) *
                    C153713 +
                ((C19087 + C19086) * C153874 + (C19085 + C19084) * C2819 +
                 (C22202 + C22201) * C2818) *
                    C153853) *
                   C153591) *
                  C322) *
             C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C11348 * C136 + C11353 + C11353 + C153851 * C152 + C11350 * C329 +
             C11354 + C11354 + C153671 * C353) *
                C2818 +
            (C11407 + C11408) * C2819 + C11417 * C153874) *
               C153853 +
           ((C19416 + C19417) * C2818 + C19382 * C2819 + C18777 * C153874) *
               C153713) *
              C2236 -
          ((C19383 * C153874 + C19384 * C2819 + (C19418 + C19419) * C2818) *
               C153713 +
           (C12372 * C153874 + C19389 * C2819 + (C19417 + C19416) * C2818) *
               C153853) *
              C2237 +
          (((C19419 + C19418) * C2818 + C19390 * C2819 + C19391 * C153874) *
               C153853 +
           ((C22991 + C22992) * C2818 + (C19420 + C19421) * C2819 +
            (C19422 + C19423) * C153874) *
               C153713) *
              C2238 -
          (((C11350 * C9115 + C22981 + C22981 + C153671 * C9121 +
             C11348 * C7675 + C22982 + C22982 + C153851 * C7683) *
                C153874 +
            (C11350 * C9116 + C22983 + C22983 + C153671 * C9122 +
             C11348 * C7674 + C22984 + C22984 + C153851 * C7682) *
                C2819 +
            (C11350 * C9117 + C22985 + C22985 + C153671 * C9123 +
             C11348 * C7673 + C22986 + C22986 + C153851 * C7681) *
                C2818) *
               C153713 +
           ((C19423 + C19422) * C153874 + (C19421 + C19420) * C2819 +
            (C22992 + C22991) * C2818) *
               C153853) *
              C2239) *
         C153511 * C153492) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C34895 * C136 + C34904 + C34904 + C34889 * C152 + C34897 * C329 +
             C34905 + C34905 + C34890 * C353 + C34899 * C330 + C34906 + C34906 +
             C34891 * C354 + C34901 * C1319 + C34907 + C34907 +
             C153860 * C1329) *
                C153454 * C153853 +
            (C44386 + C44387 + C44388 + C44389) * C153454 * C153713) *
               C2030 -
           ((C44390 + C44391 + C44392 + C44393) * C153454 * C153713 +
            (C44389 + C44388 + C44387 + C44386) * C153454 * C153853) *
               C153591) *
              C153511 * C1225 +
          (((C35495 + C35494 + C35493 + C35492) * C153454 * C153853 +
            (C35496 + C35497 + C35498 + C35499) * C153454 * C153713) *
               C153591 -
           ((C35492 + C35493 + C35494 + C35495) * C153454 * C153713 +
            (C34975 + C34974 + C34973 + C34972) * C153454 * C153853) *
               C2030) *
              C153511 * C1226 +
          (((C34979 + C34978 + C34977 + C34976) * C153454 * C153853 +
            (C35932 + C35933 + C35934 + C35935) * C153454 * C153713) *
               C2030 -
           ((C34901 * C4957 + C35472 + C35472 + C153860 * C4963 +
             C34899 * C3443 + C35473 + C35473 + C34891 * C3451 +
             C34897 * C1459 + C35474 + C35474 + C34890 * C1469 + C34895 * C545 +
             C35475 + C35475 + C34889 * C569) *
                C153454 * C153713 +
            (C35935 + C35934 + C35933 + C35932) * C153454 * C153853) *
               C153591) *
              C153511 * C1227)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C34895 * C136 + C34904 + C34904 + C34889 * C152 + C34897 * C329 +
             C34905 + C34905 + C34890 * C353 + C34899 * C330 + C34906 + C34906 +
             C34891 * C354 + C34901 * C1319 + C34907 + C34907 +
             C153860 * C1329) *
                C153454 * C153853 +
            (C44386 + C44387 + C44388 + C44389) * C153454 * C153713) *
               C2030 -
           ((C44390 + C44391 + C44392 + C44393) * C153454 * C153713 +
            (C44389 + C44388 + C44387 + C44386) * C153454 * C153853) *
               C153591) *
              C320 +
          (((C45056 + C45057 + C45058 + C45059) * C153454 * C153853 +
            (C45602 + C45603 + C45604 + C45605) * C153454 * C153713) *
               C153591 -
           ((C45059 + C45058 + C45057 + C45056) * C153454 * C153713 +
            (C34901 * C3127 + C35190 + C35190 + C153860 * C3135 +
             C34899 * C1319 + C35191 + C35191 + C34891 * C1329 + C34897 * C330 +
             C35192 + C35192 + C34890 * C354 + C34895 * C329 + C35193 + C35193 +
             C34889 * C353) *
                C153454 * C153853) *
               C2030) *
              C321 +
          (((C34895 * C330 + C35194 + C35194 + C34889 * C354 + C34897 * C1319 +
             C35195 + C35195 + C34890 * C1329 + C34899 * C3127 + C35196 +
             C35196 + C34891 * C3135 + C34901 * C4723 + C35197 + C35197 +
             C153860 * C4729) *
                C153454 * C153853 +
            (C46272 + C46273 + C46274 + C46275) * C153454 * C153713) *
               C2030 -
           ((C34901 * C29442 + C46260 + C46260 + C153860 * C29444 +
             C34899 * C28650 + C46261 + C46261 + C34891 * C28654 +
             C34897 * C4959 + C46262 + C46262 + C34890 * C4965 +
             C34895 * C3441 + C46263 + C46263 + C34889 * C3449) *
                C153454 * C153713 +
            (C46275 + C46274 + C46273 + C46272) * C153454 * C153853) *
               C153591) *
              C322) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C34895 * C136 + C34904 + C34904 + C34889 * C152 + C34897 * C329 +
            C34905 + C34905 + C34890 * C353 + C34899 * C330 + C34906 + C34906 +
            C34891 * C354 + C34901 * C1319 + C34907 + C34907 +
            C153860 * C1329) *
               C153454 * C153853 +
           (C44386 + C44387 + C44388 + C44389) * C153454 * C153713) *
              C2236 -
          ((C44390 + C44391 + C44392 + C44393) * C153454 * C153713 +
           (C44389 + C44388 + C44387 + C44386) * C153454 * C153853) *
              C2237 +
          ((C44393 + C44392 + C44391 + C44390) * C153454 * C153853 +
           (C46814 + C46815 + C46816 + C46817) * C153454 * C153713) *
              C2238 -
          ((C34901 * C32641 + C46802 + C46802 + C153860 * C32643 +
            C34899 * C31195 + C46803 + C46803 + C34891 * C31199 +
            C34897 * C9117 + C46804 + C46804 + C34890 * C9123 + C34895 * C7673 +
            C46805 + C46805 + C34889 * C7681) *
               C153454 * C153713 +
           (C46817 + C46816 + C46815 + C46814) * C153454 * C153853) *
              C2239) *
         C153511 * C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C11348 * C136 + C11353 + C11353 + C153851 * C152 + C11350 * C329 +
             C11354 + C11354 + C153671 * C353) *
                C153454 * C63320 +
            (C19416 + C19417) * C153454 * C63321 + C67263 * C63322 +
            C67267 * C153867) *
               C2030 -
           ((C62224 + C62223) * C153454 * C153867 + C62208 * C153454 * C63322 +
            (C19418 + C19419) * C153454 * C63321 +
            (C19417 + C19416) * C153454 * C63320) *
               C153591) *
              C153511 * C1225 +
          ((C19382 * C153454 * C63320 + C19390 * C153454 * C63321 +
            C58663 * C153454 * C63322 + (C58677 + C58678) * C153454 * C153867) *
               C153591 -
           (C67265 * C153867 + C67266 * C63322 + C19389 * C153454 * C63321 +
            (C11408 + C11407) * C153454 * C63320) *
               C2030) *
              C153511 * C1226 +
          ((C11417 * C153454 * C63320 + C18777 * C153454 * C63321 +
            C19391 * C153454 * C63322 + (C19422 + C19423) * C153454 * C153867) *
               C2030 -
           ((C11350 * C9115 + C22981 + C22981 + C153671 * C9121 +
             C11348 * C7675 + C22982 + C22982 + C153851 * C7683) *
                C153454 * C153867 +
            (C19423 + C19422) * C153454 * C63322 + C19383 * C153454 * C63321 +
            C12372 * C153454 * C63320) *
               C153591) *
              C153511 * C1227)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C11348 * C136 + C11353 + C11353 + C153851 * C152 + C11350 * C329 +
             C11354 + C11354 + C153671 * C353) *
                C153454 * C63320 +
            (C19416 + C19417) * C153454 * C63321 + C67263 * C63322 +
            C67267 * C153867) *
               C2030 -
           ((C62224 + C62223) * C153454 * C153867 + C62208 * C153454 * C63322 +
            (C19418 + C19419) * C153454 * C63321 +
            (C19417 + C19416) * C153454 * C63320) *
               C153591) *
              C320 +
          (((C20419 + C20420) * C153454 * C63320 +
            (C21219 + C21220) * C153454 * C63321 +
            (C60451 + C60452) * C153454 * C63322 +
            (C68447 + C68448) * C153454 * C153867) *
               C153591 -
           (C68444 * C153867 + C68439 * C63322 +
            (C20420 + C20419) * C153454 * C63321 +
            (C11350 * C330 + C11633 + C11633 + C153671 * C354 + C11348 * C329 +
             C11634 + C11634 + C153851 * C353) *
                C153454 * C63320) *
               C2030) *
              C321 +
          (((C11348 * C330 + C11635 + C11635 + C153851 * C354 + C11350 * C1319 +
             C11636 + C11636 + C153671 * C1329) *
                C153454 * C63320 +
            (C22201 + C22202) * C153454 * C63321 +
            (C61431 + C61432) * C153454 * C63322 +
            (C69105 + C69106) * C153454 * C153867) *
               C2030 -
           ((C11350 * C32641 + C69099 + C69099 + C153671 * C32643 +
             C11348 * C31195 + C69100 + C69100 + C153851 * C31199) *
                C153454 * C153867 +
            (C69106 + C69105) * C153454 * C63322 +
            (C61432 + C61431) * C153454 * C63321 +
            (C22202 + C22201) * C153454 * C63320) *
               C153591) *
              C322) *
         C153492) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C11348 * C136 + C11353 + C11353 + C153851 * C152 + C11350 * C329 +
            C11354 + C11354 + C153671 * C353) *
               C153454 * C63320 +
           (C19416 + C19417) * C153454 * C63321 + C67263 * C63322 +
           C67267 * C153867) *
              C2236 -
          (C69633 * C153867 + C69626 * C63322 +
           (C19418 + C19419) * C153454 * C63321 +
           (C19417 + C19416) * C153454 * C63320) *
              C2237 +
          (C67263 * C63320 + C67267 * C63321 +
           (C62223 + C62224) * C153454 * C63322 +
           (C69638 + C69639) * C153454 * C153867) *
              C2238 -
          ((C11350 * C56702 + C69631 + C69631 + C153671 * C56704 +
            C11348 * C55913 + C69632 + C69632 + C153851 * C55917) *
               C153454 * C153867 +
           (C69639 + C69638) * C153454 * C63322 + C69633 * C63321 +
           C69626 * C63320) *
              C2239) *
         C153511 * C153492) /
            (p * q * std::sqrt(p + q));
    d2ee[178] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C34895 * C136 + C34904 + C34904 + C34889 * C152 + C34897 * C329 +
             C34905 + C34905 + C34890 * C353 + C34899 * C330 + C34906 + C34906 +
             C34891 * C354 + C34901 * C1319 + C34907 + C34907 +
             C153860 * C1329) *
                C153454 * C153853 +
            (C44386 + C44387 + C44388 + C44389) * C153454 * C153713) *
               C153910 -
           ((C44390 + C44391 + C44392 + C44393) * C153454 * C153713 +
            (C44389 + C44388 + C44387 + C44386) * C153454 * C153853) *
               C153911 +
           ((C44393 + C44392 + C44391 + C44390) * C153454 * C153853 +
            (C46814 + C46815 + C46816 + C46817) * C153454 * C153713) *
               C2546) *
              C153511 * C153829 +
          (((C35495 + C35494 + C35493 + C35492) * C153454 * C153853 +
            (C35496 + C35497 + C35498 + C35499) * C153454 * C153713) *
               C153911 -
           ((C35492 + C35493 + C35494 + C35495) * C153454 * C153713 +
            (C34975 + C34974 + C34973 + C34972) * C153454 * C153853) *
               C153910 -
           ((C34901 * C31999 + C37932 + C37932 + C153860 * C32001 +
             C34899 * C6303 + C37933 + C37933 + C34891 * C6315 +
             C34897 * C6304 + C37934 + C37934 + C34890 * C6316 +
             C34895 * C2243 + C37935 + C37935 + C34889 * C2253) *
                C153454 * C153713 +
            (C35499 + C35498 + C35497 + C35496) * C153454 * C153853) *
               C2546) *
              C153511 * C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C11348 * C136 + C11353 + C11353 + C153851 * C152 + C11350 * C329 +
              C11354 + C11354 + C153671 * C353) *
                 C2818 +
             (C11407 + C11408) * C2819 + C11417 * C153874) *
                C153853 +
            ((C19416 + C19417) * C2818 + C19382 * C2819 + C18777 * C153874) *
                C153713) *
               C153910 -
           ((C19383 * C153874 + C19384 * C2819 + (C19418 + C19419) * C2818) *
                C153713 +
            (C12372 * C153874 + C19389 * C2819 + (C19417 + C19416) * C2818) *
                C153853) *
               C153911 +
           (((C19419 + C19418) * C2818 + C19390 * C2819 + C19391 * C153874) *
                C153853 +
            ((C22991 + C22992) * C2818 + (C19420 + C19421) * C2819 +
             (C19422 + C19423) * C153874) *
                C153713) *
               C2546) *
              C153511 * C153829 +
          (((C19382 * C2818 + C18777 * C2819 + C20005 * C153874) * C153853 +
            (C19390 * C2818 + C19391 * C2819 + (C11967 + C11968) * C153874) *
                C153713) *
               C153911 -
           ((C12371 * C153874 + C12372 * C2819 + C19389 * C2818) * C153713 +
            (C11420 * C153874 + (C11410 + C11409) * C2819 +
             (C11408 + C11407) * C2818) *
                C153853) *
               C153910 -
           (((C11350 * C8488 + C14389 + C14389 + C153671 * C8490 +
              C11348 * C2241 + C14390 + C14390 + C153851 * C2251) *
                 C153874 +
             (C19423 + C19422) * C2819 + (C19421 + C19420) * C2818) *
                C153713 +
            ((C11968 + C11967) * C153874 + C19383 * C2819 + C19384 * C2818) *
                C153853) *
               C2546) *
              C153511 * C153498)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C11348 * C136 + C11353 + C11353 + C153851 * C152 + C11350 * C329 +
             C11354 + C11354 + C153671 * C353) *
                C153454 * C63320 +
            (C19416 + C19417) * C153454 * C63321 + C67263 * C63322 +
            C67267 * C153867) *
               C153910 -
           (C69633 * C153867 + C69626 * C63322 +
            (C19418 + C19419) * C153454 * C63321 +
            (C19417 + C19416) * C153454 * C63320) *
               C153911 +
           (C67263 * C63320 + C67267 * C63321 +
            (C62223 + C62224) * C153454 * C63322 +
            (C69638 + C69639) * C153454 * C153867) *
               C2546) *
              C153511 * C153829 +
          ((C19382 * C153454 * C63320 + C19390 * C153454 * C63321 +
            C58663 * C153454 * C63322 + (C58677 + C58678) * C153454 * C153867) *
               C153911 -
           (C67265 * C153867 + C67266 * C63322 + C19389 * C153454 * C63321 +
            (C11408 + C11407) * C153454 * C63320) *
               C153910 -
           ((C11350 * C56351 + C62213 + C62213 + C153671 * C56353 +
             C11348 * C10465 + C62214 + C62214 + C153851 * C10471) *
                C153454 * C153867 +
            (C58678 + C58677) * C153454 * C63322 + C67265 * C63321 +
            C67266 * C63320) *
               C2546) *
              C153511 * C153498)) /
            (p * q * std::sqrt(p + q));
    d2ee[179] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C11348 * C136 + C11353 + C11353 + C153851 * C152 + C11350 * C329 +
              C11354 + C11354 + C153671 * C353) *
                 C2818 +
             (C11407 + C11408) * C2819 + C11417 * C153874) *
                C153853 +
            ((C19416 + C19417) * C2818 + C19382 * C2819 + C18777 * C153874) *
                C153713) *
               C2030 -
           ((C19383 * C153874 + C19384 * C2819 + (C19418 + C19419) * C2818) *
                C153713 +
            (C12372 * C153874 + C19389 * C2819 + (C19417 + C19416) * C2818) *
                C153853) *
               C153591) *
              C320 +
          ((((C20419 + C20420) * C2818 + C20396 * C2819 + C20397 * C153874) *
                C153853 +
            ((C21219 + C21220) * C2818 + (C20421 + C20422) * C2819 +
             (C20423 + C20424) * C153874) *
                C153713) *
               C153591 -
           ((C19714 * C153874 + C20406 * C2819 + (C20420 + C20419) * C2818) *
                C153713 +
            (C12164 * C153874 + (C11687 + C11688) * C2819 +
             (C11350 * C330 + C11633 + C11633 + C153671 * C354 + C11348 * C329 +
              C11634 + C11634 + C153851 * C353) *
                 C2818) *
                C153853) *
               C2030) *
              C321 +
          ((((C11348 * C330 + C11635 + C11635 + C153851 * C354 +
              C11350 * C1319 + C11636 + C11636 + C153671 * C1329) *
                 C2818 +
             (C11689 + C11690) * C2819 + (C11691 + C11692) * C153874) *
                C153853 +
            ((C22201 + C22202) * C2818 + (C19084 + C19085) * C2819 +
             (C19086 + C19087) * C153874) *
                C153713) *
               C2030 -
           (((C11350 * C4957 + C22191 + C22191 + C153671 * C4963 +
              C11348 * C3443 + C22192 + C22192 + C153851 * C3451) *
                 C153874 +
             (C11350 * C4958 + C22193 + C22193 + C153671 * C4964 +
              C11348 * C3442 + C22194 + C22194 + C153851 * C3450) *
                 C2819 +
             (C11350 * C4959 + C22195 + C22195 + C153671 * C4965 +
              C11348 * C3441 + C22196 + C22196 + C153851 * C3449) *
                 C2818) *
                C153713 +
            ((C19087 + C19086) * C153874 + (C19085 + C19084) * C2819 +
             (C22202 + C22201) * C2818) *
                C153853) *
               C153591) *
              C322) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C11348 * C136 + C11353 + C11353 + C153851 * C152 + C11350 * C329 +
              C11354 + C11354 + C153671 * C353) *
                 C2818 +
             (C11407 + C11408) * C2819 + C11417 * C153874) *
                C153853 +
            ((C19416 + C19417) * C2818 + C19382 * C2819 + C18777 * C153874) *
                C153713) *
               C2030 -
           ((C19383 * C153874 + C19384 * C2819 + (C19418 + C19419) * C2818) *
                C153713 +
            (C12372 * C153874 + C19389 * C2819 + (C19417 + C19416) * C2818) *
                C153853) *
               C153591) *
              C153511 * C1225 +
          (((C19382 * C2818 + C18777 * C2819 + C20005 * C153874) * C153853 +
            (C19390 * C2818 + C19391 * C2819 + (C11967 + C11968) * C153874) *
                C153713) *
               C153591 -
           ((C12371 * C153874 + C12372 * C2819 + C19389 * C2818) * C153713 +
            (C11420 * C153874 + (C11410 + C11409) * C2819 +
             (C11408 + C11407) * C2818) *
                C153853) *
               C2030) *
              C153511 * C1226 +
          (((C11417 * C2818 + C11418 * C2819 + (C11414 + C11413) * C153874) *
                C153853 +
            (C18777 * C2818 + C20005 * C2819 + (C12383 + C12384) * C153874) *
                C153713) *
               C2030 -
           (((C11350 * C1457 + C11931 + C11931 + C153671 * C1467 +
              C11348 * C547 + C11932 + C11932 + C153851 * C571) *
                 C153874 +
             (C11968 + C11967) * C2819 + C19383 * C2818) *
                C153713 +
            ((C12384 + C12383) * C153874 + C12371 * C2819 + C12372 * C2818) *
                C153853) *
               C153591) *
              C153511 * C1227)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C34895 * C136 + C34904 + C34904 + C34889 * C152 + C34897 * C329 +
             C34905 + C34905 + C34890 * C353 + C34899 * C330 + C34906 + C34906 +
             C34891 * C354 + C34901 * C1319 + C34907 + C34907 +
             C153860 * C1329) *
                C153454 * C153853 +
            (C44386 + C44387 + C44388 + C44389) * C153454 * C153713) *
               C2030 -
           ((C44390 + C44391 + C44392 + C44393) * C153454 * C153713 +
            (C44389 + C44388 + C44387 + C44386) * C153454 * C153853) *
               C153591) *
              C153511 * C1225 +
          (((C35495 + C35494 + C35493 + C35492) * C153454 * C153853 +
            (C35496 + C35497 + C35498 + C35499) * C153454 * C153713) *
               C153591 -
           ((C35492 + C35493 + C35494 + C35495) * C153454 * C153713 +
            (C34975 + C34974 + C34973 + C34972) * C153454 * C153853) *
               C2030) *
              C153511 * C1226 +
          (((C34979 + C34978 + C34977 + C34976) * C153454 * C153853 +
            (C35932 + C35933 + C35934 + C35935) * C153454 * C153713) *
               C2030 -
           ((C34901 * C4957 + C35472 + C35472 + C153860 * C4963 +
             C34899 * C3443 + C35473 + C35473 + C34891 * C3451 +
             C34897 * C1459 + C35474 + C35474 + C34890 * C1469 + C34895 * C545 +
             C35475 + C35475 + C34889 * C569) *
                C153454 * C153713 +
            (C35935 + C35934 + C35933 + C35932) * C153454 * C153853) *
               C153591) *
              C153511 * C1227)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C34895 * C136 + C34904 + C34904 + C34889 * C152 + C34897 * C329 +
             C34905 + C34905 + C34890 * C353 + C34899 * C330 + C34906 + C34906 +
             C34891 * C354 + C34901 * C1319 + C34907 + C34907 +
             C153860 * C1329) *
                C153454 * C153853 +
            (C44386 + C44387 + C44388 + C44389) * C153454 * C153713) *
               C2030 -
           ((C44390 + C44391 + C44392 + C44393) * C153454 * C153713 +
            (C44389 + C44388 + C44387 + C44386) * C153454 * C153853) *
               C153591) *
              C320 +
          (((C45056 + C45057 + C45058 + C45059) * C153454 * C153853 +
            (C45602 + C45603 + C45604 + C45605) * C153454 * C153713) *
               C153591 -
           ((C45059 + C45058 + C45057 + C45056) * C153454 * C153713 +
            (C34901 * C3127 + C35190 + C35190 + C153860 * C3135 +
             C34899 * C1319 + C35191 + C35191 + C34891 * C1329 + C34897 * C330 +
             C35192 + C35192 + C34890 * C354 + C34895 * C329 + C35193 + C35193 +
             C34889 * C353) *
                C153454 * C153853) *
               C2030) *
              C321 +
          (((C34895 * C330 + C35194 + C35194 + C34889 * C354 + C34897 * C1319 +
             C35195 + C35195 + C34890 * C1329 + C34899 * C3127 + C35196 +
             C35196 + C34891 * C3135 + C34901 * C4723 + C35197 + C35197 +
             C153860 * C4729) *
                C153454 * C153853 +
            (C46272 + C46273 + C46274 + C46275) * C153454 * C153713) *
               C2030 -
           ((C34901 * C29442 + C46260 + C46260 + C153860 * C29444 +
             C34899 * C28650 + C46261 + C46261 + C34891 * C28654 +
             C34897 * C4959 + C46262 + C46262 + C34890 * C4965 +
             C34895 * C3441 + C46263 + C46263 + C34889 * C3449) *
                C153454 * C153713 +
            (C46275 + C46274 + C46273 + C46272) * C153454 * C153853) *
               C153591) *
              C322) *
         C153492) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C11348 * C136 + C11353 + C11353 + C153851 * C152 + C11350 * C329 +
             C11354 + C11354 + C153671 * C353) *
                C153454 * C63320 +
            (C19416 + C19417) * C153454 * C63321 + C67263 * C63322 +
            C67267 * C153867) *
               C2030 -
           ((C62224 + C62223) * C153454 * C153867 + C62208 * C153454 * C63322 +
            (C19418 + C19419) * C153454 * C63321 +
            (C19417 + C19416) * C153454 * C63320) *
               C153591) *
              C153511 * C1225 +
          ((C19382 * C153454 * C63320 + C19390 * C153454 * C63321 +
            C58663 * C153454 * C63322 + (C58677 + C58678) * C153454 * C153867) *
               C153591 -
           (C67265 * C153867 + C67266 * C63322 + C19389 * C153454 * C63321 +
            (C11408 + C11407) * C153454 * C63320) *
               C2030) *
              C153511 * C1226 +
          ((C11417 * C153454 * C63320 + C18777 * C153454 * C63321 +
            C19391 * C153454 * C63322 + (C19422 + C19423) * C153454 * C153867) *
               C2030 -
           ((C11350 * C9115 + C22981 + C22981 + C153671 * C9121 +
             C11348 * C7675 + C22982 + C22982 + C153851 * C7683) *
                C153454 * C153867 +
            (C19423 + C19422) * C153454 * C63322 + C19383 * C153454 * C63321 +
            C12372 * C153454 * C63320) *
               C153591) *
              C153511 * C1227)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C11348 * C136 + C11353 + C11353 + C153851 * C152 + C11350 * C329 +
             C11354 + C11354 + C153671 * C353) *
                C153454 * C63320 +
            (C19416 + C19417) * C153454 * C63321 + C67263 * C63322 +
            C67267 * C153867) *
               C2030 -
           ((C62224 + C62223) * C153454 * C153867 + C62208 * C153454 * C63322 +
            (C19418 + C19419) * C153454 * C63321 +
            (C19417 + C19416) * C153454 * C63320) *
               C153591) *
              C320 +
          (((C20419 + C20420) * C153454 * C63320 +
            (C21219 + C21220) * C153454 * C63321 +
            (C60451 + C60452) * C153454 * C63322 +
            (C68447 + C68448) * C153454 * C153867) *
               C153591 -
           (C68444 * C153867 + C68439 * C63322 +
            (C20420 + C20419) * C153454 * C63321 +
            (C11350 * C330 + C11633 + C11633 + C153671 * C354 + C11348 * C329 +
             C11634 + C11634 + C153851 * C353) *
                C153454 * C63320) *
               C2030) *
              C321 +
          (((C11348 * C330 + C11635 + C11635 + C153851 * C354 + C11350 * C1319 +
             C11636 + C11636 + C153671 * C1329) *
                C153454 * C63320 +
            (C22201 + C22202) * C153454 * C63321 +
            (C61431 + C61432) * C153454 * C63322 +
            (C69105 + C69106) * C153454 * C153867) *
               C2030 -
           ((C11350 * C32641 + C69099 + C69099 + C153671 * C32643 +
             C11348 * C31195 + C69100 + C69100 + C153851 * C31199) *
                C153454 * C153867 +
            (C69106 + C69105) * C153454 * C63322 +
            (C61432 + C61431) * C153454 * C63321 +
            (C22202 + C22201) * C153454 * C63320) *
               C153591) *
              C322) *
         C153492) /
            (p * q * std::sqrt(p + q));
    d2ee[180] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C136 + C161 + C161 + C153608 * C152) * C122 +
                C193 * C123 + C194 * C124 + C195 * C125 + C196 * C126) *
                   C153626 * C153527 * C153837 -
               (C406 * C126 + C407 * C125 + C408 * C124 + C409 * C123 +
                (C134 * C329 + C374 + C374 + C153608 * C353) * C122) *
                   C153626 * C153527 * C153563) *
                  C153906 +
              ((C409 * C122 + C408 * C123 + C407 * C124 + C406 * C125 +
                C762 * C126) *
                   C153626 * C153527 * C153563 -
               (C197 * C126 + C196 * C125 + C195 * C124 + C194 * C123 +
                C193 * C122) *
                   C153626 * C153527 * C153837) *
                  C153907 +
              ((C194 * C122 + C195 * C123 + C196 * C124 + C197 * C125 +
                C198 * C126) *
                   C153626 * C153527 * C153837 -
               ((C134 * C753 + C759 + C759 + C153608 * C755) * C126 +
                C762 * C125 + C406 * C124 + C407 * C123 + C408 * C122) *
                   C153626 * C153527 * C153563) *
                  C752) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
                 C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
                 C153887 * C354) *
                    C2818 +
                (C2894 + C2895 + C2896) * C2819 + C2908 * C153874) *
                   C153626 * C153527 * C153837 -
               (C3766 * C153874 + (C3215 + C3216 + C3217) * C2819 +
                (C2825 * C1319 + C3158 + C3158 + C153887 * C1329 +
                 C2823 * C330 + C3159 + C3159 + C153913 * C354 + C2821 * C329 +
                 C3160 + C3160 + C153925 * C353) *
                    C2818) *
                   C153626 * C153527 * C153563) *
                  C153906 +
              (((C3217 + C3216 + C3215) * C2818 +
                (C3214 + C3213 + C3212) * C2819 +
                (C3773 + C3774 + C3775) * C153874) *
                   C153626 * C153527 * C153563 -
               (C2909 * C153874 + (C2899 + C2898 + C2897) * C2819 +
                (C2896 + C2895 + C2894) * C2818) *
                   C153626 * C153527 * C153837) *
                  C153907 +
              ((C2908 * C2818 + (C2902 + C2901 + C2900) * C2819 +
                (C2903 + C2904 + C2905) * C153874) *
                   C153626 * C153527 * C153837 -
               ((C2825 * C1315 + C3763 + C3763 + C153887 * C1325 +
                 C2823 * C334 + C3764 + C3764 + C153913 * C358 + C2821 * C325 +
                 C3765 + C3765 + C153925 * C349) *
                    C153874 +
                (C3775 + C3774 + C3773) * C2819 + C3766 * C2818) *
                   C153626 * C153527 * C153563) *
                  C752)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C2818 +
             C193 * C2819 + C194 * C153874) *
                C153926 +
            (C7742 + C7688 + C7689) * C153915 + C7751 * C153890) *
               C153527 * C153837 -
           ((C7450 * C153874 + C7451 * C2819 +
             (C134 * C1461 + C1477 + C1477 + C153608 * C1471) * C2818) *
                C153890 +
            (C1099 * C153874 + C1098 * C2819 +
             (C134 * C1057 + C1076 + C1076 + C153608 * C1069) * C2818) *
                C153915 +
            (C408 * C153874 + C409 * C2819 +
             (C134 * C329 + C374 + C374 + C153608 * C353) * C2818) *
                C153926) *
               C153527 * C153563) *
              C153906 +
          (((C409 * C2818 + C408 * C2819 + C407 * C153874) * C153926 +
            (C1098 * C2818 + C1099 * C2819 + C1100 * C153874) * C153915 +
            (C7451 * C2818 + C7450 * C2819 + C7974 * C153874) * C153890) *
               C153527 * C153563 -
           (C7733 * C153890 + (C7709 + C7708 + C7707) * C153915 +
            (C195 * C153874 + C194 * C2819 + C193 * C2818) * C153926) *
               C153527 * C153837) *
              C153907 +
          (((C194 * C2818 + C195 * C2819 + C196 * C153874) * C153926 +
            (C621 * C2818 + C620 * C2819 + C619 * C153874) * C153915 +
            (C624 * C2818 + C625 * C2819 + C626 * C153874) * C153890) *
               C153527 * C153837 -
           (((C134 * C1457 + C1473 + C1473 + C153608 * C1467) * C153874 +
             C7974 * C2819 + C7450 * C2818) *
                C153890 +
            (C1101 * C153874 + C1100 * C2819 + C1099 * C2818) * C153915 +
            (C406 * C153874 + C407 * C2819 + C408 * C2818) * C153926) *
               C153527 * C153563) *
              C752)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
             C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 + C24119 +
             C153887 * C354) *
                C153922 +
            (C24183 + C24184 + C24185) * C153903 + C24197 * C153874) *
               C153626 * C153527 * C153837 -
           (C25031 * C153874 + (C24492 + C24493 + C24494) * C153903 +
            (C24114 * C1319 + C24435 + C24435 + C153887 * C1329 +
             C24112 * C330 + C24436 + C24436 + C24105 * C354 + C24110 * C329 +
             C24437 + C24437 + C24104 * C353) *
                C153922) *
               C153626 * C153527 * C153563) *
              C153906 +
          (((C24494 + C24493 + C24492) * C153922 +
            (C24491 + C24490 + C24489) * C153903 +
            (C25038 + C25039 + C25040) * C153874) *
               C153626 * C153527 * C153563 -
           (C24198 * C153874 + (C24188 + C24187 + C24186) * C153903 +
            (C24185 + C24184 + C24183) * C153922) *
               C153626 * C153527 * C153837) *
              C153907 +
          ((C24197 * C153922 + (C24191 + C24190 + C24189) * C153903 +
            (C24192 + C24193 + C24194) * C153874) *
               C153626 * C153527 * C153837 -
           ((C24114 * C1315 + C25028 + C25028 + C153887 * C1325 +
             C24112 * C334 + C25029 + C25029 + C24105 * C358 + C24110 * C325 +
             C25030 + C25030 + C24104 * C349) *
                C153874 +
            (C25040 + C25039 + C25038) * C153903 + C25031 * C153922) *
               C153626 * C153527 * C153563) *
              C752)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C28350 * C136 + C28361 + C28361 + C28344 * C152 + C28352 * C329 +
            C28362 + C28362 + C28345 * C353 + C28354 * C330 + C28363 + C28363 +
            C28346 * C354 + C28356 * C1319 + C28364 + C28364 + C28347 * C1329 +
            C28358 * C3127 + C28365 + C28365 + C28348 * C3135) *
               C153454 * C153626 * C153527 * C153837 -
           (C28358 * C4723 + C28509 + C28509 + C28348 * C4729 + C28356 * C3127 +
            C28510 + C28510 + C28347 * C3135 + C28354 * C1319 + C28511 +
            C28511 + C28346 * C1329 + C28352 * C330 + C28512 + C28512 +
            C28345 * C354 + C28350 * C329 + C28513 + C28513 + C28344 * C353) *
               C153454 * C153626 * C153527 * C153563) *
              C153906 +
          ((C28350 * C328 + C28519 + C28519 + C28344 * C352 + C28352 * C331 +
            C28520 + C28520 + C28345 * C355 + C28354 * C1318 + C28521 + C28521 +
            C28346 * C1328 + C28356 * C3128 + C28522 + C28522 + C28347 * C3136 +
            C28358 * C4722 + C28523 + C28523 + C28348 * C4728) *
               C153454 * C153626 * C153527 * C153563 -
           (C28358 * C3128 + C28366 + C28366 + C28348 * C3136 + C28356 * C1318 +
            C28367 + C28367 + C28347 * C1328 + C28354 * C331 + C28368 + C28368 +
            C28346 * C355 + C28352 * C328 + C28369 + C28369 + C28345 * C352 +
            C28350 * C137 + C28370 + C28370 + C28344 * C153) *
               C153454 * C153626 * C153527 * C153837) *
              C153907 +
          ((C28350 * C138 + C28371 + C28371 + C28344 * C154 + C28352 * C327 +
            C28372 + C28372 + C28345 * C351 + C28354 * C332 + C28373 + C28373 +
            C28346 * C356 + C28356 * C1317 + C28374 + C28374 + C28347 * C1327 +
            C28358 * C3129 + C28375 + C28375 + C28348 * C3137) *
               C153454 * C153626 * C153527 * C153837 -
           (C28358 * C4721 + C28799 + C28799 + C28348 * C4727 + C28356 * C3129 +
            C28800 + C28800 + C28347 * C3137 + C28354 * C1317 + C28801 +
            C28801 + C28346 * C1327 + C28352 * C332 + C28802 + C28802 +
            C28345 * C356 + C28350 * C327 + C28803 + C28803 + C28344 * C351) *
               C153454 * C153626 * C153527 * C153563) *
              C752)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
             C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 + C24119 +
             C153887 * C354) *
                C153454 * C153926 +
            (C31259 + C31260 + C31261) * C153454 * C153915 + C31273 * C153890) *
               C153527 * C153837 -
           ((C24114 * C4959 + C26208 + C26208 + C153887 * C4965 +
             C24112 * C3441 + C26209 + C26209 + C24105 * C3449 +
             C24110 * C1461 + C26210 + C26210 + C24104 * C1471) *
                C153454 * C153890 +
            (C24114 * C4303 + C25571 + C25571 + C153887 * C4311 +
             C24112 * C1892 + C25570 + C25570 + C24105 * C1902 +
             C24110 * C1057 + C25569 + C25569 + C24104 * C1069) *
                C153454 * C153915 +
            (C24114 * C1319 + C24435 + C24435 + C153887 * C1329 +
             C24112 * C330 + C24436 + C24436 + C24105 * C354 + C24110 * C329 +
             C24437 + C24437 + C24104 * C353) *
                C153454 * C153926) *
               C153527 * C153563) *
              C153906 +
          (((C24494 + C24493 + C24492) * C153454 * C153926 +
            (C25605 + C25606 + C25607) * C153454 * C153915 +
            (C24110 * C1460 + C26207 + C26207 + C24104 * C1470 +
             C24112 * C3442 + C26206 + C26206 + C24105 * C3450 +
             C24114 * C4958 + C26205 + C26205 + C153887 * C4964) *
                C153454 * C153890) *
               C153527 * C153563 -
           (C31258 * C153890 + (C24794 + C24795 + C24796) * C153454 * C153915 +
            (C24185 + C24184 + C24183) * C153454 * C153926) *
               C153527 * C153837) *
              C153907 +
          ((C24197 * C153454 * C153926 +
            (C24793 + C24792 + C24791) * C153454 * C153915 +
            (C24800 + C24801 + C24802) * C153454 * C153890) *
               C153527 * C153837 -
           ((C24114 * C4957 + C26202 + C26202 + C153887 * C4963 +
             C24112 * C3443 + C26203 + C26203 + C24105 * C3451 +
             C24110 * C1459 + C26204 + C26204 + C24104 * C1469) *
                C153454 * C153890 +
            (C25610 + C25609 + C25608) * C153454 * C153915 +
            C25031 * C153454 * C153926) *
               C153527 * C153563) *
              C752)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C153922 +
             C193 * C153903 + C194 * C153874) *
                C47609 +
            (C48049 + C48050 + C48051) * C47610 + C48069 * C153890) *
               C153527 * C153837 -
           ((C7450 * C153874 + C7451 * C153903 + C8523 * C153922) * C153890 +
            (C1099 * C153874 + C1098 * C153903 + C8522 * C153922) * C47610 +
            (C408 * C153874 + C409 * C153903 +
             (C134 * C329 + C374 + C374 + C153608 * C353) * C153922) *
                C47609) *
               C153527 * C153563) *
              C153906 +
          (((C409 * C153922 + C408 * C153903 + C407 * C153874) * C47609 +
            (C1098 * C153922 + C1099 * C153903 + C1100 * C153874) * C47610 +
            (C7451 * C153922 + C7450 * C153903 + C7974 * C153874) * C153890) *
               C153527 * C153563 -
           (C48070 * C153890 + (C48060 + C48059 + C48058) * C47610 +
            (C195 * C153874 + C194 * C153903 + C193 * C153922) * C47609) *
               C153527 * C153837) *
              C153907 +
          (((C194 * C153922 + C195 * C153903 + C196 * C153874) * C47609 +
            (C621 * C153922 + C620 * C153903 + C619 * C153874) * C47610 +
            (C624 * C153922 + C625 * C153903 + C626 * C153874) * C153890) *
               C153527 * C153837 -
           (((C134 * C1457 + C1473 + C1473 + C153608 * C1467) * C153874 +
             C7974 * C153903 + C7450 * C153922) *
                C153890 +
            (C1101 * C153874 + C1100 * C153903 + C1099 * C153922) * C47610 +
            (C406 * C153874 + C407 * C153903 + C408 * C153922) * C47609) *
               C153527 * C153563) *
              C752)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
             C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
             C153887 * C354) *
                C153454 * C47609 +
            (C52092 + C52093 + C52094) * C153454 * C47610 + C52106 * C153890) *
               C153527 * C153837 -
           ((C2825 * C4959 + C4973 + C4973 + C153887 * C4965 + C2823 * C3441 +
             C4974 + C4974 + C153913 * C3449 + C2821 * C1461 + C4975 + C4975 +
             C153925 * C1471) *
                C153454 * C153890 +
            (C2825 * C4303 + C4318 + C4318 + C153887 * C4311 + C2823 * C1892 +
             C4317 + C4317 + C153913 * C1902 + C2821 * C1057 + C4316 + C4316 +
             C153925 * C1069) *
                C153454 * C47610 +
            (C2825 * C1319 + C3158 + C3158 + C153887 * C1329 + C2823 * C330 +
             C3159 + C3159 + C153913 * C354 + C2821 * C329 + C3160 + C3160 +
             C153925 * C353) *
                C153454 * C47609) *
               C153527 * C153563) *
              C153906 +
          (((C3217 + C3216 + C3215) * C153454 * C47609 +
            (C4352 + C4353 + C4354) * C153454 * C47610 +
            (C2821 * C1460 + C4972 + C4972 + C153925 * C1470 + C2823 * C3442 +
             C4971 + C4971 + C153913 * C3450 + C2825 * C4958 + C4970 + C4970 +
             C153887 * C4964) *
                C153454 * C153890) *
               C153527 * C153563 -
           (C52091 * C153890 + (C3529 + C3530 + C3531) * C153454 * C47610 +
            (C2896 + C2895 + C2894) * C153454 * C47609) *
               C153527 * C153837) *
              C153907 +
          ((C2908 * C153454 * C47609 +
            (C3528 + C3527 + C3526) * C153454 * C47610 +
            (C3535 + C3536 + C3537) * C153454 * C153890) *
               C153527 * C153837 -
           ((C2825 * C4957 + C4967 + C4967 + C153887 * C4963 + C2823 * C3443 +
             C4968 + C4968 + C153913 * C3451 + C2821 * C1459 + C4969 + C4969 +
             C153925 * C1469) *
                C153454 * C153890 +
            (C4357 + C4356 + C4355) * C153454 * C47610 +
            C3766 * C153454 * C47609) *
               C153527 * C153563) *
              C752)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153608 * C152) * C153454 * C55662 +
            C55920 * C55663 + C55921 * C55664 + C55922 * C55665 +
            C55923 * C55666) *
               C153527 * C153837 -
           ((C134 * C9117 + C9132 + C9132 + C153608 * C9123) * C153454 *
                C55666 +
            C9136 * C153454 * C55665 + C8523 * C153454 * C55664 +
            C8522 * C153454 * C55663 +
            (C134 * C329 + C374 + C374 + C153608 * C353) * C153454 * C55662) *
               C153527 * C153563) *
              C153906 +
          ((C409 * C153454 * C55662 + C1098 * C153454 * C55663 +
            C7451 * C153454 * C55664 + C8524 * C153454 * C55665 +
            (C134 * C9116 + C9131 + C9131 + C153608 * C9122) * C153454 *
                C55666) *
               C153527 * C153563 -
           (C55930 * C55666 + C55929 * C55665 + C55928 * C55664 +
            C55927 * C55663 + C193 * C153454 * C55662) *
               C153527 * C153837) *
              C153907 +
          ((C194 * C153454 * C55662 + C621 * C153454 * C55663 +
            C624 * C153454 * C55664 + C7736 * C153454 * C55665 +
            C7740 * C153454 * C55666) *
               C153527 * C153837 -
           ((C134 * C9115 + C9130 + C9130 + C153608 * C9121) * C153454 *
                C55666 +
            C8525 * C153454 * C55665 + C7450 * C153454 * C55664 +
            C1099 * C153454 * C55663 + C408 * C153454 * C55662) *
               C153527 * C153563) *
              C752)) /
            (p * q * std::sqrt(p + q));
    d2ee[181] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C134 * C136 + C161 + C161 + C153608 * C152) * C122 +
                 C193 * C123 + C194 * C124 + C195 * C125 + C196 * C126) *
                    C153626 * C153838 -
                (C619 * C126 + C620 * C125 + C621 * C124 + C622 * C123 +
                 (C134 * C542 + C587 + C587 + C153608 * C566) * C122) *
                    C153626 * C153591) *
                   C153837 +
               (((C134 * C1057 + C1076 + C1076 + C153608 * C1069) * C122 +
                 C1098 * C123 + C1099 * C124 + C1100 * C125 + C1101 * C126) *
                    C153626 * C153591 -
                (C406 * C126 + C407 * C125 + C408 * C124 + C409 * C123 +
                 (C134 * C329 + C374 + C374 + C153608 * C353) * C122) *
                    C153626 * C153838) *
                   C153563) *
                  C323 +
              (((C622 * C122 + C621 * C123 + C620 * C124 + C619 * C125 +
                 C895 * C126) *
                    C153626 * C153591 -
                (C197 * C126 + C196 * C125 + C195 * C124 + C194 * C123 +
                 C193 * C122) *
                    C153626 * C153838) *
                   C153837 +
               ((C409 * C122 + C408 * C123 + C407 * C124 + C406 * C125 +
                 C762 * C126) *
                    C153626 * C153838 -
                ((C134 * C1062 + C1089 + C1089 + C153608 * C1074) * C126 +
                 C1101 * C125 + C1100 * C124 + C1099 * C123 + C1098 * C122) *
                    C153626 * C153591) *
                   C153563) *
                  C153498) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
                  C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 +
                  C2830 + C153887 * C354) *
                     C2818 +
                 (C2894 + C2895 + C2896) * C2819 + C2908 * C153874) *
                    C153626 * C153838 -
                (C4004 * C153874 + (C3529 + C3530 + C3531) * C2819 +
                 (C2825 * C1892 + C3472 + C3472 + C153887 * C1902 +
                  C2823 * C1057 + C3473 + C3473 + C153913 * C1069 +
                  C2821 * C542 + C3474 + C3474 + C153925 * C566) *
                     C2818) *
                    C153626 * C153591) *
                   C153837 +
               (((C2821 * C1057 + C4316 + C4316 + C153925 * C1069 +
                  C2823 * C1892 + C4317 + C4317 + C153913 * C1902 +
                  C2825 * C4303 + C4318 + C4318 + C153887 * C4311) *
                     C2818 +
                 (C4352 + C4353 + C4354) * C2819 +
                 (C4355 + C4356 + C4357) * C153874) *
                    C153626 * C153591 -
                (C3766 * C153874 + (C3215 + C3216 + C3217) * C2819 +
                 (C2825 * C1319 + C3158 + C3158 + C153887 * C1329 +
                  C2823 * C330 + C3159 + C3159 + C153913 * C354 + C2821 * C329 +
                  C3160 + C3160 + C153925 * C353) *
                     C2818) *
                    C153626 * C153838) *
                   C153563) *
                  C323 +
              ((((C3531 + C3530 + C3529) * C2818 +
                 (C3528 + C3527 + C3526) * C2819 +
                 (C4011 + C4012 + C4013) * C153874) *
                    C153626 * C153591 -
                (C2909 * C153874 + (C2899 + C2898 + C2897) * C2819 +
                 (C2896 + C2895 + C2894) * C2818) *
                    C153626 * C153838) *
                   C153837 +
               (((C3217 + C3216 + C3215) * C2818 +
                 (C3214 + C3213 + C3212) * C2819 +
                 (C3773 + C3774 + C3775) * C153874) *
                    C153626 * C153838 -
                ((C2825 * C4306 + C4337 + C4337 + C153887 * C4314 +
                  C2823 * C1889 + C4338 + C4338 + C153913 * C1899 +
                  C2821 * C1060 + C4339 + C4339 + C153925 * C1072) *
                     C153874 +
                 (C4357 + C4356 + C4355) * C2819 +
                 (C4354 + C4353 + C4352) * C2818) *
                    C153626 * C153591) *
                   C153563) *
                  C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C153608 * C152) * C2818 +
              C193 * C2819 + C194 * C153874) *
                 C153926 +
             (C7742 + C7688 + C7689) * C153915 + C7751 * C153890) *
                C153838 -
            ((C7744 + C7745 + C7746) * C153890 +
             (C7693 + C7692 + C7743) * C153915 +
             (C7689 + C7688 + C7742) * C153926) *
                C153591) *
               C153837 +
           (((C8526 + C8494 + C8495) * C153926 +
             (C8527 + C8498 + C8499) * C153915 +
             ((C134 * C6306 + C8500 + C8500 + C153608 * C6318) * C2818 +
              C8524 * C2819 + C8525 * C153874) *
                 C153890) *
                C153591 -
            ((C8499 + C8498 + C8527) * C153890 +
             (C8495 + C8494 + C8526) * C153915 +
             (C408 * C153874 + C409 * C2819 +
              (C134 * C329 + C374 + C374 + C153608 * C353) * C2818) *
                 C153926) *
                C153838) *
               C153563) *
              C323 +
          ((((C7707 + C7708 + C7709) * C153926 +
             (C7710 + C7711 + C7712) * C153915 +
             (C7747 + C7748 + C7749) * C153890) *
                C153591 -
            (C7733 * C153890 + (C7709 + C7708 + C7707) * C153915 +
             (C195 * C153874 + C194 * C2819 + C193 * C2818) * C153926) *
                C153838) *
               C153837 +
           (((C409 * C2818 + C408 * C2819 + C407 * C153874) * C153926 +
             (C8507 + C8508 + C8509) * C153915 +
             (C8510 + C8511 + C8512) * C153890) *
                C153838 -
            (((C134 * C8488 + C8513 + C8513 + C153608 * C8490) * C153874 +
              C8525 * C2819 + C8524 * C2818) *
                 C153890 +
             (C8512 + C8511 + C8510) * C153915 +
             (C8509 + C8508 + C8507) * C153926) *
                C153591) *
               C153563) *
              C153498)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
              C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 +
              C24119 + C153887 * C354) *
                 C153922 +
             (C24183 + C24184 + C24185) * C153903 + C24197 * C153874) *
                C153626 * C153838 -
            (C25269 * C153874 + (C24794 + C24795 + C24796) * C153903 +
             (C24114 * C1892 + C24737 + C24737 + C153887 * C1902 +
              C24112 * C1057 + C24738 + C24738 + C24105 * C1069 +
              C24110 * C542 + C24739 + C24739 + C24104 * C566) *
                 C153922) *
                C153626 * C153591) *
               C153837 +
           (((C24110 * C1057 + C25569 + C25569 + C24104 * C1069 +
              C24112 * C1892 + C25570 + C25570 + C24105 * C1902 +
              C24114 * C4303 + C25571 + C25571 + C153887 * C4311) *
                 C153922 +
             (C25605 + C25606 + C25607) * C153903 +
             (C25608 + C25609 + C25610) * C153874) *
                C153626 * C153591 -
            (C25031 * C153874 + (C24492 + C24493 + C24494) * C153903 +
             (C24114 * C1319 + C24435 + C24435 + C153887 * C1329 +
              C24112 * C330 + C24436 + C24436 + C24105 * C354 + C24110 * C329 +
              C24437 + C24437 + C24104 * C353) *
                 C153922) *
                C153626 * C153838) *
               C153563) *
              C323 +
          ((((C24796 + C24795 + C24794) * C153922 +
             (C24793 + C24792 + C24791) * C153903 +
             (C25276 + C25277 + C25278) * C153874) *
                C153626 * C153591 -
            (C24198 * C153874 + (C24188 + C24187 + C24186) * C153903 +
             (C24185 + C24184 + C24183) * C153922) *
                C153626 * C153838) *
               C153837 +
           (((C24494 + C24493 + C24492) * C153922 +
             (C24491 + C24490 + C24489) * C153903 +
             (C25038 + C25039 + C25040) * C153874) *
                C153626 * C153838 -
            ((C24114 * C4306 + C25590 + C25590 + C153887 * C4314 +
              C24112 * C1889 + C25591 + C25591 + C24105 * C1899 +
              C24110 * C1060 + C25592 + C25592 + C24104 * C1072) *
                 C153874 +
             (C25610 + C25609 + C25608) * C153903 +
             (C25607 + C25606 + C25605) * C153922) *
                C153626 * C153591) *
               C153563) *
              C153498)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C28350 * C136 + C28361 + C28361 + C28344 * C152 + C28352 * C329 +
             C28362 + C28362 + C28345 * C353 + C28354 * C330 + C28363 + C28363 +
             C28346 * C354 + C28356 * C1319 + C28364 + C28364 + C28347 * C1329 +
             C28358 * C3127 + C28365 + C28365 + C28348 * C3135) *
                C153454 * C153626 * C153838 -
            (C28358 * C5703 + C28657 + C28657 + C28348 * C5709 +
             C28356 * C4303 + C28658 + C28658 + C28347 * C4311 +
             C28354 * C1892 + C28659 + C28659 + C28346 * C1902 +
             C28352 * C1057 + C28660 + C28660 + C28345 * C1069 + C28350 * C542 +
             C28661 + C28661 + C28344 * C566) *
                C153454 * C153626 * C153591) *
               C153837 +
           ((C28350 * C1057 + C29099 + C29099 + C28344 * C1069 +
             C28352 * C1892 + C29100 + C29100 + C28345 * C1902 +
             C28354 * C4303 + C29101 + C29101 + C28346 * C4311 +
             C28356 * C5703 + C29102 + C29102 + C28347 * C5709 +
             C28358 * C29092 + C29103 + C29103 + C28348 * C29096) *
                C153454 * C153626 * C153591 -
            (C28358 * C4723 + C28509 + C28509 + C28348 * C4729 +
             C28356 * C3127 + C28510 + C28510 + C28347 * C3135 +
             C28354 * C1319 + C28511 + C28511 + C28346 * C1329 + C28352 * C330 +
             C28512 + C28512 + C28345 * C354 + C28350 * C329 + C28513 + C28513 +
             C28344 * C353) *
                C153454 * C153626 * C153838) *
               C153563) *
              C323 +
          (((C28350 * C541 + C28667 + C28667 + C28344 * C565 + C28352 * C1058 +
             C28668 + C28668 + C28345 * C1070 + C28354 * C1891 + C28669 +
             C28669 + C28346 * C1901 + C28356 * C4304 + C28670 + C28670 +
             C28347 * C4312 + C28358 * C5702 + C28671 + C28671 +
             C28348 * C5708) *
                C153454 * C153626 * C153591 -
            (C28358 * C3128 + C28366 + C28366 + C28348 * C3136 +
             C28356 * C1318 + C28367 + C28367 + C28347 * C1328 + C28354 * C331 +
             C28368 + C28368 + C28346 * C355 + C28352 * C328 + C28369 + C28369 +
             C28345 * C352 + C28350 * C137 + C28370 + C28370 + C28344 * C153) *
                C153454 * C153626 * C153838) *
               C153837 +
           ((C28350 * C328 + C28519 + C28519 + C28344 * C352 + C28352 * C331 +
             C28520 + C28520 + C28345 * C355 + C28354 * C1318 + C28521 +
             C28521 + C28346 * C1328 + C28356 * C3128 + C28522 + C28522 +
             C28347 * C3136 + C28358 * C4722 + C28523 + C28523 +
             C28348 * C4728) *
                C153454 * C153626 * C153838 -
            (C28358 * C29093 + C29104 + C29104 + C28348 * C29097 +
             C28356 * C5702 + C29105 + C29105 + C28347 * C5708 +
             C28354 * C4304 + C29106 + C29106 + C28346 * C4312 +
             C28352 * C1891 + C29107 + C29107 + C28345 * C1901 +
             C28350 * C1058 + C29108 + C29108 + C28344 * C1070) *
                C153454 * C153626 * C153591) *
               C153563) *
              C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
              C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 +
              C24119 + C153887 * C354) *
                 C153454 * C153926 +
             (C31259 + C31260 + C31261) * C153454 * C153915 +
             C31273 * C153890) *
                C153838 -
            ((C31265 + C31266 + C31267) * C153454 * C153890 +
             (C31264 + C31263 + C31262) * C153454 * C153915 +
             (C31261 + C31260 + C31259) * C153454 * C153926) *
                C153591) *
               C153837 +
           (((C32045 + C32046 + C32047) * C153454 * C153926 +
             (C32048 + C32049 + C32050) * C153454 * C153915 +
             (C24110 * C6306 + C32015 + C32015 + C24104 * C6318 +
              C24112 * C6305 + C32016 + C32016 + C24105 * C6317 +
              C24114 * C30191 + C32017 + C32017 + C153887 * C30195) *
                 C153454 * C153890) *
                C153591 -
            ((C32050 + C32049 + C32048) * C153454 * C153890 +
             (C32047 + C32046 + C32045) * C153454 * C153915 +
             (C24114 * C1319 + C24435 + C24435 + C153887 * C1329 +
              C24112 * C330 + C24436 + C24436 + C24105 * C354 + C24110 * C329 +
              C24437 + C24437 + C24104 * C353) *
                 C153454 * C153926) *
                C153838) *
               C153563) *
              C323 +
          ((((C24796 + C24795 + C24794) * C153454 * C153926 +
             (C24797 + C24798 + C24799) * C153454 * C153915 +
             (C31268 + C31269 + C31270) * C153454 * C153890) *
                C153591 -
            (C31258 * C153890 + (C24794 + C24795 + C24796) * C153454 * C153915 +
             (C24185 + C24184 + C24183) * C153454 * C153926) *
                C153838) *
               C153837 +
           (((C24494 + C24493 + C24492) * C153454 * C153926 +
             (C25605 + C25606 + C25607) * C153454 * C153915 +
             (C32051 + C32052 + C32053) * C153454 * C153890) *
                C153838 -
            ((C24114 * C31999 + C32024 + C32024 + C153887 * C32001 +
              C24112 * C6303 + C32025 + C32025 + C24105 * C6315 +
              C24110 * C6304 + C32026 + C32026 + C24104 * C6316) *
                 C153454 * C153890 +
             (C32053 + C32052 + C32051) * C153454 * C153915 +
             (C25607 + C25606 + C25605) * C153454 * C153926) *
                C153591) *
               C153563) *
              C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C153608 * C152) * C153922 +
              C193 * C153903 + C194 * C153874) *
                 C47609 +
             (C48049 + C48050 + C48051) * C47610 + C48069 * C153890) *
                C153838 -
            ((C48055 + C48056 + C48057) * C153890 +
             (C48054 + C48053 + C48052) * C47610 +
             (C48051 + C48050 + C48049) * C47609) *
                C153591) *
               C153837 +
           (((C48803 + C48804 + C48805) * C47609 +
             (C48806 + C48807 + C48808) * C47610 +
             (C9136 * C153922 + C8524 * C153903 + C8525 * C153874) * C153890) *
                C153591 -
            ((C48808 + C48807 + C48806) * C153890 +
             (C48805 + C48804 + C48803) * C47610 +
             (C408 * C153874 + C409 * C153903 +
              (C134 * C329 + C374 + C374 + C153608 * C353) * C153922) *
                 C47609) *
                C153838) *
               C153563) *
              C323 +
          ((((C48058 + C48059 + C48060) * C47609 +
             (C48061 + C48062 + C48063) * C47610 +
             (C48064 + C48065 + C48066) * C153890) *
                C153591 -
            (C48070 * C153890 + (C48060 + C48059 + C48058) * C47610 +
             (C195 * C153874 + C194 * C153903 + C193 * C153922) * C47609) *
                C153838) *
               C153837 +
           (((C409 * C153922 + C408 * C153903 + C407 * C153874) * C47609 +
             (C48809 + C48810 + C48811) * C47610 +
             (C48812 + C48813 + C48814) * C153890) *
                C153838 -
            (((C134 * C8488 + C8513 + C8513 + C153608 * C8490) * C153874 +
              C8525 * C153903 + C8524 * C153922) *
                 C153890 +
             (C48814 + C48813 + C48812) * C47610 +
             (C48811 + C48810 + C48809) * C47609) *
                C153591) *
               C153563) *
              C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
              C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
              C153887 * C354) *
                 C153454 * C47609 +
             (C52092 + C52093 + C52094) * C153454 * C47610 + C52106 * C153890) *
                C153838 -
            ((C52098 + C52099 + C52100) * C153454 * C153890 +
             (C52097 + C52096 + C52095) * C153454 * C47610 +
             (C52094 + C52093 + C52092) * C153454 * C47609) *
                C153591) *
               C153837 +
           (((C52875 + C52876 + C52877) * C153454 * C47609 +
             (C52878 + C52879 + C52880) * C153454 * C47610 +
             (C2821 * C6306 + C52845 + C52845 + C153925 * C6318 +
              C2823 * C6305 + C52846 + C52846 + C153913 * C6317 +
              C2825 * C30191 + C52847 + C52847 + C153887 * C30195) *
                 C153454 * C153890) *
                C153591 -
            ((C52880 + C52879 + C52878) * C153454 * C153890 +
             (C52877 + C52876 + C52875) * C153454 * C47610 +
             (C2825 * C1319 + C3158 + C3158 + C153887 * C1329 + C2823 * C330 +
              C3159 + C3159 + C153913 * C354 + C2821 * C329 + C3160 + C3160 +
              C153925 * C353) *
                 C153454 * C47609) *
                C153838) *
               C153563) *
              C323 +
          ((((C3531 + C3530 + C3529) * C153454 * C47609 +
             (C3532 + C3533 + C3534) * C153454 * C47610 +
             (C52101 + C52102 + C52103) * C153454 * C153890) *
                C153591 -
            (C52091 * C153890 + (C3529 + C3530 + C3531) * C153454 * C47610 +
             (C2896 + C2895 + C2894) * C153454 * C47609) *
                C153838) *
               C153837 +
           (((C3217 + C3216 + C3215) * C153454 * C47609 +
             (C4352 + C4353 + C4354) * C153454 * C47610 +
             (C52881 + C52882 + C52883) * C153454 * C153890) *
                C153838 -
            ((C2825 * C31999 + C52854 + C52854 + C153887 * C32001 +
              C2823 * C6303 + C52855 + C52855 + C153913 * C6315 +
              C2821 * C6304 + C52856 + C52856 + C153925 * C6316) *
                 C153454 * C153890 +
             (C52883 + C52882 + C52881) * C153454 * C47610 +
             (C4354 + C4353 + C4352) * C153454 * C47609) *
                C153591) *
               C153563) *
              C153498)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C153454 * C55662 +
             C55920 * C55663 + C55921 * C55664 + C55922 * C55665 +
             C55923 * C55666) *
                C153838 -
            (C55940 * C55666 + C55923 * C55665 + C55922 * C55664 +
             C55921 * C55663 + C55920 * C55662) *
                C153591) *
               C153837 +
           ((C56355 * C55662 + C56356 * C55663 + C56357 * C55664 +
             C56373 * C55665 +
             (C134 * C34007 + C56360 + C56360 + C153608 * C34011) * C153454 *
                 C55666) *
                C153591 -
            (C56373 * C55666 + C56357 * C55665 + C56356 * C55664 +
             C56355 * C55663 +
             (C134 * C329 + C374 + C374 + C153608 * C353) * C153454 * C55662) *
                C153838) *
               C153563) *
              C323 +
          (((C55927 * C55662 + C55928 * C55663 + C55929 * C55664 +
             C55930 * C55665 + C55941 * C55666) *
                C153591 -
            (C55930 * C55666 + C55929 * C55665 + C55928 * C55664 +
             C55927 * C55663 + C193 * C153454 * C55662) *
                C153838) *
               C153837 +
           ((C409 * C153454 * C55662 + C56361 * C55663 + C56362 * C55664 +
             C56363 * C55665 + C56374 * C55666) *
                C153838 -
            ((C134 * C56351 + C56366 + C56366 + C153608 * C56353) * C153454 *
                 C55666 +
             C56374 * C55665 + C56363 * C55664 + C56362 * C55663 +
             C56361 * C55662) *
                C153591) *
               C153563) *
              C153498)) /
            (p * q * std::sqrt(p + q));
    d2ee[182] +=
        (-0.25 * std::pow(Pi, 2.5) *
             (((C134 * C136 + C161 + C161 + C153608 * C152) * C122 +
               C193 * C123 + C194 * C124 + C195 * C125 + C196 * C126) *
                  C153626 * C153527 * C153511 * C130 -
              (C197 * C126 + C196 * C125 + C195 * C124 + C194 * C123 +
               C193 * C122) *
                  C153626 * C153527 * C153511 * C131 +
              (C194 * C122 + C195 * C123 + C196 * C124 + C197 * C125 +
               C198 * C126) *
                  C153626 * C153527 * C153511 * C132 -
              ((C134 * C143 + C180 + C180 + C153608 * C159) * C126 +
               C198 * C125 + C197 * C124 + C196 * C123 + C195 * C122) *
                  C153626 * C153527 * C153511 * C133) -
         0.25 * std::pow(Pi, 2.5) *
             ((((C134 * C136 + C161 + C161 + C153608 * C152) * C122 +
                C193 * C123 + C194 * C124 + C195 * C125 + C196 * C126) *
                   C153626 * C153527 * C320 -
               (C406 * C126 + C407 * C125 + C408 * C124 + C409 * C123 +
                (C134 * C329 + C374 + C374 + C153608 * C353) * C122) *
                   C153626 * C153527 * C321 +
               ((C134 * C330 + C375 + C375 + C153608 * C354) * C122 +
                C410 * C123 + C411 * C124 + C412 * C125 + C413 * C126) *
                   C153626 * C153527 * C322) *
                  C323 +
              ((C409 * C122 + C408 * C123 + C407 * C124 + C406 * C125 +
                (C134 * C335 + C388 + C388 + C153608 * C359) * C126) *
                   C153626 * C153527 * C321 -
               (C197 * C126 + C196 * C125 + C195 * C124 + C194 * C123 +
                C193 * C122) *
                   C153626 * C153527 * C320 -
               ((C134 * C336 + C389 + C389 + C153608 * C360) * C126 +
                C413 * C125 + C412 * C124 + C411 * C123 + C410 * C122) *
                   C153626 * C153527 * C322) *
                  C153498) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C134 * C136 + C161 + C161 + C153608 * C152) * C122 +
                C193 * C123 + C194 * C124 + C195 * C125 + C196 * C126) *
                   C153626 * C535 -
               (C619 * C126 + C620 * C125 + C621 * C124 + C622 * C123 +
                (C134 * C542 + C587 + C587 + C153608 * C566) * C122) *
                   C153626 * C536 +
               ((C134 * C543 + C588 + C588 + C153608 * C567) * C122 +
                C623 * C123 + C624 * C124 + C625 * C125 + C626 * C126) *
                   C153626 * C537) *
                  C153511 * C323 +
              ((C622 * C122 + C621 * C123 + C620 * C124 + C619 * C125 +
                (C134 * C548 + C601 + C601 + C153608 * C572) * C126) *
                   C153626 * C536 -
               (C197 * C126 + C196 * C125 + C195 * C124 + C194 * C123 +
                C193 * C122) *
                   C153626 * C535 -
               ((C134 * C549 + C602 + C602 + C153608 * C573) * C126 +
                C626 * C125 + C625 * C124 + C624 * C123 + C623 * C122) *
                   C153626 * C537) *
                  C153511 * C153498) -
         0.25 * std::pow(Pi, 2.5) *
             (((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
                C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
                C153887 * C354) *
                   C2818 +
               (C2894 + C2895 + C2896) * C2819 + C2908 * C153874) *
                  C153626 * C153527 * C153511 * C130 -
              (C2909 * C153874 + (C2899 + C2898 + C2897) * C2819 +
               (C2896 + C2895 + C2894) * C2818) *
                  C153626 * C153527 * C153511 * C131 +
              (C2908 * C2818 + (C2902 + C2901 + C2900) * C2819 +
               (C2903 + C2904 + C2905) * C153874) *
                  C153626 * C153527 * C153511 * C132 -
              ((C2825 * C336 + C2867 + C2867 + C153887 * C360 + C2823 * C335 +
                C2868 + C2868 + C153913 * C359 + C2821 * C141 + C2869 + C2869 +
                C153925 * C157) *
                   C153874 +
               (C2905 + C2904 + C2903) * C2819 + C2909 * C2818) *
                  C153626 * C153527 * C153511 * C133) -
         0.25 * std::pow(Pi, 2.5) *
             ((((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
                 C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
                 C153887 * C354) *
                    C2818 +
                (C2894 + C2895 + C2896) * C2819 + C2908 * C153874) *
                   C153626 * C153527 * C320 -
               ((C3212 + C3213 + C3214) * C153874 +
                (C3215 + C3216 + C3217) * C2819 +
                (C2825 * C1319 + C3158 + C3158 + C153887 * C1329 +
                 C2823 * C330 + C3159 + C3159 + C153913 * C354 + C2821 * C329 +
                 C3160 + C3160 + C153925 * C353) *
                    C2818) *
                   C153626 * C153527 * C321 +
               ((C2821 * C330 + C3161 + C3161 + C153925 * C354 + C2823 * C1319 +
                 C3162 + C3162 + C153913 * C1329 + C2825 * C3127 + C3163 +
                 C3163 + C153887 * C3135) *
                    C2818 +
                (C3218 + C3219 + C3220) * C2819 +
                (C3221 + C3222 + C3223) * C153874) *
                   C153626 * C153527 * C322) *
                  C323 +
              (((C3217 + C3216 + C3215) * C2818 +
                (C3214 + C3213 + C3212) * C2819 +
                (C2821 * C326 + C3182 + C3182 + C153925 * C350 + C2823 * C333 +
                 C3183 + C3183 + C153913 * C357 + C2825 * C1316 + C3184 +
                 C3184 + C153887 * C1326) *
                    C153874) *
                   C153626 * C153527 * C321 -
               (C2909 * C153874 + (C2899 + C2898 + C2897) * C2819 +
                (C2896 + C2895 + C2894) * C2818) *
                   C153626 * C153527 * C320 -
               ((C2825 * C3130 + C3185 + C3185 + C153887 * C3138 +
                 C2823 * C1316 + C3186 + C3186 + C153913 * C1326 +
                 C2821 * C333 + C3187 + C3187 + C153925 * C357) *
                    C153874 +
                (C3223 + C3222 + C3221) * C2819 +
                (C3220 + C3219 + C3218) * C2818) *
                   C153626 * C153527 * C322) *
                  C153498) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
                 C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
                 C153887 * C354) *
                    C2818 +
                (C2894 + C2895 + C2896) * C2819 + C2908 * C153874) *
                   C153626 * C535 -
               ((C3526 + C3527 + C3528) * C153874 +
                (C3529 + C3530 + C3531) * C2819 +
                (C2825 * C1892 + C3472 + C3472 + C153887 * C1902 +
                 C2823 * C1057 + C3473 + C3473 + C153913 * C1069 +
                 C2821 * C542 + C3474 + C3474 + C153925 * C566) *
                    C2818) *
                   C153626 * C536 +
               ((C2821 * C543 + C3475 + C3475 + C153925 * C567 + C2823 * C1461 +
                 C3476 + C3476 + C153913 * C1471 + C2825 * C3441 + C3477 +
                 C3477 + C153887 * C3449) *
                    C2818 +
                (C3532 + C3533 + C3534) * C2819 +
                (C3535 + C3536 + C3537) * C153874) *
                   C153626 * C537) *
                  C153511 * C323 +
              (((C3531 + C3530 + C3529) * C2818 +
                (C3528 + C3527 + C3526) * C2819 +
                (C2821 * C539 + C3496 + C3496 + C153925 * C563 + C2823 * C1060 +
                 C3497 + C3497 + C153913 * C1072 + C2825 * C1889 + C3498 +
                 C3498 + C153887 * C1899) *
                    C153874) *
                   C153626 * C536 -
               (C2909 * C153874 + (C2899 + C2898 + C2897) * C2819 +
                (C2896 + C2895 + C2894) * C2818) *
                   C153626 * C535 -
               ((C2825 * C3444 + C3499 + C3499 + C153887 * C3452 +
                 C2823 * C1458 + C3500 + C3500 + C153913 * C1468 +
                 C2821 * C546 + C3501 + C3501 + C153925 * C570) *
                    C153874 +
                (C3537 + C3536 + C3535) * C2819 +
                (C3534 + C3533 + C3532) * C2818) *
                   C153626 * C537) *
                  C153511 * C153498) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C134 * C136 + C161 + C161 + C153608 * C152) * C2818 +
                C193 * C2819 + C194 * C153874) *
                   C153926 +
               ((C134 * C542 + C587 + C587 + C153608 * C566) * C2818 +
                C622 * C2819 + C621 * C153874) *
                   C153915 +
               ((C134 * C543 + C588 + C588 + C153608 * C567) * C2818 +
                C623 * C2819 + C624 * C153874) *
                   C153890) *
                  C153527 * C153511 * C130 -
              ((C625 * C153874 + C624 * C2819 + C623 * C2818) * C153890 +
               (C620 * C153874 + C621 * C2819 + C622 * C2818) * C153915 +
               (C195 * C153874 + C194 * C2819 + C193 * C2818) * C153926) *
                  C153527 * C153511 * C131 +
              ((C194 * C2818 + C195 * C2819 + C196 * C153874) * C153926 +
               (C621 * C2818 + C620 * C2819 + C619 * C153874) * C153915 +
               (C624 * C2818 + C625 * C2819 + C626 * C153874) * C153890) *
                  C153527 * C153511 * C132 -
              (((C134 * C549 + C602 + C602 + C153608 * C573) * C153874 +
                C626 * C2819 + C625 * C2818) *
                   C153890 +
               (C895 * C153874 + C619 * C2819 + C620 * C2818) * C153915 +
               (C197 * C153874 + C196 * C2819 + C195 * C2818) * C153926) *
                  C153527 * C153511 * C133) +
         0.5 * std::pow(Pi, 2.5) *
             (((((C134 * C136 + C161 + C161 + C153608 * C152) * C2818 +
                 C193 * C2819 + C194 * C153874) *
                    C153926 +
                ((C134 * C542 + C587 + C587 + C153608 * C566) * C2818 +
                 C622 * C2819 + C621 * C153874) *
                    C153915 +
                ((C134 * C543 + C588 + C588 + C153608 * C567) * C2818 +
                 C623 * C2819 + C624 * C153874) *
                    C153890) *
                   C153527 * C320 -
               ((C7450 * C153874 + C7451 * C2819 +
                 (C134 * C1461 + C1477 + C1477 + C153608 * C1471) * C2818) *
                    C153890 +
                (C1099 * C153874 + C1098 * C2819 +
                 (C134 * C1057 + C1076 + C1076 + C153608 * C1069) * C2818) *
                    C153915 +
                (C408 * C153874 + C409 * C2819 +
                 (C134 * C329 + C374 + C374 + C153608 * C353) * C2818) *
                    C153926) *
                   C153527 * C321 +
               (((C134 * C330 + C375 + C375 + C153608 * C354) * C2818 +
                 C410 * C2819 + C411 * C153874) *
                    C153926 +
                ((C134 * C1892 + C1908 + C1908 + C153608 * C1902) * C2818 +
                 C7452 * C2819 + C7453 * C153874) *
                    C153915 +
                ((C134 * C3441 + C7430 + C7430 + C153608 * C3449) * C2818 +
                 C7454 * C2819 + C7455 * C153874) *
                    C153890) *
                   C153527 * C322) *
                  C323 +
              (((C409 * C2818 + C408 * C2819 + C407 * C153874) * C153926 +
                (C1098 * C2818 + C1099 * C2819 + C1100 * C153874) * C153915 +
                (C7451 * C2818 + C7450 * C2819 +
                 (C134 * C1458 + C1474 + C1474 + C153608 * C1468) * C153874) *
                    C153890) *
                   C153527 * C321 -
               ((C625 * C153874 + C624 * C2819 + C623 * C2818) * C153890 +
                (C620 * C153874 + C621 * C2819 + C622 * C2818) * C153915 +
                (C195 * C153874 + C194 * C2819 + C193 * C2818) * C153926) *
                   C153527 * C320 -
               (((C134 * C3444 + C7437 + C7437 + C153608 * C3452) * C153874 +
                 C7455 * C2819 + C7454 * C2818) *
                    C153890 +
                ((C134 * C1889 + C1905 + C1905 + C153608 * C1899) * C153874 +
                 C7453 * C2819 + C7452 * C2818) *
                    C153915 +
                (C412 * C153874 + C411 * C2819 + C410 * C2818) * C153926) *
                   C153527 * C322) *
                  C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C2818 +
             C193 * C2819 + C194 * C153874) *
                C153926 +
            (C7742 + C7688 + C7689) * C153915 + C7751 * C153890) *
               C535 -
           ((C7744 + C7745 + C7746) * C153890 +
            (C7693 + C7692 + C7743) * C153915 +
            (C7689 + C7688 + C7742) * C153926) *
               C536 +
           (C7751 * C153926 + (C7746 + C7745 + C7744) * C153915 +
            ((C134 * C7673 + C7700 + C7700 + C153608 * C7681) * C2818 +
             C7739 * C2819 + C7740 * C153874) *
                C153890) *
               C537) *
              C153511 * C323 +
          (((C7707 + C7708 + C7709) * C153926 +
            (C7710 + C7711 + C7712) * C153915 +
            (C7747 + C7748 + C7749) * C153890) *
               C536 -
           (C7733 * C153890 + (C7709 + C7708 + C7707) * C153915 +
            (C195 * C153874 + C194 * C2819 + C193 * C2818) * C153926) *
               C535 -
           (((C134 * C7676 + C7715 + C7715 + C153608 * C7684) * C153874 +
             C7740 * C2819 + C7739 * C2818) *
                C153890 +
            (C7749 + C7748 + C7747) * C153915 + C7733 * C153926) *
               C537) *
              C153511 * C153498)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         (((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
            C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 + C24119 +
            C153887 * C354) *
               C153922 +
           (C24183 + C24184 + C24185) * C153903 + C24197 * C153874) *
              C153626 * C153527 * C153511 * C130 -
          (C24198 * C153874 + (C24188 + C24187 + C24186) * C153903 +
           (C24185 + C24184 + C24183) * C153922) *
              C153626 * C153527 * C153511 * C131 +
          (C24197 * C153922 + (C24191 + C24190 + C24189) * C153903 +
           (C24192 + C24193 + C24194) * C153874) *
              C153626 * C153527 * C153511 * C132 -
          ((C24114 * C336 + C24156 + C24156 + C153887 * C360 + C24112 * C335 +
            C24157 + C24157 + C24105 * C359 + C24110 * C141 + C24158 + C24158 +
            C24104 * C157) *
               C153874 +
           (C24194 + C24193 + C24192) * C153903 + C24198 * C153922) *
              C153626 * C153527 * C153511 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         ((((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
             C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 + C24119 +
             C153887 * C354) *
                C153922 +
            (C24183 + C24184 + C24185) * C153903 + C24197 * C153874) *
               C153626 * C153527 * C320 -
           ((C24489 + C24490 + C24491) * C153874 +
            (C24492 + C24493 + C24494) * C153903 +
            (C24114 * C1319 + C24435 + C24435 + C153887 * C1329 +
             C24112 * C330 + C24436 + C24436 + C24105 * C354 + C24110 * C329 +
             C24437 + C24437 + C24104 * C353) *
                C153922) *
               C153626 * C153527 * C321 +
           ((C24110 * C330 + C24438 + C24438 + C24104 * C354 + C24112 * C1319 +
             C24439 + C24439 + C24105 * C1329 + C24114 * C3127 + C24440 +
             C24440 + C153887 * C3135) *
                C153922 +
            (C24495 + C24496 + C24497) * C153903 +
            (C24498 + C24499 + C24500) * C153874) *
               C153626 * C153527 * C322) *
              C323 +
          (((C24494 + C24493 + C24492) * C153922 +
            (C24491 + C24490 + C24489) * C153903 +
            (C24110 * C326 + C24459 + C24459 + C24104 * C350 + C24112 * C333 +
             C24460 + C24460 + C24105 * C357 + C24114 * C1316 + C24461 +
             C24461 + C153887 * C1326) *
                C153874) *
               C153626 * C153527 * C321 -
           (C24198 * C153874 + (C24188 + C24187 + C24186) * C153903 +
            (C24185 + C24184 + C24183) * C153922) *
               C153626 * C153527 * C320 -
           ((C24114 * C3130 + C24462 + C24462 + C153887 * C3138 +
             C24112 * C1316 + C24463 + C24463 + C24105 * C1326 + C24110 * C333 +
             C24464 + C24464 + C24104 * C357) *
                C153874 +
            (C24500 + C24499 + C24498) * C153903 +
            (C24497 + C24496 + C24495) * C153922) *
               C153626 * C153527 * C322) *
              C153498)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
             C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 + C24119 +
             C153887 * C354) *
                C153922 +
            (C24183 + C24184 + C24185) * C153903 + C24197 * C153874) *
               C153626 * C535 -
           ((C24791 + C24792 + C24793) * C153874 +
            (C24794 + C24795 + C24796) * C153903 +
            (C24114 * C1892 + C24737 + C24737 + C153887 * C1902 +
             C24112 * C1057 + C24738 + C24738 + C24105 * C1069 + C24110 * C542 +
             C24739 + C24739 + C24104 * C566) *
                C153922) *
               C153626 * C536 +
           ((C24110 * C543 + C24740 + C24740 + C24104 * C567 + C24112 * C1461 +
             C24741 + C24741 + C24105 * C1471 + C24114 * C3441 + C24742 +
             C24742 + C153887 * C3449) *
                C153922 +
            (C24797 + C24798 + C24799) * C153903 +
            (C24800 + C24801 + C24802) * C153874) *
               C153626 * C537) *
              C153511 * C323 +
          (((C24796 + C24795 + C24794) * C153922 +
            (C24793 + C24792 + C24791) * C153903 +
            (C24110 * C539 + C24761 + C24761 + C24104 * C563 + C24112 * C1060 +
             C24762 + C24762 + C24105 * C1072 + C24114 * C1889 + C24763 +
             C24763 + C153887 * C1899) *
                C153874) *
               C153626 * C536 -
           (C24198 * C153874 + (C24188 + C24187 + C24186) * C153903 +
            (C24185 + C24184 + C24183) * C153922) *
               C153626 * C535 -
           ((C24114 * C3444 + C24764 + C24764 + C153887 * C3452 +
             C24112 * C1458 + C24765 + C24765 + C24105 * C1468 + C24110 * C546 +
             C24766 + C24766 + C24104 * C570) *
                C153874 +
            (C24802 + C24801 + C24800) * C153903 +
            (C24799 + C24798 + C24797) * C153922) *
               C153626 * C537) *
              C153511 * C153498)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         ((C28350 * C136 + C28361 + C28361 + C28344 * C152 + C28352 * C329 +
           C28362 + C28362 + C28345 * C353 + C28354 * C330 + C28363 + C28363 +
           C28346 * C354 + C28356 * C1319 + C28364 + C28364 + C28347 * C1329 +
           C28358 * C3127 + C28365 + C28365 + C28348 * C3135) *
              C153454 * C153626 * C153527 * C153511 * C130 -
          (C28358 * C3128 + C28366 + C28366 + C28348 * C3136 + C28356 * C1318 +
           C28367 + C28367 + C28347 * C1328 + C28354 * C331 + C28368 + C28368 +
           C28346 * C355 + C28352 * C328 + C28369 + C28369 + C28345 * C352 +
           C28350 * C137 + C28370 + C28370 + C28344 * C153) *
              C153454 * C153626 * C153527 * C153511 * C131 +
          (C28350 * C138 + C28371 + C28371 + C28344 * C154 + C28352 * C327 +
           C28372 + C28372 + C28345 * C351 + C28354 * C332 + C28373 + C28373 +
           C28346 * C356 + C28356 * C1317 + C28374 + C28374 + C28347 * C1327 +
           C28358 * C3129 + C28375 + C28375 + C28348 * C3137) *
              C153454 * C153626 * C153527 * C153511 * C132 -
          (C28358 * C3130 + C28376 + C28376 + C28348 * C3138 + C28356 * C1316 +
           C28377 + C28377 + C28347 * C1326 + C28354 * C333 + C28378 + C28378 +
           C28346 * C357 + C28352 * C326 + C28379 + C28379 + C28345 * C350 +
           C28350 * C139 + C28380 + C28380 + C28344 * C155) *
              C153454 * C153626 * C153527 * C153511 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         (((C28350 * C136 + C28361 + C28361 + C28344 * C152 + C28352 * C329 +
            C28362 + C28362 + C28345 * C353 + C28354 * C330 + C28363 + C28363 +
            C28346 * C354 + C28356 * C1319 + C28364 + C28364 + C28347 * C1329 +
            C28358 * C3127 + C28365 + C28365 + C28348 * C3135) *
               C153454 * C153626 * C153527 * C320 -
           (C28358 * C4723 + C28509 + C28509 + C28348 * C4729 + C28356 * C3127 +
            C28510 + C28510 + C28347 * C3135 + C28354 * C1319 + C28511 +
            C28511 + C28346 * C1329 + C28352 * C330 + C28512 + C28512 +
            C28345 * C354 + C28350 * C329 + C28513 + C28513 + C28344 * C353) *
               C153454 * C153626 * C153527 * C321 +
           (C28350 * C330 + C28514 + C28514 + C28344 * C354 + C28352 * C1319 +
            C28515 + C28515 + C28345 * C1329 + C28354 * C3127 + C28516 +
            C28516 + C28346 * C3135 + C28356 * C4723 + C28517 + C28517 +
            C28347 * C4729 + C28358 * C28502 + C28518 + C28518 +
            C28348 * C28506) *
               C153454 * C153626 * C153527 * C322) *
              C323 +
          ((C28350 * C328 + C28519 + C28519 + C28344 * C352 + C28352 * C331 +
            C28520 + C28520 + C28345 * C355 + C28354 * C1318 + C28521 + C28521 +
            C28346 * C1328 + C28356 * C3128 + C28522 + C28522 + C28347 * C3136 +
            C28358 * C4722 + C28523 + C28523 + C28348 * C4728) *
               C153454 * C153626 * C153527 * C321 -
           (C28358 * C3128 + C28366 + C28366 + C28348 * C3136 + C28356 * C1318 +
            C28367 + C28367 + C28347 * C1328 + C28354 * C331 + C28368 + C28368 +
            C28346 * C355 + C28352 * C328 + C28369 + C28369 + C28345 * C352 +
            C28350 * C137 + C28370 + C28370 + C28344 * C153) *
               C153454 * C153626 * C153527 * C320 -
           (C28358 * C28503 + C28524 + C28524 + C28348 * C28507 +
            C28356 * C4722 + C28525 + C28525 + C28347 * C4728 + C28354 * C3128 +
            C28526 + C28526 + C28346 * C3136 + C28352 * C1318 + C28527 +
            C28527 + C28345 * C1328 + C28350 * C331 + C28528 + C28528 +
            C28344 * C355) *
               C153454 * C153626 * C153527 * C322) *
              C153498)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C28350 * C136 + C28361 + C28361 + C28344 * C152 + C28352 * C329 +
            C28362 + C28362 + C28345 * C353 + C28354 * C330 + C28363 + C28363 +
            C28346 * C354 + C28356 * C1319 + C28364 + C28364 + C28347 * C1329 +
            C28358 * C3127 + C28365 + C28365 + C28348 * C3135) *
               C153454 * C153626 * C535 -
           (C28358 * C5703 + C28657 + C28657 + C28348 * C5709 + C28356 * C4303 +
            C28658 + C28658 + C28347 * C4311 + C28354 * C1892 + C28659 +
            C28659 + C28346 * C1902 + C28352 * C1057 + C28660 + C28660 +
            C28345 * C1069 + C28350 * C542 + C28661 + C28661 + C28344 * C566) *
               C153454 * C153626 * C536 +
           (C28350 * C543 + C28662 + C28662 + C28344 * C567 + C28352 * C1461 +
            C28663 + C28663 + C28345 * C1471 + C28354 * C3441 + C28664 +
            C28664 + C28346 * C3449 + C28356 * C4959 + C28665 + C28665 +
            C28347 * C4965 + C28358 * C28650 + C28666 + C28666 +
            C28348 * C28654) *
               C153454 * C153626 * C537) *
              C153511 * C323 +
          ((C28350 * C541 + C28667 + C28667 + C28344 * C565 + C28352 * C1058 +
            C28668 + C28668 + C28345 * C1070 + C28354 * C1891 + C28669 +
            C28669 + C28346 * C1901 + C28356 * C4304 + C28670 + C28670 +
            C28347 * C4312 + C28358 * C5702 + C28671 + C28671 +
            C28348 * C5708) *
               C153454 * C153626 * C536 -
           (C28358 * C3128 + C28366 + C28366 + C28348 * C3136 + C28356 * C1318 +
            C28367 + C28367 + C28347 * C1328 + C28354 * C331 + C28368 + C28368 +
            C28346 * C355 + C28352 * C328 + C28369 + C28369 + C28345 * C352 +
            C28350 * C137 + C28370 + C28370 + C28344 * C153) *
               C153454 * C153626 * C535 -
           (C28358 * C28651 + C28672 + C28672 + C28348 * C28655 +
            C28356 * C4958 + C28673 + C28673 + C28347 * C4964 + C28354 * C3442 +
            C28674 + C28674 + C28346 * C3450 + C28352 * C1460 + C28675 +
            C28675 + C28345 * C1470 + C28350 * C544 + C28676 + C28676 +
            C28344 * C568) *
               C153454 * C153626 * C537) *
              C153511 * C153498)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
            C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 + C24119 +
            C153887 * C354) *
               C153454 * C153926 +
           (C24110 * C542 + C24739 + C24739 + C24104 * C566 + C24112 * C1057 +
            C24738 + C24738 + C24105 * C1069 + C24114 * C1892 + C24737 +
            C24737 + C153887 * C1902) *
               C153454 * C153915 +
           (C24110 * C543 + C24740 + C24740 + C24104 * C567 + C24112 * C1461 +
            C24741 + C24741 + C24105 * C1471 + C24114 * C3441 + C24742 +
            C24742 + C153887 * C3449) *
               C153454 * C153890) *
              C153527 * C153511 * C130 -
          ((C24799 + C24798 + C24797) * C153454 * C153890 +
           (C24794 + C24795 + C24796) * C153454 * C153915 +
           (C24185 + C24184 + C24183) * C153454 * C153926) *
              C153527 * C153511 * C131 +
          (C24197 * C153454 * C153926 +
           (C24793 + C24792 + C24791) * C153454 * C153915 +
           (C24800 + C24801 + C24802) * C153454 * C153890) *
              C153527 * C153511 * C132 -
          ((C24114 * C3444 + C24764 + C24764 + C153887 * C3452 +
            C24112 * C1458 + C24765 + C24765 + C24105 * C1468 + C24110 * C546 +
            C24766 + C24766 + C24104 * C570) *
               C153454 * C153890 +
           (C25278 + C25277 + C25276) * C153454 * C153915 +
           C24198 * C153454 * C153926) *
              C153527 * C153511 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
             C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 + C24119 +
             C153887 * C354) *
                C153454 * C153926 +
            (C24110 * C542 + C24739 + C24739 + C24104 * C566 + C24112 * C1057 +
             C24738 + C24738 + C24105 * C1069 + C24114 * C1892 + C24737 +
             C24737 + C153887 * C1902) *
                C153454 * C153915 +
            (C24110 * C543 + C24740 + C24740 + C24104 * C567 + C24112 * C1461 +
             C24741 + C24741 + C24105 * C1471 + C24114 * C3441 + C24742 +
             C24742 + C153887 * C3449) *
                C153454 * C153890) *
               C153527 * C320 -
           ((C24114 * C4959 + C26208 + C26208 + C153887 * C4965 +
             C24112 * C3441 + C26209 + C26209 + C24105 * C3449 +
             C24110 * C1461 + C26210 + C26210 + C24104 * C1471) *
                C153454 * C153890 +
            (C24114 * C4303 + C25571 + C25571 + C153887 * C4311 +
             C24112 * C1892 + C25570 + C25570 + C24105 * C1902 +
             C24110 * C1057 + C25569 + C25569 + C24104 * C1069) *
                C153454 * C153915 +
            (C24114 * C1319 + C24435 + C24435 + C153887 * C1329 +
             C24112 * C330 + C24436 + C24436 + C24105 * C354 + C24110 * C329 +
             C24437 + C24437 + C24104 * C353) *
                C153454 * C153926) *
               C153527 * C321 +
           ((C24110 * C330 + C24438 + C24438 + C24104 * C354 + C24112 * C1319 +
             C24439 + C24439 + C24105 * C1329 + C24114 * C3127 + C24440 +
             C24440 + C153887 * C3135) *
                C153454 * C153926 +
            (C24110 * C1892 + C26945 + C26945 + C24104 * C1902 +
             C24112 * C4303 + C26944 + C26944 + C24105 * C4311 +
             C24114 * C5703 + C26943 + C26943 + C153887 * C5709) *
                C153454 * C153915 +
            (C24110 * C3441 + C30972 + C30972 + C24104 * C3449 +
             C24112 * C4959 + C30973 + C30973 + C24105 * C4965 +
             C24114 * C28650 + C30974 + C30974 + C153887 * C28654) *
                C153454 * C153890) *
               C153527 * C322) *
              C323 +
          (((C24494 + C24493 + C24492) * C153454 * C153926 +
            (C25605 + C25606 + C25607) * C153454 * C153915 +
            (C24110 * C1460 + C26207 + C26207 + C24104 * C1470 +
             C24112 * C3442 + C26206 + C26206 + C24105 * C3450 +
             C24114 * C4958 + C26205 + C26205 + C153887 * C4964) *
                C153454 * C153890) *
               C153527 * C321 -
           ((C24799 + C24798 + C24797) * C153454 * C153890 +
            (C24794 + C24795 + C24796) * C153454 * C153915 +
            (C24185 + C24184 + C24183) * C153454 * C153926) *
               C153527 * C320 -
           ((C24114 * C28651 + C30975 + C30975 + C153887 * C28655 +
             C24112 * C4958 + C30976 + C30976 + C24105 * C4964 +
             C24110 * C3442 + C30977 + C30977 + C24104 * C3450) *
                C153454 * C153890 +
            (C24114 * C5702 + C26940 + C26940 + C153887 * C5708 +
             C24112 * C4304 + C26941 + C26941 + C24105 * C4312 +
             C24110 * C1891 + C26942 + C26942 + C24104 * C1901) *
                C153454 * C153915 +
            (C24497 + C24496 + C24495) * C153454 * C153926) *
               C153527 * C322) *
              C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
             C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 + C24119 +
             C153887 * C354) *
                C153454 * C153926 +
            (C31259 + C31260 + C31261) * C153454 * C153915 + C31273 * C153890) *
               C535 -
           ((C31265 + C31266 + C31267) * C153454 * C153890 +
            (C31264 + C31263 + C31262) * C153454 * C153915 +
            (C31261 + C31260 + C31259) * C153454 * C153926) *
               C536 +
           (C31273 * C153926 + (C31267 + C31266 + C31265) * C153454 * C153915 +
            (C24110 * C7673 + C31220 + C31220 + C24104 * C7681 +
             C24112 * C9117 + C31221 + C31221 + C24105 * C9123 +
             C24114 * C31195 + C31222 + C31222 + C153887 * C31199) *
                C153454 * C153890) *
               C537) *
              C153511 * C323 +
          (((C24796 + C24795 + C24794) * C153454 * C153926 +
            (C24797 + C24798 + C24799) * C153454 * C153915 +
            (C31268 + C31269 + C31270) * C153454 * C153890) *
               C536 -
           (C31258 * C153890 + (C24794 + C24795 + C24796) * C153454 * C153915 +
            (C24185 + C24184 + C24183) * C153454 * C153926) *
               C535 -
           ((C24114 * C31196 + C31230 + C31230 + C153887 * C31200 +
             C24112 * C9116 + C31231 + C31231 + C24105 * C9122 +
             C24110 * C7674 + C31232 + C31232 + C24104 * C7682) *
                C153454 * C153890 +
            (C31270 + C31269 + C31268) * C153454 * C153915 + C31258 * C153926) *
               C537) *
              C153511 * C153498)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153608 * C152) * C153922 +
            C193 * C153903 + C194 * C153874) *
               C47609 +
           (C7734 * C153922 + C622 * C153903 + C621 * C153874) * C47610 +
           (C7735 * C153922 + C623 * C153903 + C624 * C153874) * C153890) *
              C153527 * C153511 * C130 -
          ((C625 * C153874 + C624 * C153903 + C623 * C153922) * C153890 +
           (C620 * C153874 + C621 * C153903 + C622 * C153922) * C47610 +
           (C195 * C153874 + C194 * C153903 + C193 * C153922) * C47609) *
              C153527 * C153511 * C131 +
          ((C194 * C153922 + C195 * C153903 + C196 * C153874) * C47609 +
           (C621 * C153922 + C620 * C153903 + C619 * C153874) * C47610 +
           (C624 * C153922 + C625 * C153903 + C626 * C153874) * C153890) *
              C153527 * C153511 * C132 -
          (((C134 * C549 + C602 + C602 + C153608 * C573) * C153874 +
            C626 * C153903 + C625 * C153922) *
               C153890 +
           (C895 * C153874 + C619 * C153903 + C620 * C153922) * C47610 +
           (C197 * C153874 + C196 * C153903 + C195 * C153922) * C47609) *
              C153527 * C153511 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C153922 +
             C193 * C153903 + C194 * C153874) *
                C47609 +
            (C7734 * C153922 + C622 * C153903 + C621 * C153874) * C47610 +
            (C7735 * C153922 + C623 * C153903 + C624 * C153874) * C153890) *
               C153527 * C320 -
           ((C7450 * C153874 + C7451 * C153903 + C8523 * C153922) * C153890 +
            (C1099 * C153874 + C1098 * C153903 + C8522 * C153922) * C47610 +
            (C408 * C153874 + C409 * C153903 +
             (C134 * C329 + C374 + C374 + C153608 * C353) * C153922) *
                C47609) *
               C153527 * C321 +
           (((C134 * C330 + C375 + C375 + C153608 * C354) * C153922 +
             C410 * C153903 + C411 * C153874) *
                C47609 +
            (C9879 * C153922 + C7452 * C153903 + C7453 * C153874) * C47610 +
            (C9880 * C153922 + C7454 * C153903 + C7455 * C153874) * C153890) *
               C153527 * C322) *
              C323 +
          (((C409 * C153922 + C408 * C153903 + C407 * C153874) * C47609 +
            (C1098 * C153922 + C1099 * C153903 + C1100 * C153874) * C47610 +
            (C7451 * C153922 + C7450 * C153903 + C7974 * C153874) * C153890) *
               C153527 * C321 -
           ((C625 * C153874 + C624 * C153903 + C623 * C153922) * C153890 +
            (C620 * C153874 + C621 * C153903 + C622 * C153922) * C47610 +
            (C195 * C153874 + C194 * C153903 + C193 * C153922) * C47609) *
               C153527 * C320 -
           (((C134 * C3444 + C7437 + C7437 + C153608 * C3452) * C153874 +
             C7455 * C153903 + C7454 * C153922) *
                C153890 +
            (C15373 * C153874 + C7453 * C153903 + C7452 * C153922) * C47610 +
            (C412 * C153874 + C411 * C153903 + C410 * C153922) * C47609) *
               C153527 * C322) *
              C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C153922 +
             C193 * C153903 + C194 * C153874) *
                C47609 +
            (C48049 + C48050 + C48051) * C47610 + C48069 * C153890) *
               C535 -
           ((C48055 + C48056 + C48057) * C153890 +
            (C48054 + C48053 + C48052) * C47610 +
            (C48051 + C48050 + C48049) * C47609) *
               C536 +
           (C48069 * C47609 + (C48057 + C48056 + C48055) * C47610 +
            (C10485 * C153922 + C7739 * C153903 + C7740 * C153874) * C153890) *
               C537) *
              C153511 * C323 +
          (((C48058 + C48059 + C48060) * C47609 +
            (C48061 + C48062 + C48063) * C47610 +
            (C48064 + C48065 + C48066) * C153890) *
               C536 -
           (C48070 * C153890 + (C48060 + C48059 + C48058) * C47610 +
            (C195 * C153874 + C194 * C153903 + C193 * C153922) * C47609) *
               C535 -
           (((C134 * C7676 + C7715 + C7715 + C153608 * C7684) * C153874 +
             C7740 * C153903 + C7739 * C153922) *
                C153890 +
            (C48066 + C48065 + C48064) * C47610 + C48070 * C47609) *
               C537) *
              C153511 * C153498)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
            C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
            C153887 * C354) *
               C153454 * C47609 +
           (C2821 * C542 + C3474 + C3474 + C153925 * C566 + C2823 * C1057 +
            C3473 + C3473 + C153913 * C1069 + C2825 * C1892 + C3472 + C3472 +
            C153887 * C1902) *
               C153454 * C47610 +
           (C2821 * C543 + C3475 + C3475 + C153925 * C567 + C2823 * C1461 +
            C3476 + C3476 + C153913 * C1471 + C2825 * C3441 + C3477 + C3477 +
            C153887 * C3449) *
               C153454 * C153890) *
              C153527 * C153511 * C130 -
          ((C3534 + C3533 + C3532) * C153454 * C153890 +
           (C3529 + C3530 + C3531) * C153454 * C47610 +
           (C2896 + C2895 + C2894) * C153454 * C47609) *
              C153527 * C153511 * C131 +
          (C2908 * C153454 * C47609 +
           (C3528 + C3527 + C3526) * C153454 * C47610 +
           (C3535 + C3536 + C3537) * C153454 * C153890) *
              C153527 * C153511 * C132 -
          ((C2825 * C3444 + C3499 + C3499 + C153887 * C3452 + C2823 * C1458 +
            C3500 + C3500 + C153913 * C1468 + C2821 * C546 + C3501 + C3501 +
            C153925 * C570) *
               C153454 * C153890 +
           (C4013 + C4012 + C4011) * C153454 * C47610 +
           C2909 * C153454 * C47609) *
              C153527 * C153511 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
             C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
             C153887 * C354) *
                C153454 * C47609 +
            (C2821 * C542 + C3474 + C3474 + C153925 * C566 + C2823 * C1057 +
             C3473 + C3473 + C153913 * C1069 + C2825 * C1892 + C3472 + C3472 +
             C153887 * C1902) *
                C153454 * C47610 +
            (C2821 * C543 + C3475 + C3475 + C153925 * C567 + C2823 * C1461 +
             C3476 + C3476 + C153913 * C1471 + C2825 * C3441 + C3477 + C3477 +
             C153887 * C3449) *
                C153454 * C153890) *
               C153527 * C320 -
           ((C2825 * C4959 + C4973 + C4973 + C153887 * C4965 + C2823 * C3441 +
             C4974 + C4974 + C153913 * C3449 + C2821 * C1461 + C4975 + C4975 +
             C153925 * C1471) *
                C153454 * C153890 +
            (C2825 * C4303 + C4318 + C4318 + C153887 * C4311 + C2823 * C1892 +
             C4317 + C4317 + C153913 * C1902 + C2821 * C1057 + C4316 + C4316 +
             C153925 * C1069) *
                C153454 * C47610 +
            (C2825 * C1319 + C3158 + C3158 + C153887 * C1329 + C2823 * C330 +
             C3159 + C3159 + C153913 * C354 + C2821 * C329 + C3160 + C3160 +
             C153925 * C353) *
                C153454 * C47609) *
               C153527 * C321 +
           ((C2821 * C330 + C3161 + C3161 + C153925 * C354 + C2823 * C1319 +
             C3162 + C3162 + C153913 * C1329 + C2825 * C3127 + C3163 + C3163 +
             C153887 * C3135) *
                C153454 * C47609 +
            (C2821 * C1892 + C5719 + C5719 + C153925 * C1902 + C2823 * C4303 +
             C5718 + C5718 + C153913 * C4311 + C2825 * C5703 + C5717 + C5717 +
             C153887 * C5709) *
                C153454 * C47610 +
            (C2821 * C3441 + C51811 + C51811 + C153925 * C3449 + C2823 * C4959 +
             C51812 + C51812 + C153913 * C4965 + C2825 * C28650 + C51813 +
             C51813 + C153887 * C28654) *
                C153454 * C153890) *
               C153527 * C322) *
              C323 +
          (((C3217 + C3216 + C3215) * C153454 * C47609 +
            (C4352 + C4353 + C4354) * C153454 * C47610 +
            (C2821 * C1460 + C4972 + C4972 + C153925 * C1470 + C2823 * C3442 +
             C4971 + C4971 + C153913 * C3450 + C2825 * C4958 + C4970 + C4970 +
             C153887 * C4964) *
                C153454 * C153890) *
               C153527 * C321 -
           ((C3534 + C3533 + C3532) * C153454 * C153890 +
            (C3529 + C3530 + C3531) * C153454 * C47610 +
            (C2896 + C2895 + C2894) * C153454 * C47609) *
               C153527 * C320 -
           ((C2825 * C28651 + C51814 + C51814 + C153887 * C28655 +
             C2823 * C4958 + C51815 + C51815 + C153913 * C4964 + C2821 * C3442 +
             C51816 + C51816 + C153925 * C3450) *
                C153454 * C153890 +
            (C2825 * C5702 + C5714 + C5714 + C153887 * C5708 + C2823 * C4304 +
             C5715 + C5715 + C153913 * C4312 + C2821 * C1891 + C5716 + C5716 +
             C153925 * C1901) *
                C153454 * C47610 +
            (C3220 + C3219 + C3218) * C153454 * C47609) *
               C153527 * C322) *
              C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
             C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
             C153887 * C354) *
                C153454 * C47609 +
            (C52092 + C52093 + C52094) * C153454 * C47610 + C52106 * C153890) *
               C535 -
           ((C52098 + C52099 + C52100) * C153454 * C153890 +
            (C52097 + C52096 + C52095) * C153454 * C47610 +
            (C52094 + C52093 + C52092) * C153454 * C47609) *
               C536 +
           (C52106 * C47609 + (C52100 + C52099 + C52098) * C153454 * C47610 +
            (C2821 * C7673 + C52053 + C52053 + C153925 * C7681 + C2823 * C9117 +
             C52054 + C52054 + C153913 * C9123 + C2825 * C31195 + C52055 +
             C52055 + C153887 * C31199) *
                C153454 * C153890) *
               C537) *
              C153511 * C323 +
          (((C3531 + C3530 + C3529) * C153454 * C47609 +
            (C3532 + C3533 + C3534) * C153454 * C47610 +
            (C52101 + C52102 + C52103) * C153454 * C153890) *
               C536 -
           (C52091 * C153890 + (C3529 + C3530 + C3531) * C153454 * C47610 +
            (C2896 + C2895 + C2894) * C153454 * C47609) *
               C535 -
           ((C2825 * C31196 + C52063 + C52063 + C153887 * C31200 +
             C2823 * C9116 + C52064 + C52064 + C153913 * C9122 + C2821 * C7674 +
             C52065 + C52065 + C153925 * C7682) *
                C153454 * C153890 +
            (C52103 + C52102 + C52101) * C153454 * C47610 + C52091 * C47609) *
               C537) *
              C153511 * C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C134 * C136 + C161 + C161 + C153608 * C152) * C153454 * C55662 +
           C7734 * C153454 * C55663 + C7735 * C153454 * C55664 +
           C7738 * C153454 * C55665 + C10485 * C153454 * C55666) *
              C153527 * C153511 * C130 -
          (C7739 * C153454 * C55666 + C7737 * C153454 * C55665 +
           C623 * C153454 * C55664 + C622 * C153454 * C55663 +
           C193 * C153454 * C55662) *
              C153527 * C153511 * C131 +
          (C194 * C153454 * C55662 + C621 * C153454 * C55663 +
           C624 * C153454 * C55664 + C7736 * C153454 * C55665 +
           C7740 * C153454 * C55666) *
              C153527 * C153511 * C132 -
          ((C134 * C7676 + C7715 + C7715 + C153608 * C7684) * C153454 * C55666 +
           C7741 * C153454 * C55665 + C625 * C153454 * C55664 +
           C620 * C153454 * C55663 + C195 * C153454 * C55662) *
              C153527 * C153511 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153608 * C152) * C153454 * C55662 +
            C7734 * C153454 * C55663 + C7735 * C153454 * C55664 +
            C7738 * C153454 * C55665 + C10485 * C153454 * C55666) *
               C153527 * C320 -
           ((C134 * C9117 + C9132 + C9132 + C153608 * C9123) * C153454 *
                C55666 +
            C9136 * C153454 * C55665 + C8523 * C153454 * C55664 +
            C8522 * C153454 * C55663 +
            (C134 * C329 + C374 + C374 + C153608 * C353) * C153454 * C55662) *
               C153527 * C321 +
           ((C134 * C330 + C375 + C375 + C153608 * C354) * C153454 * C55662 +
            C9879 * C153454 * C55663 + C9880 * C153454 * C55664 +
            (C134 * C6305 + C9874 + C9874 + C153608 * C6317) * C153454 *
                C55665 +
            (C134 * C31195 + C55790 + C55790 + C153608 * C31199) * C153454 *
                C55666) *
               C153527 * C322) *
              C323 +
          ((C409 * C153454 * C55662 + C1098 * C153454 * C55663 +
            C7451 * C153454 * C55664 + C8524 * C153454 * C55665 +
            (C134 * C9116 + C9131 + C9131 + C153608 * C9122) * C153454 *
                C55666) *
               C153527 * C321 -
           (C7739 * C153454 * C55666 + C7737 * C153454 * C55665 +
            C623 * C153454 * C55664 + C622 * C153454 * C55663 +
            C193 * C153454 * C55662) *
               C153527 * C320 -
           ((C134 * C31196 + C55791 + C55791 + C153608 * C31200) * C153454 *
                C55666 +
            (C134 * C6303 + C9873 + C9873 + C153608 * C6315) * C153454 *
                C55665 +
            C7454 * C153454 * C55664 + C7452 * C153454 * C55663 +
            C410 * C153454 * C55662) *
               C153527 * C322) *
              C153498)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153608 * C152) * C153454 * C55662 +
            C55920 * C55663 + C55921 * C55664 + C55922 * C55665 +
            C55923 * C55666) *
               C535 -
           (C55940 * C55666 + C55923 * C55665 + C55922 * C55664 +
            C55921 * C55663 + C55920 * C55662) *
               C536 +
           (C55921 * C55662 + C55922 * C55663 + C55923 * C55664 +
            C55940 * C55665 +
            (C134 * C55913 + C55926 + C55926 + C153608 * C55917) * C153454 *
                C55666) *
               C537) *
              C153511 * C323 +
          ((C55927 * C55662 + C55928 * C55663 + C55929 * C55664 +
            C55930 * C55665 + C55941 * C55666) *
               C536 -
           (C55930 * C55666 + C55929 * C55665 + C55928 * C55664 +
            C55927 * C55663 + C193 * C153454 * C55662) *
               C535 -
           ((C134 * C55914 + C55933 + C55933 + C153608 * C55918) * C153454 *
                C55666 +
            C55941 * C55665 + C55930 * C55664 + C55929 * C55663 +
            C55928 * C55662) *
               C537) *
              C153511 * C153498)) /
            (p * q * std::sqrt(p + q));
    d2ee[183] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C136 + C161 + C161 + C153608 * C152) * C122 +
                C193 * C123 + C194 * C124 + C195 * C125 + C196 * C126) *
                   C153626 * C153838 -
               (C619 * C126 + C620 * C125 + C621 * C124 + C622 * C123 +
                (C134 * C542 + C587 + C587 + C153608 * C566) * C122) *
                   C153626 * C153591) *
                  C153511 * C153906 +
              ((C622 * C122 + C621 * C123 + C620 * C124 + C619 * C125 +
                C895 * C126) *
                   C153626 * C153591 -
               (C197 * C126 + C196 * C125 + C195 * C124 + C194 * C123 +
                C193 * C122) *
                   C153626 * C153838) *
                  C153511 * C153907 +
              ((C194 * C122 + C195 * C123 + C196 * C124 + C197 * C125 +
                C198 * C126) *
                   C153626 * C153838 -
               ((C134 * C886 + C892 + C892 + C153608 * C888) * C126 +
                C895 * C125 + C619 * C124 + C620 * C123 + C621 * C122) *
                   C153626 * C153591) *
                  C153511 * C752) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
                 C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
                 C153887 * C354) *
                    C2818 +
                (C2894 + C2895 + C2896) * C2819 + C2908 * C153874) *
                   C153626 * C153838 -
               (C4004 * C153874 + (C3529 + C3530 + C3531) * C2819 +
                (C2825 * C1892 + C3472 + C3472 + C153887 * C1902 +
                 C2823 * C1057 + C3473 + C3473 + C153913 * C1069 +
                 C2821 * C542 + C3474 + C3474 + C153925 * C566) *
                    C2818) *
                   C153626 * C153591) *
                  C153511 * C153906 +
              (((C3531 + C3530 + C3529) * C2818 +
                (C3528 + C3527 + C3526) * C2819 +
                (C4011 + C4012 + C4013) * C153874) *
                   C153626 * C153591 -
               (C2909 * C153874 + (C2899 + C2898 + C2897) * C2819 +
                (C2896 + C2895 + C2894) * C2818) *
                   C153626 * C153838) *
                  C153511 * C153907 +
              ((C2908 * C2818 + (C2902 + C2901 + C2900) * C2819 +
                (C2903 + C2904 + C2905) * C153874) *
                   C153626 * C153838 -
               ((C2825 * C1888 + C4001 + C4001 + C153887 * C1898 +
                 C2823 * C1061 + C4002 + C4002 + C153913 * C1073 +
                 C2821 * C538 + C4003 + C4003 + C153925 * C562) *
                    C153874 +
                (C4013 + C4012 + C4011) * C2819 + C4004 * C2818) *
                   C153626 * C153591) *
                  C153511 * C752)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C2818 +
             C193 * C2819 + C194 * C153874) *
                C153926 +
            (C7742 + C7688 + C7689) * C153915 + C7751 * C153890) *
               C153838 -
           ((C7744 + C7745 + C7746) * C153890 +
            (C7693 + C7692 + C7743) * C153915 +
            (C7689 + C7688 + C7742) * C153926) *
               C153591) *
              C153511 * C153906 +
          (((C7707 + C7708 + C7709) * C153926 +
            (C7710 + C7711 + C7712) * C153915 +
            (C7747 + C7748 + C7749) * C153890) *
               C153591 -
           (C7733 * C153890 + (C7709 + C7708 + C7707) * C153915 +
            (C195 * C153874 + C194 * C2819 + C193 * C2818) * C153926) *
               C153838) *
              C153511 * C153907 +
          (((C194 * C2818 + C195 * C2819 + C196 * C153874) * C153926 +
            (C8193 + C8194 + C8195) * C153915 +
            (C8196 + C8197 + C8198) * C153890) *
               C153838 -
           (((C134 * C2240 + C2256 + C2256 + C153608 * C2250) * C153874 +
             C7741 * C2819 + C7736 * C2818) *
                C153890 +
            (C8198 + C8197 + C8196) * C153915 +
            (C8195 + C8194 + C8193) * C153926) *
               C153591) *
              C153511 * C752)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
             C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 + C24119 +
             C153887 * C354) *
                C153922 +
            (C24183 + C24184 + C24185) * C153903 + C24197 * C153874) *
               C153626 * C153838 -
           (C25269 * C153874 + (C24794 + C24795 + C24796) * C153903 +
            (C24114 * C1892 + C24737 + C24737 + C153887 * C1902 +
             C24112 * C1057 + C24738 + C24738 + C24105 * C1069 + C24110 * C542 +
             C24739 + C24739 + C24104 * C566) *
                C153922) *
               C153626 * C153591) *
              C153511 * C153906 +
          (((C24796 + C24795 + C24794) * C153922 +
            (C24793 + C24792 + C24791) * C153903 +
            (C25276 + C25277 + C25278) * C153874) *
               C153626 * C153591 -
           (C24198 * C153874 + (C24188 + C24187 + C24186) * C153903 +
            (C24185 + C24184 + C24183) * C153922) *
               C153626 * C153838) *
              C153511 * C153907 +
          ((C24197 * C153922 + (C24191 + C24190 + C24189) * C153903 +
            (C24192 + C24193 + C24194) * C153874) *
               C153626 * C153838 -
           ((C24114 * C1888 + C25266 + C25266 + C153887 * C1898 +
             C24112 * C1061 + C25267 + C25267 + C24105 * C1073 + C24110 * C538 +
             C25268 + C25268 + C24104 * C562) *
                C153874 +
            (C25278 + C25277 + C25276) * C153903 + C25269 * C153922) *
               C153626 * C153591) *
              C153511 * C752)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C28350 * C136 + C28361 + C28361 + C28344 * C152 + C28352 * C329 +
            C28362 + C28362 + C28345 * C353 + C28354 * C330 + C28363 + C28363 +
            C28346 * C354 + C28356 * C1319 + C28364 + C28364 + C28347 * C1329 +
            C28358 * C3127 + C28365 + C28365 + C28348 * C3135) *
               C153454 * C153626 * C153838 -
           (C28358 * C5703 + C28657 + C28657 + C28348 * C5709 + C28356 * C4303 +
            C28658 + C28658 + C28347 * C4311 + C28354 * C1892 + C28659 +
            C28659 + C28346 * C1902 + C28352 * C1057 + C28660 + C28660 +
            C28345 * C1069 + C28350 * C542 + C28661 + C28661 + C28344 * C566) *
               C153454 * C153626 * C153591) *
              C153511 * C153906 +
          ((C28350 * C541 + C28667 + C28667 + C28344 * C565 + C28352 * C1058 +
            C28668 + C28668 + C28345 * C1070 + C28354 * C1891 + C28669 +
            C28669 + C28346 * C1901 + C28356 * C4304 + C28670 + C28670 +
            C28347 * C4312 + C28358 * C5702 + C28671 + C28671 +
            C28348 * C5708) *
               C153454 * C153626 * C153591 -
           (C28358 * C3128 + C28366 + C28366 + C28348 * C3136 + C28356 * C1318 +
            C28367 + C28367 + C28347 * C1328 + C28354 * C331 + C28368 + C28368 +
            C28346 * C355 + C28352 * C328 + C28369 + C28369 + C28345 * C352 +
            C28350 * C137 + C28370 + C28370 + C28344 * C153) *
               C153454 * C153626 * C153838) *
              C153511 * C153907 +
          ((C28350 * C138 + C28371 + C28371 + C28344 * C154 + C28352 * C327 +
            C28372 + C28372 + C28345 * C351 + C28354 * C332 + C28373 + C28373 +
            C28346 * C356 + C28356 * C1317 + C28374 + C28374 + C28347 * C1327 +
            C28358 * C3129 + C28375 + C28375 + C28348 * C3137) *
               C153454 * C153626 * C153838 -
           (C28358 * C5701 + C28926 + C28926 + C28348 * C5707 + C28356 * C4305 +
            C28927 + C28927 + C28347 * C4313 + C28354 * C1890 + C28928 +
            C28928 + C28346 * C1900 + C28352 * C1059 + C28929 + C28929 +
            C28345 * C1071 + C28350 * C540 + C28930 + C28930 + C28344 * C564) *
               C153454 * C153626 * C153591) *
              C153511 * C752)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
             C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 + C24119 +
             C153887 * C354) *
                C153454 * C153926 +
            (C31259 + C31260 + C31261) * C153454 * C153915 + C31273 * C153890) *
               C153838 -
           ((C31265 + C31266 + C31267) * C153454 * C153890 +
            (C31264 + C31263 + C31262) * C153454 * C153915 +
            (C31261 + C31260 + C31259) * C153454 * C153926) *
               C153591) *
              C153511 * C153906 +
          (((C24796 + C24795 + C24794) * C153454 * C153926 +
            (C24797 + C24798 + C24799) * C153454 * C153915 +
            (C31268 + C31269 + C31270) * C153454 * C153890) *
               C153591 -
           (C31258 * C153890 + (C24794 + C24795 + C24796) * C153454 * C153915 +
            (C24185 + C24184 + C24183) * C153454 * C153926) *
               C153838) *
              C153511 * C153907 +
          ((C24197 * C153454 * C153926 +
            (C24793 + C24792 + C24791) * C153454 * C153915 +
            (C24800 + C24801 + C24802) * C153454 * C153890) *
               C153838 -
           ((C24114 * C6301 + C27528 + C27528 + C153887 * C6313 +
             C24112 * C6302 + C27529 + C27529 + C24105 * C6314 +
             C24110 * C2242 + C27530 + C27530 + C24104 * C2252) *
                C153454 * C153890 +
            (C24802 + C24801 + C24800) * C153454 * C153915 +
            C25269 * C153454 * C153926) *
               C153591) *
              C153511 * C752)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C153922 +
             C193 * C153903 + C194 * C153874) *
                C47609 +
            (C48049 + C48050 + C48051) * C47610 + C48069 * C153890) *
               C153838 -
           ((C48055 + C48056 + C48057) * C153890 +
            (C48054 + C48053 + C48052) * C47610 +
            (C48051 + C48050 + C48049) * C47609) *
               C153591) *
              C153511 * C153906 +
          (((C48058 + C48059 + C48060) * C47609 +
            (C48061 + C48062 + C48063) * C47610 +
            (C48064 + C48065 + C48066) * C153890) *
               C153591 -
           (C48070 * C153890 + (C48060 + C48059 + C48058) * C47610 +
            (C195 * C153874 + C194 * C153903 + C193 * C153922) * C47609) *
               C153838) *
              C153511 * C153907 +
          (((C194 * C153922 + C195 * C153903 + C196 * C153874) * C47609 +
            (C48507 + C48508 + C48509) * C47610 +
            (C48510 + C48511 + C48512) * C153890) *
               C153838 -
           (((C134 * C2240 + C2256 + C2256 + C153608 * C2250) * C153874 +
             C7741 * C153903 + C7736 * C153922) *
                C153890 +
            (C48512 + C48511 + C48510) * C47610 +
            (C48509 + C48508 + C48507) * C47609) *
               C153591) *
              C153511 * C752)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
             C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
             C153887 * C354) *
                C153454 * C47609 +
            (C52092 + C52093 + C52094) * C153454 * C47610 + C52106 * C153890) *
               C153838 -
           ((C52098 + C52099 + C52100) * C153454 * C153890 +
            (C52097 + C52096 + C52095) * C153454 * C47610 +
            (C52094 + C52093 + C52092) * C153454 * C47609) *
               C153591) *
              C153511 * C153906 +
          (((C3531 + C3530 + C3529) * C153454 * C47609 +
            (C3532 + C3533 + C3534) * C153454 * C47610 +
            (C52101 + C52102 + C52103) * C153454 * C153890) *
               C153591 -
           (C52091 * C153890 + (C3529 + C3530 + C3531) * C153454 * C47610 +
            (C2896 + C2895 + C2894) * C153454 * C47609) *
               C153838) *
              C153511 * C153907 +
          ((C2908 * C153454 * C47609 +
            (C3528 + C3527 + C3526) * C153454 * C47610 +
            (C3535 + C3536 + C3537) * C153454 * C153890) *
               C153838 -
           ((C2825 * C6301 + C6320 + C6320 + C153887 * C6313 + C2823 * C6302 +
             C6321 + C6321 + C153913 * C6314 + C2821 * C2242 + C6322 + C6322 +
             C153925 * C2252) *
                C153454 * C153890 +
            (C3537 + C3536 + C3535) * C153454 * C47610 +
            C4004 * C153454 * C47609) *
               C153591) *
              C153511 * C752)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153608 * C152) * C153454 * C55662 +
            C55920 * C55663 + C55921 * C55664 + C55922 * C55665 +
            C55923 * C55666) *
               C153838 -
           (C55940 * C55666 + C55923 * C55665 + C55922 * C55664 +
            C55921 * C55663 + C55920 * C55662) *
               C153591) *
              C153511 * C153906 +
          ((C55927 * C55662 + C55928 * C55663 + C55929 * C55664 +
            C55930 * C55665 + C55941 * C55666) *
               C153591 -
           (C55930 * C55666 + C55929 * C55665 + C55928 * C55664 +
            C55927 * C55663 + C193 * C153454 * C55662) *
               C153838) *
              C153511 * C153907 +
          ((C194 * C153454 * C55662 + C56186 * C55663 + C56187 * C55664 +
            C56188 * C55665 + C56189 * C55666) *
               C153838 -
           ((C134 * C10464 + C10479 + C10479 + C153608 * C10470) * C153454 *
                C55666 +
            C56189 * C55665 + C56188 * C55664 + C56187 * C55663 +
            C56186 * C55662) *
               C153591) *
              C153511 * C752)) /
            (p * q * std::sqrt(p + q));
    d2ee[184] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C136 + C161 + C161 + C153608 * C152) * C122 + C193 * C123 +
           C194 * C124 + C195 * C125 + C196 * C126) *
              C153626 * C153527 * C153511 * C130 -
          (C197 * C126 + C196 * C125 + C195 * C124 + C194 * C123 +
           C193 * C122) *
              C153626 * C153527 * C153511 * C131 +
          (C194 * C122 + C195 * C123 + C196 * C124 + C197 * C125 +
           C198 * C126) *
              C153626 * C153527 * C153511 * C132 -
          ((C134 * C143 + C180 + C180 + C153608 * C159) * C126 + C198 * C125 +
           C197 * C124 + C196 * C123 + C195 * C122) *
              C153626 * C153527 * C153511 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153608 * C152) * C122 + C193 * C123 +
            C194 * C124 + C195 * C125 + C196 * C126) *
               C153626 * C153527 * C320 -
           (C406 * C126 + C407 * C125 + C408 * C124 + C409 * C123 +
            (C134 * C329 + C374 + C374 + C153608 * C353) * C122) *
               C153626 * C153527 * C321 +
           ((C134 * C330 + C375 + C375 + C153608 * C354) * C122 + C410 * C123 +
            C411 * C124 + C412 * C125 + C413 * C126) *
               C153626 * C153527 * C322) *
              C323 +
          ((C409 * C122 + C408 * C123 + C407 * C124 + C406 * C125 +
            (C134 * C335 + C388 + C388 + C153608 * C359) * C126) *
               C153626 * C153527 * C321 -
           (C197 * C126 + C196 * C125 + C195 * C124 + C194 * C123 +
            C193 * C122) *
               C153626 * C153527 * C320 -
           ((C134 * C336 + C389 + C389 + C153608 * C360) * C126 + C413 * C125 +
            C412 * C124 + C411 * C123 + C410 * C122) *
               C153626 * C153527 * C322) *
              C153498)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
            C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
            C153887 * C354) *
               C2818 +
           (C2894 + C2895 + C2896) * C2819 + C2908 * C153874) *
              C153626 * C153527 * C153511 * C130 -
          (C2909 * C153874 + (C2899 + C2898 + C2897) * C2819 +
           (C2896 + C2895 + C2894) * C2818) *
              C153626 * C153527 * C153511 * C131 +
          (C2908 * C2818 + (C2902 + C2901 + C2900) * C2819 +
           (C2903 + C2904 + C2905) * C153874) *
              C153626 * C153527 * C153511 * C132 -
          ((C2825 * C336 + C2867 + C2867 + C153887 * C360 + C2823 * C335 +
            C2868 + C2868 + C153913 * C359 + C2821 * C141 + C2869 + C2869 +
            C153925 * C157) *
               C153874 +
           (C2905 + C2904 + C2903) * C2819 + C2909 * C2818) *
              C153626 * C153527 * C153511 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
             C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
             C153887 * C354) *
                C2818 +
            (C2894 + C2895 + C2896) * C2819 + C2908 * C153874) *
               C153626 * C153527 * C320 -
           ((C3212 + C3213 + C3214) * C153874 +
            (C3215 + C3216 + C3217) * C2819 +
            (C2825 * C1319 + C3158 + C3158 + C153887 * C1329 + C2823 * C330 +
             C3159 + C3159 + C153913 * C354 + C2821 * C329 + C3160 + C3160 +
             C153925 * C353) *
                C2818) *
               C153626 * C153527 * C321 +
           ((C2821 * C330 + C3161 + C3161 + C153925 * C354 + C2823 * C1319 +
             C3162 + C3162 + C153913 * C1329 + C2825 * C3127 + C3163 + C3163 +
             C153887 * C3135) *
                C2818 +
            (C3218 + C3219 + C3220) * C2819 +
            (C3221 + C3222 + C3223) * C153874) *
               C153626 * C153527 * C322) *
              C323 +
          (((C3217 + C3216 + C3215) * C2818 + (C3214 + C3213 + C3212) * C2819 +
            (C2821 * C326 + C3182 + C3182 + C153925 * C350 + C2823 * C333 +
             C3183 + C3183 + C153913 * C357 + C2825 * C1316 + C3184 + C3184 +
             C153887 * C1326) *
                C153874) *
               C153626 * C153527 * C321 -
           (C2909 * C153874 + (C2899 + C2898 + C2897) * C2819 +
            (C2896 + C2895 + C2894) * C2818) *
               C153626 * C153527 * C320 -
           ((C2825 * C3130 + C3185 + C3185 + C153887 * C3138 + C2823 * C1316 +
             C3186 + C3186 + C153913 * C1326 + C2821 * C333 + C3187 + C3187 +
             C153925 * C357) *
                C153874 +
            (C3223 + C3222 + C3221) * C2819 + (C3220 + C3219 + C3218) * C2818) *
               C153626 * C153527 * C322) *
              C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153608 * C152) * C2818 +
            C193 * C2819 + C194 * C153874) *
               C153926 +
           ((C134 * C542 + C587 + C587 + C153608 * C566) * C2818 +
            C622 * C2819 + C621 * C153874) *
               C153915 +
           ((C134 * C543 + C588 + C588 + C153608 * C567) * C2818 +
            C623 * C2819 + C624 * C153874) *
               C153890) *
              C153527 * C153511 * C130 -
          ((C625 * C153874 + C624 * C2819 + C623 * C2818) * C153890 +
           (C620 * C153874 + C621 * C2819 + C622 * C2818) * C153915 +
           (C195 * C153874 + C194 * C2819 + C193 * C2818) * C153926) *
              C153527 * C153511 * C131 +
          ((C194 * C2818 + C195 * C2819 + C196 * C153874) * C153926 +
           (C621 * C2818 + C620 * C2819 + C619 * C153874) * C153915 +
           (C624 * C2818 + C625 * C2819 + C626 * C153874) * C153890) *
              C153527 * C153511 * C132 -
          (((C134 * C549 + C602 + C602 + C153608 * C573) * C153874 +
            C626 * C2819 + C625 * C2818) *
               C153890 +
           (C895 * C153874 + C619 * C2819 + C620 * C2818) * C153915 +
           (C197 * C153874 + C196 * C2819 + C195 * C2818) * C153926) *
              C153527 * C153511 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C2818 +
             C193 * C2819 + C194 * C153874) *
                C153926 +
            ((C134 * C542 + C587 + C587 + C153608 * C566) * C2818 +
             C622 * C2819 + C621 * C153874) *
                C153915 +
            ((C134 * C543 + C588 + C588 + C153608 * C567) * C2818 +
             C623 * C2819 + C624 * C153874) *
                C153890) *
               C153527 * C320 -
           ((C7450 * C153874 + C7451 * C2819 +
             (C134 * C1461 + C1477 + C1477 + C153608 * C1471) * C2818) *
                C153890 +
            (C1099 * C153874 + C1098 * C2819 +
             (C134 * C1057 + C1076 + C1076 + C153608 * C1069) * C2818) *
                C153915 +
            (C408 * C153874 + C409 * C2819 +
             (C134 * C329 + C374 + C374 + C153608 * C353) * C2818) *
                C153926) *
               C153527 * C321 +
           (((C134 * C330 + C375 + C375 + C153608 * C354) * C2818 +
             C410 * C2819 + C411 * C153874) *
                C153926 +
            ((C134 * C1892 + C1908 + C1908 + C153608 * C1902) * C2818 +
             C7452 * C2819 + C7453 * C153874) *
                C153915 +
            ((C134 * C3441 + C7430 + C7430 + C153608 * C3449) * C2818 +
             C7454 * C2819 + C7455 * C153874) *
                C153890) *
               C153527 * C322) *
              C323 +
          (((C409 * C2818 + C408 * C2819 + C407 * C153874) * C153926 +
            (C1098 * C2818 + C1099 * C2819 + C1100 * C153874) * C153915 +
            (C7451 * C2818 + C7450 * C2819 +
             (C134 * C1458 + C1474 + C1474 + C153608 * C1468) * C153874) *
                C153890) *
               C153527 * C321 -
           ((C625 * C153874 + C624 * C2819 + C623 * C2818) * C153890 +
            (C620 * C153874 + C621 * C2819 + C622 * C2818) * C153915 +
            (C195 * C153874 + C194 * C2819 + C193 * C2818) * C153926) *
               C153527 * C320 -
           (((C134 * C3444 + C7437 + C7437 + C153608 * C3452) * C153874 +
             C7455 * C2819 + C7454 * C2818) *
                C153890 +
            ((C134 * C1889 + C1905 + C1905 + C153608 * C1899) * C153874 +
             C7453 * C2819 + C7452 * C2818) *
                C153915 +
            (C412 * C153874 + C411 * C2819 + C410 * C2818) * C153926) *
               C153527 * C322) *
              C153498)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
            C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 + C24119 +
            C153887 * C354) *
               C153922 +
           (C24183 + C24184 + C24185) * C153903 + C24197 * C153874) *
              C153626 * C153527 * C153511 * C130 -
          (C24198 * C153874 + (C24188 + C24187 + C24186) * C153903 +
           (C24185 + C24184 + C24183) * C153922) *
              C153626 * C153527 * C153511 * C131 +
          (C24197 * C153922 + (C24191 + C24190 + C24189) * C153903 +
           (C24192 + C24193 + C24194) * C153874) *
              C153626 * C153527 * C153511 * C132 -
          ((C24114 * C336 + C24156 + C24156 + C153887 * C360 + C24112 * C335 +
            C24157 + C24157 + C24105 * C359 + C24110 * C141 + C24158 + C24158 +
            C24104 * C157) *
               C153874 +
           (C24194 + C24193 + C24192) * C153903 + C24198 * C153922) *
              C153626 * C153527 * C153511 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
             C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 + C24119 +
             C153887 * C354) *
                C153922 +
            (C24183 + C24184 + C24185) * C153903 + C24197 * C153874) *
               C153626 * C153527 * C320 -
           ((C24489 + C24490 + C24491) * C153874 +
            (C24492 + C24493 + C24494) * C153903 +
            (C24114 * C1319 + C24435 + C24435 + C153887 * C1329 +
             C24112 * C330 + C24436 + C24436 + C24105 * C354 + C24110 * C329 +
             C24437 + C24437 + C24104 * C353) *
                C153922) *
               C153626 * C153527 * C321 +
           ((C24110 * C330 + C24438 + C24438 + C24104 * C354 + C24112 * C1319 +
             C24439 + C24439 + C24105 * C1329 + C24114 * C3127 + C24440 +
             C24440 + C153887 * C3135) *
                C153922 +
            (C24495 + C24496 + C24497) * C153903 +
            (C24498 + C24499 + C24500) * C153874) *
               C153626 * C153527 * C322) *
              C323 +
          (((C24494 + C24493 + C24492) * C153922 +
            (C24491 + C24490 + C24489) * C153903 +
            (C24110 * C326 + C24459 + C24459 + C24104 * C350 + C24112 * C333 +
             C24460 + C24460 + C24105 * C357 + C24114 * C1316 + C24461 +
             C24461 + C153887 * C1326) *
                C153874) *
               C153626 * C153527 * C321 -
           (C24198 * C153874 + (C24188 + C24187 + C24186) * C153903 +
            (C24185 + C24184 + C24183) * C153922) *
               C153626 * C153527 * C320 -
           ((C24114 * C3130 + C24462 + C24462 + C153887 * C3138 +
             C24112 * C1316 + C24463 + C24463 + C24105 * C1326 + C24110 * C333 +
             C24464 + C24464 + C24104 * C357) *
                C153874 +
            (C24500 + C24499 + C24498) * C153903 +
            (C24497 + C24496 + C24495) * C153922) *
               C153626 * C153527 * C322) *
              C153498)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((C28350 * C136 + C28361 + C28361 + C28344 * C152 + C28352 * C329 +
           C28362 + C28362 + C28345 * C353 + C28354 * C330 + C28363 + C28363 +
           C28346 * C354 + C28356 * C1319 + C28364 + C28364 + C28347 * C1329 +
           C28358 * C3127 + C28365 + C28365 + C28348 * C3135) *
              C153454 * C153626 * C153527 * C153511 * C130 -
          (C28358 * C3128 + C28366 + C28366 + C28348 * C3136 + C28356 * C1318 +
           C28367 + C28367 + C28347 * C1328 + C28354 * C331 + C28368 + C28368 +
           C28346 * C355 + C28352 * C328 + C28369 + C28369 + C28345 * C352 +
           C28350 * C137 + C28370 + C28370 + C28344 * C153) *
              C153454 * C153626 * C153527 * C153511 * C131 +
          (C28350 * C138 + C28371 + C28371 + C28344 * C154 + C28352 * C327 +
           C28372 + C28372 + C28345 * C351 + C28354 * C332 + C28373 + C28373 +
           C28346 * C356 + C28356 * C1317 + C28374 + C28374 + C28347 * C1327 +
           C28358 * C3129 + C28375 + C28375 + C28348 * C3137) *
              C153454 * C153626 * C153527 * C153511 * C132 -
          (C28358 * C3130 + C28376 + C28376 + C28348 * C3138 + C28356 * C1316 +
           C28377 + C28377 + C28347 * C1326 + C28354 * C333 + C28378 + C28378 +
           C28346 * C357 + C28352 * C326 + C28379 + C28379 + C28345 * C350 +
           C28350 * C139 + C28380 + C28380 + C28344 * C155) *
              C153454 * C153626 * C153527 * C153511 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C28350 * C136 + C28361 + C28361 + C28344 * C152 + C28352 * C329 +
            C28362 + C28362 + C28345 * C353 + C28354 * C330 + C28363 + C28363 +
            C28346 * C354 + C28356 * C1319 + C28364 + C28364 + C28347 * C1329 +
            C28358 * C3127 + C28365 + C28365 + C28348 * C3135) *
               C153454 * C153626 * C153527 * C320 -
           (C28358 * C4723 + C28509 + C28509 + C28348 * C4729 + C28356 * C3127 +
            C28510 + C28510 + C28347 * C3135 + C28354 * C1319 + C28511 +
            C28511 + C28346 * C1329 + C28352 * C330 + C28512 + C28512 +
            C28345 * C354 + C28350 * C329 + C28513 + C28513 + C28344 * C353) *
               C153454 * C153626 * C153527 * C321 +
           (C28350 * C330 + C28514 + C28514 + C28344 * C354 + C28352 * C1319 +
            C28515 + C28515 + C28345 * C1329 + C28354 * C3127 + C28516 +
            C28516 + C28346 * C3135 + C28356 * C4723 + C28517 + C28517 +
            C28347 * C4729 + C28358 * C28502 + C28518 + C28518 +
            C28348 * C28506) *
               C153454 * C153626 * C153527 * C322) *
              C323 +
          ((C28350 * C328 + C28519 + C28519 + C28344 * C352 + C28352 * C331 +
            C28520 + C28520 + C28345 * C355 + C28354 * C1318 + C28521 + C28521 +
            C28346 * C1328 + C28356 * C3128 + C28522 + C28522 + C28347 * C3136 +
            C28358 * C4722 + C28523 + C28523 + C28348 * C4728) *
               C153454 * C153626 * C153527 * C321 -
           (C28358 * C3128 + C28366 + C28366 + C28348 * C3136 + C28356 * C1318 +
            C28367 + C28367 + C28347 * C1328 + C28354 * C331 + C28368 + C28368 +
            C28346 * C355 + C28352 * C328 + C28369 + C28369 + C28345 * C352 +
            C28350 * C137 + C28370 + C28370 + C28344 * C153) *
               C153454 * C153626 * C153527 * C320 -
           (C28358 * C28503 + C28524 + C28524 + C28348 * C28507 +
            C28356 * C4722 + C28525 + C28525 + C28347 * C4728 + C28354 * C3128 +
            C28526 + C28526 + C28346 * C3136 + C28352 * C1318 + C28527 +
            C28527 + C28345 * C1328 + C28350 * C331 + C28528 + C28528 +
            C28344 * C355) *
               C153454 * C153626 * C153527 * C322) *
              C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
            C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 + C24119 +
            C153887 * C354) *
               C153454 * C153926 +
           (C24110 * C542 + C24739 + C24739 + C24104 * C566 + C24112 * C1057 +
            C24738 + C24738 + C24105 * C1069 + C24114 * C1892 + C24737 +
            C24737 + C153887 * C1902) *
               C153454 * C153915 +
           (C24110 * C543 + C24740 + C24740 + C24104 * C567 + C24112 * C1461 +
            C24741 + C24741 + C24105 * C1471 + C24114 * C3441 + C24742 +
            C24742 + C153887 * C3449) *
               C153454 * C153890) *
              C153527 * C153511 * C130 -
          ((C24799 + C24798 + C24797) * C153454 * C153890 +
           (C24794 + C24795 + C24796) * C153454 * C153915 +
           (C24185 + C24184 + C24183) * C153454 * C153926) *
              C153527 * C153511 * C131 +
          (C24197 * C153454 * C153926 +
           (C24793 + C24792 + C24791) * C153454 * C153915 +
           (C24800 + C24801 + C24802) * C153454 * C153890) *
              C153527 * C153511 * C132 -
          ((C24114 * C3444 + C24764 + C24764 + C153887 * C3452 +
            C24112 * C1458 + C24765 + C24765 + C24105 * C1468 + C24110 * C546 +
            C24766 + C24766 + C24104 * C570) *
               C153454 * C153890 +
           (C25278 + C25277 + C25276) * C153454 * C153915 +
           C24198 * C153454 * C153926) *
              C153527 * C153511 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
             C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 + C24119 +
             C153887 * C354) *
                C153454 * C153926 +
            (C24110 * C542 + C24739 + C24739 + C24104 * C566 + C24112 * C1057 +
             C24738 + C24738 + C24105 * C1069 + C24114 * C1892 + C24737 +
             C24737 + C153887 * C1902) *
                C153454 * C153915 +
            (C24110 * C543 + C24740 + C24740 + C24104 * C567 + C24112 * C1461 +
             C24741 + C24741 + C24105 * C1471 + C24114 * C3441 + C24742 +
             C24742 + C153887 * C3449) *
                C153454 * C153890) *
               C153527 * C320 -
           ((C24114 * C4959 + C26208 + C26208 + C153887 * C4965 +
             C24112 * C3441 + C26209 + C26209 + C24105 * C3449 +
             C24110 * C1461 + C26210 + C26210 + C24104 * C1471) *
                C153454 * C153890 +
            (C24114 * C4303 + C25571 + C25571 + C153887 * C4311 +
             C24112 * C1892 + C25570 + C25570 + C24105 * C1902 +
             C24110 * C1057 + C25569 + C25569 + C24104 * C1069) *
                C153454 * C153915 +
            (C24114 * C1319 + C24435 + C24435 + C153887 * C1329 +
             C24112 * C330 + C24436 + C24436 + C24105 * C354 + C24110 * C329 +
             C24437 + C24437 + C24104 * C353) *
                C153454 * C153926) *
               C153527 * C321 +
           ((C24110 * C330 + C24438 + C24438 + C24104 * C354 + C24112 * C1319 +
             C24439 + C24439 + C24105 * C1329 + C24114 * C3127 + C24440 +
             C24440 + C153887 * C3135) *
                C153454 * C153926 +
            (C24110 * C1892 + C26945 + C26945 + C24104 * C1902 +
             C24112 * C4303 + C26944 + C26944 + C24105 * C4311 +
             C24114 * C5703 + C26943 + C26943 + C153887 * C5709) *
                C153454 * C153915 +
            (C24110 * C3441 + C30972 + C30972 + C24104 * C3449 +
             C24112 * C4959 + C30973 + C30973 + C24105 * C4965 +
             C24114 * C28650 + C30974 + C30974 + C153887 * C28654) *
                C153454 * C153890) *
               C153527 * C322) *
              C323 +
          (((C24494 + C24493 + C24492) * C153454 * C153926 +
            (C25605 + C25606 + C25607) * C153454 * C153915 +
            (C24110 * C1460 + C26207 + C26207 + C24104 * C1470 +
             C24112 * C3442 + C26206 + C26206 + C24105 * C3450 +
             C24114 * C4958 + C26205 + C26205 + C153887 * C4964) *
                C153454 * C153890) *
               C153527 * C321 -
           ((C24799 + C24798 + C24797) * C153454 * C153890 +
            (C24794 + C24795 + C24796) * C153454 * C153915 +
            (C24185 + C24184 + C24183) * C153454 * C153926) *
               C153527 * C320 -
           ((C24114 * C28651 + C30975 + C30975 + C153887 * C28655 +
             C24112 * C4958 + C30976 + C30976 + C24105 * C4964 +
             C24110 * C3442 + C30977 + C30977 + C24104 * C3450) *
                C153454 * C153890 +
            (C24114 * C5702 + C26940 + C26940 + C153887 * C5708 +
             C24112 * C4304 + C26941 + C26941 + C24105 * C4312 +
             C24110 * C1891 + C26942 + C26942 + C24104 * C1901) *
                C153454 * C153915 +
            (C24497 + C24496 + C24495) * C153454 * C153926) *
               C153527 * C322) *
              C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153608 * C152) * C153922 +
            C193 * C153903 + C194 * C153874) *
               C47609 +
           (C7734 * C153922 + C622 * C153903 + C621 * C153874) * C47610 +
           (C7735 * C153922 + C623 * C153903 + C624 * C153874) * C153890) *
              C153527 * C153511 * C130 -
          ((C625 * C153874 + C624 * C153903 + C623 * C153922) * C153890 +
           (C620 * C153874 + C621 * C153903 + C622 * C153922) * C47610 +
           (C195 * C153874 + C194 * C153903 + C193 * C153922) * C47609) *
              C153527 * C153511 * C131 +
          ((C194 * C153922 + C195 * C153903 + C196 * C153874) * C47609 +
           (C621 * C153922 + C620 * C153903 + C619 * C153874) * C47610 +
           (C624 * C153922 + C625 * C153903 + C626 * C153874) * C153890) *
              C153527 * C153511 * C132 -
          (((C134 * C549 + C602 + C602 + C153608 * C573) * C153874 +
            C626 * C153903 + C625 * C153922) *
               C153890 +
           (C895 * C153874 + C619 * C153903 + C620 * C153922) * C47610 +
           (C197 * C153874 + C196 * C153903 + C195 * C153922) * C47609) *
              C153527 * C153511 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C153922 +
             C193 * C153903 + C194 * C153874) *
                C47609 +
            (C7734 * C153922 + C622 * C153903 + C621 * C153874) * C47610 +
            (C7735 * C153922 + C623 * C153903 + C624 * C153874) * C153890) *
               C153527 * C320 -
           ((C7450 * C153874 + C7451 * C153903 + C8523 * C153922) * C153890 +
            (C1099 * C153874 + C1098 * C153903 + C8522 * C153922) * C47610 +
            (C408 * C153874 + C409 * C153903 +
             (C134 * C329 + C374 + C374 + C153608 * C353) * C153922) *
                C47609) *
               C153527 * C321 +
           (((C134 * C330 + C375 + C375 + C153608 * C354) * C153922 +
             C410 * C153903 + C411 * C153874) *
                C47609 +
            (C9879 * C153922 + C7452 * C153903 + C7453 * C153874) * C47610 +
            (C9880 * C153922 + C7454 * C153903 + C7455 * C153874) * C153890) *
               C153527 * C322) *
              C323 +
          (((C409 * C153922 + C408 * C153903 + C407 * C153874) * C47609 +
            (C1098 * C153922 + C1099 * C153903 + C1100 * C153874) * C47610 +
            (C7451 * C153922 + C7450 * C153903 + C7974 * C153874) * C153890) *
               C153527 * C321 -
           ((C625 * C153874 + C624 * C153903 + C623 * C153922) * C153890 +
            (C620 * C153874 + C621 * C153903 + C622 * C153922) * C47610 +
            (C195 * C153874 + C194 * C153903 + C193 * C153922) * C47609) *
               C153527 * C320 -
           (((C134 * C3444 + C7437 + C7437 + C153608 * C3452) * C153874 +
             C7455 * C153903 + C7454 * C153922) *
                C153890 +
            (C15373 * C153874 + C7453 * C153903 + C7452 * C153922) * C47610 +
            (C412 * C153874 + C411 * C153903 + C410 * C153922) * C47609) *
               C153527 * C322) *
              C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
            C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
            C153887 * C354) *
               C153454 * C47609 +
           (C2821 * C542 + C3474 + C3474 + C153925 * C566 + C2823 * C1057 +
            C3473 + C3473 + C153913 * C1069 + C2825 * C1892 + C3472 + C3472 +
            C153887 * C1902) *
               C153454 * C47610 +
           (C2821 * C543 + C3475 + C3475 + C153925 * C567 + C2823 * C1461 +
            C3476 + C3476 + C153913 * C1471 + C2825 * C3441 + C3477 + C3477 +
            C153887 * C3449) *
               C153454 * C153890) *
              C153527 * C153511 * C130 -
          ((C3534 + C3533 + C3532) * C153454 * C153890 +
           (C3529 + C3530 + C3531) * C153454 * C47610 +
           (C2896 + C2895 + C2894) * C153454 * C47609) *
              C153527 * C153511 * C131 +
          (C2908 * C153454 * C47609 +
           (C3528 + C3527 + C3526) * C153454 * C47610 +
           (C3535 + C3536 + C3537) * C153454 * C153890) *
              C153527 * C153511 * C132 -
          ((C2825 * C3444 + C3499 + C3499 + C153887 * C3452 + C2823 * C1458 +
            C3500 + C3500 + C153913 * C1468 + C2821 * C546 + C3501 + C3501 +
            C153925 * C570) *
               C153454 * C153890 +
           (C4013 + C4012 + C4011) * C153454 * C47610 +
           C2909 * C153454 * C47609) *
              C153527 * C153511 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
             C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
             C153887 * C354) *
                C153454 * C47609 +
            (C2821 * C542 + C3474 + C3474 + C153925 * C566 + C2823 * C1057 +
             C3473 + C3473 + C153913 * C1069 + C2825 * C1892 + C3472 + C3472 +
             C153887 * C1902) *
                C153454 * C47610 +
            (C2821 * C543 + C3475 + C3475 + C153925 * C567 + C2823 * C1461 +
             C3476 + C3476 + C153913 * C1471 + C2825 * C3441 + C3477 + C3477 +
             C153887 * C3449) *
                C153454 * C153890) *
               C153527 * C320 -
           ((C2825 * C4959 + C4973 + C4973 + C153887 * C4965 + C2823 * C3441 +
             C4974 + C4974 + C153913 * C3449 + C2821 * C1461 + C4975 + C4975 +
             C153925 * C1471) *
                C153454 * C153890 +
            (C2825 * C4303 + C4318 + C4318 + C153887 * C4311 + C2823 * C1892 +
             C4317 + C4317 + C153913 * C1902 + C2821 * C1057 + C4316 + C4316 +
             C153925 * C1069) *
                C153454 * C47610 +
            (C2825 * C1319 + C3158 + C3158 + C153887 * C1329 + C2823 * C330 +
             C3159 + C3159 + C153913 * C354 + C2821 * C329 + C3160 + C3160 +
             C153925 * C353) *
                C153454 * C47609) *
               C153527 * C321 +
           ((C2821 * C330 + C3161 + C3161 + C153925 * C354 + C2823 * C1319 +
             C3162 + C3162 + C153913 * C1329 + C2825 * C3127 + C3163 + C3163 +
             C153887 * C3135) *
                C153454 * C47609 +
            (C2821 * C1892 + C5719 + C5719 + C153925 * C1902 + C2823 * C4303 +
             C5718 + C5718 + C153913 * C4311 + C2825 * C5703 + C5717 + C5717 +
             C153887 * C5709) *
                C153454 * C47610 +
            (C2821 * C3441 + C51811 + C51811 + C153925 * C3449 + C2823 * C4959 +
             C51812 + C51812 + C153913 * C4965 + C2825 * C28650 + C51813 +
             C51813 + C153887 * C28654) *
                C153454 * C153890) *
               C153527 * C322) *
              C323 +
          (((C3217 + C3216 + C3215) * C153454 * C47609 +
            (C4352 + C4353 + C4354) * C153454 * C47610 +
            (C2821 * C1460 + C4972 + C4972 + C153925 * C1470 + C2823 * C3442 +
             C4971 + C4971 + C153913 * C3450 + C2825 * C4958 + C4970 + C4970 +
             C153887 * C4964) *
                C153454 * C153890) *
               C153527 * C321 -
           ((C3534 + C3533 + C3532) * C153454 * C153890 +
            (C3529 + C3530 + C3531) * C153454 * C47610 +
            (C2896 + C2895 + C2894) * C153454 * C47609) *
               C153527 * C320 -
           ((C2825 * C28651 + C51814 + C51814 + C153887 * C28655 +
             C2823 * C4958 + C51815 + C51815 + C153913 * C4964 + C2821 * C3442 +
             C51816 + C51816 + C153925 * C3450) *
                C153454 * C153890 +
            (C2825 * C5702 + C5714 + C5714 + C153887 * C5708 + C2823 * C4304 +
             C5715 + C5715 + C153913 * C4312 + C2821 * C1891 + C5716 + C5716 +
             C153925 * C1901) *
                C153454 * C47610 +
            (C3220 + C3219 + C3218) * C153454 * C47609) *
               C153527 * C322) *
              C153498)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C136 + C161 + C161 + C153608 * C152) * C153454 * C55662 +
           C7734 * C153454 * C55663 + C7735 * C153454 * C55664 +
           C7738 * C153454 * C55665 + C10485 * C153454 * C55666) *
              C153527 * C153511 * C130 -
          (C7739 * C153454 * C55666 + C7737 * C153454 * C55665 +
           C623 * C153454 * C55664 + C622 * C153454 * C55663 +
           C193 * C153454 * C55662) *
              C153527 * C153511 * C131 +
          (C194 * C153454 * C55662 + C621 * C153454 * C55663 +
           C624 * C153454 * C55664 + C7736 * C153454 * C55665 +
           C7740 * C153454 * C55666) *
              C153527 * C153511 * C132 -
          ((C134 * C7676 + C7715 + C7715 + C153608 * C7684) * C153454 * C55666 +
           C7741 * C153454 * C55665 + C625 * C153454 * C55664 +
           C620 * C153454 * C55663 + C195 * C153454 * C55662) *
              C153527 * C153511 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153608 * C152) * C153454 * C55662 +
            C7734 * C153454 * C55663 + C7735 * C153454 * C55664 +
            C7738 * C153454 * C55665 + C10485 * C153454 * C55666) *
               C153527 * C320 -
           ((C134 * C9117 + C9132 + C9132 + C153608 * C9123) * C153454 *
                C55666 +
            C9136 * C153454 * C55665 + C8523 * C153454 * C55664 +
            C8522 * C153454 * C55663 +
            (C134 * C329 + C374 + C374 + C153608 * C353) * C153454 * C55662) *
               C153527 * C321 +
           ((C134 * C330 + C375 + C375 + C153608 * C354) * C153454 * C55662 +
            C9879 * C153454 * C55663 + C9880 * C153454 * C55664 +
            (C134 * C6305 + C9874 + C9874 + C153608 * C6317) * C153454 *
                C55665 +
            (C134 * C31195 + C55790 + C55790 + C153608 * C31199) * C153454 *
                C55666) *
               C153527 * C322) *
              C323 +
          ((C409 * C153454 * C55662 + C1098 * C153454 * C55663 +
            C7451 * C153454 * C55664 + C8524 * C153454 * C55665 +
            (C134 * C9116 + C9131 + C9131 + C153608 * C9122) * C153454 *
                C55666) *
               C153527 * C321 -
           (C7739 * C153454 * C55666 + C7737 * C153454 * C55665 +
            C623 * C153454 * C55664 + C622 * C153454 * C55663 +
            C193 * C153454 * C55662) *
               C153527 * C320 -
           ((C134 * C31196 + C55791 + C55791 + C153608 * C31200) * C153454 *
                C55666 +
            (C134 * C6303 + C9873 + C9873 + C153608 * C6315) * C153454 *
                C55665 +
            C7454 * C153454 * C55664 + C7452 * C153454 * C55663 +
            C410 * C153454 * C55662) *
               C153527 * C322) *
              C153498)) /
            (p * q * std::sqrt(p + q));
    d2ee[185] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C136 + C161 + C161 + C153608 * C152) * C122 +
                C193 * C123 + C194 * C124 + C195 * C125 + C196 * C126) *
                   C153626 * C153527 * C153908 -
               (C406 * C126 + C407 * C125 + C408 * C124 + C409 * C123 +
                (C134 * C329 + C374 + C374 + C153608 * C353) * C122) *
                   C153626 * C153527 * C153909 +
               ((C134 * C330 + C375 + C375 + C153608 * C354) * C122 +
                C410 * C123 + C411 * C124 + C412 * C125 + C413 * C126) *
                   C153626 * C153527 * C1601) *
                  C153829 +
              ((C409 * C122 + C408 * C123 + C407 * C124 + C406 * C125 +
                C762 * C126) *
                   C153626 * C153527 * C153909 -
               (C197 * C126 + C196 * C125 + C195 * C124 + C194 * C123 +
                C193 * C122) *
                   C153626 * C153527 * C153908 -
               ((C134 * C336 + C389 + C389 + C153608 * C360) * C126 +
                C413 * C125 + C412 * C124 + C411 * C123 + C410 * C122) *
                   C153626 * C153527 * C1601) *
                  C153498) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
                 C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
                 C153887 * C354) *
                    C2818 +
                (C2894 + C2895 + C2896) * C2819 + C2908 * C153874) *
                   C153626 * C153527 * C153908 -
               (C3766 * C153874 + (C3215 + C3216 + C3217) * C2819 +
                (C2825 * C1319 + C3158 + C3158 + C153887 * C1329 +
                 C2823 * C330 + C3159 + C3159 + C153913 * C354 + C2821 * C329 +
                 C3160 + C3160 + C153925 * C353) *
                    C2818) *
                   C153626 * C153527 * C153909 +
               ((C2821 * C330 + C3161 + C3161 + C153925 * C354 + C2823 * C1319 +
                 C3162 + C3162 + C153913 * C1329 + C2825 * C3127 + C3163 +
                 C3163 + C153887 * C3135) *
                    C2818 +
                (C3218 + C3219 + C3220) * C2819 +
                (C3221 + C3222 + C3223) * C153874) *
                   C153626 * C153527 * C1601) *
                  C153829 +
              (((C3217 + C3216 + C3215) * C2818 +
                (C3214 + C3213 + C3212) * C2819 +
                (C3773 + C3774 + C3775) * C153874) *
                   C153626 * C153527 * C153909 -
               (C2909 * C153874 + (C2899 + C2898 + C2897) * C2819 +
                (C2896 + C2895 + C2894) * C2818) *
                   C153626 * C153527 * C153908 -
               ((C2825 * C3130 + C3185 + C3185 + C153887 * C3138 +
                 C2823 * C1316 + C3186 + C3186 + C153913 * C1326 +
                 C2821 * C333 + C3187 + C3187 + C153925 * C357) *
                    C153874 +
                (C3223 + C3222 + C3221) * C2819 +
                (C3220 + C3219 + C3218) * C2818) *
                   C153626 * C153527 * C1601) *
                  C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C2818 +
             C193 * C2819 + C194 * C153874) *
                C153926 +
            (C7742 + C7688 + C7689) * C153915 + C7751 * C153890) *
               C153527 * C153908 -
           (C9134 * C153890 + (C8495 + C8494 + C8526) * C153915 +
            (C408 * C153874 + C409 * C2819 +
             (C134 * C329 + C374 + C374 + C153608 * C353) * C2818) *
                C153926) *
               C153527 * C153909 +
           (((C134 * C330 + C375 + C375 + C153608 * C354) * C2818 +
             C410 * C2819 + C411 * C153874) *
                C153926 +
            ((C134 * C1892 + C1908 + C1908 + C153608 * C1902) * C2818 +
             C7452 * C2819 + C7453 * C153874) *
                C153915 +
            ((C134 * C3441 + C7430 + C7430 + C153608 * C3449) * C2818 +
             C7454 * C2819 + C7455 * C153874) *
                C153890) *
               C153527 * C1601) *
              C153829 +
          (((C409 * C2818 + C408 * C2819 + C407 * C153874) * C153926 +
            (C8507 + C8508 + C8509) * C153915 +
            (C8510 + C8511 + C8512) * C153890) *
               C153527 * C153909 -
           (C7733 * C153890 + (C7709 + C7708 + C7707) * C153915 +
            (C195 * C153874 + C194 * C2819 + C193 * C2818) * C153926) *
               C153527 * C153908 -
           (((C134 * C3444 + C7437 + C7437 + C153608 * C3452) * C153874 +
             C7455 * C2819 + C7454 * C2818) *
                C153890 +
            ((C134 * C1889 + C1905 + C1905 + C153608 * C1899) * C153874 +
             C7453 * C2819 + C7452 * C2818) *
                C153915 +
            (C412 * C153874 + C411 * C2819 + C410 * C2818) * C153926) *
               C153527 * C1601) *
              C153498)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
             C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 + C24119 +
             C153887 * C354) *
                C153922 +
            (C24183 + C24184 + C24185) * C153903 + C24197 * C153874) *
               C153626 * C153527 * C153908 -
           (C25031 * C153874 + (C24492 + C24493 + C24494) * C153903 +
            (C24114 * C1319 + C24435 + C24435 + C153887 * C1329 +
             C24112 * C330 + C24436 + C24436 + C24105 * C354 + C24110 * C329 +
             C24437 + C24437 + C24104 * C353) *
                C153922) *
               C153626 * C153527 * C153909 +
           ((C24110 * C330 + C24438 + C24438 + C24104 * C354 + C24112 * C1319 +
             C24439 + C24439 + C24105 * C1329 + C24114 * C3127 + C24440 +
             C24440 + C153887 * C3135) *
                C153922 +
            (C24495 + C24496 + C24497) * C153903 +
            (C24498 + C24499 + C24500) * C153874) *
               C153626 * C153527 * C1601) *
              C153829 +
          (((C24494 + C24493 + C24492) * C153922 +
            (C24491 + C24490 + C24489) * C153903 +
            (C25038 + C25039 + C25040) * C153874) *
               C153626 * C153527 * C153909 -
           (C24198 * C153874 + (C24188 + C24187 + C24186) * C153903 +
            (C24185 + C24184 + C24183) * C153922) *
               C153626 * C153527 * C153908 -
           ((C24114 * C3130 + C24462 + C24462 + C153887 * C3138 +
             C24112 * C1316 + C24463 + C24463 + C24105 * C1326 + C24110 * C333 +
             C24464 + C24464 + C24104 * C357) *
                C153874 +
            (C24500 + C24499 + C24498) * C153903 +
            (C24497 + C24496 + C24495) * C153922) *
               C153626 * C153527 * C1601) *
              C153498)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C28350 * C136 + C28361 + C28361 + C28344 * C152 + C28352 * C329 +
            C28362 + C28362 + C28345 * C353 + C28354 * C330 + C28363 + C28363 +
            C28346 * C354 + C28356 * C1319 + C28364 + C28364 + C28347 * C1329 +
            C28358 * C3127 + C28365 + C28365 + C28348 * C3135) *
               C153454 * C153626 * C153527 * C153908 -
           (C28358 * C4723 + C28509 + C28509 + C28348 * C4729 + C28356 * C3127 +
            C28510 + C28510 + C28347 * C3135 + C28354 * C1319 + C28511 +
            C28511 + C28346 * C1329 + C28352 * C330 + C28512 + C28512 +
            C28345 * C354 + C28350 * C329 + C28513 + C28513 + C28344 * C353) *
               C153454 * C153626 * C153527 * C153909 +
           (C28350 * C330 + C28514 + C28514 + C28344 * C354 + C28352 * C1319 +
            C28515 + C28515 + C28345 * C1329 + C28354 * C3127 + C28516 +
            C28516 + C28346 * C3135 + C28356 * C4723 + C28517 + C28517 +
            C28347 * C4729 + C28358 * C28502 + C28518 + C28518 +
            C28348 * C28506) *
               C153454 * C153626 * C153527 * C1601) *
              C153829 +
          ((C28350 * C328 + C28519 + C28519 + C28344 * C352 + C28352 * C331 +
            C28520 + C28520 + C28345 * C355 + C28354 * C1318 + C28521 + C28521 +
            C28346 * C1328 + C28356 * C3128 + C28522 + C28522 + C28347 * C3136 +
            C28358 * C4722 + C28523 + C28523 + C28348 * C4728) *
               C153454 * C153626 * C153527 * C153909 -
           (C28358 * C3128 + C28366 + C28366 + C28348 * C3136 + C28356 * C1318 +
            C28367 + C28367 + C28347 * C1328 + C28354 * C331 + C28368 + C28368 +
            C28346 * C355 + C28352 * C328 + C28369 + C28369 + C28345 * C352 +
            C28350 * C137 + C28370 + C28370 + C28344 * C153) *
               C153454 * C153626 * C153527 * C153908 -
           (C28358 * C28503 + C28524 + C28524 + C28348 * C28507 +
            C28356 * C4722 + C28525 + C28525 + C28347 * C4728 + C28354 * C3128 +
            C28526 + C28526 + C28346 * C3136 + C28352 * C1318 + C28527 +
            C28527 + C28345 * C1328 + C28350 * C331 + C28528 + C28528 +
            C28344 * C355) *
               C153454 * C153626 * C153527 * C1601) *
              C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
             C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 + C24119 +
             C153887 * C354) *
                C153454 * C153926 +
            (C31259 + C31260 + C31261) * C153454 * C153915 + C31273 * C153890) *
               C153527 * C153908 -
           (C32662 * C153890 + (C32047 + C32046 + C32045) * C153454 * C153915 +
            (C24114 * C1319 + C24435 + C24435 + C153887 * C1329 +
             C24112 * C330 + C24436 + C24436 + C24105 * C354 + C24110 * C329 +
             C24437 + C24437 + C24104 * C353) *
                C153454 * C153926) *
               C153527 * C153909 +
           ((C24110 * C330 + C24438 + C24438 + C24104 * C354 + C24112 * C1319 +
             C24439 + C24439 + C24105 * C1329 + C24114 * C3127 + C24440 +
             C24440 + C153887 * C3135) *
                C153454 * C153926 +
            (C24110 * C1892 + C26945 + C26945 + C24104 * C1902 +
             C24112 * C4303 + C26944 + C26944 + C24105 * C4311 +
             C24114 * C5703 + C26943 + C26943 + C153887 * C5709) *
                C153454 * C153915 +
            (C24110 * C3441 + C30972 + C30972 + C24104 * C3449 +
             C24112 * C4959 + C30973 + C30973 + C24105 * C4965 +
             C24114 * C28650 + C30974 + C30974 + C153887 * C28654) *
                C153454 * C153890) *
               C153527 * C1601) *
              C153829 +
          (((C24494 + C24493 + C24492) * C153454 * C153926 +
            (C25605 + C25606 + C25607) * C153454 * C153915 +
            (C32051 + C32052 + C32053) * C153454 * C153890) *
               C153527 * C153909 -
           (C31258 * C153890 + (C24794 + C24795 + C24796) * C153454 * C153915 +
            (C24185 + C24184 + C24183) * C153454 * C153926) *
               C153527 * C153908 -
           ((C24114 * C28651 + C30975 + C30975 + C153887 * C28655 +
             C24112 * C4958 + C30976 + C30976 + C24105 * C4964 +
             C24110 * C3442 + C30977 + C30977 + C24104 * C3450) *
                C153454 * C153890 +
            (C24114 * C5702 + C26940 + C26940 + C153887 * C5708 +
             C24112 * C4304 + C26941 + C26941 + C24105 * C4312 +
             C24110 * C1891 + C26942 + C26942 + C24104 * C1901) *
                C153454 * C153915 +
            (C24497 + C24496 + C24495) * C153454 * C153926) *
               C153527 * C1601) *
              C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C153922 +
             C193 * C153903 + C194 * C153874) *
                C47609 +
            (C48049 + C48050 + C48051) * C47610 + C48069 * C153890) *
               C153527 * C153908 -
           (C49401 * C153890 + (C48805 + C48804 + C48803) * C47610 +
            (C408 * C153874 + C409 * C153903 +
             (C134 * C329 + C374 + C374 + C153608 * C353) * C153922) *
                C47609) *
               C153527 * C153909 +
           (((C134 * C330 + C375 + C375 + C153608 * C354) * C153922 +
             C410 * C153903 + C411 * C153874) *
                C47609 +
            (C9879 * C153922 + C7452 * C153903 + C7453 * C153874) * C47610 +
            (C9880 * C153922 + C7454 * C153903 + C7455 * C153874) * C153890) *
               C153527 * C1601) *
              C153829 +
          (((C409 * C153922 + C408 * C153903 + C407 * C153874) * C47609 +
            (C48809 + C48810 + C48811) * C47610 +
            (C48812 + C48813 + C48814) * C153890) *
               C153527 * C153909 -
           (C48070 * C153890 + (C48060 + C48059 + C48058) * C47610 +
            (C195 * C153874 + C194 * C153903 + C193 * C153922) * C47609) *
               C153527 * C153908 -
           (((C134 * C3444 + C7437 + C7437 + C153608 * C3452) * C153874 +
             C7455 * C153903 + C7454 * C153922) *
                C153890 +
            (C15373 * C153874 + C7453 * C153903 + C7452 * C153922) * C47610 +
            (C412 * C153874 + C411 * C153903 + C410 * C153922) * C47609) *
               C153527 * C1601) *
              C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
             C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
             C153887 * C354) *
                C153454 * C47609 +
            (C52092 + C52093 + C52094) * C153454 * C47610 + C52106 * C153890) *
               C153527 * C153908 -
           (C53489 * C153890 + (C52877 + C52876 + C52875) * C153454 * C47610 +
            (C2825 * C1319 + C3158 + C3158 + C153887 * C1329 + C2823 * C330 +
             C3159 + C3159 + C153913 * C354 + C2821 * C329 + C3160 + C3160 +
             C153925 * C353) *
                C153454 * C47609) *
               C153527 * C153909 +
           ((C2821 * C330 + C3161 + C3161 + C153925 * C354 + C2823 * C1319 +
             C3162 + C3162 + C153913 * C1329 + C2825 * C3127 + C3163 + C3163 +
             C153887 * C3135) *
                C153454 * C47609 +
            (C2821 * C1892 + C5719 + C5719 + C153925 * C1902 + C2823 * C4303 +
             C5718 + C5718 + C153913 * C4311 + C2825 * C5703 + C5717 + C5717 +
             C153887 * C5709) *
                C153454 * C47610 +
            (C2821 * C3441 + C51811 + C51811 + C153925 * C3449 + C2823 * C4959 +
             C51812 + C51812 + C153913 * C4965 + C2825 * C28650 + C51813 +
             C51813 + C153887 * C28654) *
                C153454 * C153890) *
               C153527 * C1601) *
              C153829 +
          (((C3217 + C3216 + C3215) * C153454 * C47609 +
            (C4352 + C4353 + C4354) * C153454 * C47610 +
            (C52881 + C52882 + C52883) * C153454 * C153890) *
               C153527 * C153909 -
           (C52091 * C153890 + (C3529 + C3530 + C3531) * C153454 * C47610 +
            (C2896 + C2895 + C2894) * C153454 * C47609) *
               C153527 * C153908 -
           ((C2825 * C28651 + C51814 + C51814 + C153887 * C28655 +
             C2823 * C4958 + C51815 + C51815 + C153913 * C4964 + C2821 * C3442 +
             C51816 + C51816 + C153925 * C3450) *
                C153454 * C153890 +
            (C2825 * C5702 + C5714 + C5714 + C153887 * C5708 + C2823 * C4304 +
             C5715 + C5715 + C153913 * C4312 + C2821 * C1891 + C5716 + C5716 +
             C153925 * C1901) *
                C153454 * C47610 +
            (C3220 + C3219 + C3218) * C153454 * C47609) *
               C153527 * C1601) *
              C153498)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153608 * C152) * C153454 * C55662 +
            C55920 * C55663 + C55921 * C55664 + C55922 * C55665 +
            C55923 * C55666) *
               C153527 * C153908 -
           (C56373 * C55666 + C56357 * C55665 + C56356 * C55664 +
            C56355 * C55663 +
            (C134 * C329 + C374 + C374 + C153608 * C353) * C153454 * C55662) *
               C153527 * C153909 +
           ((C134 * C330 + C375 + C375 + C153608 * C354) * C153454 * C55662 +
            C9879 * C153454 * C55663 + C9880 * C153454 * C55664 +
            (C134 * C6305 + C9874 + C9874 + C153608 * C6317) * C153454 *
                C55665 +
            (C134 * C31195 + C55790 + C55790 + C153608 * C31199) * C153454 *
                C55666) *
               C153527 * C1601) *
              C153829 +
          ((C409 * C153454 * C55662 + C56361 * C55663 + C56362 * C55664 +
            C56363 * C55665 + C56374 * C55666) *
               C153527 * C153909 -
           (C55930 * C55666 + C55929 * C55665 + C55928 * C55664 +
            C55927 * C55663 + C193 * C153454 * C55662) *
               C153527 * C153908 -
           ((C134 * C31196 + C55791 + C55791 + C153608 * C31200) * C153454 *
                C55666 +
            (C134 * C6303 + C9873 + C9873 + C153608 * C6315) * C153454 *
                C55665 +
            C7454 * C153454 * C55664 + C7452 * C153454 * C55663 +
            C410 * C153454 * C55662) *
               C153527 * C1601) *
              C153498)) /
            (p * q * std::sqrt(p + q));
    d2ee[186] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C136 + C161 + C161 + C153608 * C152) * C122 +
                C193 * C123 + C194 * C124 + C195 * C125 + C196 * C126) *
                   C153626 * C153838 -
               (C619 * C126 + C620 * C125 + C621 * C124 + C622 * C123 +
                (C134 * C542 + C587 + C587 + C153608 * C566) * C122) *
                   C153626 * C153591) *
                  C153908 +
              (((C134 * C1057 + C1076 + C1076 + C153608 * C1069) * C122 +
                C1098 * C123 + C1099 * C124 + C1100 * C125 + C1101 * C126) *
                   C153626 * C153591 -
               (C406 * C126 + C407 * C125 + C408 * C124 + C409 * C123 +
                (C134 * C329 + C374 + C374 + C153608 * C353) * C122) *
                   C153626 * C153838) *
                  C153909 +
              (((C134 * C330 + C375 + C375 + C153608 * C354) * C122 +
                C410 * C123 + C411 * C124 + C412 * C125 + C413 * C126) *
                   C153626 * C153838 -
               ((C134 * C1888 + C1904 + C1904 + C153608 * C1898) * C126 +
                (C134 * C1889 + C1905 + C1905 + C153608 * C1899) * C125 +
                (C134 * C1890 + C1906 + C1906 + C153608 * C1900) * C124 +
                (C134 * C1891 + C1907 + C1907 + C153608 * C1901) * C123 +
                (C134 * C1892 + C1908 + C1908 + C153608 * C1902) * C122) *
                   C153626 * C153591) *
                  C1601) *
             C153492 +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
                 C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
                 C153887 * C354) *
                    C2818 +
                (C2894 + C2895 + C2896) * C2819 + C2908 * C153874) *
                   C153626 * C153838 -
               (C4004 * C153874 + (C3529 + C3530 + C3531) * C2819 +
                (C2825 * C1892 + C3472 + C3472 + C153887 * C1902 +
                 C2823 * C1057 + C3473 + C3473 + C153913 * C1069 +
                 C2821 * C542 + C3474 + C3474 + C153925 * C566) *
                    C2818) *
                   C153626 * C153591) *
                  C153908 +
              (((C2821 * C1057 + C4316 + C4316 + C153925 * C1069 +
                 C2823 * C1892 + C4317 + C4317 + C153913 * C1902 +
                 C2825 * C4303 + C4318 + C4318 + C153887 * C4311) *
                    C2818 +
                (C4352 + C4353 + C4354) * C2819 +
                (C4355 + C4356 + C4357) * C153874) *
                   C153626 * C153591 -
               (C3766 * C153874 + (C3215 + C3216 + C3217) * C2819 +
                (C2825 * C1319 + C3158 + C3158 + C153887 * C1329 +
                 C2823 * C330 + C3159 + C3159 + C153913 * C354 + C2821 * C329 +
                 C3160 + C3160 + C153925 * C353) *
                    C2818) *
                   C153626 * C153838) *
                  C153909 +
              (((C2821 * C330 + C3161 + C3161 + C153925 * C354 + C2823 * C1319 +
                 C3162 + C3162 + C153913 * C1329 + C2825 * C3127 + C3163 +
                 C3163 + C153887 * C3135) *
                    C2818 +
                (C3218 + C3219 + C3220) * C2819 +
                (C3221 + C3222 + C3223) * C153874) *
                   C153626 * C153838 -
               ((C2825 * C5701 + C5711 + C5711 + C153887 * C5707 +
                 C2823 * C4305 + C5712 + C5712 + C153913 * C4313 +
                 C2821 * C1890 + C5713 + C5713 + C153925 * C1900) *
                    C153874 +
                (C2825 * C5702 + C5714 + C5714 + C153887 * C5708 +
                 C2823 * C4304 + C5715 + C5715 + C153913 * C4312 +
                 C2821 * C1891 + C5716 + C5716 + C153925 * C1901) *
                    C2819 +
                (C2825 * C5703 + C5717 + C5717 + C153887 * C5709 +
                 C2823 * C4303 + C5718 + C5718 + C153913 * C4311 +
                 C2821 * C1892 + C5719 + C5719 + C153925 * C1902) *
                    C2818) *
                   C153626 * C153591) *
                  C1601) *
             C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C2818 +
             C193 * C2819 + C194 * C153874) *
                C153926 +
            (C7742 + C7688 + C7689) * C153915 + C7751 * C153890) *
               C153838 -
           ((C7744 + C7745 + C7746) * C153890 +
            (C7693 + C7692 + C7743) * C153915 +
            (C7689 + C7688 + C7742) * C153926) *
               C153591) *
              C153908 +
          (((C8526 + C8494 + C8495) * C153926 +
            (C8527 + C8498 + C8499) * C153915 +
            (C9137 + C9127 + C9128) * C153890) *
               C153591 -
           (C9134 * C153890 + (C8495 + C8494 + C8526) * C153915 +
            (C408 * C153874 + C409 * C2819 +
             (C134 * C329 + C374 + C374 + C153608 * C353) * C2818) *
                C153926) *
               C153838) *
              C153909 +
          ((((C134 * C330 + C375 + C375 + C153608 * C354) * C2818 +
             C410 * C2819 + C411 * C153874) *
                C153926 +
            (C9881 + C9866 + C9867) * C153915 +
            (C9882 + C9870 + C9871) * C153890) *
               C153838 -
           (((C134 * C6301 + C9872 + C9872 + C153608 * C6313) * C153874 +
             (C134 * C6303 + C9873 + C9873 + C153608 * C6315) * C2819 +
             (C134 * C6305 + C9874 + C9874 + C153608 * C6317) * C2818) *
                C153890 +
            (C9871 + C9870 + C9882) * C153915 +
            (C9867 + C9866 + C9881) * C153926) *
               C153591) *
              C1601) *
         C153492) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
             C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 + C24119 +
             C153887 * C354) *
                C153922 +
            (C24183 + C24184 + C24185) * C153903 + C24197 * C153874) *
               C153626 * C153838 -
           (C25269 * C153874 + (C24794 + C24795 + C24796) * C153903 +
            (C24114 * C1892 + C24737 + C24737 + C153887 * C1902 +
             C24112 * C1057 + C24738 + C24738 + C24105 * C1069 + C24110 * C542 +
             C24739 + C24739 + C24104 * C566) *
                C153922) *
               C153626 * C153591) *
              C153908 +
          (((C24110 * C1057 + C25569 + C25569 + C24104 * C1069 +
             C24112 * C1892 + C25570 + C25570 + C24105 * C1902 +
             C24114 * C4303 + C25571 + C25571 + C153887 * C4311) *
                C153922 +
            (C25605 + C25606 + C25607) * C153903 +
            (C25608 + C25609 + C25610) * C153874) *
               C153626 * C153591 -
           (C25031 * C153874 + (C24492 + C24493 + C24494) * C153903 +
            (C24114 * C1319 + C24435 + C24435 + C153887 * C1329 +
             C24112 * C330 + C24436 + C24436 + C24105 * C354 + C24110 * C329 +
             C24437 + C24437 + C24104 * C353) *
                C153922) *
               C153626 * C153838) *
              C153909 +
          (((C24110 * C330 + C24438 + C24438 + C24104 * C354 + C24112 * C1319 +
             C24439 + C24439 + C24105 * C1329 + C24114 * C3127 + C24440 +
             C24440 + C153887 * C3135) *
                C153922 +
            (C24495 + C24496 + C24497) * C153903 +
            (C24498 + C24499 + C24500) * C153874) *
               C153626 * C153838 -
           ((C24114 * C5701 + C26937 + C26937 + C153887 * C5707 +
             C24112 * C4305 + C26938 + C26938 + C24105 * C4313 +
             C24110 * C1890 + C26939 + C26939 + C24104 * C1900) *
                C153874 +
            (C24114 * C5702 + C26940 + C26940 + C153887 * C5708 +
             C24112 * C4304 + C26941 + C26941 + C24105 * C4312 +
             C24110 * C1891 + C26942 + C26942 + C24104 * C1901) *
                C153903 +
            (C24114 * C5703 + C26943 + C26943 + C153887 * C5709 +
             C24112 * C4303 + C26944 + C26944 + C24105 * C4311 +
             C24110 * C1892 + C26945 + C26945 + C24104 * C1902) *
                C153922) *
               C153626 * C153591) *
              C1601) *
         C153492) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C28350 * C136 + C28361 + C28361 + C28344 * C152 + C28352 * C329 +
            C28362 + C28362 + C28345 * C353 + C28354 * C330 + C28363 + C28363 +
            C28346 * C354 + C28356 * C1319 + C28364 + C28364 + C28347 * C1329 +
            C28358 * C3127 + C28365 + C28365 + C28348 * C3135) *
               C153454 * C153626 * C153838 -
           (C28358 * C5703 + C28657 + C28657 + C28348 * C5709 + C28356 * C4303 +
            C28658 + C28658 + C28347 * C4311 + C28354 * C1892 + C28659 +
            C28659 + C28346 * C1902 + C28352 * C1057 + C28660 + C28660 +
            C28345 * C1069 + C28350 * C542 + C28661 + C28661 + C28344 * C566) *
               C153454 * C153626 * C153591) *
              C153908 +
          ((C28350 * C1057 + C29099 + C29099 + C28344 * C1069 + C28352 * C1892 +
            C29100 + C29100 + C28345 * C1902 + C28354 * C4303 + C29101 +
            C29101 + C28346 * C4311 + C28356 * C5703 + C29102 + C29102 +
            C28347 * C5709 + C28358 * C29092 + C29103 + C29103 +
            C28348 * C29096) *
               C153454 * C153626 * C153591 -
           (C28358 * C4723 + C28509 + C28509 + C28348 * C4729 + C28356 * C3127 +
            C28510 + C28510 + C28347 * C3135 + C28354 * C1319 + C28511 +
            C28511 + C28346 * C1329 + C28352 * C330 + C28512 + C28512 +
            C28345 * C354 + C28350 * C329 + C28513 + C28513 + C28344 * C353) *
               C153454 * C153626 * C153838) *
              C153909 +
          ((C28350 * C330 + C28514 + C28514 + C28344 * C354 + C28352 * C1319 +
            C28515 + C28515 + C28345 * C1329 + C28354 * C3127 + C28516 +
            C28516 + C28346 * C3135 + C28356 * C4723 + C28517 + C28517 +
            C28347 * C4729 + C28358 * C28502 + C28518 + C28518 +
            C28348 * C28506) *
               C153454 * C153626 * C153838 -
           (C28358 * C29856 + C29860 + C29860 + C28348 * C29858 +
            C28356 * C29092 + C29861 + C29861 + C28347 * C29096 +
            C28354 * C5703 + C29862 + C29862 + C28346 * C5709 + C28352 * C4303 +
            C29863 + C29863 + C28345 * C4311 + C28350 * C1892 + C29864 +
            C29864 + C28344 * C1902) *
               C153454 * C153626 * C153591) *
              C1601) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
             C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 + C24119 +
             C153887 * C354) *
                C153454 * C153926 +
            (C31259 + C31260 + C31261) * C153454 * C153915 + C31273 * C153890) *
               C153838 -
           ((C31265 + C31266 + C31267) * C153454 * C153890 +
            (C31264 + C31263 + C31262) * C153454 * C153915 +
            (C31261 + C31260 + C31259) * C153454 * C153926) *
               C153591) *
              C153908 +
          (((C32045 + C32046 + C32047) * C153454 * C153926 +
            (C32048 + C32049 + C32050) * C153454 * C153915 +
            (C32663 + C32664 + C32665) * C153454 * C153890) *
               C153591 -
           (C32662 * C153890 + (C32047 + C32046 + C32045) * C153454 * C153915 +
            (C24114 * C1319 + C24435 + C24435 + C153887 * C1329 +
             C24112 * C330 + C24436 + C24436 + C24105 * C354 + C24110 * C329 +
             C24437 + C24437 + C24104 * C353) *
                C153454 * C153926) *
               C153838) *
              C153909 +
          (((C24110 * C330 + C24438 + C24438 + C24104 * C354 + C24112 * C1319 +
             C24439 + C24439 + C24105 * C1329 + C24114 * C3127 + C24440 +
             C24440 + C153887 * C3135) *
                C153454 * C153926 +
            (C33419 + C33420 + C33421) * C153454 * C153915 +
            (C33422 + C33423 + C33424) * C153454 * C153890) *
               C153838 -
           ((C24114 * C30190 + C33404 + C33404 + C153887 * C30194 +
             C24112 * C30191 + C33405 + C33405 + C24105 * C30195 +
             C24110 * C6305 + C33406 + C33406 + C24104 * C6317) *
                C153454 * C153890 +
            (C33424 + C33423 + C33422) * C153454 * C153915 +
            (C33421 + C33420 + C33419) * C153454 * C153926) *
               C153591) *
              C1601) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C153922 +
             C193 * C153903 + C194 * C153874) *
                C47609 +
            (C48049 + C48050 + C48051) * C47610 + C48069 * C153890) *
               C153838 -
           ((C48055 + C48056 + C48057) * C153890 +
            (C48054 + C48053 + C48052) * C47610 +
            (C48051 + C48050 + C48049) * C47609) *
               C153591) *
              C153908 +
          (((C48803 + C48804 + C48805) * C47609 +
            (C48806 + C48807 + C48808) * C47610 +
            (C49397 + C49398 + C49399) * C153890) *
               C153591 -
           (C49401 * C153890 + (C48805 + C48804 + C48803) * C47610 +
            (C408 * C153874 + C409 * C153903 +
             (C134 * C329 + C374 + C374 + C153608 * C353) * C153922) *
                C47609) *
               C153838) *
              C153909 +
          ((((C134 * C330 + C375 + C375 + C153608 * C354) * C153922 +
             C410 * C153903 + C411 * C153874) *
                C47609 +
            (C50128 + C50129 + C50130) * C47610 +
            (C50131 + C50132 + C50133) * C153890) *
               C153838 -
           (((C134 * C6301 + C9872 + C9872 + C153608 * C6313) * C153874 +
             (C134 * C6303 + C9873 + C9873 + C153608 * C6315) * C153903 +
             (C134 * C6305 + C9874 + C9874 + C153608 * C6317) * C153922) *
                C153890 +
            (C50133 + C50132 + C50131) * C47610 +
            (C50130 + C50129 + C50128) * C47609) *
               C153591) *
              C1601) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
             C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
             C153887 * C354) *
                C153454 * C47609 +
            (C52092 + C52093 + C52094) * C153454 * C47610 + C52106 * C153890) *
               C153838 -
           ((C52098 + C52099 + C52100) * C153454 * C153890 +
            (C52097 + C52096 + C52095) * C153454 * C47610 +
            (C52094 + C52093 + C52092) * C153454 * C47609) *
               C153591) *
              C153908 +
          (((C52875 + C52876 + C52877) * C153454 * C47609 +
            (C52878 + C52879 + C52880) * C153454 * C47610 +
            (C53490 + C53491 + C53492) * C153454 * C153890) *
               C153591 -
           (C53489 * C153890 + (C52877 + C52876 + C52875) * C153454 * C47610 +
            (C2825 * C1319 + C3158 + C3158 + C153887 * C1329 + C2823 * C330 +
             C3159 + C3159 + C153913 * C354 + C2821 * C329 + C3160 + C3160 +
             C153925 * C353) *
                C153454 * C47609) *
               C153838) *
              C153909 +
          (((C2821 * C330 + C3161 + C3161 + C153925 * C354 + C2823 * C1319 +
             C3162 + C3162 + C153913 * C1329 + C2825 * C3127 + C3163 + C3163 +
             C153887 * C3135) *
                C153454 * C47609 +
            (C54246 + C54247 + C54248) * C153454 * C47610 +
            (C54249 + C54250 + C54251) * C153454 * C153890) *
               C153838 -
           ((C2825 * C30190 + C54231 + C54231 + C153887 * C30194 +
             C2823 * C30191 + C54232 + C54232 + C153913 * C30195 +
             C2821 * C6305 + C54233 + C54233 + C153925 * C6317) *
                C153454 * C153890 +
            (C54251 + C54250 + C54249) * C153454 * C47610 +
            (C54248 + C54247 + C54246) * C153454 * C47609) *
               C153591) *
              C1601) *
         C153492) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153608 * C152) * C153454 * C55662 +
            C55920 * C55663 + C55921 * C55664 + C55922 * C55665 +
            C55923 * C55666) *
               C153838 -
           (C55940 * C55666 + C55923 * C55665 + C55922 * C55664 +
            C55921 * C55663 + C55920 * C55662) *
               C153591) *
              C153908 +
          ((C56355 * C55662 + C56356 * C55663 + C56357 * C55664 +
            C56373 * C55665 + C56712 * C55666) *
               C153591 -
           (C56373 * C55666 + C56357 * C55665 + C56356 * C55664 +
            C56355 * C55663 +
            (C134 * C329 + C374 + C374 + C153608 * C353) * C153454 * C55662) *
               C153838) *
              C153909 +
          (((C134 * C330 + C375 + C375 + C153608 * C354) * C153454 * C55662 +
            C57119 * C55663 + C57120 * C55664 + C57132 * C55665 +
            C57133 * C55666) *
               C153838 -
           ((C134 * C34006 + C57125 + C57125 + C153608 * C34010) * C153454 *
                C55666 +
            C57133 * C55665 + C57132 * C55664 + C57120 * C55663 +
            C57119 * C55662) *
               C153591) *
              C1601) *
         C153492) /
            (p * q * std::sqrt(p + q));
    d2ee[187] +=
        (-0.25 * std::pow(Pi, 2.5) *
             ((((C134 * C136 + C161 + C161 + C153608 * C152) * C122 +
                C193 * C123 + C194 * C124 + C195 * C125 + C196 * C126) *
                   C153626 * C153527 * C1223 -
               (C406 * C126 + C407 * C125 + C408 * C124 + C409 * C123 +
                (C134 * C329 + C374 + C374 + C153608 * C353) * C122) *
                   C153626 * C153527 * C153563) *
                  C1225 +
              ((C409 * C122 + C408 * C123 + C407 * C124 + C406 * C125 +
                C762 * C126) *
                   C153626 * C153527 * C153563 -
               (C197 * C126 + C196 * C125 + C195 * C124 + C194 * C123 +
                C193 * C122) *
                   C153626 * C153527 * C1223) *
                  C1226 +
              ((C194 * C122 + C195 * C123 + C196 * C124 + C197 * C125 +
                C198 * C126) *
                   C153626 * C153527 * C1223 -
               ((C134 * C753 + C759 + C759 + C153608 * C755) * C126 +
                C762 * C125 + C406 * C124 + C407 * C123 + C408 * C122) *
                   C153626 * C153527 * C153563) *
                  C1227) -
         0.25 * std::pow(Pi, 2.5) *
             (((C134 * C136 + C161 + C161 + C153608 * C152) * C122 +
               C193 * C123 + C194 * C124 + C195 * C125 + C196 * C126) *
                  C153626 * C153527 * C1310 -
              (C406 * C126 + C407 * C125 + C408 * C124 + C409 * C123 +
               (C134 * C329 + C374 + C374 + C153608 * C353) * C122) *
                  C153626 * C153527 * C1311 +
              ((C134 * C330 + C375 + C375 + C153608 * C354) * C122 +
               C410 * C123 + C411 * C124 + C412 * C125 + C413 * C126) *
                  C153626 * C153527 * C1312 -
              ((C134 * C1315 + C1331 + C1331 + C153608 * C1325) * C126 +
               (C134 * C1316 + C1332 + C1332 + C153608 * C1326) * C125 +
               (C134 * C1317 + C1333 + C1333 + C153608 * C1327) * C124 +
               (C134 * C1318 + C1334 + C1334 + C153608 * C1328) * C123 +
               (C134 * C1319 + C1335 + C1335 + C153608 * C1329) * C122) *
                  C153626 * C153527 * C1313) *
             C153492 +
         0.5 * std::pow(Pi, 2.5) *
             ((((C134 * C136 + C161 + C161 + C153608 * C152) * C122 +
                C193 * C123 + C194 * C124 + C195 * C125 + C196 * C126) *
                   C153626 * C535 -
               (C619 * C126 + C620 * C125 + C621 * C124 + C622 * C123 +
                (C134 * C542 + C587 + C587 + C153608 * C566) * C122) *
                   C153626 * C536 +
               ((C134 * C543 + C588 + C588 + C153608 * C567) * C122 +
                C623 * C123 + C624 * C124 + C625 * C125 + C626 * C126) *
                   C153626 * C537) *
                  C1223 +
              (((C134 * C1057 + C1076 + C1076 + C153608 * C1069) * C122 +
                C1098 * C123 + C1099 * C124 + C1100 * C125 + C1101 * C126) *
                   C153626 * C536 -
               (C406 * C126 + C407 * C125 + C408 * C124 + C409 * C123 +
                (C134 * C329 + C374 + C374 + C153608 * C353) * C122) *
                   C153626 * C535 -
               ((C134 * C1457 + C1473 + C1473 + C153608 * C1467) * C126 +
                (C134 * C1458 + C1474 + C1474 + C153608 * C1468) * C125 +
                (C134 * C1459 + C1475 + C1475 + C153608 * C1469) * C124 +
                (C134 * C1460 + C1476 + C1476 + C153608 * C1470) * C123 +
                (C134 * C1461 + C1477 + C1477 + C153608 * C1471) * C122) *
                   C153626 * C537) *
                  C153563) *
             C153492 -
         0.25 * std::pow(Pi, 2.5) *
             ((((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
                 C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
                 C153887 * C354) *
                    C2818 +
                (C2894 + C2895 + C2896) * C2819 + C2908 * C153874) *
                   C153626 * C153527 * C1223 -
               (C3766 * C153874 + (C3215 + C3216 + C3217) * C2819 +
                (C2825 * C1319 + C3158 + C3158 + C153887 * C1329 +
                 C2823 * C330 + C3159 + C3159 + C153913 * C354 + C2821 * C329 +
                 C3160 + C3160 + C153925 * C353) *
                    C2818) *
                   C153626 * C153527 * C153563) *
                  C1225 +
              (((C3217 + C3216 + C3215) * C2818 +
                (C3214 + C3213 + C3212) * C2819 +
                (C3773 + C3774 + C3775) * C153874) *
                   C153626 * C153527 * C153563 -
               (C2909 * C153874 + (C2899 + C2898 + C2897) * C2819 +
                (C2896 + C2895 + C2894) * C2818) *
                   C153626 * C153527 * C1223) *
                  C1226 +
              ((C2908 * C2818 + (C2902 + C2901 + C2900) * C2819 +
                (C2903 + C2904 + C2905) * C153874) *
                   C153626 * C153527 * C1223 -
               ((C2825 * C1315 + C3763 + C3763 + C153887 * C1325 +
                 C2823 * C334 + C3764 + C3764 + C153913 * C358 + C2821 * C325 +
                 C3765 + C3765 + C153925 * C349) *
                    C153874 +
                (C3775 + C3774 + C3773) * C2819 + C3766 * C2818) *
                   C153626 * C153527 * C153563) *
                  C1227) -
         0.25 * std::pow(Pi, 2.5) *
             (((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
                C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
                C153887 * C354) *
                   C2818 +
               (C2894 + C2895 + C2896) * C2819 + C2908 * C153874) *
                  C153626 * C153527 * C1310 -
              (C3766 * C153874 + (C3215 + C3216 + C3217) * C2819 +
               (C2825 * C1319 + C3158 + C3158 + C153887 * C1329 + C2823 * C330 +
                C3159 + C3159 + C153913 * C354 + C2821 * C329 + C3160 + C3160 +
                C153925 * C353) *
                   C2818) *
                  C153626 * C153527 * C1311 +
              ((C2821 * C330 + C3161 + C3161 + C153925 * C354 + C2823 * C1319 +
                C3162 + C3162 + C153913 * C1329 + C2825 * C3127 + C3163 +
                C3163 + C153887 * C3135) *
                   C2818 +
               (C3218 + C3219 + C3220) * C2819 +
               (C3221 + C3222 + C3223) * C153874) *
                  C153626 * C153527 * C1312 -
              ((C2825 * C4721 + C4731 + C4731 + C153887 * C4727 +
                C2823 * C3129 + C4732 + C4732 + C153913 * C3137 +
                C2821 * C1317 + C4733 + C4733 + C153925 * C1327) *
                   C153874 +
               (C2825 * C4722 + C4734 + C4734 + C153887 * C4728 +
                C2823 * C3128 + C4735 + C4735 + C153913 * C3136 +
                C2821 * C1318 + C4736 + C4736 + C153925 * C1328) *
                   C2819 +
               (C2825 * C4723 + C4737 + C4737 + C153887 * C4729 +
                C2823 * C3127 + C4738 + C4738 + C153913 * C3135 +
                C2821 * C1319 + C4739 + C4739 + C153925 * C1329) *
                   C2818) *
                  C153626 * C153527 * C1313) *
             C153492 +
         0.5 * std::pow(Pi, 2.5) *
             ((((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
                 C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
                 C153887 * C354) *
                    C2818 +
                (C2894 + C2895 + C2896) * C2819 + C2908 * C153874) *
                   C153626 * C535 -
               (C4004 * C153874 + (C3529 + C3530 + C3531) * C2819 +
                (C2825 * C1892 + C3472 + C3472 + C153887 * C1902 +
                 C2823 * C1057 + C3473 + C3473 + C153913 * C1069 +
                 C2821 * C542 + C3474 + C3474 + C153925 * C566) *
                    C2818) *
                   C153626 * C536 +
               ((C2821 * C543 + C3475 + C3475 + C153925 * C567 + C2823 * C1461 +
                 C3476 + C3476 + C153913 * C1471 + C2825 * C3441 + C3477 +
                 C3477 + C153887 * C3449) *
                    C2818 +
                (C3532 + C3533 + C3534) * C2819 +
                (C3535 + C3536 + C3537) * C153874) *
                   C153626 * C537) *
                  C1223 +
              (((C2821 * C1057 + C4316 + C4316 + C153925 * C1069 +
                 C2823 * C1892 + C4317 + C4317 + C153913 * C1902 +
                 C2825 * C4303 + C4318 + C4318 + C153887 * C4311) *
                    C2818 +
                (C4352 + C4353 + C4354) * C2819 +
                (C4355 + C4356 + C4357) * C153874) *
                   C153626 * C536 -
               (C3766 * C153874 + (C3215 + C3216 + C3217) * C2819 +
                (C2825 * C1319 + C3158 + C3158 + C153887 * C1329 +
                 C2823 * C330 + C3159 + C3159 + C153913 * C354 + C2821 * C329 +
                 C3160 + C3160 + C153925 * C353) *
                    C2818) *
                   C153626 * C535 -
               ((C2825 * C4957 + C4967 + C4967 + C153887 * C4963 +
                 C2823 * C3443 + C4968 + C4968 + C153913 * C3451 +
                 C2821 * C1459 + C4969 + C4969 + C153925 * C1469) *
                    C153874 +
                (C2825 * C4958 + C4970 + C4970 + C153887 * C4964 +
                 C2823 * C3442 + C4971 + C4971 + C153913 * C3450 +
                 C2821 * C1460 + C4972 + C4972 + C153925 * C1470) *
                    C2819 +
                (C2825 * C4959 + C4973 + C4973 + C153887 * C4965 +
                 C2823 * C3441 + C4974 + C4974 + C153913 * C3449 +
                 C2821 * C1461 + C4975 + C4975 + C153925 * C1471) *
                    C2818) *
                   C153626 * C537) *
                  C153563) *
             C153492 +
         0.5 * std::pow(Pi, 2.5) *
             (((((C134 * C136 + C161 + C161 + C153608 * C152) * C2818 +
                 C193 * C2819 + C194 * C153874) *
                    C153926 +
                (C7742 + C7688 + C7689) * C153915 + C7751 * C153890) *
                   C153527 * C1223 -
               ((C8499 + C8498 + C8527) * C153890 +
                (C8495 + C8494 + C8526) * C153915 +
                (C408 * C153874 + C409 * C2819 +
                 (C134 * C329 + C374 + C374 + C153608 * C353) * C2818) *
                    C153926) *
                   C153527 * C153563) *
                  C1225 +
              (((C409 * C2818 + C408 * C2819 + C407 * C153874) * C153926 +
                (C8507 + C8508 + C8509) * C153915 +
                (C8510 + C8511 + C8512) * C153890) *
                   C153527 * C153563 -
               (C7733 * C153890 + (C7709 + C7708 + C7707) * C153915 +
                (C195 * C153874 + C194 * C2819 + C193 * C2818) * C153926) *
                   C153527 * C1223) *
                  C1226 +
              (((C194 * C2818 + C195 * C2819 + C196 * C153874) * C153926 +
                (C8193 + C8194 + C8195) * C153915 +
                (C8196 + C8197 + C8198) * C153890) *
                   C153527 * C1223 -
               (((C134 * C1457 + C1473 + C1473 + C153608 * C1467) * C153874 +
                 C7974 * C2819 + C7450 * C2818) *
                    C153890 +
                (C1101 * C153874 + C1100 * C2819 + C1099 * C2818) * C153915 +
                (C406 * C153874 + C407 * C2819 + C408 * C2818) * C153926) *
                   C153527 * C153563) *
                  C1227) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C134 * C136 + C161 + C161 + C153608 * C152) * C2818 +
                C193 * C2819 + C194 * C153874) *
                   C153926 +
               (C7742 + C7688 + C7689) * C153915 + C7751 * C153890) *
                  C153527 * C1310 -
              ((C8499 + C8498 + C8527) * C153890 +
               (C8495 + C8494 + C8526) * C153915 +
               (C408 * C153874 + C409 * C2819 +
                (C134 * C329 + C374 + C374 + C153608 * C353) * C2818) *
                   C153926) *
                  C153527 * C1311 +
              (((C134 * C330 + C375 + C375 + C153608 * C354) * C2818 +
                C410 * C2819 + C411 * C153874) *
                   C153926 +
               ((C134 * C1892 + C1908 + C1908 + C153608 * C1902) * C2818 +
                C7452 * C2819 + C7453 * C153874) *
                   C153915 +
               ((C134 * C3441 + C7430 + C7430 + C153608 * C3449) * C2818 +
                C7454 * C2819 + C7455 * C153874) *
                   C153890) *
                  C153527 * C1312 -
              (((C134 * C4957 + C8892 + C8892 + C153608 * C4963) * C153874 +
                (C134 * C4958 + C8893 + C8893 + C153608 * C4964) * C2819 +
                (C134 * C4959 + C8894 + C8894 + C153608 * C4965) * C2818) *
                   C153890 +
               ((C134 * C4305 + C8895 + C8895 + C153608 * C4313) * C153874 +
                (C134 * C4304 + C8896 + C8896 + C153608 * C4312) * C2819 +
                (C134 * C4303 + C8897 + C8897 + C153608 * C4311) * C2818) *
                   C153915 +
               ((C134 * C1317 + C1333 + C1333 + C153608 * C1327) * C153874 +
                (C134 * C1318 + C1334 + C1334 + C153608 * C1328) * C2819 +
                (C134 * C1319 + C1335 + C1335 + C153608 * C1329) * C2818) *
                   C153926) *
                  C153527 * C1313) *
             C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C2818 +
             C193 * C2819 + C194 * C153874) *
                C153926 +
            (C7742 + C7688 + C7689) * C153915 + C7751 * C153890) *
               C535 -
           ((C7744 + C7745 + C7746) * C153890 +
            (C7693 + C7692 + C7743) * C153915 +
            (C7689 + C7688 + C7742) * C153926) *
               C536 +
           (C7751 * C153926 + (C7746 + C7745 + C7744) * C153915 +
            ((C134 * C7673 + C7700 + C7700 + C153608 * C7681) * C2818 +
             C7739 * C2819 + C7740 * C153874) *
                C153890) *
               C537) *
              C1223 +
          (((C8526 + C8494 + C8495) * C153926 +
            (C8527 + C8498 + C8499) * C153915 +
            (C9137 + C9127 + C9128) * C153890) *
               C536 -
           (C9134 * C153890 + (C8495 + C8494 + C8526) * C153915 +
            (C408 * C153874 + C409 * C2819 +
             (C134 * C329 + C374 + C374 + C153608 * C353) * C2818) *
                C153926) *
               C535 -
           (((C134 * C9115 + C9130 + C9130 + C153608 * C9121) * C153874 +
             (C134 * C9116 + C9131 + C9131 + C153608 * C9122) * C2819 +
             (C134 * C9117 + C9132 + C9132 + C153608 * C9123) * C2818) *
                C153890 +
            (C9128 + C9127 + C9137) * C153915 + C9134 * C153926) *
               C537) *
              C153563) *
         C153492) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         ((((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
             C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 + C24119 +
             C153887 * C354) *
                C153922 +
            (C24183 + C24184 + C24185) * C153903 + C24197 * C153874) *
               C153626 * C153527 * C1223 -
           (C25031 * C153874 + (C24492 + C24493 + C24494) * C153903 +
            (C24114 * C1319 + C24435 + C24435 + C153887 * C1329 +
             C24112 * C330 + C24436 + C24436 + C24105 * C354 + C24110 * C329 +
             C24437 + C24437 + C24104 * C353) *
                C153922) *
               C153626 * C153527 * C153563) *
              C1225 +
          (((C24494 + C24493 + C24492) * C153922 +
            (C24491 + C24490 + C24489) * C153903 +
            (C25038 + C25039 + C25040) * C153874) *
               C153626 * C153527 * C153563 -
           (C24198 * C153874 + (C24188 + C24187 + C24186) * C153903 +
            (C24185 + C24184 + C24183) * C153922) *
               C153626 * C153527 * C1223) *
              C1226 +
          ((C24197 * C153922 + (C24191 + C24190 + C24189) * C153903 +
            (C24192 + C24193 + C24194) * C153874) *
               C153626 * C153527 * C1223 -
           ((C24114 * C1315 + C25028 + C25028 + C153887 * C1325 +
             C24112 * C334 + C25029 + C25029 + C24105 * C358 + C24110 * C325 +
             C25030 + C25030 + C24104 * C349) *
                C153874 +
            (C25040 + C25039 + C25038) * C153903 + C25031 * C153922) *
               C153626 * C153527 * C153563) *
              C1227)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         (((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
            C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 + C24119 +
            C153887 * C354) *
               C153922 +
           (C24183 + C24184 + C24185) * C153903 + C24197 * C153874) *
              C153626 * C153527 * C1310 -
          (C25031 * C153874 + (C24492 + C24493 + C24494) * C153903 +
           (C24114 * C1319 + C24435 + C24435 + C153887 * C1329 + C24112 * C330 +
            C24436 + C24436 + C24105 * C354 + C24110 * C329 + C24437 + C24437 +
            C24104 * C353) *
               C153922) *
              C153626 * C153527 * C1311 +
          ((C24110 * C330 + C24438 + C24438 + C24104 * C354 + C24112 * C1319 +
            C24439 + C24439 + C24105 * C1329 + C24114 * C3127 + C24440 +
            C24440 + C153887 * C3135) *
               C153922 +
           (C24495 + C24496 + C24497) * C153903 +
           (C24498 + C24499 + C24500) * C153874) *
              C153626 * C153527 * C1312 -
          ((C24114 * C4721 + C25975 + C25975 + C153887 * C4727 +
            C24112 * C3129 + C25976 + C25976 + C24105 * C3137 + C24110 * C1317 +
            C25977 + C25977 + C24104 * C1327) *
               C153874 +
           (C24114 * C4722 + C25978 + C25978 + C153887 * C4728 +
            C24112 * C3128 + C25979 + C25979 + C24105 * C3136 + C24110 * C1318 +
            C25980 + C25980 + C24104 * C1328) *
               C153903 +
           (C24114 * C4723 + C25981 + C25981 + C153887 * C4729 +
            C24112 * C3127 + C25982 + C25982 + C24105 * C3135 + C24110 * C1319 +
            C25983 + C25983 + C24104 * C1329) *
               C153922) *
              C153626 * C153527 * C1313) *
         C153492) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
             C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 + C24119 +
             C153887 * C354) *
                C153922 +
            (C24183 + C24184 + C24185) * C153903 + C24197 * C153874) *
               C153626 * C535 -
           (C25269 * C153874 + (C24794 + C24795 + C24796) * C153903 +
            (C24114 * C1892 + C24737 + C24737 + C153887 * C1902 +
             C24112 * C1057 + C24738 + C24738 + C24105 * C1069 + C24110 * C542 +
             C24739 + C24739 + C24104 * C566) *
                C153922) *
               C153626 * C536 +
           ((C24110 * C543 + C24740 + C24740 + C24104 * C567 + C24112 * C1461 +
             C24741 + C24741 + C24105 * C1471 + C24114 * C3441 + C24742 +
             C24742 + C153887 * C3449) *
                C153922 +
            (C24797 + C24798 + C24799) * C153903 +
            (C24800 + C24801 + C24802) * C153874) *
               C153626 * C537) *
              C1223 +
          (((C24110 * C1057 + C25569 + C25569 + C24104 * C1069 +
             C24112 * C1892 + C25570 + C25570 + C24105 * C1902 +
             C24114 * C4303 + C25571 + C25571 + C153887 * C4311) *
                C153922 +
            (C25605 + C25606 + C25607) * C153903 +
            (C25608 + C25609 + C25610) * C153874) *
               C153626 * C536 -
           (C25031 * C153874 + (C24492 + C24493 + C24494) * C153903 +
            (C24114 * C1319 + C24435 + C24435 + C153887 * C1329 +
             C24112 * C330 + C24436 + C24436 + C24105 * C354 + C24110 * C329 +
             C24437 + C24437 + C24104 * C353) *
                C153922) *
               C153626 * C535 -
           ((C24114 * C4957 + C26202 + C26202 + C153887 * C4963 +
             C24112 * C3443 + C26203 + C26203 + C24105 * C3451 +
             C24110 * C1459 + C26204 + C26204 + C24104 * C1469) *
                C153874 +
            (C24114 * C4958 + C26205 + C26205 + C153887 * C4964 +
             C24112 * C3442 + C26206 + C26206 + C24105 * C3450 +
             C24110 * C1460 + C26207 + C26207 + C24104 * C1470) *
                C153903 +
            (C24114 * C4959 + C26208 + C26208 + C153887 * C4965 +
             C24112 * C3441 + C26209 + C26209 + C24105 * C3449 +
             C24110 * C1461 + C26210 + C26210 + C24104 * C1471) *
                C153922) *
               C153626 * C537) *
              C153563) *
         C153492) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         (((C28350 * C136 + C28361 + C28361 + C28344 * C152 + C28352 * C329 +
            C28362 + C28362 + C28345 * C353 + C28354 * C330 + C28363 + C28363 +
            C28346 * C354 + C28356 * C1319 + C28364 + C28364 + C28347 * C1329 +
            C28358 * C3127 + C28365 + C28365 + C28348 * C3135) *
               C153454 * C153626 * C153527 * C1223 -
           (C28358 * C4723 + C28509 + C28509 + C28348 * C4729 + C28356 * C3127 +
            C28510 + C28510 + C28347 * C3135 + C28354 * C1319 + C28511 +
            C28511 + C28346 * C1329 + C28352 * C330 + C28512 + C28512 +
            C28345 * C354 + C28350 * C329 + C28513 + C28513 + C28344 * C353) *
               C153454 * C153626 * C153527 * C153563) *
              C1225 +
          ((C28350 * C328 + C28519 + C28519 + C28344 * C352 + C28352 * C331 +
            C28520 + C28520 + C28345 * C355 + C28354 * C1318 + C28521 + C28521 +
            C28346 * C1328 + C28356 * C3128 + C28522 + C28522 + C28347 * C3136 +
            C28358 * C4722 + C28523 + C28523 + C28348 * C4728) *
               C153454 * C153626 * C153527 * C153563 -
           (C28358 * C3128 + C28366 + C28366 + C28348 * C3136 + C28356 * C1318 +
            C28367 + C28367 + C28347 * C1328 + C28354 * C331 + C28368 + C28368 +
            C28346 * C355 + C28352 * C328 + C28369 + C28369 + C28345 * C352 +
            C28350 * C137 + C28370 + C28370 + C28344 * C153) *
               C153454 * C153626 * C153527 * C1223) *
              C1226 +
          ((C28350 * C138 + C28371 + C28371 + C28344 * C154 + C28352 * C327 +
            C28372 + C28372 + C28345 * C351 + C28354 * C332 + C28373 + C28373 +
            C28346 * C356 + C28356 * C1317 + C28374 + C28374 + C28347 * C1327 +
            C28358 * C3129 + C28375 + C28375 + C28348 * C3137) *
               C153454 * C153626 * C153527 * C1223 -
           (C28358 * C4721 + C28799 + C28799 + C28348 * C4727 + C28356 * C3129 +
            C28800 + C28800 + C28347 * C3137 + C28354 * C1317 + C28801 +
            C28801 + C28346 * C1327 + C28352 * C332 + C28802 + C28802 +
            C28345 * C356 + C28350 * C327 + C28803 + C28803 + C28344 * C351) *
               C153454 * C153626 * C153527 * C153563) *
              C1227)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         ((C28350 * C136 + C28361 + C28361 + C28344 * C152 + C28352 * C329 +
           C28362 + C28362 + C28345 * C353 + C28354 * C330 + C28363 + C28363 +
           C28346 * C354 + C28356 * C1319 + C28364 + C28364 + C28347 * C1329 +
           C28358 * C3127 + C28365 + C28365 + C28348 * C3135) *
              C153454 * C153626 * C153527 * C1310 -
          (C28358 * C4723 + C28509 + C28509 + C28348 * C4729 + C28356 * C3127 +
           C28510 + C28510 + C28347 * C3135 + C28354 * C1319 + C28511 + C28511 +
           C28346 * C1329 + C28352 * C330 + C28512 + C28512 + C28345 * C354 +
           C28350 * C329 + C28513 + C28513 + C28344 * C353) *
              C153454 * C153626 * C153527 * C1311 +
          (C28350 * C330 + C28514 + C28514 + C28344 * C354 + C28352 * C1319 +
           C28515 + C28515 + C28345 * C1329 + C28354 * C3127 + C28516 + C28516 +
           C28346 * C3135 + C28356 * C4723 + C28517 + C28517 + C28347 * C4729 +
           C28358 * C28502 + C28518 + C28518 + C28348 * C28506) *
              C153454 * C153626 * C153527 * C1312 -
          (C28358 * C29312 + C29316 + C29316 + C28348 * C29314 +
           C28356 * C28502 + C29317 + C29317 + C28347 * C28506 +
           C28354 * C4723 + C29318 + C29318 + C28346 * C4729 + C28352 * C3127 +
           C29319 + C29319 + C28345 * C3135 + C28350 * C1319 + C29320 + C29320 +
           C28344 * C1329) *
              C153454 * C153626 * C153527 * C1313) *
         C153492) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C28350 * C136 + C28361 + C28361 + C28344 * C152 + C28352 * C329 +
            C28362 + C28362 + C28345 * C353 + C28354 * C330 + C28363 + C28363 +
            C28346 * C354 + C28356 * C1319 + C28364 + C28364 + C28347 * C1329 +
            C28358 * C3127 + C28365 + C28365 + C28348 * C3135) *
               C153454 * C153626 * C535 -
           (C28358 * C5703 + C28657 + C28657 + C28348 * C5709 + C28356 * C4303 +
            C28658 + C28658 + C28347 * C4311 + C28354 * C1892 + C28659 +
            C28659 + C28346 * C1902 + C28352 * C1057 + C28660 + C28660 +
            C28345 * C1069 + C28350 * C542 + C28661 + C28661 + C28344 * C566) *
               C153454 * C153626 * C536 +
           (C28350 * C543 + C28662 + C28662 + C28344 * C567 + C28352 * C1461 +
            C28663 + C28663 + C28345 * C1471 + C28354 * C3441 + C28664 +
            C28664 + C28346 * C3449 + C28356 * C4959 + C28665 + C28665 +
            C28347 * C4965 + C28358 * C28650 + C28666 + C28666 +
            C28348 * C28654) *
               C153454 * C153626 * C537) *
              C1223 +
          ((C28350 * C1057 + C29099 + C29099 + C28344 * C1069 + C28352 * C1892 +
            C29100 + C29100 + C28345 * C1902 + C28354 * C4303 + C29101 +
            C29101 + C28346 * C4311 + C28356 * C5703 + C29102 + C29102 +
            C28347 * C5709 + C28358 * C29092 + C29103 + C29103 +
            C28348 * C29096) *
               C153454 * C153626 * C536 -
           (C28358 * C4723 + C28509 + C28509 + C28348 * C4729 + C28356 * C3127 +
            C28510 + C28510 + C28347 * C3135 + C28354 * C1319 + C28511 +
            C28511 + C28346 * C1329 + C28352 * C330 + C28512 + C28512 +
            C28345 * C354 + C28350 * C329 + C28513 + C28513 + C28344 * C353) *
               C153454 * C153626 * C535 -
           (C28358 * C29442 + C29446 + C29446 + C28348 * C29444 +
            C28356 * C28650 + C29447 + C29447 + C28347 * C28654 +
            C28354 * C4959 + C29448 + C29448 + C28346 * C4965 + C28352 * C3441 +
            C29449 + C29449 + C28345 * C3449 + C28350 * C1461 + C29450 +
            C29450 + C28344 * C1471) *
               C153454 * C153626 * C537) *
              C153563) *
         C153492) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
             C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 + C24119 +
             C153887 * C354) *
                C153454 * C153926 +
            (C31259 + C31260 + C31261) * C153454 * C153915 + C31273 * C153890) *
               C153527 * C1223 -
           ((C32050 + C32049 + C32048) * C153454 * C153890 +
            (C32047 + C32046 + C32045) * C153454 * C153915 +
            (C24114 * C1319 + C24435 + C24435 + C153887 * C1329 +
             C24112 * C330 + C24436 + C24436 + C24105 * C354 + C24110 * C329 +
             C24437 + C24437 + C24104 * C353) *
                C153454 * C153926) *
               C153527 * C153563) *
              C1225 +
          (((C24494 + C24493 + C24492) * C153454 * C153926 +
            (C25605 + C25606 + C25607) * C153454 * C153915 +
            (C32051 + C32052 + C32053) * C153454 * C153890) *
               C153527 * C153563 -
           (C31258 * C153890 + (C24794 + C24795 + C24796) * C153454 * C153915 +
            (C24185 + C24184 + C24183) * C153454 * C153926) *
               C153527 * C1223) *
              C1226 +
          ((C24197 * C153454 * C153926 +
            (C24793 + C24792 + C24791) * C153454 * C153915 +
            (C24800 + C24801 + C24802) * C153454 * C153890) *
               C153527 * C1223 -
           ((C24114 * C4957 + C26202 + C26202 + C153887 * C4963 +
             C24112 * C3443 + C26203 + C26203 + C24105 * C3451 +
             C24110 * C1459 + C26204 + C26204 + C24104 * C1469) *
                C153454 * C153890 +
            (C25610 + C25609 + C25608) * C153454 * C153915 +
            C25031 * C153454 * C153926) *
               C153527 * C153563) *
              C1227)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
            C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 + C24119 +
            C153887 * C354) *
               C153454 * C153926 +
           (C31259 + C31260 + C31261) * C153454 * C153915 + C31273 * C153890) *
              C153527 * C1310 -
          ((C32050 + C32049 + C32048) * C153454 * C153890 +
           (C32047 + C32046 + C32045) * C153454 * C153915 +
           (C24114 * C1319 + C24435 + C24435 + C153887 * C1329 + C24112 * C330 +
            C24436 + C24436 + C24105 * C354 + C24110 * C329 + C24437 + C24437 +
            C24104 * C353) *
               C153454 * C153926) *
              C153527 * C1311 +
          ((C24110 * C330 + C24438 + C24438 + C24104 * C354 + C24112 * C1319 +
            C24439 + C24439 + C24105 * C1329 + C24114 * C3127 + C24440 +
            C24440 + C153887 * C3135) *
               C153454 * C153926 +
           (C24110 * C1892 + C26945 + C26945 + C24104 * C1902 + C24112 * C4303 +
            C26944 + C26944 + C24105 * C4311 + C24114 * C5703 + C26943 +
            C26943 + C153887 * C5709) *
               C153454 * C153915 +
           (C24110 * C3441 + C30972 + C30972 + C24104 * C3449 + C24112 * C4959 +
            C30973 + C30973 + C24105 * C4965 + C24114 * C28650 + C30974 +
            C30974 + C153887 * C28654) *
               C153454 * C153890) *
              C153527 * C1312 -
          ((C24114 * C29442 + C32418 + C32418 + C153887 * C29444 +
            C24112 * C28650 + C32419 + C32419 + C24105 * C28654 +
            C24110 * C4959 + C32420 + C32420 + C24104 * C4965) *
               C153454 * C153890 +
           (C24114 * C29092 + C32421 + C32421 + C153887 * C29096 +
            C24112 * C5703 + C32422 + C32422 + C24105 * C5709 + C24110 * C4303 +
            C32423 + C32423 + C24104 * C4311) *
               C153454 * C153915 +
           (C24114 * C4723 + C25981 + C25981 + C153887 * C4729 +
            C24112 * C3127 + C25982 + C25982 + C24105 * C3135 + C24110 * C1319 +
            C25983 + C25983 + C24104 * C1329) *
               C153454 * C153926) *
              C153527 * C1313) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
             C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 + C24119 +
             C153887 * C354) *
                C153454 * C153926 +
            (C31259 + C31260 + C31261) * C153454 * C153915 + C31273 * C153890) *
               C535 -
           ((C31265 + C31266 + C31267) * C153454 * C153890 +
            (C31264 + C31263 + C31262) * C153454 * C153915 +
            (C31261 + C31260 + C31259) * C153454 * C153926) *
               C536 +
           (C31273 * C153926 + (C31267 + C31266 + C31265) * C153454 * C153915 +
            (C24110 * C7673 + C31220 + C31220 + C24104 * C7681 +
             C24112 * C9117 + C31221 + C31221 + C24105 * C9123 +
             C24114 * C31195 + C31222 + C31222 + C153887 * C31199) *
                C153454 * C153890) *
               C537) *
              C1223 +
          (((C32045 + C32046 + C32047) * C153454 * C153926 +
            (C32048 + C32049 + C32050) * C153454 * C153915 +
            (C32663 + C32664 + C32665) * C153454 * C153890) *
               C536 -
           (C32662 * C153890 + (C32047 + C32046 + C32045) * C153454 * C153915 +
            (C24114 * C1319 + C24435 + C24435 + C153887 * C1329 +
             C24112 * C330 + C24436 + C24436 + C24105 * C354 + C24110 * C329 +
             C24437 + C24437 + C24104 * C353) *
                C153454 * C153926) *
               C535 -
           ((C24114 * C32641 + C32652 + C32652 + C153887 * C32643 +
             C24112 * C31195 + C32653 + C32653 + C24105 * C31199 +
             C24110 * C9117 + C32654 + C32654 + C24104 * C9123) *
                C153454 * C153890 +
            (C32665 + C32664 + C32663) * C153454 * C153915 + C32662 * C153926) *
               C537) *
              C153563) *
         C153492) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C153922 +
             C193 * C153903 + C194 * C153874) *
                C47609 +
            (C48049 + C48050 + C48051) * C47610 + C48069 * C153890) *
               C153527 * C1223 -
           ((C48808 + C48807 + C48806) * C153890 +
            (C48805 + C48804 + C48803) * C47610 +
            (C408 * C153874 + C409 * C153903 +
             (C134 * C329 + C374 + C374 + C153608 * C353) * C153922) *
                C47609) *
               C153527 * C153563) *
              C1225 +
          (((C409 * C153922 + C408 * C153903 + C407 * C153874) * C47609 +
            (C48809 + C48810 + C48811) * C47610 +
            (C48812 + C48813 + C48814) * C153890) *
               C153527 * C153563 -
           (C48070 * C153890 + (C48060 + C48059 + C48058) * C47610 +
            (C195 * C153874 + C194 * C153903 + C193 * C153922) * C47609) *
               C153527 * C1223) *
              C1226 +
          (((C194 * C153922 + C195 * C153903 + C196 * C153874) * C47609 +
            (C48507 + C48508 + C48509) * C47610 +
            (C48510 + C48511 + C48512) * C153890) *
               C153527 * C1223 -
           (((C134 * C1457 + C1473 + C1473 + C153608 * C1467) * C153874 +
             C7974 * C153903 + C7450 * C153922) *
                C153890 +
            (C1101 * C153874 + C1100 * C153903 + C1099 * C153922) * C47610 +
            (C406 * C153874 + C407 * C153903 + C408 * C153922) * C47609) *
               C153527 * C153563) *
              C1227)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153608 * C152) * C153922 +
            C193 * C153903 + C194 * C153874) *
               C47609 +
           (C48049 + C48050 + C48051) * C47610 + C48069 * C153890) *
              C153527 * C1310 -
          ((C48808 + C48807 + C48806) * C153890 +
           (C48805 + C48804 + C48803) * C47610 +
           (C408 * C153874 + C409 * C153903 +
            (C134 * C329 + C374 + C374 + C153608 * C353) * C153922) *
               C47609) *
              C153527 * C1311 +
          (((C134 * C330 + C375 + C375 + C153608 * C354) * C153922 +
            C410 * C153903 + C411 * C153874) *
               C47609 +
           (C9879 * C153922 + C7452 * C153903 + C7453 * C153874) * C47610 +
           (C9880 * C153922 + C7454 * C153903 + C7455 * C153874) * C153890) *
              C153527 * C1312 -
          (((C134 * C4957 + C8892 + C8892 + C153608 * C4963) * C153874 +
            (C134 * C4958 + C8893 + C8893 + C153608 * C4964) * C153903 +
            (C134 * C4959 + C8894 + C8894 + C153608 * C4965) * C153922) *
               C153890 +
           ((C134 * C4305 + C8895 + C8895 + C153608 * C4313) * C153874 +
            (C134 * C4304 + C8896 + C8896 + C153608 * C4312) * C153903 +
            (C134 * C4303 + C8897 + C8897 + C153608 * C4311) * C153922) *
               C47610 +
           ((C134 * C1317 + C1333 + C1333 + C153608 * C1327) * C153874 +
            (C134 * C1318 + C1334 + C1334 + C153608 * C1328) * C153903 +
            (C134 * C1319 + C1335 + C1335 + C153608 * C1329) * C153922) *
               C47609) *
              C153527 * C1313) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C153922 +
             C193 * C153903 + C194 * C153874) *
                C47609 +
            (C48049 + C48050 + C48051) * C47610 + C48069 * C153890) *
               C535 -
           ((C48055 + C48056 + C48057) * C153890 +
            (C48054 + C48053 + C48052) * C47610 +
            (C48051 + C48050 + C48049) * C47609) *
               C536 +
           (C48069 * C47609 + (C48057 + C48056 + C48055) * C47610 +
            (C10485 * C153922 + C7739 * C153903 + C7740 * C153874) * C153890) *
               C537) *
              C1223 +
          (((C48803 + C48804 + C48805) * C47609 +
            (C48806 + C48807 + C48808) * C47610 +
            (C49397 + C49398 + C49399) * C153890) *
               C536 -
           (C49401 * C153890 + (C48805 + C48804 + C48803) * C47610 +
            (C408 * C153874 + C409 * C153903 +
             (C134 * C329 + C374 + C374 + C153608 * C353) * C153922) *
                C47609) *
               C535 -
           (((C134 * C9115 + C9130 + C9130 + C153608 * C9121) * C153874 +
             (C134 * C9116 + C9131 + C9131 + C153608 * C9122) * C153903 +
             (C134 * C9117 + C9132 + C9132 + C153608 * C9123) * C153922) *
                C153890 +
            (C49399 + C49398 + C49397) * C47610 + C49401 * C47609) *
               C537) *
              C153563) *
         C153492) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
             C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
             C153887 * C354) *
                C153454 * C47609 +
            (C52092 + C52093 + C52094) * C153454 * C47610 + C52106 * C153890) *
               C153527 * C1223 -
           ((C52880 + C52879 + C52878) * C153454 * C153890 +
            (C52877 + C52876 + C52875) * C153454 * C47610 +
            (C2825 * C1319 + C3158 + C3158 + C153887 * C1329 + C2823 * C330 +
             C3159 + C3159 + C153913 * C354 + C2821 * C329 + C3160 + C3160 +
             C153925 * C353) *
                C153454 * C47609) *
               C153527 * C153563) *
              C1225 +
          (((C3217 + C3216 + C3215) * C153454 * C47609 +
            (C4352 + C4353 + C4354) * C153454 * C47610 +
            (C52881 + C52882 + C52883) * C153454 * C153890) *
               C153527 * C153563 -
           (C52091 * C153890 + (C3529 + C3530 + C3531) * C153454 * C47610 +
            (C2896 + C2895 + C2894) * C153454 * C47609) *
               C153527 * C1223) *
              C1226 +
          ((C2908 * C153454 * C47609 +
            (C3528 + C3527 + C3526) * C153454 * C47610 +
            (C3535 + C3536 + C3537) * C153454 * C153890) *
               C153527 * C1223 -
           ((C2825 * C4957 + C4967 + C4967 + C153887 * C4963 + C2823 * C3443 +
             C4968 + C4968 + C153913 * C3451 + C2821 * C1459 + C4969 + C4969 +
             C153925 * C1469) *
                C153454 * C153890 +
            (C4357 + C4356 + C4355) * C153454 * C47610 +
            C3766 * C153454 * C47609) *
               C153527 * C153563) *
              C1227)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
            C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
            C153887 * C354) *
               C153454 * C47609 +
           (C52092 + C52093 + C52094) * C153454 * C47610 + C52106 * C153890) *
              C153527 * C1310 -
          ((C52880 + C52879 + C52878) * C153454 * C153890 +
           (C52877 + C52876 + C52875) * C153454 * C47610 +
           (C2825 * C1319 + C3158 + C3158 + C153887 * C1329 + C2823 * C330 +
            C3159 + C3159 + C153913 * C354 + C2821 * C329 + C3160 + C3160 +
            C153925 * C353) *
               C153454 * C47609) *
              C153527 * C1311 +
          ((C2821 * C330 + C3161 + C3161 + C153925 * C354 + C2823 * C1319 +
            C3162 + C3162 + C153913 * C1329 + C2825 * C3127 + C3163 + C3163 +
            C153887 * C3135) *
               C153454 * C47609 +
           (C2821 * C1892 + C5719 + C5719 + C153925 * C1902 + C2823 * C4303 +
            C5718 + C5718 + C153913 * C4311 + C2825 * C5703 + C5717 + C5717 +
            C153887 * C5709) *
               C153454 * C47610 +
           (C2821 * C3441 + C51811 + C51811 + C153925 * C3449 + C2823 * C4959 +
            C51812 + C51812 + C153913 * C4965 + C2825 * C28650 + C51813 +
            C51813 + C153887 * C28654) *
               C153454 * C153890) *
              C153527 * C1312 -
          ((C2825 * C29442 + C53248 + C53248 + C153887 * C29444 +
            C2823 * C28650 + C53249 + C53249 + C153913 * C28654 +
            C2821 * C4959 + C53250 + C53250 + C153925 * C4965) *
               C153454 * C153890 +
           (C2825 * C29092 + C53251 + C53251 + C153887 * C29096 +
            C2823 * C5703 + C53252 + C53252 + C153913 * C5709 + C2821 * C4303 +
            C53253 + C53253 + C153925 * C4311) *
               C153454 * C47610 +
           (C2825 * C4723 + C4737 + C4737 + C153887 * C4729 + C2823 * C3127 +
            C4738 + C4738 + C153913 * C3135 + C2821 * C1319 + C4739 + C4739 +
            C153925 * C1329) *
               C153454 * C47609) *
              C153527 * C1313) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
             C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
             C153887 * C354) *
                C153454 * C47609 +
            (C52092 + C52093 + C52094) * C153454 * C47610 + C52106 * C153890) *
               C535 -
           ((C52098 + C52099 + C52100) * C153454 * C153890 +
            (C52097 + C52096 + C52095) * C153454 * C47610 +
            (C52094 + C52093 + C52092) * C153454 * C47609) *
               C536 +
           (C52106 * C47609 + (C52100 + C52099 + C52098) * C153454 * C47610 +
            (C2821 * C7673 + C52053 + C52053 + C153925 * C7681 + C2823 * C9117 +
             C52054 + C52054 + C153913 * C9123 + C2825 * C31195 + C52055 +
             C52055 + C153887 * C31199) *
                C153454 * C153890) *
               C537) *
              C1223 +
          (((C52875 + C52876 + C52877) * C153454 * C47609 +
            (C52878 + C52879 + C52880) * C153454 * C47610 +
            (C53490 + C53491 + C53492) * C153454 * C153890) *
               C536 -
           (C53489 * C153890 + (C52877 + C52876 + C52875) * C153454 * C47610 +
            (C2825 * C1319 + C3158 + C3158 + C153887 * C1329 + C2823 * C330 +
             C3159 + C3159 + C153913 * C354 + C2821 * C329 + C3160 + C3160 +
             C153925 * C353) *
                C153454 * C47609) *
               C535 -
           ((C2825 * C32641 + C53479 + C53479 + C153887 * C32643 +
             C2823 * C31195 + C53480 + C53480 + C153913 * C31199 +
             C2821 * C9117 + C53481 + C53481 + C153925 * C9123) *
                C153454 * C153890 +
            (C53492 + C53491 + C53490) * C153454 * C47610 + C53489 * C47609) *
               C537) *
              C153563) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153608 * C152) * C153454 * C55662 +
            C55920 * C55663 + C55921 * C55664 + C55922 * C55665 +
            C55923 * C55666) *
               C153527 * C1223 -
           (C56373 * C55666 + C56357 * C55665 + C56356 * C55664 +
            C56355 * C55663 +
            (C134 * C329 + C374 + C374 + C153608 * C353) * C153454 * C55662) *
               C153527 * C153563) *
              C1225 +
          ((C409 * C153454 * C55662 + C56361 * C55663 + C56362 * C55664 +
            C56363 * C55665 + C56374 * C55666) *
               C153527 * C153563 -
           (C55930 * C55666 + C55929 * C55665 + C55928 * C55664 +
            C55927 * C55663 + C193 * C153454 * C55662) *
               C153527 * C1223) *
              C1226 +
          ((C194 * C153454 * C55662 + C56186 * C55663 + C56187 * C55664 +
            C56188 * C55665 + C56189 * C55666) *
               C153527 * C1223 -
           ((C134 * C9115 + C9130 + C9130 + C153608 * C9121) * C153454 *
                C55666 +
            C8525 * C153454 * C55665 + C7450 * C153454 * C55664 +
            C1099 * C153454 * C55663 + C408 * C153454 * C55662) *
               C153527 * C153563) *
              C1227)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C134 * C136 + C161 + C161 + C153608 * C152) * C153454 * C55662 +
           C55920 * C55663 + C55921 * C55664 + C55922 * C55665 +
           C55923 * C55666) *
              C153527 * C1310 -
          (C56373 * C55666 + C56357 * C55665 + C56356 * C55664 +
           C56355 * C55663 +
           (C134 * C329 + C374 + C374 + C153608 * C353) * C153454 * C55662) *
              C153527 * C1311 +
          ((C134 * C330 + C375 + C375 + C153608 * C354) * C153454 * C55662 +
           C9879 * C153454 * C55663 + C9880 * C153454 * C55664 +
           (C134 * C6305 + C9874 + C9874 + C153608 * C6317) * C153454 * C55665 +
           (C134 * C31195 + C55790 + C55790 + C153608 * C31199) * C153454 *
               C55666) *
              C153527 * C1312 -
          ((C134 * C32641 + C56579 + C56579 + C153608 * C32643) * C153454 *
               C55666 +
           (C134 * C30191 + C56580 + C56580 + C153608 * C30195) * C153454 *
               C55665 +
           (C134 * C4959 + C8894 + C8894 + C153608 * C4965) * C153454 * C55664 +
           (C134 * C4303 + C8897 + C8897 + C153608 * C4311) * C153454 * C55663 +
           (C134 * C1319 + C1335 + C1335 + C153608 * C1329) * C153454 *
               C55662) *
              C153527 * C1313) *
         C153492) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153608 * C152) * C153454 * C55662 +
            C55920 * C55663 + C55921 * C55664 + C55922 * C55665 +
            C55923 * C55666) *
               C535 -
           (C55940 * C55666 + C55923 * C55665 + C55922 * C55664 +
            C55921 * C55663 + C55920 * C55662) *
               C536 +
           (C55921 * C55662 + C55922 * C55663 + C55923 * C55664 +
            C55940 * C55665 +
            (C134 * C55913 + C55926 + C55926 + C153608 * C55917) * C153454 *
                C55666) *
               C537) *
              C1223 +
          ((C56355 * C55662 + C56356 * C55663 + C56357 * C55664 +
            C56373 * C55665 + C56712 * C55666) *
               C536 -
           (C56373 * C55666 + C56357 * C55665 + C56356 * C55664 +
            C56355 * C55663 +
            (C134 * C329 + C374 + C374 + C153608 * C353) * C153454 * C55662) *
               C535 -
           ((C134 * C56702 + C56708 + C56708 + C153608 * C56704) * C153454 *
                C55666 +
            C56712 * C55665 + C56373 * C55664 + C56357 * C55663 +
            C56356 * C55662) *
               C537) *
              C153563) *
         C153492) /
            (p * q * std::sqrt(p + q));
    d2ee[188] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C134 * C136 + C161 + C161 + C153608 * C152) * C122 +
                 C193 * C123 + C194 * C124 + C195 * C125 + C196 * C126) *
                    C153626 * C153838 -
                (C619 * C126 + C620 * C125 + C621 * C124 + C622 * C123 +
                 (C134 * C542 + C587 + C587 + C153608 * C566) * C122) *
                    C153626 * C153591) *
                   C1223 +
               (((C134 * C1057 + C1076 + C1076 + C153608 * C1069) * C122 +
                 C1098 * C123 + C1099 * C124 + C1100 * C125 + C1101 * C126) *
                    C153626 * C153591 -
                (C406 * C126 + C407 * C125 + C408 * C124 + C409 * C123 +
                 (C134 * C329 + C374 + C374 + C153608 * C353) * C122) *
                    C153626 * C153838) *
                   C153563) *
                  C153829 +
              (((C622 * C122 + C621 * C123 + C620 * C124 + C619 * C125 +
                 C895 * C126) *
                    C153626 * C153591 -
                (C197 * C126 + C196 * C125 + C195 * C124 + C194 * C123 +
                 C193 * C122) *
                    C153626 * C153838) *
                   C1223 +
               ((C409 * C122 + C408 * C123 + C407 * C124 + C406 * C125 +
                 C762 * C126) *
                    C153626 * C153838 -
                ((C134 * C1062 + C1089 + C1089 + C153608 * C1074) * C126 +
                 C1101 * C125 + C1100 * C124 + C1099 * C123 + C1098 * C122) *
                    C153626 * C153591) *
                   C153563) *
                  C153498) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
                  C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 +
                  C2830 + C153887 * C354) *
                     C2818 +
                 (C2894 + C2895 + C2896) * C2819 + C2908 * C153874) *
                    C153626 * C153838 -
                (C4004 * C153874 + (C3529 + C3530 + C3531) * C2819 +
                 (C2825 * C1892 + C3472 + C3472 + C153887 * C1902 +
                  C2823 * C1057 + C3473 + C3473 + C153913 * C1069 +
                  C2821 * C542 + C3474 + C3474 + C153925 * C566) *
                     C2818) *
                    C153626 * C153591) *
                   C1223 +
               (((C2821 * C1057 + C4316 + C4316 + C153925 * C1069 +
                  C2823 * C1892 + C4317 + C4317 + C153913 * C1902 +
                  C2825 * C4303 + C4318 + C4318 + C153887 * C4311) *
                     C2818 +
                 (C4352 + C4353 + C4354) * C2819 +
                 (C4355 + C4356 + C4357) * C153874) *
                    C153626 * C153591 -
                (C3766 * C153874 + (C3215 + C3216 + C3217) * C2819 +
                 (C2825 * C1319 + C3158 + C3158 + C153887 * C1329 +
                  C2823 * C330 + C3159 + C3159 + C153913 * C354 + C2821 * C329 +
                  C3160 + C3160 + C153925 * C353) *
                     C2818) *
                    C153626 * C153838) *
                   C153563) *
                  C153829 +
              ((((C3531 + C3530 + C3529) * C2818 +
                 (C3528 + C3527 + C3526) * C2819 +
                 (C4011 + C4012 + C4013) * C153874) *
                    C153626 * C153591 -
                (C2909 * C153874 + (C2899 + C2898 + C2897) * C2819 +
                 (C2896 + C2895 + C2894) * C2818) *
                    C153626 * C153838) *
                   C1223 +
               (((C3217 + C3216 + C3215) * C2818 +
                 (C3214 + C3213 + C3212) * C2819 +
                 (C3773 + C3774 + C3775) * C153874) *
                    C153626 * C153838 -
                ((C2825 * C4306 + C4337 + C4337 + C153887 * C4314 +
                  C2823 * C1889 + C4338 + C4338 + C153913 * C1899 +
                  C2821 * C1060 + C4339 + C4339 + C153925 * C1072) *
                     C153874 +
                 (C4357 + C4356 + C4355) * C2819 +
                 (C4354 + C4353 + C4352) * C2818) *
                    C153626 * C153591) *
                   C153563) *
                  C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C153608 * C152) * C2818 +
              C193 * C2819 + C194 * C153874) *
                 C153926 +
             (C7742 + C7688 + C7689) * C153915 + C7751 * C153890) *
                C153838 -
            ((C7744 + C7745 + C7746) * C153890 +
             (C7693 + C7692 + C7743) * C153915 +
             (C7689 + C7688 + C7742) * C153926) *
                C153591) *
               C1223 +
           (((C8526 + C8494 + C8495) * C153926 +
             (C8527 + C8498 + C8499) * C153915 +
             (C9137 + C9127 + C9128) * C153890) *
                C153591 -
            (C9134 * C153890 + (C8495 + C8494 + C8526) * C153915 +
             (C408 * C153874 + C409 * C2819 +
              (C134 * C329 + C374 + C374 + C153608 * C353) * C2818) *
                 C153926) *
                C153838) *
               C153563) *
              C153829 +
          ((((C7707 + C7708 + C7709) * C153926 +
             (C7710 + C7711 + C7712) * C153915 +
             (C7747 + C7748 + C7749) * C153890) *
                C153591 -
            (C7733 * C153890 + (C7709 + C7708 + C7707) * C153915 +
             (C195 * C153874 + C194 * C2819 + C193 * C2818) * C153926) *
                C153838) *
               C1223 +
           (((C409 * C2818 + C408 * C2819 + C407 * C153874) * C153926 +
             (C8507 + C8508 + C8509) * C153915 +
             (C8510 + C8511 + C8512) * C153890) *
                C153838 -
            (((C134 * C8488 + C8513 + C8513 + C153608 * C8490) * C153874 +
              C8525 * C2819 + C8524 * C2818) *
                 C153890 +
             (C8512 + C8511 + C8510) * C153915 +
             (C8509 + C8508 + C8507) * C153926) *
                C153591) *
               C153563) *
              C153498)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
              C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 +
              C24119 + C153887 * C354) *
                 C153922 +
             (C24183 + C24184 + C24185) * C153903 + C24197 * C153874) *
                C153626 * C153838 -
            (C25269 * C153874 + (C24794 + C24795 + C24796) * C153903 +
             (C24114 * C1892 + C24737 + C24737 + C153887 * C1902 +
              C24112 * C1057 + C24738 + C24738 + C24105 * C1069 +
              C24110 * C542 + C24739 + C24739 + C24104 * C566) *
                 C153922) *
                C153626 * C153591) *
               C1223 +
           (((C24110 * C1057 + C25569 + C25569 + C24104 * C1069 +
              C24112 * C1892 + C25570 + C25570 + C24105 * C1902 +
              C24114 * C4303 + C25571 + C25571 + C153887 * C4311) *
                 C153922 +
             (C25605 + C25606 + C25607) * C153903 +
             (C25608 + C25609 + C25610) * C153874) *
                C153626 * C153591 -
            (C25031 * C153874 + (C24492 + C24493 + C24494) * C153903 +
             (C24114 * C1319 + C24435 + C24435 + C153887 * C1329 +
              C24112 * C330 + C24436 + C24436 + C24105 * C354 + C24110 * C329 +
              C24437 + C24437 + C24104 * C353) *
                 C153922) *
                C153626 * C153838) *
               C153563) *
              C153829 +
          ((((C24796 + C24795 + C24794) * C153922 +
             (C24793 + C24792 + C24791) * C153903 +
             (C25276 + C25277 + C25278) * C153874) *
                C153626 * C153591 -
            (C24198 * C153874 + (C24188 + C24187 + C24186) * C153903 +
             (C24185 + C24184 + C24183) * C153922) *
                C153626 * C153838) *
               C1223 +
           (((C24494 + C24493 + C24492) * C153922 +
             (C24491 + C24490 + C24489) * C153903 +
             (C25038 + C25039 + C25040) * C153874) *
                C153626 * C153838 -
            ((C24114 * C4306 + C25590 + C25590 + C153887 * C4314 +
              C24112 * C1889 + C25591 + C25591 + C24105 * C1899 +
              C24110 * C1060 + C25592 + C25592 + C24104 * C1072) *
                 C153874 +
             (C25610 + C25609 + C25608) * C153903 +
             (C25607 + C25606 + C25605) * C153922) *
                C153626 * C153591) *
               C153563) *
              C153498)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C28350 * C136 + C28361 + C28361 + C28344 * C152 + C28352 * C329 +
             C28362 + C28362 + C28345 * C353 + C28354 * C330 + C28363 + C28363 +
             C28346 * C354 + C28356 * C1319 + C28364 + C28364 + C28347 * C1329 +
             C28358 * C3127 + C28365 + C28365 + C28348 * C3135) *
                C153454 * C153626 * C153838 -
            (C28358 * C5703 + C28657 + C28657 + C28348 * C5709 +
             C28356 * C4303 + C28658 + C28658 + C28347 * C4311 +
             C28354 * C1892 + C28659 + C28659 + C28346 * C1902 +
             C28352 * C1057 + C28660 + C28660 + C28345 * C1069 + C28350 * C542 +
             C28661 + C28661 + C28344 * C566) *
                C153454 * C153626 * C153591) *
               C1223 +
           ((C28350 * C1057 + C29099 + C29099 + C28344 * C1069 +
             C28352 * C1892 + C29100 + C29100 + C28345 * C1902 +
             C28354 * C4303 + C29101 + C29101 + C28346 * C4311 +
             C28356 * C5703 + C29102 + C29102 + C28347 * C5709 +
             C28358 * C29092 + C29103 + C29103 + C28348 * C29096) *
                C153454 * C153626 * C153591 -
            (C28358 * C4723 + C28509 + C28509 + C28348 * C4729 +
             C28356 * C3127 + C28510 + C28510 + C28347 * C3135 +
             C28354 * C1319 + C28511 + C28511 + C28346 * C1329 + C28352 * C330 +
             C28512 + C28512 + C28345 * C354 + C28350 * C329 + C28513 + C28513 +
             C28344 * C353) *
                C153454 * C153626 * C153838) *
               C153563) *
              C153829 +
          (((C28350 * C541 + C28667 + C28667 + C28344 * C565 + C28352 * C1058 +
             C28668 + C28668 + C28345 * C1070 + C28354 * C1891 + C28669 +
             C28669 + C28346 * C1901 + C28356 * C4304 + C28670 + C28670 +
             C28347 * C4312 + C28358 * C5702 + C28671 + C28671 +
             C28348 * C5708) *
                C153454 * C153626 * C153591 -
            (C28358 * C3128 + C28366 + C28366 + C28348 * C3136 +
             C28356 * C1318 + C28367 + C28367 + C28347 * C1328 + C28354 * C331 +
             C28368 + C28368 + C28346 * C355 + C28352 * C328 + C28369 + C28369 +
             C28345 * C352 + C28350 * C137 + C28370 + C28370 + C28344 * C153) *
                C153454 * C153626 * C153838) *
               C1223 +
           ((C28350 * C328 + C28519 + C28519 + C28344 * C352 + C28352 * C331 +
             C28520 + C28520 + C28345 * C355 + C28354 * C1318 + C28521 +
             C28521 + C28346 * C1328 + C28356 * C3128 + C28522 + C28522 +
             C28347 * C3136 + C28358 * C4722 + C28523 + C28523 +
             C28348 * C4728) *
                C153454 * C153626 * C153838 -
            (C28358 * C29093 + C29104 + C29104 + C28348 * C29097 +
             C28356 * C5702 + C29105 + C29105 + C28347 * C5708 +
             C28354 * C4304 + C29106 + C29106 + C28346 * C4312 +
             C28352 * C1891 + C29107 + C29107 + C28345 * C1901 +
             C28350 * C1058 + C29108 + C29108 + C28344 * C1070) *
                C153454 * C153626 * C153591) *
               C153563) *
              C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
              C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 +
              C24119 + C153887 * C354) *
                 C153454 * C153926 +
             (C31259 + C31260 + C31261) * C153454 * C153915 +
             C31273 * C153890) *
                C153838 -
            ((C31265 + C31266 + C31267) * C153454 * C153890 +
             (C31264 + C31263 + C31262) * C153454 * C153915 +
             (C31261 + C31260 + C31259) * C153454 * C153926) *
                C153591) *
               C1223 +
           (((C32045 + C32046 + C32047) * C153454 * C153926 +
             (C32048 + C32049 + C32050) * C153454 * C153915 +
             (C32663 + C32664 + C32665) * C153454 * C153890) *
                C153591 -
            (C32662 * C153890 + (C32047 + C32046 + C32045) * C153454 * C153915 +
             (C24114 * C1319 + C24435 + C24435 + C153887 * C1329 +
              C24112 * C330 + C24436 + C24436 + C24105 * C354 + C24110 * C329 +
              C24437 + C24437 + C24104 * C353) *
                 C153454 * C153926) *
                C153838) *
               C153563) *
              C153829 +
          ((((C24796 + C24795 + C24794) * C153454 * C153926 +
             (C24797 + C24798 + C24799) * C153454 * C153915 +
             (C31268 + C31269 + C31270) * C153454 * C153890) *
                C153591 -
            (C31258 * C153890 + (C24794 + C24795 + C24796) * C153454 * C153915 +
             (C24185 + C24184 + C24183) * C153454 * C153926) *
                C153838) *
               C1223 +
           (((C24494 + C24493 + C24492) * C153454 * C153926 +
             (C25605 + C25606 + C25607) * C153454 * C153915 +
             (C32051 + C32052 + C32053) * C153454 * C153890) *
                C153838 -
            ((C24114 * C31999 + C32024 + C32024 + C153887 * C32001 +
              C24112 * C6303 + C32025 + C32025 + C24105 * C6315 +
              C24110 * C6304 + C32026 + C32026 + C24104 * C6316) *
                 C153454 * C153890 +
             (C32053 + C32052 + C32051) * C153454 * C153915 +
             (C25607 + C25606 + C25605) * C153454 * C153926) *
                C153591) *
               C153563) *
              C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C153608 * C152) * C153922 +
              C193 * C153903 + C194 * C153874) *
                 C47609 +
             (C48049 + C48050 + C48051) * C47610 + C48069 * C153890) *
                C153838 -
            ((C48055 + C48056 + C48057) * C153890 +
             (C48054 + C48053 + C48052) * C47610 +
             (C48051 + C48050 + C48049) * C47609) *
                C153591) *
               C1223 +
           (((C48803 + C48804 + C48805) * C47609 +
             (C48806 + C48807 + C48808) * C47610 +
             (C49397 + C49398 + C49399) * C153890) *
                C153591 -
            (C49401 * C153890 + (C48805 + C48804 + C48803) * C47610 +
             (C408 * C153874 + C409 * C153903 +
              (C134 * C329 + C374 + C374 + C153608 * C353) * C153922) *
                 C47609) *
                C153838) *
               C153563) *
              C153829 +
          ((((C48058 + C48059 + C48060) * C47609 +
             (C48061 + C48062 + C48063) * C47610 +
             (C48064 + C48065 + C48066) * C153890) *
                C153591 -
            (C48070 * C153890 + (C48060 + C48059 + C48058) * C47610 +
             (C195 * C153874 + C194 * C153903 + C193 * C153922) * C47609) *
                C153838) *
               C1223 +
           (((C409 * C153922 + C408 * C153903 + C407 * C153874) * C47609 +
             (C48809 + C48810 + C48811) * C47610 +
             (C48812 + C48813 + C48814) * C153890) *
                C153838 -
            (((C134 * C8488 + C8513 + C8513 + C153608 * C8490) * C153874 +
              C8525 * C153903 + C8524 * C153922) *
                 C153890 +
             (C48814 + C48813 + C48812) * C47610 +
             (C48811 + C48810 + C48809) * C47609) *
                C153591) *
               C153563) *
              C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
              C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
              C153887 * C354) *
                 C153454 * C47609 +
             (C52092 + C52093 + C52094) * C153454 * C47610 + C52106 * C153890) *
                C153838 -
            ((C52098 + C52099 + C52100) * C153454 * C153890 +
             (C52097 + C52096 + C52095) * C153454 * C47610 +
             (C52094 + C52093 + C52092) * C153454 * C47609) *
                C153591) *
               C1223 +
           (((C52875 + C52876 + C52877) * C153454 * C47609 +
             (C52878 + C52879 + C52880) * C153454 * C47610 +
             (C53490 + C53491 + C53492) * C153454 * C153890) *
                C153591 -
            (C53489 * C153890 + (C52877 + C52876 + C52875) * C153454 * C47610 +
             (C2825 * C1319 + C3158 + C3158 + C153887 * C1329 + C2823 * C330 +
              C3159 + C3159 + C153913 * C354 + C2821 * C329 + C3160 + C3160 +
              C153925 * C353) *
                 C153454 * C47609) *
                C153838) *
               C153563) *
              C153829 +
          ((((C3531 + C3530 + C3529) * C153454 * C47609 +
             (C3532 + C3533 + C3534) * C153454 * C47610 +
             (C52101 + C52102 + C52103) * C153454 * C153890) *
                C153591 -
            (C52091 * C153890 + (C3529 + C3530 + C3531) * C153454 * C47610 +
             (C2896 + C2895 + C2894) * C153454 * C47609) *
                C153838) *
               C1223 +
           (((C3217 + C3216 + C3215) * C153454 * C47609 +
             (C4352 + C4353 + C4354) * C153454 * C47610 +
             (C52881 + C52882 + C52883) * C153454 * C153890) *
                C153838 -
            ((C2825 * C31999 + C52854 + C52854 + C153887 * C32001 +
              C2823 * C6303 + C52855 + C52855 + C153913 * C6315 +
              C2821 * C6304 + C52856 + C52856 + C153925 * C6316) *
                 C153454 * C153890 +
             (C52883 + C52882 + C52881) * C153454 * C47610 +
             (C4354 + C4353 + C4352) * C153454 * C47609) *
                C153591) *
               C153563) *
              C153498)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C153454 * C55662 +
             C55920 * C55663 + C55921 * C55664 + C55922 * C55665 +
             C55923 * C55666) *
                C153838 -
            (C55940 * C55666 + C55923 * C55665 + C55922 * C55664 +
             C55921 * C55663 + C55920 * C55662) *
                C153591) *
               C1223 +
           ((C56355 * C55662 + C56356 * C55663 + C56357 * C55664 +
             C56373 * C55665 + C56712 * C55666) *
                C153591 -
            (C56373 * C55666 + C56357 * C55665 + C56356 * C55664 +
             C56355 * C55663 +
             (C134 * C329 + C374 + C374 + C153608 * C353) * C153454 * C55662) *
                C153838) *
               C153563) *
              C153829 +
          (((C55927 * C55662 + C55928 * C55663 + C55929 * C55664 +
             C55930 * C55665 + C55941 * C55666) *
                C153591 -
            (C55930 * C55666 + C55929 * C55665 + C55928 * C55664 +
             C55927 * C55663 + C193 * C153454 * C55662) *
                C153838) *
               C1223 +
           ((C409 * C153454 * C55662 + C56361 * C55663 + C56362 * C55664 +
             C56363 * C55665 + C56374 * C55666) *
                C153838 -
            ((C134 * C56351 + C56366 + C56366 + C153608 * C56353) * C153454 *
                 C55666 +
             C56374 * C55665 + C56363 * C55664 + C56362 * C55663 +
             C56361 * C55662) *
                C153591) *
               C153563) *
              C153498)) /
            (p * q * std::sqrt(p + q));
    d2ee[189] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153608 * C152) * C122 + C193 * C123 +
            C194 * C124 + C195 * C125 + C196 * C126) *
               C153626 * C153527 * C1223 -
           (C406 * C126 + C407 * C125 + C408 * C124 + C409 * C123 +
            (C134 * C329 + C374 + C374 + C153608 * C353) * C122) *
               C153626 * C153527 * C153563) *
              C1225 +
          ((C409 * C122 + C408 * C123 + C407 * C124 + C406 * C125 +
            C762 * C126) *
               C153626 * C153527 * C153563 -
           (C197 * C126 + C196 * C125 + C195 * C124 + C194 * C123 +
            C193 * C122) *
               C153626 * C153527 * C1223) *
              C1226 +
          ((C194 * C122 + C195 * C123 + C196 * C124 + C197 * C125 +
            C198 * C126) *
               C153626 * C153527 * C1223 -
           ((C134 * C753 + C759 + C759 + C153608 * C755) * C126 + C762 * C125 +
            C406 * C124 + C407 * C123 + C408 * C122) *
               C153626 * C153527 * C153563) *
              C1227)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C136 + C161 + C161 + C153608 * C152) * C122 + C193 * C123 +
           C194 * C124 + C195 * C125 + C196 * C126) *
              C153626 * C153527 * C1310 -
          (C406 * C126 + C407 * C125 + C408 * C124 + C409 * C123 +
           (C134 * C329 + C374 + C374 + C153608 * C353) * C122) *
              C153626 * C153527 * C1311 +
          ((C134 * C330 + C375 + C375 + C153608 * C354) * C122 + C410 * C123 +
           C411 * C124 + C412 * C125 + C413 * C126) *
              C153626 * C153527 * C1312 -
          ((C134 * C1315 + C1331 + C1331 + C153608 * C1325) * C126 +
           (C134 * C1316 + C1332 + C1332 + C153608 * C1326) * C125 +
           (C134 * C1317 + C1333 + C1333 + C153608 * C1327) * C124 +
           (C134 * C1318 + C1334 + C1334 + C153608 * C1328) * C123 +
           (C134 * C1319 + C1335 + C1335 + C153608 * C1329) * C122) *
              C153626 * C153527 * C1313) *
         C153492) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
             C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
             C153887 * C354) *
                C2818 +
            (C2894 + C2895 + C2896) * C2819 + C2908 * C153874) *
               C153626 * C153527 * C1223 -
           (C3766 * C153874 + (C3215 + C3216 + C3217) * C2819 +
            (C2825 * C1319 + C3158 + C3158 + C153887 * C1329 + C2823 * C330 +
             C3159 + C3159 + C153913 * C354 + C2821 * C329 + C3160 + C3160 +
             C153925 * C353) *
                C2818) *
               C153626 * C153527 * C153563) *
              C1225 +
          (((C3217 + C3216 + C3215) * C2818 + (C3214 + C3213 + C3212) * C2819 +
            (C3773 + C3774 + C3775) * C153874) *
               C153626 * C153527 * C153563 -
           (C2909 * C153874 + (C2899 + C2898 + C2897) * C2819 +
            (C2896 + C2895 + C2894) * C2818) *
               C153626 * C153527 * C1223) *
              C1226 +
          ((C2908 * C2818 + (C2902 + C2901 + C2900) * C2819 +
            (C2903 + C2904 + C2905) * C153874) *
               C153626 * C153527 * C1223 -
           ((C2825 * C1315 + C3763 + C3763 + C153887 * C1325 + C2823 * C334 +
             C3764 + C3764 + C153913 * C358 + C2821 * C325 + C3765 + C3765 +
             C153925 * C349) *
                C153874 +
            (C3775 + C3774 + C3773) * C2819 + C3766 * C2818) *
               C153626 * C153527 * C153563) *
              C1227)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
            C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
            C153887 * C354) *
               C2818 +
           (C2894 + C2895 + C2896) * C2819 + C2908 * C153874) *
              C153626 * C153527 * C1310 -
          (C3766 * C153874 + (C3215 + C3216 + C3217) * C2819 +
           (C2825 * C1319 + C3158 + C3158 + C153887 * C1329 + C2823 * C330 +
            C3159 + C3159 + C153913 * C354 + C2821 * C329 + C3160 + C3160 +
            C153925 * C353) *
               C2818) *
              C153626 * C153527 * C1311 +
          ((C2821 * C330 + C3161 + C3161 + C153925 * C354 + C2823 * C1319 +
            C3162 + C3162 + C153913 * C1329 + C2825 * C3127 + C3163 + C3163 +
            C153887 * C3135) *
               C2818 +
           (C3218 + C3219 + C3220) * C2819 +
           (C3221 + C3222 + C3223) * C153874) *
              C153626 * C153527 * C1312 -
          ((C2825 * C4721 + C4731 + C4731 + C153887 * C4727 + C2823 * C3129 +
            C4732 + C4732 + C153913 * C3137 + C2821 * C1317 + C4733 + C4733 +
            C153925 * C1327) *
               C153874 +
           (C2825 * C4722 + C4734 + C4734 + C153887 * C4728 + C2823 * C3128 +
            C4735 + C4735 + C153913 * C3136 + C2821 * C1318 + C4736 + C4736 +
            C153925 * C1328) *
               C2819 +
           (C2825 * C4723 + C4737 + C4737 + C153887 * C4729 + C2823 * C3127 +
            C4738 + C4738 + C153913 * C3135 + C2821 * C1319 + C4739 + C4739 +
            C153925 * C1329) *
               C2818) *
              C153626 * C153527 * C1313) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C2818 +
             C193 * C2819 + C194 * C153874) *
                C153926 +
            (C7742 + C7688 + C7689) * C153915 + C7751 * C153890) *
               C153527 * C1223 -
           ((C8499 + C8498 + C8527) * C153890 +
            (C8495 + C8494 + C8526) * C153915 +
            (C408 * C153874 + C409 * C2819 +
             (C134 * C329 + C374 + C374 + C153608 * C353) * C2818) *
                C153926) *
               C153527 * C153563) *
              C1225 +
          (((C409 * C2818 + C408 * C2819 + C407 * C153874) * C153926 +
            (C8507 + C8508 + C8509) * C153915 +
            (C8510 + C8511 + C8512) * C153890) *
               C153527 * C153563 -
           (C7733 * C153890 + (C7709 + C7708 + C7707) * C153915 +
            (C195 * C153874 + C194 * C2819 + C193 * C2818) * C153926) *
               C153527 * C1223) *
              C1226 +
          (((C194 * C2818 + C195 * C2819 + C196 * C153874) * C153926 +
            (C8193 + C8194 + C8195) * C153915 +
            (C8196 + C8197 + C8198) * C153890) *
               C153527 * C1223 -
           (((C134 * C1457 + C1473 + C1473 + C153608 * C1467) * C153874 +
             C7974 * C2819 + C7450 * C2818) *
                C153890 +
            (C1101 * C153874 + C1100 * C2819 + C1099 * C2818) * C153915 +
            (C406 * C153874 + C407 * C2819 + C408 * C2818) * C153926) *
               C153527 * C153563) *
              C1227)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153608 * C152) * C2818 +
            C193 * C2819 + C194 * C153874) *
               C153926 +
           (C7742 + C7688 + C7689) * C153915 + C7751 * C153890) *
              C153527 * C1310 -
          ((C8499 + C8498 + C8527) * C153890 +
           (C8495 + C8494 + C8526) * C153915 +
           (C408 * C153874 + C409 * C2819 +
            (C134 * C329 + C374 + C374 + C153608 * C353) * C2818) *
               C153926) *
              C153527 * C1311 +
          (((C134 * C330 + C375 + C375 + C153608 * C354) * C2818 +
            C410 * C2819 + C411 * C153874) *
               C153926 +
           ((C134 * C1892 + C1908 + C1908 + C153608 * C1902) * C2818 +
            C7452 * C2819 + C7453 * C153874) *
               C153915 +
           ((C134 * C3441 + C7430 + C7430 + C153608 * C3449) * C2818 +
            C7454 * C2819 + C7455 * C153874) *
               C153890) *
              C153527 * C1312 -
          (((C134 * C4957 + C8892 + C8892 + C153608 * C4963) * C153874 +
            (C134 * C4958 + C8893 + C8893 + C153608 * C4964) * C2819 +
            (C134 * C4959 + C8894 + C8894 + C153608 * C4965) * C2818) *
               C153890 +
           ((C134 * C4305 + C8895 + C8895 + C153608 * C4313) * C153874 +
            (C134 * C4304 + C8896 + C8896 + C153608 * C4312) * C2819 +
            (C134 * C4303 + C8897 + C8897 + C153608 * C4311) * C2818) *
               C153915 +
           ((C134 * C1317 + C1333 + C1333 + C153608 * C1327) * C153874 +
            (C134 * C1318 + C1334 + C1334 + C153608 * C1328) * C2819 +
            (C134 * C1319 + C1335 + C1335 + C153608 * C1329) * C2818) *
               C153926) *
              C153527 * C1313) *
         C153492) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
             C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 + C24119 +
             C153887 * C354) *
                C153922 +
            (C24183 + C24184 + C24185) * C153903 + C24197 * C153874) *
               C153626 * C153527 * C1223 -
           (C25031 * C153874 + (C24492 + C24493 + C24494) * C153903 +
            (C24114 * C1319 + C24435 + C24435 + C153887 * C1329 +
             C24112 * C330 + C24436 + C24436 + C24105 * C354 + C24110 * C329 +
             C24437 + C24437 + C24104 * C353) *
                C153922) *
               C153626 * C153527 * C153563) *
              C1225 +
          (((C24494 + C24493 + C24492) * C153922 +
            (C24491 + C24490 + C24489) * C153903 +
            (C25038 + C25039 + C25040) * C153874) *
               C153626 * C153527 * C153563 -
           (C24198 * C153874 + (C24188 + C24187 + C24186) * C153903 +
            (C24185 + C24184 + C24183) * C153922) *
               C153626 * C153527 * C1223) *
              C1226 +
          ((C24197 * C153922 + (C24191 + C24190 + C24189) * C153903 +
            (C24192 + C24193 + C24194) * C153874) *
               C153626 * C153527 * C1223 -
           ((C24114 * C1315 + C25028 + C25028 + C153887 * C1325 +
             C24112 * C334 + C25029 + C25029 + C24105 * C358 + C24110 * C325 +
             C25030 + C25030 + C24104 * C349) *
                C153874 +
            (C25040 + C25039 + C25038) * C153903 + C25031 * C153922) *
               C153626 * C153527 * C153563) *
              C1227)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
            C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 + C24119 +
            C153887 * C354) *
               C153922 +
           (C24183 + C24184 + C24185) * C153903 + C24197 * C153874) *
              C153626 * C153527 * C1310 -
          (C25031 * C153874 + (C24492 + C24493 + C24494) * C153903 +
           (C24114 * C1319 + C24435 + C24435 + C153887 * C1329 + C24112 * C330 +
            C24436 + C24436 + C24105 * C354 + C24110 * C329 + C24437 + C24437 +
            C24104 * C353) *
               C153922) *
              C153626 * C153527 * C1311 +
          ((C24110 * C330 + C24438 + C24438 + C24104 * C354 + C24112 * C1319 +
            C24439 + C24439 + C24105 * C1329 + C24114 * C3127 + C24440 +
            C24440 + C153887 * C3135) *
               C153922 +
           (C24495 + C24496 + C24497) * C153903 +
           (C24498 + C24499 + C24500) * C153874) *
              C153626 * C153527 * C1312 -
          ((C24114 * C4721 + C25975 + C25975 + C153887 * C4727 +
            C24112 * C3129 + C25976 + C25976 + C24105 * C3137 + C24110 * C1317 +
            C25977 + C25977 + C24104 * C1327) *
               C153874 +
           (C24114 * C4722 + C25978 + C25978 + C153887 * C4728 +
            C24112 * C3128 + C25979 + C25979 + C24105 * C3136 + C24110 * C1318 +
            C25980 + C25980 + C24104 * C1328) *
               C153903 +
           (C24114 * C4723 + C25981 + C25981 + C153887 * C4729 +
            C24112 * C3127 + C25982 + C25982 + C24105 * C3135 + C24110 * C1319 +
            C25983 + C25983 + C24104 * C1329) *
               C153922) *
              C153626 * C153527 * C1313) *
         C153492) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C28350 * C136 + C28361 + C28361 + C28344 * C152 + C28352 * C329 +
            C28362 + C28362 + C28345 * C353 + C28354 * C330 + C28363 + C28363 +
            C28346 * C354 + C28356 * C1319 + C28364 + C28364 + C28347 * C1329 +
            C28358 * C3127 + C28365 + C28365 + C28348 * C3135) *
               C153454 * C153626 * C153527 * C1223 -
           (C28358 * C4723 + C28509 + C28509 + C28348 * C4729 + C28356 * C3127 +
            C28510 + C28510 + C28347 * C3135 + C28354 * C1319 + C28511 +
            C28511 + C28346 * C1329 + C28352 * C330 + C28512 + C28512 +
            C28345 * C354 + C28350 * C329 + C28513 + C28513 + C28344 * C353) *
               C153454 * C153626 * C153527 * C153563) *
              C1225 +
          ((C28350 * C328 + C28519 + C28519 + C28344 * C352 + C28352 * C331 +
            C28520 + C28520 + C28345 * C355 + C28354 * C1318 + C28521 + C28521 +
            C28346 * C1328 + C28356 * C3128 + C28522 + C28522 + C28347 * C3136 +
            C28358 * C4722 + C28523 + C28523 + C28348 * C4728) *
               C153454 * C153626 * C153527 * C153563 -
           (C28358 * C3128 + C28366 + C28366 + C28348 * C3136 + C28356 * C1318 +
            C28367 + C28367 + C28347 * C1328 + C28354 * C331 + C28368 + C28368 +
            C28346 * C355 + C28352 * C328 + C28369 + C28369 + C28345 * C352 +
            C28350 * C137 + C28370 + C28370 + C28344 * C153) *
               C153454 * C153626 * C153527 * C1223) *
              C1226 +
          ((C28350 * C138 + C28371 + C28371 + C28344 * C154 + C28352 * C327 +
            C28372 + C28372 + C28345 * C351 + C28354 * C332 + C28373 + C28373 +
            C28346 * C356 + C28356 * C1317 + C28374 + C28374 + C28347 * C1327 +
            C28358 * C3129 + C28375 + C28375 + C28348 * C3137) *
               C153454 * C153626 * C153527 * C1223 -
           (C28358 * C4721 + C28799 + C28799 + C28348 * C4727 + C28356 * C3129 +
            C28800 + C28800 + C28347 * C3137 + C28354 * C1317 + C28801 +
            C28801 + C28346 * C1327 + C28352 * C332 + C28802 + C28802 +
            C28345 * C356 + C28350 * C327 + C28803 + C28803 + C28344 * C351) *
               C153454 * C153626 * C153527 * C153563) *
              C1227)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((C28350 * C136 + C28361 + C28361 + C28344 * C152 + C28352 * C329 +
           C28362 + C28362 + C28345 * C353 + C28354 * C330 + C28363 + C28363 +
           C28346 * C354 + C28356 * C1319 + C28364 + C28364 + C28347 * C1329 +
           C28358 * C3127 + C28365 + C28365 + C28348 * C3135) *
              C153454 * C153626 * C153527 * C1310 -
          (C28358 * C4723 + C28509 + C28509 + C28348 * C4729 + C28356 * C3127 +
           C28510 + C28510 + C28347 * C3135 + C28354 * C1319 + C28511 + C28511 +
           C28346 * C1329 + C28352 * C330 + C28512 + C28512 + C28345 * C354 +
           C28350 * C329 + C28513 + C28513 + C28344 * C353) *
              C153454 * C153626 * C153527 * C1311 +
          (C28350 * C330 + C28514 + C28514 + C28344 * C354 + C28352 * C1319 +
           C28515 + C28515 + C28345 * C1329 + C28354 * C3127 + C28516 + C28516 +
           C28346 * C3135 + C28356 * C4723 + C28517 + C28517 + C28347 * C4729 +
           C28358 * C28502 + C28518 + C28518 + C28348 * C28506) *
              C153454 * C153626 * C153527 * C1312 -
          (C28358 * C29312 + C29316 + C29316 + C28348 * C29314 +
           C28356 * C28502 + C29317 + C29317 + C28347 * C28506 +
           C28354 * C4723 + C29318 + C29318 + C28346 * C4729 + C28352 * C3127 +
           C29319 + C29319 + C28345 * C3135 + C28350 * C1319 + C29320 + C29320 +
           C28344 * C1329) *
              C153454 * C153626 * C153527 * C1313) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
             C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 + C24119 +
             C153887 * C354) *
                C153454 * C153926 +
            (C31259 + C31260 + C31261) * C153454 * C153915 + C31273 * C153890) *
               C153527 * C1223 -
           ((C32050 + C32049 + C32048) * C153454 * C153890 +
            (C32047 + C32046 + C32045) * C153454 * C153915 +
            (C24114 * C1319 + C24435 + C24435 + C153887 * C1329 +
             C24112 * C330 + C24436 + C24436 + C24105 * C354 + C24110 * C329 +
             C24437 + C24437 + C24104 * C353) *
                C153454 * C153926) *
               C153527 * C153563) *
              C1225 +
          (((C24494 + C24493 + C24492) * C153454 * C153926 +
            (C25605 + C25606 + C25607) * C153454 * C153915 +
            (C32051 + C32052 + C32053) * C153454 * C153890) *
               C153527 * C153563 -
           (C31258 * C153890 + (C24794 + C24795 + C24796) * C153454 * C153915 +
            (C24185 + C24184 + C24183) * C153454 * C153926) *
               C153527 * C1223) *
              C1226 +
          ((C24197 * C153454 * C153926 +
            (C24793 + C24792 + C24791) * C153454 * C153915 +
            (C24800 + C24801 + C24802) * C153454 * C153890) *
               C153527 * C1223 -
           ((C24114 * C4957 + C26202 + C26202 + C153887 * C4963 +
             C24112 * C3443 + C26203 + C26203 + C24105 * C3451 +
             C24110 * C1459 + C26204 + C26204 + C24104 * C1469) *
                C153454 * C153890 +
            (C25610 + C25609 + C25608) * C153454 * C153915 +
            C25031 * C153454 * C153926) *
               C153527 * C153563) *
              C1227)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
            C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 + C24119 +
            C153887 * C354) *
               C153454 * C153926 +
           (C31259 + C31260 + C31261) * C153454 * C153915 + C31273 * C153890) *
              C153527 * C1310 -
          ((C32050 + C32049 + C32048) * C153454 * C153890 +
           (C32047 + C32046 + C32045) * C153454 * C153915 +
           (C24114 * C1319 + C24435 + C24435 + C153887 * C1329 + C24112 * C330 +
            C24436 + C24436 + C24105 * C354 + C24110 * C329 + C24437 + C24437 +
            C24104 * C353) *
               C153454 * C153926) *
              C153527 * C1311 +
          ((C24110 * C330 + C24438 + C24438 + C24104 * C354 + C24112 * C1319 +
            C24439 + C24439 + C24105 * C1329 + C24114 * C3127 + C24440 +
            C24440 + C153887 * C3135) *
               C153454 * C153926 +
           (C24110 * C1892 + C26945 + C26945 + C24104 * C1902 + C24112 * C4303 +
            C26944 + C26944 + C24105 * C4311 + C24114 * C5703 + C26943 +
            C26943 + C153887 * C5709) *
               C153454 * C153915 +
           (C24110 * C3441 + C30972 + C30972 + C24104 * C3449 + C24112 * C4959 +
            C30973 + C30973 + C24105 * C4965 + C24114 * C28650 + C30974 +
            C30974 + C153887 * C28654) *
               C153454 * C153890) *
              C153527 * C1312 -
          ((C24114 * C29442 + C32418 + C32418 + C153887 * C29444 +
            C24112 * C28650 + C32419 + C32419 + C24105 * C28654 +
            C24110 * C4959 + C32420 + C32420 + C24104 * C4965) *
               C153454 * C153890 +
           (C24114 * C29092 + C32421 + C32421 + C153887 * C29096 +
            C24112 * C5703 + C32422 + C32422 + C24105 * C5709 + C24110 * C4303 +
            C32423 + C32423 + C24104 * C4311) *
               C153454 * C153915 +
           (C24114 * C4723 + C25981 + C25981 + C153887 * C4729 +
            C24112 * C3127 + C25982 + C25982 + C24105 * C3135 + C24110 * C1319 +
            C25983 + C25983 + C24104 * C1329) *
               C153454 * C153926) *
              C153527 * C1313) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C153922 +
             C193 * C153903 + C194 * C153874) *
                C47609 +
            (C48049 + C48050 + C48051) * C47610 + C48069 * C153890) *
               C153527 * C1223 -
           ((C48808 + C48807 + C48806) * C153890 +
            (C48805 + C48804 + C48803) * C47610 +
            (C408 * C153874 + C409 * C153903 +
             (C134 * C329 + C374 + C374 + C153608 * C353) * C153922) *
                C47609) *
               C153527 * C153563) *
              C1225 +
          (((C409 * C153922 + C408 * C153903 + C407 * C153874) * C47609 +
            (C48809 + C48810 + C48811) * C47610 +
            (C48812 + C48813 + C48814) * C153890) *
               C153527 * C153563 -
           (C48070 * C153890 + (C48060 + C48059 + C48058) * C47610 +
            (C195 * C153874 + C194 * C153903 + C193 * C153922) * C47609) *
               C153527 * C1223) *
              C1226 +
          (((C194 * C153922 + C195 * C153903 + C196 * C153874) * C47609 +
            (C48507 + C48508 + C48509) * C47610 +
            (C48510 + C48511 + C48512) * C153890) *
               C153527 * C1223 -
           (((C134 * C1457 + C1473 + C1473 + C153608 * C1467) * C153874 +
             C7974 * C153903 + C7450 * C153922) *
                C153890 +
            (C1101 * C153874 + C1100 * C153903 + C1099 * C153922) * C47610 +
            (C406 * C153874 + C407 * C153903 + C408 * C153922) * C47609) *
               C153527 * C153563) *
              C1227)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153608 * C152) * C153922 +
            C193 * C153903 + C194 * C153874) *
               C47609 +
           (C48049 + C48050 + C48051) * C47610 + C48069 * C153890) *
              C153527 * C1310 -
          ((C48808 + C48807 + C48806) * C153890 +
           (C48805 + C48804 + C48803) * C47610 +
           (C408 * C153874 + C409 * C153903 +
            (C134 * C329 + C374 + C374 + C153608 * C353) * C153922) *
               C47609) *
              C153527 * C1311 +
          (((C134 * C330 + C375 + C375 + C153608 * C354) * C153922 +
            C410 * C153903 + C411 * C153874) *
               C47609 +
           (C9879 * C153922 + C7452 * C153903 + C7453 * C153874) * C47610 +
           (C9880 * C153922 + C7454 * C153903 + C7455 * C153874) * C153890) *
              C153527 * C1312 -
          (((C134 * C4957 + C8892 + C8892 + C153608 * C4963) * C153874 +
            (C134 * C4958 + C8893 + C8893 + C153608 * C4964) * C153903 +
            (C134 * C4959 + C8894 + C8894 + C153608 * C4965) * C153922) *
               C153890 +
           ((C134 * C4305 + C8895 + C8895 + C153608 * C4313) * C153874 +
            (C134 * C4304 + C8896 + C8896 + C153608 * C4312) * C153903 +
            (C134 * C4303 + C8897 + C8897 + C153608 * C4311) * C153922) *
               C47610 +
           ((C134 * C1317 + C1333 + C1333 + C153608 * C1327) * C153874 +
            (C134 * C1318 + C1334 + C1334 + C153608 * C1328) * C153903 +
            (C134 * C1319 + C1335 + C1335 + C153608 * C1329) * C153922) *
               C47609) *
              C153527 * C1313) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
             C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
             C153887 * C354) *
                C153454 * C47609 +
            (C52092 + C52093 + C52094) * C153454 * C47610 + C52106 * C153890) *
               C153527 * C1223 -
           ((C52880 + C52879 + C52878) * C153454 * C153890 +
            (C52877 + C52876 + C52875) * C153454 * C47610 +
            (C2825 * C1319 + C3158 + C3158 + C153887 * C1329 + C2823 * C330 +
             C3159 + C3159 + C153913 * C354 + C2821 * C329 + C3160 + C3160 +
             C153925 * C353) *
                C153454 * C47609) *
               C153527 * C153563) *
              C1225 +
          (((C3217 + C3216 + C3215) * C153454 * C47609 +
            (C4352 + C4353 + C4354) * C153454 * C47610 +
            (C52881 + C52882 + C52883) * C153454 * C153890) *
               C153527 * C153563 -
           (C52091 * C153890 + (C3529 + C3530 + C3531) * C153454 * C47610 +
            (C2896 + C2895 + C2894) * C153454 * C47609) *
               C153527 * C1223) *
              C1226 +
          ((C2908 * C153454 * C47609 +
            (C3528 + C3527 + C3526) * C153454 * C47610 +
            (C3535 + C3536 + C3537) * C153454 * C153890) *
               C153527 * C1223 -
           ((C2825 * C4957 + C4967 + C4967 + C153887 * C4963 + C2823 * C3443 +
             C4968 + C4968 + C153913 * C3451 + C2821 * C1459 + C4969 + C4969 +
             C153925 * C1469) *
                C153454 * C153890 +
            (C4357 + C4356 + C4355) * C153454 * C47610 +
            C3766 * C153454 * C47609) *
               C153527 * C153563) *
              C1227)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
            C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
            C153887 * C354) *
               C153454 * C47609 +
           (C52092 + C52093 + C52094) * C153454 * C47610 + C52106 * C153890) *
              C153527 * C1310 -
          ((C52880 + C52879 + C52878) * C153454 * C153890 +
           (C52877 + C52876 + C52875) * C153454 * C47610 +
           (C2825 * C1319 + C3158 + C3158 + C153887 * C1329 + C2823 * C330 +
            C3159 + C3159 + C153913 * C354 + C2821 * C329 + C3160 + C3160 +
            C153925 * C353) *
               C153454 * C47609) *
              C153527 * C1311 +
          ((C2821 * C330 + C3161 + C3161 + C153925 * C354 + C2823 * C1319 +
            C3162 + C3162 + C153913 * C1329 + C2825 * C3127 + C3163 + C3163 +
            C153887 * C3135) *
               C153454 * C47609 +
           (C2821 * C1892 + C5719 + C5719 + C153925 * C1902 + C2823 * C4303 +
            C5718 + C5718 + C153913 * C4311 + C2825 * C5703 + C5717 + C5717 +
            C153887 * C5709) *
               C153454 * C47610 +
           (C2821 * C3441 + C51811 + C51811 + C153925 * C3449 + C2823 * C4959 +
            C51812 + C51812 + C153913 * C4965 + C2825 * C28650 + C51813 +
            C51813 + C153887 * C28654) *
               C153454 * C153890) *
              C153527 * C1312 -
          ((C2825 * C29442 + C53248 + C53248 + C153887 * C29444 +
            C2823 * C28650 + C53249 + C53249 + C153913 * C28654 +
            C2821 * C4959 + C53250 + C53250 + C153925 * C4965) *
               C153454 * C153890 +
           (C2825 * C29092 + C53251 + C53251 + C153887 * C29096 +
            C2823 * C5703 + C53252 + C53252 + C153913 * C5709 + C2821 * C4303 +
            C53253 + C53253 + C153925 * C4311) *
               C153454 * C47610 +
           (C2825 * C4723 + C4737 + C4737 + C153887 * C4729 + C2823 * C3127 +
            C4738 + C4738 + C153913 * C3135 + C2821 * C1319 + C4739 + C4739 +
            C153925 * C1329) *
               C153454 * C47609) *
              C153527 * C1313) *
         C153492) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153608 * C152) * C153454 * C55662 +
            C55920 * C55663 + C55921 * C55664 + C55922 * C55665 +
            C55923 * C55666) *
               C153527 * C1223 -
           (C56373 * C55666 + C56357 * C55665 + C56356 * C55664 +
            C56355 * C55663 +
            (C134 * C329 + C374 + C374 + C153608 * C353) * C153454 * C55662) *
               C153527 * C153563) *
              C1225 +
          ((C409 * C153454 * C55662 + C56361 * C55663 + C56362 * C55664 +
            C56363 * C55665 + C56374 * C55666) *
               C153527 * C153563 -
           (C55930 * C55666 + C55929 * C55665 + C55928 * C55664 +
            C55927 * C55663 + C193 * C153454 * C55662) *
               C153527 * C1223) *
              C1226 +
          ((C194 * C153454 * C55662 + C56186 * C55663 + C56187 * C55664 +
            C56188 * C55665 + C56189 * C55666) *
               C153527 * C1223 -
           ((C134 * C9115 + C9130 + C9130 + C153608 * C9121) * C153454 *
                C55666 +
            C8525 * C153454 * C55665 + C7450 * C153454 * C55664 +
            C1099 * C153454 * C55663 + C408 * C153454 * C55662) *
               C153527 * C153563) *
              C1227)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C136 + C161 + C161 + C153608 * C152) * C153454 * C55662 +
           C55920 * C55663 + C55921 * C55664 + C55922 * C55665 +
           C55923 * C55666) *
              C153527 * C1310 -
          (C56373 * C55666 + C56357 * C55665 + C56356 * C55664 +
           C56355 * C55663 +
           (C134 * C329 + C374 + C374 + C153608 * C353) * C153454 * C55662) *
              C153527 * C1311 +
          ((C134 * C330 + C375 + C375 + C153608 * C354) * C153454 * C55662 +
           C9879 * C153454 * C55663 + C9880 * C153454 * C55664 +
           (C134 * C6305 + C9874 + C9874 + C153608 * C6317) * C153454 * C55665 +
           (C134 * C31195 + C55790 + C55790 + C153608 * C31199) * C153454 *
               C55666) *
              C153527 * C1312 -
          ((C134 * C32641 + C56579 + C56579 + C153608 * C32643) * C153454 *
               C55666 +
           (C134 * C30191 + C56580 + C56580 + C153608 * C30195) * C153454 *
               C55665 +
           (C134 * C4959 + C8894 + C8894 + C153608 * C4965) * C153454 * C55664 +
           (C134 * C4303 + C8897 + C8897 + C153608 * C4311) * C153454 * C55663 +
           (C134 * C1319 + C1335 + C1335 + C153608 * C1329) * C153454 *
               C55662) *
              C153527 * C1313) *
         C153492) /
            (p * q * std::sqrt(p + q));
    d2ee[190] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C134 * C136 + C161 + C161 + C153608 * C152) * C122 +
                 C193 * C123 + C194 * C124 + C195 * C125 + C196 * C126) *
                    C153626 * C2030 -
                (C619 * C126 + C620 * C125 + C621 * C124 + C622 * C123 +
                 (C134 * C542 + C587 + C587 + C153608 * C566) * C122) *
                    C153626 * C153591) *
                   C153837 +
               (((C134 * C1057 + C1076 + C1076 + C153608 * C1069) * C122 +
                 C1098 * C123 + C1099 * C124 + C1100 * C125 + C1101 * C126) *
                    C153626 * C153591 -
                (C406 * C126 + C407 * C125 + C408 * C124 + C409 * C123 +
                 (C134 * C329 + C374 + C374 + C153608 * C353) * C122) *
                    C153626 * C2030) *
                   C153563) *
                  C153829 +
              (((C622 * C122 + C621 * C123 + C620 * C124 + C619 * C125 +
                 C895 * C126) *
                    C153626 * C153591 -
                (C197 * C126 + C196 * C125 + C195 * C124 + C194 * C123 +
                 C193 * C122) *
                    C153626 * C2030) *
                   C153837 +
               ((C409 * C122 + C408 * C123 + C407 * C124 + C406 * C125 +
                 C762 * C126) *
                    C153626 * C2030 -
                ((C134 * C1062 + C1089 + C1089 + C153608 * C1074) * C126 +
                 C1101 * C125 + C1100 * C124 + C1099 * C123 + C1098 * C122) *
                    C153626 * C153591) *
                   C153563) *
                  C153498) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
                  C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 +
                  C2830 + C153887 * C354) *
                     C2818 +
                 (C2894 + C2895 + C2896) * C2819 + C2908 * C153874) *
                    C153626 * C2030 -
                (C4004 * C153874 + (C3529 + C3530 + C3531) * C2819 +
                 (C2825 * C1892 + C3472 + C3472 + C153887 * C1902 +
                  C2823 * C1057 + C3473 + C3473 + C153913 * C1069 +
                  C2821 * C542 + C3474 + C3474 + C153925 * C566) *
                     C2818) *
                    C153626 * C153591) *
                   C153837 +
               (((C2821 * C1057 + C4316 + C4316 + C153925 * C1069 +
                  C2823 * C1892 + C4317 + C4317 + C153913 * C1902 +
                  C2825 * C4303 + C4318 + C4318 + C153887 * C4311) *
                     C2818 +
                 (C4352 + C4353 + C4354) * C2819 +
                 (C4355 + C4356 + C4357) * C153874) *
                    C153626 * C153591 -
                (C3766 * C153874 + (C3215 + C3216 + C3217) * C2819 +
                 (C2825 * C1319 + C3158 + C3158 + C153887 * C1329 +
                  C2823 * C330 + C3159 + C3159 + C153913 * C354 + C2821 * C329 +
                  C3160 + C3160 + C153925 * C353) *
                     C2818) *
                    C153626 * C2030) *
                   C153563) *
                  C153829 +
              ((((C3531 + C3530 + C3529) * C2818 +
                 (C3528 + C3527 + C3526) * C2819 +
                 (C4011 + C4012 + C4013) * C153874) *
                    C153626 * C153591 -
                (C2909 * C153874 + (C2899 + C2898 + C2897) * C2819 +
                 (C2896 + C2895 + C2894) * C2818) *
                    C153626 * C2030) *
                   C153837 +
               (((C3217 + C3216 + C3215) * C2818 +
                 (C3214 + C3213 + C3212) * C2819 +
                 (C3773 + C3774 + C3775) * C153874) *
                    C153626 * C2030 -
                ((C2825 * C4306 + C4337 + C4337 + C153887 * C4314 +
                  C2823 * C1889 + C4338 + C4338 + C153913 * C1899 +
                  C2821 * C1060 + C4339 + C4339 + C153925 * C1072) *
                     C153874 +
                 (C4357 + C4356 + C4355) * C2819 +
                 (C4354 + C4353 + C4352) * C2818) *
                    C153626 * C153591) *
                   C153563) *
                  C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C153608 * C152) * C2818 +
              C193 * C2819 + C194 * C153874) *
                 C153926 +
             (C7742 + C7688 + C7689) * C153915 + C7751 * C153890) *
                C2030 -
            (C10482 * C153890 + (C7693 + C7692 + C7743) * C153915 +
             (C7689 + C7688 + C7742) * C153926) *
                C153591) *
               C153837 +
           (((C8526 + C8494 + C8495) * C153926 +
             (C8527 + C8498 + C8499) * C153915 +
             (C9137 + C9127 + C9128) * C153890) *
                C153591 -
            (C9134 * C153890 + (C8495 + C8494 + C8526) * C153915 +
             (C408 * C153874 + C409 * C2819 +
              (C134 * C329 + C374 + C374 + C153608 * C353) * C2818) *
                 C153926) *
                C2030) *
               C153563) *
              C153829 +
          ((((C7707 + C7708 + C7709) * C153926 +
             (C7710 + C7711 + C7712) * C153915 +
             (C7747 + C7748 + C7749) * C153890) *
                C153591 -
            (C7733 * C153890 + (C7709 + C7708 + C7707) * C153915 +
             (C195 * C153874 + C194 * C2819 + C193 * C2818) * C153926) *
                C2030) *
               C153837 +
           (((C409 * C2818 + C408 * C2819 + C407 * C153874) * C153926 +
             (C8507 + C8508 + C8509) * C153915 +
             (C8510 + C8511 + C8512) * C153890) *
                C2030 -
            (((C134 * C8488 + C8513 + C8513 + C153608 * C8490) * C153874 +
              C8525 * C2819 + C8524 * C2818) *
                 C153890 +
             (C8512 + C8511 + C8510) * C153915 +
             (C8509 + C8508 + C8507) * C153926) *
                C153591) *
               C153563) *
              C153498)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
              C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 +
              C24119 + C153887 * C354) *
                 C153922 +
             (C24183 + C24184 + C24185) * C153903 + C24197 * C153874) *
                C153626 * C2030 -
            (C25269 * C153874 + (C24794 + C24795 + C24796) * C153903 +
             (C24114 * C1892 + C24737 + C24737 + C153887 * C1902 +
              C24112 * C1057 + C24738 + C24738 + C24105 * C1069 +
              C24110 * C542 + C24739 + C24739 + C24104 * C566) *
                 C153922) *
                C153626 * C153591) *
               C153837 +
           (((C24110 * C1057 + C25569 + C25569 + C24104 * C1069 +
              C24112 * C1892 + C25570 + C25570 + C24105 * C1902 +
              C24114 * C4303 + C25571 + C25571 + C153887 * C4311) *
                 C153922 +
             (C25605 + C25606 + C25607) * C153903 +
             (C25608 + C25609 + C25610) * C153874) *
                C153626 * C153591 -
            (C25031 * C153874 + (C24492 + C24493 + C24494) * C153903 +
             (C24114 * C1319 + C24435 + C24435 + C153887 * C1329 +
              C24112 * C330 + C24436 + C24436 + C24105 * C354 + C24110 * C329 +
              C24437 + C24437 + C24104 * C353) *
                 C153922) *
                C153626 * C2030) *
               C153563) *
              C153829 +
          ((((C24796 + C24795 + C24794) * C153922 +
             (C24793 + C24792 + C24791) * C153903 +
             (C25276 + C25277 + C25278) * C153874) *
                C153626 * C153591 -
            (C24198 * C153874 + (C24188 + C24187 + C24186) * C153903 +
             (C24185 + C24184 + C24183) * C153922) *
                C153626 * C2030) *
               C153837 +
           (((C24494 + C24493 + C24492) * C153922 +
             (C24491 + C24490 + C24489) * C153903 +
             (C25038 + C25039 + C25040) * C153874) *
                C153626 * C2030 -
            ((C24114 * C4306 + C25590 + C25590 + C153887 * C4314 +
              C24112 * C1889 + C25591 + C25591 + C24105 * C1899 +
              C24110 * C1060 + C25592 + C25592 + C24104 * C1072) *
                 C153874 +
             (C25610 + C25609 + C25608) * C153903 +
             (C25607 + C25606 + C25605) * C153922) *
                C153626 * C153591) *
               C153563) *
              C153498)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C28350 * C136 + C28361 + C28361 + C28344 * C152 + C28352 * C329 +
             C28362 + C28362 + C28345 * C353 + C28354 * C330 + C28363 + C28363 +
             C28346 * C354 + C28356 * C1319 + C28364 + C28364 + C28347 * C1329 +
             C28358 * C3127 + C28365 + C28365 + C28348 * C3135) *
                C153454 * C153626 * C2030 -
            (C28358 * C5703 + C28657 + C28657 + C28348 * C5709 +
             C28356 * C4303 + C28658 + C28658 + C28347 * C4311 +
             C28354 * C1892 + C28659 + C28659 + C28346 * C1902 +
             C28352 * C1057 + C28660 + C28660 + C28345 * C1069 + C28350 * C542 +
             C28661 + C28661 + C28344 * C566) *
                C153454 * C153626 * C153591) *
               C153837 +
           ((C28350 * C1057 + C29099 + C29099 + C28344 * C1069 +
             C28352 * C1892 + C29100 + C29100 + C28345 * C1902 +
             C28354 * C4303 + C29101 + C29101 + C28346 * C4311 +
             C28356 * C5703 + C29102 + C29102 + C28347 * C5709 +
             C28358 * C29092 + C29103 + C29103 + C28348 * C29096) *
                C153454 * C153626 * C153591 -
            (C28358 * C4723 + C28509 + C28509 + C28348 * C4729 +
             C28356 * C3127 + C28510 + C28510 + C28347 * C3135 +
             C28354 * C1319 + C28511 + C28511 + C28346 * C1329 + C28352 * C330 +
             C28512 + C28512 + C28345 * C354 + C28350 * C329 + C28513 + C28513 +
             C28344 * C353) *
                C153454 * C153626 * C2030) *
               C153563) *
              C153829 +
          (((C28350 * C541 + C28667 + C28667 + C28344 * C565 + C28352 * C1058 +
             C28668 + C28668 + C28345 * C1070 + C28354 * C1891 + C28669 +
             C28669 + C28346 * C1901 + C28356 * C4304 + C28670 + C28670 +
             C28347 * C4312 + C28358 * C5702 + C28671 + C28671 +
             C28348 * C5708) *
                C153454 * C153626 * C153591 -
            (C28358 * C3128 + C28366 + C28366 + C28348 * C3136 +
             C28356 * C1318 + C28367 + C28367 + C28347 * C1328 + C28354 * C331 +
             C28368 + C28368 + C28346 * C355 + C28352 * C328 + C28369 + C28369 +
             C28345 * C352 + C28350 * C137 + C28370 + C28370 + C28344 * C153) *
                C153454 * C153626 * C2030) *
               C153837 +
           ((C28350 * C328 + C28519 + C28519 + C28344 * C352 + C28352 * C331 +
             C28520 + C28520 + C28345 * C355 + C28354 * C1318 + C28521 +
             C28521 + C28346 * C1328 + C28356 * C3128 + C28522 + C28522 +
             C28347 * C3136 + C28358 * C4722 + C28523 + C28523 +
             C28348 * C4728) *
                C153454 * C153626 * C2030 -
            (C28358 * C29093 + C29104 + C29104 + C28348 * C29097 +
             C28356 * C5702 + C29105 + C29105 + C28347 * C5708 +
             C28354 * C4304 + C29106 + C29106 + C28346 * C4312 +
             C28352 * C1891 + C29107 + C29107 + C28345 * C1901 +
             C28350 * C1058 + C29108 + C29108 + C28344 * C1070) *
                C153454 * C153626 * C153591) *
               C153563) *
              C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
              C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 +
              C24119 + C153887 * C354) *
                 C153454 * C153926 +
             (C31259 + C31260 + C31261) * C153454 * C153915 +
             C31273 * C153890) *
                C2030 -
            (C34027 * C153890 + (C31264 + C31263 + C31262) * C153454 * C153915 +
             (C31261 + C31260 + C31259) * C153454 * C153926) *
                C153591) *
               C153837 +
           (((C32045 + C32046 + C32047) * C153454 * C153926 +
             (C32048 + C32049 + C32050) * C153454 * C153915 +
             (C32663 + C32664 + C32665) * C153454 * C153890) *
                C153591 -
            (C32662 * C153890 + (C32047 + C32046 + C32045) * C153454 * C153915 +
             (C24114 * C1319 + C24435 + C24435 + C153887 * C1329 +
              C24112 * C330 + C24436 + C24436 + C24105 * C354 + C24110 * C329 +
              C24437 + C24437 + C24104 * C353) *
                 C153454 * C153926) *
                C2030) *
               C153563) *
              C153829 +
          ((((C24796 + C24795 + C24794) * C153454 * C153926 +
             (C24797 + C24798 + C24799) * C153454 * C153915 +
             (C31268 + C31269 + C31270) * C153454 * C153890) *
                C153591 -
            (C31258 * C153890 + (C24794 + C24795 + C24796) * C153454 * C153915 +
             (C24185 + C24184 + C24183) * C153454 * C153926) *
                C2030) *
               C153837 +
           (((C24494 + C24493 + C24492) * C153454 * C153926 +
             (C25605 + C25606 + C25607) * C153454 * C153915 +
             (C32051 + C32052 + C32053) * C153454 * C153890) *
                C2030 -
            ((C24114 * C31999 + C32024 + C32024 + C153887 * C32001 +
              C24112 * C6303 + C32025 + C32025 + C24105 * C6315 +
              C24110 * C6304 + C32026 + C32026 + C24104 * C6316) *
                 C153454 * C153890 +
             (C32053 + C32052 + C32051) * C153454 * C153915 +
             (C25607 + C25606 + C25605) * C153454 * C153926) *
                C153591) *
               C153563) *
              C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C153608 * C152) * C153922 +
              C193 * C153903 + C194 * C153874) *
                 C47609 +
             (C48049 + C48050 + C48051) * C47610 + C48069 * C153890) *
                C2030 -
            (C50720 * C153890 + (C48054 + C48053 + C48052) * C47610 +
             (C48051 + C48050 + C48049) * C47609) *
                C153591) *
               C153837 +
           (((C48803 + C48804 + C48805) * C47609 +
             (C48806 + C48807 + C48808) * C47610 +
             (C49397 + C49398 + C49399) * C153890) *
                C153591 -
            (C49401 * C153890 + (C48805 + C48804 + C48803) * C47610 +
             (C408 * C153874 + C409 * C153903 +
              (C134 * C329 + C374 + C374 + C153608 * C353) * C153922) *
                 C47609) *
                C2030) *
               C153563) *
              C153829 +
          ((((C48058 + C48059 + C48060) * C47609 +
             (C48061 + C48062 + C48063) * C47610 +
             (C48064 + C48065 + C48066) * C153890) *
                C153591 -
            (C48070 * C153890 + (C48060 + C48059 + C48058) * C47610 +
             (C195 * C153874 + C194 * C153903 + C193 * C153922) * C47609) *
                C2030) *
               C153837 +
           (((C409 * C153922 + C408 * C153903 + C407 * C153874) * C47609 +
             (C48809 + C48810 + C48811) * C47610 +
             (C48812 + C48813 + C48814) * C153890) *
                C2030 -
            (((C134 * C8488 + C8513 + C8513 + C153608 * C8490) * C153874 +
              C8525 * C153903 + C8524 * C153922) *
                 C153890 +
             (C48814 + C48813 + C48812) * C47610 +
             (C48811 + C48810 + C48809) * C47609) *
                C153591) *
               C153563) *
              C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
              C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
              C153887 * C354) *
                 C153454 * C47609 +
             (C52092 + C52093 + C52094) * C153454 * C47610 + C52106 * C153890) *
                C2030 -
            (C54848 * C153890 + (C52097 + C52096 + C52095) * C153454 * C47610 +
             (C52094 + C52093 + C52092) * C153454 * C47609) *
                C153591) *
               C153837 +
           (((C52875 + C52876 + C52877) * C153454 * C47609 +
             (C52878 + C52879 + C52880) * C153454 * C47610 +
             (C53490 + C53491 + C53492) * C153454 * C153890) *
                C153591 -
            (C53489 * C153890 + (C52877 + C52876 + C52875) * C153454 * C47610 +
             (C2825 * C1319 + C3158 + C3158 + C153887 * C1329 + C2823 * C330 +
              C3159 + C3159 + C153913 * C354 + C2821 * C329 + C3160 + C3160 +
              C153925 * C353) *
                 C153454 * C47609) *
                C2030) *
               C153563) *
              C153829 +
          ((((C3531 + C3530 + C3529) * C153454 * C47609 +
             (C3532 + C3533 + C3534) * C153454 * C47610 +
             (C52101 + C52102 + C52103) * C153454 * C153890) *
                C153591 -
            (C52091 * C153890 + (C3529 + C3530 + C3531) * C153454 * C47610 +
             (C2896 + C2895 + C2894) * C153454 * C47609) *
                C2030) *
               C153837 +
           (((C3217 + C3216 + C3215) * C153454 * C47609 +
             (C4352 + C4353 + C4354) * C153454 * C47610 +
             (C52881 + C52882 + C52883) * C153454 * C153890) *
                C2030 -
            ((C2825 * C31999 + C52854 + C52854 + C153887 * C32001 +
              C2823 * C6303 + C52855 + C52855 + C153913 * C6315 +
              C2821 * C6304 + C52856 + C52856 + C153925 * C6316) *
                 C153454 * C153890 +
             (C52883 + C52882 + C52881) * C153454 * C47610 +
             (C4354 + C4353 + C4352) * C153454 * C47609) *
                C153591) *
               C153563) *
              C153498)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C153454 * C55662 +
             C55920 * C55663 + C55921 * C55664 + C55922 * C55665 +
             C55923 * C55666) *
                C2030 -
            (C55940 * C55666 + C55923 * C55665 + C55922 * C55664 +
             C55921 * C55663 + C55920 * C55662) *
                C153591) *
               C153837 +
           ((C56355 * C55662 + C56356 * C55663 + C56357 * C55664 +
             C56373 * C55665 + C56712 * C55666) *
                C153591 -
            (C56373 * C55666 + C56357 * C55665 + C56356 * C55664 +
             C56355 * C55663 +
             (C134 * C329 + C374 + C374 + C153608 * C353) * C153454 * C55662) *
                C2030) *
               C153563) *
              C153829 +
          (((C55927 * C55662 + C55928 * C55663 + C55929 * C55664 +
             C55930 * C55665 + C55941 * C55666) *
                C153591 -
            (C55930 * C55666 + C55929 * C55665 + C55928 * C55664 +
             C55927 * C55663 + C193 * C153454 * C55662) *
                C2030) *
               C153837 +
           ((C409 * C153454 * C55662 + C56361 * C55663 + C56362 * C55664 +
             C56363 * C55665 + C56374 * C55666) *
                C2030 -
            ((C134 * C56351 + C56366 + C56366 + C153608 * C56353) * C153454 *
                 C55666 +
             C56374 * C55665 + C56363 * C55664 + C56362 * C55663 +
             C56361 * C55662) *
                C153591) *
               C153563) *
              C153498)) /
            (p * q * std::sqrt(p + q));
    d2ee[191] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C136 + C161 + C161 + C153608 * C152) * C122 +
                C193 * C123 + C194 * C124 + C195 * C125 + C196 * C126) *
                   C153626 * C153910 -
               (C619 * C126 + C620 * C125 + C621 * C124 + C622 * C123 +
                (C134 * C542 + C587 + C587 + C153608 * C566) * C122) *
                   C153626 * C153911 +
               ((C134 * C543 + C588 + C588 + C153608 * C567) * C122 +
                C623 * C123 + C624 * C124 + C625 * C125 + C626 * C126) *
                   C153626 * C2546) *
                  C153837 +
              (((C134 * C1057 + C1076 + C1076 + C153608 * C1069) * C122 +
                C1098 * C123 + C1099 * C124 + C1100 * C125 + C1101 * C126) *
                   C153626 * C153911 -
               (C406 * C126 + C407 * C125 + C408 * C124 + C409 * C123 +
                (C134 * C329 + C374 + C374 + C153608 * C353) * C122) *
                   C153626 * C153910 -
               ((C134 * C1457 + C1473 + C1473 + C153608 * C1467) * C126 +
                (C134 * C1458 + C1474 + C1474 + C153608 * C1468) * C125 +
                (C134 * C1459 + C1475 + C1475 + C153608 * C1469) * C124 +
                (C134 * C1460 + C1476 + C1476 + C153608 * C1470) * C123 +
                (C134 * C1461 + C1477 + C1477 + C153608 * C1471) * C122) *
                   C153626 * C2546) *
                  C153563) *
             C153492 +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
                 C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
                 C153887 * C354) *
                    C2818 +
                (C2894 + C2895 + C2896) * C2819 + C2908 * C153874) *
                   C153626 * C153910 -
               (C4004 * C153874 + (C3529 + C3530 + C3531) * C2819 +
                (C2825 * C1892 + C3472 + C3472 + C153887 * C1902 +
                 C2823 * C1057 + C3473 + C3473 + C153913 * C1069 +
                 C2821 * C542 + C3474 + C3474 + C153925 * C566) *
                    C2818) *
                   C153626 * C153911 +
               ((C2821 * C543 + C3475 + C3475 + C153925 * C567 + C2823 * C1461 +
                 C3476 + C3476 + C153913 * C1471 + C2825 * C3441 + C3477 +
                 C3477 + C153887 * C3449) *
                    C2818 +
                (C3532 + C3533 + C3534) * C2819 +
                (C3535 + C3536 + C3537) * C153874) *
                   C153626 * C2546) *
                  C153837 +
              (((C2821 * C1057 + C4316 + C4316 + C153925 * C1069 +
                 C2823 * C1892 + C4317 + C4317 + C153913 * C1902 +
                 C2825 * C4303 + C4318 + C4318 + C153887 * C4311) *
                    C2818 +
                (C4352 + C4353 + C4354) * C2819 +
                (C4355 + C4356 + C4357) * C153874) *
                   C153626 * C153911 -
               (C3766 * C153874 + (C3215 + C3216 + C3217) * C2819 +
                (C2825 * C1319 + C3158 + C3158 + C153887 * C1329 +
                 C2823 * C330 + C3159 + C3159 + C153913 * C354 + C2821 * C329 +
                 C3160 + C3160 + C153925 * C353) *
                    C2818) *
                   C153626 * C153910 -
               ((C2825 * C4957 + C4967 + C4967 + C153887 * C4963 +
                 C2823 * C3443 + C4968 + C4968 + C153913 * C3451 +
                 C2821 * C1459 + C4969 + C4969 + C153925 * C1469) *
                    C153874 +
                (C2825 * C4958 + C4970 + C4970 + C153887 * C4964 +
                 C2823 * C3442 + C4971 + C4971 + C153913 * C3450 +
                 C2821 * C1460 + C4972 + C4972 + C153925 * C1470) *
                    C2819 +
                (C2825 * C4959 + C4973 + C4973 + C153887 * C4965 +
                 C2823 * C3441 + C4974 + C4974 + C153913 * C3449 +
                 C2821 * C1461 + C4975 + C4975 + C153925 * C1471) *
                    C2818) *
                   C153626 * C2546) *
                  C153563) *
             C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C2818 +
             C193 * C2819 + C194 * C153874) *
                C153926 +
            (C7742 + C7688 + C7689) * C153915 + C7751 * C153890) *
               C153910 -
           (C10482 * C153890 + (C7693 + C7692 + C7743) * C153915 +
            (C7689 + C7688 + C7742) * C153926) *
               C153911 +
           (C7751 * C153926 + (C7746 + C7745 + C7744) * C153915 +
            (C10486 + C10477 + C10478) * C153890) *
               C2546) *
              C153837 +
          (((C8526 + C8494 + C8495) * C153926 +
            (C8527 + C8498 + C8499) * C153915 +
            (C9137 + C9127 + C9128) * C153890) *
               C153911 -
           (C9134 * C153890 + (C8495 + C8494 + C8526) * C153915 +
            (C408 * C153874 + C409 * C2819 +
             (C134 * C329 + C374 + C374 + C153608 * C353) * C2818) *
                C153926) *
               C153910 -
           (((C134 * C9115 + C9130 + C9130 + C153608 * C9121) * C153874 +
             (C134 * C9116 + C9131 + C9131 + C153608 * C9122) * C2819 +
             (C134 * C9117 + C9132 + C9132 + C153608 * C9123) * C2818) *
                C153890 +
            (C9128 + C9127 + C9137) * C153915 + C9134 * C153926) *
               C2546) *
              C153563) *
         C153492) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
             C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 + C24119 +
             C153887 * C354) *
                C153922 +
            (C24183 + C24184 + C24185) * C153903 + C24197 * C153874) *
               C153626 * C153910 -
           (C25269 * C153874 + (C24794 + C24795 + C24796) * C153903 +
            (C24114 * C1892 + C24737 + C24737 + C153887 * C1902 +
             C24112 * C1057 + C24738 + C24738 + C24105 * C1069 + C24110 * C542 +
             C24739 + C24739 + C24104 * C566) *
                C153922) *
               C153626 * C153911 +
           ((C24110 * C543 + C24740 + C24740 + C24104 * C567 + C24112 * C1461 +
             C24741 + C24741 + C24105 * C1471 + C24114 * C3441 + C24742 +
             C24742 + C153887 * C3449) *
                C153922 +
            (C24797 + C24798 + C24799) * C153903 +
            (C24800 + C24801 + C24802) * C153874) *
               C153626 * C2546) *
              C153837 +
          (((C24110 * C1057 + C25569 + C25569 + C24104 * C1069 +
             C24112 * C1892 + C25570 + C25570 + C24105 * C1902 +
             C24114 * C4303 + C25571 + C25571 + C153887 * C4311) *
                C153922 +
            (C25605 + C25606 + C25607) * C153903 +
            (C25608 + C25609 + C25610) * C153874) *
               C153626 * C153911 -
           (C25031 * C153874 + (C24492 + C24493 + C24494) * C153903 +
            (C24114 * C1319 + C24435 + C24435 + C153887 * C1329 +
             C24112 * C330 + C24436 + C24436 + C24105 * C354 + C24110 * C329 +
             C24437 + C24437 + C24104 * C353) *
                C153922) *
               C153626 * C153910 -
           ((C24114 * C4957 + C26202 + C26202 + C153887 * C4963 +
             C24112 * C3443 + C26203 + C26203 + C24105 * C3451 +
             C24110 * C1459 + C26204 + C26204 + C24104 * C1469) *
                C153874 +
            (C24114 * C4958 + C26205 + C26205 + C153887 * C4964 +
             C24112 * C3442 + C26206 + C26206 + C24105 * C3450 +
             C24110 * C1460 + C26207 + C26207 + C24104 * C1470) *
                C153903 +
            (C24114 * C4959 + C26208 + C26208 + C153887 * C4965 +
             C24112 * C3441 + C26209 + C26209 + C24105 * C3449 +
             C24110 * C1461 + C26210 + C26210 + C24104 * C1471) *
                C153922) *
               C153626 * C2546) *
              C153563) *
         C153492) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C28350 * C136 + C28361 + C28361 + C28344 * C152 + C28352 * C329 +
            C28362 + C28362 + C28345 * C353 + C28354 * C330 + C28363 + C28363 +
            C28346 * C354 + C28356 * C1319 + C28364 + C28364 + C28347 * C1329 +
            C28358 * C3127 + C28365 + C28365 + C28348 * C3135) *
               C153454 * C153626 * C153910 -
           (C28358 * C5703 + C28657 + C28657 + C28348 * C5709 + C28356 * C4303 +
            C28658 + C28658 + C28347 * C4311 + C28354 * C1892 + C28659 +
            C28659 + C28346 * C1902 + C28352 * C1057 + C28660 + C28660 +
            C28345 * C1069 + C28350 * C542 + C28661 + C28661 + C28344 * C566) *
               C153454 * C153626 * C153911 +
           (C28350 * C543 + C28662 + C28662 + C28344 * C567 + C28352 * C1461 +
            C28663 + C28663 + C28345 * C1471 + C28354 * C3441 + C28664 +
            C28664 + C28346 * C3449 + C28356 * C4959 + C28665 + C28665 +
            C28347 * C4965 + C28358 * C28650 + C28666 + C28666 +
            C28348 * C28654) *
               C153454 * C153626 * C2546) *
              C153837 +
          ((C28350 * C1057 + C29099 + C29099 + C28344 * C1069 + C28352 * C1892 +
            C29100 + C29100 + C28345 * C1902 + C28354 * C4303 + C29101 +
            C29101 + C28346 * C4311 + C28356 * C5703 + C29102 + C29102 +
            C28347 * C5709 + C28358 * C29092 + C29103 + C29103 +
            C28348 * C29096) *
               C153454 * C153626 * C153911 -
           (C28358 * C4723 + C28509 + C28509 + C28348 * C4729 + C28356 * C3127 +
            C28510 + C28510 + C28347 * C3135 + C28354 * C1319 + C28511 +
            C28511 + C28346 * C1329 + C28352 * C330 + C28512 + C28512 +
            C28345 * C354 + C28350 * C329 + C28513 + C28513 + C28344 * C353) *
               C153454 * C153626 * C153910 -
           (C28358 * C29442 + C29446 + C29446 + C28348 * C29444 +
            C28356 * C28650 + C29447 + C29447 + C28347 * C28654 +
            C28354 * C4959 + C29448 + C29448 + C28346 * C4965 + C28352 * C3441 +
            C29449 + C29449 + C28345 * C3449 + C28350 * C1461 + C29450 +
            C29450 + C28344 * C1471) *
               C153454 * C153626 * C2546) *
              C153563) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
             C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 + C24119 +
             C153887 * C354) *
                C153454 * C153926 +
            (C31259 + C31260 + C31261) * C153454 * C153915 + C31273 * C153890) *
               C153910 -
           (C34027 * C153890 + (C31264 + C31263 + C31262) * C153454 * C153915 +
            (C31261 + C31260 + C31259) * C153454 * C153926) *
               C153911 +
           (C31273 * C153926 + (C31267 + C31266 + C31265) * C153454 * C153915 +
            (C34031 + C34032 + C34033) * C153454 * C153890) *
               C2546) *
              C153837 +
          (((C32045 + C32046 + C32047) * C153454 * C153926 +
            (C32048 + C32049 + C32050) * C153454 * C153915 +
            (C32663 + C32664 + C32665) * C153454 * C153890) *
               C153911 -
           (C32662 * C153890 + (C32047 + C32046 + C32045) * C153454 * C153915 +
            (C24114 * C1319 + C24435 + C24435 + C153887 * C1329 +
             C24112 * C330 + C24436 + C24436 + C24105 * C354 + C24110 * C329 +
             C24437 + C24437 + C24104 * C353) *
                C153454 * C153926) *
               C153910 -
           ((C24114 * C32641 + C32652 + C32652 + C153887 * C32643 +
             C24112 * C31195 + C32653 + C32653 + C24105 * C31199 +
             C24110 * C9117 + C32654 + C32654 + C24104 * C9123) *
                C153454 * C153890 +
            (C32665 + C32664 + C32663) * C153454 * C153915 + C32662 * C153926) *
               C2546) *
              C153563) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C153922 +
             C193 * C153903 + C194 * C153874) *
                C47609 +
            (C48049 + C48050 + C48051) * C47610 + C48069 * C153890) *
               C153910 -
           (C50720 * C153890 + (C48054 + C48053 + C48052) * C47610 +
            (C48051 + C48050 + C48049) * C47609) *
               C153911 +
           (C48069 * C47609 + (C48057 + C48056 + C48055) * C47610 +
            (C50717 + C50718 + C50719) * C153890) *
               C2546) *
              C153837 +
          (((C48803 + C48804 + C48805) * C47609 +
            (C48806 + C48807 + C48808) * C47610 +
            (C49397 + C49398 + C49399) * C153890) *
               C153911 -
           (C49401 * C153890 + (C48805 + C48804 + C48803) * C47610 +
            (C408 * C153874 + C409 * C153903 +
             (C134 * C329 + C374 + C374 + C153608 * C353) * C153922) *
                C47609) *
               C153910 -
           (((C134 * C9115 + C9130 + C9130 + C153608 * C9121) * C153874 +
             (C134 * C9116 + C9131 + C9131 + C153608 * C9122) * C153903 +
             (C134 * C9117 + C9132 + C9132 + C153608 * C9123) * C153922) *
                C153890 +
            (C49399 + C49398 + C49397) * C47610 + C49401 * C47609) *
               C2546) *
              C153563) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
             C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
             C153887 * C354) *
                C153454 * C47609 +
            (C52092 + C52093 + C52094) * C153454 * C47610 + C52106 * C153890) *
               C153910 -
           (C54848 * C153890 + (C52097 + C52096 + C52095) * C153454 * C47610 +
            (C52094 + C52093 + C52092) * C153454 * C47609) *
               C153911 +
           (C52106 * C47609 + (C52100 + C52099 + C52098) * C153454 * C47610 +
            (C54852 + C54853 + C54854) * C153454 * C153890) *
               C2546) *
              C153837 +
          (((C52875 + C52876 + C52877) * C153454 * C47609 +
            (C52878 + C52879 + C52880) * C153454 * C47610 +
            (C53490 + C53491 + C53492) * C153454 * C153890) *
               C153911 -
           (C53489 * C153890 + (C52877 + C52876 + C52875) * C153454 * C47610 +
            (C2825 * C1319 + C3158 + C3158 + C153887 * C1329 + C2823 * C330 +
             C3159 + C3159 + C153913 * C354 + C2821 * C329 + C3160 + C3160 +
             C153925 * C353) *
                C153454 * C47609) *
               C153910 -
           ((C2825 * C32641 + C53479 + C53479 + C153887 * C32643 +
             C2823 * C31195 + C53480 + C53480 + C153913 * C31199 +
             C2821 * C9117 + C53481 + C53481 + C153925 * C9123) *
                C153454 * C153890 +
            (C53492 + C53491 + C53490) * C153454 * C47610 + C53489 * C47609) *
               C2546) *
              C153563) *
         C153492) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153608 * C152) * C153454 * C55662 +
            C55920 * C55663 + C55921 * C55664 + C55922 * C55665 +
            C55923 * C55666) *
               C153910 -
           (C55940 * C55666 + C55923 * C55665 + C55922 * C55664 +
            C55921 * C55663 + C55920 * C55662) *
               C153911 +
           (C55921 * C55662 + C55922 * C55663 + C55923 * C55664 +
            C55940 * C55665 + C57469 * C55666) *
               C2546) *
              C153837 +
          ((C56355 * C55662 + C56356 * C55663 + C56357 * C55664 +
            C56373 * C55665 + C56712 * C55666) *
               C153911 -
           (C56373 * C55666 + C56357 * C55665 + C56356 * C55664 +
            C56355 * C55663 +
            (C134 * C329 + C374 + C374 + C153608 * C353) * C153454 * C55662) *
               C153910 -
           ((C134 * C56702 + C56708 + C56708 + C153608 * C56704) * C153454 *
                C55666 +
            C56712 * C55665 + C56373 * C55664 + C56357 * C55663 +
            C56356 * C55662) *
               C2546) *
              C153563) *
         C153492) /
            (p * q * std::sqrt(p + q));
    d2ee[192] +=
        (-0.25 * std::pow(Pi, 2.5) *
             ((((C134 * C136 + C161 + C161 + C153608 * C152) * C122 +
                C193 * C123 + C194 * C124 + C195 * C125 + C196 * C126) *
                   C153626 * C2030 -
               (C619 * C126 + C620 * C125 + C621 * C124 + C622 * C123 +
                (C134 * C542 + C587 + C587 + C153608 * C566) * C122) *
                   C153626 * C153591) *
                  C153511 * C1225 +
              ((C622 * C122 + C621 * C123 + C620 * C124 + C619 * C125 +
                C895 * C126) *
                   C153626 * C153591 -
               (C197 * C126 + C196 * C125 + C195 * C124 + C194 * C123 +
                C193 * C122) *
                   C153626 * C2030) *
                  C153511 * C1226 +
              ((C194 * C122 + C195 * C123 + C196 * C124 + C197 * C125 +
                C198 * C126) *
                   C153626 * C2030 -
               ((C134 * C886 + C892 + C892 + C153608 * C888) * C126 +
                C895 * C125 + C619 * C124 + C620 * C123 + C621 * C122) *
                   C153626 * C153591) *
                  C153511 * C1227) -
         0.25 * std::pow(Pi, 2.5) *
             ((((C134 * C136 + C161 + C161 + C153608 * C152) * C122 +
                C193 * C123 + C194 * C124 + C195 * C125 + C196 * C126) *
                   C153626 * C2030 -
               (C619 * C126 + C620 * C125 + C621 * C124 + C622 * C123 +
                (C134 * C542 + C587 + C587 + C153608 * C566) * C122) *
                   C153626 * C153591) *
                  C320 +
              (((C134 * C1057 + C1076 + C1076 + C153608 * C1069) * C122 +
                C1098 * C123 + C1099 * C124 + C1100 * C125 + C1101 * C126) *
                   C153626 * C153591 -
               (C406 * C126 + C407 * C125 + C408 * C124 + C409 * C123 +
                (C134 * C329 + C374 + C374 + C153608 * C353) * C122) *
                   C153626 * C2030) *
                  C321 +
              (((C134 * C330 + C375 + C375 + C153608 * C354) * C122 +
                C410 * C123 + C411 * C124 + C412 * C125 + C413 * C126) *
                   C153626 * C2030 -
               ((C134 * C1888 + C1904 + C1904 + C153608 * C1898) * C126 +
                (C134 * C1889 + C1905 + C1905 + C153608 * C1899) * C125 +
                (C134 * C1890 + C1906 + C1906 + C153608 * C1900) * C124 +
                (C134 * C1891 + C1907 + C1907 + C153608 * C1901) * C123 +
                (C134 * C1892 + C1908 + C1908 + C153608 * C1902) * C122) *
                   C153626 * C153591) *
                  C322) *
             C153492 +
         0.5 * std::pow(Pi, 2.5) *
             (((C134 * C136 + C161 + C161 + C153608 * C152) * C122 +
               C193 * C123 + C194 * C124 + C195 * C125 + C196 * C126) *
                  C153626 * C2236 -
              (C619 * C126 + C620 * C125 + C621 * C124 + C622 * C123 +
               (C134 * C542 + C587 + C587 + C153608 * C566) * C122) *
                  C153626 * C2237 +
              ((C134 * C543 + C588 + C588 + C153608 * C567) * C122 +
               C623 * C123 + C624 * C124 + C625 * C125 + C626 * C126) *
                  C153626 * C2238 -
              ((C134 * C2240 + C2256 + C2256 + C153608 * C2250) * C126 +
               (C134 * C2241 + C2257 + C2257 + C153608 * C2251) * C125 +
               (C134 * C2242 + C2258 + C2258 + C153608 * C2252) * C124 +
               (C134 * C2243 + C2259 + C2259 + C153608 * C2253) * C123 +
               (C134 * C2244 + C2260 + C2260 + C153608 * C2254) * C122) *
                  C153626 * C2239) *
             C153511 * C153492 -
         0.25 * std::pow(Pi, 2.5) *
             ((((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
                 C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
                 C153887 * C354) *
                    C2818 +
                (C2894 + C2895 + C2896) * C2819 + C2908 * C153874) *
                   C153626 * C2030 -
               (C4004 * C153874 + (C3529 + C3530 + C3531) * C2819 +
                (C2825 * C1892 + C3472 + C3472 + C153887 * C1902 +
                 C2823 * C1057 + C3473 + C3473 + C153913 * C1069 +
                 C2821 * C542 + C3474 + C3474 + C153925 * C566) *
                    C2818) *
                   C153626 * C153591) *
                  C153511 * C1225 +
              (((C3531 + C3530 + C3529) * C2818 +
                (C3528 + C3527 + C3526) * C2819 +
                (C4011 + C4012 + C4013) * C153874) *
                   C153626 * C153591 -
               (C2909 * C153874 + (C2899 + C2898 + C2897) * C2819 +
                (C2896 + C2895 + C2894) * C2818) *
                   C153626 * C2030) *
                  C153511 * C1226 +
              ((C2908 * C2818 + (C2902 + C2901 + C2900) * C2819 +
                (C2903 + C2904 + C2905) * C153874) *
                   C153626 * C2030 -
               ((C2825 * C1888 + C4001 + C4001 + C153887 * C1898 +
                 C2823 * C1061 + C4002 + C4002 + C153913 * C1073 +
                 C2821 * C538 + C4003 + C4003 + C153925 * C562) *
                    C153874 +
                (C4013 + C4012 + C4011) * C2819 + C4004 * C2818) *
                   C153626 * C153591) *
                  C153511 * C1227) -
         0.25 * std::pow(Pi, 2.5) *
             ((((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
                 C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
                 C153887 * C354) *
                    C2818 +
                (C2894 + C2895 + C2896) * C2819 + C2908 * C153874) *
                   C153626 * C2030 -
               (C4004 * C153874 + (C3529 + C3530 + C3531) * C2819 +
                (C2825 * C1892 + C3472 + C3472 + C153887 * C1902 +
                 C2823 * C1057 + C3473 + C3473 + C153913 * C1069 +
                 C2821 * C542 + C3474 + C3474 + C153925 * C566) *
                    C2818) *
                   C153626 * C153591) *
                  C320 +
              (((C2821 * C1057 + C4316 + C4316 + C153925 * C1069 +
                 C2823 * C1892 + C4317 + C4317 + C153913 * C1902 +
                 C2825 * C4303 + C4318 + C4318 + C153887 * C4311) *
                    C2818 +
                (C4352 + C4353 + C4354) * C2819 +
                (C4355 + C4356 + C4357) * C153874) *
                   C153626 * C153591 -
               (C3766 * C153874 + (C3215 + C3216 + C3217) * C2819 +
                (C2825 * C1319 + C3158 + C3158 + C153887 * C1329 +
                 C2823 * C330 + C3159 + C3159 + C153913 * C354 + C2821 * C329 +
                 C3160 + C3160 + C153925 * C353) *
                    C2818) *
                   C153626 * C2030) *
                  C321 +
              (((C2821 * C330 + C3161 + C3161 + C153925 * C354 + C2823 * C1319 +
                 C3162 + C3162 + C153913 * C1329 + C2825 * C3127 + C3163 +
                 C3163 + C153887 * C3135) *
                    C2818 +
                (C3218 + C3219 + C3220) * C2819 +
                (C3221 + C3222 + C3223) * C153874) *
                   C153626 * C2030 -
               ((C2825 * C5701 + C5711 + C5711 + C153887 * C5707 +
                 C2823 * C4305 + C5712 + C5712 + C153913 * C4313 +
                 C2821 * C1890 + C5713 + C5713 + C153925 * C1900) *
                    C153874 +
                (C2825 * C5702 + C5714 + C5714 + C153887 * C5708 +
                 C2823 * C4304 + C5715 + C5715 + C153913 * C4312 +
                 C2821 * C1891 + C5716 + C5716 + C153925 * C1901) *
                    C2819 +
                (C2825 * C5703 + C5717 + C5717 + C153887 * C5709 +
                 C2823 * C4303 + C5718 + C5718 + C153913 * C4311 +
                 C2821 * C1892 + C5719 + C5719 + C153925 * C1902) *
                    C2818) *
                   C153626 * C153591) *
                  C322) *
             C153492 +
         0.5 * std::pow(Pi, 2.5) *
             (((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
                C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
                C153887 * C354) *
                   C2818 +
               (C2894 + C2895 + C2896) * C2819 + C2908 * C153874) *
                  C153626 * C2236 -
              (C4004 * C153874 + (C3529 + C3530 + C3531) * C2819 +
               (C2825 * C1892 + C3472 + C3472 + C153887 * C1902 +
                C2823 * C1057 + C3473 + C3473 + C153913 * C1069 + C2821 * C542 +
                C3474 + C3474 + C153925 * C566) *
                   C2818) *
                  C153626 * C2237 +
              ((C2821 * C543 + C3475 + C3475 + C153925 * C567 + C2823 * C1461 +
                C3476 + C3476 + C153913 * C1471 + C2825 * C3441 + C3477 +
                C3477 + C153887 * C3449) *
                   C2818 +
               (C3532 + C3533 + C3534) * C2819 +
               (C3535 + C3536 + C3537) * C153874) *
                  C153626 * C2238 -
              ((C2825 * C6301 + C6320 + C6320 + C153887 * C6313 +
                C2823 * C6302 + C6321 + C6321 + C153913 * C6314 +
                C2821 * C2242 + C6322 + C6322 + C153925 * C2252) *
                   C153874 +
               (C2825 * C6303 + C6323 + C6323 + C153887 * C6315 +
                C2823 * C6304 + C6324 + C6324 + C153913 * C6316 +
                C2821 * C2243 + C6325 + C6325 + C153925 * C2253) *
                   C2819 +
               (C2825 * C6305 + C6326 + C6326 + C153887 * C6317 +
                C2823 * C6306 + C6327 + C6327 + C153913 * C6318 +
                C2821 * C2244 + C6328 + C6328 + C153925 * C2254) *
                   C2818) *
                  C153626 * C2239) *
             C153511 * C153492 +
         0.5 * std::pow(Pi, 2.5) *
             (((((C134 * C136 + C161 + C161 + C153608 * C152) * C2818 +
                 C193 * C2819 + C194 * C153874) *
                    C153926 +
                (C7742 + C7688 + C7689) * C153915 + C7751 * C153890) *
                   C2030 -
               ((C7744 + C7745 + C7746) * C153890 +
                (C7693 + C7692 + C7743) * C153915 +
                (C7689 + C7688 + C7742) * C153926) *
                   C153591) *
                  C153511 * C1225 +
              (((C7707 + C7708 + C7709) * C153926 +
                (C7710 + C7711 + C7712) * C153915 +
                (C7747 + C7748 + C7749) * C153890) *
                   C153591 -
               (C7733 * C153890 + (C7709 + C7708 + C7707) * C153915 +
                (C195 * C153874 + C194 * C2819 + C193 * C2818) * C153926) *
                   C2030) *
                  C153511 * C1226 +
              (((C194 * C2818 + C195 * C2819 + C196 * C153874) * C153926 +
                (C8193 + C8194 + C8195) * C153915 +
                (C8196 + C8197 + C8198) * C153890) *
                   C2030 -
               (((C134 * C2240 + C2256 + C2256 + C153608 * C2250) * C153874 +
                 C7741 * C2819 + C7736 * C2818) *
                    C153890 +
                (C8198 + C8197 + C8196) * C153915 +
                (C8195 + C8194 + C8193) * C153926) *
                   C153591) *
                  C153511 * C1227) +
         0.5 * std::pow(Pi, 2.5) *
             (((((C134 * C136 + C161 + C161 + C153608 * C152) * C2818 +
                 C193 * C2819 + C194 * C153874) *
                    C153926 +
                (C7742 + C7688 + C7689) * C153915 + C7751 * C153890) *
                   C2030 -
               ((C7744 + C7745 + C7746) * C153890 +
                (C7693 + C7692 + C7743) * C153915 +
                (C7689 + C7688 + C7742) * C153926) *
                   C153591) *
                  C320 +
              (((C8526 + C8494 + C8495) * C153926 +
                (C8527 + C8498 + C8499) * C153915 +
                (C9137 + C9127 + C9128) * C153890) *
                   C153591 -
               (C9134 * C153890 + (C8495 + C8494 + C8526) * C153915 +
                (C408 * C153874 + C409 * C2819 +
                 (C134 * C329 + C374 + C374 + C153608 * C353) * C2818) *
                    C153926) *
                   C2030) *
                  C321 +
              ((((C134 * C330 + C375 + C375 + C153608 * C354) * C2818 +
                 C410 * C2819 + C411 * C153874) *
                    C153926 +
                (C9881 + C9866 + C9867) * C153915 +
                (C9882 + C9870 + C9871) * C153890) *
                   C2030 -
               (((C134 * C6301 + C9872 + C9872 + C153608 * C6313) * C153874 +
                 (C134 * C6303 + C9873 + C9873 + C153608 * C6315) * C2819 +
                 (C134 * C6305 + C9874 + C9874 + C153608 * C6317) * C2818) *
                    C153890 +
                (C9871 + C9870 + C9882) * C153915 +
                (C9867 + C9866 + C9881) * C153926) *
                   C153591) *
                  C322) *
             C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153608 * C152) * C2818 +
            C193 * C2819 + C194 * C153874) *
               C153926 +
           (C7742 + C7688 + C7689) * C153915 + C7751 * C153890) *
              C2236 -
          (C10482 * C153890 + (C7693 + C7692 + C7743) * C153915 +
           (C7689 + C7688 + C7742) * C153926) *
              C2237 +
          (C7751 * C153926 + (C7746 + C7745 + C7744) * C153915 +
           (C10486 + C10477 + C10478) * C153890) *
              C2238 -
          (((C134 * C10464 + C10479 + C10479 + C153608 * C10470) * C153874 +
            (C134 * C10465 + C10480 + C10480 + C153608 * C10471) * C2819 +
            (C134 * C10466 + C10481 + C10481 + C153608 * C10472) * C2818) *
               C153890 +
           (C10478 + C10477 + C10486) * C153915 + C10482 * C153926) *
              C2239) *
         C153511 * C153492) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         ((((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
             C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 + C24119 +
             C153887 * C354) *
                C153922 +
            (C24183 + C24184 + C24185) * C153903 + C24197 * C153874) *
               C153626 * C2030 -
           (C25269 * C153874 + (C24794 + C24795 + C24796) * C153903 +
            (C24114 * C1892 + C24737 + C24737 + C153887 * C1902 +
             C24112 * C1057 + C24738 + C24738 + C24105 * C1069 + C24110 * C542 +
             C24739 + C24739 + C24104 * C566) *
                C153922) *
               C153626 * C153591) *
              C153511 * C1225 +
          (((C24796 + C24795 + C24794) * C153922 +
            (C24793 + C24792 + C24791) * C153903 +
            (C25276 + C25277 + C25278) * C153874) *
               C153626 * C153591 -
           (C24198 * C153874 + (C24188 + C24187 + C24186) * C153903 +
            (C24185 + C24184 + C24183) * C153922) *
               C153626 * C2030) *
              C153511 * C1226 +
          ((C24197 * C153922 + (C24191 + C24190 + C24189) * C153903 +
            (C24192 + C24193 + C24194) * C153874) *
               C153626 * C2030 -
           ((C24114 * C1888 + C25266 + C25266 + C153887 * C1898 +
             C24112 * C1061 + C25267 + C25267 + C24105 * C1073 + C24110 * C538 +
             C25268 + C25268 + C24104 * C562) *
                C153874 +
            (C25278 + C25277 + C25276) * C153903 + C25269 * C153922) *
               C153626 * C153591) *
              C153511 * C1227)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         ((((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
             C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 + C24119 +
             C153887 * C354) *
                C153922 +
            (C24183 + C24184 + C24185) * C153903 + C24197 * C153874) *
               C153626 * C2030 -
           (C25269 * C153874 + (C24794 + C24795 + C24796) * C153903 +
            (C24114 * C1892 + C24737 + C24737 + C153887 * C1902 +
             C24112 * C1057 + C24738 + C24738 + C24105 * C1069 + C24110 * C542 +
             C24739 + C24739 + C24104 * C566) *
                C153922) *
               C153626 * C153591) *
              C320 +
          (((C24110 * C1057 + C25569 + C25569 + C24104 * C1069 +
             C24112 * C1892 + C25570 + C25570 + C24105 * C1902 +
             C24114 * C4303 + C25571 + C25571 + C153887 * C4311) *
                C153922 +
            (C25605 + C25606 + C25607) * C153903 +
            (C25608 + C25609 + C25610) * C153874) *
               C153626 * C153591 -
           (C25031 * C153874 + (C24492 + C24493 + C24494) * C153903 +
            (C24114 * C1319 + C24435 + C24435 + C153887 * C1329 +
             C24112 * C330 + C24436 + C24436 + C24105 * C354 + C24110 * C329 +
             C24437 + C24437 + C24104 * C353) *
                C153922) *
               C153626 * C2030) *
              C321 +
          (((C24110 * C330 + C24438 + C24438 + C24104 * C354 + C24112 * C1319 +
             C24439 + C24439 + C24105 * C1329 + C24114 * C3127 + C24440 +
             C24440 + C153887 * C3135) *
                C153922 +
            (C24495 + C24496 + C24497) * C153903 +
            (C24498 + C24499 + C24500) * C153874) *
               C153626 * C2030 -
           ((C24114 * C5701 + C26937 + C26937 + C153887 * C5707 +
             C24112 * C4305 + C26938 + C26938 + C24105 * C4313 +
             C24110 * C1890 + C26939 + C26939 + C24104 * C1900) *
                C153874 +
            (C24114 * C5702 + C26940 + C26940 + C153887 * C5708 +
             C24112 * C4304 + C26941 + C26941 + C24105 * C4312 +
             C24110 * C1891 + C26942 + C26942 + C24104 * C1901) *
                C153903 +
            (C24114 * C5703 + C26943 + C26943 + C153887 * C5709 +
             C24112 * C4303 + C26944 + C26944 + C24105 * C4311 +
             C24110 * C1892 + C26945 + C26945 + C24104 * C1902) *
                C153922) *
               C153626 * C153591) *
              C322) *
         C153492) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
            C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 + C24119 +
            C153887 * C354) *
               C153922 +
           (C24183 + C24184 + C24185) * C153903 + C24197 * C153874) *
              C153626 * C2236 -
          (C25269 * C153874 + (C24794 + C24795 + C24796) * C153903 +
           (C24114 * C1892 + C24737 + C24737 + C153887 * C1902 +
            C24112 * C1057 + C24738 + C24738 + C24105 * C1069 + C24110 * C542 +
            C24739 + C24739 + C24104 * C566) *
               C153922) *
              C153626 * C2237 +
          ((C24110 * C543 + C24740 + C24740 + C24104 * C567 + C24112 * C1461 +
            C24741 + C24741 + C24105 * C1471 + C24114 * C3441 + C24742 +
            C24742 + C153887 * C3449) *
               C153922 +
           (C24797 + C24798 + C24799) * C153903 +
           (C24800 + C24801 + C24802) * C153874) *
              C153626 * C2238 -
          ((C24114 * C6301 + C27528 + C27528 + C153887 * C6313 +
            C24112 * C6302 + C27529 + C27529 + C24105 * C6314 + C24110 * C2242 +
            C27530 + C27530 + C24104 * C2252) *
               C153874 +
           (C24114 * C6303 + C27531 + C27531 + C153887 * C6315 +
            C24112 * C6304 + C27532 + C27532 + C24105 * C6316 + C24110 * C2243 +
            C27533 + C27533 + C24104 * C2253) *
               C153903 +
           (C24114 * C6305 + C27534 + C27534 + C153887 * C6317 +
            C24112 * C6306 + C27535 + C27535 + C24105 * C6318 + C24110 * C2244 +
            C27536 + C27536 + C24104 * C2254) *
               C153922) *
              C153626 * C2239) *
         C153511 * C153492) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         (((C28350 * C136 + C28361 + C28361 + C28344 * C152 + C28352 * C329 +
            C28362 + C28362 + C28345 * C353 + C28354 * C330 + C28363 + C28363 +
            C28346 * C354 + C28356 * C1319 + C28364 + C28364 + C28347 * C1329 +
            C28358 * C3127 + C28365 + C28365 + C28348 * C3135) *
               C153454 * C153626 * C2030 -
           (C28358 * C5703 + C28657 + C28657 + C28348 * C5709 + C28356 * C4303 +
            C28658 + C28658 + C28347 * C4311 + C28354 * C1892 + C28659 +
            C28659 + C28346 * C1902 + C28352 * C1057 + C28660 + C28660 +
            C28345 * C1069 + C28350 * C542 + C28661 + C28661 + C28344 * C566) *
               C153454 * C153626 * C153591) *
              C153511 * C1225 +
          ((C28350 * C541 + C28667 + C28667 + C28344 * C565 + C28352 * C1058 +
            C28668 + C28668 + C28345 * C1070 + C28354 * C1891 + C28669 +
            C28669 + C28346 * C1901 + C28356 * C4304 + C28670 + C28670 +
            C28347 * C4312 + C28358 * C5702 + C28671 + C28671 +
            C28348 * C5708) *
               C153454 * C153626 * C153591 -
           (C28358 * C3128 + C28366 + C28366 + C28348 * C3136 + C28356 * C1318 +
            C28367 + C28367 + C28347 * C1328 + C28354 * C331 + C28368 + C28368 +
            C28346 * C355 + C28352 * C328 + C28369 + C28369 + C28345 * C352 +
            C28350 * C137 + C28370 + C28370 + C28344 * C153) *
               C153454 * C153626 * C2030) *
              C153511 * C1226 +
          ((C28350 * C138 + C28371 + C28371 + C28344 * C154 + C28352 * C327 +
            C28372 + C28372 + C28345 * C351 + C28354 * C332 + C28373 + C28373 +
            C28346 * C356 + C28356 * C1317 + C28374 + C28374 + C28347 * C1327 +
            C28358 * C3129 + C28375 + C28375 + C28348 * C3137) *
               C153454 * C153626 * C2030 -
           (C28358 * C5701 + C28926 + C28926 + C28348 * C5707 + C28356 * C4305 +
            C28927 + C28927 + C28347 * C4313 + C28354 * C1890 + C28928 +
            C28928 + C28346 * C1900 + C28352 * C1059 + C28929 + C28929 +
            C28345 * C1071 + C28350 * C540 + C28930 + C28930 + C28344 * C564) *
               C153454 * C153626 * C153591) *
              C153511 * C1227)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         (((C28350 * C136 + C28361 + C28361 + C28344 * C152 + C28352 * C329 +
            C28362 + C28362 + C28345 * C353 + C28354 * C330 + C28363 + C28363 +
            C28346 * C354 + C28356 * C1319 + C28364 + C28364 + C28347 * C1329 +
            C28358 * C3127 + C28365 + C28365 + C28348 * C3135) *
               C153454 * C153626 * C2030 -
           (C28358 * C5703 + C28657 + C28657 + C28348 * C5709 + C28356 * C4303 +
            C28658 + C28658 + C28347 * C4311 + C28354 * C1892 + C28659 +
            C28659 + C28346 * C1902 + C28352 * C1057 + C28660 + C28660 +
            C28345 * C1069 + C28350 * C542 + C28661 + C28661 + C28344 * C566) *
               C153454 * C153626 * C153591) *
              C320 +
          ((C28350 * C1057 + C29099 + C29099 + C28344 * C1069 + C28352 * C1892 +
            C29100 + C29100 + C28345 * C1902 + C28354 * C4303 + C29101 +
            C29101 + C28346 * C4311 + C28356 * C5703 + C29102 + C29102 +
            C28347 * C5709 + C28358 * C29092 + C29103 + C29103 +
            C28348 * C29096) *
               C153454 * C153626 * C153591 -
           (C28358 * C4723 + C28509 + C28509 + C28348 * C4729 + C28356 * C3127 +
            C28510 + C28510 + C28347 * C3135 + C28354 * C1319 + C28511 +
            C28511 + C28346 * C1329 + C28352 * C330 + C28512 + C28512 +
            C28345 * C354 + C28350 * C329 + C28513 + C28513 + C28344 * C353) *
               C153454 * C153626 * C2030) *
              C321 +
          ((C28350 * C330 + C28514 + C28514 + C28344 * C354 + C28352 * C1319 +
            C28515 + C28515 + C28345 * C1329 + C28354 * C3127 + C28516 +
            C28516 + C28346 * C3135 + C28356 * C4723 + C28517 + C28517 +
            C28347 * C4729 + C28358 * C28502 + C28518 + C28518 +
            C28348 * C28506) *
               C153454 * C153626 * C2030 -
           (C28358 * C29856 + C29860 + C29860 + C28348 * C29858 +
            C28356 * C29092 + C29861 + C29861 + C28347 * C29096 +
            C28354 * C5703 + C29862 + C29862 + C28346 * C5709 + C28352 * C4303 +
            C29863 + C29863 + C28345 * C4311 + C28350 * C1892 + C29864 +
            C29864 + C28344 * C1902) *
               C153454 * C153626 * C153591) *
              C322) *
         C153492) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((C28350 * C136 + C28361 + C28361 + C28344 * C152 + C28352 * C329 +
           C28362 + C28362 + C28345 * C353 + C28354 * C330 + C28363 + C28363 +
           C28346 * C354 + C28356 * C1319 + C28364 + C28364 + C28347 * C1329 +
           C28358 * C3127 + C28365 + C28365 + C28348 * C3135) *
              C153454 * C153626 * C2236 -
          (C28358 * C5703 + C28657 + C28657 + C28348 * C5709 + C28356 * C4303 +
           C28658 + C28658 + C28347 * C4311 + C28354 * C1892 + C28659 + C28659 +
           C28346 * C1902 + C28352 * C1057 + C28660 + C28660 + C28345 * C1069 +
           C28350 * C542 + C28661 + C28661 + C28344 * C566) *
              C153454 * C153626 * C2237 +
          (C28350 * C543 + C28662 + C28662 + C28344 * C567 + C28352 * C1461 +
           C28663 + C28663 + C28345 * C1471 + C28354 * C3441 + C28664 + C28664 +
           C28346 * C3449 + C28356 * C4959 + C28665 + C28665 + C28347 * C4965 +
           C28358 * C28650 + C28666 + C28666 + C28348 * C28654) *
              C153454 * C153626 * C2238 -
          (C28358 * C30190 + C30197 + C30197 + C28348 * C30194 +
           C28356 * C30191 + C30198 + C30198 + C28347 * C30195 +
           C28354 * C6305 + C30199 + C30199 + C28346 * C6317 + C28352 * C6306 +
           C30200 + C30200 + C28345 * C6318 + C28350 * C2244 + C30201 + C30201 +
           C28344 * C2254) *
              C153454 * C153626 * C2239) *
         C153511 * C153492) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
             C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 + C24119 +
             C153887 * C354) *
                C153454 * C153926 +
            (C31259 + C31260 + C31261) * C153454 * C153915 + C31273 * C153890) *
               C2030 -
           ((C31265 + C31266 + C31267) * C153454 * C153890 +
            (C31264 + C31263 + C31262) * C153454 * C153915 +
            (C31261 + C31260 + C31259) * C153454 * C153926) *
               C153591) *
              C153511 * C1225 +
          (((C24796 + C24795 + C24794) * C153454 * C153926 +
            (C24797 + C24798 + C24799) * C153454 * C153915 +
            (C31268 + C31269 + C31270) * C153454 * C153890) *
               C153591 -
           (C31258 * C153890 + (C24794 + C24795 + C24796) * C153454 * C153915 +
            (C24185 + C24184 + C24183) * C153454 * C153926) *
               C2030) *
              C153511 * C1226 +
          ((C24197 * C153454 * C153926 +
            (C24793 + C24792 + C24791) * C153454 * C153915 +
            (C24800 + C24801 + C24802) * C153454 * C153890) *
               C2030 -
           ((C24114 * C6301 + C27528 + C27528 + C153887 * C6313 +
             C24112 * C6302 + C27529 + C27529 + C24105 * C6314 +
             C24110 * C2242 + C27530 + C27530 + C24104 * C2252) *
                C153454 * C153890 +
            (C24802 + C24801 + C24800) * C153454 * C153915 +
            C25269 * C153454 * C153926) *
               C153591) *
              C153511 * C1227)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
             C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 + C24119 +
             C153887 * C354) *
                C153454 * C153926 +
            (C31259 + C31260 + C31261) * C153454 * C153915 + C31273 * C153890) *
               C2030 -
           ((C31265 + C31266 + C31267) * C153454 * C153890 +
            (C31264 + C31263 + C31262) * C153454 * C153915 +
            (C31261 + C31260 + C31259) * C153454 * C153926) *
               C153591) *
              C320 +
          (((C32045 + C32046 + C32047) * C153454 * C153926 +
            (C32048 + C32049 + C32050) * C153454 * C153915 +
            (C32663 + C32664 + C32665) * C153454 * C153890) *
               C153591 -
           (C32662 * C153890 + (C32047 + C32046 + C32045) * C153454 * C153915 +
            (C24114 * C1319 + C24435 + C24435 + C153887 * C1329 +
             C24112 * C330 + C24436 + C24436 + C24105 * C354 + C24110 * C329 +
             C24437 + C24437 + C24104 * C353) *
                C153454 * C153926) *
               C2030) *
              C321 +
          (((C24110 * C330 + C24438 + C24438 + C24104 * C354 + C24112 * C1319 +
             C24439 + C24439 + C24105 * C1329 + C24114 * C3127 + C24440 +
             C24440 + C153887 * C3135) *
                C153454 * C153926 +
            (C33419 + C33420 + C33421) * C153454 * C153915 +
            (C33422 + C33423 + C33424) * C153454 * C153890) *
               C2030 -
           ((C24114 * C30190 + C33404 + C33404 + C153887 * C30194 +
             C24112 * C30191 + C33405 + C33405 + C24105 * C30195 +
             C24110 * C6305 + C33406 + C33406 + C24104 * C6317) *
                C153454 * C153890 +
            (C33424 + C33423 + C33422) * C153454 * C153915 +
            (C33421 + C33420 + C33419) * C153454 * C153926) *
               C153591) *
              C322) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
            C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 + C24119 +
            C153887 * C354) *
               C153454 * C153926 +
           (C31259 + C31260 + C31261) * C153454 * C153915 + C31273 * C153890) *
              C2236 -
          (C34027 * C153890 + (C31264 + C31263 + C31262) * C153454 * C153915 +
           (C31261 + C31260 + C31259) * C153454 * C153926) *
              C2237 +
          (C31273 * C153926 + (C31267 + C31266 + C31265) * C153454 * C153915 +
           (C34031 + C34032 + C34033) * C153454 * C153890) *
              C2238 -
          ((C24114 * C34006 + C34020 + C34020 + C153887 * C34010 +
            C24112 * C34007 + C34021 + C34021 + C24105 * C34011 +
            C24110 * C10466 + C34022 + C34022 + C24104 * C10472) *
               C153454 * C153890 +
           (C34033 + C34032 + C34031) * C153454 * C153915 + C34027 * C153926) *
              C2239) *
         C153511 * C153492) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C153922 +
             C193 * C153903 + C194 * C153874) *
                C47609 +
            (C48049 + C48050 + C48051) * C47610 + C48069 * C153890) *
               C2030 -
           ((C48055 + C48056 + C48057) * C153890 +
            (C48054 + C48053 + C48052) * C47610 +
            (C48051 + C48050 + C48049) * C47609) *
               C153591) *
              C153511 * C1225 +
          (((C48058 + C48059 + C48060) * C47609 +
            (C48061 + C48062 + C48063) * C47610 +
            (C48064 + C48065 + C48066) * C153890) *
               C153591 -
           (C48070 * C153890 + (C48060 + C48059 + C48058) * C47610 +
            (C195 * C153874 + C194 * C153903 + C193 * C153922) * C47609) *
               C2030) *
              C153511 * C1226 +
          (((C194 * C153922 + C195 * C153903 + C196 * C153874) * C47609 +
            (C48507 + C48508 + C48509) * C47610 +
            (C48510 + C48511 + C48512) * C153890) *
               C2030 -
           (((C134 * C2240 + C2256 + C2256 + C153608 * C2250) * C153874 +
             C7741 * C153903 + C7736 * C153922) *
                C153890 +
            (C48512 + C48511 + C48510) * C47610 +
            (C48509 + C48508 + C48507) * C47609) *
               C153591) *
              C153511 * C1227)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C153922 +
             C193 * C153903 + C194 * C153874) *
                C47609 +
            (C48049 + C48050 + C48051) * C47610 + C48069 * C153890) *
               C2030 -
           ((C48055 + C48056 + C48057) * C153890 +
            (C48054 + C48053 + C48052) * C47610 +
            (C48051 + C48050 + C48049) * C47609) *
               C153591) *
              C320 +
          (((C48803 + C48804 + C48805) * C47609 +
            (C48806 + C48807 + C48808) * C47610 +
            (C49397 + C49398 + C49399) * C153890) *
               C153591 -
           (C49401 * C153890 + (C48805 + C48804 + C48803) * C47610 +
            (C408 * C153874 + C409 * C153903 +
             (C134 * C329 + C374 + C374 + C153608 * C353) * C153922) *
                C47609) *
               C2030) *
              C321 +
          ((((C134 * C330 + C375 + C375 + C153608 * C354) * C153922 +
             C410 * C153903 + C411 * C153874) *
                C47609 +
            (C50128 + C50129 + C50130) * C47610 +
            (C50131 + C50132 + C50133) * C153890) *
               C2030 -
           (((C134 * C6301 + C9872 + C9872 + C153608 * C6313) * C153874 +
             (C134 * C6303 + C9873 + C9873 + C153608 * C6315) * C153903 +
             (C134 * C6305 + C9874 + C9874 + C153608 * C6317) * C153922) *
                C153890 +
            (C50133 + C50132 + C50131) * C47610 +
            (C50130 + C50129 + C50128) * C47609) *
               C153591) *
              C322) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153608 * C152) * C153922 +
            C193 * C153903 + C194 * C153874) *
               C47609 +
           (C48049 + C48050 + C48051) * C47610 + C48069 * C153890) *
              C2236 -
          (C50720 * C153890 + (C48054 + C48053 + C48052) * C47610 +
           (C48051 + C48050 + C48049) * C47609) *
              C2237 +
          (C48069 * C47609 + (C48057 + C48056 + C48055) * C47610 +
           (C50717 + C50718 + C50719) * C153890) *
              C2238 -
          (((C134 * C10464 + C10479 + C10479 + C153608 * C10470) * C153874 +
            (C134 * C10465 + C10480 + C10480 + C153608 * C10471) * C153903 +
            (C134 * C10466 + C10481 + C10481 + C153608 * C10472) * C153922) *
               C153890 +
           (C50719 + C50718 + C50717) * C47610 + C50720 * C47609) *
              C2239) *
         C153511 * C153492) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
             C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
             C153887 * C354) *
                C153454 * C47609 +
            (C52092 + C52093 + C52094) * C153454 * C47610 + C52106 * C153890) *
               C2030 -
           ((C52098 + C52099 + C52100) * C153454 * C153890 +
            (C52097 + C52096 + C52095) * C153454 * C47610 +
            (C52094 + C52093 + C52092) * C153454 * C47609) *
               C153591) *
              C153511 * C1225 +
          (((C3531 + C3530 + C3529) * C153454 * C47609 +
            (C3532 + C3533 + C3534) * C153454 * C47610 +
            (C52101 + C52102 + C52103) * C153454 * C153890) *
               C153591 -
           (C52091 * C153890 + (C3529 + C3530 + C3531) * C153454 * C47610 +
            (C2896 + C2895 + C2894) * C153454 * C47609) *
               C2030) *
              C153511 * C1226 +
          ((C2908 * C153454 * C47609 +
            (C3528 + C3527 + C3526) * C153454 * C47610 +
            (C3535 + C3536 + C3537) * C153454 * C153890) *
               C2030 -
           ((C2825 * C6301 + C6320 + C6320 + C153887 * C6313 + C2823 * C6302 +
             C6321 + C6321 + C153913 * C6314 + C2821 * C2242 + C6322 + C6322 +
             C153925 * C2252) *
                C153454 * C153890 +
            (C3537 + C3536 + C3535) * C153454 * C47610 +
            C4004 * C153454 * C47609) *
               C153591) *
              C153511 * C1227)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
             C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
             C153887 * C354) *
                C153454 * C47609 +
            (C52092 + C52093 + C52094) * C153454 * C47610 + C52106 * C153890) *
               C2030 -
           ((C52098 + C52099 + C52100) * C153454 * C153890 +
            (C52097 + C52096 + C52095) * C153454 * C47610 +
            (C52094 + C52093 + C52092) * C153454 * C47609) *
               C153591) *
              C320 +
          (((C52875 + C52876 + C52877) * C153454 * C47609 +
            (C52878 + C52879 + C52880) * C153454 * C47610 +
            (C53490 + C53491 + C53492) * C153454 * C153890) *
               C153591 -
           (C53489 * C153890 + (C52877 + C52876 + C52875) * C153454 * C47610 +
            (C2825 * C1319 + C3158 + C3158 + C153887 * C1329 + C2823 * C330 +
             C3159 + C3159 + C153913 * C354 + C2821 * C329 + C3160 + C3160 +
             C153925 * C353) *
                C153454 * C47609) *
               C2030) *
              C321 +
          (((C2821 * C330 + C3161 + C3161 + C153925 * C354 + C2823 * C1319 +
             C3162 + C3162 + C153913 * C1329 + C2825 * C3127 + C3163 + C3163 +
             C153887 * C3135) *
                C153454 * C47609 +
            (C54246 + C54247 + C54248) * C153454 * C47610 +
            (C54249 + C54250 + C54251) * C153454 * C153890) *
               C2030 -
           ((C2825 * C30190 + C54231 + C54231 + C153887 * C30194 +
             C2823 * C30191 + C54232 + C54232 + C153913 * C30195 +
             C2821 * C6305 + C54233 + C54233 + C153925 * C6317) *
                C153454 * C153890 +
            (C54251 + C54250 + C54249) * C153454 * C47610 +
            (C54248 + C54247 + C54246) * C153454 * C47609) *
               C153591) *
              C322) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
            C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
            C153887 * C354) *
               C153454 * C47609 +
           (C52092 + C52093 + C52094) * C153454 * C47610 + C52106 * C153890) *
              C2236 -
          (C54848 * C153890 + (C52097 + C52096 + C52095) * C153454 * C47610 +
           (C52094 + C52093 + C52092) * C153454 * C47609) *
              C2237 +
          (C52106 * C47609 + (C52100 + C52099 + C52098) * C153454 * C47610 +
           (C54852 + C54853 + C54854) * C153454 * C153890) *
              C2238 -
          ((C2825 * C34006 + C54841 + C54841 + C153887 * C34010 +
            C2823 * C34007 + C54842 + C54842 + C153913 * C34011 +
            C2821 * C10466 + C54843 + C54843 + C153925 * C10472) *
               C153454 * C153890 +
           (C54854 + C54853 + C54852) * C153454 * C47610 + C54848 * C47609) *
              C2239) *
         C153511 * C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153608 * C152) * C153454 * C55662 +
            C55920 * C55663 + C55921 * C55664 + C55922 * C55665 +
            C55923 * C55666) *
               C2030 -
           (C55940 * C55666 + C55923 * C55665 + C55922 * C55664 +
            C55921 * C55663 + C55920 * C55662) *
               C153591) *
              C153511 * C1225 +
          ((C55927 * C55662 + C55928 * C55663 + C55929 * C55664 +
            C55930 * C55665 + C55941 * C55666) *
               C153591 -
           (C55930 * C55666 + C55929 * C55665 + C55928 * C55664 +
            C55927 * C55663 + C193 * C153454 * C55662) *
               C2030) *
              C153511 * C1226 +
          ((C194 * C153454 * C55662 + C56186 * C55663 + C56187 * C55664 +
            C56188 * C55665 + C56189 * C55666) *
               C2030 -
           ((C134 * C10464 + C10479 + C10479 + C153608 * C10470) * C153454 *
                C55666 +
            C56189 * C55665 + C56188 * C55664 + C56187 * C55663 +
            C56186 * C55662) *
               C153591) *
              C153511 * C1227)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153608 * C152) * C153454 * C55662 +
            C55920 * C55663 + C55921 * C55664 + C55922 * C55665 +
            C55923 * C55666) *
               C2030 -
           (C55940 * C55666 + C55923 * C55665 + C55922 * C55664 +
            C55921 * C55663 + C55920 * C55662) *
               C153591) *
              C320 +
          ((C56355 * C55662 + C56356 * C55663 + C56357 * C55664 +
            C56373 * C55665 + C56712 * C55666) *
               C153591 -
           (C56373 * C55666 + C56357 * C55665 + C56356 * C55664 +
            C56355 * C55663 +
            (C134 * C329 + C374 + C374 + C153608 * C353) * C153454 * C55662) *
               C2030) *
              C321 +
          (((C134 * C330 + C375 + C375 + C153608 * C354) * C153454 * C55662 +
            C57119 * C55663 + C57120 * C55664 + C57132 * C55665 +
            C57133 * C55666) *
               C2030 -
           ((C134 * C34006 + C57125 + C57125 + C153608 * C34010) * C153454 *
                C55666 +
            C57133 * C55665 + C57132 * C55664 + C57120 * C55663 +
            C57119 * C55662) *
               C153591) *
              C322) *
         C153492) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C134 * C136 + C161 + C161 + C153608 * C152) * C153454 * C55662 +
           C55920 * C55663 + C55921 * C55664 + C55922 * C55665 +
           C55923 * C55666) *
              C2236 -
          (C55940 * C55666 + C55923 * C55665 + C55922 * C55664 +
           C55921 * C55663 + C55920 * C55662) *
              C2237 +
          (C55921 * C55662 + C55922 * C55663 + C55923 * C55664 +
           C55940 * C55665 + C57469 * C55666) *
              C2238 -
          ((C134 * C57459 + C57465 + C57465 + C153608 * C57461) * C153454 *
               C55666 +
           C57469 * C55665 + C55940 * C55664 + C55923 * C55663 +
           C55922 * C55662) *
              C2239) *
         C153511 * C153492) /
            (p * q * std::sqrt(p + q));
    d2ee[193] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C136 + C161 + C161 + C153608 * C152) * C122 +
                C193 * C123 + C194 * C124 + C195 * C125 + C196 * C126) *
                   C153626 * C153910 -
               (C619 * C126 + C620 * C125 + C621 * C124 + C622 * C123 +
                (C134 * C542 + C587 + C587 + C153608 * C566) * C122) *
                   C153626 * C153911 +
               ((C134 * C543 + C588 + C588 + C153608 * C567) * C122 +
                C623 * C123 + C624 * C124 + C625 * C125 + C626 * C126) *
                   C153626 * C2546) *
                  C153511 * C153829 +
              ((C622 * C122 + C621 * C123 + C620 * C124 + C619 * C125 +
                C895 * C126) *
                   C153626 * C153911 -
               (C197 * C126 + C196 * C125 + C195 * C124 + C194 * C123 +
                C193 * C122) *
                   C153626 * C153910 -
               ((C134 * C549 + C602 + C602 + C153608 * C573) * C126 +
                C626 * C125 + C625 * C124 + C624 * C123 + C623 * C122) *
                   C153626 * C2546) *
                  C153511 * C153498) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
                 C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
                 C153887 * C354) *
                    C2818 +
                (C2894 + C2895 + C2896) * C2819 + C2908 * C153874) *
                   C153626 * C153910 -
               (C4004 * C153874 + (C3529 + C3530 + C3531) * C2819 +
                (C2825 * C1892 + C3472 + C3472 + C153887 * C1902 +
                 C2823 * C1057 + C3473 + C3473 + C153913 * C1069 +
                 C2821 * C542 + C3474 + C3474 + C153925 * C566) *
                    C2818) *
                   C153626 * C153911 +
               ((C2821 * C543 + C3475 + C3475 + C153925 * C567 + C2823 * C1461 +
                 C3476 + C3476 + C153913 * C1471 + C2825 * C3441 + C3477 +
                 C3477 + C153887 * C3449) *
                    C2818 +
                (C3532 + C3533 + C3534) * C2819 +
                (C3535 + C3536 + C3537) * C153874) *
                   C153626 * C2546) *
                  C153511 * C153829 +
              (((C3531 + C3530 + C3529) * C2818 +
                (C3528 + C3527 + C3526) * C2819 +
                (C4011 + C4012 + C4013) * C153874) *
                   C153626 * C153911 -
               (C2909 * C153874 + (C2899 + C2898 + C2897) * C2819 +
                (C2896 + C2895 + C2894) * C2818) *
                   C153626 * C153910 -
               ((C2825 * C3444 + C3499 + C3499 + C153887 * C3452 +
                 C2823 * C1458 + C3500 + C3500 + C153913 * C1468 +
                 C2821 * C546 + C3501 + C3501 + C153925 * C570) *
                    C153874 +
                (C3537 + C3536 + C3535) * C2819 +
                (C3534 + C3533 + C3532) * C2818) *
                   C153626 * C2546) *
                  C153511 * C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C2818 +
             C193 * C2819 + C194 * C153874) *
                C153926 +
            (C7742 + C7688 + C7689) * C153915 + C7751 * C153890) *
               C153910 -
           (C10482 * C153890 + (C7693 + C7692 + C7743) * C153915 +
            (C7689 + C7688 + C7742) * C153926) *
               C153911 +
           (C7751 * C153926 + (C7746 + C7745 + C7744) * C153915 +
            (C10486 + C10477 + C10478) * C153890) *
               C2546) *
              C153511 * C153829 +
          (((C7707 + C7708 + C7709) * C153926 +
            (C7710 + C7711 + C7712) * C153915 +
            (C7747 + C7748 + C7749) * C153890) *
               C153911 -
           (C7733 * C153890 + (C7709 + C7708 + C7707) * C153915 +
            (C195 * C153874 + C194 * C2819 + C193 * C2818) * C153926) *
               C153910 -
           (((C134 * C7676 + C7715 + C7715 + C153608 * C7684) * C153874 +
             C7740 * C2819 + C7739 * C2818) *
                C153890 +
            (C7749 + C7748 + C7747) * C153915 + C7733 * C153926) *
               C2546) *
              C153511 * C153498)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
             C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 + C24119 +
             C153887 * C354) *
                C153922 +
            (C24183 + C24184 + C24185) * C153903 + C24197 * C153874) *
               C153626 * C153910 -
           (C25269 * C153874 + (C24794 + C24795 + C24796) * C153903 +
            (C24114 * C1892 + C24737 + C24737 + C153887 * C1902 +
             C24112 * C1057 + C24738 + C24738 + C24105 * C1069 + C24110 * C542 +
             C24739 + C24739 + C24104 * C566) *
                C153922) *
               C153626 * C153911 +
           ((C24110 * C543 + C24740 + C24740 + C24104 * C567 + C24112 * C1461 +
             C24741 + C24741 + C24105 * C1471 + C24114 * C3441 + C24742 +
             C24742 + C153887 * C3449) *
                C153922 +
            (C24797 + C24798 + C24799) * C153903 +
            (C24800 + C24801 + C24802) * C153874) *
               C153626 * C2546) *
              C153511 * C153829 +
          (((C24796 + C24795 + C24794) * C153922 +
            (C24793 + C24792 + C24791) * C153903 +
            (C25276 + C25277 + C25278) * C153874) *
               C153626 * C153911 -
           (C24198 * C153874 + (C24188 + C24187 + C24186) * C153903 +
            (C24185 + C24184 + C24183) * C153922) *
               C153626 * C153910 -
           ((C24114 * C3444 + C24764 + C24764 + C153887 * C3452 +
             C24112 * C1458 + C24765 + C24765 + C24105 * C1468 + C24110 * C546 +
             C24766 + C24766 + C24104 * C570) *
                C153874 +
            (C24802 + C24801 + C24800) * C153903 +
            (C24799 + C24798 + C24797) * C153922) *
               C153626 * C2546) *
              C153511 * C153498)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C28350 * C136 + C28361 + C28361 + C28344 * C152 + C28352 * C329 +
            C28362 + C28362 + C28345 * C353 + C28354 * C330 + C28363 + C28363 +
            C28346 * C354 + C28356 * C1319 + C28364 + C28364 + C28347 * C1329 +
            C28358 * C3127 + C28365 + C28365 + C28348 * C3135) *
               C153454 * C153626 * C153910 -
           (C28358 * C5703 + C28657 + C28657 + C28348 * C5709 + C28356 * C4303 +
            C28658 + C28658 + C28347 * C4311 + C28354 * C1892 + C28659 +
            C28659 + C28346 * C1902 + C28352 * C1057 + C28660 + C28660 +
            C28345 * C1069 + C28350 * C542 + C28661 + C28661 + C28344 * C566) *
               C153454 * C153626 * C153911 +
           (C28350 * C543 + C28662 + C28662 + C28344 * C567 + C28352 * C1461 +
            C28663 + C28663 + C28345 * C1471 + C28354 * C3441 + C28664 +
            C28664 + C28346 * C3449 + C28356 * C4959 + C28665 + C28665 +
            C28347 * C4965 + C28358 * C28650 + C28666 + C28666 +
            C28348 * C28654) *
               C153454 * C153626 * C2546) *
              C153511 * C153829 +
          ((C28350 * C541 + C28667 + C28667 + C28344 * C565 + C28352 * C1058 +
            C28668 + C28668 + C28345 * C1070 + C28354 * C1891 + C28669 +
            C28669 + C28346 * C1901 + C28356 * C4304 + C28670 + C28670 +
            C28347 * C4312 + C28358 * C5702 + C28671 + C28671 +
            C28348 * C5708) *
               C153454 * C153626 * C153911 -
           (C28358 * C3128 + C28366 + C28366 + C28348 * C3136 + C28356 * C1318 +
            C28367 + C28367 + C28347 * C1328 + C28354 * C331 + C28368 + C28368 +
            C28346 * C355 + C28352 * C328 + C28369 + C28369 + C28345 * C352 +
            C28350 * C137 + C28370 + C28370 + C28344 * C153) *
               C153454 * C153626 * C153910 -
           (C28358 * C28651 + C28672 + C28672 + C28348 * C28655 +
            C28356 * C4958 + C28673 + C28673 + C28347 * C4964 + C28354 * C3442 +
            C28674 + C28674 + C28346 * C3450 + C28352 * C1460 + C28675 +
            C28675 + C28345 * C1470 + C28350 * C544 + C28676 + C28676 +
            C28344 * C568) *
               C153454 * C153626 * C2546) *
              C153511 * C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
             C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 + C24119 +
             C153887 * C354) *
                C153454 * C153926 +
            (C31259 + C31260 + C31261) * C153454 * C153915 + C31273 * C153890) *
               C153910 -
           (C34027 * C153890 + (C31264 + C31263 + C31262) * C153454 * C153915 +
            (C31261 + C31260 + C31259) * C153454 * C153926) *
               C153911 +
           (C31273 * C153926 + (C31267 + C31266 + C31265) * C153454 * C153915 +
            (C34031 + C34032 + C34033) * C153454 * C153890) *
               C2546) *
              C153511 * C153829 +
          (((C24796 + C24795 + C24794) * C153454 * C153926 +
            (C24797 + C24798 + C24799) * C153454 * C153915 +
            (C31268 + C31269 + C31270) * C153454 * C153890) *
               C153911 -
           (C31258 * C153890 + (C24794 + C24795 + C24796) * C153454 * C153915 +
            (C24185 + C24184 + C24183) * C153454 * C153926) *
               C153910 -
           ((C24114 * C31196 + C31230 + C31230 + C153887 * C31200 +
             C24112 * C9116 + C31231 + C31231 + C24105 * C9122 +
             C24110 * C7674 + C31232 + C31232 + C24104 * C7682) *
                C153454 * C153890 +
            (C31270 + C31269 + C31268) * C153454 * C153915 + C31258 * C153926) *
               C2546) *
              C153511 * C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C153922 +
             C193 * C153903 + C194 * C153874) *
                C47609 +
            (C48049 + C48050 + C48051) * C47610 + C48069 * C153890) *
               C153910 -
           (C50720 * C153890 + (C48054 + C48053 + C48052) * C47610 +
            (C48051 + C48050 + C48049) * C47609) *
               C153911 +
           (C48069 * C47609 + (C48057 + C48056 + C48055) * C47610 +
            (C50717 + C50718 + C50719) * C153890) *
               C2546) *
              C153511 * C153829 +
          (((C48058 + C48059 + C48060) * C47609 +
            (C48061 + C48062 + C48063) * C47610 +
            (C48064 + C48065 + C48066) * C153890) *
               C153911 -
           (C48070 * C153890 + (C48060 + C48059 + C48058) * C47610 +
            (C195 * C153874 + C194 * C153903 + C193 * C153922) * C47609) *
               C153910 -
           (((C134 * C7676 + C7715 + C7715 + C153608 * C7684) * C153874 +
             C7740 * C153903 + C7739 * C153922) *
                C153890 +
            (C48066 + C48065 + C48064) * C47610 + C48070 * C47609) *
               C2546) *
              C153511 * C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
             C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
             C153887 * C354) *
                C153454 * C47609 +
            (C52092 + C52093 + C52094) * C153454 * C47610 + C52106 * C153890) *
               C153910 -
           (C54848 * C153890 + (C52097 + C52096 + C52095) * C153454 * C47610 +
            (C52094 + C52093 + C52092) * C153454 * C47609) *
               C153911 +
           (C52106 * C47609 + (C52100 + C52099 + C52098) * C153454 * C47610 +
            (C54852 + C54853 + C54854) * C153454 * C153890) *
               C2546) *
              C153511 * C153829 +
          (((C3531 + C3530 + C3529) * C153454 * C47609 +
            (C3532 + C3533 + C3534) * C153454 * C47610 +
            (C52101 + C52102 + C52103) * C153454 * C153890) *
               C153911 -
           (C52091 * C153890 + (C3529 + C3530 + C3531) * C153454 * C47610 +
            (C2896 + C2895 + C2894) * C153454 * C47609) *
               C153910 -
           ((C2825 * C31196 + C52063 + C52063 + C153887 * C31200 +
             C2823 * C9116 + C52064 + C52064 + C153913 * C9122 + C2821 * C7674 +
             C52065 + C52065 + C153925 * C7682) *
                C153454 * C153890 +
            (C52103 + C52102 + C52101) * C153454 * C47610 + C52091 * C47609) *
               C2546) *
              C153511 * C153498)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153608 * C152) * C153454 * C55662 +
            C55920 * C55663 + C55921 * C55664 + C55922 * C55665 +
            C55923 * C55666) *
               C153910 -
           (C55940 * C55666 + C55923 * C55665 + C55922 * C55664 +
            C55921 * C55663 + C55920 * C55662) *
               C153911 +
           (C55921 * C55662 + C55922 * C55663 + C55923 * C55664 +
            C55940 * C55665 + C57469 * C55666) *
               C2546) *
              C153511 * C153829 +
          ((C55927 * C55662 + C55928 * C55663 + C55929 * C55664 +
            C55930 * C55665 + C55941 * C55666) *
               C153911 -
           (C55930 * C55666 + C55929 * C55665 + C55928 * C55664 +
            C55927 * C55663 + C193 * C153454 * C55662) *
               C153910 -
           ((C134 * C55914 + C55933 + C55933 + C153608 * C55918) * C153454 *
                C55666 +
            C55941 * C55665 + C55930 * C55664 + C55929 * C55663 +
            C55928 * C55662) *
               C2546) *
              C153511 * C153498)) /
            (p * q * std::sqrt(p + q));
    d2ee[194] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153608 * C152) * C122 + C193 * C123 +
            C194 * C124 + C195 * C125 + C196 * C126) *
               C153626 * C2030 -
           (C619 * C126 + C620 * C125 + C621 * C124 + C622 * C123 +
            (C134 * C542 + C587 + C587 + C153608 * C566) * C122) *
               C153626 * C153591) *
              C153511 * C1225 +
          ((C622 * C122 + C621 * C123 + C620 * C124 + C619 * C125 +
            C895 * C126) *
               C153626 * C153591 -
           (C197 * C126 + C196 * C125 + C195 * C124 + C194 * C123 +
            C193 * C122) *
               C153626 * C2030) *
              C153511 * C1226 +
          ((C194 * C122 + C195 * C123 + C196 * C124 + C197 * C125 +
            C198 * C126) *
               C153626 * C2030 -
           ((C134 * C886 + C892 + C892 + C153608 * C888) * C126 + C895 * C125 +
            C619 * C124 + C620 * C123 + C621 * C122) *
               C153626 * C153591) *
              C153511 * C1227)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153608 * C152) * C122 + C193 * C123 +
            C194 * C124 + C195 * C125 + C196 * C126) *
               C153626 * C2030 -
           (C619 * C126 + C620 * C125 + C621 * C124 + C622 * C123 +
            (C134 * C542 + C587 + C587 + C153608 * C566) * C122) *
               C153626 * C153591) *
              C320 +
          (((C134 * C1057 + C1076 + C1076 + C153608 * C1069) * C122 +
            C1098 * C123 + C1099 * C124 + C1100 * C125 + C1101 * C126) *
               C153626 * C153591 -
           (C406 * C126 + C407 * C125 + C408 * C124 + C409 * C123 +
            (C134 * C329 + C374 + C374 + C153608 * C353) * C122) *
               C153626 * C2030) *
              C321 +
          (((C134 * C330 + C375 + C375 + C153608 * C354) * C122 + C410 * C123 +
            C411 * C124 + C412 * C125 + C413 * C126) *
               C153626 * C2030 -
           ((C134 * C1888 + C1904 + C1904 + C153608 * C1898) * C126 +
            (C134 * C1889 + C1905 + C1905 + C153608 * C1899) * C125 +
            (C134 * C1890 + C1906 + C1906 + C153608 * C1900) * C124 +
            (C134 * C1891 + C1907 + C1907 + C153608 * C1901) * C123 +
            (C134 * C1892 + C1908 + C1908 + C153608 * C1902) * C122) *
               C153626 * C153591) *
              C322) *
         C153492) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
             C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
             C153887 * C354) *
                C2818 +
            (C2894 + C2895 + C2896) * C2819 + C2908 * C153874) *
               C153626 * C2030 -
           (C4004 * C153874 + (C3529 + C3530 + C3531) * C2819 +
            (C2825 * C1892 + C3472 + C3472 + C153887 * C1902 + C2823 * C1057 +
             C3473 + C3473 + C153913 * C1069 + C2821 * C542 + C3474 + C3474 +
             C153925 * C566) *
                C2818) *
               C153626 * C153591) *
              C153511 * C1225 +
          (((C3531 + C3530 + C3529) * C2818 + (C3528 + C3527 + C3526) * C2819 +
            (C4011 + C4012 + C4013) * C153874) *
               C153626 * C153591 -
           (C2909 * C153874 + (C2899 + C2898 + C2897) * C2819 +
            (C2896 + C2895 + C2894) * C2818) *
               C153626 * C2030) *
              C153511 * C1226 +
          ((C2908 * C2818 + (C2902 + C2901 + C2900) * C2819 +
            (C2903 + C2904 + C2905) * C153874) *
               C153626 * C2030 -
           ((C2825 * C1888 + C4001 + C4001 + C153887 * C1898 + C2823 * C1061 +
             C4002 + C4002 + C153913 * C1073 + C2821 * C538 + C4003 + C4003 +
             C153925 * C562) *
                C153874 +
            (C4013 + C4012 + C4011) * C2819 + C4004 * C2818) *
               C153626 * C153591) *
              C153511 * C1227)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
             C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
             C153887 * C354) *
                C2818 +
            (C2894 + C2895 + C2896) * C2819 + C2908 * C153874) *
               C153626 * C2030 -
           (C4004 * C153874 + (C3529 + C3530 + C3531) * C2819 +
            (C2825 * C1892 + C3472 + C3472 + C153887 * C1902 + C2823 * C1057 +
             C3473 + C3473 + C153913 * C1069 + C2821 * C542 + C3474 + C3474 +
             C153925 * C566) *
                C2818) *
               C153626 * C153591) *
              C320 +
          (((C2821 * C1057 + C4316 + C4316 + C153925 * C1069 + C2823 * C1892 +
             C4317 + C4317 + C153913 * C1902 + C2825 * C4303 + C4318 + C4318 +
             C153887 * C4311) *
                C2818 +
            (C4352 + C4353 + C4354) * C2819 +
            (C4355 + C4356 + C4357) * C153874) *
               C153626 * C153591 -
           (C3766 * C153874 + (C3215 + C3216 + C3217) * C2819 +
            (C2825 * C1319 + C3158 + C3158 + C153887 * C1329 + C2823 * C330 +
             C3159 + C3159 + C153913 * C354 + C2821 * C329 + C3160 + C3160 +
             C153925 * C353) *
                C2818) *
               C153626 * C2030) *
              C321 +
          (((C2821 * C330 + C3161 + C3161 + C153925 * C354 + C2823 * C1319 +
             C3162 + C3162 + C153913 * C1329 + C2825 * C3127 + C3163 + C3163 +
             C153887 * C3135) *
                C2818 +
            (C3218 + C3219 + C3220) * C2819 +
            (C3221 + C3222 + C3223) * C153874) *
               C153626 * C2030 -
           ((C2825 * C5701 + C5711 + C5711 + C153887 * C5707 + C2823 * C4305 +
             C5712 + C5712 + C153913 * C4313 + C2821 * C1890 + C5713 + C5713 +
             C153925 * C1900) *
                C153874 +
            (C2825 * C5702 + C5714 + C5714 + C153887 * C5708 + C2823 * C4304 +
             C5715 + C5715 + C153913 * C4312 + C2821 * C1891 + C5716 + C5716 +
             C153925 * C1901) *
                C2819 +
            (C2825 * C5703 + C5717 + C5717 + C153887 * C5709 + C2823 * C4303 +
             C5718 + C5718 + C153913 * C4311 + C2821 * C1892 + C5719 + C5719 +
             C153925 * C1902) *
                C2818) *
               C153626 * C153591) *
              C322) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C2818 +
             C193 * C2819 + C194 * C153874) *
                C153926 +
            (C7742 + C7688 + C7689) * C153915 + C7751 * C153890) *
               C2030 -
           ((C7744 + C7745 + C7746) * C153890 +
            (C7693 + C7692 + C7743) * C153915 +
            (C7689 + C7688 + C7742) * C153926) *
               C153591) *
              C153511 * C1225 +
          (((C7707 + C7708 + C7709) * C153926 +
            (C7710 + C7711 + C7712) * C153915 +
            (C7747 + C7748 + C7749) * C153890) *
               C153591 -
           (C7733 * C153890 + (C7709 + C7708 + C7707) * C153915 +
            (C195 * C153874 + C194 * C2819 + C193 * C2818) * C153926) *
               C2030) *
              C153511 * C1226 +
          (((C194 * C2818 + C195 * C2819 + C196 * C153874) * C153926 +
            (C8193 + C8194 + C8195) * C153915 +
            (C8196 + C8197 + C8198) * C153890) *
               C2030 -
           (((C134 * C2240 + C2256 + C2256 + C153608 * C2250) * C153874 +
             C7741 * C2819 + C7736 * C2818) *
                C153890 +
            (C8198 + C8197 + C8196) * C153915 +
            (C8195 + C8194 + C8193) * C153926) *
               C153591) *
              C153511 * C1227)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C2818 +
             C193 * C2819 + C194 * C153874) *
                C153926 +
            (C7742 + C7688 + C7689) * C153915 + C7751 * C153890) *
               C2030 -
           ((C7744 + C7745 + C7746) * C153890 +
            (C7693 + C7692 + C7743) * C153915 +
            (C7689 + C7688 + C7742) * C153926) *
               C153591) *
              C320 +
          (((C8526 + C8494 + C8495) * C153926 +
            (C8527 + C8498 + C8499) * C153915 +
            (C9137 + C9127 + C9128) * C153890) *
               C153591 -
           (C9134 * C153890 + (C8495 + C8494 + C8526) * C153915 +
            (C408 * C153874 + C409 * C2819 +
             (C134 * C329 + C374 + C374 + C153608 * C353) * C2818) *
                C153926) *
               C2030) *
              C321 +
          ((((C134 * C330 + C375 + C375 + C153608 * C354) * C2818 +
             C410 * C2819 + C411 * C153874) *
                C153926 +
            (C9881 + C9866 + C9867) * C153915 +
            (C9882 + C9870 + C9871) * C153890) *
               C2030 -
           (((C134 * C6301 + C9872 + C9872 + C153608 * C6313) * C153874 +
             (C134 * C6303 + C9873 + C9873 + C153608 * C6315) * C2819 +
             (C134 * C6305 + C9874 + C9874 + C153608 * C6317) * C2818) *
                C153890 +
            (C9871 + C9870 + C9882) * C153915 +
            (C9867 + C9866 + C9881) * C153926) *
               C153591) *
              C322) *
         C153492) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
             C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 + C24119 +
             C153887 * C354) *
                C153922 +
            (C24183 + C24184 + C24185) * C153903 + C24197 * C153874) *
               C153626 * C2030 -
           (C25269 * C153874 + (C24794 + C24795 + C24796) * C153903 +
            (C24114 * C1892 + C24737 + C24737 + C153887 * C1902 +
             C24112 * C1057 + C24738 + C24738 + C24105 * C1069 + C24110 * C542 +
             C24739 + C24739 + C24104 * C566) *
                C153922) *
               C153626 * C153591) *
              C153511 * C1225 +
          (((C24796 + C24795 + C24794) * C153922 +
            (C24793 + C24792 + C24791) * C153903 +
            (C25276 + C25277 + C25278) * C153874) *
               C153626 * C153591 -
           (C24198 * C153874 + (C24188 + C24187 + C24186) * C153903 +
            (C24185 + C24184 + C24183) * C153922) *
               C153626 * C2030) *
              C153511 * C1226 +
          ((C24197 * C153922 + (C24191 + C24190 + C24189) * C153903 +
            (C24192 + C24193 + C24194) * C153874) *
               C153626 * C2030 -
           ((C24114 * C1888 + C25266 + C25266 + C153887 * C1898 +
             C24112 * C1061 + C25267 + C25267 + C24105 * C1073 + C24110 * C538 +
             C25268 + C25268 + C24104 * C562) *
                C153874 +
            (C25278 + C25277 + C25276) * C153903 + C25269 * C153922) *
               C153626 * C153591) *
              C153511 * C1227)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
             C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 + C24119 +
             C153887 * C354) *
                C153922 +
            (C24183 + C24184 + C24185) * C153903 + C24197 * C153874) *
               C153626 * C2030 -
           (C25269 * C153874 + (C24794 + C24795 + C24796) * C153903 +
            (C24114 * C1892 + C24737 + C24737 + C153887 * C1902 +
             C24112 * C1057 + C24738 + C24738 + C24105 * C1069 + C24110 * C542 +
             C24739 + C24739 + C24104 * C566) *
                C153922) *
               C153626 * C153591) *
              C320 +
          (((C24110 * C1057 + C25569 + C25569 + C24104 * C1069 +
             C24112 * C1892 + C25570 + C25570 + C24105 * C1902 +
             C24114 * C4303 + C25571 + C25571 + C153887 * C4311) *
                C153922 +
            (C25605 + C25606 + C25607) * C153903 +
            (C25608 + C25609 + C25610) * C153874) *
               C153626 * C153591 -
           (C25031 * C153874 + (C24492 + C24493 + C24494) * C153903 +
            (C24114 * C1319 + C24435 + C24435 + C153887 * C1329 +
             C24112 * C330 + C24436 + C24436 + C24105 * C354 + C24110 * C329 +
             C24437 + C24437 + C24104 * C353) *
                C153922) *
               C153626 * C2030) *
              C321 +
          (((C24110 * C330 + C24438 + C24438 + C24104 * C354 + C24112 * C1319 +
             C24439 + C24439 + C24105 * C1329 + C24114 * C3127 + C24440 +
             C24440 + C153887 * C3135) *
                C153922 +
            (C24495 + C24496 + C24497) * C153903 +
            (C24498 + C24499 + C24500) * C153874) *
               C153626 * C2030 -
           ((C24114 * C5701 + C26937 + C26937 + C153887 * C5707 +
             C24112 * C4305 + C26938 + C26938 + C24105 * C4313 +
             C24110 * C1890 + C26939 + C26939 + C24104 * C1900) *
                C153874 +
            (C24114 * C5702 + C26940 + C26940 + C153887 * C5708 +
             C24112 * C4304 + C26941 + C26941 + C24105 * C4312 +
             C24110 * C1891 + C26942 + C26942 + C24104 * C1901) *
                C153903 +
            (C24114 * C5703 + C26943 + C26943 + C153887 * C5709 +
             C24112 * C4303 + C26944 + C26944 + C24105 * C4311 +
             C24110 * C1892 + C26945 + C26945 + C24104 * C1902) *
                C153922) *
               C153626 * C153591) *
              C322) *
         C153492) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C28350 * C136 + C28361 + C28361 + C28344 * C152 + C28352 * C329 +
            C28362 + C28362 + C28345 * C353 + C28354 * C330 + C28363 + C28363 +
            C28346 * C354 + C28356 * C1319 + C28364 + C28364 + C28347 * C1329 +
            C28358 * C3127 + C28365 + C28365 + C28348 * C3135) *
               C153454 * C153626 * C2030 -
           (C28358 * C5703 + C28657 + C28657 + C28348 * C5709 + C28356 * C4303 +
            C28658 + C28658 + C28347 * C4311 + C28354 * C1892 + C28659 +
            C28659 + C28346 * C1902 + C28352 * C1057 + C28660 + C28660 +
            C28345 * C1069 + C28350 * C542 + C28661 + C28661 + C28344 * C566) *
               C153454 * C153626 * C153591) *
              C153511 * C1225 +
          ((C28350 * C541 + C28667 + C28667 + C28344 * C565 + C28352 * C1058 +
            C28668 + C28668 + C28345 * C1070 + C28354 * C1891 + C28669 +
            C28669 + C28346 * C1901 + C28356 * C4304 + C28670 + C28670 +
            C28347 * C4312 + C28358 * C5702 + C28671 + C28671 +
            C28348 * C5708) *
               C153454 * C153626 * C153591 -
           (C28358 * C3128 + C28366 + C28366 + C28348 * C3136 + C28356 * C1318 +
            C28367 + C28367 + C28347 * C1328 + C28354 * C331 + C28368 + C28368 +
            C28346 * C355 + C28352 * C328 + C28369 + C28369 + C28345 * C352 +
            C28350 * C137 + C28370 + C28370 + C28344 * C153) *
               C153454 * C153626 * C2030) *
              C153511 * C1226 +
          ((C28350 * C138 + C28371 + C28371 + C28344 * C154 + C28352 * C327 +
            C28372 + C28372 + C28345 * C351 + C28354 * C332 + C28373 + C28373 +
            C28346 * C356 + C28356 * C1317 + C28374 + C28374 + C28347 * C1327 +
            C28358 * C3129 + C28375 + C28375 + C28348 * C3137) *
               C153454 * C153626 * C2030 -
           (C28358 * C5701 + C28926 + C28926 + C28348 * C5707 + C28356 * C4305 +
            C28927 + C28927 + C28347 * C4313 + C28354 * C1890 + C28928 +
            C28928 + C28346 * C1900 + C28352 * C1059 + C28929 + C28929 +
            C28345 * C1071 + C28350 * C540 + C28930 + C28930 + C28344 * C564) *
               C153454 * C153626 * C153591) *
              C153511 * C1227)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C28350 * C136 + C28361 + C28361 + C28344 * C152 + C28352 * C329 +
            C28362 + C28362 + C28345 * C353 + C28354 * C330 + C28363 + C28363 +
            C28346 * C354 + C28356 * C1319 + C28364 + C28364 + C28347 * C1329 +
            C28358 * C3127 + C28365 + C28365 + C28348 * C3135) *
               C153454 * C153626 * C2030 -
           (C28358 * C5703 + C28657 + C28657 + C28348 * C5709 + C28356 * C4303 +
            C28658 + C28658 + C28347 * C4311 + C28354 * C1892 + C28659 +
            C28659 + C28346 * C1902 + C28352 * C1057 + C28660 + C28660 +
            C28345 * C1069 + C28350 * C542 + C28661 + C28661 + C28344 * C566) *
               C153454 * C153626 * C153591) *
              C320 +
          ((C28350 * C1057 + C29099 + C29099 + C28344 * C1069 + C28352 * C1892 +
            C29100 + C29100 + C28345 * C1902 + C28354 * C4303 + C29101 +
            C29101 + C28346 * C4311 + C28356 * C5703 + C29102 + C29102 +
            C28347 * C5709 + C28358 * C29092 + C29103 + C29103 +
            C28348 * C29096) *
               C153454 * C153626 * C153591 -
           (C28358 * C4723 + C28509 + C28509 + C28348 * C4729 + C28356 * C3127 +
            C28510 + C28510 + C28347 * C3135 + C28354 * C1319 + C28511 +
            C28511 + C28346 * C1329 + C28352 * C330 + C28512 + C28512 +
            C28345 * C354 + C28350 * C329 + C28513 + C28513 + C28344 * C353) *
               C153454 * C153626 * C2030) *
              C321 +
          ((C28350 * C330 + C28514 + C28514 + C28344 * C354 + C28352 * C1319 +
            C28515 + C28515 + C28345 * C1329 + C28354 * C3127 + C28516 +
            C28516 + C28346 * C3135 + C28356 * C4723 + C28517 + C28517 +
            C28347 * C4729 + C28358 * C28502 + C28518 + C28518 +
            C28348 * C28506) *
               C153454 * C153626 * C2030 -
           (C28358 * C29856 + C29860 + C29860 + C28348 * C29858 +
            C28356 * C29092 + C29861 + C29861 + C28347 * C29096 +
            C28354 * C5703 + C29862 + C29862 + C28346 * C5709 + C28352 * C4303 +
            C29863 + C29863 + C28345 * C4311 + C28350 * C1892 + C29864 +
            C29864 + C28344 * C1902) *
               C153454 * C153626 * C153591) *
              C322) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
             C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 + C24119 +
             C153887 * C354) *
                C153454 * C153926 +
            (C31259 + C31260 + C31261) * C153454 * C153915 + C31273 * C153890) *
               C2030 -
           ((C31265 + C31266 + C31267) * C153454 * C153890 +
            (C31264 + C31263 + C31262) * C153454 * C153915 +
            (C31261 + C31260 + C31259) * C153454 * C153926) *
               C153591) *
              C153511 * C1225 +
          (((C24796 + C24795 + C24794) * C153454 * C153926 +
            (C24797 + C24798 + C24799) * C153454 * C153915 +
            (C31268 + C31269 + C31270) * C153454 * C153890) *
               C153591 -
           (C31258 * C153890 + (C24794 + C24795 + C24796) * C153454 * C153915 +
            (C24185 + C24184 + C24183) * C153454 * C153926) *
               C2030) *
              C153511 * C1226 +
          ((C24197 * C153454 * C153926 +
            (C24793 + C24792 + C24791) * C153454 * C153915 +
            (C24800 + C24801 + C24802) * C153454 * C153890) *
               C2030 -
           ((C24114 * C6301 + C27528 + C27528 + C153887 * C6313 +
             C24112 * C6302 + C27529 + C27529 + C24105 * C6314 +
             C24110 * C2242 + C27530 + C27530 + C24104 * C2252) *
                C153454 * C153890 +
            (C24802 + C24801 + C24800) * C153454 * C153915 +
            C25269 * C153454 * C153926) *
               C153591) *
              C153511 * C1227)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
             C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 + C24119 +
             C153887 * C354) *
                C153454 * C153926 +
            (C31259 + C31260 + C31261) * C153454 * C153915 + C31273 * C153890) *
               C2030 -
           ((C31265 + C31266 + C31267) * C153454 * C153890 +
            (C31264 + C31263 + C31262) * C153454 * C153915 +
            (C31261 + C31260 + C31259) * C153454 * C153926) *
               C153591) *
              C320 +
          (((C32045 + C32046 + C32047) * C153454 * C153926 +
            (C32048 + C32049 + C32050) * C153454 * C153915 +
            (C32663 + C32664 + C32665) * C153454 * C153890) *
               C153591 -
           (C32662 * C153890 + (C32047 + C32046 + C32045) * C153454 * C153915 +
            (C24114 * C1319 + C24435 + C24435 + C153887 * C1329 +
             C24112 * C330 + C24436 + C24436 + C24105 * C354 + C24110 * C329 +
             C24437 + C24437 + C24104 * C353) *
                C153454 * C153926) *
               C2030) *
              C321 +
          (((C24110 * C330 + C24438 + C24438 + C24104 * C354 + C24112 * C1319 +
             C24439 + C24439 + C24105 * C1329 + C24114 * C3127 + C24440 +
             C24440 + C153887 * C3135) *
                C153454 * C153926 +
            (C33419 + C33420 + C33421) * C153454 * C153915 +
            (C33422 + C33423 + C33424) * C153454 * C153890) *
               C2030 -
           ((C24114 * C30190 + C33404 + C33404 + C153887 * C30194 +
             C24112 * C30191 + C33405 + C33405 + C24105 * C30195 +
             C24110 * C6305 + C33406 + C33406 + C24104 * C6317) *
                C153454 * C153890 +
            (C33424 + C33423 + C33422) * C153454 * C153915 +
            (C33421 + C33420 + C33419) * C153454 * C153926) *
               C153591) *
              C322) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C153922 +
             C193 * C153903 + C194 * C153874) *
                C47609 +
            (C48049 + C48050 + C48051) * C47610 + C48069 * C153890) *
               C2030 -
           ((C48055 + C48056 + C48057) * C153890 +
            (C48054 + C48053 + C48052) * C47610 +
            (C48051 + C48050 + C48049) * C47609) *
               C153591) *
              C153511 * C1225 +
          (((C48058 + C48059 + C48060) * C47609 +
            (C48061 + C48062 + C48063) * C47610 +
            (C48064 + C48065 + C48066) * C153890) *
               C153591 -
           (C48070 * C153890 + (C48060 + C48059 + C48058) * C47610 +
            (C195 * C153874 + C194 * C153903 + C193 * C153922) * C47609) *
               C2030) *
              C153511 * C1226 +
          (((C194 * C153922 + C195 * C153903 + C196 * C153874) * C47609 +
            (C48507 + C48508 + C48509) * C47610 +
            (C48510 + C48511 + C48512) * C153890) *
               C2030 -
           (((C134 * C2240 + C2256 + C2256 + C153608 * C2250) * C153874 +
             C7741 * C153903 + C7736 * C153922) *
                C153890 +
            (C48512 + C48511 + C48510) * C47610 +
            (C48509 + C48508 + C48507) * C47609) *
               C153591) *
              C153511 * C1227)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C153922 +
             C193 * C153903 + C194 * C153874) *
                C47609 +
            (C48049 + C48050 + C48051) * C47610 + C48069 * C153890) *
               C2030 -
           ((C48055 + C48056 + C48057) * C153890 +
            (C48054 + C48053 + C48052) * C47610 +
            (C48051 + C48050 + C48049) * C47609) *
               C153591) *
              C320 +
          (((C48803 + C48804 + C48805) * C47609 +
            (C48806 + C48807 + C48808) * C47610 +
            (C49397 + C49398 + C49399) * C153890) *
               C153591 -
           (C49401 * C153890 + (C48805 + C48804 + C48803) * C47610 +
            (C408 * C153874 + C409 * C153903 +
             (C134 * C329 + C374 + C374 + C153608 * C353) * C153922) *
                C47609) *
               C2030) *
              C321 +
          ((((C134 * C330 + C375 + C375 + C153608 * C354) * C153922 +
             C410 * C153903 + C411 * C153874) *
                C47609 +
            (C50128 + C50129 + C50130) * C47610 +
            (C50131 + C50132 + C50133) * C153890) *
               C2030 -
           (((C134 * C6301 + C9872 + C9872 + C153608 * C6313) * C153874 +
             (C134 * C6303 + C9873 + C9873 + C153608 * C6315) * C153903 +
             (C134 * C6305 + C9874 + C9874 + C153608 * C6317) * C153922) *
                C153890 +
            (C50133 + C50132 + C50131) * C47610 +
            (C50130 + C50129 + C50128) * C47609) *
               C153591) *
              C322) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
             C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
             C153887 * C354) *
                C153454 * C47609 +
            (C52092 + C52093 + C52094) * C153454 * C47610 + C52106 * C153890) *
               C2030 -
           ((C52098 + C52099 + C52100) * C153454 * C153890 +
            (C52097 + C52096 + C52095) * C153454 * C47610 +
            (C52094 + C52093 + C52092) * C153454 * C47609) *
               C153591) *
              C153511 * C1225 +
          (((C3531 + C3530 + C3529) * C153454 * C47609 +
            (C3532 + C3533 + C3534) * C153454 * C47610 +
            (C52101 + C52102 + C52103) * C153454 * C153890) *
               C153591 -
           (C52091 * C153890 + (C3529 + C3530 + C3531) * C153454 * C47610 +
            (C2896 + C2895 + C2894) * C153454 * C47609) *
               C2030) *
              C153511 * C1226 +
          ((C2908 * C153454 * C47609 +
            (C3528 + C3527 + C3526) * C153454 * C47610 +
            (C3535 + C3536 + C3537) * C153454 * C153890) *
               C2030 -
           ((C2825 * C6301 + C6320 + C6320 + C153887 * C6313 + C2823 * C6302 +
             C6321 + C6321 + C153913 * C6314 + C2821 * C2242 + C6322 + C6322 +
             C153925 * C2252) *
                C153454 * C153890 +
            (C3537 + C3536 + C3535) * C153454 * C47610 +
            C4004 * C153454 * C47609) *
               C153591) *
              C153511 * C1227)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
             C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
             C153887 * C354) *
                C153454 * C47609 +
            (C52092 + C52093 + C52094) * C153454 * C47610 + C52106 * C153890) *
               C2030 -
           ((C52098 + C52099 + C52100) * C153454 * C153890 +
            (C52097 + C52096 + C52095) * C153454 * C47610 +
            (C52094 + C52093 + C52092) * C153454 * C47609) *
               C153591) *
              C320 +
          (((C52875 + C52876 + C52877) * C153454 * C47609 +
            (C52878 + C52879 + C52880) * C153454 * C47610 +
            (C53490 + C53491 + C53492) * C153454 * C153890) *
               C153591 -
           (C53489 * C153890 + (C52877 + C52876 + C52875) * C153454 * C47610 +
            (C2825 * C1319 + C3158 + C3158 + C153887 * C1329 + C2823 * C330 +
             C3159 + C3159 + C153913 * C354 + C2821 * C329 + C3160 + C3160 +
             C153925 * C353) *
                C153454 * C47609) *
               C2030) *
              C321 +
          (((C2821 * C330 + C3161 + C3161 + C153925 * C354 + C2823 * C1319 +
             C3162 + C3162 + C153913 * C1329 + C2825 * C3127 + C3163 + C3163 +
             C153887 * C3135) *
                C153454 * C47609 +
            (C54246 + C54247 + C54248) * C153454 * C47610 +
            (C54249 + C54250 + C54251) * C153454 * C153890) *
               C2030 -
           ((C2825 * C30190 + C54231 + C54231 + C153887 * C30194 +
             C2823 * C30191 + C54232 + C54232 + C153913 * C30195 +
             C2821 * C6305 + C54233 + C54233 + C153925 * C6317) *
                C153454 * C153890 +
            (C54251 + C54250 + C54249) * C153454 * C47610 +
            (C54248 + C54247 + C54246) * C153454 * C47609) *
               C153591) *
              C322) *
         C153492) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153608 * C152) * C153454 * C55662 +
            C55920 * C55663 + C55921 * C55664 + C55922 * C55665 +
            C55923 * C55666) *
               C2030 -
           (C55940 * C55666 + C55923 * C55665 + C55922 * C55664 +
            C55921 * C55663 + C55920 * C55662) *
               C153591) *
              C153511 * C1225 +
          ((C55927 * C55662 + C55928 * C55663 + C55929 * C55664 +
            C55930 * C55665 + C55941 * C55666) *
               C153591 -
           (C55930 * C55666 + C55929 * C55665 + C55928 * C55664 +
            C55927 * C55663 + C193 * C153454 * C55662) *
               C2030) *
              C153511 * C1226 +
          ((C194 * C153454 * C55662 + C56186 * C55663 + C56187 * C55664 +
            C56188 * C55665 + C56189 * C55666) *
               C2030 -
           ((C134 * C10464 + C10479 + C10479 + C153608 * C10470) * C153454 *
                C55666 +
            C56189 * C55665 + C56188 * C55664 + C56187 * C55663 +
            C56186 * C55662) *
               C153591) *
              C153511 * C1227)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153608 * C152) * C153454 * C55662 +
            C55920 * C55663 + C55921 * C55664 + C55922 * C55665 +
            C55923 * C55666) *
               C2030 -
           (C55940 * C55666 + C55923 * C55665 + C55922 * C55664 +
            C55921 * C55663 + C55920 * C55662) *
               C153591) *
              C320 +
          ((C56355 * C55662 + C56356 * C55663 + C56357 * C55664 +
            C56373 * C55665 + C56712 * C55666) *
               C153591 -
           (C56373 * C55666 + C56357 * C55665 + C56356 * C55664 +
            C56355 * C55663 +
            (C134 * C329 + C374 + C374 + C153608 * C353) * C153454 * C55662) *
               C2030) *
              C321 +
          (((C134 * C330 + C375 + C375 + C153608 * C354) * C153454 * C55662 +
            C57119 * C55663 + C57120 * C55664 + C57132 * C55665 +
            C57133 * C55666) *
               C2030 -
           ((C134 * C34006 + C57125 + C57125 + C153608 * C34010) * C153454 *
                C55666 +
            C57133 * C55665 + C57132 * C55664 + C57120 * C55663 +
            C57119 * C55662) *
               C153591) *
              C322) *
         C153492) /
            (p * q * std::sqrt(p + q));
    d2ee[195] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
              C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 +
              C24119 + C153887 * C354) *
                 C153818 +
             (C24183 + C24184 + C24185) * C153464) *
                C153853 +
            ((C31259 + C31260 + C31261) * C153818 + C39378 * C153464) *
                C153713) *
               C153527 * C153837 -
           (((C25607 + C25606 + C25605) * C153464 +
             (C32047 + C32046 + C32045) * C153818) *
                C153713 +
            ((C24492 + C24493 + C24494) * C153464 +
             (C24114 * C1319 + C24435 + C24435 + C153887 * C1329 +
              C24112 * C330 + C24436 + C24436 + C24105 * C354 + C24110 * C329 +
              C24437 + C24437 + C24104 * C353) *
                 C153818) *
                C153853) *
               C153527 * C153563) *
              C153906 +
          ((((C24494 + C24493 + C24492) * C153818 +
             (C24491 + C24490 + C24489) * C153464) *
                C153853 +
            ((C25605 + C25606 + C25607) * C153818 +
             (C25608 + C25609 + C25610) * C153464) *
                C153713) *
               C153527 * C153563 -
           ((C25269 * C153464 + C39379 * C153818) * C153713 +
            ((C24188 + C24187 + C24186) * C153464 +
             (C24185 + C24184 + C24183) * C153818) *
                C153853) *
               C153527 * C153837) *
              C153907 +
          (((C24197 * C153818 + (C24191 + C24190 + C24189) * C153464) *
                C153853 +
            ((C24793 + C24792 + C24791) * C153818 +
             (C25276 + C25277 + C25278) * C153464) *
                C153713) *
               C153527 * C153837 -
           (((C24114 * C4306 + C25590 + C25590 + C153887 * C4314 +
              C24112 * C1889 + C25591 + C25591 + C24105 * C1899 +
              C24110 * C1060 + C25592 + C25592 + C24104 * C1072) *
                 C153464 +
             (C25610 + C25609 + C25608) * C153818) *
                C153713 +
            ((C25040 + C25039 + C25038) * C153464 + C25031 * C153818) *
                C153853) *
               C153527 * C153563) *
              C752)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C11344 +
             C193 * C11345 + C194 * C11346 + C195 * C153852) *
                C153853 +
            (C15568 + C15569 + C15570 + C15571) * C153713) *
               C153527 * C153837 -
           ((C1100 * C153852 + C1099 * C11346 + C1098 * C11345 +
             C8522 * C11344) *
                C153713 +
            (C407 * C153852 + C408 * C11346 + C409 * C11345 +
             (C134 * C329 + C374 + C374 + C153608 * C353) * C11344) *
                C153853) *
               C153527 * C153563) *
              C153906 +
          (((C409 * C11344 + C408 * C11345 + C407 * C11346 + C406 * C153852) *
                C153853 +
            (C1098 * C11344 + C1099 * C11345 + C1100 * C11346 +
             C1101 * C153852) *
                C153713) *
               C153527 * C153563 -
           ((C15579 + C15578 + C15577 + C15576) * C153713 +
            (C196 * C153852 + C195 * C11346 + C194 * C11345 + C193 * C11344) *
                C153853) *
               C153527 * C153837) *
              C153907 +
          (((C194 * C11344 + C195 * C11345 + C196 * C11346 + C197 * C153852) *
                C153853 +
            (C621 * C11344 + C620 * C11345 + C619 * C11346 + C895 * C153852) *
                C153713) *
               C153527 * C153837 -
           (((C134 * C1062 + C1089 + C1089 + C153608 * C1074) * C153852 +
             C1101 * C11346 + C1100 * C11345 + C1099 * C11344) *
                C153713 +
            (C762 * C153852 + C406 * C11346 + C407 * C11345 + C408 * C11344) *
                C153853) *
               C153527 * C153563) *
              C752)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C153818 +
             C193 * C153464) *
                C63320 +
            (C63718 + C63719) * C63321 + C63734 * C63322 + C63735 * C153867) *
               C153527 * C153837 -
           ((C8524 * C153464 + C9136 * C153818) * C153867 +
            (C7451 * C153464 + C8523 * C153818) * C63322 +
            (C1098 * C153464 + C8522 * C153818) * C63321 +
            (C409 * C153464 +
             (C134 * C329 + C374 + C374 + C153608 * C353) * C153818) *
                C63320) *
               C153527 * C153563) *
              C153906 +
          (((C409 * C153818 + C408 * C153464) * C63320 +
            (C1098 * C153818 + C1099 * C153464) * C63321 +
            (C7451 * C153818 + C7450 * C153464) * C63322 +
            (C8524 * C153818 + C8525 * C153464) * C153867) *
               C153527 * C153563 -
           (C63736 * C153867 + C63737 * C63322 + (C63727 + C63726) * C63321 +
            (C194 * C153464 + C193 * C153818) * C63320) *
               C153527 * C153837) *
              C153907 +
          (((C194 * C153818 + C195 * C153464) * C63320 +
            (C621 * C153818 + C620 * C153464) * C63321 +
            (C624 * C153818 + C625 * C153464) * C63322 +
            (C7736 * C153818 + C7741 * C153464) * C153867) *
               C153527 * C153837 -
           (((C134 * C8488 + C8513 + C8513 + C153608 * C8490) * C153464 +
             C8525 * C153818) *
                C153867 +
            (C7974 * C153464 + C7450 * C153818) * C63322 +
            (C1100 * C153464 + C1099 * C153818) * C63321 +
            (C407 * C153464 + C408 * C153818) * C63320) *
               C153527 * C153563) *
              C752)) /
            (p * q * std::sqrt(p + q));
    d2ee[196] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
               C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 +
               C24119 + C153887 * C354) *
                  C153818 +
              (C24183 + C24184 + C24185) * C153464) *
                 C153853 +
             ((C31259 + C31260 + C31261) * C153818 + C39378 * C153464) *
                 C153713) *
                C153838 -
            ((C31245 * C153464 + (C31264 + C31263 + C31262) * C153818) *
                 C153713 +
             (C39379 * C153464 + (C31261 + C31260 + C31259) * C153818) *
                 C153853) *
                C153591) *
               C153837 +
           ((((C32045 + C32046 + C32047) * C153818 + C40351 * C153464) *
                 C153853 +
             ((C32048 + C32049 + C32050) * C153818 +
              (C32051 + C32052 + C32053) * C153464) *
                 C153713) *
                C153591 -
            ((C40352 * C153464 + (C32047 + C32046 + C32045) * C153818) *
                 C153713 +
             ((C24492 + C24493 + C24494) * C153464 +
              (C24114 * C1319 + C24435 + C24435 + C153887 * C1329 +
               C24112 * C330 + C24436 + C24436 + C24105 * C354 + C24110 * C329 +
               C24437 + C24437 + C24104 * C353) *
                  C153818) *
                 C153853) *
                C153838) *
               C153563) *
              C323 +
          ((((C39378 * C153818 + C39962 * C153464) * C153853 +
             (C39380 * C153818 + (C24800 + C24801 + C24802) * C153464) *
                 C153713) *
                C153591 -
            ((C25269 * C153464 + C39379 * C153818) * C153713 +
             ((C24188 + C24187 + C24186) * C153464 +
              (C24185 + C24184 + C24183) * C153818) *
                 C153853) *
                C153838) *
               C153837 +
           ((((C24494 + C24493 + C24492) * C153818 +
              (C24491 + C24490 + C24489) * C153464) *
                 C153853 +
             (C40351 * C153818 + (C25608 + C25609 + C25610) * C153464) *
                 C153713) *
                C153838 -
            (((C24114 * C4957 + C26202 + C26202 + C153887 * C4963 +
               C24112 * C3443 + C26203 + C26203 + C24105 * C3451 +
               C24110 * C1459 + C26204 + C26204 + C24104 * C1469) *
                  C153464 +
              (C32053 + C32052 + C32051) * C153818) *
                 C153713 +
             ((C25610 + C25609 + C25608) * C153464 + C40352 * C153818) *
                 C153853) *
                C153591) *
               C153563) *
              C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C153608 * C152) * C11344 +
              C193 * C11345 + C194 * C11346 + C195 * C153852) *
                 C153853 +
             (C15568 + C15569 + C15570 + C15571) * C153713) *
                C153838 -
            ((C15572 + C15573 + C15574 + C15575) * C153713 +
             (C15571 + C15570 + C15569 + C15568) * C153853) *
                C153591) *
               C153837 +
           (((C16234 + C16235 + C16236 + C16237) * C153853 +
             (C8523 * C11344 + C7451 * C11345 + C7450 * C11346 +
              C7974 * C153852) *
                 C153713) *
                C153591 -
            ((C16237 + C16236 + C16235 + C16234) * C153713 +
             (C407 * C153852 + C408 * C11346 + C409 * C11345 +
              (C134 * C329 + C374 + C374 + C153608 * C353) * C11344) *
                 C153853) *
                C153838) *
               C153563) *
              C323 +
          ((((C15576 + C15577 + C15578 + C15579) * C153853 +
             (C15580 + C15581 + C15582 + C15583) * C153713) *
                C153591 -
            ((C15579 + C15578 + C15577 + C15576) * C153713 +
             (C196 * C153852 + C195 * C11346 + C194 * C11345 + C193 * C11344) *
                 C153853) *
                C153838) *
               C153837 +
           (((C409 * C11344 + C408 * C11345 + C407 * C11346 + C406 * C153852) *
                 C153853 +
             (C16238 + C16239 + C16240 + C16241) * C153713) *
                C153838 -
            (((C134 * C1457 + C1473 + C1473 + C153608 * C1467) * C153852 +
              C7974 * C11346 + C7450 * C11345 + C7451 * C11344) *
                 C153713 +
             (C16241 + C16240 + C16239 + C16238) * C153853) *
                C153591) *
               C153563) *
              C153498)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C153608 * C152) * C153818 +
              C193 * C153464) *
                 C63320 +
             (C63718 + C63719) * C63321 + C63734 * C63322 + C63735 * C153867) *
                C153838 -
            ((C63724 + C63725) * C153867 + (C63723 + C63722) * C63322 +
             (C63721 + C63720) * C63321 + (C63719 + C63718) * C63320) *
                C153591) *
               C153837 +
           (((C64390 + C64391) * C63320 + (C64392 + C64393) * C63321 +
             (C64394 + C64395) * C63322 +
             (C56371 * C153818 + C56372 * C153464) * C153867) *
                C153591 -
            ((C64395 + C64394) * C153867 + (C64393 + C64392) * C63322 +
             (C64391 + C64390) * C63321 +
             (C409 * C153464 +
              (C134 * C329 + C374 + C374 + C153608 * C353) * C153818) *
                 C63320) *
                C153838) *
               C153563) *
              C323 +
          ((((C63726 + C63727) * C63320 + (C63728 + C63729) * C63321 +
             (C63730 + C63731) * C63322 + (C63732 + C63733) * C153867) *
                C153591 -
            (C63736 * C153867 + C63737 * C63322 + (C63727 + C63726) * C63321 +
             (C194 * C153464 + C193 * C153818) * C63320) *
                C153838) *
               C153837 +
           (((C409 * C153818 + C408 * C153464) * C63320 +
             (C64396 + C64397) * C63321 + (C64398 + C64399) * C63322 +
             (C64400 + C64401) * C153867) *
                C153838 -
            (((C134 * C9115 + C9130 + C9130 + C153608 * C9121) * C153464 +
              C56372 * C153818) *
                 C153867 +
             (C64401 + C64400) * C63322 + (C64399 + C64398) * C63321 +
             (C64397 + C64396) * C63320) *
                C153591) *
               C153563) *
              C153498)) /
            (p * q * std::sqrt(p + q));
    d2ee[197] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C136 + C161 + C161 + C153608 * C152) * C11344 +
                C193 * C11345 + C194 * C11346 + C195 * C153852) *
                   C153853 +
               (C7734 * C11344 + C622 * C11345 + C621 * C11346 +
                C620 * C153852) *
                   C153713) *
                  C153527 * C153511 * C130 -
              ((C619 * C153852 + C620 * C11346 + C621 * C11345 +
                C622 * C11344) *
                   C153713 +
               (C196 * C153852 + C195 * C11346 + C194 * C11345 +
                C193 * C11344) *
                   C153853) *
                  C153527 * C153511 * C131 +
              ((C194 * C11344 + C195 * C11345 + C196 * C11346 +
                C197 * C153852) *
                   C153853 +
               (C621 * C11344 + C620 * C11345 + C619 * C11346 +
                C895 * C153852) *
                   C153713) *
                  C153527 * C153511 * C132 -
              (((C134 * C886 + C892 + C892 + C153608 * C888) * C153852 +
                C895 * C11346 + C619 * C11345 + C620 * C11344) *
                   C153713 +
               (C198 * C153852 + C197 * C11346 + C196 * C11345 +
                C195 * C11344) *
                   C153853) *
                  C153527 * C153511 * C133) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C134 * C136 + C161 + C161 + C153608 * C152) * C11344 +
                 C193 * C11345 + C194 * C11346 + C195 * C153852) *
                    C153853 +
                (C7734 * C11344 + C622 * C11345 + C621 * C11346 +
                 C620 * C153852) *
                    C153713) *
                   C153527 * C320 -
               ((C1100 * C153852 + C1099 * C11346 + C1098 * C11345 +
                 C8522 * C11344) *
                    C153713 +
                (C407 * C153852 + C408 * C11346 + C409 * C11345 +
                 (C134 * C329 + C374 + C374 + C153608 * C353) * C11344) *
                    C153853) *
                   C153527 * C321 +
               (((C134 * C330 + C375 + C375 + C153608 * C354) * C11344 +
                 C410 * C11345 + C411 * C11346 + C412 * C153852) *
                    C153853 +
                (C9879 * C11344 + C7452 * C11345 + C7453 * C11346 +
                 C15373 * C153852) *
                    C153713) *
                   C153527 * C322) *
                  C323 +
              (((C409 * C11344 + C408 * C11345 + C407 * C11346 +
                 C406 * C153852) *
                    C153853 +
                (C1098 * C11344 + C1099 * C11345 + C1100 * C11346 +
                 C1101 * C153852) *
                    C153713) *
                   C153527 * C321 -
               ((C619 * C153852 + C620 * C11346 + C621 * C11345 +
                 C622 * C11344) *
                    C153713 +
                (C196 * C153852 + C195 * C11346 + C194 * C11345 +
                 C193 * C11344) *
                    C153853) *
                   C153527 * C320 -
               (((C134 * C1888 + C1904 + C1904 + C153608 * C1898) * C153852 +
                 C15373 * C11346 + C7453 * C11345 + C7452 * C11344) *
                    C153713 +
                (C413 * C153852 + C412 * C11346 + C411 * C11345 +
                 C410 * C11344) *
                    C153853) *
                   C153527 * C322) *
                  C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C11344 +
             C193 * C11345 + C194 * C11346 + C195 * C153852) *
                C153853 +
            (C15568 + C15569 + C15570 + C15571) * C153713) *
               C535 -
           ((C15572 + C15573 + C15574 + C15575) * C153713 +
            (C15571 + C15570 + C15569 + C15568) * C153853) *
               C536 +
           ((C15575 + C15574 + C15573 + C15572) * C153853 +
            (C7738 * C11344 + C7737 * C11345 + C7736 * C11346 +
             C7741 * C153852) *
                C153713) *
               C537) *
              C153511 * C323 +
          (((C15576 + C15577 + C15578 + C15579) * C153853 +
            (C15580 + C15581 + C15582 + C15583) * C153713) *
               C536 -
           ((C15579 + C15578 + C15577 + C15576) * C153713 +
            (C196 * C153852 + C195 * C11346 + C194 * C11345 + C193 * C11344) *
                C153853) *
               C535 -
           (((C134 * C2240 + C2256 + C2256 + C153608 * C2250) * C153852 +
             C7741 * C11346 + C7736 * C11345 + C7737 * C11344) *
                C153713 +
            (C15583 + C15582 + C15581 + C15580) * C153853) *
               C537) *
              C153511 * C153498)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
             C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 + C24119 +
             C153887 * C354) *
                C153818 +
            (C24183 + C24184 + C24185) * C153464) *
               C153853 +
           ((C31259 + C31260 + C31261) * C153818 +
            (C24796 + C24795 + C24794) * C153464) *
               C153713) *
              C153527 * C153511 * C130 -
          ((C25269 * C153464 + (C24794 + C24795 + C24796) * C153818) * C153713 +
           ((C24188 + C24187 + C24186) * C153464 +
            (C24185 + C24184 + C24183) * C153818) *
               C153853) *
              C153527 * C153511 * C131 +
          ((C24197 * C153818 + (C24191 + C24190 + C24189) * C153464) * C153853 +
           ((C24793 + C24792 + C24791) * C153818 +
            (C25276 + C25277 + C25278) * C153464) *
               C153713) *
              C153527 * C153511 * C132 -
          (((C24114 * C1888 + C25266 + C25266 + C153887 * C1898 +
             C24112 * C1061 + C25267 + C25267 + C24105 * C1073 + C24110 * C538 +
             C25268 + C25268 + C24104 * C562) *
                C153464 +
            (C25278 + C25277 + C25276) * C153818) *
               C153713 +
           ((C24194 + C24193 + C24192) * C153464 + C24198 * C153818) *
               C153853) *
              C153527 * C153511 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
              C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 +
              C24119 + C153887 * C354) *
                 C153818 +
             (C24183 + C24184 + C24185) * C153464) *
                C153853 +
            ((C31259 + C31260 + C31261) * C153818 +
             (C24796 + C24795 + C24794) * C153464) *
                C153713) *
               C153527 * C320 -
           (((C25607 + C25606 + C25605) * C153464 +
             (C32047 + C32046 + C32045) * C153818) *
                C153713 +
            ((C24492 + C24493 + C24494) * C153464 +
             (C24114 * C1319 + C24435 + C24435 + C153887 * C1329 +
              C24112 * C330 + C24436 + C24436 + C24105 * C354 + C24110 * C329 +
              C24437 + C24437 + C24104 * C353) *
                 C153818) *
                C153853) *
               C153527 * C321 +
           (((C24110 * C330 + C24438 + C24438 + C24104 * C354 + C24112 * C1319 +
              C24439 + C24439 + C24105 * C1329 + C24114 * C3127 + C24440 +
              C24440 + C153887 * C3135) *
                 C153818 +
             (C24495 + C24496 + C24497) * C153464) *
                C153853 +
            ((C33419 + C33420 + C33421) * C153818 +
             (C39082 + C39083 + C39084) * C153464) *
                C153713) *
               C153527 * C322) *
              C323 +
          ((((C24494 + C24493 + C24492) * C153818 +
             (C24491 + C24490 + C24489) * C153464) *
                C153853 +
            ((C25605 + C25606 + C25607) * C153818 +
             (C25608 + C25609 + C25610) * C153464) *
                C153713) *
               C153527 * C321 -
           ((C25269 * C153464 + (C24794 + C24795 + C24796) * C153818) *
                C153713 +
            ((C24188 + C24187 + C24186) * C153464 +
             (C24185 + C24184 + C24183) * C153818) *
                C153853) *
               C153527 * C320 -
           (((C24114 * C5701 + C26937 + C26937 + C153887 * C5707 +
              C24112 * C4305 + C26938 + C26938 + C24105 * C4313 +
              C24110 * C1890 + C26939 + C26939 + C24104 * C1900) *
                 C153464 +
             (C39084 + C39083 + C39082) * C153818) *
                C153713 +
            ((C24500 + C24499 + C24498) * C153464 +
             (C24497 + C24496 + C24495) * C153818) *
                C153853) *
               C153527 * C322) *
              C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
              C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 +
              C24119 + C153887 * C354) *
                 C153818 +
             (C24183 + C24184 + C24185) * C153464) *
                C153853 +
            ((C31259 + C31260 + C31261) * C153818 + C39378 * C153464) *
                C153713) *
               C535 -
           ((C31245 * C153464 + (C31264 + C31263 + C31262) * C153818) *
                C153713 +
            (C39379 * C153464 + (C31261 + C31260 + C31259) * C153818) *
                C153853) *
               C536 +
           ((C31272 * C153818 + C39380 * C153464) * C153853 +
            ((C31267 + C31266 + C31265) * C153818 +
             (C31268 + C31269 + C31270) * C153464) *
                C153713) *
               C537) *
              C153511 * C323 +
          (((C39378 * C153818 + (C24793 + C24792 + C24791) * C153464) *
                C153853 +
            (C39380 * C153818 + (C24800 + C24801 + C24802) * C153464) *
                C153713) *
               C536 -
           ((C25269 * C153464 + C39379 * C153818) * C153713 +
            ((C24188 + C24187 + C24186) * C153464 +
             (C24185 + C24184 + C24183) * C153818) *
                C153853) *
               C535 -
           (((C24114 * C6301 + C27528 + C27528 + C153887 * C6313 +
              C24112 * C6302 + C27529 + C27529 + C24105 * C6314 +
              C24110 * C2242 + C27530 + C27530 + C24104 * C2252) *
                 C153464 +
             (C31270 + C31269 + C31268) * C153818) *
                C153713 +
            ((C24802 + C24801 + C24800) * C153464 + C31245 * C153818) *
                C153853) *
               C537) *
              C153511 * C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153608 * C152) * C153818 +
            C193 * C153464) *
               C63320 +
           (C7734 * C153818 + C622 * C153464) * C63321 +
           (C7735 * C153818 + C623 * C153464) * C63322 +
           (C7738 * C153818 + C7737 * C153464) * C153867) *
              C153527 * C153511 * C130 -
          ((C7736 * C153464 + C7737 * C153818) * C153867 +
           (C624 * C153464 + C623 * C153818) * C63322 +
           (C621 * C153464 + C622 * C153818) * C63321 +
           (C194 * C153464 + C193 * C153818) * C63320) *
              C153527 * C153511 * C131 +
          ((C194 * C153818 + C195 * C153464) * C63320 +
           (C621 * C153818 + C620 * C153464) * C63321 +
           (C624 * C153818 + C625 * C153464) * C63322 +
           (C7736 * C153818 + C7741 * C153464) * C153867) *
              C153527 * C153511 * C132 -
          (((C134 * C2240 + C2256 + C2256 + C153608 * C2250) * C153464 +
            C7741 * C153818) *
               C153867 +
           (C626 * C153464 + C625 * C153818) * C63322 +
           (C619 * C153464 + C620 * C153818) * C63321 +
           (C196 * C153464 + C195 * C153818) * C63320) *
              C153527 * C153511 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C153818 +
             C193 * C153464) *
                C63320 +
            (C7734 * C153818 + C622 * C153464) * C63321 +
            (C7735 * C153818 + C623 * C153464) * C63322 +
            (C7738 * C153818 + C7737 * C153464) * C153867) *
               C153527 * C320 -
           ((C8524 * C153464 + C9136 * C153818) * C153867 +
            (C7451 * C153464 + C8523 * C153818) * C63322 +
            (C1098 * C153464 + C8522 * C153818) * C63321 +
            (C409 * C153464 +
             (C134 * C329 + C374 + C374 + C153608 * C353) * C153818) *
                C63320) *
               C153527 * C321 +
           (((C134 * C330 + C375 + C375 + C153608 * C354) * C153818 +
             C410 * C153464) *
                C63320 +
            (C9879 * C153818 + C7452 * C153464) * C63321 +
            (C9880 * C153818 + C7454 * C153464) * C63322 +
            (C57130 * C153818 + C63523 * C153464) * C153867) *
               C153527 * C322) *
              C323 +
          (((C409 * C153818 + C408 * C153464) * C63320 +
            (C1098 * C153818 + C1099 * C153464) * C63321 +
            (C7451 * C153818 + C7450 * C153464) * C63322 +
            (C8524 * C153818 + C8525 * C153464) * C153867) *
               C153527 * C321 -
           ((C7736 * C153464 + C7737 * C153818) * C153867 +
            (C624 * C153464 + C623 * C153818) * C63322 +
            (C621 * C153464 + C622 * C153818) * C63321 +
            (C194 * C153464 + C193 * C153818) * C63320) *
               C153527 * C320 -
           (((C134 * C6301 + C9872 + C9872 + C153608 * C6313) * C153464 +
             C63523 * C153818) *
                C153867 +
            (C7455 * C153464 + C7454 * C153818) * C63322 +
            (C7453 * C153464 + C7452 * C153818) * C63321 +
            (C411 * C153464 + C410 * C153818) * C63320) *
               C153527 * C322) *
              C153498)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C153818 +
             C193 * C153464) *
                C63320 +
            (C63718 + C63719) * C63321 + C63734 * C63322 + C63735 * C153867) *
               C535 -
           ((C63724 + C63725) * C153867 + (C63723 + C63722) * C63322 +
            (C63721 + C63720) * C63321 + (C63719 + C63718) * C63320) *
               C536 +
           (C63734 * C63320 + C63735 * C63321 + (C63725 + C63724) * C63322 +
            (C55938 * C153818 + C55939 * C153464) * C153867) *
               C537) *
              C153511 * C323 +
          (((C63726 + C63727) * C63320 + (C63728 + C63729) * C63321 +
            (C63730 + C63731) * C63322 + (C63732 + C63733) * C153867) *
               C536 -
           (C63736 * C153867 + C63737 * C63322 + (C63727 + C63726) * C63321 +
            (C194 * C153464 + C193 * C153818) * C63320) *
               C535 -
           (((C134 * C10464 + C10479 + C10479 + C153608 * C10470) * C153464 +
             C55939 * C153818) *
                C153867 +
            (C63733 + C63732) * C63322 + C63736 * C63321 + C63737 * C63320) *
               C537) *
              C153511 * C153498)) /
            (p * q * std::sqrt(p + q));
    d2ee[198] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
              C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 +
              C24119 + C153887 * C354) *
                 C153818 +
             (C24183 + C24184 + C24185) * C153464) *
                C153853 +
            ((C31259 + C31260 + C31261) * C153818 + C39378 * C153464) *
                C153713) *
               C153838 -
           ((C31245 * C153464 + (C31264 + C31263 + C31262) * C153818) *
                C153713 +
            (C39379 * C153464 + (C31261 + C31260 + C31259) * C153818) *
                C153853) *
               C153591) *
              C153511 * C153906 +
          (((C39378 * C153818 + C39962 * C153464) * C153853 +
            (C39380 * C153818 + (C24800 + C24801 + C24802) * C153464) *
                C153713) *
               C153591 -
           ((C25269 * C153464 + C39379 * C153818) * C153713 +
            ((C24188 + C24187 + C24186) * C153464 +
             (C24185 + C24184 + C24183) * C153818) *
                C153853) *
               C153838) *
              C153511 * C153907 +
          (((C24197 * C153818 + (C24191 + C24190 + C24189) * C153464) *
                C153853 +
            (C39962 * C153818 + (C25276 + C25277 + C25278) * C153464) *
                C153713) *
               C153838 -
           (((C24114 * C3444 + C24764 + C24764 + C153887 * C3452 +
              C24112 * C1458 + C24765 + C24765 + C24105 * C1468 +
              C24110 * C546 + C24766 + C24766 + C24104 * C570) *
                 C153464 +
             (C24802 + C24801 + C24800) * C153818) *
                C153713 +
            ((C25278 + C25277 + C25276) * C153464 + C25269 * C153818) *
                C153853) *
               C153591) *
              C153511 * C752)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C11344 +
             C193 * C11345 + C194 * C11346 + C195 * C153852) *
                C153853 +
            (C15568 + C15569 + C15570 + C15571) * C153713) *
               C153838 -
           ((C15572 + C15573 + C15574 + C15575) * C153713 +
            (C15571 + C15570 + C15569 + C15568) * C153853) *
               C153591) *
              C153511 * C153906 +
          (((C15576 + C15577 + C15578 + C15579) * C153853 +
            (C15580 + C15581 + C15582 + C15583) * C153713) *
               C153591 -
           ((C15579 + C15578 + C15577 + C15576) * C153713 +
            (C196 * C153852 + C195 * C11346 + C194 * C11345 + C193 * C11344) *
                C153853) *
               C153838) *
              C153511 * C153907 +
          (((C194 * C11344 + C195 * C11345 + C196 * C11346 + C197 * C153852) *
                C153853 +
            (C15972 + C15973 + C15974 + C15975) * C153713) *
               C153838 -
           (((C134 * C549 + C602 + C602 + C153608 * C573) * C153852 +
             C626 * C11346 + C625 * C11345 + C624 * C11344) *
                C153713 +
            (C15975 + C15974 + C15973 + C15972) * C153853) *
               C153591) *
              C153511 * C752)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C153818 +
             C193 * C153464) *
                C63320 +
            (C63718 + C63719) * C63321 + C63734 * C63322 + C63735 * C153867) *
               C153838 -
           ((C63724 + C63725) * C153867 + (C63723 + C63722) * C63322 +
            (C63721 + C63720) * C63321 + (C63719 + C63718) * C63320) *
               C153591) *
              C153511 * C153906 +
          (((C63726 + C63727) * C63320 + (C63728 + C63729) * C63321 +
            (C63730 + C63731) * C63322 + (C63732 + C63733) * C153867) *
               C153591 -
           (C63736 * C153867 + C63737 * C63322 + (C63727 + C63726) * C63321 +
            (C194 * C153464 + C193 * C153818) * C63320) *
               C153838) *
              C153511 * C153907 +
          (((C194 * C153818 + C195 * C153464) * C63320 +
            (C64126 + C64127) * C63321 + (C64128 + C64129) * C63322 +
            (C64130 + C64131) * C153867) *
               C153838 -
           (((C134 * C7676 + C7715 + C7715 + C153608 * C7684) * C153464 +
             C7740 * C153818) *
                C153867 +
            (C64131 + C64130) * C63322 + (C64129 + C64128) * C63321 +
            (C64127 + C64126) * C63320) *
               C153591) *
              C153511 * C752)) /
            (p * q * std::sqrt(p + q));
    d2ee[199] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C11344 +
             C193 * C11345 + C194 * C11346 + C195 * C153852) *
                C153853 +
            (C7734 * C11344 + C622 * C11345 + C621 * C11346 + C620 * C153852) *
                C153713) *
               C153527 * C320 -
           ((C1100 * C153852 + C1099 * C11346 + C1098 * C11345 +
             C8522 * C11344) *
                C153713 +
            (C407 * C153852 + C408 * C11346 + C409 * C11345 +
             (C134 * C329 + C374 + C374 + C153608 * C353) * C11344) *
                C153853) *
               C153527 * C321 +
           (((C134 * C330 + C375 + C375 + C153608 * C354) * C11344 +
             C410 * C11345 + C411 * C11346 + C412 * C153852) *
                C153853 +
            (C9879 * C11344 + C7452 * C11345 + C7453 * C11346 +
             C15373 * C153852) *
                C153713) *
               C153527 * C322) *
              C323 +
          (((C409 * C11344 + C408 * C11345 + C407 * C11346 + C406 * C153852) *
                C153853 +
            (C1098 * C11344 + C1099 * C11345 + C1100 * C11346 +
             C1101 * C153852) *
                C153713) *
               C153527 * C321 -
           ((C619 * C153852 + C620 * C11346 + C621 * C11345 + C622 * C11344) *
                C153713 +
            (C196 * C153852 + C195 * C11346 + C194 * C11345 + C193 * C11344) *
                C153853) *
               C153527 * C320 -
           (((C134 * C1888 + C1904 + C1904 + C153608 * C1898) * C153852 +
             C15373 * C11346 + C7453 * C11345 + C7452 * C11344) *
                C153713 +
            (C413 * C153852 + C412 * C11346 + C411 * C11345 + C410 * C11344) *
                C153853) *
               C153527 * C322) *
              C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153608 * C152) * C11344 +
            C193 * C11345 + C194 * C11346 + C195 * C153852) *
               C153853 +
           (C7734 * C11344 + C622 * C11345 + C621 * C11346 + C620 * C153852) *
               C153713) *
              C153527 * C153511 * C130 -
          ((C619 * C153852 + C620 * C11346 + C621 * C11345 + C622 * C11344) *
               C153713 +
           (C196 * C153852 + C195 * C11346 + C194 * C11345 + C193 * C11344) *
               C153853) *
              C153527 * C153511 * C131 +
          ((C194 * C11344 + C195 * C11345 + C196 * C11346 + C197 * C153852) *
               C153853 +
           (C621 * C11344 + C620 * C11345 + C619 * C11346 + C895 * C153852) *
               C153713) *
              C153527 * C153511 * C132 -
          (((C134 * C886 + C892 + C892 + C153608 * C888) * C153852 +
            C895 * C11346 + C619 * C11345 + C620 * C11344) *
               C153713 +
           (C198 * C153852 + C197 * C11346 + C196 * C11345 + C195 * C11344) *
               C153853) *
              C153527 * C153511 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
             C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 + C24119 +
             C153887 * C354) *
                C153818 +
            (C24183 + C24184 + C24185) * C153464) *
               C153853 +
           ((C31259 + C31260 + C31261) * C153818 +
            (C24796 + C24795 + C24794) * C153464) *
               C153713) *
              C153527 * C153511 * C130 -
          ((C25269 * C153464 + (C24794 + C24795 + C24796) * C153818) * C153713 +
           ((C24188 + C24187 + C24186) * C153464 +
            (C24185 + C24184 + C24183) * C153818) *
               C153853) *
              C153527 * C153511 * C131 +
          ((C24197 * C153818 + (C24191 + C24190 + C24189) * C153464) * C153853 +
           ((C24793 + C24792 + C24791) * C153818 +
            (C25276 + C25277 + C25278) * C153464) *
               C153713) *
              C153527 * C153511 * C132 -
          (((C24114 * C1888 + C25266 + C25266 + C153887 * C1898 +
             C24112 * C1061 + C25267 + C25267 + C24105 * C1073 + C24110 * C538 +
             C25268 + C25268 + C24104 * C562) *
                C153464 +
            (C25278 + C25277 + C25276) * C153818) *
               C153713 +
           ((C24194 + C24193 + C24192) * C153464 + C24198 * C153818) *
               C153853) *
              C153527 * C153511 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
              C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 +
              C24119 + C153887 * C354) *
                 C153818 +
             (C24183 + C24184 + C24185) * C153464) *
                C153853 +
            ((C31259 + C31260 + C31261) * C153818 +
             (C24796 + C24795 + C24794) * C153464) *
                C153713) *
               C153527 * C320 -
           (((C25607 + C25606 + C25605) * C153464 +
             (C32047 + C32046 + C32045) * C153818) *
                C153713 +
            ((C24492 + C24493 + C24494) * C153464 +
             (C24114 * C1319 + C24435 + C24435 + C153887 * C1329 +
              C24112 * C330 + C24436 + C24436 + C24105 * C354 + C24110 * C329 +
              C24437 + C24437 + C24104 * C353) *
                 C153818) *
                C153853) *
               C153527 * C321 +
           (((C24110 * C330 + C24438 + C24438 + C24104 * C354 + C24112 * C1319 +
              C24439 + C24439 + C24105 * C1329 + C24114 * C3127 + C24440 +
              C24440 + C153887 * C3135) *
                 C153818 +
             (C24495 + C24496 + C24497) * C153464) *
                C153853 +
            ((C33419 + C33420 + C33421) * C153818 +
             (C39082 + C39083 + C39084) * C153464) *
                C153713) *
               C153527 * C322) *
              C323 +
          ((((C24494 + C24493 + C24492) * C153818 +
             (C24491 + C24490 + C24489) * C153464) *
                C153853 +
            ((C25605 + C25606 + C25607) * C153818 +
             (C25608 + C25609 + C25610) * C153464) *
                C153713) *
               C153527 * C321 -
           ((C25269 * C153464 + (C24794 + C24795 + C24796) * C153818) *
                C153713 +
            ((C24188 + C24187 + C24186) * C153464 +
             (C24185 + C24184 + C24183) * C153818) *
                C153853) *
               C153527 * C320 -
           (((C24114 * C5701 + C26937 + C26937 + C153887 * C5707 +
              C24112 * C4305 + C26938 + C26938 + C24105 * C4313 +
              C24110 * C1890 + C26939 + C26939 + C24104 * C1900) *
                 C153464 +
             (C39084 + C39083 + C39082) * C153818) *
                C153713 +
            ((C24500 + C24499 + C24498) * C153464 +
             (C24497 + C24496 + C24495) * C153818) *
                C153853) *
               C153527 * C322) *
              C153498)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153608 * C152) * C153818 +
            C193 * C153464) *
               C63320 +
           (C7734 * C153818 + C622 * C153464) * C63321 +
           (C7735 * C153818 + C623 * C153464) * C63322 +
           (C7738 * C153818 + C7737 * C153464) * C153867) *
              C153527 * C153511 * C130 -
          ((C7736 * C153464 + C7737 * C153818) * C153867 +
           (C624 * C153464 + C623 * C153818) * C63322 +
           (C621 * C153464 + C622 * C153818) * C63321 +
           (C194 * C153464 + C193 * C153818) * C63320) *
              C153527 * C153511 * C131 +
          ((C194 * C153818 + C195 * C153464) * C63320 +
           (C621 * C153818 + C620 * C153464) * C63321 +
           (C624 * C153818 + C625 * C153464) * C63322 +
           (C7736 * C153818 + C7741 * C153464) * C153867) *
              C153527 * C153511 * C132 -
          (((C134 * C2240 + C2256 + C2256 + C153608 * C2250) * C153464 +
            C7741 * C153818) *
               C153867 +
           (C626 * C153464 + C625 * C153818) * C63322 +
           (C619 * C153464 + C620 * C153818) * C63321 +
           (C196 * C153464 + C195 * C153818) * C63320) *
              C153527 * C153511 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C153818 +
             C193 * C153464) *
                C63320 +
            (C7734 * C153818 + C622 * C153464) * C63321 +
            (C7735 * C153818 + C623 * C153464) * C63322 +
            (C7738 * C153818 + C7737 * C153464) * C153867) *
               C153527 * C320 -
           ((C8524 * C153464 + C9136 * C153818) * C153867 +
            (C7451 * C153464 + C8523 * C153818) * C63322 +
            (C1098 * C153464 + C8522 * C153818) * C63321 +
            (C409 * C153464 +
             (C134 * C329 + C374 + C374 + C153608 * C353) * C153818) *
                C63320) *
               C153527 * C321 +
           (((C134 * C330 + C375 + C375 + C153608 * C354) * C153818 +
             C410 * C153464) *
                C63320 +
            (C9879 * C153818 + C7452 * C153464) * C63321 +
            (C9880 * C153818 + C7454 * C153464) * C63322 +
            (C57130 * C153818 + C63523 * C153464) * C153867) *
               C153527 * C322) *
              C323 +
          (((C409 * C153818 + C408 * C153464) * C63320 +
            (C1098 * C153818 + C1099 * C153464) * C63321 +
            (C7451 * C153818 + C7450 * C153464) * C63322 +
            (C8524 * C153818 + C8525 * C153464) * C153867) *
               C153527 * C321 -
           ((C7736 * C153464 + C7737 * C153818) * C153867 +
            (C624 * C153464 + C623 * C153818) * C63322 +
            (C621 * C153464 + C622 * C153818) * C63321 +
            (C194 * C153464 + C193 * C153818) * C63320) *
               C153527 * C320 -
           (((C134 * C6301 + C9872 + C9872 + C153608 * C6313) * C153464 +
             C63523 * C153818) *
                C153867 +
            (C7455 * C153464 + C7454 * C153818) * C63322 +
            (C7453 * C153464 + C7452 * C153818) * C63321 +
            (C411 * C153464 + C410 * C153818) * C63320) *
               C153527 * C322) *
              C153498)) /
            (p * q * std::sqrt(p + q));
    d2ee[200] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
              C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 +
              C24119 + C153887 * C354) *
                 C153818 +
             (C24183 + C24184 + C24185) * C153464) *
                C153853 +
            ((C31259 + C31260 + C31261) * C153818 + C39378 * C153464) *
                C153713) *
               C153527 * C153908 -
           ((C40352 * C153464 + (C32047 + C32046 + C32045) * C153818) *
                C153713 +
            ((C24492 + C24493 + C24494) * C153464 +
             (C24114 * C1319 + C24435 + C24435 + C153887 * C1329 +
              C24112 * C330 + C24436 + C24436 + C24105 * C354 + C24110 * C329 +
              C24437 + C24437 + C24104 * C353) *
                 C153818) *
                C153853) *
               C153527 * C153909 +
           (((C24110 * C330 + C24438 + C24438 + C24104 * C354 + C24112 * C1319 +
              C24439 + C24439 + C24105 * C1329 + C24114 * C3127 + C24440 +
              C24440 + C153887 * C3135) *
                 C153818 +
             (C24495 + C24496 + C24497) * C153464) *
                C153853 +
            ((C33419 + C33420 + C33421) * C153818 +
             (C39082 + C39083 + C39084) * C153464) *
                C153713) *
               C153527 * C1601) *
              C153829 +
          ((((C24494 + C24493 + C24492) * C153818 +
             (C24491 + C24490 + C24489) * C153464) *
                C153853 +
            (C40351 * C153818 + (C25608 + C25609 + C25610) * C153464) *
                C153713) *
               C153527 * C153909 -
           ((C25269 * C153464 + C39379 * C153818) * C153713 +
            ((C24188 + C24187 + C24186) * C153464 +
             (C24185 + C24184 + C24183) * C153818) *
                C153853) *
               C153527 * C153908 -
           (((C24114 * C5701 + C26937 + C26937 + C153887 * C5707 +
              C24112 * C4305 + C26938 + C26938 + C24105 * C4313 +
              C24110 * C1890 + C26939 + C26939 + C24104 * C1900) *
                 C153464 +
             (C39084 + C39083 + C39082) * C153818) *
                C153713 +
            ((C24500 + C24499 + C24498) * C153464 +
             (C24497 + C24496 + C24495) * C153818) *
                C153853) *
               C153527 * C1601) *
              C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C11344 +
             C193 * C11345 + C194 * C11346 + C195 * C153852) *
                C153853 +
            (C15568 + C15569 + C15570 + C15571) * C153713) *
               C153527 * C153908 -
           ((C16237 + C16236 + C16235 + C16234) * C153713 +
            (C407 * C153852 + C408 * C11346 + C409 * C11345 +
             (C134 * C329 + C374 + C374 + C153608 * C353) * C11344) *
                C153853) *
               C153527 * C153909 +
           (((C134 * C330 + C375 + C375 + C153608 * C354) * C11344 +
             C410 * C11345 + C411 * C11346 + C412 * C153852) *
                C153853 +
            (C9879 * C11344 + C7452 * C11345 + C7453 * C11346 +
             C15373 * C153852) *
                C153713) *
               C153527 * C1601) *
              C153829 +
          (((C409 * C11344 + C408 * C11345 + C407 * C11346 + C406 * C153852) *
                C153853 +
            (C16238 + C16239 + C16240 + C16241) * C153713) *
               C153527 * C153909 -
           ((C15579 + C15578 + C15577 + C15576) * C153713 +
            (C196 * C153852 + C195 * C11346 + C194 * C11345 + C193 * C11344) *
                C153853) *
               C153527 * C153908 -
           (((C134 * C1888 + C1904 + C1904 + C153608 * C1898) * C153852 +
             C15373 * C11346 + C7453 * C11345 + C7452 * C11344) *
                C153713 +
            (C413 * C153852 + C412 * C11346 + C411 * C11345 + C410 * C11344) *
                C153853) *
               C153527 * C1601) *
              C153498)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C153818 +
             C193 * C153464) *
                C63320 +
            (C63718 + C63719) * C63321 + C63734 * C63322 + C63735 * C153867) *
               C153527 * C153908 -
           (C64923 * C153867 + C64924 * C63322 + (C64391 + C64390) * C63321 +
            (C409 * C153464 +
             (C134 * C329 + C374 + C374 + C153608 * C353) * C153818) *
                C63320) *
               C153527 * C153909 +
           (((C134 * C330 + C375 + C375 + C153608 * C354) * C153818 +
             C410 * C153464) *
                C63320 +
            (C9879 * C153818 + C7452 * C153464) * C63321 +
            (C9880 * C153818 + C7454 * C153464) * C63322 +
            (C57130 * C153818 + C63523 * C153464) * C153867) *
               C153527 * C1601) *
              C153829 +
          (((C409 * C153818 + C408 * C153464) * C63320 +
            (C64396 + C64397) * C63321 + (C64398 + C64399) * C63322 +
            (C64400 + C64401) * C153867) *
               C153527 * C153909 -
           (C63736 * C153867 + C63737 * C63322 + (C63727 + C63726) * C63321 +
            (C194 * C153464 + C193 * C153818) * C63320) *
               C153527 * C153908 -
           (((C134 * C6301 + C9872 + C9872 + C153608 * C6313) * C153464 +
             C63523 * C153818) *
                C153867 +
            (C7455 * C153464 + C7454 * C153818) * C63322 +
            (C7453 * C153464 + C7452 * C153818) * C63321 +
            (C411 * C153464 + C410 * C153818) * C63320) *
               C153527 * C1601) *
              C153498)) /
            (p * q * std::sqrt(p + q));
    d2ee[201] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
              C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 +
              C24119 + C153887 * C354) *
                 C153818 +
             (C24183 + C24184 + C24185) * C153464) *
                C153853 +
            ((C31259 + C31260 + C31261) * C153818 + C39378 * C153464) *
                C153713) *
               C153838 -
           ((C31245 * C153464 + (C31264 + C31263 + C31262) * C153818) *
                C153713 +
            (C39379 * C153464 + (C31261 + C31260 + C31259) * C153818) *
                C153853) *
               C153591) *
              C153908 +
          ((((C32045 + C32046 + C32047) * C153818 + C40351 * C153464) *
                C153853 +
            ((C32048 + C32049 + C32050) * C153818 +
             (C32051 + C32052 + C32053) * C153464) *
                C153713) *
               C153591 -
           ((C40352 * C153464 + (C32047 + C32046 + C32045) * C153818) *
                C153713 +
            ((C24492 + C24493 + C24494) * C153464 +
             (C24114 * C1319 + C24435 + C24435 + C153887 * C1329 +
              C24112 * C330 + C24436 + C24436 + C24105 * C354 + C24110 * C329 +
              C24437 + C24437 + C24104 * C353) *
                 C153818) *
                C153853) *
               C153838) *
              C153909 +
          ((((C24110 * C330 + C24438 + C24438 + C24104 * C354 + C24112 * C1319 +
              C24439 + C24439 + C24105 * C1329 + C24114 * C3127 + C24440 +
              C24440 + C153887 * C3135) *
                 C153818 +
             (C24495 + C24496 + C24497) * C153464) *
                C153853 +
            ((C33419 + C33420 + C33421) * C153818 +
             (C39082 + C39083 + C39084) * C153464) *
                C153713) *
               C153838 -
           (((C24114 * C28651 + C30975 + C30975 + C153887 * C28655 +
              C24112 * C4958 + C30976 + C30976 + C24105 * C4964 +
              C24110 * C3442 + C30977 + C30977 + C24104 * C3450) *
                 C153464 +
             (C33424 + C33423 + C33422) * C153818) *
                C153713 +
            ((C39084 + C39083 + C39082) * C153464 +
             (C33421 + C33420 + C33419) * C153818) *
                C153853) *
               C153591) *
              C1601) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C11344 +
             C193 * C11345 + C194 * C11346 + C195 * C153852) *
                C153853 +
            (C15568 + C15569 + C15570 + C15571) * C153713) *
               C153838 -
           ((C15572 + C15573 + C15574 + C15575) * C153713 +
            (C15571 + C15570 + C15569 + C15568) * C153853) *
               C153591) *
              C153908 +
          (((C16234 + C16235 + C16236 + C16237) * C153853 +
            (C16761 + C16762 + C16763 + C16764) * C153713) *
               C153591 -
           ((C16237 + C16236 + C16235 + C16234) * C153713 +
            (C407 * C153852 + C408 * C11346 + C409 * C11345 +
             (C134 * C329 + C374 + C374 + C153608 * C353) * C11344) *
                C153853) *
               C153838) *
              C153909 +
          ((((C134 * C330 + C375 + C375 + C153608 * C354) * C11344 +
             C410 * C11345 + C411 * C11346 + C412 * C153852) *
                C153853 +
            (C17411 + C17412 + C17413 + C17414) * C153713) *
               C153838 -
           (((C134 * C3444 + C7437 + C7437 + C153608 * C3452) * C153852 +
             C7455 * C11346 + C7454 * C11345 + C9880 * C11344) *
                C153713 +
            (C17414 + C17413 + C17412 + C17411) * C153853) *
               C153591) *
              C1601) *
         C153492) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C153818 +
             C193 * C153464) *
                C63320 +
            (C63718 + C63719) * C63321 + C63734 * C63322 + C63735 * C153867) *
               C153838 -
           ((C63724 + C63725) * C153867 + (C63723 + C63722) * C63322 +
            (C63721 + C63720) * C63321 + (C63719 + C63718) * C63320) *
               C153591) *
              C153908 +
          (((C64390 + C64391) * C63320 + (C64392 + C64393) * C63321 +
            (C64394 + C64395) * C63322 + (C64921 + C64922) * C153867) *
               C153591 -
           (C64923 * C153867 + C64924 * C63322 + (C64391 + C64390) * C63321 +
            (C409 * C153464 +
             (C134 * C329 + C374 + C374 + C153608 * C353) * C153818) *
                C63320) *
               C153838) *
              C153909 +
          ((((C134 * C330 + C375 + C375 + C153608 * C354) * C153818 +
             C410 * C153464) *
                C63320 +
            (C65571 + C65572) * C63321 + (C65573 + C65574) * C63322 +
            (C65575 + C65576) * C153867) *
               C153838 -
           (((C134 * C31196 + C55791 + C55791 + C153608 * C31200) * C153464 +
             C57131 * C153818) *
                C153867 +
            (C65576 + C65575) * C63322 + (C65574 + C65573) * C63321 +
            (C65572 + C65571) * C63320) *
               C153591) *
              C1601) *
         C153492) /
            (p * q * std::sqrt(p + q));
    d2ee[202] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C134 * C136 + C161 + C161 + C153608 * C152) * C11344 +
                 C193 * C11345 + C194 * C11346 + C195 * C153852) *
                    C153853 +
                (C15568 + C15569 + C15570 + C15571) * C153713) *
                   C153527 * C1223 -
               ((C16237 + C16236 + C16235 + C16234) * C153713 +
                (C407 * C153852 + C408 * C11346 + C409 * C11345 +
                 (C134 * C329 + C374 + C374 + C153608 * C353) * C11344) *
                    C153853) *
                   C153527 * C153563) *
                  C1225 +
              (((C409 * C11344 + C408 * C11345 + C407 * C11346 +
                 C406 * C153852) *
                    C153853 +
                (C16238 + C16239 + C16240 + C16241) * C153713) *
                   C153527 * C153563 -
               ((C15579 + C15578 + C15577 + C15576) * C153713 +
                (C196 * C153852 + C195 * C11346 + C194 * C11345 +
                 C193 * C11344) *
                    C153853) *
                   C153527 * C1223) *
                  C1226 +
              (((C194 * C11344 + C195 * C11345 + C196 * C11346 +
                 C197 * C153852) *
                    C153853 +
                (C15972 + C15973 + C15974 + C15975) * C153713) *
                   C153527 * C1223 -
               (((C134 * C1062 + C1089 + C1089 + C153608 * C1074) * C153852 +
                 C1101 * C11346 + C1100 * C11345 + C1099 * C11344) *
                    C153713 +
                (C762 * C153852 + C406 * C11346 + C407 * C11345 +
                 C408 * C11344) *
                    C153853) *
                   C153527 * C153563) *
                  C1227) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C136 + C161 + C161 + C153608 * C152) * C11344 +
                C193 * C11345 + C194 * C11346 + C195 * C153852) *
                   C153853 +
               (C15568 + C15569 + C15570 + C15571) * C153713) *
                  C153527 * C1310 -
              ((C16237 + C16236 + C16235 + C16234) * C153713 +
               (C407 * C153852 + C408 * C11346 + C409 * C11345 +
                (C134 * C329 + C374 + C374 + C153608 * C353) * C11344) *
                   C153853) *
                  C153527 * C1311 +
              (((C134 * C330 + C375 + C375 + C153608 * C354) * C11344 +
                C410 * C11345 + C411 * C11346 + C412 * C153852) *
                   C153853 +
               (C9879 * C11344 + C7452 * C11345 + C7453 * C11346 +
                C15373 * C153852) *
                   C153713) *
                  C153527 * C1312 -
              (((C134 * C4306 + C16566 + C16566 + C153608 * C4314) * C153852 +
                (C134 * C4305 + C8895 + C8895 + C153608 * C4313) * C11346 +
                (C134 * C4304 + C8896 + C8896 + C153608 * C4312) * C11345 +
                (C134 * C4303 + C8897 + C8897 + C153608 * C4311) * C11344) *
                   C153713 +
               ((C134 * C1316 + C1332 + C1332 + C153608 * C1326) * C153852 +
                (C134 * C1317 + C1333 + C1333 + C153608 * C1327) * C11346 +
                (C134 * C1318 + C1334 + C1334 + C153608 * C1328) * C11345 +
                (C134 * C1319 + C1335 + C1335 + C153608 * C1329) * C11344) *
                   C153853) *
                  C153527 * C1313) *
             C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C11344 +
             C193 * C11345 + C194 * C11346 + C195 * C153852) *
                C153853 +
            (C15568 + C15569 + C15570 + C15571) * C153713) *
               C535 -
           ((C15572 + C15573 + C15574 + C15575) * C153713 +
            (C15571 + C15570 + C15569 + C15568) * C153853) *
               C536 +
           ((C15575 + C15574 + C15573 + C15572) * C153853 +
            (C7738 * C11344 + C7737 * C11345 + C7736 * C11346 +
             C7741 * C153852) *
                C153713) *
               C537) *
              C1223 +
          (((C16234 + C16235 + C16236 + C16237) * C153853 +
            (C16761 + C16762 + C16763 + C16764) * C153713) *
               C536 -
           ((C16237 + C16236 + C16235 + C16234) * C153713 +
            (C407 * C153852 + C408 * C11346 + C409 * C11345 +
             (C134 * C329 + C374 + C374 + C153608 * C353) * C11344) *
                C153853) *
               C535 -
           (((C134 * C8488 + C8513 + C8513 + C153608 * C8490) * C153852 +
             C8525 * C11346 + C8524 * C11345 + C9136 * C11344) *
                C153713 +
            (C16764 + C16763 + C16762 + C16761) * C153853) *
               C537) *
              C153563) *
         C153492) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
              C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 +
              C24119 + C153887 * C354) *
                 C153818 +
             (C24183 + C24184 + C24185) * C153464) *
                C153853 +
            ((C31259 + C31260 + C31261) * C153818 + C39378 * C153464) *
                C153713) *
               C153527 * C1223 -
           ((C40352 * C153464 + (C32047 + C32046 + C32045) * C153818) *
                C153713 +
            ((C24492 + C24493 + C24494) * C153464 +
             (C24114 * C1319 + C24435 + C24435 + C153887 * C1329 +
              C24112 * C330 + C24436 + C24436 + C24105 * C354 + C24110 * C329 +
              C24437 + C24437 + C24104 * C353) *
                 C153818) *
                C153853) *
               C153527 * C153563) *
              C1225 +
          ((((C24494 + C24493 + C24492) * C153818 +
             (C24491 + C24490 + C24489) * C153464) *
                C153853 +
            (C40351 * C153818 + (C25608 + C25609 + C25610) * C153464) *
                C153713) *
               C153527 * C153563 -
           ((C25269 * C153464 + C39379 * C153818) * C153713 +
            ((C24188 + C24187 + C24186) * C153464 +
             (C24185 + C24184 + C24183) * C153818) *
                C153853) *
               C153527 * C1223) *
              C1226 +
          (((C24197 * C153818 + (C24191 + C24190 + C24189) * C153464) *
                C153853 +
            (C39962 * C153818 + (C25276 + C25277 + C25278) * C153464) *
                C153713) *
               C153527 * C1223 -
           (((C24114 * C4306 + C25590 + C25590 + C153887 * C4314 +
              C24112 * C1889 + C25591 + C25591 + C24105 * C1899 +
              C24110 * C1060 + C25592 + C25592 + C24104 * C1072) *
                 C153464 +
             (C25610 + C25609 + C25608) * C153818) *
                C153713 +
            ((C25040 + C25039 + C25038) * C153464 + C25031 * C153818) *
                C153853) *
               C153527 * C153563) *
              C1227)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
             C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 + C24119 +
             C153887 * C354) *
                C153818 +
            (C24183 + C24184 + C24185) * C153464) *
               C153853 +
           ((C31259 + C31260 + C31261) * C153818 + C39378 * C153464) *
               C153713) *
              C153527 * C1310 -
          ((C40352 * C153464 + (C32047 + C32046 + C32045) * C153818) * C153713 +
           ((C24492 + C24493 + C24494) * C153464 +
            (C24114 * C1319 + C24435 + C24435 + C153887 * C1329 +
             C24112 * C330 + C24436 + C24436 + C24105 * C354 + C24110 * C329 +
             C24437 + C24437 + C24104 * C353) *
                C153818) *
               C153853) *
              C153527 * C1311 +
          (((C24110 * C330 + C24438 + C24438 + C24104 * C354 + C24112 * C1319 +
             C24439 + C24439 + C24105 * C1329 + C24114 * C3127 + C24440 +
             C24440 + C153887 * C3135) *
                C153818 +
            (C24495 + C24496 + C24497) * C153464) *
               C153853 +
           ((C33419 + C33420 + C33421) * C153818 +
            (C39082 + C39083 + C39084) * C153464) *
               C153713) *
              C153527 * C1312 -
          (((C24114 * C29093 + C40837 + C40837 + C153887 * C29097 +
             C24112 * C5702 + C40838 + C40838 + C24105 * C5708 +
             C24110 * C4304 + C40839 + C40839 + C24104 * C4312) *
                C153464 +
            (C24114 * C29092 + C32421 + C32421 + C153887 * C29096 +
             C24112 * C5703 + C32422 + C32422 + C24105 * C5709 +
             C24110 * C4303 + C32423 + C32423 + C24104 * C4311) *
                C153818) *
               C153713 +
           ((C24114 * C4722 + C25978 + C25978 + C153887 * C4728 +
             C24112 * C3128 + C25979 + C25979 + C24105 * C3136 +
             C24110 * C1318 + C25980 + C25980 + C24104 * C1328) *
                C153464 +
            (C24114 * C4723 + C25981 + C25981 + C153887 * C4729 +
             C24112 * C3127 + C25982 + C25982 + C24105 * C3135 +
             C24110 * C1319 + C25983 + C25983 + C24104 * C1329) *
                C153818) *
               C153853) *
              C153527 * C1313) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
              C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 +
              C24119 + C153887 * C354) *
                 C153818 +
             (C24183 + C24184 + C24185) * C153464) *
                C153853 +
            ((C31259 + C31260 + C31261) * C153818 + C39378 * C153464) *
                C153713) *
               C535 -
           ((C31245 * C153464 + (C31264 + C31263 + C31262) * C153818) *
                C153713 +
            (C39379 * C153464 + (C31261 + C31260 + C31259) * C153818) *
                C153853) *
               C536 +
           ((C31272 * C153818 + C39380 * C153464) * C153853 +
            ((C31267 + C31266 + C31265) * C153818 +
             (C31268 + C31269 + C31270) * C153464) *
                C153713) *
               C537) *
              C1223 +
          ((((C32045 + C32046 + C32047) * C153818 + C40351 * C153464) *
                C153853 +
            ((C32048 + C32049 + C32050) * C153818 +
             (C32051 + C32052 + C32053) * C153464) *
                C153713) *
               C536 -
           ((C40352 * C153464 + (C32047 + C32046 + C32045) * C153818) *
                C153713 +
            ((C24492 + C24493 + C24494) * C153464 +
             (C24114 * C1319 + C24435 + C24435 + C153887 * C1329 +
              C24112 * C330 + C24436 + C24436 + C24105 * C354 + C24110 * C329 +
              C24437 + C24437 + C24104 * C353) *
                 C153818) *
                C153853) *
               C535 -
           (((C24114 * C31999 + C32024 + C32024 + C153887 * C32001 +
              C24112 * C6303 + C32025 + C32025 + C24105 * C6315 +
              C24110 * C6304 + C32026 + C32026 + C24104 * C6316) *
                 C153464 +
             (C32665 + C32664 + C32663) * C153818) *
                C153713 +
            ((C32053 + C32052 + C32051) * C153464 + C32658 * C153818) *
                C153853) *
               C537) *
              C153563) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C153818 +
             C193 * C153464) *
                C63320 +
            (C63718 + C63719) * C63321 + C63734 * C63322 + C63735 * C153867) *
               C153527 * C1223 -
           ((C64395 + C64394) * C153867 + (C64393 + C64392) * C63322 +
            (C64391 + C64390) * C63321 +
            (C409 * C153464 +
             (C134 * C329 + C374 + C374 + C153608 * C353) * C153818) *
                C63320) *
               C153527 * C153563) *
              C1225 +
          (((C409 * C153818 + C408 * C153464) * C63320 +
            (C64396 + C64397) * C63321 + (C64398 + C64399) * C63322 +
            (C64400 + C64401) * C153867) *
               C153527 * C153563 -
           (C63736 * C153867 + C63737 * C63322 + (C63727 + C63726) * C63321 +
            (C194 * C153464 + C193 * C153818) * C63320) *
               C153527 * C1223) *
              C1226 +
          (((C194 * C153818 + C195 * C153464) * C63320 +
            (C64126 + C64127) * C63321 + (C64128 + C64129) * C63322 +
            (C64130 + C64131) * C153867) *
               C153527 * C1223 -
           (((C134 * C8488 + C8513 + C8513 + C153608 * C8490) * C153464 +
             C8525 * C153818) *
                C153867 +
            (C7974 * C153464 + C7450 * C153818) * C63322 +
            (C1100 * C153464 + C1099 * C153818) * C63321 +
            (C407 * C153464 + C408 * C153818) * C63320) *
               C153527 * C153563) *
              C1227)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153608 * C152) * C153818 +
            C193 * C153464) *
               C63320 +
           (C63718 + C63719) * C63321 + C63734 * C63322 + C63735 * C153867) *
              C153527 * C1310 -
          ((C64395 + C64394) * C153867 + (C64393 + C64392) * C63322 +
           (C64391 + C64390) * C63321 +
           (C409 * C153464 +
            (C134 * C329 + C374 + C374 + C153608 * C353) * C153818) *
               C63320) *
              C153527 * C1311 +
          (((C134 * C330 + C375 + C375 + C153608 * C354) * C153818 +
            C410 * C153464) *
               C63320 +
           (C9879 * C153818 + C7452 * C153464) * C63321 +
           (C9880 * C153818 + C7454 * C153464) * C63322 +
           (C57130 * C153818 + C63523 * C153464) * C153867) *
              C153527 * C1312 -
          (((C134 * C31999 + C64726 + C64726 + C153608 * C32001) * C153464 +
            (C134 * C30191 + C56580 + C56580 + C153608 * C30195) * C153818) *
               C153867 +
           ((C134 * C4958 + C8893 + C8893 + C153608 * C4964) * C153464 +
            (C134 * C4959 + C8894 + C8894 + C153608 * C4965) * C153818) *
               C63322 +
           ((C134 * C4304 + C8896 + C8896 + C153608 * C4312) * C153464 +
            (C134 * C4303 + C8897 + C8897 + C153608 * C4311) * C153818) *
               C63321 +
           ((C134 * C1318 + C1334 + C1334 + C153608 * C1328) * C153464 +
            (C134 * C1319 + C1335 + C1335 + C153608 * C1329) * C153818) *
               C63320) *
              C153527 * C1313) *
         C153492) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C153818 +
             C193 * C153464) *
                C63320 +
            (C63718 + C63719) * C63321 + C63734 * C63322 + C63735 * C153867) *
               C535 -
           ((C63724 + C63725) * C153867 + (C63723 + C63722) * C63322 +
            (C63721 + C63720) * C63321 + (C63719 + C63718) * C63320) *
               C536 +
           (C63734 * C63320 + C63735 * C63321 + (C63725 + C63724) * C63322 +
            (C55938 * C153818 + C55939 * C153464) * C153867) *
               C537) *
              C1223 +
          (((C64390 + C64391) * C63320 + (C64392 + C64393) * C63321 +
            (C64394 + C64395) * C63322 + (C64921 + C64922) * C153867) *
               C536 -
           (C64923 * C153867 + C64924 * C63322 + (C64391 + C64390) * C63321 +
            (C409 * C153464 +
             (C134 * C329 + C374 + C374 + C153608 * C353) * C153818) *
                C63320) *
               C535 -
           (((C134 * C56351 + C56366 + C56366 + C153608 * C56353) * C153464 +
             C56711 * C153818) *
                C153867 +
            (C64922 + C64921) * C63322 + C64923 * C63321 + C64924 * C63320) *
               C537) *
              C153563) *
         C153492) /
            (p * q * std::sqrt(p + q));
    d2ee[203] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
               C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 +
               C24119 + C153887 * C354) *
                  C153818 +
              (C24183 + C24184 + C24185) * C153464) *
                 C153853 +
             ((C31259 + C31260 + C31261) * C153818 + C39378 * C153464) *
                 C153713) *
                C153838 -
            ((C31245 * C153464 + (C31264 + C31263 + C31262) * C153818) *
                 C153713 +
             (C39379 * C153464 + (C31261 + C31260 + C31259) * C153818) *
                 C153853) *
                C153591) *
               C1223 +
           ((((C32045 + C32046 + C32047) * C153818 + C40351 * C153464) *
                 C153853 +
             ((C32048 + C32049 + C32050) * C153818 +
              (C32051 + C32052 + C32053) * C153464) *
                 C153713) *
                C153591 -
            ((C40352 * C153464 + (C32047 + C32046 + C32045) * C153818) *
                 C153713 +
             ((C24492 + C24493 + C24494) * C153464 +
              (C24114 * C1319 + C24435 + C24435 + C153887 * C1329 +
               C24112 * C330 + C24436 + C24436 + C24105 * C354 + C24110 * C329 +
               C24437 + C24437 + C24104 * C353) *
                  C153818) *
                 C153853) *
                C153838) *
               C153563) *
              C153829 +
          ((((C39378 * C153818 + C39962 * C153464) * C153853 +
             (C39380 * C153818 + (C24800 + C24801 + C24802) * C153464) *
                 C153713) *
                C153591 -
            ((C25269 * C153464 + C39379 * C153818) * C153713 +
             ((C24188 + C24187 + C24186) * C153464 +
              (C24185 + C24184 + C24183) * C153818) *
                 C153853) *
                C153838) *
               C1223 +
           ((((C24494 + C24493 + C24492) * C153818 +
              (C24491 + C24490 + C24489) * C153464) *
                 C153853 +
             (C40351 * C153818 + (C25608 + C25609 + C25610) * C153464) *
                 C153713) *
                C153838 -
            (((C24114 * C4957 + C26202 + C26202 + C153887 * C4963 +
               C24112 * C3443 + C26203 + C26203 + C24105 * C3451 +
               C24110 * C1459 + C26204 + C26204 + C24104 * C1469) *
                  C153464 +
              (C32053 + C32052 + C32051) * C153818) *
                 C153713 +
             ((C25610 + C25609 + C25608) * C153464 + C40352 * C153818) *
                 C153853) *
                C153591) *
               C153563) *
              C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C153608 * C152) * C11344 +
              C193 * C11345 + C194 * C11346 + C195 * C153852) *
                 C153853 +
             (C15568 + C15569 + C15570 + C15571) * C153713) *
                C153838 -
            ((C15572 + C15573 + C15574 + C15575) * C153713 +
             (C15571 + C15570 + C15569 + C15568) * C153853) *
                C153591) *
               C1223 +
           (((C16234 + C16235 + C16236 + C16237) * C153853 +
             (C16761 + C16762 + C16763 + C16764) * C153713) *
                C153591 -
            ((C16237 + C16236 + C16235 + C16234) * C153713 +
             (C407 * C153852 + C408 * C11346 + C409 * C11345 +
              (C134 * C329 + C374 + C374 + C153608 * C353) * C11344) *
                 C153853) *
                C153838) *
               C153563) *
              C153829 +
          ((((C15576 + C15577 + C15578 + C15579) * C153853 +
             (C15580 + C15581 + C15582 + C15583) * C153713) *
                C153591 -
            ((C15579 + C15578 + C15577 + C15576) * C153713 +
             (C196 * C153852 + C195 * C11346 + C194 * C11345 + C193 * C11344) *
                 C153853) *
                C153838) *
               C1223 +
           (((C409 * C11344 + C408 * C11345 + C407 * C11346 + C406 * C153852) *
                 C153853 +
             (C16238 + C16239 + C16240 + C16241) * C153713) *
                C153838 -
            (((C134 * C1457 + C1473 + C1473 + C153608 * C1467) * C153852 +
              C7974 * C11346 + C7450 * C11345 + C7451 * C11344) *
                 C153713 +
             (C16241 + C16240 + C16239 + C16238) * C153853) *
                C153591) *
               C153563) *
              C153498)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C153608 * C152) * C153818 +
              C193 * C153464) *
                 C63320 +
             (C63718 + C63719) * C63321 + C63734 * C63322 + C63735 * C153867) *
                C153838 -
            ((C63724 + C63725) * C153867 + (C63723 + C63722) * C63322 +
             (C63721 + C63720) * C63321 + (C63719 + C63718) * C63320) *
                C153591) *
               C1223 +
           (((C64390 + C64391) * C63320 + (C64392 + C64393) * C63321 +
             (C64394 + C64395) * C63322 + (C64921 + C64922) * C153867) *
                C153591 -
            (C64923 * C153867 + C64924 * C63322 + (C64391 + C64390) * C63321 +
             (C409 * C153464 +
              (C134 * C329 + C374 + C374 + C153608 * C353) * C153818) *
                 C63320) *
                C153838) *
               C153563) *
              C153829 +
          ((((C63726 + C63727) * C63320 + (C63728 + C63729) * C63321 +
             (C63730 + C63731) * C63322 + (C63732 + C63733) * C153867) *
                C153591 -
            (C63736 * C153867 + C63737 * C63322 + (C63727 + C63726) * C63321 +
             (C194 * C153464 + C193 * C153818) * C63320) *
                C153838) *
               C1223 +
           (((C409 * C153818 + C408 * C153464) * C63320 +
             (C64396 + C64397) * C63321 + (C64398 + C64399) * C63322 +
             (C64400 + C64401) * C153867) *
                C153838 -
            (((C134 * C9115 + C9130 + C9130 + C153608 * C9121) * C153464 +
              C56372 * C153818) *
                 C153867 +
             (C64401 + C64400) * C63322 + (C64399 + C64398) * C63321 +
             (C64397 + C64396) * C63320) *
                C153591) *
               C153563) *
              C153498)) /
            (p * q * std::sqrt(p + q));
    d2ee[204] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153608 * C152) * C11344 +
            C193 * C11345 + C194 * C11346 + C195 * C153852) *
               C153853 +
           (C15568 + C15569 + C15570 + C15571) * C153713) *
              C153527 * C1310 -
          ((C16237 + C16236 + C16235 + C16234) * C153713 +
           (C407 * C153852 + C408 * C11346 + C409 * C11345 +
            (C134 * C329 + C374 + C374 + C153608 * C353) * C11344) *
               C153853) *
              C153527 * C1311 +
          (((C134 * C330 + C375 + C375 + C153608 * C354) * C11344 +
            C410 * C11345 + C411 * C11346 + C412 * C153852) *
               C153853 +
           (C9879 * C11344 + C7452 * C11345 + C7453 * C11346 +
            C15373 * C153852) *
               C153713) *
              C153527 * C1312 -
          (((C134 * C4306 + C16566 + C16566 + C153608 * C4314) * C153852 +
            (C134 * C4305 + C8895 + C8895 + C153608 * C4313) * C11346 +
            (C134 * C4304 + C8896 + C8896 + C153608 * C4312) * C11345 +
            (C134 * C4303 + C8897 + C8897 + C153608 * C4311) * C11344) *
               C153713 +
           ((C134 * C1316 + C1332 + C1332 + C153608 * C1326) * C153852 +
            (C134 * C1317 + C1333 + C1333 + C153608 * C1327) * C11346 +
            (C134 * C1318 + C1334 + C1334 + C153608 * C1328) * C11345 +
            (C134 * C1319 + C1335 + C1335 + C153608 * C1329) * C11344) *
               C153853) *
              C153527 * C1313) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C11344 +
             C193 * C11345 + C194 * C11346 + C195 * C153852) *
                C153853 +
            (C15568 + C15569 + C15570 + C15571) * C153713) *
               C153527 * C1223 -
           ((C16237 + C16236 + C16235 + C16234) * C153713 +
            (C407 * C153852 + C408 * C11346 + C409 * C11345 +
             (C134 * C329 + C374 + C374 + C153608 * C353) * C11344) *
                C153853) *
               C153527 * C153563) *
              C1225 +
          (((C409 * C11344 + C408 * C11345 + C407 * C11346 + C406 * C153852) *
                C153853 +
            (C16238 + C16239 + C16240 + C16241) * C153713) *
               C153527 * C153563 -
           ((C15579 + C15578 + C15577 + C15576) * C153713 +
            (C196 * C153852 + C195 * C11346 + C194 * C11345 + C193 * C11344) *
                C153853) *
               C153527 * C1223) *
              C1226 +
          (((C194 * C11344 + C195 * C11345 + C196 * C11346 + C197 * C153852) *
                C153853 +
            (C15972 + C15973 + C15974 + C15975) * C153713) *
               C153527 * C1223 -
           (((C134 * C1062 + C1089 + C1089 + C153608 * C1074) * C153852 +
             C1101 * C11346 + C1100 * C11345 + C1099 * C11344) *
                C153713 +
            (C762 * C153852 + C406 * C11346 + C407 * C11345 + C408 * C11344) *
                C153853) *
               C153527 * C153563) *
              C1227)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
              C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 +
              C24119 + C153887 * C354) *
                 C153818 +
             (C24183 + C24184 + C24185) * C153464) *
                C153853 +
            ((C31259 + C31260 + C31261) * C153818 + C39378 * C153464) *
                C153713) *
               C153527 * C1223 -
           ((C40352 * C153464 + (C32047 + C32046 + C32045) * C153818) *
                C153713 +
            ((C24492 + C24493 + C24494) * C153464 +
             (C24114 * C1319 + C24435 + C24435 + C153887 * C1329 +
              C24112 * C330 + C24436 + C24436 + C24105 * C354 + C24110 * C329 +
              C24437 + C24437 + C24104 * C353) *
                 C153818) *
                C153853) *
               C153527 * C153563) *
              C1225 +
          ((((C24494 + C24493 + C24492) * C153818 +
             (C24491 + C24490 + C24489) * C153464) *
                C153853 +
            (C40351 * C153818 + (C25608 + C25609 + C25610) * C153464) *
                C153713) *
               C153527 * C153563 -
           ((C25269 * C153464 + C39379 * C153818) * C153713 +
            ((C24188 + C24187 + C24186) * C153464 +
             (C24185 + C24184 + C24183) * C153818) *
                C153853) *
               C153527 * C1223) *
              C1226 +
          (((C24197 * C153818 + (C24191 + C24190 + C24189) * C153464) *
                C153853 +
            (C39962 * C153818 + (C25276 + C25277 + C25278) * C153464) *
                C153713) *
               C153527 * C1223 -
           (((C24114 * C4306 + C25590 + C25590 + C153887 * C4314 +
              C24112 * C1889 + C25591 + C25591 + C24105 * C1899 +
              C24110 * C1060 + C25592 + C25592 + C24104 * C1072) *
                 C153464 +
             (C25610 + C25609 + C25608) * C153818) *
                C153713 +
            ((C25040 + C25039 + C25038) * C153464 + C25031 * C153818) *
                C153853) *
               C153527 * C153563) *
              C1227)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
             C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 + C24119 +
             C153887 * C354) *
                C153818 +
            (C24183 + C24184 + C24185) * C153464) *
               C153853 +
           ((C31259 + C31260 + C31261) * C153818 + C39378 * C153464) *
               C153713) *
              C153527 * C1310 -
          ((C40352 * C153464 + (C32047 + C32046 + C32045) * C153818) * C153713 +
           ((C24492 + C24493 + C24494) * C153464 +
            (C24114 * C1319 + C24435 + C24435 + C153887 * C1329 +
             C24112 * C330 + C24436 + C24436 + C24105 * C354 + C24110 * C329 +
             C24437 + C24437 + C24104 * C353) *
                C153818) *
               C153853) *
              C153527 * C1311 +
          (((C24110 * C330 + C24438 + C24438 + C24104 * C354 + C24112 * C1319 +
             C24439 + C24439 + C24105 * C1329 + C24114 * C3127 + C24440 +
             C24440 + C153887 * C3135) *
                C153818 +
            (C24495 + C24496 + C24497) * C153464) *
               C153853 +
           ((C33419 + C33420 + C33421) * C153818 +
            (C39082 + C39083 + C39084) * C153464) *
               C153713) *
              C153527 * C1312 -
          (((C24114 * C29093 + C40837 + C40837 + C153887 * C29097 +
             C24112 * C5702 + C40838 + C40838 + C24105 * C5708 +
             C24110 * C4304 + C40839 + C40839 + C24104 * C4312) *
                C153464 +
            (C24114 * C29092 + C32421 + C32421 + C153887 * C29096 +
             C24112 * C5703 + C32422 + C32422 + C24105 * C5709 +
             C24110 * C4303 + C32423 + C32423 + C24104 * C4311) *
                C153818) *
               C153713 +
           ((C24114 * C4722 + C25978 + C25978 + C153887 * C4728 +
             C24112 * C3128 + C25979 + C25979 + C24105 * C3136 +
             C24110 * C1318 + C25980 + C25980 + C24104 * C1328) *
                C153464 +
            (C24114 * C4723 + C25981 + C25981 + C153887 * C4729 +
             C24112 * C3127 + C25982 + C25982 + C24105 * C3135 +
             C24110 * C1319 + C25983 + C25983 + C24104 * C1329) *
                C153818) *
               C153853) *
              C153527 * C1313) *
         C153492) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C153818 +
             C193 * C153464) *
                C63320 +
            (C63718 + C63719) * C63321 + C63734 * C63322 + C63735 * C153867) *
               C153527 * C1223 -
           ((C64395 + C64394) * C153867 + (C64393 + C64392) * C63322 +
            (C64391 + C64390) * C63321 +
            (C409 * C153464 +
             (C134 * C329 + C374 + C374 + C153608 * C353) * C153818) *
                C63320) *
               C153527 * C153563) *
              C1225 +
          (((C409 * C153818 + C408 * C153464) * C63320 +
            (C64396 + C64397) * C63321 + (C64398 + C64399) * C63322 +
            (C64400 + C64401) * C153867) *
               C153527 * C153563 -
           (C63736 * C153867 + C63737 * C63322 + (C63727 + C63726) * C63321 +
            (C194 * C153464 + C193 * C153818) * C63320) *
               C153527 * C1223) *
              C1226 +
          (((C194 * C153818 + C195 * C153464) * C63320 +
            (C64126 + C64127) * C63321 + (C64128 + C64129) * C63322 +
            (C64130 + C64131) * C153867) *
               C153527 * C1223 -
           (((C134 * C8488 + C8513 + C8513 + C153608 * C8490) * C153464 +
             C8525 * C153818) *
                C153867 +
            (C7974 * C153464 + C7450 * C153818) * C63322 +
            (C1100 * C153464 + C1099 * C153818) * C63321 +
            (C407 * C153464 + C408 * C153818) * C63320) *
               C153527 * C153563) *
              C1227)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153608 * C152) * C153818 +
            C193 * C153464) *
               C63320 +
           (C63718 + C63719) * C63321 + C63734 * C63322 + C63735 * C153867) *
              C153527 * C1310 -
          ((C64395 + C64394) * C153867 + (C64393 + C64392) * C63322 +
           (C64391 + C64390) * C63321 +
           (C409 * C153464 +
            (C134 * C329 + C374 + C374 + C153608 * C353) * C153818) *
               C63320) *
              C153527 * C1311 +
          (((C134 * C330 + C375 + C375 + C153608 * C354) * C153818 +
            C410 * C153464) *
               C63320 +
           (C9879 * C153818 + C7452 * C153464) * C63321 +
           (C9880 * C153818 + C7454 * C153464) * C63322 +
           (C57130 * C153818 + C63523 * C153464) * C153867) *
              C153527 * C1312 -
          (((C134 * C31999 + C64726 + C64726 + C153608 * C32001) * C153464 +
            (C134 * C30191 + C56580 + C56580 + C153608 * C30195) * C153818) *
               C153867 +
           ((C134 * C4958 + C8893 + C8893 + C153608 * C4964) * C153464 +
            (C134 * C4959 + C8894 + C8894 + C153608 * C4965) * C153818) *
               C63322 +
           ((C134 * C4304 + C8896 + C8896 + C153608 * C4312) * C153464 +
            (C134 * C4303 + C8897 + C8897 + C153608 * C4311) * C153818) *
               C63321 +
           ((C134 * C1318 + C1334 + C1334 + C153608 * C1328) * C153464 +
            (C134 * C1319 + C1335 + C1335 + C153608 * C1329) * C153818) *
               C63320) *
              C153527 * C1313) *
         C153492) /
            (p * q * std::sqrt(p + q));
    d2ee[205] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
               C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 +
               C24119 + C153887 * C354) *
                  C153818 +
              (C24183 + C24184 + C24185) * C153464) *
                 C153853 +
             ((C31259 + C31260 + C31261) * C153818 + C39378 * C153464) *
                 C153713) *
                C2030 -
            ((C31245 * C153464 + (C31264 + C31263 + C31262) * C153818) *
                 C153713 +
             (C39379 * C153464 + (C31261 + C31260 + C31259) * C153818) *
                 C153853) *
                C153591) *
               C153837 +
           ((((C32045 + C32046 + C32047) * C153818 + C40351 * C153464) *
                 C153853 +
             ((C32048 + C32049 + C32050) * C153818 +
              (C32051 + C32052 + C32053) * C153464) *
                 C153713) *
                C153591 -
            ((C40352 * C153464 + (C32047 + C32046 + C32045) * C153818) *
                 C153713 +
             ((C24492 + C24493 + C24494) * C153464 +
              (C24114 * C1319 + C24435 + C24435 + C153887 * C1329 +
               C24112 * C330 + C24436 + C24436 + C24105 * C354 + C24110 * C329 +
               C24437 + C24437 + C24104 * C353) *
                  C153818) *
                 C153853) *
                C2030) *
               C153563) *
              C153829 +
          ((((C39378 * C153818 + C39962 * C153464) * C153853 +
             (C39380 * C153818 + (C24800 + C24801 + C24802) * C153464) *
                 C153713) *
                C153591 -
            ((C25269 * C153464 + C39379 * C153818) * C153713 +
             ((C24188 + C24187 + C24186) * C153464 +
              (C24185 + C24184 + C24183) * C153818) *
                 C153853) *
                C2030) *
               C153837 +
           ((((C24494 + C24493 + C24492) * C153818 +
              (C24491 + C24490 + C24489) * C153464) *
                 C153853 +
             (C40351 * C153818 + (C25608 + C25609 + C25610) * C153464) *
                 C153713) *
                C2030 -
            (((C24114 * C4957 + C26202 + C26202 + C153887 * C4963 +
               C24112 * C3443 + C26203 + C26203 + C24105 * C3451 +
               C24110 * C1459 + C26204 + C26204 + C24104 * C1469) *
                  C153464 +
              (C32053 + C32052 + C32051) * C153818) *
                 C153713 +
             ((C25610 + C25609 + C25608) * C153464 + C40352 * C153818) *
                 C153853) *
                C153591) *
               C153563) *
              C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C153608 * C152) * C11344 +
              C193 * C11345 + C194 * C11346 + C195 * C153852) *
                 C153853 +
             (C15568 + C15569 + C15570 + C15571) * C153713) *
                C2030 -
            ((C15572 + C15573 + C15574 + C15575) * C153713 +
             (C15571 + C15570 + C15569 + C15568) * C153853) *
                C153591) *
               C153837 +
           (((C16234 + C16235 + C16236 + C16237) * C153853 +
             (C16761 + C16762 + C16763 + C16764) * C153713) *
                C153591 -
            ((C16237 + C16236 + C16235 + C16234) * C153713 +
             (C407 * C153852 + C408 * C11346 + C409 * C11345 +
              (C134 * C329 + C374 + C374 + C153608 * C353) * C11344) *
                 C153853) *
                C2030) *
               C153563) *
              C153829 +
          ((((C15576 + C15577 + C15578 + C15579) * C153853 +
             (C15580 + C15581 + C15582 + C15583) * C153713) *
                C153591 -
            ((C15579 + C15578 + C15577 + C15576) * C153713 +
             (C196 * C153852 + C195 * C11346 + C194 * C11345 + C193 * C11344) *
                 C153853) *
                C2030) *
               C153837 +
           (((C409 * C11344 + C408 * C11345 + C407 * C11346 + C406 * C153852) *
                 C153853 +
             (C16238 + C16239 + C16240 + C16241) * C153713) *
                C2030 -
            (((C134 * C1457 + C1473 + C1473 + C153608 * C1467) * C153852 +
              C7974 * C11346 + C7450 * C11345 + C7451 * C11344) *
                 C153713 +
             (C16241 + C16240 + C16239 + C16238) * C153853) *
                C153591) *
               C153563) *
              C153498)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C153608 * C152) * C153818 +
              C193 * C153464) *
                 C63320 +
             (C63718 + C63719) * C63321 + C63734 * C63322 + C63735 * C153867) *
                C2030 -
            (C66095 * C153867 + C66096 * C63322 + (C63721 + C63720) * C63321 +
             (C63719 + C63718) * C63320) *
                C153591) *
               C153837 +
           (((C64390 + C64391) * C63320 + (C64392 + C64393) * C63321 +
             (C64394 + C64395) * C63322 + (C64921 + C64922) * C153867) *
                C153591 -
            (C64923 * C153867 + C64924 * C63322 + (C64391 + C64390) * C63321 +
             (C409 * C153464 +
              (C134 * C329 + C374 + C374 + C153608 * C353) * C153818) *
                 C63320) *
                C2030) *
               C153563) *
              C153829 +
          ((((C63726 + C63727) * C63320 + (C63728 + C63729) * C63321 +
             (C63730 + C63731) * C63322 + (C63732 + C63733) * C153867) *
                C153591 -
            (C63736 * C153867 + C63737 * C63322 + (C63727 + C63726) * C63321 +
             (C194 * C153464 + C193 * C153818) * C63320) *
                C2030) *
               C153837 +
           (((C409 * C153818 + C408 * C153464) * C63320 +
             (C64396 + C64397) * C63321 + (C64398 + C64399) * C63322 +
             (C64400 + C64401) * C153867) *
                C2030 -
            (((C134 * C9115 + C9130 + C9130 + C153608 * C9121) * C153464 +
              C56372 * C153818) *
                 C153867 +
             (C64401 + C64400) * C63322 + (C64399 + C64398) * C63321 +
             (C64397 + C64396) * C63320) *
                C153591) *
               C153563) *
              C153498)) /
            (p * q * std::sqrt(p + q));
    d2ee[206] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
              C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 +
              C24119 + C153887 * C354) *
                 C153818 +
             (C24183 + C24184 + C24185) * C153464) *
                C153853 +
            ((C31259 + C31260 + C31261) * C153818 + C39378 * C153464) *
                C153713) *
               C153910 -
           ((C31245 * C153464 + (C31264 + C31263 + C31262) * C153818) *
                C153713 +
            (C39379 * C153464 + (C31261 + C31260 + C31259) * C153818) *
                C153853) *
               C153911 +
           ((C31272 * C153818 + C39380 * C153464) * C153853 +
            ((C31267 + C31266 + C31265) * C153818 +
             (C31268 + C31269 + C31270) * C153464) *
                C153713) *
               C2546) *
              C153837 +
          ((((C32045 + C32046 + C32047) * C153818 + C40351 * C153464) *
                C153853 +
            ((C32048 + C32049 + C32050) * C153818 +
             (C32051 + C32052 + C32053) * C153464) *
                C153713) *
               C153911 -
           ((C40352 * C153464 + (C32047 + C32046 + C32045) * C153818) *
                C153713 +
            ((C24492 + C24493 + C24494) * C153464 +
             (C24114 * C1319 + C24435 + C24435 + C153887 * C1329 +
              C24112 * C330 + C24436 + C24436 + C24105 * C354 + C24110 * C329 +
              C24437 + C24437 + C24104 * C353) *
                 C153818) *
                C153853) *
               C153910 -
           (((C24114 * C31999 + C32024 + C32024 + C153887 * C32001 +
              C24112 * C6303 + C32025 + C32025 + C24105 * C6315 +
              C24110 * C6304 + C32026 + C32026 + C24104 * C6316) *
                 C153464 +
             (C32665 + C32664 + C32663) * C153818) *
                C153713 +
            ((C32053 + C32052 + C32051) * C153464 + C32658 * C153818) *
                C153853) *
               C2546) *
              C153563) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C11344 +
             C193 * C11345 + C194 * C11346 + C195 * C153852) *
                C153853 +
            (C15568 + C15569 + C15570 + C15571) * C153713) *
               C153910 -
           ((C15572 + C15573 + C15574 + C15575) * C153713 +
            (C15571 + C15570 + C15569 + C15568) * C153853) *
               C153911 +
           ((C15575 + C15574 + C15573 + C15572) * C153853 +
            (C17933 + C17934 + C17935 + C17936) * C153713) *
               C2546) *
              C153837 +
          (((C16234 + C16235 + C16236 + C16237) * C153853 +
            (C16761 + C16762 + C16763 + C16764) * C153713) *
               C153911 -
           ((C16237 + C16236 + C16235 + C16234) * C153713 +
            (C407 * C153852 + C408 * C11346 + C409 * C11345 +
             (C134 * C329 + C374 + C374 + C153608 * C353) * C11344) *
                C153853) *
               C153910 -
           (((C134 * C8488 + C8513 + C8513 + C153608 * C8490) * C153852 +
             C8525 * C11346 + C8524 * C11345 + C9136 * C11344) *
                C153713 +
            (C16764 + C16763 + C16762 + C16761) * C153853) *
               C2546) *
              C153563) *
         C153492) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C153818 +
             C193 * C153464) *
                C63320 +
            (C63718 + C63719) * C63321 + C63734 * C63322 + C63735 * C153867) *
               C153910 -
           (C66095 * C153867 + C66096 * C63322 + (C63721 + C63720) * C63321 +
            (C63719 + C63718) * C63320) *
               C153911 +
           (C63734 * C63320 + C63735 * C63321 + (C63725 + C63724) * C63322 +
            (C66097 + C66098) * C153867) *
               C2546) *
              C153837 +
          (((C64390 + C64391) * C63320 + (C64392 + C64393) * C63321 +
            (C64394 + C64395) * C63322 + (C64921 + C64922) * C153867) *
               C153911 -
           (C64923 * C153867 + C64924 * C63322 + (C64391 + C64390) * C63321 +
            (C409 * C153464 +
             (C134 * C329 + C374 + C374 + C153608 * C353) * C153818) *
                C63320) *
               C153910 -
           (((C134 * C56351 + C56366 + C56366 + C153608 * C56353) * C153464 +
             C56711 * C153818) *
                C153867 +
            (C64922 + C64921) * C63322 + C64923 * C63321 + C64924 * C63320) *
               C2546) *
              C153563) *
         C153492) /
            (p * q * std::sqrt(p + q));
    d2ee[207] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C134 * C136 + C161 + C161 + C153608 * C152) * C11344 +
                 C193 * C11345 + C194 * C11346 + C195 * C153852) *
                    C153853 +
                (C15568 + C15569 + C15570 + C15571) * C153713) *
                   C2030 -
               ((C15572 + C15573 + C15574 + C15575) * C153713 +
                (C15571 + C15570 + C15569 + C15568) * C153853) *
                   C153591) *
                  C153511 * C1225 +
              (((C15576 + C15577 + C15578 + C15579) * C153853 +
                (C15580 + C15581 + C15582 + C15583) * C153713) *
                   C153591 -
               ((C15579 + C15578 + C15577 + C15576) * C153713 +
                (C196 * C153852 + C195 * C11346 + C194 * C11345 +
                 C193 * C11344) *
                    C153853) *
                   C2030) *
                  C153511 * C1226 +
              (((C194 * C11344 + C195 * C11345 + C196 * C11346 +
                 C197 * C153852) *
                    C153853 +
                (C15972 + C15973 + C15974 + C15975) * C153713) *
                   C2030 -
               (((C134 * C549 + C602 + C602 + C153608 * C573) * C153852 +
                 C626 * C11346 + C625 * C11345 + C624 * C11344) *
                    C153713 +
                (C15975 + C15974 + C15973 + C15972) * C153853) *
                   C153591) *
                  C153511 * C1227) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C134 * C136 + C161 + C161 + C153608 * C152) * C11344 +
                 C193 * C11345 + C194 * C11346 + C195 * C153852) *
                    C153853 +
                (C15568 + C15569 + C15570 + C15571) * C153713) *
                   C2030 -
               ((C15572 + C15573 + C15574 + C15575) * C153713 +
                (C15571 + C15570 + C15569 + C15568) * C153853) *
                   C153591) *
                  C320 +
              (((C16234 + C16235 + C16236 + C16237) * C153853 +
                (C16761 + C16762 + C16763 + C16764) * C153713) *
                   C153591 -
               ((C16237 + C16236 + C16235 + C16234) * C153713 +
                (C407 * C153852 + C408 * C11346 + C409 * C11345 +
                 (C134 * C329 + C374 + C374 + C153608 * C353) * C11344) *
                    C153853) *
                   C2030) *
                  C321 +
              ((((C134 * C330 + C375 + C375 + C153608 * C354) * C11344 +
                 C410 * C11345 + C411 * C11346 + C412 * C153852) *
                    C153853 +
                (C17411 + C17412 + C17413 + C17414) * C153713) *
                   C2030 -
               (((C134 * C3444 + C7437 + C7437 + C153608 * C3452) * C153852 +
                 C7455 * C11346 + C7454 * C11345 + C9880 * C11344) *
                    C153713 +
                (C17414 + C17413 + C17412 + C17411) * C153853) *
                   C153591) *
                  C322) *
             C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153608 * C152) * C11344 +
            C193 * C11345 + C194 * C11346 + C195 * C153852) *
               C153853 +
           (C15568 + C15569 + C15570 + C15571) * C153713) *
              C2236 -
          ((C15572 + C15573 + C15574 + C15575) * C153713 +
           (C15571 + C15570 + C15569 + C15568) * C153853) *
              C2237 +
          ((C15575 + C15574 + C15573 + C15572) * C153853 +
           (C17933 + C17934 + C17935 + C17936) * C153713) *
              C2238 -
          (((C134 * C7676 + C7715 + C7715 + C153608 * C7684) * C153852 +
            C7740 * C11346 + C7739 * C11345 + C10485 * C11344) *
               C153713 +
           (C17936 + C17935 + C17934 + C17933) * C153853) *
              C2239) *
         C153511 * C153492) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
              C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 +
              C24119 + C153887 * C354) *
                 C153818 +
             (C24183 + C24184 + C24185) * C153464) *
                C153853 +
            ((C31259 + C31260 + C31261) * C153818 + C39378 * C153464) *
                C153713) *
               C2030 -
           ((C31245 * C153464 + (C31264 + C31263 + C31262) * C153818) *
                C153713 +
            (C39379 * C153464 + (C31261 + C31260 + C31259) * C153818) *
                C153853) *
               C153591) *
              C153511 * C1225 +
          (((C39378 * C153818 + C39962 * C153464) * C153853 +
            (C39380 * C153818 + (C24800 + C24801 + C24802) * C153464) *
                C153713) *
               C153591 -
           ((C25269 * C153464 + C39379 * C153818) * C153713 +
            ((C24188 + C24187 + C24186) * C153464 +
             (C24185 + C24184 + C24183) * C153818) *
                C153853) *
               C2030) *
              C153511 * C1226 +
          (((C24197 * C153818 + (C24191 + C24190 + C24189) * C153464) *
                C153853 +
            (C39962 * C153818 + (C25276 + C25277 + C25278) * C153464) *
                C153713) *
               C2030 -
           (((C24114 * C3444 + C24764 + C24764 + C153887 * C3452 +
              C24112 * C1458 + C24765 + C24765 + C24105 * C1468 +
              C24110 * C546 + C24766 + C24766 + C24104 * C570) *
                 C153464 +
             (C24802 + C24801 + C24800) * C153818) *
                C153713 +
            ((C25278 + C25277 + C25276) * C153464 + C25269 * C153818) *
                C153853) *
               C153591) *
              C153511 * C1227)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
              C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 +
              C24119 + C153887 * C354) *
                 C153818 +
             (C24183 + C24184 + C24185) * C153464) *
                C153853 +
            ((C31259 + C31260 + C31261) * C153818 + C39378 * C153464) *
                C153713) *
               C2030 -
           ((C31245 * C153464 + (C31264 + C31263 + C31262) * C153818) *
                C153713 +
            (C39379 * C153464 + (C31261 + C31260 + C31259) * C153818) *
                C153853) *
               C153591) *
              C320 +
          ((((C32045 + C32046 + C32047) * C153818 + C40351 * C153464) *
                C153853 +
            ((C32048 + C32049 + C32050) * C153818 +
             (C32051 + C32052 + C32053) * C153464) *
                C153713) *
               C153591 -
           ((C40352 * C153464 + (C32047 + C32046 + C32045) * C153818) *
                C153713 +
            ((C24492 + C24493 + C24494) * C153464 +
             (C24114 * C1319 + C24435 + C24435 + C153887 * C1329 +
              C24112 * C330 + C24436 + C24436 + C24105 * C354 + C24110 * C329 +
              C24437 + C24437 + C24104 * C353) *
                 C153818) *
                C153853) *
               C2030) *
              C321 +
          ((((C24110 * C330 + C24438 + C24438 + C24104 * C354 + C24112 * C1319 +
              C24439 + C24439 + C24105 * C1329 + C24114 * C3127 + C24440 +
              C24440 + C153887 * C3135) *
                 C153818 +
             (C24495 + C24496 + C24497) * C153464) *
                C153853 +
            ((C33419 + C33420 + C33421) * C153818 +
             (C39082 + C39083 + C39084) * C153464) *
                C153713) *
               C2030 -
           (((C24114 * C28651 + C30975 + C30975 + C153887 * C28655 +
              C24112 * C4958 + C30976 + C30976 + C24105 * C4964 +
              C24110 * C3442 + C30977 + C30977 + C24104 * C3450) *
                 C153464 +
             (C33424 + C33423 + C33422) * C153818) *
                C153713 +
            ((C39084 + C39083 + C39082) * C153464 +
             (C33421 + C33420 + C33419) * C153818) *
                C153853) *
               C153591) *
              C322) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
             C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 + C24119 +
             C153887 * C354) *
                C153818 +
            (C24183 + C24184 + C24185) * C153464) *
               C153853 +
           ((C31259 + C31260 + C31261) * C153818 + C39378 * C153464) *
               C153713) *
              C2236 -
          ((C31245 * C153464 + (C31264 + C31263 + C31262) * C153818) * C153713 +
           (C39379 * C153464 + (C31261 + C31260 + C31259) * C153818) *
               C153853) *
              C2237 +
          ((C31272 * C153818 + C39380 * C153464) * C153853 +
           ((C31267 + C31266 + C31265) * C153818 +
            (C31268 + C31269 + C31270) * C153464) *
               C153713) *
              C2238 -
          (((C24114 * C31196 + C31230 + C31230 + C153887 * C31200 +
             C24112 * C9116 + C31231 + C31231 + C24105 * C9122 +
             C24110 * C7674 + C31232 + C31232 + C24104 * C7682) *
                C153464 +
            (C34033 + C34032 + C34031) * C153818) *
               C153713 +
           ((C31270 + C31269 + C31268) * C153464 + C34023 * C153818) *
               C153853) *
              C2239) *
         C153511 * C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C153818 +
             C193 * C153464) *
                C63320 +
            (C63718 + C63719) * C63321 + C63734 * C63322 + C63735 * C153867) *
               C2030 -
           ((C63724 + C63725) * C153867 + (C63723 + C63722) * C63322 +
            (C63721 + C63720) * C63321 + (C63719 + C63718) * C63320) *
               C153591) *
              C153511 * C1225 +
          (((C63726 + C63727) * C63320 + (C63728 + C63729) * C63321 +
            (C63730 + C63731) * C63322 + (C63732 + C63733) * C153867) *
               C153591 -
           (C63736 * C153867 + C63737 * C63322 + (C63727 + C63726) * C63321 +
            (C194 * C153464 + C193 * C153818) * C63320) *
               C2030) *
              C153511 * C1226 +
          (((C194 * C153818 + C195 * C153464) * C63320 +
            (C64126 + C64127) * C63321 + (C64128 + C64129) * C63322 +
            (C64130 + C64131) * C153867) *
               C2030 -
           (((C134 * C7676 + C7715 + C7715 + C153608 * C7684) * C153464 +
             C7740 * C153818) *
                C153867 +
            (C64131 + C64130) * C63322 + (C64129 + C64128) * C63321 +
            (C64127 + C64126) * C63320) *
               C153591) *
              C153511 * C1227)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C153818 +
             C193 * C153464) *
                C63320 +
            (C63718 + C63719) * C63321 + C63734 * C63322 + C63735 * C153867) *
               C2030 -
           ((C63724 + C63725) * C153867 + (C63723 + C63722) * C63322 +
            (C63721 + C63720) * C63321 + (C63719 + C63718) * C63320) *
               C153591) *
              C320 +
          (((C64390 + C64391) * C63320 + (C64392 + C64393) * C63321 +
            (C64394 + C64395) * C63322 + (C64921 + C64922) * C153867) *
               C153591 -
           (C64923 * C153867 + C64924 * C63322 + (C64391 + C64390) * C63321 +
            (C409 * C153464 +
             (C134 * C329 + C374 + C374 + C153608 * C353) * C153818) *
                C63320) *
               C2030) *
              C321 +
          ((((C134 * C330 + C375 + C375 + C153608 * C354) * C153818 +
             C410 * C153464) *
                C63320 +
            (C65571 + C65572) * C63321 + (C65573 + C65574) * C63322 +
            (C65575 + C65576) * C153867) *
               C2030 -
           (((C134 * C31196 + C55791 + C55791 + C153608 * C31200) * C153464 +
             C57131 * C153818) *
                C153867 +
            (C65576 + C65575) * C63322 + (C65574 + C65573) * C63321 +
            (C65572 + C65571) * C63320) *
               C153591) *
              C322) *
         C153492) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153608 * C152) * C153818 +
            C193 * C153464) *
               C63320 +
           (C63718 + C63719) * C63321 + C63734 * C63322 + C63735 * C153867) *
              C2236 -
          (C66095 * C153867 + C66096 * C63322 + (C63721 + C63720) * C63321 +
           (C63719 + C63718) * C63320) *
              C2237 +
          (C63734 * C63320 + C63735 * C63321 + (C63725 + C63724) * C63322 +
           (C66097 + C66098) * C153867) *
              C2238 -
          (((C134 * C55914 + C55933 + C55933 + C153608 * C55918) * C153464 +
            C57468 * C153818) *
               C153867 +
           (C66098 + C66097) * C63322 + C66095 * C63321 + C66096 * C63320) *
              C2239) *
         C153511 * C153492) /
            (p * q * std::sqrt(p + q));
    d2ee[208] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
              C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 +
              C24119 + C153887 * C354) *
                 C153818 +
             (C24183 + C24184 + C24185) * C153464) *
                C153853 +
            ((C31259 + C31260 + C31261) * C153818 + C39378 * C153464) *
                C153713) *
               C153910 -
           ((C31245 * C153464 + (C31264 + C31263 + C31262) * C153818) *
                C153713 +
            (C39379 * C153464 + (C31261 + C31260 + C31259) * C153818) *
                C153853) *
               C153911 +
           ((C31272 * C153818 + C39380 * C153464) * C153853 +
            ((C31267 + C31266 + C31265) * C153818 +
             (C31268 + C31269 + C31270) * C153464) *
                C153713) *
               C2546) *
              C153511 * C153829 +
          (((C39378 * C153818 + C39962 * C153464) * C153853 +
            (C39380 * C153818 + (C24800 + C24801 + C24802) * C153464) *
                C153713) *
               C153911 -
           ((C25269 * C153464 + C39379 * C153818) * C153713 +
            ((C24188 + C24187 + C24186) * C153464 +
             (C24185 + C24184 + C24183) * C153818) *
                C153853) *
               C153910 -
           (((C24114 * C6301 + C27528 + C27528 + C153887 * C6313 +
              C24112 * C6302 + C27529 + C27529 + C24105 * C6314 +
              C24110 * C2242 + C27530 + C27530 + C24104 * C2252) *
                 C153464 +
             (C31270 + C31269 + C31268) * C153818) *
                C153713 +
            ((C24802 + C24801 + C24800) * C153464 + C31245 * C153818) *
                C153853) *
               C2546) *
              C153511 * C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C11344 +
             C193 * C11345 + C194 * C11346 + C195 * C153852) *
                C153853 +
            (C15568 + C15569 + C15570 + C15571) * C153713) *
               C153910 -
           ((C15572 + C15573 + C15574 + C15575) * C153713 +
            (C15571 + C15570 + C15569 + C15568) * C153853) *
               C153911 +
           ((C15575 + C15574 + C15573 + C15572) * C153853 +
            (C17933 + C17934 + C17935 + C17936) * C153713) *
               C2546) *
              C153511 * C153829 +
          (((C15576 + C15577 + C15578 + C15579) * C153853 +
            (C15580 + C15581 + C15582 + C15583) * C153713) *
               C153911 -
           ((C15579 + C15578 + C15577 + C15576) * C153713 +
            (C196 * C153852 + C195 * C11346 + C194 * C11345 + C193 * C11344) *
                C153853) *
               C153910 -
           (((C134 * C2240 + C2256 + C2256 + C153608 * C2250) * C153852 +
             C7741 * C11346 + C7736 * C11345 + C7737 * C11344) *
                C153713 +
            (C15583 + C15582 + C15581 + C15580) * C153853) *
               C2546) *
              C153511 * C153498)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C153818 +
             C193 * C153464) *
                C63320 +
            (C63718 + C63719) * C63321 + C63734 * C63322 + C63735 * C153867) *
               C153910 -
           (C66095 * C153867 + C66096 * C63322 + (C63721 + C63720) * C63321 +
            (C63719 + C63718) * C63320) *
               C153911 +
           (C63734 * C63320 + C63735 * C63321 + (C63725 + C63724) * C63322 +
            (C66097 + C66098) * C153867) *
               C2546) *
              C153511 * C153829 +
          (((C63726 + C63727) * C63320 + (C63728 + C63729) * C63321 +
            (C63730 + C63731) * C63322 + (C63732 + C63733) * C153867) *
               C153911 -
           (C63736 * C153867 + C63737 * C63322 + (C63727 + C63726) * C63321 +
            (C194 * C153464 + C193 * C153818) * C63320) *
               C153910 -
           (((C134 * C10464 + C10479 + C10479 + C153608 * C10470) * C153464 +
             C55939 * C153818) *
                C153867 +
            (C63733 + C63732) * C63322 + C63736 * C63321 + C63737 * C63320) *
               C2546) *
              C153511 * C153498)) /
            (p * q * std::sqrt(p + q));
    d2ee[209] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C11344 +
             C193 * C11345 + C194 * C11346 + C195 * C153852) *
                C153853 +
            (C15568 + C15569 + C15570 + C15571) * C153713) *
               C2030 -
           ((C15572 + C15573 + C15574 + C15575) * C153713 +
            (C15571 + C15570 + C15569 + C15568) * C153853) *
               C153591) *
              C320 +
          (((C16234 + C16235 + C16236 + C16237) * C153853 +
            (C16761 + C16762 + C16763 + C16764) * C153713) *
               C153591 -
           ((C16237 + C16236 + C16235 + C16234) * C153713 +
            (C407 * C153852 + C408 * C11346 + C409 * C11345 +
             (C134 * C329 + C374 + C374 + C153608 * C353) * C11344) *
                C153853) *
               C2030) *
              C321 +
          ((((C134 * C330 + C375 + C375 + C153608 * C354) * C11344 +
             C410 * C11345 + C411 * C11346 + C412 * C153852) *
                C153853 +
            (C17411 + C17412 + C17413 + C17414) * C153713) *
               C2030 -
           (((C134 * C3444 + C7437 + C7437 + C153608 * C3452) * C153852 +
             C7455 * C11346 + C7454 * C11345 + C9880 * C11344) *
                C153713 +
            (C17414 + C17413 + C17412 + C17411) * C153853) *
               C153591) *
              C322) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C11344 +
             C193 * C11345 + C194 * C11346 + C195 * C153852) *
                C153853 +
            (C15568 + C15569 + C15570 + C15571) * C153713) *
               C2030 -
           ((C15572 + C15573 + C15574 + C15575) * C153713 +
            (C15571 + C15570 + C15569 + C15568) * C153853) *
               C153591) *
              C153511 * C1225 +
          (((C15576 + C15577 + C15578 + C15579) * C153853 +
            (C15580 + C15581 + C15582 + C15583) * C153713) *
               C153591 -
           ((C15579 + C15578 + C15577 + C15576) * C153713 +
            (C196 * C153852 + C195 * C11346 + C194 * C11345 + C193 * C11344) *
                C153853) *
               C2030) *
              C153511 * C1226 +
          (((C194 * C11344 + C195 * C11345 + C196 * C11346 + C197 * C153852) *
                C153853 +
            (C15972 + C15973 + C15974 + C15975) * C153713) *
               C2030 -
           (((C134 * C549 + C602 + C602 + C153608 * C573) * C153852 +
             C626 * C11346 + C625 * C11345 + C624 * C11344) *
                C153713 +
            (C15975 + C15974 + C15973 + C15972) * C153853) *
               C153591) *
              C153511 * C1227)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
              C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 +
              C24119 + C153887 * C354) *
                 C153818 +
             (C24183 + C24184 + C24185) * C153464) *
                C153853 +
            ((C31259 + C31260 + C31261) * C153818 + C39378 * C153464) *
                C153713) *
               C2030 -
           ((C31245 * C153464 + (C31264 + C31263 + C31262) * C153818) *
                C153713 +
            (C39379 * C153464 + (C31261 + C31260 + C31259) * C153818) *
                C153853) *
               C153591) *
              C153511 * C1225 +
          (((C39378 * C153818 + C39962 * C153464) * C153853 +
            (C39380 * C153818 + (C24800 + C24801 + C24802) * C153464) *
                C153713) *
               C153591 -
           ((C25269 * C153464 + C39379 * C153818) * C153713 +
            ((C24188 + C24187 + C24186) * C153464 +
             (C24185 + C24184 + C24183) * C153818) *
                C153853) *
               C2030) *
              C153511 * C1226 +
          (((C24197 * C153818 + (C24191 + C24190 + C24189) * C153464) *
                C153853 +
            (C39962 * C153818 + (C25276 + C25277 + C25278) * C153464) *
                C153713) *
               C2030 -
           (((C24114 * C3444 + C24764 + C24764 + C153887 * C3452 +
              C24112 * C1458 + C24765 + C24765 + C24105 * C1468 +
              C24110 * C546 + C24766 + C24766 + C24104 * C570) *
                 C153464 +
             (C24802 + C24801 + C24800) * C153818) *
                C153713 +
            ((C25278 + C25277 + C25276) * C153464 + C25269 * C153818) *
                C153853) *
               C153591) *
              C153511 * C1227)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
              C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 +
              C24119 + C153887 * C354) *
                 C153818 +
             (C24183 + C24184 + C24185) * C153464) *
                C153853 +
            ((C31259 + C31260 + C31261) * C153818 + C39378 * C153464) *
                C153713) *
               C2030 -
           ((C31245 * C153464 + (C31264 + C31263 + C31262) * C153818) *
                C153713 +
            (C39379 * C153464 + (C31261 + C31260 + C31259) * C153818) *
                C153853) *
               C153591) *
              C320 +
          ((((C32045 + C32046 + C32047) * C153818 + C40351 * C153464) *
                C153853 +
            ((C32048 + C32049 + C32050) * C153818 +
             (C32051 + C32052 + C32053) * C153464) *
                C153713) *
               C153591 -
           ((C40352 * C153464 + (C32047 + C32046 + C32045) * C153818) *
                C153713 +
            ((C24492 + C24493 + C24494) * C153464 +
             (C24114 * C1319 + C24435 + C24435 + C153887 * C1329 +
              C24112 * C330 + C24436 + C24436 + C24105 * C354 + C24110 * C329 +
              C24437 + C24437 + C24104 * C353) *
                 C153818) *
                C153853) *
               C2030) *
              C321 +
          ((((C24110 * C330 + C24438 + C24438 + C24104 * C354 + C24112 * C1319 +
              C24439 + C24439 + C24105 * C1329 + C24114 * C3127 + C24440 +
              C24440 + C153887 * C3135) *
                 C153818 +
             (C24495 + C24496 + C24497) * C153464) *
                C153853 +
            ((C33419 + C33420 + C33421) * C153818 +
             (C39082 + C39083 + C39084) * C153464) *
                C153713) *
               C2030 -
           (((C24114 * C28651 + C30975 + C30975 + C153887 * C28655 +
              C24112 * C4958 + C30976 + C30976 + C24105 * C4964 +
              C24110 * C3442 + C30977 + C30977 + C24104 * C3450) *
                 C153464 +
             (C33424 + C33423 + C33422) * C153818) *
                C153713 +
            ((C39084 + C39083 + C39082) * C153464 +
             (C33421 + C33420 + C33419) * C153818) *
                C153853) *
               C153591) *
              C322) *
         C153492) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C153818 +
             C193 * C153464) *
                C63320 +
            (C63718 + C63719) * C63321 + C63734 * C63322 + C63735 * C153867) *
               C2030 -
           ((C63724 + C63725) * C153867 + (C63723 + C63722) * C63322 +
            (C63721 + C63720) * C63321 + (C63719 + C63718) * C63320) *
               C153591) *
              C153511 * C1225 +
          (((C63726 + C63727) * C63320 + (C63728 + C63729) * C63321 +
            (C63730 + C63731) * C63322 + (C63732 + C63733) * C153867) *
               C153591 -
           (C63736 * C153867 + C63737 * C63322 + (C63727 + C63726) * C63321 +
            (C194 * C153464 + C193 * C153818) * C63320) *
               C2030) *
              C153511 * C1226 +
          (((C194 * C153818 + C195 * C153464) * C63320 +
            (C64126 + C64127) * C63321 + (C64128 + C64129) * C63322 +
            (C64130 + C64131) * C153867) *
               C2030 -
           (((C134 * C7676 + C7715 + C7715 + C153608 * C7684) * C153464 +
             C7740 * C153818) *
                C153867 +
            (C64131 + C64130) * C63322 + (C64129 + C64128) * C63321 +
            (C64127 + C64126) * C63320) *
               C153591) *
              C153511 * C1227)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C153818 +
             C193 * C153464) *
                C63320 +
            (C63718 + C63719) * C63321 + C63734 * C63322 + C63735 * C153867) *
               C2030 -
           ((C63724 + C63725) * C153867 + (C63723 + C63722) * C63322 +
            (C63721 + C63720) * C63321 + (C63719 + C63718) * C63320) *
               C153591) *
              C320 +
          (((C64390 + C64391) * C63320 + (C64392 + C64393) * C63321 +
            (C64394 + C64395) * C63322 + (C64921 + C64922) * C153867) *
               C153591 -
           (C64923 * C153867 + C64924 * C63322 + (C64391 + C64390) * C63321 +
            (C409 * C153464 +
             (C134 * C329 + C374 + C374 + C153608 * C353) * C153818) *
                C63320) *
               C2030) *
              C321 +
          ((((C134 * C330 + C375 + C375 + C153608 * C354) * C153818 +
             C410 * C153464) *
                C63320 +
            (C65571 + C65572) * C63321 + (C65573 + C65574) * C63322 +
            (C65575 + C65576) * C153867) *
               C2030 -
           (((C134 * C31196 + C55791 + C55791 + C153608 * C31200) * C153464 +
             C57131 * C153818) *
                C153867 +
            (C65576 + C65575) * C63322 + (C65574 + C65573) * C63321 +
            (C65572 + C65571) * C63320) *
               C153591) *
              C322) *
         C153492) /
            (p * q * std::sqrt(p + q));
    d2ee[210] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
             C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
             C153887 * C354) *
                C2818 +
            (C2894 + C2895 + C2896) * C2819 + C2908 * C153874) *
               C153626 * C153527 * C153837 -
           (C3766 * C153874 + (C3215 + C3216 + C3217) * C2819 +
            (C2825 * C1319 + C3158 + C3158 + C153887 * C1329 + C2823 * C330 +
             C3159 + C3159 + C153913 * C354 + C2821 * C329 + C3160 + C3160 +
             C153925 * C353) *
                C2818) *
               C153626 * C153527 * C153563) *
              C153906 +
          (((C3217 + C3216 + C3215) * C2818 + (C3214 + C3213 + C3212) * C2819 +
            (C3773 + C3774 + C3775) * C153874) *
               C153626 * C153527 * C153563 -
           (C2909 * C153874 + (C2899 + C2898 + C2897) * C2819 +
            (C2896 + C2895 + C2894) * C2818) *
               C153626 * C153527 * C153837) *
              C153907 +
          ((C2908 * C2818 + (C2902 + C2901 + C2900) * C2819 +
            (C2903 + C2904 + C2905) * C153874) *
               C153626 * C153527 * C153837 -
           ((C2825 * C1315 + C3763 + C3763 + C153887 * C1325 + C2823 * C334 +
             C3764 + C3764 + C153913 * C358 + C2821 * C325 + C3765 + C3765 +
             C153925 * C349) *
                C153874 +
            (C3775 + C3774 + C3773) * C2819 + C3766 * C2818) *
               C153626 * C153527 * C153563) *
              C752)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153608 * C152) * C122 + C193 * C123 +
            C194 * C124 + C195 * C125 + C196 * C126) *
               C153626 * C153527 * C153837 -
           (C406 * C126 + C407 * C125 + C408 * C124 + C409 * C123 +
            (C134 * C329 + C374 + C374 + C153608 * C353) * C122) *
               C153626 * C153527 * C153563) *
              C153906 +
          ((C409 * C122 + C408 * C123 + C407 * C124 + C406 * C125 +
            C762 * C126) *
               C153626 * C153527 * C153563 -
           (C197 * C126 + C196 * C125 + C195 * C124 + C194 * C123 +
            C193 * C122) *
               C153626 * C153527 * C153837) *
              C153907 +
          ((C194 * C122 + C195 * C123 + C196 * C124 + C197 * C125 +
            C198 * C126) *
               C153626 * C153527 * C153837 -
           ((C134 * C753 + C759 + C759 + C153608 * C755) * C126 + C762 * C125 +
            C406 * C124 + C407 * C123 + C408 * C122) *
               C153626 * C153527 * C153563) *
              C752)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
             C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 + C24119 +
             C153887 * C354) *
                C153922 +
            (C24183 + C24184 + C24185) * C153903 + C24197 * C153874) *
               C153626 * C153527 * C153837 -
           (C25031 * C153874 + (C24492 + C24493 + C24494) * C153903 +
            (C24114 * C1319 + C24435 + C24435 + C153887 * C1329 +
             C24112 * C330 + C24436 + C24436 + C24105 * C354 + C24110 * C329 +
             C24437 + C24437 + C24104 * C353) *
                C153922) *
               C153626 * C153527 * C153563) *
              C153906 +
          (((C24494 + C24493 + C24492) * C153922 +
            (C24491 + C24490 + C24489) * C153903 +
            (C25038 + C25039 + C25040) * C153874) *
               C153626 * C153527 * C153563 -
           (C24198 * C153874 + (C24188 + C24187 + C24186) * C153903 +
            (C24185 + C24184 + C24183) * C153922) *
               C153626 * C153527 * C153837) *
              C153907 +
          ((C24197 * C153922 + (C24191 + C24190 + C24189) * C153903 +
            (C24192 + C24193 + C24194) * C153874) *
               C153626 * C153527 * C153837 -
           ((C24114 * C1315 + C25028 + C25028 + C153887 * C1325 +
             C24112 * C334 + C25029 + C25029 + C24105 * C358 + C24110 * C325 +
             C25030 + C25030 + C24104 * C349) *
                C153874 +
            (C25040 + C25039 + C25038) * C153903 + C25031 * C153922) *
               C153626 * C153527 * C153563) *
              C752)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C28350 * C136 + C28361 + C28361 + C28344 * C152 + C28352 * C329 +
            C28362 + C28362 + C28345 * C353 + C28354 * C330 + C28363 + C28363 +
            C28346 * C354 + C28356 * C1319 + C28364 + C28364 + C28347 * C1329 +
            C28358 * C3127 + C28365 + C28365 + C28348 * C3135) *
               C153454 * C153626 * C153527 * C153837 -
           (C28358 * C4723 + C28509 + C28509 + C28348 * C4729 + C28356 * C3127 +
            C28510 + C28510 + C28347 * C3135 + C28354 * C1319 + C28511 +
            C28511 + C28346 * C1329 + C28352 * C330 + C28512 + C28512 +
            C28345 * C354 + C28350 * C329 + C28513 + C28513 + C28344 * C353) *
               C153454 * C153626 * C153527 * C153563) *
              C153906 +
          ((C28350 * C328 + C28519 + C28519 + C28344 * C352 + C28352 * C331 +
            C28520 + C28520 + C28345 * C355 + C28354 * C1318 + C28521 + C28521 +
            C28346 * C1328 + C28356 * C3128 + C28522 + C28522 + C28347 * C3136 +
            C28358 * C4722 + C28523 + C28523 + C28348 * C4728) *
               C153454 * C153626 * C153527 * C153563 -
           (C28358 * C3128 + C28366 + C28366 + C28348 * C3136 + C28356 * C1318 +
            C28367 + C28367 + C28347 * C1328 + C28354 * C331 + C28368 + C28368 +
            C28346 * C355 + C28352 * C328 + C28369 + C28369 + C28345 * C352 +
            C28350 * C137 + C28370 + C28370 + C28344 * C153) *
               C153454 * C153626 * C153527 * C153837) *
              C153907 +
          ((C28350 * C138 + C28371 + C28371 + C28344 * C154 + C28352 * C327 +
            C28372 + C28372 + C28345 * C351 + C28354 * C332 + C28373 + C28373 +
            C28346 * C356 + C28356 * C1317 + C28374 + C28374 + C28347 * C1327 +
            C28358 * C3129 + C28375 + C28375 + C28348 * C3137) *
               C153454 * C153626 * C153527 * C153837 -
           (C28358 * C4721 + C28799 + C28799 + C28348 * C4727 + C28356 * C3129 +
            C28800 + C28800 + C28347 * C3137 + C28354 * C1317 + C28801 +
            C28801 + C28346 * C1327 + C28352 * C332 + C28802 + C28802 +
            C28345 * C356 + C28350 * C327 + C28803 + C28803 + C28344 * C351) *
               C153454 * C153626 * C153527 * C153563) *
              C752)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C153922 +
             C193 * C153903 + C194 * C153874) *
                C47609 +
            (C48049 + C48050 + C48051) * C47610 + C48069 * C153890) *
               C153527 * C153837 -
           ((C7450 * C153874 + C7451 * C153903 + C8523 * C153922) * C153890 +
            (C1099 * C153874 + C1098 * C153903 + C8522 * C153922) * C47610 +
            (C408 * C153874 + C409 * C153903 +
             (C134 * C329 + C374 + C374 + C153608 * C353) * C153922) *
                C47609) *
               C153527 * C153563) *
              C153906 +
          (((C409 * C153922 + C408 * C153903 + C407 * C153874) * C47609 +
            (C1098 * C153922 + C1099 * C153903 + C1100 * C153874) * C47610 +
            (C7451 * C153922 + C7450 * C153903 + C7974 * C153874) * C153890) *
               C153527 * C153563 -
           (C48070 * C153890 + (C48060 + C48059 + C48058) * C47610 +
            (C195 * C153874 + C194 * C153903 + C193 * C153922) * C47609) *
               C153527 * C153837) *
              C153907 +
          (((C194 * C153922 + C195 * C153903 + C196 * C153874) * C47609 +
            (C621 * C153922 + C620 * C153903 + C619 * C153874) * C47610 +
            (C624 * C153922 + C625 * C153903 + C626 * C153874) * C153890) *
               C153527 * C153837 -
           (((C134 * C1457 + C1473 + C1473 + C153608 * C1467) * C153874 +
             C7974 * C153903 + C7450 * C153922) *
                C153890 +
            (C1101 * C153874 + C1100 * C153903 + C1099 * C153922) * C47610 +
            (C406 * C153874 + C407 * C153903 + C408 * C153922) * C47609) *
               C153527 * C153563) *
              C752)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
             C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
             C153887 * C354) *
                C153454 * C47609 +
            (C52092 + C52093 + C52094) * C153454 * C47610 + C52106 * C153890) *
               C153527 * C153837 -
           ((C2825 * C4959 + C4973 + C4973 + C153887 * C4965 + C2823 * C3441 +
             C4974 + C4974 + C153913 * C3449 + C2821 * C1461 + C4975 + C4975 +
             C153925 * C1471) *
                C153454 * C153890 +
            (C2825 * C4303 + C4318 + C4318 + C153887 * C4311 + C2823 * C1892 +
             C4317 + C4317 + C153913 * C1902 + C2821 * C1057 + C4316 + C4316 +
             C153925 * C1069) *
                C153454 * C47610 +
            (C2825 * C1319 + C3158 + C3158 + C153887 * C1329 + C2823 * C330 +
             C3159 + C3159 + C153913 * C354 + C2821 * C329 + C3160 + C3160 +
             C153925 * C353) *
                C153454 * C47609) *
               C153527 * C153563) *
              C153906 +
          (((C3217 + C3216 + C3215) * C153454 * C47609 +
            (C4352 + C4353 + C4354) * C153454 * C47610 +
            (C2821 * C1460 + C4972 + C4972 + C153925 * C1470 + C2823 * C3442 +
             C4971 + C4971 + C153913 * C3450 + C2825 * C4958 + C4970 + C4970 +
             C153887 * C4964) *
                C153454 * C153890) *
               C153527 * C153563 -
           (C52091 * C153890 + (C3529 + C3530 + C3531) * C153454 * C47610 +
            (C2896 + C2895 + C2894) * C153454 * C47609) *
               C153527 * C153837) *
              C153907 +
          ((C2908 * C153454 * C47609 +
            (C3528 + C3527 + C3526) * C153454 * C47610 +
            (C3535 + C3536 + C3537) * C153454 * C153890) *
               C153527 * C153837 -
           ((C2825 * C4957 + C4967 + C4967 + C153887 * C4963 + C2823 * C3443 +
             C4968 + C4968 + C153913 * C3451 + C2821 * C1459 + C4969 + C4969 +
             C153925 * C1469) *
                C153454 * C153890 +
            (C4357 + C4356 + C4355) * C153454 * C47610 +
            C3766 * C153454 * C47609) *
               C153527 * C153563) *
              C752)) /
            (p * q * std::sqrt(p + q));
    d2ee[211] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
              C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
              C153887 * C354) *
                 C2818 +
             (C2894 + C2895 + C2896) * C2819 + C2908 * C153874) *
                C153626 * C153838 -
            (C4004 * C153874 + (C3529 + C3530 + C3531) * C2819 +
             (C2825 * C1892 + C3472 + C3472 + C153887 * C1902 + C2823 * C1057 +
              C3473 + C3473 + C153913 * C1069 + C2821 * C542 + C3474 + C3474 +
              C153925 * C566) *
                 C2818) *
                C153626 * C153591) *
               C153837 +
           (((C2821 * C1057 + C4316 + C4316 + C153925 * C1069 + C2823 * C1892 +
              C4317 + C4317 + C153913 * C1902 + C2825 * C4303 + C4318 + C4318 +
              C153887 * C4311) *
                 C2818 +
             (C4352 + C4353 + C4354) * C2819 +
             (C4355 + C4356 + C4357) * C153874) *
                C153626 * C153591 -
            (C3766 * C153874 + (C3215 + C3216 + C3217) * C2819 +
             (C2825 * C1319 + C3158 + C3158 + C153887 * C1329 + C2823 * C330 +
              C3159 + C3159 + C153913 * C354 + C2821 * C329 + C3160 + C3160 +
              C153925 * C353) *
                 C2818) *
                C153626 * C153838) *
               C153563) *
              C323 +
          ((((C3531 + C3530 + C3529) * C2818 + (C3528 + C3527 + C3526) * C2819 +
             (C4011 + C4012 + C4013) * C153874) *
                C153626 * C153591 -
            (C2909 * C153874 + (C2899 + C2898 + C2897) * C2819 +
             (C2896 + C2895 + C2894) * C2818) *
                C153626 * C153838) *
               C153837 +
           (((C3217 + C3216 + C3215) * C2818 + (C3214 + C3213 + C3212) * C2819 +
             (C3773 + C3774 + C3775) * C153874) *
                C153626 * C153838 -
            ((C2825 * C4306 + C4337 + C4337 + C153887 * C4314 + C2823 * C1889 +
              C4338 + C4338 + C153913 * C1899 + C2821 * C1060 + C4339 + C4339 +
              C153925 * C1072) *
                 C153874 +
             (C4357 + C4356 + C4355) * C2819 +
             (C4354 + C4353 + C4352) * C2818) *
                C153626 * C153591) *
               C153563) *
              C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C122 + C193 * C123 +
             C194 * C124 + C195 * C125 + C196 * C126) *
                C153626 * C153838 -
            (C619 * C126 + C620 * C125 + C621 * C124 + C622 * C123 +
             (C134 * C542 + C587 + C587 + C153608 * C566) * C122) *
                C153626 * C153591) *
               C153837 +
           (((C134 * C1057 + C1076 + C1076 + C153608 * C1069) * C122 +
             C1098 * C123 + C1099 * C124 + C1100 * C125 + C1101 * C126) *
                C153626 * C153591 -
            (C406 * C126 + C407 * C125 + C408 * C124 + C409 * C123 +
             (C134 * C329 + C374 + C374 + C153608 * C353) * C122) *
                C153626 * C153838) *
               C153563) *
              C323 +
          (((C622 * C122 + C621 * C123 + C620 * C124 + C619 * C125 +
             C895 * C126) *
                C153626 * C153591 -
            (C197 * C126 + C196 * C125 + C195 * C124 + C194 * C123 +
             C193 * C122) *
                C153626 * C153838) *
               C153837 +
           ((C409 * C122 + C408 * C123 + C407 * C124 + C406 * C125 +
             C762 * C126) *
                C153626 * C153838 -
            ((C134 * C1062 + C1089 + C1089 + C153608 * C1074) * C126 +
             C1101 * C125 + C1100 * C124 + C1099 * C123 + C1098 * C122) *
                C153626 * C153591) *
               C153563) *
              C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
              C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 +
              C24119 + C153887 * C354) *
                 C153922 +
             (C24183 + C24184 + C24185) * C153903 + C24197 * C153874) *
                C153626 * C153838 -
            (C25269 * C153874 + (C24794 + C24795 + C24796) * C153903 +
             (C24114 * C1892 + C24737 + C24737 + C153887 * C1902 +
              C24112 * C1057 + C24738 + C24738 + C24105 * C1069 +
              C24110 * C542 + C24739 + C24739 + C24104 * C566) *
                 C153922) *
                C153626 * C153591) *
               C153837 +
           (((C24110 * C1057 + C25569 + C25569 + C24104 * C1069 +
              C24112 * C1892 + C25570 + C25570 + C24105 * C1902 +
              C24114 * C4303 + C25571 + C25571 + C153887 * C4311) *
                 C153922 +
             (C25605 + C25606 + C25607) * C153903 +
             (C25608 + C25609 + C25610) * C153874) *
                C153626 * C153591 -
            (C25031 * C153874 + (C24492 + C24493 + C24494) * C153903 +
             (C24114 * C1319 + C24435 + C24435 + C153887 * C1329 +
              C24112 * C330 + C24436 + C24436 + C24105 * C354 + C24110 * C329 +
              C24437 + C24437 + C24104 * C353) *
                 C153922) *
                C153626 * C153838) *
               C153563) *
              C323 +
          ((((C24796 + C24795 + C24794) * C153922 +
             (C24793 + C24792 + C24791) * C153903 +
             (C25276 + C25277 + C25278) * C153874) *
                C153626 * C153591 -
            (C24198 * C153874 + (C24188 + C24187 + C24186) * C153903 +
             (C24185 + C24184 + C24183) * C153922) *
                C153626 * C153838) *
               C153837 +
           (((C24494 + C24493 + C24492) * C153922 +
             (C24491 + C24490 + C24489) * C153903 +
             (C25038 + C25039 + C25040) * C153874) *
                C153626 * C153838 -
            ((C24114 * C4306 + C25590 + C25590 + C153887 * C4314 +
              C24112 * C1889 + C25591 + C25591 + C24105 * C1899 +
              C24110 * C1060 + C25592 + C25592 + C24104 * C1072) *
                 C153874 +
             (C25610 + C25609 + C25608) * C153903 +
             (C25607 + C25606 + C25605) * C153922) *
                C153626 * C153591) *
               C153563) *
              C153498)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C28350 * C136 + C28361 + C28361 + C28344 * C152 + C28352 * C329 +
             C28362 + C28362 + C28345 * C353 + C28354 * C330 + C28363 + C28363 +
             C28346 * C354 + C28356 * C1319 + C28364 + C28364 + C28347 * C1329 +
             C28358 * C3127 + C28365 + C28365 + C28348 * C3135) *
                C153454 * C153626 * C153838 -
            (C28358 * C5703 + C28657 + C28657 + C28348 * C5709 +
             C28356 * C4303 + C28658 + C28658 + C28347 * C4311 +
             C28354 * C1892 + C28659 + C28659 + C28346 * C1902 +
             C28352 * C1057 + C28660 + C28660 + C28345 * C1069 + C28350 * C542 +
             C28661 + C28661 + C28344 * C566) *
                C153454 * C153626 * C153591) *
               C153837 +
           ((C28350 * C1057 + C29099 + C29099 + C28344 * C1069 +
             C28352 * C1892 + C29100 + C29100 + C28345 * C1902 +
             C28354 * C4303 + C29101 + C29101 + C28346 * C4311 +
             C28356 * C5703 + C29102 + C29102 + C28347 * C5709 +
             C28358 * C29092 + C29103 + C29103 + C28348 * C29096) *
                C153454 * C153626 * C153591 -
            (C28358 * C4723 + C28509 + C28509 + C28348 * C4729 +
             C28356 * C3127 + C28510 + C28510 + C28347 * C3135 +
             C28354 * C1319 + C28511 + C28511 + C28346 * C1329 + C28352 * C330 +
             C28512 + C28512 + C28345 * C354 + C28350 * C329 + C28513 + C28513 +
             C28344 * C353) *
                C153454 * C153626 * C153838) *
               C153563) *
              C323 +
          (((C28350 * C541 + C28667 + C28667 + C28344 * C565 + C28352 * C1058 +
             C28668 + C28668 + C28345 * C1070 + C28354 * C1891 + C28669 +
             C28669 + C28346 * C1901 + C28356 * C4304 + C28670 + C28670 +
             C28347 * C4312 + C28358 * C5702 + C28671 + C28671 +
             C28348 * C5708) *
                C153454 * C153626 * C153591 -
            (C28358 * C3128 + C28366 + C28366 + C28348 * C3136 +
             C28356 * C1318 + C28367 + C28367 + C28347 * C1328 + C28354 * C331 +
             C28368 + C28368 + C28346 * C355 + C28352 * C328 + C28369 + C28369 +
             C28345 * C352 + C28350 * C137 + C28370 + C28370 + C28344 * C153) *
                C153454 * C153626 * C153838) *
               C153837 +
           ((C28350 * C328 + C28519 + C28519 + C28344 * C352 + C28352 * C331 +
             C28520 + C28520 + C28345 * C355 + C28354 * C1318 + C28521 +
             C28521 + C28346 * C1328 + C28356 * C3128 + C28522 + C28522 +
             C28347 * C3136 + C28358 * C4722 + C28523 + C28523 +
             C28348 * C4728) *
                C153454 * C153626 * C153838 -
            (C28358 * C29093 + C29104 + C29104 + C28348 * C29097 +
             C28356 * C5702 + C29105 + C29105 + C28347 * C5708 +
             C28354 * C4304 + C29106 + C29106 + C28346 * C4312 +
             C28352 * C1891 + C29107 + C29107 + C28345 * C1901 +
             C28350 * C1058 + C29108 + C29108 + C28344 * C1070) *
                C153454 * C153626 * C153591) *
               C153563) *
              C153498)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C153608 * C152) * C153922 +
              C193 * C153903 + C194 * C153874) *
                 C47609 +
             (C48049 + C48050 + C48051) * C47610 + C48069 * C153890) *
                C153838 -
            ((C48055 + C48056 + C48057) * C153890 +
             (C48054 + C48053 + C48052) * C47610 +
             (C48051 + C48050 + C48049) * C47609) *
                C153591) *
               C153837 +
           (((C48803 + C48804 + C48805) * C47609 +
             (C48806 + C48807 + C48808) * C47610 +
             (C9136 * C153922 + C8524 * C153903 + C8525 * C153874) * C153890) *
                C153591 -
            ((C48808 + C48807 + C48806) * C153890 +
             (C48805 + C48804 + C48803) * C47610 +
             (C408 * C153874 + C409 * C153903 +
              (C134 * C329 + C374 + C374 + C153608 * C353) * C153922) *
                 C47609) *
                C153838) *
               C153563) *
              C323 +
          ((((C48058 + C48059 + C48060) * C47609 +
             (C48061 + C48062 + C48063) * C47610 +
             (C48064 + C48065 + C48066) * C153890) *
                C153591 -
            (C48070 * C153890 + (C48060 + C48059 + C48058) * C47610 +
             (C195 * C153874 + C194 * C153903 + C193 * C153922) * C47609) *
                C153838) *
               C153837 +
           (((C409 * C153922 + C408 * C153903 + C407 * C153874) * C47609 +
             (C48809 + C48810 + C48811) * C47610 +
             (C48812 + C48813 + C48814) * C153890) *
                C153838 -
            (((C134 * C8488 + C8513 + C8513 + C153608 * C8490) * C153874 +
              C8525 * C153903 + C8524 * C153922) *
                 C153890 +
             (C48814 + C48813 + C48812) * C47610 +
             (C48811 + C48810 + C48809) * C47609) *
                C153591) *
               C153563) *
              C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
              C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
              C153887 * C354) *
                 C153454 * C47609 +
             (C52092 + C52093 + C52094) * C153454 * C47610 + C52106 * C153890) *
                C153838 -
            ((C52098 + C52099 + C52100) * C153454 * C153890 +
             (C52097 + C52096 + C52095) * C153454 * C47610 +
             (C52094 + C52093 + C52092) * C153454 * C47609) *
                C153591) *
               C153837 +
           (((C52875 + C52876 + C52877) * C153454 * C47609 +
             (C52878 + C52879 + C52880) * C153454 * C47610 +
             (C2821 * C6306 + C52845 + C52845 + C153925 * C6318 +
              C2823 * C6305 + C52846 + C52846 + C153913 * C6317 +
              C2825 * C30191 + C52847 + C52847 + C153887 * C30195) *
                 C153454 * C153890) *
                C153591 -
            ((C52880 + C52879 + C52878) * C153454 * C153890 +
             (C52877 + C52876 + C52875) * C153454 * C47610 +
             (C2825 * C1319 + C3158 + C3158 + C153887 * C1329 + C2823 * C330 +
              C3159 + C3159 + C153913 * C354 + C2821 * C329 + C3160 + C3160 +
              C153925 * C353) *
                 C153454 * C47609) *
                C153838) *
               C153563) *
              C323 +
          ((((C3531 + C3530 + C3529) * C153454 * C47609 +
             (C3532 + C3533 + C3534) * C153454 * C47610 +
             (C52101 + C52102 + C52103) * C153454 * C153890) *
                C153591 -
            (C52091 * C153890 + (C3529 + C3530 + C3531) * C153454 * C47610 +
             (C2896 + C2895 + C2894) * C153454 * C47609) *
                C153838) *
               C153837 +
           (((C3217 + C3216 + C3215) * C153454 * C47609 +
             (C4352 + C4353 + C4354) * C153454 * C47610 +
             (C52881 + C52882 + C52883) * C153454 * C153890) *
                C153838 -
            ((C2825 * C31999 + C52854 + C52854 + C153887 * C32001 +
              C2823 * C6303 + C52855 + C52855 + C153913 * C6315 +
              C2821 * C6304 + C52856 + C52856 + C153925 * C6316) *
                 C153454 * C153890 +
             (C52883 + C52882 + C52881) * C153454 * C47610 +
             (C4354 + C4353 + C4352) * C153454 * C47609) *
                C153591) *
               C153563) *
              C153498)) /
            (p * q * std::sqrt(p + q));
    d2ee[212] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             (((C134 * C136 + C161 + C161 + C153608 * C152) * C122 +
               C193 * C123 + C194 * C124 + C195 * C125 + C196 * C126) *
                  C153626 * C153527 * C153511 * C130 -
              (C197 * C126 + C196 * C125 + C195 * C124 + C194 * C123 +
               C193 * C122) *
                  C153626 * C153527 * C153511 * C131 +
              (C194 * C122 + C195 * C123 + C196 * C124 + C197 * C125 +
               C198 * C126) *
                  C153626 * C153527 * C153511 * C132 -
              ((C134 * C143 + C180 + C180 + C153608 * C159) * C126 +
               C198 * C125 + C197 * C124 + C196 * C123 + C195 * C122) *
                  C153626 * C153527 * C153511 * C133) +
         std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C136 + C161 + C161 + C153608 * C152) * C122 +
                C193 * C123 + C194 * C124 + C195 * C125 + C196 * C126) *
                   C153626 * C153527 * C320 -
               (C406 * C126 + C407 * C125 + C408 * C124 + C409 * C123 +
                (C134 * C329 + C374 + C374 + C153608 * C353) * C122) *
                   C153626 * C153527 * C321 +
               ((C134 * C330 + C375 + C375 + C153608 * C354) * C122 +
                C410 * C123 + C411 * C124 + C412 * C125 + C413 * C126) *
                   C153626 * C153527 * C322) *
                  C323 +
              ((C409 * C122 + C408 * C123 + C407 * C124 + C406 * C125 +
                (C134 * C335 + C388 + C388 + C153608 * C359) * C126) *
                   C153626 * C153527 * C321 -
               (C197 * C126 + C196 * C125 + C195 * C124 + C194 * C123 +
                C193 * C122) *
                   C153626 * C153527 * C320 -
               ((C134 * C336 + C389 + C389 + C153608 * C360) * C126 +
                C413 * C125 + C412 * C124 + C411 * C123 + C410 * C122) *
                   C153626 * C153527 * C322) *
                  C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153608 * C152) * C122 + C193 * C123 +
            C194 * C124 + C195 * C125 + C196 * C126) *
               C153626 * C535 -
           (C619 * C126 + C620 * C125 + C621 * C124 + C622 * C123 +
            (C134 * C542 + C587 + C587 + C153608 * C566) * C122) *
               C153626 * C536 +
           ((C134 * C543 + C588 + C588 + C153608 * C567) * C122 + C623 * C123 +
            C624 * C124 + C625 * C125 + C626 * C126) *
               C153626 * C537) *
              C153511 * C323 +
          ((C622 * C122 + C621 * C123 + C620 * C124 + C619 * C125 +
            (C134 * C548 + C601 + C601 + C153608 * C572) * C126) *
               C153626 * C536 -
           (C197 * C126 + C196 * C125 + C195 * C124 + C194 * C123 +
            C193 * C122) *
               C153626 * C535 -
           ((C134 * C549 + C602 + C602 + C153608 * C573) * C126 + C626 * C125 +
            C625 * C124 + C624 * C123 + C623 * C122) *
               C153626 * C537) *
              C153511 * C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
            C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
            C153887 * C354) *
               C2818 +
           (C2894 + C2895 + C2896) * C2819 + C2908 * C153874) *
              C153626 * C153527 * C153511 * C130 -
          (C2909 * C153874 + (C2899 + C2898 + C2897) * C2819 +
           (C2896 + C2895 + C2894) * C2818) *
              C153626 * C153527 * C153511 * C131 +
          (C2908 * C2818 + (C2902 + C2901 + C2900) * C2819 +
           (C2903 + C2904 + C2905) * C153874) *
              C153626 * C153527 * C153511 * C132 -
          ((C2825 * C336 + C2867 + C2867 + C153887 * C360 + C2823 * C335 +
            C2868 + C2868 + C153913 * C359 + C2821 * C141 + C2869 + C2869 +
            C153925 * C157) *
               C153874 +
           (C2905 + C2904 + C2903) * C2819 + C2909 * C2818) *
              C153626 * C153527 * C153511 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
             C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
             C153887 * C354) *
                C2818 +
            (C2894 + C2895 + C2896) * C2819 + C2908 * C153874) *
               C153626 * C153527 * C320 -
           ((C3212 + C3213 + C3214) * C153874 +
            (C3215 + C3216 + C3217) * C2819 +
            (C2825 * C1319 + C3158 + C3158 + C153887 * C1329 + C2823 * C330 +
             C3159 + C3159 + C153913 * C354 + C2821 * C329 + C3160 + C3160 +
             C153925 * C353) *
                C2818) *
               C153626 * C153527 * C321 +
           ((C2821 * C330 + C3161 + C3161 + C153925 * C354 + C2823 * C1319 +
             C3162 + C3162 + C153913 * C1329 + C2825 * C3127 + C3163 + C3163 +
             C153887 * C3135) *
                C2818 +
            (C3218 + C3219 + C3220) * C2819 +
            (C3221 + C3222 + C3223) * C153874) *
               C153626 * C153527 * C322) *
              C323 +
          (((C3217 + C3216 + C3215) * C2818 + (C3214 + C3213 + C3212) * C2819 +
            (C2821 * C326 + C3182 + C3182 + C153925 * C350 + C2823 * C333 +
             C3183 + C3183 + C153913 * C357 + C2825 * C1316 + C3184 + C3184 +
             C153887 * C1326) *
                C153874) *
               C153626 * C153527 * C321 -
           (C2909 * C153874 + (C2899 + C2898 + C2897) * C2819 +
            (C2896 + C2895 + C2894) * C2818) *
               C153626 * C153527 * C320 -
           ((C2825 * C3130 + C3185 + C3185 + C153887 * C3138 + C2823 * C1316 +
             C3186 + C3186 + C153913 * C1326 + C2821 * C333 + C3187 + C3187 +
             C153925 * C357) *
                C153874 +
            (C3223 + C3222 + C3221) * C2819 + (C3220 + C3219 + C3218) * C2818) *
               C153626 * C153527 * C322) *
              C153498)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
             C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
             C153887 * C354) *
                C2818 +
            (C2894 + C2895 + C2896) * C2819 + C2908 * C153874) *
               C153626 * C535 -
           ((C3526 + C3527 + C3528) * C153874 +
            (C3529 + C3530 + C3531) * C2819 +
            (C2825 * C1892 + C3472 + C3472 + C153887 * C1902 + C2823 * C1057 +
             C3473 + C3473 + C153913 * C1069 + C2821 * C542 + C3474 + C3474 +
             C153925 * C566) *
                C2818) *
               C153626 * C536 +
           ((C2821 * C543 + C3475 + C3475 + C153925 * C567 + C2823 * C1461 +
             C3476 + C3476 + C153913 * C1471 + C2825 * C3441 + C3477 + C3477 +
             C153887 * C3449) *
                C2818 +
            (C3532 + C3533 + C3534) * C2819 +
            (C3535 + C3536 + C3537) * C153874) *
               C153626 * C537) *
              C153511 * C323 +
          (((C3531 + C3530 + C3529) * C2818 + (C3528 + C3527 + C3526) * C2819 +
            (C2821 * C539 + C3496 + C3496 + C153925 * C563 + C2823 * C1060 +
             C3497 + C3497 + C153913 * C1072 + C2825 * C1889 + C3498 + C3498 +
             C153887 * C1899) *
                C153874) *
               C153626 * C536 -
           (C2909 * C153874 + (C2899 + C2898 + C2897) * C2819 +
            (C2896 + C2895 + C2894) * C2818) *
               C153626 * C535 -
           ((C2825 * C3444 + C3499 + C3499 + C153887 * C3452 + C2823 * C1458 +
             C3500 + C3500 + C153913 * C1468 + C2821 * C546 + C3501 + C3501 +
             C153925 * C570) *
                C153874 +
            (C3537 + C3536 + C3535) * C2819 + (C3534 + C3533 + C3532) * C2818) *
               C153626 * C537) *
              C153511 * C153498)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
            C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 + C24119 +
            C153887 * C354) *
               C153922 +
           (C24183 + C24184 + C24185) * C153903 + C24197 * C153874) *
              C153626 * C153527 * C153511 * C130 -
          (C24198 * C153874 + (C24188 + C24187 + C24186) * C153903 +
           (C24185 + C24184 + C24183) * C153922) *
              C153626 * C153527 * C153511 * C131 +
          (C24197 * C153922 + (C24191 + C24190 + C24189) * C153903 +
           (C24192 + C24193 + C24194) * C153874) *
              C153626 * C153527 * C153511 * C132 -
          ((C24114 * C336 + C24156 + C24156 + C153887 * C360 + C24112 * C335 +
            C24157 + C24157 + C24105 * C359 + C24110 * C141 + C24158 + C24158 +
            C24104 * C157) *
               C153874 +
           (C24194 + C24193 + C24192) * C153903 + C24198 * C153922) *
              C153626 * C153527 * C153511 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
             C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 + C24119 +
             C153887 * C354) *
                C153922 +
            (C24183 + C24184 + C24185) * C153903 + C24197 * C153874) *
               C153626 * C153527 * C320 -
           ((C24489 + C24490 + C24491) * C153874 +
            (C24492 + C24493 + C24494) * C153903 +
            (C24114 * C1319 + C24435 + C24435 + C153887 * C1329 +
             C24112 * C330 + C24436 + C24436 + C24105 * C354 + C24110 * C329 +
             C24437 + C24437 + C24104 * C353) *
                C153922) *
               C153626 * C153527 * C321 +
           ((C24110 * C330 + C24438 + C24438 + C24104 * C354 + C24112 * C1319 +
             C24439 + C24439 + C24105 * C1329 + C24114 * C3127 + C24440 +
             C24440 + C153887 * C3135) *
                C153922 +
            (C24495 + C24496 + C24497) * C153903 +
            (C24498 + C24499 + C24500) * C153874) *
               C153626 * C153527 * C322) *
              C323 +
          (((C24494 + C24493 + C24492) * C153922 +
            (C24491 + C24490 + C24489) * C153903 +
            (C24110 * C326 + C24459 + C24459 + C24104 * C350 + C24112 * C333 +
             C24460 + C24460 + C24105 * C357 + C24114 * C1316 + C24461 +
             C24461 + C153887 * C1326) *
                C153874) *
               C153626 * C153527 * C321 -
           (C24198 * C153874 + (C24188 + C24187 + C24186) * C153903 +
            (C24185 + C24184 + C24183) * C153922) *
               C153626 * C153527 * C320 -
           ((C24114 * C3130 + C24462 + C24462 + C153887 * C3138 +
             C24112 * C1316 + C24463 + C24463 + C24105 * C1326 + C24110 * C333 +
             C24464 + C24464 + C24104 * C357) *
                C153874 +
            (C24500 + C24499 + C24498) * C153903 +
            (C24497 + C24496 + C24495) * C153922) *
               C153626 * C153527 * C322) *
              C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
             C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 + C24119 +
             C153887 * C354) *
                C153922 +
            (C24183 + C24184 + C24185) * C153903 + C24197 * C153874) *
               C153626 * C535 -
           ((C24791 + C24792 + C24793) * C153874 +
            (C24794 + C24795 + C24796) * C153903 +
            (C24114 * C1892 + C24737 + C24737 + C153887 * C1902 +
             C24112 * C1057 + C24738 + C24738 + C24105 * C1069 + C24110 * C542 +
             C24739 + C24739 + C24104 * C566) *
                C153922) *
               C153626 * C536 +
           ((C24110 * C543 + C24740 + C24740 + C24104 * C567 + C24112 * C1461 +
             C24741 + C24741 + C24105 * C1471 + C24114 * C3441 + C24742 +
             C24742 + C153887 * C3449) *
                C153922 +
            (C24797 + C24798 + C24799) * C153903 +
            (C24800 + C24801 + C24802) * C153874) *
               C153626 * C537) *
              C153511 * C323 +
          (((C24796 + C24795 + C24794) * C153922 +
            (C24793 + C24792 + C24791) * C153903 +
            (C24110 * C539 + C24761 + C24761 + C24104 * C563 + C24112 * C1060 +
             C24762 + C24762 + C24105 * C1072 + C24114 * C1889 + C24763 +
             C24763 + C153887 * C1899) *
                C153874) *
               C153626 * C536 -
           (C24198 * C153874 + (C24188 + C24187 + C24186) * C153903 +
            (C24185 + C24184 + C24183) * C153922) *
               C153626 * C535 -
           ((C24114 * C3444 + C24764 + C24764 + C153887 * C3452 +
             C24112 * C1458 + C24765 + C24765 + C24105 * C1468 + C24110 * C546 +
             C24766 + C24766 + C24104 * C570) *
                C153874 +
            (C24802 + C24801 + C24800) * C153903 +
            (C24799 + C24798 + C24797) * C153922) *
               C153626 * C537) *
              C153511 * C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((C28350 * C136 + C28361 + C28361 + C28344 * C152 + C28352 * C329 +
           C28362 + C28362 + C28345 * C353 + C28354 * C330 + C28363 + C28363 +
           C28346 * C354 + C28356 * C1319 + C28364 + C28364 + C28347 * C1329 +
           C28358 * C3127 + C28365 + C28365 + C28348 * C3135) *
              C153454 * C153626 * C153527 * C153511 * C130 -
          (C28358 * C3128 + C28366 + C28366 + C28348 * C3136 + C28356 * C1318 +
           C28367 + C28367 + C28347 * C1328 + C28354 * C331 + C28368 + C28368 +
           C28346 * C355 + C28352 * C328 + C28369 + C28369 + C28345 * C352 +
           C28350 * C137 + C28370 + C28370 + C28344 * C153) *
              C153454 * C153626 * C153527 * C153511 * C131 +
          (C28350 * C138 + C28371 + C28371 + C28344 * C154 + C28352 * C327 +
           C28372 + C28372 + C28345 * C351 + C28354 * C332 + C28373 + C28373 +
           C28346 * C356 + C28356 * C1317 + C28374 + C28374 + C28347 * C1327 +
           C28358 * C3129 + C28375 + C28375 + C28348 * C3137) *
              C153454 * C153626 * C153527 * C153511 * C132 -
          (C28358 * C3130 + C28376 + C28376 + C28348 * C3138 + C28356 * C1316 +
           C28377 + C28377 + C28347 * C1326 + C28354 * C333 + C28378 + C28378 +
           C28346 * C357 + C28352 * C326 + C28379 + C28379 + C28345 * C350 +
           C28350 * C139 + C28380 + C28380 + C28344 * C155) *
              C153454 * C153626 * C153527 * C153511 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C28350 * C136 + C28361 + C28361 + C28344 * C152 + C28352 * C329 +
            C28362 + C28362 + C28345 * C353 + C28354 * C330 + C28363 + C28363 +
            C28346 * C354 + C28356 * C1319 + C28364 + C28364 + C28347 * C1329 +
            C28358 * C3127 + C28365 + C28365 + C28348 * C3135) *
               C153454 * C153626 * C153527 * C320 -
           (C28358 * C4723 + C28509 + C28509 + C28348 * C4729 + C28356 * C3127 +
            C28510 + C28510 + C28347 * C3135 + C28354 * C1319 + C28511 +
            C28511 + C28346 * C1329 + C28352 * C330 + C28512 + C28512 +
            C28345 * C354 + C28350 * C329 + C28513 + C28513 + C28344 * C353) *
               C153454 * C153626 * C153527 * C321 +
           (C28350 * C330 + C28514 + C28514 + C28344 * C354 + C28352 * C1319 +
            C28515 + C28515 + C28345 * C1329 + C28354 * C3127 + C28516 +
            C28516 + C28346 * C3135 + C28356 * C4723 + C28517 + C28517 +
            C28347 * C4729 + C28358 * C28502 + C28518 + C28518 +
            C28348 * C28506) *
               C153454 * C153626 * C153527 * C322) *
              C323 +
          ((C28350 * C328 + C28519 + C28519 + C28344 * C352 + C28352 * C331 +
            C28520 + C28520 + C28345 * C355 + C28354 * C1318 + C28521 + C28521 +
            C28346 * C1328 + C28356 * C3128 + C28522 + C28522 + C28347 * C3136 +
            C28358 * C4722 + C28523 + C28523 + C28348 * C4728) *
               C153454 * C153626 * C153527 * C321 -
           (C28358 * C3128 + C28366 + C28366 + C28348 * C3136 + C28356 * C1318 +
            C28367 + C28367 + C28347 * C1328 + C28354 * C331 + C28368 + C28368 +
            C28346 * C355 + C28352 * C328 + C28369 + C28369 + C28345 * C352 +
            C28350 * C137 + C28370 + C28370 + C28344 * C153) *
               C153454 * C153626 * C153527 * C320 -
           (C28358 * C28503 + C28524 + C28524 + C28348 * C28507 +
            C28356 * C4722 + C28525 + C28525 + C28347 * C4728 + C28354 * C3128 +
            C28526 + C28526 + C28346 * C3136 + C28352 * C1318 + C28527 +
            C28527 + C28345 * C1328 + C28350 * C331 + C28528 + C28528 +
            C28344 * C355) *
               C153454 * C153626 * C153527 * C322) *
              C153498)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C28350 * C136 + C28361 + C28361 + C28344 * C152 + C28352 * C329 +
            C28362 + C28362 + C28345 * C353 + C28354 * C330 + C28363 + C28363 +
            C28346 * C354 + C28356 * C1319 + C28364 + C28364 + C28347 * C1329 +
            C28358 * C3127 + C28365 + C28365 + C28348 * C3135) *
               C153454 * C153626 * C535 -
           (C28358 * C5703 + C28657 + C28657 + C28348 * C5709 + C28356 * C4303 +
            C28658 + C28658 + C28347 * C4311 + C28354 * C1892 + C28659 +
            C28659 + C28346 * C1902 + C28352 * C1057 + C28660 + C28660 +
            C28345 * C1069 + C28350 * C542 + C28661 + C28661 + C28344 * C566) *
               C153454 * C153626 * C536 +
           (C28350 * C543 + C28662 + C28662 + C28344 * C567 + C28352 * C1461 +
            C28663 + C28663 + C28345 * C1471 + C28354 * C3441 + C28664 +
            C28664 + C28346 * C3449 + C28356 * C4959 + C28665 + C28665 +
            C28347 * C4965 + C28358 * C28650 + C28666 + C28666 +
            C28348 * C28654) *
               C153454 * C153626 * C537) *
              C153511 * C323 +
          ((C28350 * C541 + C28667 + C28667 + C28344 * C565 + C28352 * C1058 +
            C28668 + C28668 + C28345 * C1070 + C28354 * C1891 + C28669 +
            C28669 + C28346 * C1901 + C28356 * C4304 + C28670 + C28670 +
            C28347 * C4312 + C28358 * C5702 + C28671 + C28671 +
            C28348 * C5708) *
               C153454 * C153626 * C536 -
           (C28358 * C3128 + C28366 + C28366 + C28348 * C3136 + C28356 * C1318 +
            C28367 + C28367 + C28347 * C1328 + C28354 * C331 + C28368 + C28368 +
            C28346 * C355 + C28352 * C328 + C28369 + C28369 + C28345 * C352 +
            C28350 * C137 + C28370 + C28370 + C28344 * C153) *
               C153454 * C153626 * C535 -
           (C28358 * C28651 + C28672 + C28672 + C28348 * C28655 +
            C28356 * C4958 + C28673 + C28673 + C28347 * C4964 + C28354 * C3442 +
            C28674 + C28674 + C28346 * C3450 + C28352 * C1460 + C28675 +
            C28675 + C28345 * C1470 + C28350 * C544 + C28676 + C28676 +
            C28344 * C568) *
               C153454 * C153626 * C537) *
              C153511 * C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153608 * C152) * C153922 +
            C193 * C153903 + C194 * C153874) *
               C47609 +
           (C7734 * C153922 + C622 * C153903 + C621 * C153874) * C47610 +
           (C7735 * C153922 + C623 * C153903 + C624 * C153874) * C153890) *
              C153527 * C153511 * C130 -
          ((C625 * C153874 + C624 * C153903 + C623 * C153922) * C153890 +
           (C620 * C153874 + C621 * C153903 + C622 * C153922) * C47610 +
           (C195 * C153874 + C194 * C153903 + C193 * C153922) * C47609) *
              C153527 * C153511 * C131 +
          ((C194 * C153922 + C195 * C153903 + C196 * C153874) * C47609 +
           (C621 * C153922 + C620 * C153903 + C619 * C153874) * C47610 +
           (C624 * C153922 + C625 * C153903 + C626 * C153874) * C153890) *
              C153527 * C153511 * C132 -
          (((C134 * C549 + C602 + C602 + C153608 * C573) * C153874 +
            C626 * C153903 + C625 * C153922) *
               C153890 +
           (C895 * C153874 + C619 * C153903 + C620 * C153922) * C47610 +
           (C197 * C153874 + C196 * C153903 + C195 * C153922) * C47609) *
              C153527 * C153511 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C153922 +
             C193 * C153903 + C194 * C153874) *
                C47609 +
            (C7734 * C153922 + C622 * C153903 + C621 * C153874) * C47610 +
            (C7735 * C153922 + C623 * C153903 + C624 * C153874) * C153890) *
               C153527 * C320 -
           ((C7450 * C153874 + C7451 * C153903 + C8523 * C153922) * C153890 +
            (C1099 * C153874 + C1098 * C153903 + C8522 * C153922) * C47610 +
            (C408 * C153874 + C409 * C153903 +
             (C134 * C329 + C374 + C374 + C153608 * C353) * C153922) *
                C47609) *
               C153527 * C321 +
           (((C134 * C330 + C375 + C375 + C153608 * C354) * C153922 +
             C410 * C153903 + C411 * C153874) *
                C47609 +
            (C9879 * C153922 + C7452 * C153903 + C7453 * C153874) * C47610 +
            (C9880 * C153922 + C7454 * C153903 + C7455 * C153874) * C153890) *
               C153527 * C322) *
              C323 +
          (((C409 * C153922 + C408 * C153903 + C407 * C153874) * C47609 +
            (C1098 * C153922 + C1099 * C153903 + C1100 * C153874) * C47610 +
            (C7451 * C153922 + C7450 * C153903 + C7974 * C153874) * C153890) *
               C153527 * C321 -
           ((C625 * C153874 + C624 * C153903 + C623 * C153922) * C153890 +
            (C620 * C153874 + C621 * C153903 + C622 * C153922) * C47610 +
            (C195 * C153874 + C194 * C153903 + C193 * C153922) * C47609) *
               C153527 * C320 -
           (((C134 * C3444 + C7437 + C7437 + C153608 * C3452) * C153874 +
             C7455 * C153903 + C7454 * C153922) *
                C153890 +
            (C15373 * C153874 + C7453 * C153903 + C7452 * C153922) * C47610 +
            (C412 * C153874 + C411 * C153903 + C410 * C153922) * C47609) *
               C153527 * C322) *
              C153498)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C153922 +
             C193 * C153903 + C194 * C153874) *
                C47609 +
            (C48049 + C48050 + C48051) * C47610 + C48069 * C153890) *
               C535 -
           ((C48055 + C48056 + C48057) * C153890 +
            (C48054 + C48053 + C48052) * C47610 +
            (C48051 + C48050 + C48049) * C47609) *
               C536 +
           (C48069 * C47609 + (C48057 + C48056 + C48055) * C47610 +
            (C10485 * C153922 + C7739 * C153903 + C7740 * C153874) * C153890) *
               C537) *
              C153511 * C323 +
          (((C48058 + C48059 + C48060) * C47609 +
            (C48061 + C48062 + C48063) * C47610 +
            (C48064 + C48065 + C48066) * C153890) *
               C536 -
           (C48070 * C153890 + (C48060 + C48059 + C48058) * C47610 +
            (C195 * C153874 + C194 * C153903 + C193 * C153922) * C47609) *
               C535 -
           (((C134 * C7676 + C7715 + C7715 + C153608 * C7684) * C153874 +
             C7740 * C153903 + C7739 * C153922) *
                C153890 +
            (C48066 + C48065 + C48064) * C47610 + C48070 * C47609) *
               C537) *
              C153511 * C153498)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
            C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
            C153887 * C354) *
               C153454 * C47609 +
           (C2821 * C542 + C3474 + C3474 + C153925 * C566 + C2823 * C1057 +
            C3473 + C3473 + C153913 * C1069 + C2825 * C1892 + C3472 + C3472 +
            C153887 * C1902) *
               C153454 * C47610 +
           (C2821 * C543 + C3475 + C3475 + C153925 * C567 + C2823 * C1461 +
            C3476 + C3476 + C153913 * C1471 + C2825 * C3441 + C3477 + C3477 +
            C153887 * C3449) *
               C153454 * C153890) *
              C153527 * C153511 * C130 -
          ((C3534 + C3533 + C3532) * C153454 * C153890 +
           (C3529 + C3530 + C3531) * C153454 * C47610 +
           (C2896 + C2895 + C2894) * C153454 * C47609) *
              C153527 * C153511 * C131 +
          (C2908 * C153454 * C47609 +
           (C3528 + C3527 + C3526) * C153454 * C47610 +
           (C3535 + C3536 + C3537) * C153454 * C153890) *
              C153527 * C153511 * C132 -
          ((C2825 * C3444 + C3499 + C3499 + C153887 * C3452 + C2823 * C1458 +
            C3500 + C3500 + C153913 * C1468 + C2821 * C546 + C3501 + C3501 +
            C153925 * C570) *
               C153454 * C153890 +
           (C4013 + C4012 + C4011) * C153454 * C47610 +
           C2909 * C153454 * C47609) *
              C153527 * C153511 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
             C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
             C153887 * C354) *
                C153454 * C47609 +
            (C2821 * C542 + C3474 + C3474 + C153925 * C566 + C2823 * C1057 +
             C3473 + C3473 + C153913 * C1069 + C2825 * C1892 + C3472 + C3472 +
             C153887 * C1902) *
                C153454 * C47610 +
            (C2821 * C543 + C3475 + C3475 + C153925 * C567 + C2823 * C1461 +
             C3476 + C3476 + C153913 * C1471 + C2825 * C3441 + C3477 + C3477 +
             C153887 * C3449) *
                C153454 * C153890) *
               C153527 * C320 -
           ((C2825 * C4959 + C4973 + C4973 + C153887 * C4965 + C2823 * C3441 +
             C4974 + C4974 + C153913 * C3449 + C2821 * C1461 + C4975 + C4975 +
             C153925 * C1471) *
                C153454 * C153890 +
            (C2825 * C4303 + C4318 + C4318 + C153887 * C4311 + C2823 * C1892 +
             C4317 + C4317 + C153913 * C1902 + C2821 * C1057 + C4316 + C4316 +
             C153925 * C1069) *
                C153454 * C47610 +
            (C2825 * C1319 + C3158 + C3158 + C153887 * C1329 + C2823 * C330 +
             C3159 + C3159 + C153913 * C354 + C2821 * C329 + C3160 + C3160 +
             C153925 * C353) *
                C153454 * C47609) *
               C153527 * C321 +
           ((C2821 * C330 + C3161 + C3161 + C153925 * C354 + C2823 * C1319 +
             C3162 + C3162 + C153913 * C1329 + C2825 * C3127 + C3163 + C3163 +
             C153887 * C3135) *
                C153454 * C47609 +
            (C2821 * C1892 + C5719 + C5719 + C153925 * C1902 + C2823 * C4303 +
             C5718 + C5718 + C153913 * C4311 + C2825 * C5703 + C5717 + C5717 +
             C153887 * C5709) *
                C153454 * C47610 +
            (C2821 * C3441 + C51811 + C51811 + C153925 * C3449 + C2823 * C4959 +
             C51812 + C51812 + C153913 * C4965 + C2825 * C28650 + C51813 +
             C51813 + C153887 * C28654) *
                C153454 * C153890) *
               C153527 * C322) *
              C323 +
          (((C3217 + C3216 + C3215) * C153454 * C47609 +
            (C4352 + C4353 + C4354) * C153454 * C47610 +
            (C2821 * C1460 + C4972 + C4972 + C153925 * C1470 + C2823 * C3442 +
             C4971 + C4971 + C153913 * C3450 + C2825 * C4958 + C4970 + C4970 +
             C153887 * C4964) *
                C153454 * C153890) *
               C153527 * C321 -
           ((C3534 + C3533 + C3532) * C153454 * C153890 +
            (C3529 + C3530 + C3531) * C153454 * C47610 +
            (C2896 + C2895 + C2894) * C153454 * C47609) *
               C153527 * C320 -
           ((C2825 * C28651 + C51814 + C51814 + C153887 * C28655 +
             C2823 * C4958 + C51815 + C51815 + C153913 * C4964 + C2821 * C3442 +
             C51816 + C51816 + C153925 * C3450) *
                C153454 * C153890 +
            (C2825 * C5702 + C5714 + C5714 + C153887 * C5708 + C2823 * C4304 +
             C5715 + C5715 + C153913 * C4312 + C2821 * C1891 + C5716 + C5716 +
             C153925 * C1901) *
                C153454 * C47610 +
            (C3220 + C3219 + C3218) * C153454 * C47609) *
               C153527 * C322) *
              C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
             C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
             C153887 * C354) *
                C153454 * C47609 +
            (C52092 + C52093 + C52094) * C153454 * C47610 + C52106 * C153890) *
               C535 -
           ((C52098 + C52099 + C52100) * C153454 * C153890 +
            (C52097 + C52096 + C52095) * C153454 * C47610 +
            (C52094 + C52093 + C52092) * C153454 * C47609) *
               C536 +
           (C52106 * C47609 + (C52100 + C52099 + C52098) * C153454 * C47610 +
            (C2821 * C7673 + C52053 + C52053 + C153925 * C7681 + C2823 * C9117 +
             C52054 + C52054 + C153913 * C9123 + C2825 * C31195 + C52055 +
             C52055 + C153887 * C31199) *
                C153454 * C153890) *
               C537) *
              C153511 * C323 +
          (((C3531 + C3530 + C3529) * C153454 * C47609 +
            (C3532 + C3533 + C3534) * C153454 * C47610 +
            (C52101 + C52102 + C52103) * C153454 * C153890) *
               C536 -
           (C52091 * C153890 + (C3529 + C3530 + C3531) * C153454 * C47610 +
            (C2896 + C2895 + C2894) * C153454 * C47609) *
               C535 -
           ((C2825 * C31196 + C52063 + C52063 + C153887 * C31200 +
             C2823 * C9116 + C52064 + C52064 + C153913 * C9122 + C2821 * C7674 +
             C52065 + C52065 + C153925 * C7682) *
                C153454 * C153890 +
            (C52103 + C52102 + C52101) * C153454 * C47610 + C52091 * C47609) *
               C537) *
              C153511 * C153498)) /
            (p * q * std::sqrt(p + q));
    d2ee[213] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
             C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
             C153887 * C354) *
                C2818 +
            (C2894 + C2895 + C2896) * C2819 + C2908 * C153874) *
               C153626 * C153838 -
           (C4004 * C153874 + (C3529 + C3530 + C3531) * C2819 +
            (C2825 * C1892 + C3472 + C3472 + C153887 * C1902 + C2823 * C1057 +
             C3473 + C3473 + C153913 * C1069 + C2821 * C542 + C3474 + C3474 +
             C153925 * C566) *
                C2818) *
               C153626 * C153591) *
              C153511 * C153906 +
          (((C3531 + C3530 + C3529) * C2818 + (C3528 + C3527 + C3526) * C2819 +
            (C4011 + C4012 + C4013) * C153874) *
               C153626 * C153591 -
           (C2909 * C153874 + (C2899 + C2898 + C2897) * C2819 +
            (C2896 + C2895 + C2894) * C2818) *
               C153626 * C153838) *
              C153511 * C153907 +
          ((C2908 * C2818 + (C2902 + C2901 + C2900) * C2819 +
            (C2903 + C2904 + C2905) * C153874) *
               C153626 * C153838 -
           ((C2825 * C1888 + C4001 + C4001 + C153887 * C1898 + C2823 * C1061 +
             C4002 + C4002 + C153913 * C1073 + C2821 * C538 + C4003 + C4003 +
             C153925 * C562) *
                C153874 +
            (C4013 + C4012 + C4011) * C2819 + C4004 * C2818) *
               C153626 * C153591) *
              C153511 * C752)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153608 * C152) * C122 + C193 * C123 +
            C194 * C124 + C195 * C125 + C196 * C126) *
               C153626 * C153838 -
           (C619 * C126 + C620 * C125 + C621 * C124 + C622 * C123 +
            (C134 * C542 + C587 + C587 + C153608 * C566) * C122) *
               C153626 * C153591) *
              C153511 * C153906 +
          ((C622 * C122 + C621 * C123 + C620 * C124 + C619 * C125 +
            C895 * C126) *
               C153626 * C153591 -
           (C197 * C126 + C196 * C125 + C195 * C124 + C194 * C123 +
            C193 * C122) *
               C153626 * C153838) *
              C153511 * C153907 +
          ((C194 * C122 + C195 * C123 + C196 * C124 + C197 * C125 +
            C198 * C126) *
               C153626 * C153838 -
           ((C134 * C886 + C892 + C892 + C153608 * C888) * C126 + C895 * C125 +
            C619 * C124 + C620 * C123 + C621 * C122) *
               C153626 * C153591) *
              C153511 * C752)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
             C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 + C24119 +
             C153887 * C354) *
                C153922 +
            (C24183 + C24184 + C24185) * C153903 + C24197 * C153874) *
               C153626 * C153838 -
           (C25269 * C153874 + (C24794 + C24795 + C24796) * C153903 +
            (C24114 * C1892 + C24737 + C24737 + C153887 * C1902 +
             C24112 * C1057 + C24738 + C24738 + C24105 * C1069 + C24110 * C542 +
             C24739 + C24739 + C24104 * C566) *
                C153922) *
               C153626 * C153591) *
              C153511 * C153906 +
          (((C24796 + C24795 + C24794) * C153922 +
            (C24793 + C24792 + C24791) * C153903 +
            (C25276 + C25277 + C25278) * C153874) *
               C153626 * C153591 -
           (C24198 * C153874 + (C24188 + C24187 + C24186) * C153903 +
            (C24185 + C24184 + C24183) * C153922) *
               C153626 * C153838) *
              C153511 * C153907 +
          ((C24197 * C153922 + (C24191 + C24190 + C24189) * C153903 +
            (C24192 + C24193 + C24194) * C153874) *
               C153626 * C153838 -
           ((C24114 * C1888 + C25266 + C25266 + C153887 * C1898 +
             C24112 * C1061 + C25267 + C25267 + C24105 * C1073 + C24110 * C538 +
             C25268 + C25268 + C24104 * C562) *
                C153874 +
            (C25278 + C25277 + C25276) * C153903 + C25269 * C153922) *
               C153626 * C153591) *
              C153511 * C752)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C28350 * C136 + C28361 + C28361 + C28344 * C152 + C28352 * C329 +
            C28362 + C28362 + C28345 * C353 + C28354 * C330 + C28363 + C28363 +
            C28346 * C354 + C28356 * C1319 + C28364 + C28364 + C28347 * C1329 +
            C28358 * C3127 + C28365 + C28365 + C28348 * C3135) *
               C153454 * C153626 * C153838 -
           (C28358 * C5703 + C28657 + C28657 + C28348 * C5709 + C28356 * C4303 +
            C28658 + C28658 + C28347 * C4311 + C28354 * C1892 + C28659 +
            C28659 + C28346 * C1902 + C28352 * C1057 + C28660 + C28660 +
            C28345 * C1069 + C28350 * C542 + C28661 + C28661 + C28344 * C566) *
               C153454 * C153626 * C153591) *
              C153511 * C153906 +
          ((C28350 * C541 + C28667 + C28667 + C28344 * C565 + C28352 * C1058 +
            C28668 + C28668 + C28345 * C1070 + C28354 * C1891 + C28669 +
            C28669 + C28346 * C1901 + C28356 * C4304 + C28670 + C28670 +
            C28347 * C4312 + C28358 * C5702 + C28671 + C28671 +
            C28348 * C5708) *
               C153454 * C153626 * C153591 -
           (C28358 * C3128 + C28366 + C28366 + C28348 * C3136 + C28356 * C1318 +
            C28367 + C28367 + C28347 * C1328 + C28354 * C331 + C28368 + C28368 +
            C28346 * C355 + C28352 * C328 + C28369 + C28369 + C28345 * C352 +
            C28350 * C137 + C28370 + C28370 + C28344 * C153) *
               C153454 * C153626 * C153838) *
              C153511 * C153907 +
          ((C28350 * C138 + C28371 + C28371 + C28344 * C154 + C28352 * C327 +
            C28372 + C28372 + C28345 * C351 + C28354 * C332 + C28373 + C28373 +
            C28346 * C356 + C28356 * C1317 + C28374 + C28374 + C28347 * C1327 +
            C28358 * C3129 + C28375 + C28375 + C28348 * C3137) *
               C153454 * C153626 * C153838 -
           (C28358 * C5701 + C28926 + C28926 + C28348 * C5707 + C28356 * C4305 +
            C28927 + C28927 + C28347 * C4313 + C28354 * C1890 + C28928 +
            C28928 + C28346 * C1900 + C28352 * C1059 + C28929 + C28929 +
            C28345 * C1071 + C28350 * C540 + C28930 + C28930 + C28344 * C564) *
               C153454 * C153626 * C153591) *
              C153511 * C752)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C153922 +
             C193 * C153903 + C194 * C153874) *
                C47609 +
            (C48049 + C48050 + C48051) * C47610 + C48069 * C153890) *
               C153838 -
           ((C48055 + C48056 + C48057) * C153890 +
            (C48054 + C48053 + C48052) * C47610 +
            (C48051 + C48050 + C48049) * C47609) *
               C153591) *
              C153511 * C153906 +
          (((C48058 + C48059 + C48060) * C47609 +
            (C48061 + C48062 + C48063) * C47610 +
            (C48064 + C48065 + C48066) * C153890) *
               C153591 -
           (C48070 * C153890 + (C48060 + C48059 + C48058) * C47610 +
            (C195 * C153874 + C194 * C153903 + C193 * C153922) * C47609) *
               C153838) *
              C153511 * C153907 +
          (((C194 * C153922 + C195 * C153903 + C196 * C153874) * C47609 +
            (C48507 + C48508 + C48509) * C47610 +
            (C48510 + C48511 + C48512) * C153890) *
               C153838 -
           (((C134 * C2240 + C2256 + C2256 + C153608 * C2250) * C153874 +
             C7741 * C153903 + C7736 * C153922) *
                C153890 +
            (C48512 + C48511 + C48510) * C47610 +
            (C48509 + C48508 + C48507) * C47609) *
               C153591) *
              C153511 * C752)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
             C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
             C153887 * C354) *
                C153454 * C47609 +
            (C52092 + C52093 + C52094) * C153454 * C47610 + C52106 * C153890) *
               C153838 -
           ((C52098 + C52099 + C52100) * C153454 * C153890 +
            (C52097 + C52096 + C52095) * C153454 * C47610 +
            (C52094 + C52093 + C52092) * C153454 * C47609) *
               C153591) *
              C153511 * C153906 +
          (((C3531 + C3530 + C3529) * C153454 * C47609 +
            (C3532 + C3533 + C3534) * C153454 * C47610 +
            (C52101 + C52102 + C52103) * C153454 * C153890) *
               C153591 -
           (C52091 * C153890 + (C3529 + C3530 + C3531) * C153454 * C47610 +
            (C2896 + C2895 + C2894) * C153454 * C47609) *
               C153838) *
              C153511 * C153907 +
          ((C2908 * C153454 * C47609 +
            (C3528 + C3527 + C3526) * C153454 * C47610 +
            (C3535 + C3536 + C3537) * C153454 * C153890) *
               C153838 -
           ((C2825 * C6301 + C6320 + C6320 + C153887 * C6313 + C2823 * C6302 +
             C6321 + C6321 + C153913 * C6314 + C2821 * C2242 + C6322 + C6322 +
             C153925 * C2252) *
                C153454 * C153890 +
            (C3537 + C3536 + C3535) * C153454 * C47610 +
            C4004 * C153454 * C47609) *
               C153591) *
              C153511 * C752)) /
            (p * q * std::sqrt(p + q));
    d2ee[214] +=
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153608 * C152) * C122 + C193 * C123 +
            C194 * C124 + C195 * C125 + C196 * C126) *
               C153626 * C153527 * C320 -
           (C406 * C126 + C407 * C125 + C408 * C124 + C409 * C123 +
            (C134 * C329 + C374 + C374 + C153608 * C353) * C122) *
               C153626 * C153527 * C321 +
           ((C134 * C330 + C375 + C375 + C153608 * C354) * C122 + C410 * C123 +
            C411 * C124 + C412 * C125 + C413 * C126) *
               C153626 * C153527 * C322) *
              C323 +
          ((C409 * C122 + C408 * C123 + C407 * C124 + C406 * C125 +
            (C134 * C335 + C388 + C388 + C153608 * C359) * C126) *
               C153626 * C153527 * C321 -
           (C197 * C126 + C196 * C125 + C195 * C124 + C194 * C123 +
            C193 * C122) *
               C153626 * C153527 * C320 -
           ((C134 * C336 + C389 + C389 + C153608 * C360) * C126 + C413 * C125 +
            C412 * C124 + C411 * C123 + C410 * C122) *
               C153626 * C153527 * C322) *
              C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C136 + C161 + C161 + C153608 * C152) * C122 + C193 * C123 +
           C194 * C124 + C195 * C125 + C196 * C126) *
              C153626 * C153527 * C153511 * C130 -
          (C197 * C126 + C196 * C125 + C195 * C124 + C194 * C123 +
           C193 * C122) *
              C153626 * C153527 * C153511 * C131 +
          (C194 * C122 + C195 * C123 + C196 * C124 + C197 * C125 +
           C198 * C126) *
              C153626 * C153527 * C153511 * C132 -
          ((C134 * C143 + C180 + C180 + C153608 * C159) * C126 + C198 * C125 +
           C197 * C124 + C196 * C123 + C195 * C122) *
              C153626 * C153527 * C153511 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
            C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
            C153887 * C354) *
               C2818 +
           (C2894 + C2895 + C2896) * C2819 + C2908 * C153874) *
              C153626 * C153527 * C153511 * C130 -
          (C2909 * C153874 + (C2899 + C2898 + C2897) * C2819 +
           (C2896 + C2895 + C2894) * C2818) *
              C153626 * C153527 * C153511 * C131 +
          (C2908 * C2818 + (C2902 + C2901 + C2900) * C2819 +
           (C2903 + C2904 + C2905) * C153874) *
              C153626 * C153527 * C153511 * C132 -
          ((C2825 * C336 + C2867 + C2867 + C153887 * C360 + C2823 * C335 +
            C2868 + C2868 + C153913 * C359 + C2821 * C141 + C2869 + C2869 +
            C153925 * C157) *
               C153874 +
           (C2905 + C2904 + C2903) * C2819 + C2909 * C2818) *
              C153626 * C153527 * C153511 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
             C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
             C153887 * C354) *
                C2818 +
            (C2894 + C2895 + C2896) * C2819 + C2908 * C153874) *
               C153626 * C153527 * C320 -
           ((C3212 + C3213 + C3214) * C153874 +
            (C3215 + C3216 + C3217) * C2819 +
            (C2825 * C1319 + C3158 + C3158 + C153887 * C1329 + C2823 * C330 +
             C3159 + C3159 + C153913 * C354 + C2821 * C329 + C3160 + C3160 +
             C153925 * C353) *
                C2818) *
               C153626 * C153527 * C321 +
           ((C2821 * C330 + C3161 + C3161 + C153925 * C354 + C2823 * C1319 +
             C3162 + C3162 + C153913 * C1329 + C2825 * C3127 + C3163 + C3163 +
             C153887 * C3135) *
                C2818 +
            (C3218 + C3219 + C3220) * C2819 +
            (C3221 + C3222 + C3223) * C153874) *
               C153626 * C153527 * C322) *
              C323 +
          (((C3217 + C3216 + C3215) * C2818 + (C3214 + C3213 + C3212) * C2819 +
            (C2821 * C326 + C3182 + C3182 + C153925 * C350 + C2823 * C333 +
             C3183 + C3183 + C153913 * C357 + C2825 * C1316 + C3184 + C3184 +
             C153887 * C1326) *
                C153874) *
               C153626 * C153527 * C321 -
           (C2909 * C153874 + (C2899 + C2898 + C2897) * C2819 +
            (C2896 + C2895 + C2894) * C2818) *
               C153626 * C153527 * C320 -
           ((C2825 * C3130 + C3185 + C3185 + C153887 * C3138 + C2823 * C1316 +
             C3186 + C3186 + C153913 * C1326 + C2821 * C333 + C3187 + C3187 +
             C153925 * C357) *
                C153874 +
            (C3223 + C3222 + C3221) * C2819 + (C3220 + C3219 + C3218) * C2818) *
               C153626 * C153527 * C322) *
              C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
            C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 + C24119 +
            C153887 * C354) *
               C153922 +
           (C24183 + C24184 + C24185) * C153903 + C24197 * C153874) *
              C153626 * C153527 * C153511 * C130 -
          (C24198 * C153874 + (C24188 + C24187 + C24186) * C153903 +
           (C24185 + C24184 + C24183) * C153922) *
              C153626 * C153527 * C153511 * C131 +
          (C24197 * C153922 + (C24191 + C24190 + C24189) * C153903 +
           (C24192 + C24193 + C24194) * C153874) *
              C153626 * C153527 * C153511 * C132 -
          ((C24114 * C336 + C24156 + C24156 + C153887 * C360 + C24112 * C335 +
            C24157 + C24157 + C24105 * C359 + C24110 * C141 + C24158 + C24158 +
            C24104 * C157) *
               C153874 +
           (C24194 + C24193 + C24192) * C153903 + C24198 * C153922) *
              C153626 * C153527 * C153511 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
             C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 + C24119 +
             C153887 * C354) *
                C153922 +
            (C24183 + C24184 + C24185) * C153903 + C24197 * C153874) *
               C153626 * C153527 * C320 -
           ((C24489 + C24490 + C24491) * C153874 +
            (C24492 + C24493 + C24494) * C153903 +
            (C24114 * C1319 + C24435 + C24435 + C153887 * C1329 +
             C24112 * C330 + C24436 + C24436 + C24105 * C354 + C24110 * C329 +
             C24437 + C24437 + C24104 * C353) *
                C153922) *
               C153626 * C153527 * C321 +
           ((C24110 * C330 + C24438 + C24438 + C24104 * C354 + C24112 * C1319 +
             C24439 + C24439 + C24105 * C1329 + C24114 * C3127 + C24440 +
             C24440 + C153887 * C3135) *
                C153922 +
            (C24495 + C24496 + C24497) * C153903 +
            (C24498 + C24499 + C24500) * C153874) *
               C153626 * C153527 * C322) *
              C323 +
          (((C24494 + C24493 + C24492) * C153922 +
            (C24491 + C24490 + C24489) * C153903 +
            (C24110 * C326 + C24459 + C24459 + C24104 * C350 + C24112 * C333 +
             C24460 + C24460 + C24105 * C357 + C24114 * C1316 + C24461 +
             C24461 + C153887 * C1326) *
                C153874) *
               C153626 * C153527 * C321 -
           (C24198 * C153874 + (C24188 + C24187 + C24186) * C153903 +
            (C24185 + C24184 + C24183) * C153922) *
               C153626 * C153527 * C320 -
           ((C24114 * C3130 + C24462 + C24462 + C153887 * C3138 +
             C24112 * C1316 + C24463 + C24463 + C24105 * C1326 + C24110 * C333 +
             C24464 + C24464 + C24104 * C357) *
                C153874 +
            (C24500 + C24499 + C24498) * C153903 +
            (C24497 + C24496 + C24495) * C153922) *
               C153626 * C153527 * C322) *
              C153498)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((C28350 * C136 + C28361 + C28361 + C28344 * C152 + C28352 * C329 +
           C28362 + C28362 + C28345 * C353 + C28354 * C330 + C28363 + C28363 +
           C28346 * C354 + C28356 * C1319 + C28364 + C28364 + C28347 * C1329 +
           C28358 * C3127 + C28365 + C28365 + C28348 * C3135) *
              C153454 * C153626 * C153527 * C153511 * C130 -
          (C28358 * C3128 + C28366 + C28366 + C28348 * C3136 + C28356 * C1318 +
           C28367 + C28367 + C28347 * C1328 + C28354 * C331 + C28368 + C28368 +
           C28346 * C355 + C28352 * C328 + C28369 + C28369 + C28345 * C352 +
           C28350 * C137 + C28370 + C28370 + C28344 * C153) *
              C153454 * C153626 * C153527 * C153511 * C131 +
          (C28350 * C138 + C28371 + C28371 + C28344 * C154 + C28352 * C327 +
           C28372 + C28372 + C28345 * C351 + C28354 * C332 + C28373 + C28373 +
           C28346 * C356 + C28356 * C1317 + C28374 + C28374 + C28347 * C1327 +
           C28358 * C3129 + C28375 + C28375 + C28348 * C3137) *
              C153454 * C153626 * C153527 * C153511 * C132 -
          (C28358 * C3130 + C28376 + C28376 + C28348 * C3138 + C28356 * C1316 +
           C28377 + C28377 + C28347 * C1326 + C28354 * C333 + C28378 + C28378 +
           C28346 * C357 + C28352 * C326 + C28379 + C28379 + C28345 * C350 +
           C28350 * C139 + C28380 + C28380 + C28344 * C155) *
              C153454 * C153626 * C153527 * C153511 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C28350 * C136 + C28361 + C28361 + C28344 * C152 + C28352 * C329 +
            C28362 + C28362 + C28345 * C353 + C28354 * C330 + C28363 + C28363 +
            C28346 * C354 + C28356 * C1319 + C28364 + C28364 + C28347 * C1329 +
            C28358 * C3127 + C28365 + C28365 + C28348 * C3135) *
               C153454 * C153626 * C153527 * C320 -
           (C28358 * C4723 + C28509 + C28509 + C28348 * C4729 + C28356 * C3127 +
            C28510 + C28510 + C28347 * C3135 + C28354 * C1319 + C28511 +
            C28511 + C28346 * C1329 + C28352 * C330 + C28512 + C28512 +
            C28345 * C354 + C28350 * C329 + C28513 + C28513 + C28344 * C353) *
               C153454 * C153626 * C153527 * C321 +
           (C28350 * C330 + C28514 + C28514 + C28344 * C354 + C28352 * C1319 +
            C28515 + C28515 + C28345 * C1329 + C28354 * C3127 + C28516 +
            C28516 + C28346 * C3135 + C28356 * C4723 + C28517 + C28517 +
            C28347 * C4729 + C28358 * C28502 + C28518 + C28518 +
            C28348 * C28506) *
               C153454 * C153626 * C153527 * C322) *
              C323 +
          ((C28350 * C328 + C28519 + C28519 + C28344 * C352 + C28352 * C331 +
            C28520 + C28520 + C28345 * C355 + C28354 * C1318 + C28521 + C28521 +
            C28346 * C1328 + C28356 * C3128 + C28522 + C28522 + C28347 * C3136 +
            C28358 * C4722 + C28523 + C28523 + C28348 * C4728) *
               C153454 * C153626 * C153527 * C321 -
           (C28358 * C3128 + C28366 + C28366 + C28348 * C3136 + C28356 * C1318 +
            C28367 + C28367 + C28347 * C1328 + C28354 * C331 + C28368 + C28368 +
            C28346 * C355 + C28352 * C328 + C28369 + C28369 + C28345 * C352 +
            C28350 * C137 + C28370 + C28370 + C28344 * C153) *
               C153454 * C153626 * C153527 * C320 -
           (C28358 * C28503 + C28524 + C28524 + C28348 * C28507 +
            C28356 * C4722 + C28525 + C28525 + C28347 * C4728 + C28354 * C3128 +
            C28526 + C28526 + C28346 * C3136 + C28352 * C1318 + C28527 +
            C28527 + C28345 * C1328 + C28350 * C331 + C28528 + C28528 +
            C28344 * C355) *
               C153454 * C153626 * C153527 * C322) *
              C153498)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153608 * C152) * C153922 +
            C193 * C153903 + C194 * C153874) *
               C47609 +
           (C7734 * C153922 + C622 * C153903 + C621 * C153874) * C47610 +
           (C7735 * C153922 + C623 * C153903 + C624 * C153874) * C153890) *
              C153527 * C153511 * C130 -
          ((C625 * C153874 + C624 * C153903 + C623 * C153922) * C153890 +
           (C620 * C153874 + C621 * C153903 + C622 * C153922) * C47610 +
           (C195 * C153874 + C194 * C153903 + C193 * C153922) * C47609) *
              C153527 * C153511 * C131 +
          ((C194 * C153922 + C195 * C153903 + C196 * C153874) * C47609 +
           (C621 * C153922 + C620 * C153903 + C619 * C153874) * C47610 +
           (C624 * C153922 + C625 * C153903 + C626 * C153874) * C153890) *
              C153527 * C153511 * C132 -
          (((C134 * C549 + C602 + C602 + C153608 * C573) * C153874 +
            C626 * C153903 + C625 * C153922) *
               C153890 +
           (C895 * C153874 + C619 * C153903 + C620 * C153922) * C47610 +
           (C197 * C153874 + C196 * C153903 + C195 * C153922) * C47609) *
              C153527 * C153511 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C153922 +
             C193 * C153903 + C194 * C153874) *
                C47609 +
            (C7734 * C153922 + C622 * C153903 + C621 * C153874) * C47610 +
            (C7735 * C153922 + C623 * C153903 + C624 * C153874) * C153890) *
               C153527 * C320 -
           ((C7450 * C153874 + C7451 * C153903 + C8523 * C153922) * C153890 +
            (C1099 * C153874 + C1098 * C153903 + C8522 * C153922) * C47610 +
            (C408 * C153874 + C409 * C153903 +
             (C134 * C329 + C374 + C374 + C153608 * C353) * C153922) *
                C47609) *
               C153527 * C321 +
           (((C134 * C330 + C375 + C375 + C153608 * C354) * C153922 +
             C410 * C153903 + C411 * C153874) *
                C47609 +
            (C9879 * C153922 + C7452 * C153903 + C7453 * C153874) * C47610 +
            (C9880 * C153922 + C7454 * C153903 + C7455 * C153874) * C153890) *
               C153527 * C322) *
              C323 +
          (((C409 * C153922 + C408 * C153903 + C407 * C153874) * C47609 +
            (C1098 * C153922 + C1099 * C153903 + C1100 * C153874) * C47610 +
            (C7451 * C153922 + C7450 * C153903 + C7974 * C153874) * C153890) *
               C153527 * C321 -
           ((C625 * C153874 + C624 * C153903 + C623 * C153922) * C153890 +
            (C620 * C153874 + C621 * C153903 + C622 * C153922) * C47610 +
            (C195 * C153874 + C194 * C153903 + C193 * C153922) * C47609) *
               C153527 * C320 -
           (((C134 * C3444 + C7437 + C7437 + C153608 * C3452) * C153874 +
             C7455 * C153903 + C7454 * C153922) *
                C153890 +
            (C15373 * C153874 + C7453 * C153903 + C7452 * C153922) * C47610 +
            (C412 * C153874 + C411 * C153903 + C410 * C153922) * C47609) *
               C153527 * C322) *
              C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
            C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
            C153887 * C354) *
               C153454 * C47609 +
           (C2821 * C542 + C3474 + C3474 + C153925 * C566 + C2823 * C1057 +
            C3473 + C3473 + C153913 * C1069 + C2825 * C1892 + C3472 + C3472 +
            C153887 * C1902) *
               C153454 * C47610 +
           (C2821 * C543 + C3475 + C3475 + C153925 * C567 + C2823 * C1461 +
            C3476 + C3476 + C153913 * C1471 + C2825 * C3441 + C3477 + C3477 +
            C153887 * C3449) *
               C153454 * C153890) *
              C153527 * C153511 * C130 -
          ((C3534 + C3533 + C3532) * C153454 * C153890 +
           (C3529 + C3530 + C3531) * C153454 * C47610 +
           (C2896 + C2895 + C2894) * C153454 * C47609) *
              C153527 * C153511 * C131 +
          (C2908 * C153454 * C47609 +
           (C3528 + C3527 + C3526) * C153454 * C47610 +
           (C3535 + C3536 + C3537) * C153454 * C153890) *
              C153527 * C153511 * C132 -
          ((C2825 * C3444 + C3499 + C3499 + C153887 * C3452 + C2823 * C1458 +
            C3500 + C3500 + C153913 * C1468 + C2821 * C546 + C3501 + C3501 +
            C153925 * C570) *
               C153454 * C153890 +
           (C4013 + C4012 + C4011) * C153454 * C47610 +
           C2909 * C153454 * C47609) *
              C153527 * C153511 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
             C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
             C153887 * C354) *
                C153454 * C47609 +
            (C2821 * C542 + C3474 + C3474 + C153925 * C566 + C2823 * C1057 +
             C3473 + C3473 + C153913 * C1069 + C2825 * C1892 + C3472 + C3472 +
             C153887 * C1902) *
                C153454 * C47610 +
            (C2821 * C543 + C3475 + C3475 + C153925 * C567 + C2823 * C1461 +
             C3476 + C3476 + C153913 * C1471 + C2825 * C3441 + C3477 + C3477 +
             C153887 * C3449) *
                C153454 * C153890) *
               C153527 * C320 -
           ((C2825 * C4959 + C4973 + C4973 + C153887 * C4965 + C2823 * C3441 +
             C4974 + C4974 + C153913 * C3449 + C2821 * C1461 + C4975 + C4975 +
             C153925 * C1471) *
                C153454 * C153890 +
            (C2825 * C4303 + C4318 + C4318 + C153887 * C4311 + C2823 * C1892 +
             C4317 + C4317 + C153913 * C1902 + C2821 * C1057 + C4316 + C4316 +
             C153925 * C1069) *
                C153454 * C47610 +
            (C2825 * C1319 + C3158 + C3158 + C153887 * C1329 + C2823 * C330 +
             C3159 + C3159 + C153913 * C354 + C2821 * C329 + C3160 + C3160 +
             C153925 * C353) *
                C153454 * C47609) *
               C153527 * C321 +
           ((C2821 * C330 + C3161 + C3161 + C153925 * C354 + C2823 * C1319 +
             C3162 + C3162 + C153913 * C1329 + C2825 * C3127 + C3163 + C3163 +
             C153887 * C3135) *
                C153454 * C47609 +
            (C2821 * C1892 + C5719 + C5719 + C153925 * C1902 + C2823 * C4303 +
             C5718 + C5718 + C153913 * C4311 + C2825 * C5703 + C5717 + C5717 +
             C153887 * C5709) *
                C153454 * C47610 +
            (C2821 * C3441 + C51811 + C51811 + C153925 * C3449 + C2823 * C4959 +
             C51812 + C51812 + C153913 * C4965 + C2825 * C28650 + C51813 +
             C51813 + C153887 * C28654) *
                C153454 * C153890) *
               C153527 * C322) *
              C323 +
          (((C3217 + C3216 + C3215) * C153454 * C47609 +
            (C4352 + C4353 + C4354) * C153454 * C47610 +
            (C2821 * C1460 + C4972 + C4972 + C153925 * C1470 + C2823 * C3442 +
             C4971 + C4971 + C153913 * C3450 + C2825 * C4958 + C4970 + C4970 +
             C153887 * C4964) *
                C153454 * C153890) *
               C153527 * C321 -
           ((C3534 + C3533 + C3532) * C153454 * C153890 +
            (C3529 + C3530 + C3531) * C153454 * C47610 +
            (C2896 + C2895 + C2894) * C153454 * C47609) *
               C153527 * C320 -
           ((C2825 * C28651 + C51814 + C51814 + C153887 * C28655 +
             C2823 * C4958 + C51815 + C51815 + C153913 * C4964 + C2821 * C3442 +
             C51816 + C51816 + C153925 * C3450) *
                C153454 * C153890 +
            (C2825 * C5702 + C5714 + C5714 + C153887 * C5708 + C2823 * C4304 +
             C5715 + C5715 + C153913 * C4312 + C2821 * C1891 + C5716 + C5716 +
             C153925 * C1901) *
                C153454 * C47610 +
            (C3220 + C3219 + C3218) * C153454 * C47609) *
               C153527 * C322) *
              C153498)) /
            (p * q * std::sqrt(p + q));
    d2ee[215] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
             C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
             C153887 * C354) *
                C2818 +
            (C2894 + C2895 + C2896) * C2819 + C2908 * C153874) *
               C153626 * C153527 * C153908 -
           (C3766 * C153874 + (C3215 + C3216 + C3217) * C2819 +
            (C2825 * C1319 + C3158 + C3158 + C153887 * C1329 + C2823 * C330 +
             C3159 + C3159 + C153913 * C354 + C2821 * C329 + C3160 + C3160 +
             C153925 * C353) *
                C2818) *
               C153626 * C153527 * C153909 +
           ((C2821 * C330 + C3161 + C3161 + C153925 * C354 + C2823 * C1319 +
             C3162 + C3162 + C153913 * C1329 + C2825 * C3127 + C3163 + C3163 +
             C153887 * C3135) *
                C2818 +
            (C3218 + C3219 + C3220) * C2819 +
            (C3221 + C3222 + C3223) * C153874) *
               C153626 * C153527 * C1601) *
              C153829 +
          (((C3217 + C3216 + C3215) * C2818 + (C3214 + C3213 + C3212) * C2819 +
            (C3773 + C3774 + C3775) * C153874) *
               C153626 * C153527 * C153909 -
           (C2909 * C153874 + (C2899 + C2898 + C2897) * C2819 +
            (C2896 + C2895 + C2894) * C2818) *
               C153626 * C153527 * C153908 -
           ((C2825 * C3130 + C3185 + C3185 + C153887 * C3138 + C2823 * C1316 +
             C3186 + C3186 + C153913 * C1326 + C2821 * C333 + C3187 + C3187 +
             C153925 * C357) *
                C153874 +
            (C3223 + C3222 + C3221) * C2819 + (C3220 + C3219 + C3218) * C2818) *
               C153626 * C153527 * C1601) *
              C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153608 * C152) * C122 + C193 * C123 +
            C194 * C124 + C195 * C125 + C196 * C126) *
               C153626 * C153527 * C153908 -
           (C406 * C126 + C407 * C125 + C408 * C124 + C409 * C123 +
            (C134 * C329 + C374 + C374 + C153608 * C353) * C122) *
               C153626 * C153527 * C153909 +
           ((C134 * C330 + C375 + C375 + C153608 * C354) * C122 + C410 * C123 +
            C411 * C124 + C412 * C125 + C413 * C126) *
               C153626 * C153527 * C1601) *
              C153829 +
          ((C409 * C122 + C408 * C123 + C407 * C124 + C406 * C125 +
            C762 * C126) *
               C153626 * C153527 * C153909 -
           (C197 * C126 + C196 * C125 + C195 * C124 + C194 * C123 +
            C193 * C122) *
               C153626 * C153527 * C153908 -
           ((C134 * C336 + C389 + C389 + C153608 * C360) * C126 + C413 * C125 +
            C412 * C124 + C411 * C123 + C410 * C122) *
               C153626 * C153527 * C1601) *
              C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
             C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 + C24119 +
             C153887 * C354) *
                C153922 +
            (C24183 + C24184 + C24185) * C153903 + C24197 * C153874) *
               C153626 * C153527 * C153908 -
           (C25031 * C153874 + (C24492 + C24493 + C24494) * C153903 +
            (C24114 * C1319 + C24435 + C24435 + C153887 * C1329 +
             C24112 * C330 + C24436 + C24436 + C24105 * C354 + C24110 * C329 +
             C24437 + C24437 + C24104 * C353) *
                C153922) *
               C153626 * C153527 * C153909 +
           ((C24110 * C330 + C24438 + C24438 + C24104 * C354 + C24112 * C1319 +
             C24439 + C24439 + C24105 * C1329 + C24114 * C3127 + C24440 +
             C24440 + C153887 * C3135) *
                C153922 +
            (C24495 + C24496 + C24497) * C153903 +
            (C24498 + C24499 + C24500) * C153874) *
               C153626 * C153527 * C1601) *
              C153829 +
          (((C24494 + C24493 + C24492) * C153922 +
            (C24491 + C24490 + C24489) * C153903 +
            (C25038 + C25039 + C25040) * C153874) *
               C153626 * C153527 * C153909 -
           (C24198 * C153874 + (C24188 + C24187 + C24186) * C153903 +
            (C24185 + C24184 + C24183) * C153922) *
               C153626 * C153527 * C153908 -
           ((C24114 * C3130 + C24462 + C24462 + C153887 * C3138 +
             C24112 * C1316 + C24463 + C24463 + C24105 * C1326 + C24110 * C333 +
             C24464 + C24464 + C24104 * C357) *
                C153874 +
            (C24500 + C24499 + C24498) * C153903 +
            (C24497 + C24496 + C24495) * C153922) *
               C153626 * C153527 * C1601) *
              C153498)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C28350 * C136 + C28361 + C28361 + C28344 * C152 + C28352 * C329 +
            C28362 + C28362 + C28345 * C353 + C28354 * C330 + C28363 + C28363 +
            C28346 * C354 + C28356 * C1319 + C28364 + C28364 + C28347 * C1329 +
            C28358 * C3127 + C28365 + C28365 + C28348 * C3135) *
               C153454 * C153626 * C153527 * C153908 -
           (C28358 * C4723 + C28509 + C28509 + C28348 * C4729 + C28356 * C3127 +
            C28510 + C28510 + C28347 * C3135 + C28354 * C1319 + C28511 +
            C28511 + C28346 * C1329 + C28352 * C330 + C28512 + C28512 +
            C28345 * C354 + C28350 * C329 + C28513 + C28513 + C28344 * C353) *
               C153454 * C153626 * C153527 * C153909 +
           (C28350 * C330 + C28514 + C28514 + C28344 * C354 + C28352 * C1319 +
            C28515 + C28515 + C28345 * C1329 + C28354 * C3127 + C28516 +
            C28516 + C28346 * C3135 + C28356 * C4723 + C28517 + C28517 +
            C28347 * C4729 + C28358 * C28502 + C28518 + C28518 +
            C28348 * C28506) *
               C153454 * C153626 * C153527 * C1601) *
              C153829 +
          ((C28350 * C328 + C28519 + C28519 + C28344 * C352 + C28352 * C331 +
            C28520 + C28520 + C28345 * C355 + C28354 * C1318 + C28521 + C28521 +
            C28346 * C1328 + C28356 * C3128 + C28522 + C28522 + C28347 * C3136 +
            C28358 * C4722 + C28523 + C28523 + C28348 * C4728) *
               C153454 * C153626 * C153527 * C153909 -
           (C28358 * C3128 + C28366 + C28366 + C28348 * C3136 + C28356 * C1318 +
            C28367 + C28367 + C28347 * C1328 + C28354 * C331 + C28368 + C28368 +
            C28346 * C355 + C28352 * C328 + C28369 + C28369 + C28345 * C352 +
            C28350 * C137 + C28370 + C28370 + C28344 * C153) *
               C153454 * C153626 * C153527 * C153908 -
           (C28358 * C28503 + C28524 + C28524 + C28348 * C28507 +
            C28356 * C4722 + C28525 + C28525 + C28347 * C4728 + C28354 * C3128 +
            C28526 + C28526 + C28346 * C3136 + C28352 * C1318 + C28527 +
            C28527 + C28345 * C1328 + C28350 * C331 + C28528 + C28528 +
            C28344 * C355) *
               C153454 * C153626 * C153527 * C1601) *
              C153498)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C153922 +
             C193 * C153903 + C194 * C153874) *
                C47609 +
            (C48049 + C48050 + C48051) * C47610 + C48069 * C153890) *
               C153527 * C153908 -
           (C49401 * C153890 + (C48805 + C48804 + C48803) * C47610 +
            (C408 * C153874 + C409 * C153903 +
             (C134 * C329 + C374 + C374 + C153608 * C353) * C153922) *
                C47609) *
               C153527 * C153909 +
           (((C134 * C330 + C375 + C375 + C153608 * C354) * C153922 +
             C410 * C153903 + C411 * C153874) *
                C47609 +
            (C9879 * C153922 + C7452 * C153903 + C7453 * C153874) * C47610 +
            (C9880 * C153922 + C7454 * C153903 + C7455 * C153874) * C153890) *
               C153527 * C1601) *
              C153829 +
          (((C409 * C153922 + C408 * C153903 + C407 * C153874) * C47609 +
            (C48809 + C48810 + C48811) * C47610 +
            (C48812 + C48813 + C48814) * C153890) *
               C153527 * C153909 -
           (C48070 * C153890 + (C48060 + C48059 + C48058) * C47610 +
            (C195 * C153874 + C194 * C153903 + C193 * C153922) * C47609) *
               C153527 * C153908 -
           (((C134 * C3444 + C7437 + C7437 + C153608 * C3452) * C153874 +
             C7455 * C153903 + C7454 * C153922) *
                C153890 +
            (C15373 * C153874 + C7453 * C153903 + C7452 * C153922) * C47610 +
            (C412 * C153874 + C411 * C153903 + C410 * C153922) * C47609) *
               C153527 * C1601) *
              C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
             C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
             C153887 * C354) *
                C153454 * C47609 +
            (C52092 + C52093 + C52094) * C153454 * C47610 + C52106 * C153890) *
               C153527 * C153908 -
           (C53489 * C153890 + (C52877 + C52876 + C52875) * C153454 * C47610 +
            (C2825 * C1319 + C3158 + C3158 + C153887 * C1329 + C2823 * C330 +
             C3159 + C3159 + C153913 * C354 + C2821 * C329 + C3160 + C3160 +
             C153925 * C353) *
                C153454 * C47609) *
               C153527 * C153909 +
           ((C2821 * C330 + C3161 + C3161 + C153925 * C354 + C2823 * C1319 +
             C3162 + C3162 + C153913 * C1329 + C2825 * C3127 + C3163 + C3163 +
             C153887 * C3135) *
                C153454 * C47609 +
            (C2821 * C1892 + C5719 + C5719 + C153925 * C1902 + C2823 * C4303 +
             C5718 + C5718 + C153913 * C4311 + C2825 * C5703 + C5717 + C5717 +
             C153887 * C5709) *
                C153454 * C47610 +
            (C2821 * C3441 + C51811 + C51811 + C153925 * C3449 + C2823 * C4959 +
             C51812 + C51812 + C153913 * C4965 + C2825 * C28650 + C51813 +
             C51813 + C153887 * C28654) *
                C153454 * C153890) *
               C153527 * C1601) *
              C153829 +
          (((C3217 + C3216 + C3215) * C153454 * C47609 +
            (C4352 + C4353 + C4354) * C153454 * C47610 +
            (C52881 + C52882 + C52883) * C153454 * C153890) *
               C153527 * C153909 -
           (C52091 * C153890 + (C3529 + C3530 + C3531) * C153454 * C47610 +
            (C2896 + C2895 + C2894) * C153454 * C47609) *
               C153527 * C153908 -
           ((C2825 * C28651 + C51814 + C51814 + C153887 * C28655 +
             C2823 * C4958 + C51815 + C51815 + C153913 * C4964 + C2821 * C3442 +
             C51816 + C51816 + C153925 * C3450) *
                C153454 * C153890 +
            (C2825 * C5702 + C5714 + C5714 + C153887 * C5708 + C2823 * C4304 +
             C5715 + C5715 + C153913 * C4312 + C2821 * C1891 + C5716 + C5716 +
             C153925 * C1901) *
                C153454 * C47610 +
            (C3220 + C3219 + C3218) * C153454 * C47609) *
               C153527 * C1601) *
              C153498)) /
            (p * q * std::sqrt(p + q));
    d2ee[216] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
             C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
             C153887 * C354) *
                C2818 +
            (C2894 + C2895 + C2896) * C2819 + C2908 * C153874) *
               C153626 * C153838 -
           (C4004 * C153874 + (C3529 + C3530 + C3531) * C2819 +
            (C2825 * C1892 + C3472 + C3472 + C153887 * C1902 + C2823 * C1057 +
             C3473 + C3473 + C153913 * C1069 + C2821 * C542 + C3474 + C3474 +
             C153925 * C566) *
                C2818) *
               C153626 * C153591) *
              C153908 +
          (((C2821 * C1057 + C4316 + C4316 + C153925 * C1069 + C2823 * C1892 +
             C4317 + C4317 + C153913 * C1902 + C2825 * C4303 + C4318 + C4318 +
             C153887 * C4311) *
                C2818 +
            (C4352 + C4353 + C4354) * C2819 +
            (C4355 + C4356 + C4357) * C153874) *
               C153626 * C153591 -
           (C3766 * C153874 + (C3215 + C3216 + C3217) * C2819 +
            (C2825 * C1319 + C3158 + C3158 + C153887 * C1329 + C2823 * C330 +
             C3159 + C3159 + C153913 * C354 + C2821 * C329 + C3160 + C3160 +
             C153925 * C353) *
                C2818) *
               C153626 * C153838) *
              C153909 +
          (((C2821 * C330 + C3161 + C3161 + C153925 * C354 + C2823 * C1319 +
             C3162 + C3162 + C153913 * C1329 + C2825 * C3127 + C3163 + C3163 +
             C153887 * C3135) *
                C2818 +
            (C3218 + C3219 + C3220) * C2819 +
            (C3221 + C3222 + C3223) * C153874) *
               C153626 * C153838 -
           ((C2825 * C5701 + C5711 + C5711 + C153887 * C5707 + C2823 * C4305 +
             C5712 + C5712 + C153913 * C4313 + C2821 * C1890 + C5713 + C5713 +
             C153925 * C1900) *
                C153874 +
            (C2825 * C5702 + C5714 + C5714 + C153887 * C5708 + C2823 * C4304 +
             C5715 + C5715 + C153913 * C4312 + C2821 * C1891 + C5716 + C5716 +
             C153925 * C1901) *
                C2819 +
            (C2825 * C5703 + C5717 + C5717 + C153887 * C5709 + C2823 * C4303 +
             C5718 + C5718 + C153913 * C4311 + C2821 * C1892 + C5719 + C5719 +
             C153925 * C1902) *
                C2818) *
               C153626 * C153591) *
              C1601) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153608 * C152) * C122 + C193 * C123 +
            C194 * C124 + C195 * C125 + C196 * C126) *
               C153626 * C153838 -
           (C619 * C126 + C620 * C125 + C621 * C124 + C622 * C123 +
            (C134 * C542 + C587 + C587 + C153608 * C566) * C122) *
               C153626 * C153591) *
              C153908 +
          (((C134 * C1057 + C1076 + C1076 + C153608 * C1069) * C122 +
            C1098 * C123 + C1099 * C124 + C1100 * C125 + C1101 * C126) *
               C153626 * C153591 -
           (C406 * C126 + C407 * C125 + C408 * C124 + C409 * C123 +
            (C134 * C329 + C374 + C374 + C153608 * C353) * C122) *
               C153626 * C153838) *
              C153909 +
          (((C134 * C330 + C375 + C375 + C153608 * C354) * C122 + C410 * C123 +
            C411 * C124 + C412 * C125 + C413 * C126) *
               C153626 * C153838 -
           ((C134 * C1888 + C1904 + C1904 + C153608 * C1898) * C126 +
            (C134 * C1889 + C1905 + C1905 + C153608 * C1899) * C125 +
            (C134 * C1890 + C1906 + C1906 + C153608 * C1900) * C124 +
            (C134 * C1891 + C1907 + C1907 + C153608 * C1901) * C123 +
            (C134 * C1892 + C1908 + C1908 + C153608 * C1902) * C122) *
               C153626 * C153591) *
              C1601) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
             C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 + C24119 +
             C153887 * C354) *
                C153922 +
            (C24183 + C24184 + C24185) * C153903 + C24197 * C153874) *
               C153626 * C153838 -
           (C25269 * C153874 + (C24794 + C24795 + C24796) * C153903 +
            (C24114 * C1892 + C24737 + C24737 + C153887 * C1902 +
             C24112 * C1057 + C24738 + C24738 + C24105 * C1069 + C24110 * C542 +
             C24739 + C24739 + C24104 * C566) *
                C153922) *
               C153626 * C153591) *
              C153908 +
          (((C24110 * C1057 + C25569 + C25569 + C24104 * C1069 +
             C24112 * C1892 + C25570 + C25570 + C24105 * C1902 +
             C24114 * C4303 + C25571 + C25571 + C153887 * C4311) *
                C153922 +
            (C25605 + C25606 + C25607) * C153903 +
            (C25608 + C25609 + C25610) * C153874) *
               C153626 * C153591 -
           (C25031 * C153874 + (C24492 + C24493 + C24494) * C153903 +
            (C24114 * C1319 + C24435 + C24435 + C153887 * C1329 +
             C24112 * C330 + C24436 + C24436 + C24105 * C354 + C24110 * C329 +
             C24437 + C24437 + C24104 * C353) *
                C153922) *
               C153626 * C153838) *
              C153909 +
          (((C24110 * C330 + C24438 + C24438 + C24104 * C354 + C24112 * C1319 +
             C24439 + C24439 + C24105 * C1329 + C24114 * C3127 + C24440 +
             C24440 + C153887 * C3135) *
                C153922 +
            (C24495 + C24496 + C24497) * C153903 +
            (C24498 + C24499 + C24500) * C153874) *
               C153626 * C153838 -
           ((C24114 * C5701 + C26937 + C26937 + C153887 * C5707 +
             C24112 * C4305 + C26938 + C26938 + C24105 * C4313 +
             C24110 * C1890 + C26939 + C26939 + C24104 * C1900) *
                C153874 +
            (C24114 * C5702 + C26940 + C26940 + C153887 * C5708 +
             C24112 * C4304 + C26941 + C26941 + C24105 * C4312 +
             C24110 * C1891 + C26942 + C26942 + C24104 * C1901) *
                C153903 +
            (C24114 * C5703 + C26943 + C26943 + C153887 * C5709 +
             C24112 * C4303 + C26944 + C26944 + C24105 * C4311 +
             C24110 * C1892 + C26945 + C26945 + C24104 * C1902) *
                C153922) *
               C153626 * C153591) *
              C1601) *
         C153492) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C28350 * C136 + C28361 + C28361 + C28344 * C152 + C28352 * C329 +
            C28362 + C28362 + C28345 * C353 + C28354 * C330 + C28363 + C28363 +
            C28346 * C354 + C28356 * C1319 + C28364 + C28364 + C28347 * C1329 +
            C28358 * C3127 + C28365 + C28365 + C28348 * C3135) *
               C153454 * C153626 * C153838 -
           (C28358 * C5703 + C28657 + C28657 + C28348 * C5709 + C28356 * C4303 +
            C28658 + C28658 + C28347 * C4311 + C28354 * C1892 + C28659 +
            C28659 + C28346 * C1902 + C28352 * C1057 + C28660 + C28660 +
            C28345 * C1069 + C28350 * C542 + C28661 + C28661 + C28344 * C566) *
               C153454 * C153626 * C153591) *
              C153908 +
          ((C28350 * C1057 + C29099 + C29099 + C28344 * C1069 + C28352 * C1892 +
            C29100 + C29100 + C28345 * C1902 + C28354 * C4303 + C29101 +
            C29101 + C28346 * C4311 + C28356 * C5703 + C29102 + C29102 +
            C28347 * C5709 + C28358 * C29092 + C29103 + C29103 +
            C28348 * C29096) *
               C153454 * C153626 * C153591 -
           (C28358 * C4723 + C28509 + C28509 + C28348 * C4729 + C28356 * C3127 +
            C28510 + C28510 + C28347 * C3135 + C28354 * C1319 + C28511 +
            C28511 + C28346 * C1329 + C28352 * C330 + C28512 + C28512 +
            C28345 * C354 + C28350 * C329 + C28513 + C28513 + C28344 * C353) *
               C153454 * C153626 * C153838) *
              C153909 +
          ((C28350 * C330 + C28514 + C28514 + C28344 * C354 + C28352 * C1319 +
            C28515 + C28515 + C28345 * C1329 + C28354 * C3127 + C28516 +
            C28516 + C28346 * C3135 + C28356 * C4723 + C28517 + C28517 +
            C28347 * C4729 + C28358 * C28502 + C28518 + C28518 +
            C28348 * C28506) *
               C153454 * C153626 * C153838 -
           (C28358 * C29856 + C29860 + C29860 + C28348 * C29858 +
            C28356 * C29092 + C29861 + C29861 + C28347 * C29096 +
            C28354 * C5703 + C29862 + C29862 + C28346 * C5709 + C28352 * C4303 +
            C29863 + C29863 + C28345 * C4311 + C28350 * C1892 + C29864 +
            C29864 + C28344 * C1902) *
               C153454 * C153626 * C153591) *
              C1601) *
         C153492) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C153922 +
             C193 * C153903 + C194 * C153874) *
                C47609 +
            (C48049 + C48050 + C48051) * C47610 + C48069 * C153890) *
               C153838 -
           ((C48055 + C48056 + C48057) * C153890 +
            (C48054 + C48053 + C48052) * C47610 +
            (C48051 + C48050 + C48049) * C47609) *
               C153591) *
              C153908 +
          (((C48803 + C48804 + C48805) * C47609 +
            (C48806 + C48807 + C48808) * C47610 +
            (C49397 + C49398 + C49399) * C153890) *
               C153591 -
           (C49401 * C153890 + (C48805 + C48804 + C48803) * C47610 +
            (C408 * C153874 + C409 * C153903 +
             (C134 * C329 + C374 + C374 + C153608 * C353) * C153922) *
                C47609) *
               C153838) *
              C153909 +
          ((((C134 * C330 + C375 + C375 + C153608 * C354) * C153922 +
             C410 * C153903 + C411 * C153874) *
                C47609 +
            (C50128 + C50129 + C50130) * C47610 +
            (C50131 + C50132 + C50133) * C153890) *
               C153838 -
           (((C134 * C6301 + C9872 + C9872 + C153608 * C6313) * C153874 +
             (C134 * C6303 + C9873 + C9873 + C153608 * C6315) * C153903 +
             (C134 * C6305 + C9874 + C9874 + C153608 * C6317) * C153922) *
                C153890 +
            (C50133 + C50132 + C50131) * C47610 +
            (C50130 + C50129 + C50128) * C47609) *
               C153591) *
              C1601) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
             C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
             C153887 * C354) *
                C153454 * C47609 +
            (C52092 + C52093 + C52094) * C153454 * C47610 + C52106 * C153890) *
               C153838 -
           ((C52098 + C52099 + C52100) * C153454 * C153890 +
            (C52097 + C52096 + C52095) * C153454 * C47610 +
            (C52094 + C52093 + C52092) * C153454 * C47609) *
               C153591) *
              C153908 +
          (((C52875 + C52876 + C52877) * C153454 * C47609 +
            (C52878 + C52879 + C52880) * C153454 * C47610 +
            (C53490 + C53491 + C53492) * C153454 * C153890) *
               C153591 -
           (C53489 * C153890 + (C52877 + C52876 + C52875) * C153454 * C47610 +
            (C2825 * C1319 + C3158 + C3158 + C153887 * C1329 + C2823 * C330 +
             C3159 + C3159 + C153913 * C354 + C2821 * C329 + C3160 + C3160 +
             C153925 * C353) *
                C153454 * C47609) *
               C153838) *
              C153909 +
          (((C2821 * C330 + C3161 + C3161 + C153925 * C354 + C2823 * C1319 +
             C3162 + C3162 + C153913 * C1329 + C2825 * C3127 + C3163 + C3163 +
             C153887 * C3135) *
                C153454 * C47609 +
            (C54246 + C54247 + C54248) * C153454 * C47610 +
            (C54249 + C54250 + C54251) * C153454 * C153890) *
               C153838 -
           ((C2825 * C30190 + C54231 + C54231 + C153887 * C30194 +
             C2823 * C30191 + C54232 + C54232 + C153913 * C30195 +
             C2821 * C6305 + C54233 + C54233 + C153925 * C6317) *
                C153454 * C153890 +
            (C54251 + C54250 + C54249) * C153454 * C47610 +
            (C54248 + C54247 + C54246) * C153454 * C47609) *
               C153591) *
              C1601) *
         C153492) /
            (p * q * std::sqrt(p + q));
    d2ee[217] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C136 + C161 + C161 + C153608 * C152) * C122 +
                C193 * C123 + C194 * C124 + C195 * C125 + C196 * C126) *
                   C153626 * C153527 * C1223 -
               (C406 * C126 + C407 * C125 + C408 * C124 + C409 * C123 +
                (C134 * C329 + C374 + C374 + C153608 * C353) * C122) *
                   C153626 * C153527 * C153563) *
                  C1225 +
              ((C409 * C122 + C408 * C123 + C407 * C124 + C406 * C125 +
                C762 * C126) *
                   C153626 * C153527 * C153563 -
               (C197 * C126 + C196 * C125 + C195 * C124 + C194 * C123 +
                C193 * C122) *
                   C153626 * C153527 * C1223) *
                  C1226 +
              ((C194 * C122 + C195 * C123 + C196 * C124 + C197 * C125 +
                C198 * C126) *
                   C153626 * C153527 * C1223 -
               ((C134 * C753 + C759 + C759 + C153608 * C755) * C126 +
                C762 * C125 + C406 * C124 + C407 * C123 + C408 * C122) *
                   C153626 * C153527 * C153563) *
                  C1227) +
         std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             (((C134 * C136 + C161 + C161 + C153608 * C152) * C122 +
               C193 * C123 + C194 * C124 + C195 * C125 + C196 * C126) *
                  C153626 * C153527 * C1310 -
              (C406 * C126 + C407 * C125 + C408 * C124 + C409 * C123 +
               (C134 * C329 + C374 + C374 + C153608 * C353) * C122) *
                  C153626 * C153527 * C1311 +
              ((C134 * C330 + C375 + C375 + C153608 * C354) * C122 +
               C410 * C123 + C411 * C124 + C412 * C125 + C413 * C126) *
                  C153626 * C153527 * C1312 -
              ((C134 * C1315 + C1331 + C1331 + C153608 * C1325) * C126 +
               (C134 * C1316 + C1332 + C1332 + C153608 * C1326) * C125 +
               (C134 * C1317 + C1333 + C1333 + C153608 * C1327) * C124 +
               (C134 * C1318 + C1334 + C1334 + C153608 * C1328) * C123 +
               (C134 * C1319 + C1335 + C1335 + C153608 * C1329) * C122) *
                  C153626 * C153527 * C1313) *
             C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153608 * C152) * C122 + C193 * C123 +
            C194 * C124 + C195 * C125 + C196 * C126) *
               C153626 * C535 -
           (C619 * C126 + C620 * C125 + C621 * C124 + C622 * C123 +
            (C134 * C542 + C587 + C587 + C153608 * C566) * C122) *
               C153626 * C536 +
           ((C134 * C543 + C588 + C588 + C153608 * C567) * C122 + C623 * C123 +
            C624 * C124 + C625 * C125 + C626 * C126) *
               C153626 * C537) *
              C1223 +
          (((C134 * C1057 + C1076 + C1076 + C153608 * C1069) * C122 +
            C1098 * C123 + C1099 * C124 + C1100 * C125 + C1101 * C126) *
               C153626 * C536 -
           (C406 * C126 + C407 * C125 + C408 * C124 + C409 * C123 +
            (C134 * C329 + C374 + C374 + C153608 * C353) * C122) *
               C153626 * C535 -
           ((C134 * C1457 + C1473 + C1473 + C153608 * C1467) * C126 +
            (C134 * C1458 + C1474 + C1474 + C153608 * C1468) * C125 +
            (C134 * C1459 + C1475 + C1475 + C153608 * C1469) * C124 +
            (C134 * C1460 + C1476 + C1476 + C153608 * C1470) * C123 +
            (C134 * C1461 + C1477 + C1477 + C153608 * C1471) * C122) *
               C153626 * C537) *
              C153563) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
             C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
             C153887 * C354) *
                C2818 +
            (C2894 + C2895 + C2896) * C2819 + C2908 * C153874) *
               C153626 * C153527 * C1223 -
           (C3766 * C153874 + (C3215 + C3216 + C3217) * C2819 +
            (C2825 * C1319 + C3158 + C3158 + C153887 * C1329 + C2823 * C330 +
             C3159 + C3159 + C153913 * C354 + C2821 * C329 + C3160 + C3160 +
             C153925 * C353) *
                C2818) *
               C153626 * C153527 * C153563) *
              C1225 +
          (((C3217 + C3216 + C3215) * C2818 + (C3214 + C3213 + C3212) * C2819 +
            (C3773 + C3774 + C3775) * C153874) *
               C153626 * C153527 * C153563 -
           (C2909 * C153874 + (C2899 + C2898 + C2897) * C2819 +
            (C2896 + C2895 + C2894) * C2818) *
               C153626 * C153527 * C1223) *
              C1226 +
          ((C2908 * C2818 + (C2902 + C2901 + C2900) * C2819 +
            (C2903 + C2904 + C2905) * C153874) *
               C153626 * C153527 * C1223 -
           ((C2825 * C1315 + C3763 + C3763 + C153887 * C1325 + C2823 * C334 +
             C3764 + C3764 + C153913 * C358 + C2821 * C325 + C3765 + C3765 +
             C153925 * C349) *
                C153874 +
            (C3775 + C3774 + C3773) * C2819 + C3766 * C2818) *
               C153626 * C153527 * C153563) *
              C1227)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
            C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
            C153887 * C354) *
               C2818 +
           (C2894 + C2895 + C2896) * C2819 + C2908 * C153874) *
              C153626 * C153527 * C1310 -
          (C3766 * C153874 + (C3215 + C3216 + C3217) * C2819 +
           (C2825 * C1319 + C3158 + C3158 + C153887 * C1329 + C2823 * C330 +
            C3159 + C3159 + C153913 * C354 + C2821 * C329 + C3160 + C3160 +
            C153925 * C353) *
               C2818) *
              C153626 * C153527 * C1311 +
          ((C2821 * C330 + C3161 + C3161 + C153925 * C354 + C2823 * C1319 +
            C3162 + C3162 + C153913 * C1329 + C2825 * C3127 + C3163 + C3163 +
            C153887 * C3135) *
               C2818 +
           (C3218 + C3219 + C3220) * C2819 +
           (C3221 + C3222 + C3223) * C153874) *
              C153626 * C153527 * C1312 -
          ((C2825 * C4721 + C4731 + C4731 + C153887 * C4727 + C2823 * C3129 +
            C4732 + C4732 + C153913 * C3137 + C2821 * C1317 + C4733 + C4733 +
            C153925 * C1327) *
               C153874 +
           (C2825 * C4722 + C4734 + C4734 + C153887 * C4728 + C2823 * C3128 +
            C4735 + C4735 + C153913 * C3136 + C2821 * C1318 + C4736 + C4736 +
            C153925 * C1328) *
               C2819 +
           (C2825 * C4723 + C4737 + C4737 + C153887 * C4729 + C2823 * C3127 +
            C4738 + C4738 + C153913 * C3135 + C2821 * C1319 + C4739 + C4739 +
            C153925 * C1329) *
               C2818) *
              C153626 * C153527 * C1313) *
         C153492) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
             C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
             C153887 * C354) *
                C2818 +
            (C2894 + C2895 + C2896) * C2819 + C2908 * C153874) *
               C153626 * C535 -
           (C4004 * C153874 + (C3529 + C3530 + C3531) * C2819 +
            (C2825 * C1892 + C3472 + C3472 + C153887 * C1902 + C2823 * C1057 +
             C3473 + C3473 + C153913 * C1069 + C2821 * C542 + C3474 + C3474 +
             C153925 * C566) *
                C2818) *
               C153626 * C536 +
           ((C2821 * C543 + C3475 + C3475 + C153925 * C567 + C2823 * C1461 +
             C3476 + C3476 + C153913 * C1471 + C2825 * C3441 + C3477 + C3477 +
             C153887 * C3449) *
                C2818 +
            (C3532 + C3533 + C3534) * C2819 +
            (C3535 + C3536 + C3537) * C153874) *
               C153626 * C537) *
              C1223 +
          (((C2821 * C1057 + C4316 + C4316 + C153925 * C1069 + C2823 * C1892 +
             C4317 + C4317 + C153913 * C1902 + C2825 * C4303 + C4318 + C4318 +
             C153887 * C4311) *
                C2818 +
            (C4352 + C4353 + C4354) * C2819 +
            (C4355 + C4356 + C4357) * C153874) *
               C153626 * C536 -
           (C3766 * C153874 + (C3215 + C3216 + C3217) * C2819 +
            (C2825 * C1319 + C3158 + C3158 + C153887 * C1329 + C2823 * C330 +
             C3159 + C3159 + C153913 * C354 + C2821 * C329 + C3160 + C3160 +
             C153925 * C353) *
                C2818) *
               C153626 * C535 -
           ((C2825 * C4957 + C4967 + C4967 + C153887 * C4963 + C2823 * C3443 +
             C4968 + C4968 + C153913 * C3451 + C2821 * C1459 + C4969 + C4969 +
             C153925 * C1469) *
                C153874 +
            (C2825 * C4958 + C4970 + C4970 + C153887 * C4964 + C2823 * C3442 +
             C4971 + C4971 + C153913 * C3450 + C2821 * C1460 + C4972 + C4972 +
             C153925 * C1470) *
                C2819 +
            (C2825 * C4959 + C4973 + C4973 + C153887 * C4965 + C2823 * C3441 +
             C4974 + C4974 + C153913 * C3449 + C2821 * C1461 + C4975 + C4975 +
             C153925 * C1471) *
                C2818) *
               C153626 * C537) *
              C153563) *
         C153492) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
             C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 + C24119 +
             C153887 * C354) *
                C153922 +
            (C24183 + C24184 + C24185) * C153903 + C24197 * C153874) *
               C153626 * C153527 * C1223 -
           (C25031 * C153874 + (C24492 + C24493 + C24494) * C153903 +
            (C24114 * C1319 + C24435 + C24435 + C153887 * C1329 +
             C24112 * C330 + C24436 + C24436 + C24105 * C354 + C24110 * C329 +
             C24437 + C24437 + C24104 * C353) *
                C153922) *
               C153626 * C153527 * C153563) *
              C1225 +
          (((C24494 + C24493 + C24492) * C153922 +
            (C24491 + C24490 + C24489) * C153903 +
            (C25038 + C25039 + C25040) * C153874) *
               C153626 * C153527 * C153563 -
           (C24198 * C153874 + (C24188 + C24187 + C24186) * C153903 +
            (C24185 + C24184 + C24183) * C153922) *
               C153626 * C153527 * C1223) *
              C1226 +
          ((C24197 * C153922 + (C24191 + C24190 + C24189) * C153903 +
            (C24192 + C24193 + C24194) * C153874) *
               C153626 * C153527 * C1223 -
           ((C24114 * C1315 + C25028 + C25028 + C153887 * C1325 +
             C24112 * C334 + C25029 + C25029 + C24105 * C358 + C24110 * C325 +
             C25030 + C25030 + C24104 * C349) *
                C153874 +
            (C25040 + C25039 + C25038) * C153903 + C25031 * C153922) *
               C153626 * C153527 * C153563) *
              C1227)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
            C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 + C24119 +
            C153887 * C354) *
               C153922 +
           (C24183 + C24184 + C24185) * C153903 + C24197 * C153874) *
              C153626 * C153527 * C1310 -
          (C25031 * C153874 + (C24492 + C24493 + C24494) * C153903 +
           (C24114 * C1319 + C24435 + C24435 + C153887 * C1329 + C24112 * C330 +
            C24436 + C24436 + C24105 * C354 + C24110 * C329 + C24437 + C24437 +
            C24104 * C353) *
               C153922) *
              C153626 * C153527 * C1311 +
          ((C24110 * C330 + C24438 + C24438 + C24104 * C354 + C24112 * C1319 +
            C24439 + C24439 + C24105 * C1329 + C24114 * C3127 + C24440 +
            C24440 + C153887 * C3135) *
               C153922 +
           (C24495 + C24496 + C24497) * C153903 +
           (C24498 + C24499 + C24500) * C153874) *
              C153626 * C153527 * C1312 -
          ((C24114 * C4721 + C25975 + C25975 + C153887 * C4727 +
            C24112 * C3129 + C25976 + C25976 + C24105 * C3137 + C24110 * C1317 +
            C25977 + C25977 + C24104 * C1327) *
               C153874 +
           (C24114 * C4722 + C25978 + C25978 + C153887 * C4728 +
            C24112 * C3128 + C25979 + C25979 + C24105 * C3136 + C24110 * C1318 +
            C25980 + C25980 + C24104 * C1328) *
               C153903 +
           (C24114 * C4723 + C25981 + C25981 + C153887 * C4729 +
            C24112 * C3127 + C25982 + C25982 + C24105 * C3135 + C24110 * C1319 +
            C25983 + C25983 + C24104 * C1329) *
               C153922) *
              C153626 * C153527 * C1313) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
             C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 + C24119 +
             C153887 * C354) *
                C153922 +
            (C24183 + C24184 + C24185) * C153903 + C24197 * C153874) *
               C153626 * C535 -
           (C25269 * C153874 + (C24794 + C24795 + C24796) * C153903 +
            (C24114 * C1892 + C24737 + C24737 + C153887 * C1902 +
             C24112 * C1057 + C24738 + C24738 + C24105 * C1069 + C24110 * C542 +
             C24739 + C24739 + C24104 * C566) *
                C153922) *
               C153626 * C536 +
           ((C24110 * C543 + C24740 + C24740 + C24104 * C567 + C24112 * C1461 +
             C24741 + C24741 + C24105 * C1471 + C24114 * C3441 + C24742 +
             C24742 + C153887 * C3449) *
                C153922 +
            (C24797 + C24798 + C24799) * C153903 +
            (C24800 + C24801 + C24802) * C153874) *
               C153626 * C537) *
              C1223 +
          (((C24110 * C1057 + C25569 + C25569 + C24104 * C1069 +
             C24112 * C1892 + C25570 + C25570 + C24105 * C1902 +
             C24114 * C4303 + C25571 + C25571 + C153887 * C4311) *
                C153922 +
            (C25605 + C25606 + C25607) * C153903 +
            (C25608 + C25609 + C25610) * C153874) *
               C153626 * C536 -
           (C25031 * C153874 + (C24492 + C24493 + C24494) * C153903 +
            (C24114 * C1319 + C24435 + C24435 + C153887 * C1329 +
             C24112 * C330 + C24436 + C24436 + C24105 * C354 + C24110 * C329 +
             C24437 + C24437 + C24104 * C353) *
                C153922) *
               C153626 * C535 -
           ((C24114 * C4957 + C26202 + C26202 + C153887 * C4963 +
             C24112 * C3443 + C26203 + C26203 + C24105 * C3451 +
             C24110 * C1459 + C26204 + C26204 + C24104 * C1469) *
                C153874 +
            (C24114 * C4958 + C26205 + C26205 + C153887 * C4964 +
             C24112 * C3442 + C26206 + C26206 + C24105 * C3450 +
             C24110 * C1460 + C26207 + C26207 + C24104 * C1470) *
                C153903 +
            (C24114 * C4959 + C26208 + C26208 + C153887 * C4965 +
             C24112 * C3441 + C26209 + C26209 + C24105 * C3449 +
             C24110 * C1461 + C26210 + C26210 + C24104 * C1471) *
                C153922) *
               C153626 * C537) *
              C153563) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C28350 * C136 + C28361 + C28361 + C28344 * C152 + C28352 * C329 +
            C28362 + C28362 + C28345 * C353 + C28354 * C330 + C28363 + C28363 +
            C28346 * C354 + C28356 * C1319 + C28364 + C28364 + C28347 * C1329 +
            C28358 * C3127 + C28365 + C28365 + C28348 * C3135) *
               C153454 * C153626 * C153527 * C1223 -
           (C28358 * C4723 + C28509 + C28509 + C28348 * C4729 + C28356 * C3127 +
            C28510 + C28510 + C28347 * C3135 + C28354 * C1319 + C28511 +
            C28511 + C28346 * C1329 + C28352 * C330 + C28512 + C28512 +
            C28345 * C354 + C28350 * C329 + C28513 + C28513 + C28344 * C353) *
               C153454 * C153626 * C153527 * C153563) *
              C1225 +
          ((C28350 * C328 + C28519 + C28519 + C28344 * C352 + C28352 * C331 +
            C28520 + C28520 + C28345 * C355 + C28354 * C1318 + C28521 + C28521 +
            C28346 * C1328 + C28356 * C3128 + C28522 + C28522 + C28347 * C3136 +
            C28358 * C4722 + C28523 + C28523 + C28348 * C4728) *
               C153454 * C153626 * C153527 * C153563 -
           (C28358 * C3128 + C28366 + C28366 + C28348 * C3136 + C28356 * C1318 +
            C28367 + C28367 + C28347 * C1328 + C28354 * C331 + C28368 + C28368 +
            C28346 * C355 + C28352 * C328 + C28369 + C28369 + C28345 * C352 +
            C28350 * C137 + C28370 + C28370 + C28344 * C153) *
               C153454 * C153626 * C153527 * C1223) *
              C1226 +
          ((C28350 * C138 + C28371 + C28371 + C28344 * C154 + C28352 * C327 +
            C28372 + C28372 + C28345 * C351 + C28354 * C332 + C28373 + C28373 +
            C28346 * C356 + C28356 * C1317 + C28374 + C28374 + C28347 * C1327 +
            C28358 * C3129 + C28375 + C28375 + C28348 * C3137) *
               C153454 * C153626 * C153527 * C1223 -
           (C28358 * C4721 + C28799 + C28799 + C28348 * C4727 + C28356 * C3129 +
            C28800 + C28800 + C28347 * C3137 + C28354 * C1317 + C28801 +
            C28801 + C28346 * C1327 + C28352 * C332 + C28802 + C28802 +
            C28345 * C356 + C28350 * C327 + C28803 + C28803 + C28344 * C351) *
               C153454 * C153626 * C153527 * C153563) *
              C1227)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((C28350 * C136 + C28361 + C28361 + C28344 * C152 + C28352 * C329 +
           C28362 + C28362 + C28345 * C353 + C28354 * C330 + C28363 + C28363 +
           C28346 * C354 + C28356 * C1319 + C28364 + C28364 + C28347 * C1329 +
           C28358 * C3127 + C28365 + C28365 + C28348 * C3135) *
              C153454 * C153626 * C153527 * C1310 -
          (C28358 * C4723 + C28509 + C28509 + C28348 * C4729 + C28356 * C3127 +
           C28510 + C28510 + C28347 * C3135 + C28354 * C1319 + C28511 + C28511 +
           C28346 * C1329 + C28352 * C330 + C28512 + C28512 + C28345 * C354 +
           C28350 * C329 + C28513 + C28513 + C28344 * C353) *
              C153454 * C153626 * C153527 * C1311 +
          (C28350 * C330 + C28514 + C28514 + C28344 * C354 + C28352 * C1319 +
           C28515 + C28515 + C28345 * C1329 + C28354 * C3127 + C28516 + C28516 +
           C28346 * C3135 + C28356 * C4723 + C28517 + C28517 + C28347 * C4729 +
           C28358 * C28502 + C28518 + C28518 + C28348 * C28506) *
              C153454 * C153626 * C153527 * C1312 -
          (C28358 * C29312 + C29316 + C29316 + C28348 * C29314 +
           C28356 * C28502 + C29317 + C29317 + C28347 * C28506 +
           C28354 * C4723 + C29318 + C29318 + C28346 * C4729 + C28352 * C3127 +
           C29319 + C29319 + C28345 * C3135 + C28350 * C1319 + C29320 + C29320 +
           C28344 * C1329) *
              C153454 * C153626 * C153527 * C1313) *
         C153492) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C28350 * C136 + C28361 + C28361 + C28344 * C152 + C28352 * C329 +
            C28362 + C28362 + C28345 * C353 + C28354 * C330 + C28363 + C28363 +
            C28346 * C354 + C28356 * C1319 + C28364 + C28364 + C28347 * C1329 +
            C28358 * C3127 + C28365 + C28365 + C28348 * C3135) *
               C153454 * C153626 * C535 -
           (C28358 * C5703 + C28657 + C28657 + C28348 * C5709 + C28356 * C4303 +
            C28658 + C28658 + C28347 * C4311 + C28354 * C1892 + C28659 +
            C28659 + C28346 * C1902 + C28352 * C1057 + C28660 + C28660 +
            C28345 * C1069 + C28350 * C542 + C28661 + C28661 + C28344 * C566) *
               C153454 * C153626 * C536 +
           (C28350 * C543 + C28662 + C28662 + C28344 * C567 + C28352 * C1461 +
            C28663 + C28663 + C28345 * C1471 + C28354 * C3441 + C28664 +
            C28664 + C28346 * C3449 + C28356 * C4959 + C28665 + C28665 +
            C28347 * C4965 + C28358 * C28650 + C28666 + C28666 +
            C28348 * C28654) *
               C153454 * C153626 * C537) *
              C1223 +
          ((C28350 * C1057 + C29099 + C29099 + C28344 * C1069 + C28352 * C1892 +
            C29100 + C29100 + C28345 * C1902 + C28354 * C4303 + C29101 +
            C29101 + C28346 * C4311 + C28356 * C5703 + C29102 + C29102 +
            C28347 * C5709 + C28358 * C29092 + C29103 + C29103 +
            C28348 * C29096) *
               C153454 * C153626 * C536 -
           (C28358 * C4723 + C28509 + C28509 + C28348 * C4729 + C28356 * C3127 +
            C28510 + C28510 + C28347 * C3135 + C28354 * C1319 + C28511 +
            C28511 + C28346 * C1329 + C28352 * C330 + C28512 + C28512 +
            C28345 * C354 + C28350 * C329 + C28513 + C28513 + C28344 * C353) *
               C153454 * C153626 * C535 -
           (C28358 * C29442 + C29446 + C29446 + C28348 * C29444 +
            C28356 * C28650 + C29447 + C29447 + C28347 * C28654 +
            C28354 * C4959 + C29448 + C29448 + C28346 * C4965 + C28352 * C3441 +
            C29449 + C29449 + C28345 * C3449 + C28350 * C1461 + C29450 +
            C29450 + C28344 * C1471) *
               C153454 * C153626 * C537) *
              C153563) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C153922 +
             C193 * C153903 + C194 * C153874) *
                C47609 +
            (C48049 + C48050 + C48051) * C47610 + C48069 * C153890) *
               C153527 * C1223 -
           ((C48808 + C48807 + C48806) * C153890 +
            (C48805 + C48804 + C48803) * C47610 +
            (C408 * C153874 + C409 * C153903 +
             (C134 * C329 + C374 + C374 + C153608 * C353) * C153922) *
                C47609) *
               C153527 * C153563) *
              C1225 +
          (((C409 * C153922 + C408 * C153903 + C407 * C153874) * C47609 +
            (C48809 + C48810 + C48811) * C47610 +
            (C48812 + C48813 + C48814) * C153890) *
               C153527 * C153563 -
           (C48070 * C153890 + (C48060 + C48059 + C48058) * C47610 +
            (C195 * C153874 + C194 * C153903 + C193 * C153922) * C47609) *
               C153527 * C1223) *
              C1226 +
          (((C194 * C153922 + C195 * C153903 + C196 * C153874) * C47609 +
            (C48507 + C48508 + C48509) * C47610 +
            (C48510 + C48511 + C48512) * C153890) *
               C153527 * C1223 -
           (((C134 * C1457 + C1473 + C1473 + C153608 * C1467) * C153874 +
             C7974 * C153903 + C7450 * C153922) *
                C153890 +
            (C1101 * C153874 + C1100 * C153903 + C1099 * C153922) * C47610 +
            (C406 * C153874 + C407 * C153903 + C408 * C153922) * C47609) *
               C153527 * C153563) *
              C1227)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153608 * C152) * C153922 +
            C193 * C153903 + C194 * C153874) *
               C47609 +
           (C48049 + C48050 + C48051) * C47610 + C48069 * C153890) *
              C153527 * C1310 -
          ((C48808 + C48807 + C48806) * C153890 +
           (C48805 + C48804 + C48803) * C47610 +
           (C408 * C153874 + C409 * C153903 +
            (C134 * C329 + C374 + C374 + C153608 * C353) * C153922) *
               C47609) *
              C153527 * C1311 +
          (((C134 * C330 + C375 + C375 + C153608 * C354) * C153922 +
            C410 * C153903 + C411 * C153874) *
               C47609 +
           (C9879 * C153922 + C7452 * C153903 + C7453 * C153874) * C47610 +
           (C9880 * C153922 + C7454 * C153903 + C7455 * C153874) * C153890) *
              C153527 * C1312 -
          (((C134 * C4957 + C8892 + C8892 + C153608 * C4963) * C153874 +
            (C134 * C4958 + C8893 + C8893 + C153608 * C4964) * C153903 +
            (C134 * C4959 + C8894 + C8894 + C153608 * C4965) * C153922) *
               C153890 +
           ((C134 * C4305 + C8895 + C8895 + C153608 * C4313) * C153874 +
            (C134 * C4304 + C8896 + C8896 + C153608 * C4312) * C153903 +
            (C134 * C4303 + C8897 + C8897 + C153608 * C4311) * C153922) *
               C47610 +
           ((C134 * C1317 + C1333 + C1333 + C153608 * C1327) * C153874 +
            (C134 * C1318 + C1334 + C1334 + C153608 * C1328) * C153903 +
            (C134 * C1319 + C1335 + C1335 + C153608 * C1329) * C153922) *
               C47609) *
              C153527 * C1313) *
         C153492) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C153922 +
             C193 * C153903 + C194 * C153874) *
                C47609 +
            (C48049 + C48050 + C48051) * C47610 + C48069 * C153890) *
               C535 -
           ((C48055 + C48056 + C48057) * C153890 +
            (C48054 + C48053 + C48052) * C47610 +
            (C48051 + C48050 + C48049) * C47609) *
               C536 +
           (C48069 * C47609 + (C48057 + C48056 + C48055) * C47610 +
            (C10485 * C153922 + C7739 * C153903 + C7740 * C153874) * C153890) *
               C537) *
              C1223 +
          (((C48803 + C48804 + C48805) * C47609 +
            (C48806 + C48807 + C48808) * C47610 +
            (C49397 + C49398 + C49399) * C153890) *
               C536 -
           (C49401 * C153890 + (C48805 + C48804 + C48803) * C47610 +
            (C408 * C153874 + C409 * C153903 +
             (C134 * C329 + C374 + C374 + C153608 * C353) * C153922) *
                C47609) *
               C535 -
           (((C134 * C9115 + C9130 + C9130 + C153608 * C9121) * C153874 +
             (C134 * C9116 + C9131 + C9131 + C153608 * C9122) * C153903 +
             (C134 * C9117 + C9132 + C9132 + C153608 * C9123) * C153922) *
                C153890 +
            (C49399 + C49398 + C49397) * C47610 + C49401 * C47609) *
               C537) *
              C153563) *
         C153492) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
             C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
             C153887 * C354) *
                C153454 * C47609 +
            (C52092 + C52093 + C52094) * C153454 * C47610 + C52106 * C153890) *
               C153527 * C1223 -
           ((C52880 + C52879 + C52878) * C153454 * C153890 +
            (C52877 + C52876 + C52875) * C153454 * C47610 +
            (C2825 * C1319 + C3158 + C3158 + C153887 * C1329 + C2823 * C330 +
             C3159 + C3159 + C153913 * C354 + C2821 * C329 + C3160 + C3160 +
             C153925 * C353) *
                C153454 * C47609) *
               C153527 * C153563) *
              C1225 +
          (((C3217 + C3216 + C3215) * C153454 * C47609 +
            (C4352 + C4353 + C4354) * C153454 * C47610 +
            (C52881 + C52882 + C52883) * C153454 * C153890) *
               C153527 * C153563 -
           (C52091 * C153890 + (C3529 + C3530 + C3531) * C153454 * C47610 +
            (C2896 + C2895 + C2894) * C153454 * C47609) *
               C153527 * C1223) *
              C1226 +
          ((C2908 * C153454 * C47609 +
            (C3528 + C3527 + C3526) * C153454 * C47610 +
            (C3535 + C3536 + C3537) * C153454 * C153890) *
               C153527 * C1223 -
           ((C2825 * C4957 + C4967 + C4967 + C153887 * C4963 + C2823 * C3443 +
             C4968 + C4968 + C153913 * C3451 + C2821 * C1459 + C4969 + C4969 +
             C153925 * C1469) *
                C153454 * C153890 +
            (C4357 + C4356 + C4355) * C153454 * C47610 +
            C3766 * C153454 * C47609) *
               C153527 * C153563) *
              C1227)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
            C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
            C153887 * C354) *
               C153454 * C47609 +
           (C52092 + C52093 + C52094) * C153454 * C47610 + C52106 * C153890) *
              C153527 * C1310 -
          ((C52880 + C52879 + C52878) * C153454 * C153890 +
           (C52877 + C52876 + C52875) * C153454 * C47610 +
           (C2825 * C1319 + C3158 + C3158 + C153887 * C1329 + C2823 * C330 +
            C3159 + C3159 + C153913 * C354 + C2821 * C329 + C3160 + C3160 +
            C153925 * C353) *
               C153454 * C47609) *
              C153527 * C1311 +
          ((C2821 * C330 + C3161 + C3161 + C153925 * C354 + C2823 * C1319 +
            C3162 + C3162 + C153913 * C1329 + C2825 * C3127 + C3163 + C3163 +
            C153887 * C3135) *
               C153454 * C47609 +
           (C2821 * C1892 + C5719 + C5719 + C153925 * C1902 + C2823 * C4303 +
            C5718 + C5718 + C153913 * C4311 + C2825 * C5703 + C5717 + C5717 +
            C153887 * C5709) *
               C153454 * C47610 +
           (C2821 * C3441 + C51811 + C51811 + C153925 * C3449 + C2823 * C4959 +
            C51812 + C51812 + C153913 * C4965 + C2825 * C28650 + C51813 +
            C51813 + C153887 * C28654) *
               C153454 * C153890) *
              C153527 * C1312 -
          ((C2825 * C29442 + C53248 + C53248 + C153887 * C29444 +
            C2823 * C28650 + C53249 + C53249 + C153913 * C28654 +
            C2821 * C4959 + C53250 + C53250 + C153925 * C4965) *
               C153454 * C153890 +
           (C2825 * C29092 + C53251 + C53251 + C153887 * C29096 +
            C2823 * C5703 + C53252 + C53252 + C153913 * C5709 + C2821 * C4303 +
            C53253 + C53253 + C153925 * C4311) *
               C153454 * C47610 +
           (C2825 * C4723 + C4737 + C4737 + C153887 * C4729 + C2823 * C3127 +
            C4738 + C4738 + C153913 * C3135 + C2821 * C1319 + C4739 + C4739 +
            C153925 * C1329) *
               C153454 * C47609) *
              C153527 * C1313) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
             C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
             C153887 * C354) *
                C153454 * C47609 +
            (C52092 + C52093 + C52094) * C153454 * C47610 + C52106 * C153890) *
               C535 -
           ((C52098 + C52099 + C52100) * C153454 * C153890 +
            (C52097 + C52096 + C52095) * C153454 * C47610 +
            (C52094 + C52093 + C52092) * C153454 * C47609) *
               C536 +
           (C52106 * C47609 + (C52100 + C52099 + C52098) * C153454 * C47610 +
            (C2821 * C7673 + C52053 + C52053 + C153925 * C7681 + C2823 * C9117 +
             C52054 + C52054 + C153913 * C9123 + C2825 * C31195 + C52055 +
             C52055 + C153887 * C31199) *
                C153454 * C153890) *
               C537) *
              C1223 +
          (((C52875 + C52876 + C52877) * C153454 * C47609 +
            (C52878 + C52879 + C52880) * C153454 * C47610 +
            (C53490 + C53491 + C53492) * C153454 * C153890) *
               C536 -
           (C53489 * C153890 + (C52877 + C52876 + C52875) * C153454 * C47610 +
            (C2825 * C1319 + C3158 + C3158 + C153887 * C1329 + C2823 * C330 +
             C3159 + C3159 + C153913 * C354 + C2821 * C329 + C3160 + C3160 +
             C153925 * C353) *
                C153454 * C47609) *
               C535 -
           ((C2825 * C32641 + C53479 + C53479 + C153887 * C32643 +
             C2823 * C31195 + C53480 + C53480 + C153913 * C31199 +
             C2821 * C9117 + C53481 + C53481 + C153925 * C9123) *
                C153454 * C153890 +
            (C53492 + C53491 + C53490) * C153454 * C47610 + C53489 * C47609) *
               C537) *
              C153563) *
         C153492) /
            (p * q * std::sqrt(p + q));
    d2ee[218] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
              C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
              C153887 * C354) *
                 C2818 +
             (C2894 + C2895 + C2896) * C2819 + C2908 * C153874) *
                C153626 * C153838 -
            (C4004 * C153874 + (C3529 + C3530 + C3531) * C2819 +
             (C2825 * C1892 + C3472 + C3472 + C153887 * C1902 + C2823 * C1057 +
              C3473 + C3473 + C153913 * C1069 + C2821 * C542 + C3474 + C3474 +
              C153925 * C566) *
                 C2818) *
                C153626 * C153591) *
               C1223 +
           (((C2821 * C1057 + C4316 + C4316 + C153925 * C1069 + C2823 * C1892 +
              C4317 + C4317 + C153913 * C1902 + C2825 * C4303 + C4318 + C4318 +
              C153887 * C4311) *
                 C2818 +
             (C4352 + C4353 + C4354) * C2819 +
             (C4355 + C4356 + C4357) * C153874) *
                C153626 * C153591 -
            (C3766 * C153874 + (C3215 + C3216 + C3217) * C2819 +
             (C2825 * C1319 + C3158 + C3158 + C153887 * C1329 + C2823 * C330 +
              C3159 + C3159 + C153913 * C354 + C2821 * C329 + C3160 + C3160 +
              C153925 * C353) *
                 C2818) *
                C153626 * C153838) *
               C153563) *
              C153829 +
          ((((C3531 + C3530 + C3529) * C2818 + (C3528 + C3527 + C3526) * C2819 +
             (C4011 + C4012 + C4013) * C153874) *
                C153626 * C153591 -
            (C2909 * C153874 + (C2899 + C2898 + C2897) * C2819 +
             (C2896 + C2895 + C2894) * C2818) *
                C153626 * C153838) *
               C1223 +
           (((C3217 + C3216 + C3215) * C2818 + (C3214 + C3213 + C3212) * C2819 +
             (C3773 + C3774 + C3775) * C153874) *
                C153626 * C153838 -
            ((C2825 * C4306 + C4337 + C4337 + C153887 * C4314 + C2823 * C1889 +
              C4338 + C4338 + C153913 * C1899 + C2821 * C1060 + C4339 + C4339 +
              C153925 * C1072) *
                 C153874 +
             (C4357 + C4356 + C4355) * C2819 +
             (C4354 + C4353 + C4352) * C2818) *
                C153626 * C153591) *
               C153563) *
              C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C122 + C193 * C123 +
             C194 * C124 + C195 * C125 + C196 * C126) *
                C153626 * C153838 -
            (C619 * C126 + C620 * C125 + C621 * C124 + C622 * C123 +
             (C134 * C542 + C587 + C587 + C153608 * C566) * C122) *
                C153626 * C153591) *
               C1223 +
           (((C134 * C1057 + C1076 + C1076 + C153608 * C1069) * C122 +
             C1098 * C123 + C1099 * C124 + C1100 * C125 + C1101 * C126) *
                C153626 * C153591 -
            (C406 * C126 + C407 * C125 + C408 * C124 + C409 * C123 +
             (C134 * C329 + C374 + C374 + C153608 * C353) * C122) *
                C153626 * C153838) *
               C153563) *
              C153829 +
          (((C622 * C122 + C621 * C123 + C620 * C124 + C619 * C125 +
             C895 * C126) *
                C153626 * C153591 -
            (C197 * C126 + C196 * C125 + C195 * C124 + C194 * C123 +
             C193 * C122) *
                C153626 * C153838) *
               C1223 +
           ((C409 * C122 + C408 * C123 + C407 * C124 + C406 * C125 +
             C762 * C126) *
                C153626 * C153838 -
            ((C134 * C1062 + C1089 + C1089 + C153608 * C1074) * C126 +
             C1101 * C125 + C1100 * C124 + C1099 * C123 + C1098 * C122) *
                C153626 * C153591) *
               C153563) *
              C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
              C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 +
              C24119 + C153887 * C354) *
                 C153922 +
             (C24183 + C24184 + C24185) * C153903 + C24197 * C153874) *
                C153626 * C153838 -
            (C25269 * C153874 + (C24794 + C24795 + C24796) * C153903 +
             (C24114 * C1892 + C24737 + C24737 + C153887 * C1902 +
              C24112 * C1057 + C24738 + C24738 + C24105 * C1069 +
              C24110 * C542 + C24739 + C24739 + C24104 * C566) *
                 C153922) *
                C153626 * C153591) *
               C1223 +
           (((C24110 * C1057 + C25569 + C25569 + C24104 * C1069 +
              C24112 * C1892 + C25570 + C25570 + C24105 * C1902 +
              C24114 * C4303 + C25571 + C25571 + C153887 * C4311) *
                 C153922 +
             (C25605 + C25606 + C25607) * C153903 +
             (C25608 + C25609 + C25610) * C153874) *
                C153626 * C153591 -
            (C25031 * C153874 + (C24492 + C24493 + C24494) * C153903 +
             (C24114 * C1319 + C24435 + C24435 + C153887 * C1329 +
              C24112 * C330 + C24436 + C24436 + C24105 * C354 + C24110 * C329 +
              C24437 + C24437 + C24104 * C353) *
                 C153922) *
                C153626 * C153838) *
               C153563) *
              C153829 +
          ((((C24796 + C24795 + C24794) * C153922 +
             (C24793 + C24792 + C24791) * C153903 +
             (C25276 + C25277 + C25278) * C153874) *
                C153626 * C153591 -
            (C24198 * C153874 + (C24188 + C24187 + C24186) * C153903 +
             (C24185 + C24184 + C24183) * C153922) *
                C153626 * C153838) *
               C1223 +
           (((C24494 + C24493 + C24492) * C153922 +
             (C24491 + C24490 + C24489) * C153903 +
             (C25038 + C25039 + C25040) * C153874) *
                C153626 * C153838 -
            ((C24114 * C4306 + C25590 + C25590 + C153887 * C4314 +
              C24112 * C1889 + C25591 + C25591 + C24105 * C1899 +
              C24110 * C1060 + C25592 + C25592 + C24104 * C1072) *
                 C153874 +
             (C25610 + C25609 + C25608) * C153903 +
             (C25607 + C25606 + C25605) * C153922) *
                C153626 * C153591) *
               C153563) *
              C153498)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C28350 * C136 + C28361 + C28361 + C28344 * C152 + C28352 * C329 +
             C28362 + C28362 + C28345 * C353 + C28354 * C330 + C28363 + C28363 +
             C28346 * C354 + C28356 * C1319 + C28364 + C28364 + C28347 * C1329 +
             C28358 * C3127 + C28365 + C28365 + C28348 * C3135) *
                C153454 * C153626 * C153838 -
            (C28358 * C5703 + C28657 + C28657 + C28348 * C5709 +
             C28356 * C4303 + C28658 + C28658 + C28347 * C4311 +
             C28354 * C1892 + C28659 + C28659 + C28346 * C1902 +
             C28352 * C1057 + C28660 + C28660 + C28345 * C1069 + C28350 * C542 +
             C28661 + C28661 + C28344 * C566) *
                C153454 * C153626 * C153591) *
               C1223 +
           ((C28350 * C1057 + C29099 + C29099 + C28344 * C1069 +
             C28352 * C1892 + C29100 + C29100 + C28345 * C1902 +
             C28354 * C4303 + C29101 + C29101 + C28346 * C4311 +
             C28356 * C5703 + C29102 + C29102 + C28347 * C5709 +
             C28358 * C29092 + C29103 + C29103 + C28348 * C29096) *
                C153454 * C153626 * C153591 -
            (C28358 * C4723 + C28509 + C28509 + C28348 * C4729 +
             C28356 * C3127 + C28510 + C28510 + C28347 * C3135 +
             C28354 * C1319 + C28511 + C28511 + C28346 * C1329 + C28352 * C330 +
             C28512 + C28512 + C28345 * C354 + C28350 * C329 + C28513 + C28513 +
             C28344 * C353) *
                C153454 * C153626 * C153838) *
               C153563) *
              C153829 +
          (((C28350 * C541 + C28667 + C28667 + C28344 * C565 + C28352 * C1058 +
             C28668 + C28668 + C28345 * C1070 + C28354 * C1891 + C28669 +
             C28669 + C28346 * C1901 + C28356 * C4304 + C28670 + C28670 +
             C28347 * C4312 + C28358 * C5702 + C28671 + C28671 +
             C28348 * C5708) *
                C153454 * C153626 * C153591 -
            (C28358 * C3128 + C28366 + C28366 + C28348 * C3136 +
             C28356 * C1318 + C28367 + C28367 + C28347 * C1328 + C28354 * C331 +
             C28368 + C28368 + C28346 * C355 + C28352 * C328 + C28369 + C28369 +
             C28345 * C352 + C28350 * C137 + C28370 + C28370 + C28344 * C153) *
                C153454 * C153626 * C153838) *
               C1223 +
           ((C28350 * C328 + C28519 + C28519 + C28344 * C352 + C28352 * C331 +
             C28520 + C28520 + C28345 * C355 + C28354 * C1318 + C28521 +
             C28521 + C28346 * C1328 + C28356 * C3128 + C28522 + C28522 +
             C28347 * C3136 + C28358 * C4722 + C28523 + C28523 +
             C28348 * C4728) *
                C153454 * C153626 * C153838 -
            (C28358 * C29093 + C29104 + C29104 + C28348 * C29097 +
             C28356 * C5702 + C29105 + C29105 + C28347 * C5708 +
             C28354 * C4304 + C29106 + C29106 + C28346 * C4312 +
             C28352 * C1891 + C29107 + C29107 + C28345 * C1901 +
             C28350 * C1058 + C29108 + C29108 + C28344 * C1070) *
                C153454 * C153626 * C153591) *
               C153563) *
              C153498)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C153608 * C152) * C153922 +
              C193 * C153903 + C194 * C153874) *
                 C47609 +
             (C48049 + C48050 + C48051) * C47610 + C48069 * C153890) *
                C153838 -
            ((C48055 + C48056 + C48057) * C153890 +
             (C48054 + C48053 + C48052) * C47610 +
             (C48051 + C48050 + C48049) * C47609) *
                C153591) *
               C1223 +
           (((C48803 + C48804 + C48805) * C47609 +
             (C48806 + C48807 + C48808) * C47610 +
             (C49397 + C49398 + C49399) * C153890) *
                C153591 -
            (C49401 * C153890 + (C48805 + C48804 + C48803) * C47610 +
             (C408 * C153874 + C409 * C153903 +
              (C134 * C329 + C374 + C374 + C153608 * C353) * C153922) *
                 C47609) *
                C153838) *
               C153563) *
              C153829 +
          ((((C48058 + C48059 + C48060) * C47609 +
             (C48061 + C48062 + C48063) * C47610 +
             (C48064 + C48065 + C48066) * C153890) *
                C153591 -
            (C48070 * C153890 + (C48060 + C48059 + C48058) * C47610 +
             (C195 * C153874 + C194 * C153903 + C193 * C153922) * C47609) *
                C153838) *
               C1223 +
           (((C409 * C153922 + C408 * C153903 + C407 * C153874) * C47609 +
             (C48809 + C48810 + C48811) * C47610 +
             (C48812 + C48813 + C48814) * C153890) *
                C153838 -
            (((C134 * C8488 + C8513 + C8513 + C153608 * C8490) * C153874 +
              C8525 * C153903 + C8524 * C153922) *
                 C153890 +
             (C48814 + C48813 + C48812) * C47610 +
             (C48811 + C48810 + C48809) * C47609) *
                C153591) *
               C153563) *
              C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
              C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
              C153887 * C354) *
                 C153454 * C47609 +
             (C52092 + C52093 + C52094) * C153454 * C47610 + C52106 * C153890) *
                C153838 -
            ((C52098 + C52099 + C52100) * C153454 * C153890 +
             (C52097 + C52096 + C52095) * C153454 * C47610 +
             (C52094 + C52093 + C52092) * C153454 * C47609) *
                C153591) *
               C1223 +
           (((C52875 + C52876 + C52877) * C153454 * C47609 +
             (C52878 + C52879 + C52880) * C153454 * C47610 +
             (C53490 + C53491 + C53492) * C153454 * C153890) *
                C153591 -
            (C53489 * C153890 + (C52877 + C52876 + C52875) * C153454 * C47610 +
             (C2825 * C1319 + C3158 + C3158 + C153887 * C1329 + C2823 * C330 +
              C3159 + C3159 + C153913 * C354 + C2821 * C329 + C3160 + C3160 +
              C153925 * C353) *
                 C153454 * C47609) *
                C153838) *
               C153563) *
              C153829 +
          ((((C3531 + C3530 + C3529) * C153454 * C47609 +
             (C3532 + C3533 + C3534) * C153454 * C47610 +
             (C52101 + C52102 + C52103) * C153454 * C153890) *
                C153591 -
            (C52091 * C153890 + (C3529 + C3530 + C3531) * C153454 * C47610 +
             (C2896 + C2895 + C2894) * C153454 * C47609) *
                C153838) *
               C1223 +
           (((C3217 + C3216 + C3215) * C153454 * C47609 +
             (C4352 + C4353 + C4354) * C153454 * C47610 +
             (C52881 + C52882 + C52883) * C153454 * C153890) *
                C153838 -
            ((C2825 * C31999 + C52854 + C52854 + C153887 * C32001 +
              C2823 * C6303 + C52855 + C52855 + C153913 * C6315 +
              C2821 * C6304 + C52856 + C52856 + C153925 * C6316) *
                 C153454 * C153890 +
             (C52883 + C52882 + C52881) * C153454 * C47610 +
             (C4354 + C4353 + C4352) * C153454 * C47609) *
                C153591) *
               C153563) *
              C153498)) /
            (p * q * std::sqrt(p + q));
    d2ee[219] +=
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C136 + C161 + C161 + C153608 * C152) * C122 + C193 * C123 +
           C194 * C124 + C195 * C125 + C196 * C126) *
              C153626 * C153527 * C1310 -
          (C406 * C126 + C407 * C125 + C408 * C124 + C409 * C123 +
           (C134 * C329 + C374 + C374 + C153608 * C353) * C122) *
              C153626 * C153527 * C1311 +
          ((C134 * C330 + C375 + C375 + C153608 * C354) * C122 + C410 * C123 +
           C411 * C124 + C412 * C125 + C413 * C126) *
              C153626 * C153527 * C1312 -
          ((C134 * C1315 + C1331 + C1331 + C153608 * C1325) * C126 +
           (C134 * C1316 + C1332 + C1332 + C153608 * C1326) * C125 +
           (C134 * C1317 + C1333 + C1333 + C153608 * C1327) * C124 +
           (C134 * C1318 + C1334 + C1334 + C153608 * C1328) * C123 +
           (C134 * C1319 + C1335 + C1335 + C153608 * C1329) * C122) *
              C153626 * C153527 * C1313) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153608 * C152) * C122 + C193 * C123 +
            C194 * C124 + C195 * C125 + C196 * C126) *
               C153626 * C153527 * C1223 -
           (C406 * C126 + C407 * C125 + C408 * C124 + C409 * C123 +
            (C134 * C329 + C374 + C374 + C153608 * C353) * C122) *
               C153626 * C153527 * C153563) *
              C1225 +
          ((C409 * C122 + C408 * C123 + C407 * C124 + C406 * C125 +
            C762 * C126) *
               C153626 * C153527 * C153563 -
           (C197 * C126 + C196 * C125 + C195 * C124 + C194 * C123 +
            C193 * C122) *
               C153626 * C153527 * C1223) *
              C1226 +
          ((C194 * C122 + C195 * C123 + C196 * C124 + C197 * C125 +
            C198 * C126) *
               C153626 * C153527 * C1223 -
           ((C134 * C753 + C759 + C759 + C153608 * C755) * C126 + C762 * C125 +
            C406 * C124 + C407 * C123 + C408 * C122) *
               C153626 * C153527 * C153563) *
              C1227)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
             C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
             C153887 * C354) *
                C2818 +
            (C2894 + C2895 + C2896) * C2819 + C2908 * C153874) *
               C153626 * C153527 * C1223 -
           (C3766 * C153874 + (C3215 + C3216 + C3217) * C2819 +
            (C2825 * C1319 + C3158 + C3158 + C153887 * C1329 + C2823 * C330 +
             C3159 + C3159 + C153913 * C354 + C2821 * C329 + C3160 + C3160 +
             C153925 * C353) *
                C2818) *
               C153626 * C153527 * C153563) *
              C1225 +
          (((C3217 + C3216 + C3215) * C2818 + (C3214 + C3213 + C3212) * C2819 +
            (C3773 + C3774 + C3775) * C153874) *
               C153626 * C153527 * C153563 -
           (C2909 * C153874 + (C2899 + C2898 + C2897) * C2819 +
            (C2896 + C2895 + C2894) * C2818) *
               C153626 * C153527 * C1223) *
              C1226 +
          ((C2908 * C2818 + (C2902 + C2901 + C2900) * C2819 +
            (C2903 + C2904 + C2905) * C153874) *
               C153626 * C153527 * C1223 -
           ((C2825 * C1315 + C3763 + C3763 + C153887 * C1325 + C2823 * C334 +
             C3764 + C3764 + C153913 * C358 + C2821 * C325 + C3765 + C3765 +
             C153925 * C349) *
                C153874 +
            (C3775 + C3774 + C3773) * C2819 + C3766 * C2818) *
               C153626 * C153527 * C153563) *
              C1227)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
            C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
            C153887 * C354) *
               C2818 +
           (C2894 + C2895 + C2896) * C2819 + C2908 * C153874) *
              C153626 * C153527 * C1310 -
          (C3766 * C153874 + (C3215 + C3216 + C3217) * C2819 +
           (C2825 * C1319 + C3158 + C3158 + C153887 * C1329 + C2823 * C330 +
            C3159 + C3159 + C153913 * C354 + C2821 * C329 + C3160 + C3160 +
            C153925 * C353) *
               C2818) *
              C153626 * C153527 * C1311 +
          ((C2821 * C330 + C3161 + C3161 + C153925 * C354 + C2823 * C1319 +
            C3162 + C3162 + C153913 * C1329 + C2825 * C3127 + C3163 + C3163 +
            C153887 * C3135) *
               C2818 +
           (C3218 + C3219 + C3220) * C2819 +
           (C3221 + C3222 + C3223) * C153874) *
              C153626 * C153527 * C1312 -
          ((C2825 * C4721 + C4731 + C4731 + C153887 * C4727 + C2823 * C3129 +
            C4732 + C4732 + C153913 * C3137 + C2821 * C1317 + C4733 + C4733 +
            C153925 * C1327) *
               C153874 +
           (C2825 * C4722 + C4734 + C4734 + C153887 * C4728 + C2823 * C3128 +
            C4735 + C4735 + C153913 * C3136 + C2821 * C1318 + C4736 + C4736 +
            C153925 * C1328) *
               C2819 +
           (C2825 * C4723 + C4737 + C4737 + C153887 * C4729 + C2823 * C3127 +
            C4738 + C4738 + C153913 * C3135 + C2821 * C1319 + C4739 + C4739 +
            C153925 * C1329) *
               C2818) *
              C153626 * C153527 * C1313) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
             C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 + C24119 +
             C153887 * C354) *
                C153922 +
            (C24183 + C24184 + C24185) * C153903 + C24197 * C153874) *
               C153626 * C153527 * C1223 -
           (C25031 * C153874 + (C24492 + C24493 + C24494) * C153903 +
            (C24114 * C1319 + C24435 + C24435 + C153887 * C1329 +
             C24112 * C330 + C24436 + C24436 + C24105 * C354 + C24110 * C329 +
             C24437 + C24437 + C24104 * C353) *
                C153922) *
               C153626 * C153527 * C153563) *
              C1225 +
          (((C24494 + C24493 + C24492) * C153922 +
            (C24491 + C24490 + C24489) * C153903 +
            (C25038 + C25039 + C25040) * C153874) *
               C153626 * C153527 * C153563 -
           (C24198 * C153874 + (C24188 + C24187 + C24186) * C153903 +
            (C24185 + C24184 + C24183) * C153922) *
               C153626 * C153527 * C1223) *
              C1226 +
          ((C24197 * C153922 + (C24191 + C24190 + C24189) * C153903 +
            (C24192 + C24193 + C24194) * C153874) *
               C153626 * C153527 * C1223 -
           ((C24114 * C1315 + C25028 + C25028 + C153887 * C1325 +
             C24112 * C334 + C25029 + C25029 + C24105 * C358 + C24110 * C325 +
             C25030 + C25030 + C24104 * C349) *
                C153874 +
            (C25040 + C25039 + C25038) * C153903 + C25031 * C153922) *
               C153626 * C153527 * C153563) *
              C1227)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
            C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 + C24119 +
            C153887 * C354) *
               C153922 +
           (C24183 + C24184 + C24185) * C153903 + C24197 * C153874) *
              C153626 * C153527 * C1310 -
          (C25031 * C153874 + (C24492 + C24493 + C24494) * C153903 +
           (C24114 * C1319 + C24435 + C24435 + C153887 * C1329 + C24112 * C330 +
            C24436 + C24436 + C24105 * C354 + C24110 * C329 + C24437 + C24437 +
            C24104 * C353) *
               C153922) *
              C153626 * C153527 * C1311 +
          ((C24110 * C330 + C24438 + C24438 + C24104 * C354 + C24112 * C1319 +
            C24439 + C24439 + C24105 * C1329 + C24114 * C3127 + C24440 +
            C24440 + C153887 * C3135) *
               C153922 +
           (C24495 + C24496 + C24497) * C153903 +
           (C24498 + C24499 + C24500) * C153874) *
              C153626 * C153527 * C1312 -
          ((C24114 * C4721 + C25975 + C25975 + C153887 * C4727 +
            C24112 * C3129 + C25976 + C25976 + C24105 * C3137 + C24110 * C1317 +
            C25977 + C25977 + C24104 * C1327) *
               C153874 +
           (C24114 * C4722 + C25978 + C25978 + C153887 * C4728 +
            C24112 * C3128 + C25979 + C25979 + C24105 * C3136 + C24110 * C1318 +
            C25980 + C25980 + C24104 * C1328) *
               C153903 +
           (C24114 * C4723 + C25981 + C25981 + C153887 * C4729 +
            C24112 * C3127 + C25982 + C25982 + C24105 * C3135 + C24110 * C1319 +
            C25983 + C25983 + C24104 * C1329) *
               C153922) *
              C153626 * C153527 * C1313) *
         C153492) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C28350 * C136 + C28361 + C28361 + C28344 * C152 + C28352 * C329 +
            C28362 + C28362 + C28345 * C353 + C28354 * C330 + C28363 + C28363 +
            C28346 * C354 + C28356 * C1319 + C28364 + C28364 + C28347 * C1329 +
            C28358 * C3127 + C28365 + C28365 + C28348 * C3135) *
               C153454 * C153626 * C153527 * C1223 -
           (C28358 * C4723 + C28509 + C28509 + C28348 * C4729 + C28356 * C3127 +
            C28510 + C28510 + C28347 * C3135 + C28354 * C1319 + C28511 +
            C28511 + C28346 * C1329 + C28352 * C330 + C28512 + C28512 +
            C28345 * C354 + C28350 * C329 + C28513 + C28513 + C28344 * C353) *
               C153454 * C153626 * C153527 * C153563) *
              C1225 +
          ((C28350 * C328 + C28519 + C28519 + C28344 * C352 + C28352 * C331 +
            C28520 + C28520 + C28345 * C355 + C28354 * C1318 + C28521 + C28521 +
            C28346 * C1328 + C28356 * C3128 + C28522 + C28522 + C28347 * C3136 +
            C28358 * C4722 + C28523 + C28523 + C28348 * C4728) *
               C153454 * C153626 * C153527 * C153563 -
           (C28358 * C3128 + C28366 + C28366 + C28348 * C3136 + C28356 * C1318 +
            C28367 + C28367 + C28347 * C1328 + C28354 * C331 + C28368 + C28368 +
            C28346 * C355 + C28352 * C328 + C28369 + C28369 + C28345 * C352 +
            C28350 * C137 + C28370 + C28370 + C28344 * C153) *
               C153454 * C153626 * C153527 * C1223) *
              C1226 +
          ((C28350 * C138 + C28371 + C28371 + C28344 * C154 + C28352 * C327 +
            C28372 + C28372 + C28345 * C351 + C28354 * C332 + C28373 + C28373 +
            C28346 * C356 + C28356 * C1317 + C28374 + C28374 + C28347 * C1327 +
            C28358 * C3129 + C28375 + C28375 + C28348 * C3137) *
               C153454 * C153626 * C153527 * C1223 -
           (C28358 * C4721 + C28799 + C28799 + C28348 * C4727 + C28356 * C3129 +
            C28800 + C28800 + C28347 * C3137 + C28354 * C1317 + C28801 +
            C28801 + C28346 * C1327 + C28352 * C332 + C28802 + C28802 +
            C28345 * C356 + C28350 * C327 + C28803 + C28803 + C28344 * C351) *
               C153454 * C153626 * C153527 * C153563) *
              C1227)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((C28350 * C136 + C28361 + C28361 + C28344 * C152 + C28352 * C329 +
           C28362 + C28362 + C28345 * C353 + C28354 * C330 + C28363 + C28363 +
           C28346 * C354 + C28356 * C1319 + C28364 + C28364 + C28347 * C1329 +
           C28358 * C3127 + C28365 + C28365 + C28348 * C3135) *
              C153454 * C153626 * C153527 * C1310 -
          (C28358 * C4723 + C28509 + C28509 + C28348 * C4729 + C28356 * C3127 +
           C28510 + C28510 + C28347 * C3135 + C28354 * C1319 + C28511 + C28511 +
           C28346 * C1329 + C28352 * C330 + C28512 + C28512 + C28345 * C354 +
           C28350 * C329 + C28513 + C28513 + C28344 * C353) *
              C153454 * C153626 * C153527 * C1311 +
          (C28350 * C330 + C28514 + C28514 + C28344 * C354 + C28352 * C1319 +
           C28515 + C28515 + C28345 * C1329 + C28354 * C3127 + C28516 + C28516 +
           C28346 * C3135 + C28356 * C4723 + C28517 + C28517 + C28347 * C4729 +
           C28358 * C28502 + C28518 + C28518 + C28348 * C28506) *
              C153454 * C153626 * C153527 * C1312 -
          (C28358 * C29312 + C29316 + C29316 + C28348 * C29314 +
           C28356 * C28502 + C29317 + C29317 + C28347 * C28506 +
           C28354 * C4723 + C29318 + C29318 + C28346 * C4729 + C28352 * C3127 +
           C29319 + C29319 + C28345 * C3135 + C28350 * C1319 + C29320 + C29320 +
           C28344 * C1329) *
              C153454 * C153626 * C153527 * C1313) *
         C153492) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C153922 +
             C193 * C153903 + C194 * C153874) *
                C47609 +
            (C48049 + C48050 + C48051) * C47610 + C48069 * C153890) *
               C153527 * C1223 -
           ((C48808 + C48807 + C48806) * C153890 +
            (C48805 + C48804 + C48803) * C47610 +
            (C408 * C153874 + C409 * C153903 +
             (C134 * C329 + C374 + C374 + C153608 * C353) * C153922) *
                C47609) *
               C153527 * C153563) *
              C1225 +
          (((C409 * C153922 + C408 * C153903 + C407 * C153874) * C47609 +
            (C48809 + C48810 + C48811) * C47610 +
            (C48812 + C48813 + C48814) * C153890) *
               C153527 * C153563 -
           (C48070 * C153890 + (C48060 + C48059 + C48058) * C47610 +
            (C195 * C153874 + C194 * C153903 + C193 * C153922) * C47609) *
               C153527 * C1223) *
              C1226 +
          (((C194 * C153922 + C195 * C153903 + C196 * C153874) * C47609 +
            (C48507 + C48508 + C48509) * C47610 +
            (C48510 + C48511 + C48512) * C153890) *
               C153527 * C1223 -
           (((C134 * C1457 + C1473 + C1473 + C153608 * C1467) * C153874 +
             C7974 * C153903 + C7450 * C153922) *
                C153890 +
            (C1101 * C153874 + C1100 * C153903 + C1099 * C153922) * C47610 +
            (C406 * C153874 + C407 * C153903 + C408 * C153922) * C47609) *
               C153527 * C153563) *
              C1227)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153608 * C152) * C153922 +
            C193 * C153903 + C194 * C153874) *
               C47609 +
           (C48049 + C48050 + C48051) * C47610 + C48069 * C153890) *
              C153527 * C1310 -
          ((C48808 + C48807 + C48806) * C153890 +
           (C48805 + C48804 + C48803) * C47610 +
           (C408 * C153874 + C409 * C153903 +
            (C134 * C329 + C374 + C374 + C153608 * C353) * C153922) *
               C47609) *
              C153527 * C1311 +
          (((C134 * C330 + C375 + C375 + C153608 * C354) * C153922 +
            C410 * C153903 + C411 * C153874) *
               C47609 +
           (C9879 * C153922 + C7452 * C153903 + C7453 * C153874) * C47610 +
           (C9880 * C153922 + C7454 * C153903 + C7455 * C153874) * C153890) *
              C153527 * C1312 -
          (((C134 * C4957 + C8892 + C8892 + C153608 * C4963) * C153874 +
            (C134 * C4958 + C8893 + C8893 + C153608 * C4964) * C153903 +
            (C134 * C4959 + C8894 + C8894 + C153608 * C4965) * C153922) *
               C153890 +
           ((C134 * C4305 + C8895 + C8895 + C153608 * C4313) * C153874 +
            (C134 * C4304 + C8896 + C8896 + C153608 * C4312) * C153903 +
            (C134 * C4303 + C8897 + C8897 + C153608 * C4311) * C153922) *
               C47610 +
           ((C134 * C1317 + C1333 + C1333 + C153608 * C1327) * C153874 +
            (C134 * C1318 + C1334 + C1334 + C153608 * C1328) * C153903 +
            (C134 * C1319 + C1335 + C1335 + C153608 * C1329) * C153922) *
               C47609) *
              C153527 * C1313) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
             C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
             C153887 * C354) *
                C153454 * C47609 +
            (C52092 + C52093 + C52094) * C153454 * C47610 + C52106 * C153890) *
               C153527 * C1223 -
           ((C52880 + C52879 + C52878) * C153454 * C153890 +
            (C52877 + C52876 + C52875) * C153454 * C47610 +
            (C2825 * C1319 + C3158 + C3158 + C153887 * C1329 + C2823 * C330 +
             C3159 + C3159 + C153913 * C354 + C2821 * C329 + C3160 + C3160 +
             C153925 * C353) *
                C153454 * C47609) *
               C153527 * C153563) *
              C1225 +
          (((C3217 + C3216 + C3215) * C153454 * C47609 +
            (C4352 + C4353 + C4354) * C153454 * C47610 +
            (C52881 + C52882 + C52883) * C153454 * C153890) *
               C153527 * C153563 -
           (C52091 * C153890 + (C3529 + C3530 + C3531) * C153454 * C47610 +
            (C2896 + C2895 + C2894) * C153454 * C47609) *
               C153527 * C1223) *
              C1226 +
          ((C2908 * C153454 * C47609 +
            (C3528 + C3527 + C3526) * C153454 * C47610 +
            (C3535 + C3536 + C3537) * C153454 * C153890) *
               C153527 * C1223 -
           ((C2825 * C4957 + C4967 + C4967 + C153887 * C4963 + C2823 * C3443 +
             C4968 + C4968 + C153913 * C3451 + C2821 * C1459 + C4969 + C4969 +
             C153925 * C1469) *
                C153454 * C153890 +
            (C4357 + C4356 + C4355) * C153454 * C47610 +
            C3766 * C153454 * C47609) *
               C153527 * C153563) *
              C1227)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
            C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
            C153887 * C354) *
               C153454 * C47609 +
           (C52092 + C52093 + C52094) * C153454 * C47610 + C52106 * C153890) *
              C153527 * C1310 -
          ((C52880 + C52879 + C52878) * C153454 * C153890 +
           (C52877 + C52876 + C52875) * C153454 * C47610 +
           (C2825 * C1319 + C3158 + C3158 + C153887 * C1329 + C2823 * C330 +
            C3159 + C3159 + C153913 * C354 + C2821 * C329 + C3160 + C3160 +
            C153925 * C353) *
               C153454 * C47609) *
              C153527 * C1311 +
          ((C2821 * C330 + C3161 + C3161 + C153925 * C354 + C2823 * C1319 +
            C3162 + C3162 + C153913 * C1329 + C2825 * C3127 + C3163 + C3163 +
            C153887 * C3135) *
               C153454 * C47609 +
           (C2821 * C1892 + C5719 + C5719 + C153925 * C1902 + C2823 * C4303 +
            C5718 + C5718 + C153913 * C4311 + C2825 * C5703 + C5717 + C5717 +
            C153887 * C5709) *
               C153454 * C47610 +
           (C2821 * C3441 + C51811 + C51811 + C153925 * C3449 + C2823 * C4959 +
            C51812 + C51812 + C153913 * C4965 + C2825 * C28650 + C51813 +
            C51813 + C153887 * C28654) *
               C153454 * C153890) *
              C153527 * C1312 -
          ((C2825 * C29442 + C53248 + C53248 + C153887 * C29444 +
            C2823 * C28650 + C53249 + C53249 + C153913 * C28654 +
            C2821 * C4959 + C53250 + C53250 + C153925 * C4965) *
               C153454 * C153890 +
           (C2825 * C29092 + C53251 + C53251 + C153887 * C29096 +
            C2823 * C5703 + C53252 + C53252 + C153913 * C5709 + C2821 * C4303 +
            C53253 + C53253 + C153925 * C4311) *
               C153454 * C47610 +
           (C2825 * C4723 + C4737 + C4737 + C153887 * C4729 + C2823 * C3127 +
            C4738 + C4738 + C153913 * C3135 + C2821 * C1319 + C4739 + C4739 +
            C153925 * C1329) *
               C153454 * C47609) *
              C153527 * C1313) *
         C153492) /
            (p * q * std::sqrt(p + q));
    d2ee[220] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
              C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
              C153887 * C354) *
                 C2818 +
             (C2894 + C2895 + C2896) * C2819 + C2908 * C153874) *
                C153626 * C2030 -
            (C4004 * C153874 + (C3529 + C3530 + C3531) * C2819 +
             (C2825 * C1892 + C3472 + C3472 + C153887 * C1902 + C2823 * C1057 +
              C3473 + C3473 + C153913 * C1069 + C2821 * C542 + C3474 + C3474 +
              C153925 * C566) *
                 C2818) *
                C153626 * C153591) *
               C153837 +
           (((C2821 * C1057 + C4316 + C4316 + C153925 * C1069 + C2823 * C1892 +
              C4317 + C4317 + C153913 * C1902 + C2825 * C4303 + C4318 + C4318 +
              C153887 * C4311) *
                 C2818 +
             (C4352 + C4353 + C4354) * C2819 +
             (C4355 + C4356 + C4357) * C153874) *
                C153626 * C153591 -
            (C3766 * C153874 + (C3215 + C3216 + C3217) * C2819 +
             (C2825 * C1319 + C3158 + C3158 + C153887 * C1329 + C2823 * C330 +
              C3159 + C3159 + C153913 * C354 + C2821 * C329 + C3160 + C3160 +
              C153925 * C353) *
                 C2818) *
                C153626 * C2030) *
               C153563) *
              C153829 +
          ((((C3531 + C3530 + C3529) * C2818 + (C3528 + C3527 + C3526) * C2819 +
             (C4011 + C4012 + C4013) * C153874) *
                C153626 * C153591 -
            (C2909 * C153874 + (C2899 + C2898 + C2897) * C2819 +
             (C2896 + C2895 + C2894) * C2818) *
                C153626 * C2030) *
               C153837 +
           (((C3217 + C3216 + C3215) * C2818 + (C3214 + C3213 + C3212) * C2819 +
             (C3773 + C3774 + C3775) * C153874) *
                C153626 * C2030 -
            ((C2825 * C4306 + C4337 + C4337 + C153887 * C4314 + C2823 * C1889 +
              C4338 + C4338 + C153913 * C1899 + C2821 * C1060 + C4339 + C4339 +
              C153925 * C1072) *
                 C153874 +
             (C4357 + C4356 + C4355) * C2819 +
             (C4354 + C4353 + C4352) * C2818) *
                C153626 * C153591) *
               C153563) *
              C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C122 + C193 * C123 +
             C194 * C124 + C195 * C125 + C196 * C126) *
                C153626 * C2030 -
            (C619 * C126 + C620 * C125 + C621 * C124 + C622 * C123 +
             (C134 * C542 + C587 + C587 + C153608 * C566) * C122) *
                C153626 * C153591) *
               C153837 +
           (((C134 * C1057 + C1076 + C1076 + C153608 * C1069) * C122 +
             C1098 * C123 + C1099 * C124 + C1100 * C125 + C1101 * C126) *
                C153626 * C153591 -
            (C406 * C126 + C407 * C125 + C408 * C124 + C409 * C123 +
             (C134 * C329 + C374 + C374 + C153608 * C353) * C122) *
                C153626 * C2030) *
               C153563) *
              C153829 +
          (((C622 * C122 + C621 * C123 + C620 * C124 + C619 * C125 +
             C895 * C126) *
                C153626 * C153591 -
            (C197 * C126 + C196 * C125 + C195 * C124 + C194 * C123 +
             C193 * C122) *
                C153626 * C2030) *
               C153837 +
           ((C409 * C122 + C408 * C123 + C407 * C124 + C406 * C125 +
             C762 * C126) *
                C153626 * C2030 -
            ((C134 * C1062 + C1089 + C1089 + C153608 * C1074) * C126 +
             C1101 * C125 + C1100 * C124 + C1099 * C123 + C1098 * C122) *
                C153626 * C153591) *
               C153563) *
              C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
              C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 +
              C24119 + C153887 * C354) *
                 C153922 +
             (C24183 + C24184 + C24185) * C153903 + C24197 * C153874) *
                C153626 * C2030 -
            (C25269 * C153874 + (C24794 + C24795 + C24796) * C153903 +
             (C24114 * C1892 + C24737 + C24737 + C153887 * C1902 +
              C24112 * C1057 + C24738 + C24738 + C24105 * C1069 +
              C24110 * C542 + C24739 + C24739 + C24104 * C566) *
                 C153922) *
                C153626 * C153591) *
               C153837 +
           (((C24110 * C1057 + C25569 + C25569 + C24104 * C1069 +
              C24112 * C1892 + C25570 + C25570 + C24105 * C1902 +
              C24114 * C4303 + C25571 + C25571 + C153887 * C4311) *
                 C153922 +
             (C25605 + C25606 + C25607) * C153903 +
             (C25608 + C25609 + C25610) * C153874) *
                C153626 * C153591 -
            (C25031 * C153874 + (C24492 + C24493 + C24494) * C153903 +
             (C24114 * C1319 + C24435 + C24435 + C153887 * C1329 +
              C24112 * C330 + C24436 + C24436 + C24105 * C354 + C24110 * C329 +
              C24437 + C24437 + C24104 * C353) *
                 C153922) *
                C153626 * C2030) *
               C153563) *
              C153829 +
          ((((C24796 + C24795 + C24794) * C153922 +
             (C24793 + C24792 + C24791) * C153903 +
             (C25276 + C25277 + C25278) * C153874) *
                C153626 * C153591 -
            (C24198 * C153874 + (C24188 + C24187 + C24186) * C153903 +
             (C24185 + C24184 + C24183) * C153922) *
                C153626 * C2030) *
               C153837 +
           (((C24494 + C24493 + C24492) * C153922 +
             (C24491 + C24490 + C24489) * C153903 +
             (C25038 + C25039 + C25040) * C153874) *
                C153626 * C2030 -
            ((C24114 * C4306 + C25590 + C25590 + C153887 * C4314 +
              C24112 * C1889 + C25591 + C25591 + C24105 * C1899 +
              C24110 * C1060 + C25592 + C25592 + C24104 * C1072) *
                 C153874 +
             (C25610 + C25609 + C25608) * C153903 +
             (C25607 + C25606 + C25605) * C153922) *
                C153626 * C153591) *
               C153563) *
              C153498)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C28350 * C136 + C28361 + C28361 + C28344 * C152 + C28352 * C329 +
             C28362 + C28362 + C28345 * C353 + C28354 * C330 + C28363 + C28363 +
             C28346 * C354 + C28356 * C1319 + C28364 + C28364 + C28347 * C1329 +
             C28358 * C3127 + C28365 + C28365 + C28348 * C3135) *
                C153454 * C153626 * C2030 -
            (C28358 * C5703 + C28657 + C28657 + C28348 * C5709 +
             C28356 * C4303 + C28658 + C28658 + C28347 * C4311 +
             C28354 * C1892 + C28659 + C28659 + C28346 * C1902 +
             C28352 * C1057 + C28660 + C28660 + C28345 * C1069 + C28350 * C542 +
             C28661 + C28661 + C28344 * C566) *
                C153454 * C153626 * C153591) *
               C153837 +
           ((C28350 * C1057 + C29099 + C29099 + C28344 * C1069 +
             C28352 * C1892 + C29100 + C29100 + C28345 * C1902 +
             C28354 * C4303 + C29101 + C29101 + C28346 * C4311 +
             C28356 * C5703 + C29102 + C29102 + C28347 * C5709 +
             C28358 * C29092 + C29103 + C29103 + C28348 * C29096) *
                C153454 * C153626 * C153591 -
            (C28358 * C4723 + C28509 + C28509 + C28348 * C4729 +
             C28356 * C3127 + C28510 + C28510 + C28347 * C3135 +
             C28354 * C1319 + C28511 + C28511 + C28346 * C1329 + C28352 * C330 +
             C28512 + C28512 + C28345 * C354 + C28350 * C329 + C28513 + C28513 +
             C28344 * C353) *
                C153454 * C153626 * C2030) *
               C153563) *
              C153829 +
          (((C28350 * C541 + C28667 + C28667 + C28344 * C565 + C28352 * C1058 +
             C28668 + C28668 + C28345 * C1070 + C28354 * C1891 + C28669 +
             C28669 + C28346 * C1901 + C28356 * C4304 + C28670 + C28670 +
             C28347 * C4312 + C28358 * C5702 + C28671 + C28671 +
             C28348 * C5708) *
                C153454 * C153626 * C153591 -
            (C28358 * C3128 + C28366 + C28366 + C28348 * C3136 +
             C28356 * C1318 + C28367 + C28367 + C28347 * C1328 + C28354 * C331 +
             C28368 + C28368 + C28346 * C355 + C28352 * C328 + C28369 + C28369 +
             C28345 * C352 + C28350 * C137 + C28370 + C28370 + C28344 * C153) *
                C153454 * C153626 * C2030) *
               C153837 +
           ((C28350 * C328 + C28519 + C28519 + C28344 * C352 + C28352 * C331 +
             C28520 + C28520 + C28345 * C355 + C28354 * C1318 + C28521 +
             C28521 + C28346 * C1328 + C28356 * C3128 + C28522 + C28522 +
             C28347 * C3136 + C28358 * C4722 + C28523 + C28523 +
             C28348 * C4728) *
                C153454 * C153626 * C2030 -
            (C28358 * C29093 + C29104 + C29104 + C28348 * C29097 +
             C28356 * C5702 + C29105 + C29105 + C28347 * C5708 +
             C28354 * C4304 + C29106 + C29106 + C28346 * C4312 +
             C28352 * C1891 + C29107 + C29107 + C28345 * C1901 +
             C28350 * C1058 + C29108 + C29108 + C28344 * C1070) *
                C153454 * C153626 * C153591) *
               C153563) *
              C153498)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C153608 * C152) * C153922 +
              C193 * C153903 + C194 * C153874) *
                 C47609 +
             (C48049 + C48050 + C48051) * C47610 + C48069 * C153890) *
                C2030 -
            (C50720 * C153890 + (C48054 + C48053 + C48052) * C47610 +
             (C48051 + C48050 + C48049) * C47609) *
                C153591) *
               C153837 +
           (((C48803 + C48804 + C48805) * C47609 +
             (C48806 + C48807 + C48808) * C47610 +
             (C49397 + C49398 + C49399) * C153890) *
                C153591 -
            (C49401 * C153890 + (C48805 + C48804 + C48803) * C47610 +
             (C408 * C153874 + C409 * C153903 +
              (C134 * C329 + C374 + C374 + C153608 * C353) * C153922) *
                 C47609) *
                C2030) *
               C153563) *
              C153829 +
          ((((C48058 + C48059 + C48060) * C47609 +
             (C48061 + C48062 + C48063) * C47610 +
             (C48064 + C48065 + C48066) * C153890) *
                C153591 -
            (C48070 * C153890 + (C48060 + C48059 + C48058) * C47610 +
             (C195 * C153874 + C194 * C153903 + C193 * C153922) * C47609) *
                C2030) *
               C153837 +
           (((C409 * C153922 + C408 * C153903 + C407 * C153874) * C47609 +
             (C48809 + C48810 + C48811) * C47610 +
             (C48812 + C48813 + C48814) * C153890) *
                C2030 -
            (((C134 * C8488 + C8513 + C8513 + C153608 * C8490) * C153874 +
              C8525 * C153903 + C8524 * C153922) *
                 C153890 +
             (C48814 + C48813 + C48812) * C47610 +
             (C48811 + C48810 + C48809) * C47609) *
                C153591) *
               C153563) *
              C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
              C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
              C153887 * C354) *
                 C153454 * C47609 +
             (C52092 + C52093 + C52094) * C153454 * C47610 + C52106 * C153890) *
                C2030 -
            (C54848 * C153890 + (C52097 + C52096 + C52095) * C153454 * C47610 +
             (C52094 + C52093 + C52092) * C153454 * C47609) *
                C153591) *
               C153837 +
           (((C52875 + C52876 + C52877) * C153454 * C47609 +
             (C52878 + C52879 + C52880) * C153454 * C47610 +
             (C53490 + C53491 + C53492) * C153454 * C153890) *
                C153591 -
            (C53489 * C153890 + (C52877 + C52876 + C52875) * C153454 * C47610 +
             (C2825 * C1319 + C3158 + C3158 + C153887 * C1329 + C2823 * C330 +
              C3159 + C3159 + C153913 * C354 + C2821 * C329 + C3160 + C3160 +
              C153925 * C353) *
                 C153454 * C47609) *
                C2030) *
               C153563) *
              C153829 +
          ((((C3531 + C3530 + C3529) * C153454 * C47609 +
             (C3532 + C3533 + C3534) * C153454 * C47610 +
             (C52101 + C52102 + C52103) * C153454 * C153890) *
                C153591 -
            (C52091 * C153890 + (C3529 + C3530 + C3531) * C153454 * C47610 +
             (C2896 + C2895 + C2894) * C153454 * C47609) *
                C2030) *
               C153837 +
           (((C3217 + C3216 + C3215) * C153454 * C47609 +
             (C4352 + C4353 + C4354) * C153454 * C47610 +
             (C52881 + C52882 + C52883) * C153454 * C153890) *
                C2030 -
            ((C2825 * C31999 + C52854 + C52854 + C153887 * C32001 +
              C2823 * C6303 + C52855 + C52855 + C153913 * C6315 +
              C2821 * C6304 + C52856 + C52856 + C153925 * C6316) *
                 C153454 * C153890 +
             (C52883 + C52882 + C52881) * C153454 * C47610 +
             (C4354 + C4353 + C4352) * C153454 * C47609) *
                C153591) *
               C153563) *
              C153498)) /
            (p * q * std::sqrt(p + q));
    d2ee[221] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
             C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
             C153887 * C354) *
                C2818 +
            (C2894 + C2895 + C2896) * C2819 + C2908 * C153874) *
               C153626 * C153910 -
           (C4004 * C153874 + (C3529 + C3530 + C3531) * C2819 +
            (C2825 * C1892 + C3472 + C3472 + C153887 * C1902 + C2823 * C1057 +
             C3473 + C3473 + C153913 * C1069 + C2821 * C542 + C3474 + C3474 +
             C153925 * C566) *
                C2818) *
               C153626 * C153911 +
           ((C2821 * C543 + C3475 + C3475 + C153925 * C567 + C2823 * C1461 +
             C3476 + C3476 + C153913 * C1471 + C2825 * C3441 + C3477 + C3477 +
             C153887 * C3449) *
                C2818 +
            (C3532 + C3533 + C3534) * C2819 +
            (C3535 + C3536 + C3537) * C153874) *
               C153626 * C2546) *
              C153837 +
          (((C2821 * C1057 + C4316 + C4316 + C153925 * C1069 + C2823 * C1892 +
             C4317 + C4317 + C153913 * C1902 + C2825 * C4303 + C4318 + C4318 +
             C153887 * C4311) *
                C2818 +
            (C4352 + C4353 + C4354) * C2819 +
            (C4355 + C4356 + C4357) * C153874) *
               C153626 * C153911 -
           (C3766 * C153874 + (C3215 + C3216 + C3217) * C2819 +
            (C2825 * C1319 + C3158 + C3158 + C153887 * C1329 + C2823 * C330 +
             C3159 + C3159 + C153913 * C354 + C2821 * C329 + C3160 + C3160 +
             C153925 * C353) *
                C2818) *
               C153626 * C153910 -
           ((C2825 * C4957 + C4967 + C4967 + C153887 * C4963 + C2823 * C3443 +
             C4968 + C4968 + C153913 * C3451 + C2821 * C1459 + C4969 + C4969 +
             C153925 * C1469) *
                C153874 +
            (C2825 * C4958 + C4970 + C4970 + C153887 * C4964 + C2823 * C3442 +
             C4971 + C4971 + C153913 * C3450 + C2821 * C1460 + C4972 + C4972 +
             C153925 * C1470) *
                C2819 +
            (C2825 * C4959 + C4973 + C4973 + C153887 * C4965 + C2823 * C3441 +
             C4974 + C4974 + C153913 * C3449 + C2821 * C1461 + C4975 + C4975 +
             C153925 * C1471) *
                C2818) *
               C153626 * C2546) *
              C153563) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153608 * C152) * C122 + C193 * C123 +
            C194 * C124 + C195 * C125 + C196 * C126) *
               C153626 * C153910 -
           (C619 * C126 + C620 * C125 + C621 * C124 + C622 * C123 +
            (C134 * C542 + C587 + C587 + C153608 * C566) * C122) *
               C153626 * C153911 +
           ((C134 * C543 + C588 + C588 + C153608 * C567) * C122 + C623 * C123 +
            C624 * C124 + C625 * C125 + C626 * C126) *
               C153626 * C2546) *
              C153837 +
          (((C134 * C1057 + C1076 + C1076 + C153608 * C1069) * C122 +
            C1098 * C123 + C1099 * C124 + C1100 * C125 + C1101 * C126) *
               C153626 * C153911 -
           (C406 * C126 + C407 * C125 + C408 * C124 + C409 * C123 +
            (C134 * C329 + C374 + C374 + C153608 * C353) * C122) *
               C153626 * C153910 -
           ((C134 * C1457 + C1473 + C1473 + C153608 * C1467) * C126 +
            (C134 * C1458 + C1474 + C1474 + C153608 * C1468) * C125 +
            (C134 * C1459 + C1475 + C1475 + C153608 * C1469) * C124 +
            (C134 * C1460 + C1476 + C1476 + C153608 * C1470) * C123 +
            (C134 * C1461 + C1477 + C1477 + C153608 * C1471) * C122) *
               C153626 * C2546) *
              C153563) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
             C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 + C24119 +
             C153887 * C354) *
                C153922 +
            (C24183 + C24184 + C24185) * C153903 + C24197 * C153874) *
               C153626 * C153910 -
           (C25269 * C153874 + (C24794 + C24795 + C24796) * C153903 +
            (C24114 * C1892 + C24737 + C24737 + C153887 * C1902 +
             C24112 * C1057 + C24738 + C24738 + C24105 * C1069 + C24110 * C542 +
             C24739 + C24739 + C24104 * C566) *
                C153922) *
               C153626 * C153911 +
           ((C24110 * C543 + C24740 + C24740 + C24104 * C567 + C24112 * C1461 +
             C24741 + C24741 + C24105 * C1471 + C24114 * C3441 + C24742 +
             C24742 + C153887 * C3449) *
                C153922 +
            (C24797 + C24798 + C24799) * C153903 +
            (C24800 + C24801 + C24802) * C153874) *
               C153626 * C2546) *
              C153837 +
          (((C24110 * C1057 + C25569 + C25569 + C24104 * C1069 +
             C24112 * C1892 + C25570 + C25570 + C24105 * C1902 +
             C24114 * C4303 + C25571 + C25571 + C153887 * C4311) *
                C153922 +
            (C25605 + C25606 + C25607) * C153903 +
            (C25608 + C25609 + C25610) * C153874) *
               C153626 * C153911 -
           (C25031 * C153874 + (C24492 + C24493 + C24494) * C153903 +
            (C24114 * C1319 + C24435 + C24435 + C153887 * C1329 +
             C24112 * C330 + C24436 + C24436 + C24105 * C354 + C24110 * C329 +
             C24437 + C24437 + C24104 * C353) *
                C153922) *
               C153626 * C153910 -
           ((C24114 * C4957 + C26202 + C26202 + C153887 * C4963 +
             C24112 * C3443 + C26203 + C26203 + C24105 * C3451 +
             C24110 * C1459 + C26204 + C26204 + C24104 * C1469) *
                C153874 +
            (C24114 * C4958 + C26205 + C26205 + C153887 * C4964 +
             C24112 * C3442 + C26206 + C26206 + C24105 * C3450 +
             C24110 * C1460 + C26207 + C26207 + C24104 * C1470) *
                C153903 +
            (C24114 * C4959 + C26208 + C26208 + C153887 * C4965 +
             C24112 * C3441 + C26209 + C26209 + C24105 * C3449 +
             C24110 * C1461 + C26210 + C26210 + C24104 * C1471) *
                C153922) *
               C153626 * C2546) *
              C153563) *
         C153492) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C28350 * C136 + C28361 + C28361 + C28344 * C152 + C28352 * C329 +
            C28362 + C28362 + C28345 * C353 + C28354 * C330 + C28363 + C28363 +
            C28346 * C354 + C28356 * C1319 + C28364 + C28364 + C28347 * C1329 +
            C28358 * C3127 + C28365 + C28365 + C28348 * C3135) *
               C153454 * C153626 * C153910 -
           (C28358 * C5703 + C28657 + C28657 + C28348 * C5709 + C28356 * C4303 +
            C28658 + C28658 + C28347 * C4311 + C28354 * C1892 + C28659 +
            C28659 + C28346 * C1902 + C28352 * C1057 + C28660 + C28660 +
            C28345 * C1069 + C28350 * C542 + C28661 + C28661 + C28344 * C566) *
               C153454 * C153626 * C153911 +
           (C28350 * C543 + C28662 + C28662 + C28344 * C567 + C28352 * C1461 +
            C28663 + C28663 + C28345 * C1471 + C28354 * C3441 + C28664 +
            C28664 + C28346 * C3449 + C28356 * C4959 + C28665 + C28665 +
            C28347 * C4965 + C28358 * C28650 + C28666 + C28666 +
            C28348 * C28654) *
               C153454 * C153626 * C2546) *
              C153837 +
          ((C28350 * C1057 + C29099 + C29099 + C28344 * C1069 + C28352 * C1892 +
            C29100 + C29100 + C28345 * C1902 + C28354 * C4303 + C29101 +
            C29101 + C28346 * C4311 + C28356 * C5703 + C29102 + C29102 +
            C28347 * C5709 + C28358 * C29092 + C29103 + C29103 +
            C28348 * C29096) *
               C153454 * C153626 * C153911 -
           (C28358 * C4723 + C28509 + C28509 + C28348 * C4729 + C28356 * C3127 +
            C28510 + C28510 + C28347 * C3135 + C28354 * C1319 + C28511 +
            C28511 + C28346 * C1329 + C28352 * C330 + C28512 + C28512 +
            C28345 * C354 + C28350 * C329 + C28513 + C28513 + C28344 * C353) *
               C153454 * C153626 * C153910 -
           (C28358 * C29442 + C29446 + C29446 + C28348 * C29444 +
            C28356 * C28650 + C29447 + C29447 + C28347 * C28654 +
            C28354 * C4959 + C29448 + C29448 + C28346 * C4965 + C28352 * C3441 +
            C29449 + C29449 + C28345 * C3449 + C28350 * C1461 + C29450 +
            C29450 + C28344 * C1471) *
               C153454 * C153626 * C2546) *
              C153563) *
         C153492) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C153922 +
             C193 * C153903 + C194 * C153874) *
                C47609 +
            (C48049 + C48050 + C48051) * C47610 + C48069 * C153890) *
               C153910 -
           (C50720 * C153890 + (C48054 + C48053 + C48052) * C47610 +
            (C48051 + C48050 + C48049) * C47609) *
               C153911 +
           (C48069 * C47609 + (C48057 + C48056 + C48055) * C47610 +
            (C50717 + C50718 + C50719) * C153890) *
               C2546) *
              C153837 +
          (((C48803 + C48804 + C48805) * C47609 +
            (C48806 + C48807 + C48808) * C47610 +
            (C49397 + C49398 + C49399) * C153890) *
               C153911 -
           (C49401 * C153890 + (C48805 + C48804 + C48803) * C47610 +
            (C408 * C153874 + C409 * C153903 +
             (C134 * C329 + C374 + C374 + C153608 * C353) * C153922) *
                C47609) *
               C153910 -
           (((C134 * C9115 + C9130 + C9130 + C153608 * C9121) * C153874 +
             (C134 * C9116 + C9131 + C9131 + C153608 * C9122) * C153903 +
             (C134 * C9117 + C9132 + C9132 + C153608 * C9123) * C153922) *
                C153890 +
            (C49399 + C49398 + C49397) * C47610 + C49401 * C47609) *
               C2546) *
              C153563) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
             C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
             C153887 * C354) *
                C153454 * C47609 +
            (C52092 + C52093 + C52094) * C153454 * C47610 + C52106 * C153890) *
               C153910 -
           (C54848 * C153890 + (C52097 + C52096 + C52095) * C153454 * C47610 +
            (C52094 + C52093 + C52092) * C153454 * C47609) *
               C153911 +
           (C52106 * C47609 + (C52100 + C52099 + C52098) * C153454 * C47610 +
            (C54852 + C54853 + C54854) * C153454 * C153890) *
               C2546) *
              C153837 +
          (((C52875 + C52876 + C52877) * C153454 * C47609 +
            (C52878 + C52879 + C52880) * C153454 * C47610 +
            (C53490 + C53491 + C53492) * C153454 * C153890) *
               C153911 -
           (C53489 * C153890 + (C52877 + C52876 + C52875) * C153454 * C47610 +
            (C2825 * C1319 + C3158 + C3158 + C153887 * C1329 + C2823 * C330 +
             C3159 + C3159 + C153913 * C354 + C2821 * C329 + C3160 + C3160 +
             C153925 * C353) *
                C153454 * C47609) *
               C153910 -
           ((C2825 * C32641 + C53479 + C53479 + C153887 * C32643 +
             C2823 * C31195 + C53480 + C53480 + C153913 * C31199 +
             C2821 * C9117 + C53481 + C53481 + C153925 * C9123) *
                C153454 * C153890 +
            (C53492 + C53491 + C53490) * C153454 * C47610 + C53489 * C47609) *
               C2546) *
              C153563) *
         C153492) /
            (p * q * std::sqrt(p + q));
    d2ee[222] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C136 + C161 + C161 + C153608 * C152) * C122 +
                C193 * C123 + C194 * C124 + C195 * C125 + C196 * C126) *
                   C153626 * C2030 -
               (C619 * C126 + C620 * C125 + C621 * C124 + C622 * C123 +
                (C134 * C542 + C587 + C587 + C153608 * C566) * C122) *
                   C153626 * C153591) *
                  C153511 * C1225 +
              ((C622 * C122 + C621 * C123 + C620 * C124 + C619 * C125 +
                C895 * C126) *
                   C153626 * C153591 -
               (C197 * C126 + C196 * C125 + C195 * C124 + C194 * C123 +
                C193 * C122) *
                   C153626 * C2030) *
                  C153511 * C1226 +
              ((C194 * C122 + C195 * C123 + C196 * C124 + C197 * C125 +
                C198 * C126) *
                   C153626 * C2030 -
               ((C134 * C886 + C892 + C892 + C153608 * C888) * C126 +
                C895 * C125 + C619 * C124 + C620 * C123 + C621 * C122) *
                   C153626 * C153591) *
                  C153511 * C1227) +
         std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C136 + C161 + C161 + C153608 * C152) * C122 +
                C193 * C123 + C194 * C124 + C195 * C125 + C196 * C126) *
                   C153626 * C2030 -
               (C619 * C126 + C620 * C125 + C621 * C124 + C622 * C123 +
                (C134 * C542 + C587 + C587 + C153608 * C566) * C122) *
                   C153626 * C153591) *
                  C320 +
              (((C134 * C1057 + C1076 + C1076 + C153608 * C1069) * C122 +
                C1098 * C123 + C1099 * C124 + C1100 * C125 + C1101 * C126) *
                   C153626 * C153591 -
               (C406 * C126 + C407 * C125 + C408 * C124 + C409 * C123 +
                (C134 * C329 + C374 + C374 + C153608 * C353) * C122) *
                   C153626 * C2030) *
                  C321 +
              (((C134 * C330 + C375 + C375 + C153608 * C354) * C122 +
                C410 * C123 + C411 * C124 + C412 * C125 + C413 * C126) *
                   C153626 * C2030 -
               ((C134 * C1888 + C1904 + C1904 + C153608 * C1898) * C126 +
                (C134 * C1889 + C1905 + C1905 + C153608 * C1899) * C125 +
                (C134 * C1890 + C1906 + C1906 + C153608 * C1900) * C124 +
                (C134 * C1891 + C1907 + C1907 + C153608 * C1901) * C123 +
                (C134 * C1892 + C1908 + C1908 + C153608 * C1902) * C122) *
                   C153626 * C153591) *
                  C322) *
             C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C136 + C161 + C161 + C153608 * C152) * C122 + C193 * C123 +
           C194 * C124 + C195 * C125 + C196 * C126) *
              C153626 * C2236 -
          (C619 * C126 + C620 * C125 + C621 * C124 + C622 * C123 +
           (C134 * C542 + C587 + C587 + C153608 * C566) * C122) *
              C153626 * C2237 +
          ((C134 * C543 + C588 + C588 + C153608 * C567) * C122 + C623 * C123 +
           C624 * C124 + C625 * C125 + C626 * C126) *
              C153626 * C2238 -
          ((C134 * C2240 + C2256 + C2256 + C153608 * C2250) * C126 +
           (C134 * C2241 + C2257 + C2257 + C153608 * C2251) * C125 +
           (C134 * C2242 + C2258 + C2258 + C153608 * C2252) * C124 +
           (C134 * C2243 + C2259 + C2259 + C153608 * C2253) * C123 +
           (C134 * C2244 + C2260 + C2260 + C153608 * C2254) * C122) *
              C153626 * C2239) *
         C153511 * C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
             C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
             C153887 * C354) *
                C2818 +
            (C2894 + C2895 + C2896) * C2819 + C2908 * C153874) *
               C153626 * C2030 -
           (C4004 * C153874 + (C3529 + C3530 + C3531) * C2819 +
            (C2825 * C1892 + C3472 + C3472 + C153887 * C1902 + C2823 * C1057 +
             C3473 + C3473 + C153913 * C1069 + C2821 * C542 + C3474 + C3474 +
             C153925 * C566) *
                C2818) *
               C153626 * C153591) *
              C153511 * C1225 +
          (((C3531 + C3530 + C3529) * C2818 + (C3528 + C3527 + C3526) * C2819 +
            (C4011 + C4012 + C4013) * C153874) *
               C153626 * C153591 -
           (C2909 * C153874 + (C2899 + C2898 + C2897) * C2819 +
            (C2896 + C2895 + C2894) * C2818) *
               C153626 * C2030) *
              C153511 * C1226 +
          ((C2908 * C2818 + (C2902 + C2901 + C2900) * C2819 +
            (C2903 + C2904 + C2905) * C153874) *
               C153626 * C2030 -
           ((C2825 * C1888 + C4001 + C4001 + C153887 * C1898 + C2823 * C1061 +
             C4002 + C4002 + C153913 * C1073 + C2821 * C538 + C4003 + C4003 +
             C153925 * C562) *
                C153874 +
            (C4013 + C4012 + C4011) * C2819 + C4004 * C2818) *
               C153626 * C153591) *
              C153511 * C1227)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
             C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
             C153887 * C354) *
                C2818 +
            (C2894 + C2895 + C2896) * C2819 + C2908 * C153874) *
               C153626 * C2030 -
           (C4004 * C153874 + (C3529 + C3530 + C3531) * C2819 +
            (C2825 * C1892 + C3472 + C3472 + C153887 * C1902 + C2823 * C1057 +
             C3473 + C3473 + C153913 * C1069 + C2821 * C542 + C3474 + C3474 +
             C153925 * C566) *
                C2818) *
               C153626 * C153591) *
              C320 +
          (((C2821 * C1057 + C4316 + C4316 + C153925 * C1069 + C2823 * C1892 +
             C4317 + C4317 + C153913 * C1902 + C2825 * C4303 + C4318 + C4318 +
             C153887 * C4311) *
                C2818 +
            (C4352 + C4353 + C4354) * C2819 +
            (C4355 + C4356 + C4357) * C153874) *
               C153626 * C153591 -
           (C3766 * C153874 + (C3215 + C3216 + C3217) * C2819 +
            (C2825 * C1319 + C3158 + C3158 + C153887 * C1329 + C2823 * C330 +
             C3159 + C3159 + C153913 * C354 + C2821 * C329 + C3160 + C3160 +
             C153925 * C353) *
                C2818) *
               C153626 * C2030) *
              C321 +
          (((C2821 * C330 + C3161 + C3161 + C153925 * C354 + C2823 * C1319 +
             C3162 + C3162 + C153913 * C1329 + C2825 * C3127 + C3163 + C3163 +
             C153887 * C3135) *
                C2818 +
            (C3218 + C3219 + C3220) * C2819 +
            (C3221 + C3222 + C3223) * C153874) *
               C153626 * C2030 -
           ((C2825 * C5701 + C5711 + C5711 + C153887 * C5707 + C2823 * C4305 +
             C5712 + C5712 + C153913 * C4313 + C2821 * C1890 + C5713 + C5713 +
             C153925 * C1900) *
                C153874 +
            (C2825 * C5702 + C5714 + C5714 + C153887 * C5708 + C2823 * C4304 +
             C5715 + C5715 + C153913 * C4312 + C2821 * C1891 + C5716 + C5716 +
             C153925 * C1901) *
                C2819 +
            (C2825 * C5703 + C5717 + C5717 + C153887 * C5709 + C2823 * C4303 +
             C5718 + C5718 + C153913 * C4311 + C2821 * C1892 + C5719 + C5719 +
             C153925 * C1902) *
                C2818) *
               C153626 * C153591) *
              C322) *
         C153492) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
            C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
            C153887 * C354) *
               C2818 +
           (C2894 + C2895 + C2896) * C2819 + C2908 * C153874) *
              C153626 * C2236 -
          (C4004 * C153874 + (C3529 + C3530 + C3531) * C2819 +
           (C2825 * C1892 + C3472 + C3472 + C153887 * C1902 + C2823 * C1057 +
            C3473 + C3473 + C153913 * C1069 + C2821 * C542 + C3474 + C3474 +
            C153925 * C566) *
               C2818) *
              C153626 * C2237 +
          ((C2821 * C543 + C3475 + C3475 + C153925 * C567 + C2823 * C1461 +
            C3476 + C3476 + C153913 * C1471 + C2825 * C3441 + C3477 + C3477 +
            C153887 * C3449) *
               C2818 +
           (C3532 + C3533 + C3534) * C2819 +
           (C3535 + C3536 + C3537) * C153874) *
              C153626 * C2238 -
          ((C2825 * C6301 + C6320 + C6320 + C153887 * C6313 + C2823 * C6302 +
            C6321 + C6321 + C153913 * C6314 + C2821 * C2242 + C6322 + C6322 +
            C153925 * C2252) *
               C153874 +
           (C2825 * C6303 + C6323 + C6323 + C153887 * C6315 + C2823 * C6304 +
            C6324 + C6324 + C153913 * C6316 + C2821 * C2243 + C6325 + C6325 +
            C153925 * C2253) *
               C2819 +
           (C2825 * C6305 + C6326 + C6326 + C153887 * C6317 + C2823 * C6306 +
            C6327 + C6327 + C153913 * C6318 + C2821 * C2244 + C6328 + C6328 +
            C153925 * C2254) *
               C2818) *
              C153626 * C2239) *
         C153511 * C153492) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
             C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 + C24119 +
             C153887 * C354) *
                C153922 +
            (C24183 + C24184 + C24185) * C153903 + C24197 * C153874) *
               C153626 * C2030 -
           (C25269 * C153874 + (C24794 + C24795 + C24796) * C153903 +
            (C24114 * C1892 + C24737 + C24737 + C153887 * C1902 +
             C24112 * C1057 + C24738 + C24738 + C24105 * C1069 + C24110 * C542 +
             C24739 + C24739 + C24104 * C566) *
                C153922) *
               C153626 * C153591) *
              C153511 * C1225 +
          (((C24796 + C24795 + C24794) * C153922 +
            (C24793 + C24792 + C24791) * C153903 +
            (C25276 + C25277 + C25278) * C153874) *
               C153626 * C153591 -
           (C24198 * C153874 + (C24188 + C24187 + C24186) * C153903 +
            (C24185 + C24184 + C24183) * C153922) *
               C153626 * C2030) *
              C153511 * C1226 +
          ((C24197 * C153922 + (C24191 + C24190 + C24189) * C153903 +
            (C24192 + C24193 + C24194) * C153874) *
               C153626 * C2030 -
           ((C24114 * C1888 + C25266 + C25266 + C153887 * C1898 +
             C24112 * C1061 + C25267 + C25267 + C24105 * C1073 + C24110 * C538 +
             C25268 + C25268 + C24104 * C562) *
                C153874 +
            (C25278 + C25277 + C25276) * C153903 + C25269 * C153922) *
               C153626 * C153591) *
              C153511 * C1227)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
             C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 + C24119 +
             C153887 * C354) *
                C153922 +
            (C24183 + C24184 + C24185) * C153903 + C24197 * C153874) *
               C153626 * C2030 -
           (C25269 * C153874 + (C24794 + C24795 + C24796) * C153903 +
            (C24114 * C1892 + C24737 + C24737 + C153887 * C1902 +
             C24112 * C1057 + C24738 + C24738 + C24105 * C1069 + C24110 * C542 +
             C24739 + C24739 + C24104 * C566) *
                C153922) *
               C153626 * C153591) *
              C320 +
          (((C24110 * C1057 + C25569 + C25569 + C24104 * C1069 +
             C24112 * C1892 + C25570 + C25570 + C24105 * C1902 +
             C24114 * C4303 + C25571 + C25571 + C153887 * C4311) *
                C153922 +
            (C25605 + C25606 + C25607) * C153903 +
            (C25608 + C25609 + C25610) * C153874) *
               C153626 * C153591 -
           (C25031 * C153874 + (C24492 + C24493 + C24494) * C153903 +
            (C24114 * C1319 + C24435 + C24435 + C153887 * C1329 +
             C24112 * C330 + C24436 + C24436 + C24105 * C354 + C24110 * C329 +
             C24437 + C24437 + C24104 * C353) *
                C153922) *
               C153626 * C2030) *
              C321 +
          (((C24110 * C330 + C24438 + C24438 + C24104 * C354 + C24112 * C1319 +
             C24439 + C24439 + C24105 * C1329 + C24114 * C3127 + C24440 +
             C24440 + C153887 * C3135) *
                C153922 +
            (C24495 + C24496 + C24497) * C153903 +
            (C24498 + C24499 + C24500) * C153874) *
               C153626 * C2030 -
           ((C24114 * C5701 + C26937 + C26937 + C153887 * C5707 +
             C24112 * C4305 + C26938 + C26938 + C24105 * C4313 +
             C24110 * C1890 + C26939 + C26939 + C24104 * C1900) *
                C153874 +
            (C24114 * C5702 + C26940 + C26940 + C153887 * C5708 +
             C24112 * C4304 + C26941 + C26941 + C24105 * C4312 +
             C24110 * C1891 + C26942 + C26942 + C24104 * C1901) *
                C153903 +
            (C24114 * C5703 + C26943 + C26943 + C153887 * C5709 +
             C24112 * C4303 + C26944 + C26944 + C24105 * C4311 +
             C24110 * C1892 + C26945 + C26945 + C24104 * C1902) *
                C153922) *
               C153626 * C153591) *
              C322) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
            C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 + C24119 +
            C153887 * C354) *
               C153922 +
           (C24183 + C24184 + C24185) * C153903 + C24197 * C153874) *
              C153626 * C2236 -
          (C25269 * C153874 + (C24794 + C24795 + C24796) * C153903 +
           (C24114 * C1892 + C24737 + C24737 + C153887 * C1902 +
            C24112 * C1057 + C24738 + C24738 + C24105 * C1069 + C24110 * C542 +
            C24739 + C24739 + C24104 * C566) *
               C153922) *
              C153626 * C2237 +
          ((C24110 * C543 + C24740 + C24740 + C24104 * C567 + C24112 * C1461 +
            C24741 + C24741 + C24105 * C1471 + C24114 * C3441 + C24742 +
            C24742 + C153887 * C3449) *
               C153922 +
           (C24797 + C24798 + C24799) * C153903 +
           (C24800 + C24801 + C24802) * C153874) *
              C153626 * C2238 -
          ((C24114 * C6301 + C27528 + C27528 + C153887 * C6313 +
            C24112 * C6302 + C27529 + C27529 + C24105 * C6314 + C24110 * C2242 +
            C27530 + C27530 + C24104 * C2252) *
               C153874 +
           (C24114 * C6303 + C27531 + C27531 + C153887 * C6315 +
            C24112 * C6304 + C27532 + C27532 + C24105 * C6316 + C24110 * C2243 +
            C27533 + C27533 + C24104 * C2253) *
               C153903 +
           (C24114 * C6305 + C27534 + C27534 + C153887 * C6317 +
            C24112 * C6306 + C27535 + C27535 + C24105 * C6318 + C24110 * C2244 +
            C27536 + C27536 + C24104 * C2254) *
               C153922) *
              C153626 * C2239) *
         C153511 * C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C28350 * C136 + C28361 + C28361 + C28344 * C152 + C28352 * C329 +
            C28362 + C28362 + C28345 * C353 + C28354 * C330 + C28363 + C28363 +
            C28346 * C354 + C28356 * C1319 + C28364 + C28364 + C28347 * C1329 +
            C28358 * C3127 + C28365 + C28365 + C28348 * C3135) *
               C153454 * C153626 * C2030 -
           (C28358 * C5703 + C28657 + C28657 + C28348 * C5709 + C28356 * C4303 +
            C28658 + C28658 + C28347 * C4311 + C28354 * C1892 + C28659 +
            C28659 + C28346 * C1902 + C28352 * C1057 + C28660 + C28660 +
            C28345 * C1069 + C28350 * C542 + C28661 + C28661 + C28344 * C566) *
               C153454 * C153626 * C153591) *
              C153511 * C1225 +
          ((C28350 * C541 + C28667 + C28667 + C28344 * C565 + C28352 * C1058 +
            C28668 + C28668 + C28345 * C1070 + C28354 * C1891 + C28669 +
            C28669 + C28346 * C1901 + C28356 * C4304 + C28670 + C28670 +
            C28347 * C4312 + C28358 * C5702 + C28671 + C28671 +
            C28348 * C5708) *
               C153454 * C153626 * C153591 -
           (C28358 * C3128 + C28366 + C28366 + C28348 * C3136 + C28356 * C1318 +
            C28367 + C28367 + C28347 * C1328 + C28354 * C331 + C28368 + C28368 +
            C28346 * C355 + C28352 * C328 + C28369 + C28369 + C28345 * C352 +
            C28350 * C137 + C28370 + C28370 + C28344 * C153) *
               C153454 * C153626 * C2030) *
              C153511 * C1226 +
          ((C28350 * C138 + C28371 + C28371 + C28344 * C154 + C28352 * C327 +
            C28372 + C28372 + C28345 * C351 + C28354 * C332 + C28373 + C28373 +
            C28346 * C356 + C28356 * C1317 + C28374 + C28374 + C28347 * C1327 +
            C28358 * C3129 + C28375 + C28375 + C28348 * C3137) *
               C153454 * C153626 * C2030 -
           (C28358 * C5701 + C28926 + C28926 + C28348 * C5707 + C28356 * C4305 +
            C28927 + C28927 + C28347 * C4313 + C28354 * C1890 + C28928 +
            C28928 + C28346 * C1900 + C28352 * C1059 + C28929 + C28929 +
            C28345 * C1071 + C28350 * C540 + C28930 + C28930 + C28344 * C564) *
               C153454 * C153626 * C153591) *
              C153511 * C1227)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C28350 * C136 + C28361 + C28361 + C28344 * C152 + C28352 * C329 +
            C28362 + C28362 + C28345 * C353 + C28354 * C330 + C28363 + C28363 +
            C28346 * C354 + C28356 * C1319 + C28364 + C28364 + C28347 * C1329 +
            C28358 * C3127 + C28365 + C28365 + C28348 * C3135) *
               C153454 * C153626 * C2030 -
           (C28358 * C5703 + C28657 + C28657 + C28348 * C5709 + C28356 * C4303 +
            C28658 + C28658 + C28347 * C4311 + C28354 * C1892 + C28659 +
            C28659 + C28346 * C1902 + C28352 * C1057 + C28660 + C28660 +
            C28345 * C1069 + C28350 * C542 + C28661 + C28661 + C28344 * C566) *
               C153454 * C153626 * C153591) *
              C320 +
          ((C28350 * C1057 + C29099 + C29099 + C28344 * C1069 + C28352 * C1892 +
            C29100 + C29100 + C28345 * C1902 + C28354 * C4303 + C29101 +
            C29101 + C28346 * C4311 + C28356 * C5703 + C29102 + C29102 +
            C28347 * C5709 + C28358 * C29092 + C29103 + C29103 +
            C28348 * C29096) *
               C153454 * C153626 * C153591 -
           (C28358 * C4723 + C28509 + C28509 + C28348 * C4729 + C28356 * C3127 +
            C28510 + C28510 + C28347 * C3135 + C28354 * C1319 + C28511 +
            C28511 + C28346 * C1329 + C28352 * C330 + C28512 + C28512 +
            C28345 * C354 + C28350 * C329 + C28513 + C28513 + C28344 * C353) *
               C153454 * C153626 * C2030) *
              C321 +
          ((C28350 * C330 + C28514 + C28514 + C28344 * C354 + C28352 * C1319 +
            C28515 + C28515 + C28345 * C1329 + C28354 * C3127 + C28516 +
            C28516 + C28346 * C3135 + C28356 * C4723 + C28517 + C28517 +
            C28347 * C4729 + C28358 * C28502 + C28518 + C28518 +
            C28348 * C28506) *
               C153454 * C153626 * C2030 -
           (C28358 * C29856 + C29860 + C29860 + C28348 * C29858 +
            C28356 * C29092 + C29861 + C29861 + C28347 * C29096 +
            C28354 * C5703 + C29862 + C29862 + C28346 * C5709 + C28352 * C4303 +
            C29863 + C29863 + C28345 * C4311 + C28350 * C1892 + C29864 +
            C29864 + C28344 * C1902) *
               C153454 * C153626 * C153591) *
              C322) *
         C153492) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((C28350 * C136 + C28361 + C28361 + C28344 * C152 + C28352 * C329 +
           C28362 + C28362 + C28345 * C353 + C28354 * C330 + C28363 + C28363 +
           C28346 * C354 + C28356 * C1319 + C28364 + C28364 + C28347 * C1329 +
           C28358 * C3127 + C28365 + C28365 + C28348 * C3135) *
              C153454 * C153626 * C2236 -
          (C28358 * C5703 + C28657 + C28657 + C28348 * C5709 + C28356 * C4303 +
           C28658 + C28658 + C28347 * C4311 + C28354 * C1892 + C28659 + C28659 +
           C28346 * C1902 + C28352 * C1057 + C28660 + C28660 + C28345 * C1069 +
           C28350 * C542 + C28661 + C28661 + C28344 * C566) *
              C153454 * C153626 * C2237 +
          (C28350 * C543 + C28662 + C28662 + C28344 * C567 + C28352 * C1461 +
           C28663 + C28663 + C28345 * C1471 + C28354 * C3441 + C28664 + C28664 +
           C28346 * C3449 + C28356 * C4959 + C28665 + C28665 + C28347 * C4965 +
           C28358 * C28650 + C28666 + C28666 + C28348 * C28654) *
              C153454 * C153626 * C2238 -
          (C28358 * C30190 + C30197 + C30197 + C28348 * C30194 +
           C28356 * C30191 + C30198 + C30198 + C28347 * C30195 +
           C28354 * C6305 + C30199 + C30199 + C28346 * C6317 + C28352 * C6306 +
           C30200 + C30200 + C28345 * C6318 + C28350 * C2244 + C30201 + C30201 +
           C28344 * C2254) *
              C153454 * C153626 * C2239) *
         C153511 * C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C153922 +
             C193 * C153903 + C194 * C153874) *
                C47609 +
            (C48049 + C48050 + C48051) * C47610 + C48069 * C153890) *
               C2030 -
           ((C48055 + C48056 + C48057) * C153890 +
            (C48054 + C48053 + C48052) * C47610 +
            (C48051 + C48050 + C48049) * C47609) *
               C153591) *
              C153511 * C1225 +
          (((C48058 + C48059 + C48060) * C47609 +
            (C48061 + C48062 + C48063) * C47610 +
            (C48064 + C48065 + C48066) * C153890) *
               C153591 -
           (C48070 * C153890 + (C48060 + C48059 + C48058) * C47610 +
            (C195 * C153874 + C194 * C153903 + C193 * C153922) * C47609) *
               C2030) *
              C153511 * C1226 +
          (((C194 * C153922 + C195 * C153903 + C196 * C153874) * C47609 +
            (C48507 + C48508 + C48509) * C47610 +
            (C48510 + C48511 + C48512) * C153890) *
               C2030 -
           (((C134 * C2240 + C2256 + C2256 + C153608 * C2250) * C153874 +
             C7741 * C153903 + C7736 * C153922) *
                C153890 +
            (C48512 + C48511 + C48510) * C47610 +
            (C48509 + C48508 + C48507) * C47609) *
               C153591) *
              C153511 * C1227)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C153922 +
             C193 * C153903 + C194 * C153874) *
                C47609 +
            (C48049 + C48050 + C48051) * C47610 + C48069 * C153890) *
               C2030 -
           ((C48055 + C48056 + C48057) * C153890 +
            (C48054 + C48053 + C48052) * C47610 +
            (C48051 + C48050 + C48049) * C47609) *
               C153591) *
              C320 +
          (((C48803 + C48804 + C48805) * C47609 +
            (C48806 + C48807 + C48808) * C47610 +
            (C49397 + C49398 + C49399) * C153890) *
               C153591 -
           (C49401 * C153890 + (C48805 + C48804 + C48803) * C47610 +
            (C408 * C153874 + C409 * C153903 +
             (C134 * C329 + C374 + C374 + C153608 * C353) * C153922) *
                C47609) *
               C2030) *
              C321 +
          ((((C134 * C330 + C375 + C375 + C153608 * C354) * C153922 +
             C410 * C153903 + C411 * C153874) *
                C47609 +
            (C50128 + C50129 + C50130) * C47610 +
            (C50131 + C50132 + C50133) * C153890) *
               C2030 -
           (((C134 * C6301 + C9872 + C9872 + C153608 * C6313) * C153874 +
             (C134 * C6303 + C9873 + C9873 + C153608 * C6315) * C153903 +
             (C134 * C6305 + C9874 + C9874 + C153608 * C6317) * C153922) *
                C153890 +
            (C50133 + C50132 + C50131) * C47610 +
            (C50130 + C50129 + C50128) * C47609) *
               C153591) *
              C322) *
         C153492) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153608 * C152) * C153922 +
            C193 * C153903 + C194 * C153874) *
               C47609 +
           (C48049 + C48050 + C48051) * C47610 + C48069 * C153890) *
              C2236 -
          (C50720 * C153890 + (C48054 + C48053 + C48052) * C47610 +
           (C48051 + C48050 + C48049) * C47609) *
              C2237 +
          (C48069 * C47609 + (C48057 + C48056 + C48055) * C47610 +
           (C50717 + C50718 + C50719) * C153890) *
              C2238 -
          (((C134 * C10464 + C10479 + C10479 + C153608 * C10470) * C153874 +
            (C134 * C10465 + C10480 + C10480 + C153608 * C10471) * C153903 +
            (C134 * C10466 + C10481 + C10481 + C153608 * C10472) * C153922) *
               C153890 +
           (C50719 + C50718 + C50717) * C47610 + C50720 * C47609) *
              C2239) *
         C153511 * C153492) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
             C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
             C153887 * C354) *
                C153454 * C47609 +
            (C52092 + C52093 + C52094) * C153454 * C47610 + C52106 * C153890) *
               C2030 -
           ((C52098 + C52099 + C52100) * C153454 * C153890 +
            (C52097 + C52096 + C52095) * C153454 * C47610 +
            (C52094 + C52093 + C52092) * C153454 * C47609) *
               C153591) *
              C153511 * C1225 +
          (((C3531 + C3530 + C3529) * C153454 * C47609 +
            (C3532 + C3533 + C3534) * C153454 * C47610 +
            (C52101 + C52102 + C52103) * C153454 * C153890) *
               C153591 -
           (C52091 * C153890 + (C3529 + C3530 + C3531) * C153454 * C47610 +
            (C2896 + C2895 + C2894) * C153454 * C47609) *
               C2030) *
              C153511 * C1226 +
          ((C2908 * C153454 * C47609 +
            (C3528 + C3527 + C3526) * C153454 * C47610 +
            (C3535 + C3536 + C3537) * C153454 * C153890) *
               C2030 -
           ((C2825 * C6301 + C6320 + C6320 + C153887 * C6313 + C2823 * C6302 +
             C6321 + C6321 + C153913 * C6314 + C2821 * C2242 + C6322 + C6322 +
             C153925 * C2252) *
                C153454 * C153890 +
            (C3537 + C3536 + C3535) * C153454 * C47610 +
            C4004 * C153454 * C47609) *
               C153591) *
              C153511 * C1227)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
             C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
             C153887 * C354) *
                C153454 * C47609 +
            (C52092 + C52093 + C52094) * C153454 * C47610 + C52106 * C153890) *
               C2030 -
           ((C52098 + C52099 + C52100) * C153454 * C153890 +
            (C52097 + C52096 + C52095) * C153454 * C47610 +
            (C52094 + C52093 + C52092) * C153454 * C47609) *
               C153591) *
              C320 +
          (((C52875 + C52876 + C52877) * C153454 * C47609 +
            (C52878 + C52879 + C52880) * C153454 * C47610 +
            (C53490 + C53491 + C53492) * C153454 * C153890) *
               C153591 -
           (C53489 * C153890 + (C52877 + C52876 + C52875) * C153454 * C47610 +
            (C2825 * C1319 + C3158 + C3158 + C153887 * C1329 + C2823 * C330 +
             C3159 + C3159 + C153913 * C354 + C2821 * C329 + C3160 + C3160 +
             C153925 * C353) *
                C153454 * C47609) *
               C2030) *
              C321 +
          (((C2821 * C330 + C3161 + C3161 + C153925 * C354 + C2823 * C1319 +
             C3162 + C3162 + C153913 * C1329 + C2825 * C3127 + C3163 + C3163 +
             C153887 * C3135) *
                C153454 * C47609 +
            (C54246 + C54247 + C54248) * C153454 * C47610 +
            (C54249 + C54250 + C54251) * C153454 * C153890) *
               C2030 -
           ((C2825 * C30190 + C54231 + C54231 + C153887 * C30194 +
             C2823 * C30191 + C54232 + C54232 + C153913 * C30195 +
             C2821 * C6305 + C54233 + C54233 + C153925 * C6317) *
                C153454 * C153890 +
            (C54251 + C54250 + C54249) * C153454 * C47610 +
            (C54248 + C54247 + C54246) * C153454 * C47609) *
               C153591) *
              C322) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
            C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
            C153887 * C354) *
               C153454 * C47609 +
           (C52092 + C52093 + C52094) * C153454 * C47610 + C52106 * C153890) *
              C2236 -
          (C54848 * C153890 + (C52097 + C52096 + C52095) * C153454 * C47610 +
           (C52094 + C52093 + C52092) * C153454 * C47609) *
              C2237 +
          (C52106 * C47609 + (C52100 + C52099 + C52098) * C153454 * C47610 +
           (C54852 + C54853 + C54854) * C153454 * C153890) *
              C2238 -
          ((C2825 * C34006 + C54841 + C54841 + C153887 * C34010 +
            C2823 * C34007 + C54842 + C54842 + C153913 * C34011 +
            C2821 * C10466 + C54843 + C54843 + C153925 * C10472) *
               C153454 * C153890 +
           (C54854 + C54853 + C54852) * C153454 * C47610 + C54848 * C47609) *
              C2239) *
         C153511 * C153492) /
            (p * q * std::sqrt(p + q));
    d2ee[223] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
             C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
             C153887 * C354) *
                C2818 +
            (C2894 + C2895 + C2896) * C2819 + C2908 * C153874) *
               C153626 * C153910 -
           (C4004 * C153874 + (C3529 + C3530 + C3531) * C2819 +
            (C2825 * C1892 + C3472 + C3472 + C153887 * C1902 + C2823 * C1057 +
             C3473 + C3473 + C153913 * C1069 + C2821 * C542 + C3474 + C3474 +
             C153925 * C566) *
                C2818) *
               C153626 * C153911 +
           ((C2821 * C543 + C3475 + C3475 + C153925 * C567 + C2823 * C1461 +
             C3476 + C3476 + C153913 * C1471 + C2825 * C3441 + C3477 + C3477 +
             C153887 * C3449) *
                C2818 +
            (C3532 + C3533 + C3534) * C2819 +
            (C3535 + C3536 + C3537) * C153874) *
               C153626 * C2546) *
              C153511 * C153829 +
          (((C3531 + C3530 + C3529) * C2818 + (C3528 + C3527 + C3526) * C2819 +
            (C4011 + C4012 + C4013) * C153874) *
               C153626 * C153911 -
           (C2909 * C153874 + (C2899 + C2898 + C2897) * C2819 +
            (C2896 + C2895 + C2894) * C2818) *
               C153626 * C153910 -
           ((C2825 * C3444 + C3499 + C3499 + C153887 * C3452 + C2823 * C1458 +
             C3500 + C3500 + C153913 * C1468 + C2821 * C546 + C3501 + C3501 +
             C153925 * C570) *
                C153874 +
            (C3537 + C3536 + C3535) * C2819 + (C3534 + C3533 + C3532) * C2818) *
               C153626 * C2546) *
              C153511 * C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153608 * C152) * C122 + C193 * C123 +
            C194 * C124 + C195 * C125 + C196 * C126) *
               C153626 * C153910 -
           (C619 * C126 + C620 * C125 + C621 * C124 + C622 * C123 +
            (C134 * C542 + C587 + C587 + C153608 * C566) * C122) *
               C153626 * C153911 +
           ((C134 * C543 + C588 + C588 + C153608 * C567) * C122 + C623 * C123 +
            C624 * C124 + C625 * C125 + C626 * C126) *
               C153626 * C2546) *
              C153511 * C153829 +
          ((C622 * C122 + C621 * C123 + C620 * C124 + C619 * C125 +
            C895 * C126) *
               C153626 * C153911 -
           (C197 * C126 + C196 * C125 + C195 * C124 + C194 * C123 +
            C193 * C122) *
               C153626 * C153910 -
           ((C134 * C549 + C602 + C602 + C153608 * C573) * C126 + C626 * C125 +
            C625 * C124 + C624 * C123 + C623 * C122) *
               C153626 * C2546) *
              C153511 * C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
             C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 + C24119 +
             C153887 * C354) *
                C153922 +
            (C24183 + C24184 + C24185) * C153903 + C24197 * C153874) *
               C153626 * C153910 -
           (C25269 * C153874 + (C24794 + C24795 + C24796) * C153903 +
            (C24114 * C1892 + C24737 + C24737 + C153887 * C1902 +
             C24112 * C1057 + C24738 + C24738 + C24105 * C1069 + C24110 * C542 +
             C24739 + C24739 + C24104 * C566) *
                C153922) *
               C153626 * C153911 +
           ((C24110 * C543 + C24740 + C24740 + C24104 * C567 + C24112 * C1461 +
             C24741 + C24741 + C24105 * C1471 + C24114 * C3441 + C24742 +
             C24742 + C153887 * C3449) *
                C153922 +
            (C24797 + C24798 + C24799) * C153903 +
            (C24800 + C24801 + C24802) * C153874) *
               C153626 * C2546) *
              C153511 * C153829 +
          (((C24796 + C24795 + C24794) * C153922 +
            (C24793 + C24792 + C24791) * C153903 +
            (C25276 + C25277 + C25278) * C153874) *
               C153626 * C153911 -
           (C24198 * C153874 + (C24188 + C24187 + C24186) * C153903 +
            (C24185 + C24184 + C24183) * C153922) *
               C153626 * C153910 -
           ((C24114 * C3444 + C24764 + C24764 + C153887 * C3452 +
             C24112 * C1458 + C24765 + C24765 + C24105 * C1468 + C24110 * C546 +
             C24766 + C24766 + C24104 * C570) *
                C153874 +
            (C24802 + C24801 + C24800) * C153903 +
            (C24799 + C24798 + C24797) * C153922) *
               C153626 * C2546) *
              C153511 * C153498)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C28350 * C136 + C28361 + C28361 + C28344 * C152 + C28352 * C329 +
            C28362 + C28362 + C28345 * C353 + C28354 * C330 + C28363 + C28363 +
            C28346 * C354 + C28356 * C1319 + C28364 + C28364 + C28347 * C1329 +
            C28358 * C3127 + C28365 + C28365 + C28348 * C3135) *
               C153454 * C153626 * C153910 -
           (C28358 * C5703 + C28657 + C28657 + C28348 * C5709 + C28356 * C4303 +
            C28658 + C28658 + C28347 * C4311 + C28354 * C1892 + C28659 +
            C28659 + C28346 * C1902 + C28352 * C1057 + C28660 + C28660 +
            C28345 * C1069 + C28350 * C542 + C28661 + C28661 + C28344 * C566) *
               C153454 * C153626 * C153911 +
           (C28350 * C543 + C28662 + C28662 + C28344 * C567 + C28352 * C1461 +
            C28663 + C28663 + C28345 * C1471 + C28354 * C3441 + C28664 +
            C28664 + C28346 * C3449 + C28356 * C4959 + C28665 + C28665 +
            C28347 * C4965 + C28358 * C28650 + C28666 + C28666 +
            C28348 * C28654) *
               C153454 * C153626 * C2546) *
              C153511 * C153829 +
          ((C28350 * C541 + C28667 + C28667 + C28344 * C565 + C28352 * C1058 +
            C28668 + C28668 + C28345 * C1070 + C28354 * C1891 + C28669 +
            C28669 + C28346 * C1901 + C28356 * C4304 + C28670 + C28670 +
            C28347 * C4312 + C28358 * C5702 + C28671 + C28671 +
            C28348 * C5708) *
               C153454 * C153626 * C153911 -
           (C28358 * C3128 + C28366 + C28366 + C28348 * C3136 + C28356 * C1318 +
            C28367 + C28367 + C28347 * C1328 + C28354 * C331 + C28368 + C28368 +
            C28346 * C355 + C28352 * C328 + C28369 + C28369 + C28345 * C352 +
            C28350 * C137 + C28370 + C28370 + C28344 * C153) *
               C153454 * C153626 * C153910 -
           (C28358 * C28651 + C28672 + C28672 + C28348 * C28655 +
            C28356 * C4958 + C28673 + C28673 + C28347 * C4964 + C28354 * C3442 +
            C28674 + C28674 + C28346 * C3450 + C28352 * C1460 + C28675 +
            C28675 + C28345 * C1470 + C28350 * C544 + C28676 + C28676 +
            C28344 * C568) *
               C153454 * C153626 * C2546) *
              C153511 * C153498)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C153922 +
             C193 * C153903 + C194 * C153874) *
                C47609 +
            (C48049 + C48050 + C48051) * C47610 + C48069 * C153890) *
               C153910 -
           (C50720 * C153890 + (C48054 + C48053 + C48052) * C47610 +
            (C48051 + C48050 + C48049) * C47609) *
               C153911 +
           (C48069 * C47609 + (C48057 + C48056 + C48055) * C47610 +
            (C50717 + C50718 + C50719) * C153890) *
               C2546) *
              C153511 * C153829 +
          (((C48058 + C48059 + C48060) * C47609 +
            (C48061 + C48062 + C48063) * C47610 +
            (C48064 + C48065 + C48066) * C153890) *
               C153911 -
           (C48070 * C153890 + (C48060 + C48059 + C48058) * C47610 +
            (C195 * C153874 + C194 * C153903 + C193 * C153922) * C47609) *
               C153910 -
           (((C134 * C7676 + C7715 + C7715 + C153608 * C7684) * C153874 +
             C7740 * C153903 + C7739 * C153922) *
                C153890 +
            (C48066 + C48065 + C48064) * C47610 + C48070 * C47609) *
               C2546) *
              C153511 * C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
             C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
             C153887 * C354) *
                C153454 * C47609 +
            (C52092 + C52093 + C52094) * C153454 * C47610 + C52106 * C153890) *
               C153910 -
           (C54848 * C153890 + (C52097 + C52096 + C52095) * C153454 * C47610 +
            (C52094 + C52093 + C52092) * C153454 * C47609) *
               C153911 +
           (C52106 * C47609 + (C52100 + C52099 + C52098) * C153454 * C47610 +
            (C54852 + C54853 + C54854) * C153454 * C153890) *
               C2546) *
              C153511 * C153829 +
          (((C3531 + C3530 + C3529) * C153454 * C47609 +
            (C3532 + C3533 + C3534) * C153454 * C47610 +
            (C52101 + C52102 + C52103) * C153454 * C153890) *
               C153911 -
           (C52091 * C153890 + (C3529 + C3530 + C3531) * C153454 * C47610 +
            (C2896 + C2895 + C2894) * C153454 * C47609) *
               C153910 -
           ((C2825 * C31196 + C52063 + C52063 + C153887 * C31200 +
             C2823 * C9116 + C52064 + C52064 + C153913 * C9122 + C2821 * C7674 +
             C52065 + C52065 + C153925 * C7682) *
                C153454 * C153890 +
            (C52103 + C52102 + C52101) * C153454 * C47610 + C52091 * C47609) *
               C2546) *
              C153511 * C153498)) /
            (p * q * std::sqrt(p + q));
    d2ee[224] +=
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153608 * C152) * C122 + C193 * C123 +
            C194 * C124 + C195 * C125 + C196 * C126) *
               C153626 * C2030 -
           (C619 * C126 + C620 * C125 + C621 * C124 + C622 * C123 +
            (C134 * C542 + C587 + C587 + C153608 * C566) * C122) *
               C153626 * C153591) *
              C320 +
          (((C134 * C1057 + C1076 + C1076 + C153608 * C1069) * C122 +
            C1098 * C123 + C1099 * C124 + C1100 * C125 + C1101 * C126) *
               C153626 * C153591 -
           (C406 * C126 + C407 * C125 + C408 * C124 + C409 * C123 +
            (C134 * C329 + C374 + C374 + C153608 * C353) * C122) *
               C153626 * C2030) *
              C321 +
          (((C134 * C330 + C375 + C375 + C153608 * C354) * C122 + C410 * C123 +
            C411 * C124 + C412 * C125 + C413 * C126) *
               C153626 * C2030 -
           ((C134 * C1888 + C1904 + C1904 + C153608 * C1898) * C126 +
            (C134 * C1889 + C1905 + C1905 + C153608 * C1899) * C125 +
            (C134 * C1890 + C1906 + C1906 + C153608 * C1900) * C124 +
            (C134 * C1891 + C1907 + C1907 + C153608 * C1901) * C123 +
            (C134 * C1892 + C1908 + C1908 + C153608 * C1902) * C122) *
               C153626 * C153591) *
              C322) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153608 * C152) * C122 + C193 * C123 +
            C194 * C124 + C195 * C125 + C196 * C126) *
               C153626 * C2030 -
           (C619 * C126 + C620 * C125 + C621 * C124 + C622 * C123 +
            (C134 * C542 + C587 + C587 + C153608 * C566) * C122) *
               C153626 * C153591) *
              C153511 * C1225 +
          ((C622 * C122 + C621 * C123 + C620 * C124 + C619 * C125 +
            C895 * C126) *
               C153626 * C153591 -
           (C197 * C126 + C196 * C125 + C195 * C124 + C194 * C123 +
            C193 * C122) *
               C153626 * C2030) *
              C153511 * C1226 +
          ((C194 * C122 + C195 * C123 + C196 * C124 + C197 * C125 +
            C198 * C126) *
               C153626 * C2030 -
           ((C134 * C886 + C892 + C892 + C153608 * C888) * C126 + C895 * C125 +
            C619 * C124 + C620 * C123 + C621 * C122) *
               C153626 * C153591) *
              C153511 * C1227)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
             C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
             C153887 * C354) *
                C2818 +
            (C2894 + C2895 + C2896) * C2819 + C2908 * C153874) *
               C153626 * C2030 -
           (C4004 * C153874 + (C3529 + C3530 + C3531) * C2819 +
            (C2825 * C1892 + C3472 + C3472 + C153887 * C1902 + C2823 * C1057 +
             C3473 + C3473 + C153913 * C1069 + C2821 * C542 + C3474 + C3474 +
             C153925 * C566) *
                C2818) *
               C153626 * C153591) *
              C153511 * C1225 +
          (((C3531 + C3530 + C3529) * C2818 + (C3528 + C3527 + C3526) * C2819 +
            (C4011 + C4012 + C4013) * C153874) *
               C153626 * C153591 -
           (C2909 * C153874 + (C2899 + C2898 + C2897) * C2819 +
            (C2896 + C2895 + C2894) * C2818) *
               C153626 * C2030) *
              C153511 * C1226 +
          ((C2908 * C2818 + (C2902 + C2901 + C2900) * C2819 +
            (C2903 + C2904 + C2905) * C153874) *
               C153626 * C2030 -
           ((C2825 * C1888 + C4001 + C4001 + C153887 * C1898 + C2823 * C1061 +
             C4002 + C4002 + C153913 * C1073 + C2821 * C538 + C4003 + C4003 +
             C153925 * C562) *
                C153874 +
            (C4013 + C4012 + C4011) * C2819 + C4004 * C2818) *
               C153626 * C153591) *
              C153511 * C1227)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
             C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
             C153887 * C354) *
                C2818 +
            (C2894 + C2895 + C2896) * C2819 + C2908 * C153874) *
               C153626 * C2030 -
           (C4004 * C153874 + (C3529 + C3530 + C3531) * C2819 +
            (C2825 * C1892 + C3472 + C3472 + C153887 * C1902 + C2823 * C1057 +
             C3473 + C3473 + C153913 * C1069 + C2821 * C542 + C3474 + C3474 +
             C153925 * C566) *
                C2818) *
               C153626 * C153591) *
              C320 +
          (((C2821 * C1057 + C4316 + C4316 + C153925 * C1069 + C2823 * C1892 +
             C4317 + C4317 + C153913 * C1902 + C2825 * C4303 + C4318 + C4318 +
             C153887 * C4311) *
                C2818 +
            (C4352 + C4353 + C4354) * C2819 +
            (C4355 + C4356 + C4357) * C153874) *
               C153626 * C153591 -
           (C3766 * C153874 + (C3215 + C3216 + C3217) * C2819 +
            (C2825 * C1319 + C3158 + C3158 + C153887 * C1329 + C2823 * C330 +
             C3159 + C3159 + C153913 * C354 + C2821 * C329 + C3160 + C3160 +
             C153925 * C353) *
                C2818) *
               C153626 * C2030) *
              C321 +
          (((C2821 * C330 + C3161 + C3161 + C153925 * C354 + C2823 * C1319 +
             C3162 + C3162 + C153913 * C1329 + C2825 * C3127 + C3163 + C3163 +
             C153887 * C3135) *
                C2818 +
            (C3218 + C3219 + C3220) * C2819 +
            (C3221 + C3222 + C3223) * C153874) *
               C153626 * C2030 -
           ((C2825 * C5701 + C5711 + C5711 + C153887 * C5707 + C2823 * C4305 +
             C5712 + C5712 + C153913 * C4313 + C2821 * C1890 + C5713 + C5713 +
             C153925 * C1900) *
                C153874 +
            (C2825 * C5702 + C5714 + C5714 + C153887 * C5708 + C2823 * C4304 +
             C5715 + C5715 + C153913 * C4312 + C2821 * C1891 + C5716 + C5716 +
             C153925 * C1901) *
                C2819 +
            (C2825 * C5703 + C5717 + C5717 + C153887 * C5709 + C2823 * C4303 +
             C5718 + C5718 + C153913 * C4311 + C2821 * C1892 + C5719 + C5719 +
             C153925 * C1902) *
                C2818) *
               C153626 * C153591) *
              C322) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
             C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 + C24119 +
             C153887 * C354) *
                C153922 +
            (C24183 + C24184 + C24185) * C153903 + C24197 * C153874) *
               C153626 * C2030 -
           (C25269 * C153874 + (C24794 + C24795 + C24796) * C153903 +
            (C24114 * C1892 + C24737 + C24737 + C153887 * C1902 +
             C24112 * C1057 + C24738 + C24738 + C24105 * C1069 + C24110 * C542 +
             C24739 + C24739 + C24104 * C566) *
                C153922) *
               C153626 * C153591) *
              C153511 * C1225 +
          (((C24796 + C24795 + C24794) * C153922 +
            (C24793 + C24792 + C24791) * C153903 +
            (C25276 + C25277 + C25278) * C153874) *
               C153626 * C153591 -
           (C24198 * C153874 + (C24188 + C24187 + C24186) * C153903 +
            (C24185 + C24184 + C24183) * C153922) *
               C153626 * C2030) *
              C153511 * C1226 +
          ((C24197 * C153922 + (C24191 + C24190 + C24189) * C153903 +
            (C24192 + C24193 + C24194) * C153874) *
               C153626 * C2030 -
           ((C24114 * C1888 + C25266 + C25266 + C153887 * C1898 +
             C24112 * C1061 + C25267 + C25267 + C24105 * C1073 + C24110 * C538 +
             C25268 + C25268 + C24104 * C562) *
                C153874 +
            (C25278 + C25277 + C25276) * C153903 + C25269 * C153922) *
               C153626 * C153591) *
              C153511 * C1227)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
             C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 + C24119 +
             C153887 * C354) *
                C153922 +
            (C24183 + C24184 + C24185) * C153903 + C24197 * C153874) *
               C153626 * C2030 -
           (C25269 * C153874 + (C24794 + C24795 + C24796) * C153903 +
            (C24114 * C1892 + C24737 + C24737 + C153887 * C1902 +
             C24112 * C1057 + C24738 + C24738 + C24105 * C1069 + C24110 * C542 +
             C24739 + C24739 + C24104 * C566) *
                C153922) *
               C153626 * C153591) *
              C320 +
          (((C24110 * C1057 + C25569 + C25569 + C24104 * C1069 +
             C24112 * C1892 + C25570 + C25570 + C24105 * C1902 +
             C24114 * C4303 + C25571 + C25571 + C153887 * C4311) *
                C153922 +
            (C25605 + C25606 + C25607) * C153903 +
            (C25608 + C25609 + C25610) * C153874) *
               C153626 * C153591 -
           (C25031 * C153874 + (C24492 + C24493 + C24494) * C153903 +
            (C24114 * C1319 + C24435 + C24435 + C153887 * C1329 +
             C24112 * C330 + C24436 + C24436 + C24105 * C354 + C24110 * C329 +
             C24437 + C24437 + C24104 * C353) *
                C153922) *
               C153626 * C2030) *
              C321 +
          (((C24110 * C330 + C24438 + C24438 + C24104 * C354 + C24112 * C1319 +
             C24439 + C24439 + C24105 * C1329 + C24114 * C3127 + C24440 +
             C24440 + C153887 * C3135) *
                C153922 +
            (C24495 + C24496 + C24497) * C153903 +
            (C24498 + C24499 + C24500) * C153874) *
               C153626 * C2030 -
           ((C24114 * C5701 + C26937 + C26937 + C153887 * C5707 +
             C24112 * C4305 + C26938 + C26938 + C24105 * C4313 +
             C24110 * C1890 + C26939 + C26939 + C24104 * C1900) *
                C153874 +
            (C24114 * C5702 + C26940 + C26940 + C153887 * C5708 +
             C24112 * C4304 + C26941 + C26941 + C24105 * C4312 +
             C24110 * C1891 + C26942 + C26942 + C24104 * C1901) *
                C153903 +
            (C24114 * C5703 + C26943 + C26943 + C153887 * C5709 +
             C24112 * C4303 + C26944 + C26944 + C24105 * C4311 +
             C24110 * C1892 + C26945 + C26945 + C24104 * C1902) *
                C153922) *
               C153626 * C153591) *
              C322) *
         C153492) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C28350 * C136 + C28361 + C28361 + C28344 * C152 + C28352 * C329 +
            C28362 + C28362 + C28345 * C353 + C28354 * C330 + C28363 + C28363 +
            C28346 * C354 + C28356 * C1319 + C28364 + C28364 + C28347 * C1329 +
            C28358 * C3127 + C28365 + C28365 + C28348 * C3135) *
               C153454 * C153626 * C2030 -
           (C28358 * C5703 + C28657 + C28657 + C28348 * C5709 + C28356 * C4303 +
            C28658 + C28658 + C28347 * C4311 + C28354 * C1892 + C28659 +
            C28659 + C28346 * C1902 + C28352 * C1057 + C28660 + C28660 +
            C28345 * C1069 + C28350 * C542 + C28661 + C28661 + C28344 * C566) *
               C153454 * C153626 * C153591) *
              C153511 * C1225 +
          ((C28350 * C541 + C28667 + C28667 + C28344 * C565 + C28352 * C1058 +
            C28668 + C28668 + C28345 * C1070 + C28354 * C1891 + C28669 +
            C28669 + C28346 * C1901 + C28356 * C4304 + C28670 + C28670 +
            C28347 * C4312 + C28358 * C5702 + C28671 + C28671 +
            C28348 * C5708) *
               C153454 * C153626 * C153591 -
           (C28358 * C3128 + C28366 + C28366 + C28348 * C3136 + C28356 * C1318 +
            C28367 + C28367 + C28347 * C1328 + C28354 * C331 + C28368 + C28368 +
            C28346 * C355 + C28352 * C328 + C28369 + C28369 + C28345 * C352 +
            C28350 * C137 + C28370 + C28370 + C28344 * C153) *
               C153454 * C153626 * C2030) *
              C153511 * C1226 +
          ((C28350 * C138 + C28371 + C28371 + C28344 * C154 + C28352 * C327 +
            C28372 + C28372 + C28345 * C351 + C28354 * C332 + C28373 + C28373 +
            C28346 * C356 + C28356 * C1317 + C28374 + C28374 + C28347 * C1327 +
            C28358 * C3129 + C28375 + C28375 + C28348 * C3137) *
               C153454 * C153626 * C2030 -
           (C28358 * C5701 + C28926 + C28926 + C28348 * C5707 + C28356 * C4305 +
            C28927 + C28927 + C28347 * C4313 + C28354 * C1890 + C28928 +
            C28928 + C28346 * C1900 + C28352 * C1059 + C28929 + C28929 +
            C28345 * C1071 + C28350 * C540 + C28930 + C28930 + C28344 * C564) *
               C153454 * C153626 * C153591) *
              C153511 * C1227)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C28350 * C136 + C28361 + C28361 + C28344 * C152 + C28352 * C329 +
            C28362 + C28362 + C28345 * C353 + C28354 * C330 + C28363 + C28363 +
            C28346 * C354 + C28356 * C1319 + C28364 + C28364 + C28347 * C1329 +
            C28358 * C3127 + C28365 + C28365 + C28348 * C3135) *
               C153454 * C153626 * C2030 -
           (C28358 * C5703 + C28657 + C28657 + C28348 * C5709 + C28356 * C4303 +
            C28658 + C28658 + C28347 * C4311 + C28354 * C1892 + C28659 +
            C28659 + C28346 * C1902 + C28352 * C1057 + C28660 + C28660 +
            C28345 * C1069 + C28350 * C542 + C28661 + C28661 + C28344 * C566) *
               C153454 * C153626 * C153591) *
              C320 +
          ((C28350 * C1057 + C29099 + C29099 + C28344 * C1069 + C28352 * C1892 +
            C29100 + C29100 + C28345 * C1902 + C28354 * C4303 + C29101 +
            C29101 + C28346 * C4311 + C28356 * C5703 + C29102 + C29102 +
            C28347 * C5709 + C28358 * C29092 + C29103 + C29103 +
            C28348 * C29096) *
               C153454 * C153626 * C153591 -
           (C28358 * C4723 + C28509 + C28509 + C28348 * C4729 + C28356 * C3127 +
            C28510 + C28510 + C28347 * C3135 + C28354 * C1319 + C28511 +
            C28511 + C28346 * C1329 + C28352 * C330 + C28512 + C28512 +
            C28345 * C354 + C28350 * C329 + C28513 + C28513 + C28344 * C353) *
               C153454 * C153626 * C2030) *
              C321 +
          ((C28350 * C330 + C28514 + C28514 + C28344 * C354 + C28352 * C1319 +
            C28515 + C28515 + C28345 * C1329 + C28354 * C3127 + C28516 +
            C28516 + C28346 * C3135 + C28356 * C4723 + C28517 + C28517 +
            C28347 * C4729 + C28358 * C28502 + C28518 + C28518 +
            C28348 * C28506) *
               C153454 * C153626 * C2030 -
           (C28358 * C29856 + C29860 + C29860 + C28348 * C29858 +
            C28356 * C29092 + C29861 + C29861 + C28347 * C29096 +
            C28354 * C5703 + C29862 + C29862 + C28346 * C5709 + C28352 * C4303 +
            C29863 + C29863 + C28345 * C4311 + C28350 * C1892 + C29864 +
            C29864 + C28344 * C1902) *
               C153454 * C153626 * C153591) *
              C322) *
         C153492) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C153922 +
             C193 * C153903 + C194 * C153874) *
                C47609 +
            (C48049 + C48050 + C48051) * C47610 + C48069 * C153890) *
               C2030 -
           ((C48055 + C48056 + C48057) * C153890 +
            (C48054 + C48053 + C48052) * C47610 +
            (C48051 + C48050 + C48049) * C47609) *
               C153591) *
              C153511 * C1225 +
          (((C48058 + C48059 + C48060) * C47609 +
            (C48061 + C48062 + C48063) * C47610 +
            (C48064 + C48065 + C48066) * C153890) *
               C153591 -
           (C48070 * C153890 + (C48060 + C48059 + C48058) * C47610 +
            (C195 * C153874 + C194 * C153903 + C193 * C153922) * C47609) *
               C2030) *
              C153511 * C1226 +
          (((C194 * C153922 + C195 * C153903 + C196 * C153874) * C47609 +
            (C48507 + C48508 + C48509) * C47610 +
            (C48510 + C48511 + C48512) * C153890) *
               C2030 -
           (((C134 * C2240 + C2256 + C2256 + C153608 * C2250) * C153874 +
             C7741 * C153903 + C7736 * C153922) *
                C153890 +
            (C48512 + C48511 + C48510) * C47610 +
            (C48509 + C48508 + C48507) * C47609) *
               C153591) *
              C153511 * C1227)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C153922 +
             C193 * C153903 + C194 * C153874) *
                C47609 +
            (C48049 + C48050 + C48051) * C47610 + C48069 * C153890) *
               C2030 -
           ((C48055 + C48056 + C48057) * C153890 +
            (C48054 + C48053 + C48052) * C47610 +
            (C48051 + C48050 + C48049) * C47609) *
               C153591) *
              C320 +
          (((C48803 + C48804 + C48805) * C47609 +
            (C48806 + C48807 + C48808) * C47610 +
            (C49397 + C49398 + C49399) * C153890) *
               C153591 -
           (C49401 * C153890 + (C48805 + C48804 + C48803) * C47610 +
            (C408 * C153874 + C409 * C153903 +
             (C134 * C329 + C374 + C374 + C153608 * C353) * C153922) *
                C47609) *
               C2030) *
              C321 +
          ((((C134 * C330 + C375 + C375 + C153608 * C354) * C153922 +
             C410 * C153903 + C411 * C153874) *
                C47609 +
            (C50128 + C50129 + C50130) * C47610 +
            (C50131 + C50132 + C50133) * C153890) *
               C2030 -
           (((C134 * C6301 + C9872 + C9872 + C153608 * C6313) * C153874 +
             (C134 * C6303 + C9873 + C9873 + C153608 * C6315) * C153903 +
             (C134 * C6305 + C9874 + C9874 + C153608 * C6317) * C153922) *
                C153890 +
            (C50133 + C50132 + C50131) * C47610 +
            (C50130 + C50129 + C50128) * C47609) *
               C153591) *
              C322) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
             C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
             C153887 * C354) *
                C153454 * C47609 +
            (C52092 + C52093 + C52094) * C153454 * C47610 + C52106 * C153890) *
               C2030 -
           ((C52098 + C52099 + C52100) * C153454 * C153890 +
            (C52097 + C52096 + C52095) * C153454 * C47610 +
            (C52094 + C52093 + C52092) * C153454 * C47609) *
               C153591) *
              C153511 * C1225 +
          (((C3531 + C3530 + C3529) * C153454 * C47609 +
            (C3532 + C3533 + C3534) * C153454 * C47610 +
            (C52101 + C52102 + C52103) * C153454 * C153890) *
               C153591 -
           (C52091 * C153890 + (C3529 + C3530 + C3531) * C153454 * C47610 +
            (C2896 + C2895 + C2894) * C153454 * C47609) *
               C2030) *
              C153511 * C1226 +
          ((C2908 * C153454 * C47609 +
            (C3528 + C3527 + C3526) * C153454 * C47610 +
            (C3535 + C3536 + C3537) * C153454 * C153890) *
               C2030 -
           ((C2825 * C6301 + C6320 + C6320 + C153887 * C6313 + C2823 * C6302 +
             C6321 + C6321 + C153913 * C6314 + C2821 * C2242 + C6322 + C6322 +
             C153925 * C2252) *
                C153454 * C153890 +
            (C3537 + C3536 + C3535) * C153454 * C47610 +
            C4004 * C153454 * C47609) *
               C153591) *
              C153511 * C1227)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
             C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
             C153887 * C354) *
                C153454 * C47609 +
            (C52092 + C52093 + C52094) * C153454 * C47610 + C52106 * C153890) *
               C2030 -
           ((C52098 + C52099 + C52100) * C153454 * C153890 +
            (C52097 + C52096 + C52095) * C153454 * C47610 +
            (C52094 + C52093 + C52092) * C153454 * C47609) *
               C153591) *
              C320 +
          (((C52875 + C52876 + C52877) * C153454 * C47609 +
            (C52878 + C52879 + C52880) * C153454 * C47610 +
            (C53490 + C53491 + C53492) * C153454 * C153890) *
               C153591 -
           (C53489 * C153890 + (C52877 + C52876 + C52875) * C153454 * C47610 +
            (C2825 * C1319 + C3158 + C3158 + C153887 * C1329 + C2823 * C330 +
             C3159 + C3159 + C153913 * C354 + C2821 * C329 + C3160 + C3160 +
             C153925 * C353) *
                C153454 * C47609) *
               C2030) *
              C321 +
          (((C2821 * C330 + C3161 + C3161 + C153925 * C354 + C2823 * C1319 +
             C3162 + C3162 + C153913 * C1329 + C2825 * C3127 + C3163 + C3163 +
             C153887 * C3135) *
                C153454 * C47609 +
            (C54246 + C54247 + C54248) * C153454 * C47610 +
            (C54249 + C54250 + C54251) * C153454 * C153890) *
               C2030 -
           ((C2825 * C30190 + C54231 + C54231 + C153887 * C30194 +
             C2823 * C30191 + C54232 + C54232 + C153913 * C30195 +
             C2821 * C6305 + C54233 + C54233 + C153925 * C6317) *
                C153454 * C153890 +
            (C54251 + C54250 + C54249) * C153454 * C47610 +
            (C54248 + C54247 + C54246) * C153454 * C47609) *
               C153591) *
              C322) *
         C153492) /
            (p * q * std::sqrt(p + q));
    d2ee[225] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C11348 * C136 + C11353 + C11353 + C153851 * C152 + C11350 * C329 +
              C11354 + C11354 + C153671 * C353) *
                 C153459 +
             (C11407 + C11408) * C153467 + C11417 * C83548) *
                C98459 +
            ((C19416 + C19417) * C153459 + C19382 * C153467 + C18777 * C83548) *
                C153713) *
               C153527 * C153837 -
           ((C19714 * C83548 + C20406 * C153467 + (C20420 + C20419) * C153459) *
                C153713 +
            (C12164 * C83548 + (C11687 + C11688) * C153467 +
             (C11350 * C330 + C11633 + C11633 + C153671 * C354 + C11348 * C329 +
              C11634 + C11634 + C153851 * C353) *
                 C153459) *
                C98459) *
               C153527 * C153563) *
              C153906 +
          ((((C11688 + C11687) * C153459 + (C11686 + C11685) * C153467 +
             (C11684 + C11683) * C83548) *
                C98459 +
            (C20396 * C153459 + C20397 * C153467 + (C12681 + C12682) * C83548) *
                C153713) *
               C153527 * C153563 -
           ((C12371 * C83548 + C12372 * C153467 + C19389 * C153459) * C153713 +
            (C11420 * C83548 + (C11410 + C11409) * C153467 +
             (C11408 + C11407) * C153459) *
                C98459) *
               C153527 * C153837) *
              C153907 +
          (((C11417 * C153459 + C11418 * C153467 + (C11414 + C11413) * C83548) *
                C98459 +
            (C18777 * C153459 + C20005 * C153467 + (C12383 + C12384) * C83548) *
                C153713) *
               C153527 * C153837 -
           (((C11350 * C1888 + C12663 + C12663 + C153671 * C1898 +
              C11348 * C1061 + C12664 + C12664 + C153851 * C1073) *
                 C83548 +
             (C12682 + C12681) * C153467 + C19714 * C153459) *
                C153713 +
            ((C12176 + C12175) * C83548 + C12163 * C153467 + C12164 * C153459) *
                C98459) *
               C153527 * C153563) *
              C752)) /
        (p * q * std::sqrt(p + q));
    d2ee[226] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C11348 * C136 + C11353 + C11353 + C153851 * C152 +
               C11350 * C329 + C11354 + C11354 + C153671 * C353) *
                  C153459 +
              (C11407 + C11408) * C153467 + C11417 * C83548) *
                 C98459 +
             ((C19416 + C19417) * C153459 + C19382 * C153467 +
              C18777 * C83548) *
                 C153713) *
                C153838 -
            ((C19383 * C83548 + C19384 * C153467 +
              (C19418 + C19419) * C153459) *
                 C153713 +
             (C12372 * C83548 + C19389 * C153467 +
              (C19417 + C19416) * C153459) *
                 C98459) *
                C153591) *
               C153837 +
           ((((C20419 + C20420) * C153459 + C20396 * C153467 +
              C20397 * C83548) *
                 C98459 +
             ((C21219 + C21220) * C153459 + C59645 * C153467 +
              (C20423 + C20424) * C83548) *
                 C153713) *
                C153591 -
            ((C19714 * C83548 + C20406 * C153467 +
              (C20420 + C20419) * C153459) *
                 C153713 +
             (C12164 * C83548 + (C11687 + C11688) * C153467 +
              (C11350 * C330 + C11633 + C11633 + C153671 * C354 +
               C11348 * C329 + C11634 + C11634 + C153851 * C353) *
                  C153459) *
                 C98459) *
                C153838) *
               C153563) *
              C323 +
          ((((C19382 * C153459 + C18777 * C153467 + C20005 * C83548) * C98459 +
             (C19390 * C153459 + C19391 * C153467 +
              (C11967 + C11968) * C83548) *
                 C153713) *
                C153591 -
            ((C12371 * C83548 + C12372 * C153467 + C19389 * C153459) * C153713 +
             (C11420 * C83548 + (C11410 + C11409) * C153467 +
              (C11408 + C11407) * C153459) *
                 C98459) *
                C153838) *
               C153837 +
           ((((C11688 + C11687) * C153459 + (C11686 + C11685) * C153467 +
              (C11684 + C11683) * C83548) *
                 C98459 +
             (C20396 * C153459 + C20397 * C153467 +
              (C12681 + C12682) * C83548) *
                 C153713) *
                C153838 -
            (((C11350 * C3444 + C13209 + C13209 + C153671 * C3452 +
               C11348 * C1458 + C13210 + C13210 + C153851 * C1468) *
                  C83548 +
              (C20424 + C20423) * C153467 + C59650 * C153459) *
                 C153713 +
             ((C12682 + C12681) * C83548 + C19714 * C153467 +
              C20406 * C153459) *
                 C98459) *
                C153591) *
               C153563) *
              C153498)) /
        (p * q * std::sqrt(p + q));
    d2ee[227] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C11348 * C136 + C11353 + C11353 + C153851 * C152 + C11350 * C329 +
              C11354 + C11354 + C153671 * C353) *
                 C153459 +
             (C11407 + C11408) * C153467 + C11417 * C83548) *
                C98459 +
            ((C19416 + C19417) * C153459 + C19382 * C153467 + C18777 * C83548) *
                C153713) *
               C153527 * C320 -
           ((C19714 * C83548 + C20406 * C153467 + (C20420 + C20419) * C153459) *
                C153713 +
            (C12164 * C83548 + (C11687 + C11688) * C153467 +
             (C11350 * C330 + C11633 + C11633 + C153671 * C354 + C11348 * C329 +
              C11634 + C11634 + C153851 * C353) *
                 C153459) *
                C98459) *
               C153527 * C321 +
           (((C11348 * C330 + C11635 + C11635 + C153851 * C354 +
              C11350 * C1319 + C11636 + C11636 + C153671 * C1329) *
                 C153459 +
             (C11689 + C11690) * C153467 + (C11691 + C11692) * C83548) *
                C98459 +
            ((C22201 + C22202) * C153459 + (C19084 + C19085) * C153467 +
             (C19086 + C19087) * C83548) *
                C153713) *
               C153527 * C322) *
              C323 +
          ((((C11688 + C11687) * C153459 + (C11686 + C11685) * C153467 +
             (C11684 + C11683) * C83548) *
                C98459 +
            (C20396 * C153459 + C20397 * C153467 + (C12681 + C12682) * C83548) *
                C153713) *
               C153527 * C321 -
           ((C12371 * C83548 + C12372 * C153467 + C19389 * C153459) * C153713 +
            (C11420 * C83548 + (C11410 + C11409) * C153467 +
             (C11408 + C11407) * C153459) *
                C98459) *
               C153527 * C320 -
           (((C11350 * C4306 + C13863 + C13863 + C153671 * C4314 +
              C11348 * C1889 + C13864 + C13864 + C153851 * C1899) *
                 C83548 +
             (C19087 + C19086) * C153467 + (C19085 + C19084) * C153459) *
                C153713 +
            ((C11694 + C11693) * C83548 + (C11692 + C11691) * C153467 +
             (C11690 + C11689) * C153459) *
                C98459) *
               C153527 * C322) *
              C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C11348 * C136 + C11353 + C11353 + C153851 * C152 + C11350 * C329 +
             C11354 + C11354 + C153671 * C353) *
                C153459 +
            (C11407 + C11408) * C153467 + C11417 * C83548) *
               C98459 +
           ((C19416 + C19417) * C153459 + C19382 * C153467 + C18777 * C83548) *
               C153713) *
              C153527 * C153511 * C130 -
          ((C12371 * C83548 + C12372 * C153467 + C19389 * C153459) * C153713 +
           (C11420 * C83548 + (C11410 + C11409) * C153467 +
            (C11408 + C11407) * C153459) *
               C98459) *
              C153527 * C153511 * C131 +
          ((C11417 * C153459 + C11418 * C153467 + (C11414 + C11413) * C83548) *
               C98459 +
           (C18777 * C153459 + C20005 * C153467 + (C12383 + C12384) * C83548) *
               C153713) *
              C153527 * C153511 * C132 -
          (((C11350 * C1062 + C12377 + C12377 + C153671 * C1074 +
             C11348 * C548 + C12378 + C12378 + C153851 * C572) *
                C83548 +
            (C12384 + C12383) * C153467 + C12371 * C153459) *
               C153713 +
           ((C11416 + C11415) * C83548 + C11419 * C153467 + C11420 * C153459) *
               C98459) *
              C153527 * C153511 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C11348 * C136 + C11353 + C11353 + C153851 * C152 + C11350 * C329 +
              C11354 + C11354 + C153671 * C353) *
                 C153459 +
             (C11407 + C11408) * C153467 + C11417 * C83548) *
                C98459 +
            ((C19416 + C19417) * C153459 + C19382 * C153467 + C18777 * C83548) *
                C153713) *
               C535 -
           ((C19383 * C83548 + C19384 * C153467 + (C19418 + C19419) * C153459) *
                C153713 +
            (C12372 * C83548 + C19389 * C153467 + (C19417 + C19416) * C153459) *
                C98459) *
               C536 +
           ((C58660 * C153459 + C19390 * C153467 + C19391 * C83548) * C98459 +
            (C67264 * C153459 + C58663 * C153467 + (C19422 + C19423) * C83548) *
                C153713) *
               C537) *
              C153511 * C323 +
          (((C19382 * C153459 + C18777 * C153467 + C20005 * C83548) * C98459 +
            (C19390 * C153459 + C19391 * C153467 + (C11967 + C11968) * C83548) *
                C153713) *
               C536 -
           ((C12371 * C83548 + C12372 * C153467 + C19389 * C153459) * C153713 +
            (C11420 * C83548 + (C11410 + C11409) * C153467 +
             (C11408 + C11407) * C153459) *
                C98459) *
               C535 -
           (((C11350 * C8488 + C14389 + C14389 + C153671 * C8490 +
              C11348 * C2241 + C14390 + C14390 + C153851 * C2251) *
                 C83548 +
             (C19423 + C19422) * C153467 + C58662 * C153459) *
                C153713 +
            ((C11968 + C11967) * C83548 + C19383 * C153467 + C19384 * C153459) *
                C98459) *
               C537) *
              C153511 * C153498)) /
            (p * q * std::sqrt(p + q));
    d2ee[228] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C11348 * C136 + C11353 + C11353 + C153851 * C152 + C11350 * C329 +
              C11354 + C11354 + C153671 * C353) *
                 C153459 +
             (C11407 + C11408) * C153467 + C11417 * C83548) *
                C98459 +
            ((C19416 + C19417) * C153459 + C19382 * C153467 + C18777 * C83548) *
                C153713) *
               C153838 -
           ((C19383 * C83548 + C19384 * C153467 + (C19418 + C19419) * C153459) *
                C153713 +
            (C12372 * C83548 + C19389 * C153467 + (C19417 + C19416) * C153459) *
                C98459) *
               C153591) *
              C153511 * C153906 +
          (((C19382 * C153459 + C18777 * C153467 + C20005 * C83548) * C98459 +
            (C19390 * C153459 + C19391 * C153467 + (C11967 + C11968) * C83548) *
                C153713) *
               C153591 -
           ((C12371 * C83548 + C12372 * C153467 + C19389 * C153459) * C153713 +
            (C11420 * C83548 + (C11410 + C11409) * C153467 +
             (C11408 + C11407) * C153459) *
                C98459) *
               C153838) *
              C153511 * C153907 +
          (((C11417 * C153459 + C11418 * C153467 + (C11414 + C11413) * C83548) *
                C98459 +
            (C18777 * C153459 + C20005 * C153467 + (C12383 + C12384) * C83548) *
                C153713) *
               C153838 -
           (((C11350 * C1457 + C11931 + C11931 + C153671 * C1467 +
              C11348 * C547 + C11932 + C11932 + C153851 * C571) *
                 C83548 +
             (C11968 + C11967) * C153467 + C19383 * C153459) *
                C153713 +
            ((C12384 + C12383) * C83548 + C12371 * C153467 + C12372 * C153459) *
                C98459) *
               C153591) *
              C153511 * C752)) /
        (p * q * std::sqrt(p + q));
    d2ee[229] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C11348 * C136 + C11353 + C11353 + C153851 * C152 + C11350 * C329 +
             C11354 + C11354 + C153671 * C353) *
                C153459 +
            (C11407 + C11408) * C153467 + C11417 * C83548) *
               C98459 +
           ((C19416 + C19417) * C153459 + C19382 * C153467 + C18777 * C83548) *
               C153713) *
              C153527 * C153511 * C130 -
          ((C12371 * C83548 + C12372 * C153467 + C19389 * C153459) * C153713 +
           (C11420 * C83548 + (C11410 + C11409) * C153467 +
            (C11408 + C11407) * C153459) *
               C98459) *
              C153527 * C153511 * C131 +
          ((C11417 * C153459 + C11418 * C153467 + (C11414 + C11413) * C83548) *
               C98459 +
           (C18777 * C153459 + C20005 * C153467 + (C12383 + C12384) * C83548) *
               C153713) *
              C153527 * C153511 * C132 -
          (((C11350 * C1062 + C12377 + C12377 + C153671 * C1074 +
             C11348 * C548 + C12378 + C12378 + C153851 * C572) *
                C83548 +
            (C12384 + C12383) * C153467 + C12371 * C153459) *
               C153713 +
           ((C11416 + C11415) * C83548 + C11419 * C153467 + C11420 * C153459) *
               C98459) *
              C153527 * C153511 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C11348 * C136 + C11353 + C11353 + C153851 * C152 + C11350 * C329 +
              C11354 + C11354 + C153671 * C353) *
                 C153459 +
             (C11407 + C11408) * C153467 + C11417 * C83548) *
                C98459 +
            ((C19416 + C19417) * C153459 + C19382 * C153467 + C18777 * C83548) *
                C153713) *
               C153527 * C320 -
           ((C19714 * C83548 + C20406 * C153467 + (C20420 + C20419) * C153459) *
                C153713 +
            (C12164 * C83548 + (C11687 + C11688) * C153467 +
             (C11350 * C330 + C11633 + C11633 + C153671 * C354 + C11348 * C329 +
              C11634 + C11634 + C153851 * C353) *
                 C153459) *
                C98459) *
               C153527 * C321 +
           (((C11348 * C330 + C11635 + C11635 + C153851 * C354 +
              C11350 * C1319 + C11636 + C11636 + C153671 * C1329) *
                 C153459 +
             (C11689 + C11690) * C153467 + (C11691 + C11692) * C83548) *
                C98459 +
            ((C22201 + C22202) * C153459 + (C19084 + C19085) * C153467 +
             (C19086 + C19087) * C83548) *
                C153713) *
               C153527 * C322) *
              C323 +
          ((((C11688 + C11687) * C153459 + (C11686 + C11685) * C153467 +
             (C11684 + C11683) * C83548) *
                C98459 +
            (C20396 * C153459 + C20397 * C153467 + (C12681 + C12682) * C83548) *
                C153713) *
               C153527 * C321 -
           ((C12371 * C83548 + C12372 * C153467 + C19389 * C153459) * C153713 +
            (C11420 * C83548 + (C11410 + C11409) * C153467 +
             (C11408 + C11407) * C153459) *
                C98459) *
               C153527 * C320 -
           (((C11350 * C4306 + C13863 + C13863 + C153671 * C4314 +
              C11348 * C1889 + C13864 + C13864 + C153851 * C1899) *
                 C83548 +
             (C19087 + C19086) * C153467 + (C19085 + C19084) * C153459) *
                C153713 +
            ((C11694 + C11693) * C83548 + (C11692 + C11691) * C153467 +
             (C11690 + C11689) * C153459) *
                C98459) *
               C153527 * C322) *
              C153498)) /
            (p * q * std::sqrt(p + q));
    d2ee[230] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C11348 * C136 + C11353 + C11353 + C153851 * C152 + C11350 * C329 +
              C11354 + C11354 + C153671 * C353) *
                 C153459 +
             (C11407 + C11408) * C153467 + C11417 * C83548) *
                C98459 +
            ((C19416 + C19417) * C153459 + C19382 * C153467 + C18777 * C83548) *
                C153713) *
               C153527 * C153908 -
           ((C19714 * C83548 + C20406 * C153467 + (C20420 + C20419) * C153459) *
                C153713 +
            (C12164 * C83548 + (C11687 + C11688) * C153467 +
             (C11350 * C330 + C11633 + C11633 + C153671 * C354 + C11348 * C329 +
              C11634 + C11634 + C153851 * C353) *
                 C153459) *
                C98459) *
               C153527 * C153909 +
           (((C11348 * C330 + C11635 + C11635 + C153851 * C354 +
              C11350 * C1319 + C11636 + C11636 + C153671 * C1329) *
                 C153459 +
             (C11689 + C11690) * C153467 + (C11691 + C11692) * C83548) *
                C98459 +
            ((C22201 + C22202) * C153459 + (C19084 + C19085) * C153467 +
             (C19086 + C19087) * C83548) *
                C153713) *
               C153527 * C1601) *
              C153829 +
          ((((C11688 + C11687) * C153459 + (C11686 + C11685) * C153467 +
             (C11684 + C11683) * C83548) *
                C98459 +
            (C20396 * C153459 + C20397 * C153467 + (C12681 + C12682) * C83548) *
                C153713) *
               C153527 * C153909 -
           ((C12371 * C83548 + C12372 * C153467 + C19389 * C153459) * C153713 +
            (C11420 * C83548 + (C11410 + C11409) * C153467 +
             (C11408 + C11407) * C153459) *
                C98459) *
               C153527 * C153908 -
           (((C11350 * C4306 + C13863 + C13863 + C153671 * C4314 +
              C11348 * C1889 + C13864 + C13864 + C153851 * C1899) *
                 C83548 +
             (C19087 + C19086) * C153467 + (C19085 + C19084) * C153459) *
                C153713 +
            ((C11694 + C11693) * C83548 + (C11692 + C11691) * C153467 +
             (C11690 + C11689) * C153459) *
                C98459) *
               C153527 * C1601) *
              C153498)) /
        (p * q * std::sqrt(p + q));
    d2ee[231] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C11348 * C136 + C11353 + C11353 + C153851 * C152 + C11350 * C329 +
              C11354 + C11354 + C153671 * C353) *
                 C153459 +
             (C11407 + C11408) * C153467 + C11417 * C83548) *
                C98459 +
            ((C19416 + C19417) * C153459 + C19382 * C153467 + C18777 * C83548) *
                C153713) *
               C153838 -
           ((C19383 * C83548 + C19384 * C153467 + (C19418 + C19419) * C153459) *
                C153713 +
            (C12372 * C83548 + C19389 * C153467 + (C19417 + C19416) * C153459) *
                C98459) *
               C153591) *
              C153908 +
          ((((C20419 + C20420) * C153459 + C20396 * C153467 + C20397 * C83548) *
                C98459 +
            ((C21219 + C21220) * C153459 + C59645 * C153467 +
             (C20423 + C20424) * C83548) *
                C153713) *
               C153591 -
           ((C19714 * C83548 + C20406 * C153467 + (C20420 + C20419) * C153459) *
                C153713 +
            (C12164 * C83548 + (C11687 + C11688) * C153467 +
             (C11350 * C330 + C11633 + C11633 + C153671 * C354 + C11348 * C329 +
              C11634 + C11634 + C153851 * C353) *
                 C153459) *
                C98459) *
               C153838) *
              C153909 +
          ((((C11348 * C330 + C11635 + C11635 + C153851 * C354 +
              C11350 * C1319 + C11636 + C11636 + C153671 * C1329) *
                 C153459 +
             (C11689 + C11690) * C153467 + (C11691 + C11692) * C83548) *
                C98459 +
            ((C22201 + C22202) * C153459 + (C19084 + C19085) * C153467 +
             (C19086 + C19087) * C83548) *
                C153713) *
               C153838 -
           (((C11350 * C4957 + C22191 + C22191 + C153671 * C4963 +
              C11348 * C3443 + C22192 + C22192 + C153851 * C3451) *
                 C83548 +
             (C58369 + C58368) * C153467 + (C61432 + C61431) * C153459) *
                C153713 +
            ((C19087 + C19086) * C83548 + (C19085 + C19084) * C153467 +
             (C22202 + C22201) * C153459) *
                C98459) *
               C153591) *
              C1601) *
         C153492) /
        (p * q * std::sqrt(p + q));
    d2ee[232] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C11348 * C136 + C11353 + C11353 + C153851 * C152 + C11350 * C329 +
             C11354 + C11354 + C153671 * C353) *
                C153459 +
            (C11407 + C11408) * C153467 + C11417 * C83548) *
               C98459 +
           ((C19416 + C19417) * C153459 + C19382 * C153467 + C18777 * C83548) *
               C153713) *
              C153527 * C1310 -
          ((C19714 * C83548 + C20406 * C153467 + (C20420 + C20419) * C153459) *
               C153713 +
           (C12164 * C83548 + (C11687 + C11688) * C153467 +
            (C11350 * C330 + C11633 + C11633 + C153671 * C354 + C11348 * C329 +
             C11634 + C11634 + C153851 * C353) *
                C153459) *
               C98459) *
              C153527 * C1311 +
          (((C11348 * C330 + C11635 + C11635 + C153851 * C354 + C11350 * C1319 +
             C11636 + C11636 + C153671 * C1329) *
                C153459 +
            (C11689 + C11690) * C153467 + (C11691 + C11692) * C83548) *
               C98459 +
           ((C22201 + C22202) * C153459 + (C19084 + C19085) * C153467 +
            (C19086 + C19087) * C83548) *
               C153713) *
              C153527 * C1312 -
          (((C11350 * C5701 + C20909 + C20909 + C153671 * C5707 +
             C11348 * C4305 + C20910 + C20910 + C153851 * C4313) *
                C83548 +
            (C11350 * C5702 + C20911 + C20911 + C153671 * C5708 +
             C11348 * C4304 + C20912 + C20912 + C153851 * C4312) *
                C153467 +
            (C11350 * C5703 + C20913 + C20913 + C153671 * C5709 +
             C11348 * C4303 + C20914 + C20914 + C153851 * C4311) *
                C153459) *
               C153713 +
           ((C11350 * C3129 + C13009 + C13009 + C153671 * C3137 +
             C11348 * C1317 + C13010 + C13010 + C153851 * C1327) *
                C83548 +
            (C11350 * C3128 + C13011 + C13011 + C153671 * C3136 +
             C11348 * C1318 + C13012 + C13012 + C153851 * C1328) *
                C153467 +
            (C11350 * C3127 + C13013 + C13013 + C153671 * C3135 +
             C11348 * C1319 + C13014 + C13014 + C153851 * C1329) *
                C153459) *
               C98459) *
              C153527 * C1313) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C11348 * C136 + C11353 + C11353 + C153851 * C152 + C11350 * C329 +
              C11354 + C11354 + C153671 * C353) *
                 C153459 +
             (C11407 + C11408) * C153467 + C11417 * C83548) *
                C98459 +
            ((C19416 + C19417) * C153459 + C19382 * C153467 + C18777 * C83548) *
                C153713) *
               C153527 * C1223 -
           ((C19714 * C83548 + C20406 * C153467 + (C20420 + C20419) * C153459) *
                C153713 +
            (C12164 * C83548 + (C11687 + C11688) * C153467 +
             (C11350 * C330 + C11633 + C11633 + C153671 * C354 + C11348 * C329 +
              C11634 + C11634 + C153851 * C353) *
                 C153459) *
                C98459) *
               C153527 * C153563) *
              C1225 +
          ((((C11688 + C11687) * C153459 + (C11686 + C11685) * C153467 +
             (C11684 + C11683) * C83548) *
                C98459 +
            (C20396 * C153459 + C20397 * C153467 + (C12681 + C12682) * C83548) *
                C153713) *
               C153527 * C153563 -
           ((C12371 * C83548 + C12372 * C153467 + C19389 * C153459) * C153713 +
            (C11420 * C83548 + (C11410 + C11409) * C153467 +
             (C11408 + C11407) * C153459) *
                C98459) *
               C153527 * C1223) *
              C1226 +
          (((C11417 * C153459 + C11418 * C153467 + (C11414 + C11413) * C83548) *
                C98459 +
            (C18777 * C153459 + C20005 * C153467 + (C12383 + C12384) * C83548) *
                C153713) *
               C153527 * C1223 -
           (((C11350 * C1888 + C12663 + C12663 + C153671 * C1898 +
              C11348 * C1061 + C12664 + C12664 + C153851 * C1073) *
                 C83548 +
             (C12682 + C12681) * C153467 + C19714 * C153459) *
                C153713 +
            ((C12176 + C12175) * C83548 + C12163 * C153467 + C12164 * C153459) *
                C98459) *
               C153527 * C153563) *
              C1227)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C11348 * C136 + C11353 + C11353 + C153851 * C152 + C11350 * C329 +
              C11354 + C11354 + C153671 * C353) *
                 C153459 +
             (C11407 + C11408) * C153467 + C11417 * C83548) *
                C98459 +
            ((C19416 + C19417) * C153459 + C19382 * C153467 + C18777 * C83548) *
                C153713) *
               C535 -
           ((C19383 * C83548 + C19384 * C153467 + (C19418 + C19419) * C153459) *
                C153713 +
            (C12372 * C83548 + C19389 * C153467 + (C19417 + C19416) * C153459) *
                C98459) *
               C536 +
           ((C58660 * C153459 + C19390 * C153467 + C19391 * C83548) * C98459 +
            (C67264 * C153459 + C58663 * C153467 + (C19422 + C19423) * C83548) *
                C153713) *
               C537) *
              C1223 +
          ((((C20419 + C20420) * C153459 + C20396 * C153467 + C20397 * C83548) *
                C98459 +
            ((C21219 + C21220) * C153459 + C59645 * C153467 +
             (C20423 + C20424) * C83548) *
                C153713) *
               C536 -
           ((C19714 * C83548 + C20406 * C153467 + (C20420 + C20419) * C153459) *
                C153713 +
            (C12164 * C83548 + (C11687 + C11688) * C153467 +
             (C11350 * C330 + C11633 + C11633 + C153671 * C354 + C11348 * C329 +
              C11634 + C11634 + C153851 * C353) *
                 C153459) *
                C98459) *
               C535 -
           (((C11350 * C6301 + C21209 + C21209 + C153671 * C6313 +
              C11348 * C6302 + C21210 + C21210 + C153851 * C6314) *
                 C83548 +
             (C59656 + C59655) * C153467 + C68438 * C153459) *
                C153713 +
            ((C20424 + C20423) * C83548 + C59650 * C153467 + C60440 * C153459) *
                C98459) *
               C537) *
              C153563) *
         C153492) /
            (p * q * std::sqrt(p + q));
    d2ee[233] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C11348 * C136 + C11353 + C11353 + C153851 * C152 +
               C11350 * C329 + C11354 + C11354 + C153671 * C353) *
                  C153459 +
              (C11407 + C11408) * C153467 + C11417 * C83548) *
                 C98459 +
             ((C19416 + C19417) * C153459 + C19382 * C153467 +
              C18777 * C83548) *
                 C153713) *
                C153838 -
            ((C19383 * C83548 + C19384 * C153467 +
              (C19418 + C19419) * C153459) *
                 C153713 +
             (C12372 * C83548 + C19389 * C153467 +
              (C19417 + C19416) * C153459) *
                 C98459) *
                C153591) *
               C1223 +
           ((((C20419 + C20420) * C153459 + C20396 * C153467 +
              C20397 * C83548) *
                 C98459 +
             ((C21219 + C21220) * C153459 + C59645 * C153467 +
              (C20423 + C20424) * C83548) *
                 C153713) *
                C153591 -
            ((C19714 * C83548 + C20406 * C153467 +
              (C20420 + C20419) * C153459) *
                 C153713 +
             (C12164 * C83548 + (C11687 + C11688) * C153467 +
              (C11350 * C330 + C11633 + C11633 + C153671 * C354 +
               C11348 * C329 + C11634 + C11634 + C153851 * C353) *
                  C153459) *
                 C98459) *
                C153838) *
               C153563) *
              C153829 +
          ((((C19382 * C153459 + C18777 * C153467 + C20005 * C83548) * C98459 +
             (C19390 * C153459 + C19391 * C153467 +
              (C11967 + C11968) * C83548) *
                 C153713) *
                C153591 -
            ((C12371 * C83548 + C12372 * C153467 + C19389 * C153459) * C153713 +
             (C11420 * C83548 + (C11410 + C11409) * C153467 +
              (C11408 + C11407) * C153459) *
                 C98459) *
                C153838) *
               C1223 +
           ((((C11688 + C11687) * C153459 + (C11686 + C11685) * C153467 +
              (C11684 + C11683) * C83548) *
                 C98459 +
             (C20396 * C153459 + C20397 * C153467 +
              (C12681 + C12682) * C83548) *
                 C153713) *
                C153838 -
            (((C11350 * C3444 + C13209 + C13209 + C153671 * C3452 +
               C11348 * C1458 + C13210 + C13210 + C153851 * C1468) *
                  C83548 +
              (C20424 + C20423) * C153467 + C59650 * C153459) *
                 C153713 +
             ((C12682 + C12681) * C83548 + C19714 * C153467 +
              C20406 * C153459) *
                 C98459) *
                C153591) *
               C153563) *
              C153498)) /
        (p * q * std::sqrt(p + q));
    d2ee[234] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C11348 * C136 + C11353 + C11353 + C153851 * C152 + C11350 * C329 +
              C11354 + C11354 + C153671 * C353) *
                 C153459 +
             (C11407 + C11408) * C153467 + C11417 * C83548) *
                C98459 +
            ((C19416 + C19417) * C153459 + C19382 * C153467 + C18777 * C83548) *
                C153713) *
               C153527 * C1223 -
           ((C19714 * C83548 + C20406 * C153467 + (C20420 + C20419) * C153459) *
                C153713 +
            (C12164 * C83548 + (C11687 + C11688) * C153467 +
             (C11350 * C330 + C11633 + C11633 + C153671 * C354 + C11348 * C329 +
              C11634 + C11634 + C153851 * C353) *
                 C153459) *
                C98459) *
               C153527 * C153563) *
              C1225 +
          ((((C11688 + C11687) * C153459 + (C11686 + C11685) * C153467 +
             (C11684 + C11683) * C83548) *
                C98459 +
            (C20396 * C153459 + C20397 * C153467 + (C12681 + C12682) * C83548) *
                C153713) *
               C153527 * C153563 -
           ((C12371 * C83548 + C12372 * C153467 + C19389 * C153459) * C153713 +
            (C11420 * C83548 + (C11410 + C11409) * C153467 +
             (C11408 + C11407) * C153459) *
                C98459) *
               C153527 * C1223) *
              C1226 +
          (((C11417 * C153459 + C11418 * C153467 + (C11414 + C11413) * C83548) *
                C98459 +
            (C18777 * C153459 + C20005 * C153467 + (C12383 + C12384) * C83548) *
                C153713) *
               C153527 * C1223 -
           (((C11350 * C1888 + C12663 + C12663 + C153671 * C1898 +
              C11348 * C1061 + C12664 + C12664 + C153851 * C1073) *
                 C83548 +
             (C12682 + C12681) * C153467 + C19714 * C153459) *
                C153713 +
            ((C12176 + C12175) * C83548 + C12163 * C153467 + C12164 * C153459) *
                C98459) *
               C153527 * C153563) *
              C1227)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C11348 * C136 + C11353 + C11353 + C153851 * C152 + C11350 * C329 +
             C11354 + C11354 + C153671 * C353) *
                C153459 +
            (C11407 + C11408) * C153467 + C11417 * C83548) *
               C98459 +
           ((C19416 + C19417) * C153459 + C19382 * C153467 + C18777 * C83548) *
               C153713) *
              C153527 * C1310 -
          ((C19714 * C83548 + C20406 * C153467 + (C20420 + C20419) * C153459) *
               C153713 +
           (C12164 * C83548 + (C11687 + C11688) * C153467 +
            (C11350 * C330 + C11633 + C11633 + C153671 * C354 + C11348 * C329 +
             C11634 + C11634 + C153851 * C353) *
                C153459) *
               C98459) *
              C153527 * C1311 +
          (((C11348 * C330 + C11635 + C11635 + C153851 * C354 + C11350 * C1319 +
             C11636 + C11636 + C153671 * C1329) *
                C153459 +
            (C11689 + C11690) * C153467 + (C11691 + C11692) * C83548) *
               C98459 +
           ((C22201 + C22202) * C153459 + (C19084 + C19085) * C153467 +
            (C19086 + C19087) * C83548) *
               C153713) *
              C153527 * C1312 -
          (((C11350 * C5701 + C20909 + C20909 + C153671 * C5707 +
             C11348 * C4305 + C20910 + C20910 + C153851 * C4313) *
                C83548 +
            (C11350 * C5702 + C20911 + C20911 + C153671 * C5708 +
             C11348 * C4304 + C20912 + C20912 + C153851 * C4312) *
                C153467 +
            (C11350 * C5703 + C20913 + C20913 + C153671 * C5709 +
             C11348 * C4303 + C20914 + C20914 + C153851 * C4311) *
                C153459) *
               C153713 +
           ((C11350 * C3129 + C13009 + C13009 + C153671 * C3137 +
             C11348 * C1317 + C13010 + C13010 + C153851 * C1327) *
                C83548 +
            (C11350 * C3128 + C13011 + C13011 + C153671 * C3136 +
             C11348 * C1318 + C13012 + C13012 + C153851 * C1328) *
                C153467 +
            (C11350 * C3127 + C13013 + C13013 + C153671 * C3135 +
             C11348 * C1319 + C13014 + C13014 + C153851 * C1329) *
                C153459) *
               C98459) *
              C153527 * C1313) *
         C153492) /
            (p * q * std::sqrt(p + q));
    d2ee[235] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C11348 * C136 + C11353 + C11353 + C153851 * C152 +
               C11350 * C329 + C11354 + C11354 + C153671 * C353) *
                  C153459 +
              (C11407 + C11408) * C153467 + C11417 * C83548) *
                 C98459 +
             ((C19416 + C19417) * C153459 + C19382 * C153467 +
              C18777 * C83548) *
                 C153713) *
                C2030 -
            ((C19383 * C83548 + C19384 * C153467 +
              (C19418 + C19419) * C153459) *
                 C153713 +
             (C12372 * C83548 + C19389 * C153467 +
              (C19417 + C19416) * C153459) *
                 C98459) *
                C153591) *
               C153837 +
           ((((C20419 + C20420) * C153459 + C20396 * C153467 +
              C20397 * C83548) *
                 C98459 +
             ((C21219 + C21220) * C153459 + C59645 * C153467 +
              (C20423 + C20424) * C83548) *
                 C153713) *
                C153591 -
            ((C19714 * C83548 + C20406 * C153467 +
              (C20420 + C20419) * C153459) *
                 C153713 +
             (C12164 * C83548 + (C11687 + C11688) * C153467 +
              (C11350 * C330 + C11633 + C11633 + C153671 * C354 +
               C11348 * C329 + C11634 + C11634 + C153851 * C353) *
                  C153459) *
                 C98459) *
                C2030) *
               C153563) *
              C153829 +
          ((((C19382 * C153459 + C18777 * C153467 + C20005 * C83548) * C98459 +
             (C19390 * C153459 + C19391 * C153467 +
              (C11967 + C11968) * C83548) *
                 C153713) *
                C153591 -
            ((C12371 * C83548 + C12372 * C153467 + C19389 * C153459) * C153713 +
             (C11420 * C83548 + (C11410 + C11409) * C153467 +
              (C11408 + C11407) * C153459) *
                 C98459) *
                C2030) *
               C153837 +
           ((((C11688 + C11687) * C153459 + (C11686 + C11685) * C153467 +
              (C11684 + C11683) * C83548) *
                 C98459 +
             (C20396 * C153459 + C20397 * C153467 +
              (C12681 + C12682) * C83548) *
                 C153713) *
                C2030 -
            (((C11350 * C3444 + C13209 + C13209 + C153671 * C3452 +
               C11348 * C1458 + C13210 + C13210 + C153851 * C1468) *
                  C83548 +
              (C20424 + C20423) * C153467 + C59650 * C153459) *
                 C153713 +
             ((C12682 + C12681) * C83548 + C19714 * C153467 +
              C20406 * C153459) *
                 C98459) *
                C153591) *
               C153563) *
              C153498)) /
        (p * q * std::sqrt(p + q));
    d2ee[236] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C11348 * C136 + C11353 + C11353 + C153851 * C152 + C11350 * C329 +
              C11354 + C11354 + C153671 * C353) *
                 C153459 +
             (C11407 + C11408) * C153467 + C11417 * C83548) *
                C98459 +
            ((C19416 + C19417) * C153459 + C19382 * C153467 + C18777 * C83548) *
                C153713) *
               C153910 -
           ((C19383 * C83548 + C19384 * C153467 + (C19418 + C19419) * C153459) *
                C153713 +
            (C12372 * C83548 + C19389 * C153467 + (C19417 + C19416) * C153459) *
                C98459) *
               C153911 +
           ((C58660 * C153459 + C19390 * C153467 + C19391 * C83548) * C98459 +
            (C67264 * C153459 + C58663 * C153467 + (C19422 + C19423) * C83548) *
                C153713) *
               C2546) *
              C153837 +
          ((((C20419 + C20420) * C153459 + C20396 * C153467 + C20397 * C83548) *
                C98459 +
            ((C21219 + C21220) * C153459 + C59645 * C153467 +
             (C20423 + C20424) * C83548) *
                C153713) *
               C153911 -
           ((C19714 * C83548 + C20406 * C153467 + (C20420 + C20419) * C153459) *
                C153713 +
            (C12164 * C83548 + (C11687 + C11688) * C153467 +
             (C11350 * C330 + C11633 + C11633 + C153671 * C354 + C11348 * C329 +
              C11634 + C11634 + C153851 * C353) *
                 C153459) *
                C98459) *
               C153910 -
           (((C11350 * C6301 + C21209 + C21209 + C153671 * C6313 +
              C11348 * C6302 + C21210 + C21210 + C153851 * C6314) *
                 C83548 +
             (C59656 + C59655) * C153467 + C68438 * C153459) *
                C153713 +
            ((C20424 + C20423) * C83548 + C59650 * C153467 + C60440 * C153459) *
                C98459) *
               C2546) *
              C153563) *
         C153492) /
        (p * q * std::sqrt(p + q));
    d2ee[237] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C11348 * C136 + C11353 + C11353 + C153851 * C152 + C11350 * C329 +
              C11354 + C11354 + C153671 * C353) *
                 C153459 +
             (C11407 + C11408) * C153467 + C11417 * C83548) *
                C98459 +
            ((C19416 + C19417) * C153459 + C19382 * C153467 + C18777 * C83548) *
                C153713) *
               C2030 -
           ((C19383 * C83548 + C19384 * C153467 + (C19418 + C19419) * C153459) *
                C153713 +
            (C12372 * C83548 + C19389 * C153467 + (C19417 + C19416) * C153459) *
                C98459) *
               C153591) *
              C320 +
          ((((C20419 + C20420) * C153459 + C20396 * C153467 + C20397 * C83548) *
                C98459 +
            ((C21219 + C21220) * C153459 + C59645 * C153467 +
             (C20423 + C20424) * C83548) *
                C153713) *
               C153591 -
           ((C19714 * C83548 + C20406 * C153467 + (C20420 + C20419) * C153459) *
                C153713 +
            (C12164 * C83548 + (C11687 + C11688) * C153467 +
             (C11350 * C330 + C11633 + C11633 + C153671 * C354 + C11348 * C329 +
              C11634 + C11634 + C153851 * C353) *
                 C153459) *
                C98459) *
               C2030) *
              C321 +
          ((((C11348 * C330 + C11635 + C11635 + C153851 * C354 +
              C11350 * C1319 + C11636 + C11636 + C153671 * C1329) *
                 C153459 +
             (C11689 + C11690) * C153467 + (C11691 + C11692) * C83548) *
                C98459 +
            ((C22201 + C22202) * C153459 + (C19084 + C19085) * C153467 +
             (C19086 + C19087) * C83548) *
                C153713) *
               C2030 -
           (((C11350 * C4957 + C22191 + C22191 + C153671 * C4963 +
              C11348 * C3443 + C22192 + C22192 + C153851 * C3451) *
                 C83548 +
             (C58369 + C58368) * C153467 + (C61432 + C61431) * C153459) *
                C153713 +
            ((C19087 + C19086) * C83548 + (C19085 + C19084) * C153467 +
             (C22202 + C22201) * C153459) *
                C98459) *
               C153591) *
              C322) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C11348 * C136 + C11353 + C11353 + C153851 * C152 + C11350 * C329 +
              C11354 + C11354 + C153671 * C353) *
                 C153459 +
             (C11407 + C11408) * C153467 + C11417 * C83548) *
                C98459 +
            ((C19416 + C19417) * C153459 + C19382 * C153467 + C18777 * C83548) *
                C153713) *
               C2030 -
           ((C19383 * C83548 + C19384 * C153467 + (C19418 + C19419) * C153459) *
                C153713 +
            (C12372 * C83548 + C19389 * C153467 + (C19417 + C19416) * C153459) *
                C98459) *
               C153591) *
              C153511 * C1225 +
          (((C19382 * C153459 + C18777 * C153467 + C20005 * C83548) * C98459 +
            (C19390 * C153459 + C19391 * C153467 + (C11967 + C11968) * C83548) *
                C153713) *
               C153591 -
           ((C12371 * C83548 + C12372 * C153467 + C19389 * C153459) * C153713 +
            (C11420 * C83548 + (C11410 + C11409) * C153467 +
             (C11408 + C11407) * C153459) *
                C98459) *
               C2030) *
              C153511 * C1226 +
          (((C11417 * C153459 + C11418 * C153467 + (C11414 + C11413) * C83548) *
                C98459 +
            (C18777 * C153459 + C20005 * C153467 + (C12383 + C12384) * C83548) *
                C153713) *
               C2030 -
           (((C11350 * C1457 + C11931 + C11931 + C153671 * C1467 +
              C11348 * C547 + C11932 + C11932 + C153851 * C571) *
                 C83548 +
             (C11968 + C11967) * C153467 + C19383 * C153459) *
                C153713 +
            ((C12384 + C12383) * C83548 + C12371 * C153467 + C12372 * C153459) *
                C98459) *
               C153591) *
              C153511 * C1227)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C11348 * C136 + C11353 + C11353 + C153851 * C152 + C11350 * C329 +
             C11354 + C11354 + C153671 * C353) *
                C153459 +
            (C11407 + C11408) * C153467 + C11417 * C83548) *
               C98459 +
           ((C19416 + C19417) * C153459 + C19382 * C153467 + C18777 * C83548) *
               C153713) *
              C2236 -
          ((C19383 * C83548 + C19384 * C153467 + (C19418 + C19419) * C153459) *
               C153713 +
           (C12372 * C83548 + C19389 * C153467 + (C19417 + C19416) * C153459) *
               C98459) *
              C2237 +
          ((C58660 * C153459 + C19390 * C153467 + C19391 * C83548) * C98459 +
           (C67264 * C153459 + C58663 * C153467 + (C19422 + C19423) * C83548) *
               C153713) *
              C2238 -
          (((C11350 * C9115 + C22981 + C22981 + C153671 * C9121 +
             C11348 * C7675 + C22982 + C22982 + C153851 * C7683) *
                C83548 +
            (C58678 + C58677) * C153467 + C69625 * C153459) *
               C153713 +
           ((C19423 + C19422) * C83548 + C58662 * C153467 + C62208 * C153459) *
               C98459) *
              C2239) *
         C153511 * C153492) /
            (p * q * std::sqrt(p + q));
    d2ee[238] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C11348 * C136 + C11353 + C11353 + C153851 * C152 + C11350 * C329 +
              C11354 + C11354 + C153671 * C353) *
                 C153459 +
             (C11407 + C11408) * C153467 + C11417 * C83548) *
                C98459 +
            ((C19416 + C19417) * C153459 + C19382 * C153467 + C18777 * C83548) *
                C153713) *
               C153910 -
           ((C19383 * C83548 + C19384 * C153467 + (C19418 + C19419) * C153459) *
                C153713 +
            (C12372 * C83548 + C19389 * C153467 + (C19417 + C19416) * C153459) *
                C98459) *
               C153911 +
           ((C58660 * C153459 + C19390 * C153467 + C19391 * C83548) * C98459 +
            (C67264 * C153459 + C58663 * C153467 + (C19422 + C19423) * C83548) *
                C153713) *
               C2546) *
              C153511 * C153829 +
          (((C19382 * C153459 + C18777 * C153467 + C20005 * C83548) * C98459 +
            (C19390 * C153459 + C19391 * C153467 + (C11967 + C11968) * C83548) *
                C153713) *
               C153911 -
           ((C12371 * C83548 + C12372 * C153467 + C19389 * C153459) * C153713 +
            (C11420 * C83548 + (C11410 + C11409) * C153467 +
             (C11408 + C11407) * C153459) *
                C98459) *
               C153910 -
           (((C11350 * C8488 + C14389 + C14389 + C153671 * C8490 +
              C11348 * C2241 + C14390 + C14390 + C153851 * C2251) *
                 C83548 +
             (C19423 + C19422) * C153467 + C58662 * C153459) *
                C153713 +
            ((C11968 + C11967) * C83548 + C19383 * C153467 + C19384 * C153459) *
                C98459) *
               C2546) *
              C153511 * C153498)) /
        (p * q * std::sqrt(p + q));
    d2ee[239] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C11348 * C136 + C11353 + C11353 + C153851 * C152 + C11350 * C329 +
              C11354 + C11354 + C153671 * C353) *
                 C153459 +
             (C11407 + C11408) * C153467 + C11417 * C83548) *
                C98459 +
            ((C19416 + C19417) * C153459 + C19382 * C153467 + C18777 * C83548) *
                C153713) *
               C2030 -
           ((C19383 * C83548 + C19384 * C153467 + (C19418 + C19419) * C153459) *
                C153713 +
            (C12372 * C83548 + C19389 * C153467 + (C19417 + C19416) * C153459) *
                C98459) *
               C153591) *
              C153511 * C1225 +
          (((C19382 * C153459 + C18777 * C153467 + C20005 * C83548) * C98459 +
            (C19390 * C153459 + C19391 * C153467 + (C11967 + C11968) * C83548) *
                C153713) *
               C153591 -
           ((C12371 * C83548 + C12372 * C153467 + C19389 * C153459) * C153713 +
            (C11420 * C83548 + (C11410 + C11409) * C153467 +
             (C11408 + C11407) * C153459) *
                C98459) *
               C2030) *
              C153511 * C1226 +
          (((C11417 * C153459 + C11418 * C153467 + (C11414 + C11413) * C83548) *
                C98459 +
            (C18777 * C153459 + C20005 * C153467 + (C12383 + C12384) * C83548) *
                C153713) *
               C2030 -
           (((C11350 * C1457 + C11931 + C11931 + C153671 * C1467 +
              C11348 * C547 + C11932 + C11932 + C153851 * C571) *
                 C83548 +
             (C11968 + C11967) * C153467 + C19383 * C153459) *
                C153713 +
            ((C12384 + C12383) * C83548 + C12371 * C153467 + C12372 * C153459) *
                C98459) *
               C153591) *
              C153511 * C1227)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C11348 * C136 + C11353 + C11353 + C153851 * C152 + C11350 * C329 +
              C11354 + C11354 + C153671 * C353) *
                 C153459 +
             (C11407 + C11408) * C153467 + C11417 * C83548) *
                C98459 +
            ((C19416 + C19417) * C153459 + C19382 * C153467 + C18777 * C83548) *
                C153713) *
               C2030 -
           ((C19383 * C83548 + C19384 * C153467 + (C19418 + C19419) * C153459) *
                C153713 +
            (C12372 * C83548 + C19389 * C153467 + (C19417 + C19416) * C153459) *
                C98459) *
               C153591) *
              C320 +
          ((((C20419 + C20420) * C153459 + C20396 * C153467 + C20397 * C83548) *
                C98459 +
            ((C21219 + C21220) * C153459 + C59645 * C153467 +
             (C20423 + C20424) * C83548) *
                C153713) *
               C153591 -
           ((C19714 * C83548 + C20406 * C153467 + (C20420 + C20419) * C153459) *
                C153713 +
            (C12164 * C83548 + (C11687 + C11688) * C153467 +
             (C11350 * C330 + C11633 + C11633 + C153671 * C354 + C11348 * C329 +
              C11634 + C11634 + C153851 * C353) *
                 C153459) *
                C98459) *
               C2030) *
              C321 +
          ((((C11348 * C330 + C11635 + C11635 + C153851 * C354 +
              C11350 * C1319 + C11636 + C11636 + C153671 * C1329) *
                 C153459 +
             (C11689 + C11690) * C153467 + (C11691 + C11692) * C83548) *
                C98459 +
            ((C22201 + C22202) * C153459 + (C19084 + C19085) * C153467 +
             (C19086 + C19087) * C83548) *
                C153713) *
               C2030 -
           (((C11350 * C4957 + C22191 + C22191 + C153671 * C4963 +
              C11348 * C3443 + C22192 + C22192 + C153851 * C3451) *
                 C83548 +
             (C58369 + C58368) * C153467 + (C61432 + C61431) * C153459) *
                C153713 +
            ((C19087 + C19086) * C83548 + (C19085 + C19084) * C153467 +
             (C22202 + C22201) * C153459) *
                C98459) *
               C153591) *
              C322) *
         C153492) /
            (p * q * std::sqrt(p + q));
    d2ee[240] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C11348 * C136 + C11353 + C11353 + C153851 * C152 + C11350 * C329 +
              C11354 + C11354 + C153671 * C353) *
                 C74249 +
             (C11407 + C11408) * C153464) *
                C153709 +
            ((C19416 + C19417) * C74249 + C19382 * C153464) * C153716 +
            C120643 * C116029) *
               C153527 * C153837 -
           ((C59650 * C153464 + C60440 * C74249) * C116029 +
            (C20406 * C153464 + (C20420 + C20419) * C74249) * C153716 +
            ((C11687 + C11688) * C153464 +
             (C11350 * C330 + C11633 + C11633 + C153671 * C354 + C11348 * C329 +
              C11634 + C11634 + C153851 * C353) *
                 C74249) *
                C153709) *
               C153527 * C153563) *
              C153906 +
          ((((C11688 + C11687) * C74249 + (C11686 + C11685) * C153464) *
                C153709 +
            (C20396 * C74249 + C20397 * C153464) * C153716 +
            (C59645 * C74249 + (C20423 + C20424) * C153464) * C116029) *
               C153527 * C153563 -
           (C120644 * C116029 + (C12372 * C153464 + C19389 * C74249) * C153716 +
            ((C11410 + C11409) * C153464 + (C11408 + C11407) * C74249) *
                C153709) *
               C153527 * C153837) *
              C153907 +
          (((C11417 * C74249 + C11418 * C153464) * C153709 +
            (C18777 * C74249 + C20005 * C153464) * C153716 +
            (C19391 * C74249 + (C11967 + C11968) * C153464) * C116029) *
               C153527 * C153837 -
           (((C11350 * C3444 + C13209 + C13209 + C153671 * C3452 +
              C11348 * C1458 + C13210 + C13210 + C153851 * C1468) *
                 C153464 +
             (C20424 + C20423) * C74249) *
                C116029 +
            ((C12682 + C12681) * C153464 + C19714 * C74249) * C153716 +
            (C12163 * C153464 + C12164 * C74249) * C153709) *
               C153527 * C153563) *
              C752)) /
        (p * q * std::sqrt(p + q));
    d2ee[241] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C11348 * C136 + C11353 + C11353 + C153851 * C152 +
               C11350 * C329 + C11354 + C11354 + C153671 * C353) *
                  C74249 +
              (C11407 + C11408) * C153464) *
                 C153709 +
             ((C19416 + C19417) * C74249 + C19382 * C153464) * C153716 +
             C120643 * C116029) *
                C153838 -
            ((C58662 * C153464 + C62208 * C74249) * C116029 +
             (C19384 * C153464 + (C19418 + C19419) * C74249) * C153716 +
             (C19389 * C153464 + (C19417 + C19416) * C74249) * C153709) *
                C153591) *
               C153837 +
           ((((C20419 + C20420) * C74249 + C20396 * C153464) * C153709 +
             ((C21219 + C21220) * C74249 + C59645 * C153464) * C153716 +
             ((C60451 + C60452) * C74249 + (C59655 + C59656) * C153464) *
                 C116029) *
                C153591 -
            ((C59650 * C153464 + C60440 * C74249) * C116029 +
             (C20406 * C153464 + (C20420 + C20419) * C74249) * C153716 +
             ((C11687 + C11688) * C153464 +
              (C11350 * C330 + C11633 + C11633 + C153671 * C354 +
               C11348 * C329 + C11634 + C11634 + C153851 * C353) *
                  C74249) *
                 C153709) *
                C153838) *
               C153563) *
              C323 +
          ((((C19382 * C74249 + C18777 * C153464) * C153709 +
             (C19390 * C74249 + C19391 * C153464) * C153716 +
             (C58663 * C74249 + (C19422 + C19423) * C153464) * C116029) *
                C153591 -
            (C120644 * C116029 +
             (C12372 * C153464 + C19389 * C74249) * C153716 +
             ((C11410 + C11409) * C153464 + (C11408 + C11407) * C74249) *
                 C153709) *
                C153838) *
               C153837 +
           ((((C11688 + C11687) * C74249 + (C11686 + C11685) * C153464) *
                 C153709 +
             (C20396 * C74249 + C20397 * C153464) * C153716 +
             (C59645 * C74249 + (C20423 + C20424) * C153464) * C116029) *
                C153838 -
            (((C11350 * C6301 + C21209 + C21209 + C153671 * C6313 +
               C11348 * C6302 + C21210 + C21210 + C153851 * C6314) *
                  C153464 +
              (C59656 + C59655) * C74249) *
                 C116029 +
             ((C20424 + C20423) * C153464 + C59650 * C74249) * C153716 +
             (C19714 * C153464 + C20406 * C74249) * C153709) *
                C153591) *
               C153563) *
              C153498)) /
        (p * q * std::sqrt(p + q));
    d2ee[242] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C11348 * C136 + C11353 + C11353 + C153851 * C152 + C11350 * C329 +
              C11354 + C11354 + C153671 * C353) *
                 C74249 +
             (C11407 + C11408) * C153464) *
                C153709 +
            ((C19416 + C19417) * C74249 + C19382 * C153464) * C153716 +
            (C58660 * C74249 + C19390 * C153464) * C116029) *
               C153527 * C320 -
           ((C59650 * C153464 + C60440 * C74249) * C116029 +
            (C20406 * C153464 + (C20420 + C20419) * C74249) * C153716 +
            ((C11687 + C11688) * C153464 +
             (C11350 * C330 + C11633 + C11633 + C153671 * C354 + C11348 * C329 +
              C11634 + C11634 + C153851 * C353) *
                 C74249) *
                C153709) *
               C153527 * C321 +
           (((C11348 * C330 + C11635 + C11635 + C153851 * C354 +
              C11350 * C1319 + C11636 + C11636 + C153671 * C1329) *
                 C74249 +
             (C11689 + C11690) * C153464) *
                C153709 +
            ((C22201 + C22202) * C74249 + (C19084 + C19085) * C153464) *
                C153716 +
            ((C61431 + C61432) * C74249 + (C58368 + C58369) * C153464) *
                C116029) *
               C153527 * C322) *
              C323 +
          ((((C11688 + C11687) * C74249 + (C11686 + C11685) * C153464) *
                C153709 +
            (C20396 * C74249 + C20397 * C153464) * C153716 +
            (C59645 * C74249 + (C20423 + C20424) * C153464) * C116029) *
               C153527 * C321 -
           ((C19383 * C153464 + C19384 * C74249) * C116029 +
            (C12372 * C153464 + C19389 * C74249) * C153716 +
            ((C11410 + C11409) * C153464 + (C11408 + C11407) * C74249) *
                C153709) *
               C153527 * C320 -
           (((C11350 * C4957 + C22191 + C22191 + C153671 * C4963 +
              C11348 * C3443 + C22192 + C22192 + C153851 * C3451) *
                 C153464 +
             (C58369 + C58368) * C74249) *
                C116029 +
            ((C19087 + C19086) * C153464 + (C19085 + C19084) * C74249) *
                C153716 +
            ((C11692 + C11691) * C153464 + (C11690 + C11689) * C74249) *
                C153709) *
               C153527 * C322) *
              C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C11348 * C136 + C11353 + C11353 + C153851 * C152 + C11350 * C329 +
             C11354 + C11354 + C153671 * C353) *
                C74249 +
            (C11407 + C11408) * C153464) *
               C153709 +
           ((C19416 + C19417) * C74249 + C19382 * C153464) * C153716 +
           (C58660 * C74249 + C19390 * C153464) * C116029) *
              C153527 * C153511 * C130 -
          ((C19383 * C153464 + C19384 * C74249) * C116029 +
           (C12372 * C153464 + C19389 * C74249) * C153716 +
           ((C11410 + C11409) * C153464 + (C11408 + C11407) * C74249) *
               C153709) *
              C153527 * C153511 * C131 +
          ((C11417 * C74249 + C11418 * C153464) * C153709 +
           (C18777 * C74249 + C20005 * C153464) * C153716 +
           (C19391 * C74249 + (C11967 + C11968) * C153464) * C116029) *
              C153527 * C153511 * C132 -
          (((C11350 * C1457 + C11931 + C11931 + C153671 * C1467 +
             C11348 * C547 + C11932 + C11932 + C153851 * C571) *
                C153464 +
            (C11968 + C11967) * C74249) *
               C116029 +
           ((C12384 + C12383) * C153464 + C12371 * C74249) * C153716 +
           (C11419 * C153464 + C11420 * C74249) * C153709) *
              C153527 * C153511 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C11348 * C136 + C11353 + C11353 + C153851 * C152 + C11350 * C329 +
              C11354 + C11354 + C153671 * C353) *
                 C74249 +
             (C11407 + C11408) * C153464) *
                C153709 +
            ((C19416 + C19417) * C74249 + C19382 * C153464) * C153716 +
            C120643 * C116029) *
               C535 -
           ((C58662 * C153464 + C62208 * C74249) * C116029 +
            (C19384 * C153464 + (C19418 + C19419) * C74249) * C153716 +
            (C19389 * C153464 + (C19417 + C19416) * C74249) * C153709) *
               C536 +
           (C120643 * C153709 + (C67264 * C74249 + C58663 * C153464) * C153716 +
            ((C62223 + C62224) * C74249 + (C58677 + C58678) * C153464) *
                C116029) *
               C537) *
              C153511 * C323 +
          (((C19382 * C74249 + C18777 * C153464) * C153709 +
            (C19390 * C74249 + C19391 * C153464) * C153716 +
            (C58663 * C74249 + (C19422 + C19423) * C153464) * C116029) *
               C536 -
           (C120644 * C116029 + (C12372 * C153464 + C19389 * C74249) * C153716 +
            ((C11410 + C11409) * C153464 + (C11408 + C11407) * C74249) *
                C153709) *
               C535 -
           (((C11350 * C9115 + C22981 + C22981 + C153671 * C9121 +
              C11348 * C7675 + C22982 + C22982 + C153851 * C7683) *
                 C153464 +
             (C58678 + C58677) * C74249) *
                C116029 +
            ((C19423 + C19422) * C153464 + C58662 * C74249) * C153716 +
            C120644 * C153709) *
               C537) *
              C153511 * C153498)) /
            (p * q * std::sqrt(p + q));
    d2ee[243] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C11348 * C136 + C11353 + C11353 + C153851 * C152 + C11350 * C329 +
              C11354 + C11354 + C153671 * C353) *
                 C74249 +
             (C11407 + C11408) * C153464) *
                C153709 +
            ((C19416 + C19417) * C74249 + C19382 * C153464) * C153716 +
            C120643 * C116029) *
               C153838 -
           ((C58662 * C153464 + C62208 * C74249) * C116029 +
            (C19384 * C153464 + (C19418 + C19419) * C74249) * C153716 +
            (C19389 * C153464 + (C19417 + C19416) * C74249) * C153709) *
               C153591) *
              C153511 * C153906 +
          (((C19382 * C74249 + C18777 * C153464) * C153709 +
            (C19390 * C74249 + C19391 * C153464) * C153716 +
            (C58663 * C74249 + (C19422 + C19423) * C153464) * C116029) *
               C153591 -
           (C120644 * C116029 + (C12372 * C153464 + C19389 * C74249) * C153716 +
            ((C11410 + C11409) * C153464 + (C11408 + C11407) * C74249) *
                C153709) *
               C153838) *
              C153511 * C153907 +
          (((C11417 * C74249 + C11418 * C153464) * C153709 +
            (C18777 * C74249 + C20005 * C153464) * C153716 +
            (C19391 * C74249 + (C11967 + C11968) * C153464) * C116029) *
               C153838 -
           (((C11350 * C8488 + C14389 + C14389 + C153671 * C8490 +
              C11348 * C2241 + C14390 + C14390 + C153851 * C2251) *
                 C153464 +
             (C19423 + C19422) * C74249) *
                C116029 +
            ((C11968 + C11967) * C153464 + C19383 * C74249) * C153716 +
            (C12371 * C153464 + C12372 * C74249) * C153709) *
               C153591) *
              C153511 * C752)) /
        (p * q * std::sqrt(p + q));
    d2ee[244] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C11348 * C136 + C11353 + C11353 + C153851 * C152 + C11350 * C329 +
             C11354 + C11354 + C153671 * C353) *
                C74249 +
            (C11407 + C11408) * C153464) *
               C153709 +
           ((C19416 + C19417) * C74249 + C19382 * C153464) * C153716 +
           (C58660 * C74249 + C19390 * C153464) * C116029) *
              C153527 * C153511 * C130 -
          ((C19383 * C153464 + C19384 * C74249) * C116029 +
           (C12372 * C153464 + C19389 * C74249) * C153716 +
           ((C11410 + C11409) * C153464 + (C11408 + C11407) * C74249) *
               C153709) *
              C153527 * C153511 * C131 +
          ((C11417 * C74249 + C11418 * C153464) * C153709 +
           (C18777 * C74249 + C20005 * C153464) * C153716 +
           (C19391 * C74249 + (C11967 + C11968) * C153464) * C116029) *
              C153527 * C153511 * C132 -
          (((C11350 * C1457 + C11931 + C11931 + C153671 * C1467 +
             C11348 * C547 + C11932 + C11932 + C153851 * C571) *
                C153464 +
            (C11968 + C11967) * C74249) *
               C116029 +
           ((C12384 + C12383) * C153464 + C12371 * C74249) * C153716 +
           (C11419 * C153464 + C11420 * C74249) * C153709) *
              C153527 * C153511 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C11348 * C136 + C11353 + C11353 + C153851 * C152 + C11350 * C329 +
              C11354 + C11354 + C153671 * C353) *
                 C74249 +
             (C11407 + C11408) * C153464) *
                C153709 +
            ((C19416 + C19417) * C74249 + C19382 * C153464) * C153716 +
            (C58660 * C74249 + C19390 * C153464) * C116029) *
               C153527 * C320 -
           ((C59650 * C153464 + C60440 * C74249) * C116029 +
            (C20406 * C153464 + (C20420 + C20419) * C74249) * C153716 +
            ((C11687 + C11688) * C153464 +
             (C11350 * C330 + C11633 + C11633 + C153671 * C354 + C11348 * C329 +
              C11634 + C11634 + C153851 * C353) *
                 C74249) *
                C153709) *
               C153527 * C321 +
           (((C11348 * C330 + C11635 + C11635 + C153851 * C354 +
              C11350 * C1319 + C11636 + C11636 + C153671 * C1329) *
                 C74249 +
             (C11689 + C11690) * C153464) *
                C153709 +
            ((C22201 + C22202) * C74249 + (C19084 + C19085) * C153464) *
                C153716 +
            ((C61431 + C61432) * C74249 + (C58368 + C58369) * C153464) *
                C116029) *
               C153527 * C322) *
              C323 +
          ((((C11688 + C11687) * C74249 + (C11686 + C11685) * C153464) *
                C153709 +
            (C20396 * C74249 + C20397 * C153464) * C153716 +
            (C59645 * C74249 + (C20423 + C20424) * C153464) * C116029) *
               C153527 * C321 -
           ((C19383 * C153464 + C19384 * C74249) * C116029 +
            (C12372 * C153464 + C19389 * C74249) * C153716 +
            ((C11410 + C11409) * C153464 + (C11408 + C11407) * C74249) *
                C153709) *
               C153527 * C320 -
           (((C11350 * C4957 + C22191 + C22191 + C153671 * C4963 +
              C11348 * C3443 + C22192 + C22192 + C153851 * C3451) *
                 C153464 +
             (C58369 + C58368) * C74249) *
                C116029 +
            ((C19087 + C19086) * C153464 + (C19085 + C19084) * C74249) *
                C153716 +
            ((C11692 + C11691) * C153464 + (C11690 + C11689) * C74249) *
                C153709) *
               C153527 * C322) *
              C153498)) /
            (p * q * std::sqrt(p + q));
    d2ee[245] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C11348 * C136 + C11353 + C11353 + C153851 * C152 + C11350 * C329 +
              C11354 + C11354 + C153671 * C353) *
                 C74249 +
             (C11407 + C11408) * C153464) *
                C153709 +
            ((C19416 + C19417) * C74249 + C19382 * C153464) * C153716 +
            C120643 * C116029) *
               C153527 * C153908 -
           (C122387 * C116029 +
            (C20406 * C153464 + (C20420 + C20419) * C74249) * C153716 +
            ((C11687 + C11688) * C153464 +
             (C11350 * C330 + C11633 + C11633 + C153671 * C354 + C11348 * C329 +
              C11634 + C11634 + C153851 * C353) *
                 C74249) *
                C153709) *
               C153527 * C153909 +
           (((C11348 * C330 + C11635 + C11635 + C153851 * C354 +
              C11350 * C1319 + C11636 + C11636 + C153671 * C1329) *
                 C74249 +
             (C11689 + C11690) * C153464) *
                C153709 +
            ((C22201 + C22202) * C74249 + (C19084 + C19085) * C153464) *
                C153716 +
            ((C61431 + C61432) * C74249 + (C58368 + C58369) * C153464) *
                C116029) *
               C153527 * C1601) *
              C153829 +
          ((((C11688 + C11687) * C74249 + (C11686 + C11685) * C153464) *
                C153709 +
            (C20396 * C74249 + C20397 * C153464) * C153716 +
            (C59645 * C74249 + (C20423 + C20424) * C153464) * C116029) *
               C153527 * C153909 -
           (C120644 * C116029 + (C12372 * C153464 + C19389 * C74249) * C153716 +
            ((C11410 + C11409) * C153464 + (C11408 + C11407) * C74249) *
                C153709) *
               C153527 * C153908 -
           (((C11350 * C4957 + C22191 + C22191 + C153671 * C4963 +
              C11348 * C3443 + C22192 + C22192 + C153851 * C3451) *
                 C153464 +
             (C58369 + C58368) * C74249) *
                C116029 +
            ((C19087 + C19086) * C153464 + (C19085 + C19084) * C74249) *
                C153716 +
            ((C11692 + C11691) * C153464 + (C11690 + C11689) * C74249) *
                C153709) *
               C153527 * C1601) *
              C153498)) /
        (p * q * std::sqrt(p + q));
    d2ee[246] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C11348 * C136 + C11353 + C11353 + C153851 * C152 + C11350 * C329 +
              C11354 + C11354 + C153671 * C353) *
                 C74249 +
             (C11407 + C11408) * C153464) *
                C153709 +
            ((C19416 + C19417) * C74249 + C19382 * C153464) * C153716 +
            C120643 * C116029) *
               C153838 -
           ((C58662 * C153464 + C62208 * C74249) * C116029 +
            (C19384 * C153464 + (C19418 + C19419) * C74249) * C153716 +
            (C19389 * C153464 + (C19417 + C19416) * C74249) * C153709) *
               C153591) *
              C153908 +
          ((((C20419 + C20420) * C74249 + C20396 * C153464) * C153709 +
            ((C21219 + C21220) * C74249 + C59645 * C153464) * C153716 +
            ((C60451 + C60452) * C74249 + (C59655 + C59656) * C153464) *
                C116029) *
               C153591 -
           (C122387 * C116029 +
            (C20406 * C153464 + (C20420 + C20419) * C74249) * C153716 +
            ((C11687 + C11688) * C153464 +
             (C11350 * C330 + C11633 + C11633 + C153671 * C354 + C11348 * C329 +
              C11634 + C11634 + C153851 * C353) *
                 C74249) *
                C153709) *
               C153838) *
              C153909 +
          ((((C11348 * C330 + C11635 + C11635 + C153851 * C354 +
              C11350 * C1319 + C11636 + C11636 + C153671 * C1329) *
                 C74249 +
             (C11689 + C11690) * C153464) *
                C153709 +
            ((C22201 + C22202) * C74249 + (C19084 + C19085) * C153464) *
                C153716 +
            ((C61431 + C61432) * C74249 + (C58368 + C58369) * C153464) *
                C116029) *
               C153838 -
           (((C11350 * C31999 + C61423 + C61423 + C153671 * C32001 +
              C11348 * C6303 + C61424 + C61424 + C153851 * C6315) *
                 C153464 +
             (C69106 + C69105) * C74249) *
                C116029 +
            ((C58369 + C58368) * C153464 + (C61432 + C61431) * C74249) *
                C153716 +
            ((C19085 + C19084) * C153464 + (C22202 + C22201) * C74249) *
                C153709) *
               C153591) *
              C1601) *
         C153492) /
        (p * q * std::sqrt(p + q));
    d2ee[247] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C11348 * C136 + C11353 + C11353 + C153851 * C152 + C11350 * C329 +
             C11354 + C11354 + C153671 * C353) *
                C74249 +
            (C11407 + C11408) * C153464) *
               C153709 +
           ((C19416 + C19417) * C74249 + C19382 * C153464) * C153716 +
           C120643 * C116029) *
              C153527 * C1310 -
          ((C59650 * C153464 + C60440 * C74249) * C116029 +
           (C20406 * C153464 + (C20420 + C20419) * C74249) * C153716 +
           ((C11687 + C11688) * C153464 +
            (C11350 * C330 + C11633 + C11633 + C153671 * C354 + C11348 * C329 +
             C11634 + C11634 + C153851 * C353) *
                C74249) *
               C153709) *
              C153527 * C1311 +
          (((C11348 * C330 + C11635 + C11635 + C153851 * C354 + C11350 * C1319 +
             C11636 + C11636 + C153671 * C1329) *
                C74249 +
            (C11689 + C11690) * C153464) *
               C153709 +
           ((C22201 + C22202) * C74249 + (C19084 + C19085) * C153464) *
               C153716 +
           ((C61431 + C61432) * C74249 + (C58368 + C58369) * C153464) *
               C116029) *
              C153527 * C1312 -
          (((C11350 * C28651 + C60141 + C60141 + C153671 * C28655 +
             C11348 * C4958 + C60142 + C60142 + C153851 * C4964) *
                C153464 +
            (C11350 * C28650 + C60143 + C60143 + C153671 * C28654 +
             C11348 * C4959 + C60144 + C60144 + C153851 * C4965) *
                C74249) *
               C116029 +
           ((C11350 * C5702 + C20911 + C20911 + C153671 * C5708 +
             C11348 * C4304 + C20912 + C20912 + C153851 * C4312) *
                C153464 +
            (C11350 * C5703 + C20913 + C20913 + C153671 * C5709 +
             C11348 * C4303 + C20914 + C20914 + C153851 * C4311) *
                C74249) *
               C153716 +
           ((C11350 * C3128 + C13011 + C13011 + C153671 * C3136 +
             C11348 * C1318 + C13012 + C13012 + C153851 * C1328) *
                C153464 +
            (C11350 * C3127 + C13013 + C13013 + C153671 * C3135 +
             C11348 * C1319 + C13014 + C13014 + C153851 * C1329) *
                C74249) *
               C153709) *
              C153527 * C1313) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C11348 * C136 + C11353 + C11353 + C153851 * C152 + C11350 * C329 +
              C11354 + C11354 + C153671 * C353) *
                 C74249 +
             (C11407 + C11408) * C153464) *
                C153709 +
            ((C19416 + C19417) * C74249 + C19382 * C153464) * C153716 +
            C120643 * C116029) *
               C153527 * C1223 -
           ((C59650 * C153464 + C60440 * C74249) * C116029 +
            (C20406 * C153464 + (C20420 + C20419) * C74249) * C153716 +
            ((C11687 + C11688) * C153464 +
             (C11350 * C330 + C11633 + C11633 + C153671 * C354 + C11348 * C329 +
              C11634 + C11634 + C153851 * C353) *
                 C74249) *
                C153709) *
               C153527 * C153563) *
              C1225 +
          ((((C11688 + C11687) * C74249 + (C11686 + C11685) * C153464) *
                C153709 +
            (C20396 * C74249 + C20397 * C153464) * C153716 +
            (C59645 * C74249 + (C20423 + C20424) * C153464) * C116029) *
               C153527 * C153563 -
           (C120644 * C116029 + (C12372 * C153464 + C19389 * C74249) * C153716 +
            ((C11410 + C11409) * C153464 + (C11408 + C11407) * C74249) *
                C153709) *
               C153527 * C1223) *
              C1226 +
          (((C11417 * C74249 + C11418 * C153464) * C153709 +
            (C18777 * C74249 + C20005 * C153464) * C153716 +
            (C19391 * C74249 + (C11967 + C11968) * C153464) * C116029) *
               C153527 * C1223 -
           (((C11350 * C3444 + C13209 + C13209 + C153671 * C3452 +
              C11348 * C1458 + C13210 + C13210 + C153851 * C1468) *
                 C153464 +
             (C20424 + C20423) * C74249) *
                C116029 +
            ((C12682 + C12681) * C153464 + C19714 * C74249) * C153716 +
            (C12163 * C153464 + C12164 * C74249) * C153709) *
               C153527 * C153563) *
              C1227)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C11348 * C136 + C11353 + C11353 + C153851 * C152 + C11350 * C329 +
              C11354 + C11354 + C153671 * C353) *
                 C74249 +
             (C11407 + C11408) * C153464) *
                C153709 +
            ((C19416 + C19417) * C74249 + C19382 * C153464) * C153716 +
            C120643 * C116029) *
               C535 -
           ((C58662 * C153464 + C62208 * C74249) * C116029 +
            (C19384 * C153464 + (C19418 + C19419) * C74249) * C153716 +
            (C19389 * C153464 + (C19417 + C19416) * C74249) * C153709) *
               C536 +
           (C120643 * C153709 + (C67264 * C74249 + C58663 * C153464) * C153716 +
            ((C62223 + C62224) * C74249 + (C58677 + C58678) * C153464) *
                C116029) *
               C537) *
              C1223 +
          ((((C20419 + C20420) * C74249 + C20396 * C153464) * C153709 +
            ((C21219 + C21220) * C74249 + C59645 * C153464) * C153716 +
            ((C60451 + C60452) * C74249 + (C59655 + C59656) * C153464) *
                C116029) *
               C536 -
           (C122387 * C116029 +
            (C20406 * C153464 + (C20420 + C20419) * C74249) * C153716 +
            ((C11687 + C11688) * C153464 +
             (C11350 * C330 + C11633 + C11633 + C153671 * C354 + C11348 * C329 +
              C11634 + C11634 + C153851 * C353) *
                 C74249) *
                C153709) *
               C535 -
           (((C11350 * C31196 + C60441 + C60441 + C153671 * C31200 +
              C11348 * C9116 + C60442 + C60442 + C153851 * C9122) *
                 C153464 +
             (C68448 + C68447) * C74249) *
                C116029 +
            ((C59656 + C59655) * C153464 + C68438 * C74249) * C153716 +
            C122387 * C153709) *
               C537) *
              C153563) *
         C153492) /
            (p * q * std::sqrt(p + q));
    d2ee[248] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C11348 * C136 + C11353 + C11353 + C153851 * C152 +
               C11350 * C329 + C11354 + C11354 + C153671 * C353) *
                  C74249 +
              (C11407 + C11408) * C153464) *
                 C153709 +
             ((C19416 + C19417) * C74249 + C19382 * C153464) * C153716 +
             C120643 * C116029) *
                C153838 -
            ((C58662 * C153464 + C62208 * C74249) * C116029 +
             (C19384 * C153464 + (C19418 + C19419) * C74249) * C153716 +
             (C19389 * C153464 + (C19417 + C19416) * C74249) * C153709) *
                C153591) *
               C1223 +
           ((((C20419 + C20420) * C74249 + C20396 * C153464) * C153709 +
             ((C21219 + C21220) * C74249 + C59645 * C153464) * C153716 +
             ((C60451 + C60452) * C74249 + (C59655 + C59656) * C153464) *
                 C116029) *
                C153591 -
            (C122387 * C116029 +
             (C20406 * C153464 + (C20420 + C20419) * C74249) * C153716 +
             ((C11687 + C11688) * C153464 +
              (C11350 * C330 + C11633 + C11633 + C153671 * C354 +
               C11348 * C329 + C11634 + C11634 + C153851 * C353) *
                  C74249) *
                 C153709) *
                C153838) *
               C153563) *
              C153829 +
          ((((C19382 * C74249 + C18777 * C153464) * C153709 +
             (C19390 * C74249 + C19391 * C153464) * C153716 +
             (C58663 * C74249 + (C19422 + C19423) * C153464) * C116029) *
                C153591 -
            (C120644 * C116029 +
             (C12372 * C153464 + C19389 * C74249) * C153716 +
             ((C11410 + C11409) * C153464 + (C11408 + C11407) * C74249) *
                 C153709) *
                C153838) *
               C1223 +
           ((((C11688 + C11687) * C74249 + (C11686 + C11685) * C153464) *
                 C153709 +
             (C20396 * C74249 + C20397 * C153464) * C153716 +
             (C59645 * C74249 + (C20423 + C20424) * C153464) * C116029) *
                C153838 -
            (((C11350 * C6301 + C21209 + C21209 + C153671 * C6313 +
               C11348 * C6302 + C21210 + C21210 + C153851 * C6314) *
                  C153464 +
              (C59656 + C59655) * C74249) *
                 C116029 +
             ((C20424 + C20423) * C153464 + C59650 * C74249) * C153716 +
             (C19714 * C153464 + C20406 * C74249) * C153709) *
                C153591) *
               C153563) *
              C153498)) /
        (p * q * std::sqrt(p + q));
    d2ee[249] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C11348 * C136 + C11353 + C11353 + C153851 * C152 + C11350 * C329 +
              C11354 + C11354 + C153671 * C353) *
                 C74249 +
             (C11407 + C11408) * C153464) *
                C153709 +
            ((C19416 + C19417) * C74249 + C19382 * C153464) * C153716 +
            C120643 * C116029) *
               C153527 * C1223 -
           ((C59650 * C153464 + C60440 * C74249) * C116029 +
            (C20406 * C153464 + (C20420 + C20419) * C74249) * C153716 +
            ((C11687 + C11688) * C153464 +
             (C11350 * C330 + C11633 + C11633 + C153671 * C354 + C11348 * C329 +
              C11634 + C11634 + C153851 * C353) *
                 C74249) *
                C153709) *
               C153527 * C153563) *
              C1225 +
          ((((C11688 + C11687) * C74249 + (C11686 + C11685) * C153464) *
                C153709 +
            (C20396 * C74249 + C20397 * C153464) * C153716 +
            (C59645 * C74249 + (C20423 + C20424) * C153464) * C116029) *
               C153527 * C153563 -
           (C120644 * C116029 + (C12372 * C153464 + C19389 * C74249) * C153716 +
            ((C11410 + C11409) * C153464 + (C11408 + C11407) * C74249) *
                C153709) *
               C153527 * C1223) *
              C1226 +
          (((C11417 * C74249 + C11418 * C153464) * C153709 +
            (C18777 * C74249 + C20005 * C153464) * C153716 +
            (C19391 * C74249 + (C11967 + C11968) * C153464) * C116029) *
               C153527 * C1223 -
           (((C11350 * C3444 + C13209 + C13209 + C153671 * C3452 +
              C11348 * C1458 + C13210 + C13210 + C153851 * C1468) *
                 C153464 +
             (C20424 + C20423) * C74249) *
                C116029 +
            ((C12682 + C12681) * C153464 + C19714 * C74249) * C153716 +
            (C12163 * C153464 + C12164 * C74249) * C153709) *
               C153527 * C153563) *
              C1227)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C11348 * C136 + C11353 + C11353 + C153851 * C152 + C11350 * C329 +
             C11354 + C11354 + C153671 * C353) *
                C74249 +
            (C11407 + C11408) * C153464) *
               C153709 +
           ((C19416 + C19417) * C74249 + C19382 * C153464) * C153716 +
           C120643 * C116029) *
              C153527 * C1310 -
          ((C59650 * C153464 + C60440 * C74249) * C116029 +
           (C20406 * C153464 + (C20420 + C20419) * C74249) * C153716 +
           ((C11687 + C11688) * C153464 +
            (C11350 * C330 + C11633 + C11633 + C153671 * C354 + C11348 * C329 +
             C11634 + C11634 + C153851 * C353) *
                C74249) *
               C153709) *
              C153527 * C1311 +
          (((C11348 * C330 + C11635 + C11635 + C153851 * C354 + C11350 * C1319 +
             C11636 + C11636 + C153671 * C1329) *
                C74249 +
            (C11689 + C11690) * C153464) *
               C153709 +
           ((C22201 + C22202) * C74249 + (C19084 + C19085) * C153464) *
               C153716 +
           ((C61431 + C61432) * C74249 + (C58368 + C58369) * C153464) *
               C116029) *
              C153527 * C1312 -
          (((C11350 * C28651 + C60141 + C60141 + C153671 * C28655 +
             C11348 * C4958 + C60142 + C60142 + C153851 * C4964) *
                C153464 +
            (C11350 * C28650 + C60143 + C60143 + C153671 * C28654 +
             C11348 * C4959 + C60144 + C60144 + C153851 * C4965) *
                C74249) *
               C116029 +
           ((C11350 * C5702 + C20911 + C20911 + C153671 * C5708 +
             C11348 * C4304 + C20912 + C20912 + C153851 * C4312) *
                C153464 +
            (C11350 * C5703 + C20913 + C20913 + C153671 * C5709 +
             C11348 * C4303 + C20914 + C20914 + C153851 * C4311) *
                C74249) *
               C153716 +
           ((C11350 * C3128 + C13011 + C13011 + C153671 * C3136 +
             C11348 * C1318 + C13012 + C13012 + C153851 * C1328) *
                C153464 +
            (C11350 * C3127 + C13013 + C13013 + C153671 * C3135 +
             C11348 * C1319 + C13014 + C13014 + C153851 * C1329) *
                C74249) *
               C153709) *
              C153527 * C1313) *
         C153492) /
            (p * q * std::sqrt(p + q));
    d2ee[250] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C11348 * C136 + C11353 + C11353 + C153851 * C152 +
               C11350 * C329 + C11354 + C11354 + C153671 * C353) *
                  C74249 +
              (C11407 + C11408) * C153464) *
                 C153709 +
             ((C19416 + C19417) * C74249 + C19382 * C153464) * C153716 +
             C120643 * C116029) *
                C2030 -
            (C124130 * C116029 +
             (C19384 * C153464 + (C19418 + C19419) * C74249) * C153716 +
             (C19389 * C153464 + (C19417 + C19416) * C74249) * C153709) *
                C153591) *
               C153837 +
           ((((C20419 + C20420) * C74249 + C20396 * C153464) * C153709 +
             ((C21219 + C21220) * C74249 + C59645 * C153464) * C153716 +
             ((C60451 + C60452) * C74249 + (C59655 + C59656) * C153464) *
                 C116029) *
                C153591 -
            (C122387 * C116029 +
             (C20406 * C153464 + (C20420 + C20419) * C74249) * C153716 +
             ((C11687 + C11688) * C153464 +
              (C11350 * C330 + C11633 + C11633 + C153671 * C354 +
               C11348 * C329 + C11634 + C11634 + C153851 * C353) *
                  C74249) *
                 C153709) *
                C2030) *
               C153563) *
              C153829 +
          ((((C19382 * C74249 + C18777 * C153464) * C153709 +
             (C19390 * C74249 + C19391 * C153464) * C153716 +
             (C58663 * C74249 + (C19422 + C19423) * C153464) * C116029) *
                C153591 -
            (C120644 * C116029 +
             (C12372 * C153464 + C19389 * C74249) * C153716 +
             ((C11410 + C11409) * C153464 + (C11408 + C11407) * C74249) *
                 C153709) *
                C2030) *
               C153837 +
           ((((C11688 + C11687) * C74249 + (C11686 + C11685) * C153464) *
                 C153709 +
             (C20396 * C74249 + C20397 * C153464) * C153716 +
             (C59645 * C74249 + (C20423 + C20424) * C153464) * C116029) *
                C2030 -
            (((C11350 * C6301 + C21209 + C21209 + C153671 * C6313 +
               C11348 * C6302 + C21210 + C21210 + C153851 * C6314) *
                  C153464 +
              (C59656 + C59655) * C74249) *
                 C116029 +
             ((C20424 + C20423) * C153464 + C59650 * C74249) * C153716 +
             (C19714 * C153464 + C20406 * C74249) * C153709) *
                C153591) *
               C153563) *
              C153498)) /
        (p * q * std::sqrt(p + q));
    d2ee[251] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C11348 * C136 + C11353 + C11353 + C153851 * C152 + C11350 * C329 +
              C11354 + C11354 + C153671 * C353) *
                 C74249 +
             (C11407 + C11408) * C153464) *
                C153709 +
            ((C19416 + C19417) * C74249 + C19382 * C153464) * C153716 +
            C120643 * C116029) *
               C153910 -
           (C124130 * C116029 +
            (C19384 * C153464 + (C19418 + C19419) * C74249) * C153716 +
            (C19389 * C153464 + (C19417 + C19416) * C74249) * C153709) *
               C153911 +
           (C120643 * C153709 + (C67264 * C74249 + C58663 * C153464) * C153716 +
            ((C62223 + C62224) * C74249 + (C58677 + C58678) * C153464) *
                C116029) *
               C2546) *
              C153837 +
          ((((C20419 + C20420) * C74249 + C20396 * C153464) * C153709 +
            ((C21219 + C21220) * C74249 + C59645 * C153464) * C153716 +
            ((C60451 + C60452) * C74249 + (C59655 + C59656) * C153464) *
                C116029) *
               C153911 -
           (C122387 * C116029 +
            (C20406 * C153464 + (C20420 + C20419) * C74249) * C153716 +
            ((C11687 + C11688) * C153464 +
             (C11350 * C330 + C11633 + C11633 + C153671 * C354 + C11348 * C329 +
              C11634 + C11634 + C153851 * C353) *
                 C74249) *
                C153709) *
               C153910 -
           (((C11350 * C31196 + C60441 + C60441 + C153671 * C31200 +
              C11348 * C9116 + C60442 + C60442 + C153851 * C9122) *
                 C153464 +
             (C68448 + C68447) * C74249) *
                C116029 +
            ((C59656 + C59655) * C153464 + C68438 * C74249) * C153716 +
            C122387 * C153709) *
               C2546) *
              C153563) *
         C153492) /
        (p * q * std::sqrt(p + q));
    d2ee[252] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C11348 * C136 + C11353 + C11353 + C153851 * C152 + C11350 * C329 +
              C11354 + C11354 + C153671 * C353) *
                 C74249 +
             (C11407 + C11408) * C153464) *
                C153709 +
            ((C19416 + C19417) * C74249 + C19382 * C153464) * C153716 +
            C120643 * C116029) *
               C2030 -
           ((C58662 * C153464 + C62208 * C74249) * C116029 +
            (C19384 * C153464 + (C19418 + C19419) * C74249) * C153716 +
            (C19389 * C153464 + (C19417 + C19416) * C74249) * C153709) *
               C153591) *
              C320 +
          ((((C20419 + C20420) * C74249 + C20396 * C153464) * C153709 +
            ((C21219 + C21220) * C74249 + C59645 * C153464) * C153716 +
            ((C60451 + C60452) * C74249 + (C59655 + C59656) * C153464) *
                C116029) *
               C153591 -
           (C122387 * C116029 +
            (C20406 * C153464 + (C20420 + C20419) * C74249) * C153716 +
            ((C11687 + C11688) * C153464 +
             (C11350 * C330 + C11633 + C11633 + C153671 * C354 + C11348 * C329 +
              C11634 + C11634 + C153851 * C353) *
                 C74249) *
                C153709) *
               C2030) *
              C321 +
          ((((C11348 * C330 + C11635 + C11635 + C153851 * C354 +
              C11350 * C1319 + C11636 + C11636 + C153671 * C1329) *
                 C74249 +
             (C11689 + C11690) * C153464) *
                C153709 +
            ((C22201 + C22202) * C74249 + (C19084 + C19085) * C153464) *
                C153716 +
            ((C61431 + C61432) * C74249 + (C58368 + C58369) * C153464) *
                C116029) *
               C2030 -
           (((C11350 * C31999 + C61423 + C61423 + C153671 * C32001 +
              C11348 * C6303 + C61424 + C61424 + C153851 * C6315) *
                 C153464 +
             (C69106 + C69105) * C74249) *
                C116029 +
            ((C58369 + C58368) * C153464 + (C61432 + C61431) * C74249) *
                C153716 +
            ((C19085 + C19084) * C153464 + (C22202 + C22201) * C74249) *
                C153709) *
               C153591) *
              C322) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C11348 * C136 + C11353 + C11353 + C153851 * C152 + C11350 * C329 +
              C11354 + C11354 + C153671 * C353) *
                 C74249 +
             (C11407 + C11408) * C153464) *
                C153709 +
            ((C19416 + C19417) * C74249 + C19382 * C153464) * C153716 +
            C120643 * C116029) *
               C2030 -
           ((C58662 * C153464 + C62208 * C74249) * C116029 +
            (C19384 * C153464 + (C19418 + C19419) * C74249) * C153716 +
            (C19389 * C153464 + (C19417 + C19416) * C74249) * C153709) *
               C153591) *
              C153511 * C1225 +
          (((C19382 * C74249 + C18777 * C153464) * C153709 +
            (C19390 * C74249 + C19391 * C153464) * C153716 +
            (C58663 * C74249 + (C19422 + C19423) * C153464) * C116029) *
               C153591 -
           (C120644 * C116029 + (C12372 * C153464 + C19389 * C74249) * C153716 +
            ((C11410 + C11409) * C153464 + (C11408 + C11407) * C74249) *
                C153709) *
               C2030) *
              C153511 * C1226 +
          (((C11417 * C74249 + C11418 * C153464) * C153709 +
            (C18777 * C74249 + C20005 * C153464) * C153716 +
            (C19391 * C74249 + (C11967 + C11968) * C153464) * C116029) *
               C2030 -
           (((C11350 * C8488 + C14389 + C14389 + C153671 * C8490 +
              C11348 * C2241 + C14390 + C14390 + C153851 * C2251) *
                 C153464 +
             (C19423 + C19422) * C74249) *
                C116029 +
            ((C11968 + C11967) * C153464 + C19383 * C74249) * C153716 +
            (C12371 * C153464 + C12372 * C74249) * C153709) *
               C153591) *
              C153511 * C1227)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C11348 * C136 + C11353 + C11353 + C153851 * C152 + C11350 * C329 +
             C11354 + C11354 + C153671 * C353) *
                C74249 +
            (C11407 + C11408) * C153464) *
               C153709 +
           ((C19416 + C19417) * C74249 + C19382 * C153464) * C153716 +
           C120643 * C116029) *
              C2236 -
          (C124130 * C116029 +
           (C19384 * C153464 + (C19418 + C19419) * C74249) * C153716 +
           (C19389 * C153464 + (C19417 + C19416) * C74249) * C153709) *
              C2237 +
          (C120643 * C153709 + (C67264 * C74249 + C58663 * C153464) * C153716 +
           ((C62223 + C62224) * C74249 + (C58677 + C58678) * C153464) *
               C116029) *
              C2238 -
          (((C11350 * C56351 + C62213 + C62213 + C153671 * C56353 +
             C11348 * C10465 + C62214 + C62214 + C153851 * C10471) *
                C153464 +
            (C69639 + C69638) * C74249) *
               C116029 +
           ((C58678 + C58677) * C153464 + C69625 * C74249) * C153716 +
           C124130 * C153709) *
              C2239) *
         C153511 * C153492) /
            (p * q * std::sqrt(p + q));
    d2ee[253] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C11348 * C136 + C11353 + C11353 + C153851 * C152 + C11350 * C329 +
              C11354 + C11354 + C153671 * C353) *
                 C74249 +
             (C11407 + C11408) * C153464) *
                C153709 +
            ((C19416 + C19417) * C74249 + C19382 * C153464) * C153716 +
            C120643 * C116029) *
               C153910 -
           (C124130 * C116029 +
            (C19384 * C153464 + (C19418 + C19419) * C74249) * C153716 +
            (C19389 * C153464 + (C19417 + C19416) * C74249) * C153709) *
               C153911 +
           (C120643 * C153709 + (C67264 * C74249 + C58663 * C153464) * C153716 +
            ((C62223 + C62224) * C74249 + (C58677 + C58678) * C153464) *
                C116029) *
               C2546) *
              C153511 * C153829 +
          (((C19382 * C74249 + C18777 * C153464) * C153709 +
            (C19390 * C74249 + C19391 * C153464) * C153716 +
            (C58663 * C74249 + (C19422 + C19423) * C153464) * C116029) *
               C153911 -
           (C120644 * C116029 + (C12372 * C153464 + C19389 * C74249) * C153716 +
            ((C11410 + C11409) * C153464 + (C11408 + C11407) * C74249) *
                C153709) *
               C153910 -
           (((C11350 * C9115 + C22981 + C22981 + C153671 * C9121 +
              C11348 * C7675 + C22982 + C22982 + C153851 * C7683) *
                 C153464 +
             (C58678 + C58677) * C74249) *
                C116029 +
            ((C19423 + C19422) * C153464 + C58662 * C74249) * C153716 +
            C120644 * C153709) *
               C2546) *
              C153511 * C153498)) /
        (p * q * std::sqrt(p + q));
    d2ee[254] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C11348 * C136 + C11353 + C11353 + C153851 * C152 + C11350 * C329 +
              C11354 + C11354 + C153671 * C353) *
                 C74249 +
             (C11407 + C11408) * C153464) *
                C153709 +
            ((C19416 + C19417) * C74249 + C19382 * C153464) * C153716 +
            C120643 * C116029) *
               C2030 -
           ((C58662 * C153464 + C62208 * C74249) * C116029 +
            (C19384 * C153464 + (C19418 + C19419) * C74249) * C153716 +
            (C19389 * C153464 + (C19417 + C19416) * C74249) * C153709) *
               C153591) *
              C153511 * C1225 +
          (((C19382 * C74249 + C18777 * C153464) * C153709 +
            (C19390 * C74249 + C19391 * C153464) * C153716 +
            (C58663 * C74249 + (C19422 + C19423) * C153464) * C116029) *
               C153591 -
           (C120644 * C116029 + (C12372 * C153464 + C19389 * C74249) * C153716 +
            ((C11410 + C11409) * C153464 + (C11408 + C11407) * C74249) *
                C153709) *
               C2030) *
              C153511 * C1226 +
          (((C11417 * C74249 + C11418 * C153464) * C153709 +
            (C18777 * C74249 + C20005 * C153464) * C153716 +
            (C19391 * C74249 + (C11967 + C11968) * C153464) * C116029) *
               C2030 -
           (((C11350 * C8488 + C14389 + C14389 + C153671 * C8490 +
              C11348 * C2241 + C14390 + C14390 + C153851 * C2251) *
                 C153464 +
             (C19423 + C19422) * C74249) *
                C116029 +
            ((C11968 + C11967) * C153464 + C19383 * C74249) * C153716 +
            (C12371 * C153464 + C12372 * C74249) * C153709) *
               C153591) *
              C153511 * C1227)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C11348 * C136 + C11353 + C11353 + C153851 * C152 + C11350 * C329 +
              C11354 + C11354 + C153671 * C353) *
                 C74249 +
             (C11407 + C11408) * C153464) *
                C153709 +
            ((C19416 + C19417) * C74249 + C19382 * C153464) * C153716 +
            C120643 * C116029) *
               C2030 -
           ((C58662 * C153464 + C62208 * C74249) * C116029 +
            (C19384 * C153464 + (C19418 + C19419) * C74249) * C153716 +
            (C19389 * C153464 + (C19417 + C19416) * C74249) * C153709) *
               C153591) *
              C320 +
          ((((C20419 + C20420) * C74249 + C20396 * C153464) * C153709 +
            ((C21219 + C21220) * C74249 + C59645 * C153464) * C153716 +
            ((C60451 + C60452) * C74249 + (C59655 + C59656) * C153464) *
                C116029) *
               C153591 -
           (C122387 * C116029 +
            (C20406 * C153464 + (C20420 + C20419) * C74249) * C153716 +
            ((C11687 + C11688) * C153464 +
             (C11350 * C330 + C11633 + C11633 + C153671 * C354 + C11348 * C329 +
              C11634 + C11634 + C153851 * C353) *
                 C74249) *
                C153709) *
               C2030) *
              C321 +
          ((((C11348 * C330 + C11635 + C11635 + C153851 * C354 +
              C11350 * C1319 + C11636 + C11636 + C153671 * C1329) *
                 C74249 +
             (C11689 + C11690) * C153464) *
                C153709 +
            ((C22201 + C22202) * C74249 + (C19084 + C19085) * C153464) *
                C153716 +
            ((C61431 + C61432) * C74249 + (C58368 + C58369) * C153464) *
                C116029) *
               C2030 -
           (((C11350 * C31999 + C61423 + C61423 + C153671 * C32001 +
              C11348 * C6303 + C61424 + C61424 + C153851 * C6315) *
                 C153464 +
             (C69106 + C69105) * C74249) *
                C116029 +
            ((C58369 + C58368) * C153464 + (C61432 + C61431) * C74249) *
                C153716 +
            ((C19085 + C19084) * C153464 + (C22202 + C22201) * C74249) *
                C153709) *
               C153591) *
              C322) *
         C153492) /
            (p * q * std::sqrt(p + q));
    d2ee[255] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
              C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
              C153887 * C354) *
                 C74249 +
             (C2894 + C2895 + C2896) * C153464) *
                C98459 +
            ((C52092 + C52093 + C52094) * C74249 + C102656 * C153464) *
                C153713) *
               C153527 * C153837 -
           (((C4354 + C4353 + C4352) * C153464 +
             (C52877 + C52876 + C52875) * C74249) *
                C153713 +
            ((C3215 + C3216 + C3217) * C153464 +
             (C2825 * C1319 + C3158 + C3158 + C153887 * C1329 + C2823 * C330 +
              C3159 + C3159 + C153913 * C354 + C2821 * C329 + C3160 + C3160 +
              C153925 * C353) *
                 C74249) *
                C98459) *
               C153527 * C153563) *
              C153906 +
          ((((C3217 + C3216 + C3215) * C74249 +
             (C3214 + C3213 + C3212) * C153464) *
                C98459 +
            ((C4352 + C4353 + C4354) * C74249 +
             (C4355 + C4356 + C4357) * C153464) *
                C153713) *
               C153527 * C153563 -
           ((C4004 * C153464 + C102657 * C74249) * C153713 +
            ((C2899 + C2898 + C2897) * C153464 +
             (C2896 + C2895 + C2894) * C74249) *
                C98459) *
               C153527 * C153837) *
              C153907 +
          (((C2908 * C74249 + (C2902 + C2901 + C2900) * C153464) * C98459 +
            ((C3528 + C3527 + C3526) * C74249 +
             (C4011 + C4012 + C4013) * C153464) *
                C153713) *
               C153527 * C153837 -
           (((C2825 * C4306 + C4337 + C4337 + C153887 * C4314 + C2823 * C1889 +
              C4338 + C4338 + C153913 * C1899 + C2821 * C1060 + C4339 + C4339 +
              C153925 * C1072) *
                 C153464 +
             (C4357 + C4356 + C4355) * C74249) *
                C153713 +
            ((C3775 + C3774 + C3773) * C153464 + C3766 * C74249) * C98459) *
               C153527 * C153563) *
              C752)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C153931 +
             C193 * C153924 + C194 * C153905 + C195 * C153852) *
                C98459 +
            (C98850 + C98851 + C98852 + C98853) * C153713) *
               C153527 * C153837 -
           ((C1100 * C153852 + C1099 * C153905 + C1098 * C153924 +
             C8522 * C153931) *
                C153713 +
            (C407 * C153852 + C408 * C153905 + C409 * C153924 +
             (C134 * C329 + C374 + C374 + C153608 * C353) * C153931) *
                C98459) *
               C153527 * C153563) *
              C153906 +
          (((C409 * C153931 + C408 * C153924 + C407 * C153905 +
             C406 * C153852) *
                C98459 +
            (C1098 * C153931 + C1099 * C153924 + C1100 * C153905 +
             C1101 * C153852) *
                C153713) *
               C153527 * C153563 -
           ((C98861 + C98860 + C98859 + C98858) * C153713 +
            (C196 * C153852 + C195 * C153905 + C194 * C153924 +
             C193 * C153931) *
                C98459) *
               C153527 * C153837) *
              C153907 +
          (((C194 * C153931 + C195 * C153924 + C196 * C153905 +
             C197 * C153852) *
                C98459 +
            (C621 * C153931 + C620 * C153924 + C619 * C153905 +
             C895 * C153852) *
                C153713) *
               C153527 * C153837 -
           (((C134 * C1062 + C1089 + C1089 + C153608 * C1074) * C153852 +
             C1101 * C153905 + C1100 * C153924 + C1099 * C153931) *
                C153713 +
            (C762 * C153852 + C406 * C153905 + C407 * C153924 +
             C408 * C153931) *
                C98459) *
               C153527 * C153563) *
              C752)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C74249 +
             C193 * C153464) *
                C153933 +
            (C107636 + C107637) * C153930 + C107652 * C153921 +
            C107653 * C153867) *
               C153527 * C153837 -
           ((C8524 * C153464 + C9136 * C74249) * C153867 +
            (C7451 * C153464 + C8523 * C74249) * C153921 +
            (C1098 * C153464 + C8522 * C74249) * C153930 +
            (C409 * C153464 +
             (C134 * C329 + C374 + C374 + C153608 * C353) * C74249) *
                C153933) *
               C153527 * C153563) *
              C153906 +
          (((C409 * C74249 + C408 * C153464) * C153933 +
            (C1098 * C74249 + C1099 * C153464) * C153930 +
            (C7451 * C74249 + C7450 * C153464) * C153921 +
            (C8524 * C74249 + C8525 * C153464) * C153867) *
               C153527 * C153563 -
           (C107654 * C153867 + C107655 * C153921 +
            (C107645 + C107644) * C153930 +
            (C194 * C153464 + C193 * C74249) * C153933) *
               C153527 * C153837) *
              C153907 +
          (((C194 * C74249 + C195 * C153464) * C153933 +
            (C621 * C74249 + C620 * C153464) * C153930 +
            (C624 * C74249 + C625 * C153464) * C153921 +
            (C7736 * C74249 + C7741 * C153464) * C153867) *
               C153527 * C153837 -
           (((C134 * C8488 + C8513 + C8513 + C153608 * C8490) * C153464 +
             C8525 * C74249) *
                C153867 +
            (C7974 * C153464 + C7450 * C74249) * C153921 +
            (C1100 * C153464 + C1099 * C74249) * C153930 +
            (C407 * C153464 + C408 * C74249) * C153933) *
               C153527 * C153563) *
              C752)) /
            (p * q * std::sqrt(p + q));
    d2ee[256] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
               C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
               C153887 * C354) *
                  C74249 +
              (C2894 + C2895 + C2896) * C153464) *
                 C98459 +
             ((C52092 + C52093 + C52094) * C74249 + C102656 * C153464) *
                 C153713) *
                C153838 -
            ((C52078 * C153464 + (C52097 + C52096 + C52095) * C74249) *
                 C153713 +
             (C102657 * C153464 + (C52094 + C52093 + C52092) * C74249) *
                 C98459) *
                C153591) *
               C153837 +
           ((((C52875 + C52876 + C52877) * C74249 + C103629 * C153464) *
                 C98459 +
             ((C52878 + C52879 + C52880) * C74249 +
              (C52881 + C52882 + C52883) * C153464) *
                 C153713) *
                C153591 -
            ((C103630 * C153464 + (C52877 + C52876 + C52875) * C74249) *
                 C153713 +
             ((C3215 + C3216 + C3217) * C153464 +
              (C2825 * C1319 + C3158 + C3158 + C153887 * C1329 + C2823 * C330 +
               C3159 + C3159 + C153913 * C354 + C2821 * C329 + C3160 + C3160 +
               C153925 * C353) *
                  C74249) *
                 C98459) *
                C153838) *
               C153563) *
              C323 +
          ((((C102656 * C74249 + C103240 * C153464) * C98459 +
             (C102658 * C74249 + (C3535 + C3536 + C3537) * C153464) * C153713) *
                C153591 -
            ((C4004 * C153464 + C102657 * C74249) * C153713 +
             ((C2899 + C2898 + C2897) * C153464 +
              (C2896 + C2895 + C2894) * C74249) *
                 C98459) *
                C153838) *
               C153837 +
           ((((C3217 + C3216 + C3215) * C74249 +
              (C3214 + C3213 + C3212) * C153464) *
                 C98459 +
             (C103629 * C74249 + (C4355 + C4356 + C4357) * C153464) * C153713) *
                C153838 -
            (((C2825 * C4957 + C4967 + C4967 + C153887 * C4963 + C2823 * C3443 +
               C4968 + C4968 + C153913 * C3451 + C2821 * C1459 + C4969 + C4969 +
               C153925 * C1469) *
                  C153464 +
              (C52883 + C52882 + C52881) * C74249) *
                 C153713 +
             ((C4357 + C4356 + C4355) * C153464 + C103630 * C74249) * C98459) *
                C153591) *
               C153563) *
              C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C153608 * C152) * C153931 +
              C193 * C153924 + C194 * C153905 + C195 * C153852) *
                 C98459 +
             (C98850 + C98851 + C98852 + C98853) * C153713) *
                C153838 -
            ((C98854 + C98855 + C98856 + C98857) * C153713 +
             (C98853 + C98852 + C98851 + C98850) * C98459) *
                C153591) *
               C153837 +
           (((C99516 + C99517 + C99518 + C99519) * C98459 +
             (C8523 * C153931 + C7451 * C153924 + C7450 * C153905 +
              C7974 * C153852) *
                 C153713) *
                C153591 -
            ((C99519 + C99518 + C99517 + C99516) * C153713 +
             (C407 * C153852 + C408 * C153905 + C409 * C153924 +
              (C134 * C329 + C374 + C374 + C153608 * C353) * C153931) *
                 C98459) *
                C153838) *
               C153563) *
              C323 +
          ((((C98858 + C98859 + C98860 + C98861) * C98459 +
             (C98862 + C98863 + C98864 + C98865) * C153713) *
                C153591 -
            ((C98861 + C98860 + C98859 + C98858) * C153713 +
             (C196 * C153852 + C195 * C153905 + C194 * C153924 +
              C193 * C153931) *
                 C98459) *
                C153838) *
               C153837 +
           (((C409 * C153931 + C408 * C153924 + C407 * C153905 +
              C406 * C153852) *
                 C98459 +
             (C99520 + C99521 + C99522 + C99523) * C153713) *
                C153838 -
            (((C134 * C1457 + C1473 + C1473 + C153608 * C1467) * C153852 +
              C7974 * C153905 + C7450 * C153924 + C7451 * C153931) *
                 C153713 +
             (C99523 + C99522 + C99521 + C99520) * C98459) *
                C153591) *
               C153563) *
              C153498)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C153608 * C152) * C74249 +
              C193 * C153464) *
                 C153933 +
             (C107636 + C107637) * C153930 + C107652 * C153921 +
             C107653 * C153867) *
                C153838 -
            ((C107642 + C107643) * C153867 + (C107641 + C107640) * C153921 +
             (C107639 + C107638) * C153930 + (C107637 + C107636) * C153933) *
                C153591) *
               C153837 +
           (((C108308 + C108309) * C153933 + (C108310 + C108311) * C153930 +
             (C108312 + C108313) * C153921 +
             (C56371 * C74249 + C56372 * C153464) * C153867) *
                C153591 -
            ((C108313 + C108312) * C153867 + (C108311 + C108310) * C153921 +
             (C108309 + C108308) * C153930 +
             (C409 * C153464 +
              (C134 * C329 + C374 + C374 + C153608 * C353) * C74249) *
                 C153933) *
                C153838) *
               C153563) *
              C323 +
          ((((C107644 + C107645) * C153933 + (C107646 + C107647) * C153930 +
             (C107648 + C107649) * C153921 + (C107650 + C107651) * C153867) *
                C153591 -
            (C107654 * C153867 + C107655 * C153921 +
             (C107645 + C107644) * C153930 +
             (C194 * C153464 + C193 * C74249) * C153933) *
                C153838) *
               C153837 +
           (((C409 * C74249 + C408 * C153464) * C153933 +
             (C108314 + C108315) * C153930 + (C108316 + C108317) * C153921 +
             (C108318 + C108319) * C153867) *
                C153838 -
            (((C134 * C9115 + C9130 + C9130 + C153608 * C9121) * C153464 +
              C56372 * C74249) *
                 C153867 +
             (C108319 + C108318) * C153921 + (C108317 + C108316) * C153930 +
             (C108315 + C108314) * C153933) *
                C153591) *
               C153563) *
              C153498)) /
            (p * q * std::sqrt(p + q));
    d2ee[257] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C136 + C161 + C161 + C153608 * C152) * C153931 +
                C193 * C153924 + C194 * C153905 + C195 * C153852) *
                   C98459 +
               (C7734 * C153931 + C622 * C153924 + C621 * C153905 +
                C620 * C153852) *
                   C153713) *
                  C153527 * C153511 * C130 -
              ((C619 * C153852 + C620 * C153905 + C621 * C153924 +
                C622 * C153931) *
                   C153713 +
               (C196 * C153852 + C195 * C153905 + C194 * C153924 +
                C193 * C153931) *
                   C98459) *
                  C153527 * C153511 * C131 +
              ((C194 * C153931 + C195 * C153924 + C196 * C153905 +
                C197 * C153852) *
                   C98459 +
               (C621 * C153931 + C620 * C153924 + C619 * C153905 +
                C895 * C153852) *
                   C153713) *
                  C153527 * C153511 * C132 -
              (((C134 * C886 + C892 + C892 + C153608 * C888) * C153852 +
                C895 * C153905 + C619 * C153924 + C620 * C153931) *
                   C153713 +
               (C198 * C153852 + C197 * C153905 + C196 * C153924 +
                C195 * C153931) *
                   C98459) *
                  C153527 * C153511 * C133) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C134 * C136 + C161 + C161 + C153608 * C152) * C153931 +
                 C193 * C153924 + C194 * C153905 + C195 * C153852) *
                    C98459 +
                (C7734 * C153931 + C622 * C153924 + C621 * C153905 +
                 C620 * C153852) *
                    C153713) *
                   C153527 * C320 -
               ((C1100 * C153852 + C1099 * C153905 + C1098 * C153924 +
                 C8522 * C153931) *
                    C153713 +
                (C407 * C153852 + C408 * C153905 + C409 * C153924 +
                 (C134 * C329 + C374 + C374 + C153608 * C353) * C153931) *
                    C98459) *
                   C153527 * C321 +
               (((C134 * C330 + C375 + C375 + C153608 * C354) * C153931 +
                 C410 * C153924 + C411 * C153905 + C412 * C153852) *
                    C98459 +
                (C9879 * C153931 + C7452 * C153924 + C7453 * C153905 +
                 C15373 * C153852) *
                    C153713) *
                   C153527 * C322) *
                  C323 +
              (((C409 * C153931 + C408 * C153924 + C407 * C153905 +
                 C406 * C153852) *
                    C98459 +
                (C1098 * C153931 + C1099 * C153924 + C1100 * C153905 +
                 C1101 * C153852) *
                    C153713) *
                   C153527 * C321 -
               ((C619 * C153852 + C620 * C153905 + C621 * C153924 +
                 C622 * C153931) *
                    C153713 +
                (C196 * C153852 + C195 * C153905 + C194 * C153924 +
                 C193 * C153931) *
                    C98459) *
                   C153527 * C320 -
               (((C134 * C1888 + C1904 + C1904 + C153608 * C1898) * C153852 +
                 C15373 * C153905 + C7453 * C153924 + C7452 * C153931) *
                    C153713 +
                (C413 * C153852 + C412 * C153905 + C411 * C153924 +
                 C410 * C153931) *
                    C98459) *
                   C153527 * C322) *
                  C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C153931 +
             C193 * C153924 + C194 * C153905 + C195 * C153852) *
                C98459 +
            (C98850 + C98851 + C98852 + C98853) * C153713) *
               C535 -
           ((C98854 + C98855 + C98856 + C98857) * C153713 +
            (C98853 + C98852 + C98851 + C98850) * C98459) *
               C536 +
           ((C98857 + C98856 + C98855 + C98854) * C98459 +
            (C7738 * C153931 + C7737 * C153924 + C7736 * C153905 +
             C7741 * C153852) *
                C153713) *
               C537) *
              C153511 * C323 +
          (((C98858 + C98859 + C98860 + C98861) * C98459 +
            (C98862 + C98863 + C98864 + C98865) * C153713) *
               C536 -
           ((C98861 + C98860 + C98859 + C98858) * C153713 +
            (C196 * C153852 + C195 * C153905 + C194 * C153924 +
             C193 * C153931) *
                C98459) *
               C535 -
           (((C134 * C2240 + C2256 + C2256 + C153608 * C2250) * C153852 +
             C7741 * C153905 + C7736 * C153924 + C7737 * C153931) *
                C153713 +
            (C98865 + C98864 + C98863 + C98862) * C98459) *
               C537) *
              C153511 * C153498)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
             C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
             C153887 * C354) *
                C74249 +
            (C2894 + C2895 + C2896) * C153464) *
               C98459 +
           ((C52092 + C52093 + C52094) * C74249 +
            (C3531 + C3530 + C3529) * C153464) *
               C153713) *
              C153527 * C153511 * C130 -
          ((C4004 * C153464 + (C3529 + C3530 + C3531) * C74249) * C153713 +
           ((C2899 + C2898 + C2897) * C153464 +
            (C2896 + C2895 + C2894) * C74249) *
               C98459) *
              C153527 * C153511 * C131 +
          ((C2908 * C74249 + (C2902 + C2901 + C2900) * C153464) * C98459 +
           ((C3528 + C3527 + C3526) * C74249 +
            (C4011 + C4012 + C4013) * C153464) *
               C153713) *
              C153527 * C153511 * C132 -
          (((C2825 * C1888 + C4001 + C4001 + C153887 * C1898 + C2823 * C1061 +
             C4002 + C4002 + C153913 * C1073 + C2821 * C538 + C4003 + C4003 +
             C153925 * C562) *
                C153464 +
            (C4013 + C4012 + C4011) * C74249) *
               C153713 +
           ((C2905 + C2904 + C2903) * C153464 + C2909 * C74249) * C98459) *
              C153527 * C153511 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
              C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
              C153887 * C354) *
                 C74249 +
             (C2894 + C2895 + C2896) * C153464) *
                C98459 +
            ((C52092 + C52093 + C52094) * C74249 +
             (C3531 + C3530 + C3529) * C153464) *
                C153713) *
               C153527 * C320 -
           (((C4354 + C4353 + C4352) * C153464 +
             (C52877 + C52876 + C52875) * C74249) *
                C153713 +
            ((C3215 + C3216 + C3217) * C153464 +
             (C2825 * C1319 + C3158 + C3158 + C153887 * C1329 + C2823 * C330 +
              C3159 + C3159 + C153913 * C354 + C2821 * C329 + C3160 + C3160 +
              C153925 * C353) *
                 C74249) *
                C98459) *
               C153527 * C321 +
           (((C2821 * C330 + C3161 + C3161 + C153925 * C354 + C2823 * C1319 +
              C3162 + C3162 + C153913 * C1329 + C2825 * C3127 + C3163 + C3163 +
              C153887 * C3135) *
                 C74249 +
             (C3218 + C3219 + C3220) * C153464) *
                C98459 +
            ((C54246 + C54247 + C54248) * C74249 +
             (C102360 + C102361 + C102362) * C153464) *
                C153713) *
               C153527 * C322) *
              C323 +
          ((((C3217 + C3216 + C3215) * C74249 +
             (C3214 + C3213 + C3212) * C153464) *
                C98459 +
            ((C4352 + C4353 + C4354) * C74249 +
             (C4355 + C4356 + C4357) * C153464) *
                C153713) *
               C153527 * C321 -
           ((C4004 * C153464 + (C3529 + C3530 + C3531) * C74249) * C153713 +
            ((C2899 + C2898 + C2897) * C153464 +
             (C2896 + C2895 + C2894) * C74249) *
                C98459) *
               C153527 * C320 -
           (((C2825 * C5701 + C5711 + C5711 + C153887 * C5707 + C2823 * C4305 +
              C5712 + C5712 + C153913 * C4313 + C2821 * C1890 + C5713 + C5713 +
              C153925 * C1900) *
                 C153464 +
             (C102362 + C102361 + C102360) * C74249) *
                C153713 +
            ((C3223 + C3222 + C3221) * C153464 +
             (C3220 + C3219 + C3218) * C74249) *
                C98459) *
               C153527 * C322) *
              C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
              C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
              C153887 * C354) *
                 C74249 +
             (C2894 + C2895 + C2896) * C153464) *
                C98459 +
            ((C52092 + C52093 + C52094) * C74249 + C102656 * C153464) *
                C153713) *
               C535 -
           ((C52078 * C153464 + (C52097 + C52096 + C52095) * C74249) * C153713 +
            (C102657 * C153464 + (C52094 + C52093 + C52092) * C74249) *
                C98459) *
               C536 +
           ((C52105 * C74249 + C102658 * C153464) * C98459 +
            ((C52100 + C52099 + C52098) * C74249 +
             (C52101 + C52102 + C52103) * C153464) *
                C153713) *
               C537) *
              C153511 * C323 +
          (((C102656 * C74249 + (C3528 + C3527 + C3526) * C153464) * C98459 +
            (C102658 * C74249 + (C3535 + C3536 + C3537) * C153464) * C153713) *
               C536 -
           ((C4004 * C153464 + C102657 * C74249) * C153713 +
            ((C2899 + C2898 + C2897) * C153464 +
             (C2896 + C2895 + C2894) * C74249) *
                C98459) *
               C535 -
           (((C2825 * C6301 + C6320 + C6320 + C153887 * C6313 + C2823 * C6302 +
              C6321 + C6321 + C153913 * C6314 + C2821 * C2242 + C6322 + C6322 +
              C153925 * C2252) *
                 C153464 +
             (C52103 + C52102 + C52101) * C74249) *
                C153713 +
            ((C3537 + C3536 + C3535) * C153464 + C52078 * C74249) * C98459) *
               C537) *
              C153511 * C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153608 * C152) * C74249 +
            C193 * C153464) *
               C153933 +
           (C7734 * C74249 + C622 * C153464) * C153930 +
           (C7735 * C74249 + C623 * C153464) * C153921 +
           (C7738 * C74249 + C7737 * C153464) * C153867) *
              C153527 * C153511 * C130 -
          ((C7736 * C153464 + C7737 * C74249) * C153867 +
           (C624 * C153464 + C623 * C74249) * C153921 +
           (C621 * C153464 + C622 * C74249) * C153930 +
           (C194 * C153464 + C193 * C74249) * C153933) *
              C153527 * C153511 * C131 +
          ((C194 * C74249 + C195 * C153464) * C153933 +
           (C621 * C74249 + C620 * C153464) * C153930 +
           (C624 * C74249 + C625 * C153464) * C153921 +
           (C7736 * C74249 + C7741 * C153464) * C153867) *
              C153527 * C153511 * C132 -
          (((C134 * C2240 + C2256 + C2256 + C153608 * C2250) * C153464 +
            C7741 * C74249) *
               C153867 +
           (C626 * C153464 + C625 * C74249) * C153921 +
           (C619 * C153464 + C620 * C74249) * C153930 +
           (C196 * C153464 + C195 * C74249) * C153933) *
              C153527 * C153511 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C74249 +
             C193 * C153464) *
                C153933 +
            (C7734 * C74249 + C622 * C153464) * C153930 +
            (C7735 * C74249 + C623 * C153464) * C153921 +
            (C7738 * C74249 + C7737 * C153464) * C153867) *
               C153527 * C320 -
           ((C8524 * C153464 + C9136 * C74249) * C153867 +
            (C7451 * C153464 + C8523 * C74249) * C153921 +
            (C1098 * C153464 + C8522 * C74249) * C153930 +
            (C409 * C153464 +
             (C134 * C329 + C374 + C374 + C153608 * C353) * C74249) *
                C153933) *
               C153527 * C321 +
           (((C134 * C330 + C375 + C375 + C153608 * C354) * C74249 +
             C410 * C153464) *
                C153933 +
            (C9879 * C74249 + C7452 * C153464) * C153930 +
            (C9880 * C74249 + C7454 * C153464) * C153921 +
            (C57130 * C74249 + C63523 * C153464) * C153867) *
               C153527 * C322) *
              C323 +
          (((C409 * C74249 + C408 * C153464) * C153933 +
            (C1098 * C74249 + C1099 * C153464) * C153930 +
            (C7451 * C74249 + C7450 * C153464) * C153921 +
            (C8524 * C74249 + C8525 * C153464) * C153867) *
               C153527 * C321 -
           ((C7736 * C153464 + C7737 * C74249) * C153867 +
            (C624 * C153464 + C623 * C74249) * C153921 +
            (C621 * C153464 + C622 * C74249) * C153930 +
            (C194 * C153464 + C193 * C74249) * C153933) *
               C153527 * C320 -
           (((C134 * C6301 + C9872 + C9872 + C153608 * C6313) * C153464 +
             C63523 * C74249) *
                C153867 +
            (C7455 * C153464 + C7454 * C74249) * C153921 +
            (C7453 * C153464 + C7452 * C74249) * C153930 +
            (C411 * C153464 + C410 * C74249) * C153933) *
               C153527 * C322) *
              C153498)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C74249 +
             C193 * C153464) *
                C153933 +
            (C107636 + C107637) * C153930 + C107652 * C153921 +
            C107653 * C153867) *
               C535 -
           ((C107642 + C107643) * C153867 + (C107641 + C107640) * C153921 +
            (C107639 + C107638) * C153930 + (C107637 + C107636) * C153933) *
               C536 +
           (C107652 * C153933 + C107653 * C153930 +
            (C107643 + C107642) * C153921 +
            (C55938 * C74249 + C55939 * C153464) * C153867) *
               C537) *
              C153511 * C323 +
          (((C107644 + C107645) * C153933 + (C107646 + C107647) * C153930 +
            (C107648 + C107649) * C153921 + (C107650 + C107651) * C153867) *
               C536 -
           (C107654 * C153867 + C107655 * C153921 +
            (C107645 + C107644) * C153930 +
            (C194 * C153464 + C193 * C74249) * C153933) *
               C535 -
           (((C134 * C10464 + C10479 + C10479 + C153608 * C10470) * C153464 +
             C55939 * C74249) *
                C153867 +
            (C107651 + C107650) * C153921 + C107654 * C153930 +
            C107655 * C153933) *
               C537) *
              C153511 * C153498)) /
            (p * q * std::sqrt(p + q));
    d2ee[258] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
              C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
              C153887 * C354) *
                 C74249 +
             (C2894 + C2895 + C2896) * C153464) *
                C98459 +
            ((C52092 + C52093 + C52094) * C74249 + C102656 * C153464) *
                C153713) *
               C153838 -
           ((C52078 * C153464 + (C52097 + C52096 + C52095) * C74249) * C153713 +
            (C102657 * C153464 + (C52094 + C52093 + C52092) * C74249) *
                C98459) *
               C153591) *
              C153511 * C153906 +
          (((C102656 * C74249 + C103240 * C153464) * C98459 +
            (C102658 * C74249 + (C3535 + C3536 + C3537) * C153464) * C153713) *
               C153591 -
           ((C4004 * C153464 + C102657 * C74249) * C153713 +
            ((C2899 + C2898 + C2897) * C153464 +
             (C2896 + C2895 + C2894) * C74249) *
                C98459) *
               C153838) *
              C153511 * C153907 +
          (((C2908 * C74249 + (C2902 + C2901 + C2900) * C153464) * C98459 +
            (C103240 * C74249 + (C4011 + C4012 + C4013) * C153464) * C153713) *
               C153838 -
           (((C2825 * C3444 + C3499 + C3499 + C153887 * C3452 + C2823 * C1458 +
              C3500 + C3500 + C153913 * C1468 + C2821 * C546 + C3501 + C3501 +
              C153925 * C570) *
                 C153464 +
             (C3537 + C3536 + C3535) * C74249) *
                C153713 +
            ((C4013 + C4012 + C4011) * C153464 + C4004 * C74249) * C98459) *
               C153591) *
              C153511 * C752)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C153931 +
             C193 * C153924 + C194 * C153905 + C195 * C153852) *
                C98459 +
            (C98850 + C98851 + C98852 + C98853) * C153713) *
               C153838 -
           ((C98854 + C98855 + C98856 + C98857) * C153713 +
            (C98853 + C98852 + C98851 + C98850) * C98459) *
               C153591) *
              C153511 * C153906 +
          (((C98858 + C98859 + C98860 + C98861) * C98459 +
            (C98862 + C98863 + C98864 + C98865) * C153713) *
               C153591 -
           ((C98861 + C98860 + C98859 + C98858) * C153713 +
            (C196 * C153852 + C195 * C153905 + C194 * C153924 +
             C193 * C153931) *
                C98459) *
               C153838) *
              C153511 * C153907 +
          (((C194 * C153931 + C195 * C153924 + C196 * C153905 +
             C197 * C153852) *
                C98459 +
            (C99254 + C99255 + C99256 + C99257) * C153713) *
               C153838 -
           (((C134 * C549 + C602 + C602 + C153608 * C573) * C153852 +
             C626 * C153905 + C625 * C153924 + C624 * C153931) *
                C153713 +
            (C99257 + C99256 + C99255 + C99254) * C98459) *
               C153591) *
              C153511 * C752)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C74249 +
             C193 * C153464) *
                C153933 +
            (C107636 + C107637) * C153930 + C107652 * C153921 +
            C107653 * C153867) *
               C153838 -
           ((C107642 + C107643) * C153867 + (C107641 + C107640) * C153921 +
            (C107639 + C107638) * C153930 + (C107637 + C107636) * C153933) *
               C153591) *
              C153511 * C153906 +
          (((C107644 + C107645) * C153933 + (C107646 + C107647) * C153930 +
            (C107648 + C107649) * C153921 + (C107650 + C107651) * C153867) *
               C153591 -
           (C107654 * C153867 + C107655 * C153921 +
            (C107645 + C107644) * C153930 +
            (C194 * C153464 + C193 * C74249) * C153933) *
               C153838) *
              C153511 * C153907 +
          (((C194 * C74249 + C195 * C153464) * C153933 +
            (C108044 + C108045) * C153930 + (C108046 + C108047) * C153921 +
            (C108048 + C108049) * C153867) *
               C153838 -
           (((C134 * C7676 + C7715 + C7715 + C153608 * C7684) * C153464 +
             C7740 * C74249) *
                C153867 +
            (C108049 + C108048) * C153921 + (C108047 + C108046) * C153930 +
            (C108045 + C108044) * C153933) *
               C153591) *
              C153511 * C752)) /
            (p * q * std::sqrt(p + q));
    d2ee[259] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C153931 +
             C193 * C153924 + C194 * C153905 + C195 * C153852) *
                C98459 +
            (C7734 * C153931 + C622 * C153924 + C621 * C153905 +
             C620 * C153852) *
                C153713) *
               C153527 * C320 -
           ((C1100 * C153852 + C1099 * C153905 + C1098 * C153924 +
             C8522 * C153931) *
                C153713 +
            (C407 * C153852 + C408 * C153905 + C409 * C153924 +
             (C134 * C329 + C374 + C374 + C153608 * C353) * C153931) *
                C98459) *
               C153527 * C321 +
           (((C134 * C330 + C375 + C375 + C153608 * C354) * C153931 +
             C410 * C153924 + C411 * C153905 + C412 * C153852) *
                C98459 +
            (C9879 * C153931 + C7452 * C153924 + C7453 * C153905 +
             C15373 * C153852) *
                C153713) *
               C153527 * C322) *
              C323 +
          (((C409 * C153931 + C408 * C153924 + C407 * C153905 +
             C406 * C153852) *
                C98459 +
            (C1098 * C153931 + C1099 * C153924 + C1100 * C153905 +
             C1101 * C153852) *
                C153713) *
               C153527 * C321 -
           ((C619 * C153852 + C620 * C153905 + C621 * C153924 +
             C622 * C153931) *
                C153713 +
            (C196 * C153852 + C195 * C153905 + C194 * C153924 +
             C193 * C153931) *
                C98459) *
               C153527 * C320 -
           (((C134 * C1888 + C1904 + C1904 + C153608 * C1898) * C153852 +
             C15373 * C153905 + C7453 * C153924 + C7452 * C153931) *
                C153713 +
            (C413 * C153852 + C412 * C153905 + C411 * C153924 +
             C410 * C153931) *
                C98459) *
               C153527 * C322) *
              C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153608 * C152) * C153931 +
            C193 * C153924 + C194 * C153905 + C195 * C153852) *
               C98459 +
           (C7734 * C153931 + C622 * C153924 + C621 * C153905 +
            C620 * C153852) *
               C153713) *
              C153527 * C153511 * C130 -
          ((C619 * C153852 + C620 * C153905 + C621 * C153924 + C622 * C153931) *
               C153713 +
           (C196 * C153852 + C195 * C153905 + C194 * C153924 + C193 * C153931) *
               C98459) *
              C153527 * C153511 * C131 +
          ((C194 * C153931 + C195 * C153924 + C196 * C153905 + C197 * C153852) *
               C98459 +
           (C621 * C153931 + C620 * C153924 + C619 * C153905 + C895 * C153852) *
               C153713) *
              C153527 * C153511 * C132 -
          (((C134 * C886 + C892 + C892 + C153608 * C888) * C153852 +
            C895 * C153905 + C619 * C153924 + C620 * C153931) *
               C153713 +
           (C198 * C153852 + C197 * C153905 + C196 * C153924 + C195 * C153931) *
               C98459) *
              C153527 * C153511 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
             C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
             C153887 * C354) *
                C74249 +
            (C2894 + C2895 + C2896) * C153464) *
               C98459 +
           ((C52092 + C52093 + C52094) * C74249 +
            (C3531 + C3530 + C3529) * C153464) *
               C153713) *
              C153527 * C153511 * C130 -
          ((C4004 * C153464 + (C3529 + C3530 + C3531) * C74249) * C153713 +
           ((C2899 + C2898 + C2897) * C153464 +
            (C2896 + C2895 + C2894) * C74249) *
               C98459) *
              C153527 * C153511 * C131 +
          ((C2908 * C74249 + (C2902 + C2901 + C2900) * C153464) * C98459 +
           ((C3528 + C3527 + C3526) * C74249 +
            (C4011 + C4012 + C4013) * C153464) *
               C153713) *
              C153527 * C153511 * C132 -
          (((C2825 * C1888 + C4001 + C4001 + C153887 * C1898 + C2823 * C1061 +
             C4002 + C4002 + C153913 * C1073 + C2821 * C538 + C4003 + C4003 +
             C153925 * C562) *
                C153464 +
            (C4013 + C4012 + C4011) * C74249) *
               C153713 +
           ((C2905 + C2904 + C2903) * C153464 + C2909 * C74249) * C98459) *
              C153527 * C153511 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
              C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
              C153887 * C354) *
                 C74249 +
             (C2894 + C2895 + C2896) * C153464) *
                C98459 +
            ((C52092 + C52093 + C52094) * C74249 +
             (C3531 + C3530 + C3529) * C153464) *
                C153713) *
               C153527 * C320 -
           (((C4354 + C4353 + C4352) * C153464 +
             (C52877 + C52876 + C52875) * C74249) *
                C153713 +
            ((C3215 + C3216 + C3217) * C153464 +
             (C2825 * C1319 + C3158 + C3158 + C153887 * C1329 + C2823 * C330 +
              C3159 + C3159 + C153913 * C354 + C2821 * C329 + C3160 + C3160 +
              C153925 * C353) *
                 C74249) *
                C98459) *
               C153527 * C321 +
           (((C2821 * C330 + C3161 + C3161 + C153925 * C354 + C2823 * C1319 +
              C3162 + C3162 + C153913 * C1329 + C2825 * C3127 + C3163 + C3163 +
              C153887 * C3135) *
                 C74249 +
             (C3218 + C3219 + C3220) * C153464) *
                C98459 +
            ((C54246 + C54247 + C54248) * C74249 +
             (C102360 + C102361 + C102362) * C153464) *
                C153713) *
               C153527 * C322) *
              C323 +
          ((((C3217 + C3216 + C3215) * C74249 +
             (C3214 + C3213 + C3212) * C153464) *
                C98459 +
            ((C4352 + C4353 + C4354) * C74249 +
             (C4355 + C4356 + C4357) * C153464) *
                C153713) *
               C153527 * C321 -
           ((C4004 * C153464 + (C3529 + C3530 + C3531) * C74249) * C153713 +
            ((C2899 + C2898 + C2897) * C153464 +
             (C2896 + C2895 + C2894) * C74249) *
                C98459) *
               C153527 * C320 -
           (((C2825 * C5701 + C5711 + C5711 + C153887 * C5707 + C2823 * C4305 +
              C5712 + C5712 + C153913 * C4313 + C2821 * C1890 + C5713 + C5713 +
              C153925 * C1900) *
                 C153464 +
             (C102362 + C102361 + C102360) * C74249) *
                C153713 +
            ((C3223 + C3222 + C3221) * C153464 +
             (C3220 + C3219 + C3218) * C74249) *
                C98459) *
               C153527 * C322) *
              C153498)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153608 * C152) * C74249 +
            C193 * C153464) *
               C153933 +
           (C7734 * C74249 + C622 * C153464) * C153930 +
           (C7735 * C74249 + C623 * C153464) * C153921 +
           (C7738 * C74249 + C7737 * C153464) * C153867) *
              C153527 * C153511 * C130 -
          ((C7736 * C153464 + C7737 * C74249) * C153867 +
           (C624 * C153464 + C623 * C74249) * C153921 +
           (C621 * C153464 + C622 * C74249) * C153930 +
           (C194 * C153464 + C193 * C74249) * C153933) *
              C153527 * C153511 * C131 +
          ((C194 * C74249 + C195 * C153464) * C153933 +
           (C621 * C74249 + C620 * C153464) * C153930 +
           (C624 * C74249 + C625 * C153464) * C153921 +
           (C7736 * C74249 + C7741 * C153464) * C153867) *
              C153527 * C153511 * C132 -
          (((C134 * C2240 + C2256 + C2256 + C153608 * C2250) * C153464 +
            C7741 * C74249) *
               C153867 +
           (C626 * C153464 + C625 * C74249) * C153921 +
           (C619 * C153464 + C620 * C74249) * C153930 +
           (C196 * C153464 + C195 * C74249) * C153933) *
              C153527 * C153511 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C74249 +
             C193 * C153464) *
                C153933 +
            (C7734 * C74249 + C622 * C153464) * C153930 +
            (C7735 * C74249 + C623 * C153464) * C153921 +
            (C7738 * C74249 + C7737 * C153464) * C153867) *
               C153527 * C320 -
           ((C8524 * C153464 + C9136 * C74249) * C153867 +
            (C7451 * C153464 + C8523 * C74249) * C153921 +
            (C1098 * C153464 + C8522 * C74249) * C153930 +
            (C409 * C153464 +
             (C134 * C329 + C374 + C374 + C153608 * C353) * C74249) *
                C153933) *
               C153527 * C321 +
           (((C134 * C330 + C375 + C375 + C153608 * C354) * C74249 +
             C410 * C153464) *
                C153933 +
            (C9879 * C74249 + C7452 * C153464) * C153930 +
            (C9880 * C74249 + C7454 * C153464) * C153921 +
            (C57130 * C74249 + C63523 * C153464) * C153867) *
               C153527 * C322) *
              C323 +
          (((C409 * C74249 + C408 * C153464) * C153933 +
            (C1098 * C74249 + C1099 * C153464) * C153930 +
            (C7451 * C74249 + C7450 * C153464) * C153921 +
            (C8524 * C74249 + C8525 * C153464) * C153867) *
               C153527 * C321 -
           ((C7736 * C153464 + C7737 * C74249) * C153867 +
            (C624 * C153464 + C623 * C74249) * C153921 +
            (C621 * C153464 + C622 * C74249) * C153930 +
            (C194 * C153464 + C193 * C74249) * C153933) *
               C153527 * C320 -
           (((C134 * C6301 + C9872 + C9872 + C153608 * C6313) * C153464 +
             C63523 * C74249) *
                C153867 +
            (C7455 * C153464 + C7454 * C74249) * C153921 +
            (C7453 * C153464 + C7452 * C74249) * C153930 +
            (C411 * C153464 + C410 * C74249) * C153933) *
               C153527 * C322) *
              C153498)) /
            (p * q * std::sqrt(p + q));
    d2ee[260] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
              C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
              C153887 * C354) *
                 C74249 +
             (C2894 + C2895 + C2896) * C153464) *
                C98459 +
            ((C52092 + C52093 + C52094) * C74249 + C102656 * C153464) *
                C153713) *
               C153527 * C153908 -
           ((C103630 * C153464 + (C52877 + C52876 + C52875) * C74249) *
                C153713 +
            ((C3215 + C3216 + C3217) * C153464 +
             (C2825 * C1319 + C3158 + C3158 + C153887 * C1329 + C2823 * C330 +
              C3159 + C3159 + C153913 * C354 + C2821 * C329 + C3160 + C3160 +
              C153925 * C353) *
                 C74249) *
                C98459) *
               C153527 * C153909 +
           (((C2821 * C330 + C3161 + C3161 + C153925 * C354 + C2823 * C1319 +
              C3162 + C3162 + C153913 * C1329 + C2825 * C3127 + C3163 + C3163 +
              C153887 * C3135) *
                 C74249 +
             (C3218 + C3219 + C3220) * C153464) *
                C98459 +
            ((C54246 + C54247 + C54248) * C74249 +
             (C102360 + C102361 + C102362) * C153464) *
                C153713) *
               C153527 * C1601) *
              C153829 +
          ((((C3217 + C3216 + C3215) * C74249 +
             (C3214 + C3213 + C3212) * C153464) *
                C98459 +
            (C103629 * C74249 + (C4355 + C4356 + C4357) * C153464) * C153713) *
               C153527 * C153909 -
           ((C4004 * C153464 + C102657 * C74249) * C153713 +
            ((C2899 + C2898 + C2897) * C153464 +
             (C2896 + C2895 + C2894) * C74249) *
                C98459) *
               C153527 * C153908 -
           (((C2825 * C5701 + C5711 + C5711 + C153887 * C5707 + C2823 * C4305 +
              C5712 + C5712 + C153913 * C4313 + C2821 * C1890 + C5713 + C5713 +
              C153925 * C1900) *
                 C153464 +
             (C102362 + C102361 + C102360) * C74249) *
                C153713 +
            ((C3223 + C3222 + C3221) * C153464 +
             (C3220 + C3219 + C3218) * C74249) *
                C98459) *
               C153527 * C1601) *
              C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C153931 +
             C193 * C153924 + C194 * C153905 + C195 * C153852) *
                C98459 +
            (C98850 + C98851 + C98852 + C98853) * C153713) *
               C153527 * C153908 -
           ((C99519 + C99518 + C99517 + C99516) * C153713 +
            (C407 * C153852 + C408 * C153905 + C409 * C153924 +
             (C134 * C329 + C374 + C374 + C153608 * C353) * C153931) *
                C98459) *
               C153527 * C153909 +
           (((C134 * C330 + C375 + C375 + C153608 * C354) * C153931 +
             C410 * C153924 + C411 * C153905 + C412 * C153852) *
                C98459 +
            (C9879 * C153931 + C7452 * C153924 + C7453 * C153905 +
             C15373 * C153852) *
                C153713) *
               C153527 * C1601) *
              C153829 +
          (((C409 * C153931 + C408 * C153924 + C407 * C153905 +
             C406 * C153852) *
                C98459 +
            (C99520 + C99521 + C99522 + C99523) * C153713) *
               C153527 * C153909 -
           ((C98861 + C98860 + C98859 + C98858) * C153713 +
            (C196 * C153852 + C195 * C153905 + C194 * C153924 +
             C193 * C153931) *
                C98459) *
               C153527 * C153908 -
           (((C134 * C1888 + C1904 + C1904 + C153608 * C1898) * C153852 +
             C15373 * C153905 + C7453 * C153924 + C7452 * C153931) *
                C153713 +
            (C413 * C153852 + C412 * C153905 + C411 * C153924 +
             C410 * C153931) *
                C98459) *
               C153527 * C1601) *
              C153498)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C74249 +
             C193 * C153464) *
                C153933 +
            (C107636 + C107637) * C153930 + C107652 * C153921 +
            C107653 * C153867) *
               C153527 * C153908 -
           (C108840 * C153867 + C108841 * C153921 +
            (C108309 + C108308) * C153930 +
            (C409 * C153464 +
             (C134 * C329 + C374 + C374 + C153608 * C353) * C74249) *
                C153933) *
               C153527 * C153909 +
           (((C134 * C330 + C375 + C375 + C153608 * C354) * C74249 +
             C410 * C153464) *
                C153933 +
            (C9879 * C74249 + C7452 * C153464) * C153930 +
            (C9880 * C74249 + C7454 * C153464) * C153921 +
            (C57130 * C74249 + C63523 * C153464) * C153867) *
               C153527 * C1601) *
              C153829 +
          (((C409 * C74249 + C408 * C153464) * C153933 +
            (C108314 + C108315) * C153930 + (C108316 + C108317) * C153921 +
            (C108318 + C108319) * C153867) *
               C153527 * C153909 -
           (C107654 * C153867 + C107655 * C153921 +
            (C107645 + C107644) * C153930 +
            (C194 * C153464 + C193 * C74249) * C153933) *
               C153527 * C153908 -
           (((C134 * C6301 + C9872 + C9872 + C153608 * C6313) * C153464 +
             C63523 * C74249) *
                C153867 +
            (C7455 * C153464 + C7454 * C74249) * C153921 +
            (C7453 * C153464 + C7452 * C74249) * C153930 +
            (C411 * C153464 + C410 * C74249) * C153933) *
               C153527 * C1601) *
              C153498)) /
            (p * q * std::sqrt(p + q));
    d2ee[261] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
              C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
              C153887 * C354) *
                 C74249 +
             (C2894 + C2895 + C2896) * C153464) *
                C98459 +
            ((C52092 + C52093 + C52094) * C74249 + C102656 * C153464) *
                C153713) *
               C153838 -
           ((C52078 * C153464 + (C52097 + C52096 + C52095) * C74249) * C153713 +
            (C102657 * C153464 + (C52094 + C52093 + C52092) * C74249) *
                C98459) *
               C153591) *
              C153908 +
          ((((C52875 + C52876 + C52877) * C74249 + C103629 * C153464) * C98459 +
            ((C52878 + C52879 + C52880) * C74249 +
             (C52881 + C52882 + C52883) * C153464) *
                C153713) *
               C153591 -
           ((C103630 * C153464 + (C52877 + C52876 + C52875) * C74249) *
                C153713 +
            ((C3215 + C3216 + C3217) * C153464 +
             (C2825 * C1319 + C3158 + C3158 + C153887 * C1329 + C2823 * C330 +
              C3159 + C3159 + C153913 * C354 + C2821 * C329 + C3160 + C3160 +
              C153925 * C353) *
                 C74249) *
                C98459) *
               C153838) *
              C153909 +
          ((((C2821 * C330 + C3161 + C3161 + C153925 * C354 + C2823 * C1319 +
              C3162 + C3162 + C153913 * C1329 + C2825 * C3127 + C3163 + C3163 +
              C153887 * C3135) *
                 C74249 +
             (C3218 + C3219 + C3220) * C153464) *
                C98459 +
            ((C54246 + C54247 + C54248) * C74249 +
             (C102360 + C102361 + C102362) * C153464) *
                C153713) *
               C153838 -
           (((C2825 * C28651 + C51814 + C51814 + C153887 * C28655 +
              C2823 * C4958 + C51815 + C51815 + C153913 * C4964 +
              C2821 * C3442 + C51816 + C51816 + C153925 * C3450) *
                 C153464 +
             (C54251 + C54250 + C54249) * C74249) *
                C153713 +
            ((C102362 + C102361 + C102360) * C153464 +
             (C54248 + C54247 + C54246) * C74249) *
                C98459) *
               C153591) *
              C1601) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C153931 +
             C193 * C153924 + C194 * C153905 + C195 * C153852) *
                C98459 +
            (C98850 + C98851 + C98852 + C98853) * C153713) *
               C153838 -
           ((C98854 + C98855 + C98856 + C98857) * C153713 +
            (C98853 + C98852 + C98851 + C98850) * C98459) *
               C153591) *
              C153908 +
          (((C99516 + C99517 + C99518 + C99519) * C98459 +
            (C100042 + C100043 + C100044 + C100045) * C153713) *
               C153591 -
           ((C99519 + C99518 + C99517 + C99516) * C153713 +
            (C407 * C153852 + C408 * C153905 + C409 * C153924 +
             (C134 * C329 + C374 + C374 + C153608 * C353) * C153931) *
                C98459) *
               C153838) *
              C153909 +
          ((((C134 * C330 + C375 + C375 + C153608 * C354) * C153931 +
             C410 * C153924 + C411 * C153905 + C412 * C153852) *
                C98459 +
            (C100692 + C100693 + C100694 + C100695) * C153713) *
               C153838 -
           (((C134 * C3444 + C7437 + C7437 + C153608 * C3452) * C153852 +
             C7455 * C153905 + C7454 * C153924 + C9880 * C153931) *
                C153713 +
            (C100695 + C100694 + C100693 + C100692) * C98459) *
               C153591) *
              C1601) *
         C153492) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C74249 +
             C193 * C153464) *
                C153933 +
            (C107636 + C107637) * C153930 + C107652 * C153921 +
            C107653 * C153867) *
               C153838 -
           ((C107642 + C107643) * C153867 + (C107641 + C107640) * C153921 +
            (C107639 + C107638) * C153930 + (C107637 + C107636) * C153933) *
               C153591) *
              C153908 +
          (((C108308 + C108309) * C153933 + (C108310 + C108311) * C153930 +
            (C108312 + C108313) * C153921 + (C108838 + C108839) * C153867) *
               C153591 -
           (C108840 * C153867 + C108841 * C153921 +
            (C108309 + C108308) * C153930 +
            (C409 * C153464 +
             (C134 * C329 + C374 + C374 + C153608 * C353) * C74249) *
                C153933) *
               C153838) *
              C153909 +
          ((((C134 * C330 + C375 + C375 + C153608 * C354) * C74249 +
             C410 * C153464) *
                C153933 +
            (C109488 + C109489) * C153930 + (C109490 + C109491) * C153921 +
            (C109492 + C109493) * C153867) *
               C153838 -
           (((C134 * C31196 + C55791 + C55791 + C153608 * C31200) * C153464 +
             C57131 * C74249) *
                C153867 +
            (C109493 + C109492) * C153921 + (C109491 + C109490) * C153930 +
            (C109489 + C109488) * C153933) *
               C153591) *
              C1601) *
         C153492) /
            (p * q * std::sqrt(p + q));
    d2ee[262] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C134 * C136 + C161 + C161 + C153608 * C152) * C153931 +
                 C193 * C153924 + C194 * C153905 + C195 * C153852) *
                    C98459 +
                (C98850 + C98851 + C98852 + C98853) * C153713) *
                   C153527 * C1223 -
               ((C99519 + C99518 + C99517 + C99516) * C153713 +
                (C407 * C153852 + C408 * C153905 + C409 * C153924 +
                 (C134 * C329 + C374 + C374 + C153608 * C353) * C153931) *
                    C98459) *
                   C153527 * C153563) *
                  C1225 +
              (((C409 * C153931 + C408 * C153924 + C407 * C153905 +
                 C406 * C153852) *
                    C98459 +
                (C99520 + C99521 + C99522 + C99523) * C153713) *
                   C153527 * C153563 -
               ((C98861 + C98860 + C98859 + C98858) * C153713 +
                (C196 * C153852 + C195 * C153905 + C194 * C153924 +
                 C193 * C153931) *
                    C98459) *
                   C153527 * C1223) *
                  C1226 +
              (((C194 * C153931 + C195 * C153924 + C196 * C153905 +
                 C197 * C153852) *
                    C98459 +
                (C99254 + C99255 + C99256 + C99257) * C153713) *
                   C153527 * C1223 -
               (((C134 * C1062 + C1089 + C1089 + C153608 * C1074) * C153852 +
                 C1101 * C153905 + C1100 * C153924 + C1099 * C153931) *
                    C153713 +
                (C762 * C153852 + C406 * C153905 + C407 * C153924 +
                 C408 * C153931) *
                    C98459) *
                   C153527 * C153563) *
                  C1227) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C136 + C161 + C161 + C153608 * C152) * C153931 +
                C193 * C153924 + C194 * C153905 + C195 * C153852) *
                   C98459 +
               (C98850 + C98851 + C98852 + C98853) * C153713) *
                  C153527 * C1310 -
              ((C99519 + C99518 + C99517 + C99516) * C153713 +
               (C407 * C153852 + C408 * C153905 + C409 * C153924 +
                (C134 * C329 + C374 + C374 + C153608 * C353) * C153931) *
                   C98459) *
                  C153527 * C1311 +
              (((C134 * C330 + C375 + C375 + C153608 * C354) * C153931 +
                C410 * C153924 + C411 * C153905 + C412 * C153852) *
                   C98459 +
               (C9879 * C153931 + C7452 * C153924 + C7453 * C153905 +
                C15373 * C153852) *
                   C153713) *
                  C153527 * C1312 -
              (((C134 * C4306 + C16566 + C16566 + C153608 * C4314) * C153852 +
                (C134 * C4305 + C8895 + C8895 + C153608 * C4313) * C153905 +
                (C134 * C4304 + C8896 + C8896 + C153608 * C4312) * C153924 +
                (C134 * C4303 + C8897 + C8897 + C153608 * C4311) * C153931) *
                   C153713 +
               ((C134 * C1316 + C1332 + C1332 + C153608 * C1326) * C153852 +
                (C134 * C1317 + C1333 + C1333 + C153608 * C1327) * C153905 +
                (C134 * C1318 + C1334 + C1334 + C153608 * C1328) * C153924 +
                (C134 * C1319 + C1335 + C1335 + C153608 * C1329) * C153931) *
                   C98459) *
                  C153527 * C1313) *
             C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C153931 +
             C193 * C153924 + C194 * C153905 + C195 * C153852) *
                C98459 +
            (C98850 + C98851 + C98852 + C98853) * C153713) *
               C535 -
           ((C98854 + C98855 + C98856 + C98857) * C153713 +
            (C98853 + C98852 + C98851 + C98850) * C98459) *
               C536 +
           ((C98857 + C98856 + C98855 + C98854) * C98459 +
            (C7738 * C153931 + C7737 * C153924 + C7736 * C153905 +
             C7741 * C153852) *
                C153713) *
               C537) *
              C1223 +
          (((C99516 + C99517 + C99518 + C99519) * C98459 +
            (C100042 + C100043 + C100044 + C100045) * C153713) *
               C536 -
           ((C99519 + C99518 + C99517 + C99516) * C153713 +
            (C407 * C153852 + C408 * C153905 + C409 * C153924 +
             (C134 * C329 + C374 + C374 + C153608 * C353) * C153931) *
                C98459) *
               C535 -
           (((C134 * C8488 + C8513 + C8513 + C153608 * C8490) * C153852 +
             C8525 * C153905 + C8524 * C153924 + C9136 * C153931) *
                C153713 +
            (C100045 + C100044 + C100043 + C100042) * C98459) *
               C537) *
              C153563) *
         C153492) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
              C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
              C153887 * C354) *
                 C74249 +
             (C2894 + C2895 + C2896) * C153464) *
                C98459 +
            ((C52092 + C52093 + C52094) * C74249 + C102656 * C153464) *
                C153713) *
               C153527 * C1223 -
           ((C103630 * C153464 + (C52877 + C52876 + C52875) * C74249) *
                C153713 +
            ((C3215 + C3216 + C3217) * C153464 +
             (C2825 * C1319 + C3158 + C3158 + C153887 * C1329 + C2823 * C330 +
              C3159 + C3159 + C153913 * C354 + C2821 * C329 + C3160 + C3160 +
              C153925 * C353) *
                 C74249) *
                C98459) *
               C153527 * C153563) *
              C1225 +
          ((((C3217 + C3216 + C3215) * C74249 +
             (C3214 + C3213 + C3212) * C153464) *
                C98459 +
            (C103629 * C74249 + (C4355 + C4356 + C4357) * C153464) * C153713) *
               C153527 * C153563 -
           ((C4004 * C153464 + C102657 * C74249) * C153713 +
            ((C2899 + C2898 + C2897) * C153464 +
             (C2896 + C2895 + C2894) * C74249) *
                C98459) *
               C153527 * C1223) *
              C1226 +
          (((C2908 * C74249 + (C2902 + C2901 + C2900) * C153464) * C98459 +
            (C103240 * C74249 + (C4011 + C4012 + C4013) * C153464) * C153713) *
               C153527 * C1223 -
           (((C2825 * C4306 + C4337 + C4337 + C153887 * C4314 + C2823 * C1889 +
              C4338 + C4338 + C153913 * C1899 + C2821 * C1060 + C4339 + C4339 +
              C153925 * C1072) *
                 C153464 +
             (C4357 + C4356 + C4355) * C74249) *
                C153713 +
            ((C3775 + C3774 + C3773) * C153464 + C3766 * C74249) * C98459) *
               C153527 * C153563) *
              C1227)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
             C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
             C153887 * C354) *
                C74249 +
            (C2894 + C2895 + C2896) * C153464) *
               C98459 +
           ((C52092 + C52093 + C52094) * C74249 + C102656 * C153464) *
               C153713) *
              C153527 * C1310 -
          ((C103630 * C153464 + (C52877 + C52876 + C52875) * C74249) * C153713 +
           ((C3215 + C3216 + C3217) * C153464 +
            (C2825 * C1319 + C3158 + C3158 + C153887 * C1329 + C2823 * C330 +
             C3159 + C3159 + C153913 * C354 + C2821 * C329 + C3160 + C3160 +
             C153925 * C353) *
                C74249) *
               C98459) *
              C153527 * C1311 +
          (((C2821 * C330 + C3161 + C3161 + C153925 * C354 + C2823 * C1319 +
             C3162 + C3162 + C153913 * C1329 + C2825 * C3127 + C3163 + C3163 +
             C153887 * C3135) *
                C74249 +
            (C3218 + C3219 + C3220) * C153464) *
               C98459 +
           ((C54246 + C54247 + C54248) * C74249 +
            (C102360 + C102361 + C102362) * C153464) *
               C153713) *
              C153527 * C1312 -
          (((C2825 * C29093 + C104115 + C104115 + C153887 * C29097 +
             C2823 * C5702 + C104116 + C104116 + C153913 * C5708 +
             C2821 * C4304 + C104117 + C104117 + C153925 * C4312) *
                C153464 +
            (C2825 * C29092 + C53251 + C53251 + C153887 * C29096 +
             C2823 * C5703 + C53252 + C53252 + C153913 * C5709 + C2821 * C4303 +
             C53253 + C53253 + C153925 * C4311) *
                C74249) *
               C153713 +
           ((C2825 * C4722 + C4734 + C4734 + C153887 * C4728 + C2823 * C3128 +
             C4735 + C4735 + C153913 * C3136 + C2821 * C1318 + C4736 + C4736 +
             C153925 * C1328) *
                C153464 +
            (C2825 * C4723 + C4737 + C4737 + C153887 * C4729 + C2823 * C3127 +
             C4738 + C4738 + C153913 * C3135 + C2821 * C1319 + C4739 + C4739 +
             C153925 * C1329) *
                C74249) *
               C98459) *
              C153527 * C1313) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
              C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
              C153887 * C354) *
                 C74249 +
             (C2894 + C2895 + C2896) * C153464) *
                C98459 +
            ((C52092 + C52093 + C52094) * C74249 + C102656 * C153464) *
                C153713) *
               C535 -
           ((C52078 * C153464 + (C52097 + C52096 + C52095) * C74249) * C153713 +
            (C102657 * C153464 + (C52094 + C52093 + C52092) * C74249) *
                C98459) *
               C536 +
           ((C52105 * C74249 + C102658 * C153464) * C98459 +
            ((C52100 + C52099 + C52098) * C74249 +
             (C52101 + C52102 + C52103) * C153464) *
                C153713) *
               C537) *
              C1223 +
          ((((C52875 + C52876 + C52877) * C74249 + C103629 * C153464) * C98459 +
            ((C52878 + C52879 + C52880) * C74249 +
             (C52881 + C52882 + C52883) * C153464) *
                C153713) *
               C536 -
           ((C103630 * C153464 + (C52877 + C52876 + C52875) * C74249) *
                C153713 +
            ((C3215 + C3216 + C3217) * C153464 +
             (C2825 * C1319 + C3158 + C3158 + C153887 * C1329 + C2823 * C330 +
              C3159 + C3159 + C153913 * C354 + C2821 * C329 + C3160 + C3160 +
              C153925 * C353) *
                 C74249) *
                C98459) *
               C535 -
           (((C2825 * C31999 + C52854 + C52854 + C153887 * C32001 +
              C2823 * C6303 + C52855 + C52855 + C153913 * C6315 +
              C2821 * C6304 + C52856 + C52856 + C153925 * C6316) *
                 C153464 +
             (C53492 + C53491 + C53490) * C74249) *
                C153713 +
            ((C52883 + C52882 + C52881) * C153464 + C53485 * C74249) * C98459) *
               C537) *
              C153563) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C74249 +
             C193 * C153464) *
                C153933 +
            (C107636 + C107637) * C153930 + C107652 * C153921 +
            C107653 * C153867) *
               C153527 * C1223 -
           ((C108313 + C108312) * C153867 + (C108311 + C108310) * C153921 +
            (C108309 + C108308) * C153930 +
            (C409 * C153464 +
             (C134 * C329 + C374 + C374 + C153608 * C353) * C74249) *
                C153933) *
               C153527 * C153563) *
              C1225 +
          (((C409 * C74249 + C408 * C153464) * C153933 +
            (C108314 + C108315) * C153930 + (C108316 + C108317) * C153921 +
            (C108318 + C108319) * C153867) *
               C153527 * C153563 -
           (C107654 * C153867 + C107655 * C153921 +
            (C107645 + C107644) * C153930 +
            (C194 * C153464 + C193 * C74249) * C153933) *
               C153527 * C1223) *
              C1226 +
          (((C194 * C74249 + C195 * C153464) * C153933 +
            (C108044 + C108045) * C153930 + (C108046 + C108047) * C153921 +
            (C108048 + C108049) * C153867) *
               C153527 * C1223 -
           (((C134 * C8488 + C8513 + C8513 + C153608 * C8490) * C153464 +
             C8525 * C74249) *
                C153867 +
            (C7974 * C153464 + C7450 * C74249) * C153921 +
            (C1100 * C153464 + C1099 * C74249) * C153930 +
            (C407 * C153464 + C408 * C74249) * C153933) *
               C153527 * C153563) *
              C1227)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153608 * C152) * C74249 +
            C193 * C153464) *
               C153933 +
           (C107636 + C107637) * C153930 + C107652 * C153921 +
           C107653 * C153867) *
              C153527 * C1310 -
          ((C108313 + C108312) * C153867 + (C108311 + C108310) * C153921 +
           (C108309 + C108308) * C153930 +
           (C409 * C153464 +
            (C134 * C329 + C374 + C374 + C153608 * C353) * C74249) *
               C153933) *
              C153527 * C1311 +
          (((C134 * C330 + C375 + C375 + C153608 * C354) * C74249 +
            C410 * C153464) *
               C153933 +
           (C9879 * C74249 + C7452 * C153464) * C153930 +
           (C9880 * C74249 + C7454 * C153464) * C153921 +
           (C57130 * C74249 + C63523 * C153464) * C153867) *
              C153527 * C1312 -
          (((C134 * C31999 + C64726 + C64726 + C153608 * C32001) * C153464 +
            (C134 * C30191 + C56580 + C56580 + C153608 * C30195) * C74249) *
               C153867 +
           ((C134 * C4958 + C8893 + C8893 + C153608 * C4964) * C153464 +
            (C134 * C4959 + C8894 + C8894 + C153608 * C4965) * C74249) *
               C153921 +
           ((C134 * C4304 + C8896 + C8896 + C153608 * C4312) * C153464 +
            (C134 * C4303 + C8897 + C8897 + C153608 * C4311) * C74249) *
               C153930 +
           ((C134 * C1318 + C1334 + C1334 + C153608 * C1328) * C153464 +
            (C134 * C1319 + C1335 + C1335 + C153608 * C1329) * C74249) *
               C153933) *
              C153527 * C1313) *
         C153492) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C74249 +
             C193 * C153464) *
                C153933 +
            (C107636 + C107637) * C153930 + C107652 * C153921 +
            C107653 * C153867) *
               C535 -
           ((C107642 + C107643) * C153867 + (C107641 + C107640) * C153921 +
            (C107639 + C107638) * C153930 + (C107637 + C107636) * C153933) *
               C536 +
           (C107652 * C153933 + C107653 * C153930 +
            (C107643 + C107642) * C153921 +
            (C55938 * C74249 + C55939 * C153464) * C153867) *
               C537) *
              C1223 +
          (((C108308 + C108309) * C153933 + (C108310 + C108311) * C153930 +
            (C108312 + C108313) * C153921 + (C108838 + C108839) * C153867) *
               C536 -
           (C108840 * C153867 + C108841 * C153921 +
            (C108309 + C108308) * C153930 +
            (C409 * C153464 +
             (C134 * C329 + C374 + C374 + C153608 * C353) * C74249) *
                C153933) *
               C535 -
           (((C134 * C56351 + C56366 + C56366 + C153608 * C56353) * C153464 +
             C56711 * C74249) *
                C153867 +
            (C108839 + C108838) * C153921 + C108840 * C153930 +
            C108841 * C153933) *
               C537) *
              C153563) *
         C153492) /
            (p * q * std::sqrt(p + q));
    d2ee[263] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
               C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
               C153887 * C354) *
                  C74249 +
              (C2894 + C2895 + C2896) * C153464) *
                 C98459 +
             ((C52092 + C52093 + C52094) * C74249 + C102656 * C153464) *
                 C153713) *
                C153838 -
            ((C52078 * C153464 + (C52097 + C52096 + C52095) * C74249) *
                 C153713 +
             (C102657 * C153464 + (C52094 + C52093 + C52092) * C74249) *
                 C98459) *
                C153591) *
               C1223 +
           ((((C52875 + C52876 + C52877) * C74249 + C103629 * C153464) *
                 C98459 +
             ((C52878 + C52879 + C52880) * C74249 +
              (C52881 + C52882 + C52883) * C153464) *
                 C153713) *
                C153591 -
            ((C103630 * C153464 + (C52877 + C52876 + C52875) * C74249) *
                 C153713 +
             ((C3215 + C3216 + C3217) * C153464 +
              (C2825 * C1319 + C3158 + C3158 + C153887 * C1329 + C2823 * C330 +
               C3159 + C3159 + C153913 * C354 + C2821 * C329 + C3160 + C3160 +
               C153925 * C353) *
                  C74249) *
                 C98459) *
                C153838) *
               C153563) *
              C153829 +
          ((((C102656 * C74249 + C103240 * C153464) * C98459 +
             (C102658 * C74249 + (C3535 + C3536 + C3537) * C153464) * C153713) *
                C153591 -
            ((C4004 * C153464 + C102657 * C74249) * C153713 +
             ((C2899 + C2898 + C2897) * C153464 +
              (C2896 + C2895 + C2894) * C74249) *
                 C98459) *
                C153838) *
               C1223 +
           ((((C3217 + C3216 + C3215) * C74249 +
              (C3214 + C3213 + C3212) * C153464) *
                 C98459 +
             (C103629 * C74249 + (C4355 + C4356 + C4357) * C153464) * C153713) *
                C153838 -
            (((C2825 * C4957 + C4967 + C4967 + C153887 * C4963 + C2823 * C3443 +
               C4968 + C4968 + C153913 * C3451 + C2821 * C1459 + C4969 + C4969 +
               C153925 * C1469) *
                  C153464 +
              (C52883 + C52882 + C52881) * C74249) *
                 C153713 +
             ((C4357 + C4356 + C4355) * C153464 + C103630 * C74249) * C98459) *
                C153591) *
               C153563) *
              C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C153608 * C152) * C153931 +
              C193 * C153924 + C194 * C153905 + C195 * C153852) *
                 C98459 +
             (C98850 + C98851 + C98852 + C98853) * C153713) *
                C153838 -
            ((C98854 + C98855 + C98856 + C98857) * C153713 +
             (C98853 + C98852 + C98851 + C98850) * C98459) *
                C153591) *
               C1223 +
           (((C99516 + C99517 + C99518 + C99519) * C98459 +
             (C100042 + C100043 + C100044 + C100045) * C153713) *
                C153591 -
            ((C99519 + C99518 + C99517 + C99516) * C153713 +
             (C407 * C153852 + C408 * C153905 + C409 * C153924 +
              (C134 * C329 + C374 + C374 + C153608 * C353) * C153931) *
                 C98459) *
                C153838) *
               C153563) *
              C153829 +
          ((((C98858 + C98859 + C98860 + C98861) * C98459 +
             (C98862 + C98863 + C98864 + C98865) * C153713) *
                C153591 -
            ((C98861 + C98860 + C98859 + C98858) * C153713 +
             (C196 * C153852 + C195 * C153905 + C194 * C153924 +
              C193 * C153931) *
                 C98459) *
                C153838) *
               C1223 +
           (((C409 * C153931 + C408 * C153924 + C407 * C153905 +
              C406 * C153852) *
                 C98459 +
             (C99520 + C99521 + C99522 + C99523) * C153713) *
                C153838 -
            (((C134 * C1457 + C1473 + C1473 + C153608 * C1467) * C153852 +
              C7974 * C153905 + C7450 * C153924 + C7451 * C153931) *
                 C153713 +
             (C99523 + C99522 + C99521 + C99520) * C98459) *
                C153591) *
               C153563) *
              C153498)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C153608 * C152) * C74249 +
              C193 * C153464) *
                 C153933 +
             (C107636 + C107637) * C153930 + C107652 * C153921 +
             C107653 * C153867) *
                C153838 -
            ((C107642 + C107643) * C153867 + (C107641 + C107640) * C153921 +
             (C107639 + C107638) * C153930 + (C107637 + C107636) * C153933) *
                C153591) *
               C1223 +
           (((C108308 + C108309) * C153933 + (C108310 + C108311) * C153930 +
             (C108312 + C108313) * C153921 + (C108838 + C108839) * C153867) *
                C153591 -
            (C108840 * C153867 + C108841 * C153921 +
             (C108309 + C108308) * C153930 +
             (C409 * C153464 +
              (C134 * C329 + C374 + C374 + C153608 * C353) * C74249) *
                 C153933) *
                C153838) *
               C153563) *
              C153829 +
          ((((C107644 + C107645) * C153933 + (C107646 + C107647) * C153930 +
             (C107648 + C107649) * C153921 + (C107650 + C107651) * C153867) *
                C153591 -
            (C107654 * C153867 + C107655 * C153921 +
             (C107645 + C107644) * C153930 +
             (C194 * C153464 + C193 * C74249) * C153933) *
                C153838) *
               C1223 +
           (((C409 * C74249 + C408 * C153464) * C153933 +
             (C108314 + C108315) * C153930 + (C108316 + C108317) * C153921 +
             (C108318 + C108319) * C153867) *
                C153838 -
            (((C134 * C9115 + C9130 + C9130 + C153608 * C9121) * C153464 +
              C56372 * C74249) *
                 C153867 +
             (C108319 + C108318) * C153921 + (C108317 + C108316) * C153930 +
             (C108315 + C108314) * C153933) *
                C153591) *
               C153563) *
              C153498)) /
            (p * q * std::sqrt(p + q));
    d2ee[264] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153608 * C152) * C153931 +
            C193 * C153924 + C194 * C153905 + C195 * C153852) *
               C98459 +
           (C98850 + C98851 + C98852 + C98853) * C153713) *
              C153527 * C1310 -
          ((C99519 + C99518 + C99517 + C99516) * C153713 +
           (C407 * C153852 + C408 * C153905 + C409 * C153924 +
            (C134 * C329 + C374 + C374 + C153608 * C353) * C153931) *
               C98459) *
              C153527 * C1311 +
          (((C134 * C330 + C375 + C375 + C153608 * C354) * C153931 +
            C410 * C153924 + C411 * C153905 + C412 * C153852) *
               C98459 +
           (C9879 * C153931 + C7452 * C153924 + C7453 * C153905 +
            C15373 * C153852) *
               C153713) *
              C153527 * C1312 -
          (((C134 * C4306 + C16566 + C16566 + C153608 * C4314) * C153852 +
            (C134 * C4305 + C8895 + C8895 + C153608 * C4313) * C153905 +
            (C134 * C4304 + C8896 + C8896 + C153608 * C4312) * C153924 +
            (C134 * C4303 + C8897 + C8897 + C153608 * C4311) * C153931) *
               C153713 +
           ((C134 * C1316 + C1332 + C1332 + C153608 * C1326) * C153852 +
            (C134 * C1317 + C1333 + C1333 + C153608 * C1327) * C153905 +
            (C134 * C1318 + C1334 + C1334 + C153608 * C1328) * C153924 +
            (C134 * C1319 + C1335 + C1335 + C153608 * C1329) * C153931) *
               C98459) *
              C153527 * C1313) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C153931 +
             C193 * C153924 + C194 * C153905 + C195 * C153852) *
                C98459 +
            (C98850 + C98851 + C98852 + C98853) * C153713) *
               C153527 * C1223 -
           ((C99519 + C99518 + C99517 + C99516) * C153713 +
            (C407 * C153852 + C408 * C153905 + C409 * C153924 +
             (C134 * C329 + C374 + C374 + C153608 * C353) * C153931) *
                C98459) *
               C153527 * C153563) *
              C1225 +
          (((C409 * C153931 + C408 * C153924 + C407 * C153905 +
             C406 * C153852) *
                C98459 +
            (C99520 + C99521 + C99522 + C99523) * C153713) *
               C153527 * C153563 -
           ((C98861 + C98860 + C98859 + C98858) * C153713 +
            (C196 * C153852 + C195 * C153905 + C194 * C153924 +
             C193 * C153931) *
                C98459) *
               C153527 * C1223) *
              C1226 +
          (((C194 * C153931 + C195 * C153924 + C196 * C153905 +
             C197 * C153852) *
                C98459 +
            (C99254 + C99255 + C99256 + C99257) * C153713) *
               C153527 * C1223 -
           (((C134 * C1062 + C1089 + C1089 + C153608 * C1074) * C153852 +
             C1101 * C153905 + C1100 * C153924 + C1099 * C153931) *
                C153713 +
            (C762 * C153852 + C406 * C153905 + C407 * C153924 +
             C408 * C153931) *
                C98459) *
               C153527 * C153563) *
              C1227)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
              C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
              C153887 * C354) *
                 C74249 +
             (C2894 + C2895 + C2896) * C153464) *
                C98459 +
            ((C52092 + C52093 + C52094) * C74249 + C102656 * C153464) *
                C153713) *
               C153527 * C1223 -
           ((C103630 * C153464 + (C52877 + C52876 + C52875) * C74249) *
                C153713 +
            ((C3215 + C3216 + C3217) * C153464 +
             (C2825 * C1319 + C3158 + C3158 + C153887 * C1329 + C2823 * C330 +
              C3159 + C3159 + C153913 * C354 + C2821 * C329 + C3160 + C3160 +
              C153925 * C353) *
                 C74249) *
                C98459) *
               C153527 * C153563) *
              C1225 +
          ((((C3217 + C3216 + C3215) * C74249 +
             (C3214 + C3213 + C3212) * C153464) *
                C98459 +
            (C103629 * C74249 + (C4355 + C4356 + C4357) * C153464) * C153713) *
               C153527 * C153563 -
           ((C4004 * C153464 + C102657 * C74249) * C153713 +
            ((C2899 + C2898 + C2897) * C153464 +
             (C2896 + C2895 + C2894) * C74249) *
                C98459) *
               C153527 * C1223) *
              C1226 +
          (((C2908 * C74249 + (C2902 + C2901 + C2900) * C153464) * C98459 +
            (C103240 * C74249 + (C4011 + C4012 + C4013) * C153464) * C153713) *
               C153527 * C1223 -
           (((C2825 * C4306 + C4337 + C4337 + C153887 * C4314 + C2823 * C1889 +
              C4338 + C4338 + C153913 * C1899 + C2821 * C1060 + C4339 + C4339 +
              C153925 * C1072) *
                 C153464 +
             (C4357 + C4356 + C4355) * C74249) *
                C153713 +
            ((C3775 + C3774 + C3773) * C153464 + C3766 * C74249) * C98459) *
               C153527 * C153563) *
              C1227)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
             C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
             C153887 * C354) *
                C74249 +
            (C2894 + C2895 + C2896) * C153464) *
               C98459 +
           ((C52092 + C52093 + C52094) * C74249 + C102656 * C153464) *
               C153713) *
              C153527 * C1310 -
          ((C103630 * C153464 + (C52877 + C52876 + C52875) * C74249) * C153713 +
           ((C3215 + C3216 + C3217) * C153464 +
            (C2825 * C1319 + C3158 + C3158 + C153887 * C1329 + C2823 * C330 +
             C3159 + C3159 + C153913 * C354 + C2821 * C329 + C3160 + C3160 +
             C153925 * C353) *
                C74249) *
               C98459) *
              C153527 * C1311 +
          (((C2821 * C330 + C3161 + C3161 + C153925 * C354 + C2823 * C1319 +
             C3162 + C3162 + C153913 * C1329 + C2825 * C3127 + C3163 + C3163 +
             C153887 * C3135) *
                C74249 +
            (C3218 + C3219 + C3220) * C153464) *
               C98459 +
           ((C54246 + C54247 + C54248) * C74249 +
            (C102360 + C102361 + C102362) * C153464) *
               C153713) *
              C153527 * C1312 -
          (((C2825 * C29093 + C104115 + C104115 + C153887 * C29097 +
             C2823 * C5702 + C104116 + C104116 + C153913 * C5708 +
             C2821 * C4304 + C104117 + C104117 + C153925 * C4312) *
                C153464 +
            (C2825 * C29092 + C53251 + C53251 + C153887 * C29096 +
             C2823 * C5703 + C53252 + C53252 + C153913 * C5709 + C2821 * C4303 +
             C53253 + C53253 + C153925 * C4311) *
                C74249) *
               C153713 +
           ((C2825 * C4722 + C4734 + C4734 + C153887 * C4728 + C2823 * C3128 +
             C4735 + C4735 + C153913 * C3136 + C2821 * C1318 + C4736 + C4736 +
             C153925 * C1328) *
                C153464 +
            (C2825 * C4723 + C4737 + C4737 + C153887 * C4729 + C2823 * C3127 +
             C4738 + C4738 + C153913 * C3135 + C2821 * C1319 + C4739 + C4739 +
             C153925 * C1329) *
                C74249) *
               C98459) *
              C153527 * C1313) *
         C153492) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C74249 +
             C193 * C153464) *
                C153933 +
            (C107636 + C107637) * C153930 + C107652 * C153921 +
            C107653 * C153867) *
               C153527 * C1223 -
           ((C108313 + C108312) * C153867 + (C108311 + C108310) * C153921 +
            (C108309 + C108308) * C153930 +
            (C409 * C153464 +
             (C134 * C329 + C374 + C374 + C153608 * C353) * C74249) *
                C153933) *
               C153527 * C153563) *
              C1225 +
          (((C409 * C74249 + C408 * C153464) * C153933 +
            (C108314 + C108315) * C153930 + (C108316 + C108317) * C153921 +
            (C108318 + C108319) * C153867) *
               C153527 * C153563 -
           (C107654 * C153867 + C107655 * C153921 +
            (C107645 + C107644) * C153930 +
            (C194 * C153464 + C193 * C74249) * C153933) *
               C153527 * C1223) *
              C1226 +
          (((C194 * C74249 + C195 * C153464) * C153933 +
            (C108044 + C108045) * C153930 + (C108046 + C108047) * C153921 +
            (C108048 + C108049) * C153867) *
               C153527 * C1223 -
           (((C134 * C8488 + C8513 + C8513 + C153608 * C8490) * C153464 +
             C8525 * C74249) *
                C153867 +
            (C7974 * C153464 + C7450 * C74249) * C153921 +
            (C1100 * C153464 + C1099 * C74249) * C153930 +
            (C407 * C153464 + C408 * C74249) * C153933) *
               C153527 * C153563) *
              C1227)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153608 * C152) * C74249 +
            C193 * C153464) *
               C153933 +
           (C107636 + C107637) * C153930 + C107652 * C153921 +
           C107653 * C153867) *
              C153527 * C1310 -
          ((C108313 + C108312) * C153867 + (C108311 + C108310) * C153921 +
           (C108309 + C108308) * C153930 +
           (C409 * C153464 +
            (C134 * C329 + C374 + C374 + C153608 * C353) * C74249) *
               C153933) *
              C153527 * C1311 +
          (((C134 * C330 + C375 + C375 + C153608 * C354) * C74249 +
            C410 * C153464) *
               C153933 +
           (C9879 * C74249 + C7452 * C153464) * C153930 +
           (C9880 * C74249 + C7454 * C153464) * C153921 +
           (C57130 * C74249 + C63523 * C153464) * C153867) *
              C153527 * C1312 -
          (((C134 * C31999 + C64726 + C64726 + C153608 * C32001) * C153464 +
            (C134 * C30191 + C56580 + C56580 + C153608 * C30195) * C74249) *
               C153867 +
           ((C134 * C4958 + C8893 + C8893 + C153608 * C4964) * C153464 +
            (C134 * C4959 + C8894 + C8894 + C153608 * C4965) * C74249) *
               C153921 +
           ((C134 * C4304 + C8896 + C8896 + C153608 * C4312) * C153464 +
            (C134 * C4303 + C8897 + C8897 + C153608 * C4311) * C74249) *
               C153930 +
           ((C134 * C1318 + C1334 + C1334 + C153608 * C1328) * C153464 +
            (C134 * C1319 + C1335 + C1335 + C153608 * C1329) * C74249) *
               C153933) *
              C153527 * C1313) *
         C153492) /
            (p * q * std::sqrt(p + q));
    d2ee[265] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
               C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
               C153887 * C354) *
                  C74249 +
              (C2894 + C2895 + C2896) * C153464) *
                 C98459 +
             ((C52092 + C52093 + C52094) * C74249 + C102656 * C153464) *
                 C153713) *
                C2030 -
            ((C52078 * C153464 + (C52097 + C52096 + C52095) * C74249) *
                 C153713 +
             (C102657 * C153464 + (C52094 + C52093 + C52092) * C74249) *
                 C98459) *
                C153591) *
               C153837 +
           ((((C52875 + C52876 + C52877) * C74249 + C103629 * C153464) *
                 C98459 +
             ((C52878 + C52879 + C52880) * C74249 +
              (C52881 + C52882 + C52883) * C153464) *
                 C153713) *
                C153591 -
            ((C103630 * C153464 + (C52877 + C52876 + C52875) * C74249) *
                 C153713 +
             ((C3215 + C3216 + C3217) * C153464 +
              (C2825 * C1319 + C3158 + C3158 + C153887 * C1329 + C2823 * C330 +
               C3159 + C3159 + C153913 * C354 + C2821 * C329 + C3160 + C3160 +
               C153925 * C353) *
                  C74249) *
                 C98459) *
                C2030) *
               C153563) *
              C153829 +
          ((((C102656 * C74249 + C103240 * C153464) * C98459 +
             (C102658 * C74249 + (C3535 + C3536 + C3537) * C153464) * C153713) *
                C153591 -
            ((C4004 * C153464 + C102657 * C74249) * C153713 +
             ((C2899 + C2898 + C2897) * C153464 +
              (C2896 + C2895 + C2894) * C74249) *
                 C98459) *
                C2030) *
               C153837 +
           ((((C3217 + C3216 + C3215) * C74249 +
              (C3214 + C3213 + C3212) * C153464) *
                 C98459 +
             (C103629 * C74249 + (C4355 + C4356 + C4357) * C153464) * C153713) *
                C2030 -
            (((C2825 * C4957 + C4967 + C4967 + C153887 * C4963 + C2823 * C3443 +
               C4968 + C4968 + C153913 * C3451 + C2821 * C1459 + C4969 + C4969 +
               C153925 * C1469) *
                  C153464 +
              (C52883 + C52882 + C52881) * C74249) *
                 C153713 +
             ((C4357 + C4356 + C4355) * C153464 + C103630 * C74249) * C98459) *
                C153591) *
               C153563) *
              C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C153608 * C152) * C153931 +
              C193 * C153924 + C194 * C153905 + C195 * C153852) *
                 C98459 +
             (C98850 + C98851 + C98852 + C98853) * C153713) *
                C2030 -
            ((C98854 + C98855 + C98856 + C98857) * C153713 +
             (C98853 + C98852 + C98851 + C98850) * C98459) *
                C153591) *
               C153837 +
           (((C99516 + C99517 + C99518 + C99519) * C98459 +
             (C100042 + C100043 + C100044 + C100045) * C153713) *
                C153591 -
            ((C99519 + C99518 + C99517 + C99516) * C153713 +
             (C407 * C153852 + C408 * C153905 + C409 * C153924 +
              (C134 * C329 + C374 + C374 + C153608 * C353) * C153931) *
                 C98459) *
                C2030) *
               C153563) *
              C153829 +
          ((((C98858 + C98859 + C98860 + C98861) * C98459 +
             (C98862 + C98863 + C98864 + C98865) * C153713) *
                C153591 -
            ((C98861 + C98860 + C98859 + C98858) * C153713 +
             (C196 * C153852 + C195 * C153905 + C194 * C153924 +
              C193 * C153931) *
                 C98459) *
                C2030) *
               C153837 +
           (((C409 * C153931 + C408 * C153924 + C407 * C153905 +
              C406 * C153852) *
                 C98459 +
             (C99520 + C99521 + C99522 + C99523) * C153713) *
                C2030 -
            (((C134 * C1457 + C1473 + C1473 + C153608 * C1467) * C153852 +
              C7974 * C153905 + C7450 * C153924 + C7451 * C153931) *
                 C153713 +
             (C99523 + C99522 + C99521 + C99520) * C98459) *
                C153591) *
               C153563) *
              C153498)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C153608 * C152) * C74249 +
              C193 * C153464) *
                 C153933 +
             (C107636 + C107637) * C153930 + C107652 * C153921 +
             C107653 * C153867) *
                C2030 -
            (C110012 * C153867 + C110013 * C153921 +
             (C107639 + C107638) * C153930 + (C107637 + C107636) * C153933) *
                C153591) *
               C153837 +
           (((C108308 + C108309) * C153933 + (C108310 + C108311) * C153930 +
             (C108312 + C108313) * C153921 + (C108838 + C108839) * C153867) *
                C153591 -
            (C108840 * C153867 + C108841 * C153921 +
             (C108309 + C108308) * C153930 +
             (C409 * C153464 +
              (C134 * C329 + C374 + C374 + C153608 * C353) * C74249) *
                 C153933) *
                C2030) *
               C153563) *
              C153829 +
          ((((C107644 + C107645) * C153933 + (C107646 + C107647) * C153930 +
             (C107648 + C107649) * C153921 + (C107650 + C107651) * C153867) *
                C153591 -
            (C107654 * C153867 + C107655 * C153921 +
             (C107645 + C107644) * C153930 +
             (C194 * C153464 + C193 * C74249) * C153933) *
                C2030) *
               C153837 +
           (((C409 * C74249 + C408 * C153464) * C153933 +
             (C108314 + C108315) * C153930 + (C108316 + C108317) * C153921 +
             (C108318 + C108319) * C153867) *
                C2030 -
            (((C134 * C9115 + C9130 + C9130 + C153608 * C9121) * C153464 +
              C56372 * C74249) *
                 C153867 +
             (C108319 + C108318) * C153921 + (C108317 + C108316) * C153930 +
             (C108315 + C108314) * C153933) *
                C153591) *
               C153563) *
              C153498)) /
            (p * q * std::sqrt(p + q));
    d2ee[266] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
              C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
              C153887 * C354) *
                 C74249 +
             (C2894 + C2895 + C2896) * C153464) *
                C98459 +
            ((C52092 + C52093 + C52094) * C74249 + C102656 * C153464) *
                C153713) *
               C153910 -
           ((C52078 * C153464 + (C52097 + C52096 + C52095) * C74249) * C153713 +
            (C102657 * C153464 + (C52094 + C52093 + C52092) * C74249) *
                C98459) *
               C153911 +
           ((C52105 * C74249 + C102658 * C153464) * C98459 +
            ((C52100 + C52099 + C52098) * C74249 +
             (C52101 + C52102 + C52103) * C153464) *
                C153713) *
               C2546) *
              C153837 +
          ((((C52875 + C52876 + C52877) * C74249 + C103629 * C153464) * C98459 +
            ((C52878 + C52879 + C52880) * C74249 +
             (C52881 + C52882 + C52883) * C153464) *
                C153713) *
               C153911 -
           ((C103630 * C153464 + (C52877 + C52876 + C52875) * C74249) *
                C153713 +
            ((C3215 + C3216 + C3217) * C153464 +
             (C2825 * C1319 + C3158 + C3158 + C153887 * C1329 + C2823 * C330 +
              C3159 + C3159 + C153913 * C354 + C2821 * C329 + C3160 + C3160 +
              C153925 * C353) *
                 C74249) *
                C98459) *
               C153910 -
           (((C2825 * C31999 + C52854 + C52854 + C153887 * C32001 +
              C2823 * C6303 + C52855 + C52855 + C153913 * C6315 +
              C2821 * C6304 + C52856 + C52856 + C153925 * C6316) *
                 C153464 +
             (C53492 + C53491 + C53490) * C74249) *
                C153713 +
            ((C52883 + C52882 + C52881) * C153464 + C53485 * C74249) * C98459) *
               C2546) *
              C153563) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C153931 +
             C193 * C153924 + C194 * C153905 + C195 * C153852) *
                C98459 +
            (C98850 + C98851 + C98852 + C98853) * C153713) *
               C153910 -
           ((C98854 + C98855 + C98856 + C98857) * C153713 +
            (C98853 + C98852 + C98851 + C98850) * C98459) *
               C153911 +
           ((C98857 + C98856 + C98855 + C98854) * C98459 +
            (C101214 + C101215 + C101216 + C101217) * C153713) *
               C2546) *
              C153837 +
          (((C99516 + C99517 + C99518 + C99519) * C98459 +
            (C100042 + C100043 + C100044 + C100045) * C153713) *
               C153911 -
           ((C99519 + C99518 + C99517 + C99516) * C153713 +
            (C407 * C153852 + C408 * C153905 + C409 * C153924 +
             (C134 * C329 + C374 + C374 + C153608 * C353) * C153931) *
                C98459) *
               C153910 -
           (((C134 * C8488 + C8513 + C8513 + C153608 * C8490) * C153852 +
             C8525 * C153905 + C8524 * C153924 + C9136 * C153931) *
                C153713 +
            (C100045 + C100044 + C100043 + C100042) * C98459) *
               C2546) *
              C153563) *
         C153492) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C74249 +
             C193 * C153464) *
                C153933 +
            (C107636 + C107637) * C153930 + C107652 * C153921 +
            C107653 * C153867) *
               C153910 -
           (C110012 * C153867 + C110013 * C153921 +
            (C107639 + C107638) * C153930 + (C107637 + C107636) * C153933) *
               C153911 +
           (C107652 * C153933 + C107653 * C153930 +
            (C107643 + C107642) * C153921 + (C110014 + C110015) * C153867) *
               C2546) *
              C153837 +
          (((C108308 + C108309) * C153933 + (C108310 + C108311) * C153930 +
            (C108312 + C108313) * C153921 + (C108838 + C108839) * C153867) *
               C153911 -
           (C108840 * C153867 + C108841 * C153921 +
            (C108309 + C108308) * C153930 +
            (C409 * C153464 +
             (C134 * C329 + C374 + C374 + C153608 * C353) * C74249) *
                C153933) *
               C153910 -
           (((C134 * C56351 + C56366 + C56366 + C153608 * C56353) * C153464 +
             C56711 * C74249) *
                C153867 +
            (C108839 + C108838) * C153921 + C108840 * C153930 +
            C108841 * C153933) *
               C2546) *
              C153563) *
         C153492) /
            (p * q * std::sqrt(p + q));
    d2ee[267] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C134 * C136 + C161 + C161 + C153608 * C152) * C153931 +
                 C193 * C153924 + C194 * C153905 + C195 * C153852) *
                    C98459 +
                (C98850 + C98851 + C98852 + C98853) * C153713) *
                   C2030 -
               ((C98854 + C98855 + C98856 + C98857) * C153713 +
                (C98853 + C98852 + C98851 + C98850) * C98459) *
                   C153591) *
                  C153511 * C1225 +
              (((C98858 + C98859 + C98860 + C98861) * C98459 +
                (C98862 + C98863 + C98864 + C98865) * C153713) *
                   C153591 -
               ((C98861 + C98860 + C98859 + C98858) * C153713 +
                (C196 * C153852 + C195 * C153905 + C194 * C153924 +
                 C193 * C153931) *
                    C98459) *
                   C2030) *
                  C153511 * C1226 +
              (((C194 * C153931 + C195 * C153924 + C196 * C153905 +
                 C197 * C153852) *
                    C98459 +
                (C99254 + C99255 + C99256 + C99257) * C153713) *
                   C2030 -
               (((C134 * C549 + C602 + C602 + C153608 * C573) * C153852 +
                 C626 * C153905 + C625 * C153924 + C624 * C153931) *
                    C153713 +
                (C99257 + C99256 + C99255 + C99254) * C98459) *
                   C153591) *
                  C153511 * C1227) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C134 * C136 + C161 + C161 + C153608 * C152) * C153931 +
                 C193 * C153924 + C194 * C153905 + C195 * C153852) *
                    C98459 +
                (C98850 + C98851 + C98852 + C98853) * C153713) *
                   C2030 -
               ((C98854 + C98855 + C98856 + C98857) * C153713 +
                (C98853 + C98852 + C98851 + C98850) * C98459) *
                   C153591) *
                  C320 +
              (((C99516 + C99517 + C99518 + C99519) * C98459 +
                (C100042 + C100043 + C100044 + C100045) * C153713) *
                   C153591 -
               ((C99519 + C99518 + C99517 + C99516) * C153713 +
                (C407 * C153852 + C408 * C153905 + C409 * C153924 +
                 (C134 * C329 + C374 + C374 + C153608 * C353) * C153931) *
                    C98459) *
                   C2030) *
                  C321 +
              ((((C134 * C330 + C375 + C375 + C153608 * C354) * C153931 +
                 C410 * C153924 + C411 * C153905 + C412 * C153852) *
                    C98459 +
                (C100692 + C100693 + C100694 + C100695) * C153713) *
                   C2030 -
               (((C134 * C3444 + C7437 + C7437 + C153608 * C3452) * C153852 +
                 C7455 * C153905 + C7454 * C153924 + C9880 * C153931) *
                    C153713 +
                (C100695 + C100694 + C100693 + C100692) * C98459) *
                   C153591) *
                  C322) *
             C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153608 * C152) * C153931 +
            C193 * C153924 + C194 * C153905 + C195 * C153852) *
               C98459 +
           (C98850 + C98851 + C98852 + C98853) * C153713) *
              C2236 -
          ((C98854 + C98855 + C98856 + C98857) * C153713 +
           (C98853 + C98852 + C98851 + C98850) * C98459) *
              C2237 +
          ((C98857 + C98856 + C98855 + C98854) * C98459 +
           (C101214 + C101215 + C101216 + C101217) * C153713) *
              C2238 -
          (((C134 * C7676 + C7715 + C7715 + C153608 * C7684) * C153852 +
            C7740 * C153905 + C7739 * C153924 + C10485 * C153931) *
               C153713 +
           (C101217 + C101216 + C101215 + C101214) * C98459) *
              C2239) *
         C153511 * C153492) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
              C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
              C153887 * C354) *
                 C74249 +
             (C2894 + C2895 + C2896) * C153464) *
                C98459 +
            ((C52092 + C52093 + C52094) * C74249 + C102656 * C153464) *
                C153713) *
               C2030 -
           ((C52078 * C153464 + (C52097 + C52096 + C52095) * C74249) * C153713 +
            (C102657 * C153464 + (C52094 + C52093 + C52092) * C74249) *
                C98459) *
               C153591) *
              C153511 * C1225 +
          (((C102656 * C74249 + C103240 * C153464) * C98459 +
            (C102658 * C74249 + (C3535 + C3536 + C3537) * C153464) * C153713) *
               C153591 -
           ((C4004 * C153464 + C102657 * C74249) * C153713 +
            ((C2899 + C2898 + C2897) * C153464 +
             (C2896 + C2895 + C2894) * C74249) *
                C98459) *
               C2030) *
              C153511 * C1226 +
          (((C2908 * C74249 + (C2902 + C2901 + C2900) * C153464) * C98459 +
            (C103240 * C74249 + (C4011 + C4012 + C4013) * C153464) * C153713) *
               C2030 -
           (((C2825 * C3444 + C3499 + C3499 + C153887 * C3452 + C2823 * C1458 +
              C3500 + C3500 + C153913 * C1468 + C2821 * C546 + C3501 + C3501 +
              C153925 * C570) *
                 C153464 +
             (C3537 + C3536 + C3535) * C74249) *
                C153713 +
            ((C4013 + C4012 + C4011) * C153464 + C4004 * C74249) * C98459) *
               C153591) *
              C153511 * C1227)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
              C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
              C153887 * C354) *
                 C74249 +
             (C2894 + C2895 + C2896) * C153464) *
                C98459 +
            ((C52092 + C52093 + C52094) * C74249 + C102656 * C153464) *
                C153713) *
               C2030 -
           ((C52078 * C153464 + (C52097 + C52096 + C52095) * C74249) * C153713 +
            (C102657 * C153464 + (C52094 + C52093 + C52092) * C74249) *
                C98459) *
               C153591) *
              C320 +
          ((((C52875 + C52876 + C52877) * C74249 + C103629 * C153464) * C98459 +
            ((C52878 + C52879 + C52880) * C74249 +
             (C52881 + C52882 + C52883) * C153464) *
                C153713) *
               C153591 -
           ((C103630 * C153464 + (C52877 + C52876 + C52875) * C74249) *
                C153713 +
            ((C3215 + C3216 + C3217) * C153464 +
             (C2825 * C1319 + C3158 + C3158 + C153887 * C1329 + C2823 * C330 +
              C3159 + C3159 + C153913 * C354 + C2821 * C329 + C3160 + C3160 +
              C153925 * C353) *
                 C74249) *
                C98459) *
               C2030) *
              C321 +
          ((((C2821 * C330 + C3161 + C3161 + C153925 * C354 + C2823 * C1319 +
              C3162 + C3162 + C153913 * C1329 + C2825 * C3127 + C3163 + C3163 +
              C153887 * C3135) *
                 C74249 +
             (C3218 + C3219 + C3220) * C153464) *
                C98459 +
            ((C54246 + C54247 + C54248) * C74249 +
             (C102360 + C102361 + C102362) * C153464) *
                C153713) *
               C2030 -
           (((C2825 * C28651 + C51814 + C51814 + C153887 * C28655 +
              C2823 * C4958 + C51815 + C51815 + C153913 * C4964 +
              C2821 * C3442 + C51816 + C51816 + C153925 * C3450) *
                 C153464 +
             (C54251 + C54250 + C54249) * C74249) *
                C153713 +
            ((C102362 + C102361 + C102360) * C153464 +
             (C54248 + C54247 + C54246) * C74249) *
                C98459) *
               C153591) *
              C322) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
             C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
             C153887 * C354) *
                C74249 +
            (C2894 + C2895 + C2896) * C153464) *
               C98459 +
           ((C52092 + C52093 + C52094) * C74249 + C102656 * C153464) *
               C153713) *
              C2236 -
          ((C52078 * C153464 + (C52097 + C52096 + C52095) * C74249) * C153713 +
           (C102657 * C153464 + (C52094 + C52093 + C52092) * C74249) * C98459) *
              C2237 +
          ((C52105 * C74249 + C102658 * C153464) * C98459 +
           ((C52100 + C52099 + C52098) * C74249 +
            (C52101 + C52102 + C52103) * C153464) *
               C153713) *
              C2238 -
          (((C2825 * C31196 + C52063 + C52063 + C153887 * C31200 +
             C2823 * C9116 + C52064 + C52064 + C153913 * C9122 + C2821 * C7674 +
             C52065 + C52065 + C153925 * C7682) *
                C153464 +
            (C54854 + C54853 + C54852) * C74249) *
               C153713 +
           ((C52103 + C52102 + C52101) * C153464 + C54844 * C74249) * C98459) *
              C2239) *
         C153511 * C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C74249 +
             C193 * C153464) *
                C153933 +
            (C107636 + C107637) * C153930 + C107652 * C153921 +
            C107653 * C153867) *
               C2030 -
           ((C107642 + C107643) * C153867 + (C107641 + C107640) * C153921 +
            (C107639 + C107638) * C153930 + (C107637 + C107636) * C153933) *
               C153591) *
              C153511 * C1225 +
          (((C107644 + C107645) * C153933 + (C107646 + C107647) * C153930 +
            (C107648 + C107649) * C153921 + (C107650 + C107651) * C153867) *
               C153591 -
           (C107654 * C153867 + C107655 * C153921 +
            (C107645 + C107644) * C153930 +
            (C194 * C153464 + C193 * C74249) * C153933) *
               C2030) *
              C153511 * C1226 +
          (((C194 * C74249 + C195 * C153464) * C153933 +
            (C108044 + C108045) * C153930 + (C108046 + C108047) * C153921 +
            (C108048 + C108049) * C153867) *
               C2030 -
           (((C134 * C7676 + C7715 + C7715 + C153608 * C7684) * C153464 +
             C7740 * C74249) *
                C153867 +
            (C108049 + C108048) * C153921 + (C108047 + C108046) * C153930 +
            (C108045 + C108044) * C153933) *
               C153591) *
              C153511 * C1227)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C74249 +
             C193 * C153464) *
                C153933 +
            (C107636 + C107637) * C153930 + C107652 * C153921 +
            C107653 * C153867) *
               C2030 -
           ((C107642 + C107643) * C153867 + (C107641 + C107640) * C153921 +
            (C107639 + C107638) * C153930 + (C107637 + C107636) * C153933) *
               C153591) *
              C320 +
          (((C108308 + C108309) * C153933 + (C108310 + C108311) * C153930 +
            (C108312 + C108313) * C153921 + (C108838 + C108839) * C153867) *
               C153591 -
           (C108840 * C153867 + C108841 * C153921 +
            (C108309 + C108308) * C153930 +
            (C409 * C153464 +
             (C134 * C329 + C374 + C374 + C153608 * C353) * C74249) *
                C153933) *
               C2030) *
              C321 +
          ((((C134 * C330 + C375 + C375 + C153608 * C354) * C74249 +
             C410 * C153464) *
                C153933 +
            (C109488 + C109489) * C153930 + (C109490 + C109491) * C153921 +
            (C109492 + C109493) * C153867) *
               C2030 -
           (((C134 * C31196 + C55791 + C55791 + C153608 * C31200) * C153464 +
             C57131 * C74249) *
                C153867 +
            (C109493 + C109492) * C153921 + (C109491 + C109490) * C153930 +
            (C109489 + C109488) * C153933) *
               C153591) *
              C322) *
         C153492) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153608 * C152) * C74249 +
            C193 * C153464) *
               C153933 +
           (C107636 + C107637) * C153930 + C107652 * C153921 +
           C107653 * C153867) *
              C2236 -
          (C110012 * C153867 + C110013 * C153921 +
           (C107639 + C107638) * C153930 + (C107637 + C107636) * C153933) *
              C2237 +
          (C107652 * C153933 + C107653 * C153930 +
           (C107643 + C107642) * C153921 + (C110014 + C110015) * C153867) *
              C2238 -
          (((C134 * C55914 + C55933 + C55933 + C153608 * C55918) * C153464 +
            C57468 * C74249) *
               C153867 +
           (C110015 + C110014) * C153921 + C110012 * C153930 +
           C110013 * C153933) *
              C2239) *
         C153511 * C153492) /
            (p * q * std::sqrt(p + q));
    d2ee[268] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
              C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
              C153887 * C354) *
                 C74249 +
             (C2894 + C2895 + C2896) * C153464) *
                C98459 +
            ((C52092 + C52093 + C52094) * C74249 + C102656 * C153464) *
                C153713) *
               C153910 -
           ((C52078 * C153464 + (C52097 + C52096 + C52095) * C74249) * C153713 +
            (C102657 * C153464 + (C52094 + C52093 + C52092) * C74249) *
                C98459) *
               C153911 +
           ((C52105 * C74249 + C102658 * C153464) * C98459 +
            ((C52100 + C52099 + C52098) * C74249 +
             (C52101 + C52102 + C52103) * C153464) *
                C153713) *
               C2546) *
              C153511 * C153829 +
          (((C102656 * C74249 + C103240 * C153464) * C98459 +
            (C102658 * C74249 + (C3535 + C3536 + C3537) * C153464) * C153713) *
               C153911 -
           ((C4004 * C153464 + C102657 * C74249) * C153713 +
            ((C2899 + C2898 + C2897) * C153464 +
             (C2896 + C2895 + C2894) * C74249) *
                C98459) *
               C153910 -
           (((C2825 * C6301 + C6320 + C6320 + C153887 * C6313 + C2823 * C6302 +
              C6321 + C6321 + C153913 * C6314 + C2821 * C2242 + C6322 + C6322 +
              C153925 * C2252) *
                 C153464 +
             (C52103 + C52102 + C52101) * C74249) *
                C153713 +
            ((C3537 + C3536 + C3535) * C153464 + C52078 * C74249) * C98459) *
               C2546) *
              C153511 * C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C153931 +
             C193 * C153924 + C194 * C153905 + C195 * C153852) *
                C98459 +
            (C98850 + C98851 + C98852 + C98853) * C153713) *
               C153910 -
           ((C98854 + C98855 + C98856 + C98857) * C153713 +
            (C98853 + C98852 + C98851 + C98850) * C98459) *
               C153911 +
           ((C98857 + C98856 + C98855 + C98854) * C98459 +
            (C101214 + C101215 + C101216 + C101217) * C153713) *
               C2546) *
              C153511 * C153829 +
          (((C98858 + C98859 + C98860 + C98861) * C98459 +
            (C98862 + C98863 + C98864 + C98865) * C153713) *
               C153911 -
           ((C98861 + C98860 + C98859 + C98858) * C153713 +
            (C196 * C153852 + C195 * C153905 + C194 * C153924 +
             C193 * C153931) *
                C98459) *
               C153910 -
           (((C134 * C2240 + C2256 + C2256 + C153608 * C2250) * C153852 +
             C7741 * C153905 + C7736 * C153924 + C7737 * C153931) *
                C153713 +
            (C98865 + C98864 + C98863 + C98862) * C98459) *
               C2546) *
              C153511 * C153498)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C74249 +
             C193 * C153464) *
                C153933 +
            (C107636 + C107637) * C153930 + C107652 * C153921 +
            C107653 * C153867) *
               C153910 -
           (C110012 * C153867 + C110013 * C153921 +
            (C107639 + C107638) * C153930 + (C107637 + C107636) * C153933) *
               C153911 +
           (C107652 * C153933 + C107653 * C153930 +
            (C107643 + C107642) * C153921 + (C110014 + C110015) * C153867) *
               C2546) *
              C153511 * C153829 +
          (((C107644 + C107645) * C153933 + (C107646 + C107647) * C153930 +
            (C107648 + C107649) * C153921 + (C107650 + C107651) * C153867) *
               C153911 -
           (C107654 * C153867 + C107655 * C153921 +
            (C107645 + C107644) * C153930 +
            (C194 * C153464 + C193 * C74249) * C153933) *
               C153910 -
           (((C134 * C10464 + C10479 + C10479 + C153608 * C10470) * C153464 +
             C55939 * C74249) *
                C153867 +
            (C107651 + C107650) * C153921 + C107654 * C153930 +
            C107655 * C153933) *
               C2546) *
              C153511 * C153498)) /
            (p * q * std::sqrt(p + q));
    d2ee[269] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C153931 +
             C193 * C153924 + C194 * C153905 + C195 * C153852) *
                C98459 +
            (C98850 + C98851 + C98852 + C98853) * C153713) *
               C2030 -
           ((C98854 + C98855 + C98856 + C98857) * C153713 +
            (C98853 + C98852 + C98851 + C98850) * C98459) *
               C153591) *
              C320 +
          (((C99516 + C99517 + C99518 + C99519) * C98459 +
            (C100042 + C100043 + C100044 + C100045) * C153713) *
               C153591 -
           ((C99519 + C99518 + C99517 + C99516) * C153713 +
            (C407 * C153852 + C408 * C153905 + C409 * C153924 +
             (C134 * C329 + C374 + C374 + C153608 * C353) * C153931) *
                C98459) *
               C2030) *
              C321 +
          ((((C134 * C330 + C375 + C375 + C153608 * C354) * C153931 +
             C410 * C153924 + C411 * C153905 + C412 * C153852) *
                C98459 +
            (C100692 + C100693 + C100694 + C100695) * C153713) *
               C2030 -
           (((C134 * C3444 + C7437 + C7437 + C153608 * C3452) * C153852 +
             C7455 * C153905 + C7454 * C153924 + C9880 * C153931) *
                C153713 +
            (C100695 + C100694 + C100693 + C100692) * C98459) *
               C153591) *
              C322) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C153931 +
             C193 * C153924 + C194 * C153905 + C195 * C153852) *
                C98459 +
            (C98850 + C98851 + C98852 + C98853) * C153713) *
               C2030 -
           ((C98854 + C98855 + C98856 + C98857) * C153713 +
            (C98853 + C98852 + C98851 + C98850) * C98459) *
               C153591) *
              C153511 * C1225 +
          (((C98858 + C98859 + C98860 + C98861) * C98459 +
            (C98862 + C98863 + C98864 + C98865) * C153713) *
               C153591 -
           ((C98861 + C98860 + C98859 + C98858) * C153713 +
            (C196 * C153852 + C195 * C153905 + C194 * C153924 +
             C193 * C153931) *
                C98459) *
               C2030) *
              C153511 * C1226 +
          (((C194 * C153931 + C195 * C153924 + C196 * C153905 +
             C197 * C153852) *
                C98459 +
            (C99254 + C99255 + C99256 + C99257) * C153713) *
               C2030 -
           (((C134 * C549 + C602 + C602 + C153608 * C573) * C153852 +
             C626 * C153905 + C625 * C153924 + C624 * C153931) *
                C153713 +
            (C99257 + C99256 + C99255 + C99254) * C98459) *
               C153591) *
              C153511 * C1227)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
              C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
              C153887 * C354) *
                 C74249 +
             (C2894 + C2895 + C2896) * C153464) *
                C98459 +
            ((C52092 + C52093 + C52094) * C74249 + C102656 * C153464) *
                C153713) *
               C2030 -
           ((C52078 * C153464 + (C52097 + C52096 + C52095) * C74249) * C153713 +
            (C102657 * C153464 + (C52094 + C52093 + C52092) * C74249) *
                C98459) *
               C153591) *
              C153511 * C1225 +
          (((C102656 * C74249 + C103240 * C153464) * C98459 +
            (C102658 * C74249 + (C3535 + C3536 + C3537) * C153464) * C153713) *
               C153591 -
           ((C4004 * C153464 + C102657 * C74249) * C153713 +
            ((C2899 + C2898 + C2897) * C153464 +
             (C2896 + C2895 + C2894) * C74249) *
                C98459) *
               C2030) *
              C153511 * C1226 +
          (((C2908 * C74249 + (C2902 + C2901 + C2900) * C153464) * C98459 +
            (C103240 * C74249 + (C4011 + C4012 + C4013) * C153464) * C153713) *
               C2030 -
           (((C2825 * C3444 + C3499 + C3499 + C153887 * C3452 + C2823 * C1458 +
              C3500 + C3500 + C153913 * C1468 + C2821 * C546 + C3501 + C3501 +
              C153925 * C570) *
                 C153464 +
             (C3537 + C3536 + C3535) * C74249) *
                C153713 +
            ((C4013 + C4012 + C4011) * C153464 + C4004 * C74249) * C98459) *
               C153591) *
              C153511 * C1227)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
              C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
              C153887 * C354) *
                 C74249 +
             (C2894 + C2895 + C2896) * C153464) *
                C98459 +
            ((C52092 + C52093 + C52094) * C74249 + C102656 * C153464) *
                C153713) *
               C2030 -
           ((C52078 * C153464 + (C52097 + C52096 + C52095) * C74249) * C153713 +
            (C102657 * C153464 + (C52094 + C52093 + C52092) * C74249) *
                C98459) *
               C153591) *
              C320 +
          ((((C52875 + C52876 + C52877) * C74249 + C103629 * C153464) * C98459 +
            ((C52878 + C52879 + C52880) * C74249 +
             (C52881 + C52882 + C52883) * C153464) *
                C153713) *
               C153591 -
           ((C103630 * C153464 + (C52877 + C52876 + C52875) * C74249) *
                C153713 +
            ((C3215 + C3216 + C3217) * C153464 +
             (C2825 * C1319 + C3158 + C3158 + C153887 * C1329 + C2823 * C330 +
              C3159 + C3159 + C153913 * C354 + C2821 * C329 + C3160 + C3160 +
              C153925 * C353) *
                 C74249) *
                C98459) *
               C2030) *
              C321 +
          ((((C2821 * C330 + C3161 + C3161 + C153925 * C354 + C2823 * C1319 +
              C3162 + C3162 + C153913 * C1329 + C2825 * C3127 + C3163 + C3163 +
              C153887 * C3135) *
                 C74249 +
             (C3218 + C3219 + C3220) * C153464) *
                C98459 +
            ((C54246 + C54247 + C54248) * C74249 +
             (C102360 + C102361 + C102362) * C153464) *
                C153713) *
               C2030 -
           (((C2825 * C28651 + C51814 + C51814 + C153887 * C28655 +
              C2823 * C4958 + C51815 + C51815 + C153913 * C4964 +
              C2821 * C3442 + C51816 + C51816 + C153925 * C3450) *
                 C153464 +
             (C54251 + C54250 + C54249) * C74249) *
                C153713 +
            ((C102362 + C102361 + C102360) * C153464 +
             (C54248 + C54247 + C54246) * C74249) *
                C98459) *
               C153591) *
              C322) *
         C153492) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C74249 +
             C193 * C153464) *
                C153933 +
            (C107636 + C107637) * C153930 + C107652 * C153921 +
            C107653 * C153867) *
               C2030 -
           ((C107642 + C107643) * C153867 + (C107641 + C107640) * C153921 +
            (C107639 + C107638) * C153930 + (C107637 + C107636) * C153933) *
               C153591) *
              C153511 * C1225 +
          (((C107644 + C107645) * C153933 + (C107646 + C107647) * C153930 +
            (C107648 + C107649) * C153921 + (C107650 + C107651) * C153867) *
               C153591 -
           (C107654 * C153867 + C107655 * C153921 +
            (C107645 + C107644) * C153930 +
            (C194 * C153464 + C193 * C74249) * C153933) *
               C2030) *
              C153511 * C1226 +
          (((C194 * C74249 + C195 * C153464) * C153933 +
            (C108044 + C108045) * C153930 + (C108046 + C108047) * C153921 +
            (C108048 + C108049) * C153867) *
               C2030 -
           (((C134 * C7676 + C7715 + C7715 + C153608 * C7684) * C153464 +
             C7740 * C74249) *
                C153867 +
            (C108049 + C108048) * C153921 + (C108047 + C108046) * C153930 +
            (C108045 + C108044) * C153933) *
               C153591) *
              C153511 * C1227)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C74249 +
             C193 * C153464) *
                C153933 +
            (C107636 + C107637) * C153930 + C107652 * C153921 +
            C107653 * C153867) *
               C2030 -
           ((C107642 + C107643) * C153867 + (C107641 + C107640) * C153921 +
            (C107639 + C107638) * C153930 + (C107637 + C107636) * C153933) *
               C153591) *
              C320 +
          (((C108308 + C108309) * C153933 + (C108310 + C108311) * C153930 +
            (C108312 + C108313) * C153921 + (C108838 + C108839) * C153867) *
               C153591 -
           (C108840 * C153867 + C108841 * C153921 +
            (C108309 + C108308) * C153930 +
            (C409 * C153464 +
             (C134 * C329 + C374 + C374 + C153608 * C353) * C74249) *
                C153933) *
               C2030) *
              C321 +
          ((((C134 * C330 + C375 + C375 + C153608 * C354) * C74249 +
             C410 * C153464) *
                C153933 +
            (C109488 + C109489) * C153930 + (C109490 + C109491) * C153921 +
            (C109492 + C109493) * C153867) *
               C2030 -
           (((C134 * C31196 + C55791 + C55791 + C153608 * C31200) * C153464 +
             C57131 * C74249) *
                C153867 +
            (C109493 + C109492) * C153921 + (C109491 + C109490) * C153930 +
            (C109489 + C109488) * C153933) *
               C153591) *
              C322) *
         C153492) /
            (p * q * std::sqrt(p + q));
    d2ee[270] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C153459 +
             C193 * C153467 + C194 * C83548) *
                C153709 +
            (C116467 + C116468 + C116469) * C153716 + C116487 * C116029) *
               C153527 * C153837 -
           ((C7450 * C83548 + C7451 * C153467 + C8523 * C153459) * C116029 +
            (C1099 * C83548 + C1098 * C153467 + C8522 * C153459) * C153716 +
            (C408 * C83548 + C409 * C153467 +
             (C134 * C329 + C374 + C374 + C153608 * C353) * C153459) *
                C153709) *
               C153527 * C153563) *
              C153906 +
          (((C409 * C153459 + C408 * C153467 + C407 * C83548) * C153709 +
            (C1098 * C153459 + C1099 * C153467 + C1100 * C83548) * C153716 +
            (C7451 * C153459 + C7450 * C153467 + C7974 * C83548) * C116029) *
               C153527 * C153563 -
           (C116488 * C116029 + (C116478 + C116477 + C116476) * C153716 +
            (C195 * C83548 + C194 * C153467 + C193 * C153459) * C153709) *
               C153527 * C153837) *
              C153907 +
          (((C194 * C153459 + C195 * C153467 + C196 * C83548) * C153709 +
            (C621 * C153459 + C620 * C153467 + C619 * C83548) * C153716 +
            (C624 * C153459 + C625 * C153467 + C626 * C83548) * C116029) *
               C153527 * C153837 -
           (((C134 * C1457 + C1473 + C1473 + C153608 * C1467) * C83548 +
             C7974 * C153467 + C7450 * C153459) *
                C116029 +
            (C1101 * C83548 + C1100 * C153467 + C1099 * C153459) * C153716 +
            (C406 * C83548 + C407 * C153467 + C408 * C153459) * C153709) *
               C153527 * C153563) *
              C752)) /
        (p * q * std::sqrt(p + q));
    d2ee[271] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C153608 * C152) * C153459 +
              C193 * C153467 + C194 * C83548) *
                 C153709 +
             (C116467 + C116468 + C116469) * C153716 + C116487 * C116029) *
                C153838 -
            ((C116473 + C116474 + C116475) * C116029 +
             (C116472 + C116471 + C116470) * C153716 +
             (C116469 + C116468 + C116467) * C153709) *
                C153591) *
               C153837 +
           (((C117221 + C117222 + C117223) * C153709 +
             (C117224 + C117225 + C117226) * C153716 +
             (C9136 * C153459 + C8524 * C153467 + C8525 * C83548) * C116029) *
                C153591 -
            ((C117226 + C117225 + C117224) * C116029 +
             (C117223 + C117222 + C117221) * C153716 +
             (C408 * C83548 + C409 * C153467 +
              (C134 * C329 + C374 + C374 + C153608 * C353) * C153459) *
                 C153709) *
                C153838) *
               C153563) *
              C323 +
          ((((C116476 + C116477 + C116478) * C153709 +
             (C116479 + C116480 + C116481) * C153716 +
             (C116482 + C116483 + C116484) * C116029) *
                C153591 -
            (C116488 * C116029 + (C116478 + C116477 + C116476) * C153716 +
             (C195 * C83548 + C194 * C153467 + C193 * C153459) * C153709) *
                C153838) *
               C153837 +
           (((C409 * C153459 + C408 * C153467 + C407 * C83548) * C153709 +
             (C117227 + C117228 + C117229) * C153716 +
             (C117230 + C117231 + C117232) * C116029) *
                C153838 -
            (((C134 * C8488 + C8513 + C8513 + C153608 * C8490) * C83548 +
              C8525 * C153467 + C8524 * C153459) *
                 C116029 +
             (C117232 + C117231 + C117230) * C153716 +
             (C117229 + C117228 + C117227) * C153709) *
                C153591) *
               C153563) *
              C153498)) /
        (p * q * std::sqrt(p + q));
    d2ee[272] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C153459 +
             C193 * C153467 + C194 * C83548) *
                C153709 +
            (C7734 * C153459 + C622 * C153467 + C621 * C83548) * C153716 +
            (C7735 * C153459 + C623 * C153467 + C624 * C83548) * C116029) *
               C153527 * C320 -
           ((C7450 * C83548 + C7451 * C153467 + C8523 * C153459) * C116029 +
            (C1099 * C83548 + C1098 * C153467 + C8522 * C153459) * C153716 +
            (C408 * C83548 + C409 * C153467 +
             (C134 * C329 + C374 + C374 + C153608 * C353) * C153459) *
                C153709) *
               C153527 * C321 +
           (((C134 * C330 + C375 + C375 + C153608 * C354) * C153459 +
             C410 * C153467 + C411 * C83548) *
                C153709 +
            (C9879 * C153459 + C7452 * C153467 + C7453 * C83548) * C153716 +
            (C9880 * C153459 + C7454 * C153467 + C7455 * C83548) * C116029) *
               C153527 * C322) *
              C323 +
          (((C409 * C153459 + C408 * C153467 + C407 * C83548) * C153709 +
            (C1098 * C153459 + C1099 * C153467 + C1100 * C83548) * C153716 +
            (C7451 * C153459 + C7450 * C153467 + C7974 * C83548) * C116029) *
               C153527 * C321 -
           ((C625 * C83548 + C624 * C153467 + C623 * C153459) * C116029 +
            (C620 * C83548 + C621 * C153467 + C622 * C153459) * C153716 +
            (C195 * C83548 + C194 * C153467 + C193 * C153459) * C153709) *
               C153527 * C320 -
           (((C134 * C3444 + C7437 + C7437 + C153608 * C3452) * C83548 +
             C7455 * C153467 + C7454 * C153459) *
                C116029 +
            (C15373 * C83548 + C7453 * C153467 + C7452 * C153459) * C153716 +
            (C412 * C83548 + C411 * C153467 + C410 * C153459) * C153709) *
               C153527 * C322) *
              C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153608 * C152) * C153459 +
            C193 * C153467 + C194 * C83548) *
               C153709 +
           (C7734 * C153459 + C622 * C153467 + C621 * C83548) * C153716 +
           (C7735 * C153459 + C623 * C153467 + C624 * C83548) * C116029) *
              C153527 * C153511 * C130 -
          ((C625 * C83548 + C624 * C153467 + C623 * C153459) * C116029 +
           (C620 * C83548 + C621 * C153467 + C622 * C153459) * C153716 +
           (C195 * C83548 + C194 * C153467 + C193 * C153459) * C153709) *
              C153527 * C153511 * C131 +
          ((C194 * C153459 + C195 * C153467 + C196 * C83548) * C153709 +
           (C621 * C153459 + C620 * C153467 + C619 * C83548) * C153716 +
           (C624 * C153459 + C625 * C153467 + C626 * C83548) * C116029) *
              C153527 * C153511 * C132 -
          (((C134 * C549 + C602 + C602 + C153608 * C573) * C83548 +
            C626 * C153467 + C625 * C153459) *
               C116029 +
           (C895 * C83548 + C619 * C153467 + C620 * C153459) * C153716 +
           (C197 * C83548 + C196 * C153467 + C195 * C153459) * C153709) *
              C153527 * C153511 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C153459 +
             C193 * C153467 + C194 * C83548) *
                C153709 +
            (C116467 + C116468 + C116469) * C153716 + C116487 * C116029) *
               C535 -
           ((C116473 + C116474 + C116475) * C116029 +
            (C116472 + C116471 + C116470) * C153716 +
            (C116469 + C116468 + C116467) * C153709) *
               C536 +
           (C116487 * C153709 + (C116475 + C116474 + C116473) * C153716 +
            (C10485 * C153459 + C7739 * C153467 + C7740 * C83548) * C116029) *
               C537) *
              C153511 * C323 +
          (((C116476 + C116477 + C116478) * C153709 +
            (C116479 + C116480 + C116481) * C153716 +
            (C116482 + C116483 + C116484) * C116029) *
               C536 -
           (C116488 * C116029 + (C116478 + C116477 + C116476) * C153716 +
            (C195 * C83548 + C194 * C153467 + C193 * C153459) * C153709) *
               C535 -
           (((C134 * C7676 + C7715 + C7715 + C153608 * C7684) * C83548 +
             C7740 * C153467 + C7739 * C153459) *
                C116029 +
            (C116484 + C116483 + C116482) * C153716 + C116488 * C153709) *
               C537) *
              C153511 * C153498)) /
            (p * q * std::sqrt(p + q));
    d2ee[273] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C153459 +
             C193 * C153467 + C194 * C83548) *
                C153709 +
            (C116467 + C116468 + C116469) * C153716 + C116487 * C116029) *
               C153838 -
           ((C116473 + C116474 + C116475) * C116029 +
            (C116472 + C116471 + C116470) * C153716 +
            (C116469 + C116468 + C116467) * C153709) *
               C153591) *
              C153511 * C153906 +
          (((C116476 + C116477 + C116478) * C153709 +
            (C116479 + C116480 + C116481) * C153716 +
            (C116482 + C116483 + C116484) * C116029) *
               C153591 -
           (C116488 * C116029 + (C116478 + C116477 + C116476) * C153716 +
            (C195 * C83548 + C194 * C153467 + C193 * C153459) * C153709) *
               C153838) *
              C153511 * C153907 +
          (((C194 * C153459 + C195 * C153467 + C196 * C83548) * C153709 +
            (C116925 + C116926 + C116927) * C153716 +
            (C116928 + C116929 + C116930) * C116029) *
               C153838 -
           (((C134 * C2240 + C2256 + C2256 + C153608 * C2250) * C83548 +
             C7741 * C153467 + C7736 * C153459) *
                C116029 +
            (C116930 + C116929 + C116928) * C153716 +
            (C116927 + C116926 + C116925) * C153709) *
               C153591) *
              C153511 * C752)) /
        (p * q * std::sqrt(p + q));
    d2ee[274] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153608 * C152) * C153459 +
            C193 * C153467 + C194 * C83548) *
               C153709 +
           (C7734 * C153459 + C622 * C153467 + C621 * C83548) * C153716 +
           (C7735 * C153459 + C623 * C153467 + C624 * C83548) * C116029) *
              C153527 * C153511 * C130 -
          ((C625 * C83548 + C624 * C153467 + C623 * C153459) * C116029 +
           (C620 * C83548 + C621 * C153467 + C622 * C153459) * C153716 +
           (C195 * C83548 + C194 * C153467 + C193 * C153459) * C153709) *
              C153527 * C153511 * C131 +
          ((C194 * C153459 + C195 * C153467 + C196 * C83548) * C153709 +
           (C621 * C153459 + C620 * C153467 + C619 * C83548) * C153716 +
           (C624 * C153459 + C625 * C153467 + C626 * C83548) * C116029) *
              C153527 * C153511 * C132 -
          (((C134 * C549 + C602 + C602 + C153608 * C573) * C83548 +
            C626 * C153467 + C625 * C153459) *
               C116029 +
           (C895 * C83548 + C619 * C153467 + C620 * C153459) * C153716 +
           (C197 * C83548 + C196 * C153467 + C195 * C153459) * C153709) *
              C153527 * C153511 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C153459 +
             C193 * C153467 + C194 * C83548) *
                C153709 +
            (C7734 * C153459 + C622 * C153467 + C621 * C83548) * C153716 +
            (C7735 * C153459 + C623 * C153467 + C624 * C83548) * C116029) *
               C153527 * C320 -
           ((C7450 * C83548 + C7451 * C153467 + C8523 * C153459) * C116029 +
            (C1099 * C83548 + C1098 * C153467 + C8522 * C153459) * C153716 +
            (C408 * C83548 + C409 * C153467 +
             (C134 * C329 + C374 + C374 + C153608 * C353) * C153459) *
                C153709) *
               C153527 * C321 +
           (((C134 * C330 + C375 + C375 + C153608 * C354) * C153459 +
             C410 * C153467 + C411 * C83548) *
                C153709 +
            (C9879 * C153459 + C7452 * C153467 + C7453 * C83548) * C153716 +
            (C9880 * C153459 + C7454 * C153467 + C7455 * C83548) * C116029) *
               C153527 * C322) *
              C323 +
          (((C409 * C153459 + C408 * C153467 + C407 * C83548) * C153709 +
            (C1098 * C153459 + C1099 * C153467 + C1100 * C83548) * C153716 +
            (C7451 * C153459 + C7450 * C153467 + C7974 * C83548) * C116029) *
               C153527 * C321 -
           ((C625 * C83548 + C624 * C153467 + C623 * C153459) * C116029 +
            (C620 * C83548 + C621 * C153467 + C622 * C153459) * C153716 +
            (C195 * C83548 + C194 * C153467 + C193 * C153459) * C153709) *
               C153527 * C320 -
           (((C134 * C3444 + C7437 + C7437 + C153608 * C3452) * C83548 +
             C7455 * C153467 + C7454 * C153459) *
                C116029 +
            (C15373 * C83548 + C7453 * C153467 + C7452 * C153459) * C153716 +
            (C412 * C83548 + C411 * C153467 + C410 * C153459) * C153709) *
               C153527 * C322) *
              C153498)) /
            (p * q * std::sqrt(p + q));
    d2ee[275] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C153459 +
             C193 * C153467 + C194 * C83548) *
                C153709 +
            (C116467 + C116468 + C116469) * C153716 + C116487 * C116029) *
               C153527 * C153908 -
           (C117819 * C116029 + (C117223 + C117222 + C117221) * C153716 +
            (C408 * C83548 + C409 * C153467 +
             (C134 * C329 + C374 + C374 + C153608 * C353) * C153459) *
                C153709) *
               C153527 * C153909 +
           (((C134 * C330 + C375 + C375 + C153608 * C354) * C153459 +
             C410 * C153467 + C411 * C83548) *
                C153709 +
            (C9879 * C153459 + C7452 * C153467 + C7453 * C83548) * C153716 +
            (C9880 * C153459 + C7454 * C153467 + C7455 * C83548) * C116029) *
               C153527 * C1601) *
              C153829 +
          (((C409 * C153459 + C408 * C153467 + C407 * C83548) * C153709 +
            (C117227 + C117228 + C117229) * C153716 +
            (C117230 + C117231 + C117232) * C116029) *
               C153527 * C153909 -
           (C116488 * C116029 + (C116478 + C116477 + C116476) * C153716 +
            (C195 * C83548 + C194 * C153467 + C193 * C153459) * C153709) *
               C153527 * C153908 -
           (((C134 * C3444 + C7437 + C7437 + C153608 * C3452) * C83548 +
             C7455 * C153467 + C7454 * C153459) *
                C116029 +
            (C15373 * C83548 + C7453 * C153467 + C7452 * C153459) * C153716 +
            (C412 * C83548 + C411 * C153467 + C410 * C153459) * C153709) *
               C153527 * C1601) *
              C153498)) /
        (p * q * std::sqrt(p + q));
    d2ee[276] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C153459 +
             C193 * C153467 + C194 * C83548) *
                C153709 +
            (C116467 + C116468 + C116469) * C153716 + C116487 * C116029) *
               C153838 -
           ((C116473 + C116474 + C116475) * C116029 +
            (C116472 + C116471 + C116470) * C153716 +
            (C116469 + C116468 + C116467) * C153709) *
               C153591) *
              C153908 +
          (((C117221 + C117222 + C117223) * C153709 +
            (C117224 + C117225 + C117226) * C153716 +
            (C117815 + C117816 + C117817) * C116029) *
               C153591 -
           (C117819 * C116029 + (C117223 + C117222 + C117221) * C153716 +
            (C408 * C83548 + C409 * C153467 +
             (C134 * C329 + C374 + C374 + C153608 * C353) * C153459) *
                C153709) *
               C153838) *
              C153909 +
          ((((C134 * C330 + C375 + C375 + C153608 * C354) * C153459 +
             C410 * C153467 + C411 * C83548) *
                C153709 +
            (C118546 + C118547 + C118548) * C153716 +
            (C118549 + C118550 + C118551) * C116029) *
               C153838 -
           (((C134 * C6301 + C9872 + C9872 + C153608 * C6313) * C83548 +
             C63523 * C153467 + C57130 * C153459) *
                C116029 +
            (C118551 + C118550 + C118549) * C153716 +
            (C118548 + C118547 + C118546) * C153709) *
               C153591) *
              C1601) *
         C153492) /
        (p * q * std::sqrt(p + q));
    d2ee[277] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153608 * C152) * C153459 +
            C193 * C153467 + C194 * C83548) *
               C153709 +
           (C116467 + C116468 + C116469) * C153716 + C116487 * C116029) *
              C153527 * C1310 -
          ((C117226 + C117225 + C117224) * C116029 +
           (C117223 + C117222 + C117221) * C153716 +
           (C408 * C83548 + C409 * C153467 +
            (C134 * C329 + C374 + C374 + C153608 * C353) * C153459) *
               C153709) *
              C153527 * C1311 +
          (((C134 * C330 + C375 + C375 + C153608 * C354) * C153459 +
            C410 * C153467 + C411 * C83548) *
               C153709 +
           (C9879 * C153459 + C7452 * C153467 + C7453 * C83548) * C153716 +
           (C9880 * C153459 + C7454 * C153467 + C7455 * C83548) * C116029) *
              C153527 * C1312 -
          (((C134 * C4957 + C8892 + C8892 + C153608 * C4963) * C83548 +
            (C134 * C4958 + C8893 + C8893 + C153608 * C4964) * C153467 +
            (C134 * C4959 + C8894 + C8894 + C153608 * C4965) * C153459) *
               C116029 +
           ((C134 * C4305 + C8895 + C8895 + C153608 * C4313) * C83548 +
            (C134 * C4304 + C8896 + C8896 + C153608 * C4312) * C153467 +
            (C134 * C4303 + C8897 + C8897 + C153608 * C4311) * C153459) *
               C153716 +
           ((C134 * C1317 + C1333 + C1333 + C153608 * C1327) * C83548 +
            (C134 * C1318 + C1334 + C1334 + C153608 * C1328) * C153467 +
            (C134 * C1319 + C1335 + C1335 + C153608 * C1329) * C153459) *
               C153709) *
              C153527 * C1313) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C153459 +
             C193 * C153467 + C194 * C83548) *
                C153709 +
            (C116467 + C116468 + C116469) * C153716 + C116487 * C116029) *
               C153527 * C1223 -
           ((C117226 + C117225 + C117224) * C116029 +
            (C117223 + C117222 + C117221) * C153716 +
            (C408 * C83548 + C409 * C153467 +
             (C134 * C329 + C374 + C374 + C153608 * C353) * C153459) *
                C153709) *
               C153527 * C153563) *
              C1225 +
          (((C409 * C153459 + C408 * C153467 + C407 * C83548) * C153709 +
            (C117227 + C117228 + C117229) * C153716 +
            (C117230 + C117231 + C117232) * C116029) *
               C153527 * C153563 -
           (C116488 * C116029 + (C116478 + C116477 + C116476) * C153716 +
            (C195 * C83548 + C194 * C153467 + C193 * C153459) * C153709) *
               C153527 * C1223) *
              C1226 +
          (((C194 * C153459 + C195 * C153467 + C196 * C83548) * C153709 +
            (C116925 + C116926 + C116927) * C153716 +
            (C116928 + C116929 + C116930) * C116029) *
               C153527 * C1223 -
           (((C134 * C1457 + C1473 + C1473 + C153608 * C1467) * C83548 +
             C7974 * C153467 + C7450 * C153459) *
                C116029 +
            (C1101 * C83548 + C1100 * C153467 + C1099 * C153459) * C153716 +
            (C406 * C83548 + C407 * C153467 + C408 * C153459) * C153709) *
               C153527 * C153563) *
              C1227)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C153459 +
             C193 * C153467 + C194 * C83548) *
                C153709 +
            (C116467 + C116468 + C116469) * C153716 + C116487 * C116029) *
               C535 -
           ((C116473 + C116474 + C116475) * C116029 +
            (C116472 + C116471 + C116470) * C153716 +
            (C116469 + C116468 + C116467) * C153709) *
               C536 +
           (C116487 * C153709 + (C116475 + C116474 + C116473) * C153716 +
            (C10485 * C153459 + C7739 * C153467 + C7740 * C83548) * C116029) *
               C537) *
              C1223 +
          (((C117221 + C117222 + C117223) * C153709 +
            (C117224 + C117225 + C117226) * C153716 +
            (C117815 + C117816 + C117817) * C116029) *
               C536 -
           (C117819 * C116029 + (C117223 + C117222 + C117221) * C153716 +
            (C408 * C83548 + C409 * C153467 +
             (C134 * C329 + C374 + C374 + C153608 * C353) * C153459) *
                C153709) *
               C535 -
           (((C134 * C9115 + C9130 + C9130 + C153608 * C9121) * C83548 +
             C56372 * C153467 + C56371 * C153459) *
                C116029 +
            (C117817 + C117816 + C117815) * C153716 + C117819 * C153709) *
               C537) *
              C153563) *
         C153492) /
            (p * q * std::sqrt(p + q));
    d2ee[278] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C153608 * C152) * C153459 +
              C193 * C153467 + C194 * C83548) *
                 C153709 +
             (C116467 + C116468 + C116469) * C153716 + C116487 * C116029) *
                C153838 -
            ((C116473 + C116474 + C116475) * C116029 +
             (C116472 + C116471 + C116470) * C153716 +
             (C116469 + C116468 + C116467) * C153709) *
                C153591) *
               C1223 +
           (((C117221 + C117222 + C117223) * C153709 +
             (C117224 + C117225 + C117226) * C153716 +
             (C117815 + C117816 + C117817) * C116029) *
                C153591 -
            (C117819 * C116029 + (C117223 + C117222 + C117221) * C153716 +
             (C408 * C83548 + C409 * C153467 +
              (C134 * C329 + C374 + C374 + C153608 * C353) * C153459) *
                 C153709) *
                C153838) *
               C153563) *
              C153829 +
          ((((C116476 + C116477 + C116478) * C153709 +
             (C116479 + C116480 + C116481) * C153716 +
             (C116482 + C116483 + C116484) * C116029) *
                C153591 -
            (C116488 * C116029 + (C116478 + C116477 + C116476) * C153716 +
             (C195 * C83548 + C194 * C153467 + C193 * C153459) * C153709) *
                C153838) *
               C1223 +
           (((C409 * C153459 + C408 * C153467 + C407 * C83548) * C153709 +
             (C117227 + C117228 + C117229) * C153716 +
             (C117230 + C117231 + C117232) * C116029) *
                C153838 -
            (((C134 * C8488 + C8513 + C8513 + C153608 * C8490) * C83548 +
              C8525 * C153467 + C8524 * C153459) *
                 C116029 +
             (C117232 + C117231 + C117230) * C153716 +
             (C117229 + C117228 + C117227) * C153709) *
                C153591) *
               C153563) *
              C153498)) /
        (p * q * std::sqrt(p + q));
    d2ee[279] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C153459 +
             C193 * C153467 + C194 * C83548) *
                C153709 +
            (C116467 + C116468 + C116469) * C153716 + C116487 * C116029) *
               C153527 * C1223 -
           ((C117226 + C117225 + C117224) * C116029 +
            (C117223 + C117222 + C117221) * C153716 +
            (C408 * C83548 + C409 * C153467 +
             (C134 * C329 + C374 + C374 + C153608 * C353) * C153459) *
                C153709) *
               C153527 * C153563) *
              C1225 +
          (((C409 * C153459 + C408 * C153467 + C407 * C83548) * C153709 +
            (C117227 + C117228 + C117229) * C153716 +
            (C117230 + C117231 + C117232) * C116029) *
               C153527 * C153563 -
           (C116488 * C116029 + (C116478 + C116477 + C116476) * C153716 +
            (C195 * C83548 + C194 * C153467 + C193 * C153459) * C153709) *
               C153527 * C1223) *
              C1226 +
          (((C194 * C153459 + C195 * C153467 + C196 * C83548) * C153709 +
            (C116925 + C116926 + C116927) * C153716 +
            (C116928 + C116929 + C116930) * C116029) *
               C153527 * C1223 -
           (((C134 * C1457 + C1473 + C1473 + C153608 * C1467) * C83548 +
             C7974 * C153467 + C7450 * C153459) *
                C116029 +
            (C1101 * C83548 + C1100 * C153467 + C1099 * C153459) * C153716 +
            (C406 * C83548 + C407 * C153467 + C408 * C153459) * C153709) *
               C153527 * C153563) *
              C1227)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153608 * C152) * C153459 +
            C193 * C153467 + C194 * C83548) *
               C153709 +
           (C116467 + C116468 + C116469) * C153716 + C116487 * C116029) *
              C153527 * C1310 -
          ((C117226 + C117225 + C117224) * C116029 +
           (C117223 + C117222 + C117221) * C153716 +
           (C408 * C83548 + C409 * C153467 +
            (C134 * C329 + C374 + C374 + C153608 * C353) * C153459) *
               C153709) *
              C153527 * C1311 +
          (((C134 * C330 + C375 + C375 + C153608 * C354) * C153459 +
            C410 * C153467 + C411 * C83548) *
               C153709 +
           (C9879 * C153459 + C7452 * C153467 + C7453 * C83548) * C153716 +
           (C9880 * C153459 + C7454 * C153467 + C7455 * C83548) * C116029) *
              C153527 * C1312 -
          (((C134 * C4957 + C8892 + C8892 + C153608 * C4963) * C83548 +
            (C134 * C4958 + C8893 + C8893 + C153608 * C4964) * C153467 +
            (C134 * C4959 + C8894 + C8894 + C153608 * C4965) * C153459) *
               C116029 +
           ((C134 * C4305 + C8895 + C8895 + C153608 * C4313) * C83548 +
            (C134 * C4304 + C8896 + C8896 + C153608 * C4312) * C153467 +
            (C134 * C4303 + C8897 + C8897 + C153608 * C4311) * C153459) *
               C153716 +
           ((C134 * C1317 + C1333 + C1333 + C153608 * C1327) * C83548 +
            (C134 * C1318 + C1334 + C1334 + C153608 * C1328) * C153467 +
            (C134 * C1319 + C1335 + C1335 + C153608 * C1329) * C153459) *
               C153709) *
              C153527 * C1313) *
         C153492) /
            (p * q * std::sqrt(p + q));
    d2ee[280] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C153608 * C152) * C153459 +
              C193 * C153467 + C194 * C83548) *
                 C153709 +
             (C116467 + C116468 + C116469) * C153716 + C116487 * C116029) *
                C2030 -
            (C119138 * C116029 + (C116472 + C116471 + C116470) * C153716 +
             (C116469 + C116468 + C116467) * C153709) *
                C153591) *
               C153837 +
           (((C117221 + C117222 + C117223) * C153709 +
             (C117224 + C117225 + C117226) * C153716 +
             (C117815 + C117816 + C117817) * C116029) *
                C153591 -
            (C117819 * C116029 + (C117223 + C117222 + C117221) * C153716 +
             (C408 * C83548 + C409 * C153467 +
              (C134 * C329 + C374 + C374 + C153608 * C353) * C153459) *
                 C153709) *
                C2030) *
               C153563) *
              C153829 +
          ((((C116476 + C116477 + C116478) * C153709 +
             (C116479 + C116480 + C116481) * C153716 +
             (C116482 + C116483 + C116484) * C116029) *
                C153591 -
            (C116488 * C116029 + (C116478 + C116477 + C116476) * C153716 +
             (C195 * C83548 + C194 * C153467 + C193 * C153459) * C153709) *
                C2030) *
               C153837 +
           (((C409 * C153459 + C408 * C153467 + C407 * C83548) * C153709 +
             (C117227 + C117228 + C117229) * C153716 +
             (C117230 + C117231 + C117232) * C116029) *
                C2030 -
            (((C134 * C8488 + C8513 + C8513 + C153608 * C8490) * C83548 +
              C8525 * C153467 + C8524 * C153459) *
                 C116029 +
             (C117232 + C117231 + C117230) * C153716 +
             (C117229 + C117228 + C117227) * C153709) *
                C153591) *
               C153563) *
              C153498)) /
        (p * q * std::sqrt(p + q));
    d2ee[281] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C153459 +
             C193 * C153467 + C194 * C83548) *
                C153709 +
            (C116467 + C116468 + C116469) * C153716 + C116487 * C116029) *
               C153910 -
           (C119138 * C116029 + (C116472 + C116471 + C116470) * C153716 +
            (C116469 + C116468 + C116467) * C153709) *
               C153911 +
           (C116487 * C153709 + (C116475 + C116474 + C116473) * C153716 +
            (C119135 + C119136 + C119137) * C116029) *
               C2546) *
              C153837 +
          (((C117221 + C117222 + C117223) * C153709 +
            (C117224 + C117225 + C117226) * C153716 +
            (C117815 + C117816 + C117817) * C116029) *
               C153911 -
           (C117819 * C116029 + (C117223 + C117222 + C117221) * C153716 +
            (C408 * C83548 + C409 * C153467 +
             (C134 * C329 + C374 + C374 + C153608 * C353) * C153459) *
                C153709) *
               C153910 -
           (((C134 * C9115 + C9130 + C9130 + C153608 * C9121) * C83548 +
             C56372 * C153467 + C56371 * C153459) *
                C116029 +
            (C117817 + C117816 + C117815) * C153716 + C117819 * C153709) *
               C2546) *
              C153563) *
         C153492) /
        (p * q * std::sqrt(p + q));
    d2ee[282] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C153459 +
             C193 * C153467 + C194 * C83548) *
                C153709 +
            (C116467 + C116468 + C116469) * C153716 + C116487 * C116029) *
               C2030 -
           ((C116473 + C116474 + C116475) * C116029 +
            (C116472 + C116471 + C116470) * C153716 +
            (C116469 + C116468 + C116467) * C153709) *
               C153591) *
              C320 +
          (((C117221 + C117222 + C117223) * C153709 +
            (C117224 + C117225 + C117226) * C153716 +
            (C117815 + C117816 + C117817) * C116029) *
               C153591 -
           (C117819 * C116029 + (C117223 + C117222 + C117221) * C153716 +
            (C408 * C83548 + C409 * C153467 +
             (C134 * C329 + C374 + C374 + C153608 * C353) * C153459) *
                C153709) *
               C2030) *
              C321 +
          ((((C134 * C330 + C375 + C375 + C153608 * C354) * C153459 +
             C410 * C153467 + C411 * C83548) *
                C153709 +
            (C118546 + C118547 + C118548) * C153716 +
            (C118549 + C118550 + C118551) * C116029) *
               C2030 -
           (((C134 * C6301 + C9872 + C9872 + C153608 * C6313) * C83548 +
             C63523 * C153467 + C57130 * C153459) *
                C116029 +
            (C118551 + C118550 + C118549) * C153716 +
            (C118548 + C118547 + C118546) * C153709) *
               C153591) *
              C322) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C153459 +
             C193 * C153467 + C194 * C83548) *
                C153709 +
            (C116467 + C116468 + C116469) * C153716 + C116487 * C116029) *
               C2030 -
           ((C116473 + C116474 + C116475) * C116029 +
            (C116472 + C116471 + C116470) * C153716 +
            (C116469 + C116468 + C116467) * C153709) *
               C153591) *
              C153511 * C1225 +
          (((C116476 + C116477 + C116478) * C153709 +
            (C116479 + C116480 + C116481) * C153716 +
            (C116482 + C116483 + C116484) * C116029) *
               C153591 -
           (C116488 * C116029 + (C116478 + C116477 + C116476) * C153716 +
            (C195 * C83548 + C194 * C153467 + C193 * C153459) * C153709) *
               C2030) *
              C153511 * C1226 +
          (((C194 * C153459 + C195 * C153467 + C196 * C83548) * C153709 +
            (C116925 + C116926 + C116927) * C153716 +
            (C116928 + C116929 + C116930) * C116029) *
               C2030 -
           (((C134 * C2240 + C2256 + C2256 + C153608 * C2250) * C83548 +
             C7741 * C153467 + C7736 * C153459) *
                C116029 +
            (C116930 + C116929 + C116928) * C153716 +
            (C116927 + C116926 + C116925) * C153709) *
               C153591) *
              C153511 * C1227)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153608 * C152) * C153459 +
            C193 * C153467 + C194 * C83548) *
               C153709 +
           (C116467 + C116468 + C116469) * C153716 + C116487 * C116029) *
              C2236 -
          (C119138 * C116029 + (C116472 + C116471 + C116470) * C153716 +
           (C116469 + C116468 + C116467) * C153709) *
              C2237 +
          (C116487 * C153709 + (C116475 + C116474 + C116473) * C153716 +
           (C119135 + C119136 + C119137) * C116029) *
              C2238 -
          (((C134 * C10464 + C10479 + C10479 + C153608 * C10470) * C83548 +
            C55939 * C153467 + C55938 * C153459) *
               C116029 +
           (C119137 + C119136 + C119135) * C153716 + C119138 * C153709) *
              C2239) *
         C153511 * C153492) /
            (p * q * std::sqrt(p + q));
    d2ee[283] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C153459 +
             C193 * C153467 + C194 * C83548) *
                C153709 +
            (C116467 + C116468 + C116469) * C153716 + C116487 * C116029) *
               C153910 -
           (C119138 * C116029 + (C116472 + C116471 + C116470) * C153716 +
            (C116469 + C116468 + C116467) * C153709) *
               C153911 +
           (C116487 * C153709 + (C116475 + C116474 + C116473) * C153716 +
            (C119135 + C119136 + C119137) * C116029) *
               C2546) *
              C153511 * C153829 +
          (((C116476 + C116477 + C116478) * C153709 +
            (C116479 + C116480 + C116481) * C153716 +
            (C116482 + C116483 + C116484) * C116029) *
               C153911 -
           (C116488 * C116029 + (C116478 + C116477 + C116476) * C153716 +
            (C195 * C83548 + C194 * C153467 + C193 * C153459) * C153709) *
               C153910 -
           (((C134 * C7676 + C7715 + C7715 + C153608 * C7684) * C83548 +
             C7740 * C153467 + C7739 * C153459) *
                C116029 +
            (C116484 + C116483 + C116482) * C153716 + C116488 * C153709) *
               C2546) *
              C153511 * C153498)) /
        (p * q * std::sqrt(p + q));
    d2ee[284] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C153459 +
             C193 * C153467 + C194 * C83548) *
                C153709 +
            (C116467 + C116468 + C116469) * C153716 + C116487 * C116029) *
               C2030 -
           ((C116473 + C116474 + C116475) * C116029 +
            (C116472 + C116471 + C116470) * C153716 +
            (C116469 + C116468 + C116467) * C153709) *
               C153591) *
              C153511 * C1225 +
          (((C116476 + C116477 + C116478) * C153709 +
            (C116479 + C116480 + C116481) * C153716 +
            (C116482 + C116483 + C116484) * C116029) *
               C153591 -
           (C116488 * C116029 + (C116478 + C116477 + C116476) * C153716 +
            (C195 * C83548 + C194 * C153467 + C193 * C153459) * C153709) *
               C2030) *
              C153511 * C1226 +
          (((C194 * C153459 + C195 * C153467 + C196 * C83548) * C153709 +
            (C116925 + C116926 + C116927) * C153716 +
            (C116928 + C116929 + C116930) * C116029) *
               C2030 -
           (((C134 * C2240 + C2256 + C2256 + C153608 * C2250) * C83548 +
             C7741 * C153467 + C7736 * C153459) *
                C116029 +
            (C116930 + C116929 + C116928) * C153716 +
            (C116927 + C116926 + C116925) * C153709) *
               C153591) *
              C153511 * C1227)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C153459 +
             C193 * C153467 + C194 * C83548) *
                C153709 +
            (C116467 + C116468 + C116469) * C153716 + C116487 * C116029) *
               C2030 -
           ((C116473 + C116474 + C116475) * C116029 +
            (C116472 + C116471 + C116470) * C153716 +
            (C116469 + C116468 + C116467) * C153709) *
               C153591) *
              C320 +
          (((C117221 + C117222 + C117223) * C153709 +
            (C117224 + C117225 + C117226) * C153716 +
            (C117815 + C117816 + C117817) * C116029) *
               C153591 -
           (C117819 * C116029 + (C117223 + C117222 + C117221) * C153716 +
            (C408 * C83548 + C409 * C153467 +
             (C134 * C329 + C374 + C374 + C153608 * C353) * C153459) *
                C153709) *
               C2030) *
              C321 +
          ((((C134 * C330 + C375 + C375 + C153608 * C354) * C153459 +
             C410 * C153467 + C411 * C83548) *
                C153709 +
            (C118546 + C118547 + C118548) * C153716 +
            (C118549 + C118550 + C118551) * C116029) *
               C2030 -
           (((C134 * C6301 + C9872 + C9872 + C153608 * C6313) * C83548 +
             C63523 * C153467 + C57130 * C153459) *
                C116029 +
            (C118551 + C118550 + C118549) * C153716 +
            (C118548 + C118547 + C118546) * C153709) *
               C153591) *
              C322) *
         C153492) /
            (p * q * std::sqrt(p + q));
    d2ee[285] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C153931 +
             C193 * C153924 + C194 * C153905 + C195 * C153852) *
                C98459 +
            (C98850 + C98851 + C98852 + C98853) * C153713) *
               C153527 * C153837 -
           ((C1100 * C153852 + C1099 * C153905 + C1098 * C153924 +
             C8522 * C153931) *
                C153713 +
            (C407 * C153852 + C408 * C153905 + C409 * C153924 +
             (C134 * C329 + C374 + C374 + C153608 * C353) * C153931) *
                C98459) *
               C153527 * C153563) *
              C153906 +
          (((C409 * C153931 + C408 * C153924 + C407 * C153905 +
             C406 * C153852) *
                C98459 +
            (C1098 * C153931 + C1099 * C153924 + C1100 * C153905 +
             C1101 * C153852) *
                C153713) *
               C153527 * C153563 -
           ((C98861 + C98860 + C98859 + C98858) * C153713 +
            (C196 * C153852 + C195 * C153905 + C194 * C153924 +
             C193 * C153931) *
                C98459) *
               C153527 * C153837) *
              C153907 +
          (((C194 * C153931 + C195 * C153924 + C196 * C153905 +
             C197 * C153852) *
                C98459 +
            (C621 * C153931 + C620 * C153924 + C619 * C153905 +
             C895 * C153852) *
                C153713) *
               C153527 * C153837 -
           (((C134 * C1062 + C1089 + C1089 + C153608 * C1074) * C153852 +
             C1101 * C153905 + C1100 * C153924 + C1099 * C153931) *
                C153713 +
            (C762 * C153852 + C406 * C153905 + C407 * C153924 +
             C408 * C153931) *
                C98459) *
               C153527 * C153563) *
              C752)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
              C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
              C153887 * C354) *
                 C74249 +
             (C2894 + C2895 + C2896) * C153464) *
                C98459 +
            ((C52092 + C52093 + C52094) * C74249 + C102656 * C153464) *
                C153713) *
               C153527 * C153837 -
           (((C4354 + C4353 + C4352) * C153464 +
             (C52877 + C52876 + C52875) * C74249) *
                C153713 +
            ((C3215 + C3216 + C3217) * C153464 +
             (C2825 * C1319 + C3158 + C3158 + C153887 * C1329 + C2823 * C330 +
              C3159 + C3159 + C153913 * C354 + C2821 * C329 + C3160 + C3160 +
              C153925 * C353) *
                 C74249) *
                C98459) *
               C153527 * C153563) *
              C153906 +
          ((((C3217 + C3216 + C3215) * C74249 +
             (C3214 + C3213 + C3212) * C153464) *
                C98459 +
            ((C4352 + C4353 + C4354) * C74249 +
             (C4355 + C4356 + C4357) * C153464) *
                C153713) *
               C153527 * C153563 -
           ((C4004 * C153464 + C102657 * C74249) * C153713 +
            ((C2899 + C2898 + C2897) * C153464 +
             (C2896 + C2895 + C2894) * C74249) *
                C98459) *
               C153527 * C153837) *
              C153907 +
          (((C2908 * C74249 + (C2902 + C2901 + C2900) * C153464) * C98459 +
            ((C3528 + C3527 + C3526) * C74249 +
             (C4011 + C4012 + C4013) * C153464) *
                C153713) *
               C153527 * C153837 -
           (((C2825 * C4306 + C4337 + C4337 + C153887 * C4314 + C2823 * C1889 +
              C4338 + C4338 + C153913 * C1899 + C2821 * C1060 + C4339 + C4339 +
              C153925 * C1072) *
                 C153464 +
             (C4357 + C4356 + C4355) * C74249) *
                C153713 +
            ((C3775 + C3774 + C3773) * C153464 + C3766 * C74249) * C98459) *
               C153527 * C153563) *
              C752)) /
            (p * q * std::sqrt(p + q));
    d2ee[286] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C153608 * C152) * C153931 +
              C193 * C153924 + C194 * C153905 + C195 * C153852) *
                 C98459 +
             (C98850 + C98851 + C98852 + C98853) * C153713) *
                C153838 -
            ((C98854 + C98855 + C98856 + C98857) * C153713 +
             (C98853 + C98852 + C98851 + C98850) * C98459) *
                C153591) *
               C153837 +
           (((C99516 + C99517 + C99518 + C99519) * C98459 +
             (C8523 * C153931 + C7451 * C153924 + C7450 * C153905 +
              C7974 * C153852) *
                 C153713) *
                C153591 -
            ((C99519 + C99518 + C99517 + C99516) * C153713 +
             (C407 * C153852 + C408 * C153905 + C409 * C153924 +
              (C134 * C329 + C374 + C374 + C153608 * C353) * C153931) *
                 C98459) *
                C153838) *
               C153563) *
              C323 +
          ((((C98858 + C98859 + C98860 + C98861) * C98459 +
             (C98862 + C98863 + C98864 + C98865) * C153713) *
                C153591 -
            ((C98861 + C98860 + C98859 + C98858) * C153713 +
             (C196 * C153852 + C195 * C153905 + C194 * C153924 +
              C193 * C153931) *
                 C98459) *
                C153838) *
               C153837 +
           (((C409 * C153931 + C408 * C153924 + C407 * C153905 +
              C406 * C153852) *
                 C98459 +
             (C99520 + C99521 + C99522 + C99523) * C153713) *
                C153838 -
            (((C134 * C1457 + C1473 + C1473 + C153608 * C1467) * C153852 +
              C7974 * C153905 + C7450 * C153924 + C7451 * C153931) *
                 C153713 +
             (C99523 + C99522 + C99521 + C99520) * C98459) *
                C153591) *
               C153563) *
              C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
               C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
               C153887 * C354) *
                  C74249 +
              (C2894 + C2895 + C2896) * C153464) *
                 C98459 +
             ((C52092 + C52093 + C52094) * C74249 + C102656 * C153464) *
                 C153713) *
                C153838 -
            ((C52078 * C153464 + (C52097 + C52096 + C52095) * C74249) *
                 C153713 +
             (C102657 * C153464 + (C52094 + C52093 + C52092) * C74249) *
                 C98459) *
                C153591) *
               C153837 +
           ((((C52875 + C52876 + C52877) * C74249 + C103629 * C153464) *
                 C98459 +
             ((C52878 + C52879 + C52880) * C74249 +
              (C52881 + C52882 + C52883) * C153464) *
                 C153713) *
                C153591 -
            ((C103630 * C153464 + (C52877 + C52876 + C52875) * C74249) *
                 C153713 +
             ((C3215 + C3216 + C3217) * C153464 +
              (C2825 * C1319 + C3158 + C3158 + C153887 * C1329 + C2823 * C330 +
               C3159 + C3159 + C153913 * C354 + C2821 * C329 + C3160 + C3160 +
               C153925 * C353) *
                  C74249) *
                 C98459) *
                C153838) *
               C153563) *
              C323 +
          ((((C102656 * C74249 + C103240 * C153464) * C98459 +
             (C102658 * C74249 + (C3535 + C3536 + C3537) * C153464) * C153713) *
                C153591 -
            ((C4004 * C153464 + C102657 * C74249) * C153713 +
             ((C2899 + C2898 + C2897) * C153464 +
              (C2896 + C2895 + C2894) * C74249) *
                 C98459) *
                C153838) *
               C153837 +
           ((((C3217 + C3216 + C3215) * C74249 +
              (C3214 + C3213 + C3212) * C153464) *
                 C98459 +
             (C103629 * C74249 + (C4355 + C4356 + C4357) * C153464) * C153713) *
                C153838 -
            (((C2825 * C4957 + C4967 + C4967 + C153887 * C4963 + C2823 * C3443 +
               C4968 + C4968 + C153913 * C3451 + C2821 * C1459 + C4969 + C4969 +
               C153925 * C1469) *
                  C153464 +
              (C52883 + C52882 + C52881) * C74249) *
                 C153713 +
             ((C4357 + C4356 + C4355) * C153464 + C103630 * C74249) * C98459) *
                C153591) *
               C153563) *
              C153498)) /
            (p * q * std::sqrt(p + q));
    d2ee[287] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C153931 +
             C193 * C153924 + C194 * C153905 + C195 * C153852) *
                C98459 +
            (C7734 * C153931 + C622 * C153924 + C621 * C153905 +
             C620 * C153852) *
                C153713) *
               C153527 * C320 -
           ((C1100 * C153852 + C1099 * C153905 + C1098 * C153924 +
             C8522 * C153931) *
                C153713 +
            (C407 * C153852 + C408 * C153905 + C409 * C153924 +
             (C134 * C329 + C374 + C374 + C153608 * C353) * C153931) *
                C98459) *
               C153527 * C321 +
           (((C134 * C330 + C375 + C375 + C153608 * C354) * C153931 +
             C410 * C153924 + C411 * C153905 + C412 * C153852) *
                C98459 +
            (C9879 * C153931 + C7452 * C153924 + C7453 * C153905 +
             C15373 * C153852) *
                C153713) *
               C153527 * C322) *
              C323 +
          (((C409 * C153931 + C408 * C153924 + C407 * C153905 +
             C406 * C153852) *
                C98459 +
            (C1098 * C153931 + C1099 * C153924 + C1100 * C153905 +
             C1101 * C153852) *
                C153713) *
               C153527 * C321 -
           ((C619 * C153852 + C620 * C153905 + C621 * C153924 +
             C622 * C153931) *
                C153713 +
            (C196 * C153852 + C195 * C153905 + C194 * C153924 +
             C193 * C153931) *
                C98459) *
               C153527 * C320 -
           (((C134 * C1888 + C1904 + C1904 + C153608 * C1898) * C153852 +
             C15373 * C153905 + C7453 * C153924 + C7452 * C153931) *
                C153713 +
            (C413 * C153852 + C412 * C153905 + C411 * C153924 +
             C410 * C153931) *
                C98459) *
               C153527 * C322) *
              C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153608 * C152) * C153931 +
            C193 * C153924 + C194 * C153905 + C195 * C153852) *
               C98459 +
           (C7734 * C153931 + C622 * C153924 + C621 * C153905 +
            C620 * C153852) *
               C153713) *
              C153527 * C153511 * C130 -
          ((C619 * C153852 + C620 * C153905 + C621 * C153924 + C622 * C153931) *
               C153713 +
           (C196 * C153852 + C195 * C153905 + C194 * C153924 + C193 * C153931) *
               C98459) *
              C153527 * C153511 * C131 +
          ((C194 * C153931 + C195 * C153924 + C196 * C153905 + C197 * C153852) *
               C98459 +
           (C621 * C153931 + C620 * C153924 + C619 * C153905 + C895 * C153852) *
               C153713) *
              C153527 * C153511 * C132 -
          (((C134 * C886 + C892 + C892 + C153608 * C888) * C153852 +
            C895 * C153905 + C619 * C153924 + C620 * C153931) *
               C153713 +
           (C198 * C153852 + C197 * C153905 + C196 * C153924 + C195 * C153931) *
               C98459) *
              C153527 * C153511 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C153931 +
             C193 * C153924 + C194 * C153905 + C195 * C153852) *
                C98459 +
            (C98850 + C98851 + C98852 + C98853) * C153713) *
               C535 -
           ((C98854 + C98855 + C98856 + C98857) * C153713 +
            (C98853 + C98852 + C98851 + C98850) * C98459) *
               C536 +
           ((C98857 + C98856 + C98855 + C98854) * C98459 +
            (C7738 * C153931 + C7737 * C153924 + C7736 * C153905 +
             C7741 * C153852) *
                C153713) *
               C537) *
              C153511 * C323 +
          (((C98858 + C98859 + C98860 + C98861) * C98459 +
            (C98862 + C98863 + C98864 + C98865) * C153713) *
               C536 -
           ((C98861 + C98860 + C98859 + C98858) * C153713 +
            (C196 * C153852 + C195 * C153905 + C194 * C153924 +
             C193 * C153931) *
                C98459) *
               C535 -
           (((C134 * C2240 + C2256 + C2256 + C153608 * C2250) * C153852 +
             C7741 * C153905 + C7736 * C153924 + C7737 * C153931) *
                C153713 +
            (C98865 + C98864 + C98863 + C98862) * C98459) *
               C537) *
              C153511 * C153498)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
             C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
             C153887 * C354) *
                C74249 +
            (C2894 + C2895 + C2896) * C153464) *
               C98459 +
           ((C52092 + C52093 + C52094) * C74249 +
            (C3531 + C3530 + C3529) * C153464) *
               C153713) *
              C153527 * C153511 * C130 -
          ((C4004 * C153464 + (C3529 + C3530 + C3531) * C74249) * C153713 +
           ((C2899 + C2898 + C2897) * C153464 +
            (C2896 + C2895 + C2894) * C74249) *
               C98459) *
              C153527 * C153511 * C131 +
          ((C2908 * C74249 + (C2902 + C2901 + C2900) * C153464) * C98459 +
           ((C3528 + C3527 + C3526) * C74249 +
            (C4011 + C4012 + C4013) * C153464) *
               C153713) *
              C153527 * C153511 * C132 -
          (((C2825 * C1888 + C4001 + C4001 + C153887 * C1898 + C2823 * C1061 +
             C4002 + C4002 + C153913 * C1073 + C2821 * C538 + C4003 + C4003 +
             C153925 * C562) *
                C153464 +
            (C4013 + C4012 + C4011) * C74249) *
               C153713 +
           ((C2905 + C2904 + C2903) * C153464 + C2909 * C74249) * C98459) *
              C153527 * C153511 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
              C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
              C153887 * C354) *
                 C74249 +
             (C2894 + C2895 + C2896) * C153464) *
                C98459 +
            ((C52092 + C52093 + C52094) * C74249 +
             (C3531 + C3530 + C3529) * C153464) *
                C153713) *
               C153527 * C320 -
           (((C4354 + C4353 + C4352) * C153464 +
             (C52877 + C52876 + C52875) * C74249) *
                C153713 +
            ((C3215 + C3216 + C3217) * C153464 +
             (C2825 * C1319 + C3158 + C3158 + C153887 * C1329 + C2823 * C330 +
              C3159 + C3159 + C153913 * C354 + C2821 * C329 + C3160 + C3160 +
              C153925 * C353) *
                 C74249) *
                C98459) *
               C153527 * C321 +
           (((C2821 * C330 + C3161 + C3161 + C153925 * C354 + C2823 * C1319 +
              C3162 + C3162 + C153913 * C1329 + C2825 * C3127 + C3163 + C3163 +
              C153887 * C3135) *
                 C74249 +
             (C3218 + C3219 + C3220) * C153464) *
                C98459 +
            ((C54246 + C54247 + C54248) * C74249 +
             (C102360 + C102361 + C102362) * C153464) *
                C153713) *
               C153527 * C322) *
              C323 +
          ((((C3217 + C3216 + C3215) * C74249 +
             (C3214 + C3213 + C3212) * C153464) *
                C98459 +
            ((C4352 + C4353 + C4354) * C74249 +
             (C4355 + C4356 + C4357) * C153464) *
                C153713) *
               C153527 * C321 -
           ((C4004 * C153464 + (C3529 + C3530 + C3531) * C74249) * C153713 +
            ((C2899 + C2898 + C2897) * C153464 +
             (C2896 + C2895 + C2894) * C74249) *
                C98459) *
               C153527 * C320 -
           (((C2825 * C5701 + C5711 + C5711 + C153887 * C5707 + C2823 * C4305 +
              C5712 + C5712 + C153913 * C4313 + C2821 * C1890 + C5713 + C5713 +
              C153925 * C1900) *
                 C153464 +
             (C102362 + C102361 + C102360) * C74249) *
                C153713 +
            ((C3223 + C3222 + C3221) * C153464 +
             (C3220 + C3219 + C3218) * C74249) *
                C98459) *
               C153527 * C322) *
              C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
              C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
              C153887 * C354) *
                 C74249 +
             (C2894 + C2895 + C2896) * C153464) *
                C98459 +
            ((C52092 + C52093 + C52094) * C74249 + C102656 * C153464) *
                C153713) *
               C535 -
           ((C52078 * C153464 + (C52097 + C52096 + C52095) * C74249) * C153713 +
            (C102657 * C153464 + (C52094 + C52093 + C52092) * C74249) *
                C98459) *
               C536 +
           ((C52105 * C74249 + C102658 * C153464) * C98459 +
            ((C52100 + C52099 + C52098) * C74249 +
             (C52101 + C52102 + C52103) * C153464) *
                C153713) *
               C537) *
              C153511 * C323 +
          (((C102656 * C74249 + (C3528 + C3527 + C3526) * C153464) * C98459 +
            (C102658 * C74249 + (C3535 + C3536 + C3537) * C153464) * C153713) *
               C536 -
           ((C4004 * C153464 + C102657 * C74249) * C153713 +
            ((C2899 + C2898 + C2897) * C153464 +
             (C2896 + C2895 + C2894) * C74249) *
                C98459) *
               C535 -
           (((C2825 * C6301 + C6320 + C6320 + C153887 * C6313 + C2823 * C6302 +
              C6321 + C6321 + C153913 * C6314 + C2821 * C2242 + C6322 + C6322 +
              C153925 * C2252) *
                 C153464 +
             (C52103 + C52102 + C52101) * C74249) *
                C153713 +
            ((C3537 + C3536 + C3535) * C153464 + C52078 * C74249) * C98459) *
               C537) *
              C153511 * C153498)) /
            (p * q * std::sqrt(p + q));
    d2ee[288] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C153931 +
             C193 * C153924 + C194 * C153905 + C195 * C153852) *
                C98459 +
            (C98850 + C98851 + C98852 + C98853) * C153713) *
               C153838 -
           ((C98854 + C98855 + C98856 + C98857) * C153713 +
            (C98853 + C98852 + C98851 + C98850) * C98459) *
               C153591) *
              C153511 * C153906 +
          (((C98858 + C98859 + C98860 + C98861) * C98459 +
            (C98862 + C98863 + C98864 + C98865) * C153713) *
               C153591 -
           ((C98861 + C98860 + C98859 + C98858) * C153713 +
            (C196 * C153852 + C195 * C153905 + C194 * C153924 +
             C193 * C153931) *
                C98459) *
               C153838) *
              C153511 * C153907 +
          (((C194 * C153931 + C195 * C153924 + C196 * C153905 +
             C197 * C153852) *
                C98459 +
            (C99254 + C99255 + C99256 + C99257) * C153713) *
               C153838 -
           (((C134 * C549 + C602 + C602 + C153608 * C573) * C153852 +
             C626 * C153905 + C625 * C153924 + C624 * C153931) *
                C153713 +
            (C99257 + C99256 + C99255 + C99254) * C98459) *
               C153591) *
              C153511 * C752)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
              C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
              C153887 * C354) *
                 C74249 +
             (C2894 + C2895 + C2896) * C153464) *
                C98459 +
            ((C52092 + C52093 + C52094) * C74249 + C102656 * C153464) *
                C153713) *
               C153838 -
           ((C52078 * C153464 + (C52097 + C52096 + C52095) * C74249) * C153713 +
            (C102657 * C153464 + (C52094 + C52093 + C52092) * C74249) *
                C98459) *
               C153591) *
              C153511 * C153906 +
          (((C102656 * C74249 + C103240 * C153464) * C98459 +
            (C102658 * C74249 + (C3535 + C3536 + C3537) * C153464) * C153713) *
               C153591 -
           ((C4004 * C153464 + C102657 * C74249) * C153713 +
            ((C2899 + C2898 + C2897) * C153464 +
             (C2896 + C2895 + C2894) * C74249) *
                C98459) *
               C153838) *
              C153511 * C153907 +
          (((C2908 * C74249 + (C2902 + C2901 + C2900) * C153464) * C98459 +
            (C103240 * C74249 + (C4011 + C4012 + C4013) * C153464) * C153713) *
               C153838 -
           (((C2825 * C3444 + C3499 + C3499 + C153887 * C3452 + C2823 * C1458 +
              C3500 + C3500 + C153913 * C1468 + C2821 * C546 + C3501 + C3501 +
              C153925 * C570) *
                 C153464 +
             (C3537 + C3536 + C3535) * C74249) *
                C153713 +
            ((C4013 + C4012 + C4011) * C153464 + C4004 * C74249) * C98459) *
               C153591) *
              C153511 * C752)) /
            (p * q * std::sqrt(p + q));
    d2ee[289] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153608 * C152) * C153931 +
            C193 * C153924 + C194 * C153905 + C195 * C153852) *
               C98459 +
           (C7734 * C153931 + C622 * C153924 + C621 * C153905 +
            C620 * C153852) *
               C153713) *
              C153527 * C153511 * C130 -
          ((C619 * C153852 + C620 * C153905 + C621 * C153924 + C622 * C153931) *
               C153713 +
           (C196 * C153852 + C195 * C153905 + C194 * C153924 + C193 * C153931) *
               C98459) *
              C153527 * C153511 * C131 +
          ((C194 * C153931 + C195 * C153924 + C196 * C153905 + C197 * C153852) *
               C98459 +
           (C621 * C153931 + C620 * C153924 + C619 * C153905 + C895 * C153852) *
               C153713) *
              C153527 * C153511 * C132 -
          (((C134 * C886 + C892 + C892 + C153608 * C888) * C153852 +
            C895 * C153905 + C619 * C153924 + C620 * C153931) *
               C153713 +
           (C198 * C153852 + C197 * C153905 + C196 * C153924 + C195 * C153931) *
               C98459) *
              C153527 * C153511 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C153931 +
             C193 * C153924 + C194 * C153905 + C195 * C153852) *
                C98459 +
            (C7734 * C153931 + C622 * C153924 + C621 * C153905 +
             C620 * C153852) *
                C153713) *
               C153527 * C320 -
           ((C1100 * C153852 + C1099 * C153905 + C1098 * C153924 +
             C8522 * C153931) *
                C153713 +
            (C407 * C153852 + C408 * C153905 + C409 * C153924 +
             (C134 * C329 + C374 + C374 + C153608 * C353) * C153931) *
                C98459) *
               C153527 * C321 +
           (((C134 * C330 + C375 + C375 + C153608 * C354) * C153931 +
             C410 * C153924 + C411 * C153905 + C412 * C153852) *
                C98459 +
            (C9879 * C153931 + C7452 * C153924 + C7453 * C153905 +
             C15373 * C153852) *
                C153713) *
               C153527 * C322) *
              C323 +
          (((C409 * C153931 + C408 * C153924 + C407 * C153905 +
             C406 * C153852) *
                C98459 +
            (C1098 * C153931 + C1099 * C153924 + C1100 * C153905 +
             C1101 * C153852) *
                C153713) *
               C153527 * C321 -
           ((C619 * C153852 + C620 * C153905 + C621 * C153924 +
             C622 * C153931) *
                C153713 +
            (C196 * C153852 + C195 * C153905 + C194 * C153924 +
             C193 * C153931) *
                C98459) *
               C153527 * C320 -
           (((C134 * C1888 + C1904 + C1904 + C153608 * C1898) * C153852 +
             C15373 * C153905 + C7453 * C153924 + C7452 * C153931) *
                C153713 +
            (C413 * C153852 + C412 * C153905 + C411 * C153924 +
             C410 * C153931) *
                C98459) *
               C153527 * C322) *
              C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
             C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
             C153887 * C354) *
                C74249 +
            (C2894 + C2895 + C2896) * C153464) *
               C98459 +
           ((C52092 + C52093 + C52094) * C74249 +
            (C3531 + C3530 + C3529) * C153464) *
               C153713) *
              C153527 * C153511 * C130 -
          ((C4004 * C153464 + (C3529 + C3530 + C3531) * C74249) * C153713 +
           ((C2899 + C2898 + C2897) * C153464 +
            (C2896 + C2895 + C2894) * C74249) *
               C98459) *
              C153527 * C153511 * C131 +
          ((C2908 * C74249 + (C2902 + C2901 + C2900) * C153464) * C98459 +
           ((C3528 + C3527 + C3526) * C74249 +
            (C4011 + C4012 + C4013) * C153464) *
               C153713) *
              C153527 * C153511 * C132 -
          (((C2825 * C1888 + C4001 + C4001 + C153887 * C1898 + C2823 * C1061 +
             C4002 + C4002 + C153913 * C1073 + C2821 * C538 + C4003 + C4003 +
             C153925 * C562) *
                C153464 +
            (C4013 + C4012 + C4011) * C74249) *
               C153713 +
           ((C2905 + C2904 + C2903) * C153464 + C2909 * C74249) * C98459) *
              C153527 * C153511 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
              C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
              C153887 * C354) *
                 C74249 +
             (C2894 + C2895 + C2896) * C153464) *
                C98459 +
            ((C52092 + C52093 + C52094) * C74249 +
             (C3531 + C3530 + C3529) * C153464) *
                C153713) *
               C153527 * C320 -
           (((C4354 + C4353 + C4352) * C153464 +
             (C52877 + C52876 + C52875) * C74249) *
                C153713 +
            ((C3215 + C3216 + C3217) * C153464 +
             (C2825 * C1319 + C3158 + C3158 + C153887 * C1329 + C2823 * C330 +
              C3159 + C3159 + C153913 * C354 + C2821 * C329 + C3160 + C3160 +
              C153925 * C353) *
                 C74249) *
                C98459) *
               C153527 * C321 +
           (((C2821 * C330 + C3161 + C3161 + C153925 * C354 + C2823 * C1319 +
              C3162 + C3162 + C153913 * C1329 + C2825 * C3127 + C3163 + C3163 +
              C153887 * C3135) *
                 C74249 +
             (C3218 + C3219 + C3220) * C153464) *
                C98459 +
            ((C54246 + C54247 + C54248) * C74249 +
             (C102360 + C102361 + C102362) * C153464) *
                C153713) *
               C153527 * C322) *
              C323 +
          ((((C3217 + C3216 + C3215) * C74249 +
             (C3214 + C3213 + C3212) * C153464) *
                C98459 +
            ((C4352 + C4353 + C4354) * C74249 +
             (C4355 + C4356 + C4357) * C153464) *
                C153713) *
               C153527 * C321 -
           ((C4004 * C153464 + (C3529 + C3530 + C3531) * C74249) * C153713 +
            ((C2899 + C2898 + C2897) * C153464 +
             (C2896 + C2895 + C2894) * C74249) *
                C98459) *
               C153527 * C320 -
           (((C2825 * C5701 + C5711 + C5711 + C153887 * C5707 + C2823 * C4305 +
              C5712 + C5712 + C153913 * C4313 + C2821 * C1890 + C5713 + C5713 +
              C153925 * C1900) *
                 C153464 +
             (C102362 + C102361 + C102360) * C74249) *
                C153713 +
            ((C3223 + C3222 + C3221) * C153464 +
             (C3220 + C3219 + C3218) * C74249) *
                C98459) *
               C153527 * C322) *
              C153498)) /
            (p * q * std::sqrt(p + q));
    d2ee[290] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C153931 +
             C193 * C153924 + C194 * C153905 + C195 * C153852) *
                C98459 +
            (C98850 + C98851 + C98852 + C98853) * C153713) *
               C153527 * C153908 -
           ((C99519 + C99518 + C99517 + C99516) * C153713 +
            (C407 * C153852 + C408 * C153905 + C409 * C153924 +
             (C134 * C329 + C374 + C374 + C153608 * C353) * C153931) *
                C98459) *
               C153527 * C153909 +
           (((C134 * C330 + C375 + C375 + C153608 * C354) * C153931 +
             C410 * C153924 + C411 * C153905 + C412 * C153852) *
                C98459 +
            (C9879 * C153931 + C7452 * C153924 + C7453 * C153905 +
             C15373 * C153852) *
                C153713) *
               C153527 * C1601) *
              C153829 +
          (((C409 * C153931 + C408 * C153924 + C407 * C153905 +
             C406 * C153852) *
                C98459 +
            (C99520 + C99521 + C99522 + C99523) * C153713) *
               C153527 * C153909 -
           ((C98861 + C98860 + C98859 + C98858) * C153713 +
            (C196 * C153852 + C195 * C153905 + C194 * C153924 +
             C193 * C153931) *
                C98459) *
               C153527 * C153908 -
           (((C134 * C1888 + C1904 + C1904 + C153608 * C1898) * C153852 +
             C15373 * C153905 + C7453 * C153924 + C7452 * C153931) *
                C153713 +
            (C413 * C153852 + C412 * C153905 + C411 * C153924 +
             C410 * C153931) *
                C98459) *
               C153527 * C1601) *
              C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
              C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
              C153887 * C354) *
                 C74249 +
             (C2894 + C2895 + C2896) * C153464) *
                C98459 +
            ((C52092 + C52093 + C52094) * C74249 + C102656 * C153464) *
                C153713) *
               C153527 * C153908 -
           ((C103630 * C153464 + (C52877 + C52876 + C52875) * C74249) *
                C153713 +
            ((C3215 + C3216 + C3217) * C153464 +
             (C2825 * C1319 + C3158 + C3158 + C153887 * C1329 + C2823 * C330 +
              C3159 + C3159 + C153913 * C354 + C2821 * C329 + C3160 + C3160 +
              C153925 * C353) *
                 C74249) *
                C98459) *
               C153527 * C153909 +
           (((C2821 * C330 + C3161 + C3161 + C153925 * C354 + C2823 * C1319 +
              C3162 + C3162 + C153913 * C1329 + C2825 * C3127 + C3163 + C3163 +
              C153887 * C3135) *
                 C74249 +
             (C3218 + C3219 + C3220) * C153464) *
                C98459 +
            ((C54246 + C54247 + C54248) * C74249 +
             (C102360 + C102361 + C102362) * C153464) *
                C153713) *
               C153527 * C1601) *
              C153829 +
          ((((C3217 + C3216 + C3215) * C74249 +
             (C3214 + C3213 + C3212) * C153464) *
                C98459 +
            (C103629 * C74249 + (C4355 + C4356 + C4357) * C153464) * C153713) *
               C153527 * C153909 -
           ((C4004 * C153464 + C102657 * C74249) * C153713 +
            ((C2899 + C2898 + C2897) * C153464 +
             (C2896 + C2895 + C2894) * C74249) *
                C98459) *
               C153527 * C153908 -
           (((C2825 * C5701 + C5711 + C5711 + C153887 * C5707 + C2823 * C4305 +
              C5712 + C5712 + C153913 * C4313 + C2821 * C1890 + C5713 + C5713 +
              C153925 * C1900) *
                 C153464 +
             (C102362 + C102361 + C102360) * C74249) *
                C153713 +
            ((C3223 + C3222 + C3221) * C153464 +
             (C3220 + C3219 + C3218) * C74249) *
                C98459) *
               C153527 * C1601) *
              C153498)) /
            (p * q * std::sqrt(p + q));
    d2ee[291] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C153931 +
             C193 * C153924 + C194 * C153905 + C195 * C153852) *
                C98459 +
            (C98850 + C98851 + C98852 + C98853) * C153713) *
               C153838 -
           ((C98854 + C98855 + C98856 + C98857) * C153713 +
            (C98853 + C98852 + C98851 + C98850) * C98459) *
               C153591) *
              C153908 +
          (((C99516 + C99517 + C99518 + C99519) * C98459 +
            (C100042 + C100043 + C100044 + C100045) * C153713) *
               C153591 -
           ((C99519 + C99518 + C99517 + C99516) * C153713 +
            (C407 * C153852 + C408 * C153905 + C409 * C153924 +
             (C134 * C329 + C374 + C374 + C153608 * C353) * C153931) *
                C98459) *
               C153838) *
              C153909 +
          ((((C134 * C330 + C375 + C375 + C153608 * C354) * C153931 +
             C410 * C153924 + C411 * C153905 + C412 * C153852) *
                C98459 +
            (C100692 + C100693 + C100694 + C100695) * C153713) *
               C153838 -
           (((C134 * C3444 + C7437 + C7437 + C153608 * C3452) * C153852 +
             C7455 * C153905 + C7454 * C153924 + C9880 * C153931) *
                C153713 +
            (C100695 + C100694 + C100693 + C100692) * C98459) *
               C153591) *
              C1601) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
              C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
              C153887 * C354) *
                 C74249 +
             (C2894 + C2895 + C2896) * C153464) *
                C98459 +
            ((C52092 + C52093 + C52094) * C74249 + C102656 * C153464) *
                C153713) *
               C153838 -
           ((C52078 * C153464 + (C52097 + C52096 + C52095) * C74249) * C153713 +
            (C102657 * C153464 + (C52094 + C52093 + C52092) * C74249) *
                C98459) *
               C153591) *
              C153908 +
          ((((C52875 + C52876 + C52877) * C74249 + C103629 * C153464) * C98459 +
            ((C52878 + C52879 + C52880) * C74249 +
             (C52881 + C52882 + C52883) * C153464) *
                C153713) *
               C153591 -
           ((C103630 * C153464 + (C52877 + C52876 + C52875) * C74249) *
                C153713 +
            ((C3215 + C3216 + C3217) * C153464 +
             (C2825 * C1319 + C3158 + C3158 + C153887 * C1329 + C2823 * C330 +
              C3159 + C3159 + C153913 * C354 + C2821 * C329 + C3160 + C3160 +
              C153925 * C353) *
                 C74249) *
                C98459) *
               C153838) *
              C153909 +
          ((((C2821 * C330 + C3161 + C3161 + C153925 * C354 + C2823 * C1319 +
              C3162 + C3162 + C153913 * C1329 + C2825 * C3127 + C3163 + C3163 +
              C153887 * C3135) *
                 C74249 +
             (C3218 + C3219 + C3220) * C153464) *
                C98459 +
            ((C54246 + C54247 + C54248) * C74249 +
             (C102360 + C102361 + C102362) * C153464) *
                C153713) *
               C153838 -
           (((C2825 * C28651 + C51814 + C51814 + C153887 * C28655 +
              C2823 * C4958 + C51815 + C51815 + C153913 * C4964 +
              C2821 * C3442 + C51816 + C51816 + C153925 * C3450) *
                 C153464 +
             (C54251 + C54250 + C54249) * C74249) *
                C153713 +
            ((C102362 + C102361 + C102360) * C153464 +
             (C54248 + C54247 + C54246) * C74249) *
                C98459) *
               C153591) *
              C1601) *
         C153492) /
            (p * q * std::sqrt(p + q));
    d2ee[292] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153608 * C152) * C153931 +
            C193 * C153924 + C194 * C153905 + C195 * C153852) *
               C98459 +
           (C98850 + C98851 + C98852 + C98853) * C153713) *
              C153527 * C1310 -
          ((C99519 + C99518 + C99517 + C99516) * C153713 +
           (C407 * C153852 + C408 * C153905 + C409 * C153924 +
            (C134 * C329 + C374 + C374 + C153608 * C353) * C153931) *
               C98459) *
              C153527 * C1311 +
          (((C134 * C330 + C375 + C375 + C153608 * C354) * C153931 +
            C410 * C153924 + C411 * C153905 + C412 * C153852) *
               C98459 +
           (C9879 * C153931 + C7452 * C153924 + C7453 * C153905 +
            C15373 * C153852) *
               C153713) *
              C153527 * C1312 -
          (((C134 * C4306 + C16566 + C16566 + C153608 * C4314) * C153852 +
            (C134 * C4305 + C8895 + C8895 + C153608 * C4313) * C153905 +
            (C134 * C4304 + C8896 + C8896 + C153608 * C4312) * C153924 +
            (C134 * C4303 + C8897 + C8897 + C153608 * C4311) * C153931) *
               C153713 +
           ((C134 * C1316 + C1332 + C1332 + C153608 * C1326) * C153852 +
            (C134 * C1317 + C1333 + C1333 + C153608 * C1327) * C153905 +
            (C134 * C1318 + C1334 + C1334 + C153608 * C1328) * C153924 +
            (C134 * C1319 + C1335 + C1335 + C153608 * C1329) * C153931) *
               C98459) *
              C153527 * C1313) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C153931 +
             C193 * C153924 + C194 * C153905 + C195 * C153852) *
                C98459 +
            (C98850 + C98851 + C98852 + C98853) * C153713) *
               C153527 * C1223 -
           ((C99519 + C99518 + C99517 + C99516) * C153713 +
            (C407 * C153852 + C408 * C153905 + C409 * C153924 +
             (C134 * C329 + C374 + C374 + C153608 * C353) * C153931) *
                C98459) *
               C153527 * C153563) *
              C1225 +
          (((C409 * C153931 + C408 * C153924 + C407 * C153905 +
             C406 * C153852) *
                C98459 +
            (C99520 + C99521 + C99522 + C99523) * C153713) *
               C153527 * C153563 -
           ((C98861 + C98860 + C98859 + C98858) * C153713 +
            (C196 * C153852 + C195 * C153905 + C194 * C153924 +
             C193 * C153931) *
                C98459) *
               C153527 * C1223) *
              C1226 +
          (((C194 * C153931 + C195 * C153924 + C196 * C153905 +
             C197 * C153852) *
                C98459 +
            (C99254 + C99255 + C99256 + C99257) * C153713) *
               C153527 * C1223 -
           (((C134 * C1062 + C1089 + C1089 + C153608 * C1074) * C153852 +
             C1101 * C153905 + C1100 * C153924 + C1099 * C153931) *
                C153713 +
            (C762 * C153852 + C406 * C153905 + C407 * C153924 +
             C408 * C153931) *
                C98459) *
               C153527 * C153563) *
              C1227)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C153931 +
             C193 * C153924 + C194 * C153905 + C195 * C153852) *
                C98459 +
            (C98850 + C98851 + C98852 + C98853) * C153713) *
               C535 -
           ((C98854 + C98855 + C98856 + C98857) * C153713 +
            (C98853 + C98852 + C98851 + C98850) * C98459) *
               C536 +
           ((C98857 + C98856 + C98855 + C98854) * C98459 +
            (C7738 * C153931 + C7737 * C153924 + C7736 * C153905 +
             C7741 * C153852) *
                C153713) *
               C537) *
              C1223 +
          (((C99516 + C99517 + C99518 + C99519) * C98459 +
            (C100042 + C100043 + C100044 + C100045) * C153713) *
               C536 -
           ((C99519 + C99518 + C99517 + C99516) * C153713 +
            (C407 * C153852 + C408 * C153905 + C409 * C153924 +
             (C134 * C329 + C374 + C374 + C153608 * C353) * C153931) *
                C98459) *
               C535 -
           (((C134 * C8488 + C8513 + C8513 + C153608 * C8490) * C153852 +
             C8525 * C153905 + C8524 * C153924 + C9136 * C153931) *
                C153713 +
            (C100045 + C100044 + C100043 + C100042) * C98459) *
               C537) *
              C153563) *
         C153492) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
              C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
              C153887 * C354) *
                 C74249 +
             (C2894 + C2895 + C2896) * C153464) *
                C98459 +
            ((C52092 + C52093 + C52094) * C74249 + C102656 * C153464) *
                C153713) *
               C153527 * C1223 -
           ((C103630 * C153464 + (C52877 + C52876 + C52875) * C74249) *
                C153713 +
            ((C3215 + C3216 + C3217) * C153464 +
             (C2825 * C1319 + C3158 + C3158 + C153887 * C1329 + C2823 * C330 +
              C3159 + C3159 + C153913 * C354 + C2821 * C329 + C3160 + C3160 +
              C153925 * C353) *
                 C74249) *
                C98459) *
               C153527 * C153563) *
              C1225 +
          ((((C3217 + C3216 + C3215) * C74249 +
             (C3214 + C3213 + C3212) * C153464) *
                C98459 +
            (C103629 * C74249 + (C4355 + C4356 + C4357) * C153464) * C153713) *
               C153527 * C153563 -
           ((C4004 * C153464 + C102657 * C74249) * C153713 +
            ((C2899 + C2898 + C2897) * C153464 +
             (C2896 + C2895 + C2894) * C74249) *
                C98459) *
               C153527 * C1223) *
              C1226 +
          (((C2908 * C74249 + (C2902 + C2901 + C2900) * C153464) * C98459 +
            (C103240 * C74249 + (C4011 + C4012 + C4013) * C153464) * C153713) *
               C153527 * C1223 -
           (((C2825 * C4306 + C4337 + C4337 + C153887 * C4314 + C2823 * C1889 +
              C4338 + C4338 + C153913 * C1899 + C2821 * C1060 + C4339 + C4339 +
              C153925 * C1072) *
                 C153464 +
             (C4357 + C4356 + C4355) * C74249) *
                C153713 +
            ((C3775 + C3774 + C3773) * C153464 + C3766 * C74249) * C98459) *
               C153527 * C153563) *
              C1227)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
             C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
             C153887 * C354) *
                C74249 +
            (C2894 + C2895 + C2896) * C153464) *
               C98459 +
           ((C52092 + C52093 + C52094) * C74249 + C102656 * C153464) *
               C153713) *
              C153527 * C1310 -
          ((C103630 * C153464 + (C52877 + C52876 + C52875) * C74249) * C153713 +
           ((C3215 + C3216 + C3217) * C153464 +
            (C2825 * C1319 + C3158 + C3158 + C153887 * C1329 + C2823 * C330 +
             C3159 + C3159 + C153913 * C354 + C2821 * C329 + C3160 + C3160 +
             C153925 * C353) *
                C74249) *
               C98459) *
              C153527 * C1311 +
          (((C2821 * C330 + C3161 + C3161 + C153925 * C354 + C2823 * C1319 +
             C3162 + C3162 + C153913 * C1329 + C2825 * C3127 + C3163 + C3163 +
             C153887 * C3135) *
                C74249 +
            (C3218 + C3219 + C3220) * C153464) *
               C98459 +
           ((C54246 + C54247 + C54248) * C74249 +
            (C102360 + C102361 + C102362) * C153464) *
               C153713) *
              C153527 * C1312 -
          (((C2825 * C29093 + C104115 + C104115 + C153887 * C29097 +
             C2823 * C5702 + C104116 + C104116 + C153913 * C5708 +
             C2821 * C4304 + C104117 + C104117 + C153925 * C4312) *
                C153464 +
            (C2825 * C29092 + C53251 + C53251 + C153887 * C29096 +
             C2823 * C5703 + C53252 + C53252 + C153913 * C5709 + C2821 * C4303 +
             C53253 + C53253 + C153925 * C4311) *
                C74249) *
               C153713 +
           ((C2825 * C4722 + C4734 + C4734 + C153887 * C4728 + C2823 * C3128 +
             C4735 + C4735 + C153913 * C3136 + C2821 * C1318 + C4736 + C4736 +
             C153925 * C1328) *
                C153464 +
            (C2825 * C4723 + C4737 + C4737 + C153887 * C4729 + C2823 * C3127 +
             C4738 + C4738 + C153913 * C3135 + C2821 * C1319 + C4739 + C4739 +
             C153925 * C1329) *
                C74249) *
               C98459) *
              C153527 * C1313) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
              C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
              C153887 * C354) *
                 C74249 +
             (C2894 + C2895 + C2896) * C153464) *
                C98459 +
            ((C52092 + C52093 + C52094) * C74249 + C102656 * C153464) *
                C153713) *
               C535 -
           ((C52078 * C153464 + (C52097 + C52096 + C52095) * C74249) * C153713 +
            (C102657 * C153464 + (C52094 + C52093 + C52092) * C74249) *
                C98459) *
               C536 +
           ((C52105 * C74249 + C102658 * C153464) * C98459 +
            ((C52100 + C52099 + C52098) * C74249 +
             (C52101 + C52102 + C52103) * C153464) *
                C153713) *
               C537) *
              C1223 +
          ((((C52875 + C52876 + C52877) * C74249 + C103629 * C153464) * C98459 +
            ((C52878 + C52879 + C52880) * C74249 +
             (C52881 + C52882 + C52883) * C153464) *
                C153713) *
               C536 -
           ((C103630 * C153464 + (C52877 + C52876 + C52875) * C74249) *
                C153713 +
            ((C3215 + C3216 + C3217) * C153464 +
             (C2825 * C1319 + C3158 + C3158 + C153887 * C1329 + C2823 * C330 +
              C3159 + C3159 + C153913 * C354 + C2821 * C329 + C3160 + C3160 +
              C153925 * C353) *
                 C74249) *
                C98459) *
               C535 -
           (((C2825 * C31999 + C52854 + C52854 + C153887 * C32001 +
              C2823 * C6303 + C52855 + C52855 + C153913 * C6315 +
              C2821 * C6304 + C52856 + C52856 + C153925 * C6316) *
                 C153464 +
             (C53492 + C53491 + C53490) * C74249) *
                C153713 +
            ((C52883 + C52882 + C52881) * C153464 + C53485 * C74249) * C98459) *
               C537) *
              C153563) *
         C153492) /
            (p * q * std::sqrt(p + q));
    d2ee[293] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C153608 * C152) * C153931 +
              C193 * C153924 + C194 * C153905 + C195 * C153852) *
                 C98459 +
             (C98850 + C98851 + C98852 + C98853) * C153713) *
                C153838 -
            ((C98854 + C98855 + C98856 + C98857) * C153713 +
             (C98853 + C98852 + C98851 + C98850) * C98459) *
                C153591) *
               C1223 +
           (((C99516 + C99517 + C99518 + C99519) * C98459 +
             (C100042 + C100043 + C100044 + C100045) * C153713) *
                C153591 -
            ((C99519 + C99518 + C99517 + C99516) * C153713 +
             (C407 * C153852 + C408 * C153905 + C409 * C153924 +
              (C134 * C329 + C374 + C374 + C153608 * C353) * C153931) *
                 C98459) *
                C153838) *
               C153563) *
              C153829 +
          ((((C98858 + C98859 + C98860 + C98861) * C98459 +
             (C98862 + C98863 + C98864 + C98865) * C153713) *
                C153591 -
            ((C98861 + C98860 + C98859 + C98858) * C153713 +
             (C196 * C153852 + C195 * C153905 + C194 * C153924 +
              C193 * C153931) *
                 C98459) *
                C153838) *
               C1223 +
           (((C409 * C153931 + C408 * C153924 + C407 * C153905 +
              C406 * C153852) *
                 C98459 +
             (C99520 + C99521 + C99522 + C99523) * C153713) *
                C153838 -
            (((C134 * C1457 + C1473 + C1473 + C153608 * C1467) * C153852 +
              C7974 * C153905 + C7450 * C153924 + C7451 * C153931) *
                 C153713 +
             (C99523 + C99522 + C99521 + C99520) * C98459) *
                C153591) *
               C153563) *
              C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
               C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
               C153887 * C354) *
                  C74249 +
              (C2894 + C2895 + C2896) * C153464) *
                 C98459 +
             ((C52092 + C52093 + C52094) * C74249 + C102656 * C153464) *
                 C153713) *
                C153838 -
            ((C52078 * C153464 + (C52097 + C52096 + C52095) * C74249) *
                 C153713 +
             (C102657 * C153464 + (C52094 + C52093 + C52092) * C74249) *
                 C98459) *
                C153591) *
               C1223 +
           ((((C52875 + C52876 + C52877) * C74249 + C103629 * C153464) *
                 C98459 +
             ((C52878 + C52879 + C52880) * C74249 +
              (C52881 + C52882 + C52883) * C153464) *
                 C153713) *
                C153591 -
            ((C103630 * C153464 + (C52877 + C52876 + C52875) * C74249) *
                 C153713 +
             ((C3215 + C3216 + C3217) * C153464 +
              (C2825 * C1319 + C3158 + C3158 + C153887 * C1329 + C2823 * C330 +
               C3159 + C3159 + C153913 * C354 + C2821 * C329 + C3160 + C3160 +
               C153925 * C353) *
                  C74249) *
                 C98459) *
                C153838) *
               C153563) *
              C153829 +
          ((((C102656 * C74249 + C103240 * C153464) * C98459 +
             (C102658 * C74249 + (C3535 + C3536 + C3537) * C153464) * C153713) *
                C153591 -
            ((C4004 * C153464 + C102657 * C74249) * C153713 +
             ((C2899 + C2898 + C2897) * C153464 +
              (C2896 + C2895 + C2894) * C74249) *
                 C98459) *
                C153838) *
               C1223 +
           ((((C3217 + C3216 + C3215) * C74249 +
              (C3214 + C3213 + C3212) * C153464) *
                 C98459 +
             (C103629 * C74249 + (C4355 + C4356 + C4357) * C153464) * C153713) *
                C153838 -
            (((C2825 * C4957 + C4967 + C4967 + C153887 * C4963 + C2823 * C3443 +
               C4968 + C4968 + C153913 * C3451 + C2821 * C1459 + C4969 + C4969 +
               C153925 * C1469) *
                  C153464 +
              (C52883 + C52882 + C52881) * C74249) *
                 C153713 +
             ((C4357 + C4356 + C4355) * C153464 + C103630 * C74249) * C98459) *
                C153591) *
               C153563) *
              C153498)) /
            (p * q * std::sqrt(p + q));
    d2ee[294] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C153931 +
             C193 * C153924 + C194 * C153905 + C195 * C153852) *
                C98459 +
            (C98850 + C98851 + C98852 + C98853) * C153713) *
               C153527 * C1223 -
           ((C99519 + C99518 + C99517 + C99516) * C153713 +
            (C407 * C153852 + C408 * C153905 + C409 * C153924 +
             (C134 * C329 + C374 + C374 + C153608 * C353) * C153931) *
                C98459) *
               C153527 * C153563) *
              C1225 +
          (((C409 * C153931 + C408 * C153924 + C407 * C153905 +
             C406 * C153852) *
                C98459 +
            (C99520 + C99521 + C99522 + C99523) * C153713) *
               C153527 * C153563 -
           ((C98861 + C98860 + C98859 + C98858) * C153713 +
            (C196 * C153852 + C195 * C153905 + C194 * C153924 +
             C193 * C153931) *
                C98459) *
               C153527 * C1223) *
              C1226 +
          (((C194 * C153931 + C195 * C153924 + C196 * C153905 +
             C197 * C153852) *
                C98459 +
            (C99254 + C99255 + C99256 + C99257) * C153713) *
               C153527 * C1223 -
           (((C134 * C1062 + C1089 + C1089 + C153608 * C1074) * C153852 +
             C1101 * C153905 + C1100 * C153924 + C1099 * C153931) *
                C153713 +
            (C762 * C153852 + C406 * C153905 + C407 * C153924 +
             C408 * C153931) *
                C98459) *
               C153527 * C153563) *
              C1227)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153608 * C152) * C153931 +
            C193 * C153924 + C194 * C153905 + C195 * C153852) *
               C98459 +
           (C98850 + C98851 + C98852 + C98853) * C153713) *
              C153527 * C1310 -
          ((C99519 + C99518 + C99517 + C99516) * C153713 +
           (C407 * C153852 + C408 * C153905 + C409 * C153924 +
            (C134 * C329 + C374 + C374 + C153608 * C353) * C153931) *
               C98459) *
              C153527 * C1311 +
          (((C134 * C330 + C375 + C375 + C153608 * C354) * C153931 +
            C410 * C153924 + C411 * C153905 + C412 * C153852) *
               C98459 +
           (C9879 * C153931 + C7452 * C153924 + C7453 * C153905 +
            C15373 * C153852) *
               C153713) *
              C153527 * C1312 -
          (((C134 * C4306 + C16566 + C16566 + C153608 * C4314) * C153852 +
            (C134 * C4305 + C8895 + C8895 + C153608 * C4313) * C153905 +
            (C134 * C4304 + C8896 + C8896 + C153608 * C4312) * C153924 +
            (C134 * C4303 + C8897 + C8897 + C153608 * C4311) * C153931) *
               C153713 +
           ((C134 * C1316 + C1332 + C1332 + C153608 * C1326) * C153852 +
            (C134 * C1317 + C1333 + C1333 + C153608 * C1327) * C153905 +
            (C134 * C1318 + C1334 + C1334 + C153608 * C1328) * C153924 +
            (C134 * C1319 + C1335 + C1335 + C153608 * C1329) * C153931) *
               C98459) *
              C153527 * C1313) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
              C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
              C153887 * C354) *
                 C74249 +
             (C2894 + C2895 + C2896) * C153464) *
                C98459 +
            ((C52092 + C52093 + C52094) * C74249 + C102656 * C153464) *
                C153713) *
               C153527 * C1223 -
           ((C103630 * C153464 + (C52877 + C52876 + C52875) * C74249) *
                C153713 +
            ((C3215 + C3216 + C3217) * C153464 +
             (C2825 * C1319 + C3158 + C3158 + C153887 * C1329 + C2823 * C330 +
              C3159 + C3159 + C153913 * C354 + C2821 * C329 + C3160 + C3160 +
              C153925 * C353) *
                 C74249) *
                C98459) *
               C153527 * C153563) *
              C1225 +
          ((((C3217 + C3216 + C3215) * C74249 +
             (C3214 + C3213 + C3212) * C153464) *
                C98459 +
            (C103629 * C74249 + (C4355 + C4356 + C4357) * C153464) * C153713) *
               C153527 * C153563 -
           ((C4004 * C153464 + C102657 * C74249) * C153713 +
            ((C2899 + C2898 + C2897) * C153464 +
             (C2896 + C2895 + C2894) * C74249) *
                C98459) *
               C153527 * C1223) *
              C1226 +
          (((C2908 * C74249 + (C2902 + C2901 + C2900) * C153464) * C98459 +
            (C103240 * C74249 + (C4011 + C4012 + C4013) * C153464) * C153713) *
               C153527 * C1223 -
           (((C2825 * C4306 + C4337 + C4337 + C153887 * C4314 + C2823 * C1889 +
              C4338 + C4338 + C153913 * C1899 + C2821 * C1060 + C4339 + C4339 +
              C153925 * C1072) *
                 C153464 +
             (C4357 + C4356 + C4355) * C74249) *
                C153713 +
            ((C3775 + C3774 + C3773) * C153464 + C3766 * C74249) * C98459) *
               C153527 * C153563) *
              C1227)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
             C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
             C153887 * C354) *
                C74249 +
            (C2894 + C2895 + C2896) * C153464) *
               C98459 +
           ((C52092 + C52093 + C52094) * C74249 + C102656 * C153464) *
               C153713) *
              C153527 * C1310 -
          ((C103630 * C153464 + (C52877 + C52876 + C52875) * C74249) * C153713 +
           ((C3215 + C3216 + C3217) * C153464 +
            (C2825 * C1319 + C3158 + C3158 + C153887 * C1329 + C2823 * C330 +
             C3159 + C3159 + C153913 * C354 + C2821 * C329 + C3160 + C3160 +
             C153925 * C353) *
                C74249) *
               C98459) *
              C153527 * C1311 +
          (((C2821 * C330 + C3161 + C3161 + C153925 * C354 + C2823 * C1319 +
             C3162 + C3162 + C153913 * C1329 + C2825 * C3127 + C3163 + C3163 +
             C153887 * C3135) *
                C74249 +
            (C3218 + C3219 + C3220) * C153464) *
               C98459 +
           ((C54246 + C54247 + C54248) * C74249 +
            (C102360 + C102361 + C102362) * C153464) *
               C153713) *
              C153527 * C1312 -
          (((C2825 * C29093 + C104115 + C104115 + C153887 * C29097 +
             C2823 * C5702 + C104116 + C104116 + C153913 * C5708 +
             C2821 * C4304 + C104117 + C104117 + C153925 * C4312) *
                C153464 +
            (C2825 * C29092 + C53251 + C53251 + C153887 * C29096 +
             C2823 * C5703 + C53252 + C53252 + C153913 * C5709 + C2821 * C4303 +
             C53253 + C53253 + C153925 * C4311) *
                C74249) *
               C153713 +
           ((C2825 * C4722 + C4734 + C4734 + C153887 * C4728 + C2823 * C3128 +
             C4735 + C4735 + C153913 * C3136 + C2821 * C1318 + C4736 + C4736 +
             C153925 * C1328) *
                C153464 +
            (C2825 * C4723 + C4737 + C4737 + C153887 * C4729 + C2823 * C3127 +
             C4738 + C4738 + C153913 * C3135 + C2821 * C1319 + C4739 + C4739 +
             C153925 * C1329) *
                C74249) *
               C98459) *
              C153527 * C1313) *
         C153492) /
            (p * q * std::sqrt(p + q));
    d2ee[295] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C153608 * C152) * C153931 +
              C193 * C153924 + C194 * C153905 + C195 * C153852) *
                 C98459 +
             (C98850 + C98851 + C98852 + C98853) * C153713) *
                C2030 -
            ((C98854 + C98855 + C98856 + C98857) * C153713 +
             (C98853 + C98852 + C98851 + C98850) * C98459) *
                C153591) *
               C153837 +
           (((C99516 + C99517 + C99518 + C99519) * C98459 +
             (C100042 + C100043 + C100044 + C100045) * C153713) *
                C153591 -
            ((C99519 + C99518 + C99517 + C99516) * C153713 +
             (C407 * C153852 + C408 * C153905 + C409 * C153924 +
              (C134 * C329 + C374 + C374 + C153608 * C353) * C153931) *
                 C98459) *
                C2030) *
               C153563) *
              C153829 +
          ((((C98858 + C98859 + C98860 + C98861) * C98459 +
             (C98862 + C98863 + C98864 + C98865) * C153713) *
                C153591 -
            ((C98861 + C98860 + C98859 + C98858) * C153713 +
             (C196 * C153852 + C195 * C153905 + C194 * C153924 +
              C193 * C153931) *
                 C98459) *
                C2030) *
               C153837 +
           (((C409 * C153931 + C408 * C153924 + C407 * C153905 +
              C406 * C153852) *
                 C98459 +
             (C99520 + C99521 + C99522 + C99523) * C153713) *
                C2030 -
            (((C134 * C1457 + C1473 + C1473 + C153608 * C1467) * C153852 +
              C7974 * C153905 + C7450 * C153924 + C7451 * C153931) *
                 C153713 +
             (C99523 + C99522 + C99521 + C99520) * C98459) *
                C153591) *
               C153563) *
              C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
               C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
               C153887 * C354) *
                  C74249 +
              (C2894 + C2895 + C2896) * C153464) *
                 C98459 +
             ((C52092 + C52093 + C52094) * C74249 + C102656 * C153464) *
                 C153713) *
                C2030 -
            ((C52078 * C153464 + (C52097 + C52096 + C52095) * C74249) *
                 C153713 +
             (C102657 * C153464 + (C52094 + C52093 + C52092) * C74249) *
                 C98459) *
                C153591) *
               C153837 +
           ((((C52875 + C52876 + C52877) * C74249 + C103629 * C153464) *
                 C98459 +
             ((C52878 + C52879 + C52880) * C74249 +
              (C52881 + C52882 + C52883) * C153464) *
                 C153713) *
                C153591 -
            ((C103630 * C153464 + (C52877 + C52876 + C52875) * C74249) *
                 C153713 +
             ((C3215 + C3216 + C3217) * C153464 +
              (C2825 * C1319 + C3158 + C3158 + C153887 * C1329 + C2823 * C330 +
               C3159 + C3159 + C153913 * C354 + C2821 * C329 + C3160 + C3160 +
               C153925 * C353) *
                  C74249) *
                 C98459) *
                C2030) *
               C153563) *
              C153829 +
          ((((C102656 * C74249 + C103240 * C153464) * C98459 +
             (C102658 * C74249 + (C3535 + C3536 + C3537) * C153464) * C153713) *
                C153591 -
            ((C4004 * C153464 + C102657 * C74249) * C153713 +
             ((C2899 + C2898 + C2897) * C153464 +
              (C2896 + C2895 + C2894) * C74249) *
                 C98459) *
                C2030) *
               C153837 +
           ((((C3217 + C3216 + C3215) * C74249 +
              (C3214 + C3213 + C3212) * C153464) *
                 C98459 +
             (C103629 * C74249 + (C4355 + C4356 + C4357) * C153464) * C153713) *
                C2030 -
            (((C2825 * C4957 + C4967 + C4967 + C153887 * C4963 + C2823 * C3443 +
               C4968 + C4968 + C153913 * C3451 + C2821 * C1459 + C4969 + C4969 +
               C153925 * C1469) *
                  C153464 +
              (C52883 + C52882 + C52881) * C74249) *
                 C153713 +
             ((C4357 + C4356 + C4355) * C153464 + C103630 * C74249) * C98459) *
                C153591) *
               C153563) *
              C153498)) /
            (p * q * std::sqrt(p + q));
    d2ee[296] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C153931 +
             C193 * C153924 + C194 * C153905 + C195 * C153852) *
                C98459 +
            (C98850 + C98851 + C98852 + C98853) * C153713) *
               C153910 -
           ((C98854 + C98855 + C98856 + C98857) * C153713 +
            (C98853 + C98852 + C98851 + C98850) * C98459) *
               C153911 +
           ((C98857 + C98856 + C98855 + C98854) * C98459 +
            (C101214 + C101215 + C101216 + C101217) * C153713) *
               C2546) *
              C153837 +
          (((C99516 + C99517 + C99518 + C99519) * C98459 +
            (C100042 + C100043 + C100044 + C100045) * C153713) *
               C153911 -
           ((C99519 + C99518 + C99517 + C99516) * C153713 +
            (C407 * C153852 + C408 * C153905 + C409 * C153924 +
             (C134 * C329 + C374 + C374 + C153608 * C353) * C153931) *
                C98459) *
               C153910 -
           (((C134 * C8488 + C8513 + C8513 + C153608 * C8490) * C153852 +
             C8525 * C153905 + C8524 * C153924 + C9136 * C153931) *
                C153713 +
            (C100045 + C100044 + C100043 + C100042) * C98459) *
               C2546) *
              C153563) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
              C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
              C153887 * C354) *
                 C74249 +
             (C2894 + C2895 + C2896) * C153464) *
                C98459 +
            ((C52092 + C52093 + C52094) * C74249 + C102656 * C153464) *
                C153713) *
               C153910 -
           ((C52078 * C153464 + (C52097 + C52096 + C52095) * C74249) * C153713 +
            (C102657 * C153464 + (C52094 + C52093 + C52092) * C74249) *
                C98459) *
               C153911 +
           ((C52105 * C74249 + C102658 * C153464) * C98459 +
            ((C52100 + C52099 + C52098) * C74249 +
             (C52101 + C52102 + C52103) * C153464) *
                C153713) *
               C2546) *
              C153837 +
          ((((C52875 + C52876 + C52877) * C74249 + C103629 * C153464) * C98459 +
            ((C52878 + C52879 + C52880) * C74249 +
             (C52881 + C52882 + C52883) * C153464) *
                C153713) *
               C153911 -
           ((C103630 * C153464 + (C52877 + C52876 + C52875) * C74249) *
                C153713 +
            ((C3215 + C3216 + C3217) * C153464 +
             (C2825 * C1319 + C3158 + C3158 + C153887 * C1329 + C2823 * C330 +
              C3159 + C3159 + C153913 * C354 + C2821 * C329 + C3160 + C3160 +
              C153925 * C353) *
                 C74249) *
                C98459) *
               C153910 -
           (((C2825 * C31999 + C52854 + C52854 + C153887 * C32001 +
              C2823 * C6303 + C52855 + C52855 + C153913 * C6315 +
              C2821 * C6304 + C52856 + C52856 + C153925 * C6316) *
                 C153464 +
             (C53492 + C53491 + C53490) * C74249) *
                C153713 +
            ((C52883 + C52882 + C52881) * C153464 + C53485 * C74249) * C98459) *
               C2546) *
              C153563) *
         C153492) /
            (p * q * std::sqrt(p + q));
    d2ee[297] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C153931 +
             C193 * C153924 + C194 * C153905 + C195 * C153852) *
                C98459 +
            (C98850 + C98851 + C98852 + C98853) * C153713) *
               C2030 -
           ((C98854 + C98855 + C98856 + C98857) * C153713 +
            (C98853 + C98852 + C98851 + C98850) * C98459) *
               C153591) *
              C320 +
          (((C99516 + C99517 + C99518 + C99519) * C98459 +
            (C100042 + C100043 + C100044 + C100045) * C153713) *
               C153591 -
           ((C99519 + C99518 + C99517 + C99516) * C153713 +
            (C407 * C153852 + C408 * C153905 + C409 * C153924 +
             (C134 * C329 + C374 + C374 + C153608 * C353) * C153931) *
                C98459) *
               C2030) *
              C321 +
          ((((C134 * C330 + C375 + C375 + C153608 * C354) * C153931 +
             C410 * C153924 + C411 * C153905 + C412 * C153852) *
                C98459 +
            (C100692 + C100693 + C100694 + C100695) * C153713) *
               C2030 -
           (((C134 * C3444 + C7437 + C7437 + C153608 * C3452) * C153852 +
             C7455 * C153905 + C7454 * C153924 + C9880 * C153931) *
                C153713 +
            (C100695 + C100694 + C100693 + C100692) * C98459) *
               C153591) *
              C322) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C153931 +
             C193 * C153924 + C194 * C153905 + C195 * C153852) *
                C98459 +
            (C98850 + C98851 + C98852 + C98853) * C153713) *
               C2030 -
           ((C98854 + C98855 + C98856 + C98857) * C153713 +
            (C98853 + C98852 + C98851 + C98850) * C98459) *
               C153591) *
              C153511 * C1225 +
          (((C98858 + C98859 + C98860 + C98861) * C98459 +
            (C98862 + C98863 + C98864 + C98865) * C153713) *
               C153591 -
           ((C98861 + C98860 + C98859 + C98858) * C153713 +
            (C196 * C153852 + C195 * C153905 + C194 * C153924 +
             C193 * C153931) *
                C98459) *
               C2030) *
              C153511 * C1226 +
          (((C194 * C153931 + C195 * C153924 + C196 * C153905 +
             C197 * C153852) *
                C98459 +
            (C99254 + C99255 + C99256 + C99257) * C153713) *
               C2030 -
           (((C134 * C549 + C602 + C602 + C153608 * C573) * C153852 +
             C626 * C153905 + C625 * C153924 + C624 * C153931) *
                C153713 +
            (C99257 + C99256 + C99255 + C99254) * C98459) *
               C153591) *
              C153511 * C1227)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153608 * C152) * C153931 +
            C193 * C153924 + C194 * C153905 + C195 * C153852) *
               C98459 +
           (C98850 + C98851 + C98852 + C98853) * C153713) *
              C2236 -
          ((C98854 + C98855 + C98856 + C98857) * C153713 +
           (C98853 + C98852 + C98851 + C98850) * C98459) *
              C2237 +
          ((C98857 + C98856 + C98855 + C98854) * C98459 +
           (C101214 + C101215 + C101216 + C101217) * C153713) *
              C2238 -
          (((C134 * C7676 + C7715 + C7715 + C153608 * C7684) * C153852 +
            C7740 * C153905 + C7739 * C153924 + C10485 * C153931) *
               C153713 +
           (C101217 + C101216 + C101215 + C101214) * C98459) *
              C2239) *
         C153511 * C153492) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
              C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
              C153887 * C354) *
                 C74249 +
             (C2894 + C2895 + C2896) * C153464) *
                C98459 +
            ((C52092 + C52093 + C52094) * C74249 + C102656 * C153464) *
                C153713) *
               C2030 -
           ((C52078 * C153464 + (C52097 + C52096 + C52095) * C74249) * C153713 +
            (C102657 * C153464 + (C52094 + C52093 + C52092) * C74249) *
                C98459) *
               C153591) *
              C153511 * C1225 +
          (((C102656 * C74249 + C103240 * C153464) * C98459 +
            (C102658 * C74249 + (C3535 + C3536 + C3537) * C153464) * C153713) *
               C153591 -
           ((C4004 * C153464 + C102657 * C74249) * C153713 +
            ((C2899 + C2898 + C2897) * C153464 +
             (C2896 + C2895 + C2894) * C74249) *
                C98459) *
               C2030) *
              C153511 * C1226 +
          (((C2908 * C74249 + (C2902 + C2901 + C2900) * C153464) * C98459 +
            (C103240 * C74249 + (C4011 + C4012 + C4013) * C153464) * C153713) *
               C2030 -
           (((C2825 * C3444 + C3499 + C3499 + C153887 * C3452 + C2823 * C1458 +
              C3500 + C3500 + C153913 * C1468 + C2821 * C546 + C3501 + C3501 +
              C153925 * C570) *
                 C153464 +
             (C3537 + C3536 + C3535) * C74249) *
                C153713 +
            ((C4013 + C4012 + C4011) * C153464 + C4004 * C74249) * C98459) *
               C153591) *
              C153511 * C1227)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
              C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
              C153887 * C354) *
                 C74249 +
             (C2894 + C2895 + C2896) * C153464) *
                C98459 +
            ((C52092 + C52093 + C52094) * C74249 + C102656 * C153464) *
                C153713) *
               C2030 -
           ((C52078 * C153464 + (C52097 + C52096 + C52095) * C74249) * C153713 +
            (C102657 * C153464 + (C52094 + C52093 + C52092) * C74249) *
                C98459) *
               C153591) *
              C320 +
          ((((C52875 + C52876 + C52877) * C74249 + C103629 * C153464) * C98459 +
            ((C52878 + C52879 + C52880) * C74249 +
             (C52881 + C52882 + C52883) * C153464) *
                C153713) *
               C153591 -
           ((C103630 * C153464 + (C52877 + C52876 + C52875) * C74249) *
                C153713 +
            ((C3215 + C3216 + C3217) * C153464 +
             (C2825 * C1319 + C3158 + C3158 + C153887 * C1329 + C2823 * C330 +
              C3159 + C3159 + C153913 * C354 + C2821 * C329 + C3160 + C3160 +
              C153925 * C353) *
                 C74249) *
                C98459) *
               C2030) *
              C321 +
          ((((C2821 * C330 + C3161 + C3161 + C153925 * C354 + C2823 * C1319 +
              C3162 + C3162 + C153913 * C1329 + C2825 * C3127 + C3163 + C3163 +
              C153887 * C3135) *
                 C74249 +
             (C3218 + C3219 + C3220) * C153464) *
                C98459 +
            ((C54246 + C54247 + C54248) * C74249 +
             (C102360 + C102361 + C102362) * C153464) *
                C153713) *
               C2030 -
           (((C2825 * C28651 + C51814 + C51814 + C153887 * C28655 +
              C2823 * C4958 + C51815 + C51815 + C153913 * C4964 +
              C2821 * C3442 + C51816 + C51816 + C153925 * C3450) *
                 C153464 +
             (C54251 + C54250 + C54249) * C74249) *
                C153713 +
            ((C102362 + C102361 + C102360) * C153464 +
             (C54248 + C54247 + C54246) * C74249) *
                C98459) *
               C153591) *
              C322) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
             C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
             C153887 * C354) *
                C74249 +
            (C2894 + C2895 + C2896) * C153464) *
               C98459 +
           ((C52092 + C52093 + C52094) * C74249 + C102656 * C153464) *
               C153713) *
              C2236 -
          ((C52078 * C153464 + (C52097 + C52096 + C52095) * C74249) * C153713 +
           (C102657 * C153464 + (C52094 + C52093 + C52092) * C74249) * C98459) *
              C2237 +
          ((C52105 * C74249 + C102658 * C153464) * C98459 +
           ((C52100 + C52099 + C52098) * C74249 +
            (C52101 + C52102 + C52103) * C153464) *
               C153713) *
              C2238 -
          (((C2825 * C31196 + C52063 + C52063 + C153887 * C31200 +
             C2823 * C9116 + C52064 + C52064 + C153913 * C9122 + C2821 * C7674 +
             C52065 + C52065 + C153925 * C7682) *
                C153464 +
            (C54854 + C54853 + C54852) * C74249) *
               C153713 +
           ((C52103 + C52102 + C52101) * C153464 + C54844 * C74249) * C98459) *
              C2239) *
         C153511 * C153492) /
            (p * q * std::sqrt(p + q));
    d2ee[298] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C153931 +
             C193 * C153924 + C194 * C153905 + C195 * C153852) *
                C98459 +
            (C98850 + C98851 + C98852 + C98853) * C153713) *
               C153910 -
           ((C98854 + C98855 + C98856 + C98857) * C153713 +
            (C98853 + C98852 + C98851 + C98850) * C98459) *
               C153911 +
           ((C98857 + C98856 + C98855 + C98854) * C98459 +
            (C101214 + C101215 + C101216 + C101217) * C153713) *
               C2546) *
              C153511 * C153829 +
          (((C98858 + C98859 + C98860 + C98861) * C98459 +
            (C98862 + C98863 + C98864 + C98865) * C153713) *
               C153911 -
           ((C98861 + C98860 + C98859 + C98858) * C153713 +
            (C196 * C153852 + C195 * C153905 + C194 * C153924 +
             C193 * C153931) *
                C98459) *
               C153910 -
           (((C134 * C2240 + C2256 + C2256 + C153608 * C2250) * C153852 +
             C7741 * C153905 + C7736 * C153924 + C7737 * C153931) *
                C153713 +
            (C98865 + C98864 + C98863 + C98862) * C98459) *
               C2546) *
              C153511 * C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
              C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
              C153887 * C354) *
                 C74249 +
             (C2894 + C2895 + C2896) * C153464) *
                C98459 +
            ((C52092 + C52093 + C52094) * C74249 + C102656 * C153464) *
                C153713) *
               C153910 -
           ((C52078 * C153464 + (C52097 + C52096 + C52095) * C74249) * C153713 +
            (C102657 * C153464 + (C52094 + C52093 + C52092) * C74249) *
                C98459) *
               C153911 +
           ((C52105 * C74249 + C102658 * C153464) * C98459 +
            ((C52100 + C52099 + C52098) * C74249 +
             (C52101 + C52102 + C52103) * C153464) *
                C153713) *
               C2546) *
              C153511 * C153829 +
          (((C102656 * C74249 + C103240 * C153464) * C98459 +
            (C102658 * C74249 + (C3535 + C3536 + C3537) * C153464) * C153713) *
               C153911 -
           ((C4004 * C153464 + C102657 * C74249) * C153713 +
            ((C2899 + C2898 + C2897) * C153464 +
             (C2896 + C2895 + C2894) * C74249) *
                C98459) *
               C153910 -
           (((C2825 * C6301 + C6320 + C6320 + C153887 * C6313 + C2823 * C6302 +
              C6321 + C6321 + C153913 * C6314 + C2821 * C2242 + C6322 + C6322 +
              C153925 * C2252) *
                 C153464 +
             (C52103 + C52102 + C52101) * C74249) *
                C153713 +
            ((C3537 + C3536 + C3535) * C153464 + C52078 * C74249) * C98459) *
               C2546) *
              C153511 * C153498)) /
            (p * q * std::sqrt(p + q));
    d2ee[299] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C153931 +
             C193 * C153924 + C194 * C153905 + C195 * C153852) *
                C98459 +
            (C98850 + C98851 + C98852 + C98853) * C153713) *
               C2030 -
           ((C98854 + C98855 + C98856 + C98857) * C153713 +
            (C98853 + C98852 + C98851 + C98850) * C98459) *
               C153591) *
              C153511 * C1225 +
          (((C98858 + C98859 + C98860 + C98861) * C98459 +
            (C98862 + C98863 + C98864 + C98865) * C153713) *
               C153591 -
           ((C98861 + C98860 + C98859 + C98858) * C153713 +
            (C196 * C153852 + C195 * C153905 + C194 * C153924 +
             C193 * C153931) *
                C98459) *
               C2030) *
              C153511 * C1226 +
          (((C194 * C153931 + C195 * C153924 + C196 * C153905 +
             C197 * C153852) *
                C98459 +
            (C99254 + C99255 + C99256 + C99257) * C153713) *
               C2030 -
           (((C134 * C549 + C602 + C602 + C153608 * C573) * C153852 +
             C626 * C153905 + C625 * C153924 + C624 * C153931) *
                C153713 +
            (C99257 + C99256 + C99255 + C99254) * C98459) *
               C153591) *
              C153511 * C1227)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C153931 +
             C193 * C153924 + C194 * C153905 + C195 * C153852) *
                C98459 +
            (C98850 + C98851 + C98852 + C98853) * C153713) *
               C2030 -
           ((C98854 + C98855 + C98856 + C98857) * C153713 +
            (C98853 + C98852 + C98851 + C98850) * C98459) *
               C153591) *
              C320 +
          (((C99516 + C99517 + C99518 + C99519) * C98459 +
            (C100042 + C100043 + C100044 + C100045) * C153713) *
               C153591 -
           ((C99519 + C99518 + C99517 + C99516) * C153713 +
            (C407 * C153852 + C408 * C153905 + C409 * C153924 +
             (C134 * C329 + C374 + C374 + C153608 * C353) * C153931) *
                C98459) *
               C2030) *
              C321 +
          ((((C134 * C330 + C375 + C375 + C153608 * C354) * C153931 +
             C410 * C153924 + C411 * C153905 + C412 * C153852) *
                C98459 +
            (C100692 + C100693 + C100694 + C100695) * C153713) *
               C2030 -
           (((C134 * C3444 + C7437 + C7437 + C153608 * C3452) * C153852 +
             C7455 * C153905 + C7454 * C153924 + C9880 * C153931) *
                C153713 +
            (C100695 + C100694 + C100693 + C100692) * C98459) *
               C153591) *
              C322) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
              C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
              C153887 * C354) *
                 C74249 +
             (C2894 + C2895 + C2896) * C153464) *
                C98459 +
            ((C52092 + C52093 + C52094) * C74249 + C102656 * C153464) *
                C153713) *
               C2030 -
           ((C52078 * C153464 + (C52097 + C52096 + C52095) * C74249) * C153713 +
            (C102657 * C153464 + (C52094 + C52093 + C52092) * C74249) *
                C98459) *
               C153591) *
              C153511 * C1225 +
          (((C102656 * C74249 + C103240 * C153464) * C98459 +
            (C102658 * C74249 + (C3535 + C3536 + C3537) * C153464) * C153713) *
               C153591 -
           ((C4004 * C153464 + C102657 * C74249) * C153713 +
            ((C2899 + C2898 + C2897) * C153464 +
             (C2896 + C2895 + C2894) * C74249) *
                C98459) *
               C2030) *
              C153511 * C1226 +
          (((C2908 * C74249 + (C2902 + C2901 + C2900) * C153464) * C98459 +
            (C103240 * C74249 + (C4011 + C4012 + C4013) * C153464) * C153713) *
               C2030 -
           (((C2825 * C3444 + C3499 + C3499 + C153887 * C3452 + C2823 * C1458 +
              C3500 + C3500 + C153913 * C1468 + C2821 * C546 + C3501 + C3501 +
              C153925 * C570) *
                 C153464 +
             (C3537 + C3536 + C3535) * C74249) *
                C153713 +
            ((C4013 + C4012 + C4011) * C153464 + C4004 * C74249) * C98459) *
               C153591) *
              C153511 * C1227)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
              C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
              C153887 * C354) *
                 C74249 +
             (C2894 + C2895 + C2896) * C153464) *
                C98459 +
            ((C52092 + C52093 + C52094) * C74249 + C102656 * C153464) *
                C153713) *
               C2030 -
           ((C52078 * C153464 + (C52097 + C52096 + C52095) * C74249) * C153713 +
            (C102657 * C153464 + (C52094 + C52093 + C52092) * C74249) *
                C98459) *
               C153591) *
              C320 +
          ((((C52875 + C52876 + C52877) * C74249 + C103629 * C153464) * C98459 +
            ((C52878 + C52879 + C52880) * C74249 +
             (C52881 + C52882 + C52883) * C153464) *
                C153713) *
               C153591 -
           ((C103630 * C153464 + (C52877 + C52876 + C52875) * C74249) *
                C153713 +
            ((C3215 + C3216 + C3217) * C153464 +
             (C2825 * C1319 + C3158 + C3158 + C153887 * C1329 + C2823 * C330 +
              C3159 + C3159 + C153913 * C354 + C2821 * C329 + C3160 + C3160 +
              C153925 * C353) *
                 C74249) *
                C98459) *
               C2030) *
              C321 +
          ((((C2821 * C330 + C3161 + C3161 + C153925 * C354 + C2823 * C1319 +
              C3162 + C3162 + C153913 * C1329 + C2825 * C3127 + C3163 + C3163 +
              C153887 * C3135) *
                 C74249 +
             (C3218 + C3219 + C3220) * C153464) *
                C98459 +
            ((C54246 + C54247 + C54248) * C74249 +
             (C102360 + C102361 + C102362) * C153464) *
                C153713) *
               C2030 -
           (((C2825 * C28651 + C51814 + C51814 + C153887 * C28655 +
              C2823 * C4958 + C51815 + C51815 + C153913 * C4964 +
              C2821 * C3442 + C51816 + C51816 + C153925 * C3450) *
                 C153464 +
             (C54251 + C54250 + C54249) * C74249) *
                C153713 +
            ((C102362 + C102361 + C102360) * C153464 +
             (C54248 + C54247 + C54246) * C74249) *
                C98459) *
               C153591) *
              C322) *
         C153492) /
            (p * q * std::sqrt(p + q));
    d2ee[300] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C11348 * C136 + C11353 + C11353 + C153851 * C152 + C11350 * C329 +
             C11354 + C11354 + C153671 * C353) *
                C11344 +
            (C11407 + C11408) * C11345 + C11417 * C11346 + C11418 * C153852) *
               C153626 * C153527 * C153837 -
           (C12163 * C153852 + C12164 * C11346 + (C11687 + C11688) * C11345 +
            (C11350 * C330 + C11633 + C11633 + C153671 * C354 + C11348 * C329 +
             C11634 + C11634 + C153851 * C353) *
                C11344) *
               C153626 * C153527 * C153563) *
              C153906 +
          (((C11688 + C11687) * C11344 + (C11686 + C11685) * C11345 +
            (C11684 + C11683) * C11346 + (C12175 + C12176) * C153852) *
               C153626 * C153527 * C153563 -
           (C11419 * C153852 + C11420 * C11346 + (C11410 + C11409) * C11345 +
            (C11408 + C11407) * C11344) *
               C153626 * C153527 * C153837) *
              C153907 +
          ((C11417 * C11344 + C11418 * C11345 + (C11414 + C11413) * C11346 +
            (C11415 + C11416) * C153852) *
               C153626 * C153527 * C153837 -
           ((C11350 * C336 + C12169 + C12169 + C153671 * C360 + C11348 * C335 +
             C12170 + C12170 + C153851 * C359) *
                C153852 +
            (C12176 + C12175) * C11346 + C12163 * C11345 + C12164 * C11344) *
               C153626 * C153527 * C153563) *
              C752)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C34895 * C136 + C34904 + C34904 + C34889 * C152 + C34897 * C329 +
             C34905 + C34905 + C34890 * C353 + C34899 * C330 + C34906 + C34906 +
             C34891 * C354 + C34901 * C1319 + C34907 + C34907 +
             C153860 * C1329) *
                C153818 +
            (C34972 + C34973 + C34974 + C34975) * C153464) *
               C153626 * C153527 * C153837 -
           ((C35234 + C35235 + C35236 + C35237) * C153464 +
            (C34901 * C3127 + C35190 + C35190 + C153860 * C3135 +
             C34899 * C1319 + C35191 + C35191 + C34891 * C1329 + C34897 * C330 +
             C35192 + C35192 + C34890 * C354 + C34895 * C329 + C35193 + C35193 +
             C34889 * C353) *
                C153818) *
               C153626 * C153527 * C153563) *
              C153906 +
          (((C35237 + C35236 + C35235 + C35234) * C153818 +
            (C35714 + C35715 + C35716 + C35717) * C153464) *
               C153626 * C153527 * C153563 -
           ((C34976 + C34977 + C34978 + C34979) * C153464 +
            (C34975 + C34974 + C34973 + C34972) * C153818) *
               C153626 * C153527 * C153837) *
              C153907 +
          (((C34979 + C34978 + C34977 + C34976) * C153818 +
            (C34980 + C34981 + C34982 + C34983) * C153464) *
               C153626 * C153527 * C153837 -
           ((C34901 * C3130 + C35702 + C35702 + C153860 * C3138 +
             C34899 * C1316 + C35703 + C35703 + C34891 * C1326 + C34897 * C333 +
             C35704 + C35704 + C34890 * C357 + C34895 * C326 + C35705 + C35705 +
             C34889 * C350) *
                C153464 +
            (C35717 + C35716 + C35715 + C35714) * C153818) *
               C153626 * C153527 * C153563) *
              C752)) /
            (p * q * std::sqrt(p + q));
    d2ee[301] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C11348 * C136 + C11353 + C11353 + C153851 * C152 + C11350 * C329 +
              C11354 + C11354 + C153671 * C353) *
                 C11344 +
             (C11407 + C11408) * C11345 + C11417 * C11346 + C11418 * C153852) *
                C153626 * C153838 -
            (C12371 * C153852 + C12372 * C11346 + (C11961 + C11962) * C11345 +
             (C11350 * C1057 + C11907 + C11907 + C153671 * C1069 +
              C11348 * C542 + C11908 + C11908 + C153851 * C566) *
                 C11344) *
                C153626 * C153591) *
               C153837 +
           (((C11348 * C1057 + C12643 + C12643 + C153851 * C1069 +
              C11350 * C1892 + C12644 + C12644 + C153671 * C1902) *
                 C11344 +
             (C12677 + C12678) * C11345 + (C12679 + C12680) * C11346 +
             (C12681 + C12682) * C153852) *
                C153626 * C153591 -
            (C12163 * C153852 + C12164 * C11346 + (C11687 + C11688) * C11345 +
             (C11350 * C330 + C11633 + C11633 + C153671 * C354 + C11348 * C329 +
              C11634 + C11634 + C153851 * C353) *
                 C11344) *
                C153626 * C153838) *
               C153563) *
              C323 +
          ((((C11962 + C11961) * C11344 + (C11960 + C11959) * C11345 +
             (C11958 + C11957) * C11346 + (C12383 + C12384) * C153852) *
                C153626 * C153591 -
            (C11419 * C153852 + C11420 * C11346 + (C11410 + C11409) * C11345 +
             (C11408 + C11407) * C11344) *
                C153626 * C153838) *
               C153837 +
           (((C11688 + C11687) * C11344 + (C11686 + C11685) * C11345 +
             (C11684 + C11683) * C11346 + (C12175 + C12176) * C153852) *
                C153626 * C153838 -
            ((C11350 * C1888 + C12663 + C12663 + C153671 * C1898 +
              C11348 * C1061 + C12664 + C12664 + C153851 * C1073) *
                 C153852 +
             (C12682 + C12681) * C11346 + (C12680 + C12679) * C11345 +
             (C12678 + C12677) * C11344) *
                C153626 * C153591) *
               C153563) *
              C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C34895 * C136 + C34904 + C34904 + C34889 * C152 + C34897 * C329 +
              C34905 + C34905 + C34890 * C353 + C34899 * C330 + C34906 +
              C34906 + C34891 * C354 + C34901 * C1319 + C34907 + C34907 +
              C153860 * C1329) *
                 C153818 +
             (C34972 + C34973 + C34974 + C34975) * C153464) *
                C153626 * C153838 -
            ((C35492 + C35493 + C35494 + C35495) * C153464 +
             (C34901 * C4303 + C35448 + C35448 + C153860 * C4311 +
              C34899 * C1892 + C35449 + C35449 + C34891 * C1902 +
              C34897 * C1057 + C35450 + C35450 + C34890 * C1069 +
              C34895 * C542 + C35451 + C35451 + C34889 * C566) *
                 C153818) *
                C153626 * C153591) *
               C153837 +
           (((C34895 * C1057 + C36194 + C36194 + C34889 * C1069 +
              C34897 * C1892 + C36195 + C36195 + C34890 * C1902 +
              C34899 * C4303 + C36196 + C36196 + C34891 * C4311 +
              C34901 * C5703 + C36197 + C36197 + C153860 * C5709) *
                 C153818 +
             (C36222 + C36223 + C36224 + C36225) * C153464) *
                C153626 * C153591 -
            ((C35234 + C35235 + C35236 + C35237) * C153464 +
             (C34901 * C3127 + C35190 + C35190 + C153860 * C3135 +
              C34899 * C1319 + C35191 + C35191 + C34891 * C1329 +
              C34897 * C330 + C35192 + C35192 + C34890 * C354 + C34895 * C329 +
              C35193 + C35193 + C34889 * C353) *
                 C153818) *
                C153626 * C153838) *
               C153563) *
              C323 +
          ((((C35495 + C35494 + C35493 + C35492) * C153818 +
             (C35932 + C35933 + C35934 + C35935) * C153464) *
                C153626 * C153591 -
            ((C34976 + C34977 + C34978 + C34979) * C153464 +
             (C34975 + C34974 + C34973 + C34972) * C153818) *
                C153626 * C153838) *
               C153837 +
           (((C35237 + C35236 + C35235 + C35234) * C153818 +
             (C35714 + C35715 + C35716 + C35717) * C153464) *
                C153626 * C153838 -
            ((C34901 * C5701 + C36210 + C36210 + C153860 * C5707 +
              C34899 * C4305 + C36211 + C36211 + C34891 * C4313 +
              C34897 * C1890 + C36212 + C36212 + C34890 * C1900 +
              C34895 * C1059 + C36213 + C36213 + C34889 * C1071) *
                 C153464 +
             (C36225 + C36224 + C36223 + C36222) * C153818) *
                C153626 * C153591) *
               C153563) *
              C153498)) /
            (p * q * std::sqrt(p + q));
    d2ee[302] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C11348 * C136 + C11353 + C11353 + C153851 * C152 + C11350 * C329 +
             C11354 + C11354 + C153671 * C353) *
                C11344 +
            (C11407 + C11408) * C11345 + C11417 * C11346 + C11418 * C153852) *
               C153626 * C153527 * C320 -
           ((C11683 + C11684) * C153852 + (C11685 + C11686) * C11346 +
            (C11687 + C11688) * C11345 +
            (C11350 * C330 + C11633 + C11633 + C153671 * C354 + C11348 * C329 +
             C11634 + C11634 + C153851 * C353) *
                C11344) *
               C153626 * C153527 * C321 +
           ((C11348 * C330 + C11635 + C11635 + C153851 * C354 + C11350 * C1319 +
             C11636 + C11636 + C153671 * C1329) *
                C11344 +
            (C11689 + C11690) * C11345 + (C11691 + C11692) * C11346 +
            (C11693 + C11694) * C153852) *
               C153626 * C153527 * C322) *
              C323 +
          (((C11688 + C11687) * C11344 + (C11686 + C11685) * C11345 +
            (C11684 + C11683) * C11346 +
            (C11348 * C325 + C11655 + C11655 + C153851 * C349 + C11350 * C334 +
             C11656 + C11656 + C153671 * C358) *
                C153852) *
               C153626 * C153527 * C321 -
           (C11419 * C153852 + C11420 * C11346 + (C11410 + C11409) * C11345 +
            (C11408 + C11407) * C11344) *
               C153626 * C153527 * C320 -
           ((C11350 * C1315 + C11657 + C11657 + C153671 * C1325 +
             C11348 * C334 + C11658 + C11658 + C153851 * C358) *
                C153852 +
            (C11694 + C11693) * C11346 + (C11692 + C11691) * C11345 +
            (C11690 + C11689) * C11344) *
               C153626 * C153527 * C322) *
              C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C11348 * C136 + C11353 + C11353 + C153851 * C152 + C11350 * C329 +
            C11354 + C11354 + C153671 * C353) *
               C11344 +
           (C11407 + C11408) * C11345 + C11417 * C11346 + C11418 * C153852) *
              C153626 * C153527 * C153511 * C130 -
          (C11419 * C153852 + C11420 * C11346 + (C11410 + C11409) * C11345 +
           (C11408 + C11407) * C11344) *
              C153626 * C153527 * C153511 * C131 +
          (C11417 * C11344 + C11418 * C11345 + (C11414 + C11413) * C11346 +
           (C11415 + C11416) * C153852) *
              C153626 * C153527 * C153511 * C132 -
          ((C11350 * C753 + C11385 + C11385 + C153671 * C755 + C11348 * C142 +
            C11386 + C11386 + C153851 * C158) *
               C153852 +
           (C11416 + C11415) * C11346 + C11419 * C11345 + C11420 * C11344) *
              C153626 * C153527 * C153511 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C11348 * C136 + C11353 + C11353 + C153851 * C152 + C11350 * C329 +
             C11354 + C11354 + C153671 * C353) *
                C11344 +
            (C11407 + C11408) * C11345 + C11417 * C11346 + C11418 * C153852) *
               C153626 * C535 -
           ((C11957 + C11958) * C153852 + (C11959 + C11960) * C11346 +
            (C11961 + C11962) * C11345 +
            (C11350 * C1057 + C11907 + C11907 + C153671 * C1069 +
             C11348 * C542 + C11908 + C11908 + C153851 * C566) *
                C11344) *
               C153626 * C536 +
           ((C11348 * C543 + C11909 + C11909 + C153851 * C567 + C11350 * C1461 +
             C11910 + C11910 + C153671 * C1471) *
                C11344 +
            (C11963 + C11964) * C11345 + (C11965 + C11966) * C11346 +
            (C11967 + C11968) * C153852) *
               C153626 * C537) *
              C153511 * C323 +
          (((C11962 + C11961) * C11344 + (C11960 + C11959) * C11345 +
            (C11958 + C11957) * C11346 +
            (C11348 * C538 + C11929 + C11929 + C153851 * C562 + C11350 * C1061 +
             C11930 + C11930 + C153671 * C1073) *
                C153852) *
               C153626 * C536 -
           (C11419 * C153852 + C11420 * C11346 + (C11410 + C11409) * C11345 +
            (C11408 + C11407) * C11344) *
               C153626 * C535 -
           ((C11350 * C1457 + C11931 + C11931 + C153671 * C1467 +
             C11348 * C547 + C11932 + C11932 + C153851 * C571) *
                C153852 +
            (C11968 + C11967) * C11346 + (C11966 + C11965) * C11345 +
            (C11964 + C11963) * C11344) *
               C153626 * C537) *
              C153511 * C153498)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C34895 * C136 + C34904 + C34904 + C34889 * C152 + C34897 * C329 +
            C34905 + C34905 + C34890 * C353 + C34899 * C330 + C34906 + C34906 +
            C34891 * C354 + C34901 * C1319 + C34907 + C34907 +
            C153860 * C1329) *
               C153818 +
           (C34972 + C34973 + C34974 + C34975) * C153464) *
              C153626 * C153527 * C153511 * C130 -
          ((C34976 + C34977 + C34978 + C34979) * C153464 +
           (C34975 + C34974 + C34973 + C34972) * C153818) *
              C153626 * C153527 * C153511 * C131 +
          ((C34979 + C34978 + C34977 + C34976) * C153818 +
           (C34980 + C34981 + C34982 + C34983) * C153464) *
              C153626 * C153527 * C153511 * C132 -
          ((C34901 * C1315 + C34944 + C34944 + C153860 * C1325 + C34899 * C334 +
            C34945 + C34945 + C34891 * C358 + C34897 * C325 + C34946 + C34946 +
            C34890 * C349 + C34895 * C140 + C34947 + C34947 + C34889 * C156) *
               C153464 +
           (C34983 + C34982 + C34981 + C34980) * C153818) *
              C153626 * C153527 * C153511 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C34895 * C136 + C34904 + C34904 + C34889 * C152 + C34897 * C329 +
             C34905 + C34905 + C34890 * C353 + C34899 * C330 + C34906 + C34906 +
             C34891 * C354 + C34901 * C1319 + C34907 + C34907 +
             C153860 * C1329) *
                C153818 +
            (C34972 + C34973 + C34974 + C34975) * C153464) *
               C153626 * C153527 * C320 -
           ((C35234 + C35235 + C35236 + C35237) * C153464 +
            (C34901 * C3127 + C35190 + C35190 + C153860 * C3135 +
             C34899 * C1319 + C35191 + C35191 + C34891 * C1329 + C34897 * C330 +
             C35192 + C35192 + C34890 * C354 + C34895 * C329 + C35193 + C35193 +
             C34889 * C353) *
                C153818) *
               C153626 * C153527 * C321 +
           ((C34895 * C330 + C35194 + C35194 + C34889 * C354 + C34897 * C1319 +
             C35195 + C35195 + C34890 * C1329 + C34899 * C3127 + C35196 +
             C35196 + C34891 * C3135 + C34901 * C4723 + C35197 + C35197 +
             C153860 * C4729) *
                C153818 +
            (C35238 + C35239 + C35240 + C35241) * C153464) *
               C153626 * C153527 * C322) *
              C323 +
          (((C35237 + C35236 + C35235 + C35234) * C153818 +
            (C34895 * C327 + C35210 + C35210 + C34889 * C351 + C34897 * C332 +
             C35211 + C35211 + C34890 * C356 + C34899 * C1317 + C35212 +
             C35212 + C34891 * C1327 + C34901 * C3129 + C35213 + C35213 +
             C153860 * C3137) *
                C153464) *
               C153626 * C153527 * C321 -
           ((C34976 + C34977 + C34978 + C34979) * C153464 +
            (C34975 + C34974 + C34973 + C34972) * C153818) *
               C153626 * C153527 * C320 -
           ((C34901 * C4721 + C35214 + C35214 + C153860 * C4727 +
             C34899 * C3129 + C35215 + C35215 + C34891 * C3137 +
             C34897 * C1317 + C35216 + C35216 + C34890 * C1327 + C34895 * C332 +
             C35217 + C35217 + C34889 * C356) *
                C153464 +
            (C35241 + C35240 + C35239 + C35238) * C153818) *
               C153626 * C153527 * C322) *
              C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C34895 * C136 + C34904 + C34904 + C34889 * C152 + C34897 * C329 +
             C34905 + C34905 + C34890 * C353 + C34899 * C330 + C34906 + C34906 +
             C34891 * C354 + C34901 * C1319 + C34907 + C34907 +
             C153860 * C1329) *
                C153818 +
            (C34972 + C34973 + C34974 + C34975) * C153464) *
               C153626 * C535 -
           ((C35492 + C35493 + C35494 + C35495) * C153464 +
            (C34901 * C4303 + C35448 + C35448 + C153860 * C4311 +
             C34899 * C1892 + C35449 + C35449 + C34891 * C1902 +
             C34897 * C1057 + C35450 + C35450 + C34890 * C1069 + C34895 * C542 +
             C35451 + C35451 + C34889 * C566) *
                C153818) *
               C153626 * C536 +
           ((C34895 * C543 + C35452 + C35452 + C34889 * C567 + C34897 * C1461 +
             C35453 + C35453 + C34890 * C1471 + C34899 * C3441 + C35454 +
             C35454 + C34891 * C3449 + C34901 * C4959 + C35455 + C35455 +
             C153860 * C4965) *
                C153818 +
            (C35496 + C35497 + C35498 + C35499) * C153464) *
               C153626 * C537) *
              C153511 * C323 +
          (((C35495 + C35494 + C35493 + C35492) * C153818 +
            (C34895 * C540 + C35468 + C35468 + C34889 * C564 + C34897 * C1059 +
             C35469 + C35469 + C34890 * C1071 + C34899 * C1890 + C35470 +
             C35470 + C34891 * C1900 + C34901 * C4305 + C35471 + C35471 +
             C153860 * C4313) *
                C153464) *
               C153626 * C536 -
           ((C34976 + C34977 + C34978 + C34979) * C153464 +
            (C34975 + C34974 + C34973 + C34972) * C153818) *
               C153626 * C535 -
           ((C34901 * C4957 + C35472 + C35472 + C153860 * C4963 +
             C34899 * C3443 + C35473 + C35473 + C34891 * C3451 +
             C34897 * C1459 + C35474 + C35474 + C34890 * C1469 + C34895 * C545 +
             C35475 + C35475 + C34889 * C569) *
                C153464 +
            (C35499 + C35498 + C35497 + C35496) * C153818) *
               C153626 * C537) *
              C153511 * C153498)) /
            (p * q * std::sqrt(p + q));
    d2ee[303] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C11348 * C136 + C11353 + C11353 + C153851 * C152 + C11350 * C329 +
             C11354 + C11354 + C153671 * C353) *
                C11344 +
            (C11407 + C11408) * C11345 + C11417 * C11346 + C11418 * C153852) *
               C153626 * C153838 -
           (C12371 * C153852 + C12372 * C11346 + (C11961 + C11962) * C11345 +
            (C11350 * C1057 + C11907 + C11907 + C153671 * C1069 +
             C11348 * C542 + C11908 + C11908 + C153851 * C566) *
                C11344) *
               C153626 * C153591) *
              C153511 * C153906 +
          (((C11962 + C11961) * C11344 + (C11960 + C11959) * C11345 +
            (C11958 + C11957) * C11346 + (C12383 + C12384) * C153852) *
               C153626 * C153591 -
           (C11419 * C153852 + C11420 * C11346 + (C11410 + C11409) * C11345 +
            (C11408 + C11407) * C11344) *
               C153626 * C153838) *
              C153511 * C153907 +
          ((C11417 * C11344 + C11418 * C11345 + (C11414 + C11413) * C11346 +
            (C11415 + C11416) * C153852) *
               C153626 * C153838 -
           ((C11350 * C1062 + C12377 + C12377 + C153671 * C1074 +
             C11348 * C548 + C12378 + C12378 + C153851 * C572) *
                C153852 +
            (C12384 + C12383) * C11346 + C12371 * C11345 + C12372 * C11344) *
               C153626 * C153591) *
              C153511 * C752)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C34895 * C136 + C34904 + C34904 + C34889 * C152 + C34897 * C329 +
             C34905 + C34905 + C34890 * C353 + C34899 * C330 + C34906 + C34906 +
             C34891 * C354 + C34901 * C1319 + C34907 + C34907 +
             C153860 * C1329) *
                C153818 +
            (C34972 + C34973 + C34974 + C34975) * C153464) *
               C153626 * C153838 -
           ((C35492 + C35493 + C35494 + C35495) * C153464 +
            (C34901 * C4303 + C35448 + C35448 + C153860 * C4311 +
             C34899 * C1892 + C35449 + C35449 + C34891 * C1902 +
             C34897 * C1057 + C35450 + C35450 + C34890 * C1069 + C34895 * C542 +
             C35451 + C35451 + C34889 * C566) *
                C153818) *
               C153626 * C153591) *
              C153511 * C153906 +
          (((C35495 + C35494 + C35493 + C35492) * C153818 +
            (C35932 + C35933 + C35934 + C35935) * C153464) *
               C153626 * C153591 -
           ((C34976 + C34977 + C34978 + C34979) * C153464 +
            (C34975 + C34974 + C34973 + C34972) * C153818) *
               C153626 * C153838) *
              C153511 * C153907 +
          (((C34979 + C34978 + C34977 + C34976) * C153818 +
            (C34980 + C34981 + C34982 + C34983) * C153464) *
               C153626 * C153838 -
           ((C34901 * C4306 + C35920 + C35920 + C153860 * C4314 +
             C34899 * C1889 + C35921 + C35921 + C34891 * C1899 +
             C34897 * C1060 + C35922 + C35922 + C34890 * C1072 + C34895 * C539 +
             C35923 + C35923 + C34889 * C563) *
                C153464 +
            (C35935 + C35934 + C35933 + C35932) * C153818) *
               C153626 * C153591) *
              C153511 * C752)) /
            (p * q * std::sqrt(p + q));
    d2ee[304] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C11348 * C136 + C11353 + C11353 + C153851 * C152 + C11350 * C329 +
            C11354 + C11354 + C153671 * C353) *
               C11344 +
           (C11407 + C11408) * C11345 + C11417 * C11346 + C11418 * C153852) *
              C153626 * C153527 * C153511 * C130 -
          (C11419 * C153852 + C11420 * C11346 + (C11410 + C11409) * C11345 +
           (C11408 + C11407) * C11344) *
              C153626 * C153527 * C153511 * C131 +
          (C11417 * C11344 + C11418 * C11345 + (C11414 + C11413) * C11346 +
           (C11415 + C11416) * C153852) *
              C153626 * C153527 * C153511 * C132 -
          ((C11350 * C753 + C11385 + C11385 + C153671 * C755 + C11348 * C142 +
            C11386 + C11386 + C153851 * C158) *
               C153852 +
           (C11416 + C11415) * C11346 + C11419 * C11345 + C11420 * C11344) *
              C153626 * C153527 * C153511 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C11348 * C136 + C11353 + C11353 + C153851 * C152 + C11350 * C329 +
             C11354 + C11354 + C153671 * C353) *
                C11344 +
            (C11407 + C11408) * C11345 + C11417 * C11346 + C11418 * C153852) *
               C153626 * C153527 * C320 -
           ((C11683 + C11684) * C153852 + (C11685 + C11686) * C11346 +
            (C11687 + C11688) * C11345 +
            (C11350 * C330 + C11633 + C11633 + C153671 * C354 + C11348 * C329 +
             C11634 + C11634 + C153851 * C353) *
                C11344) *
               C153626 * C153527 * C321 +
           ((C11348 * C330 + C11635 + C11635 + C153851 * C354 + C11350 * C1319 +
             C11636 + C11636 + C153671 * C1329) *
                C11344 +
            (C11689 + C11690) * C11345 + (C11691 + C11692) * C11346 +
            (C11693 + C11694) * C153852) *
               C153626 * C153527 * C322) *
              C323 +
          (((C11688 + C11687) * C11344 + (C11686 + C11685) * C11345 +
            (C11684 + C11683) * C11346 +
            (C11348 * C325 + C11655 + C11655 + C153851 * C349 + C11350 * C334 +
             C11656 + C11656 + C153671 * C358) *
                C153852) *
               C153626 * C153527 * C321 -
           (C11419 * C153852 + C11420 * C11346 + (C11410 + C11409) * C11345 +
            (C11408 + C11407) * C11344) *
               C153626 * C153527 * C320 -
           ((C11350 * C1315 + C11657 + C11657 + C153671 * C1325 +
             C11348 * C334 + C11658 + C11658 + C153851 * C358) *
                C153852 +
            (C11694 + C11693) * C11346 + (C11692 + C11691) * C11345 +
            (C11690 + C11689) * C11344) *
               C153626 * C153527 * C322) *
              C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C34895 * C136 + C34904 + C34904 + C34889 * C152 + C34897 * C329 +
            C34905 + C34905 + C34890 * C353 + C34899 * C330 + C34906 + C34906 +
            C34891 * C354 + C34901 * C1319 + C34907 + C34907 +
            C153860 * C1329) *
               C153818 +
           (C34972 + C34973 + C34974 + C34975) * C153464) *
              C153626 * C153527 * C153511 * C130 -
          ((C34976 + C34977 + C34978 + C34979) * C153464 +
           (C34975 + C34974 + C34973 + C34972) * C153818) *
              C153626 * C153527 * C153511 * C131 +
          ((C34979 + C34978 + C34977 + C34976) * C153818 +
           (C34980 + C34981 + C34982 + C34983) * C153464) *
              C153626 * C153527 * C153511 * C132 -
          ((C34901 * C1315 + C34944 + C34944 + C153860 * C1325 + C34899 * C334 +
            C34945 + C34945 + C34891 * C358 + C34897 * C325 + C34946 + C34946 +
            C34890 * C349 + C34895 * C140 + C34947 + C34947 + C34889 * C156) *
               C153464 +
           (C34983 + C34982 + C34981 + C34980) * C153818) *
              C153626 * C153527 * C153511 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C34895 * C136 + C34904 + C34904 + C34889 * C152 + C34897 * C329 +
             C34905 + C34905 + C34890 * C353 + C34899 * C330 + C34906 + C34906 +
             C34891 * C354 + C34901 * C1319 + C34907 + C34907 +
             C153860 * C1329) *
                C153818 +
            (C34972 + C34973 + C34974 + C34975) * C153464) *
               C153626 * C153527 * C320 -
           ((C35234 + C35235 + C35236 + C35237) * C153464 +
            (C34901 * C3127 + C35190 + C35190 + C153860 * C3135 +
             C34899 * C1319 + C35191 + C35191 + C34891 * C1329 + C34897 * C330 +
             C35192 + C35192 + C34890 * C354 + C34895 * C329 + C35193 + C35193 +
             C34889 * C353) *
                C153818) *
               C153626 * C153527 * C321 +
           ((C34895 * C330 + C35194 + C35194 + C34889 * C354 + C34897 * C1319 +
             C35195 + C35195 + C34890 * C1329 + C34899 * C3127 + C35196 +
             C35196 + C34891 * C3135 + C34901 * C4723 + C35197 + C35197 +
             C153860 * C4729) *
                C153818 +
            (C35238 + C35239 + C35240 + C35241) * C153464) *
               C153626 * C153527 * C322) *
              C323 +
          (((C35237 + C35236 + C35235 + C35234) * C153818 +
            (C34895 * C327 + C35210 + C35210 + C34889 * C351 + C34897 * C332 +
             C35211 + C35211 + C34890 * C356 + C34899 * C1317 + C35212 +
             C35212 + C34891 * C1327 + C34901 * C3129 + C35213 + C35213 +
             C153860 * C3137) *
                C153464) *
               C153626 * C153527 * C321 -
           ((C34976 + C34977 + C34978 + C34979) * C153464 +
            (C34975 + C34974 + C34973 + C34972) * C153818) *
               C153626 * C153527 * C320 -
           ((C34901 * C4721 + C35214 + C35214 + C153860 * C4727 +
             C34899 * C3129 + C35215 + C35215 + C34891 * C3137 +
             C34897 * C1317 + C35216 + C35216 + C34890 * C1327 + C34895 * C332 +
             C35217 + C35217 + C34889 * C356) *
                C153464 +
            (C35241 + C35240 + C35239 + C35238) * C153818) *
               C153626 * C153527 * C322) *
              C153498)) /
            (p * q * std::sqrt(p + q));
    d2ee[305] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C11348 * C136 + C11353 + C11353 + C153851 * C152 + C11350 * C329 +
             C11354 + C11354 + C153671 * C353) *
                C11344 +
            (C11407 + C11408) * C11345 + C11417 * C11346 + C11418 * C153852) *
               C153626 * C153527 * C153908 -
           (C12163 * C153852 + C12164 * C11346 + (C11687 + C11688) * C11345 +
            (C11350 * C330 + C11633 + C11633 + C153671 * C354 + C11348 * C329 +
             C11634 + C11634 + C153851 * C353) *
                C11344) *
               C153626 * C153527 * C153909 +
           ((C11348 * C330 + C11635 + C11635 + C153851 * C354 + C11350 * C1319 +
             C11636 + C11636 + C153671 * C1329) *
                C11344 +
            (C11689 + C11690) * C11345 + (C11691 + C11692) * C11346 +
            (C11693 + C11694) * C153852) *
               C153626 * C153527 * C1601) *
              C153829 +
          (((C11688 + C11687) * C11344 + (C11686 + C11685) * C11345 +
            (C11684 + C11683) * C11346 + (C12175 + C12176) * C153852) *
               C153626 * C153527 * C153909 -
           (C11419 * C153852 + C11420 * C11346 + (C11410 + C11409) * C11345 +
            (C11408 + C11407) * C11344) *
               C153626 * C153527 * C153908 -
           ((C11350 * C1315 + C11657 + C11657 + C153671 * C1325 +
             C11348 * C334 + C11658 + C11658 + C153851 * C358) *
                C153852 +
            (C11694 + C11693) * C11346 + (C11692 + C11691) * C11345 +
            (C11690 + C11689) * C11344) *
               C153626 * C153527 * C1601) *
              C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C34895 * C136 + C34904 + C34904 + C34889 * C152 + C34897 * C329 +
             C34905 + C34905 + C34890 * C353 + C34899 * C330 + C34906 + C34906 +
             C34891 * C354 + C34901 * C1319 + C34907 + C34907 +
             C153860 * C1329) *
                C153818 +
            (C34972 + C34973 + C34974 + C34975) * C153464) *
               C153626 * C153527 * C153908 -
           ((C35234 + C35235 + C35236 + C35237) * C153464 +
            (C34901 * C3127 + C35190 + C35190 + C153860 * C3135 +
             C34899 * C1319 + C35191 + C35191 + C34891 * C1329 + C34897 * C330 +
             C35192 + C35192 + C34890 * C354 + C34895 * C329 + C35193 + C35193 +
             C34889 * C353) *
                C153818) *
               C153626 * C153527 * C153909 +
           ((C34895 * C330 + C35194 + C35194 + C34889 * C354 + C34897 * C1319 +
             C35195 + C35195 + C34890 * C1329 + C34899 * C3127 + C35196 +
             C35196 + C34891 * C3135 + C34901 * C4723 + C35197 + C35197 +
             C153860 * C4729) *
                C153818 +
            (C35238 + C35239 + C35240 + C35241) * C153464) *
               C153626 * C153527 * C1601) *
              C153829 +
          (((C35237 + C35236 + C35235 + C35234) * C153818 +
            (C35714 + C35715 + C35716 + C35717) * C153464) *
               C153626 * C153527 * C153909 -
           ((C34976 + C34977 + C34978 + C34979) * C153464 +
            (C34975 + C34974 + C34973 + C34972) * C153818) *
               C153626 * C153527 * C153908 -
           ((C34901 * C4721 + C35214 + C35214 + C153860 * C4727 +
             C34899 * C3129 + C35215 + C35215 + C34891 * C3137 +
             C34897 * C1317 + C35216 + C35216 + C34890 * C1327 + C34895 * C332 +
             C35217 + C35217 + C34889 * C356) *
                C153464 +
            (C35241 + C35240 + C35239 + C35238) * C153818) *
               C153626 * C153527 * C1601) *
              C153498)) /
            (p * q * std::sqrt(p + q));
    d2ee[306] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C11348 * C136 + C11353 + C11353 + C153851 * C152 + C11350 * C329 +
             C11354 + C11354 + C153671 * C353) *
                C11344 +
            (C11407 + C11408) * C11345 + C11417 * C11346 + C11418 * C153852) *
               C153626 * C153838 -
           (C12371 * C153852 + C12372 * C11346 + (C11961 + C11962) * C11345 +
            (C11350 * C1057 + C11907 + C11907 + C153671 * C1069 +
             C11348 * C542 + C11908 + C11908 + C153851 * C566) *
                C11344) *
               C153626 * C153591) *
              C153908 +
          (((C11348 * C1057 + C12643 + C12643 + C153851 * C1069 +
             C11350 * C1892 + C12644 + C12644 + C153671 * C1902) *
                C11344 +
            (C12677 + C12678) * C11345 + (C12679 + C12680) * C11346 +
            (C12681 + C12682) * C153852) *
               C153626 * C153591 -
           (C12163 * C153852 + C12164 * C11346 + (C11687 + C11688) * C11345 +
            (C11350 * C330 + C11633 + C11633 + C153671 * C354 + C11348 * C329 +
             C11634 + C11634 + C153851 * C353) *
                C11344) *
               C153626 * C153838) *
              C153909 +
          (((C11348 * C330 + C11635 + C11635 + C153851 * C354 + C11350 * C1319 +
             C11636 + C11636 + C153671 * C1329) *
                C11344 +
            (C11689 + C11690) * C11345 + (C11691 + C11692) * C11346 +
            (C11693 + C11694) * C153852) *
               C153626 * C153838 -
           ((C11350 * C4306 + C13863 + C13863 + C153671 * C4314 +
             C11348 * C1889 + C13864 + C13864 + C153851 * C1899) *
                C153852 +
            (C11350 * C4305 + C13865 + C13865 + C153671 * C4313 +
             C11348 * C1890 + C13866 + C13866 + C153851 * C1900) *
                C11346 +
            (C11350 * C4304 + C13867 + C13867 + C153671 * C4312 +
             C11348 * C1891 + C13868 + C13868 + C153851 * C1901) *
                C11345 +
            (C11350 * C4303 + C13869 + C13869 + C153671 * C4311 +
             C11348 * C1892 + C13870 + C13870 + C153851 * C1902) *
                C11344) *
               C153626 * C153591) *
              C1601) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C34895 * C136 + C34904 + C34904 + C34889 * C152 + C34897 * C329 +
             C34905 + C34905 + C34890 * C353 + C34899 * C330 + C34906 + C34906 +
             C34891 * C354 + C34901 * C1319 + C34907 + C34907 +
             C153860 * C1329) *
                C153818 +
            (C34972 + C34973 + C34974 + C34975) * C153464) *
               C153626 * C153838 -
           ((C35492 + C35493 + C35494 + C35495) * C153464 +
            (C34901 * C4303 + C35448 + C35448 + C153860 * C4311 +
             C34899 * C1892 + C35449 + C35449 + C34891 * C1902 +
             C34897 * C1057 + C35450 + C35450 + C34890 * C1069 + C34895 * C542 +
             C35451 + C35451 + C34889 * C566) *
                C153818) *
               C153626 * C153591) *
              C153908 +
          (((C34895 * C1057 + C36194 + C36194 + C34889 * C1069 +
             C34897 * C1892 + C36195 + C36195 + C34890 * C1902 +
             C34899 * C4303 + C36196 + C36196 + C34891 * C4311 +
             C34901 * C5703 + C36197 + C36197 + C153860 * C5709) *
                C153818 +
            (C36222 + C36223 + C36224 + C36225) * C153464) *
               C153626 * C153591 -
           ((C35234 + C35235 + C35236 + C35237) * C153464 +
            (C34901 * C3127 + C35190 + C35190 + C153860 * C3135 +
             C34899 * C1319 + C35191 + C35191 + C34891 * C1329 + C34897 * C330 +
             C35192 + C35192 + C34890 * C354 + C34895 * C329 + C35193 + C35193 +
             C34889 * C353) *
                C153818) *
               C153626 * C153838) *
              C153909 +
          (((C34895 * C330 + C35194 + C35194 + C34889 * C354 + C34897 * C1319 +
             C35195 + C35195 + C34890 * C1329 + C34899 * C3127 + C35196 +
             C35196 + C34891 * C3135 + C34901 * C4723 + C35197 + C35197 +
             C153860 * C4729) *
                C153818 +
            (C35238 + C35239 + C35240 + C35241) * C153464) *
               C153626 * C153838 -
           ((C34901 * C29093 + C37406 + C37406 + C153860 * C29097 +
             C34899 * C5702 + C37407 + C37407 + C34891 * C5708 +
             C34897 * C4304 + C37408 + C37408 + C34890 * C4312 +
             C34895 * C1891 + C37409 + C37409 + C34889 * C1901) *
                C153464 +
            (C34901 * C29092 + C37410 + C37410 + C153860 * C29096 +
             C34899 * C5703 + C37411 + C37411 + C34891 * C5709 +
             C34897 * C4303 + C37412 + C37412 + C34890 * C4311 +
             C34895 * C1892 + C37413 + C37413 + C34889 * C1902) *
                C153818) *
               C153626 * C153591) *
              C1601) *
         C153492) /
            (p * q * std::sqrt(p + q));
    d2ee[307] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C11348 * C136 + C11353 + C11353 + C153851 * C152 + C11350 * C329 +
            C11354 + C11354 + C153671 * C353) *
               C11344 +
           (C11407 + C11408) * C11345 + C11417 * C11346 + C11418 * C153852) *
              C153626 * C153527 * C1310 -
          (C12163 * C153852 + C12164 * C11346 + (C11687 + C11688) * C11345 +
           (C11350 * C330 + C11633 + C11633 + C153671 * C354 + C11348 * C329 +
            C11634 + C11634 + C153851 * C353) *
               C11344) *
              C153626 * C153527 * C1311 +
          ((C11348 * C330 + C11635 + C11635 + C153851 * C354 + C11350 * C1319 +
            C11636 + C11636 + C153671 * C1329) *
               C11344 +
           (C11689 + C11690) * C11345 + (C11691 + C11692) * C11346 +
           (C11693 + C11694) * C153852) *
              C153626 * C153527 * C1312 -
          ((C11350 * C3130 + C13007 + C13007 + C153671 * C3138 +
            C11348 * C1316 + C13008 + C13008 + C153851 * C1326) *
               C153852 +
           (C11350 * C3129 + C13009 + C13009 + C153671 * C3137 +
            C11348 * C1317 + C13010 + C13010 + C153851 * C1327) *
               C11346 +
           (C11350 * C3128 + C13011 + C13011 + C153671 * C3136 +
            C11348 * C1318 + C13012 + C13012 + C153851 * C1328) *
               C11345 +
           (C11350 * C3127 + C13013 + C13013 + C153671 * C3135 +
            C11348 * C1319 + C13014 + C13014 + C153851 * C1329) *
               C11344) *
              C153626 * C153527 * C1313) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C11348 * C136 + C11353 + C11353 + C153851 * C152 + C11350 * C329 +
             C11354 + C11354 + C153671 * C353) *
                C11344 +
            (C11407 + C11408) * C11345 + C11417 * C11346 + C11418 * C153852) *
               C153626 * C153527 * C1223 -
           (C12163 * C153852 + C12164 * C11346 + (C11687 + C11688) * C11345 +
            (C11350 * C330 + C11633 + C11633 + C153671 * C354 + C11348 * C329 +
             C11634 + C11634 + C153851 * C353) *
                C11344) *
               C153626 * C153527 * C153563) *
              C1225 +
          (((C11688 + C11687) * C11344 + (C11686 + C11685) * C11345 +
            (C11684 + C11683) * C11346 + (C12175 + C12176) * C153852) *
               C153626 * C153527 * C153563 -
           (C11419 * C153852 + C11420 * C11346 + (C11410 + C11409) * C11345 +
            (C11408 + C11407) * C11344) *
               C153626 * C153527 * C1223) *
              C1226 +
          ((C11417 * C11344 + C11418 * C11345 + (C11414 + C11413) * C11346 +
            (C11415 + C11416) * C153852) *
               C153626 * C153527 * C1223 -
           ((C11350 * C336 + C12169 + C12169 + C153671 * C360 + C11348 * C335 +
             C12170 + C12170 + C153851 * C359) *
                C153852 +
            (C12176 + C12175) * C11346 + C12163 * C11345 + C12164 * C11344) *
               C153626 * C153527 * C153563) *
              C1227)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C11348 * C136 + C11353 + C11353 + C153851 * C152 + C11350 * C329 +
             C11354 + C11354 + C153671 * C353) *
                C11344 +
            (C11407 + C11408) * C11345 + C11417 * C11346 + C11418 * C153852) *
               C153626 * C535 -
           (C12371 * C153852 + C12372 * C11346 + (C11961 + C11962) * C11345 +
            (C11350 * C1057 + C11907 + C11907 + C153671 * C1069 +
             C11348 * C542 + C11908 + C11908 + C153851 * C566) *
                C11344) *
               C153626 * C536 +
           ((C11348 * C543 + C11909 + C11909 + C153851 * C567 + C11350 * C1461 +
             C11910 + C11910 + C153671 * C1471) *
                C11344 +
            (C11963 + C11964) * C11345 + (C11965 + C11966) * C11346 +
            (C11967 + C11968) * C153852) *
               C153626 * C537) *
              C1223 +
          (((C11348 * C1057 + C12643 + C12643 + C153851 * C1069 +
             C11350 * C1892 + C12644 + C12644 + C153671 * C1902) *
                C11344 +
            (C12677 + C12678) * C11345 + (C12679 + C12680) * C11346 +
            (C12681 + C12682) * C153852) *
               C153626 * C536 -
           (C12163 * C153852 + C12164 * C11346 + (C11687 + C11688) * C11345 +
            (C11350 * C330 + C11633 + C11633 + C153671 * C354 + C11348 * C329 +
             C11634 + C11634 + C153851 * C353) *
                C11344) *
               C153626 * C535 -
           ((C11350 * C3444 + C13209 + C13209 + C153671 * C3452 +
             C11348 * C1458 + C13210 + C13210 + C153851 * C1468) *
                C153852 +
            (C11350 * C3443 + C13211 + C13211 + C153671 * C3451 +
             C11348 * C1459 + C13212 + C13212 + C153851 * C1469) *
                C11346 +
            (C11350 * C3442 + C13213 + C13213 + C153671 * C3450 +
             C11348 * C1460 + C13214 + C13214 + C153851 * C1470) *
                C11345 +
            (C11350 * C3441 + C13215 + C13215 + C153671 * C3449 +
             C11348 * C1461 + C13216 + C13216 + C153851 * C1471) *
                C11344) *
               C153626 * C537) *
              C153563) *
         C153492) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C34895 * C136 + C34904 + C34904 + C34889 * C152 + C34897 * C329 +
             C34905 + C34905 + C34890 * C353 + C34899 * C330 + C34906 + C34906 +
             C34891 * C354 + C34901 * C1319 + C34907 + C34907 +
             C153860 * C1329) *
                C153818 +
            (C34972 + C34973 + C34974 + C34975) * C153464) *
               C153626 * C153527 * C1223 -
           ((C35234 + C35235 + C35236 + C35237) * C153464 +
            (C34901 * C3127 + C35190 + C35190 + C153860 * C3135 +
             C34899 * C1319 + C35191 + C35191 + C34891 * C1329 + C34897 * C330 +
             C35192 + C35192 + C34890 * C354 + C34895 * C329 + C35193 + C35193 +
             C34889 * C353) *
                C153818) *
               C153626 * C153527 * C153563) *
              C1225 +
          (((C35237 + C35236 + C35235 + C35234) * C153818 +
            (C35714 + C35715 + C35716 + C35717) * C153464) *
               C153626 * C153527 * C153563 -
           ((C34976 + C34977 + C34978 + C34979) * C153464 +
            (C34975 + C34974 + C34973 + C34972) * C153818) *
               C153626 * C153527 * C1223) *
              C1226 +
          (((C34979 + C34978 + C34977 + C34976) * C153818 +
            (C34980 + C34981 + C34982 + C34983) * C153464) *
               C153626 * C153527 * C1223 -
           ((C34901 * C3130 + C35702 + C35702 + C153860 * C3138 +
             C34899 * C1316 + C35703 + C35703 + C34891 * C1326 + C34897 * C333 +
             C35704 + C35704 + C34890 * C357 + C34895 * C326 + C35705 + C35705 +
             C34889 * C350) *
                C153464 +
            (C35717 + C35716 + C35715 + C35714) * C153818) *
               C153626 * C153527 * C153563) *
              C1227)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C34895 * C136 + C34904 + C34904 + C34889 * C152 + C34897 * C329 +
            C34905 + C34905 + C34890 * C353 + C34899 * C330 + C34906 + C34906 +
            C34891 * C354 + C34901 * C1319 + C34907 + C34907 +
            C153860 * C1329) *
               C153818 +
           (C34972 + C34973 + C34974 + C34975) * C153464) *
              C153626 * C153527 * C1310 -
          ((C35234 + C35235 + C35236 + C35237) * C153464 +
           (C34901 * C3127 + C35190 + C35190 + C153860 * C3135 +
            C34899 * C1319 + C35191 + C35191 + C34891 * C1329 + C34897 * C330 +
            C35192 + C35192 + C34890 * C354 + C34895 * C329 + C35193 + C35193 +
            C34889 * C353) *
               C153818) *
              C153626 * C153527 * C1311 +
          ((C34895 * C330 + C35194 + C35194 + C34889 * C354 + C34897 * C1319 +
            C35195 + C35195 + C34890 * C1329 + C34899 * C3127 + C35196 +
            C35196 + C34891 * C3135 + C34901 * C4723 + C35197 + C35197 +
            C153860 * C4729) *
               C153818 +
           (C35238 + C35239 + C35240 + C35241) * C153464) *
              C153626 * C153527 * C1312 -
          ((C34901 * C28503 + C36550 + C36550 + C153860 * C28507 +
            C34899 * C4722 + C36551 + C36551 + C34891 * C4728 + C34897 * C3128 +
            C36552 + C36552 + C34890 * C3136 + C34895 * C1318 + C36553 +
            C36553 + C34889 * C1328) *
               C153464 +
           (C34901 * C28502 + C36554 + C36554 + C153860 * C28506 +
            C34899 * C4723 + C36555 + C36555 + C34891 * C4729 + C34897 * C3127 +
            C36556 + C36556 + C34890 * C3135 + C34895 * C1319 + C36557 +
            C36557 + C34889 * C1329) *
               C153818) *
              C153626 * C153527 * C1313) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C34895 * C136 + C34904 + C34904 + C34889 * C152 + C34897 * C329 +
             C34905 + C34905 + C34890 * C353 + C34899 * C330 + C34906 + C34906 +
             C34891 * C354 + C34901 * C1319 + C34907 + C34907 +
             C153860 * C1329) *
                C153818 +
            (C34972 + C34973 + C34974 + C34975) * C153464) *
               C153626 * C535 -
           ((C35492 + C35493 + C35494 + C35495) * C153464 +
            (C34901 * C4303 + C35448 + C35448 + C153860 * C4311 +
             C34899 * C1892 + C35449 + C35449 + C34891 * C1902 +
             C34897 * C1057 + C35450 + C35450 + C34890 * C1069 + C34895 * C542 +
             C35451 + C35451 + C34889 * C566) *
                C153818) *
               C153626 * C536 +
           ((C34895 * C543 + C35452 + C35452 + C34889 * C567 + C34897 * C1461 +
             C35453 + C35453 + C34890 * C1471 + C34899 * C3441 + C35454 +
             C35454 + C34891 * C3449 + C34901 * C4959 + C35455 + C35455 +
             C153860 * C4965) *
                C153818 +
            (C35496 + C35497 + C35498 + C35499) * C153464) *
               C153626 * C537) *
              C1223 +
          (((C34895 * C1057 + C36194 + C36194 + C34889 * C1069 +
             C34897 * C1892 + C36195 + C36195 + C34890 * C1902 +
             C34899 * C4303 + C36196 + C36196 + C34891 * C4311 +
             C34901 * C5703 + C36197 + C36197 + C153860 * C5709) *
                C153818 +
            (C36222 + C36223 + C36224 + C36225) * C153464) *
               C153626 * C536 -
           ((C35234 + C35235 + C35236 + C35237) * C153464 +
            (C34901 * C3127 + C35190 + C35190 + C153860 * C3135 +
             C34899 * C1319 + C35191 + C35191 + C34891 * C1329 + C34897 * C330 +
             C35192 + C35192 + C34890 * C354 + C34895 * C329 + C35193 + C35193 +
             C34889 * C353) *
                C153818) *
               C153626 * C535 -
           ((C34901 * C28651 + C36752 + C36752 + C153860 * C28655 +
             C34899 * C4958 + C36753 + C36753 + C34891 * C4964 +
             C34897 * C3442 + C36754 + C36754 + C34890 * C3450 +
             C34895 * C1460 + C36755 + C36755 + C34889 * C1470) *
                C153464 +
            (C34901 * C28650 + C36756 + C36756 + C153860 * C28654 +
             C34899 * C4959 + C36757 + C36757 + C34891 * C4965 +
             C34897 * C3441 + C36758 + C36758 + C34890 * C3449 +
             C34895 * C1461 + C36759 + C36759 + C34889 * C1471) *
                C153818) *
               C153626 * C537) *
              C153563) *
         C153492) /
            (p * q * std::sqrt(p + q));
    d2ee[308] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C11348 * C136 + C11353 + C11353 + C153851 * C152 + C11350 * C329 +
              C11354 + C11354 + C153671 * C353) *
                 C11344 +
             (C11407 + C11408) * C11345 + C11417 * C11346 + C11418 * C153852) *
                C153626 * C153838 -
            (C12371 * C153852 + C12372 * C11346 + (C11961 + C11962) * C11345 +
             (C11350 * C1057 + C11907 + C11907 + C153671 * C1069 +
              C11348 * C542 + C11908 + C11908 + C153851 * C566) *
                 C11344) *
                C153626 * C153591) *
               C1223 +
           (((C11348 * C1057 + C12643 + C12643 + C153851 * C1069 +
              C11350 * C1892 + C12644 + C12644 + C153671 * C1902) *
                 C11344 +
             (C12677 + C12678) * C11345 + (C12679 + C12680) * C11346 +
             (C12681 + C12682) * C153852) *
                C153626 * C153591 -
            (C12163 * C153852 + C12164 * C11346 + (C11687 + C11688) * C11345 +
             (C11350 * C330 + C11633 + C11633 + C153671 * C354 + C11348 * C329 +
              C11634 + C11634 + C153851 * C353) *
                 C11344) *
                C153626 * C153838) *
               C153563) *
              C153829 +
          ((((C11962 + C11961) * C11344 + (C11960 + C11959) * C11345 +
             (C11958 + C11957) * C11346 + (C12383 + C12384) * C153852) *
                C153626 * C153591 -
            (C11419 * C153852 + C11420 * C11346 + (C11410 + C11409) * C11345 +
             (C11408 + C11407) * C11344) *
                C153626 * C153838) *
               C1223 +
           (((C11688 + C11687) * C11344 + (C11686 + C11685) * C11345 +
             (C11684 + C11683) * C11346 + (C12175 + C12176) * C153852) *
                C153626 * C153838 -
            ((C11350 * C1888 + C12663 + C12663 + C153671 * C1898 +
              C11348 * C1061 + C12664 + C12664 + C153851 * C1073) *
                 C153852 +
             (C12682 + C12681) * C11346 + (C12680 + C12679) * C11345 +
             (C12678 + C12677) * C11344) *
                C153626 * C153591) *
               C153563) *
              C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C34895 * C136 + C34904 + C34904 + C34889 * C152 + C34897 * C329 +
              C34905 + C34905 + C34890 * C353 + C34899 * C330 + C34906 +
              C34906 + C34891 * C354 + C34901 * C1319 + C34907 + C34907 +
              C153860 * C1329) *
                 C153818 +
             (C34972 + C34973 + C34974 + C34975) * C153464) *
                C153626 * C153838 -
            ((C35492 + C35493 + C35494 + C35495) * C153464 +
             (C34901 * C4303 + C35448 + C35448 + C153860 * C4311 +
              C34899 * C1892 + C35449 + C35449 + C34891 * C1902 +
              C34897 * C1057 + C35450 + C35450 + C34890 * C1069 +
              C34895 * C542 + C35451 + C35451 + C34889 * C566) *
                 C153818) *
                C153626 * C153591) *
               C1223 +
           (((C34895 * C1057 + C36194 + C36194 + C34889 * C1069 +
              C34897 * C1892 + C36195 + C36195 + C34890 * C1902 +
              C34899 * C4303 + C36196 + C36196 + C34891 * C4311 +
              C34901 * C5703 + C36197 + C36197 + C153860 * C5709) *
                 C153818 +
             (C36222 + C36223 + C36224 + C36225) * C153464) *
                C153626 * C153591 -
            ((C35234 + C35235 + C35236 + C35237) * C153464 +
             (C34901 * C3127 + C35190 + C35190 + C153860 * C3135 +
              C34899 * C1319 + C35191 + C35191 + C34891 * C1329 +
              C34897 * C330 + C35192 + C35192 + C34890 * C354 + C34895 * C329 +
              C35193 + C35193 + C34889 * C353) *
                 C153818) *
                C153626 * C153838) *
               C153563) *
              C153829 +
          ((((C35495 + C35494 + C35493 + C35492) * C153818 +
             (C35932 + C35933 + C35934 + C35935) * C153464) *
                C153626 * C153591 -
            ((C34976 + C34977 + C34978 + C34979) * C153464 +
             (C34975 + C34974 + C34973 + C34972) * C153818) *
                C153626 * C153838) *
               C1223 +
           (((C35237 + C35236 + C35235 + C35234) * C153818 +
             (C35714 + C35715 + C35716 + C35717) * C153464) *
                C153626 * C153838 -
            ((C34901 * C5701 + C36210 + C36210 + C153860 * C5707 +
              C34899 * C4305 + C36211 + C36211 + C34891 * C4313 +
              C34897 * C1890 + C36212 + C36212 + C34890 * C1900 +
              C34895 * C1059 + C36213 + C36213 + C34889 * C1071) *
                 C153464 +
             (C36225 + C36224 + C36223 + C36222) * C153818) *
                C153626 * C153591) *
               C153563) *
              C153498)) /
            (p * q * std::sqrt(p + q));
    d2ee[309] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C11348 * C136 + C11353 + C11353 + C153851 * C152 + C11350 * C329 +
             C11354 + C11354 + C153671 * C353) *
                C11344 +
            (C11407 + C11408) * C11345 + C11417 * C11346 + C11418 * C153852) *
               C153626 * C153527 * C1223 -
           (C12163 * C153852 + C12164 * C11346 + (C11687 + C11688) * C11345 +
            (C11350 * C330 + C11633 + C11633 + C153671 * C354 + C11348 * C329 +
             C11634 + C11634 + C153851 * C353) *
                C11344) *
               C153626 * C153527 * C153563) *
              C1225 +
          (((C11688 + C11687) * C11344 + (C11686 + C11685) * C11345 +
            (C11684 + C11683) * C11346 + (C12175 + C12176) * C153852) *
               C153626 * C153527 * C153563 -
           (C11419 * C153852 + C11420 * C11346 + (C11410 + C11409) * C11345 +
            (C11408 + C11407) * C11344) *
               C153626 * C153527 * C1223) *
              C1226 +
          ((C11417 * C11344 + C11418 * C11345 + (C11414 + C11413) * C11346 +
            (C11415 + C11416) * C153852) *
               C153626 * C153527 * C1223 -
           ((C11350 * C336 + C12169 + C12169 + C153671 * C360 + C11348 * C335 +
             C12170 + C12170 + C153851 * C359) *
                C153852 +
            (C12176 + C12175) * C11346 + C12163 * C11345 + C12164 * C11344) *
               C153626 * C153527 * C153563) *
              C1227)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C11348 * C136 + C11353 + C11353 + C153851 * C152 + C11350 * C329 +
            C11354 + C11354 + C153671 * C353) *
               C11344 +
           (C11407 + C11408) * C11345 + C11417 * C11346 + C11418 * C153852) *
              C153626 * C153527 * C1310 -
          (C12163 * C153852 + C12164 * C11346 + (C11687 + C11688) * C11345 +
           (C11350 * C330 + C11633 + C11633 + C153671 * C354 + C11348 * C329 +
            C11634 + C11634 + C153851 * C353) *
               C11344) *
              C153626 * C153527 * C1311 +
          ((C11348 * C330 + C11635 + C11635 + C153851 * C354 + C11350 * C1319 +
            C11636 + C11636 + C153671 * C1329) *
               C11344 +
           (C11689 + C11690) * C11345 + (C11691 + C11692) * C11346 +
           (C11693 + C11694) * C153852) *
              C153626 * C153527 * C1312 -
          ((C11350 * C3130 + C13007 + C13007 + C153671 * C3138 +
            C11348 * C1316 + C13008 + C13008 + C153851 * C1326) *
               C153852 +
           (C11350 * C3129 + C13009 + C13009 + C153671 * C3137 +
            C11348 * C1317 + C13010 + C13010 + C153851 * C1327) *
               C11346 +
           (C11350 * C3128 + C13011 + C13011 + C153671 * C3136 +
            C11348 * C1318 + C13012 + C13012 + C153851 * C1328) *
               C11345 +
           (C11350 * C3127 + C13013 + C13013 + C153671 * C3135 +
            C11348 * C1319 + C13014 + C13014 + C153851 * C1329) *
               C11344) *
              C153626 * C153527 * C1313) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C34895 * C136 + C34904 + C34904 + C34889 * C152 + C34897 * C329 +
             C34905 + C34905 + C34890 * C353 + C34899 * C330 + C34906 + C34906 +
             C34891 * C354 + C34901 * C1319 + C34907 + C34907 +
             C153860 * C1329) *
                C153818 +
            (C34972 + C34973 + C34974 + C34975) * C153464) *
               C153626 * C153527 * C1223 -
           ((C35234 + C35235 + C35236 + C35237) * C153464 +
            (C34901 * C3127 + C35190 + C35190 + C153860 * C3135 +
             C34899 * C1319 + C35191 + C35191 + C34891 * C1329 + C34897 * C330 +
             C35192 + C35192 + C34890 * C354 + C34895 * C329 + C35193 + C35193 +
             C34889 * C353) *
                C153818) *
               C153626 * C153527 * C153563) *
              C1225 +
          (((C35237 + C35236 + C35235 + C35234) * C153818 +
            (C35714 + C35715 + C35716 + C35717) * C153464) *
               C153626 * C153527 * C153563 -
           ((C34976 + C34977 + C34978 + C34979) * C153464 +
            (C34975 + C34974 + C34973 + C34972) * C153818) *
               C153626 * C153527 * C1223) *
              C1226 +
          (((C34979 + C34978 + C34977 + C34976) * C153818 +
            (C34980 + C34981 + C34982 + C34983) * C153464) *
               C153626 * C153527 * C1223 -
           ((C34901 * C3130 + C35702 + C35702 + C153860 * C3138 +
             C34899 * C1316 + C35703 + C35703 + C34891 * C1326 + C34897 * C333 +
             C35704 + C35704 + C34890 * C357 + C34895 * C326 + C35705 + C35705 +
             C34889 * C350) *
                C153464 +
            (C35717 + C35716 + C35715 + C35714) * C153818) *
               C153626 * C153527 * C153563) *
              C1227)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C34895 * C136 + C34904 + C34904 + C34889 * C152 + C34897 * C329 +
            C34905 + C34905 + C34890 * C353 + C34899 * C330 + C34906 + C34906 +
            C34891 * C354 + C34901 * C1319 + C34907 + C34907 +
            C153860 * C1329) *
               C153818 +
           (C34972 + C34973 + C34974 + C34975) * C153464) *
              C153626 * C153527 * C1310 -
          ((C35234 + C35235 + C35236 + C35237) * C153464 +
           (C34901 * C3127 + C35190 + C35190 + C153860 * C3135 +
            C34899 * C1319 + C35191 + C35191 + C34891 * C1329 + C34897 * C330 +
            C35192 + C35192 + C34890 * C354 + C34895 * C329 + C35193 + C35193 +
            C34889 * C353) *
               C153818) *
              C153626 * C153527 * C1311 +
          ((C34895 * C330 + C35194 + C35194 + C34889 * C354 + C34897 * C1319 +
            C35195 + C35195 + C34890 * C1329 + C34899 * C3127 + C35196 +
            C35196 + C34891 * C3135 + C34901 * C4723 + C35197 + C35197 +
            C153860 * C4729) *
               C153818 +
           (C35238 + C35239 + C35240 + C35241) * C153464) *
              C153626 * C153527 * C1312 -
          ((C34901 * C28503 + C36550 + C36550 + C153860 * C28507 +
            C34899 * C4722 + C36551 + C36551 + C34891 * C4728 + C34897 * C3128 +
            C36552 + C36552 + C34890 * C3136 + C34895 * C1318 + C36553 +
            C36553 + C34889 * C1328) *
               C153464 +
           (C34901 * C28502 + C36554 + C36554 + C153860 * C28506 +
            C34899 * C4723 + C36555 + C36555 + C34891 * C4729 + C34897 * C3127 +
            C36556 + C36556 + C34890 * C3135 + C34895 * C1319 + C36557 +
            C36557 + C34889 * C1329) *
               C153818) *
              C153626 * C153527 * C1313) *
         C153492) /
            (p * q * std::sqrt(p + q));
    d2ee[310] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C11348 * C136 + C11353 + C11353 + C153851 * C152 + C11350 * C329 +
              C11354 + C11354 + C153671 * C353) *
                 C11344 +
             (C11407 + C11408) * C11345 + C11417 * C11346 + C11418 * C153852) *
                C153626 * C2030 -
            (C12371 * C153852 + C12372 * C11346 + (C11961 + C11962) * C11345 +
             (C11350 * C1057 + C11907 + C11907 + C153671 * C1069 +
              C11348 * C542 + C11908 + C11908 + C153851 * C566) *
                 C11344) *
                C153626 * C153591) *
               C153837 +
           (((C11348 * C1057 + C12643 + C12643 + C153851 * C1069 +
              C11350 * C1892 + C12644 + C12644 + C153671 * C1902) *
                 C11344 +
             (C12677 + C12678) * C11345 + (C12679 + C12680) * C11346 +
             (C12681 + C12682) * C153852) *
                C153626 * C153591 -
            (C12163 * C153852 + C12164 * C11346 + (C11687 + C11688) * C11345 +
             (C11350 * C330 + C11633 + C11633 + C153671 * C354 + C11348 * C329 +
              C11634 + C11634 + C153851 * C353) *
                 C11344) *
                C153626 * C2030) *
               C153563) *
              C153829 +
          ((((C11962 + C11961) * C11344 + (C11960 + C11959) * C11345 +
             (C11958 + C11957) * C11346 + (C12383 + C12384) * C153852) *
                C153626 * C153591 -
            (C11419 * C153852 + C11420 * C11346 + (C11410 + C11409) * C11345 +
             (C11408 + C11407) * C11344) *
                C153626 * C2030) *
               C153837 +
           (((C11688 + C11687) * C11344 + (C11686 + C11685) * C11345 +
             (C11684 + C11683) * C11346 + (C12175 + C12176) * C153852) *
                C153626 * C2030 -
            ((C11350 * C1888 + C12663 + C12663 + C153671 * C1898 +
              C11348 * C1061 + C12664 + C12664 + C153851 * C1073) *
                 C153852 +
             (C12682 + C12681) * C11346 + (C12680 + C12679) * C11345 +
             (C12678 + C12677) * C11344) *
                C153626 * C153591) *
               C153563) *
              C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C34895 * C136 + C34904 + C34904 + C34889 * C152 + C34897 * C329 +
              C34905 + C34905 + C34890 * C353 + C34899 * C330 + C34906 +
              C34906 + C34891 * C354 + C34901 * C1319 + C34907 + C34907 +
              C153860 * C1329) *
                 C153818 +
             (C34972 + C34973 + C34974 + C34975) * C153464) *
                C153626 * C2030 -
            ((C35492 + C35493 + C35494 + C35495) * C153464 +
             (C34901 * C4303 + C35448 + C35448 + C153860 * C4311 +
              C34899 * C1892 + C35449 + C35449 + C34891 * C1902 +
              C34897 * C1057 + C35450 + C35450 + C34890 * C1069 +
              C34895 * C542 + C35451 + C35451 + C34889 * C566) *
                 C153818) *
                C153626 * C153591) *
               C153837 +
           (((C34895 * C1057 + C36194 + C36194 + C34889 * C1069 +
              C34897 * C1892 + C36195 + C36195 + C34890 * C1902 +
              C34899 * C4303 + C36196 + C36196 + C34891 * C4311 +
              C34901 * C5703 + C36197 + C36197 + C153860 * C5709) *
                 C153818 +
             (C36222 + C36223 + C36224 + C36225) * C153464) *
                C153626 * C153591 -
            ((C35234 + C35235 + C35236 + C35237) * C153464 +
             (C34901 * C3127 + C35190 + C35190 + C153860 * C3135 +
              C34899 * C1319 + C35191 + C35191 + C34891 * C1329 +
              C34897 * C330 + C35192 + C35192 + C34890 * C354 + C34895 * C329 +
              C35193 + C35193 + C34889 * C353) *
                 C153818) *
                C153626 * C2030) *
               C153563) *
              C153829 +
          ((((C35495 + C35494 + C35493 + C35492) * C153818 +
             (C35932 + C35933 + C35934 + C35935) * C153464) *
                C153626 * C153591 -
            ((C34976 + C34977 + C34978 + C34979) * C153464 +
             (C34975 + C34974 + C34973 + C34972) * C153818) *
                C153626 * C2030) *
               C153837 +
           (((C35237 + C35236 + C35235 + C35234) * C153818 +
             (C35714 + C35715 + C35716 + C35717) * C153464) *
                C153626 * C2030 -
            ((C34901 * C5701 + C36210 + C36210 + C153860 * C5707 +
              C34899 * C4305 + C36211 + C36211 + C34891 * C4313 +
              C34897 * C1890 + C36212 + C36212 + C34890 * C1900 +
              C34895 * C1059 + C36213 + C36213 + C34889 * C1071) *
                 C153464 +
             (C36225 + C36224 + C36223 + C36222) * C153818) *
                C153626 * C153591) *
               C153563) *
              C153498)) /
            (p * q * std::sqrt(p + q));
    d2ee[311] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C11348 * C136 + C11353 + C11353 + C153851 * C152 + C11350 * C329 +
             C11354 + C11354 + C153671 * C353) *
                C11344 +
            (C11407 + C11408) * C11345 + C11417 * C11346 + C11418 * C153852) *
               C153626 * C153910 -
           (C12371 * C153852 + C12372 * C11346 + (C11961 + C11962) * C11345 +
            (C11350 * C1057 + C11907 + C11907 + C153671 * C1069 +
             C11348 * C542 + C11908 + C11908 + C153851 * C566) *
                C11344) *
               C153626 * C153911 +
           ((C11348 * C543 + C11909 + C11909 + C153851 * C567 + C11350 * C1461 +
             C11910 + C11910 + C153671 * C1471) *
                C11344 +
            (C11963 + C11964) * C11345 + (C11965 + C11966) * C11346 +
            (C11967 + C11968) * C153852) *
               C153626 * C2546) *
              C153837 +
          (((C11348 * C1057 + C12643 + C12643 + C153851 * C1069 +
             C11350 * C1892 + C12644 + C12644 + C153671 * C1902) *
                C11344 +
            (C12677 + C12678) * C11345 + (C12679 + C12680) * C11346 +
            (C12681 + C12682) * C153852) *
               C153626 * C153911 -
           (C12163 * C153852 + C12164 * C11346 + (C11687 + C11688) * C11345 +
            (C11350 * C330 + C11633 + C11633 + C153671 * C354 + C11348 * C329 +
             C11634 + C11634 + C153851 * C353) *
                C11344) *
               C153626 * C153910 -
           ((C11350 * C3444 + C13209 + C13209 + C153671 * C3452 +
             C11348 * C1458 + C13210 + C13210 + C153851 * C1468) *
                C153852 +
            (C11350 * C3443 + C13211 + C13211 + C153671 * C3451 +
             C11348 * C1459 + C13212 + C13212 + C153851 * C1469) *
                C11346 +
            (C11350 * C3442 + C13213 + C13213 + C153671 * C3450 +
             C11348 * C1460 + C13214 + C13214 + C153851 * C1470) *
                C11345 +
            (C11350 * C3441 + C13215 + C13215 + C153671 * C3449 +
             C11348 * C1461 + C13216 + C13216 + C153851 * C1471) *
                C11344) *
               C153626 * C2546) *
              C153563) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C34895 * C136 + C34904 + C34904 + C34889 * C152 + C34897 * C329 +
             C34905 + C34905 + C34890 * C353 + C34899 * C330 + C34906 + C34906 +
             C34891 * C354 + C34901 * C1319 + C34907 + C34907 +
             C153860 * C1329) *
                C153818 +
            (C34972 + C34973 + C34974 + C34975) * C153464) *
               C153626 * C153910 -
           ((C35492 + C35493 + C35494 + C35495) * C153464 +
            (C34901 * C4303 + C35448 + C35448 + C153860 * C4311 +
             C34899 * C1892 + C35449 + C35449 + C34891 * C1902 +
             C34897 * C1057 + C35450 + C35450 + C34890 * C1069 + C34895 * C542 +
             C35451 + C35451 + C34889 * C566) *
                C153818) *
               C153626 * C153911 +
           ((C34895 * C543 + C35452 + C35452 + C34889 * C567 + C34897 * C1461 +
             C35453 + C35453 + C34890 * C1471 + C34899 * C3441 + C35454 +
             C35454 + C34891 * C3449 + C34901 * C4959 + C35455 + C35455 +
             C153860 * C4965) *
                C153818 +
            (C35496 + C35497 + C35498 + C35499) * C153464) *
               C153626 * C2546) *
              C153837 +
          (((C34895 * C1057 + C36194 + C36194 + C34889 * C1069 +
             C34897 * C1892 + C36195 + C36195 + C34890 * C1902 +
             C34899 * C4303 + C36196 + C36196 + C34891 * C4311 +
             C34901 * C5703 + C36197 + C36197 + C153860 * C5709) *
                C153818 +
            (C36222 + C36223 + C36224 + C36225) * C153464) *
               C153626 * C153911 -
           ((C35234 + C35235 + C35236 + C35237) * C153464 +
            (C34901 * C3127 + C35190 + C35190 + C153860 * C3135 +
             C34899 * C1319 + C35191 + C35191 + C34891 * C1329 + C34897 * C330 +
             C35192 + C35192 + C34890 * C354 + C34895 * C329 + C35193 + C35193 +
             C34889 * C353) *
                C153818) *
               C153626 * C153910 -
           ((C34901 * C28651 + C36752 + C36752 + C153860 * C28655 +
             C34899 * C4958 + C36753 + C36753 + C34891 * C4964 +
             C34897 * C3442 + C36754 + C36754 + C34890 * C3450 +
             C34895 * C1460 + C36755 + C36755 + C34889 * C1470) *
                C153464 +
            (C34901 * C28650 + C36756 + C36756 + C153860 * C28654 +
             C34899 * C4959 + C36757 + C36757 + C34891 * C4965 +
             C34897 * C3441 + C36758 + C36758 + C34890 * C3449 +
             C34895 * C1461 + C36759 + C36759 + C34889 * C1471) *
                C153818) *
               C153626 * C2546) *
              C153563) *
         C153492) /
            (p * q * std::sqrt(p + q));
    d2ee[312] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C11348 * C136 + C11353 + C11353 + C153851 * C152 + C11350 * C329 +
             C11354 + C11354 + C153671 * C353) *
                C11344 +
            (C11407 + C11408) * C11345 + C11417 * C11346 + C11418 * C153852) *
               C153626 * C2030 -
           (C12371 * C153852 + C12372 * C11346 + (C11961 + C11962) * C11345 +
            (C11350 * C1057 + C11907 + C11907 + C153671 * C1069 +
             C11348 * C542 + C11908 + C11908 + C153851 * C566) *
                C11344) *
               C153626 * C153591) *
              C320 +
          (((C11348 * C1057 + C12643 + C12643 + C153851 * C1069 +
             C11350 * C1892 + C12644 + C12644 + C153671 * C1902) *
                C11344 +
            (C12677 + C12678) * C11345 + (C12679 + C12680) * C11346 +
            (C12681 + C12682) * C153852) *
               C153626 * C153591 -
           (C12163 * C153852 + C12164 * C11346 + (C11687 + C11688) * C11345 +
            (C11350 * C330 + C11633 + C11633 + C153671 * C354 + C11348 * C329 +
             C11634 + C11634 + C153851 * C353) *
                C11344) *
               C153626 * C2030) *
              C321 +
          (((C11348 * C330 + C11635 + C11635 + C153851 * C354 + C11350 * C1319 +
             C11636 + C11636 + C153671 * C1329) *
                C11344 +
            (C11689 + C11690) * C11345 + (C11691 + C11692) * C11346 +
            (C11693 + C11694) * C153852) *
               C153626 * C2030 -
           ((C11350 * C4306 + C13863 + C13863 + C153671 * C4314 +
             C11348 * C1889 + C13864 + C13864 + C153851 * C1899) *
                C153852 +
            (C11350 * C4305 + C13865 + C13865 + C153671 * C4313 +
             C11348 * C1890 + C13866 + C13866 + C153851 * C1900) *
                C11346 +
            (C11350 * C4304 + C13867 + C13867 + C153671 * C4312 +
             C11348 * C1891 + C13868 + C13868 + C153851 * C1901) *
                C11345 +
            (C11350 * C4303 + C13869 + C13869 + C153671 * C4311 +
             C11348 * C1892 + C13870 + C13870 + C153851 * C1902) *
                C11344) *
               C153626 * C153591) *
              C322) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C11348 * C136 + C11353 + C11353 + C153851 * C152 + C11350 * C329 +
             C11354 + C11354 + C153671 * C353) *
                C11344 +
            (C11407 + C11408) * C11345 + C11417 * C11346 + C11418 * C153852) *
               C153626 * C2030 -
           (C12371 * C153852 + C12372 * C11346 + (C11961 + C11962) * C11345 +
            (C11350 * C1057 + C11907 + C11907 + C153671 * C1069 +
             C11348 * C542 + C11908 + C11908 + C153851 * C566) *
                C11344) *
               C153626 * C153591) *
              C153511 * C1225 +
          (((C11962 + C11961) * C11344 + (C11960 + C11959) * C11345 +
            (C11958 + C11957) * C11346 + (C12383 + C12384) * C153852) *
               C153626 * C153591 -
           (C11419 * C153852 + C11420 * C11346 + (C11410 + C11409) * C11345 +
            (C11408 + C11407) * C11344) *
               C153626 * C2030) *
              C153511 * C1226 +
          ((C11417 * C11344 + C11418 * C11345 + (C11414 + C11413) * C11346 +
            (C11415 + C11416) * C153852) *
               C153626 * C2030 -
           ((C11350 * C1062 + C12377 + C12377 + C153671 * C1074 +
             C11348 * C548 + C12378 + C12378 + C153851 * C572) *
                C153852 +
            (C12384 + C12383) * C11346 + C12371 * C11345 + C12372 * C11344) *
               C153626 * C153591) *
              C153511 * C1227)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C11348 * C136 + C11353 + C11353 + C153851 * C152 + C11350 * C329 +
            C11354 + C11354 + C153671 * C353) *
               C11344 +
           (C11407 + C11408) * C11345 + C11417 * C11346 + C11418 * C153852) *
              C153626 * C2236 -
          (C12371 * C153852 + C12372 * C11346 + (C11961 + C11962) * C11345 +
           (C11350 * C1057 + C11907 + C11907 + C153671 * C1069 + C11348 * C542 +
            C11908 + C11908 + C153851 * C566) *
               C11344) *
              C153626 * C2237 +
          ((C11348 * C543 + C11909 + C11909 + C153851 * C567 + C11350 * C1461 +
            C11910 + C11910 + C153671 * C1471) *
               C11344 +
           (C11963 + C11964) * C11345 + (C11965 + C11966) * C11346 +
           (C11967 + C11968) * C153852) *
              C153626 * C2238 -
          ((C11350 * C8488 + C14389 + C14389 + C153671 * C8490 +
            C11348 * C2241 + C14390 + C14390 + C153851 * C2251) *
               C153852 +
           (C11350 * C6302 + C14391 + C14391 + C153671 * C6314 +
            C11348 * C2242 + C14392 + C14392 + C153851 * C2252) *
               C11346 +
           (C11350 * C6304 + C14393 + C14393 + C153671 * C6316 +
            C11348 * C2243 + C14394 + C14394 + C153851 * C2253) *
               C11345 +
           (C11350 * C6306 + C14395 + C14395 + C153671 * C6318 +
            C11348 * C2244 + C14396 + C14396 + C153851 * C2254) *
               C11344) *
              C153626 * C2239) *
         C153511 * C153492) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C34895 * C136 + C34904 + C34904 + C34889 * C152 + C34897 * C329 +
             C34905 + C34905 + C34890 * C353 + C34899 * C330 + C34906 + C34906 +
             C34891 * C354 + C34901 * C1319 + C34907 + C34907 +
             C153860 * C1329) *
                C153818 +
            (C34972 + C34973 + C34974 + C34975) * C153464) *
               C153626 * C2030 -
           ((C35492 + C35493 + C35494 + C35495) * C153464 +
            (C34901 * C4303 + C35448 + C35448 + C153860 * C4311 +
             C34899 * C1892 + C35449 + C35449 + C34891 * C1902 +
             C34897 * C1057 + C35450 + C35450 + C34890 * C1069 + C34895 * C542 +
             C35451 + C35451 + C34889 * C566) *
                C153818) *
               C153626 * C153591) *
              C153511 * C1225 +
          (((C35495 + C35494 + C35493 + C35492) * C153818 +
            (C35932 + C35933 + C35934 + C35935) * C153464) *
               C153626 * C153591 -
           ((C34976 + C34977 + C34978 + C34979) * C153464 +
            (C34975 + C34974 + C34973 + C34972) * C153818) *
               C153626 * C2030) *
              C153511 * C1226 +
          (((C34979 + C34978 + C34977 + C34976) * C153818 +
            (C34980 + C34981 + C34982 + C34983) * C153464) *
               C153626 * C2030 -
           ((C34901 * C4306 + C35920 + C35920 + C153860 * C4314 +
             C34899 * C1889 + C35921 + C35921 + C34891 * C1899 +
             C34897 * C1060 + C35922 + C35922 + C34890 * C1072 + C34895 * C539 +
             C35923 + C35923 + C34889 * C563) *
                C153464 +
            (C35935 + C35934 + C35933 + C35932) * C153818) *
               C153626 * C153591) *
              C153511 * C1227)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C34895 * C136 + C34904 + C34904 + C34889 * C152 + C34897 * C329 +
             C34905 + C34905 + C34890 * C353 + C34899 * C330 + C34906 + C34906 +
             C34891 * C354 + C34901 * C1319 + C34907 + C34907 +
             C153860 * C1329) *
                C153818 +
            (C34972 + C34973 + C34974 + C34975) * C153464) *
               C153626 * C2030 -
           ((C35492 + C35493 + C35494 + C35495) * C153464 +
            (C34901 * C4303 + C35448 + C35448 + C153860 * C4311 +
             C34899 * C1892 + C35449 + C35449 + C34891 * C1902 +
             C34897 * C1057 + C35450 + C35450 + C34890 * C1069 + C34895 * C542 +
             C35451 + C35451 + C34889 * C566) *
                C153818) *
               C153626 * C153591) *
              C320 +
          (((C34895 * C1057 + C36194 + C36194 + C34889 * C1069 +
             C34897 * C1892 + C36195 + C36195 + C34890 * C1902 +
             C34899 * C4303 + C36196 + C36196 + C34891 * C4311 +
             C34901 * C5703 + C36197 + C36197 + C153860 * C5709) *
                C153818 +
            (C36222 + C36223 + C36224 + C36225) * C153464) *
               C153626 * C153591 -
           ((C35234 + C35235 + C35236 + C35237) * C153464 +
            (C34901 * C3127 + C35190 + C35190 + C153860 * C3135 +
             C34899 * C1319 + C35191 + C35191 + C34891 * C1329 + C34897 * C330 +
             C35192 + C35192 + C34890 * C354 + C34895 * C329 + C35193 + C35193 +
             C34889 * C353) *
                C153818) *
               C153626 * C2030) *
              C321 +
          (((C34895 * C330 + C35194 + C35194 + C34889 * C354 + C34897 * C1319 +
             C35195 + C35195 + C34890 * C1329 + C34899 * C3127 + C35196 +
             C35196 + C34891 * C3135 + C34901 * C4723 + C35197 + C35197 +
             C153860 * C4729) *
                C153818 +
            (C35238 + C35239 + C35240 + C35241) * C153464) *
               C153626 * C2030 -
           ((C34901 * C29093 + C37406 + C37406 + C153860 * C29097 +
             C34899 * C5702 + C37407 + C37407 + C34891 * C5708 +
             C34897 * C4304 + C37408 + C37408 + C34890 * C4312 +
             C34895 * C1891 + C37409 + C37409 + C34889 * C1901) *
                C153464 +
            (C34901 * C29092 + C37410 + C37410 + C153860 * C29096 +
             C34899 * C5703 + C37411 + C37411 + C34891 * C5709 +
             C34897 * C4303 + C37412 + C37412 + C34890 * C4311 +
             C34895 * C1892 + C37413 + C37413 + C34889 * C1902) *
                C153818) *
               C153626 * C153591) *
              C322) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C34895 * C136 + C34904 + C34904 + C34889 * C152 + C34897 * C329 +
            C34905 + C34905 + C34890 * C353 + C34899 * C330 + C34906 + C34906 +
            C34891 * C354 + C34901 * C1319 + C34907 + C34907 +
            C153860 * C1329) *
               C153818 +
           (C34972 + C34973 + C34974 + C34975) * C153464) *
              C153626 * C2236 -
          ((C35492 + C35493 + C35494 + C35495) * C153464 +
           (C34901 * C4303 + C35448 + C35448 + C153860 * C4311 +
            C34899 * C1892 + C35449 + C35449 + C34891 * C1902 + C34897 * C1057 +
            C35450 + C35450 + C34890 * C1069 + C34895 * C542 + C35451 + C35451 +
            C34889 * C566) *
               C153818) *
              C153626 * C2237 +
          ((C34895 * C543 + C35452 + C35452 + C34889 * C567 + C34897 * C1461 +
            C35453 + C35453 + C34890 * C1471 + C34899 * C3441 + C35454 +
            C35454 + C34891 * C3449 + C34901 * C4959 + C35455 + C35455 +
            C153860 * C4965) *
               C153818 +
           (C35496 + C35497 + C35498 + C35499) * C153464) *
              C153626 * C2238 -
          ((C34901 * C31999 + C37932 + C37932 + C153860 * C32001 +
            C34899 * C6303 + C37933 + C37933 + C34891 * C6315 + C34897 * C6304 +
            C37934 + C37934 + C34890 * C6316 + C34895 * C2243 + C37935 +
            C37935 + C34889 * C2253) *
               C153464 +
           (C34901 * C30191 + C37936 + C37936 + C153860 * C30195 +
            C34899 * C6305 + C37937 + C37937 + C34891 * C6317 + C34897 * C6306 +
            C37938 + C37938 + C34890 * C6318 + C34895 * C2244 + C37939 +
            C37939 + C34889 * C2254) *
               C153818) *
              C153626 * C2239) *
         C153511 * C153492) /
            (p * q * std::sqrt(p + q));
    d2ee[313] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C11348 * C136 + C11353 + C11353 + C153851 * C152 + C11350 * C329 +
             C11354 + C11354 + C153671 * C353) *
                C11344 +
            (C11407 + C11408) * C11345 + C11417 * C11346 + C11418 * C153852) *
               C153626 * C153910 -
           (C12371 * C153852 + C12372 * C11346 + (C11961 + C11962) * C11345 +
            (C11350 * C1057 + C11907 + C11907 + C153671 * C1069 +
             C11348 * C542 + C11908 + C11908 + C153851 * C566) *
                C11344) *
               C153626 * C153911 +
           ((C11348 * C543 + C11909 + C11909 + C153851 * C567 + C11350 * C1461 +
             C11910 + C11910 + C153671 * C1471) *
                C11344 +
            (C11963 + C11964) * C11345 + (C11965 + C11966) * C11346 +
            (C11967 + C11968) * C153852) *
               C153626 * C2546) *
              C153511 * C153829 +
          (((C11962 + C11961) * C11344 + (C11960 + C11959) * C11345 +
            (C11958 + C11957) * C11346 + (C12383 + C12384) * C153852) *
               C153626 * C153911 -
           (C11419 * C153852 + C11420 * C11346 + (C11410 + C11409) * C11345 +
            (C11408 + C11407) * C11344) *
               C153626 * C153910 -
           ((C11350 * C1457 + C11931 + C11931 + C153671 * C1467 +
             C11348 * C547 + C11932 + C11932 + C153851 * C571) *
                C153852 +
            (C11968 + C11967) * C11346 + (C11966 + C11965) * C11345 +
            (C11964 + C11963) * C11344) *
               C153626 * C2546) *
              C153511 * C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C34895 * C136 + C34904 + C34904 + C34889 * C152 + C34897 * C329 +
             C34905 + C34905 + C34890 * C353 + C34899 * C330 + C34906 + C34906 +
             C34891 * C354 + C34901 * C1319 + C34907 + C34907 +
             C153860 * C1329) *
                C153818 +
            (C34972 + C34973 + C34974 + C34975) * C153464) *
               C153626 * C153910 -
           ((C35492 + C35493 + C35494 + C35495) * C153464 +
            (C34901 * C4303 + C35448 + C35448 + C153860 * C4311 +
             C34899 * C1892 + C35449 + C35449 + C34891 * C1902 +
             C34897 * C1057 + C35450 + C35450 + C34890 * C1069 + C34895 * C542 +
             C35451 + C35451 + C34889 * C566) *
                C153818) *
               C153626 * C153911 +
           ((C34895 * C543 + C35452 + C35452 + C34889 * C567 + C34897 * C1461 +
             C35453 + C35453 + C34890 * C1471 + C34899 * C3441 + C35454 +
             C35454 + C34891 * C3449 + C34901 * C4959 + C35455 + C35455 +
             C153860 * C4965) *
                C153818 +
            (C35496 + C35497 + C35498 + C35499) * C153464) *
               C153626 * C2546) *
              C153511 * C153829 +
          (((C35495 + C35494 + C35493 + C35492) * C153818 +
            (C35932 + C35933 + C35934 + C35935) * C153464) *
               C153626 * C153911 -
           ((C34976 + C34977 + C34978 + C34979) * C153464 +
            (C34975 + C34974 + C34973 + C34972) * C153818) *
               C153626 * C153910 -
           ((C34901 * C4957 + C35472 + C35472 + C153860 * C4963 +
             C34899 * C3443 + C35473 + C35473 + C34891 * C3451 +
             C34897 * C1459 + C35474 + C35474 + C34890 * C1469 + C34895 * C545 +
             C35475 + C35475 + C34889 * C569) *
                C153464 +
            (C35499 + C35498 + C35497 + C35496) * C153818) *
               C153626 * C2546) *
              C153511 * C153498)) /
            (p * q * std::sqrt(p + q));
    d2ee[314] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C11348 * C136 + C11353 + C11353 + C153851 * C152 + C11350 * C329 +
             C11354 + C11354 + C153671 * C353) *
                C11344 +
            (C11407 + C11408) * C11345 + C11417 * C11346 + C11418 * C153852) *
               C153626 * C2030 -
           (C12371 * C153852 + C12372 * C11346 + (C11961 + C11962) * C11345 +
            (C11350 * C1057 + C11907 + C11907 + C153671 * C1069 +
             C11348 * C542 + C11908 + C11908 + C153851 * C566) *
                C11344) *
               C153626 * C153591) *
              C153511 * C1225 +
          (((C11962 + C11961) * C11344 + (C11960 + C11959) * C11345 +
            (C11958 + C11957) * C11346 + (C12383 + C12384) * C153852) *
               C153626 * C153591 -
           (C11419 * C153852 + C11420 * C11346 + (C11410 + C11409) * C11345 +
            (C11408 + C11407) * C11344) *
               C153626 * C2030) *
              C153511 * C1226 +
          ((C11417 * C11344 + C11418 * C11345 + (C11414 + C11413) * C11346 +
            (C11415 + C11416) * C153852) *
               C153626 * C2030 -
           ((C11350 * C1062 + C12377 + C12377 + C153671 * C1074 +
             C11348 * C548 + C12378 + C12378 + C153851 * C572) *
                C153852 +
            (C12384 + C12383) * C11346 + C12371 * C11345 + C12372 * C11344) *
               C153626 * C153591) *
              C153511 * C1227)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C11348 * C136 + C11353 + C11353 + C153851 * C152 + C11350 * C329 +
             C11354 + C11354 + C153671 * C353) *
                C11344 +
            (C11407 + C11408) * C11345 + C11417 * C11346 + C11418 * C153852) *
               C153626 * C2030 -
           (C12371 * C153852 + C12372 * C11346 + (C11961 + C11962) * C11345 +
            (C11350 * C1057 + C11907 + C11907 + C153671 * C1069 +
             C11348 * C542 + C11908 + C11908 + C153851 * C566) *
                C11344) *
               C153626 * C153591) *
              C320 +
          (((C11348 * C1057 + C12643 + C12643 + C153851 * C1069 +
             C11350 * C1892 + C12644 + C12644 + C153671 * C1902) *
                C11344 +
            (C12677 + C12678) * C11345 + (C12679 + C12680) * C11346 +
            (C12681 + C12682) * C153852) *
               C153626 * C153591 -
           (C12163 * C153852 + C12164 * C11346 + (C11687 + C11688) * C11345 +
            (C11350 * C330 + C11633 + C11633 + C153671 * C354 + C11348 * C329 +
             C11634 + C11634 + C153851 * C353) *
                C11344) *
               C153626 * C2030) *
              C321 +
          (((C11348 * C330 + C11635 + C11635 + C153851 * C354 + C11350 * C1319 +
             C11636 + C11636 + C153671 * C1329) *
                C11344 +
            (C11689 + C11690) * C11345 + (C11691 + C11692) * C11346 +
            (C11693 + C11694) * C153852) *
               C153626 * C2030 -
           ((C11350 * C4306 + C13863 + C13863 + C153671 * C4314 +
             C11348 * C1889 + C13864 + C13864 + C153851 * C1899) *
                C153852 +
            (C11350 * C4305 + C13865 + C13865 + C153671 * C4313 +
             C11348 * C1890 + C13866 + C13866 + C153851 * C1900) *
                C11346 +
            (C11350 * C4304 + C13867 + C13867 + C153671 * C4312 +
             C11348 * C1891 + C13868 + C13868 + C153851 * C1901) *
                C11345 +
            (C11350 * C4303 + C13869 + C13869 + C153671 * C4311 +
             C11348 * C1892 + C13870 + C13870 + C153851 * C1902) *
                C11344) *
               C153626 * C153591) *
              C322) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C34895 * C136 + C34904 + C34904 + C34889 * C152 + C34897 * C329 +
             C34905 + C34905 + C34890 * C353 + C34899 * C330 + C34906 + C34906 +
             C34891 * C354 + C34901 * C1319 + C34907 + C34907 +
             C153860 * C1329) *
                C153818 +
            (C34972 + C34973 + C34974 + C34975) * C153464) *
               C153626 * C2030 -
           ((C35492 + C35493 + C35494 + C35495) * C153464 +
            (C34901 * C4303 + C35448 + C35448 + C153860 * C4311 +
             C34899 * C1892 + C35449 + C35449 + C34891 * C1902 +
             C34897 * C1057 + C35450 + C35450 + C34890 * C1069 + C34895 * C542 +
             C35451 + C35451 + C34889 * C566) *
                C153818) *
               C153626 * C153591) *
              C153511 * C1225 +
          (((C35495 + C35494 + C35493 + C35492) * C153818 +
            (C35932 + C35933 + C35934 + C35935) * C153464) *
               C153626 * C153591 -
           ((C34976 + C34977 + C34978 + C34979) * C153464 +
            (C34975 + C34974 + C34973 + C34972) * C153818) *
               C153626 * C2030) *
              C153511 * C1226 +
          (((C34979 + C34978 + C34977 + C34976) * C153818 +
            (C34980 + C34981 + C34982 + C34983) * C153464) *
               C153626 * C2030 -
           ((C34901 * C4306 + C35920 + C35920 + C153860 * C4314 +
             C34899 * C1889 + C35921 + C35921 + C34891 * C1899 +
             C34897 * C1060 + C35922 + C35922 + C34890 * C1072 + C34895 * C539 +
             C35923 + C35923 + C34889 * C563) *
                C153464 +
            (C35935 + C35934 + C35933 + C35932) * C153818) *
               C153626 * C153591) *
              C153511 * C1227)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C34895 * C136 + C34904 + C34904 + C34889 * C152 + C34897 * C329 +
             C34905 + C34905 + C34890 * C353 + C34899 * C330 + C34906 + C34906 +
             C34891 * C354 + C34901 * C1319 + C34907 + C34907 +
             C153860 * C1329) *
                C153818 +
            (C34972 + C34973 + C34974 + C34975) * C153464) *
               C153626 * C2030 -
           ((C35492 + C35493 + C35494 + C35495) * C153464 +
            (C34901 * C4303 + C35448 + C35448 + C153860 * C4311 +
             C34899 * C1892 + C35449 + C35449 + C34891 * C1902 +
             C34897 * C1057 + C35450 + C35450 + C34890 * C1069 + C34895 * C542 +
             C35451 + C35451 + C34889 * C566) *
                C153818) *
               C153626 * C153591) *
              C320 +
          (((C34895 * C1057 + C36194 + C36194 + C34889 * C1069 +
             C34897 * C1892 + C36195 + C36195 + C34890 * C1902 +
             C34899 * C4303 + C36196 + C36196 + C34891 * C4311 +
             C34901 * C5703 + C36197 + C36197 + C153860 * C5709) *
                C153818 +
            (C36222 + C36223 + C36224 + C36225) * C153464) *
               C153626 * C153591 -
           ((C35234 + C35235 + C35236 + C35237) * C153464 +
            (C34901 * C3127 + C35190 + C35190 + C153860 * C3135 +
             C34899 * C1319 + C35191 + C35191 + C34891 * C1329 + C34897 * C330 +
             C35192 + C35192 + C34890 * C354 + C34895 * C329 + C35193 + C35193 +
             C34889 * C353) *
                C153818) *
               C153626 * C2030) *
              C321 +
          (((C34895 * C330 + C35194 + C35194 + C34889 * C354 + C34897 * C1319 +
             C35195 + C35195 + C34890 * C1329 + C34899 * C3127 + C35196 +
             C35196 + C34891 * C3135 + C34901 * C4723 + C35197 + C35197 +
             C153860 * C4729) *
                C153818 +
            (C35238 + C35239 + C35240 + C35241) * C153464) *
               C153626 * C2030 -
           ((C34901 * C29093 + C37406 + C37406 + C153860 * C29097 +
             C34899 * C5702 + C37407 + C37407 + C34891 * C5708 +
             C34897 * C4304 + C37408 + C37408 + C34890 * C4312 +
             C34895 * C1891 + C37409 + C37409 + C34889 * C1901) *
                C153464 +
            (C34901 * C29092 + C37410 + C37410 + C153860 * C29096 +
             C34899 * C5703 + C37411 + C37411 + C34891 * C5709 +
             C34897 * C4303 + C37412 + C37412 + C34890 * C4311 +
             C34895 * C1892 + C37413 + C37413 + C34889 * C1902) *
                C153818) *
               C153626 * C153591) *
              C322) *
         C153492) /
            (p * q * std::sqrt(p + q));
    d2ee[315] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C11348 * C136 + C11353 + C11353 + C153851 * C152 + C11350 * C329 +
              C11354 + C11354 + C153671 * C353) *
                 C2818 +
             (C11407 + C11408) * C2819 + C11417 * C153874) *
                C153853 +
            ((C19416 + C19417) * C2818 + C19382 * C2819 + C18777 * C153874) *
                C153713) *
               C153527 * C153837 -
           ((C19714 * C153874 + (C12678 + C12677) * C2819 +
             (C11350 * C1892 + C12644 + C12644 + C153671 * C1902 +
              C11348 * C1057 + C12643 + C12643 + C153851 * C1069) *
                 C2818) *
                C153713 +
            (C12164 * C153874 + (C11687 + C11688) * C2819 +
             (C11350 * C330 + C11633 + C11633 + C153671 * C354 + C11348 * C329 +
              C11634 + C11634 + C153851 * C353) *
                 C2818) *
                C153853) *
               C153527 * C153563) *
              C153906 +
          ((((C11688 + C11687) * C2818 + (C11686 + C11685) * C2819 +
             (C11684 + C11683) * C153874) *
                C153853 +
            ((C12677 + C12678) * C2818 + (C12679 + C12680) * C2819 +
             (C12681 + C12682) * C153874) *
                C153713) *
               C153527 * C153563 -
           ((C12371 * C153874 + C12372 * C2819 + C19389 * C2818) * C153713 +
            (C11420 * C153874 + (C11410 + C11409) * C2819 +
             (C11408 + C11407) * C2818) *
                C153853) *
               C153527 * C153837) *
              C153907 +
          (((C11417 * C2818 + C11418 * C2819 + (C11414 + C11413) * C153874) *
                C153853 +
            (C18777 * C2818 + (C11958 + C11957) * C2819 +
             (C12383 + C12384) * C153874) *
                C153713) *
               C153527 * C153837 -
           (((C11350 * C1888 + C12663 + C12663 + C153671 * C1898 +
              C11348 * C1061 + C12664 + C12664 + C153851 * C1073) *
                 C153874 +
             (C12682 + C12681) * C2819 + C19714 * C2818) *
                C153713 +
            ((C12176 + C12175) * C153874 + C12163 * C2819 + C12164 * C2818) *
                C153853) *
               C153527 * C153563) *
              C752)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C34895 * C136 + C34904 + C34904 + C34889 * C152 + C34897 * C329 +
             C34905 + C34905 + C34890 * C353 + C34899 * C330 + C34906 + C34906 +
             C34891 * C354 + C34901 * C1319 + C34907 + C34907 +
             C153860 * C1329) *
                C153454 * C153853 +
            (C44386 + C44387 + C44388 + C44389) * C153454 * C153713) *
               C153527 * C153837 -
           ((C34901 * C5703 + C36197 + C36197 + C153860 * C5709 +
             C34899 * C4303 + C36196 + C36196 + C34891 * C4311 +
             C34897 * C1892 + C36195 + C36195 + C34890 * C1902 +
             C34895 * C1057 + C36194 + C36194 + C34889 * C1069) *
                C153454 * C153713 +
            (C34901 * C3127 + C35190 + C35190 + C153860 * C3135 +
             C34899 * C1319 + C35191 + C35191 + C34891 * C1329 + C34897 * C330 +
             C35192 + C35192 + C34890 * C354 + C34895 * C329 + C35193 + C35193 +
             C34889 * C353) *
                C153454 * C153853) *
               C153527 * C153563) *
              C153906 +
          (((C35237 + C35236 + C35235 + C35234) * C153454 * C153853 +
            (C36222 + C36223 + C36224 + C36225) * C153454 * C153713) *
               C153527 * C153563 -
           ((C35492 + C35493 + C35494 + C35495) * C153454 * C153713 +
            (C34975 + C34974 + C34973 + C34972) * C153454 * C153853) *
               C153527 * C153837) *
              C153907 +
          (((C34979 + C34978 + C34977 + C34976) * C153454 * C153853 +
            (C35932 + C35933 + C35934 + C35935) * C153454 * C153713) *
               C153527 * C153837 -
           ((C34901 * C5701 + C36210 + C36210 + C153860 * C5707 +
             C34899 * C4305 + C36211 + C36211 + C34891 * C4313 +
             C34897 * C1890 + C36212 + C36212 + C34890 * C1900 +
             C34895 * C1059 + C36213 + C36213 + C34889 * C1071) *
                C153454 * C153713 +
            (C35717 + C35716 + C35715 + C35714) * C153454 * C153853) *
               C153527 * C153563) *
              C752)) /
            (p * q * std::sqrt(p + q));
    d2ee[316] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C11348 * C136 + C11353 + C11353 + C153851 * C152 +
               C11350 * C329 + C11354 + C11354 + C153671 * C353) *
                  C2818 +
              (C11407 + C11408) * C2819 + C11417 * C153874) *
                 C153853 +
             ((C19416 + C19417) * C2818 + C19382 * C2819 + C18777 * C153874) *
                 C153713) *
                C153838 -
            ((C19383 * C153874 + C19384 * C2819 + (C19418 + C19419) * C2818) *
                 C153713 +
             (C12372 * C153874 + C19389 * C2819 + (C19417 + C19416) * C2818) *
                 C153853) *
                C153591) *
               C153837 +
           ((((C20419 + C20420) * C2818 + C20396 * C2819 + C20397 * C153874) *
                 C153853 +
             ((C11348 * C1461 + C13216 + C13216 + C153851 * C1471 +
               C11350 * C3441 + C13215 + C13215 + C153671 * C3449) *
                  C2818 +
              (C20421 + C20422) * C2819 + (C20423 + C20424) * C153874) *
                 C153713) *
                C153591 -
            ((C19714 * C153874 + C20406 * C2819 + (C20420 + C20419) * C2818) *
                 C153713 +
             (C12164 * C153874 + (C11687 + C11688) * C2819 +
              (C11350 * C330 + C11633 + C11633 + C153671 * C354 +
               C11348 * C329 + C11634 + C11634 + C153851 * C353) *
                  C2818) *
                 C153853) *
                C153838) *
               C153563) *
              C323 +
          ((((C19382 * C2818 + C18777 * C2819 + C20005 * C153874) * C153853 +
             (C19390 * C2818 + C19391 * C2819 + (C11967 + C11968) * C153874) *
                 C153713) *
                C153591 -
            ((C12371 * C153874 + C12372 * C2819 + C19389 * C2818) * C153713 +
             (C11420 * C153874 + (C11410 + C11409) * C2819 +
              (C11408 + C11407) * C2818) *
                 C153853) *
                C153838) *
               C153837 +
           ((((C11688 + C11687) * C2818 + (C11686 + C11685) * C2819 +
              (C11684 + C11683) * C153874) *
                 C153853 +
             (C20396 * C2818 + C20397 * C2819 + (C12681 + C12682) * C153874) *
                 C153713) *
                C153838 -
            (((C11350 * C3444 + C13209 + C13209 + C153671 * C3452 +
               C11348 * C1458 + C13210 + C13210 + C153851 * C1468) *
                  C153874 +
              (C20424 + C20423) * C2819 + (C20422 + C20421) * C2818) *
                 C153713 +
             ((C12682 + C12681) * C153874 + C19714 * C2819 + C20406 * C2818) *
                 C153853) *
                C153591) *
               C153563) *
              C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C34895 * C136 + C34904 + C34904 + C34889 * C152 + C34897 * C329 +
              C34905 + C34905 + C34890 * C353 + C34899 * C330 + C34906 +
              C34906 + C34891 * C354 + C34901 * C1319 + C34907 + C34907 +
              C153860 * C1329) *
                 C153454 * C153853 +
             (C44386 + C44387 + C44388 + C44389) * C153454 * C153713) *
                C153838 -
            ((C44390 + C44391 + C44392 + C44393) * C153454 * C153713 +
             (C44389 + C44388 + C44387 + C44386) * C153454 * C153853) *
                C153591) *
               C153837 +
           (((C45056 + C45057 + C45058 + C45059) * C153454 * C153853 +
             (C34895 * C1461 + C36759 + C36759 + C34889 * C1471 +
              C34897 * C3441 + C36758 + C36758 + C34890 * C3449 +
              C34899 * C4959 + C36757 + C36757 + C34891 * C4965 +
              C34901 * C28650 + C36756 + C36756 + C153860 * C28654) *
                 C153454 * C153713) *
                C153591 -
            ((C45059 + C45058 + C45057 + C45056) * C153454 * C153713 +
             (C34901 * C3127 + C35190 + C35190 + C153860 * C3135 +
              C34899 * C1319 + C35191 + C35191 + C34891 * C1329 +
              C34897 * C330 + C35192 + C35192 + C34890 * C354 + C34895 * C329 +
              C35193 + C35193 + C34889 * C353) *
                 C153454 * C153853) *
                C153838) *
               C153563) *
              C323 +
          ((((C35495 + C35494 + C35493 + C35492) * C153454 * C153853 +
             (C35496 + C35497 + C35498 + C35499) * C153454 * C153713) *
                C153591 -
            ((C35492 + C35493 + C35494 + C35495) * C153454 * C153713 +
             (C34975 + C34974 + C34973 + C34972) * C153454 * C153853) *
                C153838) *
               C153837 +
           (((C35237 + C35236 + C35235 + C35234) * C153454 * C153853 +
             (C36222 + C36223 + C36224 + C36225) * C153454 * C153713) *
                C153838 -
            ((C34901 * C28651 + C36752 + C36752 + C153860 * C28655 +
              C34899 * C4958 + C36753 + C36753 + C34891 * C4964 +
              C34897 * C3442 + C36754 + C36754 + C34890 * C3450 +
              C34895 * C1460 + C36755 + C36755 + C34889 * C1470) *
                 C153454 * C153713 +
             (C36225 + C36224 + C36223 + C36222) * C153454 * C153853) *
                C153591) *
               C153563) *
              C153498)) /
            (p * q * std::sqrt(p + q));
    d2ee[317] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C11348 * C136 + C11353 + C11353 + C153851 * C152 + C11350 * C329 +
              C11354 + C11354 + C153671 * C353) *
                 C2818 +
             (C11407 + C11408) * C2819 + C11417 * C153874) *
                C153853 +
            ((C11348 * C542 + C11908 + C11908 + C153851 * C566 +
              C11350 * C1057 + C11907 + C11907 + C153671 * C1069) *
                 C2818 +
             (C11962 + C11961) * C2819 + C18777 * C153874) *
                C153713) *
               C153527 * C320 -
           (((C12680 + C12679) * C153874 + (C12678 + C12677) * C2819 +
             (C11350 * C1892 + C12644 + C12644 + C153671 * C1902 +
              C11348 * C1057 + C12643 + C12643 + C153851 * C1069) *
                 C2818) *
                C153713 +
            (C12164 * C153874 + (C11687 + C11688) * C2819 +
             (C11350 * C330 + C11633 + C11633 + C153671 * C354 + C11348 * C329 +
              C11634 + C11634 + C153851 * C353) *
                 C2818) *
                C153853) *
               C153527 * C321 +
           (((C11348 * C330 + C11635 + C11635 + C153851 * C354 +
              C11350 * C1319 + C11636 + C11636 + C153671 * C1329) *
                 C2818 +
             (C11689 + C11690) * C2819 + (C11691 + C11692) * C153874) *
                C153853 +
            ((C11348 * C1892 + C13870 + C13870 + C153851 * C1902 +
              C11350 * C4303 + C13869 + C13869 + C153671 * C4311) *
                 C2818 +
             (C19084 + C19085) * C2819 + (C19086 + C19087) * C153874) *
                C153713) *
               C153527 * C322) *
              C323 +
          ((((C11688 + C11687) * C2818 + (C11686 + C11685) * C2819 +
             (C11684 + C11683) * C153874) *
                C153853 +
            ((C12677 + C12678) * C2818 + (C12679 + C12680) * C2819 +
             (C12681 + C12682) * C153874) *
                C153713) *
               C153527 * C321 -
           ((C12371 * C153874 + C12372 * C2819 + (C11961 + C11962) * C2818) *
                C153713 +
            (C11420 * C153874 + (C11410 + C11409) * C2819 +
             (C11408 + C11407) * C2818) *
                C153853) *
               C153527 * C320 -
           (((C11350 * C4306 + C13863 + C13863 + C153671 * C4314 +
              C11348 * C1889 + C13864 + C13864 + C153851 * C1899) *
                 C153874 +
             (C19087 + C19086) * C2819 + (C19085 + C19084) * C2818) *
                C153713 +
            ((C11694 + C11693) * C153874 + (C11692 + C11691) * C2819 +
             (C11690 + C11689) * C2818) *
                C153853) *
               C153527 * C322) *
              C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C11348 * C136 + C11353 + C11353 + C153851 * C152 + C11350 * C329 +
             C11354 + C11354 + C153671 * C353) *
                C2818 +
            (C11407 + C11408) * C2819 + C11417 * C153874) *
               C153853 +
           ((C11348 * C542 + C11908 + C11908 + C153851 * C566 + C11350 * C1057 +
             C11907 + C11907 + C153671 * C1069) *
                C2818 +
            (C11962 + C11961) * C2819 + C18777 * C153874) *
               C153713) *
              C153527 * C153511 * C130 -
          ((C12371 * C153874 + C12372 * C2819 + (C11961 + C11962) * C2818) *
               C153713 +
           (C11420 * C153874 + (C11410 + C11409) * C2819 +
            (C11408 + C11407) * C2818) *
               C153853) *
              C153527 * C153511 * C131 +
          ((C11417 * C2818 + C11418 * C2819 + (C11414 + C11413) * C153874) *
               C153853 +
           (C18777 * C2818 + (C11958 + C11957) * C2819 +
            (C12383 + C12384) * C153874) *
               C153713) *
              C153527 * C153511 * C132 -
          (((C11350 * C1062 + C12377 + C12377 + C153671 * C1074 +
             C11348 * C548 + C12378 + C12378 + C153851 * C572) *
                C153874 +
            (C12384 + C12383) * C2819 + C12371 * C2818) *
               C153713 +
           ((C11416 + C11415) * C153874 + C11419 * C2819 + C11420 * C2818) *
               C153853) *
              C153527 * C153511 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C11348 * C136 + C11353 + C11353 + C153851 * C152 + C11350 * C329 +
              C11354 + C11354 + C153671 * C353) *
                 C2818 +
             (C11407 + C11408) * C2819 + C11417 * C153874) *
                C153853 +
            ((C19416 + C19417) * C2818 + C19382 * C2819 + C18777 * C153874) *
                C153713) *
               C535 -
           ((C19383 * C153874 + C19384 * C2819 + (C19418 + C19419) * C2818) *
                C153713 +
            (C12372 * C153874 + C19389 * C2819 + (C19417 + C19416) * C2818) *
                C153853) *
               C536 +
           (((C19419 + C19418) * C2818 + C19390 * C2819 + C19391 * C153874) *
                C153853 +
            ((C11348 * C2244 + C14396 + C14396 + C153851 * C2254 +
              C11350 * C6306 + C14395 + C14395 + C153671 * C6318) *
                 C2818 +
             (C19420 + C19421) * C2819 + (C19422 + C19423) * C153874) *
                C153713) *
               C537) *
              C153511 * C323 +
          (((C19382 * C2818 + C18777 * C2819 + (C11958 + C11957) * C153874) *
                C153853 +
            (C19390 * C2818 + C19391 * C2819 + (C11967 + C11968) * C153874) *
                C153713) *
               C536 -
           ((C12371 * C153874 + C12372 * C2819 + C19389 * C2818) * C153713 +
            (C11420 * C153874 + (C11410 + C11409) * C2819 +
             (C11408 + C11407) * C2818) *
                C153853) *
               C535 -
           (((C11350 * C8488 + C14389 + C14389 + C153671 * C8490 +
              C11348 * C2241 + C14390 + C14390 + C153851 * C2251) *
                 C153874 +
             (C19423 + C19422) * C2819 + (C19421 + C19420) * C2818) *
                C153713 +
            ((C11968 + C11967) * C153874 + C19383 * C2819 + C19384 * C2818) *
                C153853) *
               C537) *
              C153511 * C153498)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C34895 * C136 + C34904 + C34904 + C34889 * C152 + C34897 * C329 +
            C34905 + C34905 + C34890 * C353 + C34899 * C330 + C34906 + C34906 +
            C34891 * C354 + C34901 * C1319 + C34907 + C34907 +
            C153860 * C1329) *
               C153454 * C153853 +
           (C34895 * C542 + C35451 + C35451 + C34889 * C566 + C34897 * C1057 +
            C35450 + C35450 + C34890 * C1069 + C34899 * C1892 + C35449 +
            C35449 + C34891 * C1902 + C34901 * C4303 + C35448 + C35448 +
            C153860 * C4311) *
               C153454 * C153713) *
              C153527 * C153511 * C130 -
          ((C35492 + C35493 + C35494 + C35495) * C153454 * C153713 +
           (C34975 + C34974 + C34973 + C34972) * C153454 * C153853) *
              C153527 * C153511 * C131 +
          ((C34979 + C34978 + C34977 + C34976) * C153454 * C153853 +
           (C35932 + C35933 + C35934 + C35935) * C153454 * C153713) *
              C153527 * C153511 * C132 -
          ((C34901 * C4306 + C35920 + C35920 + C153860 * C4314 +
            C34899 * C1889 + C35921 + C35921 + C34891 * C1899 + C34897 * C1060 +
            C35922 + C35922 + C34890 * C1072 + C34895 * C539 + C35923 + C35923 +
            C34889 * C563) *
               C153454 * C153713 +
           (C34983 + C34982 + C34981 + C34980) * C153454 * C153853) *
              C153527 * C153511 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C34895 * C136 + C34904 + C34904 + C34889 * C152 + C34897 * C329 +
             C34905 + C34905 + C34890 * C353 + C34899 * C330 + C34906 + C34906 +
             C34891 * C354 + C34901 * C1319 + C34907 + C34907 +
             C153860 * C1329) *
                C153454 * C153853 +
            (C34895 * C542 + C35451 + C35451 + C34889 * C566 + C34897 * C1057 +
             C35450 + C35450 + C34890 * C1069 + C34899 * C1892 + C35449 +
             C35449 + C34891 * C1902 + C34901 * C4303 + C35448 + C35448 +
             C153860 * C4311) *
                C153454 * C153713) *
               C153527 * C320 -
           ((C34901 * C5703 + C36197 + C36197 + C153860 * C5709 +
             C34899 * C4303 + C36196 + C36196 + C34891 * C4311 +
             C34897 * C1892 + C36195 + C36195 + C34890 * C1902 +
             C34895 * C1057 + C36194 + C36194 + C34889 * C1069) *
                C153454 * C153713 +
            (C34901 * C3127 + C35190 + C35190 + C153860 * C3135 +
             C34899 * C1319 + C35191 + C35191 + C34891 * C1329 + C34897 * C330 +
             C35192 + C35192 + C34890 * C354 + C34895 * C329 + C35193 + C35193 +
             C34889 * C353) *
                C153454 * C153853) *
               C153527 * C321 +
           ((C34895 * C330 + C35194 + C35194 + C34889 * C354 + C34897 * C1319 +
             C35195 + C35195 + C34890 * C1329 + C34899 * C3127 + C35196 +
             C35196 + C34891 * C3135 + C34901 * C4723 + C35197 + C35197 +
             C153860 * C4729) *
                C153454 * C153853 +
            (C34895 * C1892 + C37413 + C37413 + C34889 * C1902 +
             C34897 * C4303 + C37412 + C37412 + C34890 * C4311 +
             C34899 * C5703 + C37411 + C37411 + C34891 * C5709 +
             C34901 * C29092 + C37410 + C37410 + C153860 * C29096) *
                C153454 * C153713) *
               C153527 * C322) *
              C323 +
          (((C35237 + C35236 + C35235 + C35234) * C153454 * C153853 +
            (C36222 + C36223 + C36224 + C36225) * C153454 * C153713) *
               C153527 * C321 -
           ((C35492 + C35493 + C35494 + C35495) * C153454 * C153713 +
            (C34975 + C34974 + C34973 + C34972) * C153454 * C153853) *
               C153527 * C320 -
           ((C34901 * C29093 + C37406 + C37406 + C153860 * C29097 +
             C34899 * C5702 + C37407 + C37407 + C34891 * C5708 +
             C34897 * C4304 + C37408 + C37408 + C34890 * C4312 +
             C34895 * C1891 + C37409 + C37409 + C34889 * C1901) *
                C153454 * C153713 +
            (C35241 + C35240 + C35239 + C35238) * C153454 * C153853) *
               C153527 * C322) *
              C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C34895 * C136 + C34904 + C34904 + C34889 * C152 + C34897 * C329 +
             C34905 + C34905 + C34890 * C353 + C34899 * C330 + C34906 + C34906 +
             C34891 * C354 + C34901 * C1319 + C34907 + C34907 +
             C153860 * C1329) *
                C153454 * C153853 +
            (C44386 + C44387 + C44388 + C44389) * C153454 * C153713) *
               C535 -
           ((C44390 + C44391 + C44392 + C44393) * C153454 * C153713 +
            (C44389 + C44388 + C44387 + C44386) * C153454 * C153853) *
               C536 +
           ((C44393 + C44392 + C44391 + C44390) * C153454 * C153853 +
            (C34895 * C2244 + C37939 + C37939 + C34889 * C2254 +
             C34897 * C6306 + C37938 + C37938 + C34890 * C6318 +
             C34899 * C6305 + C37937 + C37937 + C34891 * C6317 +
             C34901 * C30191 + C37936 + C37936 + C153860 * C30195) *
                C153454 * C153713) *
               C537) *
              C153511 * C323 +
          (((C35495 + C35494 + C35493 + C35492) * C153454 * C153853 +
            (C35496 + C35497 + C35498 + C35499) * C153454 * C153713) *
               C536 -
           ((C35492 + C35493 + C35494 + C35495) * C153454 * C153713 +
            (C34975 + C34974 + C34973 + C34972) * C153454 * C153853) *
               C535 -
           ((C34901 * C31999 + C37932 + C37932 + C153860 * C32001 +
             C34899 * C6303 + C37933 + C37933 + C34891 * C6315 +
             C34897 * C6304 + C37934 + C37934 + C34890 * C6316 +
             C34895 * C2243 + C37935 + C37935 + C34889 * C2253) *
                C153454 * C153713 +
            (C35499 + C35498 + C35497 + C35496) * C153454 * C153853) *
               C537) *
              C153511 * C153498)) /
            (p * q * std::sqrt(p + q));
    d2ee[318] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C11348 * C136 + C11353 + C11353 + C153851 * C152 + C11350 * C329 +
              C11354 + C11354 + C153671 * C353) *
                 C2818 +
             (C11407 + C11408) * C2819 + C11417 * C153874) *
                C153853 +
            ((C19416 + C19417) * C2818 + C19382 * C2819 + C18777 * C153874) *
                C153713) *
               C153838 -
           ((C19383 * C153874 + C19384 * C2819 + (C19418 + C19419) * C2818) *
                C153713 +
            (C12372 * C153874 + C19389 * C2819 + (C19417 + C19416) * C2818) *
                C153853) *
               C153591) *
              C153511 * C153906 +
          (((C19382 * C2818 + C18777 * C2819 + C20005 * C153874) * C153853 +
            (C19390 * C2818 + C19391 * C2819 + (C11967 + C11968) * C153874) *
                C153713) *
               C153591 -
           ((C12371 * C153874 + C12372 * C2819 + C19389 * C2818) * C153713 +
            (C11420 * C153874 + (C11410 + C11409) * C2819 +
             (C11408 + C11407) * C2818) *
                C153853) *
               C153838) *
              C153511 * C153907 +
          (((C11417 * C2818 + C11418 * C2819 + (C11414 + C11413) * C153874) *
                C153853 +
            (C18777 * C2818 + C20005 * C2819 + (C12383 + C12384) * C153874) *
                C153713) *
               C153838 -
           (((C11350 * C1457 + C11931 + C11931 + C153671 * C1467 +
              C11348 * C547 + C11932 + C11932 + C153851 * C571) *
                 C153874 +
             (C11968 + C11967) * C2819 + C19383 * C2818) *
                C153713 +
            ((C12384 + C12383) * C153874 + C12371 * C2819 + C12372 * C2818) *
                C153853) *
               C153591) *
              C153511 * C752)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C34895 * C136 + C34904 + C34904 + C34889 * C152 + C34897 * C329 +
             C34905 + C34905 + C34890 * C353 + C34899 * C330 + C34906 + C34906 +
             C34891 * C354 + C34901 * C1319 + C34907 + C34907 +
             C153860 * C1329) *
                C153454 * C153853 +
            (C44386 + C44387 + C44388 + C44389) * C153454 * C153713) *
               C153838 -
           ((C44390 + C44391 + C44392 + C44393) * C153454 * C153713 +
            (C44389 + C44388 + C44387 + C44386) * C153454 * C153853) *
               C153591) *
              C153511 * C153906 +
          (((C35495 + C35494 + C35493 + C35492) * C153454 * C153853 +
            (C35496 + C35497 + C35498 + C35499) * C153454 * C153713) *
               C153591 -
           ((C35492 + C35493 + C35494 + C35495) * C153454 * C153713 +
            (C34975 + C34974 + C34973 + C34972) * C153454 * C153853) *
               C153838) *
              C153511 * C153907 +
          (((C34979 + C34978 + C34977 + C34976) * C153454 * C153853 +
            (C35932 + C35933 + C35934 + C35935) * C153454 * C153713) *
               C153838 -
           ((C34901 * C4957 + C35472 + C35472 + C153860 * C4963 +
             C34899 * C3443 + C35473 + C35473 + C34891 * C3451 +
             C34897 * C1459 + C35474 + C35474 + C34890 * C1469 + C34895 * C545 +
             C35475 + C35475 + C34889 * C569) *
                C153454 * C153713 +
            (C35935 + C35934 + C35933 + C35932) * C153454 * C153853) *
               C153591) *
              C153511 * C752)) /
            (p * q * std::sqrt(p + q));
    d2ee[319] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C11348 * C136 + C11353 + C11353 + C153851 * C152 + C11350 * C329 +
             C11354 + C11354 + C153671 * C353) *
                C2818 +
            (C11407 + C11408) * C2819 + C11417 * C153874) *
               C153853 +
           ((C11348 * C542 + C11908 + C11908 + C153851 * C566 + C11350 * C1057 +
             C11907 + C11907 + C153671 * C1069) *
                C2818 +
            (C11962 + C11961) * C2819 + C18777 * C153874) *
               C153713) *
              C153527 * C153511 * C130 -
          ((C12371 * C153874 + C12372 * C2819 + (C11961 + C11962) * C2818) *
               C153713 +
           (C11420 * C153874 + (C11410 + C11409) * C2819 +
            (C11408 + C11407) * C2818) *
               C153853) *
              C153527 * C153511 * C131 +
          ((C11417 * C2818 + C11418 * C2819 + (C11414 + C11413) * C153874) *
               C153853 +
           (C18777 * C2818 + (C11958 + C11957) * C2819 +
            (C12383 + C12384) * C153874) *
               C153713) *
              C153527 * C153511 * C132 -
          (((C11350 * C1062 + C12377 + C12377 + C153671 * C1074 +
             C11348 * C548 + C12378 + C12378 + C153851 * C572) *
                C153874 +
            (C12384 + C12383) * C2819 + C12371 * C2818) *
               C153713 +
           ((C11416 + C11415) * C153874 + C11419 * C2819 + C11420 * C2818) *
               C153853) *
              C153527 * C153511 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C11348 * C136 + C11353 + C11353 + C153851 * C152 + C11350 * C329 +
              C11354 + C11354 + C153671 * C353) *
                 C2818 +
             (C11407 + C11408) * C2819 + C11417 * C153874) *
                C153853 +
            ((C11348 * C542 + C11908 + C11908 + C153851 * C566 +
              C11350 * C1057 + C11907 + C11907 + C153671 * C1069) *
                 C2818 +
             (C11962 + C11961) * C2819 + C18777 * C153874) *
                C153713) *
               C153527 * C320 -
           (((C12680 + C12679) * C153874 + (C12678 + C12677) * C2819 +
             (C11350 * C1892 + C12644 + C12644 + C153671 * C1902 +
              C11348 * C1057 + C12643 + C12643 + C153851 * C1069) *
                 C2818) *
                C153713 +
            (C12164 * C153874 + (C11687 + C11688) * C2819 +
             (C11350 * C330 + C11633 + C11633 + C153671 * C354 + C11348 * C329 +
              C11634 + C11634 + C153851 * C353) *
                 C2818) *
                C153853) *
               C153527 * C321 +
           (((C11348 * C330 + C11635 + C11635 + C153851 * C354 +
              C11350 * C1319 + C11636 + C11636 + C153671 * C1329) *
                 C2818 +
             (C11689 + C11690) * C2819 + (C11691 + C11692) * C153874) *
                C153853 +
            ((C11348 * C1892 + C13870 + C13870 + C153851 * C1902 +
              C11350 * C4303 + C13869 + C13869 + C153671 * C4311) *
                 C2818 +
             (C19084 + C19085) * C2819 + (C19086 + C19087) * C153874) *
                C153713) *
               C153527 * C322) *
              C323 +
          ((((C11688 + C11687) * C2818 + (C11686 + C11685) * C2819 +
             (C11684 + C11683) * C153874) *
                C153853 +
            ((C12677 + C12678) * C2818 + (C12679 + C12680) * C2819 +
             (C12681 + C12682) * C153874) *
                C153713) *
               C153527 * C321 -
           ((C12371 * C153874 + C12372 * C2819 + (C11961 + C11962) * C2818) *
                C153713 +
            (C11420 * C153874 + (C11410 + C11409) * C2819 +
             (C11408 + C11407) * C2818) *
                C153853) *
               C153527 * C320 -
           (((C11350 * C4306 + C13863 + C13863 + C153671 * C4314 +
              C11348 * C1889 + C13864 + C13864 + C153851 * C1899) *
                 C153874 +
             (C19087 + C19086) * C2819 + (C19085 + C19084) * C2818) *
                C153713 +
            ((C11694 + C11693) * C153874 + (C11692 + C11691) * C2819 +
             (C11690 + C11689) * C2818) *
                C153853) *
               C153527 * C322) *
              C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C34895 * C136 + C34904 + C34904 + C34889 * C152 + C34897 * C329 +
            C34905 + C34905 + C34890 * C353 + C34899 * C330 + C34906 + C34906 +
            C34891 * C354 + C34901 * C1319 + C34907 + C34907 +
            C153860 * C1329) *
               C153454 * C153853 +
           (C34895 * C542 + C35451 + C35451 + C34889 * C566 + C34897 * C1057 +
            C35450 + C35450 + C34890 * C1069 + C34899 * C1892 + C35449 +
            C35449 + C34891 * C1902 + C34901 * C4303 + C35448 + C35448 +
            C153860 * C4311) *
               C153454 * C153713) *
              C153527 * C153511 * C130 -
          ((C35492 + C35493 + C35494 + C35495) * C153454 * C153713 +
           (C34975 + C34974 + C34973 + C34972) * C153454 * C153853) *
              C153527 * C153511 * C131 +
          ((C34979 + C34978 + C34977 + C34976) * C153454 * C153853 +
           (C35932 + C35933 + C35934 + C35935) * C153454 * C153713) *
              C153527 * C153511 * C132 -
          ((C34901 * C4306 + C35920 + C35920 + C153860 * C4314 +
            C34899 * C1889 + C35921 + C35921 + C34891 * C1899 + C34897 * C1060 +
            C35922 + C35922 + C34890 * C1072 + C34895 * C539 + C35923 + C35923 +
            C34889 * C563) *
               C153454 * C153713 +
           (C34983 + C34982 + C34981 + C34980) * C153454 * C153853) *
              C153527 * C153511 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C34895 * C136 + C34904 + C34904 + C34889 * C152 + C34897 * C329 +
             C34905 + C34905 + C34890 * C353 + C34899 * C330 + C34906 + C34906 +
             C34891 * C354 + C34901 * C1319 + C34907 + C34907 +
             C153860 * C1329) *
                C153454 * C153853 +
            (C34895 * C542 + C35451 + C35451 + C34889 * C566 + C34897 * C1057 +
             C35450 + C35450 + C34890 * C1069 + C34899 * C1892 + C35449 +
             C35449 + C34891 * C1902 + C34901 * C4303 + C35448 + C35448 +
             C153860 * C4311) *
                C153454 * C153713) *
               C153527 * C320 -
           ((C34901 * C5703 + C36197 + C36197 + C153860 * C5709 +
             C34899 * C4303 + C36196 + C36196 + C34891 * C4311 +
             C34897 * C1892 + C36195 + C36195 + C34890 * C1902 +
             C34895 * C1057 + C36194 + C36194 + C34889 * C1069) *
                C153454 * C153713 +
            (C34901 * C3127 + C35190 + C35190 + C153860 * C3135 +
             C34899 * C1319 + C35191 + C35191 + C34891 * C1329 + C34897 * C330 +
             C35192 + C35192 + C34890 * C354 + C34895 * C329 + C35193 + C35193 +
             C34889 * C353) *
                C153454 * C153853) *
               C153527 * C321 +
           ((C34895 * C330 + C35194 + C35194 + C34889 * C354 + C34897 * C1319 +
             C35195 + C35195 + C34890 * C1329 + C34899 * C3127 + C35196 +
             C35196 + C34891 * C3135 + C34901 * C4723 + C35197 + C35197 +
             C153860 * C4729) *
                C153454 * C153853 +
            (C34895 * C1892 + C37413 + C37413 + C34889 * C1902 +
             C34897 * C4303 + C37412 + C37412 + C34890 * C4311 +
             C34899 * C5703 + C37411 + C37411 + C34891 * C5709 +
             C34901 * C29092 + C37410 + C37410 + C153860 * C29096) *
                C153454 * C153713) *
               C153527 * C322) *
              C323 +
          (((C35237 + C35236 + C35235 + C35234) * C153454 * C153853 +
            (C36222 + C36223 + C36224 + C36225) * C153454 * C153713) *
               C153527 * C321 -
           ((C35492 + C35493 + C35494 + C35495) * C153454 * C153713 +
            (C34975 + C34974 + C34973 + C34972) * C153454 * C153853) *
               C153527 * C320 -
           ((C34901 * C29093 + C37406 + C37406 + C153860 * C29097 +
             C34899 * C5702 + C37407 + C37407 + C34891 * C5708 +
             C34897 * C4304 + C37408 + C37408 + C34890 * C4312 +
             C34895 * C1891 + C37409 + C37409 + C34889 * C1901) *
                C153454 * C153713 +
            (C35241 + C35240 + C35239 + C35238) * C153454 * C153853) *
               C153527 * C322) *
              C153498)) /
            (p * q * std::sqrt(p + q));
    d2ee[320] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C11348 * C136 + C11353 + C11353 + C153851 * C152 + C11350 * C329 +
              C11354 + C11354 + C153671 * C353) *
                 C2818 +
             (C11407 + C11408) * C2819 + C11417 * C153874) *
                C153853 +
            ((C19416 + C19417) * C2818 + C19382 * C2819 + C18777 * C153874) *
                C153713) *
               C153527 * C153908 -
           ((C19714 * C153874 + C20406 * C2819 + (C20420 + C20419) * C2818) *
                C153713 +
            (C12164 * C153874 + (C11687 + C11688) * C2819 +
             (C11350 * C330 + C11633 + C11633 + C153671 * C354 + C11348 * C329 +
              C11634 + C11634 + C153851 * C353) *
                 C2818) *
                C153853) *
               C153527 * C153909 +
           (((C11348 * C330 + C11635 + C11635 + C153851 * C354 +
              C11350 * C1319 + C11636 + C11636 + C153671 * C1329) *
                 C2818 +
             (C11689 + C11690) * C2819 + (C11691 + C11692) * C153874) *
                C153853 +
            ((C11348 * C1892 + C13870 + C13870 + C153851 * C1902 +
              C11350 * C4303 + C13869 + C13869 + C153671 * C4311) *
                 C2818 +
             (C19084 + C19085) * C2819 + (C19086 + C19087) * C153874) *
                C153713) *
               C153527 * C1601) *
              C153829 +
          ((((C11688 + C11687) * C2818 + (C11686 + C11685) * C2819 +
             (C11684 + C11683) * C153874) *
                C153853 +
            (C20396 * C2818 + C20397 * C2819 + (C12681 + C12682) * C153874) *
                C153713) *
               C153527 * C153909 -
           ((C12371 * C153874 + C12372 * C2819 + C19389 * C2818) * C153713 +
            (C11420 * C153874 + (C11410 + C11409) * C2819 +
             (C11408 + C11407) * C2818) *
                C153853) *
               C153527 * C153908 -
           (((C11350 * C4306 + C13863 + C13863 + C153671 * C4314 +
              C11348 * C1889 + C13864 + C13864 + C153851 * C1899) *
                 C153874 +
             (C19087 + C19086) * C2819 + (C19085 + C19084) * C2818) *
                C153713 +
            ((C11694 + C11693) * C153874 + (C11692 + C11691) * C2819 +
             (C11690 + C11689) * C2818) *
                C153853) *
               C153527 * C1601) *
              C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C34895 * C136 + C34904 + C34904 + C34889 * C152 + C34897 * C329 +
             C34905 + C34905 + C34890 * C353 + C34899 * C330 + C34906 + C34906 +
             C34891 * C354 + C34901 * C1319 + C34907 + C34907 +
             C153860 * C1329) *
                C153454 * C153853 +
            (C44386 + C44387 + C44388 + C44389) * C153454 * C153713) *
               C153527 * C153908 -
           ((C45059 + C45058 + C45057 + C45056) * C153454 * C153713 +
            (C34901 * C3127 + C35190 + C35190 + C153860 * C3135 +
             C34899 * C1319 + C35191 + C35191 + C34891 * C1329 + C34897 * C330 +
             C35192 + C35192 + C34890 * C354 + C34895 * C329 + C35193 + C35193 +
             C34889 * C353) *
                C153454 * C153853) *
               C153527 * C153909 +
           ((C34895 * C330 + C35194 + C35194 + C34889 * C354 + C34897 * C1319 +
             C35195 + C35195 + C34890 * C1329 + C34899 * C3127 + C35196 +
             C35196 + C34891 * C3135 + C34901 * C4723 + C35197 + C35197 +
             C153860 * C4729) *
                C153454 * C153853 +
            (C34895 * C1892 + C37413 + C37413 + C34889 * C1902 +
             C34897 * C4303 + C37412 + C37412 + C34890 * C4311 +
             C34899 * C5703 + C37411 + C37411 + C34891 * C5709 +
             C34901 * C29092 + C37410 + C37410 + C153860 * C29096) *
                C153454 * C153713) *
               C153527 * C1601) *
              C153829 +
          (((C35237 + C35236 + C35235 + C35234) * C153454 * C153853 +
            (C36222 + C36223 + C36224 + C36225) * C153454 * C153713) *
               C153527 * C153909 -
           ((C35492 + C35493 + C35494 + C35495) * C153454 * C153713 +
            (C34975 + C34974 + C34973 + C34972) * C153454 * C153853) *
               C153527 * C153908 -
           ((C34901 * C29093 + C37406 + C37406 + C153860 * C29097 +
             C34899 * C5702 + C37407 + C37407 + C34891 * C5708 +
             C34897 * C4304 + C37408 + C37408 + C34890 * C4312 +
             C34895 * C1891 + C37409 + C37409 + C34889 * C1901) *
                C153454 * C153713 +
            (C35241 + C35240 + C35239 + C35238) * C153454 * C153853) *
               C153527 * C1601) *
              C153498)) /
            (p * q * std::sqrt(p + q));
    d2ee[321] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C11348 * C136 + C11353 + C11353 + C153851 * C152 + C11350 * C329 +
              C11354 + C11354 + C153671 * C353) *
                 C2818 +
             (C11407 + C11408) * C2819 + C11417 * C153874) *
                C153853 +
            ((C19416 + C19417) * C2818 + C19382 * C2819 + C18777 * C153874) *
                C153713) *
               C153838 -
           ((C19383 * C153874 + C19384 * C2819 + (C19418 + C19419) * C2818) *
                C153713 +
            (C12372 * C153874 + C19389 * C2819 + (C19417 + C19416) * C2818) *
                C153853) *
               C153591) *
              C153908 +
          ((((C20419 + C20420) * C2818 + C20396 * C2819 + C20397 * C153874) *
                C153853 +
            ((C21219 + C21220) * C2818 + (C20421 + C20422) * C2819 +
             (C20423 + C20424) * C153874) *
                C153713) *
               C153591 -
           ((C19714 * C153874 + C20406 * C2819 + (C20420 + C20419) * C2818) *
                C153713 +
            (C12164 * C153874 + (C11687 + C11688) * C2819 +
             (C11350 * C330 + C11633 + C11633 + C153671 * C354 + C11348 * C329 +
              C11634 + C11634 + C153851 * C353) *
                 C2818) *
                C153853) *
               C153838) *
              C153909 +
          ((((C11348 * C330 + C11635 + C11635 + C153851 * C354 +
              C11350 * C1319 + C11636 + C11636 + C153671 * C1329) *
                 C2818 +
             (C11689 + C11690) * C2819 + (C11691 + C11692) * C153874) *
                C153853 +
            ((C22201 + C22202) * C2818 + (C19084 + C19085) * C2819 +
             (C19086 + C19087) * C153874) *
                C153713) *
               C153838 -
           (((C11350 * C4957 + C22191 + C22191 + C153671 * C4963 +
              C11348 * C3443 + C22192 + C22192 + C153851 * C3451) *
                 C153874 +
             (C11350 * C4958 + C22193 + C22193 + C153671 * C4964 +
              C11348 * C3442 + C22194 + C22194 + C153851 * C3450) *
                 C2819 +
             (C11350 * C4959 + C22195 + C22195 + C153671 * C4965 +
              C11348 * C3441 + C22196 + C22196 + C153851 * C3449) *
                 C2818) *
                C153713 +
            ((C19087 + C19086) * C153874 + (C19085 + C19084) * C2819 +
             (C22202 + C22201) * C2818) *
                C153853) *
               C153591) *
              C1601) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C34895 * C136 + C34904 + C34904 + C34889 * C152 + C34897 * C329 +
             C34905 + C34905 + C34890 * C353 + C34899 * C330 + C34906 + C34906 +
             C34891 * C354 + C34901 * C1319 + C34907 + C34907 +
             C153860 * C1329) *
                C153454 * C153853 +
            (C44386 + C44387 + C44388 + C44389) * C153454 * C153713) *
               C153838 -
           ((C44390 + C44391 + C44392 + C44393) * C153454 * C153713 +
            (C44389 + C44388 + C44387 + C44386) * C153454 * C153853) *
               C153591) *
              C153908 +
          (((C45056 + C45057 + C45058 + C45059) * C153454 * C153853 +
            (C45602 + C45603 + C45604 + C45605) * C153454 * C153713) *
               C153591 -
           ((C45059 + C45058 + C45057 + C45056) * C153454 * C153713 +
            (C34901 * C3127 + C35190 + C35190 + C153860 * C3135 +
             C34899 * C1319 + C35191 + C35191 + C34891 * C1329 + C34897 * C330 +
             C35192 + C35192 + C34890 * C354 + C34895 * C329 + C35193 + C35193 +
             C34889 * C353) *
                C153454 * C153853) *
               C153838) *
              C153909 +
          (((C34895 * C330 + C35194 + C35194 + C34889 * C354 + C34897 * C1319 +
             C35195 + C35195 + C34890 * C1329 + C34899 * C3127 + C35196 +
             C35196 + C34891 * C3135 + C34901 * C4723 + C35197 + C35197 +
             C153860 * C4729) *
                C153454 * C153853 +
            (C46272 + C46273 + C46274 + C46275) * C153454 * C153713) *
               C153838 -
           ((C34901 * C29442 + C46260 + C46260 + C153860 * C29444 +
             C34899 * C28650 + C46261 + C46261 + C34891 * C28654 +
             C34897 * C4959 + C46262 + C46262 + C34890 * C4965 +
             C34895 * C3441 + C46263 + C46263 + C34889 * C3449) *
                C153454 * C153713 +
            (C46275 + C46274 + C46273 + C46272) * C153454 * C153853) *
               C153591) *
              C1601) *
         C153492) /
            (p * q * std::sqrt(p + q));
    d2ee[322] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C11348 * C136 + C11353 + C11353 + C153851 * C152 + C11350 * C329 +
             C11354 + C11354 + C153671 * C353) *
                C2818 +
            (C11407 + C11408) * C2819 + C11417 * C153874) *
               C153853 +
           ((C19416 + C19417) * C2818 + C19382 * C2819 + C18777 * C153874) *
               C153713) *
              C153527 * C1310 -
          ((C19714 * C153874 + C20406 * C2819 + (C20420 + C20419) * C2818) *
               C153713 +
           (C12164 * C153874 + (C11687 + C11688) * C2819 +
            (C11350 * C330 + C11633 + C11633 + C153671 * C354 + C11348 * C329 +
             C11634 + C11634 + C153851 * C353) *
                C2818) *
               C153853) *
              C153527 * C1311 +
          (((C11348 * C330 + C11635 + C11635 + C153851 * C354 + C11350 * C1319 +
             C11636 + C11636 + C153671 * C1329) *
                C2818 +
            (C11689 + C11690) * C2819 + (C11691 + C11692) * C153874) *
               C153853 +
           ((C11348 * C1892 + C13870 + C13870 + C153851 * C1902 +
             C11350 * C4303 + C13869 + C13869 + C153671 * C4311) *
                C2818 +
            (C19084 + C19085) * C2819 + (C19086 + C19087) * C153874) *
               C153713) *
              C153527 * C1312 -
          (((C11350 * C5701 + C20909 + C20909 + C153671 * C5707 +
             C11348 * C4305 + C20910 + C20910 + C153851 * C4313) *
                C153874 +
            (C11350 * C5702 + C20911 + C20911 + C153671 * C5708 +
             C11348 * C4304 + C20912 + C20912 + C153851 * C4312) *
                C2819 +
            (C11350 * C5703 + C20913 + C20913 + C153671 * C5709 +
             C11348 * C4303 + C20914 + C20914 + C153851 * C4311) *
                C2818) *
               C153713 +
           ((C11350 * C3129 + C13009 + C13009 + C153671 * C3137 +
             C11348 * C1317 + C13010 + C13010 + C153851 * C1327) *
                C153874 +
            (C11350 * C3128 + C13011 + C13011 + C153671 * C3136 +
             C11348 * C1318 + C13012 + C13012 + C153851 * C1328) *
                C2819 +
            (C11350 * C3127 + C13013 + C13013 + C153671 * C3135 +
             C11348 * C1319 + C13014 + C13014 + C153851 * C1329) *
                C2818) *
               C153853) *
              C153527 * C1313) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C11348 * C136 + C11353 + C11353 + C153851 * C152 + C11350 * C329 +
              C11354 + C11354 + C153671 * C353) *
                 C2818 +
             (C11407 + C11408) * C2819 + C11417 * C153874) *
                C153853 +
            ((C19416 + C19417) * C2818 + C19382 * C2819 + C18777 * C153874) *
                C153713) *
               C153527 * C1223 -
           ((C19714 * C153874 + C20406 * C2819 + (C20420 + C20419) * C2818) *
                C153713 +
            (C12164 * C153874 + (C11687 + C11688) * C2819 +
             (C11350 * C330 + C11633 + C11633 + C153671 * C354 + C11348 * C329 +
              C11634 + C11634 + C153851 * C353) *
                 C2818) *
                C153853) *
               C153527 * C153563) *
              C1225 +
          ((((C11688 + C11687) * C2818 + (C11686 + C11685) * C2819 +
             (C11684 + C11683) * C153874) *
                C153853 +
            (C20396 * C2818 + C20397 * C2819 + (C12681 + C12682) * C153874) *
                C153713) *
               C153527 * C153563 -
           ((C12371 * C153874 + C12372 * C2819 + C19389 * C2818) * C153713 +
            (C11420 * C153874 + (C11410 + C11409) * C2819 +
             (C11408 + C11407) * C2818) *
                C153853) *
               C153527 * C1223) *
              C1226 +
          (((C11417 * C2818 + C11418 * C2819 + (C11414 + C11413) * C153874) *
                C153853 +
            (C18777 * C2818 + C20005 * C2819 + (C12383 + C12384) * C153874) *
                C153713) *
               C153527 * C1223 -
           (((C11350 * C1888 + C12663 + C12663 + C153671 * C1898 +
              C11348 * C1061 + C12664 + C12664 + C153851 * C1073) *
                 C153874 +
             (C12682 + C12681) * C2819 + C19714 * C2818) *
                C153713 +
            ((C12176 + C12175) * C153874 + C12163 * C2819 + C12164 * C2818) *
                C153853) *
               C153527 * C153563) *
              C1227)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C11348 * C136 + C11353 + C11353 + C153851 * C152 + C11350 * C329 +
              C11354 + C11354 + C153671 * C353) *
                 C2818 +
             (C11407 + C11408) * C2819 + C11417 * C153874) *
                C153853 +
            ((C19416 + C19417) * C2818 + C19382 * C2819 + C18777 * C153874) *
                C153713) *
               C535 -
           ((C19383 * C153874 + C19384 * C2819 + (C19418 + C19419) * C2818) *
                C153713 +
            (C12372 * C153874 + C19389 * C2819 + (C19417 + C19416) * C2818) *
                C153853) *
               C536 +
           (((C19419 + C19418) * C2818 + C19390 * C2819 + C19391 * C153874) *
                C153853 +
            ((C11348 * C2244 + C14396 + C14396 + C153851 * C2254 +
              C11350 * C6306 + C14395 + C14395 + C153671 * C6318) *
                 C2818 +
             (C19420 + C19421) * C2819 + (C19422 + C19423) * C153874) *
                C153713) *
               C537) *
              C1223 +
          ((((C20419 + C20420) * C2818 + C20396 * C2819 + C20397 * C153874) *
                C153853 +
            ((C21219 + C21220) * C2818 + (C20421 + C20422) * C2819 +
             (C20423 + C20424) * C153874) *
                C153713) *
               C536 -
           ((C19714 * C153874 + C20406 * C2819 + (C20420 + C20419) * C2818) *
                C153713 +
            (C12164 * C153874 + (C11687 + C11688) * C2819 +
             (C11350 * C330 + C11633 + C11633 + C153671 * C354 + C11348 * C329 +
              C11634 + C11634 + C153851 * C353) *
                 C2818) *
                C153853) *
               C535 -
           (((C11350 * C6301 + C21209 + C21209 + C153671 * C6313 +
              C11348 * C6302 + C21210 + C21210 + C153851 * C6314) *
                 C153874 +
             (C11350 * C6303 + C21211 + C21211 + C153671 * C6315 +
              C11348 * C6304 + C21212 + C21212 + C153851 * C6316) *
                 C2819 +
             (C11350 * C6305 + C21213 + C21213 + C153671 * C6317 +
              C11348 * C6306 + C21214 + C21214 + C153851 * C6318) *
                 C2818) *
                C153713 +
            ((C20424 + C20423) * C153874 + (C20422 + C20421) * C2819 +
             (C21220 + C21219) * C2818) *
                C153853) *
               C537) *
              C153563) *
         C153492) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C34895 * C136 + C34904 + C34904 + C34889 * C152 + C34897 * C329 +
             C34905 + C34905 + C34890 * C353 + C34899 * C330 + C34906 + C34906 +
             C34891 * C354 + C34901 * C1319 + C34907 + C34907 +
             C153860 * C1329) *
                C153454 * C153853 +
            (C44386 + C44387 + C44388 + C44389) * C153454 * C153713) *
               C153527 * C1223 -
           ((C45059 + C45058 + C45057 + C45056) * C153454 * C153713 +
            (C34901 * C3127 + C35190 + C35190 + C153860 * C3135 +
             C34899 * C1319 + C35191 + C35191 + C34891 * C1329 + C34897 * C330 +
             C35192 + C35192 + C34890 * C354 + C34895 * C329 + C35193 + C35193 +
             C34889 * C353) *
                C153454 * C153853) *
               C153527 * C153563) *
              C1225 +
          (((C35237 + C35236 + C35235 + C35234) * C153454 * C153853 +
            (C36222 + C36223 + C36224 + C36225) * C153454 * C153713) *
               C153527 * C153563 -
           ((C35492 + C35493 + C35494 + C35495) * C153454 * C153713 +
            (C34975 + C34974 + C34973 + C34972) * C153454 * C153853) *
               C153527 * C1223) *
              C1226 +
          (((C34979 + C34978 + C34977 + C34976) * C153454 * C153853 +
            (C35932 + C35933 + C35934 + C35935) * C153454 * C153713) *
               C153527 * C1223 -
           ((C34901 * C5701 + C36210 + C36210 + C153860 * C5707 +
             C34899 * C4305 + C36211 + C36211 + C34891 * C4313 +
             C34897 * C1890 + C36212 + C36212 + C34890 * C1900 +
             C34895 * C1059 + C36213 + C36213 + C34889 * C1071) *
                C153454 * C153713 +
            (C35717 + C35716 + C35715 + C35714) * C153454 * C153853) *
               C153527 * C153563) *
              C1227)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C34895 * C136 + C34904 + C34904 + C34889 * C152 + C34897 * C329 +
            C34905 + C34905 + C34890 * C353 + C34899 * C330 + C34906 + C34906 +
            C34891 * C354 + C34901 * C1319 + C34907 + C34907 +
            C153860 * C1329) *
               C153454 * C153853 +
           (C44386 + C44387 + C44388 + C44389) * C153454 * C153713) *
              C153527 * C1310 -
          ((C45059 + C45058 + C45057 + C45056) * C153454 * C153713 +
           (C34901 * C3127 + C35190 + C35190 + C153860 * C3135 +
            C34899 * C1319 + C35191 + C35191 + C34891 * C1329 + C34897 * C330 +
            C35192 + C35192 + C34890 * C354 + C34895 * C329 + C35193 + C35193 +
            C34889 * C353) *
               C153454 * C153853) *
              C153527 * C1311 +
          ((C34895 * C330 + C35194 + C35194 + C34889 * C354 + C34897 * C1319 +
            C35195 + C35195 + C34890 * C1329 + C34899 * C3127 + C35196 +
            C35196 + C34891 * C3135 + C34901 * C4723 + C35197 + C35197 +
            C153860 * C4729) *
               C153454 * C153853 +
           (C34895 * C1892 + C37413 + C37413 + C34889 * C1902 + C34897 * C4303 +
            C37412 + C37412 + C34890 * C4311 + C34899 * C5703 + C37411 +
            C37411 + C34891 * C5709 + C34901 * C29092 + C37410 + C37410 +
            C153860 * C29096) *
               C153454 * C153713) *
              C153527 * C1312 -
          ((C34901 * C29856 + C45384 + C45384 + C153860 * C29858 +
            C34899 * C29092 + C45385 + C45385 + C34891 * C29096 +
            C34897 * C5703 + C45386 + C45386 + C34890 * C5709 + C34895 * C4303 +
            C45387 + C45387 + C34889 * C4311) *
               C153454 * C153713 +
           (C34901 * C28502 + C36554 + C36554 + C153860 * C28506 +
            C34899 * C4723 + C36555 + C36555 + C34891 * C4729 + C34897 * C3127 +
            C36556 + C36556 + C34890 * C3135 + C34895 * C1319 + C36557 +
            C36557 + C34889 * C1329) *
               C153454 * C153853) *
              C153527 * C1313) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C34895 * C136 + C34904 + C34904 + C34889 * C152 + C34897 * C329 +
             C34905 + C34905 + C34890 * C353 + C34899 * C330 + C34906 + C34906 +
             C34891 * C354 + C34901 * C1319 + C34907 + C34907 +
             C153860 * C1329) *
                C153454 * C153853 +
            (C44386 + C44387 + C44388 + C44389) * C153454 * C153713) *
               C535 -
           ((C44390 + C44391 + C44392 + C44393) * C153454 * C153713 +
            (C44389 + C44388 + C44387 + C44386) * C153454 * C153853) *
               C536 +
           ((C44393 + C44392 + C44391 + C44390) * C153454 * C153853 +
            (C34895 * C2244 + C37939 + C37939 + C34889 * C2254 +
             C34897 * C6306 + C37938 + C37938 + C34890 * C6318 +
             C34899 * C6305 + C37937 + C37937 + C34891 * C6317 +
             C34901 * C30191 + C37936 + C37936 + C153860 * C30195) *
                C153454 * C153713) *
               C537) *
              C1223 +
          (((C45056 + C45057 + C45058 + C45059) * C153454 * C153853 +
            (C45602 + C45603 + C45604 + C45605) * C153454 * C153713) *
               C536 -
           ((C45059 + C45058 + C45057 + C45056) * C153454 * C153713 +
            (C34901 * C3127 + C35190 + C35190 + C153860 * C3135 +
             C34899 * C1319 + C35191 + C35191 + C34891 * C1329 + C34897 * C330 +
             C35192 + C35192 + C34890 * C354 + C34895 * C329 + C35193 + C35193 +
             C34889 * C353) *
                C153454 * C153853) *
               C535 -
           ((C34901 * C30190 + C45590 + C45590 + C153860 * C30194 +
             C34899 * C30191 + C45591 + C45591 + C34891 * C30195 +
             C34897 * C6305 + C45592 + C45592 + C34890 * C6317 +
             C34895 * C6306 + C45593 + C45593 + C34889 * C6318) *
                C153454 * C153713 +
            (C45605 + C45604 + C45603 + C45602) * C153454 * C153853) *
               C537) *
              C153563) *
         C153492) /
            (p * q * std::sqrt(p + q));
    d2ee[323] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C11348 * C136 + C11353 + C11353 + C153851 * C152 +
               C11350 * C329 + C11354 + C11354 + C153671 * C353) *
                  C2818 +
              (C11407 + C11408) * C2819 + C11417 * C153874) *
                 C153853 +
             ((C19416 + C19417) * C2818 + C19382 * C2819 + C18777 * C153874) *
                 C153713) *
                C153838 -
            ((C19383 * C153874 + C19384 * C2819 + (C19418 + C19419) * C2818) *
                 C153713 +
             (C12372 * C153874 + C19389 * C2819 + (C19417 + C19416) * C2818) *
                 C153853) *
                C153591) *
               C1223 +
           ((((C20419 + C20420) * C2818 + C20396 * C2819 + C20397 * C153874) *
                 C153853 +
             ((C21219 + C21220) * C2818 + (C20421 + C20422) * C2819 +
              (C20423 + C20424) * C153874) *
                 C153713) *
                C153591 -
            ((C19714 * C153874 + C20406 * C2819 + (C20420 + C20419) * C2818) *
                 C153713 +
             (C12164 * C153874 + (C11687 + C11688) * C2819 +
              (C11350 * C330 + C11633 + C11633 + C153671 * C354 +
               C11348 * C329 + C11634 + C11634 + C153851 * C353) *
                  C2818) *
                 C153853) *
                C153838) *
               C153563) *
              C153829 +
          ((((C19382 * C2818 + C18777 * C2819 + C20005 * C153874) * C153853 +
             (C19390 * C2818 + C19391 * C2819 + (C11967 + C11968) * C153874) *
                 C153713) *
                C153591 -
            ((C12371 * C153874 + C12372 * C2819 + C19389 * C2818) * C153713 +
             (C11420 * C153874 + (C11410 + C11409) * C2819 +
              (C11408 + C11407) * C2818) *
                 C153853) *
                C153838) *
               C1223 +
           ((((C11688 + C11687) * C2818 + (C11686 + C11685) * C2819 +
              (C11684 + C11683) * C153874) *
                 C153853 +
             (C20396 * C2818 + C20397 * C2819 + (C12681 + C12682) * C153874) *
                 C153713) *
                C153838 -
            (((C11350 * C3444 + C13209 + C13209 + C153671 * C3452 +
               C11348 * C1458 + C13210 + C13210 + C153851 * C1468) *
                  C153874 +
              (C20424 + C20423) * C2819 + (C20422 + C20421) * C2818) *
                 C153713 +
             ((C12682 + C12681) * C153874 + C19714 * C2819 + C20406 * C2818) *
                 C153853) *
                C153591) *
               C153563) *
              C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C34895 * C136 + C34904 + C34904 + C34889 * C152 + C34897 * C329 +
              C34905 + C34905 + C34890 * C353 + C34899 * C330 + C34906 +
              C34906 + C34891 * C354 + C34901 * C1319 + C34907 + C34907 +
              C153860 * C1329) *
                 C153454 * C153853 +
             (C44386 + C44387 + C44388 + C44389) * C153454 * C153713) *
                C153838 -
            ((C44390 + C44391 + C44392 + C44393) * C153454 * C153713 +
             (C44389 + C44388 + C44387 + C44386) * C153454 * C153853) *
                C153591) *
               C1223 +
           (((C45056 + C45057 + C45058 + C45059) * C153454 * C153853 +
             (C45602 + C45603 + C45604 + C45605) * C153454 * C153713) *
                C153591 -
            ((C45059 + C45058 + C45057 + C45056) * C153454 * C153713 +
             (C34901 * C3127 + C35190 + C35190 + C153860 * C3135 +
              C34899 * C1319 + C35191 + C35191 + C34891 * C1329 +
              C34897 * C330 + C35192 + C35192 + C34890 * C354 + C34895 * C329 +
              C35193 + C35193 + C34889 * C353) *
                 C153454 * C153853) *
                C153838) *
               C153563) *
              C153829 +
          ((((C35495 + C35494 + C35493 + C35492) * C153454 * C153853 +
             (C35496 + C35497 + C35498 + C35499) * C153454 * C153713) *
                C153591 -
            ((C35492 + C35493 + C35494 + C35495) * C153454 * C153713 +
             (C34975 + C34974 + C34973 + C34972) * C153454 * C153853) *
                C153838) *
               C1223 +
           (((C35237 + C35236 + C35235 + C35234) * C153454 * C153853 +
             (C36222 + C36223 + C36224 + C36225) * C153454 * C153713) *
                C153838 -
            ((C34901 * C28651 + C36752 + C36752 + C153860 * C28655 +
              C34899 * C4958 + C36753 + C36753 + C34891 * C4964 +
              C34897 * C3442 + C36754 + C36754 + C34890 * C3450 +
              C34895 * C1460 + C36755 + C36755 + C34889 * C1470) *
                 C153454 * C153713 +
             (C36225 + C36224 + C36223 + C36222) * C153454 * C153853) *
                C153591) *
               C153563) *
              C153498)) /
            (p * q * std::sqrt(p + q));
    d2ee[324] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C11348 * C136 + C11353 + C11353 + C153851 * C152 + C11350 * C329 +
              C11354 + C11354 + C153671 * C353) *
                 C2818 +
             (C11407 + C11408) * C2819 + C11417 * C153874) *
                C153853 +
            ((C19416 + C19417) * C2818 + C19382 * C2819 + C18777 * C153874) *
                C153713) *
               C153527 * C1223 -
           ((C19714 * C153874 + C20406 * C2819 + (C20420 + C20419) * C2818) *
                C153713 +
            (C12164 * C153874 + (C11687 + C11688) * C2819 +
             (C11350 * C330 + C11633 + C11633 + C153671 * C354 + C11348 * C329 +
              C11634 + C11634 + C153851 * C353) *
                 C2818) *
                C153853) *
               C153527 * C153563) *
              C1225 +
          ((((C11688 + C11687) * C2818 + (C11686 + C11685) * C2819 +
             (C11684 + C11683) * C153874) *
                C153853 +
            (C20396 * C2818 + C20397 * C2819 + (C12681 + C12682) * C153874) *
                C153713) *
               C153527 * C153563 -
           ((C12371 * C153874 + C12372 * C2819 + C19389 * C2818) * C153713 +
            (C11420 * C153874 + (C11410 + C11409) * C2819 +
             (C11408 + C11407) * C2818) *
                C153853) *
               C153527 * C1223) *
              C1226 +
          (((C11417 * C2818 + C11418 * C2819 + (C11414 + C11413) * C153874) *
                C153853 +
            (C18777 * C2818 + C20005 * C2819 + (C12383 + C12384) * C153874) *
                C153713) *
               C153527 * C1223 -
           (((C11350 * C1888 + C12663 + C12663 + C153671 * C1898 +
              C11348 * C1061 + C12664 + C12664 + C153851 * C1073) *
                 C153874 +
             (C12682 + C12681) * C2819 + C19714 * C2818) *
                C153713 +
            ((C12176 + C12175) * C153874 + C12163 * C2819 + C12164 * C2818) *
                C153853) *
               C153527 * C153563) *
              C1227)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C11348 * C136 + C11353 + C11353 + C153851 * C152 + C11350 * C329 +
             C11354 + C11354 + C153671 * C353) *
                C2818 +
            (C11407 + C11408) * C2819 + C11417 * C153874) *
               C153853 +
           ((C19416 + C19417) * C2818 + C19382 * C2819 + C18777 * C153874) *
               C153713) *
              C153527 * C1310 -
          ((C19714 * C153874 + C20406 * C2819 + (C20420 + C20419) * C2818) *
               C153713 +
           (C12164 * C153874 + (C11687 + C11688) * C2819 +
            (C11350 * C330 + C11633 + C11633 + C153671 * C354 + C11348 * C329 +
             C11634 + C11634 + C153851 * C353) *
                C2818) *
               C153853) *
              C153527 * C1311 +
          (((C11348 * C330 + C11635 + C11635 + C153851 * C354 + C11350 * C1319 +
             C11636 + C11636 + C153671 * C1329) *
                C2818 +
            (C11689 + C11690) * C2819 + (C11691 + C11692) * C153874) *
               C153853 +
           ((C11348 * C1892 + C13870 + C13870 + C153851 * C1902 +
             C11350 * C4303 + C13869 + C13869 + C153671 * C4311) *
                C2818 +
            (C19084 + C19085) * C2819 + (C19086 + C19087) * C153874) *
               C153713) *
              C153527 * C1312 -
          (((C11350 * C5701 + C20909 + C20909 + C153671 * C5707 +
             C11348 * C4305 + C20910 + C20910 + C153851 * C4313) *
                C153874 +
            (C11350 * C5702 + C20911 + C20911 + C153671 * C5708 +
             C11348 * C4304 + C20912 + C20912 + C153851 * C4312) *
                C2819 +
            (C11350 * C5703 + C20913 + C20913 + C153671 * C5709 +
             C11348 * C4303 + C20914 + C20914 + C153851 * C4311) *
                C2818) *
               C153713 +
           ((C11350 * C3129 + C13009 + C13009 + C153671 * C3137 +
             C11348 * C1317 + C13010 + C13010 + C153851 * C1327) *
                C153874 +
            (C11350 * C3128 + C13011 + C13011 + C153671 * C3136 +
             C11348 * C1318 + C13012 + C13012 + C153851 * C1328) *
                C2819 +
            (C11350 * C3127 + C13013 + C13013 + C153671 * C3135 +
             C11348 * C1319 + C13014 + C13014 + C153851 * C1329) *
                C2818) *
               C153853) *
              C153527 * C1313) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C34895 * C136 + C34904 + C34904 + C34889 * C152 + C34897 * C329 +
             C34905 + C34905 + C34890 * C353 + C34899 * C330 + C34906 + C34906 +
             C34891 * C354 + C34901 * C1319 + C34907 + C34907 +
             C153860 * C1329) *
                C153454 * C153853 +
            (C44386 + C44387 + C44388 + C44389) * C153454 * C153713) *
               C153527 * C1223 -
           ((C45059 + C45058 + C45057 + C45056) * C153454 * C153713 +
            (C34901 * C3127 + C35190 + C35190 + C153860 * C3135 +
             C34899 * C1319 + C35191 + C35191 + C34891 * C1329 + C34897 * C330 +
             C35192 + C35192 + C34890 * C354 + C34895 * C329 + C35193 + C35193 +
             C34889 * C353) *
                C153454 * C153853) *
               C153527 * C153563) *
              C1225 +
          (((C35237 + C35236 + C35235 + C35234) * C153454 * C153853 +
            (C36222 + C36223 + C36224 + C36225) * C153454 * C153713) *
               C153527 * C153563 -
           ((C35492 + C35493 + C35494 + C35495) * C153454 * C153713 +
            (C34975 + C34974 + C34973 + C34972) * C153454 * C153853) *
               C153527 * C1223) *
              C1226 +
          (((C34979 + C34978 + C34977 + C34976) * C153454 * C153853 +
            (C35932 + C35933 + C35934 + C35935) * C153454 * C153713) *
               C153527 * C1223 -
           ((C34901 * C5701 + C36210 + C36210 + C153860 * C5707 +
             C34899 * C4305 + C36211 + C36211 + C34891 * C4313 +
             C34897 * C1890 + C36212 + C36212 + C34890 * C1900 +
             C34895 * C1059 + C36213 + C36213 + C34889 * C1071) *
                C153454 * C153713 +
            (C35717 + C35716 + C35715 + C35714) * C153454 * C153853) *
               C153527 * C153563) *
              C1227)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C34895 * C136 + C34904 + C34904 + C34889 * C152 + C34897 * C329 +
            C34905 + C34905 + C34890 * C353 + C34899 * C330 + C34906 + C34906 +
            C34891 * C354 + C34901 * C1319 + C34907 + C34907 +
            C153860 * C1329) *
               C153454 * C153853 +
           (C44386 + C44387 + C44388 + C44389) * C153454 * C153713) *
              C153527 * C1310 -
          ((C45059 + C45058 + C45057 + C45056) * C153454 * C153713 +
           (C34901 * C3127 + C35190 + C35190 + C153860 * C3135 +
            C34899 * C1319 + C35191 + C35191 + C34891 * C1329 + C34897 * C330 +
            C35192 + C35192 + C34890 * C354 + C34895 * C329 + C35193 + C35193 +
            C34889 * C353) *
               C153454 * C153853) *
              C153527 * C1311 +
          ((C34895 * C330 + C35194 + C35194 + C34889 * C354 + C34897 * C1319 +
            C35195 + C35195 + C34890 * C1329 + C34899 * C3127 + C35196 +
            C35196 + C34891 * C3135 + C34901 * C4723 + C35197 + C35197 +
            C153860 * C4729) *
               C153454 * C153853 +
           (C34895 * C1892 + C37413 + C37413 + C34889 * C1902 + C34897 * C4303 +
            C37412 + C37412 + C34890 * C4311 + C34899 * C5703 + C37411 +
            C37411 + C34891 * C5709 + C34901 * C29092 + C37410 + C37410 +
            C153860 * C29096) *
               C153454 * C153713) *
              C153527 * C1312 -
          ((C34901 * C29856 + C45384 + C45384 + C153860 * C29858 +
            C34899 * C29092 + C45385 + C45385 + C34891 * C29096 +
            C34897 * C5703 + C45386 + C45386 + C34890 * C5709 + C34895 * C4303 +
            C45387 + C45387 + C34889 * C4311) *
               C153454 * C153713 +
           (C34901 * C28502 + C36554 + C36554 + C153860 * C28506 +
            C34899 * C4723 + C36555 + C36555 + C34891 * C4729 + C34897 * C3127 +
            C36556 + C36556 + C34890 * C3135 + C34895 * C1319 + C36557 +
            C36557 + C34889 * C1329) *
               C153454 * C153853) *
              C153527 * C1313) *
         C153492) /
            (p * q * std::sqrt(p + q));
    d2ee[325] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C11348 * C136 + C11353 + C11353 + C153851 * C152 +
               C11350 * C329 + C11354 + C11354 + C153671 * C353) *
                  C2818 +
              (C11407 + C11408) * C2819 + C11417 * C153874) *
                 C153853 +
             ((C19416 + C19417) * C2818 + C19382 * C2819 + C18777 * C153874) *
                 C153713) *
                C2030 -
            ((C19383 * C153874 + C19384 * C2819 + (C19418 + C19419) * C2818) *
                 C153713 +
             (C12372 * C153874 + C19389 * C2819 + (C19417 + C19416) * C2818) *
                 C153853) *
                C153591) *
               C153837 +
           ((((C20419 + C20420) * C2818 + C20396 * C2819 + C20397 * C153874) *
                 C153853 +
             ((C21219 + C21220) * C2818 + (C20421 + C20422) * C2819 +
              (C20423 + C20424) * C153874) *
                 C153713) *
                C153591 -
            ((C19714 * C153874 + C20406 * C2819 + (C20420 + C20419) * C2818) *
                 C153713 +
             (C12164 * C153874 + (C11687 + C11688) * C2819 +
              (C11350 * C330 + C11633 + C11633 + C153671 * C354 +
               C11348 * C329 + C11634 + C11634 + C153851 * C353) *
                  C2818) *
                 C153853) *
                C2030) *
               C153563) *
              C153829 +
          ((((C19382 * C2818 + C18777 * C2819 + C20005 * C153874) * C153853 +
             (C19390 * C2818 + C19391 * C2819 + (C11967 + C11968) * C153874) *
                 C153713) *
                C153591 -
            ((C12371 * C153874 + C12372 * C2819 + C19389 * C2818) * C153713 +
             (C11420 * C153874 + (C11410 + C11409) * C2819 +
              (C11408 + C11407) * C2818) *
                 C153853) *
                C2030) *
               C153837 +
           ((((C11688 + C11687) * C2818 + (C11686 + C11685) * C2819 +
              (C11684 + C11683) * C153874) *
                 C153853 +
             (C20396 * C2818 + C20397 * C2819 + (C12681 + C12682) * C153874) *
                 C153713) *
                C2030 -
            (((C11350 * C3444 + C13209 + C13209 + C153671 * C3452 +
               C11348 * C1458 + C13210 + C13210 + C153851 * C1468) *
                  C153874 +
              (C20424 + C20423) * C2819 + (C20422 + C20421) * C2818) *
                 C153713 +
             ((C12682 + C12681) * C153874 + C19714 * C2819 + C20406 * C2818) *
                 C153853) *
                C153591) *
               C153563) *
              C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C34895 * C136 + C34904 + C34904 + C34889 * C152 + C34897 * C329 +
              C34905 + C34905 + C34890 * C353 + C34899 * C330 + C34906 +
              C34906 + C34891 * C354 + C34901 * C1319 + C34907 + C34907 +
              C153860 * C1329) *
                 C153454 * C153853 +
             (C44386 + C44387 + C44388 + C44389) * C153454 * C153713) *
                C2030 -
            ((C44390 + C44391 + C44392 + C44393) * C153454 * C153713 +
             (C44389 + C44388 + C44387 + C44386) * C153454 * C153853) *
                C153591) *
               C153837 +
           (((C45056 + C45057 + C45058 + C45059) * C153454 * C153853 +
             (C45602 + C45603 + C45604 + C45605) * C153454 * C153713) *
                C153591 -
            ((C45059 + C45058 + C45057 + C45056) * C153454 * C153713 +
             (C34901 * C3127 + C35190 + C35190 + C153860 * C3135 +
              C34899 * C1319 + C35191 + C35191 + C34891 * C1329 +
              C34897 * C330 + C35192 + C35192 + C34890 * C354 + C34895 * C329 +
              C35193 + C35193 + C34889 * C353) *
                 C153454 * C153853) *
                C2030) *
               C153563) *
              C153829 +
          ((((C35495 + C35494 + C35493 + C35492) * C153454 * C153853 +
             (C35496 + C35497 + C35498 + C35499) * C153454 * C153713) *
                C153591 -
            ((C35492 + C35493 + C35494 + C35495) * C153454 * C153713 +
             (C34975 + C34974 + C34973 + C34972) * C153454 * C153853) *
                C2030) *
               C153837 +
           (((C35237 + C35236 + C35235 + C35234) * C153454 * C153853 +
             (C36222 + C36223 + C36224 + C36225) * C153454 * C153713) *
                C2030 -
            ((C34901 * C28651 + C36752 + C36752 + C153860 * C28655 +
              C34899 * C4958 + C36753 + C36753 + C34891 * C4964 +
              C34897 * C3442 + C36754 + C36754 + C34890 * C3450 +
              C34895 * C1460 + C36755 + C36755 + C34889 * C1470) *
                 C153454 * C153713 +
             (C36225 + C36224 + C36223 + C36222) * C153454 * C153853) *
                C153591) *
               C153563) *
              C153498)) /
            (p * q * std::sqrt(p + q));
    d2ee[326] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C11348 * C136 + C11353 + C11353 + C153851 * C152 + C11350 * C329 +
              C11354 + C11354 + C153671 * C353) *
                 C2818 +
             (C11407 + C11408) * C2819 + C11417 * C153874) *
                C153853 +
            ((C19416 + C19417) * C2818 + C19382 * C2819 + C18777 * C153874) *
                C153713) *
               C153910 -
           ((C19383 * C153874 + C19384 * C2819 + (C19418 + C19419) * C2818) *
                C153713 +
            (C12372 * C153874 + C19389 * C2819 + (C19417 + C19416) * C2818) *
                C153853) *
               C153911 +
           (((C19419 + C19418) * C2818 + C19390 * C2819 + C19391 * C153874) *
                C153853 +
            ((C22991 + C22992) * C2818 + (C19420 + C19421) * C2819 +
             (C19422 + C19423) * C153874) *
                C153713) *
               C2546) *
              C153837 +
          ((((C20419 + C20420) * C2818 + C20396 * C2819 + C20397 * C153874) *
                C153853 +
            ((C21219 + C21220) * C2818 + (C20421 + C20422) * C2819 +
             (C20423 + C20424) * C153874) *
                C153713) *
               C153911 -
           ((C19714 * C153874 + C20406 * C2819 + (C20420 + C20419) * C2818) *
                C153713 +
            (C12164 * C153874 + (C11687 + C11688) * C2819 +
             (C11350 * C330 + C11633 + C11633 + C153671 * C354 + C11348 * C329 +
              C11634 + C11634 + C153851 * C353) *
                 C2818) *
                C153853) *
               C153910 -
           (((C11350 * C6301 + C21209 + C21209 + C153671 * C6313 +
              C11348 * C6302 + C21210 + C21210 + C153851 * C6314) *
                 C153874 +
             (C11350 * C6303 + C21211 + C21211 + C153671 * C6315 +
              C11348 * C6304 + C21212 + C21212 + C153851 * C6316) *
                 C2819 +
             (C11350 * C6305 + C21213 + C21213 + C153671 * C6317 +
              C11348 * C6306 + C21214 + C21214 + C153851 * C6318) *
                 C2818) *
                C153713 +
            ((C20424 + C20423) * C153874 + (C20422 + C20421) * C2819 +
             (C21220 + C21219) * C2818) *
                C153853) *
               C2546) *
              C153563) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C34895 * C136 + C34904 + C34904 + C34889 * C152 + C34897 * C329 +
             C34905 + C34905 + C34890 * C353 + C34899 * C330 + C34906 + C34906 +
             C34891 * C354 + C34901 * C1319 + C34907 + C34907 +
             C153860 * C1329) *
                C153454 * C153853 +
            (C44386 + C44387 + C44388 + C44389) * C153454 * C153713) *
               C153910 -
           ((C44390 + C44391 + C44392 + C44393) * C153454 * C153713 +
            (C44389 + C44388 + C44387 + C44386) * C153454 * C153853) *
               C153911 +
           ((C44393 + C44392 + C44391 + C44390) * C153454 * C153853 +
            (C46814 + C46815 + C46816 + C46817) * C153454 * C153713) *
               C2546) *
              C153837 +
          (((C45056 + C45057 + C45058 + C45059) * C153454 * C153853 +
            (C45602 + C45603 + C45604 + C45605) * C153454 * C153713) *
               C153911 -
           ((C45059 + C45058 + C45057 + C45056) * C153454 * C153713 +
            (C34901 * C3127 + C35190 + C35190 + C153860 * C3135 +
             C34899 * C1319 + C35191 + C35191 + C34891 * C1329 + C34897 * C330 +
             C35192 + C35192 + C34890 * C354 + C34895 * C329 + C35193 + C35193 +
             C34889 * C353) *
                C153454 * C153853) *
               C153910 -
           ((C34901 * C30190 + C45590 + C45590 + C153860 * C30194 +
             C34899 * C30191 + C45591 + C45591 + C34891 * C30195 +
             C34897 * C6305 + C45592 + C45592 + C34890 * C6317 +
             C34895 * C6306 + C45593 + C45593 + C34889 * C6318) *
                C153454 * C153713 +
            (C45605 + C45604 + C45603 + C45602) * C153454 * C153853) *
               C2546) *
              C153563) *
         C153492) /
            (p * q * std::sqrt(p + q));
    d2ee[327] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C11348 * C136 + C11353 + C11353 + C153851 * C152 + C11350 * C329 +
              C11354 + C11354 + C153671 * C353) *
                 C2818 +
             (C11407 + C11408) * C2819 + C11417 * C153874) *
                C153853 +
            ((C19416 + C19417) * C2818 + C19382 * C2819 + C18777 * C153874) *
                C153713) *
               C2030 -
           ((C19383 * C153874 + C19384 * C2819 + (C19418 + C19419) * C2818) *
                C153713 +
            (C12372 * C153874 + C19389 * C2819 + (C19417 + C19416) * C2818) *
                C153853) *
               C153591) *
              C320 +
          ((((C20419 + C20420) * C2818 + C20396 * C2819 + C20397 * C153874) *
                C153853 +
            ((C21219 + C21220) * C2818 + (C20421 + C20422) * C2819 +
             (C20423 + C20424) * C153874) *
                C153713) *
               C153591 -
           ((C19714 * C153874 + C20406 * C2819 + (C20420 + C20419) * C2818) *
                C153713 +
            (C12164 * C153874 + (C11687 + C11688) * C2819 +
             (C11350 * C330 + C11633 + C11633 + C153671 * C354 + C11348 * C329 +
              C11634 + C11634 + C153851 * C353) *
                 C2818) *
                C153853) *
               C2030) *
              C321 +
          ((((C11348 * C330 + C11635 + C11635 + C153851 * C354 +
              C11350 * C1319 + C11636 + C11636 + C153671 * C1329) *
                 C2818 +
             (C11689 + C11690) * C2819 + (C11691 + C11692) * C153874) *
                C153853 +
            ((C22201 + C22202) * C2818 + (C19084 + C19085) * C2819 +
             (C19086 + C19087) * C153874) *
                C153713) *
               C2030 -
           (((C11350 * C4957 + C22191 + C22191 + C153671 * C4963 +
              C11348 * C3443 + C22192 + C22192 + C153851 * C3451) *
                 C153874 +
             (C11350 * C4958 + C22193 + C22193 + C153671 * C4964 +
              C11348 * C3442 + C22194 + C22194 + C153851 * C3450) *
                 C2819 +
             (C11350 * C4959 + C22195 + C22195 + C153671 * C4965 +
              C11348 * C3441 + C22196 + C22196 + C153851 * C3449) *
                 C2818) *
                C153713 +
            ((C19087 + C19086) * C153874 + (C19085 + C19084) * C2819 +
             (C22202 + C22201) * C2818) *
                C153853) *
               C153591) *
              C322) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C11348 * C136 + C11353 + C11353 + C153851 * C152 + C11350 * C329 +
              C11354 + C11354 + C153671 * C353) *
                 C2818 +
             (C11407 + C11408) * C2819 + C11417 * C153874) *
                C153853 +
            ((C19416 + C19417) * C2818 + C19382 * C2819 + C18777 * C153874) *
                C153713) *
               C2030 -
           ((C19383 * C153874 + C19384 * C2819 + (C19418 + C19419) * C2818) *
                C153713 +
            (C12372 * C153874 + C19389 * C2819 + (C19417 + C19416) * C2818) *
                C153853) *
               C153591) *
              C153511 * C1225 +
          (((C19382 * C2818 + C18777 * C2819 + C20005 * C153874) * C153853 +
            (C19390 * C2818 + C19391 * C2819 + (C11967 + C11968) * C153874) *
                C153713) *
               C153591 -
           ((C12371 * C153874 + C12372 * C2819 + C19389 * C2818) * C153713 +
            (C11420 * C153874 + (C11410 + C11409) * C2819 +
             (C11408 + C11407) * C2818) *
                C153853) *
               C2030) *
              C153511 * C1226 +
          (((C11417 * C2818 + C11418 * C2819 + (C11414 + C11413) * C153874) *
                C153853 +
            (C18777 * C2818 + C20005 * C2819 + (C12383 + C12384) * C153874) *
                C153713) *
               C2030 -
           (((C11350 * C1457 + C11931 + C11931 + C153671 * C1467 +
              C11348 * C547 + C11932 + C11932 + C153851 * C571) *
                 C153874 +
             (C11968 + C11967) * C2819 + C19383 * C2818) *
                C153713 +
            ((C12384 + C12383) * C153874 + C12371 * C2819 + C12372 * C2818) *
                C153853) *
               C153591) *
              C153511 * C1227)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C11348 * C136 + C11353 + C11353 + C153851 * C152 + C11350 * C329 +
             C11354 + C11354 + C153671 * C353) *
                C2818 +
            (C11407 + C11408) * C2819 + C11417 * C153874) *
               C153853 +
           ((C19416 + C19417) * C2818 + C19382 * C2819 + C18777 * C153874) *
               C153713) *
              C2236 -
          ((C19383 * C153874 + C19384 * C2819 + (C19418 + C19419) * C2818) *
               C153713 +
           (C12372 * C153874 + C19389 * C2819 + (C19417 + C19416) * C2818) *
               C153853) *
              C2237 +
          (((C19419 + C19418) * C2818 + C19390 * C2819 + C19391 * C153874) *
               C153853 +
           ((C22991 + C22992) * C2818 + (C19420 + C19421) * C2819 +
            (C19422 + C19423) * C153874) *
               C153713) *
              C2238 -
          (((C11350 * C9115 + C22981 + C22981 + C153671 * C9121 +
             C11348 * C7675 + C22982 + C22982 + C153851 * C7683) *
                C153874 +
            (C11350 * C9116 + C22983 + C22983 + C153671 * C9122 +
             C11348 * C7674 + C22984 + C22984 + C153851 * C7682) *
                C2819 +
            (C11350 * C9117 + C22985 + C22985 + C153671 * C9123 +
             C11348 * C7673 + C22986 + C22986 + C153851 * C7681) *
                C2818) *
               C153713 +
           ((C19423 + C19422) * C153874 + (C19421 + C19420) * C2819 +
            (C22992 + C22991) * C2818) *
               C153853) *
              C2239) *
         C153511 * C153492) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C34895 * C136 + C34904 + C34904 + C34889 * C152 + C34897 * C329 +
             C34905 + C34905 + C34890 * C353 + C34899 * C330 + C34906 + C34906 +
             C34891 * C354 + C34901 * C1319 + C34907 + C34907 +
             C153860 * C1329) *
                C153454 * C153853 +
            (C44386 + C44387 + C44388 + C44389) * C153454 * C153713) *
               C2030 -
           ((C44390 + C44391 + C44392 + C44393) * C153454 * C153713 +
            (C44389 + C44388 + C44387 + C44386) * C153454 * C153853) *
               C153591) *
              C153511 * C1225 +
          (((C35495 + C35494 + C35493 + C35492) * C153454 * C153853 +
            (C35496 + C35497 + C35498 + C35499) * C153454 * C153713) *
               C153591 -
           ((C35492 + C35493 + C35494 + C35495) * C153454 * C153713 +
            (C34975 + C34974 + C34973 + C34972) * C153454 * C153853) *
               C2030) *
              C153511 * C1226 +
          (((C34979 + C34978 + C34977 + C34976) * C153454 * C153853 +
            (C35932 + C35933 + C35934 + C35935) * C153454 * C153713) *
               C2030 -
           ((C34901 * C4957 + C35472 + C35472 + C153860 * C4963 +
             C34899 * C3443 + C35473 + C35473 + C34891 * C3451 +
             C34897 * C1459 + C35474 + C35474 + C34890 * C1469 + C34895 * C545 +
             C35475 + C35475 + C34889 * C569) *
                C153454 * C153713 +
            (C35935 + C35934 + C35933 + C35932) * C153454 * C153853) *
               C153591) *
              C153511 * C1227)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C34895 * C136 + C34904 + C34904 + C34889 * C152 + C34897 * C329 +
             C34905 + C34905 + C34890 * C353 + C34899 * C330 + C34906 + C34906 +
             C34891 * C354 + C34901 * C1319 + C34907 + C34907 +
             C153860 * C1329) *
                C153454 * C153853 +
            (C44386 + C44387 + C44388 + C44389) * C153454 * C153713) *
               C2030 -
           ((C44390 + C44391 + C44392 + C44393) * C153454 * C153713 +
            (C44389 + C44388 + C44387 + C44386) * C153454 * C153853) *
               C153591) *
              C320 +
          (((C45056 + C45057 + C45058 + C45059) * C153454 * C153853 +
            (C45602 + C45603 + C45604 + C45605) * C153454 * C153713) *
               C153591 -
           ((C45059 + C45058 + C45057 + C45056) * C153454 * C153713 +
            (C34901 * C3127 + C35190 + C35190 + C153860 * C3135 +
             C34899 * C1319 + C35191 + C35191 + C34891 * C1329 + C34897 * C330 +
             C35192 + C35192 + C34890 * C354 + C34895 * C329 + C35193 + C35193 +
             C34889 * C353) *
                C153454 * C153853) *
               C2030) *
              C321 +
          (((C34895 * C330 + C35194 + C35194 + C34889 * C354 + C34897 * C1319 +
             C35195 + C35195 + C34890 * C1329 + C34899 * C3127 + C35196 +
             C35196 + C34891 * C3135 + C34901 * C4723 + C35197 + C35197 +
             C153860 * C4729) *
                C153454 * C153853 +
            (C46272 + C46273 + C46274 + C46275) * C153454 * C153713) *
               C2030 -
           ((C34901 * C29442 + C46260 + C46260 + C153860 * C29444 +
             C34899 * C28650 + C46261 + C46261 + C34891 * C28654 +
             C34897 * C4959 + C46262 + C46262 + C34890 * C4965 +
             C34895 * C3441 + C46263 + C46263 + C34889 * C3449) *
                C153454 * C153713 +
            (C46275 + C46274 + C46273 + C46272) * C153454 * C153853) *
               C153591) *
              C322) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C34895 * C136 + C34904 + C34904 + C34889 * C152 + C34897 * C329 +
            C34905 + C34905 + C34890 * C353 + C34899 * C330 + C34906 + C34906 +
            C34891 * C354 + C34901 * C1319 + C34907 + C34907 +
            C153860 * C1329) *
               C153454 * C153853 +
           (C44386 + C44387 + C44388 + C44389) * C153454 * C153713) *
              C2236 -
          ((C44390 + C44391 + C44392 + C44393) * C153454 * C153713 +
           (C44389 + C44388 + C44387 + C44386) * C153454 * C153853) *
              C2237 +
          ((C44393 + C44392 + C44391 + C44390) * C153454 * C153853 +
           (C46814 + C46815 + C46816 + C46817) * C153454 * C153713) *
              C2238 -
          ((C34901 * C32641 + C46802 + C46802 + C153860 * C32643 +
            C34899 * C31195 + C46803 + C46803 + C34891 * C31199 +
            C34897 * C9117 + C46804 + C46804 + C34890 * C9123 + C34895 * C7673 +
            C46805 + C46805 + C34889 * C7681) *
               C153454 * C153713 +
           (C46817 + C46816 + C46815 + C46814) * C153454 * C153853) *
              C2239) *
         C153511 * C153492) /
            (p * q * std::sqrt(p + q));
    d2ee[328] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C11348 * C136 + C11353 + C11353 + C153851 * C152 + C11350 * C329 +
              C11354 + C11354 + C153671 * C353) *
                 C2818 +
             (C11407 + C11408) * C2819 + C11417 * C153874) *
                C153853 +
            ((C19416 + C19417) * C2818 + C19382 * C2819 + C18777 * C153874) *
                C153713) *
               C153910 -
           ((C19383 * C153874 + C19384 * C2819 + (C19418 + C19419) * C2818) *
                C153713 +
            (C12372 * C153874 + C19389 * C2819 + (C19417 + C19416) * C2818) *
                C153853) *
               C153911 +
           (((C19419 + C19418) * C2818 + C19390 * C2819 + C19391 * C153874) *
                C153853 +
            ((C22991 + C22992) * C2818 + (C19420 + C19421) * C2819 +
             (C19422 + C19423) * C153874) *
                C153713) *
               C2546) *
              C153511 * C153829 +
          (((C19382 * C2818 + C18777 * C2819 + C20005 * C153874) * C153853 +
            (C19390 * C2818 + C19391 * C2819 + (C11967 + C11968) * C153874) *
                C153713) *
               C153911 -
           ((C12371 * C153874 + C12372 * C2819 + C19389 * C2818) * C153713 +
            (C11420 * C153874 + (C11410 + C11409) * C2819 +
             (C11408 + C11407) * C2818) *
                C153853) *
               C153910 -
           (((C11350 * C8488 + C14389 + C14389 + C153671 * C8490 +
              C11348 * C2241 + C14390 + C14390 + C153851 * C2251) *
                 C153874 +
             (C19423 + C19422) * C2819 + (C19421 + C19420) * C2818) *
                C153713 +
            ((C11968 + C11967) * C153874 + C19383 * C2819 + C19384 * C2818) *
                C153853) *
               C2546) *
              C153511 * C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C34895 * C136 + C34904 + C34904 + C34889 * C152 + C34897 * C329 +
             C34905 + C34905 + C34890 * C353 + C34899 * C330 + C34906 + C34906 +
             C34891 * C354 + C34901 * C1319 + C34907 + C34907 +
             C153860 * C1329) *
                C153454 * C153853 +
            (C44386 + C44387 + C44388 + C44389) * C153454 * C153713) *
               C153910 -
           ((C44390 + C44391 + C44392 + C44393) * C153454 * C153713 +
            (C44389 + C44388 + C44387 + C44386) * C153454 * C153853) *
               C153911 +
           ((C44393 + C44392 + C44391 + C44390) * C153454 * C153853 +
            (C46814 + C46815 + C46816 + C46817) * C153454 * C153713) *
               C2546) *
              C153511 * C153829 +
          (((C35495 + C35494 + C35493 + C35492) * C153454 * C153853 +
            (C35496 + C35497 + C35498 + C35499) * C153454 * C153713) *
               C153911 -
           ((C35492 + C35493 + C35494 + C35495) * C153454 * C153713 +
            (C34975 + C34974 + C34973 + C34972) * C153454 * C153853) *
               C153910 -
           ((C34901 * C31999 + C37932 + C37932 + C153860 * C32001 +
             C34899 * C6303 + C37933 + C37933 + C34891 * C6315 +
             C34897 * C6304 + C37934 + C37934 + C34890 * C6316 +
             C34895 * C2243 + C37935 + C37935 + C34889 * C2253) *
                C153454 * C153713 +
            (C35499 + C35498 + C35497 + C35496) * C153454 * C153853) *
               C2546) *
              C153511 * C153498)) /
            (p * q * std::sqrt(p + q));
    d2ee[329] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C11348 * C136 + C11353 + C11353 + C153851 * C152 + C11350 * C329 +
              C11354 + C11354 + C153671 * C353) *
                 C2818 +
             (C11407 + C11408) * C2819 + C11417 * C153874) *
                C153853 +
            ((C19416 + C19417) * C2818 + C19382 * C2819 + C18777 * C153874) *
                C153713) *
               C2030 -
           ((C19383 * C153874 + C19384 * C2819 + (C19418 + C19419) * C2818) *
                C153713 +
            (C12372 * C153874 + C19389 * C2819 + (C19417 + C19416) * C2818) *
                C153853) *
               C153591) *
              C153511 * C1225 +
          (((C19382 * C2818 + C18777 * C2819 + C20005 * C153874) * C153853 +
            (C19390 * C2818 + C19391 * C2819 + (C11967 + C11968) * C153874) *
                C153713) *
               C153591 -
           ((C12371 * C153874 + C12372 * C2819 + C19389 * C2818) * C153713 +
            (C11420 * C153874 + (C11410 + C11409) * C2819 +
             (C11408 + C11407) * C2818) *
                C153853) *
               C2030) *
              C153511 * C1226 +
          (((C11417 * C2818 + C11418 * C2819 + (C11414 + C11413) * C153874) *
                C153853 +
            (C18777 * C2818 + C20005 * C2819 + (C12383 + C12384) * C153874) *
                C153713) *
               C2030 -
           (((C11350 * C1457 + C11931 + C11931 + C153671 * C1467 +
              C11348 * C547 + C11932 + C11932 + C153851 * C571) *
                 C153874 +
             (C11968 + C11967) * C2819 + C19383 * C2818) *
                C153713 +
            ((C12384 + C12383) * C153874 + C12371 * C2819 + C12372 * C2818) *
                C153853) *
               C153591) *
              C153511 * C1227)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C11348 * C136 + C11353 + C11353 + C153851 * C152 + C11350 * C329 +
              C11354 + C11354 + C153671 * C353) *
                 C2818 +
             (C11407 + C11408) * C2819 + C11417 * C153874) *
                C153853 +
            ((C19416 + C19417) * C2818 + C19382 * C2819 + C18777 * C153874) *
                C153713) *
               C2030 -
           ((C19383 * C153874 + C19384 * C2819 + (C19418 + C19419) * C2818) *
                C153713 +
            (C12372 * C153874 + C19389 * C2819 + (C19417 + C19416) * C2818) *
                C153853) *
               C153591) *
              C320 +
          ((((C20419 + C20420) * C2818 + C20396 * C2819 + C20397 * C153874) *
                C153853 +
            ((C21219 + C21220) * C2818 + (C20421 + C20422) * C2819 +
             (C20423 + C20424) * C153874) *
                C153713) *
               C153591 -
           ((C19714 * C153874 + C20406 * C2819 + (C20420 + C20419) * C2818) *
                C153713 +
            (C12164 * C153874 + (C11687 + C11688) * C2819 +
             (C11350 * C330 + C11633 + C11633 + C153671 * C354 + C11348 * C329 +
              C11634 + C11634 + C153851 * C353) *
                 C2818) *
                C153853) *
               C2030) *
              C321 +
          ((((C11348 * C330 + C11635 + C11635 + C153851 * C354 +
              C11350 * C1319 + C11636 + C11636 + C153671 * C1329) *
                 C2818 +
             (C11689 + C11690) * C2819 + (C11691 + C11692) * C153874) *
                C153853 +
            ((C22201 + C22202) * C2818 + (C19084 + C19085) * C2819 +
             (C19086 + C19087) * C153874) *
                C153713) *
               C2030 -
           (((C11350 * C4957 + C22191 + C22191 + C153671 * C4963 +
              C11348 * C3443 + C22192 + C22192 + C153851 * C3451) *
                 C153874 +
             (C11350 * C4958 + C22193 + C22193 + C153671 * C4964 +
              C11348 * C3442 + C22194 + C22194 + C153851 * C3450) *
                 C2819 +
             (C11350 * C4959 + C22195 + C22195 + C153671 * C4965 +
              C11348 * C3441 + C22196 + C22196 + C153851 * C3449) *
                 C2818) *
                C153713 +
            ((C19087 + C19086) * C153874 + (C19085 + C19084) * C2819 +
             (C22202 + C22201) * C2818) *
                C153853) *
               C153591) *
              C322) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C34895 * C136 + C34904 + C34904 + C34889 * C152 + C34897 * C329 +
             C34905 + C34905 + C34890 * C353 + C34899 * C330 + C34906 + C34906 +
             C34891 * C354 + C34901 * C1319 + C34907 + C34907 +
             C153860 * C1329) *
                C153454 * C153853 +
            (C44386 + C44387 + C44388 + C44389) * C153454 * C153713) *
               C2030 -
           ((C44390 + C44391 + C44392 + C44393) * C153454 * C153713 +
            (C44389 + C44388 + C44387 + C44386) * C153454 * C153853) *
               C153591) *
              C153511 * C1225 +
          (((C35495 + C35494 + C35493 + C35492) * C153454 * C153853 +
            (C35496 + C35497 + C35498 + C35499) * C153454 * C153713) *
               C153591 -
           ((C35492 + C35493 + C35494 + C35495) * C153454 * C153713 +
            (C34975 + C34974 + C34973 + C34972) * C153454 * C153853) *
               C2030) *
              C153511 * C1226 +
          (((C34979 + C34978 + C34977 + C34976) * C153454 * C153853 +
            (C35932 + C35933 + C35934 + C35935) * C153454 * C153713) *
               C2030 -
           ((C34901 * C4957 + C35472 + C35472 + C153860 * C4963 +
             C34899 * C3443 + C35473 + C35473 + C34891 * C3451 +
             C34897 * C1459 + C35474 + C35474 + C34890 * C1469 + C34895 * C545 +
             C35475 + C35475 + C34889 * C569) *
                C153454 * C153713 +
            (C35935 + C35934 + C35933 + C35932) * C153454 * C153853) *
               C153591) *
              C153511 * C1227)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C34895 * C136 + C34904 + C34904 + C34889 * C152 + C34897 * C329 +
             C34905 + C34905 + C34890 * C353 + C34899 * C330 + C34906 + C34906 +
             C34891 * C354 + C34901 * C1319 + C34907 + C34907 +
             C153860 * C1329) *
                C153454 * C153853 +
            (C44386 + C44387 + C44388 + C44389) * C153454 * C153713) *
               C2030 -
           ((C44390 + C44391 + C44392 + C44393) * C153454 * C153713 +
            (C44389 + C44388 + C44387 + C44386) * C153454 * C153853) *
               C153591) *
              C320 +
          (((C45056 + C45057 + C45058 + C45059) * C153454 * C153853 +
            (C45602 + C45603 + C45604 + C45605) * C153454 * C153713) *
               C153591 -
           ((C45059 + C45058 + C45057 + C45056) * C153454 * C153713 +
            (C34901 * C3127 + C35190 + C35190 + C153860 * C3135 +
             C34899 * C1319 + C35191 + C35191 + C34891 * C1329 + C34897 * C330 +
             C35192 + C35192 + C34890 * C354 + C34895 * C329 + C35193 + C35193 +
             C34889 * C353) *
                C153454 * C153853) *
               C2030) *
              C321 +
          (((C34895 * C330 + C35194 + C35194 + C34889 * C354 + C34897 * C1319 +
             C35195 + C35195 + C34890 * C1329 + C34899 * C3127 + C35196 +
             C35196 + C34891 * C3135 + C34901 * C4723 + C35197 + C35197 +
             C153860 * C4729) *
                C153454 * C153853 +
            (C46272 + C46273 + C46274 + C46275) * C153454 * C153713) *
               C2030 -
           ((C34901 * C29442 + C46260 + C46260 + C153860 * C29444 +
             C34899 * C28650 + C46261 + C46261 + C34891 * C28654 +
             C34897 * C4959 + C46262 + C46262 + C34890 * C4965 +
             C34895 * C3441 + C46263 + C46263 + C34889 * C3449) *
                C153454 * C153713 +
            (C46275 + C46274 + C46273 + C46272) * C153454 * C153853) *
               C153591) *
              C322) *
         C153492) /
            (p * q * std::sqrt(p + q));
    d2ee[330] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
             C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
             C153887 * C354) *
                C2818 +
            (C2894 + C2895 + C2896) * C2819 + C2908 * C153874) *
               C153626 * C153527 * C153837 -
           (C3766 * C153874 + (C3215 + C3216 + C3217) * C2819 +
            (C2825 * C1319 + C3158 + C3158 + C153887 * C1329 + C2823 * C330 +
             C3159 + C3159 + C153913 * C354 + C2821 * C329 + C3160 + C3160 +
             C153925 * C353) *
                C2818) *
               C153626 * C153527 * C153563) *
              C153906 +
          (((C3217 + C3216 + C3215) * C2818 + (C3214 + C3213 + C3212) * C2819 +
            (C3773 + C3774 + C3775) * C153874) *
               C153626 * C153527 * C153563 -
           (C2909 * C153874 + (C2899 + C2898 + C2897) * C2819 +
            (C2896 + C2895 + C2894) * C2818) *
               C153626 * C153527 * C153837) *
              C153907 +
          ((C2908 * C2818 + (C2902 + C2901 + C2900) * C2819 +
            (C2903 + C2904 + C2905) * C153874) *
               C153626 * C153527 * C153837 -
           ((C2825 * C1315 + C3763 + C3763 + C153887 * C1325 + C2823 * C334 +
             C3764 + C3764 + C153913 * C358 + C2821 * C325 + C3765 + C3765 +
             C153925 * C349) *
                C153874 +
            (C3775 + C3774 + C3773) * C2819 + C3766 * C2818) *
               C153626 * C153527 * C153563) *
              C752)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153608 * C152) * C122 + C193 * C123 +
            C194 * C124 + C195 * C125 + C196 * C126) *
               C153626 * C153527 * C153837 -
           (C406 * C126 + C407 * C125 + C408 * C124 + C409 * C123 +
            (C134 * C329 + C374 + C374 + C153608 * C353) * C122) *
               C153626 * C153527 * C153563) *
              C153906 +
          ((C409 * C122 + C408 * C123 + C407 * C124 + C406 * C125 +
            C762 * C126) *
               C153626 * C153527 * C153563 -
           (C197 * C126 + C196 * C125 + C195 * C124 + C194 * C123 +
            C193 * C122) *
               C153626 * C153527 * C153837) *
              C153907 +
          ((C194 * C122 + C195 * C123 + C196 * C124 + C197 * C125 +
            C198 * C126) *
               C153626 * C153527 * C153837 -
           ((C134 * C753 + C759 + C759 + C153608 * C755) * C126 + C762 * C125 +
            C406 * C124 + C407 * C123 + C408 * C122) *
               C153626 * C153527 * C153563) *
              C752)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C2818 +
             C193 * C2819 + C194 * C153874) *
                C153926 +
            (C7742 + C7688 + C7689) * C153915 + C7751 * C153890) *
               C153527 * C153837 -
           ((C7450 * C153874 + C7451 * C2819 +
             (C134 * C1461 + C1477 + C1477 + C153608 * C1471) * C2818) *
                C153890 +
            (C1099 * C153874 + C1098 * C2819 +
             (C134 * C1057 + C1076 + C1076 + C153608 * C1069) * C2818) *
                C153915 +
            (C408 * C153874 + C409 * C2819 +
             (C134 * C329 + C374 + C374 + C153608 * C353) * C2818) *
                C153926) *
               C153527 * C153563) *
              C153906 +
          (((C409 * C2818 + C408 * C2819 + C407 * C153874) * C153926 +
            (C1098 * C2818 + C1099 * C2819 + C1100 * C153874) * C153915 +
            (C7451 * C2818 + C7450 * C2819 + C7974 * C153874) * C153890) *
               C153527 * C153563 -
           (C7733 * C153890 + (C7709 + C7708 + C7707) * C153915 +
            (C195 * C153874 + C194 * C2819 + C193 * C2818) * C153926) *
               C153527 * C153837) *
              C153907 +
          (((C194 * C2818 + C195 * C2819 + C196 * C153874) * C153926 +
            (C621 * C2818 + C620 * C2819 + C619 * C153874) * C153915 +
            (C624 * C2818 + C625 * C2819 + C626 * C153874) * C153890) *
               C153527 * C153837 -
           (((C134 * C1457 + C1473 + C1473 + C153608 * C1467) * C153874 +
             C7974 * C2819 + C7450 * C2818) *
                C153890 +
            (C1101 * C153874 + C1100 * C2819 + C1099 * C2818) * C153915 +
            (C406 * C153874 + C407 * C2819 + C408 * C2818) * C153926) *
               C153527 * C153563) *
              C752)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
             C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 + C24119 +
             C153887 * C354) *
                C153922 +
            (C24183 + C24184 + C24185) * C153903 + C24197 * C153874) *
               C153626 * C153527 * C153837 -
           (C25031 * C153874 + (C24492 + C24493 + C24494) * C153903 +
            (C24114 * C1319 + C24435 + C24435 + C153887 * C1329 +
             C24112 * C330 + C24436 + C24436 + C24105 * C354 + C24110 * C329 +
             C24437 + C24437 + C24104 * C353) *
                C153922) *
               C153626 * C153527 * C153563) *
              C153906 +
          (((C24494 + C24493 + C24492) * C153922 +
            (C24491 + C24490 + C24489) * C153903 +
            (C25038 + C25039 + C25040) * C153874) *
               C153626 * C153527 * C153563 -
           (C24198 * C153874 + (C24188 + C24187 + C24186) * C153903 +
            (C24185 + C24184 + C24183) * C153922) *
               C153626 * C153527 * C153837) *
              C153907 +
          ((C24197 * C153922 + (C24191 + C24190 + C24189) * C153903 +
            (C24192 + C24193 + C24194) * C153874) *
               C153626 * C153527 * C153837 -
           ((C24114 * C1315 + C25028 + C25028 + C153887 * C1325 +
             C24112 * C334 + C25029 + C25029 + C24105 * C358 + C24110 * C325 +
             C25030 + C25030 + C24104 * C349) *
                C153874 +
            (C25040 + C25039 + C25038) * C153903 + C25031 * C153922) *
               C153626 * C153527 * C153563) *
              C752)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C28350 * C136 + C28361 + C28361 + C28344 * C152 + C28352 * C329 +
            C28362 + C28362 + C28345 * C353 + C28354 * C330 + C28363 + C28363 +
            C28346 * C354 + C28356 * C1319 + C28364 + C28364 + C28347 * C1329 +
            C28358 * C3127 + C28365 + C28365 + C28348 * C3135) *
               C153454 * C153626 * C153527 * C153837 -
           (C28358 * C4723 + C28509 + C28509 + C28348 * C4729 + C28356 * C3127 +
            C28510 + C28510 + C28347 * C3135 + C28354 * C1319 + C28511 +
            C28511 + C28346 * C1329 + C28352 * C330 + C28512 + C28512 +
            C28345 * C354 + C28350 * C329 + C28513 + C28513 + C28344 * C353) *
               C153454 * C153626 * C153527 * C153563) *
              C153906 +
          ((C28350 * C328 + C28519 + C28519 + C28344 * C352 + C28352 * C331 +
            C28520 + C28520 + C28345 * C355 + C28354 * C1318 + C28521 + C28521 +
            C28346 * C1328 + C28356 * C3128 + C28522 + C28522 + C28347 * C3136 +
            C28358 * C4722 + C28523 + C28523 + C28348 * C4728) *
               C153454 * C153626 * C153527 * C153563 -
           (C28358 * C3128 + C28366 + C28366 + C28348 * C3136 + C28356 * C1318 +
            C28367 + C28367 + C28347 * C1328 + C28354 * C331 + C28368 + C28368 +
            C28346 * C355 + C28352 * C328 + C28369 + C28369 + C28345 * C352 +
            C28350 * C137 + C28370 + C28370 + C28344 * C153) *
               C153454 * C153626 * C153527 * C153837) *
              C153907 +
          ((C28350 * C138 + C28371 + C28371 + C28344 * C154 + C28352 * C327 +
            C28372 + C28372 + C28345 * C351 + C28354 * C332 + C28373 + C28373 +
            C28346 * C356 + C28356 * C1317 + C28374 + C28374 + C28347 * C1327 +
            C28358 * C3129 + C28375 + C28375 + C28348 * C3137) *
               C153454 * C153626 * C153527 * C153837 -
           (C28358 * C4721 + C28799 + C28799 + C28348 * C4727 + C28356 * C3129 +
            C28800 + C28800 + C28347 * C3137 + C28354 * C1317 + C28801 +
            C28801 + C28346 * C1327 + C28352 * C332 + C28802 + C28802 +
            C28345 * C356 + C28350 * C327 + C28803 + C28803 + C28344 * C351) *
               C153454 * C153626 * C153527 * C153563) *
              C752)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
             C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 + C24119 +
             C153887 * C354) *
                C153454 * C153926 +
            (C31259 + C31260 + C31261) * C153454 * C153915 + C31273 * C153890) *
               C153527 * C153837 -
           ((C24114 * C4959 + C26208 + C26208 + C153887 * C4965 +
             C24112 * C3441 + C26209 + C26209 + C24105 * C3449 +
             C24110 * C1461 + C26210 + C26210 + C24104 * C1471) *
                C153454 * C153890 +
            (C24114 * C4303 + C25571 + C25571 + C153887 * C4311 +
             C24112 * C1892 + C25570 + C25570 + C24105 * C1902 +
             C24110 * C1057 + C25569 + C25569 + C24104 * C1069) *
                C153454 * C153915 +
            (C24114 * C1319 + C24435 + C24435 + C153887 * C1329 +
             C24112 * C330 + C24436 + C24436 + C24105 * C354 + C24110 * C329 +
             C24437 + C24437 + C24104 * C353) *
                C153454 * C153926) *
               C153527 * C153563) *
              C153906 +
          (((C24494 + C24493 + C24492) * C153454 * C153926 +
            (C25605 + C25606 + C25607) * C153454 * C153915 +
            (C24110 * C1460 + C26207 + C26207 + C24104 * C1470 +
             C24112 * C3442 + C26206 + C26206 + C24105 * C3450 +
             C24114 * C4958 + C26205 + C26205 + C153887 * C4964) *
                C153454 * C153890) *
               C153527 * C153563 -
           (C31258 * C153890 + (C24794 + C24795 + C24796) * C153454 * C153915 +
            (C24185 + C24184 + C24183) * C153454 * C153926) *
               C153527 * C153837) *
              C153907 +
          ((C24197 * C153454 * C153926 +
            (C24793 + C24792 + C24791) * C153454 * C153915 +
            (C24800 + C24801 + C24802) * C153454 * C153890) *
               C153527 * C153837 -
           ((C24114 * C4957 + C26202 + C26202 + C153887 * C4963 +
             C24112 * C3443 + C26203 + C26203 + C24105 * C3451 +
             C24110 * C1459 + C26204 + C26204 + C24104 * C1469) *
                C153454 * C153890 +
            (C25610 + C25609 + C25608) * C153454 * C153915 +
            C25031 * C153454 * C153926) *
               C153527 * C153563) *
              C752)) /
            (p * q * std::sqrt(p + q));
    d2ee[331] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
              C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
              C153887 * C354) *
                 C2818 +
             (C2894 + C2895 + C2896) * C2819 + C2908 * C153874) *
                C153626 * C153838 -
            (C4004 * C153874 + (C3529 + C3530 + C3531) * C2819 +
             (C2825 * C1892 + C3472 + C3472 + C153887 * C1902 + C2823 * C1057 +
              C3473 + C3473 + C153913 * C1069 + C2821 * C542 + C3474 + C3474 +
              C153925 * C566) *
                 C2818) *
                C153626 * C153591) *
               C153837 +
           (((C2821 * C1057 + C4316 + C4316 + C153925 * C1069 + C2823 * C1892 +
              C4317 + C4317 + C153913 * C1902 + C2825 * C4303 + C4318 + C4318 +
              C153887 * C4311) *
                 C2818 +
             (C4352 + C4353 + C4354) * C2819 +
             (C4355 + C4356 + C4357) * C153874) *
                C153626 * C153591 -
            (C3766 * C153874 + (C3215 + C3216 + C3217) * C2819 +
             (C2825 * C1319 + C3158 + C3158 + C153887 * C1329 + C2823 * C330 +
              C3159 + C3159 + C153913 * C354 + C2821 * C329 + C3160 + C3160 +
              C153925 * C353) *
                 C2818) *
                C153626 * C153838) *
               C153563) *
              C323 +
          ((((C3531 + C3530 + C3529) * C2818 + (C3528 + C3527 + C3526) * C2819 +
             (C4011 + C4012 + C4013) * C153874) *
                C153626 * C153591 -
            (C2909 * C153874 + (C2899 + C2898 + C2897) * C2819 +
             (C2896 + C2895 + C2894) * C2818) *
                C153626 * C153838) *
               C153837 +
           (((C3217 + C3216 + C3215) * C2818 + (C3214 + C3213 + C3212) * C2819 +
             (C3773 + C3774 + C3775) * C153874) *
                C153626 * C153838 -
            ((C2825 * C4306 + C4337 + C4337 + C153887 * C4314 + C2823 * C1889 +
              C4338 + C4338 + C153913 * C1899 + C2821 * C1060 + C4339 + C4339 +
              C153925 * C1072) *
                 C153874 +
             (C4357 + C4356 + C4355) * C2819 +
             (C4354 + C4353 + C4352) * C2818) *
                C153626 * C153591) *
               C153563) *
              C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C122 + C193 * C123 +
             C194 * C124 + C195 * C125 + C196 * C126) *
                C153626 * C153838 -
            (C619 * C126 + C620 * C125 + C621 * C124 + C622 * C123 +
             (C134 * C542 + C587 + C587 + C153608 * C566) * C122) *
                C153626 * C153591) *
               C153837 +
           (((C134 * C1057 + C1076 + C1076 + C153608 * C1069) * C122 +
             C1098 * C123 + C1099 * C124 + C1100 * C125 + C1101 * C126) *
                C153626 * C153591 -
            (C406 * C126 + C407 * C125 + C408 * C124 + C409 * C123 +
             (C134 * C329 + C374 + C374 + C153608 * C353) * C122) *
                C153626 * C153838) *
               C153563) *
              C323 +
          (((C622 * C122 + C621 * C123 + C620 * C124 + C619 * C125 +
             C895 * C126) *
                C153626 * C153591 -
            (C197 * C126 + C196 * C125 + C195 * C124 + C194 * C123 +
             C193 * C122) *
                C153626 * C153838) *
               C153837 +
           ((C409 * C122 + C408 * C123 + C407 * C124 + C406 * C125 +
             C762 * C126) *
                C153626 * C153838 -
            ((C134 * C1062 + C1089 + C1089 + C153608 * C1074) * C126 +
             C1101 * C125 + C1100 * C124 + C1099 * C123 + C1098 * C122) *
                C153626 * C153591) *
               C153563) *
              C153498)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C153608 * C152) * C2818 +
              C193 * C2819 + C194 * C153874) *
                 C153926 +
             (C7742 + C7688 + C7689) * C153915 + C7751 * C153890) *
                C153838 -
            ((C7744 + C7745 + C7746) * C153890 +
             (C7693 + C7692 + C7743) * C153915 +
             (C7689 + C7688 + C7742) * C153926) *
                C153591) *
               C153837 +
           (((C8526 + C8494 + C8495) * C153926 +
             (C8527 + C8498 + C8499) * C153915 +
             ((C134 * C6306 + C8500 + C8500 + C153608 * C6318) * C2818 +
              C8524 * C2819 + C8525 * C153874) *
                 C153890) *
                C153591 -
            ((C8499 + C8498 + C8527) * C153890 +
             (C8495 + C8494 + C8526) * C153915 +
             (C408 * C153874 + C409 * C2819 +
              (C134 * C329 + C374 + C374 + C153608 * C353) * C2818) *
                 C153926) *
                C153838) *
               C153563) *
              C323 +
          ((((C7707 + C7708 + C7709) * C153926 +
             (C7710 + C7711 + C7712) * C153915 +
             (C7747 + C7748 + C7749) * C153890) *
                C153591 -
            (C7733 * C153890 + (C7709 + C7708 + C7707) * C153915 +
             (C195 * C153874 + C194 * C2819 + C193 * C2818) * C153926) *
                C153838) *
               C153837 +
           (((C409 * C2818 + C408 * C2819 + C407 * C153874) * C153926 +
             (C8507 + C8508 + C8509) * C153915 +
             (C8510 + C8511 + C8512) * C153890) *
                C153838 -
            (((C134 * C8488 + C8513 + C8513 + C153608 * C8490) * C153874 +
              C8525 * C2819 + C8524 * C2818) *
                 C153890 +
             (C8512 + C8511 + C8510) * C153915 +
             (C8509 + C8508 + C8507) * C153926) *
                C153591) *
               C153563) *
              C153498)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
              C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 +
              C24119 + C153887 * C354) *
                 C153922 +
             (C24183 + C24184 + C24185) * C153903 + C24197 * C153874) *
                C153626 * C153838 -
            (C25269 * C153874 + (C24794 + C24795 + C24796) * C153903 +
             (C24114 * C1892 + C24737 + C24737 + C153887 * C1902 +
              C24112 * C1057 + C24738 + C24738 + C24105 * C1069 +
              C24110 * C542 + C24739 + C24739 + C24104 * C566) *
                 C153922) *
                C153626 * C153591) *
               C153837 +
           (((C24110 * C1057 + C25569 + C25569 + C24104 * C1069 +
              C24112 * C1892 + C25570 + C25570 + C24105 * C1902 +
              C24114 * C4303 + C25571 + C25571 + C153887 * C4311) *
                 C153922 +
             (C25605 + C25606 + C25607) * C153903 +
             (C25608 + C25609 + C25610) * C153874) *
                C153626 * C153591 -
            (C25031 * C153874 + (C24492 + C24493 + C24494) * C153903 +
             (C24114 * C1319 + C24435 + C24435 + C153887 * C1329 +
              C24112 * C330 + C24436 + C24436 + C24105 * C354 + C24110 * C329 +
              C24437 + C24437 + C24104 * C353) *
                 C153922) *
                C153626 * C153838) *
               C153563) *
              C323 +
          ((((C24796 + C24795 + C24794) * C153922 +
             (C24793 + C24792 + C24791) * C153903 +
             (C25276 + C25277 + C25278) * C153874) *
                C153626 * C153591 -
            (C24198 * C153874 + (C24188 + C24187 + C24186) * C153903 +
             (C24185 + C24184 + C24183) * C153922) *
                C153626 * C153838) *
               C153837 +
           (((C24494 + C24493 + C24492) * C153922 +
             (C24491 + C24490 + C24489) * C153903 +
             (C25038 + C25039 + C25040) * C153874) *
                C153626 * C153838 -
            ((C24114 * C4306 + C25590 + C25590 + C153887 * C4314 +
              C24112 * C1889 + C25591 + C25591 + C24105 * C1899 +
              C24110 * C1060 + C25592 + C25592 + C24104 * C1072) *
                 C153874 +
             (C25610 + C25609 + C25608) * C153903 +
             (C25607 + C25606 + C25605) * C153922) *
                C153626 * C153591) *
               C153563) *
              C153498)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C28350 * C136 + C28361 + C28361 + C28344 * C152 + C28352 * C329 +
             C28362 + C28362 + C28345 * C353 + C28354 * C330 + C28363 + C28363 +
             C28346 * C354 + C28356 * C1319 + C28364 + C28364 + C28347 * C1329 +
             C28358 * C3127 + C28365 + C28365 + C28348 * C3135) *
                C153454 * C153626 * C153838 -
            (C28358 * C5703 + C28657 + C28657 + C28348 * C5709 +
             C28356 * C4303 + C28658 + C28658 + C28347 * C4311 +
             C28354 * C1892 + C28659 + C28659 + C28346 * C1902 +
             C28352 * C1057 + C28660 + C28660 + C28345 * C1069 + C28350 * C542 +
             C28661 + C28661 + C28344 * C566) *
                C153454 * C153626 * C153591) *
               C153837 +
           ((C28350 * C1057 + C29099 + C29099 + C28344 * C1069 +
             C28352 * C1892 + C29100 + C29100 + C28345 * C1902 +
             C28354 * C4303 + C29101 + C29101 + C28346 * C4311 +
             C28356 * C5703 + C29102 + C29102 + C28347 * C5709 +
             C28358 * C29092 + C29103 + C29103 + C28348 * C29096) *
                C153454 * C153626 * C153591 -
            (C28358 * C4723 + C28509 + C28509 + C28348 * C4729 +
             C28356 * C3127 + C28510 + C28510 + C28347 * C3135 +
             C28354 * C1319 + C28511 + C28511 + C28346 * C1329 + C28352 * C330 +
             C28512 + C28512 + C28345 * C354 + C28350 * C329 + C28513 + C28513 +
             C28344 * C353) *
                C153454 * C153626 * C153838) *
               C153563) *
              C323 +
          (((C28350 * C541 + C28667 + C28667 + C28344 * C565 + C28352 * C1058 +
             C28668 + C28668 + C28345 * C1070 + C28354 * C1891 + C28669 +
             C28669 + C28346 * C1901 + C28356 * C4304 + C28670 + C28670 +
             C28347 * C4312 + C28358 * C5702 + C28671 + C28671 +
             C28348 * C5708) *
                C153454 * C153626 * C153591 -
            (C28358 * C3128 + C28366 + C28366 + C28348 * C3136 +
             C28356 * C1318 + C28367 + C28367 + C28347 * C1328 + C28354 * C331 +
             C28368 + C28368 + C28346 * C355 + C28352 * C328 + C28369 + C28369 +
             C28345 * C352 + C28350 * C137 + C28370 + C28370 + C28344 * C153) *
                C153454 * C153626 * C153838) *
               C153837 +
           ((C28350 * C328 + C28519 + C28519 + C28344 * C352 + C28352 * C331 +
             C28520 + C28520 + C28345 * C355 + C28354 * C1318 + C28521 +
             C28521 + C28346 * C1328 + C28356 * C3128 + C28522 + C28522 +
             C28347 * C3136 + C28358 * C4722 + C28523 + C28523 +
             C28348 * C4728) *
                C153454 * C153626 * C153838 -
            (C28358 * C29093 + C29104 + C29104 + C28348 * C29097 +
             C28356 * C5702 + C29105 + C29105 + C28347 * C5708 +
             C28354 * C4304 + C29106 + C29106 + C28346 * C4312 +
             C28352 * C1891 + C29107 + C29107 + C28345 * C1901 +
             C28350 * C1058 + C29108 + C29108 + C28344 * C1070) *
                C153454 * C153626 * C153591) *
               C153563) *
              C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
              C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 +
              C24119 + C153887 * C354) *
                 C153454 * C153926 +
             (C31259 + C31260 + C31261) * C153454 * C153915 +
             C31273 * C153890) *
                C153838 -
            ((C31265 + C31266 + C31267) * C153454 * C153890 +
             (C31264 + C31263 + C31262) * C153454 * C153915 +
             (C31261 + C31260 + C31259) * C153454 * C153926) *
                C153591) *
               C153837 +
           (((C32045 + C32046 + C32047) * C153454 * C153926 +
             (C32048 + C32049 + C32050) * C153454 * C153915 +
             (C24110 * C6306 + C32015 + C32015 + C24104 * C6318 +
              C24112 * C6305 + C32016 + C32016 + C24105 * C6317 +
              C24114 * C30191 + C32017 + C32017 + C153887 * C30195) *
                 C153454 * C153890) *
                C153591 -
            ((C32050 + C32049 + C32048) * C153454 * C153890 +
             (C32047 + C32046 + C32045) * C153454 * C153915 +
             (C24114 * C1319 + C24435 + C24435 + C153887 * C1329 +
              C24112 * C330 + C24436 + C24436 + C24105 * C354 + C24110 * C329 +
              C24437 + C24437 + C24104 * C353) *
                 C153454 * C153926) *
                C153838) *
               C153563) *
              C323 +
          ((((C24796 + C24795 + C24794) * C153454 * C153926 +
             (C24797 + C24798 + C24799) * C153454 * C153915 +
             (C31268 + C31269 + C31270) * C153454 * C153890) *
                C153591 -
            (C31258 * C153890 + (C24794 + C24795 + C24796) * C153454 * C153915 +
             (C24185 + C24184 + C24183) * C153454 * C153926) *
                C153838) *
               C153837 +
           (((C24494 + C24493 + C24492) * C153454 * C153926 +
             (C25605 + C25606 + C25607) * C153454 * C153915 +
             (C32051 + C32052 + C32053) * C153454 * C153890) *
                C153838 -
            ((C24114 * C31999 + C32024 + C32024 + C153887 * C32001 +
              C24112 * C6303 + C32025 + C32025 + C24105 * C6315 +
              C24110 * C6304 + C32026 + C32026 + C24104 * C6316) *
                 C153454 * C153890 +
             (C32053 + C32052 + C32051) * C153454 * C153915 +
             (C25607 + C25606 + C25605) * C153454 * C153926) *
                C153591) *
               C153563) *
              C153498)) /
            (p * q * std::sqrt(p + q));
    d2ee[332] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             (((C134 * C136 + C161 + C161 + C153608 * C152) * C122 +
               C193 * C123 + C194 * C124 + C195 * C125 + C196 * C126) *
                  C153626 * C153527 * C153511 * C130 -
              (C197 * C126 + C196 * C125 + C195 * C124 + C194 * C123 +
               C193 * C122) *
                  C153626 * C153527 * C153511 * C131 +
              (C194 * C122 + C195 * C123 + C196 * C124 + C197 * C125 +
               C198 * C126) *
                  C153626 * C153527 * C153511 * C132 -
              ((C134 * C143 + C180 + C180 + C153608 * C159) * C126 +
               C198 * C125 + C197 * C124 + C196 * C123 + C195 * C122) *
                  C153626 * C153527 * C153511 * C133) +
         std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C136 + C161 + C161 + C153608 * C152) * C122 +
                C193 * C123 + C194 * C124 + C195 * C125 + C196 * C126) *
                   C153626 * C153527 * C320 -
               (C406 * C126 + C407 * C125 + C408 * C124 + C409 * C123 +
                (C134 * C329 + C374 + C374 + C153608 * C353) * C122) *
                   C153626 * C153527 * C321 +
               ((C134 * C330 + C375 + C375 + C153608 * C354) * C122 +
                C410 * C123 + C411 * C124 + C412 * C125 + C413 * C126) *
                   C153626 * C153527 * C322) *
                  C323 +
              ((C409 * C122 + C408 * C123 + C407 * C124 + C406 * C125 +
                (C134 * C335 + C388 + C388 + C153608 * C359) * C126) *
                   C153626 * C153527 * C321 -
               (C197 * C126 + C196 * C125 + C195 * C124 + C194 * C123 +
                C193 * C122) *
                   C153626 * C153527 * C320 -
               ((C134 * C336 + C389 + C389 + C153608 * C360) * C126 +
                C413 * C125 + C412 * C124 + C411 * C123 + C410 * C122) *
                   C153626 * C153527 * C322) *
                  C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153608 * C152) * C122 + C193 * C123 +
            C194 * C124 + C195 * C125 + C196 * C126) *
               C153626 * C535 -
           (C619 * C126 + C620 * C125 + C621 * C124 + C622 * C123 +
            (C134 * C542 + C587 + C587 + C153608 * C566) * C122) *
               C153626 * C536 +
           ((C134 * C543 + C588 + C588 + C153608 * C567) * C122 + C623 * C123 +
            C624 * C124 + C625 * C125 + C626 * C126) *
               C153626 * C537) *
              C153511 * C323 +
          ((C622 * C122 + C621 * C123 + C620 * C124 + C619 * C125 +
            (C134 * C548 + C601 + C601 + C153608 * C572) * C126) *
               C153626 * C536 -
           (C197 * C126 + C196 * C125 + C195 * C124 + C194 * C123 +
            C193 * C122) *
               C153626 * C535 -
           ((C134 * C549 + C602 + C602 + C153608 * C573) * C126 + C626 * C125 +
            C625 * C124 + C624 * C123 + C623 * C122) *
               C153626 * C537) *
              C153511 * C153498)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
            C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
            C153887 * C354) *
               C2818 +
           (C2894 + C2895 + C2896) * C2819 + C2908 * C153874) *
              C153626 * C153527 * C153511 * C130 -
          (C2909 * C153874 + (C2899 + C2898 + C2897) * C2819 +
           (C2896 + C2895 + C2894) * C2818) *
              C153626 * C153527 * C153511 * C131 +
          (C2908 * C2818 + (C2902 + C2901 + C2900) * C2819 +
           (C2903 + C2904 + C2905) * C153874) *
              C153626 * C153527 * C153511 * C132 -
          ((C2825 * C336 + C2867 + C2867 + C153887 * C360 + C2823 * C335 +
            C2868 + C2868 + C153913 * C359 + C2821 * C141 + C2869 + C2869 +
            C153925 * C157) *
               C153874 +
           (C2905 + C2904 + C2903) * C2819 + C2909 * C2818) *
              C153626 * C153527 * C153511 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
             C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
             C153887 * C354) *
                C2818 +
            (C2894 + C2895 + C2896) * C2819 + C2908 * C153874) *
               C153626 * C153527 * C320 -
           ((C3212 + C3213 + C3214) * C153874 +
            (C3215 + C3216 + C3217) * C2819 +
            (C2825 * C1319 + C3158 + C3158 + C153887 * C1329 + C2823 * C330 +
             C3159 + C3159 + C153913 * C354 + C2821 * C329 + C3160 + C3160 +
             C153925 * C353) *
                C2818) *
               C153626 * C153527 * C321 +
           ((C2821 * C330 + C3161 + C3161 + C153925 * C354 + C2823 * C1319 +
             C3162 + C3162 + C153913 * C1329 + C2825 * C3127 + C3163 + C3163 +
             C153887 * C3135) *
                C2818 +
            (C3218 + C3219 + C3220) * C2819 +
            (C3221 + C3222 + C3223) * C153874) *
               C153626 * C153527 * C322) *
              C323 +
          (((C3217 + C3216 + C3215) * C2818 + (C3214 + C3213 + C3212) * C2819 +
            (C2821 * C326 + C3182 + C3182 + C153925 * C350 + C2823 * C333 +
             C3183 + C3183 + C153913 * C357 + C2825 * C1316 + C3184 + C3184 +
             C153887 * C1326) *
                C153874) *
               C153626 * C153527 * C321 -
           (C2909 * C153874 + (C2899 + C2898 + C2897) * C2819 +
            (C2896 + C2895 + C2894) * C2818) *
               C153626 * C153527 * C320 -
           ((C2825 * C3130 + C3185 + C3185 + C153887 * C3138 + C2823 * C1316 +
             C3186 + C3186 + C153913 * C1326 + C2821 * C333 + C3187 + C3187 +
             C153925 * C357) *
                C153874 +
            (C3223 + C3222 + C3221) * C2819 + (C3220 + C3219 + C3218) * C2818) *
               C153626 * C153527 * C322) *
              C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
             C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
             C153887 * C354) *
                C2818 +
            (C2894 + C2895 + C2896) * C2819 + C2908 * C153874) *
               C153626 * C535 -
           ((C3526 + C3527 + C3528) * C153874 +
            (C3529 + C3530 + C3531) * C2819 +
            (C2825 * C1892 + C3472 + C3472 + C153887 * C1902 + C2823 * C1057 +
             C3473 + C3473 + C153913 * C1069 + C2821 * C542 + C3474 + C3474 +
             C153925 * C566) *
                C2818) *
               C153626 * C536 +
           ((C2821 * C543 + C3475 + C3475 + C153925 * C567 + C2823 * C1461 +
             C3476 + C3476 + C153913 * C1471 + C2825 * C3441 + C3477 + C3477 +
             C153887 * C3449) *
                C2818 +
            (C3532 + C3533 + C3534) * C2819 +
            (C3535 + C3536 + C3537) * C153874) *
               C153626 * C537) *
              C153511 * C323 +
          (((C3531 + C3530 + C3529) * C2818 + (C3528 + C3527 + C3526) * C2819 +
            (C2821 * C539 + C3496 + C3496 + C153925 * C563 + C2823 * C1060 +
             C3497 + C3497 + C153913 * C1072 + C2825 * C1889 + C3498 + C3498 +
             C153887 * C1899) *
                C153874) *
               C153626 * C536 -
           (C2909 * C153874 + (C2899 + C2898 + C2897) * C2819 +
            (C2896 + C2895 + C2894) * C2818) *
               C153626 * C535 -
           ((C2825 * C3444 + C3499 + C3499 + C153887 * C3452 + C2823 * C1458 +
             C3500 + C3500 + C153913 * C1468 + C2821 * C546 + C3501 + C3501 +
             C153925 * C570) *
                C153874 +
            (C3537 + C3536 + C3535) * C2819 + (C3534 + C3533 + C3532) * C2818) *
               C153626 * C537) *
              C153511 * C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153608 * C152) * C2818 +
            C193 * C2819 + C194 * C153874) *
               C153926 +
           ((C134 * C542 + C587 + C587 + C153608 * C566) * C2818 +
            C622 * C2819 + C621 * C153874) *
               C153915 +
           ((C134 * C543 + C588 + C588 + C153608 * C567) * C2818 +
            C623 * C2819 + C624 * C153874) *
               C153890) *
              C153527 * C153511 * C130 -
          ((C625 * C153874 + C624 * C2819 + C623 * C2818) * C153890 +
           (C620 * C153874 + C621 * C2819 + C622 * C2818) * C153915 +
           (C195 * C153874 + C194 * C2819 + C193 * C2818) * C153926) *
              C153527 * C153511 * C131 +
          ((C194 * C2818 + C195 * C2819 + C196 * C153874) * C153926 +
           (C621 * C2818 + C620 * C2819 + C619 * C153874) * C153915 +
           (C624 * C2818 + C625 * C2819 + C626 * C153874) * C153890) *
              C153527 * C153511 * C132 -
          (((C134 * C549 + C602 + C602 + C153608 * C573) * C153874 +
            C626 * C2819 + C625 * C2818) *
               C153890 +
           (C895 * C153874 + C619 * C2819 + C620 * C2818) * C153915 +
           (C197 * C153874 + C196 * C2819 + C195 * C2818) * C153926) *
              C153527 * C153511 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C2818 +
             C193 * C2819 + C194 * C153874) *
                C153926 +
            ((C134 * C542 + C587 + C587 + C153608 * C566) * C2818 +
             C622 * C2819 + C621 * C153874) *
                C153915 +
            ((C134 * C543 + C588 + C588 + C153608 * C567) * C2818 +
             C623 * C2819 + C624 * C153874) *
                C153890) *
               C153527 * C320 -
           ((C7450 * C153874 + C7451 * C2819 +
             (C134 * C1461 + C1477 + C1477 + C153608 * C1471) * C2818) *
                C153890 +
            (C1099 * C153874 + C1098 * C2819 +
             (C134 * C1057 + C1076 + C1076 + C153608 * C1069) * C2818) *
                C153915 +
            (C408 * C153874 + C409 * C2819 +
             (C134 * C329 + C374 + C374 + C153608 * C353) * C2818) *
                C153926) *
               C153527 * C321 +
           (((C134 * C330 + C375 + C375 + C153608 * C354) * C2818 +
             C410 * C2819 + C411 * C153874) *
                C153926 +
            ((C134 * C1892 + C1908 + C1908 + C153608 * C1902) * C2818 +
             C7452 * C2819 + C7453 * C153874) *
                C153915 +
            ((C134 * C3441 + C7430 + C7430 + C153608 * C3449) * C2818 +
             C7454 * C2819 + C7455 * C153874) *
                C153890) *
               C153527 * C322) *
              C323 +
          (((C409 * C2818 + C408 * C2819 + C407 * C153874) * C153926 +
            (C1098 * C2818 + C1099 * C2819 + C1100 * C153874) * C153915 +
            (C7451 * C2818 + C7450 * C2819 +
             (C134 * C1458 + C1474 + C1474 + C153608 * C1468) * C153874) *
                C153890) *
               C153527 * C321 -
           ((C625 * C153874 + C624 * C2819 + C623 * C2818) * C153890 +
            (C620 * C153874 + C621 * C2819 + C622 * C2818) * C153915 +
            (C195 * C153874 + C194 * C2819 + C193 * C2818) * C153926) *
               C153527 * C320 -
           (((C134 * C3444 + C7437 + C7437 + C153608 * C3452) * C153874 +
             C7455 * C2819 + C7454 * C2818) *
                C153890 +
            ((C134 * C1889 + C1905 + C1905 + C153608 * C1899) * C153874 +
             C7453 * C2819 + C7452 * C2818) *
                C153915 +
            (C412 * C153874 + C411 * C2819 + C410 * C2818) * C153926) *
               C153527 * C322) *
              C153498)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C2818 +
             C193 * C2819 + C194 * C153874) *
                C153926 +
            (C7742 + C7688 + C7689) * C153915 + C7751 * C153890) *
               C535 -
           ((C7744 + C7745 + C7746) * C153890 +
            (C7693 + C7692 + C7743) * C153915 +
            (C7689 + C7688 + C7742) * C153926) *
               C536 +
           (C7751 * C153926 + (C7746 + C7745 + C7744) * C153915 +
            ((C134 * C7673 + C7700 + C7700 + C153608 * C7681) * C2818 +
             C7739 * C2819 + C7740 * C153874) *
                C153890) *
               C537) *
              C153511 * C323 +
          (((C7707 + C7708 + C7709) * C153926 +
            (C7710 + C7711 + C7712) * C153915 +
            (C7747 + C7748 + C7749) * C153890) *
               C536 -
           (C7733 * C153890 + (C7709 + C7708 + C7707) * C153915 +
            (C195 * C153874 + C194 * C2819 + C193 * C2818) * C153926) *
               C535 -
           (((C134 * C7676 + C7715 + C7715 + C153608 * C7684) * C153874 +
             C7740 * C2819 + C7739 * C2818) *
                C153890 +
            (C7749 + C7748 + C7747) * C153915 + C7733 * C153926) *
               C537) *
              C153511 * C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
            C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 + C24119 +
            C153887 * C354) *
               C153922 +
           (C24183 + C24184 + C24185) * C153903 + C24197 * C153874) *
              C153626 * C153527 * C153511 * C130 -
          (C24198 * C153874 + (C24188 + C24187 + C24186) * C153903 +
           (C24185 + C24184 + C24183) * C153922) *
              C153626 * C153527 * C153511 * C131 +
          (C24197 * C153922 + (C24191 + C24190 + C24189) * C153903 +
           (C24192 + C24193 + C24194) * C153874) *
              C153626 * C153527 * C153511 * C132 -
          ((C24114 * C336 + C24156 + C24156 + C153887 * C360 + C24112 * C335 +
            C24157 + C24157 + C24105 * C359 + C24110 * C141 + C24158 + C24158 +
            C24104 * C157) *
               C153874 +
           (C24194 + C24193 + C24192) * C153903 + C24198 * C153922) *
              C153626 * C153527 * C153511 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
             C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 + C24119 +
             C153887 * C354) *
                C153922 +
            (C24183 + C24184 + C24185) * C153903 + C24197 * C153874) *
               C153626 * C153527 * C320 -
           ((C24489 + C24490 + C24491) * C153874 +
            (C24492 + C24493 + C24494) * C153903 +
            (C24114 * C1319 + C24435 + C24435 + C153887 * C1329 +
             C24112 * C330 + C24436 + C24436 + C24105 * C354 + C24110 * C329 +
             C24437 + C24437 + C24104 * C353) *
                C153922) *
               C153626 * C153527 * C321 +
           ((C24110 * C330 + C24438 + C24438 + C24104 * C354 + C24112 * C1319 +
             C24439 + C24439 + C24105 * C1329 + C24114 * C3127 + C24440 +
             C24440 + C153887 * C3135) *
                C153922 +
            (C24495 + C24496 + C24497) * C153903 +
            (C24498 + C24499 + C24500) * C153874) *
               C153626 * C153527 * C322) *
              C323 +
          (((C24494 + C24493 + C24492) * C153922 +
            (C24491 + C24490 + C24489) * C153903 +
            (C24110 * C326 + C24459 + C24459 + C24104 * C350 + C24112 * C333 +
             C24460 + C24460 + C24105 * C357 + C24114 * C1316 + C24461 +
             C24461 + C153887 * C1326) *
                C153874) *
               C153626 * C153527 * C321 -
           (C24198 * C153874 + (C24188 + C24187 + C24186) * C153903 +
            (C24185 + C24184 + C24183) * C153922) *
               C153626 * C153527 * C320 -
           ((C24114 * C3130 + C24462 + C24462 + C153887 * C3138 +
             C24112 * C1316 + C24463 + C24463 + C24105 * C1326 + C24110 * C333 +
             C24464 + C24464 + C24104 * C357) *
                C153874 +
            (C24500 + C24499 + C24498) * C153903 +
            (C24497 + C24496 + C24495) * C153922) *
               C153626 * C153527 * C322) *
              C153498)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
             C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 + C24119 +
             C153887 * C354) *
                C153922 +
            (C24183 + C24184 + C24185) * C153903 + C24197 * C153874) *
               C153626 * C535 -
           ((C24791 + C24792 + C24793) * C153874 +
            (C24794 + C24795 + C24796) * C153903 +
            (C24114 * C1892 + C24737 + C24737 + C153887 * C1902 +
             C24112 * C1057 + C24738 + C24738 + C24105 * C1069 + C24110 * C542 +
             C24739 + C24739 + C24104 * C566) *
                C153922) *
               C153626 * C536 +
           ((C24110 * C543 + C24740 + C24740 + C24104 * C567 + C24112 * C1461 +
             C24741 + C24741 + C24105 * C1471 + C24114 * C3441 + C24742 +
             C24742 + C153887 * C3449) *
                C153922 +
            (C24797 + C24798 + C24799) * C153903 +
            (C24800 + C24801 + C24802) * C153874) *
               C153626 * C537) *
              C153511 * C323 +
          (((C24796 + C24795 + C24794) * C153922 +
            (C24793 + C24792 + C24791) * C153903 +
            (C24110 * C539 + C24761 + C24761 + C24104 * C563 + C24112 * C1060 +
             C24762 + C24762 + C24105 * C1072 + C24114 * C1889 + C24763 +
             C24763 + C153887 * C1899) *
                C153874) *
               C153626 * C536 -
           (C24198 * C153874 + (C24188 + C24187 + C24186) * C153903 +
            (C24185 + C24184 + C24183) * C153922) *
               C153626 * C535 -
           ((C24114 * C3444 + C24764 + C24764 + C153887 * C3452 +
             C24112 * C1458 + C24765 + C24765 + C24105 * C1468 + C24110 * C546 +
             C24766 + C24766 + C24104 * C570) *
                C153874 +
            (C24802 + C24801 + C24800) * C153903 +
            (C24799 + C24798 + C24797) * C153922) *
               C153626 * C537) *
              C153511 * C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((C28350 * C136 + C28361 + C28361 + C28344 * C152 + C28352 * C329 +
           C28362 + C28362 + C28345 * C353 + C28354 * C330 + C28363 + C28363 +
           C28346 * C354 + C28356 * C1319 + C28364 + C28364 + C28347 * C1329 +
           C28358 * C3127 + C28365 + C28365 + C28348 * C3135) *
              C153454 * C153626 * C153527 * C153511 * C130 -
          (C28358 * C3128 + C28366 + C28366 + C28348 * C3136 + C28356 * C1318 +
           C28367 + C28367 + C28347 * C1328 + C28354 * C331 + C28368 + C28368 +
           C28346 * C355 + C28352 * C328 + C28369 + C28369 + C28345 * C352 +
           C28350 * C137 + C28370 + C28370 + C28344 * C153) *
              C153454 * C153626 * C153527 * C153511 * C131 +
          (C28350 * C138 + C28371 + C28371 + C28344 * C154 + C28352 * C327 +
           C28372 + C28372 + C28345 * C351 + C28354 * C332 + C28373 + C28373 +
           C28346 * C356 + C28356 * C1317 + C28374 + C28374 + C28347 * C1327 +
           C28358 * C3129 + C28375 + C28375 + C28348 * C3137) *
              C153454 * C153626 * C153527 * C153511 * C132 -
          (C28358 * C3130 + C28376 + C28376 + C28348 * C3138 + C28356 * C1316 +
           C28377 + C28377 + C28347 * C1326 + C28354 * C333 + C28378 + C28378 +
           C28346 * C357 + C28352 * C326 + C28379 + C28379 + C28345 * C350 +
           C28350 * C139 + C28380 + C28380 + C28344 * C155) *
              C153454 * C153626 * C153527 * C153511 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C28350 * C136 + C28361 + C28361 + C28344 * C152 + C28352 * C329 +
            C28362 + C28362 + C28345 * C353 + C28354 * C330 + C28363 + C28363 +
            C28346 * C354 + C28356 * C1319 + C28364 + C28364 + C28347 * C1329 +
            C28358 * C3127 + C28365 + C28365 + C28348 * C3135) *
               C153454 * C153626 * C153527 * C320 -
           (C28358 * C4723 + C28509 + C28509 + C28348 * C4729 + C28356 * C3127 +
            C28510 + C28510 + C28347 * C3135 + C28354 * C1319 + C28511 +
            C28511 + C28346 * C1329 + C28352 * C330 + C28512 + C28512 +
            C28345 * C354 + C28350 * C329 + C28513 + C28513 + C28344 * C353) *
               C153454 * C153626 * C153527 * C321 +
           (C28350 * C330 + C28514 + C28514 + C28344 * C354 + C28352 * C1319 +
            C28515 + C28515 + C28345 * C1329 + C28354 * C3127 + C28516 +
            C28516 + C28346 * C3135 + C28356 * C4723 + C28517 + C28517 +
            C28347 * C4729 + C28358 * C28502 + C28518 + C28518 +
            C28348 * C28506) *
               C153454 * C153626 * C153527 * C322) *
              C323 +
          ((C28350 * C328 + C28519 + C28519 + C28344 * C352 + C28352 * C331 +
            C28520 + C28520 + C28345 * C355 + C28354 * C1318 + C28521 + C28521 +
            C28346 * C1328 + C28356 * C3128 + C28522 + C28522 + C28347 * C3136 +
            C28358 * C4722 + C28523 + C28523 + C28348 * C4728) *
               C153454 * C153626 * C153527 * C321 -
           (C28358 * C3128 + C28366 + C28366 + C28348 * C3136 + C28356 * C1318 +
            C28367 + C28367 + C28347 * C1328 + C28354 * C331 + C28368 + C28368 +
            C28346 * C355 + C28352 * C328 + C28369 + C28369 + C28345 * C352 +
            C28350 * C137 + C28370 + C28370 + C28344 * C153) *
               C153454 * C153626 * C153527 * C320 -
           (C28358 * C28503 + C28524 + C28524 + C28348 * C28507 +
            C28356 * C4722 + C28525 + C28525 + C28347 * C4728 + C28354 * C3128 +
            C28526 + C28526 + C28346 * C3136 + C28352 * C1318 + C28527 +
            C28527 + C28345 * C1328 + C28350 * C331 + C28528 + C28528 +
            C28344 * C355) *
               C153454 * C153626 * C153527 * C322) *
              C153498)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C28350 * C136 + C28361 + C28361 + C28344 * C152 + C28352 * C329 +
            C28362 + C28362 + C28345 * C353 + C28354 * C330 + C28363 + C28363 +
            C28346 * C354 + C28356 * C1319 + C28364 + C28364 + C28347 * C1329 +
            C28358 * C3127 + C28365 + C28365 + C28348 * C3135) *
               C153454 * C153626 * C535 -
           (C28358 * C5703 + C28657 + C28657 + C28348 * C5709 + C28356 * C4303 +
            C28658 + C28658 + C28347 * C4311 + C28354 * C1892 + C28659 +
            C28659 + C28346 * C1902 + C28352 * C1057 + C28660 + C28660 +
            C28345 * C1069 + C28350 * C542 + C28661 + C28661 + C28344 * C566) *
               C153454 * C153626 * C536 +
           (C28350 * C543 + C28662 + C28662 + C28344 * C567 + C28352 * C1461 +
            C28663 + C28663 + C28345 * C1471 + C28354 * C3441 + C28664 +
            C28664 + C28346 * C3449 + C28356 * C4959 + C28665 + C28665 +
            C28347 * C4965 + C28358 * C28650 + C28666 + C28666 +
            C28348 * C28654) *
               C153454 * C153626 * C537) *
              C153511 * C323 +
          ((C28350 * C541 + C28667 + C28667 + C28344 * C565 + C28352 * C1058 +
            C28668 + C28668 + C28345 * C1070 + C28354 * C1891 + C28669 +
            C28669 + C28346 * C1901 + C28356 * C4304 + C28670 + C28670 +
            C28347 * C4312 + C28358 * C5702 + C28671 + C28671 +
            C28348 * C5708) *
               C153454 * C153626 * C536 -
           (C28358 * C3128 + C28366 + C28366 + C28348 * C3136 + C28356 * C1318 +
            C28367 + C28367 + C28347 * C1328 + C28354 * C331 + C28368 + C28368 +
            C28346 * C355 + C28352 * C328 + C28369 + C28369 + C28345 * C352 +
            C28350 * C137 + C28370 + C28370 + C28344 * C153) *
               C153454 * C153626 * C535 -
           (C28358 * C28651 + C28672 + C28672 + C28348 * C28655 +
            C28356 * C4958 + C28673 + C28673 + C28347 * C4964 + C28354 * C3442 +
            C28674 + C28674 + C28346 * C3450 + C28352 * C1460 + C28675 +
            C28675 + C28345 * C1470 + C28350 * C544 + C28676 + C28676 +
            C28344 * C568) *
               C153454 * C153626 * C537) *
              C153511 * C153498)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
            C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 + C24119 +
            C153887 * C354) *
               C153454 * C153926 +
           (C24110 * C542 + C24739 + C24739 + C24104 * C566 + C24112 * C1057 +
            C24738 + C24738 + C24105 * C1069 + C24114 * C1892 + C24737 +
            C24737 + C153887 * C1902) *
               C153454 * C153915 +
           (C24110 * C543 + C24740 + C24740 + C24104 * C567 + C24112 * C1461 +
            C24741 + C24741 + C24105 * C1471 + C24114 * C3441 + C24742 +
            C24742 + C153887 * C3449) *
               C153454 * C153890) *
              C153527 * C153511 * C130 -
          ((C24799 + C24798 + C24797) * C153454 * C153890 +
           (C24794 + C24795 + C24796) * C153454 * C153915 +
           (C24185 + C24184 + C24183) * C153454 * C153926) *
              C153527 * C153511 * C131 +
          (C24197 * C153454 * C153926 +
           (C24793 + C24792 + C24791) * C153454 * C153915 +
           (C24800 + C24801 + C24802) * C153454 * C153890) *
              C153527 * C153511 * C132 -
          ((C24114 * C3444 + C24764 + C24764 + C153887 * C3452 +
            C24112 * C1458 + C24765 + C24765 + C24105 * C1468 + C24110 * C546 +
            C24766 + C24766 + C24104 * C570) *
               C153454 * C153890 +
           (C25278 + C25277 + C25276) * C153454 * C153915 +
           C24198 * C153454 * C153926) *
              C153527 * C153511 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
             C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 + C24119 +
             C153887 * C354) *
                C153454 * C153926 +
            (C24110 * C542 + C24739 + C24739 + C24104 * C566 + C24112 * C1057 +
             C24738 + C24738 + C24105 * C1069 + C24114 * C1892 + C24737 +
             C24737 + C153887 * C1902) *
                C153454 * C153915 +
            (C24110 * C543 + C24740 + C24740 + C24104 * C567 + C24112 * C1461 +
             C24741 + C24741 + C24105 * C1471 + C24114 * C3441 + C24742 +
             C24742 + C153887 * C3449) *
                C153454 * C153890) *
               C153527 * C320 -
           ((C24114 * C4959 + C26208 + C26208 + C153887 * C4965 +
             C24112 * C3441 + C26209 + C26209 + C24105 * C3449 +
             C24110 * C1461 + C26210 + C26210 + C24104 * C1471) *
                C153454 * C153890 +
            (C24114 * C4303 + C25571 + C25571 + C153887 * C4311 +
             C24112 * C1892 + C25570 + C25570 + C24105 * C1902 +
             C24110 * C1057 + C25569 + C25569 + C24104 * C1069) *
                C153454 * C153915 +
            (C24114 * C1319 + C24435 + C24435 + C153887 * C1329 +
             C24112 * C330 + C24436 + C24436 + C24105 * C354 + C24110 * C329 +
             C24437 + C24437 + C24104 * C353) *
                C153454 * C153926) *
               C153527 * C321 +
           ((C24110 * C330 + C24438 + C24438 + C24104 * C354 + C24112 * C1319 +
             C24439 + C24439 + C24105 * C1329 + C24114 * C3127 + C24440 +
             C24440 + C153887 * C3135) *
                C153454 * C153926 +
            (C24110 * C1892 + C26945 + C26945 + C24104 * C1902 +
             C24112 * C4303 + C26944 + C26944 + C24105 * C4311 +
             C24114 * C5703 + C26943 + C26943 + C153887 * C5709) *
                C153454 * C153915 +
            (C24110 * C3441 + C30972 + C30972 + C24104 * C3449 +
             C24112 * C4959 + C30973 + C30973 + C24105 * C4965 +
             C24114 * C28650 + C30974 + C30974 + C153887 * C28654) *
                C153454 * C153890) *
               C153527 * C322) *
              C323 +
          (((C24494 + C24493 + C24492) * C153454 * C153926 +
            (C25605 + C25606 + C25607) * C153454 * C153915 +
            (C24110 * C1460 + C26207 + C26207 + C24104 * C1470 +
             C24112 * C3442 + C26206 + C26206 + C24105 * C3450 +
             C24114 * C4958 + C26205 + C26205 + C153887 * C4964) *
                C153454 * C153890) *
               C153527 * C321 -
           ((C24799 + C24798 + C24797) * C153454 * C153890 +
            (C24794 + C24795 + C24796) * C153454 * C153915 +
            (C24185 + C24184 + C24183) * C153454 * C153926) *
               C153527 * C320 -
           ((C24114 * C28651 + C30975 + C30975 + C153887 * C28655 +
             C24112 * C4958 + C30976 + C30976 + C24105 * C4964 +
             C24110 * C3442 + C30977 + C30977 + C24104 * C3450) *
                C153454 * C153890 +
            (C24114 * C5702 + C26940 + C26940 + C153887 * C5708 +
             C24112 * C4304 + C26941 + C26941 + C24105 * C4312 +
             C24110 * C1891 + C26942 + C26942 + C24104 * C1901) *
                C153454 * C153915 +
            (C24497 + C24496 + C24495) * C153454 * C153926) *
               C153527 * C322) *
              C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
             C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 + C24119 +
             C153887 * C354) *
                C153454 * C153926 +
            (C31259 + C31260 + C31261) * C153454 * C153915 + C31273 * C153890) *
               C535 -
           ((C31265 + C31266 + C31267) * C153454 * C153890 +
            (C31264 + C31263 + C31262) * C153454 * C153915 +
            (C31261 + C31260 + C31259) * C153454 * C153926) *
               C536 +
           (C31273 * C153926 + (C31267 + C31266 + C31265) * C153454 * C153915 +
            (C24110 * C7673 + C31220 + C31220 + C24104 * C7681 +
             C24112 * C9117 + C31221 + C31221 + C24105 * C9123 +
             C24114 * C31195 + C31222 + C31222 + C153887 * C31199) *
                C153454 * C153890) *
               C537) *
              C153511 * C323 +
          (((C24796 + C24795 + C24794) * C153454 * C153926 +
            (C24797 + C24798 + C24799) * C153454 * C153915 +
            (C31268 + C31269 + C31270) * C153454 * C153890) *
               C536 -
           (C31258 * C153890 + (C24794 + C24795 + C24796) * C153454 * C153915 +
            (C24185 + C24184 + C24183) * C153454 * C153926) *
               C535 -
           ((C24114 * C31196 + C31230 + C31230 + C153887 * C31200 +
             C24112 * C9116 + C31231 + C31231 + C24105 * C9122 +
             C24110 * C7674 + C31232 + C31232 + C24104 * C7682) *
                C153454 * C153890 +
            (C31270 + C31269 + C31268) * C153454 * C153915 + C31258 * C153926) *
               C537) *
              C153511 * C153498)) /
            (p * q * std::sqrt(p + q));
    d2ee[333] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
             C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
             C153887 * C354) *
                C2818 +
            (C2894 + C2895 + C2896) * C2819 + C2908 * C153874) *
               C153626 * C153838 -
           (C4004 * C153874 + (C3529 + C3530 + C3531) * C2819 +
            (C2825 * C1892 + C3472 + C3472 + C153887 * C1902 + C2823 * C1057 +
             C3473 + C3473 + C153913 * C1069 + C2821 * C542 + C3474 + C3474 +
             C153925 * C566) *
                C2818) *
               C153626 * C153591) *
              C153511 * C153906 +
          (((C3531 + C3530 + C3529) * C2818 + (C3528 + C3527 + C3526) * C2819 +
            (C4011 + C4012 + C4013) * C153874) *
               C153626 * C153591 -
           (C2909 * C153874 + (C2899 + C2898 + C2897) * C2819 +
            (C2896 + C2895 + C2894) * C2818) *
               C153626 * C153838) *
              C153511 * C153907 +
          ((C2908 * C2818 + (C2902 + C2901 + C2900) * C2819 +
            (C2903 + C2904 + C2905) * C153874) *
               C153626 * C153838 -
           ((C2825 * C1888 + C4001 + C4001 + C153887 * C1898 + C2823 * C1061 +
             C4002 + C4002 + C153913 * C1073 + C2821 * C538 + C4003 + C4003 +
             C153925 * C562) *
                C153874 +
            (C4013 + C4012 + C4011) * C2819 + C4004 * C2818) *
               C153626 * C153591) *
              C153511 * C752)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153608 * C152) * C122 + C193 * C123 +
            C194 * C124 + C195 * C125 + C196 * C126) *
               C153626 * C153838 -
           (C619 * C126 + C620 * C125 + C621 * C124 + C622 * C123 +
            (C134 * C542 + C587 + C587 + C153608 * C566) * C122) *
               C153626 * C153591) *
              C153511 * C153906 +
          ((C622 * C122 + C621 * C123 + C620 * C124 + C619 * C125 +
            C895 * C126) *
               C153626 * C153591 -
           (C197 * C126 + C196 * C125 + C195 * C124 + C194 * C123 +
            C193 * C122) *
               C153626 * C153838) *
              C153511 * C153907 +
          ((C194 * C122 + C195 * C123 + C196 * C124 + C197 * C125 +
            C198 * C126) *
               C153626 * C153838 -
           ((C134 * C886 + C892 + C892 + C153608 * C888) * C126 + C895 * C125 +
            C619 * C124 + C620 * C123 + C621 * C122) *
               C153626 * C153591) *
              C153511 * C752)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C2818 +
             C193 * C2819 + C194 * C153874) *
                C153926 +
            (C7742 + C7688 + C7689) * C153915 + C7751 * C153890) *
               C153838 -
           ((C7744 + C7745 + C7746) * C153890 +
            (C7693 + C7692 + C7743) * C153915 +
            (C7689 + C7688 + C7742) * C153926) *
               C153591) *
              C153511 * C153906 +
          (((C7707 + C7708 + C7709) * C153926 +
            (C7710 + C7711 + C7712) * C153915 +
            (C7747 + C7748 + C7749) * C153890) *
               C153591 -
           (C7733 * C153890 + (C7709 + C7708 + C7707) * C153915 +
            (C195 * C153874 + C194 * C2819 + C193 * C2818) * C153926) *
               C153838) *
              C153511 * C153907 +
          (((C194 * C2818 + C195 * C2819 + C196 * C153874) * C153926 +
            (C8193 + C8194 + C8195) * C153915 +
            (C8196 + C8197 + C8198) * C153890) *
               C153838 -
           (((C134 * C2240 + C2256 + C2256 + C153608 * C2250) * C153874 +
             C7741 * C2819 + C7736 * C2818) *
                C153890 +
            (C8198 + C8197 + C8196) * C153915 +
            (C8195 + C8194 + C8193) * C153926) *
               C153591) *
              C153511 * C752)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
             C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 + C24119 +
             C153887 * C354) *
                C153922 +
            (C24183 + C24184 + C24185) * C153903 + C24197 * C153874) *
               C153626 * C153838 -
           (C25269 * C153874 + (C24794 + C24795 + C24796) * C153903 +
            (C24114 * C1892 + C24737 + C24737 + C153887 * C1902 +
             C24112 * C1057 + C24738 + C24738 + C24105 * C1069 + C24110 * C542 +
             C24739 + C24739 + C24104 * C566) *
                C153922) *
               C153626 * C153591) *
              C153511 * C153906 +
          (((C24796 + C24795 + C24794) * C153922 +
            (C24793 + C24792 + C24791) * C153903 +
            (C25276 + C25277 + C25278) * C153874) *
               C153626 * C153591 -
           (C24198 * C153874 + (C24188 + C24187 + C24186) * C153903 +
            (C24185 + C24184 + C24183) * C153922) *
               C153626 * C153838) *
              C153511 * C153907 +
          ((C24197 * C153922 + (C24191 + C24190 + C24189) * C153903 +
            (C24192 + C24193 + C24194) * C153874) *
               C153626 * C153838 -
           ((C24114 * C1888 + C25266 + C25266 + C153887 * C1898 +
             C24112 * C1061 + C25267 + C25267 + C24105 * C1073 + C24110 * C538 +
             C25268 + C25268 + C24104 * C562) *
                C153874 +
            (C25278 + C25277 + C25276) * C153903 + C25269 * C153922) *
               C153626 * C153591) *
              C153511 * C752)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C28350 * C136 + C28361 + C28361 + C28344 * C152 + C28352 * C329 +
            C28362 + C28362 + C28345 * C353 + C28354 * C330 + C28363 + C28363 +
            C28346 * C354 + C28356 * C1319 + C28364 + C28364 + C28347 * C1329 +
            C28358 * C3127 + C28365 + C28365 + C28348 * C3135) *
               C153454 * C153626 * C153838 -
           (C28358 * C5703 + C28657 + C28657 + C28348 * C5709 + C28356 * C4303 +
            C28658 + C28658 + C28347 * C4311 + C28354 * C1892 + C28659 +
            C28659 + C28346 * C1902 + C28352 * C1057 + C28660 + C28660 +
            C28345 * C1069 + C28350 * C542 + C28661 + C28661 + C28344 * C566) *
               C153454 * C153626 * C153591) *
              C153511 * C153906 +
          ((C28350 * C541 + C28667 + C28667 + C28344 * C565 + C28352 * C1058 +
            C28668 + C28668 + C28345 * C1070 + C28354 * C1891 + C28669 +
            C28669 + C28346 * C1901 + C28356 * C4304 + C28670 + C28670 +
            C28347 * C4312 + C28358 * C5702 + C28671 + C28671 +
            C28348 * C5708) *
               C153454 * C153626 * C153591 -
           (C28358 * C3128 + C28366 + C28366 + C28348 * C3136 + C28356 * C1318 +
            C28367 + C28367 + C28347 * C1328 + C28354 * C331 + C28368 + C28368 +
            C28346 * C355 + C28352 * C328 + C28369 + C28369 + C28345 * C352 +
            C28350 * C137 + C28370 + C28370 + C28344 * C153) *
               C153454 * C153626 * C153838) *
              C153511 * C153907 +
          ((C28350 * C138 + C28371 + C28371 + C28344 * C154 + C28352 * C327 +
            C28372 + C28372 + C28345 * C351 + C28354 * C332 + C28373 + C28373 +
            C28346 * C356 + C28356 * C1317 + C28374 + C28374 + C28347 * C1327 +
            C28358 * C3129 + C28375 + C28375 + C28348 * C3137) *
               C153454 * C153626 * C153838 -
           (C28358 * C5701 + C28926 + C28926 + C28348 * C5707 + C28356 * C4305 +
            C28927 + C28927 + C28347 * C4313 + C28354 * C1890 + C28928 +
            C28928 + C28346 * C1900 + C28352 * C1059 + C28929 + C28929 +
            C28345 * C1071 + C28350 * C540 + C28930 + C28930 + C28344 * C564) *
               C153454 * C153626 * C153591) *
              C153511 * C752)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
             C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 + C24119 +
             C153887 * C354) *
                C153454 * C153926 +
            (C31259 + C31260 + C31261) * C153454 * C153915 + C31273 * C153890) *
               C153838 -
           ((C31265 + C31266 + C31267) * C153454 * C153890 +
            (C31264 + C31263 + C31262) * C153454 * C153915 +
            (C31261 + C31260 + C31259) * C153454 * C153926) *
               C153591) *
              C153511 * C153906 +
          (((C24796 + C24795 + C24794) * C153454 * C153926 +
            (C24797 + C24798 + C24799) * C153454 * C153915 +
            (C31268 + C31269 + C31270) * C153454 * C153890) *
               C153591 -
           (C31258 * C153890 + (C24794 + C24795 + C24796) * C153454 * C153915 +
            (C24185 + C24184 + C24183) * C153454 * C153926) *
               C153838) *
              C153511 * C153907 +
          ((C24197 * C153454 * C153926 +
            (C24793 + C24792 + C24791) * C153454 * C153915 +
            (C24800 + C24801 + C24802) * C153454 * C153890) *
               C153838 -
           ((C24114 * C6301 + C27528 + C27528 + C153887 * C6313 +
             C24112 * C6302 + C27529 + C27529 + C24105 * C6314 +
             C24110 * C2242 + C27530 + C27530 + C24104 * C2252) *
                C153454 * C153890 +
            (C24802 + C24801 + C24800) * C153454 * C153915 +
            C25269 * C153454 * C153926) *
               C153591) *
              C153511 * C752)) /
            (p * q * std::sqrt(p + q));
    d2ee[334] +=
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153608 * C152) * C122 + C193 * C123 +
            C194 * C124 + C195 * C125 + C196 * C126) *
               C153626 * C153527 * C320 -
           (C406 * C126 + C407 * C125 + C408 * C124 + C409 * C123 +
            (C134 * C329 + C374 + C374 + C153608 * C353) * C122) *
               C153626 * C153527 * C321 +
           ((C134 * C330 + C375 + C375 + C153608 * C354) * C122 + C410 * C123 +
            C411 * C124 + C412 * C125 + C413 * C126) *
               C153626 * C153527 * C322) *
              C323 +
          ((C409 * C122 + C408 * C123 + C407 * C124 + C406 * C125 +
            (C134 * C335 + C388 + C388 + C153608 * C359) * C126) *
               C153626 * C153527 * C321 -
           (C197 * C126 + C196 * C125 + C195 * C124 + C194 * C123 +
            C193 * C122) *
               C153626 * C153527 * C320 -
           ((C134 * C336 + C389 + C389 + C153608 * C360) * C126 + C413 * C125 +
            C412 * C124 + C411 * C123 + C410 * C122) *
               C153626 * C153527 * C322) *
              C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C136 + C161 + C161 + C153608 * C152) * C122 + C193 * C123 +
           C194 * C124 + C195 * C125 + C196 * C126) *
              C153626 * C153527 * C153511 * C130 -
          (C197 * C126 + C196 * C125 + C195 * C124 + C194 * C123 +
           C193 * C122) *
              C153626 * C153527 * C153511 * C131 +
          (C194 * C122 + C195 * C123 + C196 * C124 + C197 * C125 +
           C198 * C126) *
              C153626 * C153527 * C153511 * C132 -
          ((C134 * C143 + C180 + C180 + C153608 * C159) * C126 + C198 * C125 +
           C197 * C124 + C196 * C123 + C195 * C122) *
              C153626 * C153527 * C153511 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
            C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
            C153887 * C354) *
               C2818 +
           (C2894 + C2895 + C2896) * C2819 + C2908 * C153874) *
              C153626 * C153527 * C153511 * C130 -
          (C2909 * C153874 + (C2899 + C2898 + C2897) * C2819 +
           (C2896 + C2895 + C2894) * C2818) *
              C153626 * C153527 * C153511 * C131 +
          (C2908 * C2818 + (C2902 + C2901 + C2900) * C2819 +
           (C2903 + C2904 + C2905) * C153874) *
              C153626 * C153527 * C153511 * C132 -
          ((C2825 * C336 + C2867 + C2867 + C153887 * C360 + C2823 * C335 +
            C2868 + C2868 + C153913 * C359 + C2821 * C141 + C2869 + C2869 +
            C153925 * C157) *
               C153874 +
           (C2905 + C2904 + C2903) * C2819 + C2909 * C2818) *
              C153626 * C153527 * C153511 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
             C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
             C153887 * C354) *
                C2818 +
            (C2894 + C2895 + C2896) * C2819 + C2908 * C153874) *
               C153626 * C153527 * C320 -
           ((C3212 + C3213 + C3214) * C153874 +
            (C3215 + C3216 + C3217) * C2819 +
            (C2825 * C1319 + C3158 + C3158 + C153887 * C1329 + C2823 * C330 +
             C3159 + C3159 + C153913 * C354 + C2821 * C329 + C3160 + C3160 +
             C153925 * C353) *
                C2818) *
               C153626 * C153527 * C321 +
           ((C2821 * C330 + C3161 + C3161 + C153925 * C354 + C2823 * C1319 +
             C3162 + C3162 + C153913 * C1329 + C2825 * C3127 + C3163 + C3163 +
             C153887 * C3135) *
                C2818 +
            (C3218 + C3219 + C3220) * C2819 +
            (C3221 + C3222 + C3223) * C153874) *
               C153626 * C153527 * C322) *
              C323 +
          (((C3217 + C3216 + C3215) * C2818 + (C3214 + C3213 + C3212) * C2819 +
            (C2821 * C326 + C3182 + C3182 + C153925 * C350 + C2823 * C333 +
             C3183 + C3183 + C153913 * C357 + C2825 * C1316 + C3184 + C3184 +
             C153887 * C1326) *
                C153874) *
               C153626 * C153527 * C321 -
           (C2909 * C153874 + (C2899 + C2898 + C2897) * C2819 +
            (C2896 + C2895 + C2894) * C2818) *
               C153626 * C153527 * C320 -
           ((C2825 * C3130 + C3185 + C3185 + C153887 * C3138 + C2823 * C1316 +
             C3186 + C3186 + C153913 * C1326 + C2821 * C333 + C3187 + C3187 +
             C153925 * C357) *
                C153874 +
            (C3223 + C3222 + C3221) * C2819 + (C3220 + C3219 + C3218) * C2818) *
               C153626 * C153527 * C322) *
              C153498)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153608 * C152) * C2818 +
            C193 * C2819 + C194 * C153874) *
               C153926 +
           ((C134 * C542 + C587 + C587 + C153608 * C566) * C2818 +
            C622 * C2819 + C621 * C153874) *
               C153915 +
           ((C134 * C543 + C588 + C588 + C153608 * C567) * C2818 +
            C623 * C2819 + C624 * C153874) *
               C153890) *
              C153527 * C153511 * C130 -
          ((C625 * C153874 + C624 * C2819 + C623 * C2818) * C153890 +
           (C620 * C153874 + C621 * C2819 + C622 * C2818) * C153915 +
           (C195 * C153874 + C194 * C2819 + C193 * C2818) * C153926) *
              C153527 * C153511 * C131 +
          ((C194 * C2818 + C195 * C2819 + C196 * C153874) * C153926 +
           (C621 * C2818 + C620 * C2819 + C619 * C153874) * C153915 +
           (C624 * C2818 + C625 * C2819 + C626 * C153874) * C153890) *
              C153527 * C153511 * C132 -
          (((C134 * C549 + C602 + C602 + C153608 * C573) * C153874 +
            C626 * C2819 + C625 * C2818) *
               C153890 +
           (C895 * C153874 + C619 * C2819 + C620 * C2818) * C153915 +
           (C197 * C153874 + C196 * C2819 + C195 * C2818) * C153926) *
              C153527 * C153511 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C2818 +
             C193 * C2819 + C194 * C153874) *
                C153926 +
            ((C134 * C542 + C587 + C587 + C153608 * C566) * C2818 +
             C622 * C2819 + C621 * C153874) *
                C153915 +
            ((C134 * C543 + C588 + C588 + C153608 * C567) * C2818 +
             C623 * C2819 + C624 * C153874) *
                C153890) *
               C153527 * C320 -
           ((C7450 * C153874 + C7451 * C2819 +
             (C134 * C1461 + C1477 + C1477 + C153608 * C1471) * C2818) *
                C153890 +
            (C1099 * C153874 + C1098 * C2819 +
             (C134 * C1057 + C1076 + C1076 + C153608 * C1069) * C2818) *
                C153915 +
            (C408 * C153874 + C409 * C2819 +
             (C134 * C329 + C374 + C374 + C153608 * C353) * C2818) *
                C153926) *
               C153527 * C321 +
           (((C134 * C330 + C375 + C375 + C153608 * C354) * C2818 +
             C410 * C2819 + C411 * C153874) *
                C153926 +
            ((C134 * C1892 + C1908 + C1908 + C153608 * C1902) * C2818 +
             C7452 * C2819 + C7453 * C153874) *
                C153915 +
            ((C134 * C3441 + C7430 + C7430 + C153608 * C3449) * C2818 +
             C7454 * C2819 + C7455 * C153874) *
                C153890) *
               C153527 * C322) *
              C323 +
          (((C409 * C2818 + C408 * C2819 + C407 * C153874) * C153926 +
            (C1098 * C2818 + C1099 * C2819 + C1100 * C153874) * C153915 +
            (C7451 * C2818 + C7450 * C2819 +
             (C134 * C1458 + C1474 + C1474 + C153608 * C1468) * C153874) *
                C153890) *
               C153527 * C321 -
           ((C625 * C153874 + C624 * C2819 + C623 * C2818) * C153890 +
            (C620 * C153874 + C621 * C2819 + C622 * C2818) * C153915 +
            (C195 * C153874 + C194 * C2819 + C193 * C2818) * C153926) *
               C153527 * C320 -
           (((C134 * C3444 + C7437 + C7437 + C153608 * C3452) * C153874 +
             C7455 * C2819 + C7454 * C2818) *
                C153890 +
            ((C134 * C1889 + C1905 + C1905 + C153608 * C1899) * C153874 +
             C7453 * C2819 + C7452 * C2818) *
                C153915 +
            (C412 * C153874 + C411 * C2819 + C410 * C2818) * C153926) *
               C153527 * C322) *
              C153498)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
            C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 + C24119 +
            C153887 * C354) *
               C153922 +
           (C24183 + C24184 + C24185) * C153903 + C24197 * C153874) *
              C153626 * C153527 * C153511 * C130 -
          (C24198 * C153874 + (C24188 + C24187 + C24186) * C153903 +
           (C24185 + C24184 + C24183) * C153922) *
              C153626 * C153527 * C153511 * C131 +
          (C24197 * C153922 + (C24191 + C24190 + C24189) * C153903 +
           (C24192 + C24193 + C24194) * C153874) *
              C153626 * C153527 * C153511 * C132 -
          ((C24114 * C336 + C24156 + C24156 + C153887 * C360 + C24112 * C335 +
            C24157 + C24157 + C24105 * C359 + C24110 * C141 + C24158 + C24158 +
            C24104 * C157) *
               C153874 +
           (C24194 + C24193 + C24192) * C153903 + C24198 * C153922) *
              C153626 * C153527 * C153511 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
             C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 + C24119 +
             C153887 * C354) *
                C153922 +
            (C24183 + C24184 + C24185) * C153903 + C24197 * C153874) *
               C153626 * C153527 * C320 -
           ((C24489 + C24490 + C24491) * C153874 +
            (C24492 + C24493 + C24494) * C153903 +
            (C24114 * C1319 + C24435 + C24435 + C153887 * C1329 +
             C24112 * C330 + C24436 + C24436 + C24105 * C354 + C24110 * C329 +
             C24437 + C24437 + C24104 * C353) *
                C153922) *
               C153626 * C153527 * C321 +
           ((C24110 * C330 + C24438 + C24438 + C24104 * C354 + C24112 * C1319 +
             C24439 + C24439 + C24105 * C1329 + C24114 * C3127 + C24440 +
             C24440 + C153887 * C3135) *
                C153922 +
            (C24495 + C24496 + C24497) * C153903 +
            (C24498 + C24499 + C24500) * C153874) *
               C153626 * C153527 * C322) *
              C323 +
          (((C24494 + C24493 + C24492) * C153922 +
            (C24491 + C24490 + C24489) * C153903 +
            (C24110 * C326 + C24459 + C24459 + C24104 * C350 + C24112 * C333 +
             C24460 + C24460 + C24105 * C357 + C24114 * C1316 + C24461 +
             C24461 + C153887 * C1326) *
                C153874) *
               C153626 * C153527 * C321 -
           (C24198 * C153874 + (C24188 + C24187 + C24186) * C153903 +
            (C24185 + C24184 + C24183) * C153922) *
               C153626 * C153527 * C320 -
           ((C24114 * C3130 + C24462 + C24462 + C153887 * C3138 +
             C24112 * C1316 + C24463 + C24463 + C24105 * C1326 + C24110 * C333 +
             C24464 + C24464 + C24104 * C357) *
                C153874 +
            (C24500 + C24499 + C24498) * C153903 +
            (C24497 + C24496 + C24495) * C153922) *
               C153626 * C153527 * C322) *
              C153498)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((C28350 * C136 + C28361 + C28361 + C28344 * C152 + C28352 * C329 +
           C28362 + C28362 + C28345 * C353 + C28354 * C330 + C28363 + C28363 +
           C28346 * C354 + C28356 * C1319 + C28364 + C28364 + C28347 * C1329 +
           C28358 * C3127 + C28365 + C28365 + C28348 * C3135) *
              C153454 * C153626 * C153527 * C153511 * C130 -
          (C28358 * C3128 + C28366 + C28366 + C28348 * C3136 + C28356 * C1318 +
           C28367 + C28367 + C28347 * C1328 + C28354 * C331 + C28368 + C28368 +
           C28346 * C355 + C28352 * C328 + C28369 + C28369 + C28345 * C352 +
           C28350 * C137 + C28370 + C28370 + C28344 * C153) *
              C153454 * C153626 * C153527 * C153511 * C131 +
          (C28350 * C138 + C28371 + C28371 + C28344 * C154 + C28352 * C327 +
           C28372 + C28372 + C28345 * C351 + C28354 * C332 + C28373 + C28373 +
           C28346 * C356 + C28356 * C1317 + C28374 + C28374 + C28347 * C1327 +
           C28358 * C3129 + C28375 + C28375 + C28348 * C3137) *
              C153454 * C153626 * C153527 * C153511 * C132 -
          (C28358 * C3130 + C28376 + C28376 + C28348 * C3138 + C28356 * C1316 +
           C28377 + C28377 + C28347 * C1326 + C28354 * C333 + C28378 + C28378 +
           C28346 * C357 + C28352 * C326 + C28379 + C28379 + C28345 * C350 +
           C28350 * C139 + C28380 + C28380 + C28344 * C155) *
              C153454 * C153626 * C153527 * C153511 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C28350 * C136 + C28361 + C28361 + C28344 * C152 + C28352 * C329 +
            C28362 + C28362 + C28345 * C353 + C28354 * C330 + C28363 + C28363 +
            C28346 * C354 + C28356 * C1319 + C28364 + C28364 + C28347 * C1329 +
            C28358 * C3127 + C28365 + C28365 + C28348 * C3135) *
               C153454 * C153626 * C153527 * C320 -
           (C28358 * C4723 + C28509 + C28509 + C28348 * C4729 + C28356 * C3127 +
            C28510 + C28510 + C28347 * C3135 + C28354 * C1319 + C28511 +
            C28511 + C28346 * C1329 + C28352 * C330 + C28512 + C28512 +
            C28345 * C354 + C28350 * C329 + C28513 + C28513 + C28344 * C353) *
               C153454 * C153626 * C153527 * C321 +
           (C28350 * C330 + C28514 + C28514 + C28344 * C354 + C28352 * C1319 +
            C28515 + C28515 + C28345 * C1329 + C28354 * C3127 + C28516 +
            C28516 + C28346 * C3135 + C28356 * C4723 + C28517 + C28517 +
            C28347 * C4729 + C28358 * C28502 + C28518 + C28518 +
            C28348 * C28506) *
               C153454 * C153626 * C153527 * C322) *
              C323 +
          ((C28350 * C328 + C28519 + C28519 + C28344 * C352 + C28352 * C331 +
            C28520 + C28520 + C28345 * C355 + C28354 * C1318 + C28521 + C28521 +
            C28346 * C1328 + C28356 * C3128 + C28522 + C28522 + C28347 * C3136 +
            C28358 * C4722 + C28523 + C28523 + C28348 * C4728) *
               C153454 * C153626 * C153527 * C321 -
           (C28358 * C3128 + C28366 + C28366 + C28348 * C3136 + C28356 * C1318 +
            C28367 + C28367 + C28347 * C1328 + C28354 * C331 + C28368 + C28368 +
            C28346 * C355 + C28352 * C328 + C28369 + C28369 + C28345 * C352 +
            C28350 * C137 + C28370 + C28370 + C28344 * C153) *
               C153454 * C153626 * C153527 * C320 -
           (C28358 * C28503 + C28524 + C28524 + C28348 * C28507 +
            C28356 * C4722 + C28525 + C28525 + C28347 * C4728 + C28354 * C3128 +
            C28526 + C28526 + C28346 * C3136 + C28352 * C1318 + C28527 +
            C28527 + C28345 * C1328 + C28350 * C331 + C28528 + C28528 +
            C28344 * C355) *
               C153454 * C153626 * C153527 * C322) *
              C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
            C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 + C24119 +
            C153887 * C354) *
               C153454 * C153926 +
           (C24110 * C542 + C24739 + C24739 + C24104 * C566 + C24112 * C1057 +
            C24738 + C24738 + C24105 * C1069 + C24114 * C1892 + C24737 +
            C24737 + C153887 * C1902) *
               C153454 * C153915 +
           (C24110 * C543 + C24740 + C24740 + C24104 * C567 + C24112 * C1461 +
            C24741 + C24741 + C24105 * C1471 + C24114 * C3441 + C24742 +
            C24742 + C153887 * C3449) *
               C153454 * C153890) *
              C153527 * C153511 * C130 -
          ((C24799 + C24798 + C24797) * C153454 * C153890 +
           (C24794 + C24795 + C24796) * C153454 * C153915 +
           (C24185 + C24184 + C24183) * C153454 * C153926) *
              C153527 * C153511 * C131 +
          (C24197 * C153454 * C153926 +
           (C24793 + C24792 + C24791) * C153454 * C153915 +
           (C24800 + C24801 + C24802) * C153454 * C153890) *
              C153527 * C153511 * C132 -
          ((C24114 * C3444 + C24764 + C24764 + C153887 * C3452 +
            C24112 * C1458 + C24765 + C24765 + C24105 * C1468 + C24110 * C546 +
            C24766 + C24766 + C24104 * C570) *
               C153454 * C153890 +
           (C25278 + C25277 + C25276) * C153454 * C153915 +
           C24198 * C153454 * C153926) *
              C153527 * C153511 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
             C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 + C24119 +
             C153887 * C354) *
                C153454 * C153926 +
            (C24110 * C542 + C24739 + C24739 + C24104 * C566 + C24112 * C1057 +
             C24738 + C24738 + C24105 * C1069 + C24114 * C1892 + C24737 +
             C24737 + C153887 * C1902) *
                C153454 * C153915 +
            (C24110 * C543 + C24740 + C24740 + C24104 * C567 + C24112 * C1461 +
             C24741 + C24741 + C24105 * C1471 + C24114 * C3441 + C24742 +
             C24742 + C153887 * C3449) *
                C153454 * C153890) *
               C153527 * C320 -
           ((C24114 * C4959 + C26208 + C26208 + C153887 * C4965 +
             C24112 * C3441 + C26209 + C26209 + C24105 * C3449 +
             C24110 * C1461 + C26210 + C26210 + C24104 * C1471) *
                C153454 * C153890 +
            (C24114 * C4303 + C25571 + C25571 + C153887 * C4311 +
             C24112 * C1892 + C25570 + C25570 + C24105 * C1902 +
             C24110 * C1057 + C25569 + C25569 + C24104 * C1069) *
                C153454 * C153915 +
            (C24114 * C1319 + C24435 + C24435 + C153887 * C1329 +
             C24112 * C330 + C24436 + C24436 + C24105 * C354 + C24110 * C329 +
             C24437 + C24437 + C24104 * C353) *
                C153454 * C153926) *
               C153527 * C321 +
           ((C24110 * C330 + C24438 + C24438 + C24104 * C354 + C24112 * C1319 +
             C24439 + C24439 + C24105 * C1329 + C24114 * C3127 + C24440 +
             C24440 + C153887 * C3135) *
                C153454 * C153926 +
            (C24110 * C1892 + C26945 + C26945 + C24104 * C1902 +
             C24112 * C4303 + C26944 + C26944 + C24105 * C4311 +
             C24114 * C5703 + C26943 + C26943 + C153887 * C5709) *
                C153454 * C153915 +
            (C24110 * C3441 + C30972 + C30972 + C24104 * C3449 +
             C24112 * C4959 + C30973 + C30973 + C24105 * C4965 +
             C24114 * C28650 + C30974 + C30974 + C153887 * C28654) *
                C153454 * C153890) *
               C153527 * C322) *
              C323 +
          (((C24494 + C24493 + C24492) * C153454 * C153926 +
            (C25605 + C25606 + C25607) * C153454 * C153915 +
            (C24110 * C1460 + C26207 + C26207 + C24104 * C1470 +
             C24112 * C3442 + C26206 + C26206 + C24105 * C3450 +
             C24114 * C4958 + C26205 + C26205 + C153887 * C4964) *
                C153454 * C153890) *
               C153527 * C321 -
           ((C24799 + C24798 + C24797) * C153454 * C153890 +
            (C24794 + C24795 + C24796) * C153454 * C153915 +
            (C24185 + C24184 + C24183) * C153454 * C153926) *
               C153527 * C320 -
           ((C24114 * C28651 + C30975 + C30975 + C153887 * C28655 +
             C24112 * C4958 + C30976 + C30976 + C24105 * C4964 +
             C24110 * C3442 + C30977 + C30977 + C24104 * C3450) *
                C153454 * C153890 +
            (C24114 * C5702 + C26940 + C26940 + C153887 * C5708 +
             C24112 * C4304 + C26941 + C26941 + C24105 * C4312 +
             C24110 * C1891 + C26942 + C26942 + C24104 * C1901) *
                C153454 * C153915 +
            (C24497 + C24496 + C24495) * C153454 * C153926) *
               C153527 * C322) *
              C153498)) /
            (p * q * std::sqrt(p + q));
    d2ee[335] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
             C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
             C153887 * C354) *
                C2818 +
            (C2894 + C2895 + C2896) * C2819 + C2908 * C153874) *
               C153626 * C153527 * C153908 -
           (C3766 * C153874 + (C3215 + C3216 + C3217) * C2819 +
            (C2825 * C1319 + C3158 + C3158 + C153887 * C1329 + C2823 * C330 +
             C3159 + C3159 + C153913 * C354 + C2821 * C329 + C3160 + C3160 +
             C153925 * C353) *
                C2818) *
               C153626 * C153527 * C153909 +
           ((C2821 * C330 + C3161 + C3161 + C153925 * C354 + C2823 * C1319 +
             C3162 + C3162 + C153913 * C1329 + C2825 * C3127 + C3163 + C3163 +
             C153887 * C3135) *
                C2818 +
            (C3218 + C3219 + C3220) * C2819 +
            (C3221 + C3222 + C3223) * C153874) *
               C153626 * C153527 * C1601) *
              C153829 +
          (((C3217 + C3216 + C3215) * C2818 + (C3214 + C3213 + C3212) * C2819 +
            (C3773 + C3774 + C3775) * C153874) *
               C153626 * C153527 * C153909 -
           (C2909 * C153874 + (C2899 + C2898 + C2897) * C2819 +
            (C2896 + C2895 + C2894) * C2818) *
               C153626 * C153527 * C153908 -
           ((C2825 * C3130 + C3185 + C3185 + C153887 * C3138 + C2823 * C1316 +
             C3186 + C3186 + C153913 * C1326 + C2821 * C333 + C3187 + C3187 +
             C153925 * C357) *
                C153874 +
            (C3223 + C3222 + C3221) * C2819 + (C3220 + C3219 + C3218) * C2818) *
               C153626 * C153527 * C1601) *
              C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153608 * C152) * C122 + C193 * C123 +
            C194 * C124 + C195 * C125 + C196 * C126) *
               C153626 * C153527 * C153908 -
           (C406 * C126 + C407 * C125 + C408 * C124 + C409 * C123 +
            (C134 * C329 + C374 + C374 + C153608 * C353) * C122) *
               C153626 * C153527 * C153909 +
           ((C134 * C330 + C375 + C375 + C153608 * C354) * C122 + C410 * C123 +
            C411 * C124 + C412 * C125 + C413 * C126) *
               C153626 * C153527 * C1601) *
              C153829 +
          ((C409 * C122 + C408 * C123 + C407 * C124 + C406 * C125 +
            C762 * C126) *
               C153626 * C153527 * C153909 -
           (C197 * C126 + C196 * C125 + C195 * C124 + C194 * C123 +
            C193 * C122) *
               C153626 * C153527 * C153908 -
           ((C134 * C336 + C389 + C389 + C153608 * C360) * C126 + C413 * C125 +
            C412 * C124 + C411 * C123 + C410 * C122) *
               C153626 * C153527 * C1601) *
              C153498)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C2818 +
             C193 * C2819 + C194 * C153874) *
                C153926 +
            (C7742 + C7688 + C7689) * C153915 + C7751 * C153890) *
               C153527 * C153908 -
           (C9134 * C153890 + (C8495 + C8494 + C8526) * C153915 +
            (C408 * C153874 + C409 * C2819 +
             (C134 * C329 + C374 + C374 + C153608 * C353) * C2818) *
                C153926) *
               C153527 * C153909 +
           (((C134 * C330 + C375 + C375 + C153608 * C354) * C2818 +
             C410 * C2819 + C411 * C153874) *
                C153926 +
            ((C134 * C1892 + C1908 + C1908 + C153608 * C1902) * C2818 +
             C7452 * C2819 + C7453 * C153874) *
                C153915 +
            ((C134 * C3441 + C7430 + C7430 + C153608 * C3449) * C2818 +
             C7454 * C2819 + C7455 * C153874) *
                C153890) *
               C153527 * C1601) *
              C153829 +
          (((C409 * C2818 + C408 * C2819 + C407 * C153874) * C153926 +
            (C8507 + C8508 + C8509) * C153915 +
            (C8510 + C8511 + C8512) * C153890) *
               C153527 * C153909 -
           (C7733 * C153890 + (C7709 + C7708 + C7707) * C153915 +
            (C195 * C153874 + C194 * C2819 + C193 * C2818) * C153926) *
               C153527 * C153908 -
           (((C134 * C3444 + C7437 + C7437 + C153608 * C3452) * C153874 +
             C7455 * C2819 + C7454 * C2818) *
                C153890 +
            ((C134 * C1889 + C1905 + C1905 + C153608 * C1899) * C153874 +
             C7453 * C2819 + C7452 * C2818) *
                C153915 +
            (C412 * C153874 + C411 * C2819 + C410 * C2818) * C153926) *
               C153527 * C1601) *
              C153498)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
             C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 + C24119 +
             C153887 * C354) *
                C153922 +
            (C24183 + C24184 + C24185) * C153903 + C24197 * C153874) *
               C153626 * C153527 * C153908 -
           (C25031 * C153874 + (C24492 + C24493 + C24494) * C153903 +
            (C24114 * C1319 + C24435 + C24435 + C153887 * C1329 +
             C24112 * C330 + C24436 + C24436 + C24105 * C354 + C24110 * C329 +
             C24437 + C24437 + C24104 * C353) *
                C153922) *
               C153626 * C153527 * C153909 +
           ((C24110 * C330 + C24438 + C24438 + C24104 * C354 + C24112 * C1319 +
             C24439 + C24439 + C24105 * C1329 + C24114 * C3127 + C24440 +
             C24440 + C153887 * C3135) *
                C153922 +
            (C24495 + C24496 + C24497) * C153903 +
            (C24498 + C24499 + C24500) * C153874) *
               C153626 * C153527 * C1601) *
              C153829 +
          (((C24494 + C24493 + C24492) * C153922 +
            (C24491 + C24490 + C24489) * C153903 +
            (C25038 + C25039 + C25040) * C153874) *
               C153626 * C153527 * C153909 -
           (C24198 * C153874 + (C24188 + C24187 + C24186) * C153903 +
            (C24185 + C24184 + C24183) * C153922) *
               C153626 * C153527 * C153908 -
           ((C24114 * C3130 + C24462 + C24462 + C153887 * C3138 +
             C24112 * C1316 + C24463 + C24463 + C24105 * C1326 + C24110 * C333 +
             C24464 + C24464 + C24104 * C357) *
                C153874 +
            (C24500 + C24499 + C24498) * C153903 +
            (C24497 + C24496 + C24495) * C153922) *
               C153626 * C153527 * C1601) *
              C153498)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C28350 * C136 + C28361 + C28361 + C28344 * C152 + C28352 * C329 +
            C28362 + C28362 + C28345 * C353 + C28354 * C330 + C28363 + C28363 +
            C28346 * C354 + C28356 * C1319 + C28364 + C28364 + C28347 * C1329 +
            C28358 * C3127 + C28365 + C28365 + C28348 * C3135) *
               C153454 * C153626 * C153527 * C153908 -
           (C28358 * C4723 + C28509 + C28509 + C28348 * C4729 + C28356 * C3127 +
            C28510 + C28510 + C28347 * C3135 + C28354 * C1319 + C28511 +
            C28511 + C28346 * C1329 + C28352 * C330 + C28512 + C28512 +
            C28345 * C354 + C28350 * C329 + C28513 + C28513 + C28344 * C353) *
               C153454 * C153626 * C153527 * C153909 +
           (C28350 * C330 + C28514 + C28514 + C28344 * C354 + C28352 * C1319 +
            C28515 + C28515 + C28345 * C1329 + C28354 * C3127 + C28516 +
            C28516 + C28346 * C3135 + C28356 * C4723 + C28517 + C28517 +
            C28347 * C4729 + C28358 * C28502 + C28518 + C28518 +
            C28348 * C28506) *
               C153454 * C153626 * C153527 * C1601) *
              C153829 +
          ((C28350 * C328 + C28519 + C28519 + C28344 * C352 + C28352 * C331 +
            C28520 + C28520 + C28345 * C355 + C28354 * C1318 + C28521 + C28521 +
            C28346 * C1328 + C28356 * C3128 + C28522 + C28522 + C28347 * C3136 +
            C28358 * C4722 + C28523 + C28523 + C28348 * C4728) *
               C153454 * C153626 * C153527 * C153909 -
           (C28358 * C3128 + C28366 + C28366 + C28348 * C3136 + C28356 * C1318 +
            C28367 + C28367 + C28347 * C1328 + C28354 * C331 + C28368 + C28368 +
            C28346 * C355 + C28352 * C328 + C28369 + C28369 + C28345 * C352 +
            C28350 * C137 + C28370 + C28370 + C28344 * C153) *
               C153454 * C153626 * C153527 * C153908 -
           (C28358 * C28503 + C28524 + C28524 + C28348 * C28507 +
            C28356 * C4722 + C28525 + C28525 + C28347 * C4728 + C28354 * C3128 +
            C28526 + C28526 + C28346 * C3136 + C28352 * C1318 + C28527 +
            C28527 + C28345 * C1328 + C28350 * C331 + C28528 + C28528 +
            C28344 * C355) *
               C153454 * C153626 * C153527 * C1601) *
              C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
             C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 + C24119 +
             C153887 * C354) *
                C153454 * C153926 +
            (C31259 + C31260 + C31261) * C153454 * C153915 + C31273 * C153890) *
               C153527 * C153908 -
           (C32662 * C153890 + (C32047 + C32046 + C32045) * C153454 * C153915 +
            (C24114 * C1319 + C24435 + C24435 + C153887 * C1329 +
             C24112 * C330 + C24436 + C24436 + C24105 * C354 + C24110 * C329 +
             C24437 + C24437 + C24104 * C353) *
                C153454 * C153926) *
               C153527 * C153909 +
           ((C24110 * C330 + C24438 + C24438 + C24104 * C354 + C24112 * C1319 +
             C24439 + C24439 + C24105 * C1329 + C24114 * C3127 + C24440 +
             C24440 + C153887 * C3135) *
                C153454 * C153926 +
            (C24110 * C1892 + C26945 + C26945 + C24104 * C1902 +
             C24112 * C4303 + C26944 + C26944 + C24105 * C4311 +
             C24114 * C5703 + C26943 + C26943 + C153887 * C5709) *
                C153454 * C153915 +
            (C24110 * C3441 + C30972 + C30972 + C24104 * C3449 +
             C24112 * C4959 + C30973 + C30973 + C24105 * C4965 +
             C24114 * C28650 + C30974 + C30974 + C153887 * C28654) *
                C153454 * C153890) *
               C153527 * C1601) *
              C153829 +
          (((C24494 + C24493 + C24492) * C153454 * C153926 +
            (C25605 + C25606 + C25607) * C153454 * C153915 +
            (C32051 + C32052 + C32053) * C153454 * C153890) *
               C153527 * C153909 -
           (C31258 * C153890 + (C24794 + C24795 + C24796) * C153454 * C153915 +
            (C24185 + C24184 + C24183) * C153454 * C153926) *
               C153527 * C153908 -
           ((C24114 * C28651 + C30975 + C30975 + C153887 * C28655 +
             C24112 * C4958 + C30976 + C30976 + C24105 * C4964 +
             C24110 * C3442 + C30977 + C30977 + C24104 * C3450) *
                C153454 * C153890 +
            (C24114 * C5702 + C26940 + C26940 + C153887 * C5708 +
             C24112 * C4304 + C26941 + C26941 + C24105 * C4312 +
             C24110 * C1891 + C26942 + C26942 + C24104 * C1901) *
                C153454 * C153915 +
            (C24497 + C24496 + C24495) * C153454 * C153926) *
               C153527 * C1601) *
              C153498)) /
            (p * q * std::sqrt(p + q));
    d2ee[336] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
             C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
             C153887 * C354) *
                C2818 +
            (C2894 + C2895 + C2896) * C2819 + C2908 * C153874) *
               C153626 * C153838 -
           (C4004 * C153874 + (C3529 + C3530 + C3531) * C2819 +
            (C2825 * C1892 + C3472 + C3472 + C153887 * C1902 + C2823 * C1057 +
             C3473 + C3473 + C153913 * C1069 + C2821 * C542 + C3474 + C3474 +
             C153925 * C566) *
                C2818) *
               C153626 * C153591) *
              C153908 +
          (((C2821 * C1057 + C4316 + C4316 + C153925 * C1069 + C2823 * C1892 +
             C4317 + C4317 + C153913 * C1902 + C2825 * C4303 + C4318 + C4318 +
             C153887 * C4311) *
                C2818 +
            (C4352 + C4353 + C4354) * C2819 +
            (C4355 + C4356 + C4357) * C153874) *
               C153626 * C153591 -
           (C3766 * C153874 + (C3215 + C3216 + C3217) * C2819 +
            (C2825 * C1319 + C3158 + C3158 + C153887 * C1329 + C2823 * C330 +
             C3159 + C3159 + C153913 * C354 + C2821 * C329 + C3160 + C3160 +
             C153925 * C353) *
                C2818) *
               C153626 * C153838) *
              C153909 +
          (((C2821 * C330 + C3161 + C3161 + C153925 * C354 + C2823 * C1319 +
             C3162 + C3162 + C153913 * C1329 + C2825 * C3127 + C3163 + C3163 +
             C153887 * C3135) *
                C2818 +
            (C3218 + C3219 + C3220) * C2819 +
            (C3221 + C3222 + C3223) * C153874) *
               C153626 * C153838 -
           ((C2825 * C5701 + C5711 + C5711 + C153887 * C5707 + C2823 * C4305 +
             C5712 + C5712 + C153913 * C4313 + C2821 * C1890 + C5713 + C5713 +
             C153925 * C1900) *
                C153874 +
            (C2825 * C5702 + C5714 + C5714 + C153887 * C5708 + C2823 * C4304 +
             C5715 + C5715 + C153913 * C4312 + C2821 * C1891 + C5716 + C5716 +
             C153925 * C1901) *
                C2819 +
            (C2825 * C5703 + C5717 + C5717 + C153887 * C5709 + C2823 * C4303 +
             C5718 + C5718 + C153913 * C4311 + C2821 * C1892 + C5719 + C5719 +
             C153925 * C1902) *
                C2818) *
               C153626 * C153591) *
              C1601) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153608 * C152) * C122 + C193 * C123 +
            C194 * C124 + C195 * C125 + C196 * C126) *
               C153626 * C153838 -
           (C619 * C126 + C620 * C125 + C621 * C124 + C622 * C123 +
            (C134 * C542 + C587 + C587 + C153608 * C566) * C122) *
               C153626 * C153591) *
              C153908 +
          (((C134 * C1057 + C1076 + C1076 + C153608 * C1069) * C122 +
            C1098 * C123 + C1099 * C124 + C1100 * C125 + C1101 * C126) *
               C153626 * C153591 -
           (C406 * C126 + C407 * C125 + C408 * C124 + C409 * C123 +
            (C134 * C329 + C374 + C374 + C153608 * C353) * C122) *
               C153626 * C153838) *
              C153909 +
          (((C134 * C330 + C375 + C375 + C153608 * C354) * C122 + C410 * C123 +
            C411 * C124 + C412 * C125 + C413 * C126) *
               C153626 * C153838 -
           ((C134 * C1888 + C1904 + C1904 + C153608 * C1898) * C126 +
            (C134 * C1889 + C1905 + C1905 + C153608 * C1899) * C125 +
            (C134 * C1890 + C1906 + C1906 + C153608 * C1900) * C124 +
            (C134 * C1891 + C1907 + C1907 + C153608 * C1901) * C123 +
            (C134 * C1892 + C1908 + C1908 + C153608 * C1902) * C122) *
               C153626 * C153591) *
              C1601) *
         C153492) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C2818 +
             C193 * C2819 + C194 * C153874) *
                C153926 +
            (C7742 + C7688 + C7689) * C153915 + C7751 * C153890) *
               C153838 -
           ((C7744 + C7745 + C7746) * C153890 +
            (C7693 + C7692 + C7743) * C153915 +
            (C7689 + C7688 + C7742) * C153926) *
               C153591) *
              C153908 +
          (((C8526 + C8494 + C8495) * C153926 +
            (C8527 + C8498 + C8499) * C153915 +
            (C9137 + C9127 + C9128) * C153890) *
               C153591 -
           (C9134 * C153890 + (C8495 + C8494 + C8526) * C153915 +
            (C408 * C153874 + C409 * C2819 +
             (C134 * C329 + C374 + C374 + C153608 * C353) * C2818) *
                C153926) *
               C153838) *
              C153909 +
          ((((C134 * C330 + C375 + C375 + C153608 * C354) * C2818 +
             C410 * C2819 + C411 * C153874) *
                C153926 +
            (C9881 + C9866 + C9867) * C153915 +
            (C9882 + C9870 + C9871) * C153890) *
               C153838 -
           (((C134 * C6301 + C9872 + C9872 + C153608 * C6313) * C153874 +
             (C134 * C6303 + C9873 + C9873 + C153608 * C6315) * C2819 +
             (C134 * C6305 + C9874 + C9874 + C153608 * C6317) * C2818) *
                C153890 +
            (C9871 + C9870 + C9882) * C153915 +
            (C9867 + C9866 + C9881) * C153926) *
               C153591) *
              C1601) *
         C153492) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
             C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 + C24119 +
             C153887 * C354) *
                C153922 +
            (C24183 + C24184 + C24185) * C153903 + C24197 * C153874) *
               C153626 * C153838 -
           (C25269 * C153874 + (C24794 + C24795 + C24796) * C153903 +
            (C24114 * C1892 + C24737 + C24737 + C153887 * C1902 +
             C24112 * C1057 + C24738 + C24738 + C24105 * C1069 + C24110 * C542 +
             C24739 + C24739 + C24104 * C566) *
                C153922) *
               C153626 * C153591) *
              C153908 +
          (((C24110 * C1057 + C25569 + C25569 + C24104 * C1069 +
             C24112 * C1892 + C25570 + C25570 + C24105 * C1902 +
             C24114 * C4303 + C25571 + C25571 + C153887 * C4311) *
                C153922 +
            (C25605 + C25606 + C25607) * C153903 +
            (C25608 + C25609 + C25610) * C153874) *
               C153626 * C153591 -
           (C25031 * C153874 + (C24492 + C24493 + C24494) * C153903 +
            (C24114 * C1319 + C24435 + C24435 + C153887 * C1329 +
             C24112 * C330 + C24436 + C24436 + C24105 * C354 + C24110 * C329 +
             C24437 + C24437 + C24104 * C353) *
                C153922) *
               C153626 * C153838) *
              C153909 +
          (((C24110 * C330 + C24438 + C24438 + C24104 * C354 + C24112 * C1319 +
             C24439 + C24439 + C24105 * C1329 + C24114 * C3127 + C24440 +
             C24440 + C153887 * C3135) *
                C153922 +
            (C24495 + C24496 + C24497) * C153903 +
            (C24498 + C24499 + C24500) * C153874) *
               C153626 * C153838 -
           ((C24114 * C5701 + C26937 + C26937 + C153887 * C5707 +
             C24112 * C4305 + C26938 + C26938 + C24105 * C4313 +
             C24110 * C1890 + C26939 + C26939 + C24104 * C1900) *
                C153874 +
            (C24114 * C5702 + C26940 + C26940 + C153887 * C5708 +
             C24112 * C4304 + C26941 + C26941 + C24105 * C4312 +
             C24110 * C1891 + C26942 + C26942 + C24104 * C1901) *
                C153903 +
            (C24114 * C5703 + C26943 + C26943 + C153887 * C5709 +
             C24112 * C4303 + C26944 + C26944 + C24105 * C4311 +
             C24110 * C1892 + C26945 + C26945 + C24104 * C1902) *
                C153922) *
               C153626 * C153591) *
              C1601) *
         C153492) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C28350 * C136 + C28361 + C28361 + C28344 * C152 + C28352 * C329 +
            C28362 + C28362 + C28345 * C353 + C28354 * C330 + C28363 + C28363 +
            C28346 * C354 + C28356 * C1319 + C28364 + C28364 + C28347 * C1329 +
            C28358 * C3127 + C28365 + C28365 + C28348 * C3135) *
               C153454 * C153626 * C153838 -
           (C28358 * C5703 + C28657 + C28657 + C28348 * C5709 + C28356 * C4303 +
            C28658 + C28658 + C28347 * C4311 + C28354 * C1892 + C28659 +
            C28659 + C28346 * C1902 + C28352 * C1057 + C28660 + C28660 +
            C28345 * C1069 + C28350 * C542 + C28661 + C28661 + C28344 * C566) *
               C153454 * C153626 * C153591) *
              C153908 +
          ((C28350 * C1057 + C29099 + C29099 + C28344 * C1069 + C28352 * C1892 +
            C29100 + C29100 + C28345 * C1902 + C28354 * C4303 + C29101 +
            C29101 + C28346 * C4311 + C28356 * C5703 + C29102 + C29102 +
            C28347 * C5709 + C28358 * C29092 + C29103 + C29103 +
            C28348 * C29096) *
               C153454 * C153626 * C153591 -
           (C28358 * C4723 + C28509 + C28509 + C28348 * C4729 + C28356 * C3127 +
            C28510 + C28510 + C28347 * C3135 + C28354 * C1319 + C28511 +
            C28511 + C28346 * C1329 + C28352 * C330 + C28512 + C28512 +
            C28345 * C354 + C28350 * C329 + C28513 + C28513 + C28344 * C353) *
               C153454 * C153626 * C153838) *
              C153909 +
          ((C28350 * C330 + C28514 + C28514 + C28344 * C354 + C28352 * C1319 +
            C28515 + C28515 + C28345 * C1329 + C28354 * C3127 + C28516 +
            C28516 + C28346 * C3135 + C28356 * C4723 + C28517 + C28517 +
            C28347 * C4729 + C28358 * C28502 + C28518 + C28518 +
            C28348 * C28506) *
               C153454 * C153626 * C153838 -
           (C28358 * C29856 + C29860 + C29860 + C28348 * C29858 +
            C28356 * C29092 + C29861 + C29861 + C28347 * C29096 +
            C28354 * C5703 + C29862 + C29862 + C28346 * C5709 + C28352 * C4303 +
            C29863 + C29863 + C28345 * C4311 + C28350 * C1892 + C29864 +
            C29864 + C28344 * C1902) *
               C153454 * C153626 * C153591) *
              C1601) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
             C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 + C24119 +
             C153887 * C354) *
                C153454 * C153926 +
            (C31259 + C31260 + C31261) * C153454 * C153915 + C31273 * C153890) *
               C153838 -
           ((C31265 + C31266 + C31267) * C153454 * C153890 +
            (C31264 + C31263 + C31262) * C153454 * C153915 +
            (C31261 + C31260 + C31259) * C153454 * C153926) *
               C153591) *
              C153908 +
          (((C32045 + C32046 + C32047) * C153454 * C153926 +
            (C32048 + C32049 + C32050) * C153454 * C153915 +
            (C32663 + C32664 + C32665) * C153454 * C153890) *
               C153591 -
           (C32662 * C153890 + (C32047 + C32046 + C32045) * C153454 * C153915 +
            (C24114 * C1319 + C24435 + C24435 + C153887 * C1329 +
             C24112 * C330 + C24436 + C24436 + C24105 * C354 + C24110 * C329 +
             C24437 + C24437 + C24104 * C353) *
                C153454 * C153926) *
               C153838) *
              C153909 +
          (((C24110 * C330 + C24438 + C24438 + C24104 * C354 + C24112 * C1319 +
             C24439 + C24439 + C24105 * C1329 + C24114 * C3127 + C24440 +
             C24440 + C153887 * C3135) *
                C153454 * C153926 +
            (C33419 + C33420 + C33421) * C153454 * C153915 +
            (C33422 + C33423 + C33424) * C153454 * C153890) *
               C153838 -
           ((C24114 * C30190 + C33404 + C33404 + C153887 * C30194 +
             C24112 * C30191 + C33405 + C33405 + C24105 * C30195 +
             C24110 * C6305 + C33406 + C33406 + C24104 * C6317) *
                C153454 * C153890 +
            (C33424 + C33423 + C33422) * C153454 * C153915 +
            (C33421 + C33420 + C33419) * C153454 * C153926) *
               C153591) *
              C1601) *
         C153492) /
            (p * q * std::sqrt(p + q));
    d2ee[337] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C136 + C161 + C161 + C153608 * C152) * C122 +
                C193 * C123 + C194 * C124 + C195 * C125 + C196 * C126) *
                   C153626 * C153527 * C1223 -
               (C406 * C126 + C407 * C125 + C408 * C124 + C409 * C123 +
                (C134 * C329 + C374 + C374 + C153608 * C353) * C122) *
                   C153626 * C153527 * C153563) *
                  C1225 +
              ((C409 * C122 + C408 * C123 + C407 * C124 + C406 * C125 +
                C762 * C126) *
                   C153626 * C153527 * C153563 -
               (C197 * C126 + C196 * C125 + C195 * C124 + C194 * C123 +
                C193 * C122) *
                   C153626 * C153527 * C1223) *
                  C1226 +
              ((C194 * C122 + C195 * C123 + C196 * C124 + C197 * C125 +
                C198 * C126) *
                   C153626 * C153527 * C1223 -
               ((C134 * C753 + C759 + C759 + C153608 * C755) * C126 +
                C762 * C125 + C406 * C124 + C407 * C123 + C408 * C122) *
                   C153626 * C153527 * C153563) *
                  C1227) +
         std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             (((C134 * C136 + C161 + C161 + C153608 * C152) * C122 +
               C193 * C123 + C194 * C124 + C195 * C125 + C196 * C126) *
                  C153626 * C153527 * C1310 -
              (C406 * C126 + C407 * C125 + C408 * C124 + C409 * C123 +
               (C134 * C329 + C374 + C374 + C153608 * C353) * C122) *
                  C153626 * C153527 * C1311 +
              ((C134 * C330 + C375 + C375 + C153608 * C354) * C122 +
               C410 * C123 + C411 * C124 + C412 * C125 + C413 * C126) *
                  C153626 * C153527 * C1312 -
              ((C134 * C1315 + C1331 + C1331 + C153608 * C1325) * C126 +
               (C134 * C1316 + C1332 + C1332 + C153608 * C1326) * C125 +
               (C134 * C1317 + C1333 + C1333 + C153608 * C1327) * C124 +
               (C134 * C1318 + C1334 + C1334 + C153608 * C1328) * C123 +
               (C134 * C1319 + C1335 + C1335 + C153608 * C1329) * C122) *
                  C153626 * C153527 * C1313) *
             C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153608 * C152) * C122 + C193 * C123 +
            C194 * C124 + C195 * C125 + C196 * C126) *
               C153626 * C535 -
           (C619 * C126 + C620 * C125 + C621 * C124 + C622 * C123 +
            (C134 * C542 + C587 + C587 + C153608 * C566) * C122) *
               C153626 * C536 +
           ((C134 * C543 + C588 + C588 + C153608 * C567) * C122 + C623 * C123 +
            C624 * C124 + C625 * C125 + C626 * C126) *
               C153626 * C537) *
              C1223 +
          (((C134 * C1057 + C1076 + C1076 + C153608 * C1069) * C122 +
            C1098 * C123 + C1099 * C124 + C1100 * C125 + C1101 * C126) *
               C153626 * C536 -
           (C406 * C126 + C407 * C125 + C408 * C124 + C409 * C123 +
            (C134 * C329 + C374 + C374 + C153608 * C353) * C122) *
               C153626 * C535 -
           ((C134 * C1457 + C1473 + C1473 + C153608 * C1467) * C126 +
            (C134 * C1458 + C1474 + C1474 + C153608 * C1468) * C125 +
            (C134 * C1459 + C1475 + C1475 + C153608 * C1469) * C124 +
            (C134 * C1460 + C1476 + C1476 + C153608 * C1470) * C123 +
            (C134 * C1461 + C1477 + C1477 + C153608 * C1471) * C122) *
               C153626 * C537) *
              C153563) *
         C153492) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
             C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
             C153887 * C354) *
                C2818 +
            (C2894 + C2895 + C2896) * C2819 + C2908 * C153874) *
               C153626 * C153527 * C1223 -
           (C3766 * C153874 + (C3215 + C3216 + C3217) * C2819 +
            (C2825 * C1319 + C3158 + C3158 + C153887 * C1329 + C2823 * C330 +
             C3159 + C3159 + C153913 * C354 + C2821 * C329 + C3160 + C3160 +
             C153925 * C353) *
                C2818) *
               C153626 * C153527 * C153563) *
              C1225 +
          (((C3217 + C3216 + C3215) * C2818 + (C3214 + C3213 + C3212) * C2819 +
            (C3773 + C3774 + C3775) * C153874) *
               C153626 * C153527 * C153563 -
           (C2909 * C153874 + (C2899 + C2898 + C2897) * C2819 +
            (C2896 + C2895 + C2894) * C2818) *
               C153626 * C153527 * C1223) *
              C1226 +
          ((C2908 * C2818 + (C2902 + C2901 + C2900) * C2819 +
            (C2903 + C2904 + C2905) * C153874) *
               C153626 * C153527 * C1223 -
           ((C2825 * C1315 + C3763 + C3763 + C153887 * C1325 + C2823 * C334 +
             C3764 + C3764 + C153913 * C358 + C2821 * C325 + C3765 + C3765 +
             C153925 * C349) *
                C153874 +
            (C3775 + C3774 + C3773) * C2819 + C3766 * C2818) *
               C153626 * C153527 * C153563) *
              C1227)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
            C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
            C153887 * C354) *
               C2818 +
           (C2894 + C2895 + C2896) * C2819 + C2908 * C153874) *
              C153626 * C153527 * C1310 -
          (C3766 * C153874 + (C3215 + C3216 + C3217) * C2819 +
           (C2825 * C1319 + C3158 + C3158 + C153887 * C1329 + C2823 * C330 +
            C3159 + C3159 + C153913 * C354 + C2821 * C329 + C3160 + C3160 +
            C153925 * C353) *
               C2818) *
              C153626 * C153527 * C1311 +
          ((C2821 * C330 + C3161 + C3161 + C153925 * C354 + C2823 * C1319 +
            C3162 + C3162 + C153913 * C1329 + C2825 * C3127 + C3163 + C3163 +
            C153887 * C3135) *
               C2818 +
           (C3218 + C3219 + C3220) * C2819 +
           (C3221 + C3222 + C3223) * C153874) *
              C153626 * C153527 * C1312 -
          ((C2825 * C4721 + C4731 + C4731 + C153887 * C4727 + C2823 * C3129 +
            C4732 + C4732 + C153913 * C3137 + C2821 * C1317 + C4733 + C4733 +
            C153925 * C1327) *
               C153874 +
           (C2825 * C4722 + C4734 + C4734 + C153887 * C4728 + C2823 * C3128 +
            C4735 + C4735 + C153913 * C3136 + C2821 * C1318 + C4736 + C4736 +
            C153925 * C1328) *
               C2819 +
           (C2825 * C4723 + C4737 + C4737 + C153887 * C4729 + C2823 * C3127 +
            C4738 + C4738 + C153913 * C3135 + C2821 * C1319 + C4739 + C4739 +
            C153925 * C1329) *
               C2818) *
              C153626 * C153527 * C1313) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
             C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
             C153887 * C354) *
                C2818 +
            (C2894 + C2895 + C2896) * C2819 + C2908 * C153874) *
               C153626 * C535 -
           (C4004 * C153874 + (C3529 + C3530 + C3531) * C2819 +
            (C2825 * C1892 + C3472 + C3472 + C153887 * C1902 + C2823 * C1057 +
             C3473 + C3473 + C153913 * C1069 + C2821 * C542 + C3474 + C3474 +
             C153925 * C566) *
                C2818) *
               C153626 * C536 +
           ((C2821 * C543 + C3475 + C3475 + C153925 * C567 + C2823 * C1461 +
             C3476 + C3476 + C153913 * C1471 + C2825 * C3441 + C3477 + C3477 +
             C153887 * C3449) *
                C2818 +
            (C3532 + C3533 + C3534) * C2819 +
            (C3535 + C3536 + C3537) * C153874) *
               C153626 * C537) *
              C1223 +
          (((C2821 * C1057 + C4316 + C4316 + C153925 * C1069 + C2823 * C1892 +
             C4317 + C4317 + C153913 * C1902 + C2825 * C4303 + C4318 + C4318 +
             C153887 * C4311) *
                C2818 +
            (C4352 + C4353 + C4354) * C2819 +
            (C4355 + C4356 + C4357) * C153874) *
               C153626 * C536 -
           (C3766 * C153874 + (C3215 + C3216 + C3217) * C2819 +
            (C2825 * C1319 + C3158 + C3158 + C153887 * C1329 + C2823 * C330 +
             C3159 + C3159 + C153913 * C354 + C2821 * C329 + C3160 + C3160 +
             C153925 * C353) *
                C2818) *
               C153626 * C535 -
           ((C2825 * C4957 + C4967 + C4967 + C153887 * C4963 + C2823 * C3443 +
             C4968 + C4968 + C153913 * C3451 + C2821 * C1459 + C4969 + C4969 +
             C153925 * C1469) *
                C153874 +
            (C2825 * C4958 + C4970 + C4970 + C153887 * C4964 + C2823 * C3442 +
             C4971 + C4971 + C153913 * C3450 + C2821 * C1460 + C4972 + C4972 +
             C153925 * C1470) *
                C2819 +
            (C2825 * C4959 + C4973 + C4973 + C153887 * C4965 + C2823 * C3441 +
             C4974 + C4974 + C153913 * C3449 + C2821 * C1461 + C4975 + C4975 +
             C153925 * C1471) *
                C2818) *
               C153626 * C537) *
              C153563) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C2818 +
             C193 * C2819 + C194 * C153874) *
                C153926 +
            (C7742 + C7688 + C7689) * C153915 + C7751 * C153890) *
               C153527 * C1223 -
           ((C8499 + C8498 + C8527) * C153890 +
            (C8495 + C8494 + C8526) * C153915 +
            (C408 * C153874 + C409 * C2819 +
             (C134 * C329 + C374 + C374 + C153608 * C353) * C2818) *
                C153926) *
               C153527 * C153563) *
              C1225 +
          (((C409 * C2818 + C408 * C2819 + C407 * C153874) * C153926 +
            (C8507 + C8508 + C8509) * C153915 +
            (C8510 + C8511 + C8512) * C153890) *
               C153527 * C153563 -
           (C7733 * C153890 + (C7709 + C7708 + C7707) * C153915 +
            (C195 * C153874 + C194 * C2819 + C193 * C2818) * C153926) *
               C153527 * C1223) *
              C1226 +
          (((C194 * C2818 + C195 * C2819 + C196 * C153874) * C153926 +
            (C8193 + C8194 + C8195) * C153915 +
            (C8196 + C8197 + C8198) * C153890) *
               C153527 * C1223 -
           (((C134 * C1457 + C1473 + C1473 + C153608 * C1467) * C153874 +
             C7974 * C2819 + C7450 * C2818) *
                C153890 +
            (C1101 * C153874 + C1100 * C2819 + C1099 * C2818) * C153915 +
            (C406 * C153874 + C407 * C2819 + C408 * C2818) * C153926) *
               C153527 * C153563) *
              C1227)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153608 * C152) * C2818 +
            C193 * C2819 + C194 * C153874) *
               C153926 +
           (C7742 + C7688 + C7689) * C153915 + C7751 * C153890) *
              C153527 * C1310 -
          ((C8499 + C8498 + C8527) * C153890 +
           (C8495 + C8494 + C8526) * C153915 +
           (C408 * C153874 + C409 * C2819 +
            (C134 * C329 + C374 + C374 + C153608 * C353) * C2818) *
               C153926) *
              C153527 * C1311 +
          (((C134 * C330 + C375 + C375 + C153608 * C354) * C2818 +
            C410 * C2819 + C411 * C153874) *
               C153926 +
           ((C134 * C1892 + C1908 + C1908 + C153608 * C1902) * C2818 +
            C7452 * C2819 + C7453 * C153874) *
               C153915 +
           ((C134 * C3441 + C7430 + C7430 + C153608 * C3449) * C2818 +
            C7454 * C2819 + C7455 * C153874) *
               C153890) *
              C153527 * C1312 -
          (((C134 * C4957 + C8892 + C8892 + C153608 * C4963) * C153874 +
            (C134 * C4958 + C8893 + C8893 + C153608 * C4964) * C2819 +
            (C134 * C4959 + C8894 + C8894 + C153608 * C4965) * C2818) *
               C153890 +
           ((C134 * C4305 + C8895 + C8895 + C153608 * C4313) * C153874 +
            (C134 * C4304 + C8896 + C8896 + C153608 * C4312) * C2819 +
            (C134 * C4303 + C8897 + C8897 + C153608 * C4311) * C2818) *
               C153915 +
           ((C134 * C1317 + C1333 + C1333 + C153608 * C1327) * C153874 +
            (C134 * C1318 + C1334 + C1334 + C153608 * C1328) * C2819 +
            (C134 * C1319 + C1335 + C1335 + C153608 * C1329) * C2818) *
               C153926) *
              C153527 * C1313) *
         C153492) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C2818 +
             C193 * C2819 + C194 * C153874) *
                C153926 +
            (C7742 + C7688 + C7689) * C153915 + C7751 * C153890) *
               C535 -
           ((C7744 + C7745 + C7746) * C153890 +
            (C7693 + C7692 + C7743) * C153915 +
            (C7689 + C7688 + C7742) * C153926) *
               C536 +
           (C7751 * C153926 + (C7746 + C7745 + C7744) * C153915 +
            ((C134 * C7673 + C7700 + C7700 + C153608 * C7681) * C2818 +
             C7739 * C2819 + C7740 * C153874) *
                C153890) *
               C537) *
              C1223 +
          (((C8526 + C8494 + C8495) * C153926 +
            (C8527 + C8498 + C8499) * C153915 +
            (C9137 + C9127 + C9128) * C153890) *
               C536 -
           (C9134 * C153890 + (C8495 + C8494 + C8526) * C153915 +
            (C408 * C153874 + C409 * C2819 +
             (C134 * C329 + C374 + C374 + C153608 * C353) * C2818) *
                C153926) *
               C535 -
           (((C134 * C9115 + C9130 + C9130 + C153608 * C9121) * C153874 +
             (C134 * C9116 + C9131 + C9131 + C153608 * C9122) * C2819 +
             (C134 * C9117 + C9132 + C9132 + C153608 * C9123) * C2818) *
                C153890 +
            (C9128 + C9127 + C9137) * C153915 + C9134 * C153926) *
               C537) *
              C153563) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
             C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 + C24119 +
             C153887 * C354) *
                C153922 +
            (C24183 + C24184 + C24185) * C153903 + C24197 * C153874) *
               C153626 * C153527 * C1223 -
           (C25031 * C153874 + (C24492 + C24493 + C24494) * C153903 +
            (C24114 * C1319 + C24435 + C24435 + C153887 * C1329 +
             C24112 * C330 + C24436 + C24436 + C24105 * C354 + C24110 * C329 +
             C24437 + C24437 + C24104 * C353) *
                C153922) *
               C153626 * C153527 * C153563) *
              C1225 +
          (((C24494 + C24493 + C24492) * C153922 +
            (C24491 + C24490 + C24489) * C153903 +
            (C25038 + C25039 + C25040) * C153874) *
               C153626 * C153527 * C153563 -
           (C24198 * C153874 + (C24188 + C24187 + C24186) * C153903 +
            (C24185 + C24184 + C24183) * C153922) *
               C153626 * C153527 * C1223) *
              C1226 +
          ((C24197 * C153922 + (C24191 + C24190 + C24189) * C153903 +
            (C24192 + C24193 + C24194) * C153874) *
               C153626 * C153527 * C1223 -
           ((C24114 * C1315 + C25028 + C25028 + C153887 * C1325 +
             C24112 * C334 + C25029 + C25029 + C24105 * C358 + C24110 * C325 +
             C25030 + C25030 + C24104 * C349) *
                C153874 +
            (C25040 + C25039 + C25038) * C153903 + C25031 * C153922) *
               C153626 * C153527 * C153563) *
              C1227)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
            C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 + C24119 +
            C153887 * C354) *
               C153922 +
           (C24183 + C24184 + C24185) * C153903 + C24197 * C153874) *
              C153626 * C153527 * C1310 -
          (C25031 * C153874 + (C24492 + C24493 + C24494) * C153903 +
           (C24114 * C1319 + C24435 + C24435 + C153887 * C1329 + C24112 * C330 +
            C24436 + C24436 + C24105 * C354 + C24110 * C329 + C24437 + C24437 +
            C24104 * C353) *
               C153922) *
              C153626 * C153527 * C1311 +
          ((C24110 * C330 + C24438 + C24438 + C24104 * C354 + C24112 * C1319 +
            C24439 + C24439 + C24105 * C1329 + C24114 * C3127 + C24440 +
            C24440 + C153887 * C3135) *
               C153922 +
           (C24495 + C24496 + C24497) * C153903 +
           (C24498 + C24499 + C24500) * C153874) *
              C153626 * C153527 * C1312 -
          ((C24114 * C4721 + C25975 + C25975 + C153887 * C4727 +
            C24112 * C3129 + C25976 + C25976 + C24105 * C3137 + C24110 * C1317 +
            C25977 + C25977 + C24104 * C1327) *
               C153874 +
           (C24114 * C4722 + C25978 + C25978 + C153887 * C4728 +
            C24112 * C3128 + C25979 + C25979 + C24105 * C3136 + C24110 * C1318 +
            C25980 + C25980 + C24104 * C1328) *
               C153903 +
           (C24114 * C4723 + C25981 + C25981 + C153887 * C4729 +
            C24112 * C3127 + C25982 + C25982 + C24105 * C3135 + C24110 * C1319 +
            C25983 + C25983 + C24104 * C1329) *
               C153922) *
              C153626 * C153527 * C1313) *
         C153492) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
             C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 + C24119 +
             C153887 * C354) *
                C153922 +
            (C24183 + C24184 + C24185) * C153903 + C24197 * C153874) *
               C153626 * C535 -
           (C25269 * C153874 + (C24794 + C24795 + C24796) * C153903 +
            (C24114 * C1892 + C24737 + C24737 + C153887 * C1902 +
             C24112 * C1057 + C24738 + C24738 + C24105 * C1069 + C24110 * C542 +
             C24739 + C24739 + C24104 * C566) *
                C153922) *
               C153626 * C536 +
           ((C24110 * C543 + C24740 + C24740 + C24104 * C567 + C24112 * C1461 +
             C24741 + C24741 + C24105 * C1471 + C24114 * C3441 + C24742 +
             C24742 + C153887 * C3449) *
                C153922 +
            (C24797 + C24798 + C24799) * C153903 +
            (C24800 + C24801 + C24802) * C153874) *
               C153626 * C537) *
              C1223 +
          (((C24110 * C1057 + C25569 + C25569 + C24104 * C1069 +
             C24112 * C1892 + C25570 + C25570 + C24105 * C1902 +
             C24114 * C4303 + C25571 + C25571 + C153887 * C4311) *
                C153922 +
            (C25605 + C25606 + C25607) * C153903 +
            (C25608 + C25609 + C25610) * C153874) *
               C153626 * C536 -
           (C25031 * C153874 + (C24492 + C24493 + C24494) * C153903 +
            (C24114 * C1319 + C24435 + C24435 + C153887 * C1329 +
             C24112 * C330 + C24436 + C24436 + C24105 * C354 + C24110 * C329 +
             C24437 + C24437 + C24104 * C353) *
                C153922) *
               C153626 * C535 -
           ((C24114 * C4957 + C26202 + C26202 + C153887 * C4963 +
             C24112 * C3443 + C26203 + C26203 + C24105 * C3451 +
             C24110 * C1459 + C26204 + C26204 + C24104 * C1469) *
                C153874 +
            (C24114 * C4958 + C26205 + C26205 + C153887 * C4964 +
             C24112 * C3442 + C26206 + C26206 + C24105 * C3450 +
             C24110 * C1460 + C26207 + C26207 + C24104 * C1470) *
                C153903 +
            (C24114 * C4959 + C26208 + C26208 + C153887 * C4965 +
             C24112 * C3441 + C26209 + C26209 + C24105 * C3449 +
             C24110 * C1461 + C26210 + C26210 + C24104 * C1471) *
                C153922) *
               C153626 * C537) *
              C153563) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C28350 * C136 + C28361 + C28361 + C28344 * C152 + C28352 * C329 +
            C28362 + C28362 + C28345 * C353 + C28354 * C330 + C28363 + C28363 +
            C28346 * C354 + C28356 * C1319 + C28364 + C28364 + C28347 * C1329 +
            C28358 * C3127 + C28365 + C28365 + C28348 * C3135) *
               C153454 * C153626 * C153527 * C1223 -
           (C28358 * C4723 + C28509 + C28509 + C28348 * C4729 + C28356 * C3127 +
            C28510 + C28510 + C28347 * C3135 + C28354 * C1319 + C28511 +
            C28511 + C28346 * C1329 + C28352 * C330 + C28512 + C28512 +
            C28345 * C354 + C28350 * C329 + C28513 + C28513 + C28344 * C353) *
               C153454 * C153626 * C153527 * C153563) *
              C1225 +
          ((C28350 * C328 + C28519 + C28519 + C28344 * C352 + C28352 * C331 +
            C28520 + C28520 + C28345 * C355 + C28354 * C1318 + C28521 + C28521 +
            C28346 * C1328 + C28356 * C3128 + C28522 + C28522 + C28347 * C3136 +
            C28358 * C4722 + C28523 + C28523 + C28348 * C4728) *
               C153454 * C153626 * C153527 * C153563 -
           (C28358 * C3128 + C28366 + C28366 + C28348 * C3136 + C28356 * C1318 +
            C28367 + C28367 + C28347 * C1328 + C28354 * C331 + C28368 + C28368 +
            C28346 * C355 + C28352 * C328 + C28369 + C28369 + C28345 * C352 +
            C28350 * C137 + C28370 + C28370 + C28344 * C153) *
               C153454 * C153626 * C153527 * C1223) *
              C1226 +
          ((C28350 * C138 + C28371 + C28371 + C28344 * C154 + C28352 * C327 +
            C28372 + C28372 + C28345 * C351 + C28354 * C332 + C28373 + C28373 +
            C28346 * C356 + C28356 * C1317 + C28374 + C28374 + C28347 * C1327 +
            C28358 * C3129 + C28375 + C28375 + C28348 * C3137) *
               C153454 * C153626 * C153527 * C1223 -
           (C28358 * C4721 + C28799 + C28799 + C28348 * C4727 + C28356 * C3129 +
            C28800 + C28800 + C28347 * C3137 + C28354 * C1317 + C28801 +
            C28801 + C28346 * C1327 + C28352 * C332 + C28802 + C28802 +
            C28345 * C356 + C28350 * C327 + C28803 + C28803 + C28344 * C351) *
               C153454 * C153626 * C153527 * C153563) *
              C1227)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((C28350 * C136 + C28361 + C28361 + C28344 * C152 + C28352 * C329 +
           C28362 + C28362 + C28345 * C353 + C28354 * C330 + C28363 + C28363 +
           C28346 * C354 + C28356 * C1319 + C28364 + C28364 + C28347 * C1329 +
           C28358 * C3127 + C28365 + C28365 + C28348 * C3135) *
              C153454 * C153626 * C153527 * C1310 -
          (C28358 * C4723 + C28509 + C28509 + C28348 * C4729 + C28356 * C3127 +
           C28510 + C28510 + C28347 * C3135 + C28354 * C1319 + C28511 + C28511 +
           C28346 * C1329 + C28352 * C330 + C28512 + C28512 + C28345 * C354 +
           C28350 * C329 + C28513 + C28513 + C28344 * C353) *
              C153454 * C153626 * C153527 * C1311 +
          (C28350 * C330 + C28514 + C28514 + C28344 * C354 + C28352 * C1319 +
           C28515 + C28515 + C28345 * C1329 + C28354 * C3127 + C28516 + C28516 +
           C28346 * C3135 + C28356 * C4723 + C28517 + C28517 + C28347 * C4729 +
           C28358 * C28502 + C28518 + C28518 + C28348 * C28506) *
              C153454 * C153626 * C153527 * C1312 -
          (C28358 * C29312 + C29316 + C29316 + C28348 * C29314 +
           C28356 * C28502 + C29317 + C29317 + C28347 * C28506 +
           C28354 * C4723 + C29318 + C29318 + C28346 * C4729 + C28352 * C3127 +
           C29319 + C29319 + C28345 * C3135 + C28350 * C1319 + C29320 + C29320 +
           C28344 * C1329) *
              C153454 * C153626 * C153527 * C1313) *
         C153492) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C28350 * C136 + C28361 + C28361 + C28344 * C152 + C28352 * C329 +
            C28362 + C28362 + C28345 * C353 + C28354 * C330 + C28363 + C28363 +
            C28346 * C354 + C28356 * C1319 + C28364 + C28364 + C28347 * C1329 +
            C28358 * C3127 + C28365 + C28365 + C28348 * C3135) *
               C153454 * C153626 * C535 -
           (C28358 * C5703 + C28657 + C28657 + C28348 * C5709 + C28356 * C4303 +
            C28658 + C28658 + C28347 * C4311 + C28354 * C1892 + C28659 +
            C28659 + C28346 * C1902 + C28352 * C1057 + C28660 + C28660 +
            C28345 * C1069 + C28350 * C542 + C28661 + C28661 + C28344 * C566) *
               C153454 * C153626 * C536 +
           (C28350 * C543 + C28662 + C28662 + C28344 * C567 + C28352 * C1461 +
            C28663 + C28663 + C28345 * C1471 + C28354 * C3441 + C28664 +
            C28664 + C28346 * C3449 + C28356 * C4959 + C28665 + C28665 +
            C28347 * C4965 + C28358 * C28650 + C28666 + C28666 +
            C28348 * C28654) *
               C153454 * C153626 * C537) *
              C1223 +
          ((C28350 * C1057 + C29099 + C29099 + C28344 * C1069 + C28352 * C1892 +
            C29100 + C29100 + C28345 * C1902 + C28354 * C4303 + C29101 +
            C29101 + C28346 * C4311 + C28356 * C5703 + C29102 + C29102 +
            C28347 * C5709 + C28358 * C29092 + C29103 + C29103 +
            C28348 * C29096) *
               C153454 * C153626 * C536 -
           (C28358 * C4723 + C28509 + C28509 + C28348 * C4729 + C28356 * C3127 +
            C28510 + C28510 + C28347 * C3135 + C28354 * C1319 + C28511 +
            C28511 + C28346 * C1329 + C28352 * C330 + C28512 + C28512 +
            C28345 * C354 + C28350 * C329 + C28513 + C28513 + C28344 * C353) *
               C153454 * C153626 * C535 -
           (C28358 * C29442 + C29446 + C29446 + C28348 * C29444 +
            C28356 * C28650 + C29447 + C29447 + C28347 * C28654 +
            C28354 * C4959 + C29448 + C29448 + C28346 * C4965 + C28352 * C3441 +
            C29449 + C29449 + C28345 * C3449 + C28350 * C1461 + C29450 +
            C29450 + C28344 * C1471) *
               C153454 * C153626 * C537) *
              C153563) *
         C153492) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
             C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 + C24119 +
             C153887 * C354) *
                C153454 * C153926 +
            (C31259 + C31260 + C31261) * C153454 * C153915 + C31273 * C153890) *
               C153527 * C1223 -
           ((C32050 + C32049 + C32048) * C153454 * C153890 +
            (C32047 + C32046 + C32045) * C153454 * C153915 +
            (C24114 * C1319 + C24435 + C24435 + C153887 * C1329 +
             C24112 * C330 + C24436 + C24436 + C24105 * C354 + C24110 * C329 +
             C24437 + C24437 + C24104 * C353) *
                C153454 * C153926) *
               C153527 * C153563) *
              C1225 +
          (((C24494 + C24493 + C24492) * C153454 * C153926 +
            (C25605 + C25606 + C25607) * C153454 * C153915 +
            (C32051 + C32052 + C32053) * C153454 * C153890) *
               C153527 * C153563 -
           (C31258 * C153890 + (C24794 + C24795 + C24796) * C153454 * C153915 +
            (C24185 + C24184 + C24183) * C153454 * C153926) *
               C153527 * C1223) *
              C1226 +
          ((C24197 * C153454 * C153926 +
            (C24793 + C24792 + C24791) * C153454 * C153915 +
            (C24800 + C24801 + C24802) * C153454 * C153890) *
               C153527 * C1223 -
           ((C24114 * C4957 + C26202 + C26202 + C153887 * C4963 +
             C24112 * C3443 + C26203 + C26203 + C24105 * C3451 +
             C24110 * C1459 + C26204 + C26204 + C24104 * C1469) *
                C153454 * C153890 +
            (C25610 + C25609 + C25608) * C153454 * C153915 +
            C25031 * C153454 * C153926) *
               C153527 * C153563) *
              C1227)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
            C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 + C24119 +
            C153887 * C354) *
               C153454 * C153926 +
           (C31259 + C31260 + C31261) * C153454 * C153915 + C31273 * C153890) *
              C153527 * C1310 -
          ((C32050 + C32049 + C32048) * C153454 * C153890 +
           (C32047 + C32046 + C32045) * C153454 * C153915 +
           (C24114 * C1319 + C24435 + C24435 + C153887 * C1329 + C24112 * C330 +
            C24436 + C24436 + C24105 * C354 + C24110 * C329 + C24437 + C24437 +
            C24104 * C353) *
               C153454 * C153926) *
              C153527 * C1311 +
          ((C24110 * C330 + C24438 + C24438 + C24104 * C354 + C24112 * C1319 +
            C24439 + C24439 + C24105 * C1329 + C24114 * C3127 + C24440 +
            C24440 + C153887 * C3135) *
               C153454 * C153926 +
           (C24110 * C1892 + C26945 + C26945 + C24104 * C1902 + C24112 * C4303 +
            C26944 + C26944 + C24105 * C4311 + C24114 * C5703 + C26943 +
            C26943 + C153887 * C5709) *
               C153454 * C153915 +
           (C24110 * C3441 + C30972 + C30972 + C24104 * C3449 + C24112 * C4959 +
            C30973 + C30973 + C24105 * C4965 + C24114 * C28650 + C30974 +
            C30974 + C153887 * C28654) *
               C153454 * C153890) *
              C153527 * C1312 -
          ((C24114 * C29442 + C32418 + C32418 + C153887 * C29444 +
            C24112 * C28650 + C32419 + C32419 + C24105 * C28654 +
            C24110 * C4959 + C32420 + C32420 + C24104 * C4965) *
               C153454 * C153890 +
           (C24114 * C29092 + C32421 + C32421 + C153887 * C29096 +
            C24112 * C5703 + C32422 + C32422 + C24105 * C5709 + C24110 * C4303 +
            C32423 + C32423 + C24104 * C4311) *
               C153454 * C153915 +
           (C24114 * C4723 + C25981 + C25981 + C153887 * C4729 +
            C24112 * C3127 + C25982 + C25982 + C24105 * C3135 + C24110 * C1319 +
            C25983 + C25983 + C24104 * C1329) *
               C153454 * C153926) *
              C153527 * C1313) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
             C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 + C24119 +
             C153887 * C354) *
                C153454 * C153926 +
            (C31259 + C31260 + C31261) * C153454 * C153915 + C31273 * C153890) *
               C535 -
           ((C31265 + C31266 + C31267) * C153454 * C153890 +
            (C31264 + C31263 + C31262) * C153454 * C153915 +
            (C31261 + C31260 + C31259) * C153454 * C153926) *
               C536 +
           (C31273 * C153926 + (C31267 + C31266 + C31265) * C153454 * C153915 +
            (C24110 * C7673 + C31220 + C31220 + C24104 * C7681 +
             C24112 * C9117 + C31221 + C31221 + C24105 * C9123 +
             C24114 * C31195 + C31222 + C31222 + C153887 * C31199) *
                C153454 * C153890) *
               C537) *
              C1223 +
          (((C32045 + C32046 + C32047) * C153454 * C153926 +
            (C32048 + C32049 + C32050) * C153454 * C153915 +
            (C32663 + C32664 + C32665) * C153454 * C153890) *
               C536 -
           (C32662 * C153890 + (C32047 + C32046 + C32045) * C153454 * C153915 +
            (C24114 * C1319 + C24435 + C24435 + C153887 * C1329 +
             C24112 * C330 + C24436 + C24436 + C24105 * C354 + C24110 * C329 +
             C24437 + C24437 + C24104 * C353) *
                C153454 * C153926) *
               C535 -
           ((C24114 * C32641 + C32652 + C32652 + C153887 * C32643 +
             C24112 * C31195 + C32653 + C32653 + C24105 * C31199 +
             C24110 * C9117 + C32654 + C32654 + C24104 * C9123) *
                C153454 * C153890 +
            (C32665 + C32664 + C32663) * C153454 * C153915 + C32662 * C153926) *
               C537) *
              C153563) *
         C153492) /
            (p * q * std::sqrt(p + q));
    d2ee[338] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
              C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
              C153887 * C354) *
                 C2818 +
             (C2894 + C2895 + C2896) * C2819 + C2908 * C153874) *
                C153626 * C153838 -
            (C4004 * C153874 + (C3529 + C3530 + C3531) * C2819 +
             (C2825 * C1892 + C3472 + C3472 + C153887 * C1902 + C2823 * C1057 +
              C3473 + C3473 + C153913 * C1069 + C2821 * C542 + C3474 + C3474 +
              C153925 * C566) *
                 C2818) *
                C153626 * C153591) *
               C1223 +
           (((C2821 * C1057 + C4316 + C4316 + C153925 * C1069 + C2823 * C1892 +
              C4317 + C4317 + C153913 * C1902 + C2825 * C4303 + C4318 + C4318 +
              C153887 * C4311) *
                 C2818 +
             (C4352 + C4353 + C4354) * C2819 +
             (C4355 + C4356 + C4357) * C153874) *
                C153626 * C153591 -
            (C3766 * C153874 + (C3215 + C3216 + C3217) * C2819 +
             (C2825 * C1319 + C3158 + C3158 + C153887 * C1329 + C2823 * C330 +
              C3159 + C3159 + C153913 * C354 + C2821 * C329 + C3160 + C3160 +
              C153925 * C353) *
                 C2818) *
                C153626 * C153838) *
               C153563) *
              C153829 +
          ((((C3531 + C3530 + C3529) * C2818 + (C3528 + C3527 + C3526) * C2819 +
             (C4011 + C4012 + C4013) * C153874) *
                C153626 * C153591 -
            (C2909 * C153874 + (C2899 + C2898 + C2897) * C2819 +
             (C2896 + C2895 + C2894) * C2818) *
                C153626 * C153838) *
               C1223 +
           (((C3217 + C3216 + C3215) * C2818 + (C3214 + C3213 + C3212) * C2819 +
             (C3773 + C3774 + C3775) * C153874) *
                C153626 * C153838 -
            ((C2825 * C4306 + C4337 + C4337 + C153887 * C4314 + C2823 * C1889 +
              C4338 + C4338 + C153913 * C1899 + C2821 * C1060 + C4339 + C4339 +
              C153925 * C1072) *
                 C153874 +
             (C4357 + C4356 + C4355) * C2819 +
             (C4354 + C4353 + C4352) * C2818) *
                C153626 * C153591) *
               C153563) *
              C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C122 + C193 * C123 +
             C194 * C124 + C195 * C125 + C196 * C126) *
                C153626 * C153838 -
            (C619 * C126 + C620 * C125 + C621 * C124 + C622 * C123 +
             (C134 * C542 + C587 + C587 + C153608 * C566) * C122) *
                C153626 * C153591) *
               C1223 +
           (((C134 * C1057 + C1076 + C1076 + C153608 * C1069) * C122 +
             C1098 * C123 + C1099 * C124 + C1100 * C125 + C1101 * C126) *
                C153626 * C153591 -
            (C406 * C126 + C407 * C125 + C408 * C124 + C409 * C123 +
             (C134 * C329 + C374 + C374 + C153608 * C353) * C122) *
                C153626 * C153838) *
               C153563) *
              C153829 +
          (((C622 * C122 + C621 * C123 + C620 * C124 + C619 * C125 +
             C895 * C126) *
                C153626 * C153591 -
            (C197 * C126 + C196 * C125 + C195 * C124 + C194 * C123 +
             C193 * C122) *
                C153626 * C153838) *
               C1223 +
           ((C409 * C122 + C408 * C123 + C407 * C124 + C406 * C125 +
             C762 * C126) *
                C153626 * C153838 -
            ((C134 * C1062 + C1089 + C1089 + C153608 * C1074) * C126 +
             C1101 * C125 + C1100 * C124 + C1099 * C123 + C1098 * C122) *
                C153626 * C153591) *
               C153563) *
              C153498)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C153608 * C152) * C2818 +
              C193 * C2819 + C194 * C153874) *
                 C153926 +
             (C7742 + C7688 + C7689) * C153915 + C7751 * C153890) *
                C153838 -
            ((C7744 + C7745 + C7746) * C153890 +
             (C7693 + C7692 + C7743) * C153915 +
             (C7689 + C7688 + C7742) * C153926) *
                C153591) *
               C1223 +
           (((C8526 + C8494 + C8495) * C153926 +
             (C8527 + C8498 + C8499) * C153915 +
             (C9137 + C9127 + C9128) * C153890) *
                C153591 -
            (C9134 * C153890 + (C8495 + C8494 + C8526) * C153915 +
             (C408 * C153874 + C409 * C2819 +
              (C134 * C329 + C374 + C374 + C153608 * C353) * C2818) *
                 C153926) *
                C153838) *
               C153563) *
              C153829 +
          ((((C7707 + C7708 + C7709) * C153926 +
             (C7710 + C7711 + C7712) * C153915 +
             (C7747 + C7748 + C7749) * C153890) *
                C153591 -
            (C7733 * C153890 + (C7709 + C7708 + C7707) * C153915 +
             (C195 * C153874 + C194 * C2819 + C193 * C2818) * C153926) *
                C153838) *
               C1223 +
           (((C409 * C2818 + C408 * C2819 + C407 * C153874) * C153926 +
             (C8507 + C8508 + C8509) * C153915 +
             (C8510 + C8511 + C8512) * C153890) *
                C153838 -
            (((C134 * C8488 + C8513 + C8513 + C153608 * C8490) * C153874 +
              C8525 * C2819 + C8524 * C2818) *
                 C153890 +
             (C8512 + C8511 + C8510) * C153915 +
             (C8509 + C8508 + C8507) * C153926) *
                C153591) *
               C153563) *
              C153498)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
              C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 +
              C24119 + C153887 * C354) *
                 C153922 +
             (C24183 + C24184 + C24185) * C153903 + C24197 * C153874) *
                C153626 * C153838 -
            (C25269 * C153874 + (C24794 + C24795 + C24796) * C153903 +
             (C24114 * C1892 + C24737 + C24737 + C153887 * C1902 +
              C24112 * C1057 + C24738 + C24738 + C24105 * C1069 +
              C24110 * C542 + C24739 + C24739 + C24104 * C566) *
                 C153922) *
                C153626 * C153591) *
               C1223 +
           (((C24110 * C1057 + C25569 + C25569 + C24104 * C1069 +
              C24112 * C1892 + C25570 + C25570 + C24105 * C1902 +
              C24114 * C4303 + C25571 + C25571 + C153887 * C4311) *
                 C153922 +
             (C25605 + C25606 + C25607) * C153903 +
             (C25608 + C25609 + C25610) * C153874) *
                C153626 * C153591 -
            (C25031 * C153874 + (C24492 + C24493 + C24494) * C153903 +
             (C24114 * C1319 + C24435 + C24435 + C153887 * C1329 +
              C24112 * C330 + C24436 + C24436 + C24105 * C354 + C24110 * C329 +
              C24437 + C24437 + C24104 * C353) *
                 C153922) *
                C153626 * C153838) *
               C153563) *
              C153829 +
          ((((C24796 + C24795 + C24794) * C153922 +
             (C24793 + C24792 + C24791) * C153903 +
             (C25276 + C25277 + C25278) * C153874) *
                C153626 * C153591 -
            (C24198 * C153874 + (C24188 + C24187 + C24186) * C153903 +
             (C24185 + C24184 + C24183) * C153922) *
                C153626 * C153838) *
               C1223 +
           (((C24494 + C24493 + C24492) * C153922 +
             (C24491 + C24490 + C24489) * C153903 +
             (C25038 + C25039 + C25040) * C153874) *
                C153626 * C153838 -
            ((C24114 * C4306 + C25590 + C25590 + C153887 * C4314 +
              C24112 * C1889 + C25591 + C25591 + C24105 * C1899 +
              C24110 * C1060 + C25592 + C25592 + C24104 * C1072) *
                 C153874 +
             (C25610 + C25609 + C25608) * C153903 +
             (C25607 + C25606 + C25605) * C153922) *
                C153626 * C153591) *
               C153563) *
              C153498)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C28350 * C136 + C28361 + C28361 + C28344 * C152 + C28352 * C329 +
             C28362 + C28362 + C28345 * C353 + C28354 * C330 + C28363 + C28363 +
             C28346 * C354 + C28356 * C1319 + C28364 + C28364 + C28347 * C1329 +
             C28358 * C3127 + C28365 + C28365 + C28348 * C3135) *
                C153454 * C153626 * C153838 -
            (C28358 * C5703 + C28657 + C28657 + C28348 * C5709 +
             C28356 * C4303 + C28658 + C28658 + C28347 * C4311 +
             C28354 * C1892 + C28659 + C28659 + C28346 * C1902 +
             C28352 * C1057 + C28660 + C28660 + C28345 * C1069 + C28350 * C542 +
             C28661 + C28661 + C28344 * C566) *
                C153454 * C153626 * C153591) *
               C1223 +
           ((C28350 * C1057 + C29099 + C29099 + C28344 * C1069 +
             C28352 * C1892 + C29100 + C29100 + C28345 * C1902 +
             C28354 * C4303 + C29101 + C29101 + C28346 * C4311 +
             C28356 * C5703 + C29102 + C29102 + C28347 * C5709 +
             C28358 * C29092 + C29103 + C29103 + C28348 * C29096) *
                C153454 * C153626 * C153591 -
            (C28358 * C4723 + C28509 + C28509 + C28348 * C4729 +
             C28356 * C3127 + C28510 + C28510 + C28347 * C3135 +
             C28354 * C1319 + C28511 + C28511 + C28346 * C1329 + C28352 * C330 +
             C28512 + C28512 + C28345 * C354 + C28350 * C329 + C28513 + C28513 +
             C28344 * C353) *
                C153454 * C153626 * C153838) *
               C153563) *
              C153829 +
          (((C28350 * C541 + C28667 + C28667 + C28344 * C565 + C28352 * C1058 +
             C28668 + C28668 + C28345 * C1070 + C28354 * C1891 + C28669 +
             C28669 + C28346 * C1901 + C28356 * C4304 + C28670 + C28670 +
             C28347 * C4312 + C28358 * C5702 + C28671 + C28671 +
             C28348 * C5708) *
                C153454 * C153626 * C153591 -
            (C28358 * C3128 + C28366 + C28366 + C28348 * C3136 +
             C28356 * C1318 + C28367 + C28367 + C28347 * C1328 + C28354 * C331 +
             C28368 + C28368 + C28346 * C355 + C28352 * C328 + C28369 + C28369 +
             C28345 * C352 + C28350 * C137 + C28370 + C28370 + C28344 * C153) *
                C153454 * C153626 * C153838) *
               C1223 +
           ((C28350 * C328 + C28519 + C28519 + C28344 * C352 + C28352 * C331 +
             C28520 + C28520 + C28345 * C355 + C28354 * C1318 + C28521 +
             C28521 + C28346 * C1328 + C28356 * C3128 + C28522 + C28522 +
             C28347 * C3136 + C28358 * C4722 + C28523 + C28523 +
             C28348 * C4728) *
                C153454 * C153626 * C153838 -
            (C28358 * C29093 + C29104 + C29104 + C28348 * C29097 +
             C28356 * C5702 + C29105 + C29105 + C28347 * C5708 +
             C28354 * C4304 + C29106 + C29106 + C28346 * C4312 +
             C28352 * C1891 + C29107 + C29107 + C28345 * C1901 +
             C28350 * C1058 + C29108 + C29108 + C28344 * C1070) *
                C153454 * C153626 * C153591) *
               C153563) *
              C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
              C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 +
              C24119 + C153887 * C354) *
                 C153454 * C153926 +
             (C31259 + C31260 + C31261) * C153454 * C153915 +
             C31273 * C153890) *
                C153838 -
            ((C31265 + C31266 + C31267) * C153454 * C153890 +
             (C31264 + C31263 + C31262) * C153454 * C153915 +
             (C31261 + C31260 + C31259) * C153454 * C153926) *
                C153591) *
               C1223 +
           (((C32045 + C32046 + C32047) * C153454 * C153926 +
             (C32048 + C32049 + C32050) * C153454 * C153915 +
             (C32663 + C32664 + C32665) * C153454 * C153890) *
                C153591 -
            (C32662 * C153890 + (C32047 + C32046 + C32045) * C153454 * C153915 +
             (C24114 * C1319 + C24435 + C24435 + C153887 * C1329 +
              C24112 * C330 + C24436 + C24436 + C24105 * C354 + C24110 * C329 +
              C24437 + C24437 + C24104 * C353) *
                 C153454 * C153926) *
                C153838) *
               C153563) *
              C153829 +
          ((((C24796 + C24795 + C24794) * C153454 * C153926 +
             (C24797 + C24798 + C24799) * C153454 * C153915 +
             (C31268 + C31269 + C31270) * C153454 * C153890) *
                C153591 -
            (C31258 * C153890 + (C24794 + C24795 + C24796) * C153454 * C153915 +
             (C24185 + C24184 + C24183) * C153454 * C153926) *
                C153838) *
               C1223 +
           (((C24494 + C24493 + C24492) * C153454 * C153926 +
             (C25605 + C25606 + C25607) * C153454 * C153915 +
             (C32051 + C32052 + C32053) * C153454 * C153890) *
                C153838 -
            ((C24114 * C31999 + C32024 + C32024 + C153887 * C32001 +
              C24112 * C6303 + C32025 + C32025 + C24105 * C6315 +
              C24110 * C6304 + C32026 + C32026 + C24104 * C6316) *
                 C153454 * C153890 +
             (C32053 + C32052 + C32051) * C153454 * C153915 +
             (C25607 + C25606 + C25605) * C153454 * C153926) *
                C153591) *
               C153563) *
              C153498)) /
            (p * q * std::sqrt(p + q));
    d2ee[339] +=
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C136 + C161 + C161 + C153608 * C152) * C122 + C193 * C123 +
           C194 * C124 + C195 * C125 + C196 * C126) *
              C153626 * C153527 * C1310 -
          (C406 * C126 + C407 * C125 + C408 * C124 + C409 * C123 +
           (C134 * C329 + C374 + C374 + C153608 * C353) * C122) *
              C153626 * C153527 * C1311 +
          ((C134 * C330 + C375 + C375 + C153608 * C354) * C122 + C410 * C123 +
           C411 * C124 + C412 * C125 + C413 * C126) *
              C153626 * C153527 * C1312 -
          ((C134 * C1315 + C1331 + C1331 + C153608 * C1325) * C126 +
           (C134 * C1316 + C1332 + C1332 + C153608 * C1326) * C125 +
           (C134 * C1317 + C1333 + C1333 + C153608 * C1327) * C124 +
           (C134 * C1318 + C1334 + C1334 + C153608 * C1328) * C123 +
           (C134 * C1319 + C1335 + C1335 + C153608 * C1329) * C122) *
              C153626 * C153527 * C1313) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153608 * C152) * C122 + C193 * C123 +
            C194 * C124 + C195 * C125 + C196 * C126) *
               C153626 * C153527 * C1223 -
           (C406 * C126 + C407 * C125 + C408 * C124 + C409 * C123 +
            (C134 * C329 + C374 + C374 + C153608 * C353) * C122) *
               C153626 * C153527 * C153563) *
              C1225 +
          ((C409 * C122 + C408 * C123 + C407 * C124 + C406 * C125 +
            C762 * C126) *
               C153626 * C153527 * C153563 -
           (C197 * C126 + C196 * C125 + C195 * C124 + C194 * C123 +
            C193 * C122) *
               C153626 * C153527 * C1223) *
              C1226 +
          ((C194 * C122 + C195 * C123 + C196 * C124 + C197 * C125 +
            C198 * C126) *
               C153626 * C153527 * C1223 -
           ((C134 * C753 + C759 + C759 + C153608 * C755) * C126 + C762 * C125 +
            C406 * C124 + C407 * C123 + C408 * C122) *
               C153626 * C153527 * C153563) *
              C1227)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
             C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
             C153887 * C354) *
                C2818 +
            (C2894 + C2895 + C2896) * C2819 + C2908 * C153874) *
               C153626 * C153527 * C1223 -
           (C3766 * C153874 + (C3215 + C3216 + C3217) * C2819 +
            (C2825 * C1319 + C3158 + C3158 + C153887 * C1329 + C2823 * C330 +
             C3159 + C3159 + C153913 * C354 + C2821 * C329 + C3160 + C3160 +
             C153925 * C353) *
                C2818) *
               C153626 * C153527 * C153563) *
              C1225 +
          (((C3217 + C3216 + C3215) * C2818 + (C3214 + C3213 + C3212) * C2819 +
            (C3773 + C3774 + C3775) * C153874) *
               C153626 * C153527 * C153563 -
           (C2909 * C153874 + (C2899 + C2898 + C2897) * C2819 +
            (C2896 + C2895 + C2894) * C2818) *
               C153626 * C153527 * C1223) *
              C1226 +
          ((C2908 * C2818 + (C2902 + C2901 + C2900) * C2819 +
            (C2903 + C2904 + C2905) * C153874) *
               C153626 * C153527 * C1223 -
           ((C2825 * C1315 + C3763 + C3763 + C153887 * C1325 + C2823 * C334 +
             C3764 + C3764 + C153913 * C358 + C2821 * C325 + C3765 + C3765 +
             C153925 * C349) *
                C153874 +
            (C3775 + C3774 + C3773) * C2819 + C3766 * C2818) *
               C153626 * C153527 * C153563) *
              C1227)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
            C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
            C153887 * C354) *
               C2818 +
           (C2894 + C2895 + C2896) * C2819 + C2908 * C153874) *
              C153626 * C153527 * C1310 -
          (C3766 * C153874 + (C3215 + C3216 + C3217) * C2819 +
           (C2825 * C1319 + C3158 + C3158 + C153887 * C1329 + C2823 * C330 +
            C3159 + C3159 + C153913 * C354 + C2821 * C329 + C3160 + C3160 +
            C153925 * C353) *
               C2818) *
              C153626 * C153527 * C1311 +
          ((C2821 * C330 + C3161 + C3161 + C153925 * C354 + C2823 * C1319 +
            C3162 + C3162 + C153913 * C1329 + C2825 * C3127 + C3163 + C3163 +
            C153887 * C3135) *
               C2818 +
           (C3218 + C3219 + C3220) * C2819 +
           (C3221 + C3222 + C3223) * C153874) *
              C153626 * C153527 * C1312 -
          ((C2825 * C4721 + C4731 + C4731 + C153887 * C4727 + C2823 * C3129 +
            C4732 + C4732 + C153913 * C3137 + C2821 * C1317 + C4733 + C4733 +
            C153925 * C1327) *
               C153874 +
           (C2825 * C4722 + C4734 + C4734 + C153887 * C4728 + C2823 * C3128 +
            C4735 + C4735 + C153913 * C3136 + C2821 * C1318 + C4736 + C4736 +
            C153925 * C1328) *
               C2819 +
           (C2825 * C4723 + C4737 + C4737 + C153887 * C4729 + C2823 * C3127 +
            C4738 + C4738 + C153913 * C3135 + C2821 * C1319 + C4739 + C4739 +
            C153925 * C1329) *
               C2818) *
              C153626 * C153527 * C1313) *
         C153492) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C2818 +
             C193 * C2819 + C194 * C153874) *
                C153926 +
            (C7742 + C7688 + C7689) * C153915 + C7751 * C153890) *
               C153527 * C1223 -
           ((C8499 + C8498 + C8527) * C153890 +
            (C8495 + C8494 + C8526) * C153915 +
            (C408 * C153874 + C409 * C2819 +
             (C134 * C329 + C374 + C374 + C153608 * C353) * C2818) *
                C153926) *
               C153527 * C153563) *
              C1225 +
          (((C409 * C2818 + C408 * C2819 + C407 * C153874) * C153926 +
            (C8507 + C8508 + C8509) * C153915 +
            (C8510 + C8511 + C8512) * C153890) *
               C153527 * C153563 -
           (C7733 * C153890 + (C7709 + C7708 + C7707) * C153915 +
            (C195 * C153874 + C194 * C2819 + C193 * C2818) * C153926) *
               C153527 * C1223) *
              C1226 +
          (((C194 * C2818 + C195 * C2819 + C196 * C153874) * C153926 +
            (C8193 + C8194 + C8195) * C153915 +
            (C8196 + C8197 + C8198) * C153890) *
               C153527 * C1223 -
           (((C134 * C1457 + C1473 + C1473 + C153608 * C1467) * C153874 +
             C7974 * C2819 + C7450 * C2818) *
                C153890 +
            (C1101 * C153874 + C1100 * C2819 + C1099 * C2818) * C153915 +
            (C406 * C153874 + C407 * C2819 + C408 * C2818) * C153926) *
               C153527 * C153563) *
              C1227)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153608 * C152) * C2818 +
            C193 * C2819 + C194 * C153874) *
               C153926 +
           (C7742 + C7688 + C7689) * C153915 + C7751 * C153890) *
              C153527 * C1310 -
          ((C8499 + C8498 + C8527) * C153890 +
           (C8495 + C8494 + C8526) * C153915 +
           (C408 * C153874 + C409 * C2819 +
            (C134 * C329 + C374 + C374 + C153608 * C353) * C2818) *
               C153926) *
              C153527 * C1311 +
          (((C134 * C330 + C375 + C375 + C153608 * C354) * C2818 +
            C410 * C2819 + C411 * C153874) *
               C153926 +
           ((C134 * C1892 + C1908 + C1908 + C153608 * C1902) * C2818 +
            C7452 * C2819 + C7453 * C153874) *
               C153915 +
           ((C134 * C3441 + C7430 + C7430 + C153608 * C3449) * C2818 +
            C7454 * C2819 + C7455 * C153874) *
               C153890) *
              C153527 * C1312 -
          (((C134 * C4957 + C8892 + C8892 + C153608 * C4963) * C153874 +
            (C134 * C4958 + C8893 + C8893 + C153608 * C4964) * C2819 +
            (C134 * C4959 + C8894 + C8894 + C153608 * C4965) * C2818) *
               C153890 +
           ((C134 * C4305 + C8895 + C8895 + C153608 * C4313) * C153874 +
            (C134 * C4304 + C8896 + C8896 + C153608 * C4312) * C2819 +
            (C134 * C4303 + C8897 + C8897 + C153608 * C4311) * C2818) *
               C153915 +
           ((C134 * C1317 + C1333 + C1333 + C153608 * C1327) * C153874 +
            (C134 * C1318 + C1334 + C1334 + C153608 * C1328) * C2819 +
            (C134 * C1319 + C1335 + C1335 + C153608 * C1329) * C2818) *
               C153926) *
              C153527 * C1313) *
         C153492) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
             C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 + C24119 +
             C153887 * C354) *
                C153922 +
            (C24183 + C24184 + C24185) * C153903 + C24197 * C153874) *
               C153626 * C153527 * C1223 -
           (C25031 * C153874 + (C24492 + C24493 + C24494) * C153903 +
            (C24114 * C1319 + C24435 + C24435 + C153887 * C1329 +
             C24112 * C330 + C24436 + C24436 + C24105 * C354 + C24110 * C329 +
             C24437 + C24437 + C24104 * C353) *
                C153922) *
               C153626 * C153527 * C153563) *
              C1225 +
          (((C24494 + C24493 + C24492) * C153922 +
            (C24491 + C24490 + C24489) * C153903 +
            (C25038 + C25039 + C25040) * C153874) *
               C153626 * C153527 * C153563 -
           (C24198 * C153874 + (C24188 + C24187 + C24186) * C153903 +
            (C24185 + C24184 + C24183) * C153922) *
               C153626 * C153527 * C1223) *
              C1226 +
          ((C24197 * C153922 + (C24191 + C24190 + C24189) * C153903 +
            (C24192 + C24193 + C24194) * C153874) *
               C153626 * C153527 * C1223 -
           ((C24114 * C1315 + C25028 + C25028 + C153887 * C1325 +
             C24112 * C334 + C25029 + C25029 + C24105 * C358 + C24110 * C325 +
             C25030 + C25030 + C24104 * C349) *
                C153874 +
            (C25040 + C25039 + C25038) * C153903 + C25031 * C153922) *
               C153626 * C153527 * C153563) *
              C1227)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
            C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 + C24119 +
            C153887 * C354) *
               C153922 +
           (C24183 + C24184 + C24185) * C153903 + C24197 * C153874) *
              C153626 * C153527 * C1310 -
          (C25031 * C153874 + (C24492 + C24493 + C24494) * C153903 +
           (C24114 * C1319 + C24435 + C24435 + C153887 * C1329 + C24112 * C330 +
            C24436 + C24436 + C24105 * C354 + C24110 * C329 + C24437 + C24437 +
            C24104 * C353) *
               C153922) *
              C153626 * C153527 * C1311 +
          ((C24110 * C330 + C24438 + C24438 + C24104 * C354 + C24112 * C1319 +
            C24439 + C24439 + C24105 * C1329 + C24114 * C3127 + C24440 +
            C24440 + C153887 * C3135) *
               C153922 +
           (C24495 + C24496 + C24497) * C153903 +
           (C24498 + C24499 + C24500) * C153874) *
              C153626 * C153527 * C1312 -
          ((C24114 * C4721 + C25975 + C25975 + C153887 * C4727 +
            C24112 * C3129 + C25976 + C25976 + C24105 * C3137 + C24110 * C1317 +
            C25977 + C25977 + C24104 * C1327) *
               C153874 +
           (C24114 * C4722 + C25978 + C25978 + C153887 * C4728 +
            C24112 * C3128 + C25979 + C25979 + C24105 * C3136 + C24110 * C1318 +
            C25980 + C25980 + C24104 * C1328) *
               C153903 +
           (C24114 * C4723 + C25981 + C25981 + C153887 * C4729 +
            C24112 * C3127 + C25982 + C25982 + C24105 * C3135 + C24110 * C1319 +
            C25983 + C25983 + C24104 * C1329) *
               C153922) *
              C153626 * C153527 * C1313) *
         C153492) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C28350 * C136 + C28361 + C28361 + C28344 * C152 + C28352 * C329 +
            C28362 + C28362 + C28345 * C353 + C28354 * C330 + C28363 + C28363 +
            C28346 * C354 + C28356 * C1319 + C28364 + C28364 + C28347 * C1329 +
            C28358 * C3127 + C28365 + C28365 + C28348 * C3135) *
               C153454 * C153626 * C153527 * C1223 -
           (C28358 * C4723 + C28509 + C28509 + C28348 * C4729 + C28356 * C3127 +
            C28510 + C28510 + C28347 * C3135 + C28354 * C1319 + C28511 +
            C28511 + C28346 * C1329 + C28352 * C330 + C28512 + C28512 +
            C28345 * C354 + C28350 * C329 + C28513 + C28513 + C28344 * C353) *
               C153454 * C153626 * C153527 * C153563) *
              C1225 +
          ((C28350 * C328 + C28519 + C28519 + C28344 * C352 + C28352 * C331 +
            C28520 + C28520 + C28345 * C355 + C28354 * C1318 + C28521 + C28521 +
            C28346 * C1328 + C28356 * C3128 + C28522 + C28522 + C28347 * C3136 +
            C28358 * C4722 + C28523 + C28523 + C28348 * C4728) *
               C153454 * C153626 * C153527 * C153563 -
           (C28358 * C3128 + C28366 + C28366 + C28348 * C3136 + C28356 * C1318 +
            C28367 + C28367 + C28347 * C1328 + C28354 * C331 + C28368 + C28368 +
            C28346 * C355 + C28352 * C328 + C28369 + C28369 + C28345 * C352 +
            C28350 * C137 + C28370 + C28370 + C28344 * C153) *
               C153454 * C153626 * C153527 * C1223) *
              C1226 +
          ((C28350 * C138 + C28371 + C28371 + C28344 * C154 + C28352 * C327 +
            C28372 + C28372 + C28345 * C351 + C28354 * C332 + C28373 + C28373 +
            C28346 * C356 + C28356 * C1317 + C28374 + C28374 + C28347 * C1327 +
            C28358 * C3129 + C28375 + C28375 + C28348 * C3137) *
               C153454 * C153626 * C153527 * C1223 -
           (C28358 * C4721 + C28799 + C28799 + C28348 * C4727 + C28356 * C3129 +
            C28800 + C28800 + C28347 * C3137 + C28354 * C1317 + C28801 +
            C28801 + C28346 * C1327 + C28352 * C332 + C28802 + C28802 +
            C28345 * C356 + C28350 * C327 + C28803 + C28803 + C28344 * C351) *
               C153454 * C153626 * C153527 * C153563) *
              C1227)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((C28350 * C136 + C28361 + C28361 + C28344 * C152 + C28352 * C329 +
           C28362 + C28362 + C28345 * C353 + C28354 * C330 + C28363 + C28363 +
           C28346 * C354 + C28356 * C1319 + C28364 + C28364 + C28347 * C1329 +
           C28358 * C3127 + C28365 + C28365 + C28348 * C3135) *
              C153454 * C153626 * C153527 * C1310 -
          (C28358 * C4723 + C28509 + C28509 + C28348 * C4729 + C28356 * C3127 +
           C28510 + C28510 + C28347 * C3135 + C28354 * C1319 + C28511 + C28511 +
           C28346 * C1329 + C28352 * C330 + C28512 + C28512 + C28345 * C354 +
           C28350 * C329 + C28513 + C28513 + C28344 * C353) *
              C153454 * C153626 * C153527 * C1311 +
          (C28350 * C330 + C28514 + C28514 + C28344 * C354 + C28352 * C1319 +
           C28515 + C28515 + C28345 * C1329 + C28354 * C3127 + C28516 + C28516 +
           C28346 * C3135 + C28356 * C4723 + C28517 + C28517 + C28347 * C4729 +
           C28358 * C28502 + C28518 + C28518 + C28348 * C28506) *
              C153454 * C153626 * C153527 * C1312 -
          (C28358 * C29312 + C29316 + C29316 + C28348 * C29314 +
           C28356 * C28502 + C29317 + C29317 + C28347 * C28506 +
           C28354 * C4723 + C29318 + C29318 + C28346 * C4729 + C28352 * C3127 +
           C29319 + C29319 + C28345 * C3135 + C28350 * C1319 + C29320 + C29320 +
           C28344 * C1329) *
              C153454 * C153626 * C153527 * C1313) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
             C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 + C24119 +
             C153887 * C354) *
                C153454 * C153926 +
            (C31259 + C31260 + C31261) * C153454 * C153915 + C31273 * C153890) *
               C153527 * C1223 -
           ((C32050 + C32049 + C32048) * C153454 * C153890 +
            (C32047 + C32046 + C32045) * C153454 * C153915 +
            (C24114 * C1319 + C24435 + C24435 + C153887 * C1329 +
             C24112 * C330 + C24436 + C24436 + C24105 * C354 + C24110 * C329 +
             C24437 + C24437 + C24104 * C353) *
                C153454 * C153926) *
               C153527 * C153563) *
              C1225 +
          (((C24494 + C24493 + C24492) * C153454 * C153926 +
            (C25605 + C25606 + C25607) * C153454 * C153915 +
            (C32051 + C32052 + C32053) * C153454 * C153890) *
               C153527 * C153563 -
           (C31258 * C153890 + (C24794 + C24795 + C24796) * C153454 * C153915 +
            (C24185 + C24184 + C24183) * C153454 * C153926) *
               C153527 * C1223) *
              C1226 +
          ((C24197 * C153454 * C153926 +
            (C24793 + C24792 + C24791) * C153454 * C153915 +
            (C24800 + C24801 + C24802) * C153454 * C153890) *
               C153527 * C1223 -
           ((C24114 * C4957 + C26202 + C26202 + C153887 * C4963 +
             C24112 * C3443 + C26203 + C26203 + C24105 * C3451 +
             C24110 * C1459 + C26204 + C26204 + C24104 * C1469) *
                C153454 * C153890 +
            (C25610 + C25609 + C25608) * C153454 * C153915 +
            C25031 * C153454 * C153926) *
               C153527 * C153563) *
              C1227)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
            C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 + C24119 +
            C153887 * C354) *
               C153454 * C153926 +
           (C31259 + C31260 + C31261) * C153454 * C153915 + C31273 * C153890) *
              C153527 * C1310 -
          ((C32050 + C32049 + C32048) * C153454 * C153890 +
           (C32047 + C32046 + C32045) * C153454 * C153915 +
           (C24114 * C1319 + C24435 + C24435 + C153887 * C1329 + C24112 * C330 +
            C24436 + C24436 + C24105 * C354 + C24110 * C329 + C24437 + C24437 +
            C24104 * C353) *
               C153454 * C153926) *
              C153527 * C1311 +
          ((C24110 * C330 + C24438 + C24438 + C24104 * C354 + C24112 * C1319 +
            C24439 + C24439 + C24105 * C1329 + C24114 * C3127 + C24440 +
            C24440 + C153887 * C3135) *
               C153454 * C153926 +
           (C24110 * C1892 + C26945 + C26945 + C24104 * C1902 + C24112 * C4303 +
            C26944 + C26944 + C24105 * C4311 + C24114 * C5703 + C26943 +
            C26943 + C153887 * C5709) *
               C153454 * C153915 +
           (C24110 * C3441 + C30972 + C30972 + C24104 * C3449 + C24112 * C4959 +
            C30973 + C30973 + C24105 * C4965 + C24114 * C28650 + C30974 +
            C30974 + C153887 * C28654) *
               C153454 * C153890) *
              C153527 * C1312 -
          ((C24114 * C29442 + C32418 + C32418 + C153887 * C29444 +
            C24112 * C28650 + C32419 + C32419 + C24105 * C28654 +
            C24110 * C4959 + C32420 + C32420 + C24104 * C4965) *
               C153454 * C153890 +
           (C24114 * C29092 + C32421 + C32421 + C153887 * C29096 +
            C24112 * C5703 + C32422 + C32422 + C24105 * C5709 + C24110 * C4303 +
            C32423 + C32423 + C24104 * C4311) *
               C153454 * C153915 +
           (C24114 * C4723 + C25981 + C25981 + C153887 * C4729 +
            C24112 * C3127 + C25982 + C25982 + C24105 * C3135 + C24110 * C1319 +
            C25983 + C25983 + C24104 * C1329) *
               C153454 * C153926) *
              C153527 * C1313) *
         C153492) /
            (p * q * std::sqrt(p + q));
    d2ee[340] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
              C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
              C153887 * C354) *
                 C2818 +
             (C2894 + C2895 + C2896) * C2819 + C2908 * C153874) *
                C153626 * C2030 -
            (C4004 * C153874 + (C3529 + C3530 + C3531) * C2819 +
             (C2825 * C1892 + C3472 + C3472 + C153887 * C1902 + C2823 * C1057 +
              C3473 + C3473 + C153913 * C1069 + C2821 * C542 + C3474 + C3474 +
              C153925 * C566) *
                 C2818) *
                C153626 * C153591) *
               C153837 +
           (((C2821 * C1057 + C4316 + C4316 + C153925 * C1069 + C2823 * C1892 +
              C4317 + C4317 + C153913 * C1902 + C2825 * C4303 + C4318 + C4318 +
              C153887 * C4311) *
                 C2818 +
             (C4352 + C4353 + C4354) * C2819 +
             (C4355 + C4356 + C4357) * C153874) *
                C153626 * C153591 -
            (C3766 * C153874 + (C3215 + C3216 + C3217) * C2819 +
             (C2825 * C1319 + C3158 + C3158 + C153887 * C1329 + C2823 * C330 +
              C3159 + C3159 + C153913 * C354 + C2821 * C329 + C3160 + C3160 +
              C153925 * C353) *
                 C2818) *
                C153626 * C2030) *
               C153563) *
              C153829 +
          ((((C3531 + C3530 + C3529) * C2818 + (C3528 + C3527 + C3526) * C2819 +
             (C4011 + C4012 + C4013) * C153874) *
                C153626 * C153591 -
            (C2909 * C153874 + (C2899 + C2898 + C2897) * C2819 +
             (C2896 + C2895 + C2894) * C2818) *
                C153626 * C2030) *
               C153837 +
           (((C3217 + C3216 + C3215) * C2818 + (C3214 + C3213 + C3212) * C2819 +
             (C3773 + C3774 + C3775) * C153874) *
                C153626 * C2030 -
            ((C2825 * C4306 + C4337 + C4337 + C153887 * C4314 + C2823 * C1889 +
              C4338 + C4338 + C153913 * C1899 + C2821 * C1060 + C4339 + C4339 +
              C153925 * C1072) *
                 C153874 +
             (C4357 + C4356 + C4355) * C2819 +
             (C4354 + C4353 + C4352) * C2818) *
                C153626 * C153591) *
               C153563) *
              C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C122 + C193 * C123 +
             C194 * C124 + C195 * C125 + C196 * C126) *
                C153626 * C2030 -
            (C619 * C126 + C620 * C125 + C621 * C124 + C622 * C123 +
             (C134 * C542 + C587 + C587 + C153608 * C566) * C122) *
                C153626 * C153591) *
               C153837 +
           (((C134 * C1057 + C1076 + C1076 + C153608 * C1069) * C122 +
             C1098 * C123 + C1099 * C124 + C1100 * C125 + C1101 * C126) *
                C153626 * C153591 -
            (C406 * C126 + C407 * C125 + C408 * C124 + C409 * C123 +
             (C134 * C329 + C374 + C374 + C153608 * C353) * C122) *
                C153626 * C2030) *
               C153563) *
              C153829 +
          (((C622 * C122 + C621 * C123 + C620 * C124 + C619 * C125 +
             C895 * C126) *
                C153626 * C153591 -
            (C197 * C126 + C196 * C125 + C195 * C124 + C194 * C123 +
             C193 * C122) *
                C153626 * C2030) *
               C153837 +
           ((C409 * C122 + C408 * C123 + C407 * C124 + C406 * C125 +
             C762 * C126) *
                C153626 * C2030 -
            ((C134 * C1062 + C1089 + C1089 + C153608 * C1074) * C126 +
             C1101 * C125 + C1100 * C124 + C1099 * C123 + C1098 * C122) *
                C153626 * C153591) *
               C153563) *
              C153498)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C153608 * C152) * C2818 +
              C193 * C2819 + C194 * C153874) *
                 C153926 +
             (C7742 + C7688 + C7689) * C153915 + C7751 * C153890) *
                C2030 -
            (C10482 * C153890 + (C7693 + C7692 + C7743) * C153915 +
             (C7689 + C7688 + C7742) * C153926) *
                C153591) *
               C153837 +
           (((C8526 + C8494 + C8495) * C153926 +
             (C8527 + C8498 + C8499) * C153915 +
             (C9137 + C9127 + C9128) * C153890) *
                C153591 -
            (C9134 * C153890 + (C8495 + C8494 + C8526) * C153915 +
             (C408 * C153874 + C409 * C2819 +
              (C134 * C329 + C374 + C374 + C153608 * C353) * C2818) *
                 C153926) *
                C2030) *
               C153563) *
              C153829 +
          ((((C7707 + C7708 + C7709) * C153926 +
             (C7710 + C7711 + C7712) * C153915 +
             (C7747 + C7748 + C7749) * C153890) *
                C153591 -
            (C7733 * C153890 + (C7709 + C7708 + C7707) * C153915 +
             (C195 * C153874 + C194 * C2819 + C193 * C2818) * C153926) *
                C2030) *
               C153837 +
           (((C409 * C2818 + C408 * C2819 + C407 * C153874) * C153926 +
             (C8507 + C8508 + C8509) * C153915 +
             (C8510 + C8511 + C8512) * C153890) *
                C2030 -
            (((C134 * C8488 + C8513 + C8513 + C153608 * C8490) * C153874 +
              C8525 * C2819 + C8524 * C2818) *
                 C153890 +
             (C8512 + C8511 + C8510) * C153915 +
             (C8509 + C8508 + C8507) * C153926) *
                C153591) *
               C153563) *
              C153498)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
              C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 +
              C24119 + C153887 * C354) *
                 C153922 +
             (C24183 + C24184 + C24185) * C153903 + C24197 * C153874) *
                C153626 * C2030 -
            (C25269 * C153874 + (C24794 + C24795 + C24796) * C153903 +
             (C24114 * C1892 + C24737 + C24737 + C153887 * C1902 +
              C24112 * C1057 + C24738 + C24738 + C24105 * C1069 +
              C24110 * C542 + C24739 + C24739 + C24104 * C566) *
                 C153922) *
                C153626 * C153591) *
               C153837 +
           (((C24110 * C1057 + C25569 + C25569 + C24104 * C1069 +
              C24112 * C1892 + C25570 + C25570 + C24105 * C1902 +
              C24114 * C4303 + C25571 + C25571 + C153887 * C4311) *
                 C153922 +
             (C25605 + C25606 + C25607) * C153903 +
             (C25608 + C25609 + C25610) * C153874) *
                C153626 * C153591 -
            (C25031 * C153874 + (C24492 + C24493 + C24494) * C153903 +
             (C24114 * C1319 + C24435 + C24435 + C153887 * C1329 +
              C24112 * C330 + C24436 + C24436 + C24105 * C354 + C24110 * C329 +
              C24437 + C24437 + C24104 * C353) *
                 C153922) *
                C153626 * C2030) *
               C153563) *
              C153829 +
          ((((C24796 + C24795 + C24794) * C153922 +
             (C24793 + C24792 + C24791) * C153903 +
             (C25276 + C25277 + C25278) * C153874) *
                C153626 * C153591 -
            (C24198 * C153874 + (C24188 + C24187 + C24186) * C153903 +
             (C24185 + C24184 + C24183) * C153922) *
                C153626 * C2030) *
               C153837 +
           (((C24494 + C24493 + C24492) * C153922 +
             (C24491 + C24490 + C24489) * C153903 +
             (C25038 + C25039 + C25040) * C153874) *
                C153626 * C2030 -
            ((C24114 * C4306 + C25590 + C25590 + C153887 * C4314 +
              C24112 * C1889 + C25591 + C25591 + C24105 * C1899 +
              C24110 * C1060 + C25592 + C25592 + C24104 * C1072) *
                 C153874 +
             (C25610 + C25609 + C25608) * C153903 +
             (C25607 + C25606 + C25605) * C153922) *
                C153626 * C153591) *
               C153563) *
              C153498)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C28350 * C136 + C28361 + C28361 + C28344 * C152 + C28352 * C329 +
             C28362 + C28362 + C28345 * C353 + C28354 * C330 + C28363 + C28363 +
             C28346 * C354 + C28356 * C1319 + C28364 + C28364 + C28347 * C1329 +
             C28358 * C3127 + C28365 + C28365 + C28348 * C3135) *
                C153454 * C153626 * C2030 -
            (C28358 * C5703 + C28657 + C28657 + C28348 * C5709 +
             C28356 * C4303 + C28658 + C28658 + C28347 * C4311 +
             C28354 * C1892 + C28659 + C28659 + C28346 * C1902 +
             C28352 * C1057 + C28660 + C28660 + C28345 * C1069 + C28350 * C542 +
             C28661 + C28661 + C28344 * C566) *
                C153454 * C153626 * C153591) *
               C153837 +
           ((C28350 * C1057 + C29099 + C29099 + C28344 * C1069 +
             C28352 * C1892 + C29100 + C29100 + C28345 * C1902 +
             C28354 * C4303 + C29101 + C29101 + C28346 * C4311 +
             C28356 * C5703 + C29102 + C29102 + C28347 * C5709 +
             C28358 * C29092 + C29103 + C29103 + C28348 * C29096) *
                C153454 * C153626 * C153591 -
            (C28358 * C4723 + C28509 + C28509 + C28348 * C4729 +
             C28356 * C3127 + C28510 + C28510 + C28347 * C3135 +
             C28354 * C1319 + C28511 + C28511 + C28346 * C1329 + C28352 * C330 +
             C28512 + C28512 + C28345 * C354 + C28350 * C329 + C28513 + C28513 +
             C28344 * C353) *
                C153454 * C153626 * C2030) *
               C153563) *
              C153829 +
          (((C28350 * C541 + C28667 + C28667 + C28344 * C565 + C28352 * C1058 +
             C28668 + C28668 + C28345 * C1070 + C28354 * C1891 + C28669 +
             C28669 + C28346 * C1901 + C28356 * C4304 + C28670 + C28670 +
             C28347 * C4312 + C28358 * C5702 + C28671 + C28671 +
             C28348 * C5708) *
                C153454 * C153626 * C153591 -
            (C28358 * C3128 + C28366 + C28366 + C28348 * C3136 +
             C28356 * C1318 + C28367 + C28367 + C28347 * C1328 + C28354 * C331 +
             C28368 + C28368 + C28346 * C355 + C28352 * C328 + C28369 + C28369 +
             C28345 * C352 + C28350 * C137 + C28370 + C28370 + C28344 * C153) *
                C153454 * C153626 * C2030) *
               C153837 +
           ((C28350 * C328 + C28519 + C28519 + C28344 * C352 + C28352 * C331 +
             C28520 + C28520 + C28345 * C355 + C28354 * C1318 + C28521 +
             C28521 + C28346 * C1328 + C28356 * C3128 + C28522 + C28522 +
             C28347 * C3136 + C28358 * C4722 + C28523 + C28523 +
             C28348 * C4728) *
                C153454 * C153626 * C2030 -
            (C28358 * C29093 + C29104 + C29104 + C28348 * C29097 +
             C28356 * C5702 + C29105 + C29105 + C28347 * C5708 +
             C28354 * C4304 + C29106 + C29106 + C28346 * C4312 +
             C28352 * C1891 + C29107 + C29107 + C28345 * C1901 +
             C28350 * C1058 + C29108 + C29108 + C28344 * C1070) *
                C153454 * C153626 * C153591) *
               C153563) *
              C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
              C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 +
              C24119 + C153887 * C354) *
                 C153454 * C153926 +
             (C31259 + C31260 + C31261) * C153454 * C153915 +
             C31273 * C153890) *
                C2030 -
            (C34027 * C153890 + (C31264 + C31263 + C31262) * C153454 * C153915 +
             (C31261 + C31260 + C31259) * C153454 * C153926) *
                C153591) *
               C153837 +
           (((C32045 + C32046 + C32047) * C153454 * C153926 +
             (C32048 + C32049 + C32050) * C153454 * C153915 +
             (C32663 + C32664 + C32665) * C153454 * C153890) *
                C153591 -
            (C32662 * C153890 + (C32047 + C32046 + C32045) * C153454 * C153915 +
             (C24114 * C1319 + C24435 + C24435 + C153887 * C1329 +
              C24112 * C330 + C24436 + C24436 + C24105 * C354 + C24110 * C329 +
              C24437 + C24437 + C24104 * C353) *
                 C153454 * C153926) *
                C2030) *
               C153563) *
              C153829 +
          ((((C24796 + C24795 + C24794) * C153454 * C153926 +
             (C24797 + C24798 + C24799) * C153454 * C153915 +
             (C31268 + C31269 + C31270) * C153454 * C153890) *
                C153591 -
            (C31258 * C153890 + (C24794 + C24795 + C24796) * C153454 * C153915 +
             (C24185 + C24184 + C24183) * C153454 * C153926) *
                C2030) *
               C153837 +
           (((C24494 + C24493 + C24492) * C153454 * C153926 +
             (C25605 + C25606 + C25607) * C153454 * C153915 +
             (C32051 + C32052 + C32053) * C153454 * C153890) *
                C2030 -
            ((C24114 * C31999 + C32024 + C32024 + C153887 * C32001 +
              C24112 * C6303 + C32025 + C32025 + C24105 * C6315 +
              C24110 * C6304 + C32026 + C32026 + C24104 * C6316) *
                 C153454 * C153890 +
             (C32053 + C32052 + C32051) * C153454 * C153915 +
             (C25607 + C25606 + C25605) * C153454 * C153926) *
                C153591) *
               C153563) *
              C153498)) /
            (p * q * std::sqrt(p + q));
    d2ee[341] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
             C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
             C153887 * C354) *
                C2818 +
            (C2894 + C2895 + C2896) * C2819 + C2908 * C153874) *
               C153626 * C153910 -
           (C4004 * C153874 + (C3529 + C3530 + C3531) * C2819 +
            (C2825 * C1892 + C3472 + C3472 + C153887 * C1902 + C2823 * C1057 +
             C3473 + C3473 + C153913 * C1069 + C2821 * C542 + C3474 + C3474 +
             C153925 * C566) *
                C2818) *
               C153626 * C153911 +
           ((C2821 * C543 + C3475 + C3475 + C153925 * C567 + C2823 * C1461 +
             C3476 + C3476 + C153913 * C1471 + C2825 * C3441 + C3477 + C3477 +
             C153887 * C3449) *
                C2818 +
            (C3532 + C3533 + C3534) * C2819 +
            (C3535 + C3536 + C3537) * C153874) *
               C153626 * C2546) *
              C153837 +
          (((C2821 * C1057 + C4316 + C4316 + C153925 * C1069 + C2823 * C1892 +
             C4317 + C4317 + C153913 * C1902 + C2825 * C4303 + C4318 + C4318 +
             C153887 * C4311) *
                C2818 +
            (C4352 + C4353 + C4354) * C2819 +
            (C4355 + C4356 + C4357) * C153874) *
               C153626 * C153911 -
           (C3766 * C153874 + (C3215 + C3216 + C3217) * C2819 +
            (C2825 * C1319 + C3158 + C3158 + C153887 * C1329 + C2823 * C330 +
             C3159 + C3159 + C153913 * C354 + C2821 * C329 + C3160 + C3160 +
             C153925 * C353) *
                C2818) *
               C153626 * C153910 -
           ((C2825 * C4957 + C4967 + C4967 + C153887 * C4963 + C2823 * C3443 +
             C4968 + C4968 + C153913 * C3451 + C2821 * C1459 + C4969 + C4969 +
             C153925 * C1469) *
                C153874 +
            (C2825 * C4958 + C4970 + C4970 + C153887 * C4964 + C2823 * C3442 +
             C4971 + C4971 + C153913 * C3450 + C2821 * C1460 + C4972 + C4972 +
             C153925 * C1470) *
                C2819 +
            (C2825 * C4959 + C4973 + C4973 + C153887 * C4965 + C2823 * C3441 +
             C4974 + C4974 + C153913 * C3449 + C2821 * C1461 + C4975 + C4975 +
             C153925 * C1471) *
                C2818) *
               C153626 * C2546) *
              C153563) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153608 * C152) * C122 + C193 * C123 +
            C194 * C124 + C195 * C125 + C196 * C126) *
               C153626 * C153910 -
           (C619 * C126 + C620 * C125 + C621 * C124 + C622 * C123 +
            (C134 * C542 + C587 + C587 + C153608 * C566) * C122) *
               C153626 * C153911 +
           ((C134 * C543 + C588 + C588 + C153608 * C567) * C122 + C623 * C123 +
            C624 * C124 + C625 * C125 + C626 * C126) *
               C153626 * C2546) *
              C153837 +
          (((C134 * C1057 + C1076 + C1076 + C153608 * C1069) * C122 +
            C1098 * C123 + C1099 * C124 + C1100 * C125 + C1101 * C126) *
               C153626 * C153911 -
           (C406 * C126 + C407 * C125 + C408 * C124 + C409 * C123 +
            (C134 * C329 + C374 + C374 + C153608 * C353) * C122) *
               C153626 * C153910 -
           ((C134 * C1457 + C1473 + C1473 + C153608 * C1467) * C126 +
            (C134 * C1458 + C1474 + C1474 + C153608 * C1468) * C125 +
            (C134 * C1459 + C1475 + C1475 + C153608 * C1469) * C124 +
            (C134 * C1460 + C1476 + C1476 + C153608 * C1470) * C123 +
            (C134 * C1461 + C1477 + C1477 + C153608 * C1471) * C122) *
               C153626 * C2546) *
              C153563) *
         C153492) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C2818 +
             C193 * C2819 + C194 * C153874) *
                C153926 +
            (C7742 + C7688 + C7689) * C153915 + C7751 * C153890) *
               C153910 -
           (C10482 * C153890 + (C7693 + C7692 + C7743) * C153915 +
            (C7689 + C7688 + C7742) * C153926) *
               C153911 +
           (C7751 * C153926 + (C7746 + C7745 + C7744) * C153915 +
            (C10486 + C10477 + C10478) * C153890) *
               C2546) *
              C153837 +
          (((C8526 + C8494 + C8495) * C153926 +
            (C8527 + C8498 + C8499) * C153915 +
            (C9137 + C9127 + C9128) * C153890) *
               C153911 -
           (C9134 * C153890 + (C8495 + C8494 + C8526) * C153915 +
            (C408 * C153874 + C409 * C2819 +
             (C134 * C329 + C374 + C374 + C153608 * C353) * C2818) *
                C153926) *
               C153910 -
           (((C134 * C9115 + C9130 + C9130 + C153608 * C9121) * C153874 +
             (C134 * C9116 + C9131 + C9131 + C153608 * C9122) * C2819 +
             (C134 * C9117 + C9132 + C9132 + C153608 * C9123) * C2818) *
                C153890 +
            (C9128 + C9127 + C9137) * C153915 + C9134 * C153926) *
               C2546) *
              C153563) *
         C153492) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
             C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 + C24119 +
             C153887 * C354) *
                C153922 +
            (C24183 + C24184 + C24185) * C153903 + C24197 * C153874) *
               C153626 * C153910 -
           (C25269 * C153874 + (C24794 + C24795 + C24796) * C153903 +
            (C24114 * C1892 + C24737 + C24737 + C153887 * C1902 +
             C24112 * C1057 + C24738 + C24738 + C24105 * C1069 + C24110 * C542 +
             C24739 + C24739 + C24104 * C566) *
                C153922) *
               C153626 * C153911 +
           ((C24110 * C543 + C24740 + C24740 + C24104 * C567 + C24112 * C1461 +
             C24741 + C24741 + C24105 * C1471 + C24114 * C3441 + C24742 +
             C24742 + C153887 * C3449) *
                C153922 +
            (C24797 + C24798 + C24799) * C153903 +
            (C24800 + C24801 + C24802) * C153874) *
               C153626 * C2546) *
              C153837 +
          (((C24110 * C1057 + C25569 + C25569 + C24104 * C1069 +
             C24112 * C1892 + C25570 + C25570 + C24105 * C1902 +
             C24114 * C4303 + C25571 + C25571 + C153887 * C4311) *
                C153922 +
            (C25605 + C25606 + C25607) * C153903 +
            (C25608 + C25609 + C25610) * C153874) *
               C153626 * C153911 -
           (C25031 * C153874 + (C24492 + C24493 + C24494) * C153903 +
            (C24114 * C1319 + C24435 + C24435 + C153887 * C1329 +
             C24112 * C330 + C24436 + C24436 + C24105 * C354 + C24110 * C329 +
             C24437 + C24437 + C24104 * C353) *
                C153922) *
               C153626 * C153910 -
           ((C24114 * C4957 + C26202 + C26202 + C153887 * C4963 +
             C24112 * C3443 + C26203 + C26203 + C24105 * C3451 +
             C24110 * C1459 + C26204 + C26204 + C24104 * C1469) *
                C153874 +
            (C24114 * C4958 + C26205 + C26205 + C153887 * C4964 +
             C24112 * C3442 + C26206 + C26206 + C24105 * C3450 +
             C24110 * C1460 + C26207 + C26207 + C24104 * C1470) *
                C153903 +
            (C24114 * C4959 + C26208 + C26208 + C153887 * C4965 +
             C24112 * C3441 + C26209 + C26209 + C24105 * C3449 +
             C24110 * C1461 + C26210 + C26210 + C24104 * C1471) *
                C153922) *
               C153626 * C2546) *
              C153563) *
         C153492) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C28350 * C136 + C28361 + C28361 + C28344 * C152 + C28352 * C329 +
            C28362 + C28362 + C28345 * C353 + C28354 * C330 + C28363 + C28363 +
            C28346 * C354 + C28356 * C1319 + C28364 + C28364 + C28347 * C1329 +
            C28358 * C3127 + C28365 + C28365 + C28348 * C3135) *
               C153454 * C153626 * C153910 -
           (C28358 * C5703 + C28657 + C28657 + C28348 * C5709 + C28356 * C4303 +
            C28658 + C28658 + C28347 * C4311 + C28354 * C1892 + C28659 +
            C28659 + C28346 * C1902 + C28352 * C1057 + C28660 + C28660 +
            C28345 * C1069 + C28350 * C542 + C28661 + C28661 + C28344 * C566) *
               C153454 * C153626 * C153911 +
           (C28350 * C543 + C28662 + C28662 + C28344 * C567 + C28352 * C1461 +
            C28663 + C28663 + C28345 * C1471 + C28354 * C3441 + C28664 +
            C28664 + C28346 * C3449 + C28356 * C4959 + C28665 + C28665 +
            C28347 * C4965 + C28358 * C28650 + C28666 + C28666 +
            C28348 * C28654) *
               C153454 * C153626 * C2546) *
              C153837 +
          ((C28350 * C1057 + C29099 + C29099 + C28344 * C1069 + C28352 * C1892 +
            C29100 + C29100 + C28345 * C1902 + C28354 * C4303 + C29101 +
            C29101 + C28346 * C4311 + C28356 * C5703 + C29102 + C29102 +
            C28347 * C5709 + C28358 * C29092 + C29103 + C29103 +
            C28348 * C29096) *
               C153454 * C153626 * C153911 -
           (C28358 * C4723 + C28509 + C28509 + C28348 * C4729 + C28356 * C3127 +
            C28510 + C28510 + C28347 * C3135 + C28354 * C1319 + C28511 +
            C28511 + C28346 * C1329 + C28352 * C330 + C28512 + C28512 +
            C28345 * C354 + C28350 * C329 + C28513 + C28513 + C28344 * C353) *
               C153454 * C153626 * C153910 -
           (C28358 * C29442 + C29446 + C29446 + C28348 * C29444 +
            C28356 * C28650 + C29447 + C29447 + C28347 * C28654 +
            C28354 * C4959 + C29448 + C29448 + C28346 * C4965 + C28352 * C3441 +
            C29449 + C29449 + C28345 * C3449 + C28350 * C1461 + C29450 +
            C29450 + C28344 * C1471) *
               C153454 * C153626 * C2546) *
              C153563) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
             C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 + C24119 +
             C153887 * C354) *
                C153454 * C153926 +
            (C31259 + C31260 + C31261) * C153454 * C153915 + C31273 * C153890) *
               C153910 -
           (C34027 * C153890 + (C31264 + C31263 + C31262) * C153454 * C153915 +
            (C31261 + C31260 + C31259) * C153454 * C153926) *
               C153911 +
           (C31273 * C153926 + (C31267 + C31266 + C31265) * C153454 * C153915 +
            (C34031 + C34032 + C34033) * C153454 * C153890) *
               C2546) *
              C153837 +
          (((C32045 + C32046 + C32047) * C153454 * C153926 +
            (C32048 + C32049 + C32050) * C153454 * C153915 +
            (C32663 + C32664 + C32665) * C153454 * C153890) *
               C153911 -
           (C32662 * C153890 + (C32047 + C32046 + C32045) * C153454 * C153915 +
            (C24114 * C1319 + C24435 + C24435 + C153887 * C1329 +
             C24112 * C330 + C24436 + C24436 + C24105 * C354 + C24110 * C329 +
             C24437 + C24437 + C24104 * C353) *
                C153454 * C153926) *
               C153910 -
           ((C24114 * C32641 + C32652 + C32652 + C153887 * C32643 +
             C24112 * C31195 + C32653 + C32653 + C24105 * C31199 +
             C24110 * C9117 + C32654 + C32654 + C24104 * C9123) *
                C153454 * C153890 +
            (C32665 + C32664 + C32663) * C153454 * C153915 + C32662 * C153926) *
               C2546) *
              C153563) *
         C153492) /
            (p * q * std::sqrt(p + q));
    d2ee[342] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C136 + C161 + C161 + C153608 * C152) * C122 +
                C193 * C123 + C194 * C124 + C195 * C125 + C196 * C126) *
                   C153626 * C2030 -
               (C619 * C126 + C620 * C125 + C621 * C124 + C622 * C123 +
                (C134 * C542 + C587 + C587 + C153608 * C566) * C122) *
                   C153626 * C153591) *
                  C153511 * C1225 +
              ((C622 * C122 + C621 * C123 + C620 * C124 + C619 * C125 +
                C895 * C126) *
                   C153626 * C153591 -
               (C197 * C126 + C196 * C125 + C195 * C124 + C194 * C123 +
                C193 * C122) *
                   C153626 * C2030) *
                  C153511 * C1226 +
              ((C194 * C122 + C195 * C123 + C196 * C124 + C197 * C125 +
                C198 * C126) *
                   C153626 * C2030 -
               ((C134 * C886 + C892 + C892 + C153608 * C888) * C126 +
                C895 * C125 + C619 * C124 + C620 * C123 + C621 * C122) *
                   C153626 * C153591) *
                  C153511 * C1227) +
         std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C136 + C161 + C161 + C153608 * C152) * C122 +
                C193 * C123 + C194 * C124 + C195 * C125 + C196 * C126) *
                   C153626 * C2030 -
               (C619 * C126 + C620 * C125 + C621 * C124 + C622 * C123 +
                (C134 * C542 + C587 + C587 + C153608 * C566) * C122) *
                   C153626 * C153591) *
                  C320 +
              (((C134 * C1057 + C1076 + C1076 + C153608 * C1069) * C122 +
                C1098 * C123 + C1099 * C124 + C1100 * C125 + C1101 * C126) *
                   C153626 * C153591 -
               (C406 * C126 + C407 * C125 + C408 * C124 + C409 * C123 +
                (C134 * C329 + C374 + C374 + C153608 * C353) * C122) *
                   C153626 * C2030) *
                  C321 +
              (((C134 * C330 + C375 + C375 + C153608 * C354) * C122 +
                C410 * C123 + C411 * C124 + C412 * C125 + C413 * C126) *
                   C153626 * C2030 -
               ((C134 * C1888 + C1904 + C1904 + C153608 * C1898) * C126 +
                (C134 * C1889 + C1905 + C1905 + C153608 * C1899) * C125 +
                (C134 * C1890 + C1906 + C1906 + C153608 * C1900) * C124 +
                (C134 * C1891 + C1907 + C1907 + C153608 * C1901) * C123 +
                (C134 * C1892 + C1908 + C1908 + C153608 * C1902) * C122) *
                   C153626 * C153591) *
                  C322) *
             C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C136 + C161 + C161 + C153608 * C152) * C122 + C193 * C123 +
           C194 * C124 + C195 * C125 + C196 * C126) *
              C153626 * C2236 -
          (C619 * C126 + C620 * C125 + C621 * C124 + C622 * C123 +
           (C134 * C542 + C587 + C587 + C153608 * C566) * C122) *
              C153626 * C2237 +
          ((C134 * C543 + C588 + C588 + C153608 * C567) * C122 + C623 * C123 +
           C624 * C124 + C625 * C125 + C626 * C126) *
              C153626 * C2238 -
          ((C134 * C2240 + C2256 + C2256 + C153608 * C2250) * C126 +
           (C134 * C2241 + C2257 + C2257 + C153608 * C2251) * C125 +
           (C134 * C2242 + C2258 + C2258 + C153608 * C2252) * C124 +
           (C134 * C2243 + C2259 + C2259 + C153608 * C2253) * C123 +
           (C134 * C2244 + C2260 + C2260 + C153608 * C2254) * C122) *
              C153626 * C2239) *
         C153511 * C153492) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
             C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
             C153887 * C354) *
                C2818 +
            (C2894 + C2895 + C2896) * C2819 + C2908 * C153874) *
               C153626 * C2030 -
           (C4004 * C153874 + (C3529 + C3530 + C3531) * C2819 +
            (C2825 * C1892 + C3472 + C3472 + C153887 * C1902 + C2823 * C1057 +
             C3473 + C3473 + C153913 * C1069 + C2821 * C542 + C3474 + C3474 +
             C153925 * C566) *
                C2818) *
               C153626 * C153591) *
              C153511 * C1225 +
          (((C3531 + C3530 + C3529) * C2818 + (C3528 + C3527 + C3526) * C2819 +
            (C4011 + C4012 + C4013) * C153874) *
               C153626 * C153591 -
           (C2909 * C153874 + (C2899 + C2898 + C2897) * C2819 +
            (C2896 + C2895 + C2894) * C2818) *
               C153626 * C2030) *
              C153511 * C1226 +
          ((C2908 * C2818 + (C2902 + C2901 + C2900) * C2819 +
            (C2903 + C2904 + C2905) * C153874) *
               C153626 * C2030 -
           ((C2825 * C1888 + C4001 + C4001 + C153887 * C1898 + C2823 * C1061 +
             C4002 + C4002 + C153913 * C1073 + C2821 * C538 + C4003 + C4003 +
             C153925 * C562) *
                C153874 +
            (C4013 + C4012 + C4011) * C2819 + C4004 * C2818) *
               C153626 * C153591) *
              C153511 * C1227)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
             C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
             C153887 * C354) *
                C2818 +
            (C2894 + C2895 + C2896) * C2819 + C2908 * C153874) *
               C153626 * C2030 -
           (C4004 * C153874 + (C3529 + C3530 + C3531) * C2819 +
            (C2825 * C1892 + C3472 + C3472 + C153887 * C1902 + C2823 * C1057 +
             C3473 + C3473 + C153913 * C1069 + C2821 * C542 + C3474 + C3474 +
             C153925 * C566) *
                C2818) *
               C153626 * C153591) *
              C320 +
          (((C2821 * C1057 + C4316 + C4316 + C153925 * C1069 + C2823 * C1892 +
             C4317 + C4317 + C153913 * C1902 + C2825 * C4303 + C4318 + C4318 +
             C153887 * C4311) *
                C2818 +
            (C4352 + C4353 + C4354) * C2819 +
            (C4355 + C4356 + C4357) * C153874) *
               C153626 * C153591 -
           (C3766 * C153874 + (C3215 + C3216 + C3217) * C2819 +
            (C2825 * C1319 + C3158 + C3158 + C153887 * C1329 + C2823 * C330 +
             C3159 + C3159 + C153913 * C354 + C2821 * C329 + C3160 + C3160 +
             C153925 * C353) *
                C2818) *
               C153626 * C2030) *
              C321 +
          (((C2821 * C330 + C3161 + C3161 + C153925 * C354 + C2823 * C1319 +
             C3162 + C3162 + C153913 * C1329 + C2825 * C3127 + C3163 + C3163 +
             C153887 * C3135) *
                C2818 +
            (C3218 + C3219 + C3220) * C2819 +
            (C3221 + C3222 + C3223) * C153874) *
               C153626 * C2030 -
           ((C2825 * C5701 + C5711 + C5711 + C153887 * C5707 + C2823 * C4305 +
             C5712 + C5712 + C153913 * C4313 + C2821 * C1890 + C5713 + C5713 +
             C153925 * C1900) *
                C153874 +
            (C2825 * C5702 + C5714 + C5714 + C153887 * C5708 + C2823 * C4304 +
             C5715 + C5715 + C153913 * C4312 + C2821 * C1891 + C5716 + C5716 +
             C153925 * C1901) *
                C2819 +
            (C2825 * C5703 + C5717 + C5717 + C153887 * C5709 + C2823 * C4303 +
             C5718 + C5718 + C153913 * C4311 + C2821 * C1892 + C5719 + C5719 +
             C153925 * C1902) *
                C2818) *
               C153626 * C153591) *
              C322) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
            C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
            C153887 * C354) *
               C2818 +
           (C2894 + C2895 + C2896) * C2819 + C2908 * C153874) *
              C153626 * C2236 -
          (C4004 * C153874 + (C3529 + C3530 + C3531) * C2819 +
           (C2825 * C1892 + C3472 + C3472 + C153887 * C1902 + C2823 * C1057 +
            C3473 + C3473 + C153913 * C1069 + C2821 * C542 + C3474 + C3474 +
            C153925 * C566) *
               C2818) *
              C153626 * C2237 +
          ((C2821 * C543 + C3475 + C3475 + C153925 * C567 + C2823 * C1461 +
            C3476 + C3476 + C153913 * C1471 + C2825 * C3441 + C3477 + C3477 +
            C153887 * C3449) *
               C2818 +
           (C3532 + C3533 + C3534) * C2819 +
           (C3535 + C3536 + C3537) * C153874) *
              C153626 * C2238 -
          ((C2825 * C6301 + C6320 + C6320 + C153887 * C6313 + C2823 * C6302 +
            C6321 + C6321 + C153913 * C6314 + C2821 * C2242 + C6322 + C6322 +
            C153925 * C2252) *
               C153874 +
           (C2825 * C6303 + C6323 + C6323 + C153887 * C6315 + C2823 * C6304 +
            C6324 + C6324 + C153913 * C6316 + C2821 * C2243 + C6325 + C6325 +
            C153925 * C2253) *
               C2819 +
           (C2825 * C6305 + C6326 + C6326 + C153887 * C6317 + C2823 * C6306 +
            C6327 + C6327 + C153913 * C6318 + C2821 * C2244 + C6328 + C6328 +
            C153925 * C2254) *
               C2818) *
              C153626 * C2239) *
         C153511 * C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C2818 +
             C193 * C2819 + C194 * C153874) *
                C153926 +
            (C7742 + C7688 + C7689) * C153915 + C7751 * C153890) *
               C2030 -
           ((C7744 + C7745 + C7746) * C153890 +
            (C7693 + C7692 + C7743) * C153915 +
            (C7689 + C7688 + C7742) * C153926) *
               C153591) *
              C153511 * C1225 +
          (((C7707 + C7708 + C7709) * C153926 +
            (C7710 + C7711 + C7712) * C153915 +
            (C7747 + C7748 + C7749) * C153890) *
               C153591 -
           (C7733 * C153890 + (C7709 + C7708 + C7707) * C153915 +
            (C195 * C153874 + C194 * C2819 + C193 * C2818) * C153926) *
               C2030) *
              C153511 * C1226 +
          (((C194 * C2818 + C195 * C2819 + C196 * C153874) * C153926 +
            (C8193 + C8194 + C8195) * C153915 +
            (C8196 + C8197 + C8198) * C153890) *
               C2030 -
           (((C134 * C2240 + C2256 + C2256 + C153608 * C2250) * C153874 +
             C7741 * C2819 + C7736 * C2818) *
                C153890 +
            (C8198 + C8197 + C8196) * C153915 +
            (C8195 + C8194 + C8193) * C153926) *
               C153591) *
              C153511 * C1227)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C2818 +
             C193 * C2819 + C194 * C153874) *
                C153926 +
            (C7742 + C7688 + C7689) * C153915 + C7751 * C153890) *
               C2030 -
           ((C7744 + C7745 + C7746) * C153890 +
            (C7693 + C7692 + C7743) * C153915 +
            (C7689 + C7688 + C7742) * C153926) *
               C153591) *
              C320 +
          (((C8526 + C8494 + C8495) * C153926 +
            (C8527 + C8498 + C8499) * C153915 +
            (C9137 + C9127 + C9128) * C153890) *
               C153591 -
           (C9134 * C153890 + (C8495 + C8494 + C8526) * C153915 +
            (C408 * C153874 + C409 * C2819 +
             (C134 * C329 + C374 + C374 + C153608 * C353) * C2818) *
                C153926) *
               C2030) *
              C321 +
          ((((C134 * C330 + C375 + C375 + C153608 * C354) * C2818 +
             C410 * C2819 + C411 * C153874) *
                C153926 +
            (C9881 + C9866 + C9867) * C153915 +
            (C9882 + C9870 + C9871) * C153890) *
               C2030 -
           (((C134 * C6301 + C9872 + C9872 + C153608 * C6313) * C153874 +
             (C134 * C6303 + C9873 + C9873 + C153608 * C6315) * C2819 +
             (C134 * C6305 + C9874 + C9874 + C153608 * C6317) * C2818) *
                C153890 +
            (C9871 + C9870 + C9882) * C153915 +
            (C9867 + C9866 + C9881) * C153926) *
               C153591) *
              C322) *
         C153492) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153608 * C152) * C2818 +
            C193 * C2819 + C194 * C153874) *
               C153926 +
           (C7742 + C7688 + C7689) * C153915 + C7751 * C153890) *
              C2236 -
          (C10482 * C153890 + (C7693 + C7692 + C7743) * C153915 +
           (C7689 + C7688 + C7742) * C153926) *
              C2237 +
          (C7751 * C153926 + (C7746 + C7745 + C7744) * C153915 +
           (C10486 + C10477 + C10478) * C153890) *
              C2238 -
          (((C134 * C10464 + C10479 + C10479 + C153608 * C10470) * C153874 +
            (C134 * C10465 + C10480 + C10480 + C153608 * C10471) * C2819 +
            (C134 * C10466 + C10481 + C10481 + C153608 * C10472) * C2818) *
               C153890 +
           (C10478 + C10477 + C10486) * C153915 + C10482 * C153926) *
              C2239) *
         C153511 * C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
             C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 + C24119 +
             C153887 * C354) *
                C153922 +
            (C24183 + C24184 + C24185) * C153903 + C24197 * C153874) *
               C153626 * C2030 -
           (C25269 * C153874 + (C24794 + C24795 + C24796) * C153903 +
            (C24114 * C1892 + C24737 + C24737 + C153887 * C1902 +
             C24112 * C1057 + C24738 + C24738 + C24105 * C1069 + C24110 * C542 +
             C24739 + C24739 + C24104 * C566) *
                C153922) *
               C153626 * C153591) *
              C153511 * C1225 +
          (((C24796 + C24795 + C24794) * C153922 +
            (C24793 + C24792 + C24791) * C153903 +
            (C25276 + C25277 + C25278) * C153874) *
               C153626 * C153591 -
           (C24198 * C153874 + (C24188 + C24187 + C24186) * C153903 +
            (C24185 + C24184 + C24183) * C153922) *
               C153626 * C2030) *
              C153511 * C1226 +
          ((C24197 * C153922 + (C24191 + C24190 + C24189) * C153903 +
            (C24192 + C24193 + C24194) * C153874) *
               C153626 * C2030 -
           ((C24114 * C1888 + C25266 + C25266 + C153887 * C1898 +
             C24112 * C1061 + C25267 + C25267 + C24105 * C1073 + C24110 * C538 +
             C25268 + C25268 + C24104 * C562) *
                C153874 +
            (C25278 + C25277 + C25276) * C153903 + C25269 * C153922) *
               C153626 * C153591) *
              C153511 * C1227)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
             C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 + C24119 +
             C153887 * C354) *
                C153922 +
            (C24183 + C24184 + C24185) * C153903 + C24197 * C153874) *
               C153626 * C2030 -
           (C25269 * C153874 + (C24794 + C24795 + C24796) * C153903 +
            (C24114 * C1892 + C24737 + C24737 + C153887 * C1902 +
             C24112 * C1057 + C24738 + C24738 + C24105 * C1069 + C24110 * C542 +
             C24739 + C24739 + C24104 * C566) *
                C153922) *
               C153626 * C153591) *
              C320 +
          (((C24110 * C1057 + C25569 + C25569 + C24104 * C1069 +
             C24112 * C1892 + C25570 + C25570 + C24105 * C1902 +
             C24114 * C4303 + C25571 + C25571 + C153887 * C4311) *
                C153922 +
            (C25605 + C25606 + C25607) * C153903 +
            (C25608 + C25609 + C25610) * C153874) *
               C153626 * C153591 -
           (C25031 * C153874 + (C24492 + C24493 + C24494) * C153903 +
            (C24114 * C1319 + C24435 + C24435 + C153887 * C1329 +
             C24112 * C330 + C24436 + C24436 + C24105 * C354 + C24110 * C329 +
             C24437 + C24437 + C24104 * C353) *
                C153922) *
               C153626 * C2030) *
              C321 +
          (((C24110 * C330 + C24438 + C24438 + C24104 * C354 + C24112 * C1319 +
             C24439 + C24439 + C24105 * C1329 + C24114 * C3127 + C24440 +
             C24440 + C153887 * C3135) *
                C153922 +
            (C24495 + C24496 + C24497) * C153903 +
            (C24498 + C24499 + C24500) * C153874) *
               C153626 * C2030 -
           ((C24114 * C5701 + C26937 + C26937 + C153887 * C5707 +
             C24112 * C4305 + C26938 + C26938 + C24105 * C4313 +
             C24110 * C1890 + C26939 + C26939 + C24104 * C1900) *
                C153874 +
            (C24114 * C5702 + C26940 + C26940 + C153887 * C5708 +
             C24112 * C4304 + C26941 + C26941 + C24105 * C4312 +
             C24110 * C1891 + C26942 + C26942 + C24104 * C1901) *
                C153903 +
            (C24114 * C5703 + C26943 + C26943 + C153887 * C5709 +
             C24112 * C4303 + C26944 + C26944 + C24105 * C4311 +
             C24110 * C1892 + C26945 + C26945 + C24104 * C1902) *
                C153922) *
               C153626 * C153591) *
              C322) *
         C153492) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
            C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 + C24119 +
            C153887 * C354) *
               C153922 +
           (C24183 + C24184 + C24185) * C153903 + C24197 * C153874) *
              C153626 * C2236 -
          (C25269 * C153874 + (C24794 + C24795 + C24796) * C153903 +
           (C24114 * C1892 + C24737 + C24737 + C153887 * C1902 +
            C24112 * C1057 + C24738 + C24738 + C24105 * C1069 + C24110 * C542 +
            C24739 + C24739 + C24104 * C566) *
               C153922) *
              C153626 * C2237 +
          ((C24110 * C543 + C24740 + C24740 + C24104 * C567 + C24112 * C1461 +
            C24741 + C24741 + C24105 * C1471 + C24114 * C3441 + C24742 +
            C24742 + C153887 * C3449) *
               C153922 +
           (C24797 + C24798 + C24799) * C153903 +
           (C24800 + C24801 + C24802) * C153874) *
              C153626 * C2238 -
          ((C24114 * C6301 + C27528 + C27528 + C153887 * C6313 +
            C24112 * C6302 + C27529 + C27529 + C24105 * C6314 + C24110 * C2242 +
            C27530 + C27530 + C24104 * C2252) *
               C153874 +
           (C24114 * C6303 + C27531 + C27531 + C153887 * C6315 +
            C24112 * C6304 + C27532 + C27532 + C24105 * C6316 + C24110 * C2243 +
            C27533 + C27533 + C24104 * C2253) *
               C153903 +
           (C24114 * C6305 + C27534 + C27534 + C153887 * C6317 +
            C24112 * C6306 + C27535 + C27535 + C24105 * C6318 + C24110 * C2244 +
            C27536 + C27536 + C24104 * C2254) *
               C153922) *
              C153626 * C2239) *
         C153511 * C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C28350 * C136 + C28361 + C28361 + C28344 * C152 + C28352 * C329 +
            C28362 + C28362 + C28345 * C353 + C28354 * C330 + C28363 + C28363 +
            C28346 * C354 + C28356 * C1319 + C28364 + C28364 + C28347 * C1329 +
            C28358 * C3127 + C28365 + C28365 + C28348 * C3135) *
               C153454 * C153626 * C2030 -
           (C28358 * C5703 + C28657 + C28657 + C28348 * C5709 + C28356 * C4303 +
            C28658 + C28658 + C28347 * C4311 + C28354 * C1892 + C28659 +
            C28659 + C28346 * C1902 + C28352 * C1057 + C28660 + C28660 +
            C28345 * C1069 + C28350 * C542 + C28661 + C28661 + C28344 * C566) *
               C153454 * C153626 * C153591) *
              C153511 * C1225 +
          ((C28350 * C541 + C28667 + C28667 + C28344 * C565 + C28352 * C1058 +
            C28668 + C28668 + C28345 * C1070 + C28354 * C1891 + C28669 +
            C28669 + C28346 * C1901 + C28356 * C4304 + C28670 + C28670 +
            C28347 * C4312 + C28358 * C5702 + C28671 + C28671 +
            C28348 * C5708) *
               C153454 * C153626 * C153591 -
           (C28358 * C3128 + C28366 + C28366 + C28348 * C3136 + C28356 * C1318 +
            C28367 + C28367 + C28347 * C1328 + C28354 * C331 + C28368 + C28368 +
            C28346 * C355 + C28352 * C328 + C28369 + C28369 + C28345 * C352 +
            C28350 * C137 + C28370 + C28370 + C28344 * C153) *
               C153454 * C153626 * C2030) *
              C153511 * C1226 +
          ((C28350 * C138 + C28371 + C28371 + C28344 * C154 + C28352 * C327 +
            C28372 + C28372 + C28345 * C351 + C28354 * C332 + C28373 + C28373 +
            C28346 * C356 + C28356 * C1317 + C28374 + C28374 + C28347 * C1327 +
            C28358 * C3129 + C28375 + C28375 + C28348 * C3137) *
               C153454 * C153626 * C2030 -
           (C28358 * C5701 + C28926 + C28926 + C28348 * C5707 + C28356 * C4305 +
            C28927 + C28927 + C28347 * C4313 + C28354 * C1890 + C28928 +
            C28928 + C28346 * C1900 + C28352 * C1059 + C28929 + C28929 +
            C28345 * C1071 + C28350 * C540 + C28930 + C28930 + C28344 * C564) *
               C153454 * C153626 * C153591) *
              C153511 * C1227)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C28350 * C136 + C28361 + C28361 + C28344 * C152 + C28352 * C329 +
            C28362 + C28362 + C28345 * C353 + C28354 * C330 + C28363 + C28363 +
            C28346 * C354 + C28356 * C1319 + C28364 + C28364 + C28347 * C1329 +
            C28358 * C3127 + C28365 + C28365 + C28348 * C3135) *
               C153454 * C153626 * C2030 -
           (C28358 * C5703 + C28657 + C28657 + C28348 * C5709 + C28356 * C4303 +
            C28658 + C28658 + C28347 * C4311 + C28354 * C1892 + C28659 +
            C28659 + C28346 * C1902 + C28352 * C1057 + C28660 + C28660 +
            C28345 * C1069 + C28350 * C542 + C28661 + C28661 + C28344 * C566) *
               C153454 * C153626 * C153591) *
              C320 +
          ((C28350 * C1057 + C29099 + C29099 + C28344 * C1069 + C28352 * C1892 +
            C29100 + C29100 + C28345 * C1902 + C28354 * C4303 + C29101 +
            C29101 + C28346 * C4311 + C28356 * C5703 + C29102 + C29102 +
            C28347 * C5709 + C28358 * C29092 + C29103 + C29103 +
            C28348 * C29096) *
               C153454 * C153626 * C153591 -
           (C28358 * C4723 + C28509 + C28509 + C28348 * C4729 + C28356 * C3127 +
            C28510 + C28510 + C28347 * C3135 + C28354 * C1319 + C28511 +
            C28511 + C28346 * C1329 + C28352 * C330 + C28512 + C28512 +
            C28345 * C354 + C28350 * C329 + C28513 + C28513 + C28344 * C353) *
               C153454 * C153626 * C2030) *
              C321 +
          ((C28350 * C330 + C28514 + C28514 + C28344 * C354 + C28352 * C1319 +
            C28515 + C28515 + C28345 * C1329 + C28354 * C3127 + C28516 +
            C28516 + C28346 * C3135 + C28356 * C4723 + C28517 + C28517 +
            C28347 * C4729 + C28358 * C28502 + C28518 + C28518 +
            C28348 * C28506) *
               C153454 * C153626 * C2030 -
           (C28358 * C29856 + C29860 + C29860 + C28348 * C29858 +
            C28356 * C29092 + C29861 + C29861 + C28347 * C29096 +
            C28354 * C5703 + C29862 + C29862 + C28346 * C5709 + C28352 * C4303 +
            C29863 + C29863 + C28345 * C4311 + C28350 * C1892 + C29864 +
            C29864 + C28344 * C1902) *
               C153454 * C153626 * C153591) *
              C322) *
         C153492) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((C28350 * C136 + C28361 + C28361 + C28344 * C152 + C28352 * C329 +
           C28362 + C28362 + C28345 * C353 + C28354 * C330 + C28363 + C28363 +
           C28346 * C354 + C28356 * C1319 + C28364 + C28364 + C28347 * C1329 +
           C28358 * C3127 + C28365 + C28365 + C28348 * C3135) *
              C153454 * C153626 * C2236 -
          (C28358 * C5703 + C28657 + C28657 + C28348 * C5709 + C28356 * C4303 +
           C28658 + C28658 + C28347 * C4311 + C28354 * C1892 + C28659 + C28659 +
           C28346 * C1902 + C28352 * C1057 + C28660 + C28660 + C28345 * C1069 +
           C28350 * C542 + C28661 + C28661 + C28344 * C566) *
              C153454 * C153626 * C2237 +
          (C28350 * C543 + C28662 + C28662 + C28344 * C567 + C28352 * C1461 +
           C28663 + C28663 + C28345 * C1471 + C28354 * C3441 + C28664 + C28664 +
           C28346 * C3449 + C28356 * C4959 + C28665 + C28665 + C28347 * C4965 +
           C28358 * C28650 + C28666 + C28666 + C28348 * C28654) *
              C153454 * C153626 * C2238 -
          (C28358 * C30190 + C30197 + C30197 + C28348 * C30194 +
           C28356 * C30191 + C30198 + C30198 + C28347 * C30195 +
           C28354 * C6305 + C30199 + C30199 + C28346 * C6317 + C28352 * C6306 +
           C30200 + C30200 + C28345 * C6318 + C28350 * C2244 + C30201 + C30201 +
           C28344 * C2254) *
              C153454 * C153626 * C2239) *
         C153511 * C153492) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
             C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 + C24119 +
             C153887 * C354) *
                C153454 * C153926 +
            (C31259 + C31260 + C31261) * C153454 * C153915 + C31273 * C153890) *
               C2030 -
           ((C31265 + C31266 + C31267) * C153454 * C153890 +
            (C31264 + C31263 + C31262) * C153454 * C153915 +
            (C31261 + C31260 + C31259) * C153454 * C153926) *
               C153591) *
              C153511 * C1225 +
          (((C24796 + C24795 + C24794) * C153454 * C153926 +
            (C24797 + C24798 + C24799) * C153454 * C153915 +
            (C31268 + C31269 + C31270) * C153454 * C153890) *
               C153591 -
           (C31258 * C153890 + (C24794 + C24795 + C24796) * C153454 * C153915 +
            (C24185 + C24184 + C24183) * C153454 * C153926) *
               C2030) *
              C153511 * C1226 +
          ((C24197 * C153454 * C153926 +
            (C24793 + C24792 + C24791) * C153454 * C153915 +
            (C24800 + C24801 + C24802) * C153454 * C153890) *
               C2030 -
           ((C24114 * C6301 + C27528 + C27528 + C153887 * C6313 +
             C24112 * C6302 + C27529 + C27529 + C24105 * C6314 +
             C24110 * C2242 + C27530 + C27530 + C24104 * C2252) *
                C153454 * C153890 +
            (C24802 + C24801 + C24800) * C153454 * C153915 +
            C25269 * C153454 * C153926) *
               C153591) *
              C153511 * C1227)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
             C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 + C24119 +
             C153887 * C354) *
                C153454 * C153926 +
            (C31259 + C31260 + C31261) * C153454 * C153915 + C31273 * C153890) *
               C2030 -
           ((C31265 + C31266 + C31267) * C153454 * C153890 +
            (C31264 + C31263 + C31262) * C153454 * C153915 +
            (C31261 + C31260 + C31259) * C153454 * C153926) *
               C153591) *
              C320 +
          (((C32045 + C32046 + C32047) * C153454 * C153926 +
            (C32048 + C32049 + C32050) * C153454 * C153915 +
            (C32663 + C32664 + C32665) * C153454 * C153890) *
               C153591 -
           (C32662 * C153890 + (C32047 + C32046 + C32045) * C153454 * C153915 +
            (C24114 * C1319 + C24435 + C24435 + C153887 * C1329 +
             C24112 * C330 + C24436 + C24436 + C24105 * C354 + C24110 * C329 +
             C24437 + C24437 + C24104 * C353) *
                C153454 * C153926) *
               C2030) *
              C321 +
          (((C24110 * C330 + C24438 + C24438 + C24104 * C354 + C24112 * C1319 +
             C24439 + C24439 + C24105 * C1329 + C24114 * C3127 + C24440 +
             C24440 + C153887 * C3135) *
                C153454 * C153926 +
            (C33419 + C33420 + C33421) * C153454 * C153915 +
            (C33422 + C33423 + C33424) * C153454 * C153890) *
               C2030 -
           ((C24114 * C30190 + C33404 + C33404 + C153887 * C30194 +
             C24112 * C30191 + C33405 + C33405 + C24105 * C30195 +
             C24110 * C6305 + C33406 + C33406 + C24104 * C6317) *
                C153454 * C153890 +
            (C33424 + C33423 + C33422) * C153454 * C153915 +
            (C33421 + C33420 + C33419) * C153454 * C153926) *
               C153591) *
              C322) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
            C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 + C24119 +
            C153887 * C354) *
               C153454 * C153926 +
           (C31259 + C31260 + C31261) * C153454 * C153915 + C31273 * C153890) *
              C2236 -
          (C34027 * C153890 + (C31264 + C31263 + C31262) * C153454 * C153915 +
           (C31261 + C31260 + C31259) * C153454 * C153926) *
              C2237 +
          (C31273 * C153926 + (C31267 + C31266 + C31265) * C153454 * C153915 +
           (C34031 + C34032 + C34033) * C153454 * C153890) *
              C2238 -
          ((C24114 * C34006 + C34020 + C34020 + C153887 * C34010 +
            C24112 * C34007 + C34021 + C34021 + C24105 * C34011 +
            C24110 * C10466 + C34022 + C34022 + C24104 * C10472) *
               C153454 * C153890 +
           (C34033 + C34032 + C34031) * C153454 * C153915 + C34027 * C153926) *
              C2239) *
         C153511 * C153492) /
            (p * q * std::sqrt(p + q));
    d2ee[343] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
             C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
             C153887 * C354) *
                C2818 +
            (C2894 + C2895 + C2896) * C2819 + C2908 * C153874) *
               C153626 * C153910 -
           (C4004 * C153874 + (C3529 + C3530 + C3531) * C2819 +
            (C2825 * C1892 + C3472 + C3472 + C153887 * C1902 + C2823 * C1057 +
             C3473 + C3473 + C153913 * C1069 + C2821 * C542 + C3474 + C3474 +
             C153925 * C566) *
                C2818) *
               C153626 * C153911 +
           ((C2821 * C543 + C3475 + C3475 + C153925 * C567 + C2823 * C1461 +
             C3476 + C3476 + C153913 * C1471 + C2825 * C3441 + C3477 + C3477 +
             C153887 * C3449) *
                C2818 +
            (C3532 + C3533 + C3534) * C2819 +
            (C3535 + C3536 + C3537) * C153874) *
               C153626 * C2546) *
              C153511 * C153829 +
          (((C3531 + C3530 + C3529) * C2818 + (C3528 + C3527 + C3526) * C2819 +
            (C4011 + C4012 + C4013) * C153874) *
               C153626 * C153911 -
           (C2909 * C153874 + (C2899 + C2898 + C2897) * C2819 +
            (C2896 + C2895 + C2894) * C2818) *
               C153626 * C153910 -
           ((C2825 * C3444 + C3499 + C3499 + C153887 * C3452 + C2823 * C1458 +
             C3500 + C3500 + C153913 * C1468 + C2821 * C546 + C3501 + C3501 +
             C153925 * C570) *
                C153874 +
            (C3537 + C3536 + C3535) * C2819 + (C3534 + C3533 + C3532) * C2818) *
               C153626 * C2546) *
              C153511 * C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153608 * C152) * C122 + C193 * C123 +
            C194 * C124 + C195 * C125 + C196 * C126) *
               C153626 * C153910 -
           (C619 * C126 + C620 * C125 + C621 * C124 + C622 * C123 +
            (C134 * C542 + C587 + C587 + C153608 * C566) * C122) *
               C153626 * C153911 +
           ((C134 * C543 + C588 + C588 + C153608 * C567) * C122 + C623 * C123 +
            C624 * C124 + C625 * C125 + C626 * C126) *
               C153626 * C2546) *
              C153511 * C153829 +
          ((C622 * C122 + C621 * C123 + C620 * C124 + C619 * C125 +
            C895 * C126) *
               C153626 * C153911 -
           (C197 * C126 + C196 * C125 + C195 * C124 + C194 * C123 +
            C193 * C122) *
               C153626 * C153910 -
           ((C134 * C549 + C602 + C602 + C153608 * C573) * C126 + C626 * C125 +
            C625 * C124 + C624 * C123 + C623 * C122) *
               C153626 * C2546) *
              C153511 * C153498)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C2818 +
             C193 * C2819 + C194 * C153874) *
                C153926 +
            (C7742 + C7688 + C7689) * C153915 + C7751 * C153890) *
               C153910 -
           (C10482 * C153890 + (C7693 + C7692 + C7743) * C153915 +
            (C7689 + C7688 + C7742) * C153926) *
               C153911 +
           (C7751 * C153926 + (C7746 + C7745 + C7744) * C153915 +
            (C10486 + C10477 + C10478) * C153890) *
               C2546) *
              C153511 * C153829 +
          (((C7707 + C7708 + C7709) * C153926 +
            (C7710 + C7711 + C7712) * C153915 +
            (C7747 + C7748 + C7749) * C153890) *
               C153911 -
           (C7733 * C153890 + (C7709 + C7708 + C7707) * C153915 +
            (C195 * C153874 + C194 * C2819 + C193 * C2818) * C153926) *
               C153910 -
           (((C134 * C7676 + C7715 + C7715 + C153608 * C7684) * C153874 +
             C7740 * C2819 + C7739 * C2818) *
                C153890 +
            (C7749 + C7748 + C7747) * C153915 + C7733 * C153926) *
               C2546) *
              C153511 * C153498)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
             C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 + C24119 +
             C153887 * C354) *
                C153922 +
            (C24183 + C24184 + C24185) * C153903 + C24197 * C153874) *
               C153626 * C153910 -
           (C25269 * C153874 + (C24794 + C24795 + C24796) * C153903 +
            (C24114 * C1892 + C24737 + C24737 + C153887 * C1902 +
             C24112 * C1057 + C24738 + C24738 + C24105 * C1069 + C24110 * C542 +
             C24739 + C24739 + C24104 * C566) *
                C153922) *
               C153626 * C153911 +
           ((C24110 * C543 + C24740 + C24740 + C24104 * C567 + C24112 * C1461 +
             C24741 + C24741 + C24105 * C1471 + C24114 * C3441 + C24742 +
             C24742 + C153887 * C3449) *
                C153922 +
            (C24797 + C24798 + C24799) * C153903 +
            (C24800 + C24801 + C24802) * C153874) *
               C153626 * C2546) *
              C153511 * C153829 +
          (((C24796 + C24795 + C24794) * C153922 +
            (C24793 + C24792 + C24791) * C153903 +
            (C25276 + C25277 + C25278) * C153874) *
               C153626 * C153911 -
           (C24198 * C153874 + (C24188 + C24187 + C24186) * C153903 +
            (C24185 + C24184 + C24183) * C153922) *
               C153626 * C153910 -
           ((C24114 * C3444 + C24764 + C24764 + C153887 * C3452 +
             C24112 * C1458 + C24765 + C24765 + C24105 * C1468 + C24110 * C546 +
             C24766 + C24766 + C24104 * C570) *
                C153874 +
            (C24802 + C24801 + C24800) * C153903 +
            (C24799 + C24798 + C24797) * C153922) *
               C153626 * C2546) *
              C153511 * C153498)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C28350 * C136 + C28361 + C28361 + C28344 * C152 + C28352 * C329 +
            C28362 + C28362 + C28345 * C353 + C28354 * C330 + C28363 + C28363 +
            C28346 * C354 + C28356 * C1319 + C28364 + C28364 + C28347 * C1329 +
            C28358 * C3127 + C28365 + C28365 + C28348 * C3135) *
               C153454 * C153626 * C153910 -
           (C28358 * C5703 + C28657 + C28657 + C28348 * C5709 + C28356 * C4303 +
            C28658 + C28658 + C28347 * C4311 + C28354 * C1892 + C28659 +
            C28659 + C28346 * C1902 + C28352 * C1057 + C28660 + C28660 +
            C28345 * C1069 + C28350 * C542 + C28661 + C28661 + C28344 * C566) *
               C153454 * C153626 * C153911 +
           (C28350 * C543 + C28662 + C28662 + C28344 * C567 + C28352 * C1461 +
            C28663 + C28663 + C28345 * C1471 + C28354 * C3441 + C28664 +
            C28664 + C28346 * C3449 + C28356 * C4959 + C28665 + C28665 +
            C28347 * C4965 + C28358 * C28650 + C28666 + C28666 +
            C28348 * C28654) *
               C153454 * C153626 * C2546) *
              C153511 * C153829 +
          ((C28350 * C541 + C28667 + C28667 + C28344 * C565 + C28352 * C1058 +
            C28668 + C28668 + C28345 * C1070 + C28354 * C1891 + C28669 +
            C28669 + C28346 * C1901 + C28356 * C4304 + C28670 + C28670 +
            C28347 * C4312 + C28358 * C5702 + C28671 + C28671 +
            C28348 * C5708) *
               C153454 * C153626 * C153911 -
           (C28358 * C3128 + C28366 + C28366 + C28348 * C3136 + C28356 * C1318 +
            C28367 + C28367 + C28347 * C1328 + C28354 * C331 + C28368 + C28368 +
            C28346 * C355 + C28352 * C328 + C28369 + C28369 + C28345 * C352 +
            C28350 * C137 + C28370 + C28370 + C28344 * C153) *
               C153454 * C153626 * C153910 -
           (C28358 * C28651 + C28672 + C28672 + C28348 * C28655 +
            C28356 * C4958 + C28673 + C28673 + C28347 * C4964 + C28354 * C3442 +
            C28674 + C28674 + C28346 * C3450 + C28352 * C1460 + C28675 +
            C28675 + C28345 * C1470 + C28350 * C544 + C28676 + C28676 +
            C28344 * C568) *
               C153454 * C153626 * C2546) *
              C153511 * C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
             C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 + C24119 +
             C153887 * C354) *
                C153454 * C153926 +
            (C31259 + C31260 + C31261) * C153454 * C153915 + C31273 * C153890) *
               C153910 -
           (C34027 * C153890 + (C31264 + C31263 + C31262) * C153454 * C153915 +
            (C31261 + C31260 + C31259) * C153454 * C153926) *
               C153911 +
           (C31273 * C153926 + (C31267 + C31266 + C31265) * C153454 * C153915 +
            (C34031 + C34032 + C34033) * C153454 * C153890) *
               C2546) *
              C153511 * C153829 +
          (((C24796 + C24795 + C24794) * C153454 * C153926 +
            (C24797 + C24798 + C24799) * C153454 * C153915 +
            (C31268 + C31269 + C31270) * C153454 * C153890) *
               C153911 -
           (C31258 * C153890 + (C24794 + C24795 + C24796) * C153454 * C153915 +
            (C24185 + C24184 + C24183) * C153454 * C153926) *
               C153910 -
           ((C24114 * C31196 + C31230 + C31230 + C153887 * C31200 +
             C24112 * C9116 + C31231 + C31231 + C24105 * C9122 +
             C24110 * C7674 + C31232 + C31232 + C24104 * C7682) *
                C153454 * C153890 +
            (C31270 + C31269 + C31268) * C153454 * C153915 + C31258 * C153926) *
               C2546) *
              C153511 * C153498)) /
            (p * q * std::sqrt(p + q));
    d2ee[344] +=
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153608 * C152) * C122 + C193 * C123 +
            C194 * C124 + C195 * C125 + C196 * C126) *
               C153626 * C2030 -
           (C619 * C126 + C620 * C125 + C621 * C124 + C622 * C123 +
            (C134 * C542 + C587 + C587 + C153608 * C566) * C122) *
               C153626 * C153591) *
              C320 +
          (((C134 * C1057 + C1076 + C1076 + C153608 * C1069) * C122 +
            C1098 * C123 + C1099 * C124 + C1100 * C125 + C1101 * C126) *
               C153626 * C153591 -
           (C406 * C126 + C407 * C125 + C408 * C124 + C409 * C123 +
            (C134 * C329 + C374 + C374 + C153608 * C353) * C122) *
               C153626 * C2030) *
              C321 +
          (((C134 * C330 + C375 + C375 + C153608 * C354) * C122 + C410 * C123 +
            C411 * C124 + C412 * C125 + C413 * C126) *
               C153626 * C2030 -
           ((C134 * C1888 + C1904 + C1904 + C153608 * C1898) * C126 +
            (C134 * C1889 + C1905 + C1905 + C153608 * C1899) * C125 +
            (C134 * C1890 + C1906 + C1906 + C153608 * C1900) * C124 +
            (C134 * C1891 + C1907 + C1907 + C153608 * C1901) * C123 +
            (C134 * C1892 + C1908 + C1908 + C153608 * C1902) * C122) *
               C153626 * C153591) *
              C322) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153608 * C152) * C122 + C193 * C123 +
            C194 * C124 + C195 * C125 + C196 * C126) *
               C153626 * C2030 -
           (C619 * C126 + C620 * C125 + C621 * C124 + C622 * C123 +
            (C134 * C542 + C587 + C587 + C153608 * C566) * C122) *
               C153626 * C153591) *
              C153511 * C1225 +
          ((C622 * C122 + C621 * C123 + C620 * C124 + C619 * C125 +
            C895 * C126) *
               C153626 * C153591 -
           (C197 * C126 + C196 * C125 + C195 * C124 + C194 * C123 +
            C193 * C122) *
               C153626 * C2030) *
              C153511 * C1226 +
          ((C194 * C122 + C195 * C123 + C196 * C124 + C197 * C125 +
            C198 * C126) *
               C153626 * C2030 -
           ((C134 * C886 + C892 + C892 + C153608 * C888) * C126 + C895 * C125 +
            C619 * C124 + C620 * C123 + C621 * C122) *
               C153626 * C153591) *
              C153511 * C1227)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
             C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
             C153887 * C354) *
                C2818 +
            (C2894 + C2895 + C2896) * C2819 + C2908 * C153874) *
               C153626 * C2030 -
           (C4004 * C153874 + (C3529 + C3530 + C3531) * C2819 +
            (C2825 * C1892 + C3472 + C3472 + C153887 * C1902 + C2823 * C1057 +
             C3473 + C3473 + C153913 * C1069 + C2821 * C542 + C3474 + C3474 +
             C153925 * C566) *
                C2818) *
               C153626 * C153591) *
              C153511 * C1225 +
          (((C3531 + C3530 + C3529) * C2818 + (C3528 + C3527 + C3526) * C2819 +
            (C4011 + C4012 + C4013) * C153874) *
               C153626 * C153591 -
           (C2909 * C153874 + (C2899 + C2898 + C2897) * C2819 +
            (C2896 + C2895 + C2894) * C2818) *
               C153626 * C2030) *
              C153511 * C1226 +
          ((C2908 * C2818 + (C2902 + C2901 + C2900) * C2819 +
            (C2903 + C2904 + C2905) * C153874) *
               C153626 * C2030 -
           ((C2825 * C1888 + C4001 + C4001 + C153887 * C1898 + C2823 * C1061 +
             C4002 + C4002 + C153913 * C1073 + C2821 * C538 + C4003 + C4003 +
             C153925 * C562) *
                C153874 +
            (C4013 + C4012 + C4011) * C2819 + C4004 * C2818) *
               C153626 * C153591) *
              C153511 * C1227)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
             C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
             C153887 * C354) *
                C2818 +
            (C2894 + C2895 + C2896) * C2819 + C2908 * C153874) *
               C153626 * C2030 -
           (C4004 * C153874 + (C3529 + C3530 + C3531) * C2819 +
            (C2825 * C1892 + C3472 + C3472 + C153887 * C1902 + C2823 * C1057 +
             C3473 + C3473 + C153913 * C1069 + C2821 * C542 + C3474 + C3474 +
             C153925 * C566) *
                C2818) *
               C153626 * C153591) *
              C320 +
          (((C2821 * C1057 + C4316 + C4316 + C153925 * C1069 + C2823 * C1892 +
             C4317 + C4317 + C153913 * C1902 + C2825 * C4303 + C4318 + C4318 +
             C153887 * C4311) *
                C2818 +
            (C4352 + C4353 + C4354) * C2819 +
            (C4355 + C4356 + C4357) * C153874) *
               C153626 * C153591 -
           (C3766 * C153874 + (C3215 + C3216 + C3217) * C2819 +
            (C2825 * C1319 + C3158 + C3158 + C153887 * C1329 + C2823 * C330 +
             C3159 + C3159 + C153913 * C354 + C2821 * C329 + C3160 + C3160 +
             C153925 * C353) *
                C2818) *
               C153626 * C2030) *
              C321 +
          (((C2821 * C330 + C3161 + C3161 + C153925 * C354 + C2823 * C1319 +
             C3162 + C3162 + C153913 * C1329 + C2825 * C3127 + C3163 + C3163 +
             C153887 * C3135) *
                C2818 +
            (C3218 + C3219 + C3220) * C2819 +
            (C3221 + C3222 + C3223) * C153874) *
               C153626 * C2030 -
           ((C2825 * C5701 + C5711 + C5711 + C153887 * C5707 + C2823 * C4305 +
             C5712 + C5712 + C153913 * C4313 + C2821 * C1890 + C5713 + C5713 +
             C153925 * C1900) *
                C153874 +
            (C2825 * C5702 + C5714 + C5714 + C153887 * C5708 + C2823 * C4304 +
             C5715 + C5715 + C153913 * C4312 + C2821 * C1891 + C5716 + C5716 +
             C153925 * C1901) *
                C2819 +
            (C2825 * C5703 + C5717 + C5717 + C153887 * C5709 + C2823 * C4303 +
             C5718 + C5718 + C153913 * C4311 + C2821 * C1892 + C5719 + C5719 +
             C153925 * C1902) *
                C2818) *
               C153626 * C153591) *
              C322) *
         C153492) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C2818 +
             C193 * C2819 + C194 * C153874) *
                C153926 +
            (C7742 + C7688 + C7689) * C153915 + C7751 * C153890) *
               C2030 -
           ((C7744 + C7745 + C7746) * C153890 +
            (C7693 + C7692 + C7743) * C153915 +
            (C7689 + C7688 + C7742) * C153926) *
               C153591) *
              C153511 * C1225 +
          (((C7707 + C7708 + C7709) * C153926 +
            (C7710 + C7711 + C7712) * C153915 +
            (C7747 + C7748 + C7749) * C153890) *
               C153591 -
           (C7733 * C153890 + (C7709 + C7708 + C7707) * C153915 +
            (C195 * C153874 + C194 * C2819 + C193 * C2818) * C153926) *
               C2030) *
              C153511 * C1226 +
          (((C194 * C2818 + C195 * C2819 + C196 * C153874) * C153926 +
            (C8193 + C8194 + C8195) * C153915 +
            (C8196 + C8197 + C8198) * C153890) *
               C2030 -
           (((C134 * C2240 + C2256 + C2256 + C153608 * C2250) * C153874 +
             C7741 * C2819 + C7736 * C2818) *
                C153890 +
            (C8198 + C8197 + C8196) * C153915 +
            (C8195 + C8194 + C8193) * C153926) *
               C153591) *
              C153511 * C1227)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C2818 +
             C193 * C2819 + C194 * C153874) *
                C153926 +
            (C7742 + C7688 + C7689) * C153915 + C7751 * C153890) *
               C2030 -
           ((C7744 + C7745 + C7746) * C153890 +
            (C7693 + C7692 + C7743) * C153915 +
            (C7689 + C7688 + C7742) * C153926) *
               C153591) *
              C320 +
          (((C8526 + C8494 + C8495) * C153926 +
            (C8527 + C8498 + C8499) * C153915 +
            (C9137 + C9127 + C9128) * C153890) *
               C153591 -
           (C9134 * C153890 + (C8495 + C8494 + C8526) * C153915 +
            (C408 * C153874 + C409 * C2819 +
             (C134 * C329 + C374 + C374 + C153608 * C353) * C2818) *
                C153926) *
               C2030) *
              C321 +
          ((((C134 * C330 + C375 + C375 + C153608 * C354) * C2818 +
             C410 * C2819 + C411 * C153874) *
                C153926 +
            (C9881 + C9866 + C9867) * C153915 +
            (C9882 + C9870 + C9871) * C153890) *
               C2030 -
           (((C134 * C6301 + C9872 + C9872 + C153608 * C6313) * C153874 +
             (C134 * C6303 + C9873 + C9873 + C153608 * C6315) * C2819 +
             (C134 * C6305 + C9874 + C9874 + C153608 * C6317) * C2818) *
                C153890 +
            (C9871 + C9870 + C9882) * C153915 +
            (C9867 + C9866 + C9881) * C153926) *
               C153591) *
              C322) *
         C153492) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
             C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 + C24119 +
             C153887 * C354) *
                C153922 +
            (C24183 + C24184 + C24185) * C153903 + C24197 * C153874) *
               C153626 * C2030 -
           (C25269 * C153874 + (C24794 + C24795 + C24796) * C153903 +
            (C24114 * C1892 + C24737 + C24737 + C153887 * C1902 +
             C24112 * C1057 + C24738 + C24738 + C24105 * C1069 + C24110 * C542 +
             C24739 + C24739 + C24104 * C566) *
                C153922) *
               C153626 * C153591) *
              C153511 * C1225 +
          (((C24796 + C24795 + C24794) * C153922 +
            (C24793 + C24792 + C24791) * C153903 +
            (C25276 + C25277 + C25278) * C153874) *
               C153626 * C153591 -
           (C24198 * C153874 + (C24188 + C24187 + C24186) * C153903 +
            (C24185 + C24184 + C24183) * C153922) *
               C153626 * C2030) *
              C153511 * C1226 +
          ((C24197 * C153922 + (C24191 + C24190 + C24189) * C153903 +
            (C24192 + C24193 + C24194) * C153874) *
               C153626 * C2030 -
           ((C24114 * C1888 + C25266 + C25266 + C153887 * C1898 +
             C24112 * C1061 + C25267 + C25267 + C24105 * C1073 + C24110 * C538 +
             C25268 + C25268 + C24104 * C562) *
                C153874 +
            (C25278 + C25277 + C25276) * C153903 + C25269 * C153922) *
               C153626 * C153591) *
              C153511 * C1227)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
             C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 + C24119 +
             C153887 * C354) *
                C153922 +
            (C24183 + C24184 + C24185) * C153903 + C24197 * C153874) *
               C153626 * C2030 -
           (C25269 * C153874 + (C24794 + C24795 + C24796) * C153903 +
            (C24114 * C1892 + C24737 + C24737 + C153887 * C1902 +
             C24112 * C1057 + C24738 + C24738 + C24105 * C1069 + C24110 * C542 +
             C24739 + C24739 + C24104 * C566) *
                C153922) *
               C153626 * C153591) *
              C320 +
          (((C24110 * C1057 + C25569 + C25569 + C24104 * C1069 +
             C24112 * C1892 + C25570 + C25570 + C24105 * C1902 +
             C24114 * C4303 + C25571 + C25571 + C153887 * C4311) *
                C153922 +
            (C25605 + C25606 + C25607) * C153903 +
            (C25608 + C25609 + C25610) * C153874) *
               C153626 * C153591 -
           (C25031 * C153874 + (C24492 + C24493 + C24494) * C153903 +
            (C24114 * C1319 + C24435 + C24435 + C153887 * C1329 +
             C24112 * C330 + C24436 + C24436 + C24105 * C354 + C24110 * C329 +
             C24437 + C24437 + C24104 * C353) *
                C153922) *
               C153626 * C2030) *
              C321 +
          (((C24110 * C330 + C24438 + C24438 + C24104 * C354 + C24112 * C1319 +
             C24439 + C24439 + C24105 * C1329 + C24114 * C3127 + C24440 +
             C24440 + C153887 * C3135) *
                C153922 +
            (C24495 + C24496 + C24497) * C153903 +
            (C24498 + C24499 + C24500) * C153874) *
               C153626 * C2030 -
           ((C24114 * C5701 + C26937 + C26937 + C153887 * C5707 +
             C24112 * C4305 + C26938 + C26938 + C24105 * C4313 +
             C24110 * C1890 + C26939 + C26939 + C24104 * C1900) *
                C153874 +
            (C24114 * C5702 + C26940 + C26940 + C153887 * C5708 +
             C24112 * C4304 + C26941 + C26941 + C24105 * C4312 +
             C24110 * C1891 + C26942 + C26942 + C24104 * C1901) *
                C153903 +
            (C24114 * C5703 + C26943 + C26943 + C153887 * C5709 +
             C24112 * C4303 + C26944 + C26944 + C24105 * C4311 +
             C24110 * C1892 + C26945 + C26945 + C24104 * C1902) *
                C153922) *
               C153626 * C153591) *
              C322) *
         C153492) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C28350 * C136 + C28361 + C28361 + C28344 * C152 + C28352 * C329 +
            C28362 + C28362 + C28345 * C353 + C28354 * C330 + C28363 + C28363 +
            C28346 * C354 + C28356 * C1319 + C28364 + C28364 + C28347 * C1329 +
            C28358 * C3127 + C28365 + C28365 + C28348 * C3135) *
               C153454 * C153626 * C2030 -
           (C28358 * C5703 + C28657 + C28657 + C28348 * C5709 + C28356 * C4303 +
            C28658 + C28658 + C28347 * C4311 + C28354 * C1892 + C28659 +
            C28659 + C28346 * C1902 + C28352 * C1057 + C28660 + C28660 +
            C28345 * C1069 + C28350 * C542 + C28661 + C28661 + C28344 * C566) *
               C153454 * C153626 * C153591) *
              C153511 * C1225 +
          ((C28350 * C541 + C28667 + C28667 + C28344 * C565 + C28352 * C1058 +
            C28668 + C28668 + C28345 * C1070 + C28354 * C1891 + C28669 +
            C28669 + C28346 * C1901 + C28356 * C4304 + C28670 + C28670 +
            C28347 * C4312 + C28358 * C5702 + C28671 + C28671 +
            C28348 * C5708) *
               C153454 * C153626 * C153591 -
           (C28358 * C3128 + C28366 + C28366 + C28348 * C3136 + C28356 * C1318 +
            C28367 + C28367 + C28347 * C1328 + C28354 * C331 + C28368 + C28368 +
            C28346 * C355 + C28352 * C328 + C28369 + C28369 + C28345 * C352 +
            C28350 * C137 + C28370 + C28370 + C28344 * C153) *
               C153454 * C153626 * C2030) *
              C153511 * C1226 +
          ((C28350 * C138 + C28371 + C28371 + C28344 * C154 + C28352 * C327 +
            C28372 + C28372 + C28345 * C351 + C28354 * C332 + C28373 + C28373 +
            C28346 * C356 + C28356 * C1317 + C28374 + C28374 + C28347 * C1327 +
            C28358 * C3129 + C28375 + C28375 + C28348 * C3137) *
               C153454 * C153626 * C2030 -
           (C28358 * C5701 + C28926 + C28926 + C28348 * C5707 + C28356 * C4305 +
            C28927 + C28927 + C28347 * C4313 + C28354 * C1890 + C28928 +
            C28928 + C28346 * C1900 + C28352 * C1059 + C28929 + C28929 +
            C28345 * C1071 + C28350 * C540 + C28930 + C28930 + C28344 * C564) *
               C153454 * C153626 * C153591) *
              C153511 * C1227)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C28350 * C136 + C28361 + C28361 + C28344 * C152 + C28352 * C329 +
            C28362 + C28362 + C28345 * C353 + C28354 * C330 + C28363 + C28363 +
            C28346 * C354 + C28356 * C1319 + C28364 + C28364 + C28347 * C1329 +
            C28358 * C3127 + C28365 + C28365 + C28348 * C3135) *
               C153454 * C153626 * C2030 -
           (C28358 * C5703 + C28657 + C28657 + C28348 * C5709 + C28356 * C4303 +
            C28658 + C28658 + C28347 * C4311 + C28354 * C1892 + C28659 +
            C28659 + C28346 * C1902 + C28352 * C1057 + C28660 + C28660 +
            C28345 * C1069 + C28350 * C542 + C28661 + C28661 + C28344 * C566) *
               C153454 * C153626 * C153591) *
              C320 +
          ((C28350 * C1057 + C29099 + C29099 + C28344 * C1069 + C28352 * C1892 +
            C29100 + C29100 + C28345 * C1902 + C28354 * C4303 + C29101 +
            C29101 + C28346 * C4311 + C28356 * C5703 + C29102 + C29102 +
            C28347 * C5709 + C28358 * C29092 + C29103 + C29103 +
            C28348 * C29096) *
               C153454 * C153626 * C153591 -
           (C28358 * C4723 + C28509 + C28509 + C28348 * C4729 + C28356 * C3127 +
            C28510 + C28510 + C28347 * C3135 + C28354 * C1319 + C28511 +
            C28511 + C28346 * C1329 + C28352 * C330 + C28512 + C28512 +
            C28345 * C354 + C28350 * C329 + C28513 + C28513 + C28344 * C353) *
               C153454 * C153626 * C2030) *
              C321 +
          ((C28350 * C330 + C28514 + C28514 + C28344 * C354 + C28352 * C1319 +
            C28515 + C28515 + C28345 * C1329 + C28354 * C3127 + C28516 +
            C28516 + C28346 * C3135 + C28356 * C4723 + C28517 + C28517 +
            C28347 * C4729 + C28358 * C28502 + C28518 + C28518 +
            C28348 * C28506) *
               C153454 * C153626 * C2030 -
           (C28358 * C29856 + C29860 + C29860 + C28348 * C29858 +
            C28356 * C29092 + C29861 + C29861 + C28347 * C29096 +
            C28354 * C5703 + C29862 + C29862 + C28346 * C5709 + C28352 * C4303 +
            C29863 + C29863 + C28345 * C4311 + C28350 * C1892 + C29864 +
            C29864 + C28344 * C1902) *
               C153454 * C153626 * C153591) *
              C322) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
             C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 + C24119 +
             C153887 * C354) *
                C153454 * C153926 +
            (C31259 + C31260 + C31261) * C153454 * C153915 + C31273 * C153890) *
               C2030 -
           ((C31265 + C31266 + C31267) * C153454 * C153890 +
            (C31264 + C31263 + C31262) * C153454 * C153915 +
            (C31261 + C31260 + C31259) * C153454 * C153926) *
               C153591) *
              C153511 * C1225 +
          (((C24796 + C24795 + C24794) * C153454 * C153926 +
            (C24797 + C24798 + C24799) * C153454 * C153915 +
            (C31268 + C31269 + C31270) * C153454 * C153890) *
               C153591 -
           (C31258 * C153890 + (C24794 + C24795 + C24796) * C153454 * C153915 +
            (C24185 + C24184 + C24183) * C153454 * C153926) *
               C2030) *
              C153511 * C1226 +
          ((C24197 * C153454 * C153926 +
            (C24793 + C24792 + C24791) * C153454 * C153915 +
            (C24800 + C24801 + C24802) * C153454 * C153890) *
               C2030 -
           ((C24114 * C6301 + C27528 + C27528 + C153887 * C6313 +
             C24112 * C6302 + C27529 + C27529 + C24105 * C6314 +
             C24110 * C2242 + C27530 + C27530 + C24104 * C2252) *
                C153454 * C153890 +
            (C24802 + C24801 + C24800) * C153454 * C153915 +
            C25269 * C153454 * C153926) *
               C153591) *
              C153511 * C1227)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
             C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 + C24119 +
             C153887 * C354) *
                C153454 * C153926 +
            (C31259 + C31260 + C31261) * C153454 * C153915 + C31273 * C153890) *
               C2030 -
           ((C31265 + C31266 + C31267) * C153454 * C153890 +
            (C31264 + C31263 + C31262) * C153454 * C153915 +
            (C31261 + C31260 + C31259) * C153454 * C153926) *
               C153591) *
              C320 +
          (((C32045 + C32046 + C32047) * C153454 * C153926 +
            (C32048 + C32049 + C32050) * C153454 * C153915 +
            (C32663 + C32664 + C32665) * C153454 * C153890) *
               C153591 -
           (C32662 * C153890 + (C32047 + C32046 + C32045) * C153454 * C153915 +
            (C24114 * C1319 + C24435 + C24435 + C153887 * C1329 +
             C24112 * C330 + C24436 + C24436 + C24105 * C354 + C24110 * C329 +
             C24437 + C24437 + C24104 * C353) *
                C153454 * C153926) *
               C2030) *
              C321 +
          (((C24110 * C330 + C24438 + C24438 + C24104 * C354 + C24112 * C1319 +
             C24439 + C24439 + C24105 * C1329 + C24114 * C3127 + C24440 +
             C24440 + C153887 * C3135) *
                C153454 * C153926 +
            (C33419 + C33420 + C33421) * C153454 * C153915 +
            (C33422 + C33423 + C33424) * C153454 * C153890) *
               C2030 -
           ((C24114 * C30190 + C33404 + C33404 + C153887 * C30194 +
             C24112 * C30191 + C33405 + C33405 + C24105 * C30195 +
             C24110 * C6305 + C33406 + C33406 + C24104 * C6317) *
                C153454 * C153890 +
            (C33424 + C33423 + C33422) * C153454 * C153915 +
            (C33421 + C33420 + C33419) * C153454 * C153926) *
               C153591) *
              C322) *
         C153492) /
            (p * q * std::sqrt(p + q));
    d2ee[345] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C11344 +
             C193 * C11345 + C194 * C11346 + C195 * C153852) *
                C153853 +
            (C15568 + C15569 + C15570 + C15571) * C153713) *
               C153527 * C153837 -
           ((C1100 * C153852 + C1099 * C11346 + C1098 * C11345 +
             C8522 * C11344) *
                C153713 +
            (C407 * C153852 + C408 * C11346 + C409 * C11345 +
             (C134 * C329 + C374 + C374 + C153608 * C353) * C11344) *
                C153853) *
               C153527 * C153563) *
              C153906 +
          (((C409 * C11344 + C408 * C11345 + C407 * C11346 + C406 * C153852) *
                C153853 +
            (C1098 * C11344 + C1099 * C11345 + C1100 * C11346 +
             C1101 * C153852) *
                C153713) *
               C153527 * C153563 -
           ((C15579 + C15578 + C15577 + C15576) * C153713 +
            (C196 * C153852 + C195 * C11346 + C194 * C11345 + C193 * C11344) *
                C153853) *
               C153527 * C153837) *
              C153907 +
          (((C194 * C11344 + C195 * C11345 + C196 * C11346 + C197 * C153852) *
                C153853 +
            (C621 * C11344 + C620 * C11345 + C619 * C11346 + C895 * C153852) *
                C153713) *
               C153527 * C153837 -
           (((C134 * C1062 + C1089 + C1089 + C153608 * C1074) * C153852 +
             C1101 * C11346 + C1100 * C11345 + C1099 * C11344) *
                C153713 +
            (C762 * C153852 + C406 * C11346 + C407 * C11345 + C408 * C11344) *
                C153853) *
               C153527 * C153563) *
              C752)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
              C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 +
              C24119 + C153887 * C354) *
                 C153818 +
             (C24183 + C24184 + C24185) * C153464) *
                C153853 +
            ((C31259 + C31260 + C31261) * C153818 + C39378 * C153464) *
                C153713) *
               C153527 * C153837 -
           (((C25607 + C25606 + C25605) * C153464 +
             (C32047 + C32046 + C32045) * C153818) *
                C153713 +
            ((C24492 + C24493 + C24494) * C153464 +
             (C24114 * C1319 + C24435 + C24435 + C153887 * C1329 +
              C24112 * C330 + C24436 + C24436 + C24105 * C354 + C24110 * C329 +
              C24437 + C24437 + C24104 * C353) *
                 C153818) *
                C153853) *
               C153527 * C153563) *
              C153906 +
          ((((C24494 + C24493 + C24492) * C153818 +
             (C24491 + C24490 + C24489) * C153464) *
                C153853 +
            ((C25605 + C25606 + C25607) * C153818 +
             (C25608 + C25609 + C25610) * C153464) *
                C153713) *
               C153527 * C153563 -
           ((C25269 * C153464 + C39379 * C153818) * C153713 +
            ((C24188 + C24187 + C24186) * C153464 +
             (C24185 + C24184 + C24183) * C153818) *
                C153853) *
               C153527 * C153837) *
              C153907 +
          (((C24197 * C153818 + (C24191 + C24190 + C24189) * C153464) *
                C153853 +
            ((C24793 + C24792 + C24791) * C153818 +
             (C25276 + C25277 + C25278) * C153464) *
                C153713) *
               C153527 * C153837 -
           (((C24114 * C4306 + C25590 + C25590 + C153887 * C4314 +
              C24112 * C1889 + C25591 + C25591 + C24105 * C1899 +
              C24110 * C1060 + C25592 + C25592 + C24104 * C1072) *
                 C153464 +
             (C25610 + C25609 + C25608) * C153818) *
                C153713 +
            ((C25040 + C25039 + C25038) * C153464 + C25031 * C153818) *
                C153853) *
               C153527 * C153563) *
              C752)) /
            (p * q * std::sqrt(p + q));
    d2ee[346] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C153608 * C152) * C11344 +
              C193 * C11345 + C194 * C11346 + C195 * C153852) *
                 C153853 +
             (C15568 + C15569 + C15570 + C15571) * C153713) *
                C153838 -
            ((C15572 + C15573 + C15574 + C15575) * C153713 +
             (C15571 + C15570 + C15569 + C15568) * C153853) *
                C153591) *
               C153837 +
           (((C16234 + C16235 + C16236 + C16237) * C153853 +
             (C8523 * C11344 + C7451 * C11345 + C7450 * C11346 +
              C7974 * C153852) *
                 C153713) *
                C153591 -
            ((C16237 + C16236 + C16235 + C16234) * C153713 +
             (C407 * C153852 + C408 * C11346 + C409 * C11345 +
              (C134 * C329 + C374 + C374 + C153608 * C353) * C11344) *
                 C153853) *
                C153838) *
               C153563) *
              C323 +
          ((((C15576 + C15577 + C15578 + C15579) * C153853 +
             (C15580 + C15581 + C15582 + C15583) * C153713) *
                C153591 -
            ((C15579 + C15578 + C15577 + C15576) * C153713 +
             (C196 * C153852 + C195 * C11346 + C194 * C11345 + C193 * C11344) *
                 C153853) *
                C153838) *
               C153837 +
           (((C409 * C11344 + C408 * C11345 + C407 * C11346 + C406 * C153852) *
                 C153853 +
             (C16238 + C16239 + C16240 + C16241) * C153713) *
                C153838 -
            (((C134 * C1457 + C1473 + C1473 + C153608 * C1467) * C153852 +
              C7974 * C11346 + C7450 * C11345 + C7451 * C11344) *
                 C153713 +
             (C16241 + C16240 + C16239 + C16238) * C153853) *
                C153591) *
               C153563) *
              C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
               C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 +
               C24119 + C153887 * C354) *
                  C153818 +
              (C24183 + C24184 + C24185) * C153464) *
                 C153853 +
             ((C31259 + C31260 + C31261) * C153818 + C39378 * C153464) *
                 C153713) *
                C153838 -
            ((C31245 * C153464 + (C31264 + C31263 + C31262) * C153818) *
                 C153713 +
             (C39379 * C153464 + (C31261 + C31260 + C31259) * C153818) *
                 C153853) *
                C153591) *
               C153837 +
           ((((C32045 + C32046 + C32047) * C153818 + C40351 * C153464) *
                 C153853 +
             ((C32048 + C32049 + C32050) * C153818 +
              (C32051 + C32052 + C32053) * C153464) *
                 C153713) *
                C153591 -
            ((C40352 * C153464 + (C32047 + C32046 + C32045) * C153818) *
                 C153713 +
             ((C24492 + C24493 + C24494) * C153464 +
              (C24114 * C1319 + C24435 + C24435 + C153887 * C1329 +
               C24112 * C330 + C24436 + C24436 + C24105 * C354 + C24110 * C329 +
               C24437 + C24437 + C24104 * C353) *
                  C153818) *
                 C153853) *
                C153838) *
               C153563) *
              C323 +
          ((((C39378 * C153818 + C39962 * C153464) * C153853 +
             (C39380 * C153818 + (C24800 + C24801 + C24802) * C153464) *
                 C153713) *
                C153591 -
            ((C25269 * C153464 + C39379 * C153818) * C153713 +
             ((C24188 + C24187 + C24186) * C153464 +
              (C24185 + C24184 + C24183) * C153818) *
                 C153853) *
                C153838) *
               C153837 +
           ((((C24494 + C24493 + C24492) * C153818 +
              (C24491 + C24490 + C24489) * C153464) *
                 C153853 +
             (C40351 * C153818 + (C25608 + C25609 + C25610) * C153464) *
                 C153713) *
                C153838 -
            (((C24114 * C4957 + C26202 + C26202 + C153887 * C4963 +
               C24112 * C3443 + C26203 + C26203 + C24105 * C3451 +
               C24110 * C1459 + C26204 + C26204 + C24104 * C1469) *
                  C153464 +
              (C32053 + C32052 + C32051) * C153818) *
                 C153713 +
             ((C25610 + C25609 + C25608) * C153464 + C40352 * C153818) *
                 C153853) *
                C153591) *
               C153563) *
              C153498)) /
            (p * q * std::sqrt(p + q));
    d2ee[347] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C11344 +
             C193 * C11345 + C194 * C11346 + C195 * C153852) *
                C153853 +
            (C7734 * C11344 + C622 * C11345 + C621 * C11346 + C620 * C153852) *
                C153713) *
               C153527 * C320 -
           ((C1100 * C153852 + C1099 * C11346 + C1098 * C11345 +
             C8522 * C11344) *
                C153713 +
            (C407 * C153852 + C408 * C11346 + C409 * C11345 +
             (C134 * C329 + C374 + C374 + C153608 * C353) * C11344) *
                C153853) *
               C153527 * C321 +
           (((C134 * C330 + C375 + C375 + C153608 * C354) * C11344 +
             C410 * C11345 + C411 * C11346 + C412 * C153852) *
                C153853 +
            (C9879 * C11344 + C7452 * C11345 + C7453 * C11346 +
             C15373 * C153852) *
                C153713) *
               C153527 * C322) *
              C323 +
          (((C409 * C11344 + C408 * C11345 + C407 * C11346 + C406 * C153852) *
                C153853 +
            (C1098 * C11344 + C1099 * C11345 + C1100 * C11346 +
             C1101 * C153852) *
                C153713) *
               C153527 * C321 -
           ((C619 * C153852 + C620 * C11346 + C621 * C11345 + C622 * C11344) *
                C153713 +
            (C196 * C153852 + C195 * C11346 + C194 * C11345 + C193 * C11344) *
                C153853) *
               C153527 * C320 -
           (((C134 * C1888 + C1904 + C1904 + C153608 * C1898) * C153852 +
             C15373 * C11346 + C7453 * C11345 + C7452 * C11344) *
                C153713 +
            (C413 * C153852 + C412 * C11346 + C411 * C11345 + C410 * C11344) *
                C153853) *
               C153527 * C322) *
              C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153608 * C152) * C11344 +
            C193 * C11345 + C194 * C11346 + C195 * C153852) *
               C153853 +
           (C7734 * C11344 + C622 * C11345 + C621 * C11346 + C620 * C153852) *
               C153713) *
              C153527 * C153511 * C130 -
          ((C619 * C153852 + C620 * C11346 + C621 * C11345 + C622 * C11344) *
               C153713 +
           (C196 * C153852 + C195 * C11346 + C194 * C11345 + C193 * C11344) *
               C153853) *
              C153527 * C153511 * C131 +
          ((C194 * C11344 + C195 * C11345 + C196 * C11346 + C197 * C153852) *
               C153853 +
           (C621 * C11344 + C620 * C11345 + C619 * C11346 + C895 * C153852) *
               C153713) *
              C153527 * C153511 * C132 -
          (((C134 * C886 + C892 + C892 + C153608 * C888) * C153852 +
            C895 * C11346 + C619 * C11345 + C620 * C11344) *
               C153713 +
           (C198 * C153852 + C197 * C11346 + C196 * C11345 + C195 * C11344) *
               C153853) *
              C153527 * C153511 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C11344 +
             C193 * C11345 + C194 * C11346 + C195 * C153852) *
                C153853 +
            (C15568 + C15569 + C15570 + C15571) * C153713) *
               C535 -
           ((C15572 + C15573 + C15574 + C15575) * C153713 +
            (C15571 + C15570 + C15569 + C15568) * C153853) *
               C536 +
           ((C15575 + C15574 + C15573 + C15572) * C153853 +
            (C7738 * C11344 + C7737 * C11345 + C7736 * C11346 +
             C7741 * C153852) *
                C153713) *
               C537) *
              C153511 * C323 +
          (((C15576 + C15577 + C15578 + C15579) * C153853 +
            (C15580 + C15581 + C15582 + C15583) * C153713) *
               C536 -
           ((C15579 + C15578 + C15577 + C15576) * C153713 +
            (C196 * C153852 + C195 * C11346 + C194 * C11345 + C193 * C11344) *
                C153853) *
               C535 -
           (((C134 * C2240 + C2256 + C2256 + C153608 * C2250) * C153852 +
             C7741 * C11346 + C7736 * C11345 + C7737 * C11344) *
                C153713 +
            (C15583 + C15582 + C15581 + C15580) * C153853) *
               C537) *
              C153511 * C153498)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
             C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 + C24119 +
             C153887 * C354) *
                C153818 +
            (C24183 + C24184 + C24185) * C153464) *
               C153853 +
           ((C31259 + C31260 + C31261) * C153818 +
            (C24796 + C24795 + C24794) * C153464) *
               C153713) *
              C153527 * C153511 * C130 -
          ((C25269 * C153464 + (C24794 + C24795 + C24796) * C153818) * C153713 +
           ((C24188 + C24187 + C24186) * C153464 +
            (C24185 + C24184 + C24183) * C153818) *
               C153853) *
              C153527 * C153511 * C131 +
          ((C24197 * C153818 + (C24191 + C24190 + C24189) * C153464) * C153853 +
           ((C24793 + C24792 + C24791) * C153818 +
            (C25276 + C25277 + C25278) * C153464) *
               C153713) *
              C153527 * C153511 * C132 -
          (((C24114 * C1888 + C25266 + C25266 + C153887 * C1898 +
             C24112 * C1061 + C25267 + C25267 + C24105 * C1073 + C24110 * C538 +
             C25268 + C25268 + C24104 * C562) *
                C153464 +
            (C25278 + C25277 + C25276) * C153818) *
               C153713 +
           ((C24194 + C24193 + C24192) * C153464 + C24198 * C153818) *
               C153853) *
              C153527 * C153511 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
              C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 +
              C24119 + C153887 * C354) *
                 C153818 +
             (C24183 + C24184 + C24185) * C153464) *
                C153853 +
            ((C31259 + C31260 + C31261) * C153818 +
             (C24796 + C24795 + C24794) * C153464) *
                C153713) *
               C153527 * C320 -
           (((C25607 + C25606 + C25605) * C153464 +
             (C32047 + C32046 + C32045) * C153818) *
                C153713 +
            ((C24492 + C24493 + C24494) * C153464 +
             (C24114 * C1319 + C24435 + C24435 + C153887 * C1329 +
              C24112 * C330 + C24436 + C24436 + C24105 * C354 + C24110 * C329 +
              C24437 + C24437 + C24104 * C353) *
                 C153818) *
                C153853) *
               C153527 * C321 +
           (((C24110 * C330 + C24438 + C24438 + C24104 * C354 + C24112 * C1319 +
              C24439 + C24439 + C24105 * C1329 + C24114 * C3127 + C24440 +
              C24440 + C153887 * C3135) *
                 C153818 +
             (C24495 + C24496 + C24497) * C153464) *
                C153853 +
            ((C33419 + C33420 + C33421) * C153818 +
             (C39082 + C39083 + C39084) * C153464) *
                C153713) *
               C153527 * C322) *
              C323 +
          ((((C24494 + C24493 + C24492) * C153818 +
             (C24491 + C24490 + C24489) * C153464) *
                C153853 +
            ((C25605 + C25606 + C25607) * C153818 +
             (C25608 + C25609 + C25610) * C153464) *
                C153713) *
               C153527 * C321 -
           ((C25269 * C153464 + (C24794 + C24795 + C24796) * C153818) *
                C153713 +
            ((C24188 + C24187 + C24186) * C153464 +
             (C24185 + C24184 + C24183) * C153818) *
                C153853) *
               C153527 * C320 -
           (((C24114 * C5701 + C26937 + C26937 + C153887 * C5707 +
              C24112 * C4305 + C26938 + C26938 + C24105 * C4313 +
              C24110 * C1890 + C26939 + C26939 + C24104 * C1900) *
                 C153464 +
             (C39084 + C39083 + C39082) * C153818) *
                C153713 +
            ((C24500 + C24499 + C24498) * C153464 +
             (C24497 + C24496 + C24495) * C153818) *
                C153853) *
               C153527 * C322) *
              C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
              C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 +
              C24119 + C153887 * C354) *
                 C153818 +
             (C24183 + C24184 + C24185) * C153464) *
                C153853 +
            ((C31259 + C31260 + C31261) * C153818 + C39378 * C153464) *
                C153713) *
               C535 -
           ((C31245 * C153464 + (C31264 + C31263 + C31262) * C153818) *
                C153713 +
            (C39379 * C153464 + (C31261 + C31260 + C31259) * C153818) *
                C153853) *
               C536 +
           ((C31272 * C153818 + C39380 * C153464) * C153853 +
            ((C31267 + C31266 + C31265) * C153818 +
             (C31268 + C31269 + C31270) * C153464) *
                C153713) *
               C537) *
              C153511 * C323 +
          (((C39378 * C153818 + (C24793 + C24792 + C24791) * C153464) *
                C153853 +
            (C39380 * C153818 + (C24800 + C24801 + C24802) * C153464) *
                C153713) *
               C536 -
           ((C25269 * C153464 + C39379 * C153818) * C153713 +
            ((C24188 + C24187 + C24186) * C153464 +
             (C24185 + C24184 + C24183) * C153818) *
                C153853) *
               C535 -
           (((C24114 * C6301 + C27528 + C27528 + C153887 * C6313 +
              C24112 * C6302 + C27529 + C27529 + C24105 * C6314 +
              C24110 * C2242 + C27530 + C27530 + C24104 * C2252) *
                 C153464 +
             (C31270 + C31269 + C31268) * C153818) *
                C153713 +
            ((C24802 + C24801 + C24800) * C153464 + C31245 * C153818) *
                C153853) *
               C537) *
              C153511 * C153498)) /
            (p * q * std::sqrt(p + q));
    d2ee[348] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C11344 +
             C193 * C11345 + C194 * C11346 + C195 * C153852) *
                C153853 +
            (C15568 + C15569 + C15570 + C15571) * C153713) *
               C153838 -
           ((C15572 + C15573 + C15574 + C15575) * C153713 +
            (C15571 + C15570 + C15569 + C15568) * C153853) *
               C153591) *
              C153511 * C153906 +
          (((C15576 + C15577 + C15578 + C15579) * C153853 +
            (C15580 + C15581 + C15582 + C15583) * C153713) *
               C153591 -
           ((C15579 + C15578 + C15577 + C15576) * C153713 +
            (C196 * C153852 + C195 * C11346 + C194 * C11345 + C193 * C11344) *
                C153853) *
               C153838) *
              C153511 * C153907 +
          (((C194 * C11344 + C195 * C11345 + C196 * C11346 + C197 * C153852) *
                C153853 +
            (C15972 + C15973 + C15974 + C15975) * C153713) *
               C153838 -
           (((C134 * C549 + C602 + C602 + C153608 * C573) * C153852 +
             C626 * C11346 + C625 * C11345 + C624 * C11344) *
                C153713 +
            (C15975 + C15974 + C15973 + C15972) * C153853) *
               C153591) *
              C153511 * C752)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
              C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 +
              C24119 + C153887 * C354) *
                 C153818 +
             (C24183 + C24184 + C24185) * C153464) *
                C153853 +
            ((C31259 + C31260 + C31261) * C153818 + C39378 * C153464) *
                C153713) *
               C153838 -
           ((C31245 * C153464 + (C31264 + C31263 + C31262) * C153818) *
                C153713 +
            (C39379 * C153464 + (C31261 + C31260 + C31259) * C153818) *
                C153853) *
               C153591) *
              C153511 * C153906 +
          (((C39378 * C153818 + C39962 * C153464) * C153853 +
            (C39380 * C153818 + (C24800 + C24801 + C24802) * C153464) *
                C153713) *
               C153591 -
           ((C25269 * C153464 + C39379 * C153818) * C153713 +
            ((C24188 + C24187 + C24186) * C153464 +
             (C24185 + C24184 + C24183) * C153818) *
                C153853) *
               C153838) *
              C153511 * C153907 +
          (((C24197 * C153818 + (C24191 + C24190 + C24189) * C153464) *
                C153853 +
            (C39962 * C153818 + (C25276 + C25277 + C25278) * C153464) *
                C153713) *
               C153838 -
           (((C24114 * C3444 + C24764 + C24764 + C153887 * C3452 +
              C24112 * C1458 + C24765 + C24765 + C24105 * C1468 +
              C24110 * C546 + C24766 + C24766 + C24104 * C570) *
                 C153464 +
             (C24802 + C24801 + C24800) * C153818) *
                C153713 +
            ((C25278 + C25277 + C25276) * C153464 + C25269 * C153818) *
                C153853) *
               C153591) *
              C153511 * C752)) /
            (p * q * std::sqrt(p + q));
    d2ee[349] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153608 * C152) * C11344 +
            C193 * C11345 + C194 * C11346 + C195 * C153852) *
               C153853 +
           (C7734 * C11344 + C622 * C11345 + C621 * C11346 + C620 * C153852) *
               C153713) *
              C153527 * C153511 * C130 -
          ((C619 * C153852 + C620 * C11346 + C621 * C11345 + C622 * C11344) *
               C153713 +
           (C196 * C153852 + C195 * C11346 + C194 * C11345 + C193 * C11344) *
               C153853) *
              C153527 * C153511 * C131 +
          ((C194 * C11344 + C195 * C11345 + C196 * C11346 + C197 * C153852) *
               C153853 +
           (C621 * C11344 + C620 * C11345 + C619 * C11346 + C895 * C153852) *
               C153713) *
              C153527 * C153511 * C132 -
          (((C134 * C886 + C892 + C892 + C153608 * C888) * C153852 +
            C895 * C11346 + C619 * C11345 + C620 * C11344) *
               C153713 +
           (C198 * C153852 + C197 * C11346 + C196 * C11345 + C195 * C11344) *
               C153853) *
              C153527 * C153511 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C11344 +
             C193 * C11345 + C194 * C11346 + C195 * C153852) *
                C153853 +
            (C7734 * C11344 + C622 * C11345 + C621 * C11346 + C620 * C153852) *
                C153713) *
               C153527 * C320 -
           ((C1100 * C153852 + C1099 * C11346 + C1098 * C11345 +
             C8522 * C11344) *
                C153713 +
            (C407 * C153852 + C408 * C11346 + C409 * C11345 +
             (C134 * C329 + C374 + C374 + C153608 * C353) * C11344) *
                C153853) *
               C153527 * C321 +
           (((C134 * C330 + C375 + C375 + C153608 * C354) * C11344 +
             C410 * C11345 + C411 * C11346 + C412 * C153852) *
                C153853 +
            (C9879 * C11344 + C7452 * C11345 + C7453 * C11346 +
             C15373 * C153852) *
                C153713) *
               C153527 * C322) *
              C323 +
          (((C409 * C11344 + C408 * C11345 + C407 * C11346 + C406 * C153852) *
                C153853 +
            (C1098 * C11344 + C1099 * C11345 + C1100 * C11346 +
             C1101 * C153852) *
                C153713) *
               C153527 * C321 -
           ((C619 * C153852 + C620 * C11346 + C621 * C11345 + C622 * C11344) *
                C153713 +
            (C196 * C153852 + C195 * C11346 + C194 * C11345 + C193 * C11344) *
                C153853) *
               C153527 * C320 -
           (((C134 * C1888 + C1904 + C1904 + C153608 * C1898) * C153852 +
             C15373 * C11346 + C7453 * C11345 + C7452 * C11344) *
                C153713 +
            (C413 * C153852 + C412 * C11346 + C411 * C11345 + C410 * C11344) *
                C153853) *
               C153527 * C322) *
              C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
             C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 + C24119 +
             C153887 * C354) *
                C153818 +
            (C24183 + C24184 + C24185) * C153464) *
               C153853 +
           ((C31259 + C31260 + C31261) * C153818 +
            (C24796 + C24795 + C24794) * C153464) *
               C153713) *
              C153527 * C153511 * C130 -
          ((C25269 * C153464 + (C24794 + C24795 + C24796) * C153818) * C153713 +
           ((C24188 + C24187 + C24186) * C153464 +
            (C24185 + C24184 + C24183) * C153818) *
               C153853) *
              C153527 * C153511 * C131 +
          ((C24197 * C153818 + (C24191 + C24190 + C24189) * C153464) * C153853 +
           ((C24793 + C24792 + C24791) * C153818 +
            (C25276 + C25277 + C25278) * C153464) *
               C153713) *
              C153527 * C153511 * C132 -
          (((C24114 * C1888 + C25266 + C25266 + C153887 * C1898 +
             C24112 * C1061 + C25267 + C25267 + C24105 * C1073 + C24110 * C538 +
             C25268 + C25268 + C24104 * C562) *
                C153464 +
            (C25278 + C25277 + C25276) * C153818) *
               C153713 +
           ((C24194 + C24193 + C24192) * C153464 + C24198 * C153818) *
               C153853) *
              C153527 * C153511 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
              C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 +
              C24119 + C153887 * C354) *
                 C153818 +
             (C24183 + C24184 + C24185) * C153464) *
                C153853 +
            ((C31259 + C31260 + C31261) * C153818 +
             (C24796 + C24795 + C24794) * C153464) *
                C153713) *
               C153527 * C320 -
           (((C25607 + C25606 + C25605) * C153464 +
             (C32047 + C32046 + C32045) * C153818) *
                C153713 +
            ((C24492 + C24493 + C24494) * C153464 +
             (C24114 * C1319 + C24435 + C24435 + C153887 * C1329 +
              C24112 * C330 + C24436 + C24436 + C24105 * C354 + C24110 * C329 +
              C24437 + C24437 + C24104 * C353) *
                 C153818) *
                C153853) *
               C153527 * C321 +
           (((C24110 * C330 + C24438 + C24438 + C24104 * C354 + C24112 * C1319 +
              C24439 + C24439 + C24105 * C1329 + C24114 * C3127 + C24440 +
              C24440 + C153887 * C3135) *
                 C153818 +
             (C24495 + C24496 + C24497) * C153464) *
                C153853 +
            ((C33419 + C33420 + C33421) * C153818 +
             (C39082 + C39083 + C39084) * C153464) *
                C153713) *
               C153527 * C322) *
              C323 +
          ((((C24494 + C24493 + C24492) * C153818 +
             (C24491 + C24490 + C24489) * C153464) *
                C153853 +
            ((C25605 + C25606 + C25607) * C153818 +
             (C25608 + C25609 + C25610) * C153464) *
                C153713) *
               C153527 * C321 -
           ((C25269 * C153464 + (C24794 + C24795 + C24796) * C153818) *
                C153713 +
            ((C24188 + C24187 + C24186) * C153464 +
             (C24185 + C24184 + C24183) * C153818) *
                C153853) *
               C153527 * C320 -
           (((C24114 * C5701 + C26937 + C26937 + C153887 * C5707 +
              C24112 * C4305 + C26938 + C26938 + C24105 * C4313 +
              C24110 * C1890 + C26939 + C26939 + C24104 * C1900) *
                 C153464 +
             (C39084 + C39083 + C39082) * C153818) *
                C153713 +
            ((C24500 + C24499 + C24498) * C153464 +
             (C24497 + C24496 + C24495) * C153818) *
                C153853) *
               C153527 * C322) *
              C153498)) /
            (p * q * std::sqrt(p + q));
    d2ee[350] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C11344 +
             C193 * C11345 + C194 * C11346 + C195 * C153852) *
                C153853 +
            (C15568 + C15569 + C15570 + C15571) * C153713) *
               C153527 * C153908 -
           ((C16237 + C16236 + C16235 + C16234) * C153713 +
            (C407 * C153852 + C408 * C11346 + C409 * C11345 +
             (C134 * C329 + C374 + C374 + C153608 * C353) * C11344) *
                C153853) *
               C153527 * C153909 +
           (((C134 * C330 + C375 + C375 + C153608 * C354) * C11344 +
             C410 * C11345 + C411 * C11346 + C412 * C153852) *
                C153853 +
            (C9879 * C11344 + C7452 * C11345 + C7453 * C11346 +
             C15373 * C153852) *
                C153713) *
               C153527 * C1601) *
              C153829 +
          (((C409 * C11344 + C408 * C11345 + C407 * C11346 + C406 * C153852) *
                C153853 +
            (C16238 + C16239 + C16240 + C16241) * C153713) *
               C153527 * C153909 -
           ((C15579 + C15578 + C15577 + C15576) * C153713 +
            (C196 * C153852 + C195 * C11346 + C194 * C11345 + C193 * C11344) *
                C153853) *
               C153527 * C153908 -
           (((C134 * C1888 + C1904 + C1904 + C153608 * C1898) * C153852 +
             C15373 * C11346 + C7453 * C11345 + C7452 * C11344) *
                C153713 +
            (C413 * C153852 + C412 * C11346 + C411 * C11345 + C410 * C11344) *
                C153853) *
               C153527 * C1601) *
              C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
              C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 +
              C24119 + C153887 * C354) *
                 C153818 +
             (C24183 + C24184 + C24185) * C153464) *
                C153853 +
            ((C31259 + C31260 + C31261) * C153818 + C39378 * C153464) *
                C153713) *
               C153527 * C153908 -
           ((C40352 * C153464 + (C32047 + C32046 + C32045) * C153818) *
                C153713 +
            ((C24492 + C24493 + C24494) * C153464 +
             (C24114 * C1319 + C24435 + C24435 + C153887 * C1329 +
              C24112 * C330 + C24436 + C24436 + C24105 * C354 + C24110 * C329 +
              C24437 + C24437 + C24104 * C353) *
                 C153818) *
                C153853) *
               C153527 * C153909 +
           (((C24110 * C330 + C24438 + C24438 + C24104 * C354 + C24112 * C1319 +
              C24439 + C24439 + C24105 * C1329 + C24114 * C3127 + C24440 +
              C24440 + C153887 * C3135) *
                 C153818 +
             (C24495 + C24496 + C24497) * C153464) *
                C153853 +
            ((C33419 + C33420 + C33421) * C153818 +
             (C39082 + C39083 + C39084) * C153464) *
                C153713) *
               C153527 * C1601) *
              C153829 +
          ((((C24494 + C24493 + C24492) * C153818 +
             (C24491 + C24490 + C24489) * C153464) *
                C153853 +
            (C40351 * C153818 + (C25608 + C25609 + C25610) * C153464) *
                C153713) *
               C153527 * C153909 -
           ((C25269 * C153464 + C39379 * C153818) * C153713 +
            ((C24188 + C24187 + C24186) * C153464 +
             (C24185 + C24184 + C24183) * C153818) *
                C153853) *
               C153527 * C153908 -
           (((C24114 * C5701 + C26937 + C26937 + C153887 * C5707 +
              C24112 * C4305 + C26938 + C26938 + C24105 * C4313 +
              C24110 * C1890 + C26939 + C26939 + C24104 * C1900) *
                 C153464 +
             (C39084 + C39083 + C39082) * C153818) *
                C153713 +
            ((C24500 + C24499 + C24498) * C153464 +
             (C24497 + C24496 + C24495) * C153818) *
                C153853) *
               C153527 * C1601) *
              C153498)) /
            (p * q * std::sqrt(p + q));
    d2ee[351] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C11344 +
             C193 * C11345 + C194 * C11346 + C195 * C153852) *
                C153853 +
            (C15568 + C15569 + C15570 + C15571) * C153713) *
               C153838 -
           ((C15572 + C15573 + C15574 + C15575) * C153713 +
            (C15571 + C15570 + C15569 + C15568) * C153853) *
               C153591) *
              C153908 +
          (((C16234 + C16235 + C16236 + C16237) * C153853 +
            (C16761 + C16762 + C16763 + C16764) * C153713) *
               C153591 -
           ((C16237 + C16236 + C16235 + C16234) * C153713 +
            (C407 * C153852 + C408 * C11346 + C409 * C11345 +
             (C134 * C329 + C374 + C374 + C153608 * C353) * C11344) *
                C153853) *
               C153838) *
              C153909 +
          ((((C134 * C330 + C375 + C375 + C153608 * C354) * C11344 +
             C410 * C11345 + C411 * C11346 + C412 * C153852) *
                C153853 +
            (C17411 + C17412 + C17413 + C17414) * C153713) *
               C153838 -
           (((C134 * C3444 + C7437 + C7437 + C153608 * C3452) * C153852 +
             C7455 * C11346 + C7454 * C11345 + C9880 * C11344) *
                C153713 +
            (C17414 + C17413 + C17412 + C17411) * C153853) *
               C153591) *
              C1601) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
              C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 +
              C24119 + C153887 * C354) *
                 C153818 +
             (C24183 + C24184 + C24185) * C153464) *
                C153853 +
            ((C31259 + C31260 + C31261) * C153818 + C39378 * C153464) *
                C153713) *
               C153838 -
           ((C31245 * C153464 + (C31264 + C31263 + C31262) * C153818) *
                C153713 +
            (C39379 * C153464 + (C31261 + C31260 + C31259) * C153818) *
                C153853) *
               C153591) *
              C153908 +
          ((((C32045 + C32046 + C32047) * C153818 + C40351 * C153464) *
                C153853 +
            ((C32048 + C32049 + C32050) * C153818 +
             (C32051 + C32052 + C32053) * C153464) *
                C153713) *
               C153591 -
           ((C40352 * C153464 + (C32047 + C32046 + C32045) * C153818) *
                C153713 +
            ((C24492 + C24493 + C24494) * C153464 +
             (C24114 * C1319 + C24435 + C24435 + C153887 * C1329 +
              C24112 * C330 + C24436 + C24436 + C24105 * C354 + C24110 * C329 +
              C24437 + C24437 + C24104 * C353) *
                 C153818) *
                C153853) *
               C153838) *
              C153909 +
          ((((C24110 * C330 + C24438 + C24438 + C24104 * C354 + C24112 * C1319 +
              C24439 + C24439 + C24105 * C1329 + C24114 * C3127 + C24440 +
              C24440 + C153887 * C3135) *
                 C153818 +
             (C24495 + C24496 + C24497) * C153464) *
                C153853 +
            ((C33419 + C33420 + C33421) * C153818 +
             (C39082 + C39083 + C39084) * C153464) *
                C153713) *
               C153838 -
           (((C24114 * C28651 + C30975 + C30975 + C153887 * C28655 +
              C24112 * C4958 + C30976 + C30976 + C24105 * C4964 +
              C24110 * C3442 + C30977 + C30977 + C24104 * C3450) *
                 C153464 +
             (C33424 + C33423 + C33422) * C153818) *
                C153713 +
            ((C39084 + C39083 + C39082) * C153464 +
             (C33421 + C33420 + C33419) * C153818) *
                C153853) *
               C153591) *
              C1601) *
         C153492) /
            (p * q * std::sqrt(p + q));
    d2ee[352] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153608 * C152) * C11344 +
            C193 * C11345 + C194 * C11346 + C195 * C153852) *
               C153853 +
           (C15568 + C15569 + C15570 + C15571) * C153713) *
              C153527 * C1310 -
          ((C16237 + C16236 + C16235 + C16234) * C153713 +
           (C407 * C153852 + C408 * C11346 + C409 * C11345 +
            (C134 * C329 + C374 + C374 + C153608 * C353) * C11344) *
               C153853) *
              C153527 * C1311 +
          (((C134 * C330 + C375 + C375 + C153608 * C354) * C11344 +
            C410 * C11345 + C411 * C11346 + C412 * C153852) *
               C153853 +
           (C9879 * C11344 + C7452 * C11345 + C7453 * C11346 +
            C15373 * C153852) *
               C153713) *
              C153527 * C1312 -
          (((C134 * C4306 + C16566 + C16566 + C153608 * C4314) * C153852 +
            (C134 * C4305 + C8895 + C8895 + C153608 * C4313) * C11346 +
            (C134 * C4304 + C8896 + C8896 + C153608 * C4312) * C11345 +
            (C134 * C4303 + C8897 + C8897 + C153608 * C4311) * C11344) *
               C153713 +
           ((C134 * C1316 + C1332 + C1332 + C153608 * C1326) * C153852 +
            (C134 * C1317 + C1333 + C1333 + C153608 * C1327) * C11346 +
            (C134 * C1318 + C1334 + C1334 + C153608 * C1328) * C11345 +
            (C134 * C1319 + C1335 + C1335 + C153608 * C1329) * C11344) *
               C153853) *
              C153527 * C1313) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C11344 +
             C193 * C11345 + C194 * C11346 + C195 * C153852) *
                C153853 +
            (C15568 + C15569 + C15570 + C15571) * C153713) *
               C153527 * C1223 -
           ((C16237 + C16236 + C16235 + C16234) * C153713 +
            (C407 * C153852 + C408 * C11346 + C409 * C11345 +
             (C134 * C329 + C374 + C374 + C153608 * C353) * C11344) *
                C153853) *
               C153527 * C153563) *
              C1225 +
          (((C409 * C11344 + C408 * C11345 + C407 * C11346 + C406 * C153852) *
                C153853 +
            (C16238 + C16239 + C16240 + C16241) * C153713) *
               C153527 * C153563 -
           ((C15579 + C15578 + C15577 + C15576) * C153713 +
            (C196 * C153852 + C195 * C11346 + C194 * C11345 + C193 * C11344) *
                C153853) *
               C153527 * C1223) *
              C1226 +
          (((C194 * C11344 + C195 * C11345 + C196 * C11346 + C197 * C153852) *
                C153853 +
            (C15972 + C15973 + C15974 + C15975) * C153713) *
               C153527 * C1223 -
           (((C134 * C1062 + C1089 + C1089 + C153608 * C1074) * C153852 +
             C1101 * C11346 + C1100 * C11345 + C1099 * C11344) *
                C153713 +
            (C762 * C153852 + C406 * C11346 + C407 * C11345 + C408 * C11344) *
                C153853) *
               C153527 * C153563) *
              C1227)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C11344 +
             C193 * C11345 + C194 * C11346 + C195 * C153852) *
                C153853 +
            (C15568 + C15569 + C15570 + C15571) * C153713) *
               C535 -
           ((C15572 + C15573 + C15574 + C15575) * C153713 +
            (C15571 + C15570 + C15569 + C15568) * C153853) *
               C536 +
           ((C15575 + C15574 + C15573 + C15572) * C153853 +
            (C7738 * C11344 + C7737 * C11345 + C7736 * C11346 +
             C7741 * C153852) *
                C153713) *
               C537) *
              C1223 +
          (((C16234 + C16235 + C16236 + C16237) * C153853 +
            (C16761 + C16762 + C16763 + C16764) * C153713) *
               C536 -
           ((C16237 + C16236 + C16235 + C16234) * C153713 +
            (C407 * C153852 + C408 * C11346 + C409 * C11345 +
             (C134 * C329 + C374 + C374 + C153608 * C353) * C11344) *
                C153853) *
               C535 -
           (((C134 * C8488 + C8513 + C8513 + C153608 * C8490) * C153852 +
             C8525 * C11346 + C8524 * C11345 + C9136 * C11344) *
                C153713 +
            (C16764 + C16763 + C16762 + C16761) * C153853) *
               C537) *
              C153563) *
         C153492) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
              C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 +
              C24119 + C153887 * C354) *
                 C153818 +
             (C24183 + C24184 + C24185) * C153464) *
                C153853 +
            ((C31259 + C31260 + C31261) * C153818 + C39378 * C153464) *
                C153713) *
               C153527 * C1223 -
           ((C40352 * C153464 + (C32047 + C32046 + C32045) * C153818) *
                C153713 +
            ((C24492 + C24493 + C24494) * C153464 +
             (C24114 * C1319 + C24435 + C24435 + C153887 * C1329 +
              C24112 * C330 + C24436 + C24436 + C24105 * C354 + C24110 * C329 +
              C24437 + C24437 + C24104 * C353) *
                 C153818) *
                C153853) *
               C153527 * C153563) *
              C1225 +
          ((((C24494 + C24493 + C24492) * C153818 +
             (C24491 + C24490 + C24489) * C153464) *
                C153853 +
            (C40351 * C153818 + (C25608 + C25609 + C25610) * C153464) *
                C153713) *
               C153527 * C153563 -
           ((C25269 * C153464 + C39379 * C153818) * C153713 +
            ((C24188 + C24187 + C24186) * C153464 +
             (C24185 + C24184 + C24183) * C153818) *
                C153853) *
               C153527 * C1223) *
              C1226 +
          (((C24197 * C153818 + (C24191 + C24190 + C24189) * C153464) *
                C153853 +
            (C39962 * C153818 + (C25276 + C25277 + C25278) * C153464) *
                C153713) *
               C153527 * C1223 -
           (((C24114 * C4306 + C25590 + C25590 + C153887 * C4314 +
              C24112 * C1889 + C25591 + C25591 + C24105 * C1899 +
              C24110 * C1060 + C25592 + C25592 + C24104 * C1072) *
                 C153464 +
             (C25610 + C25609 + C25608) * C153818) *
                C153713 +
            ((C25040 + C25039 + C25038) * C153464 + C25031 * C153818) *
                C153853) *
               C153527 * C153563) *
              C1227)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
             C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 + C24119 +
             C153887 * C354) *
                C153818 +
            (C24183 + C24184 + C24185) * C153464) *
               C153853 +
           ((C31259 + C31260 + C31261) * C153818 + C39378 * C153464) *
               C153713) *
              C153527 * C1310 -
          ((C40352 * C153464 + (C32047 + C32046 + C32045) * C153818) * C153713 +
           ((C24492 + C24493 + C24494) * C153464 +
            (C24114 * C1319 + C24435 + C24435 + C153887 * C1329 +
             C24112 * C330 + C24436 + C24436 + C24105 * C354 + C24110 * C329 +
             C24437 + C24437 + C24104 * C353) *
                C153818) *
               C153853) *
              C153527 * C1311 +
          (((C24110 * C330 + C24438 + C24438 + C24104 * C354 + C24112 * C1319 +
             C24439 + C24439 + C24105 * C1329 + C24114 * C3127 + C24440 +
             C24440 + C153887 * C3135) *
                C153818 +
            (C24495 + C24496 + C24497) * C153464) *
               C153853 +
           ((C33419 + C33420 + C33421) * C153818 +
            (C39082 + C39083 + C39084) * C153464) *
               C153713) *
              C153527 * C1312 -
          (((C24114 * C29093 + C40837 + C40837 + C153887 * C29097 +
             C24112 * C5702 + C40838 + C40838 + C24105 * C5708 +
             C24110 * C4304 + C40839 + C40839 + C24104 * C4312) *
                C153464 +
            (C24114 * C29092 + C32421 + C32421 + C153887 * C29096 +
             C24112 * C5703 + C32422 + C32422 + C24105 * C5709 +
             C24110 * C4303 + C32423 + C32423 + C24104 * C4311) *
                C153818) *
               C153713 +
           ((C24114 * C4722 + C25978 + C25978 + C153887 * C4728 +
             C24112 * C3128 + C25979 + C25979 + C24105 * C3136 +
             C24110 * C1318 + C25980 + C25980 + C24104 * C1328) *
                C153464 +
            (C24114 * C4723 + C25981 + C25981 + C153887 * C4729 +
             C24112 * C3127 + C25982 + C25982 + C24105 * C3135 +
             C24110 * C1319 + C25983 + C25983 + C24104 * C1329) *
                C153818) *
               C153853) *
              C153527 * C1313) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
              C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 +
              C24119 + C153887 * C354) *
                 C153818 +
             (C24183 + C24184 + C24185) * C153464) *
                C153853 +
            ((C31259 + C31260 + C31261) * C153818 + C39378 * C153464) *
                C153713) *
               C535 -
           ((C31245 * C153464 + (C31264 + C31263 + C31262) * C153818) *
                C153713 +
            (C39379 * C153464 + (C31261 + C31260 + C31259) * C153818) *
                C153853) *
               C536 +
           ((C31272 * C153818 + C39380 * C153464) * C153853 +
            ((C31267 + C31266 + C31265) * C153818 +
             (C31268 + C31269 + C31270) * C153464) *
                C153713) *
               C537) *
              C1223 +
          ((((C32045 + C32046 + C32047) * C153818 + C40351 * C153464) *
                C153853 +
            ((C32048 + C32049 + C32050) * C153818 +
             (C32051 + C32052 + C32053) * C153464) *
                C153713) *
               C536 -
           ((C40352 * C153464 + (C32047 + C32046 + C32045) * C153818) *
                C153713 +
            ((C24492 + C24493 + C24494) * C153464 +
             (C24114 * C1319 + C24435 + C24435 + C153887 * C1329 +
              C24112 * C330 + C24436 + C24436 + C24105 * C354 + C24110 * C329 +
              C24437 + C24437 + C24104 * C353) *
                 C153818) *
                C153853) *
               C535 -
           (((C24114 * C31999 + C32024 + C32024 + C153887 * C32001 +
              C24112 * C6303 + C32025 + C32025 + C24105 * C6315 +
              C24110 * C6304 + C32026 + C32026 + C24104 * C6316) *
                 C153464 +
             (C32665 + C32664 + C32663) * C153818) *
                C153713 +
            ((C32053 + C32052 + C32051) * C153464 + C32658 * C153818) *
                C153853) *
               C537) *
              C153563) *
         C153492) /
            (p * q * std::sqrt(p + q));
    d2ee[353] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C153608 * C152) * C11344 +
              C193 * C11345 + C194 * C11346 + C195 * C153852) *
                 C153853 +
             (C15568 + C15569 + C15570 + C15571) * C153713) *
                C153838 -
            ((C15572 + C15573 + C15574 + C15575) * C153713 +
             (C15571 + C15570 + C15569 + C15568) * C153853) *
                C153591) *
               C1223 +
           (((C16234 + C16235 + C16236 + C16237) * C153853 +
             (C16761 + C16762 + C16763 + C16764) * C153713) *
                C153591 -
            ((C16237 + C16236 + C16235 + C16234) * C153713 +
             (C407 * C153852 + C408 * C11346 + C409 * C11345 +
              (C134 * C329 + C374 + C374 + C153608 * C353) * C11344) *
                 C153853) *
                C153838) *
               C153563) *
              C153829 +
          ((((C15576 + C15577 + C15578 + C15579) * C153853 +
             (C15580 + C15581 + C15582 + C15583) * C153713) *
                C153591 -
            ((C15579 + C15578 + C15577 + C15576) * C153713 +
             (C196 * C153852 + C195 * C11346 + C194 * C11345 + C193 * C11344) *
                 C153853) *
                C153838) *
               C1223 +
           (((C409 * C11344 + C408 * C11345 + C407 * C11346 + C406 * C153852) *
                 C153853 +
             (C16238 + C16239 + C16240 + C16241) * C153713) *
                C153838 -
            (((C134 * C1457 + C1473 + C1473 + C153608 * C1467) * C153852 +
              C7974 * C11346 + C7450 * C11345 + C7451 * C11344) *
                 C153713 +
             (C16241 + C16240 + C16239 + C16238) * C153853) *
                C153591) *
               C153563) *
              C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
               C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 +
               C24119 + C153887 * C354) *
                  C153818 +
              (C24183 + C24184 + C24185) * C153464) *
                 C153853 +
             ((C31259 + C31260 + C31261) * C153818 + C39378 * C153464) *
                 C153713) *
                C153838 -
            ((C31245 * C153464 + (C31264 + C31263 + C31262) * C153818) *
                 C153713 +
             (C39379 * C153464 + (C31261 + C31260 + C31259) * C153818) *
                 C153853) *
                C153591) *
               C1223 +
           ((((C32045 + C32046 + C32047) * C153818 + C40351 * C153464) *
                 C153853 +
             ((C32048 + C32049 + C32050) * C153818 +
              (C32051 + C32052 + C32053) * C153464) *
                 C153713) *
                C153591 -
            ((C40352 * C153464 + (C32047 + C32046 + C32045) * C153818) *
                 C153713 +
             ((C24492 + C24493 + C24494) * C153464 +
              (C24114 * C1319 + C24435 + C24435 + C153887 * C1329 +
               C24112 * C330 + C24436 + C24436 + C24105 * C354 + C24110 * C329 +
               C24437 + C24437 + C24104 * C353) *
                  C153818) *
                 C153853) *
                C153838) *
               C153563) *
              C153829 +
          ((((C39378 * C153818 + C39962 * C153464) * C153853 +
             (C39380 * C153818 + (C24800 + C24801 + C24802) * C153464) *
                 C153713) *
                C153591 -
            ((C25269 * C153464 + C39379 * C153818) * C153713 +
             ((C24188 + C24187 + C24186) * C153464 +
              (C24185 + C24184 + C24183) * C153818) *
                 C153853) *
                C153838) *
               C1223 +
           ((((C24494 + C24493 + C24492) * C153818 +
              (C24491 + C24490 + C24489) * C153464) *
                 C153853 +
             (C40351 * C153818 + (C25608 + C25609 + C25610) * C153464) *
                 C153713) *
                C153838 -
            (((C24114 * C4957 + C26202 + C26202 + C153887 * C4963 +
               C24112 * C3443 + C26203 + C26203 + C24105 * C3451 +
               C24110 * C1459 + C26204 + C26204 + C24104 * C1469) *
                  C153464 +
              (C32053 + C32052 + C32051) * C153818) *
                 C153713 +
             ((C25610 + C25609 + C25608) * C153464 + C40352 * C153818) *
                 C153853) *
                C153591) *
               C153563) *
              C153498)) /
            (p * q * std::sqrt(p + q));
    d2ee[354] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C11344 +
             C193 * C11345 + C194 * C11346 + C195 * C153852) *
                C153853 +
            (C15568 + C15569 + C15570 + C15571) * C153713) *
               C153527 * C1223 -
           ((C16237 + C16236 + C16235 + C16234) * C153713 +
            (C407 * C153852 + C408 * C11346 + C409 * C11345 +
             (C134 * C329 + C374 + C374 + C153608 * C353) * C11344) *
                C153853) *
               C153527 * C153563) *
              C1225 +
          (((C409 * C11344 + C408 * C11345 + C407 * C11346 + C406 * C153852) *
                C153853 +
            (C16238 + C16239 + C16240 + C16241) * C153713) *
               C153527 * C153563 -
           ((C15579 + C15578 + C15577 + C15576) * C153713 +
            (C196 * C153852 + C195 * C11346 + C194 * C11345 + C193 * C11344) *
                C153853) *
               C153527 * C1223) *
              C1226 +
          (((C194 * C11344 + C195 * C11345 + C196 * C11346 + C197 * C153852) *
                C153853 +
            (C15972 + C15973 + C15974 + C15975) * C153713) *
               C153527 * C1223 -
           (((C134 * C1062 + C1089 + C1089 + C153608 * C1074) * C153852 +
             C1101 * C11346 + C1100 * C11345 + C1099 * C11344) *
                C153713 +
            (C762 * C153852 + C406 * C11346 + C407 * C11345 + C408 * C11344) *
                C153853) *
               C153527 * C153563) *
              C1227)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153608 * C152) * C11344 +
            C193 * C11345 + C194 * C11346 + C195 * C153852) *
               C153853 +
           (C15568 + C15569 + C15570 + C15571) * C153713) *
              C153527 * C1310 -
          ((C16237 + C16236 + C16235 + C16234) * C153713 +
           (C407 * C153852 + C408 * C11346 + C409 * C11345 +
            (C134 * C329 + C374 + C374 + C153608 * C353) * C11344) *
               C153853) *
              C153527 * C1311 +
          (((C134 * C330 + C375 + C375 + C153608 * C354) * C11344 +
            C410 * C11345 + C411 * C11346 + C412 * C153852) *
               C153853 +
           (C9879 * C11344 + C7452 * C11345 + C7453 * C11346 +
            C15373 * C153852) *
               C153713) *
              C153527 * C1312 -
          (((C134 * C4306 + C16566 + C16566 + C153608 * C4314) * C153852 +
            (C134 * C4305 + C8895 + C8895 + C153608 * C4313) * C11346 +
            (C134 * C4304 + C8896 + C8896 + C153608 * C4312) * C11345 +
            (C134 * C4303 + C8897 + C8897 + C153608 * C4311) * C11344) *
               C153713 +
           ((C134 * C1316 + C1332 + C1332 + C153608 * C1326) * C153852 +
            (C134 * C1317 + C1333 + C1333 + C153608 * C1327) * C11346 +
            (C134 * C1318 + C1334 + C1334 + C153608 * C1328) * C11345 +
            (C134 * C1319 + C1335 + C1335 + C153608 * C1329) * C11344) *
               C153853) *
              C153527 * C1313) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
              C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 +
              C24119 + C153887 * C354) *
                 C153818 +
             (C24183 + C24184 + C24185) * C153464) *
                C153853 +
            ((C31259 + C31260 + C31261) * C153818 + C39378 * C153464) *
                C153713) *
               C153527 * C1223 -
           ((C40352 * C153464 + (C32047 + C32046 + C32045) * C153818) *
                C153713 +
            ((C24492 + C24493 + C24494) * C153464 +
             (C24114 * C1319 + C24435 + C24435 + C153887 * C1329 +
              C24112 * C330 + C24436 + C24436 + C24105 * C354 + C24110 * C329 +
              C24437 + C24437 + C24104 * C353) *
                 C153818) *
                C153853) *
               C153527 * C153563) *
              C1225 +
          ((((C24494 + C24493 + C24492) * C153818 +
             (C24491 + C24490 + C24489) * C153464) *
                C153853 +
            (C40351 * C153818 + (C25608 + C25609 + C25610) * C153464) *
                C153713) *
               C153527 * C153563 -
           ((C25269 * C153464 + C39379 * C153818) * C153713 +
            ((C24188 + C24187 + C24186) * C153464 +
             (C24185 + C24184 + C24183) * C153818) *
                C153853) *
               C153527 * C1223) *
              C1226 +
          (((C24197 * C153818 + (C24191 + C24190 + C24189) * C153464) *
                C153853 +
            (C39962 * C153818 + (C25276 + C25277 + C25278) * C153464) *
                C153713) *
               C153527 * C1223 -
           (((C24114 * C4306 + C25590 + C25590 + C153887 * C4314 +
              C24112 * C1889 + C25591 + C25591 + C24105 * C1899 +
              C24110 * C1060 + C25592 + C25592 + C24104 * C1072) *
                 C153464 +
             (C25610 + C25609 + C25608) * C153818) *
                C153713 +
            ((C25040 + C25039 + C25038) * C153464 + C25031 * C153818) *
                C153853) *
               C153527 * C153563) *
              C1227)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
             C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 + C24119 +
             C153887 * C354) *
                C153818 +
            (C24183 + C24184 + C24185) * C153464) *
               C153853 +
           ((C31259 + C31260 + C31261) * C153818 + C39378 * C153464) *
               C153713) *
              C153527 * C1310 -
          ((C40352 * C153464 + (C32047 + C32046 + C32045) * C153818) * C153713 +
           ((C24492 + C24493 + C24494) * C153464 +
            (C24114 * C1319 + C24435 + C24435 + C153887 * C1329 +
             C24112 * C330 + C24436 + C24436 + C24105 * C354 + C24110 * C329 +
             C24437 + C24437 + C24104 * C353) *
                C153818) *
               C153853) *
              C153527 * C1311 +
          (((C24110 * C330 + C24438 + C24438 + C24104 * C354 + C24112 * C1319 +
             C24439 + C24439 + C24105 * C1329 + C24114 * C3127 + C24440 +
             C24440 + C153887 * C3135) *
                C153818 +
            (C24495 + C24496 + C24497) * C153464) *
               C153853 +
           ((C33419 + C33420 + C33421) * C153818 +
            (C39082 + C39083 + C39084) * C153464) *
               C153713) *
              C153527 * C1312 -
          (((C24114 * C29093 + C40837 + C40837 + C153887 * C29097 +
             C24112 * C5702 + C40838 + C40838 + C24105 * C5708 +
             C24110 * C4304 + C40839 + C40839 + C24104 * C4312) *
                C153464 +
            (C24114 * C29092 + C32421 + C32421 + C153887 * C29096 +
             C24112 * C5703 + C32422 + C32422 + C24105 * C5709 +
             C24110 * C4303 + C32423 + C32423 + C24104 * C4311) *
                C153818) *
               C153713 +
           ((C24114 * C4722 + C25978 + C25978 + C153887 * C4728 +
             C24112 * C3128 + C25979 + C25979 + C24105 * C3136 +
             C24110 * C1318 + C25980 + C25980 + C24104 * C1328) *
                C153464 +
            (C24114 * C4723 + C25981 + C25981 + C153887 * C4729 +
             C24112 * C3127 + C25982 + C25982 + C24105 * C3135 +
             C24110 * C1319 + C25983 + C25983 + C24104 * C1329) *
                C153818) *
               C153853) *
              C153527 * C1313) *
         C153492) /
            (p * q * std::sqrt(p + q));
    d2ee[355] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C153608 * C152) * C11344 +
              C193 * C11345 + C194 * C11346 + C195 * C153852) *
                 C153853 +
             (C15568 + C15569 + C15570 + C15571) * C153713) *
                C2030 -
            ((C15572 + C15573 + C15574 + C15575) * C153713 +
             (C15571 + C15570 + C15569 + C15568) * C153853) *
                C153591) *
               C153837 +
           (((C16234 + C16235 + C16236 + C16237) * C153853 +
             (C16761 + C16762 + C16763 + C16764) * C153713) *
                C153591 -
            ((C16237 + C16236 + C16235 + C16234) * C153713 +
             (C407 * C153852 + C408 * C11346 + C409 * C11345 +
              (C134 * C329 + C374 + C374 + C153608 * C353) * C11344) *
                 C153853) *
                C2030) *
               C153563) *
              C153829 +
          ((((C15576 + C15577 + C15578 + C15579) * C153853 +
             (C15580 + C15581 + C15582 + C15583) * C153713) *
                C153591 -
            ((C15579 + C15578 + C15577 + C15576) * C153713 +
             (C196 * C153852 + C195 * C11346 + C194 * C11345 + C193 * C11344) *
                 C153853) *
                C2030) *
               C153837 +
           (((C409 * C11344 + C408 * C11345 + C407 * C11346 + C406 * C153852) *
                 C153853 +
             (C16238 + C16239 + C16240 + C16241) * C153713) *
                C2030 -
            (((C134 * C1457 + C1473 + C1473 + C153608 * C1467) * C153852 +
              C7974 * C11346 + C7450 * C11345 + C7451 * C11344) *
                 C153713 +
             (C16241 + C16240 + C16239 + C16238) * C153853) *
                C153591) *
               C153563) *
              C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
               C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 +
               C24119 + C153887 * C354) *
                  C153818 +
              (C24183 + C24184 + C24185) * C153464) *
                 C153853 +
             ((C31259 + C31260 + C31261) * C153818 + C39378 * C153464) *
                 C153713) *
                C2030 -
            ((C31245 * C153464 + (C31264 + C31263 + C31262) * C153818) *
                 C153713 +
             (C39379 * C153464 + (C31261 + C31260 + C31259) * C153818) *
                 C153853) *
                C153591) *
               C153837 +
           ((((C32045 + C32046 + C32047) * C153818 + C40351 * C153464) *
                 C153853 +
             ((C32048 + C32049 + C32050) * C153818 +
              (C32051 + C32052 + C32053) * C153464) *
                 C153713) *
                C153591 -
            ((C40352 * C153464 + (C32047 + C32046 + C32045) * C153818) *
                 C153713 +
             ((C24492 + C24493 + C24494) * C153464 +
              (C24114 * C1319 + C24435 + C24435 + C153887 * C1329 +
               C24112 * C330 + C24436 + C24436 + C24105 * C354 + C24110 * C329 +
               C24437 + C24437 + C24104 * C353) *
                  C153818) *
                 C153853) *
                C2030) *
               C153563) *
              C153829 +
          ((((C39378 * C153818 + C39962 * C153464) * C153853 +
             (C39380 * C153818 + (C24800 + C24801 + C24802) * C153464) *
                 C153713) *
                C153591 -
            ((C25269 * C153464 + C39379 * C153818) * C153713 +
             ((C24188 + C24187 + C24186) * C153464 +
              (C24185 + C24184 + C24183) * C153818) *
                 C153853) *
                C2030) *
               C153837 +
           ((((C24494 + C24493 + C24492) * C153818 +
              (C24491 + C24490 + C24489) * C153464) *
                 C153853 +
             (C40351 * C153818 + (C25608 + C25609 + C25610) * C153464) *
                 C153713) *
                C2030 -
            (((C24114 * C4957 + C26202 + C26202 + C153887 * C4963 +
               C24112 * C3443 + C26203 + C26203 + C24105 * C3451 +
               C24110 * C1459 + C26204 + C26204 + C24104 * C1469) *
                  C153464 +
              (C32053 + C32052 + C32051) * C153818) *
                 C153713 +
             ((C25610 + C25609 + C25608) * C153464 + C40352 * C153818) *
                 C153853) *
                C153591) *
               C153563) *
              C153498)) /
            (p * q * std::sqrt(p + q));
    d2ee[356] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C11344 +
             C193 * C11345 + C194 * C11346 + C195 * C153852) *
                C153853 +
            (C15568 + C15569 + C15570 + C15571) * C153713) *
               C153910 -
           ((C15572 + C15573 + C15574 + C15575) * C153713 +
            (C15571 + C15570 + C15569 + C15568) * C153853) *
               C153911 +
           ((C15575 + C15574 + C15573 + C15572) * C153853 +
            (C17933 + C17934 + C17935 + C17936) * C153713) *
               C2546) *
              C153837 +
          (((C16234 + C16235 + C16236 + C16237) * C153853 +
            (C16761 + C16762 + C16763 + C16764) * C153713) *
               C153911 -
           ((C16237 + C16236 + C16235 + C16234) * C153713 +
            (C407 * C153852 + C408 * C11346 + C409 * C11345 +
             (C134 * C329 + C374 + C374 + C153608 * C353) * C11344) *
                C153853) *
               C153910 -
           (((C134 * C8488 + C8513 + C8513 + C153608 * C8490) * C153852 +
             C8525 * C11346 + C8524 * C11345 + C9136 * C11344) *
                C153713 +
            (C16764 + C16763 + C16762 + C16761) * C153853) *
               C2546) *
              C153563) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
              C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 +
              C24119 + C153887 * C354) *
                 C153818 +
             (C24183 + C24184 + C24185) * C153464) *
                C153853 +
            ((C31259 + C31260 + C31261) * C153818 + C39378 * C153464) *
                C153713) *
               C153910 -
           ((C31245 * C153464 + (C31264 + C31263 + C31262) * C153818) *
                C153713 +
            (C39379 * C153464 + (C31261 + C31260 + C31259) * C153818) *
                C153853) *
               C153911 +
           ((C31272 * C153818 + C39380 * C153464) * C153853 +
            ((C31267 + C31266 + C31265) * C153818 +
             (C31268 + C31269 + C31270) * C153464) *
                C153713) *
               C2546) *
              C153837 +
          ((((C32045 + C32046 + C32047) * C153818 + C40351 * C153464) *
                C153853 +
            ((C32048 + C32049 + C32050) * C153818 +
             (C32051 + C32052 + C32053) * C153464) *
                C153713) *
               C153911 -
           ((C40352 * C153464 + (C32047 + C32046 + C32045) * C153818) *
                C153713 +
            ((C24492 + C24493 + C24494) * C153464 +
             (C24114 * C1319 + C24435 + C24435 + C153887 * C1329 +
              C24112 * C330 + C24436 + C24436 + C24105 * C354 + C24110 * C329 +
              C24437 + C24437 + C24104 * C353) *
                 C153818) *
                C153853) *
               C153910 -
           (((C24114 * C31999 + C32024 + C32024 + C153887 * C32001 +
              C24112 * C6303 + C32025 + C32025 + C24105 * C6315 +
              C24110 * C6304 + C32026 + C32026 + C24104 * C6316) *
                 C153464 +
             (C32665 + C32664 + C32663) * C153818) *
                C153713 +
            ((C32053 + C32052 + C32051) * C153464 + C32658 * C153818) *
                C153853) *
               C2546) *
              C153563) *
         C153492) /
            (p * q * std::sqrt(p + q));
    d2ee[357] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C11344 +
             C193 * C11345 + C194 * C11346 + C195 * C153852) *
                C153853 +
            (C15568 + C15569 + C15570 + C15571) * C153713) *
               C2030 -
           ((C15572 + C15573 + C15574 + C15575) * C153713 +
            (C15571 + C15570 + C15569 + C15568) * C153853) *
               C153591) *
              C320 +
          (((C16234 + C16235 + C16236 + C16237) * C153853 +
            (C16761 + C16762 + C16763 + C16764) * C153713) *
               C153591 -
           ((C16237 + C16236 + C16235 + C16234) * C153713 +
            (C407 * C153852 + C408 * C11346 + C409 * C11345 +
             (C134 * C329 + C374 + C374 + C153608 * C353) * C11344) *
                C153853) *
               C2030) *
              C321 +
          ((((C134 * C330 + C375 + C375 + C153608 * C354) * C11344 +
             C410 * C11345 + C411 * C11346 + C412 * C153852) *
                C153853 +
            (C17411 + C17412 + C17413 + C17414) * C153713) *
               C2030 -
           (((C134 * C3444 + C7437 + C7437 + C153608 * C3452) * C153852 +
             C7455 * C11346 + C7454 * C11345 + C9880 * C11344) *
                C153713 +
            (C17414 + C17413 + C17412 + C17411) * C153853) *
               C153591) *
              C322) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C11344 +
             C193 * C11345 + C194 * C11346 + C195 * C153852) *
                C153853 +
            (C15568 + C15569 + C15570 + C15571) * C153713) *
               C2030 -
           ((C15572 + C15573 + C15574 + C15575) * C153713 +
            (C15571 + C15570 + C15569 + C15568) * C153853) *
               C153591) *
              C153511 * C1225 +
          (((C15576 + C15577 + C15578 + C15579) * C153853 +
            (C15580 + C15581 + C15582 + C15583) * C153713) *
               C153591 -
           ((C15579 + C15578 + C15577 + C15576) * C153713 +
            (C196 * C153852 + C195 * C11346 + C194 * C11345 + C193 * C11344) *
                C153853) *
               C2030) *
              C153511 * C1226 +
          (((C194 * C11344 + C195 * C11345 + C196 * C11346 + C197 * C153852) *
                C153853 +
            (C15972 + C15973 + C15974 + C15975) * C153713) *
               C2030 -
           (((C134 * C549 + C602 + C602 + C153608 * C573) * C153852 +
             C626 * C11346 + C625 * C11345 + C624 * C11344) *
                C153713 +
            (C15975 + C15974 + C15973 + C15972) * C153853) *
               C153591) *
              C153511 * C1227)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153608 * C152) * C11344 +
            C193 * C11345 + C194 * C11346 + C195 * C153852) *
               C153853 +
           (C15568 + C15569 + C15570 + C15571) * C153713) *
              C2236 -
          ((C15572 + C15573 + C15574 + C15575) * C153713 +
           (C15571 + C15570 + C15569 + C15568) * C153853) *
              C2237 +
          ((C15575 + C15574 + C15573 + C15572) * C153853 +
           (C17933 + C17934 + C17935 + C17936) * C153713) *
              C2238 -
          (((C134 * C7676 + C7715 + C7715 + C153608 * C7684) * C153852 +
            C7740 * C11346 + C7739 * C11345 + C10485 * C11344) *
               C153713 +
           (C17936 + C17935 + C17934 + C17933) * C153853) *
              C2239) *
         C153511 * C153492) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
              C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 +
              C24119 + C153887 * C354) *
                 C153818 +
             (C24183 + C24184 + C24185) * C153464) *
                C153853 +
            ((C31259 + C31260 + C31261) * C153818 + C39378 * C153464) *
                C153713) *
               C2030 -
           ((C31245 * C153464 + (C31264 + C31263 + C31262) * C153818) *
                C153713 +
            (C39379 * C153464 + (C31261 + C31260 + C31259) * C153818) *
                C153853) *
               C153591) *
              C153511 * C1225 +
          (((C39378 * C153818 + C39962 * C153464) * C153853 +
            (C39380 * C153818 + (C24800 + C24801 + C24802) * C153464) *
                C153713) *
               C153591 -
           ((C25269 * C153464 + C39379 * C153818) * C153713 +
            ((C24188 + C24187 + C24186) * C153464 +
             (C24185 + C24184 + C24183) * C153818) *
                C153853) *
               C2030) *
              C153511 * C1226 +
          (((C24197 * C153818 + (C24191 + C24190 + C24189) * C153464) *
                C153853 +
            (C39962 * C153818 + (C25276 + C25277 + C25278) * C153464) *
                C153713) *
               C2030 -
           (((C24114 * C3444 + C24764 + C24764 + C153887 * C3452 +
              C24112 * C1458 + C24765 + C24765 + C24105 * C1468 +
              C24110 * C546 + C24766 + C24766 + C24104 * C570) *
                 C153464 +
             (C24802 + C24801 + C24800) * C153818) *
                C153713 +
            ((C25278 + C25277 + C25276) * C153464 + C25269 * C153818) *
                C153853) *
               C153591) *
              C153511 * C1227)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
              C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 +
              C24119 + C153887 * C354) *
                 C153818 +
             (C24183 + C24184 + C24185) * C153464) *
                C153853 +
            ((C31259 + C31260 + C31261) * C153818 + C39378 * C153464) *
                C153713) *
               C2030 -
           ((C31245 * C153464 + (C31264 + C31263 + C31262) * C153818) *
                C153713 +
            (C39379 * C153464 + (C31261 + C31260 + C31259) * C153818) *
                C153853) *
               C153591) *
              C320 +
          ((((C32045 + C32046 + C32047) * C153818 + C40351 * C153464) *
                C153853 +
            ((C32048 + C32049 + C32050) * C153818 +
             (C32051 + C32052 + C32053) * C153464) *
                C153713) *
               C153591 -
           ((C40352 * C153464 + (C32047 + C32046 + C32045) * C153818) *
                C153713 +
            ((C24492 + C24493 + C24494) * C153464 +
             (C24114 * C1319 + C24435 + C24435 + C153887 * C1329 +
              C24112 * C330 + C24436 + C24436 + C24105 * C354 + C24110 * C329 +
              C24437 + C24437 + C24104 * C353) *
                 C153818) *
                C153853) *
               C2030) *
              C321 +
          ((((C24110 * C330 + C24438 + C24438 + C24104 * C354 + C24112 * C1319 +
              C24439 + C24439 + C24105 * C1329 + C24114 * C3127 + C24440 +
              C24440 + C153887 * C3135) *
                 C153818 +
             (C24495 + C24496 + C24497) * C153464) *
                C153853 +
            ((C33419 + C33420 + C33421) * C153818 +
             (C39082 + C39083 + C39084) * C153464) *
                C153713) *
               C2030 -
           (((C24114 * C28651 + C30975 + C30975 + C153887 * C28655 +
              C24112 * C4958 + C30976 + C30976 + C24105 * C4964 +
              C24110 * C3442 + C30977 + C30977 + C24104 * C3450) *
                 C153464 +
             (C33424 + C33423 + C33422) * C153818) *
                C153713 +
            ((C39084 + C39083 + C39082) * C153464 +
             (C33421 + C33420 + C33419) * C153818) *
                C153853) *
               C153591) *
              C322) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
             C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 + C24119 +
             C153887 * C354) *
                C153818 +
            (C24183 + C24184 + C24185) * C153464) *
               C153853 +
           ((C31259 + C31260 + C31261) * C153818 + C39378 * C153464) *
               C153713) *
              C2236 -
          ((C31245 * C153464 + (C31264 + C31263 + C31262) * C153818) * C153713 +
           (C39379 * C153464 + (C31261 + C31260 + C31259) * C153818) *
               C153853) *
              C2237 +
          ((C31272 * C153818 + C39380 * C153464) * C153853 +
           ((C31267 + C31266 + C31265) * C153818 +
            (C31268 + C31269 + C31270) * C153464) *
               C153713) *
              C2238 -
          (((C24114 * C31196 + C31230 + C31230 + C153887 * C31200 +
             C24112 * C9116 + C31231 + C31231 + C24105 * C9122 +
             C24110 * C7674 + C31232 + C31232 + C24104 * C7682) *
                C153464 +
            (C34033 + C34032 + C34031) * C153818) *
               C153713 +
           ((C31270 + C31269 + C31268) * C153464 + C34023 * C153818) *
               C153853) *
              C2239) *
         C153511 * C153492) /
            (p * q * std::sqrt(p + q));
    d2ee[358] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C11344 +
             C193 * C11345 + C194 * C11346 + C195 * C153852) *
                C153853 +
            (C15568 + C15569 + C15570 + C15571) * C153713) *
               C153910 -
           ((C15572 + C15573 + C15574 + C15575) * C153713 +
            (C15571 + C15570 + C15569 + C15568) * C153853) *
               C153911 +
           ((C15575 + C15574 + C15573 + C15572) * C153853 +
            (C17933 + C17934 + C17935 + C17936) * C153713) *
               C2546) *
              C153511 * C153829 +
          (((C15576 + C15577 + C15578 + C15579) * C153853 +
            (C15580 + C15581 + C15582 + C15583) * C153713) *
               C153911 -
           ((C15579 + C15578 + C15577 + C15576) * C153713 +
            (C196 * C153852 + C195 * C11346 + C194 * C11345 + C193 * C11344) *
                C153853) *
               C153910 -
           (((C134 * C2240 + C2256 + C2256 + C153608 * C2250) * C153852 +
             C7741 * C11346 + C7736 * C11345 + C7737 * C11344) *
                C153713 +
            (C15583 + C15582 + C15581 + C15580) * C153853) *
               C2546) *
              C153511 * C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
              C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 +
              C24119 + C153887 * C354) *
                 C153818 +
             (C24183 + C24184 + C24185) * C153464) *
                C153853 +
            ((C31259 + C31260 + C31261) * C153818 + C39378 * C153464) *
                C153713) *
               C153910 -
           ((C31245 * C153464 + (C31264 + C31263 + C31262) * C153818) *
                C153713 +
            (C39379 * C153464 + (C31261 + C31260 + C31259) * C153818) *
                C153853) *
               C153911 +
           ((C31272 * C153818 + C39380 * C153464) * C153853 +
            ((C31267 + C31266 + C31265) * C153818 +
             (C31268 + C31269 + C31270) * C153464) *
                C153713) *
               C2546) *
              C153511 * C153829 +
          (((C39378 * C153818 + C39962 * C153464) * C153853 +
            (C39380 * C153818 + (C24800 + C24801 + C24802) * C153464) *
                C153713) *
               C153911 -
           ((C25269 * C153464 + C39379 * C153818) * C153713 +
            ((C24188 + C24187 + C24186) * C153464 +
             (C24185 + C24184 + C24183) * C153818) *
                C153853) *
               C153910 -
           (((C24114 * C6301 + C27528 + C27528 + C153887 * C6313 +
              C24112 * C6302 + C27529 + C27529 + C24105 * C6314 +
              C24110 * C2242 + C27530 + C27530 + C24104 * C2252) *
                 C153464 +
             (C31270 + C31269 + C31268) * C153818) *
                C153713 +
            ((C24802 + C24801 + C24800) * C153464 + C31245 * C153818) *
                C153853) *
               C2546) *
              C153511 * C153498)) /
            (p * q * std::sqrt(p + q));
    d2ee[359] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C11344 +
             C193 * C11345 + C194 * C11346 + C195 * C153852) *
                C153853 +
            (C15568 + C15569 + C15570 + C15571) * C153713) *
               C2030 -
           ((C15572 + C15573 + C15574 + C15575) * C153713 +
            (C15571 + C15570 + C15569 + C15568) * C153853) *
               C153591) *
              C153511 * C1225 +
          (((C15576 + C15577 + C15578 + C15579) * C153853 +
            (C15580 + C15581 + C15582 + C15583) * C153713) *
               C153591 -
           ((C15579 + C15578 + C15577 + C15576) * C153713 +
            (C196 * C153852 + C195 * C11346 + C194 * C11345 + C193 * C11344) *
                C153853) *
               C2030) *
              C153511 * C1226 +
          (((C194 * C11344 + C195 * C11345 + C196 * C11346 + C197 * C153852) *
                C153853 +
            (C15972 + C15973 + C15974 + C15975) * C153713) *
               C2030 -
           (((C134 * C549 + C602 + C602 + C153608 * C573) * C153852 +
             C626 * C11346 + C625 * C11345 + C624 * C11344) *
                C153713 +
            (C15975 + C15974 + C15973 + C15972) * C153853) *
               C153591) *
              C153511 * C1227)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C11344 +
             C193 * C11345 + C194 * C11346 + C195 * C153852) *
                C153853 +
            (C15568 + C15569 + C15570 + C15571) * C153713) *
               C2030 -
           ((C15572 + C15573 + C15574 + C15575) * C153713 +
            (C15571 + C15570 + C15569 + C15568) * C153853) *
               C153591) *
              C320 +
          (((C16234 + C16235 + C16236 + C16237) * C153853 +
            (C16761 + C16762 + C16763 + C16764) * C153713) *
               C153591 -
           ((C16237 + C16236 + C16235 + C16234) * C153713 +
            (C407 * C153852 + C408 * C11346 + C409 * C11345 +
             (C134 * C329 + C374 + C374 + C153608 * C353) * C11344) *
                C153853) *
               C2030) *
              C321 +
          ((((C134 * C330 + C375 + C375 + C153608 * C354) * C11344 +
             C410 * C11345 + C411 * C11346 + C412 * C153852) *
                C153853 +
            (C17411 + C17412 + C17413 + C17414) * C153713) *
               C2030 -
           (((C134 * C3444 + C7437 + C7437 + C153608 * C3452) * C153852 +
             C7455 * C11346 + C7454 * C11345 + C9880 * C11344) *
                C153713 +
            (C17414 + C17413 + C17412 + C17411) * C153853) *
               C153591) *
              C322) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
              C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 +
              C24119 + C153887 * C354) *
                 C153818 +
             (C24183 + C24184 + C24185) * C153464) *
                C153853 +
            ((C31259 + C31260 + C31261) * C153818 + C39378 * C153464) *
                C153713) *
               C2030 -
           ((C31245 * C153464 + (C31264 + C31263 + C31262) * C153818) *
                C153713 +
            (C39379 * C153464 + (C31261 + C31260 + C31259) * C153818) *
                C153853) *
               C153591) *
              C153511 * C1225 +
          (((C39378 * C153818 + C39962 * C153464) * C153853 +
            (C39380 * C153818 + (C24800 + C24801 + C24802) * C153464) *
                C153713) *
               C153591 -
           ((C25269 * C153464 + C39379 * C153818) * C153713 +
            ((C24188 + C24187 + C24186) * C153464 +
             (C24185 + C24184 + C24183) * C153818) *
                C153853) *
               C2030) *
              C153511 * C1226 +
          (((C24197 * C153818 + (C24191 + C24190 + C24189) * C153464) *
                C153853 +
            (C39962 * C153818 + (C25276 + C25277 + C25278) * C153464) *
                C153713) *
               C2030 -
           (((C24114 * C3444 + C24764 + C24764 + C153887 * C3452 +
              C24112 * C1458 + C24765 + C24765 + C24105 * C1468 +
              C24110 * C546 + C24766 + C24766 + C24104 * C570) *
                 C153464 +
             (C24802 + C24801 + C24800) * C153818) *
                C153713 +
            ((C25278 + C25277 + C25276) * C153464 + C25269 * C153818) *
                C153853) *
               C153591) *
              C153511 * C1227)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
              C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 +
              C24119 + C153887 * C354) *
                 C153818 +
             (C24183 + C24184 + C24185) * C153464) *
                C153853 +
            ((C31259 + C31260 + C31261) * C153818 + C39378 * C153464) *
                C153713) *
               C2030 -
           ((C31245 * C153464 + (C31264 + C31263 + C31262) * C153818) *
                C153713 +
            (C39379 * C153464 + (C31261 + C31260 + C31259) * C153818) *
                C153853) *
               C153591) *
              C320 +
          ((((C32045 + C32046 + C32047) * C153818 + C40351 * C153464) *
                C153853 +
            ((C32048 + C32049 + C32050) * C153818 +
             (C32051 + C32052 + C32053) * C153464) *
                C153713) *
               C153591 -
           ((C40352 * C153464 + (C32047 + C32046 + C32045) * C153818) *
                C153713 +
            ((C24492 + C24493 + C24494) * C153464 +
             (C24114 * C1319 + C24435 + C24435 + C153887 * C1329 +
              C24112 * C330 + C24436 + C24436 + C24105 * C354 + C24110 * C329 +
              C24437 + C24437 + C24104 * C353) *
                 C153818) *
                C153853) *
               C2030) *
              C321 +
          ((((C24110 * C330 + C24438 + C24438 + C24104 * C354 + C24112 * C1319 +
              C24439 + C24439 + C24105 * C1329 + C24114 * C3127 + C24440 +
              C24440 + C153887 * C3135) *
                 C153818 +
             (C24495 + C24496 + C24497) * C153464) *
                C153853 +
            ((C33419 + C33420 + C33421) * C153818 +
             (C39082 + C39083 + C39084) * C153464) *
                C153713) *
               C2030 -
           (((C24114 * C28651 + C30975 + C30975 + C153887 * C28655 +
              C24112 * C4958 + C30976 + C30976 + C24105 * C4964 +
              C24110 * C3442 + C30977 + C30977 + C24104 * C3450) *
                 C153464 +
             (C33424 + C33423 + C33422) * C153818) *
                C153713 +
            ((C39084 + C39083 + C39082) * C153464 +
             (C33421 + C33420 + C33419) * C153818) *
                C153853) *
               C153591) *
              C322) *
         C153492) /
            (p * q * std::sqrt(p + q));
    d2ee[360] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153608 * C152) * C122 + C193 * C123 +
            C194 * C124 + C195 * C125 + C196 * C126) *
               C153626 * C153527 * C153837 -
           (C406 * C126 + C407 * C125 + C408 * C124 + C409 * C123 +
            (C134 * C329 + C374 + C374 + C153608 * C353) * C122) *
               C153626 * C153527 * C153563) *
              C153906 +
          ((C409 * C122 + C408 * C123 + C407 * C124 + C406 * C125 +
            C762 * C126) *
               C153626 * C153527 * C153563 -
           (C197 * C126 + C196 * C125 + C195 * C124 + C194 * C123 +
            C193 * C122) *
               C153626 * C153527 * C153837) *
              C153907 +
          ((C194 * C122 + C195 * C123 + C196 * C124 + C197 * C125 +
            C198 * C126) *
               C153626 * C153527 * C153837 -
           ((C134 * C753 + C759 + C759 + C153608 * C755) * C126 + C762 * C125 +
            C406 * C124 + C407 * C123 + C408 * C122) *
               C153626 * C153527 * C153563) *
              C752)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
             C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
             C153887 * C354) *
                C2818 +
            (C2894 + C2895 + C2896) * C2819 + C2908 * C153874) *
               C153626 * C153527 * C153837 -
           (C3766 * C153874 + (C3215 + C3216 + C3217) * C2819 +
            (C2825 * C1319 + C3158 + C3158 + C153887 * C1329 + C2823 * C330 +
             C3159 + C3159 + C153913 * C354 + C2821 * C329 + C3160 + C3160 +
             C153925 * C353) *
                C2818) *
               C153626 * C153527 * C153563) *
              C153906 +
          (((C3217 + C3216 + C3215) * C2818 + (C3214 + C3213 + C3212) * C2819 +
            (C3773 + C3774 + C3775) * C153874) *
               C153626 * C153527 * C153563 -
           (C2909 * C153874 + (C2899 + C2898 + C2897) * C2819 +
            (C2896 + C2895 + C2894) * C2818) *
               C153626 * C153527 * C153837) *
              C153907 +
          ((C2908 * C2818 + (C2902 + C2901 + C2900) * C2819 +
            (C2903 + C2904 + C2905) * C153874) *
               C153626 * C153527 * C153837 -
           ((C2825 * C1315 + C3763 + C3763 + C153887 * C1325 + C2823 * C334 +
             C3764 + C3764 + C153913 * C358 + C2821 * C325 + C3765 + C3765 +
             C153925 * C349) *
                C153874 +
            (C3775 + C3774 + C3773) * C2819 + C3766 * C2818) *
               C153626 * C153527 * C153563) *
              C752)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
             C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 + C24119 +
             C153887 * C354) *
                C153922 +
            (C24183 + C24184 + C24185) * C153903 + C24197 * C153874) *
               C153626 * C153527 * C153837 -
           (C25031 * C153874 + (C24492 + C24493 + C24494) * C153903 +
            (C24114 * C1319 + C24435 + C24435 + C153887 * C1329 +
             C24112 * C330 + C24436 + C24436 + C24105 * C354 + C24110 * C329 +
             C24437 + C24437 + C24104 * C353) *
                C153922) *
               C153626 * C153527 * C153563) *
              C153906 +
          (((C24494 + C24493 + C24492) * C153922 +
            (C24491 + C24490 + C24489) * C153903 +
            (C25038 + C25039 + C25040) * C153874) *
               C153626 * C153527 * C153563 -
           (C24198 * C153874 + (C24188 + C24187 + C24186) * C153903 +
            (C24185 + C24184 + C24183) * C153922) *
               C153626 * C153527 * C153837) *
              C153907 +
          ((C24197 * C153922 + (C24191 + C24190 + C24189) * C153903 +
            (C24192 + C24193 + C24194) * C153874) *
               C153626 * C153527 * C153837 -
           ((C24114 * C1315 + C25028 + C25028 + C153887 * C1325 +
             C24112 * C334 + C25029 + C25029 + C24105 * C358 + C24110 * C325 +
             C25030 + C25030 + C24104 * C349) *
                C153874 +
            (C25040 + C25039 + C25038) * C153903 + C25031 * C153922) *
               C153626 * C153527 * C153563) *
              C752)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C28350 * C136 + C28361 + C28361 + C28344 * C152 + C28352 * C329 +
            C28362 + C28362 + C28345 * C353 + C28354 * C330 + C28363 + C28363 +
            C28346 * C354 + C28356 * C1319 + C28364 + C28364 + C28347 * C1329 +
            C28358 * C3127 + C28365 + C28365 + C28348 * C3135) *
               C153454 * C153626 * C153527 * C153837 -
           (C28358 * C4723 + C28509 + C28509 + C28348 * C4729 + C28356 * C3127 +
            C28510 + C28510 + C28347 * C3135 + C28354 * C1319 + C28511 +
            C28511 + C28346 * C1329 + C28352 * C330 + C28512 + C28512 +
            C28345 * C354 + C28350 * C329 + C28513 + C28513 + C28344 * C353) *
               C153454 * C153626 * C153527 * C153563) *
              C153906 +
          ((C28350 * C328 + C28519 + C28519 + C28344 * C352 + C28352 * C331 +
            C28520 + C28520 + C28345 * C355 + C28354 * C1318 + C28521 + C28521 +
            C28346 * C1328 + C28356 * C3128 + C28522 + C28522 + C28347 * C3136 +
            C28358 * C4722 + C28523 + C28523 + C28348 * C4728) *
               C153454 * C153626 * C153527 * C153563 -
           (C28358 * C3128 + C28366 + C28366 + C28348 * C3136 + C28356 * C1318 +
            C28367 + C28367 + C28347 * C1328 + C28354 * C331 + C28368 + C28368 +
            C28346 * C355 + C28352 * C328 + C28369 + C28369 + C28345 * C352 +
            C28350 * C137 + C28370 + C28370 + C28344 * C153) *
               C153454 * C153626 * C153527 * C153837) *
              C153907 +
          ((C28350 * C138 + C28371 + C28371 + C28344 * C154 + C28352 * C327 +
            C28372 + C28372 + C28345 * C351 + C28354 * C332 + C28373 + C28373 +
            C28346 * C356 + C28356 * C1317 + C28374 + C28374 + C28347 * C1327 +
            C28358 * C3129 + C28375 + C28375 + C28348 * C3137) *
               C153454 * C153626 * C153527 * C153837 -
           (C28358 * C4721 + C28799 + C28799 + C28348 * C4727 + C28356 * C3129 +
            C28800 + C28800 + C28347 * C3137 + C28354 * C1317 + C28801 +
            C28801 + C28346 * C1327 + C28352 * C332 + C28802 + C28802 +
            C28345 * C356 + C28350 * C327 + C28803 + C28803 + C28344 * C351) *
               C153454 * C153626 * C153527 * C153563) *
              C752)) /
            (p * q * std::sqrt(p + q));
    d2ee[361] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C122 + C193 * C123 +
             C194 * C124 + C195 * C125 + C196 * C126) *
                C153626 * C153838 -
            (C619 * C126 + C620 * C125 + C621 * C124 + C622 * C123 +
             (C134 * C542 + C587 + C587 + C153608 * C566) * C122) *
                C153626 * C153591) *
               C153837 +
           (((C134 * C1057 + C1076 + C1076 + C153608 * C1069) * C122 +
             C1098 * C123 + C1099 * C124 + C1100 * C125 + C1101 * C126) *
                C153626 * C153591 -
            (C406 * C126 + C407 * C125 + C408 * C124 + C409 * C123 +
             (C134 * C329 + C374 + C374 + C153608 * C353) * C122) *
                C153626 * C153838) *
               C153563) *
              C323 +
          (((C622 * C122 + C621 * C123 + C620 * C124 + C619 * C125 +
             C895 * C126) *
                C153626 * C153591 -
            (C197 * C126 + C196 * C125 + C195 * C124 + C194 * C123 +
             C193 * C122) *
                C153626 * C153838) *
               C153837 +
           ((C409 * C122 + C408 * C123 + C407 * C124 + C406 * C125 +
             C762 * C126) *
                C153626 * C153838 -
            ((C134 * C1062 + C1089 + C1089 + C153608 * C1074) * C126 +
             C1101 * C125 + C1100 * C124 + C1099 * C123 + C1098 * C122) *
                C153626 * C153591) *
               C153563) *
              C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
              C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
              C153887 * C354) *
                 C2818 +
             (C2894 + C2895 + C2896) * C2819 + C2908 * C153874) *
                C153626 * C153838 -
            (C4004 * C153874 + (C3529 + C3530 + C3531) * C2819 +
             (C2825 * C1892 + C3472 + C3472 + C153887 * C1902 + C2823 * C1057 +
              C3473 + C3473 + C153913 * C1069 + C2821 * C542 + C3474 + C3474 +
              C153925 * C566) *
                 C2818) *
                C153626 * C153591) *
               C153837 +
           (((C2821 * C1057 + C4316 + C4316 + C153925 * C1069 + C2823 * C1892 +
              C4317 + C4317 + C153913 * C1902 + C2825 * C4303 + C4318 + C4318 +
              C153887 * C4311) *
                 C2818 +
             (C4352 + C4353 + C4354) * C2819 +
             (C4355 + C4356 + C4357) * C153874) *
                C153626 * C153591 -
            (C3766 * C153874 + (C3215 + C3216 + C3217) * C2819 +
             (C2825 * C1319 + C3158 + C3158 + C153887 * C1329 + C2823 * C330 +
              C3159 + C3159 + C153913 * C354 + C2821 * C329 + C3160 + C3160 +
              C153925 * C353) *
                 C2818) *
                C153626 * C153838) *
               C153563) *
              C323 +
          ((((C3531 + C3530 + C3529) * C2818 + (C3528 + C3527 + C3526) * C2819 +
             (C4011 + C4012 + C4013) * C153874) *
                C153626 * C153591 -
            (C2909 * C153874 + (C2899 + C2898 + C2897) * C2819 +
             (C2896 + C2895 + C2894) * C2818) *
                C153626 * C153838) *
               C153837 +
           (((C3217 + C3216 + C3215) * C2818 + (C3214 + C3213 + C3212) * C2819 +
             (C3773 + C3774 + C3775) * C153874) *
                C153626 * C153838 -
            ((C2825 * C4306 + C4337 + C4337 + C153887 * C4314 + C2823 * C1889 +
              C4338 + C4338 + C153913 * C1899 + C2821 * C1060 + C4339 + C4339 +
              C153925 * C1072) *
                 C153874 +
             (C4357 + C4356 + C4355) * C2819 +
             (C4354 + C4353 + C4352) * C2818) *
                C153626 * C153591) *
               C153563) *
              C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
              C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 +
              C24119 + C153887 * C354) *
                 C153922 +
             (C24183 + C24184 + C24185) * C153903 + C24197 * C153874) *
                C153626 * C153838 -
            (C25269 * C153874 + (C24794 + C24795 + C24796) * C153903 +
             (C24114 * C1892 + C24737 + C24737 + C153887 * C1902 +
              C24112 * C1057 + C24738 + C24738 + C24105 * C1069 +
              C24110 * C542 + C24739 + C24739 + C24104 * C566) *
                 C153922) *
                C153626 * C153591) *
               C153837 +
           (((C24110 * C1057 + C25569 + C25569 + C24104 * C1069 +
              C24112 * C1892 + C25570 + C25570 + C24105 * C1902 +
              C24114 * C4303 + C25571 + C25571 + C153887 * C4311) *
                 C153922 +
             (C25605 + C25606 + C25607) * C153903 +
             (C25608 + C25609 + C25610) * C153874) *
                C153626 * C153591 -
            (C25031 * C153874 + (C24492 + C24493 + C24494) * C153903 +
             (C24114 * C1319 + C24435 + C24435 + C153887 * C1329 +
              C24112 * C330 + C24436 + C24436 + C24105 * C354 + C24110 * C329 +
              C24437 + C24437 + C24104 * C353) *
                 C153922) *
                C153626 * C153838) *
               C153563) *
              C323 +
          ((((C24796 + C24795 + C24794) * C153922 +
             (C24793 + C24792 + C24791) * C153903 +
             (C25276 + C25277 + C25278) * C153874) *
                C153626 * C153591 -
            (C24198 * C153874 + (C24188 + C24187 + C24186) * C153903 +
             (C24185 + C24184 + C24183) * C153922) *
                C153626 * C153838) *
               C153837 +
           (((C24494 + C24493 + C24492) * C153922 +
             (C24491 + C24490 + C24489) * C153903 +
             (C25038 + C25039 + C25040) * C153874) *
                C153626 * C153838 -
            ((C24114 * C4306 + C25590 + C25590 + C153887 * C4314 +
              C24112 * C1889 + C25591 + C25591 + C24105 * C1899 +
              C24110 * C1060 + C25592 + C25592 + C24104 * C1072) *
                 C153874 +
             (C25610 + C25609 + C25608) * C153903 +
             (C25607 + C25606 + C25605) * C153922) *
                C153626 * C153591) *
               C153563) *
              C153498)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C28350 * C136 + C28361 + C28361 + C28344 * C152 + C28352 * C329 +
             C28362 + C28362 + C28345 * C353 + C28354 * C330 + C28363 + C28363 +
             C28346 * C354 + C28356 * C1319 + C28364 + C28364 + C28347 * C1329 +
             C28358 * C3127 + C28365 + C28365 + C28348 * C3135) *
                C153454 * C153626 * C153838 -
            (C28358 * C5703 + C28657 + C28657 + C28348 * C5709 +
             C28356 * C4303 + C28658 + C28658 + C28347 * C4311 +
             C28354 * C1892 + C28659 + C28659 + C28346 * C1902 +
             C28352 * C1057 + C28660 + C28660 + C28345 * C1069 + C28350 * C542 +
             C28661 + C28661 + C28344 * C566) *
                C153454 * C153626 * C153591) *
               C153837 +
           ((C28350 * C1057 + C29099 + C29099 + C28344 * C1069 +
             C28352 * C1892 + C29100 + C29100 + C28345 * C1902 +
             C28354 * C4303 + C29101 + C29101 + C28346 * C4311 +
             C28356 * C5703 + C29102 + C29102 + C28347 * C5709 +
             C28358 * C29092 + C29103 + C29103 + C28348 * C29096) *
                C153454 * C153626 * C153591 -
            (C28358 * C4723 + C28509 + C28509 + C28348 * C4729 +
             C28356 * C3127 + C28510 + C28510 + C28347 * C3135 +
             C28354 * C1319 + C28511 + C28511 + C28346 * C1329 + C28352 * C330 +
             C28512 + C28512 + C28345 * C354 + C28350 * C329 + C28513 + C28513 +
             C28344 * C353) *
                C153454 * C153626 * C153838) *
               C153563) *
              C323 +
          (((C28350 * C541 + C28667 + C28667 + C28344 * C565 + C28352 * C1058 +
             C28668 + C28668 + C28345 * C1070 + C28354 * C1891 + C28669 +
             C28669 + C28346 * C1901 + C28356 * C4304 + C28670 + C28670 +
             C28347 * C4312 + C28358 * C5702 + C28671 + C28671 +
             C28348 * C5708) *
                C153454 * C153626 * C153591 -
            (C28358 * C3128 + C28366 + C28366 + C28348 * C3136 +
             C28356 * C1318 + C28367 + C28367 + C28347 * C1328 + C28354 * C331 +
             C28368 + C28368 + C28346 * C355 + C28352 * C328 + C28369 + C28369 +
             C28345 * C352 + C28350 * C137 + C28370 + C28370 + C28344 * C153) *
                C153454 * C153626 * C153838) *
               C153837 +
           ((C28350 * C328 + C28519 + C28519 + C28344 * C352 + C28352 * C331 +
             C28520 + C28520 + C28345 * C355 + C28354 * C1318 + C28521 +
             C28521 + C28346 * C1328 + C28356 * C3128 + C28522 + C28522 +
             C28347 * C3136 + C28358 * C4722 + C28523 + C28523 +
             C28348 * C4728) *
                C153454 * C153626 * C153838 -
            (C28358 * C29093 + C29104 + C29104 + C28348 * C29097 +
             C28356 * C5702 + C29105 + C29105 + C28347 * C5708 +
             C28354 * C4304 + C29106 + C29106 + C28346 * C4312 +
             C28352 * C1891 + C29107 + C29107 + C28345 * C1901 +
             C28350 * C1058 + C29108 + C29108 + C28344 * C1070) *
                C153454 * C153626 * C153591) *
               C153563) *
              C153498)) /
            (p * q * std::sqrt(p + q));
    d2ee[362] +=
        (-std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153608 * C152) * C122 + C193 * C123 +
            C194 * C124 + C195 * C125 + C196 * C126) *
               C153626 * C153527 * C320 -
           (C406 * C126 + C407 * C125 + C408 * C124 + C409 * C123 +
            (C134 * C329 + C374 + C374 + C153608 * C353) * C122) *
               C153626 * C153527 * C321 +
           ((C134 * C330 + C375 + C375 + C153608 * C354) * C122 + C410 * C123 +
            C411 * C124 + C412 * C125 + C413 * C126) *
               C153626 * C153527 * C322) *
              C323 +
          ((C409 * C122 + C408 * C123 + C407 * C124 + C406 * C125 +
            (C134 * C335 + C388 + C388 + C153608 * C359) * C126) *
               C153626 * C153527 * C321 -
           (C197 * C126 + C196 * C125 + C195 * C124 + C194 * C123 +
            C193 * C122) *
               C153626 * C153527 * C320 -
           ((C134 * C336 + C389 + C389 + C153608 * C360) * C126 + C413 * C125 +
            C412 * C124 + C411 * C123 + C410 * C122) *
               C153626 * C153527 * C322) *
              C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C136 + C161 + C161 + C153608 * C152) * C122 + C193 * C123 +
           C194 * C124 + C195 * C125 + C196 * C126) *
              C153626 * C153527 * C153511 * C130 -
          (C197 * C126 + C196 * C125 + C195 * C124 + C194 * C123 +
           C193 * C122) *
              C153626 * C153527 * C153511 * C131 +
          (C194 * C122 + C195 * C123 + C196 * C124 + C197 * C125 +
           C198 * C126) *
              C153626 * C153527 * C153511 * C132 -
          ((C134 * C143 + C180 + C180 + C153608 * C159) * C126 + C198 * C125 +
           C197 * C124 + C196 * C123 + C195 * C122) *
              C153626 * C153527 * C153511 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153608 * C152) * C122 + C193 * C123 +
            C194 * C124 + C195 * C125 + C196 * C126) *
               C153626 * C535 -
           (C619 * C126 + C620 * C125 + C621 * C124 + C622 * C123 +
            (C134 * C542 + C587 + C587 + C153608 * C566) * C122) *
               C153626 * C536 +
           ((C134 * C543 + C588 + C588 + C153608 * C567) * C122 + C623 * C123 +
            C624 * C124 + C625 * C125 + C626 * C126) *
               C153626 * C537) *
              C153511 * C323 +
          ((C622 * C122 + C621 * C123 + C620 * C124 + C619 * C125 +
            (C134 * C548 + C601 + C601 + C153608 * C572) * C126) *
               C153626 * C536 -
           (C197 * C126 + C196 * C125 + C195 * C124 + C194 * C123 +
            C193 * C122) *
               C153626 * C535 -
           ((C134 * C549 + C602 + C602 + C153608 * C573) * C126 + C626 * C125 +
            C625 * C124 + C624 * C123 + C623 * C122) *
               C153626 * C537) *
              C153511 * C153498)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
            C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
            C153887 * C354) *
               C2818 +
           (C2894 + C2895 + C2896) * C2819 + C2908 * C153874) *
              C153626 * C153527 * C153511 * C130 -
          (C2909 * C153874 + (C2899 + C2898 + C2897) * C2819 +
           (C2896 + C2895 + C2894) * C2818) *
              C153626 * C153527 * C153511 * C131 +
          (C2908 * C2818 + (C2902 + C2901 + C2900) * C2819 +
           (C2903 + C2904 + C2905) * C153874) *
              C153626 * C153527 * C153511 * C132 -
          ((C2825 * C336 + C2867 + C2867 + C153887 * C360 + C2823 * C335 +
            C2868 + C2868 + C153913 * C359 + C2821 * C141 + C2869 + C2869 +
            C153925 * C157) *
               C153874 +
           (C2905 + C2904 + C2903) * C2819 + C2909 * C2818) *
              C153626 * C153527 * C153511 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
             C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
             C153887 * C354) *
                C2818 +
            (C2894 + C2895 + C2896) * C2819 + C2908 * C153874) *
               C153626 * C153527 * C320 -
           ((C3212 + C3213 + C3214) * C153874 +
            (C3215 + C3216 + C3217) * C2819 +
            (C2825 * C1319 + C3158 + C3158 + C153887 * C1329 + C2823 * C330 +
             C3159 + C3159 + C153913 * C354 + C2821 * C329 + C3160 + C3160 +
             C153925 * C353) *
                C2818) *
               C153626 * C153527 * C321 +
           ((C2821 * C330 + C3161 + C3161 + C153925 * C354 + C2823 * C1319 +
             C3162 + C3162 + C153913 * C1329 + C2825 * C3127 + C3163 + C3163 +
             C153887 * C3135) *
                C2818 +
            (C3218 + C3219 + C3220) * C2819 +
            (C3221 + C3222 + C3223) * C153874) *
               C153626 * C153527 * C322) *
              C323 +
          (((C3217 + C3216 + C3215) * C2818 + (C3214 + C3213 + C3212) * C2819 +
            (C2821 * C326 + C3182 + C3182 + C153925 * C350 + C2823 * C333 +
             C3183 + C3183 + C153913 * C357 + C2825 * C1316 + C3184 + C3184 +
             C153887 * C1326) *
                C153874) *
               C153626 * C153527 * C321 -
           (C2909 * C153874 + (C2899 + C2898 + C2897) * C2819 +
            (C2896 + C2895 + C2894) * C2818) *
               C153626 * C153527 * C320 -
           ((C2825 * C3130 + C3185 + C3185 + C153887 * C3138 + C2823 * C1316 +
             C3186 + C3186 + C153913 * C1326 + C2821 * C333 + C3187 + C3187 +
             C153925 * C357) *
                C153874 +
            (C3223 + C3222 + C3221) * C2819 + (C3220 + C3219 + C3218) * C2818) *
               C153626 * C153527 * C322) *
              C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
             C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
             C153887 * C354) *
                C2818 +
            (C2894 + C2895 + C2896) * C2819 + C2908 * C153874) *
               C153626 * C535 -
           ((C3526 + C3527 + C3528) * C153874 +
            (C3529 + C3530 + C3531) * C2819 +
            (C2825 * C1892 + C3472 + C3472 + C153887 * C1902 + C2823 * C1057 +
             C3473 + C3473 + C153913 * C1069 + C2821 * C542 + C3474 + C3474 +
             C153925 * C566) *
                C2818) *
               C153626 * C536 +
           ((C2821 * C543 + C3475 + C3475 + C153925 * C567 + C2823 * C1461 +
             C3476 + C3476 + C153913 * C1471 + C2825 * C3441 + C3477 + C3477 +
             C153887 * C3449) *
                C2818 +
            (C3532 + C3533 + C3534) * C2819 +
            (C3535 + C3536 + C3537) * C153874) *
               C153626 * C537) *
              C153511 * C323 +
          (((C3531 + C3530 + C3529) * C2818 + (C3528 + C3527 + C3526) * C2819 +
            (C2821 * C539 + C3496 + C3496 + C153925 * C563 + C2823 * C1060 +
             C3497 + C3497 + C153913 * C1072 + C2825 * C1889 + C3498 + C3498 +
             C153887 * C1899) *
                C153874) *
               C153626 * C536 -
           (C2909 * C153874 + (C2899 + C2898 + C2897) * C2819 +
            (C2896 + C2895 + C2894) * C2818) *
               C153626 * C535 -
           ((C2825 * C3444 + C3499 + C3499 + C153887 * C3452 + C2823 * C1458 +
             C3500 + C3500 + C153913 * C1468 + C2821 * C546 + C3501 + C3501 +
             C153925 * C570) *
                C153874 +
            (C3537 + C3536 + C3535) * C2819 + (C3534 + C3533 + C3532) * C2818) *
               C153626 * C537) *
              C153511 * C153498)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
            C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 + C24119 +
            C153887 * C354) *
               C153922 +
           (C24183 + C24184 + C24185) * C153903 + C24197 * C153874) *
              C153626 * C153527 * C153511 * C130 -
          (C24198 * C153874 + (C24188 + C24187 + C24186) * C153903 +
           (C24185 + C24184 + C24183) * C153922) *
              C153626 * C153527 * C153511 * C131 +
          (C24197 * C153922 + (C24191 + C24190 + C24189) * C153903 +
           (C24192 + C24193 + C24194) * C153874) *
              C153626 * C153527 * C153511 * C132 -
          ((C24114 * C336 + C24156 + C24156 + C153887 * C360 + C24112 * C335 +
            C24157 + C24157 + C24105 * C359 + C24110 * C141 + C24158 + C24158 +
            C24104 * C157) *
               C153874 +
           (C24194 + C24193 + C24192) * C153903 + C24198 * C153922) *
              C153626 * C153527 * C153511 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
             C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 + C24119 +
             C153887 * C354) *
                C153922 +
            (C24183 + C24184 + C24185) * C153903 + C24197 * C153874) *
               C153626 * C153527 * C320 -
           ((C24489 + C24490 + C24491) * C153874 +
            (C24492 + C24493 + C24494) * C153903 +
            (C24114 * C1319 + C24435 + C24435 + C153887 * C1329 +
             C24112 * C330 + C24436 + C24436 + C24105 * C354 + C24110 * C329 +
             C24437 + C24437 + C24104 * C353) *
                C153922) *
               C153626 * C153527 * C321 +
           ((C24110 * C330 + C24438 + C24438 + C24104 * C354 + C24112 * C1319 +
             C24439 + C24439 + C24105 * C1329 + C24114 * C3127 + C24440 +
             C24440 + C153887 * C3135) *
                C153922 +
            (C24495 + C24496 + C24497) * C153903 +
            (C24498 + C24499 + C24500) * C153874) *
               C153626 * C153527 * C322) *
              C323 +
          (((C24494 + C24493 + C24492) * C153922 +
            (C24491 + C24490 + C24489) * C153903 +
            (C24110 * C326 + C24459 + C24459 + C24104 * C350 + C24112 * C333 +
             C24460 + C24460 + C24105 * C357 + C24114 * C1316 + C24461 +
             C24461 + C153887 * C1326) *
                C153874) *
               C153626 * C153527 * C321 -
           (C24198 * C153874 + (C24188 + C24187 + C24186) * C153903 +
            (C24185 + C24184 + C24183) * C153922) *
               C153626 * C153527 * C320 -
           ((C24114 * C3130 + C24462 + C24462 + C153887 * C3138 +
             C24112 * C1316 + C24463 + C24463 + C24105 * C1326 + C24110 * C333 +
             C24464 + C24464 + C24104 * C357) *
                C153874 +
            (C24500 + C24499 + C24498) * C153903 +
            (C24497 + C24496 + C24495) * C153922) *
               C153626 * C153527 * C322) *
              C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
             C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 + C24119 +
             C153887 * C354) *
                C153922 +
            (C24183 + C24184 + C24185) * C153903 + C24197 * C153874) *
               C153626 * C535 -
           ((C24791 + C24792 + C24793) * C153874 +
            (C24794 + C24795 + C24796) * C153903 +
            (C24114 * C1892 + C24737 + C24737 + C153887 * C1902 +
             C24112 * C1057 + C24738 + C24738 + C24105 * C1069 + C24110 * C542 +
             C24739 + C24739 + C24104 * C566) *
                C153922) *
               C153626 * C536 +
           ((C24110 * C543 + C24740 + C24740 + C24104 * C567 + C24112 * C1461 +
             C24741 + C24741 + C24105 * C1471 + C24114 * C3441 + C24742 +
             C24742 + C153887 * C3449) *
                C153922 +
            (C24797 + C24798 + C24799) * C153903 +
            (C24800 + C24801 + C24802) * C153874) *
               C153626 * C537) *
              C153511 * C323 +
          (((C24796 + C24795 + C24794) * C153922 +
            (C24793 + C24792 + C24791) * C153903 +
            (C24110 * C539 + C24761 + C24761 + C24104 * C563 + C24112 * C1060 +
             C24762 + C24762 + C24105 * C1072 + C24114 * C1889 + C24763 +
             C24763 + C153887 * C1899) *
                C153874) *
               C153626 * C536 -
           (C24198 * C153874 + (C24188 + C24187 + C24186) * C153903 +
            (C24185 + C24184 + C24183) * C153922) *
               C153626 * C535 -
           ((C24114 * C3444 + C24764 + C24764 + C153887 * C3452 +
             C24112 * C1458 + C24765 + C24765 + C24105 * C1468 + C24110 * C546 +
             C24766 + C24766 + C24104 * C570) *
                C153874 +
            (C24802 + C24801 + C24800) * C153903 +
            (C24799 + C24798 + C24797) * C153922) *
               C153626 * C537) *
              C153511 * C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((C28350 * C136 + C28361 + C28361 + C28344 * C152 + C28352 * C329 +
           C28362 + C28362 + C28345 * C353 + C28354 * C330 + C28363 + C28363 +
           C28346 * C354 + C28356 * C1319 + C28364 + C28364 + C28347 * C1329 +
           C28358 * C3127 + C28365 + C28365 + C28348 * C3135) *
              C153454 * C153626 * C153527 * C153511 * C130 -
          (C28358 * C3128 + C28366 + C28366 + C28348 * C3136 + C28356 * C1318 +
           C28367 + C28367 + C28347 * C1328 + C28354 * C331 + C28368 + C28368 +
           C28346 * C355 + C28352 * C328 + C28369 + C28369 + C28345 * C352 +
           C28350 * C137 + C28370 + C28370 + C28344 * C153) *
              C153454 * C153626 * C153527 * C153511 * C131 +
          (C28350 * C138 + C28371 + C28371 + C28344 * C154 + C28352 * C327 +
           C28372 + C28372 + C28345 * C351 + C28354 * C332 + C28373 + C28373 +
           C28346 * C356 + C28356 * C1317 + C28374 + C28374 + C28347 * C1327 +
           C28358 * C3129 + C28375 + C28375 + C28348 * C3137) *
              C153454 * C153626 * C153527 * C153511 * C132 -
          (C28358 * C3130 + C28376 + C28376 + C28348 * C3138 + C28356 * C1316 +
           C28377 + C28377 + C28347 * C1326 + C28354 * C333 + C28378 + C28378 +
           C28346 * C357 + C28352 * C326 + C28379 + C28379 + C28345 * C350 +
           C28350 * C139 + C28380 + C28380 + C28344 * C155) *
              C153454 * C153626 * C153527 * C153511 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C28350 * C136 + C28361 + C28361 + C28344 * C152 + C28352 * C329 +
            C28362 + C28362 + C28345 * C353 + C28354 * C330 + C28363 + C28363 +
            C28346 * C354 + C28356 * C1319 + C28364 + C28364 + C28347 * C1329 +
            C28358 * C3127 + C28365 + C28365 + C28348 * C3135) *
               C153454 * C153626 * C153527 * C320 -
           (C28358 * C4723 + C28509 + C28509 + C28348 * C4729 + C28356 * C3127 +
            C28510 + C28510 + C28347 * C3135 + C28354 * C1319 + C28511 +
            C28511 + C28346 * C1329 + C28352 * C330 + C28512 + C28512 +
            C28345 * C354 + C28350 * C329 + C28513 + C28513 + C28344 * C353) *
               C153454 * C153626 * C153527 * C321 +
           (C28350 * C330 + C28514 + C28514 + C28344 * C354 + C28352 * C1319 +
            C28515 + C28515 + C28345 * C1329 + C28354 * C3127 + C28516 +
            C28516 + C28346 * C3135 + C28356 * C4723 + C28517 + C28517 +
            C28347 * C4729 + C28358 * C28502 + C28518 + C28518 +
            C28348 * C28506) *
               C153454 * C153626 * C153527 * C322) *
              C323 +
          ((C28350 * C328 + C28519 + C28519 + C28344 * C352 + C28352 * C331 +
            C28520 + C28520 + C28345 * C355 + C28354 * C1318 + C28521 + C28521 +
            C28346 * C1328 + C28356 * C3128 + C28522 + C28522 + C28347 * C3136 +
            C28358 * C4722 + C28523 + C28523 + C28348 * C4728) *
               C153454 * C153626 * C153527 * C321 -
           (C28358 * C3128 + C28366 + C28366 + C28348 * C3136 + C28356 * C1318 +
            C28367 + C28367 + C28347 * C1328 + C28354 * C331 + C28368 + C28368 +
            C28346 * C355 + C28352 * C328 + C28369 + C28369 + C28345 * C352 +
            C28350 * C137 + C28370 + C28370 + C28344 * C153) *
               C153454 * C153626 * C153527 * C320 -
           (C28358 * C28503 + C28524 + C28524 + C28348 * C28507 +
            C28356 * C4722 + C28525 + C28525 + C28347 * C4728 + C28354 * C3128 +
            C28526 + C28526 + C28346 * C3136 + C28352 * C1318 + C28527 +
            C28527 + C28345 * C1328 + C28350 * C331 + C28528 + C28528 +
            C28344 * C355) *
               C153454 * C153626 * C153527 * C322) *
              C153498)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C28350 * C136 + C28361 + C28361 + C28344 * C152 + C28352 * C329 +
            C28362 + C28362 + C28345 * C353 + C28354 * C330 + C28363 + C28363 +
            C28346 * C354 + C28356 * C1319 + C28364 + C28364 + C28347 * C1329 +
            C28358 * C3127 + C28365 + C28365 + C28348 * C3135) *
               C153454 * C153626 * C535 -
           (C28358 * C5703 + C28657 + C28657 + C28348 * C5709 + C28356 * C4303 +
            C28658 + C28658 + C28347 * C4311 + C28354 * C1892 + C28659 +
            C28659 + C28346 * C1902 + C28352 * C1057 + C28660 + C28660 +
            C28345 * C1069 + C28350 * C542 + C28661 + C28661 + C28344 * C566) *
               C153454 * C153626 * C536 +
           (C28350 * C543 + C28662 + C28662 + C28344 * C567 + C28352 * C1461 +
            C28663 + C28663 + C28345 * C1471 + C28354 * C3441 + C28664 +
            C28664 + C28346 * C3449 + C28356 * C4959 + C28665 + C28665 +
            C28347 * C4965 + C28358 * C28650 + C28666 + C28666 +
            C28348 * C28654) *
               C153454 * C153626 * C537) *
              C153511 * C323 +
          ((C28350 * C541 + C28667 + C28667 + C28344 * C565 + C28352 * C1058 +
            C28668 + C28668 + C28345 * C1070 + C28354 * C1891 + C28669 +
            C28669 + C28346 * C1901 + C28356 * C4304 + C28670 + C28670 +
            C28347 * C4312 + C28358 * C5702 + C28671 + C28671 +
            C28348 * C5708) *
               C153454 * C153626 * C536 -
           (C28358 * C3128 + C28366 + C28366 + C28348 * C3136 + C28356 * C1318 +
            C28367 + C28367 + C28347 * C1328 + C28354 * C331 + C28368 + C28368 +
            C28346 * C355 + C28352 * C328 + C28369 + C28369 + C28345 * C352 +
            C28350 * C137 + C28370 + C28370 + C28344 * C153) *
               C153454 * C153626 * C535 -
           (C28358 * C28651 + C28672 + C28672 + C28348 * C28655 +
            C28356 * C4958 + C28673 + C28673 + C28347 * C4964 + C28354 * C3442 +
            C28674 + C28674 + C28346 * C3450 + C28352 * C1460 + C28675 +
            C28675 + C28345 * C1470 + C28350 * C544 + C28676 + C28676 +
            C28344 * C568) *
               C153454 * C153626 * C537) *
              C153511 * C153498)) /
            (p * q * std::sqrt(p + q));
    d2ee[363] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153608 * C152) * C122 + C193 * C123 +
            C194 * C124 + C195 * C125 + C196 * C126) *
               C153626 * C153838 -
           (C619 * C126 + C620 * C125 + C621 * C124 + C622 * C123 +
            (C134 * C542 + C587 + C587 + C153608 * C566) * C122) *
               C153626 * C153591) *
              C153511 * C153906 +
          ((C622 * C122 + C621 * C123 + C620 * C124 + C619 * C125 +
            C895 * C126) *
               C153626 * C153591 -
           (C197 * C126 + C196 * C125 + C195 * C124 + C194 * C123 +
            C193 * C122) *
               C153626 * C153838) *
              C153511 * C153907 +
          ((C194 * C122 + C195 * C123 + C196 * C124 + C197 * C125 +
            C198 * C126) *
               C153626 * C153838 -
           ((C134 * C886 + C892 + C892 + C153608 * C888) * C126 + C895 * C125 +
            C619 * C124 + C620 * C123 + C621 * C122) *
               C153626 * C153591) *
              C153511 * C752)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
             C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
             C153887 * C354) *
                C2818 +
            (C2894 + C2895 + C2896) * C2819 + C2908 * C153874) *
               C153626 * C153838 -
           (C4004 * C153874 + (C3529 + C3530 + C3531) * C2819 +
            (C2825 * C1892 + C3472 + C3472 + C153887 * C1902 + C2823 * C1057 +
             C3473 + C3473 + C153913 * C1069 + C2821 * C542 + C3474 + C3474 +
             C153925 * C566) *
                C2818) *
               C153626 * C153591) *
              C153511 * C153906 +
          (((C3531 + C3530 + C3529) * C2818 + (C3528 + C3527 + C3526) * C2819 +
            (C4011 + C4012 + C4013) * C153874) *
               C153626 * C153591 -
           (C2909 * C153874 + (C2899 + C2898 + C2897) * C2819 +
            (C2896 + C2895 + C2894) * C2818) *
               C153626 * C153838) *
              C153511 * C153907 +
          ((C2908 * C2818 + (C2902 + C2901 + C2900) * C2819 +
            (C2903 + C2904 + C2905) * C153874) *
               C153626 * C153838 -
           ((C2825 * C1888 + C4001 + C4001 + C153887 * C1898 + C2823 * C1061 +
             C4002 + C4002 + C153913 * C1073 + C2821 * C538 + C4003 + C4003 +
             C153925 * C562) *
                C153874 +
            (C4013 + C4012 + C4011) * C2819 + C4004 * C2818) *
               C153626 * C153591) *
              C153511 * C752)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
             C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 + C24119 +
             C153887 * C354) *
                C153922 +
            (C24183 + C24184 + C24185) * C153903 + C24197 * C153874) *
               C153626 * C153838 -
           (C25269 * C153874 + (C24794 + C24795 + C24796) * C153903 +
            (C24114 * C1892 + C24737 + C24737 + C153887 * C1902 +
             C24112 * C1057 + C24738 + C24738 + C24105 * C1069 + C24110 * C542 +
             C24739 + C24739 + C24104 * C566) *
                C153922) *
               C153626 * C153591) *
              C153511 * C153906 +
          (((C24796 + C24795 + C24794) * C153922 +
            (C24793 + C24792 + C24791) * C153903 +
            (C25276 + C25277 + C25278) * C153874) *
               C153626 * C153591 -
           (C24198 * C153874 + (C24188 + C24187 + C24186) * C153903 +
            (C24185 + C24184 + C24183) * C153922) *
               C153626 * C153838) *
              C153511 * C153907 +
          ((C24197 * C153922 + (C24191 + C24190 + C24189) * C153903 +
            (C24192 + C24193 + C24194) * C153874) *
               C153626 * C153838 -
           ((C24114 * C1888 + C25266 + C25266 + C153887 * C1898 +
             C24112 * C1061 + C25267 + C25267 + C24105 * C1073 + C24110 * C538 +
             C25268 + C25268 + C24104 * C562) *
                C153874 +
            (C25278 + C25277 + C25276) * C153903 + C25269 * C153922) *
               C153626 * C153591) *
              C153511 * C752)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C28350 * C136 + C28361 + C28361 + C28344 * C152 + C28352 * C329 +
            C28362 + C28362 + C28345 * C353 + C28354 * C330 + C28363 + C28363 +
            C28346 * C354 + C28356 * C1319 + C28364 + C28364 + C28347 * C1329 +
            C28358 * C3127 + C28365 + C28365 + C28348 * C3135) *
               C153454 * C153626 * C153838 -
           (C28358 * C5703 + C28657 + C28657 + C28348 * C5709 + C28356 * C4303 +
            C28658 + C28658 + C28347 * C4311 + C28354 * C1892 + C28659 +
            C28659 + C28346 * C1902 + C28352 * C1057 + C28660 + C28660 +
            C28345 * C1069 + C28350 * C542 + C28661 + C28661 + C28344 * C566) *
               C153454 * C153626 * C153591) *
              C153511 * C153906 +
          ((C28350 * C541 + C28667 + C28667 + C28344 * C565 + C28352 * C1058 +
            C28668 + C28668 + C28345 * C1070 + C28354 * C1891 + C28669 +
            C28669 + C28346 * C1901 + C28356 * C4304 + C28670 + C28670 +
            C28347 * C4312 + C28358 * C5702 + C28671 + C28671 +
            C28348 * C5708) *
               C153454 * C153626 * C153591 -
           (C28358 * C3128 + C28366 + C28366 + C28348 * C3136 + C28356 * C1318 +
            C28367 + C28367 + C28347 * C1328 + C28354 * C331 + C28368 + C28368 +
            C28346 * C355 + C28352 * C328 + C28369 + C28369 + C28345 * C352 +
            C28350 * C137 + C28370 + C28370 + C28344 * C153) *
               C153454 * C153626 * C153838) *
              C153511 * C153907 +
          ((C28350 * C138 + C28371 + C28371 + C28344 * C154 + C28352 * C327 +
            C28372 + C28372 + C28345 * C351 + C28354 * C332 + C28373 + C28373 +
            C28346 * C356 + C28356 * C1317 + C28374 + C28374 + C28347 * C1327 +
            C28358 * C3129 + C28375 + C28375 + C28348 * C3137) *
               C153454 * C153626 * C153838 -
           (C28358 * C5701 + C28926 + C28926 + C28348 * C5707 + C28356 * C4305 +
            C28927 + C28927 + C28347 * C4313 + C28354 * C1890 + C28928 +
            C28928 + C28346 * C1900 + C28352 * C1059 + C28929 + C28929 +
            C28345 * C1071 + C28350 * C540 + C28930 + C28930 + C28344 * C564) *
               C153454 * C153626 * C153591) *
              C153511 * C752)) /
            (p * q * std::sqrt(p + q));
    d2ee[364] +=
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C136 + C161 + C161 + C153608 * C152) * C122 + C193 * C123 +
           C194 * C124 + C195 * C125 + C196 * C126) *
              C153626 * C153527 * C153511 * C130 -
          (C197 * C126 + C196 * C125 + C195 * C124 + C194 * C123 +
           C193 * C122) *
              C153626 * C153527 * C153511 * C131 +
          (C194 * C122 + C195 * C123 + C196 * C124 + C197 * C125 +
           C198 * C126) *
              C153626 * C153527 * C153511 * C132 -
          ((C134 * C143 + C180 + C180 + C153608 * C159) * C126 + C198 * C125 +
           C197 * C124 + C196 * C123 + C195 * C122) *
              C153626 * C153527 * C153511 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153608 * C152) * C122 + C193 * C123 +
            C194 * C124 + C195 * C125 + C196 * C126) *
               C153626 * C153527 * C320 -
           (C406 * C126 + C407 * C125 + C408 * C124 + C409 * C123 +
            (C134 * C329 + C374 + C374 + C153608 * C353) * C122) *
               C153626 * C153527 * C321 +
           ((C134 * C330 + C375 + C375 + C153608 * C354) * C122 + C410 * C123 +
            C411 * C124 + C412 * C125 + C413 * C126) *
               C153626 * C153527 * C322) *
              C323 +
          ((C409 * C122 + C408 * C123 + C407 * C124 + C406 * C125 +
            (C134 * C335 + C388 + C388 + C153608 * C359) * C126) *
               C153626 * C153527 * C321 -
           (C197 * C126 + C196 * C125 + C195 * C124 + C194 * C123 +
            C193 * C122) *
               C153626 * C153527 * C320 -
           ((C134 * C336 + C389 + C389 + C153608 * C360) * C126 + C413 * C125 +
            C412 * C124 + C411 * C123 + C410 * C122) *
               C153626 * C153527 * C322) *
              C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
            C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
            C153887 * C354) *
               C2818 +
           (C2894 + C2895 + C2896) * C2819 + C2908 * C153874) *
              C153626 * C153527 * C153511 * C130 -
          (C2909 * C153874 + (C2899 + C2898 + C2897) * C2819 +
           (C2896 + C2895 + C2894) * C2818) *
              C153626 * C153527 * C153511 * C131 +
          (C2908 * C2818 + (C2902 + C2901 + C2900) * C2819 +
           (C2903 + C2904 + C2905) * C153874) *
              C153626 * C153527 * C153511 * C132 -
          ((C2825 * C336 + C2867 + C2867 + C153887 * C360 + C2823 * C335 +
            C2868 + C2868 + C153913 * C359 + C2821 * C141 + C2869 + C2869 +
            C153925 * C157) *
               C153874 +
           (C2905 + C2904 + C2903) * C2819 + C2909 * C2818) *
              C153626 * C153527 * C153511 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
             C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
             C153887 * C354) *
                C2818 +
            (C2894 + C2895 + C2896) * C2819 + C2908 * C153874) *
               C153626 * C153527 * C320 -
           ((C3212 + C3213 + C3214) * C153874 +
            (C3215 + C3216 + C3217) * C2819 +
            (C2825 * C1319 + C3158 + C3158 + C153887 * C1329 + C2823 * C330 +
             C3159 + C3159 + C153913 * C354 + C2821 * C329 + C3160 + C3160 +
             C153925 * C353) *
                C2818) *
               C153626 * C153527 * C321 +
           ((C2821 * C330 + C3161 + C3161 + C153925 * C354 + C2823 * C1319 +
             C3162 + C3162 + C153913 * C1329 + C2825 * C3127 + C3163 + C3163 +
             C153887 * C3135) *
                C2818 +
            (C3218 + C3219 + C3220) * C2819 +
            (C3221 + C3222 + C3223) * C153874) *
               C153626 * C153527 * C322) *
              C323 +
          (((C3217 + C3216 + C3215) * C2818 + (C3214 + C3213 + C3212) * C2819 +
            (C2821 * C326 + C3182 + C3182 + C153925 * C350 + C2823 * C333 +
             C3183 + C3183 + C153913 * C357 + C2825 * C1316 + C3184 + C3184 +
             C153887 * C1326) *
                C153874) *
               C153626 * C153527 * C321 -
           (C2909 * C153874 + (C2899 + C2898 + C2897) * C2819 +
            (C2896 + C2895 + C2894) * C2818) *
               C153626 * C153527 * C320 -
           ((C2825 * C3130 + C3185 + C3185 + C153887 * C3138 + C2823 * C1316 +
             C3186 + C3186 + C153913 * C1326 + C2821 * C333 + C3187 + C3187 +
             C153925 * C357) *
                C153874 +
            (C3223 + C3222 + C3221) * C2819 + (C3220 + C3219 + C3218) * C2818) *
               C153626 * C153527 * C322) *
              C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
            C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 + C24119 +
            C153887 * C354) *
               C153922 +
           (C24183 + C24184 + C24185) * C153903 + C24197 * C153874) *
              C153626 * C153527 * C153511 * C130 -
          (C24198 * C153874 + (C24188 + C24187 + C24186) * C153903 +
           (C24185 + C24184 + C24183) * C153922) *
              C153626 * C153527 * C153511 * C131 +
          (C24197 * C153922 + (C24191 + C24190 + C24189) * C153903 +
           (C24192 + C24193 + C24194) * C153874) *
              C153626 * C153527 * C153511 * C132 -
          ((C24114 * C336 + C24156 + C24156 + C153887 * C360 + C24112 * C335 +
            C24157 + C24157 + C24105 * C359 + C24110 * C141 + C24158 + C24158 +
            C24104 * C157) *
               C153874 +
           (C24194 + C24193 + C24192) * C153903 + C24198 * C153922) *
              C153626 * C153527 * C153511 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
             C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 + C24119 +
             C153887 * C354) *
                C153922 +
            (C24183 + C24184 + C24185) * C153903 + C24197 * C153874) *
               C153626 * C153527 * C320 -
           ((C24489 + C24490 + C24491) * C153874 +
            (C24492 + C24493 + C24494) * C153903 +
            (C24114 * C1319 + C24435 + C24435 + C153887 * C1329 +
             C24112 * C330 + C24436 + C24436 + C24105 * C354 + C24110 * C329 +
             C24437 + C24437 + C24104 * C353) *
                C153922) *
               C153626 * C153527 * C321 +
           ((C24110 * C330 + C24438 + C24438 + C24104 * C354 + C24112 * C1319 +
             C24439 + C24439 + C24105 * C1329 + C24114 * C3127 + C24440 +
             C24440 + C153887 * C3135) *
                C153922 +
            (C24495 + C24496 + C24497) * C153903 +
            (C24498 + C24499 + C24500) * C153874) *
               C153626 * C153527 * C322) *
              C323 +
          (((C24494 + C24493 + C24492) * C153922 +
            (C24491 + C24490 + C24489) * C153903 +
            (C24110 * C326 + C24459 + C24459 + C24104 * C350 + C24112 * C333 +
             C24460 + C24460 + C24105 * C357 + C24114 * C1316 + C24461 +
             C24461 + C153887 * C1326) *
                C153874) *
               C153626 * C153527 * C321 -
           (C24198 * C153874 + (C24188 + C24187 + C24186) * C153903 +
            (C24185 + C24184 + C24183) * C153922) *
               C153626 * C153527 * C320 -
           ((C24114 * C3130 + C24462 + C24462 + C153887 * C3138 +
             C24112 * C1316 + C24463 + C24463 + C24105 * C1326 + C24110 * C333 +
             C24464 + C24464 + C24104 * C357) *
                C153874 +
            (C24500 + C24499 + C24498) * C153903 +
            (C24497 + C24496 + C24495) * C153922) *
               C153626 * C153527 * C322) *
              C153498)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((C28350 * C136 + C28361 + C28361 + C28344 * C152 + C28352 * C329 +
           C28362 + C28362 + C28345 * C353 + C28354 * C330 + C28363 + C28363 +
           C28346 * C354 + C28356 * C1319 + C28364 + C28364 + C28347 * C1329 +
           C28358 * C3127 + C28365 + C28365 + C28348 * C3135) *
              C153454 * C153626 * C153527 * C153511 * C130 -
          (C28358 * C3128 + C28366 + C28366 + C28348 * C3136 + C28356 * C1318 +
           C28367 + C28367 + C28347 * C1328 + C28354 * C331 + C28368 + C28368 +
           C28346 * C355 + C28352 * C328 + C28369 + C28369 + C28345 * C352 +
           C28350 * C137 + C28370 + C28370 + C28344 * C153) *
              C153454 * C153626 * C153527 * C153511 * C131 +
          (C28350 * C138 + C28371 + C28371 + C28344 * C154 + C28352 * C327 +
           C28372 + C28372 + C28345 * C351 + C28354 * C332 + C28373 + C28373 +
           C28346 * C356 + C28356 * C1317 + C28374 + C28374 + C28347 * C1327 +
           C28358 * C3129 + C28375 + C28375 + C28348 * C3137) *
              C153454 * C153626 * C153527 * C153511 * C132 -
          (C28358 * C3130 + C28376 + C28376 + C28348 * C3138 + C28356 * C1316 +
           C28377 + C28377 + C28347 * C1326 + C28354 * C333 + C28378 + C28378 +
           C28346 * C357 + C28352 * C326 + C28379 + C28379 + C28345 * C350 +
           C28350 * C139 + C28380 + C28380 + C28344 * C155) *
              C153454 * C153626 * C153527 * C153511 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((C28350 * C136 + C28361 + C28361 + C28344 * C152 + C28352 * C329 +
            C28362 + C28362 + C28345 * C353 + C28354 * C330 + C28363 + C28363 +
            C28346 * C354 + C28356 * C1319 + C28364 + C28364 + C28347 * C1329 +
            C28358 * C3127 + C28365 + C28365 + C28348 * C3135) *
               C153454 * C153626 * C153527 * C320 -
           (C28358 * C4723 + C28509 + C28509 + C28348 * C4729 + C28356 * C3127 +
            C28510 + C28510 + C28347 * C3135 + C28354 * C1319 + C28511 +
            C28511 + C28346 * C1329 + C28352 * C330 + C28512 + C28512 +
            C28345 * C354 + C28350 * C329 + C28513 + C28513 + C28344 * C353) *
               C153454 * C153626 * C153527 * C321 +
           (C28350 * C330 + C28514 + C28514 + C28344 * C354 + C28352 * C1319 +
            C28515 + C28515 + C28345 * C1329 + C28354 * C3127 + C28516 +
            C28516 + C28346 * C3135 + C28356 * C4723 + C28517 + C28517 +
            C28347 * C4729 + C28358 * C28502 + C28518 + C28518 +
            C28348 * C28506) *
               C153454 * C153626 * C153527 * C322) *
              C323 +
          ((C28350 * C328 + C28519 + C28519 + C28344 * C352 + C28352 * C331 +
            C28520 + C28520 + C28345 * C355 + C28354 * C1318 + C28521 + C28521 +
            C28346 * C1328 + C28356 * C3128 + C28522 + C28522 + C28347 * C3136 +
            C28358 * C4722 + C28523 + C28523 + C28348 * C4728) *
               C153454 * C153626 * C153527 * C321 -
           (C28358 * C3128 + C28366 + C28366 + C28348 * C3136 + C28356 * C1318 +
            C28367 + C28367 + C28347 * C1328 + C28354 * C331 + C28368 + C28368 +
            C28346 * C355 + C28352 * C328 + C28369 + C28369 + C28345 * C352 +
            C28350 * C137 + C28370 + C28370 + C28344 * C153) *
               C153454 * C153626 * C153527 * C320 -
           (C28358 * C28503 + C28524 + C28524 + C28348 * C28507 +
            C28356 * C4722 + C28525 + C28525 + C28347 * C4728 + C28354 * C3128 +
            C28526 + C28526 + C28346 * C3136 + C28352 * C1318 + C28527 +
            C28527 + C28345 * C1328 + C28350 * C331 + C28528 + C28528 +
            C28344 * C355) *
               C153454 * C153626 * C153527 * C322) *
              C153498)) /
            (p * q * std::sqrt(p + q));
    d2ee[365] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153608 * C152) * C122 + C193 * C123 +
            C194 * C124 + C195 * C125 + C196 * C126) *
               C153626 * C153527 * C153908 -
           (C406 * C126 + C407 * C125 + C408 * C124 + C409 * C123 +
            (C134 * C329 + C374 + C374 + C153608 * C353) * C122) *
               C153626 * C153527 * C153909 +
           ((C134 * C330 + C375 + C375 + C153608 * C354) * C122 + C410 * C123 +
            C411 * C124 + C412 * C125 + C413 * C126) *
               C153626 * C153527 * C1601) *
              C153829 +
          ((C409 * C122 + C408 * C123 + C407 * C124 + C406 * C125 +
            C762 * C126) *
               C153626 * C153527 * C153909 -
           (C197 * C126 + C196 * C125 + C195 * C124 + C194 * C123 +
            C193 * C122) *
               C153626 * C153527 * C153908 -
           ((C134 * C336 + C389 + C389 + C153608 * C360) * C126 + C413 * C125 +
            C412 * C124 + C411 * C123 + C410 * C122) *
               C153626 * C153527 * C1601) *
              C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
             C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
             C153887 * C354) *
                C2818 +
            (C2894 + C2895 + C2896) * C2819 + C2908 * C153874) *
               C153626 * C153527 * C153908 -
           (C3766 * C153874 + (C3215 + C3216 + C3217) * C2819 +
            (C2825 * C1319 + C3158 + C3158 + C153887 * C1329 + C2823 * C330 +
             C3159 + C3159 + C153913 * C354 + C2821 * C329 + C3160 + C3160 +
             C153925 * C353) *
                C2818) *
               C153626 * C153527 * C153909 +
           ((C2821 * C330 + C3161 + C3161 + C153925 * C354 + C2823 * C1319 +
             C3162 + C3162 + C153913 * C1329 + C2825 * C3127 + C3163 + C3163 +
             C153887 * C3135) *
                C2818 +
            (C3218 + C3219 + C3220) * C2819 +
            (C3221 + C3222 + C3223) * C153874) *
               C153626 * C153527 * C1601) *
              C153829 +
          (((C3217 + C3216 + C3215) * C2818 + (C3214 + C3213 + C3212) * C2819 +
            (C3773 + C3774 + C3775) * C153874) *
               C153626 * C153527 * C153909 -
           (C2909 * C153874 + (C2899 + C2898 + C2897) * C2819 +
            (C2896 + C2895 + C2894) * C2818) *
               C153626 * C153527 * C153908 -
           ((C2825 * C3130 + C3185 + C3185 + C153887 * C3138 + C2823 * C1316 +
             C3186 + C3186 + C153913 * C1326 + C2821 * C333 + C3187 + C3187 +
             C153925 * C357) *
                C153874 +
            (C3223 + C3222 + C3221) * C2819 + (C3220 + C3219 + C3218) * C2818) *
               C153626 * C153527 * C1601) *
              C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
             C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 + C24119 +
             C153887 * C354) *
                C153922 +
            (C24183 + C24184 + C24185) * C153903 + C24197 * C153874) *
               C153626 * C153527 * C153908 -
           (C25031 * C153874 + (C24492 + C24493 + C24494) * C153903 +
            (C24114 * C1319 + C24435 + C24435 + C153887 * C1329 +
             C24112 * C330 + C24436 + C24436 + C24105 * C354 + C24110 * C329 +
             C24437 + C24437 + C24104 * C353) *
                C153922) *
               C153626 * C153527 * C153909 +
           ((C24110 * C330 + C24438 + C24438 + C24104 * C354 + C24112 * C1319 +
             C24439 + C24439 + C24105 * C1329 + C24114 * C3127 + C24440 +
             C24440 + C153887 * C3135) *
                C153922 +
            (C24495 + C24496 + C24497) * C153903 +
            (C24498 + C24499 + C24500) * C153874) *
               C153626 * C153527 * C1601) *
              C153829 +
          (((C24494 + C24493 + C24492) * C153922 +
            (C24491 + C24490 + C24489) * C153903 +
            (C25038 + C25039 + C25040) * C153874) *
               C153626 * C153527 * C153909 -
           (C24198 * C153874 + (C24188 + C24187 + C24186) * C153903 +
            (C24185 + C24184 + C24183) * C153922) *
               C153626 * C153527 * C153908 -
           ((C24114 * C3130 + C24462 + C24462 + C153887 * C3138 +
             C24112 * C1316 + C24463 + C24463 + C24105 * C1326 + C24110 * C333 +
             C24464 + C24464 + C24104 * C357) *
                C153874 +
            (C24500 + C24499 + C24498) * C153903 +
            (C24497 + C24496 + C24495) * C153922) *
               C153626 * C153527 * C1601) *
              C153498)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C28350 * C136 + C28361 + C28361 + C28344 * C152 + C28352 * C329 +
            C28362 + C28362 + C28345 * C353 + C28354 * C330 + C28363 + C28363 +
            C28346 * C354 + C28356 * C1319 + C28364 + C28364 + C28347 * C1329 +
            C28358 * C3127 + C28365 + C28365 + C28348 * C3135) *
               C153454 * C153626 * C153527 * C153908 -
           (C28358 * C4723 + C28509 + C28509 + C28348 * C4729 + C28356 * C3127 +
            C28510 + C28510 + C28347 * C3135 + C28354 * C1319 + C28511 +
            C28511 + C28346 * C1329 + C28352 * C330 + C28512 + C28512 +
            C28345 * C354 + C28350 * C329 + C28513 + C28513 + C28344 * C353) *
               C153454 * C153626 * C153527 * C153909 +
           (C28350 * C330 + C28514 + C28514 + C28344 * C354 + C28352 * C1319 +
            C28515 + C28515 + C28345 * C1329 + C28354 * C3127 + C28516 +
            C28516 + C28346 * C3135 + C28356 * C4723 + C28517 + C28517 +
            C28347 * C4729 + C28358 * C28502 + C28518 + C28518 +
            C28348 * C28506) *
               C153454 * C153626 * C153527 * C1601) *
              C153829 +
          ((C28350 * C328 + C28519 + C28519 + C28344 * C352 + C28352 * C331 +
            C28520 + C28520 + C28345 * C355 + C28354 * C1318 + C28521 + C28521 +
            C28346 * C1328 + C28356 * C3128 + C28522 + C28522 + C28347 * C3136 +
            C28358 * C4722 + C28523 + C28523 + C28348 * C4728) *
               C153454 * C153626 * C153527 * C153909 -
           (C28358 * C3128 + C28366 + C28366 + C28348 * C3136 + C28356 * C1318 +
            C28367 + C28367 + C28347 * C1328 + C28354 * C331 + C28368 + C28368 +
            C28346 * C355 + C28352 * C328 + C28369 + C28369 + C28345 * C352 +
            C28350 * C137 + C28370 + C28370 + C28344 * C153) *
               C153454 * C153626 * C153527 * C153908 -
           (C28358 * C28503 + C28524 + C28524 + C28348 * C28507 +
            C28356 * C4722 + C28525 + C28525 + C28347 * C4728 + C28354 * C3128 +
            C28526 + C28526 + C28346 * C3136 + C28352 * C1318 + C28527 +
            C28527 + C28345 * C1328 + C28350 * C331 + C28528 + C28528 +
            C28344 * C355) *
               C153454 * C153626 * C153527 * C1601) *
              C153498)) /
            (p * q * std::sqrt(p + q));
    d2ee[366] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153608 * C152) * C122 + C193 * C123 +
            C194 * C124 + C195 * C125 + C196 * C126) *
               C153626 * C153838 -
           (C619 * C126 + C620 * C125 + C621 * C124 + C622 * C123 +
            (C134 * C542 + C587 + C587 + C153608 * C566) * C122) *
               C153626 * C153591) *
              C153908 +
          (((C134 * C1057 + C1076 + C1076 + C153608 * C1069) * C122 +
            C1098 * C123 + C1099 * C124 + C1100 * C125 + C1101 * C126) *
               C153626 * C153591 -
           (C406 * C126 + C407 * C125 + C408 * C124 + C409 * C123 +
            (C134 * C329 + C374 + C374 + C153608 * C353) * C122) *
               C153626 * C153838) *
              C153909 +
          (((C134 * C330 + C375 + C375 + C153608 * C354) * C122 + C410 * C123 +
            C411 * C124 + C412 * C125 + C413 * C126) *
               C153626 * C153838 -
           ((C134 * C1888 + C1904 + C1904 + C153608 * C1898) * C126 +
            (C134 * C1889 + C1905 + C1905 + C153608 * C1899) * C125 +
            (C134 * C1890 + C1906 + C1906 + C153608 * C1900) * C124 +
            (C134 * C1891 + C1907 + C1907 + C153608 * C1901) * C123 +
            (C134 * C1892 + C1908 + C1908 + C153608 * C1902) * C122) *
               C153626 * C153591) *
              C1601) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
             C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
             C153887 * C354) *
                C2818 +
            (C2894 + C2895 + C2896) * C2819 + C2908 * C153874) *
               C153626 * C153838 -
           (C4004 * C153874 + (C3529 + C3530 + C3531) * C2819 +
            (C2825 * C1892 + C3472 + C3472 + C153887 * C1902 + C2823 * C1057 +
             C3473 + C3473 + C153913 * C1069 + C2821 * C542 + C3474 + C3474 +
             C153925 * C566) *
                C2818) *
               C153626 * C153591) *
              C153908 +
          (((C2821 * C1057 + C4316 + C4316 + C153925 * C1069 + C2823 * C1892 +
             C4317 + C4317 + C153913 * C1902 + C2825 * C4303 + C4318 + C4318 +
             C153887 * C4311) *
                C2818 +
            (C4352 + C4353 + C4354) * C2819 +
            (C4355 + C4356 + C4357) * C153874) *
               C153626 * C153591 -
           (C3766 * C153874 + (C3215 + C3216 + C3217) * C2819 +
            (C2825 * C1319 + C3158 + C3158 + C153887 * C1329 + C2823 * C330 +
             C3159 + C3159 + C153913 * C354 + C2821 * C329 + C3160 + C3160 +
             C153925 * C353) *
                C2818) *
               C153626 * C153838) *
              C153909 +
          (((C2821 * C330 + C3161 + C3161 + C153925 * C354 + C2823 * C1319 +
             C3162 + C3162 + C153913 * C1329 + C2825 * C3127 + C3163 + C3163 +
             C153887 * C3135) *
                C2818 +
            (C3218 + C3219 + C3220) * C2819 +
            (C3221 + C3222 + C3223) * C153874) *
               C153626 * C153838 -
           ((C2825 * C5701 + C5711 + C5711 + C153887 * C5707 + C2823 * C4305 +
             C5712 + C5712 + C153913 * C4313 + C2821 * C1890 + C5713 + C5713 +
             C153925 * C1900) *
                C153874 +
            (C2825 * C5702 + C5714 + C5714 + C153887 * C5708 + C2823 * C4304 +
             C5715 + C5715 + C153913 * C4312 + C2821 * C1891 + C5716 + C5716 +
             C153925 * C1901) *
                C2819 +
            (C2825 * C5703 + C5717 + C5717 + C153887 * C5709 + C2823 * C4303 +
             C5718 + C5718 + C153913 * C4311 + C2821 * C1892 + C5719 + C5719 +
             C153925 * C1902) *
                C2818) *
               C153626 * C153591) *
              C1601) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
             C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 + C24119 +
             C153887 * C354) *
                C153922 +
            (C24183 + C24184 + C24185) * C153903 + C24197 * C153874) *
               C153626 * C153838 -
           (C25269 * C153874 + (C24794 + C24795 + C24796) * C153903 +
            (C24114 * C1892 + C24737 + C24737 + C153887 * C1902 +
             C24112 * C1057 + C24738 + C24738 + C24105 * C1069 + C24110 * C542 +
             C24739 + C24739 + C24104 * C566) *
                C153922) *
               C153626 * C153591) *
              C153908 +
          (((C24110 * C1057 + C25569 + C25569 + C24104 * C1069 +
             C24112 * C1892 + C25570 + C25570 + C24105 * C1902 +
             C24114 * C4303 + C25571 + C25571 + C153887 * C4311) *
                C153922 +
            (C25605 + C25606 + C25607) * C153903 +
            (C25608 + C25609 + C25610) * C153874) *
               C153626 * C153591 -
           (C25031 * C153874 + (C24492 + C24493 + C24494) * C153903 +
            (C24114 * C1319 + C24435 + C24435 + C153887 * C1329 +
             C24112 * C330 + C24436 + C24436 + C24105 * C354 + C24110 * C329 +
             C24437 + C24437 + C24104 * C353) *
                C153922) *
               C153626 * C153838) *
              C153909 +
          (((C24110 * C330 + C24438 + C24438 + C24104 * C354 + C24112 * C1319 +
             C24439 + C24439 + C24105 * C1329 + C24114 * C3127 + C24440 +
             C24440 + C153887 * C3135) *
                C153922 +
            (C24495 + C24496 + C24497) * C153903 +
            (C24498 + C24499 + C24500) * C153874) *
               C153626 * C153838 -
           ((C24114 * C5701 + C26937 + C26937 + C153887 * C5707 +
             C24112 * C4305 + C26938 + C26938 + C24105 * C4313 +
             C24110 * C1890 + C26939 + C26939 + C24104 * C1900) *
                C153874 +
            (C24114 * C5702 + C26940 + C26940 + C153887 * C5708 +
             C24112 * C4304 + C26941 + C26941 + C24105 * C4312 +
             C24110 * C1891 + C26942 + C26942 + C24104 * C1901) *
                C153903 +
            (C24114 * C5703 + C26943 + C26943 + C153887 * C5709 +
             C24112 * C4303 + C26944 + C26944 + C24105 * C4311 +
             C24110 * C1892 + C26945 + C26945 + C24104 * C1902) *
                C153922) *
               C153626 * C153591) *
              C1601) *
         C153492) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C28350 * C136 + C28361 + C28361 + C28344 * C152 + C28352 * C329 +
            C28362 + C28362 + C28345 * C353 + C28354 * C330 + C28363 + C28363 +
            C28346 * C354 + C28356 * C1319 + C28364 + C28364 + C28347 * C1329 +
            C28358 * C3127 + C28365 + C28365 + C28348 * C3135) *
               C153454 * C153626 * C153838 -
           (C28358 * C5703 + C28657 + C28657 + C28348 * C5709 + C28356 * C4303 +
            C28658 + C28658 + C28347 * C4311 + C28354 * C1892 + C28659 +
            C28659 + C28346 * C1902 + C28352 * C1057 + C28660 + C28660 +
            C28345 * C1069 + C28350 * C542 + C28661 + C28661 + C28344 * C566) *
               C153454 * C153626 * C153591) *
              C153908 +
          ((C28350 * C1057 + C29099 + C29099 + C28344 * C1069 + C28352 * C1892 +
            C29100 + C29100 + C28345 * C1902 + C28354 * C4303 + C29101 +
            C29101 + C28346 * C4311 + C28356 * C5703 + C29102 + C29102 +
            C28347 * C5709 + C28358 * C29092 + C29103 + C29103 +
            C28348 * C29096) *
               C153454 * C153626 * C153591 -
           (C28358 * C4723 + C28509 + C28509 + C28348 * C4729 + C28356 * C3127 +
            C28510 + C28510 + C28347 * C3135 + C28354 * C1319 + C28511 +
            C28511 + C28346 * C1329 + C28352 * C330 + C28512 + C28512 +
            C28345 * C354 + C28350 * C329 + C28513 + C28513 + C28344 * C353) *
               C153454 * C153626 * C153838) *
              C153909 +
          ((C28350 * C330 + C28514 + C28514 + C28344 * C354 + C28352 * C1319 +
            C28515 + C28515 + C28345 * C1329 + C28354 * C3127 + C28516 +
            C28516 + C28346 * C3135 + C28356 * C4723 + C28517 + C28517 +
            C28347 * C4729 + C28358 * C28502 + C28518 + C28518 +
            C28348 * C28506) *
               C153454 * C153626 * C153838 -
           (C28358 * C29856 + C29860 + C29860 + C28348 * C29858 +
            C28356 * C29092 + C29861 + C29861 + C28347 * C29096 +
            C28354 * C5703 + C29862 + C29862 + C28346 * C5709 + C28352 * C4303 +
            C29863 + C29863 + C28345 * C4311 + C28350 * C1892 + C29864 +
            C29864 + C28344 * C1902) *
               C153454 * C153626 * C153591) *
              C1601) *
         C153492) /
            (p * q * std::sqrt(p + q));
    d2ee[367] +=
        (-std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C136 + C161 + C161 + C153608 * C152) * C122 + C193 * C123 +
           C194 * C124 + C195 * C125 + C196 * C126) *
              C153626 * C153527 * C1310 -
          (C406 * C126 + C407 * C125 + C408 * C124 + C409 * C123 +
           (C134 * C329 + C374 + C374 + C153608 * C353) * C122) *
              C153626 * C153527 * C1311 +
          ((C134 * C330 + C375 + C375 + C153608 * C354) * C122 + C410 * C123 +
           C411 * C124 + C412 * C125 + C413 * C126) *
              C153626 * C153527 * C1312 -
          ((C134 * C1315 + C1331 + C1331 + C153608 * C1325) * C126 +
           (C134 * C1316 + C1332 + C1332 + C153608 * C1326) * C125 +
           (C134 * C1317 + C1333 + C1333 + C153608 * C1327) * C124 +
           (C134 * C1318 + C1334 + C1334 + C153608 * C1328) * C123 +
           (C134 * C1319 + C1335 + C1335 + C153608 * C1329) * C122) *
              C153626 * C153527 * C1313) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153608 * C152) * C122 + C193 * C123 +
            C194 * C124 + C195 * C125 + C196 * C126) *
               C153626 * C153527 * C1223 -
           (C406 * C126 + C407 * C125 + C408 * C124 + C409 * C123 +
            (C134 * C329 + C374 + C374 + C153608 * C353) * C122) *
               C153626 * C153527 * C153563) *
              C1225 +
          ((C409 * C122 + C408 * C123 + C407 * C124 + C406 * C125 +
            C762 * C126) *
               C153626 * C153527 * C153563 -
           (C197 * C126 + C196 * C125 + C195 * C124 + C194 * C123 +
            C193 * C122) *
               C153626 * C153527 * C1223) *
              C1226 +
          ((C194 * C122 + C195 * C123 + C196 * C124 + C197 * C125 +
            C198 * C126) *
               C153626 * C153527 * C1223 -
           ((C134 * C753 + C759 + C759 + C153608 * C755) * C126 + C762 * C125 +
            C406 * C124 + C407 * C123 + C408 * C122) *
               C153626 * C153527 * C153563) *
              C1227)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153608 * C152) * C122 + C193 * C123 +
            C194 * C124 + C195 * C125 + C196 * C126) *
               C153626 * C535 -
           (C619 * C126 + C620 * C125 + C621 * C124 + C622 * C123 +
            (C134 * C542 + C587 + C587 + C153608 * C566) * C122) *
               C153626 * C536 +
           ((C134 * C543 + C588 + C588 + C153608 * C567) * C122 + C623 * C123 +
            C624 * C124 + C625 * C125 + C626 * C126) *
               C153626 * C537) *
              C1223 +
          (((C134 * C1057 + C1076 + C1076 + C153608 * C1069) * C122 +
            C1098 * C123 + C1099 * C124 + C1100 * C125 + C1101 * C126) *
               C153626 * C536 -
           (C406 * C126 + C407 * C125 + C408 * C124 + C409 * C123 +
            (C134 * C329 + C374 + C374 + C153608 * C353) * C122) *
               C153626 * C535 -
           ((C134 * C1457 + C1473 + C1473 + C153608 * C1467) * C126 +
            (C134 * C1458 + C1474 + C1474 + C153608 * C1468) * C125 +
            (C134 * C1459 + C1475 + C1475 + C153608 * C1469) * C124 +
            (C134 * C1460 + C1476 + C1476 + C153608 * C1470) * C123 +
            (C134 * C1461 + C1477 + C1477 + C153608 * C1471) * C122) *
               C153626 * C537) *
              C153563) *
         C153492) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
             C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
             C153887 * C354) *
                C2818 +
            (C2894 + C2895 + C2896) * C2819 + C2908 * C153874) *
               C153626 * C153527 * C1223 -
           (C3766 * C153874 + (C3215 + C3216 + C3217) * C2819 +
            (C2825 * C1319 + C3158 + C3158 + C153887 * C1329 + C2823 * C330 +
             C3159 + C3159 + C153913 * C354 + C2821 * C329 + C3160 + C3160 +
             C153925 * C353) *
                C2818) *
               C153626 * C153527 * C153563) *
              C1225 +
          (((C3217 + C3216 + C3215) * C2818 + (C3214 + C3213 + C3212) * C2819 +
            (C3773 + C3774 + C3775) * C153874) *
               C153626 * C153527 * C153563 -
           (C2909 * C153874 + (C2899 + C2898 + C2897) * C2819 +
            (C2896 + C2895 + C2894) * C2818) *
               C153626 * C153527 * C1223) *
              C1226 +
          ((C2908 * C2818 + (C2902 + C2901 + C2900) * C2819 +
            (C2903 + C2904 + C2905) * C153874) *
               C153626 * C153527 * C1223 -
           ((C2825 * C1315 + C3763 + C3763 + C153887 * C1325 + C2823 * C334 +
             C3764 + C3764 + C153913 * C358 + C2821 * C325 + C3765 + C3765 +
             C153925 * C349) *
                C153874 +
            (C3775 + C3774 + C3773) * C2819 + C3766 * C2818) *
               C153626 * C153527 * C153563) *
              C1227)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
            C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
            C153887 * C354) *
               C2818 +
           (C2894 + C2895 + C2896) * C2819 + C2908 * C153874) *
              C153626 * C153527 * C1310 -
          (C3766 * C153874 + (C3215 + C3216 + C3217) * C2819 +
           (C2825 * C1319 + C3158 + C3158 + C153887 * C1329 + C2823 * C330 +
            C3159 + C3159 + C153913 * C354 + C2821 * C329 + C3160 + C3160 +
            C153925 * C353) *
               C2818) *
              C153626 * C153527 * C1311 +
          ((C2821 * C330 + C3161 + C3161 + C153925 * C354 + C2823 * C1319 +
            C3162 + C3162 + C153913 * C1329 + C2825 * C3127 + C3163 + C3163 +
            C153887 * C3135) *
               C2818 +
           (C3218 + C3219 + C3220) * C2819 +
           (C3221 + C3222 + C3223) * C153874) *
              C153626 * C153527 * C1312 -
          ((C2825 * C4721 + C4731 + C4731 + C153887 * C4727 + C2823 * C3129 +
            C4732 + C4732 + C153913 * C3137 + C2821 * C1317 + C4733 + C4733 +
            C153925 * C1327) *
               C153874 +
           (C2825 * C4722 + C4734 + C4734 + C153887 * C4728 + C2823 * C3128 +
            C4735 + C4735 + C153913 * C3136 + C2821 * C1318 + C4736 + C4736 +
            C153925 * C1328) *
               C2819 +
           (C2825 * C4723 + C4737 + C4737 + C153887 * C4729 + C2823 * C3127 +
            C4738 + C4738 + C153913 * C3135 + C2821 * C1319 + C4739 + C4739 +
            C153925 * C1329) *
               C2818) *
              C153626 * C153527 * C1313) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
             C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
             C153887 * C354) *
                C2818 +
            (C2894 + C2895 + C2896) * C2819 + C2908 * C153874) *
               C153626 * C535 -
           (C4004 * C153874 + (C3529 + C3530 + C3531) * C2819 +
            (C2825 * C1892 + C3472 + C3472 + C153887 * C1902 + C2823 * C1057 +
             C3473 + C3473 + C153913 * C1069 + C2821 * C542 + C3474 + C3474 +
             C153925 * C566) *
                C2818) *
               C153626 * C536 +
           ((C2821 * C543 + C3475 + C3475 + C153925 * C567 + C2823 * C1461 +
             C3476 + C3476 + C153913 * C1471 + C2825 * C3441 + C3477 + C3477 +
             C153887 * C3449) *
                C2818 +
            (C3532 + C3533 + C3534) * C2819 +
            (C3535 + C3536 + C3537) * C153874) *
               C153626 * C537) *
              C1223 +
          (((C2821 * C1057 + C4316 + C4316 + C153925 * C1069 + C2823 * C1892 +
             C4317 + C4317 + C153913 * C1902 + C2825 * C4303 + C4318 + C4318 +
             C153887 * C4311) *
                C2818 +
            (C4352 + C4353 + C4354) * C2819 +
            (C4355 + C4356 + C4357) * C153874) *
               C153626 * C536 -
           (C3766 * C153874 + (C3215 + C3216 + C3217) * C2819 +
            (C2825 * C1319 + C3158 + C3158 + C153887 * C1329 + C2823 * C330 +
             C3159 + C3159 + C153913 * C354 + C2821 * C329 + C3160 + C3160 +
             C153925 * C353) *
                C2818) *
               C153626 * C535 -
           ((C2825 * C4957 + C4967 + C4967 + C153887 * C4963 + C2823 * C3443 +
             C4968 + C4968 + C153913 * C3451 + C2821 * C1459 + C4969 + C4969 +
             C153925 * C1469) *
                C153874 +
            (C2825 * C4958 + C4970 + C4970 + C153887 * C4964 + C2823 * C3442 +
             C4971 + C4971 + C153913 * C3450 + C2821 * C1460 + C4972 + C4972 +
             C153925 * C1470) *
                C2819 +
            (C2825 * C4959 + C4973 + C4973 + C153887 * C4965 + C2823 * C3441 +
             C4974 + C4974 + C153913 * C3449 + C2821 * C1461 + C4975 + C4975 +
             C153925 * C1471) *
                C2818) *
               C153626 * C537) *
              C153563) *
         C153492) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
             C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 + C24119 +
             C153887 * C354) *
                C153922 +
            (C24183 + C24184 + C24185) * C153903 + C24197 * C153874) *
               C153626 * C153527 * C1223 -
           (C25031 * C153874 + (C24492 + C24493 + C24494) * C153903 +
            (C24114 * C1319 + C24435 + C24435 + C153887 * C1329 +
             C24112 * C330 + C24436 + C24436 + C24105 * C354 + C24110 * C329 +
             C24437 + C24437 + C24104 * C353) *
                C153922) *
               C153626 * C153527 * C153563) *
              C1225 +
          (((C24494 + C24493 + C24492) * C153922 +
            (C24491 + C24490 + C24489) * C153903 +
            (C25038 + C25039 + C25040) * C153874) *
               C153626 * C153527 * C153563 -
           (C24198 * C153874 + (C24188 + C24187 + C24186) * C153903 +
            (C24185 + C24184 + C24183) * C153922) *
               C153626 * C153527 * C1223) *
              C1226 +
          ((C24197 * C153922 + (C24191 + C24190 + C24189) * C153903 +
            (C24192 + C24193 + C24194) * C153874) *
               C153626 * C153527 * C1223 -
           ((C24114 * C1315 + C25028 + C25028 + C153887 * C1325 +
             C24112 * C334 + C25029 + C25029 + C24105 * C358 + C24110 * C325 +
             C25030 + C25030 + C24104 * C349) *
                C153874 +
            (C25040 + C25039 + C25038) * C153903 + C25031 * C153922) *
               C153626 * C153527 * C153563) *
              C1227)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
            C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 + C24119 +
            C153887 * C354) *
               C153922 +
           (C24183 + C24184 + C24185) * C153903 + C24197 * C153874) *
              C153626 * C153527 * C1310 -
          (C25031 * C153874 + (C24492 + C24493 + C24494) * C153903 +
           (C24114 * C1319 + C24435 + C24435 + C153887 * C1329 + C24112 * C330 +
            C24436 + C24436 + C24105 * C354 + C24110 * C329 + C24437 + C24437 +
            C24104 * C353) *
               C153922) *
              C153626 * C153527 * C1311 +
          ((C24110 * C330 + C24438 + C24438 + C24104 * C354 + C24112 * C1319 +
            C24439 + C24439 + C24105 * C1329 + C24114 * C3127 + C24440 +
            C24440 + C153887 * C3135) *
               C153922 +
           (C24495 + C24496 + C24497) * C153903 +
           (C24498 + C24499 + C24500) * C153874) *
              C153626 * C153527 * C1312 -
          ((C24114 * C4721 + C25975 + C25975 + C153887 * C4727 +
            C24112 * C3129 + C25976 + C25976 + C24105 * C3137 + C24110 * C1317 +
            C25977 + C25977 + C24104 * C1327) *
               C153874 +
           (C24114 * C4722 + C25978 + C25978 + C153887 * C4728 +
            C24112 * C3128 + C25979 + C25979 + C24105 * C3136 + C24110 * C1318 +
            C25980 + C25980 + C24104 * C1328) *
               C153903 +
           (C24114 * C4723 + C25981 + C25981 + C153887 * C4729 +
            C24112 * C3127 + C25982 + C25982 + C24105 * C3135 + C24110 * C1319 +
            C25983 + C25983 + C24104 * C1329) *
               C153922) *
              C153626 * C153527 * C1313) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
             C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 + C24119 +
             C153887 * C354) *
                C153922 +
            (C24183 + C24184 + C24185) * C153903 + C24197 * C153874) *
               C153626 * C535 -
           (C25269 * C153874 + (C24794 + C24795 + C24796) * C153903 +
            (C24114 * C1892 + C24737 + C24737 + C153887 * C1902 +
             C24112 * C1057 + C24738 + C24738 + C24105 * C1069 + C24110 * C542 +
             C24739 + C24739 + C24104 * C566) *
                C153922) *
               C153626 * C536 +
           ((C24110 * C543 + C24740 + C24740 + C24104 * C567 + C24112 * C1461 +
             C24741 + C24741 + C24105 * C1471 + C24114 * C3441 + C24742 +
             C24742 + C153887 * C3449) *
                C153922 +
            (C24797 + C24798 + C24799) * C153903 +
            (C24800 + C24801 + C24802) * C153874) *
               C153626 * C537) *
              C1223 +
          (((C24110 * C1057 + C25569 + C25569 + C24104 * C1069 +
             C24112 * C1892 + C25570 + C25570 + C24105 * C1902 +
             C24114 * C4303 + C25571 + C25571 + C153887 * C4311) *
                C153922 +
            (C25605 + C25606 + C25607) * C153903 +
            (C25608 + C25609 + C25610) * C153874) *
               C153626 * C536 -
           (C25031 * C153874 + (C24492 + C24493 + C24494) * C153903 +
            (C24114 * C1319 + C24435 + C24435 + C153887 * C1329 +
             C24112 * C330 + C24436 + C24436 + C24105 * C354 + C24110 * C329 +
             C24437 + C24437 + C24104 * C353) *
                C153922) *
               C153626 * C535 -
           ((C24114 * C4957 + C26202 + C26202 + C153887 * C4963 +
             C24112 * C3443 + C26203 + C26203 + C24105 * C3451 +
             C24110 * C1459 + C26204 + C26204 + C24104 * C1469) *
                C153874 +
            (C24114 * C4958 + C26205 + C26205 + C153887 * C4964 +
             C24112 * C3442 + C26206 + C26206 + C24105 * C3450 +
             C24110 * C1460 + C26207 + C26207 + C24104 * C1470) *
                C153903 +
            (C24114 * C4959 + C26208 + C26208 + C153887 * C4965 +
             C24112 * C3441 + C26209 + C26209 + C24105 * C3449 +
             C24110 * C1461 + C26210 + C26210 + C24104 * C1471) *
                C153922) *
               C153626 * C537) *
              C153563) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C28350 * C136 + C28361 + C28361 + C28344 * C152 + C28352 * C329 +
            C28362 + C28362 + C28345 * C353 + C28354 * C330 + C28363 + C28363 +
            C28346 * C354 + C28356 * C1319 + C28364 + C28364 + C28347 * C1329 +
            C28358 * C3127 + C28365 + C28365 + C28348 * C3135) *
               C153454 * C153626 * C153527 * C1223 -
           (C28358 * C4723 + C28509 + C28509 + C28348 * C4729 + C28356 * C3127 +
            C28510 + C28510 + C28347 * C3135 + C28354 * C1319 + C28511 +
            C28511 + C28346 * C1329 + C28352 * C330 + C28512 + C28512 +
            C28345 * C354 + C28350 * C329 + C28513 + C28513 + C28344 * C353) *
               C153454 * C153626 * C153527 * C153563) *
              C1225 +
          ((C28350 * C328 + C28519 + C28519 + C28344 * C352 + C28352 * C331 +
            C28520 + C28520 + C28345 * C355 + C28354 * C1318 + C28521 + C28521 +
            C28346 * C1328 + C28356 * C3128 + C28522 + C28522 + C28347 * C3136 +
            C28358 * C4722 + C28523 + C28523 + C28348 * C4728) *
               C153454 * C153626 * C153527 * C153563 -
           (C28358 * C3128 + C28366 + C28366 + C28348 * C3136 + C28356 * C1318 +
            C28367 + C28367 + C28347 * C1328 + C28354 * C331 + C28368 + C28368 +
            C28346 * C355 + C28352 * C328 + C28369 + C28369 + C28345 * C352 +
            C28350 * C137 + C28370 + C28370 + C28344 * C153) *
               C153454 * C153626 * C153527 * C1223) *
              C1226 +
          ((C28350 * C138 + C28371 + C28371 + C28344 * C154 + C28352 * C327 +
            C28372 + C28372 + C28345 * C351 + C28354 * C332 + C28373 + C28373 +
            C28346 * C356 + C28356 * C1317 + C28374 + C28374 + C28347 * C1327 +
            C28358 * C3129 + C28375 + C28375 + C28348 * C3137) *
               C153454 * C153626 * C153527 * C1223 -
           (C28358 * C4721 + C28799 + C28799 + C28348 * C4727 + C28356 * C3129 +
            C28800 + C28800 + C28347 * C3137 + C28354 * C1317 + C28801 +
            C28801 + C28346 * C1327 + C28352 * C332 + C28802 + C28802 +
            C28345 * C356 + C28350 * C327 + C28803 + C28803 + C28344 * C351) *
               C153454 * C153626 * C153527 * C153563) *
              C1227)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((C28350 * C136 + C28361 + C28361 + C28344 * C152 + C28352 * C329 +
           C28362 + C28362 + C28345 * C353 + C28354 * C330 + C28363 + C28363 +
           C28346 * C354 + C28356 * C1319 + C28364 + C28364 + C28347 * C1329 +
           C28358 * C3127 + C28365 + C28365 + C28348 * C3135) *
              C153454 * C153626 * C153527 * C1310 -
          (C28358 * C4723 + C28509 + C28509 + C28348 * C4729 + C28356 * C3127 +
           C28510 + C28510 + C28347 * C3135 + C28354 * C1319 + C28511 + C28511 +
           C28346 * C1329 + C28352 * C330 + C28512 + C28512 + C28345 * C354 +
           C28350 * C329 + C28513 + C28513 + C28344 * C353) *
              C153454 * C153626 * C153527 * C1311 +
          (C28350 * C330 + C28514 + C28514 + C28344 * C354 + C28352 * C1319 +
           C28515 + C28515 + C28345 * C1329 + C28354 * C3127 + C28516 + C28516 +
           C28346 * C3135 + C28356 * C4723 + C28517 + C28517 + C28347 * C4729 +
           C28358 * C28502 + C28518 + C28518 + C28348 * C28506) *
              C153454 * C153626 * C153527 * C1312 -
          (C28358 * C29312 + C29316 + C29316 + C28348 * C29314 +
           C28356 * C28502 + C29317 + C29317 + C28347 * C28506 +
           C28354 * C4723 + C29318 + C29318 + C28346 * C4729 + C28352 * C3127 +
           C29319 + C29319 + C28345 * C3135 + C28350 * C1319 + C29320 + C29320 +
           C28344 * C1329) *
              C153454 * C153626 * C153527 * C1313) *
         C153492) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C28350 * C136 + C28361 + C28361 + C28344 * C152 + C28352 * C329 +
            C28362 + C28362 + C28345 * C353 + C28354 * C330 + C28363 + C28363 +
            C28346 * C354 + C28356 * C1319 + C28364 + C28364 + C28347 * C1329 +
            C28358 * C3127 + C28365 + C28365 + C28348 * C3135) *
               C153454 * C153626 * C535 -
           (C28358 * C5703 + C28657 + C28657 + C28348 * C5709 + C28356 * C4303 +
            C28658 + C28658 + C28347 * C4311 + C28354 * C1892 + C28659 +
            C28659 + C28346 * C1902 + C28352 * C1057 + C28660 + C28660 +
            C28345 * C1069 + C28350 * C542 + C28661 + C28661 + C28344 * C566) *
               C153454 * C153626 * C536 +
           (C28350 * C543 + C28662 + C28662 + C28344 * C567 + C28352 * C1461 +
            C28663 + C28663 + C28345 * C1471 + C28354 * C3441 + C28664 +
            C28664 + C28346 * C3449 + C28356 * C4959 + C28665 + C28665 +
            C28347 * C4965 + C28358 * C28650 + C28666 + C28666 +
            C28348 * C28654) *
               C153454 * C153626 * C537) *
              C1223 +
          ((C28350 * C1057 + C29099 + C29099 + C28344 * C1069 + C28352 * C1892 +
            C29100 + C29100 + C28345 * C1902 + C28354 * C4303 + C29101 +
            C29101 + C28346 * C4311 + C28356 * C5703 + C29102 + C29102 +
            C28347 * C5709 + C28358 * C29092 + C29103 + C29103 +
            C28348 * C29096) *
               C153454 * C153626 * C536 -
           (C28358 * C4723 + C28509 + C28509 + C28348 * C4729 + C28356 * C3127 +
            C28510 + C28510 + C28347 * C3135 + C28354 * C1319 + C28511 +
            C28511 + C28346 * C1329 + C28352 * C330 + C28512 + C28512 +
            C28345 * C354 + C28350 * C329 + C28513 + C28513 + C28344 * C353) *
               C153454 * C153626 * C535 -
           (C28358 * C29442 + C29446 + C29446 + C28348 * C29444 +
            C28356 * C28650 + C29447 + C29447 + C28347 * C28654 +
            C28354 * C4959 + C29448 + C29448 + C28346 * C4965 + C28352 * C3441 +
            C29449 + C29449 + C28345 * C3449 + C28350 * C1461 + C29450 +
            C29450 + C28344 * C1471) *
               C153454 * C153626 * C537) *
              C153563) *
         C153492) /
            (p * q * std::sqrt(p + q));
    d2ee[368] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C122 + C193 * C123 +
             C194 * C124 + C195 * C125 + C196 * C126) *
                C153626 * C153838 -
            (C619 * C126 + C620 * C125 + C621 * C124 + C622 * C123 +
             (C134 * C542 + C587 + C587 + C153608 * C566) * C122) *
                C153626 * C153591) *
               C1223 +
           (((C134 * C1057 + C1076 + C1076 + C153608 * C1069) * C122 +
             C1098 * C123 + C1099 * C124 + C1100 * C125 + C1101 * C126) *
                C153626 * C153591 -
            (C406 * C126 + C407 * C125 + C408 * C124 + C409 * C123 +
             (C134 * C329 + C374 + C374 + C153608 * C353) * C122) *
                C153626 * C153838) *
               C153563) *
              C153829 +
          (((C622 * C122 + C621 * C123 + C620 * C124 + C619 * C125 +
             C895 * C126) *
                C153626 * C153591 -
            (C197 * C126 + C196 * C125 + C195 * C124 + C194 * C123 +
             C193 * C122) *
                C153626 * C153838) *
               C1223 +
           ((C409 * C122 + C408 * C123 + C407 * C124 + C406 * C125 +
             C762 * C126) *
                C153626 * C153838 -
            ((C134 * C1062 + C1089 + C1089 + C153608 * C1074) * C126 +
             C1101 * C125 + C1100 * C124 + C1099 * C123 + C1098 * C122) *
                C153626 * C153591) *
               C153563) *
              C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
              C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
              C153887 * C354) *
                 C2818 +
             (C2894 + C2895 + C2896) * C2819 + C2908 * C153874) *
                C153626 * C153838 -
            (C4004 * C153874 + (C3529 + C3530 + C3531) * C2819 +
             (C2825 * C1892 + C3472 + C3472 + C153887 * C1902 + C2823 * C1057 +
              C3473 + C3473 + C153913 * C1069 + C2821 * C542 + C3474 + C3474 +
              C153925 * C566) *
                 C2818) *
                C153626 * C153591) *
               C1223 +
           (((C2821 * C1057 + C4316 + C4316 + C153925 * C1069 + C2823 * C1892 +
              C4317 + C4317 + C153913 * C1902 + C2825 * C4303 + C4318 + C4318 +
              C153887 * C4311) *
                 C2818 +
             (C4352 + C4353 + C4354) * C2819 +
             (C4355 + C4356 + C4357) * C153874) *
                C153626 * C153591 -
            (C3766 * C153874 + (C3215 + C3216 + C3217) * C2819 +
             (C2825 * C1319 + C3158 + C3158 + C153887 * C1329 + C2823 * C330 +
              C3159 + C3159 + C153913 * C354 + C2821 * C329 + C3160 + C3160 +
              C153925 * C353) *
                 C2818) *
                C153626 * C153838) *
               C153563) *
              C153829 +
          ((((C3531 + C3530 + C3529) * C2818 + (C3528 + C3527 + C3526) * C2819 +
             (C4011 + C4012 + C4013) * C153874) *
                C153626 * C153591 -
            (C2909 * C153874 + (C2899 + C2898 + C2897) * C2819 +
             (C2896 + C2895 + C2894) * C2818) *
                C153626 * C153838) *
               C1223 +
           (((C3217 + C3216 + C3215) * C2818 + (C3214 + C3213 + C3212) * C2819 +
             (C3773 + C3774 + C3775) * C153874) *
                C153626 * C153838 -
            ((C2825 * C4306 + C4337 + C4337 + C153887 * C4314 + C2823 * C1889 +
              C4338 + C4338 + C153913 * C1899 + C2821 * C1060 + C4339 + C4339 +
              C153925 * C1072) *
                 C153874 +
             (C4357 + C4356 + C4355) * C2819 +
             (C4354 + C4353 + C4352) * C2818) *
                C153626 * C153591) *
               C153563) *
              C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
              C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 +
              C24119 + C153887 * C354) *
                 C153922 +
             (C24183 + C24184 + C24185) * C153903 + C24197 * C153874) *
                C153626 * C153838 -
            (C25269 * C153874 + (C24794 + C24795 + C24796) * C153903 +
             (C24114 * C1892 + C24737 + C24737 + C153887 * C1902 +
              C24112 * C1057 + C24738 + C24738 + C24105 * C1069 +
              C24110 * C542 + C24739 + C24739 + C24104 * C566) *
                 C153922) *
                C153626 * C153591) *
               C1223 +
           (((C24110 * C1057 + C25569 + C25569 + C24104 * C1069 +
              C24112 * C1892 + C25570 + C25570 + C24105 * C1902 +
              C24114 * C4303 + C25571 + C25571 + C153887 * C4311) *
                 C153922 +
             (C25605 + C25606 + C25607) * C153903 +
             (C25608 + C25609 + C25610) * C153874) *
                C153626 * C153591 -
            (C25031 * C153874 + (C24492 + C24493 + C24494) * C153903 +
             (C24114 * C1319 + C24435 + C24435 + C153887 * C1329 +
              C24112 * C330 + C24436 + C24436 + C24105 * C354 + C24110 * C329 +
              C24437 + C24437 + C24104 * C353) *
                 C153922) *
                C153626 * C153838) *
               C153563) *
              C153829 +
          ((((C24796 + C24795 + C24794) * C153922 +
             (C24793 + C24792 + C24791) * C153903 +
             (C25276 + C25277 + C25278) * C153874) *
                C153626 * C153591 -
            (C24198 * C153874 + (C24188 + C24187 + C24186) * C153903 +
             (C24185 + C24184 + C24183) * C153922) *
                C153626 * C153838) *
               C1223 +
           (((C24494 + C24493 + C24492) * C153922 +
             (C24491 + C24490 + C24489) * C153903 +
             (C25038 + C25039 + C25040) * C153874) *
                C153626 * C153838 -
            ((C24114 * C4306 + C25590 + C25590 + C153887 * C4314 +
              C24112 * C1889 + C25591 + C25591 + C24105 * C1899 +
              C24110 * C1060 + C25592 + C25592 + C24104 * C1072) *
                 C153874 +
             (C25610 + C25609 + C25608) * C153903 +
             (C25607 + C25606 + C25605) * C153922) *
                C153626 * C153591) *
               C153563) *
              C153498)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C28350 * C136 + C28361 + C28361 + C28344 * C152 + C28352 * C329 +
             C28362 + C28362 + C28345 * C353 + C28354 * C330 + C28363 + C28363 +
             C28346 * C354 + C28356 * C1319 + C28364 + C28364 + C28347 * C1329 +
             C28358 * C3127 + C28365 + C28365 + C28348 * C3135) *
                C153454 * C153626 * C153838 -
            (C28358 * C5703 + C28657 + C28657 + C28348 * C5709 +
             C28356 * C4303 + C28658 + C28658 + C28347 * C4311 +
             C28354 * C1892 + C28659 + C28659 + C28346 * C1902 +
             C28352 * C1057 + C28660 + C28660 + C28345 * C1069 + C28350 * C542 +
             C28661 + C28661 + C28344 * C566) *
                C153454 * C153626 * C153591) *
               C1223 +
           ((C28350 * C1057 + C29099 + C29099 + C28344 * C1069 +
             C28352 * C1892 + C29100 + C29100 + C28345 * C1902 +
             C28354 * C4303 + C29101 + C29101 + C28346 * C4311 +
             C28356 * C5703 + C29102 + C29102 + C28347 * C5709 +
             C28358 * C29092 + C29103 + C29103 + C28348 * C29096) *
                C153454 * C153626 * C153591 -
            (C28358 * C4723 + C28509 + C28509 + C28348 * C4729 +
             C28356 * C3127 + C28510 + C28510 + C28347 * C3135 +
             C28354 * C1319 + C28511 + C28511 + C28346 * C1329 + C28352 * C330 +
             C28512 + C28512 + C28345 * C354 + C28350 * C329 + C28513 + C28513 +
             C28344 * C353) *
                C153454 * C153626 * C153838) *
               C153563) *
              C153829 +
          (((C28350 * C541 + C28667 + C28667 + C28344 * C565 + C28352 * C1058 +
             C28668 + C28668 + C28345 * C1070 + C28354 * C1891 + C28669 +
             C28669 + C28346 * C1901 + C28356 * C4304 + C28670 + C28670 +
             C28347 * C4312 + C28358 * C5702 + C28671 + C28671 +
             C28348 * C5708) *
                C153454 * C153626 * C153591 -
            (C28358 * C3128 + C28366 + C28366 + C28348 * C3136 +
             C28356 * C1318 + C28367 + C28367 + C28347 * C1328 + C28354 * C331 +
             C28368 + C28368 + C28346 * C355 + C28352 * C328 + C28369 + C28369 +
             C28345 * C352 + C28350 * C137 + C28370 + C28370 + C28344 * C153) *
                C153454 * C153626 * C153838) *
               C1223 +
           ((C28350 * C328 + C28519 + C28519 + C28344 * C352 + C28352 * C331 +
             C28520 + C28520 + C28345 * C355 + C28354 * C1318 + C28521 +
             C28521 + C28346 * C1328 + C28356 * C3128 + C28522 + C28522 +
             C28347 * C3136 + C28358 * C4722 + C28523 + C28523 +
             C28348 * C4728) *
                C153454 * C153626 * C153838 -
            (C28358 * C29093 + C29104 + C29104 + C28348 * C29097 +
             C28356 * C5702 + C29105 + C29105 + C28347 * C5708 +
             C28354 * C4304 + C29106 + C29106 + C28346 * C4312 +
             C28352 * C1891 + C29107 + C29107 + C28345 * C1901 +
             C28350 * C1058 + C29108 + C29108 + C28344 * C1070) *
                C153454 * C153626 * C153591) *
               C153563) *
              C153498)) /
            (p * q * std::sqrt(p + q));
    d2ee[369] +=
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153608 * C152) * C122 + C193 * C123 +
            C194 * C124 + C195 * C125 + C196 * C126) *
               C153626 * C153527 * C1223 -
           (C406 * C126 + C407 * C125 + C408 * C124 + C409 * C123 +
            (C134 * C329 + C374 + C374 + C153608 * C353) * C122) *
               C153626 * C153527 * C153563) *
              C1225 +
          ((C409 * C122 + C408 * C123 + C407 * C124 + C406 * C125 +
            C762 * C126) *
               C153626 * C153527 * C153563 -
           (C197 * C126 + C196 * C125 + C195 * C124 + C194 * C123 +
            C193 * C122) *
               C153626 * C153527 * C1223) *
              C1226 +
          ((C194 * C122 + C195 * C123 + C196 * C124 + C197 * C125 +
            C198 * C126) *
               C153626 * C153527 * C1223 -
           ((C134 * C753 + C759 + C759 + C153608 * C755) * C126 + C762 * C125 +
            C406 * C124 + C407 * C123 + C408 * C122) *
               C153626 * C153527 * C153563) *
              C1227)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C136 + C161 + C161 + C153608 * C152) * C122 + C193 * C123 +
           C194 * C124 + C195 * C125 + C196 * C126) *
              C153626 * C153527 * C1310 -
          (C406 * C126 + C407 * C125 + C408 * C124 + C409 * C123 +
           (C134 * C329 + C374 + C374 + C153608 * C353) * C122) *
              C153626 * C153527 * C1311 +
          ((C134 * C330 + C375 + C375 + C153608 * C354) * C122 + C410 * C123 +
           C411 * C124 + C412 * C125 + C413 * C126) *
              C153626 * C153527 * C1312 -
          ((C134 * C1315 + C1331 + C1331 + C153608 * C1325) * C126 +
           (C134 * C1316 + C1332 + C1332 + C153608 * C1326) * C125 +
           (C134 * C1317 + C1333 + C1333 + C153608 * C1327) * C124 +
           (C134 * C1318 + C1334 + C1334 + C153608 * C1328) * C123 +
           (C134 * C1319 + C1335 + C1335 + C153608 * C1329) * C122) *
              C153626 * C153527 * C1313) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
             C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
             C153887 * C354) *
                C2818 +
            (C2894 + C2895 + C2896) * C2819 + C2908 * C153874) *
               C153626 * C153527 * C1223 -
           (C3766 * C153874 + (C3215 + C3216 + C3217) * C2819 +
            (C2825 * C1319 + C3158 + C3158 + C153887 * C1329 + C2823 * C330 +
             C3159 + C3159 + C153913 * C354 + C2821 * C329 + C3160 + C3160 +
             C153925 * C353) *
                C2818) *
               C153626 * C153527 * C153563) *
              C1225 +
          (((C3217 + C3216 + C3215) * C2818 + (C3214 + C3213 + C3212) * C2819 +
            (C3773 + C3774 + C3775) * C153874) *
               C153626 * C153527 * C153563 -
           (C2909 * C153874 + (C2899 + C2898 + C2897) * C2819 +
            (C2896 + C2895 + C2894) * C2818) *
               C153626 * C153527 * C1223) *
              C1226 +
          ((C2908 * C2818 + (C2902 + C2901 + C2900) * C2819 +
            (C2903 + C2904 + C2905) * C153874) *
               C153626 * C153527 * C1223 -
           ((C2825 * C1315 + C3763 + C3763 + C153887 * C1325 + C2823 * C334 +
             C3764 + C3764 + C153913 * C358 + C2821 * C325 + C3765 + C3765 +
             C153925 * C349) *
                C153874 +
            (C3775 + C3774 + C3773) * C2819 + C3766 * C2818) *
               C153626 * C153527 * C153563) *
              C1227)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
            C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
            C153887 * C354) *
               C2818 +
           (C2894 + C2895 + C2896) * C2819 + C2908 * C153874) *
              C153626 * C153527 * C1310 -
          (C3766 * C153874 + (C3215 + C3216 + C3217) * C2819 +
           (C2825 * C1319 + C3158 + C3158 + C153887 * C1329 + C2823 * C330 +
            C3159 + C3159 + C153913 * C354 + C2821 * C329 + C3160 + C3160 +
            C153925 * C353) *
               C2818) *
              C153626 * C153527 * C1311 +
          ((C2821 * C330 + C3161 + C3161 + C153925 * C354 + C2823 * C1319 +
            C3162 + C3162 + C153913 * C1329 + C2825 * C3127 + C3163 + C3163 +
            C153887 * C3135) *
               C2818 +
           (C3218 + C3219 + C3220) * C2819 +
           (C3221 + C3222 + C3223) * C153874) *
              C153626 * C153527 * C1312 -
          ((C2825 * C4721 + C4731 + C4731 + C153887 * C4727 + C2823 * C3129 +
            C4732 + C4732 + C153913 * C3137 + C2821 * C1317 + C4733 + C4733 +
            C153925 * C1327) *
               C153874 +
           (C2825 * C4722 + C4734 + C4734 + C153887 * C4728 + C2823 * C3128 +
            C4735 + C4735 + C153913 * C3136 + C2821 * C1318 + C4736 + C4736 +
            C153925 * C1328) *
               C2819 +
           (C2825 * C4723 + C4737 + C4737 + C153887 * C4729 + C2823 * C3127 +
            C4738 + C4738 + C153913 * C3135 + C2821 * C1319 + C4739 + C4739 +
            C153925 * C1329) *
               C2818) *
              C153626 * C153527 * C1313) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
             C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 + C24119 +
             C153887 * C354) *
                C153922 +
            (C24183 + C24184 + C24185) * C153903 + C24197 * C153874) *
               C153626 * C153527 * C1223 -
           (C25031 * C153874 + (C24492 + C24493 + C24494) * C153903 +
            (C24114 * C1319 + C24435 + C24435 + C153887 * C1329 +
             C24112 * C330 + C24436 + C24436 + C24105 * C354 + C24110 * C329 +
             C24437 + C24437 + C24104 * C353) *
                C153922) *
               C153626 * C153527 * C153563) *
              C1225 +
          (((C24494 + C24493 + C24492) * C153922 +
            (C24491 + C24490 + C24489) * C153903 +
            (C25038 + C25039 + C25040) * C153874) *
               C153626 * C153527 * C153563 -
           (C24198 * C153874 + (C24188 + C24187 + C24186) * C153903 +
            (C24185 + C24184 + C24183) * C153922) *
               C153626 * C153527 * C1223) *
              C1226 +
          ((C24197 * C153922 + (C24191 + C24190 + C24189) * C153903 +
            (C24192 + C24193 + C24194) * C153874) *
               C153626 * C153527 * C1223 -
           ((C24114 * C1315 + C25028 + C25028 + C153887 * C1325 +
             C24112 * C334 + C25029 + C25029 + C24105 * C358 + C24110 * C325 +
             C25030 + C25030 + C24104 * C349) *
                C153874 +
            (C25040 + C25039 + C25038) * C153903 + C25031 * C153922) *
               C153626 * C153527 * C153563) *
              C1227)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
            C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 + C24119 +
            C153887 * C354) *
               C153922 +
           (C24183 + C24184 + C24185) * C153903 + C24197 * C153874) *
              C153626 * C153527 * C1310 -
          (C25031 * C153874 + (C24492 + C24493 + C24494) * C153903 +
           (C24114 * C1319 + C24435 + C24435 + C153887 * C1329 + C24112 * C330 +
            C24436 + C24436 + C24105 * C354 + C24110 * C329 + C24437 + C24437 +
            C24104 * C353) *
               C153922) *
              C153626 * C153527 * C1311 +
          ((C24110 * C330 + C24438 + C24438 + C24104 * C354 + C24112 * C1319 +
            C24439 + C24439 + C24105 * C1329 + C24114 * C3127 + C24440 +
            C24440 + C153887 * C3135) *
               C153922 +
           (C24495 + C24496 + C24497) * C153903 +
           (C24498 + C24499 + C24500) * C153874) *
              C153626 * C153527 * C1312 -
          ((C24114 * C4721 + C25975 + C25975 + C153887 * C4727 +
            C24112 * C3129 + C25976 + C25976 + C24105 * C3137 + C24110 * C1317 +
            C25977 + C25977 + C24104 * C1327) *
               C153874 +
           (C24114 * C4722 + C25978 + C25978 + C153887 * C4728 +
            C24112 * C3128 + C25979 + C25979 + C24105 * C3136 + C24110 * C1318 +
            C25980 + C25980 + C24104 * C1328) *
               C153903 +
           (C24114 * C4723 + C25981 + C25981 + C153887 * C4729 +
            C24112 * C3127 + C25982 + C25982 + C24105 * C3135 + C24110 * C1319 +
            C25983 + C25983 + C24104 * C1329) *
               C153922) *
              C153626 * C153527 * C1313) *
         C153492) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((C28350 * C136 + C28361 + C28361 + C28344 * C152 + C28352 * C329 +
            C28362 + C28362 + C28345 * C353 + C28354 * C330 + C28363 + C28363 +
            C28346 * C354 + C28356 * C1319 + C28364 + C28364 + C28347 * C1329 +
            C28358 * C3127 + C28365 + C28365 + C28348 * C3135) *
               C153454 * C153626 * C153527 * C1223 -
           (C28358 * C4723 + C28509 + C28509 + C28348 * C4729 + C28356 * C3127 +
            C28510 + C28510 + C28347 * C3135 + C28354 * C1319 + C28511 +
            C28511 + C28346 * C1329 + C28352 * C330 + C28512 + C28512 +
            C28345 * C354 + C28350 * C329 + C28513 + C28513 + C28344 * C353) *
               C153454 * C153626 * C153527 * C153563) *
              C1225 +
          ((C28350 * C328 + C28519 + C28519 + C28344 * C352 + C28352 * C331 +
            C28520 + C28520 + C28345 * C355 + C28354 * C1318 + C28521 + C28521 +
            C28346 * C1328 + C28356 * C3128 + C28522 + C28522 + C28347 * C3136 +
            C28358 * C4722 + C28523 + C28523 + C28348 * C4728) *
               C153454 * C153626 * C153527 * C153563 -
           (C28358 * C3128 + C28366 + C28366 + C28348 * C3136 + C28356 * C1318 +
            C28367 + C28367 + C28347 * C1328 + C28354 * C331 + C28368 + C28368 +
            C28346 * C355 + C28352 * C328 + C28369 + C28369 + C28345 * C352 +
            C28350 * C137 + C28370 + C28370 + C28344 * C153) *
               C153454 * C153626 * C153527 * C1223) *
              C1226 +
          ((C28350 * C138 + C28371 + C28371 + C28344 * C154 + C28352 * C327 +
            C28372 + C28372 + C28345 * C351 + C28354 * C332 + C28373 + C28373 +
            C28346 * C356 + C28356 * C1317 + C28374 + C28374 + C28347 * C1327 +
            C28358 * C3129 + C28375 + C28375 + C28348 * C3137) *
               C153454 * C153626 * C153527 * C1223 -
           (C28358 * C4721 + C28799 + C28799 + C28348 * C4727 + C28356 * C3129 +
            C28800 + C28800 + C28347 * C3137 + C28354 * C1317 + C28801 +
            C28801 + C28346 * C1327 + C28352 * C332 + C28802 + C28802 +
            C28345 * C356 + C28350 * C327 + C28803 + C28803 + C28344 * C351) *
               C153454 * C153626 * C153527 * C153563) *
              C1227)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((C28350 * C136 + C28361 + C28361 + C28344 * C152 + C28352 * C329 +
           C28362 + C28362 + C28345 * C353 + C28354 * C330 + C28363 + C28363 +
           C28346 * C354 + C28356 * C1319 + C28364 + C28364 + C28347 * C1329 +
           C28358 * C3127 + C28365 + C28365 + C28348 * C3135) *
              C153454 * C153626 * C153527 * C1310 -
          (C28358 * C4723 + C28509 + C28509 + C28348 * C4729 + C28356 * C3127 +
           C28510 + C28510 + C28347 * C3135 + C28354 * C1319 + C28511 + C28511 +
           C28346 * C1329 + C28352 * C330 + C28512 + C28512 + C28345 * C354 +
           C28350 * C329 + C28513 + C28513 + C28344 * C353) *
              C153454 * C153626 * C153527 * C1311 +
          (C28350 * C330 + C28514 + C28514 + C28344 * C354 + C28352 * C1319 +
           C28515 + C28515 + C28345 * C1329 + C28354 * C3127 + C28516 + C28516 +
           C28346 * C3135 + C28356 * C4723 + C28517 + C28517 + C28347 * C4729 +
           C28358 * C28502 + C28518 + C28518 + C28348 * C28506) *
              C153454 * C153626 * C153527 * C1312 -
          (C28358 * C29312 + C29316 + C29316 + C28348 * C29314 +
           C28356 * C28502 + C29317 + C29317 + C28347 * C28506 +
           C28354 * C4723 + C29318 + C29318 + C28346 * C4729 + C28352 * C3127 +
           C29319 + C29319 + C28345 * C3135 + C28350 * C1319 + C29320 + C29320 +
           C28344 * C1329) *
              C153454 * C153626 * C153527 * C1313) *
         C153492) /
            (p * q * std::sqrt(p + q));
    d2ee[370] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153608 * C152) * C122 + C193 * C123 +
             C194 * C124 + C195 * C125 + C196 * C126) *
                C153626 * C2030 -
            (C619 * C126 + C620 * C125 + C621 * C124 + C622 * C123 +
             (C134 * C542 + C587 + C587 + C153608 * C566) * C122) *
                C153626 * C153591) *
               C153837 +
           (((C134 * C1057 + C1076 + C1076 + C153608 * C1069) * C122 +
             C1098 * C123 + C1099 * C124 + C1100 * C125 + C1101 * C126) *
                C153626 * C153591 -
            (C406 * C126 + C407 * C125 + C408 * C124 + C409 * C123 +
             (C134 * C329 + C374 + C374 + C153608 * C353) * C122) *
                C153626 * C2030) *
               C153563) *
              C153829 +
          (((C622 * C122 + C621 * C123 + C620 * C124 + C619 * C125 +
             C895 * C126) *
                C153626 * C153591 -
            (C197 * C126 + C196 * C125 + C195 * C124 + C194 * C123 +
             C193 * C122) *
                C153626 * C2030) *
               C153837 +
           ((C409 * C122 + C408 * C123 + C407 * C124 + C406 * C125 +
             C762 * C126) *
                C153626 * C2030 -
            ((C134 * C1062 + C1089 + C1089 + C153608 * C1074) * C126 +
             C1101 * C125 + C1100 * C124 + C1099 * C123 + C1098 * C122) *
                C153626 * C153591) *
               C153563) *
              C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
              C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
              C153887 * C354) *
                 C2818 +
             (C2894 + C2895 + C2896) * C2819 + C2908 * C153874) *
                C153626 * C2030 -
            (C4004 * C153874 + (C3529 + C3530 + C3531) * C2819 +
             (C2825 * C1892 + C3472 + C3472 + C153887 * C1902 + C2823 * C1057 +
              C3473 + C3473 + C153913 * C1069 + C2821 * C542 + C3474 + C3474 +
              C153925 * C566) *
                 C2818) *
                C153626 * C153591) *
               C153837 +
           (((C2821 * C1057 + C4316 + C4316 + C153925 * C1069 + C2823 * C1892 +
              C4317 + C4317 + C153913 * C1902 + C2825 * C4303 + C4318 + C4318 +
              C153887 * C4311) *
                 C2818 +
             (C4352 + C4353 + C4354) * C2819 +
             (C4355 + C4356 + C4357) * C153874) *
                C153626 * C153591 -
            (C3766 * C153874 + (C3215 + C3216 + C3217) * C2819 +
             (C2825 * C1319 + C3158 + C3158 + C153887 * C1329 + C2823 * C330 +
              C3159 + C3159 + C153913 * C354 + C2821 * C329 + C3160 + C3160 +
              C153925 * C353) *
                 C2818) *
                C153626 * C2030) *
               C153563) *
              C153829 +
          ((((C3531 + C3530 + C3529) * C2818 + (C3528 + C3527 + C3526) * C2819 +
             (C4011 + C4012 + C4013) * C153874) *
                C153626 * C153591 -
            (C2909 * C153874 + (C2899 + C2898 + C2897) * C2819 +
             (C2896 + C2895 + C2894) * C2818) *
                C153626 * C2030) *
               C153837 +
           (((C3217 + C3216 + C3215) * C2818 + (C3214 + C3213 + C3212) * C2819 +
             (C3773 + C3774 + C3775) * C153874) *
                C153626 * C2030 -
            ((C2825 * C4306 + C4337 + C4337 + C153887 * C4314 + C2823 * C1889 +
              C4338 + C4338 + C153913 * C1899 + C2821 * C1060 + C4339 + C4339 +
              C153925 * C1072) *
                 C153874 +
             (C4357 + C4356 + C4355) * C2819 +
             (C4354 + C4353 + C4352) * C2818) *
                C153626 * C153591) *
               C153563) *
              C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
              C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 +
              C24119 + C153887 * C354) *
                 C153922 +
             (C24183 + C24184 + C24185) * C153903 + C24197 * C153874) *
                C153626 * C2030 -
            (C25269 * C153874 + (C24794 + C24795 + C24796) * C153903 +
             (C24114 * C1892 + C24737 + C24737 + C153887 * C1902 +
              C24112 * C1057 + C24738 + C24738 + C24105 * C1069 +
              C24110 * C542 + C24739 + C24739 + C24104 * C566) *
                 C153922) *
                C153626 * C153591) *
               C153837 +
           (((C24110 * C1057 + C25569 + C25569 + C24104 * C1069 +
              C24112 * C1892 + C25570 + C25570 + C24105 * C1902 +
              C24114 * C4303 + C25571 + C25571 + C153887 * C4311) *
                 C153922 +
             (C25605 + C25606 + C25607) * C153903 +
             (C25608 + C25609 + C25610) * C153874) *
                C153626 * C153591 -
            (C25031 * C153874 + (C24492 + C24493 + C24494) * C153903 +
             (C24114 * C1319 + C24435 + C24435 + C153887 * C1329 +
              C24112 * C330 + C24436 + C24436 + C24105 * C354 + C24110 * C329 +
              C24437 + C24437 + C24104 * C353) *
                 C153922) *
                C153626 * C2030) *
               C153563) *
              C153829 +
          ((((C24796 + C24795 + C24794) * C153922 +
             (C24793 + C24792 + C24791) * C153903 +
             (C25276 + C25277 + C25278) * C153874) *
                C153626 * C153591 -
            (C24198 * C153874 + (C24188 + C24187 + C24186) * C153903 +
             (C24185 + C24184 + C24183) * C153922) *
                C153626 * C2030) *
               C153837 +
           (((C24494 + C24493 + C24492) * C153922 +
             (C24491 + C24490 + C24489) * C153903 +
             (C25038 + C25039 + C25040) * C153874) *
                C153626 * C2030 -
            ((C24114 * C4306 + C25590 + C25590 + C153887 * C4314 +
              C24112 * C1889 + C25591 + C25591 + C24105 * C1899 +
              C24110 * C1060 + C25592 + C25592 + C24104 * C1072) *
                 C153874 +
             (C25610 + C25609 + C25608) * C153903 +
             (C25607 + C25606 + C25605) * C153922) *
                C153626 * C153591) *
               C153563) *
              C153498)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C28350 * C136 + C28361 + C28361 + C28344 * C152 + C28352 * C329 +
             C28362 + C28362 + C28345 * C353 + C28354 * C330 + C28363 + C28363 +
             C28346 * C354 + C28356 * C1319 + C28364 + C28364 + C28347 * C1329 +
             C28358 * C3127 + C28365 + C28365 + C28348 * C3135) *
                C153454 * C153626 * C2030 -
            (C28358 * C5703 + C28657 + C28657 + C28348 * C5709 +
             C28356 * C4303 + C28658 + C28658 + C28347 * C4311 +
             C28354 * C1892 + C28659 + C28659 + C28346 * C1902 +
             C28352 * C1057 + C28660 + C28660 + C28345 * C1069 + C28350 * C542 +
             C28661 + C28661 + C28344 * C566) *
                C153454 * C153626 * C153591) *
               C153837 +
           ((C28350 * C1057 + C29099 + C29099 + C28344 * C1069 +
             C28352 * C1892 + C29100 + C29100 + C28345 * C1902 +
             C28354 * C4303 + C29101 + C29101 + C28346 * C4311 +
             C28356 * C5703 + C29102 + C29102 + C28347 * C5709 +
             C28358 * C29092 + C29103 + C29103 + C28348 * C29096) *
                C153454 * C153626 * C153591 -
            (C28358 * C4723 + C28509 + C28509 + C28348 * C4729 +
             C28356 * C3127 + C28510 + C28510 + C28347 * C3135 +
             C28354 * C1319 + C28511 + C28511 + C28346 * C1329 + C28352 * C330 +
             C28512 + C28512 + C28345 * C354 + C28350 * C329 + C28513 + C28513 +
             C28344 * C353) *
                C153454 * C153626 * C2030) *
               C153563) *
              C153829 +
          (((C28350 * C541 + C28667 + C28667 + C28344 * C565 + C28352 * C1058 +
             C28668 + C28668 + C28345 * C1070 + C28354 * C1891 + C28669 +
             C28669 + C28346 * C1901 + C28356 * C4304 + C28670 + C28670 +
             C28347 * C4312 + C28358 * C5702 + C28671 + C28671 +
             C28348 * C5708) *
                C153454 * C153626 * C153591 -
            (C28358 * C3128 + C28366 + C28366 + C28348 * C3136 +
             C28356 * C1318 + C28367 + C28367 + C28347 * C1328 + C28354 * C331 +
             C28368 + C28368 + C28346 * C355 + C28352 * C328 + C28369 + C28369 +
             C28345 * C352 + C28350 * C137 + C28370 + C28370 + C28344 * C153) *
                C153454 * C153626 * C2030) *
               C153837 +
           ((C28350 * C328 + C28519 + C28519 + C28344 * C352 + C28352 * C331 +
             C28520 + C28520 + C28345 * C355 + C28354 * C1318 + C28521 +
             C28521 + C28346 * C1328 + C28356 * C3128 + C28522 + C28522 +
             C28347 * C3136 + C28358 * C4722 + C28523 + C28523 +
             C28348 * C4728) *
                C153454 * C153626 * C2030 -
            (C28358 * C29093 + C29104 + C29104 + C28348 * C29097 +
             C28356 * C5702 + C29105 + C29105 + C28347 * C5708 +
             C28354 * C4304 + C29106 + C29106 + C28346 * C4312 +
             C28352 * C1891 + C29107 + C29107 + C28345 * C1901 +
             C28350 * C1058 + C29108 + C29108 + C28344 * C1070) *
                C153454 * C153626 * C153591) *
               C153563) *
              C153498)) /
            (p * q * std::sqrt(p + q));
    d2ee[371] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153608 * C152) * C122 + C193 * C123 +
            C194 * C124 + C195 * C125 + C196 * C126) *
               C153626 * C153910 -
           (C619 * C126 + C620 * C125 + C621 * C124 + C622 * C123 +
            (C134 * C542 + C587 + C587 + C153608 * C566) * C122) *
               C153626 * C153911 +
           ((C134 * C543 + C588 + C588 + C153608 * C567) * C122 + C623 * C123 +
            C624 * C124 + C625 * C125 + C626 * C126) *
               C153626 * C2546) *
              C153837 +
          (((C134 * C1057 + C1076 + C1076 + C153608 * C1069) * C122 +
            C1098 * C123 + C1099 * C124 + C1100 * C125 + C1101 * C126) *
               C153626 * C153911 -
           (C406 * C126 + C407 * C125 + C408 * C124 + C409 * C123 +
            (C134 * C329 + C374 + C374 + C153608 * C353) * C122) *
               C153626 * C153910 -
           ((C134 * C1457 + C1473 + C1473 + C153608 * C1467) * C126 +
            (C134 * C1458 + C1474 + C1474 + C153608 * C1468) * C125 +
            (C134 * C1459 + C1475 + C1475 + C153608 * C1469) * C124 +
            (C134 * C1460 + C1476 + C1476 + C153608 * C1470) * C123 +
            (C134 * C1461 + C1477 + C1477 + C153608 * C1471) * C122) *
               C153626 * C2546) *
              C153563) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
             C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
             C153887 * C354) *
                C2818 +
            (C2894 + C2895 + C2896) * C2819 + C2908 * C153874) *
               C153626 * C153910 -
           (C4004 * C153874 + (C3529 + C3530 + C3531) * C2819 +
            (C2825 * C1892 + C3472 + C3472 + C153887 * C1902 + C2823 * C1057 +
             C3473 + C3473 + C153913 * C1069 + C2821 * C542 + C3474 + C3474 +
             C153925 * C566) *
                C2818) *
               C153626 * C153911 +
           ((C2821 * C543 + C3475 + C3475 + C153925 * C567 + C2823 * C1461 +
             C3476 + C3476 + C153913 * C1471 + C2825 * C3441 + C3477 + C3477 +
             C153887 * C3449) *
                C2818 +
            (C3532 + C3533 + C3534) * C2819 +
            (C3535 + C3536 + C3537) * C153874) *
               C153626 * C2546) *
              C153837 +
          (((C2821 * C1057 + C4316 + C4316 + C153925 * C1069 + C2823 * C1892 +
             C4317 + C4317 + C153913 * C1902 + C2825 * C4303 + C4318 + C4318 +
             C153887 * C4311) *
                C2818 +
            (C4352 + C4353 + C4354) * C2819 +
            (C4355 + C4356 + C4357) * C153874) *
               C153626 * C153911 -
           (C3766 * C153874 + (C3215 + C3216 + C3217) * C2819 +
            (C2825 * C1319 + C3158 + C3158 + C153887 * C1329 + C2823 * C330 +
             C3159 + C3159 + C153913 * C354 + C2821 * C329 + C3160 + C3160 +
             C153925 * C353) *
                C2818) *
               C153626 * C153910 -
           ((C2825 * C4957 + C4967 + C4967 + C153887 * C4963 + C2823 * C3443 +
             C4968 + C4968 + C153913 * C3451 + C2821 * C1459 + C4969 + C4969 +
             C153925 * C1469) *
                C153874 +
            (C2825 * C4958 + C4970 + C4970 + C153887 * C4964 + C2823 * C3442 +
             C4971 + C4971 + C153913 * C3450 + C2821 * C1460 + C4972 + C4972 +
             C153925 * C1470) *
                C2819 +
            (C2825 * C4959 + C4973 + C4973 + C153887 * C4965 + C2823 * C3441 +
             C4974 + C4974 + C153913 * C3449 + C2821 * C1461 + C4975 + C4975 +
             C153925 * C1471) *
                C2818) *
               C153626 * C2546) *
              C153563) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
             C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 + C24119 +
             C153887 * C354) *
                C153922 +
            (C24183 + C24184 + C24185) * C153903 + C24197 * C153874) *
               C153626 * C153910 -
           (C25269 * C153874 + (C24794 + C24795 + C24796) * C153903 +
            (C24114 * C1892 + C24737 + C24737 + C153887 * C1902 +
             C24112 * C1057 + C24738 + C24738 + C24105 * C1069 + C24110 * C542 +
             C24739 + C24739 + C24104 * C566) *
                C153922) *
               C153626 * C153911 +
           ((C24110 * C543 + C24740 + C24740 + C24104 * C567 + C24112 * C1461 +
             C24741 + C24741 + C24105 * C1471 + C24114 * C3441 + C24742 +
             C24742 + C153887 * C3449) *
                C153922 +
            (C24797 + C24798 + C24799) * C153903 +
            (C24800 + C24801 + C24802) * C153874) *
               C153626 * C2546) *
              C153837 +
          (((C24110 * C1057 + C25569 + C25569 + C24104 * C1069 +
             C24112 * C1892 + C25570 + C25570 + C24105 * C1902 +
             C24114 * C4303 + C25571 + C25571 + C153887 * C4311) *
                C153922 +
            (C25605 + C25606 + C25607) * C153903 +
            (C25608 + C25609 + C25610) * C153874) *
               C153626 * C153911 -
           (C25031 * C153874 + (C24492 + C24493 + C24494) * C153903 +
            (C24114 * C1319 + C24435 + C24435 + C153887 * C1329 +
             C24112 * C330 + C24436 + C24436 + C24105 * C354 + C24110 * C329 +
             C24437 + C24437 + C24104 * C353) *
                C153922) *
               C153626 * C153910 -
           ((C24114 * C4957 + C26202 + C26202 + C153887 * C4963 +
             C24112 * C3443 + C26203 + C26203 + C24105 * C3451 +
             C24110 * C1459 + C26204 + C26204 + C24104 * C1469) *
                C153874 +
            (C24114 * C4958 + C26205 + C26205 + C153887 * C4964 +
             C24112 * C3442 + C26206 + C26206 + C24105 * C3450 +
             C24110 * C1460 + C26207 + C26207 + C24104 * C1470) *
                C153903 +
            (C24114 * C4959 + C26208 + C26208 + C153887 * C4965 +
             C24112 * C3441 + C26209 + C26209 + C24105 * C3449 +
             C24110 * C1461 + C26210 + C26210 + C24104 * C1471) *
                C153922) *
               C153626 * C2546) *
              C153563) *
         C153492) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C28350 * C136 + C28361 + C28361 + C28344 * C152 + C28352 * C329 +
            C28362 + C28362 + C28345 * C353 + C28354 * C330 + C28363 + C28363 +
            C28346 * C354 + C28356 * C1319 + C28364 + C28364 + C28347 * C1329 +
            C28358 * C3127 + C28365 + C28365 + C28348 * C3135) *
               C153454 * C153626 * C153910 -
           (C28358 * C5703 + C28657 + C28657 + C28348 * C5709 + C28356 * C4303 +
            C28658 + C28658 + C28347 * C4311 + C28354 * C1892 + C28659 +
            C28659 + C28346 * C1902 + C28352 * C1057 + C28660 + C28660 +
            C28345 * C1069 + C28350 * C542 + C28661 + C28661 + C28344 * C566) *
               C153454 * C153626 * C153911 +
           (C28350 * C543 + C28662 + C28662 + C28344 * C567 + C28352 * C1461 +
            C28663 + C28663 + C28345 * C1471 + C28354 * C3441 + C28664 +
            C28664 + C28346 * C3449 + C28356 * C4959 + C28665 + C28665 +
            C28347 * C4965 + C28358 * C28650 + C28666 + C28666 +
            C28348 * C28654) *
               C153454 * C153626 * C2546) *
              C153837 +
          ((C28350 * C1057 + C29099 + C29099 + C28344 * C1069 + C28352 * C1892 +
            C29100 + C29100 + C28345 * C1902 + C28354 * C4303 + C29101 +
            C29101 + C28346 * C4311 + C28356 * C5703 + C29102 + C29102 +
            C28347 * C5709 + C28358 * C29092 + C29103 + C29103 +
            C28348 * C29096) *
               C153454 * C153626 * C153911 -
           (C28358 * C4723 + C28509 + C28509 + C28348 * C4729 + C28356 * C3127 +
            C28510 + C28510 + C28347 * C3135 + C28354 * C1319 + C28511 +
            C28511 + C28346 * C1329 + C28352 * C330 + C28512 + C28512 +
            C28345 * C354 + C28350 * C329 + C28513 + C28513 + C28344 * C353) *
               C153454 * C153626 * C153910 -
           (C28358 * C29442 + C29446 + C29446 + C28348 * C29444 +
            C28356 * C28650 + C29447 + C29447 + C28347 * C28654 +
            C28354 * C4959 + C29448 + C29448 + C28346 * C4965 + C28352 * C3441 +
            C29449 + C29449 + C28345 * C3449 + C28350 * C1461 + C29450 +
            C29450 + C28344 * C1471) *
               C153454 * C153626 * C2546) *
              C153563) *
         C153492) /
            (p * q * std::sqrt(p + q));
    d2ee[372] +=
        (-std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153608 * C152) * C122 + C193 * C123 +
            C194 * C124 + C195 * C125 + C196 * C126) *
               C153626 * C2030 -
           (C619 * C126 + C620 * C125 + C621 * C124 + C622 * C123 +
            (C134 * C542 + C587 + C587 + C153608 * C566) * C122) *
               C153626 * C153591) *
              C320 +
          (((C134 * C1057 + C1076 + C1076 + C153608 * C1069) * C122 +
            C1098 * C123 + C1099 * C124 + C1100 * C125 + C1101 * C126) *
               C153626 * C153591 -
           (C406 * C126 + C407 * C125 + C408 * C124 + C409 * C123 +
            (C134 * C329 + C374 + C374 + C153608 * C353) * C122) *
               C153626 * C2030) *
              C321 +
          (((C134 * C330 + C375 + C375 + C153608 * C354) * C122 + C410 * C123 +
            C411 * C124 + C412 * C125 + C413 * C126) *
               C153626 * C2030 -
           ((C134 * C1888 + C1904 + C1904 + C153608 * C1898) * C126 +
            (C134 * C1889 + C1905 + C1905 + C153608 * C1899) * C125 +
            (C134 * C1890 + C1906 + C1906 + C153608 * C1900) * C124 +
            (C134 * C1891 + C1907 + C1907 + C153608 * C1901) * C123 +
            (C134 * C1892 + C1908 + C1908 + C153608 * C1902) * C122) *
               C153626 * C153591) *
              C322) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153608 * C152) * C122 + C193 * C123 +
            C194 * C124 + C195 * C125 + C196 * C126) *
               C153626 * C2030 -
           (C619 * C126 + C620 * C125 + C621 * C124 + C622 * C123 +
            (C134 * C542 + C587 + C587 + C153608 * C566) * C122) *
               C153626 * C153591) *
              C153511 * C1225 +
          ((C622 * C122 + C621 * C123 + C620 * C124 + C619 * C125 +
            C895 * C126) *
               C153626 * C153591 -
           (C197 * C126 + C196 * C125 + C195 * C124 + C194 * C123 +
            C193 * C122) *
               C153626 * C2030) *
              C153511 * C1226 +
          ((C194 * C122 + C195 * C123 + C196 * C124 + C197 * C125 +
            C198 * C126) *
               C153626 * C2030 -
           ((C134 * C886 + C892 + C892 + C153608 * C888) * C126 + C895 * C125 +
            C619 * C124 + C620 * C123 + C621 * C122) *
               C153626 * C153591) *
              C153511 * C1227)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C136 + C161 + C161 + C153608 * C152) * C122 + C193 * C123 +
           C194 * C124 + C195 * C125 + C196 * C126) *
              C153626 * C2236 -
          (C619 * C126 + C620 * C125 + C621 * C124 + C622 * C123 +
           (C134 * C542 + C587 + C587 + C153608 * C566) * C122) *
              C153626 * C2237 +
          ((C134 * C543 + C588 + C588 + C153608 * C567) * C122 + C623 * C123 +
           C624 * C124 + C625 * C125 + C626 * C126) *
              C153626 * C2238 -
          ((C134 * C2240 + C2256 + C2256 + C153608 * C2250) * C126 +
           (C134 * C2241 + C2257 + C2257 + C153608 * C2251) * C125 +
           (C134 * C2242 + C2258 + C2258 + C153608 * C2252) * C124 +
           (C134 * C2243 + C2259 + C2259 + C153608 * C2253) * C123 +
           (C134 * C2244 + C2260 + C2260 + C153608 * C2254) * C122) *
              C153626 * C2239) *
         C153511 * C153492) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
             C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
             C153887 * C354) *
                C2818 +
            (C2894 + C2895 + C2896) * C2819 + C2908 * C153874) *
               C153626 * C2030 -
           (C4004 * C153874 + (C3529 + C3530 + C3531) * C2819 +
            (C2825 * C1892 + C3472 + C3472 + C153887 * C1902 + C2823 * C1057 +
             C3473 + C3473 + C153913 * C1069 + C2821 * C542 + C3474 + C3474 +
             C153925 * C566) *
                C2818) *
               C153626 * C153591) *
              C153511 * C1225 +
          (((C3531 + C3530 + C3529) * C2818 + (C3528 + C3527 + C3526) * C2819 +
            (C4011 + C4012 + C4013) * C153874) *
               C153626 * C153591 -
           (C2909 * C153874 + (C2899 + C2898 + C2897) * C2819 +
            (C2896 + C2895 + C2894) * C2818) *
               C153626 * C2030) *
              C153511 * C1226 +
          ((C2908 * C2818 + (C2902 + C2901 + C2900) * C2819 +
            (C2903 + C2904 + C2905) * C153874) *
               C153626 * C2030 -
           ((C2825 * C1888 + C4001 + C4001 + C153887 * C1898 + C2823 * C1061 +
             C4002 + C4002 + C153913 * C1073 + C2821 * C538 + C4003 + C4003 +
             C153925 * C562) *
                C153874 +
            (C4013 + C4012 + C4011) * C2819 + C4004 * C2818) *
               C153626 * C153591) *
              C153511 * C1227)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
             C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
             C153887 * C354) *
                C2818 +
            (C2894 + C2895 + C2896) * C2819 + C2908 * C153874) *
               C153626 * C2030 -
           (C4004 * C153874 + (C3529 + C3530 + C3531) * C2819 +
            (C2825 * C1892 + C3472 + C3472 + C153887 * C1902 + C2823 * C1057 +
             C3473 + C3473 + C153913 * C1069 + C2821 * C542 + C3474 + C3474 +
             C153925 * C566) *
                C2818) *
               C153626 * C153591) *
              C320 +
          (((C2821 * C1057 + C4316 + C4316 + C153925 * C1069 + C2823 * C1892 +
             C4317 + C4317 + C153913 * C1902 + C2825 * C4303 + C4318 + C4318 +
             C153887 * C4311) *
                C2818 +
            (C4352 + C4353 + C4354) * C2819 +
            (C4355 + C4356 + C4357) * C153874) *
               C153626 * C153591 -
           (C3766 * C153874 + (C3215 + C3216 + C3217) * C2819 +
            (C2825 * C1319 + C3158 + C3158 + C153887 * C1329 + C2823 * C330 +
             C3159 + C3159 + C153913 * C354 + C2821 * C329 + C3160 + C3160 +
             C153925 * C353) *
                C2818) *
               C153626 * C2030) *
              C321 +
          (((C2821 * C330 + C3161 + C3161 + C153925 * C354 + C2823 * C1319 +
             C3162 + C3162 + C153913 * C1329 + C2825 * C3127 + C3163 + C3163 +
             C153887 * C3135) *
                C2818 +
            (C3218 + C3219 + C3220) * C2819 +
            (C3221 + C3222 + C3223) * C153874) *
               C153626 * C2030 -
           ((C2825 * C5701 + C5711 + C5711 + C153887 * C5707 + C2823 * C4305 +
             C5712 + C5712 + C153913 * C4313 + C2821 * C1890 + C5713 + C5713 +
             C153925 * C1900) *
                C153874 +
            (C2825 * C5702 + C5714 + C5714 + C153887 * C5708 + C2823 * C4304 +
             C5715 + C5715 + C153913 * C4312 + C2821 * C1891 + C5716 + C5716 +
             C153925 * C1901) *
                C2819 +
            (C2825 * C5703 + C5717 + C5717 + C153887 * C5709 + C2823 * C4303 +
             C5718 + C5718 + C153913 * C4311 + C2821 * C1892 + C5719 + C5719 +
             C153925 * C1902) *
                C2818) *
               C153626 * C153591) *
              C322) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
            C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
            C153887 * C354) *
               C2818 +
           (C2894 + C2895 + C2896) * C2819 + C2908 * C153874) *
              C153626 * C2236 -
          (C4004 * C153874 + (C3529 + C3530 + C3531) * C2819 +
           (C2825 * C1892 + C3472 + C3472 + C153887 * C1902 + C2823 * C1057 +
            C3473 + C3473 + C153913 * C1069 + C2821 * C542 + C3474 + C3474 +
            C153925 * C566) *
               C2818) *
              C153626 * C2237 +
          ((C2821 * C543 + C3475 + C3475 + C153925 * C567 + C2823 * C1461 +
            C3476 + C3476 + C153913 * C1471 + C2825 * C3441 + C3477 + C3477 +
            C153887 * C3449) *
               C2818 +
           (C3532 + C3533 + C3534) * C2819 +
           (C3535 + C3536 + C3537) * C153874) *
              C153626 * C2238 -
          ((C2825 * C6301 + C6320 + C6320 + C153887 * C6313 + C2823 * C6302 +
            C6321 + C6321 + C153913 * C6314 + C2821 * C2242 + C6322 + C6322 +
            C153925 * C2252) *
               C153874 +
           (C2825 * C6303 + C6323 + C6323 + C153887 * C6315 + C2823 * C6304 +
            C6324 + C6324 + C153913 * C6316 + C2821 * C2243 + C6325 + C6325 +
            C153925 * C2253) *
               C2819 +
           (C2825 * C6305 + C6326 + C6326 + C153887 * C6317 + C2823 * C6306 +
            C6327 + C6327 + C153913 * C6318 + C2821 * C2244 + C6328 + C6328 +
            C153925 * C2254) *
               C2818) *
              C153626 * C2239) *
         C153511 * C153492) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
             C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 + C24119 +
             C153887 * C354) *
                C153922 +
            (C24183 + C24184 + C24185) * C153903 + C24197 * C153874) *
               C153626 * C2030 -
           (C25269 * C153874 + (C24794 + C24795 + C24796) * C153903 +
            (C24114 * C1892 + C24737 + C24737 + C153887 * C1902 +
             C24112 * C1057 + C24738 + C24738 + C24105 * C1069 + C24110 * C542 +
             C24739 + C24739 + C24104 * C566) *
                C153922) *
               C153626 * C153591) *
              C153511 * C1225 +
          (((C24796 + C24795 + C24794) * C153922 +
            (C24793 + C24792 + C24791) * C153903 +
            (C25276 + C25277 + C25278) * C153874) *
               C153626 * C153591 -
           (C24198 * C153874 + (C24188 + C24187 + C24186) * C153903 +
            (C24185 + C24184 + C24183) * C153922) *
               C153626 * C2030) *
              C153511 * C1226 +
          ((C24197 * C153922 + (C24191 + C24190 + C24189) * C153903 +
            (C24192 + C24193 + C24194) * C153874) *
               C153626 * C2030 -
           ((C24114 * C1888 + C25266 + C25266 + C153887 * C1898 +
             C24112 * C1061 + C25267 + C25267 + C24105 * C1073 + C24110 * C538 +
             C25268 + C25268 + C24104 * C562) *
                C153874 +
            (C25278 + C25277 + C25276) * C153903 + C25269 * C153922) *
               C153626 * C153591) *
              C153511 * C1227)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
             C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 + C24119 +
             C153887 * C354) *
                C153922 +
            (C24183 + C24184 + C24185) * C153903 + C24197 * C153874) *
               C153626 * C2030 -
           (C25269 * C153874 + (C24794 + C24795 + C24796) * C153903 +
            (C24114 * C1892 + C24737 + C24737 + C153887 * C1902 +
             C24112 * C1057 + C24738 + C24738 + C24105 * C1069 + C24110 * C542 +
             C24739 + C24739 + C24104 * C566) *
                C153922) *
               C153626 * C153591) *
              C320 +
          (((C24110 * C1057 + C25569 + C25569 + C24104 * C1069 +
             C24112 * C1892 + C25570 + C25570 + C24105 * C1902 +
             C24114 * C4303 + C25571 + C25571 + C153887 * C4311) *
                C153922 +
            (C25605 + C25606 + C25607) * C153903 +
            (C25608 + C25609 + C25610) * C153874) *
               C153626 * C153591 -
           (C25031 * C153874 + (C24492 + C24493 + C24494) * C153903 +
            (C24114 * C1319 + C24435 + C24435 + C153887 * C1329 +
             C24112 * C330 + C24436 + C24436 + C24105 * C354 + C24110 * C329 +
             C24437 + C24437 + C24104 * C353) *
                C153922) *
               C153626 * C2030) *
              C321 +
          (((C24110 * C330 + C24438 + C24438 + C24104 * C354 + C24112 * C1319 +
             C24439 + C24439 + C24105 * C1329 + C24114 * C3127 + C24440 +
             C24440 + C153887 * C3135) *
                C153922 +
            (C24495 + C24496 + C24497) * C153903 +
            (C24498 + C24499 + C24500) * C153874) *
               C153626 * C2030 -
           ((C24114 * C5701 + C26937 + C26937 + C153887 * C5707 +
             C24112 * C4305 + C26938 + C26938 + C24105 * C4313 +
             C24110 * C1890 + C26939 + C26939 + C24104 * C1900) *
                C153874 +
            (C24114 * C5702 + C26940 + C26940 + C153887 * C5708 +
             C24112 * C4304 + C26941 + C26941 + C24105 * C4312 +
             C24110 * C1891 + C26942 + C26942 + C24104 * C1901) *
                C153903 +
            (C24114 * C5703 + C26943 + C26943 + C153887 * C5709 +
             C24112 * C4303 + C26944 + C26944 + C24105 * C4311 +
             C24110 * C1892 + C26945 + C26945 + C24104 * C1902) *
                C153922) *
               C153626 * C153591) *
              C322) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
            C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 + C24119 +
            C153887 * C354) *
               C153922 +
           (C24183 + C24184 + C24185) * C153903 + C24197 * C153874) *
              C153626 * C2236 -
          (C25269 * C153874 + (C24794 + C24795 + C24796) * C153903 +
           (C24114 * C1892 + C24737 + C24737 + C153887 * C1902 +
            C24112 * C1057 + C24738 + C24738 + C24105 * C1069 + C24110 * C542 +
            C24739 + C24739 + C24104 * C566) *
               C153922) *
              C153626 * C2237 +
          ((C24110 * C543 + C24740 + C24740 + C24104 * C567 + C24112 * C1461 +
            C24741 + C24741 + C24105 * C1471 + C24114 * C3441 + C24742 +
            C24742 + C153887 * C3449) *
               C153922 +
           (C24797 + C24798 + C24799) * C153903 +
           (C24800 + C24801 + C24802) * C153874) *
              C153626 * C2238 -
          ((C24114 * C6301 + C27528 + C27528 + C153887 * C6313 +
            C24112 * C6302 + C27529 + C27529 + C24105 * C6314 + C24110 * C2242 +
            C27530 + C27530 + C24104 * C2252) *
               C153874 +
           (C24114 * C6303 + C27531 + C27531 + C153887 * C6315 +
            C24112 * C6304 + C27532 + C27532 + C24105 * C6316 + C24110 * C2243 +
            C27533 + C27533 + C24104 * C2253) *
               C153903 +
           (C24114 * C6305 + C27534 + C27534 + C153887 * C6317 +
            C24112 * C6306 + C27535 + C27535 + C24105 * C6318 + C24110 * C2244 +
            C27536 + C27536 + C24104 * C2254) *
               C153922) *
              C153626 * C2239) *
         C153511 * C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C28350 * C136 + C28361 + C28361 + C28344 * C152 + C28352 * C329 +
            C28362 + C28362 + C28345 * C353 + C28354 * C330 + C28363 + C28363 +
            C28346 * C354 + C28356 * C1319 + C28364 + C28364 + C28347 * C1329 +
            C28358 * C3127 + C28365 + C28365 + C28348 * C3135) *
               C153454 * C153626 * C2030 -
           (C28358 * C5703 + C28657 + C28657 + C28348 * C5709 + C28356 * C4303 +
            C28658 + C28658 + C28347 * C4311 + C28354 * C1892 + C28659 +
            C28659 + C28346 * C1902 + C28352 * C1057 + C28660 + C28660 +
            C28345 * C1069 + C28350 * C542 + C28661 + C28661 + C28344 * C566) *
               C153454 * C153626 * C153591) *
              C153511 * C1225 +
          ((C28350 * C541 + C28667 + C28667 + C28344 * C565 + C28352 * C1058 +
            C28668 + C28668 + C28345 * C1070 + C28354 * C1891 + C28669 +
            C28669 + C28346 * C1901 + C28356 * C4304 + C28670 + C28670 +
            C28347 * C4312 + C28358 * C5702 + C28671 + C28671 +
            C28348 * C5708) *
               C153454 * C153626 * C153591 -
           (C28358 * C3128 + C28366 + C28366 + C28348 * C3136 + C28356 * C1318 +
            C28367 + C28367 + C28347 * C1328 + C28354 * C331 + C28368 + C28368 +
            C28346 * C355 + C28352 * C328 + C28369 + C28369 + C28345 * C352 +
            C28350 * C137 + C28370 + C28370 + C28344 * C153) *
               C153454 * C153626 * C2030) *
              C153511 * C1226 +
          ((C28350 * C138 + C28371 + C28371 + C28344 * C154 + C28352 * C327 +
            C28372 + C28372 + C28345 * C351 + C28354 * C332 + C28373 + C28373 +
            C28346 * C356 + C28356 * C1317 + C28374 + C28374 + C28347 * C1327 +
            C28358 * C3129 + C28375 + C28375 + C28348 * C3137) *
               C153454 * C153626 * C2030 -
           (C28358 * C5701 + C28926 + C28926 + C28348 * C5707 + C28356 * C4305 +
            C28927 + C28927 + C28347 * C4313 + C28354 * C1890 + C28928 +
            C28928 + C28346 * C1900 + C28352 * C1059 + C28929 + C28929 +
            C28345 * C1071 + C28350 * C540 + C28930 + C28930 + C28344 * C564) *
               C153454 * C153626 * C153591) *
              C153511 * C1227)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C28350 * C136 + C28361 + C28361 + C28344 * C152 + C28352 * C329 +
            C28362 + C28362 + C28345 * C353 + C28354 * C330 + C28363 + C28363 +
            C28346 * C354 + C28356 * C1319 + C28364 + C28364 + C28347 * C1329 +
            C28358 * C3127 + C28365 + C28365 + C28348 * C3135) *
               C153454 * C153626 * C2030 -
           (C28358 * C5703 + C28657 + C28657 + C28348 * C5709 + C28356 * C4303 +
            C28658 + C28658 + C28347 * C4311 + C28354 * C1892 + C28659 +
            C28659 + C28346 * C1902 + C28352 * C1057 + C28660 + C28660 +
            C28345 * C1069 + C28350 * C542 + C28661 + C28661 + C28344 * C566) *
               C153454 * C153626 * C153591) *
              C320 +
          ((C28350 * C1057 + C29099 + C29099 + C28344 * C1069 + C28352 * C1892 +
            C29100 + C29100 + C28345 * C1902 + C28354 * C4303 + C29101 +
            C29101 + C28346 * C4311 + C28356 * C5703 + C29102 + C29102 +
            C28347 * C5709 + C28358 * C29092 + C29103 + C29103 +
            C28348 * C29096) *
               C153454 * C153626 * C153591 -
           (C28358 * C4723 + C28509 + C28509 + C28348 * C4729 + C28356 * C3127 +
            C28510 + C28510 + C28347 * C3135 + C28354 * C1319 + C28511 +
            C28511 + C28346 * C1329 + C28352 * C330 + C28512 + C28512 +
            C28345 * C354 + C28350 * C329 + C28513 + C28513 + C28344 * C353) *
               C153454 * C153626 * C2030) *
              C321 +
          ((C28350 * C330 + C28514 + C28514 + C28344 * C354 + C28352 * C1319 +
            C28515 + C28515 + C28345 * C1329 + C28354 * C3127 + C28516 +
            C28516 + C28346 * C3135 + C28356 * C4723 + C28517 + C28517 +
            C28347 * C4729 + C28358 * C28502 + C28518 + C28518 +
            C28348 * C28506) *
               C153454 * C153626 * C2030 -
           (C28358 * C29856 + C29860 + C29860 + C28348 * C29858 +
            C28356 * C29092 + C29861 + C29861 + C28347 * C29096 +
            C28354 * C5703 + C29862 + C29862 + C28346 * C5709 + C28352 * C4303 +
            C29863 + C29863 + C28345 * C4311 + C28350 * C1892 + C29864 +
            C29864 + C28344 * C1902) *
               C153454 * C153626 * C153591) *
              C322) *
         C153492) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((C28350 * C136 + C28361 + C28361 + C28344 * C152 + C28352 * C329 +
           C28362 + C28362 + C28345 * C353 + C28354 * C330 + C28363 + C28363 +
           C28346 * C354 + C28356 * C1319 + C28364 + C28364 + C28347 * C1329 +
           C28358 * C3127 + C28365 + C28365 + C28348 * C3135) *
              C153454 * C153626 * C2236 -
          (C28358 * C5703 + C28657 + C28657 + C28348 * C5709 + C28356 * C4303 +
           C28658 + C28658 + C28347 * C4311 + C28354 * C1892 + C28659 + C28659 +
           C28346 * C1902 + C28352 * C1057 + C28660 + C28660 + C28345 * C1069 +
           C28350 * C542 + C28661 + C28661 + C28344 * C566) *
              C153454 * C153626 * C2237 +
          (C28350 * C543 + C28662 + C28662 + C28344 * C567 + C28352 * C1461 +
           C28663 + C28663 + C28345 * C1471 + C28354 * C3441 + C28664 + C28664 +
           C28346 * C3449 + C28356 * C4959 + C28665 + C28665 + C28347 * C4965 +
           C28358 * C28650 + C28666 + C28666 + C28348 * C28654) *
              C153454 * C153626 * C2238 -
          (C28358 * C30190 + C30197 + C30197 + C28348 * C30194 +
           C28356 * C30191 + C30198 + C30198 + C28347 * C30195 +
           C28354 * C6305 + C30199 + C30199 + C28346 * C6317 + C28352 * C6306 +
           C30200 + C30200 + C28345 * C6318 + C28350 * C2244 + C30201 + C30201 +
           C28344 * C2254) *
              C153454 * C153626 * C2239) *
         C153511 * C153492) /
            (p * q * std::sqrt(p + q));
    d2ee[373] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153608 * C152) * C122 + C193 * C123 +
            C194 * C124 + C195 * C125 + C196 * C126) *
               C153626 * C153910 -
           (C619 * C126 + C620 * C125 + C621 * C124 + C622 * C123 +
            (C134 * C542 + C587 + C587 + C153608 * C566) * C122) *
               C153626 * C153911 +
           ((C134 * C543 + C588 + C588 + C153608 * C567) * C122 + C623 * C123 +
            C624 * C124 + C625 * C125 + C626 * C126) *
               C153626 * C2546) *
              C153511 * C153829 +
          ((C622 * C122 + C621 * C123 + C620 * C124 + C619 * C125 +
            C895 * C126) *
               C153626 * C153911 -
           (C197 * C126 + C196 * C125 + C195 * C124 + C194 * C123 +
            C193 * C122) *
               C153626 * C153910 -
           ((C134 * C549 + C602 + C602 + C153608 * C573) * C126 + C626 * C125 +
            C625 * C124 + C624 * C123 + C623 * C122) *
               C153626 * C2546) *
              C153511 * C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
             C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
             C153887 * C354) *
                C2818 +
            (C2894 + C2895 + C2896) * C2819 + C2908 * C153874) *
               C153626 * C153910 -
           (C4004 * C153874 + (C3529 + C3530 + C3531) * C2819 +
            (C2825 * C1892 + C3472 + C3472 + C153887 * C1902 + C2823 * C1057 +
             C3473 + C3473 + C153913 * C1069 + C2821 * C542 + C3474 + C3474 +
             C153925 * C566) *
                C2818) *
               C153626 * C153911 +
           ((C2821 * C543 + C3475 + C3475 + C153925 * C567 + C2823 * C1461 +
             C3476 + C3476 + C153913 * C1471 + C2825 * C3441 + C3477 + C3477 +
             C153887 * C3449) *
                C2818 +
            (C3532 + C3533 + C3534) * C2819 +
            (C3535 + C3536 + C3537) * C153874) *
               C153626 * C2546) *
              C153511 * C153829 +
          (((C3531 + C3530 + C3529) * C2818 + (C3528 + C3527 + C3526) * C2819 +
            (C4011 + C4012 + C4013) * C153874) *
               C153626 * C153911 -
           (C2909 * C153874 + (C2899 + C2898 + C2897) * C2819 +
            (C2896 + C2895 + C2894) * C2818) *
               C153626 * C153910 -
           ((C2825 * C3444 + C3499 + C3499 + C153887 * C3452 + C2823 * C1458 +
             C3500 + C3500 + C153913 * C1468 + C2821 * C546 + C3501 + C3501 +
             C153925 * C570) *
                C153874 +
            (C3537 + C3536 + C3535) * C2819 + (C3534 + C3533 + C3532) * C2818) *
               C153626 * C2546) *
              C153511 * C153498)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
             C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 + C24119 +
             C153887 * C354) *
                C153922 +
            (C24183 + C24184 + C24185) * C153903 + C24197 * C153874) *
               C153626 * C153910 -
           (C25269 * C153874 + (C24794 + C24795 + C24796) * C153903 +
            (C24114 * C1892 + C24737 + C24737 + C153887 * C1902 +
             C24112 * C1057 + C24738 + C24738 + C24105 * C1069 + C24110 * C542 +
             C24739 + C24739 + C24104 * C566) *
                C153922) *
               C153626 * C153911 +
           ((C24110 * C543 + C24740 + C24740 + C24104 * C567 + C24112 * C1461 +
             C24741 + C24741 + C24105 * C1471 + C24114 * C3441 + C24742 +
             C24742 + C153887 * C3449) *
                C153922 +
            (C24797 + C24798 + C24799) * C153903 +
            (C24800 + C24801 + C24802) * C153874) *
               C153626 * C2546) *
              C153511 * C153829 +
          (((C24796 + C24795 + C24794) * C153922 +
            (C24793 + C24792 + C24791) * C153903 +
            (C25276 + C25277 + C25278) * C153874) *
               C153626 * C153911 -
           (C24198 * C153874 + (C24188 + C24187 + C24186) * C153903 +
            (C24185 + C24184 + C24183) * C153922) *
               C153626 * C153910 -
           ((C24114 * C3444 + C24764 + C24764 + C153887 * C3452 +
             C24112 * C1458 + C24765 + C24765 + C24105 * C1468 + C24110 * C546 +
             C24766 + C24766 + C24104 * C570) *
                C153874 +
            (C24802 + C24801 + C24800) * C153903 +
            (C24799 + C24798 + C24797) * C153922) *
               C153626 * C2546) *
              C153511 * C153498)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C28350 * C136 + C28361 + C28361 + C28344 * C152 + C28352 * C329 +
            C28362 + C28362 + C28345 * C353 + C28354 * C330 + C28363 + C28363 +
            C28346 * C354 + C28356 * C1319 + C28364 + C28364 + C28347 * C1329 +
            C28358 * C3127 + C28365 + C28365 + C28348 * C3135) *
               C153454 * C153626 * C153910 -
           (C28358 * C5703 + C28657 + C28657 + C28348 * C5709 + C28356 * C4303 +
            C28658 + C28658 + C28347 * C4311 + C28354 * C1892 + C28659 +
            C28659 + C28346 * C1902 + C28352 * C1057 + C28660 + C28660 +
            C28345 * C1069 + C28350 * C542 + C28661 + C28661 + C28344 * C566) *
               C153454 * C153626 * C153911 +
           (C28350 * C543 + C28662 + C28662 + C28344 * C567 + C28352 * C1461 +
            C28663 + C28663 + C28345 * C1471 + C28354 * C3441 + C28664 +
            C28664 + C28346 * C3449 + C28356 * C4959 + C28665 + C28665 +
            C28347 * C4965 + C28358 * C28650 + C28666 + C28666 +
            C28348 * C28654) *
               C153454 * C153626 * C2546) *
              C153511 * C153829 +
          ((C28350 * C541 + C28667 + C28667 + C28344 * C565 + C28352 * C1058 +
            C28668 + C28668 + C28345 * C1070 + C28354 * C1891 + C28669 +
            C28669 + C28346 * C1901 + C28356 * C4304 + C28670 + C28670 +
            C28347 * C4312 + C28358 * C5702 + C28671 + C28671 +
            C28348 * C5708) *
               C153454 * C153626 * C153911 -
           (C28358 * C3128 + C28366 + C28366 + C28348 * C3136 + C28356 * C1318 +
            C28367 + C28367 + C28347 * C1328 + C28354 * C331 + C28368 + C28368 +
            C28346 * C355 + C28352 * C328 + C28369 + C28369 + C28345 * C352 +
            C28350 * C137 + C28370 + C28370 + C28344 * C153) *
               C153454 * C153626 * C153910 -
           (C28358 * C28651 + C28672 + C28672 + C28348 * C28655 +
            C28356 * C4958 + C28673 + C28673 + C28347 * C4964 + C28354 * C3442 +
            C28674 + C28674 + C28346 * C3450 + C28352 * C1460 + C28675 +
            C28675 + C28345 * C1470 + C28350 * C544 + C28676 + C28676 +
            C28344 * C568) *
               C153454 * C153626 * C2546) *
              C153511 * C153498)) /
            (p * q * std::sqrt(p + q));
    d2ee[374] +=
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153608 * C152) * C122 + C193 * C123 +
            C194 * C124 + C195 * C125 + C196 * C126) *
               C153626 * C2030 -
           (C619 * C126 + C620 * C125 + C621 * C124 + C622 * C123 +
            (C134 * C542 + C587 + C587 + C153608 * C566) * C122) *
               C153626 * C153591) *
              C153511 * C1225 +
          ((C622 * C122 + C621 * C123 + C620 * C124 + C619 * C125 +
            C895 * C126) *
               C153626 * C153591 -
           (C197 * C126 + C196 * C125 + C195 * C124 + C194 * C123 +
            C193 * C122) *
               C153626 * C2030) *
              C153511 * C1226 +
          ((C194 * C122 + C195 * C123 + C196 * C124 + C197 * C125 +
            C198 * C126) *
               C153626 * C2030 -
           ((C134 * C886 + C892 + C892 + C153608 * C888) * C126 + C895 * C125 +
            C619 * C124 + C620 * C123 + C621 * C122) *
               C153626 * C153591) *
              C153511 * C1227)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153608 * C152) * C122 + C193 * C123 +
            C194 * C124 + C195 * C125 + C196 * C126) *
               C153626 * C2030 -
           (C619 * C126 + C620 * C125 + C621 * C124 + C622 * C123 +
            (C134 * C542 + C587 + C587 + C153608 * C566) * C122) *
               C153626 * C153591) *
              C320 +
          (((C134 * C1057 + C1076 + C1076 + C153608 * C1069) * C122 +
            C1098 * C123 + C1099 * C124 + C1100 * C125 + C1101 * C126) *
               C153626 * C153591 -
           (C406 * C126 + C407 * C125 + C408 * C124 + C409 * C123 +
            (C134 * C329 + C374 + C374 + C153608 * C353) * C122) *
               C153626 * C2030) *
              C321 +
          (((C134 * C330 + C375 + C375 + C153608 * C354) * C122 + C410 * C123 +
            C411 * C124 + C412 * C125 + C413 * C126) *
               C153626 * C2030 -
           ((C134 * C1888 + C1904 + C1904 + C153608 * C1898) * C126 +
            (C134 * C1889 + C1905 + C1905 + C153608 * C1899) * C125 +
            (C134 * C1890 + C1906 + C1906 + C153608 * C1900) * C124 +
            (C134 * C1891 + C1907 + C1907 + C153608 * C1901) * C123 +
            (C134 * C1892 + C1908 + C1908 + C153608 * C1902) * C122) *
               C153626 * C153591) *
              C322) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
             C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
             C153887 * C354) *
                C2818 +
            (C2894 + C2895 + C2896) * C2819 + C2908 * C153874) *
               C153626 * C2030 -
           (C4004 * C153874 + (C3529 + C3530 + C3531) * C2819 +
            (C2825 * C1892 + C3472 + C3472 + C153887 * C1902 + C2823 * C1057 +
             C3473 + C3473 + C153913 * C1069 + C2821 * C542 + C3474 + C3474 +
             C153925 * C566) *
                C2818) *
               C153626 * C153591) *
              C153511 * C1225 +
          (((C3531 + C3530 + C3529) * C2818 + (C3528 + C3527 + C3526) * C2819 +
            (C4011 + C4012 + C4013) * C153874) *
               C153626 * C153591 -
           (C2909 * C153874 + (C2899 + C2898 + C2897) * C2819 +
            (C2896 + C2895 + C2894) * C2818) *
               C153626 * C2030) *
              C153511 * C1226 +
          ((C2908 * C2818 + (C2902 + C2901 + C2900) * C2819 +
            (C2903 + C2904 + C2905) * C153874) *
               C153626 * C2030 -
           ((C2825 * C1888 + C4001 + C4001 + C153887 * C1898 + C2823 * C1061 +
             C4002 + C4002 + C153913 * C1073 + C2821 * C538 + C4003 + C4003 +
             C153925 * C562) *
                C153874 +
            (C4013 + C4012 + C4011) * C2819 + C4004 * C2818) *
               C153626 * C153591) *
              C153511 * C1227)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C2821 * C136 + C2828 + C2828 + C153925 * C152 + C2823 * C329 +
             C2829 + C2829 + C153913 * C353 + C2825 * C330 + C2830 + C2830 +
             C153887 * C354) *
                C2818 +
            (C2894 + C2895 + C2896) * C2819 + C2908 * C153874) *
               C153626 * C2030 -
           (C4004 * C153874 + (C3529 + C3530 + C3531) * C2819 +
            (C2825 * C1892 + C3472 + C3472 + C153887 * C1902 + C2823 * C1057 +
             C3473 + C3473 + C153913 * C1069 + C2821 * C542 + C3474 + C3474 +
             C153925 * C566) *
                C2818) *
               C153626 * C153591) *
              C320 +
          (((C2821 * C1057 + C4316 + C4316 + C153925 * C1069 + C2823 * C1892 +
             C4317 + C4317 + C153913 * C1902 + C2825 * C4303 + C4318 + C4318 +
             C153887 * C4311) *
                C2818 +
            (C4352 + C4353 + C4354) * C2819 +
            (C4355 + C4356 + C4357) * C153874) *
               C153626 * C153591 -
           (C3766 * C153874 + (C3215 + C3216 + C3217) * C2819 +
            (C2825 * C1319 + C3158 + C3158 + C153887 * C1329 + C2823 * C330 +
             C3159 + C3159 + C153913 * C354 + C2821 * C329 + C3160 + C3160 +
             C153925 * C353) *
                C2818) *
               C153626 * C2030) *
              C321 +
          (((C2821 * C330 + C3161 + C3161 + C153925 * C354 + C2823 * C1319 +
             C3162 + C3162 + C153913 * C1329 + C2825 * C3127 + C3163 + C3163 +
             C153887 * C3135) *
                C2818 +
            (C3218 + C3219 + C3220) * C2819 +
            (C3221 + C3222 + C3223) * C153874) *
               C153626 * C2030 -
           ((C2825 * C5701 + C5711 + C5711 + C153887 * C5707 + C2823 * C4305 +
             C5712 + C5712 + C153913 * C4313 + C2821 * C1890 + C5713 + C5713 +
             C153925 * C1900) *
                C153874 +
            (C2825 * C5702 + C5714 + C5714 + C153887 * C5708 + C2823 * C4304 +
             C5715 + C5715 + C153913 * C4312 + C2821 * C1891 + C5716 + C5716 +
             C153925 * C1901) *
                C2819 +
            (C2825 * C5703 + C5717 + C5717 + C153887 * C5709 + C2823 * C4303 +
             C5718 + C5718 + C153913 * C4311 + C2821 * C1892 + C5719 + C5719 +
             C153925 * C1902) *
                C2818) *
               C153626 * C153591) *
              C322) *
         C153492) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
             C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 + C24119 +
             C153887 * C354) *
                C153922 +
            (C24183 + C24184 + C24185) * C153903 + C24197 * C153874) *
               C153626 * C2030 -
           (C25269 * C153874 + (C24794 + C24795 + C24796) * C153903 +
            (C24114 * C1892 + C24737 + C24737 + C153887 * C1902 +
             C24112 * C1057 + C24738 + C24738 + C24105 * C1069 + C24110 * C542 +
             C24739 + C24739 + C24104 * C566) *
                C153922) *
               C153626 * C153591) *
              C153511 * C1225 +
          (((C24796 + C24795 + C24794) * C153922 +
            (C24793 + C24792 + C24791) * C153903 +
            (C25276 + C25277 + C25278) * C153874) *
               C153626 * C153591 -
           (C24198 * C153874 + (C24188 + C24187 + C24186) * C153903 +
            (C24185 + C24184 + C24183) * C153922) *
               C153626 * C2030) *
              C153511 * C1226 +
          ((C24197 * C153922 + (C24191 + C24190 + C24189) * C153903 +
            (C24192 + C24193 + C24194) * C153874) *
               C153626 * C2030 -
           ((C24114 * C1888 + C25266 + C25266 + C153887 * C1898 +
             C24112 * C1061 + C25267 + C25267 + C24105 * C1073 + C24110 * C538 +
             C25268 + C25268 + C24104 * C562) *
                C153874 +
            (C25278 + C25277 + C25276) * C153903 + C25269 * C153922) *
               C153626 * C153591) *
              C153511 * C1227)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C24110 * C136 + C24117 + C24117 + C24104 * C152 + C24112 * C329 +
             C24118 + C24118 + C24105 * C353 + C24114 * C330 + C24119 + C24119 +
             C153887 * C354) *
                C153922 +
            (C24183 + C24184 + C24185) * C153903 + C24197 * C153874) *
               C153626 * C2030 -
           (C25269 * C153874 + (C24794 + C24795 + C24796) * C153903 +
            (C24114 * C1892 + C24737 + C24737 + C153887 * C1902 +
             C24112 * C1057 + C24738 + C24738 + C24105 * C1069 + C24110 * C542 +
             C24739 + C24739 + C24104 * C566) *
                C153922) *
               C153626 * C153591) *
              C320 +
          (((C24110 * C1057 + C25569 + C25569 + C24104 * C1069 +
             C24112 * C1892 + C25570 + C25570 + C24105 * C1902 +
             C24114 * C4303 + C25571 + C25571 + C153887 * C4311) *
                C153922 +
            (C25605 + C25606 + C25607) * C153903 +
            (C25608 + C25609 + C25610) * C153874) *
               C153626 * C153591 -
           (C25031 * C153874 + (C24492 + C24493 + C24494) * C153903 +
            (C24114 * C1319 + C24435 + C24435 + C153887 * C1329 +
             C24112 * C330 + C24436 + C24436 + C24105 * C354 + C24110 * C329 +
             C24437 + C24437 + C24104 * C353) *
                C153922) *
               C153626 * C2030) *
              C321 +
          (((C24110 * C330 + C24438 + C24438 + C24104 * C354 + C24112 * C1319 +
             C24439 + C24439 + C24105 * C1329 + C24114 * C3127 + C24440 +
             C24440 + C153887 * C3135) *
                C153922 +
            (C24495 + C24496 + C24497) * C153903 +
            (C24498 + C24499 + C24500) * C153874) *
               C153626 * C2030 -
           ((C24114 * C5701 + C26937 + C26937 + C153887 * C5707 +
             C24112 * C4305 + C26938 + C26938 + C24105 * C4313 +
             C24110 * C1890 + C26939 + C26939 + C24104 * C1900) *
                C153874 +
            (C24114 * C5702 + C26940 + C26940 + C153887 * C5708 +
             C24112 * C4304 + C26941 + C26941 + C24105 * C4312 +
             C24110 * C1891 + C26942 + C26942 + C24104 * C1901) *
                C153903 +
            (C24114 * C5703 + C26943 + C26943 + C153887 * C5709 +
             C24112 * C4303 + C26944 + C26944 + C24105 * C4311 +
             C24110 * C1892 + C26945 + C26945 + C24104 * C1902) *
                C153922) *
               C153626 * C153591) *
              C322) *
         C153492) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((C28350 * C136 + C28361 + C28361 + C28344 * C152 + C28352 * C329 +
            C28362 + C28362 + C28345 * C353 + C28354 * C330 + C28363 + C28363 +
            C28346 * C354 + C28356 * C1319 + C28364 + C28364 + C28347 * C1329 +
            C28358 * C3127 + C28365 + C28365 + C28348 * C3135) *
               C153454 * C153626 * C2030 -
           (C28358 * C5703 + C28657 + C28657 + C28348 * C5709 + C28356 * C4303 +
            C28658 + C28658 + C28347 * C4311 + C28354 * C1892 + C28659 +
            C28659 + C28346 * C1902 + C28352 * C1057 + C28660 + C28660 +
            C28345 * C1069 + C28350 * C542 + C28661 + C28661 + C28344 * C566) *
               C153454 * C153626 * C153591) *
              C153511 * C1225 +
          ((C28350 * C541 + C28667 + C28667 + C28344 * C565 + C28352 * C1058 +
            C28668 + C28668 + C28345 * C1070 + C28354 * C1891 + C28669 +
            C28669 + C28346 * C1901 + C28356 * C4304 + C28670 + C28670 +
            C28347 * C4312 + C28358 * C5702 + C28671 + C28671 +
            C28348 * C5708) *
               C153454 * C153626 * C153591 -
           (C28358 * C3128 + C28366 + C28366 + C28348 * C3136 + C28356 * C1318 +
            C28367 + C28367 + C28347 * C1328 + C28354 * C331 + C28368 + C28368 +
            C28346 * C355 + C28352 * C328 + C28369 + C28369 + C28345 * C352 +
            C28350 * C137 + C28370 + C28370 + C28344 * C153) *
               C153454 * C153626 * C2030) *
              C153511 * C1226 +
          ((C28350 * C138 + C28371 + C28371 + C28344 * C154 + C28352 * C327 +
            C28372 + C28372 + C28345 * C351 + C28354 * C332 + C28373 + C28373 +
            C28346 * C356 + C28356 * C1317 + C28374 + C28374 + C28347 * C1327 +
            C28358 * C3129 + C28375 + C28375 + C28348 * C3137) *
               C153454 * C153626 * C2030 -
           (C28358 * C5701 + C28926 + C28926 + C28348 * C5707 + C28356 * C4305 +
            C28927 + C28927 + C28347 * C4313 + C28354 * C1890 + C28928 +
            C28928 + C28346 * C1900 + C28352 * C1059 + C28929 + C28929 +
            C28345 * C1071 + C28350 * C540 + C28930 + C28930 + C28344 * C564) *
               C153454 * C153626 * C153591) *
              C153511 * C1227)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((C28350 * C136 + C28361 + C28361 + C28344 * C152 + C28352 * C329 +
            C28362 + C28362 + C28345 * C353 + C28354 * C330 + C28363 + C28363 +
            C28346 * C354 + C28356 * C1319 + C28364 + C28364 + C28347 * C1329 +
            C28358 * C3127 + C28365 + C28365 + C28348 * C3135) *
               C153454 * C153626 * C2030 -
           (C28358 * C5703 + C28657 + C28657 + C28348 * C5709 + C28356 * C4303 +
            C28658 + C28658 + C28347 * C4311 + C28354 * C1892 + C28659 +
            C28659 + C28346 * C1902 + C28352 * C1057 + C28660 + C28660 +
            C28345 * C1069 + C28350 * C542 + C28661 + C28661 + C28344 * C566) *
               C153454 * C153626 * C153591) *
              C320 +
          ((C28350 * C1057 + C29099 + C29099 + C28344 * C1069 + C28352 * C1892 +
            C29100 + C29100 + C28345 * C1902 + C28354 * C4303 + C29101 +
            C29101 + C28346 * C4311 + C28356 * C5703 + C29102 + C29102 +
            C28347 * C5709 + C28358 * C29092 + C29103 + C29103 +
            C28348 * C29096) *
               C153454 * C153626 * C153591 -
           (C28358 * C4723 + C28509 + C28509 + C28348 * C4729 + C28356 * C3127 +
            C28510 + C28510 + C28347 * C3135 + C28354 * C1319 + C28511 +
            C28511 + C28346 * C1329 + C28352 * C330 + C28512 + C28512 +
            C28345 * C354 + C28350 * C329 + C28513 + C28513 + C28344 * C353) *
               C153454 * C153626 * C2030) *
              C321 +
          ((C28350 * C330 + C28514 + C28514 + C28344 * C354 + C28352 * C1319 +
            C28515 + C28515 + C28345 * C1329 + C28354 * C3127 + C28516 +
            C28516 + C28346 * C3135 + C28356 * C4723 + C28517 + C28517 +
            C28347 * C4729 + C28358 * C28502 + C28518 + C28518 +
            C28348 * C28506) *
               C153454 * C153626 * C2030 -
           (C28358 * C29856 + C29860 + C29860 + C28348 * C29858 +
            C28356 * C29092 + C29861 + C29861 + C28347 * C29096 +
            C28354 * C5703 + C29862 + C29862 + C28346 * C5709 + C28352 * C4303 +
            C29863 + C29863 + C28345 * C4311 + C28350 * C1892 + C29864 +
            C29864 + C28344 * C1902) *
               C153454 * C153626 * C153591) *
              C322) *
         C153492) /
            (p * q * std::sqrt(p + q));
}
