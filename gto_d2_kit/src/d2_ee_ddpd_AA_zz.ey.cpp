/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

#include "gto_d2_kit/d2_ee_ddpd_AA_zz.hpp"
#include <cmath>
/*

*/
#pragma GCC optimize("O0")
namespace {
    const double Pi = M_PI;
}
#pragma GCC optimize("O0")

void second_derivative_ee_2212_11_33(const double ae,
                                     const double xA,
                                     const double yA,
                                     const double zA,
                                     const double be,
                                     const double xB,
                                     const double yB,
                                     const double zB,
                                     const double ce,
                                     const double xC,
                                     const double yC,
                                     const double zC,
                                     const double de,
                                     const double xD,
                                     const double yD,
                                     const double zD,
                                     const double* const bs,
                                     double* const d2ee)
{
    const double p = ae + be;
    const double q = ce + de;
    const double xP = (ae * xA + be * xB) / p;
    const double yP = (ae * yA + be * yB) / p;
    const double zP = (ae * zA + be * zB) / p;
    const double xQ = (ce * xC + de * xD) / q;
    const double yQ = (ce * yC + de * yD) / q;
    const double zQ = (ce * zC + de * zD) / q;
    const double C151933 = ae + be;
    const double C151932 = ae * be;
    const double C151931 = zA - zB;
    const double C151939 = 0 * be;
    const double C152003 = 0 * ae;
    const double C151994 = 0 * be;
    const double C151992 = 0 * be;
    const double C152082 = 0 * be;
    const double C152157 = p + q;
    const double C152156 = p * q;
    const double C152165 = std::pow(ae, 2);
    const double C152163 = bs[3];
    const double C152162 = zP - zQ;
    const double C152171 = bs[4];
    const double C152169 = xP - xQ;
    const double C152179 = bs[5];
    const double C152188 = bs[6];
    const double C152199 = bs[7];
    const double C152214 = bs[8];
    const double C152250 = bs[2];
    const double C152354 = yP - yQ;
    const double C136 = bs[0];
    const double C153705 = xA - xB;
    const double C153740 = ce + de;
    const double C153739 = ce * de;
    const double C153738 = xC - xD;
    const double C153762 = yC - yD;
    const double C153778 = zC - zD;
    const double C153860 = yA - yB;
    const double C151940 = std::pow(C151933, 2);
    const double C151975 = 2 * C151933;
    const double C151942 = 2 * C151932;
    const double C151941 = C151932 * C151931;
    const double C153878 = std::pow(C151931, 2);
    const double C153961 = C151931 * be;
    const double C153959 = C151931 * ae;
    const double C151997 = C151931 * C151939;
    const double C151996 = -2 * C151939;
    const double C151995 = C151939 / C151933;
    const double C152014 = C152003 / C151933;
    const double C152007 = C151931 * C151994;
    const double C152006 = -2 * C151994;
    const double C152084 = C152082 / C151933;
    const double C152158 = 2 * C152156;
    const double C152166 = std::pow(C152162, 2);
    const double C152240 = C152162 * ae;
    const double C152181 = std::pow(C152169, 2);
    const double C152402 = std::pow(C152354, 2);
    const double C153708 = C153705 * be;
    const double C153707 = C153705 * ae;
    const double C153706 = std::pow(C153705, 2);
    const double C153742 = 2 * C153740;
    const double C153752 = std::pow(C153740, 2);
    const double C153744 = C153738 * de;
    const double C153743 = C153738 * ce;
    const double C153741 = std::pow(C153738, 2);
    const double C153763 = std::pow(C153762, 2);
    const double C153815 = C153762 * de;
    const double C153814 = C153762 * ce;
    const double C153779 = std::pow(C153778, 2);
    const double C153843 = C153778 * de;
    const double C153842 = C153778 * ce;
    const double C153861 = std::pow(C153860, 2);
    const double C153919 = C153860 * be;
    const double C153917 = C153860 * ae;
    const double C151944 = 2 * C151940;
    const double C152080 = 4 * C151940;
    const double C151993 = C151940 * C151975;
    const double C153720 = std::pow(C151975, -1);
    const double C154079 = std::pow(C151975, -2);
    const double C153879 = C153878 * C151932;
    const double C154105 = std::pow(C153959, 2);
    const double C152010 = C151997 / C151933;
    const double C152009 = ae * C151996;
    const double C152016 = C152007 / C151933;
    const double C152015 = ae * C152006;
    const double C152160 = C152158 / C152157;
    const double C152 =
        ((std::pow(zP - zQ, 2) * bs[2] * std::pow(C152158 / C152157, 2) -
          (bs[1] * C152158) / C152157) *
         std::pow(ae, 2)) /
        C151940;
    const double C137 = -(C152169 * bs[1] * C152158) / C152157;
    const double C335 = -(C152354 * bs[1] * C152158) / C152157;
    const double C556 = -(C152162 * bs[1] * C152158) / C152157;
    const double C152173 = C152166 * C152171;
    const double C152182 = C152166 * C152179;
    const double C152190 = C152166 * C152188;
    const double C152202 = C152166 * C152199;
    const double C152217 = C152166 * C152214;
    const double C152241 = C152179 * C152240;
    const double C152244 = C152171 * C152240;
    const double C152253 = C152163 * C152240;
    const double C152277 = C152188 * C152240;
    const double C152297 = C152199 * C152240;
    const double C152324 = C152214 * C152240;
    const double C144 = (-(bs[1] * C152240 * C152158) / C152157) / C151933;
    const double C154072 = std::pow(C153707, 2);
    const double C153709 = C153706 * C151932;
    const double C153753 = std::pow(C153742, -1);
    const double C154091 = std::pow(C153742, -2);
    const double C153757 = 2 * C153752;
    const double C154089 = 4 * C153752;
    const double C153745 = C153741 * C153739;
    const double C153764 = C153763 * C153739;
    const double C153780 = C153779 * C153739;
    const double C153862 = C153861 * C151932;
    const double C154103 = std::pow(C153917, 2);
    const double C152001 = C151939 / C151944;
    const double C152011 = C151994 / C151944;
    const double C152008 = C151992 / C151944;
    const double C152083 = C151933 * C152080;
    const double C154082 = 4 * C151993;
    const double C153880 = C153879 / C151933;
    const double C152018 = 0 - C152010;
    const double C152019 = C152009 / C151993;
    const double C152017 = C151931 * C152009;
    const double C152023 = 0 - C152016;
    const double C152024 = C152015 / C151993;
    const double C152164 = -C152160;
    const double C152172 = std::pow(C152160, 4);
    const double C152189 = std::pow(C152160, 6);
    const double C152215 = std::pow(C152160, 8);
    const double C152249 = std::pow(C152160, 2);
    const double C153 =
        ((xP - xQ) *
         (bs[2] * std::pow(C152160, 2) +
          std::pow(zP - zQ, 2) * bs[3] * std::pow(-C152160, 3)) *
         std::pow(ae, 2)) /
        C151940;
    const double C153710 = C153709 / C151933;
    const double C153746 = C153745 / C153740;
    const double C153765 = C153764 / C153740;
    const double C153781 = C153780 / C153740;
    const double C153863 = C153862 / C151933;
    const double C153881 = -C153880;
    const double C152026 = C152018 * ae;
    const double C152025 = C152017 / C151940;
    const double C152033 = C152023 * ae;
    const double C152167 = std::pow(C152164, 3);
    const double C152180 = std::pow(C152164, 5);
    const double C152200 = std::pow(C152164, 7);
    const double C152174 = C152173 * C152172;
    const double C152178 = C152171 * C152172;
    const double C152245 = C152172 * C152244;
    const double C152191 = C152190 * C152189;
    const double C152198 = C152188 * C152189;
    const double C152281 = C152189 * C152277;
    const double C152218 = C152217 * C152215;
    const double C152330 = C152215 * C152324;
    const double C152252 = C152250 * C152249;
    const double C145 = (C152169 * C152249 * C152250 * C152240) / C151933;
    const double C347 = (C152354 * C152249 * C152250 * C152240) / C151933;
    const double C568 = (C152162 * C152249 * C152250 * C152240) / C151933 -
                        (ae * bs[1] * C152158) / (C152157 * C151933);
    const double C153711 = -C153710;
    const double C153747 = -C153746;
    const double C153766 = -C153765;
    const double C153782 = -C153781;
    const double C153864 = -C153863;
    const double C153882 = std::exp(C153881);
    const double C152034 = C152026 / C151933;
    const double C152040 = C152033 / C151933;
    const double C152170 = C152163 * C152167;
    const double C152254 = C152167 * C152253;
    const double C154 =
        ((bs[2] * std::pow(C152160, 2) + C152166 * C152163 * C152167) *
             C152165 +
         (C152163 * C152167 + C152166 * bs[4] * std::pow(C152160, 4)) *
             C152165 * std::pow(xP - xQ, 2)) /
        C151940;
    const double C359 =
        ((yP - yQ) *
         (bs[2] * std::pow(C152160, 2) + C152166 * C152163 * C152167) *
         C152165) /
        C151940;
    const double C580 =
        (2 * ae * C152249 * C152250 * C152240 +
         C152162 * (C152250 * C152249 + C152166 * C152163 * C152167) *
             C152165) /
        C151940;
    const double C152183 = C152182 * C152180;
    const double C152187 = C152179 * C152180;
    const double C152242 = C152180 * C152241;
    const double C152203 = C152202 * C152200;
    const double C152213 = C152199 * C152200;
    const double C152302 = C152200 * C152297;
    const double C152268 = C152178 * C152181;
    const double C152278 = C152169 * C152178;
    const double C152468 = C152178 * C152402;
    const double C152552 = C152354 * C152178;
    const double C152645 = C152178 * C152166;
    const double C152644 = C152162 * C152178;
    const double C152643 = C152178 * ae;
    const double C152260 = C152169 * C152245;
    const double C152395 = C152354 * C152245;
    const double C152452 = C152162 * C152245;
    const double C152639 = ae * C152245;
    const double C152300 = C152198 * C152181;
    const double C152327 = C152169 * C152198;
    const double C152949 = C152198 * C152402;
    const double C153006 = C152354 * C152198;
    const double C153214 = C152198 * C152166;
    const double C153213 = C152162 * C152198;
    const double C153212 = C152198 * ae;
    const double C152284 = C152281 * C152181;
    const double C152296 = C152169 * C152281;
    const double C152551 = C152281 * C152402;
    const double C152800 = C152354 * C152281;
    const double C152900 = C152162 * C152281;
    const double C153206 = ae * C152281;
    const double C152333 = C152330 * C152181;
    const double C152967 = C152169 * C152330;
    const double C153003 = C152330 * C152402;
    const double C153350 = C152354 * C152330;
    const double C153405 = C152162 * C152330;
    const double C152255 = C152252 * ae;
    const double C138 = C152252 * C152181 - (bs[1] * C152158) / C152157;
    const double C334 = C152354 * C152169 * C152252;
    const double C336 = C152252 * C152402 - (bs[1] * C152158) / C152157;
    const double C555 = C152162 * C152169 * C152252;
    const double C557 = C152252 * C152166 - (bs[1] * C152158) / C152157;
    const double C1081 = C152162 * C152354 * C152252;
    const double C153712 = std::exp(C153711);
    const double C153748 = std::exp(C153747);
    const double C153767 = std::exp(C153766);
    const double C153783 = std::exp(C153782);
    const double C153865 = std::exp(C153864);
    const double C164 = C153882 * C153;
    const double C151943 = C151941 * C153882;
    const double C134 =
        -((C153882 - (C151931 * 2 * C151932 * C151931 * C153882) / C151933) *
          2 * C151932) /
        C151933;
    const double C135 = -(2 * C151932 * C151931 * C153882) / C151933;
    const double C153960 = C153882 / C151975;
    const double C153962 = C153882 * C153959;
    const double C153969 = C153720 * C153882;
    const double C154117 = C153882 * C153961;
    const double C154146 = C154079 * C153882;
    const double C154144 = C153882 * C154105;
    const double C152041 = C152034 - C152011;
    const double C152046 = C152040 - C152008;
    const double C152175 = C152170 + C152174;
    const double C152261 = C152169 * C152170;
    const double C152396 = C152354 * C152170;
    const double C152454 = C152162 * C152170;
    const double C152453 = C152170 * ae;
    const double C139 =
        2 * C152169 * C152252 + C152169 * (C152252 + C152170 * C152181);
    const double C333 = C152354 * (C152252 + C152170 * C152181);
    const double C554 = C152162 * (C152252 + C152170 * C152181);
    const double C1347 =
        2 * C152354 * C152252 + C152354 * (C152252 + C152170 * C152402);
    const double C1920 = C152162 * (C152252 + C152170 * C152402);
    const double C2272 =
        2 * C152162 * C152252 + C152162 * (C152252 + C152170 * C152166);
    const double C152256 = C152162 * C152254;
    const double C146 =
        (C152249 * C152250 * C152240 + C152254 * C152181) / C151933;
    const double C147 =
        (2 * C152169 * C152254 + C152169 * (C152254 + C152245 * C152181)) /
        C151933;
    const double C345 = (C152354 * (C152254 + C152245 * C152181)) / C151933;
    const double C346 = (C152354 * C152169 * C152254) / C151933;
    const double C348 =
        (C152249 * C152250 * C152240 + C152254 * C152402) / C151933;
    const double C566 = (C152162 * (C152254 + C152245 * C152181) +
                         (C152252 + C152170 * C152181) * ae) /
                        C151933;
    const double C567 =
        (C152162 * C152169 * C152254 + C152169 * C152252 * ae) / C151933;
    const double C1087 =
        (C152162 * C152354 * C152254 + C152354 * C152252 * ae) / C151933;
    const double C1352 =
        (2 * C152354 * C152254 + C152354 * (C152254 + C152245 * C152402)) /
        C151933;
    const double C1925 = (C152162 * (C152254 + C152245 * C152402) +
                          (C152252 + C152170 * C152402) * ae) /
                         C151933;
    const double C167 = C153882 * C154;
    const double C3097 = C153882 * C359;
    const double C152184 = C152178 + C152183;
    const double C152192 = C152187 + C152191;
    const double C152279 = C152187 * C152181;
    const double C152299 = C152169 * C152187;
    const double C152553 = C152187 * C152402;
    const double C152801 = C152354 * C152187;
    const double C152903 = C152187 * C152166;
    const double C152902 = C152162 * C152187;
    const double C152901 = C152187 * ae;
    const double C152267 = C152242 * C152181;
    const double C152276 = C152169 * C152242;
    const double C152467 = C152242 * C152402;
    const double C152550 = C152354 * C152242;
    const double C152642 = C152162 * C152242;
    const double C152896 = ae * C152242;
    const double C152204 = C152198 + C152203;
    const double C152219 = C152213 + C152218;
    const double C152328 = C152213 * C152181;
    const double C152970 = C152169 * C152213;
    const double C153007 = C152213 * C152402;
    const double C153351 = C152354 * C152213;
    const double C153408 = C152213 * C152166;
    const double C153407 = C152162 * C152213;
    const double C153406 = C152213 * ae;
    const double C152305 = C152302 * C152181;
    const double C152323 = C152169 * C152302;
    const double C152946 = C152302 * C152402;
    const double C153002 = C152354 * C152302;
    const double C153211 = C152162 * C152302;
    const double C153399 = ae * C152302;
    const double C152270 = C152170 + C152268;
    const double C152282 = 2 * C152278;
    const double C152389 = C152354 * C152278;
    const double C152443 = C152162 * C152278;
    const double C152442 = C152278 * ae;
    const double C152470 = C152170 + C152468;
    const double C152556 = 2 * C152552;
    const double C152630 = C152162 * C152552;
    const double C152629 = C152552 * ae;
    const double C152649 = C152170 + C152645;
    const double C152648 = C152644 * ae;
    const double C152904 = 2 * C152644;
    const double C152262 = C152162 * C152260;
    const double C349 = (C152169 * C152254 + C152260 * C152402) / C151933;
    const double C152397 = C152162 * C152395;
    const double C152646 = 2 * C152639;
    const double C152304 = C152187 + C152300;
    const double C152331 = 2 * C152327;
    const double C152536 = C152327 * C152402;
    const double C152775 = C152354 * C152327;
    const double C152867 = C152327 * C152166;
    const double C152866 = C152162 * C152327;
    const double C152865 = C152327 * ae;
    const double C152951 = C152187 + C152949;
    const double C153010 = 2 * C153006;
    const double C153176 = C153006 * C152166;
    const double C153175 = C152162 * C153006;
    const double C153174 = C153006 * ae;
    const double C153222 = C152187 + C153214;
    const double C153221 = C153213 * ae;
    const double C153409 = 2 * C153213;
    const double C152286 = C152242 + C152284;
    const double C152301 = 2 * C152296;
    const double C152476 = C152296 * C152402;
    const double C152533 = C152354 * C152296;
    const double C152665 = C152162 * C152296;
    const double C152860 = ae * C152296;
    const double C152555 = C152242 + C152551;
    const double C152804 = C152162 * C152800;
    const double C152945 = 2 * C152800;
    const double C153169 = ae * C152800;
    const double C153219 = 2 * C153206;
    const double C152335 = C152302 + C152333;
    const double C152971 = C152967 * C152402;
    const double C153261 = C152162 * C152967;
    const double C153309 = C152354 * C152967;
    const double C153009 = C152302 + C153003;
    const double C153358 = C152162 * C153350;
    const double C153714 = C153712 * C153707;
    const double C153713 = C153712 / C151975;
    const double C153722 = C153720 * C153712;
    const double C154075 = C153712 * C153708;
    const double C154130 = C154079 * C153712;
    const double C154124 = C153712 * C154072;
    const double C153749 = C153748 * C153743;
    const double C153754 = C153753 * C153748;
    const double C154086 = C153748 * C153744;
    const double C154083 = C153748 / C153742;
    const double C1255 = C154091 * C153748;
    const double C153816 = C153767 * C153814;
    const double C153819 = C153753 * C153767;
    const double C154095 = C153767 * C153815;
    const double C154090 = C153767 / C153742;
    const double C328 = C154091 * C153767;
    const double C153844 = C153783 * C153842;
    const double C153847 = C153753 * C153783;
    const double C154099 = C153783 * C153843;
    const double C154092 = C153783 / C153742;
    const double C551 = C154091 * C153783;
    const double C153918 = C153865 / C151975;
    const double C153920 = C153865 * C153917;
    const double C153927 = C153720 * C153865;
    const double C154110 = C153865 * C153919;
    const double C154143 = C154079 * C153865;
    const double C154141 = C153865 * C154103;
    const double C151945 = 2 * C151943;
    const double C152004 = C151943 / C151940;
    const double C151998 = -4 * C151943;
    const double C7060 =
        ((0 * ae) / C151933 - C151943 / C151940) / (2 * C151933) +
        (0 * ae) / C151933;
    const double C14935 = (0 * ae) / C151933 - C151943 / C151940;
    const double C165 = C134 * C138;
    const double C162 = C134 * C137;
    const double C377 = C134 * C334;
    const double C598 = C134 * C555;
    const double C3098 = C134 * C336;
    const double C3096 = C134 * C335;
    const double C4183 = C134 * C1081;
    const double C163 = C135 * C145;
    const double C161 = C135 * C144;
    const double C380 = C135 * C347;
    const double C601 = C135 * C568;
    const double C46968 = (C153882 * std::pow(C153961, 2)) / C151940 + C153960;
    const double C153963 = C153962 * C153961;
    const double C153968 = C153962 / C151944;
    const double C154109 = C153962 / C151933;
    const double C154106 = C153720 * C153962;
    const double C153970 = C153969 * C153961;
    const double C154123 = C153969 / C152080;
    const double C154121 = C153959 * C153969;
    const double C154120 = 2 * C153969;
    const double C55343 = C153969 / C154082;
    const double C115558 = C153969 / C151975;
    const double C154153 = C154117 / C151933;
    const double C46969 = (-2 * C153720 * C154117) / C151933;
    const double C154170 = C154144 / C151940;
    const double C152050 = C152041 / C151975;
    const double C152048 = C151931 * C152041;
    const double C152047 = 2 * C152041;
    const double C152054 = C152046 + C151995;
    const double C152176 = C152175 * C152165;
    const double C152263 = C152261 * ae;
    const double C1088 =
        (C152162 * C152354 * C152260 + C152354 * C152261 * ae) / C151933;
    const double C337 = C152169 * C152252 + C152261 * C152402;
    const double C558 = C152169 * C152252 + C152261 * C152166;
    const double C1082 = C152162 * C152354 * C152261;
    const double C1346 =
        2 * C152354 * C152261 + C152354 * (C152261 + C152278 * C152402);
    const double C1919 = C152162 * (C152261 + C152278 * C152402);
    const double C2271 =
        2 * C152162 * C152261 + C152162 * (C152261 + C152278 * C152166);
    const double C152398 = C152396 * ae;
    const double C1489 = C152354 * C152252 + C152396 * C152166;
    const double C6161 =
        2 * C152162 * C152396 + C152162 * (C152396 + C152552 * C152166);
    const double C152456 = C152454 * ae;
    const double C152455 = C152452 + C152453;
    const double C168 = C134 * C139;
    const double C374 = C134 * C333;
    const double C595 = C134 * C554;
    const double C3108 = C134 * C1347;
    const double C4181 = C134 * C1920;
    const double C152257 = C152256 + C152255;
    const double C166 = C135 * C146;
    const double C169 = C135 * C147;
    const double C375 = C135 * C345;
    const double C378 = C135 * C346;
    const double C381 = C135 * C348;
    const double C596 = C135 * C566;
    const double C599 = C135 * C567;
    const double C1100 = C135 * C1087;
    const double C1363 = C135 * C1352;
    const double C1936 = C135 * C1925;
    const double C152185 = C152184 * C152165;
    const double C152193 = C152192 * C152165;
    const double C152283 = C152178 + C152279;
    const double C152303 = 2 * C152299;
    const double C152477 = C152299 * C152402;
    const double C152535 = C152354 * C152299;
    const double C152668 = C152299 * C152166;
    const double C152667 = C152162 * C152299;
    const double C152666 = C152299 * ae;
    const double C152557 = C152178 + C152553;
    const double C152807 = C152801 * C152166;
    const double C152806 = C152162 * C152801;
    const double C152805 = C152801 * ae;
    const double C152948 = 2 * C152801;
    const double C152909 = C152178 + C152903;
    const double C152908 = C152902 * ae;
    const double C153215 = 2 * C152902;
    const double C152907 = C152900 + C152901;
    const double C152269 = C152245 + C152267;
    const double C152280 = 2 * C152276;
    const double C152388 = C152354 * C152276;
    const double C152441 = C152162 * C152276;
    const double C152662 = ae * C152276;
    const double C1351 =
        (2 * C152354 * C152260 + C152354 * (C152260 + C152276 * C152402)) /
        C151933;
    const double C1924 = (C152162 * (C152260 + C152276 * C152402) +
                          (C152261 + C152278 * C152402) * ae) /
                         C151933;
    const double C152469 = C152245 + C152467;
    const double C152554 = 2 * C152550;
    const double C152628 = C152162 * C152550;
    const double C152797 = ae * C152550;
    const double C152647 = C152642 + C152643;
    const double C152906 = 2 * C152896;
    const double C152205 = C152204 * C152165;
    const double C152220 = C152219 * C152165;
    const double C152332 = C152198 + C152328;
    const double C152972 = C152970 * C152402;
    const double C153264 = C152970 * C152166;
    const double C153263 = C152162 * C152970;
    const double C153262 = C152970 * ae;
    const double C153310 = C152354 * C152970;
    const double C153011 = C152198 + C153007;
    const double C153361 = C153351 * C152166;
    const double C153360 = C152162 * C153351;
    const double C153359 = C153351 * ae;
    const double C153418 = C152198 + C153408;
    const double C153417 = C153407 * ae;
    const double C153416 = C153405 + C153406;
    const double C152307 = C152281 + C152305;
    const double C152329 = 2 * C152323;
    const double C152534 = C152323 * C152402;
    const double C152774 = C152354 * C152323;
    const double C152864 = C152162 * C152323;
    const double C153256 = ae * C152323;
    const double C152950 = C152281 + C152946;
    const double C153008 = 2 * C153002;
    const double C153173 = C152162 * C153002;
    const double C153345 = ae * C153002;
    const double C153220 = C153211 + C153212;
    const double C153415 = 2 * C153399;
    const double C152272 = C152270 * ae;
    const double C140 = 3 * (C152252 + C152170 * C152181) +
                        C152169 * (2 * C152261 + C152169 * C152270);
    const double C332 = C152354 * (2 * C152261 + C152169 * C152270);
    const double C338 = C152252 + C152170 * C152181 + C152270 * C152402;
    const double C553 = C152162 * (2 * C152261 + C152169 * C152270);
    const double C559 = C152252 + C152170 * C152181 + C152270 * C152166;
    const double C1083 = C152162 * C152354 * C152270;
    const double C152391 = C152389 * ae;
    const double C1488 = C152354 * C152261 + C152389 * C152166;
    const double C152445 = C152443 * ae;
    const double C152472 = C152470 * ae;
    const double C3083 = 3 * (C152252 + C152170 * C152402) +
                         C152354 * (2 * C152396 + C152354 * C152470);
    const double C3369 = C152252 + C152170 * C152402 + C152470 * C152166;
    const double C4168 = C152162 * (2 * C152396 + C152354 * C152470);
    const double C152632 = C152630 * ae;
    const double C152652 = C152649 * ae;
    const double C7665 = 3 * (C152252 + C152170 * C152166) +
                         C152162 * (2 * C152454 + C152162 * C152649);
    const double C383 = C135 * C349;
    const double C152306 = C152169 * C152304;
    const double C152326 = 3 * C152304;
    const double C152486 = C152304 * C152402;
    const double C152518 = C152354 * C152304;
    const double C152691 = C152304 * C152166;
    const double C152690 = C152162 * C152304;
    const double C152689 = C152304 * ae;
    const double C152540 = C152299 + C152536;
    const double C152781 = C152775 * C152166;
    const double C152780 = C152162 * C152775;
    const double C152779 = C152775 * ae;
    const double C152969 = 2 * C152775;
    const double C152873 = C152299 + C152867;
    const double C152872 = C152866 * ae;
    const double C153265 = 2 * C152866;
    const double C152953 = C152354 * C152951;
    const double C153005 = 3 * C152951;
    const double C153058 = C152951 * C152166;
    const double C153057 = C152162 * C152951;
    const double C153056 = C152951 * ae;
    const double C153182 = C152801 + C153176;
    const double C153181 = C153175 * ae;
    const double C153352 = 2 * C153175;
    const double C153227 = C152162 * C153222;
    const double C153226 = C153222 * ae;
    const double C153410 = 3 * C153222;
    const double C152288 = C152169 * C152286;
    const double C152295 = 3 * C152286;
    const double C152381 = C152354 * C152286;
    const double C152430 = C152162 * C152286;
    const double C152685 = ae * C152286;
    const double C152478 = C152276 + C152476;
    const double C152537 = 2 * C152533;
    const double C152605 = C152162 * C152533;
    const double C152771 = ae * C152533;
    const double C152870 = 2 * C152860;
    const double C152558 = C152354 * C152555;
    const double C152616 = C152162 * C152555;
    const double C152944 = 3 * C152555;
    const double C153052 = ae * C152555;
    const double C153179 = 2 * C153169;
    const double C152337 = C152169 * C152335;
    const double C152517 = C152335 * C152402;
    const double C152748 = C152354 * C152335;
    const double C152828 = C152162 * C152335;
    const double C152973 = C152323 + C152971;
    const double C153315 = C152162 * C153309;
    const double C153012 = C152354 * C153009;
    const double C153137 = C152162 * C153009;
    const double C153715 = C153714 * C153708;
    const double C153721 = C153714 / C151944;
    const double C154076 = C153720 * C153714;
    const double C154074 = C153714 / C151933;
    const double C2846 = (C153712 * std::pow(C153708, 2)) / C151940 + C153713;
    const double C153723 = C153722 * C153708;
    const double C154108 = C153722 / C152080;
    const double C154080 = C153707 * C153722;
    const double C154078 = 2 * C153722;
    const double C127 = C153722 / C154082;
    const double C82774 = C153722 / C151975;
    const double C154126 = C154075 / C151933;
    const double C2847 = (-2 * C153720 * C154075) / C151933;
    const double C154157 = C154124 / C151940;
    const double C154087 = C153749 / C153757;
    const double C154085 = C153749 / C153740;
    const double C154084 = C153749 * C153744;
    const double C1254 = (2 * C153753 * C153749) / C153740;
    const double C154088 = C153754 * C153744;
    const double C133 = C153754 / C154089;
    const double C774 = C153754 / C153742;
    const double C154133 = C154086 / C153740;
    const double C1253 = (C153748 * std::pow(C153743, 2)) / C153752 + C154083;
    const double C154097 = C153816 / C153757;
    const double C154096 = C153816 * C153815;
    const double C154093 = C153816 / C153740;
    const double C327 = (2 * C153753 * C153816) / C153740;
    const double C154098 = C153819 * C153815;
    const double C1341 = C153819 / C154089;
    const double C1629 = C153819 / C153742;
    const double C154135 = C154095 / C153740;
    const double C326 = (C153767 * std::pow(C153814, 2)) / C153752 + C154090;
    const double C154101 = C153844 / C153757;
    const double C154100 = C153844 * C153843;
    const double C154094 = C153844 / C153740;
    const double C550 = (2 * C153753 * C153844) / C153740;
    const double C154102 = C153847 * C153843;
    const double C2267 = C153847 / C154089;
    const double C2574 = C153847 / C153742;
    const double C154138 = C154099 / C153740;
    const double C549 = (C153783 * std::pow(C153842, 2)) / C153752 + C154092;
    const double C24168 = (C153865 * std::pow(C153919, 2)) / C151940 + C153918;
    const double C153921 = C153920 * C153919;
    const double C153926 = C153920 / C151944;
    const double C154107 = C153920 / C151933;
    const double C154104 = C153720 * C153920;
    const double C153928 = C153927 * C153919;
    const double C154116 = C153927 / C152080;
    const double C154114 = C153917 * C153927;
    const double C154113 = 2 * C153927;
    const double C28094 = C153927 / C154082;
    const double C82771 = C153927 / C151975;
    const double C154148 = C154110 / C151933;
    const double C24169 = (-2 * C153720 * C154110) / C151933;
    const double C154168 = C154141 / C151940;
    const double C151946 = C151931 * C151945;
    const double C46976 =
        ((-C151945 / C151933) / C151975 - (0 * be) / C151933) / C151975 -
        (0 * be) / C151933;
    const double C97196 = (-C151945 / C151933) / C151975 - (0 * be) / C151933;
    const double C152022 = C152014 - C152004;
    const double C152012 = C151998 / C151933;
    const double C14949 = C14935 * C566;
    const double C14943 = C14935 * C567;
    const double C14938 = C14935 * C568;
    const double C15224 = C14935 * C1925;
    const double C15221 = C14935 * C1087;
    const double C181 = C162 + C163;
    const double C3122 = C3096 + C380;
    const double C46992 = C46968 * C154;
    const double C46983 = C46968 * C153;
    const double C51493 = C46968 * C359;
    const double C153964 = C153963 / C151940;
    const double C14947 = C154109 * C154;
    const double C14941 = C154109 * C153;
    const double C19127 = C154109 * C359;
    const double C154145 = 2 * C154106;
    const double C153971 = C153970 / C151933;
    const double C154156 = C154121 / C151944;
    const double C154175 = C154109 - C154153;
    const double C97191 = -C154153;
    const double C154182 = C154170 + C153960;
    const double C152056 = C152048 + 0;
    const double C152055 = C152025 + C152047;
    const double C152062 = C152054 / C151975;
    const double C155 =
        (2 * C152169 * C152176 +
         C152169 * (C152176 + (C152171 * C152172 +
                               C152166 * bs[5] * std::pow(C152164, 5)) *
                                  C152165 * std::pow(C152169, 2))) /
        C151940;
    const double C358 = ((yP - yQ) * C152169 * C152176) / C151940;
    const double C360 =
        ((bs[2] * std::pow(C152160, 2) + C152166 * C152163 * C152167) *
             C152165 +
         C152176 * std::pow(yP - yQ, 2)) /
        C151940;
    const double C579 = (2 * ae * C152169 * C152167 * C152163 * C152240 +
                         C152162 * C152169 * C152176) /
                        C151940;
    const double C1093 =
        (2 * ae * C152354 * C152254 + C152162 * C152354 * C152176) / C151940;
    const double C152264 = C152262 + C152263;
    const double C1102 = C135 * C1088;
    const double C15216 = C14935 * C1088;
    const double C382 = C134 * C337;
    const double C603 = C134 * C558;
    const double C1101 = C134 * C1082;
    const double C3104 = C134 * C1346;
    const double C3386 = C134 * C1919;
    const double C152399 = C152397 + C152398;
    const double C4819 = C134 * C1489;
    const double C152458 = ae * C152455;
    const double C152457 = C152162 * C152455;
    const double C152641 = 2 * C152455;
    const double C152258 = ae * C152257;
    const double C569 = (C152249 * C152250 * C152240 + C152162 * C152257 +
                         C152162 * C152252 * ae) /
                        C151933;
    const double C182 = C165 + C166;
    const double C183 = C168 + C169;
    const double C398 = C374 + C375;
    const double C399 = C377 + C378;
    const double C3123 = C3098 + C381;
    const double C619 = C595 + C596;
    const double C620 = C598 + C599;
    const double C4198 = C4183 + C1100;
    const double C3126 = C3108 + C1363;
    const double C4197 = C4181 + C1936;
    const double C152364 = C152169 * C152185;
    const double C152627 = C152354 * C152185;
    const double C152640 = C152162 * C152185;
    const double C156 =
        (3 * (C152176 + C152185 * C152181) +
         C152169 *
             (2 * C152169 * C152185 +
              C152169 * (C152185 + (C152179 * C152180 +
                                    C152166 * bs[6] * std::pow(C152160, 6)) *
                                       C152165 * C152181))) /
        C151940;
    const double C357 = ((yP - yQ) * (C152176 + C152185 * C152181)) / C151940;
    const double C361 =
        (C152169 * C152176 + C152169 * C152185 * std::pow(yP - yQ, 2)) /
        C151940;
    const double C578 =
        (2 * ae * (C152167 * C152163 * C152240 + C152245 * C152181) +
         C152162 * (C152176 + C152185 * C152181)) /
        C151940;
    const double C1094 =
        (2 * ae * C152354 * C152260 + C152162 * C152354 * C152169 * C152185) /
        C151940;
    const double C1357 =
        (2 * C152354 * C152176 +
         C152354 * (C152176 + C152185 * std::pow(C152354, 2))) /
        C151940;
    const double C1930 = (2 * ae * (C152254 + C152245 * C152402) +
                          C152162 * (C152176 + C152185 * C152402)) /
                         C151940;
    const double C152194 = C152193 * C152181;
    const double C152197 = C152169 * C152193;
    const double C152513 = C152193 * C152402;
    const double C152798 = C152354 * C152193;
    const double C152897 = C152162 * C152193;
    const double C3091 = (3 * (C152176 + C152185 * C152402) +
                          C152354 * (2 * C152354 * C152185 +
                                     C152354 * (C152185 + C152193 * C152402))) /
                         C151940;
    const double C152285 = C152169 * C152283;
    const double C152298 = 3 * C152283;
    const double C152382 = C152354 * C152283;
    const double C152432 = C152162 * C152283;
    const double C152431 = C152283 * ae;
    const double C1345 =
        2 * C152354 * C152270 + C152354 * (C152270 + C152283 * C152402);
    const double C1918 = C152162 * (C152270 + C152283 * C152402);
    const double C2270 =
        2 * C152162 * C152270 + C152162 * (C152270 + C152283 * C152166);
    const double C152479 = C152278 + C152477;
    const double C152539 = 2 * C152535;
    const double C152607 = C152162 * C152535;
    const double C152606 = C152535 * ae;
    const double C6159 =
        2 * C152162 * C152389 + C152162 * (C152389 + C152535 * C152166);
    const double C152672 = C152278 + C152668;
    const double C152671 = C152667 * ae;
    const double C152868 = 2 * C152667;
    const double C152670 = C152665 + C152666;
    const double C152559 = C152354 * C152557;
    const double C152618 = C152162 * C152557;
    const double C152617 = C152557 * ae;
    const double C152947 = 3 * C152557;
    const double C6160 =
        2 * C152162 * C152470 + C152162 * (C152470 + C152557 * C152166);
    const double C152811 = C152552 + C152807;
    const double C152810 = C152806 * ae;
    const double C153177 = 2 * C152806;
    const double C152809 = C152804 + C152805;
    const double C152913 = C152162 * C152909;
    const double C152912 = C152909 * ae;
    const double C153216 = 3 * C152909;
    const double C152914 = ae * C152907;
    const double C152911 = C152162 * C152907;
    const double C153210 = 2 * C152907;
    const double C152271 = C152162 * C152269;
    const double C148 = (3 * (C152254 + C152245 * C152181) +
                         C152169 * (2 * C152260 + C152169 * C152269)) /
                        C151933;
    const double C344 = (C152354 * (2 * C152260 + C152169 * C152269)) / C151933;
    const double C350 =
        (C152254 + C152245 * C152181 + C152269 * C152402) / C151933;
    const double C565 = (C152162 * (2 * C152260 + C152169 * C152269) +
                         (2 * C152261 + C152169 * C152270) * ae) /
                        C151933;
    const double C1089 =
        (C152162 * C152354 * C152269 + C152354 * C152270 * ae) / C151933;
    const double C1350 =
        (2 * C152354 * C152269 + C152354 * (C152269 + C152286 * C152402)) /
        C151933;
    const double C1923 = (C152162 * (C152269 + C152286 * C152402) +
                          (C152270 + C152283 * C152402) * ae) /
                         C151933;
    const double C152390 = C152162 * C152388;
    const double C152444 = C152441 + C152442;
    const double C152669 = 2 * C152662;
    const double C1362 = C135 * C1351;
    const double C1935 = C135 * C1924;
    const double C15229 = C14935 * C1924;
    const double C152471 = C152162 * C152469;
    const double C4176 = (2 * ae * (2 * C152395 + C152354 * C152469) +
                          C152162 * (2 * C152354 * C152185 +
                                     C152354 * (C152185 + C152193 * C152402))) /
                         C151940;
    const double C3087 = (3 * (C152254 + C152245 * C152402) +
                          C152354 * (2 * C152395 + C152354 * C152469)) /
                         C151933;
    const double C4172 = (C152162 * (2 * C152395 + C152354 * C152469) +
                          (2 * C152396 + C152354 * C152470) * ae) /
                         C151933;
    const double C152631 = C152628 + C152629;
    const double C152802 = 2 * C152797;
    const double C152653 = ae * C152647;
    const double C152651 = C152162 * C152647;
    const double C152899 = 2 * C152647;
    const double C152206 = C152205 * C152181;
    const double C152212 = C152169 * C152205;
    const double C152932 = C152205 * C152402;
    const double C152991 = C152354 * C152205;
    const double C153207 = C152162 * C152205;
    const double C152221 = C152220 * C152181;
    const double C152938 = C152169 * C152220;
    const double C152992 = C152220 * C152402;
    const double C153346 = C152354 * C152220;
    const double C153400 = C152162 * C152220;
    const double C152334 = C152169 * C152332;
    const double C152519 = C152332 * C152402;
    const double C152749 = C152354 * C152332;
    const double C152831 = C152332 * C152166;
    const double C152830 = C152162 * C152332;
    const double C152829 = C152332 * ae;
    const double C152974 = C152327 + C152972;
    const double C153272 = C152327 + C153264;
    const double C153271 = C153263 * ae;
    const double C153270 = C153261 + C153262;
    const double C153318 = C153310 * C152166;
    const double C153317 = C152162 * C153310;
    const double C153316 = C153310 * ae;
    const double C153013 = C152354 * C153011;
    const double C153140 = C153011 * C152166;
    const double C153139 = C152162 * C153011;
    const double C153138 = C153011 * ae;
    const double C153366 = C153006 + C153361;
    const double C153365 = C153360 * ae;
    const double C153364 = C153358 + C153359;
    const double C153424 = C152162 * C153418;
    const double C153423 = C153418 * ae;
    const double C153425 = ae * C153416;
    const double C153422 = C152162 * C153416;
    const double C152309 = C152169 * C152307;
    const double C152322 = 3 * C152307;
    const double C152485 = C152307 * C152402;
    const double C152516 = C152354 * C152307;
    const double C152688 = C152162 * C152307;
    const double C152824 = ae * C152307;
    const double C152538 = C152296 + C152534;
    const double C152778 = C152162 * C152774;
    const double C152966 = 2 * C152774;
    const double C153305 = ae * C152774;
    const double C152871 = C152864 + C152865;
    const double C153269 = 2 * C153256;
    const double C152952 = C152354 * C152950;
    const double C153001 = 3 * C152950;
    const double C153055 = C152162 * C152950;
    const double C153133 = ae * C152950;
    const double C153180 = C153173 + C153174;
    const double C153356 = 2 * C153345;
    const double C153228 = ae * C153220;
    const double C153225 = C152162 * C153220;
    const double C153404 = 2 * C153220;
    const double C171 = C134 * C140;
    const double C371 = C134 * C332;
    const double C385 = C134 * C338;
    const double C592 = C134 * C553;
    const double C606 = C134 * C559;
    const double C1104 = C134 * C1083;
    const double C3392 = C134 * C1488;
    const double C4584 = C134 * C3083;
    const double C4821 = C134 * C3369;
    const double C5567 = C134 * C4168;
    const double C152308 = C152303 + C152306;
    const double C152488 = C152283 + C152486;
    const double C152522 = 2 * C152518;
    const double C152584 = C152162 * C152518;
    const double C152583 = C152518 * ae;
    const double C152695 = C152283 + C152691;
    const double C152694 = C152690 * ae;
    const double C152832 = 2 * C152690;
    const double C152542 = C152354 * C152540;
    const double C152595 = C152162 * C152540;
    const double C152594 = C152540 * ae;
    const double C152968 = 3 * C152540;
    const double C152785 = C152535 + C152781;
    const double C152784 = C152780 * ae;
    const double C153311 = 2 * C152780;
    const double C152877 = C152162 * C152873;
    const double C152876 = C152873 * ae;
    const double C153266 = 3 * C152873;
    const double C152955 = C152948 + C152953;
    const double C153062 = C152557 + C153058;
    const double C153061 = C153057 * ae;
    const double C153141 = 2 * C153057;
    const double C153186 = C152162 * C153182;
    const double C153185 = C153182 * ae;
    const double C153353 = 3 * C153182;
    const double C153231 = C153215 + C153227;
    const double C152290 = C152280 + C152288;
    const double C152383 = C152162 * C152381;
    const double C152692 = 2 * C152685;
    const double C152480 = C152162 * C152478;
    const double C3088 = (3 * (C152260 + C152276 * C152402) +
                          C152354 * (2 * C152388 + C152354 * C152478)) /
                         C151933;
    const double C152776 = 2 * C152771;
    const double C152560 = C152554 + C152558;
    const double C153059 = 2 * C153052;
    const double C152339 = C152329 + C152337;
    const double C152521 = C152307 + C152517;
    const double C152752 = C152162 * C152748;
    const double C152975 = C152354 * C152973;
    const double C153078 = C152162 * C152973;
    const double C153014 = C153008 + C153012;
    const double C153716 = C153715 / C151940;
    const double C154127 = 2 * C154076;
    const double C153724 = C153723 / C151933;
    const double C154131 = C154080 / C151944;
    const double C154158 = C154074 - C154126;
    const double C73969 = -C154126;
    const double C154178 = C154157 + C153713;
    const double C154132 = C154084 / C153752;
    const double C154134 = C154088 / C153740;
    const double C329 = -C154133;
    const double C154136 = C154096 / C153752;
    const double C154137 = C154098 / C153740;
    const double C1251 = -C154135;
    const double C154139 = C154100 / C153752;
    const double C154140 = C154102 / C153740;
    const double C2058 = -C154138;
    const double C153922 = C153921 / C151940;
    const double C154142 = 2 * C154104;
    const double C153929 = C153928 / C151933;
    const double C154151 = C154114 / C151944;
    const double C154172 = C154107 - C154148;
    const double C70415 = -C154148;
    const double C154181 = C154168 + C153918;
    const double C151947 = C151946 / C151933;
    const double C97210 = C97196 * C566;
    const double C97204 = C97196 * C567;
    const double C97199 = C97196 * C568;
    const double C97490 = C97196 * C1924;
    const double C97485 = C97196 * C1925;
    const double C97482 = C97196 * C1087;
    const double C97477 = C97196 * C1088;
    const double C152032 = C151931 * C152022;
    const double C152030 = 2 * C152022;
    const double C152081 = C152022 / C151975;
    const double C187 = C181 + C163;
    const double C3130 = C3122 + C380;
    const double C153965 = C153960 - C153964;
    const double C154171 = C154145 / C151933;
    const double C153972 = C153968 - C153971;
    const double C154185 = C154175 / C151975;
    const double C97208 = C97191 * C154;
    const double C97202 = C97191 * C153;
    const double C101381 = C97191 * C359;
    const double C7076 = C154182 * C154;
    const double C7067 = C154182 * C153;
    const double C30660 = C154182 * C359;
    const double C152063 = C152056 * be;
    const double C152061 = C152055 * be;
    const double C170 = C153882 * C155;
    const double C7091 = C154182 * C155;
    const double C14953 = C154109 * C155;
    const double C47007 = C46968 * C155;
    const double C97214 = C97191 * C155;
    const double C379 = C153882 * C358;
    const double C7381 = C154182 * C358;
    const double C15220 = C154109 * C358;
    const double C47297 = C46968 * C358;
    const double C97481 = C97191 * C358;
    const double C3099 = C153882 * C360;
    const double C19137 = C154109 * C360;
    const double C30666 = C154182 * C360;
    const double C51499 = C46968 * C360;
    const double C101385 = C97191 * C360;
    const double C600 = C153882 * C579;
    const double C7695 = C154182 * C579;
    const double C14944 = C153969 * C579;
    const double C15494 = C154109 * C579;
    const double C46986 = C46969 * C579;
    const double C47599 = C46968 * C579;
    const double C97205 = C153969 * C579;
    const double C97755 = C97191 * C579;
    const double C4184 = C153882 * C1093;
    const double C19129 = C153969 * C1093;
    const double C20460 = C154109 * C1093;
    const double C31699 = C154182 * C1093;
    const double C51495 = C46969 * C1093;
    const double C52523 = C46968 * C1093;
    const double C101383 = C153969 * C1093;
    const double C102767 = C97191 * C1093;
    const double C152265 = ae * C152264;
    const double C570 =
        (C152169 * C152254 + C152162 * C152264 + C152162 * C152261 * ae) /
        C151933;
    const double C400 = C382 + C383;
    const double C1114 = C1101 + C1102;
    const double C152400 = ae * C152399;
    const double C1494 =
        (C152354 * C152254 + C152162 * C152399 + C152162 * C152396 * ae) /
        C151933;
    const double C152459 = C152254 + C152457;
    const double C581 =
        ((C152252 + C152166 * C152163 * C152167) * C152165 + C152258 + C152258 +
         C152162 * (2 * ae * C152254 + C152162 * C152176)) /
        C151940;
    const double C602 = C135 * C569;
    const double C7064 = C7060 * C569;
    const double C15495 = C14935 * C569;
    const double C46980 = C46976 * C569;
    const double C97756 = C97196 * C569;
    const double C188 = C182 + C166;
    const double C189 = C183 + C169;
    const double C406 = C398 + C375;
    const double C407 = C399 + C378;
    const double C3131 = C3123 + C381;
    const double C627 = C619 + C596;
    const double C628 = C620 + C599;
    const double C4202 = C4198 + C1100;
    const double C3134 = C3126 + C1363;
    const double C4201 = C4197 + C1936;
    const double C152650 = C152646 + C152640;
    const double C173 = C153882 * C156;
    const double C7094 = C154182 * C156;
    const double C14962 = C154109 * C156;
    const double C47010 = C46968 * C156;
    const double C97223 = C97191 * C156;
    const double C376 = C153882 * C357;
    const double C7372 = C154182 * C357;
    const double C15214 = C154109 * C357;
    const double C47288 = C46968 * C357;
    const double C97475 = C97191 * C357;
    const double C384 = C153882 * C361;
    const double C7390 = C154182 * C361;
    const double C15227 = C154109 * C361;
    const double C47306 = C46968 * C361;
    const double C97488 = C97191 * C361;
    const double C597 = C153882 * C578;
    const double C7686 = C154182 * C578;
    const double C14950 = C153969 * C578;
    const double C15488 = C154109 * C578;
    const double C46995 = C46969 * C578;
    const double C47590 = C46968 * C578;
    const double C97211 = C153969 * C578;
    const double C97749 = C97191 * C578;
    const double C1103 = C153882 * C1094;
    const double C8538 = C154182 * C1094;
    const double C15217 = C153969 * C1094;
    const double C16239 = C154109 * C1094;
    const double C47294 = C46969 * C1094;
    const double C48439 = C46968 * C1094;
    const double C97478 = C153969 * C1094;
    const double C98500 = C97191 * C1094;
    const double C3109 = C153882 * C1357;
    const double C20974 = C154109 * C1357;
    const double C30676 = C154182 * C1357;
    const double C51509 = C46968 * C1357;
    const double C101399 = C97191 * C1357;
    const double C4182 = C153882 * C1930;
    const double C19135 = C153969 * C1930;
    const double C22262 = C154109 * C1930;
    const double C31693 = C154182 * C1930;
    const double C51501 = C46969 * C1930;
    const double C52517 = C46968 * C1930;
    const double C101387 = C153969 * C1930;
    const double C102763 = C97191 * C1930;
    const double C152195 = C152185 + C152194;
    const double C152201 = 2 * C152197;
    const double C152604 = C152354 * C152197;
    const double C152663 = C152162 * C152197;
    const double C1356 =
        (2 * C152354 * C152364 +
         C152354 * (C152364 + C152197 * std::pow(C152354, 2))) /
        C151940;
    const double C1929 = (2 * ae * (C152260 + C152276 * C152402) +
                          C152162 * (C152364 + C152197 * C152402)) /
                         C151940;
    const double C152514 = C152185 + C152513;
    const double C152803 = C152162 * C152798;
    const double C152931 = 2 * C152798;
    const double C152910 = C152906 + C152897;
    const double C4585 = C153882 * C3091;
    const double C32105 = C154182 * C3091;
    const double C40248 = C154109 * C3091;
    const double C52929 = C46968 * C3091;
    const double C103284 = C97191 * C3091;
    const double C152287 = C152282 + C152285;
    const double C152384 = C152382 * ae;
    const double C1487 = C152354 * C152270 + C152382 * C152166;
    const double C6157 =
        2 * C152162 * C152382 + C152162 * (C152382 + C152518 * C152166);
    const double C152434 = C152432 * ae;
    const double C152433 = C152430 + C152431;
    const double C3100 = C134 * C1345;
    const double C3382 = C134 * C1918;
    const double C152481 = C152479 * ae;
    const double C4173 = (C152162 * (2 * C152388 + C152354 * C152478) +
                          (2 * C152389 + C152354 * C152479) * ae) /
                         C151933;
    const double C3084 = 3 * (C152261 + C152278 * C152402) +
                         C152354 * (2 * C152389 + C152354 * C152479);
    const double C3370 = C152261 + C152278 * C152402 + C152479 * C152166;
    const double C4169 = C152162 * (2 * C152389 + C152354 * C152479);
    const double C6158 =
        2 * C152162 * C152479 + C152162 * (C152479 + C152540 * C152166);
    const double C152609 = C152607 * ae;
    const double C152608 = C152605 + C152606;
    const double C152675 = C152672 * ae;
    const double C7666 = 3 * (C152261 + C152278 * C152166) +
                         C152162 * (2 * C152443 + C152162 * C152672);
    const double C152676 = ae * C152670;
    const double C152674 = C152162 * C152670;
    const double C152863 = 2 * C152670;
    const double C152561 = C152556 + C152559;
    const double C152620 = C152618 * ae;
    const double C152619 = C152616 + C152617;
    const double C152813 = C152811 * ae;
    const double C9167 = 3 * (C152396 + C152552 * C152166) +
                         C152162 * (2 * C152630 + C152162 * C152811);
    const double C152814 = ae * C152809;
    const double C152812 = C152162 * C152809;
    const double C153172 = 2 * C152809;
    const double C152917 = C152904 + C152913;
    const double C153205 = C152193 + C152914;
    const double C152916 = C152242 + C152911;
    const double C152273 = C152271 + C152272;
    const double C172 = C135 * C148;
    const double C372 = C135 * C344;
    const double C386 = C135 * C350;
    const double C593 = C135 * C565;
    const double C14955 = C14935 * C565;
    const double C97216 = C97196 * C565;
    const double C1105 = C135 * C1089;
    const double C15210 = C14935 * C1089;
    const double C97471 = C97196 * C1089;
    const double C1361 = C135 * C1350;
    const double C1934 = C135 * C1923;
    const double C15235 = C14935 * C1923;
    const double C97496 = C97196 * C1923;
    const double C152392 = C152390 + C152391;
    const double C152447 = ae * C152444;
    const double C152446 = C152162 * C152444;
    const double C152664 = 2 * C152444;
    const double C3125 = C3104 + C1362;
    const double C3405 = C3386 + C1935;
    const double C152473 = C152471 + C152472;
    const double C5568 = C153882 * C4176;
    const double C20976 = C153969 * C4176;
    const double C33105 = C154182 * C4176;
    const double C41533 = C154109 * C4176;
    const double C51507 = C46969 * C4176;
    const double C53926 = C46968 * C4176;
    const double C101397 = C153969 * C4176;
    const double C104579 = C97191 * C4176;
    const double C3110 = C135 * C3087;
    const double C4185 = C135 * C4172;
    const double C16605 = C14935 * C4172;
    const double C98866 = C97196 * C4172;
    const double C152634 = ae * C152631;
    const double C152633 = C152162 * C152631;
    const double C152799 = 2 * C152631;
    const double C152895 = C152185 + C152653;
    const double C152654 = C152245 + C152651;
    const double C152207 = C152193 + C152206;
    const double C152216 = 2 * C152212;
    const double C152510 = C152212 * C152402;
    const double C152772 = C152354 * C152212;
    const double C152861 = C152162 * C152212;
    const double C3092 = (3 * (C152364 + C152197 * C152402) +
                          C152354 * (2 * C152354 * C152197 +
                                     C152354 * (C152197 + C152212 * C152402))) /
                         C151940;
    const double C4177 = (2 * ae * (2 * C152388 + C152354 * C152478) +
                          C152162 * (2 * C152354 * C152197 +
                                     C152354 * (C152197 + C152212 * C152402))) /
                         C151940;
    const double C152933 = C152193 + C152932;
    const double C152993 = 2 * C152991;
    const double C153170 = C152162 * C152991;
    const double C153224 = C153219 + C153207;
    const double C152222 = C152205 + C152221;
    const double C152939 = C152938 * C152402;
    const double C153257 = C152162 * C152938;
    const double C153306 = C152354 * C152938;
    const double C152994 = C152205 + C152992;
    const double C153357 = C152162 * C153346;
    const double C153421 = C153415 + C153400;
    const double C152336 = C152331 + C152334;
    const double C152523 = C152304 + C152519;
    const double C152755 = C152749 * C152166;
    const double C152754 = C152162 * C152749;
    const double C152753 = C152749 * ae;
    const double C152837 = C152304 + C152831;
    const double C152836 = C152830 * ae;
    const double C152835 = C152828 + C152829;
    const double C152976 = C152354 * C152974;
    const double C153081 = C152974 * C152166;
    const double C153080 = C152162 * C152974;
    const double C153079 = C152974 * ae;
    const double C153277 = C152162 * C153272;
    const double C153276 = C153272 * ae;
    const double C153278 = ae * C153270;
    const double C153275 = C152162 * C153270;
    const double C153322 = C152775 + C153318;
    const double C153321 = C153317 * ae;
    const double C153320 = C153315 + C153316;
    const double C153015 = C153010 + C153013;
    const double C153146 = C152951 + C153140;
    const double C153145 = C153139 * ae;
    const double C153144 = C153137 + C153138;
    const double C153370 = C152162 * C153366;
    const double C153369 = C153366 * ae;
    const double C153371 = ae * C153364;
    const double C153368 = C152162 * C153364;
    const double C153428 = C153409 + C153424;
    const double C153427 = C152302 + C153422;
    const double C152311 = C152301 + C152309;
    const double C152487 = C152286 + C152485;
    const double C152520 = 2 * C152516;
    const double C152582 = C152162 * C152516;
    const double C152745 = ae * C152516;
    const double C152693 = C152688 + C152689;
    const double C152834 = 2 * C152824;
    const double C152541 = C152354 * C152538;
    const double C152593 = C152162 * C152538;
    const double C152965 = 3 * C152538;
    const double C153075 = ae * C152538;
    const double C152783 = C152778 + C152779;
    const double C153313 = 2 * C153305;
    const double C152878 = ae * C152871;
    const double C152875 = C152162 * C152871;
    const double C153260 = 2 * C152871;
    const double C152954 = C152945 + C152952;
    const double C153060 = C153055 + C153056;
    const double C153143 = 2 * C153133;
    const double C153187 = ae * C153180;
    const double C153184 = C152162 * C153180;
    const double C153349 = 2 * C153180;
    const double C153398 = C152205 + C153228;
    const double C153230 = C152281 + C153225;
    const double C152310 = C152169 * C152308;
    const double C152325 = 4 * C152308;
    const double C152375 = C152354 * C152308;
    const double C152421 = C152162 * C152308;
    const double C152420 = C152308 * ae;
    const double C152490 = C152488 * ae;
    const double C3085 = 3 * (C152270 + C152283 * C152402) +
                         C152354 * (2 * C152382 + C152354 * C152488);
    const double C3371 = C152270 + C152283 * C152402 + C152488 * C152166;
    const double C4170 = C152162 * (2 * C152382 + C152354 * C152488);
    const double C152586 = C152584 * ae;
    const double C152698 = C152695 * ae;
    const double C7667 = 3 * (C152270 + C152283 * C152166) +
                         C152162 * (2 * C152432 + C152162 * C152695);
    const double C152544 = C152539 + C152542;
    const double C152597 = C152595 * ae;
    const double C152787 = C152785 * ae;
    const double C9166 = 3 * (C152389 + C152535 * C152166) +
                         C152162 * (2 * C152607 + C152162 * C152785);
    const double C152881 = C152868 + C152877;
    const double C152957 = C152354 * C152955;
    const double C153004 = 4 * C152955;
    const double C153043 = C152162 * C152955;
    const double C153042 = C152955 * ae;
    const double C153065 = C153062 * ae;
    const double C30946 = 3 * (C152470 + C152557 * C152166) +
                          C152162 * (2 * C152618 + C152162 * C153062);
    const double C153190 = C153177 + C153186;
    const double C153235 = C152162 * C153231;
    const double C153234 = C153231 * ae;
    const double C153411 = 4 * C153231;
    const double C152291 = C152162 * C152290;
    const double C149 = (4 * (2 * C152260 + C152169 * C152269) +
                         C152169 * (3 * C152269 + C152169 * C152290)) /
                        C151933;
    const double C343 = (C152354 * (3 * C152269 + C152169 * C152290)) / C151933;
    const double C351 =
        (2 * C152260 + C152169 * C152269 + C152290 * C152402) / C151933;
    const double C3113 = C135 * C3088;
    const double C152562 = C152162 * C152560;
    const double C4579 = (4 * (2 * C152395 + C152354 * C152469) +
                          C152354 * (3 * C152469 + C152354 * C152560)) /
                         C151933;
    const double C152341 = C152169 * C152339;
    const double C152494 = C152339 * C152402;
    const double C152711 = C152162 * C152339;
    const double C152732 = C152354 * C152339;
    const double C152524 = C152354 * C152521;
    const double C152570 = C152162 * C152521;
    const double C152977 = C152966 + C152975;
    const double C153016 = C152354 * C153014;
    const double C153112 = C152162 * C153014;
    const double C153717 = C153713 - C153716;
    const double C154159 = C154127 / C151933;
    const double C153725 = C153721 - C153724;
    const double C154179 = C154158 / C151975;
    const double C154162 = C154083 - C154132;
    const double C154163 = C154087 - C154134;
    const double C154164 = C154090 - C154136;
    const double C154165 = C154097 - C154137;
    const double C154166 = C154092 - C154139;
    const double C154167 = C154101 - C154140;
    const double C153923 = C153918 - C153922;
    const double C154169 = C154142 / C151933;
    const double C153930 = C153926 - C153929;
    const double C154183 = C154172 / C151975;
    const double C151948 = C153882 - C151947;
    const double C152039 = C152032 + C153969;
    const double C152085 = C152081 - C152084;
    const double C193 = C187 + C164;
    const double C3138 = C3130 + C3097;
    const double C115598 = C153965 * C156;
    const double C115595 = C153965 * C155;
    const double C115580 = C153965 * C154;
    const double C115571 = C153965 * C153;
    const double C115894 = C153965 * C361;
    const double C115885 = C153965 * C358;
    const double C115876 = C153965 * C357;
    const double C116187 = C153965 * C579;
    const double C116178 = C153965 * C578;
    const double C117027 = C153965 * C1094;
    const double C120214 = C153965 * C360;
    const double C120201 = C153965 * C359;
    const double C121532 = C153965 * C1093;
    const double C122045 = C153965 * C1357;
    const double C123343 = C153965 * C1930;
    const double C149618 = C153965 * C3091;
    const double C150600 = C153965 * C4176;
    const double C154118 = C153965 * C153959;
    const double C154155 = C154120 + C153965;
    const double C7079 = C154171 * C578;
    const double C7070 = C154171 * C579;
    const double C7378 = C154171 * C1094;
    const double C30674 = C154171 * C4176;
    const double C30668 = C154171 * C1930;
    const double C30662 = C154171 * C1093;
    const double C115583 = C153972 * C578;
    const double C115574 = C153972 * C579;
    const double C115882 = C153972 * C1094;
    const double C120212 = C153972 * C1930;
    const double C120203 = C153972 * C1093;
    const double C122047 = C153972 * C4176;
    const double C154122 = C153972 / C151975;
    const double C154119 = C153972 * C153959;
    const double C62963 = C154185 - (C153965 * C153961) / C151933;
    const double C152067 = C152063 / C151933;
    const double C152066 = C152061 / C151933;
    const double C582 =
        (C152169 * C152176 + C152265 + C152265 +
         C152162 * (2 * ae * C152260 + C152162 * C152169 * C152185)) /
        C151940;
    const double C604 = C135 * C570;
    const double C7072 = C7060 * C570;
    const double C15490 = C14935 * C570;
    const double C46988 = C46976 * C570;
    const double C97751 = C97196 * C570;
    const double C408 = C400 + C383;
    const double C1118 = C1114 + C1102;
    const double C1499 =
        (C152354 * C152176 + C152400 + C152400 +
         C152162 * (2 * ae * C152395 + C152162 * C152354 * C152185)) /
        C151940;
    const double C1505 = C135 * C1494;
    const double C7382 = C7060 * C1494;
    const double C16236 = C14935 * C1494;
    const double C47298 = C46976 * C1494;
    const double C98497 = C97196 * C1494;
    const double C152460 = C152459 + C152456;
    const double C194 = C188 + C167;
    const double C195 = C189 + C170;
    const double C415 = C407 + C379;
    const double C3139 = C3131 + C3099;
    const double C636 = C628 + C600;
    const double C4206 = C4202 + C4184;
    const double C414 = C406 + C376;
    const double C635 = C627 + C597;
    const double C3142 = C3134 + C3109;
    const double C4205 = C4201 + C4182;
    const double C157 =
        (4 * (2 * C152169 * C152185 + C152169 * C152195) +
         C152169 * (3 * C152195 +
                    C152169 * (2 * C152169 * C152193 +
                               C152169 * (C152193 + (C152188 * C152189 +
                                                     C152166 * bs[7] *
                                                         std::pow(C152164, 7)) *
                                                        C152165 * C152181)))) /
        C151940;
    const double C356 =
        ((yP - yQ) * (2 * C152169 * C152185 + C152169 * C152195)) / C151940;
    const double C362 =
        (C152176 + C152185 * C152181 + C152195 * std::pow(yP - yQ, 2)) /
        C151940;
    const double C577 =
        (2 * ae *
             (2 * C152169 * C152245 + C152169 * (C152245 + C152242 * C152181)) +
         C152162 * (2 * C152169 * C152185 + C152169 * C152195)) /
        C151940;
    const double C1095 =
        (2 * ae * C152354 * C152269 + C152162 * C152354 * C152195) / C151940;
    const double C152673 = C152669 + C152663;
    const double C3105 = C153882 * C1356;
    const double C19140 = C154109 * C1356;
    const double C30681 = C154182 * C1356;
    const double C51514 = C46968 * C1356;
    const double C101393 = C97191 * C1356;
    const double C120217 = C153965 * C1356;
    const double C3387 = C153882 * C1929;
    const double C7393 = C154171 * C1929;
    const double C15230 = C153969 * C1929;
    const double C20463 = C154109 * C1929;
    const double C31704 = C154182 * C1929;
    const double C47309 = C46969 * C1929;
    const double C52528 = C46968 * C1929;
    const double C97491 = C153969 * C1929;
    const double C101747 = C97191 * C1929;
    const double C115897 = C153972 * C1929;
    const double C121535 = C153965 * C1929;
    const double C4582 =
        (4 * (2 * C152354 * C152185 + C152354 * C152514) +
         C152354 * (3 * C152514 +
                    C152354 * (2 * C152354 * C152193 +
                               C152354 * (C152193 + C152205 * C152402)))) /
        C151940;
    const double C5565 =
        (2 * ae * (3 * C152469 + C152354 * C152560) +
         C152162 * (3 * C152514 +
                    C152354 * (2 * C152354 * C152193 +
                               C152354 * (C152193 + C152205 * C152402)))) /
        C151940;
    const double C152808 = C152802 + C152803;
    const double C152915 = C152162 * C152910;
    const double C153204 = 2 * C152910;
    const double C152289 = C152287 * ae;
    const double C564 = (C152162 * (3 * C152269 + C152169 * C152290) +
                         (3 * C152270 + C152169 * C152287) * ae) /
                        C151933;
    const double C1090 =
        (C152162 * C152354 * C152290 + C152354 * C152287 * ae) / C151933;
    const double C141 = 4 * (2 * C152261 + C152169 * C152270) +
                        C152169 * (3 * C152270 + C152169 * C152287);
    const double C331 = C152354 * (3 * C152270 + C152169 * C152287);
    const double C339 = 2 * C152261 + C152169 * C152270 + C152287 * C152402;
    const double C552 = C152162 * (3 * C152270 + C152169 * C152287);
    const double C560 = 2 * C152261 + C152169 * C152270 + C152287 * C152166;
    const double C1084 = C152162 * C152354 * C152287;
    const double C1344 =
        2 * C152354 * C152287 + C152354 * (C152287 + C152308 * C152402);
    const double C1917 = C152162 * (C152287 + C152308 * C152402);
    const double C2269 =
        2 * C152162 * C152287 + C152162 * (C152287 + C152308 * C152166);
    const double C152385 = C152383 + C152384;
    const double C3398 = C134 * C1487;
    const double C152436 = ae * C152433;
    const double C152435 = C152162 * C152433;
    const double C152687 = 2 * C152433;
    const double C152482 = C152480 + C152481;
    const double C4189 = C135 * C4173;
    const double C16603 = C14935 * C4173;
    const double C98864 = C97196 * C4173;
    const double C3112 = C134 * C3084;
    const double C3394 = C134 * C3370;
    const double C4188 = C134 * C4169;
    const double C152611 = ae * C152608;
    const double C152610 = C152162 * C152608;
    const double C152773 = 2 * C152608;
    const double C152859 = C152197 + C152676;
    const double C152677 = C152276 + C152674;
    const double C152563 = C152561 * ae;
    const double C5562 = (C152162 * (3 * C152469 + C152354 * C152560) +
                          (3 * C152470 + C152354 * C152561) * ae) /
                         C151933;
    const double C4576 = 4 * (2 * C152396 + C152354 * C152470) +
                         C152354 * (3 * C152470 + C152354 * C152561);
    const double C4811 = 2 * C152396 + C152354 * C152470 + C152561 * C152166;
    const double C5559 = C152162 * (3 * C152470 + C152354 * C152561);
    const double C29881 =
        2 * C152162 * C152561 + C152162 * (C152561 + C152955 * C152166);
    const double C152622 = ae * C152619;
    const double C152621 = C152162 * C152619;
    const double C153054 = 2 * C152619;
    const double C153168 = C152798 + C152814;
    const double C152815 = C152550 + C152812;
    const double C152920 = C152917 * ae;
    const double C10502 = 4 * (2 * C152454 + C152162 * C152649) +
                          C152162 * (3 * C152649 + C152162 * C152917);
    const double C153218 = C153205 + C152914;
    const double C152919 = C152916 + C152908;
    const double C152274 = ae * C152273;
    const double C571 = (C152254 + C152245 * C152181 + C152162 * C152273 +
                         C152162 * C152270 * ae) /
                        C151933;
    const double C184 = C171 + C172;
    const double C397 = C371 + C372;
    const double C401 = C385 + C386;
    const double C618 = C592 + C593;
    const double C1115 = C1104 + C1105;
    const double C3124 = C3100 + C1361;
    const double C3404 = C3382 + C1934;
    const double C152393 = ae * C152392;
    const double C1493 =
        (C152354 * C152260 + C152162 * C152392 + C152162 * C152389 * ae) /
        C151933;
    const double C152448 = C152260 + C152446;
    const double C3133 = C3125 + C1362;
    const double C3411 = C3405 + C1935;
    const double C152474 = ae * C152473;
    const double C3373 = (C152254 + C152245 * C152402 + C152162 * C152473 +
                          C152162 * C152470 * ae) /
                         C151933;
    const double C4589 = C4584 + C3110;
    const double C5572 = C5567 + C4185;
    const double C152635 = C152395 + C152633;
    const double C152905 = C152895 + C152653;
    const double C152655 = C152654 + C152648;
    const double C152208 = C152169 * C152207;
    const double C152211 = 3 * C152207;
    const double C152581 = C152354 * C152207;
    const double C152686 = C152162 * C152207;
    const double C1355 =
        (2 * C152354 * C152195 +
         C152354 * (C152195 + C152207 * std::pow(C152354, 2))) /
        C151940;
    const double C1928 = (2 * ae * (C152269 + C152286 * C152402) +
                          C152162 * (C152195 + C152207 * C152402)) /
                         C151940;
    const double C152511 = C152197 + C152510;
    const double C152777 = C152162 * C152772;
    const double C152937 = 2 * C152772;
    const double C152874 = C152870 + C152861;
    const double C3114 = C153882 * C3092;
    const double C38475 = C154109 * C3092;
    const double C101404 = C97191 * C3092;
    const double C4190 = C153882 * C4177;
    const double C19142 = C153969 * C4177;
    const double C30683 = C154171 * C4177;
    const double C39753 = C154109 * C4177;
    const double C51516 = C46969 * C4177;
    const double C101391 = C153969 * C4177;
    const double C102774 = C97191 * C4177;
    const double C120219 = C153972 * C4177;
    const double C152934 = C152354 * C152933;
    const double C152990 = 3 * C152933;
    const double C153053 = C152162 * C152933;
    const double C153183 = C153179 + C153170;
    const double C153229 = C152162 * C153224;
    const double C153397 = 2 * C153224;
    const double C152223 = C152169 * C152222;
    const double C152507 = C152222 * C152402;
    const double C152746 = C152354 * C152222;
    const double C152825 = C152162 * C152222;
    const double C3093 = (3 * (C152195 + C152207 * C152402) +
                          C152354 * (2 * C152354 * C152207 +
                                     C152354 * (C152207 + C152222 * C152402))) /
                         C151940;
    const double C152940 = C152212 + C152939;
    const double C153274 = C153269 + C153257;
    const double C153314 = C152162 * C153306;
    const double C152995 = C152354 * C152994;
    const double C153134 = C152162 * C152994;
    const double C153363 = C153356 + C153357;
    const double C153426 = C152162 * C153421;
    const double C152338 = C152169 * C152336;
    const double C152495 = C152336 * C152402;
    const double C152714 = C152336 * C152166;
    const double C152713 = C152162 * C152336;
    const double C152712 = C152336 * ae;
    const double C152733 = C152354 * C152336;
    const double C152525 = C152354 * C152523;
    const double C152572 = C152162 * C152523;
    const double C152571 = C152523 * ae;
    const double C6156 =
        2 * C152162 * C152488 + C152162 * (C152488 + C152523 * C152166);
    const double C152759 = C152518 + C152755;
    const double C152758 = C152754 * ae;
    const double C152757 = C152752 + C152753;
    const double C152841 = C152162 * C152837;
    const double C152840 = C152837 * ae;
    const double C152842 = ae * C152835;
    const double C152839 = C152162 * C152835;
    const double C152978 = C152969 + C152976;
    const double C153085 = C152540 + C153081;
    const double C153084 = C153080 * ae;
    const double C153083 = C153078 + C153079;
    const double C153281 = C153265 + C153277;
    const double C153280 = C152323 + C153275;
    const double C153326 = C152162 * C153322;
    const double C153325 = C153322 * ae;
    const double C153327 = ae * C153320;
    const double C153324 = C152162 * C153320;
    const double C153017 = C152354 * C153015;
    const double C153115 = C153015 * C152166;
    const double C153114 = C152162 * C153015;
    const double C153113 = C153015 * ae;
    const double C153150 = C152162 * C153146;
    const double C153149 = C153146 * ae;
    const double C153151 = ae * C153144;
    const double C153148 = C152162 * C153144;
    const double C153374 = C153352 + C153370;
    const double C153373 = C153002 + C153368;
    const double C153432 = C152162 * C153428;
    const double C153431 = C153428 * ae;
    const double C153430 = C153427 + C153417;
    const double C152313 = C152169 * C152311;
    const double C152321 = 4 * C152311;
    const double C152374 = C152354 * C152311;
    const double C152419 = C152162 * C152311;
    const double C152708 = ae * C152311;
    const double C1349 =
        (2 * C152354 * C152290 + C152354 * (C152290 + C152311 * C152402)) /
        C151933;
    const double C1922 = (C152162 * (C152290 + C152311 * C152402) +
                          (C152287 + C152308 * C152402) * ae) /
                         C151933;
    const double C152489 = C152162 * C152487;
    const double C4178 = (2 * ae * (2 * C152381 + C152354 * C152487) +
                          C152162 * (2 * C152354 * C152207 +
                                     C152354 * (C152207 + C152222 * C152402))) /
                         C151940;
    const double C3089 = (3 * (C152269 + C152286 * C152402) +
                          C152354 * (2 * C152381 + C152354 * C152487)) /
                         C151933;
    const double C4174 = (C152162 * (2 * C152381 + C152354 * C152487) +
                          (2 * C152382 + C152354 * C152488) * ae) /
                         C151933;
    const double C152585 = C152582 + C152583;
    const double C152750 = 2 * C152745;
    const double C152699 = ae * C152693;
    const double C152697 = C152162 * C152693;
    const double C152827 = 2 * C152693;
    const double C152543 = C152537 + C152541;
    const double C152596 = C152593 + C152594;
    const double C153082 = 2 * C153075;
    const double C152788 = ae * C152783;
    const double C152786 = C152162 * C152783;
    const double C153308 = 2 * C152783;
    const double C153255 = C152212 + C152878;
    const double C152880 = C152296 + C152875;
    const double C152956 = C152354 * C152954;
    const double C153000 = 4 * C152954;
    const double C153041 = C152162 * C152954;
    const double C153109 = ae * C152954;
    const double C153066 = ae * C153060;
    const double C153064 = C152162 * C153060;
    const double C153136 = 2 * C153060;
    const double C153344 = C152991 + C153187;
    const double C153189 = C152800 + C153184;
    const double C153414 = C153398 + C153228;
    const double C153233 = C153230 + C153221;
    const double C152312 = C152298 + C152310;
    const double C152377 = C152375 * ae;
    const double C1486 = C152354 * C152287 + C152375 * C152166;
    const double C152423 = C152421 * ae;
    const double C3116 = C134 * C3085;
    const double C3400 = C134 * C3371;
    const double C4193 = C134 * C4170;
    const double C152546 = C152544 * ae;
    const double C4575 = 4 * (2 * C152389 + C152354 * C152479) +
                         C152354 * (3 * C152479 + C152354 * C152544);
    const double C4810 = 2 * C152389 + C152354 * C152479 + C152544 * C152166;
    const double C5558 = C152162 * (3 * C152479 + C152354 * C152544);
    const double C152884 = C152881 * ae;
    const double C10501 = 4 * (2 * C152443 + C152162 * C152672) +
                          C152162 * (3 * C152672 + C152162 * C152881);
    const double C152959 = C152947 + C152957;
    const double C153045 = C153043 * ae;
    const double C153193 = C153190 * ae;
    const double C33705 = 4 * (2 * C152630 + C152162 * C152811) +
                          C152162 * (3 * C152811 + C152162 * C153190);
    const double C153238 = C153216 + C153235;
    const double C175 = C135 * C149;
    const double C369 = C135 * C343;
    const double C389 = C135 * C351;
    const double C4588 = C135 * C4579;
    const double C152343 = C152322 + C152341;
    const double C152496 = C152311 + C152494;
    const double C152734 = C152162 * C152732;
    const double C152526 = C152520 + C152524;
    const double C152979 = C152354 * C152977;
    const double C153098 = C152162 * C152977;
    const double C153018 = C153001 + C153016;
    const double C154073 = C153717 * C153707;
    const double C154129 = C154078 + C153717;
    const double C154081 = C153725 / C151975;
    const double C154077 = C153725 * C153707;
    const double C11376 = C154179 - (C153717 * C153708) / C151933;
    const double C130 =
        (C154162 * C153743) / C153740 + (C154085 - C154133) / C153742;
    const double C131 =
        (C154163 * C153743) / C153740 + (2 * C153754 + C154162) / C153742;
    const double C132 = (C153743 * C153754) / C153757 + C154163 / C153742;
    const double C1338 =
        (C154164 * C153814) / C153740 + (C154093 - C154135) / C153742;
    const double C1339 =
        (C154165 * C153814) / C153740 + (2 * C153819 + C154164) / C153742;
    const double C1340 = (C153814 * C153819) / C153757 + C154165 / C153742;
    const double C2264 =
        (C154166 * C153842) / C153740 + (C154094 - C154138) / C153742;
    const double C2265 =
        (C154167 * C153842) / C153740 + (2 * C153847 + C154166) / C153742;
    const double C2266 = (C153842 * C153847) / C153757 + C154167 / C153742;
    const double C154111 = C153923 * C153917;
    const double C154150 = C154113 + C153923;
    const double C154115 = C153930 / C151975;
    const double C154112 = C153930 * C153917;
    const double C34572 = C154183 - (C153923 * C153919) / C151933;
    const double C151949 = C151948 * C151942;
    const double C152000 = C151948 * ae;
    const double C7056 =
        (((0 - (C151931 * C151939) / C151933) * ae) / C151933 -
         (0 * be) / C151944) /
            (2 * C151933) +
        ((C151931 * ((C151948 * ae) / C151933 - C151939 / C151944) + C154109) *
         ae) /
            C151933 +
        (0 * ae) / C151933 - C151943 / C151940;
    const double C7058 =
        ((C151948 * ae) / C151933 - C151939 / C151944) / (2 * C151933) +
        ((C151931 * ((0 * ae) / C151933 - C151943 / C151940) + C153969) * ae) /
            C151933;
    const double C14933 = (C151948 * ae) / C151933 - C151939 / C151944;
    const double C46972 =
        ((-(0 * be) / C151933) / C151975 -
         ((0 - (C151931 * C151939) / C151933) * be) / C151933) /
            C151975 -
        ((C151931 *
              ((-C151939 / C151933) / C151975 - (C151948 * be) / C151933) +
          C97191) *
         be) /
            C151933 +
        (-C151945 / C151933) / C151975 - (0 * be) / C151933;
    const double C46974 =
        ((-C151939 / C151933) / C151975 - (C151948 * be) / C151933) / C151975 -
        ((C151931 * ((-C151945 / C151933) / C151975 - (0 * be) / C151933) +
          C153969) *
         be) /
            C151933;
    const double C97194 = (-C151995) / C151975 - (C151948 * be) / C151933;
    const double C152045 = C152039 * be;
    const double C115576 = C152085 * C570;
    const double C115568 = C152085 * C569;
    const double C115886 = C152085 * C1494;
    const double C152086 = 2 * C152085;
    const double C55353 =
        (C152085 / C151975 + (0 * ae) / C151933) / C151975 - (0 * be) / C151933;
    const double C62974 = C152085 / C151975 - (0 * be) / C151933;
    const double C106480 = C152085 / C151975 + (0 * ae) / C151933;
    const double C199 = C193 * C153865;
    const double C2850 = C193 * C154181;
    const double C11381 = C193 * C154107;
    const double C24175 = C193 * C24168;
    const double C70422 = C193 * C70415;
    const double C82776 = C193 * C153923;
    const double C154152 = C154118 / C151933;
    const double C154176 = C154155 / C151975;
    const double C154177 = C154156 + C154122;
    const double C62965 = C154122 - C153970 / C151944;
    const double C154154 = C154119 / C151933;
    const double C63006 = C62963 * C155;
    const double C63003 = C62963 * C154;
    const double C62982 = C62963 * C153;
    const double C63272 = C62963 * C361;
    const double C63261 = C62963 * C358;
    const double C63519 = C62963 * C579;
    const double C63767 = C62963 * C357;
    const double C63985 = C62963 * C578;
    const double C64272 = C62963 * C1094;
    const double C66997 = C62963 * C360;
    const double C66983 = C62963 * C359;
    const double C67869 = C62963 * C1093;
    const double C68207 = C62963 * C1357;
    const double C69095 = C62963 * C1930;
    const double C152070 = C152062 - C152067;
    const double C152069 = C152024 - C152066;
    const double C605 = C153882 * C582;
    const double C7073 = C154146 * C582;
    const double C7704 = C154182 * C582;
    const double C7692 = C154171 * C582;
    const double C15501 = C154109 * C582;
    const double C15491 = C153969 * C582;
    const double C46989 = C154146 * C582;
    const double C47608 = C46968 * C582;
    const double C47596 = C46969 * C582;
    const double C63530 = C62963 * C582;
    const double C97762 = C97191 * C582;
    const double C97752 = C153969 * C582;
    const double C115577 = C115558 * C582;
    const double C116196 = C153965 * C582;
    const double C116184 = C153972 * C582;
    const double C621 = C603 + C604;
    const double C416 = C408 + C384;
    const double C1122 = C1118 + C1103;
    const double C4820 = C153882 * C1499;
    const double C20458 = C153969 * C1499;
    const double C21280 = C154109 * C1499;
    const double C30664 = C154146 * C1499;
    const double C31697 = C154171 * C1499;
    const double C32345 = C154182 * C1499;
    const double C51497 = C154146 * C1499;
    const double C52521 = C46969 * C1499;
    const double C53166 = C46968 * C1499;
    const double C68425 = C62963 * C1499;
    const double C102765 = C153969 * C1499;
    const double C103588 = C97191 * C1499;
    const double C120205 = C115558 * C1499;
    const double C121530 = C153972 * C1499;
    const double C122356 = C153965 * C1499;
    const double C4826 = C4819 + C1505;
    const double C152461 = ae * C152460;
    const double C2277 =
        (2 * C152257 + C152162 * C152460 + (C152252 + C152170 * C152166) * ae) /
        C151933;
    const double C200 = C194 * C153865;
    const double C2853 = C194 * C154181;
    const double C11383 = C194 * C154107;
    const double C24178 = C194 * C24168;
    const double C70424 = C194 * C70415;
    const double C82779 = C194 * C153923;
    const double C201 = C195 * C153865;
    const double C2858 = C195 * C154181;
    const double C11385 = C195 * C154107;
    const double C24183 = C195 * C24168;
    const double C70426 = C195 * C70415;
    const double C82784 = C195 * C153923;
    const double C423 = C415 * C153865;
    const double C2851 = C415 * C154169;
    const double C3107 = C415 * C154181;
    const double C11382 = C415 * C153927;
    const double C11594 = C415 * C154107;
    const double C24176 = C415 * C24169;
    const double C24414 = C415 * C24168;
    const double C70423 = C415 * C153927;
    const double C70635 = C415 * C70415;
    const double C82777 = C415 * C153930;
    const double C83015 = C415 * C153923;
    const double C644 = C636 * C153865;
    const double C3389 = C636 * C154181;
    const double C11800 = C636 * C154107;
    const double C24644 = C636 * C24168;
    const double C70841 = C636 * C70415;
    const double C83245 = C636 * C153923;
    const double C422 = C414 * C153865;
    const double C2854 = C414 * C154169;
    const double C3103 = C414 * C154181;
    const double C11384 = C414 * C153927;
    const double C11592 = C414 * C154107;
    const double C24179 = C414 * C24169;
    const double C24411 = C414 * C24168;
    const double C70425 = C414 * C153927;
    const double C70633 = C414 * C70415;
    const double C82780 = C414 * C153930;
    const double C83012 = C414 * C153923;
    const double C643 = C635 * C153865;
    const double C3385 = C635 * C154181;
    const double C11798 = C635 * C154107;
    const double C24641 = C635 * C24168;
    const double C70839 = C635 * C70415;
    const double C83242 = C635 * C153923;
    const double C176 = C153882 * C157;
    const double C14965 = C154109 * C157;
    const double C97226 = C97191 * C157;
    const double C373 = C153882 * C356;
    const double C7982 = C154182 * C356;
    const double C15208 = C154109 * C356;
    const double C47886 = C46968 * C356;
    const double C97469 = C97191 * C356;
    const double C116474 = C153965 * C356;
    const double C387 = C153882 * C362;
    const double C7399 = C154182 * C362;
    const double C15233 = C154109 * C362;
    const double C47315 = C46968 * C362;
    const double C97494 = C97191 * C362;
    const double C115903 = C153965 * C362;
    const double C594 = C153882 * C577;
    const double C7088 = C154171 * C577;
    const double C8221 = C154182 * C577;
    const double C14956 = C153969 * C577;
    const double C15482 = C154109 * C577;
    const double C47004 = C46969 * C577;
    const double C48125 = C46968 * C577;
    const double C97217 = C153969 * C577;
    const double C97743 = C97191 * C577;
    const double C115592 = C153972 * C577;
    const double C116713 = C153965 * C577;
    const double C1106 = C153882 * C1095;
    const double C7369 = C154171 * C1095;
    const double C8547 = C154182 * C1095;
    const double C15211 = C153969 * C1095;
    const double C16245 = C154109 * C1095;
    const double C47285 = C46969 * C1095;
    const double C48448 = C46968 * C1095;
    const double C97472 = C153969 * C1095;
    const double C98506 = C97191 * C1095;
    const double C115873 = C153972 * C1095;
    const double C117036 = C153965 * C1095;
    const double C28226 = C153882 * C4582;
    const double C44781 = C154109 * C4582;
    const double C131832 = C97191 * C4582;
    const double C28780 = C153882 * C5565;
    const double C32107 = C154171 * C5565;
    const double C40250 = C153969 * C5565;
    const double C45646 = C154109 * C5565;
    const double C52931 = C46969 * C5565;
    const double C103286 = C153969 * C5565;
    const double C132697 = C97191 * C5565;
    const double C149620 = C153972 * C5565;
    const double C152292 = C152291 + C152289;
    const double C590 = C135 * C564;
    const double C14958 = C14935 * C564;
    const double C97219 = C97196 * C564;
    const double C1108 = C135 * C1090;
    const double C15204 = C14935 * C1090;
    const double C97465 = C97196 * C1090;
    const double C174 = C134 * C141;
    const double C368 = C134 * C331;
    const double C388 = C134 * C339;
    const double C589 = C134 * C552;
    const double C609 = C134 * C560;
    const double C1107 = C134 * C1084;
    const double C3119 = C134 * C1344;
    const double C3872 = C134 * C1917;
    const double C152386 = ae * C152385;
    const double C1492 =
        (C152354 * C152269 + C152162 * C152385 + C152162 * C152382 * ae) /
        C151933;
    const double C152437 = C152269 + C152435;
    const double C152483 = ae * C152482;
    const double C3374 = (C152260 + C152276 * C152402 + C152162 * C152482 +
                          C152162 * C152479 * ae) /
                         C151933;
    const double C3127 = C3112 + C3113;
    const double C4199 = C4188 + C4189;
    const double C152612 = C152388 + C152610;
    const double C152869 = C152859 + C152676;
    const double C152678 = C152677 + C152671;
    const double C152564 = C152562 + C152563;
    const double C5571 = C135 * C5562;
    const double C20981 = C14935 * C5562;
    const double C101401 = C97196 * C5562;
    const double C28225 = C134 * C4576;
    const double C29129 = C134 * C4811;
    const double C28779 = C134 * C5559;
    const double C152623 = C152469 + C152621;
    const double C153178 = C153168 + C152814;
    const double C152816 = C152815 + C152810;
    const double C152922 = ae * C152919;
    const double C152921 = C152162 * C152919;
    const double C153209 = 3 * C152919;
    const double C583 = (C152176 + C152185 * C152181 + C152274 + C152274 +
                         C152162 * (2 * ae * C152269 + C152162 * C152195)) /
                        C151940;
    const double C607 = C135 * C571;
    const double C7081 = C7060 * C571;
    const double C15484 = C14935 * C571;
    const double C46997 = C46976 * C571;
    const double C97745 = C97196 * C571;
    const double C115585 = C152085 * C571;
    const double C190 = C184 + C172;
    const double C405 = C397 + C372;
    const double C409 = C401 + C386;
    const double C626 = C618 + C593;
    const double C1119 = C1115 + C1105;
    const double C3132 = C3124 + C1361;
    const double C3410 = C3404 + C1934;
    const double C1498 =
        (C152354 * C152364 + C152393 + C152393 +
         C152162 * (2 * ae * C152388 + C152162 * C152354 * C152197)) /
        C151940;
    const double C1504 = C135 * C1493;
    const double C7374 = C7060 * C1493;
    const double C16241 = C14935 * C1493;
    const double C47290 = C46976 * C1493;
    const double C98502 = C97196 * C1493;
    const double C115878 = C152085 * C1493;
    const double C152449 = C152448 + C152445;
    const double C3141 = C3133 + C3105;
    const double C3417 = C3411 + C3387;
    const double C3377 = (C152176 + C152185 * C152402 + C152474 + C152474 +
                          C152162 * (2 * ae * C152469 +
                                     C152162 * (C152185 + C152193 * C152402))) /
                         C151940;
    const double C3390 = C135 * C3373;
    const double C7387 = C7060 * C3373;
    const double C17461 = C14935 * C3373;
    const double C47303 = C46976 * C3373;
    const double C99722 = C97196 * C3373;
    const double C115891 = C152085 * C3373;
    const double C4590 = C4589 + C3110;
    const double C5573 = C5572 + C4185;
    const double C152636 = C152635 + C152632;
    const double C152918 = C152905 + C152915;
    const double C152657 = ae * C152655;
    const double C152656 = C152162 * C152655;
    const double C152898 = 3 * C152655;
    const double C152209 = C152201 + C152208;
    const double C152696 = C152692 + C152686;
    const double C3101 = C153882 * C1355;
    const double C19145 = C154109 * C1355;
    const double C101409 = C97191 * C1355;
    const double C3383 = C153882 * C1928;
    const double C7402 = C154171 * C1928;
    const double C15236 = C153969 * C1928;
    const double C20468 = C154109 * C1928;
    const double C47318 = C46969 * C1928;
    const double C97497 = C153969 * C1928;
    const double C102363 = C97191 * C1928;
    const double C115906 = C153972 * C1928;
    const double C4581 =
        (4 * (2 * C152354 * C152197 + C152354 * C152511) +
         C152354 *
             (3 * C152511 +
              C152354 * (2 * C152354 * C152212 +
                         C152354 * (C152212 + C152169 * C152220 * C152402)))) /
        C151940;
    const double C152782 = C152776 + C152777;
    const double C152879 = C152162 * C152874;
    const double C153254 = 2 * C152874;
    const double C152935 = C152931 + C152934;
    const double C153063 = C153059 + C153053;
    const double C153188 = C152162 * C153183;
    const double C153343 = 2 * C153183;
    const double C153232 = C153218 + C153229;
    const double C152224 = C152216 + C152223;
    const double C152508 = C152207 + C152507;
    const double C152751 = C152162 * C152746;
    const double C152838 = C152834 + C152825;
    const double C3118 = C153882 * C3093;
    const double C152941 = C152354 * C152940;
    const double C153076 = C152162 * C152940;
    const double C153279 = C152162 * C153274;
    const double C153319 = C153313 + C153314;
    const double C152996 = C152993 + C152995;
    const double C153147 = C153143 + C153134;
    const double C153367 = C152162 * C153363;
    const double C152340 = C152326 + C152338;
    const double C152497 = C152308 + C152495;
    const double C152718 = C152308 + C152714;
    const double C152717 = C152713 * ae;
    const double C152716 = C152711 + C152712;
    const double C152736 = C152162 * C152733;
    const double C152735 = C152733 * ae;
    const double C8529 =
        2 * C152162 * C152375 + C152162 * (C152375 + C152733 * C152166);
    const double C152527 = C152522 + C152525;
    const double C152574 = C152572 * ae;
    const double C152573 = C152570 + C152571;
    const double C152761 = C152759 * ae;
    const double C9165 = 3 * (C152382 + C152518 * C152166) +
                         C152162 * (2 * C152584 + C152162 * C152759);
    const double C152762 = ae * C152757;
    const double C152760 = C152162 * C152757;
    const double C152845 = C152832 + C152841;
    const double C152844 = C152307 + C152839;
    const double C152980 = C152354 * C152978;
    const double C153100 = C152162 * C152978;
    const double C153099 = C152978 * ae;
    const double C31684 =
        2 * C152162 * C152544 + C152162 * (C152544 + C152978 * C152166);
    const double C153088 = C153085 * ae;
    const double C30947 = 3 * (C152479 + C152540 * C152166) +
                          C152162 * (2 * C152595 + C152162 * C153085);
    const double C153089 = ae * C153083;
    const double C153087 = C152162 * C153083;
    const double C153285 = C152162 * C153281;
    const double C153284 = C153281 * ae;
    const double C153283 = C153280 + C153271;
    const double C153330 = C153311 + C153326;
    const double C153329 = C152774 + C153324;
    const double C153019 = C153005 + C153017;
    const double C153119 = C152955 + C153115;
    const double C153118 = C153114 * ae;
    const double C153117 = C153112 + C153113;
    const double C153154 = C153141 + C153150;
    const double C153153 = C152950 + C153148;
    const double C153378 = C152162 * C153374;
    const double C153377 = C153374 * ae;
    const double C153376 = C153373 + C153365;
    const double C153435 = C153410 + C153432;
    const double C153436 = ae * C153430;
    const double C153434 = C152162 * C153430;
    const double C152315 = C152295 + C152313;
    const double C152376 = C152162 * C152374;
    const double C152422 = C152419 + C152420;
    const double C152715 = 2 * C152708;
    const double C1360 = C135 * C1349;
    const double C1933 = C135 * C1922;
    const double C15241 = C14935 * C1922;
    const double C97502 = C97196 * C1922;
    const double C152491 = C152489 + C152490;
    const double C4195 = C153882 * C4178;
    const double C19147 = C153969 * C4178;
    const double C101411 = C153969 * C4178;
    const double C3117 = C135 * C3089;
    const double C4194 = C135 * C4174;
    const double C16601 = C14935 * C4174;
    const double C98862 = C97196 * C4174;
    const double C152588 = ae * C152585;
    const double C152587 = C152162 * C152585;
    const double C152747 = 2 * C152585;
    const double C152823 = C152207 + C152699;
    const double C152700 = C152286 + C152697;
    const double C152545 = C152162 * C152543;
    const double C5564 =
        (2 * ae * (3 * C152478 + C152354 * C152543) +
         C152162 *
             (3 * C152511 +
              C152354 * (2 * C152354 * C152212 +
                         C152354 * (C152212 + C152169 * C152220 * C152402)))) /
        C151940;
    const double C4578 = (4 * (2 * C152388 + C152354 * C152478) +
                          C152354 * (3 * C152478 + C152354 * C152543)) /
                         C151933;
    const double C5561 = (C152162 * (3 * C152478 + C152354 * C152543) +
                          (3 * C152479 + C152354 * C152544) * ae) /
                         C151933;
    const double C152599 = ae * C152596;
    const double C152598 = C152162 * C152596;
    const double C153077 = 2 * C152596;
    const double C153304 = C152772 + C152788;
    const double C152789 = C152533 + C152786;
    const double C153268 = C153255 + C152878;
    const double C152883 = C152880 + C152872;
    const double C152958 = C152944 + C152956;
    const double C153044 = C153041 + C153042;
    const double C153116 = 2 * C153109;
    const double C153132 = C152933 + C153066;
    const double C153067 = C152555 + C153064;
    const double C153355 = C153344 + C153187;
    const double C153192 = C153189 + C153181;
    const double C153429 = C153414 + C153426;
    const double C153239 = ae * C153233;
    const double C153237 = C152162 * C153233;
    const double C153403 = 3 * C153233;
    const double C152314 = C152312 * ae;
    const double C142 = 5 * (3 * C152270 + C152169 * C152287) +
                        C152169 * (4 * C152287 + C152169 * C152312);
    const double C340 = 3 * C152270 + C152169 * C152287 + C152312 * C152402;
    const double C341 = C152354 * (4 * C152287 + C152169 * C152312);
    const double C561 = 3 * C152270 + C152169 * C152287 + C152312 * C152166;
    const double C562 = C152162 * (4 * C152287 + C152169 * C152312);
    const double C1085 = C152162 * C152354 * C152312;
    const double C11806 = C134 * C1486;
    const double C28228 = C134 * C4575;
    const double C34994 = C134 * C4810;
    const double C28782 = C134 * C5558;
    const double C152961 = C152959 * ae;
    const double C28218 = 5 * (3 * C152470 + C152354 * C152561) +
                          C152354 * (4 * C152561 + C152354 * C152959);
    const double C28358 = 3 * C152470 + C152354 * C152561 + C152959 * C152166;
    const double C28772 = C152162 * (4 * C152561 + C152354 * C152959);
    const double C153242 = C153238 * ae;
    const double C55638 = 5 * (3 * C152649 + C152162 * C152917) +
                          C152162 * (4 * C152917 + C152162 * C153238);
    const double C152345 = C152169 * C152343;
    const double C152367 = C152354 * C152343;
    const double C152408 = C152162 * C152343;
    const double C152498 = C152162 * C152496;
    const double C3090 = (3 * (C152290 + C152311 * C152402) +
                          C152354 * (2 * C152374 + C152354 * C152496)) /
                         C151933;
    const double C152528 = C152162 * C152526;
    const double C4577 = (4 * (2 * C152381 + C152354 * C152487) +
                          C152354 * (3 * C152487 + C152354 * C152526)) /
                         C151933;
    const double C152981 = C152965 + C152979;
    const double C153020 = C152354 * C153018;
    const double C153030 = C152162 * C153018;
    const double C154125 = C154073 / C151933;
    const double C154160 = C154129 / C151975;
    const double C154161 = C154131 + C154081;
    const double C11378 = C154081 - C153723 / C151944;
    const double C154128 = C154077 / C151933;
    const double C154147 = C154111 / C151933;
    const double C154173 = C154150 / C151975;
    const double C154174 = C154151 + C154115;
    const double C34574 = C154115 - C153928 / C151944;
    const double C154149 = C154112 / C151933;
    const double C34587 = C195 * C34572;
    const double C34586 = C194 * C34572;
    const double C34579 = C193 * C34572;
    const double C34788 = C415 * C34572;
    const double C34990 = C636 * C34572;
    const double C35194 = C414 * C34572;
    const double C35392 = C635 * C34572;
    const double C151957 = C151931 * C151949;
    const double C152002 = C151949 / C151944;
    const double C7055 =
        (ae * -2 * C151939) / (C151940 * 2 * C151933) +
        (((C151931 *
           ((-4 * C151943) / C151933 - (C151931 * C151949) / C151933) * ae) /
              C151933 +
          2 * ((C151948 * ae) / C151933 - C151939 / C151944)) *
         ae) /
            C151933 -
        C151949 / C151944;
    const double C7059 = (-C151949 / C151933) / (4 * C151940);
    const double C14934 = (-C151949 / C151933) / (2 * C151933);
    const double C46975 = (-C151949 / C151933) / (4 * C151940);
    const double C55352 =
        (-C151949 / C151933) / (4 * C151940 * std::pow(C151975, 2));
    const double C62973 = (-C151949 / C151933) / (4 * C151993);
    const double C97195 = (-C151949 / C151933) / C151975;
    const double C106479 = (-C151949 / C151933) / (4 * C151993);
    const double C115563 = (-C151949 / C151933) / C152080;
    const double C152013 = C152000 / C151933;
    const double C7103 = C7056 * C149;
    const double C7093 = C7056 * C148;
    const double C7090 = C7056 * C147;
    const double C7075 = C7056 * C146;
    const double C7066 = C7056 * C145;
    const double C7062 = C7056 * C144;
    const double C7411 = C7056 * C351;
    const double C7406 = C7056 * C344;
    const double C7398 = C7056 * C350;
    const double C7389 = C7056 * C349;
    const double C7385 = C7056 * C348;
    const double C7384 = C7056 * C347;
    const double C7380 = C7056 * C346;
    const double C7371 = C7056 * C345;
    const double C7720 = C7056 * C565;
    const double C7712 = C7056 * C571;
    const double C7703 = C7056 * C570;
    const double C7699 = C7056 * C569;
    const double C7698 = C7056 * C568;
    const double C7694 = C7056 * C567;
    const double C7685 = C7056 * C566;
    const double C7989 = C7056 * C343;
    const double C8228 = C7056 * C564;
    const double C8556 = C7056 * C1090;
    const double C8546 = C7056 * C1089;
    const double C8537 = C7056 * C1088;
    const double C8533 = C7056 * C1087;
    const double C8947 = C7056 * C1352;
    const double C8944 = C7056 * C1351;
    const double C8941 = C7056 * C1350;
    const double C9183 = C7056 * C1494;
    const double C9180 = C7056 * C1493;
    const double C9918 = C7056 * C1925;
    const double C9915 = C7056 * C1924;
    const double C9912 = C7056 * C1923;
    const double C30689 = C7056 * C3088;
    const double C30677 = C7056 * C3087;
    const double C30953 = C7056 * C3373;
    const double C31711 = C7056 * C4173;
    const double C31700 = C7056 * C4172;
    const double C32112 = C7056 * C4579;
    const double C33112 = C7056 * C5562;
    const double C7096 = C7058 * C564;
    const double C7087 = C7058 * C565;
    const double C7078 = C7058 * C566;
    const double C7069 = C7058 * C567;
    const double C7063 = C7058 * C568;
    const double C7410 = C7058 * C1922;
    const double C7407 = C7058 * C1090;
    const double C7401 = C7058 * C1923;
    const double C7392 = C7058 * C1924;
    const double C7386 = C7058 * C1925;
    const double C7383 = C7058 * C1087;
    const double C7377 = C7058 * C1088;
    const double C7368 = C7058 * C1089;
    const double C7697 = C7058 * C569;
    const double C7691 = C7058 * C570;
    const double C7682 = C7058 * C571;
    const double C8540 = C7058 * C1493;
    const double C8534 = C7058 * C1494;
    const double C8946 = C7058 * C4172;
    const double C8943 = C7058 * C4173;
    const double C8940 = C7058 * C4174;
    const double C9917 = C7058 * C3373;
    const double C30678 = C7058 * C5562;
    const double C14964 = C14933 * C149;
    const double C14961 = C14933 * C148;
    const double C14952 = C14933 * C147;
    const double C14946 = C14933 * C146;
    const double C14940 = C14933 * C145;
    const double C14937 = C14933 * C144;
    const double C15243 = C14933 * C343;
    const double C15238 = C14933 * C351;
    const double C15232 = C14933 * C350;
    const double C15226 = C14933 * C349;
    const double C15223 = C14933 * C348;
    const double C15222 = C14933 * C347;
    const double C15219 = C14933 * C346;
    const double C15213 = C14933 * C345;
    const double C15207 = C14933 * C344;
    const double C15517 = C14933 * C564;
    const double C15506 = C14933 * C571;
    const double C15500 = C14933 * C570;
    const double C15497 = C14933 * C569;
    const double C15496 = C14933 * C568;
    const double C15493 = C14933 * C567;
    const double C15487 = C14933 * C566;
    const double C15481 = C14933 * C565;
    const double C16250 = C14933 * C1090;
    const double C16244 = C14933 * C1089;
    const double C16238 = C14933 * C1088;
    const double C16235 = C14933 * C1087;
    const double C16606 = C14933 * C1352;
    const double C16604 = C14933 * C1351;
    const double C16602 = C14933 * C1350;
    const double C16600 = C14933 * C1349;
    const double C16808 = C14933 * C1494;
    const double C16806 = C14933 * C1493;
    const double C17462 = C14933 * C1925;
    const double C17460 = C14933 * C1924;
    const double C17458 = C14933 * C1923;
    const double C17456 = C14933 * C1922;
    const double C20982 = C14933 * C3087;
    const double C20980 = C14933 * C3088;
    const double C20978 = C14933 * C3089;
    const double C21288 = C14933 * C3373;
    const double C22270 = C14933 * C4172;
    const double C22268 = C14933 * C4173;
    const double C22266 = C14933 * C4174;
    const double C40254 = C14933 * C4579;
    const double C41539 = C14933 * C5562;
    const double C47019 = C46972 * C149;
    const double C47009 = C46972 * C148;
    const double C47006 = C46972 * C147;
    const double C46991 = C46972 * C146;
    const double C46982 = C46972 * C145;
    const double C46978 = C46972 * C144;
    const double C47327 = C46972 * C351;
    const double C47322 = C46972 * C344;
    const double C47314 = C46972 * C350;
    const double C47305 = C46972 * C349;
    const double C47301 = C46972 * C348;
    const double C47300 = C46972 * C347;
    const double C47296 = C46972 * C346;
    const double C47287 = C46972 * C345;
    const double C47624 = C46972 * C565;
    const double C47616 = C46972 * C571;
    const double C47607 = C46972 * C570;
    const double C47603 = C46972 * C569;
    const double C47602 = C46972 * C568;
    const double C47598 = C46972 * C567;
    const double C47589 = C46972 * C566;
    const double C47893 = C46972 * C343;
    const double C48132 = C46972 * C564;
    const double C48457 = C46972 * C1090;
    const double C48447 = C46972 * C1089;
    const double C48438 = C46972 * C1088;
    const double C48434 = C46972 * C1087;
    const double C48848 = C46972 * C1352;
    const double C48845 = C46972 * C1351;
    const double C48842 = C46972 * C1350;
    const double C49075 = C46972 * C1494;
    const double C49072 = C46972 * C1493;
    const double C49810 = C46972 * C1925;
    const double C49807 = C46972 * C1924;
    const double C49804 = C46972 * C1923;
    const double C51522 = C46972 * C3088;
    const double C51510 = C46972 * C3087;
    const double C51780 = C46972 * C3373;
    const double C52535 = C46972 * C4173;
    const double C52524 = C46972 * C4172;
    const double C52936 = C46972 * C4579;
    const double C53933 = C46972 * C5562;
    const double C47012 = C46974 * C564;
    const double C47003 = C46974 * C565;
    const double C46994 = C46974 * C566;
    const double C46985 = C46974 * C567;
    const double C46979 = C46974 * C568;
    const double C47326 = C46974 * C1922;
    const double C47323 = C46974 * C1090;
    const double C47317 = C46974 * C1923;
    const double C47308 = C46974 * C1924;
    const double C47302 = C46974 * C1925;
    const double C47299 = C46974 * C1087;
    const double C47293 = C46974 * C1088;
    const double C47284 = C46974 * C1089;
    const double C47601 = C46974 * C569;
    const double C47595 = C46974 * C570;
    const double C47586 = C46974 * C571;
    const double C48441 = C46974 * C1493;
    const double C48435 = C46974 * C1494;
    const double C48847 = C46974 * C4172;
    const double C48844 = C46974 * C4173;
    const double C48841 = C46974 * C4174;
    const double C49809 = C46974 * C3373;
    const double C51511 = C46974 * C5562;
    const double C97225 = C97194 * C149;
    const double C97222 = C97194 * C148;
    const double C97213 = C97194 * C147;
    const double C97207 = C97194 * C146;
    const double C97201 = C97194 * C145;
    const double C97198 = C97194 * C144;
    const double C97504 = C97194 * C343;
    const double C97499 = C97194 * C351;
    const double C97493 = C97194 * C350;
    const double C97487 = C97194 * C349;
    const double C97484 = C97194 * C348;
    const double C97483 = C97194 * C347;
    const double C97480 = C97194 * C346;
    const double C97474 = C97194 * C345;
    const double C97468 = C97194 * C344;
    const double C97778 = C97194 * C564;
    const double C97767 = C97194 * C571;
    const double C97761 = C97194 * C570;
    const double C97758 = C97194 * C569;
    const double C97757 = C97194 * C568;
    const double C97754 = C97194 * C567;
    const double C97748 = C97194 * C566;
    const double C97742 = C97194 * C565;
    const double C98511 = C97194 * C1090;
    const double C98505 = C97194 * C1089;
    const double C98499 = C97194 * C1088;
    const double C98496 = C97194 * C1087;
    const double C98867 = C97194 * C1352;
    const double C98865 = C97194 * C1351;
    const double C98863 = C97194 * C1350;
    const double C98861 = C97194 * C1349;
    const double C99069 = C97194 * C1494;
    const double C99067 = C97194 * C1493;
    const double C99723 = C97194 * C1925;
    const double C99721 = C97194 * C1924;
    const double C99719 = C97194 * C1923;
    const double C99717 = C97194 * C1922;
    const double C101414 = C97194 * C3089;
    const double C101403 = C97194 * C3088;
    const double C101400 = C97194 * C3087;
    const double C101748 = C97194 * C3373;
    const double C102779 = C97194 * C4174;
    const double C102773 = C97194 * C4173;
    const double C102768 = C97194 * C4172;
    const double C103290 = C97194 * C4579;
    const double C104585 = C97194 * C5562;
    const double C152053 = C152045 / C151933;
    const double C154189 = C154152 + C154185;
    const double C62964 = C154176 - (C153972 * C153961) / C151933;
    const double C106494 = C154177 * C582;
    const double C134203 = C154177 * C1499;
    const double C55342 = C154177 / C151975 - C153970 / C152083;
    const double C62988 = C62965 * C582;
    const double C66987 = C62965 * C1499;
    const double C154186 = C154154 + C154176;
    const double C629 = C621 + C604;
    const double C424 = C416 * C153865;
    const double C2852 = C416 * C154143;
    const double C3111 = C416 * C154181;
    const double C3106 = C416 * C154169;
    const double C11595 = C416 * C154107;
    const double C11593 = C416 * C153927;
    const double C24177 = C416 * C154143;
    const double C24415 = C416 * C24168;
    const double C24413 = C416 * C24169;
    const double C34789 = C416 * C34572;
    const double C70636 = C416 * C70415;
    const double C70634 = C416 * C153927;
    const double C82778 = C416 * C82771;
    const double C83016 = C416 * C153923;
    const double C83014 = C416 * C153930;
    const double C1126 = C1122 * C153865;
    const double C3388 = C1122 * C154169;
    const double C4186 = C1122 * C154181;
    const double C11799 = C1122 * C153927;
    const double C12466 = C1122 * C154107;
    const double C24643 = C1122 * C24169;
    const double C25387 = C1122 * C24168;
    const double C35654 = C1122 * C34572;
    const double C70840 = C1122 * C153927;
    const double C71502 = C1122 * C70415;
    const double C83244 = C1122 * C153930;
    const double C83988 = C1122 * C153923;
    const double C4828 = C4826 + C1505;
    const double C2282 =
        (2 * (2 * ae * C152254 + C152162 * C152176) + C152461 + C152461 +
         C152162 * (C152176 + C152458 + C152458 +
                    C152162 * (2 * ae * C152245 + C152162 * C152185))) /
        C151940;
    const double C2288 = C135 * C2277;
    const double C7700 = C7058 * C2277;
    const double C7696 = C7060 * C2277;
    const double C10518 = C7056 * C2277;
    const double C15498 = C14935 * C2277;
    const double C17988 = C14933 * C2277;
    const double C47604 = C46974 * C2277;
    const double C47600 = C46976 * C2277;
    const double C50401 = C46972 * C2277;
    const double C62979 = C62974 * C2277;
    const double C97759 = C97196 * C2277;
    const double C100249 = C97194 * C2277;
    const double C106485 = C106480 * C2277;
    const double C116188 = C152085 * C2277;
    const double C2862 = C2853 + C2854;
    const double C11391 = C11383 + C11384;
    const double C24187 = C24178 + C24179;
    const double C70432 = C70424 + C70425;
    const double C82788 = C82779 + C82780;
    const double C152293 = ae * C152292;
    const double C572 = (2 * C152260 + C152169 * C152269 + C152162 * C152292 +
                         C152162 * C152287 * ae) /
                        C151933;
    const double C185 = C174 + C175;
    const double C396 = C368 + C369;
    const double C402 = C388 + C389;
    const double C617 = C589 + C590;
    const double C1116 = C1107 + C1108;
    const double C1497 =
        (C152354 * C152195 + C152386 + C152386 +
         C152162 * (2 * ae * C152381 + C152162 * C152354 * C152207)) /
        C151940;
    const double C1503 = C135 * C1492;
    const double C7365 = C7060 * C1492;
    const double C8549 = C7058 * C1492;
    const double C9177 = C7056 * C1492;
    const double C16247 = C14935 * C1492;
    const double C16804 = C14933 * C1492;
    const double C47281 = C46976 * C1492;
    const double C48450 = C46974 * C1492;
    const double C49069 = C46972 * C1492;
    const double C98508 = C97196 * C1492;
    const double C99065 = C97194 * C1492;
    const double C115869 = C152085 * C1492;
    const double C152438 = C152437 + C152434;
    const double C3378 = (C152364 + C152197 * C152402 + C152483 + C152483 +
                          C152162 * (2 * ae * C152478 +
                                     C152162 * (C152197 + C152212 * C152402))) /
                         C151940;
    const double C3395 = C135 * C3374;
    const double C7395 = C7060 * C3374;
    const double C9914 = C7058 * C3374;
    const double C17459 = C14935 * C3374;
    const double C21286 = C14933 * C3374;
    const double C30958 = C7056 * C3374;
    const double C47311 = C46976 * C3374;
    const double C49806 = C46974 * C3374;
    const double C51785 = C46972 * C3374;
    const double C99720 = C97196 * C3374;
    const double C101755 = C97194 * C3374;
    const double C115899 = C152085 * C3374;
    const double C3135 = C3127 + C3113;
    const double C4203 = C4199 + C4189;
    const double C152613 = C152612 + C152609;
    const double C152680 = ae * C152678;
    const double C152679 = C152162 * C152678;
    const double C152862 = 3 * C152678;
    const double C152565 = ae * C152564;
    const double C4814 = (2 * C152395 + C152354 * C152469 + C152162 * C152564 +
                          C152162 * C152561 * ae) /
                         C151933;
    const double C28231 = C28225 + C4588;
    const double C28785 = C28779 + C5571;
    const double C152624 = C152623 + C152620;
    const double C152818 = ae * C152816;
    const double C152817 = C152162 * C152816;
    const double C153171 = 3 * C152816;
    const double C153217 = C153204 + C152922;
    const double C152923 = C152899 + C152921;
    const double C608 = C153882 * C583;
    const double C7082 = C154146 * C583;
    const double C7713 = C154182 * C583;
    const double C7683 = C154171 * C583;
    const double C15507 = C154109 * C583;
    const double C15485 = C153969 * C583;
    const double C46998 = C154146 * C583;
    const double C47617 = C46968 * C583;
    const double C47587 = C46969 * C583;
    const double C62997 = C62965 * C583;
    const double C97768 = C97191 * C583;
    const double C97746 = C153969 * C583;
    const double C106503 = C154177 * C583;
    const double C115586 = C115558 * C583;
    const double C116205 = C153965 * C583;
    const double C116175 = C153972 * C583;
    const double C622 = C606 + C607;
    const double C196 = C190 + C173;
    const double C413 = C405 + C373;
    const double C417 = C409 + C387;
    const double C634 = C626 + C594;
    const double C1123 = C1119 + C1106;
    const double C3393 = C153882 * C1498;
    const double C7375 = C154146 * C1498;
    const double C8541 = C154171 * C1498;
    const double C16242 = C153969 * C1498;
    const double C19463 = C154109 * C1498;
    const double C47291 = C154146 * C1498;
    const double C48442 = C46969 * C1498;
    const double C58365 = C46968 * C1498;
    const double C63255 = C62965 * C1498;
    const double C78155 = C154182 * C1498;
    const double C98503 = C153969 * C1498;
    const double C101751 = C97191 * C1498;
    const double C106761 = C154177 * C1498;
    const double C115879 = C115558 * C1498;
    const double C117030 = C153972 * C1498;
    const double C120544 = C153965 * C1498;
    const double C3406 = C3392 + C1504;
    const double C152450 = ae * C152449;
    const double C2276 =
        (2 * C152264 + C152162 * C152449 + (C152261 + C152278 * C152166) * ae) /
        C151933;
    const double C3148 = C3141 * C154169;
    const double C3147 = C3141 * C154143;
    const double C11596 = C3141 * C153927;
    const double C24416 = C3141 * C24169;
    const double C24412 = C3141 * C154143;
    const double C34582 = C3141 * C154116;
    const double C70637 = C3141 * C153927;
    const double C73975 = C3141 * C154116;
    const double C83017 = C3141 * C153930;
    const double C83013 = C3141 * C82771;
    const double C3423 = C3417 * C154143;
    const double C4187 = C3417 * C154169;
    const double C12467 = C3417 * C153927;
    const double C24642 = C3417 * C154143;
    const double C25388 = C3417 * C24169;
    const double C71503 = C3417 * C153927;
    const double C83243 = C3417 * C82771;
    const double C83989 = C3417 * C153930;
    const double C4822 = C153882 * C3377;
    const double C22264 = C153969 * C3377;
    const double C30670 = C154146 * C3377;
    const double C31691 = C154171 * C3377;
    const double C32351 = C154182 * C3377;
    const double C40552 = C154109 * C3377;
    const double C51503 = C154146 * C3377;
    const double C52515 = C46969 * C3377;
    const double C53172 = C46968 * C3377;
    const double C66993 = C62965 * C3377;
    const double C102761 = C153969 * C3377;
    const double C103592 = C97191 * C3377;
    const double C120210 = C115558 * C3377;
    const double C123345 = C153972 * C3377;
    const double C134209 = C154177 * C3377;
    const double C149855 = C153965 * C3377;
    const double C4827 = C4821 + C3390;
    const double C4591 = C4590 + C4585;
    const double C5574 = C5573 + C5568;
    const double C152637 = ae * C152636;
    const double C6167 =
        (2 * C152399 + C152162 * C152636 + (C152396 + C152552 * C152166) * ae) /
        C151933;
    const double C152658 = C152641 + C152656;
    const double C158 =
        (5 * (3 * C152195 + C152169 * C152209) +
         C152169 *
             (4 * C152209 +
              C152169 *
                  (3 * C152207 +
                   C152169 * (2 * C152169 * C152205 +
                              C152169 * (C152205 + (C152199 * C152200 +
                                                    C152166 * bs[8] *
                                                        std::pow(C152160, 8)) *
                                                       C152165 * C152181))))) /
        C151940;
    const double C355 =
        ((yP - yQ) * (3 * C152195 + C152169 * C152209)) / C151940;
    const double C363 = (2 * C152169 * C152185 + C152169 * C152195 +
                         C152209 * std::pow(yP - yQ, 2)) /
                        C151940;
    const double C576 =
        (2 * ae *
             (3 * (C152172 * C152171 * C152240 + C152242 * C152181) +
              C152169 * (2 * C152169 * C152242 +
                         C152169 * (C152242 +
                                    C152189 * C152188 * C152240 * C152181))) +
         C152162 * (3 * C152195 + C152169 * C152209)) /
        C151940;
    const double C1096 =
        (2 * ae * C152354 * C152290 + C152162 * C152354 * C152209) / C151940;
    const double C3140 = C3132 + C3101;
    const double C3416 = C3410 + C3383;
    const double C28229 = C153882 * C4581;
    const double C152882 = C152869 + C152879;
    const double C28222 =
        (5 * (3 * C152514 + C152354 * C152935) +
         C152354 * (4 * C152935 +
                    C152354 * (3 * C152933 +
                               C152354 * (2 * C152354 * C152205 +
                                          C152354 * (C152205 +
                                                     C152220 * C152402))))) /
        C151940;
    const double C153191 = C153178 + C153188;
    const double C153236 = C152162 * C153232;
    const double C153396 = 3 * C153232;
    const double C152225 = C152169 * C152224;
    const double C152709 = C152162 * C152224;
    const double C152731 = C152354 * C152224;
    const double C1354 =
        (2 * C152354 * C152209 +
         C152354 * (C152209 + C152224 * std::pow(C152354, 2))) /
        C151940;
    const double C1927 = (2 * ae * (C152290 + C152311 * C152402) +
                          C152162 * (C152209 + C152224 * C152402)) /
                         C151940;
    const double C3094 =
        (3 * (C152209 + C152224 * C152402) +
         C152354 *
             (2 * C152354 * C152224 +
              C152354 * (C152224 +
                         (2 * C152169 * C152220 +
                          C152169 * (C152220 +
                                     (C152214 * C152215 +
                                      C152166 * bs[9] * std::pow(C152164, 9)) *
                                         C152165 * C152181)) *
                             C152402))) /
        C151940;
    const double C4179 =
        (2 * ae * (2 * C152374 + C152354 * C152496) +
         C152162 *
             (2 * C152354 * C152224 +
              C152354 * (C152224 +
                         (2 * C152169 * C152220 +
                          C152169 * (C152220 +
                                     (C152214 * C152215 +
                                      C152166 * bs[9] * std::pow(C152164, 9)) *
                                         C152165 * C152181)) *
                             C152402))) /
        C151940;
    const double C4580 =
        (4 * (2 * C152354 * C152207 + C152354 * C152508) +
         C152354 *
             (3 * C152508 +
              C152354 *
                  (2 * C152354 * C152222 +
                   C152354 * (C152222 + (C152220 + (C152214 * C152215 +
                                                    C152166 * bs[9] *
                                                        std::pow(C152164, 9)) *
                                                       C152165 * C152181) *
                                            C152402)))) /
        C151940;
    const double C5563 =
        (2 * ae * (3 * C152487 + C152354 * C152526) +
         C152162 *
             (3 * C152508 +
              C152354 *
                  (2 * C152354 * C152222 +
                   C152354 * (C152222 + (C152220 + (C152214 * C152215 +
                                                    C152166 * bs[9] *
                                                        std::pow(C152164, 9)) *
                                                       C152165 * C152181) *
                                            C152402)))) /
        C151940;
    const double C152756 = C152750 + C152751;
    const double C152843 = C152162 * C152838;
    const double C152942 = C152937 + C152941;
    const double C153086 = C153082 + C153076;
    const double C153323 = C152162 * C153319;
    const double C152997 = C152354 * C152996;
    const double C153110 = C152162 * C152996;
    const double C153152 = C152162 * C153147;
    const double C152342 = C152169 * C152340;
    const double C152368 = C152354 * C152340;
    const double C152410 = C152162 * C152340;
    const double C152409 = C152340 * ae;
    const double C1343 =
        2 * C152354 * C152312 + C152354 * (C152312 + C152340 * C152402);
    const double C1916 = C152162 * (C152312 + C152340 * C152402);
    const double C2268 =
        2 * C152162 * C152312 + C152162 * (C152312 + C152340 * C152166);
    const double C152499 = C152497 * ae;
    const double C4175 = (C152162 * (2 * C152374 + C152354 * C152496) +
                          (2 * C152375 + C152354 * C152497) * ae) /
                         C151933;
    const double C3086 = 3 * (C152287 + C152308 * C152402) +
                         C152354 * (2 * C152375 + C152354 * C152497);
    const double C3372 = C152287 + C152308 * C152402 + C152497 * C152166;
    const double C4171 = C152162 * (2 * C152375 + C152354 * C152497);
    const double C152721 = C152718 * ae;
    const double C7668 = 3 * (C152287 + C152308 * C152166) +
                         C152162 * (2 * C152421 + C152162 * C152718);
    const double C152722 = ae * C152716;
    const double C152720 = C152162 * C152716;
    const double C152738 = C152736 * ae;
    const double C152737 = C152734 + C152735;
    const double C152529 = C152527 * ae;
    const double C5560 = (C152162 * (3 * C152487 + C152354 * C152526) +
                          (3 * C152488 + C152354 * C152527) * ae) /
                         C151933;
    const double C4574 = 4 * (2 * C152382 + C152354 * C152488) +
                         C152354 * (3 * C152488 + C152354 * C152527);
    const double C4809 = 2 * C152382 + C152354 * C152488 + C152527 * C152166;
    const double C5557 = C152162 * (3 * C152488 + C152354 * C152527);
    const double C152576 = ae * C152573;
    const double C152575 = C152162 * C152573;
    const double C152763 = C152516 + C152760;
    const double C152848 = C152845 * ae;
    const double C10500 = 4 * (2 * C152432 + C152162 * C152695) +
                          C152162 * (3 * C152695 + C152162 * C152845);
    const double C152847 = C152844 + C152836;
    const double C152982 = C152968 + C152980;
    const double C153102 = C153100 * ae;
    const double C153101 = C153098 + C153099;
    const double C153090 = C152538 + C153087;
    const double C153288 = C153266 + C153285;
    const double C153289 = ae * C153283;
    const double C153287 = C152162 * C153283;
    const double C153332 = C153330 * ae;
    const double C56080 = 4 * (2 * C152607 + C152162 * C152785) +
                          C152162 * (3 * C152785 + C152162 * C153330);
    const double C153331 = C153329 + C153321;
    const double C153021 = C152354 * C153019;
    const double C153032 = C152162 * C153019;
    const double C153031 = C153019 * ae;
    const double C29880 =
        2 * C152162 * C152959 + C152162 * (C152959 + C153019 * C152166);
    const double C153122 = C153119 * ae;
    const double C32340 = 3 * (C152561 + C152955 * C152166) +
                          C152162 * (2 * C153043 + C152162 * C153119);
    const double C153123 = ae * C153117;
    const double C153121 = C152162 * C153117;
    const double C153157 = C153154 * ae;
    const double C33704 = 4 * (2 * C152618 + C152162 * C153062) +
                          C152162 * (3 * C153062 + C152162 * C153154);
    const double C153156 = C153153 + C153145;
    const double C153381 = C153353 + C153378;
    const double C153382 = ae * C153376;
    const double C153380 = C152162 * C153376;
    const double C153440 = C152162 * C153435;
    const double C153439 = C153435 * ae;
    const double C153438 = C153404 + C153434;
    const double C152316 = C152162 * C152315;
    const double C150 = (5 * (3 * C152269 + C152169 * C152290) +
                         C152169 * (4 * C152290 + C152169 * C152315)) /
                        C151933;
    const double C352 =
        (3 * C152269 + C152169 * C152290 + C152315 * C152402) / C151933;
    const double C353 = (C152354 * (4 * C152290 + C152169 * C152315)) / C151933;
    const double C574 = (C152162 * (4 * C152290 + C152169 * C152315) +
                         (4 * C152287 + C152169 * C152312) * ae) /
                        C151933;
    const double C1091 =
        (C152162 * C152354 * C152315 + C152354 * C152312 * ae) / C151933;
    const double C1348 =
        (2 * C152354 * C152315 + C152354 * (C152315 + C152343 * C152402)) /
        C151933;
    const double C1921 = (C152162 * (C152315 + C152343 * C152402) +
                          (C152312 + C152340 * C152402) * ae) /
                         C151933;
    const double C152378 = C152376 + C152377;
    const double C152425 = ae * C152422;
    const double C152424 = C152162 * C152422;
    const double C152710 = 2 * C152422;
    const double C3129 = C3119 + C1360;
    const double C3875 = C3872 + C1933;
    const double C152492 = ae * C152491;
    const double C3375 = (C152269 + C152286 * C152402 + C152162 * C152491 +
                          C152162 * C152488 * ae) /
                         C151933;
    const double C3128 = C3116 + C3117;
    const double C4200 = C4193 + C4194;
    const double C152589 = C152381 + C152587;
    const double C152833 = C152823 + C152699;
    const double C152701 = C152700 + C152694;
    const double C152547 = C152545 + C152546;
    const double C28783 = C153882 * C5564;
    const double C38477 = C153969 * C5564;
    const double C101407 = C153969 * C5564;
    const double C4587 = C135 * C4578;
    const double C40252 = C14933 * C4578;
    const double C103288 = C97194 * C4578;
    const double C5570 = C135 * C5561;
    const double C20979 = C14935 * C5561;
    const double C30688 = C7058 * C5561;
    const double C41537 = C14933 * C5561;
    const double C51521 = C46974 * C5561;
    const double C101406 = C97196 * C5561;
    const double C104583 = C97194 * C5561;
    const double C152600 = C152478 + C152598;
    const double C153312 = C153304 + C152788;
    const double C152790 = C152789 + C152784;
    const double C153282 = C153268 + C153279;
    const double C152886 = ae * C152883;
    const double C152885 = C152162 * C152883;
    const double C153259 = 3 * C152883;
    const double C152960 = C152162 * C152958;
    const double C28776 =
        (2 * ae * (4 * C152560 + C152354 * C152958) +
         C152162 * (4 * C152935 +
                    C152354 * (3 * C152933 +
                               C152354 * (2 * C152354 * C152205 +
                                          C152354 * (C152205 +
                                                     C152220 * C152402))))) /
        C151940;
    const double C28220 = (5 * (3 * C152469 + C152354 * C152560) +
                           C152354 * (4 * C152560 + C152354 * C152958)) /
                          C151933;
    const double C28774 = (C152162 * (4 * C152560 + C152354 * C152958) +
                           (4 * C152561 + C152354 * C152959) * ae) /
                          C151933;
    const double C153047 = ae * C153044;
    const double C153046 = C152162 * C153044;
    const double C153111 = 2 * C153044;
    const double C153142 = C153132 + C153066;
    const double C153068 = C153067 + C153061;
    const double C153372 = C153355 + C153367;
    const double C153195 = ae * C153192;
    const double C153194 = C152162 * C153192;
    const double C153348 = 3 * C153192;
    const double C153433 = C152162 * C153429;
    const double C153413 = C153397 + C153239;
    const double C153241 = C153210 + C153237;
    const double C177 = C134 * C142;
    const double C391 = C134 * C340;
    const double C779 = C134 * C341;
    const double C612 = C134 * C561;
    const double C913 = C134 * C562;
    const double C1110 = C134 * C1085;
    const double C28998 = C134 * C28218;
    const double C29131 = C134 * C28358;
    const double C29549 = C134 * C28772;
    const double C152347 = C152321 + C152345;
    const double C152369 = C152162 * C152367;
    const double C3121 = C135 * C3090;
    const double C4586 = C135 * C4577;
    const double C152983 = C152162 * C152981;
    const double C28221 = (5 * (3 * C152478 + C152354 * C152543) +
                           C152354 * (4 * C152543 + C152354 * C152981)) /
                          C151933;
    const double C153022 = C153000 + C153020;
    const double C154187 = C154125 + C154179;
    const double C11377 = C154160 - (C153725 * C153708) / C151933;
    const double C126 = C154161 / C151975 - C153723 / C152083;
    const double C154180 = C154128 + C154160;
    const double C154188 = C154147 + C154183;
    const double C34573 = C154173 - (C153930 * C153919) / C151933;
    const double C73974 = C416 * C154174;
    const double C74179 = C3141 * C154174;
    const double C74381 = C3417 * C154174;
    const double C28093 = C154174 / C151975 - C153928 / C152083;
    const double C34581 = C416 * C34574;
    const double C34786 = C3141 * C34574;
    const double C34988 = C3417 * C34574;
    const double C154184 = C154149 + C154173;
    const double C152005 = C151957 / C151944;
    const double C151999 = C151957 / C151933;
    const double C7057 =
        (((-4 * C151943) / C151933 - C151957 / C151933) * ae) / C151944 +
        ((2 * ((0 * ae) / C151933 - C151943 / C151940) - C151957 / C151944) *
         ae) /
            C151933;
    const double C14932 =
        (((-4 * C151943) / C151933 - C151957 / C151933) * ae) / C151933;
    const double C46971 =
        (-(be * -2 * C151939) / C151940) / C151975 -
        ((2 * ((-C151939 / C151933) / C151975 - (C151948 * be) / C151933) -
          (C151931 * ((-4 * C151943) / C151933 - C151957 / C151933) * be) /
              C151933) *
         be) /
            C151933 -
        C151949 / C151944;
    const double C46973 =
        (-(((-4 * C151943) / C151933 - C151957 / C151933) * be) / C151933) /
            C151975 -
        ((2 * ((-C151945 / C151933) / C151975 - (0 * be) / C151933) -
          C151957 / C151944) *
         be) /
            C151933;
    const double C7092 = C7055 * C140;
    const double C7089 = C7055 * C139;
    const double C7074 = C7055 * C138;
    const double C7065 = C7055 * C137;
    const double C7397 = C7055 * C338;
    const double C7388 = C7055 * C337;
    const double C7379 = C7055 * C334;
    const double C7370 = C7055 * C333;
    const double C7711 = C7055 * C559;
    const double C7702 = C7055 * C558;
    const double C7693 = C7055 * C555;
    const double C7684 = C7055 * C554;
    const double C7981 = C7055 * C332;
    const double C8220 = C7055 * C553;
    const double C8545 = C7055 * C1083;
    const double C8536 = C7055 * C1082;
    const double C30680 = C7055 * C1346;
    const double C30675 = C7055 * C1347;
    const double C30665 = C7055 * C336;
    const double C30659 = C7055 * C335;
    const double C31703 = C7055 * C1919;
    const double C31698 = C7055 * C1081;
    const double C31692 = C7055 * C1920;
    const double C32104 = C7055 * C3083;
    const double C32350 = C7055 * C3369;
    const double C32344 = C7055 * C1489;
    const double C33104 = C7055 * C4168;
    const double C78154 = C7055 * C1488;
    const double C7098 = C7059 * C561;
    const double C7083 = C7059 * C560;
    const double C7080 = C7059 * C559;
    const double C7071 = C7059 * C558;
    const double C7403 = C7059 * C3371;
    const double C7394 = C7059 * C3370;
    const double C7373 = C7059 * C1488;
    const double C7364 = C7059 * C1487;
    const double C7717 = C7059 * C7667;
    const double C7708 = C7059 * C7666;
    const double C7687 = C7059 * C2271;
    const double C7678 = C7059 * C2270;
    const double C7985 = C7059 * C1486;
    const double C8224 = C7059 * C2269;
    const double C8551 = C7059 * C6157;
    const double C8542 = C7059 * C6159;
    const double C30684 = C7059 * C4810;
    const double C30671 = C7059 * C4811;
    const double C30669 = C7059 * C3369;
    const double C30663 = C7059 * C1489;
    const double C31707 = C7059 * C6158;
    const double C31694 = C7059 * C6161;
    const double C31688 = C7059 * C6160;
    const double C32108 = C7059 * C28358;
    const double C32354 = C7059 * C30946;
    const double C32348 = C7059 * C9167;
    const double C33108 = C7059 * C29881;
    const double C78158 = C7059 * C9166;
    const double C14966 = C14934 * C562;
    const double C14957 = C14934 * C552;
    const double C14954 = C14934 * C553;
    const double C14948 = C14934 * C554;
    const double C14942 = C14934 * C555;
    const double C15240 = C14934 * C1917;
    const double C15234 = C14934 * C1918;
    const double C15228 = C14934 * C1919;
    const double C15215 = C14934 * C1082;
    const double C15209 = C14934 * C1083;
    const double C15203 = C14934 * C1084;
    const double C15514 = C14934 * C2269;
    const double C15508 = C14934 * C2270;
    const double C15502 = C14934 * C2271;
    const double C15489 = C14934 * C558;
    const double C15483 = C14934 * C559;
    const double C15477 = C14934 * C560;
    const double C15755 = C14934 * C1085;
    const double C15965 = C14934 * C561;
    const double C16252 = C14934 * C1486;
    const double C16246 = C14934 * C1487;
    const double C16240 = C14934 * C1488;
    const double C19146 = C14934 * C4170;
    const double C19141 = C14934 * C4169;
    const double C19134 = C14934 * C1920;
    const double C19128 = C14934 * C1081;
    const double C19468 = C14934 * C6157;
    const double C19464 = C14934 * C6159;
    const double C20469 = C14934 * C3371;
    const double C20464 = C14934 * C3370;
    const double C20457 = C14934 * C1489;
    const double C20975 = C14934 * C4168;
    const double C21281 = C14934 * C6161;
    const double C22263 = C14934 * C3369;
    const double C38476 = C14934 * C5558;
    const double C38776 = C14934 * C6158;
    const double C39754 = C14934 * C4810;
    const double C40249 = C14934 * C5559;
    const double C40553 = C14934 * C6160;
    const double C41534 = C14934 * C4811;
    const double C44782 = C14934 * C28772;
    const double C44988 = C14934 * C29881;
    const double C45647 = C14934 * C28358;
    const double C47014 = C46975 * C561;
    const double C46999 = C46975 * C560;
    const double C46996 = C46975 * C559;
    const double C46987 = C46975 * C558;
    const double C47319 = C46975 * C3371;
    const double C47310 = C46975 * C3370;
    const double C47289 = C46975 * C1488;
    const double C47280 = C46975 * C1487;
    const double C47621 = C46975 * C7667;
    const double C47612 = C46975 * C7666;
    const double C47591 = C46975 * C2271;
    const double C47582 = C46975 * C2270;
    const double C47889 = C46975 * C1486;
    const double C48128 = C46975 * C2269;
    const double C48452 = C46975 * C6157;
    const double C48443 = C46975 * C6159;
    const double C51517 = C46975 * C4810;
    const double C51504 = C46975 * C4811;
    const double C51502 = C46975 * C3369;
    const double C51496 = C46975 * C1489;
    const double C52531 = C46975 * C6158;
    const double C52518 = C46975 * C6161;
    const double C52512 = C46975 * C6160;
    const double C52932 = C46975 * C28358;
    const double C53175 = C46975 * C30946;
    const double C53169 = C46975 * C9167;
    const double C53929 = C46975 * C29881;
    const double C58368 = C46975 * C9166;
    const double C63013 = C62973 * C2269;
    const double C62992 = C62973 * C2270;
    const double C62989 = C62973 * C2271;
    const double C63279 = C62973 * C6158;
    const double C63250 = C62973 * C6159;
    const double C63537 = C62973 * C10501;
    const double C63508 = C62973 * C7666;
    const double C63772 = C62973 * C6157;
    const double C63990 = C62973 * C7667;
    const double C64279 = C62973 * C9166;
    const double C66990 = C62973 * C6160;
    const double C66988 = C62973 * C6161;
    const double C67862 = C62973 * C9167;
    const double C68212 = C62973 * C29881;
    const double C68430 = C62973 * C33705;
    const double C69100 = C62973 * C30946;
    const double C97227 = C97195 * C562;
    const double C97218 = C97195 * C552;
    const double C97215 = C97195 * C553;
    const double C97209 = C97195 * C554;
    const double C97203 = C97195 * C555;
    const double C97501 = C97195 * C1917;
    const double C97495 = C97195 * C1918;
    const double C97489 = C97195 * C1919;
    const double C97476 = C97195 * C1082;
    const double C97470 = C97195 * C1083;
    const double C97464 = C97195 * C1084;
    const double C97775 = C97195 * C2269;
    const double C97769 = C97195 * C2270;
    const double C97763 = C97195 * C2271;
    const double C97750 = C97195 * C558;
    const double C97744 = C97195 * C559;
    const double C97738 = C97195 * C560;
    const double C98016 = C97195 * C1085;
    const double C98226 = C97195 * C561;
    const double C98513 = C97195 * C1486;
    const double C98507 = C97195 * C1487;
    const double C98501 = C97195 * C1488;
    const double C101410 = C97195 * C4170;
    const double C101405 = C97195 * C5558;
    const double C101396 = C97195 * C4168;
    const double C101390 = C97195 * C4169;
    const double C101386 = C97195 * C1920;
    const double C101382 = C97195 * C1081;
    const double C101757 = C97195 * C6158;
    const double C101752 = C97195 * C6159;
    const double C101744 = C97195 * C3370;
    const double C102364 = C97195 * C3371;
    const double C102775 = C97195 * C4810;
    const double C102764 = C97195 * C1489;
    const double C102760 = C97195 * C3369;
    const double C103285 = C97195 * C5559;
    const double C103593 = C97195 * C6160;
    const double C103589 = C97195 * C6161;
    const double C104580 = C97195 * C4811;
    const double C110946 = C97195 * C6157;
    const double C131833 = C97195 * C28772;
    const double C132039 = C97195 * C29881;
    const double C132698 = C97195 * C28358;
    const double C106519 = C106479 * C2269;
    const double C106498 = C106479 * C2270;
    const double C106495 = C106479 * C2271;
    const double C106785 = C106479 * C6158;
    const double C106756 = C106479 * C6159;
    const double C107043 = C106479 * C10501;
    const double C107014 = C106479 * C7666;
    const double C107278 = C106479 * C6157;
    const double C107496 = C106479 * C7667;
    const double C107785 = C106479 * C9166;
    const double C134206 = C106479 * C6160;
    const double C134204 = C106479 * C6161;
    const double C135078 = C106479 * C9167;
    const double C135428 = C106479 * C29881;
    const double C135646 = C106479 * C33705;
    const double C136316 = C106479 * C30946;
    const double C115602 = C115563 * C561;
    const double C115587 = C115563 * C560;
    const double C115584 = C115563 * C559;
    const double C115575 = C115563 * C558;
    const double C115907 = C115563 * C3371;
    const double C115898 = C115563 * C3370;
    const double C115877 = C115563 * C1488;
    const double C115868 = C115563 * C1487;
    const double C116209 = C115563 * C7667;
    const double C116200 = C115563 * C7666;
    const double C116179 = C115563 * C2271;
    const double C116170 = C115563 * C2270;
    const double C116477 = C115563 * C1486;
    const double C116716 = C115563 * C2269;
    const double C117040 = C115563 * C6157;
    const double C117031 = C115563 * C6159;
    const double C120220 = C115563 * C4810;
    const double C120209 = C115563 * C3369;
    const double C120204 = C115563 * C1489;
    const double C120547 = C115563 * C9166;
    const double C121538 = C115563 * C6158;
    const double C121527 = C115563 * C6161;
    const double C122048 = C115563 * C4811;
    const double C122359 = C115563 * C9167;
    const double C123346 = C115563 * C6160;
    const double C149621 = C115563 * C28358;
    const double C149858 = C115563 * C30946;
    const double C150603 = C115563 * C29881;
    const double C152021 = C152013 - C152001;
    const double C106512 = C154189 * C155;
    const double C106509 = C154189 * C154;
    const double C106488 = C154189 * C153;
    const double C106778 = C154189 * C361;
    const double C106767 = C154189 * C358;
    const double C107036 = C154189 * C582;
    const double C107025 = C154189 * C579;
    const double C107273 = C154189 * C357;
    const double C107491 = C154189 * C578;
    const double C107778 = C154189 * C1094;
    const double C134213 = C154189 * C360;
    const double C134199 = C154189 * C359;
    const double C135085 = C154189 * C1093;
    const double C135423 = C154189 * C1357;
    const double C135641 = C154189 * C1499;
    const double C136311 = C154189 * C1930;
    const double C55339 =
        (C154182 + 2 * C153965) / C151975 - (C154189 * C153961) / C151933;
    const double C63009 = C62964 * C577;
    const double C63000 = C62964 * C578;
    const double C62985 = C62964 * C579;
    const double C63275 = C62964 * C1929;
    const double C63258 = C62964 * C1094;
    const double C63516 = C62964 * C582;
    const double C63769 = C62964 * C1095;
    const double C63987 = C62964 * C583;
    const double C64275 = C62964 * C1498;
    const double C66995 = C62964 * C1930;
    const double C66985 = C62964 * C1093;
    const double C67867 = C62964 * C1499;
    const double C68209 = C62964 * C4176;
    const double C69097 = C62964 * C3377;
    const double C106515 = C154186 * C577;
    const double C106506 = C154186 * C578;
    const double C106491 = C154186 * C579;
    const double C106781 = C154186 * C1929;
    const double C106764 = C154186 * C1094;
    const double C107022 = C154186 * C582;
    const double C107275 = C154186 * C1095;
    const double C107493 = C154186 * C583;
    const double C107781 = C154186 * C1498;
    const double C134211 = C154186 * C1930;
    const double C134201 = C154186 * C1093;
    const double C135083 = C154186 * C1499;
    const double C135425 = C154186 * C4176;
    const double C136313 = C154186 * C3377;
    const double C55340 = (C154171 + 2 * C153972 + C154189) / C151975 -
                          (C154186 * C153961) / C151933;
    const double C55341 = (C154146 + C153969 / C151933 + C154186) / C151975 -
                          (C154177 * C153961) / C151933;
    const double C637 = C629 + C605;
    const double C4830 = C4828 + C4820;
    const double C584 =
        (2 * C152169 * C152185 + C152169 * C152195 + C152293 + C152293 +
         C152162 * (2 * ae * C152290 + C152162 * C152209)) /
        C151940;
    const double C610 = C135 * C572;
    const double C7084 = C7060 * C572;
    const double C7725 = C7056 * C572;
    const double C7721 = C7058 * C572;
    const double C15512 = C14933 * C572;
    const double C15478 = C14935 * C572;
    const double C47000 = C46976 * C572;
    const double C47629 = C46972 * C572;
    const double C47625 = C46974 * C572;
    const double C97773 = C97194 * C572;
    const double C97739 = C97196 * C572;
    const double C115588 = C152085 * C572;
    const double C191 = C185 + C175;
    const double C404 = C396 + C369;
    const double C410 = C402 + C389;
    const double C625 = C617 + C590;
    const double C1120 = C1116 + C1108;
    const double C3399 = C153882 * C1497;
    const double C7366 = C154146 * C1497;
    const double C8550 = C154171 * C1497;
    const double C16248 = C153969 * C1497;
    const double C19467 = C154109 * C1497;
    const double C47282 = C154146 * C1497;
    const double C48451 = C46969 * C1497;
    const double C63771 = C62965 * C1497;
    const double C98509 = C153969 * C1497;
    const double C107277 = C154177 * C1497;
    const double C110945 = C97191 * C1497;
    const double C115870 = C115558 * C1497;
    const double C117039 = C153972 * C1497;
    const double C3408 = C3398 + C1503;
    const double C152439 = ae * C152438;
    const double C2275 =
        (2 * C152273 + C152162 * C152438 + (C152270 + C152283 * C152166) * ae) /
        C151933;
    const double C3396 = C153882 * C3378;
    const double C7396 = C154146 * C3378;
    const double C20465 = C153969 * C3378;
    const double C31706 = C154171 * C3378;
    const double C38775 = C154109 * C3378;
    const double C47312 = C154146 * C3378;
    const double C52530 = C46969 * C3378;
    const double C63278 = C62965 * C3378;
    const double C101756 = C97191 * C3378;
    const double C101745 = C153969 * C3378;
    const double C106784 = C154177 * C3378;
    const double C115900 = C115558 * C3378;
    const double C121537 = C153972 * C3378;
    const double C3407 = C3394 + C3395;
    const double C3143 = C3135 + C3114;
    const double C4207 = C4203 + C4190;
    const double C152614 = ae * C152613;
    const double C6165 =
        (2 * C152392 + C152162 * C152613 + (C152389 + C152535 * C152166) * ae) /
        C151933;
    const double C152681 = C152664 + C152679;
    const double C4817 =
        (2 * C152354 * C152185 + C152354 * C152514 + C152565 + C152565 +
         C152162 * (2 * ae * C152560 +
                    C152162 * (2 * C152354 * C152193 +
                               C152354 * (C152193 + C152205 * C152402)))) /
        C151940;
    const double C4825 = C135 * C4814;
    const double C8945 = C7060 * C4814;
    const double C22269 = C14935 * C4814;
    const double C31701 = C7058 * C4814;
    const double C32358 = C7056 * C4814;
    const double C40558 = C14933 * C4814;
    const double C48846 = C46976 * C4814;
    const double C52525 = C46974 * C4814;
    const double C53179 = C46972 * C4814;
    const double C102769 = C97196 * C4814;
    const double C103598 = C97194 * C4814;
    const double C117434 = C152085 * C4814;
    const double C28233 = C28231 + C4588;
    const double C28787 = C28785 + C5571;
    const double C152625 = ae * C152624;
    const double C6166 =
        (2 * C152473 + C152162 * C152624 + (C152470 + C152557 * C152166) * ae) /
        C151933;
    const double C152819 = C152799 + C152817;
    const double C153223 = C153217 + C152922;
    const double C152924 = C152923 + C152912;
    const double C630 = C622 + C607;
    const double C202 = C196 * C153865;
    const double C2859 = C196 * C154181;
    const double C11388 = C196 * C154107;
    const double C24184 = C196 * C24168;
    const double C70429 = C196 * C70415;
    const double C82785 = C196 * C153923;
    const double C421 = C413 * C153865;
    const double C2857 = C413 * C154169;
    const double C3647 = C413 * C154181;
    const double C11386 = C413 * C153927;
    const double C11590 = C413 * C154107;
    const double C24182 = C413 * C24169;
    const double C24870 = C413 * C24168;
    const double C70427 = C413 * C153927;
    const double C70631 = C413 * C70415;
    const double C82783 = C413 * C153930;
    const double C83471 = C413 * C153923;
    const double C425 = C417 * C153865;
    const double C2855 = C417 * C154143;
    const double C3115 = C417 * C154181;
    const double C3102 = C417 * C154169;
    const double C11597 = C417 * C154107;
    const double C11591 = C417 * C153927;
    const double C24180 = C417 * C154143;
    const double C24418 = C417 * C24168;
    const double C24410 = C417 * C24169;
    const double C34584 = C417 * C34574;
    const double C70638 = C417 * C70415;
    const double C70632 = C417 * C153927;
    const double C73977 = C417 * C154174;
    const double C82781 = C417 * C82771;
    const double C83019 = C417 * C153923;
    const double C83011 = C417 * C153930;
    const double C642 = C634 * C153865;
    const double C3870 = C634 * C154181;
    const double C11796 = C634 * C154107;
    const double C25093 = C634 * C24168;
    const double C70837 = C634 * C70415;
    const double C83694 = C634 * C153923;
    const double C1127 = C1123 * C153865;
    const double C3384 = C1123 * C154169;
    const double C4191 = C1123 * C154181;
    const double C11797 = C1123 * C153927;
    const double C12468 = C1123 * C154107;
    const double C24640 = C1123 * C24169;
    const double C25390 = C1123 * C24168;
    const double C70838 = C1123 * C153927;
    const double C71504 = C1123 * C70415;
    const double C83241 = C1123 * C153930;
    const double C83991 = C1123 * C153923;
    const double C3412 = C3406 + C1504;
    const double C2281 =
        (2 * (2 * ae * C152260 + C152162 * C152364) + C152450 + C152450 +
         C152162 * (C152364 + C152447 + C152447 +
                    C152162 * (2 * ae * C152276 + C152162 * C152197))) /
        C151940;
    const double C2287 = C135 * C2276;
    const double C7706 = C7058 * C2276;
    const double C7688 = C7060 * C2276;
    const double C10515 = C7056 * C2276;
    const double C15503 = C14935 * C2276;
    const double C17986 = C14933 * C2276;
    const double C47610 = C46974 * C2276;
    const double C47592 = C46976 * C2276;
    const double C50398 = C46972 * C2276;
    const double C62990 = C62974 * C2276;
    const double C97764 = C97196 * C2276;
    const double C100247 = C97194 * C2276;
    const double C106496 = C106480 * C2276;
    const double C116180 = C152085 * C2276;
    const double C4829 = C4827 + C3390;
    const double C6173 =
        (2 * (2 * ae * C152395 + C152162 * C152627) + C152637 + C152637 +
         C152162 *
             (C152627 + C152634 + C152634 +
              C152162 * (2 * ae * C152550 + C152162 * C152354 * C152193))) /
        C151940;
    const double C6180 = C135 * C6167;
    const double C8535 = C7060 * C6167;
    const double C9182 = C7058 * C6167;
    const double C16807 = C14935 * C6167;
    const double C23056 = C14933 * C6167;
    const double C33716 = C7056 * C6167;
    const double C48436 = C46976 * C6167;
    const double C49074 = C46974 * C6167;
    const double C54531 = C46972 * C6167;
    const double C63262 = C62974 * C6167;
    const double C99068 = C97196 * C6167;
    const double C105373 = C97194 * C6167;
    const double C106768 = C106480 * C6167;
    const double C117024 = C152085 * C6167;
    const double C152659 = C152658 + C152652;
    const double C179 = C153882 * C158;
    const double C370 = C153882 * C355;
    const double C15754 = C154109 * C355;
    const double C98015 = C97191 * C355;
    const double C390 = C153882 * C363;
    const double C15239 = C154109 * C363;
    const double C97500 = C97191 * C363;
    const double C591 = C153882 * C576;
    const double C7097 = C154171 * C576;
    const double C14959 = C153969 * C576;
    const double C15964 = C154109 * C576;
    const double C47013 = C46969 * C576;
    const double C97220 = C153969 * C576;
    const double C98225 = C97191 * C576;
    const double C115601 = C153972 * C576;
    const double C1109 = C153882 * C1096;
    const double C7984 = C154171 * C1096;
    const double C15205 = C153969 * C1096;
    const double C16251 = C154109 * C1096;
    const double C47888 = C46969 * C1096;
    const double C97466 = C153969 * C1096;
    const double C98512 = C97191 * C1096;
    const double C116476 = C153972 * C1096;
    const double C3150 = C3140 * C154169;
    const double C3146 = C3140 * C154143;
    const double C11598 = C3140 * C153927;
    const double C24419 = C3140 * C24169;
    const double C24409 = C3140 * C154143;
    const double C34583 = C3140 * C154116;
    const double C35196 = C3140 * C34574;
    const double C70639 = C3140 * C153927;
    const double C73976 = C3140 * C154116;
    const double C74584 = C3140 * C154174;
    const double C83020 = C3140 * C153930;
    const double C83010 = C3140 * C82771;
    const double C3422 = C3416 * C154143;
    const double C4192 = C3416 * C154169;
    const double C12469 = C3416 * C153927;
    const double C24639 = C3416 * C154143;
    const double C25391 = C3416 * C24169;
    const double C35394 = C3416 * C34574;
    const double C71505 = C3416 * C153927;
    const double C74782 = C3416 * C154174;
    const double C83240 = C3416 * C82771;
    const double C83992 = C3416 * C153930;
    const double C28999 = C153882 * C28222;
    const double C152226 = C152211 + C152225;
    const double C152719 = C152715 + C152709;
    const double C3120 = C153882 * C1354;
    const double C3873 = C153882 * C1927;
    const double C15242 = C153969 * C1927;
    const double C97503 = C153969 * C1927;
    const double C28223 =
        (5 * (3 * C152511 + C152354 * C152942) +
         C152354 *
             (4 * C152942 +
              C152354 * (3 * C152940 +
                         C152354 * (2 * C152354 * C152938 +
                                    C152354 * (C152938 +
                                               C152169 *
                                                   (C152214 * C152215 +
                                                    C152166 * bs[9] *
                                                        std::pow(C152164, 9)) *
                                                   C152165 * C152402))))) /
        C151940;
    const double C28777 =
        (2 * ae * (4 * C152543 + C152354 * C152981) +
         C152162 *
             (4 * C152942 +
              C152354 * (3 * C152940 +
                         C152354 * (2 * C152354 * C152938 +
                                    C152354 * (C152938 +
                                               C152169 *
                                                   (C152214 * C152215 +
                                                    C152166 * bs[9] *
                                                        std::pow(C152164, 9)) *
                                                   C152165 * C152402))))) /
        C151940;
    const double C152998 = C152990 + C152997;
    const double C153120 = C153116 + C153110;
    const double C152344 = C152325 + C152342;
    const double C152370 = C152368 * ae;
    const double C1485 = C152354 * C152312 + C152368 * C152166;
    const double C152412 = C152410 * ae;
    const double C152411 = C152408 + C152409;
    const double C152500 = C152498 + C152499;
    const double C4196 = C135 * C4175;
    const double C16599 = C14935 * C4175;
    const double C98860 = C97196 * C4175;
    const double C152723 = C152311 + C152720;
    const double C152740 = ae * C152737;
    const double C152739 = C152162 * C152737;
    const double C152530 = C152528 + C152529;
    const double C5569 = C135 * C5560;
    const double C20977 = C14935 * C5560;
    const double C101413 = C97196 * C5560;
    const double C152577 = C152487 + C152575;
    const double C152764 = C152763 + C152758;
    const double C152850 = ae * C152847;
    const double C152849 = C152162 * C152847;
    const double C152984 = C152982 * ae;
    const double C28775 = (C152162 * (4 * C152543 + C152354 * C152981) +
                           (4 * C152544 + C152354 * C152982) * ae) /
                          C151933;
    const double C28219 = 5 * (3 * C152479 + C152354 * C152544) +
                          C152354 * (4 * C152544 + C152354 * C152982);
    const double C28359 = 3 * C152479 + C152354 * C152544 + C152982 * C152166;
    const double C28773 = C152162 * (4 * C152544 + C152354 * C152982);
    const double C153104 = ae * C153101;
    const double C153103 = C152162 * C153101;
    const double C153091 = C153090 + C153084;
    const double C153292 = C153288 * ae;
    const double C55639 = 5 * (3 * C152672 + C152162 * C152881) +
                          C152162 * (4 * C152881 + C152162 * C153288);
    const double C153291 = C153260 + C153287;
    const double C153334 = ae * C153331;
    const double C153333 = C152162 * C153331;
    const double C153023 = C153004 + C153021;
    const double C153034 = C153032 * ae;
    const double C153033 = C153030 + C153031;
    const double C153124 = C152954 + C153121;
    const double C153159 = ae * C153156;
    const double C153158 = C152162 * C153156;
    const double C153384 = C153381 * ae;
    const double C56424 = 5 * (3 * C152811 + C152162 * C153190) +
                          C152162 * (4 * C153190 + C152162 * C153381);
    const double C153383 = C153349 + C153380;
    const double C153443 = C153411 + C153440;
    const double C153442 = C153438 + C153423;
    const double C152317 = C152316 + C152314;
    const double C178 = C135 * C150;
    const double C14970 = C14933 * C150;
    const double C97231 = C97194 * C150;
    const double C392 = C135 * C352;
    const double C15246 = C14933 * C352;
    const double C97507 = C97194 * C352;
    const double C394 = C135 * C353;
    const double C15758 = C14933 * C353;
    const double C98019 = C97194 * C353;
    const double C615 = C135 * C574;
    const double C7102 = C7058 * C574;
    const double C14967 = C14935 * C574;
    const double C15968 = C14933 * C574;
    const double C47018 = C46974 * C574;
    const double C97228 = C97196 * C574;
    const double C98229 = C97194 * C574;
    const double C1111 = C135 * C1091;
    const double C7988 = C7058 * C1091;
    const double C15244 = C14935 * C1091;
    const double C16256 = C14933 * C1091;
    const double C47892 = C46974 * C1091;
    const double C97505 = C97196 * C1091;
    const double C98517 = C97194 * C1091;
    const double C1359 = C135 * C1348;
    const double C1932 = C135 * C1921;
    const double C15245 = C14935 * C1921;
    const double C97506 = C97196 * C1921;
    const double C152379 = ae * C152378;
    const double C1491 =
        (C152354 * C152290 + C152162 * C152378 + C152162 * C152375 * ae) /
        C151933;
    const double C152426 = C152290 + C152424;
    const double C3137 = C3129 + C1360;
    const double C3876 = C3875 + C1933;
    const double C3379 = (C152195 + C152207 * C152402 + C152492 + C152492 +
                          C152162 * (2 * ae * C152487 +
                                     C152162 * (C152207 + C152222 * C152402))) /
                         C151940;
    const double C3401 = C135 * C3375;
    const double C7404 = C7060 * C3375;
    const double C9911 = C7058 * C3375;
    const double C17457 = C14935 * C3375;
    const double C21284 = C14933 * C3375;
    const double C47320 = C46976 * C3375;
    const double C49803 = C46974 * C3375;
    const double C99718 = C97196 * C3375;
    const double C101761 = C97194 * C3375;
    const double C115908 = C152085 * C3375;
    const double C3136 = C3128 + C3117;
    const double C4204 = C4200 + C4194;
    const double C152590 = C152589 + C152586;
    const double C152846 = C152833 + C152843;
    const double C152703 = ae * C152701;
    const double C152702 = C152162 * C152701;
    const double C152826 = 3 * C152701;
    const double C152548 = ae * C152547;
    const double C4813 = (2 * C152388 + C152354 * C152478 + C152162 * C152547 +
                          C152162 * C152544 * ae) /
                         C151933;
    const double C28232 = C28228 + C4587;
    const double C28786 = C28782 + C5570;
    const double C152601 = C152600 + C152597;
    const double C153328 = C153312 + C153323;
    const double C152792 = ae * C152790;
    const double C152791 = C152162 * C152790;
    const double C153307 = 3 * C152790;
    const double C153286 = C152162 * C153282;
    const double C153267 = C153254 + C152886;
    const double C152887 = C152863 + C152885;
    const double C152962 = C152960 + C152961;
    const double C29550 = C153882 * C28776;
    const double C44783 = C153969 * C28776;
    const double C131834 = C153969 * C28776;
    const double C28227 = C135 * C28220;
    const double C44785 = C14933 * C28220;
    const double C131836 = C97194 * C28220;
    const double C28781 = C135 * C28774;
    const double C32111 = C7058 * C28774;
    const double C40253 = C14935 * C28774;
    const double C45650 = C14933 * C28774;
    const double C52935 = C46974 * C28774;
    const double C103289 = C97196 * C28774;
    const double C132701 = C97194 * C28774;
    const double C153048 = C152560 + C153046;
    const double C153155 = C153142 + C153152;
    const double C153070 = ae * C153068;
    const double C153069 = C152162 * C153068;
    const double C153135 = 3 * C153068;
    const double C153375 = C152162 * C153372;
    const double C153354 = C153343 + C153195;
    const double C153196 = C153172 + C153194;
    const double C153420 = C153413 + C153239;
    const double C153243 = C153241 + C153226;
    const double C152348 = C152162 * C152347;
    const double C1098 =
        (2 * ae * C152354 * C152347 +
         C152162 * C152354 *
             (4 * C152224 +
              C152169 *
                  (3 * C152222 +
                   C152169 * (2 * C152169 * C152220 +
                              C152169 * (C152220 + (C152214 * C152215 +
                                                    C152166 * bs[9] *
                                                        std::pow(C152164, 9)) *
                                                       C152165 * C152181))))) /
        C151940;
    const double C151 = (6 * (4 * C152290 + C152169 * C152315) +
                         C152169 * (5 * C152315 + C152169 * C152347)) /
                        C151933;
    const double C354 =
        (4 * C152290 + C152169 * C152315 + C152347 * C152402) / C151933;
    const double C776 = (C152354 * (5 * C152315 + C152169 * C152347)) / C151933;
    const double C28230 = C135 * C28221;
    const double C153024 = C152162 * C153022;
    const double C28995 = (6 * (4 * C152560 + C152354 * C152958) +
                           C152354 * (5 * C152958 + C152354 * C153022)) /
                          C151933;
    const double C123 =
        (C154178 + 2 * C153717) / C151975 - (C154187 * C153708) / C151933;
    const double C124 = (C154159 + 2 * C153725 + C154187) / C151975 -
                        (C154180 * C153708) / C151933;
    const double C125 = (C154130 + C153722 / C151933 + C154180) / C151975 -
                        (C154161 * C153708) / C151933;
    const double C73980 = C195 * C154188;
    const double C73979 = C194 * C154188;
    const double C73972 = C193 * C154188;
    const double C74182 = C416 * C154188;
    const double C74181 = C415 * C154188;
    const double C74383 = C636 * C154188;
    const double C74582 = C414 * C154188;
    const double C74780 = C635 * C154188;
    const double C75042 = C1122 * C154188;
    const double C28090 =
        (C154181 + 2 * C153923) / C151975 - (C154188 * C153919) / C151933;
    const double C34588 = C413 * C34573;
    const double C34585 = C414 * C34573;
    const double C34580 = C415 * C34573;
    const double C34790 = C3141 * C34573;
    const double C34787 = C416 * C34573;
    const double C34989 = C1122 * C34573;
    const double C35195 = C417 * C34573;
    const double C35393 = C1123 * C34573;
    const double C35655 = C3417 * C34573;
    const double C73981 = C413 * C154184;
    const double C73978 = C414 * C154184;
    const double C73973 = C415 * C154184;
    const double C74183 = C3141 * C154184;
    const double C74180 = C416 * C154184;
    const double C74382 = C1122 * C154184;
    const double C74583 = C417 * C154184;
    const double C74781 = C1123 * C154184;
    const double C75043 = C3417 * C154184;
    const double C28091 = (C154169 + 2 * C153930 + C154188) / C151975 -
                          (C154184 * C153919) / C151933;
    const double C28092 = (C154143 + C153927 / C151933 + C154184) / C151975 -
                          (C154174 * C153919) / C151933;
    const double C152038 = C152030 - C152005;
    const double C152020 = C152012 - C151999;
    const double C7095 = C7057 * C552;
    const double C7086 = C7057 * C553;
    const double C7077 = C7057 * C554;
    const double C7068 = C7057 * C555;
    const double C7400 = C7057 * C1918;
    const double C7391 = C7057 * C1919;
    const double C7376 = C7057 * C1082;
    const double C7367 = C7057 * C1083;
    const double C7714 = C7057 * C2270;
    const double C7705 = C7057 * C2271;
    const double C7690 = C7057 * C558;
    const double C7681 = C7057 * C559;
    const double C7983 = C7057 * C1084;
    const double C8222 = C7057 * C560;
    const double C8548 = C7057 * C1487;
    const double C8539 = C7057 * C1488;
    const double C30682 = C7057 * C4169;
    const double C30673 = C7057 * C4168;
    const double C30667 = C7057 * C1920;
    const double C30661 = C7057 * C1081;
    const double C31705 = C7057 * C3370;
    const double C31696 = C7057 * C1489;
    const double C31690 = C7057 * C3369;
    const double C32106 = C7057 * C5559;
    const double C32352 = C7057 * C6160;
    const double C32346 = C7057 * C6161;
    const double C33106 = C7057 * C4811;
    const double C78156 = C7057 * C6159;
    const double C14963 = C14932 * C141;
    const double C14960 = C14932 * C140;
    const double C14951 = C14932 * C139;
    const double C14945 = C14932 * C138;
    const double C14939 = C14932 * C137;
    const double C15237 = C14932 * C339;
    const double C15231 = C14932 * C338;
    const double C15225 = C14932 * C337;
    const double C15218 = C14932 * C334;
    const double C15212 = C14932 * C333;
    const double C15206 = C14932 * C332;
    const double C15511 = C14932 * C560;
    const double C15505 = C14932 * C559;
    const double C15499 = C14932 * C558;
    const double C15492 = C14932 * C555;
    const double C15486 = C14932 * C554;
    const double C15480 = C14932 * C553;
    const double C15753 = C14932 * C331;
    const double C15963 = C14932 * C552;
    const double C16249 = C14932 * C1084;
    const double C16243 = C14932 * C1083;
    const double C16237 = C14932 * C1082;
    const double C19144 = C14932 * C1345;
    const double C19139 = C14932 * C1346;
    const double C19136 = C14932 * C336;
    const double C19126 = C14932 * C335;
    const double C19466 = C14932 * C1487;
    const double C19462 = C14932 * C1488;
    const double C20467 = C14932 * C1918;
    const double C20462 = C14932 * C1919;
    const double C20459 = C14932 * C1081;
    const double C20973 = C14932 * C1347;
    const double C21279 = C14932 * C1489;
    const double C22261 = C14932 * C1920;
    const double C38474 = C14932 * C3084;
    const double C38774 = C14932 * C3370;
    const double C39752 = C14932 * C4169;
    const double C40247 = C14932 * C3083;
    const double C40551 = C14932 * C3369;
    const double C41532 = C14932 * C4168;
    const double C44780 = C14932 * C4576;
    const double C44986 = C14932 * C4811;
    const double C45645 = C14932 * C5559;
    const double C47008 = C46971 * C140;
    const double C47005 = C46971 * C139;
    const double C46990 = C46971 * C138;
    const double C46981 = C46971 * C137;
    const double C47313 = C46971 * C338;
    const double C47304 = C46971 * C337;
    const double C47295 = C46971 * C334;
    const double C47286 = C46971 * C333;
    const double C47615 = C46971 * C559;
    const double C47606 = C46971 * C558;
    const double C47597 = C46971 * C555;
    const double C47588 = C46971 * C554;
    const double C47885 = C46971 * C332;
    const double C48124 = C46971 * C553;
    const double C48446 = C46971 * C1083;
    const double C48437 = C46971 * C1082;
    const double C51513 = C46971 * C1346;
    const double C51508 = C46971 * C1347;
    const double C51498 = C46971 * C336;
    const double C51492 = C46971 * C335;
    const double C52527 = C46971 * C1919;
    const double C52522 = C46971 * C1081;
    const double C52516 = C46971 * C1920;
    const double C52928 = C46971 * C3083;
    const double C53171 = C46971 * C3369;
    const double C53165 = C46971 * C1489;
    const double C53925 = C46971 * C4168;
    const double C58364 = C46971 * C1488;
    const double C47011 = C46973 * C552;
    const double C47002 = C46973 * C553;
    const double C46993 = C46973 * C554;
    const double C46984 = C46973 * C555;
    const double C47316 = C46973 * C1918;
    const double C47307 = C46973 * C1919;
    const double C47292 = C46973 * C1082;
    const double C47283 = C46973 * C1083;
    const double C47618 = C46973 * C2270;
    const double C47609 = C46973 * C2271;
    const double C47594 = C46973 * C558;
    const double C47585 = C46973 * C559;
    const double C47887 = C46973 * C1084;
    const double C48126 = C46973 * C560;
    const double C48449 = C46973 * C1487;
    const double C48440 = C46973 * C1488;
    const double C51515 = C46973 * C4169;
    const double C51506 = C46973 * C4168;
    const double C51500 = C46973 * C1920;
    const double C51494 = C46973 * C1081;
    const double C52529 = C46973 * C3370;
    const double C52520 = C46973 * C1489;
    const double C52514 = C46973 * C3369;
    const double C52930 = C46973 * C5559;
    const double C53173 = C46973 * C6160;
    const double C53167 = C46973 * C6161;
    const double C53927 = C46973 * C4811;
    const double C58366 = C46973 * C6159;
    const double C7113 = C7092 + C7093;
    const double C7112 = C7089 + C7090;
    const double C7107 = C7074 + C7075;
    const double C7104 = C7065 + C7066;
    const double C7421 = C7397 + C7398;
    const double C7418 = C7388 + C7389;
    const double C7417 = C7379 + C7380;
    const double C7414 = C7370 + C7371;
    const double C7735 = C7711 + C7712;
    const double C7732 = C7702 + C7703;
    const double C7731 = C7693 + C7694;
    const double C7728 = C7684 + C7685;
    const double C7991 = C7981 + C7406;
    const double C8230 = C8220 + C7720;
    const double C8560 = C8545 + C8546;
    const double C8557 = C8536 + C8537;
    const double C30699 = C30680 + C8944;
    const double C30698 = C30675 + C8947;
    const double C30693 = C30665 + C7385;
    const double C30690 = C30659 + C7384;
    const double C31718 = C31703 + C9915;
    const double C31717 = C31698 + C8533;
    const double C31714 = C31692 + C9918;
    const double C32114 = C32104 + C30677;
    const double C32362 = C32350 + C30953;
    const double C32359 = C32344 + C9183;
    const double C33114 = C33104 + C31700;
    const double C78160 = C78154 + C9180;
    const double C7109 = C7080 + C7081;
    const double C7106 = C7071 + C7072;
    const double C7420 = C7394 + C7395;
    const double C7415 = C7373 + C7374;
    const double C7412 = C7364 + C7365;
    const double C30695 = C30669 + C7387;
    const double C30692 = C30663 + C7382;
    const double C14977 = C14957 + C14958;
    const double C14976 = C14954 + C14955;
    const double C14974 = C14948 + C14949;
    const double C14972 = C14942 + C14943;
    const double C15258 = C15240 + C15241;
    const double C15256 = C15234 + C15235;
    const double C15254 = C15228 + C15229;
    const double C15251 = C15215 + C15216;
    const double C15249 = C15209 + C15210;
    const double C15247 = C15203 + C15204;
    const double C15525 = C15489 + C15490;
    const double C15523 = C15483 + C15484;
    const double C16260 = C16246 + C16247;
    const double C16258 = C16240 + C16241;
    const double C19155 = C19146 + C16601;
    const double C19153 = C19141 + C16603;
    const double C19150 = C19134 + C15224;
    const double C19149 = C19128 + C15221;
    const double C20474 = C20464 + C17459;
    const double C20471 = C20457 + C16236;
    const double C20984 = C20975 + C16605;
    const double C22272 = C22263 + C17461;
    const double C38479 = C38476 + C20979;
    const double C40256 = C40249 + C20981;
    const double C47025 = C46996 + C46997;
    const double C47022 = C46987 + C46988;
    const double C47336 = C47310 + C47311;
    const double C47331 = C47289 + C47290;
    const double C47328 = C47280 + C47281;
    const double C51528 = C51502 + C47303;
    const double C51525 = C51496 + C47298;
    const double C97238 = C97218 + C97219;
    const double C97237 = C97215 + C97216;
    const double C97235 = C97209 + C97210;
    const double C97233 = C97203 + C97204;
    const double C97519 = C97501 + C97502;
    const double C97517 = C97495 + C97496;
    const double C97515 = C97489 + C97490;
    const double C97512 = C97476 + C97477;
    const double C97510 = C97470 + C97471;
    const double C97508 = C97464 + C97465;
    const double C97786 = C97750 + C97751;
    const double C97784 = C97744 + C97745;
    const double C98521 = C98507 + C98508;
    const double C98519 = C98501 + C98502;
    const double C101426 = C101410 + C98862;
    const double C101424 = C101405 + C101406;
    const double C101421 = C101396 + C98866;
    const double C101419 = C101390 + C98864;
    const double C101418 = C101386 + C97485;
    const double C101416 = C101382 + C97482;
    const double C101762 = C101744 + C99720;
    const double C102782 = C102764 + C98497;
    const double C102780 = C102760 + C99722;
    const double C103292 = C103285 + C101401;
    const double C115613 = C115584 + C115585;
    const double C115610 = C115575 + C115576;
    const double C115924 = C115898 + C115899;
    const double C115919 = C115877 + C115878;
    const double C115916 = C115868 + C115869;
    const double C120228 = C120209 + C115891;
    const double C120224 = C120204 + C115886;
    const double C152031 = C152021 / C151975;
    const double C152029 = C151931 * C152021;
    const double C152028 = 2 * C152021;
    const double C645 = C637 * C153865;
    const double C3391 = C637 * C154181;
    const double C11801 = C637 * C154107;
    const double C24645 = C637 * C24168;
    const double C34991 = C637 * C34572;
    const double C70842 = C637 * C70415;
    const double C74384 = C637 * C154188;
    const double C83246 = C637 * C153923;
    const double C611 = C153882 * C584;
    const double C7085 = C154146 * C584;
    const double C8223 = C154171 * C584;
    const double C15513 = C154109 * C584;
    const double C15479 = C153969 * C584;
    const double C47001 = C154146 * C584;
    const double C48127 = C46969 * C584;
    const double C63012 = C62965 * C584;
    const double C97774 = C97191 * C584;
    const double C97740 = C153969 * C584;
    const double C106518 = C154177 * C584;
    const double C115589 = C115558 * C584;
    const double C116715 = C153972 * C584;
    const double C623 = C609 + C610;
    const double C7110 = C7083 + C7084;
    const double C15521 = C15477 + C15478;
    const double C47026 = C46999 + C47000;
    const double C97782 = C97738 + C97739;
    const double C115614 = C115587 + C115588;
    const double C197 = C191 + C176;
    const double C3414 = C3408 + C1503;
    const double C2280 =
        (2 * (2 * ae * C152269 + C152162 * C152195) + C152439 + C152439 +
         C152162 * (C152195 + C152436 + C152436 +
                    C152162 * (2 * ae * C152286 + C152162 * C152207))) /
        C151940;
    const double C2286 = C135 * C2275;
    const double C7715 = C7058 * C2275;
    const double C7679 = C7060 * C2275;
    const double C10512 = C7056 * C2275;
    const double C15509 = C14935 * C2275;
    const double C17984 = C14933 * C2275;
    const double C47619 = C46974 * C2275;
    const double C47583 = C46976 * C2275;
    const double C50395 = C46972 * C2275;
    const double C62993 = C62974 * C2275;
    const double C97770 = C97196 * C2275;
    const double C100245 = C97194 * C2275;
    const double C106499 = C106480 * C2275;
    const double C116171 = C152085 * C2275;
    const double C3413 = C3407 + C3395;
    const double C3149 = C3143 * C154143;
    const double C24417 = C3143 * C154143;
    const double C34791 = C3143 * C34574;
    const double C34785 = C3143 * C154116;
    const double C74184 = C3143 * C154174;
    const double C74178 = C3143 * C154116;
    const double C83018 = C3143 * C82771;
    const double C4209 = C4207 * C154143;
    const double C25389 = C4207 * C154143;
    const double C34987 = C4207 * C154116;
    const double C35656 = C4207 * C34574;
    const double C74380 = C4207 * C154116;
    const double C75044 = C4207 * C154174;
    const double C83990 = C4207 * C82771;
    const double C6171 =
        (2 * (2 * ae * C152388 + C152162 * C152604) + C152614 + C152614 +
         C152162 *
             (C152604 + C152611 + C152611 +
              C152162 * (2 * ae * C152533 + C152162 * C152354 * C152212))) /
        C151940;
    const double C6178 = C135 * C6165;
    const double C8543 = C7060 * C6165;
    const double C9179 = C7058 * C6165;
    const double C16805 = C14935 * C6165;
    const double C23054 = C14933 * C6165;
    const double C48444 = C46976 * C6165;
    const double C49071 = C46974 * C6165;
    const double C61867 = C46972 * C6165;
    const double C63251 = C62974 * C6165;
    const double C81657 = C7056 * C6165;
    const double C99066 = C97196 * C6165;
    const double C105369 = C97194 * C6165;
    const double C106757 = C106480 * C6165;
    const double C117032 = C152085 * C6165;
    const double C152682 = C152681 + C152675;
    const double C29130 = C153882 * C4817;
    const double C30672 = C154146 * C4817;
    const double C33107 = C154171 * C4817;
    const double C41535 = C153969 * C4817;
    const double C44987 = C154109 * C4817;
    const double C51505 = C154146 * C4817;
    const double C53928 = C46969 * C4817;
    const double C68211 = C62965 * C4817;
    const double C104581 = C153969 * C4817;
    const double C122049 = C115558 * C4817;
    const double C132038 = C97191 * C4817;
    const double C135427 = C154177 * C4817;
    const double C150602 = C153972 * C4817;
    const double C29134 = C29129 + C4825;
    const double C30696 = C30671 + C8945;
    const double C41541 = C41534 + C22269;
    const double C51529 = C51504 + C48846;
    const double C104587 = C104580 + C102769;
    const double C122058 = C122048 + C117434;
    const double C28235 = C28233 + C28226;
    const double C28789 = C28787 + C28780;
    const double C6172 =
        (2 * (2 * ae * C152469 + C152162 * C152514) + C152625 + C152625 +
         C152162 * (C152514 + C152622 + C152622 +
                    C152162 * (2 * ae * C152555 +
                               C152162 * (C152193 + C152205 * C152402)))) /
        C151940;
    const double C6179 = C135 * C6166;
    const double C9916 = C7060 * C6166;
    const double C21287 = C14935 * C6166;
    const double C30954 = C7058 * C6166;
    const double C33713 = C7056 * C6166;
    const double C42323 = C14933 * C6166;
    const double C49808 = C46976 * C6166;
    const double C51781 = C46974 * C6166;
    const double C54528 = C46972 * C6166;
    const double C63269 = C62974 * C6166;
    const double C101749 = C97196 * C6166;
    const double C105371 = C97194 * C6166;
    const double C106775 = C106480 * C6166;
    const double C118396 = C152085 * C6166;
    const double C152820 = C152819 + C152813;
    const double C153240 = C153223 + C153236;
    const double C152926 = ae * C152924;
    const double C152925 = C152162 * C152924;
    const double C153208 = 4 * C152924;
    const double C638 = C630 + C608;
    const double C2863 = C2857 + C2858;
    const double C11394 = C11386 + C11385;
    const double C11392 = C11385 + C11386;
    const double C24188 = C24182 + C24183;
    const double C70435 = C70427 + C70426;
    const double C70433 = C70426 + C70427;
    const double C82789 = C82783 + C82784;
    const double C2864 = C2862 + C2855;
    const double C3646 = C3102 + C3103;
    const double C12007 = C11591 + C11592;
    const double C24189 = C24187 + C24180;
    const double C24869 = C24410 + C24411;
    const double C71043 = C70632 + C70633;
    const double C82790 = C82788 + C82781;
    const double C83470 = C83011 + C83012;
    const double C3869 = C3384 + C3385;
    const double C12205 = C11797 + C11798;
    const double C25092 = C24640 + C24641;
    const double C71241 = C70838 + C70839;
    const double C83693 = C83241 + C83242;
    const double C3418 = C3412 + C3393;
    const double C7707 = C154171 * C2281;
    const double C7689 = C154146 * C2281;
    const double C15504 = C153969 * C2281;
    const double C47611 = C46969 * C2281;
    const double C47593 = C154146 * C2281;
    const double C62991 = C154123 * C2281;
    const double C63533 = C62964 * C2281;
    const double C63513 = C62965 * C2281;
    const double C97765 = C153969 * C2281;
    const double C106497 = C154123 * C2281;
    const double C107039 = C154186 * C2281;
    const double C107019 = C154177 * C2281;
    const double C116199 = C153972 * C2281;
    const double C116181 = C115558 * C2281;
    const double C7729 = C7687 + C7688;
    const double C15528 = C15502 + C15503;
    const double C47633 = C47591 + C47592;
    const double C63023 = C62989 + C62990;
    const double C97789 = C97763 + C97764;
    const double C106529 = C106495 + C106496;
    const double C116221 = C116179 + C116180;
    const double C4831 = C4829 + C4822;
    const double C21282 = C153969 * C6173;
    const double C31695 = C154146 * C6173;
    const double C32347 = C154171 * C6173;
    const double C52519 = C154146 * C6173;
    const double C53168 = C46969 * C6173;
    const double C66989 = C154123 * C6173;
    const double C67865 = C62965 * C6173;
    const double C68427 = C62964 * C6173;
    const double C103590 = C153969 * C6173;
    const double C121528 = C115558 * C6173;
    const double C122358 = C153972 * C6173;
    const double C134205 = C154123 * C6173;
    const double C135081 = C154177 * C6173;
    const double C135643 = C154186 * C6173;
    const double C31715 = C31694 + C8535;
    const double C21290 = C21281 + C16807;
    const double C52539 = C52518 + C48436;
    const double C67001 = C66988 + C63262;
    const double C103600 = C103589 + C99068;
    const double C134217 = C134204 + C106768;
    const double C121541 = C121527 + C117024;
    const double C152660 = ae * C152659;
    const double C7669 = (3 * C152460 + C152162 * C152659 +
                          (2 * C152454 + C152162 * C152649) * ae) /
                         C151933;
    const double C412 = C404 + C370;
    const double C418 = C410 + C390;
    const double C633 = C625 + C591;
    const double C1124 = C1120 + C1109;
    const double C159 =
        (6 * (4 * C152209 + C152169 * C152226) +
         C152169 *
             (5 * C152226 +
              C152169 *
                  (4 * C152224 +
                   C152169 *
                       (3 * C152222 +
                        C152169 *
                            (2 * C152169 * C152220 +
                             C152169 * (C152220 + (C152214 * C152215 +
                                                   C152166 * bs[9] *
                                                       std::pow(C152164, 9)) *
                                                      C152165 * C152181)))))) /
        C151940;
    const double C364 =
        (3 * C152195 + C152169 * C152209 + C152226 * std::pow(yP - yQ, 2)) /
        C151940;
    const double C365 =
        ((yP - yQ) * (4 * C152209 + C152169 * C152226)) / C151940;
    const double C366 =
        (4 * C152209 + C152169 * C152226 +
         (4 * C152224 +
          C152169 *
              (3 * C152222 +
               C152169 * (2 * C152169 * C152220 +
                          C152169 * (C152220 +
                                     (C152214 * C152215 +
                                      C152166 * bs[9] * std::pow(C152164, 9)) *
                                         C152165 * C152181)))) *
             std::pow(yP - yQ, 2)) /
        C151940;
    const double C586 = (2 * ae * (4 * C152290 + C152169 * C152315) +
                         C152162 * (4 * C152209 + C152169 * C152226)) /
                        C151940;
    const double C777 =
        ((yP - yQ) *
         (5 * C152226 +
          C152169 *
              (4 * C152224 +
               C152169 * (3 * C152222 +
                          C152169 * (2 * C152169 * C152220 +
                                     C152169 * (C152220 +
                                                (C152214 * C152215 +
                                                 C152166 * bs[9] *
                                                     std::pow(C152164, 9)) *
                                                    C152165 * C152181)))))) /
        C151940;
    const double C911 =
        (2 * ae * (5 * C152315 + C152169 * C152347) +
         C152162 *
             (5 * C152226 +
              C152169 *
                  (4 * C152224 +
                   C152169 *
                       (3 * C152222 +
                        C152169 *
                            (2 * C152169 * C152220 +
                             C152169 * (C152220 + (C152214 * C152215 +
                                                   C152166 * bs[9] *
                                                       std::pow(C152164, 9)) *
                                                      C152165 * C152181)))))) /
        C151940;
    const double C1097 =
        (2 * ae * C152354 * C152315 + C152162 * C152354 * C152226) / C151940;
    const double C1353 =
        (2 * C152354 * C152226 +
         C152354 *
             (C152226 +
              (3 * C152222 +
               C152169 * (2 * C152169 * C152220 +
                          C152169 * (C152220 +
                                     (C152214 * C152215 +
                                      C152166 * bs[9] * std::pow(C152164, 9)) *
                                         C152165 * C152181))) *
                  std::pow(C152354, 2))) /
        C151940;
    const double C1926 =
        (2 * ae * (C152315 + C152343 * C152402) +
         C152162 *
             (C152226 +
              (3 * C152222 +
               C152169 * (2 * C152169 * C152220 +
                          C152169 * (C152220 +
                                     (C152214 * C152215 +
                                      C152166 * bs[9] * std::pow(C152164, 9)) *
                                         C152165 * C152181))) *
                  C152402)) /
        C151940;
    const double C28996 =
        (6 * (4 * C152935 + C152354 * C152998) +
         C152354 *
             (5 * C152998 +
              C152354 *
                  (4 * C152996 +
                   C152354 *
                       (3 * C152994 +
                        C152354 *
                            (2 * C152354 * C152220 +
                             C152354 * (C152220 + (C152214 * C152215 +
                                                   C152166 * bs[9] *
                                                       std::pow(C152164, 9)) *
                                                      C152165 * C152402)))))) /
        C151940;
    const double C29547 =
        (2 * ae * (5 * C152958 + C152354 * C153022) +
         C152162 *
             (5 * C152998 +
              C152354 *
                  (4 * C152996 +
                   C152354 *
                       (3 * C152994 +
                        C152354 *
                            (2 * C152354 * C152220 +
                             C152354 * (C152220 + (C152214 * C152215 +
                                                   C152166 * bs[9] *
                                                       std::pow(C152164, 9)) *
                                                      C152165 * C152402)))))) /
        C151940;
    const double C152346 = C152344 * ae;
    const double C910 = (C152162 * (5 * C152315 + C152169 * C152347) +
                         (5 * C152312 + C152169 * C152344) * ae) /
                        C151933;
    const double C1092 =
        (C152162 * C152354 * C152347 + C152354 * C152344 * ae) / C151933;
    const double C143 = 6 * (4 * C152287 + C152169 * C152312) +
                        C152169 * (5 * C152312 + C152169 * C152344);
    const double C342 = 4 * C152287 + C152169 * C152312 + C152344 * C152402;
    const double C563 = 4 * C152287 + C152169 * C152312 + C152344 * C152166;
    const double C775 = C152354 * (5 * C152312 + C152169 * C152344);
    const double C909 = C152162 * (5 * C152312 + C152169 * C152344);
    const double C1086 = C152162 * C152354 * C152344;
    const double C152371 = C152369 + C152370;
    const double C152414 = ae * C152411;
    const double C152413 = C152162 * C152411;
    const double C152501 = ae * C152500;
    const double C3376 = (C152290 + C152311 * C152402 + C152162 * C152500 +
                          C152162 * C152497 * ae) /
                         C151933;
    const double C152724 = C152723 + C152717;
    const double C152741 = C152374 + C152739;
    const double C152531 = ae * C152530;
    const double C4812 = (2 * C152381 + C152354 * C152487 + C152162 * C152530 +
                          C152162 * C152527 * ae) /
                         C151933;
    const double C152578 = C152577 + C152574;
    const double C152766 = ae * C152764;
    const double C152765 = C152162 * C152764;
    const double C152851 = C152827 + C152849;
    const double C152985 = C152983 + C152984;
    const double C28784 = C135 * C28775;
    const double C40251 = C14935 * C28775;
    const double C103287 = C97196 * C28775;
    const double C153105 = C152543 + C153103;
    const double C153093 = ae * C153091;
    const double C153092 = C152162 * C153091;
    const double C153293 = C153291 + C153276;
    const double C153335 = C153308 + C153333;
    const double C153025 = C153023 * ae;
    const double C29546 = (C152162 * (5 * C152958 + C152354 * C153022) +
                           (5 * C152959 + C152354 * C153023) * ae) /
                          C151933;
    const double C28994 = 6 * (4 * C152561 + C152354 * C152959) +
                          C152354 * (5 * C152959 + C152354 * C153023);
    const double C29125 = 4 * C152561 + C152354 * C152959 + C153023 * C152166;
    const double C29545 = C152162 * (5 * C152959 + C152354 * C153023);
    const double C153036 = ae * C153033;
    const double C153035 = C152162 * C153033;
    const double C153125 = C153124 + C153118;
    const double C153160 = C153136 + C153158;
    const double C153385 = C153383 + C153369;
    const double C153446 = C153443 * ae;
    const double C57169 = 6 * (4 * C152917 + C152162 * C153238) +
                          C152162 * (5 * C153238 + C152162 * C153443);
    const double C153447 = ae * C153442;
    const double C153445 = C152162 * C153442;
    const double C152318 = ae * C152317;
    const double C573 = (3 * C152269 + C152169 * C152290 + C152162 * C152317 +
                         C152162 * C152312 * ae) /
                        C151933;
    const double C186 = C177 + C178;
    const double C403 = C391 + C392;
    const double C782 = C779 + C394;
    const double C916 = C913 + C615;
    const double C14980 = C14966 + C14967;
    const double C97241 = C97227 + C97228;
    const double C1117 = C1110 + C1111;
    const double C15762 = C15755 + C15244;
    const double C98023 = C98016 + C97505;
    const double C1496 =
        (C152354 * C152209 + C152379 + C152379 +
         C152162 * (2 * ae * C152374 + C152162 * C152354 * C152224)) /
        C151940;
    const double C1502 = C135 * C1491;
    const double C7408 = C7060 * C1491;
    const double C8555 = C7058 * C1491;
    const double C16253 = C14935 * C1491;
    const double C16802 = C14933 * C1491;
    const double C47324 = C46976 * C1491;
    const double C48456 = C46974 * C1491;
    const double C98514 = C97196 * C1491;
    const double C99063 = C97194 * C1491;
    const double C115912 = C152085 * C1491;
    const double C152427 = C152426 + C152423;
    const double C3145 = C3137 + C3120;
    const double C3877 = C3876 + C3873;
    const double C3402 = C153882 * C3379;
    const double C7405 = C154146 * C3379;
    const double C20470 = C153969 * C3379;
    const double C47321 = C154146 * C3379;
    const double C102365 = C153969 * C3379;
    const double C115909 = C115558 * C3379;
    const double C3409 = C3400 + C3401;
    const double C7423 = C7403 + C7404;
    const double C20476 = C20469 + C17457;
    const double C47339 = C47319 + C47320;
    const double C102367 = C102364 + C99718;
    const double C115927 = C115907 + C115908;
    const double C3144 = C3136 + C3118;
    const double C4208 = C4204 + C4195;
    const double C152591 = ae * C152590;
    const double C6163 =
        (2 * C152385 + C152162 * C152590 + (C152382 + C152518 * C152166) * ae) /
        C151933;
    const double C152704 = C152687 + C152702;
    const double C4816 =
        (2 * C152354 * C152197 + C152354 * C152511 + C152548 + C152548 +
         C152162 *
             (2 * ae * C152543 +
              C152162 * (2 * C152354 * C152212 +
                         C152354 * (C152212 + C152169 * C152220 * C152402)))) /
        C151940;
    const double C4824 = C135 * C4813;
    const double C8942 = C7060 * C4813;
    const double C22267 = C14935 * C4813;
    const double C31710 = C7058 * C4813;
    const double C40556 = C14933 * C4813;
    const double C48843 = C46976 * C4813;
    const double C52534 = C46974 * C4813;
    const double C102776 = C97196 * C4813;
    const double C103596 = C97194 * C4813;
    const double C117431 = C152085 * C4813;
    const double C28234 = C28232 + C4587;
    const double C28788 = C28786 + C5570;
    const double C152602 = ae * C152601;
    const double C6164 =
        (2 * C152482 + C152162 * C152601 + (C152479 + C152540 * C152166) * ae) /
        C151933;
    const double C152793 = C152773 + C152791;
    const double C153273 = C153267 + C152886;
    const double C152888 = C152887 + C152876;
    const double C152963 = ae * C152962;
    const double C28360 = (3 * C152469 + C152354 * C152560 + C152162 * C152962 +
                           C152162 * C152959 * ae) /
                          C151933;
    const double C29001 = C28998 + C28227;
    const double C29552 = C29549 + C28781;
    const double C44787 = C44782 + C40253;
    const double C131838 = C131833 + C103289;
    const double C153049 = C153048 + C153045;
    const double C153071 = C153054 + C153069;
    const double C153362 = C153354 + C153195;
    const double C153197 = C153196 + C153185;
    const double C153437 = C153420 + C153433;
    const double C153245 = ae * C153243;
    const double C153244 = C152162 * C153243;
    const double C153402 = 4 * C153243;
    const double C180 = C135 * C151;
    const double C395 = C135 * C354;
    const double C781 = C135 * C776;
    const double C29000 = C135 * C28995;
    const double C152044 = C152038 * be;
    const double C152027 = C152020 * ae;
    const double C97193 = -(C152020 * be) / C151933;
    const double C7114 = C7095 + C7096;
    const double C7111 = C7086 + C7087;
    const double C7108 = C7077 + C7078;
    const double C7105 = C7068 + C7069;
    const double C7422 = C7400 + C7401;
    const double C7419 = C7391 + C7392;
    const double C7416 = C7376 + C7377;
    const double C7413 = C7367 + C7368;
    const double C7733 = C7705 + C7706;
    const double C7730 = C7690 + C7691;
    const double C7727 = C7681 + C7682;
    const double C7992 = C7983 + C7407;
    const double C8231 = C8222 + C7721;
    const double C8561 = C8548 + C8549;
    const double C8558 = C8539 + C8540;
    const double C30700 = C30682 + C8943;
    const double C30697 = C30673 + C8946;
    const double C30694 = C30667 + C7386;
    const double C30691 = C30661 + C7383;
    const double C31719 = C31705 + C9914;
    const double C31716 = C31696 + C8534;
    const double C31713 = C31690 + C9917;
    const double C32115 = C32106 + C30678;
    const double C32360 = C32346 + C9182;
    const double C33115 = C33106 + C31701;
    const double C14979 = C14963 + C14964;
    const double C14978 = C14960 + C14961;
    const double C14975 = C14951 + C14952;
    const double C14973 = C14945 + C14946;
    const double C14971 = C14939 + C14940;
    const double C15257 = C15237 + C15238;
    const double C15255 = C15231 + C15232;
    const double C15253 = C15225 + C15226;
    const double C15252 = C15218 + C15219;
    const double C15250 = C15212 + C15213;
    const double C15248 = C15206 + C15207;
    const double C15531 = C15511 + C15512;
    const double C15529 = C15505 + C15506;
    const double C15527 = C15499 + C15500;
    const double C15526 = C15492 + C15493;
    const double C15524 = C15486 + C15487;
    const double C15522 = C15480 + C15481;
    const double C15761 = C15753 + C15243;
    const double C15971 = C15963 + C15517;
    const double C16261 = C16249 + C16250;
    const double C16259 = C16243 + C16244;
    const double C16257 = C16237 + C16238;
    const double C19154 = C19144 + C16602;
    const double C19152 = C19139 + C16604;
    const double C19151 = C19136 + C15223;
    const double C19148 = C19126 + C15222;
    const double C19472 = C19466 + C16804;
    const double C19470 = C19462 + C16806;
    const double C20475 = C20467 + C17458;
    const double C20473 = C20462 + C17460;
    const double C20472 = C20459 + C16235;
    const double C20983 = C20973 + C16606;
    const double C21289 = C21279 + C16808;
    const double C22271 = C22261 + C17462;
    const double C38478 = C38474 + C20980;
    const double C38778 = C38774 + C21286;
    const double C39756 = C39752 + C22268;
    const double C40255 = C40247 + C20982;
    const double C40559 = C40551 + C21288;
    const double C41540 = C41532 + C22270;
    const double C44786 = C44780 + C40254;
    const double C44992 = C44986 + C40558;
    const double C45651 = C45645 + C41539;
    const double C47029 = C47008 + C47009;
    const double C47028 = C47005 + C47006;
    const double C47023 = C46990 + C46991;
    const double C47020 = C46981 + C46982;
    const double C47337 = C47313 + C47314;
    const double C47334 = C47304 + C47305;
    const double C47333 = C47295 + C47296;
    const double C47330 = C47286 + C47287;
    const double C47639 = C47615 + C47616;
    const double C47636 = C47606 + C47607;
    const double C47635 = C47597 + C47598;
    const double C47632 = C47588 + C47589;
    const double C47895 = C47885 + C47322;
    const double C48134 = C48124 + C47624;
    const double C48461 = C48446 + C48447;
    const double C48458 = C48437 + C48438;
    const double C51532 = C51513 + C48845;
    const double C51531 = C51508 + C48848;
    const double C51526 = C51498 + C47301;
    const double C51523 = C51492 + C47300;
    const double C52542 = C52527 + C49807;
    const double C52541 = C52522 + C48434;
    const double C52538 = C52516 + C49810;
    const double C52938 = C52928 + C51510;
    const double C53183 = C53171 + C51780;
    const double C53180 = C53165 + C49075;
    const double C53935 = C53925 + C52524;
    const double C58370 = C58364 + C49072;
    const double C47030 = C47011 + C47012;
    const double C47027 = C47002 + C47003;
    const double C47024 = C46993 + C46994;
    const double C47021 = C46984 + C46985;
    const double C47338 = C47316 + C47317;
    const double C47335 = C47307 + C47308;
    const double C47332 = C47292 + C47293;
    const double C47329 = C47283 + C47284;
    const double C47637 = C47609 + C47610;
    const double C47634 = C47594 + C47595;
    const double C47631 = C47585 + C47586;
    const double C47896 = C47887 + C47323;
    const double C48135 = C48126 + C47625;
    const double C48462 = C48449 + C48450;
    const double C48459 = C48440 + C48441;
    const double C51533 = C51515 + C48844;
    const double C51530 = C51506 + C48847;
    const double C51527 = C51500 + C47302;
    const double C51524 = C51494 + C47299;
    const double C52543 = C52529 + C49806;
    const double C52540 = C52520 + C48435;
    const double C52537 = C52514 + C49809;
    const double C52939 = C52930 + C51511;
    const double C53181 = C53167 + C49074;
    const double C53936 = C53927 + C52525;
    const double C7125 = C7113 + C7093;
    const double C7124 = C7112 + C7090;
    const double C7119 = C7107 + C7075;
    const double C7116 = C7104 + C7066;
    const double C7433 = C7421 + C7398;
    const double C7430 = C7418 + C7389;
    const double C7429 = C7417 + C7380;
    const double C7426 = C7414 + C7371;
    const double C7747 = C7735 + C7712;
    const double C7744 = C7732 + C7703;
    const double C7743 = C7731 + C7694;
    const double C7740 = C7728 + C7685;
    const double C7995 = C7991 + C7406;
    const double C8234 = C8230 + C7720;
    const double C8566 = C8560 + C8546;
    const double C8563 = C8557 + C8537;
    const double C30712 = C30699 + C8944;
    const double C30711 = C30698 + C8947;
    const double C30706 = C30693 + C7385;
    const double C30703 = C30690 + C7384;
    const double C31727 = C31718 + C9915;
    const double C31726 = C31717 + C8533;
    const double C31723 = C31714 + C9918;
    const double C32117 = C32114 + C30677;
    const double C32368 = C32362 + C30953;
    const double C32365 = C32359 + C9183;
    const double C33117 = C33114 + C31700;
    const double C78163 = C78160 + C9180;
    const double C7121 = C7109 + C7081;
    const double C7118 = C7106 + C7072;
    const double C7432 = C7420 + C7395;
    const double C7427 = C7415 + C7374;
    const double C7424 = C7412 + C7365;
    const double C30708 = C30695 + C7387;
    const double C30705 = C30692 + C7382;
    const double C14987 = C14977 + C14958;
    const double C14986 = C14976 + C14955;
    const double C14984 = C14974 + C14949;
    const double C14982 = C14972 + C14943;
    const double C15270 = C15258 + C15241;
    const double C15268 = C15256 + C15235;
    const double C15266 = C15254 + C15229;
    const double C15263 = C15251 + C15216;
    const double C15261 = C15249 + C15210;
    const double C15259 = C15247 + C15204;
    const double C15537 = C15525 + C15490;
    const double C15535 = C15523 + C15484;
    const double C16266 = C16260 + C16247;
    const double C16264 = C16258 + C16241;
    const double C19163 = C19155 + C16601;
    const double C19161 = C19153 + C16603;
    const double C19158 = C19150 + C15224;
    const double C19157 = C19149 + C15221;
    const double C20480 = C20474 + C17459;
    const double C20477 = C20471 + C16236;
    const double C20986 = C20984 + C16605;
    const double C22274 = C22272 + C17461;
    const double C38481 = C38479 + C20979;
    const double C40258 = C40256 + C20981;
    const double C47037 = C47025 + C46997;
    const double C47034 = C47022 + C46988;
    const double C47348 = C47336 + C47311;
    const double C47343 = C47331 + C47290;
    const double C47340 = C47328 + C47281;
    const double C51541 = C51528 + C47303;
    const double C51538 = C51525 + C47298;
    const double C97248 = C97238 + C97219;
    const double C97247 = C97237 + C97216;
    const double C97245 = C97235 + C97210;
    const double C97243 = C97233 + C97204;
    const double C97531 = C97519 + C97502;
    const double C97529 = C97517 + C97496;
    const double C97527 = C97515 + C97490;
    const double C97524 = C97512 + C97477;
    const double C97522 = C97510 + C97471;
    const double C97520 = C97508 + C97465;
    const double C97798 = C97786 + C97751;
    const double C97796 = C97784 + C97745;
    const double C98527 = C98521 + C98508;
    const double C98525 = C98519 + C98502;
    const double C101438 = C101426 + C98862;
    const double C101436 = C101424 + C101406;
    const double C101433 = C101421 + C98866;
    const double C101431 = C101419 + C98864;
    const double C101430 = C101418 + C97485;
    const double C101428 = C101416 + C97482;
    const double C101768 = C101762 + C99720;
    const double C102788 = C102782 + C98497;
    const double C102786 = C102780 + C99722;
    const double C103294 = C103292 + C101401;
    const double C115625 = C115613 + C115585;
    const double C115622 = C115610 + C115576;
    const double C115936 = C115924 + C115899;
    const double C115931 = C115919 + C115878;
    const double C115928 = C115916 + C115869;
    const double C120238 = C120228 + C115891;
    const double C120237 = C120224 + C115886;
    const double C152060 = C152031 - C152053;
    const double C152036 = C152029 + C154109;
    const double C631 = C623 + C610;
    const double C7122 = C7110 + C7084;
    const double C15533 = C15521 + C15478;
    const double C47038 = C47026 + C47000;
    const double C97794 = C97782 + C97739;
    const double C115626 = C115614 + C115588;
    const double C203 = C197 * C153865;
    const double C11389 = C197 * C154107;
    const double C70430 = C197 * C70415;
    const double C3420 = C3414 + C3399;
    const double C7716 = C154171 * C2280;
    const double C7680 = C154146 * C2280;
    const double C15510 = C153969 * C2280;
    const double C47620 = C46969 * C2280;
    const double C47584 = C154146 * C2280;
    const double C62994 = C154123 * C2280;
    const double C63989 = C62965 * C2280;
    const double C97771 = C153969 * C2280;
    const double C106500 = C154123 * C2280;
    const double C107495 = C154177 * C2280;
    const double C116208 = C153972 * C2280;
    const double C116172 = C115558 * C2280;
    const double C7736 = C7714 + C7715;
    const double C7726 = C7678 + C7679;
    const double C15530 = C15508 + C15509;
    const double C47640 = C47618 + C47619;
    const double C47630 = C47582 + C47583;
    const double C63024 = C62992 + C62993;
    const double C97791 = C97769 + C97770;
    const double C106530 = C106498 + C106499;
    const double C116218 = C116170 + C116171;
    const double C3419 = C3413 + C3396;
    const double C8544 = C154146 * C6171;
    const double C19465 = C153969 * C6171;
    const double C48445 = C154146 * C6171;
    const double C58367 = C46969 * C6171;
    const double C63252 = C154123 * C6171;
    const double C64278 = C62965 * C6171;
    const double C78157 = C154171 * C6171;
    const double C101753 = C153969 * C6171;
    const double C106758 = C154123 * C6171;
    const double C107784 = C154177 * C6171;
    const double C117033 = C115558 * C6171;
    const double C120546 = C153972 * C6171;
    const double C8559 = C8542 + C8543;
    const double C78161 = C78156 + C9179;
    const double C19471 = C19464 + C16805;
    const double C48460 = C48443 + C48444;
    const double C58371 = C58366 + C49071;
    const double C63290 = C63250 + C63251;
    const double C101765 = C101752 + C99066;
    const double C106796 = C106756 + C106757;
    const double C117048 = C117031 + C117032;
    const double C152683 = ae * C152682;
    const double C7670 = (3 * C152449 + C152162 * C152682 +
                          (2 * C152443 + C152162 * C152672) * ae) /
                         C151933;
    const double C29136 = C29134 + C4825;
    const double C30709 = C30696 + C8945;
    const double C41543 = C41541 + C22269;
    const double C51542 = C51529 + C48846;
    const double C104589 = C104587 + C102769;
    const double C122061 = C122058 + C117434;
    const double C31689 = C154146 * C6172;
    const double C32353 = C154171 * C6172;
    const double C40554 = C153969 * C6172;
    const double C52513 = C154146 * C6172;
    const double C53174 = C46969 * C6172;
    const double C66991 = C154123 * C6172;
    const double C69099 = C62965 * C6172;
    const double C103594 = C153969 * C6172;
    const double C123347 = C115558 * C6172;
    const double C134207 = C154123 * C6172;
    const double C136315 = C154177 * C6172;
    const double C149857 = C153972 * C6172;
    const double C31712 = C31688 + C9916;
    const double C40560 = C40553 + C21287;
    const double C32363 = C32352 + C30954;
    const double C52536 = C52512 + C49808;
    const double C53184 = C53173 + C51781;
    const double C67002 = C66990 + C63269;
    const double C103602 = C103593 + C101749;
    const double C134218 = C134206 + C106775;
    const double C123356 = C123346 + C118396;
    const double C152821 = ae * C152820;
    const double C9170 = (3 * C152636 + C152162 * C152820 +
                          (2 * C152630 + C152162 * C152811) * ae) /
                         C151933;
    const double C152927 = C152898 + C152925;
    const double C646 = C638 * C153865;
    const double C3397 = C638 * C154181;
    const double C11803 = C638 * C154107;
    const double C24648 = C638 * C24168;
    const double C70844 = C638 * C70415;
    const double C83249 = C638 * C153923;
    const double C3650 = C3146 + C3646;
    const double C24873 = C24409 + C24869;
    const double C83474 = C83010 + C83470;
    const double C3874 = C3422 + C3869;
    const double C25096 = C24639 + C25092;
    const double C83697 = C83240 + C83693;
    const double C3424 = C3418 * C154169;
    const double C11802 = C3418 * C153927;
    const double C24646 = C3418 * C24169;
    const double C34992 = C3418 * C34573;
    const double C70843 = C3418 * C153927;
    const double C74385 = C3418 * C154184;
    const double C83247 = C3418 * C153930;
    const double C7741 = C7729 + C7688;
    const double C15540 = C15528 + C15503;
    const double C47645 = C47633 + C47592;
    const double C63035 = C63023 + C62990;
    const double C97801 = C97789 + C97764;
    const double C106541 = C106529 + C106496;
    const double C116233 = C116221 + C116180;
    const double C31724 = C31715 + C8535;
    const double C21292 = C21290 + C16807;
    const double C52548 = C52539 + C48436;
    const double C67009 = C67001 + C63262;
    const double C103604 = C103600 + C99068;
    const double C134225 = C134217 + C106768;
    const double C121548 = C121541 + C117024;
    const double C7673 =
        (3 * (C152176 + C152458 + C152458 + C152162 * C152650) + C152660 +
         C152660 +
         C152162 *
             (2 * C152650 + C152657 + C152657 +
              C152162 * (C152185 + C152653 + C152653 +
                         C152162 * (2 * ae * C152242 + C152162 * C152193)))) /
        C151940;
    const double C7701 = C7060 * C7669;
    const double C10517 = C7058 * C7669;
    const double C17987 = C14935 * C7669;
    const double C47605 = C46976 * C7669;
    const double C50400 = C46974 * C7669;
    const double C55359 = C55353 * C7669;
    const double C63520 = C62974 * C7669;
    const double C100248 = C97196 * C7669;
    const double C107026 = C106480 * C7669;
    const double C116193 = C152085 * C7669;
    const double C420 = C412 * C153865;
    const double C2860 = C412 * C154169;
    const double C11387 = C412 * C153927;
    const double C12008 = C412 * C154107;
    const double C24185 = C412 * C24169;
    const double C70428 = C412 * C153927;
    const double C71044 = C412 * C70415;
    const double C82786 = C412 * C153930;
    const double C426 = C418 * C153865;
    const double C2856 = C418 * C154143;
    const double C3648 = C418 * C154169;
    const double C11599 = C418 * C154107;
    const double C11589 = C418 * C153927;
    const double C24181 = C418 * C154143;
    const double C24871 = C418 * C24169;
    const double C34589 = C418 * C34574;
    const double C70640 = C418 * C70415;
    const double C70630 = C418 * C153927;
    const double C73982 = C418 * C154174;
    const double C82782 = C418 * C82771;
    const double C83472 = C418 * C153930;
    const double C641 = C633 * C153865;
    const double C12206 = C633 * C154107;
    const double C71242 = C633 * C70415;
    const double C1128 = C1124 * C153865;
    const double C3871 = C1124 * C154169;
    const double C11795 = C1124 * C153927;
    const double C12470 = C1124 * C154107;
    const double C25094 = C1124 * C24169;
    const double C70836 = C1124 * C153927;
    const double C71506 = C1124 * C70415;
    const double C83695 = C1124 * C153930;
    const double C393 = C153882 * C364;
    const double C780 = C153882 * C365;
    const double C914 = C153882 * C586;
    const double C14968 = C153969 * C586;
    const double C97229 = C153969 * C586;
    const double C1112 = C153882 * C1097;
    const double C15756 = C153969 * C1097;
    const double C98017 = C153969 * C1097;
    const double C152349 = C152348 + C152346;
    const double C915 = C135 * C910;
    const double C14969 = C14935 * C910;
    const double C97230 = C97196 * C910;
    const double C1113 = C135 * C1092;
    const double C15757 = C14935 * C1092;
    const double C98018 = C97196 * C1092;
    const double C152372 = ae * C152371;
    const double C1490 =
        (C152354 * C152315 + C152162 * C152371 + C152162 * C152368 * ae) /
        C151933;
    const double C152415 = C152315 + C152413;
    const double C3380 =
        (C152209 + C152224 * C152402 + C152501 + C152501 +
         C152162 *
             (2 * ae * C152496 +
              C152162 * (C152224 +
                         (2 * C152169 * C152220 +
                          C152169 * (C152220 +
                                     (C152214 * C152215 +
                                      C152166 * bs[9] * std::pow(C152164, 9)) *
                                         C152165 * C152181)) *
                             C152402))) /
        C151940;
    const double C3403 = C135 * C3376;
    const double C7409 = C7060 * C3376;
    const double C17455 = C14935 * C3376;
    const double C47325 = C46976 * C3376;
    const double C99716 = C97196 * C3376;
    const double C115913 = C152085 * C3376;
    const double C152726 = ae * C152724;
    const double C152725 = C152162 * C152724;
    const double C152742 = C152741 + C152738;
    const double C4815 =
        (2 * C152354 * C152207 + C152354 * C152508 + C152531 + C152531 +
         C152162 *
             (2 * ae * C152526 +
              C152162 *
                  (2 * C152354 * C152222 +
                   C152354 * (C152222 + (C152220 + (C152214 * C152215 +
                                                    C152166 * bs[9] *
                                                        std::pow(C152164, 9)) *
                                                       C152165 * C152181) *
                                            C152402)))) /
        C151940;
    const double C4823 = C135 * C4812;
    const double C8939 = C7060 * C4812;
    const double C22265 = C14935 * C4812;
    const double C48840 = C46976 * C4812;
    const double C102778 = C97196 * C4812;
    const double C117428 = C152085 * C4812;
    const double C152579 = ae * C152578;
    const double C6162 =
        (2 * C152491 + C152162 * C152578 + (C152488 + C152523 * C152166) * ae) /
        C151933;
    const double C152767 = C152747 + C152765;
    const double C152852 = C152851 + C152840;
    const double C152986 = ae * C152985;
    const double C28361 = (3 * C152478 + C152354 * C152543 + C152162 * C152985 +
                           C152162 * C152982 * ae) /
                          C151933;
    const double C153106 = C153105 + C153102;
    const double C153094 = C153077 + C153092;
    const double C153295 = ae * C153293;
    const double C153294 = C152162 * C153293;
    const double C153336 = C153335 + C153325;
    const double C153026 = C153024 + C153025;
    const double C29551 = C135 * C29546;
    const double C44784 = C14935 * C29546;
    const double C131835 = C97196 * C29546;
    const double C153037 = C152958 + C153035;
    const double C153127 = ae * C153125;
    const double C153126 = C152162 * C153125;
    const double C153161 = C153160 + C153149;
    const double C153387 = ae * C153385;
    const double C153386 = C152162 * C153385;
    const double C153448 = C153403 + C153445;
    const double C585 = (3 * C152195 + C152169 * C152209 + C152318 + C152318 +
                         C152162 * (2 * ae * C152315 + C152162 * C152226)) /
                        C151940;
    const double C613 = C135 * C573;
    const double C7099 = C7060 * C573;
    const double C8227 = C7058 * C573;
    const double C15520 = C14933 * C573;
    const double C15518 = C14935 * C573;
    const double C47015 = C46976 * C573;
    const double C48131 = C46974 * C573;
    const double C97781 = C97194 * C573;
    const double C97779 = C97196 * C573;
    const double C115603 = C152085 * C573;
    const double C192 = C186 + C178;
    const double C411 = C403 + C392;
    const double C783 = C782 + C394;
    const double C917 = C916 + C615;
    const double C14990 = C14980 + C14967;
    const double C97251 = C97241 + C97228;
    const double C1121 = C1117 + C1111;
    const double C15764 = C15762 + C15244;
    const double C98025 = C98023 + C97505;
    const double C7986 = C154146 * C1496;
    const double C11807 = C153882 * C1496;
    const double C16254 = C153969 * C1496;
    const double C47890 = C154146 * C1496;
    const double C98515 = C153969 * C1496;
    const double C116478 = C115558 * C1496;
    const double C11808 = C11806 + C1502;
    const double C7993 = C7985 + C7408;
    const double C16262 = C16252 + C16253;
    const double C47897 = C47889 + C47324;
    const double C98523 = C98513 + C98514;
    const double C116485 = C116477 + C115912;
    const double C152428 = ae * C152427;
    const double C2274 =
        (2 * C152292 + C152162 * C152427 + (C152287 + C152308 * C152166) * ae) /
        C151933;
    const double C3649 = C3145 * C154143;
    const double C11600 = C3145 * C153927;
    const double C24872 = C3145 * C154143;
    const double C34590 = C3145 * C154116;
    const double C70641 = C3145 * C153927;
    const double C73983 = C3145 * C154116;
    const double C83473 = C3145 * C82771;
    const double C3878 = C3877 * C154143;
    const double C12471 = C3877 * C153927;
    const double C25095 = C3877 * C154143;
    const double C71507 = C3877 * C153927;
    const double C83696 = C3877 * C82771;
    const double C3415 = C3409 + C3401;
    const double C7435 = C7423 + C7404;
    const double C20482 = C20476 + C17457;
    const double C47351 = C47339 + C47320;
    const double C102369 = C102367 + C99718;
    const double C115939 = C115927 + C115908;
    const double C3151 = C3144 * C154143;
    const double C24420 = C3144 * C154143;
    const double C35197 = C3144 * C154116;
    const double C74585 = C3144 * C154116;
    const double C83021 = C3144 * C82771;
    const double C4210 = C4208 * C154143;
    const double C25392 = C4208 * C154143;
    const double C35395 = C4208 * C154116;
    const double C74783 = C4208 * C154116;
    const double C83993 = C4208 * C82771;
    const double C6169 =
        (2 * (2 * ae * C152381 + C152162 * C152581) + C152591 + C152591 +
         C152162 *
             (C152581 + C152588 + C152588 +
              C152162 * (2 * ae * C152516 + C152162 * C152354 * C152222))) /
        C151940;
    const double C6176 = C135 * C6163;
    const double C8552 = C7060 * C6163;
    const double C9176 = C7058 * C6163;
    const double C16803 = C14935 * C6163;
    const double C23052 = C14933 * C6163;
    const double C48453 = C46976 * C6163;
    const double C49068 = C46974 * C6163;
    const double C63285 = C62974 * C6163;
    const double C99064 = C97196 * C6163;
    const double C106791 = C106480 * C6163;
    const double C114444 = C97194 * C6163;
    const double C117041 = C152085 * C6163;
    const double C152705 = C152704 + C152698;
    const double C30685 = C154146 * C4816;
    const double C34995 = C153882 * C4816;
    const double C39755 = C153969 * C4816;
    const double C51518 = C154146 * C4816;
    const double C102777 = C153969 * C4816;
    const double C120221 = C115558 * C4816;
    const double C34996 = C34994 + C4824;
    const double C30701 = C30684 + C8942;
    const double C39757 = C39754 + C22267;
    const double C51534 = C51517 + C48843;
    const double C102785 = C102775 + C102776;
    const double C120234 = C120220 + C117431;
    const double C28236 = C28234 + C28229;
    const double C28790 = C28788 + C28783;
    const double C6170 =
        (2 * (2 * ae * C152478 + C152162 * C152511) + C152602 + C152602 +
         C152162 *
             (C152511 + C152599 + C152599 +
              C152162 * (2 * ae * C152538 +
                         C152162 * (C152212 + C152169 * C152220 * C152402)))) /
        C151940;
    const double C6177 = C135 * C6164;
    const double C9913 = C7060 * C6164;
    const double C21285 = C14935 * C6164;
    const double C30957 = C7058 * C6164;
    const double C42321 = C14933 * C6164;
    const double C49805 = C46976 * C6164;
    const double C51784 = C46974 * C6164;
    const double C63280 = C62974 * C6164;
    const double C101758 = C97196 * C6164;
    const double C105367 = C97194 * C6164;
    const double C106786 = C106480 * C6164;
    const double C118393 = C152085 * C6164;
    const double C152794 = C152793 + C152787;
    const double C153290 = C153273 + C153286;
    const double C152890 = ae * C152888;
    const double C152889 = C152162 * C152888;
    const double C153258 = 4 * C152888;
    const double C28362 =
        (3 * C152514 + C152354 * C152935 + C152963 + C152963 +
         C152162 * (2 * ae * C152958 +
                    C152162 * (3 * C152933 +
                               C152354 * (2 * C152354 * C152205 +
                                          C152354 * (C152205 +
                                                     C152220 * C152402))))) /
        C151940;
    const double C28365 = C135 * C28360;
    const double C30679 = C7060 * C28360;
    const double C33111 = C7058 * C28360;
    const double C41538 = C14935 * C28360;
    const double C44991 = C14933 * C28360;
    const double C51512 = C46976 * C28360;
    const double C53932 = C46974 * C28360;
    const double C104584 = C97196 * C28360;
    const double C122053 = C152085 * C28360;
    const double C132042 = C97194 * C28360;
    const double C29002 = C29001 + C28227;
    const double C29553 = C29552 + C28781;
    const double C44789 = C44787 + C40253;
    const double C131840 = C131838 + C103289;
    const double C153050 = ae * C153049;
    const double C29883 =
        (2 * C152564 + C152162 * C153049 + (C152561 + C152955 * C152166) * ae) /
        C151933;
    const double C153072 = C153071 + C153065;
    const double C153379 = C153362 + C153375;
    const double C153199 = ae * C153197;
    const double C153198 = C152162 * C153197;
    const double C153347 = 4 * C153197;
    const double C153441 = C152162 * C153437;
    const double C153412 = C153396 + C153245;
    const double C153246 = C153209 + C153244;
    const double C152052 = C152044 / C151933;
    const double C152037 = C152027 / C151944;
    const double C152035 = C151931 * C152027;
    const double C97224 = C97193 * C141;
    const double C97221 = C97193 * C140;
    const double C97212 = C97193 * C139;
    const double C97206 = C97193 * C138;
    const double C97200 = C97193 * C137;
    const double C97498 = C97193 * C339;
    const double C97492 = C97193 * C338;
    const double C97486 = C97193 * C337;
    const double C97479 = C97193 * C334;
    const double C97473 = C97193 * C333;
    const double C97467 = C97193 * C332;
    const double C97772 = C97193 * C560;
    const double C97766 = C97193 * C559;
    const double C97760 = C97193 * C558;
    const double C97753 = C97193 * C555;
    const double C97747 = C97193 * C554;
    const double C97741 = C97193 * C553;
    const double C98014 = C97193 * C331;
    const double C98224 = C97193 * C552;
    const double C98510 = C97193 * C1084;
    const double C98504 = C97193 * C1083;
    const double C98498 = C97193 * C1082;
    const double C101408 = C97193 * C1345;
    const double C101402 = C97193 * C3084;
    const double C101398 = C97193 * C1347;
    const double C101392 = C97193 * C1346;
    const double C101384 = C97193 * C336;
    const double C101380 = C97193 * C335;
    const double C101754 = C97193 * C3370;
    const double C101750 = C97193 * C1488;
    const double C101746 = C97193 * C1919;
    const double C102362 = C97193 * C1918;
    const double C102772 = C97193 * C4169;
    const double C102766 = C97193 * C1081;
    const double C102762 = C97193 * C1920;
    const double C103283 = C97193 * C3083;
    const double C103591 = C97193 * C3369;
    const double C103587 = C97193 * C1489;
    const double C104578 = C97193 * C4168;
    const double C110944 = C97193 * C1487;
    const double C131831 = C97193 * C4576;
    const double C132037 = C97193 * C4811;
    const double C132696 = C97193 * C5559;
    const double C7126 = C7114 + C7096;
    const double C7123 = C7111 + C7087;
    const double C7120 = C7108 + C7078;
    const double C7117 = C7105 + C7069;
    const double C7434 = C7422 + C7401;
    const double C7431 = C7419 + C7392;
    const double C7428 = C7416 + C7377;
    const double C7425 = C7413 + C7368;
    const double C7745 = C7733 + C7706;
    const double C7742 = C7730 + C7691;
    const double C7739 = C7727 + C7682;
    const double C7996 = C7992 + C7407;
    const double C8235 = C8231 + C7721;
    const double C8567 = C8561 + C8549;
    const double C8564 = C8558 + C8540;
    const double C30713 = C30700 + C8943;
    const double C30710 = C30697 + C8946;
    const double C30707 = C30694 + C7386;
    const double C30704 = C30691 + C7383;
    const double C31728 = C31719 + C9914;
    const double C31725 = C31716 + C8534;
    const double C31722 = C31713 + C9917;
    const double C32118 = C32115 + C30678;
    const double C32366 = C32360 + C9182;
    const double C33118 = C33115 + C31701;
    const double C14989 = C14979 + C14964;
    const double C14988 = C14978 + C14961;
    const double C14985 = C14975 + C14952;
    const double C14983 = C14973 + C14946;
    const double C14981 = C14971 + C14940;
    const double C15269 = C15257 + C15238;
    const double C15267 = C15255 + C15232;
    const double C15265 = C15253 + C15226;
    const double C15264 = C15252 + C15219;
    const double C15262 = C15250 + C15213;
    const double C15260 = C15248 + C15207;
    const double C15543 = C15531 + C15512;
    const double C15541 = C15529 + C15506;
    const double C15539 = C15527 + C15500;
    const double C15538 = C15526 + C15493;
    const double C15536 = C15524 + C15487;
    const double C15534 = C15522 + C15481;
    const double C15763 = C15761 + C15243;
    const double C15973 = C15971 + C15517;
    const double C16267 = C16261 + C16250;
    const double C16265 = C16259 + C16244;
    const double C16263 = C16257 + C16238;
    const double C19162 = C19154 + C16602;
    const double C19160 = C19152 + C16604;
    const double C19159 = C19151 + C15223;
    const double C19156 = C19148 + C15222;
    const double C19476 = C19472 + C16804;
    const double C19474 = C19470 + C16806;
    const double C20481 = C20475 + C17458;
    const double C20479 = C20473 + C17460;
    const double C20478 = C20472 + C16235;
    const double C20985 = C20983 + C16606;
    const double C21291 = C21289 + C16808;
    const double C22273 = C22271 + C17462;
    const double C38480 = C38478 + C20980;
    const double C38780 = C38778 + C21286;
    const double C39758 = C39756 + C22268;
    const double C40257 = C40255 + C20982;
    const double C40561 = C40559 + C21288;
    const double C41542 = C41540 + C22270;
    const double C44788 = C44786 + C40254;
    const double C44994 = C44992 + C40558;
    const double C45653 = C45651 + C41539;
    const double C47041 = C47029 + C47009;
    const double C47040 = C47028 + C47006;
    const double C47035 = C47023 + C46991;
    const double C47032 = C47020 + C46982;
    const double C47349 = C47337 + C47314;
    const double C47346 = C47334 + C47305;
    const double C47345 = C47333 + C47296;
    const double C47342 = C47330 + C47287;
    const double C47651 = C47639 + C47616;
    const double C47648 = C47636 + C47607;
    const double C47647 = C47635 + C47598;
    const double C47644 = C47632 + C47589;
    const double C47899 = C47895 + C47322;
    const double C48138 = C48134 + C47624;
    const double C48467 = C48461 + C48447;
    const double C48464 = C48458 + C48438;
    const double C51545 = C51532 + C48845;
    const double C51544 = C51531 + C48848;
    const double C51539 = C51526 + C47301;
    const double C51536 = C51523 + C47300;
    const double C52551 = C52542 + C49807;
    const double C52550 = C52541 + C48434;
    const double C52547 = C52538 + C49810;
    const double C52941 = C52938 + C51510;
    const double C53189 = C53183 + C51780;
    const double C53186 = C53180 + C49075;
    const double C53938 = C53935 + C52524;
    const double C58373 = C58370 + C49072;
    const double C47042 = C47030 + C47012;
    const double C47039 = C47027 + C47003;
    const double C47036 = C47024 + C46994;
    const double C47033 = C47021 + C46985;
    const double C47350 = C47338 + C47317;
    const double C47347 = C47335 + C47308;
    const double C47344 = C47332 + C47293;
    const double C47341 = C47329 + C47284;
    const double C47649 = C47637 + C47610;
    const double C47646 = C47634 + C47595;
    const double C47643 = C47631 + C47586;
    const double C47900 = C47896 + C47323;
    const double C48139 = C48135 + C47625;
    const double C48468 = C48462 + C48450;
    const double C48465 = C48459 + C48441;
    const double C51546 = C51533 + C48844;
    const double C51543 = C51530 + C48847;
    const double C51540 = C51527 + C47302;
    const double C51537 = C51524 + C47299;
    const double C52552 = C52543 + C49806;
    const double C52549 = C52540 + C48435;
    const double C52546 = C52537 + C49809;
    const double C52942 = C52939 + C51511;
    const double C53187 = C53181 + C49074;
    const double C53939 = C53936 + C52525;
    const double C7137 = C7125 + C7094;
    const double C7136 = C7124 + C7091;
    const double C7131 = C7119 + C7076;
    const double C7128 = C7116 + C7067;
    const double C7445 = C7433 + C7399;
    const double C7442 = C7430 + C7390;
    const double C7441 = C7429 + C7381;
    const double C7438 = C7426 + C7372;
    const double C7759 = C7747 + C7713;
    const double C7756 = C7744 + C7704;
    const double C7755 = C7743 + C7695;
    const double C7752 = C7740 + C7686;
    const double C7998 = C7995 + C7982;
    const double C8237 = C8234 + C8221;
    const double C8572 = C8566 + C8547;
    const double C8569 = C8563 + C8538;
    const double C30724 = C30712 + C30681;
    const double C30723 = C30711 + C30676;
    const double C30718 = C30706 + C30666;
    const double C30715 = C30703 + C30660;
    const double C31736 = C31727 + C31704;
    const double C31735 = C31726 + C31699;
    const double C31732 = C31723 + C31693;
    const double C32120 = C32117 + C32105;
    const double C32374 = C32368 + C32351;
    const double C32371 = C32365 + C32345;
    const double C33120 = C33117 + C33105;
    const double C78166 = C78163 + C78155;
    const double C7133 = C7121 + C7082;
    const double C7130 = C7118 + C7073;
    const double C7444 = C7432 + C7396;
    const double C7439 = C7427 + C7375;
    const double C7436 = C7424 + C7366;
    const double C30720 = C30708 + C30670;
    const double C30717 = C30705 + C30664;
    const double C14997 = C14987 + C14959;
    const double C14996 = C14986 + C14956;
    const double C14994 = C14984 + C14950;
    const double C14992 = C14982 + C14944;
    const double C15282 = C15270 + C15242;
    const double C15280 = C15268 + C15236;
    const double C15278 = C15266 + C15230;
    const double C15275 = C15263 + C15217;
    const double C15273 = C15261 + C15211;
    const double C15271 = C15259 + C15205;
    const double C15549 = C15537 + C15491;
    const double C15547 = C15535 + C15485;
    const double C16272 = C16266 + C16248;
    const double C16270 = C16264 + C16242;
    const double C19171 = C19163 + C19147;
    const double C19169 = C19161 + C19142;
    const double C19166 = C19158 + C19135;
    const double C19165 = C19157 + C19129;
    const double C20486 = C20480 + C20465;
    const double C20483 = C20477 + C20458;
    const double C20988 = C20986 + C20976;
    const double C22276 = C22274 + C22264;
    const double C38483 = C38481 + C38477;
    const double C40260 = C40258 + C40250;
    const double C47049 = C47037 + C46998;
    const double C47046 = C47034 + C46989;
    const double C47360 = C47348 + C47312;
    const double C47355 = C47343 + C47291;
    const double C47352 = C47340 + C47282;
    const double C51553 = C51541 + C51503;
    const double C51550 = C51538 + C51497;
    const double C97258 = C97248 + C97220;
    const double C97257 = C97247 + C97217;
    const double C97255 = C97245 + C97211;
    const double C97253 = C97243 + C97205;
    const double C97543 = C97531 + C97503;
    const double C97541 = C97529 + C97497;
    const double C97539 = C97527 + C97491;
    const double C97536 = C97524 + C97478;
    const double C97534 = C97522 + C97472;
    const double C97532 = C97520 + C97466;
    const double C97810 = C97798 + C97752;
    const double C97808 = C97796 + C97746;
    const double C98533 = C98527 + C98509;
    const double C98531 = C98525 + C98503;
    const double C101450 = C101438 + C101411;
    const double C101448 = C101436 + C101407;
    const double C101445 = C101433 + C101397;
    const double C101443 = C101431 + C101391;
    const double C101442 = C101430 + C101387;
    const double C101440 = C101428 + C101383;
    const double C101774 = C101768 + C101745;
    const double C102794 = C102788 + C102765;
    const double C102792 = C102786 + C102761;
    const double C103296 = C103294 + C103286;
    const double C115637 = C115625 + C115586;
    const double C115634 = C115622 + C115577;
    const double C115948 = C115936 + C115900;
    const double C115943 = C115931 + C115879;
    const double C115940 = C115928 + C115870;
    const double C120247 = C120238 + C120210;
    const double C120246 = C120237 + C120205;
    const double C115606 = C152060 * C574;
    const double C115600 = C152060 * C564;
    const double C115591 = C152060 * C565;
    const double C115582 = C152060 * C566;
    const double C115573 = C152060 * C567;
    const double C115567 = C152060 * C568;
    const double C115914 = C152060 * C1922;
    const double C115911 = C152060 * C1090;
    const double C115905 = C152060 * C1923;
    const double C115896 = C152060 * C1924;
    const double C115890 = C152060 * C1925;
    const double C115887 = C152060 * C1087;
    const double C115881 = C152060 * C1088;
    const double C115872 = C152060 * C1089;
    const double C116213 = C152060 * C572;
    const double C116207 = C152060 * C2275;
    const double C116198 = C152060 * C2276;
    const double C116192 = C152060 * C2277;
    const double C116189 = C152060 * C569;
    const double C116183 = C152060 * C570;
    const double C116174 = C152060 * C571;
    const double C116480 = C152060 * C1091;
    const double C116719 = C152060 * C573;
    const double C117044 = C152060 * C1491;
    const double C117038 = C152060 * C1492;
    const double C117029 = C152060 * C1493;
    const double C117023 = C152060 * C1494;
    const double C117435 = C152060 * C4172;
    const double C117432 = C152060 * C4173;
    const double C117429 = C152060 * C4174;
    const double C117662 = C152060 * C6167;
    const double C117659 = C152060 * C6165;
    const double C117656 = C152060 * C6163;
    const double C118397 = C152060 * C3373;
    const double C118394 = C152060 * C3374;
    const double C118391 = C152060 * C3375;
    const double C118988 = C152060 * C7669;
    const double C122054 = C152060 * C5562;
    const double C122051 = C152060 * C5561;
    const double C122365 = C152060 * C6166;
    const double C122362 = C152060 * C6164;
    const double C123352 = C152060 * C4814;
    const double C123349 = C152060 * C4813;
    const double C149624 = C152060 * C28774;
    const double C150606 = C152060 * C28360;
    const double C55351 =
        (C152060 / C151975 + ((C151931 * C152085 + C115558) * ae) / C151933) /
            C151975 -
        ((C151931 * (C152085 / C151975 + (0 * ae) / C151933) + C154123) * be) /
            C151933;
    const double C62972 =
        C152060 / C151975 - ((C151931 * C152085 + C115558) * be) / C151933;
    const double C106478 =
        C152060 / C151975 + ((C151931 * C152085 + C115558) * ae) / C151933;
    const double C152043 = C152036 * be;
    const double C639 = C631 + C611;
    const double C7134 = C7122 + C7085;
    const double C15545 = C15533 + C15479;
    const double C47050 = C47038 + C47001;
    const double C97806 = C97794 + C97740;
    const double C115638 = C115626 + C115589;
    const double C3426 = C3420 * C154169;
    const double C11804 = C3420 * C153927;
    const double C24649 = C3420 * C24169;
    const double C70845 = C3420 * C153927;
    const double C83250 = C3420 * C153930;
    const double C7748 = C7736 + C7715;
    const double C7738 = C7726 + C7679;
    const double C15542 = C15530 + C15509;
    const double C47652 = C47640 + C47619;
    const double C47642 = C47630 + C47583;
    const double C63036 = C63024 + C62993;
    const double C97803 = C97791 + C97770;
    const double C106542 = C106530 + C106499;
    const double C116230 = C116218 + C116171;
    const double C3425 = C3419 * C154143;
    const double C24647 = C3419 * C154143;
    const double C34993 = C3419 * C34574;
    const double C74386 = C3419 * C154174;
    const double C83248 = C3419 * C82771;
    const double C8565 = C8559 + C8543;
    const double C78164 = C78161 + C9179;
    const double C19475 = C19471 + C16805;
    const double C48466 = C48460 + C48444;
    const double C58374 = C58371 + C49071;
    const double C63298 = C63290 + C63251;
    const double C101771 = C101765 + C99066;
    const double C106804 = C106796 + C106757;
    const double C117054 = C117048 + C117032;
    const double C7674 =
        (3 * (C152364 + C152447 + C152447 + C152162 * C152673) + C152683 +
         C152683 +
         C152162 *
             (2 * C152673 + C152680 + C152680 +
              C152162 * (C152197 + C152676 + C152676 +
                         C152162 * (2 * ae * C152296 + C152162 * C152212)))) /
        C151940;
    const double C7709 = C7060 * C7670;
    const double C10514 = C7058 * C7670;
    const double C17985 = C14935 * C7670;
    const double C47613 = C46976 * C7670;
    const double C50397 = C46974 * C7670;
    const double C55360 = C55353 * C7670;
    const double C63509 = C62974 * C7670;
    const double C100246 = C97196 * C7670;
    const double C107015 = C106480 * C7670;
    const double C116201 = C152085 * C7670;
    const double C118985 = C152060 * C7670;
    const double C29138 = C29136 + C29130;
    const double C30721 = C30709 + C30672;
    const double C41545 = C41543 + C41535;
    const double C51554 = C51542 + C51505;
    const double C104591 = C104589 + C104581;
    const double C122064 = C122061 + C122049;
    const double C31721 = C31712 + C9916;
    const double C40562 = C40560 + C21287;
    const double C32369 = C32363 + C30954;
    const double C52545 = C52536 + C49808;
    const double C53190 = C53184 + C51781;
    const double C67010 = C67002 + C63269;
    const double C103606 = C103602 + C101749;
    const double C134226 = C134218 + C106775;
    const double C123359 = C123356 + C118396;
    const double C9173 =
        (3 * (C152627 + C152634 + C152634 + C152162 * C152808) + C152821 +
         C152821 +
         C152162 * (2 * C152808 + C152818 + C152818 +
                    C152162 * (C152798 + C152814 + C152814 +
                               C152162 * (2 * ae * C152800 +
                                          C152162 * C152354 * C152205)))) /
        C151940;
    const double C9181 = C7060 * C9170;
    const double C23055 = C14935 * C9170;
    const double C33715 = C7058 * C9170;
    const double C49073 = C46976 * C9170;
    const double C54530 = C46974 * C9170;
    const double C55497 = C55353 * C9170;
    const double C64269 = C62974 * C9170;
    const double C105372 = C97196 * C9170;
    const double C107775 = C106480 * C9170;
    const double C117661 = C152085 * C9170;
    const double C124141 = C152060 * C9170;
    const double C152928 = C152927 + C152920;
    const double C7753 = C7741 + C7689;
    const double C15552 = C15540 + C15504;
    const double C47657 = C47645 + C47593;
    const double C63047 = C63035 + C62991;
    const double C97813 = C97801 + C97765;
    const double C106553 = C106541 + C106497;
    const double C116245 = C116233 + C116181;
    const double C31733 = C31724 + C31695;
    const double C21294 = C21292 + C21282;
    const double C52557 = C52548 + C52519;
    const double C67017 = C67009 + C66989;
    const double C103608 = C103604 + C103590;
    const double C134233 = C134225 + C134205;
    const double C121554 = C121548 + C121528;
    const double C11393 = C11387 + C11388;
    const double C70434 = C70428 + C70429;
    const double C2865 = C2856 + C2863;
    const double C12006 = C11589 + C11590;
    const double C24190 = C24181 + C24188;
    const double C71042 = C70630 + C70631;
    const double C82791 = C82782 + C82789;
    const double C12204 = C11795 + C11796;
    const double C71240 = C70836 + C70837;
    const double C152350 = ae * C152349;
    const double C575 = (4 * C152290 + C152169 * C152315 + C152162 * C152349 +
                         C152162 * C152344 * ae) /
                        C151933;
    const double C1495 =
        (C152354 * C152226 + C152372 + C152372 +
         C152162 *
             (2 * ae * C152367 +
              C152162 * C152354 *
                  (3 * C152222 +
                   C152169 * (2 * C152169 * C152220 +
                              C152169 * (C152220 + (C152214 * C152215 +
                                                    C152166 * bs[9] *
                                                        std::pow(C152164, 9)) *
                                                       C152165 * C152181))))) /
        C151940;
    const double C1501 = C135 * C1490;
    const double C7987 = C7060 * C1490;
    const double C16255 = C14935 * C1490;
    const double C47891 = C46976 * C1490;
    const double C98516 = C97196 * C1490;
    const double C116479 = C152085 * C1490;
    const double C152416 = C152415 + C152412;
    const double C152727 = C152710 + C152725;
    const double C152743 = ae * C152742;
    const double C8530 =
        (2 * C152378 + C152162 * C152742 + (C152375 + C152733 * C152166) * ae) /
        C151933;
    const double C6168 =
        (2 * (2 * ae * C152487 + C152162 * C152508) + C152579 + C152579 +
         C152162 *
             (C152508 + C152576 + C152576 +
              C152162 *
                  (2 * ae * C152521 +
                   C152162 * (C152222 + (C152220 + (C152214 * C152215 +
                                                    C152166 * bs[9] *
                                                        std::pow(C152164, 9)) *
                                                       C152165 * C152181) *
                                            C152402)))) /
        C151940;
    const double C6175 = C135 * C6162;
    const double C9910 = C7060 * C6162;
    const double C21283 = C14935 * C6162;
    const double C49802 = C46976 * C6162;
    const double C63286 = C62974 * C6162;
    const double C101760 = C97196 * C6162;
    const double C106792 = C106480 * C6162;
    const double C118390 = C152085 * C6162;
    const double C152768 = C152767 + C152761;
    const double C152854 = ae * C152852;
    const double C152853 = C152162 * C152852;
    const double C28363 =
        (3 * C152511 + C152354 * C152942 + C152986 + C152986 +
         C152162 *
             (2 * ae * C152981 +
              C152162 * (3 * C152940 +
                         C152354 * (2 * C152354 * C152938 +
                                    C152354 * (C152938 +
                                               C152169 *
                                                   (C152214 * C152215 +
                                                    C152166 * bs[9] *
                                                        std::pow(C152164, 9)) *
                                                   C152165 * C152402))))) /
        C151940;
    const double C28366 = C135 * C28361;
    const double C30687 = C7060 * C28361;
    const double C41536 = C14935 * C28361;
    const double C51520 = C46976 * C28361;
    const double C104582 = C97196 * C28361;
    const double C122050 = C152085 * C28361;
    const double C153107 = ae * C153106;
    const double C31685 =
        (2 * C152547 + C152162 * C153106 + (C152544 + C152978 * C152166) * ae) /
        C151933;
    const double C153095 = C153094 + C153088;
    const double C153296 = C153259 + C153294;
    const double C153338 = ae * C153336;
    const double C153337 = C152162 * C153336;
    const double C153027 = ae * C153026;
    const double C29126 = (4 * C152560 + C152354 * C152958 + C152162 * C153026 +
                           C152162 * C153023 * ae) /
                          C151933;
    const double C153038 = C153037 + C153034;
    const double C153128 = C153111 + C153126;
    const double C153163 = ae * C153161;
    const double C153162 = C152162 * C153161;
    const double C153388 = C153348 + C153386;
    const double C153449 = C153448 + C153431;
    const double C614 = C153882 * C585;
    const double C7100 = C154146 * C585;
    const double C15966 = C153969 * C585;
    const double C47016 = C154146 * C585;
    const double C98227 = C153969 * C585;
    const double C115604 = C115558 * C585;
    const double C624 = C612 + C613;
    const double C7115 = C7098 + C7099;
    const double C15972 = C15965 + C15518;
    const double C47031 = C47014 + C47015;
    const double C98233 = C98226 + C97779;
    const double C115619 = C115602 + C115603;
    const double C198 = C192 + C179;
    const double C419 = C411 + C393;
    const double C784 = C783 + C780;
    const double C918 = C917 + C914;
    const double C15000 = C14990 + C14968;
    const double C97261 = C97251 + C97229;
    const double C1125 = C1121 + C1112;
    const double C15766 = C15764 + C15756;
    const double C98027 = C98025 + C98017;
    const double C11809 = C11808 + C1502;
    const double C7997 = C7993 + C7408;
    const double C16268 = C16262 + C16253;
    const double C47901 = C47897 + C47324;
    const double C98529 = C98523 + C98514;
    const double C116489 = C116485 + C115912;
    const double C2279 =
        (2 * (2 * ae * C152290 + C152162 * C152209) + C152428 + C152428 +
         C152162 * (C152209 + C152425 + C152425 +
                    C152162 * (2 * ae * C152311 + C152162 * C152224))) /
        C151940;
    const double C2285 = C135 * C2274;
    const double C7724 = C7058 * C2274;
    const double C7722 = C7060 * C2274;
    const double C15515 = C14935 * C2274;
    const double C17982 = C14933 * C2274;
    const double C47628 = C46974 * C2274;
    const double C47626 = C46976 * C2274;
    const double C63014 = C62974 * C2274;
    const double C97776 = C97196 * C2274;
    const double C100243 = C97194 * C2274;
    const double C106520 = C106480 * C2274;
    const double C116216 = C152060 * C2274;
    const double C116214 = C152085 * C2274;
    const double C3421 = C3415 + C3402;
    const double C7447 = C7435 + C7405;
    const double C20488 = C20482 + C20470;
    const double C47363 = C47351 + C47321;
    const double C102371 = C102369 + C102365;
    const double C115951 = C115939 + C115909;
    const double C8553 = C154146 * C6169;
    const double C19469 = C153969 * C6169;
    const double C48454 = C154146 * C6169;
    const double C63773 = C154123 * C6169;
    const double C107279 = C154123 * C6169;
    const double C110947 = C153969 * C6169;
    const double C117042 = C115558 * C6169;
    const double C8562 = C8551 + C8552;
    const double C19473 = C19468 + C16803;
    const double C48463 = C48452 + C48453;
    const double C63781 = C63772 + C63285;
    const double C110949 = C110946 + C99064;
    const double C107287 = C107278 + C106791;
    const double C117051 = C117040 + C117041;
    const double C152706 = ae * C152705;
    const double C7671 = (3 * C152438 + C152162 * C152705 +
                          (2 * C152432 + C152162 * C152695) * ae) /
                         C151933;
    const double C34997 = C34996 + C4824;
    const double C30714 = C30701 + C8942;
    const double C39759 = C39757 + C22267;
    const double C51547 = C51534 + C48843;
    const double C102791 = C102785 + C102776;
    const double C120243 = C120234 + C117431;
    const double C34792 = C28236 * C154116;
    const double C74185 = C28236 * C154116;
    const double C35657 = C28790 * C154116;
    const double C75045 = C28790 * C154116;
    const double C31708 = C154146 * C6170;
    const double C38777 = C153969 * C6170;
    const double C52532 = C154146 * C6170;
    const double C63281 = C154123 * C6170;
    const double C101759 = C153969 * C6170;
    const double C106787 = C154123 * C6170;
    const double C121539 = C115558 * C6170;
    const double C31720 = C31707 + C9913;
    const double C38779 = C38776 + C21285;
    const double C52544 = C52531 + C49805;
    const double C63297 = C63279 + C63280;
    const double C101767 = C101757 + C101758;
    const double C106803 = C106785 + C106786;
    const double C121547 = C121538 + C118393;
    const double C152795 = ae * C152794;
    const double C9169 = (3 * C152613 + C152162 * C152794 +
                          (2 * C152607 + C152162 * C152785) * ae) /
                         C151933;
    const double C152891 = C152862 + C152889;
    const double C29132 = C153882 * C28362;
    const double C32109 = C154146 * C28362;
    const double C45648 = C153969 * C28362;
    const double C52933 = C154146 * C28362;
    const double C132699 = C153969 * C28362;
    const double C149622 = C115558 * C28362;
    const double C29135 = C29131 + C28365;
    const double C32116 = C32108 + C30679;
    const double C45652 = C45647 + C41538;
    const double C52940 = C52932 + C51512;
    const double C132703 = C132698 + C104584;
    const double C149629 = C149621 + C122053;
    const double C29003 = C29002 + C28999;
    const double C29554 = C29553 + C29550;
    const double C44791 = C44789 + C44783;
    const double C131842 = C131840 + C131834;
    const double C29885 =
        (2 * (2 * ae * C152560 + C152162 * C152935) + C153050 + C153050 +
         C152162 * (C152935 + C153047 + C153047 +
                    C152162 * (2 * ae * C152954 + C152162 * C152996))) /
        C151940;
    const double C29888 = C135 * C29883;
    const double C31702 = C7060 * C29883;
    const double C32357 = C7058 * C29883;
    const double C40557 = C14935 * C29883;
    const double C46176 = C14933 * C29883;
    const double C52526 = C46976 * C29883;
    const double C53178 = C46974 * C29883;
    const double C64626 = C62974 * C29883;
    const double C103597 = C97196 * C29883;
    const double C108132 = C106480 * C29883;
    const double C123351 = C152085 * C29883;
    const double C133227 = C97194 * C29883;
    const double C149861 = C152060 * C29883;
    const double C153073 = ae * C153072;
    const double C30948 = (3 * C152624 + C152162 * C153072 +
                           (2 * C152618 + C152162 * C153062) * ae) /
                          C151933;
    const double C153200 = C153171 + C153198;
    const double C153419 = C153412 + C153245;
    const double C153247 = C153246 + C153234;
    const double C152059 = C152037 - C152052;
    const double C152042 = C152035 / C151933;
    const double C97240 = C97224 + C97225;
    const double C97239 = C97221 + C97222;
    const double C97236 = C97212 + C97213;
    const double C97234 = C97206 + C97207;
    const double C97232 = C97200 + C97201;
    const double C97518 = C97498 + C97499;
    const double C97516 = C97492 + C97493;
    const double C97514 = C97486 + C97487;
    const double C97513 = C97479 + C97480;
    const double C97511 = C97473 + C97474;
    const double C97509 = C97467 + C97468;
    const double C97792 = C97772 + C97773;
    const double C97790 = C97766 + C97767;
    const double C97788 = C97760 + C97761;
    const double C97787 = C97753 + C97754;
    const double C97785 = C97747 + C97748;
    const double C97783 = C97741 + C97742;
    const double C98022 = C98014 + C97504;
    const double C98232 = C98224 + C97778;
    const double C98522 = C98510 + C98511;
    const double C98520 = C98504 + C98505;
    const double C98518 = C98498 + C98499;
    const double C101425 = C101408 + C98863;
    const double C101423 = C101402 + C101403;
    const double C101422 = C101398 + C98867;
    const double C101420 = C101392 + C98865;
    const double C101417 = C101384 + C97484;
    const double C101415 = C101380 + C97483;
    const double C101766 = C101754 + C101755;
    const double C101764 = C101750 + C99067;
    const double C101763 = C101746 + C99721;
    const double C102366 = C102362 + C99719;
    const double C102784 = C102772 + C102773;
    const double C102783 = C102766 + C98496;
    const double C102781 = C102762 + C99723;
    const double C103291 = C103283 + C101400;
    const double C103601 = C103591 + C101748;
    const double C103599 = C103587 + C99069;
    const double C104586 = C104578 + C102768;
    const double C110948 = C110944 + C99065;
    const double C131837 = C131831 + C103290;
    const double C132043 = C132037 + C103598;
    const double C132702 = C132696 + C104585;
    const double C7138 = C7126 + C7097;
    const double C7135 = C7123 + C7088;
    const double C7132 = C7120 + C7079;
    const double C7129 = C7117 + C7070;
    const double C7446 = C7434 + C7402;
    const double C7443 = C7431 + C7393;
    const double C7440 = C7428 + C7378;
    const double C7437 = C7425 + C7369;
    const double C7757 = C7745 + C7707;
    const double C7754 = C7742 + C7692;
    const double C7751 = C7739 + C7683;
    const double C7999 = C7996 + C7984;
    const double C8238 = C8235 + C8223;
    const double C8573 = C8567 + C8550;
    const double C8570 = C8564 + C8541;
    const double C30725 = C30713 + C30683;
    const double C30722 = C30710 + C30674;
    const double C30719 = C30707 + C30668;
    const double C30716 = C30704 + C30662;
    const double C31737 = C31728 + C31706;
    const double C31734 = C31725 + C31697;
    const double C31731 = C31722 + C31691;
    const double C32121 = C32118 + C32107;
    const double C32372 = C32366 + C32347;
    const double C33121 = C33118 + C33107;
    const double C14999 = C14989 + C14965;
    const double C14998 = C14988 + C14962;
    const double C14995 = C14985 + C14953;
    const double C14993 = C14983 + C14947;
    const double C14991 = C14981 + C14941;
    const double C15281 = C15269 + C15239;
    const double C15279 = C15267 + C15233;
    const double C15277 = C15265 + C15227;
    const double C15276 = C15264 + C15220;
    const double C15274 = C15262 + C15214;
    const double C15272 = C15260 + C15208;
    const double C15555 = C15543 + C15513;
    const double C15553 = C15541 + C15507;
    const double C15551 = C15539 + C15501;
    const double C15550 = C15538 + C15494;
    const double C15548 = C15536 + C15488;
    const double C15546 = C15534 + C15482;
    const double C15765 = C15763 + C15754;
    const double C15975 = C15973 + C15964;
    const double C16273 = C16267 + C16251;
    const double C16271 = C16265 + C16245;
    const double C16269 = C16263 + C16239;
    const double C19170 = C19162 + C19145;
    const double C19168 = C19160 + C19140;
    const double C19167 = C19159 + C19137;
    const double C19164 = C19156 + C19127;
    const double C19480 = C19476 + C19467;
    const double C19478 = C19474 + C19463;
    const double C20487 = C20481 + C20468;
    const double C20485 = C20479 + C20463;
    const double C20484 = C20478 + C20460;
    const double C20987 = C20985 + C20974;
    const double C21293 = C21291 + C21280;
    const double C22275 = C22273 + C22262;
    const double C38482 = C38480 + C38475;
    const double C38782 = C38780 + C38775;
    const double C39760 = C39758 + C39753;
    const double C40259 = C40257 + C40248;
    const double C40563 = C40561 + C40552;
    const double C41544 = C41542 + C41533;
    const double C44790 = C44788 + C44781;
    const double C44996 = C44994 + C44987;
    const double C45655 = C45653 + C45646;
    const double C47053 = C47041 + C47010;
    const double C47052 = C47040 + C47007;
    const double C47047 = C47035 + C46992;
    const double C47044 = C47032 + C46983;
    const double C47361 = C47349 + C47315;
    const double C47358 = C47346 + C47306;
    const double C47357 = C47345 + C47297;
    const double C47354 = C47342 + C47288;
    const double C47663 = C47651 + C47617;
    const double C47660 = C47648 + C47608;
    const double C47659 = C47647 + C47599;
    const double C47656 = C47644 + C47590;
    const double C47902 = C47899 + C47886;
    const double C48141 = C48138 + C48125;
    const double C48473 = C48467 + C48448;
    const double C48470 = C48464 + C48439;
    const double C51557 = C51545 + C51514;
    const double C51556 = C51544 + C51509;
    const double C51551 = C51539 + C51499;
    const double C51548 = C51536 + C51493;
    const double C52560 = C52551 + C52528;
    const double C52559 = C52550 + C52523;
    const double C52556 = C52547 + C52517;
    const double C52944 = C52941 + C52929;
    const double C53195 = C53189 + C53172;
    const double C53192 = C53186 + C53166;
    const double C53941 = C53938 + C53926;
    const double C58376 = C58373 + C58365;
    const double C47054 = C47042 + C47013;
    const double C47051 = C47039 + C47004;
    const double C47048 = C47036 + C46995;
    const double C47045 = C47033 + C46986;
    const double C47362 = C47350 + C47318;
    const double C47359 = C47347 + C47309;
    const double C47356 = C47344 + C47294;
    const double C47353 = C47341 + C47285;
    const double C47661 = C47649 + C47611;
    const double C47658 = C47646 + C47596;
    const double C47655 = C47643 + C47587;
    const double C47903 = C47900 + C47888;
    const double C48142 = C48139 + C48127;
    const double C48474 = C48468 + C48451;
    const double C48471 = C48465 + C48442;
    const double C51558 = C51546 + C51516;
    const double C51555 = C51543 + C51507;
    const double C51552 = C51540 + C51501;
    const double C51549 = C51537 + C51495;
    const double C52561 = C52552 + C52530;
    const double C52558 = C52549 + C52521;
    const double C52555 = C52546 + C52515;
    const double C52945 = C52942 + C52931;
    const double C53193 = C53187 + C53168;
    const double C53942 = C53939 + C53928;
    const double C55371 = C55351 * C2274;
    const double C55368 = C55351 * C2275;
    const double C55361 = C55351 * C2276;
    const double C55358 = C55351 * C2277;
    const double C55513 = C55351 * C6164;
    const double C55510 = C55351 * C6165;
    const double C55505 = C55351 * C6166;
    const double C55498 = C55351 * C6167;
    const double C55658 = C55351 * C7670;
    const double C55646 = C55351 * C7669;
    const double C55788 = C55351 * C6163;
    const double C56087 = C55351 * C9170;
    const double C56299 = C55351 * C29883;
    const double C63017 = C62972 * C573;
    const double C63011 = C62972 * C572;
    const double C62996 = C62972 * C571;
    const double C62987 = C62972 * C570;
    const double C62978 = C62972 * C569;
    const double C63287 = C62972 * C3375;
    const double C63284 = C62972 * C1492;
    const double C63277 = C62972 * C3374;
    const double C63268 = C62972 * C3373;
    const double C63263 = C62972 * C1494;
    const double C63254 = C62972 * C1493;
    const double C63542 = C62972 * C2275;
    const double C63535 = C62972 * C7670;
    const double C63526 = C62972 * C7669;
    const double C63521 = C62972 * C2277;
    const double C63512 = C62972 * C2276;
    const double C63775 = C62972 * C1491;
    const double C63993 = C62972 * C2274;
    const double C64283 = C62972 * C6163;
    const double C64277 = C62972 * C6165;
    const double C64268 = C62972 * C6167;
    const double C64627 = C62972 * C4814;
    const double C64623 = C62972 * C4813;
    const double C64829 = C62972 * C9170;
    const double C65483 = C62972 * C6166;
    const double C65479 = C62972 * C6164;
    const double C68215 = C62972 * C28360;
    const double C69103 = C62972 * C29883;
    const double C106523 = C106478 * C573;
    const double C106517 = C106478 * C572;
    const double C106502 = C106478 * C571;
    const double C106493 = C106478 * C570;
    const double C106484 = C106478 * C569;
    const double C106793 = C106478 * C3375;
    const double C106790 = C106478 * C1492;
    const double C106783 = C106478 * C3374;
    const double C106774 = C106478 * C3373;
    const double C106769 = C106478 * C1494;
    const double C106760 = C106478 * C1493;
    const double C107048 = C106478 * C2275;
    const double C107041 = C106478 * C7670;
    const double C107032 = C106478 * C7669;
    const double C107027 = C106478 * C2277;
    const double C107018 = C106478 * C2276;
    const double C107281 = C106478 * C1491;
    const double C107499 = C106478 * C2274;
    const double C107789 = C106478 * C6163;
    const double C107783 = C106478 * C6165;
    const double C107774 = C106478 * C6167;
    const double C108133 = C106478 * C4814;
    const double C108129 = C106478 * C4813;
    const double C108335 = C106478 * C9170;
    const double C108989 = C106478 * C6166;
    const double C108985 = C106478 * C6164;
    const double C135431 = C106478 * C28360;
    const double C136319 = C106478 * C29883;
    const double C152051 = C152043 / C151933;
    const double C647 = C639 * C153865;
    const double C11805 = C639 * C154107;
    const double C70846 = C639 * C70415;
    const double C7760 = C7748 + C7716;
    const double C7750 = C7738 + C7680;
    const double C15554 = C15542 + C15510;
    const double C47664 = C47652 + C47620;
    const double C47654 = C47642 + C47584;
    const double C63048 = C63036 + C62994;
    const double C97815 = C97803 + C97771;
    const double C106554 = C106542 + C106500;
    const double C116242 = C116230 + C116172;
    const double C8571 = C8565 + C8544;
    const double C78167 = C78164 + C78157;
    const double C19479 = C19475 + C19465;
    const double C48472 = C48466 + C48445;
    const double C58377 = C58374 + C58367;
    const double C63306 = C63298 + C63252;
    const double C101777 = C101771 + C101753;
    const double C106812 = C106804 + C106758;
    const double C117060 = C117054 + C117033;
    const double C7710 = C154146 * C7674;
    const double C47614 = C154146 * C7674;
    const double C63536 = C62965 * C7674;
    const double C63510 = C154123 * C7674;
    const double C107042 = C154177 * C7674;
    const double C107016 = C154123 * C7674;
    const double C116202 = C115558 * C7674;
    const double C7734 = C7708 + C7709;
    const double C47638 = C47612 + C47613;
    const double C63548 = C63508 + C63509;
    const double C107054 = C107014 + C107015;
    const double C116226 = C116200 + C116201;
    const double C31730 = C31721 + C31689;
    const double C40564 = C40562 + C40554;
    const double C32375 = C32369 + C32353;
    const double C52554 = C52545 + C52513;
    const double C53196 = C53190 + C53174;
    const double C67018 = C67010 + C66991;
    const double C103610 = C103606 + C103594;
    const double C134234 = C134226 + C134207;
    const double C123362 = C123359 + C123347;
    const double C32349 = C154146 * C9173;
    const double C53170 = C154146 * C9173;
    const double C67863 = C154123 * C9173;
    const double C68429 = C62965 * C9173;
    const double C122360 = C115558 * C9173;
    const double C135079 = C154123 * C9173;
    const double C135645 = C154177 * C9173;
    const double C32361 = C32348 + C9181;
    const double C53182 = C53169 + C49073;
    const double C67870 = C67862 + C64269;
    const double C135086 = C135078 + C107775;
    const double C122369 = C122359 + C117661;
    const double C152929 = ae * C152928;
    const double C10505 = (4 * C152659 + C152162 * C152928 +
                           (3 * C152649 + C152162 * C152917) * ae) /
                          C151933;
    const double C587 =
        (4 * C152209 + C152169 * C152226 + C152350 + C152350 +
         C152162 *
             (2 * ae * C152347 +
              C152162 *
                  (4 * C152224 +
                   C152169 *
                       (3 * C152222 +
                        C152169 *
                            (2 * C152169 * C152220 +
                             C152169 * (C152220 + (C152214 * C152215 +
                                                   C152166 * bs[9] *
                                                       std::pow(C152164, 9)) *
                                                      C152165 * C152181)))))) /
        C151940;
    const double C616 = C135 * C575;
    const double C7101 = C7060 * C575;
    const double C15967 = C14935 * C575;
    const double C47017 = C46976 * C575;
    const double C98228 = C97196 * C575;
    const double C115605 = C152085 * C575;
    const double C152417 = ae * C152416;
    const double C2273 =
        (2 * C152317 + C152162 * C152416 + (C152312 + C152340 * C152166) * ae) /
        C151933;
    const double C152728 = C152727 + C152721;
    const double C8531 =
        (2 * (2 * ae * C152374 + C152162 * C152731) + C152743 + C152743 +
         C152162 *
             (C152731 + C152740 + C152740 +
              C152162 * (2 * ae * C152732 +
                         C152162 * C152354 *
                             (2 * C152169 * C152220 +
                              C152169 * (C152220 + (C152214 * C152215 +
                                                    C152166 * bs[9] *
                                                        std::pow(C152164, 9)) *
                                                       C152165 * C152181))))) /
        C151940;
    const double C8554 = C7060 * C8530;
    const double C14154 = C135 * C8530;
    const double C16801 = C14935 * C8530;
    const double C48455 = C46976 * C8530;
    const double C63774 = C62974 * C8530;
    const double C99062 = C97196 * C8530;
    const double C107280 = C106480 * C8530;
    const double C117043 = C152085 * C8530;
    const double C152769 = ae * C152768;
    const double C9168 = (3 * C152590 + C152162 * C152768 +
                          (2 * C152584 + C152162 * C152759) * ae) /
                         C151933;
    const double C152855 = C152826 + C152853;
    const double C31686 =
        (2 * (2 * ae * C152543 + C152162 * C152942) + C153107 + C153107 +
         C152162 *
             (C152942 + C153104 + C153104 +
              C152162 * (2 * ae * C152977 +
                         C152162 * (2 * C152354 * C152938 +
                                    C152354 * (C152938 +
                                               C152169 *
                                                   (C152214 * C152215 +
                                                    C152166 * bs[9] *
                                                        std::pow(C152164, 9)) *
                                                   C152165 * C152402))))) /
        C151940;
    const double C31709 = C7060 * C31685;
    const double C37340 = C135 * C31685;
    const double C40555 = C14935 * C31685;
    const double C52533 = C46976 * C31685;
    const double C64622 = C62974 * C31685;
    const double C103595 = C97196 * C31685;
    const double C108128 = C106480 * C31685;
    const double C123348 = C152085 * C31685;
    const double C153096 = ae * C153095;
    const double C30949 = (3 * C152601 + C152162 * C153095 +
                           (2 * C152595 + C152162 * C153085) * ae) /
                          C151933;
    const double C153297 = C153296 + C153284;
    const double C153339 = C153307 + C153337;
    const double C29127 =
        (4 * C152935 + C152354 * C152998 + C153027 + C153027 +
         C152162 *
             (2 * ae * C153022 +
              C152162 *
                  (4 * C152996 +
                   C152354 *
                       (3 * C152994 +
                        C152354 *
                            (2 * C152354 * C152220 +
                             C152354 * (C152220 + (C152214 * C152215 +
                                                   C152166 * bs[9] *
                                                       std::pow(C152164, 9)) *
                                                      C152165 * C152402)))))) /
        C151940;
    const double C29133 = C135 * C29126;
    const double C32110 = C7060 * C29126;
    const double C45649 = C14935 * C29126;
    const double C52934 = C46976 * C29126;
    const double C132700 = C97196 * C29126;
    const double C149623 = C152085 * C29126;
    const double C153039 = ae * C153038;
    const double C29882 =
        (2 * C152962 + C152162 * C153038 + (C152959 + C153019 * C152166) * ae) /
        C151933;
    const double C153129 = C153128 + C153122;
    const double C153164 = C153135 + C153162;
    const double C153389 = C153388 + C153377;
    const double C153451 = ae * C153449;
    const double C153450 = C152162 * C153449;
    const double C632 = C624 + C613;
    const double C7127 = C7115 + C7099;
    const double C15974 = C15972 + C15518;
    const double C47043 = C47031 + C47015;
    const double C98235 = C98233 + C97779;
    const double C115631 = C115619 + C115603;
    const double C204 = C198 * C153865;
    const double C427 = C419 * C153865;
    const double C2861 = C419 * C154143;
    const double C12009 = C419 * C153927;
    const double C24186 = C419 * C154143;
    const double C71045 = C419 * C153927;
    const double C82787 = C419 * C82771;
    const double C785 = C784 * C153865;
    const double C11390 = C784 * C153927;
    const double C70431 = C784 * C153927;
    const double C919 = C918 * C153865;
    const double C1129 = C1125 * C153865;
    const double C12207 = C1125 * C153927;
    const double C71243 = C1125 * C153927;
    const double C11810 = C11809 + C11807;
    const double C8000 = C7997 + C7986;
    const double C16274 = C16268 + C16254;
    const double C47904 = C47901 + C47890;
    const double C98535 = C98529 + C98515;
    const double C116492 = C116489 + C116478;
    const double C8225 = C154146 * C2279;
    const double C15516 = C153969 * C2279;
    const double C48129 = C154146 * C2279;
    const double C63015 = C154123 * C2279;
    const double C97777 = C153969 * C2279;
    const double C106521 = C154123 * C2279;
    const double C116717 = C115558 * C2279;
    const double C8232 = C8224 + C7722;
    const double C15532 = C15514 + C15515;
    const double C48136 = C48128 + C47626;
    const double C63031 = C63013 + C63014;
    const double C97793 = C97775 + C97776;
    const double C106537 = C106519 + C106520;
    const double C116724 = C116716 + C116214;
    const double C3427 = C3421 * C154143;
    const double C24650 = C3421 * C154143;
    const double C83251 = C3421 * C82771;
    const double C8568 = C8562 + C8552;
    const double C19477 = C19473 + C16803;
    const double C48469 = C48463 + C48453;
    const double C63785 = C63781 + C63285;
    const double C110951 = C110949 + C99064;
    const double C107291 = C107287 + C106791;
    const double C117057 = C117051 + C117041;
    const double C7675 =
        (3 * (C152195 + C152436 + C152436 + C152162 * C152696) + C152706 +
         C152706 +
         C152162 *
             (2 * C152696 + C152703 + C152703 +
              C152162 * (C152207 + C152699 + C152699 +
                         C152162 * (2 * ae * C152307 + C152162 * C152222)))) /
        C151940;
    const double C7718 = C7060 * C7671;
    const double C10511 = C7058 * C7671;
    const double C17983 = C14935 * C7671;
    const double C47622 = C46976 * C7671;
    const double C50394 = C46974 * C7671;
    const double C55369 = C55353 * C7671;
    const double C55915 = C55351 * C7671;
    const double C63545 = C62972 * C7671;
    const double C63543 = C62974 * C7671;
    const double C100244 = C97196 * C7671;
    const double C107051 = C106478 * C7671;
    const double C107049 = C106480 * C7671;
    const double C116210 = C152085 * C7671;
    const double C118982 = C152060 * C7671;
    const double C34998 = C34997 + C34995;
    const double C30726 = C30714 + C30685;
    const double C39761 = C39759 + C39755;
    const double C51559 = C51547 + C51518;
    const double C102797 = C102791 + C102777;
    const double C120252 = C120243 + C120221;
    const double C31729 = C31720 + C9913;
    const double C38781 = C38779 + C21285;
    const double C52553 = C52544 + C49805;
    const double C63305 = C63297 + C63280;
    const double C101773 = C101767 + C101758;
    const double C106811 = C106803 + C106786;
    const double C121553 = C121547 + C118393;
    const double C9172 =
        (3 * (C152604 + C152611 + C152611 + C152162 * C152782) + C152795 +
         C152795 +
         C152162 *
             (2 * C152782 + C152792 + C152792 +
              C152162 * (C152772 + C152788 + C152788 +
                         C152162 * (2 * ae * C152774 +
                                    C152162 * C152354 * C152169 * C152220)))) /
        C151940;
    const double C9178 = C7060 * C9169;
    const double C23053 = C14935 * C9169;
    const double C49070 = C46976 * C9169;
    const double C55511 = C55353 * C9169;
    const double C56090 = C55351 * C9169;
    const double C61866 = C46974 * C9169;
    const double C64280 = C62974 * C9169;
    const double C64825 = C62972 * C9169;
    const double C81656 = C7058 * C9169;
    const double C105368 = C97196 * C9169;
    const double C107786 = C106480 * C9169;
    const double C108331 = C106478 * C9169;
    const double C117658 = C152085 * C9169;
    const double C124138 = C152060 * C9169;
    const double C152892 = C152891 + C152884;
    const double C29137 = C29135 + C28365;
    const double C32119 = C32116 + C30679;
    const double C45654 = C45652 + C41538;
    const double C52943 = C52940 + C51512;
    const double C132705 = C132703 + C104584;
    const double C149632 = C149629 + C122053;
    const double C33109 = C154146 * C29885;
    const double C44989 = C153969 * C29885;
    const double C53930 = C154146 * C29885;
    const double C68213 = C154123 * C29885;
    const double C132040 = C153969 * C29885;
    const double C135429 = C154123 * C29885;
    const double C150604 = C115558 * C29885;
    const double C33116 = C33108 + C31702;
    const double C44993 = C44988 + C40557;
    const double C53937 = C53929 + C52526;
    const double C68221 = C68212 + C64626;
    const double C132044 = C132039 + C103597;
    const double C135437 = C135428 + C108132;
    const double C150611 = C150603 + C123351;
    const double C30950 =
        (3 * (C152514 + C152622 + C152622 + C152162 * C153063) + C153073 +
         C153073 +
         C152162 *
             (2 * C153063 + C153070 + C153070 +
              C152162 * (C152933 + C153066 + C153066 +
                         C152162 * (2 * ae * C152950 + C152162 * C152994)))) /
        C151940;
    const double C30955 = C7060 * C30948;
    const double C33712 = C7058 * C30948;
    const double C42322 = C14935 * C30948;
    const double C51782 = C46976 * C30948;
    const double C54527 = C46974 * C30948;
    const double C55506 = C55353 * C30948;
    const double C56840 = C55351 * C30948;
    const double C65482 = C62974 * C30948;
    const double C68433 = C62972 * C30948;
    const double C105370 = C97196 * C30948;
    const double C108988 = C106480 * C30948;
    const double C122364 = C152085 * C30948;
    const double C135649 = C106478 * C30948;
    const double C151201 = C152060 * C30948;
    const double C153201 = C153200 + C153193;
    const double C153444 = C153419 + C153441;
    const double C153249 = ae * C153247;
    const double C153248 = C152162 * C153247;
    const double C153401 = 5 * C153247;
    const double C115599 = C152059 * C552;
    const double C115590 = C152059 * C553;
    const double C115581 = C152059 * C554;
    const double C115572 = C152059 * C555;
    const double C115904 = C152059 * C1918;
    const double C115895 = C152059 * C1919;
    const double C115880 = C152059 * C1082;
    const double C115871 = C152059 * C1083;
    const double C116206 = C152059 * C2270;
    const double C116197 = C152059 * C2271;
    const double C116182 = C152059 * C558;
    const double C116173 = C152059 * C559;
    const double C116475 = C152059 * C1084;
    const double C116714 = C152059 * C560;
    const double C117037 = C152059 * C1487;
    const double C117028 = C152059 * C1488;
    const double C120218 = C152059 * C4169;
    const double C120211 = C152059 * C1920;
    const double C120202 = C152059 * C1081;
    const double C120545 = C152059 * C6159;
    const double C121536 = C152059 * C3370;
    const double C121529 = C152059 * C1489;
    const double C122046 = C152059 * C4168;
    const double C122357 = C152059 * C6161;
    const double C123344 = C152059 * C3369;
    const double C149619 = C152059 * C5559;
    const double C149856 = C152059 * C6160;
    const double C150601 = C152059 * C4811;
    const double C55350 =
        (C152059 / C151975 + ((C152086 - C151957 / C152083) * ae) / C151933) /
            C151975 -
        ((2 * (C152085 / C151975 + (0 * ae) / C151933) -
          C151957 / (C151933 * 4 * C151993)) *
         be) /
            C151933;
    const double C62971 =
        C152059 / C151975 - ((C152086 - C151957 / C152083) * be) / C151933;
    const double C106477 =
        C152059 / C151975 + ((C152086 - C151957 / C152083) * ae) / C151933;
    const double C152049 = C152042 + C152028;
    const double C97250 = C97240 + C97225;
    const double C97249 = C97239 + C97222;
    const double C97246 = C97236 + C97213;
    const double C97244 = C97234 + C97207;
    const double C97242 = C97232 + C97201;
    const double C97530 = C97518 + C97499;
    const double C97528 = C97516 + C97493;
    const double C97526 = C97514 + C97487;
    const double C97525 = C97513 + C97480;
    const double C97523 = C97511 + C97474;
    const double C97521 = C97509 + C97468;
    const double C97804 = C97792 + C97773;
    const double C97802 = C97790 + C97767;
    const double C97800 = C97788 + C97761;
    const double C97799 = C97787 + C97754;
    const double C97797 = C97785 + C97748;
    const double C97795 = C97783 + C97742;
    const double C98024 = C98022 + C97504;
    const double C98234 = C98232 + C97778;
    const double C98528 = C98522 + C98511;
    const double C98526 = C98520 + C98505;
    const double C98524 = C98518 + C98499;
    const double C101437 = C101425 + C98863;
    const double C101435 = C101423 + C101403;
    const double C101434 = C101422 + C98867;
    const double C101432 = C101420 + C98865;
    const double C101429 = C101417 + C97484;
    const double C101427 = C101415 + C97483;
    const double C101772 = C101766 + C101755;
    const double C101770 = C101764 + C99067;
    const double C101769 = C101763 + C99721;
    const double C102368 = C102366 + C99719;
    const double C102790 = C102784 + C102773;
    const double C102789 = C102783 + C98496;
    const double C102787 = C102781 + C99723;
    const double C103293 = C103291 + C101400;
    const double C103605 = C103601 + C101748;
    const double C103603 = C103599 + C99069;
    const double C104588 = C104586 + C102768;
    const double C110950 = C110948 + C99065;
    const double C131839 = C131837 + C103290;
    const double C132045 = C132043 + C103598;
    const double C132704 = C132702 + C104585;
    const double C7141 = C7135 + C7136;
    const double C7140 = C7131 + C7132;
    const double C30686 = C7443 + C7442;
    const double C77860 = C7442 + C7443;
    const double C77859 = C7440 + C7441;
    const double C77858 = C7441 + C7440;
    const double C7980 = C7437 + C7438;
    const double C78459 = C7438 + C7437;
    const double C8219 = C7751 + C7752;
    const double C79138 = C8569 + C8570;
    const double C79137 = C8570 + C8569;
    const double C32103 = C30722 + C30723;
    const double C30727 = C30718 + C30719;
    const double C33103 = C31731 + C31732;
    const double C15003 = C14997 + C14998;
    const double C15004 = C14996 + C14995;
    const double C15002 = C14995 + C14996;
    const double C15001 = C14993 + C14994;
    const double C19143 = C15279 + C15280;
    const double C19131 = C15280 + C15279;
    const double C19138 = C15277 + C15278;
    const double C19132 = C15278 + C15277;
    const double C19133 = C15275 + C15276;
    const double C19130 = C15276 + C15275;
    const double C15752 = C15273 + C15274;
    const double C18830 = C15274 + C15273;
    const double C15751 = C15271 + C15272;
    const double C19774 = C15272 + C15271;
    const double C15962 = C15547 + C15548;
    const double C15961 = C15545 + C15546;
    const double C20066 = C16272 + C16271;
    const double C20466 = C16271 + C16272;
    const double C20461 = C16269 + C16270;
    const double C20456 = C16270 + C16269;
    const double C38473 = C19168 + C19169;
    const double C38472 = C19169 + C19168;
    const double C38471 = C19167 + C19166;
    const double C39751 = C20485 + C20486;
    const double C39750 = C20486 + C20485;
    const double C40246 = C20988 + C20987;
    const double C43614 = C20987 + C20988;
    const double C41531 = C22276 + C22275;
    const double C44779 = C40260 + C40259;
    const double C45644 = C41545 + C41544;
    const double C47057 = C47051 + C47052;
    const double C47056 = C47047 + C47048;
    const double C51519 = C47359 + C47358;
    const double C58070 = C47358 + C47359;
    const double C58069 = C47356 + C47357;
    const double C58068 = C47357 + C47356;
    const double C47884 = C47353 + C47354;
    const double C58669 = C47354 + C47353;
    const double C48123 = C47655 + C47656;
    const double C59348 = C48470 + C48471;
    const double C59347 = C48471 + C48470;
    const double C52927 = C51555 + C51556;
    const double C51560 = C51551 + C51552;
    const double C53924 = C52555 + C52556;
    const double C152058 = C152050 - C152051;
    const double C7746 = C7734 + C7709;
    const double C47650 = C47638 + C47613;
    const double C63556 = C63548 + C63509;
    const double C107062 = C107054 + C107015;
    const double C116238 = C116226 + C116201;
    const double C32367 = C32361 + C9181;
    const double C53188 = C53182 + C49073;
    const double C67874 = C67870 + C64269;
    const double C135090 = C135086 + C107775;
    const double C122372 = C122369 + C117661;
    const double C10508 =
        (4 * (2 * C152650 + C152657 + C152657 + C152162 * C152918) + C152929 +
         C152929 +
         C152162 * (3 * C152918 + C152926 + C152926 +
                    C152162 * (2 * C152910 + C152922 + C152922 +
                               C152162 * (C152193 + C152914 + C152914 +
                                          C152162 * (2 * ae * C152281 +
                                                     C152162 * C152205))))) /
        C151940;
    const double C10516 = C7060 * C10505;
    const double C50399 = C46976 * C10505;
    const double C55653 = C55351 * C10505;
    const double C55645 = C55353 * C10505;
    const double C63527 = C62974 * C10505;
    const double C66009 = C62972 * C10505;
    const double C107033 = C106480 * C10505;
    const double C109515 = C106478 * C10505;
    const double C118987 = C152085 * C10505;
    const double C2278 =
        (2 * (2 * ae * C152315 + C152162 * C152226) + C152417 + C152417 +
         C152162 *
             (C152226 + C152414 + C152414 +
              C152162 *
                  (2 * ae * C152343 +
                   C152162 *
                       (3 * C152222 +
                        C152169 *
                            (2 * C152169 * C152220 +
                             C152169 * (C152220 + (C152214 * C152215 +
                                                   C152166 * bs[9] *
                                                       std::pow(C152164, 9)) *
                                                      C152165 * C152181)))))) /
        C151940;
    const double C2284 = C135 * C2273;
    const double C8226 = C7060 * C2273;
    const double C15519 = C14935 * C2273;
    const double C48130 = C46976 * C2273;
    const double C63016 = C62974 * C2273;
    const double C97780 = C97196 * C2273;
    const double C106522 = C106480 * C2273;
    const double C116718 = C152085 * C2273;
    const double C152729 = ae * C152728;
    const double C7672 = (3 * C152427 + C152162 * C152728 +
                          (2 * C152421 + C152162 * C152718) * ae) /
                         C151933;
    const double C9171 =
        (3 * (C152581 + C152588 + C152588 + C152162 * C152756) + C152769 +
         C152769 +
         C152162 *
             (2 * C152756 + C152766 + C152766 +
              C152162 * (C152746 + C152762 + C152762 +
                         C152162 * (2 * ae * C152748 +
                                    C152162 * C152354 *
                                        (C152220 + (C152214 * C152215 +
                                                    C152166 * bs[9] *
                                                        std::pow(C152164, 9)) *
                                                       C152165 * C152181))))) /
        C151940;
    const double C9175 = C7060 * C9168;
    const double C23051 = C14935 * C9168;
    const double C49067 = C46976 * C9168;
    const double C55787 = C55353 * C9168;
    const double C64282 = C62974 * C9168;
    const double C107788 = C106480 * C9168;
    const double C114443 = C97196 * C9168;
    const double C117655 = C152085 * C9168;
    const double C152856 = C152855 + C152848;
    const double C30951 =
        (3 * (C152511 + C152599 + C152599 + C152162 * C153086) + C153096 +
         C153096 +
         C152162 *
             (2 * C153086 + C153093 + C153093 +
              C152162 * (C152940 + C153089 + C153089 +
                         C152162 * (2 * ae * C152973 +
                                    C152162 * (C152938 +
                                               C152169 *
                                                   (C152214 * C152215 +
                                                    C152166 * bs[9] *
                                                        std::pow(C152164, 9)) *
                                                   C152165 * C152402))))) /
        C151940;
    const double C30956 = C7060 * C30949;
    const double C42320 = C14935 * C30949;
    const double C51783 = C46976 * C30949;
    const double C55512 = C55353 * C30949;
    const double C65478 = C62974 * C30949;
    const double C105366 = C97196 * C30949;
    const double C108984 = C106480 * C30949;
    const double C122361 = C152085 * C30949;
    const double C153299 = ae * C153297;
    const double C153298 = C152162 * C153297;
    const double C153340 = C153339 + C153332;
    const double C29884 =
        (2 * (2 * ae * C152958 + C152162 * C152998) + C153039 + C153039 +
         C152162 *
             (C152998 + C153036 + C153036 +
              C152162 *
                  (2 * ae * C153018 +
                   C152162 *
                       (3 * C152994 +
                        C152354 *
                            (2 * C152354 * C152220 +
                             C152354 * (C152220 + (C152214 * C152215 +
                                                   C152166 * bs[9] *
                                                       std::pow(C152164, 9)) *
                                                      C152165 * C152402)))))) /
        C151940;
    const double C29887 = C135 * C29882;
    const double C33110 = C7060 * C29882;
    const double C44990 = C14935 * C29882;
    const double C53931 = C46976 * C29882;
    const double C68214 = C62974 * C29882;
    const double C132041 = C97196 * C29882;
    const double C135430 = C106480 * C29882;
    const double C150605 = C152085 * C29882;
    const double C153130 = ae * C153129;
    const double C32341 = (3 * C153049 + C152162 * C153129 +
                           (2 * C153043 + C152162 * C153119) * ae) /
                          C151933;
    const double C153165 = C153164 + C153157;
    const double C153391 = ae * C153389;
    const double C153390 = C152162 * C153389;
    const double C153452 = C153402 + C153450;
    const double C640 = C632 + C614;
    const double C7139 = C7127 + C7100;
    const double C15976 = C15974 + C15966;
    const double C47055 = C47043 + C47016;
    const double C98237 = C98235 + C98227;
    const double C115643 = C115631 + C115604;
    const double C11811 = C11810 * C153927;
    const double C70847 = C11810 * C153927;
    const double C8236 = C8232 + C7722;
    const double C15544 = C15532 + C15515;
    const double C48140 = C48136 + C47626;
    const double C63043 = C63031 + C63014;
    const double C97805 = C97793 + C97776;
    const double C106549 = C106537 + C106520;
    const double C116728 = C116724 + C116214;
    const double C8574 = C8568 + C8553;
    const double C19481 = C19477 + C19469;
    const double C48475 = C48469 + C48454;
    const double C63789 = C63785 + C63773;
    const double C110953 = C110951 + C110947;
    const double C107295 = C107291 + C107279;
    const double C117063 = C117057 + C117042;
    const double C7719 = C154146 * C7675;
    const double C47623 = C154146 * C7675;
    const double C63991 = C154123 * C7675;
    const double C107497 = C154123 * C7675;
    const double C116211 = C115558 * C7675;
    const double C7737 = C7717 + C7718;
    const double C47641 = C47621 + C47622;
    const double C63999 = C63990 + C63543;
    const double C107505 = C107496 + C107049;
    const double C116229 = C116209 + C116210;
    const double C34999 = C34998 * C154116;
    const double C74387 = C34998 * C154116;
    const double C31738 = C31729 + C31708;
    const double C38783 = C38781 + C38777;
    const double C52562 = C52553 + C52532;
    const double C63313 = C63305 + C63281;
    const double C101779 = C101773 + C101759;
    const double C106819 = C106811 + C106787;
    const double C121559 = C121553 + C121539;
    const double C58369 = C154146 * C9172;
    const double C64281 = C154123 * C9172;
    const double C78159 = C154146 * C9172;
    const double C107787 = C154123 * C9172;
    const double C120548 = C115558 * C9172;
    const double C78162 = C78158 + C9178;
    const double C58372 = C58368 + C49070;
    const double C64289 = C64279 + C64280;
    const double C107795 = C107785 + C107786;
    const double C120551 = C120547 + C117658;
    const double C152893 = ae * C152892;
    const double C10504 = (4 * C152682 + C152162 * C152892 +
                           (3 * C152672 + C152162 * C152881) * ae) /
                          C151933;
    const double C29139 = C29137 + C29132;
    const double C32122 = C32119 + C32109;
    const double C45656 = C45654 + C45648;
    const double C52946 = C52943 + C52933;
    const double C132707 = C132705 + C132699;
    const double C149635 = C149632 + C149622;
    const double C33119 = C33116 + C31702;
    const double C44995 = C44993 + C40557;
    const double C53940 = C53937 + C52526;
    const double C68225 = C68221 + C64626;
    const double C132046 = C132044 + C103597;
    const double C135441 = C135437 + C108132;
    const double C150614 = C150611 + C123351;
    const double C32355 = C154146 * C30950;
    const double C53176 = C154146 * C30950;
    const double C69101 = C154123 * C30950;
    const double C136317 = C154123 * C30950;
    const double C149859 = C115558 * C30950;
    const double C32364 = C32354 + C30955;
    const double C53185 = C53175 + C51782;
    const double C69109 = C69100 + C65482;
    const double C136325 = C136316 + C108988;
    const double C149865 = C149858 + C122364;
    const double C153202 = ae * C153201;
    const double C33707 = (4 * C152820 + C152162 * C153201 +
                           (3 * C152811 + C152162 * C153190) * ae) /
                          C151933;
    const double C153250 = C153208 + C153248;
    const double C115618 = C115599 + C115600;
    const double C115615 = C115590 + C115591;
    const double C115612 = C115581 + C115582;
    const double C115609 = C115572 + C115573;
    const double C115926 = C115904 + C115905;
    const double C115923 = C115895 + C115896;
    const double C115920 = C115880 + C115881;
    const double C115917 = C115871 + C115872;
    const double C116228 = C116206 + C116207;
    const double C116225 = C116197 + C116198;
    const double C116222 = C116182 + C116183;
    const double C116219 = C116173 + C116174;
    const double C116484 = C116475 + C115911;
    const double C116723 = C116714 + C116213;
    const double C117050 = C117037 + C117038;
    const double C117047 = C117028 + C117029;
    const double C120233 = C120218 + C117432;
    const double C120229 = C120211 + C115890;
    const double C120223 = C120202 + C115887;
    const double C120550 = C120545 + C117659;
    const double C121546 = C121536 + C118394;
    const double C121542 = C121529 + C117023;
    const double C122057 = C122046 + C117435;
    const double C122368 = C122357 + C117662;
    const double C123355 = C123344 + C118397;
    const double C149628 = C149619 + C122054;
    const double C149864 = C149856 + C122365;
    const double C150610 = C150601 + C123352;
    const double C63010 = C62971 * C560;
    const double C62995 = C62971 * C559;
    const double C62986 = C62971 * C558;
    const double C63276 = C62971 * C3370;
    const double C63253 = C62971 * C1488;
    const double C63534 = C62971 * C7666;
    const double C63511 = C62971 * C2271;
    const double C63770 = C62971 * C1487;
    const double C63988 = C62971 * C2270;
    const double C64276 = C62971 * C6159;
    const double C66992 = C62971 * C3369;
    const double C66986 = C62971 * C1489;
    const double C67864 = C62971 * C6161;
    const double C68210 = C62971 * C4811;
    const double C68428 = C62971 * C9167;
    const double C69098 = C62971 * C6160;
    const double C106516 = C106477 * C560;
    const double C106501 = C106477 * C559;
    const double C106492 = C106477 * C558;
    const double C106782 = C106477 * C3370;
    const double C106759 = C106477 * C1488;
    const double C107040 = C106477 * C7666;
    const double C107017 = C106477 * C2271;
    const double C107276 = C106477 * C1487;
    const double C107494 = C106477 * C2270;
    const double C107782 = C106477 * C6159;
    const double C134208 = C106477 * C3369;
    const double C134202 = C106477 * C1489;
    const double C135080 = C106477 * C6161;
    const double C135426 = C106477 * C4811;
    const double C135644 = C106477 * C9167;
    const double C136314 = C106477 * C6160;
    const double C152057 = C152049 * be;
    const double C97260 = C97250 + C97226;
    const double C97259 = C97249 + C97223;
    const double C97256 = C97246 + C97214;
    const double C97254 = C97244 + C97208;
    const double C97252 = C97242 + C97202;
    const double C97542 = C97530 + C97500;
    const double C97540 = C97528 + C97494;
    const double C97538 = C97526 + C97488;
    const double C97537 = C97525 + C97481;
    const double C97535 = C97523 + C97475;
    const double C97533 = C97521 + C97469;
    const double C97816 = C97804 + C97774;
    const double C97814 = C97802 + C97768;
    const double C97812 = C97800 + C97762;
    const double C97811 = C97799 + C97755;
    const double C97809 = C97797 + C97749;
    const double C97807 = C97795 + C97743;
    const double C98026 = C98024 + C98015;
    const double C98236 = C98234 + C98225;
    const double C98534 = C98528 + C98512;
    const double C98532 = C98526 + C98506;
    const double C98530 = C98524 + C98500;
    const double C101449 = C101437 + C101409;
    const double C101447 = C101435 + C101404;
    const double C101446 = C101434 + C101399;
    const double C101444 = C101432 + C101393;
    const double C101441 = C101429 + C101385;
    const double C101439 = C101427 + C101381;
    const double C101778 = C101772 + C101756;
    const double C101776 = C101770 + C101751;
    const double C101775 = C101769 + C101747;
    const double C102370 = C102368 + C102363;
    const double C102796 = C102790 + C102774;
    const double C102795 = C102789 + C102767;
    const double C102793 = C102787 + C102763;
    const double C103295 = C103293 + C103284;
    const double C103609 = C103605 + C103592;
    const double C103607 = C103603 + C103588;
    const double C104590 = C104588 + C104579;
    const double C110952 = C110950 + C110945;
    const double C131841 = C131839 + C131832;
    const double C132047 = C132045 + C132038;
    const double C132706 = C132704 + C132697;
    const double C7143 = C7134 + C7141;
    const double C7142 = C7140 + C7133;
    const double C30702 = C7444 + C30686;
    const double C77863 = C77860 + C7444;
    const double C77862 = C7439 + C77859;
    const double C77861 = C77858 + C7439;
    const double C7990 = C7436 + C7980;
    const double C78460 = C78459 + C7436;
    const double C8229 = C7750 + C8219;
    const double C79140 = C79138 + C8571;
    const double C79139 = C8571 + C79137;
    const double C32113 = C30721 + C32103;
    const double C30728 = C30727 + C30720;
    const double C33113 = C31730 + C33103;
    const double C15007 = C15003 * C153865;
    const double C15008 = C15004 * C153865;
    const double C18832 = C15004 * C154107;
    const double C86807 = C15004 * C70415;
    const double C15006 = C15002 * C153865;
    const double C15005 = C15001 * C153865;
    const double C18829 = C15001 * C154107;
    const double C86804 = C15001 * C70415;
    const double C19772 = C19131 * C153927;
    const double C87680 = C19131 * C153927;
    const double C15760 = C15752 * C153865;
    const double C19773 = C15752 * C154107;
    const double C87681 = C15752 * C70415;
    const double C18833 = C18830 * C153927;
    const double C86805 = C18830 * C153927;
    const double C15759 = C15751 * C153865;
    const double C18831 = C15751 * C153927;
    const double C86806 = C15751 * C153927;
    const double C15970 = C15962 * C153865;
    const double C20067 = C15962 * C154107;
    const double C87974 = C15962 * C70415;
    const double C15969 = C15961 * C153865;
    const double C20068 = C20066 * C153927;
    const double C87973 = C20066 * C153927;
    const double C47059 = C47050 + C47057;
    const double C47058 = C47056 + C47049;
    const double C51535 = C47360 + C51519;
    const double C58073 = C58070 + C47360;
    const double C58072 = C47355 + C58069;
    const double C58071 = C58068 + C47355;
    const double C47894 = C47352 + C47884;
    const double C58670 = C58669 + C47352;
    const double C48133 = C47654 + C48123;
    const double C59350 = C59348 + C48472;
    const double C59349 = C48472 + C59347;
    const double C52937 = C51554 + C52927;
    const double C51561 = C51560 + C51553;
    const double C53934 = C52554 + C53924;
    const double C152065 = C152058 + C152022;
    const double C7758 = C7746 + C7710;
    const double C47662 = C47650 + C47614;
    const double C63564 = C63556 + C63510;
    const double C107070 = C107062 + C107016;
    const double C116250 = C116238 + C116202;
    const double C32373 = C32367 + C32349;
    const double C53194 = C53188 + C53170;
    const double C67878 = C67874 + C67863;
    const double C135094 = C135090 + C135079;
    const double C122375 = C122372 + C122360;
    const double C7676 =
        (3 * (C152209 + C152425 + C152425 + C152162 * C152719) + C152729 +
         C152729 +
         C152162 *
             (2 * C152719 + C152726 + C152726 +
              C152162 *
                  (C152224 + C152722 + C152722 +
                   C152162 *
                       (2 * ae * C152339 +
                        C152162 *
                            (2 * C152169 * C152220 +
                             C152169 * (C152220 + (C152214 * C152215 +
                                                   C152166 * bs[9] *
                                                       std::pow(C152164, 9)) *
                                                      C152165 * C152181)))))) /
        C151940;
    const double C7723 = C7060 * C7672;
    const double C17981 = C14935 * C7672;
    const double C47627 = C46976 * C7672;
    const double C55370 = C55353 * C7672;
    const double C63992 = C62974 * C7672;
    const double C100242 = C97196 * C7672;
    const double C107498 = C106480 * C7672;
    const double C116215 = C152085 * C7672;
    const double C152857 = ae * C152856;
    const double C10503 = (4 * C152705 + C152162 * C152856 +
                           (3 * C152695 + C152162 * C152845) * ae) /
                          C151933;
    const double C153300 = C153258 + C153298;
    const double C153341 = ae * C153340;
    const double C56081 = (4 * C152794 + C152162 * C153340 +
                           (3 * C152785 + C152162 * C153330) * ae) /
                          C151933;
    const double C32342 =
        (3 * (C152935 + C153047 + C153047 + C152162 * C153120) + C153130 +
         C153130 +
         C152162 *
             (2 * C153120 + C153127 + C153127 +
              C152162 *
                  (C152996 + C153123 + C153123 +
                   C152162 *
                       (2 * ae * C153014 +
                        C152162 *
                            (2 * C152354 * C152220 +
                             C152354 * (C152220 + (C152214 * C152215 +
                                                   C152166 * bs[9] *
                                                       std::pow(C152164, 9)) *
                                                      C152165 * C152402)))))) /
        C151940;
    const double C32356 = C7060 * C32341;
    const double C46175 = C14935 * C32341;
    const double C53177 = C46976 * C32341;
    const double C56298 = C55353 * C32341;
    const double C69102 = C62974 * C32341;
    const double C133226 = C97196 * C32341;
    const double C136318 = C106480 * C32341;
    const double C149860 = C152085 * C32341;
    const double C153166 = ae * C153165;
    const double C33706 = (4 * C153072 + C152162 * C153165 +
                           (3 * C153062 + C152162 * C153154) * ae) /
                          C151933;
    const double C153392 = C153347 + C153390;
    const double C153453 = C153452 + C153439;
    const double C648 = C640 * C153865;
    const double C8239 = C8236 + C8225;
    const double C15556 = C15544 + C15516;
    const double C48143 = C48140 + C48129;
    const double C63055 = C63043 + C63015;
    const double C97817 = C97805 + C97777;
    const double C106561 = C106549 + C106521;
    const double C116731 = C116728 + C116717;
    const double C7749 = C7737 + C7718;
    const double C47653 = C47641 + C47622;
    const double C64003 = C63999 + C63543;
    const double C107509 = C107505 + C107049;
    const double C116241 = C116229 + C116210;
    const double C78165 = C78162 + C9178;
    const double C58375 = C58372 + C49070;
    const double C64293 = C64289 + C64280;
    const double C107799 = C107795 + C107786;
    const double C120554 = C120551 + C117658;
    const double C10507 =
        (4 * (2 * C152673 + C152680 + C152680 + C152162 * C152882) + C152893 +
         C152893 +
         C152162 * (3 * C152882 + C152890 + C152890 +
                    C152162 * (2 * C152874 + C152886 + C152886 +
                               C152162 * (C152212 + C152878 + C152878 +
                                          C152162 * (2 * ae * C152323 +
                                                     C152162 * C152169 *
                                                         C152220))))) /
        C151940;
    const double C10513 = C7060 * C10504;
    const double C50396 = C46976 * C10504;
    const double C55661 = C55351 * C10504;
    const double C55659 = C55353 * C10504;
    const double C63538 = C62974 * C10504;
    const double C66005 = C62972 * C10504;
    const double C107044 = C106480 * C10504;
    const double C109511 = C106478 * C10504;
    const double C118984 = C152085 * C10504;
    const double C33122 = C33119 + C33109;
    const double C44997 = C44995 + C44989;
    const double C53943 = C53940 + C53930;
    const double C68229 = C68225 + C68213;
    const double C132048 = C132046 + C132040;
    const double C135445 = C135441 + C135429;
    const double C150617 = C150614 + C150604;
    const double C32370 = C32364 + C30955;
    const double C53191 = C53185 + C51782;
    const double C69113 = C69109 + C65482;
    const double C136329 = C136325 + C108988;
    const double C149868 = C149865 + C122364;
    const double C33709 =
        (4 * (2 * C152808 + C152818 + C152818 + C152162 * C153191) + C153202 +
         C153202 +
         C152162 * (3 * C153191 + C153199 + C153199 +
                    C152162 * (2 * C153183 + C153195 + C153195 +
                               C152162 * (C152991 + C153187 + C153187 +
                                          C152162 * (2 * ae * C153002 +
                                                     C152162 * C152354 *
                                                         C152220))))) /
        C151940;
    const double C33714 = C7060 * C33707;
    const double C54529 = C46976 * C33707;
    const double C56088 = C55353 * C33707;
    const double C56429 = C55351 * C33707;
    const double C64828 = C62974 * C33707;
    const double C69637 = C62972 * C33707;
    const double C108334 = C106480 * C33707;
    const double C124140 = C152085 * C33707;
    const double C136853 = C106478 * C33707;
    const double C153251 = C153250 + C153242;
    const double C115630 = C115618 + C115600;
    const double C115627 = C115615 + C115591;
    const double C115624 = C115612 + C115582;
    const double C115621 = C115609 + C115573;
    const double C115938 = C115926 + C115905;
    const double C115935 = C115923 + C115896;
    const double C115932 = C115920 + C115881;
    const double C115929 = C115917 + C115872;
    const double C116240 = C116228 + C116207;
    const double C116237 = C116225 + C116198;
    const double C116234 = C116222 + C116183;
    const double C116231 = C116219 + C116174;
    const double C116488 = C116484 + C115911;
    const double C116727 = C116723 + C116213;
    const double C117056 = C117050 + C117038;
    const double C117053 = C117047 + C117029;
    const double C120242 = C120233 + C117432;
    const double C120239 = C120229 + C115890;
    const double C120236 = C120223 + C115887;
    const double C120553 = C120550 + C117659;
    const double C121552 = C121546 + C118394;
    const double C121549 = C121542 + C117023;
    const double C122060 = C122057 + C117435;
    const double C122371 = C122368 + C117662;
    const double C123358 = C123355 + C118397;
    const double C149631 = C149628 + C122054;
    const double C149867 = C149864 + C122365;
    const double C150613 = C150610 + C123352;
    const double C63030 = C63010 + C63011;
    const double C63025 = C62995 + C62996;
    const double C63022 = C62986 + C62987;
    const double C63296 = C63276 + C63277;
    const double C63291 = C63253 + C63254;
    const double C63554 = C63534 + C63535;
    const double C63549 = C63511 + C63512;
    const double C63780 = C63770 + C63284;
    const double C63998 = C63988 + C63542;
    const double C64288 = C64276 + C64277;
    const double C67003 = C66992 + C63268;
    const double C67000 = C66986 + C63263;
    const double C67871 = C67864 + C64268;
    const double C68220 = C68210 + C64627;
    const double C68438 = C68428 + C64829;
    const double C69108 = C69098 + C65483;
    const double C106536 = C106516 + C106517;
    const double C106531 = C106501 + C106502;
    const double C106528 = C106492 + C106493;
    const double C106802 = C106782 + C106783;
    const double C106797 = C106759 + C106760;
    const double C107060 = C107040 + C107041;
    const double C107055 = C107017 + C107018;
    const double C107286 = C107276 + C106790;
    const double C107504 = C107494 + C107048;
    const double C107794 = C107782 + C107783;
    const double C134219 = C134208 + C106774;
    const double C134216 = C134202 + C106769;
    const double C135087 = C135080 + C107774;
    const double C135436 = C135426 + C108133;
    const double C135654 = C135644 + C108335;
    const double C136324 = C136314 + C108989;
    const double C152064 = C152057 / C151933;
    const double C97264 = C97258 + C97259;
    const double C97265 = C97257 + C97256;
    const double C97263 = C97256 + C97257;
    const double C97262 = C97254 + C97255;
    const double C101412 = C97541 + C97540;
    const double C102071 = C97540 + C97541;
    const double C101394 = C97539 + C97538;
    const double C101389 = C97538 + C97539;
    const double C101395 = C97536 + C97537;
    const double C101388 = C97537 + C97536;
    const double C98013 = C97534 + C97535;
    const double C102070 = C97535 + C97534;
    const double C98012 = C97532 + C97533;
    const double C111246 = C97533 + C97532;
    const double C98223 = C97808 + C97809;
    const double C98222 = C97806 + C97807;
    const double C111538 = C98533 + C98532;
    const double C111928 = C98532 + C98533;
    const double C102770 = C98530 + C98531;
    const double C102759 = C98531 + C98530;
    const double C103282 = C101445 + C101446;
    const double C130665 = C101446 + C101445;
    const double C101453 = C101444 + C101443;
    const double C101452 = C101443 + C101444;
    const double C101451 = C101441 + C101442;
    const double C102771 = C101775 + C101774;
    const double C102758 = C101774 + C101775;
    const double C104577 = C102792 + C102793;
    const double C131830 = C103296 + C103295;
    const double C132695 = C104591 + C104590;
    const double C7145 = C7143 * C153865;
    const double C7144 = C7142 * C153865;
    const double C7994 = C7990 * C153865;
    const double C8233 = C8229 * C153865;
    const double C19775 = C19772 + C19773;
    const double C87682 = C87680 + C87681;
    const double C18835 = C18829 + C18833;
    const double C86808 = C86804 + C86805;
    const double C18834 = C18831 + C18832;
    const double C86809 = C86806 + C86807;
    const double C20069 = C20068 + C20067;
    const double C87975 = C87973 + C87974;
    const double C47061 = C47059 * C153865;
    const double C47060 = C47058 * C153865;
    const double C47898 = C47894 * C153865;
    const double C48137 = C48133 * C153865;
    const double C115607 = C152065 * C149;
    const double C115597 = C152065 * C148;
    const double C115594 = C152065 * C147;
    const double C115579 = C152065 * C146;
    const double C115570 = C152065 * C145;
    const double C115566 = C152065 * C144;
    const double C115915 = C152065 * C351;
    const double C115910 = C152065 * C344;
    const double C115902 = C152065 * C350;
    const double C115893 = C152065 * C349;
    const double C115889 = C152065 * C348;
    const double C115888 = C152065 * C347;
    const double C115884 = C152065 * C346;
    const double C115875 = C152065 * C345;
    const double C116217 = C152065 * C572;
    const double C116212 = C152065 * C565;
    const double C116204 = C152065 * C571;
    const double C116195 = C152065 * C570;
    const double C116191 = C152065 * C569;
    const double C116190 = C152065 * C568;
    const double C116186 = C152065 * C567;
    const double C116177 = C152065 * C566;
    const double C116481 = C152065 * C343;
    const double C116720 = C152065 * C564;
    const double C117045 = C152065 * C1090;
    const double C117035 = C152065 * C1089;
    const double C117026 = C152065 * C1088;
    const double C117022 = C152065 * C1087;
    const double C117436 = C152065 * C1352;
    const double C117433 = C152065 * C1351;
    const double C117430 = C152065 * C1350;
    const double C117663 = C152065 * C1494;
    const double C117660 = C152065 * C1493;
    const double C117657 = C152065 * C1492;
    const double C118398 = C152065 * C1925;
    const double C118395 = C152065 * C1924;
    const double C118392 = C152065 * C1923;
    const double C118989 = C152065 * C2277;
    const double C118986 = C152065 * C2276;
    const double C118983 = C152065 * C2275;
    const double C122055 = C152065 * C3087;
    const double C122052 = C152065 * C3088;
    const double C122366 = C152065 * C3373;
    const double C122363 = C152065 * C3374;
    const double C123353 = C152065 * C4172;
    const double C123350 = C152065 * C4173;
    const double C124142 = C152065 * C6167;
    const double C124139 = C152065 * C6165;
    const double C149625 = C152065 * C4579;
    const double C149862 = C152065 * C4814;
    const double C150607 = C152065 * C5562;
    const double C151202 = C152065 * C6166;
    const double C55345 =
        (((((0 - (C151931 * C151992) / C151933) * ae) / C151933 -
           (0 * be) / C151944 + (2 * C151994) / C151933) /
              C151975 -
          ((C151931 * C152054 + 0) * be) / C151933 + C152011 - C152034) /
             C151975 +
         ((C151931 * C152070 + 0) * ae) / C151933) /
            C151975 -
        ((C151931 * (C152070 / C151975 +
                     ((C151931 * C152065 + C153965) * ae) / C151933 + C152060) +
          C154189) *
         be) /
            C151933 +
        C152065 / C151975 + ((C151931 * C152060 + C153972) * ae) / C151933 +
        2 * (C152022 / C151975 - (0 * be) / C151933);
    const double C55347 =
        (C152070 / C151975 + ((C151931 * C152065 + C153965) * ae) / C151933 +
         C152060) /
            C151975 -
        ((C151931 * (C152065 / C151975 +
                     ((C151931 * C152060 + C153972) * ae) / C151933 + C152086) +
          C154186) *
         be) /
            C151933 +
        2 * (C152060 / C151975 +
             ((C151931 * C152085 + C115558) * ae) / C151933);
    const double C55349 =
        (C152065 / C151975 + ((C151931 * C152060 + C153972) * ae) / C151933 +
         C152086) /
            C151975 -
        ((C151931 * (C152060 / C151975 +
                     ((C151931 * C152085 + C115558) * ae) / C151933) +
          C154177) *
         be) /
            C151933 +
        3 * (C152085 / C151975 + (0 * ae) / C151933);
    const double C62968 = C152070 / C151975 -
                          ((C151931 * C152065 + C153965) * be) / C151933 +
                          C152060;
    const double C62970 = C152065 / C151975 -
                          ((C151931 * C152060 + C153972) * be) / C151933 +
                          C152086;
    const double C106474 = C152070 / C151975 +
                           ((C151931 * C152065 + C153965) * ae) / C151933 +
                           C152060;
    const double C106476 = C152065 / C151975 +
                           ((C151931 * C152060 + C153972) * ae) / C151933 +
                           C152086;
    const double C10506 =
        (4 * (2 * C152696 + C152703 + C152703 + C152162 * C152846) + C152857 +
         C152857 +
         C152162 *
             (3 * C152846 + C152854 + C152854 +
              C152162 *
                  (2 * C152838 + C152850 + C152850 +
                   C152162 *
                       (C152222 + C152842 + C152842 +
                        C152162 *
                            (2 * ae * C152335 +
                             C152162 * (C152220 + (C152214 * C152215 +
                                                   C152166 * bs[9] *
                                                       std::pow(C152164, 9)) *
                                                      C152165 * C152181)))))) /
        C151940;
    const double C10510 = C7060 * C10503;
    const double C50393 = C46976 * C10503;
    const double C55914 = C55353 * C10503;
    const double C63544 = C62974 * C10503;
    const double C107050 = C106480 * C10503;
    const double C118981 = C152085 * C10503;
    const double C153301 = C153300 + C153292;
    const double C56082 =
        (4 * (2 * C152782 + C152792 + C152792 + C152162 * C153328) + C153341 +
         C153341 +
         C152162 *
             (3 * C153328 + C153338 + C153338 +
              C152162 * (2 * C153319 + C153334 + C153334 +
                         C152162 * (C153306 + C153327 + C153327 +
                                    C152162 * (2 * ae * C153309 +
                                               C152162 * C152354 * C152169 *
                                                   (C152214 * C152215 +
                                                    C152166 * bs[9] *
                                                        std::pow(C152164, 9)) *
                                                   C152165))))) /
        C151940;
    const double C56089 = C55353 * C56081;
    const double C61865 = C46976 * C56081;
    const double C64824 = C62974 * C56081;
    const double C81655 = C7060 * C56081;
    const double C108330 = C106480 * C56081;
    const double C124137 = C152085 * C56081;
    const double C33708 =
        (4 * (2 * C153063 + C153070 + C153070 + C152162 * C153155) + C153166 +
         C153166 +
         C152162 *
             (3 * C153155 + C153163 + C153163 +
              C152162 *
                  (2 * C153147 + C153159 + C153159 +
                   C152162 *
                       (C152994 + C153151 + C153151 +
                        C152162 *
                            (2 * ae * C153009 +
                             C152162 * (C152220 + (C152214 * C152215 +
                                                   C152166 * bs[9] *
                                                       std::pow(C152164, 9)) *
                                                      C152165 * C152402)))))) /
        C151940;
    const double C33711 = C7060 * C33706;
    const double C54526 = C46976 * C33706;
    const double C56839 = C55353 * C33706;
    const double C68432 = C62974 * C33706;
    const double C135648 = C106480 * C33706;
    const double C151200 = C152085 * C33706;
    const double C153393 = C153392 + C153384;
    const double C153455 = ae * C153453;
    const double C153454 = C152162 * C153453;
    const double C7761 = C7749 + C7719;
    const double C47665 = C47653 + C47623;
    const double C64007 = C64003 + C63991;
    const double C107513 = C107509 + C107497;
    const double C116253 = C116241 + C116211;
    const double C78168 = C78165 + C78159;
    const double C58378 = C58375 + C58369;
    const double C64297 = C64293 + C64281;
    const double C107803 = C107799 + C107787;
    const double C120557 = C120554 + C120548;
    const double C63539 = C154123 * C10507;
    const double C107045 = C154123 * C10507;
    const double C63555 = C63537 + C63538;
    const double C107061 = C107043 + C107044;
    const double C32376 = C32370 + C32355;
    const double C53197 = C53191 + C53176;
    const double C69117 = C69113 + C69101;
    const double C136333 = C136329 + C136317;
    const double C149871 = C149868 + C149859;
    const double C68431 = C154123 * C33709;
    const double C135647 = C154123 * C33709;
    const double C68439 = C68430 + C64828;
    const double C135655 = C135646 + C108334;
    const double C153252 = ae * C153251;
    const double C55640 = (5 * C152928 + C152162 * C153251 +
                           (4 * C152917 + C152162 * C153238) * ae) /
                          C151933;
    const double C115642 = C115630 + C115601;
    const double C115639 = C115627 + C115592;
    const double C115636 = C115624 + C115583;
    const double C115633 = C115621 + C115574;
    const double C115950 = C115938 + C115906;
    const double C115947 = C115935 + C115897;
    const double C115944 = C115932 + C115882;
    const double C115941 = C115929 + C115873;
    const double C116252 = C116240 + C116208;
    const double C116249 = C116237 + C116199;
    const double C116246 = C116234 + C116184;
    const double C116243 = C116231 + C116175;
    const double C116491 = C116488 + C116476;
    const double C116730 = C116727 + C116715;
    const double C117062 = C117056 + C117039;
    const double C117059 = C117053 + C117030;
    const double C120251 = C120242 + C120219;
    const double C120248 = C120239 + C120212;
    const double C120245 = C120236 + C120203;
    const double C120556 = C120553 + C120546;
    const double C121558 = C121552 + C121537;
    const double C121555 = C121549 + C121530;
    const double C122063 = C122060 + C122047;
    const double C122374 = C122371 + C122358;
    const double C123361 = C123358 + C123345;
    const double C149634 = C149631 + C149620;
    const double C149870 = C149867 + C149857;
    const double C150616 = C150613 + C150602;
    const double C63042 = C63030 + C63011;
    const double C63037 = C63025 + C62996;
    const double C63034 = C63022 + C62987;
    const double C63304 = C63296 + C63277;
    const double C63299 = C63291 + C63254;
    const double C63562 = C63554 + C63535;
    const double C63557 = C63549 + C63512;
    const double C63784 = C63780 + C63284;
    const double C64002 = C63998 + C63542;
    const double C64292 = C64288 + C64277;
    const double C67011 = C67003 + C63268;
    const double C67008 = C67000 + C63263;
    const double C67875 = C67871 + C64268;
    const double C68224 = C68220 + C64627;
    const double C68442 = C68438 + C64829;
    const double C69112 = C69108 + C65483;
    const double C106548 = C106536 + C106517;
    const double C106543 = C106531 + C106502;
    const double C106540 = C106528 + C106493;
    const double C106810 = C106802 + C106783;
    const double C106805 = C106797 + C106760;
    const double C107068 = C107060 + C107041;
    const double C107063 = C107055 + C107018;
    const double C107290 = C107286 + C106790;
    const double C107508 = C107504 + C107048;
    const double C107798 = C107794 + C107783;
    const double C134227 = C134219 + C106774;
    const double C134224 = C134216 + C106769;
    const double C135091 = C135087 + C107774;
    const double C135440 = C135436 + C108133;
    const double C135658 = C135654 + C108335;
    const double C136328 = C136324 + C108989;
    const double C152068 = C152019 - C152064;
    const double C97268 = C97264 * C153865;
    const double C97269 = C97265 * C153865;
    const double C110361 = C97265 * C154107;
    const double C125306 = C97265 * C70415;
    const double C97267 = C97263 * C153865;
    const double C97266 = C97262 * C153865;
    const double C110358 = C97262 * C154107;
    const double C125303 = C97262 * C70415;
    const double C111244 = C101412 * C153927;
    const double C126179 = C101412 * C153927;
    const double C98021 = C98013 * C153865;
    const double C111245 = C98013 * C154107;
    const double C126180 = C98013 * C70415;
    const double C110359 = C102070 * C153927;
    const double C125304 = C102070 * C153927;
    const double C98020 = C98012 * C153865;
    const double C110360 = C98012 * C153927;
    const double C125305 = C98012 * C153927;
    const double C98231 = C98223 * C153865;
    const double C111539 = C98223 * C154107;
    const double C126473 = C98223 * C70415;
    const double C98230 = C98222 * C153865;
    const double C111540 = C111538 * C153927;
    const double C126472 = C111538 * C153927;
    const double C55374 = C55345 * C147;
    const double C55365 = C55345 * C146;
    const double C55364 = C55345 * C145;
    const double C55355 = C55345 * C144;
    const double C55516 = C55345 * C349;
    const double C55507 = C55345 * C346;
    const double C55502 = C55345 * C348;
    const double C55501 = C55345 * C347;
    const double C55664 = C55345 * C570;
    const double C55655 = C55345 * C567;
    const double C55650 = C55345 * C569;
    const double C55649 = C55345 * C568;
    const double C55791 = C55345 * C345;
    const double C55918 = C55345 * C566;
    const double C56093 = C55345 * C1088;
    const double C56084 = C55345 * C1087;
    const double C56302 = C55345 * C1352;
    const double C56432 = C55345 * C1494;
    const double C56843 = C55345 * C1925;
    const double C57177 = C55345 * C2277;
    const double C55373 = C55347 * C565;
    const double C55366 = C55347 * C566;
    const double C55363 = C55347 * C567;
    const double C55356 = C55347 * C568;
    const double C55515 = C55347 * C1924;
    const double C55508 = C55347 * C1088;
    const double C55503 = C55347 * C1925;
    const double C55500 = C55347 * C1087;
    const double C55663 = C55347 * C2276;
    const double C55656 = C55347 * C570;
    const double C55651 = C55347 * C2277;
    const double C55648 = C55347 * C569;
    const double C55790 = C55347 * C1089;
    const double C55917 = C55347 * C571;
    const double C56092 = C55347 * C1493;
    const double C56085 = C55347 * C1494;
    const double C56301 = C55347 * C4172;
    const double C56431 = C55347 * C6167;
    const double C56842 = C55347 * C3373;
    const double C57176 = C55347 * C7669;
    const double C55372 = C55349 * C572;
    const double C55367 = C55349 * C571;
    const double C55362 = C55349 * C570;
    const double C55357 = C55349 * C569;
    const double C55514 = C55349 * C3374;
    const double C55509 = C55349 * C1493;
    const double C55504 = C55349 * C3373;
    const double C55499 = C55349 * C1494;
    const double C55662 = C55349 * C7670;
    const double C55657 = C55349 * C2276;
    const double C55652 = C55349 * C7669;
    const double C55647 = C55349 * C2277;
    const double C55789 = C55349 * C1492;
    const double C55916 = C55349 * C2275;
    const double C56091 = C55349 * C6165;
    const double C56086 = C55349 * C6167;
    const double C56300 = C55349 * C4814;
    const double C56430 = C55349 * C9170;
    const double C56841 = C55349 * C6166;
    const double C57175 = C55349 * C10505;
    const double C63019 = C62968 * C148;
    const double C63005 = C62968 * C147;
    const double C63002 = C62968 * C146;
    const double C62981 = C62968 * C145;
    const double C62976 = C62968 * C144;
    const double C63289 = C62968 * C350;
    const double C63282 = C62968 * C345;
    const double C63271 = C62968 * C349;
    const double C63266 = C62968 * C348;
    const double C63265 = C62968 * C347;
    const double C63260 = C62968 * C346;
    const double C63547 = C62968 * C571;
    const double C63540 = C62968 * C566;
    const double C63529 = C62968 * C570;
    const double C63524 = C62968 * C569;
    const double C63523 = C62968 * C568;
    const double C63518 = C62968 * C567;
    const double C63777 = C62968 * C344;
    const double C63995 = C62968 * C565;
    const double C64285 = C62968 * C1089;
    const double C64271 = C62968 * C1088;
    const double C64266 = C62968 * C1087;
    const double C64629 = C62968 * C1352;
    const double C64625 = C62968 * C1351;
    const double C64831 = C62968 * C1494;
    const double C64827 = C62968 * C1493;
    const double C65485 = C62968 * C1925;
    const double C65481 = C62968 * C1924;
    const double C66011 = C62968 * C2277;
    const double C66007 = C62968 * C2276;
    const double C68217 = C62968 * C3087;
    const double C68435 = C62968 * C3373;
    const double C69105 = C62968 * C4172;
    const double C69639 = C62968 * C6167;
    const double C63018 = C62970 * C564;
    const double C63008 = C62970 * C565;
    const double C62999 = C62970 * C566;
    const double C62984 = C62970 * C567;
    const double C62977 = C62970 * C568;
    const double C63288 = C62970 * C1923;
    const double C63283 = C62970 * C1089;
    const double C63274 = C62970 * C1924;
    const double C63267 = C62970 * C1925;
    const double C63264 = C62970 * C1087;
    const double C63257 = C62970 * C1088;
    const double C63546 = C62970 * C2275;
    const double C63541 = C62970 * C571;
    const double C63532 = C62970 * C2276;
    const double C63525 = C62970 * C2277;
    const double C63522 = C62970 * C569;
    const double C63515 = C62970 * C570;
    const double C63776 = C62970 * C1090;
    const double C63994 = C62970 * C572;
    const double C64284 = C62970 * C1492;
    const double C64274 = C62970 * C1493;
    const double C64267 = C62970 * C1494;
    const double C64628 = C62970 * C4172;
    const double C64624 = C62970 * C4173;
    const double C64830 = C62970 * C6167;
    const double C64826 = C62970 * C6165;
    const double C65484 = C62970 * C3373;
    const double C65480 = C62970 * C3374;
    const double C66010 = C62970 * C7669;
    const double C66006 = C62970 * C7670;
    const double C68216 = C62970 * C5562;
    const double C68434 = C62970 * C6166;
    const double C69104 = C62970 * C4814;
    const double C69638 = C62970 * C9170;
    const double C106525 = C106474 * C148;
    const double C106511 = C106474 * C147;
    const double C106508 = C106474 * C146;
    const double C106487 = C106474 * C145;
    const double C106482 = C106474 * C144;
    const double C106795 = C106474 * C350;
    const double C106788 = C106474 * C345;
    const double C106777 = C106474 * C349;
    const double C106772 = C106474 * C348;
    const double C106771 = C106474 * C347;
    const double C106766 = C106474 * C346;
    const double C107053 = C106474 * C571;
    const double C107046 = C106474 * C566;
    const double C107035 = C106474 * C570;
    const double C107030 = C106474 * C569;
    const double C107029 = C106474 * C568;
    const double C107024 = C106474 * C567;
    const double C107283 = C106474 * C344;
    const double C107501 = C106474 * C565;
    const double C107791 = C106474 * C1089;
    const double C107777 = C106474 * C1088;
    const double C107772 = C106474 * C1087;
    const double C108135 = C106474 * C1352;
    const double C108131 = C106474 * C1351;
    const double C108337 = C106474 * C1494;
    const double C108333 = C106474 * C1493;
    const double C108991 = C106474 * C1925;
    const double C108987 = C106474 * C1924;
    const double C109517 = C106474 * C2277;
    const double C109513 = C106474 * C2276;
    const double C135433 = C106474 * C3087;
    const double C135651 = C106474 * C3373;
    const double C136321 = C106474 * C4172;
    const double C136855 = C106474 * C6167;
    const double C106524 = C106476 * C564;
    const double C106514 = C106476 * C565;
    const double C106505 = C106476 * C566;
    const double C106490 = C106476 * C567;
    const double C106483 = C106476 * C568;
    const double C106794 = C106476 * C1923;
    const double C106789 = C106476 * C1089;
    const double C106780 = C106476 * C1924;
    const double C106773 = C106476 * C1925;
    const double C106770 = C106476 * C1087;
    const double C106763 = C106476 * C1088;
    const double C107052 = C106476 * C2275;
    const double C107047 = C106476 * C571;
    const double C107038 = C106476 * C2276;
    const double C107031 = C106476 * C2277;
    const double C107028 = C106476 * C569;
    const double C107021 = C106476 * C570;
    const double C107282 = C106476 * C1090;
    const double C107500 = C106476 * C572;
    const double C107790 = C106476 * C1492;
    const double C107780 = C106476 * C1493;
    const double C107773 = C106476 * C1494;
    const double C108134 = C106476 * C4172;
    const double C108130 = C106476 * C4173;
    const double C108336 = C106476 * C6167;
    const double C108332 = C106476 * C6165;
    const double C108990 = C106476 * C3373;
    const double C108986 = C106476 * C3374;
    const double C109516 = C106476 * C7669;
    const double C109512 = C106476 * C7670;
    const double C135432 = C106476 * C5562;
    const double C135650 = C106476 * C6166;
    const double C136320 = C106476 * C4814;
    const double C136854 = C106476 * C9170;
    const double C153302 = ae * C153301;
    const double C55641 = (5 * C152892 + C152162 * C153301 +
                           (4 * C152881 + C152162 * C153288) * ae) /
                          C151933;
    const double C153394 = ae * C153393;
    const double C56425 = (5 * C153201 + C152162 * C153393 +
                           (4 * C153190 + C152162 * C153381) * ae) /
                          C151933;
    const double C153456 = C153401 + C153454;
    const double C63563 = C63555 + C63538;
    const double C107069 = C107061 + C107044;
    const double C68443 = C68439 + C64828;
    const double C135659 = C135655 + C108334;
    const double C55642 =
        (5 * (3 * C152918 + C152926 + C152926 + C152162 * C153240) + C153252 +
         C153252 +
         C152162 *
             (4 * C153240 + C153249 + C153249 +
              C152162 *
                  (3 * C153232 + C153245 + C153245 +
                   C152162 * (2 * C153224 + C153239 + C153239 +
                              C152162 * (C152205 + C153228 + C153228 +
                                         C152162 * (2 * ae * C152302 +
                                                    C152162 * C152220)))))) /
        C151940;
    const double C55654 = C55353 * C55640;
    const double C57174 = C55351 * C55640;
    const double C66008 = C62974 * C55640;
    const double C109514 = C106480 * C55640;
    const double C63054 = C63042 + C63012;
    const double C63049 = C63037 + C62997;
    const double C63046 = C63034 + C62988;
    const double C63312 = C63304 + C63278;
    const double C63307 = C63299 + C63255;
    const double C63570 = C63562 + C63536;
    const double C63565 = C63557 + C63513;
    const double C63788 = C63784 + C63771;
    const double C64006 = C64002 + C63989;
    const double C64296 = C64292 + C64278;
    const double C67019 = C67011 + C66993;
    const double C67016 = C67008 + C66987;
    const double C67879 = C67875 + C67865;
    const double C68228 = C68224 + C68211;
    const double C68446 = C68442 + C68429;
    const double C69116 = C69112 + C69099;
    const double C106560 = C106548 + C106518;
    const double C106555 = C106543 + C106503;
    const double C106552 = C106540 + C106494;
    const double C106818 = C106810 + C106784;
    const double C106813 = C106805 + C106761;
    const double C107076 = C107068 + C107042;
    const double C107071 = C107063 + C107019;
    const double C107294 = C107290 + C107277;
    const double C107512 = C107508 + C107495;
    const double C107802 = C107798 + C107784;
    const double C134235 = C134227 + C134209;
    const double C134232 = C134224 + C134203;
    const double C135095 = C135091 + C135081;
    const double C135444 = C135440 + C135427;
    const double C135662 = C135658 + C135645;
    const double C136332 = C136328 + C136315;
    const double C152071 = C152068 - C152002;
    const double C111247 = C111244 + C111245;
    const double C126181 = C126179 + C126180;
    const double C110362 = C110358 + C110359;
    const double C125307 = C125303 + C125304;
    const double C110363 = C110360 + C110361;
    const double C125308 = C125305 + C125306;
    const double C111541 = C111540 + C111539;
    const double C126474 = C126472 + C126473;
    const double C55643 =
        (5 * (3 * C152882 + C152890 + C152890 + C152162 * C153290) + C153302 +
         C153302 +
         C152162 *
             (4 * C153290 + C153299 + C153299 +
              C152162 *
                  (3 * C153282 + C153295 + C153295 +
                   C152162 *
                       (2 * C153274 + C153289 + C153289 +
                        C152162 * (C152938 + C153278 + C153278 +
                                   C152162 * (2 * ae * C152967 +
                                              C152162 * C152169 *
                                                  (C152214 * C152215 +
                                                   C152166 * bs[9] *
                                                       std::pow(C152164, 9)) *
                                                  C152165)))))) /
        C151940;
    const double C55660 = C55353 * C55641;
    const double C66004 = C62974 * C55641;
    const double C109510 = C106480 * C55641;
    const double C56426 =
        (5 * (3 * C153191 + C153199 + C153199 + C152162 * C153379) + C153394 +
         C153394 +
         C152162 *
             (4 * C153379 + C153391 + C153391 +
              C152162 *
                  (3 * C153372 + C153387 + C153387 +
                   C152162 *
                       (2 * C153363 + C153382 + C153382 +
                        C152162 * (C153346 + C153371 + C153371 +
                                   C152162 * (2 * ae * C153350 +
                                              C152162 * C152354 *
                                                  (C152214 * C152215 +
                                                   C152166 * bs[9] *
                                                       std::pow(C152164, 9)) *
                                                  C152165)))))) /
        C151940;
    const double C56428 = C55353 * C56425;
    const double C69636 = C62974 * C56425;
    const double C136852 = C106480 * C56425;
    const double C153457 = C153456 + C153446;
    const double C63571 = C63563 + C63539;
    const double C107077 = C107069 + C107045;
    const double C68447 = C68443 + C68431;
    const double C135663 = C135659 + C135647;
    const double C115596 = C152071 * C140;
    const double C115593 = C152071 * C139;
    const double C115578 = C152071 * C138;
    const double C115569 = C152071 * C137;
    const double C115901 = C152071 * C338;
    const double C115892 = C152071 * C337;
    const double C115883 = C152071 * C334;
    const double C115874 = C152071 * C333;
    const double C116203 = C152071 * C559;
    const double C116194 = C152071 * C558;
    const double C116185 = C152071 * C555;
    const double C116176 = C152071 * C554;
    const double C116473 = C152071 * C332;
    const double C116712 = C152071 * C553;
    const double C117034 = C152071 * C1083;
    const double C117025 = C152071 * C1082;
    const double C120216 = C152071 * C1346;
    const double C120213 = C152071 * C336;
    const double C120200 = C152071 * C335;
    const double C120543 = C152071 * C1488;
    const double C121534 = C152071 * C1919;
    const double C121531 = C152071 * C1081;
    const double C122044 = C152071 * C1347;
    const double C122355 = C152071 * C1489;
    const double C123342 = C152071 * C1920;
    const double C149617 = C152071 * C3083;
    const double C149854 = C152071 * C3369;
    const double C150599 = C152071 * C4168;
    const double C55344 =
        (((ae * -2 * C151992) / C151993 -
          (((C151931 * C152015) / C151940 + 2 * C152054) * be) / C151933 -
          C152009 / C151940) /
             C151975 +
         ((C151931 * C152069 + 2 * C152070) * ae) / C151933) /
            C151975 -
        ((C151931 *
              (C152069 / C151975 +
               ((C151931 * C152071 + 2 * C152065) * ae) / C151933 + C152059) +
          2 * (C152070 / C151975 +
               ((C151931 * C152065 + C153965) * ae) / C151933 + C152060)) *
         be) /
            C151933 +
        C152071 / C151975 + ((C151931 * C152059 + 2 * C152060) * ae) / C151933 +
        (-2 * C151949) / (C151933 * 4 * C151940);
    const double C55346 =
        (C152069 / C151975 +
         ((C151931 * C152071 + 2 * C152065) * ae) / C151933 + C152059) /
            C151975 -
        ((C151931 * (C152071 / C151975 +
                     ((C151931 * C152059 + 2 * C152060) * ae) / C151933 +
                     (-2 * C151949) / C152083) +
          2 * (C152065 / C151975 +
               ((C151931 * C152060 + C153972) * ae) / C151933 + C152086)) *
         be) /
            C151933 +
        2 * (C152059 / C151975 +
             ((C152086 - C151957 / C152083) * ae) / C151933);
    const double C55348 =
        (C152071 / C151975 +
         ((C151931 * C152059 + 2 * C152060) * ae) / C151933 +
         (-2 * C151949) / C152083) /
            C151975 -
        ((C151931 * (C152059 / C151975 +
                     ((C152086 - C151957 / C152083) * ae) / C151933) +
          2 * (C152060 / C151975 +
               ((C151931 * C152085 + C115558) * ae) / C151933)) *
         be) /
            C151933 +
        (-3 * C151949) / (C151933 * 4 * C151993);
    const double C62967 = C152069 / C151975 -
                          ((C151931 * C152071 + 2 * C152065) * be) / C151933 +
                          C152059;
    const double C62969 = C152071 / C151975 -
                          ((C151931 * C152059 + 2 * C152060) * be) / C151933 +
                          (-2 * C151949) / C152083;
    const double C106473 = C152069 / C151975 +
                           ((C151931 * C152071 + 2 * C152065) * ae) / C151933 +
                           C152059;
    const double C106475 = C152071 / C151975 +
                           ((C151931 * C152059 + 2 * C152060) * ae) / C151933 +
                           (-2 * C151949) / C152083;
    const double C153458 = ae * C153457;
    const double C57170 = (6 * C153251 + C152162 * C153457 +
                           (5 * C153238 + C152162 * C153443) * ae) /
                          C151933;
    const double C115617 = C115596 + C115597;
    const double C115616 = C115593 + C115594;
    const double C115611 = C115578 + C115579;
    const double C115608 = C115569 + C115570;
    const double C115925 = C115901 + C115902;
    const double C115922 = C115892 + C115893;
    const double C115921 = C115883 + C115884;
    const double C115918 = C115874 + C115875;
    const double C116227 = C116203 + C116204;
    const double C116224 = C116194 + C116195;
    const double C116223 = C116185 + C116186;
    const double C116220 = C116176 + C116177;
    const double C116483 = C116473 + C115910;
    const double C116722 = C116712 + C116212;
    const double C117049 = C117034 + C117035;
    const double C117046 = C117025 + C117026;
    const double C120232 = C120216 + C117433;
    const double C120230 = C120213 + C115889;
    const double C120222 = C120200 + C115888;
    const double C120549 = C120543 + C117660;
    const double C121545 = C121534 + C118395;
    const double C121543 = C121531 + C117022;
    const double C122056 = C122044 + C117436;
    const double C122367 = C122355 + C117663;
    const double C123354 = C123342 + C118398;
    const double C149627 = C149617 + C122055;
    const double C149863 = C149854 + C122366;
    const double C150609 = C150599 + C123353;
    const double C63004 = C62967 * C139;
    const double C63001 = C62967 * C138;
    const double C62980 = C62967 * C137;
    const double C63270 = C62967 * C337;
    const double C63259 = C62967 * C334;
    const double C63528 = C62967 * C558;
    const double C63517 = C62967 * C555;
    const double C63766 = C62967 * C333;
    const double C63984 = C62967 * C554;
    const double C64270 = C62967 * C1082;
    const double C66996 = C62967 * C336;
    const double C66982 = C62967 * C335;
    const double C67868 = C62967 * C1081;
    const double C68206 = C62967 * C1347;
    const double C68424 = C62967 * C1489;
    const double C69094 = C62967 * C1920;
    const double C63007 = C62969 * C553;
    const double C62998 = C62969 * C554;
    const double C62983 = C62969 * C555;
    const double C63273 = C62969 * C1919;
    const double C63256 = C62969 * C1082;
    const double C63531 = C62969 * C2271;
    const double C63514 = C62969 * C558;
    const double C63768 = C62969 * C1083;
    const double C63986 = C62969 * C559;
    const double C64273 = C62969 * C1488;
    const double C66994 = C62969 * C1920;
    const double C66984 = C62969 * C1081;
    const double C67866 = C62969 * C1489;
    const double C68208 = C62969 * C4168;
    const double C68426 = C62969 * C6161;
    const double C69096 = C62969 * C3369;
    const double C106510 = C106473 * C139;
    const double C106507 = C106473 * C138;
    const double C106486 = C106473 * C137;
    const double C106776 = C106473 * C337;
    const double C106765 = C106473 * C334;
    const double C107034 = C106473 * C558;
    const double C107023 = C106473 * C555;
    const double C107272 = C106473 * C333;
    const double C107490 = C106473 * C554;
    const double C107776 = C106473 * C1082;
    const double C134212 = C106473 * C336;
    const double C134198 = C106473 * C335;
    const double C135084 = C106473 * C1081;
    const double C135422 = C106473 * C1347;
    const double C135640 = C106473 * C1489;
    const double C136310 = C106473 * C1920;
    const double C106513 = C106475 * C553;
    const double C106504 = C106475 * C554;
    const double C106489 = C106475 * C555;
    const double C106779 = C106475 * C1919;
    const double C106762 = C106475 * C1082;
    const double C107037 = C106475 * C2271;
    const double C107020 = C106475 * C558;
    const double C107274 = C106475 * C1083;
    const double C107492 = C106475 * C559;
    const double C107779 = C106475 * C1488;
    const double C134210 = C106475 * C1920;
    const double C134200 = C106475 * C1081;
    const double C135082 = C106475 * C1489;
    const double C135424 = C106475 * C4168;
    const double C135642 = C106475 * C6161;
    const double C136312 = C106475 * C3369;
    const double C57171 =
        (6 * (4 * C153240 + C153249 + C153249 + C152162 * C153444) + C153458 +
         C153458 +
         C152162 *
             (5 * C153444 + C153455 + C153455 +
              C152162 *
                  (4 * C153437 + C153451 + C153451 +
                   C152162 *
                       (3 * C153429 + C153447 + C153447 +
                        C152162 *
                            (2 * C153421 + C153436 + C153436 +
                             C152162 *
                                 (C152220 + C153425 + C153425 +
                                  C152162 * (2 * ae * C152330 +
                                             C152162 *
                                                 (C152214 * C152215 +
                                                  C152166 * bs[9] *
                                                      std::pow(C152164, 9)) *
                                                 C152165))))))) /
        C151940;
    const double C57173 = C55353 * C57170;
    const double C115629 = C115617 + C115597;
    const double C115628 = C115616 + C115594;
    const double C115623 = C115611 + C115579;
    const double C115620 = C115608 + C115570;
    const double C115937 = C115925 + C115902;
    const double C115934 = C115922 + C115893;
    const double C115933 = C115921 + C115884;
    const double C115930 = C115918 + C115875;
    const double C116239 = C116227 + C116204;
    const double C116236 = C116224 + C116195;
    const double C116235 = C116223 + C116186;
    const double C116232 = C116220 + C116177;
    const double C116487 = C116483 + C115910;
    const double C116726 = C116722 + C116212;
    const double C117055 = C117049 + C117035;
    const double C117052 = C117046 + C117026;
    const double C120241 = C120232 + C117433;
    const double C120240 = C120230 + C115889;
    const double C120235 = C120222 + C115888;
    const double C120552 = C120549 + C117660;
    const double C121551 = C121545 + C118395;
    const double C121550 = C121543 + C117022;
    const double C122059 = C122056 + C117436;
    const double C122370 = C122367 + C117663;
    const double C123357 = C123354 + C118398;
    const double C149630 = C149627 + C122055;
    const double C149866 = C149863 + C122366;
    const double C150612 = C150609 + C123353;
    const double C63028 = C63004 + C63005;
    const double C63027 = C63001 + C63002;
    const double C63020 = C62980 + C62981;
    const double C63294 = C63270 + C63271;
    const double C63293 = C63259 + C63260;
    const double C63552 = C63528 + C63529;
    const double C63551 = C63517 + C63518;
    const double C63778 = C63766 + C63282;
    const double C63996 = C63984 + C63540;
    const double C64286 = C64270 + C64271;
    const double C67005 = C66996 + C63266;
    const double C66998 = C66982 + C63265;
    const double C67873 = C67868 + C64266;
    const double C68218 = C68206 + C64629;
    const double C68436 = C68424 + C64831;
    const double C69106 = C69094 + C65485;
    const double C63029 = C63007 + C63008;
    const double C63026 = C62998 + C62999;
    const double C63021 = C62983 + C62984;
    const double C63295 = C63273 + C63274;
    const double C63292 = C63256 + C63257;
    const double C63553 = C63531 + C63532;
    const double C63550 = C63514 + C63515;
    const double C63779 = C63768 + C63283;
    const double C63997 = C63986 + C63541;
    const double C64287 = C64273 + C64274;
    const double C67004 = C66994 + C63267;
    const double C66999 = C66984 + C63264;
    const double C67872 = C67866 + C64267;
    const double C68219 = C68208 + C64628;
    const double C68437 = C68426 + C64830;
    const double C69107 = C69096 + C65484;
    const double C106534 = C106510 + C106511;
    const double C106533 = C106507 + C106508;
    const double C106526 = C106486 + C106487;
    const double C106800 = C106776 + C106777;
    const double C106799 = C106765 + C106766;
    const double C107058 = C107034 + C107035;
    const double C107057 = C107023 + C107024;
    const double C107284 = C107272 + C106788;
    const double C107502 = C107490 + C107046;
    const double C107792 = C107776 + C107777;
    const double C134221 = C134212 + C106772;
    const double C134214 = C134198 + C106771;
    const double C135089 = C135084 + C107772;
    const double C135434 = C135422 + C108135;
    const double C135652 = C135640 + C108337;
    const double C136322 = C136310 + C108991;
    const double C106535 = C106513 + C106514;
    const double C106532 = C106504 + C106505;
    const double C106527 = C106489 + C106490;
    const double C106801 = C106779 + C106780;
    const double C106798 = C106762 + C106763;
    const double C107059 = C107037 + C107038;
    const double C107056 = C107020 + C107021;
    const double C107285 = C107274 + C106789;
    const double C107503 = C107492 + C107047;
    const double C107793 = C107779 + C107780;
    const double C134220 = C134210 + C106773;
    const double C134215 = C134200 + C106770;
    const double C135088 = C135082 + C107773;
    const double C135435 = C135424 + C108134;
    const double C135653 = C135642 + C108336;
    const double C136323 = C136312 + C108990;
    const double C115641 = C115629 + C115598;
    const double C115640 = C115628 + C115595;
    const double C115635 = C115623 + C115580;
    const double C115632 = C115620 + C115571;
    const double C115949 = C115937 + C115903;
    const double C115946 = C115934 + C115894;
    const double C115945 = C115933 + C115885;
    const double C115942 = C115930 + C115876;
    const double C116251 = C116239 + C116205;
    const double C116248 = C116236 + C116196;
    const double C116247 = C116235 + C116187;
    const double C116244 = C116232 + C116178;
    const double C116490 = C116487 + C116474;
    const double C116729 = C116726 + C116713;
    const double C117061 = C117055 + C117036;
    const double C117058 = C117052 + C117027;
    const double C120250 = C120241 + C120217;
    const double C120249 = C120240 + C120214;
    const double C120244 = C120235 + C120201;
    const double C120555 = C120552 + C120544;
    const double C121557 = C121551 + C121535;
    const double C121556 = C121550 + C121532;
    const double C122062 = C122059 + C122045;
    const double C122373 = C122370 + C122356;
    const double C123360 = C123357 + C123343;
    const double C149633 = C149630 + C149618;
    const double C149869 = C149866 + C149855;
    const double C150615 = C150612 + C150600;
    const double C63040 = C63028 + C63005;
    const double C63039 = C63027 + C63002;
    const double C63032 = C63020 + C62981;
    const double C63302 = C63294 + C63271;
    const double C63301 = C63293 + C63260;
    const double C63560 = C63552 + C63529;
    const double C63559 = C63551 + C63518;
    const double C63782 = C63778 + C63282;
    const double C64000 = C63996 + C63540;
    const double C64290 = C64286 + C64271;
    const double C67013 = C67005 + C63266;
    const double C67006 = C66998 + C63265;
    const double C67877 = C67873 + C64266;
    const double C68222 = C68218 + C64629;
    const double C68440 = C68436 + C64831;
    const double C69110 = C69106 + C65485;
    const double C63041 = C63029 + C63008;
    const double C63038 = C63026 + C62999;
    const double C63033 = C63021 + C62984;
    const double C63303 = C63295 + C63274;
    const double C63300 = C63292 + C63257;
    const double C63561 = C63553 + C63532;
    const double C63558 = C63550 + C63515;
    const double C63783 = C63779 + C63283;
    const double C64001 = C63997 + C63541;
    const double C64291 = C64287 + C64274;
    const double C67012 = C67004 + C63267;
    const double C67007 = C66999 + C63264;
    const double C67876 = C67872 + C64267;
    const double C68223 = C68219 + C64628;
    const double C68441 = C68437 + C64830;
    const double C69111 = C69107 + C65484;
    const double C106546 = C106534 + C106511;
    const double C106545 = C106533 + C106508;
    const double C106538 = C106526 + C106487;
    const double C106808 = C106800 + C106777;
    const double C106807 = C106799 + C106766;
    const double C107066 = C107058 + C107035;
    const double C107065 = C107057 + C107024;
    const double C107288 = C107284 + C106788;
    const double C107506 = C107502 + C107046;
    const double C107796 = C107792 + C107777;
    const double C134229 = C134221 + C106772;
    const double C134222 = C134214 + C106771;
    const double C135093 = C135089 + C107772;
    const double C135438 = C135434 + C108135;
    const double C135656 = C135652 + C108337;
    const double C136326 = C136322 + C108991;
    const double C106547 = C106535 + C106514;
    const double C106544 = C106532 + C106505;
    const double C106539 = C106527 + C106490;
    const double C106809 = C106801 + C106780;
    const double C106806 = C106798 + C106763;
    const double C107067 = C107059 + C107038;
    const double C107064 = C107056 + C107021;
    const double C107289 = C107285 + C106789;
    const double C107507 = C107503 + C107047;
    const double C107797 = C107793 + C107780;
    const double C134228 = C134220 + C106773;
    const double C134223 = C134215 + C106770;
    const double C135092 = C135088 + C107773;
    const double C135439 = C135435 + C108134;
    const double C135657 = C135653 + C108336;
    const double C136327 = C136323 + C108990;
    const double C115645 = C115639 + C115640;
    const double C115644 = C115635 + C115636;
    const double C120215 = C115946 + C115947;
    const double C120207 = C115947 + C115946;
    const double C120208 = C115944 + C115945;
    const double C120206 = C115945 + C115944;
    const double C116472 = C115941 + C115942;
    const double C120848 = C115942 + C115941;
    const double C116711 = C116243 + C116244;
    const double C121533 = C117058 + C117059;
    const double C121526 = C117059 + C117058;
    const double C148306 = C120249 + C120248;
    const double C149616 = C122063 + C122062;
    const double C150598 = C123361 + C123360;
    const double C63052 = C63040 + C63006;
    const double C63051 = C63039 + C63003;
    const double C63044 = C63032 + C62982;
    const double C63310 = C63302 + C63272;
    const double C63309 = C63301 + C63261;
    const double C63568 = C63560 + C63530;
    const double C63567 = C63559 + C63519;
    const double C63786 = C63782 + C63767;
    const double C64004 = C64000 + C63985;
    const double C64294 = C64290 + C64272;
    const double C67021 = C67013 + C66997;
    const double C67014 = C67006 + C66983;
    const double C67881 = C67877 + C67869;
    const double C68226 = C68222 + C68207;
    const double C68444 = C68440 + C68425;
    const double C69114 = C69110 + C69095;
    const double C63053 = C63041 + C63009;
    const double C63050 = C63038 + C63000;
    const double C63045 = C63033 + C62985;
    const double C63311 = C63303 + C63275;
    const double C63308 = C63300 + C63258;
    const double C63569 = C63561 + C63533;
    const double C63566 = C63558 + C63516;
    const double C63787 = C63783 + C63769;
    const double C64005 = C64001 + C63987;
    const double C64295 = C64291 + C64275;
    const double C67020 = C67012 + C66995;
    const double C67015 = C67007 + C66985;
    const double C67880 = C67876 + C67867;
    const double C68227 = C68223 + C68209;
    const double C68445 = C68441 + C68427;
    const double C69115 = C69111 + C69097;
    const double C106558 = C106546 + C106512;
    const double C106557 = C106545 + C106509;
    const double C106550 = C106538 + C106488;
    const double C106816 = C106808 + C106778;
    const double C106815 = C106807 + C106767;
    const double C107074 = C107066 + C107036;
    const double C107073 = C107065 + C107025;
    const double C107292 = C107288 + C107273;
    const double C107510 = C107506 + C107491;
    const double C107800 = C107796 + C107778;
    const double C134237 = C134229 + C134213;
    const double C134230 = C134222 + C134199;
    const double C135097 = C135093 + C135085;
    const double C135442 = C135438 + C135423;
    const double C135660 = C135656 + C135641;
    const double C136330 = C136326 + C136311;
    const double C106559 = C106547 + C106515;
    const double C106556 = C106544 + C106506;
    const double C106551 = C106539 + C106491;
    const double C106817 = C106809 + C106781;
    const double C106814 = C106806 + C106764;
    const double C107075 = C107067 + C107039;
    const double C107072 = C107064 + C107022;
    const double C107293 = C107289 + C107275;
    const double C107511 = C107507 + C107493;
    const double C107801 = C107797 + C107781;
    const double C134236 = C134228 + C134211;
    const double C134231 = C134223 + C134201;
    const double C135096 = C135092 + C135083;
    const double C135443 = C135439 + C135425;
    const double C135661 = C135657 + C135643;
    const double C136331 = C136327 + C136313;
    const double C115647 = C115638 + C115645;
    const double C115646 = C115644 + C115637;
    const double C120231 = C120215 + C115948;
    const double C120226 = C115948 + C120207;
    const double C120227 = C115943 + C120208;
    const double C120225 = C120206 + C115943;
    const double C116482 = C115940 + C116472;
    const double C120849 = C120848 + C115940;
    const double C116721 = C116242 + C116711;
    const double C121544 = C121533 + C117060;
    const double C121540 = C117060 + C121526;
    const double C148307 = C148306 + C120247;
    const double C149626 = C122064 + C149616;
    const double C150608 = C123362 + C150598;
    const double C115649 = C115647 * C153865;
    const double C115648 = C115646 * C153865;
    const double C116486 = C116482 * C153865;
    const double C116725 = C116721 * C153865;
    d2ee[0] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C153923 +
             C3138 * C153930 + C3139 * C82771) *
                C153717 +
            (C82776 + C82777 + C82778) * C153725 + C82790 * C82774) *
               C153783 * C154093 -
           (C83474 * C82774 + (C83013 + C83014 + C83015) * C153725 +
            (C3142 * C82771 + C3139 * C153930 + C3138 * C153923) * C153717) *
               C153783 * C153819) *
              C154162 +
          (((C83015 + C83014 + C83013) * C153717 +
            (C83012 + C83011 + C83010) * C153725 +
            (C83471 + C83472 + C83473) * C82774) *
               C153783 * C153819 -
           (C82791 * C82774 + (C82781 + C82780 + C82779) * C153725 +
            (C82778 + C82777 + C82776) * C153717) *
               C153783 * C154093) *
              C154163 +
          ((C82790 * C153717 + (C82784 + C82783 + C82782) * C153725 +
            (C82785 + C82786 + C82787) * C82774) *
               C153783 * C154093 -
           (((C134 * C1343 + C1359 + C1359 + C153882 * C1353) * C82771 +
             C419 * C153930 + C412 * C153923) *
                C82774 +
            (C83473 + C83472 + C83471) * C153725 + C83474 * C153717) *
               C153783 * C153819) *
              C774)) /
        (p * q * std::sqrt(p + q));
    d2ee[1] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C153882 * C152) * C153923 +
              C3138 * C153930 + C3139 * C82771) *
                 C153717 +
             (C82776 + C82777 + C82778) * C153725 + C82790 * C82774) *
                C154094 -
            (C83697 * C82774 + (C83243 + C83244 + C83245) * C153725 +
             (C4205 * C82771 + C4206 * C153930 +
              (C134 * C556 + C601 + C601 + C153882 * C580) * C153923) *
                 C153717) *
                C153847) *
               C154093 +
           (((C4206 * C153923 + C4205 * C153930 + C5574 * C82771) * C153717 +
             (C83988 + C83989 + C83990) * C153725 +
             (C83991 + C83992 + C83993) * C82774) *
                C153847 -
            (C83474 * C82774 + (C83013 + C83014 + C83015) * C153725 +
             (C3142 * C82771 + C3139 * C153930 + C3138 * C153923) * C153717) *
                C154094) *
               C153819) *
              C329 +
          ((((C83245 + C83244 + C83243) * C153717 +
             (C83242 + C83241 + C83240) * C153725 +
             (C83694 + C83695 + C83696) * C82774) *
                C153847 -
            (C82791 * C82774 + (C82781 + C82780 + C82779) * C153725 +
             (C82778 + C82777 + C82776) * C153717) *
                C154094) *
               C154093 +
           (((C83015 + C83014 + C83013) * C153717 +
             (C83012 + C83011 + C83010) * C153725 +
             (C83471 + C83472 + C83473) * C82774) *
                C154094 -
            (((C134 * C4171 + C4196 + C4196 + C153882 * C4179) * C82771 +
              C3877 * C153930 + C1124 * C153923) *
                 C82774 +
             (C83993 + C83992 + C83991) * C153725 +
             (C83990 + C83989 + C83988) * C153717) *
                C153847) *
               C153819) *
              C153754)) /
        (p * q * std::sqrt(p + q));
    d2ee[2] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C153923 +
             C3138 * C153930 + C3139 * C82771) *
                C153717 +
            (C82776 + C82777 + C82778) * C153725 + C82790 * C82774) *
               C153783 * C326 -
           ((C83010 + C83011 + C83012) * C82774 +
            (C83013 + C83014 + C83015) * C153725 +
            (C3142 * C82771 + C3139 * C153930 + C3138 * C153923) * C153717) *
               C153783 * C327 +
           ((C3139 * C153923 + C3142 * C153930 + C4591 * C82771) * C153717 +
            (C83016 + C83017 + C83018) * C153725 +
            (C83019 + C83020 + C83021) * C82774) *
               C153783 * C328) *
              C329 +
          (((C83015 + C83014 + C83013) * C153717 +
            (C83012 + C83011 + C83010) * C153725 +
            (C413 * C153923 + C418 * C153930 + C3145 * C82771) * C82774) *
               C153783 * C327 -
           (C82791 * C82774 + (C82781 + C82780 + C82779) * C153725 +
            (C82778 + C82777 + C82776) * C153717) *
               C153783 * C326 -
           (((C134 * C3086 + C3121 + C3121 + C153882 * C3094) * C82771 +
             C3145 * C153930 + C418 * C153923) *
                C82774 +
            (C83021 + C83020 + C83019) * C153725 +
            (C83018 + C83017 + C83016) * C153717) *
               C153783 * C328) *
              C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C153923 +
            C3138 * C153930 + C3139 * C82771) *
               C153717 +
           (C82776 + C82777 + C82778) * C153725 + C82790 * C82774) *
              C153783 * C153767 * C130 -
          (C82791 * C82774 + (C82781 + C82780 + C82779) * C153725 +
           (C82778 + C82777 + C82776) * C153717) *
              C153783 * C153767 * C131 +
          (C82790 * C153717 + (C82784 + C82783 + C82782) * C153725 +
           (C82785 + C82786 + C82787) * C82774) *
              C153783 * C153767 * C132 -
          (((C134 * C342 + C395 + C395 + C153882 * C366) * C82771 +
            C784 * C153930 + C197 * C153923) *
               C82774 +
           (C82787 + C82786 + C82785) * C153725 + C82791 * C153717) *
              C153783 * C153767 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C153923 +
             C3138 * C153930 + C3139 * C82771) *
                C153717 +
            (C82776 + C82777 + C82778) * C153725 + C82790 * C82774) *
               C549 -
           ((C83240 + C83241 + C83242) * C82774 +
            (C83243 + C83244 + C83245) * C153725 +
            (C4205 * C82771 + C4206 * C153930 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C153923) *
                C153717) *
               C550 +
           (((C134 * C557 + C602 + C602 + C153882 * C581) * C153923 +
             C4830 * C153930 + C4831 * C82771) *
                C153717 +
            (C83246 + C83247 + C83248) * C153725 +
            (C83249 + C83250 + C83251) * C82774) *
               C551) *
              C153767 * C329 +
          (((C83245 + C83244 + C83243) * C153717 +
            (C83242 + C83241 + C83240) * C153725 +
            (C634 * C153923 + C1124 * C153930 + C3877 * C82771) * C82774) *
               C550 -
           (C82791 * C82774 + (C82781 + C82780 + C82779) * C153725 +
            (C82778 + C82777 + C82776) * C153717) *
               C549 -
           (((C134 * C3372 + C3403 + C3403 + C153882 * C3380) * C82771 +
             C11810 * C153930 + C639 * C153923) *
                C82774 +
            (C83251 + C83250 + C83249) * C153725 +
            (C83248 + C83247 + C83246) * C153717) *
               C551) *
              C153767 * C153754)) /
            (p * q * std::sqrt(p + q));
    d2ee[3] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                (((((C134 * C136 + C161 + C161 + C153882 * C152) * C153923 +
                    C3138 * C153930 + C3139 * C82771) *
                       C153717 +
                   (C82776 + C82777 + C82778) * C153725 + C82790 * C82774) *
                      C154094 -
                  (C83697 * C82774 + (C83243 + C83244 + C83245) * C153725 +
                   (C4205 * C82771 + C4206 * C153930 +
                    (C134 * C556 + C601 + C601 + C153882 * C580) * C153923) *
                       C153717) *
                      C153847) *
                     C153767 * C154162 +
                 (((C83245 + C83244 + C83243) * C153717 +
                   (C83242 + C83241 + C83240) * C153725 +
                   (C83694 + C83695 + C83696) * C82774) *
                      C153847 -
                  (C82791 * C82774 + (C82781 + C82780 + C82779) * C153725 +
                   (C82778 + C82777 + C82776) * C153717) *
                      C154094) *
                     C153767 * C154163 +
                 ((C82790 * C153717 + (C82784 + C82783 + C82782) * C153725 +
                   (C82785 + C82786 + C82787) * C82774) *
                      C154094 -
                  (((C134 * C1916 + C1932 + C1932 + C153882 * C1926) * C82771 +
                    C1125 * C153930 + C633 * C153923) *
                       C82774 +
                   (C83696 + C83695 + C83694) * C153725 + C83697 * C153717) *
                      C153847) *
                     C153767 * C774)) /
               (p * q * std::sqrt(p + q));
    d2ee[4] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C153923 +
            C3138 * C153930 + C3139 * C82771) *
               C153717 +
           (C82776 + C82777 + C82778) * C153725 + C82790 * C82774) *
              C153783 * C153767 * C130 -
          (C82791 * C82774 + (C82781 + C82780 + C82779) * C153725 +
           (C82778 + C82777 + C82776) * C153717) *
              C153783 * C153767 * C131 +
          (C82790 * C153717 + (C82784 + C82783 + C82782) * C153725 +
           (C82785 + C82786 + C82787) * C82774) *
              C153783 * C153767 * C132 -
          (((C134 * C342 + C395 + C395 + C153882 * C366) * C82771 +
            C784 * C153930 + C197 * C153923) *
               C82774 +
           (C82787 + C82786 + C82785) * C153725 + C82791 * C153717) *
              C153783 * C153767 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C153923 +
             C3138 * C153930 + C3139 * C82771) *
                C153717 +
            (C82776 + C82777 + C82778) * C153725 + C82790 * C82774) *
               C153783 * C326 -
           ((C83010 + C83011 + C83012) * C82774 +
            (C83013 + C83014 + C83015) * C153725 +
            (C3142 * C82771 + C3139 * C153930 + C3138 * C153923) * C153717) *
               C153783 * C327 +
           ((C3139 * C153923 + C3142 * C153930 + C4591 * C82771) * C153717 +
            (C83016 + C83017 + C83018) * C153725 +
            (C83019 + C83020 + C83021) * C82774) *
               C153783 * C328) *
              C329 +
          (((C83015 + C83014 + C83013) * C153717 +
            (C83012 + C83011 + C83010) * C153725 +
            (C413 * C153923 + C418 * C153930 + C3145 * C82771) * C82774) *
               C153783 * C327 -
           (C82791 * C82774 + (C82781 + C82780 + C82779) * C153725 +
            (C82778 + C82777 + C82776) * C153717) *
               C153783 * C326 -
           (((C134 * C3086 + C3121 + C3121 + C153882 * C3094) * C82771 +
             C3145 * C153930 + C418 * C153923) *
                C82774 +
            (C83021 + C83020 + C83019) * C153725 +
            (C83018 + C83017 + C83016) * C153717) *
               C153783 * C328) *
              C153754)) /
            (p * q * std::sqrt(p + q));
    d2ee[5] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C153923 +
             C3138 * C153930 + C3139 * C82771) *
                C153717 +
            (C82776 + C82777 + C82778) * C153725 + C82790 * C82774) *
               C153783 * C154164 -
           (C83474 * C82774 + (C83013 + C83014 + C83015) * C153725 +
            (C3142 * C82771 + C3139 * C153930 + C3138 * C153923) * C153717) *
               C153783 * C154165 +
           ((C3139 * C153923 + C3142 * C153930 + C4591 * C82771) * C153717 +
            (C83016 + C83017 + C83018) * C153725 +
            (C83019 + C83020 + C83021) * C82774) *
               C153783 * C1629) *
              C154085 +
          (((C83015 + C83014 + C83013) * C153717 +
            (C83012 + C83011 + C83010) * C153725 +
            (C83471 + C83472 + C83473) * C82774) *
               C153783 * C154165 -
           (C82791 * C82774 + (C82781 + C82780 + C82779) * C153725 +
            (C82778 + C82777 + C82776) * C153717) *
               C153783 * C154164 -
           (((C134 * C3086 + C3121 + C3121 + C153882 * C3094) * C82771 +
             C3145 * C153930 + C418 * C153923) *
                C82774 +
            (C83021 + C83020 + C83019) * C153725 +
            (C83018 + C83017 + C83016) * C153717) *
               C153783 * C1629) *
              C153754)) /
        (p * q * std::sqrt(p + q));
    d2ee[6] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C153923 +
             C3138 * C153930 + C3139 * C82771) *
                C153717 +
            (C82776 + C82777 + C82778) * C153725 + C82790 * C82774) *
               C154094 -
           (C83697 * C82774 + (C83243 + C83244 + C83245) * C153725 +
            (C4205 * C82771 + C4206 * C153930 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C153923) *
                C153717) *
               C153847) *
              C154164 +
          (((C4206 * C153923 + C4205 * C153930 + C5574 * C82771) * C153717 +
            (C83988 + C83989 + C83990) * C153725 +
            (C83991 + C83992 + C83993) * C82774) *
               C153847 -
           (C83474 * C82774 + (C83013 + C83014 + C83015) * C153725 +
            (C3142 * C82771 + C3139 * C153930 + C3138 * C153923) * C153717) *
               C154094) *
              C154165 +
          (((C3139 * C153923 + C3142 * C153930 + C4591 * C82771) * C153717 +
            (C83016 + C83017 + C83018) * C153725 +
            (C83019 + C83020 + C83021) * C82774) *
               C154094 -
           (((C134 * C5557 + C5569 + C5569 + C153882 * C5563) * C82771 +
             C4208 * C153930 + C3416 * C153923) *
                C82774 +
            (C28790 * C82771 + C4207 * C153930 + C3417 * C153923) * C153725 +
            (C28789 * C82771 + C5574 * C153930 + C4205 * C153923) * C153717) *
               C153847) *
              C1629) *
         C153748) /
        (p * q * std::sqrt(p + q));
    d2ee[7] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C153923 +
            C3138 * C153930 + C3139 * C82771) *
               C153717 +
           (C82776 + C82777 + C82778) * C153725 + C82790 * C82774) *
              C153783 * C1338 -
          (C83474 * C82774 + (C83013 + C83014 + C83015) * C153725 +
           (C3142 * C82771 + C3139 * C153930 + C3138 * C153923) * C153717) *
              C153783 * C1339 +
          ((C3139 * C153923 + C3142 * C153930 + C4591 * C82771) * C153717 +
           (C83016 + C83017 + C83018) * C153725 +
           (C83019 + C83020 + C83021) * C82774) *
              C153783 * C1340 -
          (((C134 * C4574 + C4586 + C4586 + C153882 * C4580) * C82771 +
            C3144 * C153930 + C3140 * C153923) *
               C82774 +
           (C28236 * C82771 + C3143 * C153930 + C3141 * C153923) * C153725 +
           (C28235 * C82771 + C4591 * C153930 + C3142 * C153923) * C153717) *
              C153783 * C1341) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C153923 +
             C3138 * C153930 + C3139 * C82771) *
                C153717 +
            (C82776 + C82777 + C82778) * C153725 + C82790 * C82774) *
               C153783 * C1251 -
           (C83474 * C82774 + (C83013 + C83014 + C83015) * C153725 +
            (C3142 * C82771 + C3139 * C153930 + C3138 * C153923) * C153717) *
               C153783 * C153819) *
              C1253 +
          (((C83015 + C83014 + C83013) * C153717 +
            (C83012 + C83011 + C83010) * C153725 +
            (C83471 + C83472 + C83473) * C82774) *
               C153783 * C153819 -
           (C82791 * C82774 + (C82781 + C82780 + C82779) * C153725 +
            (C82778 + C82777 + C82776) * C153717) *
               C153783 * C1251) *
              C1254 +
          ((C82790 * C153717 + (C82784 + C82783 + C82782) * C153725 +
            (C82785 + C82786 + C82787) * C82774) *
               C153783 * C1251 -
           (((C134 * C1343 + C1359 + C1359 + C153882 * C1353) * C82771 +
             C419 * C153930 + C412 * C153923) *
                C82774 +
            (C83473 + C83472 + C83471) * C153725 + C83474 * C153717) *
               C153783 * C153819) *
              C1255)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C153923 +
             C3138 * C153930 + C3139 * C82771) *
                C153717 +
            (C82776 + C82777 + C82778) * C153725 + C82790 * C82774) *
               C549 -
           (C83697 * C82774 + (C83243 + C83244 + C83245) * C153725 +
            (C4205 * C82771 + C4206 * C153930 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C153923) *
                C153717) *
               C550 +
           (((C134 * C557 + C602 + C602 + C153882 * C581) * C153923 +
             C4830 * C153930 + C4831 * C82771) *
                C153717 +
            (C83246 + C83247 + C83248) * C153725 +
            (C83249 + C83250 + C83251) * C82774) *
               C551) *
              C1251 +
          (((C4206 * C153923 + C4205 * C153930 + C5574 * C82771) * C153717 +
            (C83988 + C83989 + C83990) * C153725 +
            (C83991 + C83992 + C83993) * C82774) *
               C550 -
           (C83474 * C82774 + (C83013 + C83014 + C83015) * C153725 +
            (C3142 * C82771 + C3139 * C153930 + C3138 * C153923) * C153717) *
               C549 -
           (((C134 * C4809 + C4823 + C4823 + C153882 * C4815) * C82771 +
             C3421 * C153930 + C3420 * C153923) *
                C82774 +
            (C34998 * C82771 + C3419 * C153930 + C3418 * C153923) * C153725 +
            (C29138 * C82771 + C4831 * C153930 + C4830 * C153923) * C153717) *
               C551) *
              C153819) *
         C153748) /
            (p * q * std::sqrt(p + q));
    d2ee[8] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C153882 * C152) * C153923 +
              C3138 * C153930 + C3139 * C82771) *
                 C153717 +
             (C82776 + C82777 + C82778) * C153725 + C82790 * C82774) *
                C154094 -
            (C83697 * C82774 + (C83243 + C83244 + C83245) * C153725 +
             (C4205 * C82771 + C4206 * C153930 +
              (C134 * C556 + C601 + C601 + C153882 * C580) * C153923) *
                 C153717) *
                C153847) *
               C1251 +
           (((C4206 * C153923 + C4205 * C153930 + C5574 * C82771) * C153717 +
             (C83988 + C83989 + C83990) * C153725 +
             (C83991 + C83992 + C83993) * C82774) *
                C153847 -
            (C83474 * C82774 + (C83013 + C83014 + C83015) * C153725 +
             (C3142 * C82771 + C3139 * C153930 + C3138 * C153923) * C153717) *
                C154094) *
               C153819) *
              C154085 +
          ((((C83245 + C83244 + C83243) * C153717 +
             (C83242 + C83241 + C83240) * C153725 +
             (C83694 + C83695 + C83696) * C82774) *
                C153847 -
            (C82791 * C82774 + (C82781 + C82780 + C82779) * C153725 +
             (C82778 + C82777 + C82776) * C153717) *
                C154094) *
               C1251 +
           (((C83015 + C83014 + C83013) * C153717 +
             (C83012 + C83011 + C83010) * C153725 +
             (C83471 + C83472 + C83473) * C82774) *
                C154094 -
            (((C134 * C4171 + C4196 + C4196 + C153882 * C4179) * C82771 +
              C3877 * C153930 + C1124 * C153923) *
                 C82774 +
             (C83993 + C83992 + C83991) * C153725 +
             (C83990 + C83989 + C83988) * C153717) *
                C153847) *
               C153819) *
              C153754)) /
        (p * q * std::sqrt(p + q));
    d2ee[9] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C153923 +
             C3138 * C153930 + C3139 * C82771) *
                C153717 +
            (C82776 + C82777 + C82778) * C153725 + C82790 * C82774) *
               C153783 * C1251 -
           (C83474 * C82774 + (C83013 + C83014 + C83015) * C153725 +
            (C3142 * C82771 + C3139 * C153930 + C3138 * C153923) * C153717) *
               C153783 * C153819) *
              C1253 +
          (((C83015 + C83014 + C83013) * C153717 +
            (C83012 + C83011 + C83010) * C153725 +
            (C83471 + C83472 + C83473) * C82774) *
               C153783 * C153819 -
           (C82791 * C82774 + (C82781 + C82780 + C82779) * C153725 +
            (C82778 + C82777 + C82776) * C153717) *
               C153783 * C1251) *
              C1254 +
          ((C82790 * C153717 + (C82784 + C82783 + C82782) * C153725 +
            (C82785 + C82786 + C82787) * C82774) *
               C153783 * C1251 -
           (((C134 * C1343 + C1359 + C1359 + C153882 * C1353) * C82771 +
             C419 * C153930 + C412 * C153923) *
                C82774 +
            (C83473 + C83472 + C83471) * C153725 + C83474 * C153717) *
               C153783 * C153819) *
              C1255)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C153923 +
            C3138 * C153930 + C3139 * C82771) *
               C153717 +
           (C82776 + C82777 + C82778) * C153725 + C82790 * C82774) *
              C153783 * C1338 -
          (C83474 * C82774 + (C83013 + C83014 + C83015) * C153725 +
           (C3142 * C82771 + C3139 * C153930 + C3138 * C153923) * C153717) *
              C153783 * C1339 +
          ((C3139 * C153923 + C3142 * C153930 + C4591 * C82771) * C153717 +
           (C83016 + C83017 + C83018) * C153725 +
           (C83019 + C83020 + C83021) * C82774) *
              C153783 * C1340 -
          (((C134 * C4574 + C4586 + C4586 + C153882 * C4580) * C82771 +
            C3144 * C153930 + C3140 * C153923) *
               C82774 +
           (C28236 * C82771 + C3143 * C153930 + C3141 * C153923) * C153725 +
           (C28235 * C82771 + C4591 * C153930 + C3142 * C153923) * C153717) *
              C153783 * C1341) *
         C153748) /
            (p * q * std::sqrt(p + q));
    d2ee[10] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C153882 * C152) * C153923 +
              C3138 * C153930 + C3139 * C82771) *
                 C153717 +
             (C82776 + C82777 + C82778) * C153725 + C82790 * C82774) *
                C2058 -
            (C83697 * C82774 + (C83243 + C83244 + C83245) * C153725 +
             (C4205 * C82771 + C4206 * C153930 +
              (C134 * C556 + C601 + C601 + C153882 * C580) * C153923) *
                 C153717) *
                C153847) *
               C154093 +
           (((C4206 * C153923 + C4205 * C153930 + C5574 * C82771) * C153717 +
             (C83988 + C83989 + C83990) * C153725 +
             (C83991 + C83992 + C83993) * C82774) *
                C153847 -
            (C83474 * C82774 + (C83013 + C83014 + C83015) * C153725 +
             (C3142 * C82771 + C3139 * C153930 + C3138 * C153923) * C153717) *
                C2058) *
               C153819) *
              C154085 +
          ((((C83245 + C83244 + C83243) * C153717 +
             (C83242 + C83241 + C83240) * C153725 +
             (C83694 + C83695 + C83696) * C82774) *
                C153847 -
            (C82791 * C82774 + (C82781 + C82780 + C82779) * C153725 +
             (C82778 + C82777 + C82776) * C153717) *
                C2058) *
               C154093 +
           (((C83015 + C83014 + C83013) * C153717 +
             (C83012 + C83011 + C83010) * C153725 +
             (C83471 + C83472 + C83473) * C82774) *
                C2058 -
            (((C134 * C4171 + C4196 + C4196 + C153882 * C4179) * C82771 +
              C3877 * C153930 + C1124 * C153923) *
                 C82774 +
             (C83993 + C83992 + C83991) * C153725 +
             (C83990 + C83989 + C83988) * C153717) *
                C153847) *
               C153819) *
              C153754)) /
        (p * q * std::sqrt(p + q));
    d2ee[11] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C153923 +
             C3138 * C153930 + C3139 * C82771) *
                C153717 +
            (C82776 + C82777 + C82778) * C153725 + C82790 * C82774) *
               C154166 -
           (C83697 * C82774 + (C83243 + C83244 + C83245) * C153725 +
            (C4205 * C82771 + C4206 * C153930 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C153923) *
                C153717) *
               C154167 +
           (((C134 * C557 + C602 + C602 + C153882 * C581) * C153923 +
             C4830 * C153930 + C4831 * C82771) *
                C153717 +
            (C83246 + C83247 + C83248) * C153725 +
            (C83249 + C83250 + C83251) * C82774) *
               C2574) *
              C154093 +
          (((C4206 * C153923 + C4205 * C153930 + C5574 * C82771) * C153717 +
            (C83988 + C83989 + C83990) * C153725 +
            (C83991 + C83992 + C83993) * C82774) *
               C154167 -
           (C83474 * C82774 + (C83013 + C83014 + C83015) * C153725 +
            (C3142 * C82771 + C3139 * C153930 + C3138 * C153923) * C153717) *
               C154166 -
           (((C134 * C4809 + C4823 + C4823 + C153882 * C4815) * C82771 +
             C3421 * C153930 + C3420 * C153923) *
                C82774 +
            (C34998 * C82771 + C3419 * C153930 + C3418 * C153923) * C153725 +
            (C29138 * C82771 + C4831 * C153930 + C4830 * C153923) * C153717) *
               C2574) *
              C153819) *
         C153748) /
        (p * q * std::sqrt(p + q));
    d2ee[12] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C153923 +
             C3138 * C153930 + C3139 * C82771) *
                C153717 +
            (C82776 + C82777 + C82778) * C153725 + C82790 * C82774) *
               C2058 -
           (C83697 * C82774 + (C83243 + C83244 + C83245) * C153725 +
            (C4205 * C82771 + C4206 * C153930 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C153923) *
                C153717) *
               C153847) *
              C326 +
          (((C4206 * C153923 + C4205 * C153930 + C5574 * C82771) * C153717 +
            (C83988 + C83989 + C83990) * C153725 +
            (C83991 + C83992 + C83993) * C82774) *
               C153847 -
           (C83474 * C82774 + (C83013 + C83014 + C83015) * C153725 +
            (C3142 * C82771 + C3139 * C153930 + C3138 * C153923) * C153717) *
               C2058) *
              C327 +
          (((C3139 * C153923 + C3142 * C153930 + C4591 * C82771) * C153717 +
            (C83016 + C83017 + C83018) * C153725 +
            (C83019 + C83020 + C83021) * C82774) *
               C2058 -
           (((C134 * C5557 + C5569 + C5569 + C153882 * C5563) * C82771 +
             C4208 * C153930 + C3416 * C153923) *
                C82774 +
            (C28790 * C82771 + C4207 * C153930 + C3417 * C153923) * C153725 +
            (C28789 * C82771 + C5574 * C153930 + C4205 * C153923) * C153717) *
               C153847) *
              C328) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C153923 +
             C3138 * C153930 + C3139 * C82771) *
                C153717 +
            (C82776 + C82777 + C82778) * C153725 + C82790 * C82774) *
               C2058 -
           (C83697 * C82774 + (C83243 + C83244 + C83245) * C153725 +
            (C4205 * C82771 + C4206 * C153930 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C153923) *
                C153717) *
               C153847) *
              C153767 * C1253 +
          (((C83245 + C83244 + C83243) * C153717 +
            (C83242 + C83241 + C83240) * C153725 +
            (C83694 + C83695 + C83696) * C82774) *
               C153847 -
           (C82791 * C82774 + (C82781 + C82780 + C82779) * C153725 +
            (C82778 + C82777 + C82776) * C153717) *
               C2058) *
              C153767 * C1254 +
          ((C82790 * C153717 + (C82784 + C82783 + C82782) * C153725 +
            (C82785 + C82786 + C82787) * C82774) *
               C2058 -
           (((C134 * C1916 + C1932 + C1932 + C153882 * C1926) * C82771 +
             C1125 * C153930 + C633 * C153923) *
                C82774 +
            (C83696 + C83695 + C83694) * C153725 + C83697 * C153717) *
               C153847) *
              C153767 * C1255)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C153923 +
            C3138 * C153930 + C3139 * C82771) *
               C153717 +
           (C82776 + C82777 + C82778) * C153725 + C82790 * C82774) *
              C2264 -
          (C83697 * C82774 + (C83243 + C83244 + C83245) * C153725 +
           (C4205 * C82771 + C4206 * C153930 +
            (C134 * C556 + C601 + C601 + C153882 * C580) * C153923) *
               C153717) *
              C2265 +
          (((C134 * C557 + C602 + C602 + C153882 * C581) * C153923 +
            C4830 * C153930 + C4831 * C82771) *
               C153717 +
           (C83246 + C83247 + C83248) * C153725 +
           (C83249 + C83250 + C83251) * C82774) *
              C2266 -
          (((C134 * C6156 + C6175 + C6175 + C153882 * C6168) * C82771 +
            (C134 * C6157 + C6176 + C6176 + C153882 * C6169) * C153930 +
            (C134 * C2270 + C2286 + C2286 + C153882 * C2280) * C153923) *
               C82774 +
           ((C134 * C6158 + C6177 + C6177 + C153882 * C6170) * C82771 +
            (C134 * C6159 + C6178 + C6178 + C153882 * C6171) * C153930 +
            (C134 * C2271 + C2287 + C2287 + C153882 * C2281) * C153923) *
               C153725 +
           ((C134 * C6160 + C6179 + C6179 + C153882 * C6172) * C82771 +
            (C134 * C6161 + C6180 + C6180 + C153882 * C6173) * C153930 +
            (C134 * C2272 + C2288 + C2288 + C153882 * C2282) * C153923) *
               C153717) *
              C2267) *
         C153767 * C153748) /
            (p * q * std::sqrt(p + q));
    d2ee[13] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 (((((C134 * C136 + C161 + C161 + C153882 * C152) * C153923 +
                     C3138 * C153930 + C3139 * C82771) *
                        C153717 +
                    (C82776 + C82777 + C82778) * C153725 + C82790 * C82774) *
                       C154166 -
                   (C83697 * C82774 + (C83243 + C83244 + C83245) * C153725 +
                    (C4205 * C82771 + C4206 * C153930 +
                     (C134 * C556 + C601 + C601 + C153882 * C580) * C153923) *
                        C153717) *
                       C154167 +
                   (((C134 * C557 + C602 + C602 + C153882 * C581) * C153923 +
                     C4830 * C153930 + C4831 * C82771) *
                        C153717 +
                    (C83246 + C83247 + C83248) * C153725 +
                    (C83249 + C83250 + C83251) * C82774) *
                       C2574) *
                      C153767 * C154085 +
                  (((C83245 + C83244 + C83243) * C153717 +
                    (C83242 + C83241 + C83240) * C153725 +
                    (C83694 + C83695 + C83696) * C82774) *
                       C154167 -
                   (C82791 * C82774 + (C82781 + C82780 + C82779) * C153725 +
                    (C82778 + C82777 + C82776) * C153717) *
                       C154166 -
                   (((C134 * C3372 + C3403 + C3403 + C153882 * C3380) * C82771 +
                     C11810 * C153930 + C639 * C153923) *
                        C82774 +
                    (C83251 + C83250 + C83249) * C153725 +
                    (C83248 + C83247 + C83246) * C153717) *
                       C2574) *
                      C153767 * C153754)) /
                (p * q * std::sqrt(p + q));
    d2ee[14] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C153923 +
             C3138 * C153930 + C3139 * C82771) *
                C153717 +
            (C82776 + C82777 + C82778) * C153725 + C82790 * C82774) *
               C2058 -
           (C83697 * C82774 + (C83243 + C83244 + C83245) * C153725 +
            (C4205 * C82771 + C4206 * C153930 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C153923) *
                C153717) *
               C153847) *
              C153767 * C1253 +
          (((C83245 + C83244 + C83243) * C153717 +
            (C83242 + C83241 + C83240) * C153725 +
            (C83694 + C83695 + C83696) * C82774) *
               C153847 -
           (C82791 * C82774 + (C82781 + C82780 + C82779) * C153725 +
            (C82778 + C82777 + C82776) * C153717) *
               C2058) *
              C153767 * C1254 +
          ((C82790 * C153717 + (C82784 + C82783 + C82782) * C153725 +
            (C82785 + C82786 + C82787) * C82774) *
               C2058 -
           (((C134 * C1916 + C1932 + C1932 + C153882 * C1926) * C82771 +
             C1125 * C153930 + C633 * C153923) *
                C82774 +
            (C83696 + C83695 + C83694) * C153725 + C83697 * C153717) *
               C153847) *
              C153767 * C1255)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C153923 +
             C3138 * C153930 + C3139 * C82771) *
                C153717 +
            (C82776 + C82777 + C82778) * C153725 + C82790 * C82774) *
               C2058 -
           (C83697 * C82774 + (C83243 + C83244 + C83245) * C153725 +
            (C4205 * C82771 + C4206 * C153930 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C153923) *
                C153717) *
               C153847) *
              C326 +
          (((C4206 * C153923 + C4205 * C153930 + C5574 * C82771) * C153717 +
            (C83988 + C83989 + C83990) * C153725 +
            (C83991 + C83992 + C83993) * C82774) *
               C153847 -
           (C83474 * C82774 + (C83013 + C83014 + C83015) * C153725 +
            (C3142 * C82771 + C3139 * C153930 + C3138 * C153923) * C153717) *
               C2058) *
              C327 +
          (((C3139 * C153923 + C3142 * C153930 + C4591 * C82771) * C153717 +
            (C83016 + C83017 + C83018) * C153725 +
            (C83019 + C83020 + C83021) * C82774) *
               C2058 -
           (((C134 * C5557 + C5569 + C5569 + C153882 * C5563) * C82771 +
             C4208 * C153930 + C3416 * C153923) *
                C82774 +
            (C28790 * C82771 + C4207 * C153930 + C3417 * C153923) * C153725 +
            (C28789 * C82771 + C5574 * C153930 + C4205 * C153923) * C153717) *
               C153847) *
              C328) *
         C153748) /
            (p * q * std::sqrt(p + q));
    d2ee[15] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
              C14938 + C14938 + C153969 * C580) *
                 C153923 +
             (C19164 + C19165) * C153930 + C38471 * C82771) *
                C73969 +
            ((C14991 + C14992) * C153923 + C19130 * C153930 + C19138 * C82771) *
                C153722) *
               C153783 * C154093 -
           ((C38472 * C82771 + C19132 * C153930 + C19133 * C153923) * C153722 +
            (C40246 * C82771 + (C19166 + C19167) * C153930 +
             (C19165 + C19164) * C153923) *
                C73969) *
               C153783 * C153819) *
              C154162 +
          (((C19130 * C153923 + C19138 * C153930 + C38473 * C82771) * C73969 +
            (C18830 * C153923 + C19143 * C153930 + (C19170 + C19171) * C82771) *
                C153722) *
               C153783 * C153819 -
           ((C19131 * C82771 + C15752 * C153930 + (C14994 + C14993) * C153923) *
                C153722 +
            (C19132 * C82771 + C19133 * C153930 + (C14992 + C14991) * C153923) *
                C73969) *
               C153783 * C154093) *
              C154163 +
          (((C15001 * C153923 + C18830 * C153930 + C19143 * C82771) * C73969 +
            (C15002 * C153923 + C19774 * C153930 + (C15281 + C15282) * C82771) *
                C153722) *
               C153783 * C154093 -
           (((C14934 * C4171 + C16599 + C16599 + C153969 * C4179 +
              C14932 * C1344 + C16600 + C16600 + C154109 * C1354) *
                 C82771 +
             (C15282 + C15281) * C153930 + C15751 * C153923) *
                C153722 +
            ((C19171 + C19170) * C82771 + C19131 * C153930 + C15752 * C153923) *
                C73969) *
               C153783 * C153819) *
              C774)) /
        (p * q * std::sqrt(p + q));
    d2ee[16] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C14932 * C136 + C14937 + C14937 + C154109 * C152 +
               C14934 * C556 + C14938 + C14938 + C153969 * C580) *
                  C153923 +
              (C19164 + C19165) * C153930 + C38471 * C82771) *
                 C73969 +
             ((C14991 + C14992) * C153923 + C19130 * C153930 +
              C19138 * C82771) *
                 C153722) *
                C154094 -
            ((C39750 * C82771 + C20456 * C153930 +
              (C15549 + C15550) * C153923) *
                 C153722 +
             (C41531 * C82771 + (C20483 + C20484) * C153930 +
              (C14934 * C557 + C15495 + C15495 + C153969 * C581 +
               C14932 * C556 + C15496 + C15496 + C154109 * C580) *
                  C153923) *
                 C73969) *
                C153847) *
               C154093 +
           ((((C20484 + C20483) * C153923 + (C22275 + C22276) * C153930 +
              (C41544 + C41545) * C82771) *
                 C73969 +
             (C20461 * C153923 + C39751 * C153930 +
              (C39760 + C39761) * C82771) *
                 C153722) *
                C153847 -
            ((C38472 * C82771 + C19132 * C153930 + C19133 * C153923) * C153722 +
             (C40246 * C82771 + (C19166 + C19167) * C153930 +
              (C19165 + C19164) * C153923) *
                 C73969) *
                C154094) *
               C153819) *
              C329 +
          (((((C15550 + C15549) * C153923 + C20461 * C153930 +
              C39751 * C82771) *
                 C73969 +
             ((C15548 + C15547) * C153923 + C20466 * C153930 +
              (C20487 + C20488) * C82771) *
                 C153722) *
                C153847 -
            ((C19131 * C82771 + C15752 * C153930 +
              (C14994 + C14993) * C153923) *
                 C153722 +
             (C19132 * C82771 + C19133 * C153930 +
              (C14992 + C14991) * C153923) *
                 C73969) *
                C154094) *
               C154093 +
           (((C19130 * C153923 + C19138 * C153930 + C38473 * C82771) * C73969 +
             (C18830 * C153923 + C19143 * C153930 +
              (C19170 + C19171) * C82771) *
                 C153722) *
                C154094 -
            (((C14934 * C4809 + C22265 + C22265 + C153969 * C4815 +
               C14932 * C4170 + C22266 + C22266 + C154109 * C4178) *
                  C82771 +
              (C20488 + C20487) * C153930 + C20066 * C153923) *
                 C153722 +
             ((C39761 + C39760) * C82771 + C39750 * C153930 +
              C20456 * C153923) *
                 C73969) *
                C153847) *
               C153819) *
              C153754)) /
        (p * q * std::sqrt(p + q));
    d2ee[17] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
              C14938 + C14938 + C153969 * C580) *
                 C153923 +
             (C19164 + C19165) * C153930 + C38471 * C82771) *
                C73969 +
            ((C14991 + C14992) * C153923 + C19130 * C153930 + C19138 * C82771) *
                C153722) *
               C153783 * C326 -
           ((C38472 * C82771 + C19132 * C153930 + C19133 * C153923) * C153722 +
            (C40246 * C82771 + (C19166 + C19167) * C153930 +
             (C19165 + C19164) * C153923) *
                C73969) *
               C153783 * C327 +
           ((C38471 * C153923 + C43614 * C153930 + (C40259 + C40260) * C82771) *
                C73969 +
            (C19138 * C153923 + C38473 * C153930 + (C38482 + C38483) * C82771) *
                C153722) *
               C153783 * C328) *
              C329 +
          (((C19130 * C153923 + C19138 * C153930 + C38473 * C82771) * C73969 +
            (C18830 * C153923 + C19143 * C153930 + (C19170 + C19171) * C82771) *
                C153722) *
               C153783 * C327 -
           ((C19131 * C82771 + C15752 * C153930 + (C14994 + C14993) * C153923) *
                C153722 +
            (C19132 * C82771 + C19133 * C153930 + (C14992 + C14991) * C153923) *
                C73969) *
               C153783 * C326 -
           (((C14934 * C5557 + C20977 + C20977 + C153969 * C5563 +
              C14932 * C3085 + C20978 + C20978 + C154109 * C3093) *
                 C82771 +
             (C19171 + C19170) * C153930 + C19131 * C153923) *
                C153722 +
            ((C38483 + C38482) * C82771 + C38472 * C153930 + C19132 * C153923) *
                C73969) *
               C153783 * C328) *
              C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
             C14938 + C14938 + C153969 * C580) *
                C153923 +
            (C19164 + C19165) * C153930 + C38471 * C82771) *
               C73969 +
           ((C14991 + C14992) * C153923 + C19130 * C153930 + C19138 * C82771) *
               C153722) *
              C153783 * C153767 * C130 -
          ((C19131 * C82771 + C15752 * C153930 + (C14994 + C14993) * C153923) *
               C153722 +
           (C19132 * C82771 + C19133 * C153930 + (C14992 + C14991) * C153923) *
               C73969) *
              C153783 * C153767 * C131 +
          ((C15001 * C153923 + C18830 * C153930 + C19143 * C82771) * C73969 +
           (C15002 * C153923 + C19774 * C153930 + (C15281 + C15282) * C82771) *
               C153722) *
              C153783 * C153767 * C132 -
          (((C14934 * C1916 + C15245 + C15245 + C153969 * C1926 +
             C14932 * C340 + C15246 + C15246 + C154109 * C364) *
                C82771 +
            (C15766 + C15765) * C153930 + C15003 * C153923) *
               C153722 +
           ((C15282 + C15281) * C82771 + C15751 * C153930 + C15004 * C153923) *
               C73969) *
              C153783 * C153767 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
              C14938 + C14938 + C153969 * C580) *
                 C153923 +
             (C19164 + C19165) * C153930 + C38471 * C82771) *
                C73969 +
            ((C14991 + C14992) * C153923 + C19130 * C153930 + C19138 * C82771) *
                C153722) *
               C549 -
           ((C39750 * C82771 + C20456 * C153930 + (C15549 + C15550) * C153923) *
                C153722 +
            (C41531 * C82771 + (C20483 + C20484) * C153930 +
             (C14934 * C557 + C15495 + C15495 + C153969 * C581 + C14932 * C556 +
              C15496 + C15496 + C154109 * C580) *
                 C153923) *
                C73969) *
               C550 +
           (((C14932 * C557 + C15497 + C15497 + C154109 * C581 +
              C14934 * C2272 + C15498 + C15498 + C153969 * C2282) *
                 C153923 +
             (C21293 + C21294) * C153930 + (C40563 + C40564) * C82771) *
                C73969 +
            ((C15551 + C15552) * C153923 + (C19478 + C19479) * C153930 +
             (C38782 + C38783) * C82771) *
                C153722) *
               C551) *
              C153767 * C329 +
          ((((C15550 + C15549) * C153923 + C20461 * C153930 + C39751 * C82771) *
                C73969 +
            ((C15548 + C15547) * C153923 + C20466 * C153930 +
             (C20487 + C20488) * C82771) *
                C153722) *
               C550 -
           ((C19131 * C82771 + C15752 * C153930 + (C14994 + C14993) * C153923) *
                C153722 +
            (C19132 * C82771 + C19133 * C153930 + (C14992 + C14991) * C153923) *
                C73969) *
               C549 -
           (((C14934 * C6156 + C21283 + C21283 + C153969 * C6168 +
              C14932 * C3371 + C21284 + C21284 + C154109 * C3379) *
                 C82771 +
             (C19481 + C19480) * C153930 + (C15554 + C15553) * C153923) *
                C153722 +
            ((C38783 + C38782) * C82771 + (C19479 + C19478) * C153930 +
             (C15552 + C15551) * C153923) *
                C73969) *
               C551) *
              C153767 * C153754)) /
            (p * q * std::sqrt(p + q));
    d2ee[18] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
              C14938 + C14938 + C153969 * C580) *
                 C153923 +
             (C19164 + C19165) * C153930 + C38471 * C82771) *
                C73969 +
            ((C14991 + C14992) * C153923 + C19130 * C153930 + C19138 * C82771) *
                C153722) *
               C154094 -
           ((C39750 * C82771 + C20456 * C153930 + (C15549 + C15550) * C153923) *
                C153722 +
            (C41531 * C82771 + (C20483 + C20484) * C153930 +
             (C14934 * C557 + C15495 + C15495 + C153969 * C581 + C14932 * C556 +
              C15496 + C15496 + C154109 * C580) *
                 C153923) *
                C73969) *
               C153847) *
              C153767 * C154162 +
          ((((C15550 + C15549) * C153923 + C20461 * C153930 + C39751 * C82771) *
                C73969 +
            ((C15548 + C15547) * C153923 + C20466 * C153930 +
             (C20487 + C20488) * C82771) *
                C153722) *
               C153847 -
           ((C19131 * C82771 + C15752 * C153930 + (C14994 + C14993) * C153923) *
                C153722 +
            (C19132 * C82771 + C19133 * C153930 + (C14992 + C14991) * C153923) *
                C73969) *
               C154094) *
              C153767 * C154163 +
          (((C15001 * C153923 + C18830 * C153930 + C19143 * C82771) * C73969 +
            (C15002 * C153923 + C19774 * C153930 + (C15281 + C15282) * C82771) *
                C153722) *
               C154094 -
           (((C14934 * C3372 + C17455 + C17455 + C153969 * C3380 +
              C14932 * C1917 + C17456 + C17456 + C154109 * C1927) *
                 C82771 +
             (C16274 + C16273) * C153930 + C15961 * C153923) *
                C153722 +
            ((C20488 + C20487) * C82771 + C20066 * C153930 + C15962 * C153923) *
                C73969) *
               C153847) *
              C153767 * C774)) /
        (p * q * std::sqrt(p + q));
    d2ee[19] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
             C14938 + C14938 + C153969 * C580) *
                C153923 +
            (C19164 + C19165) * C153930 + C38471 * C82771) *
               C73969 +
           ((C14991 + C14992) * C153923 + C19130 * C153930 + C19138 * C82771) *
               C153722) *
              C153783 * C153767 * C130 -
          ((C19131 * C82771 + C15752 * C153930 + (C14994 + C14993) * C153923) *
               C153722 +
           (C19132 * C82771 + C19133 * C153930 + (C14992 + C14991) * C153923) *
               C73969) *
              C153783 * C153767 * C131 +
          ((C15001 * C153923 + C18830 * C153930 + C19143 * C82771) * C73969 +
           (C15002 * C153923 + C19774 * C153930 + (C15281 + C15282) * C82771) *
               C153722) *
              C153783 * C153767 * C132 -
          (((C14934 * C1916 + C15245 + C15245 + C153969 * C1926 +
             C14932 * C340 + C15246 + C15246 + C154109 * C364) *
                C82771 +
            (C15766 + C15765) * C153930 + C15003 * C153923) *
               C153722 +
           ((C15282 + C15281) * C82771 + C15751 * C153930 + C15004 * C153923) *
               C73969) *
              C153783 * C153767 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
              C14938 + C14938 + C153969 * C580) *
                 C153923 +
             (C19164 + C19165) * C153930 + C38471 * C82771) *
                C73969 +
            ((C14991 + C14992) * C153923 + C19130 * C153930 + C19138 * C82771) *
                C153722) *
               C153783 * C326 -
           ((C38472 * C82771 + C19132 * C153930 + C19133 * C153923) * C153722 +
            (C40246 * C82771 + (C19166 + C19167) * C153930 +
             (C19165 + C19164) * C153923) *
                C73969) *
               C153783 * C327 +
           ((C38471 * C153923 + C43614 * C153930 + (C40259 + C40260) * C82771) *
                C73969 +
            (C19138 * C153923 + C38473 * C153930 + (C38482 + C38483) * C82771) *
                C153722) *
               C153783 * C328) *
              C329 +
          (((C19130 * C153923 + C19138 * C153930 + C38473 * C82771) * C73969 +
            (C18830 * C153923 + C19143 * C153930 + (C19170 + C19171) * C82771) *
                C153722) *
               C153783 * C327 -
           ((C19131 * C82771 + C15752 * C153930 + (C14994 + C14993) * C153923) *
                C153722 +
            (C19132 * C82771 + C19133 * C153930 + (C14992 + C14991) * C153923) *
                C73969) *
               C153783 * C326 -
           (((C14934 * C5557 + C20977 + C20977 + C153969 * C5563 +
              C14932 * C3085 + C20978 + C20978 + C154109 * C3093) *
                 C82771 +
             (C19171 + C19170) * C153930 + C19131 * C153923) *
                C153722 +
            ((C38483 + C38482) * C82771 + C38472 * C153930 + C19132 * C153923) *
                C73969) *
               C153783 * C328) *
              C153754)) /
            (p * q * std::sqrt(p + q));
    d2ee[20] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
              C14938 + C14938 + C153969 * C580) *
                 C153923 +
             (C19164 + C19165) * C153930 + C38471 * C82771) *
                C73969 +
            ((C14991 + C14992) * C153923 + C19130 * C153930 + C19138 * C82771) *
                C153722) *
               C153783 * C154164 -
           ((C38472 * C82771 + C19132 * C153930 + C19133 * C153923) * C153722 +
            (C40246 * C82771 + (C19166 + C19167) * C153930 +
             (C19165 + C19164) * C153923) *
                C73969) *
               C153783 * C154165 +
           ((C38471 * C153923 + C43614 * C153930 + (C40259 + C40260) * C82771) *
                C73969 +
            (C19138 * C153923 + C38473 * C153930 + (C38482 + C38483) * C82771) *
                C153722) *
               C153783 * C1629) *
              C154085 +
          (((C19130 * C153923 + C19138 * C153930 + C38473 * C82771) * C73969 +
            (C18830 * C153923 + C19143 * C153930 + (C19170 + C19171) * C82771) *
                C153722) *
               C153783 * C154165 -
           ((C19131 * C82771 + C15752 * C153930 + (C14994 + C14993) * C153923) *
                C153722 +
            (C19132 * C82771 + C19133 * C153930 + (C14992 + C14991) * C153923) *
                C73969) *
               C153783 * C154164 -
           (((C14934 * C5557 + C20977 + C20977 + C153969 * C5563 +
              C14932 * C3085 + C20978 + C20978 + C154109 * C3093) *
                 C82771 +
             (C19171 + C19170) * C153930 + C19131 * C153923) *
                C153722 +
            ((C38483 + C38482) * C82771 + C38472 * C153930 + C19132 * C153923) *
                C73969) *
               C153783 * C1629) *
              C153754)) /
        (p * q * std::sqrt(p + q));
    d2ee[21] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
              C14938 + C14938 + C153969 * C580) *
                 C153923 +
             (C19164 + C19165) * C153930 + C38471 * C82771) *
                C73969 +
            ((C14991 + C14992) * C153923 + C19130 * C153930 + C19138 * C82771) *
                C153722) *
               C154094 -
           ((C39750 * C82771 + C20456 * C153930 + (C15549 + C15550) * C153923) *
                C153722 +
            (C41531 * C82771 + (C20483 + C20484) * C153930 +
             (C14934 * C557 + C15495 + C15495 + C153969 * C581 + C14932 * C556 +
              C15496 + C15496 + C154109 * C580) *
                 C153923) *
                C73969) *
               C153847) *
              C154164 +
          ((((C20484 + C20483) * C153923 + (C22275 + C22276) * C153930 +
             (C41544 + C41545) * C82771) *
                C73969 +
            (C20461 * C153923 + C39751 * C153930 + (C39760 + C39761) * C82771) *
                C153722) *
               C153847 -
           ((C38472 * C82771 + C19132 * C153930 + C19133 * C153923) * C153722 +
            (C40246 * C82771 + (C19166 + C19167) * C153930 +
             (C19165 + C19164) * C153923) *
                C73969) *
               C154094) *
              C154165 +
          (((C38471 * C153923 + C43614 * C153930 + (C40259 + C40260) * C82771) *
                C73969 +
            (C19138 * C153923 + C38473 * C153930 + (C38482 + C38483) * C82771) *
                C153722) *
               C154094 -
           (((C14934 * C28359 + C41536 + C41536 + C153969 * C28363 +
              C14932 * C5558 + C41537 + C41537 + C154109 * C5564) *
                 C82771 +
             (C39761 + C39760) * C153930 + C39750 * C153923) *
                C153722 +
            ((C45656 + C45655) * C82771 + C45644 * C153930 + C41531 * C153923) *
                C73969) *
               C153847) *
              C1629) *
         C153748) /
        (p * q * std::sqrt(p + q));
    d2ee[22] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
             C14938 + C14938 + C153969 * C580) *
                C153923 +
            (C19164 + C19165) * C153930 + C38471 * C82771) *
               C73969 +
           ((C14991 + C14992) * C153923 + C19130 * C153930 + C19138 * C82771) *
               C153722) *
              C153783 * C1338 -
          ((C38472 * C82771 + C19132 * C153930 + C19133 * C153923) * C153722 +
           (C40246 * C82771 + (C19166 + C19167) * C153930 +
            (C19165 + C19164) * C153923) *
               C73969) *
              C153783 * C1339 +
          ((C38471 * C153923 + C43614 * C153930 + (C40259 + C40260) * C82771) *
               C73969 +
           (C19138 * C153923 + C38473 * C153930 + (C38482 + C38483) * C82771) *
               C153722) *
              C153783 * C1340 -
          (((C14934 * C28773 + C40251 + C40251 + C153969 * C28777 +
             C14932 * C4575 + C40252 + C40252 + C154109 * C4581) *
                C82771 +
            (C38483 + C38482) * C153930 + C38472 * C153923) *
               C153722 +
           ((C44791 + C44790) * C82771 + C44779 * C153930 + C40246 * C153923) *
               C73969) *
              C153783 * C1341) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
              C14938 + C14938 + C153969 * C580) *
                 C153923 +
             (C19164 + C19165) * C153930 + C38471 * C82771) *
                C73969 +
            ((C14991 + C14992) * C153923 + C19130 * C153930 + C19138 * C82771) *
                C153722) *
               C153783 * C1251 -
           ((C38472 * C82771 + C19132 * C153930 + C19133 * C153923) * C153722 +
            (C40246 * C82771 + (C19166 + C19167) * C153930 +
             (C19165 + C19164) * C153923) *
                C73969) *
               C153783 * C153819) *
              C1253 +
          (((C19130 * C153923 + C19138 * C153930 + C38473 * C82771) * C73969 +
            (C18830 * C153923 + C19143 * C153930 + (C19170 + C19171) * C82771) *
                C153722) *
               C153783 * C153819 -
           ((C19131 * C82771 + C15752 * C153930 + (C14994 + C14993) * C153923) *
                C153722 +
            (C19132 * C82771 + C19133 * C153930 + (C14992 + C14991) * C153923) *
                C73969) *
               C153783 * C1251) *
              C1254 +
          (((C15001 * C153923 + C18830 * C153930 + C19143 * C82771) * C73969 +
            (C15002 * C153923 + C19774 * C153930 + (C15281 + C15282) * C82771) *
                C153722) *
               C153783 * C1251 -
           (((C14934 * C4171 + C16599 + C16599 + C153969 * C4179 +
              C14932 * C1344 + C16600 + C16600 + C154109 * C1354) *
                 C82771 +
             (C15282 + C15281) * C153930 + C15751 * C153923) *
                C153722 +
            ((C19171 + C19170) * C82771 + C19131 * C153930 + C15752 * C153923) *
                C73969) *
               C153783 * C153819) *
              C1255)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
              C14938 + C14938 + C153969 * C580) *
                 C153923 +
             (C19164 + C19165) * C153930 + C38471 * C82771) *
                C73969 +
            ((C14991 + C14992) * C153923 + C19130 * C153930 + C19138 * C82771) *
                C153722) *
               C549 -
           ((C39750 * C82771 + C20456 * C153930 + (C15549 + C15550) * C153923) *
                C153722 +
            (C41531 * C82771 + (C20483 + C20484) * C153930 +
             (C14934 * C557 + C15495 + C15495 + C153969 * C581 + C14932 * C556 +
              C15496 + C15496 + C154109 * C580) *
                 C153923) *
                C73969) *
               C550 +
           (((C14932 * C557 + C15497 + C15497 + C154109 * C581 +
              C14934 * C2272 + C15498 + C15498 + C153969 * C2282) *
                 C153923 +
             (C21293 + C21294) * C153930 + (C40563 + C40564) * C82771) *
                C73969 +
            ((C15551 + C15552) * C153923 + (C19478 + C19479) * C153930 +
             (C38782 + C38783) * C82771) *
                C153722) *
               C551) *
              C1251 +
          ((((C20484 + C20483) * C153923 + (C22275 + C22276) * C153930 +
             (C41544 + C41545) * C82771) *
                C73969 +
            (C20461 * C153923 + C39751 * C153930 + (C39760 + C39761) * C82771) *
                C153722) *
               C550 -
           ((C38472 * C82771 + C19132 * C153930 + C19133 * C153923) * C153722 +
            (C40246 * C82771 + (C19166 + C19167) * C153930 +
             (C19165 + C19164) * C153923) *
                C73969) *
               C549 -
           (((C14934 * C31684 + C40555 + C40555 + C153969 * C31686 +
              C14932 * C4810 + C40556 + C40556 + C154109 * C4816) *
                 C82771 +
             (C38783 + C38782) * C153930 + (C19479 + C19478) * C153923) *
                C153722 +
            ((C44997 + C44996) * C82771 + (C40564 + C40563) * C153930 +
             (C21294 + C21293) * C153923) *
                C73969) *
               C551) *
              C153819) *
         C153748) /
            (p * q * std::sqrt(p + q));
    d2ee[23] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C14932 * C136 + C14937 + C14937 + C154109 * C152 +
               C14934 * C556 + C14938 + C14938 + C153969 * C580) *
                  C153923 +
              (C19164 + C19165) * C153930 + C38471 * C82771) *
                 C73969 +
             ((C14991 + C14992) * C153923 + C19130 * C153930 +
              C19138 * C82771) *
                 C153722) *
                C154094 -
            ((C39750 * C82771 + C20456 * C153930 +
              (C15549 + C15550) * C153923) *
                 C153722 +
             (C41531 * C82771 + (C20483 + C20484) * C153930 +
              (C14934 * C557 + C15495 + C15495 + C153969 * C581 +
               C14932 * C556 + C15496 + C15496 + C154109 * C580) *
                  C153923) *
                 C73969) *
                C153847) *
               C1251 +
           ((((C20484 + C20483) * C153923 + (C22275 + C22276) * C153930 +
              (C41544 + C41545) * C82771) *
                 C73969 +
             (C20461 * C153923 + C39751 * C153930 +
              (C39760 + C39761) * C82771) *
                 C153722) *
                C153847 -
            ((C38472 * C82771 + C19132 * C153930 + C19133 * C153923) * C153722 +
             (C40246 * C82771 + (C19166 + C19167) * C153930 +
              (C19165 + C19164) * C153923) *
                 C73969) *
                C154094) *
               C153819) *
              C154085 +
          (((((C15550 + C15549) * C153923 + C20461 * C153930 +
              C39751 * C82771) *
                 C73969 +
             ((C15548 + C15547) * C153923 + C20466 * C153930 +
              (C20487 + C20488) * C82771) *
                 C153722) *
                C153847 -
            ((C19131 * C82771 + C15752 * C153930 +
              (C14994 + C14993) * C153923) *
                 C153722 +
             (C19132 * C82771 + C19133 * C153930 +
              (C14992 + C14991) * C153923) *
                 C73969) *
                C154094) *
               C1251 +
           (((C19130 * C153923 + C19138 * C153930 + C38473 * C82771) * C73969 +
             (C18830 * C153923 + C19143 * C153930 +
              (C19170 + C19171) * C82771) *
                 C153722) *
                C154094 -
            (((C14934 * C4809 + C22265 + C22265 + C153969 * C4815 +
               C14932 * C4170 + C22266 + C22266 + C154109 * C4178) *
                  C82771 +
              (C20488 + C20487) * C153930 + C20066 * C153923) *
                 C153722 +
             ((C39761 + C39760) * C82771 + C39750 * C153930 +
              C20456 * C153923) *
                 C73969) *
                C153847) *
               C153819) *
              C153754)) /
        (p * q * std::sqrt(p + q));
    d2ee[24] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
              C14938 + C14938 + C153969 * C580) *
                 C153923 +
             (C19164 + C19165) * C153930 + C38471 * C82771) *
                C73969 +
            ((C14991 + C14992) * C153923 + C19130 * C153930 + C19138 * C82771) *
                C153722) *
               C153783 * C1251 -
           ((C38472 * C82771 + C19132 * C153930 + C19133 * C153923) * C153722 +
            (C40246 * C82771 + (C19166 + C19167) * C153930 +
             (C19165 + C19164) * C153923) *
                C73969) *
               C153783 * C153819) *
              C1253 +
          (((C19130 * C153923 + C19138 * C153930 + C38473 * C82771) * C73969 +
            (C18830 * C153923 + C19143 * C153930 + (C19170 + C19171) * C82771) *
                C153722) *
               C153783 * C153819 -
           ((C19131 * C82771 + C15752 * C153930 + (C14994 + C14993) * C153923) *
                C153722 +
            (C19132 * C82771 + C19133 * C153930 + (C14992 + C14991) * C153923) *
                C73969) *
               C153783 * C1251) *
              C1254 +
          (((C15001 * C153923 + C18830 * C153930 + C19143 * C82771) * C73969 +
            (C15002 * C153923 + C19774 * C153930 + (C15281 + C15282) * C82771) *
                C153722) *
               C153783 * C1251 -
           (((C14934 * C4171 + C16599 + C16599 + C153969 * C4179 +
              C14932 * C1344 + C16600 + C16600 + C154109 * C1354) *
                 C82771 +
             (C15282 + C15281) * C153930 + C15751 * C153923) *
                C153722 +
            ((C19171 + C19170) * C82771 + C19131 * C153930 + C15752 * C153923) *
                C73969) *
               C153783 * C153819) *
              C1255)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
             C14938 + C14938 + C153969 * C580) *
                C153923 +
            (C19164 + C19165) * C153930 + C38471 * C82771) *
               C73969 +
           ((C14991 + C14992) * C153923 + C19130 * C153930 + C19138 * C82771) *
               C153722) *
              C153783 * C1338 -
          ((C38472 * C82771 + C19132 * C153930 + C19133 * C153923) * C153722 +
           (C40246 * C82771 + (C19166 + C19167) * C153930 +
            (C19165 + C19164) * C153923) *
               C73969) *
              C153783 * C1339 +
          ((C38471 * C153923 + C43614 * C153930 + (C40259 + C40260) * C82771) *
               C73969 +
           (C19138 * C153923 + C38473 * C153930 + (C38482 + C38483) * C82771) *
               C153722) *
              C153783 * C1340 -
          (((C14934 * C28773 + C40251 + C40251 + C153969 * C28777 +
             C14932 * C4575 + C40252 + C40252 + C154109 * C4581) *
                C82771 +
            (C38483 + C38482) * C153930 + C38472 * C153923) *
               C153722 +
           ((C44791 + C44790) * C82771 + C44779 * C153930 + C40246 * C153923) *
               C73969) *
              C153783 * C1341) *
         C153748) /
            (p * q * std::sqrt(p + q));
    d2ee[25] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C14932 * C136 + C14937 + C14937 + C154109 * C152 +
               C14934 * C556 + C14938 + C14938 + C153969 * C580) *
                  C153923 +
              (C19164 + C19165) * C153930 + C38471 * C82771) *
                 C73969 +
             ((C14991 + C14992) * C153923 + C19130 * C153930 +
              C19138 * C82771) *
                 C153722) *
                C2058 -
            ((C39750 * C82771 + C20456 * C153930 +
              (C15549 + C15550) * C153923) *
                 C153722 +
             (C41531 * C82771 + (C20483 + C20484) * C153930 +
              (C14934 * C557 + C15495 + C15495 + C153969 * C581 +
               C14932 * C556 + C15496 + C15496 + C154109 * C580) *
                  C153923) *
                 C73969) *
                C153847) *
               C154093 +
           ((((C20484 + C20483) * C153923 + (C22275 + C22276) * C153930 +
              (C41544 + C41545) * C82771) *
                 C73969 +
             (C20461 * C153923 + C39751 * C153930 +
              (C39760 + C39761) * C82771) *
                 C153722) *
                C153847 -
            ((C38472 * C82771 + C19132 * C153930 + C19133 * C153923) * C153722 +
             (C40246 * C82771 + (C19166 + C19167) * C153930 +
              (C19165 + C19164) * C153923) *
                 C73969) *
                C2058) *
               C153819) *
              C154085 +
          (((((C15550 + C15549) * C153923 + C20461 * C153930 +
              C39751 * C82771) *
                 C73969 +
             ((C15548 + C15547) * C153923 + C20466 * C153930 +
              (C20487 + C20488) * C82771) *
                 C153722) *
                C153847 -
            ((C19131 * C82771 + C15752 * C153930 +
              (C14994 + C14993) * C153923) *
                 C153722 +
             (C19132 * C82771 + C19133 * C153930 +
              (C14992 + C14991) * C153923) *
                 C73969) *
                C2058) *
               C154093 +
           (((C19130 * C153923 + C19138 * C153930 + C38473 * C82771) * C73969 +
             (C18830 * C153923 + C19143 * C153930 +
              (C19170 + C19171) * C82771) *
                 C153722) *
                C2058 -
            (((C14934 * C4809 + C22265 + C22265 + C153969 * C4815 +
               C14932 * C4170 + C22266 + C22266 + C154109 * C4178) *
                  C82771 +
              (C20488 + C20487) * C153930 + C20066 * C153923) *
                 C153722 +
             ((C39761 + C39760) * C82771 + C39750 * C153930 +
              C20456 * C153923) *
                 C73969) *
                C153847) *
               C153819) *
              C153754)) /
        (p * q * std::sqrt(p + q));
    d2ee[26] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
              C14938 + C14938 + C153969 * C580) *
                 C153923 +
             (C19164 + C19165) * C153930 + C38471 * C82771) *
                C73969 +
            ((C14991 + C14992) * C153923 + C19130 * C153930 + C19138 * C82771) *
                C153722) *
               C154166 -
           ((C39750 * C82771 + C20456 * C153930 + (C15549 + C15550) * C153923) *
                C153722 +
            (C41531 * C82771 + (C20483 + C20484) * C153930 +
             (C14934 * C557 + C15495 + C15495 + C153969 * C581 + C14932 * C556 +
              C15496 + C15496 + C154109 * C580) *
                 C153923) *
                C73969) *
               C154167 +
           (((C14932 * C557 + C15497 + C15497 + C154109 * C581 +
              C14934 * C2272 + C15498 + C15498 + C153969 * C2282) *
                 C153923 +
             (C21293 + C21294) * C153930 + (C40563 + C40564) * C82771) *
                C73969 +
            ((C15551 + C15552) * C153923 + (C19478 + C19479) * C153930 +
             (C38782 + C38783) * C82771) *
                C153722) *
               C2574) *
              C154093 +
          ((((C20484 + C20483) * C153923 + (C22275 + C22276) * C153930 +
             (C41544 + C41545) * C82771) *
                C73969 +
            (C20461 * C153923 + C39751 * C153930 + (C39760 + C39761) * C82771) *
                C153722) *
               C154167 -
           ((C38472 * C82771 + C19132 * C153930 + C19133 * C153923) * C153722 +
            (C40246 * C82771 + (C19166 + C19167) * C153930 +
             (C19165 + C19164) * C153923) *
                C73969) *
               C154166 -
           (((C14934 * C31684 + C40555 + C40555 + C153969 * C31686 +
              C14932 * C4810 + C40556 + C40556 + C154109 * C4816) *
                 C82771 +
             (C38783 + C38782) * C153930 + (C19479 + C19478) * C153923) *
                C153722 +
            ((C44997 + C44996) * C82771 + (C40564 + C40563) * C153930 +
             (C21294 + C21293) * C153923) *
                C73969) *
               C2574) *
              C153819) *
         C153748) /
        (p * q * std::sqrt(p + q));
    d2ee[27] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
              C14938 + C14938 + C153969 * C580) *
                 C153923 +
             (C19164 + C19165) * C153930 + C38471 * C82771) *
                C73969 +
            ((C14991 + C14992) * C153923 + C19130 * C153930 + C19138 * C82771) *
                C153722) *
               C2058 -
           ((C39750 * C82771 + C20456 * C153930 + (C15549 + C15550) * C153923) *
                C153722 +
            (C41531 * C82771 + (C20483 + C20484) * C153930 +
             (C14934 * C557 + C15495 + C15495 + C153969 * C581 + C14932 * C556 +
              C15496 + C15496 + C154109 * C580) *
                 C153923) *
                C73969) *
               C153847) *
              C326 +
          ((((C20484 + C20483) * C153923 + (C22275 + C22276) * C153930 +
             (C41544 + C41545) * C82771) *
                C73969 +
            (C20461 * C153923 + C39751 * C153930 + (C39760 + C39761) * C82771) *
                C153722) *
               C153847 -
           ((C38472 * C82771 + C19132 * C153930 + C19133 * C153923) * C153722 +
            (C40246 * C82771 + (C19166 + C19167) * C153930 +
             (C19165 + C19164) * C153923) *
                C73969) *
               C2058) *
              C327 +
          (((C38471 * C153923 + C43614 * C153930 + (C40259 + C40260) * C82771) *
                C73969 +
            (C19138 * C153923 + C38473 * C153930 + (C38482 + C38483) * C82771) *
                C153722) *
               C2058 -
           (((C14934 * C28359 + C41536 + C41536 + C153969 * C28363 +
              C14932 * C5558 + C41537 + C41537 + C154109 * C5564) *
                 C82771 +
             (C39761 + C39760) * C153930 + C39750 * C153923) *
                C153722 +
            ((C45656 + C45655) * C82771 + C45644 * C153930 + C41531 * C153923) *
                C73969) *
               C153847) *
              C328) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
              C14938 + C14938 + C153969 * C580) *
                 C153923 +
             (C19164 + C19165) * C153930 + C38471 * C82771) *
                C73969 +
            ((C14991 + C14992) * C153923 + C19130 * C153930 + C19138 * C82771) *
                C153722) *
               C2058 -
           ((C39750 * C82771 + C20456 * C153930 + (C15549 + C15550) * C153923) *
                C153722 +
            (C41531 * C82771 + (C20483 + C20484) * C153930 +
             (C14934 * C557 + C15495 + C15495 + C153969 * C581 + C14932 * C556 +
              C15496 + C15496 + C154109 * C580) *
                 C153923) *
                C73969) *
               C153847) *
              C153767 * C1253 +
          ((((C15550 + C15549) * C153923 + C20461 * C153930 + C39751 * C82771) *
                C73969 +
            ((C15548 + C15547) * C153923 + C20466 * C153930 +
             (C20487 + C20488) * C82771) *
                C153722) *
               C153847 -
           ((C19131 * C82771 + C15752 * C153930 + (C14994 + C14993) * C153923) *
                C153722 +
            (C19132 * C82771 + C19133 * C153930 + (C14992 + C14991) * C153923) *
                C73969) *
               C2058) *
              C153767 * C1254 +
          (((C15001 * C153923 + C18830 * C153930 + C19143 * C82771) * C73969 +
            (C15002 * C153923 + C19774 * C153930 + (C15281 + C15282) * C82771) *
                C153722) *
               C2058 -
           (((C14934 * C3372 + C17455 + C17455 + C153969 * C3380 +
              C14932 * C1917 + C17456 + C17456 + C154109 * C1927) *
                 C82771 +
             (C16274 + C16273) * C153930 + C15961 * C153923) *
                C153722 +
            ((C20488 + C20487) * C82771 + C20066 * C153930 + C15962 * C153923) *
                C73969) *
               C153847) *
              C153767 * C1255)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
             C14938 + C14938 + C153969 * C580) *
                C153923 +
            (C19164 + C19165) * C153930 + C38471 * C82771) *
               C73969 +
           ((C14991 + C14992) * C153923 + C19130 * C153930 + C19138 * C82771) *
               C153722) *
              C2264 -
          ((C39750 * C82771 + C20456 * C153930 + (C15549 + C15550) * C153923) *
               C153722 +
           (C41531 * C82771 + (C20483 + C20484) * C153930 +
            (C14934 * C557 + C15495 + C15495 + C153969 * C581 + C14932 * C556 +
             C15496 + C15496 + C154109 * C580) *
                C153923) *
               C73969) *
              C2265 +
          (((C14932 * C557 + C15497 + C15497 + C154109 * C581 + C14934 * C2272 +
             C15498 + C15498 + C153969 * C2282) *
                C153923 +
            (C21293 + C21294) * C153930 + (C40563 + C40564) * C82771) *
               C73969 +
           ((C15551 + C15552) * C153923 + (C19478 + C19479) * C153930 +
            (C38782 + C38783) * C82771) *
               C153722) *
              C2266 -
          (((C14934 * C30947 + C42320 + C42320 + C153969 * C30951 +
             C14932 * C6158 + C42321 + C42321 + C154109 * C6170) *
                C82771 +
            (C14934 * C9166 + C23053 + C23053 + C153969 * C9172 +
             C14932 * C6159 + C23054 + C23054 + C154109 * C6171) *
                C153930 +
            (C14934 * C7666 + C17985 + C17985 + C153969 * C7674 +
             C14932 * C2271 + C17986 + C17986 + C154109 * C2281) *
                C153923) *
               C153722 +
           ((C14934 * C30946 + C42322 + C42322 + C153969 * C30950 +
             C14932 * C6160 + C42323 + C42323 + C154109 * C6172) *
                C82771 +
            (C14934 * C9167 + C23055 + C23055 + C153969 * C9173 +
             C14932 * C6161 + C23056 + C23056 + C154109 * C6173) *
                C153930 +
            (C14934 * C7665 + C17987 + C17987 + C153969 * C7673 +
             C14932 * C2272 + C17988 + C17988 + C154109 * C2282) *
                C153923) *
               C73969) *
              C2267) *
         C153767 * C153748) /
            (p * q * std::sqrt(p + q));
    d2ee[28] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
              C14938 + C14938 + C153969 * C580) *
                 C153923 +
             (C19164 + C19165) * C153930 + C38471 * C82771) *
                C73969 +
            ((C14991 + C14992) * C153923 + C19130 * C153930 + C19138 * C82771) *
                C153722) *
               C154166 -
           ((C39750 * C82771 + C20456 * C153930 + (C15549 + C15550) * C153923) *
                C153722 +
            (C41531 * C82771 + (C20483 + C20484) * C153930 +
             (C14934 * C557 + C15495 + C15495 + C153969 * C581 + C14932 * C556 +
              C15496 + C15496 + C154109 * C580) *
                 C153923) *
                C73969) *
               C154167 +
           (((C14932 * C557 + C15497 + C15497 + C154109 * C581 +
              C14934 * C2272 + C15498 + C15498 + C153969 * C2282) *
                 C153923 +
             (C21293 + C21294) * C153930 + (C40563 + C40564) * C82771) *
                C73969 +
            ((C15551 + C15552) * C153923 + (C19478 + C19479) * C153930 +
             (C38782 + C38783) * C82771) *
                C153722) *
               C2574) *
              C153767 * C154085 +
          ((((C15550 + C15549) * C153923 + C20461 * C153930 + C39751 * C82771) *
                C73969 +
            ((C15548 + C15547) * C153923 + C20466 * C153930 +
             (C20487 + C20488) * C82771) *
                C153722) *
               C154167 -
           ((C19131 * C82771 + C15752 * C153930 + (C14994 + C14993) * C153923) *
                C153722 +
            (C19132 * C82771 + C19133 * C153930 + (C14992 + C14991) * C153923) *
                C73969) *
               C154166 -
           (((C14934 * C6156 + C21283 + C21283 + C153969 * C6168 +
              C14932 * C3371 + C21284 + C21284 + C154109 * C3379) *
                 C82771 +
             (C19481 + C19480) * C153930 + (C15554 + C15553) * C153923) *
                C153722 +
            ((C38783 + C38782) * C82771 + (C19479 + C19478) * C153930 +
             (C15552 + C15551) * C153923) *
                C73969) *
               C2574) *
              C153767 * C153754)) /
        (p * q * std::sqrt(p + q));
    d2ee[29] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
              C14938 + C14938 + C153969 * C580) *
                 C153923 +
             (C19164 + C19165) * C153930 + C38471 * C82771) *
                C73969 +
            ((C14991 + C14992) * C153923 + C19130 * C153930 + C19138 * C82771) *
                C153722) *
               C2058 -
           ((C39750 * C82771 + C20456 * C153930 + (C15549 + C15550) * C153923) *
                C153722 +
            (C41531 * C82771 + (C20483 + C20484) * C153930 +
             (C14934 * C557 + C15495 + C15495 + C153969 * C581 + C14932 * C556 +
              C15496 + C15496 + C154109 * C580) *
                 C153923) *
                C73969) *
               C153847) *
              C153767 * C1253 +
          ((((C15550 + C15549) * C153923 + C20461 * C153930 + C39751 * C82771) *
                C73969 +
            ((C15548 + C15547) * C153923 + C20466 * C153930 +
             (C20487 + C20488) * C82771) *
                C153722) *
               C153847 -
           ((C19131 * C82771 + C15752 * C153930 + (C14994 + C14993) * C153923) *
                C153722 +
            (C19132 * C82771 + C19133 * C153930 + (C14992 + C14991) * C153923) *
                C73969) *
               C2058) *
              C153767 * C1254 +
          (((C15001 * C153923 + C18830 * C153930 + C19143 * C82771) * C73969 +
            (C15002 * C153923 + C19774 * C153930 + (C15281 + C15282) * C82771) *
                C153722) *
               C2058 -
           (((C14934 * C3372 + C17455 + C17455 + C153969 * C3380 +
              C14932 * C1917 + C17456 + C17456 + C154109 * C1927) *
                 C82771 +
             (C16274 + C16273) * C153930 + C15961 * C153923) *
                C153722 +
            ((C20488 + C20487) * C82771 + C20066 * C153930 + C15962 * C153923) *
                C73969) *
               C153847) *
              C153767 * C1255)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
              C14938 + C14938 + C153969 * C580) *
                 C153923 +
             (C19164 + C19165) * C153930 + C38471 * C82771) *
                C73969 +
            ((C14991 + C14992) * C153923 + C19130 * C153930 + C19138 * C82771) *
                C153722) *
               C2058 -
           ((C39750 * C82771 + C20456 * C153930 + (C15549 + C15550) * C153923) *
                C153722 +
            (C41531 * C82771 + (C20483 + C20484) * C153930 +
             (C14934 * C557 + C15495 + C15495 + C153969 * C581 + C14932 * C556 +
              C15496 + C15496 + C154109 * C580) *
                 C153923) *
                C73969) *
               C153847) *
              C326 +
          ((((C20484 + C20483) * C153923 + (C22275 + C22276) * C153930 +
             (C41544 + C41545) * C82771) *
                C73969 +
            (C20461 * C153923 + C39751 * C153930 + (C39760 + C39761) * C82771) *
                C153722) *
               C153847 -
           ((C38472 * C82771 + C19132 * C153930 + C19133 * C153923) * C153722 +
            (C40246 * C82771 + (C19166 + C19167) * C153930 +
             (C19165 + C19164) * C153923) *
                C73969) *
               C2058) *
              C327 +
          (((C38471 * C153923 + C43614 * C153930 + (C40259 + C40260) * C82771) *
                C73969 +
            (C19138 * C153923 + C38473 * C153930 + (C38482 + C38483) * C82771) *
                C153722) *
               C2058 -
           (((C14934 * C28359 + C41536 + C41536 + C153969 * C28363 +
              C14932 * C5558 + C41537 + C41537 + C154109 * C5564) *
                 C82771 +
             (C39761 + C39760) * C153930 + C39750 * C153923) *
                C153722 +
            ((C45656 + C45655) * C82771 + C45644 * C153930 + C41531 * C153923) *
                C73969) *
               C153847) *
              C328) *
         C153748) /
            (p * q * std::sqrt(p + q));
    d2ee[30] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C154188 +
             C3138 * C154184 + C3139 * C154174 + C3142 * C154116) *
                C73969 +
            (C73972 + C73973 + C73974 + C73975) * C153722) *
               C153783 * C154093 -
           ((C74178 + C74179 + C74180 + C74181) * C153722 +
            (C4591 * C154116 + C3142 * C154174 + C3139 * C154184 +
             C3138 * C154188) *
                C73969) *
               C153783 * C153819) *
              C154162 +
          (((C74181 + C74180 + C74179 + C74178) * C73969 +
            (C74582 + C74583 + C74584 + C74585) * C153722) *
               C153783 * C153819 -
           ((C73976 + C73977 + C73978 + C73979) * C153722 +
            (C73975 + C73974 + C73973 + C73972) * C73969) *
               C153783 * C154093) *
              C154163 +
          (((C73979 + C73978 + C73977 + C73976) * C73969 +
            (C73980 + C73981 + C73982 + C73983) * C153722) *
               C153783 * C154093 -
           (((C134 * C3086 + C3121 + C3121 + C153882 * C3094) * C154116 +
             C3145 * C154174 + C418 * C154184 + C413 * C154188) *
                C153722 +
            (C74585 + C74584 + C74583 + C74582) * C73969) *
               C153783 * C153819) *
              C774)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C70415 +
             C3138 * C153927) *
                C154187 +
            (C70422 + C70423) * C154180 + C70432 * C154161 + C70433 * C154108) *
               C153783 * C154093 -
           (C71042 * C154108 + C71043 * C154161 + (C70634 + C70635) * C154180 +
            (C3139 * C153927 + C3138 * C70415) * C154187) *
               C153783 * C153819) *
              C154162 +
          (((C70635 + C70634) * C154187 + (C70633 + C70632) * C154180 +
            (C70631 + C70630) * C154161 + (C71044 + C71045) * C154108) *
               C153783 * C153819 -
           (C70434 * C154108 + C70435 * C154161 + (C70425 + C70424) * C154180 +
            (C70423 + C70422) * C154187) *
               C153783 * C154093) *
              C154163 +
          ((C70432 * C154187 + C70433 * C154180 + (C70429 + C70428) * C154161 +
            (C70430 + C70431) * C154108) *
               C153783 * C154093 -
           (((C134 * C342 + C395 + C395 + C153882 * C366) * C153927 +
             C784 * C70415) *
                C154108 +
            (C71045 + C71044) * C154161 + C71042 * C154180 + C71043 * C154187) *
               C153783 * C153819) *
              C774)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C7055 * C136 + C7062 + C7062 + C154182 * C152 + C7057 * C556 +
              C7063 + C7063 + C154171 * C580 + C7059 * C557 + C7064 + C7064 +
              C154146 * C581) *
                 C70415 +
             (C30715 + C30716 + C30717) * C153927) *
                C73969 +
            ((C7128 + C7129 + C7130) * C70415 + C77861 * C153927) * C153722) *
               C153783 * C154093 -
           ((C30702 * C153927 + C77862 * C70415) * C153722 +
            ((C30720 + C30719 + C30718) * C153927 +
             (C30717 + C30716 + C30715) * C70415) *
                C73969) *
               C153783 * C153819) *
              C154162 +
          (((C77861 * C70415 + C77863 * C153927) * C73969 +
            (C78460 * C70415 + (C7445 + C7446 + C7447) * C153927) * C153722) *
               C153783 * C153819 -
           ((C7990 * C153927 + (C7133 + C7132 + C7131) * C70415) * C153722 +
            (C77862 * C153927 + (C7130 + C7129 + C7128) * C70415) * C73969) *
               C153783 * C154093) *
              C154163 +
          (((C7142 * C70415 + C78460 * C153927) * C73969 +
            ((C7136 + C7135 + C7134) * C70415 +
             (C7998 + C7999 + C8000) * C153927) *
                C153722) *
               C153783 * C154093 -
           (((C7059 * C3372 + C7409 + C7409 + C154146 * C3380 + C7057 * C1917 +
              C7410 + C7410 + C154171 * C1927 + C7055 * C339 + C7411 + C7411 +
              C154182 * C363) *
                 C153927 +
             (C8000 + C7999 + C7998) * C70415) *
                C153722 +
            ((C7447 + C7446 + C7445) * C153927 + C7990 * C70415) * C73969) *
               C153783 * C153819) *
              C774)) /
            (p * q * std::sqrt(p + q));
    d2ee[31] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C153882 * C152) * C154188 +
              C3138 * C154184 + C3139 * C154174 + C3142 * C154116) *
                 C73969 +
             (C73972 + C73973 + C73974 + C73975) * C153722) *
                C154094 -
            ((C74380 + C74381 + C74382 + C74383) * C153722 +
             (C5574 * C154116 + C4205 * C154174 + C4206 * C154184 +
              (C134 * C556 + C601 + C601 + C153882 * C580) * C154188) *
                 C73969) *
                C153847) *
               C154093 +
           (((C4206 * C154188 + C4205 * C154184 + C5574 * C154174 +
              C28789 * C154116) *
                 C73969 +
             (C75042 + C75043 + C75044 + C75045) * C153722) *
                C153847 -
            ((C74178 + C74179 + C74180 + C74181) * C153722 +
             (C4591 * C154116 + C3142 * C154174 + C3139 * C154184 +
              C3138 * C154188) *
                 C73969) *
                C154094) *
               C153819) *
              C329 +
          ((((C74383 + C74382 + C74381 + C74380) * C73969 +
             (C74780 + C74781 + C74782 + C74783) * C153722) *
                C153847 -
            ((C73976 + C73977 + C73978 + C73979) * C153722 +
             (C73975 + C73974 + C73973 + C73972) * C73969) *
                C154094) *
               C154093 +
           (((C74181 + C74180 + C74179 + C74178) * C73969 +
             (C74582 + C74583 + C74584 + C74585) * C153722) *
                C154094 -
            (((C134 * C5557 + C5569 + C5569 + C153882 * C5563) * C154116 +
              C4208 * C154174 + C3416 * C154184 + C1123 * C154188) *
                 C153722 +
             (C75045 + C75044 + C75043 + C75042) * C73969) *
                C153847) *
               C153819) *
              C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C153882 * C152) * C70415 +
              C3138 * C153927) *
                 C154187 +
             (C70422 + C70423) * C154180 + C70432 * C154161 +
             C70433 * C154108) *
                C154094 -
            (C71240 * C154108 + C71241 * C154161 + (C70840 + C70841) * C154180 +
             (C4206 * C153927 +
              (C134 * C556 + C601 + C601 + C153882 * C580) * C70415) *
                 C154187) *
                C153847) *
               C154093 +
           (((C4206 * C70415 + C4205 * C153927) * C154187 +
             (C71502 + C71503) * C154180 + (C71504 + C71505) * C154161 +
             (C71506 + C71507) * C154108) *
                C153847 -
            (C71042 * C154108 + C71043 * C154161 + (C70634 + C70635) * C154180 +
             (C3139 * C153927 + C3138 * C70415) * C154187) *
                C154094) *
               C153819) *
              C329 +
          ((((C70841 + C70840) * C154187 + (C70839 + C70838) * C154180 +
             (C70837 + C70836) * C154161 + (C71242 + C71243) * C154108) *
                C153847 -
            (C70434 * C154108 + C70435 * C154161 + (C70425 + C70424) * C154180 +
             (C70423 + C70422) * C154187) *
                C154094) *
               C154093 +
           (((C70635 + C70634) * C154187 + (C70633 + C70632) * C154180 +
             (C70631 + C70630) * C154161 + (C71044 + C71045) * C154108) *
                C154094 -
            (((C134 * C1916 + C1932 + C1932 + C153882 * C1926) * C153927 +
              C1125 * C70415) *
                 C154108 +
             (C71507 + C71506) * C154161 + (C71505 + C71504) * C154180 +
             (C71503 + C71502) * C154187) *
                C153847) *
               C153819) *
              C153754)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C7055 * C136 + C7062 + C7062 + C154182 * C152 + C7057 * C556 +
               C7063 + C7063 + C154171 * C580 + C7059 * C557 + C7064 + C7064 +
               C154146 * C581) *
                  C70415 +
              (C30715 + C30716 + C30717) * C153927) *
                 C73969 +
             ((C7128 + C7129 + C7130) * C70415 + C77861 * C153927) * C153722) *
                C154094 -
            ((C79139 * C153927 + (C7753 + C7754 + C7755) * C70415) * C153722 +
             ((C31733 + C31734 + C31735) * C153927 +
              (C7059 * C2272 + C7696 + C7696 + C154146 * C2282 + C7057 * C557 +
               C7697 + C7697 + C154171 * C581 + C7055 * C556 + C7698 + C7698 +
               C154182 * C580) *
                  C70415) *
                 C73969) *
                C153847) *
               C154093 +
           ((((C31735 + C31734 + C31733) * C70415 +
              (C31732 + C31731 + C31730) * C153927) *
                 C73969 +
             (C79140 * C70415 + (C31736 + C31737 + C31738) * C153927) *
                 C153722) *
                C153847 -
            ((C30702 * C153927 + C77862 * C70415) * C153722 +
             ((C30720 + C30719 + C30718) * C153927 +
              (C30717 + C30716 + C30715) * C70415) *
                 C73969) *
                C154094) *
               C153819) *
              C329 +
          (((((C7755 + C7754 + C7753) * C70415 + C79140 * C153927) * C73969 +
             ((C7752 + C7751 + C7750) * C70415 +
              (C8572 + C8573 + C8574) * C153927) *
                 C153722) *
                C153847 -
            ((C7990 * C153927 + (C7133 + C7132 + C7131) * C70415) * C153722 +
             (C77862 * C153927 + (C7130 + C7129 + C7128) * C70415) * C73969) *
                C154094) *
               C154093 +
           (((C77861 * C70415 + C77863 * C153927) * C73969 +
             (C78460 * C70415 + (C7445 + C7446 + C7447) * C153927) * C153722) *
                C154094 -
            (((C7059 * C6156 + C9910 + C9910 + C154146 * C6168 + C7057 * C3371 +
               C9911 + C9911 + C154171 * C3379 + C7055 * C1918 + C9912 + C9912 +
               C154182 * C1928) *
                  C153927 +
              (C8574 + C8573 + C8572) * C70415) *
                 C153722 +
             ((C31738 + C31737 + C31736) * C153927 + C79139 * C70415) *
                 C73969) *
                C153847) *
               C153819) *
              C153754)) /
            (p * q * std::sqrt(p + q));
    d2ee[32] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C136 + C161 + C161 + C153882 * C152) * C70415 +
                C3138 * C153927) *
                   C154187 +
               (C70422 + C70423) * C154180 + C70432 * C154161 +
               C70433 * C154108) *
                  C153783 * C153767 * C130 -
              (C70434 * C154108 + C70435 * C154161 +
               (C70425 + C70424) * C154180 + (C70423 + C70422) * C154187) *
                  C153783 * C153767 * C131 +
              (C70432 * C154187 + C70433 * C154180 +
               (C70429 + C70428) * C154161 + (C70430 + C70431) * C154108) *
                  C153783 * C153767 * C132 -
              (((C134 * C775 + C781 + C781 + C153882 * C777) * C153927 +
                C198 * C70415) *
                   C154108 +
               (C70431 + C70430) * C154161 + C70434 * C154180 +
               C70435 * C154187) *
                  C153783 * C153767 * C133) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C134 * C136 + C161 + C161 + C153882 * C152) * C70415 +
                 C3138 * C153927) *
                    C154187 +
                (C70422 + C70423) * C154180 + C70432 * C154161 +
                C70433 * C154108) *
                   C153783 * C326 -
               ((C70630 + C70631) * C154108 + (C70632 + C70633) * C154161 +
                (C70634 + C70635) * C154180 +
                (C3139 * C153927 + C3138 * C70415) * C154187) *
                   C153783 * C327 +
               ((C3139 * C70415 + C3142 * C153927) * C154187 +
                (C70636 + C70637) * C154180 + (C70638 + C70639) * C154161 +
                (C70640 + C70641) * C154108) *
                   C153783 * C328) *
                  C329 +
              (((C70635 + C70634) * C154187 + (C70633 + C70632) * C154180 +
                (C70631 + C70630) * C154161 +
                (C412 * C70415 + C419 * C153927) * C154108) *
                   C153783 * C327 -
               (C70434 * C154108 + C70435 * C154161 +
                (C70425 + C70424) * C154180 + (C70423 + C70422) * C154187) *
                   C153783 * C326 -
               (((C134 * C1343 + C1359 + C1359 + C153882 * C1353) * C153927 +
                 C419 * C70415) *
                    C154108 +
                (C70641 + C70640) * C154161 + (C70639 + C70638) * C154180 +
                (C70637 + C70636) * C154187) *
                   C153783 * C328) *
                  C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C70415 +
             C3138 * C153927) *
                C154187 +
            (C70422 + C70423) * C154180 + C70432 * C154161 + C70433 * C154108) *
               C549 -
           ((C70836 + C70837) * C154108 + (C70838 + C70839) * C154161 +
            (C70840 + C70841) * C154180 +
            (C4206 * C153927 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C70415) *
                C154187) *
               C550 +
           (((C134 * C557 + C602 + C602 + C153882 * C581) * C70415 +
             C4830 * C153927) *
                C154187 +
            (C70842 + C70843) * C154180 + (C70844 + C70845) * C154161 +
            (C70846 + C70847) * C154108) *
               C551) *
              C153767 * C329 +
          (((C70841 + C70840) * C154187 + (C70839 + C70838) * C154180 +
            (C70837 + C70836) * C154161 +
            (C633 * C70415 + C1125 * C153927) * C154108) *
               C550 -
           (C70434 * C154108 + C70435 * C154161 + (C70425 + C70424) * C154180 +
            (C70423 + C70422) * C154187) *
               C549 -
           (((C134 * C1485 + C1501 + C1501 + C153882 * C1495) * C153927 +
             C640 * C70415) *
                C154108 +
            (C70847 + C70846) * C154161 + (C70845 + C70844) * C154180 +
            (C70843 + C70842) * C154187) *
               C551) *
              C153767 * C153754)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C154188 +
            C3138 * C154184 + C3139 * C154174 + C3142 * C154116) *
               C73969 +
           (C73972 + C73973 + C73974 + C73975) * C153722) *
              C153783 * C153767 * C130 -
          ((C73976 + C73977 + C73978 + C73979) * C153722 +
           (C73975 + C73974 + C73973 + C73972) * C73969) *
              C153783 * C153767 * C131 +
          ((C73979 + C73978 + C73977 + C73976) * C73969 +
           (C73980 + C73981 + C73982 + C73983) * C153722) *
              C153783 * C153767 * C132 -
          (((C134 * C1343 + C1359 + C1359 + C153882 * C1353) * C154116 +
            C419 * C154174 + C412 * C154184 + C196 * C154188) *
               C153722 +
           (C73983 + C73982 + C73981 + C73980) * C73969) *
              C153783 * C153767 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C154188 +
             C3138 * C154184 + C3139 * C154174 + C3142 * C154116) *
                C73969 +
            (C73972 + C73973 + C73974 + C73975) * C153722) *
               C153783 * C326 -
           ((C74178 + C74179 + C74180 + C74181) * C153722 +
            (C4591 * C154116 + C3142 * C154174 + C3139 * C154184 +
             C3138 * C154188) *
                C73969) *
               C153783 * C327 +
           ((C3139 * C154188 + C3142 * C154184 + C4591 * C154174 +
             C28235 * C154116) *
                C73969 +
            (C74182 + C74183 + C74184 + C74185) * C153722) *
               C153783 * C328) *
              C329 +
          (((C74181 + C74180 + C74179 + C74178) * C73969 +
            (C414 * C154188 + C417 * C154184 + C3140 * C154174 +
             C3144 * C154116) *
                C153722) *
               C153783 * C327 -
           ((C73976 + C73977 + C73978 + C73979) * C153722 +
            (C73975 + C73974 + C73973 + C73972) * C73969) *
               C153783 * C326 -
           (((C134 * C4574 + C4586 + C4586 + C153882 * C4580) * C154116 +
             C3144 * C154174 + C3140 * C154184 + C417 * C154188) *
                C153722 +
            (C74185 + C74184 + C74183 + C74182) * C73969) *
               C153783 * C328) *
              C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C154188 +
             C3138 * C154184 + C3139 * C154174 + C3142 * C154116) *
                C73969 +
            (C73972 + C73973 + C73974 + C73975) * C153722) *
               C549 -
           ((C74380 + C74381 + C74382 + C74383) * C153722 +
            (C5574 * C154116 + C4205 * C154174 + C4206 * C154184 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C154188) *
                C73969) *
               C550 +
           (((C134 * C557 + C602 + C602 + C153882 * C581) * C154188 +
             C4830 * C154184 + C4831 * C154174 + C29138 * C154116) *
                C73969 +
            (C74384 + C74385 + C74386 + C74387) * C153722) *
               C551) *
              C153767 * C329 +
          (((C74383 + C74382 + C74381 + C74380) * C73969 +
            (C635 * C154188 + C1123 * C154184 + C3416 * C154174 +
             C4208 * C154116) *
                C153722) *
               C550 -
           ((C73976 + C73977 + C73978 + C73979) * C153722 +
            (C73975 + C73974 + C73973 + C73972) * C73969) *
               C549 -
           (((C134 * C4809 + C4823 + C4823 + C153882 * C4815) * C154116 +
             C3421 * C154174 + C3420 * C154184 + C638 * C154188) *
                C153722 +
            (C74387 + C74386 + C74385 + C74384) * C73969) *
               C551) *
              C153767 * C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C7055 * C136 + C7062 + C7062 + C154182 * C152 + C7057 * C556 +
             C7063 + C7063 + C154171 * C580 + C7059 * C557 + C7064 + C7064 +
             C154146 * C581) *
                C70415 +
            (C30715 + C30716 + C30717) * C153927) *
               C73969 +
           ((C7128 + C7129 + C7130) * C70415 +
            (C7441 + C7440 + C7439) * C153927) *
               C153722) *
              C153783 * C153767 * C130 -
          ((C7990 * C153927 + (C7133 + C7132 + C7131) * C70415) * C153722 +
           ((C7439 + C7440 + C7441) * C153927 +
            (C7130 + C7129 + C7128) * C70415) *
               C73969) *
              C153783 * C153767 * C131 +
          ((C7142 * C70415 + (C7438 + C7437 + C7436) * C153927) * C73969 +
           ((C7136 + C7135 + C7134) * C70415 +
            (C7998 + C7999 + C8000) * C153927) *
               C153722) *
              C153783 * C153767 * C132 -
          (((C7059 * C1485 + C7987 + C7987 + C154146 * C1495 + C7057 * C1085 +
             C7988 + C7988 + C154171 * C1097 + C7055 * C331 + C7989 + C7989 +
             C154182 * C355) *
                C153927 +
            (C7139 + C7138 + C7137) * C70415) *
               C153722 +
           ((C8000 + C7999 + C7998) * C153927 + C7143 * C70415) * C73969) *
              C153783 * C153767 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C7055 * C136 + C7062 + C7062 + C154182 * C152 + C7057 * C556 +
              C7063 + C7063 + C154171 * C580 + C7059 * C557 + C7064 + C7064 +
              C154146 * C581) *
                 C70415 +
             (C30715 + C30716 + C30717) * C153927) *
                C73969 +
            ((C7128 + C7129 + C7130) * C70415 + C77861 * C153927) * C153722) *
               C153783 * C326 -
           ((C30702 * C153927 + C77862 * C70415) * C153722 +
            ((C30720 + C30719 + C30718) * C153927 +
             (C30717 + C30716 + C30715) * C70415) *
                C73969) *
               C153783 * C327 +
           ((C30728 * C70415 + (C30723 + C30722 + C30721) * C153927) * C73969 +
            (C77863 * C70415 + (C30724 + C30725 + C30726) * C153927) *
                C153722) *
               C153783 * C328) *
              C329 +
          (((C77861 * C70415 + C77863 * C153927) * C73969 +
            ((C7438 + C7437 + C7436) * C70415 +
             (C7445 + C7446 + C7447) * C153927) *
                C153722) *
               C153783 * C327 -
           ((C7990 * C153927 + (C7133 + C7132 + C7131) * C70415) * C153722 +
            (C77862 * C153927 + (C7130 + C7129 + C7128) * C70415) * C73969) *
               C153783 * C326 -
           (((C7059 * C4809 + C8939 + C8939 + C154146 * C4815 + C7057 * C4170 +
              C8940 + C8940 + C154171 * C4178 + C7055 * C1345 + C8941 + C8941 +
              C154182 * C1355) *
                 C153927 +
             (C7447 + C7446 + C7445) * C70415) *
                C153722 +
            ((C30726 + C30725 + C30724) * C153927 + C30702 * C70415) * C73969) *
               C153783 * C328) *
              C153754)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C7055 * C136 + C7062 + C7062 + C154182 * C152 + C7057 * C556 +
              C7063 + C7063 + C154171 * C580 + C7059 * C557 + C7064 + C7064 +
              C154146 * C581) *
                 C70415 +
             (C30715 + C30716 + C30717) * C153927) *
                C73969 +
            ((C7128 + C7129 + C7130) * C70415 + C77861 * C153927) * C153722) *
               C549 -
           (((C8571 + C8570 + C8569) * C153927 +
             (C7753 + C7754 + C7755) * C70415) *
                C153722 +
            ((C31733 + C31734 + C31735) * C153927 +
             (C7059 * C2272 + C7696 + C7696 + C154146 * C2282 + C7057 * C557 +
              C7697 + C7697 + C154171 * C581 + C7055 * C556 + C7698 + C7698 +
              C154182 * C580) *
                 C70415) *
                C73969) *
               C550 +
           (((C7055 * C557 + C7699 + C7699 + C154182 * C581 + C7057 * C2272 +
              C7700 + C7700 + C154171 * C2282 + C7059 * C7665 + C7701 + C7701 +
              C154146 * C7673) *
                 C70415 +
             (C32371 + C32372 + C32373) * C153927) *
                C73969 +
            ((C7756 + C7757 + C7758) * C70415 +
             (C78166 + C78167 + C78168) * C153927) *
                C153722) *
               C551) *
              C153767 * C329 +
          ((((C7755 + C7754 + C7753) * C70415 +
             (C8569 + C8570 + C8571) * C153927) *
                C73969 +
            ((C7752 + C7751 + C7750) * C70415 +
             (C8572 + C8573 + C8574) * C153927) *
                C153722) *
               C550 -
           ((C7990 * C153927 + (C7133 + C7132 + C7131) * C70415) * C153722 +
            (C77862 * C153927 + (C7130 + C7129 + C7128) * C70415) * C73969) *
               C549 -
           (((C7059 * C9165 + C9175 + C9175 + C154146 * C9171 + C7057 * C6157 +
              C9176 + C9176 + C154171 * C6169 + C7055 * C1487 + C9177 + C9177 +
              C154182 * C1497) *
                 C153927 +
             (C7761 + C7760 + C7759) * C70415) *
                C153722 +
            ((C78168 + C78167 + C78166) * C153927 +
             (C7758 + C7757 + C7756) * C70415) *
                C73969) *
               C551) *
              C153767 * C153754)) /
            (p * q * std::sqrt(p + q));
    d2ee[33] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C154188 +
             C3138 * C154184 + C3139 * C154174 + C3142 * C154116) *
                C73969 +
            (C73972 + C73973 + C73974 + C73975) * C153722) *
               C154094 -
           ((C74380 + C74381 + C74382 + C74383) * C153722 +
            (C5574 * C154116 + C4205 * C154174 + C4206 * C154184 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C154188) *
                C73969) *
               C153847) *
              C153767 * C154162 +
          (((C74383 + C74382 + C74381 + C74380) * C73969 +
            (C74780 + C74781 + C74782 + C74783) * C153722) *
               C153847 -
           ((C73976 + C73977 + C73978 + C73979) * C153722 +
            (C73975 + C73974 + C73973 + C73972) * C73969) *
               C154094) *
              C153767 * C154163 +
          (((C73979 + C73978 + C73977 + C73976) * C73969 +
            (C73980 + C73981 + C73982 + C73983) * C153722) *
               C154094 -
           (((C134 * C4171 + C4196 + C4196 + C153882 * C4179) * C154116 +
             C3877 * C154174 + C1124 * C154184 + C634 * C154188) *
                C153722 +
            (C74783 + C74782 + C74781 + C74780) * C73969) *
               C153847) *
              C153767 * C774)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C70415 +
             C3138 * C153927) *
                C154187 +
            (C70422 + C70423) * C154180 + C70432 * C154161 + C70433 * C154108) *
               C154094 -
           (C71240 * C154108 + C71241 * C154161 + (C70840 + C70841) * C154180 +
            (C4206 * C153927 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C70415) *
                C154187) *
               C153847) *
              C153767 * C154162 +
          (((C70841 + C70840) * C154187 + (C70839 + C70838) * C154180 +
            (C70837 + C70836) * C154161 + (C71242 + C71243) * C154108) *
               C153847 -
           (C70434 * C154108 + C70435 * C154161 + (C70425 + C70424) * C154180 +
            (C70423 + C70422) * C154187) *
               C154094) *
              C153767 * C154163 +
          ((C70432 * C154187 + C70433 * C154180 + (C70429 + C70428) * C154161 +
            (C70430 + C70431) * C154108) *
               C154094 -
           (((C134 * C1086 + C1113 + C1113 + C153882 * C1098) * C153927 +
             C918 * C70415) *
                C154108 +
            (C71243 + C71242) * C154161 + C71240 * C154180 + C71241 * C154187) *
               C153847) *
              C153767 * C774)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C7055 * C136 + C7062 + C7062 + C154182 * C152 + C7057 * C556 +
              C7063 + C7063 + C154171 * C580 + C7059 * C557 + C7064 + C7064 +
              C154146 * C581) *
                 C70415 +
             (C30715 + C30716 + C30717) * C153927) *
                C73969 +
            ((C7128 + C7129 + C7130) * C70415 + C77861 * C153927) * C153722) *
               C154094 -
           (((C8571 + C8570 + C8569) * C153927 +
             (C7753 + C7754 + C7755) * C70415) *
                C153722 +
            ((C31733 + C31734 + C31735) * C153927 +
             (C7059 * C2272 + C7696 + C7696 + C154146 * C2282 + C7057 * C557 +
              C7697 + C7697 + C154171 * C581 + C7055 * C556 + C7698 + C7698 +
              C154182 * C580) *
                 C70415) *
                C73969) *
               C153847) *
              C153767 * C154162 +
          ((((C7755 + C7754 + C7753) * C70415 +
             (C8569 + C8570 + C8571) * C153927) *
                C73969 +
            ((C7752 + C7751 + C7750) * C70415 +
             (C8572 + C8573 + C8574) * C153927) *
                C153722) *
               C153847 -
           ((C7990 * C153927 + (C7133 + C7132 + C7131) * C70415) * C153722 +
            (C77862 * C153927 + (C7130 + C7129 + C7128) * C70415) * C73969) *
               C154094) *
              C153767 * C154163 +
          (((C7142 * C70415 + C78460 * C153927) * C73969 +
            ((C7136 + C7135 + C7134) * C70415 +
             (C7998 + C7999 + C8000) * C153927) *
                C153722) *
               C154094 -
           (((C7059 * C8529 + C8554 + C8554 + C154146 * C8531 + C7057 * C1486 +
              C8555 + C8555 + C154171 * C1496 + C7055 * C1084 + C8556 + C8556 +
              C154182 * C1096) *
                 C153927 +
             (C8239 + C8238 + C8237) * C70415) *
                C153722 +
            ((C8574 + C8573 + C8572) * C153927 + C8229 * C70415) * C73969) *
               C153847) *
              C153767 * C774)) /
            (p * q * std::sqrt(p + q));
    d2ee[34] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C70415 +
             C3138 * C153927) *
                C154187 +
            (C70422 + C70423) * C154180 + C70432 * C154161 + C70433 * C154108) *
               C153783 * C326 -
           ((C70630 + C70631) * C154108 + (C70632 + C70633) * C154161 +
            (C70634 + C70635) * C154180 +
            (C3139 * C153927 + C3138 * C70415) * C154187) *
               C153783 * C327 +
           ((C3139 * C70415 + C3142 * C153927) * C154187 +
            (C70636 + C70637) * C154180 + (C70638 + C70639) * C154161 +
            (C70640 + C70641) * C154108) *
               C153783 * C328) *
              C329 +
          (((C70635 + C70634) * C154187 + (C70633 + C70632) * C154180 +
            (C70631 + C70630) * C154161 +
            (C412 * C70415 + C419 * C153927) * C154108) *
               C153783 * C327 -
           (C70434 * C154108 + C70435 * C154161 + (C70425 + C70424) * C154180 +
            (C70423 + C70422) * C154187) *
               C153783 * C326 -
           (((C134 * C1343 + C1359 + C1359 + C153882 * C1353) * C153927 +
             C419 * C70415) *
                C154108 +
            (C70641 + C70640) * C154161 + (C70639 + C70638) * C154180 +
            (C70637 + C70636) * C154187) *
               C153783 * C328) *
              C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C70415 +
            C3138 * C153927) *
               C154187 +
           (C70422 + C70423) * C154180 + C70432 * C154161 + C70433 * C154108) *
              C153783 * C153767 * C130 -
          (C70434 * C154108 + C70435 * C154161 + (C70425 + C70424) * C154180 +
           (C70423 + C70422) * C154187) *
              C153783 * C153767 * C131 +
          (C70432 * C154187 + C70433 * C154180 + (C70429 + C70428) * C154161 +
           (C70430 + C70431) * C154108) *
              C153783 * C153767 * C132 -
          (((C134 * C775 + C781 + C781 + C153882 * C777) * C153927 +
            C198 * C70415) *
               C154108 +
           (C70431 + C70430) * C154161 + C70434 * C154180 + C70435 * C154187) *
              C153783 * C153767 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C154188 +
            C3138 * C154184 + C3139 * C154174 + C3142 * C154116) *
               C73969 +
           (C73972 + C73973 + C73974 + C73975) * C153722) *
              C153783 * C153767 * C130 -
          ((C73976 + C73977 + C73978 + C73979) * C153722 +
           (C73975 + C73974 + C73973 + C73972) * C73969) *
              C153783 * C153767 * C131 +
          ((C73979 + C73978 + C73977 + C73976) * C73969 +
           (C73980 + C73981 + C73982 + C73983) * C153722) *
              C153783 * C153767 * C132 -
          (((C134 * C1343 + C1359 + C1359 + C153882 * C1353) * C154116 +
            C419 * C154174 + C412 * C154184 + C196 * C154188) *
               C153722 +
           (C73983 + C73982 + C73981 + C73980) * C73969) *
              C153783 * C153767 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C154188 +
             C3138 * C154184 + C3139 * C154174 + C3142 * C154116) *
                C73969 +
            (C73972 + C73973 + C73974 + C73975) * C153722) *
               C153783 * C326 -
           ((C74178 + C74179 + C74180 + C74181) * C153722 +
            (C4591 * C154116 + C3142 * C154174 + C3139 * C154184 +
             C3138 * C154188) *
                C73969) *
               C153783 * C327 +
           ((C3139 * C154188 + C3142 * C154184 + C4591 * C154174 +
             C28235 * C154116) *
                C73969 +
            (C74182 + C74183 + C74184 + C74185) * C153722) *
               C153783 * C328) *
              C329 +
          (((C74181 + C74180 + C74179 + C74178) * C73969 +
            (C414 * C154188 + C417 * C154184 + C3140 * C154174 +
             C3144 * C154116) *
                C153722) *
               C153783 * C327 -
           ((C73976 + C73977 + C73978 + C73979) * C153722 +
            (C73975 + C73974 + C73973 + C73972) * C73969) *
               C153783 * C326 -
           (((C134 * C4574 + C4586 + C4586 + C153882 * C4580) * C154116 +
             C3144 * C154174 + C3140 * C154184 + C417 * C154188) *
                C153722 +
            (C74185 + C74184 + C74183 + C74182) * C73969) *
               C153783 * C328) *
              C153754)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C7055 * C136 + C7062 + C7062 + C154182 * C152 + C7057 * C556 +
             C7063 + C7063 + C154171 * C580 + C7059 * C557 + C7064 + C7064 +
             C154146 * C581) *
                C70415 +
            (C30715 + C30716 + C30717) * C153927) *
               C73969 +
           ((C7128 + C7129 + C7130) * C70415 +
            (C7441 + C7440 + C7439) * C153927) *
               C153722) *
              C153783 * C153767 * C130 -
          ((C7990 * C153927 + (C7133 + C7132 + C7131) * C70415) * C153722 +
           ((C7439 + C7440 + C7441) * C153927 +
            (C7130 + C7129 + C7128) * C70415) *
               C73969) *
              C153783 * C153767 * C131 +
          ((C7142 * C70415 + (C7438 + C7437 + C7436) * C153927) * C73969 +
           ((C7136 + C7135 + C7134) * C70415 +
            (C7998 + C7999 + C8000) * C153927) *
               C153722) *
              C153783 * C153767 * C132 -
          (((C7059 * C1485 + C7987 + C7987 + C154146 * C1495 + C7057 * C1085 +
             C7988 + C7988 + C154171 * C1097 + C7055 * C331 + C7989 + C7989 +
             C154182 * C355) *
                C153927 +
            (C7139 + C7138 + C7137) * C70415) *
               C153722 +
           ((C8000 + C7999 + C7998) * C153927 + C7143 * C70415) * C73969) *
              C153783 * C153767 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C7055 * C136 + C7062 + C7062 + C154182 * C152 + C7057 * C556 +
              C7063 + C7063 + C154171 * C580 + C7059 * C557 + C7064 + C7064 +
              C154146 * C581) *
                 C70415 +
             (C30715 + C30716 + C30717) * C153927) *
                C73969 +
            ((C7128 + C7129 + C7130) * C70415 + C77861 * C153927) * C153722) *
               C153783 * C326 -
           ((C30702 * C153927 + C77862 * C70415) * C153722 +
            ((C30720 + C30719 + C30718) * C153927 +
             (C30717 + C30716 + C30715) * C70415) *
                C73969) *
               C153783 * C327 +
           ((C30728 * C70415 + (C30723 + C30722 + C30721) * C153927) * C73969 +
            (C77863 * C70415 + (C30724 + C30725 + C30726) * C153927) *
                C153722) *
               C153783 * C328) *
              C329 +
          (((C77861 * C70415 + C77863 * C153927) * C73969 +
            ((C7438 + C7437 + C7436) * C70415 +
             (C7445 + C7446 + C7447) * C153927) *
                C153722) *
               C153783 * C327 -
           ((C7990 * C153927 + (C7133 + C7132 + C7131) * C70415) * C153722 +
            (C77862 * C153927 + (C7130 + C7129 + C7128) * C70415) * C73969) *
               C153783 * C326 -
           (((C7059 * C4809 + C8939 + C8939 + C154146 * C4815 + C7057 * C4170 +
              C8940 + C8940 + C154171 * C4178 + C7055 * C1345 + C8941 + C8941 +
              C154182 * C1355) *
                 C153927 +
             (C7447 + C7446 + C7445) * C70415) *
                C153722 +
            ((C30726 + C30725 + C30724) * C153927 + C30702 * C70415) * C73969) *
               C153783 * C328) *
              C153754)) /
            (p * q * std::sqrt(p + q));
    d2ee[35] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C154188 +
             C3138 * C154184 + C3139 * C154174 + C3142 * C154116) *
                C73969 +
            (C73972 + C73973 + C73974 + C73975) * C153722) *
               C153783 * C154164 -
           ((C74178 + C74179 + C74180 + C74181) * C153722 +
            (C4591 * C154116 + C3142 * C154174 + C3139 * C154184 +
             C3138 * C154188) *
                C73969) *
               C153783 * C154165 +
           ((C3139 * C154188 + C3142 * C154184 + C4591 * C154174 +
             C28235 * C154116) *
                C73969 +
            (C74182 + C74183 + C74184 + C74185) * C153722) *
               C153783 * C1629) *
              C154085 +
          (((C74181 + C74180 + C74179 + C74178) * C73969 +
            (C74582 + C74583 + C74584 + C74585) * C153722) *
               C153783 * C154165 -
           ((C73976 + C73977 + C73978 + C73979) * C153722 +
            (C73975 + C73974 + C73973 + C73972) * C73969) *
               C153783 * C154164 -
           (((C134 * C4574 + C4586 + C4586 + C153882 * C4580) * C154116 +
             C3144 * C154174 + C3140 * C154184 + C417 * C154188) *
                C153722 +
            (C74185 + C74184 + C74183 + C74182) * C73969) *
               C153783 * C1629) *
              C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C70415 +
             C3138 * C153927) *
                C154187 +
            (C70422 + C70423) * C154180 + C70432 * C154161 + C70433 * C154108) *
               C153783 * C154164 -
           (C71042 * C154108 + C71043 * C154161 + (C70634 + C70635) * C154180 +
            (C3139 * C153927 + C3138 * C70415) * C154187) *
               C153783 * C154165 +
           ((C3139 * C70415 + C3142 * C153927) * C154187 +
            (C70636 + C70637) * C154180 + (C70638 + C70639) * C154161 +
            (C70640 + C70641) * C154108) *
               C153783 * C1629) *
              C154085 +
          (((C70635 + C70634) * C154187 + (C70633 + C70632) * C154180 +
            (C70631 + C70630) * C154161 + (C71044 + C71045) * C154108) *
               C153783 * C154165 -
           (C70434 * C154108 + C70435 * C154161 + (C70425 + C70424) * C154180 +
            (C70423 + C70422) * C154187) *
               C153783 * C154164 -
           (((C134 * C1343 + C1359 + C1359 + C153882 * C1353) * C153927 +
             C419 * C70415) *
                C154108 +
            (C70641 + C70640) * C154161 + (C70639 + C70638) * C154180 +
            (C70637 + C70636) * C154187) *
               C153783 * C1629) *
              C153754)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C7055 * C136 + C7062 + C7062 + C154182 * C152 + C7057 * C556 +
              C7063 + C7063 + C154171 * C580 + C7059 * C557 + C7064 + C7064 +
              C154146 * C581) *
                 C70415 +
             (C30715 + C30716 + C30717) * C153927) *
                C73969 +
            ((C7128 + C7129 + C7130) * C70415 + C77861 * C153927) * C153722) *
               C153783 * C154164 -
           ((C30702 * C153927 + C77862 * C70415) * C153722 +
            ((C30720 + C30719 + C30718) * C153927 +
             (C30717 + C30716 + C30715) * C70415) *
                C73969) *
               C153783 * C154165 +
           ((C30728 * C70415 + (C30723 + C30722 + C30721) * C153927) * C73969 +
            (C77863 * C70415 + (C30724 + C30725 + C30726) * C153927) *
                C153722) *
               C153783 * C1629) *
              C154085 +
          (((C77861 * C70415 + C77863 * C153927) * C73969 +
            (C78460 * C70415 + (C7445 + C7446 + C7447) * C153927) * C153722) *
               C153783 * C154165 -
           ((C7990 * C153927 + (C7133 + C7132 + C7131) * C70415) * C153722 +
            (C77862 * C153927 + (C7130 + C7129 + C7128) * C70415) * C73969) *
               C153783 * C154164 -
           (((C7059 * C4809 + C8939 + C8939 + C154146 * C4815 + C7057 * C4170 +
              C8940 + C8940 + C154171 * C4178 + C7055 * C1345 + C8941 + C8941 +
              C154182 * C1355) *
                 C153927 +
             (C7447 + C7446 + C7445) * C70415) *
                C153722 +
            ((C30726 + C30725 + C30724) * C153927 + C30702 * C70415) * C73969) *
               C153783 * C1629) *
              C153754)) /
            (p * q * std::sqrt(p + q));
    d2ee[36] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C154188 +
             C3138 * C154184 + C3139 * C154174 + C3142 * C154116) *
                C73969 +
            (C73972 + C73973 + C73974 + C73975) * C153722) *
               C154094 -
           ((C74380 + C74381 + C74382 + C74383) * C153722 +
            (C5574 * C154116 + C4205 * C154174 + C4206 * C154184 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C154188) *
                C73969) *
               C153847) *
              C154164 +
          (((C4206 * C154188 + C4205 * C154184 + C5574 * C154174 +
             C28789 * C154116) *
                C73969 +
            (C75042 + C75043 + C75044 + C75045) * C153722) *
               C153847 -
           ((C74178 + C74179 + C74180 + C74181) * C153722 +
            (C4591 * C154116 + C3142 * C154174 + C3139 * C154184 +
             C3138 * C154188) *
                C73969) *
               C154094) *
              C154165 +
          (((C3139 * C154188 + C3142 * C154184 + C4591 * C154174 +
             C28235 * C154116) *
                C73969 +
            (C74182 + C74183 + C74184 + C74185) * C153722) *
               C154094 -
           (((C134 * C28773 + C28784 + C28784 + C153882 * C28777) * C154116 +
             C28790 * C154174 + C4207 * C154184 + C3417 * C154188) *
                C153722 +
            (C29554 * C154116 + C28789 * C154174 + C5574 * C154184 +
             C4205 * C154188) *
                C73969) *
               C153847) *
              C1629) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C70415 +
             C3138 * C153927) *
                C154187 +
            (C70422 + C70423) * C154180 + C70432 * C154161 + C70433 * C154108) *
               C154094 -
           (C71240 * C154108 + C71241 * C154161 + (C70840 + C70841) * C154180 +
            (C4206 * C153927 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C70415) *
                C154187) *
               C153847) *
              C154164 +
          (((C4206 * C70415 + C4205 * C153927) * C154187 +
            (C71502 + C71503) * C154180 + (C71504 + C71505) * C154161 +
            (C71506 + C71507) * C154108) *
               C153847 -
           (C71042 * C154108 + C71043 * C154161 + (C70634 + C70635) * C154180 +
            (C3139 * C153927 + C3138 * C70415) * C154187) *
               C154094) *
              C154165 +
          (((C3139 * C70415 + C3142 * C153927) * C154187 +
            (C70636 + C70637) * C154180 + (C70638 + C70639) * C154161 +
            (C70640 + C70641) * C154108) *
               C154094 -
           (((C134 * C4171 + C4196 + C4196 + C153882 * C4179) * C153927 +
             C3877 * C70415) *
                C154108 +
            (C4208 * C153927 + C3416 * C70415) * C154161 +
            (C4207 * C153927 + C3417 * C70415) * C154180 +
            (C5574 * C153927 + C4205 * C70415) * C154187) *
               C153847) *
              C1629) *
         C153748) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C7055 * C136 + C7062 + C7062 + C154182 * C152 + C7057 * C556 +
              C7063 + C7063 + C154171 * C580 + C7059 * C557 + C7064 + C7064 +
              C154146 * C581) *
                 C70415 +
             (C30715 + C30716 + C30717) * C153927) *
                C73969 +
            ((C7128 + C7129 + C7130) * C70415 + C77861 * C153927) * C153722) *
               C154094 -
           ((C79139 * C153927 + (C7753 + C7754 + C7755) * C70415) * C153722 +
            ((C31733 + C31734 + C31735) * C153927 +
             (C7059 * C2272 + C7696 + C7696 + C154146 * C2282 + C7057 * C557 +
              C7697 + C7697 + C154171 * C581 + C7055 * C556 + C7698 + C7698 +
              C154182 * C580) *
                 C70415) *
                C73969) *
               C153847) *
              C154164 +
          ((((C31735 + C31734 + C31733) * C70415 +
             (C31732 + C31731 + C31730) * C153927) *
                C73969 +
            (C79140 * C70415 + (C31736 + C31737 + C31738) * C153927) *
                C153722) *
               C153847 -
           ((C30702 * C153927 + C77862 * C70415) * C153722 +
            ((C30720 + C30719 + C30718) * C153927 +
             (C30717 + C30716 + C30715) * C70415) *
                C73969) *
               C154094) *
              C154165 +
          (((C30728 * C70415 + (C30723 + C30722 + C30721) * C153927) * C73969 +
            (C77863 * C70415 + (C30724 + C30725 + C30726) * C153927) *
                C153722) *
               C154094 -
           (((C7059 * C31684 + C31709 + C31709 + C154146 * C31686 +
              C7057 * C4810 + C31710 + C31710 + C154171 * C4816 +
              C7055 * C4169 + C31711 + C31711 + C154182 * C4177) *
                 C153927 +
             (C31738 + C31737 + C31736) * C70415) *
                C153722 +
            ((C33122 + C33121 + C33120) * C153927 + C33113 * C70415) * C73969) *
               C153847) *
              C1629) *
         C153748) /
            (p * q * std::sqrt(p + q));
    d2ee[37] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C134 * C136 + C161 + C161 + C153882 * C152) * C70415 +
                 C3138 * C153927) *
                    C154187 +
                (C70422 + C70423) * C154180 + C70432 * C154161 +
                C70433 * C154108) *
                   C153783 * C1251 -
               (C71042 * C154108 + C71043 * C154161 +
                (C70634 + C70635) * C154180 +
                (C3139 * C153927 + C3138 * C70415) * C154187) *
                   C153783 * C153819) *
                  C1253 +
              (((C70635 + C70634) * C154187 + (C70633 + C70632) * C154180 +
                (C70631 + C70630) * C154161 + (C71044 + C71045) * C154108) *
                   C153783 * C153819 -
               (C70434 * C154108 + C70435 * C154161 +
                (C70425 + C70424) * C154180 + (C70423 + C70422) * C154187) *
                   C153783 * C1251) *
                  C1254 +
              ((C70432 * C154187 + C70433 * C154180 +
                (C70429 + C70428) * C154161 + (C70430 + C70431) * C154108) *
                   C153783 * C1251 -
               (((C134 * C342 + C395 + C395 + C153882 * C366) * C153927 +
                 C784 * C70415) *
                    C154108 +
                (C71045 + C71044) * C154161 + C71042 * C154180 +
                C71043 * C154187) *
                   C153783 * C153819) *
                  C1255) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C136 + C161 + C161 + C153882 * C152) * C70415 +
                C3138 * C153927) *
                   C154187 +
               (C70422 + C70423) * C154180 + C70432 * C154161 +
               C70433 * C154108) *
                  C153783 * C1338 -
              (C71042 * C154108 + C71043 * C154161 +
               (C70634 + C70635) * C154180 +
               (C3139 * C153927 + C3138 * C70415) * C154187) *
                  C153783 * C1339 +
              ((C3139 * C70415 + C3142 * C153927) * C154187 +
               (C70636 + C70637) * C154180 + (C70638 + C70639) * C154161 +
               (C70640 + C70641) * C154108) *
                  C153783 * C1340 -
              (((C134 * C3086 + C3121 + C3121 + C153882 * C3094) * C153927 +
                C3145 * C70415) *
                   C154108 +
               (C3144 * C153927 + C3140 * C70415) * C154161 +
               (C3143 * C153927 + C3141 * C70415) * C154180 +
               (C4591 * C153927 + C3142 * C70415) * C154187) *
                  C153783 * C1341) *
             C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C70415 +
             C3138 * C153927) *
                C154187 +
            (C70422 + C70423) * C154180 + C70432 * C154161 + C70433 * C154108) *
               C549 -
           (C71240 * C154108 + C71241 * C154161 + (C70840 + C70841) * C154180 +
            (C4206 * C153927 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C70415) *
                C154187) *
               C550 +
           (((C134 * C557 + C602 + C602 + C153882 * C581) * C70415 +
             C4830 * C153927) *
                C154187 +
            (C70842 + C70843) * C154180 + (C70844 + C70845) * C154161 +
            (C70846 + C70847) * C154108) *
               C551) *
              C1251 +
          (((C4206 * C70415 + C4205 * C153927) * C154187 +
            (C71502 + C71503) * C154180 + (C71504 + C71505) * C154161 +
            (C71506 + C71507) * C154108) *
               C550 -
           (C71042 * C154108 + C71043 * C154161 + (C70634 + C70635) * C154180 +
            (C3139 * C153927 + C3138 * C70415) * C154187) *
               C549 -
           (((C134 * C3372 + C3403 + C3403 + C153882 * C3380) * C153927 +
             C11810 * C70415) *
                C154108 +
            (C3421 * C153927 + C3420 * C70415) * C154161 +
            (C3419 * C153927 + C3418 * C70415) * C154180 +
            (C4831 * C153927 + C4830 * C70415) * C154187) *
               C551) *
              C153819) *
         C153748) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C154188 +
             C3138 * C154184 + C3139 * C154174 + C3142 * C154116) *
                C73969 +
            (C73972 + C73973 + C73974 + C73975) * C153722) *
               C153783 * C1251 -
           ((C74178 + C74179 + C74180 + C74181) * C153722 +
            (C4591 * C154116 + C3142 * C154174 + C3139 * C154184 +
             C3138 * C154188) *
                C73969) *
               C153783 * C153819) *
              C1253 +
          (((C74181 + C74180 + C74179 + C74178) * C73969 +
            (C74582 + C74583 + C74584 + C74585) * C153722) *
               C153783 * C153819 -
           ((C73976 + C73977 + C73978 + C73979) * C153722 +
            (C73975 + C73974 + C73973 + C73972) * C73969) *
               C153783 * C1251) *
              C1254 +
          (((C73979 + C73978 + C73977 + C73976) * C73969 +
            (C73980 + C73981 + C73982 + C73983) * C153722) *
               C153783 * C1251 -
           (((C134 * C3086 + C3121 + C3121 + C153882 * C3094) * C154116 +
             C3145 * C154174 + C418 * C154184 + C413 * C154188) *
                C153722 +
            (C74585 + C74584 + C74583 + C74582) * C73969) *
               C153783 * C153819) *
              C1255)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C154188 +
            C3138 * C154184 + C3139 * C154174 + C3142 * C154116) *
               C73969 +
           (C73972 + C73973 + C73974 + C73975) * C153722) *
              C153783 * C1338 -
          ((C74178 + C74179 + C74180 + C74181) * C153722 +
           (C4591 * C154116 + C3142 * C154174 + C3139 * C154184 +
            C3138 * C154188) *
               C73969) *
              C153783 * C1339 +
          ((C3139 * C154188 + C3142 * C154184 + C4591 * C154174 +
            C28235 * C154116) *
               C73969 +
           (C74182 + C74183 + C74184 + C74185) * C153722) *
              C153783 * C1340 -
          (((C134 * C28219 + C28230 + C28230 + C153882 * C28223) * C154116 +
            C28236 * C154174 + C3143 * C154184 + C3141 * C154188) *
               C153722 +
           (C29003 * C154116 + C28235 * C154174 + C4591 * C154184 +
            C3142 * C154188) *
               C73969) *
              C153783 * C1341) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C154188 +
             C3138 * C154184 + C3139 * C154174 + C3142 * C154116) *
                C73969 +
            (C73972 + C73973 + C73974 + C73975) * C153722) *
               C549 -
           ((C74380 + C74381 + C74382 + C74383) * C153722 +
            (C5574 * C154116 + C4205 * C154174 + C4206 * C154184 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C154188) *
                C73969) *
               C550 +
           (((C134 * C557 + C602 + C602 + C153882 * C581) * C154188 +
             C4830 * C154184 + C4831 * C154174 + C29138 * C154116) *
                C73969 +
            (C74384 + C74385 + C74386 + C74387) * C153722) *
               C551) *
              C1251 +
          (((C4206 * C154188 + C4205 * C154184 + C5574 * C154174 +
             C28789 * C154116) *
                C73969 +
            (C75042 + C75043 + C75044 + C75045) * C153722) *
               C550 -
           ((C74178 + C74179 + C74180 + C74181) * C153722 +
            (C4591 * C154116 + C3142 * C154174 + C3139 * C154184 +
             C3138 * C154188) *
                C73969) *
               C549 -
           (((C134 * C28359 + C28366 + C28366 + C153882 * C28363) * C154116 +
             C34998 * C154174 + C3419 * C154184 + C3418 * C154188) *
                C153722 +
            (C29139 * C154116 + C29138 * C154174 + C4831 * C154184 +
             C4830 * C154188) *
                C73969) *
               C551) *
              C153819) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C7055 * C136 + C7062 + C7062 + C154182 * C152 + C7057 * C556 +
              C7063 + C7063 + C154171 * C580 + C7059 * C557 + C7064 + C7064 +
              C154146 * C581) *
                 C70415 +
             (C30715 + C30716 + C30717) * C153927) *
                C73969 +
            ((C7128 + C7129 + C7130) * C70415 + C77861 * C153927) * C153722) *
               C153783 * C1251 -
           ((C30702 * C153927 + C77862 * C70415) * C153722 +
            ((C30720 + C30719 + C30718) * C153927 +
             (C30717 + C30716 + C30715) * C70415) *
                C73969) *
               C153783 * C153819) *
              C1253 +
          (((C77861 * C70415 + C77863 * C153927) * C73969 +
            (C78460 * C70415 + (C7445 + C7446 + C7447) * C153927) * C153722) *
               C153783 * C153819 -
           ((C7990 * C153927 + (C7133 + C7132 + C7131) * C70415) * C153722 +
            (C77862 * C153927 + (C7130 + C7129 + C7128) * C70415) * C73969) *
               C153783 * C1251) *
              C1254 +
          (((C7142 * C70415 + C78460 * C153927) * C73969 +
            ((C7136 + C7135 + C7134) * C70415 +
             (C7998 + C7999 + C8000) * C153927) *
                C153722) *
               C153783 * C1251 -
           (((C7059 * C3372 + C7409 + C7409 + C154146 * C3380 + C7057 * C1917 +
              C7410 + C7410 + C154171 * C1927 + C7055 * C339 + C7411 + C7411 +
              C154182 * C363) *
                 C153927 +
             (C8000 + C7999 + C7998) * C70415) *
                C153722 +
            ((C7447 + C7446 + C7445) * C153927 + C7990 * C70415) * C73969) *
               C153783 * C153819) *
              C1255)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C7055 * C136 + C7062 + C7062 + C154182 * C152 + C7057 * C556 +
             C7063 + C7063 + C154171 * C580 + C7059 * C557 + C7064 + C7064 +
             C154146 * C581) *
                C70415 +
            (C30715 + C30716 + C30717) * C153927) *
               C73969 +
           ((C7128 + C7129 + C7130) * C70415 + C77861 * C153927) * C153722) *
              C153783 * C1338 -
          ((C30702 * C153927 + C77862 * C70415) * C153722 +
           ((C30720 + C30719 + C30718) * C153927 +
            (C30717 + C30716 + C30715) * C70415) *
               C73969) *
              C153783 * C1339 +
          ((C30728 * C70415 + (C30723 + C30722 + C30721) * C153927) * C73969 +
           (C77863 * C70415 + (C30724 + C30725 + C30726) * C153927) * C153722) *
              C153783 * C1340 -
          (((C7059 * C28359 + C30687 + C30687 + C154146 * C28363 +
             C7057 * C5558 + C30688 + C30688 + C154171 * C5564 + C7055 * C3084 +
             C30689 + C30689 + C154182 * C3092) *
                C153927 +
            (C30726 + C30725 + C30724) * C70415) *
               C153722 +
           ((C32122 + C32121 + C32120) * C153927 + C32113 * C70415) * C73969) *
              C153783 * C1341) *
         C153748) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C7055 * C136 + C7062 + C7062 + C154182 * C152 + C7057 * C556 +
              C7063 + C7063 + C154171 * C580 + C7059 * C557 + C7064 + C7064 +
              C154146 * C581) *
                 C70415 +
             (C30715 + C30716 + C30717) * C153927) *
                C73969 +
            ((C7128 + C7129 + C7130) * C70415 + C77861 * C153927) * C153722) *
               C549 -
           ((C79139 * C153927 + (C7753 + C7754 + C7755) * C70415) * C153722 +
            ((C31733 + C31734 + C31735) * C153927 +
             (C7059 * C2272 + C7696 + C7696 + C154146 * C2282 + C7057 * C557 +
              C7697 + C7697 + C154171 * C581 + C7055 * C556 + C7698 + C7698 +
              C154182 * C580) *
                 C70415) *
                C73969) *
               C550 +
           (((C7055 * C557 + C7699 + C7699 + C154182 * C581 + C7057 * C2272 +
              C7700 + C7700 + C154171 * C2282 + C7059 * C7665 + C7701 + C7701 +
              C154146 * C7673) *
                 C70415 +
             (C32371 + C32372 + C32373) * C153927) *
                C73969 +
            ((C7756 + C7757 + C7758) * C70415 +
             (C78166 + C78167 + C78168) * C153927) *
                C153722) *
               C551) *
              C1251 +
          ((((C31735 + C31734 + C31733) * C70415 +
             (C31732 + C31731 + C31730) * C153927) *
                C73969 +
            (C79140 * C70415 + (C31736 + C31737 + C31738) * C153927) *
                C153722) *
               C550 -
           ((C30702 * C153927 + C77862 * C70415) * C153722 +
            ((C30720 + C30719 + C30718) * C153927 +
             (C30717 + C30716 + C30715) * C70415) *
                C73969) *
               C549 -
           (((C7059 * C30947 + C30956 + C30956 + C154146 * C30951 +
              C7057 * C6158 + C30957 + C30957 + C154171 * C6170 +
              C7055 * C3370 + C30958 + C30958 + C154182 * C3378) *
                 C153927 +
             (C78168 + C78167 + C78166) * C70415) *
                C153722 +
            ((C32376 + C32375 + C32374) * C153927 +
             (C32373 + C32372 + C32371) * C70415) *
                C73969) *
               C551) *
              C153819) *
         C153748) /
            (p * q * std::sqrt(p + q));
    d2ee[38] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C153882 * C152) * C154188 +
              C3138 * C154184 + C3139 * C154174 + C3142 * C154116) *
                 C73969 +
             (C73972 + C73973 + C73974 + C73975) * C153722) *
                C154094 -
            ((C74380 + C74381 + C74382 + C74383) * C153722 +
             (C5574 * C154116 + C4205 * C154174 + C4206 * C154184 +
              (C134 * C556 + C601 + C601 + C153882 * C580) * C154188) *
                 C73969) *
                C153847) *
               C1251 +
           (((C4206 * C154188 + C4205 * C154184 + C5574 * C154174 +
              C28789 * C154116) *
                 C73969 +
             (C75042 + C75043 + C75044 + C75045) * C153722) *
                C153847 -
            ((C74178 + C74179 + C74180 + C74181) * C153722 +
             (C4591 * C154116 + C3142 * C154174 + C3139 * C154184 +
              C3138 * C154188) *
                 C73969) *
                C154094) *
               C153819) *
              C154085 +
          ((((C74383 + C74382 + C74381 + C74380) * C73969 +
             (C74780 + C74781 + C74782 + C74783) * C153722) *
                C153847 -
            ((C73976 + C73977 + C73978 + C73979) * C153722 +
             (C73975 + C73974 + C73973 + C73972) * C73969) *
                C154094) *
               C1251 +
           (((C74181 + C74180 + C74179 + C74178) * C73969 +
             (C74582 + C74583 + C74584 + C74585) * C153722) *
                C154094 -
            (((C134 * C5557 + C5569 + C5569 + C153882 * C5563) * C154116 +
              C4208 * C154174 + C3416 * C154184 + C1123 * C154188) *
                 C153722 +
             (C75045 + C75044 + C75043 + C75042) * C73969) *
                C153847) *
               C153819) *
              C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C153882 * C152) * C70415 +
              C3138 * C153927) *
                 C154187 +
             (C70422 + C70423) * C154180 + C70432 * C154161 +
             C70433 * C154108) *
                C154094 -
            (C71240 * C154108 + C71241 * C154161 + (C70840 + C70841) * C154180 +
             (C4206 * C153927 +
              (C134 * C556 + C601 + C601 + C153882 * C580) * C70415) *
                 C154187) *
                C153847) *
               C1251 +
           (((C4206 * C70415 + C4205 * C153927) * C154187 +
             (C71502 + C71503) * C154180 + (C71504 + C71505) * C154161 +
             (C71506 + C71507) * C154108) *
                C153847 -
            (C71042 * C154108 + C71043 * C154161 + (C70634 + C70635) * C154180 +
             (C3139 * C153927 + C3138 * C70415) * C154187) *
                C154094) *
               C153819) *
              C154085 +
          ((((C70841 + C70840) * C154187 + (C70839 + C70838) * C154180 +
             (C70837 + C70836) * C154161 + (C71242 + C71243) * C154108) *
                C153847 -
            (C70434 * C154108 + C70435 * C154161 + (C70425 + C70424) * C154180 +
             (C70423 + C70422) * C154187) *
                C154094) *
               C1251 +
           (((C70635 + C70634) * C154187 + (C70633 + C70632) * C154180 +
             (C70631 + C70630) * C154161 + (C71044 + C71045) * C154108) *
                C154094 -
            (((C134 * C1916 + C1932 + C1932 + C153882 * C1926) * C153927 +
              C1125 * C70415) *
                 C154108 +
             (C71507 + C71506) * C154161 + (C71505 + C71504) * C154180 +
             (C71503 + C71502) * C154187) *
                C153847) *
               C153819) *
              C153754)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C7055 * C136 + C7062 + C7062 + C154182 * C152 + C7057 * C556 +
               C7063 + C7063 + C154171 * C580 + C7059 * C557 + C7064 + C7064 +
               C154146 * C581) *
                  C70415 +
              (C30715 + C30716 + C30717) * C153927) *
                 C73969 +
             ((C7128 + C7129 + C7130) * C70415 + C77861 * C153927) * C153722) *
                C154094 -
            ((C79139 * C153927 + (C7753 + C7754 + C7755) * C70415) * C153722 +
             ((C31733 + C31734 + C31735) * C153927 +
              (C7059 * C2272 + C7696 + C7696 + C154146 * C2282 + C7057 * C557 +
               C7697 + C7697 + C154171 * C581 + C7055 * C556 + C7698 + C7698 +
               C154182 * C580) *
                  C70415) *
                 C73969) *
                C153847) *
               C1251 +
           ((((C31735 + C31734 + C31733) * C70415 +
              (C31732 + C31731 + C31730) * C153927) *
                 C73969 +
             (C79140 * C70415 + (C31736 + C31737 + C31738) * C153927) *
                 C153722) *
                C153847 -
            ((C30702 * C153927 + C77862 * C70415) * C153722 +
             ((C30720 + C30719 + C30718) * C153927 +
              (C30717 + C30716 + C30715) * C70415) *
                 C73969) *
                C154094) *
               C153819) *
              C154085 +
          (((((C7755 + C7754 + C7753) * C70415 + C79140 * C153927) * C73969 +
             ((C7752 + C7751 + C7750) * C70415 +
              (C8572 + C8573 + C8574) * C153927) *
                 C153722) *
                C153847 -
            ((C7990 * C153927 + (C7133 + C7132 + C7131) * C70415) * C153722 +
             (C77862 * C153927 + (C7130 + C7129 + C7128) * C70415) * C73969) *
                C154094) *
               C1251 +
           (((C77861 * C70415 + C77863 * C153927) * C73969 +
             (C78460 * C70415 + (C7445 + C7446 + C7447) * C153927) * C153722) *
                C154094 -
            (((C7059 * C6156 + C9910 + C9910 + C154146 * C6168 + C7057 * C3371 +
               C9911 + C9911 + C154171 * C3379 + C7055 * C1918 + C9912 + C9912 +
               C154182 * C1928) *
                  C153927 +
              (C8574 + C8573 + C8572) * C70415) *
                 C153722 +
             ((C31738 + C31737 + C31736) * C153927 + C79139 * C70415) *
                 C73969) *
                C153847) *
               C153819) *
              C153754)) /
            (p * q * std::sqrt(p + q));
    d2ee[39] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C70415 +
            C3138 * C153927) *
               C154187 +
           (C70422 + C70423) * C154180 + C70432 * C154161 + C70433 * C154108) *
              C153783 * C1338 -
          (C71042 * C154108 + C71043 * C154161 + (C70634 + C70635) * C154180 +
           (C3139 * C153927 + C3138 * C70415) * C154187) *
              C153783 * C1339 +
          ((C3139 * C70415 + C3142 * C153927) * C154187 +
           (C70636 + C70637) * C154180 + (C70638 + C70639) * C154161 +
           (C70640 + C70641) * C154108) *
              C153783 * C1340 -
          (((C134 * C3086 + C3121 + C3121 + C153882 * C3094) * C153927 +
            C3145 * C70415) *
               C154108 +
           (C3144 * C153927 + C3140 * C70415) * C154161 +
           (C3143 * C153927 + C3141 * C70415) * C154180 +
           (C4591 * C153927 + C3142 * C70415) * C154187) *
              C153783 * C1341) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C70415 +
             C3138 * C153927) *
                C154187 +
            (C70422 + C70423) * C154180 + C70432 * C154161 + C70433 * C154108) *
               C153783 * C1251 -
           (C71042 * C154108 + C71043 * C154161 + (C70634 + C70635) * C154180 +
            (C3139 * C153927 + C3138 * C70415) * C154187) *
               C153783 * C153819) *
              C1253 +
          (((C70635 + C70634) * C154187 + (C70633 + C70632) * C154180 +
            (C70631 + C70630) * C154161 + (C71044 + C71045) * C154108) *
               C153783 * C153819 -
           (C70434 * C154108 + C70435 * C154161 + (C70425 + C70424) * C154180 +
            (C70423 + C70422) * C154187) *
               C153783 * C1251) *
              C1254 +
          ((C70432 * C154187 + C70433 * C154180 + (C70429 + C70428) * C154161 +
            (C70430 + C70431) * C154108) *
               C153783 * C1251 -
           (((C134 * C342 + C395 + C395 + C153882 * C366) * C153927 +
             C784 * C70415) *
                C154108 +
            (C71045 + C71044) * C154161 + C71042 * C154180 + C71043 * C154187) *
               C153783 * C153819) *
              C1255)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C154188 +
             C3138 * C154184 + C3139 * C154174 + C3142 * C154116) *
                C73969 +
            (C73972 + C73973 + C73974 + C73975) * C153722) *
               C153783 * C1251 -
           ((C74178 + C74179 + C74180 + C74181) * C153722 +
            (C4591 * C154116 + C3142 * C154174 + C3139 * C154184 +
             C3138 * C154188) *
                C73969) *
               C153783 * C153819) *
              C1253 +
          (((C74181 + C74180 + C74179 + C74178) * C73969 +
            (C74582 + C74583 + C74584 + C74585) * C153722) *
               C153783 * C153819 -
           ((C73976 + C73977 + C73978 + C73979) * C153722 +
            (C73975 + C73974 + C73973 + C73972) * C73969) *
               C153783 * C1251) *
              C1254 +
          (((C73979 + C73978 + C73977 + C73976) * C73969 +
            (C73980 + C73981 + C73982 + C73983) * C153722) *
               C153783 * C1251 -
           (((C134 * C3086 + C3121 + C3121 + C153882 * C3094) * C154116 +
             C3145 * C154174 + C418 * C154184 + C413 * C154188) *
                C153722 +
            (C74585 + C74584 + C74583 + C74582) * C73969) *
               C153783 * C153819) *
              C1255)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C154188 +
            C3138 * C154184 + C3139 * C154174 + C3142 * C154116) *
               C73969 +
           (C73972 + C73973 + C73974 + C73975) * C153722) *
              C153783 * C1338 -
          ((C74178 + C74179 + C74180 + C74181) * C153722 +
           (C4591 * C154116 + C3142 * C154174 + C3139 * C154184 +
            C3138 * C154188) *
               C73969) *
              C153783 * C1339 +
          ((C3139 * C154188 + C3142 * C154184 + C4591 * C154174 +
            C28235 * C154116) *
               C73969 +
           (C74182 + C74183 + C74184 + C74185) * C153722) *
              C153783 * C1340 -
          (((C134 * C28219 + C28230 + C28230 + C153882 * C28223) * C154116 +
            C28236 * C154174 + C3143 * C154184 + C3141 * C154188) *
               C153722 +
           (C29003 * C154116 + C28235 * C154174 + C4591 * C154184 +
            C3142 * C154188) *
               C73969) *
              C153783 * C1341) *
         C153748) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C7055 * C136 + C7062 + C7062 + C154182 * C152 + C7057 * C556 +
              C7063 + C7063 + C154171 * C580 + C7059 * C557 + C7064 + C7064 +
              C154146 * C581) *
                 C70415 +
             (C30715 + C30716 + C30717) * C153927) *
                C73969 +
            ((C7128 + C7129 + C7130) * C70415 + C77861 * C153927) * C153722) *
               C153783 * C1251 -
           ((C30702 * C153927 + C77862 * C70415) * C153722 +
            ((C30720 + C30719 + C30718) * C153927 +
             (C30717 + C30716 + C30715) * C70415) *
                C73969) *
               C153783 * C153819) *
              C1253 +
          (((C77861 * C70415 + C77863 * C153927) * C73969 +
            (C78460 * C70415 + (C7445 + C7446 + C7447) * C153927) * C153722) *
               C153783 * C153819 -
           ((C7990 * C153927 + (C7133 + C7132 + C7131) * C70415) * C153722 +
            (C77862 * C153927 + (C7130 + C7129 + C7128) * C70415) * C73969) *
               C153783 * C1251) *
              C1254 +
          (((C7142 * C70415 + C78460 * C153927) * C73969 +
            ((C7136 + C7135 + C7134) * C70415 +
             (C7998 + C7999 + C8000) * C153927) *
                C153722) *
               C153783 * C1251 -
           (((C7059 * C3372 + C7409 + C7409 + C154146 * C3380 + C7057 * C1917 +
              C7410 + C7410 + C154171 * C1927 + C7055 * C339 + C7411 + C7411 +
              C154182 * C363) *
                 C153927 +
             (C8000 + C7999 + C7998) * C70415) *
                C153722 +
            ((C7447 + C7446 + C7445) * C153927 + C7990 * C70415) * C73969) *
               C153783 * C153819) *
              C1255)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C7055 * C136 + C7062 + C7062 + C154182 * C152 + C7057 * C556 +
             C7063 + C7063 + C154171 * C580 + C7059 * C557 + C7064 + C7064 +
             C154146 * C581) *
                C70415 +
            (C30715 + C30716 + C30717) * C153927) *
               C73969 +
           ((C7128 + C7129 + C7130) * C70415 + C77861 * C153927) * C153722) *
              C153783 * C1338 -
          ((C30702 * C153927 + C77862 * C70415) * C153722 +
           ((C30720 + C30719 + C30718) * C153927 +
            (C30717 + C30716 + C30715) * C70415) *
               C73969) *
              C153783 * C1339 +
          ((C30728 * C70415 + (C30723 + C30722 + C30721) * C153927) * C73969 +
           (C77863 * C70415 + (C30724 + C30725 + C30726) * C153927) * C153722) *
              C153783 * C1340 -
          (((C7059 * C28359 + C30687 + C30687 + C154146 * C28363 +
             C7057 * C5558 + C30688 + C30688 + C154171 * C5564 + C7055 * C3084 +
             C30689 + C30689 + C154182 * C3092) *
                C153927 +
            (C30726 + C30725 + C30724) * C70415) *
               C153722 +
           ((C32122 + C32121 + C32120) * C153927 + C32113 * C70415) * C73969) *
              C153783 * C1341) *
         C153748) /
            (p * q * std::sqrt(p + q));
    d2ee[40] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C153882 * C152) * C154188 +
              C3138 * C154184 + C3139 * C154174 + C3142 * C154116) *
                 C73969 +
             (C73972 + C73973 + C73974 + C73975) * C153722) *
                C2058 -
            ((C74380 + C74381 + C74382 + C74383) * C153722 +
             (C5574 * C154116 + C4205 * C154174 + C4206 * C154184 +
              (C134 * C556 + C601 + C601 + C153882 * C580) * C154188) *
                 C73969) *
                C153847) *
               C154093 +
           (((C4206 * C154188 + C4205 * C154184 + C5574 * C154174 +
              C28789 * C154116) *
                 C73969 +
             (C75042 + C75043 + C75044 + C75045) * C153722) *
                C153847 -
            ((C74178 + C74179 + C74180 + C74181) * C153722 +
             (C4591 * C154116 + C3142 * C154174 + C3139 * C154184 +
              C3138 * C154188) *
                 C73969) *
                C2058) *
               C153819) *
              C154085 +
          ((((C74383 + C74382 + C74381 + C74380) * C73969 +
             (C74780 + C74781 + C74782 + C74783) * C153722) *
                C153847 -
            ((C73976 + C73977 + C73978 + C73979) * C153722 +
             (C73975 + C73974 + C73973 + C73972) * C73969) *
                C2058) *
               C154093 +
           (((C74181 + C74180 + C74179 + C74178) * C73969 +
             (C74582 + C74583 + C74584 + C74585) * C153722) *
                C2058 -
            (((C134 * C5557 + C5569 + C5569 + C153882 * C5563) * C154116 +
              C4208 * C154174 + C3416 * C154184 + C1123 * C154188) *
                 C153722 +
             (C75045 + C75044 + C75043 + C75042) * C73969) *
                C153847) *
               C153819) *
              C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C153882 * C152) * C70415 +
              C3138 * C153927) *
                 C154187 +
             (C70422 + C70423) * C154180 + C70432 * C154161 +
             C70433 * C154108) *
                C2058 -
            (C71240 * C154108 + C71241 * C154161 + (C70840 + C70841) * C154180 +
             (C4206 * C153927 +
              (C134 * C556 + C601 + C601 + C153882 * C580) * C70415) *
                 C154187) *
                C153847) *
               C154093 +
           (((C4206 * C70415 + C4205 * C153927) * C154187 +
             (C71502 + C71503) * C154180 + (C71504 + C71505) * C154161 +
             (C71506 + C71507) * C154108) *
                C153847 -
            (C71042 * C154108 + C71043 * C154161 + (C70634 + C70635) * C154180 +
             (C3139 * C153927 + C3138 * C70415) * C154187) *
                C2058) *
               C153819) *
              C154085 +
          ((((C70841 + C70840) * C154187 + (C70839 + C70838) * C154180 +
             (C70837 + C70836) * C154161 + (C71242 + C71243) * C154108) *
                C153847 -
            (C70434 * C154108 + C70435 * C154161 + (C70425 + C70424) * C154180 +
             (C70423 + C70422) * C154187) *
                C2058) *
               C154093 +
           (((C70635 + C70634) * C154187 + (C70633 + C70632) * C154180 +
             (C70631 + C70630) * C154161 + (C71044 + C71045) * C154108) *
                C2058 -
            (((C134 * C1916 + C1932 + C1932 + C153882 * C1926) * C153927 +
              C1125 * C70415) *
                 C154108 +
             (C71507 + C71506) * C154161 + (C71505 + C71504) * C154180 +
             (C71503 + C71502) * C154187) *
                C153847) *
               C153819) *
              C153754)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C7055 * C136 + C7062 + C7062 + C154182 * C152 + C7057 * C556 +
               C7063 + C7063 + C154171 * C580 + C7059 * C557 + C7064 + C7064 +
               C154146 * C581) *
                  C70415 +
              (C30715 + C30716 + C30717) * C153927) *
                 C73969 +
             ((C7128 + C7129 + C7130) * C70415 + C77861 * C153927) * C153722) *
                C2058 -
            ((C79139 * C153927 + (C7753 + C7754 + C7755) * C70415) * C153722 +
             ((C31733 + C31734 + C31735) * C153927 +
              (C7059 * C2272 + C7696 + C7696 + C154146 * C2282 + C7057 * C557 +
               C7697 + C7697 + C154171 * C581 + C7055 * C556 + C7698 + C7698 +
               C154182 * C580) *
                  C70415) *
                 C73969) *
                C153847) *
               C154093 +
           ((((C31735 + C31734 + C31733) * C70415 +
              (C31732 + C31731 + C31730) * C153927) *
                 C73969 +
             (C79140 * C70415 + (C31736 + C31737 + C31738) * C153927) *
                 C153722) *
                C153847 -
            ((C30702 * C153927 + C77862 * C70415) * C153722 +
             ((C30720 + C30719 + C30718) * C153927 +
              (C30717 + C30716 + C30715) * C70415) *
                 C73969) *
                C2058) *
               C153819) *
              C154085 +
          (((((C7755 + C7754 + C7753) * C70415 + C79140 * C153927) * C73969 +
             ((C7752 + C7751 + C7750) * C70415 +
              (C8572 + C8573 + C8574) * C153927) *
                 C153722) *
                C153847 -
            ((C7990 * C153927 + (C7133 + C7132 + C7131) * C70415) * C153722 +
             (C77862 * C153927 + (C7130 + C7129 + C7128) * C70415) * C73969) *
                C2058) *
               C154093 +
           (((C77861 * C70415 + C77863 * C153927) * C73969 +
             (C78460 * C70415 + (C7445 + C7446 + C7447) * C153927) * C153722) *
                C2058 -
            (((C7059 * C6156 + C9910 + C9910 + C154146 * C6168 + C7057 * C3371 +
               C9911 + C9911 + C154171 * C3379 + C7055 * C1918 + C9912 + C9912 +
               C154182 * C1928) *
                  C153927 +
              (C8574 + C8573 + C8572) * C70415) *
                 C153722 +
             ((C31738 + C31737 + C31736) * C153927 + C79139 * C70415) *
                 C73969) *
                C153847) *
               C153819) *
              C153754)) /
            (p * q * std::sqrt(p + q));
    d2ee[41] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C154188 +
             C3138 * C154184 + C3139 * C154174 + C3142 * C154116) *
                C73969 +
            (C73972 + C73973 + C73974 + C73975) * C153722) *
               C154166 -
           ((C74380 + C74381 + C74382 + C74383) * C153722 +
            (C5574 * C154116 + C4205 * C154174 + C4206 * C154184 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C154188) *
                C73969) *
               C154167 +
           (((C134 * C557 + C602 + C602 + C153882 * C581) * C154188 +
             C4830 * C154184 + C4831 * C154174 + C29138 * C154116) *
                C73969 +
            (C74384 + C74385 + C74386 + C74387) * C153722) *
               C2574) *
              C154093 +
          (((C4206 * C154188 + C4205 * C154184 + C5574 * C154174 +
             C28789 * C154116) *
                C73969 +
            (C75042 + C75043 + C75044 + C75045) * C153722) *
               C154167 -
           ((C74178 + C74179 + C74180 + C74181) * C153722 +
            (C4591 * C154116 + C3142 * C154174 + C3139 * C154184 +
             C3138 * C154188) *
                C73969) *
               C154166 -
           (((C134 * C28359 + C28366 + C28366 + C153882 * C28363) * C154116 +
             C34998 * C154174 + C3419 * C154184 + C3418 * C154188) *
                C153722 +
            (C29139 * C154116 + C29138 * C154174 + C4831 * C154184 +
             C4830 * C154188) *
                C73969) *
               C2574) *
              C153819) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C70415 +
             C3138 * C153927) *
                C154187 +
            (C70422 + C70423) * C154180 + C70432 * C154161 + C70433 * C154108) *
               C154166 -
           (C71240 * C154108 + C71241 * C154161 + (C70840 + C70841) * C154180 +
            (C4206 * C153927 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C70415) *
                C154187) *
               C154167 +
           (((C134 * C557 + C602 + C602 + C153882 * C581) * C70415 +
             C4830 * C153927) *
                C154187 +
            (C70842 + C70843) * C154180 + (C70844 + C70845) * C154161 +
            (C70846 + C70847) * C154108) *
               C2574) *
              C154093 +
          (((C4206 * C70415 + C4205 * C153927) * C154187 +
            (C71502 + C71503) * C154180 + (C71504 + C71505) * C154161 +
            (C71506 + C71507) * C154108) *
               C154167 -
           (C71042 * C154108 + C71043 * C154161 + (C70634 + C70635) * C154180 +
            (C3139 * C153927 + C3138 * C70415) * C154187) *
               C154166 -
           (((C134 * C3372 + C3403 + C3403 + C153882 * C3380) * C153927 +
             C11810 * C70415) *
                C154108 +
            (C3421 * C153927 + C3420 * C70415) * C154161 +
            (C3419 * C153927 + C3418 * C70415) * C154180 +
            (C4831 * C153927 + C4830 * C70415) * C154187) *
               C2574) *
              C153819) *
         C153748) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C7055 * C136 + C7062 + C7062 + C154182 * C152 + C7057 * C556 +
              C7063 + C7063 + C154171 * C580 + C7059 * C557 + C7064 + C7064 +
              C154146 * C581) *
                 C70415 +
             (C30715 + C30716 + C30717) * C153927) *
                C73969 +
            ((C7128 + C7129 + C7130) * C70415 + C77861 * C153927) * C153722) *
               C154166 -
           ((C79139 * C153927 + (C7753 + C7754 + C7755) * C70415) * C153722 +
            ((C31733 + C31734 + C31735) * C153927 +
             (C7059 * C2272 + C7696 + C7696 + C154146 * C2282 + C7057 * C557 +
              C7697 + C7697 + C154171 * C581 + C7055 * C556 + C7698 + C7698 +
              C154182 * C580) *
                 C70415) *
                C73969) *
               C154167 +
           (((C7055 * C557 + C7699 + C7699 + C154182 * C581 + C7057 * C2272 +
              C7700 + C7700 + C154171 * C2282 + C7059 * C7665 + C7701 + C7701 +
              C154146 * C7673) *
                 C70415 +
             (C32371 + C32372 + C32373) * C153927) *
                C73969 +
            ((C7756 + C7757 + C7758) * C70415 +
             (C78166 + C78167 + C78168) * C153927) *
                C153722) *
               C2574) *
              C154093 +
          ((((C31735 + C31734 + C31733) * C70415 +
             (C31732 + C31731 + C31730) * C153927) *
                C73969 +
            (C79140 * C70415 + (C31736 + C31737 + C31738) * C153927) *
                C153722) *
               C154167 -
           ((C30702 * C153927 + C77862 * C70415) * C153722 +
            ((C30720 + C30719 + C30718) * C153927 +
             (C30717 + C30716 + C30715) * C70415) *
                C73969) *
               C154166 -
           (((C7059 * C30947 + C30956 + C30956 + C154146 * C30951 +
              C7057 * C6158 + C30957 + C30957 + C154171 * C6170 +
              C7055 * C3370 + C30958 + C30958 + C154182 * C3378) *
                 C153927 +
             (C78168 + C78167 + C78166) * C70415) *
                C153722 +
            ((C32376 + C32375 + C32374) * C153927 +
             (C32373 + C32372 + C32371) * C70415) *
                C73969) *
               C2574) *
              C153819) *
         C153748) /
            (p * q * std::sqrt(p + q));
    d2ee[42] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C134 * C136 + C161 + C161 + C153882 * C152) * C70415 +
                 C3138 * C153927) *
                    C154187 +
                (C70422 + C70423) * C154180 + C70432 * C154161 +
                C70433 * C154108) *
                   C2058 -
               (C71240 * C154108 + C71241 * C154161 +
                (C70840 + C70841) * C154180 +
                (C4206 * C153927 +
                 (C134 * C556 + C601 + C601 + C153882 * C580) * C70415) *
                    C154187) *
                   C153847) *
                  C153767 * C1253 +
              (((C70841 + C70840) * C154187 + (C70839 + C70838) * C154180 +
                (C70837 + C70836) * C154161 + (C71242 + C71243) * C154108) *
                   C153847 -
               (C70434 * C154108 + C70435 * C154161 +
                (C70425 + C70424) * C154180 + (C70423 + C70422) * C154187) *
                   C2058) *
                  C153767 * C1254 +
              ((C70432 * C154187 + C70433 * C154180 +
                (C70429 + C70428) * C154161 + (C70430 + C70431) * C154108) *
                   C2058 -
               (((C134 * C1086 + C1113 + C1113 + C153882 * C1098) * C153927 +
                 C918 * C70415) *
                    C154108 +
                (C71243 + C71242) * C154161 + C71240 * C154180 +
                C71241 * C154187) *
                   C153847) *
                  C153767 * C1255) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C134 * C136 + C161 + C161 + C153882 * C152) * C70415 +
                 C3138 * C153927) *
                    C154187 +
                (C70422 + C70423) * C154180 + C70432 * C154161 +
                C70433 * C154108) *
                   C2058 -
               (C71240 * C154108 + C71241 * C154161 +
                (C70840 + C70841) * C154180 +
                (C4206 * C153927 +
                 (C134 * C556 + C601 + C601 + C153882 * C580) * C70415) *
                    C154187) *
                   C153847) *
                  C326 +
              (((C4206 * C70415 + C4205 * C153927) * C154187 +
                (C71502 + C71503) * C154180 + (C71504 + C71505) * C154161 +
                (C71506 + C71507) * C154108) *
                   C153847 -
               (C71042 * C154108 + C71043 * C154161 +
                (C70634 + C70635) * C154180 +
                (C3139 * C153927 + C3138 * C70415) * C154187) *
                   C2058) *
                  C327 +
              (((C3139 * C70415 + C3142 * C153927) * C154187 +
                (C70636 + C70637) * C154180 + (C70638 + C70639) * C154161 +
                (C70640 + C70641) * C154108) *
                   C2058 -
               (((C134 * C4171 + C4196 + C4196 + C153882 * C4179) * C153927 +
                 C3877 * C70415) *
                    C154108 +
                (C4208 * C153927 + C3416 * C70415) * C154161 +
                (C4207 * C153927 + C3417 * C70415) * C154180 +
                (C5574 * C153927 + C4205 * C70415) * C154187) *
                   C153847) *
                  C328) *
             C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C70415 +
            C3138 * C153927) *
               C154187 +
           (C70422 + C70423) * C154180 + C70432 * C154161 + C70433 * C154108) *
              C2264 -
          (C71240 * C154108 + C71241 * C154161 + (C70840 + C70841) * C154180 +
           (C4206 * C153927 +
            (C134 * C556 + C601 + C601 + C153882 * C580) * C70415) *
               C154187) *
              C2265 +
          (((C134 * C557 + C602 + C602 + C153882 * C581) * C70415 +
            C4830 * C153927) *
               C154187 +
           (C70842 + C70843) * C154180 + (C70844 + C70845) * C154161 +
           (C70846 + C70847) * C154108) *
              C2266 -
          (((C134 * C8529 + C14154 + C14154 + C153882 * C8531) * C153927 +
            (C134 * C2269 + C2285 + C2285 + C153882 * C2279) * C70415) *
               C154108 +
           ((C134 * C6157 + C6176 + C6176 + C153882 * C6169) * C153927 +
            (C134 * C2270 + C2286 + C2286 + C153882 * C2280) * C70415) *
               C154161 +
           ((C134 * C6159 + C6178 + C6178 + C153882 * C6171) * C153927 +
            (C134 * C2271 + C2287 + C2287 + C153882 * C2281) * C70415) *
               C154180 +
           ((C134 * C6161 + C6180 + C6180 + C153882 * C6173) * C153927 +
            (C134 * C2272 + C2288 + C2288 + C153882 * C2282) * C70415) *
               C154187) *
              C2267) *
         C153767 * C153748) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C154188 +
             C3138 * C154184 + C3139 * C154174 + C3142 * C154116) *
                C73969 +
            (C73972 + C73973 + C73974 + C73975) * C153722) *
               C2058 -
           ((C74380 + C74381 + C74382 + C74383) * C153722 +
            (C5574 * C154116 + C4205 * C154174 + C4206 * C154184 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C154188) *
                C73969) *
               C153847) *
              C153767 * C1253 +
          (((C74383 + C74382 + C74381 + C74380) * C73969 +
            (C74780 + C74781 + C74782 + C74783) * C153722) *
               C153847 -
           ((C73976 + C73977 + C73978 + C73979) * C153722 +
            (C73975 + C73974 + C73973 + C73972) * C73969) *
               C2058) *
              C153767 * C1254 +
          (((C73979 + C73978 + C73977 + C73976) * C73969 +
            (C73980 + C73981 + C73982 + C73983) * C153722) *
               C2058 -
           (((C134 * C4171 + C4196 + C4196 + C153882 * C4179) * C154116 +
             C3877 * C154174 + C1124 * C154184 + C634 * C154188) *
                C153722 +
            (C74783 + C74782 + C74781 + C74780) * C73969) *
               C153847) *
              C153767 * C1255)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C154188 +
             C3138 * C154184 + C3139 * C154174 + C3142 * C154116) *
                C73969 +
            (C73972 + C73973 + C73974 + C73975) * C153722) *
               C2058 -
           ((C74380 + C74381 + C74382 + C74383) * C153722 +
            (C5574 * C154116 + C4205 * C154174 + C4206 * C154184 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C154188) *
                C73969) *
               C153847) *
              C326 +
          (((C4206 * C154188 + C4205 * C154184 + C5574 * C154174 +
             C28789 * C154116) *
                C73969 +
            (C75042 + C75043 + C75044 + C75045) * C153722) *
               C153847 -
           ((C74178 + C74179 + C74180 + C74181) * C153722 +
            (C4591 * C154116 + C3142 * C154174 + C3139 * C154184 +
             C3138 * C154188) *
                C73969) *
               C2058) *
              C327 +
          (((C3139 * C154188 + C3142 * C154184 + C4591 * C154174 +
             C28235 * C154116) *
                C73969 +
            (C74182 + C74183 + C74184 + C74185) * C153722) *
               C2058 -
           (((C134 * C28773 + C28784 + C28784 + C153882 * C28777) * C154116 +
             C28790 * C154174 + C4207 * C154184 + C3417 * C154188) *
                C153722 +
            (C29554 * C154116 + C28789 * C154174 + C5574 * C154184 +
             C4205 * C154188) *
                C73969) *
               C153847) *
              C328) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C154188 +
            C3138 * C154184 + C3139 * C154174 + C3142 * C154116) *
               C73969 +
           (C73972 + C73973 + C73974 + C73975) * C153722) *
              C2264 -
          ((C74380 + C74381 + C74382 + C74383) * C153722 +
           (C5574 * C154116 + C4205 * C154174 + C4206 * C154184 +
            (C134 * C556 + C601 + C601 + C153882 * C580) * C154188) *
               C73969) *
              C2265 +
          (((C134 * C557 + C602 + C602 + C153882 * C581) * C154188 +
            C4830 * C154184 + C4831 * C154174 + C29138 * C154116) *
               C73969 +
           (C74384 + C74385 + C74386 + C74387) * C153722) *
              C2266 -
          (((C134 * C31684 + C37340 + C37340 + C153882 * C31686) * C154116 +
            (C134 * C6158 + C6177 + C6177 + C153882 * C6170) * C154174 +
            (C134 * C6159 + C6178 + C6178 + C153882 * C6171) * C154184 +
            (C134 * C2271 + C2287 + C2287 + C153882 * C2281) * C154188) *
               C153722 +
           ((C134 * C29881 + C29888 + C29888 + C153882 * C29885) * C154116 +
            (C134 * C6160 + C6179 + C6179 + C153882 * C6172) * C154174 +
            (C134 * C6161 + C6180 + C6180 + C153882 * C6173) * C154184 +
            (C134 * C2272 + C2288 + C2288 + C153882 * C2282) * C154188) *
               C73969) *
              C2267) *
         C153767 * C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C7055 * C136 + C7062 + C7062 + C154182 * C152 + C7057 * C556 +
              C7063 + C7063 + C154171 * C580 + C7059 * C557 + C7064 + C7064 +
              C154146 * C581) *
                 C70415 +
             (C30715 + C30716 + C30717) * C153927) *
                C73969 +
            ((C7128 + C7129 + C7130) * C70415 + C77861 * C153927) * C153722) *
               C2058 -
           ((C79139 * C153927 + (C7753 + C7754 + C7755) * C70415) * C153722 +
            ((C31733 + C31734 + C31735) * C153927 +
             (C7059 * C2272 + C7696 + C7696 + C154146 * C2282 + C7057 * C557 +
              C7697 + C7697 + C154171 * C581 + C7055 * C556 + C7698 + C7698 +
              C154182 * C580) *
                 C70415) *
                C73969) *
               C153847) *
              C153767 * C1253 +
          ((((C7755 + C7754 + C7753) * C70415 + C79140 * C153927) * C73969 +
            ((C7752 + C7751 + C7750) * C70415 +
             (C8572 + C8573 + C8574) * C153927) *
                C153722) *
               C153847 -
           ((C7990 * C153927 + (C7133 + C7132 + C7131) * C70415) * C153722 +
            (C77862 * C153927 + (C7130 + C7129 + C7128) * C70415) * C73969) *
               C2058) *
              C153767 * C1254 +
          (((C7142 * C70415 + C78460 * C153927) * C73969 +
            ((C7136 + C7135 + C7134) * C70415 +
             (C7998 + C7999 + C8000) * C153927) *
                C153722) *
               C2058 -
           (((C7059 * C8529 + C8554 + C8554 + C154146 * C8531 + C7057 * C1486 +
              C8555 + C8555 + C154171 * C1496 + C7055 * C1084 + C8556 + C8556 +
              C154182 * C1096) *
                 C153927 +
             (C8239 + C8238 + C8237) * C70415) *
                C153722 +
            ((C8574 + C8573 + C8572) * C153927 + C8229 * C70415) * C73969) *
               C153847) *
              C153767 * C1255)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C7055 * C136 + C7062 + C7062 + C154182 * C152 + C7057 * C556 +
              C7063 + C7063 + C154171 * C580 + C7059 * C557 + C7064 + C7064 +
              C154146 * C581) *
                 C70415 +
             (C30715 + C30716 + C30717) * C153927) *
                C73969 +
            ((C7128 + C7129 + C7130) * C70415 + C77861 * C153927) * C153722) *
               C2058 -
           ((C79139 * C153927 + (C7753 + C7754 + C7755) * C70415) * C153722 +
            ((C31733 + C31734 + C31735) * C153927 +
             (C7059 * C2272 + C7696 + C7696 + C154146 * C2282 + C7057 * C557 +
              C7697 + C7697 + C154171 * C581 + C7055 * C556 + C7698 + C7698 +
              C154182 * C580) *
                 C70415) *
                C73969) *
               C153847) *
              C326 +
          ((((C31735 + C31734 + C31733) * C70415 +
             (C31732 + C31731 + C31730) * C153927) *
                C73969 +
            (C79140 * C70415 + (C31736 + C31737 + C31738) * C153927) *
                C153722) *
               C153847 -
           ((C30702 * C153927 + C77862 * C70415) * C153722 +
            ((C30720 + C30719 + C30718) * C153927 +
             (C30717 + C30716 + C30715) * C70415) *
                C73969) *
               C2058) *
              C327 +
          (((C30728 * C70415 + (C30723 + C30722 + C30721) * C153927) * C73969 +
            (C77863 * C70415 + (C30724 + C30725 + C30726) * C153927) *
                C153722) *
               C2058 -
           (((C7059 * C31684 + C31709 + C31709 + C154146 * C31686 +
              C7057 * C4810 + C31710 + C31710 + C154171 * C4816 +
              C7055 * C4169 + C31711 + C31711 + C154182 * C4177) *
                 C153927 +
             (C31738 + C31737 + C31736) * C70415) *
                C153722 +
            ((C33122 + C33121 + C33120) * C153927 + C33113 * C70415) * C73969) *
               C153847) *
              C328) *
         C153748) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C7055 * C136 + C7062 + C7062 + C154182 * C152 + C7057 * C556 +
             C7063 + C7063 + C154171 * C580 + C7059 * C557 + C7064 + C7064 +
             C154146 * C581) *
                C70415 +
            (C30715 + C30716 + C30717) * C153927) *
               C73969 +
           ((C7128 + C7129 + C7130) * C70415 + C77861 * C153927) * C153722) *
              C2264 -
          ((C79139 * C153927 + (C7753 + C7754 + C7755) * C70415) * C153722 +
           ((C31733 + C31734 + C31735) * C153927 +
            (C7059 * C2272 + C7696 + C7696 + C154146 * C2282 + C7057 * C557 +
             C7697 + C7697 + C154171 * C581 + C7055 * C556 + C7698 + C7698 +
             C154182 * C580) *
                C70415) *
               C73969) *
              C2265 +
          (((C7055 * C557 + C7699 + C7699 + C154182 * C581 + C7057 * C2272 +
             C7700 + C7700 + C154171 * C2282 + C7059 * C7665 + C7701 + C7701 +
             C154146 * C7673) *
                C70415 +
            (C32371 + C32372 + C32373) * C153927) *
               C73969 +
           ((C7756 + C7757 + C7758) * C70415 +
            (C78166 + C78167 + C78168) * C153927) *
               C153722) *
              C2266 -
          (((C7059 * C56080 + C81655 + C81655 + C154146 * C56082 +
             C7057 * C9166 + C81656 + C81656 + C154171 * C9172 + C7055 * C6159 +
             C81657 + C81657 + C154182 * C6171) *
                C153927 +
            (C7059 * C10501 + C10513 + C10513 + C154146 * C10507 +
             C7057 * C7666 + C10514 + C10514 + C154171 * C7674 + C7055 * C2271 +
             C10515 + C10515 + C154182 * C2281) *
                C70415) *
               C153722 +
           ((C7059 * C33705 + C33714 + C33714 + C154146 * C33709 +
             C7057 * C9167 + C33715 + C33715 + C154171 * C9173 + C7055 * C6161 +
             C33716 + C33716 + C154182 * C6173) *
                C153927 +
            (C7059 * C10502 + C10516 + C10516 + C154146 * C10508 +
             C7057 * C7665 + C10517 + C10517 + C154171 * C7673 + C7055 * C2272 +
             C10518 + C10518 + C154182 * C2282) *
                C70415) *
               C73969) *
              C2267) *
         C153767 * C153748) /
            (p * q * std::sqrt(p + q));
    d2ee[43] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C154188 +
             C3138 * C154184 + C3139 * C154174 + C3142 * C154116) *
                C73969 +
            (C73972 + C73973 + C73974 + C73975) * C153722) *
               C154166 -
           ((C74380 + C74381 + C74382 + C74383) * C153722 +
            (C5574 * C154116 + C4205 * C154174 + C4206 * C154184 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C154188) *
                C73969) *
               C154167 +
           (((C134 * C557 + C602 + C602 + C153882 * C581) * C154188 +
             C4830 * C154184 + C4831 * C154174 + C29138 * C154116) *
                C73969 +
            (C74384 + C74385 + C74386 + C74387) * C153722) *
               C2574) *
              C153767 * C154085 +
          (((C74383 + C74382 + C74381 + C74380) * C73969 +
            (C74780 + C74781 + C74782 + C74783) * C153722) *
               C154167 -
           ((C73976 + C73977 + C73978 + C73979) * C153722 +
            (C73975 + C73974 + C73973 + C73972) * C73969) *
               C154166 -
           (((C134 * C4809 + C4823 + C4823 + C153882 * C4815) * C154116 +
             C3421 * C154174 + C3420 * C154184 + C638 * C154188) *
                C153722 +
            (C74387 + C74386 + C74385 + C74384) * C73969) *
               C2574) *
              C153767 * C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C70415 +
             C3138 * C153927) *
                C154187 +
            (C70422 + C70423) * C154180 + C70432 * C154161 + C70433 * C154108) *
               C154166 -
           (C71240 * C154108 + C71241 * C154161 + (C70840 + C70841) * C154180 +
            (C4206 * C153927 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C70415) *
                C154187) *
               C154167 +
           (((C134 * C557 + C602 + C602 + C153882 * C581) * C70415 +
             C4830 * C153927) *
                C154187 +
            (C70842 + C70843) * C154180 + (C70844 + C70845) * C154161 +
            (C70846 + C70847) * C154108) *
               C2574) *
              C153767 * C154085 +
          (((C70841 + C70840) * C154187 + (C70839 + C70838) * C154180 +
            (C70837 + C70836) * C154161 + (C71242 + C71243) * C154108) *
               C154167 -
           (C70434 * C154108 + C70435 * C154161 + (C70425 + C70424) * C154180 +
            (C70423 + C70422) * C154187) *
               C154166 -
           (((C134 * C1485 + C1501 + C1501 + C153882 * C1495) * C153927 +
             C640 * C70415) *
                C154108 +
            (C70847 + C70846) * C154161 + (C70845 + C70844) * C154180 +
            (C70843 + C70842) * C154187) *
               C2574) *
              C153767 * C153754)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C7055 * C136 + C7062 + C7062 + C154182 * C152 + C7057 * C556 +
              C7063 + C7063 + C154171 * C580 + C7059 * C557 + C7064 + C7064 +
              C154146 * C581) *
                 C70415 +
             (C30715 + C30716 + C30717) * C153927) *
                C73969 +
            ((C7128 + C7129 + C7130) * C70415 + C77861 * C153927) * C153722) *
               C154166 -
           ((C79139 * C153927 + (C7753 + C7754 + C7755) * C70415) * C153722 +
            ((C31733 + C31734 + C31735) * C153927 +
             (C7059 * C2272 + C7696 + C7696 + C154146 * C2282 + C7057 * C557 +
              C7697 + C7697 + C154171 * C581 + C7055 * C556 + C7698 + C7698 +
              C154182 * C580) *
                 C70415) *
                C73969) *
               C154167 +
           (((C7055 * C557 + C7699 + C7699 + C154182 * C581 + C7057 * C2272 +
              C7700 + C7700 + C154171 * C2282 + C7059 * C7665 + C7701 + C7701 +
              C154146 * C7673) *
                 C70415 +
             (C32371 + C32372 + C32373) * C153927) *
                C73969 +
            ((C7756 + C7757 + C7758) * C70415 +
             (C78166 + C78167 + C78168) * C153927) *
                C153722) *
               C2574) *
              C153767 * C154085 +
          ((((C7755 + C7754 + C7753) * C70415 + C79140 * C153927) * C73969 +
            ((C7752 + C7751 + C7750) * C70415 +
             (C8572 + C8573 + C8574) * C153927) *
                C153722) *
               C154167 -
           ((C7990 * C153927 + (C7133 + C7132 + C7131) * C70415) * C153722 +
            (C77862 * C153927 + (C7130 + C7129 + C7128) * C70415) * C73969) *
               C154166 -
           (((C7059 * C9165 + C9175 + C9175 + C154146 * C9171 + C7057 * C6157 +
              C9176 + C9176 + C154171 * C6169 + C7055 * C1487 + C9177 + C9177 +
              C154182 * C1497) *
                 C153927 +
             (C7761 + C7760 + C7759) * C70415) *
                C153722 +
            ((C78168 + C78167 + C78166) * C153927 +
             (C7758 + C7757 + C7756) * C70415) *
                C73969) *
               C2574) *
              C153767 * C153754)) /
            (p * q * std::sqrt(p + q));
    d2ee[44] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C70415 +
             C3138 * C153927) *
                C154187 +
            (C70422 + C70423) * C154180 + C70432 * C154161 + C70433 * C154108) *
               C2058 -
           (C71240 * C154108 + C71241 * C154161 + (C70840 + C70841) * C154180 +
            (C4206 * C153927 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C70415) *
                C154187) *
               C153847) *
              C326 +
          (((C4206 * C70415 + C4205 * C153927) * C154187 +
            (C71502 + C71503) * C154180 + (C71504 + C71505) * C154161 +
            (C71506 + C71507) * C154108) *
               C153847 -
           (C71042 * C154108 + C71043 * C154161 + (C70634 + C70635) * C154180 +
            (C3139 * C153927 + C3138 * C70415) * C154187) *
               C2058) *
              C327 +
          (((C3139 * C70415 + C3142 * C153927) * C154187 +
            (C70636 + C70637) * C154180 + (C70638 + C70639) * C154161 +
            (C70640 + C70641) * C154108) *
               C2058 -
           (((C134 * C4171 + C4196 + C4196 + C153882 * C4179) * C153927 +
             C3877 * C70415) *
                C154108 +
            (C4208 * C153927 + C3416 * C70415) * C154161 +
            (C4207 * C153927 + C3417 * C70415) * C154180 +
            (C5574 * C153927 + C4205 * C70415) * C154187) *
               C153847) *
              C328) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C70415 +
             C3138 * C153927) *
                C154187 +
            (C70422 + C70423) * C154180 + C70432 * C154161 + C70433 * C154108) *
               C2058 -
           (C71240 * C154108 + C71241 * C154161 + (C70840 + C70841) * C154180 +
            (C4206 * C153927 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C70415) *
                C154187) *
               C153847) *
              C153767 * C1253 +
          (((C70841 + C70840) * C154187 + (C70839 + C70838) * C154180 +
            (C70837 + C70836) * C154161 + (C71242 + C71243) * C154108) *
               C153847 -
           (C70434 * C154108 + C70435 * C154161 + (C70425 + C70424) * C154180 +
            (C70423 + C70422) * C154187) *
               C2058) *
              C153767 * C1254 +
          ((C70432 * C154187 + C70433 * C154180 + (C70429 + C70428) * C154161 +
            (C70430 + C70431) * C154108) *
               C2058 -
           (((C134 * C1086 + C1113 + C1113 + C153882 * C1098) * C153927 +
             C918 * C70415) *
                C154108 +
            (C71243 + C71242) * C154161 + C71240 * C154180 + C71241 * C154187) *
               C153847) *
              C153767 * C1255)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C154188 +
             C3138 * C154184 + C3139 * C154174 + C3142 * C154116) *
                C73969 +
            (C73972 + C73973 + C73974 + C73975) * C153722) *
               C2058 -
           ((C74380 + C74381 + C74382 + C74383) * C153722 +
            (C5574 * C154116 + C4205 * C154174 + C4206 * C154184 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C154188) *
                C73969) *
               C153847) *
              C153767 * C1253 +
          (((C74383 + C74382 + C74381 + C74380) * C73969 +
            (C74780 + C74781 + C74782 + C74783) * C153722) *
               C153847 -
           ((C73976 + C73977 + C73978 + C73979) * C153722 +
            (C73975 + C73974 + C73973 + C73972) * C73969) *
               C2058) *
              C153767 * C1254 +
          (((C73979 + C73978 + C73977 + C73976) * C73969 +
            (C73980 + C73981 + C73982 + C73983) * C153722) *
               C2058 -
           (((C134 * C4171 + C4196 + C4196 + C153882 * C4179) * C154116 +
             C3877 * C154174 + C1124 * C154184 + C634 * C154188) *
                C153722 +
            (C74783 + C74782 + C74781 + C74780) * C73969) *
               C153847) *
              C153767 * C1255)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C154188 +
             C3138 * C154184 + C3139 * C154174 + C3142 * C154116) *
                C73969 +
            (C73972 + C73973 + C73974 + C73975) * C153722) *
               C2058 -
           ((C74380 + C74381 + C74382 + C74383) * C153722 +
            (C5574 * C154116 + C4205 * C154174 + C4206 * C154184 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C154188) *
                C73969) *
               C153847) *
              C326 +
          (((C4206 * C154188 + C4205 * C154184 + C5574 * C154174 +
             C28789 * C154116) *
                C73969 +
            (C75042 + C75043 + C75044 + C75045) * C153722) *
               C153847 -
           ((C74178 + C74179 + C74180 + C74181) * C153722 +
            (C4591 * C154116 + C3142 * C154174 + C3139 * C154184 +
             C3138 * C154188) *
                C73969) *
               C2058) *
              C327 +
          (((C3139 * C154188 + C3142 * C154184 + C4591 * C154174 +
             C28235 * C154116) *
                C73969 +
            (C74182 + C74183 + C74184 + C74185) * C153722) *
               C2058 -
           (((C134 * C28773 + C28784 + C28784 + C153882 * C28777) * C154116 +
             C28790 * C154174 + C4207 * C154184 + C3417 * C154188) *
                C153722 +
            (C29554 * C154116 + C28789 * C154174 + C5574 * C154184 +
             C4205 * C154188) *
                C73969) *
               C153847) *
              C328) *
         C153748) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C7055 * C136 + C7062 + C7062 + C154182 * C152 + C7057 * C556 +
              C7063 + C7063 + C154171 * C580 + C7059 * C557 + C7064 + C7064 +
              C154146 * C581) *
                 C70415 +
             (C30715 + C30716 + C30717) * C153927) *
                C73969 +
            ((C7128 + C7129 + C7130) * C70415 + C77861 * C153927) * C153722) *
               C2058 -
           ((C79139 * C153927 + (C7753 + C7754 + C7755) * C70415) * C153722 +
            ((C31733 + C31734 + C31735) * C153927 +
             (C7059 * C2272 + C7696 + C7696 + C154146 * C2282 + C7057 * C557 +
              C7697 + C7697 + C154171 * C581 + C7055 * C556 + C7698 + C7698 +
              C154182 * C580) *
                 C70415) *
                C73969) *
               C153847) *
              C153767 * C1253 +
          ((((C7755 + C7754 + C7753) * C70415 + C79140 * C153927) * C73969 +
            ((C7752 + C7751 + C7750) * C70415 +
             (C8572 + C8573 + C8574) * C153927) *
                C153722) *
               C153847 -
           ((C7990 * C153927 + (C7133 + C7132 + C7131) * C70415) * C153722 +
            (C77862 * C153927 + (C7130 + C7129 + C7128) * C70415) * C73969) *
               C2058) *
              C153767 * C1254 +
          (((C7142 * C70415 + C78460 * C153927) * C73969 +
            ((C7136 + C7135 + C7134) * C70415 +
             (C7998 + C7999 + C8000) * C153927) *
                C153722) *
               C2058 -
           (((C7059 * C8529 + C8554 + C8554 + C154146 * C8531 + C7057 * C1486 +
              C8555 + C8555 + C154171 * C1496 + C7055 * C1084 + C8556 + C8556 +
              C154182 * C1096) *
                 C153927 +
             (C8239 + C8238 + C8237) * C70415) *
                C153722 +
            ((C8574 + C8573 + C8572) * C153927 + C8229 * C70415) * C73969) *
               C153847) *
              C153767 * C1255)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C7055 * C136 + C7062 + C7062 + C154182 * C152 + C7057 * C556 +
              C7063 + C7063 + C154171 * C580 + C7059 * C557 + C7064 + C7064 +
              C154146 * C581) *
                 C70415 +
             (C30715 + C30716 + C30717) * C153927) *
                C73969 +
            ((C7128 + C7129 + C7130) * C70415 + C77861 * C153927) * C153722) *
               C2058 -
           ((C79139 * C153927 + (C7753 + C7754 + C7755) * C70415) * C153722 +
            ((C31733 + C31734 + C31735) * C153927 +
             (C7059 * C2272 + C7696 + C7696 + C154146 * C2282 + C7057 * C557 +
              C7697 + C7697 + C154171 * C581 + C7055 * C556 + C7698 + C7698 +
              C154182 * C580) *
                 C70415) *
                C73969) *
               C153847) *
              C326 +
          ((((C31735 + C31734 + C31733) * C70415 +
             (C31732 + C31731 + C31730) * C153927) *
                C73969 +
            (C79140 * C70415 + (C31736 + C31737 + C31738) * C153927) *
                C153722) *
               C153847 -
           ((C30702 * C153927 + C77862 * C70415) * C153722 +
            ((C30720 + C30719 + C30718) * C153927 +
             (C30717 + C30716 + C30715) * C70415) *
                C73969) *
               C2058) *
              C327 +
          (((C30728 * C70415 + (C30723 + C30722 + C30721) * C153927) * C73969 +
            (C77863 * C70415 + (C30724 + C30725 + C30726) * C153927) *
                C153722) *
               C2058 -
           (((C7059 * C31684 + C31709 + C31709 + C154146 * C31686 +
              C7057 * C4810 + C31710 + C31710 + C154171 * C4816 +
              C7055 * C4169 + C31711 + C31711 + C154182 * C4177) *
                 C153927 +
             (C31738 + C31737 + C31736) * C70415) *
                C153722 +
            ((C33122 + C33121 + C33120) * C153927 + C33113 * C70415) * C73969) *
               C153847) *
              C328) *
         C153748) /
            (p * q * std::sqrt(p + q));
    d2ee[45] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
              C14938 + C14938 + C153969 * C580) *
                 C70415 +
             (C19164 + C19165) * C153927) *
                C153717 +
            ((C14991 + C14992) * C70415 + C19130 * C153927) * C153725 +
            C86808 * C82774) *
               C153783 * C154093 -
           (C87682 * C82774 + (C19132 * C153927 + C19133 * C70415) * C153725 +
            ((C19166 + C19167) * C153927 + (C19165 + C19164) * C70415) *
                C153717) *
               C153783 * C153819) *
              C154162 +
          (((C19130 * C70415 + C19138 * C153927) * C153717 +
            (C18830 * C70415 + C19143 * C153927) * C153725 +
            (C19774 * C70415 + (C15281 + C15282) * C153927) * C82774) *
               C153783 * C153819 -
           (C86809 * C82774 +
            (C15752 * C153927 + (C14994 + C14993) * C70415) * C153725 +
            (C19133 * C153927 + (C14992 + C14991) * C70415) * C153717) *
               C153783 * C154093) *
              C154163 +
          ((C86808 * C153717 + (C15002 * C70415 + C19774 * C153927) * C153725 +
            ((C14998 + C14997) * C70415 + (C15765 + C15766) * C153927) *
                C82774) *
               C153783 * C154093 -
           (((C14934 * C1916 + C15245 + C15245 + C153969 * C1926 +
              C14932 * C340 + C15246 + C15246 + C154109 * C364) *
                 C153927 +
             (C15766 + C15765) * C70415) *
                C82774 +
            ((C15282 + C15281) * C153927 + C15751 * C70415) * C153725 +
            C87682 * C153717) *
               C153783 * C153819) *
              C774)) /
        (p * q * std::sqrt(p + q));
    d2ee[46] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C14932 * C136 + C14937 + C14937 + C154109 * C152 +
               C14934 * C556 + C14938 + C14938 + C153969 * C580) *
                  C70415 +
              (C19164 + C19165) * C153927) *
                 C153717 +
             ((C14991 + C14992) * C70415 + C19130 * C153927) * C153725 +
             C86808 * C82774) *
                C154094 -
            (C87975 * C82774 +
             (C20456 * C153927 + (C15549 + C15550) * C70415) * C153725 +
             ((C20483 + C20484) * C153927 +
              (C14934 * C557 + C15495 + C15495 + C153969 * C581 +
               C14932 * C556 + C15496 + C15496 + C154109 * C580) *
                  C70415) *
                 C153717) *
                C153847) *
               C154093 +
           ((((C20484 + C20483) * C70415 + (C22275 + C22276) * C153927) *
                 C153717 +
             (C20461 * C70415 + C39751 * C153927) * C153725 +
             (C20466 * C70415 + (C20487 + C20488) * C153927) * C82774) *
                C153847 -
            (C87682 * C82774 + (C19132 * C153927 + C19133 * C70415) * C153725 +
             ((C19166 + C19167) * C153927 + (C19165 + C19164) * C70415) *
                 C153717) *
                C154094) *
               C153819) *
              C329 +
          (((((C15550 + C15549) * C70415 + C20461 * C153927) * C153717 +
             ((C15548 + C15547) * C70415 + C20466 * C153927) * C153725 +
             ((C15546 + C15545) * C70415 + (C16273 + C16274) * C153927) *
                 C82774) *
                C153847 -
            (C86809 * C82774 +
             (C15752 * C153927 + (C14994 + C14993) * C70415) * C153725 +
             (C19133 * C153927 + (C14992 + C14991) * C70415) * C153717) *
                C154094) *
               C154093 +
           (((C19130 * C70415 + C19138 * C153927) * C153717 +
             (C18830 * C70415 + C19143 * C153927) * C153725 +
             (C19774 * C70415 + (C15281 + C15282) * C153927) * C82774) *
                C154094 -
            (((C14934 * C3372 + C17455 + C17455 + C153969 * C3380 +
               C14932 * C1917 + C17456 + C17456 + C154109 * C1927) *
                  C153927 +
              (C16274 + C16273) * C70415) *
                 C82774 +
             ((C20488 + C20487) * C153927 + C20066 * C70415) * C153725 +
             (C39750 * C153927 + C20456 * C70415) * C153717) *
                C153847) *
               C153819) *
              C153754)) /
        (p * q * std::sqrt(p + q));
    d2ee[47] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
              C14938 + C14938 + C153969 * C580) *
                 C70415 +
             (C19164 + C19165) * C153927) *
                C153717 +
            ((C14991 + C14992) * C70415 + C19130 * C153927) * C153725 +
            C86808 * C82774) *
               C153783 * C326 -
           ((C19131 * C153927 + C15752 * C70415) * C82774 +
            (C19132 * C153927 + C19133 * C70415) * C153725 +
            ((C19166 + C19167) * C153927 + (C19165 + C19164) * C70415) *
                C153717) *
               C153783 * C327 +
           ((C38471 * C70415 + C43614 * C153927) * C153717 +
            (C19138 * C70415 + C38473 * C153927) * C153725 +
            (C19143 * C70415 + (C19170 + C19171) * C153927) * C82774) *
               C153783 * C328) *
              C329 +
          (((C19130 * C70415 + C19138 * C153927) * C153717 +
            (C18830 * C70415 + C19143 * C153927) * C153725 +
            (C19774 * C70415 + (C15281 + C15282) * C153927) * C82774) *
               C153783 * C327 -
           (C86809 * C82774 +
            (C15752 * C153927 + (C14994 + C14993) * C70415) * C153725 +
            (C19133 * C153927 + (C14992 + C14991) * C70415) * C153717) *
               C153783 * C326 -
           (((C14934 * C4171 + C16599 + C16599 + C153969 * C4179 +
              C14932 * C1344 + C16600 + C16600 + C154109 * C1354) *
                 C153927 +
             (C15282 + C15281) * C70415) *
                C82774 +
            ((C19171 + C19170) * C153927 + C19131 * C70415) * C153725 +
            (C38472 * C153927 + C19132 * C70415) * C153717) *
               C153783 * C328) *
              C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
             C14938 + C14938 + C153969 * C580) *
                C70415 +
            (C19164 + C19165) * C153927) *
               C153717 +
           ((C14991 + C14992) * C70415 + C19130 * C153927) * C153725 +
           C86808 * C82774) *
              C153783 * C153767 * C130 -
          (C86809 * C82774 +
           (C15752 * C153927 + (C14994 + C14993) * C70415) * C153725 +
           (C19133 * C153927 + (C14992 + C14991) * C70415) * C153717) *
              C153783 * C153767 * C131 +
          (C86808 * C153717 + (C15002 * C70415 + C19774 * C153927) * C153725 +
           ((C14998 + C14997) * C70415 + (C15765 + C15766) * C153927) *
               C82774) *
              C153783 * C153767 * C132 -
          (((C14934 * C1086 + C15757 + C15757 + C153969 * C1098 +
             C14932 * C341 + C15758 + C15758 + C154109 * C365) *
                C153927 +
            (C15000 + C14999) * C70415) *
               C82774 +
           ((C15766 + C15765) * C153927 + C15003 * C70415) * C153725 +
           C86809 * C153717) *
              C153783 * C153767 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
              C14938 + C14938 + C153969 * C580) *
                 C70415 +
             (C19164 + C19165) * C153927) *
                C153717 +
            ((C14991 + C14992) * C70415 + C19130 * C153927) * C153725 +
            C86808 * C82774) *
               C549 -
           ((C20066 * C153927 + C15962 * C70415) * C82774 +
            (C20456 * C153927 + (C15549 + C15550) * C70415) * C153725 +
            ((C20483 + C20484) * C153927 +
             (C14934 * C557 + C15495 + C15495 + C153969 * C581 + C14932 * C556 +
              C15496 + C15496 + C154109 * C580) *
                 C70415) *
                C153717) *
               C550 +
           (((C14932 * C557 + C15497 + C15497 + C154109 * C581 +
              C14934 * C2272 + C15498 + C15498 + C153969 * C2282) *
                 C70415 +
             (C21293 + C21294) * C153927) *
                C153717 +
            ((C15551 + C15552) * C70415 + (C19478 + C19479) * C153927) *
                C153725 +
            ((C15553 + C15554) * C70415 + (C19480 + C19481) * C153927) *
                C82774) *
               C551) *
              C153767 * C329 +
          ((((C15550 + C15549) * C70415 + C20461 * C153927) * C153717 +
            ((C15548 + C15547) * C70415 + C20466 * C153927) * C153725 +
            ((C15546 + C15545) * C70415 + (C16273 + C16274) * C153927) *
                C82774) *
               C550 -
           (C86809 * C82774 +
            (C15752 * C153927 + (C14994 + C14993) * C70415) * C153725 +
            (C19133 * C153927 + (C14992 + C14991) * C70415) * C153717) *
               C549 -
           (((C14934 * C8529 + C16801 + C16801 + C153969 * C8531 +
              C14932 * C1486 + C16802 + C16802 + C154109 * C1496) *
                 C153927 +
             (C15556 + C15555) * C70415) *
                C82774 +
            ((C19481 + C19480) * C153927 + (C15554 + C15553) * C70415) *
                C153725 +
            ((C19479 + C19478) * C153927 + (C15552 + C15551) * C70415) *
                C153717) *
               C551) *
              C153767 * C153754)) /
            (p * q * std::sqrt(p + q));
    d2ee[48] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
              C14938 + C14938 + C153969 * C580) *
                 C70415 +
             (C19164 + C19165) * C153927) *
                C153717 +
            ((C14991 + C14992) * C70415 + C19130 * C153927) * C153725 +
            C86808 * C82774) *
               C154094 -
           (C87975 * C82774 +
            (C20456 * C153927 + (C15549 + C15550) * C70415) * C153725 +
            ((C20483 + C20484) * C153927 +
             (C14934 * C557 + C15495 + C15495 + C153969 * C581 + C14932 * C556 +
              C15496 + C15496 + C154109 * C580) *
                 C70415) *
                C153717) *
               C153847) *
              C153767 * C154162 +
          ((((C15550 + C15549) * C70415 + C20461 * C153927) * C153717 +
            ((C15548 + C15547) * C70415 + C20466 * C153927) * C153725 +
            ((C15546 + C15545) * C70415 + (C16273 + C16274) * C153927) *
                C82774) *
               C153847 -
           (C86809 * C82774 +
            (C15752 * C153927 + (C14994 + C14993) * C70415) * C153725 +
            (C19133 * C153927 + (C14992 + C14991) * C70415) * C153717) *
               C154094) *
              C153767 * C154163 +
          ((C86808 * C153717 + (C15002 * C70415 + C19774 * C153927) * C153725 +
            ((C14998 + C14997) * C70415 + (C15765 + C15766) * C153927) *
                C82774) *
               C154094 -
           (((C14934 * C1485 + C16255 + C16255 + C153969 * C1495 +
              C14932 * C1085 + C16256 + C16256 + C154109 * C1097) *
                 C153927 +
             (C15976 + C15975) * C70415) *
                C82774 +
            ((C16274 + C16273) * C153927 + C15961 * C70415) * C153725 +
            C87975 * C153717) *
               C153847) *
              C153767 * C774)) /
        (p * q * std::sqrt(p + q));
    d2ee[49] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
             C14938 + C14938 + C153969 * C580) *
                C70415 +
            (C19164 + C19165) * C153927) *
               C153717 +
           ((C14991 + C14992) * C70415 + C19130 * C153927) * C153725 +
           C86808 * C82774) *
              C153783 * C153767 * C130 -
          (C86809 * C82774 +
           (C15752 * C153927 + (C14994 + C14993) * C70415) * C153725 +
           (C19133 * C153927 + (C14992 + C14991) * C70415) * C153717) *
              C153783 * C153767 * C131 +
          (C86808 * C153717 + (C15002 * C70415 + C19774 * C153927) * C153725 +
           ((C14998 + C14997) * C70415 + (C15765 + C15766) * C153927) *
               C82774) *
              C153783 * C153767 * C132 -
          (((C14934 * C1086 + C15757 + C15757 + C153969 * C1098 +
             C14932 * C341 + C15758 + C15758 + C154109 * C365) *
                C153927 +
            (C15000 + C14999) * C70415) *
               C82774 +
           ((C15766 + C15765) * C153927 + C15003 * C70415) * C153725 +
           C86809 * C153717) *
              C153783 * C153767 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
              C14938 + C14938 + C153969 * C580) *
                 C70415 +
             (C19164 + C19165) * C153927) *
                C153717 +
            ((C14991 + C14992) * C70415 + C19130 * C153927) * C153725 +
            C86808 * C82774) *
               C153783 * C326 -
           ((C19131 * C153927 + C15752 * C70415) * C82774 +
            (C19132 * C153927 + C19133 * C70415) * C153725 +
            ((C19166 + C19167) * C153927 + (C19165 + C19164) * C70415) *
                C153717) *
               C153783 * C327 +
           ((C38471 * C70415 + C43614 * C153927) * C153717 +
            (C19138 * C70415 + C38473 * C153927) * C153725 +
            (C19143 * C70415 + (C19170 + C19171) * C153927) * C82774) *
               C153783 * C328) *
              C329 +
          (((C19130 * C70415 + C19138 * C153927) * C153717 +
            (C18830 * C70415 + C19143 * C153927) * C153725 +
            (C19774 * C70415 + (C15281 + C15282) * C153927) * C82774) *
               C153783 * C327 -
           (C86809 * C82774 +
            (C15752 * C153927 + (C14994 + C14993) * C70415) * C153725 +
            (C19133 * C153927 + (C14992 + C14991) * C70415) * C153717) *
               C153783 * C326 -
           (((C14934 * C4171 + C16599 + C16599 + C153969 * C4179 +
              C14932 * C1344 + C16600 + C16600 + C154109 * C1354) *
                 C153927 +
             (C15282 + C15281) * C70415) *
                C82774 +
            ((C19171 + C19170) * C153927 + C19131 * C70415) * C153725 +
            (C38472 * C153927 + C19132 * C70415) * C153717) *
               C153783 * C328) *
              C153754)) /
            (p * q * std::sqrt(p + q));
    d2ee[50] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
              C14938 + C14938 + C153969 * C580) *
                 C70415 +
             (C19164 + C19165) * C153927) *
                C153717 +
            ((C14991 + C14992) * C70415 + C19130 * C153927) * C153725 +
            C86808 * C82774) *
               C153783 * C154164 -
           (C87682 * C82774 + (C19132 * C153927 + C19133 * C70415) * C153725 +
            ((C19166 + C19167) * C153927 + (C19165 + C19164) * C70415) *
                C153717) *
               C153783 * C154165 +
           ((C38471 * C70415 + C43614 * C153927) * C153717 +
            (C19138 * C70415 + C38473 * C153927) * C153725 +
            (C19143 * C70415 + (C19170 + C19171) * C153927) * C82774) *
               C153783 * C1629) *
              C154085 +
          (((C19130 * C70415 + C19138 * C153927) * C153717 +
            (C18830 * C70415 + C19143 * C153927) * C153725 +
            (C19774 * C70415 + (C15281 + C15282) * C153927) * C82774) *
               C153783 * C154165 -
           (C86809 * C82774 +
            (C15752 * C153927 + (C14994 + C14993) * C70415) * C153725 +
            (C19133 * C153927 + (C14992 + C14991) * C70415) * C153717) *
               C153783 * C154164 -
           (((C14934 * C4171 + C16599 + C16599 + C153969 * C4179 +
              C14932 * C1344 + C16600 + C16600 + C154109 * C1354) *
                 C153927 +
             (C15282 + C15281) * C70415) *
                C82774 +
            ((C19171 + C19170) * C153927 + C19131 * C70415) * C153725 +
            (C38472 * C153927 + C19132 * C70415) * C153717) *
               C153783 * C1629) *
              C153754)) /
        (p * q * std::sqrt(p + q));
    d2ee[51] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
              C14938 + C14938 + C153969 * C580) *
                 C70415 +
             (C19164 + C19165) * C153927) *
                C153717 +
            ((C14991 + C14992) * C70415 + C19130 * C153927) * C153725 +
            C86808 * C82774) *
               C154094 -
           (C87975 * C82774 +
            (C20456 * C153927 + (C15549 + C15550) * C70415) * C153725 +
            ((C20483 + C20484) * C153927 +
             (C14934 * C557 + C15495 + C15495 + C153969 * C581 + C14932 * C556 +
              C15496 + C15496 + C154109 * C580) *
                 C70415) *
                C153717) *
               C153847) *
              C154164 +
          ((((C20484 + C20483) * C70415 + (C22275 + C22276) * C153927) *
                C153717 +
            (C20461 * C70415 + C39751 * C153927) * C153725 +
            (C20466 * C70415 + (C20487 + C20488) * C153927) * C82774) *
               C153847 -
           (C87682 * C82774 + (C19132 * C153927 + C19133 * C70415) * C153725 +
            ((C19166 + C19167) * C153927 + (C19165 + C19164) * C70415) *
                C153717) *
               C154094) *
              C154165 +
          (((C38471 * C70415 + C43614 * C153927) * C153717 +
            (C19138 * C70415 + C38473 * C153927) * C153725 +
            (C19143 * C70415 + (C19170 + C19171) * C153927) * C82774) *
               C154094 -
           (((C14934 * C4809 + C22265 + C22265 + C153969 * C4815 +
              C14932 * C4170 + C22266 + C22266 + C154109 * C4178) *
                 C153927 +
             (C20488 + C20487) * C70415) *
                C82774 +
            ((C39761 + C39760) * C153927 + C39750 * C70415) * C153725 +
            (C45644 * C153927 + C41531 * C70415) * C153717) *
               C153847) *
              C1629) *
         C153748) /
        (p * q * std::sqrt(p + q));
    d2ee[52] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
             C14938 + C14938 + C153969 * C580) *
                C70415 +
            (C19164 + C19165) * C153927) *
               C153717 +
           ((C14991 + C14992) * C70415 + C19130 * C153927) * C153725 +
           C86808 * C82774) *
              C153783 * C1338 -
          (C87682 * C82774 + (C19132 * C153927 + C19133 * C70415) * C153725 +
           ((C19166 + C19167) * C153927 + (C19165 + C19164) * C70415) *
               C153717) *
              C153783 * C1339 +
          ((C38471 * C70415 + C43614 * C153927) * C153717 +
           (C19138 * C70415 + C38473 * C153927) * C153725 +
           (C19143 * C70415 + (C19170 + C19171) * C153927) * C82774) *
              C153783 * C1340 -
          (((C14934 * C5557 + C20977 + C20977 + C153969 * C5563 +
             C14932 * C3085 + C20978 + C20978 + C154109 * C3093) *
                C153927 +
            (C19171 + C19170) * C70415) *
               C82774 +
           ((C38483 + C38482) * C153927 + C38472 * C70415) * C153725 +
           (C44779 * C153927 + C40246 * C70415) * C153717) *
              C153783 * C1341) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
              C14938 + C14938 + C153969 * C580) *
                 C70415 +
             (C19164 + C19165) * C153927) *
                C153717 +
            ((C14991 + C14992) * C70415 + C19130 * C153927) * C153725 +
            C86808 * C82774) *
               C153783 * C1251 -
           (C87682 * C82774 + (C19132 * C153927 + C19133 * C70415) * C153725 +
            ((C19166 + C19167) * C153927 + (C19165 + C19164) * C70415) *
                C153717) *
               C153783 * C153819) *
              C1253 +
          (((C19130 * C70415 + C19138 * C153927) * C153717 +
            (C18830 * C70415 + C19143 * C153927) * C153725 +
            (C19774 * C70415 + (C15281 + C15282) * C153927) * C82774) *
               C153783 * C153819 -
           (C86809 * C82774 +
            (C15752 * C153927 + (C14994 + C14993) * C70415) * C153725 +
            (C19133 * C153927 + (C14992 + C14991) * C70415) * C153717) *
               C153783 * C1251) *
              C1254 +
          ((C86808 * C153717 + (C15002 * C70415 + C19774 * C153927) * C153725 +
            ((C14998 + C14997) * C70415 + (C15765 + C15766) * C153927) *
                C82774) *
               C153783 * C1251 -
           (((C14934 * C1916 + C15245 + C15245 + C153969 * C1926 +
              C14932 * C340 + C15246 + C15246 + C154109 * C364) *
                 C153927 +
             (C15766 + C15765) * C70415) *
                C82774 +
            ((C15282 + C15281) * C153927 + C15751 * C70415) * C153725 +
            C87682 * C153717) *
               C153783 * C153819) *
              C1255)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
              C14938 + C14938 + C153969 * C580) *
                 C70415 +
             (C19164 + C19165) * C153927) *
                C153717 +
            ((C14991 + C14992) * C70415 + C19130 * C153927) * C153725 +
            C86808 * C82774) *
               C549 -
           (C87975 * C82774 +
            (C20456 * C153927 + (C15549 + C15550) * C70415) * C153725 +
            ((C20483 + C20484) * C153927 +
             (C14934 * C557 + C15495 + C15495 + C153969 * C581 + C14932 * C556 +
              C15496 + C15496 + C154109 * C580) *
                 C70415) *
                C153717) *
               C550 +
           (((C14932 * C557 + C15497 + C15497 + C154109 * C581 +
              C14934 * C2272 + C15498 + C15498 + C153969 * C2282) *
                 C70415 +
             (C21293 + C21294) * C153927) *
                C153717 +
            ((C15551 + C15552) * C70415 + (C19478 + C19479) * C153927) *
                C153725 +
            ((C15553 + C15554) * C70415 + (C19480 + C19481) * C153927) *
                C82774) *
               C551) *
              C1251 +
          ((((C20484 + C20483) * C70415 + (C22275 + C22276) * C153927) *
                C153717 +
            (C20461 * C70415 + C39751 * C153927) * C153725 +
            (C20466 * C70415 + (C20487 + C20488) * C153927) * C82774) *
               C550 -
           (C87682 * C82774 + (C19132 * C153927 + C19133 * C70415) * C153725 +
            ((C19166 + C19167) * C153927 + (C19165 + C19164) * C70415) *
                C153717) *
               C549 -
           (((C14934 * C6156 + C21283 + C21283 + C153969 * C6168 +
              C14932 * C3371 + C21284 + C21284 + C154109 * C3379) *
                 C153927 +
             (C19481 + C19480) * C70415) *
                C82774 +
            ((C38783 + C38782) * C153927 + (C19479 + C19478) * C70415) *
                C153725 +
            ((C40564 + C40563) * C153927 + (C21294 + C21293) * C70415) *
                C153717) *
               C551) *
              C153819) *
         C153748) /
            (p * q * std::sqrt(p + q));
    d2ee[53] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C14932 * C136 + C14937 + C14937 + C154109 * C152 +
               C14934 * C556 + C14938 + C14938 + C153969 * C580) *
                  C70415 +
              (C19164 + C19165) * C153927) *
                 C153717 +
             ((C14991 + C14992) * C70415 + C19130 * C153927) * C153725 +
             C86808 * C82774) *
                C154094 -
            (C87975 * C82774 +
             (C20456 * C153927 + (C15549 + C15550) * C70415) * C153725 +
             ((C20483 + C20484) * C153927 +
              (C14934 * C557 + C15495 + C15495 + C153969 * C581 +
               C14932 * C556 + C15496 + C15496 + C154109 * C580) *
                  C70415) *
                 C153717) *
                C153847) *
               C1251 +
           ((((C20484 + C20483) * C70415 + (C22275 + C22276) * C153927) *
                 C153717 +
             (C20461 * C70415 + C39751 * C153927) * C153725 +
             (C20466 * C70415 + (C20487 + C20488) * C153927) * C82774) *
                C153847 -
            (C87682 * C82774 + (C19132 * C153927 + C19133 * C70415) * C153725 +
             ((C19166 + C19167) * C153927 + (C19165 + C19164) * C70415) *
                 C153717) *
                C154094) *
               C153819) *
              C154085 +
          (((((C15550 + C15549) * C70415 + C20461 * C153927) * C153717 +
             ((C15548 + C15547) * C70415 + C20466 * C153927) * C153725 +
             ((C15546 + C15545) * C70415 + (C16273 + C16274) * C153927) *
                 C82774) *
                C153847 -
            (C86809 * C82774 +
             (C15752 * C153927 + (C14994 + C14993) * C70415) * C153725 +
             (C19133 * C153927 + (C14992 + C14991) * C70415) * C153717) *
                C154094) *
               C1251 +
           (((C19130 * C70415 + C19138 * C153927) * C153717 +
             (C18830 * C70415 + C19143 * C153927) * C153725 +
             (C19774 * C70415 + (C15281 + C15282) * C153927) * C82774) *
                C154094 -
            (((C14934 * C3372 + C17455 + C17455 + C153969 * C3380 +
               C14932 * C1917 + C17456 + C17456 + C154109 * C1927) *
                  C153927 +
              (C16274 + C16273) * C70415) *
                 C82774 +
             ((C20488 + C20487) * C153927 + C20066 * C70415) * C153725 +
             (C39750 * C153927 + C20456 * C70415) * C153717) *
                C153847) *
               C153819) *
              C153754)) /
        (p * q * std::sqrt(p + q));
    d2ee[54] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
              C14938 + C14938 + C153969 * C580) *
                 C70415 +
             (C19164 + C19165) * C153927) *
                C153717 +
            ((C14991 + C14992) * C70415 + C19130 * C153927) * C153725 +
            C86808 * C82774) *
               C153783 * C1251 -
           (C87682 * C82774 + (C19132 * C153927 + C19133 * C70415) * C153725 +
            ((C19166 + C19167) * C153927 + (C19165 + C19164) * C70415) *
                C153717) *
               C153783 * C153819) *
              C1253 +
          (((C19130 * C70415 + C19138 * C153927) * C153717 +
            (C18830 * C70415 + C19143 * C153927) * C153725 +
            (C19774 * C70415 + (C15281 + C15282) * C153927) * C82774) *
               C153783 * C153819 -
           (C86809 * C82774 +
            (C15752 * C153927 + (C14994 + C14993) * C70415) * C153725 +
            (C19133 * C153927 + (C14992 + C14991) * C70415) * C153717) *
               C153783 * C1251) *
              C1254 +
          ((C86808 * C153717 + (C15002 * C70415 + C19774 * C153927) * C153725 +
            ((C14998 + C14997) * C70415 + (C15765 + C15766) * C153927) *
                C82774) *
               C153783 * C1251 -
           (((C14934 * C1916 + C15245 + C15245 + C153969 * C1926 +
              C14932 * C340 + C15246 + C15246 + C154109 * C364) *
                 C153927 +
             (C15766 + C15765) * C70415) *
                C82774 +
            ((C15282 + C15281) * C153927 + C15751 * C70415) * C153725 +
            C87682 * C153717) *
               C153783 * C153819) *
              C1255)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
             C14938 + C14938 + C153969 * C580) *
                C70415 +
            (C19164 + C19165) * C153927) *
               C153717 +
           ((C14991 + C14992) * C70415 + C19130 * C153927) * C153725 +
           C86808 * C82774) *
              C153783 * C1338 -
          (C87682 * C82774 + (C19132 * C153927 + C19133 * C70415) * C153725 +
           ((C19166 + C19167) * C153927 + (C19165 + C19164) * C70415) *
               C153717) *
              C153783 * C1339 +
          ((C38471 * C70415 + C43614 * C153927) * C153717 +
           (C19138 * C70415 + C38473 * C153927) * C153725 +
           (C19143 * C70415 + (C19170 + C19171) * C153927) * C82774) *
              C153783 * C1340 -
          (((C14934 * C5557 + C20977 + C20977 + C153969 * C5563 +
             C14932 * C3085 + C20978 + C20978 + C154109 * C3093) *
                C153927 +
            (C19171 + C19170) * C70415) *
               C82774 +
           ((C38483 + C38482) * C153927 + C38472 * C70415) * C153725 +
           (C44779 * C153927 + C40246 * C70415) * C153717) *
              C153783 * C1341) *
         C153748) /
            (p * q * std::sqrt(p + q));
    d2ee[55] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C14932 * C136 + C14937 + C14937 + C154109 * C152 +
               C14934 * C556 + C14938 + C14938 + C153969 * C580) *
                  C70415 +
              (C19164 + C19165) * C153927) *
                 C153717 +
             ((C14991 + C14992) * C70415 + C19130 * C153927) * C153725 +
             C86808 * C82774) *
                C2058 -
            (C87975 * C82774 +
             (C20456 * C153927 + (C15549 + C15550) * C70415) * C153725 +
             ((C20483 + C20484) * C153927 +
              (C14934 * C557 + C15495 + C15495 + C153969 * C581 +
               C14932 * C556 + C15496 + C15496 + C154109 * C580) *
                  C70415) *
                 C153717) *
                C153847) *
               C154093 +
           ((((C20484 + C20483) * C70415 + (C22275 + C22276) * C153927) *
                 C153717 +
             (C20461 * C70415 + C39751 * C153927) * C153725 +
             (C20466 * C70415 + (C20487 + C20488) * C153927) * C82774) *
                C153847 -
            (C87682 * C82774 + (C19132 * C153927 + C19133 * C70415) * C153725 +
             ((C19166 + C19167) * C153927 + (C19165 + C19164) * C70415) *
                 C153717) *
                C2058) *
               C153819) *
              C154085 +
          (((((C15550 + C15549) * C70415 + C20461 * C153927) * C153717 +
             ((C15548 + C15547) * C70415 + C20466 * C153927) * C153725 +
             ((C15546 + C15545) * C70415 + (C16273 + C16274) * C153927) *
                 C82774) *
                C153847 -
            (C86809 * C82774 +
             (C15752 * C153927 + (C14994 + C14993) * C70415) * C153725 +
             (C19133 * C153927 + (C14992 + C14991) * C70415) * C153717) *
                C2058) *
               C154093 +
           (((C19130 * C70415 + C19138 * C153927) * C153717 +
             (C18830 * C70415 + C19143 * C153927) * C153725 +
             (C19774 * C70415 + (C15281 + C15282) * C153927) * C82774) *
                C2058 -
            (((C14934 * C3372 + C17455 + C17455 + C153969 * C3380 +
               C14932 * C1917 + C17456 + C17456 + C154109 * C1927) *
                  C153927 +
              (C16274 + C16273) * C70415) *
                 C82774 +
             ((C20488 + C20487) * C153927 + C20066 * C70415) * C153725 +
             (C39750 * C153927 + C20456 * C70415) * C153717) *
                C153847) *
               C153819) *
              C153754)) /
        (p * q * std::sqrt(p + q));
    d2ee[56] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
              C14938 + C14938 + C153969 * C580) *
                 C70415 +
             (C19164 + C19165) * C153927) *
                C153717 +
            ((C14991 + C14992) * C70415 + C19130 * C153927) * C153725 +
            C86808 * C82774) *
               C154166 -
           (C87975 * C82774 +
            (C20456 * C153927 + (C15549 + C15550) * C70415) * C153725 +
            ((C20483 + C20484) * C153927 +
             (C14934 * C557 + C15495 + C15495 + C153969 * C581 + C14932 * C556 +
              C15496 + C15496 + C154109 * C580) *
                 C70415) *
                C153717) *
               C154167 +
           (((C14932 * C557 + C15497 + C15497 + C154109 * C581 +
              C14934 * C2272 + C15498 + C15498 + C153969 * C2282) *
                 C70415 +
             (C21293 + C21294) * C153927) *
                C153717 +
            ((C15551 + C15552) * C70415 + (C19478 + C19479) * C153927) *
                C153725 +
            ((C15553 + C15554) * C70415 + (C19480 + C19481) * C153927) *
                C82774) *
               C2574) *
              C154093 +
          ((((C20484 + C20483) * C70415 + (C22275 + C22276) * C153927) *
                C153717 +
            (C20461 * C70415 + C39751 * C153927) * C153725 +
            (C20466 * C70415 + (C20487 + C20488) * C153927) * C82774) *
               C154167 -
           (C87682 * C82774 + (C19132 * C153927 + C19133 * C70415) * C153725 +
            ((C19166 + C19167) * C153927 + (C19165 + C19164) * C70415) *
                C153717) *
               C154166 -
           (((C14934 * C6156 + C21283 + C21283 + C153969 * C6168 +
              C14932 * C3371 + C21284 + C21284 + C154109 * C3379) *
                 C153927 +
             (C19481 + C19480) * C70415) *
                C82774 +
            ((C38783 + C38782) * C153927 + (C19479 + C19478) * C70415) *
                C153725 +
            ((C40564 + C40563) * C153927 + (C21294 + C21293) * C70415) *
                C153717) *
               C2574) *
              C153819) *
         C153748) /
        (p * q * std::sqrt(p + q));
    d2ee[57] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
              C14938 + C14938 + C153969 * C580) *
                 C70415 +
             (C19164 + C19165) * C153927) *
                C153717 +
            ((C14991 + C14992) * C70415 + C19130 * C153927) * C153725 +
            C86808 * C82774) *
               C2058 -
           (C87975 * C82774 +
            (C20456 * C153927 + (C15549 + C15550) * C70415) * C153725 +
            ((C20483 + C20484) * C153927 +
             (C14934 * C557 + C15495 + C15495 + C153969 * C581 + C14932 * C556 +
              C15496 + C15496 + C154109 * C580) *
                 C70415) *
                C153717) *
               C153847) *
              C326 +
          ((((C20484 + C20483) * C70415 + (C22275 + C22276) * C153927) *
                C153717 +
            (C20461 * C70415 + C39751 * C153927) * C153725 +
            (C20466 * C70415 + (C20487 + C20488) * C153927) * C82774) *
               C153847 -
           (C87682 * C82774 + (C19132 * C153927 + C19133 * C70415) * C153725 +
            ((C19166 + C19167) * C153927 + (C19165 + C19164) * C70415) *
                C153717) *
               C2058) *
              C327 +
          (((C38471 * C70415 + C43614 * C153927) * C153717 +
            (C19138 * C70415 + C38473 * C153927) * C153725 +
            (C19143 * C70415 + (C19170 + C19171) * C153927) * C82774) *
               C2058 -
           (((C14934 * C4809 + C22265 + C22265 + C153969 * C4815 +
              C14932 * C4170 + C22266 + C22266 + C154109 * C4178) *
                 C153927 +
             (C20488 + C20487) * C70415) *
                C82774 +
            ((C39761 + C39760) * C153927 + C39750 * C70415) * C153725 +
            (C45644 * C153927 + C41531 * C70415) * C153717) *
               C153847) *
              C328) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
              C14938 + C14938 + C153969 * C580) *
                 C70415 +
             (C19164 + C19165) * C153927) *
                C153717 +
            ((C14991 + C14992) * C70415 + C19130 * C153927) * C153725 +
            C86808 * C82774) *
               C2058 -
           (C87975 * C82774 +
            (C20456 * C153927 + (C15549 + C15550) * C70415) * C153725 +
            ((C20483 + C20484) * C153927 +
             (C14934 * C557 + C15495 + C15495 + C153969 * C581 + C14932 * C556 +
              C15496 + C15496 + C154109 * C580) *
                 C70415) *
                C153717) *
               C153847) *
              C153767 * C1253 +
          ((((C15550 + C15549) * C70415 + C20461 * C153927) * C153717 +
            ((C15548 + C15547) * C70415 + C20466 * C153927) * C153725 +
            ((C15546 + C15545) * C70415 + (C16273 + C16274) * C153927) *
                C82774) *
               C153847 -
           (C86809 * C82774 +
            (C15752 * C153927 + (C14994 + C14993) * C70415) * C153725 +
            (C19133 * C153927 + (C14992 + C14991) * C70415) * C153717) *
               C2058) *
              C153767 * C1254 +
          ((C86808 * C153717 + (C15002 * C70415 + C19774 * C153927) * C153725 +
            ((C14998 + C14997) * C70415 + (C15765 + C15766) * C153927) *
                C82774) *
               C2058 -
           (((C14934 * C1485 + C16255 + C16255 + C153969 * C1495 +
              C14932 * C1085 + C16256 + C16256 + C154109 * C1097) *
                 C153927 +
             (C15976 + C15975) * C70415) *
                C82774 +
            ((C16274 + C16273) * C153927 + C15961 * C70415) * C153725 +
            C87975 * C153717) *
               C153847) *
              C153767 * C1255)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
             C14938 + C14938 + C153969 * C580) *
                C70415 +
            (C19164 + C19165) * C153927) *
               C153717 +
           ((C14991 + C14992) * C70415 + C19130 * C153927) * C153725 +
           C86808 * C82774) *
              C2264 -
          (C87975 * C82774 +
           (C20456 * C153927 + (C15549 + C15550) * C70415) * C153725 +
           ((C20483 + C20484) * C153927 +
            (C14934 * C557 + C15495 + C15495 + C153969 * C581 + C14932 * C556 +
             C15496 + C15496 + C154109 * C580) *
                C70415) *
               C153717) *
              C2265 +
          (((C14932 * C557 + C15497 + C15497 + C154109 * C581 + C14934 * C2272 +
             C15498 + C15498 + C153969 * C2282) *
                C70415 +
            (C21293 + C21294) * C153927) *
               C153717 +
           ((C15551 + C15552) * C70415 + (C19478 + C19479) * C153927) *
               C153725 +
           ((C15553 + C15554) * C70415 + (C19480 + C19481) * C153927) *
               C82774) *
              C2266 -
          (((C14934 * C9165 + C23051 + C23051 + C153969 * C9171 +
             C14932 * C6157 + C23052 + C23052 + C154109 * C6169) *
                C153927 +
            (C14934 * C7667 + C17983 + C17983 + C153969 * C7675 +
             C14932 * C2270 + C17984 + C17984 + C154109 * C2280) *
                C70415) *
               C82774 +
           ((C14934 * C9166 + C23053 + C23053 + C153969 * C9172 +
             C14932 * C6159 + C23054 + C23054 + C154109 * C6171) *
                C153927 +
            (C14934 * C7666 + C17985 + C17985 + C153969 * C7674 +
             C14932 * C2271 + C17986 + C17986 + C154109 * C2281) *
                C70415) *
               C153725 +
           ((C14934 * C9167 + C23055 + C23055 + C153969 * C9173 +
             C14932 * C6161 + C23056 + C23056 + C154109 * C6173) *
                C153927 +
            (C14934 * C7665 + C17987 + C17987 + C153969 * C7673 +
             C14932 * C2272 + C17988 + C17988 + C154109 * C2282) *
                C70415) *
               C153717) *
              C2267) *
         C153767 * C153748) /
            (p * q * std::sqrt(p + q));
    d2ee[58] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 (((((C14932 * C136 + C14937 + C14937 + C154109 * C152 +
                      C14934 * C556 + C14938 + C14938 + C153969 * C580) *
                         C70415 +
                     (C19164 + C19165) * C153927) *
                        C153717 +
                    ((C14991 + C14992) * C70415 + C19130 * C153927) * C153725 +
                    C86808 * C82774) *
                       C154166 -
                   (C87975 * C82774 +
                    (C20456 * C153927 + (C15549 + C15550) * C70415) * C153725 +
                    ((C20483 + C20484) * C153927 +
                     (C14934 * C557 + C15495 + C15495 + C153969 * C581 +
                      C14932 * C556 + C15496 + C15496 + C154109 * C580) *
                         C70415) *
                        C153717) *
                       C154167 +
                   (((C14932 * C557 + C15497 + C15497 + C154109 * C581 +
                      C14934 * C2272 + C15498 + C15498 + C153969 * C2282) *
                         C70415 +
                     (C21293 + C21294) * C153927) *
                        C153717 +
                    ((C15551 + C15552) * C70415 + (C19478 + C19479) * C153927) *
                        C153725 +
                    ((C15553 + C15554) * C70415 + (C19480 + C19481) * C153927) *
                        C82774) *
                       C2574) *
                      C153767 * C154085 +
                  ((((C15550 + C15549) * C70415 + C20461 * C153927) * C153717 +
                    ((C15548 + C15547) * C70415 + C20466 * C153927) * C153725 +
                    ((C15546 + C15545) * C70415 + (C16273 + C16274) * C153927) *
                        C82774) *
                       C154167 -
                   (C86809 * C82774 +
                    (C15752 * C153927 + (C14994 + C14993) * C70415) * C153725 +
                    (C19133 * C153927 + (C14992 + C14991) * C70415) * C153717) *
                       C154166 -
                   (((C14934 * C8529 + C16801 + C16801 + C153969 * C8531 +
                      C14932 * C1486 + C16802 + C16802 + C154109 * C1496) *
                         C153927 +
                     (C15556 + C15555) * C70415) *
                        C82774 +
                    ((C19481 + C19480) * C153927 + (C15554 + C15553) * C70415) *
                        C153725 +
                    ((C19479 + C19478) * C153927 + (C15552 + C15551) * C70415) *
                        C153717) *
                       C2574) *
                      C153767 * C153754)) /
                (p * q * std::sqrt(p + q));
    d2ee[59] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
              C14938 + C14938 + C153969 * C580) *
                 C70415 +
             (C19164 + C19165) * C153927) *
                C153717 +
            ((C14991 + C14992) * C70415 + C19130 * C153927) * C153725 +
            C86808 * C82774) *
               C2058 -
           (C87975 * C82774 +
            (C20456 * C153927 + (C15549 + C15550) * C70415) * C153725 +
            ((C20483 + C20484) * C153927 +
             (C14934 * C557 + C15495 + C15495 + C153969 * C581 + C14932 * C556 +
              C15496 + C15496 + C154109 * C580) *
                 C70415) *
                C153717) *
               C153847) *
              C153767 * C1253 +
          ((((C15550 + C15549) * C70415 + C20461 * C153927) * C153717 +
            ((C15548 + C15547) * C70415 + C20466 * C153927) * C153725 +
            ((C15546 + C15545) * C70415 + (C16273 + C16274) * C153927) *
                C82774) *
               C153847 -
           (C86809 * C82774 +
            (C15752 * C153927 + (C14994 + C14993) * C70415) * C153725 +
            (C19133 * C153927 + (C14992 + C14991) * C70415) * C153717) *
               C2058) *
              C153767 * C1254 +
          ((C86808 * C153717 + (C15002 * C70415 + C19774 * C153927) * C153725 +
            ((C14998 + C14997) * C70415 + (C15765 + C15766) * C153927) *
                C82774) *
               C2058 -
           (((C14934 * C1485 + C16255 + C16255 + C153969 * C1495 +
              C14932 * C1085 + C16256 + C16256 + C154109 * C1097) *
                 C153927 +
             (C15976 + C15975) * C70415) *
                C82774 +
            ((C16274 + C16273) * C153927 + C15961 * C70415) * C153725 +
            C87975 * C153717) *
               C153847) *
              C153767 * C1255)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
              C14938 + C14938 + C153969 * C580) *
                 C70415 +
             (C19164 + C19165) * C153927) *
                C153717 +
            ((C14991 + C14992) * C70415 + C19130 * C153927) * C153725 +
            C86808 * C82774) *
               C2058 -
           (C87975 * C82774 +
            (C20456 * C153927 + (C15549 + C15550) * C70415) * C153725 +
            ((C20483 + C20484) * C153927 +
             (C14934 * C557 + C15495 + C15495 + C153969 * C581 + C14932 * C556 +
              C15496 + C15496 + C154109 * C580) *
                 C70415) *
                C153717) *
               C153847) *
              C326 +
          ((((C20484 + C20483) * C70415 + (C22275 + C22276) * C153927) *
                C153717 +
            (C20461 * C70415 + C39751 * C153927) * C153725 +
            (C20466 * C70415 + (C20487 + C20488) * C153927) * C82774) *
               C153847 -
           (C87682 * C82774 + (C19132 * C153927 + C19133 * C70415) * C153725 +
            ((C19166 + C19167) * C153927 + (C19165 + C19164) * C70415) *
                C153717) *
               C2058) *
              C327 +
          (((C38471 * C70415 + C43614 * C153927) * C153717 +
            (C19138 * C70415 + C38473 * C153927) * C153725 +
            (C19143 * C70415 + (C19170 + C19171) * C153927) * C82774) *
               C2058 -
           (((C14934 * C4809 + C22265 + C22265 + C153969 * C4815 +
              C14932 * C4170 + C22266 + C22266 + C154109 * C4178) *
                 C153927 +
             (C20488 + C20487) * C70415) *
                C82774 +
            ((C39761 + C39760) * C153927 + C39750 * C70415) * C153725 +
            (C45644 * C153927 + C41531 * C70415) * C153717) *
               C153847) *
              C328) *
         C153748) /
            (p * q * std::sqrt(p + q));
    d2ee[60] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C70415 +
             C3138 * C153927) *
                C154187 +
            (C70422 + C70423) * C154180 + C70432 * C154161 + C70433 * C154108) *
               C153783 * C154093 -
           (C71042 * C154108 + C71043 * C154161 + (C70634 + C70635) * C154180 +
            (C3139 * C153927 + C3138 * C70415) * C154187) *
               C153783 * C153819) *
              C154162 +
          (((C70635 + C70634) * C154187 + (C70633 + C70632) * C154180 +
            (C70631 + C70630) * C154161 + (C71044 + C71045) * C154108) *
               C153783 * C153819 -
           (C70434 * C154108 + C70435 * C154161 + (C70425 + C70424) * C154180 +
            (C70423 + C70422) * C154187) *
               C153783 * C154093) *
              C154163 +
          ((C70432 * C154187 + C70433 * C154180 + (C70429 + C70428) * C154161 +
            (C70430 + C70431) * C154108) *
               C153783 * C154093 -
           (((C134 * C342 + C395 + C395 + C153882 * C366) * C153927 +
             C784 * C70415) *
                C154108 +
            (C71045 + C71044) * C154161 + C71042 * C154180 + C71043 * C154187) *
               C153783 * C153819) *
              C774)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C154188 +
             C3138 * C154184 + C3139 * C154174 + C3142 * C154116) *
                C73969 +
            (C73972 + C73973 + C73974 + C73975) * C153722) *
               C153783 * C154093 -
           ((C74178 + C74179 + C74180 + C74181) * C153722 +
            (C4591 * C154116 + C3142 * C154174 + C3139 * C154184 +
             C3138 * C154188) *
                C73969) *
               C153783 * C153819) *
              C154162 +
          (((C74181 + C74180 + C74179 + C74178) * C73969 +
            (C74582 + C74583 + C74584 + C74585) * C153722) *
               C153783 * C153819 -
           ((C73976 + C73977 + C73978 + C73979) * C153722 +
            (C73975 + C73974 + C73973 + C73972) * C73969) *
               C153783 * C154093) *
              C154163 +
          (((C73979 + C73978 + C73977 + C73976) * C73969 +
            (C73980 + C73981 + C73982 + C73983) * C153722) *
               C153783 * C154093 -
           (((C134 * C3086 + C3121 + C3121 + C153882 * C3094) * C154116 +
             C3145 * C154174 + C418 * C154184 + C413 * C154188) *
                C153722 +
            (C74585 + C74584 + C74583 + C74582) * C73969) *
               C153783 * C153819) *
              C774)) /
            (p * q * std::sqrt(p + q));
    d2ee[61] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C153882 * C152) * C70415 +
              C3138 * C153927) *
                 C154187 +
             (C70422 + C70423) * C154180 + C70432 * C154161 +
             C70433 * C154108) *
                C154094 -
            (C71240 * C154108 + C71241 * C154161 + (C70840 + C70841) * C154180 +
             (C4206 * C153927 +
              (C134 * C556 + C601 + C601 + C153882 * C580) * C70415) *
                 C154187) *
                C153847) *
               C154093 +
           (((C4206 * C70415 + C4205 * C153927) * C154187 +
             (C71502 + C71503) * C154180 + (C71504 + C71505) * C154161 +
             (C71506 + C71507) * C154108) *
                C153847 -
            (C71042 * C154108 + C71043 * C154161 + (C70634 + C70635) * C154180 +
             (C3139 * C153927 + C3138 * C70415) * C154187) *
                C154094) *
               C153819) *
              C329 +
          ((((C70841 + C70840) * C154187 + (C70839 + C70838) * C154180 +
             (C70837 + C70836) * C154161 + (C71242 + C71243) * C154108) *
                C153847 -
            (C70434 * C154108 + C70435 * C154161 + (C70425 + C70424) * C154180 +
             (C70423 + C70422) * C154187) *
                C154094) *
               C154093 +
           (((C70635 + C70634) * C154187 + (C70633 + C70632) * C154180 +
             (C70631 + C70630) * C154161 + (C71044 + C71045) * C154108) *
                C154094 -
            (((C134 * C1916 + C1932 + C1932 + C153882 * C1926) * C153927 +
              C1125 * C70415) *
                 C154108 +
             (C71507 + C71506) * C154161 + (C71505 + C71504) * C154180 +
             (C71503 + C71502) * C154187) *
                C153847) *
               C153819) *
              C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C153882 * C152) * C154188 +
              C3138 * C154184 + C3139 * C154174 + C3142 * C154116) *
                 C73969 +
             (C73972 + C73973 + C73974 + C73975) * C153722) *
                C154094 -
            ((C74380 + C74381 + C74382 + C74383) * C153722 +
             (C5574 * C154116 + C4205 * C154174 + C4206 * C154184 +
              (C134 * C556 + C601 + C601 + C153882 * C580) * C154188) *
                 C73969) *
                C153847) *
               C154093 +
           (((C4206 * C154188 + C4205 * C154184 + C5574 * C154174 +
              C28789 * C154116) *
                 C73969 +
             (C75042 + C75043 + C75044 + C75045) * C153722) *
                C153847 -
            ((C74178 + C74179 + C74180 + C74181) * C153722 +
             (C4591 * C154116 + C3142 * C154174 + C3139 * C154184 +
              C3138 * C154188) *
                 C73969) *
                C154094) *
               C153819) *
              C329 +
          ((((C74383 + C74382 + C74381 + C74380) * C73969 +
             (C74780 + C74781 + C74782 + C74783) * C153722) *
                C153847 -
            ((C73976 + C73977 + C73978 + C73979) * C153722 +
             (C73975 + C73974 + C73973 + C73972) * C73969) *
                C154094) *
               C154093 +
           (((C74181 + C74180 + C74179 + C74178) * C73969 +
             (C74582 + C74583 + C74584 + C74585) * C153722) *
                C154094 -
            (((C134 * C5557 + C5569 + C5569 + C153882 * C5563) * C154116 +
              C4208 * C154174 + C3416 * C154184 + C1123 * C154188) *
                 C153722 +
             (C75045 + C75044 + C75043 + C75042) * C73969) *
                C153847) *
               C153819) *
              C153754)) /
            (p * q * std::sqrt(p + q));
    d2ee[62] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C70415 +
             C3138 * C153927) *
                C154187 +
            (C70422 + C70423) * C154180 + C70432 * C154161 + C70433 * C154108) *
               C153783 * C326 -
           ((C70630 + C70631) * C154108 + (C70632 + C70633) * C154161 +
            (C70634 + C70635) * C154180 +
            (C3139 * C153927 + C3138 * C70415) * C154187) *
               C153783 * C327 +
           ((C3139 * C70415 + C3142 * C153927) * C154187 +
            (C70636 + C70637) * C154180 + (C70638 + C70639) * C154161 +
            (C70640 + C70641) * C154108) *
               C153783 * C328) *
              C329 +
          (((C70635 + C70634) * C154187 + (C70633 + C70632) * C154180 +
            (C70631 + C70630) * C154161 +
            (C412 * C70415 + C419 * C153927) * C154108) *
               C153783 * C327 -
           (C70434 * C154108 + C70435 * C154161 + (C70425 + C70424) * C154180 +
            (C70423 + C70422) * C154187) *
               C153783 * C326 -
           (((C134 * C1343 + C1359 + C1359 + C153882 * C1353) * C153927 +
             C419 * C70415) *
                C154108 +
            (C70641 + C70640) * C154161 + (C70639 + C70638) * C154180 +
            (C70637 + C70636) * C154187) *
               C153783 * C328) *
              C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C70415 +
            C3138 * C153927) *
               C154187 +
           (C70422 + C70423) * C154180 + C70432 * C154161 + C70433 * C154108) *
              C153783 * C153767 * C130 -
          (C70434 * C154108 + C70435 * C154161 + (C70425 + C70424) * C154180 +
           (C70423 + C70422) * C154187) *
              C153783 * C153767 * C131 +
          (C70432 * C154187 + C70433 * C154180 + (C70429 + C70428) * C154161 +
           (C70430 + C70431) * C154108) *
              C153783 * C153767 * C132 -
          (((C134 * C775 + C781 + C781 + C153882 * C777) * C153927 +
            C198 * C70415) *
               C154108 +
           (C70431 + C70430) * C154161 + C70434 * C154180 + C70435 * C154187) *
              C153783 * C153767 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C70415 +
             C3138 * C153927) *
                C154187 +
            (C70422 + C70423) * C154180 + C70432 * C154161 + C70433 * C154108) *
               C549 -
           ((C70836 + C70837) * C154108 + (C70838 + C70839) * C154161 +
            (C70840 + C70841) * C154180 +
            (C4206 * C153927 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C70415) *
                C154187) *
               C550 +
           (((C134 * C557 + C602 + C602 + C153882 * C581) * C70415 +
             C4830 * C153927) *
                C154187 +
            (C70842 + C70843) * C154180 + (C70844 + C70845) * C154161 +
            (C70846 + C70847) * C154108) *
               C551) *
              C153767 * C329 +
          (((C70841 + C70840) * C154187 + (C70839 + C70838) * C154180 +
            (C70837 + C70836) * C154161 +
            (C633 * C70415 + C1125 * C153927) * C154108) *
               C550 -
           (C70434 * C154108 + C70435 * C154161 + (C70425 + C70424) * C154180 +
            (C70423 + C70422) * C154187) *
               C549 -
           (((C134 * C1485 + C1501 + C1501 + C153882 * C1495) * C153927 +
             C640 * C70415) *
                C154108 +
            (C70847 + C70846) * C154161 + (C70845 + C70844) * C154180 +
            (C70843 + C70842) * C154187) *
               C551) *
              C153767 * C153754)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C154188 +
            C3138 * C154184 + C3139 * C154174 + C3142 * C154116) *
               C73969 +
           (C73972 + C73973 + C73974 + C73975) * C153722) *
              C153783 * C153767 * C130 -
          ((C73976 + C73977 + C73978 + C73979) * C153722 +
           (C73975 + C73974 + C73973 + C73972) * C73969) *
              C153783 * C153767 * C131 +
          ((C73979 + C73978 + C73977 + C73976) * C73969 +
           (C73980 + C73981 + C73982 + C73983) * C153722) *
              C153783 * C153767 * C132 -
          (((C134 * C1343 + C1359 + C1359 + C153882 * C1353) * C154116 +
            C419 * C154174 + C412 * C154184 + C196 * C154188) *
               C153722 +
           (C73983 + C73982 + C73981 + C73980) * C73969) *
              C153783 * C153767 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C154188 +
             C3138 * C154184 + C3139 * C154174 + C3142 * C154116) *
                C73969 +
            (C73972 + C73973 + C73974 + C73975) * C153722) *
               C153783 * C326 -
           ((C74178 + C74179 + C74180 + C74181) * C153722 +
            (C4591 * C154116 + C3142 * C154174 + C3139 * C154184 +
             C3138 * C154188) *
                C73969) *
               C153783 * C327 +
           ((C3139 * C154188 + C3142 * C154184 + C4591 * C154174 +
             C28235 * C154116) *
                C73969 +
            (C74182 + C74183 + C74184 + C74185) * C153722) *
               C153783 * C328) *
              C329 +
          (((C74181 + C74180 + C74179 + C74178) * C73969 +
            (C414 * C154188 + C417 * C154184 + C3140 * C154174 +
             C3144 * C154116) *
                C153722) *
               C153783 * C327 -
           ((C73976 + C73977 + C73978 + C73979) * C153722 +
            (C73975 + C73974 + C73973 + C73972) * C73969) *
               C153783 * C326 -
           (((C134 * C4574 + C4586 + C4586 + C153882 * C4580) * C154116 +
             C3144 * C154174 + C3140 * C154184 + C417 * C154188) *
                C153722 +
            (C74185 + C74184 + C74183 + C74182) * C73969) *
               C153783 * C328) *
              C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C154188 +
             C3138 * C154184 + C3139 * C154174 + C3142 * C154116) *
                C73969 +
            (C73972 + C73973 + C73974 + C73975) * C153722) *
               C549 -
           ((C74380 + C74381 + C74382 + C74383) * C153722 +
            (C5574 * C154116 + C4205 * C154174 + C4206 * C154184 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C154188) *
                C73969) *
               C550 +
           (((C134 * C557 + C602 + C602 + C153882 * C581) * C154188 +
             C4830 * C154184 + C4831 * C154174 + C29138 * C154116) *
                C73969 +
            (C74384 + C74385 + C74386 + C74387) * C153722) *
               C551) *
              C153767 * C329 +
          (((C74383 + C74382 + C74381 + C74380) * C73969 +
            (C635 * C154188 + C1123 * C154184 + C3416 * C154174 +
             C4208 * C154116) *
                C153722) *
               C550 -
           ((C73976 + C73977 + C73978 + C73979) * C153722 +
            (C73975 + C73974 + C73973 + C73972) * C73969) *
               C549 -
           (((C134 * C4809 + C4823 + C4823 + C153882 * C4815) * C154116 +
             C3421 * C154174 + C3420 * C154184 + C638 * C154188) *
                C153722 +
            (C74387 + C74386 + C74385 + C74384) * C73969) *
               C551) *
              C153767 * C153754)) /
            (p * q * std::sqrt(p + q));
    d2ee[63] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C70415 +
             C3138 * C153927) *
                C154187 +
            (C70422 + C70423) * C154180 + C70432 * C154161 + C70433 * C154108) *
               C154094 -
           (C71240 * C154108 + C71241 * C154161 + (C70840 + C70841) * C154180 +
            (C4206 * C153927 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C70415) *
                C154187) *
               C153847) *
              C153767 * C154162 +
          (((C70841 + C70840) * C154187 + (C70839 + C70838) * C154180 +
            (C70837 + C70836) * C154161 + (C71242 + C71243) * C154108) *
               C153847 -
           (C70434 * C154108 + C70435 * C154161 + (C70425 + C70424) * C154180 +
            (C70423 + C70422) * C154187) *
               C154094) *
              C153767 * C154163 +
          ((C70432 * C154187 + C70433 * C154180 + (C70429 + C70428) * C154161 +
            (C70430 + C70431) * C154108) *
               C154094 -
           (((C134 * C1086 + C1113 + C1113 + C153882 * C1098) * C153927 +
             C918 * C70415) *
                C154108 +
            (C71243 + C71242) * C154161 + C71240 * C154180 + C71241 * C154187) *
               C153847) *
              C153767 * C774)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C154188 +
             C3138 * C154184 + C3139 * C154174 + C3142 * C154116) *
                C73969 +
            (C73972 + C73973 + C73974 + C73975) * C153722) *
               C154094 -
           ((C74380 + C74381 + C74382 + C74383) * C153722 +
            (C5574 * C154116 + C4205 * C154174 + C4206 * C154184 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C154188) *
                C73969) *
               C153847) *
              C153767 * C154162 +
          (((C74383 + C74382 + C74381 + C74380) * C73969 +
            (C74780 + C74781 + C74782 + C74783) * C153722) *
               C153847 -
           ((C73976 + C73977 + C73978 + C73979) * C153722 +
            (C73975 + C73974 + C73973 + C73972) * C73969) *
               C154094) *
              C153767 * C154163 +
          (((C73979 + C73978 + C73977 + C73976) * C73969 +
            (C73980 + C73981 + C73982 + C73983) * C153722) *
               C154094 -
           (((C134 * C4171 + C4196 + C4196 + C153882 * C4179) * C154116 +
             C3877 * C154174 + C1124 * C154184 + C634 * C154188) *
                C153722 +
            (C74783 + C74782 + C74781 + C74780) * C73969) *
               C153847) *
              C153767 * C774)) /
            (p * q * std::sqrt(p + q));
    d2ee[64] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C70415 +
            C3138 * C153927) *
               C154187 +
           (C70422 + C70423) * C154180 + C70432 * C154161 + C70433 * C154108) *
              C153783 * C153767 * C130 -
          (C70434 * C154108 + C70435 * C154161 + (C70425 + C70424) * C154180 +
           (C70423 + C70422) * C154187) *
              C153783 * C153767 * C131 +
          (C70432 * C154187 + C70433 * C154180 + (C70429 + C70428) * C154161 +
           (C70430 + C70431) * C154108) *
              C153783 * C153767 * C132 -
          (((C134 * C775 + C781 + C781 + C153882 * C777) * C153927 +
            C198 * C70415) *
               C154108 +
           (C70431 + C70430) * C154161 + C70434 * C154180 + C70435 * C154187) *
              C153783 * C153767 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C70415 +
             C3138 * C153927) *
                C154187 +
            (C70422 + C70423) * C154180 + C70432 * C154161 + C70433 * C154108) *
               C153783 * C326 -
           ((C70630 + C70631) * C154108 + (C70632 + C70633) * C154161 +
            (C70634 + C70635) * C154180 +
            (C3139 * C153927 + C3138 * C70415) * C154187) *
               C153783 * C327 +
           ((C3139 * C70415 + C3142 * C153927) * C154187 +
            (C70636 + C70637) * C154180 + (C70638 + C70639) * C154161 +
            (C70640 + C70641) * C154108) *
               C153783 * C328) *
              C329 +
          (((C70635 + C70634) * C154187 + (C70633 + C70632) * C154180 +
            (C70631 + C70630) * C154161 +
            (C412 * C70415 + C419 * C153927) * C154108) *
               C153783 * C327 -
           (C70434 * C154108 + C70435 * C154161 + (C70425 + C70424) * C154180 +
            (C70423 + C70422) * C154187) *
               C153783 * C326 -
           (((C134 * C1343 + C1359 + C1359 + C153882 * C1353) * C153927 +
             C419 * C70415) *
                C154108 +
            (C70641 + C70640) * C154161 + (C70639 + C70638) * C154180 +
            (C70637 + C70636) * C154187) *
               C153783 * C328) *
              C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C154188 +
            C3138 * C154184 + C3139 * C154174 + C3142 * C154116) *
               C73969 +
           (C73972 + C73973 + C73974 + C73975) * C153722) *
              C153783 * C153767 * C130 -
          ((C73976 + C73977 + C73978 + C73979) * C153722 +
           (C73975 + C73974 + C73973 + C73972) * C73969) *
              C153783 * C153767 * C131 +
          ((C73979 + C73978 + C73977 + C73976) * C73969 +
           (C73980 + C73981 + C73982 + C73983) * C153722) *
              C153783 * C153767 * C132 -
          (((C134 * C1343 + C1359 + C1359 + C153882 * C1353) * C154116 +
            C419 * C154174 + C412 * C154184 + C196 * C154188) *
               C153722 +
           (C73983 + C73982 + C73981 + C73980) * C73969) *
              C153783 * C153767 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C154188 +
             C3138 * C154184 + C3139 * C154174 + C3142 * C154116) *
                C73969 +
            (C73972 + C73973 + C73974 + C73975) * C153722) *
               C153783 * C326 -
           ((C74178 + C74179 + C74180 + C74181) * C153722 +
            (C4591 * C154116 + C3142 * C154174 + C3139 * C154184 +
             C3138 * C154188) *
                C73969) *
               C153783 * C327 +
           ((C3139 * C154188 + C3142 * C154184 + C4591 * C154174 +
             C28235 * C154116) *
                C73969 +
            (C74182 + C74183 + C74184 + C74185) * C153722) *
               C153783 * C328) *
              C329 +
          (((C74181 + C74180 + C74179 + C74178) * C73969 +
            (C414 * C154188 + C417 * C154184 + C3140 * C154174 +
             C3144 * C154116) *
                C153722) *
               C153783 * C327 -
           ((C73976 + C73977 + C73978 + C73979) * C153722 +
            (C73975 + C73974 + C73973 + C73972) * C73969) *
               C153783 * C326 -
           (((C134 * C4574 + C4586 + C4586 + C153882 * C4580) * C154116 +
             C3144 * C154174 + C3140 * C154184 + C417 * C154188) *
                C153722 +
            (C74185 + C74184 + C74183 + C74182) * C73969) *
               C153783 * C328) *
              C153754)) /
            (p * q * std::sqrt(p + q));
    d2ee[65] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C70415 +
             C3138 * C153927) *
                C154187 +
            (C70422 + C70423) * C154180 + C70432 * C154161 + C70433 * C154108) *
               C153783 * C154164 -
           (C71042 * C154108 + C71043 * C154161 + (C70634 + C70635) * C154180 +
            (C3139 * C153927 + C3138 * C70415) * C154187) *
               C153783 * C154165 +
           ((C3139 * C70415 + C3142 * C153927) * C154187 +
            (C70636 + C70637) * C154180 + (C70638 + C70639) * C154161 +
            (C70640 + C70641) * C154108) *
               C153783 * C1629) *
              C154085 +
          (((C70635 + C70634) * C154187 + (C70633 + C70632) * C154180 +
            (C70631 + C70630) * C154161 + (C71044 + C71045) * C154108) *
               C153783 * C154165 -
           (C70434 * C154108 + C70435 * C154161 + (C70425 + C70424) * C154180 +
            (C70423 + C70422) * C154187) *
               C153783 * C154164 -
           (((C134 * C1343 + C1359 + C1359 + C153882 * C1353) * C153927 +
             C419 * C70415) *
                C154108 +
            (C70641 + C70640) * C154161 + (C70639 + C70638) * C154180 +
            (C70637 + C70636) * C154187) *
               C153783 * C1629) *
              C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C154188 +
             C3138 * C154184 + C3139 * C154174 + C3142 * C154116) *
                C73969 +
            (C73972 + C73973 + C73974 + C73975) * C153722) *
               C153783 * C154164 -
           ((C74178 + C74179 + C74180 + C74181) * C153722 +
            (C4591 * C154116 + C3142 * C154174 + C3139 * C154184 +
             C3138 * C154188) *
                C73969) *
               C153783 * C154165 +
           ((C3139 * C154188 + C3142 * C154184 + C4591 * C154174 +
             C28235 * C154116) *
                C73969 +
            (C74182 + C74183 + C74184 + C74185) * C153722) *
               C153783 * C1629) *
              C154085 +
          (((C74181 + C74180 + C74179 + C74178) * C73969 +
            (C74582 + C74583 + C74584 + C74585) * C153722) *
               C153783 * C154165 -
           ((C73976 + C73977 + C73978 + C73979) * C153722 +
            (C73975 + C73974 + C73973 + C73972) * C73969) *
               C153783 * C154164 -
           (((C134 * C4574 + C4586 + C4586 + C153882 * C4580) * C154116 +
             C3144 * C154174 + C3140 * C154184 + C417 * C154188) *
                C153722 +
            (C74185 + C74184 + C74183 + C74182) * C73969) *
               C153783 * C1629) *
              C153754)) /
            (p * q * std::sqrt(p + q));
    d2ee[66] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C70415 +
             C3138 * C153927) *
                C154187 +
            (C70422 + C70423) * C154180 + C70432 * C154161 + C70433 * C154108) *
               C154094 -
           (C71240 * C154108 + C71241 * C154161 + (C70840 + C70841) * C154180 +
            (C4206 * C153927 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C70415) *
                C154187) *
               C153847) *
              C154164 +
          (((C4206 * C70415 + C4205 * C153927) * C154187 +
            (C71502 + C71503) * C154180 + (C71504 + C71505) * C154161 +
            (C71506 + C71507) * C154108) *
               C153847 -
           (C71042 * C154108 + C71043 * C154161 + (C70634 + C70635) * C154180 +
            (C3139 * C153927 + C3138 * C70415) * C154187) *
               C154094) *
              C154165 +
          (((C3139 * C70415 + C3142 * C153927) * C154187 +
            (C70636 + C70637) * C154180 + (C70638 + C70639) * C154161 +
            (C70640 + C70641) * C154108) *
               C154094 -
           (((C134 * C4171 + C4196 + C4196 + C153882 * C4179) * C153927 +
             C3877 * C70415) *
                C154108 +
            (C4208 * C153927 + C3416 * C70415) * C154161 +
            (C4207 * C153927 + C3417 * C70415) * C154180 +
            (C5574 * C153927 + C4205 * C70415) * C154187) *
               C153847) *
              C1629) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C154188 +
             C3138 * C154184 + C3139 * C154174 + C3142 * C154116) *
                C73969 +
            (C73972 + C73973 + C73974 + C73975) * C153722) *
               C154094 -
           ((C74380 + C74381 + C74382 + C74383) * C153722 +
            (C5574 * C154116 + C4205 * C154174 + C4206 * C154184 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C154188) *
                C73969) *
               C153847) *
              C154164 +
          (((C4206 * C154188 + C4205 * C154184 + C5574 * C154174 +
             C28789 * C154116) *
                C73969 +
            (C75042 + C75043 + C75044 + C75045) * C153722) *
               C153847 -
           ((C74178 + C74179 + C74180 + C74181) * C153722 +
            (C4591 * C154116 + C3142 * C154174 + C3139 * C154184 +
             C3138 * C154188) *
                C73969) *
               C154094) *
              C154165 +
          (((C3139 * C154188 + C3142 * C154184 + C4591 * C154174 +
             C28235 * C154116) *
                C73969 +
            (C74182 + C74183 + C74184 + C74185) * C153722) *
               C154094 -
           (((C134 * C28773 + C28784 + C28784 + C153882 * C28777) * C154116 +
             C28790 * C154174 + C4207 * C154184 + C3417 * C154188) *
                C153722 +
            (C29554 * C154116 + C28789 * C154174 + C5574 * C154184 +
             C4205 * C154188) *
                C73969) *
               C153847) *
              C1629) *
         C153748) /
            (p * q * std::sqrt(p + q));
    d2ee[67] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C70415 +
            C3138 * C153927) *
               C154187 +
           (C70422 + C70423) * C154180 + C70432 * C154161 + C70433 * C154108) *
              C153783 * C1338 -
          (C71042 * C154108 + C71043 * C154161 + (C70634 + C70635) * C154180 +
           (C3139 * C153927 + C3138 * C70415) * C154187) *
              C153783 * C1339 +
          ((C3139 * C70415 + C3142 * C153927) * C154187 +
           (C70636 + C70637) * C154180 + (C70638 + C70639) * C154161 +
           (C70640 + C70641) * C154108) *
              C153783 * C1340 -
          (((C134 * C3086 + C3121 + C3121 + C153882 * C3094) * C153927 +
            C3145 * C70415) *
               C154108 +
           (C3144 * C153927 + C3140 * C70415) * C154161 +
           (C3143 * C153927 + C3141 * C70415) * C154180 +
           (C4591 * C153927 + C3142 * C70415) * C154187) *
              C153783 * C1341) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C70415 +
             C3138 * C153927) *
                C154187 +
            (C70422 + C70423) * C154180 + C70432 * C154161 + C70433 * C154108) *
               C153783 * C1251 -
           (C71042 * C154108 + C71043 * C154161 + (C70634 + C70635) * C154180 +
            (C3139 * C153927 + C3138 * C70415) * C154187) *
               C153783 * C153819) *
              C1253 +
          (((C70635 + C70634) * C154187 + (C70633 + C70632) * C154180 +
            (C70631 + C70630) * C154161 + (C71044 + C71045) * C154108) *
               C153783 * C153819 -
           (C70434 * C154108 + C70435 * C154161 + (C70425 + C70424) * C154180 +
            (C70423 + C70422) * C154187) *
               C153783 * C1251) *
              C1254 +
          ((C70432 * C154187 + C70433 * C154180 + (C70429 + C70428) * C154161 +
            (C70430 + C70431) * C154108) *
               C153783 * C1251 -
           (((C134 * C342 + C395 + C395 + C153882 * C366) * C153927 +
             C784 * C70415) *
                C154108 +
            (C71045 + C71044) * C154161 + C71042 * C154180 + C71043 * C154187) *
               C153783 * C153819) *
              C1255)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C70415 +
             C3138 * C153927) *
                C154187 +
            (C70422 + C70423) * C154180 + C70432 * C154161 + C70433 * C154108) *
               C549 -
           (C71240 * C154108 + C71241 * C154161 + (C70840 + C70841) * C154180 +
            (C4206 * C153927 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C70415) *
                C154187) *
               C550 +
           (((C134 * C557 + C602 + C602 + C153882 * C581) * C70415 +
             C4830 * C153927) *
                C154187 +
            (C70842 + C70843) * C154180 + (C70844 + C70845) * C154161 +
            (C70846 + C70847) * C154108) *
               C551) *
              C1251 +
          (((C4206 * C70415 + C4205 * C153927) * C154187 +
            (C71502 + C71503) * C154180 + (C71504 + C71505) * C154161 +
            (C71506 + C71507) * C154108) *
               C550 -
           (C71042 * C154108 + C71043 * C154161 + (C70634 + C70635) * C154180 +
            (C3139 * C153927 + C3138 * C70415) * C154187) *
               C549 -
           (((C134 * C3372 + C3403 + C3403 + C153882 * C3380) * C153927 +
             C11810 * C70415) *
                C154108 +
            (C3421 * C153927 + C3420 * C70415) * C154161 +
            (C3419 * C153927 + C3418 * C70415) * C154180 +
            (C4831 * C153927 + C4830 * C70415) * C154187) *
               C551) *
              C153819) *
         C153748) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C154188 +
             C3138 * C154184 + C3139 * C154174 + C3142 * C154116) *
                C73969 +
            (C73972 + C73973 + C73974 + C73975) * C153722) *
               C153783 * C1251 -
           ((C74178 + C74179 + C74180 + C74181) * C153722 +
            (C4591 * C154116 + C3142 * C154174 + C3139 * C154184 +
             C3138 * C154188) *
                C73969) *
               C153783 * C153819) *
              C1253 +
          (((C74181 + C74180 + C74179 + C74178) * C73969 +
            (C74582 + C74583 + C74584 + C74585) * C153722) *
               C153783 * C153819 -
           ((C73976 + C73977 + C73978 + C73979) * C153722 +
            (C73975 + C73974 + C73973 + C73972) * C73969) *
               C153783 * C1251) *
              C1254 +
          (((C73979 + C73978 + C73977 + C73976) * C73969 +
            (C73980 + C73981 + C73982 + C73983) * C153722) *
               C153783 * C1251 -
           (((C134 * C3086 + C3121 + C3121 + C153882 * C3094) * C154116 +
             C3145 * C154174 + C418 * C154184 + C413 * C154188) *
                C153722 +
            (C74585 + C74584 + C74583 + C74582) * C73969) *
               C153783 * C153819) *
              C1255)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C154188 +
            C3138 * C154184 + C3139 * C154174 + C3142 * C154116) *
               C73969 +
           (C73972 + C73973 + C73974 + C73975) * C153722) *
              C153783 * C1338 -
          ((C74178 + C74179 + C74180 + C74181) * C153722 +
           (C4591 * C154116 + C3142 * C154174 + C3139 * C154184 +
            C3138 * C154188) *
               C73969) *
              C153783 * C1339 +
          ((C3139 * C154188 + C3142 * C154184 + C4591 * C154174 +
            C28235 * C154116) *
               C73969 +
           (C74182 + C74183 + C74184 + C74185) * C153722) *
              C153783 * C1340 -
          (((C134 * C28219 + C28230 + C28230 + C153882 * C28223) * C154116 +
            C28236 * C154174 + C3143 * C154184 + C3141 * C154188) *
               C153722 +
           (C29003 * C154116 + C28235 * C154174 + C4591 * C154184 +
            C3142 * C154188) *
               C73969) *
              C153783 * C1341) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C154188 +
             C3138 * C154184 + C3139 * C154174 + C3142 * C154116) *
                C73969 +
            (C73972 + C73973 + C73974 + C73975) * C153722) *
               C549 -
           ((C74380 + C74381 + C74382 + C74383) * C153722 +
            (C5574 * C154116 + C4205 * C154174 + C4206 * C154184 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C154188) *
                C73969) *
               C550 +
           (((C134 * C557 + C602 + C602 + C153882 * C581) * C154188 +
             C4830 * C154184 + C4831 * C154174 + C29138 * C154116) *
                C73969 +
            (C74384 + C74385 + C74386 + C74387) * C153722) *
               C551) *
              C1251 +
          (((C4206 * C154188 + C4205 * C154184 + C5574 * C154174 +
             C28789 * C154116) *
                C73969 +
            (C75042 + C75043 + C75044 + C75045) * C153722) *
               C550 -
           ((C74178 + C74179 + C74180 + C74181) * C153722 +
            (C4591 * C154116 + C3142 * C154174 + C3139 * C154184 +
             C3138 * C154188) *
                C73969) *
               C549 -
           (((C134 * C28359 + C28366 + C28366 + C153882 * C28363) * C154116 +
             C34998 * C154174 + C3419 * C154184 + C3418 * C154188) *
                C153722 +
            (C29139 * C154116 + C29138 * C154174 + C4831 * C154184 +
             C4830 * C154188) *
                C73969) *
               C551) *
              C153819) *
         C153748) /
            (p * q * std::sqrt(p + q));
    d2ee[68] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C153882 * C152) * C70415 +
              C3138 * C153927) *
                 C154187 +
             (C70422 + C70423) * C154180 + C70432 * C154161 +
             C70433 * C154108) *
                C154094 -
            (C71240 * C154108 + C71241 * C154161 + (C70840 + C70841) * C154180 +
             (C4206 * C153927 +
              (C134 * C556 + C601 + C601 + C153882 * C580) * C70415) *
                 C154187) *
                C153847) *
               C1251 +
           (((C4206 * C70415 + C4205 * C153927) * C154187 +
             (C71502 + C71503) * C154180 + (C71504 + C71505) * C154161 +
             (C71506 + C71507) * C154108) *
                C153847 -
            (C71042 * C154108 + C71043 * C154161 + (C70634 + C70635) * C154180 +
             (C3139 * C153927 + C3138 * C70415) * C154187) *
                C154094) *
               C153819) *
              C154085 +
          ((((C70841 + C70840) * C154187 + (C70839 + C70838) * C154180 +
             (C70837 + C70836) * C154161 + (C71242 + C71243) * C154108) *
                C153847 -
            (C70434 * C154108 + C70435 * C154161 + (C70425 + C70424) * C154180 +
             (C70423 + C70422) * C154187) *
                C154094) *
               C1251 +
           (((C70635 + C70634) * C154187 + (C70633 + C70632) * C154180 +
             (C70631 + C70630) * C154161 + (C71044 + C71045) * C154108) *
                C154094 -
            (((C134 * C1916 + C1932 + C1932 + C153882 * C1926) * C153927 +
              C1125 * C70415) *
                 C154108 +
             (C71507 + C71506) * C154161 + (C71505 + C71504) * C154180 +
             (C71503 + C71502) * C154187) *
                C153847) *
               C153819) *
              C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C153882 * C152) * C154188 +
              C3138 * C154184 + C3139 * C154174 + C3142 * C154116) *
                 C73969 +
             (C73972 + C73973 + C73974 + C73975) * C153722) *
                C154094 -
            ((C74380 + C74381 + C74382 + C74383) * C153722 +
             (C5574 * C154116 + C4205 * C154174 + C4206 * C154184 +
              (C134 * C556 + C601 + C601 + C153882 * C580) * C154188) *
                 C73969) *
                C153847) *
               C1251 +
           (((C4206 * C154188 + C4205 * C154184 + C5574 * C154174 +
              C28789 * C154116) *
                 C73969 +
             (C75042 + C75043 + C75044 + C75045) * C153722) *
                C153847 -
            ((C74178 + C74179 + C74180 + C74181) * C153722 +
             (C4591 * C154116 + C3142 * C154174 + C3139 * C154184 +
              C3138 * C154188) *
                 C73969) *
                C154094) *
               C153819) *
              C154085 +
          ((((C74383 + C74382 + C74381 + C74380) * C73969 +
             (C74780 + C74781 + C74782 + C74783) * C153722) *
                C153847 -
            ((C73976 + C73977 + C73978 + C73979) * C153722 +
             (C73975 + C73974 + C73973 + C73972) * C73969) *
                C154094) *
               C1251 +
           (((C74181 + C74180 + C74179 + C74178) * C73969 +
             (C74582 + C74583 + C74584 + C74585) * C153722) *
                C154094 -
            (((C134 * C5557 + C5569 + C5569 + C153882 * C5563) * C154116 +
              C4208 * C154174 + C3416 * C154184 + C1123 * C154188) *
                 C153722 +
             (C75045 + C75044 + C75043 + C75042) * C73969) *
                C153847) *
               C153819) *
              C153754)) /
            (p * q * std::sqrt(p + q));
    d2ee[69] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C70415 +
             C3138 * C153927) *
                C154187 +
            (C70422 + C70423) * C154180 + C70432 * C154161 + C70433 * C154108) *
               C153783 * C1251 -
           (C71042 * C154108 + C71043 * C154161 + (C70634 + C70635) * C154180 +
            (C3139 * C153927 + C3138 * C70415) * C154187) *
               C153783 * C153819) *
              C1253 +
          (((C70635 + C70634) * C154187 + (C70633 + C70632) * C154180 +
            (C70631 + C70630) * C154161 + (C71044 + C71045) * C154108) *
               C153783 * C153819 -
           (C70434 * C154108 + C70435 * C154161 + (C70425 + C70424) * C154180 +
            (C70423 + C70422) * C154187) *
               C153783 * C1251) *
              C1254 +
          ((C70432 * C154187 + C70433 * C154180 + (C70429 + C70428) * C154161 +
            (C70430 + C70431) * C154108) *
               C153783 * C1251 -
           (((C134 * C342 + C395 + C395 + C153882 * C366) * C153927 +
             C784 * C70415) *
                C154108 +
            (C71045 + C71044) * C154161 + C71042 * C154180 + C71043 * C154187) *
               C153783 * C153819) *
              C1255)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C70415 +
            C3138 * C153927) *
               C154187 +
           (C70422 + C70423) * C154180 + C70432 * C154161 + C70433 * C154108) *
              C153783 * C1338 -
          (C71042 * C154108 + C71043 * C154161 + (C70634 + C70635) * C154180 +
           (C3139 * C153927 + C3138 * C70415) * C154187) *
              C153783 * C1339 +
          ((C3139 * C70415 + C3142 * C153927) * C154187 +
           (C70636 + C70637) * C154180 + (C70638 + C70639) * C154161 +
           (C70640 + C70641) * C154108) *
              C153783 * C1340 -
          (((C134 * C3086 + C3121 + C3121 + C153882 * C3094) * C153927 +
            C3145 * C70415) *
               C154108 +
           (C3144 * C153927 + C3140 * C70415) * C154161 +
           (C3143 * C153927 + C3141 * C70415) * C154180 +
           (C4591 * C153927 + C3142 * C70415) * C154187) *
              C153783 * C1341) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C154188 +
             C3138 * C154184 + C3139 * C154174 + C3142 * C154116) *
                C73969 +
            (C73972 + C73973 + C73974 + C73975) * C153722) *
               C153783 * C1251 -
           ((C74178 + C74179 + C74180 + C74181) * C153722 +
            (C4591 * C154116 + C3142 * C154174 + C3139 * C154184 +
             C3138 * C154188) *
                C73969) *
               C153783 * C153819) *
              C1253 +
          (((C74181 + C74180 + C74179 + C74178) * C73969 +
            (C74582 + C74583 + C74584 + C74585) * C153722) *
               C153783 * C153819 -
           ((C73976 + C73977 + C73978 + C73979) * C153722 +
            (C73975 + C73974 + C73973 + C73972) * C73969) *
               C153783 * C1251) *
              C1254 +
          (((C73979 + C73978 + C73977 + C73976) * C73969 +
            (C73980 + C73981 + C73982 + C73983) * C153722) *
               C153783 * C1251 -
           (((C134 * C3086 + C3121 + C3121 + C153882 * C3094) * C154116 +
             C3145 * C154174 + C418 * C154184 + C413 * C154188) *
                C153722 +
            (C74585 + C74584 + C74583 + C74582) * C73969) *
               C153783 * C153819) *
              C1255)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C154188 +
            C3138 * C154184 + C3139 * C154174 + C3142 * C154116) *
               C73969 +
           (C73972 + C73973 + C73974 + C73975) * C153722) *
              C153783 * C1338 -
          ((C74178 + C74179 + C74180 + C74181) * C153722 +
           (C4591 * C154116 + C3142 * C154174 + C3139 * C154184 +
            C3138 * C154188) *
               C73969) *
              C153783 * C1339 +
          ((C3139 * C154188 + C3142 * C154184 + C4591 * C154174 +
            C28235 * C154116) *
               C73969 +
           (C74182 + C74183 + C74184 + C74185) * C153722) *
              C153783 * C1340 -
          (((C134 * C28219 + C28230 + C28230 + C153882 * C28223) * C154116 +
            C28236 * C154174 + C3143 * C154184 + C3141 * C154188) *
               C153722 +
           (C29003 * C154116 + C28235 * C154174 + C4591 * C154184 +
            C3142 * C154188) *
               C73969) *
              C153783 * C1341) *
         C153748) /
            (p * q * std::sqrt(p + q));
    d2ee[70] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C153882 * C152) * C70415 +
              C3138 * C153927) *
                 C154187 +
             (C70422 + C70423) * C154180 + C70432 * C154161 +
             C70433 * C154108) *
                C2058 -
            (C71240 * C154108 + C71241 * C154161 + (C70840 + C70841) * C154180 +
             (C4206 * C153927 +
              (C134 * C556 + C601 + C601 + C153882 * C580) * C70415) *
                 C154187) *
                C153847) *
               C154093 +
           (((C4206 * C70415 + C4205 * C153927) * C154187 +
             (C71502 + C71503) * C154180 + (C71504 + C71505) * C154161 +
             (C71506 + C71507) * C154108) *
                C153847 -
            (C71042 * C154108 + C71043 * C154161 + (C70634 + C70635) * C154180 +
             (C3139 * C153927 + C3138 * C70415) * C154187) *
                C2058) *
               C153819) *
              C154085 +
          ((((C70841 + C70840) * C154187 + (C70839 + C70838) * C154180 +
             (C70837 + C70836) * C154161 + (C71242 + C71243) * C154108) *
                C153847 -
            (C70434 * C154108 + C70435 * C154161 + (C70425 + C70424) * C154180 +
             (C70423 + C70422) * C154187) *
                C2058) *
               C154093 +
           (((C70635 + C70634) * C154187 + (C70633 + C70632) * C154180 +
             (C70631 + C70630) * C154161 + (C71044 + C71045) * C154108) *
                C2058 -
            (((C134 * C1916 + C1932 + C1932 + C153882 * C1926) * C153927 +
              C1125 * C70415) *
                 C154108 +
             (C71507 + C71506) * C154161 + (C71505 + C71504) * C154180 +
             (C71503 + C71502) * C154187) *
                C153847) *
               C153819) *
              C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C153882 * C152) * C154188 +
              C3138 * C154184 + C3139 * C154174 + C3142 * C154116) *
                 C73969 +
             (C73972 + C73973 + C73974 + C73975) * C153722) *
                C2058 -
            ((C74380 + C74381 + C74382 + C74383) * C153722 +
             (C5574 * C154116 + C4205 * C154174 + C4206 * C154184 +
              (C134 * C556 + C601 + C601 + C153882 * C580) * C154188) *
                 C73969) *
                C153847) *
               C154093 +
           (((C4206 * C154188 + C4205 * C154184 + C5574 * C154174 +
              C28789 * C154116) *
                 C73969 +
             (C75042 + C75043 + C75044 + C75045) * C153722) *
                C153847 -
            ((C74178 + C74179 + C74180 + C74181) * C153722 +
             (C4591 * C154116 + C3142 * C154174 + C3139 * C154184 +
              C3138 * C154188) *
                 C73969) *
                C2058) *
               C153819) *
              C154085 +
          ((((C74383 + C74382 + C74381 + C74380) * C73969 +
             (C74780 + C74781 + C74782 + C74783) * C153722) *
                C153847 -
            ((C73976 + C73977 + C73978 + C73979) * C153722 +
             (C73975 + C73974 + C73973 + C73972) * C73969) *
                C2058) *
               C154093 +
           (((C74181 + C74180 + C74179 + C74178) * C73969 +
             (C74582 + C74583 + C74584 + C74585) * C153722) *
                C2058 -
            (((C134 * C5557 + C5569 + C5569 + C153882 * C5563) * C154116 +
              C4208 * C154174 + C3416 * C154184 + C1123 * C154188) *
                 C153722 +
             (C75045 + C75044 + C75043 + C75042) * C73969) *
                C153847) *
               C153819) *
              C153754)) /
            (p * q * std::sqrt(p + q));
    d2ee[71] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C70415 +
             C3138 * C153927) *
                C154187 +
            (C70422 + C70423) * C154180 + C70432 * C154161 + C70433 * C154108) *
               C154166 -
           (C71240 * C154108 + C71241 * C154161 + (C70840 + C70841) * C154180 +
            (C4206 * C153927 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C70415) *
                C154187) *
               C154167 +
           (((C134 * C557 + C602 + C602 + C153882 * C581) * C70415 +
             C4830 * C153927) *
                C154187 +
            (C70842 + C70843) * C154180 + (C70844 + C70845) * C154161 +
            (C70846 + C70847) * C154108) *
               C2574) *
              C154093 +
          (((C4206 * C70415 + C4205 * C153927) * C154187 +
            (C71502 + C71503) * C154180 + (C71504 + C71505) * C154161 +
            (C71506 + C71507) * C154108) *
               C154167 -
           (C71042 * C154108 + C71043 * C154161 + (C70634 + C70635) * C154180 +
            (C3139 * C153927 + C3138 * C70415) * C154187) *
               C154166 -
           (((C134 * C3372 + C3403 + C3403 + C153882 * C3380) * C153927 +
             C11810 * C70415) *
                C154108 +
            (C3421 * C153927 + C3420 * C70415) * C154161 +
            (C3419 * C153927 + C3418 * C70415) * C154180 +
            (C4831 * C153927 + C4830 * C70415) * C154187) *
               C2574) *
              C153819) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C154188 +
             C3138 * C154184 + C3139 * C154174 + C3142 * C154116) *
                C73969 +
            (C73972 + C73973 + C73974 + C73975) * C153722) *
               C154166 -
           ((C74380 + C74381 + C74382 + C74383) * C153722 +
            (C5574 * C154116 + C4205 * C154174 + C4206 * C154184 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C154188) *
                C73969) *
               C154167 +
           (((C134 * C557 + C602 + C602 + C153882 * C581) * C154188 +
             C4830 * C154184 + C4831 * C154174 + C29138 * C154116) *
                C73969 +
            (C74384 + C74385 + C74386 + C74387) * C153722) *
               C2574) *
              C154093 +
          (((C4206 * C154188 + C4205 * C154184 + C5574 * C154174 +
             C28789 * C154116) *
                C73969 +
            (C75042 + C75043 + C75044 + C75045) * C153722) *
               C154167 -
           ((C74178 + C74179 + C74180 + C74181) * C153722 +
            (C4591 * C154116 + C3142 * C154174 + C3139 * C154184 +
             C3138 * C154188) *
                C73969) *
               C154166 -
           (((C134 * C28359 + C28366 + C28366 + C153882 * C28363) * C154116 +
             C34998 * C154174 + C3419 * C154184 + C3418 * C154188) *
                C153722 +
            (C29139 * C154116 + C29138 * C154174 + C4831 * C154184 +
             C4830 * C154188) *
                C73969) *
               C2574) *
              C153819) *
         C153748) /
            (p * q * std::sqrt(p + q));
    d2ee[72] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C70415 +
             C3138 * C153927) *
                C154187 +
            (C70422 + C70423) * C154180 + C70432 * C154161 + C70433 * C154108) *
               C2058 -
           (C71240 * C154108 + C71241 * C154161 + (C70840 + C70841) * C154180 +
            (C4206 * C153927 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C70415) *
                C154187) *
               C153847) *
              C326 +
          (((C4206 * C70415 + C4205 * C153927) * C154187 +
            (C71502 + C71503) * C154180 + (C71504 + C71505) * C154161 +
            (C71506 + C71507) * C154108) *
               C153847 -
           (C71042 * C154108 + C71043 * C154161 + (C70634 + C70635) * C154180 +
            (C3139 * C153927 + C3138 * C70415) * C154187) *
               C2058) *
              C327 +
          (((C3139 * C70415 + C3142 * C153927) * C154187 +
            (C70636 + C70637) * C154180 + (C70638 + C70639) * C154161 +
            (C70640 + C70641) * C154108) *
               C2058 -
           (((C134 * C4171 + C4196 + C4196 + C153882 * C4179) * C153927 +
             C3877 * C70415) *
                C154108 +
            (C4208 * C153927 + C3416 * C70415) * C154161 +
            (C4207 * C153927 + C3417 * C70415) * C154180 +
            (C5574 * C153927 + C4205 * C70415) * C154187) *
               C153847) *
              C328) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C70415 +
             C3138 * C153927) *
                C154187 +
            (C70422 + C70423) * C154180 + C70432 * C154161 + C70433 * C154108) *
               C2058 -
           (C71240 * C154108 + C71241 * C154161 + (C70840 + C70841) * C154180 +
            (C4206 * C153927 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C70415) *
                C154187) *
               C153847) *
              C153767 * C1253 +
          (((C70841 + C70840) * C154187 + (C70839 + C70838) * C154180 +
            (C70837 + C70836) * C154161 + (C71242 + C71243) * C154108) *
               C153847 -
           (C70434 * C154108 + C70435 * C154161 + (C70425 + C70424) * C154180 +
            (C70423 + C70422) * C154187) *
               C2058) *
              C153767 * C1254 +
          ((C70432 * C154187 + C70433 * C154180 + (C70429 + C70428) * C154161 +
            (C70430 + C70431) * C154108) *
               C2058 -
           (((C134 * C1086 + C1113 + C1113 + C153882 * C1098) * C153927 +
             C918 * C70415) *
                C154108 +
            (C71243 + C71242) * C154161 + C71240 * C154180 + C71241 * C154187) *
               C153847) *
              C153767 * C1255)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C70415 +
            C3138 * C153927) *
               C154187 +
           (C70422 + C70423) * C154180 + C70432 * C154161 + C70433 * C154108) *
              C2264 -
          (C71240 * C154108 + C71241 * C154161 + (C70840 + C70841) * C154180 +
           (C4206 * C153927 +
            (C134 * C556 + C601 + C601 + C153882 * C580) * C70415) *
               C154187) *
              C2265 +
          (((C134 * C557 + C602 + C602 + C153882 * C581) * C70415 +
            C4830 * C153927) *
               C154187 +
           (C70842 + C70843) * C154180 + (C70844 + C70845) * C154161 +
           (C70846 + C70847) * C154108) *
              C2266 -
          (((C134 * C8529 + C14154 + C14154 + C153882 * C8531) * C153927 +
            (C134 * C2269 + C2285 + C2285 + C153882 * C2279) * C70415) *
               C154108 +
           ((C134 * C6157 + C6176 + C6176 + C153882 * C6169) * C153927 +
            (C134 * C2270 + C2286 + C2286 + C153882 * C2280) * C70415) *
               C154161 +
           ((C134 * C6159 + C6178 + C6178 + C153882 * C6171) * C153927 +
            (C134 * C2271 + C2287 + C2287 + C153882 * C2281) * C70415) *
               C154180 +
           ((C134 * C6161 + C6180 + C6180 + C153882 * C6173) * C153927 +
            (C134 * C2272 + C2288 + C2288 + C153882 * C2282) * C70415) *
               C154187) *
              C2267) *
         C153767 * C153748) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C154188 +
             C3138 * C154184 + C3139 * C154174 + C3142 * C154116) *
                C73969 +
            (C73972 + C73973 + C73974 + C73975) * C153722) *
               C2058 -
           ((C74380 + C74381 + C74382 + C74383) * C153722 +
            (C5574 * C154116 + C4205 * C154174 + C4206 * C154184 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C154188) *
                C73969) *
               C153847) *
              C153767 * C1253 +
          (((C74383 + C74382 + C74381 + C74380) * C73969 +
            (C74780 + C74781 + C74782 + C74783) * C153722) *
               C153847 -
           ((C73976 + C73977 + C73978 + C73979) * C153722 +
            (C73975 + C73974 + C73973 + C73972) * C73969) *
               C2058) *
              C153767 * C1254 +
          (((C73979 + C73978 + C73977 + C73976) * C73969 +
            (C73980 + C73981 + C73982 + C73983) * C153722) *
               C2058 -
           (((C134 * C4171 + C4196 + C4196 + C153882 * C4179) * C154116 +
             C3877 * C154174 + C1124 * C154184 + C634 * C154188) *
                C153722 +
            (C74783 + C74782 + C74781 + C74780) * C73969) *
               C153847) *
              C153767 * C1255)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C154188 +
             C3138 * C154184 + C3139 * C154174 + C3142 * C154116) *
                C73969 +
            (C73972 + C73973 + C73974 + C73975) * C153722) *
               C2058 -
           ((C74380 + C74381 + C74382 + C74383) * C153722 +
            (C5574 * C154116 + C4205 * C154174 + C4206 * C154184 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C154188) *
                C73969) *
               C153847) *
              C326 +
          (((C4206 * C154188 + C4205 * C154184 + C5574 * C154174 +
             C28789 * C154116) *
                C73969 +
            (C75042 + C75043 + C75044 + C75045) * C153722) *
               C153847 -
           ((C74178 + C74179 + C74180 + C74181) * C153722 +
            (C4591 * C154116 + C3142 * C154174 + C3139 * C154184 +
             C3138 * C154188) *
                C73969) *
               C2058) *
              C327 +
          (((C3139 * C154188 + C3142 * C154184 + C4591 * C154174 +
             C28235 * C154116) *
                C73969 +
            (C74182 + C74183 + C74184 + C74185) * C153722) *
               C2058 -
           (((C134 * C28773 + C28784 + C28784 + C153882 * C28777) * C154116 +
             C28790 * C154174 + C4207 * C154184 + C3417 * C154188) *
                C153722 +
            (C29554 * C154116 + C28789 * C154174 + C5574 * C154184 +
             C4205 * C154188) *
                C73969) *
               C153847) *
              C328) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C154188 +
            C3138 * C154184 + C3139 * C154174 + C3142 * C154116) *
               C73969 +
           (C73972 + C73973 + C73974 + C73975) * C153722) *
              C2264 -
          ((C74380 + C74381 + C74382 + C74383) * C153722 +
           (C5574 * C154116 + C4205 * C154174 + C4206 * C154184 +
            (C134 * C556 + C601 + C601 + C153882 * C580) * C154188) *
               C73969) *
              C2265 +
          (((C134 * C557 + C602 + C602 + C153882 * C581) * C154188 +
            C4830 * C154184 + C4831 * C154174 + C29138 * C154116) *
               C73969 +
           (C74384 + C74385 + C74386 + C74387) * C153722) *
              C2266 -
          (((C134 * C31684 + C37340 + C37340 + C153882 * C31686) * C154116 +
            (C134 * C6158 + C6177 + C6177 + C153882 * C6170) * C154174 +
            (C134 * C6159 + C6178 + C6178 + C153882 * C6171) * C154184 +
            (C134 * C2271 + C2287 + C2287 + C153882 * C2281) * C154188) *
               C153722 +
           ((C134 * C29881 + C29888 + C29888 + C153882 * C29885) * C154116 +
            (C134 * C6160 + C6179 + C6179 + C153882 * C6172) * C154174 +
            (C134 * C6161 + C6180 + C6180 + C153882 * C6173) * C154184 +
            (C134 * C2272 + C2288 + C2288 + C153882 * C2282) * C154188) *
               C73969) *
              C2267) *
         C153767 * C153748) /
            (p * q * std::sqrt(p + q));
    d2ee[73] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C70415 +
             C3138 * C153927) *
                C154187 +
            (C70422 + C70423) * C154180 + C70432 * C154161 + C70433 * C154108) *
               C154166 -
           (C71240 * C154108 + C71241 * C154161 + (C70840 + C70841) * C154180 +
            (C4206 * C153927 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C70415) *
                C154187) *
               C154167 +
           (((C134 * C557 + C602 + C602 + C153882 * C581) * C70415 +
             C4830 * C153927) *
                C154187 +
            (C70842 + C70843) * C154180 + (C70844 + C70845) * C154161 +
            (C70846 + C70847) * C154108) *
               C2574) *
              C153767 * C154085 +
          (((C70841 + C70840) * C154187 + (C70839 + C70838) * C154180 +
            (C70837 + C70836) * C154161 + (C71242 + C71243) * C154108) *
               C154167 -
           (C70434 * C154108 + C70435 * C154161 + (C70425 + C70424) * C154180 +
            (C70423 + C70422) * C154187) *
               C154166 -
           (((C134 * C1485 + C1501 + C1501 + C153882 * C1495) * C153927 +
             C640 * C70415) *
                C154108 +
            (C70847 + C70846) * C154161 + (C70845 + C70844) * C154180 +
            (C70843 + C70842) * C154187) *
               C2574) *
              C153767 * C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C154188 +
             C3138 * C154184 + C3139 * C154174 + C3142 * C154116) *
                C73969 +
            (C73972 + C73973 + C73974 + C73975) * C153722) *
               C154166 -
           ((C74380 + C74381 + C74382 + C74383) * C153722 +
            (C5574 * C154116 + C4205 * C154174 + C4206 * C154184 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C154188) *
                C73969) *
               C154167 +
           (((C134 * C557 + C602 + C602 + C153882 * C581) * C154188 +
             C4830 * C154184 + C4831 * C154174 + C29138 * C154116) *
                C73969 +
            (C74384 + C74385 + C74386 + C74387) * C153722) *
               C2574) *
              C153767 * C154085 +
          (((C74383 + C74382 + C74381 + C74380) * C73969 +
            (C74780 + C74781 + C74782 + C74783) * C153722) *
               C154167 -
           ((C73976 + C73977 + C73978 + C73979) * C153722 +
            (C73975 + C73974 + C73973 + C73972) * C73969) *
               C154166 -
           (((C134 * C4809 + C4823 + C4823 + C153882 * C4815) * C154116 +
             C3421 * C154174 + C3420 * C154184 + C638 * C154188) *
                C153722 +
            (C74387 + C74386 + C74385 + C74384) * C73969) *
               C2574) *
              C153767 * C153754)) /
            (p * q * std::sqrt(p + q));
    d2ee[74] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C70415 +
             C3138 * C153927) *
                C154187 +
            (C70422 + C70423) * C154180 + C70432 * C154161 + C70433 * C154108) *
               C2058 -
           (C71240 * C154108 + C71241 * C154161 + (C70840 + C70841) * C154180 +
            (C4206 * C153927 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C70415) *
                C154187) *
               C153847) *
              C153767 * C1253 +
          (((C70841 + C70840) * C154187 + (C70839 + C70838) * C154180 +
            (C70837 + C70836) * C154161 + (C71242 + C71243) * C154108) *
               C153847 -
           (C70434 * C154108 + C70435 * C154161 + (C70425 + C70424) * C154180 +
            (C70423 + C70422) * C154187) *
               C2058) *
              C153767 * C1254 +
          ((C70432 * C154187 + C70433 * C154180 + (C70429 + C70428) * C154161 +
            (C70430 + C70431) * C154108) *
               C2058 -
           (((C134 * C1086 + C1113 + C1113 + C153882 * C1098) * C153927 +
             C918 * C70415) *
                C154108 +
            (C71243 + C71242) * C154161 + C71240 * C154180 + C71241 * C154187) *
               C153847) *
              C153767 * C1255)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C70415 +
             C3138 * C153927) *
                C154187 +
            (C70422 + C70423) * C154180 + C70432 * C154161 + C70433 * C154108) *
               C2058 -
           (C71240 * C154108 + C71241 * C154161 + (C70840 + C70841) * C154180 +
            (C4206 * C153927 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C70415) *
                C154187) *
               C153847) *
              C326 +
          (((C4206 * C70415 + C4205 * C153927) * C154187 +
            (C71502 + C71503) * C154180 + (C71504 + C71505) * C154161 +
            (C71506 + C71507) * C154108) *
               C153847 -
           (C71042 * C154108 + C71043 * C154161 + (C70634 + C70635) * C154180 +
            (C3139 * C153927 + C3138 * C70415) * C154187) *
               C2058) *
              C327 +
          (((C3139 * C70415 + C3142 * C153927) * C154187 +
            (C70636 + C70637) * C154180 + (C70638 + C70639) * C154161 +
            (C70640 + C70641) * C154108) *
               C2058 -
           (((C134 * C4171 + C4196 + C4196 + C153882 * C4179) * C153927 +
             C3877 * C70415) *
                C154108 +
            (C4208 * C153927 + C3416 * C70415) * C154161 +
            (C4207 * C153927 + C3417 * C70415) * C154180 +
            (C5574 * C153927 + C4205 * C70415) * C154187) *
               C153847) *
              C328) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C154188 +
             C3138 * C154184 + C3139 * C154174 + C3142 * C154116) *
                C73969 +
            (C73972 + C73973 + C73974 + C73975) * C153722) *
               C2058 -
           ((C74380 + C74381 + C74382 + C74383) * C153722 +
            (C5574 * C154116 + C4205 * C154174 + C4206 * C154184 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C154188) *
                C73969) *
               C153847) *
              C153767 * C1253 +
          (((C74383 + C74382 + C74381 + C74380) * C73969 +
            (C74780 + C74781 + C74782 + C74783) * C153722) *
               C153847 -
           ((C73976 + C73977 + C73978 + C73979) * C153722 +
            (C73975 + C73974 + C73973 + C73972) * C73969) *
               C2058) *
              C153767 * C1254 +
          (((C73979 + C73978 + C73977 + C73976) * C73969 +
            (C73980 + C73981 + C73982 + C73983) * C153722) *
               C2058 -
           (((C134 * C4171 + C4196 + C4196 + C153882 * C4179) * C154116 +
             C3877 * C154174 + C1124 * C154184 + C634 * C154188) *
                C153722 +
            (C74783 + C74782 + C74781 + C74780) * C73969) *
               C153847) *
              C153767 * C1255)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C154188 +
             C3138 * C154184 + C3139 * C154174 + C3142 * C154116) *
                C73969 +
            (C73972 + C73973 + C73974 + C73975) * C153722) *
               C2058 -
           ((C74380 + C74381 + C74382 + C74383) * C153722 +
            (C5574 * C154116 + C4205 * C154174 + C4206 * C154184 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C154188) *
                C73969) *
               C153847) *
              C326 +
          (((C4206 * C154188 + C4205 * C154184 + C5574 * C154174 +
             C28789 * C154116) *
                C73969 +
            (C75042 + C75043 + C75044 + C75045) * C153722) *
               C153847 -
           ((C74178 + C74179 + C74180 + C74181) * C153722 +
            (C4591 * C154116 + C3142 * C154174 + C3139 * C154184 +
             C3138 * C154188) *
                C73969) *
               C2058) *
              C327 +
          (((C3139 * C154188 + C3142 * C154184 + C4591 * C154174 +
             C28235 * C154116) *
                C73969 +
            (C74182 + C74183 + C74184 + C74185) * C153722) *
               C2058 -
           (((C134 * C28773 + C28784 + C28784 + C153882 * C28777) * C154116 +
             C28790 * C154174 + C4207 * C154184 + C3417 * C154188) *
                C153722 +
            (C29554 * C154116 + C28789 * C154174 + C5574 * C154184 +
             C4205 * C154188) *
                C73969) *
               C153847) *
              C328) *
         C153748) /
            (p * q * std::sqrt(p + q));
    d2ee[75] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 (((((C97193 * C136 + C97198 + C97198 + C97191 * C152 +
                      C97195 * C556 + C97199 + C97199 + C153969 * C580) *
                         C153923 +
                     (C101439 + C101440) * C153930 + C101451 * C82771) *
                        C154074 +
                    ((C97252 + C97253) * C153923 + C101388 * C153930 +
                     C101389 * C82771) *
                        C153722) *
                       C153783 * C154093 -
                   ((C101452 * C82771 + C101394 * C153930 + C101395 * C153923) *
                        C153722 +
                    (C103282 * C82771 + (C101442 + C101441) * C153930 +
                     (C101440 + C101439) * C153923) *
                        C154074) *
                       C153783 * C153819) *
                      C154162 +
                  (((C101388 * C153923 + C101389 * C153930 + C101453 * C82771) *
                        C154074 +
                    (C102070 * C153923 + C102071 * C153930 +
                     (C101449 + C101450) * C82771) *
                        C153722) *
                       C153783 * C153819 -
                   ((C101412 * C82771 + C98013 * C153930 +
                     (C97255 + C97254) * C153923) *
                        C153722 +
                    (C101394 * C82771 + C101395 * C153930 +
                     (C97253 + C97252) * C153923) *
                        C154074) *
                       C153783 * C154093) *
                      C154163 +
                  (((C97262 * C153923 + C102070 * C153930 + C102071 * C82771) *
                        C154074 +
                    (C97263 * C153923 + C111246 * C153930 +
                     (C97542 + C97543) * C82771) *
                        C153722) *
                       C153783 * C154093 -
                   (((C97195 * C4171 + C98860 + C98860 + C153969 * C4179 +
                      C97193 * C1344 + C98861 + C98861 + C97191 * C1354) *
                         C82771 +
                     (C97543 + C97542) * C153930 + C98012 * C153923) *
                        C153722 +
                    ((C101450 + C101449) * C82771 + C101412 * C153930 +
                     C98013 * C153923) *
                        C154074) *
                       C153783 * C153819) *
                      C774)) /
                (p * q * std::sqrt(p + q));
    d2ee[76] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
               C97199 + C97199 + C153969 * C580) *
                  C153923 +
              (C101439 + C101440) * C153930 + C101451 * C82771) *
                 C154074 +
             ((C97252 + C97253) * C153923 + C101388 * C153930 +
              C101389 * C82771) *
                 C153722) *
                C154094 -
            ((C102758 * C82771 + C102759 * C153930 +
              (C97810 + C97811) * C153923) *
                 C153722 +
             (C104577 * C82771 + (C102794 + C102795) * C153930 +
              (C97195 * C557 + C97756 + C97756 + C153969 * C581 +
               C97193 * C556 + C97757 + C97757 + C97191 * C580) *
                  C153923) *
                 C154074) *
                C153847) *
               C154093 +
           ((((C102795 + C102794) * C153923 + (C102793 + C102792) * C153930 +
              (C104590 + C104591) * C82771) *
                 C154074 +
             (C102770 * C153923 + C102771 * C153930 +
              (C102796 + C102797) * C82771) *
                 C153722) *
                C153847 -
            ((C101452 * C82771 + C101394 * C153930 + C101395 * C153923) *
                 C153722 +
             (C103282 * C82771 + (C101442 + C101441) * C153930 +
              (C101440 + C101439) * C153923) *
                 C154074) *
                C154094) *
               C153819) *
              C329 +
          (((((C97811 + C97810) * C153923 + C102770 * C153930 +
              C102771 * C82771) *
                 C154074 +
             ((C97809 + C97808) * C153923 + C111928 * C153930 +
              (C102370 + C102371) * C82771) *
                 C153722) *
                C153847 -
            ((C101412 * C82771 + C98013 * C153930 +
              (C97255 + C97254) * C153923) *
                 C153722 +
             (C101394 * C82771 + C101395 * C153930 +
              (C97253 + C97252) * C153923) *
                 C154074) *
                C154094) *
               C154093 +
           (((C101388 * C153923 + C101389 * C153930 + C101453 * C82771) *
                 C154074 +
             (C102070 * C153923 + C102071 * C153930 +
              (C101449 + C101450) * C82771) *
                 C153722) *
                C154094 -
            (((C97195 * C4809 + C102778 + C102778 + C153969 * C4815 +
               C97193 * C4170 + C102779 + C102779 + C97191 * C4178) *
                  C82771 +
              (C102371 + C102370) * C153930 + C111538 * C153923) *
                 C153722 +
             ((C102797 + C102796) * C82771 + C102758 * C153930 +
              C102759 * C153923) *
                 C154074) *
                C153847) *
               C153819) *
              C153754)) /
        (p * q * std::sqrt(p + q));
    d2ee[77] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
              C97199 + C97199 + C153969 * C580) *
                 C153923 +
             (C101439 + C101440) * C153930 + C101451 * C82771) *
                C154074 +
            ((C97252 + C97253) * C153923 + C101388 * C153930 +
             C101389 * C82771) *
                C153722) *
               C153783 * C326 -
           ((C101452 * C82771 + C101394 * C153930 + C101395 * C153923) *
                C153722 +
            (C103282 * C82771 + (C101442 + C101441) * C153930 +
             (C101440 + C101439) * C153923) *
                C154074) *
               C153783 * C327 +
           ((C101451 * C153923 + C130665 * C153930 +
             (C103295 + C103296) * C82771) *
                C154074 +
            (C101389 * C153923 + C101453 * C153930 +
             (C101447 + C101448) * C82771) *
                C153722) *
               C153783 * C328) *
              C329 +
          (((C101388 * C153923 + C101389 * C153930 + C101453 * C82771) *
                C154074 +
            (C102070 * C153923 + C102071 * C153930 +
             (C101449 + C101450) * C82771) *
                C153722) *
               C153783 * C327 -
           ((C101412 * C82771 + C98013 * C153930 +
             (C97255 + C97254) * C153923) *
                C153722 +
            (C101394 * C82771 + C101395 * C153930 +
             (C97253 + C97252) * C153923) *
                C154074) *
               C153783 * C326 -
           (((C97195 * C5557 + C101413 + C101413 + C153969 * C5563 +
              C97193 * C3085 + C101414 + C101414 + C97191 * C3093) *
                 C82771 +
             (C101450 + C101449) * C153930 + C101412 * C153923) *
                C153722 +
            ((C101448 + C101447) * C82771 + C101452 * C153930 +
             C101394 * C153923) *
                C154074) *
               C153783 * C328) *
              C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
             C97199 + C97199 + C153969 * C580) *
                C153923 +
            (C101439 + C101440) * C153930 + C101451 * C82771) *
               C154074 +
           ((C97252 + C97253) * C153923 + C101388 * C153930 +
            C101389 * C82771) *
               C153722) *
              C153783 * C153767 * C130 -
          ((C101412 * C82771 + C98013 * C153930 + (C97255 + C97254) * C153923) *
               C153722 +
           (C101394 * C82771 + C101395 * C153930 +
            (C97253 + C97252) * C153923) *
               C154074) *
              C153783 * C153767 * C131 +
          ((C97262 * C153923 + C102070 * C153930 + C102071 * C82771) * C154074 +
           (C97263 * C153923 + C111246 * C153930 + (C97542 + C97543) * C82771) *
               C153722) *
              C153783 * C153767 * C132 -
          (((C97195 * C1916 + C97506 + C97506 + C153969 * C1926 +
             C97193 * C340 + C97507 + C97507 + C97191 * C364) *
                C82771 +
            (C98027 + C98026) * C153930 + C97264 * C153923) *
               C153722 +
           ((C97543 + C97542) * C82771 + C98012 * C153930 + C97265 * C153923) *
               C154074) *
              C153783 * C153767 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
              C97199 + C97199 + C153969 * C580) *
                 C153923 +
             (C101439 + C101440) * C153930 + C101451 * C82771) *
                C154074 +
            ((C97252 + C97253) * C153923 + C101388 * C153930 +
             C101389 * C82771) *
                C153722) *
               C549 -
           ((C102758 * C82771 + C102759 * C153930 +
             (C97810 + C97811) * C153923) *
                C153722 +
            (C104577 * C82771 + (C102794 + C102795) * C153930 +
             (C97195 * C557 + C97756 + C97756 + C153969 * C581 + C97193 * C556 +
              C97757 + C97757 + C97191 * C580) *
                 C153923) *
                C154074) *
               C550 +
           (((C97193 * C557 + C97758 + C97758 + C97191 * C581 + C97195 * C2272 +
              C97759 + C97759 + C153969 * C2282) *
                 C153923 +
             (C103607 + C103608) * C153930 + (C103609 + C103610) * C82771) *
                C154074 +
            ((C97812 + C97813) * C153923 + (C101776 + C101777) * C153930 +
             (C101778 + C101779) * C82771) *
                C153722) *
               C551) *
              C153767 * C329 +
          ((((C97811 + C97810) * C153923 + C102770 * C153930 +
             C102771 * C82771) *
                C154074 +
            ((C97809 + C97808) * C153923 + C111928 * C153930 +
             (C102370 + C102371) * C82771) *
                C153722) *
               C550 -
           ((C101412 * C82771 + C98013 * C153930 +
             (C97255 + C97254) * C153923) *
                C153722 +
            (C101394 * C82771 + C101395 * C153930 +
             (C97253 + C97252) * C153923) *
                C154074) *
               C549 -
           (((C97195 * C6156 + C101760 + C101760 + C153969 * C6168 +
              C97193 * C3371 + C101761 + C101761 + C97191 * C3379) *
                 C82771 +
             (C110953 + C110952) * C153930 + (C97815 + C97814) * C153923) *
                C153722 +
            ((C101779 + C101778) * C82771 + (C101777 + C101776) * C153930 +
             (C97813 + C97812) * C153923) *
                C154074) *
               C551) *
              C153767 * C153754)) /
            (p * q * std::sqrt(p + q));
    d2ee[78] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 (((((C97193 * C136 + C97198 + C97198 + C97191 * C152 +
                      C97195 * C556 + C97199 + C97199 + C153969 * C580) *
                         C153923 +
                     (C101439 + C101440) * C153930 + C101451 * C82771) *
                        C154074 +
                    ((C97252 + C97253) * C153923 + C101388 * C153930 +
                     C101389 * C82771) *
                        C153722) *
                       C154094 -
                   ((C102758 * C82771 + C102759 * C153930 +
                     (C97810 + C97811) * C153923) *
                        C153722 +
                    (C104577 * C82771 + (C102794 + C102795) * C153930 +
                     (C97195 * C557 + C97756 + C97756 + C153969 * C581 +
                      C97193 * C556 + C97757 + C97757 + C97191 * C580) *
                         C153923) *
                        C154074) *
                       C153847) *
                      C153767 * C154162 +
                  ((((C97811 + C97810) * C153923 + C102770 * C153930 +
                     C102771 * C82771) *
                        C154074 +
                    ((C97809 + C97808) * C153923 + C111928 * C153930 +
                     (C102370 + C102371) * C82771) *
                        C153722) *
                       C153847 -
                   ((C101412 * C82771 + C98013 * C153930 +
                     (C97255 + C97254) * C153923) *
                        C153722 +
                    (C101394 * C82771 + C101395 * C153930 +
                     (C97253 + C97252) * C153923) *
                        C154074) *
                       C154094) *
                      C153767 * C154163 +
                  (((C97262 * C153923 + C102070 * C153930 + C102071 * C82771) *
                        C154074 +
                    (C97263 * C153923 + C111246 * C153930 +
                     (C97542 + C97543) * C82771) *
                        C153722) *
                       C154094 -
                   (((C97195 * C3372 + C99716 + C99716 + C153969 * C3380 +
                      C97193 * C1917 + C99717 + C99717 + C97191 * C1927) *
                         C82771 +
                     (C98535 + C98534) * C153930 + C98222 * C153923) *
                        C153722 +
                    ((C102371 + C102370) * C82771 + C111538 * C153930 +
                     C98223 * C153923) *
                        C154074) *
                       C153847) *
                      C153767 * C774)) /
                (p * q * std::sqrt(p + q));
    d2ee[79] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
             C97199 + C97199 + C153969 * C580) *
                C153923 +
            (C101439 + C101440) * C153930 + C101451 * C82771) *
               C154074 +
           ((C97252 + C97253) * C153923 + C101388 * C153930 +
            C101389 * C82771) *
               C153722) *
              C153783 * C153767 * C130 -
          ((C101412 * C82771 + C98013 * C153930 + (C97255 + C97254) * C153923) *
               C153722 +
           (C101394 * C82771 + C101395 * C153930 +
            (C97253 + C97252) * C153923) *
               C154074) *
              C153783 * C153767 * C131 +
          ((C97262 * C153923 + C102070 * C153930 + C102071 * C82771) * C154074 +
           (C97263 * C153923 + C111246 * C153930 + (C97542 + C97543) * C82771) *
               C153722) *
              C153783 * C153767 * C132 -
          (((C97195 * C1916 + C97506 + C97506 + C153969 * C1926 +
             C97193 * C340 + C97507 + C97507 + C97191 * C364) *
                C82771 +
            (C98027 + C98026) * C153930 + C97264 * C153923) *
               C153722 +
           ((C97543 + C97542) * C82771 + C98012 * C153930 + C97265 * C153923) *
               C154074) *
              C153783 * C153767 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
              C97199 + C97199 + C153969 * C580) *
                 C153923 +
             (C101439 + C101440) * C153930 + C101451 * C82771) *
                C154074 +
            ((C97252 + C97253) * C153923 + C101388 * C153930 +
             C101389 * C82771) *
                C153722) *
               C153783 * C326 -
           ((C101452 * C82771 + C101394 * C153930 + C101395 * C153923) *
                C153722 +
            (C103282 * C82771 + (C101442 + C101441) * C153930 +
             (C101440 + C101439) * C153923) *
                C154074) *
               C153783 * C327 +
           ((C101451 * C153923 + C130665 * C153930 +
             (C103295 + C103296) * C82771) *
                C154074 +
            (C101389 * C153923 + C101453 * C153930 +
             (C101447 + C101448) * C82771) *
                C153722) *
               C153783 * C328) *
              C329 +
          (((C101388 * C153923 + C101389 * C153930 + C101453 * C82771) *
                C154074 +
            (C102070 * C153923 + C102071 * C153930 +
             (C101449 + C101450) * C82771) *
                C153722) *
               C153783 * C327 -
           ((C101412 * C82771 + C98013 * C153930 +
             (C97255 + C97254) * C153923) *
                C153722 +
            (C101394 * C82771 + C101395 * C153930 +
             (C97253 + C97252) * C153923) *
                C154074) *
               C153783 * C326 -
           (((C97195 * C5557 + C101413 + C101413 + C153969 * C5563 +
              C97193 * C3085 + C101414 + C101414 + C97191 * C3093) *
                 C82771 +
             (C101450 + C101449) * C153930 + C101412 * C153923) *
                C153722 +
            ((C101448 + C101447) * C82771 + C101452 * C153930 +
             C101394 * C153923) *
                C154074) *
               C153783 * C328) *
              C153754)) /
            (p * q * std::sqrt(p + q));
    d2ee[80] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 (((((C97193 * C136 + C97198 + C97198 + C97191 * C152 +
                      C97195 * C556 + C97199 + C97199 + C153969 * C580) *
                         C153923 +
                     (C101439 + C101440) * C153930 + C101451 * C82771) *
                        C154074 +
                    ((C97252 + C97253) * C153923 + C101388 * C153930 +
                     C101389 * C82771) *
                        C153722) *
                       C153783 * C154164 -
                   ((C101452 * C82771 + C101394 * C153930 + C101395 * C153923) *
                        C153722 +
                    (C103282 * C82771 + (C101442 + C101441) * C153930 +
                     (C101440 + C101439) * C153923) *
                        C154074) *
                       C153783 * C154165 +
                   ((C101451 * C153923 + C130665 * C153930 +
                     (C103295 + C103296) * C82771) *
                        C154074 +
                    (C101389 * C153923 + C101453 * C153930 +
                     (C101447 + C101448) * C82771) *
                        C153722) *
                       C153783 * C1629) *
                      C154085 +
                  (((C101388 * C153923 + C101389 * C153930 + C101453 * C82771) *
                        C154074 +
                    (C102070 * C153923 + C102071 * C153930 +
                     (C101449 + C101450) * C82771) *
                        C153722) *
                       C153783 * C154165 -
                   ((C101412 * C82771 + C98013 * C153930 +
                     (C97255 + C97254) * C153923) *
                        C153722 +
                    (C101394 * C82771 + C101395 * C153930 +
                     (C97253 + C97252) * C153923) *
                        C154074) *
                       C153783 * C154164 -
                   (((C97195 * C5557 + C101413 + C101413 + C153969 * C5563 +
                      C97193 * C3085 + C101414 + C101414 + C97191 * C3093) *
                         C82771 +
                     (C101450 + C101449) * C153930 + C101412 * C153923) *
                        C153722 +
                    ((C101448 + C101447) * C82771 + C101452 * C153930 +
                     C101394 * C153923) *
                        C154074) *
                       C153783 * C1629) *
                      C153754)) /
                (p * q * std::sqrt(p + q));
    d2ee[81] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
              C97199 + C97199 + C153969 * C580) *
                 C153923 +
             (C101439 + C101440) * C153930 + C101451 * C82771) *
                C154074 +
            ((C97252 + C97253) * C153923 + C101388 * C153930 +
             C101389 * C82771) *
                C153722) *
               C154094 -
           ((C102758 * C82771 + C102759 * C153930 +
             (C97810 + C97811) * C153923) *
                C153722 +
            (C104577 * C82771 + (C102794 + C102795) * C153930 +
             (C97195 * C557 + C97756 + C97756 + C153969 * C581 + C97193 * C556 +
              C97757 + C97757 + C97191 * C580) *
                 C153923) *
                C154074) *
               C153847) *
              C154164 +
          ((((C102795 + C102794) * C153923 + (C102793 + C102792) * C153930 +
             (C104590 + C104591) * C82771) *
                C154074 +
            (C102770 * C153923 + C102771 * C153930 +
             (C102796 + C102797) * C82771) *
                C153722) *
               C153847 -
           ((C101452 * C82771 + C101394 * C153930 + C101395 * C153923) *
                C153722 +
            (C103282 * C82771 + (C101442 + C101441) * C153930 +
             (C101440 + C101439) * C153923) *
                C154074) *
               C154094) *
              C154165 +
          (((C101451 * C153923 + C130665 * C153930 +
             (C103295 + C103296) * C82771) *
                C154074 +
            (C101389 * C153923 + C101453 * C153930 +
             (C101447 + C101448) * C82771) *
                C153722) *
               C154094 -
           (((C97195 * C28359 + C104582 + C104582 + C153969 * C28363 +
              C97193 * C5558 + C104583 + C104583 + C97191 * C5564) *
                 C82771 +
             (C102797 + C102796) * C153930 + C102758 * C153923) *
                C153722 +
            ((C132707 + C132706) * C82771 + C132695 * C153930 +
             C104577 * C153923) *
                C154074) *
               C153847) *
              C1629) *
         C153748) /
        (p * q * std::sqrt(p + q));
    d2ee[82] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
             C97199 + C97199 + C153969 * C580) *
                C153923 +
            (C101439 + C101440) * C153930 + C101451 * C82771) *
               C154074 +
           ((C97252 + C97253) * C153923 + C101388 * C153930 +
            C101389 * C82771) *
               C153722) *
              C153783 * C1338 -
          ((C101452 * C82771 + C101394 * C153930 + C101395 * C153923) *
               C153722 +
           (C103282 * C82771 + (C101442 + C101441) * C153930 +
            (C101440 + C101439) * C153923) *
               C154074) *
              C153783 * C1339 +
          ((C101451 * C153923 + C130665 * C153930 +
            (C103295 + C103296) * C82771) *
               C154074 +
           (C101389 * C153923 + C101453 * C153930 +
            (C101447 + C101448) * C82771) *
               C153722) *
              C153783 * C1340 -
          (((C97195 * C28773 + C103287 + C103287 + C153969 * C28777 +
             C97193 * C4575 + C103288 + C103288 + C97191 * C4581) *
                C82771 +
            (C101448 + C101447) * C153930 + C101452 * C153923) *
               C153722 +
           ((C131842 + C131841) * C82771 + C131830 * C153930 +
            C103282 * C153923) *
               C154074) *
              C153783 * C1341) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
              C97199 + C97199 + C153969 * C580) *
                 C153923 +
             (C101439 + C101440) * C153930 + C101451 * C82771) *
                C154074 +
            ((C97252 + C97253) * C153923 + C101388 * C153930 +
             C101389 * C82771) *
                C153722) *
               C153783 * C1251 -
           ((C101452 * C82771 + C101394 * C153930 + C101395 * C153923) *
                C153722 +
            (C103282 * C82771 + (C101442 + C101441) * C153930 +
             (C101440 + C101439) * C153923) *
                C154074) *
               C153783 * C153819) *
              C1253 +
          (((C101388 * C153923 + C101389 * C153930 + C101453 * C82771) *
                C154074 +
            (C102070 * C153923 + C102071 * C153930 +
             (C101449 + C101450) * C82771) *
                C153722) *
               C153783 * C153819 -
           ((C101412 * C82771 + C98013 * C153930 +
             (C97255 + C97254) * C153923) *
                C153722 +
            (C101394 * C82771 + C101395 * C153930 +
             (C97253 + C97252) * C153923) *
                C154074) *
               C153783 * C1251) *
              C1254 +
          (((C97262 * C153923 + C102070 * C153930 + C102071 * C82771) *
                C154074 +
            (C97263 * C153923 + C111246 * C153930 +
             (C97542 + C97543) * C82771) *
                C153722) *
               C153783 * C1251 -
           (((C97195 * C4171 + C98860 + C98860 + C153969 * C4179 +
              C97193 * C1344 + C98861 + C98861 + C97191 * C1354) *
                 C82771 +
             (C97543 + C97542) * C153930 + C98012 * C153923) *
                C153722 +
            ((C101450 + C101449) * C82771 + C101412 * C153930 +
             C98013 * C153923) *
                C154074) *
               C153783 * C153819) *
              C1255)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
              C97199 + C97199 + C153969 * C580) *
                 C153923 +
             (C101439 + C101440) * C153930 + C101451 * C82771) *
                C154074 +
            ((C97252 + C97253) * C153923 + C101388 * C153930 +
             C101389 * C82771) *
                C153722) *
               C549 -
           ((C102758 * C82771 + C102759 * C153930 +
             (C97810 + C97811) * C153923) *
                C153722 +
            (C104577 * C82771 + (C102794 + C102795) * C153930 +
             (C97195 * C557 + C97756 + C97756 + C153969 * C581 + C97193 * C556 +
              C97757 + C97757 + C97191 * C580) *
                 C153923) *
                C154074) *
               C550 +
           (((C97193 * C557 + C97758 + C97758 + C97191 * C581 + C97195 * C2272 +
              C97759 + C97759 + C153969 * C2282) *
                 C153923 +
             (C103607 + C103608) * C153930 + (C103609 + C103610) * C82771) *
                C154074 +
            ((C97812 + C97813) * C153923 + (C101776 + C101777) * C153930 +
             (C101778 + C101779) * C82771) *
                C153722) *
               C551) *
              C1251 +
          ((((C102795 + C102794) * C153923 + (C102793 + C102792) * C153930 +
             (C104590 + C104591) * C82771) *
                C154074 +
            (C102770 * C153923 + C102771 * C153930 +
             (C102796 + C102797) * C82771) *
                C153722) *
               C550 -
           ((C101452 * C82771 + C101394 * C153930 + C101395 * C153923) *
                C153722 +
            (C103282 * C82771 + (C101442 + C101441) * C153930 +
             (C101440 + C101439) * C153923) *
                C154074) *
               C549 -
           (((C97195 * C31684 + C103595 + C103595 + C153969 * C31686 +
              C97193 * C4810 + C103596 + C103596 + C97191 * C4816) *
                 C82771 +
             (C101779 + C101778) * C153930 + (C101777 + C101776) * C153923) *
                C153722 +
            ((C132048 + C132047) * C82771 + (C103610 + C103609) * C153930 +
             (C103608 + C103607) * C153923) *
                C154074) *
               C551) *
              C153819) *
         C153748) /
            (p * q * std::sqrt(p + q));
    d2ee[83] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
               C97199 + C97199 + C153969 * C580) *
                  C153923 +
              (C101439 + C101440) * C153930 + C101451 * C82771) *
                 C154074 +
             ((C97252 + C97253) * C153923 + C101388 * C153930 +
              C101389 * C82771) *
                 C153722) *
                C154094 -
            ((C102758 * C82771 + C102759 * C153930 +
              (C97810 + C97811) * C153923) *
                 C153722 +
             (C104577 * C82771 + (C102794 + C102795) * C153930 +
              (C97195 * C557 + C97756 + C97756 + C153969 * C581 +
               C97193 * C556 + C97757 + C97757 + C97191 * C580) *
                  C153923) *
                 C154074) *
                C153847) *
               C1251 +
           ((((C102795 + C102794) * C153923 + (C102793 + C102792) * C153930 +
              (C104590 + C104591) * C82771) *
                 C154074 +
             (C102770 * C153923 + C102771 * C153930 +
              (C102796 + C102797) * C82771) *
                 C153722) *
                C153847 -
            ((C101452 * C82771 + C101394 * C153930 + C101395 * C153923) *
                 C153722 +
             (C103282 * C82771 + (C101442 + C101441) * C153930 +
              (C101440 + C101439) * C153923) *
                 C154074) *
                C154094) *
               C153819) *
              C154085 +
          (((((C97811 + C97810) * C153923 + C102770 * C153930 +
              C102771 * C82771) *
                 C154074 +
             ((C97809 + C97808) * C153923 + C111928 * C153930 +
              (C102370 + C102371) * C82771) *
                 C153722) *
                C153847 -
            ((C101412 * C82771 + C98013 * C153930 +
              (C97255 + C97254) * C153923) *
                 C153722 +
             (C101394 * C82771 + C101395 * C153930 +
              (C97253 + C97252) * C153923) *
                 C154074) *
                C154094) *
               C1251 +
           (((C101388 * C153923 + C101389 * C153930 + C101453 * C82771) *
                 C154074 +
             (C102070 * C153923 + C102071 * C153930 +
              (C101449 + C101450) * C82771) *
                 C153722) *
                C154094 -
            (((C97195 * C4809 + C102778 + C102778 + C153969 * C4815 +
               C97193 * C4170 + C102779 + C102779 + C97191 * C4178) *
                  C82771 +
              (C102371 + C102370) * C153930 + C111538 * C153923) *
                 C153722 +
             ((C102797 + C102796) * C82771 + C102758 * C153930 +
              C102759 * C153923) *
                 C154074) *
                C153847) *
               C153819) *
              C153754)) /
        (p * q * std::sqrt(p + q));
    d2ee[84] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C97193 * C136 + C97198 + C97198 + C97191 * C152 +
                      C97195 * C556 + C97199 + C97199 + C153969 * C580) *
                         C153923 +
                     (C101439 + C101440) * C153930 + C101451 * C82771) *
                        C154074 +
                    ((C97252 + C97253) * C153923 + C101388 * C153930 +
                     C101389 * C82771) *
                        C153722) *
                       C153783 * C1251 -
                   ((C101452 * C82771 + C101394 * C153930 + C101395 * C153923) *
                        C153722 +
                    (C103282 * C82771 + (C101442 + C101441) * C153930 +
                     (C101440 + C101439) * C153923) *
                        C154074) *
                       C153783 * C153819) *
                      C1253 +
                  (((C101388 * C153923 + C101389 * C153930 + C101453 * C82771) *
                        C154074 +
                    (C102070 * C153923 + C102071 * C153930 +
                     (C101449 + C101450) * C82771) *
                        C153722) *
                       C153783 * C153819 -
                   ((C101412 * C82771 + C98013 * C153930 +
                     (C97255 + C97254) * C153923) *
                        C153722 +
                    (C101394 * C82771 + C101395 * C153930 +
                     (C97253 + C97252) * C153923) *
                        C154074) *
                       C153783 * C1251) *
                      C1254 +
                  (((C97262 * C153923 + C102070 * C153930 + C102071 * C82771) *
                        C154074 +
                    (C97263 * C153923 + C111246 * C153930 +
                     (C97542 + C97543) * C82771) *
                        C153722) *
                       C153783 * C1251 -
                   (((C97195 * C4171 + C98860 + C98860 + C153969 * C4179 +
                      C97193 * C1344 + C98861 + C98861 + C97191 * C1354) *
                         C82771 +
                     (C97543 + C97542) * C153930 + C98012 * C153923) *
                        C153722 +
                    ((C101450 + C101449) * C82771 + C101412 * C153930 +
                     C98013 * C153923) *
                        C154074) *
                       C153783 * C153819) *
                      C1255)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C97193 * C136 + C97198 + C97198 + C97191 * C152 +
                     C97195 * C556 + C97199 + C97199 + C153969 * C580) *
                        C153923 +
                    (C101439 + C101440) * C153930 + C101451 * C82771) *
                       C154074 +
                   ((C97252 + C97253) * C153923 + C101388 * C153930 +
                    C101389 * C82771) *
                       C153722) *
                      C153783 * C1338 -
                  ((C101452 * C82771 + C101394 * C153930 + C101395 * C153923) *
                       C153722 +
                   (C103282 * C82771 + (C101442 + C101441) * C153930 +
                    (C101440 + C101439) * C153923) *
                       C154074) *
                      C153783 * C1339 +
                  ((C101451 * C153923 + C130665 * C153930 +
                    (C103295 + C103296) * C82771) *
                       C154074 +
                   (C101389 * C153923 + C101453 * C153930 +
                    (C101447 + C101448) * C82771) *
                       C153722) *
                      C153783 * C1340 -
                  (((C97195 * C28773 + C103287 + C103287 + C153969 * C28777 +
                     C97193 * C4575 + C103288 + C103288 + C97191 * C4581) *
                        C82771 +
                    (C101448 + C101447) * C153930 + C101452 * C153923) *
                       C153722 +
                   ((C131842 + C131841) * C82771 + C131830 * C153930 +
                    C103282 * C153923) *
                       C154074) *
                      C153783 * C1341) *
                 C153748) /
                    (p * q * std::sqrt(p + q));
    d2ee[85] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
               C97199 + C97199 + C153969 * C580) *
                  C153923 +
              (C101439 + C101440) * C153930 + C101451 * C82771) *
                 C154074 +
             ((C97252 + C97253) * C153923 + C101388 * C153930 +
              C101389 * C82771) *
                 C153722) *
                C2058 -
            ((C102758 * C82771 + C102759 * C153930 +
              (C97810 + C97811) * C153923) *
                 C153722 +
             (C104577 * C82771 + (C102794 + C102795) * C153930 +
              (C97195 * C557 + C97756 + C97756 + C153969 * C581 +
               C97193 * C556 + C97757 + C97757 + C97191 * C580) *
                  C153923) *
                 C154074) *
                C153847) *
               C154093 +
           ((((C102795 + C102794) * C153923 + (C102793 + C102792) * C153930 +
              (C104590 + C104591) * C82771) *
                 C154074 +
             (C102770 * C153923 + C102771 * C153930 +
              (C102796 + C102797) * C82771) *
                 C153722) *
                C153847 -
            ((C101452 * C82771 + C101394 * C153930 + C101395 * C153923) *
                 C153722 +
             (C103282 * C82771 + (C101442 + C101441) * C153930 +
              (C101440 + C101439) * C153923) *
                 C154074) *
                C2058) *
               C153819) *
              C154085 +
          (((((C97811 + C97810) * C153923 + C102770 * C153930 +
              C102771 * C82771) *
                 C154074 +
             ((C97809 + C97808) * C153923 + C111928 * C153930 +
              (C102370 + C102371) * C82771) *
                 C153722) *
                C153847 -
            ((C101412 * C82771 + C98013 * C153930 +
              (C97255 + C97254) * C153923) *
                 C153722 +
             (C101394 * C82771 + C101395 * C153930 +
              (C97253 + C97252) * C153923) *
                 C154074) *
                C2058) *
               C154093 +
           (((C101388 * C153923 + C101389 * C153930 + C101453 * C82771) *
                 C154074 +
             (C102070 * C153923 + C102071 * C153930 +
              (C101449 + C101450) * C82771) *
                 C153722) *
                C2058 -
            (((C97195 * C4809 + C102778 + C102778 + C153969 * C4815 +
               C97193 * C4170 + C102779 + C102779 + C97191 * C4178) *
                  C82771 +
              (C102371 + C102370) * C153930 + C111538 * C153923) *
                 C153722 +
             ((C102797 + C102796) * C82771 + C102758 * C153930 +
              C102759 * C153923) *
                 C154074) *
                C153847) *
               C153819) *
              C153754)) /
        (p * q * std::sqrt(p + q));
    d2ee[86] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
              C97199 + C97199 + C153969 * C580) *
                 C153923 +
             (C101439 + C101440) * C153930 + C101451 * C82771) *
                C154074 +
            ((C97252 + C97253) * C153923 + C101388 * C153930 +
             C101389 * C82771) *
                C153722) *
               C154166 -
           ((C102758 * C82771 + C102759 * C153930 +
             (C97810 + C97811) * C153923) *
                C153722 +
            (C104577 * C82771 + (C102794 + C102795) * C153930 +
             (C97195 * C557 + C97756 + C97756 + C153969 * C581 + C97193 * C556 +
              C97757 + C97757 + C97191 * C580) *
                 C153923) *
                C154074) *
               C154167 +
           (((C97193 * C557 + C97758 + C97758 + C97191 * C581 + C97195 * C2272 +
              C97759 + C97759 + C153969 * C2282) *
                 C153923 +
             (C103607 + C103608) * C153930 + (C103609 + C103610) * C82771) *
                C154074 +
            ((C97812 + C97813) * C153923 + (C101776 + C101777) * C153930 +
             (C101778 + C101779) * C82771) *
                C153722) *
               C2574) *
              C154093 +
          ((((C102795 + C102794) * C153923 + (C102793 + C102792) * C153930 +
             (C104590 + C104591) * C82771) *
                C154074 +
            (C102770 * C153923 + C102771 * C153930 +
             (C102796 + C102797) * C82771) *
                C153722) *
               C154167 -
           ((C101452 * C82771 + C101394 * C153930 + C101395 * C153923) *
                C153722 +
            (C103282 * C82771 + (C101442 + C101441) * C153930 +
             (C101440 + C101439) * C153923) *
                C154074) *
               C154166 -
           (((C97195 * C31684 + C103595 + C103595 + C153969 * C31686 +
              C97193 * C4810 + C103596 + C103596 + C97191 * C4816) *
                 C82771 +
             (C101779 + C101778) * C153930 + (C101777 + C101776) * C153923) *
                C153722 +
            ((C132048 + C132047) * C82771 + (C103610 + C103609) * C153930 +
             (C103608 + C103607) * C153923) *
                C154074) *
               C2574) *
              C153819) *
         C153748) /
        (p * q * std::sqrt(p + q));
    d2ee[87] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
              C97199 + C97199 + C153969 * C580) *
                 C153923 +
             (C101439 + C101440) * C153930 + C101451 * C82771) *
                C154074 +
            ((C97252 + C97253) * C153923 + C101388 * C153930 +
             C101389 * C82771) *
                C153722) *
               C2058 -
           ((C102758 * C82771 + C102759 * C153930 +
             (C97810 + C97811) * C153923) *
                C153722 +
            (C104577 * C82771 + (C102794 + C102795) * C153930 +
             (C97195 * C557 + C97756 + C97756 + C153969 * C581 + C97193 * C556 +
              C97757 + C97757 + C97191 * C580) *
                 C153923) *
                C154074) *
               C153847) *
              C326 +
          ((((C102795 + C102794) * C153923 + (C102793 + C102792) * C153930 +
             (C104590 + C104591) * C82771) *
                C154074 +
            (C102770 * C153923 + C102771 * C153930 +
             (C102796 + C102797) * C82771) *
                C153722) *
               C153847 -
           ((C101452 * C82771 + C101394 * C153930 + C101395 * C153923) *
                C153722 +
            (C103282 * C82771 + (C101442 + C101441) * C153930 +
             (C101440 + C101439) * C153923) *
                C154074) *
               C2058) *
              C327 +
          (((C101451 * C153923 + C130665 * C153930 +
             (C103295 + C103296) * C82771) *
                C154074 +
            (C101389 * C153923 + C101453 * C153930 +
             (C101447 + C101448) * C82771) *
                C153722) *
               C2058 -
           (((C97195 * C28359 + C104582 + C104582 + C153969 * C28363 +
              C97193 * C5558 + C104583 + C104583 + C97191 * C5564) *
                 C82771 +
             (C102797 + C102796) * C153930 + C102758 * C153923) *
                C153722 +
            ((C132707 + C132706) * C82771 + C132695 * C153930 +
             C104577 * C153923) *
                C154074) *
               C153847) *
              C328) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
              C97199 + C97199 + C153969 * C580) *
                 C153923 +
             (C101439 + C101440) * C153930 + C101451 * C82771) *
                C154074 +
            ((C97252 + C97253) * C153923 + C101388 * C153930 +
             C101389 * C82771) *
                C153722) *
               C2058 -
           ((C102758 * C82771 + C102759 * C153930 +
             (C97810 + C97811) * C153923) *
                C153722 +
            (C104577 * C82771 + (C102794 + C102795) * C153930 +
             (C97195 * C557 + C97756 + C97756 + C153969 * C581 + C97193 * C556 +
              C97757 + C97757 + C97191 * C580) *
                 C153923) *
                C154074) *
               C153847) *
              C153767 * C1253 +
          ((((C97811 + C97810) * C153923 + C102770 * C153930 +
             C102771 * C82771) *
                C154074 +
            ((C97809 + C97808) * C153923 + C111928 * C153930 +
             (C102370 + C102371) * C82771) *
                C153722) *
               C153847 -
           ((C101412 * C82771 + C98013 * C153930 +
             (C97255 + C97254) * C153923) *
                C153722 +
            (C101394 * C82771 + C101395 * C153930 +
             (C97253 + C97252) * C153923) *
                C154074) *
               C2058) *
              C153767 * C1254 +
          (((C97262 * C153923 + C102070 * C153930 + C102071 * C82771) *
                C154074 +
            (C97263 * C153923 + C111246 * C153930 +
             (C97542 + C97543) * C82771) *
                C153722) *
               C2058 -
           (((C97195 * C3372 + C99716 + C99716 + C153969 * C3380 +
              C97193 * C1917 + C99717 + C99717 + C97191 * C1927) *
                 C82771 +
             (C98535 + C98534) * C153930 + C98222 * C153923) *
                C153722 +
            ((C102371 + C102370) * C82771 + C111538 * C153930 +
             C98223 * C153923) *
                C154074) *
               C153847) *
              C153767 * C1255)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
             C97199 + C97199 + C153969 * C580) *
                C153923 +
            (C101439 + C101440) * C153930 + C101451 * C82771) *
               C154074 +
           ((C97252 + C97253) * C153923 + C101388 * C153930 +
            C101389 * C82771) *
               C153722) *
              C2264 -
          ((C102758 * C82771 + C102759 * C153930 +
            (C97810 + C97811) * C153923) *
               C153722 +
           (C104577 * C82771 + (C102794 + C102795) * C153930 +
            (C97195 * C557 + C97756 + C97756 + C153969 * C581 + C97193 * C556 +
             C97757 + C97757 + C97191 * C580) *
                C153923) *
               C154074) *
              C2265 +
          (((C97193 * C557 + C97758 + C97758 + C97191 * C581 + C97195 * C2272 +
             C97759 + C97759 + C153969 * C2282) *
                C153923 +
            (C103607 + C103608) * C153930 + (C103609 + C103610) * C82771) *
               C154074 +
           ((C97812 + C97813) * C153923 + (C101776 + C101777) * C153930 +
            (C101778 + C101779) * C82771) *
               C153722) *
              C2266 -
          (((C97195 * C30947 + C105366 + C105366 + C153969 * C30951 +
             C97193 * C6158 + C105367 + C105367 + C97191 * C6170) *
                C82771 +
            (C97195 * C9166 + C105368 + C105368 + C153969 * C9172 +
             C97193 * C6159 + C105369 + C105369 + C97191 * C6171) *
                C153930 +
            (C97195 * C7666 + C100246 + C100246 + C153969 * C7674 +
             C97193 * C2271 + C100247 + C100247 + C97191 * C2281) *
                C153923) *
               C153722 +
           ((C97195 * C30946 + C105370 + C105370 + C153969 * C30950 +
             C97193 * C6160 + C105371 + C105371 + C97191 * C6172) *
                C82771 +
            (C97195 * C9167 + C105372 + C105372 + C153969 * C9173 +
             C97193 * C6161 + C105373 + C105373 + C97191 * C6173) *
                C153930 +
            (C97195 * C7665 + C100248 + C100248 + C153969 * C7673 +
             C97193 * C2272 + C100249 + C100249 + C97191 * C2282) *
                C153923) *
               C154074) *
              C2267) *
         C153767 * C153748) /
            (p * q * std::sqrt(p + q));
    d2ee[88] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
              C97199 + C97199 + C153969 * C580) *
                 C153923 +
             (C101439 + C101440) * C153930 + C101451 * C82771) *
                C154074 +
            ((C97252 + C97253) * C153923 + C101388 * C153930 +
             C101389 * C82771) *
                C153722) *
               C154166 -
           ((C102758 * C82771 + C102759 * C153930 +
             (C97810 + C97811) * C153923) *
                C153722 +
            (C104577 * C82771 + (C102794 + C102795) * C153930 +
             (C97195 * C557 + C97756 + C97756 + C153969 * C581 + C97193 * C556 +
              C97757 + C97757 + C97191 * C580) *
                 C153923) *
                C154074) *
               C154167 +
           (((C97193 * C557 + C97758 + C97758 + C97191 * C581 + C97195 * C2272 +
              C97759 + C97759 + C153969 * C2282) *
                 C153923 +
             (C103607 + C103608) * C153930 + (C103609 + C103610) * C82771) *
                C154074 +
            ((C97812 + C97813) * C153923 + (C101776 + C101777) * C153930 +
             (C101778 + C101779) * C82771) *
                C153722) *
               C2574) *
              C153767 * C154085 +
          ((((C97811 + C97810) * C153923 + C102770 * C153930 +
             C102771 * C82771) *
                C154074 +
            ((C97809 + C97808) * C153923 + C111928 * C153930 +
             (C102370 + C102371) * C82771) *
                C153722) *
               C154167 -
           ((C101412 * C82771 + C98013 * C153930 +
             (C97255 + C97254) * C153923) *
                C153722 +
            (C101394 * C82771 + C101395 * C153930 +
             (C97253 + C97252) * C153923) *
                C154074) *
               C154166 -
           (((C97195 * C6156 + C101760 + C101760 + C153969 * C6168 +
              C97193 * C3371 + C101761 + C101761 + C97191 * C3379) *
                 C82771 +
             (C110953 + C110952) * C153930 + (C97815 + C97814) * C153923) *
                C153722 +
            ((C101779 + C101778) * C82771 + (C101777 + C101776) * C153930 +
             (C97813 + C97812) * C153923) *
                C154074) *
               C2574) *
              C153767 * C153754)) /
        (p * q * std::sqrt(p + q));
    d2ee[89] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
              C97199 + C97199 + C153969 * C580) *
                 C153923 +
             (C101439 + C101440) * C153930 + C101451 * C82771) *
                C154074 +
            ((C97252 + C97253) * C153923 + C101388 * C153930 +
             C101389 * C82771) *
                C153722) *
               C2058 -
           ((C102758 * C82771 + C102759 * C153930 +
             (C97810 + C97811) * C153923) *
                C153722 +
            (C104577 * C82771 + (C102794 + C102795) * C153930 +
             (C97195 * C557 + C97756 + C97756 + C153969 * C581 + C97193 * C556 +
              C97757 + C97757 + C97191 * C580) *
                 C153923) *
                C154074) *
               C153847) *
              C153767 * C1253 +
          ((((C97811 + C97810) * C153923 + C102770 * C153930 +
             C102771 * C82771) *
                C154074 +
            ((C97809 + C97808) * C153923 + C111928 * C153930 +
             (C102370 + C102371) * C82771) *
                C153722) *
               C153847 -
           ((C101412 * C82771 + C98013 * C153930 +
             (C97255 + C97254) * C153923) *
                C153722 +
            (C101394 * C82771 + C101395 * C153930 +
             (C97253 + C97252) * C153923) *
                C154074) *
               C2058) *
              C153767 * C1254 +
          (((C97262 * C153923 + C102070 * C153930 + C102071 * C82771) *
                C154074 +
            (C97263 * C153923 + C111246 * C153930 +
             (C97542 + C97543) * C82771) *
                C153722) *
               C2058 -
           (((C97195 * C3372 + C99716 + C99716 + C153969 * C3380 +
              C97193 * C1917 + C99717 + C99717 + C97191 * C1927) *
                 C82771 +
             (C98535 + C98534) * C153930 + C98222 * C153923) *
                C153722 +
            ((C102371 + C102370) * C82771 + C111538 * C153930 +
             C98223 * C153923) *
                C154074) *
               C153847) *
              C153767 * C1255)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
              C97199 + C97199 + C153969 * C580) *
                 C153923 +
             (C101439 + C101440) * C153930 + C101451 * C82771) *
                C154074 +
            ((C97252 + C97253) * C153923 + C101388 * C153930 +
             C101389 * C82771) *
                C153722) *
               C2058 -
           ((C102758 * C82771 + C102759 * C153930 +
             (C97810 + C97811) * C153923) *
                C153722 +
            (C104577 * C82771 + (C102794 + C102795) * C153930 +
             (C97195 * C557 + C97756 + C97756 + C153969 * C581 + C97193 * C556 +
              C97757 + C97757 + C97191 * C580) *
                 C153923) *
                C154074) *
               C153847) *
              C326 +
          ((((C102795 + C102794) * C153923 + (C102793 + C102792) * C153930 +
             (C104590 + C104591) * C82771) *
                C154074 +
            (C102770 * C153923 + C102771 * C153930 +
             (C102796 + C102797) * C82771) *
                C153722) *
               C153847 -
           ((C101452 * C82771 + C101394 * C153930 + C101395 * C153923) *
                C153722 +
            (C103282 * C82771 + (C101442 + C101441) * C153930 +
             (C101440 + C101439) * C153923) *
                C154074) *
               C2058) *
              C327 +
          (((C101451 * C153923 + C130665 * C153930 +
             (C103295 + C103296) * C82771) *
                C154074 +
            (C101389 * C153923 + C101453 * C153930 +
             (C101447 + C101448) * C82771) *
                C153722) *
               C2058 -
           (((C97195 * C28359 + C104582 + C104582 + C153969 * C28363 +
              C97193 * C5558 + C104583 + C104583 + C97191 * C5564) *
                 C82771 +
             (C102797 + C102796) * C153930 + C102758 * C153923) *
                C153722 +
            ((C132707 + C132706) * C82771 + C132695 * C153930 +
             C104577 * C153923) *
                C154074) *
               C153847) *
              C328) *
         C153748) /
            (p * q * std::sqrt(p + q));
    d2ee[90] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((C152071 * C136 + C115566 + C115566 + C153965 * C152 +
             C152059 * C556 + C115567 + C115567 + C153972 * C580 +
             C115563 * C557 + C115568 + C115568 + C115558 * C581) *
                C153923 +
            (C120244 + C120245 + C120246) * C153930 + C148307 * C82771) *
               C153712 * C153783 * C154093 -
           ((C122064 + C122063 + C122062) * C82771 +
            (C120247 + C120248 + C120249) * C153930 +
            (C120246 + C120245 + C120244) * C153923) *
               C153712 * C153783 * C153819) *
              C154162 +
          ((C120225 * C153923 + C120231 * C153930 +
            (C120250 + C120251 + C120252) * C82771) *
               C153712 * C153783 * C153819 -
           (C120226 * C82771 + C120227 * C153930 +
            (C115634 + C115633 + C115632) * C153923) *
               C153712 * C153783 * C154093) *
              C154163 +
          ((C115646 * C153923 + C120849 * C153930 +
            (C115949 + C115950 + C115951) * C82771) *
               C153712 * C153783 * C154093 -
           ((C115563 * C4809 + C117428 + C117428 + C115558 * C4815 +
             C152059 * C4170 + C117429 + C117429 + C153972 * C4178 +
             C152071 * C1345 + C117430 + C117430 + C153965 * C1355) *
                C82771 +
            (C115951 + C115950 + C115949) * C153930 + C116482 * C153923) *
               C153712 * C153783 * C153819) *
              C774)) /
        (p * q * std::sqrt(p + q));
    d2ee[91] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C152071 * C136 + C115566 + C115566 + C153965 * C152 +
              C152059 * C556 + C115567 + C115567 + C153972 * C580 +
              C115563 * C557 + C115568 + C115568 + C115558 * C581) *
                 C153923 +
             (C120244 + C120245 + C120246) * C153930 + C148307 * C82771) *
                C153712 * C154094 -
            ((C123362 + C123361 + C123360) * C82771 +
             (C121554 + C121555 + C121556) * C153930 +
             (C115563 * C2272 + C116188 + C116188 + C115558 * C2282 +
              C152059 * C557 + C116189 + C116189 + C153972 * C581 +
              C152071 * C556 + C116190 + C116190 + C153965 * C580) *
                 C153923) *
                C153712 * C153847) *
               C154093 +
           (((C121556 + C121555 + C121554) * C153923 +
             (C123360 + C123361 + C123362) * C153930 +
             (C152071 * C4168 + C123353 + C123353 + C153965 * C4176 +
              C152059 * C4811 + C123352 + C123352 + C153972 * C4817 +
              C115563 * C29881 + C123351 + C123351 + C115558 * C29885) *
                 C82771) *
                C153712 * C153847 -
            ((C122064 + C122063 + C122062) * C82771 +
             (C120247 + C120248 + C120249) * C153930 +
             (C120246 + C120245 + C120244) * C153923) *
                C153712 * C154094) *
               C153819) *
              C329 +
          ((((C116247 + C116246 + C116245) * C153923 + C121544 * C153930 +
             (C121557 + C121558 + C121559) * C82771) *
                C153712 * C153847 -
            (C120226 * C82771 + C120227 * C153930 +
             (C115634 + C115633 + C115632) * C153923) *
                C153712 * C154094) *
               C154093 +
           ((C120225 * C153923 + C120231 * C153930 +
             (C120250 + C120251 + C120252) * C82771) *
                C153712 * C154094 -
            ((C115563 * C31684 + C123348 + C123348 + C115558 * C31686 +
              C152059 * C4810 + C123349 + C123349 + C153972 * C4816 +
              C152071 * C4169 + C123350 + C123350 + C153965 * C4177) *
                 C82771 +
             (C121559 + C121558 + C121557) * C153930 + C121540 * C153923) *
                C153712 * C153847) *
               C153819) *
              C153754)) /
        (p * q * std::sqrt(p + q));
    d2ee[92] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C152071 * C136 + C115566 + C115566 + C153965 * C152 +
             C152059 * C556 + C115567 + C115567 + C153972 * C580 +
             C115563 * C557 + C115568 + C115568 + C115558 * C581) *
                C153923 +
            (C120244 + C120245 + C120246) * C153930 + C148307 * C82771) *
               C153712 * C153783 * C326 -
           ((C122064 + C122063 + C122062) * C82771 +
            (C120247 + C120248 + C120249) * C153930 +
            (C120246 + C120245 + C120244) * C153923) *
               C153712 * C153783 * C327 +
           (C148307 * C153923 + (C122062 + C122063 + C122064) * C153930 +
            (C152071 * C3083 + C122055 + C122055 + C153965 * C3091 +
             C152059 * C5559 + C122054 + C122054 + C153972 * C5565 +
             C115563 * C28358 + C122053 + C122053 + C115558 * C28362) *
                C82771) *
               C153712 * C153783 * C328) *
              C329 +
          ((C120225 * C153923 + C120231 * C153930 +
            (C120250 + C120251 + C120252) * C82771) *
               C153712 * C153783 * C327 -
           (C120226 * C82771 + C120227 * C153930 +
            (C115634 + C115633 + C115632) * C153923) *
               C153712 * C153783 * C326 -
           ((C115563 * C28359 + C122050 + C122050 + C115558 * C28363 +
             C152059 * C5558 + C122051 + C122051 + C153972 * C5564 +
             C152071 * C3084 + C122052 + C122052 + C153965 * C3092) *
                C82771 +
            (C120252 + C120251 + C120250) * C153930 + C120226 * C153923) *
               C153712 * C153783 * C328) *
              C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C152071 * C136 + C115566 + C115566 + C153965 * C152 +
            C152059 * C556 + C115567 + C115567 + C153972 * C580 +
            C115563 * C557 + C115568 + C115568 + C115558 * C581) *
               C153923 +
           (C120244 + C120245 + C120246) * C153930 +
           (C120249 + C120248 + C120247) * C82771) *
              C153712 * C153783 * C153767 * C130 -
          (C120226 * C82771 + C120227 * C153930 +
           (C115634 + C115633 + C115632) * C153923) *
              C153712 * C153783 * C153767 * C131 +
          (C115646 * C153923 + C120849 * C153930 +
           (C115949 + C115950 + C115951) * C82771) *
              C153712 * C153783 * C153767 * C132 -
          ((C115563 * C3372 + C115913 + C115913 + C115558 * C3380 +
            C152059 * C1917 + C115914 + C115914 + C153972 * C1927 +
            C152071 * C339 + C115915 + C115915 + C153965 * C363) *
               C82771 +
           (C116492 + C116491 + C116490) * C153930 + C115647 * C153923) *
              C153712 * C153783 * C153767 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C152071 * C136 + C115566 + C115566 + C153965 * C152 +
             C152059 * C556 + C115567 + C115567 + C153972 * C580 +
             C115563 * C557 + C115568 + C115568 + C115558 * C581) *
                C153923 +
            (C120244 + C120245 + C120246) * C153930 + C148307 * C82771) *
               C153712 * C549 -
           ((C123362 + C123361 + C123360) * C82771 +
            (C121554 + C121555 + C121556) * C153930 +
            (C115563 * C2272 + C116188 + C116188 + C115558 * C2282 +
             C152059 * C557 + C116189 + C116189 + C153972 * C581 +
             C152071 * C556 + C116190 + C116190 + C153965 * C580) *
                C153923) *
               C153712 * C550 +
           ((C152071 * C557 + C116191 + C116191 + C153965 * C581 +
             C152059 * C2272 + C116192 + C116192 + C153972 * C2282 +
             C115563 * C7665 + C116193 + C116193 + C115558 * C7673) *
                C153923 +
            (C122373 + C122374 + C122375) * C153930 +
            (C152071 * C3369 + C122366 + C122366 + C153965 * C3377 +
             C152059 * C6160 + C122365 + C122365 + C153972 * C6172 +
             C115563 * C30946 + C122364 + C122364 + C115558 * C30950) *
                C82771) *
               C153712 * C551) *
              C153767 * C329 +
          (((C116247 + C116246 + C116245) * C153923 + C121544 * C153930 +
            (C121557 + C121558 + C121559) * C82771) *
               C153712 * C550 -
           (C120226 * C82771 + C120227 * C153930 +
            (C115634 + C115633 + C115632) * C153923) *
               C153712 * C549 -
           ((C115563 * C30947 + C122361 + C122361 + C115558 * C30951 +
             C152059 * C6158 + C122362 + C122362 + C153972 * C6170 +
             C152071 * C3370 + C122363 + C122363 + C153965 * C3378) *
                C82771 +
            (C120557 + C120556 + C120555) * C153930 +
            (C116250 + C116249 + C116248) * C153923) *
               C153712 * C551) *
              C153767 * C153754)) /
            (p * q * std::sqrt(p + q));
    d2ee[93] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((C152071 * C136 + C115566 + C115566 + C153965 * C152 +
             C152059 * C556 + C115567 + C115567 + C153972 * C580 +
             C115563 * C557 + C115568 + C115568 + C115558 * C581) *
                C153923 +
            (C120244 + C120245 + C120246) * C153930 + C148307 * C82771) *
               C153712 * C154094 -
           ((C123362 + C123361 + C123360) * C82771 +
            (C121554 + C121555 + C121556) * C153930 +
            (C115563 * C2272 + C116188 + C116188 + C115558 * C2282 +
             C152059 * C557 + C116189 + C116189 + C153972 * C581 +
             C152071 * C556 + C116190 + C116190 + C153965 * C580) *
                C153923) *
               C153712 * C153847) *
              C153767 * C154162 +
          (((C116247 + C116246 + C116245) * C153923 + C121544 * C153930 +
            (C121557 + C121558 + C121559) * C82771) *
               C153712 * C153847 -
           (C120226 * C82771 + C120227 * C153930 +
            (C115634 + C115633 + C115632) * C153923) *
               C153712 * C154094) *
              C153767 * C154163 +
          ((C115646 * C153923 + C120849 * C153930 +
            (C115949 + C115950 + C115951) * C82771) *
               C153712 * C154094 -
           ((C115563 * C6156 + C118390 + C118390 + C115558 * C6168 +
             C152059 * C3371 + C118391 + C118391 + C153972 * C3379 +
             C152071 * C1918 + C118392 + C118392 + C153965 * C1928) *
                C82771 +
            (C117063 + C117062 + C117061) * C153930 + C116721 * C153923) *
               C153712 * C153847) *
              C153767 * C774)) /
        (p * q * std::sqrt(p + q));
    d2ee[94] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((C152071 * C136 + C115566 + C115566 + C153965 * C152 +
            C152059 * C556 + C115567 + C115567 + C153972 * C580 +
            C115563 * C557 + C115568 + C115568 + C115558 * C581) *
               C153923 +
           (C120244 + C120245 + C120246) * C153930 +
           (C120249 + C120248 + C120247) * C82771) *
              C153712 * C153783 * C153767 * C130 -
          (C120226 * C82771 + C120227 * C153930 +
           (C115634 + C115633 + C115632) * C153923) *
              C153712 * C153783 * C153767 * C131 +
          (C115646 * C153923 + C120849 * C153930 +
           (C115949 + C115950 + C115951) * C82771) *
              C153712 * C153783 * C153767 * C132 -
          ((C115563 * C3372 + C115913 + C115913 + C115558 * C3380 +
            C152059 * C1917 + C115914 + C115914 + C153972 * C1927 +
            C152071 * C339 + C115915 + C115915 + C153965 * C363) *
               C82771 +
           (C116492 + C116491 + C116490) * C153930 + C115647 * C153923) *
              C153712 * C153783 * C153767 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C152071 * C136 + C115566 + C115566 + C153965 * C152 +
             C152059 * C556 + C115567 + C115567 + C153972 * C580 +
             C115563 * C557 + C115568 + C115568 + C115558 * C581) *
                C153923 +
            (C120244 + C120245 + C120246) * C153930 + C148307 * C82771) *
               C153712 * C153783 * C326 -
           ((C122064 + C122063 + C122062) * C82771 +
            (C120247 + C120248 + C120249) * C153930 +
            (C120246 + C120245 + C120244) * C153923) *
               C153712 * C153783 * C327 +
           (C148307 * C153923 + (C122062 + C122063 + C122064) * C153930 +
            (C152071 * C3083 + C122055 + C122055 + C153965 * C3091 +
             C152059 * C5559 + C122054 + C122054 + C153972 * C5565 +
             C115563 * C28358 + C122053 + C122053 + C115558 * C28362) *
                C82771) *
               C153712 * C153783 * C328) *
              C329 +
          ((C120225 * C153923 + C120231 * C153930 +
            (C120250 + C120251 + C120252) * C82771) *
               C153712 * C153783 * C327 -
           (C120226 * C82771 + C120227 * C153930 +
            (C115634 + C115633 + C115632) * C153923) *
               C153712 * C153783 * C326 -
           ((C115563 * C28359 + C122050 + C122050 + C115558 * C28363 +
             C152059 * C5558 + C122051 + C122051 + C153972 * C5564 +
             C152071 * C3084 + C122052 + C122052 + C153965 * C3092) *
                C82771 +
            (C120252 + C120251 + C120250) * C153930 + C120226 * C153923) *
               C153712 * C153783 * C328) *
              C153754)) /
            (p * q * std::sqrt(p + q));
    d2ee[95] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((C152071 * C136 + C115566 + C115566 + C153965 * C152 +
             C152059 * C556 + C115567 + C115567 + C153972 * C580 +
             C115563 * C557 + C115568 + C115568 + C115558 * C581) *
                C153923 +
            (C120244 + C120245 + C120246) * C153930 + C148307 * C82771) *
               C153712 * C153783 * C154164 -
           (C149626 * C82771 + (C120247 + C120248 + C120249) * C153930 +
            (C120246 + C120245 + C120244) * C153923) *
               C153712 * C153783 * C154165 +
           (C148307 * C153923 + (C122062 + C122063 + C122064) * C153930 +
            (C149633 + C149634 + C149635) * C82771) *
               C153712 * C153783 * C1629) *
              C154085 +
          ((C120225 * C153923 + C120231 * C153930 +
            (C120250 + C120251 + C120252) * C82771) *
               C153712 * C153783 * C154165 -
           (C120226 * C82771 + C120227 * C153930 +
            (C115634 + C115633 + C115632) * C153923) *
               C153712 * C153783 * C154164 -
           ((C115563 * C28359 + C122050 + C122050 + C115558 * C28363 +
             C152059 * C5558 + C122051 + C122051 + C153972 * C5564 +
             C152071 * C3084 + C122052 + C122052 + C153965 * C3092) *
                C82771 +
            (C120252 + C120251 + C120250) * C153930 + C120226 * C153923) *
               C153712 * C153783 * C1629) *
              C153754)) /
        (p * q * std::sqrt(p + q));
    d2ee[96] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((C152071 * C136 + C115566 + C115566 + C153965 * C152 +
             C152059 * C556 + C115567 + C115567 + C153972 * C580 +
             C115563 * C557 + C115568 + C115568 + C115558 * C581) *
                C153923 +
            (C120244 + C120245 + C120246) * C153930 + C148307 * C82771) *
               C153712 * C154094 -
           (C150608 * C82771 + (C121554 + C121555 + C121556) * C153930 +
            (C115563 * C2272 + C116188 + C116188 + C115558 * C2282 +
             C152059 * C557 + C116189 + C116189 + C153972 * C581 +
             C152071 * C556 + C116190 + C116190 + C153965 * C580) *
                C153923) *
               C153712 * C153847) *
              C154164 +
          (((C121556 + C121555 + C121554) * C153923 +
            (C123360 + C123361 + C123362) * C153930 +
            (C150615 + C150616 + C150617) * C82771) *
               C153712 * C153847 -
           (C149626 * C82771 + (C120247 + C120248 + C120249) * C153930 +
            (C120246 + C120245 + C120244) * C153923) *
               C153712 * C154094) *
              C154165 +
          ((C148307 * C153923 + (C122062 + C122063 + C122064) * C153930 +
            (C149633 + C149634 + C149635) * C82771) *
               C153712 * C154094 -
           ((C115563 * C29880 + C150605 + C150605 + C115558 * C29884 +
             C152059 * C28358 + C150606 + C150606 + C153972 * C28362 +
             C152071 * C5559 + C150607 + C150607 + C153965 * C5565) *
                C82771 +
            (C150617 + C150616 + C150615) * C153930 + C150608 * C153923) *
               C153712 * C153847) *
              C1629) *
         C153748) /
        (p * q * std::sqrt(p + q));
    d2ee[97] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C152071 * C136 + C115566 + C115566 + C153965 * C152 +
            C152059 * C556 + C115567 + C115567 + C153972 * C580 +
            C115563 * C557 + C115568 + C115568 + C115558 * C581) *
               C153923 +
           (C120244 + C120245 + C120246) * C153930 + C148307 * C82771) *
              C153712 * C153783 * C1338 -
          (C149626 * C82771 + (C120247 + C120248 + C120249) * C153930 +
           (C120246 + C120245 + C120244) * C153923) *
              C153712 * C153783 * C1339 +
          (C148307 * C153923 + (C122062 + C122063 + C122064) * C153930 +
           (C149633 + C149634 + C149635) * C82771) *
              C153712 * C153783 * C1340 -
          ((C115563 * C29125 + C149623 + C149623 + C115558 * C29127 +
            C152059 * C28772 + C149624 + C149624 + C153972 * C28776 +
            C152071 * C4576 + C149625 + C149625 + C153965 * C4582) *
               C82771 +
           (C149635 + C149634 + C149633) * C153930 + C149626 * C153923) *
              C153712 * C153783 * C1341) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C152071 * C136 + C115566 + C115566 + C153965 * C152 +
             C152059 * C556 + C115567 + C115567 + C153972 * C580 +
             C115563 * C557 + C115568 + C115568 + C115558 * C581) *
                C153923 +
            (C120244 + C120245 + C120246) * C153930 + C148307 * C82771) *
               C153712 * C153783 * C1251 -
           ((C122064 + C122063 + C122062) * C82771 +
            (C120247 + C120248 + C120249) * C153930 +
            (C120246 + C120245 + C120244) * C153923) *
               C153712 * C153783 * C153819) *
              C1253 +
          ((C120225 * C153923 + C120231 * C153930 +
            (C120250 + C120251 + C120252) * C82771) *
               C153712 * C153783 * C153819 -
           (C120226 * C82771 + C120227 * C153930 +
            (C115634 + C115633 + C115632) * C153923) *
               C153712 * C153783 * C1251) *
              C1254 +
          ((C115646 * C153923 + C120849 * C153930 +
            (C115949 + C115950 + C115951) * C82771) *
               C153712 * C153783 * C1251 -
           ((C115563 * C4809 + C117428 + C117428 + C115558 * C4815 +
             C152059 * C4170 + C117429 + C117429 + C153972 * C4178 +
             C152071 * C1345 + C117430 + C117430 + C153965 * C1355) *
                C82771 +
            (C115951 + C115950 + C115949) * C153930 + C116482 * C153923) *
               C153712 * C153783 * C153819) *
              C1255)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C152071 * C136 + C115566 + C115566 + C153965 * C152 +
             C152059 * C556 + C115567 + C115567 + C153972 * C580 +
             C115563 * C557 + C115568 + C115568 + C115558 * C581) *
                C153923 +
            (C120244 + C120245 + C120246) * C153930 + C148307 * C82771) *
               C153712 * C549 -
           ((C123362 + C123361 + C123360) * C82771 +
            (C121554 + C121555 + C121556) * C153930 +
            (C115563 * C2272 + C116188 + C116188 + C115558 * C2282 +
             C152059 * C557 + C116189 + C116189 + C153972 * C581 +
             C152071 * C556 + C116190 + C116190 + C153965 * C580) *
                C153923) *
               C153712 * C550 +
           ((C152071 * C557 + C116191 + C116191 + C153965 * C581 +
             C152059 * C2272 + C116192 + C116192 + C153972 * C2282 +
             C115563 * C7665 + C116193 + C116193 + C115558 * C7673) *
                C153923 +
            (C122373 + C122374 + C122375) * C153930 +
            (C149869 + C149870 + C149871) * C82771) *
               C153712 * C551) *
              C1251 +
          (((C121556 + C121555 + C121554) * C153923 +
            (C123360 + C123361 + C123362) * C153930 +
            (C152071 * C4168 + C123353 + C123353 + C153965 * C4176 +
             C152059 * C4811 + C123352 + C123352 + C153972 * C4817 +
             C115563 * C29881 + C123351 + C123351 + C115558 * C29885) *
                C82771) *
               C153712 * C550 -
           (C149626 * C82771 + (C120247 + C120248 + C120249) * C153930 +
            (C120246 + C120245 + C120244) * C153923) *
               C153712 * C549 -
           ((C115563 * C32340 + C149860 + C149860 + C115558 * C32342 +
             C152059 * C29881 + C149861 + C149861 + C153972 * C29885 +
             C152071 * C4811 + C149862 + C149862 + C153965 * C4817) *
                C82771 +
            (C149871 + C149870 + C149869) * C153930 +
            (C122375 + C122374 + C122373) * C153923) *
               C153712 * C551) *
              C153819) *
         C153748) /
            (p * q * std::sqrt(p + q));
    d2ee[98] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C152071 * C136 + C115566 + C115566 + C153965 * C152 +
              C152059 * C556 + C115567 + C115567 + C153972 * C580 +
              C115563 * C557 + C115568 + C115568 + C115558 * C581) *
                 C153923 +
             (C120244 + C120245 + C120246) * C153930 + C148307 * C82771) *
                C153712 * C154094 -
            ((C123362 + C123361 + C123360) * C82771 +
             (C121554 + C121555 + C121556) * C153930 +
             (C115563 * C2272 + C116188 + C116188 + C115558 * C2282 +
              C152059 * C557 + C116189 + C116189 + C153972 * C581 +
              C152071 * C556 + C116190 + C116190 + C153965 * C580) *
                 C153923) *
                C153712 * C153847) *
               C1251 +
           (((C121556 + C121555 + C121554) * C153923 +
             (C123360 + C123361 + C123362) * C153930 +
             (C152071 * C4168 + C123353 + C123353 + C153965 * C4176 +
              C152059 * C4811 + C123352 + C123352 + C153972 * C4817 +
              C115563 * C29881 + C123351 + C123351 + C115558 * C29885) *
                 C82771) *
                C153712 * C153847 -
            (C149626 * C82771 + (C120247 + C120248 + C120249) * C153930 +
             (C120246 + C120245 + C120244) * C153923) *
                C153712 * C154094) *
               C153819) *
              C154085 +
          ((((C116247 + C116246 + C116245) * C153923 + C121544 * C153930 +
             (C121557 + C121558 + C121559) * C82771) *
                C153712 * C153847 -
            (C120226 * C82771 + C120227 * C153930 +
             (C115634 + C115633 + C115632) * C153923) *
                C153712 * C154094) *
               C1251 +
           ((C120225 * C153923 + C120231 * C153930 +
             (C120250 + C120251 + C120252) * C82771) *
                C153712 * C154094 -
            ((C115563 * C31684 + C123348 + C123348 + C115558 * C31686 +
              C152059 * C4810 + C123349 + C123349 + C153972 * C4816 +
              C152071 * C4169 + C123350 + C123350 + C153965 * C4177) *
                 C82771 +
             (C121559 + C121558 + C121557) * C153930 + C121540 * C153923) *
                C153712 * C153847) *
               C153819) *
              C153754)) /
        (p * q * std::sqrt(p + q));
    d2ee[99] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C152071 * C136 + C115566 + C115566 + C153965 * C152 +
             C152059 * C556 + C115567 + C115567 + C153972 * C580 +
             C115563 * C557 + C115568 + C115568 + C115558 * C581) *
                C153923 +
            (C120244 + C120245 + C120246) * C153930 + C148307 * C82771) *
               C153712 * C153783 * C1251 -
           ((C122064 + C122063 + C122062) * C82771 +
            (C120247 + C120248 + C120249) * C153930 +
            (C120246 + C120245 + C120244) * C153923) *
               C153712 * C153783 * C153819) *
              C1253 +
          ((C120225 * C153923 + C120231 * C153930 +
            (C120250 + C120251 + C120252) * C82771) *
               C153712 * C153783 * C153819 -
           (C120226 * C82771 + C120227 * C153930 +
            (C115634 + C115633 + C115632) * C153923) *
               C153712 * C153783 * C1251) *
              C1254 +
          ((C115646 * C153923 + C120849 * C153930 +
            (C115949 + C115950 + C115951) * C82771) *
               C153712 * C153783 * C1251 -
           ((C115563 * C4809 + C117428 + C117428 + C115558 * C4815 +
             C152059 * C4170 + C117429 + C117429 + C153972 * C4178 +
             C152071 * C1345 + C117430 + C117430 + C153965 * C1355) *
                C82771 +
            (C115951 + C115950 + C115949) * C153930 + C116482 * C153923) *
               C153712 * C153783 * C153819) *
              C1255)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((C152071 * C136 + C115566 + C115566 + C153965 * C152 +
            C152059 * C556 + C115567 + C115567 + C153972 * C580 +
            C115563 * C557 + C115568 + C115568 + C115558 * C581) *
               C153923 +
           (C120244 + C120245 + C120246) * C153930 + C148307 * C82771) *
              C153712 * C153783 * C1338 -
          (C149626 * C82771 + (C120247 + C120248 + C120249) * C153930 +
           (C120246 + C120245 + C120244) * C153923) *
              C153712 * C153783 * C1339 +
          (C148307 * C153923 + (C122062 + C122063 + C122064) * C153930 +
           (C149633 + C149634 + C149635) * C82771) *
              C153712 * C153783 * C1340 -
          ((C115563 * C29125 + C149623 + C149623 + C115558 * C29127 +
            C152059 * C28772 + C149624 + C149624 + C153972 * C28776 +
            C152071 * C4576 + C149625 + C149625 + C153965 * C4582) *
               C82771 +
           (C149635 + C149634 + C149633) * C153930 + C149626 * C153923) *
              C153712 * C153783 * C1341) *
         C153748) /
            (p * q * std::sqrt(p + q));
    d2ee[100] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C152071 * C136 + C115566 + C115566 + C153965 * C152 +
              C152059 * C556 + C115567 + C115567 + C153972 * C580 +
              C115563 * C557 + C115568 + C115568 + C115558 * C581) *
                 C153923 +
             (C120244 + C120245 + C120246) * C153930 + C148307 * C82771) *
                C153712 * C2058 -
            (C150608 * C82771 + (C121554 + C121555 + C121556) * C153930 +
             (C115563 * C2272 + C116188 + C116188 + C115558 * C2282 +
              C152059 * C557 + C116189 + C116189 + C153972 * C581 +
              C152071 * C556 + C116190 + C116190 + C153965 * C580) *
                 C153923) *
                C153712 * C153847) *
               C154093 +
           (((C121556 + C121555 + C121554) * C153923 +
             (C123360 + C123361 + C123362) * C153930 +
             (C150615 + C150616 + C150617) * C82771) *
                C153712 * C153847 -
            (C149626 * C82771 + (C120247 + C120248 + C120249) * C153930 +
             (C120246 + C120245 + C120244) * C153923) *
                C153712 * C2058) *
               C153819) *
              C154085 +
          ((((C116247 + C116246 + C116245) * C153923 + C121544 * C153930 +
             (C121557 + C121558 + C121559) * C82771) *
                C153712 * C153847 -
            (C120226 * C82771 + C120227 * C153930 +
             (C115634 + C115633 + C115632) * C153923) *
                C153712 * C2058) *
               C154093 +
           ((C120225 * C153923 + C120231 * C153930 +
             (C120250 + C120251 + C120252) * C82771) *
                C153712 * C2058 -
            ((C115563 * C31684 + C123348 + C123348 + C115558 * C31686 +
              C152059 * C4810 + C123349 + C123349 + C153972 * C4816 +
              C152071 * C4169 + C123350 + C123350 + C153965 * C4177) *
                 C82771 +
             (C121559 + C121558 + C121557) * C153930 + C121540 * C153923) *
                C153712 * C153847) *
               C153819) *
              C153754)) /
        (p * q * std::sqrt(p + q));
    d2ee[101] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((C152071 * C136 + C115566 + C115566 + C153965 * C152 +
             C152059 * C556 + C115567 + C115567 + C153972 * C580 +
             C115563 * C557 + C115568 + C115568 + C115558 * C581) *
                C153923 +
            (C120244 + C120245 + C120246) * C153930 + C148307 * C82771) *
               C153712 * C154166 -
           (C150608 * C82771 + (C121554 + C121555 + C121556) * C153930 +
            (C115563 * C2272 + C116188 + C116188 + C115558 * C2282 +
             C152059 * C557 + C116189 + C116189 + C153972 * C581 +
             C152071 * C556 + C116190 + C116190 + C153965 * C580) *
                C153923) *
               C153712 * C154167 +
           ((C152071 * C557 + C116191 + C116191 + C153965 * C581 +
             C152059 * C2272 + C116192 + C116192 + C153972 * C2282 +
             C115563 * C7665 + C116193 + C116193 + C115558 * C7673) *
                C153923 +
            (C122373 + C122374 + C122375) * C153930 +
            (C149869 + C149870 + C149871) * C82771) *
               C153712 * C2574) *
              C154093 +
          (((C121556 + C121555 + C121554) * C153923 +
            (C123360 + C123361 + C123362) * C153930 +
            (C150615 + C150616 + C150617) * C82771) *
               C153712 * C154167 -
           (C149626 * C82771 + (C120247 + C120248 + C120249) * C153930 +
            (C120246 + C120245 + C120244) * C153923) *
               C153712 * C154166 -
           ((C115563 * C32340 + C149860 + C149860 + C115558 * C32342 +
             C152059 * C29881 + C149861 + C149861 + C153972 * C29885 +
             C152071 * C4811 + C149862 + C149862 + C153965 * C4817) *
                C82771 +
            (C149871 + C149870 + C149869) * C153930 +
            (C122375 + C122374 + C122373) * C153923) *
               C153712 * C2574) *
              C153819) *
         C153748) /
        (p * q * std::sqrt(p + q));
    d2ee[102] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C152071 * C136 + C115566 + C115566 + C153965 * C152 +
             C152059 * C556 + C115567 + C115567 + C153972 * C580 +
             C115563 * C557 + C115568 + C115568 + C115558 * C581) *
                C153923 +
            (C120244 + C120245 + C120246) * C153930 + C148307 * C82771) *
               C153712 * C2058 -
           (C150608 * C82771 + (C121554 + C121555 + C121556) * C153930 +
            (C115563 * C2272 + C116188 + C116188 + C115558 * C2282 +
             C152059 * C557 + C116189 + C116189 + C153972 * C581 +
             C152071 * C556 + C116190 + C116190 + C153965 * C580) *
                C153923) *
               C153712 * C153847) *
              C326 +
          (((C121556 + C121555 + C121554) * C153923 +
            (C123360 + C123361 + C123362) * C153930 +
            (C150615 + C150616 + C150617) * C82771) *
               C153712 * C153847 -
           (C149626 * C82771 + (C120247 + C120248 + C120249) * C153930 +
            (C120246 + C120245 + C120244) * C153923) *
               C153712 * C2058) *
              C327 +
          ((C148307 * C153923 + (C122062 + C122063 + C122064) * C153930 +
            (C149633 + C149634 + C149635) * C82771) *
               C153712 * C2058 -
           ((C115563 * C29880 + C150605 + C150605 + C115558 * C29884 +
             C152059 * C28358 + C150606 + C150606 + C153972 * C28362 +
             C152071 * C5559 + C150607 + C150607 + C153965 * C5565) *
                C82771 +
            (C150617 + C150616 + C150615) * C153930 + C150608 * C153923) *
               C153712 * C153847) *
              C328) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C152071 * C136 + C115566 + C115566 + C153965 * C152 +
             C152059 * C556 + C115567 + C115567 + C153972 * C580 +
             C115563 * C557 + C115568 + C115568 + C115558 * C581) *
                C153923 +
            (C120244 + C120245 + C120246) * C153930 + C148307 * C82771) *
               C153712 * C2058 -
           (C150608 * C82771 + (C121554 + C121555 + C121556) * C153930 +
            (C115563 * C2272 + C116188 + C116188 + C115558 * C2282 +
             C152059 * C557 + C116189 + C116189 + C153972 * C581 +
             C152071 * C556 + C116190 + C116190 + C153965 * C580) *
                C153923) *
               C153712 * C153847) *
              C153767 * C1253 +
          (((C116247 + C116246 + C116245) * C153923 + C121544 * C153930 +
            (C121557 + C121558 + C121559) * C82771) *
               C153712 * C153847 -
           (C120226 * C82771 + C120227 * C153930 +
            (C115634 + C115633 + C115632) * C153923) *
               C153712 * C2058) *
              C153767 * C1254 +
          ((C115646 * C153923 + C120849 * C153930 +
            (C115949 + C115950 + C115951) * C82771) *
               C153712 * C2058 -
           ((C115563 * C6156 + C118390 + C118390 + C115558 * C6168 +
             C152059 * C3371 + C118391 + C118391 + C153972 * C3379 +
             C152071 * C1918 + C118392 + C118392 + C153965 * C1928) *
                C82771 +
            (C117063 + C117062 + C117061) * C153930 + C116721 * C153923) *
               C153712 * C153847) *
              C153767 * C1255)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((C152071 * C136 + C115566 + C115566 + C153965 * C152 +
            C152059 * C556 + C115567 + C115567 + C153972 * C580 +
            C115563 * C557 + C115568 + C115568 + C115558 * C581) *
               C153923 +
           (C120244 + C120245 + C120246) * C153930 + C148307 * C82771) *
              C153712 * C2264 -
          (C150608 * C82771 + (C121554 + C121555 + C121556) * C153930 +
           (C115563 * C2272 + C116188 + C116188 + C115558 * C2282 +
            C152059 * C557 + C116189 + C116189 + C153972 * C581 +
            C152071 * C556 + C116190 + C116190 + C153965 * C580) *
               C153923) *
              C153712 * C2265 +
          ((C152071 * C557 + C116191 + C116191 + C153965 * C581 +
            C152059 * C2272 + C116192 + C116192 + C153972 * C2282 +
            C115563 * C7665 + C116193 + C116193 + C115558 * C7673) *
               C153923 +
           (C122373 + C122374 + C122375) * C153930 +
           (C149869 + C149870 + C149871) * C82771) *
              C153712 * C2266 -
          ((C115563 * C33704 + C151200 + C151200 + C115558 * C33708 +
            C152059 * C30946 + C151201 + C151201 + C153972 * C30950 +
            C152071 * C6160 + C151202 + C151202 + C153965 * C6172) *
               C82771 +
           (C115563 * C33705 + C124140 + C124140 + C115558 * C33709 +
            C152059 * C9167 + C124141 + C124141 + C153972 * C9173 +
            C152071 * C6161 + C124142 + C124142 + C153965 * C6173) *
               C153930 +
           (C115563 * C10502 + C118987 + C118987 + C115558 * C10508 +
            C152059 * C7665 + C118988 + C118988 + C153972 * C7673 +
            C152071 * C2272 + C118989 + C118989 + C153965 * C2282) *
               C153923) *
              C153712 * C2267) *
         C153767 * C153748) /
            (p * q * std::sqrt(p + q));
    d2ee[103] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((C152071 * C136 + C115566 + C115566 + C153965 * C152 +
             C152059 * C556 + C115567 + C115567 + C153972 * C580 +
             C115563 * C557 + C115568 + C115568 + C115558 * C581) *
                C153923 +
            (C120244 + C120245 + C120246) * C153930 + C148307 * C82771) *
               C153712 * C154166 -
           (C150608 * C82771 + (C121554 + C121555 + C121556) * C153930 +
            (C115563 * C2272 + C116188 + C116188 + C115558 * C2282 +
             C152059 * C557 + C116189 + C116189 + C153972 * C581 +
             C152071 * C556 + C116190 + C116190 + C153965 * C580) *
                C153923) *
               C153712 * C154167 +
           ((C152071 * C557 + C116191 + C116191 + C153965 * C581 +
             C152059 * C2272 + C116192 + C116192 + C153972 * C2282 +
             C115563 * C7665 + C116193 + C116193 + C115558 * C7673) *
                C153923 +
            (C122373 + C122374 + C122375) * C153930 +
            (C149869 + C149870 + C149871) * C82771) *
               C153712 * C2574) *
              C153767 * C154085 +
          (((C116247 + C116246 + C116245) * C153923 + C121544 * C153930 +
            (C121557 + C121558 + C121559) * C82771) *
               C153712 * C154167 -
           (C120226 * C82771 + C120227 * C153930 +
            (C115634 + C115633 + C115632) * C153923) *
               C153712 * C154166 -
           ((C115563 * C30947 + C122361 + C122361 + C115558 * C30951 +
             C152059 * C6158 + C122362 + C122362 + C153972 * C6170 +
             C152071 * C3370 + C122363 + C122363 + C153965 * C3378) *
                C82771 +
            (C120557 + C120556 + C120555) * C153930 +
            (C116250 + C116249 + C116248) * C153923) *
               C153712 * C2574) *
              C153767 * C153754)) /
        (p * q * std::sqrt(p + q));
    d2ee[104] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C152071 * C136 + C115566 + C115566 + C153965 * C152 +
             C152059 * C556 + C115567 + C115567 + C153972 * C580 +
             C115563 * C557 + C115568 + C115568 + C115558 * C581) *
                C153923 +
            (C120244 + C120245 + C120246) * C153930 + C148307 * C82771) *
               C153712 * C2058 -
           (C150608 * C82771 + (C121554 + C121555 + C121556) * C153930 +
            (C115563 * C2272 + C116188 + C116188 + C115558 * C2282 +
             C152059 * C557 + C116189 + C116189 + C153972 * C581 +
             C152071 * C556 + C116190 + C116190 + C153965 * C580) *
                C153923) *
               C153712 * C153847) *
              C153767 * C1253 +
          (((C116247 + C116246 + C116245) * C153923 + C121544 * C153930 +
            (C121557 + C121558 + C121559) * C82771) *
               C153712 * C153847 -
           (C120226 * C82771 + C120227 * C153930 +
            (C115634 + C115633 + C115632) * C153923) *
               C153712 * C2058) *
              C153767 * C1254 +
          ((C115646 * C153923 + C120849 * C153930 +
            (C115949 + C115950 + C115951) * C82771) *
               C153712 * C2058 -
           ((C115563 * C6156 + C118390 + C118390 + C115558 * C6168 +
             C152059 * C3371 + C118391 + C118391 + C153972 * C3379 +
             C152071 * C1918 + C118392 + C118392 + C153965 * C1928) *
                C82771 +
            (C117063 + C117062 + C117061) * C153930 + C116721 * C153923) *
               C153712 * C153847) *
              C153767 * C1255)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C152071 * C136 + C115566 + C115566 + C153965 * C152 +
             C152059 * C556 + C115567 + C115567 + C153972 * C580 +
             C115563 * C557 + C115568 + C115568 + C115558 * C581) *
                C153923 +
            (C120244 + C120245 + C120246) * C153930 + C148307 * C82771) *
               C153712 * C2058 -
           (C150608 * C82771 + (C121554 + C121555 + C121556) * C153930 +
            (C115563 * C2272 + C116188 + C116188 + C115558 * C2282 +
             C152059 * C557 + C116189 + C116189 + C153972 * C581 +
             C152071 * C556 + C116190 + C116190 + C153965 * C580) *
                C153923) *
               C153712 * C153847) *
              C326 +
          (((C121556 + C121555 + C121554) * C153923 +
            (C123360 + C123361 + C123362) * C153930 +
            (C150615 + C150616 + C150617) * C82771) *
               C153712 * C153847 -
           (C149626 * C82771 + (C120247 + C120248 + C120249) * C153930 +
            (C120246 + C120245 + C120244) * C153923) *
               C153712 * C2058) *
              C327 +
          ((C148307 * C153923 + (C122062 + C122063 + C122064) * C153930 +
            (C149633 + C149634 + C149635) * C82771) *
               C153712 * C2058 -
           ((C115563 * C29880 + C150605 + C150605 + C115558 * C29884 +
             C152059 * C28358 + C150606 + C150606 + C153972 * C28362 +
             C152071 * C5559 + C150607 + C150607 + C153965 * C5565) *
                C82771 +
            (C150617 + C150616 + C150615) * C153930 + C150608 * C153923) *
               C153712 * C153847) *
              C328) *
         C153748) /
            (p * q * std::sqrt(p + q));
    d2ee[105] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
             C97199 + C97199 + C153969 * C580) *
                C154188 +
            (C101439 + C101440) * C154184 + C101451 * C154174 +
            C130665 * C154116) *
               C153712 * C153783 * C154093 -
           ((C103296 + C103295) * C154116 + C103282 * C154174 +
            (C101442 + C101441) * C154184 + (C101440 + C101439) * C154188) *
               C153712 * C153783 * C153819) *
              C154162 +
          ((C101388 * C154188 + C101389 * C154184 + C101453 * C154174 +
            (C101447 + C101448) * C154116) *
               C153712 * C153783 * C153819 -
           (C101452 * C154116 + C101394 * C154174 + C101395 * C154184 +
            (C97253 + C97252) * C154188) *
               C153712 * C153783 * C154093) *
              C154163 +
          ((C97262 * C154188 + C102070 * C154184 + C102071 * C154174 +
            (C101449 + C101450) * C154116) *
               C153712 * C153783 * C154093 -
           ((C97195 * C5557 + C101413 + C101413 + C153969 * C5563 +
             C97193 * C3085 + C101414 + C101414 + C97191 * C3093) *
                C154116 +
            (C101450 + C101449) * C154174 + C101412 * C154184 +
            C98013 * C154188) *
               C153712 * C153783 * C153819) *
              C774)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
              C97199 + C97199 + C153969 * C580) *
                 C70415 +
             (C101439 + C101440) * C153927) *
                C154178 +
            ((C97252 + C97253) * C70415 + C101388 * C153927) * C154159 +
            C125307 * C154130) *
               C153783 * C154093 -
           (C126181 * C154130 +
            (C101394 * C153927 + C101395 * C70415) * C154159 +
            ((C101442 + C101441) * C153927 + (C101440 + C101439) * C70415) *
                C154178) *
               C153783 * C153819) *
              C154162 +
          (((C101388 * C70415 + C101389 * C153927) * C154178 +
            (C102070 * C70415 + C102071 * C153927) * C154159 +
            (C111246 * C70415 + (C97542 + C97543) * C153927) * C154130) *
               C153783 * C153819 -
           (C125308 * C154130 +
            (C98013 * C153927 + (C97255 + C97254) * C70415) * C154159 +
            (C101395 * C153927 + (C97253 + C97252) * C70415) * C154178) *
               C153783 * C154093) *
              C154163 +
          ((C125307 * C154178 +
            (C97263 * C70415 + C111246 * C153927) * C154159 +
            ((C97259 + C97258) * C70415 + (C98026 + C98027) * C153927) *
                C154130) *
               C153783 * C154093 -
           (((C97195 * C1916 + C97506 + C97506 + C153969 * C1926 +
              C97193 * C340 + C97507 + C97507 + C97191 * C364) *
                 C153927 +
             (C98027 + C98026) * C70415) *
                C154130 +
            ((C97543 + C97542) * C153927 + C98012 * C70415) * C154159 +
            C126181 * C154178) *
               C153783 * C153819) *
              C774)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C106473 * C136 + C106482 + C106482 + C154189 * C152 +
             C106475 * C556 + C106483 + C106483 + C154186 * C580 +
             C106477 * C557 + C106484 + C106484 + C154177 * C581 +
             C106479 * C2272 + C106485 + C106485 + C154123 * C2282) *
                C70415 +
            (C134230 + C134231 + C134232 + C134233) * C153927) *
               C153712 * C153783 * C154093 -
           ((C134234 + C134235 + C134236 + C134237) * C153927 +
            (C134233 + C134232 + C134231 + C134230) * C70415) *
               C153712 * C153783 * C153819) *
              C154162 +
          (((C106815 + C106814 + C106813 + C106812) * C70415 +
            (C106816 + C106817 + C106818 + C106819) * C153927) *
               C153712 * C153783 * C153819 -
           ((C106812 + C106813 + C106814 + C106815) * C153927 +
            (C106553 + C106552 + C106551 + C106550) * C70415) *
               C153712 * C153783 * C154093) *
              C154163 +
          (((C106557 + C106556 + C106555 + C106554) * C70415 +
            (C107292 + C107293 + C107294 + C107295) * C153927) *
               C153712 * C153783 * C154093 -
           ((C106479 * C6156 + C106792 + C106792 + C154123 * C6168 +
             C106477 * C3371 + C106793 + C106793 + C154177 * C3379 +
             C106475 * C1918 + C106794 + C106794 + C154186 * C1928 +
             C106473 * C338 + C106795 + C106795 + C154189 * C362) *
                C153927 +
            (C107295 + C107294 + C107293 + C107292) * C70415) *
               C153712 * C153783 * C153819) *
              C774)) /
            (p * q * std::sqrt(p + q));
    d2ee[106] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
              C97199 + C97199 + C153969 * C580) *
                 C154188 +
             (C101439 + C101440) * C154184 + C101451 * C154174 +
             C130665 * C154116) *
                C153712 * C154094 -
            ((C104591 + C104590) * C154116 + C104577 * C154174 +
             (C102794 + C102795) * C154184 +
             (C97195 * C557 + C97756 + C97756 + C153969 * C581 + C97193 * C556 +
              C97757 + C97757 + C97191 * C580) *
                 C154188) *
                C153712 * C153847) *
               C154093 +
           (((C102795 + C102794) * C154188 + (C102793 + C102792) * C154184 +
             (C104590 + C104591) * C154174 +
             (C97193 * C5559 + C104585 + C104585 + C97191 * C5565 +
              C97195 * C28358 + C104584 + C104584 + C153969 * C28362) *
                 C154116) *
                C153712 * C153847 -
            ((C103296 + C103295) * C154116 + C103282 * C154174 +
             (C101442 + C101441) * C154184 + (C101440 + C101439) * C154188) *
                C153712 * C154094) *
               C153819) *
              C329 +
          ((((C97811 + C97810) * C154188 + C102770 * C154184 +
             C102771 * C154174 + (C102796 + C102797) * C154116) *
                C153712 * C153847 -
            (C101452 * C154116 + C101394 * C154174 + C101395 * C154184 +
             (C97253 + C97252) * C154188) *
                C153712 * C154094) *
               C154093 +
           ((C101388 * C154188 + C101389 * C154184 + C101453 * C154174 +
             (C101447 + C101448) * C154116) *
                C153712 * C154094 -
            ((C97195 * C28359 + C104582 + C104582 + C153969 * C28363 +
              C97193 * C5558 + C104583 + C104583 + C97191 * C5564) *
                 C154116 +
             (C102797 + C102796) * C154174 + C102758 * C154184 +
             C102759 * C154188) *
                C153712 * C153847) *
               C153819) *
              C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
               C97199 + C97199 + C153969 * C580) *
                  C70415 +
              (C101439 + C101440) * C153927) *
                 C154178 +
             ((C97252 + C97253) * C70415 + C101388 * C153927) * C154159 +
             C125307 * C154130) *
                C154094 -
            (C126474 * C154130 +
             (C102759 * C153927 + (C97810 + C97811) * C70415) * C154159 +
             ((C102794 + C102795) * C153927 +
              (C97195 * C557 + C97756 + C97756 + C153969 * C581 +
               C97193 * C556 + C97757 + C97757 + C97191 * C580) *
                  C70415) *
                 C154178) *
                C153847) *
               C154093 +
           ((((C102795 + C102794) * C70415 + (C102793 + C102792) * C153927) *
                 C154178 +
             (C102770 * C70415 + C102771 * C153927) * C154159 +
             (C111928 * C70415 + (C102370 + C102371) * C153927) * C154130) *
                C153847 -
            (C126181 * C154130 +
             (C101394 * C153927 + C101395 * C70415) * C154159 +
             ((C101442 + C101441) * C153927 + (C101440 + C101439) * C70415) *
                 C154178) *
                C154094) *
               C153819) *
              C329 +
          (((((C97811 + C97810) * C70415 + C102770 * C153927) * C154178 +
             ((C97809 + C97808) * C70415 + C111928 * C153927) * C154159 +
             ((C97807 + C97806) * C70415 + (C98534 + C98535) * C153927) *
                 C154130) *
                C153847 -
            (C125308 * C154130 +
             (C98013 * C153927 + (C97255 + C97254) * C70415) * C154159 +
             (C101395 * C153927 + (C97253 + C97252) * C70415) * C154178) *
                C154094) *
               C154093 +
           (((C101388 * C70415 + C101389 * C153927) * C154178 +
             (C102070 * C70415 + C102071 * C153927) * C154159 +
             (C111246 * C70415 + (C97542 + C97543) * C153927) * C154130) *
                C154094 -
            (((C97195 * C3372 + C99716 + C99716 + C153969 * C3380 +
               C97193 * C1917 + C99717 + C99717 + C97191 * C1927) *
                  C153927 +
              (C98535 + C98534) * C70415) *
                 C154130 +
             ((C102371 + C102370) * C153927 + C111538 * C70415) * C154159 +
             (C102758 * C153927 + C102759 * C70415) * C154178) *
                C153847) *
               C153819) *
              C153754)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C106473 * C136 + C106482 + C106482 + C154189 * C152 +
              C106475 * C556 + C106483 + C106483 + C154186 * C580 +
              C106477 * C557 + C106484 + C106484 + C154177 * C581 +
              C106479 * C2272 + C106485 + C106485 + C154123 * C2282) *
                 C70415 +
             (C134230 + C134231 + C134232 + C134233) * C153927) *
                C153712 * C154094 -
            ((C135094 + C135095 + C135096 + C135097) * C153927 +
             (C106479 * C7665 + C107026 + C107026 + C154123 * C7673 +
              C106477 * C2272 + C107027 + C107027 + C154177 * C2282 +
              C106475 * C557 + C107028 + C107028 + C154186 * C581 +
              C106473 * C556 + C107029 + C107029 + C154189 * C580) *
                 C70415) *
                C153712 * C153847) *
               C154093 +
           (((C135097 + C135096 + C135095 + C135094) * C70415 +
             (C106473 * C1920 + C108991 + C108991 + C154189 * C1930 +
              C106475 * C3369 + C108990 + C108990 + C154186 * C3377 +
              C106477 * C6160 + C108989 + C108989 + C154177 * C6172 +
              C106479 * C30946 + C108988 + C108988 + C154123 * C30950) *
                 C153927) *
                C153712 * C153847 -
            ((C134234 + C134235 + C134236 + C134237) * C153927 +
             (C134233 + C134232 + C134231 + C134230) * C70415) *
                C153712 * C154094) *
               C153819) *
              C329 +
          ((((C107073 + C107072 + C107071 + C107070) * C70415 +
             (C107800 + C107801 + C107802 + C107803) * C153927) *
                C153712 * C153847 -
            ((C106812 + C106813 + C106814 + C106815) * C153927 +
             (C106553 + C106552 + C106551 + C106550) * C70415) *
                C153712 * C154094) *
               C154093 +
           (((C106815 + C106814 + C106813 + C106812) * C70415 +
             (C106816 + C106817 + C106818 + C106819) * C153927) *
                C153712 * C154094 -
            ((C106479 * C30947 + C108984 + C108984 + C154123 * C30951 +
              C106477 * C6158 + C108985 + C108985 + C154177 * C6170 +
              C106475 * C3370 + C108986 + C108986 + C154186 * C3378 +
              C106473 * C1919 + C108987 + C108987 + C154189 * C1929) *
                 C153927 +
             (C107803 + C107802 + C107801 + C107800) * C70415) *
                C153712 * C153847) *
               C153819) *
              C153754)) /
            (p * q * std::sqrt(p + q));
    d2ee[107] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C97193 * C136 + C97198 + C97198 + C97191 * C152 +
                 C97195 * C556 + C97199 + C97199 + C153969 * C580) *
                    C70415 +
                (C101439 + C101440) * C153927) *
                   C154178 +
               ((C97252 + C97253) * C70415 + C101388 * C153927) * C154159 +
               C125307 * C154130) *
                  C153783 * C153767 * C130 -
              (C125308 * C154130 +
               (C98013 * C153927 + (C97255 + C97254) * C70415) * C154159 +
               (C101395 * C153927 + (C97253 + C97252) * C70415) * C154178) *
                  C153783 * C153767 * C131 +
              (C125307 * C154178 +
               (C97263 * C70415 + C111246 * C153927) * C154159 +
               ((C97259 + C97258) * C70415 + (C98026 + C98027) * C153927) *
                   C154130) *
                  C153783 * C153767 * C132 -
              (((C97195 * C1086 + C98018 + C98018 + C153969 * C1098 +
                 C97193 * C341 + C98019 + C98019 + C97191 * C365) *
                    C153927 +
                (C97261 + C97260) * C70415) *
                   C154130 +
               ((C98027 + C98026) * C153927 + C97264 * C70415) * C154159 +
               C125308 * C154178) *
                  C153783 * C153767 * C133) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C97193 * C136 + C97198 + C97198 + C97191 * C152 +
                  C97195 * C556 + C97199 + C97199 + C153969 * C580) *
                     C70415 +
                 (C101439 + C101440) * C153927) *
                    C154178 +
                ((C97252 + C97253) * C70415 + C101388 * C153927) * C154159 +
                C125307 * C154130) *
                   C153783 * C326 -
               ((C101412 * C153927 + C98013 * C70415) * C154130 +
                (C101394 * C153927 + C101395 * C70415) * C154159 +
                ((C101442 + C101441) * C153927 + (C101440 + C101439) * C70415) *
                    C154178) *
                   C153783 * C327 +
               ((C101451 * C70415 + (C101446 + C101445) * C153927) * C154178 +
                (C101389 * C70415 + C101453 * C153927) * C154159 +
                (C102071 * C70415 + (C101449 + C101450) * C153927) * C154130) *
                   C153783 * C328) *
                  C329 +
              (((C101388 * C70415 + C101389 * C153927) * C154178 +
                (C102070 * C70415 + C102071 * C153927) * C154159 +
                (C111246 * C70415 + (C97542 + C97543) * C153927) * C154130) *
                   C153783 * C327 -
               (C125308 * C154130 +
                (C98013 * C153927 + (C97255 + C97254) * C70415) * C154159 +
                (C101395 * C153927 + (C97253 + C97252) * C70415) * C154178) *
                   C153783 * C326 -
               (((C97195 * C4171 + C98860 + C98860 + C153969 * C4179 +
                  C97193 * C1344 + C98861 + C98861 + C97191 * C1354) *
                     C153927 +
                 (C97543 + C97542) * C70415) *
                    C154130 +
                ((C101450 + C101449) * C153927 + C101412 * C70415) * C154159 +
                (C101452 * C153927 + C101394 * C70415) * C154178) *
                   C153783 * C328) *
                  C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
              C97199 + C97199 + C153969 * C580) *
                 C70415 +
             (C101439 + C101440) * C153927) *
                C154178 +
            ((C97252 + C97253) * C70415 + C101388 * C153927) * C154159 +
            C125307 * C154130) *
               C549 -
           ((C111538 * C153927 + C98223 * C70415) * C154130 +
            (C102759 * C153927 + (C97810 + C97811) * C70415) * C154159 +
            ((C102794 + C102795) * C153927 +
             (C97195 * C557 + C97756 + C97756 + C153969 * C581 + C97193 * C556 +
              C97757 + C97757 + C97191 * C580) *
                 C70415) *
                C154178) *
               C550 +
           (((C97193 * C557 + C97758 + C97758 + C97191 * C581 + C97195 * C2272 +
              C97759 + C97759 + C153969 * C2282) *
                 C70415 +
             (C103607 + C103608) * C153927) *
                C154178 +
            ((C97812 + C97813) * C70415 + (C101776 + C101777) * C153927) *
                C154159 +
            ((C97814 + C97815) * C70415 + (C110952 + C110953) * C153927) *
                C154130) *
               C551) *
              C153767 * C329 +
          ((((C97811 + C97810) * C70415 + C102770 * C153927) * C154178 +
            ((C97809 + C97808) * C70415 + C111928 * C153927) * C154159 +
            ((C97807 + C97806) * C70415 + (C98534 + C98535) * C153927) *
                C154130) *
               C550 -
           (C125308 * C154130 +
            (C98013 * C153927 + (C97255 + C97254) * C70415) * C154159 +
            (C101395 * C153927 + (C97253 + C97252) * C70415) * C154178) *
               C549 -
           (((C97195 * C8529 + C99062 + C99062 + C153969 * C8531 +
              C97193 * C1486 + C99063 + C99063 + C97191 * C1496) *
                 C153927 +
             (C97817 + C97816) * C70415) *
                C154130 +
            ((C110953 + C110952) * C153927 + (C97815 + C97814) * C70415) *
                C154159 +
            ((C101777 + C101776) * C153927 + (C97813 + C97812) * C70415) *
                C154178) *
               C551) *
              C153767 * C153754)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
            C97199 + C97199 + C153969 * C580) *
               C154188 +
           (C101439 + C101440) * C154184 + C101451 * C154174 +
           (C101446 + C101445) * C154116) *
              C153712 * C153783 * C153767 * C130 -
          (C101452 * C154116 + C101394 * C154174 + C101395 * C154184 +
           (C97253 + C97252) * C154188) *
              C153712 * C153783 * C153767 * C131 +
          (C97262 * C154188 + C102070 * C154184 + C102071 * C154174 +
           (C101449 + C101450) * C154116) *
              C153712 * C153783 * C153767 * C132 -
          ((C97195 * C4171 + C98860 + C98860 + C153969 * C4179 +
            C97193 * C1344 + C98861 + C98861 + C97191 * C1354) *
               C154116 +
           (C97543 + C97542) * C154174 + C98012 * C154184 + C97265 * C154188) *
              C153712 * C153783 * C153767 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
             C97199 + C97199 + C153969 * C580) *
                C154188 +
            (C101439 + C101440) * C154184 + C101451 * C154174 +
            C130665 * C154116) *
               C153712 * C153783 * C326 -
           ((C103296 + C103295) * C154116 + C103282 * C154174 +
            (C101442 + C101441) * C154184 + (C101440 + C101439) * C154188) *
               C153712 * C153783 * C327 +
           (C101451 * C154188 + C130665 * C154184 +
            (C103295 + C103296) * C154174 +
            (C97193 * C4576 + C103290 + C103290 + C97191 * C4582 +
             C97195 * C28772 + C103289 + C103289 + C153969 * C28776) *
                C154116) *
               C153712 * C153783 * C328) *
              C329 +
          ((C101388 * C154188 + C101389 * C154184 + C101453 * C154174 +
            (C101447 + C101448) * C154116) *
               C153712 * C153783 * C327 -
           (C101452 * C154116 + C101394 * C154174 + C101395 * C154184 +
            (C97253 + C97252) * C154188) *
               C153712 * C153783 * C326 -
           ((C97195 * C28773 + C103287 + C103287 + C153969 * C28777 +
             C97193 * C4575 + C103288 + C103288 + C97191 * C4581) *
                C154116 +
            (C101448 + C101447) * C154174 + C101452 * C154184 +
            C101394 * C154188) *
               C153712 * C153783 * C328) *
              C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
             C97199 + C97199 + C153969 * C580) *
                C154188 +
            (C101439 + C101440) * C154184 + C101451 * C154174 +
            C130665 * C154116) *
               C153712 * C549 -
           ((C104591 + C104590) * C154116 + C104577 * C154174 +
            (C102794 + C102795) * C154184 +
            (C97195 * C557 + C97756 + C97756 + C153969 * C581 + C97193 * C556 +
             C97757 + C97757 + C97191 * C580) *
                C154188) *
               C153712 * C550 +
           ((C97193 * C557 + C97758 + C97758 + C97191 * C581 + C97195 * C2272 +
             C97759 + C97759 + C153969 * C2282) *
                C154188 +
            (C103607 + C103608) * C154184 + (C103609 + C103610) * C154174 +
            (C97193 * C4811 + C103598 + C103598 + C97191 * C4817 +
             C97195 * C29881 + C103597 + C103597 + C153969 * C29885) *
                C154116) *
               C153712 * C551) *
              C153767 * C329 +
          (((C97811 + C97810) * C154188 + C102770 * C154184 +
            C102771 * C154174 + (C102796 + C102797) * C154116) *
               C153712 * C550 -
           (C101452 * C154116 + C101394 * C154174 + C101395 * C154184 +
            (C97253 + C97252) * C154188) *
               C153712 * C549 -
           ((C97195 * C31684 + C103595 + C103595 + C153969 * C31686 +
             C97193 * C4810 + C103596 + C103596 + C97191 * C4816) *
                C154116 +
            (C101779 + C101778) * C154174 + (C101777 + C101776) * C154184 +
            (C97813 + C97812) * C154188) *
               C153712 * C551) *
              C153767 * C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C106473 * C136 + C106482 + C106482 + C154189 * C152 +
            C106475 * C556 + C106483 + C106483 + C154186 * C580 +
            C106477 * C557 + C106484 + C106484 + C154177 * C581 +
            C106479 * C2272 + C106485 + C106485 + C154123 * C2282) *
               C70415 +
           (C106473 * C335 + C106771 + C106771 + C154189 * C359 +
            C106475 * C1081 + C106770 + C106770 + C154186 * C1093 +
            C106477 * C1489 + C106769 + C106769 + C154177 * C1499 +
            C106479 * C6161 + C106768 + C106768 + C154123 * C6173) *
               C153927) *
              C153712 * C153783 * C153767 * C130 -
          ((C106812 + C106813 + C106814 + C106815) * C153927 +
           (C106553 + C106552 + C106551 + C106550) * C70415) *
              C153712 * C153783 * C153767 * C131 +
          ((C106557 + C106556 + C106555 + C106554) * C70415 +
           (C107292 + C107293 + C107294 + C107295) * C153927) *
              C153712 * C153783 * C153767 * C132 -
          ((C106479 * C8529 + C107280 + C107280 + C154123 * C8531 +
            C106477 * C1486 + C107281 + C107281 + C154177 * C1496 +
            C106475 * C1084 + C107282 + C107282 + C154186 * C1096 +
            C106473 * C332 + C107283 + C107283 + C154189 * C356) *
               C153927 +
           (C106561 + C106560 + C106559 + C106558) * C70415) *
              C153712 * C153783 * C153767 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C106473 * C136 + C106482 + C106482 + C154189 * C152 +
             C106475 * C556 + C106483 + C106483 + C154186 * C580 +
             C106477 * C557 + C106484 + C106484 + C154177 * C581 +
             C106479 * C2272 + C106485 + C106485 + C154123 * C2282) *
                C70415 +
            (C134230 + C134231 + C134232 + C134233) * C153927) *
               C153712 * C153783 * C326 -
           ((C134234 + C134235 + C134236 + C134237) * C153927 +
            (C134233 + C134232 + C134231 + C134230) * C70415) *
               C153712 * C153783 * C327 +
           ((C134237 + C134236 + C134235 + C134234) * C70415 +
            (C106473 * C1347 + C108135 + C108135 + C154189 * C1357 +
             C106475 * C4168 + C108134 + C108134 + C154186 * C4176 +
             C106477 * C4811 + C108133 + C108133 + C154177 * C4817 +
             C106479 * C29881 + C108132 + C108132 + C154123 * C29885) *
                C153927) *
               C153712 * C153783 * C328) *
              C329 +
          (((C106815 + C106814 + C106813 + C106812) * C70415 +
            (C106816 + C106817 + C106818 + C106819) * C153927) *
               C153712 * C153783 * C327 -
           ((C106812 + C106813 + C106814 + C106815) * C153927 +
            (C106553 + C106552 + C106551 + C106550) * C70415) *
               C153712 * C153783 * C326 -
           ((C106479 * C31684 + C108128 + C108128 + C154123 * C31686 +
             C106477 * C4810 + C108129 + C108129 + C154177 * C4816 +
             C106475 * C4169 + C108130 + C108130 + C154186 * C4177 +
             C106473 * C1346 + C108131 + C108131 + C154189 * C1356) *
                C153927 +
            (C106819 + C106818 + C106817 + C106816) * C70415) *
               C153712 * C153783 * C328) *
              C153754)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C106473 * C136 + C106482 + C106482 + C154189 * C152 +
             C106475 * C556 + C106483 + C106483 + C154186 * C580 +
             C106477 * C557 + C106484 + C106484 + C154177 * C581 +
             C106479 * C2272 + C106485 + C106485 + C154123 * C2282) *
                C70415 +
            (C134230 + C134231 + C134232 + C134233) * C153927) *
               C153712 * C549 -
           ((C106479 * C9167 + C107775 + C107775 + C154123 * C9173 +
             C106477 * C6161 + C107774 + C107774 + C154177 * C6173 +
             C106475 * C1489 + C107773 + C107773 + C154186 * C1499 +
             C106473 * C1081 + C107772 + C107772 + C154189 * C1093) *
                C153927 +
            (C106479 * C7665 + C107026 + C107026 + C154123 * C7673 +
             C106477 * C2272 + C107027 + C107027 + C154177 * C2282 +
             C106475 * C557 + C107028 + C107028 + C154186 * C581 +
             C106473 * C556 + C107029 + C107029 + C154189 * C580) *
                C70415) *
               C153712 * C550 +
           ((C106473 * C557 + C107030 + C107030 + C154189 * C581 +
             C106475 * C2272 + C107031 + C107031 + C154186 * C2282 +
             C106477 * C7665 + C107032 + C107032 + C154177 * C7673 +
             C106479 * C10502 + C107033 + C107033 + C154123 * C10508) *
                C70415 +
            (C106473 * C1489 + C108337 + C108337 + C154189 * C1499 +
             C106475 * C6161 + C108336 + C108336 + C154186 * C6173 +
             C106477 * C9167 + C108335 + C108335 + C154177 * C9173 +
             C106479 * C33705 + C108334 + C108334 + C154123 * C33709) *
                C153927) *
               C153712 * C551) *
              C153767 * C329 +
          (((C107073 + C107072 + C107071 + C107070) * C70415 +
            (C107800 + C107801 + C107802 + C107803) * C153927) *
               C153712 * C550 -
           ((C106812 + C106813 + C106814 + C106815) * C153927 +
            (C106553 + C106552 + C106551 + C106550) * C70415) *
               C153712 * C549 -
           ((C106479 * C56080 + C108330 + C108330 + C154123 * C56082 +
             C106477 * C9166 + C108331 + C108331 + C154177 * C9172 +
             C106475 * C6159 + C108332 + C108332 + C154186 * C6171 +
             C106473 * C1488 + C108333 + C108333 + C154189 * C1498) *
                C153927 +
            (C107077 + C107076 + C107075 + C107074) * C70415) *
               C153712 * C551) *
              C153767 * C153754)) /
            (p * q * std::sqrt(p + q));
    d2ee[108] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
             C97199 + C97199 + C153969 * C580) *
                C154188 +
            (C101439 + C101440) * C154184 + C101451 * C154174 +
            C130665 * C154116) *
               C153712 * C154094 -
           ((C104591 + C104590) * C154116 + C104577 * C154174 +
            (C102794 + C102795) * C154184 +
            (C97195 * C557 + C97756 + C97756 + C153969 * C581 + C97193 * C556 +
             C97757 + C97757 + C97191 * C580) *
                C154188) *
               C153712 * C153847) *
              C153767 * C154162 +
          (((C97811 + C97810) * C154188 + C102770 * C154184 +
            C102771 * C154174 + (C102796 + C102797) * C154116) *
               C153712 * C153847 -
           (C101452 * C154116 + C101394 * C154174 + C101395 * C154184 +
            (C97253 + C97252) * C154188) *
               C153712 * C154094) *
              C153767 * C154163 +
          ((C97262 * C154188 + C102070 * C154184 + C102071 * C154174 +
            (C101449 + C101450) * C154116) *
               C153712 * C154094 -
           ((C97195 * C4809 + C102778 + C102778 + C153969 * C4815 +
             C97193 * C4170 + C102779 + C102779 + C97191 * C4178) *
                C154116 +
            (C102371 + C102370) * C154174 + C111538 * C154184 +
            C98223 * C154188) *
               C153712 * C153847) *
              C153767 * C774)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
              C97199 + C97199 + C153969 * C580) *
                 C70415 +
             (C101439 + C101440) * C153927) *
                C154178 +
            ((C97252 + C97253) * C70415 + C101388 * C153927) * C154159 +
            C125307 * C154130) *
               C154094 -
           (C126474 * C154130 +
            (C102759 * C153927 + (C97810 + C97811) * C70415) * C154159 +
            ((C102794 + C102795) * C153927 +
             (C97195 * C557 + C97756 + C97756 + C153969 * C581 + C97193 * C556 +
              C97757 + C97757 + C97191 * C580) *
                 C70415) *
                C154178) *
               C153847) *
              C153767 * C154162 +
          ((((C97811 + C97810) * C70415 + C102770 * C153927) * C154178 +
            ((C97809 + C97808) * C70415 + C111928 * C153927) * C154159 +
            ((C97807 + C97806) * C70415 + (C98534 + C98535) * C153927) *
                C154130) *
               C153847 -
           (C125308 * C154130 +
            (C98013 * C153927 + (C97255 + C97254) * C70415) * C154159 +
            (C101395 * C153927 + (C97253 + C97252) * C70415) * C154178) *
               C154094) *
              C153767 * C154163 +
          ((C125307 * C154178 +
            (C97263 * C70415 + C111246 * C153927) * C154159 +
            ((C97259 + C97258) * C70415 + (C98026 + C98027) * C153927) *
                C154130) *
               C154094 -
           (((C97195 * C1485 + C98516 + C98516 + C153969 * C1495 +
              C97193 * C1085 + C98517 + C98517 + C97191 * C1097) *
                 C153927 +
             (C98237 + C98236) * C70415) *
                C154130 +
            ((C98535 + C98534) * C153927 + C98222 * C70415) * C154159 +
            C126474 * C154178) *
               C153847) *
              C153767 * C774)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C106473 * C136 + C106482 + C106482 + C154189 * C152 +
             C106475 * C556 + C106483 + C106483 + C154186 * C580 +
             C106477 * C557 + C106484 + C106484 + C154177 * C581 +
             C106479 * C2272 + C106485 + C106485 + C154123 * C2282) *
                C70415 +
            (C134230 + C134231 + C134232 + C134233) * C153927) *
               C153712 * C154094 -
           ((C106479 * C9167 + C107775 + C107775 + C154123 * C9173 +
             C106477 * C6161 + C107774 + C107774 + C154177 * C6173 +
             C106475 * C1489 + C107773 + C107773 + C154186 * C1499 +
             C106473 * C1081 + C107772 + C107772 + C154189 * C1093) *
                C153927 +
            (C106479 * C7665 + C107026 + C107026 + C154123 * C7673 +
             C106477 * C2272 + C107027 + C107027 + C154177 * C2282 +
             C106475 * C557 + C107028 + C107028 + C154186 * C581 +
             C106473 * C556 + C107029 + C107029 + C154189 * C580) *
                C70415) *
               C153712 * C153847) *
              C153767 * C154162 +
          (((C107073 + C107072 + C107071 + C107070) * C70415 +
            (C107800 + C107801 + C107802 + C107803) * C153927) *
               C153712 * C153847 -
           ((C106812 + C106813 + C106814 + C106815) * C153927 +
            (C106553 + C106552 + C106551 + C106550) * C70415) *
               C153712 * C154094) *
              C153767 * C154163 +
          (((C106557 + C106556 + C106555 + C106554) * C70415 +
            (C107292 + C107293 + C107294 + C107295) * C153927) *
               C153712 * C154094 -
           ((C106479 * C9165 + C107788 + C107788 + C154123 * C9171 +
             C106477 * C6157 + C107789 + C107789 + C154177 * C6169 +
             C106475 * C1487 + C107790 + C107790 + C154186 * C1497 +
             C106473 * C1083 + C107791 + C107791 + C154189 * C1095) *
                C153927 +
            (C107513 + C107512 + C107511 + C107510) * C70415) *
               C153712 * C153847) *
              C153767 * C774)) /
            (p * q * std::sqrt(p + q));
    d2ee[109] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
              C97199 + C97199 + C153969 * C580) *
                 C70415 +
             (C101439 + C101440) * C153927) *
                C154178 +
            ((C97252 + C97253) * C70415 + C101388 * C153927) * C154159 +
            C125307 * C154130) *
               C153783 * C326 -
           ((C101412 * C153927 + C98013 * C70415) * C154130 +
            (C101394 * C153927 + C101395 * C70415) * C154159 +
            ((C101442 + C101441) * C153927 + (C101440 + C101439) * C70415) *
                C154178) *
               C153783 * C327 +
           ((C101451 * C70415 + (C101446 + C101445) * C153927) * C154178 +
            (C101389 * C70415 + C101453 * C153927) * C154159 +
            (C102071 * C70415 + (C101449 + C101450) * C153927) * C154130) *
               C153783 * C328) *
              C329 +
          (((C101388 * C70415 + C101389 * C153927) * C154178 +
            (C102070 * C70415 + C102071 * C153927) * C154159 +
            (C111246 * C70415 + (C97542 + C97543) * C153927) * C154130) *
               C153783 * C327 -
           (C125308 * C154130 +
            (C98013 * C153927 + (C97255 + C97254) * C70415) * C154159 +
            (C101395 * C153927 + (C97253 + C97252) * C70415) * C154178) *
               C153783 * C326 -
           (((C97195 * C4171 + C98860 + C98860 + C153969 * C4179 +
              C97193 * C1344 + C98861 + C98861 + C97191 * C1354) *
                 C153927 +
             (C97543 + C97542) * C70415) *
                C154130 +
            ((C101450 + C101449) * C153927 + C101412 * C70415) * C154159 +
            (C101452 * C153927 + C101394 * C70415) * C154178) *
               C153783 * C328) *
              C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
             C97199 + C97199 + C153969 * C580) *
                C70415 +
            (C101439 + C101440) * C153927) *
               C154178 +
           ((C97252 + C97253) * C70415 + C101388 * C153927) * C154159 +
           C125307 * C154130) *
              C153783 * C153767 * C130 -
          (C125308 * C154130 +
           (C98013 * C153927 + (C97255 + C97254) * C70415) * C154159 +
           (C101395 * C153927 + (C97253 + C97252) * C70415) * C154178) *
              C153783 * C153767 * C131 +
          (C125307 * C154178 + (C97263 * C70415 + C111246 * C153927) * C154159 +
           ((C97259 + C97258) * C70415 + (C98026 + C98027) * C153927) *
               C154130) *
              C153783 * C153767 * C132 -
          (((C97195 * C1086 + C98018 + C98018 + C153969 * C1098 +
             C97193 * C341 + C98019 + C98019 + C97191 * C365) *
                C153927 +
            (C97261 + C97260) * C70415) *
               C154130 +
           ((C98027 + C98026) * C153927 + C97264 * C70415) * C154159 +
           C125308 * C154178) *
              C153783 * C153767 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
            C97199 + C97199 + C153969 * C580) *
               C154188 +
           (C101439 + C101440) * C154184 + C101451 * C154174 +
           (C101446 + C101445) * C154116) *
              C153712 * C153783 * C153767 * C130 -
          (C101452 * C154116 + C101394 * C154174 + C101395 * C154184 +
           (C97253 + C97252) * C154188) *
              C153712 * C153783 * C153767 * C131 +
          (C97262 * C154188 + C102070 * C154184 + C102071 * C154174 +
           (C101449 + C101450) * C154116) *
              C153712 * C153783 * C153767 * C132 -
          ((C97195 * C4171 + C98860 + C98860 + C153969 * C4179 +
            C97193 * C1344 + C98861 + C98861 + C97191 * C1354) *
               C154116 +
           (C97543 + C97542) * C154174 + C98012 * C154184 + C97265 * C154188) *
              C153712 * C153783 * C153767 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
             C97199 + C97199 + C153969 * C580) *
                C154188 +
            (C101439 + C101440) * C154184 + C101451 * C154174 +
            C130665 * C154116) *
               C153712 * C153783 * C326 -
           ((C103296 + C103295) * C154116 + C103282 * C154174 +
            (C101442 + C101441) * C154184 + (C101440 + C101439) * C154188) *
               C153712 * C153783 * C327 +
           (C101451 * C154188 + C130665 * C154184 +
            (C103295 + C103296) * C154174 +
            (C97193 * C4576 + C103290 + C103290 + C97191 * C4582 +
             C97195 * C28772 + C103289 + C103289 + C153969 * C28776) *
                C154116) *
               C153712 * C153783 * C328) *
              C329 +
          ((C101388 * C154188 + C101389 * C154184 + C101453 * C154174 +
            (C101447 + C101448) * C154116) *
               C153712 * C153783 * C327 -
           (C101452 * C154116 + C101394 * C154174 + C101395 * C154184 +
            (C97253 + C97252) * C154188) *
               C153712 * C153783 * C326 -
           ((C97195 * C28773 + C103287 + C103287 + C153969 * C28777 +
             C97193 * C4575 + C103288 + C103288 + C97191 * C4581) *
                C154116 +
            (C101448 + C101447) * C154174 + C101452 * C154184 +
            C101394 * C154188) *
               C153712 * C153783 * C328) *
              C153754)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C106473 * C136 + C106482 + C106482 + C154189 * C152 +
            C106475 * C556 + C106483 + C106483 + C154186 * C580 +
            C106477 * C557 + C106484 + C106484 + C154177 * C581 +
            C106479 * C2272 + C106485 + C106485 + C154123 * C2282) *
               C70415 +
           (C106473 * C335 + C106771 + C106771 + C154189 * C359 +
            C106475 * C1081 + C106770 + C106770 + C154186 * C1093 +
            C106477 * C1489 + C106769 + C106769 + C154177 * C1499 +
            C106479 * C6161 + C106768 + C106768 + C154123 * C6173) *
               C153927) *
              C153712 * C153783 * C153767 * C130 -
          ((C106812 + C106813 + C106814 + C106815) * C153927 +
           (C106553 + C106552 + C106551 + C106550) * C70415) *
              C153712 * C153783 * C153767 * C131 +
          ((C106557 + C106556 + C106555 + C106554) * C70415 +
           (C107292 + C107293 + C107294 + C107295) * C153927) *
              C153712 * C153783 * C153767 * C132 -
          ((C106479 * C8529 + C107280 + C107280 + C154123 * C8531 +
            C106477 * C1486 + C107281 + C107281 + C154177 * C1496 +
            C106475 * C1084 + C107282 + C107282 + C154186 * C1096 +
            C106473 * C332 + C107283 + C107283 + C154189 * C356) *
               C153927 +
           (C106561 + C106560 + C106559 + C106558) * C70415) *
              C153712 * C153783 * C153767 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C106473 * C136 + C106482 + C106482 + C154189 * C152 +
             C106475 * C556 + C106483 + C106483 + C154186 * C580 +
             C106477 * C557 + C106484 + C106484 + C154177 * C581 +
             C106479 * C2272 + C106485 + C106485 + C154123 * C2282) *
                C70415 +
            (C134230 + C134231 + C134232 + C134233) * C153927) *
               C153712 * C153783 * C326 -
           ((C134234 + C134235 + C134236 + C134237) * C153927 +
            (C134233 + C134232 + C134231 + C134230) * C70415) *
               C153712 * C153783 * C327 +
           ((C134237 + C134236 + C134235 + C134234) * C70415 +
            (C106473 * C1347 + C108135 + C108135 + C154189 * C1357 +
             C106475 * C4168 + C108134 + C108134 + C154186 * C4176 +
             C106477 * C4811 + C108133 + C108133 + C154177 * C4817 +
             C106479 * C29881 + C108132 + C108132 + C154123 * C29885) *
                C153927) *
               C153712 * C153783 * C328) *
              C329 +
          (((C106815 + C106814 + C106813 + C106812) * C70415 +
            (C106816 + C106817 + C106818 + C106819) * C153927) *
               C153712 * C153783 * C327 -
           ((C106812 + C106813 + C106814 + C106815) * C153927 +
            (C106553 + C106552 + C106551 + C106550) * C70415) *
               C153712 * C153783 * C326 -
           ((C106479 * C31684 + C108128 + C108128 + C154123 * C31686 +
             C106477 * C4810 + C108129 + C108129 + C154177 * C4816 +
             C106475 * C4169 + C108130 + C108130 + C154186 * C4177 +
             C106473 * C1346 + C108131 + C108131 + C154189 * C1356) *
                C153927 +
            (C106819 + C106818 + C106817 + C106816) * C70415) *
               C153712 * C153783 * C328) *
              C153754)) /
            (p * q * std::sqrt(p + q));
    d2ee[110] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
             C97199 + C97199 + C153969 * C580) *
                C154188 +
            (C101439 + C101440) * C154184 + C101451 * C154174 +
            C130665 * C154116) *
               C153712 * C153783 * C154164 -
           (C131830 * C154116 + C103282 * C154174 +
            (C101442 + C101441) * C154184 + (C101440 + C101439) * C154188) *
               C153712 * C153783 * C154165 +
           (C101451 * C154188 + C130665 * C154184 +
            (C103295 + C103296) * C154174 + (C131841 + C131842) * C154116) *
               C153712 * C153783 * C1629) *
              C154085 +
          ((C101388 * C154188 + C101389 * C154184 + C101453 * C154174 +
            (C101447 + C101448) * C154116) *
               C153712 * C153783 * C154165 -
           (C101452 * C154116 + C101394 * C154174 + C101395 * C154184 +
            (C97253 + C97252) * C154188) *
               C153712 * C153783 * C154164 -
           ((C97195 * C28773 + C103287 + C103287 + C153969 * C28777 +
             C97193 * C4575 + C103288 + C103288 + C97191 * C4581) *
                C154116 +
            (C101448 + C101447) * C154174 + C101452 * C154184 +
            C101394 * C154188) *
               C153712 * C153783 * C1629) *
              C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
              C97199 + C97199 + C153969 * C580) *
                 C70415 +
             (C101439 + C101440) * C153927) *
                C154178 +
            ((C97252 + C97253) * C70415 + C101388 * C153927) * C154159 +
            C125307 * C154130) *
               C153783 * C154164 -
           (C126181 * C154130 +
            (C101394 * C153927 + C101395 * C70415) * C154159 +
            ((C101442 + C101441) * C153927 + (C101440 + C101439) * C70415) *
                C154178) *
               C153783 * C154165 +
           ((C101451 * C70415 + (C101446 + C101445) * C153927) * C154178 +
            (C101389 * C70415 + C101453 * C153927) * C154159 +
            (C102071 * C70415 + (C101449 + C101450) * C153927) * C154130) *
               C153783 * C1629) *
              C154085 +
          (((C101388 * C70415 + C101389 * C153927) * C154178 +
            (C102070 * C70415 + C102071 * C153927) * C154159 +
            (C111246 * C70415 + (C97542 + C97543) * C153927) * C154130) *
               C153783 * C154165 -
           (C125308 * C154130 +
            (C98013 * C153927 + (C97255 + C97254) * C70415) * C154159 +
            (C101395 * C153927 + (C97253 + C97252) * C70415) * C154178) *
               C153783 * C154164 -
           (((C97195 * C4171 + C98860 + C98860 + C153969 * C4179 +
              C97193 * C1344 + C98861 + C98861 + C97191 * C1354) *
                 C153927 +
             (C97543 + C97542) * C70415) *
                C154130 +
            ((C101450 + C101449) * C153927 + C101412 * C70415) * C154159 +
            (C101452 * C153927 + C101394 * C70415) * C154178) *
               C153783 * C1629) *
              C153754)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C106473 * C136 + C106482 + C106482 + C154189 * C152 +
             C106475 * C556 + C106483 + C106483 + C154186 * C580 +
             C106477 * C557 + C106484 + C106484 + C154177 * C581 +
             C106479 * C2272 + C106485 + C106485 + C154123 * C2282) *
                C70415 +
            (C134230 + C134231 + C134232 + C134233) * C153927) *
               C153712 * C153783 * C154164 -
           ((C134234 + C134235 + C134236 + C134237) * C153927 +
            (C134233 + C134232 + C134231 + C134230) * C70415) *
               C153712 * C153783 * C154165 +
           ((C134237 + C134236 + C134235 + C134234) * C70415 +
            (C135442 + C135443 + C135444 + C135445) * C153927) *
               C153712 * C153783 * C1629) *
              C154085 +
          (((C106815 + C106814 + C106813 + C106812) * C70415 +
            (C106816 + C106817 + C106818 + C106819) * C153927) *
               C153712 * C153783 * C154165 -
           ((C106812 + C106813 + C106814 + C106815) * C153927 +
            (C106553 + C106552 + C106551 + C106550) * C70415) *
               C153712 * C153783 * C154164 -
           ((C106479 * C31684 + C108128 + C108128 + C154123 * C31686 +
             C106477 * C4810 + C108129 + C108129 + C154177 * C4816 +
             C106475 * C4169 + C108130 + C108130 + C154186 * C4177 +
             C106473 * C1346 + C108131 + C108131 + C154189 * C1356) *
                C153927 +
            (C106819 + C106818 + C106817 + C106816) * C70415) *
               C153712 * C153783 * C1629) *
              C153754)) /
            (p * q * std::sqrt(p + q));
    d2ee[111] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
             C97199 + C97199 + C153969 * C580) *
                C154188 +
            (C101439 + C101440) * C154184 + C101451 * C154174 +
            C130665 * C154116) *
               C153712 * C154094 -
           (C132695 * C154116 + C104577 * C154174 +
            (C102794 + C102795) * C154184 +
            (C97195 * C557 + C97756 + C97756 + C153969 * C581 + C97193 * C556 +
             C97757 + C97757 + C97191 * C580) *
                C154188) *
               C153712 * C153847) *
              C154164 +
          (((C102795 + C102794) * C154188 + (C102793 + C102792) * C154184 +
            (C104590 + C104591) * C154174 + (C132706 + C132707) * C154116) *
               C153712 * C153847 -
           (C131830 * C154116 + C103282 * C154174 +
            (C101442 + C101441) * C154184 + (C101440 + C101439) * C154188) *
               C153712 * C154094) *
              C154165 +
          ((C101451 * C154188 + C130665 * C154184 +
            (C103295 + C103296) * C154174 + (C131841 + C131842) * C154116) *
               C153712 * C154094 -
           ((C97195 * C29125 + C132700 + C132700 + C153969 * C29127 +
             C97193 * C28772 + C132701 + C132701 + C97191 * C28776) *
                C154116 +
            (C132707 + C132706) * C154174 + C132695 * C154184 +
            C104577 * C154188) *
               C153712 * C153847) *
              C1629) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
              C97199 + C97199 + C153969 * C580) *
                 C70415 +
             (C101439 + C101440) * C153927) *
                C154178 +
            ((C97252 + C97253) * C70415 + C101388 * C153927) * C154159 +
            C125307 * C154130) *
               C154094 -
           (C126474 * C154130 +
            (C102759 * C153927 + (C97810 + C97811) * C70415) * C154159 +
            ((C102794 + C102795) * C153927 +
             (C97195 * C557 + C97756 + C97756 + C153969 * C581 + C97193 * C556 +
              C97757 + C97757 + C97191 * C580) *
                 C70415) *
                C154178) *
               C153847) *
              C154164 +
          ((((C102795 + C102794) * C70415 + (C102793 + C102792) * C153927) *
                C154178 +
            (C102770 * C70415 + C102771 * C153927) * C154159 +
            (C111928 * C70415 + (C102370 + C102371) * C153927) * C154130) *
               C153847 -
           (C126181 * C154130 +
            (C101394 * C153927 + C101395 * C70415) * C154159 +
            ((C101442 + C101441) * C153927 + (C101440 + C101439) * C70415) *
                C154178) *
               C154094) *
              C154165 +
          (((C101451 * C70415 + (C101446 + C101445) * C153927) * C154178 +
            (C101389 * C70415 + C101453 * C153927) * C154159 +
            (C102071 * C70415 + (C101449 + C101450) * C153927) * C154130) *
               C154094 -
           (((C97195 * C4809 + C102778 + C102778 + C153969 * C4815 +
              C97193 * C4170 + C102779 + C102779 + C97191 * C4178) *
                 C153927 +
             (C102371 + C102370) * C70415) *
                C154130 +
            ((C102797 + C102796) * C153927 + C102758 * C70415) * C154159 +
            ((C104591 + C104590) * C153927 + C104577 * C70415) * C154178) *
               C153847) *
              C1629) *
         C153748) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C106473 * C136 + C106482 + C106482 + C154189 * C152 +
             C106475 * C556 + C106483 + C106483 + C154186 * C580 +
             C106477 * C557 + C106484 + C106484 + C154177 * C581 +
             C106479 * C2272 + C106485 + C106485 + C154123 * C2282) *
                C70415 +
            (C134230 + C134231 + C134232 + C134233) * C153927) *
               C153712 * C154094 -
           ((C135094 + C135095 + C135096 + C135097) * C153927 +
            (C106479 * C7665 + C107026 + C107026 + C154123 * C7673 +
             C106477 * C2272 + C107027 + C107027 + C154177 * C2282 +
             C106475 * C557 + C107028 + C107028 + C154186 * C581 +
             C106473 * C556 + C107029 + C107029 + C154189 * C580) *
                C70415) *
               C153712 * C153847) *
              C154164 +
          (((C135097 + C135096 + C135095 + C135094) * C70415 +
            (C136330 + C136331 + C136332 + C136333) * C153927) *
               C153712 * C153847 -
           ((C134234 + C134235 + C134236 + C134237) * C153927 +
            (C134233 + C134232 + C134231 + C134230) * C70415) *
               C153712 * C154094) *
              C154165 +
          (((C134237 + C134236 + C134235 + C134234) * C70415 +
            (C135442 + C135443 + C135444 + C135445) * C153927) *
               C153712 * C154094 -
           ((C106479 * C32340 + C136318 + C136318 + C154123 * C32342 +
             C106477 * C29881 + C136319 + C136319 + C154177 * C29885 +
             C106475 * C4811 + C136320 + C136320 + C154186 * C4817 +
             C106473 * C4168 + C136321 + C136321 + C154189 * C4176) *
                C153927 +
            (C136333 + C136332 + C136331 + C136330) * C70415) *
               C153712 * C153847) *
              C1629) *
         C153748) /
            (p * q * std::sqrt(p + q));
    d2ee[112] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C97193 * C136 + C97198 + C97198 + C97191 * C152 +
                  C97195 * C556 + C97199 + C97199 + C153969 * C580) *
                     C70415 +
                 (C101439 + C101440) * C153927) *
                    C154178 +
                ((C97252 + C97253) * C70415 + C101388 * C153927) * C154159 +
                C125307 * C154130) *
                   C153783 * C1251 -
               (C126181 * C154130 +
                (C101394 * C153927 + C101395 * C70415) * C154159 +
                ((C101442 + C101441) * C153927 + (C101440 + C101439) * C70415) *
                    C154178) *
                   C153783 * C153819) *
                  C1253 +
              (((C101388 * C70415 + C101389 * C153927) * C154178 +
                (C102070 * C70415 + C102071 * C153927) * C154159 +
                (C111246 * C70415 + (C97542 + C97543) * C153927) * C154130) *
                   C153783 * C153819 -
               (C125308 * C154130 +
                (C98013 * C153927 + (C97255 + C97254) * C70415) * C154159 +
                (C101395 * C153927 + (C97253 + C97252) * C70415) * C154178) *
                   C153783 * C1251) *
                  C1254 +
              ((C125307 * C154178 +
                (C97263 * C70415 + C111246 * C153927) * C154159 +
                ((C97259 + C97258) * C70415 + (C98026 + C98027) * C153927) *
                    C154130) *
                   C153783 * C1251 -
               (((C97195 * C1916 + C97506 + C97506 + C153969 * C1926 +
                  C97193 * C340 + C97507 + C97507 + C97191 * C364) *
                     C153927 +
                 (C98027 + C98026) * C70415) *
                    C154130 +
                ((C97543 + C97542) * C153927 + C98012 * C70415) * C154159 +
                C126181 * C154178) *
                   C153783 * C153819) *
                  C1255) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C97193 * C136 + C97198 + C97198 + C97191 * C152 +
                 C97195 * C556 + C97199 + C97199 + C153969 * C580) *
                    C70415 +
                (C101439 + C101440) * C153927) *
                   C154178 +
               ((C97252 + C97253) * C70415 + C101388 * C153927) * C154159 +
               C125307 * C154130) *
                  C153783 * C1338 -
              (C126181 * C154130 +
               (C101394 * C153927 + C101395 * C70415) * C154159 +
               ((C101442 + C101441) * C153927 + (C101440 + C101439) * C70415) *
                   C154178) *
                  C153783 * C1339 +
              ((C101451 * C70415 + (C101446 + C101445) * C153927) * C154178 +
               (C101389 * C70415 + C101453 * C153927) * C154159 +
               (C102071 * C70415 + (C101449 + C101450) * C153927) * C154130) *
                  C153783 * C1340 -
              (((C97195 * C5557 + C101413 + C101413 + C153969 * C5563 +
                 C97193 * C3085 + C101414 + C101414 + C97191 * C3093) *
                    C153927 +
                (C101450 + C101449) * C70415) *
                   C154130 +
               ((C101448 + C101447) * C153927 + C101452 * C70415) * C154159 +
               ((C103296 + C103295) * C153927 + C103282 * C70415) * C154178) *
                  C153783 * C1341) *
             C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
              C97199 + C97199 + C153969 * C580) *
                 C70415 +
             (C101439 + C101440) * C153927) *
                C154178 +
            ((C97252 + C97253) * C70415 + C101388 * C153927) * C154159 +
            C125307 * C154130) *
               C549 -
           (C126474 * C154130 +
            (C102759 * C153927 + (C97810 + C97811) * C70415) * C154159 +
            ((C102794 + C102795) * C153927 +
             (C97195 * C557 + C97756 + C97756 + C153969 * C581 + C97193 * C556 +
              C97757 + C97757 + C97191 * C580) *
                 C70415) *
                C154178) *
               C550 +
           (((C97193 * C557 + C97758 + C97758 + C97191 * C581 + C97195 * C2272 +
              C97759 + C97759 + C153969 * C2282) *
                 C70415 +
             (C103607 + C103608) * C153927) *
                C154178 +
            ((C97812 + C97813) * C70415 + (C101776 + C101777) * C153927) *
                C154159 +
            ((C97814 + C97815) * C70415 + (C110952 + C110953) * C153927) *
                C154130) *
               C551) *
              C1251 +
          ((((C102795 + C102794) * C70415 + (C102793 + C102792) * C153927) *
                C154178 +
            (C102770 * C70415 + C102771 * C153927) * C154159 +
            (C111928 * C70415 + (C102370 + C102371) * C153927) * C154130) *
               C550 -
           (C126181 * C154130 +
            (C101394 * C153927 + C101395 * C70415) * C154159 +
            ((C101442 + C101441) * C153927 + (C101440 + C101439) * C70415) *
                C154178) *
               C549 -
           (((C97195 * C6156 + C101760 + C101760 + C153969 * C6168 +
              C97193 * C3371 + C101761 + C101761 + C97191 * C3379) *
                 C153927 +
             (C110953 + C110952) * C70415) *
                C154130 +
            ((C101779 + C101778) * C153927 + (C101777 + C101776) * C70415) *
                C154159 +
            ((C103610 + C103609) * C153927 + (C103608 + C103607) * C70415) *
                C154178) *
               C551) *
              C153819) *
         C153748) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
             C97199 + C97199 + C153969 * C580) *
                C154188 +
            (C101439 + C101440) * C154184 + C101451 * C154174 +
            C130665 * C154116) *
               C153712 * C153783 * C1251 -
           ((C103296 + C103295) * C154116 + C103282 * C154174 +
            (C101442 + C101441) * C154184 + (C101440 + C101439) * C154188) *
               C153712 * C153783 * C153819) *
              C1253 +
          ((C101388 * C154188 + C101389 * C154184 + C101453 * C154174 +
            (C101447 + C101448) * C154116) *
               C153712 * C153783 * C153819 -
           (C101452 * C154116 + C101394 * C154174 + C101395 * C154184 +
            (C97253 + C97252) * C154188) *
               C153712 * C153783 * C1251) *
              C1254 +
          ((C97262 * C154188 + C102070 * C154184 + C102071 * C154174 +
            (C101449 + C101450) * C154116) *
               C153712 * C153783 * C1251 -
           ((C97195 * C5557 + C101413 + C101413 + C153969 * C5563 +
             C97193 * C3085 + C101414 + C101414 + C97191 * C3093) *
                C154116 +
            (C101450 + C101449) * C154174 + C101412 * C154184 +
            C98013 * C154188) *
               C153712 * C153783 * C153819) *
              C1255)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
            C97199 + C97199 + C153969 * C580) *
               C154188 +
           (C101439 + C101440) * C154184 + C101451 * C154174 +
           C130665 * C154116) *
              C153712 * C153783 * C1338 -
          (C131830 * C154116 + C103282 * C154174 +
           (C101442 + C101441) * C154184 + (C101440 + C101439) * C154188) *
              C153712 * C153783 * C1339 +
          (C101451 * C154188 + C130665 * C154184 +
           (C103295 + C103296) * C154174 + (C131841 + C131842) * C154116) *
              C153712 * C153783 * C1340 -
          ((C97195 * C29545 + C131835 + C131835 + C153969 * C29547 +
            C97193 * C28218 + C131836 + C131836 + C97191 * C28222) *
               C154116 +
           (C131842 + C131841) * C154174 + C131830 * C154184 +
           C103282 * C154188) *
              C153712 * C153783 * C1341) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
             C97199 + C97199 + C153969 * C580) *
                C154188 +
            (C101439 + C101440) * C154184 + C101451 * C154174 +
            C130665 * C154116) *
               C153712 * C549 -
           ((C104591 + C104590) * C154116 + C104577 * C154174 +
            (C102794 + C102795) * C154184 +
            (C97195 * C557 + C97756 + C97756 + C153969 * C581 + C97193 * C556 +
             C97757 + C97757 + C97191 * C580) *
                C154188) *
               C153712 * C550 +
           ((C97193 * C557 + C97758 + C97758 + C97191 * C581 + C97195 * C2272 +
             C97759 + C97759 + C153969 * C2282) *
                C154188 +
            (C103607 + C103608) * C154184 + (C103609 + C103610) * C154174 +
            (C132047 + C132048) * C154116) *
               C153712 * C551) *
              C1251 +
          (((C102795 + C102794) * C154188 + (C102793 + C102792) * C154184 +
            (C104590 + C104591) * C154174 +
            (C97193 * C5559 + C104585 + C104585 + C97191 * C5565 +
             C97195 * C28358 + C104584 + C104584 + C153969 * C28362) *
                C154116) *
               C153712 * C550 -
           (C131830 * C154116 + C103282 * C154174 +
            (C101442 + C101441) * C154184 + (C101440 + C101439) * C154188) *
               C153712 * C549 -
           ((C97195 * C29880 + C132041 + C132041 + C153969 * C29884 +
             C97193 * C28358 + C132042 + C132042 + C97191 * C28362) *
                C154116 +
            (C132048 + C132047) * C154174 + (C103610 + C103609) * C154184 +
            (C103608 + C103607) * C154188) *
               C153712 * C551) *
              C153819) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C106473 * C136 + C106482 + C106482 + C154189 * C152 +
             C106475 * C556 + C106483 + C106483 + C154186 * C580 +
             C106477 * C557 + C106484 + C106484 + C154177 * C581 +
             C106479 * C2272 + C106485 + C106485 + C154123 * C2282) *
                C70415 +
            (C134230 + C134231 + C134232 + C134233) * C153927) *
               C153712 * C153783 * C1251 -
           ((C134234 + C134235 + C134236 + C134237) * C153927 +
            (C134233 + C134232 + C134231 + C134230) * C70415) *
               C153712 * C153783 * C153819) *
              C1253 +
          (((C106815 + C106814 + C106813 + C106812) * C70415 +
            (C106816 + C106817 + C106818 + C106819) * C153927) *
               C153712 * C153783 * C153819 -
           ((C106812 + C106813 + C106814 + C106815) * C153927 +
            (C106553 + C106552 + C106551 + C106550) * C70415) *
               C153712 * C153783 * C1251) *
              C1254 +
          (((C106557 + C106556 + C106555 + C106554) * C70415 +
            (C107292 + C107293 + C107294 + C107295) * C153927) *
               C153712 * C153783 * C1251 -
           ((C106479 * C6156 + C106792 + C106792 + C154123 * C6168 +
             C106477 * C3371 + C106793 + C106793 + C154177 * C3379 +
             C106475 * C1918 + C106794 + C106794 + C154186 * C1928 +
             C106473 * C338 + C106795 + C106795 + C154189 * C362) *
                C153927 +
            (C107295 + C107294 + C107293 + C107292) * C70415) *
               C153712 * C153783 * C153819) *
              C1255)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C106473 * C136 + C106482 + C106482 + C154189 * C152 +
            C106475 * C556 + C106483 + C106483 + C154186 * C580 +
            C106477 * C557 + C106484 + C106484 + C154177 * C581 +
            C106479 * C2272 + C106485 + C106485 + C154123 * C2282) *
               C70415 +
           (C134230 + C134231 + C134232 + C134233) * C153927) *
              C153712 * C153783 * C1338 -
          ((C134234 + C134235 + C134236 + C134237) * C153927 +
           (C134233 + C134232 + C134231 + C134230) * C70415) *
              C153712 * C153783 * C1339 +
          ((C134237 + C134236 + C134235 + C134234) * C70415 +
           (C135442 + C135443 + C135444 + C135445) * C153927) *
              C153712 * C153783 * C1340 -
          ((C106479 * C29880 + C135430 + C135430 + C154123 * C29884 +
            C106477 * C28358 + C135431 + C135431 + C154177 * C28362 +
            C106475 * C5559 + C135432 + C135432 + C154186 * C5565 +
            C106473 * C3083 + C135433 + C135433 + C154189 * C3091) *
               C153927 +
           (C135445 + C135444 + C135443 + C135442) * C70415) *
              C153712 * C153783 * C1341) *
         C153748) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C106473 * C136 + C106482 + C106482 + C154189 * C152 +
             C106475 * C556 + C106483 + C106483 + C154186 * C580 +
             C106477 * C557 + C106484 + C106484 + C154177 * C581 +
             C106479 * C2272 + C106485 + C106485 + C154123 * C2282) *
                C70415 +
            (C134230 + C134231 + C134232 + C134233) * C153927) *
               C153712 * C549 -
           ((C135094 + C135095 + C135096 + C135097) * C153927 +
            (C106479 * C7665 + C107026 + C107026 + C154123 * C7673 +
             C106477 * C2272 + C107027 + C107027 + C154177 * C2282 +
             C106475 * C557 + C107028 + C107028 + C154186 * C581 +
             C106473 * C556 + C107029 + C107029 + C154189 * C580) *
                C70415) *
               C153712 * C550 +
           ((C106473 * C557 + C107030 + C107030 + C154189 * C581 +
             C106475 * C2272 + C107031 + C107031 + C154186 * C2282 +
             C106477 * C7665 + C107032 + C107032 + C154177 * C7673 +
             C106479 * C10502 + C107033 + C107033 + C154123 * C10508) *
                C70415 +
            (C135660 + C135661 + C135662 + C135663) * C153927) *
               C153712 * C551) *
              C1251 +
          (((C135097 + C135096 + C135095 + C135094) * C70415 +
            (C106473 * C1920 + C108991 + C108991 + C154189 * C1930 +
             C106475 * C3369 + C108990 + C108990 + C154186 * C3377 +
             C106477 * C6160 + C108989 + C108989 + C154177 * C6172 +
             C106479 * C30946 + C108988 + C108988 + C154123 * C30950) *
                C153927) *
               C153712 * C550 -
           ((C134234 + C134235 + C134236 + C134237) * C153927 +
            (C134233 + C134232 + C134231 + C134230) * C70415) *
               C153712 * C549 -
           ((C106479 * C33704 + C135648 + C135648 + C154123 * C33708 +
             C106477 * C30946 + C135649 + C135649 + C154177 * C30950 +
             C106475 * C6160 + C135650 + C135650 + C154186 * C6172 +
             C106473 * C3369 + C135651 + C135651 + C154189 * C3377) *
                C153927 +
            (C135663 + C135662 + C135661 + C135660) * C70415) *
               C153712 * C551) *
              C153819) *
         C153748) /
            (p * q * std::sqrt(p + q));
    d2ee[113] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
              C97199 + C97199 + C153969 * C580) *
                 C154188 +
             (C101439 + C101440) * C154184 + C101451 * C154174 +
             C130665 * C154116) *
                C153712 * C154094 -
            ((C104591 + C104590) * C154116 + C104577 * C154174 +
             (C102794 + C102795) * C154184 +
             (C97195 * C557 + C97756 + C97756 + C153969 * C581 + C97193 * C556 +
              C97757 + C97757 + C97191 * C580) *
                 C154188) *
                C153712 * C153847) *
               C1251 +
           (((C102795 + C102794) * C154188 + (C102793 + C102792) * C154184 +
             (C104590 + C104591) * C154174 +
             (C97193 * C5559 + C104585 + C104585 + C97191 * C5565 +
              C97195 * C28358 + C104584 + C104584 + C153969 * C28362) *
                 C154116) *
                C153712 * C153847 -
            (C131830 * C154116 + C103282 * C154174 +
             (C101442 + C101441) * C154184 + (C101440 + C101439) * C154188) *
                C153712 * C154094) *
               C153819) *
              C154085 +
          ((((C97811 + C97810) * C154188 + C102770 * C154184 +
             C102771 * C154174 + (C102796 + C102797) * C154116) *
                C153712 * C153847 -
            (C101452 * C154116 + C101394 * C154174 + C101395 * C154184 +
             (C97253 + C97252) * C154188) *
                C153712 * C154094) *
               C1251 +
           ((C101388 * C154188 + C101389 * C154184 + C101453 * C154174 +
             (C101447 + C101448) * C154116) *
                C153712 * C154094 -
            ((C97195 * C28359 + C104582 + C104582 + C153969 * C28363 +
              C97193 * C5558 + C104583 + C104583 + C97191 * C5564) *
                 C154116 +
             (C102797 + C102796) * C154174 + C102758 * C154184 +
             C102759 * C154188) *
                C153712 * C153847) *
               C153819) *
              C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
               C97199 + C97199 + C153969 * C580) *
                  C70415 +
              (C101439 + C101440) * C153927) *
                 C154178 +
             ((C97252 + C97253) * C70415 + C101388 * C153927) * C154159 +
             C125307 * C154130) *
                C154094 -
            (C126474 * C154130 +
             (C102759 * C153927 + (C97810 + C97811) * C70415) * C154159 +
             ((C102794 + C102795) * C153927 +
              (C97195 * C557 + C97756 + C97756 + C153969 * C581 +
               C97193 * C556 + C97757 + C97757 + C97191 * C580) *
                  C70415) *
                 C154178) *
                C153847) *
               C1251 +
           ((((C102795 + C102794) * C70415 + (C102793 + C102792) * C153927) *
                 C154178 +
             (C102770 * C70415 + C102771 * C153927) * C154159 +
             (C111928 * C70415 + (C102370 + C102371) * C153927) * C154130) *
                C153847 -
            (C126181 * C154130 +
             (C101394 * C153927 + C101395 * C70415) * C154159 +
             ((C101442 + C101441) * C153927 + (C101440 + C101439) * C70415) *
                 C154178) *
                C154094) *
               C153819) *
              C154085 +
          (((((C97811 + C97810) * C70415 + C102770 * C153927) * C154178 +
             ((C97809 + C97808) * C70415 + C111928 * C153927) * C154159 +
             ((C97807 + C97806) * C70415 + (C98534 + C98535) * C153927) *
                 C154130) *
                C153847 -
            (C125308 * C154130 +
             (C98013 * C153927 + (C97255 + C97254) * C70415) * C154159 +
             (C101395 * C153927 + (C97253 + C97252) * C70415) * C154178) *
                C154094) *
               C1251 +
           (((C101388 * C70415 + C101389 * C153927) * C154178 +
             (C102070 * C70415 + C102071 * C153927) * C154159 +
             (C111246 * C70415 + (C97542 + C97543) * C153927) * C154130) *
                C154094 -
            (((C97195 * C3372 + C99716 + C99716 + C153969 * C3380 +
               C97193 * C1917 + C99717 + C99717 + C97191 * C1927) *
                  C153927 +
              (C98535 + C98534) * C70415) *
                 C154130 +
             ((C102371 + C102370) * C153927 + C111538 * C70415) * C154159 +
             (C102758 * C153927 + C102759 * C70415) * C154178) *
                C153847) *
               C153819) *
              C153754)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C106473 * C136 + C106482 + C106482 + C154189 * C152 +
              C106475 * C556 + C106483 + C106483 + C154186 * C580 +
              C106477 * C557 + C106484 + C106484 + C154177 * C581 +
              C106479 * C2272 + C106485 + C106485 + C154123 * C2282) *
                 C70415 +
             (C134230 + C134231 + C134232 + C134233) * C153927) *
                C153712 * C154094 -
            ((C135094 + C135095 + C135096 + C135097) * C153927 +
             (C106479 * C7665 + C107026 + C107026 + C154123 * C7673 +
              C106477 * C2272 + C107027 + C107027 + C154177 * C2282 +
              C106475 * C557 + C107028 + C107028 + C154186 * C581 +
              C106473 * C556 + C107029 + C107029 + C154189 * C580) *
                 C70415) *
                C153712 * C153847) *
               C1251 +
           (((C135097 + C135096 + C135095 + C135094) * C70415 +
             (C106473 * C1920 + C108991 + C108991 + C154189 * C1930 +
              C106475 * C3369 + C108990 + C108990 + C154186 * C3377 +
              C106477 * C6160 + C108989 + C108989 + C154177 * C6172 +
              C106479 * C30946 + C108988 + C108988 + C154123 * C30950) *
                 C153927) *
                C153712 * C153847 -
            ((C134234 + C134235 + C134236 + C134237) * C153927 +
             (C134233 + C134232 + C134231 + C134230) * C70415) *
                C153712 * C154094) *
               C153819) *
              C154085 +
          ((((C107073 + C107072 + C107071 + C107070) * C70415 +
             (C107800 + C107801 + C107802 + C107803) * C153927) *
                C153712 * C153847 -
            ((C106812 + C106813 + C106814 + C106815) * C153927 +
             (C106553 + C106552 + C106551 + C106550) * C70415) *
                C153712 * C154094) *
               C1251 +
           (((C106815 + C106814 + C106813 + C106812) * C70415 +
             (C106816 + C106817 + C106818 + C106819) * C153927) *
                C153712 * C154094 -
            ((C106479 * C30947 + C108984 + C108984 + C154123 * C30951 +
              C106477 * C6158 + C108985 + C108985 + C154177 * C6170 +
              C106475 * C3370 + C108986 + C108986 + C154186 * C3378 +
              C106473 * C1919 + C108987 + C108987 + C154189 * C1929) *
                 C153927 +
             (C107803 + C107802 + C107801 + C107800) * C70415) *
                C153712 * C153847) *
               C153819) *
              C153754)) /
            (p * q * std::sqrt(p + q));
    d2ee[114] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
             C97199 + C97199 + C153969 * C580) *
                C70415 +
            (C101439 + C101440) * C153927) *
               C154178 +
           ((C97252 + C97253) * C70415 + C101388 * C153927) * C154159 +
           C125307 * C154130) *
              C153783 * C1338 -
          (C126181 * C154130 +
           (C101394 * C153927 + C101395 * C70415) * C154159 +
           ((C101442 + C101441) * C153927 + (C101440 + C101439) * C70415) *
               C154178) *
              C153783 * C1339 +
          ((C101451 * C70415 + (C101446 + C101445) * C153927) * C154178 +
           (C101389 * C70415 + C101453 * C153927) * C154159 +
           (C102071 * C70415 + (C101449 + C101450) * C153927) * C154130) *
              C153783 * C1340 -
          (((C97195 * C5557 + C101413 + C101413 + C153969 * C5563 +
             C97193 * C3085 + C101414 + C101414 + C97191 * C3093) *
                C153927 +
            (C101450 + C101449) * C70415) *
               C154130 +
           ((C101448 + C101447) * C153927 + C101452 * C70415) * C154159 +
           ((C103296 + C103295) * C153927 + C103282 * C70415) * C154178) *
              C153783 * C1341) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
              C97199 + C97199 + C153969 * C580) *
                 C70415 +
             (C101439 + C101440) * C153927) *
                C154178 +
            ((C97252 + C97253) * C70415 + C101388 * C153927) * C154159 +
            C125307 * C154130) *
               C153783 * C1251 -
           (C126181 * C154130 +
            (C101394 * C153927 + C101395 * C70415) * C154159 +
            ((C101442 + C101441) * C153927 + (C101440 + C101439) * C70415) *
                C154178) *
               C153783 * C153819) *
              C1253 +
          (((C101388 * C70415 + C101389 * C153927) * C154178 +
            (C102070 * C70415 + C102071 * C153927) * C154159 +
            (C111246 * C70415 + (C97542 + C97543) * C153927) * C154130) *
               C153783 * C153819 -
           (C125308 * C154130 +
            (C98013 * C153927 + (C97255 + C97254) * C70415) * C154159 +
            (C101395 * C153927 + (C97253 + C97252) * C70415) * C154178) *
               C153783 * C1251) *
              C1254 +
          ((C125307 * C154178 +
            (C97263 * C70415 + C111246 * C153927) * C154159 +
            ((C97259 + C97258) * C70415 + (C98026 + C98027) * C153927) *
                C154130) *
               C153783 * C1251 -
           (((C97195 * C1916 + C97506 + C97506 + C153969 * C1926 +
              C97193 * C340 + C97507 + C97507 + C97191 * C364) *
                 C153927 +
             (C98027 + C98026) * C70415) *
                C154130 +
            ((C97543 + C97542) * C153927 + C98012 * C70415) * C154159 +
            C126181 * C154178) *
               C153783 * C153819) *
              C1255)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
             C97199 + C97199 + C153969 * C580) *
                C154188 +
            (C101439 + C101440) * C154184 + C101451 * C154174 +
            C130665 * C154116) *
               C153712 * C153783 * C1251 -
           ((C103296 + C103295) * C154116 + C103282 * C154174 +
            (C101442 + C101441) * C154184 + (C101440 + C101439) * C154188) *
               C153712 * C153783 * C153819) *
              C1253 +
          ((C101388 * C154188 + C101389 * C154184 + C101453 * C154174 +
            (C101447 + C101448) * C154116) *
               C153712 * C153783 * C153819 -
           (C101452 * C154116 + C101394 * C154174 + C101395 * C154184 +
            (C97253 + C97252) * C154188) *
               C153712 * C153783 * C1251) *
              C1254 +
          ((C97262 * C154188 + C102070 * C154184 + C102071 * C154174 +
            (C101449 + C101450) * C154116) *
               C153712 * C153783 * C1251 -
           ((C97195 * C5557 + C101413 + C101413 + C153969 * C5563 +
             C97193 * C3085 + C101414 + C101414 + C97191 * C3093) *
                C154116 +
            (C101450 + C101449) * C154174 + C101412 * C154184 +
            C98013 * C154188) *
               C153712 * C153783 * C153819) *
              C1255)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
            C97199 + C97199 + C153969 * C580) *
               C154188 +
           (C101439 + C101440) * C154184 + C101451 * C154174 +
           C130665 * C154116) *
              C153712 * C153783 * C1338 -
          (C131830 * C154116 + C103282 * C154174 +
           (C101442 + C101441) * C154184 + (C101440 + C101439) * C154188) *
              C153712 * C153783 * C1339 +
          (C101451 * C154188 + C130665 * C154184 +
           (C103295 + C103296) * C154174 + (C131841 + C131842) * C154116) *
              C153712 * C153783 * C1340 -
          ((C97195 * C29545 + C131835 + C131835 + C153969 * C29547 +
            C97193 * C28218 + C131836 + C131836 + C97191 * C28222) *
               C154116 +
           (C131842 + C131841) * C154174 + C131830 * C154184 +
           C103282 * C154188) *
              C153712 * C153783 * C1341) *
         C153748) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C106473 * C136 + C106482 + C106482 + C154189 * C152 +
             C106475 * C556 + C106483 + C106483 + C154186 * C580 +
             C106477 * C557 + C106484 + C106484 + C154177 * C581 +
             C106479 * C2272 + C106485 + C106485 + C154123 * C2282) *
                C70415 +
            (C134230 + C134231 + C134232 + C134233) * C153927) *
               C153712 * C153783 * C1251 -
           ((C134234 + C134235 + C134236 + C134237) * C153927 +
            (C134233 + C134232 + C134231 + C134230) * C70415) *
               C153712 * C153783 * C153819) *
              C1253 +
          (((C106815 + C106814 + C106813 + C106812) * C70415 +
            (C106816 + C106817 + C106818 + C106819) * C153927) *
               C153712 * C153783 * C153819 -
           ((C106812 + C106813 + C106814 + C106815) * C153927 +
            (C106553 + C106552 + C106551 + C106550) * C70415) *
               C153712 * C153783 * C1251) *
              C1254 +
          (((C106557 + C106556 + C106555 + C106554) * C70415 +
            (C107292 + C107293 + C107294 + C107295) * C153927) *
               C153712 * C153783 * C1251 -
           ((C106479 * C6156 + C106792 + C106792 + C154123 * C6168 +
             C106477 * C3371 + C106793 + C106793 + C154177 * C3379 +
             C106475 * C1918 + C106794 + C106794 + C154186 * C1928 +
             C106473 * C338 + C106795 + C106795 + C154189 * C362) *
                C153927 +
            (C107295 + C107294 + C107293 + C107292) * C70415) *
               C153712 * C153783 * C153819) *
              C1255)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C106473 * C136 + C106482 + C106482 + C154189 * C152 +
            C106475 * C556 + C106483 + C106483 + C154186 * C580 +
            C106477 * C557 + C106484 + C106484 + C154177 * C581 +
            C106479 * C2272 + C106485 + C106485 + C154123 * C2282) *
               C70415 +
           (C134230 + C134231 + C134232 + C134233) * C153927) *
              C153712 * C153783 * C1338 -
          ((C134234 + C134235 + C134236 + C134237) * C153927 +
           (C134233 + C134232 + C134231 + C134230) * C70415) *
              C153712 * C153783 * C1339 +
          ((C134237 + C134236 + C134235 + C134234) * C70415 +
           (C135442 + C135443 + C135444 + C135445) * C153927) *
              C153712 * C153783 * C1340 -
          ((C106479 * C29880 + C135430 + C135430 + C154123 * C29884 +
            C106477 * C28358 + C135431 + C135431 + C154177 * C28362 +
            C106475 * C5559 + C135432 + C135432 + C154186 * C5565 +
            C106473 * C3083 + C135433 + C135433 + C154189 * C3091) *
               C153927 +
           (C135445 + C135444 + C135443 + C135442) * C70415) *
              C153712 * C153783 * C1341) *
         C153748) /
            (p * q * std::sqrt(p + q));
    d2ee[115] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
              C97199 + C97199 + C153969 * C580) *
                 C154188 +
             (C101439 + C101440) * C154184 + C101451 * C154174 +
             C130665 * C154116) *
                C153712 * C2058 -
            (C132695 * C154116 + C104577 * C154174 +
             (C102794 + C102795) * C154184 +
             (C97195 * C557 + C97756 + C97756 + C153969 * C581 + C97193 * C556 +
              C97757 + C97757 + C97191 * C580) *
                 C154188) *
                C153712 * C153847) *
               C154093 +
           (((C102795 + C102794) * C154188 + (C102793 + C102792) * C154184 +
             (C104590 + C104591) * C154174 + (C132706 + C132707) * C154116) *
                C153712 * C153847 -
            (C131830 * C154116 + C103282 * C154174 +
             (C101442 + C101441) * C154184 + (C101440 + C101439) * C154188) *
                C153712 * C2058) *
               C153819) *
              C154085 +
          ((((C97811 + C97810) * C154188 + C102770 * C154184 +
             C102771 * C154174 + (C102796 + C102797) * C154116) *
                C153712 * C153847 -
            (C101452 * C154116 + C101394 * C154174 + C101395 * C154184 +
             (C97253 + C97252) * C154188) *
                C153712 * C2058) *
               C154093 +
           ((C101388 * C154188 + C101389 * C154184 + C101453 * C154174 +
             (C101447 + C101448) * C154116) *
                C153712 * C2058 -
            ((C97195 * C28359 + C104582 + C104582 + C153969 * C28363 +
              C97193 * C5558 + C104583 + C104583 + C97191 * C5564) *
                 C154116 +
             (C102797 + C102796) * C154174 + C102758 * C154184 +
             C102759 * C154188) *
                C153712 * C153847) *
               C153819) *
              C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
               C97199 + C97199 + C153969 * C580) *
                  C70415 +
              (C101439 + C101440) * C153927) *
                 C154178 +
             ((C97252 + C97253) * C70415 + C101388 * C153927) * C154159 +
             C125307 * C154130) *
                C2058 -
            (C126474 * C154130 +
             (C102759 * C153927 + (C97810 + C97811) * C70415) * C154159 +
             ((C102794 + C102795) * C153927 +
              (C97195 * C557 + C97756 + C97756 + C153969 * C581 +
               C97193 * C556 + C97757 + C97757 + C97191 * C580) *
                  C70415) *
                 C154178) *
                C153847) *
               C154093 +
           ((((C102795 + C102794) * C70415 + (C102793 + C102792) * C153927) *
                 C154178 +
             (C102770 * C70415 + C102771 * C153927) * C154159 +
             (C111928 * C70415 + (C102370 + C102371) * C153927) * C154130) *
                C153847 -
            (C126181 * C154130 +
             (C101394 * C153927 + C101395 * C70415) * C154159 +
             ((C101442 + C101441) * C153927 + (C101440 + C101439) * C70415) *
                 C154178) *
                C2058) *
               C153819) *
              C154085 +
          (((((C97811 + C97810) * C70415 + C102770 * C153927) * C154178 +
             ((C97809 + C97808) * C70415 + C111928 * C153927) * C154159 +
             ((C97807 + C97806) * C70415 + (C98534 + C98535) * C153927) *
                 C154130) *
                C153847 -
            (C125308 * C154130 +
             (C98013 * C153927 + (C97255 + C97254) * C70415) * C154159 +
             (C101395 * C153927 + (C97253 + C97252) * C70415) * C154178) *
                C2058) *
               C154093 +
           (((C101388 * C70415 + C101389 * C153927) * C154178 +
             (C102070 * C70415 + C102071 * C153927) * C154159 +
             (C111246 * C70415 + (C97542 + C97543) * C153927) * C154130) *
                C2058 -
            (((C97195 * C3372 + C99716 + C99716 + C153969 * C3380 +
               C97193 * C1917 + C99717 + C99717 + C97191 * C1927) *
                  C153927 +
              (C98535 + C98534) * C70415) *
                 C154130 +
             ((C102371 + C102370) * C153927 + C111538 * C70415) * C154159 +
             (C102758 * C153927 + C102759 * C70415) * C154178) *
                C153847) *
               C153819) *
              C153754)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C106473 * C136 + C106482 + C106482 + C154189 * C152 +
              C106475 * C556 + C106483 + C106483 + C154186 * C580 +
              C106477 * C557 + C106484 + C106484 + C154177 * C581 +
              C106479 * C2272 + C106485 + C106485 + C154123 * C2282) *
                 C70415 +
             (C134230 + C134231 + C134232 + C134233) * C153927) *
                C153712 * C2058 -
            ((C135094 + C135095 + C135096 + C135097) * C153927 +
             (C106479 * C7665 + C107026 + C107026 + C154123 * C7673 +
              C106477 * C2272 + C107027 + C107027 + C154177 * C2282 +
              C106475 * C557 + C107028 + C107028 + C154186 * C581 +
              C106473 * C556 + C107029 + C107029 + C154189 * C580) *
                 C70415) *
                C153712 * C153847) *
               C154093 +
           (((C135097 + C135096 + C135095 + C135094) * C70415 +
             (C136330 + C136331 + C136332 + C136333) * C153927) *
                C153712 * C153847 -
            ((C134234 + C134235 + C134236 + C134237) * C153927 +
             (C134233 + C134232 + C134231 + C134230) * C70415) *
                C153712 * C2058) *
               C153819) *
              C154085 +
          ((((C107073 + C107072 + C107071 + C107070) * C70415 +
             (C107800 + C107801 + C107802 + C107803) * C153927) *
                C153712 * C153847 -
            ((C106812 + C106813 + C106814 + C106815) * C153927 +
             (C106553 + C106552 + C106551 + C106550) * C70415) *
                C153712 * C2058) *
               C154093 +
           (((C106815 + C106814 + C106813 + C106812) * C70415 +
             (C106816 + C106817 + C106818 + C106819) * C153927) *
                C153712 * C2058 -
            ((C106479 * C30947 + C108984 + C108984 + C154123 * C30951 +
              C106477 * C6158 + C108985 + C108985 + C154177 * C6170 +
              C106475 * C3370 + C108986 + C108986 + C154186 * C3378 +
              C106473 * C1919 + C108987 + C108987 + C154189 * C1929) *
                 C153927 +
             (C107803 + C107802 + C107801 + C107800) * C70415) *
                C153712 * C153847) *
               C153819) *
              C153754)) /
            (p * q * std::sqrt(p + q));
    d2ee[116] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
             C97199 + C97199 + C153969 * C580) *
                C154188 +
            (C101439 + C101440) * C154184 + C101451 * C154174 +
            C130665 * C154116) *
               C153712 * C154166 -
           (C132695 * C154116 + C104577 * C154174 +
            (C102794 + C102795) * C154184 +
            (C97195 * C557 + C97756 + C97756 + C153969 * C581 + C97193 * C556 +
             C97757 + C97757 + C97191 * C580) *
                C154188) *
               C153712 * C154167 +
           ((C97193 * C557 + C97758 + C97758 + C97191 * C581 + C97195 * C2272 +
             C97759 + C97759 + C153969 * C2282) *
                C154188 +
            (C103607 + C103608) * C154184 + (C103609 + C103610) * C154174 +
            (C132047 + C132048) * C154116) *
               C153712 * C2574) *
              C154093 +
          (((C102795 + C102794) * C154188 + (C102793 + C102792) * C154184 +
            (C104590 + C104591) * C154174 + (C132706 + C132707) * C154116) *
               C153712 * C154167 -
           (C131830 * C154116 + C103282 * C154174 +
            (C101442 + C101441) * C154184 + (C101440 + C101439) * C154188) *
               C153712 * C154166 -
           ((C97195 * C29880 + C132041 + C132041 + C153969 * C29884 +
             C97193 * C28358 + C132042 + C132042 + C97191 * C28362) *
                C154116 +
            (C132048 + C132047) * C154174 + (C103610 + C103609) * C154184 +
            (C103608 + C103607) * C154188) *
               C153712 * C2574) *
              C153819) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
              C97199 + C97199 + C153969 * C580) *
                 C70415 +
             (C101439 + C101440) * C153927) *
                C154178 +
            ((C97252 + C97253) * C70415 + C101388 * C153927) * C154159 +
            C125307 * C154130) *
               C154166 -
           (C126474 * C154130 +
            (C102759 * C153927 + (C97810 + C97811) * C70415) * C154159 +
            ((C102794 + C102795) * C153927 +
             (C97195 * C557 + C97756 + C97756 + C153969 * C581 + C97193 * C556 +
              C97757 + C97757 + C97191 * C580) *
                 C70415) *
                C154178) *
               C154167 +
           (((C97193 * C557 + C97758 + C97758 + C97191 * C581 + C97195 * C2272 +
              C97759 + C97759 + C153969 * C2282) *
                 C70415 +
             (C103607 + C103608) * C153927) *
                C154178 +
            ((C97812 + C97813) * C70415 + (C101776 + C101777) * C153927) *
                C154159 +
            ((C97814 + C97815) * C70415 + (C110952 + C110953) * C153927) *
                C154130) *
               C2574) *
              C154093 +
          ((((C102795 + C102794) * C70415 + (C102793 + C102792) * C153927) *
                C154178 +
            (C102770 * C70415 + C102771 * C153927) * C154159 +
            (C111928 * C70415 + (C102370 + C102371) * C153927) * C154130) *
               C154167 -
           (C126181 * C154130 +
            (C101394 * C153927 + C101395 * C70415) * C154159 +
            ((C101442 + C101441) * C153927 + (C101440 + C101439) * C70415) *
                C154178) *
               C154166 -
           (((C97195 * C6156 + C101760 + C101760 + C153969 * C6168 +
              C97193 * C3371 + C101761 + C101761 + C97191 * C3379) *
                 C153927 +
             (C110953 + C110952) * C70415) *
                C154130 +
            ((C101779 + C101778) * C153927 + (C101777 + C101776) * C70415) *
                C154159 +
            ((C103610 + C103609) * C153927 + (C103608 + C103607) * C70415) *
                C154178) *
               C2574) *
              C153819) *
         C153748) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C106473 * C136 + C106482 + C106482 + C154189 * C152 +
             C106475 * C556 + C106483 + C106483 + C154186 * C580 +
             C106477 * C557 + C106484 + C106484 + C154177 * C581 +
             C106479 * C2272 + C106485 + C106485 + C154123 * C2282) *
                C70415 +
            (C134230 + C134231 + C134232 + C134233) * C153927) *
               C153712 * C154166 -
           ((C135094 + C135095 + C135096 + C135097) * C153927 +
            (C106479 * C7665 + C107026 + C107026 + C154123 * C7673 +
             C106477 * C2272 + C107027 + C107027 + C154177 * C2282 +
             C106475 * C557 + C107028 + C107028 + C154186 * C581 +
             C106473 * C556 + C107029 + C107029 + C154189 * C580) *
                C70415) *
               C153712 * C154167 +
           ((C106473 * C557 + C107030 + C107030 + C154189 * C581 +
             C106475 * C2272 + C107031 + C107031 + C154186 * C2282 +
             C106477 * C7665 + C107032 + C107032 + C154177 * C7673 +
             C106479 * C10502 + C107033 + C107033 + C154123 * C10508) *
                C70415 +
            (C135660 + C135661 + C135662 + C135663) * C153927) *
               C153712 * C2574) *
              C154093 +
          (((C135097 + C135096 + C135095 + C135094) * C70415 +
            (C136330 + C136331 + C136332 + C136333) * C153927) *
               C153712 * C154167 -
           ((C134234 + C134235 + C134236 + C134237) * C153927 +
            (C134233 + C134232 + C134231 + C134230) * C70415) *
               C153712 * C154166 -
           ((C106479 * C33704 + C135648 + C135648 + C154123 * C33708 +
             C106477 * C30946 + C135649 + C135649 + C154177 * C30950 +
             C106475 * C6160 + C135650 + C135650 + C154186 * C6172 +
             C106473 * C3369 + C135651 + C135651 + C154189 * C3377) *
                C153927 +
            (C135663 + C135662 + C135661 + C135660) * C70415) *
               C153712 * C2574) *
              C153819) *
         C153748) /
            (p * q * std::sqrt(p + q));
    d2ee[117] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C97193 * C136 + C97198 + C97198 + C97191 * C152 +
                  C97195 * C556 + C97199 + C97199 + C153969 * C580) *
                     C70415 +
                 (C101439 + C101440) * C153927) *
                    C154178 +
                ((C97252 + C97253) * C70415 + C101388 * C153927) * C154159 +
                C125307 * C154130) *
                   C2058 -
               (C126474 * C154130 +
                (C102759 * C153927 + (C97810 + C97811) * C70415) * C154159 +
                ((C102794 + C102795) * C153927 +
                 (C97195 * C557 + C97756 + C97756 + C153969 * C581 +
                  C97193 * C556 + C97757 + C97757 + C97191 * C580) *
                     C70415) *
                    C154178) *
                   C153847) *
                  C153767 * C1253 +
              ((((C97811 + C97810) * C70415 + C102770 * C153927) * C154178 +
                ((C97809 + C97808) * C70415 + C111928 * C153927) * C154159 +
                ((C97807 + C97806) * C70415 + (C98534 + C98535) * C153927) *
                    C154130) *
                   C153847 -
               (C125308 * C154130 +
                (C98013 * C153927 + (C97255 + C97254) * C70415) * C154159 +
                (C101395 * C153927 + (C97253 + C97252) * C70415) * C154178) *
                   C2058) *
                  C153767 * C1254 +
              ((C125307 * C154178 +
                (C97263 * C70415 + C111246 * C153927) * C154159 +
                ((C97259 + C97258) * C70415 + (C98026 + C98027) * C153927) *
                    C154130) *
                   C2058 -
               (((C97195 * C1485 + C98516 + C98516 + C153969 * C1495 +
                  C97193 * C1085 + C98517 + C98517 + C97191 * C1097) *
                     C153927 +
                 (C98237 + C98236) * C70415) *
                    C154130 +
                ((C98535 + C98534) * C153927 + C98222 * C70415) * C154159 +
                C126474 * C154178) *
                   C153847) *
                  C153767 * C1255) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C97193 * C136 + C97198 + C97198 + C97191 * C152 +
                  C97195 * C556 + C97199 + C97199 + C153969 * C580) *
                     C70415 +
                 (C101439 + C101440) * C153927) *
                    C154178 +
                ((C97252 + C97253) * C70415 + C101388 * C153927) * C154159 +
                C125307 * C154130) *
                   C2058 -
               (C126474 * C154130 +
                (C102759 * C153927 + (C97810 + C97811) * C70415) * C154159 +
                ((C102794 + C102795) * C153927 +
                 (C97195 * C557 + C97756 + C97756 + C153969 * C581 +
                  C97193 * C556 + C97757 + C97757 + C97191 * C580) *
                     C70415) *
                    C154178) *
                   C153847) *
                  C326 +
              ((((C102795 + C102794) * C70415 + (C102793 + C102792) * C153927) *
                    C154178 +
                (C102770 * C70415 + C102771 * C153927) * C154159 +
                (C111928 * C70415 + (C102370 + C102371) * C153927) * C154130) *
                   C153847 -
               (C126181 * C154130 +
                (C101394 * C153927 + C101395 * C70415) * C154159 +
                ((C101442 + C101441) * C153927 + (C101440 + C101439) * C70415) *
                    C154178) *
                   C2058) *
                  C327 +
              (((C101451 * C70415 + (C101446 + C101445) * C153927) * C154178 +
                (C101389 * C70415 + C101453 * C153927) * C154159 +
                (C102071 * C70415 + (C101449 + C101450) * C153927) * C154130) *
                   C2058 -
               (((C97195 * C4809 + C102778 + C102778 + C153969 * C4815 +
                  C97193 * C4170 + C102779 + C102779 + C97191 * C4178) *
                     C153927 +
                 (C102371 + C102370) * C70415) *
                    C154130 +
                ((C102797 + C102796) * C153927 + C102758 * C70415) * C154159 +
                ((C104591 + C104590) * C153927 + C104577 * C70415) * C154178) *
                   C153847) *
                  C328) *
             C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
             C97199 + C97199 + C153969 * C580) *
                C70415 +
            (C101439 + C101440) * C153927) *
               C154178 +
           ((C97252 + C97253) * C70415 + C101388 * C153927) * C154159 +
           C125307 * C154130) *
              C2264 -
          (C126474 * C154130 +
           (C102759 * C153927 + (C97810 + C97811) * C70415) * C154159 +
           ((C102794 + C102795) * C153927 +
            (C97195 * C557 + C97756 + C97756 + C153969 * C581 + C97193 * C556 +
             C97757 + C97757 + C97191 * C580) *
                C70415) *
               C154178) *
              C2265 +
          (((C97193 * C557 + C97758 + C97758 + C97191 * C581 + C97195 * C2272 +
             C97759 + C97759 + C153969 * C2282) *
                C70415 +
            (C103607 + C103608) * C153927) *
               C154178 +
           ((C97812 + C97813) * C70415 + (C101776 + C101777) * C153927) *
               C154159 +
           ((C97814 + C97815) * C70415 + (C110952 + C110953) * C153927) *
               C154130) *
              C2266 -
          (((C97195 * C9165 + C114443 + C114443 + C153969 * C9171 +
             C97193 * C6157 + C114444 + C114444 + C97191 * C6169) *
                C153927 +
            (C97195 * C7667 + C100244 + C100244 + C153969 * C7675 +
             C97193 * C2270 + C100245 + C100245 + C97191 * C2280) *
                C70415) *
               C154130 +
           ((C97195 * C9166 + C105368 + C105368 + C153969 * C9172 +
             C97193 * C6159 + C105369 + C105369 + C97191 * C6171) *
                C153927 +
            (C97195 * C7666 + C100246 + C100246 + C153969 * C7674 +
             C97193 * C2271 + C100247 + C100247 + C97191 * C2281) *
                C70415) *
               C154159 +
           ((C97195 * C9167 + C105372 + C105372 + C153969 * C9173 +
             C97193 * C6161 + C105373 + C105373 + C97191 * C6173) *
                C153927 +
            (C97195 * C7665 + C100248 + C100248 + C153969 * C7673 +
             C97193 * C2272 + C100249 + C100249 + C97191 * C2282) *
                C70415) *
               C154178) *
              C2267) *
         C153767 * C153748) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
             C97199 + C97199 + C153969 * C580) *
                C154188 +
            (C101439 + C101440) * C154184 + C101451 * C154174 +
            C130665 * C154116) *
               C153712 * C2058 -
           (C132695 * C154116 + C104577 * C154174 +
            (C102794 + C102795) * C154184 +
            (C97195 * C557 + C97756 + C97756 + C153969 * C581 + C97193 * C556 +
             C97757 + C97757 + C97191 * C580) *
                C154188) *
               C153712 * C153847) *
              C153767 * C1253 +
          (((C97811 + C97810) * C154188 + C102770 * C154184 +
            C102771 * C154174 + (C102796 + C102797) * C154116) *
               C153712 * C153847 -
           (C101452 * C154116 + C101394 * C154174 + C101395 * C154184 +
            (C97253 + C97252) * C154188) *
               C153712 * C2058) *
              C153767 * C1254 +
          ((C97262 * C154188 + C102070 * C154184 + C102071 * C154174 +
            (C101449 + C101450) * C154116) *
               C153712 * C2058 -
           ((C97195 * C4809 + C102778 + C102778 + C153969 * C4815 +
             C97193 * C4170 + C102779 + C102779 + C97191 * C4178) *
                C154116 +
            (C102371 + C102370) * C154174 + C111538 * C154184 +
            C98223 * C154188) *
               C153712 * C153847) *
              C153767 * C1255)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
             C97199 + C97199 + C153969 * C580) *
                C154188 +
            (C101439 + C101440) * C154184 + C101451 * C154174 +
            C130665 * C154116) *
               C153712 * C2058 -
           (C132695 * C154116 + C104577 * C154174 +
            (C102794 + C102795) * C154184 +
            (C97195 * C557 + C97756 + C97756 + C153969 * C581 + C97193 * C556 +
             C97757 + C97757 + C97191 * C580) *
                C154188) *
               C153712 * C153847) *
              C326 +
          (((C102795 + C102794) * C154188 + (C102793 + C102792) * C154184 +
            (C104590 + C104591) * C154174 + (C132706 + C132707) * C154116) *
               C153712 * C153847 -
           (C131830 * C154116 + C103282 * C154174 +
            (C101442 + C101441) * C154184 + (C101440 + C101439) * C154188) *
               C153712 * C2058) *
              C327 +
          ((C101451 * C154188 + C130665 * C154184 +
            (C103295 + C103296) * C154174 + (C131841 + C131842) * C154116) *
               C153712 * C2058 -
           ((C97195 * C29125 + C132700 + C132700 + C153969 * C29127 +
             C97193 * C28772 + C132701 + C132701 + C97191 * C28776) *
                C154116 +
            (C132707 + C132706) * C154174 + C132695 * C154184 +
            C104577 * C154188) *
               C153712 * C153847) *
              C328) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
            C97199 + C97199 + C153969 * C580) *
               C154188 +
           (C101439 + C101440) * C154184 + C101451 * C154174 +
           C130665 * C154116) *
              C153712 * C2264 -
          (C132695 * C154116 + C104577 * C154174 +
           (C102794 + C102795) * C154184 +
           (C97195 * C557 + C97756 + C97756 + C153969 * C581 + C97193 * C556 +
            C97757 + C97757 + C97191 * C580) *
               C154188) *
              C153712 * C2265 +
          ((C97193 * C557 + C97758 + C97758 + C97191 * C581 + C97195 * C2272 +
            C97759 + C97759 + C153969 * C2282) *
               C154188 +
           (C103607 + C103608) * C154184 + (C103609 + C103610) * C154174 +
           (C132047 + C132048) * C154116) *
              C153712 * C2266 -
          ((C97195 * C32340 + C133226 + C133226 + C153969 * C32342 +
            C97193 * C29881 + C133227 + C133227 + C97191 * C29885) *
               C154116 +
           (C97195 * C30946 + C105370 + C105370 + C153969 * C30950 +
            C97193 * C6160 + C105371 + C105371 + C97191 * C6172) *
               C154174 +
           (C97195 * C9167 + C105372 + C105372 + C153969 * C9173 +
            C97193 * C6161 + C105373 + C105373 + C97191 * C6173) *
               C154184 +
           (C97195 * C7665 + C100248 + C100248 + C153969 * C7673 +
            C97193 * C2272 + C100249 + C100249 + C97191 * C2282) *
               C154188) *
              C153712 * C2267) *
         C153767 * C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C106473 * C136 + C106482 + C106482 + C154189 * C152 +
             C106475 * C556 + C106483 + C106483 + C154186 * C580 +
             C106477 * C557 + C106484 + C106484 + C154177 * C581 +
             C106479 * C2272 + C106485 + C106485 + C154123 * C2282) *
                C70415 +
            (C134230 + C134231 + C134232 + C134233) * C153927) *
               C153712 * C2058 -
           ((C135094 + C135095 + C135096 + C135097) * C153927 +
            (C106479 * C7665 + C107026 + C107026 + C154123 * C7673 +
             C106477 * C2272 + C107027 + C107027 + C154177 * C2282 +
             C106475 * C557 + C107028 + C107028 + C154186 * C581 +
             C106473 * C556 + C107029 + C107029 + C154189 * C580) *
                C70415) *
               C153712 * C153847) *
              C153767 * C1253 +
          (((C107073 + C107072 + C107071 + C107070) * C70415 +
            (C107800 + C107801 + C107802 + C107803) * C153927) *
               C153712 * C153847 -
           ((C106812 + C106813 + C106814 + C106815) * C153927 +
            (C106553 + C106552 + C106551 + C106550) * C70415) *
               C153712 * C2058) *
              C153767 * C1254 +
          (((C106557 + C106556 + C106555 + C106554) * C70415 +
            (C107292 + C107293 + C107294 + C107295) * C153927) *
               C153712 * C2058 -
           ((C106479 * C9165 + C107788 + C107788 + C154123 * C9171 +
             C106477 * C6157 + C107789 + C107789 + C154177 * C6169 +
             C106475 * C1487 + C107790 + C107790 + C154186 * C1497 +
             C106473 * C1083 + C107791 + C107791 + C154189 * C1095) *
                C153927 +
            (C107513 + C107512 + C107511 + C107510) * C70415) *
               C153712 * C153847) *
              C153767 * C1255)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C106473 * C136 + C106482 + C106482 + C154189 * C152 +
             C106475 * C556 + C106483 + C106483 + C154186 * C580 +
             C106477 * C557 + C106484 + C106484 + C154177 * C581 +
             C106479 * C2272 + C106485 + C106485 + C154123 * C2282) *
                C70415 +
            (C134230 + C134231 + C134232 + C134233) * C153927) *
               C153712 * C2058 -
           ((C135094 + C135095 + C135096 + C135097) * C153927 +
            (C106479 * C7665 + C107026 + C107026 + C154123 * C7673 +
             C106477 * C2272 + C107027 + C107027 + C154177 * C2282 +
             C106475 * C557 + C107028 + C107028 + C154186 * C581 +
             C106473 * C556 + C107029 + C107029 + C154189 * C580) *
                C70415) *
               C153712 * C153847) *
              C326 +
          (((C135097 + C135096 + C135095 + C135094) * C70415 +
            (C136330 + C136331 + C136332 + C136333) * C153927) *
               C153712 * C153847 -
           ((C134234 + C134235 + C134236 + C134237) * C153927 +
            (C134233 + C134232 + C134231 + C134230) * C70415) *
               C153712 * C2058) *
              C327 +
          (((C134237 + C134236 + C134235 + C134234) * C70415 +
            (C135442 + C135443 + C135444 + C135445) * C153927) *
               C153712 * C2058 -
           ((C106479 * C32340 + C136318 + C136318 + C154123 * C32342 +
             C106477 * C29881 + C136319 + C136319 + C154177 * C29885 +
             C106475 * C4811 + C136320 + C136320 + C154186 * C4817 +
             C106473 * C4168 + C136321 + C136321 + C154189 * C4176) *
                C153927 +
            (C136333 + C136332 + C136331 + C136330) * C70415) *
               C153712 * C153847) *
              C328) *
         C153748) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C106473 * C136 + C106482 + C106482 + C154189 * C152 +
            C106475 * C556 + C106483 + C106483 + C154186 * C580 +
            C106477 * C557 + C106484 + C106484 + C154177 * C581 +
            C106479 * C2272 + C106485 + C106485 + C154123 * C2282) *
               C70415 +
           (C134230 + C134231 + C134232 + C134233) * C153927) *
              C153712 * C2264 -
          ((C135094 + C135095 + C135096 + C135097) * C153927 +
           (C106479 * C7665 + C107026 + C107026 + C154123 * C7673 +
            C106477 * C2272 + C107027 + C107027 + C154177 * C2282 +
            C106475 * C557 + C107028 + C107028 + C154186 * C581 +
            C106473 * C556 + C107029 + C107029 + C154189 * C580) *
               C70415) *
              C153712 * C2265 +
          ((C106473 * C557 + C107030 + C107030 + C154189 * C581 +
            C106475 * C2272 + C107031 + C107031 + C154186 * C2282 +
            C106477 * C7665 + C107032 + C107032 + C154177 * C7673 +
            C106479 * C10502 + C107033 + C107033 + C154123 * C10508) *
               C70415 +
           (C135660 + C135661 + C135662 + C135663) * C153927) *
              C153712 * C2266 -
          ((C106479 * C56424 + C136852 + C136852 + C154123 * C56426 +
            C106477 * C33705 + C136853 + C136853 + C154177 * C33709 +
            C106475 * C9167 + C136854 + C136854 + C154186 * C9173 +
            C106473 * C6161 + C136855 + C136855 + C154189 * C6173) *
               C153927 +
           (C106479 * C55638 + C109514 + C109514 + C154123 * C55642 +
            C106477 * C10502 + C109515 + C109515 + C154177 * C10508 +
            C106475 * C7665 + C109516 + C109516 + C154186 * C7673 +
            C106473 * C2272 + C109517 + C109517 + C154189 * C2282) *
               C70415) *
              C153712 * C2267) *
         C153767 * C153748) /
            (p * q * std::sqrt(p + q));
    d2ee[118] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
             C97199 + C97199 + C153969 * C580) *
                C154188 +
            (C101439 + C101440) * C154184 + C101451 * C154174 +
            C130665 * C154116) *
               C153712 * C154166 -
           (C132695 * C154116 + C104577 * C154174 +
            (C102794 + C102795) * C154184 +
            (C97195 * C557 + C97756 + C97756 + C153969 * C581 + C97193 * C556 +
             C97757 + C97757 + C97191 * C580) *
                C154188) *
               C153712 * C154167 +
           ((C97193 * C557 + C97758 + C97758 + C97191 * C581 + C97195 * C2272 +
             C97759 + C97759 + C153969 * C2282) *
                C154188 +
            (C103607 + C103608) * C154184 + (C103609 + C103610) * C154174 +
            (C132047 + C132048) * C154116) *
               C153712 * C2574) *
              C153767 * C154085 +
          (((C97811 + C97810) * C154188 + C102770 * C154184 +
            C102771 * C154174 + (C102796 + C102797) * C154116) *
               C153712 * C154167 -
           (C101452 * C154116 + C101394 * C154174 + C101395 * C154184 +
            (C97253 + C97252) * C154188) *
               C153712 * C154166 -
           ((C97195 * C31684 + C103595 + C103595 + C153969 * C31686 +
             C97193 * C4810 + C103596 + C103596 + C97191 * C4816) *
                C154116 +
            (C101779 + C101778) * C154174 + (C101777 + C101776) * C154184 +
            (C97813 + C97812) * C154188) *
               C153712 * C2574) *
              C153767 * C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
              C97199 + C97199 + C153969 * C580) *
                 C70415 +
             (C101439 + C101440) * C153927) *
                C154178 +
            ((C97252 + C97253) * C70415 + C101388 * C153927) * C154159 +
            C125307 * C154130) *
               C154166 -
           (C126474 * C154130 +
            (C102759 * C153927 + (C97810 + C97811) * C70415) * C154159 +
            ((C102794 + C102795) * C153927 +
             (C97195 * C557 + C97756 + C97756 + C153969 * C581 + C97193 * C556 +
              C97757 + C97757 + C97191 * C580) *
                 C70415) *
                C154178) *
               C154167 +
           (((C97193 * C557 + C97758 + C97758 + C97191 * C581 + C97195 * C2272 +
              C97759 + C97759 + C153969 * C2282) *
                 C70415 +
             (C103607 + C103608) * C153927) *
                C154178 +
            ((C97812 + C97813) * C70415 + (C101776 + C101777) * C153927) *
                C154159 +
            ((C97814 + C97815) * C70415 + (C110952 + C110953) * C153927) *
                C154130) *
               C2574) *
              C153767 * C154085 +
          ((((C97811 + C97810) * C70415 + C102770 * C153927) * C154178 +
            ((C97809 + C97808) * C70415 + C111928 * C153927) * C154159 +
            ((C97807 + C97806) * C70415 + (C98534 + C98535) * C153927) *
                C154130) *
               C154167 -
           (C125308 * C154130 +
            (C98013 * C153927 + (C97255 + C97254) * C70415) * C154159 +
            (C101395 * C153927 + (C97253 + C97252) * C70415) * C154178) *
               C154166 -
           (((C97195 * C8529 + C99062 + C99062 + C153969 * C8531 +
              C97193 * C1486 + C99063 + C99063 + C97191 * C1496) *
                 C153927 +
             (C97817 + C97816) * C70415) *
                C154130 +
            ((C110953 + C110952) * C153927 + (C97815 + C97814) * C70415) *
                C154159 +
            ((C101777 + C101776) * C153927 + (C97813 + C97812) * C70415) *
                C154178) *
               C2574) *
              C153767 * C153754)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C106473 * C136 + C106482 + C106482 + C154189 * C152 +
             C106475 * C556 + C106483 + C106483 + C154186 * C580 +
             C106477 * C557 + C106484 + C106484 + C154177 * C581 +
             C106479 * C2272 + C106485 + C106485 + C154123 * C2282) *
                C70415 +
            (C134230 + C134231 + C134232 + C134233) * C153927) *
               C153712 * C154166 -
           ((C135094 + C135095 + C135096 + C135097) * C153927 +
            (C106479 * C7665 + C107026 + C107026 + C154123 * C7673 +
             C106477 * C2272 + C107027 + C107027 + C154177 * C2282 +
             C106475 * C557 + C107028 + C107028 + C154186 * C581 +
             C106473 * C556 + C107029 + C107029 + C154189 * C580) *
                C70415) *
               C153712 * C154167 +
           ((C106473 * C557 + C107030 + C107030 + C154189 * C581 +
             C106475 * C2272 + C107031 + C107031 + C154186 * C2282 +
             C106477 * C7665 + C107032 + C107032 + C154177 * C7673 +
             C106479 * C10502 + C107033 + C107033 + C154123 * C10508) *
                C70415 +
            (C135660 + C135661 + C135662 + C135663) * C153927) *
               C153712 * C2574) *
              C153767 * C154085 +
          (((C107073 + C107072 + C107071 + C107070) * C70415 +
            (C107800 + C107801 + C107802 + C107803) * C153927) *
               C153712 * C154167 -
           ((C106812 + C106813 + C106814 + C106815) * C153927 +
            (C106553 + C106552 + C106551 + C106550) * C70415) *
               C153712 * C154166 -
           ((C106479 * C56080 + C108330 + C108330 + C154123 * C56082 +
             C106477 * C9166 + C108331 + C108331 + C154177 * C9172 +
             C106475 * C6159 + C108332 + C108332 + C154186 * C6171 +
             C106473 * C1488 + C108333 + C108333 + C154189 * C1498) *
                C153927 +
            (C107077 + C107076 + C107075 + C107074) * C70415) *
               C153712 * C2574) *
              C153767 * C153754)) /
            (p * q * std::sqrt(p + q));
    d2ee[119] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
              C97199 + C97199 + C153969 * C580) *
                 C70415 +
             (C101439 + C101440) * C153927) *
                C154178 +
            ((C97252 + C97253) * C70415 + C101388 * C153927) * C154159 +
            C125307 * C154130) *
               C2058 -
           (C126474 * C154130 +
            (C102759 * C153927 + (C97810 + C97811) * C70415) * C154159 +
            ((C102794 + C102795) * C153927 +
             (C97195 * C557 + C97756 + C97756 + C153969 * C581 + C97193 * C556 +
              C97757 + C97757 + C97191 * C580) *
                 C70415) *
                C154178) *
               C153847) *
              C326 +
          ((((C102795 + C102794) * C70415 + (C102793 + C102792) * C153927) *
                C154178 +
            (C102770 * C70415 + C102771 * C153927) * C154159 +
            (C111928 * C70415 + (C102370 + C102371) * C153927) * C154130) *
               C153847 -
           (C126181 * C154130 +
            (C101394 * C153927 + C101395 * C70415) * C154159 +
            ((C101442 + C101441) * C153927 + (C101440 + C101439) * C70415) *
                C154178) *
               C2058) *
              C327 +
          (((C101451 * C70415 + (C101446 + C101445) * C153927) * C154178 +
            (C101389 * C70415 + C101453 * C153927) * C154159 +
            (C102071 * C70415 + (C101449 + C101450) * C153927) * C154130) *
               C2058 -
           (((C97195 * C4809 + C102778 + C102778 + C153969 * C4815 +
              C97193 * C4170 + C102779 + C102779 + C97191 * C4178) *
                 C153927 +
             (C102371 + C102370) * C70415) *
                C154130 +
            ((C102797 + C102796) * C153927 + C102758 * C70415) * C154159 +
            ((C104591 + C104590) * C153927 + C104577 * C70415) * C154178) *
               C153847) *
              C328) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
              C97199 + C97199 + C153969 * C580) *
                 C70415 +
             (C101439 + C101440) * C153927) *
                C154178 +
            ((C97252 + C97253) * C70415 + C101388 * C153927) * C154159 +
            C125307 * C154130) *
               C2058 -
           (C126474 * C154130 +
            (C102759 * C153927 + (C97810 + C97811) * C70415) * C154159 +
            ((C102794 + C102795) * C153927 +
             (C97195 * C557 + C97756 + C97756 + C153969 * C581 + C97193 * C556 +
              C97757 + C97757 + C97191 * C580) *
                 C70415) *
                C154178) *
               C153847) *
              C153767 * C1253 +
          ((((C97811 + C97810) * C70415 + C102770 * C153927) * C154178 +
            ((C97809 + C97808) * C70415 + C111928 * C153927) * C154159 +
            ((C97807 + C97806) * C70415 + (C98534 + C98535) * C153927) *
                C154130) *
               C153847 -
           (C125308 * C154130 +
            (C98013 * C153927 + (C97255 + C97254) * C70415) * C154159 +
            (C101395 * C153927 + (C97253 + C97252) * C70415) * C154178) *
               C2058) *
              C153767 * C1254 +
          ((C125307 * C154178 +
            (C97263 * C70415 + C111246 * C153927) * C154159 +
            ((C97259 + C97258) * C70415 + (C98026 + C98027) * C153927) *
                C154130) *
               C2058 -
           (((C97195 * C1485 + C98516 + C98516 + C153969 * C1495 +
              C97193 * C1085 + C98517 + C98517 + C97191 * C1097) *
                 C153927 +
             (C98237 + C98236) * C70415) *
                C154130 +
            ((C98535 + C98534) * C153927 + C98222 * C70415) * C154159 +
            C126474 * C154178) *
               C153847) *
              C153767 * C1255)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
             C97199 + C97199 + C153969 * C580) *
                C154188 +
            (C101439 + C101440) * C154184 + C101451 * C154174 +
            C130665 * C154116) *
               C153712 * C2058 -
           (C132695 * C154116 + C104577 * C154174 +
            (C102794 + C102795) * C154184 +
            (C97195 * C557 + C97756 + C97756 + C153969 * C581 + C97193 * C556 +
             C97757 + C97757 + C97191 * C580) *
                C154188) *
               C153712 * C153847) *
              C153767 * C1253 +
          (((C97811 + C97810) * C154188 + C102770 * C154184 +
            C102771 * C154174 + (C102796 + C102797) * C154116) *
               C153712 * C153847 -
           (C101452 * C154116 + C101394 * C154174 + C101395 * C154184 +
            (C97253 + C97252) * C154188) *
               C153712 * C2058) *
              C153767 * C1254 +
          ((C97262 * C154188 + C102070 * C154184 + C102071 * C154174 +
            (C101449 + C101450) * C154116) *
               C153712 * C2058 -
           ((C97195 * C4809 + C102778 + C102778 + C153969 * C4815 +
             C97193 * C4170 + C102779 + C102779 + C97191 * C4178) *
                C154116 +
            (C102371 + C102370) * C154174 + C111538 * C154184 +
            C98223 * C154188) *
               C153712 * C153847) *
              C153767 * C1255)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
             C97199 + C97199 + C153969 * C580) *
                C154188 +
            (C101439 + C101440) * C154184 + C101451 * C154174 +
            C130665 * C154116) *
               C153712 * C2058 -
           (C132695 * C154116 + C104577 * C154174 +
            (C102794 + C102795) * C154184 +
            (C97195 * C557 + C97756 + C97756 + C153969 * C581 + C97193 * C556 +
             C97757 + C97757 + C97191 * C580) *
                C154188) *
               C153712 * C153847) *
              C326 +
          (((C102795 + C102794) * C154188 + (C102793 + C102792) * C154184 +
            (C104590 + C104591) * C154174 + (C132706 + C132707) * C154116) *
               C153712 * C153847 -
           (C131830 * C154116 + C103282 * C154174 +
            (C101442 + C101441) * C154184 + (C101440 + C101439) * C154188) *
               C153712 * C2058) *
              C327 +
          ((C101451 * C154188 + C130665 * C154184 +
            (C103295 + C103296) * C154174 + (C131841 + C131842) * C154116) *
               C153712 * C2058 -
           ((C97195 * C29125 + C132700 + C132700 + C153969 * C29127 +
             C97193 * C28772 + C132701 + C132701 + C97191 * C28776) *
                C154116 +
            (C132707 + C132706) * C154174 + C132695 * C154184 +
            C104577 * C154188) *
               C153712 * C153847) *
              C328) *
         C153748) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C106473 * C136 + C106482 + C106482 + C154189 * C152 +
             C106475 * C556 + C106483 + C106483 + C154186 * C580 +
             C106477 * C557 + C106484 + C106484 + C154177 * C581 +
             C106479 * C2272 + C106485 + C106485 + C154123 * C2282) *
                C70415 +
            (C134230 + C134231 + C134232 + C134233) * C153927) *
               C153712 * C2058 -
           ((C135094 + C135095 + C135096 + C135097) * C153927 +
            (C106479 * C7665 + C107026 + C107026 + C154123 * C7673 +
             C106477 * C2272 + C107027 + C107027 + C154177 * C2282 +
             C106475 * C557 + C107028 + C107028 + C154186 * C581 +
             C106473 * C556 + C107029 + C107029 + C154189 * C580) *
                C70415) *
               C153712 * C153847) *
              C153767 * C1253 +
          (((C107073 + C107072 + C107071 + C107070) * C70415 +
            (C107800 + C107801 + C107802 + C107803) * C153927) *
               C153712 * C153847 -
           ((C106812 + C106813 + C106814 + C106815) * C153927 +
            (C106553 + C106552 + C106551 + C106550) * C70415) *
               C153712 * C2058) *
              C153767 * C1254 +
          (((C106557 + C106556 + C106555 + C106554) * C70415 +
            (C107292 + C107293 + C107294 + C107295) * C153927) *
               C153712 * C2058 -
           ((C106479 * C9165 + C107788 + C107788 + C154123 * C9171 +
             C106477 * C6157 + C107789 + C107789 + C154177 * C6169 +
             C106475 * C1487 + C107790 + C107790 + C154186 * C1497 +
             C106473 * C1083 + C107791 + C107791 + C154189 * C1095) *
                C153927 +
            (C107513 + C107512 + C107511 + C107510) * C70415) *
               C153712 * C153847) *
              C153767 * C1255)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C106473 * C136 + C106482 + C106482 + C154189 * C152 +
             C106475 * C556 + C106483 + C106483 + C154186 * C580 +
             C106477 * C557 + C106484 + C106484 + C154177 * C581 +
             C106479 * C2272 + C106485 + C106485 + C154123 * C2282) *
                C70415 +
            (C134230 + C134231 + C134232 + C134233) * C153927) *
               C153712 * C2058 -
           ((C135094 + C135095 + C135096 + C135097) * C153927 +
            (C106479 * C7665 + C107026 + C107026 + C154123 * C7673 +
             C106477 * C2272 + C107027 + C107027 + C154177 * C2282 +
             C106475 * C557 + C107028 + C107028 + C154186 * C581 +
             C106473 * C556 + C107029 + C107029 + C154189 * C580) *
                C70415) *
               C153712 * C153847) *
              C326 +
          (((C135097 + C135096 + C135095 + C135094) * C70415 +
            (C136330 + C136331 + C136332 + C136333) * C153927) *
               C153712 * C153847 -
           ((C134234 + C134235 + C134236 + C134237) * C153927 +
            (C134233 + C134232 + C134231 + C134230) * C70415) *
               C153712 * C2058) *
              C327 +
          (((C134237 + C134236 + C134235 + C134234) * C70415 +
            (C135442 + C135443 + C135444 + C135445) * C153927) *
               C153712 * C2058 -
           ((C106479 * C32340 + C136318 + C136318 + C154123 * C32342 +
             C106477 * C29881 + C136319 + C136319 + C154177 * C29885 +
             C106475 * C4811 + C136320 + C136320 + C154186 * C4817 +
             C106473 * C4168 + C136321 + C136321 + C154189 * C4176) *
                C153927 +
            (C136333 + C136332 + C136331 + C136330) * C70415) *
               C153712 * C153847) *
              C328) *
         C153748) /
            (p * q * std::sqrt(p + q));
    d2ee[120] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C152071 * C136 + C115566 + C115566 + C153965 * C152 +
              C152059 * C556 + C115567 + C115567 + C153972 * C580 +
              C115563 * C557 + C115568 + C115568 + C115558 * C581) *
                 C70415 +
             (C120244 + C120245 + C120246) * C153927) *
                C154074 +
            ((C115632 + C115633 + C115634) * C70415 + C120225 * C153927) *
                C153722) *
               C153783 * C154093 -
           ((C120226 * C153927 + C120227 * C70415) * C153722 +
            ((C120247 + C120248 + C120249) * C153927 +
             (C120246 + C120245 + C120244) * C70415) *
                C154074) *
               C153783 * C153819) *
              C154162 +
          (((C120225 * C70415 + C120231 * C153927) * C154074 +
            (C120849 * C70415 + (C115949 + C115950 + C115951) * C153927) *
                C153722) *
               C153783 * C153819 -
           ((C116482 * C153927 + (C115637 + C115636 + C115635) * C70415) *
                C153722 +
            (C120227 * C153927 + (C115634 + C115633 + C115632) * C70415) *
                C154074) *
               C153783 * C154093) *
              C154163 +
          (((C115646 * C70415 + C120849 * C153927) * C154074 +
            ((C115640 + C115639 + C115638) * C70415 +
             (C116490 + C116491 + C116492) * C153927) *
                C153722) *
               C153783 * C154093 -
           (((C115563 * C3372 + C115913 + C115913 + C115558 * C3380 +
              C152059 * C1917 + C115914 + C115914 + C153972 * C1927 +
              C152071 * C339 + C115915 + C115915 + C153965 * C363) *
                 C153927 +
             (C116492 + C116491 + C116490) * C70415) *
                C153722 +
            ((C115951 + C115950 + C115949) * C153927 + C116482 * C70415) *
                C154074) *
               C153783 * C153819) *
              C774)) /
        (p * q * std::sqrt(p + q));
    d2ee[121] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C152071 * C136 + C115566 + C115566 + C153965 * C152 +
               C152059 * C556 + C115567 + C115567 + C153972 * C580 +
               C115563 * C557 + C115568 + C115568 + C115558 * C581) *
                  C70415 +
              (C120244 + C120245 + C120246) * C153927) *
                 C154074 +
             ((C115632 + C115633 + C115634) * C70415 + C120225 * C153927) *
                 C153722) *
                C154094 -
            ((C121540 * C153927 + (C116245 + C116246 + C116247) * C70415) *
                 C153722 +
             ((C121554 + C121555 + C121556) * C153927 +
              (C115563 * C2272 + C116188 + C116188 + C115558 * C2282 +
               C152059 * C557 + C116189 + C116189 + C153972 * C581 +
               C152071 * C556 + C116190 + C116190 + C153965 * C580) *
                  C70415) *
                 C154074) *
                C153847) *
               C154093 +
           ((((C121556 + C121555 + C121554) * C70415 +
              (C123360 + C123361 + C123362) * C153927) *
                 C154074 +
             (C121544 * C70415 + (C121557 + C121558 + C121559) * C153927) *
                 C153722) *
                C153847 -
            ((C120226 * C153927 + C120227 * C70415) * C153722 +
             ((C120247 + C120248 + C120249) * C153927 +
              (C120246 + C120245 + C120244) * C70415) *
                 C154074) *
                C154094) *
               C153819) *
              C329 +
          (((((C116247 + C116246 + C116245) * C70415 + C121544 * C153927) *
                 C154074 +
             ((C116244 + C116243 + C116242) * C70415 +
              (C117061 + C117062 + C117063) * C153927) *
                 C153722) *
                C153847 -
            ((C116482 * C153927 + (C115637 + C115636 + C115635) * C70415) *
                 C153722 +
             (C120227 * C153927 + (C115634 + C115633 + C115632) * C70415) *
                 C154074) *
                C154094) *
               C154093 +
           (((C120225 * C70415 + C120231 * C153927) * C154074 +
             (C120849 * C70415 + (C115949 + C115950 + C115951) * C153927) *
                 C153722) *
                C154094 -
            (((C115563 * C6156 + C118390 + C118390 + C115558 * C6168 +
               C152059 * C3371 + C118391 + C118391 + C153972 * C3379 +
               C152071 * C1918 + C118392 + C118392 + C153965 * C1928) *
                  C153927 +
              (C117063 + C117062 + C117061) * C70415) *
                 C153722 +
             ((C121559 + C121558 + C121557) * C153927 + C121540 * C70415) *
                 C154074) *
                C153847) *
               C153819) *
              C153754)) /
        (p * q * std::sqrt(p + q));
    d2ee[122] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C152071 * C136 + C115566 + C115566 + C153965 * C152 +
              C152059 * C556 + C115567 + C115567 + C153972 * C580 +
              C115563 * C557 + C115568 + C115568 + C115558 * C581) *
                 C70415 +
             (C120244 + C120245 + C120246) * C153927) *
                C154074 +
            ((C115632 + C115633 + C115634) * C70415 + C120225 * C153927) *
                C153722) *
               C153783 * C326 -
           ((C120226 * C153927 + C120227 * C70415) * C153722 +
            ((C120247 + C120248 + C120249) * C153927 +
             (C120246 + C120245 + C120244) * C70415) *
                C154074) *
               C153783 * C327 +
           (((C120249 + C120248 + C120247) * C70415 +
             (C122062 + C122063 + C122064) * C153927) *
                C154074 +
            (C120231 * C70415 + (C120250 + C120251 + C120252) * C153927) *
                C153722) *
               C153783 * C328) *
              C329 +
          (((C120225 * C70415 + C120231 * C153927) * C154074 +
            (C120849 * C70415 + (C115949 + C115950 + C115951) * C153927) *
                C153722) *
               C153783 * C327 -
           ((C116482 * C153927 + (C115637 + C115636 + C115635) * C70415) *
                C153722 +
            (C120227 * C153927 + (C115634 + C115633 + C115632) * C70415) *
                C154074) *
               C153783 * C326 -
           (((C115563 * C4809 + C117428 + C117428 + C115558 * C4815 +
              C152059 * C4170 + C117429 + C117429 + C153972 * C4178 +
              C152071 * C1345 + C117430 + C117430 + C153965 * C1355) *
                 C153927 +
             (C115951 + C115950 + C115949) * C70415) *
                C153722 +
            ((C120252 + C120251 + C120250) * C153927 + C120226 * C70415) *
                C154074) *
               C153783 * C328) *
              C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C152071 * C136 + C115566 + C115566 + C153965 * C152 +
             C152059 * C556 + C115567 + C115567 + C153972 * C580 +
             C115563 * C557 + C115568 + C115568 + C115558 * C581) *
                C70415 +
            (C120244 + C120245 + C120246) * C153927) *
               C154074 +
           ((C115632 + C115633 + C115634) * C70415 + C120225 * C153927) *
               C153722) *
              C153783 * C153767 * C130 -
          ((C116482 * C153927 + (C115637 + C115636 + C115635) * C70415) *
               C153722 +
           (C120227 * C153927 + (C115634 + C115633 + C115632) * C70415) *
               C154074) *
              C153783 * C153767 * C131 +
          ((C115646 * C70415 + C120849 * C153927) * C154074 +
           ((C115640 + C115639 + C115638) * C70415 +
            (C116490 + C116491 + C116492) * C153927) *
               C153722) *
              C153783 * C153767 * C132 -
          (((C115563 * C1485 + C116479 + C116479 + C115558 * C1495 +
             C152059 * C1085 + C116480 + C116480 + C153972 * C1097 +
             C152071 * C331 + C116481 + C116481 + C153965 * C355) *
                C153927 +
            (C115643 + C115642 + C115641) * C70415) *
               C153722 +
           ((C116492 + C116491 + C116490) * C153927 + C115647 * C70415) *
               C154074) *
              C153783 * C153767 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C152071 * C136 + C115566 + C115566 + C153965 * C152 +
              C152059 * C556 + C115567 + C115567 + C153972 * C580 +
              C115563 * C557 + C115568 + C115568 + C115558 * C581) *
                 C70415 +
             (C120244 + C120245 + C120246) * C153927) *
                C154074 +
            ((C115632 + C115633 + C115634) * C70415 + C120225 * C153927) *
                C153722) *
               C549 -
           ((C121540 * C153927 + (C116245 + C116246 + C116247) * C70415) *
                C153722 +
            ((C121554 + C121555 + C121556) * C153927 +
             (C115563 * C2272 + C116188 + C116188 + C115558 * C2282 +
              C152059 * C557 + C116189 + C116189 + C153972 * C581 +
              C152071 * C556 + C116190 + C116190 + C153965 * C580) *
                 C70415) *
                C154074) *
               C550 +
           (((C152071 * C557 + C116191 + C116191 + C153965 * C581 +
              C152059 * C2272 + C116192 + C116192 + C153972 * C2282 +
              C115563 * C7665 + C116193 + C116193 + C115558 * C7673) *
                 C70415 +
             (C122373 + C122374 + C122375) * C153927) *
                C154074 +
            ((C116248 + C116249 + C116250) * C70415 +
             (C120555 + C120556 + C120557) * C153927) *
                C153722) *
               C551) *
              C153767 * C329 +
          ((((C116247 + C116246 + C116245) * C70415 + C121544 * C153927) *
                C154074 +
            ((C116244 + C116243 + C116242) * C70415 +
             (C117061 + C117062 + C117063) * C153927) *
                C153722) *
               C550 -
           ((C116482 * C153927 + (C115637 + C115636 + C115635) * C70415) *
                C153722 +
            (C120227 * C153927 + (C115634 + C115633 + C115632) * C70415) *
                C154074) *
               C549 -
           (((C115563 * C9165 + C117655 + C117655 + C115558 * C9171 +
              C152059 * C6157 + C117656 + C117656 + C153972 * C6169 +
              C152071 * C1487 + C117657 + C117657 + C153965 * C1497) *
                 C153927 +
             (C116253 + C116252 + C116251) * C70415) *
                C153722 +
            ((C120557 + C120556 + C120555) * C153927 +
             (C116250 + C116249 + C116248) * C70415) *
                C154074) *
               C551) *
              C153767 * C153754)) /
            (p * q * std::sqrt(p + q));
    d2ee[123] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C152071 * C136 + C115566 + C115566 + C153965 * C152 +
              C152059 * C556 + C115567 + C115567 + C153972 * C580 +
              C115563 * C557 + C115568 + C115568 + C115558 * C581) *
                 C70415 +
             (C120244 + C120245 + C120246) * C153927) *
                C154074 +
            ((C115632 + C115633 + C115634) * C70415 + C120225 * C153927) *
                C153722) *
               C154094 -
           ((C121540 * C153927 + (C116245 + C116246 + C116247) * C70415) *
                C153722 +
            ((C121554 + C121555 + C121556) * C153927 +
             (C115563 * C2272 + C116188 + C116188 + C115558 * C2282 +
              C152059 * C557 + C116189 + C116189 + C153972 * C581 +
              C152071 * C556 + C116190 + C116190 + C153965 * C580) *
                 C70415) *
                C154074) *
               C153847) *
              C153767 * C154162 +
          ((((C116247 + C116246 + C116245) * C70415 + C121544 * C153927) *
                C154074 +
            ((C116244 + C116243 + C116242) * C70415 +
             (C117061 + C117062 + C117063) * C153927) *
                C153722) *
               C153847 -
           ((C116482 * C153927 + (C115637 + C115636 + C115635) * C70415) *
                C153722 +
            (C120227 * C153927 + (C115634 + C115633 + C115632) * C70415) *
                C154074) *
               C154094) *
              C153767 * C154163 +
          (((C115646 * C70415 + C120849 * C153927) * C154074 +
            ((C115640 + C115639 + C115638) * C70415 +
             (C116490 + C116491 + C116492) * C153927) *
                C153722) *
               C154094 -
           (((C115563 * C8529 + C117043 + C117043 + C115558 * C8531 +
              C152059 * C1486 + C117044 + C117044 + C153972 * C1496 +
              C152071 * C1084 + C117045 + C117045 + C153965 * C1096) *
                 C153927 +
             (C116731 + C116730 + C116729) * C70415) *
                C153722 +
            ((C117063 + C117062 + C117061) * C153927 + C116721 * C70415) *
                C154074) *
               C153847) *
              C153767 * C774)) /
        (p * q * std::sqrt(p + q));
    d2ee[124] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C152071 * C136 + C115566 + C115566 + C153965 * C152 +
             C152059 * C556 + C115567 + C115567 + C153972 * C580 +
             C115563 * C557 + C115568 + C115568 + C115558 * C581) *
                C70415 +
            (C120244 + C120245 + C120246) * C153927) *
               C154074 +
           ((C115632 + C115633 + C115634) * C70415 + C120225 * C153927) *
               C153722) *
              C153783 * C153767 * C130 -
          ((C116482 * C153927 + (C115637 + C115636 + C115635) * C70415) *
               C153722 +
           (C120227 * C153927 + (C115634 + C115633 + C115632) * C70415) *
               C154074) *
              C153783 * C153767 * C131 +
          ((C115646 * C70415 + C120849 * C153927) * C154074 +
           ((C115640 + C115639 + C115638) * C70415 +
            (C116490 + C116491 + C116492) * C153927) *
               C153722) *
              C153783 * C153767 * C132 -
          (((C115563 * C1485 + C116479 + C116479 + C115558 * C1495 +
             C152059 * C1085 + C116480 + C116480 + C153972 * C1097 +
             C152071 * C331 + C116481 + C116481 + C153965 * C355) *
                C153927 +
            (C115643 + C115642 + C115641) * C70415) *
               C153722 +
           ((C116492 + C116491 + C116490) * C153927 + C115647 * C70415) *
               C154074) *
              C153783 * C153767 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C152071 * C136 + C115566 + C115566 + C153965 * C152 +
              C152059 * C556 + C115567 + C115567 + C153972 * C580 +
              C115563 * C557 + C115568 + C115568 + C115558 * C581) *
                 C70415 +
             (C120244 + C120245 + C120246) * C153927) *
                C154074 +
            ((C115632 + C115633 + C115634) * C70415 + C120225 * C153927) *
                C153722) *
               C153783 * C326 -
           ((C120226 * C153927 + C120227 * C70415) * C153722 +
            ((C120247 + C120248 + C120249) * C153927 +
             (C120246 + C120245 + C120244) * C70415) *
                C154074) *
               C153783 * C327 +
           (((C120249 + C120248 + C120247) * C70415 +
             (C122062 + C122063 + C122064) * C153927) *
                C154074 +
            (C120231 * C70415 + (C120250 + C120251 + C120252) * C153927) *
                C153722) *
               C153783 * C328) *
              C329 +
          (((C120225 * C70415 + C120231 * C153927) * C154074 +
            (C120849 * C70415 + (C115949 + C115950 + C115951) * C153927) *
                C153722) *
               C153783 * C327 -
           ((C116482 * C153927 + (C115637 + C115636 + C115635) * C70415) *
                C153722 +
            (C120227 * C153927 + (C115634 + C115633 + C115632) * C70415) *
                C154074) *
               C153783 * C326 -
           (((C115563 * C4809 + C117428 + C117428 + C115558 * C4815 +
              C152059 * C4170 + C117429 + C117429 + C153972 * C4178 +
              C152071 * C1345 + C117430 + C117430 + C153965 * C1355) *
                 C153927 +
             (C115951 + C115950 + C115949) * C70415) *
                C153722 +
            ((C120252 + C120251 + C120250) * C153927 + C120226 * C70415) *
                C154074) *
               C153783 * C328) *
              C153754)) /
            (p * q * std::sqrt(p + q));
    d2ee[125] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C152071 * C136 + C115566 + C115566 + C153965 * C152 +
              C152059 * C556 + C115567 + C115567 + C153972 * C580 +
              C115563 * C557 + C115568 + C115568 + C115558 * C581) *
                 C70415 +
             (C120244 + C120245 + C120246) * C153927) *
                C154074 +
            ((C115632 + C115633 + C115634) * C70415 + C120225 * C153927) *
                C153722) *
               C153783 * C154164 -
           ((C120226 * C153927 + C120227 * C70415) * C153722 +
            ((C120247 + C120248 + C120249) * C153927 +
             (C120246 + C120245 + C120244) * C70415) *
                C154074) *
               C153783 * C154165 +
           (((C120249 + C120248 + C120247) * C70415 +
             (C122062 + C122063 + C122064) * C153927) *
                C154074 +
            (C120231 * C70415 + (C120250 + C120251 + C120252) * C153927) *
                C153722) *
               C153783 * C1629) *
              C154085 +
          (((C120225 * C70415 + C120231 * C153927) * C154074 +
            (C120849 * C70415 + (C115949 + C115950 + C115951) * C153927) *
                C153722) *
               C153783 * C154165 -
           ((C116482 * C153927 + (C115637 + C115636 + C115635) * C70415) *
                C153722 +
            (C120227 * C153927 + (C115634 + C115633 + C115632) * C70415) *
                C154074) *
               C153783 * C154164 -
           (((C115563 * C4809 + C117428 + C117428 + C115558 * C4815 +
              C152059 * C4170 + C117429 + C117429 + C153972 * C4178 +
              C152071 * C1345 + C117430 + C117430 + C153965 * C1355) *
                 C153927 +
             (C115951 + C115950 + C115949) * C70415) *
                C153722 +
            ((C120252 + C120251 + C120250) * C153927 + C120226 * C70415) *
                C154074) *
               C153783 * C1629) *
              C153754)) /
        (p * q * std::sqrt(p + q));
    d2ee[126] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C152071 * C136 + C115566 + C115566 + C153965 * C152 +
              C152059 * C556 + C115567 + C115567 + C153972 * C580 +
              C115563 * C557 + C115568 + C115568 + C115558 * C581) *
                 C70415 +
             (C120244 + C120245 + C120246) * C153927) *
                C154074 +
            ((C115632 + C115633 + C115634) * C70415 + C120225 * C153927) *
                C153722) *
               C154094 -
           ((C121540 * C153927 + (C116245 + C116246 + C116247) * C70415) *
                C153722 +
            ((C121554 + C121555 + C121556) * C153927 +
             (C115563 * C2272 + C116188 + C116188 + C115558 * C2282 +
              C152059 * C557 + C116189 + C116189 + C153972 * C581 +
              C152071 * C556 + C116190 + C116190 + C153965 * C580) *
                 C70415) *
                C154074) *
               C153847) *
              C154164 +
          ((((C121556 + C121555 + C121554) * C70415 +
             (C123360 + C123361 + C123362) * C153927) *
                C154074 +
            (C121544 * C70415 + (C121557 + C121558 + C121559) * C153927) *
                C153722) *
               C153847 -
           ((C120226 * C153927 + C120227 * C70415) * C153722 +
            ((C120247 + C120248 + C120249) * C153927 +
             (C120246 + C120245 + C120244) * C70415) *
                C154074) *
               C154094) *
              C154165 +
          ((((C120249 + C120248 + C120247) * C70415 +
             (C122062 + C122063 + C122064) * C153927) *
                C154074 +
            (C120231 * C70415 + (C120250 + C120251 + C120252) * C153927) *
                C153722) *
               C154094 -
           (((C115563 * C31684 + C123348 + C123348 + C115558 * C31686 +
              C152059 * C4810 + C123349 + C123349 + C153972 * C4816 +
              C152071 * C4169 + C123350 + C123350 + C153965 * C4177) *
                 C153927 +
             (C121559 + C121558 + C121557) * C70415) *
                C153722 +
            ((C115563 * C29881 + C123351 + C123351 + C115558 * C29885 +
              C152059 * C4811 + C123352 + C123352 + C153972 * C4817 +
              C152071 * C4168 + C123353 + C123353 + C153965 * C4176) *
                 C153927 +
             (C123362 + C123361 + C123360) * C70415) *
                C154074) *
               C153847) *
              C1629) *
         C153748) /
        (p * q * std::sqrt(p + q));
    d2ee[127] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C152071 * C136 + C115566 + C115566 + C153965 * C152 +
             C152059 * C556 + C115567 + C115567 + C153972 * C580 +
             C115563 * C557 + C115568 + C115568 + C115558 * C581) *
                C70415 +
            (C120244 + C120245 + C120246) * C153927) *
               C154074 +
           ((C115632 + C115633 + C115634) * C70415 + C120225 * C153927) *
               C153722) *
              C153783 * C1338 -
          ((C120226 * C153927 + C120227 * C70415) * C153722 +
           ((C120247 + C120248 + C120249) * C153927 +
            (C120246 + C120245 + C120244) * C70415) *
               C154074) *
              C153783 * C1339 +
          (((C120249 + C120248 + C120247) * C70415 +
            (C122062 + C122063 + C122064) * C153927) *
               C154074 +
           (C120231 * C70415 + (C120250 + C120251 + C120252) * C153927) *
               C153722) *
              C153783 * C1340 -
          (((C115563 * C28359 + C122050 + C122050 + C115558 * C28363 +
             C152059 * C5558 + C122051 + C122051 + C153972 * C5564 +
             C152071 * C3084 + C122052 + C122052 + C153965 * C3092) *
                C153927 +
            (C120252 + C120251 + C120250) * C70415) *
               C153722 +
           ((C115563 * C28358 + C122053 + C122053 + C115558 * C28362 +
             C152059 * C5559 + C122054 + C122054 + C153972 * C5565 +
             C152071 * C3083 + C122055 + C122055 + C153965 * C3091) *
                C153927 +
            (C122064 + C122063 + C122062) * C70415) *
               C154074) *
              C153783 * C1341) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C152071 * C136 + C115566 + C115566 + C153965 * C152 +
              C152059 * C556 + C115567 + C115567 + C153972 * C580 +
              C115563 * C557 + C115568 + C115568 + C115558 * C581) *
                 C70415 +
             (C120244 + C120245 + C120246) * C153927) *
                C154074 +
            ((C115632 + C115633 + C115634) * C70415 + C120225 * C153927) *
                C153722) *
               C153783 * C1251 -
           ((C120226 * C153927 + C120227 * C70415) * C153722 +
            ((C120247 + C120248 + C120249) * C153927 +
             (C120246 + C120245 + C120244) * C70415) *
                C154074) *
               C153783 * C153819) *
              C1253 +
          (((C120225 * C70415 + C120231 * C153927) * C154074 +
            (C120849 * C70415 + (C115949 + C115950 + C115951) * C153927) *
                C153722) *
               C153783 * C153819 -
           ((C116482 * C153927 + (C115637 + C115636 + C115635) * C70415) *
                C153722 +
            (C120227 * C153927 + (C115634 + C115633 + C115632) * C70415) *
                C154074) *
               C153783 * C1251) *
              C1254 +
          (((C115646 * C70415 + C120849 * C153927) * C154074 +
            ((C115640 + C115639 + C115638) * C70415 +
             (C116490 + C116491 + C116492) * C153927) *
                C153722) *
               C153783 * C1251 -
           (((C115563 * C3372 + C115913 + C115913 + C115558 * C3380 +
              C152059 * C1917 + C115914 + C115914 + C153972 * C1927 +
              C152071 * C339 + C115915 + C115915 + C153965 * C363) *
                 C153927 +
             (C116492 + C116491 + C116490) * C70415) *
                C153722 +
            ((C115951 + C115950 + C115949) * C153927 + C116482 * C70415) *
                C154074) *
               C153783 * C153819) *
              C1255)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C152071 * C136 + C115566 + C115566 + C153965 * C152 +
              C152059 * C556 + C115567 + C115567 + C153972 * C580 +
              C115563 * C557 + C115568 + C115568 + C115558 * C581) *
                 C70415 +
             (C120244 + C120245 + C120246) * C153927) *
                C154074 +
            ((C115632 + C115633 + C115634) * C70415 + C120225 * C153927) *
                C153722) *
               C549 -
           ((C121540 * C153927 + (C116245 + C116246 + C116247) * C70415) *
                C153722 +
            ((C121554 + C121555 + C121556) * C153927 +
             (C115563 * C2272 + C116188 + C116188 + C115558 * C2282 +
              C152059 * C557 + C116189 + C116189 + C153972 * C581 +
              C152071 * C556 + C116190 + C116190 + C153965 * C580) *
                 C70415) *
                C154074) *
               C550 +
           (((C152071 * C557 + C116191 + C116191 + C153965 * C581 +
              C152059 * C2272 + C116192 + C116192 + C153972 * C2282 +
              C115563 * C7665 + C116193 + C116193 + C115558 * C7673) *
                 C70415 +
             (C122373 + C122374 + C122375) * C153927) *
                C154074 +
            ((C116248 + C116249 + C116250) * C70415 +
             (C120555 + C120556 + C120557) * C153927) *
                C153722) *
               C551) *
              C1251 +
          ((((C121556 + C121555 + C121554) * C70415 +
             (C123360 + C123361 + C123362) * C153927) *
                C154074 +
            (C121544 * C70415 + (C121557 + C121558 + C121559) * C153927) *
                C153722) *
               C550 -
           ((C120226 * C153927 + C120227 * C70415) * C153722 +
            ((C120247 + C120248 + C120249) * C153927 +
             (C120246 + C120245 + C120244) * C70415) *
                C154074) *
               C549 -
           (((C115563 * C30947 + C122361 + C122361 + C115558 * C30951 +
              C152059 * C6158 + C122362 + C122362 + C153972 * C6170 +
              C152071 * C3370 + C122363 + C122363 + C153965 * C3378) *
                 C153927 +
             (C120557 + C120556 + C120555) * C70415) *
                C153722 +
            ((C115563 * C30946 + C122364 + C122364 + C115558 * C30950 +
              C152059 * C6160 + C122365 + C122365 + C153972 * C6172 +
              C152071 * C3369 + C122366 + C122366 + C153965 * C3377) *
                 C153927 +
             (C122375 + C122374 + C122373) * C70415) *
                C154074) *
               C551) *
              C153819) *
         C153748) /
            (p * q * std::sqrt(p + q));
    d2ee[128] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C152071 * C136 + C115566 + C115566 + C153965 * C152 +
               C152059 * C556 + C115567 + C115567 + C153972 * C580 +
               C115563 * C557 + C115568 + C115568 + C115558 * C581) *
                  C70415 +
              (C120244 + C120245 + C120246) * C153927) *
                 C154074 +
             ((C115632 + C115633 + C115634) * C70415 + C120225 * C153927) *
                 C153722) *
                C154094 -
            ((C121540 * C153927 + (C116245 + C116246 + C116247) * C70415) *
                 C153722 +
             ((C121554 + C121555 + C121556) * C153927 +
              (C115563 * C2272 + C116188 + C116188 + C115558 * C2282 +
               C152059 * C557 + C116189 + C116189 + C153972 * C581 +
               C152071 * C556 + C116190 + C116190 + C153965 * C580) *
                  C70415) *
                 C154074) *
                C153847) *
               C1251 +
           ((((C121556 + C121555 + C121554) * C70415 +
              (C123360 + C123361 + C123362) * C153927) *
                 C154074 +
             (C121544 * C70415 + (C121557 + C121558 + C121559) * C153927) *
                 C153722) *
                C153847 -
            ((C120226 * C153927 + C120227 * C70415) * C153722 +
             ((C120247 + C120248 + C120249) * C153927 +
              (C120246 + C120245 + C120244) * C70415) *
                 C154074) *
                C154094) *
               C153819) *
              C154085 +
          (((((C116247 + C116246 + C116245) * C70415 + C121544 * C153927) *
                 C154074 +
             ((C116244 + C116243 + C116242) * C70415 +
              (C117061 + C117062 + C117063) * C153927) *
                 C153722) *
                C153847 -
            ((C116482 * C153927 + (C115637 + C115636 + C115635) * C70415) *
                 C153722 +
             (C120227 * C153927 + (C115634 + C115633 + C115632) * C70415) *
                 C154074) *
                C154094) *
               C1251 +
           (((C120225 * C70415 + C120231 * C153927) * C154074 +
             (C120849 * C70415 + (C115949 + C115950 + C115951) * C153927) *
                 C153722) *
                C154094 -
            (((C115563 * C6156 + C118390 + C118390 + C115558 * C6168 +
               C152059 * C3371 + C118391 + C118391 + C153972 * C3379 +
               C152071 * C1918 + C118392 + C118392 + C153965 * C1928) *
                  C153927 +
              (C117063 + C117062 + C117061) * C70415) *
                 C153722 +
             ((C121559 + C121558 + C121557) * C153927 + C121540 * C70415) *
                 C154074) *
                C153847) *
               C153819) *
              C153754)) /
        (p * q * std::sqrt(p + q));
    d2ee[129] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C152071 * C136 + C115566 + C115566 + C153965 * C152 +
              C152059 * C556 + C115567 + C115567 + C153972 * C580 +
              C115563 * C557 + C115568 + C115568 + C115558 * C581) *
                 C70415 +
             (C120244 + C120245 + C120246) * C153927) *
                C154074 +
            ((C115632 + C115633 + C115634) * C70415 + C120225 * C153927) *
                C153722) *
               C153783 * C1251 -
           ((C120226 * C153927 + C120227 * C70415) * C153722 +
            ((C120247 + C120248 + C120249) * C153927 +
             (C120246 + C120245 + C120244) * C70415) *
                C154074) *
               C153783 * C153819) *
              C1253 +
          (((C120225 * C70415 + C120231 * C153927) * C154074 +
            (C120849 * C70415 + (C115949 + C115950 + C115951) * C153927) *
                C153722) *
               C153783 * C153819 -
           ((C116482 * C153927 + (C115637 + C115636 + C115635) * C70415) *
                C153722 +
            (C120227 * C153927 + (C115634 + C115633 + C115632) * C70415) *
                C154074) *
               C153783 * C1251) *
              C1254 +
          (((C115646 * C70415 + C120849 * C153927) * C154074 +
            ((C115640 + C115639 + C115638) * C70415 +
             (C116490 + C116491 + C116492) * C153927) *
                C153722) *
               C153783 * C1251 -
           (((C115563 * C3372 + C115913 + C115913 + C115558 * C3380 +
              C152059 * C1917 + C115914 + C115914 + C153972 * C1927 +
              C152071 * C339 + C115915 + C115915 + C153965 * C363) *
                 C153927 +
             (C116492 + C116491 + C116490) * C70415) *
                C153722 +
            ((C115951 + C115950 + C115949) * C153927 + C116482 * C70415) *
                C154074) *
               C153783 * C153819) *
              C1255)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C152071 * C136 + C115566 + C115566 + C153965 * C152 +
             C152059 * C556 + C115567 + C115567 + C153972 * C580 +
             C115563 * C557 + C115568 + C115568 + C115558 * C581) *
                C70415 +
            (C120244 + C120245 + C120246) * C153927) *
               C154074 +
           ((C115632 + C115633 + C115634) * C70415 + C120225 * C153927) *
               C153722) *
              C153783 * C1338 -
          ((C120226 * C153927 + C120227 * C70415) * C153722 +
           ((C120247 + C120248 + C120249) * C153927 +
            (C120246 + C120245 + C120244) * C70415) *
               C154074) *
              C153783 * C1339 +
          (((C120249 + C120248 + C120247) * C70415 +
            (C122062 + C122063 + C122064) * C153927) *
               C154074 +
           (C120231 * C70415 + (C120250 + C120251 + C120252) * C153927) *
               C153722) *
              C153783 * C1340 -
          (((C115563 * C28359 + C122050 + C122050 + C115558 * C28363 +
             C152059 * C5558 + C122051 + C122051 + C153972 * C5564 +
             C152071 * C3084 + C122052 + C122052 + C153965 * C3092) *
                C153927 +
            (C120252 + C120251 + C120250) * C70415) *
               C153722 +
           ((C115563 * C28358 + C122053 + C122053 + C115558 * C28362 +
             C152059 * C5559 + C122054 + C122054 + C153972 * C5565 +
             C152071 * C3083 + C122055 + C122055 + C153965 * C3091) *
                C153927 +
            (C122064 + C122063 + C122062) * C70415) *
               C154074) *
              C153783 * C1341) *
         C153748) /
            (p * q * std::sqrt(p + q));
    d2ee[130] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C152071 * C136 + C115566 + C115566 + C153965 * C152 +
               C152059 * C556 + C115567 + C115567 + C153972 * C580 +
               C115563 * C557 + C115568 + C115568 + C115558 * C581) *
                  C70415 +
              (C120244 + C120245 + C120246) * C153927) *
                 C154074 +
             ((C115632 + C115633 + C115634) * C70415 + C120225 * C153927) *
                 C153722) *
                C2058 -
            ((C121540 * C153927 + (C116245 + C116246 + C116247) * C70415) *
                 C153722 +
             ((C121554 + C121555 + C121556) * C153927 +
              (C115563 * C2272 + C116188 + C116188 + C115558 * C2282 +
               C152059 * C557 + C116189 + C116189 + C153972 * C581 +
               C152071 * C556 + C116190 + C116190 + C153965 * C580) *
                  C70415) *
                 C154074) *
                C153847) *
               C154093 +
           ((((C121556 + C121555 + C121554) * C70415 +
              (C123360 + C123361 + C123362) * C153927) *
                 C154074 +
             (C121544 * C70415 + (C121557 + C121558 + C121559) * C153927) *
                 C153722) *
                C153847 -
            ((C120226 * C153927 + C120227 * C70415) * C153722 +
             ((C120247 + C120248 + C120249) * C153927 +
              (C120246 + C120245 + C120244) * C70415) *
                 C154074) *
                C2058) *
               C153819) *
              C154085 +
          (((((C116247 + C116246 + C116245) * C70415 + C121544 * C153927) *
                 C154074 +
             ((C116244 + C116243 + C116242) * C70415 +
              (C117061 + C117062 + C117063) * C153927) *
                 C153722) *
                C153847 -
            ((C116482 * C153927 + (C115637 + C115636 + C115635) * C70415) *
                 C153722 +
             (C120227 * C153927 + (C115634 + C115633 + C115632) * C70415) *
                 C154074) *
                C2058) *
               C154093 +
           (((C120225 * C70415 + C120231 * C153927) * C154074 +
             (C120849 * C70415 + (C115949 + C115950 + C115951) * C153927) *
                 C153722) *
                C2058 -
            (((C115563 * C6156 + C118390 + C118390 + C115558 * C6168 +
               C152059 * C3371 + C118391 + C118391 + C153972 * C3379 +
               C152071 * C1918 + C118392 + C118392 + C153965 * C1928) *
                  C153927 +
              (C117063 + C117062 + C117061) * C70415) *
                 C153722 +
             ((C121559 + C121558 + C121557) * C153927 + C121540 * C70415) *
                 C154074) *
                C153847) *
               C153819) *
              C153754)) /
        (p * q * std::sqrt(p + q));
    d2ee[131] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C152071 * C136 + C115566 + C115566 + C153965 * C152 +
              C152059 * C556 + C115567 + C115567 + C153972 * C580 +
              C115563 * C557 + C115568 + C115568 + C115558 * C581) *
                 C70415 +
             (C120244 + C120245 + C120246) * C153927) *
                C154074 +
            ((C115632 + C115633 + C115634) * C70415 + C120225 * C153927) *
                C153722) *
               C154166 -
           ((C121540 * C153927 + (C116245 + C116246 + C116247) * C70415) *
                C153722 +
            ((C121554 + C121555 + C121556) * C153927 +
             (C115563 * C2272 + C116188 + C116188 + C115558 * C2282 +
              C152059 * C557 + C116189 + C116189 + C153972 * C581 +
              C152071 * C556 + C116190 + C116190 + C153965 * C580) *
                 C70415) *
                C154074) *
               C154167 +
           (((C152071 * C557 + C116191 + C116191 + C153965 * C581 +
              C152059 * C2272 + C116192 + C116192 + C153972 * C2282 +
              C115563 * C7665 + C116193 + C116193 + C115558 * C7673) *
                 C70415 +
             (C122373 + C122374 + C122375) * C153927) *
                C154074 +
            ((C116248 + C116249 + C116250) * C70415 +
             (C120555 + C120556 + C120557) * C153927) *
                C153722) *
               C2574) *
              C154093 +
          ((((C121556 + C121555 + C121554) * C70415 +
             (C123360 + C123361 + C123362) * C153927) *
                C154074 +
            (C121544 * C70415 + (C121557 + C121558 + C121559) * C153927) *
                C153722) *
               C154167 -
           ((C120226 * C153927 + C120227 * C70415) * C153722 +
            ((C120247 + C120248 + C120249) * C153927 +
             (C120246 + C120245 + C120244) * C70415) *
                C154074) *
               C154166 -
           (((C115563 * C30947 + C122361 + C122361 + C115558 * C30951 +
              C152059 * C6158 + C122362 + C122362 + C153972 * C6170 +
              C152071 * C3370 + C122363 + C122363 + C153965 * C3378) *
                 C153927 +
             (C120557 + C120556 + C120555) * C70415) *
                C153722 +
            ((C115563 * C30946 + C122364 + C122364 + C115558 * C30950 +
              C152059 * C6160 + C122365 + C122365 + C153972 * C6172 +
              C152071 * C3369 + C122366 + C122366 + C153965 * C3377) *
                 C153927 +
             (C122375 + C122374 + C122373) * C70415) *
                C154074) *
               C2574) *
              C153819) *
         C153748) /
        (p * q * std::sqrt(p + q));
    d2ee[132] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C152071 * C136 + C115566 + C115566 + C153965 * C152 +
              C152059 * C556 + C115567 + C115567 + C153972 * C580 +
              C115563 * C557 + C115568 + C115568 + C115558 * C581) *
                 C70415 +
             (C120244 + C120245 + C120246) * C153927) *
                C154074 +
            ((C115632 + C115633 + C115634) * C70415 + C120225 * C153927) *
                C153722) *
               C2058 -
           ((C121540 * C153927 + (C116245 + C116246 + C116247) * C70415) *
                C153722 +
            ((C121554 + C121555 + C121556) * C153927 +
             (C115563 * C2272 + C116188 + C116188 + C115558 * C2282 +
              C152059 * C557 + C116189 + C116189 + C153972 * C581 +
              C152071 * C556 + C116190 + C116190 + C153965 * C580) *
                 C70415) *
                C154074) *
               C153847) *
              C326 +
          ((((C121556 + C121555 + C121554) * C70415 +
             (C123360 + C123361 + C123362) * C153927) *
                C154074 +
            (C121544 * C70415 + (C121557 + C121558 + C121559) * C153927) *
                C153722) *
               C153847 -
           ((C120226 * C153927 + C120227 * C70415) * C153722 +
            ((C120247 + C120248 + C120249) * C153927 +
             (C120246 + C120245 + C120244) * C70415) *
                C154074) *
               C2058) *
              C327 +
          ((((C120249 + C120248 + C120247) * C70415 +
             (C122062 + C122063 + C122064) * C153927) *
                C154074 +
            (C120231 * C70415 + (C120250 + C120251 + C120252) * C153927) *
                C153722) *
               C2058 -
           (((C115563 * C31684 + C123348 + C123348 + C115558 * C31686 +
              C152059 * C4810 + C123349 + C123349 + C153972 * C4816 +
              C152071 * C4169 + C123350 + C123350 + C153965 * C4177) *
                 C153927 +
             (C121559 + C121558 + C121557) * C70415) *
                C153722 +
            ((C115563 * C29881 + C123351 + C123351 + C115558 * C29885 +
              C152059 * C4811 + C123352 + C123352 + C153972 * C4817 +
              C152071 * C4168 + C123353 + C123353 + C153965 * C4176) *
                 C153927 +
             (C123362 + C123361 + C123360) * C70415) *
                C154074) *
               C153847) *
              C328) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C152071 * C136 + C115566 + C115566 + C153965 * C152 +
              C152059 * C556 + C115567 + C115567 + C153972 * C580 +
              C115563 * C557 + C115568 + C115568 + C115558 * C581) *
                 C70415 +
             (C120244 + C120245 + C120246) * C153927) *
                C154074 +
            ((C115632 + C115633 + C115634) * C70415 + C120225 * C153927) *
                C153722) *
               C2058 -
           ((C121540 * C153927 + (C116245 + C116246 + C116247) * C70415) *
                C153722 +
            ((C121554 + C121555 + C121556) * C153927 +
             (C115563 * C2272 + C116188 + C116188 + C115558 * C2282 +
              C152059 * C557 + C116189 + C116189 + C153972 * C581 +
              C152071 * C556 + C116190 + C116190 + C153965 * C580) *
                 C70415) *
                C154074) *
               C153847) *
              C153767 * C1253 +
          ((((C116247 + C116246 + C116245) * C70415 + C121544 * C153927) *
                C154074 +
            ((C116244 + C116243 + C116242) * C70415 +
             (C117061 + C117062 + C117063) * C153927) *
                C153722) *
               C153847 -
           ((C116482 * C153927 + (C115637 + C115636 + C115635) * C70415) *
                C153722 +
            (C120227 * C153927 + (C115634 + C115633 + C115632) * C70415) *
                C154074) *
               C2058) *
              C153767 * C1254 +
          (((C115646 * C70415 + C120849 * C153927) * C154074 +
            ((C115640 + C115639 + C115638) * C70415 +
             (C116490 + C116491 + C116492) * C153927) *
                C153722) *
               C2058 -
           (((C115563 * C8529 + C117043 + C117043 + C115558 * C8531 +
              C152059 * C1486 + C117044 + C117044 + C153972 * C1496 +
              C152071 * C1084 + C117045 + C117045 + C153965 * C1096) *
                 C153927 +
             (C116731 + C116730 + C116729) * C70415) *
                C153722 +
            ((C117063 + C117062 + C117061) * C153927 + C116721 * C70415) *
                C154074) *
               C153847) *
              C153767 * C1255)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C152071 * C136 + C115566 + C115566 + C153965 * C152 +
             C152059 * C556 + C115567 + C115567 + C153972 * C580 +
             C115563 * C557 + C115568 + C115568 + C115558 * C581) *
                C70415 +
            (C120244 + C120245 + C120246) * C153927) *
               C154074 +
           ((C115632 + C115633 + C115634) * C70415 + C120225 * C153927) *
               C153722) *
              C2264 -
          ((C121540 * C153927 + (C116245 + C116246 + C116247) * C70415) *
               C153722 +
           ((C121554 + C121555 + C121556) * C153927 +
            (C115563 * C2272 + C116188 + C116188 + C115558 * C2282 +
             C152059 * C557 + C116189 + C116189 + C153972 * C581 +
             C152071 * C556 + C116190 + C116190 + C153965 * C580) *
                C70415) *
               C154074) *
              C2265 +
          (((C152071 * C557 + C116191 + C116191 + C153965 * C581 +
             C152059 * C2272 + C116192 + C116192 + C153972 * C2282 +
             C115563 * C7665 + C116193 + C116193 + C115558 * C7673) *
                C70415 +
            (C122373 + C122374 + C122375) * C153927) *
               C154074 +
           ((C116248 + C116249 + C116250) * C70415 +
            (C120555 + C120556 + C120557) * C153927) *
               C153722) *
              C2266 -
          (((C115563 * C56080 + C124137 + C124137 + C115558 * C56082 +
             C152059 * C9166 + C124138 + C124138 + C153972 * C9172 +
             C152071 * C6159 + C124139 + C124139 + C153965 * C6171) *
                C153927 +
            (C115563 * C10501 + C118984 + C118984 + C115558 * C10507 +
             C152059 * C7666 + C118985 + C118985 + C153972 * C7674 +
             C152071 * C2271 + C118986 + C118986 + C153965 * C2281) *
                C70415) *
               C153722 +
           ((C115563 * C33705 + C124140 + C124140 + C115558 * C33709 +
             C152059 * C9167 + C124141 + C124141 + C153972 * C9173 +
             C152071 * C6161 + C124142 + C124142 + C153965 * C6173) *
                C153927 +
            (C115563 * C10502 + C118987 + C118987 + C115558 * C10508 +
             C152059 * C7665 + C118988 + C118988 + C153972 * C7673 +
             C152071 * C2272 + C118989 + C118989 + C153965 * C2282) *
                C70415) *
               C154074) *
              C2267) *
         C153767 * C153748) /
            (p * q * std::sqrt(p + q));
    d2ee[133] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C152071 * C136 + C115566 + C115566 + C153965 * C152 +
              C152059 * C556 + C115567 + C115567 + C153972 * C580 +
              C115563 * C557 + C115568 + C115568 + C115558 * C581) *
                 C70415 +
             (C120244 + C120245 + C120246) * C153927) *
                C154074 +
            ((C115632 + C115633 + C115634) * C70415 + C120225 * C153927) *
                C153722) *
               C154166 -
           ((C121540 * C153927 + (C116245 + C116246 + C116247) * C70415) *
                C153722 +
            ((C121554 + C121555 + C121556) * C153927 +
             (C115563 * C2272 + C116188 + C116188 + C115558 * C2282 +
              C152059 * C557 + C116189 + C116189 + C153972 * C581 +
              C152071 * C556 + C116190 + C116190 + C153965 * C580) *
                 C70415) *
                C154074) *
               C154167 +
           (((C152071 * C557 + C116191 + C116191 + C153965 * C581 +
              C152059 * C2272 + C116192 + C116192 + C153972 * C2282 +
              C115563 * C7665 + C116193 + C116193 + C115558 * C7673) *
                 C70415 +
             (C122373 + C122374 + C122375) * C153927) *
                C154074 +
            ((C116248 + C116249 + C116250) * C70415 +
             (C120555 + C120556 + C120557) * C153927) *
                C153722) *
               C2574) *
              C153767 * C154085 +
          ((((C116247 + C116246 + C116245) * C70415 + C121544 * C153927) *
                C154074 +
            ((C116244 + C116243 + C116242) * C70415 +
             (C117061 + C117062 + C117063) * C153927) *
                C153722) *
               C154167 -
           ((C116482 * C153927 + (C115637 + C115636 + C115635) * C70415) *
                C153722 +
            (C120227 * C153927 + (C115634 + C115633 + C115632) * C70415) *
                C154074) *
               C154166 -
           (((C115563 * C9165 + C117655 + C117655 + C115558 * C9171 +
              C152059 * C6157 + C117656 + C117656 + C153972 * C6169 +
              C152071 * C1487 + C117657 + C117657 + C153965 * C1497) *
                 C153927 +
             (C116253 + C116252 + C116251) * C70415) *
                C153722 +
            ((C120557 + C120556 + C120555) * C153927 +
             (C116250 + C116249 + C116248) * C70415) *
                C154074) *
               C2574) *
              C153767 * C153754)) /
        (p * q * std::sqrt(p + q));
    d2ee[134] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C152071 * C136 + C115566 + C115566 + C153965 * C152 +
              C152059 * C556 + C115567 + C115567 + C153972 * C580 +
              C115563 * C557 + C115568 + C115568 + C115558 * C581) *
                 C70415 +
             (C120244 + C120245 + C120246) * C153927) *
                C154074 +
            ((C115632 + C115633 + C115634) * C70415 + C120225 * C153927) *
                C153722) *
               C2058 -
           ((C121540 * C153927 + (C116245 + C116246 + C116247) * C70415) *
                C153722 +
            ((C121554 + C121555 + C121556) * C153927 +
             (C115563 * C2272 + C116188 + C116188 + C115558 * C2282 +
              C152059 * C557 + C116189 + C116189 + C153972 * C581 +
              C152071 * C556 + C116190 + C116190 + C153965 * C580) *
                 C70415) *
                C154074) *
               C153847) *
              C153767 * C1253 +
          ((((C116247 + C116246 + C116245) * C70415 + C121544 * C153927) *
                C154074 +
            ((C116244 + C116243 + C116242) * C70415 +
             (C117061 + C117062 + C117063) * C153927) *
                C153722) *
               C153847 -
           ((C116482 * C153927 + (C115637 + C115636 + C115635) * C70415) *
                C153722 +
            (C120227 * C153927 + (C115634 + C115633 + C115632) * C70415) *
                C154074) *
               C2058) *
              C153767 * C1254 +
          (((C115646 * C70415 + C120849 * C153927) * C154074 +
            ((C115640 + C115639 + C115638) * C70415 +
             (C116490 + C116491 + C116492) * C153927) *
                C153722) *
               C2058 -
           (((C115563 * C8529 + C117043 + C117043 + C115558 * C8531 +
              C152059 * C1486 + C117044 + C117044 + C153972 * C1496 +
              C152071 * C1084 + C117045 + C117045 + C153965 * C1096) *
                 C153927 +
             (C116731 + C116730 + C116729) * C70415) *
                C153722 +
            ((C117063 + C117062 + C117061) * C153927 + C116721 * C70415) *
                C154074) *
               C153847) *
              C153767 * C1255)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C152071 * C136 + C115566 + C115566 + C153965 * C152 +
              C152059 * C556 + C115567 + C115567 + C153972 * C580 +
              C115563 * C557 + C115568 + C115568 + C115558 * C581) *
                 C70415 +
             (C120244 + C120245 + C120246) * C153927) *
                C154074 +
            ((C115632 + C115633 + C115634) * C70415 + C120225 * C153927) *
                C153722) *
               C2058 -
           ((C121540 * C153927 + (C116245 + C116246 + C116247) * C70415) *
                C153722 +
            ((C121554 + C121555 + C121556) * C153927 +
             (C115563 * C2272 + C116188 + C116188 + C115558 * C2282 +
              C152059 * C557 + C116189 + C116189 + C153972 * C581 +
              C152071 * C556 + C116190 + C116190 + C153965 * C580) *
                 C70415) *
                C154074) *
               C153847) *
              C326 +
          ((((C121556 + C121555 + C121554) * C70415 +
             (C123360 + C123361 + C123362) * C153927) *
                C154074 +
            (C121544 * C70415 + (C121557 + C121558 + C121559) * C153927) *
                C153722) *
               C153847 -
           ((C120226 * C153927 + C120227 * C70415) * C153722 +
            ((C120247 + C120248 + C120249) * C153927 +
             (C120246 + C120245 + C120244) * C70415) *
                C154074) *
               C2058) *
              C327 +
          ((((C120249 + C120248 + C120247) * C70415 +
             (C122062 + C122063 + C122064) * C153927) *
                C154074 +
            (C120231 * C70415 + (C120250 + C120251 + C120252) * C153927) *
                C153722) *
               C2058 -
           (((C115563 * C31684 + C123348 + C123348 + C115558 * C31686 +
              C152059 * C4810 + C123349 + C123349 + C153972 * C4816 +
              C152071 * C4169 + C123350 + C123350 + C153965 * C4177) *
                 C153927 +
             (C121559 + C121558 + C121557) * C70415) *
                C153722 +
            ((C115563 * C29881 + C123351 + C123351 + C115558 * C29885 +
              C152059 * C4811 + C123352 + C123352 + C153972 * C4817 +
              C152071 * C4168 + C123353 + C123353 + C153965 * C4176) *
                 C153927 +
             (C123362 + C123361 + C123360) * C70415) *
                C154074) *
               C153847) *
              C328) *
         C153748) /
            (p * q * std::sqrt(p + q));
    d2ee[135] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
              C97199 + C97199 + C153969 * C580) *
                 C70415 +
             (C101439 + C101440) * C153927) *
                C154178 +
            ((C97252 + C97253) * C70415 + C101388 * C153927) * C154159 +
            C125307 * C154130) *
               C153783 * C154093 -
           (C126181 * C154130 +
            (C101394 * C153927 + C101395 * C70415) * C154159 +
            ((C101442 + C101441) * C153927 + (C101440 + C101439) * C70415) *
                C154178) *
               C153783 * C153819) *
              C154162 +
          (((C101388 * C70415 + C101389 * C153927) * C154178 +
            (C102070 * C70415 + C102071 * C153927) * C154159 +
            (C111246 * C70415 + (C97542 + C97543) * C153927) * C154130) *
               C153783 * C153819 -
           (C125308 * C154130 +
            (C98013 * C153927 + (C97255 + C97254) * C70415) * C154159 +
            (C101395 * C153927 + (C97253 + C97252) * C70415) * C154178) *
               C153783 * C154093) *
              C154163 +
          ((C125307 * C154178 +
            (C97263 * C70415 + C111246 * C153927) * C154159 +
            ((C97259 + C97258) * C70415 + (C98026 + C98027) * C153927) *
                C154130) *
               C153783 * C154093 -
           (((C97195 * C1916 + C97506 + C97506 + C153969 * C1926 +
              C97193 * C340 + C97507 + C97507 + C97191 * C364) *
                 C153927 +
             (C98027 + C98026) * C70415) *
                C154130 +
            ((C97543 + C97542) * C153927 + C98012 * C70415) * C154159 +
            C126181 * C154178) *
               C153783 * C153819) *
              C774)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
             C97199 + C97199 + C153969 * C580) *
                C154188 +
            (C101439 + C101440) * C154184 + C101451 * C154174 +
            C130665 * C154116) *
               C153712 * C153783 * C154093 -
           ((C103296 + C103295) * C154116 + C103282 * C154174 +
            (C101442 + C101441) * C154184 + (C101440 + C101439) * C154188) *
               C153712 * C153783 * C153819) *
              C154162 +
          ((C101388 * C154188 + C101389 * C154184 + C101453 * C154174 +
            (C101447 + C101448) * C154116) *
               C153712 * C153783 * C153819 -
           (C101452 * C154116 + C101394 * C154174 + C101395 * C154184 +
            (C97253 + C97252) * C154188) *
               C153712 * C153783 * C154093) *
              C154163 +
          ((C97262 * C154188 + C102070 * C154184 + C102071 * C154174 +
            (C101449 + C101450) * C154116) *
               C153712 * C153783 * C154093 -
           ((C97195 * C5557 + C101413 + C101413 + C153969 * C5563 +
             C97193 * C3085 + C101414 + C101414 + C97191 * C3093) *
                C154116 +
            (C101450 + C101449) * C154174 + C101412 * C154184 +
            C98013 * C154188) *
               C153712 * C153783 * C153819) *
              C774)) /
            (p * q * std::sqrt(p + q));
    d2ee[136] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
               C97199 + C97199 + C153969 * C580) *
                  C70415 +
              (C101439 + C101440) * C153927) *
                 C154178 +
             ((C97252 + C97253) * C70415 + C101388 * C153927) * C154159 +
             C125307 * C154130) *
                C154094 -
            (C126474 * C154130 +
             (C102759 * C153927 + (C97810 + C97811) * C70415) * C154159 +
             ((C102794 + C102795) * C153927 +
              (C97195 * C557 + C97756 + C97756 + C153969 * C581 +
               C97193 * C556 + C97757 + C97757 + C97191 * C580) *
                  C70415) *
                 C154178) *
                C153847) *
               C154093 +
           ((((C102795 + C102794) * C70415 + (C102793 + C102792) * C153927) *
                 C154178 +
             (C102770 * C70415 + C102771 * C153927) * C154159 +
             (C111928 * C70415 + (C102370 + C102371) * C153927) * C154130) *
                C153847 -
            (C126181 * C154130 +
             (C101394 * C153927 + C101395 * C70415) * C154159 +
             ((C101442 + C101441) * C153927 + (C101440 + C101439) * C70415) *
                 C154178) *
                C154094) *
               C153819) *
              C329 +
          (((((C97811 + C97810) * C70415 + C102770 * C153927) * C154178 +
             ((C97809 + C97808) * C70415 + C111928 * C153927) * C154159 +
             ((C97807 + C97806) * C70415 + (C98534 + C98535) * C153927) *
                 C154130) *
                C153847 -
            (C125308 * C154130 +
             (C98013 * C153927 + (C97255 + C97254) * C70415) * C154159 +
             (C101395 * C153927 + (C97253 + C97252) * C70415) * C154178) *
                C154094) *
               C154093 +
           (((C101388 * C70415 + C101389 * C153927) * C154178 +
             (C102070 * C70415 + C102071 * C153927) * C154159 +
             (C111246 * C70415 + (C97542 + C97543) * C153927) * C154130) *
                C154094 -
            (((C97195 * C3372 + C99716 + C99716 + C153969 * C3380 +
               C97193 * C1917 + C99717 + C99717 + C97191 * C1927) *
                  C153927 +
              (C98535 + C98534) * C70415) *
                 C154130 +
             ((C102371 + C102370) * C153927 + C111538 * C70415) * C154159 +
             (C102758 * C153927 + C102759 * C70415) * C154178) *
                C153847) *
               C153819) *
              C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
              C97199 + C97199 + C153969 * C580) *
                 C154188 +
             (C101439 + C101440) * C154184 + C101451 * C154174 +
             C130665 * C154116) *
                C153712 * C154094 -
            ((C104591 + C104590) * C154116 + C104577 * C154174 +
             (C102794 + C102795) * C154184 +
             (C97195 * C557 + C97756 + C97756 + C153969 * C581 + C97193 * C556 +
              C97757 + C97757 + C97191 * C580) *
                 C154188) *
                C153712 * C153847) *
               C154093 +
           (((C102795 + C102794) * C154188 + (C102793 + C102792) * C154184 +
             (C104590 + C104591) * C154174 +
             (C97193 * C5559 + C104585 + C104585 + C97191 * C5565 +
              C97195 * C28358 + C104584 + C104584 + C153969 * C28362) *
                 C154116) *
                C153712 * C153847 -
            ((C103296 + C103295) * C154116 + C103282 * C154174 +
             (C101442 + C101441) * C154184 + (C101440 + C101439) * C154188) *
                C153712 * C154094) *
               C153819) *
              C329 +
          ((((C97811 + C97810) * C154188 + C102770 * C154184 +
             C102771 * C154174 + (C102796 + C102797) * C154116) *
                C153712 * C153847 -
            (C101452 * C154116 + C101394 * C154174 + C101395 * C154184 +
             (C97253 + C97252) * C154188) *
                C153712 * C154094) *
               C154093 +
           ((C101388 * C154188 + C101389 * C154184 + C101453 * C154174 +
             (C101447 + C101448) * C154116) *
                C153712 * C154094 -
            ((C97195 * C28359 + C104582 + C104582 + C153969 * C28363 +
              C97193 * C5558 + C104583 + C104583 + C97191 * C5564) *
                 C154116 +
             (C102797 + C102796) * C154174 + C102758 * C154184 +
             C102759 * C154188) *
                C153712 * C153847) *
               C153819) *
              C153754)) /
            (p * q * std::sqrt(p + q));
    d2ee[137] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
              C97199 + C97199 + C153969 * C580) *
                 C70415 +
             (C101439 + C101440) * C153927) *
                C154178 +
            ((C97252 + C97253) * C70415 + C101388 * C153927) * C154159 +
            C125307 * C154130) *
               C153783 * C326 -
           ((C101412 * C153927 + C98013 * C70415) * C154130 +
            (C101394 * C153927 + C101395 * C70415) * C154159 +
            ((C101442 + C101441) * C153927 + (C101440 + C101439) * C70415) *
                C154178) *
               C153783 * C327 +
           ((C101451 * C70415 + (C101446 + C101445) * C153927) * C154178 +
            (C101389 * C70415 + C101453 * C153927) * C154159 +
            (C102071 * C70415 + (C101449 + C101450) * C153927) * C154130) *
               C153783 * C328) *
              C329 +
          (((C101388 * C70415 + C101389 * C153927) * C154178 +
            (C102070 * C70415 + C102071 * C153927) * C154159 +
            (C111246 * C70415 + (C97542 + C97543) * C153927) * C154130) *
               C153783 * C327 -
           (C125308 * C154130 +
            (C98013 * C153927 + (C97255 + C97254) * C70415) * C154159 +
            (C101395 * C153927 + (C97253 + C97252) * C70415) * C154178) *
               C153783 * C326 -
           (((C97195 * C4171 + C98860 + C98860 + C153969 * C4179 +
              C97193 * C1344 + C98861 + C98861 + C97191 * C1354) *
                 C153927 +
             (C97543 + C97542) * C70415) *
                C154130 +
            ((C101450 + C101449) * C153927 + C101412 * C70415) * C154159 +
            (C101452 * C153927 + C101394 * C70415) * C154178) *
               C153783 * C328) *
              C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
             C97199 + C97199 + C153969 * C580) *
                C70415 +
            (C101439 + C101440) * C153927) *
               C154178 +
           ((C97252 + C97253) * C70415 + C101388 * C153927) * C154159 +
           C125307 * C154130) *
              C153783 * C153767 * C130 -
          (C125308 * C154130 +
           (C98013 * C153927 + (C97255 + C97254) * C70415) * C154159 +
           (C101395 * C153927 + (C97253 + C97252) * C70415) * C154178) *
              C153783 * C153767 * C131 +
          (C125307 * C154178 + (C97263 * C70415 + C111246 * C153927) * C154159 +
           ((C97259 + C97258) * C70415 + (C98026 + C98027) * C153927) *
               C154130) *
              C153783 * C153767 * C132 -
          (((C97195 * C1086 + C98018 + C98018 + C153969 * C1098 +
             C97193 * C341 + C98019 + C98019 + C97191 * C365) *
                C153927 +
            (C97261 + C97260) * C70415) *
               C154130 +
           ((C98027 + C98026) * C153927 + C97264 * C70415) * C154159 +
           C125308 * C154178) *
              C153783 * C153767 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
              C97199 + C97199 + C153969 * C580) *
                 C70415 +
             (C101439 + C101440) * C153927) *
                C154178 +
            ((C97252 + C97253) * C70415 + C101388 * C153927) * C154159 +
            C125307 * C154130) *
               C549 -
           ((C111538 * C153927 + C98223 * C70415) * C154130 +
            (C102759 * C153927 + (C97810 + C97811) * C70415) * C154159 +
            ((C102794 + C102795) * C153927 +
             (C97195 * C557 + C97756 + C97756 + C153969 * C581 + C97193 * C556 +
              C97757 + C97757 + C97191 * C580) *
                 C70415) *
                C154178) *
               C550 +
           (((C97193 * C557 + C97758 + C97758 + C97191 * C581 + C97195 * C2272 +
              C97759 + C97759 + C153969 * C2282) *
                 C70415 +
             (C103607 + C103608) * C153927) *
                C154178 +
            ((C97812 + C97813) * C70415 + (C101776 + C101777) * C153927) *
                C154159 +
            ((C97814 + C97815) * C70415 + (C110952 + C110953) * C153927) *
                C154130) *
               C551) *
              C153767 * C329 +
          ((((C97811 + C97810) * C70415 + C102770 * C153927) * C154178 +
            ((C97809 + C97808) * C70415 + C111928 * C153927) * C154159 +
            ((C97807 + C97806) * C70415 + (C98534 + C98535) * C153927) *
                C154130) *
               C550 -
           (C125308 * C154130 +
            (C98013 * C153927 + (C97255 + C97254) * C70415) * C154159 +
            (C101395 * C153927 + (C97253 + C97252) * C70415) * C154178) *
               C549 -
           (((C97195 * C8529 + C99062 + C99062 + C153969 * C8531 +
              C97193 * C1486 + C99063 + C99063 + C97191 * C1496) *
                 C153927 +
             (C97817 + C97816) * C70415) *
                C154130 +
            ((C110953 + C110952) * C153927 + (C97815 + C97814) * C70415) *
                C154159 +
            ((C101777 + C101776) * C153927 + (C97813 + C97812) * C70415) *
                C154178) *
               C551) *
              C153767 * C153754)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
            C97199 + C97199 + C153969 * C580) *
               C154188 +
           (C101439 + C101440) * C154184 + C101451 * C154174 +
           (C101446 + C101445) * C154116) *
              C153712 * C153783 * C153767 * C130 -
          (C101452 * C154116 + C101394 * C154174 + C101395 * C154184 +
           (C97253 + C97252) * C154188) *
              C153712 * C153783 * C153767 * C131 +
          (C97262 * C154188 + C102070 * C154184 + C102071 * C154174 +
           (C101449 + C101450) * C154116) *
              C153712 * C153783 * C153767 * C132 -
          ((C97195 * C4171 + C98860 + C98860 + C153969 * C4179 +
            C97193 * C1344 + C98861 + C98861 + C97191 * C1354) *
               C154116 +
           (C97543 + C97542) * C154174 + C98012 * C154184 + C97265 * C154188) *
              C153712 * C153783 * C153767 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
             C97199 + C97199 + C153969 * C580) *
                C154188 +
            (C101439 + C101440) * C154184 + C101451 * C154174 +
            C130665 * C154116) *
               C153712 * C153783 * C326 -
           ((C103296 + C103295) * C154116 + C103282 * C154174 +
            (C101442 + C101441) * C154184 + (C101440 + C101439) * C154188) *
               C153712 * C153783 * C327 +
           (C101451 * C154188 + C130665 * C154184 +
            (C103295 + C103296) * C154174 +
            (C97193 * C4576 + C103290 + C103290 + C97191 * C4582 +
             C97195 * C28772 + C103289 + C103289 + C153969 * C28776) *
                C154116) *
               C153712 * C153783 * C328) *
              C329 +
          ((C101388 * C154188 + C101389 * C154184 + C101453 * C154174 +
            (C101447 + C101448) * C154116) *
               C153712 * C153783 * C327 -
           (C101452 * C154116 + C101394 * C154174 + C101395 * C154184 +
            (C97253 + C97252) * C154188) *
               C153712 * C153783 * C326 -
           ((C97195 * C28773 + C103287 + C103287 + C153969 * C28777 +
             C97193 * C4575 + C103288 + C103288 + C97191 * C4581) *
                C154116 +
            (C101448 + C101447) * C154174 + C101452 * C154184 +
            C101394 * C154188) *
               C153712 * C153783 * C328) *
              C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
             C97199 + C97199 + C153969 * C580) *
                C154188 +
            (C101439 + C101440) * C154184 + C101451 * C154174 +
            C130665 * C154116) *
               C153712 * C549 -
           ((C104591 + C104590) * C154116 + C104577 * C154174 +
            (C102794 + C102795) * C154184 +
            (C97195 * C557 + C97756 + C97756 + C153969 * C581 + C97193 * C556 +
             C97757 + C97757 + C97191 * C580) *
                C154188) *
               C153712 * C550 +
           ((C97193 * C557 + C97758 + C97758 + C97191 * C581 + C97195 * C2272 +
             C97759 + C97759 + C153969 * C2282) *
                C154188 +
            (C103607 + C103608) * C154184 + (C103609 + C103610) * C154174 +
            (C97193 * C4811 + C103598 + C103598 + C97191 * C4817 +
             C97195 * C29881 + C103597 + C103597 + C153969 * C29885) *
                C154116) *
               C153712 * C551) *
              C153767 * C329 +
          (((C97811 + C97810) * C154188 + C102770 * C154184 +
            C102771 * C154174 + (C102796 + C102797) * C154116) *
               C153712 * C550 -
           (C101452 * C154116 + C101394 * C154174 + C101395 * C154184 +
            (C97253 + C97252) * C154188) *
               C153712 * C549 -
           ((C97195 * C31684 + C103595 + C103595 + C153969 * C31686 +
             C97193 * C4810 + C103596 + C103596 + C97191 * C4816) *
                C154116 +
            (C101779 + C101778) * C154174 + (C101777 + C101776) * C154184 +
            (C97813 + C97812) * C154188) *
               C153712 * C551) *
              C153767 * C153754)) /
            (p * q * std::sqrt(p + q));
    d2ee[138] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
              C97199 + C97199 + C153969 * C580) *
                 C70415 +
             (C101439 + C101440) * C153927) *
                C154178 +
            ((C97252 + C97253) * C70415 + C101388 * C153927) * C154159 +
            C125307 * C154130) *
               C154094 -
           (C126474 * C154130 +
            (C102759 * C153927 + (C97810 + C97811) * C70415) * C154159 +
            ((C102794 + C102795) * C153927 +
             (C97195 * C557 + C97756 + C97756 + C153969 * C581 + C97193 * C556 +
              C97757 + C97757 + C97191 * C580) *
                 C70415) *
                C154178) *
               C153847) *
              C153767 * C154162 +
          ((((C97811 + C97810) * C70415 + C102770 * C153927) * C154178 +
            ((C97809 + C97808) * C70415 + C111928 * C153927) * C154159 +
            ((C97807 + C97806) * C70415 + (C98534 + C98535) * C153927) *
                C154130) *
               C153847 -
           (C125308 * C154130 +
            (C98013 * C153927 + (C97255 + C97254) * C70415) * C154159 +
            (C101395 * C153927 + (C97253 + C97252) * C70415) * C154178) *
               C154094) *
              C153767 * C154163 +
          ((C125307 * C154178 +
            (C97263 * C70415 + C111246 * C153927) * C154159 +
            ((C97259 + C97258) * C70415 + (C98026 + C98027) * C153927) *
                C154130) *
               C154094 -
           (((C97195 * C1485 + C98516 + C98516 + C153969 * C1495 +
              C97193 * C1085 + C98517 + C98517 + C97191 * C1097) *
                 C153927 +
             (C98237 + C98236) * C70415) *
                C154130 +
            ((C98535 + C98534) * C153927 + C98222 * C70415) * C154159 +
            C126474 * C154178) *
               C153847) *
              C153767 * C774)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
             C97199 + C97199 + C153969 * C580) *
                C154188 +
            (C101439 + C101440) * C154184 + C101451 * C154174 +
            C130665 * C154116) *
               C153712 * C154094 -
           ((C104591 + C104590) * C154116 + C104577 * C154174 +
            (C102794 + C102795) * C154184 +
            (C97195 * C557 + C97756 + C97756 + C153969 * C581 + C97193 * C556 +
             C97757 + C97757 + C97191 * C580) *
                C154188) *
               C153712 * C153847) *
              C153767 * C154162 +
          (((C97811 + C97810) * C154188 + C102770 * C154184 +
            C102771 * C154174 + (C102796 + C102797) * C154116) *
               C153712 * C153847 -
           (C101452 * C154116 + C101394 * C154174 + C101395 * C154184 +
            (C97253 + C97252) * C154188) *
               C153712 * C154094) *
              C153767 * C154163 +
          ((C97262 * C154188 + C102070 * C154184 + C102071 * C154174 +
            (C101449 + C101450) * C154116) *
               C153712 * C154094 -
           ((C97195 * C4809 + C102778 + C102778 + C153969 * C4815 +
             C97193 * C4170 + C102779 + C102779 + C97191 * C4178) *
                C154116 +
            (C102371 + C102370) * C154174 + C111538 * C154184 +
            C98223 * C154188) *
               C153712 * C153847) *
              C153767 * C774)) /
            (p * q * std::sqrt(p + q));
    d2ee[139] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
             C97199 + C97199 + C153969 * C580) *
                C70415 +
            (C101439 + C101440) * C153927) *
               C154178 +
           ((C97252 + C97253) * C70415 + C101388 * C153927) * C154159 +
           C125307 * C154130) *
              C153783 * C153767 * C130 -
          (C125308 * C154130 +
           (C98013 * C153927 + (C97255 + C97254) * C70415) * C154159 +
           (C101395 * C153927 + (C97253 + C97252) * C70415) * C154178) *
              C153783 * C153767 * C131 +
          (C125307 * C154178 + (C97263 * C70415 + C111246 * C153927) * C154159 +
           ((C97259 + C97258) * C70415 + (C98026 + C98027) * C153927) *
               C154130) *
              C153783 * C153767 * C132 -
          (((C97195 * C1086 + C98018 + C98018 + C153969 * C1098 +
             C97193 * C341 + C98019 + C98019 + C97191 * C365) *
                C153927 +
            (C97261 + C97260) * C70415) *
               C154130 +
           ((C98027 + C98026) * C153927 + C97264 * C70415) * C154159 +
           C125308 * C154178) *
              C153783 * C153767 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
              C97199 + C97199 + C153969 * C580) *
                 C70415 +
             (C101439 + C101440) * C153927) *
                C154178 +
            ((C97252 + C97253) * C70415 + C101388 * C153927) * C154159 +
            C125307 * C154130) *
               C153783 * C326 -
           ((C101412 * C153927 + C98013 * C70415) * C154130 +
            (C101394 * C153927 + C101395 * C70415) * C154159 +
            ((C101442 + C101441) * C153927 + (C101440 + C101439) * C70415) *
                C154178) *
               C153783 * C327 +
           ((C101451 * C70415 + (C101446 + C101445) * C153927) * C154178 +
            (C101389 * C70415 + C101453 * C153927) * C154159 +
            (C102071 * C70415 + (C101449 + C101450) * C153927) * C154130) *
               C153783 * C328) *
              C329 +
          (((C101388 * C70415 + C101389 * C153927) * C154178 +
            (C102070 * C70415 + C102071 * C153927) * C154159 +
            (C111246 * C70415 + (C97542 + C97543) * C153927) * C154130) *
               C153783 * C327 -
           (C125308 * C154130 +
            (C98013 * C153927 + (C97255 + C97254) * C70415) * C154159 +
            (C101395 * C153927 + (C97253 + C97252) * C70415) * C154178) *
               C153783 * C326 -
           (((C97195 * C4171 + C98860 + C98860 + C153969 * C4179 +
              C97193 * C1344 + C98861 + C98861 + C97191 * C1354) *
                 C153927 +
             (C97543 + C97542) * C70415) *
                C154130 +
            ((C101450 + C101449) * C153927 + C101412 * C70415) * C154159 +
            (C101452 * C153927 + C101394 * C70415) * C154178) *
               C153783 * C328) *
              C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
            C97199 + C97199 + C153969 * C580) *
               C154188 +
           (C101439 + C101440) * C154184 + C101451 * C154174 +
           (C101446 + C101445) * C154116) *
              C153712 * C153783 * C153767 * C130 -
          (C101452 * C154116 + C101394 * C154174 + C101395 * C154184 +
           (C97253 + C97252) * C154188) *
              C153712 * C153783 * C153767 * C131 +
          (C97262 * C154188 + C102070 * C154184 + C102071 * C154174 +
           (C101449 + C101450) * C154116) *
              C153712 * C153783 * C153767 * C132 -
          ((C97195 * C4171 + C98860 + C98860 + C153969 * C4179 +
            C97193 * C1344 + C98861 + C98861 + C97191 * C1354) *
               C154116 +
           (C97543 + C97542) * C154174 + C98012 * C154184 + C97265 * C154188) *
              C153712 * C153783 * C153767 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
             C97199 + C97199 + C153969 * C580) *
                C154188 +
            (C101439 + C101440) * C154184 + C101451 * C154174 +
            C130665 * C154116) *
               C153712 * C153783 * C326 -
           ((C103296 + C103295) * C154116 + C103282 * C154174 +
            (C101442 + C101441) * C154184 + (C101440 + C101439) * C154188) *
               C153712 * C153783 * C327 +
           (C101451 * C154188 + C130665 * C154184 +
            (C103295 + C103296) * C154174 +
            (C97193 * C4576 + C103290 + C103290 + C97191 * C4582 +
             C97195 * C28772 + C103289 + C103289 + C153969 * C28776) *
                C154116) *
               C153712 * C153783 * C328) *
              C329 +
          ((C101388 * C154188 + C101389 * C154184 + C101453 * C154174 +
            (C101447 + C101448) * C154116) *
               C153712 * C153783 * C327 -
           (C101452 * C154116 + C101394 * C154174 + C101395 * C154184 +
            (C97253 + C97252) * C154188) *
               C153712 * C153783 * C326 -
           ((C97195 * C28773 + C103287 + C103287 + C153969 * C28777 +
             C97193 * C4575 + C103288 + C103288 + C97191 * C4581) *
                C154116 +
            (C101448 + C101447) * C154174 + C101452 * C154184 +
            C101394 * C154188) *
               C153712 * C153783 * C328) *
              C153754)) /
            (p * q * std::sqrt(p + q));
    d2ee[140] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
              C97199 + C97199 + C153969 * C580) *
                 C70415 +
             (C101439 + C101440) * C153927) *
                C154178 +
            ((C97252 + C97253) * C70415 + C101388 * C153927) * C154159 +
            C125307 * C154130) *
               C153783 * C154164 -
           (C126181 * C154130 +
            (C101394 * C153927 + C101395 * C70415) * C154159 +
            ((C101442 + C101441) * C153927 + (C101440 + C101439) * C70415) *
                C154178) *
               C153783 * C154165 +
           ((C101451 * C70415 + (C101446 + C101445) * C153927) * C154178 +
            (C101389 * C70415 + C101453 * C153927) * C154159 +
            (C102071 * C70415 + (C101449 + C101450) * C153927) * C154130) *
               C153783 * C1629) *
              C154085 +
          (((C101388 * C70415 + C101389 * C153927) * C154178 +
            (C102070 * C70415 + C102071 * C153927) * C154159 +
            (C111246 * C70415 + (C97542 + C97543) * C153927) * C154130) *
               C153783 * C154165 -
           (C125308 * C154130 +
            (C98013 * C153927 + (C97255 + C97254) * C70415) * C154159 +
            (C101395 * C153927 + (C97253 + C97252) * C70415) * C154178) *
               C153783 * C154164 -
           (((C97195 * C4171 + C98860 + C98860 + C153969 * C4179 +
              C97193 * C1344 + C98861 + C98861 + C97191 * C1354) *
                 C153927 +
             (C97543 + C97542) * C70415) *
                C154130 +
            ((C101450 + C101449) * C153927 + C101412 * C70415) * C154159 +
            (C101452 * C153927 + C101394 * C70415) * C154178) *
               C153783 * C1629) *
              C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
             C97199 + C97199 + C153969 * C580) *
                C154188 +
            (C101439 + C101440) * C154184 + C101451 * C154174 +
            C130665 * C154116) *
               C153712 * C153783 * C154164 -
           (C131830 * C154116 + C103282 * C154174 +
            (C101442 + C101441) * C154184 + (C101440 + C101439) * C154188) *
               C153712 * C153783 * C154165 +
           (C101451 * C154188 + C130665 * C154184 +
            (C103295 + C103296) * C154174 + (C131841 + C131842) * C154116) *
               C153712 * C153783 * C1629) *
              C154085 +
          ((C101388 * C154188 + C101389 * C154184 + C101453 * C154174 +
            (C101447 + C101448) * C154116) *
               C153712 * C153783 * C154165 -
           (C101452 * C154116 + C101394 * C154174 + C101395 * C154184 +
            (C97253 + C97252) * C154188) *
               C153712 * C153783 * C154164 -
           ((C97195 * C28773 + C103287 + C103287 + C153969 * C28777 +
             C97193 * C4575 + C103288 + C103288 + C97191 * C4581) *
                C154116 +
            (C101448 + C101447) * C154174 + C101452 * C154184 +
            C101394 * C154188) *
               C153712 * C153783 * C1629) *
              C153754)) /
            (p * q * std::sqrt(p + q));
    d2ee[141] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
              C97199 + C97199 + C153969 * C580) *
                 C70415 +
             (C101439 + C101440) * C153927) *
                C154178 +
            ((C97252 + C97253) * C70415 + C101388 * C153927) * C154159 +
            C125307 * C154130) *
               C154094 -
           (C126474 * C154130 +
            (C102759 * C153927 + (C97810 + C97811) * C70415) * C154159 +
            ((C102794 + C102795) * C153927 +
             (C97195 * C557 + C97756 + C97756 + C153969 * C581 + C97193 * C556 +
              C97757 + C97757 + C97191 * C580) *
                 C70415) *
                C154178) *
               C153847) *
              C154164 +
          ((((C102795 + C102794) * C70415 + (C102793 + C102792) * C153927) *
                C154178 +
            (C102770 * C70415 + C102771 * C153927) * C154159 +
            (C111928 * C70415 + (C102370 + C102371) * C153927) * C154130) *
               C153847 -
           (C126181 * C154130 +
            (C101394 * C153927 + C101395 * C70415) * C154159 +
            ((C101442 + C101441) * C153927 + (C101440 + C101439) * C70415) *
                C154178) *
               C154094) *
              C154165 +
          (((C101451 * C70415 + (C101446 + C101445) * C153927) * C154178 +
            (C101389 * C70415 + C101453 * C153927) * C154159 +
            (C102071 * C70415 + (C101449 + C101450) * C153927) * C154130) *
               C154094 -
           (((C97195 * C4809 + C102778 + C102778 + C153969 * C4815 +
              C97193 * C4170 + C102779 + C102779 + C97191 * C4178) *
                 C153927 +
             (C102371 + C102370) * C70415) *
                C154130 +
            ((C102797 + C102796) * C153927 + C102758 * C70415) * C154159 +
            ((C104591 + C104590) * C153927 + C104577 * C70415) * C154178) *
               C153847) *
              C1629) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
             C97199 + C97199 + C153969 * C580) *
                C154188 +
            (C101439 + C101440) * C154184 + C101451 * C154174 +
            C130665 * C154116) *
               C153712 * C154094 -
           (C132695 * C154116 + C104577 * C154174 +
            (C102794 + C102795) * C154184 +
            (C97195 * C557 + C97756 + C97756 + C153969 * C581 + C97193 * C556 +
             C97757 + C97757 + C97191 * C580) *
                C154188) *
               C153712 * C153847) *
              C154164 +
          (((C102795 + C102794) * C154188 + (C102793 + C102792) * C154184 +
            (C104590 + C104591) * C154174 + (C132706 + C132707) * C154116) *
               C153712 * C153847 -
           (C131830 * C154116 + C103282 * C154174 +
            (C101442 + C101441) * C154184 + (C101440 + C101439) * C154188) *
               C153712 * C154094) *
              C154165 +
          ((C101451 * C154188 + C130665 * C154184 +
            (C103295 + C103296) * C154174 + (C131841 + C131842) * C154116) *
               C153712 * C154094 -
           ((C97195 * C29125 + C132700 + C132700 + C153969 * C29127 +
             C97193 * C28772 + C132701 + C132701 + C97191 * C28776) *
                C154116 +
            (C132707 + C132706) * C154174 + C132695 * C154184 +
            C104577 * C154188) *
               C153712 * C153847) *
              C1629) *
         C153748) /
            (p * q * std::sqrt(p + q));
    d2ee[142] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
             C97199 + C97199 + C153969 * C580) *
                C70415 +
            (C101439 + C101440) * C153927) *
               C154178 +
           ((C97252 + C97253) * C70415 + C101388 * C153927) * C154159 +
           C125307 * C154130) *
              C153783 * C1338 -
          (C126181 * C154130 +
           (C101394 * C153927 + C101395 * C70415) * C154159 +
           ((C101442 + C101441) * C153927 + (C101440 + C101439) * C70415) *
               C154178) *
              C153783 * C1339 +
          ((C101451 * C70415 + (C101446 + C101445) * C153927) * C154178 +
           (C101389 * C70415 + C101453 * C153927) * C154159 +
           (C102071 * C70415 + (C101449 + C101450) * C153927) * C154130) *
              C153783 * C1340 -
          (((C97195 * C5557 + C101413 + C101413 + C153969 * C5563 +
             C97193 * C3085 + C101414 + C101414 + C97191 * C3093) *
                C153927 +
            (C101450 + C101449) * C70415) *
               C154130 +
           ((C101448 + C101447) * C153927 + C101452 * C70415) * C154159 +
           ((C103296 + C103295) * C153927 + C103282 * C70415) * C154178) *
              C153783 * C1341) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
              C97199 + C97199 + C153969 * C580) *
                 C70415 +
             (C101439 + C101440) * C153927) *
                C154178 +
            ((C97252 + C97253) * C70415 + C101388 * C153927) * C154159 +
            C125307 * C154130) *
               C153783 * C1251 -
           (C126181 * C154130 +
            (C101394 * C153927 + C101395 * C70415) * C154159 +
            ((C101442 + C101441) * C153927 + (C101440 + C101439) * C70415) *
                C154178) *
               C153783 * C153819) *
              C1253 +
          (((C101388 * C70415 + C101389 * C153927) * C154178 +
            (C102070 * C70415 + C102071 * C153927) * C154159 +
            (C111246 * C70415 + (C97542 + C97543) * C153927) * C154130) *
               C153783 * C153819 -
           (C125308 * C154130 +
            (C98013 * C153927 + (C97255 + C97254) * C70415) * C154159 +
            (C101395 * C153927 + (C97253 + C97252) * C70415) * C154178) *
               C153783 * C1251) *
              C1254 +
          ((C125307 * C154178 +
            (C97263 * C70415 + C111246 * C153927) * C154159 +
            ((C97259 + C97258) * C70415 + (C98026 + C98027) * C153927) *
                C154130) *
               C153783 * C1251 -
           (((C97195 * C1916 + C97506 + C97506 + C153969 * C1926 +
              C97193 * C340 + C97507 + C97507 + C97191 * C364) *
                 C153927 +
             (C98027 + C98026) * C70415) *
                C154130 +
            ((C97543 + C97542) * C153927 + C98012 * C70415) * C154159 +
            C126181 * C154178) *
               C153783 * C153819) *
              C1255)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
              C97199 + C97199 + C153969 * C580) *
                 C70415 +
             (C101439 + C101440) * C153927) *
                C154178 +
            ((C97252 + C97253) * C70415 + C101388 * C153927) * C154159 +
            C125307 * C154130) *
               C549 -
           (C126474 * C154130 +
            (C102759 * C153927 + (C97810 + C97811) * C70415) * C154159 +
            ((C102794 + C102795) * C153927 +
             (C97195 * C557 + C97756 + C97756 + C153969 * C581 + C97193 * C556 +
              C97757 + C97757 + C97191 * C580) *
                 C70415) *
                C154178) *
               C550 +
           (((C97193 * C557 + C97758 + C97758 + C97191 * C581 + C97195 * C2272 +
              C97759 + C97759 + C153969 * C2282) *
                 C70415 +
             (C103607 + C103608) * C153927) *
                C154178 +
            ((C97812 + C97813) * C70415 + (C101776 + C101777) * C153927) *
                C154159 +
            ((C97814 + C97815) * C70415 + (C110952 + C110953) * C153927) *
                C154130) *
               C551) *
              C1251 +
          ((((C102795 + C102794) * C70415 + (C102793 + C102792) * C153927) *
                C154178 +
            (C102770 * C70415 + C102771 * C153927) * C154159 +
            (C111928 * C70415 + (C102370 + C102371) * C153927) * C154130) *
               C550 -
           (C126181 * C154130 +
            (C101394 * C153927 + C101395 * C70415) * C154159 +
            ((C101442 + C101441) * C153927 + (C101440 + C101439) * C70415) *
                C154178) *
               C549 -
           (((C97195 * C6156 + C101760 + C101760 + C153969 * C6168 +
              C97193 * C3371 + C101761 + C101761 + C97191 * C3379) *
                 C153927 +
             (C110953 + C110952) * C70415) *
                C154130 +
            ((C101779 + C101778) * C153927 + (C101777 + C101776) * C70415) *
                C154159 +
            ((C103610 + C103609) * C153927 + (C103608 + C103607) * C70415) *
                C154178) *
               C551) *
              C153819) *
         C153748) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
             C97199 + C97199 + C153969 * C580) *
                C154188 +
            (C101439 + C101440) * C154184 + C101451 * C154174 +
            C130665 * C154116) *
               C153712 * C153783 * C1251 -
           ((C103296 + C103295) * C154116 + C103282 * C154174 +
            (C101442 + C101441) * C154184 + (C101440 + C101439) * C154188) *
               C153712 * C153783 * C153819) *
              C1253 +
          ((C101388 * C154188 + C101389 * C154184 + C101453 * C154174 +
            (C101447 + C101448) * C154116) *
               C153712 * C153783 * C153819 -
           (C101452 * C154116 + C101394 * C154174 + C101395 * C154184 +
            (C97253 + C97252) * C154188) *
               C153712 * C153783 * C1251) *
              C1254 +
          ((C97262 * C154188 + C102070 * C154184 + C102071 * C154174 +
            (C101449 + C101450) * C154116) *
               C153712 * C153783 * C1251 -
           ((C97195 * C5557 + C101413 + C101413 + C153969 * C5563 +
             C97193 * C3085 + C101414 + C101414 + C97191 * C3093) *
                C154116 +
            (C101450 + C101449) * C154174 + C101412 * C154184 +
            C98013 * C154188) *
               C153712 * C153783 * C153819) *
              C1255)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
            C97199 + C97199 + C153969 * C580) *
               C154188 +
           (C101439 + C101440) * C154184 + C101451 * C154174 +
           C130665 * C154116) *
              C153712 * C153783 * C1338 -
          (C131830 * C154116 + C103282 * C154174 +
           (C101442 + C101441) * C154184 + (C101440 + C101439) * C154188) *
              C153712 * C153783 * C1339 +
          (C101451 * C154188 + C130665 * C154184 +
           (C103295 + C103296) * C154174 + (C131841 + C131842) * C154116) *
              C153712 * C153783 * C1340 -
          ((C97195 * C29545 + C131835 + C131835 + C153969 * C29547 +
            C97193 * C28218 + C131836 + C131836 + C97191 * C28222) *
               C154116 +
           (C131842 + C131841) * C154174 + C131830 * C154184 +
           C103282 * C154188) *
              C153712 * C153783 * C1341) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
             C97199 + C97199 + C153969 * C580) *
                C154188 +
            (C101439 + C101440) * C154184 + C101451 * C154174 +
            C130665 * C154116) *
               C153712 * C549 -
           ((C104591 + C104590) * C154116 + C104577 * C154174 +
            (C102794 + C102795) * C154184 +
            (C97195 * C557 + C97756 + C97756 + C153969 * C581 + C97193 * C556 +
             C97757 + C97757 + C97191 * C580) *
                C154188) *
               C153712 * C550 +
           ((C97193 * C557 + C97758 + C97758 + C97191 * C581 + C97195 * C2272 +
             C97759 + C97759 + C153969 * C2282) *
                C154188 +
            (C103607 + C103608) * C154184 + (C103609 + C103610) * C154174 +
            (C132047 + C132048) * C154116) *
               C153712 * C551) *
              C1251 +
          (((C102795 + C102794) * C154188 + (C102793 + C102792) * C154184 +
            (C104590 + C104591) * C154174 +
            (C97193 * C5559 + C104585 + C104585 + C97191 * C5565 +
             C97195 * C28358 + C104584 + C104584 + C153969 * C28362) *
                C154116) *
               C153712 * C550 -
           (C131830 * C154116 + C103282 * C154174 +
            (C101442 + C101441) * C154184 + (C101440 + C101439) * C154188) *
               C153712 * C549 -
           ((C97195 * C29880 + C132041 + C132041 + C153969 * C29884 +
             C97193 * C28358 + C132042 + C132042 + C97191 * C28362) *
                C154116 +
            (C132048 + C132047) * C154174 + (C103610 + C103609) * C154184 +
            (C103608 + C103607) * C154188) *
               C153712 * C551) *
              C153819) *
         C153748) /
            (p * q * std::sqrt(p + q));
    d2ee[143] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
               C97199 + C97199 + C153969 * C580) *
                  C70415 +
              (C101439 + C101440) * C153927) *
                 C154178 +
             ((C97252 + C97253) * C70415 + C101388 * C153927) * C154159 +
             C125307 * C154130) *
                C154094 -
            (C126474 * C154130 +
             (C102759 * C153927 + (C97810 + C97811) * C70415) * C154159 +
             ((C102794 + C102795) * C153927 +
              (C97195 * C557 + C97756 + C97756 + C153969 * C581 +
               C97193 * C556 + C97757 + C97757 + C97191 * C580) *
                  C70415) *
                 C154178) *
                C153847) *
               C1251 +
           ((((C102795 + C102794) * C70415 + (C102793 + C102792) * C153927) *
                 C154178 +
             (C102770 * C70415 + C102771 * C153927) * C154159 +
             (C111928 * C70415 + (C102370 + C102371) * C153927) * C154130) *
                C153847 -
            (C126181 * C154130 +
             (C101394 * C153927 + C101395 * C70415) * C154159 +
             ((C101442 + C101441) * C153927 + (C101440 + C101439) * C70415) *
                 C154178) *
                C154094) *
               C153819) *
              C154085 +
          (((((C97811 + C97810) * C70415 + C102770 * C153927) * C154178 +
             ((C97809 + C97808) * C70415 + C111928 * C153927) * C154159 +
             ((C97807 + C97806) * C70415 + (C98534 + C98535) * C153927) *
                 C154130) *
                C153847 -
            (C125308 * C154130 +
             (C98013 * C153927 + (C97255 + C97254) * C70415) * C154159 +
             (C101395 * C153927 + (C97253 + C97252) * C70415) * C154178) *
                C154094) *
               C1251 +
           (((C101388 * C70415 + C101389 * C153927) * C154178 +
             (C102070 * C70415 + C102071 * C153927) * C154159 +
             (C111246 * C70415 + (C97542 + C97543) * C153927) * C154130) *
                C154094 -
            (((C97195 * C3372 + C99716 + C99716 + C153969 * C3380 +
               C97193 * C1917 + C99717 + C99717 + C97191 * C1927) *
                  C153927 +
              (C98535 + C98534) * C70415) *
                 C154130 +
             ((C102371 + C102370) * C153927 + C111538 * C70415) * C154159 +
             (C102758 * C153927 + C102759 * C70415) * C154178) *
                C153847) *
               C153819) *
              C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
              C97199 + C97199 + C153969 * C580) *
                 C154188 +
             (C101439 + C101440) * C154184 + C101451 * C154174 +
             C130665 * C154116) *
                C153712 * C154094 -
            ((C104591 + C104590) * C154116 + C104577 * C154174 +
             (C102794 + C102795) * C154184 +
             (C97195 * C557 + C97756 + C97756 + C153969 * C581 + C97193 * C556 +
              C97757 + C97757 + C97191 * C580) *
                 C154188) *
                C153712 * C153847) *
               C1251 +
           (((C102795 + C102794) * C154188 + (C102793 + C102792) * C154184 +
             (C104590 + C104591) * C154174 +
             (C97193 * C5559 + C104585 + C104585 + C97191 * C5565 +
              C97195 * C28358 + C104584 + C104584 + C153969 * C28362) *
                 C154116) *
                C153712 * C153847 -
            (C131830 * C154116 + C103282 * C154174 +
             (C101442 + C101441) * C154184 + (C101440 + C101439) * C154188) *
                C153712 * C154094) *
               C153819) *
              C154085 +
          ((((C97811 + C97810) * C154188 + C102770 * C154184 +
             C102771 * C154174 + (C102796 + C102797) * C154116) *
                C153712 * C153847 -
            (C101452 * C154116 + C101394 * C154174 + C101395 * C154184 +
             (C97253 + C97252) * C154188) *
                C153712 * C154094) *
               C1251 +
           ((C101388 * C154188 + C101389 * C154184 + C101453 * C154174 +
             (C101447 + C101448) * C154116) *
                C153712 * C154094 -
            ((C97195 * C28359 + C104582 + C104582 + C153969 * C28363 +
              C97193 * C5558 + C104583 + C104583 + C97191 * C5564) *
                 C154116 +
             (C102797 + C102796) * C154174 + C102758 * C154184 +
             C102759 * C154188) *
                C153712 * C153847) *
               C153819) *
              C153754)) /
            (p * q * std::sqrt(p + q));
    d2ee[144] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
              C97199 + C97199 + C153969 * C580) *
                 C70415 +
             (C101439 + C101440) * C153927) *
                C154178 +
            ((C97252 + C97253) * C70415 + C101388 * C153927) * C154159 +
            C125307 * C154130) *
               C153783 * C1251 -
           (C126181 * C154130 +
            (C101394 * C153927 + C101395 * C70415) * C154159 +
            ((C101442 + C101441) * C153927 + (C101440 + C101439) * C70415) *
                C154178) *
               C153783 * C153819) *
              C1253 +
          (((C101388 * C70415 + C101389 * C153927) * C154178 +
            (C102070 * C70415 + C102071 * C153927) * C154159 +
            (C111246 * C70415 + (C97542 + C97543) * C153927) * C154130) *
               C153783 * C153819 -
           (C125308 * C154130 +
            (C98013 * C153927 + (C97255 + C97254) * C70415) * C154159 +
            (C101395 * C153927 + (C97253 + C97252) * C70415) * C154178) *
               C153783 * C1251) *
              C1254 +
          ((C125307 * C154178 +
            (C97263 * C70415 + C111246 * C153927) * C154159 +
            ((C97259 + C97258) * C70415 + (C98026 + C98027) * C153927) *
                C154130) *
               C153783 * C1251 -
           (((C97195 * C1916 + C97506 + C97506 + C153969 * C1926 +
              C97193 * C340 + C97507 + C97507 + C97191 * C364) *
                 C153927 +
             (C98027 + C98026) * C70415) *
                C154130 +
            ((C97543 + C97542) * C153927 + C98012 * C70415) * C154159 +
            C126181 * C154178) *
               C153783 * C153819) *
              C1255)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
             C97199 + C97199 + C153969 * C580) *
                C70415 +
            (C101439 + C101440) * C153927) *
               C154178 +
           ((C97252 + C97253) * C70415 + C101388 * C153927) * C154159 +
           C125307 * C154130) *
              C153783 * C1338 -
          (C126181 * C154130 +
           (C101394 * C153927 + C101395 * C70415) * C154159 +
           ((C101442 + C101441) * C153927 + (C101440 + C101439) * C70415) *
               C154178) *
              C153783 * C1339 +
          ((C101451 * C70415 + (C101446 + C101445) * C153927) * C154178 +
           (C101389 * C70415 + C101453 * C153927) * C154159 +
           (C102071 * C70415 + (C101449 + C101450) * C153927) * C154130) *
              C153783 * C1340 -
          (((C97195 * C5557 + C101413 + C101413 + C153969 * C5563 +
             C97193 * C3085 + C101414 + C101414 + C97191 * C3093) *
                C153927 +
            (C101450 + C101449) * C70415) *
               C154130 +
           ((C101448 + C101447) * C153927 + C101452 * C70415) * C154159 +
           ((C103296 + C103295) * C153927 + C103282 * C70415) * C154178) *
              C153783 * C1341) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
             C97199 + C97199 + C153969 * C580) *
                C154188 +
            (C101439 + C101440) * C154184 + C101451 * C154174 +
            C130665 * C154116) *
               C153712 * C153783 * C1251 -
           ((C103296 + C103295) * C154116 + C103282 * C154174 +
            (C101442 + C101441) * C154184 + (C101440 + C101439) * C154188) *
               C153712 * C153783 * C153819) *
              C1253 +
          ((C101388 * C154188 + C101389 * C154184 + C101453 * C154174 +
            (C101447 + C101448) * C154116) *
               C153712 * C153783 * C153819 -
           (C101452 * C154116 + C101394 * C154174 + C101395 * C154184 +
            (C97253 + C97252) * C154188) *
               C153712 * C153783 * C1251) *
              C1254 +
          ((C97262 * C154188 + C102070 * C154184 + C102071 * C154174 +
            (C101449 + C101450) * C154116) *
               C153712 * C153783 * C1251 -
           ((C97195 * C5557 + C101413 + C101413 + C153969 * C5563 +
             C97193 * C3085 + C101414 + C101414 + C97191 * C3093) *
                C154116 +
            (C101450 + C101449) * C154174 + C101412 * C154184 +
            C98013 * C154188) *
               C153712 * C153783 * C153819) *
              C1255)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
            C97199 + C97199 + C153969 * C580) *
               C154188 +
           (C101439 + C101440) * C154184 + C101451 * C154174 +
           C130665 * C154116) *
              C153712 * C153783 * C1338 -
          (C131830 * C154116 + C103282 * C154174 +
           (C101442 + C101441) * C154184 + (C101440 + C101439) * C154188) *
              C153712 * C153783 * C1339 +
          (C101451 * C154188 + C130665 * C154184 +
           (C103295 + C103296) * C154174 + (C131841 + C131842) * C154116) *
              C153712 * C153783 * C1340 -
          ((C97195 * C29545 + C131835 + C131835 + C153969 * C29547 +
            C97193 * C28218 + C131836 + C131836 + C97191 * C28222) *
               C154116 +
           (C131842 + C131841) * C154174 + C131830 * C154184 +
           C103282 * C154188) *
              C153712 * C153783 * C1341) *
         C153748) /
            (p * q * std::sqrt(p + q));
    d2ee[145] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
               C97199 + C97199 + C153969 * C580) *
                  C70415 +
              (C101439 + C101440) * C153927) *
                 C154178 +
             ((C97252 + C97253) * C70415 + C101388 * C153927) * C154159 +
             C125307 * C154130) *
                C2058 -
            (C126474 * C154130 +
             (C102759 * C153927 + (C97810 + C97811) * C70415) * C154159 +
             ((C102794 + C102795) * C153927 +
              (C97195 * C557 + C97756 + C97756 + C153969 * C581 +
               C97193 * C556 + C97757 + C97757 + C97191 * C580) *
                  C70415) *
                 C154178) *
                C153847) *
               C154093 +
           ((((C102795 + C102794) * C70415 + (C102793 + C102792) * C153927) *
                 C154178 +
             (C102770 * C70415 + C102771 * C153927) * C154159 +
             (C111928 * C70415 + (C102370 + C102371) * C153927) * C154130) *
                C153847 -
            (C126181 * C154130 +
             (C101394 * C153927 + C101395 * C70415) * C154159 +
             ((C101442 + C101441) * C153927 + (C101440 + C101439) * C70415) *
                 C154178) *
                C2058) *
               C153819) *
              C154085 +
          (((((C97811 + C97810) * C70415 + C102770 * C153927) * C154178 +
             ((C97809 + C97808) * C70415 + C111928 * C153927) * C154159 +
             ((C97807 + C97806) * C70415 + (C98534 + C98535) * C153927) *
                 C154130) *
                C153847 -
            (C125308 * C154130 +
             (C98013 * C153927 + (C97255 + C97254) * C70415) * C154159 +
             (C101395 * C153927 + (C97253 + C97252) * C70415) * C154178) *
                C2058) *
               C154093 +
           (((C101388 * C70415 + C101389 * C153927) * C154178 +
             (C102070 * C70415 + C102071 * C153927) * C154159 +
             (C111246 * C70415 + (C97542 + C97543) * C153927) * C154130) *
                C2058 -
            (((C97195 * C3372 + C99716 + C99716 + C153969 * C3380 +
               C97193 * C1917 + C99717 + C99717 + C97191 * C1927) *
                  C153927 +
              (C98535 + C98534) * C70415) *
                 C154130 +
             ((C102371 + C102370) * C153927 + C111538 * C70415) * C154159 +
             (C102758 * C153927 + C102759 * C70415) * C154178) *
                C153847) *
               C153819) *
              C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
              C97199 + C97199 + C153969 * C580) *
                 C154188 +
             (C101439 + C101440) * C154184 + C101451 * C154174 +
             C130665 * C154116) *
                C153712 * C2058 -
            (C132695 * C154116 + C104577 * C154174 +
             (C102794 + C102795) * C154184 +
             (C97195 * C557 + C97756 + C97756 + C153969 * C581 + C97193 * C556 +
              C97757 + C97757 + C97191 * C580) *
                 C154188) *
                C153712 * C153847) *
               C154093 +
           (((C102795 + C102794) * C154188 + (C102793 + C102792) * C154184 +
             (C104590 + C104591) * C154174 + (C132706 + C132707) * C154116) *
                C153712 * C153847 -
            (C131830 * C154116 + C103282 * C154174 +
             (C101442 + C101441) * C154184 + (C101440 + C101439) * C154188) *
                C153712 * C2058) *
               C153819) *
              C154085 +
          ((((C97811 + C97810) * C154188 + C102770 * C154184 +
             C102771 * C154174 + (C102796 + C102797) * C154116) *
                C153712 * C153847 -
            (C101452 * C154116 + C101394 * C154174 + C101395 * C154184 +
             (C97253 + C97252) * C154188) *
                C153712 * C2058) *
               C154093 +
           ((C101388 * C154188 + C101389 * C154184 + C101453 * C154174 +
             (C101447 + C101448) * C154116) *
                C153712 * C2058 -
            ((C97195 * C28359 + C104582 + C104582 + C153969 * C28363 +
              C97193 * C5558 + C104583 + C104583 + C97191 * C5564) *
                 C154116 +
             (C102797 + C102796) * C154174 + C102758 * C154184 +
             C102759 * C154188) *
                C153712 * C153847) *
               C153819) *
              C153754)) /
            (p * q * std::sqrt(p + q));
    d2ee[146] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
              C97199 + C97199 + C153969 * C580) *
                 C70415 +
             (C101439 + C101440) * C153927) *
                C154178 +
            ((C97252 + C97253) * C70415 + C101388 * C153927) * C154159 +
            C125307 * C154130) *
               C154166 -
           (C126474 * C154130 +
            (C102759 * C153927 + (C97810 + C97811) * C70415) * C154159 +
            ((C102794 + C102795) * C153927 +
             (C97195 * C557 + C97756 + C97756 + C153969 * C581 + C97193 * C556 +
              C97757 + C97757 + C97191 * C580) *
                 C70415) *
                C154178) *
               C154167 +
           (((C97193 * C557 + C97758 + C97758 + C97191 * C581 + C97195 * C2272 +
              C97759 + C97759 + C153969 * C2282) *
                 C70415 +
             (C103607 + C103608) * C153927) *
                C154178 +
            ((C97812 + C97813) * C70415 + (C101776 + C101777) * C153927) *
                C154159 +
            ((C97814 + C97815) * C70415 + (C110952 + C110953) * C153927) *
                C154130) *
               C2574) *
              C154093 +
          ((((C102795 + C102794) * C70415 + (C102793 + C102792) * C153927) *
                C154178 +
            (C102770 * C70415 + C102771 * C153927) * C154159 +
            (C111928 * C70415 + (C102370 + C102371) * C153927) * C154130) *
               C154167 -
           (C126181 * C154130 +
            (C101394 * C153927 + C101395 * C70415) * C154159 +
            ((C101442 + C101441) * C153927 + (C101440 + C101439) * C70415) *
                C154178) *
               C154166 -
           (((C97195 * C6156 + C101760 + C101760 + C153969 * C6168 +
              C97193 * C3371 + C101761 + C101761 + C97191 * C3379) *
                 C153927 +
             (C110953 + C110952) * C70415) *
                C154130 +
            ((C101779 + C101778) * C153927 + (C101777 + C101776) * C70415) *
                C154159 +
            ((C103610 + C103609) * C153927 + (C103608 + C103607) * C70415) *
                C154178) *
               C2574) *
              C153819) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
             C97199 + C97199 + C153969 * C580) *
                C154188 +
            (C101439 + C101440) * C154184 + C101451 * C154174 +
            C130665 * C154116) *
               C153712 * C154166 -
           (C132695 * C154116 + C104577 * C154174 +
            (C102794 + C102795) * C154184 +
            (C97195 * C557 + C97756 + C97756 + C153969 * C581 + C97193 * C556 +
             C97757 + C97757 + C97191 * C580) *
                C154188) *
               C153712 * C154167 +
           ((C97193 * C557 + C97758 + C97758 + C97191 * C581 + C97195 * C2272 +
             C97759 + C97759 + C153969 * C2282) *
                C154188 +
            (C103607 + C103608) * C154184 + (C103609 + C103610) * C154174 +
            (C132047 + C132048) * C154116) *
               C153712 * C2574) *
              C154093 +
          (((C102795 + C102794) * C154188 + (C102793 + C102792) * C154184 +
            (C104590 + C104591) * C154174 + (C132706 + C132707) * C154116) *
               C153712 * C154167 -
           (C131830 * C154116 + C103282 * C154174 +
            (C101442 + C101441) * C154184 + (C101440 + C101439) * C154188) *
               C153712 * C154166 -
           ((C97195 * C29880 + C132041 + C132041 + C153969 * C29884 +
             C97193 * C28358 + C132042 + C132042 + C97191 * C28362) *
                C154116 +
            (C132048 + C132047) * C154174 + (C103610 + C103609) * C154184 +
            (C103608 + C103607) * C154188) *
               C153712 * C2574) *
              C153819) *
         C153748) /
            (p * q * std::sqrt(p + q));
    d2ee[147] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
              C97199 + C97199 + C153969 * C580) *
                 C70415 +
             (C101439 + C101440) * C153927) *
                C154178 +
            ((C97252 + C97253) * C70415 + C101388 * C153927) * C154159 +
            C125307 * C154130) *
               C2058 -
           (C126474 * C154130 +
            (C102759 * C153927 + (C97810 + C97811) * C70415) * C154159 +
            ((C102794 + C102795) * C153927 +
             (C97195 * C557 + C97756 + C97756 + C153969 * C581 + C97193 * C556 +
              C97757 + C97757 + C97191 * C580) *
                 C70415) *
                C154178) *
               C153847) *
              C326 +
          ((((C102795 + C102794) * C70415 + (C102793 + C102792) * C153927) *
                C154178 +
            (C102770 * C70415 + C102771 * C153927) * C154159 +
            (C111928 * C70415 + (C102370 + C102371) * C153927) * C154130) *
               C153847 -
           (C126181 * C154130 +
            (C101394 * C153927 + C101395 * C70415) * C154159 +
            ((C101442 + C101441) * C153927 + (C101440 + C101439) * C70415) *
                C154178) *
               C2058) *
              C327 +
          (((C101451 * C70415 + (C101446 + C101445) * C153927) * C154178 +
            (C101389 * C70415 + C101453 * C153927) * C154159 +
            (C102071 * C70415 + (C101449 + C101450) * C153927) * C154130) *
               C2058 -
           (((C97195 * C4809 + C102778 + C102778 + C153969 * C4815 +
              C97193 * C4170 + C102779 + C102779 + C97191 * C4178) *
                 C153927 +
             (C102371 + C102370) * C70415) *
                C154130 +
            ((C102797 + C102796) * C153927 + C102758 * C70415) * C154159 +
            ((C104591 + C104590) * C153927 + C104577 * C70415) * C154178) *
               C153847) *
              C328) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
              C97199 + C97199 + C153969 * C580) *
                 C70415 +
             (C101439 + C101440) * C153927) *
                C154178 +
            ((C97252 + C97253) * C70415 + C101388 * C153927) * C154159 +
            C125307 * C154130) *
               C2058 -
           (C126474 * C154130 +
            (C102759 * C153927 + (C97810 + C97811) * C70415) * C154159 +
            ((C102794 + C102795) * C153927 +
             (C97195 * C557 + C97756 + C97756 + C153969 * C581 + C97193 * C556 +
              C97757 + C97757 + C97191 * C580) *
                 C70415) *
                C154178) *
               C153847) *
              C153767 * C1253 +
          ((((C97811 + C97810) * C70415 + C102770 * C153927) * C154178 +
            ((C97809 + C97808) * C70415 + C111928 * C153927) * C154159 +
            ((C97807 + C97806) * C70415 + (C98534 + C98535) * C153927) *
                C154130) *
               C153847 -
           (C125308 * C154130 +
            (C98013 * C153927 + (C97255 + C97254) * C70415) * C154159 +
            (C101395 * C153927 + (C97253 + C97252) * C70415) * C154178) *
               C2058) *
              C153767 * C1254 +
          ((C125307 * C154178 +
            (C97263 * C70415 + C111246 * C153927) * C154159 +
            ((C97259 + C97258) * C70415 + (C98026 + C98027) * C153927) *
                C154130) *
               C2058 -
           (((C97195 * C1485 + C98516 + C98516 + C153969 * C1495 +
              C97193 * C1085 + C98517 + C98517 + C97191 * C1097) *
                 C153927 +
             (C98237 + C98236) * C70415) *
                C154130 +
            ((C98535 + C98534) * C153927 + C98222 * C70415) * C154159 +
            C126474 * C154178) *
               C153847) *
              C153767 * C1255)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
             C97199 + C97199 + C153969 * C580) *
                C70415 +
            (C101439 + C101440) * C153927) *
               C154178 +
           ((C97252 + C97253) * C70415 + C101388 * C153927) * C154159 +
           C125307 * C154130) *
              C2264 -
          (C126474 * C154130 +
           (C102759 * C153927 + (C97810 + C97811) * C70415) * C154159 +
           ((C102794 + C102795) * C153927 +
            (C97195 * C557 + C97756 + C97756 + C153969 * C581 + C97193 * C556 +
             C97757 + C97757 + C97191 * C580) *
                C70415) *
               C154178) *
              C2265 +
          (((C97193 * C557 + C97758 + C97758 + C97191 * C581 + C97195 * C2272 +
             C97759 + C97759 + C153969 * C2282) *
                C70415 +
            (C103607 + C103608) * C153927) *
               C154178 +
           ((C97812 + C97813) * C70415 + (C101776 + C101777) * C153927) *
               C154159 +
           ((C97814 + C97815) * C70415 + (C110952 + C110953) * C153927) *
               C154130) *
              C2266 -
          (((C97195 * C9165 + C114443 + C114443 + C153969 * C9171 +
             C97193 * C6157 + C114444 + C114444 + C97191 * C6169) *
                C153927 +
            (C97195 * C7667 + C100244 + C100244 + C153969 * C7675 +
             C97193 * C2270 + C100245 + C100245 + C97191 * C2280) *
                C70415) *
               C154130 +
           ((C97195 * C9166 + C105368 + C105368 + C153969 * C9172 +
             C97193 * C6159 + C105369 + C105369 + C97191 * C6171) *
                C153927 +
            (C97195 * C7666 + C100246 + C100246 + C153969 * C7674 +
             C97193 * C2271 + C100247 + C100247 + C97191 * C2281) *
                C70415) *
               C154159 +
           ((C97195 * C9167 + C105372 + C105372 + C153969 * C9173 +
             C97193 * C6161 + C105373 + C105373 + C97191 * C6173) *
                C153927 +
            (C97195 * C7665 + C100248 + C100248 + C153969 * C7673 +
             C97193 * C2272 + C100249 + C100249 + C97191 * C2282) *
                C70415) *
               C154178) *
              C2267) *
         C153767 * C153748) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
             C97199 + C97199 + C153969 * C580) *
                C154188 +
            (C101439 + C101440) * C154184 + C101451 * C154174 +
            C130665 * C154116) *
               C153712 * C2058 -
           (C132695 * C154116 + C104577 * C154174 +
            (C102794 + C102795) * C154184 +
            (C97195 * C557 + C97756 + C97756 + C153969 * C581 + C97193 * C556 +
             C97757 + C97757 + C97191 * C580) *
                C154188) *
               C153712 * C153847) *
              C153767 * C1253 +
          (((C97811 + C97810) * C154188 + C102770 * C154184 +
            C102771 * C154174 + (C102796 + C102797) * C154116) *
               C153712 * C153847 -
           (C101452 * C154116 + C101394 * C154174 + C101395 * C154184 +
            (C97253 + C97252) * C154188) *
               C153712 * C2058) *
              C153767 * C1254 +
          ((C97262 * C154188 + C102070 * C154184 + C102071 * C154174 +
            (C101449 + C101450) * C154116) *
               C153712 * C2058 -
           ((C97195 * C4809 + C102778 + C102778 + C153969 * C4815 +
             C97193 * C4170 + C102779 + C102779 + C97191 * C4178) *
                C154116 +
            (C102371 + C102370) * C154174 + C111538 * C154184 +
            C98223 * C154188) *
               C153712 * C153847) *
              C153767 * C1255)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
             C97199 + C97199 + C153969 * C580) *
                C154188 +
            (C101439 + C101440) * C154184 + C101451 * C154174 +
            C130665 * C154116) *
               C153712 * C2058 -
           (C132695 * C154116 + C104577 * C154174 +
            (C102794 + C102795) * C154184 +
            (C97195 * C557 + C97756 + C97756 + C153969 * C581 + C97193 * C556 +
             C97757 + C97757 + C97191 * C580) *
                C154188) *
               C153712 * C153847) *
              C326 +
          (((C102795 + C102794) * C154188 + (C102793 + C102792) * C154184 +
            (C104590 + C104591) * C154174 + (C132706 + C132707) * C154116) *
               C153712 * C153847 -
           (C131830 * C154116 + C103282 * C154174 +
            (C101442 + C101441) * C154184 + (C101440 + C101439) * C154188) *
               C153712 * C2058) *
              C327 +
          ((C101451 * C154188 + C130665 * C154184 +
            (C103295 + C103296) * C154174 + (C131841 + C131842) * C154116) *
               C153712 * C2058 -
           ((C97195 * C29125 + C132700 + C132700 + C153969 * C29127 +
             C97193 * C28772 + C132701 + C132701 + C97191 * C28776) *
                C154116 +
            (C132707 + C132706) * C154174 + C132695 * C154184 +
            C104577 * C154188) *
               C153712 * C153847) *
              C328) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
            C97199 + C97199 + C153969 * C580) *
               C154188 +
           (C101439 + C101440) * C154184 + C101451 * C154174 +
           C130665 * C154116) *
              C153712 * C2264 -
          (C132695 * C154116 + C104577 * C154174 +
           (C102794 + C102795) * C154184 +
           (C97195 * C557 + C97756 + C97756 + C153969 * C581 + C97193 * C556 +
            C97757 + C97757 + C97191 * C580) *
               C154188) *
              C153712 * C2265 +
          ((C97193 * C557 + C97758 + C97758 + C97191 * C581 + C97195 * C2272 +
            C97759 + C97759 + C153969 * C2282) *
               C154188 +
           (C103607 + C103608) * C154184 + (C103609 + C103610) * C154174 +
           (C132047 + C132048) * C154116) *
              C153712 * C2266 -
          ((C97195 * C32340 + C133226 + C133226 + C153969 * C32342 +
            C97193 * C29881 + C133227 + C133227 + C97191 * C29885) *
               C154116 +
           (C97195 * C30946 + C105370 + C105370 + C153969 * C30950 +
            C97193 * C6160 + C105371 + C105371 + C97191 * C6172) *
               C154174 +
           (C97195 * C9167 + C105372 + C105372 + C153969 * C9173 +
            C97193 * C6161 + C105373 + C105373 + C97191 * C6173) *
               C154184 +
           (C97195 * C7665 + C100248 + C100248 + C153969 * C7673 +
            C97193 * C2272 + C100249 + C100249 + C97191 * C2282) *
               C154188) *
              C153712 * C2267) *
         C153767 * C153748) /
            (p * q * std::sqrt(p + q));
    d2ee[148] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
              C97199 + C97199 + C153969 * C580) *
                 C70415 +
             (C101439 + C101440) * C153927) *
                C154178 +
            ((C97252 + C97253) * C70415 + C101388 * C153927) * C154159 +
            C125307 * C154130) *
               C154166 -
           (C126474 * C154130 +
            (C102759 * C153927 + (C97810 + C97811) * C70415) * C154159 +
            ((C102794 + C102795) * C153927 +
             (C97195 * C557 + C97756 + C97756 + C153969 * C581 + C97193 * C556 +
              C97757 + C97757 + C97191 * C580) *
                 C70415) *
                C154178) *
               C154167 +
           (((C97193 * C557 + C97758 + C97758 + C97191 * C581 + C97195 * C2272 +
              C97759 + C97759 + C153969 * C2282) *
                 C70415 +
             (C103607 + C103608) * C153927) *
                C154178 +
            ((C97812 + C97813) * C70415 + (C101776 + C101777) * C153927) *
                C154159 +
            ((C97814 + C97815) * C70415 + (C110952 + C110953) * C153927) *
                C154130) *
               C2574) *
              C153767 * C154085 +
          ((((C97811 + C97810) * C70415 + C102770 * C153927) * C154178 +
            ((C97809 + C97808) * C70415 + C111928 * C153927) * C154159 +
            ((C97807 + C97806) * C70415 + (C98534 + C98535) * C153927) *
                C154130) *
               C154167 -
           (C125308 * C154130 +
            (C98013 * C153927 + (C97255 + C97254) * C70415) * C154159 +
            (C101395 * C153927 + (C97253 + C97252) * C70415) * C154178) *
               C154166 -
           (((C97195 * C8529 + C99062 + C99062 + C153969 * C8531 +
              C97193 * C1486 + C99063 + C99063 + C97191 * C1496) *
                 C153927 +
             (C97817 + C97816) * C70415) *
                C154130 +
            ((C110953 + C110952) * C153927 + (C97815 + C97814) * C70415) *
                C154159 +
            ((C101777 + C101776) * C153927 + (C97813 + C97812) * C70415) *
                C154178) *
               C2574) *
              C153767 * C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
             C97199 + C97199 + C153969 * C580) *
                C154188 +
            (C101439 + C101440) * C154184 + C101451 * C154174 +
            C130665 * C154116) *
               C153712 * C154166 -
           (C132695 * C154116 + C104577 * C154174 +
            (C102794 + C102795) * C154184 +
            (C97195 * C557 + C97756 + C97756 + C153969 * C581 + C97193 * C556 +
             C97757 + C97757 + C97191 * C580) *
                C154188) *
               C153712 * C154167 +
           ((C97193 * C557 + C97758 + C97758 + C97191 * C581 + C97195 * C2272 +
             C97759 + C97759 + C153969 * C2282) *
                C154188 +
            (C103607 + C103608) * C154184 + (C103609 + C103610) * C154174 +
            (C132047 + C132048) * C154116) *
               C153712 * C2574) *
              C153767 * C154085 +
          (((C97811 + C97810) * C154188 + C102770 * C154184 +
            C102771 * C154174 + (C102796 + C102797) * C154116) *
               C153712 * C154167 -
           (C101452 * C154116 + C101394 * C154174 + C101395 * C154184 +
            (C97253 + C97252) * C154188) *
               C153712 * C154166 -
           ((C97195 * C31684 + C103595 + C103595 + C153969 * C31686 +
             C97193 * C4810 + C103596 + C103596 + C97191 * C4816) *
                C154116 +
            (C101779 + C101778) * C154174 + (C101777 + C101776) * C154184 +
            (C97813 + C97812) * C154188) *
               C153712 * C2574) *
              C153767 * C153754)) /
            (p * q * std::sqrt(p + q));
    d2ee[149] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
              C97199 + C97199 + C153969 * C580) *
                 C70415 +
             (C101439 + C101440) * C153927) *
                C154178 +
            ((C97252 + C97253) * C70415 + C101388 * C153927) * C154159 +
            C125307 * C154130) *
               C2058 -
           (C126474 * C154130 +
            (C102759 * C153927 + (C97810 + C97811) * C70415) * C154159 +
            ((C102794 + C102795) * C153927 +
             (C97195 * C557 + C97756 + C97756 + C153969 * C581 + C97193 * C556 +
              C97757 + C97757 + C97191 * C580) *
                 C70415) *
                C154178) *
               C153847) *
              C153767 * C1253 +
          ((((C97811 + C97810) * C70415 + C102770 * C153927) * C154178 +
            ((C97809 + C97808) * C70415 + C111928 * C153927) * C154159 +
            ((C97807 + C97806) * C70415 + (C98534 + C98535) * C153927) *
                C154130) *
               C153847 -
           (C125308 * C154130 +
            (C98013 * C153927 + (C97255 + C97254) * C70415) * C154159 +
            (C101395 * C153927 + (C97253 + C97252) * C70415) * C154178) *
               C2058) *
              C153767 * C1254 +
          ((C125307 * C154178 +
            (C97263 * C70415 + C111246 * C153927) * C154159 +
            ((C97259 + C97258) * C70415 + (C98026 + C98027) * C153927) *
                C154130) *
               C2058 -
           (((C97195 * C1485 + C98516 + C98516 + C153969 * C1495 +
              C97193 * C1085 + C98517 + C98517 + C97191 * C1097) *
                 C153927 +
             (C98237 + C98236) * C70415) *
                C154130 +
            ((C98535 + C98534) * C153927 + C98222 * C70415) * C154159 +
            C126474 * C154178) *
               C153847) *
              C153767 * C1255)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
              C97199 + C97199 + C153969 * C580) *
                 C70415 +
             (C101439 + C101440) * C153927) *
                C154178 +
            ((C97252 + C97253) * C70415 + C101388 * C153927) * C154159 +
            C125307 * C154130) *
               C2058 -
           (C126474 * C154130 +
            (C102759 * C153927 + (C97810 + C97811) * C70415) * C154159 +
            ((C102794 + C102795) * C153927 +
             (C97195 * C557 + C97756 + C97756 + C153969 * C581 + C97193 * C556 +
              C97757 + C97757 + C97191 * C580) *
                 C70415) *
                C154178) *
               C153847) *
              C326 +
          ((((C102795 + C102794) * C70415 + (C102793 + C102792) * C153927) *
                C154178 +
            (C102770 * C70415 + C102771 * C153927) * C154159 +
            (C111928 * C70415 + (C102370 + C102371) * C153927) * C154130) *
               C153847 -
           (C126181 * C154130 +
            (C101394 * C153927 + C101395 * C70415) * C154159 +
            ((C101442 + C101441) * C153927 + (C101440 + C101439) * C70415) *
                C154178) *
               C2058) *
              C327 +
          (((C101451 * C70415 + (C101446 + C101445) * C153927) * C154178 +
            (C101389 * C70415 + C101453 * C153927) * C154159 +
            (C102071 * C70415 + (C101449 + C101450) * C153927) * C154130) *
               C2058 -
           (((C97195 * C4809 + C102778 + C102778 + C153969 * C4815 +
              C97193 * C4170 + C102779 + C102779 + C97191 * C4178) *
                 C153927 +
             (C102371 + C102370) * C70415) *
                C154130 +
            ((C102797 + C102796) * C153927 + C102758 * C70415) * C154159 +
            ((C104591 + C104590) * C153927 + C104577 * C70415) * C154178) *
               C153847) *
              C328) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
             C97199 + C97199 + C153969 * C580) *
                C154188 +
            (C101439 + C101440) * C154184 + C101451 * C154174 +
            C130665 * C154116) *
               C153712 * C2058 -
           (C132695 * C154116 + C104577 * C154174 +
            (C102794 + C102795) * C154184 +
            (C97195 * C557 + C97756 + C97756 + C153969 * C581 + C97193 * C556 +
             C97757 + C97757 + C97191 * C580) *
                C154188) *
               C153712 * C153847) *
              C153767 * C1253 +
          (((C97811 + C97810) * C154188 + C102770 * C154184 +
            C102771 * C154174 + (C102796 + C102797) * C154116) *
               C153712 * C153847 -
           (C101452 * C154116 + C101394 * C154174 + C101395 * C154184 +
            (C97253 + C97252) * C154188) *
               C153712 * C2058) *
              C153767 * C1254 +
          ((C97262 * C154188 + C102070 * C154184 + C102071 * C154174 +
            (C101449 + C101450) * C154116) *
               C153712 * C2058 -
           ((C97195 * C4809 + C102778 + C102778 + C153969 * C4815 +
             C97193 * C4170 + C102779 + C102779 + C97191 * C4178) *
                C154116 +
            (C102371 + C102370) * C154174 + C111538 * C154184 +
            C98223 * C154188) *
               C153712 * C153847) *
              C153767 * C1255)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
             C97199 + C97199 + C153969 * C580) *
                C154188 +
            (C101439 + C101440) * C154184 + C101451 * C154174 +
            C130665 * C154116) *
               C153712 * C2058 -
           (C132695 * C154116 + C104577 * C154174 +
            (C102794 + C102795) * C154184 +
            (C97195 * C557 + C97756 + C97756 + C153969 * C581 + C97193 * C556 +
             C97757 + C97757 + C97191 * C580) *
                C154188) *
               C153712 * C153847) *
              C326 +
          (((C102795 + C102794) * C154188 + (C102793 + C102792) * C154184 +
            (C104590 + C104591) * C154174 + (C132706 + C132707) * C154116) *
               C153712 * C153847 -
           (C131830 * C154116 + C103282 * C154174 +
            (C101442 + C101441) * C154184 + (C101440 + C101439) * C154188) *
               C153712 * C2058) *
              C327 +
          ((C101451 * C154188 + C130665 * C154184 +
            (C103295 + C103296) * C154174 + (C131841 + C131842) * C154116) *
               C153712 * C2058 -
           ((C97195 * C29125 + C132700 + C132700 + C153969 * C29127 +
             C97193 * C28772 + C132701 + C132701 + C97191 * C28776) *
                C154116 +
            (C132707 + C132706) * C154174 + C132695 * C154184 +
            C104577 * C154188) *
               C153712 * C153847) *
              C328) *
         C153748) /
            (p * q * std::sqrt(p + q));
    d2ee[150] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C34572 +
             C3138 * C34573 + C3139 * C34574 + C3142 * C154116) *
                C154074 +
            (C34579 + C34580 + C34581 + C34582) * C153722) *
               C153783 * C154093 -
           ((C34785 + C34786 + C34787 + C34788) * C153722 +
            (C4591 * C154116 + C3142 * C34574 + C3139 * C34573 +
             C3138 * C34572) *
                C154074) *
               C153783 * C153819) *
              C154162 +
          (((C34788 + C34787 + C34786 + C34785) * C154074 +
            (C35194 + C35195 + C35196 + C35197) * C153722) *
               C153783 * C153819 -
           ((C34583 + C34584 + C34585 + C34586) * C153722 +
            (C34582 + C34581 + C34580 + C34579) * C154074) *
               C153783 * C154093) *
              C154163 +
          (((C34586 + C34585 + C34584 + C34583) * C154074 +
            (C34587 + C34588 + C34589 + C34590) * C153722) *
               C153783 * C154093 -
           (((C134 * C3086 + C3121 + C3121 + C153882 * C3094) * C154116 +
             C3145 * C34574 + C418 * C34573 + C413 * C34572) *
                C153722 +
            (C35197 + C35196 + C35195 + C35194) * C154074) *
               C153783 * C153819) *
              C774)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C154107 +
             C3138 * C153927) *
                C11376 +
            (C11381 + C11382) * C11377 + C11391 * C11378 + C11392 * C154108) *
               C153783 * C154093 -
           (C12006 * C154108 + C12007 * C11378 + (C11593 + C11594) * C11377 +
            (C3139 * C153927 + C3138 * C154107) * C11376) *
               C153783 * C153819) *
              C154162 +
          (((C11594 + C11593) * C11376 + (C11592 + C11591) * C11377 +
            (C11590 + C11589) * C11378 + (C12008 + C12009) * C154108) *
               C153783 * C153819 -
           (C11393 * C154108 + C11394 * C11378 + (C11384 + C11383) * C11377 +
            (C11382 + C11381) * C11376) *
               C153783 * C154093) *
              C154163 +
          ((C11391 * C11376 + C11392 * C11377 + (C11388 + C11387) * C11378 +
            (C11389 + C11390) * C154108) *
               C153783 * C154093 -
           (((C134 * C342 + C395 + C395 + C153882 * C366) * C153927 +
             C784 * C154107) *
                C154108 +
            (C12009 + C12008) * C11378 + C12006 * C11377 + C12007 * C11376) *
               C153783 * C153819) *
              C774)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C46971 * C136 + C46978 + C46978 + C46968 * C152 + C46973 * C556 +
              C46979 + C46979 + C46969 * C580 + C46975 * C557 + C46980 +
              C46980 + C154146 * C581) *
                 C154107 +
             (C51548 + C51549 + C51550) * C153927) *
                C154074 +
            ((C47044 + C47045 + C47046) * C154107 + C58071 * C153927) *
                C153722) *
               C153783 * C154093 -
           ((C51535 * C153927 + C58072 * C154107) * C153722 +
            ((C51553 + C51552 + C51551) * C153927 +
             (C51550 + C51549 + C51548) * C154107) *
                C154074) *
               C153783 * C153819) *
              C154162 +
          (((C58071 * C154107 + C58073 * C153927) * C154074 +
            (C58670 * C154107 + (C47361 + C47362 + C47363) * C153927) *
                C153722) *
               C153783 * C153819 -
           ((C47894 * C153927 + (C47049 + C47048 + C47047) * C154107) *
                C153722 +
            (C58072 * C153927 + (C47046 + C47045 + C47044) * C154107) *
                C154074) *
               C153783 * C154093) *
              C154163 +
          (((C47058 * C154107 + C58670 * C153927) * C154074 +
            ((C47052 + C47051 + C47050) * C154107 +
             (C47902 + C47903 + C47904) * C153927) *
                C153722) *
               C153783 * C154093 -
           (((C46975 * C3372 + C47325 + C47325 + C154146 * C3380 +
              C46973 * C1917 + C47326 + C47326 + C46969 * C1927 +
              C46971 * C339 + C47327 + C47327 + C46968 * C363) *
                 C153927 +
             (C47904 + C47903 + C47902) * C154107) *
                C153722 +
            ((C47363 + C47362 + C47361) * C153927 + C47894 * C154107) *
                C154074) *
               C153783 * C153819) *
              C774)) /
            (p * q * std::sqrt(p + q));
    d2ee[151] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C153882 * C152) * C34572 +
              C3138 * C34573 + C3139 * C34574 + C3142 * C154116) *
                 C154074 +
             (C34579 + C34580 + C34581 + C34582) * C153722) *
                C154094 -
            ((C34987 + C34988 + C34989 + C34990) * C153722 +
             (C5574 * C154116 + C4205 * C34574 + C4206 * C34573 +
              (C134 * C556 + C601 + C601 + C153882 * C580) * C34572) *
                 C154074) *
                C153847) *
               C154093 +
           (((C4206 * C34572 + C4205 * C34573 + C5574 * C34574 +
              C28789 * C154116) *
                 C154074 +
             (C35654 + C35655 + C35656 + C35657) * C153722) *
                C153847 -
            ((C34785 + C34786 + C34787 + C34788) * C153722 +
             (C4591 * C154116 + C3142 * C34574 + C3139 * C34573 +
              C3138 * C34572) *
                 C154074) *
                C154094) *
               C153819) *
              C329 +
          ((((C34990 + C34989 + C34988 + C34987) * C154074 +
             (C35392 + C35393 + C35394 + C35395) * C153722) *
                C153847 -
            ((C34583 + C34584 + C34585 + C34586) * C153722 +
             (C34582 + C34581 + C34580 + C34579) * C154074) *
                C154094) *
               C154093 +
           (((C34788 + C34787 + C34786 + C34785) * C154074 +
             (C35194 + C35195 + C35196 + C35197) * C153722) *
                C154094 -
            (((C134 * C5557 + C5569 + C5569 + C153882 * C5563) * C154116 +
              C4208 * C34574 + C3416 * C34573 + C1123 * C34572) *
                 C153722 +
             (C35657 + C35656 + C35655 + C35654) * C154074) *
                C153847) *
               C153819) *
              C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C153882 * C152) * C154107 +
              C3138 * C153927) *
                 C11376 +
             (C11381 + C11382) * C11377 + C11391 * C11378 + C11392 * C154108) *
                C154094 -
            (C12204 * C154108 + C12205 * C11378 + (C11799 + C11800) * C11377 +
             (C4206 * C153927 +
              (C134 * C556 + C601 + C601 + C153882 * C580) * C154107) *
                 C11376) *
                C153847) *
               C154093 +
           (((C4206 * C154107 + C4205 * C153927) * C11376 +
             (C12466 + C12467) * C11377 + (C12468 + C12469) * C11378 +
             (C12470 + C12471) * C154108) *
                C153847 -
            (C12006 * C154108 + C12007 * C11378 + (C11593 + C11594) * C11377 +
             (C3139 * C153927 + C3138 * C154107) * C11376) *
                C154094) *
               C153819) *
              C329 +
          ((((C11800 + C11799) * C11376 + (C11798 + C11797) * C11377 +
             (C11796 + C11795) * C11378 + (C12206 + C12207) * C154108) *
                C153847 -
            (C11393 * C154108 + C11394 * C11378 + (C11384 + C11383) * C11377 +
             (C11382 + C11381) * C11376) *
                C154094) *
               C154093 +
           (((C11594 + C11593) * C11376 + (C11592 + C11591) * C11377 +
             (C11590 + C11589) * C11378 + (C12008 + C12009) * C154108) *
                C154094 -
            (((C134 * C1916 + C1932 + C1932 + C153882 * C1926) * C153927 +
              C1125 * C154107) *
                 C154108 +
             (C12471 + C12470) * C11378 + (C12469 + C12468) * C11377 +
             (C12467 + C12466) * C11376) *
                C153847) *
               C153819) *
              C153754)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C46971 * C136 + C46978 + C46978 + C46968 * C152 + C46973 * C556 +
               C46979 + C46979 + C46969 * C580 + C46975 * C557 + C46980 +
               C46980 + C154146 * C581) *
                  C154107 +
              (C51548 + C51549 + C51550) * C153927) *
                 C154074 +
             ((C47044 + C47045 + C47046) * C154107 + C58071 * C153927) *
                 C153722) *
                C154094 -
            ((C59349 * C153927 + (C47657 + C47658 + C47659) * C154107) *
                 C153722 +
             ((C52557 + C52558 + C52559) * C153927 +
              (C46975 * C2272 + C47600 + C47600 + C154146 * C2282 +
               C46973 * C557 + C47601 + C47601 + C46969 * C581 + C46971 * C556 +
               C47602 + C47602 + C46968 * C580) *
                  C154107) *
                 C154074) *
                C153847) *
               C154093 +
           ((((C52559 + C52558 + C52557) * C154107 +
              (C52556 + C52555 + C52554) * C153927) *
                 C154074 +
             (C59350 * C154107 + (C52560 + C52561 + C52562) * C153927) *
                 C153722) *
                C153847 -
            ((C51535 * C153927 + C58072 * C154107) * C153722 +
             ((C51553 + C51552 + C51551) * C153927 +
              (C51550 + C51549 + C51548) * C154107) *
                 C154074) *
                C154094) *
               C153819) *
              C329 +
          (((((C47659 + C47658 + C47657) * C154107 + C59350 * C153927) *
                 C154074 +
             ((C47656 + C47655 + C47654) * C154107 +
              (C48473 + C48474 + C48475) * C153927) *
                 C153722) *
                C153847 -
            ((C47894 * C153927 + (C47049 + C47048 + C47047) * C154107) *
                 C153722 +
             (C58072 * C153927 + (C47046 + C47045 + C47044) * C154107) *
                 C154074) *
                C154094) *
               C154093 +
           (((C58071 * C154107 + C58073 * C153927) * C154074 +
             (C58670 * C154107 + (C47361 + C47362 + C47363) * C153927) *
                 C153722) *
                C154094 -
            (((C46975 * C6156 + C49802 + C49802 + C154146 * C6168 +
               C46973 * C3371 + C49803 + C49803 + C46969 * C3379 +
               C46971 * C1918 + C49804 + C49804 + C46968 * C1928) *
                  C153927 +
              (C48475 + C48474 + C48473) * C154107) *
                 C153722 +
             ((C52562 + C52561 + C52560) * C153927 + C59349 * C154107) *
                 C154074) *
                C153847) *
               C153819) *
              C153754)) /
            (p * q * std::sqrt(p + q));
    d2ee[152] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C136 + C161 + C161 + C153882 * C152) * C154107 +
                C3138 * C153927) *
                   C11376 +
               (C11381 + C11382) * C11377 + C11391 * C11378 +
               C11392 * C154108) *
                  C153783 * C153767 * C130 -
              (C11393 * C154108 + C11394 * C11378 + (C11384 + C11383) * C11377 +
               (C11382 + C11381) * C11376) *
                  C153783 * C153767 * C131 +
              (C11391 * C11376 + C11392 * C11377 + (C11388 + C11387) * C11378 +
               (C11389 + C11390) * C154108) *
                  C153783 * C153767 * C132 -
              (((C134 * C775 + C781 + C781 + C153882 * C777) * C153927 +
                C198 * C154107) *
                   C154108 +
               (C11390 + C11389) * C11378 + C11393 * C11377 + C11394 * C11376) *
                  C153783 * C153767 * C133) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C134 * C136 + C161 + C161 + C153882 * C152) * C154107 +
                 C3138 * C153927) *
                    C11376 +
                (C11381 + C11382) * C11377 + C11391 * C11378 +
                C11392 * C154108) *
                   C153783 * C326 -
               ((C11589 + C11590) * C154108 + (C11591 + C11592) * C11378 +
                (C11593 + C11594) * C11377 +
                (C3139 * C153927 + C3138 * C154107) * C11376) *
                   C153783 * C327 +
               ((C3139 * C154107 + C3142 * C153927) * C11376 +
                (C11595 + C11596) * C11377 + (C11597 + C11598) * C11378 +
                (C11599 + C11600) * C154108) *
                   C153783 * C328) *
                  C329 +
              (((C11594 + C11593) * C11376 + (C11592 + C11591) * C11377 +
                (C11590 + C11589) * C11378 +
                (C412 * C154107 + C419 * C153927) * C154108) *
                   C153783 * C327 -
               (C11393 * C154108 + C11394 * C11378 +
                (C11384 + C11383) * C11377 + (C11382 + C11381) * C11376) *
                   C153783 * C326 -
               (((C134 * C1343 + C1359 + C1359 + C153882 * C1353) * C153927 +
                 C419 * C154107) *
                    C154108 +
                (C11600 + C11599) * C11378 + (C11598 + C11597) * C11377 +
                (C11596 + C11595) * C11376) *
                   C153783 * C328) *
                  C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C154107 +
             C3138 * C153927) *
                C11376 +
            (C11381 + C11382) * C11377 + C11391 * C11378 + C11392 * C154108) *
               C549 -
           ((C11795 + C11796) * C154108 + (C11797 + C11798) * C11378 +
            (C11799 + C11800) * C11377 +
            (C4206 * C153927 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C154107) *
                C11376) *
               C550 +
           (((C134 * C557 + C602 + C602 + C153882 * C581) * C154107 +
             C4830 * C153927) *
                C11376 +
            (C11801 + C11802) * C11377 + (C11803 + C11804) * C11378 +
            (C11805 + C11811) * C154108) *
               C551) *
              C153767 * C329 +
          (((C11800 + C11799) * C11376 + (C11798 + C11797) * C11377 +
            (C11796 + C11795) * C11378 +
            (C633 * C154107 + C1125 * C153927) * C154108) *
               C550 -
           (C11393 * C154108 + C11394 * C11378 + (C11384 + C11383) * C11377 +
            (C11382 + C11381) * C11376) *
               C549 -
           (((C134 * C1485 + C1501 + C1501 + C153882 * C1495) * C153927 +
             C640 * C154107) *
                C154108 +
            (C11811 + C11805) * C11378 + (C11804 + C11803) * C11377 +
            (C11802 + C11801) * C11376) *
               C551) *
              C153767 * C153754)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C34572 +
            C3138 * C34573 + C3139 * C34574 + C3142 * C154116) *
               C154074 +
           (C34579 + C34580 + C34581 + C34582) * C153722) *
              C153783 * C153767 * C130 -
          ((C34583 + C34584 + C34585 + C34586) * C153722 +
           (C34582 + C34581 + C34580 + C34579) * C154074) *
              C153783 * C153767 * C131 +
          ((C34586 + C34585 + C34584 + C34583) * C154074 +
           (C34587 + C34588 + C34589 + C34590) * C153722) *
              C153783 * C153767 * C132 -
          (((C134 * C1343 + C1359 + C1359 + C153882 * C1353) * C154116 +
            C419 * C34574 + C412 * C34573 + C196 * C34572) *
               C153722 +
           (C34590 + C34589 + C34588 + C34587) * C154074) *
              C153783 * C153767 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C34572 +
             C3138 * C34573 + C3139 * C34574 + C3142 * C154116) *
                C154074 +
            (C34579 + C34580 + C34581 + C34582) * C153722) *
               C153783 * C326 -
           ((C34785 + C34786 + C34787 + C34788) * C153722 +
            (C4591 * C154116 + C3142 * C34574 + C3139 * C34573 +
             C3138 * C34572) *
                C154074) *
               C153783 * C327 +
           ((C3139 * C34572 + C3142 * C34573 + C4591 * C34574 +
             C28235 * C154116) *
                C154074 +
            (C34789 + C34790 + C34791 + C34792) * C153722) *
               C153783 * C328) *
              C329 +
          (((C34788 + C34787 + C34786 + C34785) * C154074 +
            (C414 * C34572 + C417 * C34573 + C3140 * C34574 + C3144 * C154116) *
                C153722) *
               C153783 * C327 -
           ((C34583 + C34584 + C34585 + C34586) * C153722 +
            (C34582 + C34581 + C34580 + C34579) * C154074) *
               C153783 * C326 -
           (((C134 * C4574 + C4586 + C4586 + C153882 * C4580) * C154116 +
             C3144 * C34574 + C3140 * C34573 + C417 * C34572) *
                C153722 +
            (C34792 + C34791 + C34790 + C34789) * C154074) *
               C153783 * C328) *
              C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C34572 +
             C3138 * C34573 + C3139 * C34574 + C3142 * C154116) *
                C154074 +
            (C34579 + C34580 + C34581 + C34582) * C153722) *
               C549 -
           ((C34987 + C34988 + C34989 + C34990) * C153722 +
            (C5574 * C154116 + C4205 * C34574 + C4206 * C34573 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C34572) *
                C154074) *
               C550 +
           (((C134 * C557 + C602 + C602 + C153882 * C581) * C34572 +
             C4830 * C34573 + C4831 * C34574 + C29138 * C154116) *
                C154074 +
            (C34991 + C34992 + C34993 + C34999) * C153722) *
               C551) *
              C153767 * C329 +
          (((C34990 + C34989 + C34988 + C34987) * C154074 +
            (C635 * C34572 + C1123 * C34573 + C3416 * C34574 +
             C4208 * C154116) *
                C153722) *
               C550 -
           ((C34583 + C34584 + C34585 + C34586) * C153722 +
            (C34582 + C34581 + C34580 + C34579) * C154074) *
               C549 -
           (((C134 * C4809 + C4823 + C4823 + C153882 * C4815) * C154116 +
             C3421 * C34574 + C3420 * C34573 + C638 * C34572) *
                C153722 +
            (C34999 + C34993 + C34992 + C34991) * C154074) *
               C551) *
              C153767 * C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C46971 * C136 + C46978 + C46978 + C46968 * C152 + C46973 * C556 +
             C46979 + C46979 + C46969 * C580 + C46975 * C557 + C46980 + C46980 +
             C154146 * C581) *
                C154107 +
            (C51548 + C51549 + C51550) * C153927) *
               C154074 +
           ((C47044 + C47045 + C47046) * C154107 +
            (C47357 + C47356 + C47355) * C153927) *
               C153722) *
              C153783 * C153767 * C130 -
          ((C47894 * C153927 + (C47049 + C47048 + C47047) * C154107) * C153722 +
           ((C47355 + C47356 + C47357) * C153927 +
            (C47046 + C47045 + C47044) * C154107) *
               C154074) *
              C153783 * C153767 * C131 +
          ((C47058 * C154107 + (C47354 + C47353 + C47352) * C153927) * C154074 +
           ((C47052 + C47051 + C47050) * C154107 +
            (C47902 + C47903 + C47904) * C153927) *
               C153722) *
              C153783 * C153767 * C132 -
          (((C46975 * C1485 + C47891 + C47891 + C154146 * C1495 +
             C46973 * C1085 + C47892 + C47892 + C46969 * C1097 + C46971 * C331 +
             C47893 + C47893 + C46968 * C355) *
                C153927 +
            (C47055 + C47054 + C47053) * C154107) *
               C153722 +
           ((C47904 + C47903 + C47902) * C153927 + C47059 * C154107) *
               C154074) *
              C153783 * C153767 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C46971 * C136 + C46978 + C46978 + C46968 * C152 + C46973 * C556 +
              C46979 + C46979 + C46969 * C580 + C46975 * C557 + C46980 +
              C46980 + C154146 * C581) *
                 C154107 +
             (C51548 + C51549 + C51550) * C153927) *
                C154074 +
            ((C47044 + C47045 + C47046) * C154107 + C58071 * C153927) *
                C153722) *
               C153783 * C326 -
           ((C51535 * C153927 + C58072 * C154107) * C153722 +
            ((C51553 + C51552 + C51551) * C153927 +
             (C51550 + C51549 + C51548) * C154107) *
                C154074) *
               C153783 * C327 +
           ((C51561 * C154107 + (C51556 + C51555 + C51554) * C153927) *
                C154074 +
            (C58073 * C154107 + (C51557 + C51558 + C51559) * C153927) *
                C153722) *
               C153783 * C328) *
              C329 +
          (((C58071 * C154107 + C58073 * C153927) * C154074 +
            ((C47354 + C47353 + C47352) * C154107 +
             (C47361 + C47362 + C47363) * C153927) *
                C153722) *
               C153783 * C327 -
           ((C47894 * C153927 + (C47049 + C47048 + C47047) * C154107) *
                C153722 +
            (C58072 * C153927 + (C47046 + C47045 + C47044) * C154107) *
                C154074) *
               C153783 * C326 -
           (((C46975 * C4809 + C48840 + C48840 + C154146 * C4815 +
              C46973 * C4170 + C48841 + C48841 + C46969 * C4178 +
              C46971 * C1345 + C48842 + C48842 + C46968 * C1355) *
                 C153927 +
             (C47363 + C47362 + C47361) * C154107) *
                C153722 +
            ((C51559 + C51558 + C51557) * C153927 + C51535 * C154107) *
                C154074) *
               C153783 * C328) *
              C153754)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C46971 * C136 + C46978 + C46978 + C46968 * C152 + C46973 * C556 +
              C46979 + C46979 + C46969 * C580 + C46975 * C557 + C46980 +
              C46980 + C154146 * C581) *
                 C154107 +
             (C51548 + C51549 + C51550) * C153927) *
                C154074 +
            ((C47044 + C47045 + C47046) * C154107 + C58071 * C153927) *
                C153722) *
               C549 -
           (((C48472 + C48471 + C48470) * C153927 +
             (C47657 + C47658 + C47659) * C154107) *
                C153722 +
            ((C52557 + C52558 + C52559) * C153927 +
             (C46975 * C2272 + C47600 + C47600 + C154146 * C2282 +
              C46973 * C557 + C47601 + C47601 + C46969 * C581 + C46971 * C556 +
              C47602 + C47602 + C46968 * C580) *
                 C154107) *
                C154074) *
               C550 +
           (((C46971 * C557 + C47603 + C47603 + C46968 * C581 + C46973 * C2272 +
              C47604 + C47604 + C46969 * C2282 + C46975 * C7665 + C47605 +
              C47605 + C154146 * C7673) *
                 C154107 +
             (C53192 + C53193 + C53194) * C153927) *
                C154074 +
            ((C47660 + C47661 + C47662) * C154107 +
             (C58376 + C58377 + C58378) * C153927) *
                C153722) *
               C551) *
              C153767 * C329 +
          ((((C47659 + C47658 + C47657) * C154107 +
             (C48470 + C48471 + C48472) * C153927) *
                C154074 +
            ((C47656 + C47655 + C47654) * C154107 +
             (C48473 + C48474 + C48475) * C153927) *
                C153722) *
               C550 -
           ((C47894 * C153927 + (C47049 + C47048 + C47047) * C154107) *
                C153722 +
            (C58072 * C153927 + (C47046 + C47045 + C47044) * C154107) *
                C154074) *
               C549 -
           (((C46975 * C9165 + C49067 + C49067 + C154146 * C9171 +
              C46973 * C6157 + C49068 + C49068 + C46969 * C6169 +
              C46971 * C1487 + C49069 + C49069 + C46968 * C1497) *
                 C153927 +
             (C47665 + C47664 + C47663) * C154107) *
                C153722 +
            ((C58378 + C58377 + C58376) * C153927 +
             (C47662 + C47661 + C47660) * C154107) *
                C154074) *
               C551) *
              C153767 * C153754)) /
            (p * q * std::sqrt(p + q));
    d2ee[153] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C34572 +
             C3138 * C34573 + C3139 * C34574 + C3142 * C154116) *
                C154074 +
            (C34579 + C34580 + C34581 + C34582) * C153722) *
               C154094 -
           ((C34987 + C34988 + C34989 + C34990) * C153722 +
            (C5574 * C154116 + C4205 * C34574 + C4206 * C34573 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C34572) *
                C154074) *
               C153847) *
              C153767 * C154162 +
          (((C34990 + C34989 + C34988 + C34987) * C154074 +
            (C35392 + C35393 + C35394 + C35395) * C153722) *
               C153847 -
           ((C34583 + C34584 + C34585 + C34586) * C153722 +
            (C34582 + C34581 + C34580 + C34579) * C154074) *
               C154094) *
              C153767 * C154163 +
          (((C34586 + C34585 + C34584 + C34583) * C154074 +
            (C34587 + C34588 + C34589 + C34590) * C153722) *
               C154094 -
           (((C134 * C4171 + C4196 + C4196 + C153882 * C4179) * C154116 +
             C3877 * C34574 + C1124 * C34573 + C634 * C34572) *
                C153722 +
            (C35395 + C35394 + C35393 + C35392) * C154074) *
               C153847) *
              C153767 * C774)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C154107 +
             C3138 * C153927) *
                C11376 +
            (C11381 + C11382) * C11377 + C11391 * C11378 + C11392 * C154108) *
               C154094 -
           (C12204 * C154108 + C12205 * C11378 + (C11799 + C11800) * C11377 +
            (C4206 * C153927 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C154107) *
                C11376) *
               C153847) *
              C153767 * C154162 +
          (((C11800 + C11799) * C11376 + (C11798 + C11797) * C11377 +
            (C11796 + C11795) * C11378 + (C12206 + C12207) * C154108) *
               C153847 -
           (C11393 * C154108 + C11394 * C11378 + (C11384 + C11383) * C11377 +
            (C11382 + C11381) * C11376) *
               C154094) *
              C153767 * C154163 +
          ((C11391 * C11376 + C11392 * C11377 + (C11388 + C11387) * C11378 +
            (C11389 + C11390) * C154108) *
               C154094 -
           (((C134 * C1086 + C1113 + C1113 + C153882 * C1098) * C153927 +
             C918 * C154107) *
                C154108 +
            (C12207 + C12206) * C11378 + C12204 * C11377 + C12205 * C11376) *
               C153847) *
              C153767 * C774)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C46971 * C136 + C46978 + C46978 + C46968 * C152 + C46973 * C556 +
              C46979 + C46979 + C46969 * C580 + C46975 * C557 + C46980 +
              C46980 + C154146 * C581) *
                 C154107 +
             (C51548 + C51549 + C51550) * C153927) *
                C154074 +
            ((C47044 + C47045 + C47046) * C154107 + C58071 * C153927) *
                C153722) *
               C154094 -
           (((C48472 + C48471 + C48470) * C153927 +
             (C47657 + C47658 + C47659) * C154107) *
                C153722 +
            ((C52557 + C52558 + C52559) * C153927 +
             (C46975 * C2272 + C47600 + C47600 + C154146 * C2282 +
              C46973 * C557 + C47601 + C47601 + C46969 * C581 + C46971 * C556 +
              C47602 + C47602 + C46968 * C580) *
                 C154107) *
                C154074) *
               C153847) *
              C153767 * C154162 +
          ((((C47659 + C47658 + C47657) * C154107 +
             (C48470 + C48471 + C48472) * C153927) *
                C154074 +
            ((C47656 + C47655 + C47654) * C154107 +
             (C48473 + C48474 + C48475) * C153927) *
                C153722) *
               C153847 -
           ((C47894 * C153927 + (C47049 + C47048 + C47047) * C154107) *
                C153722 +
            (C58072 * C153927 + (C47046 + C47045 + C47044) * C154107) *
                C154074) *
               C154094) *
              C153767 * C154163 +
          (((C47058 * C154107 + C58670 * C153927) * C154074 +
            ((C47052 + C47051 + C47050) * C154107 +
             (C47902 + C47903 + C47904) * C153927) *
                C153722) *
               C154094 -
           (((C46975 * C8529 + C48455 + C48455 + C154146 * C8531 +
              C46973 * C1486 + C48456 + C48456 + C46969 * C1496 +
              C46971 * C1084 + C48457 + C48457 + C46968 * C1096) *
                 C153927 +
             (C48143 + C48142 + C48141) * C154107) *
                C153722 +
            ((C48475 + C48474 + C48473) * C153927 + C48133 * C154107) *
                C154074) *
               C153847) *
              C153767 * C774)) /
            (p * q * std::sqrt(p + q));
    d2ee[154] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C154107 +
             C3138 * C153927) *
                C11376 +
            (C11381 + C11382) * C11377 + C11391 * C11378 + C11392 * C154108) *
               C153783 * C326 -
           ((C11589 + C11590) * C154108 + (C11591 + C11592) * C11378 +
            (C11593 + C11594) * C11377 +
            (C3139 * C153927 + C3138 * C154107) * C11376) *
               C153783 * C327 +
           ((C3139 * C154107 + C3142 * C153927) * C11376 +
            (C11595 + C11596) * C11377 + (C11597 + C11598) * C11378 +
            (C11599 + C11600) * C154108) *
               C153783 * C328) *
              C329 +
          (((C11594 + C11593) * C11376 + (C11592 + C11591) * C11377 +
            (C11590 + C11589) * C11378 +
            (C412 * C154107 + C419 * C153927) * C154108) *
               C153783 * C327 -
           (C11393 * C154108 + C11394 * C11378 + (C11384 + C11383) * C11377 +
            (C11382 + C11381) * C11376) *
               C153783 * C326 -
           (((C134 * C1343 + C1359 + C1359 + C153882 * C1353) * C153927 +
             C419 * C154107) *
                C154108 +
            (C11600 + C11599) * C11378 + (C11598 + C11597) * C11377 +
            (C11596 + C11595) * C11376) *
               C153783 * C328) *
              C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C154107 +
            C3138 * C153927) *
               C11376 +
           (C11381 + C11382) * C11377 + C11391 * C11378 + C11392 * C154108) *
              C153783 * C153767 * C130 -
          (C11393 * C154108 + C11394 * C11378 + (C11384 + C11383) * C11377 +
           (C11382 + C11381) * C11376) *
              C153783 * C153767 * C131 +
          (C11391 * C11376 + C11392 * C11377 + (C11388 + C11387) * C11378 +
           (C11389 + C11390) * C154108) *
              C153783 * C153767 * C132 -
          (((C134 * C775 + C781 + C781 + C153882 * C777) * C153927 +
            C198 * C154107) *
               C154108 +
           (C11390 + C11389) * C11378 + C11393 * C11377 + C11394 * C11376) *
              C153783 * C153767 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C34572 +
            C3138 * C34573 + C3139 * C34574 + C3142 * C154116) *
               C154074 +
           (C34579 + C34580 + C34581 + C34582) * C153722) *
              C153783 * C153767 * C130 -
          ((C34583 + C34584 + C34585 + C34586) * C153722 +
           (C34582 + C34581 + C34580 + C34579) * C154074) *
              C153783 * C153767 * C131 +
          ((C34586 + C34585 + C34584 + C34583) * C154074 +
           (C34587 + C34588 + C34589 + C34590) * C153722) *
              C153783 * C153767 * C132 -
          (((C134 * C1343 + C1359 + C1359 + C153882 * C1353) * C154116 +
            C419 * C34574 + C412 * C34573 + C196 * C34572) *
               C153722 +
           (C34590 + C34589 + C34588 + C34587) * C154074) *
              C153783 * C153767 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C34572 +
             C3138 * C34573 + C3139 * C34574 + C3142 * C154116) *
                C154074 +
            (C34579 + C34580 + C34581 + C34582) * C153722) *
               C153783 * C326 -
           ((C34785 + C34786 + C34787 + C34788) * C153722 +
            (C4591 * C154116 + C3142 * C34574 + C3139 * C34573 +
             C3138 * C34572) *
                C154074) *
               C153783 * C327 +
           ((C3139 * C34572 + C3142 * C34573 + C4591 * C34574 +
             C28235 * C154116) *
                C154074 +
            (C34789 + C34790 + C34791 + C34792) * C153722) *
               C153783 * C328) *
              C329 +
          (((C34788 + C34787 + C34786 + C34785) * C154074 +
            (C414 * C34572 + C417 * C34573 + C3140 * C34574 + C3144 * C154116) *
                C153722) *
               C153783 * C327 -
           ((C34583 + C34584 + C34585 + C34586) * C153722 +
            (C34582 + C34581 + C34580 + C34579) * C154074) *
               C153783 * C326 -
           (((C134 * C4574 + C4586 + C4586 + C153882 * C4580) * C154116 +
             C3144 * C34574 + C3140 * C34573 + C417 * C34572) *
                C153722 +
            (C34792 + C34791 + C34790 + C34789) * C154074) *
               C153783 * C328) *
              C153754)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C46971 * C136 + C46978 + C46978 + C46968 * C152 + C46973 * C556 +
             C46979 + C46979 + C46969 * C580 + C46975 * C557 + C46980 + C46980 +
             C154146 * C581) *
                C154107 +
            (C51548 + C51549 + C51550) * C153927) *
               C154074 +
           ((C47044 + C47045 + C47046) * C154107 +
            (C47357 + C47356 + C47355) * C153927) *
               C153722) *
              C153783 * C153767 * C130 -
          ((C47894 * C153927 + (C47049 + C47048 + C47047) * C154107) * C153722 +
           ((C47355 + C47356 + C47357) * C153927 +
            (C47046 + C47045 + C47044) * C154107) *
               C154074) *
              C153783 * C153767 * C131 +
          ((C47058 * C154107 + (C47354 + C47353 + C47352) * C153927) * C154074 +
           ((C47052 + C47051 + C47050) * C154107 +
            (C47902 + C47903 + C47904) * C153927) *
               C153722) *
              C153783 * C153767 * C132 -
          (((C46975 * C1485 + C47891 + C47891 + C154146 * C1495 +
             C46973 * C1085 + C47892 + C47892 + C46969 * C1097 + C46971 * C331 +
             C47893 + C47893 + C46968 * C355) *
                C153927 +
            (C47055 + C47054 + C47053) * C154107) *
               C153722 +
           ((C47904 + C47903 + C47902) * C153927 + C47059 * C154107) *
               C154074) *
              C153783 * C153767 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C46971 * C136 + C46978 + C46978 + C46968 * C152 + C46973 * C556 +
              C46979 + C46979 + C46969 * C580 + C46975 * C557 + C46980 +
              C46980 + C154146 * C581) *
                 C154107 +
             (C51548 + C51549 + C51550) * C153927) *
                C154074 +
            ((C47044 + C47045 + C47046) * C154107 + C58071 * C153927) *
                C153722) *
               C153783 * C326 -
           ((C51535 * C153927 + C58072 * C154107) * C153722 +
            ((C51553 + C51552 + C51551) * C153927 +
             (C51550 + C51549 + C51548) * C154107) *
                C154074) *
               C153783 * C327 +
           ((C51561 * C154107 + (C51556 + C51555 + C51554) * C153927) *
                C154074 +
            (C58073 * C154107 + (C51557 + C51558 + C51559) * C153927) *
                C153722) *
               C153783 * C328) *
              C329 +
          (((C58071 * C154107 + C58073 * C153927) * C154074 +
            ((C47354 + C47353 + C47352) * C154107 +
             (C47361 + C47362 + C47363) * C153927) *
                C153722) *
               C153783 * C327 -
           ((C47894 * C153927 + (C47049 + C47048 + C47047) * C154107) *
                C153722 +
            (C58072 * C153927 + (C47046 + C47045 + C47044) * C154107) *
                C154074) *
               C153783 * C326 -
           (((C46975 * C4809 + C48840 + C48840 + C154146 * C4815 +
              C46973 * C4170 + C48841 + C48841 + C46969 * C4178 +
              C46971 * C1345 + C48842 + C48842 + C46968 * C1355) *
                 C153927 +
             (C47363 + C47362 + C47361) * C154107) *
                C153722 +
            ((C51559 + C51558 + C51557) * C153927 + C51535 * C154107) *
                C154074) *
               C153783 * C328) *
              C153754)) /
            (p * q * std::sqrt(p + q));
    d2ee[155] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C34572 +
             C3138 * C34573 + C3139 * C34574 + C3142 * C154116) *
                C154074 +
            (C34579 + C34580 + C34581 + C34582) * C153722) *
               C153783 * C154164 -
           ((C34785 + C34786 + C34787 + C34788) * C153722 +
            (C4591 * C154116 + C3142 * C34574 + C3139 * C34573 +
             C3138 * C34572) *
                C154074) *
               C153783 * C154165 +
           ((C3139 * C34572 + C3142 * C34573 + C4591 * C34574 +
             C28235 * C154116) *
                C154074 +
            (C34789 + C34790 + C34791 + C34792) * C153722) *
               C153783 * C1629) *
              C154085 +
          (((C34788 + C34787 + C34786 + C34785) * C154074 +
            (C35194 + C35195 + C35196 + C35197) * C153722) *
               C153783 * C154165 -
           ((C34583 + C34584 + C34585 + C34586) * C153722 +
            (C34582 + C34581 + C34580 + C34579) * C154074) *
               C153783 * C154164 -
           (((C134 * C4574 + C4586 + C4586 + C153882 * C4580) * C154116 +
             C3144 * C34574 + C3140 * C34573 + C417 * C34572) *
                C153722 +
            (C34792 + C34791 + C34790 + C34789) * C154074) *
               C153783 * C1629) *
              C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C154107 +
             C3138 * C153927) *
                C11376 +
            (C11381 + C11382) * C11377 + C11391 * C11378 + C11392 * C154108) *
               C153783 * C154164 -
           (C12006 * C154108 + C12007 * C11378 + (C11593 + C11594) * C11377 +
            (C3139 * C153927 + C3138 * C154107) * C11376) *
               C153783 * C154165 +
           ((C3139 * C154107 + C3142 * C153927) * C11376 +
            (C11595 + C11596) * C11377 + (C11597 + C11598) * C11378 +
            (C11599 + C11600) * C154108) *
               C153783 * C1629) *
              C154085 +
          (((C11594 + C11593) * C11376 + (C11592 + C11591) * C11377 +
            (C11590 + C11589) * C11378 + (C12008 + C12009) * C154108) *
               C153783 * C154165 -
           (C11393 * C154108 + C11394 * C11378 + (C11384 + C11383) * C11377 +
            (C11382 + C11381) * C11376) *
               C153783 * C154164 -
           (((C134 * C1343 + C1359 + C1359 + C153882 * C1353) * C153927 +
             C419 * C154107) *
                C154108 +
            (C11600 + C11599) * C11378 + (C11598 + C11597) * C11377 +
            (C11596 + C11595) * C11376) *
               C153783 * C1629) *
              C153754)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C46971 * C136 + C46978 + C46978 + C46968 * C152 + C46973 * C556 +
              C46979 + C46979 + C46969 * C580 + C46975 * C557 + C46980 +
              C46980 + C154146 * C581) *
                 C154107 +
             (C51548 + C51549 + C51550) * C153927) *
                C154074 +
            ((C47044 + C47045 + C47046) * C154107 + C58071 * C153927) *
                C153722) *
               C153783 * C154164 -
           ((C51535 * C153927 + C58072 * C154107) * C153722 +
            ((C51553 + C51552 + C51551) * C153927 +
             (C51550 + C51549 + C51548) * C154107) *
                C154074) *
               C153783 * C154165 +
           ((C51561 * C154107 + (C51556 + C51555 + C51554) * C153927) *
                C154074 +
            (C58073 * C154107 + (C51557 + C51558 + C51559) * C153927) *
                C153722) *
               C153783 * C1629) *
              C154085 +
          (((C58071 * C154107 + C58073 * C153927) * C154074 +
            (C58670 * C154107 + (C47361 + C47362 + C47363) * C153927) *
                C153722) *
               C153783 * C154165 -
           ((C47894 * C153927 + (C47049 + C47048 + C47047) * C154107) *
                C153722 +
            (C58072 * C153927 + (C47046 + C47045 + C47044) * C154107) *
                C154074) *
               C153783 * C154164 -
           (((C46975 * C4809 + C48840 + C48840 + C154146 * C4815 +
              C46973 * C4170 + C48841 + C48841 + C46969 * C4178 +
              C46971 * C1345 + C48842 + C48842 + C46968 * C1355) *
                 C153927 +
             (C47363 + C47362 + C47361) * C154107) *
                C153722 +
            ((C51559 + C51558 + C51557) * C153927 + C51535 * C154107) *
                C154074) *
               C153783 * C1629) *
              C153754)) /
            (p * q * std::sqrt(p + q));
    d2ee[156] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C34572 +
             C3138 * C34573 + C3139 * C34574 + C3142 * C154116) *
                C154074 +
            (C34579 + C34580 + C34581 + C34582) * C153722) *
               C154094 -
           ((C34987 + C34988 + C34989 + C34990) * C153722 +
            (C5574 * C154116 + C4205 * C34574 + C4206 * C34573 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C34572) *
                C154074) *
               C153847) *
              C154164 +
          (((C4206 * C34572 + C4205 * C34573 + C5574 * C34574 +
             C28789 * C154116) *
                C154074 +
            (C35654 + C35655 + C35656 + C35657) * C153722) *
               C153847 -
           ((C34785 + C34786 + C34787 + C34788) * C153722 +
            (C4591 * C154116 + C3142 * C34574 + C3139 * C34573 +
             C3138 * C34572) *
                C154074) *
               C154094) *
              C154165 +
          (((C3139 * C34572 + C3142 * C34573 + C4591 * C34574 +
             C28235 * C154116) *
                C154074 +
            (C34789 + C34790 + C34791 + C34792) * C153722) *
               C154094 -
           (((C134 * C28773 + C28784 + C28784 + C153882 * C28777) * C154116 +
             C28790 * C34574 + C4207 * C34573 + C3417 * C34572) *
                C153722 +
            (C29554 * C154116 + C28789 * C34574 + C5574 * C34573 +
             C4205 * C34572) *
                C154074) *
               C153847) *
              C1629) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C154107 +
             C3138 * C153927) *
                C11376 +
            (C11381 + C11382) * C11377 + C11391 * C11378 + C11392 * C154108) *
               C154094 -
           (C12204 * C154108 + C12205 * C11378 + (C11799 + C11800) * C11377 +
            (C4206 * C153927 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C154107) *
                C11376) *
               C153847) *
              C154164 +
          (((C4206 * C154107 + C4205 * C153927) * C11376 +
            (C12466 + C12467) * C11377 + (C12468 + C12469) * C11378 +
            (C12470 + C12471) * C154108) *
               C153847 -
           (C12006 * C154108 + C12007 * C11378 + (C11593 + C11594) * C11377 +
            (C3139 * C153927 + C3138 * C154107) * C11376) *
               C154094) *
              C154165 +
          (((C3139 * C154107 + C3142 * C153927) * C11376 +
            (C11595 + C11596) * C11377 + (C11597 + C11598) * C11378 +
            (C11599 + C11600) * C154108) *
               C154094 -
           (((C134 * C4171 + C4196 + C4196 + C153882 * C4179) * C153927 +
             C3877 * C154107) *
                C154108 +
            (C4208 * C153927 + C3416 * C154107) * C11378 +
            (C4207 * C153927 + C3417 * C154107) * C11377 +
            (C5574 * C153927 + C4205 * C154107) * C11376) *
               C153847) *
              C1629) *
         C153748) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C46971 * C136 + C46978 + C46978 + C46968 * C152 + C46973 * C556 +
              C46979 + C46979 + C46969 * C580 + C46975 * C557 + C46980 +
              C46980 + C154146 * C581) *
                 C154107 +
             (C51548 + C51549 + C51550) * C153927) *
                C154074 +
            ((C47044 + C47045 + C47046) * C154107 + C58071 * C153927) *
                C153722) *
               C154094 -
           ((C59349 * C153927 + (C47657 + C47658 + C47659) * C154107) *
                C153722 +
            ((C52557 + C52558 + C52559) * C153927 +
             (C46975 * C2272 + C47600 + C47600 + C154146 * C2282 +
              C46973 * C557 + C47601 + C47601 + C46969 * C581 + C46971 * C556 +
              C47602 + C47602 + C46968 * C580) *
                 C154107) *
                C154074) *
               C153847) *
              C154164 +
          ((((C52559 + C52558 + C52557) * C154107 +
             (C52556 + C52555 + C52554) * C153927) *
                C154074 +
            (C59350 * C154107 + (C52560 + C52561 + C52562) * C153927) *
                C153722) *
               C153847 -
           ((C51535 * C153927 + C58072 * C154107) * C153722 +
            ((C51553 + C51552 + C51551) * C153927 +
             (C51550 + C51549 + C51548) * C154107) *
                C154074) *
               C154094) *
              C154165 +
          (((C51561 * C154107 + (C51556 + C51555 + C51554) * C153927) *
                C154074 +
            (C58073 * C154107 + (C51557 + C51558 + C51559) * C153927) *
                C153722) *
               C154094 -
           (((C46975 * C31684 + C52533 + C52533 + C154146 * C31686 +
              C46973 * C4810 + C52534 + C52534 + C46969 * C4816 +
              C46971 * C4169 + C52535 + C52535 + C46968 * C4177) *
                 C153927 +
             (C52562 + C52561 + C52560) * C154107) *
                C153722 +
            ((C53943 + C53942 + C53941) * C153927 + C53934 * C154107) *
                C154074) *
               C153847) *
              C1629) *
         C153748) /
            (p * q * std::sqrt(p + q));
    d2ee[157] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C134 * C136 + C161 + C161 + C153882 * C152) * C154107 +
                 C3138 * C153927) *
                    C11376 +
                (C11381 + C11382) * C11377 + C11391 * C11378 +
                C11392 * C154108) *
                   C153783 * C1251 -
               (C12006 * C154108 + C12007 * C11378 +
                (C11593 + C11594) * C11377 +
                (C3139 * C153927 + C3138 * C154107) * C11376) *
                   C153783 * C153819) *
                  C1253 +
              (((C11594 + C11593) * C11376 + (C11592 + C11591) * C11377 +
                (C11590 + C11589) * C11378 + (C12008 + C12009) * C154108) *
                   C153783 * C153819 -
               (C11393 * C154108 + C11394 * C11378 +
                (C11384 + C11383) * C11377 + (C11382 + C11381) * C11376) *
                   C153783 * C1251) *
                  C1254 +
              ((C11391 * C11376 + C11392 * C11377 + (C11388 + C11387) * C11378 +
                (C11389 + C11390) * C154108) *
                   C153783 * C1251 -
               (((C134 * C342 + C395 + C395 + C153882 * C366) * C153927 +
                 C784 * C154107) *
                    C154108 +
                (C12009 + C12008) * C11378 + C12006 * C11377 +
                C12007 * C11376) *
                   C153783 * C153819) *
                  C1255) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C136 + C161 + C161 + C153882 * C152) * C154107 +
                C3138 * C153927) *
                   C11376 +
               (C11381 + C11382) * C11377 + C11391 * C11378 +
               C11392 * C154108) *
                  C153783 * C1338 -
              (C12006 * C154108 + C12007 * C11378 + (C11593 + C11594) * C11377 +
               (C3139 * C153927 + C3138 * C154107) * C11376) *
                  C153783 * C1339 +
              ((C3139 * C154107 + C3142 * C153927) * C11376 +
               (C11595 + C11596) * C11377 + (C11597 + C11598) * C11378 +
               (C11599 + C11600) * C154108) *
                  C153783 * C1340 -
              (((C134 * C3086 + C3121 + C3121 + C153882 * C3094) * C153927 +
                C3145 * C154107) *
                   C154108 +
               (C3144 * C153927 + C3140 * C154107) * C11378 +
               (C3143 * C153927 + C3141 * C154107) * C11377 +
               (C4591 * C153927 + C3142 * C154107) * C11376) *
                  C153783 * C1341) *
             C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C154107 +
             C3138 * C153927) *
                C11376 +
            (C11381 + C11382) * C11377 + C11391 * C11378 + C11392 * C154108) *
               C549 -
           (C12204 * C154108 + C12205 * C11378 + (C11799 + C11800) * C11377 +
            (C4206 * C153927 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C154107) *
                C11376) *
               C550 +
           (((C134 * C557 + C602 + C602 + C153882 * C581) * C154107 +
             C4830 * C153927) *
                C11376 +
            (C11801 + C11802) * C11377 + (C11803 + C11804) * C11378 +
            (C11805 + C11811) * C154108) *
               C551) *
              C1251 +
          (((C4206 * C154107 + C4205 * C153927) * C11376 +
            (C12466 + C12467) * C11377 + (C12468 + C12469) * C11378 +
            (C12470 + C12471) * C154108) *
               C550 -
           (C12006 * C154108 + C12007 * C11378 + (C11593 + C11594) * C11377 +
            (C3139 * C153927 + C3138 * C154107) * C11376) *
               C549 -
           (((C134 * C3372 + C3403 + C3403 + C153882 * C3380) * C153927 +
             C11810 * C154107) *
                C154108 +
            (C3421 * C153927 + C3420 * C154107) * C11378 +
            (C3419 * C153927 + C3418 * C154107) * C11377 +
            (C4831 * C153927 + C4830 * C154107) * C11376) *
               C551) *
              C153819) *
         C153748) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C34572 +
             C3138 * C34573 + C3139 * C34574 + C3142 * C154116) *
                C154074 +
            (C34579 + C34580 + C34581 + C34582) * C153722) *
               C153783 * C1251 -
           ((C34785 + C34786 + C34787 + C34788) * C153722 +
            (C4591 * C154116 + C3142 * C34574 + C3139 * C34573 +
             C3138 * C34572) *
                C154074) *
               C153783 * C153819) *
              C1253 +
          (((C34788 + C34787 + C34786 + C34785) * C154074 +
            (C35194 + C35195 + C35196 + C35197) * C153722) *
               C153783 * C153819 -
           ((C34583 + C34584 + C34585 + C34586) * C153722 +
            (C34582 + C34581 + C34580 + C34579) * C154074) *
               C153783 * C1251) *
              C1254 +
          (((C34586 + C34585 + C34584 + C34583) * C154074 +
            (C34587 + C34588 + C34589 + C34590) * C153722) *
               C153783 * C1251 -
           (((C134 * C3086 + C3121 + C3121 + C153882 * C3094) * C154116 +
             C3145 * C34574 + C418 * C34573 + C413 * C34572) *
                C153722 +
            (C35197 + C35196 + C35195 + C35194) * C154074) *
               C153783 * C153819) *
              C1255)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C34572 +
            C3138 * C34573 + C3139 * C34574 + C3142 * C154116) *
               C154074 +
           (C34579 + C34580 + C34581 + C34582) * C153722) *
              C153783 * C1338 -
          ((C34785 + C34786 + C34787 + C34788) * C153722 +
           (C4591 * C154116 + C3142 * C34574 + C3139 * C34573 +
            C3138 * C34572) *
               C154074) *
              C153783 * C1339 +
          ((C3139 * C34572 + C3142 * C34573 + C4591 * C34574 +
            C28235 * C154116) *
               C154074 +
           (C34789 + C34790 + C34791 + C34792) * C153722) *
              C153783 * C1340 -
          (((C134 * C28219 + C28230 + C28230 + C153882 * C28223) * C154116 +
            C28236 * C34574 + C3143 * C34573 + C3141 * C34572) *
               C153722 +
           (C29003 * C154116 + C28235 * C34574 + C4591 * C34573 +
            C3142 * C34572) *
               C154074) *
              C153783 * C1341) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C34572 +
             C3138 * C34573 + C3139 * C34574 + C3142 * C154116) *
                C154074 +
            (C34579 + C34580 + C34581 + C34582) * C153722) *
               C549 -
           ((C34987 + C34988 + C34989 + C34990) * C153722 +
            (C5574 * C154116 + C4205 * C34574 + C4206 * C34573 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C34572) *
                C154074) *
               C550 +
           (((C134 * C557 + C602 + C602 + C153882 * C581) * C34572 +
             C4830 * C34573 + C4831 * C34574 + C29138 * C154116) *
                C154074 +
            (C34991 + C34992 + C34993 + C34999) * C153722) *
               C551) *
              C1251 +
          (((C4206 * C34572 + C4205 * C34573 + C5574 * C34574 +
             C28789 * C154116) *
                C154074 +
            (C35654 + C35655 + C35656 + C35657) * C153722) *
               C550 -
           ((C34785 + C34786 + C34787 + C34788) * C153722 +
            (C4591 * C154116 + C3142 * C34574 + C3139 * C34573 +
             C3138 * C34572) *
                C154074) *
               C549 -
           (((C134 * C28359 + C28366 + C28366 + C153882 * C28363) * C154116 +
             C34998 * C34574 + C3419 * C34573 + C3418 * C34572) *
                C153722 +
            (C29139 * C154116 + C29138 * C34574 + C4831 * C34573 +
             C4830 * C34572) *
                C154074) *
               C551) *
              C153819) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C46971 * C136 + C46978 + C46978 + C46968 * C152 + C46973 * C556 +
              C46979 + C46979 + C46969 * C580 + C46975 * C557 + C46980 +
              C46980 + C154146 * C581) *
                 C154107 +
             (C51548 + C51549 + C51550) * C153927) *
                C154074 +
            ((C47044 + C47045 + C47046) * C154107 + C58071 * C153927) *
                C153722) *
               C153783 * C1251 -
           ((C51535 * C153927 + C58072 * C154107) * C153722 +
            ((C51553 + C51552 + C51551) * C153927 +
             (C51550 + C51549 + C51548) * C154107) *
                C154074) *
               C153783 * C153819) *
              C1253 +
          (((C58071 * C154107 + C58073 * C153927) * C154074 +
            (C58670 * C154107 + (C47361 + C47362 + C47363) * C153927) *
                C153722) *
               C153783 * C153819 -
           ((C47894 * C153927 + (C47049 + C47048 + C47047) * C154107) *
                C153722 +
            (C58072 * C153927 + (C47046 + C47045 + C47044) * C154107) *
                C154074) *
               C153783 * C1251) *
              C1254 +
          (((C47058 * C154107 + C58670 * C153927) * C154074 +
            ((C47052 + C47051 + C47050) * C154107 +
             (C47902 + C47903 + C47904) * C153927) *
                C153722) *
               C153783 * C1251 -
           (((C46975 * C3372 + C47325 + C47325 + C154146 * C3380 +
              C46973 * C1917 + C47326 + C47326 + C46969 * C1927 +
              C46971 * C339 + C47327 + C47327 + C46968 * C363) *
                 C153927 +
             (C47904 + C47903 + C47902) * C154107) *
                C153722 +
            ((C47363 + C47362 + C47361) * C153927 + C47894 * C154107) *
                C154074) *
               C153783 * C153819) *
              C1255)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C46971 * C136 + C46978 + C46978 + C46968 * C152 + C46973 * C556 +
             C46979 + C46979 + C46969 * C580 + C46975 * C557 + C46980 + C46980 +
             C154146 * C581) *
                C154107 +
            (C51548 + C51549 + C51550) * C153927) *
               C154074 +
           ((C47044 + C47045 + C47046) * C154107 + C58071 * C153927) *
               C153722) *
              C153783 * C1338 -
          ((C51535 * C153927 + C58072 * C154107) * C153722 +
           ((C51553 + C51552 + C51551) * C153927 +
            (C51550 + C51549 + C51548) * C154107) *
               C154074) *
              C153783 * C1339 +
          ((C51561 * C154107 + (C51556 + C51555 + C51554) * C153927) * C154074 +
           (C58073 * C154107 + (C51557 + C51558 + C51559) * C153927) *
               C153722) *
              C153783 * C1340 -
          (((C46975 * C28359 + C51520 + C51520 + C154146 * C28363 +
             C46973 * C5558 + C51521 + C51521 + C46969 * C5564 +
             C46971 * C3084 + C51522 + C51522 + C46968 * C3092) *
                C153927 +
            (C51559 + C51558 + C51557) * C154107) *
               C153722 +
           ((C52946 + C52945 + C52944) * C153927 + C52937 * C154107) *
               C154074) *
              C153783 * C1341) *
         C153748) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C46971 * C136 + C46978 + C46978 + C46968 * C152 + C46973 * C556 +
              C46979 + C46979 + C46969 * C580 + C46975 * C557 + C46980 +
              C46980 + C154146 * C581) *
                 C154107 +
             (C51548 + C51549 + C51550) * C153927) *
                C154074 +
            ((C47044 + C47045 + C47046) * C154107 + C58071 * C153927) *
                C153722) *
               C549 -
           ((C59349 * C153927 + (C47657 + C47658 + C47659) * C154107) *
                C153722 +
            ((C52557 + C52558 + C52559) * C153927 +
             (C46975 * C2272 + C47600 + C47600 + C154146 * C2282 +
              C46973 * C557 + C47601 + C47601 + C46969 * C581 + C46971 * C556 +
              C47602 + C47602 + C46968 * C580) *
                 C154107) *
                C154074) *
               C550 +
           (((C46971 * C557 + C47603 + C47603 + C46968 * C581 + C46973 * C2272 +
              C47604 + C47604 + C46969 * C2282 + C46975 * C7665 + C47605 +
              C47605 + C154146 * C7673) *
                 C154107 +
             (C53192 + C53193 + C53194) * C153927) *
                C154074 +
            ((C47660 + C47661 + C47662) * C154107 +
             (C58376 + C58377 + C58378) * C153927) *
                C153722) *
               C551) *
              C1251 +
          ((((C52559 + C52558 + C52557) * C154107 +
             (C52556 + C52555 + C52554) * C153927) *
                C154074 +
            (C59350 * C154107 + (C52560 + C52561 + C52562) * C153927) *
                C153722) *
               C550 -
           ((C51535 * C153927 + C58072 * C154107) * C153722 +
            ((C51553 + C51552 + C51551) * C153927 +
             (C51550 + C51549 + C51548) * C154107) *
                C154074) *
               C549 -
           (((C46975 * C30947 + C51783 + C51783 + C154146 * C30951 +
              C46973 * C6158 + C51784 + C51784 + C46969 * C6170 +
              C46971 * C3370 + C51785 + C51785 + C46968 * C3378) *
                 C153927 +
             (C58378 + C58377 + C58376) * C154107) *
                C153722 +
            ((C53197 + C53196 + C53195) * C153927 +
             (C53194 + C53193 + C53192) * C154107) *
                C154074) *
               C551) *
              C153819) *
         C153748) /
            (p * q * std::sqrt(p + q));
    d2ee[158] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C153882 * C152) * C34572 +
              C3138 * C34573 + C3139 * C34574 + C3142 * C154116) *
                 C154074 +
             (C34579 + C34580 + C34581 + C34582) * C153722) *
                C154094 -
            ((C34987 + C34988 + C34989 + C34990) * C153722 +
             (C5574 * C154116 + C4205 * C34574 + C4206 * C34573 +
              (C134 * C556 + C601 + C601 + C153882 * C580) * C34572) *
                 C154074) *
                C153847) *
               C1251 +
           (((C4206 * C34572 + C4205 * C34573 + C5574 * C34574 +
              C28789 * C154116) *
                 C154074 +
             (C35654 + C35655 + C35656 + C35657) * C153722) *
                C153847 -
            ((C34785 + C34786 + C34787 + C34788) * C153722 +
             (C4591 * C154116 + C3142 * C34574 + C3139 * C34573 +
              C3138 * C34572) *
                 C154074) *
                C154094) *
               C153819) *
              C154085 +
          ((((C34990 + C34989 + C34988 + C34987) * C154074 +
             (C35392 + C35393 + C35394 + C35395) * C153722) *
                C153847 -
            ((C34583 + C34584 + C34585 + C34586) * C153722 +
             (C34582 + C34581 + C34580 + C34579) * C154074) *
                C154094) *
               C1251 +
           (((C34788 + C34787 + C34786 + C34785) * C154074 +
             (C35194 + C35195 + C35196 + C35197) * C153722) *
                C154094 -
            (((C134 * C5557 + C5569 + C5569 + C153882 * C5563) * C154116 +
              C4208 * C34574 + C3416 * C34573 + C1123 * C34572) *
                 C153722 +
             (C35657 + C35656 + C35655 + C35654) * C154074) *
                C153847) *
               C153819) *
              C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C153882 * C152) * C154107 +
              C3138 * C153927) *
                 C11376 +
             (C11381 + C11382) * C11377 + C11391 * C11378 + C11392 * C154108) *
                C154094 -
            (C12204 * C154108 + C12205 * C11378 + (C11799 + C11800) * C11377 +
             (C4206 * C153927 +
              (C134 * C556 + C601 + C601 + C153882 * C580) * C154107) *
                 C11376) *
                C153847) *
               C1251 +
           (((C4206 * C154107 + C4205 * C153927) * C11376 +
             (C12466 + C12467) * C11377 + (C12468 + C12469) * C11378 +
             (C12470 + C12471) * C154108) *
                C153847 -
            (C12006 * C154108 + C12007 * C11378 + (C11593 + C11594) * C11377 +
             (C3139 * C153927 + C3138 * C154107) * C11376) *
                C154094) *
               C153819) *
              C154085 +
          ((((C11800 + C11799) * C11376 + (C11798 + C11797) * C11377 +
             (C11796 + C11795) * C11378 + (C12206 + C12207) * C154108) *
                C153847 -
            (C11393 * C154108 + C11394 * C11378 + (C11384 + C11383) * C11377 +
             (C11382 + C11381) * C11376) *
                C154094) *
               C1251 +
           (((C11594 + C11593) * C11376 + (C11592 + C11591) * C11377 +
             (C11590 + C11589) * C11378 + (C12008 + C12009) * C154108) *
                C154094 -
            (((C134 * C1916 + C1932 + C1932 + C153882 * C1926) * C153927 +
              C1125 * C154107) *
                 C154108 +
             (C12471 + C12470) * C11378 + (C12469 + C12468) * C11377 +
             (C12467 + C12466) * C11376) *
                C153847) *
               C153819) *
              C153754)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C46971 * C136 + C46978 + C46978 + C46968 * C152 + C46973 * C556 +
               C46979 + C46979 + C46969 * C580 + C46975 * C557 + C46980 +
               C46980 + C154146 * C581) *
                  C154107 +
              (C51548 + C51549 + C51550) * C153927) *
                 C154074 +
             ((C47044 + C47045 + C47046) * C154107 + C58071 * C153927) *
                 C153722) *
                C154094 -
            ((C59349 * C153927 + (C47657 + C47658 + C47659) * C154107) *
                 C153722 +
             ((C52557 + C52558 + C52559) * C153927 +
              (C46975 * C2272 + C47600 + C47600 + C154146 * C2282 +
               C46973 * C557 + C47601 + C47601 + C46969 * C581 + C46971 * C556 +
               C47602 + C47602 + C46968 * C580) *
                  C154107) *
                 C154074) *
                C153847) *
               C1251 +
           ((((C52559 + C52558 + C52557) * C154107 +
              (C52556 + C52555 + C52554) * C153927) *
                 C154074 +
             (C59350 * C154107 + (C52560 + C52561 + C52562) * C153927) *
                 C153722) *
                C153847 -
            ((C51535 * C153927 + C58072 * C154107) * C153722 +
             ((C51553 + C51552 + C51551) * C153927 +
              (C51550 + C51549 + C51548) * C154107) *
                 C154074) *
                C154094) *
               C153819) *
              C154085 +
          (((((C47659 + C47658 + C47657) * C154107 + C59350 * C153927) *
                 C154074 +
             ((C47656 + C47655 + C47654) * C154107 +
              (C48473 + C48474 + C48475) * C153927) *
                 C153722) *
                C153847 -
            ((C47894 * C153927 + (C47049 + C47048 + C47047) * C154107) *
                 C153722 +
             (C58072 * C153927 + (C47046 + C47045 + C47044) * C154107) *
                 C154074) *
                C154094) *
               C1251 +
           (((C58071 * C154107 + C58073 * C153927) * C154074 +
             (C58670 * C154107 + (C47361 + C47362 + C47363) * C153927) *
                 C153722) *
                C154094 -
            (((C46975 * C6156 + C49802 + C49802 + C154146 * C6168 +
               C46973 * C3371 + C49803 + C49803 + C46969 * C3379 +
               C46971 * C1918 + C49804 + C49804 + C46968 * C1928) *
                  C153927 +
              (C48475 + C48474 + C48473) * C154107) *
                 C153722 +
             ((C52562 + C52561 + C52560) * C153927 + C59349 * C154107) *
                 C154074) *
                C153847) *
               C153819) *
              C153754)) /
            (p * q * std::sqrt(p + q));
    d2ee[159] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C154107 +
            C3138 * C153927) *
               C11376 +
           (C11381 + C11382) * C11377 + C11391 * C11378 + C11392 * C154108) *
              C153783 * C1338 -
          (C12006 * C154108 + C12007 * C11378 + (C11593 + C11594) * C11377 +
           (C3139 * C153927 + C3138 * C154107) * C11376) *
              C153783 * C1339 +
          ((C3139 * C154107 + C3142 * C153927) * C11376 +
           (C11595 + C11596) * C11377 + (C11597 + C11598) * C11378 +
           (C11599 + C11600) * C154108) *
              C153783 * C1340 -
          (((C134 * C3086 + C3121 + C3121 + C153882 * C3094) * C153927 +
            C3145 * C154107) *
               C154108 +
           (C3144 * C153927 + C3140 * C154107) * C11378 +
           (C3143 * C153927 + C3141 * C154107) * C11377 +
           (C4591 * C153927 + C3142 * C154107) * C11376) *
              C153783 * C1341) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C154107 +
             C3138 * C153927) *
                C11376 +
            (C11381 + C11382) * C11377 + C11391 * C11378 + C11392 * C154108) *
               C153783 * C1251 -
           (C12006 * C154108 + C12007 * C11378 + (C11593 + C11594) * C11377 +
            (C3139 * C153927 + C3138 * C154107) * C11376) *
               C153783 * C153819) *
              C1253 +
          (((C11594 + C11593) * C11376 + (C11592 + C11591) * C11377 +
            (C11590 + C11589) * C11378 + (C12008 + C12009) * C154108) *
               C153783 * C153819 -
           (C11393 * C154108 + C11394 * C11378 + (C11384 + C11383) * C11377 +
            (C11382 + C11381) * C11376) *
               C153783 * C1251) *
              C1254 +
          ((C11391 * C11376 + C11392 * C11377 + (C11388 + C11387) * C11378 +
            (C11389 + C11390) * C154108) *
               C153783 * C1251 -
           (((C134 * C342 + C395 + C395 + C153882 * C366) * C153927 +
             C784 * C154107) *
                C154108 +
            (C12009 + C12008) * C11378 + C12006 * C11377 + C12007 * C11376) *
               C153783 * C153819) *
              C1255)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C34572 +
             C3138 * C34573 + C3139 * C34574 + C3142 * C154116) *
                C154074 +
            (C34579 + C34580 + C34581 + C34582) * C153722) *
               C153783 * C1251 -
           ((C34785 + C34786 + C34787 + C34788) * C153722 +
            (C4591 * C154116 + C3142 * C34574 + C3139 * C34573 +
             C3138 * C34572) *
                C154074) *
               C153783 * C153819) *
              C1253 +
          (((C34788 + C34787 + C34786 + C34785) * C154074 +
            (C35194 + C35195 + C35196 + C35197) * C153722) *
               C153783 * C153819 -
           ((C34583 + C34584 + C34585 + C34586) * C153722 +
            (C34582 + C34581 + C34580 + C34579) * C154074) *
               C153783 * C1251) *
              C1254 +
          (((C34586 + C34585 + C34584 + C34583) * C154074 +
            (C34587 + C34588 + C34589 + C34590) * C153722) *
               C153783 * C1251 -
           (((C134 * C3086 + C3121 + C3121 + C153882 * C3094) * C154116 +
             C3145 * C34574 + C418 * C34573 + C413 * C34572) *
                C153722 +
            (C35197 + C35196 + C35195 + C35194) * C154074) *
               C153783 * C153819) *
              C1255)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C34572 +
            C3138 * C34573 + C3139 * C34574 + C3142 * C154116) *
               C154074 +
           (C34579 + C34580 + C34581 + C34582) * C153722) *
              C153783 * C1338 -
          ((C34785 + C34786 + C34787 + C34788) * C153722 +
           (C4591 * C154116 + C3142 * C34574 + C3139 * C34573 +
            C3138 * C34572) *
               C154074) *
              C153783 * C1339 +
          ((C3139 * C34572 + C3142 * C34573 + C4591 * C34574 +
            C28235 * C154116) *
               C154074 +
           (C34789 + C34790 + C34791 + C34792) * C153722) *
              C153783 * C1340 -
          (((C134 * C28219 + C28230 + C28230 + C153882 * C28223) * C154116 +
            C28236 * C34574 + C3143 * C34573 + C3141 * C34572) *
               C153722 +
           (C29003 * C154116 + C28235 * C34574 + C4591 * C34573 +
            C3142 * C34572) *
               C154074) *
              C153783 * C1341) *
         C153748) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C46971 * C136 + C46978 + C46978 + C46968 * C152 + C46973 * C556 +
              C46979 + C46979 + C46969 * C580 + C46975 * C557 + C46980 +
              C46980 + C154146 * C581) *
                 C154107 +
             (C51548 + C51549 + C51550) * C153927) *
                C154074 +
            ((C47044 + C47045 + C47046) * C154107 + C58071 * C153927) *
                C153722) *
               C153783 * C1251 -
           ((C51535 * C153927 + C58072 * C154107) * C153722 +
            ((C51553 + C51552 + C51551) * C153927 +
             (C51550 + C51549 + C51548) * C154107) *
                C154074) *
               C153783 * C153819) *
              C1253 +
          (((C58071 * C154107 + C58073 * C153927) * C154074 +
            (C58670 * C154107 + (C47361 + C47362 + C47363) * C153927) *
                C153722) *
               C153783 * C153819 -
           ((C47894 * C153927 + (C47049 + C47048 + C47047) * C154107) *
                C153722 +
            (C58072 * C153927 + (C47046 + C47045 + C47044) * C154107) *
                C154074) *
               C153783 * C1251) *
              C1254 +
          (((C47058 * C154107 + C58670 * C153927) * C154074 +
            ((C47052 + C47051 + C47050) * C154107 +
             (C47902 + C47903 + C47904) * C153927) *
                C153722) *
               C153783 * C1251 -
           (((C46975 * C3372 + C47325 + C47325 + C154146 * C3380 +
              C46973 * C1917 + C47326 + C47326 + C46969 * C1927 +
              C46971 * C339 + C47327 + C47327 + C46968 * C363) *
                 C153927 +
             (C47904 + C47903 + C47902) * C154107) *
                C153722 +
            ((C47363 + C47362 + C47361) * C153927 + C47894 * C154107) *
                C154074) *
               C153783 * C153819) *
              C1255)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C46971 * C136 + C46978 + C46978 + C46968 * C152 + C46973 * C556 +
             C46979 + C46979 + C46969 * C580 + C46975 * C557 + C46980 + C46980 +
             C154146 * C581) *
                C154107 +
            (C51548 + C51549 + C51550) * C153927) *
               C154074 +
           ((C47044 + C47045 + C47046) * C154107 + C58071 * C153927) *
               C153722) *
              C153783 * C1338 -
          ((C51535 * C153927 + C58072 * C154107) * C153722 +
           ((C51553 + C51552 + C51551) * C153927 +
            (C51550 + C51549 + C51548) * C154107) *
               C154074) *
              C153783 * C1339 +
          ((C51561 * C154107 + (C51556 + C51555 + C51554) * C153927) * C154074 +
           (C58073 * C154107 + (C51557 + C51558 + C51559) * C153927) *
               C153722) *
              C153783 * C1340 -
          (((C46975 * C28359 + C51520 + C51520 + C154146 * C28363 +
             C46973 * C5558 + C51521 + C51521 + C46969 * C5564 +
             C46971 * C3084 + C51522 + C51522 + C46968 * C3092) *
                C153927 +
            (C51559 + C51558 + C51557) * C154107) *
               C153722 +
           ((C52946 + C52945 + C52944) * C153927 + C52937 * C154107) *
               C154074) *
              C153783 * C1341) *
         C153748) /
            (p * q * std::sqrt(p + q));
    d2ee[160] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C153882 * C152) * C34572 +
              C3138 * C34573 + C3139 * C34574 + C3142 * C154116) *
                 C154074 +
             (C34579 + C34580 + C34581 + C34582) * C153722) *
                C2058 -
            ((C34987 + C34988 + C34989 + C34990) * C153722 +
             (C5574 * C154116 + C4205 * C34574 + C4206 * C34573 +
              (C134 * C556 + C601 + C601 + C153882 * C580) * C34572) *
                 C154074) *
                C153847) *
               C154093 +
           (((C4206 * C34572 + C4205 * C34573 + C5574 * C34574 +
              C28789 * C154116) *
                 C154074 +
             (C35654 + C35655 + C35656 + C35657) * C153722) *
                C153847 -
            ((C34785 + C34786 + C34787 + C34788) * C153722 +
             (C4591 * C154116 + C3142 * C34574 + C3139 * C34573 +
              C3138 * C34572) *
                 C154074) *
                C2058) *
               C153819) *
              C154085 +
          ((((C34990 + C34989 + C34988 + C34987) * C154074 +
             (C35392 + C35393 + C35394 + C35395) * C153722) *
                C153847 -
            ((C34583 + C34584 + C34585 + C34586) * C153722 +
             (C34582 + C34581 + C34580 + C34579) * C154074) *
                C2058) *
               C154093 +
           (((C34788 + C34787 + C34786 + C34785) * C154074 +
             (C35194 + C35195 + C35196 + C35197) * C153722) *
                C2058 -
            (((C134 * C5557 + C5569 + C5569 + C153882 * C5563) * C154116 +
              C4208 * C34574 + C3416 * C34573 + C1123 * C34572) *
                 C153722 +
             (C35657 + C35656 + C35655 + C35654) * C154074) *
                C153847) *
               C153819) *
              C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C153882 * C152) * C154107 +
              C3138 * C153927) *
                 C11376 +
             (C11381 + C11382) * C11377 + C11391 * C11378 + C11392 * C154108) *
                C2058 -
            (C12204 * C154108 + C12205 * C11378 + (C11799 + C11800) * C11377 +
             (C4206 * C153927 +
              (C134 * C556 + C601 + C601 + C153882 * C580) * C154107) *
                 C11376) *
                C153847) *
               C154093 +
           (((C4206 * C154107 + C4205 * C153927) * C11376 +
             (C12466 + C12467) * C11377 + (C12468 + C12469) * C11378 +
             (C12470 + C12471) * C154108) *
                C153847 -
            (C12006 * C154108 + C12007 * C11378 + (C11593 + C11594) * C11377 +
             (C3139 * C153927 + C3138 * C154107) * C11376) *
                C2058) *
               C153819) *
              C154085 +
          ((((C11800 + C11799) * C11376 + (C11798 + C11797) * C11377 +
             (C11796 + C11795) * C11378 + (C12206 + C12207) * C154108) *
                C153847 -
            (C11393 * C154108 + C11394 * C11378 + (C11384 + C11383) * C11377 +
             (C11382 + C11381) * C11376) *
                C2058) *
               C154093 +
           (((C11594 + C11593) * C11376 + (C11592 + C11591) * C11377 +
             (C11590 + C11589) * C11378 + (C12008 + C12009) * C154108) *
                C2058 -
            (((C134 * C1916 + C1932 + C1932 + C153882 * C1926) * C153927 +
              C1125 * C154107) *
                 C154108 +
             (C12471 + C12470) * C11378 + (C12469 + C12468) * C11377 +
             (C12467 + C12466) * C11376) *
                C153847) *
               C153819) *
              C153754)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C46971 * C136 + C46978 + C46978 + C46968 * C152 + C46973 * C556 +
               C46979 + C46979 + C46969 * C580 + C46975 * C557 + C46980 +
               C46980 + C154146 * C581) *
                  C154107 +
              (C51548 + C51549 + C51550) * C153927) *
                 C154074 +
             ((C47044 + C47045 + C47046) * C154107 + C58071 * C153927) *
                 C153722) *
                C2058 -
            ((C59349 * C153927 + (C47657 + C47658 + C47659) * C154107) *
                 C153722 +
             ((C52557 + C52558 + C52559) * C153927 +
              (C46975 * C2272 + C47600 + C47600 + C154146 * C2282 +
               C46973 * C557 + C47601 + C47601 + C46969 * C581 + C46971 * C556 +
               C47602 + C47602 + C46968 * C580) *
                  C154107) *
                 C154074) *
                C153847) *
               C154093 +
           ((((C52559 + C52558 + C52557) * C154107 +
              (C52556 + C52555 + C52554) * C153927) *
                 C154074 +
             (C59350 * C154107 + (C52560 + C52561 + C52562) * C153927) *
                 C153722) *
                C153847 -
            ((C51535 * C153927 + C58072 * C154107) * C153722 +
             ((C51553 + C51552 + C51551) * C153927 +
              (C51550 + C51549 + C51548) * C154107) *
                 C154074) *
                C2058) *
               C153819) *
              C154085 +
          (((((C47659 + C47658 + C47657) * C154107 + C59350 * C153927) *
                 C154074 +
             ((C47656 + C47655 + C47654) * C154107 +
              (C48473 + C48474 + C48475) * C153927) *
                 C153722) *
                C153847 -
            ((C47894 * C153927 + (C47049 + C47048 + C47047) * C154107) *
                 C153722 +
             (C58072 * C153927 + (C47046 + C47045 + C47044) * C154107) *
                 C154074) *
                C2058) *
               C154093 +
           (((C58071 * C154107 + C58073 * C153927) * C154074 +
             (C58670 * C154107 + (C47361 + C47362 + C47363) * C153927) *
                 C153722) *
                C2058 -
            (((C46975 * C6156 + C49802 + C49802 + C154146 * C6168 +
               C46973 * C3371 + C49803 + C49803 + C46969 * C3379 +
               C46971 * C1918 + C49804 + C49804 + C46968 * C1928) *
                  C153927 +
              (C48475 + C48474 + C48473) * C154107) *
                 C153722 +
             ((C52562 + C52561 + C52560) * C153927 + C59349 * C154107) *
                 C154074) *
                C153847) *
               C153819) *
              C153754)) /
            (p * q * std::sqrt(p + q));
    d2ee[161] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C34572 +
             C3138 * C34573 + C3139 * C34574 + C3142 * C154116) *
                C154074 +
            (C34579 + C34580 + C34581 + C34582) * C153722) *
               C154166 -
           ((C34987 + C34988 + C34989 + C34990) * C153722 +
            (C5574 * C154116 + C4205 * C34574 + C4206 * C34573 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C34572) *
                C154074) *
               C154167 +
           (((C134 * C557 + C602 + C602 + C153882 * C581) * C34572 +
             C4830 * C34573 + C4831 * C34574 + C29138 * C154116) *
                C154074 +
            (C34991 + C34992 + C34993 + C34999) * C153722) *
               C2574) *
              C154093 +
          (((C4206 * C34572 + C4205 * C34573 + C5574 * C34574 +
             C28789 * C154116) *
                C154074 +
            (C35654 + C35655 + C35656 + C35657) * C153722) *
               C154167 -
           ((C34785 + C34786 + C34787 + C34788) * C153722 +
            (C4591 * C154116 + C3142 * C34574 + C3139 * C34573 +
             C3138 * C34572) *
                C154074) *
               C154166 -
           (((C134 * C28359 + C28366 + C28366 + C153882 * C28363) * C154116 +
             C34998 * C34574 + C3419 * C34573 + C3418 * C34572) *
                C153722 +
            (C29139 * C154116 + C29138 * C34574 + C4831 * C34573 +
             C4830 * C34572) *
                C154074) *
               C2574) *
              C153819) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C154107 +
             C3138 * C153927) *
                C11376 +
            (C11381 + C11382) * C11377 + C11391 * C11378 + C11392 * C154108) *
               C154166 -
           (C12204 * C154108 + C12205 * C11378 + (C11799 + C11800) * C11377 +
            (C4206 * C153927 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C154107) *
                C11376) *
               C154167 +
           (((C134 * C557 + C602 + C602 + C153882 * C581) * C154107 +
             C4830 * C153927) *
                C11376 +
            (C11801 + C11802) * C11377 + (C11803 + C11804) * C11378 +
            (C11805 + C11811) * C154108) *
               C2574) *
              C154093 +
          (((C4206 * C154107 + C4205 * C153927) * C11376 +
            (C12466 + C12467) * C11377 + (C12468 + C12469) * C11378 +
            (C12470 + C12471) * C154108) *
               C154167 -
           (C12006 * C154108 + C12007 * C11378 + (C11593 + C11594) * C11377 +
            (C3139 * C153927 + C3138 * C154107) * C11376) *
               C154166 -
           (((C134 * C3372 + C3403 + C3403 + C153882 * C3380) * C153927 +
             C11810 * C154107) *
                C154108 +
            (C3421 * C153927 + C3420 * C154107) * C11378 +
            (C3419 * C153927 + C3418 * C154107) * C11377 +
            (C4831 * C153927 + C4830 * C154107) * C11376) *
               C2574) *
              C153819) *
         C153748) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C46971 * C136 + C46978 + C46978 + C46968 * C152 + C46973 * C556 +
              C46979 + C46979 + C46969 * C580 + C46975 * C557 + C46980 +
              C46980 + C154146 * C581) *
                 C154107 +
             (C51548 + C51549 + C51550) * C153927) *
                C154074 +
            ((C47044 + C47045 + C47046) * C154107 + C58071 * C153927) *
                C153722) *
               C154166 -
           ((C59349 * C153927 + (C47657 + C47658 + C47659) * C154107) *
                C153722 +
            ((C52557 + C52558 + C52559) * C153927 +
             (C46975 * C2272 + C47600 + C47600 + C154146 * C2282 +
              C46973 * C557 + C47601 + C47601 + C46969 * C581 + C46971 * C556 +
              C47602 + C47602 + C46968 * C580) *
                 C154107) *
                C154074) *
               C154167 +
           (((C46971 * C557 + C47603 + C47603 + C46968 * C581 + C46973 * C2272 +
              C47604 + C47604 + C46969 * C2282 + C46975 * C7665 + C47605 +
              C47605 + C154146 * C7673) *
                 C154107 +
             (C53192 + C53193 + C53194) * C153927) *
                C154074 +
            ((C47660 + C47661 + C47662) * C154107 +
             (C58376 + C58377 + C58378) * C153927) *
                C153722) *
               C2574) *
              C154093 +
          ((((C52559 + C52558 + C52557) * C154107 +
             (C52556 + C52555 + C52554) * C153927) *
                C154074 +
            (C59350 * C154107 + (C52560 + C52561 + C52562) * C153927) *
                C153722) *
               C154167 -
           ((C51535 * C153927 + C58072 * C154107) * C153722 +
            ((C51553 + C51552 + C51551) * C153927 +
             (C51550 + C51549 + C51548) * C154107) *
                C154074) *
               C154166 -
           (((C46975 * C30947 + C51783 + C51783 + C154146 * C30951 +
              C46973 * C6158 + C51784 + C51784 + C46969 * C6170 +
              C46971 * C3370 + C51785 + C51785 + C46968 * C3378) *
                 C153927 +
             (C58378 + C58377 + C58376) * C154107) *
                C153722 +
            ((C53197 + C53196 + C53195) * C153927 +
             (C53194 + C53193 + C53192) * C154107) *
                C154074) *
               C2574) *
              C153819) *
         C153748) /
            (p * q * std::sqrt(p + q));
    d2ee[162] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C134 * C136 + C161 + C161 + C153882 * C152) * C154107 +
                 C3138 * C153927) *
                    C11376 +
                (C11381 + C11382) * C11377 + C11391 * C11378 +
                C11392 * C154108) *
                   C2058 -
               (C12204 * C154108 + C12205 * C11378 +
                (C11799 + C11800) * C11377 +
                (C4206 * C153927 +
                 (C134 * C556 + C601 + C601 + C153882 * C580) * C154107) *
                    C11376) *
                   C153847) *
                  C153767 * C1253 +
              (((C11800 + C11799) * C11376 + (C11798 + C11797) * C11377 +
                (C11796 + C11795) * C11378 + (C12206 + C12207) * C154108) *
                   C153847 -
               (C11393 * C154108 + C11394 * C11378 +
                (C11384 + C11383) * C11377 + (C11382 + C11381) * C11376) *
                   C2058) *
                  C153767 * C1254 +
              ((C11391 * C11376 + C11392 * C11377 + (C11388 + C11387) * C11378 +
                (C11389 + C11390) * C154108) *
                   C2058 -
               (((C134 * C1086 + C1113 + C1113 + C153882 * C1098) * C153927 +
                 C918 * C154107) *
                    C154108 +
                (C12207 + C12206) * C11378 + C12204 * C11377 +
                C12205 * C11376) *
                   C153847) *
                  C153767 * C1255) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C134 * C136 + C161 + C161 + C153882 * C152) * C154107 +
                 C3138 * C153927) *
                    C11376 +
                (C11381 + C11382) * C11377 + C11391 * C11378 +
                C11392 * C154108) *
                   C2058 -
               (C12204 * C154108 + C12205 * C11378 +
                (C11799 + C11800) * C11377 +
                (C4206 * C153927 +
                 (C134 * C556 + C601 + C601 + C153882 * C580) * C154107) *
                    C11376) *
                   C153847) *
                  C326 +
              (((C4206 * C154107 + C4205 * C153927) * C11376 +
                (C12466 + C12467) * C11377 + (C12468 + C12469) * C11378 +
                (C12470 + C12471) * C154108) *
                   C153847 -
               (C12006 * C154108 + C12007 * C11378 +
                (C11593 + C11594) * C11377 +
                (C3139 * C153927 + C3138 * C154107) * C11376) *
                   C2058) *
                  C327 +
              (((C3139 * C154107 + C3142 * C153927) * C11376 +
                (C11595 + C11596) * C11377 + (C11597 + C11598) * C11378 +
                (C11599 + C11600) * C154108) *
                   C2058 -
               (((C134 * C4171 + C4196 + C4196 + C153882 * C4179) * C153927 +
                 C3877 * C154107) *
                    C154108 +
                (C4208 * C153927 + C3416 * C154107) * C11378 +
                (C4207 * C153927 + C3417 * C154107) * C11377 +
                (C5574 * C153927 + C4205 * C154107) * C11376) *
                   C153847) *
                  C328) *
             C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C154107 +
            C3138 * C153927) *
               C11376 +
           (C11381 + C11382) * C11377 + C11391 * C11378 + C11392 * C154108) *
              C2264 -
          (C12204 * C154108 + C12205 * C11378 + (C11799 + C11800) * C11377 +
           (C4206 * C153927 +
            (C134 * C556 + C601 + C601 + C153882 * C580) * C154107) *
               C11376) *
              C2265 +
          (((C134 * C557 + C602 + C602 + C153882 * C581) * C154107 +
            C4830 * C153927) *
               C11376 +
           (C11801 + C11802) * C11377 + (C11803 + C11804) * C11378 +
           (C11805 + C11811) * C154108) *
              C2266 -
          (((C134 * C8529 + C14154 + C14154 + C153882 * C8531) * C153927 +
            (C134 * C2269 + C2285 + C2285 + C153882 * C2279) * C154107) *
               C154108 +
           ((C134 * C6157 + C6176 + C6176 + C153882 * C6169) * C153927 +
            (C134 * C2270 + C2286 + C2286 + C153882 * C2280) * C154107) *
               C11378 +
           ((C134 * C6159 + C6178 + C6178 + C153882 * C6171) * C153927 +
            (C134 * C2271 + C2287 + C2287 + C153882 * C2281) * C154107) *
               C11377 +
           ((C134 * C6161 + C6180 + C6180 + C153882 * C6173) * C153927 +
            (C134 * C2272 + C2288 + C2288 + C153882 * C2282) * C154107) *
               C11376) *
              C2267) *
         C153767 * C153748) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C34572 +
             C3138 * C34573 + C3139 * C34574 + C3142 * C154116) *
                C154074 +
            (C34579 + C34580 + C34581 + C34582) * C153722) *
               C2058 -
           ((C34987 + C34988 + C34989 + C34990) * C153722 +
            (C5574 * C154116 + C4205 * C34574 + C4206 * C34573 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C34572) *
                C154074) *
               C153847) *
              C153767 * C1253 +
          (((C34990 + C34989 + C34988 + C34987) * C154074 +
            (C35392 + C35393 + C35394 + C35395) * C153722) *
               C153847 -
           ((C34583 + C34584 + C34585 + C34586) * C153722 +
            (C34582 + C34581 + C34580 + C34579) * C154074) *
               C2058) *
              C153767 * C1254 +
          (((C34586 + C34585 + C34584 + C34583) * C154074 +
            (C34587 + C34588 + C34589 + C34590) * C153722) *
               C2058 -
           (((C134 * C4171 + C4196 + C4196 + C153882 * C4179) * C154116 +
             C3877 * C34574 + C1124 * C34573 + C634 * C34572) *
                C153722 +
            (C35395 + C35394 + C35393 + C35392) * C154074) *
               C153847) *
              C153767 * C1255)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C34572 +
             C3138 * C34573 + C3139 * C34574 + C3142 * C154116) *
                C154074 +
            (C34579 + C34580 + C34581 + C34582) * C153722) *
               C2058 -
           ((C34987 + C34988 + C34989 + C34990) * C153722 +
            (C5574 * C154116 + C4205 * C34574 + C4206 * C34573 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C34572) *
                C154074) *
               C153847) *
              C326 +
          (((C4206 * C34572 + C4205 * C34573 + C5574 * C34574 +
             C28789 * C154116) *
                C154074 +
            (C35654 + C35655 + C35656 + C35657) * C153722) *
               C153847 -
           ((C34785 + C34786 + C34787 + C34788) * C153722 +
            (C4591 * C154116 + C3142 * C34574 + C3139 * C34573 +
             C3138 * C34572) *
                C154074) *
               C2058) *
              C327 +
          (((C3139 * C34572 + C3142 * C34573 + C4591 * C34574 +
             C28235 * C154116) *
                C154074 +
            (C34789 + C34790 + C34791 + C34792) * C153722) *
               C2058 -
           (((C134 * C28773 + C28784 + C28784 + C153882 * C28777) * C154116 +
             C28790 * C34574 + C4207 * C34573 + C3417 * C34572) *
                C153722 +
            (C29554 * C154116 + C28789 * C34574 + C5574 * C34573 +
             C4205 * C34572) *
                C154074) *
               C153847) *
              C328) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C34572 +
            C3138 * C34573 + C3139 * C34574 + C3142 * C154116) *
               C154074 +
           (C34579 + C34580 + C34581 + C34582) * C153722) *
              C2264 -
          ((C34987 + C34988 + C34989 + C34990) * C153722 +
           (C5574 * C154116 + C4205 * C34574 + C4206 * C34573 +
            (C134 * C556 + C601 + C601 + C153882 * C580) * C34572) *
               C154074) *
              C2265 +
          (((C134 * C557 + C602 + C602 + C153882 * C581) * C34572 +
            C4830 * C34573 + C4831 * C34574 + C29138 * C154116) *
               C154074 +
           (C34991 + C34992 + C34993 + C34999) * C153722) *
              C2266 -
          (((C134 * C31684 + C37340 + C37340 + C153882 * C31686) * C154116 +
            (C134 * C6158 + C6177 + C6177 + C153882 * C6170) * C34574 +
            (C134 * C6159 + C6178 + C6178 + C153882 * C6171) * C34573 +
            (C134 * C2271 + C2287 + C2287 + C153882 * C2281) * C34572) *
               C153722 +
           ((C134 * C29881 + C29888 + C29888 + C153882 * C29885) * C154116 +
            (C134 * C6160 + C6179 + C6179 + C153882 * C6172) * C34574 +
            (C134 * C6161 + C6180 + C6180 + C153882 * C6173) * C34573 +
            (C134 * C2272 + C2288 + C2288 + C153882 * C2282) * C34572) *
               C154074) *
              C2267) *
         C153767 * C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C46971 * C136 + C46978 + C46978 + C46968 * C152 + C46973 * C556 +
              C46979 + C46979 + C46969 * C580 + C46975 * C557 + C46980 +
              C46980 + C154146 * C581) *
                 C154107 +
             (C51548 + C51549 + C51550) * C153927) *
                C154074 +
            ((C47044 + C47045 + C47046) * C154107 + C58071 * C153927) *
                C153722) *
               C2058 -
           ((C59349 * C153927 + (C47657 + C47658 + C47659) * C154107) *
                C153722 +
            ((C52557 + C52558 + C52559) * C153927 +
             (C46975 * C2272 + C47600 + C47600 + C154146 * C2282 +
              C46973 * C557 + C47601 + C47601 + C46969 * C581 + C46971 * C556 +
              C47602 + C47602 + C46968 * C580) *
                 C154107) *
                C154074) *
               C153847) *
              C153767 * C1253 +
          ((((C47659 + C47658 + C47657) * C154107 + C59350 * C153927) *
                C154074 +
            ((C47656 + C47655 + C47654) * C154107 +
             (C48473 + C48474 + C48475) * C153927) *
                C153722) *
               C153847 -
           ((C47894 * C153927 + (C47049 + C47048 + C47047) * C154107) *
                C153722 +
            (C58072 * C153927 + (C47046 + C47045 + C47044) * C154107) *
                C154074) *
               C2058) *
              C153767 * C1254 +
          (((C47058 * C154107 + C58670 * C153927) * C154074 +
            ((C47052 + C47051 + C47050) * C154107 +
             (C47902 + C47903 + C47904) * C153927) *
                C153722) *
               C2058 -
           (((C46975 * C8529 + C48455 + C48455 + C154146 * C8531 +
              C46973 * C1486 + C48456 + C48456 + C46969 * C1496 +
              C46971 * C1084 + C48457 + C48457 + C46968 * C1096) *
                 C153927 +
             (C48143 + C48142 + C48141) * C154107) *
                C153722 +
            ((C48475 + C48474 + C48473) * C153927 + C48133 * C154107) *
                C154074) *
               C153847) *
              C153767 * C1255)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C46971 * C136 + C46978 + C46978 + C46968 * C152 + C46973 * C556 +
              C46979 + C46979 + C46969 * C580 + C46975 * C557 + C46980 +
              C46980 + C154146 * C581) *
                 C154107 +
             (C51548 + C51549 + C51550) * C153927) *
                C154074 +
            ((C47044 + C47045 + C47046) * C154107 + C58071 * C153927) *
                C153722) *
               C2058 -
           ((C59349 * C153927 + (C47657 + C47658 + C47659) * C154107) *
                C153722 +
            ((C52557 + C52558 + C52559) * C153927 +
             (C46975 * C2272 + C47600 + C47600 + C154146 * C2282 +
              C46973 * C557 + C47601 + C47601 + C46969 * C581 + C46971 * C556 +
              C47602 + C47602 + C46968 * C580) *
                 C154107) *
                C154074) *
               C153847) *
              C326 +
          ((((C52559 + C52558 + C52557) * C154107 +
             (C52556 + C52555 + C52554) * C153927) *
                C154074 +
            (C59350 * C154107 + (C52560 + C52561 + C52562) * C153927) *
                C153722) *
               C153847 -
           ((C51535 * C153927 + C58072 * C154107) * C153722 +
            ((C51553 + C51552 + C51551) * C153927 +
             (C51550 + C51549 + C51548) * C154107) *
                C154074) *
               C2058) *
              C327 +
          (((C51561 * C154107 + (C51556 + C51555 + C51554) * C153927) *
                C154074 +
            (C58073 * C154107 + (C51557 + C51558 + C51559) * C153927) *
                C153722) *
               C2058 -
           (((C46975 * C31684 + C52533 + C52533 + C154146 * C31686 +
              C46973 * C4810 + C52534 + C52534 + C46969 * C4816 +
              C46971 * C4169 + C52535 + C52535 + C46968 * C4177) *
                 C153927 +
             (C52562 + C52561 + C52560) * C154107) *
                C153722 +
            ((C53943 + C53942 + C53941) * C153927 + C53934 * C154107) *
                C154074) *
               C153847) *
              C328) *
         C153748) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C46971 * C136 + C46978 + C46978 + C46968 * C152 + C46973 * C556 +
             C46979 + C46979 + C46969 * C580 + C46975 * C557 + C46980 + C46980 +
             C154146 * C581) *
                C154107 +
            (C51548 + C51549 + C51550) * C153927) *
               C154074 +
           ((C47044 + C47045 + C47046) * C154107 + C58071 * C153927) *
               C153722) *
              C2264 -
          ((C59349 * C153927 + (C47657 + C47658 + C47659) * C154107) * C153722 +
           ((C52557 + C52558 + C52559) * C153927 +
            (C46975 * C2272 + C47600 + C47600 + C154146 * C2282 +
             C46973 * C557 + C47601 + C47601 + C46969 * C581 + C46971 * C556 +
             C47602 + C47602 + C46968 * C580) *
                C154107) *
               C154074) *
              C2265 +
          (((C46971 * C557 + C47603 + C47603 + C46968 * C581 + C46973 * C2272 +
             C47604 + C47604 + C46969 * C2282 + C46975 * C7665 + C47605 +
             C47605 + C154146 * C7673) *
                C154107 +
            (C53192 + C53193 + C53194) * C153927) *
               C154074 +
           ((C47660 + C47661 + C47662) * C154107 +
            (C58376 + C58377 + C58378) * C153927) *
               C153722) *
              C2266 -
          (((C46975 * C56080 + C61865 + C61865 + C154146 * C56082 +
             C46973 * C9166 + C61866 + C61866 + C46969 * C9172 +
             C46971 * C6159 + C61867 + C61867 + C46968 * C6171) *
                C153927 +
            (C46975 * C10501 + C50396 + C50396 + C154146 * C10507 +
             C46973 * C7666 + C50397 + C50397 + C46969 * C7674 +
             C46971 * C2271 + C50398 + C50398 + C46968 * C2281) *
                C154107) *
               C153722 +
           ((C46975 * C33705 + C54529 + C54529 + C154146 * C33709 +
             C46973 * C9167 + C54530 + C54530 + C46969 * C9173 +
             C46971 * C6161 + C54531 + C54531 + C46968 * C6173) *
                C153927 +
            (C46975 * C10502 + C50399 + C50399 + C154146 * C10508 +
             C46973 * C7665 + C50400 + C50400 + C46969 * C7673 +
             C46971 * C2272 + C50401 + C50401 + C46968 * C2282) *
                C154107) *
               C154074) *
              C2267) *
         C153767 * C153748) /
            (p * q * std::sqrt(p + q));
    d2ee[163] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C34572 +
             C3138 * C34573 + C3139 * C34574 + C3142 * C154116) *
                C154074 +
            (C34579 + C34580 + C34581 + C34582) * C153722) *
               C154166 -
           ((C34987 + C34988 + C34989 + C34990) * C153722 +
            (C5574 * C154116 + C4205 * C34574 + C4206 * C34573 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C34572) *
                C154074) *
               C154167 +
           (((C134 * C557 + C602 + C602 + C153882 * C581) * C34572 +
             C4830 * C34573 + C4831 * C34574 + C29138 * C154116) *
                C154074 +
            (C34991 + C34992 + C34993 + C34999) * C153722) *
               C2574) *
              C153767 * C154085 +
          (((C34990 + C34989 + C34988 + C34987) * C154074 +
            (C35392 + C35393 + C35394 + C35395) * C153722) *
               C154167 -
           ((C34583 + C34584 + C34585 + C34586) * C153722 +
            (C34582 + C34581 + C34580 + C34579) * C154074) *
               C154166 -
           (((C134 * C4809 + C4823 + C4823 + C153882 * C4815) * C154116 +
             C3421 * C34574 + C3420 * C34573 + C638 * C34572) *
                C153722 +
            (C34999 + C34993 + C34992 + C34991) * C154074) *
               C2574) *
              C153767 * C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C154107 +
             C3138 * C153927) *
                C11376 +
            (C11381 + C11382) * C11377 + C11391 * C11378 + C11392 * C154108) *
               C154166 -
           (C12204 * C154108 + C12205 * C11378 + (C11799 + C11800) * C11377 +
            (C4206 * C153927 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C154107) *
                C11376) *
               C154167 +
           (((C134 * C557 + C602 + C602 + C153882 * C581) * C154107 +
             C4830 * C153927) *
                C11376 +
            (C11801 + C11802) * C11377 + (C11803 + C11804) * C11378 +
            (C11805 + C11811) * C154108) *
               C2574) *
              C153767 * C154085 +
          (((C11800 + C11799) * C11376 + (C11798 + C11797) * C11377 +
            (C11796 + C11795) * C11378 + (C12206 + C12207) * C154108) *
               C154167 -
           (C11393 * C154108 + C11394 * C11378 + (C11384 + C11383) * C11377 +
            (C11382 + C11381) * C11376) *
               C154166 -
           (((C134 * C1485 + C1501 + C1501 + C153882 * C1495) * C153927 +
             C640 * C154107) *
                C154108 +
            (C11811 + C11805) * C11378 + (C11804 + C11803) * C11377 +
            (C11802 + C11801) * C11376) *
               C2574) *
              C153767 * C153754)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C46971 * C136 + C46978 + C46978 + C46968 * C152 + C46973 * C556 +
              C46979 + C46979 + C46969 * C580 + C46975 * C557 + C46980 +
              C46980 + C154146 * C581) *
                 C154107 +
             (C51548 + C51549 + C51550) * C153927) *
                C154074 +
            ((C47044 + C47045 + C47046) * C154107 + C58071 * C153927) *
                C153722) *
               C154166 -
           ((C59349 * C153927 + (C47657 + C47658 + C47659) * C154107) *
                C153722 +
            ((C52557 + C52558 + C52559) * C153927 +
             (C46975 * C2272 + C47600 + C47600 + C154146 * C2282 +
              C46973 * C557 + C47601 + C47601 + C46969 * C581 + C46971 * C556 +
              C47602 + C47602 + C46968 * C580) *
                 C154107) *
                C154074) *
               C154167 +
           (((C46971 * C557 + C47603 + C47603 + C46968 * C581 + C46973 * C2272 +
              C47604 + C47604 + C46969 * C2282 + C46975 * C7665 + C47605 +
              C47605 + C154146 * C7673) *
                 C154107 +
             (C53192 + C53193 + C53194) * C153927) *
                C154074 +
            ((C47660 + C47661 + C47662) * C154107 +
             (C58376 + C58377 + C58378) * C153927) *
                C153722) *
               C2574) *
              C153767 * C154085 +
          ((((C47659 + C47658 + C47657) * C154107 + C59350 * C153927) *
                C154074 +
            ((C47656 + C47655 + C47654) * C154107 +
             (C48473 + C48474 + C48475) * C153927) *
                C153722) *
               C154167 -
           ((C47894 * C153927 + (C47049 + C47048 + C47047) * C154107) *
                C153722 +
            (C58072 * C153927 + (C47046 + C47045 + C47044) * C154107) *
                C154074) *
               C154166 -
           (((C46975 * C9165 + C49067 + C49067 + C154146 * C9171 +
              C46973 * C6157 + C49068 + C49068 + C46969 * C6169 +
              C46971 * C1487 + C49069 + C49069 + C46968 * C1497) *
                 C153927 +
             (C47665 + C47664 + C47663) * C154107) *
                C153722 +
            ((C58378 + C58377 + C58376) * C153927 +
             (C47662 + C47661 + C47660) * C154107) *
                C154074) *
               C2574) *
              C153767 * C153754)) /
            (p * q * std::sqrt(p + q));
    d2ee[164] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C154107 +
             C3138 * C153927) *
                C11376 +
            (C11381 + C11382) * C11377 + C11391 * C11378 + C11392 * C154108) *
               C2058 -
           (C12204 * C154108 + C12205 * C11378 + (C11799 + C11800) * C11377 +
            (C4206 * C153927 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C154107) *
                C11376) *
               C153847) *
              C326 +
          (((C4206 * C154107 + C4205 * C153927) * C11376 +
            (C12466 + C12467) * C11377 + (C12468 + C12469) * C11378 +
            (C12470 + C12471) * C154108) *
               C153847 -
           (C12006 * C154108 + C12007 * C11378 + (C11593 + C11594) * C11377 +
            (C3139 * C153927 + C3138 * C154107) * C11376) *
               C2058) *
              C327 +
          (((C3139 * C154107 + C3142 * C153927) * C11376 +
            (C11595 + C11596) * C11377 + (C11597 + C11598) * C11378 +
            (C11599 + C11600) * C154108) *
               C2058 -
           (((C134 * C4171 + C4196 + C4196 + C153882 * C4179) * C153927 +
             C3877 * C154107) *
                C154108 +
            (C4208 * C153927 + C3416 * C154107) * C11378 +
            (C4207 * C153927 + C3417 * C154107) * C11377 +
            (C5574 * C153927 + C4205 * C154107) * C11376) *
               C153847) *
              C328) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C154107 +
             C3138 * C153927) *
                C11376 +
            (C11381 + C11382) * C11377 + C11391 * C11378 + C11392 * C154108) *
               C2058 -
           (C12204 * C154108 + C12205 * C11378 + (C11799 + C11800) * C11377 +
            (C4206 * C153927 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C154107) *
                C11376) *
               C153847) *
              C153767 * C1253 +
          (((C11800 + C11799) * C11376 + (C11798 + C11797) * C11377 +
            (C11796 + C11795) * C11378 + (C12206 + C12207) * C154108) *
               C153847 -
           (C11393 * C154108 + C11394 * C11378 + (C11384 + C11383) * C11377 +
            (C11382 + C11381) * C11376) *
               C2058) *
              C153767 * C1254 +
          ((C11391 * C11376 + C11392 * C11377 + (C11388 + C11387) * C11378 +
            (C11389 + C11390) * C154108) *
               C2058 -
           (((C134 * C1086 + C1113 + C1113 + C153882 * C1098) * C153927 +
             C918 * C154107) *
                C154108 +
            (C12207 + C12206) * C11378 + C12204 * C11377 + C12205 * C11376) *
               C153847) *
              C153767 * C1255)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C34572 +
             C3138 * C34573 + C3139 * C34574 + C3142 * C154116) *
                C154074 +
            (C34579 + C34580 + C34581 + C34582) * C153722) *
               C2058 -
           ((C34987 + C34988 + C34989 + C34990) * C153722 +
            (C5574 * C154116 + C4205 * C34574 + C4206 * C34573 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C34572) *
                C154074) *
               C153847) *
              C153767 * C1253 +
          (((C34990 + C34989 + C34988 + C34987) * C154074 +
            (C35392 + C35393 + C35394 + C35395) * C153722) *
               C153847 -
           ((C34583 + C34584 + C34585 + C34586) * C153722 +
            (C34582 + C34581 + C34580 + C34579) * C154074) *
               C2058) *
              C153767 * C1254 +
          (((C34586 + C34585 + C34584 + C34583) * C154074 +
            (C34587 + C34588 + C34589 + C34590) * C153722) *
               C2058 -
           (((C134 * C4171 + C4196 + C4196 + C153882 * C4179) * C154116 +
             C3877 * C34574 + C1124 * C34573 + C634 * C34572) *
                C153722 +
            (C35395 + C35394 + C35393 + C35392) * C154074) *
               C153847) *
              C153767 * C1255)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C34572 +
             C3138 * C34573 + C3139 * C34574 + C3142 * C154116) *
                C154074 +
            (C34579 + C34580 + C34581 + C34582) * C153722) *
               C2058 -
           ((C34987 + C34988 + C34989 + C34990) * C153722 +
            (C5574 * C154116 + C4205 * C34574 + C4206 * C34573 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C34572) *
                C154074) *
               C153847) *
              C326 +
          (((C4206 * C34572 + C4205 * C34573 + C5574 * C34574 +
             C28789 * C154116) *
                C154074 +
            (C35654 + C35655 + C35656 + C35657) * C153722) *
               C153847 -
           ((C34785 + C34786 + C34787 + C34788) * C153722 +
            (C4591 * C154116 + C3142 * C34574 + C3139 * C34573 +
             C3138 * C34572) *
                C154074) *
               C2058) *
              C327 +
          (((C3139 * C34572 + C3142 * C34573 + C4591 * C34574 +
             C28235 * C154116) *
                C154074 +
            (C34789 + C34790 + C34791 + C34792) * C153722) *
               C2058 -
           (((C134 * C28773 + C28784 + C28784 + C153882 * C28777) * C154116 +
             C28790 * C34574 + C4207 * C34573 + C3417 * C34572) *
                C153722 +
            (C29554 * C154116 + C28789 * C34574 + C5574 * C34573 +
             C4205 * C34572) *
                C154074) *
               C153847) *
              C328) *
         C153748) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C46971 * C136 + C46978 + C46978 + C46968 * C152 + C46973 * C556 +
              C46979 + C46979 + C46969 * C580 + C46975 * C557 + C46980 +
              C46980 + C154146 * C581) *
                 C154107 +
             (C51548 + C51549 + C51550) * C153927) *
                C154074 +
            ((C47044 + C47045 + C47046) * C154107 + C58071 * C153927) *
                C153722) *
               C2058 -
           ((C59349 * C153927 + (C47657 + C47658 + C47659) * C154107) *
                C153722 +
            ((C52557 + C52558 + C52559) * C153927 +
             (C46975 * C2272 + C47600 + C47600 + C154146 * C2282 +
              C46973 * C557 + C47601 + C47601 + C46969 * C581 + C46971 * C556 +
              C47602 + C47602 + C46968 * C580) *
                 C154107) *
                C154074) *
               C153847) *
              C153767 * C1253 +
          ((((C47659 + C47658 + C47657) * C154107 + C59350 * C153927) *
                C154074 +
            ((C47656 + C47655 + C47654) * C154107 +
             (C48473 + C48474 + C48475) * C153927) *
                C153722) *
               C153847 -
           ((C47894 * C153927 + (C47049 + C47048 + C47047) * C154107) *
                C153722 +
            (C58072 * C153927 + (C47046 + C47045 + C47044) * C154107) *
                C154074) *
               C2058) *
              C153767 * C1254 +
          (((C47058 * C154107 + C58670 * C153927) * C154074 +
            ((C47052 + C47051 + C47050) * C154107 +
             (C47902 + C47903 + C47904) * C153927) *
                C153722) *
               C2058 -
           (((C46975 * C8529 + C48455 + C48455 + C154146 * C8531 +
              C46973 * C1486 + C48456 + C48456 + C46969 * C1496 +
              C46971 * C1084 + C48457 + C48457 + C46968 * C1096) *
                 C153927 +
             (C48143 + C48142 + C48141) * C154107) *
                C153722 +
            ((C48475 + C48474 + C48473) * C153927 + C48133 * C154107) *
                C154074) *
               C153847) *
              C153767 * C1255)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C46971 * C136 + C46978 + C46978 + C46968 * C152 + C46973 * C556 +
              C46979 + C46979 + C46969 * C580 + C46975 * C557 + C46980 +
              C46980 + C154146 * C581) *
                 C154107 +
             (C51548 + C51549 + C51550) * C153927) *
                C154074 +
            ((C47044 + C47045 + C47046) * C154107 + C58071 * C153927) *
                C153722) *
               C2058 -
           ((C59349 * C153927 + (C47657 + C47658 + C47659) * C154107) *
                C153722 +
            ((C52557 + C52558 + C52559) * C153927 +
             (C46975 * C2272 + C47600 + C47600 + C154146 * C2282 +
              C46973 * C557 + C47601 + C47601 + C46969 * C581 + C46971 * C556 +
              C47602 + C47602 + C46968 * C580) *
                 C154107) *
                C154074) *
               C153847) *
              C326 +
          ((((C52559 + C52558 + C52557) * C154107 +
             (C52556 + C52555 + C52554) * C153927) *
                C154074 +
            (C59350 * C154107 + (C52560 + C52561 + C52562) * C153927) *
                C153722) *
               C153847 -
           ((C51535 * C153927 + C58072 * C154107) * C153722 +
            ((C51553 + C51552 + C51551) * C153927 +
             (C51550 + C51549 + C51548) * C154107) *
                C154074) *
               C2058) *
              C327 +
          (((C51561 * C154107 + (C51556 + C51555 + C51554) * C153927) *
                C154074 +
            (C58073 * C154107 + (C51557 + C51558 + C51559) * C153927) *
                C153722) *
               C2058 -
           (((C46975 * C31684 + C52533 + C52533 + C154146 * C31686 +
              C46973 * C4810 + C52534 + C52534 + C46969 * C4816 +
              C46971 * C4169 + C52535 + C52535 + C46968 * C4177) *
                 C153927 +
             (C52562 + C52561 + C52560) * C154107) *
                C153722 +
            ((C53943 + C53942 + C53941) * C153927 + C53934 * C154107) *
                C154074) *
               C153847) *
              C328) *
         C153748) /
            (p * q * std::sqrt(p + q));
    d2ee[165] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
             C14938 + C14938 + C153969 * C580) *
                C34572 +
            (C19164 + C19165) * C34573 + C38471 * C34574 + C43614 * C154116) *
               C153712 * C153783 * C154093 -
           ((C40260 + C40259) * C154116 + C40246 * C34574 +
            (C19166 + C19167) * C34573 + (C19165 + C19164) * C34572) *
               C153712 * C153783 * C153819) *
              C154162 +
          ((C19130 * C34572 + C19138 * C34573 + C38473 * C34574 +
            (C38482 + C38483) * C154116) *
               C153712 * C153783 * C153819 -
           (C38472 * C154116 + C19132 * C34574 + C19133 * C34573 +
            (C14992 + C14991) * C34572) *
               C153712 * C153783 * C154093) *
              C154163 +
          ((C15001 * C34572 + C18830 * C34573 + C19143 * C34574 +
            (C19170 + C19171) * C154116) *
               C153712 * C153783 * C154093 -
           ((C14934 * C5557 + C20977 + C20977 + C153969 * C5563 +
             C14932 * C3085 + C20978 + C20978 + C154109 * C3093) *
                C154116 +
            (C19171 + C19170) * C34574 + C19131 * C34573 + C15752 * C34572) *
               C153712 * C153783 * C153819) *
              C774)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
              C14938 + C14938 + C153969 * C580) *
                 C154107 +
             (C19164 + C19165) * C153927) *
                C2846 +
            ((C14991 + C14992) * C154107 + C19130 * C153927) * C2847 +
            C18835 * C154130) *
               C153783 * C154093 -
           (C19775 * C154130 + (C19132 * C153927 + C19133 * C154107) * C2847 +
            ((C19166 + C19167) * C153927 + (C19165 + C19164) * C154107) *
                C2846) *
               C153783 * C153819) *
              C154162 +
          (((C19130 * C154107 + C19138 * C153927) * C2846 +
            (C18830 * C154107 + C19143 * C153927) * C2847 +
            (C19774 * C154107 + (C15281 + C15282) * C153927) * C154130) *
               C153783 * C153819 -
           (C18834 * C154130 +
            (C15752 * C153927 + (C14994 + C14993) * C154107) * C2847 +
            (C19133 * C153927 + (C14992 + C14991) * C154107) * C2846) *
               C153783 * C154093) *
              C154163 +
          ((C18835 * C2846 + (C15002 * C154107 + C19774 * C153927) * C2847 +
            ((C14998 + C14997) * C154107 + (C15765 + C15766) * C153927) *
                C154130) *
               C153783 * C154093 -
           (((C14934 * C1916 + C15245 + C15245 + C153969 * C1926 +
              C14932 * C340 + C15246 + C15246 + C154109 * C364) *
                 C153927 +
             (C15766 + C15765) * C154107) *
                C154130 +
            ((C15282 + C15281) * C153927 + C15751 * C154107) * C2847 +
            C19775 * C2846) *
               C153783 * C153819) *
              C774)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C62967 * C136 + C62976 + C62976 + C62963 * C152 + C62969 * C556 +
             C62977 + C62977 + C62964 * C580 + C62971 * C557 + C62978 + C62978 +
             C62965 * C581 + C62973 * C2272 + C62979 + C62979 +
             C154123 * C2282) *
                C154107 +
            (C67014 + C67015 + C67016 + C67017) * C153927) *
               C153712 * C153783 * C154093 -
           ((C67018 + C67019 + C67020 + C67021) * C153927 +
            (C67017 + C67016 + C67015 + C67014) * C154107) *
               C153712 * C153783 * C153819) *
              C154162 +
          (((C63309 + C63308 + C63307 + C63306) * C154107 +
            (C63310 + C63311 + C63312 + C63313) * C153927) *
               C153712 * C153783 * C153819 -
           ((C63306 + C63307 + C63308 + C63309) * C153927 +
            (C63047 + C63046 + C63045 + C63044) * C154107) *
               C153712 * C153783 * C154093) *
              C154163 +
          (((C63051 + C63050 + C63049 + C63048) * C154107 +
            (C63786 + C63787 + C63788 + C63789) * C153927) *
               C153712 * C153783 * C154093 -
           ((C62973 * C6156 + C63286 + C63286 + C154123 * C6168 +
             C62971 * C3371 + C63287 + C63287 + C62965 * C3379 +
             C62969 * C1918 + C63288 + C63288 + C62964 * C1928 + C62967 * C338 +
             C63289 + C63289 + C62963 * C362) *
                C153927 +
            (C63789 + C63788 + C63787 + C63786) * C154107) *
               C153712 * C153783 * C153819) *
              C774)) /
            (p * q * std::sqrt(p + q));
    d2ee[166] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
              C14938 + C14938 + C153969 * C580) *
                 C34572 +
             (C19164 + C19165) * C34573 + C38471 * C34574 + C43614 * C154116) *
                C153712 * C154094 -
            ((C41545 + C41544) * C154116 + C41531 * C34574 +
             (C20483 + C20484) * C34573 +
             (C14934 * C557 + C15495 + C15495 + C153969 * C581 + C14932 * C556 +
              C15496 + C15496 + C154109 * C580) *
                 C34572) *
                C153712 * C153847) *
               C154093 +
           (((C20484 + C20483) * C34572 + (C22275 + C22276) * C34573 +
             (C41544 + C41545) * C34574 +
             (C14932 * C5559 + C41539 + C41539 + C154109 * C5565 +
              C14934 * C28358 + C41538 + C41538 + C153969 * C28362) *
                 C154116) *
                C153712 * C153847 -
            ((C40260 + C40259) * C154116 + C40246 * C34574 +
             (C19166 + C19167) * C34573 + (C19165 + C19164) * C34572) *
                C153712 * C154094) *
               C153819) *
              C329 +
          ((((C15550 + C15549) * C34572 + C20461 * C34573 + C39751 * C34574 +
             (C39760 + C39761) * C154116) *
                C153712 * C153847 -
            (C38472 * C154116 + C19132 * C34574 + C19133 * C34573 +
             (C14992 + C14991) * C34572) *
                C153712 * C154094) *
               C154093 +
           ((C19130 * C34572 + C19138 * C34573 + C38473 * C34574 +
             (C38482 + C38483) * C154116) *
                C153712 * C154094 -
            ((C14934 * C28359 + C41536 + C41536 + C153969 * C28363 +
              C14932 * C5558 + C41537 + C41537 + C154109 * C5564) *
                 C154116 +
             (C39761 + C39760) * C34574 + C39750 * C34573 + C20456 * C34572) *
                C153712 * C153847) *
               C153819) *
              C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C14932 * C136 + C14937 + C14937 + C154109 * C152 +
               C14934 * C556 + C14938 + C14938 + C153969 * C580) *
                  C154107 +
              (C19164 + C19165) * C153927) *
                 C2846 +
             ((C14991 + C14992) * C154107 + C19130 * C153927) * C2847 +
             C18835 * C154130) *
                C154094 -
            (C20069 * C154130 +
             (C20456 * C153927 + (C15549 + C15550) * C154107) * C2847 +
             ((C20483 + C20484) * C153927 +
              (C14934 * C557 + C15495 + C15495 + C153969 * C581 +
               C14932 * C556 + C15496 + C15496 + C154109 * C580) *
                  C154107) *
                 C2846) *
                C153847) *
               C154093 +
           ((((C20484 + C20483) * C154107 +
              (C14932 * C1920 + C17462 + C17462 + C154109 * C1930 +
               C14934 * C3369 + C17461 + C17461 + C153969 * C3377) *
                  C153927) *
                 C2846 +
             (C20461 * C154107 + (C20485 + C20486) * C153927) * C2847 +
             (C20466 * C154107 + (C20487 + C20488) * C153927) * C154130) *
                C153847 -
            (C19775 * C154130 + (C19132 * C153927 + C19133 * C154107) * C2847 +
             ((C19166 + C19167) * C153927 + (C19165 + C19164) * C154107) *
                 C2846) *
                C154094) *
               C153819) *
              C329 +
          (((((C15550 + C15549) * C154107 + C20461 * C153927) * C2846 +
             ((C15548 + C15547) * C154107 + C20466 * C153927) * C2847 +
             ((C15546 + C15545) * C154107 + (C16273 + C16274) * C153927) *
                 C154130) *
                C153847 -
            (C18834 * C154130 +
             (C15752 * C153927 + (C14994 + C14993) * C154107) * C2847 +
             (C19133 * C153927 + (C14992 + C14991) * C154107) * C2846) *
                C154094) *
               C154093 +
           (((C19130 * C154107 + C19138 * C153927) * C2846 +
             (C18830 * C154107 + C19143 * C153927) * C2847 +
             (C19774 * C154107 + (C15281 + C15282) * C153927) * C154130) *
                C154094 -
            (((C14934 * C3372 + C17455 + C17455 + C153969 * C3380 +
               C14932 * C1917 + C17456 + C17456 + C154109 * C1927) *
                  C153927 +
              (C16274 + C16273) * C154107) *
                 C154130 +
             ((C20488 + C20487) * C153927 + C20066 * C154107) * C2847 +
             ((C20486 + C20485) * C153927 + C20456 * C154107) * C2846) *
                C153847) *
               C153819) *
              C153754)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C62967 * C136 + C62976 + C62976 + C62963 * C152 + C62969 * C556 +
              C62977 + C62977 + C62964 * C580 + C62971 * C557 + C62978 +
              C62978 + C62965 * C581 + C62973 * C2272 + C62979 + C62979 +
              C154123 * C2282) *
                 C154107 +
             (C67014 + C67015 + C67016 + C67017) * C153927) *
                C153712 * C154094 -
            ((C67878 + C67879 + C67880 + C67881) * C153927 +
             (C62973 * C7665 + C63520 + C63520 + C154123 * C7673 +
              C62971 * C2272 + C63521 + C63521 + C62965 * C2282 +
              C62969 * C557 + C63522 + C63522 + C62964 * C581 + C62967 * C556 +
              C63523 + C63523 + C62963 * C580) *
                 C154107) *
                C153712 * C153847) *
               C154093 +
           (((C67881 + C67880 + C67879 + C67878) * C154107 +
             (C62967 * C1920 + C65485 + C65485 + C62963 * C1930 +
              C62969 * C3369 + C65484 + C65484 + C62964 * C3377 +
              C62971 * C6160 + C65483 + C65483 + C62965 * C6172 +
              C62973 * C30946 + C65482 + C65482 + C154123 * C30950) *
                 C153927) *
                C153712 * C153847 -
            ((C67018 + C67019 + C67020 + C67021) * C153927 +
             (C67017 + C67016 + C67015 + C67014) * C154107) *
                C153712 * C154094) *
               C153819) *
              C329 +
          ((((C63567 + C63566 + C63565 + C63564) * C154107 +
             (C64294 + C64295 + C64296 + C64297) * C153927) *
                C153712 * C153847 -
            ((C63306 + C63307 + C63308 + C63309) * C153927 +
             (C63047 + C63046 + C63045 + C63044) * C154107) *
                C153712 * C154094) *
               C154093 +
           (((C63309 + C63308 + C63307 + C63306) * C154107 +
             (C63310 + C63311 + C63312 + C63313) * C153927) *
                C153712 * C154094 -
            ((C62973 * C30947 + C65478 + C65478 + C154123 * C30951 +
              C62971 * C6158 + C65479 + C65479 + C62965 * C6170 +
              C62969 * C3370 + C65480 + C65480 + C62964 * C3378 +
              C62967 * C1919 + C65481 + C65481 + C62963 * C1929) *
                 C153927 +
             (C64297 + C64296 + C64295 + C64294) * C154107) *
                C153712 * C153847) *
               C153819) *
              C153754)) /
            (p * q * std::sqrt(p + q));
    d2ee[167] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C14932 * C136 + C14937 + C14937 + C154109 * C152 +
                 C14934 * C556 + C14938 + C14938 + C153969 * C580) *
                    C154107 +
                (C14932 * C335 + C15222 + C15222 + C154109 * C359 +
                 C14934 * C1081 + C15221 + C15221 + C153969 * C1093) *
                    C153927) *
                   C2846 +
               ((C14991 + C14992) * C154107 + (C15276 + C15275) * C153927) *
                   C2847 +
               C18835 * C154130) *
                  C153783 * C153767 * C130 -
              (C18834 * C154130 +
               (C15752 * C153927 + (C14994 + C14993) * C154107) * C2847 +
               ((C15275 + C15276) * C153927 + (C14992 + C14991) * C154107) *
                   C2846) *
                  C153783 * C153767 * C131 +
              (C18835 * C2846 +
               (C15002 * C154107 + (C15272 + C15271) * C153927) * C2847 +
               ((C14998 + C14997) * C154107 + (C15765 + C15766) * C153927) *
                   C154130) *
                  C153783 * C153767 * C132 -
              (((C14934 * C1086 + C15757 + C15757 + C153969 * C1098 +
                 C14932 * C341 + C15758 + C15758 + C154109 * C365) *
                    C153927 +
                (C15000 + C14999) * C154107) *
                   C154130 +
               ((C15766 + C15765) * C153927 + C15003 * C154107) * C2847 +
               C18834 * C2846) *
                  C153783 * C153767 * C133) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C14932 * C136 + C14937 + C14937 + C154109 * C152 +
                  C14934 * C556 + C14938 + C14938 + C153969 * C580) *
                     C154107 +
                 (C19164 + C19165) * C153927) *
                    C2846 +
                ((C14991 + C14992) * C154107 + C19130 * C153927) * C2847 +
                C18835 * C154130) *
                   C153783 * C326 -
               ((C19131 * C153927 + C15752 * C154107) * C154130 +
                (C19132 * C153927 + C19133 * C154107) * C2847 +
                ((C19166 + C19167) * C153927 + (C19165 + C19164) * C154107) *
                    C2846) *
                   C153783 * C327 +
               (((C19167 + C19166) * C154107 +
                 (C14932 * C1347 + C16606 + C16606 + C154109 * C1357 +
                  C14934 * C4168 + C16605 + C16605 + C153969 * C4176) *
                     C153927) *
                    C2846 +
                (C19138 * C154107 + (C19168 + C19169) * C153927) * C2847 +
                (C19143 * C154107 + (C19170 + C19171) * C153927) * C154130) *
                   C153783 * C328) *
                  C329 +
              (((C19130 * C154107 + C19138 * C153927) * C2846 +
                (C18830 * C154107 + C19143 * C153927) * C2847 +
                ((C15272 + C15271) * C154107 + (C15281 + C15282) * C153927) *
                    C154130) *
                   C153783 * C327 -
               (C18834 * C154130 +
                (C15752 * C153927 + (C14994 + C14993) * C154107) * C2847 +
                (C19133 * C153927 + (C14992 + C14991) * C154107) * C2846) *
                   C153783 * C326 -
               (((C14934 * C4171 + C16599 + C16599 + C153969 * C4179 +
                  C14932 * C1344 + C16600 + C16600 + C154109 * C1354) *
                     C153927 +
                 (C15282 + C15281) * C154107) *
                    C154130 +
                ((C19171 + C19170) * C153927 + C19131 * C154107) * C2847 +
                ((C19169 + C19168) * C153927 + C19132 * C154107) * C2846) *
                   C153783 * C328) *
                  C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
              C14938 + C14938 + C153969 * C580) *
                 C154107 +
             (C19164 + C19165) * C153927) *
                C2846 +
            ((C14991 + C14992) * C154107 + C19130 * C153927) * C2847 +
            C18835 * C154130) *
               C549 -
           (((C16272 + C16271) * C153927 + C15962 * C154107) * C154130 +
            ((C16270 + C16269) * C153927 + (C15549 + C15550) * C154107) *
                C2847 +
            ((C14934 * C1489 + C16236 + C16236 + C153969 * C1499 +
              C14932 * C1081 + C16235 + C16235 + C154109 * C1093) *
                 C153927 +
             (C14934 * C557 + C15495 + C15495 + C153969 * C581 + C14932 * C556 +
              C15496 + C15496 + C154109 * C580) *
                 C154107) *
                C2846) *
               C550 +
           (((C14932 * C557 + C15497 + C15497 + C154109 * C581 +
              C14934 * C2272 + C15498 + C15498 + C153969 * C2282) *
                 C154107 +
             (C14932 * C1489 + C16808 + C16808 + C154109 * C1499 +
              C14934 * C6161 + C16807 + C16807 + C153969 * C6173) *
                 C153927) *
                C2846 +
            ((C15551 + C15552) * C154107 + (C19478 + C19479) * C153927) *
                C2847 +
            ((C15553 + C15554) * C154107 + (C19480 + C19481) * C153927) *
                C154130) *
               C551) *
              C153767 * C329 +
          ((((C15550 + C15549) * C154107 + (C16269 + C16270) * C153927) *
                C2846 +
            ((C15548 + C15547) * C154107 + (C16271 + C16272) * C153927) *
                C2847 +
            ((C15546 + C15545) * C154107 + (C16273 + C16274) * C153927) *
                C154130) *
               C550 -
           (C18834 * C154130 +
            (C15752 * C153927 + (C14994 + C14993) * C154107) * C2847 +
            (C19133 * C153927 + (C14992 + C14991) * C154107) * C2846) *
               C549 -
           (((C14934 * C8529 + C16801 + C16801 + C153969 * C8531 +
              C14932 * C1486 + C16802 + C16802 + C154109 * C1496) *
                 C153927 +
             (C15556 + C15555) * C154107) *
                C154130 +
            ((C19481 + C19480) * C153927 + (C15554 + C15553) * C154107) *
                C2847 +
            ((C19479 + C19478) * C153927 + (C15552 + C15551) * C154107) *
                C2846) *
               C551) *
              C153767 * C153754)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
            C14938 + C14938 + C153969 * C580) *
               C34572 +
           (C19164 + C19165) * C34573 + C38471 * C34574 +
           (C20987 + C20988) * C154116) *
              C153712 * C153783 * C153767 * C130 -
          (C38472 * C154116 + C19132 * C34574 + C19133 * C34573 +
           (C14992 + C14991) * C34572) *
              C153712 * C153783 * C153767 * C131 +
          (C15001 * C34572 + C18830 * C34573 + C19143 * C34574 +
           (C19170 + C19171) * C154116) *
              C153712 * C153783 * C153767 * C132 -
          ((C14934 * C4171 + C16599 + C16599 + C153969 * C4179 +
            C14932 * C1344 + C16600 + C16600 + C154109 * C1354) *
               C154116 +
           (C15282 + C15281) * C34574 + C15751 * C34573 + C15004 * C34572) *
              C153712 * C153783 * C153767 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
             C14938 + C14938 + C153969 * C580) *
                C34572 +
            (C19164 + C19165) * C34573 + C38471 * C34574 + C43614 * C154116) *
               C153712 * C153783 * C326 -
           ((C40260 + C40259) * C154116 + C40246 * C34574 +
            (C19166 + C19167) * C34573 + (C19165 + C19164) * C34572) *
               C153712 * C153783 * C327 +
           (C38471 * C34572 + C43614 * C34573 + (C40259 + C40260) * C34574 +
            (C14932 * C4576 + C40254 + C40254 + C154109 * C4582 +
             C14934 * C28772 + C40253 + C40253 + C153969 * C28776) *
                C154116) *
               C153712 * C153783 * C328) *
              C329 +
          ((C19130 * C34572 + C19138 * C34573 + C38473 * C34574 +
            (C38482 + C38483) * C154116) *
               C153712 * C153783 * C327 -
           (C38472 * C154116 + C19132 * C34574 + C19133 * C34573 +
            (C14992 + C14991) * C34572) *
               C153712 * C153783 * C326 -
           ((C14934 * C28773 + C40251 + C40251 + C153969 * C28777 +
             C14932 * C4575 + C40252 + C40252 + C154109 * C4581) *
                C154116 +
            (C38483 + C38482) * C34574 + C38472 * C34573 + C19132 * C34572) *
               C153712 * C153783 * C328) *
              C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
             C14938 + C14938 + C153969 * C580) *
                C34572 +
            (C19164 + C19165) * C34573 + C38471 * C34574 + C43614 * C154116) *
               C153712 * C549 -
           ((C41545 + C41544) * C154116 + C41531 * C34574 +
            (C20483 + C20484) * C34573 +
            (C14934 * C557 + C15495 + C15495 + C153969 * C581 + C14932 * C556 +
             C15496 + C15496 + C154109 * C580) *
                C34572) *
               C153712 * C550 +
           ((C14932 * C557 + C15497 + C15497 + C154109 * C581 + C14934 * C2272 +
             C15498 + C15498 + C153969 * C2282) *
                C34572 +
            (C21293 + C21294) * C34573 + (C40563 + C40564) * C34574 +
            (C14932 * C4811 + C40558 + C40558 + C154109 * C4817 +
             C14934 * C29881 + C40557 + C40557 + C153969 * C29885) *
                C154116) *
               C153712 * C551) *
              C153767 * C329 +
          (((C15550 + C15549) * C34572 + C20461 * C34573 + C39751 * C34574 +
            (C39760 + C39761) * C154116) *
               C153712 * C550 -
           (C38472 * C154116 + C19132 * C34574 + C19133 * C34573 +
            (C14992 + C14991) * C34572) *
               C153712 * C549 -
           ((C14934 * C31684 + C40555 + C40555 + C153969 * C31686 +
             C14932 * C4810 + C40556 + C40556 + C154109 * C4816) *
                C154116 +
            (C38783 + C38782) * C34574 + (C19479 + C19478) * C34573 +
            (C15552 + C15551) * C34572) *
               C153712 * C551) *
              C153767 * C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C62967 * C136 + C62976 + C62976 + C62963 * C152 + C62969 * C556 +
            C62977 + C62977 + C62964 * C580 + C62971 * C557 + C62978 + C62978 +
            C62965 * C581 + C62973 * C2272 + C62979 + C62979 +
            C154123 * C2282) *
               C154107 +
           (C62967 * C335 + C63265 + C63265 + C62963 * C359 + C62969 * C1081 +
            C63264 + C63264 + C62964 * C1093 + C62971 * C1489 + C63263 +
            C63263 + C62965 * C1499 + C62973 * C6161 + C63262 + C63262 +
            C154123 * C6173) *
               C153927) *
              C153712 * C153783 * C153767 * C130 -
          ((C63306 + C63307 + C63308 + C63309) * C153927 +
           (C63047 + C63046 + C63045 + C63044) * C154107) *
              C153712 * C153783 * C153767 * C131 +
          ((C63051 + C63050 + C63049 + C63048) * C154107 +
           (C63786 + C63787 + C63788 + C63789) * C153927) *
              C153712 * C153783 * C153767 * C132 -
          ((C62973 * C8529 + C63774 + C63774 + C154123 * C8531 +
            C62971 * C1486 + C63775 + C63775 + C62965 * C1496 + C62969 * C1084 +
            C63776 + C63776 + C62964 * C1096 + C62967 * C332 + C63777 + C63777 +
            C62963 * C356) *
               C153927 +
           (C63055 + C63054 + C63053 + C63052) * C154107) *
              C153712 * C153783 * C153767 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C62967 * C136 + C62976 + C62976 + C62963 * C152 + C62969 * C556 +
             C62977 + C62977 + C62964 * C580 + C62971 * C557 + C62978 + C62978 +
             C62965 * C581 + C62973 * C2272 + C62979 + C62979 +
             C154123 * C2282) *
                C154107 +
            (C67014 + C67015 + C67016 + C67017) * C153927) *
               C153712 * C153783 * C326 -
           ((C67018 + C67019 + C67020 + C67021) * C153927 +
            (C67017 + C67016 + C67015 + C67014) * C154107) *
               C153712 * C153783 * C327 +
           ((C67021 + C67020 + C67019 + C67018) * C154107 +
            (C62967 * C1347 + C64629 + C64629 + C62963 * C1357 +
             C62969 * C4168 + C64628 + C64628 + C62964 * C4176 +
             C62971 * C4811 + C64627 + C64627 + C62965 * C4817 +
             C62973 * C29881 + C64626 + C64626 + C154123 * C29885) *
                C153927) *
               C153712 * C153783 * C328) *
              C329 +
          (((C63309 + C63308 + C63307 + C63306) * C154107 +
            (C63310 + C63311 + C63312 + C63313) * C153927) *
               C153712 * C153783 * C327 -
           ((C63306 + C63307 + C63308 + C63309) * C153927 +
            (C63047 + C63046 + C63045 + C63044) * C154107) *
               C153712 * C153783 * C326 -
           ((C62973 * C31684 + C64622 + C64622 + C154123 * C31686 +
             C62971 * C4810 + C64623 + C64623 + C62965 * C4816 +
             C62969 * C4169 + C64624 + C64624 + C62964 * C4177 +
             C62967 * C1346 + C64625 + C64625 + C62963 * C1356) *
                C153927 +
            (C63313 + C63312 + C63311 + C63310) * C154107) *
               C153712 * C153783 * C328) *
              C153754)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C62967 * C136 + C62976 + C62976 + C62963 * C152 + C62969 * C556 +
             C62977 + C62977 + C62964 * C580 + C62971 * C557 + C62978 + C62978 +
             C62965 * C581 + C62973 * C2272 + C62979 + C62979 +
             C154123 * C2282) *
                C154107 +
            (C67014 + C67015 + C67016 + C67017) * C153927) *
               C153712 * C549 -
           ((C62973 * C9167 + C64269 + C64269 + C154123 * C9173 +
             C62971 * C6161 + C64268 + C64268 + C62965 * C6173 +
             C62969 * C1489 + C64267 + C64267 + C62964 * C1499 +
             C62967 * C1081 + C64266 + C64266 + C62963 * C1093) *
                C153927 +
            (C62973 * C7665 + C63520 + C63520 + C154123 * C7673 +
             C62971 * C2272 + C63521 + C63521 + C62965 * C2282 + C62969 * C557 +
             C63522 + C63522 + C62964 * C581 + C62967 * C556 + C63523 + C63523 +
             C62963 * C580) *
                C154107) *
               C153712 * C550 +
           ((C62967 * C557 + C63524 + C63524 + C62963 * C581 + C62969 * C2272 +
             C63525 + C63525 + C62964 * C2282 + C62971 * C7665 + C63526 +
             C63526 + C62965 * C7673 + C62973 * C10502 + C63527 + C63527 +
             C154123 * C10508) *
                C154107 +
            (C62967 * C1489 + C64831 + C64831 + C62963 * C1499 +
             C62969 * C6161 + C64830 + C64830 + C62964 * C6173 +
             C62971 * C9167 + C64829 + C64829 + C62965 * C9173 +
             C62973 * C33705 + C64828 + C64828 + C154123 * C33709) *
                C153927) *
               C153712 * C551) *
              C153767 * C329 +
          (((C63567 + C63566 + C63565 + C63564) * C154107 +
            (C64294 + C64295 + C64296 + C64297) * C153927) *
               C153712 * C550 -
           ((C63306 + C63307 + C63308 + C63309) * C153927 +
            (C63047 + C63046 + C63045 + C63044) * C154107) *
               C153712 * C549 -
           ((C62973 * C56080 + C64824 + C64824 + C154123 * C56082 +
             C62971 * C9166 + C64825 + C64825 + C62965 * C9172 +
             C62969 * C6159 + C64826 + C64826 + C62964 * C6171 +
             C62967 * C1488 + C64827 + C64827 + C62963 * C1498) *
                C153927 +
            (C63571 + C63570 + C63569 + C63568) * C154107) *
               C153712 * C551) *
              C153767 * C153754)) /
            (p * q * std::sqrt(p + q));
    d2ee[168] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
             C14938 + C14938 + C153969 * C580) *
                C34572 +
            (C19164 + C19165) * C34573 + C38471 * C34574 + C43614 * C154116) *
               C153712 * C154094 -
           ((C41545 + C41544) * C154116 + C41531 * C34574 +
            (C20483 + C20484) * C34573 +
            (C14934 * C557 + C15495 + C15495 + C153969 * C581 + C14932 * C556 +
             C15496 + C15496 + C154109 * C580) *
                C34572) *
               C153712 * C153847) *
              C153767 * C154162 +
          (((C15550 + C15549) * C34572 + C20461 * C34573 + C39751 * C34574 +
            (C39760 + C39761) * C154116) *
               C153712 * C153847 -
           (C38472 * C154116 + C19132 * C34574 + C19133 * C34573 +
            (C14992 + C14991) * C34572) *
               C153712 * C154094) *
              C153767 * C154163 +
          ((C15001 * C34572 + C18830 * C34573 + C19143 * C34574 +
            (C19170 + C19171) * C154116) *
               C153712 * C154094 -
           ((C14934 * C4809 + C22265 + C22265 + C153969 * C4815 +
             C14932 * C4170 + C22266 + C22266 + C154109 * C4178) *
                C154116 +
            (C20488 + C20487) * C34574 + C20066 * C34573 + C15962 * C34572) *
               C153712 * C153847) *
              C153767 * C774)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
              C14938 + C14938 + C153969 * C580) *
                 C154107 +
             (C19164 + C19165) * C153927) *
                C2846 +
            ((C14991 + C14992) * C154107 + C19130 * C153927) * C2847 +
            C18835 * C154130) *
               C154094 -
           (C20069 * C154130 +
            ((C16270 + C16269) * C153927 + (C15549 + C15550) * C154107) *
                C2847 +
            ((C14934 * C1489 + C16236 + C16236 + C153969 * C1499 +
              C14932 * C1081 + C16235 + C16235 + C154109 * C1093) *
                 C153927 +
             (C14934 * C557 + C15495 + C15495 + C153969 * C581 + C14932 * C556 +
              C15496 + C15496 + C154109 * C580) *
                 C154107) *
                C2846) *
               C153847) *
              C153767 * C154162 +
          ((((C15550 + C15549) * C154107 + (C16269 + C16270) * C153927) *
                C2846 +
            ((C15548 + C15547) * C154107 + (C16271 + C16272) * C153927) *
                C2847 +
            ((C15546 + C15545) * C154107 + (C16273 + C16274) * C153927) *
                C154130) *
               C153847 -
           (C18834 * C154130 +
            (C15752 * C153927 + (C14994 + C14993) * C154107) * C2847 +
            (C19133 * C153927 + (C14992 + C14991) * C154107) * C2846) *
               C154094) *
              C153767 * C154163 +
          ((C18835 * C2846 + (C15002 * C154107 + C19774 * C153927) * C2847 +
            ((C14998 + C14997) * C154107 + (C15765 + C15766) * C153927) *
                C154130) *
               C154094 -
           (((C14934 * C1485 + C16255 + C16255 + C153969 * C1495 +
              C14932 * C1085 + C16256 + C16256 + C154109 * C1097) *
                 C153927 +
             (C15976 + C15975) * C154107) *
                C154130 +
            ((C16274 + C16273) * C153927 + C15961 * C154107) * C2847 +
            C20069 * C2846) *
               C153847) *
              C153767 * C774)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C62967 * C136 + C62976 + C62976 + C62963 * C152 + C62969 * C556 +
             C62977 + C62977 + C62964 * C580 + C62971 * C557 + C62978 + C62978 +
             C62965 * C581 + C62973 * C2272 + C62979 + C62979 +
             C154123 * C2282) *
                C154107 +
            (C67014 + C67015 + C67016 + C67017) * C153927) *
               C153712 * C154094 -
           ((C62973 * C9167 + C64269 + C64269 + C154123 * C9173 +
             C62971 * C6161 + C64268 + C64268 + C62965 * C6173 +
             C62969 * C1489 + C64267 + C64267 + C62964 * C1499 +
             C62967 * C1081 + C64266 + C64266 + C62963 * C1093) *
                C153927 +
            (C62973 * C7665 + C63520 + C63520 + C154123 * C7673 +
             C62971 * C2272 + C63521 + C63521 + C62965 * C2282 + C62969 * C557 +
             C63522 + C63522 + C62964 * C581 + C62967 * C556 + C63523 + C63523 +
             C62963 * C580) *
                C154107) *
               C153712 * C153847) *
              C153767 * C154162 +
          (((C63567 + C63566 + C63565 + C63564) * C154107 +
            (C64294 + C64295 + C64296 + C64297) * C153927) *
               C153712 * C153847 -
           ((C63306 + C63307 + C63308 + C63309) * C153927 +
            (C63047 + C63046 + C63045 + C63044) * C154107) *
               C153712 * C154094) *
              C153767 * C154163 +
          (((C63051 + C63050 + C63049 + C63048) * C154107 +
            (C63786 + C63787 + C63788 + C63789) * C153927) *
               C153712 * C154094 -
           ((C62973 * C9165 + C64282 + C64282 + C154123 * C9171 +
             C62971 * C6157 + C64283 + C64283 + C62965 * C6169 +
             C62969 * C1487 + C64284 + C64284 + C62964 * C1497 +
             C62967 * C1083 + C64285 + C64285 + C62963 * C1095) *
                C153927 +
            (C64007 + C64006 + C64005 + C64004) * C154107) *
               C153712 * C153847) *
              C153767 * C774)) /
            (p * q * std::sqrt(p + q));
    d2ee[169] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
              C14938 + C14938 + C153969 * C580) *
                 C154107 +
             (C19164 + C19165) * C153927) *
                C2846 +
            ((C14991 + C14992) * C154107 + C19130 * C153927) * C2847 +
            C18835 * C154130) *
               C153783 * C326 -
           ((C19131 * C153927 + C15752 * C154107) * C154130 +
            (C19132 * C153927 + C19133 * C154107) * C2847 +
            ((C19166 + C19167) * C153927 + (C19165 + C19164) * C154107) *
                C2846) *
               C153783 * C327 +
           (((C19167 + C19166) * C154107 +
             (C14932 * C1347 + C16606 + C16606 + C154109 * C1357 +
              C14934 * C4168 + C16605 + C16605 + C153969 * C4176) *
                 C153927) *
                C2846 +
            (C19138 * C154107 + (C19168 + C19169) * C153927) * C2847 +
            (C19143 * C154107 + (C19170 + C19171) * C153927) * C154130) *
               C153783 * C328) *
              C329 +
          (((C19130 * C154107 + C19138 * C153927) * C2846 +
            (C18830 * C154107 + C19143 * C153927) * C2847 +
            ((C15272 + C15271) * C154107 + (C15281 + C15282) * C153927) *
                C154130) *
               C153783 * C327 -
           (C18834 * C154130 +
            (C15752 * C153927 + (C14994 + C14993) * C154107) * C2847 +
            (C19133 * C153927 + (C14992 + C14991) * C154107) * C2846) *
               C153783 * C326 -
           (((C14934 * C4171 + C16599 + C16599 + C153969 * C4179 +
              C14932 * C1344 + C16600 + C16600 + C154109 * C1354) *
                 C153927 +
             (C15282 + C15281) * C154107) *
                C154130 +
            ((C19171 + C19170) * C153927 + C19131 * C154107) * C2847 +
            ((C19169 + C19168) * C153927 + C19132 * C154107) * C2846) *
               C153783 * C328) *
              C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
             C14938 + C14938 + C153969 * C580) *
                C154107 +
            (C14932 * C335 + C15222 + C15222 + C154109 * C359 + C14934 * C1081 +
             C15221 + C15221 + C153969 * C1093) *
                C153927) *
               C2846 +
           ((C14991 + C14992) * C154107 + (C15276 + C15275) * C153927) * C2847 +
           C18835 * C154130) *
              C153783 * C153767 * C130 -
          (C18834 * C154130 +
           (C15752 * C153927 + (C14994 + C14993) * C154107) * C2847 +
           ((C15275 + C15276) * C153927 + (C14992 + C14991) * C154107) *
               C2846) *
              C153783 * C153767 * C131 +
          (C18835 * C2846 +
           (C15002 * C154107 + (C15272 + C15271) * C153927) * C2847 +
           ((C14998 + C14997) * C154107 + (C15765 + C15766) * C153927) *
               C154130) *
              C153783 * C153767 * C132 -
          (((C14934 * C1086 + C15757 + C15757 + C153969 * C1098 +
             C14932 * C341 + C15758 + C15758 + C154109 * C365) *
                C153927 +
            (C15000 + C14999) * C154107) *
               C154130 +
           ((C15766 + C15765) * C153927 + C15003 * C154107) * C2847 +
           C18834 * C2846) *
              C153783 * C153767 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
            C14938 + C14938 + C153969 * C580) *
               C34572 +
           (C19164 + C19165) * C34573 + C38471 * C34574 +
           (C20987 + C20988) * C154116) *
              C153712 * C153783 * C153767 * C130 -
          (C38472 * C154116 + C19132 * C34574 + C19133 * C34573 +
           (C14992 + C14991) * C34572) *
              C153712 * C153783 * C153767 * C131 +
          (C15001 * C34572 + C18830 * C34573 + C19143 * C34574 +
           (C19170 + C19171) * C154116) *
              C153712 * C153783 * C153767 * C132 -
          ((C14934 * C4171 + C16599 + C16599 + C153969 * C4179 +
            C14932 * C1344 + C16600 + C16600 + C154109 * C1354) *
               C154116 +
           (C15282 + C15281) * C34574 + C15751 * C34573 + C15004 * C34572) *
              C153712 * C153783 * C153767 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
             C14938 + C14938 + C153969 * C580) *
                C34572 +
            (C19164 + C19165) * C34573 + C38471 * C34574 + C43614 * C154116) *
               C153712 * C153783 * C326 -
           ((C40260 + C40259) * C154116 + C40246 * C34574 +
            (C19166 + C19167) * C34573 + (C19165 + C19164) * C34572) *
               C153712 * C153783 * C327 +
           (C38471 * C34572 + C43614 * C34573 + (C40259 + C40260) * C34574 +
            (C14932 * C4576 + C40254 + C40254 + C154109 * C4582 +
             C14934 * C28772 + C40253 + C40253 + C153969 * C28776) *
                C154116) *
               C153712 * C153783 * C328) *
              C329 +
          ((C19130 * C34572 + C19138 * C34573 + C38473 * C34574 +
            (C38482 + C38483) * C154116) *
               C153712 * C153783 * C327 -
           (C38472 * C154116 + C19132 * C34574 + C19133 * C34573 +
            (C14992 + C14991) * C34572) *
               C153712 * C153783 * C326 -
           ((C14934 * C28773 + C40251 + C40251 + C153969 * C28777 +
             C14932 * C4575 + C40252 + C40252 + C154109 * C4581) *
                C154116 +
            (C38483 + C38482) * C34574 + C38472 * C34573 + C19132 * C34572) *
               C153712 * C153783 * C328) *
              C153754)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C62967 * C136 + C62976 + C62976 + C62963 * C152 + C62969 * C556 +
            C62977 + C62977 + C62964 * C580 + C62971 * C557 + C62978 + C62978 +
            C62965 * C581 + C62973 * C2272 + C62979 + C62979 +
            C154123 * C2282) *
               C154107 +
           (C62967 * C335 + C63265 + C63265 + C62963 * C359 + C62969 * C1081 +
            C63264 + C63264 + C62964 * C1093 + C62971 * C1489 + C63263 +
            C63263 + C62965 * C1499 + C62973 * C6161 + C63262 + C63262 +
            C154123 * C6173) *
               C153927) *
              C153712 * C153783 * C153767 * C130 -
          ((C63306 + C63307 + C63308 + C63309) * C153927 +
           (C63047 + C63046 + C63045 + C63044) * C154107) *
              C153712 * C153783 * C153767 * C131 +
          ((C63051 + C63050 + C63049 + C63048) * C154107 +
           (C63786 + C63787 + C63788 + C63789) * C153927) *
              C153712 * C153783 * C153767 * C132 -
          ((C62973 * C8529 + C63774 + C63774 + C154123 * C8531 +
            C62971 * C1486 + C63775 + C63775 + C62965 * C1496 + C62969 * C1084 +
            C63776 + C63776 + C62964 * C1096 + C62967 * C332 + C63777 + C63777 +
            C62963 * C356) *
               C153927 +
           (C63055 + C63054 + C63053 + C63052) * C154107) *
              C153712 * C153783 * C153767 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C62967 * C136 + C62976 + C62976 + C62963 * C152 + C62969 * C556 +
             C62977 + C62977 + C62964 * C580 + C62971 * C557 + C62978 + C62978 +
             C62965 * C581 + C62973 * C2272 + C62979 + C62979 +
             C154123 * C2282) *
                C154107 +
            (C67014 + C67015 + C67016 + C67017) * C153927) *
               C153712 * C153783 * C326 -
           ((C67018 + C67019 + C67020 + C67021) * C153927 +
            (C67017 + C67016 + C67015 + C67014) * C154107) *
               C153712 * C153783 * C327 +
           ((C67021 + C67020 + C67019 + C67018) * C154107 +
            (C62967 * C1347 + C64629 + C64629 + C62963 * C1357 +
             C62969 * C4168 + C64628 + C64628 + C62964 * C4176 +
             C62971 * C4811 + C64627 + C64627 + C62965 * C4817 +
             C62973 * C29881 + C64626 + C64626 + C154123 * C29885) *
                C153927) *
               C153712 * C153783 * C328) *
              C329 +
          (((C63309 + C63308 + C63307 + C63306) * C154107 +
            (C63310 + C63311 + C63312 + C63313) * C153927) *
               C153712 * C153783 * C327 -
           ((C63306 + C63307 + C63308 + C63309) * C153927 +
            (C63047 + C63046 + C63045 + C63044) * C154107) *
               C153712 * C153783 * C326 -
           ((C62973 * C31684 + C64622 + C64622 + C154123 * C31686 +
             C62971 * C4810 + C64623 + C64623 + C62965 * C4816 +
             C62969 * C4169 + C64624 + C64624 + C62964 * C4177 +
             C62967 * C1346 + C64625 + C64625 + C62963 * C1356) *
                C153927 +
            (C63313 + C63312 + C63311 + C63310) * C154107) *
               C153712 * C153783 * C328) *
              C153754)) /
            (p * q * std::sqrt(p + q));
    d2ee[170] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
             C14938 + C14938 + C153969 * C580) *
                C34572 +
            (C19164 + C19165) * C34573 + C38471 * C34574 + C43614 * C154116) *
               C153712 * C153783 * C154164 -
           (C44779 * C154116 + C40246 * C34574 + (C19166 + C19167) * C34573 +
            (C19165 + C19164) * C34572) *
               C153712 * C153783 * C154165 +
           (C38471 * C34572 + C43614 * C34573 + (C40259 + C40260) * C34574 +
            (C44790 + C44791) * C154116) *
               C153712 * C153783 * C1629) *
              C154085 +
          ((C19130 * C34572 + C19138 * C34573 + C38473 * C34574 +
            (C38482 + C38483) * C154116) *
               C153712 * C153783 * C154165 -
           (C38472 * C154116 + C19132 * C34574 + C19133 * C34573 +
            (C14992 + C14991) * C34572) *
               C153712 * C153783 * C154164 -
           ((C14934 * C28773 + C40251 + C40251 + C153969 * C28777 +
             C14932 * C4575 + C40252 + C40252 + C154109 * C4581) *
                C154116 +
            (C38483 + C38482) * C34574 + C38472 * C34573 + C19132 * C34572) *
               C153712 * C153783 * C1629) *
              C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
              C14938 + C14938 + C153969 * C580) *
                 C154107 +
             (C19164 + C19165) * C153927) *
                C2846 +
            ((C14991 + C14992) * C154107 + C19130 * C153927) * C2847 +
            C18835 * C154130) *
               C153783 * C154164 -
           (C19775 * C154130 + (C19132 * C153927 + C19133 * C154107) * C2847 +
            ((C19166 + C19167) * C153927 + (C19165 + C19164) * C154107) *
                C2846) *
               C153783 * C154165 +
           (((C19167 + C19166) * C154107 + (C20987 + C20988) * C153927) *
                C2846 +
            (C19138 * C154107 + (C19168 + C19169) * C153927) * C2847 +
            (C19143 * C154107 + (C19170 + C19171) * C153927) * C154130) *
               C153783 * C1629) *
              C154085 +
          (((C19130 * C154107 + C19138 * C153927) * C2846 +
            (C18830 * C154107 + C19143 * C153927) * C2847 +
            (C19774 * C154107 + (C15281 + C15282) * C153927) * C154130) *
               C153783 * C154165 -
           (C18834 * C154130 +
            (C15752 * C153927 + (C14994 + C14993) * C154107) * C2847 +
            (C19133 * C153927 + (C14992 + C14991) * C154107) * C2846) *
               C153783 * C154164 -
           (((C14934 * C4171 + C16599 + C16599 + C153969 * C4179 +
              C14932 * C1344 + C16600 + C16600 + C154109 * C1354) *
                 C153927 +
             (C15282 + C15281) * C154107) *
                C154130 +
            ((C19171 + C19170) * C153927 + C19131 * C154107) * C2847 +
            ((C19169 + C19168) * C153927 + C19132 * C154107) * C2846) *
               C153783 * C1629) *
              C153754)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C62967 * C136 + C62976 + C62976 + C62963 * C152 + C62969 * C556 +
             C62977 + C62977 + C62964 * C580 + C62971 * C557 + C62978 + C62978 +
             C62965 * C581 + C62973 * C2272 + C62979 + C62979 +
             C154123 * C2282) *
                C154107 +
            (C67014 + C67015 + C67016 + C67017) * C153927) *
               C153712 * C153783 * C154164 -
           ((C67018 + C67019 + C67020 + C67021) * C153927 +
            (C67017 + C67016 + C67015 + C67014) * C154107) *
               C153712 * C153783 * C154165 +
           ((C67021 + C67020 + C67019 + C67018) * C154107 +
            (C68226 + C68227 + C68228 + C68229) * C153927) *
               C153712 * C153783 * C1629) *
              C154085 +
          (((C63309 + C63308 + C63307 + C63306) * C154107 +
            (C63310 + C63311 + C63312 + C63313) * C153927) *
               C153712 * C153783 * C154165 -
           ((C63306 + C63307 + C63308 + C63309) * C153927 +
            (C63047 + C63046 + C63045 + C63044) * C154107) *
               C153712 * C153783 * C154164 -
           ((C62973 * C31684 + C64622 + C64622 + C154123 * C31686 +
             C62971 * C4810 + C64623 + C64623 + C62965 * C4816 +
             C62969 * C4169 + C64624 + C64624 + C62964 * C4177 +
             C62967 * C1346 + C64625 + C64625 + C62963 * C1356) *
                C153927 +
            (C63313 + C63312 + C63311 + C63310) * C154107) *
               C153712 * C153783 * C1629) *
              C153754)) /
            (p * q * std::sqrt(p + q));
    d2ee[171] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
             C14938 + C14938 + C153969 * C580) *
                C34572 +
            (C19164 + C19165) * C34573 + C38471 * C34574 + C43614 * C154116) *
               C153712 * C154094 -
           (C45644 * C154116 + C41531 * C34574 + (C20483 + C20484) * C34573 +
            (C14934 * C557 + C15495 + C15495 + C153969 * C581 + C14932 * C556 +
             C15496 + C15496 + C154109 * C580) *
                C34572) *
               C153712 * C153847) *
              C154164 +
          (((C20484 + C20483) * C34572 + (C22275 + C22276) * C34573 +
            (C41544 + C41545) * C34574 + (C45655 + C45656) * C154116) *
               C153712 * C153847 -
           (C44779 * C154116 + C40246 * C34574 + (C19166 + C19167) * C34573 +
            (C19165 + C19164) * C34572) *
               C153712 * C154094) *
              C154165 +
          ((C38471 * C34572 + C43614 * C34573 + (C40259 + C40260) * C34574 +
            (C44790 + C44791) * C154116) *
               C153712 * C154094 -
           ((C14934 * C29125 + C45649 + C45649 + C153969 * C29127 +
             C14932 * C28772 + C45650 + C45650 + C154109 * C28776) *
                C154116 +
            (C45656 + C45655) * C34574 + C45644 * C34573 + C41531 * C34572) *
               C153712 * C153847) *
              C1629) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
              C14938 + C14938 + C153969 * C580) *
                 C154107 +
             (C19164 + C19165) * C153927) *
                C2846 +
            ((C14991 + C14992) * C154107 + C19130 * C153927) * C2847 +
            C18835 * C154130) *
               C154094 -
           (C20069 * C154130 +
            (C20456 * C153927 + (C15549 + C15550) * C154107) * C2847 +
            ((C20483 + C20484) * C153927 +
             (C14934 * C557 + C15495 + C15495 + C153969 * C581 + C14932 * C556 +
              C15496 + C15496 + C154109 * C580) *
                 C154107) *
                C2846) *
               C153847) *
              C154164 +
          ((((C20484 + C20483) * C154107 + (C22275 + C22276) * C153927) *
                C2846 +
            (C20461 * C154107 + (C20485 + C20486) * C153927) * C2847 +
            (C20466 * C154107 + (C20487 + C20488) * C153927) * C154130) *
               C153847 -
           (C19775 * C154130 + (C19132 * C153927 + C19133 * C154107) * C2847 +
            ((C19166 + C19167) * C153927 + (C19165 + C19164) * C154107) *
                C2846) *
               C154094) *
              C154165 +
          ((((C19167 + C19166) * C154107 + (C20987 + C20988) * C153927) *
                C2846 +
            (C19138 * C154107 + (C19168 + C19169) * C153927) * C2847 +
            (C19143 * C154107 + (C19170 + C19171) * C153927) * C154130) *
               C154094 -
           (((C14934 * C4809 + C22265 + C22265 + C153969 * C4815 +
              C14932 * C4170 + C22266 + C22266 + C154109 * C4178) *
                 C153927 +
             (C20488 + C20487) * C154107) *
                C154130 +
            ((C14934 * C4810 + C22267 + C22267 + C153969 * C4816 +
              C14932 * C4169 + C22268 + C22268 + C154109 * C4177) *
                 C153927 +
             (C20486 + C20485) * C154107) *
                C2847 +
            ((C14934 * C4811 + C22269 + C22269 + C153969 * C4817 +
              C14932 * C4168 + C22270 + C22270 + C154109 * C4176) *
                 C153927 +
             (C22276 + C22275) * C154107) *
                C2846) *
               C153847) *
              C1629) *
         C153748) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C62967 * C136 + C62976 + C62976 + C62963 * C152 + C62969 * C556 +
             C62977 + C62977 + C62964 * C580 + C62971 * C557 + C62978 + C62978 +
             C62965 * C581 + C62973 * C2272 + C62979 + C62979 +
             C154123 * C2282) *
                C154107 +
            (C67014 + C67015 + C67016 + C67017) * C153927) *
               C153712 * C154094 -
           ((C67878 + C67879 + C67880 + C67881) * C153927 +
            (C62973 * C7665 + C63520 + C63520 + C154123 * C7673 +
             C62971 * C2272 + C63521 + C63521 + C62965 * C2282 + C62969 * C557 +
             C63522 + C63522 + C62964 * C581 + C62967 * C556 + C63523 + C63523 +
             C62963 * C580) *
                C154107) *
               C153712 * C153847) *
              C154164 +
          (((C67881 + C67880 + C67879 + C67878) * C154107 +
            (C69114 + C69115 + C69116 + C69117) * C153927) *
               C153712 * C153847 -
           ((C67018 + C67019 + C67020 + C67021) * C153927 +
            (C67017 + C67016 + C67015 + C67014) * C154107) *
               C153712 * C154094) *
              C154165 +
          (((C67021 + C67020 + C67019 + C67018) * C154107 +
            (C68226 + C68227 + C68228 + C68229) * C153927) *
               C153712 * C154094 -
           ((C62973 * C32340 + C69102 + C69102 + C154123 * C32342 +
             C62971 * C29881 + C69103 + C69103 + C62965 * C29885 +
             C62969 * C4811 + C69104 + C69104 + C62964 * C4817 +
             C62967 * C4168 + C69105 + C69105 + C62963 * C4176) *
                C153927 +
            (C69117 + C69116 + C69115 + C69114) * C154107) *
               C153712 * C153847) *
              C1629) *
         C153748) /
            (p * q * std::sqrt(p + q));
    d2ee[172] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C14932 * C136 + C14937 + C14937 + C154109 * C152 +
                  C14934 * C556 + C14938 + C14938 + C153969 * C580) *
                     C154107 +
                 (C19164 + C19165) * C153927) *
                    C2846 +
                ((C14991 + C14992) * C154107 + C19130 * C153927) * C2847 +
                C18835 * C154130) *
                   C153783 * C1251 -
               (C19775 * C154130 +
                (C19132 * C153927 + C19133 * C154107) * C2847 +
                ((C19166 + C19167) * C153927 + (C19165 + C19164) * C154107) *
                    C2846) *
                   C153783 * C153819) *
                  C1253 +
              (((C19130 * C154107 + C19138 * C153927) * C2846 +
                (C18830 * C154107 + C19143 * C153927) * C2847 +
                (C19774 * C154107 + (C15281 + C15282) * C153927) * C154130) *
                   C153783 * C153819 -
               (C18834 * C154130 +
                (C15752 * C153927 + (C14994 + C14993) * C154107) * C2847 +
                (C19133 * C153927 + (C14992 + C14991) * C154107) * C2846) *
                   C153783 * C1251) *
                  C1254 +
              ((C18835 * C2846 + (C15002 * C154107 + C19774 * C153927) * C2847 +
                ((C14998 + C14997) * C154107 + (C15765 + C15766) * C153927) *
                    C154130) *
                   C153783 * C1251 -
               (((C14934 * C1916 + C15245 + C15245 + C153969 * C1926 +
                  C14932 * C340 + C15246 + C15246 + C154109 * C364) *
                     C153927 +
                 (C15766 + C15765) * C154107) *
                    C154130 +
                ((C15282 + C15281) * C153927 + C15751 * C154107) * C2847 +
                C19775 * C2846) *
                   C153783 * C153819) *
                  C1255) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C14932 * C136 + C14937 + C14937 + C154109 * C152 +
                 C14934 * C556 + C14938 + C14938 + C153969 * C580) *
                    C154107 +
                (C19164 + C19165) * C153927) *
                   C2846 +
               ((C14991 + C14992) * C154107 + C19130 * C153927) * C2847 +
               C18835 * C154130) *
                  C153783 * C1338 -
              (C19775 * C154130 +
               (C19132 * C153927 + C19133 * C154107) * C2847 +
               ((C19166 + C19167) * C153927 + (C19165 + C19164) * C154107) *
                   C2846) *
                  C153783 * C1339 +
              (((C19167 + C19166) * C154107 + (C20987 + C20988) * C153927) *
                   C2846 +
               (C19138 * C154107 + (C19168 + C19169) * C153927) * C2847 +
               (C19143 * C154107 + (C19170 + C19171) * C153927) * C154130) *
                  C153783 * C1340 -
              (((C14934 * C5557 + C20977 + C20977 + C153969 * C5563 +
                 C14932 * C3085 + C20978 + C20978 + C154109 * C3093) *
                    C153927 +
                (C19171 + C19170) * C154107) *
                   C154130 +
               ((C14934 * C5558 + C20979 + C20979 + C153969 * C5564 +
                 C14932 * C3084 + C20980 + C20980 + C154109 * C3092) *
                    C153927 +
                (C19169 + C19168) * C154107) *
                   C2847 +
               ((C14934 * C5559 + C20981 + C20981 + C153969 * C5565 +
                 C14932 * C3083 + C20982 + C20982 + C154109 * C3091) *
                    C153927 +
                (C20988 + C20987) * C154107) *
                   C2846) *
                  C153783 * C1341) *
             C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
              C14938 + C14938 + C153969 * C580) *
                 C154107 +
             (C19164 + C19165) * C153927) *
                C2846 +
            ((C14991 + C14992) * C154107 + C19130 * C153927) * C2847 +
            C18835 * C154130) *
               C549 -
           (C20069 * C154130 +
            (C20456 * C153927 + (C15549 + C15550) * C154107) * C2847 +
            ((C20483 + C20484) * C153927 +
             (C14934 * C557 + C15495 + C15495 + C153969 * C581 + C14932 * C556 +
              C15496 + C15496 + C154109 * C580) *
                 C154107) *
                C2846) *
               C550 +
           (((C14932 * C557 + C15497 + C15497 + C154109 * C581 +
              C14934 * C2272 + C15498 + C15498 + C153969 * C2282) *
                 C154107 +
             (C21293 + C21294) * C153927) *
                C2846 +
            ((C15551 + C15552) * C154107 + (C19478 + C19479) * C153927) *
                C2847 +
            ((C15553 + C15554) * C154107 + (C19480 + C19481) * C153927) *
                C154130) *
               C551) *
              C1251 +
          ((((C20484 + C20483) * C154107 +
             (C14932 * C1920 + C17462 + C17462 + C154109 * C1930 +
              C14934 * C3369 + C17461 + C17461 + C153969 * C3377) *
                 C153927) *
                C2846 +
            (C20461 * C154107 + (C20485 + C20486) * C153927) * C2847 +
            (C20466 * C154107 + (C20487 + C20488) * C153927) * C154130) *
               C550 -
           (C19775 * C154130 + (C19132 * C153927 + C19133 * C154107) * C2847 +
            ((C19166 + C19167) * C153927 + (C19165 + C19164) * C154107) *
                C2846) *
               C549 -
           (((C14934 * C6156 + C21283 + C21283 + C153969 * C6168 +
              C14932 * C3371 + C21284 + C21284 + C154109 * C3379) *
                 C153927 +
             (C19481 + C19480) * C154107) *
                C154130 +
            ((C14934 * C6158 + C21285 + C21285 + C153969 * C6170 +
              C14932 * C3370 + C21286 + C21286 + C154109 * C3378) *
                 C153927 +
             (C19479 + C19478) * C154107) *
                C2847 +
            ((C14934 * C6160 + C21287 + C21287 + C153969 * C6172 +
              C14932 * C3369 + C21288 + C21288 + C154109 * C3377) *
                 C153927 +
             (C21294 + C21293) * C154107) *
                C2846) *
               C551) *
              C153819) *
         C153748) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
             C14938 + C14938 + C153969 * C580) *
                C34572 +
            (C19164 + C19165) * C34573 + C38471 * C34574 + C43614 * C154116) *
               C153712 * C153783 * C1251 -
           ((C40260 + C40259) * C154116 + C40246 * C34574 +
            (C19166 + C19167) * C34573 + (C19165 + C19164) * C34572) *
               C153712 * C153783 * C153819) *
              C1253 +
          ((C19130 * C34572 + C19138 * C34573 + C38473 * C34574 +
            (C38482 + C38483) * C154116) *
               C153712 * C153783 * C153819 -
           (C38472 * C154116 + C19132 * C34574 + C19133 * C34573 +
            (C14992 + C14991) * C34572) *
               C153712 * C153783 * C1251) *
              C1254 +
          ((C15001 * C34572 + C18830 * C34573 + C19143 * C34574 +
            (C19170 + C19171) * C154116) *
               C153712 * C153783 * C1251 -
           ((C14934 * C5557 + C20977 + C20977 + C153969 * C5563 +
             C14932 * C3085 + C20978 + C20978 + C154109 * C3093) *
                C154116 +
            (C19171 + C19170) * C34574 + C19131 * C34573 + C15752 * C34572) *
               C153712 * C153783 * C153819) *
              C1255)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
            C14938 + C14938 + C153969 * C580) *
               C34572 +
           (C19164 + C19165) * C34573 + C38471 * C34574 + C43614 * C154116) *
              C153712 * C153783 * C1338 -
          (C44779 * C154116 + C40246 * C34574 + (C19166 + C19167) * C34573 +
           (C19165 + C19164) * C34572) *
              C153712 * C153783 * C1339 +
          (C38471 * C34572 + C43614 * C34573 + (C40259 + C40260) * C34574 +
           (C44790 + C44791) * C154116) *
              C153712 * C153783 * C1340 -
          ((C14934 * C29545 + C44784 + C44784 + C153969 * C29547 +
            C14932 * C28218 + C44785 + C44785 + C154109 * C28222) *
               C154116 +
           (C44791 + C44790) * C34574 + C44779 * C34573 + C40246 * C34572) *
              C153712 * C153783 * C1341) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
             C14938 + C14938 + C153969 * C580) *
                C34572 +
            (C19164 + C19165) * C34573 + C38471 * C34574 + C43614 * C154116) *
               C153712 * C549 -
           ((C41545 + C41544) * C154116 + C41531 * C34574 +
            (C20483 + C20484) * C34573 +
            (C14934 * C557 + C15495 + C15495 + C153969 * C581 + C14932 * C556 +
             C15496 + C15496 + C154109 * C580) *
                C34572) *
               C153712 * C550 +
           ((C14932 * C557 + C15497 + C15497 + C154109 * C581 + C14934 * C2272 +
             C15498 + C15498 + C153969 * C2282) *
                C34572 +
            (C21293 + C21294) * C34573 + (C40563 + C40564) * C34574 +
            (C44996 + C44997) * C154116) *
               C153712 * C551) *
              C1251 +
          (((C20484 + C20483) * C34572 + (C22275 + C22276) * C34573 +
            (C41544 + C41545) * C34574 +
            (C14932 * C5559 + C41539 + C41539 + C154109 * C5565 +
             C14934 * C28358 + C41538 + C41538 + C153969 * C28362) *
                C154116) *
               C153712 * C550 -
           (C44779 * C154116 + C40246 * C34574 + (C19166 + C19167) * C34573 +
            (C19165 + C19164) * C34572) *
               C153712 * C549 -
           ((C14934 * C29880 + C44990 + C44990 + C153969 * C29884 +
             C14932 * C28358 + C44991 + C44991 + C154109 * C28362) *
                C154116 +
            (C44997 + C44996) * C34574 + (C40564 + C40563) * C34573 +
            (C21294 + C21293) * C34572) *
               C153712 * C551) *
              C153819) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C62967 * C136 + C62976 + C62976 + C62963 * C152 + C62969 * C556 +
             C62977 + C62977 + C62964 * C580 + C62971 * C557 + C62978 + C62978 +
             C62965 * C581 + C62973 * C2272 + C62979 + C62979 +
             C154123 * C2282) *
                C154107 +
            (C67014 + C67015 + C67016 + C67017) * C153927) *
               C153712 * C153783 * C1251 -
           ((C67018 + C67019 + C67020 + C67021) * C153927 +
            (C67017 + C67016 + C67015 + C67014) * C154107) *
               C153712 * C153783 * C153819) *
              C1253 +
          (((C63309 + C63308 + C63307 + C63306) * C154107 +
            (C63310 + C63311 + C63312 + C63313) * C153927) *
               C153712 * C153783 * C153819 -
           ((C63306 + C63307 + C63308 + C63309) * C153927 +
            (C63047 + C63046 + C63045 + C63044) * C154107) *
               C153712 * C153783 * C1251) *
              C1254 +
          (((C63051 + C63050 + C63049 + C63048) * C154107 +
            (C63786 + C63787 + C63788 + C63789) * C153927) *
               C153712 * C153783 * C1251 -
           ((C62973 * C6156 + C63286 + C63286 + C154123 * C6168 +
             C62971 * C3371 + C63287 + C63287 + C62965 * C3379 +
             C62969 * C1918 + C63288 + C63288 + C62964 * C1928 + C62967 * C338 +
             C63289 + C63289 + C62963 * C362) *
                C153927 +
            (C63789 + C63788 + C63787 + C63786) * C154107) *
               C153712 * C153783 * C153819) *
              C1255)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C62967 * C136 + C62976 + C62976 + C62963 * C152 + C62969 * C556 +
            C62977 + C62977 + C62964 * C580 + C62971 * C557 + C62978 + C62978 +
            C62965 * C581 + C62973 * C2272 + C62979 + C62979 +
            C154123 * C2282) *
               C154107 +
           (C67014 + C67015 + C67016 + C67017) * C153927) *
              C153712 * C153783 * C1338 -
          ((C67018 + C67019 + C67020 + C67021) * C153927 +
           (C67017 + C67016 + C67015 + C67014) * C154107) *
              C153712 * C153783 * C1339 +
          ((C67021 + C67020 + C67019 + C67018) * C154107 +
           (C68226 + C68227 + C68228 + C68229) * C153927) *
              C153712 * C153783 * C1340 -
          ((C62973 * C29880 + C68214 + C68214 + C154123 * C29884 +
            C62971 * C28358 + C68215 + C68215 + C62965 * C28362 +
            C62969 * C5559 + C68216 + C68216 + C62964 * C5565 + C62967 * C3083 +
            C68217 + C68217 + C62963 * C3091) *
               C153927 +
           (C68229 + C68228 + C68227 + C68226) * C154107) *
              C153712 * C153783 * C1341) *
         C153748) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C62967 * C136 + C62976 + C62976 + C62963 * C152 + C62969 * C556 +
             C62977 + C62977 + C62964 * C580 + C62971 * C557 + C62978 + C62978 +
             C62965 * C581 + C62973 * C2272 + C62979 + C62979 +
             C154123 * C2282) *
                C154107 +
            (C67014 + C67015 + C67016 + C67017) * C153927) *
               C153712 * C549 -
           ((C67878 + C67879 + C67880 + C67881) * C153927 +
            (C62973 * C7665 + C63520 + C63520 + C154123 * C7673 +
             C62971 * C2272 + C63521 + C63521 + C62965 * C2282 + C62969 * C557 +
             C63522 + C63522 + C62964 * C581 + C62967 * C556 + C63523 + C63523 +
             C62963 * C580) *
                C154107) *
               C153712 * C550 +
           ((C62967 * C557 + C63524 + C63524 + C62963 * C581 + C62969 * C2272 +
             C63525 + C63525 + C62964 * C2282 + C62971 * C7665 + C63526 +
             C63526 + C62965 * C7673 + C62973 * C10502 + C63527 + C63527 +
             C154123 * C10508) *
                C154107 +
            (C68444 + C68445 + C68446 + C68447) * C153927) *
               C153712 * C551) *
              C1251 +
          (((C67881 + C67880 + C67879 + C67878) * C154107 +
            (C62967 * C1920 + C65485 + C65485 + C62963 * C1930 +
             C62969 * C3369 + C65484 + C65484 + C62964 * C3377 +
             C62971 * C6160 + C65483 + C65483 + C62965 * C6172 +
             C62973 * C30946 + C65482 + C65482 + C154123 * C30950) *
                C153927) *
               C153712 * C550 -
           ((C67018 + C67019 + C67020 + C67021) * C153927 +
            (C67017 + C67016 + C67015 + C67014) * C154107) *
               C153712 * C549 -
           ((C62973 * C33704 + C68432 + C68432 + C154123 * C33708 +
             C62971 * C30946 + C68433 + C68433 + C62965 * C30950 +
             C62969 * C6160 + C68434 + C68434 + C62964 * C6172 +
             C62967 * C3369 + C68435 + C68435 + C62963 * C3377) *
                C153927 +
            (C68447 + C68446 + C68445 + C68444) * C154107) *
               C153712 * C551) *
              C153819) *
         C153748) /
            (p * q * std::sqrt(p + q));
    d2ee[173] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
              C14938 + C14938 + C153969 * C580) *
                 C34572 +
             (C19164 + C19165) * C34573 + C38471 * C34574 + C43614 * C154116) *
                C153712 * C154094 -
            ((C41545 + C41544) * C154116 + C41531 * C34574 +
             (C20483 + C20484) * C34573 +
             (C14934 * C557 + C15495 + C15495 + C153969 * C581 + C14932 * C556 +
              C15496 + C15496 + C154109 * C580) *
                 C34572) *
                C153712 * C153847) *
               C1251 +
           (((C20484 + C20483) * C34572 + (C22275 + C22276) * C34573 +
             (C41544 + C41545) * C34574 +
             (C14932 * C5559 + C41539 + C41539 + C154109 * C5565 +
              C14934 * C28358 + C41538 + C41538 + C153969 * C28362) *
                 C154116) *
                C153712 * C153847 -
            (C44779 * C154116 + C40246 * C34574 + (C19166 + C19167) * C34573 +
             (C19165 + C19164) * C34572) *
                C153712 * C154094) *
               C153819) *
              C154085 +
          ((((C15550 + C15549) * C34572 + C20461 * C34573 + C39751 * C34574 +
             (C39760 + C39761) * C154116) *
                C153712 * C153847 -
            (C38472 * C154116 + C19132 * C34574 + C19133 * C34573 +
             (C14992 + C14991) * C34572) *
                C153712 * C154094) *
               C1251 +
           ((C19130 * C34572 + C19138 * C34573 + C38473 * C34574 +
             (C38482 + C38483) * C154116) *
                C153712 * C154094 -
            ((C14934 * C28359 + C41536 + C41536 + C153969 * C28363 +
              C14932 * C5558 + C41537 + C41537 + C154109 * C5564) *
                 C154116 +
             (C39761 + C39760) * C34574 + C39750 * C34573 + C20456 * C34572) *
                C153712 * C153847) *
               C153819) *
              C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C14932 * C136 + C14937 + C14937 + C154109 * C152 +
               C14934 * C556 + C14938 + C14938 + C153969 * C580) *
                  C154107 +
              (C19164 + C19165) * C153927) *
                 C2846 +
             ((C14991 + C14992) * C154107 + C19130 * C153927) * C2847 +
             C18835 * C154130) *
                C154094 -
            (C20069 * C154130 +
             (C20456 * C153927 + (C15549 + C15550) * C154107) * C2847 +
             ((C20483 + C20484) * C153927 +
              (C14934 * C557 + C15495 + C15495 + C153969 * C581 +
               C14932 * C556 + C15496 + C15496 + C154109 * C580) *
                  C154107) *
                 C2846) *
                C153847) *
               C1251 +
           ((((C20484 + C20483) * C154107 +
              (C14932 * C1920 + C17462 + C17462 + C154109 * C1930 +
               C14934 * C3369 + C17461 + C17461 + C153969 * C3377) *
                  C153927) *
                 C2846 +
             (C20461 * C154107 + (C20485 + C20486) * C153927) * C2847 +
             (C20466 * C154107 + (C20487 + C20488) * C153927) * C154130) *
                C153847 -
            (C19775 * C154130 + (C19132 * C153927 + C19133 * C154107) * C2847 +
             ((C19166 + C19167) * C153927 + (C19165 + C19164) * C154107) *
                 C2846) *
                C154094) *
               C153819) *
              C154085 +
          (((((C15550 + C15549) * C154107 + C20461 * C153927) * C2846 +
             ((C15548 + C15547) * C154107 + C20466 * C153927) * C2847 +
             ((C15546 + C15545) * C154107 + (C16273 + C16274) * C153927) *
                 C154130) *
                C153847 -
            (C18834 * C154130 +
             (C15752 * C153927 + (C14994 + C14993) * C154107) * C2847 +
             (C19133 * C153927 + (C14992 + C14991) * C154107) * C2846) *
                C154094) *
               C1251 +
           (((C19130 * C154107 + C19138 * C153927) * C2846 +
             (C18830 * C154107 + C19143 * C153927) * C2847 +
             (C19774 * C154107 + (C15281 + C15282) * C153927) * C154130) *
                C154094 -
            (((C14934 * C3372 + C17455 + C17455 + C153969 * C3380 +
               C14932 * C1917 + C17456 + C17456 + C154109 * C1927) *
                  C153927 +
              (C16274 + C16273) * C154107) *
                 C154130 +
             ((C20488 + C20487) * C153927 + C20066 * C154107) * C2847 +
             ((C20486 + C20485) * C153927 + C20456 * C154107) * C2846) *
                C153847) *
               C153819) *
              C153754)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C62967 * C136 + C62976 + C62976 + C62963 * C152 + C62969 * C556 +
              C62977 + C62977 + C62964 * C580 + C62971 * C557 + C62978 +
              C62978 + C62965 * C581 + C62973 * C2272 + C62979 + C62979 +
              C154123 * C2282) *
                 C154107 +
             (C67014 + C67015 + C67016 + C67017) * C153927) *
                C153712 * C154094 -
            ((C67878 + C67879 + C67880 + C67881) * C153927 +
             (C62973 * C7665 + C63520 + C63520 + C154123 * C7673 +
              C62971 * C2272 + C63521 + C63521 + C62965 * C2282 +
              C62969 * C557 + C63522 + C63522 + C62964 * C581 + C62967 * C556 +
              C63523 + C63523 + C62963 * C580) *
                 C154107) *
                C153712 * C153847) *
               C1251 +
           (((C67881 + C67880 + C67879 + C67878) * C154107 +
             (C62967 * C1920 + C65485 + C65485 + C62963 * C1930 +
              C62969 * C3369 + C65484 + C65484 + C62964 * C3377 +
              C62971 * C6160 + C65483 + C65483 + C62965 * C6172 +
              C62973 * C30946 + C65482 + C65482 + C154123 * C30950) *
                 C153927) *
                C153712 * C153847 -
            ((C67018 + C67019 + C67020 + C67021) * C153927 +
             (C67017 + C67016 + C67015 + C67014) * C154107) *
                C153712 * C154094) *
               C153819) *
              C154085 +
          ((((C63567 + C63566 + C63565 + C63564) * C154107 +
             (C64294 + C64295 + C64296 + C64297) * C153927) *
                C153712 * C153847 -
            ((C63306 + C63307 + C63308 + C63309) * C153927 +
             (C63047 + C63046 + C63045 + C63044) * C154107) *
                C153712 * C154094) *
               C1251 +
           (((C63309 + C63308 + C63307 + C63306) * C154107 +
             (C63310 + C63311 + C63312 + C63313) * C153927) *
                C153712 * C154094 -
            ((C62973 * C30947 + C65478 + C65478 + C154123 * C30951 +
              C62971 * C6158 + C65479 + C65479 + C62965 * C6170 +
              C62969 * C3370 + C65480 + C65480 + C62964 * C3378 +
              C62967 * C1919 + C65481 + C65481 + C62963 * C1929) *
                 C153927 +
             (C64297 + C64296 + C64295 + C64294) * C154107) *
                C153712 * C153847) *
               C153819) *
              C153754)) /
            (p * q * std::sqrt(p + q));
    d2ee[174] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
             C14938 + C14938 + C153969 * C580) *
                C154107 +
            (C19164 + C19165) * C153927) *
               C2846 +
           ((C14991 + C14992) * C154107 + C19130 * C153927) * C2847 +
           C18835 * C154130) *
              C153783 * C1338 -
          (C19775 * C154130 + (C19132 * C153927 + C19133 * C154107) * C2847 +
           ((C19166 + C19167) * C153927 + (C19165 + C19164) * C154107) *
               C2846) *
              C153783 * C1339 +
          (((C19167 + C19166) * C154107 + (C20987 + C20988) * C153927) * C2846 +
           (C19138 * C154107 + (C19168 + C19169) * C153927) * C2847 +
           (C19143 * C154107 + (C19170 + C19171) * C153927) * C154130) *
              C153783 * C1340 -
          (((C14934 * C5557 + C20977 + C20977 + C153969 * C5563 +
             C14932 * C3085 + C20978 + C20978 + C154109 * C3093) *
                C153927 +
            (C19171 + C19170) * C154107) *
               C154130 +
           ((C14934 * C5558 + C20979 + C20979 + C153969 * C5564 +
             C14932 * C3084 + C20980 + C20980 + C154109 * C3092) *
                C153927 +
            (C19169 + C19168) * C154107) *
               C2847 +
           ((C14934 * C5559 + C20981 + C20981 + C153969 * C5565 +
             C14932 * C3083 + C20982 + C20982 + C154109 * C3091) *
                C153927 +
            (C20988 + C20987) * C154107) *
               C2846) *
              C153783 * C1341) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
              C14938 + C14938 + C153969 * C580) *
                 C154107 +
             (C19164 + C19165) * C153927) *
                C2846 +
            ((C14991 + C14992) * C154107 + C19130 * C153927) * C2847 +
            C18835 * C154130) *
               C153783 * C1251 -
           (C19775 * C154130 + (C19132 * C153927 + C19133 * C154107) * C2847 +
            ((C19166 + C19167) * C153927 + (C19165 + C19164) * C154107) *
                C2846) *
               C153783 * C153819) *
              C1253 +
          (((C19130 * C154107 + C19138 * C153927) * C2846 +
            (C18830 * C154107 + C19143 * C153927) * C2847 +
            (C19774 * C154107 + (C15281 + C15282) * C153927) * C154130) *
               C153783 * C153819 -
           (C18834 * C154130 +
            (C15752 * C153927 + (C14994 + C14993) * C154107) * C2847 +
            (C19133 * C153927 + (C14992 + C14991) * C154107) * C2846) *
               C153783 * C1251) *
              C1254 +
          ((C18835 * C2846 + (C15002 * C154107 + C19774 * C153927) * C2847 +
            ((C14998 + C14997) * C154107 + (C15765 + C15766) * C153927) *
                C154130) *
               C153783 * C1251 -
           (((C14934 * C1916 + C15245 + C15245 + C153969 * C1926 +
              C14932 * C340 + C15246 + C15246 + C154109 * C364) *
                 C153927 +
             (C15766 + C15765) * C154107) *
                C154130 +
            ((C15282 + C15281) * C153927 + C15751 * C154107) * C2847 +
            C19775 * C2846) *
               C153783 * C153819) *
              C1255)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
             C14938 + C14938 + C153969 * C580) *
                C34572 +
            (C19164 + C19165) * C34573 + C38471 * C34574 + C43614 * C154116) *
               C153712 * C153783 * C1251 -
           ((C40260 + C40259) * C154116 + C40246 * C34574 +
            (C19166 + C19167) * C34573 + (C19165 + C19164) * C34572) *
               C153712 * C153783 * C153819) *
              C1253 +
          ((C19130 * C34572 + C19138 * C34573 + C38473 * C34574 +
            (C38482 + C38483) * C154116) *
               C153712 * C153783 * C153819 -
           (C38472 * C154116 + C19132 * C34574 + C19133 * C34573 +
            (C14992 + C14991) * C34572) *
               C153712 * C153783 * C1251) *
              C1254 +
          ((C15001 * C34572 + C18830 * C34573 + C19143 * C34574 +
            (C19170 + C19171) * C154116) *
               C153712 * C153783 * C1251 -
           ((C14934 * C5557 + C20977 + C20977 + C153969 * C5563 +
             C14932 * C3085 + C20978 + C20978 + C154109 * C3093) *
                C154116 +
            (C19171 + C19170) * C34574 + C19131 * C34573 + C15752 * C34572) *
               C153712 * C153783 * C153819) *
              C1255)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
            C14938 + C14938 + C153969 * C580) *
               C34572 +
           (C19164 + C19165) * C34573 + C38471 * C34574 + C43614 * C154116) *
              C153712 * C153783 * C1338 -
          (C44779 * C154116 + C40246 * C34574 + (C19166 + C19167) * C34573 +
           (C19165 + C19164) * C34572) *
              C153712 * C153783 * C1339 +
          (C38471 * C34572 + C43614 * C34573 + (C40259 + C40260) * C34574 +
           (C44790 + C44791) * C154116) *
              C153712 * C153783 * C1340 -
          ((C14934 * C29545 + C44784 + C44784 + C153969 * C29547 +
            C14932 * C28218 + C44785 + C44785 + C154109 * C28222) *
               C154116 +
           (C44791 + C44790) * C34574 + C44779 * C34573 + C40246 * C34572) *
              C153712 * C153783 * C1341) *
         C153748) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C62967 * C136 + C62976 + C62976 + C62963 * C152 + C62969 * C556 +
             C62977 + C62977 + C62964 * C580 + C62971 * C557 + C62978 + C62978 +
             C62965 * C581 + C62973 * C2272 + C62979 + C62979 +
             C154123 * C2282) *
                C154107 +
            (C67014 + C67015 + C67016 + C67017) * C153927) *
               C153712 * C153783 * C1251 -
           ((C67018 + C67019 + C67020 + C67021) * C153927 +
            (C67017 + C67016 + C67015 + C67014) * C154107) *
               C153712 * C153783 * C153819) *
              C1253 +
          (((C63309 + C63308 + C63307 + C63306) * C154107 +
            (C63310 + C63311 + C63312 + C63313) * C153927) *
               C153712 * C153783 * C153819 -
           ((C63306 + C63307 + C63308 + C63309) * C153927 +
            (C63047 + C63046 + C63045 + C63044) * C154107) *
               C153712 * C153783 * C1251) *
              C1254 +
          (((C63051 + C63050 + C63049 + C63048) * C154107 +
            (C63786 + C63787 + C63788 + C63789) * C153927) *
               C153712 * C153783 * C1251 -
           ((C62973 * C6156 + C63286 + C63286 + C154123 * C6168 +
             C62971 * C3371 + C63287 + C63287 + C62965 * C3379 +
             C62969 * C1918 + C63288 + C63288 + C62964 * C1928 + C62967 * C338 +
             C63289 + C63289 + C62963 * C362) *
                C153927 +
            (C63789 + C63788 + C63787 + C63786) * C154107) *
               C153712 * C153783 * C153819) *
              C1255)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C62967 * C136 + C62976 + C62976 + C62963 * C152 + C62969 * C556 +
            C62977 + C62977 + C62964 * C580 + C62971 * C557 + C62978 + C62978 +
            C62965 * C581 + C62973 * C2272 + C62979 + C62979 +
            C154123 * C2282) *
               C154107 +
           (C67014 + C67015 + C67016 + C67017) * C153927) *
              C153712 * C153783 * C1338 -
          ((C67018 + C67019 + C67020 + C67021) * C153927 +
           (C67017 + C67016 + C67015 + C67014) * C154107) *
              C153712 * C153783 * C1339 +
          ((C67021 + C67020 + C67019 + C67018) * C154107 +
           (C68226 + C68227 + C68228 + C68229) * C153927) *
              C153712 * C153783 * C1340 -
          ((C62973 * C29880 + C68214 + C68214 + C154123 * C29884 +
            C62971 * C28358 + C68215 + C68215 + C62965 * C28362 +
            C62969 * C5559 + C68216 + C68216 + C62964 * C5565 + C62967 * C3083 +
            C68217 + C68217 + C62963 * C3091) *
               C153927 +
           (C68229 + C68228 + C68227 + C68226) * C154107) *
              C153712 * C153783 * C1341) *
         C153748) /
            (p * q * std::sqrt(p + q));
    d2ee[175] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
              C14938 + C14938 + C153969 * C580) *
                 C34572 +
             (C19164 + C19165) * C34573 + C38471 * C34574 + C43614 * C154116) *
                C153712 * C2058 -
            (C45644 * C154116 + C41531 * C34574 + (C20483 + C20484) * C34573 +
             (C14934 * C557 + C15495 + C15495 + C153969 * C581 + C14932 * C556 +
              C15496 + C15496 + C154109 * C580) *
                 C34572) *
                C153712 * C153847) *
               C154093 +
           (((C20484 + C20483) * C34572 + (C22275 + C22276) * C34573 +
             (C41544 + C41545) * C34574 + (C45655 + C45656) * C154116) *
                C153712 * C153847 -
            (C44779 * C154116 + C40246 * C34574 + (C19166 + C19167) * C34573 +
             (C19165 + C19164) * C34572) *
                C153712 * C2058) *
               C153819) *
              C154085 +
          ((((C15550 + C15549) * C34572 + C20461 * C34573 + C39751 * C34574 +
             (C39760 + C39761) * C154116) *
                C153712 * C153847 -
            (C38472 * C154116 + C19132 * C34574 + C19133 * C34573 +
             (C14992 + C14991) * C34572) *
                C153712 * C2058) *
               C154093 +
           ((C19130 * C34572 + C19138 * C34573 + C38473 * C34574 +
             (C38482 + C38483) * C154116) *
                C153712 * C2058 -
            ((C14934 * C28359 + C41536 + C41536 + C153969 * C28363 +
              C14932 * C5558 + C41537 + C41537 + C154109 * C5564) *
                 C154116 +
             (C39761 + C39760) * C34574 + C39750 * C34573 + C20456 * C34572) *
                C153712 * C153847) *
               C153819) *
              C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C14932 * C136 + C14937 + C14937 + C154109 * C152 +
               C14934 * C556 + C14938 + C14938 + C153969 * C580) *
                  C154107 +
              (C19164 + C19165) * C153927) *
                 C2846 +
             ((C14991 + C14992) * C154107 + C19130 * C153927) * C2847 +
             C18835 * C154130) *
                C2058 -
            (C20069 * C154130 +
             (C20456 * C153927 + (C15549 + C15550) * C154107) * C2847 +
             ((C20483 + C20484) * C153927 +
              (C14934 * C557 + C15495 + C15495 + C153969 * C581 +
               C14932 * C556 + C15496 + C15496 + C154109 * C580) *
                  C154107) *
                 C2846) *
                C153847) *
               C154093 +
           ((((C20484 + C20483) * C154107 + (C22275 + C22276) * C153927) *
                 C2846 +
             (C20461 * C154107 + (C20485 + C20486) * C153927) * C2847 +
             (C20466 * C154107 + (C20487 + C20488) * C153927) * C154130) *
                C153847 -
            (C19775 * C154130 + (C19132 * C153927 + C19133 * C154107) * C2847 +
             ((C19166 + C19167) * C153927 + (C19165 + C19164) * C154107) *
                 C2846) *
                C2058) *
               C153819) *
              C154085 +
          (((((C15550 + C15549) * C154107 + C20461 * C153927) * C2846 +
             ((C15548 + C15547) * C154107 + C20466 * C153927) * C2847 +
             ((C15546 + C15545) * C154107 + (C16273 + C16274) * C153927) *
                 C154130) *
                C153847 -
            (C18834 * C154130 +
             (C15752 * C153927 + (C14994 + C14993) * C154107) * C2847 +
             (C19133 * C153927 + (C14992 + C14991) * C154107) * C2846) *
                C2058) *
               C154093 +
           (((C19130 * C154107 + C19138 * C153927) * C2846 +
             (C18830 * C154107 + C19143 * C153927) * C2847 +
             (C19774 * C154107 + (C15281 + C15282) * C153927) * C154130) *
                C2058 -
            (((C14934 * C3372 + C17455 + C17455 + C153969 * C3380 +
               C14932 * C1917 + C17456 + C17456 + C154109 * C1927) *
                  C153927 +
              (C16274 + C16273) * C154107) *
                 C154130 +
             ((C20488 + C20487) * C153927 + C20066 * C154107) * C2847 +
             ((C20486 + C20485) * C153927 + C20456 * C154107) * C2846) *
                C153847) *
               C153819) *
              C153754)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C62967 * C136 + C62976 + C62976 + C62963 * C152 + C62969 * C556 +
              C62977 + C62977 + C62964 * C580 + C62971 * C557 + C62978 +
              C62978 + C62965 * C581 + C62973 * C2272 + C62979 + C62979 +
              C154123 * C2282) *
                 C154107 +
             (C67014 + C67015 + C67016 + C67017) * C153927) *
                C153712 * C2058 -
            ((C67878 + C67879 + C67880 + C67881) * C153927 +
             (C62973 * C7665 + C63520 + C63520 + C154123 * C7673 +
              C62971 * C2272 + C63521 + C63521 + C62965 * C2282 +
              C62969 * C557 + C63522 + C63522 + C62964 * C581 + C62967 * C556 +
              C63523 + C63523 + C62963 * C580) *
                 C154107) *
                C153712 * C153847) *
               C154093 +
           (((C67881 + C67880 + C67879 + C67878) * C154107 +
             (C69114 + C69115 + C69116 + C69117) * C153927) *
                C153712 * C153847 -
            ((C67018 + C67019 + C67020 + C67021) * C153927 +
             (C67017 + C67016 + C67015 + C67014) * C154107) *
                C153712 * C2058) *
               C153819) *
              C154085 +
          ((((C63567 + C63566 + C63565 + C63564) * C154107 +
             (C64294 + C64295 + C64296 + C64297) * C153927) *
                C153712 * C153847 -
            ((C63306 + C63307 + C63308 + C63309) * C153927 +
             (C63047 + C63046 + C63045 + C63044) * C154107) *
                C153712 * C2058) *
               C154093 +
           (((C63309 + C63308 + C63307 + C63306) * C154107 +
             (C63310 + C63311 + C63312 + C63313) * C153927) *
                C153712 * C2058 -
            ((C62973 * C30947 + C65478 + C65478 + C154123 * C30951 +
              C62971 * C6158 + C65479 + C65479 + C62965 * C6170 +
              C62969 * C3370 + C65480 + C65480 + C62964 * C3378 +
              C62967 * C1919 + C65481 + C65481 + C62963 * C1929) *
                 C153927 +
             (C64297 + C64296 + C64295 + C64294) * C154107) *
                C153712 * C153847) *
               C153819) *
              C153754)) /
            (p * q * std::sqrt(p + q));
    d2ee[176] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
             C14938 + C14938 + C153969 * C580) *
                C34572 +
            (C19164 + C19165) * C34573 + C38471 * C34574 + C43614 * C154116) *
               C153712 * C154166 -
           (C45644 * C154116 + C41531 * C34574 + (C20483 + C20484) * C34573 +
            (C14934 * C557 + C15495 + C15495 + C153969 * C581 + C14932 * C556 +
             C15496 + C15496 + C154109 * C580) *
                C34572) *
               C153712 * C154167 +
           ((C14932 * C557 + C15497 + C15497 + C154109 * C581 + C14934 * C2272 +
             C15498 + C15498 + C153969 * C2282) *
                C34572 +
            (C21293 + C21294) * C34573 + (C40563 + C40564) * C34574 +
            (C44996 + C44997) * C154116) *
               C153712 * C2574) *
              C154093 +
          (((C20484 + C20483) * C34572 + (C22275 + C22276) * C34573 +
            (C41544 + C41545) * C34574 + (C45655 + C45656) * C154116) *
               C153712 * C154167 -
           (C44779 * C154116 + C40246 * C34574 + (C19166 + C19167) * C34573 +
            (C19165 + C19164) * C34572) *
               C153712 * C154166 -
           ((C14934 * C29880 + C44990 + C44990 + C153969 * C29884 +
             C14932 * C28358 + C44991 + C44991 + C154109 * C28362) *
                C154116 +
            (C44997 + C44996) * C34574 + (C40564 + C40563) * C34573 +
            (C21294 + C21293) * C34572) *
               C153712 * C2574) *
              C153819) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
              C14938 + C14938 + C153969 * C580) *
                 C154107 +
             (C19164 + C19165) * C153927) *
                C2846 +
            ((C14991 + C14992) * C154107 + C19130 * C153927) * C2847 +
            C18835 * C154130) *
               C154166 -
           (C20069 * C154130 +
            (C20456 * C153927 + (C15549 + C15550) * C154107) * C2847 +
            ((C20483 + C20484) * C153927 +
             (C14934 * C557 + C15495 + C15495 + C153969 * C581 + C14932 * C556 +
              C15496 + C15496 + C154109 * C580) *
                 C154107) *
                C2846) *
               C154167 +
           (((C14932 * C557 + C15497 + C15497 + C154109 * C581 +
              C14934 * C2272 + C15498 + C15498 + C153969 * C2282) *
                 C154107 +
             (C21293 + C21294) * C153927) *
                C2846 +
            ((C15551 + C15552) * C154107 + (C19478 + C19479) * C153927) *
                C2847 +
            ((C15553 + C15554) * C154107 + (C19480 + C19481) * C153927) *
                C154130) *
               C2574) *
              C154093 +
          ((((C20484 + C20483) * C154107 + (C22275 + C22276) * C153927) *
                C2846 +
            (C20461 * C154107 + (C20485 + C20486) * C153927) * C2847 +
            (C20466 * C154107 + (C20487 + C20488) * C153927) * C154130) *
               C154167 -
           (C19775 * C154130 + (C19132 * C153927 + C19133 * C154107) * C2847 +
            ((C19166 + C19167) * C153927 + (C19165 + C19164) * C154107) *
                C2846) *
               C154166 -
           (((C14934 * C6156 + C21283 + C21283 + C153969 * C6168 +
              C14932 * C3371 + C21284 + C21284 + C154109 * C3379) *
                 C153927 +
             (C19481 + C19480) * C154107) *
                C154130 +
            ((C14934 * C6158 + C21285 + C21285 + C153969 * C6170 +
              C14932 * C3370 + C21286 + C21286 + C154109 * C3378) *
                 C153927 +
             (C19479 + C19478) * C154107) *
                C2847 +
            ((C14934 * C6160 + C21287 + C21287 + C153969 * C6172 +
              C14932 * C3369 + C21288 + C21288 + C154109 * C3377) *
                 C153927 +
             (C21294 + C21293) * C154107) *
                C2846) *
               C2574) *
              C153819) *
         C153748) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C62967 * C136 + C62976 + C62976 + C62963 * C152 + C62969 * C556 +
             C62977 + C62977 + C62964 * C580 + C62971 * C557 + C62978 + C62978 +
             C62965 * C581 + C62973 * C2272 + C62979 + C62979 +
             C154123 * C2282) *
                C154107 +
            (C67014 + C67015 + C67016 + C67017) * C153927) *
               C153712 * C154166 -
           ((C67878 + C67879 + C67880 + C67881) * C153927 +
            (C62973 * C7665 + C63520 + C63520 + C154123 * C7673 +
             C62971 * C2272 + C63521 + C63521 + C62965 * C2282 + C62969 * C557 +
             C63522 + C63522 + C62964 * C581 + C62967 * C556 + C63523 + C63523 +
             C62963 * C580) *
                C154107) *
               C153712 * C154167 +
           ((C62967 * C557 + C63524 + C63524 + C62963 * C581 + C62969 * C2272 +
             C63525 + C63525 + C62964 * C2282 + C62971 * C7665 + C63526 +
             C63526 + C62965 * C7673 + C62973 * C10502 + C63527 + C63527 +
             C154123 * C10508) *
                C154107 +
            (C68444 + C68445 + C68446 + C68447) * C153927) *
               C153712 * C2574) *
              C154093 +
          (((C67881 + C67880 + C67879 + C67878) * C154107 +
            (C69114 + C69115 + C69116 + C69117) * C153927) *
               C153712 * C154167 -
           ((C67018 + C67019 + C67020 + C67021) * C153927 +
            (C67017 + C67016 + C67015 + C67014) * C154107) *
               C153712 * C154166 -
           ((C62973 * C33704 + C68432 + C68432 + C154123 * C33708 +
             C62971 * C30946 + C68433 + C68433 + C62965 * C30950 +
             C62969 * C6160 + C68434 + C68434 + C62964 * C6172 +
             C62967 * C3369 + C68435 + C68435 + C62963 * C3377) *
                C153927 +
            (C68447 + C68446 + C68445 + C68444) * C154107) *
               C153712 * C2574) *
              C153819) *
         C153748) /
            (p * q * std::sqrt(p + q));
    d2ee[177] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C14932 * C136 + C14937 + C14937 + C154109 * C152 +
                  C14934 * C556 + C14938 + C14938 + C153969 * C580) *
                     C154107 +
                 (C19164 + C19165) * C153927) *
                    C2846 +
                ((C14991 + C14992) * C154107 + C19130 * C153927) * C2847 +
                C18835 * C154130) *
                   C2058 -
               (C20069 * C154130 +
                (C20456 * C153927 + (C15549 + C15550) * C154107) * C2847 +
                ((C20483 + C20484) * C153927 +
                 (C14934 * C557 + C15495 + C15495 + C153969 * C581 +
                  C14932 * C556 + C15496 + C15496 + C154109 * C580) *
                     C154107) *
                    C2846) *
                   C153847) *
                  C153767 * C1253 +
              ((((C15550 + C15549) * C154107 + C20461 * C153927) * C2846 +
                ((C15548 + C15547) * C154107 + C20466 * C153927) * C2847 +
                ((C15546 + C15545) * C154107 + (C16273 + C16274) * C153927) *
                    C154130) *
                   C153847 -
               (C18834 * C154130 +
                (C15752 * C153927 + (C14994 + C14993) * C154107) * C2847 +
                (C19133 * C153927 + (C14992 + C14991) * C154107) * C2846) *
                   C2058) *
                  C153767 * C1254 +
              ((C18835 * C2846 + (C15002 * C154107 + C19774 * C153927) * C2847 +
                ((C14998 + C14997) * C154107 + (C15765 + C15766) * C153927) *
                    C154130) *
                   C2058 -
               (((C14934 * C1485 + C16255 + C16255 + C153969 * C1495 +
                  C14932 * C1085 + C16256 + C16256 + C154109 * C1097) *
                     C153927 +
                 (C15976 + C15975) * C154107) *
                    C154130 +
                ((C16274 + C16273) * C153927 + C15961 * C154107) * C2847 +
                C20069 * C2846) *
                   C153847) *
                  C153767 * C1255) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C14932 * C136 + C14937 + C14937 + C154109 * C152 +
                  C14934 * C556 + C14938 + C14938 + C153969 * C580) *
                     C154107 +
                 (C19164 + C19165) * C153927) *
                    C2846 +
                ((C14991 + C14992) * C154107 + C19130 * C153927) * C2847 +
                C18835 * C154130) *
                   C2058 -
               (C20069 * C154130 +
                (C20456 * C153927 + (C15549 + C15550) * C154107) * C2847 +
                ((C20483 + C20484) * C153927 +
                 (C14934 * C557 + C15495 + C15495 + C153969 * C581 +
                  C14932 * C556 + C15496 + C15496 + C154109 * C580) *
                     C154107) *
                    C2846) *
                   C153847) *
                  C326 +
              ((((C20484 + C20483) * C154107 + (C22275 + C22276) * C153927) *
                    C2846 +
                (C20461 * C154107 + (C20485 + C20486) * C153927) * C2847 +
                (C20466 * C154107 + (C20487 + C20488) * C153927) * C154130) *
                   C153847 -
               (C19775 * C154130 +
                (C19132 * C153927 + C19133 * C154107) * C2847 +
                ((C19166 + C19167) * C153927 + (C19165 + C19164) * C154107) *
                    C2846) *
                   C2058) *
                  C327 +
              ((((C19167 + C19166) * C154107 + (C20987 + C20988) * C153927) *
                    C2846 +
                (C19138 * C154107 + (C19168 + C19169) * C153927) * C2847 +
                (C19143 * C154107 + (C19170 + C19171) * C153927) * C154130) *
                   C2058 -
               (((C14934 * C4809 + C22265 + C22265 + C153969 * C4815 +
                  C14932 * C4170 + C22266 + C22266 + C154109 * C4178) *
                     C153927 +
                 (C20488 + C20487) * C154107) *
                    C154130 +
                ((C14934 * C4810 + C22267 + C22267 + C153969 * C4816 +
                  C14932 * C4169 + C22268 + C22268 + C154109 * C4177) *
                     C153927 +
                 (C20486 + C20485) * C154107) *
                    C2847 +
                ((C14934 * C4811 + C22269 + C22269 + C153969 * C4817 +
                  C14932 * C4168 + C22270 + C22270 + C154109 * C4176) *
                     C153927 +
                 (C22276 + C22275) * C154107) *
                    C2846) *
                   C153847) *
                  C328) *
             C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
             C14938 + C14938 + C153969 * C580) *
                C154107 +
            (C19164 + C19165) * C153927) *
               C2846 +
           ((C14991 + C14992) * C154107 + C19130 * C153927) * C2847 +
           C18835 * C154130) *
              C2264 -
          (C20069 * C154130 +
           (C20456 * C153927 + (C15549 + C15550) * C154107) * C2847 +
           ((C20483 + C20484) * C153927 +
            (C14934 * C557 + C15495 + C15495 + C153969 * C581 + C14932 * C556 +
             C15496 + C15496 + C154109 * C580) *
                C154107) *
               C2846) *
              C2265 +
          (((C14932 * C557 + C15497 + C15497 + C154109 * C581 + C14934 * C2272 +
             C15498 + C15498 + C153969 * C2282) *
                C154107 +
            (C21293 + C21294) * C153927) *
               C2846 +
           ((C15551 + C15552) * C154107 + (C19478 + C19479) * C153927) * C2847 +
           ((C15553 + C15554) * C154107 + (C19480 + C19481) * C153927) *
               C154130) *
              C2266 -
          (((C14934 * C9165 + C23051 + C23051 + C153969 * C9171 +
             C14932 * C6157 + C23052 + C23052 + C154109 * C6169) *
                C153927 +
            (C14934 * C7667 + C17983 + C17983 + C153969 * C7675 +
             C14932 * C2270 + C17984 + C17984 + C154109 * C2280) *
                C154107) *
               C154130 +
           ((C14934 * C9166 + C23053 + C23053 + C153969 * C9172 +
             C14932 * C6159 + C23054 + C23054 + C154109 * C6171) *
                C153927 +
            (C14934 * C7666 + C17985 + C17985 + C153969 * C7674 +
             C14932 * C2271 + C17986 + C17986 + C154109 * C2281) *
                C154107) *
               C2847 +
           ((C14934 * C9167 + C23055 + C23055 + C153969 * C9173 +
             C14932 * C6161 + C23056 + C23056 + C154109 * C6173) *
                C153927 +
            (C14934 * C7665 + C17987 + C17987 + C153969 * C7673 +
             C14932 * C2272 + C17988 + C17988 + C154109 * C2282) *
                C154107) *
               C2846) *
              C2267) *
         C153767 * C153748) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
             C14938 + C14938 + C153969 * C580) *
                C34572 +
            (C19164 + C19165) * C34573 + C38471 * C34574 + C43614 * C154116) *
               C153712 * C2058 -
           (C45644 * C154116 + C41531 * C34574 + (C20483 + C20484) * C34573 +
            (C14934 * C557 + C15495 + C15495 + C153969 * C581 + C14932 * C556 +
             C15496 + C15496 + C154109 * C580) *
                C34572) *
               C153712 * C153847) *
              C153767 * C1253 +
          (((C15550 + C15549) * C34572 + C20461 * C34573 + C39751 * C34574 +
            (C39760 + C39761) * C154116) *
               C153712 * C153847 -
           (C38472 * C154116 + C19132 * C34574 + C19133 * C34573 +
            (C14992 + C14991) * C34572) *
               C153712 * C2058) *
              C153767 * C1254 +
          ((C15001 * C34572 + C18830 * C34573 + C19143 * C34574 +
            (C19170 + C19171) * C154116) *
               C153712 * C2058 -
           ((C14934 * C4809 + C22265 + C22265 + C153969 * C4815 +
             C14932 * C4170 + C22266 + C22266 + C154109 * C4178) *
                C154116 +
            (C20488 + C20487) * C34574 + C20066 * C34573 + C15962 * C34572) *
               C153712 * C153847) *
              C153767 * C1255)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
             C14938 + C14938 + C153969 * C580) *
                C34572 +
            (C19164 + C19165) * C34573 + C38471 * C34574 + C43614 * C154116) *
               C153712 * C2058 -
           (C45644 * C154116 + C41531 * C34574 + (C20483 + C20484) * C34573 +
            (C14934 * C557 + C15495 + C15495 + C153969 * C581 + C14932 * C556 +
             C15496 + C15496 + C154109 * C580) *
                C34572) *
               C153712 * C153847) *
              C326 +
          (((C20484 + C20483) * C34572 + (C22275 + C22276) * C34573 +
            (C41544 + C41545) * C34574 + (C45655 + C45656) * C154116) *
               C153712 * C153847 -
           (C44779 * C154116 + C40246 * C34574 + (C19166 + C19167) * C34573 +
            (C19165 + C19164) * C34572) *
               C153712 * C2058) *
              C327 +
          ((C38471 * C34572 + C43614 * C34573 + (C40259 + C40260) * C34574 +
            (C44790 + C44791) * C154116) *
               C153712 * C2058 -
           ((C14934 * C29125 + C45649 + C45649 + C153969 * C29127 +
             C14932 * C28772 + C45650 + C45650 + C154109 * C28776) *
                C154116 +
            (C45656 + C45655) * C34574 + C45644 * C34573 + C41531 * C34572) *
               C153712 * C153847) *
              C328) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
            C14938 + C14938 + C153969 * C580) *
               C34572 +
           (C19164 + C19165) * C34573 + C38471 * C34574 + C43614 * C154116) *
              C153712 * C2264 -
          (C45644 * C154116 + C41531 * C34574 + (C20483 + C20484) * C34573 +
           (C14934 * C557 + C15495 + C15495 + C153969 * C581 + C14932 * C556 +
            C15496 + C15496 + C154109 * C580) *
               C34572) *
              C153712 * C2265 +
          ((C14932 * C557 + C15497 + C15497 + C154109 * C581 + C14934 * C2272 +
            C15498 + C15498 + C153969 * C2282) *
               C34572 +
           (C21293 + C21294) * C34573 + (C40563 + C40564) * C34574 +
           (C44996 + C44997) * C154116) *
              C153712 * C2266 -
          ((C14934 * C32340 + C46175 + C46175 + C153969 * C32342 +
            C14932 * C29881 + C46176 + C46176 + C154109 * C29885) *
               C154116 +
           (C14934 * C30946 + C42322 + C42322 + C153969 * C30950 +
            C14932 * C6160 + C42323 + C42323 + C154109 * C6172) *
               C34574 +
           (C14934 * C9167 + C23055 + C23055 + C153969 * C9173 +
            C14932 * C6161 + C23056 + C23056 + C154109 * C6173) *
               C34573 +
           (C14934 * C7665 + C17987 + C17987 + C153969 * C7673 +
            C14932 * C2272 + C17988 + C17988 + C154109 * C2282) *
               C34572) *
              C153712 * C2267) *
         C153767 * C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C62967 * C136 + C62976 + C62976 + C62963 * C152 + C62969 * C556 +
             C62977 + C62977 + C62964 * C580 + C62971 * C557 + C62978 + C62978 +
             C62965 * C581 + C62973 * C2272 + C62979 + C62979 +
             C154123 * C2282) *
                C154107 +
            (C67014 + C67015 + C67016 + C67017) * C153927) *
               C153712 * C2058 -
           ((C67878 + C67879 + C67880 + C67881) * C153927 +
            (C62973 * C7665 + C63520 + C63520 + C154123 * C7673 +
             C62971 * C2272 + C63521 + C63521 + C62965 * C2282 + C62969 * C557 +
             C63522 + C63522 + C62964 * C581 + C62967 * C556 + C63523 + C63523 +
             C62963 * C580) *
                C154107) *
               C153712 * C153847) *
              C153767 * C1253 +
          (((C63567 + C63566 + C63565 + C63564) * C154107 +
            (C64294 + C64295 + C64296 + C64297) * C153927) *
               C153712 * C153847 -
           ((C63306 + C63307 + C63308 + C63309) * C153927 +
            (C63047 + C63046 + C63045 + C63044) * C154107) *
               C153712 * C2058) *
              C153767 * C1254 +
          (((C63051 + C63050 + C63049 + C63048) * C154107 +
            (C63786 + C63787 + C63788 + C63789) * C153927) *
               C153712 * C2058 -
           ((C62973 * C9165 + C64282 + C64282 + C154123 * C9171 +
             C62971 * C6157 + C64283 + C64283 + C62965 * C6169 +
             C62969 * C1487 + C64284 + C64284 + C62964 * C1497 +
             C62967 * C1083 + C64285 + C64285 + C62963 * C1095) *
                C153927 +
            (C64007 + C64006 + C64005 + C64004) * C154107) *
               C153712 * C153847) *
              C153767 * C1255)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C62967 * C136 + C62976 + C62976 + C62963 * C152 + C62969 * C556 +
             C62977 + C62977 + C62964 * C580 + C62971 * C557 + C62978 + C62978 +
             C62965 * C581 + C62973 * C2272 + C62979 + C62979 +
             C154123 * C2282) *
                C154107 +
            (C67014 + C67015 + C67016 + C67017) * C153927) *
               C153712 * C2058 -
           ((C67878 + C67879 + C67880 + C67881) * C153927 +
            (C62973 * C7665 + C63520 + C63520 + C154123 * C7673 +
             C62971 * C2272 + C63521 + C63521 + C62965 * C2282 + C62969 * C557 +
             C63522 + C63522 + C62964 * C581 + C62967 * C556 + C63523 + C63523 +
             C62963 * C580) *
                C154107) *
               C153712 * C153847) *
              C326 +
          (((C67881 + C67880 + C67879 + C67878) * C154107 +
            (C69114 + C69115 + C69116 + C69117) * C153927) *
               C153712 * C153847 -
           ((C67018 + C67019 + C67020 + C67021) * C153927 +
            (C67017 + C67016 + C67015 + C67014) * C154107) *
               C153712 * C2058) *
              C327 +
          (((C67021 + C67020 + C67019 + C67018) * C154107 +
            (C68226 + C68227 + C68228 + C68229) * C153927) *
               C153712 * C2058 -
           ((C62973 * C32340 + C69102 + C69102 + C154123 * C32342 +
             C62971 * C29881 + C69103 + C69103 + C62965 * C29885 +
             C62969 * C4811 + C69104 + C69104 + C62964 * C4817 +
             C62967 * C4168 + C69105 + C69105 + C62963 * C4176) *
                C153927 +
            (C69117 + C69116 + C69115 + C69114) * C154107) *
               C153712 * C153847) *
              C328) *
         C153748) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C62967 * C136 + C62976 + C62976 + C62963 * C152 + C62969 * C556 +
            C62977 + C62977 + C62964 * C580 + C62971 * C557 + C62978 + C62978 +
            C62965 * C581 + C62973 * C2272 + C62979 + C62979 +
            C154123 * C2282) *
               C154107 +
           (C67014 + C67015 + C67016 + C67017) * C153927) *
              C153712 * C2264 -
          ((C67878 + C67879 + C67880 + C67881) * C153927 +
           (C62973 * C7665 + C63520 + C63520 + C154123 * C7673 +
            C62971 * C2272 + C63521 + C63521 + C62965 * C2282 + C62969 * C557 +
            C63522 + C63522 + C62964 * C581 + C62967 * C556 + C63523 + C63523 +
            C62963 * C580) *
               C154107) *
              C153712 * C2265 +
          ((C62967 * C557 + C63524 + C63524 + C62963 * C581 + C62969 * C2272 +
            C63525 + C63525 + C62964 * C2282 + C62971 * C7665 + C63526 +
            C63526 + C62965 * C7673 + C62973 * C10502 + C63527 + C63527 +
            C154123 * C10508) *
               C154107 +
           (C68444 + C68445 + C68446 + C68447) * C153927) *
              C153712 * C2266 -
          ((C62973 * C56424 + C69636 + C69636 + C154123 * C56426 +
            C62971 * C33705 + C69637 + C69637 + C62965 * C33709 +
            C62969 * C9167 + C69638 + C69638 + C62964 * C9173 + C62967 * C6161 +
            C69639 + C69639 + C62963 * C6173) *
               C153927 +
           (C62973 * C55638 + C66008 + C66008 + C154123 * C55642 +
            C62971 * C10502 + C66009 + C66009 + C62965 * C10508 +
            C62969 * C7665 + C66010 + C66010 + C62964 * C7673 + C62967 * C2272 +
            C66011 + C66011 + C62963 * C2282) *
               C154107) *
              C153712 * C2267) *
         C153767 * C153748) /
            (p * q * std::sqrt(p + q));
    d2ee[178] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
             C14938 + C14938 + C153969 * C580) *
                C34572 +
            (C19164 + C19165) * C34573 + C38471 * C34574 + C43614 * C154116) *
               C153712 * C154166 -
           (C45644 * C154116 + C41531 * C34574 + (C20483 + C20484) * C34573 +
            (C14934 * C557 + C15495 + C15495 + C153969 * C581 + C14932 * C556 +
             C15496 + C15496 + C154109 * C580) *
                C34572) *
               C153712 * C154167 +
           ((C14932 * C557 + C15497 + C15497 + C154109 * C581 + C14934 * C2272 +
             C15498 + C15498 + C153969 * C2282) *
                C34572 +
            (C21293 + C21294) * C34573 + (C40563 + C40564) * C34574 +
            (C44996 + C44997) * C154116) *
               C153712 * C2574) *
              C153767 * C154085 +
          (((C15550 + C15549) * C34572 + C20461 * C34573 + C39751 * C34574 +
            (C39760 + C39761) * C154116) *
               C153712 * C154167 -
           (C38472 * C154116 + C19132 * C34574 + C19133 * C34573 +
            (C14992 + C14991) * C34572) *
               C153712 * C154166 -
           ((C14934 * C31684 + C40555 + C40555 + C153969 * C31686 +
             C14932 * C4810 + C40556 + C40556 + C154109 * C4816) *
                C154116 +
            (C38783 + C38782) * C34574 + (C19479 + C19478) * C34573 +
            (C15552 + C15551) * C34572) *
               C153712 * C2574) *
              C153767 * C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
              C14938 + C14938 + C153969 * C580) *
                 C154107 +
             (C19164 + C19165) * C153927) *
                C2846 +
            ((C14991 + C14992) * C154107 + C19130 * C153927) * C2847 +
            C18835 * C154130) *
               C154166 -
           (C20069 * C154130 +
            (C20456 * C153927 + (C15549 + C15550) * C154107) * C2847 +
            ((C20483 + C20484) * C153927 +
             (C14934 * C557 + C15495 + C15495 + C153969 * C581 + C14932 * C556 +
              C15496 + C15496 + C154109 * C580) *
                 C154107) *
                C2846) *
               C154167 +
           (((C14932 * C557 + C15497 + C15497 + C154109 * C581 +
              C14934 * C2272 + C15498 + C15498 + C153969 * C2282) *
                 C154107 +
             (C21293 + C21294) * C153927) *
                C2846 +
            ((C15551 + C15552) * C154107 + (C19478 + C19479) * C153927) *
                C2847 +
            ((C15553 + C15554) * C154107 + (C19480 + C19481) * C153927) *
                C154130) *
               C2574) *
              C153767 * C154085 +
          ((((C15550 + C15549) * C154107 + C20461 * C153927) * C2846 +
            ((C15548 + C15547) * C154107 + C20466 * C153927) * C2847 +
            ((C15546 + C15545) * C154107 + (C16273 + C16274) * C153927) *
                C154130) *
               C154167 -
           (C18834 * C154130 +
            (C15752 * C153927 + (C14994 + C14993) * C154107) * C2847 +
            (C19133 * C153927 + (C14992 + C14991) * C154107) * C2846) *
               C154166 -
           (((C14934 * C8529 + C16801 + C16801 + C153969 * C8531 +
              C14932 * C1486 + C16802 + C16802 + C154109 * C1496) *
                 C153927 +
             (C15556 + C15555) * C154107) *
                C154130 +
            ((C19481 + C19480) * C153927 + (C15554 + C15553) * C154107) *
                C2847 +
            ((C19479 + C19478) * C153927 + (C15552 + C15551) * C154107) *
                C2846) *
               C2574) *
              C153767 * C153754)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C62967 * C136 + C62976 + C62976 + C62963 * C152 + C62969 * C556 +
             C62977 + C62977 + C62964 * C580 + C62971 * C557 + C62978 + C62978 +
             C62965 * C581 + C62973 * C2272 + C62979 + C62979 +
             C154123 * C2282) *
                C154107 +
            (C67014 + C67015 + C67016 + C67017) * C153927) *
               C153712 * C154166 -
           ((C67878 + C67879 + C67880 + C67881) * C153927 +
            (C62973 * C7665 + C63520 + C63520 + C154123 * C7673 +
             C62971 * C2272 + C63521 + C63521 + C62965 * C2282 + C62969 * C557 +
             C63522 + C63522 + C62964 * C581 + C62967 * C556 + C63523 + C63523 +
             C62963 * C580) *
                C154107) *
               C153712 * C154167 +
           ((C62967 * C557 + C63524 + C63524 + C62963 * C581 + C62969 * C2272 +
             C63525 + C63525 + C62964 * C2282 + C62971 * C7665 + C63526 +
             C63526 + C62965 * C7673 + C62973 * C10502 + C63527 + C63527 +
             C154123 * C10508) *
                C154107 +
            (C68444 + C68445 + C68446 + C68447) * C153927) *
               C153712 * C2574) *
              C153767 * C154085 +
          (((C63567 + C63566 + C63565 + C63564) * C154107 +
            (C64294 + C64295 + C64296 + C64297) * C153927) *
               C153712 * C154167 -
           ((C63306 + C63307 + C63308 + C63309) * C153927 +
            (C63047 + C63046 + C63045 + C63044) * C154107) *
               C153712 * C154166 -
           ((C62973 * C56080 + C64824 + C64824 + C154123 * C56082 +
             C62971 * C9166 + C64825 + C64825 + C62965 * C9172 +
             C62969 * C6159 + C64826 + C64826 + C62964 * C6171 +
             C62967 * C1488 + C64827 + C64827 + C62963 * C1498) *
                C153927 +
            (C63571 + C63570 + C63569 + C63568) * C154107) *
               C153712 * C2574) *
              C153767 * C153754)) /
            (p * q * std::sqrt(p + q));
    d2ee[179] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
              C14938 + C14938 + C153969 * C580) *
                 C154107 +
             (C19164 + C19165) * C153927) *
                C2846 +
            ((C14991 + C14992) * C154107 + C19130 * C153927) * C2847 +
            C18835 * C154130) *
               C2058 -
           (C20069 * C154130 +
            (C20456 * C153927 + (C15549 + C15550) * C154107) * C2847 +
            ((C20483 + C20484) * C153927 +
             (C14934 * C557 + C15495 + C15495 + C153969 * C581 + C14932 * C556 +
              C15496 + C15496 + C154109 * C580) *
                 C154107) *
                C2846) *
               C153847) *
              C326 +
          ((((C20484 + C20483) * C154107 + (C22275 + C22276) * C153927) *
                C2846 +
            (C20461 * C154107 + (C20485 + C20486) * C153927) * C2847 +
            (C20466 * C154107 + (C20487 + C20488) * C153927) * C154130) *
               C153847 -
           (C19775 * C154130 + (C19132 * C153927 + C19133 * C154107) * C2847 +
            ((C19166 + C19167) * C153927 + (C19165 + C19164) * C154107) *
                C2846) *
               C2058) *
              C327 +
          ((((C19167 + C19166) * C154107 + (C20987 + C20988) * C153927) *
                C2846 +
            (C19138 * C154107 + (C19168 + C19169) * C153927) * C2847 +
            (C19143 * C154107 + (C19170 + C19171) * C153927) * C154130) *
               C2058 -
           (((C14934 * C4809 + C22265 + C22265 + C153969 * C4815 +
              C14932 * C4170 + C22266 + C22266 + C154109 * C4178) *
                 C153927 +
             (C20488 + C20487) * C154107) *
                C154130 +
            ((C14934 * C4810 + C22267 + C22267 + C153969 * C4816 +
              C14932 * C4169 + C22268 + C22268 + C154109 * C4177) *
                 C153927 +
             (C20486 + C20485) * C154107) *
                C2847 +
            ((C14934 * C4811 + C22269 + C22269 + C153969 * C4817 +
              C14932 * C4168 + C22270 + C22270 + C154109 * C4176) *
                 C153927 +
             (C22276 + C22275) * C154107) *
                C2846) *
               C153847) *
              C328) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
              C14938 + C14938 + C153969 * C580) *
                 C154107 +
             (C19164 + C19165) * C153927) *
                C2846 +
            ((C14991 + C14992) * C154107 + C19130 * C153927) * C2847 +
            C18835 * C154130) *
               C2058 -
           (C20069 * C154130 +
            (C20456 * C153927 + (C15549 + C15550) * C154107) * C2847 +
            ((C20483 + C20484) * C153927 +
             (C14934 * C557 + C15495 + C15495 + C153969 * C581 + C14932 * C556 +
              C15496 + C15496 + C154109 * C580) *
                 C154107) *
                C2846) *
               C153847) *
              C153767 * C1253 +
          ((((C15550 + C15549) * C154107 + C20461 * C153927) * C2846 +
            ((C15548 + C15547) * C154107 + C20466 * C153927) * C2847 +
            ((C15546 + C15545) * C154107 + (C16273 + C16274) * C153927) *
                C154130) *
               C153847 -
           (C18834 * C154130 +
            (C15752 * C153927 + (C14994 + C14993) * C154107) * C2847 +
            (C19133 * C153927 + (C14992 + C14991) * C154107) * C2846) *
               C2058) *
              C153767 * C1254 +
          ((C18835 * C2846 + (C15002 * C154107 + C19774 * C153927) * C2847 +
            ((C14998 + C14997) * C154107 + (C15765 + C15766) * C153927) *
                C154130) *
               C2058 -
           (((C14934 * C1485 + C16255 + C16255 + C153969 * C1495 +
              C14932 * C1085 + C16256 + C16256 + C154109 * C1097) *
                 C153927 +
             (C15976 + C15975) * C154107) *
                C154130 +
            ((C16274 + C16273) * C153927 + C15961 * C154107) * C2847 +
            C20069 * C2846) *
               C153847) *
              C153767 * C1255)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
             C14938 + C14938 + C153969 * C580) *
                C34572 +
            (C19164 + C19165) * C34573 + C38471 * C34574 + C43614 * C154116) *
               C153712 * C2058 -
           (C45644 * C154116 + C41531 * C34574 + (C20483 + C20484) * C34573 +
            (C14934 * C557 + C15495 + C15495 + C153969 * C581 + C14932 * C556 +
             C15496 + C15496 + C154109 * C580) *
                C34572) *
               C153712 * C153847) *
              C153767 * C1253 +
          (((C15550 + C15549) * C34572 + C20461 * C34573 + C39751 * C34574 +
            (C39760 + C39761) * C154116) *
               C153712 * C153847 -
           (C38472 * C154116 + C19132 * C34574 + C19133 * C34573 +
            (C14992 + C14991) * C34572) *
               C153712 * C2058) *
              C153767 * C1254 +
          ((C15001 * C34572 + C18830 * C34573 + C19143 * C34574 +
            (C19170 + C19171) * C154116) *
               C153712 * C2058 -
           ((C14934 * C4809 + C22265 + C22265 + C153969 * C4815 +
             C14932 * C4170 + C22266 + C22266 + C154109 * C4178) *
                C154116 +
            (C20488 + C20487) * C34574 + C20066 * C34573 + C15962 * C34572) *
               C153712 * C153847) *
              C153767 * C1255)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
             C14938 + C14938 + C153969 * C580) *
                C34572 +
            (C19164 + C19165) * C34573 + C38471 * C34574 + C43614 * C154116) *
               C153712 * C2058 -
           (C45644 * C154116 + C41531 * C34574 + (C20483 + C20484) * C34573 +
            (C14934 * C557 + C15495 + C15495 + C153969 * C581 + C14932 * C556 +
             C15496 + C15496 + C154109 * C580) *
                C34572) *
               C153712 * C153847) *
              C326 +
          (((C20484 + C20483) * C34572 + (C22275 + C22276) * C34573 +
            (C41544 + C41545) * C34574 + (C45655 + C45656) * C154116) *
               C153712 * C153847 -
           (C44779 * C154116 + C40246 * C34574 + (C19166 + C19167) * C34573 +
            (C19165 + C19164) * C34572) *
               C153712 * C2058) *
              C327 +
          ((C38471 * C34572 + C43614 * C34573 + (C40259 + C40260) * C34574 +
            (C44790 + C44791) * C154116) *
               C153712 * C2058 -
           ((C14934 * C29125 + C45649 + C45649 + C153969 * C29127 +
             C14932 * C28772 + C45650 + C45650 + C154109 * C28776) *
                C154116 +
            (C45656 + C45655) * C34574 + C45644 * C34573 + C41531 * C34572) *
               C153712 * C153847) *
              C328) *
         C153748) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C62967 * C136 + C62976 + C62976 + C62963 * C152 + C62969 * C556 +
             C62977 + C62977 + C62964 * C580 + C62971 * C557 + C62978 + C62978 +
             C62965 * C581 + C62973 * C2272 + C62979 + C62979 +
             C154123 * C2282) *
                C154107 +
            (C67014 + C67015 + C67016 + C67017) * C153927) *
               C153712 * C2058 -
           ((C67878 + C67879 + C67880 + C67881) * C153927 +
            (C62973 * C7665 + C63520 + C63520 + C154123 * C7673 +
             C62971 * C2272 + C63521 + C63521 + C62965 * C2282 + C62969 * C557 +
             C63522 + C63522 + C62964 * C581 + C62967 * C556 + C63523 + C63523 +
             C62963 * C580) *
                C154107) *
               C153712 * C153847) *
              C153767 * C1253 +
          (((C63567 + C63566 + C63565 + C63564) * C154107 +
            (C64294 + C64295 + C64296 + C64297) * C153927) *
               C153712 * C153847 -
           ((C63306 + C63307 + C63308 + C63309) * C153927 +
            (C63047 + C63046 + C63045 + C63044) * C154107) *
               C153712 * C2058) *
              C153767 * C1254 +
          (((C63051 + C63050 + C63049 + C63048) * C154107 +
            (C63786 + C63787 + C63788 + C63789) * C153927) *
               C153712 * C2058 -
           ((C62973 * C9165 + C64282 + C64282 + C154123 * C9171 +
             C62971 * C6157 + C64283 + C64283 + C62965 * C6169 +
             C62969 * C1487 + C64284 + C64284 + C62964 * C1497 +
             C62967 * C1083 + C64285 + C64285 + C62963 * C1095) *
                C153927 +
            (C64007 + C64006 + C64005 + C64004) * C154107) *
               C153712 * C153847) *
              C153767 * C1255)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C62967 * C136 + C62976 + C62976 + C62963 * C152 + C62969 * C556 +
             C62977 + C62977 + C62964 * C580 + C62971 * C557 + C62978 + C62978 +
             C62965 * C581 + C62973 * C2272 + C62979 + C62979 +
             C154123 * C2282) *
                C154107 +
            (C67014 + C67015 + C67016 + C67017) * C153927) *
               C153712 * C2058 -
           ((C67878 + C67879 + C67880 + C67881) * C153927 +
            (C62973 * C7665 + C63520 + C63520 + C154123 * C7673 +
             C62971 * C2272 + C63521 + C63521 + C62965 * C2282 + C62969 * C557 +
             C63522 + C63522 + C62964 * C581 + C62967 * C556 + C63523 + C63523 +
             C62963 * C580) *
                C154107) *
               C153712 * C153847) *
              C326 +
          (((C67881 + C67880 + C67879 + C67878) * C154107 +
            (C69114 + C69115 + C69116 + C69117) * C153927) *
               C153712 * C153847 -
           ((C67018 + C67019 + C67020 + C67021) * C153927 +
            (C67017 + C67016 + C67015 + C67014) * C154107) *
               C153712 * C2058) *
              C327 +
          (((C67021 + C67020 + C67019 + C67018) * C154107 +
            (C68226 + C68227 + C68228 + C68229) * C153927) *
               C153712 * C2058 -
           ((C62973 * C32340 + C69102 + C69102 + C154123 * C32342 +
             C62971 * C29881 + C69103 + C69103 + C62965 * C29885 +
             C62969 * C4811 + C69104 + C69104 + C62964 * C4817 +
             C62967 * C4168 + C69105 + C69105 + C62963 * C4176) *
                C153927 +
            (C69117 + C69116 + C69115 + C69114) * C154107) *
               C153712 * C153847) *
              C328) *
         C153748) /
            (p * q * std::sqrt(p + q));
    d2ee[180] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C136 + C161 + C161 + C153882 * C152) * C153865 * C123 +
                C199 * C124 + C200 * C125 + C201 * C126 + C202 * C127) *
                   C153783 * C154093 -
               (C420 * C127 + C421 * C126 + C422 * C125 + C423 * C124 +
                (C134 * C335 + C380 + C380 + C153882 * C359) * C153865 * C123) *
                   C153783 * C153819) *
                  C154162 +
              ((C423 * C123 + C422 * C124 + C421 * C125 + C420 * C126 +
                C785 * C127) *
                   C153783 * C153819 -
               (C203 * C127 + C202 * C126 + C201 * C125 + C200 * C124 +
                C199 * C123) *
                   C153783 * C154093) *
                  C154163 +
              ((C200 * C123 + C201 * C124 + C202 * C125 + C203 * C126 +
                C204 * C127) *
                   C153783 * C154093 -
               ((C134 * C775 + C781 + C781 + C153882 * C777) * C153865 * C127 +
                C785 * C126 + C420 * C125 + C421 * C124 + C422 * C123) *
                   C153783 * C153819) *
                  C774) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C134 * C136 + C161 + C161 + C153882 * C152) * C154181 +
                 C3138 * C154169 + C3139 * C154143) *
                    C2846 +
                (C2850 + C2851 + C2852) * C2847 + C2864 * C154130) *
                   C153783 * C154093 -
               (C3650 * C154130 + (C3147 + C3106 + C3107) * C2847 +
                (C3142 * C154143 + C3139 * C154169 + C3138 * C154181) * C2846) *
                   C153783 * C153819) *
                  C154162 +
              (((C3107 + C3106 + C3147) * C2846 +
                (C3103 + C3102 + C3146) * C2847 +
                (C3647 + C3648 + C3649) * C154130) *
                   C153783 * C153819 -
               (C2865 * C154130 + (C2855 + C2854 + C2853) * C2847 +
                (C2852 + C2851 + C2850) * C2846) *
                   C153783 * C154093) *
                  C154163 +
              ((C2864 * C2846 + (C2858 + C2857 + C2856) * C2847 +
                (C2859 + C2860 + C2861) * C154130) *
                   C153783 * C154093 -
               (((C134 * C1343 + C1359 + C1359 + C153882 * C1353) * C154143 +
                 C419 * C154169 + C412 * C154181) *
                    C154130 +
                (C3649 + C3648 + C3647) * C2847 + C3650 * C2846) *
                   C153783 * C153819) *
                  C774)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C7055 * C136 + C7062 + C7062 + C154182 * C152 + C7057 * C556 +
             C7063 + C7063 + C154171 * C580 + C7059 * C557 + C7064 + C7064 +
             C154146 * C581) *
                C153865 * C2846 +
            (C7128 + C7129 + C7130) * C153865 * C2847 + C7144 * C154130) *
               C153783 * C154093 -
           (C7994 * C154130 + (C7439 + C7440 + C7441) * C153865 * C2847 +
            (C7059 * C1489 + C7382 + C7382 + C154146 * C1499 + C7057 * C1081 +
             C7383 + C7383 + C154171 * C1093 + C7055 * C335 + C7384 + C7384 +
             C154182 * C359) *
                C153865 * C2846) *
               C153783 * C153819) *
              C154162 +
          (((C7441 + C7440 + C7439) * C153865 * C2846 +
            (C7438 + C7437 + C7436) * C153865 * C2847 +
            (C7998 + C7999 + C8000) * C153865 * C154130) *
               C153783 * C153819 -
           (C7145 * C154130 + (C7133 + C7132 + C7131) * C153865 * C2847 +
            (C7130 + C7129 + C7128) * C153865 * C2846) *
               C153783 * C154093) *
              C154163 +
          ((C7144 * C2846 + (C7136 + C7135 + C7134) * C153865 * C2847 +
            (C7137 + C7138 + C7139) * C153865 * C154130) *
               C153783 * C154093 -
           ((C7059 * C1485 + C7987 + C7987 + C154146 * C1495 + C7057 * C1085 +
             C7988 + C7988 + C154171 * C1097 + C7055 * C331 + C7989 + C7989 +
             C154182 * C355) *
                C153865 * C154130 +
            (C8000 + C7999 + C7998) * C153865 * C2847 + C7994 * C2846) *
               C153783 * C153819) *
              C774)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C24168 +
             C3138 * C24169 + C3139 * C154143) *
                C154178 +
            (C24175 + C24176 + C24177) * C154159 + C24189 * C154130) *
               C153783 * C154093 -
           (C24873 * C154130 + (C24412 + C24413 + C24414) * C154159 +
            (C3142 * C154143 + C3139 * C24169 + C3138 * C24168) * C154178) *
               C153783 * C153819) *
              C154162 +
          (((C24414 + C24413 + C24412) * C154178 +
            (C24411 + C24410 + C24409) * C154159 +
            (C24870 + C24871 + C24872) * C154130) *
               C153783 * C153819 -
           (C24190 * C154130 + (C24180 + C24179 + C24178) * C154159 +
            (C24177 + C24176 + C24175) * C154178) *
               C153783 * C154093) *
              C154163 +
          ((C24189 * C154178 + (C24183 + C24182 + C24181) * C154159 +
            (C24184 + C24185 + C24186) * C154130) *
               C153783 * C154093 -
           (((C134 * C1343 + C1359 + C1359 + C153882 * C1353) * C154143 +
             C419 * C24169 + C412 * C24168) *
                C154130 +
            (C24872 + C24871 + C24870) * C154159 + C24873 * C154178) *
               C153783 * C153819) *
              C774)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C28090 +
            C3138 * C28091 + C3139 * C28092 + C3142 * C28093 + C4591 * C28094) *
               C153712 * C153783 * C154093 -
           (C28235 * C28094 + C4591 * C28093 + C3142 * C28092 + C3139 * C28091 +
            C3138 * C28090) *
               C153712 * C153783 * C153819) *
              C154162 +
          ((C415 * C28090 + C416 * C28091 + C3141 * C28092 + C3143 * C28093 +
            C28236 * C28094) *
               C153712 * C153783 * C153819 -
           (C3143 * C28094 + C3141 * C28093 + C416 * C28092 + C415 * C28091 +
            C193 * C28090) *
               C153712 * C153783 * C154093) *
              C154163 +
          ((C194 * C28090 + C414 * C28091 + C417 * C28092 + C3140 * C28093 +
            C3144 * C28094) *
               C153712 * C153783 * C154093 -
           ((C134 * C4574 + C4586 + C4586 + C153882 * C4580) * C28094 +
            C3144 * C28093 + C3140 * C28092 + C417 * C28091 + C414 * C28090) *
               C153712 * C153783 * C153819) *
              C774)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C7055 * C136 + C7062 + C7062 + C154182 * C152 + C7057 * C556 +
             C7063 + C7063 + C154171 * C580 + C7059 * C557 + C7064 + C7064 +
             C154146 * C581) *
                C24168 +
            (C30715 + C30716 + C30717) * C24169 + C30728 * C154143) *
               C153712 * C153783 * C154093 -
           ((C30721 + C30722 + C30723) * C154143 +
            (C30720 + C30719 + C30718) * C24169 +
            (C30717 + C30716 + C30715) * C24168) *
               C153712 * C153783 * C153819) *
              C154162 +
          (((C7441 + C7440 + C7439) * C24168 +
            (C7442 + C7443 + C7444) * C24169 +
            (C30724 + C30725 + C30726) * C154143) *
               C153712 * C153783 * C153819 -
           (C30702 * C154143 + (C7439 + C7440 + C7441) * C24169 +
            (C7130 + C7129 + C7128) * C24168) *
               C153712 * C153783 * C154093) *
              C154163 +
          ((C7142 * C24168 + (C7438 + C7437 + C7436) * C24169 +
            (C7445 + C7446 + C7447) * C154143) *
               C153712 * C153783 * C154093 -
           ((C7059 * C4809 + C8939 + C8939 + C154146 * C4815 + C7057 * C4170 +
             C8940 + C8940 + C154171 * C4178 + C7055 * C1345 + C8941 + C8941 +
             C154182 * C1355) *
                C154143 +
            (C7447 + C7446 + C7445) * C24169 + C7990 * C24168) *
               C153712 * C153783 * C153819) *
              C774)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C46971 * C136 + C46978 + C46978 + C46968 * C152 + C46973 * C556 +
             C46979 + C46979 + C46969 * C580 + C46975 * C557 + C46980 + C46980 +
             C154146 * C581) *
                C153865 * C154178 +
            (C47044 + C47045 + C47046) * C153865 * C154159 + C47060 * C154130) *
               C153783 * C154093 -
           (C47898 * C154130 + (C47355 + C47356 + C47357) * C153865 * C154159 +
            (C46975 * C1489 + C47298 + C47298 + C154146 * C1499 +
             C46973 * C1081 + C47299 + C47299 + C46969 * C1093 + C46971 * C335 +
             C47300 + C47300 + C46968 * C359) *
                C153865 * C154178) *
               C153783 * C153819) *
              C154162 +
          (((C47357 + C47356 + C47355) * C153865 * C154178 +
            (C47354 + C47353 + C47352) * C153865 * C154159 +
            (C47902 + C47903 + C47904) * C153865 * C154130) *
               C153783 * C153819 -
           (C47061 * C154130 + (C47049 + C47048 + C47047) * C153865 * C154159 +
            (C47046 + C47045 + C47044) * C153865 * C154178) *
               C153783 * C154093) *
              C154163 +
          ((C47060 * C154178 + (C47052 + C47051 + C47050) * C153865 * C154159 +
            (C47053 + C47054 + C47055) * C153865 * C154130) *
               C153783 * C154093 -
           ((C46975 * C1485 + C47891 + C47891 + C154146 * C1495 +
             C46973 * C1085 + C47892 + C47892 + C46969 * C1097 + C46971 * C331 +
             C47893 + C47893 + C46968 * C355) *
                C153865 * C154130 +
            (C47904 + C47903 + C47902) * C153865 * C154159 + C47898 * C154178) *
               C153783 * C153819) *
              C774)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C46971 * C136 + C46978 + C46978 + C46968 * C152 + C46973 * C556 +
             C46979 + C46979 + C46969 * C580 + C46975 * C557 + C46980 + C46980 +
             C154146 * C581) *
                C154181 +
            (C51548 + C51549 + C51550) * C154169 + C51561 * C154143) *
               C153712 * C153783 * C154093 -
           ((C51554 + C51555 + C51556) * C154143 +
            (C51553 + C51552 + C51551) * C154169 +
            (C51550 + C51549 + C51548) * C154181) *
               C153712 * C153783 * C153819) *
              C154162 +
          (((C47357 + C47356 + C47355) * C154181 +
            (C47358 + C47359 + C47360) * C154169 +
            (C51557 + C51558 + C51559) * C154143) *
               C153712 * C153783 * C153819 -
           (C51535 * C154143 + (C47355 + C47356 + C47357) * C154169 +
            (C47046 + C47045 + C47044) * C154181) *
               C153712 * C153783 * C154093) *
              C154163 +
          ((C47058 * C154181 + (C47354 + C47353 + C47352) * C154169 +
            (C47361 + C47362 + C47363) * C154143) *
               C153712 * C153783 * C154093 -
           ((C46975 * C4809 + C48840 + C48840 + C154146 * C4815 +
             C46973 * C4170 + C48841 + C48841 + C46969 * C4178 +
             C46971 * C1345 + C48842 + C48842 + C46968 * C1355) *
                C154143 +
            (C47363 + C47362 + C47361) * C154169 + C47894 * C154181) *
               C153712 * C153783 * C153819) *
              C774)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C55344 * C136 + C55355 + C55355 + C55339 * C152 + C55346 * C556 +
            C55356 + C55356 + C55340 * C580 + C55348 * C557 + C55357 + C55357 +
            C55341 * C581 + C55350 * C2272 + C55358 + C55358 + C55342 * C2282 +
            C55352 * C7665 + C55359 + C55359 + C55343 * C7673) *
               C153865 * C153712 * C153783 * C154093 -
           (C55352 * C9167 + C55497 + C55497 + C55343 * C9173 + C55350 * C6161 +
            C55498 + C55498 + C55342 * C6173 + C55348 * C1489 + C55499 +
            C55499 + C55341 * C1499 + C55346 * C1081 + C55500 + C55500 +
            C55340 * C1093 + C55344 * C335 + C55501 + C55501 + C55339 * C359) *
               C153865 * C153712 * C153783 * C153819) *
              C154162 +
          ((C55344 * C334 + C55507 + C55507 + C55339 * C358 + C55346 * C1082 +
            C55508 + C55508 + C55340 * C1094 + C55348 * C1488 + C55509 +
            C55509 + C55341 * C1498 + C55350 * C6159 + C55510 + C55510 +
            C55342 * C6171 + C55352 * C9166 + C55511 + C55511 +
            C55343 * C9172) *
               C153865 * C153712 * C153783 * C153819 -
           (C55352 * C7666 + C55360 + C55360 + C55343 * C7674 + C55350 * C2271 +
            C55361 + C55361 + C55342 * C2281 + C55348 * C558 + C55362 + C55362 +
            C55341 * C582 + C55346 * C555 + C55363 + C55363 + C55340 * C579 +
            C55344 * C137 + C55364 + C55364 + C55339 * C153) *
               C153865 * C153712 * C153783 * C154093) *
              C154163 +
          ((C55344 * C138 + C55365 + C55365 + C55339 * C154 + C55346 * C554 +
            C55366 + C55366 + C55340 * C578 + C55348 * C559 + C55367 + C55367 +
            C55341 * C583 + C55350 * C2270 + C55368 + C55368 + C55342 * C2280 +
            C55352 * C7667 + C55369 + C55369 + C55343 * C7675) *
               C153865 * C153712 * C153783 * C154093 -
           (C55352 * C9165 + C55787 + C55787 + C55343 * C9171 + C55350 * C6157 +
            C55788 + C55788 + C55342 * C6169 + C55348 * C1487 + C55789 +
            C55789 + C55341 * C1497 + C55346 * C1083 + C55790 + C55790 +
            C55340 * C1095 + C55344 * C333 + C55791 + C55791 + C55339 * C357) *
               C153865 * C153712 * C153783 * C153819) *
              C774)) /
            (p * q * std::sqrt(p + q));
    d2ee[181] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C134 * C136 + C161 + C161 + C153882 * C152) * C153865 * C123 +
                 C199 * C124 + C200 * C125 + C201 * C126 + C202 * C127) *
                    C154094 -
                (C641 * C127 + C642 * C126 + C643 * C125 + C644 * C124 +
                 (C134 * C556 + C601 + C601 + C153882 * C580) * C153865 *
                     C123) *
                    C153847) *
                   C154093 +
               (((C134 * C1081 + C1100 + C1100 + C153882 * C1093) * C153865 *
                     C123 +
                 C1126 * C124 + C1127 * C125 + C1128 * C126 + C1129 * C127) *
                    C153847 -
                (C420 * C127 + C421 * C126 + C422 * C125 + C423 * C124 +
                 (C134 * C335 + C380 + C380 + C153882 * C359) * C153865 *
                     C123) *
                    C154094) *
                   C153819) *
                  C329 +
              (((C644 * C123 + C643 * C124 + C642 * C125 + C641 * C126 +
                 C919 * C127) *
                    C153847 -
                (C203 * C127 + C202 * C126 + C201 * C125 + C200 * C124 +
                 C199 * C123) *
                    C154094) *
                   C154093 +
               ((C423 * C123 + C422 * C124 + C421 * C125 + C420 * C126 +
                 C785 * C127) *
                    C154094 -
                ((C134 * C1086 + C1113 + C1113 + C153882 * C1098) * C153865 *
                     C127 +
                 C1129 * C126 + C1128 * C125 + C1127 * C124 + C1126 * C123) *
                    C153847) *
                   C153819) *
                  C153754) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((((C134 * C136 + C161 + C161 + C153882 * C152) * C154181 +
                  C3138 * C154169 + C3139 * C154143) *
                     C2846 +
                 (C2850 + C2851 + C2852) * C2847 + C2864 * C154130) *
                    C154094 -
                (C3874 * C154130 + (C3423 + C3388 + C3389) * C2847 +
                 (C4205 * C154143 + C4206 * C154169 +
                  (C134 * C556 + C601 + C601 + C153882 * C580) * C154181) *
                     C2846) *
                    C153847) *
                   C154093 +
               (((C4206 * C154181 + C4205 * C154169 +
                  (C134 * C4168 + C4185 + C4185 + C153882 * C4176) * C154143) *
                     C2846 +
                 (C4186 + C4187 + C4209) * C2847 +
                 (C4191 + C4192 + C4210) * C154130) *
                    C153847 -
                (C3650 * C154130 + (C3147 + C3106 + C3107) * C2847 +
                 (C3142 * C154143 + C3139 * C154169 + C3138 * C154181) *
                     C2846) *
                    C154094) *
                   C153819) *
                  C329 +
              ((((C3389 + C3388 + C3423) * C2846 +
                 (C3385 + C3384 + C3422) * C2847 +
                 (C3870 + C3871 + C3878) * C154130) *
                    C153847 -
                (C2865 * C154130 + (C2855 + C2854 + C2853) * C2847 +
                 (C2852 + C2851 + C2850) * C2846) *
                    C154094) *
                   C154093 +
               (((C3107 + C3106 + C3147) * C2846 +
                 (C3103 + C3102 + C3146) * C2847 +
                 (C3647 + C3648 + C3649) * C154130) *
                    C154094 -
                (((C134 * C4171 + C4196 + C4196 + C153882 * C4179) * C154143 +
                  C3877 * C154169 + C1124 * C154181) *
                     C154130 +
                 (C4210 + C4192 + C4191) * C2847 +
                 (C4209 + C4187 + C4186) * C2846) *
                    C153847) *
                   C153819) *
                  C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C7055 * C136 + C7062 + C7062 + C154182 * C152 + C7057 * C556 +
              C7063 + C7063 + C154171 * C580 + C7059 * C557 + C7064 + C7064 +
              C154146 * C581) *
                 C153865 * C2846 +
             (C7128 + C7129 + C7130) * C153865 * C2847 + C7144 * C154130) *
                C154094 -
            (C8233 * C154130 + (C7753 + C7754 + C7755) * C153865 * C2847 +
             (C7059 * C2272 + C7696 + C7696 + C154146 * C2282 + C7057 * C557 +
              C7697 + C7697 + C154171 * C581 + C7055 * C556 + C7698 + C7698 +
              C154182 * C580) *
                 C153865 * C2846) *
                C153847) *
               C154093 +
           (((C7055 * C1081 + C8533 + C8533 + C154182 * C1093 + C7057 * C1489 +
              C8534 + C8534 + C154171 * C1499 + C7059 * C6161 + C8535 + C8535 +
              C154146 * C6173) *
                 C153865 * C2846 +
             (C8569 + C8570 + C8571) * C153865 * C2847 +
             (C8572 + C8573 + C8574) * C153865 * C154130) *
                C153847 -
            (C7994 * C154130 + (C7439 + C7440 + C7441) * C153865 * C2847 +
             (C7059 * C1489 + C7382 + C7382 + C154146 * C1499 + C7057 * C1081 +
              C7383 + C7383 + C154171 * C1093 + C7055 * C335 + C7384 + C7384 +
              C154182 * C359) *
                 C153865 * C2846) *
                C154094) *
               C153819) *
              C329 +
          ((((C7755 + C7754 + C7753) * C153865 * C2846 +
             (C7752 + C7751 + C7750) * C153865 * C2847 +
             (C8237 + C8238 + C8239) * C153865 * C154130) *
                C153847 -
            (C7145 * C154130 + (C7133 + C7132 + C7131) * C153865 * C2847 +
             (C7130 + C7129 + C7128) * C153865 * C2846) *
                C154094) *
               C154093 +
           (((C7441 + C7440 + C7439) * C153865 * C2846 +
             (C7438 + C7437 + C7436) * C153865 * C2847 +
             (C7998 + C7999 + C8000) * C153865 * C154130) *
                C154094 -
            ((C7059 * C8529 + C8554 + C8554 + C154146 * C8531 + C7057 * C1486 +
              C8555 + C8555 + C154171 * C1496 + C7055 * C1084 + C8556 + C8556 +
              C154182 * C1096) *
                 C153865 * C154130 +
             (C8574 + C8573 + C8572) * C153865 * C2847 +
             (C8571 + C8570 + C8569) * C153865 * C2846) *
                C153847) *
               C153819) *
              C153754)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C153882 * C152) * C24168 +
              C3138 * C24169 + C3139 * C154143) *
                 C154178 +
             (C24175 + C24176 + C24177) * C154159 + C24189 * C154130) *
                C154094 -
            (C25096 * C154130 + (C24642 + C24643 + C24644) * C154159 +
             (C4205 * C154143 + C4206 * C24169 +
              (C134 * C556 + C601 + C601 + C153882 * C580) * C24168) *
                 C154178) *
                C153847) *
               C154093 +
           (((C4206 * C24168 + C4205 * C24169 + C5574 * C154143) * C154178 +
             (C25387 + C25388 + C25389) * C154159 +
             (C25390 + C25391 + C25392) * C154130) *
                C153847 -
            (C24873 * C154130 + (C24412 + C24413 + C24414) * C154159 +
             (C3142 * C154143 + C3139 * C24169 + C3138 * C24168) * C154178) *
                C154094) *
               C153819) *
              C329 +
          ((((C24644 + C24643 + C24642) * C154178 +
             (C24641 + C24640 + C24639) * C154159 +
             (C25093 + C25094 + C25095) * C154130) *
                C153847 -
            (C24190 * C154130 + (C24180 + C24179 + C24178) * C154159 +
             (C24177 + C24176 + C24175) * C154178) *
                C154094) *
               C154093 +
           (((C24414 + C24413 + C24412) * C154178 +
             (C24411 + C24410 + C24409) * C154159 +
             (C24870 + C24871 + C24872) * C154130) *
                C154094 -
            (((C134 * C4171 + C4196 + C4196 + C153882 * C4179) * C154143 +
              C3877 * C24169 + C1124 * C24168) *
                 C154130 +
             (C25392 + C25391 + C25390) * C154159 +
             (C25389 + C25388 + C25387) * C154178) *
                C153847) *
               C153819) *
              C153754)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C28090 +
             C3138 * C28091 + C3139 * C28092 + C3142 * C28093 +
             C4591 * C28094) *
                C153712 * C154094 -
            (C28789 * C28094 + C5574 * C28093 + C4205 * C28092 +
             C4206 * C28091 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C28090) *
                C153712 * C153847) *
               C154093 +
           ((C4206 * C28090 + C4205 * C28091 + C5574 * C28092 +
             C28789 * C28093 +
             (C134 * C28772 + C28781 + C28781 + C153882 * C28776) * C28094) *
                C153712 * C153847 -
            (C28235 * C28094 + C4591 * C28093 + C3142 * C28092 +
             C3139 * C28091 + C3138 * C28090) *
                C153712 * C154094) *
               C153819) *
              C329 +
          (((C636 * C28090 + C1122 * C28091 + C3417 * C28092 + C4207 * C28093 +
             C28790 * C28094) *
                C153712 * C153847 -
            (C3143 * C28094 + C3141 * C28093 + C416 * C28092 + C415 * C28091 +
             C193 * C28090) *
                C153712 * C154094) *
               C154093 +
           ((C415 * C28090 + C416 * C28091 + C3141 * C28092 + C3143 * C28093 +
             C28236 * C28094) *
                C153712 * C154094 -
            ((C134 * C28773 + C28784 + C28784 + C153882 * C28777) * C28094 +
             C28790 * C28093 + C4207 * C28092 + C3417 * C28091 +
             C1122 * C28090) *
                C153712 * C153847) *
               C153819) *
              C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C7055 * C136 + C7062 + C7062 + C154182 * C152 + C7057 * C556 +
              C7063 + C7063 + C154171 * C580 + C7059 * C557 + C7064 + C7064 +
              C154146 * C581) *
                 C24168 +
             (C30715 + C30716 + C30717) * C24169 + C30728 * C154143) *
                C153712 * C154094 -
            ((C31730 + C31731 + C31732) * C154143 +
             (C31733 + C31734 + C31735) * C24169 +
             (C7059 * C2272 + C7696 + C7696 + C154146 * C2282 + C7057 * C557 +
              C7697 + C7697 + C154171 * C581 + C7055 * C556 + C7698 + C7698 +
              C154182 * C580) *
                 C24168) *
                C153712 * C153847) *
               C154093 +
           (((C31735 + C31734 + C31733) * C24168 +
             (C31732 + C31731 + C31730) * C24169 +
             (C7055 * C4168 + C31700 + C31700 + C154182 * C4176 +
              C7057 * C4811 + C31701 + C31701 + C154171 * C4817 +
              C7059 * C29881 + C31702 + C31702 + C154146 * C29885) *
                 C154143) *
                C153712 * C153847 -
            ((C30721 + C30722 + C30723) * C154143 +
             (C30720 + C30719 + C30718) * C24169 +
             (C30717 + C30716 + C30715) * C24168) *
                C153712 * C154094) *
               C153819) *
              C329 +
          ((((C7755 + C7754 + C7753) * C24168 +
             (C8569 + C8570 + C8571) * C24169 +
             (C31736 + C31737 + C31738) * C154143) *
                C153712 * C153847 -
            (C30702 * C154143 + (C7439 + C7440 + C7441) * C24169 +
             (C7130 + C7129 + C7128) * C24168) *
                C153712 * C154094) *
               C154093 +
           (((C7441 + C7440 + C7439) * C24168 +
             (C7442 + C7443 + C7444) * C24169 +
             (C30724 + C30725 + C30726) * C154143) *
                C153712 * C154094 -
            ((C7059 * C31684 + C31709 + C31709 + C154146 * C31686 +
              C7057 * C4810 + C31710 + C31710 + C154171 * C4816 +
              C7055 * C4169 + C31711 + C31711 + C154182 * C4177) *
                 C154143 +
             (C31738 + C31737 + C31736) * C24169 +
             (C8571 + C8570 + C8569) * C24168) *
                C153712 * C153847) *
               C153819) *
              C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C46971 * C136 + C46978 + C46978 + C46968 * C152 + C46973 * C556 +
              C46979 + C46979 + C46969 * C580 + C46975 * C557 + C46980 +
              C46980 + C154146 * C581) *
                 C153865 * C154178 +
             (C47044 + C47045 + C47046) * C153865 * C154159 +
             C47060 * C154130) *
                C154094 -
            (C48137 * C154130 + (C47657 + C47658 + C47659) * C153865 * C154159 +
             (C46975 * C2272 + C47600 + C47600 + C154146 * C2282 +
              C46973 * C557 + C47601 + C47601 + C46969 * C581 + C46971 * C556 +
              C47602 + C47602 + C46968 * C580) *
                 C153865 * C154178) *
                C153847) *
               C154093 +
           (((C46971 * C1081 + C48434 + C48434 + C46968 * C1093 +
              C46973 * C1489 + C48435 + C48435 + C46969 * C1499 +
              C46975 * C6161 + C48436 + C48436 + C154146 * C6173) *
                 C153865 * C154178 +
             (C48470 + C48471 + C48472) * C153865 * C154159 +
             (C48473 + C48474 + C48475) * C153865 * C154130) *
                C153847 -
            (C47898 * C154130 + (C47355 + C47356 + C47357) * C153865 * C154159 +
             (C46975 * C1489 + C47298 + C47298 + C154146 * C1499 +
              C46973 * C1081 + C47299 + C47299 + C46969 * C1093 +
              C46971 * C335 + C47300 + C47300 + C46968 * C359) *
                 C153865 * C154178) *
                C154094) *
               C153819) *
              C329 +
          ((((C47659 + C47658 + C47657) * C153865 * C154178 +
             (C47656 + C47655 + C47654) * C153865 * C154159 +
             (C48141 + C48142 + C48143) * C153865 * C154130) *
                C153847 -
            (C47061 * C154130 + (C47049 + C47048 + C47047) * C153865 * C154159 +
             (C47046 + C47045 + C47044) * C153865 * C154178) *
                C154094) *
               C154093 +
           (((C47357 + C47356 + C47355) * C153865 * C154178 +
             (C47354 + C47353 + C47352) * C153865 * C154159 +
             (C47902 + C47903 + C47904) * C153865 * C154130) *
                C154094 -
            ((C46975 * C8529 + C48455 + C48455 + C154146 * C8531 +
              C46973 * C1486 + C48456 + C48456 + C46969 * C1496 +
              C46971 * C1084 + C48457 + C48457 + C46968 * C1096) *
                 C153865 * C154130 +
             (C48475 + C48474 + C48473) * C153865 * C154159 +
             (C48472 + C48471 + C48470) * C153865 * C154178) *
                C153847) *
               C153819) *
              C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C46971 * C136 + C46978 + C46978 + C46968 * C152 + C46973 * C556 +
              C46979 + C46979 + C46969 * C580 + C46975 * C557 + C46980 +
              C46980 + C154146 * C581) *
                 C154181 +
             (C51548 + C51549 + C51550) * C154169 + C51561 * C154143) *
                C153712 * C154094 -
            ((C52554 + C52555 + C52556) * C154143 +
             (C52557 + C52558 + C52559) * C154169 +
             (C46975 * C2272 + C47600 + C47600 + C154146 * C2282 +
              C46973 * C557 + C47601 + C47601 + C46969 * C581 + C46971 * C556 +
              C47602 + C47602 + C46968 * C580) *
                 C154181) *
                C153712 * C153847) *
               C154093 +
           (((C52559 + C52558 + C52557) * C154181 +
             (C52556 + C52555 + C52554) * C154169 +
             (C46971 * C4168 + C52524 + C52524 + C46968 * C4176 +
              C46973 * C4811 + C52525 + C52525 + C46969 * C4817 +
              C46975 * C29881 + C52526 + C52526 + C154146 * C29885) *
                 C154143) *
                C153712 * C153847 -
            ((C51554 + C51555 + C51556) * C154143 +
             (C51553 + C51552 + C51551) * C154169 +
             (C51550 + C51549 + C51548) * C154181) *
                C153712 * C154094) *
               C153819) *
              C329 +
          ((((C47659 + C47658 + C47657) * C154181 +
             (C48470 + C48471 + C48472) * C154169 +
             (C52560 + C52561 + C52562) * C154143) *
                C153712 * C153847 -
            (C51535 * C154143 + (C47355 + C47356 + C47357) * C154169 +
             (C47046 + C47045 + C47044) * C154181) *
                C153712 * C154094) *
               C154093 +
           (((C47357 + C47356 + C47355) * C154181 +
             (C47358 + C47359 + C47360) * C154169 +
             (C51557 + C51558 + C51559) * C154143) *
                C153712 * C154094 -
            ((C46975 * C31684 + C52533 + C52533 + C154146 * C31686 +
              C46973 * C4810 + C52534 + C52534 + C46969 * C4816 +
              C46971 * C4169 + C52535 + C52535 + C46968 * C4177) *
                 C154143 +
             (C52562 + C52561 + C52560) * C154169 +
             (C48472 + C48471 + C48470) * C154181) *
                C153712 * C153847) *
               C153819) *
              C153754)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C55344 * C136 + C55355 + C55355 + C55339 * C152 + C55346 * C556 +
             C55356 + C55356 + C55340 * C580 + C55348 * C557 + C55357 + C55357 +
             C55341 * C581 + C55350 * C2272 + C55358 + C55358 + C55342 * C2282 +
             C55352 * C7665 + C55359 + C55359 + C55343 * C7673) *
                C153865 * C153712 * C154094 -
            (C55352 * C10502 + C55645 + C55645 + C55343 * C10508 +
             C55350 * C7665 + C55646 + C55646 + C55342 * C7673 +
             C55348 * C2272 + C55647 + C55647 + C55341 * C2282 + C55346 * C557 +
             C55648 + C55648 + C55340 * C581 + C55344 * C556 + C55649 + C55649 +
             C55339 * C580) *
                C153865 * C153712 * C153847) *
               C154093 +
           ((C55344 * C1081 + C56084 + C56084 + C55339 * C1093 +
             C55346 * C1489 + C56085 + C56085 + C55340 * C1499 +
             C55348 * C6161 + C56086 + C56086 + C55341 * C6173 +
             C55350 * C9167 + C56087 + C56087 + C55342 * C9173 +
             C55352 * C33705 + C56088 + C56088 + C55343 * C33709) *
                C153865 * C153712 * C153847 -
            (C55352 * C9167 + C55497 + C55497 + C55343 * C9173 +
             C55350 * C6161 + C55498 + C55498 + C55342 * C6173 +
             C55348 * C1489 + C55499 + C55499 + C55341 * C1499 +
             C55346 * C1081 + C55500 + C55500 + C55340 * C1093 + C55344 * C335 +
             C55501 + C55501 + C55339 * C359) *
                C153865 * C153712 * C154094) *
               C153819) *
              C329 +
          (((C55344 * C555 + C55655 + C55655 + C55339 * C579 + C55346 * C558 +
             C55656 + C55656 + C55340 * C582 + C55348 * C2271 + C55657 +
             C55657 + C55341 * C2281 + C55350 * C7666 + C55658 + C55658 +
             C55342 * C7674 + C55352 * C10501 + C55659 + C55659 +
             C55343 * C10507) *
                C153865 * C153712 * C153847 -
            (C55352 * C7666 + C55360 + C55360 + C55343 * C7674 +
             C55350 * C2271 + C55361 + C55361 + C55342 * C2281 + C55348 * C558 +
             C55362 + C55362 + C55341 * C582 + C55346 * C555 + C55363 + C55363 +
             C55340 * C579 + C55344 * C137 + C55364 + C55364 + C55339 * C153) *
                C153865 * C153712 * C154094) *
               C154093 +
           ((C55344 * C334 + C55507 + C55507 + C55339 * C358 + C55346 * C1082 +
             C55508 + C55508 + C55340 * C1094 + C55348 * C1488 + C55509 +
             C55509 + C55341 * C1498 + C55350 * C6159 + C55510 + C55510 +
             C55342 * C6171 + C55352 * C9166 + C55511 + C55511 +
             C55343 * C9172) *
                C153865 * C153712 * C154094 -
            (C55352 * C56080 + C56089 + C56089 + C55343 * C56082 +
             C55350 * C9166 + C56090 + C56090 + C55342 * C9172 +
             C55348 * C6159 + C56091 + C56091 + C55341 * C6171 +
             C55346 * C1488 + C56092 + C56092 + C55340 * C1498 +
             C55344 * C1082 + C56093 + C56093 + C55339 * C1094) *
                C153865 * C153712 * C153847) *
               C153819) *
              C153754)) /
            (p * q * std::sqrt(p + q));
    d2ee[182] +=
        (-0.25 * std::pow(Pi, 2.5) *
             (((C134 * C136 + C161 + C161 + C153882 * C152) * C153865 * C123 +
               C199 * C124 + C200 * C125 + C201 * C126 + C202 * C127) *
                  C153783 * C153767 * C130 -
              (C203 * C127 + C202 * C126 + C201 * C125 + C200 * C124 +
               C199 * C123) *
                  C153783 * C153767 * C131 +
              (C200 * C123 + C201 * C124 + C202 * C125 + C203 * C126 +
               C204 * C127) *
                  C153783 * C153767 * C132 -
              ((C134 * C143 + C180 + C180 + C153882 * C159) * C153865 * C127 +
               C204 * C126 + C203 * C125 + C202 * C124 + C201 * C123) *
                  C153783 * C153767 * C133) -
         0.25 * std::pow(Pi, 2.5) *
             ((((C134 * C136 + C161 + C161 + C153882 * C152) * C153865 * C123 +
                C199 * C124 + C200 * C125 + C201 * C126 + C202 * C127) *
                   C153783 * C326 -
               (C420 * C127 + C421 * C126 + C422 * C125 + C423 * C124 +
                (C134 * C335 + C380 + C380 + C153882 * C359) * C153865 * C123) *
                   C153783 * C327 +
               ((C134 * C336 + C381 + C381 + C153882 * C360) * C153865 * C123 +
                C424 * C124 + C425 * C125 + C426 * C126 + C427 * C127) *
                   C153783 * C328) *
                  C329 +
              ((C423 * C123 + C422 * C124 + C421 * C125 + C420 * C126 +
                (C134 * C341 + C394 + C394 + C153882 * C365) * C153865 * C127) *
                   C153783 * C327 -
               (C203 * C127 + C202 * C126 + C201 * C125 + C200 * C124 +
                C199 * C123) *
                   C153783 * C326 -
               ((C134 * C342 + C395 + C395 + C153882 * C366) * C153865 * C127 +
                C427 * C126 + C426 * C125 + C425 * C124 + C424 * C123) *
                   C153783 * C328) *
                  C153754) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C134 * C136 + C161 + C161 + C153882 * C152) * C153865 * C123 +
                C199 * C124 + C200 * C125 + C201 * C126 + C202 * C127) *
                   C549 -
               (C641 * C127 + C642 * C126 + C643 * C125 + C644 * C124 +
                (C134 * C556 + C601 + C601 + C153882 * C580) * C153865 * C123) *
                   C550 +
               ((C134 * C557 + C602 + C602 + C153882 * C581) * C153865 * C123 +
                C645 * C124 + C646 * C125 + C647 * C126 + C648 * C127) *
                   C551) *
                  C153767 * C329 +
              ((C644 * C123 + C643 * C124 + C642 * C125 + C641 * C126 +
                (C134 * C562 + C615 + C615 + C153882 * C586) * C153865 * C127) *
                   C550 -
               (C203 * C127 + C202 * C126 + C201 * C125 + C200 * C124 +
                C199 * C123) *
                   C549 -
               ((C134 * C563 + C616 + C616 + C153882 * C587) * C153865 * C127 +
                C648 * C126 + C647 * C125 + C646 * C124 + C645 * C123) *
                   C551) *
                  C153767 * C153754) -
         0.25 * std::pow(Pi, 2.5) *
             ((((C134 * C136 + C161 + C161 + C153882 * C152) * C154181 +
                (C134 * C335 + C380 + C380 + C153882 * C359) * C154169 +
                (C134 * C336 + C381 + C381 + C153882 * C360) * C154143) *
                   C2846 +
               (C2850 + C2851 + C2852) * C2847 + C2864 * C154130) *
                  C153783 * C153767 * C130 -
              (C2865 * C154130 + (C2855 + C2854 + C2853) * C2847 +
               (C2852 + C2851 + C2850) * C2846) *
                  C153783 * C153767 * C131 +
              (C2864 * C2846 + (C2858 + C2857 + C2856) * C2847 +
               (C2859 + C2860 + C2861) * C154130) *
                  C153783 * C153767 * C132 -
              (((C134 * C342 + C395 + C395 + C153882 * C366) * C154143 +
                C784 * C154169 + C197 * C154181) *
                   C154130 +
               (C2861 + C2860 + C2859) * C2847 + C2865 * C2846) *
                  C153783 * C153767 * C133) -
         0.25 * std::pow(Pi, 2.5) *
             (((((C134 * C136 + C161 + C161 + C153882 * C152) * C154181 +
                 C3138 * C154169 + C3139 * C154143) *
                    C2846 +
                (C2850 + C2851 + C2852) * C2847 + C2864 * C154130) *
                   C153783 * C326 -
               ((C3146 + C3102 + C3103) * C154130 +
                (C3147 + C3106 + C3107) * C2847 +
                (C3142 * C154143 + C3139 * C154169 + C3138 * C154181) * C2846) *
                   C153783 * C327 +
               ((C3139 * C154181 + C3142 * C154169 +
                 (C134 * C3083 + C3110 + C3110 + C153882 * C3091) * C154143) *
                    C2846 +
                (C3111 + C3148 + C3149) * C2847 +
                (C3115 + C3150 + C3151) * C154130) *
                   C153783 * C328) *
                  C329 +
              (((C3107 + C3106 + C3147) * C2846 +
                (C3103 + C3102 + C3146) * C2847 +
                (C413 * C154181 + C418 * C154169 + C3145 * C154143) * C154130) *
                   C153783 * C327 -
               (C2865 * C154130 + (C2855 + C2854 + C2853) * C2847 +
                (C2852 + C2851 + C2850) * C2846) *
                   C153783 * C326 -
               (((C134 * C3086 + C3121 + C3121 + C153882 * C3094) * C154143 +
                 C3145 * C154169 + C418 * C154181) *
                    C154130 +
                (C3151 + C3150 + C3115) * C2847 +
                (C3149 + C3148 + C3111) * C2846) *
                   C153783 * C328) *
                  C153754) +
         0.5 * std::pow(Pi, 2.5) *
             (((((C134 * C136 + C161 + C161 + C153882 * C152) * C154181 +
                 C3138 * C154169 + C3139 * C154143) *
                    C2846 +
                (C2850 + C2851 + C2852) * C2847 + C2864 * C154130) *
                   C549 -
               ((C3422 + C3384 + C3385) * C154130 +
                (C3423 + C3388 + C3389) * C2847 +
                ((C134 * C1920 + C1936 + C1936 + C153882 * C1930) * C154143 +
                 (C134 * C1081 + C1100 + C1100 + C153882 * C1093) * C154169 +
                 (C134 * C556 + C601 + C601 + C153882 * C580) * C154181) *
                    C2846) *
                   C550 +
               (((C134 * C557 + C602 + C602 + C153882 * C581) * C154181 +
                 (C134 * C1489 + C1505 + C1505 + C153882 * C1499) * C154169 +
                 (C134 * C3369 + C3390 + C3390 + C153882 * C3377) * C154143) *
                    C2846 +
                (C3391 + C3424 + C3425) * C2847 +
                (C3397 + C3426 + C3427) * C154130) *
                   C551) *
                  C153767 * C329 +
              (((C3389 + C3388 + C3423) * C2846 +
                (C3385 + C3384 + C3422) * C2847 +
                (C634 * C154181 + C1124 * C154169 +
                 (C134 * C1917 + C1933 + C1933 + C153882 * C1927) * C154143) *
                    C154130) *
                   C550 -
               (C2865 * C154130 + (C2855 + C2854 + C2853) * C2847 +
                (C2852 + C2851 + C2850) * C2846) *
                   C549 -
               (((C134 * C3372 + C3403 + C3403 + C153882 * C3380) * C154143 +
                 (C134 * C1486 + C1502 + C1502 + C153882 * C1496) * C154169 +
                 C639 * C154181) *
                    C154130 +
                (C3427 + C3426 + C3397) * C2847 +
                (C3425 + C3424 + C3391) * C2846) *
                   C551) *
                  C153767 * C153754) +
         0.5 * std::pow(Pi, 2.5) *
             (((C7055 * C136 + C7062 + C7062 + C154182 * C152 + C7057 * C556 +
                C7063 + C7063 + C154171 * C580 + C7059 * C557 + C7064 + C7064 +
                C154146 * C581) *
                   C153865 * C2846 +
               (C7128 + C7129 + C7130) * C153865 * C2847 + C7144 * C154130) *
                  C153783 * C153767 * C130 -
              (C7145 * C154130 + (C7133 + C7132 + C7131) * C153865 * C2847 +
               (C7130 + C7129 + C7128) * C153865 * C2846) *
                  C153783 * C153767 * C131 +
              (C7144 * C2846 + (C7136 + C7135 + C7134) * C153865 * C2847 +
               (C7137 + C7138 + C7139) * C153865 * C154130) *
                  C153783 * C153767 * C132 -
              ((C7059 * C563 + C7101 + C7101 + C154146 * C587 + C7057 * C562 +
                C7102 + C7102 + C154171 * C586 + C7055 * C141 + C7103 + C7103 +
                C154182 * C157) *
                   C153865 * C154130 +
               (C7139 + C7138 + C7137) * C153865 * C2847 + C7145 * C2846) *
                  C153783 * C153767 * C133) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C7055 * C136 + C7062 + C7062 + C154182 * C152 + C7057 * C556 +
                 C7063 + C7063 + C154171 * C580 + C7059 * C557 + C7064 + C7064 +
                 C154146 * C581) *
                    C153865 * C2846 +
                (C7128 + C7129 + C7130) * C153865 * C2847 + C7144 * C154130) *
                   C153783 * C326 -
               ((C7436 + C7437 + C7438) * C153865 * C154130 +
                (C7439 + C7440 + C7441) * C153865 * C2847 +
                (C7059 * C1489 + C7382 + C7382 + C154146 * C1499 +
                 C7057 * C1081 + C7383 + C7383 + C154171 * C1093 +
                 C7055 * C335 + C7384 + C7384 + C154182 * C359) *
                    C153865 * C2846) *
                   C153783 * C327 +
               ((C7055 * C336 + C7385 + C7385 + C154182 * C360 + C7057 * C1920 +
                 C7386 + C7386 + C154171 * C1930 + C7059 * C3369 + C7387 +
                 C7387 + C154146 * C3377) *
                    C153865 * C2846 +
                (C7442 + C7443 + C7444) * C153865 * C2847 +
                (C7445 + C7446 + C7447) * C153865 * C154130) *
                   C153783 * C328) *
                  C329 +
              (((C7441 + C7440 + C7439) * C153865 * C2846 +
                (C7438 + C7437 + C7436) * C153865 * C2847 +
                (C7055 * C332 + C7406 + C7406 + C154182 * C356 + C7057 * C1084 +
                 C7407 + C7407 + C154171 * C1096 + C7059 * C1486 + C7408 +
                 C7408 + C154146 * C1496) *
                    C153865 * C154130) *
                   C153783 * C327 -
               (C7145 * C154130 + (C7133 + C7132 + C7131) * C153865 * C2847 +
                (C7130 + C7129 + C7128) * C153865 * C2846) *
                   C153783 * C326 -
               ((C7059 * C3372 + C7409 + C7409 + C154146 * C3380 +
                 C7057 * C1917 + C7410 + C7410 + C154171 * C1927 +
                 C7055 * C339 + C7411 + C7411 + C154182 * C363) *
                    C153865 * C154130 +
                (C7447 + C7446 + C7445) * C153865 * C2847 +
                (C7444 + C7443 + C7442) * C153865 * C2846) *
                   C153783 * C328) *
                  C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C7055 * C136 + C7062 + C7062 + C154182 * C152 + C7057 * C556 +
             C7063 + C7063 + C154171 * C580 + C7059 * C557 + C7064 + C7064 +
             C154146 * C581) *
                C153865 * C2846 +
            (C7128 + C7129 + C7130) * C153865 * C2847 + C7144 * C154130) *
               C549 -
           ((C7750 + C7751 + C7752) * C153865 * C154130 +
            (C7753 + C7754 + C7755) * C153865 * C2847 +
            (C7059 * C2272 + C7696 + C7696 + C154146 * C2282 + C7057 * C557 +
             C7697 + C7697 + C154171 * C581 + C7055 * C556 + C7698 + C7698 +
             C154182 * C580) *
                C153865 * C2846) *
               C550 +
           ((C7055 * C557 + C7699 + C7699 + C154182 * C581 + C7057 * C2272 +
             C7700 + C7700 + C154171 * C2282 + C7059 * C7665 + C7701 + C7701 +
             C154146 * C7673) *
                C153865 * C2846 +
            (C7756 + C7757 + C7758) * C153865 * C2847 +
            (C7759 + C7760 + C7761) * C153865 * C154130) *
               C551) *
              C153767 * C329 +
          (((C7755 + C7754 + C7753) * C153865 * C2846 +
            (C7752 + C7751 + C7750) * C153865 * C2847 +
            (C7055 * C553 + C7720 + C7720 + C154182 * C577 + C7057 * C560 +
             C7721 + C7721 + C154171 * C584 + C7059 * C2269 + C7722 + C7722 +
             C154146 * C2279) *
                C153865 * C154130) *
               C550 -
           (C7145 * C154130 + (C7133 + C7132 + C7131) * C153865 * C2847 +
            (C7130 + C7129 + C7128) * C153865 * C2846) *
               C549 -
           ((C7059 * C7668 + C7723 + C7723 + C154146 * C7676 + C7057 * C2269 +
             C7724 + C7724 + C154171 * C2279 + C7055 * C560 + C7725 + C7725 +
             C154182 * C584) *
                C153865 * C154130 +
            (C7761 + C7760 + C7759) * C153865 * C2847 +
            (C7758 + C7757 + C7756) * C153865 * C2846) *
               C551) *
              C153767 * C153754)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C24168 +
            C3138 * C24169 + C3139 * C154143) *
               C154178 +
           (C24175 + C24176 + C24177) * C154159 + C24189 * C154130) *
              C153783 * C153767 * C130 -
          (C24190 * C154130 + (C24180 + C24179 + C24178) * C154159 +
           (C24177 + C24176 + C24175) * C154178) *
              C153783 * C153767 * C131 +
          (C24189 * C154178 + (C24183 + C24182 + C24181) * C154159 +
           (C24184 + C24185 + C24186) * C154130) *
              C153783 * C153767 * C132 -
          (((C134 * C342 + C395 + C395 + C153882 * C366) * C154143 +
            C784 * C24169 + C197 * C24168) *
               C154130 +
           (C24186 + C24185 + C24184) * C154159 + C24190 * C154178) *
              C153783 * C153767 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C24168 +
             C3138 * C24169 + C3139 * C154143) *
                C154178 +
            (C24175 + C24176 + C24177) * C154159 + C24189 * C154130) *
               C153783 * C326 -
           ((C24409 + C24410 + C24411) * C154130 +
            (C24412 + C24413 + C24414) * C154159 +
            (C3142 * C154143 + C3139 * C24169 + C3138 * C24168) * C154178) *
               C153783 * C327 +
           ((C3139 * C24168 + C3142 * C24169 + C4591 * C154143) * C154178 +
            (C24415 + C24416 + C24417) * C154159 +
            (C24418 + C24419 + C24420) * C154130) *
               C153783 * C328) *
              C329 +
          (((C24414 + C24413 + C24412) * C154178 +
            (C24411 + C24410 + C24409) * C154159 +
            (C413 * C24168 + C418 * C24169 + C3145 * C154143) * C154130) *
               C153783 * C327 -
           (C24190 * C154130 + (C24180 + C24179 + C24178) * C154159 +
            (C24177 + C24176 + C24175) * C154178) *
               C153783 * C326 -
           (((C134 * C3086 + C3121 + C3121 + C153882 * C3094) * C154143 +
             C3145 * C24169 + C418 * C24168) *
                C154130 +
            (C24420 + C24419 + C24418) * C154159 +
            (C24417 + C24416 + C24415) * C154178) *
               C153783 * C328) *
              C153754)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C24168 +
             C3138 * C24169 + C3139 * C154143) *
                C154178 +
            (C24175 + C24176 + C24177) * C154159 + C24189 * C154130) *
               C549 -
           ((C24639 + C24640 + C24641) * C154130 +
            (C24642 + C24643 + C24644) * C154159 +
            (C4205 * C154143 + C4206 * C24169 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C24168) *
                C154178) *
               C550 +
           (((C134 * C557 + C602 + C602 + C153882 * C581) * C24168 +
             C4830 * C24169 + C4831 * C154143) *
                C154178 +
            (C24645 + C24646 + C24647) * C154159 +
            (C24648 + C24649 + C24650) * C154130) *
               C551) *
              C153767 * C329 +
          (((C24644 + C24643 + C24642) * C154178 +
            (C24641 + C24640 + C24639) * C154159 +
            (C634 * C24168 + C1124 * C24169 + C3877 * C154143) * C154130) *
               C550 -
           (C24190 * C154130 + (C24180 + C24179 + C24178) * C154159 +
            (C24177 + C24176 + C24175) * C154178) *
               C549 -
           (((C134 * C3372 + C3403 + C3403 + C153882 * C3380) * C154143 +
             C11810 * C24169 + C639 * C24168) *
                C154130 +
            (C24650 + C24649 + C24648) * C154159 +
            (C24647 + C24646 + C24645) * C154178) *
               C551) *
              C153767 * C153754)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         (((C134 * C136 + C161 + C161 + C153882 * C152) * C28090 +
           C3138 * C28091 + C3139 * C28092 + C3142 * C28093 + C4591 * C28094) *
              C153712 * C153783 * C153767 * C130 -
          (C3143 * C28094 + C3141 * C28093 + C416 * C28092 + C415 * C28091 +
           C193 * C28090) *
              C153712 * C153783 * C153767 * C131 +
          (C194 * C28090 + C414 * C28091 + C417 * C28092 + C3140 * C28093 +
           C3144 * C28094) *
              C153712 * C153783 * C153767 * C132 -
          ((C134 * C3086 + C3121 + C3121 + C153882 * C3094) * C28094 +
           C3145 * C28093 + C418 * C28092 + C413 * C28091 + C195 * C28090) *
              C153712 * C153783 * C153767 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C28090 +
            C3138 * C28091 + C3139 * C28092 + C3142 * C28093 + C4591 * C28094) *
               C153712 * C153783 * C326 -
           (C28235 * C28094 + C4591 * C28093 + C3142 * C28092 + C3139 * C28091 +
            C3138 * C28090) *
               C153712 * C153783 * C327 +
           (C3139 * C28090 + C3142 * C28091 + C4591 * C28092 + C28235 * C28093 +
            (C134 * C28218 + C28227 + C28227 + C153882 * C28222) * C28094) *
               C153712 * C153783 * C328) *
              C329 +
          ((C415 * C28090 + C416 * C28091 + C3141 * C28092 + C3143 * C28093 +
            C28236 * C28094) *
               C153712 * C153783 * C327 -
           (C3143 * C28094 + C3141 * C28093 + C416 * C28092 + C415 * C28091 +
            C193 * C28090) *
               C153712 * C153783 * C326 -
           ((C134 * C28219 + C28230 + C28230 + C153882 * C28223) * C28094 +
            C28236 * C28093 + C3143 * C28092 + C3141 * C28091 + C416 * C28090) *
               C153712 * C153783 * C328) *
              C153754)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C28090 +
            C3138 * C28091 + C3139 * C28092 + C3142 * C28093 + C4591 * C28094) *
               C153712 * C549 -
           ((C134 * C5559 + C5571 + C5571 + C153882 * C5565) * C28094 +
            C5574 * C28093 + C4205 * C28092 + C4206 * C28091 +
            (C134 * C556 + C601 + C601 + C153882 * C580) * C28090) *
               C153712 * C550 +
           ((C134 * C557 + C602 + C602 + C153882 * C581) * C28090 +
            C4830 * C28091 + C4831 * C28092 +
            (C134 * C4811 + C4825 + C4825 + C153882 * C4817) * C28093 +
            (C134 * C28358 + C28365 + C28365 + C153882 * C28362) * C28094) *
               C153712 * C551) *
              C153767 * C329 +
          ((C636 * C28090 + C1122 * C28091 + C3417 * C28092 + C4207 * C28093 +
            (C134 * C5558 + C5570 + C5570 + C153882 * C5564) * C28094) *
               C153712 * C550 -
           (C3143 * C28094 + C3141 * C28093 + C416 * C28092 + C415 * C28091 +
            C193 * C28090) *
               C153712 * C549 -
           ((C134 * C28359 + C28366 + C28366 + C153882 * C28363) * C28094 +
            (C134 * C4810 + C4824 + C4824 + C153882 * C4816) * C28093 +
            C3419 * C28092 + C3418 * C28091 + C637 * C28090) *
               C153712 * C551) *
              C153767 * C153754)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C7055 * C136 + C7062 + C7062 + C154182 * C152 + C7057 * C556 +
            C7063 + C7063 + C154171 * C580 + C7059 * C557 + C7064 + C7064 +
            C154146 * C581) *
               C24168 +
           (C7055 * C335 + C7384 + C7384 + C154182 * C359 + C7057 * C1081 +
            C7383 + C7383 + C154171 * C1093 + C7059 * C1489 + C7382 + C7382 +
            C154146 * C1499) *
               C24169 +
           (C7055 * C336 + C7385 + C7385 + C154182 * C360 + C7057 * C1920 +
            C7386 + C7386 + C154171 * C1930 + C7059 * C3369 + C7387 + C7387 +
            C154146 * C3377) *
               C154143) *
              C153712 * C153783 * C153767 * C130 -
          ((C7444 + C7443 + C7442) * C154143 +
           (C7439 + C7440 + C7441) * C24169 +
           (C7130 + C7129 + C7128) * C24168) *
              C153712 * C153783 * C153767 * C131 +
          (C7142 * C24168 + (C7438 + C7437 + C7436) * C24169 +
           (C7445 + C7446 + C7447) * C154143) *
              C153712 * C153783 * C153767 * C132 -
          ((C7059 * C3372 + C7409 + C7409 + C154146 * C3380 + C7057 * C1917 +
            C7410 + C7410 + C154171 * C1927 + C7055 * C339 + C7411 + C7411 +
            C154182 * C363) *
               C154143 +
           (C8000 + C7999 + C7998) * C24169 + C7143 * C24168) *
              C153712 * C153783 * C153767 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C7055 * C136 + C7062 + C7062 + C154182 * C152 + C7057 * C556 +
             C7063 + C7063 + C154171 * C580 + C7059 * C557 + C7064 + C7064 +
             C154146 * C581) *
                C24168 +
            (C30715 + C30716 + C30717) * C24169 + C30728 * C154143) *
               C153712 * C153783 * C326 -
           ((C30721 + C30722 + C30723) * C154143 +
            (C30720 + C30719 + C30718) * C24169 +
            (C30717 + C30716 + C30715) * C24168) *
               C153712 * C153783 * C327 +
           (C30728 * C24168 + (C30723 + C30722 + C30721) * C24169 +
            (C7055 * C3083 + C30677 + C30677 + C154182 * C3091 + C7057 * C5559 +
             C30678 + C30678 + C154171 * C5565 + C7059 * C28358 + C30679 +
             C30679 + C154146 * C28362) *
                C154143) *
               C153712 * C153783 * C328) *
              C329 +
          (((C7441 + C7440 + C7439) * C24168 +
            (C7442 + C7443 + C7444) * C24169 +
            (C30724 + C30725 + C30726) * C154143) *
               C153712 * C153783 * C327 -
           (C30702 * C154143 + (C7439 + C7440 + C7441) * C24169 +
            (C7130 + C7129 + C7128) * C24168) *
               C153712 * C153783 * C326 -
           ((C7059 * C28359 + C30687 + C30687 + C154146 * C28363 +
             C7057 * C5558 + C30688 + C30688 + C154171 * C5564 + C7055 * C3084 +
             C30689 + C30689 + C154182 * C3092) *
                C154143 +
            (C30726 + C30725 + C30724) * C24169 + C30702 * C24168) *
               C153712 * C153783 * C328) *
              C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C7055 * C136 + C7062 + C7062 + C154182 * C152 + C7057 * C556 +
             C7063 + C7063 + C154171 * C580 + C7059 * C557 + C7064 + C7064 +
             C154146 * C581) *
                C24168 +
            (C30715 + C30716 + C30717) * C24169 + C30728 * C154143) *
               C153712 * C549 -
           ((C7059 * C6160 + C9916 + C9916 + C154146 * C6172 + C7057 * C3369 +
             C9917 + C9917 + C154171 * C3377 + C7055 * C1920 + C9918 + C9918 +
             C154182 * C1930) *
                C154143 +
            (C7059 * C6161 + C8535 + C8535 + C154146 * C6173 + C7057 * C1489 +
             C8534 + C8534 + C154171 * C1499 + C7055 * C1081 + C8533 + C8533 +
             C154182 * C1093) *
                C24169 +
            (C7059 * C2272 + C7696 + C7696 + C154146 * C2282 + C7057 * C557 +
             C7697 + C7697 + C154171 * C581 + C7055 * C556 + C7698 + C7698 +
             C154182 * C580) *
                C24168) *
               C153712 * C550 +
           ((C7055 * C557 + C7699 + C7699 + C154182 * C581 + C7057 * C2272 +
             C7700 + C7700 + C154171 * C2282 + C7059 * C7665 + C7701 + C7701 +
             C154146 * C7673) *
                C24168 +
            (C7055 * C1489 + C9183 + C9183 + C154182 * C1499 + C7057 * C6161 +
             C9182 + C9182 + C154171 * C6173 + C7059 * C9167 + C9181 + C9181 +
             C154146 * C9173) *
                C24169 +
            (C7055 * C3369 + C30953 + C30953 + C154182 * C3377 + C7057 * C6160 +
             C30954 + C30954 + C154171 * C6172 + C7059 * C30946 + C30955 +
             C30955 + C154146 * C30950) *
                C154143) *
               C153712 * C551) *
              C153767 * C329 +
          (((C7755 + C7754 + C7753) * C24168 +
            (C8569 + C8570 + C8571) * C24169 +
            (C7055 * C1919 + C9915 + C9915 + C154182 * C1929 + C7057 * C3370 +
             C9914 + C9914 + C154171 * C3378 + C7059 * C6158 + C9913 + C9913 +
             C154146 * C6170) *
                C154143) *
               C153712 * C550 -
           (C30702 * C154143 + (C7439 + C7440 + C7441) * C24169 +
            (C7130 + C7129 + C7128) * C24168) *
               C153712 * C549 -
           ((C7059 * C30947 + C30956 + C30956 + C154146 * C30951 +
             C7057 * C6158 + C30957 + C30957 + C154171 * C6170 + C7055 * C3370 +
             C30958 + C30958 + C154182 * C3378) *
                C154143 +
            (C7059 * C9166 + C9178 + C9178 + C154146 * C9172 + C7057 * C6159 +
             C9179 + C9179 + C154171 * C6171 + C7055 * C1488 + C9180 + C9180 +
             C154182 * C1498) *
                C24169 +
            (C7758 + C7757 + C7756) * C24168) *
               C153712 * C551) *
              C153767 * C153754)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C46971 * C136 + C46978 + C46978 + C46968 * C152 + C46973 * C556 +
            C46979 + C46979 + C46969 * C580 + C46975 * C557 + C46980 + C46980 +
            C154146 * C581) *
               C153865 * C154178 +
           (C47044 + C47045 + C47046) * C153865 * C154159 + C47060 * C154130) *
              C153783 * C153767 * C130 -
          (C47061 * C154130 + (C47049 + C47048 + C47047) * C153865 * C154159 +
           (C47046 + C47045 + C47044) * C153865 * C154178) *
              C153783 * C153767 * C131 +
          (C47060 * C154178 + (C47052 + C47051 + C47050) * C153865 * C154159 +
           (C47053 + C47054 + C47055) * C153865 * C154130) *
              C153783 * C153767 * C132 -
          ((C46975 * C563 + C47017 + C47017 + C154146 * C587 + C46973 * C562 +
            C47018 + C47018 + C46969 * C586 + C46971 * C141 + C47019 + C47019 +
            C46968 * C157) *
               C153865 * C154130 +
           (C47055 + C47054 + C47053) * C153865 * C154159 + C47061 * C154178) *
              C153783 * C153767 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C46971 * C136 + C46978 + C46978 + C46968 * C152 + C46973 * C556 +
             C46979 + C46979 + C46969 * C580 + C46975 * C557 + C46980 + C46980 +
             C154146 * C581) *
                C153865 * C154178 +
            (C47044 + C47045 + C47046) * C153865 * C154159 + C47060 * C154130) *
               C153783 * C326 -
           ((C47352 + C47353 + C47354) * C153865 * C154130 +
            (C47355 + C47356 + C47357) * C153865 * C154159 +
            (C46975 * C1489 + C47298 + C47298 + C154146 * C1499 +
             C46973 * C1081 + C47299 + C47299 + C46969 * C1093 + C46971 * C335 +
             C47300 + C47300 + C46968 * C359) *
                C153865 * C154178) *
               C153783 * C327 +
           ((C46971 * C336 + C47301 + C47301 + C46968 * C360 + C46973 * C1920 +
             C47302 + C47302 + C46969 * C1930 + C46975 * C3369 + C47303 +
             C47303 + C154146 * C3377) *
                C153865 * C154178 +
            (C47358 + C47359 + C47360) * C153865 * C154159 +
            (C47361 + C47362 + C47363) * C153865 * C154130) *
               C153783 * C328) *
              C329 +
          (((C47357 + C47356 + C47355) * C153865 * C154178 +
            (C47354 + C47353 + C47352) * C153865 * C154159 +
            (C46971 * C332 + C47322 + C47322 + C46968 * C356 + C46973 * C1084 +
             C47323 + C47323 + C46969 * C1096 + C46975 * C1486 + C47324 +
             C47324 + C154146 * C1496) *
                C153865 * C154130) *
               C153783 * C327 -
           (C47061 * C154130 + (C47049 + C47048 + C47047) * C153865 * C154159 +
            (C47046 + C47045 + C47044) * C153865 * C154178) *
               C153783 * C326 -
           ((C46975 * C3372 + C47325 + C47325 + C154146 * C3380 +
             C46973 * C1917 + C47326 + C47326 + C46969 * C1927 + C46971 * C339 +
             C47327 + C47327 + C46968 * C363) *
                C153865 * C154130 +
            (C47363 + C47362 + C47361) * C153865 * C154159 +
            (C47360 + C47359 + C47358) * C153865 * C154178) *
               C153783 * C328) *
              C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C46971 * C136 + C46978 + C46978 + C46968 * C152 + C46973 * C556 +
             C46979 + C46979 + C46969 * C580 + C46975 * C557 + C46980 + C46980 +
             C154146 * C581) *
                C153865 * C154178 +
            (C47044 + C47045 + C47046) * C153865 * C154159 + C47060 * C154130) *
               C549 -
           ((C47654 + C47655 + C47656) * C153865 * C154130 +
            (C47657 + C47658 + C47659) * C153865 * C154159 +
            (C46975 * C2272 + C47600 + C47600 + C154146 * C2282 +
             C46973 * C557 + C47601 + C47601 + C46969 * C581 + C46971 * C556 +
             C47602 + C47602 + C46968 * C580) *
                C153865 * C154178) *
               C550 +
           ((C46971 * C557 + C47603 + C47603 + C46968 * C581 + C46973 * C2272 +
             C47604 + C47604 + C46969 * C2282 + C46975 * C7665 + C47605 +
             C47605 + C154146 * C7673) *
                C153865 * C154178 +
            (C47660 + C47661 + C47662) * C153865 * C154159 +
            (C47663 + C47664 + C47665) * C153865 * C154130) *
               C551) *
              C153767 * C329 +
          (((C47659 + C47658 + C47657) * C153865 * C154178 +
            (C47656 + C47655 + C47654) * C153865 * C154159 +
            (C46971 * C553 + C47624 + C47624 + C46968 * C577 + C46973 * C560 +
             C47625 + C47625 + C46969 * C584 + C46975 * C2269 + C47626 +
             C47626 + C154146 * C2279) *
                C153865 * C154130) *
               C550 -
           (C47061 * C154130 + (C47049 + C47048 + C47047) * C153865 * C154159 +
            (C47046 + C47045 + C47044) * C153865 * C154178) *
               C549 -
           ((C46975 * C7668 + C47627 + C47627 + C154146 * C7676 +
             C46973 * C2269 + C47628 + C47628 + C46969 * C2279 + C46971 * C560 +
             C47629 + C47629 + C46968 * C584) *
                C153865 * C154130 +
            (C47665 + C47664 + C47663) * C153865 * C154159 +
            (C47662 + C47661 + C47660) * C153865 * C154178) *
               C551) *
              C153767 * C153754)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C46971 * C136 + C46978 + C46978 + C46968 * C152 + C46973 * C556 +
            C46979 + C46979 + C46969 * C580 + C46975 * C557 + C46980 + C46980 +
            C154146 * C581) *
               C154181 +
           (C46971 * C335 + C47300 + C47300 + C46968 * C359 + C46973 * C1081 +
            C47299 + C47299 + C46969 * C1093 + C46975 * C1489 + C47298 +
            C47298 + C154146 * C1499) *
               C154169 +
           (C46971 * C336 + C47301 + C47301 + C46968 * C360 + C46973 * C1920 +
            C47302 + C47302 + C46969 * C1930 + C46975 * C3369 + C47303 +
            C47303 + C154146 * C3377) *
               C154143) *
              C153712 * C153783 * C153767 * C130 -
          ((C47360 + C47359 + C47358) * C154143 +
           (C47355 + C47356 + C47357) * C154169 +
           (C47046 + C47045 + C47044) * C154181) *
              C153712 * C153783 * C153767 * C131 +
          (C47058 * C154181 + (C47354 + C47353 + C47352) * C154169 +
           (C47361 + C47362 + C47363) * C154143) *
              C153712 * C153783 * C153767 * C132 -
          ((C46975 * C3372 + C47325 + C47325 + C154146 * C3380 +
            C46973 * C1917 + C47326 + C47326 + C46969 * C1927 + C46971 * C339 +
            C47327 + C47327 + C46968 * C363) *
               C154143 +
           (C47904 + C47903 + C47902) * C154169 + C47059 * C154181) *
              C153712 * C153783 * C153767 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C46971 * C136 + C46978 + C46978 + C46968 * C152 + C46973 * C556 +
             C46979 + C46979 + C46969 * C580 + C46975 * C557 + C46980 + C46980 +
             C154146 * C581) *
                C154181 +
            (C51548 + C51549 + C51550) * C154169 + C51561 * C154143) *
               C153712 * C153783 * C326 -
           ((C51554 + C51555 + C51556) * C154143 +
            (C51553 + C51552 + C51551) * C154169 +
            (C51550 + C51549 + C51548) * C154181) *
               C153712 * C153783 * C327 +
           (C51561 * C154181 + (C51556 + C51555 + C51554) * C154169 +
            (C46971 * C3083 + C51510 + C51510 + C46968 * C3091 +
             C46973 * C5559 + C51511 + C51511 + C46969 * C5565 +
             C46975 * C28358 + C51512 + C51512 + C154146 * C28362) *
                C154143) *
               C153712 * C153783 * C328) *
              C329 +
          (((C47357 + C47356 + C47355) * C154181 +
            (C47358 + C47359 + C47360) * C154169 +
            (C51557 + C51558 + C51559) * C154143) *
               C153712 * C153783 * C327 -
           (C51535 * C154143 + (C47355 + C47356 + C47357) * C154169 +
            (C47046 + C47045 + C47044) * C154181) *
               C153712 * C153783 * C326 -
           ((C46975 * C28359 + C51520 + C51520 + C154146 * C28363 +
             C46973 * C5558 + C51521 + C51521 + C46969 * C5564 +
             C46971 * C3084 + C51522 + C51522 + C46968 * C3092) *
                C154143 +
            (C51559 + C51558 + C51557) * C154169 + C51535 * C154181) *
               C153712 * C153783 * C328) *
              C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C46971 * C136 + C46978 + C46978 + C46968 * C152 + C46973 * C556 +
             C46979 + C46979 + C46969 * C580 + C46975 * C557 + C46980 + C46980 +
             C154146 * C581) *
                C154181 +
            (C51548 + C51549 + C51550) * C154169 + C51561 * C154143) *
               C153712 * C549 -
           ((C46975 * C6160 + C49808 + C49808 + C154146 * C6172 +
             C46973 * C3369 + C49809 + C49809 + C46969 * C3377 +
             C46971 * C1920 + C49810 + C49810 + C46968 * C1930) *
                C154143 +
            (C46975 * C6161 + C48436 + C48436 + C154146 * C6173 +
             C46973 * C1489 + C48435 + C48435 + C46969 * C1499 +
             C46971 * C1081 + C48434 + C48434 + C46968 * C1093) *
                C154169 +
            (C46975 * C2272 + C47600 + C47600 + C154146 * C2282 +
             C46973 * C557 + C47601 + C47601 + C46969 * C581 + C46971 * C556 +
             C47602 + C47602 + C46968 * C580) *
                C154181) *
               C153712 * C550 +
           ((C46971 * C557 + C47603 + C47603 + C46968 * C581 + C46973 * C2272 +
             C47604 + C47604 + C46969 * C2282 + C46975 * C7665 + C47605 +
             C47605 + C154146 * C7673) *
                C154181 +
            (C46971 * C1489 + C49075 + C49075 + C46968 * C1499 +
             C46973 * C6161 + C49074 + C49074 + C46969 * C6173 +
             C46975 * C9167 + C49073 + C49073 + C154146 * C9173) *
                C154169 +
            (C46971 * C3369 + C51780 + C51780 + C46968 * C3377 +
             C46973 * C6160 + C51781 + C51781 + C46969 * C6172 +
             C46975 * C30946 + C51782 + C51782 + C154146 * C30950) *
                C154143) *
               C153712 * C551) *
              C153767 * C329 +
          (((C47659 + C47658 + C47657) * C154181 +
            (C48470 + C48471 + C48472) * C154169 +
            (C46971 * C1919 + C49807 + C49807 + C46968 * C1929 +
             C46973 * C3370 + C49806 + C49806 + C46969 * C3378 +
             C46975 * C6158 + C49805 + C49805 + C154146 * C6170) *
                C154143) *
               C153712 * C550 -
           (C51535 * C154143 + (C47355 + C47356 + C47357) * C154169 +
            (C47046 + C47045 + C47044) * C154181) *
               C153712 * C549 -
           ((C46975 * C30947 + C51783 + C51783 + C154146 * C30951 +
             C46973 * C6158 + C51784 + C51784 + C46969 * C6170 +
             C46971 * C3370 + C51785 + C51785 + C46968 * C3378) *
                C154143 +
            (C46975 * C9166 + C49070 + C49070 + C154146 * C9172 +
             C46973 * C6159 + C49071 + C49071 + C46969 * C6171 +
             C46971 * C1488 + C49072 + C49072 + C46968 * C1498) *
                C154169 +
            (C47662 + C47661 + C47660) * C154181) *
               C153712 * C551) *
              C153767 * C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((C55344 * C136 + C55355 + C55355 + C55339 * C152 + C55346 * C556 +
           C55356 + C55356 + C55340 * C580 + C55348 * C557 + C55357 + C55357 +
           C55341 * C581 + C55350 * C2272 + C55358 + C55358 + C55342 * C2282 +
           C55352 * C7665 + C55359 + C55359 + C55343 * C7673) *
              C153865 * C153712 * C153783 * C153767 * C130 -
          (C55352 * C7666 + C55360 + C55360 + C55343 * C7674 + C55350 * C2271 +
           C55361 + C55361 + C55342 * C2281 + C55348 * C558 + C55362 + C55362 +
           C55341 * C582 + C55346 * C555 + C55363 + C55363 + C55340 * C579 +
           C55344 * C137 + C55364 + C55364 + C55339 * C153) *
              C153865 * C153712 * C153783 * C153767 * C131 +
          (C55344 * C138 + C55365 + C55365 + C55339 * C154 + C55346 * C554 +
           C55366 + C55366 + C55340 * C578 + C55348 * C559 + C55367 + C55367 +
           C55341 * C583 + C55350 * C2270 + C55368 + C55368 + C55342 * C2280 +
           C55352 * C7667 + C55369 + C55369 + C55343 * C7675) *
              C153865 * C153712 * C153783 * C153767 * C132 -
          (C55352 * C7668 + C55370 + C55370 + C55343 * C7676 + C55350 * C2269 +
           C55371 + C55371 + C55342 * C2279 + C55348 * C560 + C55372 + C55372 +
           C55341 * C584 + C55346 * C553 + C55373 + C55373 + C55340 * C577 +
           C55344 * C139 + C55374 + C55374 + C55339 * C155) *
              C153865 * C153712 * C153783 * C153767 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C55344 * C136 + C55355 + C55355 + C55339 * C152 + C55346 * C556 +
            C55356 + C55356 + C55340 * C580 + C55348 * C557 + C55357 + C55357 +
            C55341 * C581 + C55350 * C2272 + C55358 + C55358 + C55342 * C2282 +
            C55352 * C7665 + C55359 + C55359 + C55343 * C7673) *
               C153865 * C153712 * C153783 * C326 -
           (C55352 * C9167 + C55497 + C55497 + C55343 * C9173 + C55350 * C6161 +
            C55498 + C55498 + C55342 * C6173 + C55348 * C1489 + C55499 +
            C55499 + C55341 * C1499 + C55346 * C1081 + C55500 + C55500 +
            C55340 * C1093 + C55344 * C335 + C55501 + C55501 + C55339 * C359) *
               C153865 * C153712 * C153783 * C327 +
           (C55344 * C336 + C55502 + C55502 + C55339 * C360 + C55346 * C1920 +
            C55503 + C55503 + C55340 * C1930 + C55348 * C3369 + C55504 +
            C55504 + C55341 * C3377 + C55350 * C6160 + C55505 + C55505 +
            C55342 * C6172 + C55352 * C30946 + C55506 + C55506 +
            C55343 * C30950) *
               C153865 * C153712 * C153783 * C328) *
              C329 +
          ((C55344 * C334 + C55507 + C55507 + C55339 * C358 + C55346 * C1082 +
            C55508 + C55508 + C55340 * C1094 + C55348 * C1488 + C55509 +
            C55509 + C55341 * C1498 + C55350 * C6159 + C55510 + C55510 +
            C55342 * C6171 + C55352 * C9166 + C55511 + C55511 +
            C55343 * C9172) *
               C153865 * C153712 * C153783 * C327 -
           (C55352 * C7666 + C55360 + C55360 + C55343 * C7674 + C55350 * C2271 +
            C55361 + C55361 + C55342 * C2281 + C55348 * C558 + C55362 + C55362 +
            C55341 * C582 + C55346 * C555 + C55363 + C55363 + C55340 * C579 +
            C55344 * C137 + C55364 + C55364 + C55339 * C153) *
               C153865 * C153712 * C153783 * C326 -
           (C55352 * C30947 + C55512 + C55512 + C55343 * C30951 +
            C55350 * C6158 + C55513 + C55513 + C55342 * C6170 + C55348 * C3370 +
            C55514 + C55514 + C55341 * C3378 + C55346 * C1919 + C55515 +
            C55515 + C55340 * C1929 + C55344 * C337 + C55516 + C55516 +
            C55339 * C361) *
               C153865 * C153712 * C153783 * C328) *
              C153754)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C55344 * C136 + C55355 + C55355 + C55339 * C152 + C55346 * C556 +
            C55356 + C55356 + C55340 * C580 + C55348 * C557 + C55357 + C55357 +
            C55341 * C581 + C55350 * C2272 + C55358 + C55358 + C55342 * C2282 +
            C55352 * C7665 + C55359 + C55359 + C55343 * C7673) *
               C153865 * C153712 * C549 -
           (C55352 * C10502 + C55645 + C55645 + C55343 * C10508 +
            C55350 * C7665 + C55646 + C55646 + C55342 * C7673 + C55348 * C2272 +
            C55647 + C55647 + C55341 * C2282 + C55346 * C557 + C55648 + C55648 +
            C55340 * C581 + C55344 * C556 + C55649 + C55649 + C55339 * C580) *
               C153865 * C153712 * C550 +
           (C55344 * C557 + C55650 + C55650 + C55339 * C581 + C55346 * C2272 +
            C55651 + C55651 + C55340 * C2282 + C55348 * C7665 + C55652 +
            C55652 + C55341 * C7673 + C55350 * C10502 + C55653 + C55653 +
            C55342 * C10508 + C55352 * C55638 + C55654 + C55654 +
            C55343 * C55642) *
               C153865 * C153712 * C551) *
              C153767 * C329 +
          ((C55344 * C555 + C55655 + C55655 + C55339 * C579 + C55346 * C558 +
            C55656 + C55656 + C55340 * C582 + C55348 * C2271 + C55657 + C55657 +
            C55341 * C2281 + C55350 * C7666 + C55658 + C55658 + C55342 * C7674 +
            C55352 * C10501 + C55659 + C55659 + C55343 * C10507) *
               C153865 * C153712 * C550 -
           (C55352 * C7666 + C55360 + C55360 + C55343 * C7674 + C55350 * C2271 +
            C55361 + C55361 + C55342 * C2281 + C55348 * C558 + C55362 + C55362 +
            C55341 * C582 + C55346 * C555 + C55363 + C55363 + C55340 * C579 +
            C55344 * C137 + C55364 + C55364 + C55339 * C153) *
               C153865 * C153712 * C549 -
           (C55352 * C55639 + C55660 + C55660 + C55343 * C55643 +
            C55350 * C10501 + C55661 + C55661 + C55342 * C10507 +
            C55348 * C7666 + C55662 + C55662 + C55341 * C7674 + C55346 * C2271 +
            C55663 + C55663 + C55340 * C2281 + C55344 * C558 + C55664 + C55664 +
            C55339 * C582) *
               C153865 * C153712 * C551) *
              C153767 * C153754)) /
            (p * q * std::sqrt(p + q));
    d2ee[183] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C136 + C161 + C161 + C153882 * C152) * C153865 * C123 +
                C199 * C124 + C200 * C125 + C201 * C126 + C202 * C127) *
                   C154094 -
               (C641 * C127 + C642 * C126 + C643 * C125 + C644 * C124 +
                (C134 * C556 + C601 + C601 + C153882 * C580) * C153865 * C123) *
                   C153847) *
                  C153767 * C154162 +
              ((C644 * C123 + C643 * C124 + C642 * C125 + C641 * C126 +
                C919 * C127) *
                   C153847 -
               (C203 * C127 + C202 * C126 + C201 * C125 + C200 * C124 +
                C199 * C123) *
                   C154094) *
                  C153767 * C154163 +
              ((C200 * C123 + C201 * C124 + C202 * C125 + C203 * C126 +
                C204 * C127) *
                   C154094 -
               ((C134 * C909 + C915 + C915 + C153882 * C911) * C153865 * C127 +
                C919 * C126 + C641 * C125 + C642 * C124 + C643 * C123) *
                   C153847) *
                  C153767 * C774) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C134 * C136 + C161 + C161 + C153882 * C152) * C154181 +
                 C3138 * C154169 + C3139 * C154143) *
                    C2846 +
                (C2850 + C2851 + C2852) * C2847 + C2864 * C154130) *
                   C154094 -
               (C3874 * C154130 + (C3423 + C3388 + C3389) * C2847 +
                ((C134 * C1920 + C1936 + C1936 + C153882 * C1930) * C154143 +
                 (C134 * C1081 + C1100 + C1100 + C153882 * C1093) * C154169 +
                 (C134 * C556 + C601 + C601 + C153882 * C580) * C154181) *
                    C2846) *
                   C153847) *
                  C153767 * C154162 +
              (((C3389 + C3388 + C3423) * C2846 +
                (C3385 + C3384 + C3422) * C2847 +
                (C3870 + C3871 + C3878) * C154130) *
                   C153847 -
               (C2865 * C154130 + (C2855 + C2854 + C2853) * C2847 +
                (C2852 + C2851 + C2850) * C2846) *
                   C154094) *
                  C153767 * C154163 +
              ((C2864 * C2846 + (C2858 + C2857 + C2856) * C2847 +
                (C2859 + C2860 + C2861) * C154130) *
                   C154094 -
               (((C134 * C1916 + C1932 + C1932 + C153882 * C1926) * C154143 +
                 C1125 * C154169 + C633 * C154181) *
                    C154130 +
                (C3878 + C3871 + C3870) * C2847 + C3874 * C2846) *
                   C153847) *
                  C153767 * C774)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C7055 * C136 + C7062 + C7062 + C154182 * C152 + C7057 * C556 +
             C7063 + C7063 + C154171 * C580 + C7059 * C557 + C7064 + C7064 +
             C154146 * C581) *
                C153865 * C2846 +
            (C7128 + C7129 + C7130) * C153865 * C2847 + C7144 * C154130) *
               C154094 -
           (C8233 * C154130 + (C7753 + C7754 + C7755) * C153865 * C2847 +
            (C7059 * C2272 + C7696 + C7696 + C154146 * C2282 + C7057 * C557 +
             C7697 + C7697 + C154171 * C581 + C7055 * C556 + C7698 + C7698 +
             C154182 * C580) *
                C153865 * C2846) *
               C153847) *
              C153767 * C154162 +
          (((C7755 + C7754 + C7753) * C153865 * C2846 +
            (C7752 + C7751 + C7750) * C153865 * C2847 +
            (C8237 + C8238 + C8239) * C153865 * C154130) *
               C153847 -
           (C7145 * C154130 + (C7133 + C7132 + C7131) * C153865 * C2847 +
            (C7130 + C7129 + C7128) * C153865 * C2846) *
               C154094) *
              C153767 * C154163 +
          ((C7144 * C2846 + (C7136 + C7135 + C7134) * C153865 * C2847 +
            (C7137 + C7138 + C7139) * C153865 * C154130) *
               C154094 -
           ((C7059 * C2268 + C8226 + C8226 + C154146 * C2278 + C7057 * C561 +
             C8227 + C8227 + C154171 * C585 + C7055 * C552 + C8228 + C8228 +
             C154182 * C576) *
                C153865 * C154130 +
            (C8239 + C8238 + C8237) * C153865 * C2847 + C8233 * C2846) *
               C153847) *
              C153767 * C774)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C24168 +
             C3138 * C24169 + C3139 * C154143) *
                C154178 +
            (C24175 + C24176 + C24177) * C154159 + C24189 * C154130) *
               C154094 -
           (C25096 * C154130 + (C24642 + C24643 + C24644) * C154159 +
            (C4205 * C154143 + C4206 * C24169 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C24168) *
                C154178) *
               C153847) *
              C153767 * C154162 +
          (((C24644 + C24643 + C24642) * C154178 +
            (C24641 + C24640 + C24639) * C154159 +
            (C25093 + C25094 + C25095) * C154130) *
               C153847 -
           (C24190 * C154130 + (C24180 + C24179 + C24178) * C154159 +
            (C24177 + C24176 + C24175) * C154178) *
               C154094) *
              C153767 * C154163 +
          ((C24189 * C154178 + (C24183 + C24182 + C24181) * C154159 +
            (C24184 + C24185 + C24186) * C154130) *
               C154094 -
           (((C134 * C1916 + C1932 + C1932 + C153882 * C1926) * C154143 +
             C1125 * C24169 + C633 * C24168) *
                C154130 +
            (C25095 + C25094 + C25093) * C154159 + C25096 * C154178) *
               C153847) *
              C153767 * C774)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C28090 +
            C3138 * C28091 + C3139 * C28092 + C3142 * C28093 + C4591 * C28094) *
               C153712 * C154094 -
           ((C134 * C5559 + C5571 + C5571 + C153882 * C5565) * C28094 +
            C5574 * C28093 + C4205 * C28092 + C4206 * C28091 +
            (C134 * C556 + C601 + C601 + C153882 * C580) * C28090) *
               C153712 * C153847) *
              C153767 * C154162 +
          ((C636 * C28090 + C1122 * C28091 + C3417 * C28092 + C4207 * C28093 +
            (C134 * C5558 + C5570 + C5570 + C153882 * C5564) * C28094) *
               C153712 * C153847 -
           (C3143 * C28094 + C3141 * C28093 + C416 * C28092 + C415 * C28091 +
            C193 * C28090) *
               C153712 * C154094) *
              C153767 * C154163 +
          ((C194 * C28090 + C414 * C28091 + C417 * C28092 + C3140 * C28093 +
            C3144 * C28094) *
               C153712 * C154094 -
           ((C134 * C5557 + C5569 + C5569 + C153882 * C5563) * C28094 +
            C4208 * C28093 + C3416 * C28092 + C1123 * C28091 + C635 * C28090) *
               C153712 * C153847) *
              C153767 * C774)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C7055 * C136 + C7062 + C7062 + C154182 * C152 + C7057 * C556 +
             C7063 + C7063 + C154171 * C580 + C7059 * C557 + C7064 + C7064 +
             C154146 * C581) *
                C24168 +
            (C30715 + C30716 + C30717) * C24169 + C30728 * C154143) *
               C153712 * C154094 -
           ((C7059 * C6160 + C9916 + C9916 + C154146 * C6172 + C7057 * C3369 +
             C9917 + C9917 + C154171 * C3377 + C7055 * C1920 + C9918 + C9918 +
             C154182 * C1930) *
                C154143 +
            (C7059 * C6161 + C8535 + C8535 + C154146 * C6173 + C7057 * C1489 +
             C8534 + C8534 + C154171 * C1499 + C7055 * C1081 + C8533 + C8533 +
             C154182 * C1093) *
                C24169 +
            (C7059 * C2272 + C7696 + C7696 + C154146 * C2282 + C7057 * C557 +
             C7697 + C7697 + C154171 * C581 + C7055 * C556 + C7698 + C7698 +
             C154182 * C580) *
                C24168) *
               C153712 * C153847) *
              C153767 * C154162 +
          (((C7755 + C7754 + C7753) * C24168 +
            (C8569 + C8570 + C8571) * C24169 +
            (C7055 * C1919 + C9915 + C9915 + C154182 * C1929 + C7057 * C3370 +
             C9914 + C9914 + C154171 * C3378 + C7059 * C6158 + C9913 + C9913 +
             C154146 * C6170) *
                C154143) *
               C153712 * C153847 -
           (C30702 * C154143 + (C7439 + C7440 + C7441) * C24169 +
            (C7130 + C7129 + C7128) * C24168) *
               C153712 * C154094) *
              C153767 * C154163 +
          ((C7142 * C24168 + (C7438 + C7437 + C7436) * C24169 +
            (C7445 + C7446 + C7447) * C154143) *
               C153712 * C154094 -
           ((C7059 * C6156 + C9910 + C9910 + C154146 * C6168 + C7057 * C3371 +
             C9911 + C9911 + C154171 * C3379 + C7055 * C1918 + C9912 + C9912 +
             C154182 * C1928) *
                C154143 +
            (C8574 + C8573 + C8572) * C24169 + C8229 * C24168) *
               C153712 * C153847) *
              C153767 * C774)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C46971 * C136 + C46978 + C46978 + C46968 * C152 + C46973 * C556 +
             C46979 + C46979 + C46969 * C580 + C46975 * C557 + C46980 + C46980 +
             C154146 * C581) *
                C153865 * C154178 +
            (C47044 + C47045 + C47046) * C153865 * C154159 + C47060 * C154130) *
               C154094 -
           (C48137 * C154130 + (C47657 + C47658 + C47659) * C153865 * C154159 +
            (C46975 * C2272 + C47600 + C47600 + C154146 * C2282 +
             C46973 * C557 + C47601 + C47601 + C46969 * C581 + C46971 * C556 +
             C47602 + C47602 + C46968 * C580) *
                C153865 * C154178) *
               C153847) *
              C153767 * C154162 +
          (((C47659 + C47658 + C47657) * C153865 * C154178 +
            (C47656 + C47655 + C47654) * C153865 * C154159 +
            (C48141 + C48142 + C48143) * C153865 * C154130) *
               C153847 -
           (C47061 * C154130 + (C47049 + C47048 + C47047) * C153865 * C154159 +
            (C47046 + C47045 + C47044) * C153865 * C154178) *
               C154094) *
              C153767 * C154163 +
          ((C47060 * C154178 + (C47052 + C47051 + C47050) * C153865 * C154159 +
            (C47053 + C47054 + C47055) * C153865 * C154130) *
               C154094 -
           ((C46975 * C2268 + C48130 + C48130 + C154146 * C2278 +
             C46973 * C561 + C48131 + C48131 + C46969 * C585 + C46971 * C552 +
             C48132 + C48132 + C46968 * C576) *
                C153865 * C154130 +
            (C48143 + C48142 + C48141) * C153865 * C154159 + C48137 * C154178) *
               C153847) *
              C153767 * C774)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C46971 * C136 + C46978 + C46978 + C46968 * C152 + C46973 * C556 +
             C46979 + C46979 + C46969 * C580 + C46975 * C557 + C46980 + C46980 +
             C154146 * C581) *
                C154181 +
            (C51548 + C51549 + C51550) * C154169 + C51561 * C154143) *
               C153712 * C154094 -
           ((C46975 * C6160 + C49808 + C49808 + C154146 * C6172 +
             C46973 * C3369 + C49809 + C49809 + C46969 * C3377 +
             C46971 * C1920 + C49810 + C49810 + C46968 * C1930) *
                C154143 +
            (C46975 * C6161 + C48436 + C48436 + C154146 * C6173 +
             C46973 * C1489 + C48435 + C48435 + C46969 * C1499 +
             C46971 * C1081 + C48434 + C48434 + C46968 * C1093) *
                C154169 +
            (C46975 * C2272 + C47600 + C47600 + C154146 * C2282 +
             C46973 * C557 + C47601 + C47601 + C46969 * C581 + C46971 * C556 +
             C47602 + C47602 + C46968 * C580) *
                C154181) *
               C153712 * C153847) *
              C153767 * C154162 +
          (((C47659 + C47658 + C47657) * C154181 +
            (C48470 + C48471 + C48472) * C154169 +
            (C46971 * C1919 + C49807 + C49807 + C46968 * C1929 +
             C46973 * C3370 + C49806 + C49806 + C46969 * C3378 +
             C46975 * C6158 + C49805 + C49805 + C154146 * C6170) *
                C154143) *
               C153712 * C153847 -
           (C51535 * C154143 + (C47355 + C47356 + C47357) * C154169 +
            (C47046 + C47045 + C47044) * C154181) *
               C153712 * C154094) *
              C153767 * C154163 +
          ((C47058 * C154181 + (C47354 + C47353 + C47352) * C154169 +
            (C47361 + C47362 + C47363) * C154143) *
               C153712 * C154094 -
           ((C46975 * C6156 + C49802 + C49802 + C154146 * C6168 +
             C46973 * C3371 + C49803 + C49803 + C46969 * C3379 +
             C46971 * C1918 + C49804 + C49804 + C46968 * C1928) *
                C154143 +
            (C48475 + C48474 + C48473) * C154169 + C48133 * C154181) *
               C153712 * C153847) *
              C153767 * C774)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C55344 * C136 + C55355 + C55355 + C55339 * C152 + C55346 * C556 +
            C55356 + C55356 + C55340 * C580 + C55348 * C557 + C55357 + C55357 +
            C55341 * C581 + C55350 * C2272 + C55358 + C55358 + C55342 * C2282 +
            C55352 * C7665 + C55359 + C55359 + C55343 * C7673) *
               C153865 * C153712 * C154094 -
           (C55352 * C10502 + C55645 + C55645 + C55343 * C10508 +
            C55350 * C7665 + C55646 + C55646 + C55342 * C7673 + C55348 * C2272 +
            C55647 + C55647 + C55341 * C2282 + C55346 * C557 + C55648 + C55648 +
            C55340 * C581 + C55344 * C556 + C55649 + C55649 + C55339 * C580) *
               C153865 * C153712 * C153847) *
              C153767 * C154162 +
          ((C55344 * C555 + C55655 + C55655 + C55339 * C579 + C55346 * C558 +
            C55656 + C55656 + C55340 * C582 + C55348 * C2271 + C55657 + C55657 +
            C55341 * C2281 + C55350 * C7666 + C55658 + C55658 + C55342 * C7674 +
            C55352 * C10501 + C55659 + C55659 + C55343 * C10507) *
               C153865 * C153712 * C153847 -
           (C55352 * C7666 + C55360 + C55360 + C55343 * C7674 + C55350 * C2271 +
            C55361 + C55361 + C55342 * C2281 + C55348 * C558 + C55362 + C55362 +
            C55341 * C582 + C55346 * C555 + C55363 + C55363 + C55340 * C579 +
            C55344 * C137 + C55364 + C55364 + C55339 * C153) *
               C153865 * C153712 * C154094) *
              C153767 * C154163 +
          ((C55344 * C138 + C55365 + C55365 + C55339 * C154 + C55346 * C554 +
            C55366 + C55366 + C55340 * C578 + C55348 * C559 + C55367 + C55367 +
            C55341 * C583 + C55350 * C2270 + C55368 + C55368 + C55342 * C2280 +
            C55352 * C7667 + C55369 + C55369 + C55343 * C7675) *
               C153865 * C153712 * C154094 -
           (C55352 * C10500 + C55914 + C55914 + C55343 * C10506 +
            C55350 * C7667 + C55915 + C55915 + C55342 * C7675 + C55348 * C2270 +
            C55916 + C55916 + C55341 * C2280 + C55346 * C559 + C55917 + C55917 +
            C55340 * C583 + C55344 * C554 + C55918 + C55918 + C55339 * C578) *
               C153865 * C153712 * C153847) *
              C153767 * C774)) /
            (p * q * std::sqrt(p + q));
    d2ee[184] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C136 + C161 + C161 + C153882 * C152) * C153865 * C123 +
           C199 * C124 + C200 * C125 + C201 * C126 + C202 * C127) *
              C153783 * C153767 * C130 -
          (C203 * C127 + C202 * C126 + C201 * C125 + C200 * C124 +
           C199 * C123) *
              C153783 * C153767 * C131 +
          (C200 * C123 + C201 * C124 + C202 * C125 + C203 * C126 +
           C204 * C127) *
              C153783 * C153767 * C132 -
          ((C134 * C143 + C180 + C180 + C153882 * C159) * C153865 * C127 +
           C204 * C126 + C203 * C125 + C202 * C124 + C201 * C123) *
              C153783 * C153767 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C153865 * C123 +
            C199 * C124 + C200 * C125 + C201 * C126 + C202 * C127) *
               C153783 * C326 -
           (C420 * C127 + C421 * C126 + C422 * C125 + C423 * C124 +
            (C134 * C335 + C380 + C380 + C153882 * C359) * C153865 * C123) *
               C153783 * C327 +
           ((C134 * C336 + C381 + C381 + C153882 * C360) * C153865 * C123 +
            C424 * C124 + C425 * C125 + C426 * C126 + C427 * C127) *
               C153783 * C328) *
              C329 +
          ((C423 * C123 + C422 * C124 + C421 * C125 + C420 * C126 +
            (C134 * C341 + C394 + C394 + C153882 * C365) * C153865 * C127) *
               C153783 * C327 -
           (C203 * C127 + C202 * C126 + C201 * C125 + C200 * C124 +
            C199 * C123) *
               C153783 * C326 -
           ((C134 * C342 + C395 + C395 + C153882 * C366) * C153865 * C127 +
            C427 * C126 + C426 * C125 + C425 * C124 + C424 * C123) *
               C153783 * C328) *
              C153754)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C154181 +
            (C134 * C335 + C380 + C380 + C153882 * C359) * C154169 +
            (C134 * C336 + C381 + C381 + C153882 * C360) * C154143) *
               C2846 +
           (C2850 + C2851 + C2852) * C2847 + C2864 * C154130) *
              C153783 * C153767 * C130 -
          (C2865 * C154130 + (C2855 + C2854 + C2853) * C2847 +
           (C2852 + C2851 + C2850) * C2846) *
              C153783 * C153767 * C131 +
          (C2864 * C2846 + (C2858 + C2857 + C2856) * C2847 +
           (C2859 + C2860 + C2861) * C154130) *
              C153783 * C153767 * C132 -
          (((C134 * C342 + C395 + C395 + C153882 * C366) * C154143 +
            C784 * C154169 + C197 * C154181) *
               C154130 +
           (C2861 + C2860 + C2859) * C2847 + C2865 * C2846) *
              C153783 * C153767 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C154181 +
             C3138 * C154169 + C3139 * C154143) *
                C2846 +
            (C2850 + C2851 + C2852) * C2847 + C2864 * C154130) *
               C153783 * C326 -
           ((C3146 + C3102 + C3103) * C154130 +
            (C3147 + C3106 + C3107) * C2847 +
            (C3142 * C154143 + C3139 * C154169 + C3138 * C154181) * C2846) *
               C153783 * C327 +
           ((C3139 * C154181 + C3142 * C154169 +
             (C134 * C3083 + C3110 + C3110 + C153882 * C3091) * C154143) *
                C2846 +
            (C3111 + C3148 + C3149) * C2847 +
            (C3115 + C3150 + C3151) * C154130) *
               C153783 * C328) *
              C329 +
          (((C3107 + C3106 + C3147) * C2846 + (C3103 + C3102 + C3146) * C2847 +
            (C413 * C154181 + C418 * C154169 + C3145 * C154143) * C154130) *
               C153783 * C327 -
           (C2865 * C154130 + (C2855 + C2854 + C2853) * C2847 +
            (C2852 + C2851 + C2850) * C2846) *
               C153783 * C326 -
           (((C134 * C3086 + C3121 + C3121 + C153882 * C3094) * C154143 +
             C3145 * C154169 + C418 * C154181) *
                C154130 +
            (C3151 + C3150 + C3115) * C2847 + (C3149 + C3148 + C3111) * C2846) *
               C153783 * C328) *
              C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C7055 * C136 + C7062 + C7062 + C154182 * C152 + C7057 * C556 +
            C7063 + C7063 + C154171 * C580 + C7059 * C557 + C7064 + C7064 +
            C154146 * C581) *
               C153865 * C2846 +
           (C7128 + C7129 + C7130) * C153865 * C2847 + C7144 * C154130) *
              C153783 * C153767 * C130 -
          (C7145 * C154130 + (C7133 + C7132 + C7131) * C153865 * C2847 +
           (C7130 + C7129 + C7128) * C153865 * C2846) *
              C153783 * C153767 * C131 +
          (C7144 * C2846 + (C7136 + C7135 + C7134) * C153865 * C2847 +
           (C7137 + C7138 + C7139) * C153865 * C154130) *
              C153783 * C153767 * C132 -
          ((C7059 * C563 + C7101 + C7101 + C154146 * C587 + C7057 * C562 +
            C7102 + C7102 + C154171 * C586 + C7055 * C141 + C7103 + C7103 +
            C154182 * C157) *
               C153865 * C154130 +
           (C7139 + C7138 + C7137) * C153865 * C2847 + C7145 * C2846) *
              C153783 * C153767 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C7055 * C136 + C7062 + C7062 + C154182 * C152 + C7057 * C556 +
             C7063 + C7063 + C154171 * C580 + C7059 * C557 + C7064 + C7064 +
             C154146 * C581) *
                C153865 * C2846 +
            (C7128 + C7129 + C7130) * C153865 * C2847 + C7144 * C154130) *
               C153783 * C326 -
           ((C7436 + C7437 + C7438) * C153865 * C154130 +
            (C7439 + C7440 + C7441) * C153865 * C2847 +
            (C7059 * C1489 + C7382 + C7382 + C154146 * C1499 + C7057 * C1081 +
             C7383 + C7383 + C154171 * C1093 + C7055 * C335 + C7384 + C7384 +
             C154182 * C359) *
                C153865 * C2846) *
               C153783 * C327 +
           ((C7055 * C336 + C7385 + C7385 + C154182 * C360 + C7057 * C1920 +
             C7386 + C7386 + C154171 * C1930 + C7059 * C3369 + C7387 + C7387 +
             C154146 * C3377) *
                C153865 * C2846 +
            (C7442 + C7443 + C7444) * C153865 * C2847 +
            (C7445 + C7446 + C7447) * C153865 * C154130) *
               C153783 * C328) *
              C329 +
          (((C7441 + C7440 + C7439) * C153865 * C2846 +
            (C7438 + C7437 + C7436) * C153865 * C2847 +
            (C7055 * C332 + C7406 + C7406 + C154182 * C356 + C7057 * C1084 +
             C7407 + C7407 + C154171 * C1096 + C7059 * C1486 + C7408 + C7408 +
             C154146 * C1496) *
                C153865 * C154130) *
               C153783 * C327 -
           (C7145 * C154130 + (C7133 + C7132 + C7131) * C153865 * C2847 +
            (C7130 + C7129 + C7128) * C153865 * C2846) *
               C153783 * C326 -
           ((C7059 * C3372 + C7409 + C7409 + C154146 * C3380 + C7057 * C1917 +
             C7410 + C7410 + C154171 * C1927 + C7055 * C339 + C7411 + C7411 +
             C154182 * C363) *
                C153865 * C154130 +
            (C7447 + C7446 + C7445) * C153865 * C2847 +
            (C7444 + C7443 + C7442) * C153865 * C2846) *
               C153783 * C328) *
              C153754)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C24168 +
            C3138 * C24169 + C3139 * C154143) *
               C154178 +
           (C24175 + C24176 + C24177) * C154159 + C24189 * C154130) *
              C153783 * C153767 * C130 -
          (C24190 * C154130 + (C24180 + C24179 + C24178) * C154159 +
           (C24177 + C24176 + C24175) * C154178) *
              C153783 * C153767 * C131 +
          (C24189 * C154178 + (C24183 + C24182 + C24181) * C154159 +
           (C24184 + C24185 + C24186) * C154130) *
              C153783 * C153767 * C132 -
          (((C134 * C342 + C395 + C395 + C153882 * C366) * C154143 +
            C784 * C24169 + C197 * C24168) *
               C154130 +
           (C24186 + C24185 + C24184) * C154159 + C24190 * C154178) *
              C153783 * C153767 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C24168 +
             C3138 * C24169 + C3139 * C154143) *
                C154178 +
            (C24175 + C24176 + C24177) * C154159 + C24189 * C154130) *
               C153783 * C326 -
           ((C24409 + C24410 + C24411) * C154130 +
            (C24412 + C24413 + C24414) * C154159 +
            (C3142 * C154143 + C3139 * C24169 + C3138 * C24168) * C154178) *
               C153783 * C327 +
           ((C3139 * C24168 + C3142 * C24169 + C4591 * C154143) * C154178 +
            (C24415 + C24416 + C24417) * C154159 +
            (C24418 + C24419 + C24420) * C154130) *
               C153783 * C328) *
              C329 +
          (((C24414 + C24413 + C24412) * C154178 +
            (C24411 + C24410 + C24409) * C154159 +
            (C413 * C24168 + C418 * C24169 + C3145 * C154143) * C154130) *
               C153783 * C327 -
           (C24190 * C154130 + (C24180 + C24179 + C24178) * C154159 +
            (C24177 + C24176 + C24175) * C154178) *
               C153783 * C326 -
           (((C134 * C3086 + C3121 + C3121 + C153882 * C3094) * C154143 +
             C3145 * C24169 + C418 * C24168) *
                C154130 +
            (C24420 + C24419 + C24418) * C154159 +
            (C24417 + C24416 + C24415) * C154178) *
               C153783 * C328) *
              C153754)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C136 + C161 + C161 + C153882 * C152) * C28090 +
           C3138 * C28091 + C3139 * C28092 + C3142 * C28093 + C4591 * C28094) *
              C153712 * C153783 * C153767 * C130 -
          (C3143 * C28094 + C3141 * C28093 + C416 * C28092 + C415 * C28091 +
           C193 * C28090) *
              C153712 * C153783 * C153767 * C131 +
          (C194 * C28090 + C414 * C28091 + C417 * C28092 + C3140 * C28093 +
           C3144 * C28094) *
              C153712 * C153783 * C153767 * C132 -
          ((C134 * C3086 + C3121 + C3121 + C153882 * C3094) * C28094 +
           C3145 * C28093 + C418 * C28092 + C413 * C28091 + C195 * C28090) *
              C153712 * C153783 * C153767 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C28090 +
            C3138 * C28091 + C3139 * C28092 + C3142 * C28093 + C4591 * C28094) *
               C153712 * C153783 * C326 -
           (C28235 * C28094 + C4591 * C28093 + C3142 * C28092 + C3139 * C28091 +
            C3138 * C28090) *
               C153712 * C153783 * C327 +
           (C3139 * C28090 + C3142 * C28091 + C4591 * C28092 + C28235 * C28093 +
            (C134 * C28218 + C28227 + C28227 + C153882 * C28222) * C28094) *
               C153712 * C153783 * C328) *
              C329 +
          ((C415 * C28090 + C416 * C28091 + C3141 * C28092 + C3143 * C28093 +
            C28236 * C28094) *
               C153712 * C153783 * C327 -
           (C3143 * C28094 + C3141 * C28093 + C416 * C28092 + C415 * C28091 +
            C193 * C28090) *
               C153712 * C153783 * C326 -
           ((C134 * C28219 + C28230 + C28230 + C153882 * C28223) * C28094 +
            C28236 * C28093 + C3143 * C28092 + C3141 * C28091 + C416 * C28090) *
               C153712 * C153783 * C328) *
              C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C7055 * C136 + C7062 + C7062 + C154182 * C152 + C7057 * C556 +
            C7063 + C7063 + C154171 * C580 + C7059 * C557 + C7064 + C7064 +
            C154146 * C581) *
               C24168 +
           (C7055 * C335 + C7384 + C7384 + C154182 * C359 + C7057 * C1081 +
            C7383 + C7383 + C154171 * C1093 + C7059 * C1489 + C7382 + C7382 +
            C154146 * C1499) *
               C24169 +
           (C7055 * C336 + C7385 + C7385 + C154182 * C360 + C7057 * C1920 +
            C7386 + C7386 + C154171 * C1930 + C7059 * C3369 + C7387 + C7387 +
            C154146 * C3377) *
               C154143) *
              C153712 * C153783 * C153767 * C130 -
          ((C7444 + C7443 + C7442) * C154143 +
           (C7439 + C7440 + C7441) * C24169 +
           (C7130 + C7129 + C7128) * C24168) *
              C153712 * C153783 * C153767 * C131 +
          (C7142 * C24168 + (C7438 + C7437 + C7436) * C24169 +
           (C7445 + C7446 + C7447) * C154143) *
              C153712 * C153783 * C153767 * C132 -
          ((C7059 * C3372 + C7409 + C7409 + C154146 * C3380 + C7057 * C1917 +
            C7410 + C7410 + C154171 * C1927 + C7055 * C339 + C7411 + C7411 +
            C154182 * C363) *
               C154143 +
           (C8000 + C7999 + C7998) * C24169 + C7143 * C24168) *
              C153712 * C153783 * C153767 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C7055 * C136 + C7062 + C7062 + C154182 * C152 + C7057 * C556 +
             C7063 + C7063 + C154171 * C580 + C7059 * C557 + C7064 + C7064 +
             C154146 * C581) *
                C24168 +
            (C30715 + C30716 + C30717) * C24169 + C30728 * C154143) *
               C153712 * C153783 * C326 -
           ((C30721 + C30722 + C30723) * C154143 +
            (C30720 + C30719 + C30718) * C24169 +
            (C30717 + C30716 + C30715) * C24168) *
               C153712 * C153783 * C327 +
           (C30728 * C24168 + (C30723 + C30722 + C30721) * C24169 +
            (C7055 * C3083 + C30677 + C30677 + C154182 * C3091 + C7057 * C5559 +
             C30678 + C30678 + C154171 * C5565 + C7059 * C28358 + C30679 +
             C30679 + C154146 * C28362) *
                C154143) *
               C153712 * C153783 * C328) *
              C329 +
          (((C7441 + C7440 + C7439) * C24168 +
            (C7442 + C7443 + C7444) * C24169 +
            (C30724 + C30725 + C30726) * C154143) *
               C153712 * C153783 * C327 -
           (C30702 * C154143 + (C7439 + C7440 + C7441) * C24169 +
            (C7130 + C7129 + C7128) * C24168) *
               C153712 * C153783 * C326 -
           ((C7059 * C28359 + C30687 + C30687 + C154146 * C28363 +
             C7057 * C5558 + C30688 + C30688 + C154171 * C5564 + C7055 * C3084 +
             C30689 + C30689 + C154182 * C3092) *
                C154143 +
            (C30726 + C30725 + C30724) * C24169 + C30702 * C24168) *
               C153712 * C153783 * C328) *
              C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C46971 * C136 + C46978 + C46978 + C46968 * C152 + C46973 * C556 +
            C46979 + C46979 + C46969 * C580 + C46975 * C557 + C46980 + C46980 +
            C154146 * C581) *
               C153865 * C154178 +
           (C47044 + C47045 + C47046) * C153865 * C154159 + C47060 * C154130) *
              C153783 * C153767 * C130 -
          (C47061 * C154130 + (C47049 + C47048 + C47047) * C153865 * C154159 +
           (C47046 + C47045 + C47044) * C153865 * C154178) *
              C153783 * C153767 * C131 +
          (C47060 * C154178 + (C47052 + C47051 + C47050) * C153865 * C154159 +
           (C47053 + C47054 + C47055) * C153865 * C154130) *
              C153783 * C153767 * C132 -
          ((C46975 * C563 + C47017 + C47017 + C154146 * C587 + C46973 * C562 +
            C47018 + C47018 + C46969 * C586 + C46971 * C141 + C47019 + C47019 +
            C46968 * C157) *
               C153865 * C154130 +
           (C47055 + C47054 + C47053) * C153865 * C154159 + C47061 * C154178) *
              C153783 * C153767 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C46971 * C136 + C46978 + C46978 + C46968 * C152 + C46973 * C556 +
             C46979 + C46979 + C46969 * C580 + C46975 * C557 + C46980 + C46980 +
             C154146 * C581) *
                C153865 * C154178 +
            (C47044 + C47045 + C47046) * C153865 * C154159 + C47060 * C154130) *
               C153783 * C326 -
           ((C47352 + C47353 + C47354) * C153865 * C154130 +
            (C47355 + C47356 + C47357) * C153865 * C154159 +
            (C46975 * C1489 + C47298 + C47298 + C154146 * C1499 +
             C46973 * C1081 + C47299 + C47299 + C46969 * C1093 + C46971 * C335 +
             C47300 + C47300 + C46968 * C359) *
                C153865 * C154178) *
               C153783 * C327 +
           ((C46971 * C336 + C47301 + C47301 + C46968 * C360 + C46973 * C1920 +
             C47302 + C47302 + C46969 * C1930 + C46975 * C3369 + C47303 +
             C47303 + C154146 * C3377) *
                C153865 * C154178 +
            (C47358 + C47359 + C47360) * C153865 * C154159 +
            (C47361 + C47362 + C47363) * C153865 * C154130) *
               C153783 * C328) *
              C329 +
          (((C47357 + C47356 + C47355) * C153865 * C154178 +
            (C47354 + C47353 + C47352) * C153865 * C154159 +
            (C46971 * C332 + C47322 + C47322 + C46968 * C356 + C46973 * C1084 +
             C47323 + C47323 + C46969 * C1096 + C46975 * C1486 + C47324 +
             C47324 + C154146 * C1496) *
                C153865 * C154130) *
               C153783 * C327 -
           (C47061 * C154130 + (C47049 + C47048 + C47047) * C153865 * C154159 +
            (C47046 + C47045 + C47044) * C153865 * C154178) *
               C153783 * C326 -
           ((C46975 * C3372 + C47325 + C47325 + C154146 * C3380 +
             C46973 * C1917 + C47326 + C47326 + C46969 * C1927 + C46971 * C339 +
             C47327 + C47327 + C46968 * C363) *
                C153865 * C154130 +
            (C47363 + C47362 + C47361) * C153865 * C154159 +
            (C47360 + C47359 + C47358) * C153865 * C154178) *
               C153783 * C328) *
              C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C46971 * C136 + C46978 + C46978 + C46968 * C152 + C46973 * C556 +
            C46979 + C46979 + C46969 * C580 + C46975 * C557 + C46980 + C46980 +
            C154146 * C581) *
               C154181 +
           (C46971 * C335 + C47300 + C47300 + C46968 * C359 + C46973 * C1081 +
            C47299 + C47299 + C46969 * C1093 + C46975 * C1489 + C47298 +
            C47298 + C154146 * C1499) *
               C154169 +
           (C46971 * C336 + C47301 + C47301 + C46968 * C360 + C46973 * C1920 +
            C47302 + C47302 + C46969 * C1930 + C46975 * C3369 + C47303 +
            C47303 + C154146 * C3377) *
               C154143) *
              C153712 * C153783 * C153767 * C130 -
          ((C47360 + C47359 + C47358) * C154143 +
           (C47355 + C47356 + C47357) * C154169 +
           (C47046 + C47045 + C47044) * C154181) *
              C153712 * C153783 * C153767 * C131 +
          (C47058 * C154181 + (C47354 + C47353 + C47352) * C154169 +
           (C47361 + C47362 + C47363) * C154143) *
              C153712 * C153783 * C153767 * C132 -
          ((C46975 * C3372 + C47325 + C47325 + C154146 * C3380 +
            C46973 * C1917 + C47326 + C47326 + C46969 * C1927 + C46971 * C339 +
            C47327 + C47327 + C46968 * C363) *
               C154143 +
           (C47904 + C47903 + C47902) * C154169 + C47059 * C154181) *
              C153712 * C153783 * C153767 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C46971 * C136 + C46978 + C46978 + C46968 * C152 + C46973 * C556 +
             C46979 + C46979 + C46969 * C580 + C46975 * C557 + C46980 + C46980 +
             C154146 * C581) *
                C154181 +
            (C51548 + C51549 + C51550) * C154169 + C51561 * C154143) *
               C153712 * C153783 * C326 -
           ((C51554 + C51555 + C51556) * C154143 +
            (C51553 + C51552 + C51551) * C154169 +
            (C51550 + C51549 + C51548) * C154181) *
               C153712 * C153783 * C327 +
           (C51561 * C154181 + (C51556 + C51555 + C51554) * C154169 +
            (C46971 * C3083 + C51510 + C51510 + C46968 * C3091 +
             C46973 * C5559 + C51511 + C51511 + C46969 * C5565 +
             C46975 * C28358 + C51512 + C51512 + C154146 * C28362) *
                C154143) *
               C153712 * C153783 * C328) *
              C329 +
          (((C47357 + C47356 + C47355) * C154181 +
            (C47358 + C47359 + C47360) * C154169 +
            (C51557 + C51558 + C51559) * C154143) *
               C153712 * C153783 * C327 -
           (C51535 * C154143 + (C47355 + C47356 + C47357) * C154169 +
            (C47046 + C47045 + C47044) * C154181) *
               C153712 * C153783 * C326 -
           ((C46975 * C28359 + C51520 + C51520 + C154146 * C28363 +
             C46973 * C5558 + C51521 + C51521 + C46969 * C5564 +
             C46971 * C3084 + C51522 + C51522 + C46968 * C3092) *
                C154143 +
            (C51559 + C51558 + C51557) * C154169 + C51535 * C154181) *
               C153712 * C153783 * C328) *
              C153754)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((C55344 * C136 + C55355 + C55355 + C55339 * C152 + C55346 * C556 +
           C55356 + C55356 + C55340 * C580 + C55348 * C557 + C55357 + C55357 +
           C55341 * C581 + C55350 * C2272 + C55358 + C55358 + C55342 * C2282 +
           C55352 * C7665 + C55359 + C55359 + C55343 * C7673) *
              C153865 * C153712 * C153783 * C153767 * C130 -
          (C55352 * C7666 + C55360 + C55360 + C55343 * C7674 + C55350 * C2271 +
           C55361 + C55361 + C55342 * C2281 + C55348 * C558 + C55362 + C55362 +
           C55341 * C582 + C55346 * C555 + C55363 + C55363 + C55340 * C579 +
           C55344 * C137 + C55364 + C55364 + C55339 * C153) *
              C153865 * C153712 * C153783 * C153767 * C131 +
          (C55344 * C138 + C55365 + C55365 + C55339 * C154 + C55346 * C554 +
           C55366 + C55366 + C55340 * C578 + C55348 * C559 + C55367 + C55367 +
           C55341 * C583 + C55350 * C2270 + C55368 + C55368 + C55342 * C2280 +
           C55352 * C7667 + C55369 + C55369 + C55343 * C7675) *
              C153865 * C153712 * C153783 * C153767 * C132 -
          (C55352 * C7668 + C55370 + C55370 + C55343 * C7676 + C55350 * C2269 +
           C55371 + C55371 + C55342 * C2279 + C55348 * C560 + C55372 + C55372 +
           C55341 * C584 + C55346 * C553 + C55373 + C55373 + C55340 * C577 +
           C55344 * C139 + C55374 + C55374 + C55339 * C155) *
              C153865 * C153712 * C153783 * C153767 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C55344 * C136 + C55355 + C55355 + C55339 * C152 + C55346 * C556 +
            C55356 + C55356 + C55340 * C580 + C55348 * C557 + C55357 + C55357 +
            C55341 * C581 + C55350 * C2272 + C55358 + C55358 + C55342 * C2282 +
            C55352 * C7665 + C55359 + C55359 + C55343 * C7673) *
               C153865 * C153712 * C153783 * C326 -
           (C55352 * C9167 + C55497 + C55497 + C55343 * C9173 + C55350 * C6161 +
            C55498 + C55498 + C55342 * C6173 + C55348 * C1489 + C55499 +
            C55499 + C55341 * C1499 + C55346 * C1081 + C55500 + C55500 +
            C55340 * C1093 + C55344 * C335 + C55501 + C55501 + C55339 * C359) *
               C153865 * C153712 * C153783 * C327 +
           (C55344 * C336 + C55502 + C55502 + C55339 * C360 + C55346 * C1920 +
            C55503 + C55503 + C55340 * C1930 + C55348 * C3369 + C55504 +
            C55504 + C55341 * C3377 + C55350 * C6160 + C55505 + C55505 +
            C55342 * C6172 + C55352 * C30946 + C55506 + C55506 +
            C55343 * C30950) *
               C153865 * C153712 * C153783 * C328) *
              C329 +
          ((C55344 * C334 + C55507 + C55507 + C55339 * C358 + C55346 * C1082 +
            C55508 + C55508 + C55340 * C1094 + C55348 * C1488 + C55509 +
            C55509 + C55341 * C1498 + C55350 * C6159 + C55510 + C55510 +
            C55342 * C6171 + C55352 * C9166 + C55511 + C55511 +
            C55343 * C9172) *
               C153865 * C153712 * C153783 * C327 -
           (C55352 * C7666 + C55360 + C55360 + C55343 * C7674 + C55350 * C2271 +
            C55361 + C55361 + C55342 * C2281 + C55348 * C558 + C55362 + C55362 +
            C55341 * C582 + C55346 * C555 + C55363 + C55363 + C55340 * C579 +
            C55344 * C137 + C55364 + C55364 + C55339 * C153) *
               C153865 * C153712 * C153783 * C326 -
           (C55352 * C30947 + C55512 + C55512 + C55343 * C30951 +
            C55350 * C6158 + C55513 + C55513 + C55342 * C6170 + C55348 * C3370 +
            C55514 + C55514 + C55341 * C3378 + C55346 * C1919 + C55515 +
            C55515 + C55340 * C1929 + C55344 * C337 + C55516 + C55516 +
            C55339 * C361) *
               C153865 * C153712 * C153783 * C328) *
              C153754)) /
            (p * q * std::sqrt(p + q));
    d2ee[185] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C136 + C161 + C161 + C153882 * C152) * C153865 * C123 +
                C199 * C124 + C200 * C125 + C201 * C126 + C202 * C127) *
                   C153783 * C154164 -
               (C420 * C127 + C421 * C126 + C422 * C125 + C423 * C124 +
                (C134 * C335 + C380 + C380 + C153882 * C359) * C153865 * C123) *
                   C153783 * C154165 +
               ((C134 * C336 + C381 + C381 + C153882 * C360) * C153865 * C123 +
                C424 * C124 + C425 * C125 + C426 * C126 + C427 * C127) *
                   C153783 * C1629) *
                  C154085 +
              ((C423 * C123 + C422 * C124 + C421 * C125 + C420 * C126 +
                C785 * C127) *
                   C153783 * C154165 -
               (C203 * C127 + C202 * C126 + C201 * C125 + C200 * C124 +
                C199 * C123) *
                   C153783 * C154164 -
               ((C134 * C342 + C395 + C395 + C153882 * C366) * C153865 * C127 +
                C427 * C126 + C426 * C125 + C425 * C124 + C424 * C123) *
                   C153783 * C1629) *
                  C153754) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C134 * C136 + C161 + C161 + C153882 * C152) * C154181 +
                 C3138 * C154169 + C3139 * C154143) *
                    C2846 +
                (C2850 + C2851 + C2852) * C2847 + C2864 * C154130) *
                   C153783 * C154164 -
               (C3650 * C154130 + (C3147 + C3106 + C3107) * C2847 +
                (C3142 * C154143 + C3139 * C154169 + C3138 * C154181) * C2846) *
                   C153783 * C154165 +
               ((C3139 * C154181 + C3142 * C154169 + C4591 * C154143) * C2846 +
                (C3111 + C3148 + C3149) * C2847 +
                (C3115 + C3150 + C3151) * C154130) *
                   C153783 * C1629) *
                  C154085 +
              (((C3107 + C3106 + C3147) * C2846 +
                (C3103 + C3102 + C3146) * C2847 +
                (C3647 + C3648 + C3649) * C154130) *
                   C153783 * C154165 -
               (C2865 * C154130 + (C2855 + C2854 + C2853) * C2847 +
                (C2852 + C2851 + C2850) * C2846) *
                   C153783 * C154164 -
               (((C134 * C3086 + C3121 + C3121 + C153882 * C3094) * C154143 +
                 C3145 * C154169 + C418 * C154181) *
                    C154130 +
                (C3151 + C3150 + C3115) * C2847 +
                (C3149 + C3148 + C3111) * C2846) *
                   C153783 * C1629) *
                  C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C7055 * C136 + C7062 + C7062 + C154182 * C152 + C7057 * C556 +
             C7063 + C7063 + C154171 * C580 + C7059 * C557 + C7064 + C7064 +
             C154146 * C581) *
                C153865 * C2846 +
            (C7128 + C7129 + C7130) * C153865 * C2847 + C7144 * C154130) *
               C153783 * C154164 -
           (C7994 * C154130 + (C7439 + C7440 + C7441) * C153865 * C2847 +
            (C7059 * C1489 + C7382 + C7382 + C154146 * C1499 + C7057 * C1081 +
             C7383 + C7383 + C154171 * C1093 + C7055 * C335 + C7384 + C7384 +
             C154182 * C359) *
                C153865 * C2846) *
               C153783 * C154165 +
           ((C7055 * C336 + C7385 + C7385 + C154182 * C360 + C7057 * C1920 +
             C7386 + C7386 + C154171 * C1930 + C7059 * C3369 + C7387 + C7387 +
             C154146 * C3377) *
                C153865 * C2846 +
            (C7442 + C7443 + C7444) * C153865 * C2847 +
            (C7445 + C7446 + C7447) * C153865 * C154130) *
               C153783 * C1629) *
              C154085 +
          (((C7441 + C7440 + C7439) * C153865 * C2846 +
            (C7438 + C7437 + C7436) * C153865 * C2847 +
            (C7998 + C7999 + C8000) * C153865 * C154130) *
               C153783 * C154165 -
           (C7145 * C154130 + (C7133 + C7132 + C7131) * C153865 * C2847 +
            (C7130 + C7129 + C7128) * C153865 * C2846) *
               C153783 * C154164 -
           ((C7059 * C3372 + C7409 + C7409 + C154146 * C3380 + C7057 * C1917 +
             C7410 + C7410 + C154171 * C1927 + C7055 * C339 + C7411 + C7411 +
             C154182 * C363) *
                C153865 * C154130 +
            (C7447 + C7446 + C7445) * C153865 * C2847 +
            (C7444 + C7443 + C7442) * C153865 * C2846) *
               C153783 * C1629) *
              C153754)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C24168 +
             C3138 * C24169 + C3139 * C154143) *
                C154178 +
            (C24175 + C24176 + C24177) * C154159 + C24189 * C154130) *
               C153783 * C154164 -
           (C24873 * C154130 + (C24412 + C24413 + C24414) * C154159 +
            (C3142 * C154143 + C3139 * C24169 + C3138 * C24168) * C154178) *
               C153783 * C154165 +
           ((C3139 * C24168 + C3142 * C24169 + C4591 * C154143) * C154178 +
            (C24415 + C24416 + C24417) * C154159 +
            (C24418 + C24419 + C24420) * C154130) *
               C153783 * C1629) *
              C154085 +
          (((C24414 + C24413 + C24412) * C154178 +
            (C24411 + C24410 + C24409) * C154159 +
            (C24870 + C24871 + C24872) * C154130) *
               C153783 * C154165 -
           (C24190 * C154130 + (C24180 + C24179 + C24178) * C154159 +
            (C24177 + C24176 + C24175) * C154178) *
               C153783 * C154164 -
           (((C134 * C3086 + C3121 + C3121 + C153882 * C3094) * C154143 +
             C3145 * C24169 + C418 * C24168) *
                C154130 +
            (C24420 + C24419 + C24418) * C154159 +
            (C24417 + C24416 + C24415) * C154178) *
               C153783 * C1629) *
              C153754)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C28090 +
            C3138 * C28091 + C3139 * C28092 + C3142 * C28093 + C4591 * C28094) *
               C153712 * C153783 * C154164 -
           (C28235 * C28094 + C4591 * C28093 + C3142 * C28092 + C3139 * C28091 +
            C3138 * C28090) *
               C153712 * C153783 * C154165 +
           (C3139 * C28090 + C3142 * C28091 + C4591 * C28092 + C28235 * C28093 +
            C29003 * C28094) *
               C153712 * C153783 * C1629) *
              C154085 +
          ((C415 * C28090 + C416 * C28091 + C3141 * C28092 + C3143 * C28093 +
            C28236 * C28094) *
               C153712 * C153783 * C154165 -
           (C3143 * C28094 + C3141 * C28093 + C416 * C28092 + C415 * C28091 +
            C193 * C28090) *
               C153712 * C153783 * C154164 -
           ((C134 * C28219 + C28230 + C28230 + C153882 * C28223) * C28094 +
            C28236 * C28093 + C3143 * C28092 + C3141 * C28091 + C416 * C28090) *
               C153712 * C153783 * C1629) *
              C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C7055 * C136 + C7062 + C7062 + C154182 * C152 + C7057 * C556 +
             C7063 + C7063 + C154171 * C580 + C7059 * C557 + C7064 + C7064 +
             C154146 * C581) *
                C24168 +
            (C30715 + C30716 + C30717) * C24169 + C30728 * C154143) *
               C153712 * C153783 * C154164 -
           (C32113 * C154143 + (C30720 + C30719 + C30718) * C24169 +
            (C30717 + C30716 + C30715) * C24168) *
               C153712 * C153783 * C154165 +
           (C30728 * C24168 + (C30723 + C30722 + C30721) * C24169 +
            (C32120 + C32121 + C32122) * C154143) *
               C153712 * C153783 * C1629) *
              C154085 +
          (((C7441 + C7440 + C7439) * C24168 +
            (C7442 + C7443 + C7444) * C24169 +
            (C30724 + C30725 + C30726) * C154143) *
               C153712 * C153783 * C154165 -
           (C30702 * C154143 + (C7439 + C7440 + C7441) * C24169 +
            (C7130 + C7129 + C7128) * C24168) *
               C153712 * C153783 * C154164 -
           ((C7059 * C28359 + C30687 + C30687 + C154146 * C28363 +
             C7057 * C5558 + C30688 + C30688 + C154171 * C5564 + C7055 * C3084 +
             C30689 + C30689 + C154182 * C3092) *
                C154143 +
            (C30726 + C30725 + C30724) * C24169 + C30702 * C24168) *
               C153712 * C153783 * C1629) *
              C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C46971 * C136 + C46978 + C46978 + C46968 * C152 + C46973 * C556 +
             C46979 + C46979 + C46969 * C580 + C46975 * C557 + C46980 + C46980 +
             C154146 * C581) *
                C153865 * C154178 +
            (C47044 + C47045 + C47046) * C153865 * C154159 + C47060 * C154130) *
               C153783 * C154164 -
           (C47898 * C154130 + (C47355 + C47356 + C47357) * C153865 * C154159 +
            (C46975 * C1489 + C47298 + C47298 + C154146 * C1499 +
             C46973 * C1081 + C47299 + C47299 + C46969 * C1093 + C46971 * C335 +
             C47300 + C47300 + C46968 * C359) *
                C153865 * C154178) *
               C153783 * C154165 +
           ((C46971 * C336 + C47301 + C47301 + C46968 * C360 + C46973 * C1920 +
             C47302 + C47302 + C46969 * C1930 + C46975 * C3369 + C47303 +
             C47303 + C154146 * C3377) *
                C153865 * C154178 +
            (C47358 + C47359 + C47360) * C153865 * C154159 +
            (C47361 + C47362 + C47363) * C153865 * C154130) *
               C153783 * C1629) *
              C154085 +
          (((C47357 + C47356 + C47355) * C153865 * C154178 +
            (C47354 + C47353 + C47352) * C153865 * C154159 +
            (C47902 + C47903 + C47904) * C153865 * C154130) *
               C153783 * C154165 -
           (C47061 * C154130 + (C47049 + C47048 + C47047) * C153865 * C154159 +
            (C47046 + C47045 + C47044) * C153865 * C154178) *
               C153783 * C154164 -
           ((C46975 * C3372 + C47325 + C47325 + C154146 * C3380 +
             C46973 * C1917 + C47326 + C47326 + C46969 * C1927 + C46971 * C339 +
             C47327 + C47327 + C46968 * C363) *
                C153865 * C154130 +
            (C47363 + C47362 + C47361) * C153865 * C154159 +
            (C47360 + C47359 + C47358) * C153865 * C154178) *
               C153783 * C1629) *
              C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C46971 * C136 + C46978 + C46978 + C46968 * C152 + C46973 * C556 +
             C46979 + C46979 + C46969 * C580 + C46975 * C557 + C46980 + C46980 +
             C154146 * C581) *
                C154181 +
            (C51548 + C51549 + C51550) * C154169 + C51561 * C154143) *
               C153712 * C153783 * C154164 -
           (C52937 * C154143 + (C51553 + C51552 + C51551) * C154169 +
            (C51550 + C51549 + C51548) * C154181) *
               C153712 * C153783 * C154165 +
           (C51561 * C154181 + (C51556 + C51555 + C51554) * C154169 +
            (C52944 + C52945 + C52946) * C154143) *
               C153712 * C153783 * C1629) *
              C154085 +
          (((C47357 + C47356 + C47355) * C154181 +
            (C47358 + C47359 + C47360) * C154169 +
            (C51557 + C51558 + C51559) * C154143) *
               C153712 * C153783 * C154165 -
           (C51535 * C154143 + (C47355 + C47356 + C47357) * C154169 +
            (C47046 + C47045 + C47044) * C154181) *
               C153712 * C153783 * C154164 -
           ((C46975 * C28359 + C51520 + C51520 + C154146 * C28363 +
             C46973 * C5558 + C51521 + C51521 + C46969 * C5564 +
             C46971 * C3084 + C51522 + C51522 + C46968 * C3092) *
                C154143 +
            (C51559 + C51558 + C51557) * C154169 + C51535 * C154181) *
               C153712 * C153783 * C1629) *
              C153754)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C55344 * C136 + C55355 + C55355 + C55339 * C152 + C55346 * C556 +
            C55356 + C55356 + C55340 * C580 + C55348 * C557 + C55357 + C55357 +
            C55341 * C581 + C55350 * C2272 + C55358 + C55358 + C55342 * C2282 +
            C55352 * C7665 + C55359 + C55359 + C55343 * C7673) *
               C153865 * C153712 * C153783 * C154164 -
           (C55352 * C9167 + C55497 + C55497 + C55343 * C9173 + C55350 * C6161 +
            C55498 + C55498 + C55342 * C6173 + C55348 * C1489 + C55499 +
            C55499 + C55341 * C1499 + C55346 * C1081 + C55500 + C55500 +
            C55340 * C1093 + C55344 * C335 + C55501 + C55501 + C55339 * C359) *
               C153865 * C153712 * C153783 * C154165 +
           (C55344 * C336 + C55502 + C55502 + C55339 * C360 + C55346 * C1920 +
            C55503 + C55503 + C55340 * C1930 + C55348 * C3369 + C55504 +
            C55504 + C55341 * C3377 + C55350 * C6160 + C55505 + C55505 +
            C55342 * C6172 + C55352 * C30946 + C55506 + C55506 +
            C55343 * C30950) *
               C153865 * C153712 * C153783 * C1629) *
              C154085 +
          ((C55344 * C334 + C55507 + C55507 + C55339 * C358 + C55346 * C1082 +
            C55508 + C55508 + C55340 * C1094 + C55348 * C1488 + C55509 +
            C55509 + C55341 * C1498 + C55350 * C6159 + C55510 + C55510 +
            C55342 * C6171 + C55352 * C9166 + C55511 + C55511 +
            C55343 * C9172) *
               C153865 * C153712 * C153783 * C154165 -
           (C55352 * C7666 + C55360 + C55360 + C55343 * C7674 + C55350 * C2271 +
            C55361 + C55361 + C55342 * C2281 + C55348 * C558 + C55362 + C55362 +
            C55341 * C582 + C55346 * C555 + C55363 + C55363 + C55340 * C579 +
            C55344 * C137 + C55364 + C55364 + C55339 * C153) *
               C153865 * C153712 * C153783 * C154164 -
           (C55352 * C30947 + C55512 + C55512 + C55343 * C30951 +
            C55350 * C6158 + C55513 + C55513 + C55342 * C6170 + C55348 * C3370 +
            C55514 + C55514 + C55341 * C3378 + C55346 * C1919 + C55515 +
            C55515 + C55340 * C1929 + C55344 * C337 + C55516 + C55516 +
            C55339 * C361) *
               C153865 * C153712 * C153783 * C1629) *
              C153754)) /
            (p * q * std::sqrt(p + q));
    d2ee[186] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C136 + C161 + C161 + C153882 * C152) * C153865 * C123 +
                C199 * C124 + C200 * C125 + C201 * C126 + C202 * C127) *
                   C154094 -
               (C641 * C127 + C642 * C126 + C643 * C125 + C644 * C124 +
                (C134 * C556 + C601 + C601 + C153882 * C580) * C153865 * C123) *
                   C153847) *
                  C154164 +
              (((C134 * C1081 + C1100 + C1100 + C153882 * C1093) * C153865 *
                    C123 +
                C1126 * C124 + C1127 * C125 + C1128 * C126 + C1129 * C127) *
                   C153847 -
               (C420 * C127 + C421 * C126 + C422 * C125 + C423 * C124 +
                (C134 * C335 + C380 + C380 + C153882 * C359) * C153865 * C123) *
                   C154094) *
                  C154165 +
              (((C134 * C336 + C381 + C381 + C153882 * C360) * C153865 * C123 +
                C424 * C124 + C425 * C125 + C426 * C126 + C427 * C127) *
                   C154094 -
               ((C134 * C1916 + C1932 + C1932 + C153882 * C1926) * C153865 *
                    C127 +
                (C134 * C1917 + C1933 + C1933 + C153882 * C1927) * C153865 *
                    C126 +
                (C134 * C1918 + C1934 + C1934 + C153882 * C1928) * C153865 *
                    C125 +
                (C134 * C1919 + C1935 + C1935 + C153882 * C1929) * C153865 *
                    C124 +
                (C134 * C1920 + C1936 + C1936 + C153882 * C1930) * C153865 *
                    C123) *
                   C153847) *
                  C1629) *
             C153748 +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C134 * C136 + C161 + C161 + C153882 * C152) * C154181 +
                 C3138 * C154169 + C3139 * C154143) *
                    C2846 +
                (C2850 + C2851 + C2852) * C2847 + C2864 * C154130) *
                   C154094 -
               (C3874 * C154130 + (C3423 + C3388 + C3389) * C2847 +
                (C4205 * C154143 + C4206 * C154169 +
                 (C134 * C556 + C601 + C601 + C153882 * C580) * C154181) *
                    C2846) *
                   C153847) *
                  C154164 +
              (((C4206 * C154181 + C4205 * C154169 + C5574 * C154143) * C2846 +
                (C4186 + C4187 + C4209) * C2847 +
                (C4191 + C4192 + C4210) * C154130) *
                   C153847 -
               (C3650 * C154130 + (C3147 + C3106 + C3107) * C2847 +
                (C3142 * C154143 + C3139 * C154169 + C3138 * C154181) * C2846) *
                   C154094) *
                  C154165 +
              (((C3139 * C154181 + C3142 * C154169 + C4591 * C154143) * C2846 +
                (C3111 + C3148 + C3149) * C2847 +
                (C3115 + C3150 + C3151) * C154130) *
                   C154094 -
               (((C134 * C5557 + C5569 + C5569 + C153882 * C5563) * C154143 +
                 C4208 * C154169 + C3416 * C154181) *
                    C154130 +
                ((C134 * C5558 + C5570 + C5570 + C153882 * C5564) * C154143 +
                 C4207 * C154169 + C3417 * C154181) *
                    C2847 +
                ((C134 * C5559 + C5571 + C5571 + C153882 * C5565) * C154143 +
                 C5574 * C154169 + C4205 * C154181) *
                    C2846) *
                   C153847) *
                  C1629) *
             C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C7055 * C136 + C7062 + C7062 + C154182 * C152 + C7057 * C556 +
             C7063 + C7063 + C154171 * C580 + C7059 * C557 + C7064 + C7064 +
             C154146 * C581) *
                C153865 * C2846 +
            (C7128 + C7129 + C7130) * C153865 * C2847 + C7144 * C154130) *
               C154094 -
           (C8233 * C154130 + (C7753 + C7754 + C7755) * C153865 * C2847 +
            (C7059 * C2272 + C7696 + C7696 + C154146 * C2282 + C7057 * C557 +
             C7697 + C7697 + C154171 * C581 + C7055 * C556 + C7698 + C7698 +
             C154182 * C580) *
                C153865 * C2846) *
               C153847) *
              C154164 +
          (((C7055 * C1081 + C8533 + C8533 + C154182 * C1093 + C7057 * C1489 +
             C8534 + C8534 + C154171 * C1499 + C7059 * C6161 + C8535 + C8535 +
             C154146 * C6173) *
                C153865 * C2846 +
            (C8569 + C8570 + C8571) * C153865 * C2847 +
            (C8572 + C8573 + C8574) * C153865 * C154130) *
               C153847 -
           (C7994 * C154130 + (C7439 + C7440 + C7441) * C153865 * C2847 +
            (C7059 * C1489 + C7382 + C7382 + C154146 * C1499 + C7057 * C1081 +
             C7383 + C7383 + C154171 * C1093 + C7055 * C335 + C7384 + C7384 +
             C154182 * C359) *
                C153865 * C2846) *
               C154094) *
              C154165 +
          (((C7055 * C336 + C7385 + C7385 + C154182 * C360 + C7057 * C1920 +
             C7386 + C7386 + C154171 * C1930 + C7059 * C3369 + C7387 + C7387 +
             C154146 * C3377) *
                C153865 * C2846 +
            (C7442 + C7443 + C7444) * C153865 * C2847 +
            (C7445 + C7446 + C7447) * C153865 * C154130) *
               C154094 -
           ((C7059 * C6156 + C9910 + C9910 + C154146 * C6168 + C7057 * C3371 +
             C9911 + C9911 + C154171 * C3379 + C7055 * C1918 + C9912 + C9912 +
             C154182 * C1928) *
                C153865 * C154130 +
            (C7059 * C6158 + C9913 + C9913 + C154146 * C6170 + C7057 * C3370 +
             C9914 + C9914 + C154171 * C3378 + C7055 * C1919 + C9915 + C9915 +
             C154182 * C1929) *
                C153865 * C2847 +
            (C7059 * C6160 + C9916 + C9916 + C154146 * C6172 + C7057 * C3369 +
             C9917 + C9917 + C154171 * C3377 + C7055 * C1920 + C9918 + C9918 +
             C154182 * C1930) *
                C153865 * C2846) *
               C153847) *
              C1629) *
         C153748) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C24168 +
             C3138 * C24169 + C3139 * C154143) *
                C154178 +
            (C24175 + C24176 + C24177) * C154159 + C24189 * C154130) *
               C154094 -
           (C25096 * C154130 + (C24642 + C24643 + C24644) * C154159 +
            (C4205 * C154143 + C4206 * C24169 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C24168) *
                C154178) *
               C153847) *
              C154164 +
          (((C4206 * C24168 + C4205 * C24169 + C5574 * C154143) * C154178 +
            (C25387 + C25388 + C25389) * C154159 +
            (C25390 + C25391 + C25392) * C154130) *
               C153847 -
           (C24873 * C154130 + (C24412 + C24413 + C24414) * C154159 +
            (C3142 * C154143 + C3139 * C24169 + C3138 * C24168) * C154178) *
               C154094) *
              C154165 +
          (((C3139 * C24168 + C3142 * C24169 + C4591 * C154143) * C154178 +
            (C24415 + C24416 + C24417) * C154159 +
            (C24418 + C24419 + C24420) * C154130) *
               C154094 -
           (((C134 * C5557 + C5569 + C5569 + C153882 * C5563) * C154143 +
             C4208 * C24169 + C3416 * C24168) *
                C154130 +
            ((C134 * C5558 + C5570 + C5570 + C153882 * C5564) * C154143 +
             C4207 * C24169 + C3417 * C24168) *
                C154159 +
            ((C134 * C5559 + C5571 + C5571 + C153882 * C5565) * C154143 +
             C5574 * C24169 + C4205 * C24168) *
                C154178) *
               C153847) *
              C1629) *
         C153748) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C28090 +
            C3138 * C28091 + C3139 * C28092 + C3142 * C28093 + C4591 * C28094) *
               C153712 * C154094 -
           (C28789 * C28094 + C5574 * C28093 + C4205 * C28092 + C4206 * C28091 +
            (C134 * C556 + C601 + C601 + C153882 * C580) * C28090) *
               C153712 * C153847) *
              C154164 +
          ((C4206 * C28090 + C4205 * C28091 + C5574 * C28092 + C28789 * C28093 +
            C29554 * C28094) *
               C153712 * C153847 -
           (C28235 * C28094 + C4591 * C28093 + C3142 * C28092 + C3139 * C28091 +
            C3138 * C28090) *
               C153712 * C154094) *
              C154165 +
          ((C3139 * C28090 + C3142 * C28091 + C4591 * C28092 + C28235 * C28093 +
            C29003 * C28094) *
               C153712 * C154094 -
           ((C134 * C29545 + C29551 + C29551 + C153882 * C29547) * C28094 +
            C29554 * C28093 + C28789 * C28092 + C5574 * C28091 +
            C4205 * C28090) *
               C153712 * C153847) *
              C1629) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C7055 * C136 + C7062 + C7062 + C154182 * C152 + C7057 * C556 +
             C7063 + C7063 + C154171 * C580 + C7059 * C557 + C7064 + C7064 +
             C154146 * C581) *
                C24168 +
            (C30715 + C30716 + C30717) * C24169 + C30728 * C154143) *
               C153712 * C154094 -
           (C33113 * C154143 + (C31733 + C31734 + C31735) * C24169 +
            (C7059 * C2272 + C7696 + C7696 + C154146 * C2282 + C7057 * C557 +
             C7697 + C7697 + C154171 * C581 + C7055 * C556 + C7698 + C7698 +
             C154182 * C580) *
                C24168) *
               C153712 * C153847) *
              C154164 +
          (((C31735 + C31734 + C31733) * C24168 +
            (C31732 + C31731 + C31730) * C24169 +
            (C33120 + C33121 + C33122) * C154143) *
               C153712 * C153847 -
           (C32113 * C154143 + (C30720 + C30719 + C30718) * C24169 +
            (C30717 + C30716 + C30715) * C24168) *
               C153712 * C154094) *
              C154165 +
          ((C30728 * C24168 + (C30723 + C30722 + C30721) * C24169 +
            (C32120 + C32121 + C32122) * C154143) *
               C153712 * C154094 -
           ((C7059 * C29880 + C33110 + C33110 + C154146 * C29884 +
             C7057 * C28358 + C33111 + C33111 + C154171 * C28362 +
             C7055 * C5559 + C33112 + C33112 + C154182 * C5565) *
                C154143 +
            (C33122 + C33121 + C33120) * C24169 + C33113 * C24168) *
               C153712 * C153847) *
              C1629) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C46971 * C136 + C46978 + C46978 + C46968 * C152 + C46973 * C556 +
             C46979 + C46979 + C46969 * C580 + C46975 * C557 + C46980 + C46980 +
             C154146 * C581) *
                C153865 * C154178 +
            (C47044 + C47045 + C47046) * C153865 * C154159 + C47060 * C154130) *
               C154094 -
           (C48137 * C154130 + (C47657 + C47658 + C47659) * C153865 * C154159 +
            (C46975 * C2272 + C47600 + C47600 + C154146 * C2282 +
             C46973 * C557 + C47601 + C47601 + C46969 * C581 + C46971 * C556 +
             C47602 + C47602 + C46968 * C580) *
                C153865 * C154178) *
               C153847) *
              C154164 +
          (((C46971 * C1081 + C48434 + C48434 + C46968 * C1093 +
             C46973 * C1489 + C48435 + C48435 + C46969 * C1499 +
             C46975 * C6161 + C48436 + C48436 + C154146 * C6173) *
                C153865 * C154178 +
            (C48470 + C48471 + C48472) * C153865 * C154159 +
            (C48473 + C48474 + C48475) * C153865 * C154130) *
               C153847 -
           (C47898 * C154130 + (C47355 + C47356 + C47357) * C153865 * C154159 +
            (C46975 * C1489 + C47298 + C47298 + C154146 * C1499 +
             C46973 * C1081 + C47299 + C47299 + C46969 * C1093 + C46971 * C335 +
             C47300 + C47300 + C46968 * C359) *
                C153865 * C154178) *
               C154094) *
              C154165 +
          (((C46971 * C336 + C47301 + C47301 + C46968 * C360 + C46973 * C1920 +
             C47302 + C47302 + C46969 * C1930 + C46975 * C3369 + C47303 +
             C47303 + C154146 * C3377) *
                C153865 * C154178 +
            (C47358 + C47359 + C47360) * C153865 * C154159 +
            (C47361 + C47362 + C47363) * C153865 * C154130) *
               C154094 -
           ((C46975 * C6156 + C49802 + C49802 + C154146 * C6168 +
             C46973 * C3371 + C49803 + C49803 + C46969 * C3379 +
             C46971 * C1918 + C49804 + C49804 + C46968 * C1928) *
                C153865 * C154130 +
            (C46975 * C6158 + C49805 + C49805 + C154146 * C6170 +
             C46973 * C3370 + C49806 + C49806 + C46969 * C3378 +
             C46971 * C1919 + C49807 + C49807 + C46968 * C1929) *
                C153865 * C154159 +
            (C46975 * C6160 + C49808 + C49808 + C154146 * C6172 +
             C46973 * C3369 + C49809 + C49809 + C46969 * C3377 +
             C46971 * C1920 + C49810 + C49810 + C46968 * C1930) *
                C153865 * C154178) *
               C153847) *
              C1629) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C46971 * C136 + C46978 + C46978 + C46968 * C152 + C46973 * C556 +
             C46979 + C46979 + C46969 * C580 + C46975 * C557 + C46980 + C46980 +
             C154146 * C581) *
                C154181 +
            (C51548 + C51549 + C51550) * C154169 + C51561 * C154143) *
               C153712 * C154094 -
           (C53934 * C154143 + (C52557 + C52558 + C52559) * C154169 +
            (C46975 * C2272 + C47600 + C47600 + C154146 * C2282 +
             C46973 * C557 + C47601 + C47601 + C46969 * C581 + C46971 * C556 +
             C47602 + C47602 + C46968 * C580) *
                C154181) *
               C153712 * C153847) *
              C154164 +
          (((C52559 + C52558 + C52557) * C154181 +
            (C52556 + C52555 + C52554) * C154169 +
            (C53941 + C53942 + C53943) * C154143) *
               C153712 * C153847 -
           (C52937 * C154143 + (C51553 + C51552 + C51551) * C154169 +
            (C51550 + C51549 + C51548) * C154181) *
               C153712 * C154094) *
              C154165 +
          ((C51561 * C154181 + (C51556 + C51555 + C51554) * C154169 +
            (C52944 + C52945 + C52946) * C154143) *
               C153712 * C154094 -
           ((C46975 * C29880 + C53931 + C53931 + C154146 * C29884 +
             C46973 * C28358 + C53932 + C53932 + C46969 * C28362 +
             C46971 * C5559 + C53933 + C53933 + C46968 * C5565) *
                C154143 +
            (C53943 + C53942 + C53941) * C154169 + C53934 * C154181) *
               C153712 * C153847) *
              C1629) *
         C153748) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C55344 * C136 + C55355 + C55355 + C55339 * C152 + C55346 * C556 +
            C55356 + C55356 + C55340 * C580 + C55348 * C557 + C55357 + C55357 +
            C55341 * C581 + C55350 * C2272 + C55358 + C55358 + C55342 * C2282 +
            C55352 * C7665 + C55359 + C55359 + C55343 * C7673) *
               C153865 * C153712 * C154094 -
           (C55352 * C10502 + C55645 + C55645 + C55343 * C10508 +
            C55350 * C7665 + C55646 + C55646 + C55342 * C7673 + C55348 * C2272 +
            C55647 + C55647 + C55341 * C2282 + C55346 * C557 + C55648 + C55648 +
            C55340 * C581 + C55344 * C556 + C55649 + C55649 + C55339 * C580) *
               C153865 * C153712 * C153847) *
              C154164 +
          ((C55344 * C1081 + C56084 + C56084 + C55339 * C1093 + C55346 * C1489 +
            C56085 + C56085 + C55340 * C1499 + C55348 * C6161 + C56086 +
            C56086 + C55341 * C6173 + C55350 * C9167 + C56087 + C56087 +
            C55342 * C9173 + C55352 * C33705 + C56088 + C56088 +
            C55343 * C33709) *
               C153865 * C153712 * C153847 -
           (C55352 * C9167 + C55497 + C55497 + C55343 * C9173 + C55350 * C6161 +
            C55498 + C55498 + C55342 * C6173 + C55348 * C1489 + C55499 +
            C55499 + C55341 * C1499 + C55346 * C1081 + C55500 + C55500 +
            C55340 * C1093 + C55344 * C335 + C55501 + C55501 + C55339 * C359) *
               C153865 * C153712 * C154094) *
              C154165 +
          ((C55344 * C336 + C55502 + C55502 + C55339 * C360 + C55346 * C1920 +
            C55503 + C55503 + C55340 * C1930 + C55348 * C3369 + C55504 +
            C55504 + C55341 * C3377 + C55350 * C6160 + C55505 + C55505 +
            C55342 * C6172 + C55352 * C30946 + C55506 + C55506 +
            C55343 * C30950) *
               C153865 * C153712 * C154094 -
           (C55352 * C33704 + C56839 + C56839 + C55343 * C33708 +
            C55350 * C30946 + C56840 + C56840 + C55342 * C30950 +
            C55348 * C6160 + C56841 + C56841 + C55341 * C6172 + C55346 * C3369 +
            C56842 + C56842 + C55340 * C3377 + C55344 * C1920 + C56843 +
            C56843 + C55339 * C1930) *
               C153865 * C153712 * C153847) *
              C1629) *
         C153748) /
            (p * q * std::sqrt(p + q));
    d2ee[187] +=
        (-0.25 * std::pow(Pi, 2.5) *
             ((((C134 * C136 + C161 + C161 + C153882 * C152) * C153865 * C123 +
                C199 * C124 + C200 * C125 + C201 * C126 + C202 * C127) *
                   C153783 * C1251 -
               (C420 * C127 + C421 * C126 + C422 * C125 + C423 * C124 +
                (C134 * C335 + C380 + C380 + C153882 * C359) * C153865 * C123) *
                   C153783 * C153819) *
                  C1253 +
              ((C423 * C123 + C422 * C124 + C421 * C125 + C420 * C126 +
                C785 * C127) *
                   C153783 * C153819 -
               (C203 * C127 + C202 * C126 + C201 * C125 + C200 * C124 +
                C199 * C123) *
                   C153783 * C1251) *
                  C1254 +
              ((C200 * C123 + C201 * C124 + C202 * C125 + C203 * C126 +
                C204 * C127) *
                   C153783 * C1251 -
               ((C134 * C775 + C781 + C781 + C153882 * C777) * C153865 * C127 +
                C785 * C126 + C420 * C125 + C421 * C124 + C422 * C123) *
                   C153783 * C153819) *
                  C1255) -
         0.25 * std::pow(Pi, 2.5) *
             (((C134 * C136 + C161 + C161 + C153882 * C152) * C153865 * C123 +
               C199 * C124 + C200 * C125 + C201 * C126 + C202 * C127) *
                  C153783 * C1338 -
              (C420 * C127 + C421 * C126 + C422 * C125 + C423 * C124 +
               (C134 * C335 + C380 + C380 + C153882 * C359) * C153865 * C123) *
                  C153783 * C1339 +
              ((C134 * C336 + C381 + C381 + C153882 * C360) * C153865 * C123 +
               C424 * C124 + C425 * C125 + C426 * C126 + C427 * C127) *
                  C153783 * C1340 -
              ((C134 * C1343 + C1359 + C1359 + C153882 * C1353) * C153865 *
                   C127 +
               (C134 * C1344 + C1360 + C1360 + C153882 * C1354) * C153865 *
                   C126 +
               (C134 * C1345 + C1361 + C1361 + C153882 * C1355) * C153865 *
                   C125 +
               (C134 * C1346 + C1362 + C1362 + C153882 * C1356) * C153865 *
                   C124 +
               (C134 * C1347 + C1363 + C1363 + C153882 * C1357) * C153865 *
                   C123) *
                  C153783 * C1341) *
             C153748 +
         0.5 * std::pow(Pi, 2.5) *
             ((((C134 * C136 + C161 + C161 + C153882 * C152) * C153865 * C123 +
                C199 * C124 + C200 * C125 + C201 * C126 + C202 * C127) *
                   C549 -
               (C641 * C127 + C642 * C126 + C643 * C125 + C644 * C124 +
                (C134 * C556 + C601 + C601 + C153882 * C580) * C153865 * C123) *
                   C550 +
               ((C134 * C557 + C602 + C602 + C153882 * C581) * C153865 * C123 +
                C645 * C124 + C646 * C125 + C647 * C126 + C648 * C127) *
                   C551) *
                  C1251 +
              (((C134 * C1081 + C1100 + C1100 + C153882 * C1093) * C153865 *
                    C123 +
                C1126 * C124 + C1127 * C125 + C1128 * C126 + C1129 * C127) *
                   C550 -
               (C420 * C127 + C421 * C126 + C422 * C125 + C423 * C124 +
                (C134 * C335 + C380 + C380 + C153882 * C359) * C153865 * C123) *
                   C549 -
               ((C134 * C1485 + C1501 + C1501 + C153882 * C1495) * C153865 *
                    C127 +
                (C134 * C1486 + C1502 + C1502 + C153882 * C1496) * C153865 *
                    C126 +
                (C134 * C1487 + C1503 + C1503 + C153882 * C1497) * C153865 *
                    C125 +
                (C134 * C1488 + C1504 + C1504 + C153882 * C1498) * C153865 *
                    C124 +
                (C134 * C1489 + C1505 + C1505 + C153882 * C1499) * C153865 *
                    C123) *
                   C551) *
                  C153819) *
             C153748 -
         0.25 * std::pow(Pi, 2.5) *
             (((((C134 * C136 + C161 + C161 + C153882 * C152) * C154181 +
                 C3138 * C154169 + C3139 * C154143) *
                    C2846 +
                (C2850 + C2851 + C2852) * C2847 + C2864 * C154130) *
                   C153783 * C1251 -
               (C3650 * C154130 + (C3147 + C3106 + C3107) * C2847 +
                (C3142 * C154143 + C3139 * C154169 + C3138 * C154181) * C2846) *
                   C153783 * C153819) *
                  C1253 +
              (((C3107 + C3106 + C3147) * C2846 +
                (C3103 + C3102 + C3146) * C2847 +
                (C3647 + C3648 + C3649) * C154130) *
                   C153783 * C153819 -
               (C2865 * C154130 + (C2855 + C2854 + C2853) * C2847 +
                (C2852 + C2851 + C2850) * C2846) *
                   C153783 * C1251) *
                  C1254 +
              ((C2864 * C2846 + (C2858 + C2857 + C2856) * C2847 +
                (C2859 + C2860 + C2861) * C154130) *
                   C153783 * C1251 -
               (((C134 * C1343 + C1359 + C1359 + C153882 * C1353) * C154143 +
                 C419 * C154169 + C412 * C154181) *
                    C154130 +
                (C3649 + C3648 + C3647) * C2847 + C3650 * C2846) *
                   C153783 * C153819) *
                  C1255) -
         0.25 * std::pow(Pi, 2.5) *
             ((((C134 * C136 + C161 + C161 + C153882 * C152) * C154181 +
                C3138 * C154169 + C3139 * C154143) *
                   C2846 +
               (C2850 + C2851 + C2852) * C2847 + C2864 * C154130) *
                  C153783 * C1338 -
              (C3650 * C154130 + (C3147 + C3106 + C3107) * C2847 +
               (C3142 * C154143 + C3139 * C154169 + C3138 * C154181) * C2846) *
                  C153783 * C1339 +
              ((C3139 * C154181 + C3142 * C154169 + C4591 * C154143) * C2846 +
               (C3111 + C3148 + C3149) * C2847 +
               (C3115 + C3150 + C3151) * C154130) *
                  C153783 * C1340 -
              (((C134 * C4574 + C4586 + C4586 + C153882 * C4580) * C154143 +
                C3144 * C154169 + C3140 * C154181) *
                   C154130 +
               ((C134 * C4575 + C4587 + C4587 + C153882 * C4581) * C154143 +
                C3143 * C154169 + C3141 * C154181) *
                   C2847 +
               ((C134 * C4576 + C4588 + C4588 + C153882 * C4582) * C154143 +
                C4591 * C154169 + C3142 * C154181) *
                   C2846) *
                  C153783 * C1341) *
             C153748 +
         0.5 * std::pow(Pi, 2.5) *
             (((((C134 * C136 + C161 + C161 + C153882 * C152) * C154181 +
                 C3138 * C154169 + C3139 * C154143) *
                    C2846 +
                (C2850 + C2851 + C2852) * C2847 + C2864 * C154130) *
                   C549 -
               (C3874 * C154130 + (C3423 + C3388 + C3389) * C2847 +
                (C4205 * C154143 + C4206 * C154169 +
                 (C134 * C556 + C601 + C601 + C153882 * C580) * C154181) *
                    C2846) *
                   C550 +
               (((C134 * C557 + C602 + C602 + C153882 * C581) * C154181 +
                 C4830 * C154169 + C4831 * C154143) *
                    C2846 +
                (C3391 + C3424 + C3425) * C2847 +
                (C3397 + C3426 + C3427) * C154130) *
                   C551) *
                  C1251 +
              (((C4206 * C154181 + C4205 * C154169 +
                 (C134 * C4168 + C4185 + C4185 + C153882 * C4176) * C154143) *
                    C2846 +
                (C4186 + C4187 + C4209) * C2847 +
                (C4191 + C4192 + C4210) * C154130) *
                   C550 -
               (C3650 * C154130 + (C3147 + C3106 + C3107) * C2847 +
                (C3142 * C154143 + C3139 * C154169 + C3138 * C154181) * C2846) *
                   C549 -
               (((C134 * C4809 + C4823 + C4823 + C153882 * C4815) * C154143 +
                 C3421 * C154169 + C3420 * C154181) *
                    C154130 +
                ((C134 * C4810 + C4824 + C4824 + C153882 * C4816) * C154143 +
                 C3419 * C154169 + C3418 * C154181) *
                    C2847 +
                ((C134 * C4811 + C4825 + C4825 + C153882 * C4817) * C154143 +
                 C4831 * C154169 + C4830 * C154181) *
                    C2846) *
                   C551) *
                  C153819) *
             C153748 +
         0.5 * std::pow(Pi, 2.5) *
             ((((C7055 * C136 + C7062 + C7062 + C154182 * C152 + C7057 * C556 +
                 C7063 + C7063 + C154171 * C580 + C7059 * C557 + C7064 + C7064 +
                 C154146 * C581) *
                    C153865 * C2846 +
                (C7128 + C7129 + C7130) * C153865 * C2847 + C7144 * C154130) *
                   C153783 * C1251 -
               (C7994 * C154130 + (C7439 + C7440 + C7441) * C153865 * C2847 +
                (C7059 * C1489 + C7382 + C7382 + C154146 * C1499 +
                 C7057 * C1081 + C7383 + C7383 + C154171 * C1093 +
                 C7055 * C335 + C7384 + C7384 + C154182 * C359) *
                    C153865 * C2846) *
                   C153783 * C153819) *
                  C1253 +
              (((C7441 + C7440 + C7439) * C153865 * C2846 +
                (C7438 + C7437 + C7436) * C153865 * C2847 +
                (C7998 + C7999 + C8000) * C153865 * C154130) *
                   C153783 * C153819 -
               (C7145 * C154130 + (C7133 + C7132 + C7131) * C153865 * C2847 +
                (C7130 + C7129 + C7128) * C153865 * C2846) *
                   C153783 * C1251) *
                  C1254 +
              ((C7144 * C2846 + (C7136 + C7135 + C7134) * C153865 * C2847 +
                (C7137 + C7138 + C7139) * C153865 * C154130) *
                   C153783 * C1251 -
               ((C7059 * C1485 + C7987 + C7987 + C154146 * C1495 +
                 C7057 * C1085 + C7988 + C7988 + C154171 * C1097 +
                 C7055 * C331 + C7989 + C7989 + C154182 * C355) *
                    C153865 * C154130 +
                (C8000 + C7999 + C7998) * C153865 * C2847 + C7994 * C2846) *
                   C153783 * C153819) *
                  C1255) +
         0.5 * std::pow(Pi, 2.5) *
             (((C7055 * C136 + C7062 + C7062 + C154182 * C152 + C7057 * C556 +
                C7063 + C7063 + C154171 * C580 + C7059 * C557 + C7064 + C7064 +
                C154146 * C581) *
                   C153865 * C2846 +
               (C7128 + C7129 + C7130) * C153865 * C2847 + C7144 * C154130) *
                  C153783 * C1338 -
              (C7994 * C154130 + (C7439 + C7440 + C7441) * C153865 * C2847 +
               (C7059 * C1489 + C7382 + C7382 + C154146 * C1499 +
                C7057 * C1081 + C7383 + C7383 + C154171 * C1093 + C7055 * C335 +
                C7384 + C7384 + C154182 * C359) *
                   C153865 * C2846) *
                  C153783 * C1339 +
              ((C7055 * C336 + C7385 + C7385 + C154182 * C360 + C7057 * C1920 +
                C7386 + C7386 + C154171 * C1930 + C7059 * C3369 + C7387 +
                C7387 + C154146 * C3377) *
                   C153865 * C2846 +
               (C7442 + C7443 + C7444) * C153865 * C2847 +
               (C7445 + C7446 + C7447) * C153865 * C154130) *
                  C153783 * C1340 -
              ((C7059 * C4809 + C8939 + C8939 + C154146 * C4815 +
                C7057 * C4170 + C8940 + C8940 + C154171 * C4178 +
                C7055 * C1345 + C8941 + C8941 + C154182 * C1355) *
                   C153865 * C154130 +
               (C7059 * C4810 + C8942 + C8942 + C154146 * C4816 +
                C7057 * C4169 + C8943 + C8943 + C154171 * C4177 +
                C7055 * C1346 + C8944 + C8944 + C154182 * C1356) *
                   C153865 * C2847 +
               (C7059 * C4811 + C8945 + C8945 + C154146 * C4817 +
                C7057 * C4168 + C8946 + C8946 + C154171 * C4176 +
                C7055 * C1347 + C8947 + C8947 + C154182 * C1357) *
                   C153865 * C2846) *
                  C153783 * C1341) *
             C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C7055 * C136 + C7062 + C7062 + C154182 * C152 + C7057 * C556 +
             C7063 + C7063 + C154171 * C580 + C7059 * C557 + C7064 + C7064 +
             C154146 * C581) *
                C153865 * C2846 +
            (C7128 + C7129 + C7130) * C153865 * C2847 + C7144 * C154130) *
               C549 -
           (C8233 * C154130 + (C7753 + C7754 + C7755) * C153865 * C2847 +
            (C7059 * C2272 + C7696 + C7696 + C154146 * C2282 + C7057 * C557 +
             C7697 + C7697 + C154171 * C581 + C7055 * C556 + C7698 + C7698 +
             C154182 * C580) *
                C153865 * C2846) *
               C550 +
           ((C7055 * C557 + C7699 + C7699 + C154182 * C581 + C7057 * C2272 +
             C7700 + C7700 + C154171 * C2282 + C7059 * C7665 + C7701 + C7701 +
             C154146 * C7673) *
                C153865 * C2846 +
            (C7756 + C7757 + C7758) * C153865 * C2847 +
            (C7759 + C7760 + C7761) * C153865 * C154130) *
               C551) *
              C1251 +
          (((C7055 * C1081 + C8533 + C8533 + C154182 * C1093 + C7057 * C1489 +
             C8534 + C8534 + C154171 * C1499 + C7059 * C6161 + C8535 + C8535 +
             C154146 * C6173) *
                C153865 * C2846 +
            (C8569 + C8570 + C8571) * C153865 * C2847 +
            (C8572 + C8573 + C8574) * C153865 * C154130) *
               C550 -
           (C7994 * C154130 + (C7439 + C7440 + C7441) * C153865 * C2847 +
            (C7059 * C1489 + C7382 + C7382 + C154146 * C1499 + C7057 * C1081 +
             C7383 + C7383 + C154171 * C1093 + C7055 * C335 + C7384 + C7384 +
             C154182 * C359) *
                C153865 * C2846) *
               C549 -
           ((C7059 * C9165 + C9175 + C9175 + C154146 * C9171 + C7057 * C6157 +
             C9176 + C9176 + C154171 * C6169 + C7055 * C1487 + C9177 + C9177 +
             C154182 * C1497) *
                C153865 * C154130 +
            (C7059 * C9166 + C9178 + C9178 + C154146 * C9172 + C7057 * C6159 +
             C9179 + C9179 + C154171 * C6171 + C7055 * C1488 + C9180 + C9180 +
             C154182 * C1498) *
                C153865 * C2847 +
            (C7059 * C9167 + C9181 + C9181 + C154146 * C9173 + C7057 * C6161 +
             C9182 + C9182 + C154171 * C6173 + C7055 * C1489 + C9183 + C9183 +
             C154182 * C1499) *
                C153865 * C2846) *
               C551) *
              C153819) *
         C153748) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C24168 +
             C3138 * C24169 + C3139 * C154143) *
                C154178 +
            (C24175 + C24176 + C24177) * C154159 + C24189 * C154130) *
               C153783 * C1251 -
           (C24873 * C154130 + (C24412 + C24413 + C24414) * C154159 +
            (C3142 * C154143 + C3139 * C24169 + C3138 * C24168) * C154178) *
               C153783 * C153819) *
              C1253 +
          (((C24414 + C24413 + C24412) * C154178 +
            (C24411 + C24410 + C24409) * C154159 +
            (C24870 + C24871 + C24872) * C154130) *
               C153783 * C153819 -
           (C24190 * C154130 + (C24180 + C24179 + C24178) * C154159 +
            (C24177 + C24176 + C24175) * C154178) *
               C153783 * C1251) *
              C1254 +
          ((C24189 * C154178 + (C24183 + C24182 + C24181) * C154159 +
            (C24184 + C24185 + C24186) * C154130) *
               C153783 * C1251 -
           (((C134 * C1343 + C1359 + C1359 + C153882 * C1353) * C154143 +
             C419 * C24169 + C412 * C24168) *
                C154130 +
            (C24872 + C24871 + C24870) * C154159 + C24873 * C154178) *
               C153783 * C153819) *
              C1255)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C24168 +
            C3138 * C24169 + C3139 * C154143) *
               C154178 +
           (C24175 + C24176 + C24177) * C154159 + C24189 * C154130) *
              C153783 * C1338 -
          (C24873 * C154130 + (C24412 + C24413 + C24414) * C154159 +
           (C3142 * C154143 + C3139 * C24169 + C3138 * C24168) * C154178) *
              C153783 * C1339 +
          ((C3139 * C24168 + C3142 * C24169 + C4591 * C154143) * C154178 +
           (C24415 + C24416 + C24417) * C154159 +
           (C24418 + C24419 + C24420) * C154130) *
              C153783 * C1340 -
          (((C134 * C4574 + C4586 + C4586 + C153882 * C4580) * C154143 +
            C3144 * C24169 + C3140 * C24168) *
               C154130 +
           ((C134 * C4575 + C4587 + C4587 + C153882 * C4581) * C154143 +
            C3143 * C24169 + C3141 * C24168) *
               C154159 +
           ((C134 * C4576 + C4588 + C4588 + C153882 * C4582) * C154143 +
            C4591 * C24169 + C3142 * C24168) *
               C154178) *
              C153783 * C1341) *
         C153748) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C24168 +
             C3138 * C24169 + C3139 * C154143) *
                C154178 +
            (C24175 + C24176 + C24177) * C154159 + C24189 * C154130) *
               C549 -
           (C25096 * C154130 + (C24642 + C24643 + C24644) * C154159 +
            (C4205 * C154143 + C4206 * C24169 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C24168) *
                C154178) *
               C550 +
           (((C134 * C557 + C602 + C602 + C153882 * C581) * C24168 +
             C4830 * C24169 + C4831 * C154143) *
                C154178 +
            (C24645 + C24646 + C24647) * C154159 +
            (C24648 + C24649 + C24650) * C154130) *
               C551) *
              C1251 +
          (((C4206 * C24168 + C4205 * C24169 + C5574 * C154143) * C154178 +
            (C25387 + C25388 + C25389) * C154159 +
            (C25390 + C25391 + C25392) * C154130) *
               C550 -
           (C24873 * C154130 + (C24412 + C24413 + C24414) * C154159 +
            (C3142 * C154143 + C3139 * C24169 + C3138 * C24168) * C154178) *
               C549 -
           (((C134 * C4809 + C4823 + C4823 + C153882 * C4815) * C154143 +
             C3421 * C24169 + C3420 * C24168) *
                C154130 +
            ((C134 * C4810 + C4824 + C4824 + C153882 * C4816) * C154143 +
             C3419 * C24169 + C3418 * C24168) *
                C154159 +
            ((C134 * C4811 + C4825 + C4825 + C153882 * C4817) * C154143 +
             C4831 * C24169 + C4830 * C24168) *
                C154178) *
               C551) *
              C153819) *
         C153748) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C28090 +
            C3138 * C28091 + C3139 * C28092 + C3142 * C28093 + C4591 * C28094) *
               C153712 * C153783 * C1251 -
           (C28235 * C28094 + C4591 * C28093 + C3142 * C28092 + C3139 * C28091 +
            C3138 * C28090) *
               C153712 * C153783 * C153819) *
              C1253 +
          ((C415 * C28090 + C416 * C28091 + C3141 * C28092 + C3143 * C28093 +
            C28236 * C28094) *
               C153712 * C153783 * C153819 -
           (C3143 * C28094 + C3141 * C28093 + C416 * C28092 + C415 * C28091 +
            C193 * C28090) *
               C153712 * C153783 * C1251) *
              C1254 +
          ((C194 * C28090 + C414 * C28091 + C417 * C28092 + C3140 * C28093 +
            C3144 * C28094) *
               C153712 * C153783 * C1251 -
           ((C134 * C4574 + C4586 + C4586 + C153882 * C4580) * C28094 +
            C3144 * C28093 + C3140 * C28092 + C417 * C28091 + C414 * C28090) *
               C153712 * C153783 * C153819) *
              C1255)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         (((C134 * C136 + C161 + C161 + C153882 * C152) * C28090 +
           C3138 * C28091 + C3139 * C28092 + C3142 * C28093 + C4591 * C28094) *
              C153712 * C153783 * C1338 -
          (C28235 * C28094 + C4591 * C28093 + C3142 * C28092 + C3139 * C28091 +
           C3138 * C28090) *
              C153712 * C153783 * C1339 +
          (C3139 * C28090 + C3142 * C28091 + C4591 * C28092 + C28235 * C28093 +
           C29003 * C28094) *
              C153712 * C153783 * C1340 -
          ((C134 * C28994 + C29000 + C29000 + C153882 * C28996) * C28094 +
           C29003 * C28093 + C28235 * C28092 + C4591 * C28091 +
           C3142 * C28090) *
              C153712 * C153783 * C1341) *
         C153748) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C28090 +
            C3138 * C28091 + C3139 * C28092 + C3142 * C28093 + C4591 * C28094) *
               C153712 * C549 -
           (C28789 * C28094 + C5574 * C28093 + C4205 * C28092 + C4206 * C28091 +
            (C134 * C556 + C601 + C601 + C153882 * C580) * C28090) *
               C153712 * C550 +
           ((C134 * C557 + C602 + C602 + C153882 * C581) * C28090 +
            C4830 * C28091 + C4831 * C28092 + C29138 * C28093 +
            C29139 * C28094) *
               C153712 * C551) *
              C1251 +
          ((C4206 * C28090 + C4205 * C28091 + C5574 * C28092 + C28789 * C28093 +
            (C134 * C28772 + C28781 + C28781 + C153882 * C28776) * C28094) *
               C153712 * C550 -
           (C28235 * C28094 + C4591 * C28093 + C3142 * C28092 + C3139 * C28091 +
            C3138 * C28090) *
               C153712 * C549 -
           ((C134 * C29125 + C29133 + C29133 + C153882 * C29127) * C28094 +
            C29139 * C28093 + C29138 * C28092 + C4831 * C28091 +
            C4830 * C28090) *
               C153712 * C551) *
              C153819) *
         C153748) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C7055 * C136 + C7062 + C7062 + C154182 * C152 + C7057 * C556 +
             C7063 + C7063 + C154171 * C580 + C7059 * C557 + C7064 + C7064 +
             C154146 * C581) *
                C24168 +
            (C30715 + C30716 + C30717) * C24169 + C30728 * C154143) *
               C153712 * C153783 * C1251 -
           ((C30721 + C30722 + C30723) * C154143 +
            (C30720 + C30719 + C30718) * C24169 +
            (C30717 + C30716 + C30715) * C24168) *
               C153712 * C153783 * C153819) *
              C1253 +
          (((C7441 + C7440 + C7439) * C24168 +
            (C7442 + C7443 + C7444) * C24169 +
            (C30724 + C30725 + C30726) * C154143) *
               C153712 * C153783 * C153819 -
           (C30702 * C154143 + (C7439 + C7440 + C7441) * C24169 +
            (C7130 + C7129 + C7128) * C24168) *
               C153712 * C153783 * C1251) *
              C1254 +
          ((C7142 * C24168 + (C7438 + C7437 + C7436) * C24169 +
            (C7445 + C7446 + C7447) * C154143) *
               C153712 * C153783 * C1251 -
           ((C7059 * C4809 + C8939 + C8939 + C154146 * C4815 + C7057 * C4170 +
             C8940 + C8940 + C154171 * C4178 + C7055 * C1345 + C8941 + C8941 +
             C154182 * C1355) *
                C154143 +
            (C7447 + C7446 + C7445) * C24169 + C7990 * C24168) *
               C153712 * C153783 * C153819) *
              C1255)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C7055 * C136 + C7062 + C7062 + C154182 * C152 + C7057 * C556 +
            C7063 + C7063 + C154171 * C580 + C7059 * C557 + C7064 + C7064 +
            C154146 * C581) *
               C24168 +
           (C30715 + C30716 + C30717) * C24169 + C30728 * C154143) *
              C153712 * C153783 * C1338 -
          (C32113 * C154143 + (C30720 + C30719 + C30718) * C24169 +
           (C30717 + C30716 + C30715) * C24168) *
              C153712 * C153783 * C1339 +
          (C30728 * C24168 + (C30723 + C30722 + C30721) * C24169 +
           (C32120 + C32121 + C32122) * C154143) *
              C153712 * C153783 * C1340 -
          ((C7059 * C29125 + C32110 + C32110 + C154146 * C29127 +
            C7057 * C28772 + C32111 + C32111 + C154171 * C28776 +
            C7055 * C4576 + C32112 + C32112 + C154182 * C4582) *
               C154143 +
           (C32122 + C32121 + C32120) * C24169 + C32113 * C24168) *
              C153712 * C153783 * C1341) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C7055 * C136 + C7062 + C7062 + C154182 * C152 + C7057 * C556 +
             C7063 + C7063 + C154171 * C580 + C7059 * C557 + C7064 + C7064 +
             C154146 * C581) *
                C24168 +
            (C30715 + C30716 + C30717) * C24169 + C30728 * C154143) *
               C153712 * C549 -
           ((C31730 + C31731 + C31732) * C154143 +
            (C31733 + C31734 + C31735) * C24169 +
            (C7059 * C2272 + C7696 + C7696 + C154146 * C2282 + C7057 * C557 +
             C7697 + C7697 + C154171 * C581 + C7055 * C556 + C7698 + C7698 +
             C154182 * C580) *
                C24168) *
               C153712 * C550 +
           ((C7055 * C557 + C7699 + C7699 + C154182 * C581 + C7057 * C2272 +
             C7700 + C7700 + C154171 * C2282 + C7059 * C7665 + C7701 + C7701 +
             C154146 * C7673) *
                C24168 +
            (C32371 + C32372 + C32373) * C24169 +
            (C32374 + C32375 + C32376) * C154143) *
               C153712 * C551) *
              C1251 +
          (((C31735 + C31734 + C31733) * C24168 +
            (C31732 + C31731 + C31730) * C24169 +
            (C7055 * C4168 + C31700 + C31700 + C154182 * C4176 + C7057 * C4811 +
             C31701 + C31701 + C154171 * C4817 + C7059 * C29881 + C31702 +
             C31702 + C154146 * C29885) *
                C154143) *
               C153712 * C550 -
           (C32113 * C154143 + (C30720 + C30719 + C30718) * C24169 +
            (C30717 + C30716 + C30715) * C24168) *
               C153712 * C549 -
           ((C7059 * C32340 + C32356 + C32356 + C154146 * C32342 +
             C7057 * C29881 + C32357 + C32357 + C154171 * C29885 +
             C7055 * C4811 + C32358 + C32358 + C154182 * C4817) *
                C154143 +
            (C32376 + C32375 + C32374) * C24169 +
            (C32373 + C32372 + C32371) * C24168) *
               C153712 * C551) *
              C153819) *
         C153748) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C46971 * C136 + C46978 + C46978 + C46968 * C152 + C46973 * C556 +
             C46979 + C46979 + C46969 * C580 + C46975 * C557 + C46980 + C46980 +
             C154146 * C581) *
                C153865 * C154178 +
            (C47044 + C47045 + C47046) * C153865 * C154159 + C47060 * C154130) *
               C153783 * C1251 -
           (C47898 * C154130 + (C47355 + C47356 + C47357) * C153865 * C154159 +
            (C46975 * C1489 + C47298 + C47298 + C154146 * C1499 +
             C46973 * C1081 + C47299 + C47299 + C46969 * C1093 + C46971 * C335 +
             C47300 + C47300 + C46968 * C359) *
                C153865 * C154178) *
               C153783 * C153819) *
              C1253 +
          (((C47357 + C47356 + C47355) * C153865 * C154178 +
            (C47354 + C47353 + C47352) * C153865 * C154159 +
            (C47902 + C47903 + C47904) * C153865 * C154130) *
               C153783 * C153819 -
           (C47061 * C154130 + (C47049 + C47048 + C47047) * C153865 * C154159 +
            (C47046 + C47045 + C47044) * C153865 * C154178) *
               C153783 * C1251) *
              C1254 +
          ((C47060 * C154178 + (C47052 + C47051 + C47050) * C153865 * C154159 +
            (C47053 + C47054 + C47055) * C153865 * C154130) *
               C153783 * C1251 -
           ((C46975 * C1485 + C47891 + C47891 + C154146 * C1495 +
             C46973 * C1085 + C47892 + C47892 + C46969 * C1097 + C46971 * C331 +
             C47893 + C47893 + C46968 * C355) *
                C153865 * C154130 +
            (C47904 + C47903 + C47902) * C153865 * C154159 + C47898 * C154178) *
               C153783 * C153819) *
              C1255)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C46971 * C136 + C46978 + C46978 + C46968 * C152 + C46973 * C556 +
            C46979 + C46979 + C46969 * C580 + C46975 * C557 + C46980 + C46980 +
            C154146 * C581) *
               C153865 * C154178 +
           (C47044 + C47045 + C47046) * C153865 * C154159 + C47060 * C154130) *
              C153783 * C1338 -
          (C47898 * C154130 + (C47355 + C47356 + C47357) * C153865 * C154159 +
           (C46975 * C1489 + C47298 + C47298 + C154146 * C1499 +
            C46973 * C1081 + C47299 + C47299 + C46969 * C1093 + C46971 * C335 +
            C47300 + C47300 + C46968 * C359) *
               C153865 * C154178) *
              C153783 * C1339 +
          ((C46971 * C336 + C47301 + C47301 + C46968 * C360 + C46973 * C1920 +
            C47302 + C47302 + C46969 * C1930 + C46975 * C3369 + C47303 +
            C47303 + C154146 * C3377) *
               C153865 * C154178 +
           (C47358 + C47359 + C47360) * C153865 * C154159 +
           (C47361 + C47362 + C47363) * C153865 * C154130) *
              C153783 * C1340 -
          ((C46975 * C4809 + C48840 + C48840 + C154146 * C4815 +
            C46973 * C4170 + C48841 + C48841 + C46969 * C4178 + C46971 * C1345 +
            C48842 + C48842 + C46968 * C1355) *
               C153865 * C154130 +
           (C46975 * C4810 + C48843 + C48843 + C154146 * C4816 +
            C46973 * C4169 + C48844 + C48844 + C46969 * C4177 + C46971 * C1346 +
            C48845 + C48845 + C46968 * C1356) *
               C153865 * C154159 +
           (C46975 * C4811 + C48846 + C48846 + C154146 * C4817 +
            C46973 * C4168 + C48847 + C48847 + C46969 * C4176 + C46971 * C1347 +
            C48848 + C48848 + C46968 * C1357) *
               C153865 * C154178) *
              C153783 * C1341) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C46971 * C136 + C46978 + C46978 + C46968 * C152 + C46973 * C556 +
             C46979 + C46979 + C46969 * C580 + C46975 * C557 + C46980 + C46980 +
             C154146 * C581) *
                C153865 * C154178 +
            (C47044 + C47045 + C47046) * C153865 * C154159 + C47060 * C154130) *
               C549 -
           (C48137 * C154130 + (C47657 + C47658 + C47659) * C153865 * C154159 +
            (C46975 * C2272 + C47600 + C47600 + C154146 * C2282 +
             C46973 * C557 + C47601 + C47601 + C46969 * C581 + C46971 * C556 +
             C47602 + C47602 + C46968 * C580) *
                C153865 * C154178) *
               C550 +
           ((C46971 * C557 + C47603 + C47603 + C46968 * C581 + C46973 * C2272 +
             C47604 + C47604 + C46969 * C2282 + C46975 * C7665 + C47605 +
             C47605 + C154146 * C7673) *
                C153865 * C154178 +
            (C47660 + C47661 + C47662) * C153865 * C154159 +
            (C47663 + C47664 + C47665) * C153865 * C154130) *
               C551) *
              C1251 +
          (((C46971 * C1081 + C48434 + C48434 + C46968 * C1093 +
             C46973 * C1489 + C48435 + C48435 + C46969 * C1499 +
             C46975 * C6161 + C48436 + C48436 + C154146 * C6173) *
                C153865 * C154178 +
            (C48470 + C48471 + C48472) * C153865 * C154159 +
            (C48473 + C48474 + C48475) * C153865 * C154130) *
               C550 -
           (C47898 * C154130 + (C47355 + C47356 + C47357) * C153865 * C154159 +
            (C46975 * C1489 + C47298 + C47298 + C154146 * C1499 +
             C46973 * C1081 + C47299 + C47299 + C46969 * C1093 + C46971 * C335 +
             C47300 + C47300 + C46968 * C359) *
                C153865 * C154178) *
               C549 -
           ((C46975 * C9165 + C49067 + C49067 + C154146 * C9171 +
             C46973 * C6157 + C49068 + C49068 + C46969 * C6169 +
             C46971 * C1487 + C49069 + C49069 + C46968 * C1497) *
                C153865 * C154130 +
            (C46975 * C9166 + C49070 + C49070 + C154146 * C9172 +
             C46973 * C6159 + C49071 + C49071 + C46969 * C6171 +
             C46971 * C1488 + C49072 + C49072 + C46968 * C1498) *
                C153865 * C154159 +
            (C46975 * C9167 + C49073 + C49073 + C154146 * C9173 +
             C46973 * C6161 + C49074 + C49074 + C46969 * C6173 +
             C46971 * C1489 + C49075 + C49075 + C46968 * C1499) *
                C153865 * C154178) *
               C551) *
              C153819) *
         C153748) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C46971 * C136 + C46978 + C46978 + C46968 * C152 + C46973 * C556 +
             C46979 + C46979 + C46969 * C580 + C46975 * C557 + C46980 + C46980 +
             C154146 * C581) *
                C154181 +
            (C51548 + C51549 + C51550) * C154169 + C51561 * C154143) *
               C153712 * C153783 * C1251 -
           ((C51554 + C51555 + C51556) * C154143 +
            (C51553 + C51552 + C51551) * C154169 +
            (C51550 + C51549 + C51548) * C154181) *
               C153712 * C153783 * C153819) *
              C1253 +
          (((C47357 + C47356 + C47355) * C154181 +
            (C47358 + C47359 + C47360) * C154169 +
            (C51557 + C51558 + C51559) * C154143) *
               C153712 * C153783 * C153819 -
           (C51535 * C154143 + (C47355 + C47356 + C47357) * C154169 +
            (C47046 + C47045 + C47044) * C154181) *
               C153712 * C153783 * C1251) *
              C1254 +
          ((C47058 * C154181 + (C47354 + C47353 + C47352) * C154169 +
            (C47361 + C47362 + C47363) * C154143) *
               C153712 * C153783 * C1251 -
           ((C46975 * C4809 + C48840 + C48840 + C154146 * C4815 +
             C46973 * C4170 + C48841 + C48841 + C46969 * C4178 +
             C46971 * C1345 + C48842 + C48842 + C46968 * C1355) *
                C154143 +
            (C47363 + C47362 + C47361) * C154169 + C47894 * C154181) *
               C153712 * C153783 * C153819) *
              C1255)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C46971 * C136 + C46978 + C46978 + C46968 * C152 + C46973 * C556 +
            C46979 + C46979 + C46969 * C580 + C46975 * C557 + C46980 + C46980 +
            C154146 * C581) *
               C154181 +
           (C51548 + C51549 + C51550) * C154169 + C51561 * C154143) *
              C153712 * C153783 * C1338 -
          (C52937 * C154143 + (C51553 + C51552 + C51551) * C154169 +
           (C51550 + C51549 + C51548) * C154181) *
              C153712 * C153783 * C1339 +
          (C51561 * C154181 + (C51556 + C51555 + C51554) * C154169 +
           (C52944 + C52945 + C52946) * C154143) *
              C153712 * C153783 * C1340 -
          ((C46975 * C29125 + C52934 + C52934 + C154146 * C29127 +
            C46973 * C28772 + C52935 + C52935 + C46969 * C28776 +
            C46971 * C4576 + C52936 + C52936 + C46968 * C4582) *
               C154143 +
           (C52946 + C52945 + C52944) * C154169 + C52937 * C154181) *
              C153712 * C153783 * C1341) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C46971 * C136 + C46978 + C46978 + C46968 * C152 + C46973 * C556 +
             C46979 + C46979 + C46969 * C580 + C46975 * C557 + C46980 + C46980 +
             C154146 * C581) *
                C154181 +
            (C51548 + C51549 + C51550) * C154169 + C51561 * C154143) *
               C153712 * C549 -
           ((C52554 + C52555 + C52556) * C154143 +
            (C52557 + C52558 + C52559) * C154169 +
            (C46975 * C2272 + C47600 + C47600 + C154146 * C2282 +
             C46973 * C557 + C47601 + C47601 + C46969 * C581 + C46971 * C556 +
             C47602 + C47602 + C46968 * C580) *
                C154181) *
               C153712 * C550 +
           ((C46971 * C557 + C47603 + C47603 + C46968 * C581 + C46973 * C2272 +
             C47604 + C47604 + C46969 * C2282 + C46975 * C7665 + C47605 +
             C47605 + C154146 * C7673) *
                C154181 +
            (C53192 + C53193 + C53194) * C154169 +
            (C53195 + C53196 + C53197) * C154143) *
               C153712 * C551) *
              C1251 +
          (((C52559 + C52558 + C52557) * C154181 +
            (C52556 + C52555 + C52554) * C154169 +
            (C46971 * C4168 + C52524 + C52524 + C46968 * C4176 +
             C46973 * C4811 + C52525 + C52525 + C46969 * C4817 +
             C46975 * C29881 + C52526 + C52526 + C154146 * C29885) *
                C154143) *
               C153712 * C550 -
           (C52937 * C154143 + (C51553 + C51552 + C51551) * C154169 +
            (C51550 + C51549 + C51548) * C154181) *
               C153712 * C549 -
           ((C46975 * C32340 + C53177 + C53177 + C154146 * C32342 +
             C46973 * C29881 + C53178 + C53178 + C46969 * C29885 +
             C46971 * C4811 + C53179 + C53179 + C46968 * C4817) *
                C154143 +
            (C53197 + C53196 + C53195) * C154169 +
            (C53194 + C53193 + C53192) * C154181) *
               C153712 * C551) *
              C153819) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C55344 * C136 + C55355 + C55355 + C55339 * C152 + C55346 * C556 +
            C55356 + C55356 + C55340 * C580 + C55348 * C557 + C55357 + C55357 +
            C55341 * C581 + C55350 * C2272 + C55358 + C55358 + C55342 * C2282 +
            C55352 * C7665 + C55359 + C55359 + C55343 * C7673) *
               C153865 * C153712 * C153783 * C1251 -
           (C55352 * C9167 + C55497 + C55497 + C55343 * C9173 + C55350 * C6161 +
            C55498 + C55498 + C55342 * C6173 + C55348 * C1489 + C55499 +
            C55499 + C55341 * C1499 + C55346 * C1081 + C55500 + C55500 +
            C55340 * C1093 + C55344 * C335 + C55501 + C55501 + C55339 * C359) *
               C153865 * C153712 * C153783 * C153819) *
              C1253 +
          ((C55344 * C334 + C55507 + C55507 + C55339 * C358 + C55346 * C1082 +
            C55508 + C55508 + C55340 * C1094 + C55348 * C1488 + C55509 +
            C55509 + C55341 * C1498 + C55350 * C6159 + C55510 + C55510 +
            C55342 * C6171 + C55352 * C9166 + C55511 + C55511 +
            C55343 * C9172) *
               C153865 * C153712 * C153783 * C153819 -
           (C55352 * C7666 + C55360 + C55360 + C55343 * C7674 + C55350 * C2271 +
            C55361 + C55361 + C55342 * C2281 + C55348 * C558 + C55362 + C55362 +
            C55341 * C582 + C55346 * C555 + C55363 + C55363 + C55340 * C579 +
            C55344 * C137 + C55364 + C55364 + C55339 * C153) *
               C153865 * C153712 * C153783 * C1251) *
              C1254 +
          ((C55344 * C138 + C55365 + C55365 + C55339 * C154 + C55346 * C554 +
            C55366 + C55366 + C55340 * C578 + C55348 * C559 + C55367 + C55367 +
            C55341 * C583 + C55350 * C2270 + C55368 + C55368 + C55342 * C2280 +
            C55352 * C7667 + C55369 + C55369 + C55343 * C7675) *
               C153865 * C153712 * C153783 * C1251 -
           (C55352 * C9165 + C55787 + C55787 + C55343 * C9171 + C55350 * C6157 +
            C55788 + C55788 + C55342 * C6169 + C55348 * C1487 + C55789 +
            C55789 + C55341 * C1497 + C55346 * C1083 + C55790 + C55790 +
            C55340 * C1095 + C55344 * C333 + C55791 + C55791 + C55339 * C357) *
               C153865 * C153712 * C153783 * C153819) *
              C1255)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((C55344 * C136 + C55355 + C55355 + C55339 * C152 + C55346 * C556 +
           C55356 + C55356 + C55340 * C580 + C55348 * C557 + C55357 + C55357 +
           C55341 * C581 + C55350 * C2272 + C55358 + C55358 + C55342 * C2282 +
           C55352 * C7665 + C55359 + C55359 + C55343 * C7673) *
              C153865 * C153712 * C153783 * C1338 -
          (C55352 * C9167 + C55497 + C55497 + C55343 * C9173 + C55350 * C6161 +
           C55498 + C55498 + C55342 * C6173 + C55348 * C1489 + C55499 + C55499 +
           C55341 * C1499 + C55346 * C1081 + C55500 + C55500 + C55340 * C1093 +
           C55344 * C335 + C55501 + C55501 + C55339 * C359) *
              C153865 * C153712 * C153783 * C1339 +
          (C55344 * C336 + C55502 + C55502 + C55339 * C360 + C55346 * C1920 +
           C55503 + C55503 + C55340 * C1930 + C55348 * C3369 + C55504 + C55504 +
           C55341 * C3377 + C55350 * C6160 + C55505 + C55505 + C55342 * C6172 +
           C55352 * C30946 + C55506 + C55506 + C55343 * C30950) *
              C153865 * C153712 * C153783 * C1340 -
          (C55352 * C32340 + C56298 + C56298 + C55343 * C32342 +
           C55350 * C29881 + C56299 + C56299 + C55342 * C29885 +
           C55348 * C4811 + C56300 + C56300 + C55341 * C4817 + C55346 * C4168 +
           C56301 + C56301 + C55340 * C4176 + C55344 * C1347 + C56302 + C56302 +
           C55339 * C1357) *
              C153865 * C153712 * C153783 * C1341) *
         C153748) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C55344 * C136 + C55355 + C55355 + C55339 * C152 + C55346 * C556 +
            C55356 + C55356 + C55340 * C580 + C55348 * C557 + C55357 + C55357 +
            C55341 * C581 + C55350 * C2272 + C55358 + C55358 + C55342 * C2282 +
            C55352 * C7665 + C55359 + C55359 + C55343 * C7673) *
               C153865 * C153712 * C549 -
           (C55352 * C10502 + C55645 + C55645 + C55343 * C10508 +
            C55350 * C7665 + C55646 + C55646 + C55342 * C7673 + C55348 * C2272 +
            C55647 + C55647 + C55341 * C2282 + C55346 * C557 + C55648 + C55648 +
            C55340 * C581 + C55344 * C556 + C55649 + C55649 + C55339 * C580) *
               C153865 * C153712 * C550 +
           (C55344 * C557 + C55650 + C55650 + C55339 * C581 + C55346 * C2272 +
            C55651 + C55651 + C55340 * C2282 + C55348 * C7665 + C55652 +
            C55652 + C55341 * C7673 + C55350 * C10502 + C55653 + C55653 +
            C55342 * C10508 + C55352 * C55638 + C55654 + C55654 +
            C55343 * C55642) *
               C153865 * C153712 * C551) *
              C1251 +
          ((C55344 * C1081 + C56084 + C56084 + C55339 * C1093 + C55346 * C1489 +
            C56085 + C56085 + C55340 * C1499 + C55348 * C6161 + C56086 +
            C56086 + C55341 * C6173 + C55350 * C9167 + C56087 + C56087 +
            C55342 * C9173 + C55352 * C33705 + C56088 + C56088 +
            C55343 * C33709) *
               C153865 * C153712 * C550 -
           (C55352 * C9167 + C55497 + C55497 + C55343 * C9173 + C55350 * C6161 +
            C55498 + C55498 + C55342 * C6173 + C55348 * C1489 + C55499 +
            C55499 + C55341 * C1499 + C55346 * C1081 + C55500 + C55500 +
            C55340 * C1093 + C55344 * C335 + C55501 + C55501 + C55339 * C359) *
               C153865 * C153712 * C549 -
           (C55352 * C56424 + C56428 + C56428 + C55343 * C56426 +
            C55350 * C33705 + C56429 + C56429 + C55342 * C33709 +
            C55348 * C9167 + C56430 + C56430 + C55341 * C9173 + C55346 * C6161 +
            C56431 + C56431 + C55340 * C6173 + C55344 * C1489 + C56432 +
            C56432 + C55339 * C1499) *
               C153865 * C153712 * C551) *
              C153819) *
         C153748) /
            (p * q * std::sqrt(p + q));
    d2ee[188] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C134 * C136 + C161 + C161 + C153882 * C152) * C153865 * C123 +
                 C199 * C124 + C200 * C125 + C201 * C126 + C202 * C127) *
                    C154094 -
                (C641 * C127 + C642 * C126 + C643 * C125 + C644 * C124 +
                 (C134 * C556 + C601 + C601 + C153882 * C580) * C153865 *
                     C123) *
                    C153847) *
                   C1251 +
               (((C134 * C1081 + C1100 + C1100 + C153882 * C1093) * C153865 *
                     C123 +
                 C1126 * C124 + C1127 * C125 + C1128 * C126 + C1129 * C127) *
                    C153847 -
                (C420 * C127 + C421 * C126 + C422 * C125 + C423 * C124 +
                 (C134 * C335 + C380 + C380 + C153882 * C359) * C153865 *
                     C123) *
                    C154094) *
                   C153819) *
                  C154085 +
              (((C644 * C123 + C643 * C124 + C642 * C125 + C641 * C126 +
                 C919 * C127) *
                    C153847 -
                (C203 * C127 + C202 * C126 + C201 * C125 + C200 * C124 +
                 C199 * C123) *
                    C154094) *
                   C1251 +
               ((C423 * C123 + C422 * C124 + C421 * C125 + C420 * C126 +
                 C785 * C127) *
                    C154094 -
                ((C134 * C1086 + C1113 + C1113 + C153882 * C1098) * C153865 *
                     C127 +
                 C1129 * C126 + C1128 * C125 + C1127 * C124 + C1126 * C123) *
                    C153847) *
                   C153819) *
                  C153754) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((((C134 * C136 + C161 + C161 + C153882 * C152) * C154181 +
                  C3138 * C154169 + C3139 * C154143) *
                     C2846 +
                 (C2850 + C2851 + C2852) * C2847 + C2864 * C154130) *
                    C154094 -
                (C3874 * C154130 + (C3423 + C3388 + C3389) * C2847 +
                 (C4205 * C154143 + C4206 * C154169 +
                  (C134 * C556 + C601 + C601 + C153882 * C580) * C154181) *
                     C2846) *
                    C153847) *
                   C1251 +
               (((C4206 * C154181 + C4205 * C154169 +
                  (C134 * C4168 + C4185 + C4185 + C153882 * C4176) * C154143) *
                     C2846 +
                 (C4186 + C4187 + C4209) * C2847 +
                 (C4191 + C4192 + C4210) * C154130) *
                    C153847 -
                (C3650 * C154130 + (C3147 + C3106 + C3107) * C2847 +
                 (C3142 * C154143 + C3139 * C154169 + C3138 * C154181) *
                     C2846) *
                    C154094) *
                   C153819) *
                  C154085 +
              ((((C3389 + C3388 + C3423) * C2846 +
                 (C3385 + C3384 + C3422) * C2847 +
                 (C3870 + C3871 + C3878) * C154130) *
                    C153847 -
                (C2865 * C154130 + (C2855 + C2854 + C2853) * C2847 +
                 (C2852 + C2851 + C2850) * C2846) *
                    C154094) *
                   C1251 +
               (((C3107 + C3106 + C3147) * C2846 +
                 (C3103 + C3102 + C3146) * C2847 +
                 (C3647 + C3648 + C3649) * C154130) *
                    C154094 -
                (((C134 * C4171 + C4196 + C4196 + C153882 * C4179) * C154143 +
                  C3877 * C154169 + C1124 * C154181) *
                     C154130 +
                 (C4210 + C4192 + C4191) * C2847 +
                 (C4209 + C4187 + C4186) * C2846) *
                    C153847) *
                   C153819) *
                  C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C7055 * C136 + C7062 + C7062 + C154182 * C152 + C7057 * C556 +
              C7063 + C7063 + C154171 * C580 + C7059 * C557 + C7064 + C7064 +
              C154146 * C581) *
                 C153865 * C2846 +
             (C7128 + C7129 + C7130) * C153865 * C2847 + C7144 * C154130) *
                C154094 -
            (C8233 * C154130 + (C7753 + C7754 + C7755) * C153865 * C2847 +
             (C7059 * C2272 + C7696 + C7696 + C154146 * C2282 + C7057 * C557 +
              C7697 + C7697 + C154171 * C581 + C7055 * C556 + C7698 + C7698 +
              C154182 * C580) *
                 C153865 * C2846) *
                C153847) *
               C1251 +
           (((C7055 * C1081 + C8533 + C8533 + C154182 * C1093 + C7057 * C1489 +
              C8534 + C8534 + C154171 * C1499 + C7059 * C6161 + C8535 + C8535 +
              C154146 * C6173) *
                 C153865 * C2846 +
             (C8569 + C8570 + C8571) * C153865 * C2847 +
             (C8572 + C8573 + C8574) * C153865 * C154130) *
                C153847 -
            (C7994 * C154130 + (C7439 + C7440 + C7441) * C153865 * C2847 +
             (C7059 * C1489 + C7382 + C7382 + C154146 * C1499 + C7057 * C1081 +
              C7383 + C7383 + C154171 * C1093 + C7055 * C335 + C7384 + C7384 +
              C154182 * C359) *
                 C153865 * C2846) *
                C154094) *
               C153819) *
              C154085 +
          ((((C7755 + C7754 + C7753) * C153865 * C2846 +
             (C7752 + C7751 + C7750) * C153865 * C2847 +
             (C8237 + C8238 + C8239) * C153865 * C154130) *
                C153847 -
            (C7145 * C154130 + (C7133 + C7132 + C7131) * C153865 * C2847 +
             (C7130 + C7129 + C7128) * C153865 * C2846) *
                C154094) *
               C1251 +
           (((C7441 + C7440 + C7439) * C153865 * C2846 +
             (C7438 + C7437 + C7436) * C153865 * C2847 +
             (C7998 + C7999 + C8000) * C153865 * C154130) *
                C154094 -
            ((C7059 * C8529 + C8554 + C8554 + C154146 * C8531 + C7057 * C1486 +
              C8555 + C8555 + C154171 * C1496 + C7055 * C1084 + C8556 + C8556 +
              C154182 * C1096) *
                 C153865 * C154130 +
             (C8574 + C8573 + C8572) * C153865 * C2847 +
             (C8571 + C8570 + C8569) * C153865 * C2846) *
                C153847) *
               C153819) *
              C153754)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C153882 * C152) * C24168 +
              C3138 * C24169 + C3139 * C154143) *
                 C154178 +
             (C24175 + C24176 + C24177) * C154159 + C24189 * C154130) *
                C154094 -
            (C25096 * C154130 + (C24642 + C24643 + C24644) * C154159 +
             (C4205 * C154143 + C4206 * C24169 +
              (C134 * C556 + C601 + C601 + C153882 * C580) * C24168) *
                 C154178) *
                C153847) *
               C1251 +
           (((C4206 * C24168 + C4205 * C24169 + C5574 * C154143) * C154178 +
             (C25387 + C25388 + C25389) * C154159 +
             (C25390 + C25391 + C25392) * C154130) *
                C153847 -
            (C24873 * C154130 + (C24412 + C24413 + C24414) * C154159 +
             (C3142 * C154143 + C3139 * C24169 + C3138 * C24168) * C154178) *
                C154094) *
               C153819) *
              C154085 +
          ((((C24644 + C24643 + C24642) * C154178 +
             (C24641 + C24640 + C24639) * C154159 +
             (C25093 + C25094 + C25095) * C154130) *
                C153847 -
            (C24190 * C154130 + (C24180 + C24179 + C24178) * C154159 +
             (C24177 + C24176 + C24175) * C154178) *
                C154094) *
               C1251 +
           (((C24414 + C24413 + C24412) * C154178 +
             (C24411 + C24410 + C24409) * C154159 +
             (C24870 + C24871 + C24872) * C154130) *
                C154094 -
            (((C134 * C4171 + C4196 + C4196 + C153882 * C4179) * C154143 +
              C3877 * C24169 + C1124 * C24168) *
                 C154130 +
             (C25392 + C25391 + C25390) * C154159 +
             (C25389 + C25388 + C25387) * C154178) *
                C153847) *
               C153819) *
              C153754)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C28090 +
             C3138 * C28091 + C3139 * C28092 + C3142 * C28093 +
             C4591 * C28094) *
                C153712 * C154094 -
            (C28789 * C28094 + C5574 * C28093 + C4205 * C28092 +
             C4206 * C28091 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C28090) *
                C153712 * C153847) *
               C1251 +
           ((C4206 * C28090 + C4205 * C28091 + C5574 * C28092 +
             C28789 * C28093 +
             (C134 * C28772 + C28781 + C28781 + C153882 * C28776) * C28094) *
                C153712 * C153847 -
            (C28235 * C28094 + C4591 * C28093 + C3142 * C28092 +
             C3139 * C28091 + C3138 * C28090) *
                C153712 * C154094) *
               C153819) *
              C154085 +
          (((C636 * C28090 + C1122 * C28091 + C3417 * C28092 + C4207 * C28093 +
             C28790 * C28094) *
                C153712 * C153847 -
            (C3143 * C28094 + C3141 * C28093 + C416 * C28092 + C415 * C28091 +
             C193 * C28090) *
                C153712 * C154094) *
               C1251 +
           ((C415 * C28090 + C416 * C28091 + C3141 * C28092 + C3143 * C28093 +
             C28236 * C28094) *
                C153712 * C154094 -
            ((C134 * C28773 + C28784 + C28784 + C153882 * C28777) * C28094 +
             C28790 * C28093 + C4207 * C28092 + C3417 * C28091 +
             C1122 * C28090) *
                C153712 * C153847) *
               C153819) *
              C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C7055 * C136 + C7062 + C7062 + C154182 * C152 + C7057 * C556 +
              C7063 + C7063 + C154171 * C580 + C7059 * C557 + C7064 + C7064 +
              C154146 * C581) *
                 C24168 +
             (C30715 + C30716 + C30717) * C24169 + C30728 * C154143) *
                C153712 * C154094 -
            ((C31730 + C31731 + C31732) * C154143 +
             (C31733 + C31734 + C31735) * C24169 +
             (C7059 * C2272 + C7696 + C7696 + C154146 * C2282 + C7057 * C557 +
              C7697 + C7697 + C154171 * C581 + C7055 * C556 + C7698 + C7698 +
              C154182 * C580) *
                 C24168) *
                C153712 * C153847) *
               C1251 +
           (((C31735 + C31734 + C31733) * C24168 +
             (C31732 + C31731 + C31730) * C24169 +
             (C7055 * C4168 + C31700 + C31700 + C154182 * C4176 +
              C7057 * C4811 + C31701 + C31701 + C154171 * C4817 +
              C7059 * C29881 + C31702 + C31702 + C154146 * C29885) *
                 C154143) *
                C153712 * C153847 -
            (C32113 * C154143 + (C30720 + C30719 + C30718) * C24169 +
             (C30717 + C30716 + C30715) * C24168) *
                C153712 * C154094) *
               C153819) *
              C154085 +
          ((((C7755 + C7754 + C7753) * C24168 +
             (C8569 + C8570 + C8571) * C24169 +
             (C31736 + C31737 + C31738) * C154143) *
                C153712 * C153847 -
            (C30702 * C154143 + (C7439 + C7440 + C7441) * C24169 +
             (C7130 + C7129 + C7128) * C24168) *
                C153712 * C154094) *
               C1251 +
           (((C7441 + C7440 + C7439) * C24168 +
             (C7442 + C7443 + C7444) * C24169 +
             (C30724 + C30725 + C30726) * C154143) *
                C153712 * C154094 -
            ((C7059 * C31684 + C31709 + C31709 + C154146 * C31686 +
              C7057 * C4810 + C31710 + C31710 + C154171 * C4816 +
              C7055 * C4169 + C31711 + C31711 + C154182 * C4177) *
                 C154143 +
             (C31738 + C31737 + C31736) * C24169 +
             (C8571 + C8570 + C8569) * C24168) *
                C153712 * C153847) *
               C153819) *
              C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C46971 * C136 + C46978 + C46978 + C46968 * C152 + C46973 * C556 +
              C46979 + C46979 + C46969 * C580 + C46975 * C557 + C46980 +
              C46980 + C154146 * C581) *
                 C153865 * C154178 +
             (C47044 + C47045 + C47046) * C153865 * C154159 +
             C47060 * C154130) *
                C154094 -
            (C48137 * C154130 + (C47657 + C47658 + C47659) * C153865 * C154159 +
             (C46975 * C2272 + C47600 + C47600 + C154146 * C2282 +
              C46973 * C557 + C47601 + C47601 + C46969 * C581 + C46971 * C556 +
              C47602 + C47602 + C46968 * C580) *
                 C153865 * C154178) *
                C153847) *
               C1251 +
           (((C46971 * C1081 + C48434 + C48434 + C46968 * C1093 +
              C46973 * C1489 + C48435 + C48435 + C46969 * C1499 +
              C46975 * C6161 + C48436 + C48436 + C154146 * C6173) *
                 C153865 * C154178 +
             (C48470 + C48471 + C48472) * C153865 * C154159 +
             (C48473 + C48474 + C48475) * C153865 * C154130) *
                C153847 -
            (C47898 * C154130 + (C47355 + C47356 + C47357) * C153865 * C154159 +
             (C46975 * C1489 + C47298 + C47298 + C154146 * C1499 +
              C46973 * C1081 + C47299 + C47299 + C46969 * C1093 +
              C46971 * C335 + C47300 + C47300 + C46968 * C359) *
                 C153865 * C154178) *
                C154094) *
               C153819) *
              C154085 +
          ((((C47659 + C47658 + C47657) * C153865 * C154178 +
             (C47656 + C47655 + C47654) * C153865 * C154159 +
             (C48141 + C48142 + C48143) * C153865 * C154130) *
                C153847 -
            (C47061 * C154130 + (C47049 + C47048 + C47047) * C153865 * C154159 +
             (C47046 + C47045 + C47044) * C153865 * C154178) *
                C154094) *
               C1251 +
           (((C47357 + C47356 + C47355) * C153865 * C154178 +
             (C47354 + C47353 + C47352) * C153865 * C154159 +
             (C47902 + C47903 + C47904) * C153865 * C154130) *
                C154094 -
            ((C46975 * C8529 + C48455 + C48455 + C154146 * C8531 +
              C46973 * C1486 + C48456 + C48456 + C46969 * C1496 +
              C46971 * C1084 + C48457 + C48457 + C46968 * C1096) *
                 C153865 * C154130 +
             (C48475 + C48474 + C48473) * C153865 * C154159 +
             (C48472 + C48471 + C48470) * C153865 * C154178) *
                C153847) *
               C153819) *
              C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C46971 * C136 + C46978 + C46978 + C46968 * C152 + C46973 * C556 +
              C46979 + C46979 + C46969 * C580 + C46975 * C557 + C46980 +
              C46980 + C154146 * C581) *
                 C154181 +
             (C51548 + C51549 + C51550) * C154169 + C51561 * C154143) *
                C153712 * C154094 -
            ((C52554 + C52555 + C52556) * C154143 +
             (C52557 + C52558 + C52559) * C154169 +
             (C46975 * C2272 + C47600 + C47600 + C154146 * C2282 +
              C46973 * C557 + C47601 + C47601 + C46969 * C581 + C46971 * C556 +
              C47602 + C47602 + C46968 * C580) *
                 C154181) *
                C153712 * C153847) *
               C1251 +
           (((C52559 + C52558 + C52557) * C154181 +
             (C52556 + C52555 + C52554) * C154169 +
             (C46971 * C4168 + C52524 + C52524 + C46968 * C4176 +
              C46973 * C4811 + C52525 + C52525 + C46969 * C4817 +
              C46975 * C29881 + C52526 + C52526 + C154146 * C29885) *
                 C154143) *
                C153712 * C153847 -
            (C52937 * C154143 + (C51553 + C51552 + C51551) * C154169 +
             (C51550 + C51549 + C51548) * C154181) *
                C153712 * C154094) *
               C153819) *
              C154085 +
          ((((C47659 + C47658 + C47657) * C154181 +
             (C48470 + C48471 + C48472) * C154169 +
             (C52560 + C52561 + C52562) * C154143) *
                C153712 * C153847 -
            (C51535 * C154143 + (C47355 + C47356 + C47357) * C154169 +
             (C47046 + C47045 + C47044) * C154181) *
                C153712 * C154094) *
               C1251 +
           (((C47357 + C47356 + C47355) * C154181 +
             (C47358 + C47359 + C47360) * C154169 +
             (C51557 + C51558 + C51559) * C154143) *
                C153712 * C154094 -
            ((C46975 * C31684 + C52533 + C52533 + C154146 * C31686 +
              C46973 * C4810 + C52534 + C52534 + C46969 * C4816 +
              C46971 * C4169 + C52535 + C52535 + C46968 * C4177) *
                 C154143 +
             (C52562 + C52561 + C52560) * C154169 +
             (C48472 + C48471 + C48470) * C154181) *
                C153712 * C153847) *
               C153819) *
              C153754)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C55344 * C136 + C55355 + C55355 + C55339 * C152 + C55346 * C556 +
             C55356 + C55356 + C55340 * C580 + C55348 * C557 + C55357 + C55357 +
             C55341 * C581 + C55350 * C2272 + C55358 + C55358 + C55342 * C2282 +
             C55352 * C7665 + C55359 + C55359 + C55343 * C7673) *
                C153865 * C153712 * C154094 -
            (C55352 * C10502 + C55645 + C55645 + C55343 * C10508 +
             C55350 * C7665 + C55646 + C55646 + C55342 * C7673 +
             C55348 * C2272 + C55647 + C55647 + C55341 * C2282 + C55346 * C557 +
             C55648 + C55648 + C55340 * C581 + C55344 * C556 + C55649 + C55649 +
             C55339 * C580) *
                C153865 * C153712 * C153847) *
               C1251 +
           ((C55344 * C1081 + C56084 + C56084 + C55339 * C1093 +
             C55346 * C1489 + C56085 + C56085 + C55340 * C1499 +
             C55348 * C6161 + C56086 + C56086 + C55341 * C6173 +
             C55350 * C9167 + C56087 + C56087 + C55342 * C9173 +
             C55352 * C33705 + C56088 + C56088 + C55343 * C33709) *
                C153865 * C153712 * C153847 -
            (C55352 * C9167 + C55497 + C55497 + C55343 * C9173 +
             C55350 * C6161 + C55498 + C55498 + C55342 * C6173 +
             C55348 * C1489 + C55499 + C55499 + C55341 * C1499 +
             C55346 * C1081 + C55500 + C55500 + C55340 * C1093 + C55344 * C335 +
             C55501 + C55501 + C55339 * C359) *
                C153865 * C153712 * C154094) *
               C153819) *
              C154085 +
          (((C55344 * C555 + C55655 + C55655 + C55339 * C579 + C55346 * C558 +
             C55656 + C55656 + C55340 * C582 + C55348 * C2271 + C55657 +
             C55657 + C55341 * C2281 + C55350 * C7666 + C55658 + C55658 +
             C55342 * C7674 + C55352 * C10501 + C55659 + C55659 +
             C55343 * C10507) *
                C153865 * C153712 * C153847 -
            (C55352 * C7666 + C55360 + C55360 + C55343 * C7674 +
             C55350 * C2271 + C55361 + C55361 + C55342 * C2281 + C55348 * C558 +
             C55362 + C55362 + C55341 * C582 + C55346 * C555 + C55363 + C55363 +
             C55340 * C579 + C55344 * C137 + C55364 + C55364 + C55339 * C153) *
                C153865 * C153712 * C154094) *
               C1251 +
           ((C55344 * C334 + C55507 + C55507 + C55339 * C358 + C55346 * C1082 +
             C55508 + C55508 + C55340 * C1094 + C55348 * C1488 + C55509 +
             C55509 + C55341 * C1498 + C55350 * C6159 + C55510 + C55510 +
             C55342 * C6171 + C55352 * C9166 + C55511 + C55511 +
             C55343 * C9172) *
                C153865 * C153712 * C154094 -
            (C55352 * C56080 + C56089 + C56089 + C55343 * C56082 +
             C55350 * C9166 + C56090 + C56090 + C55342 * C9172 +
             C55348 * C6159 + C56091 + C56091 + C55341 * C6171 +
             C55346 * C1488 + C56092 + C56092 + C55340 * C1498 +
             C55344 * C1082 + C56093 + C56093 + C55339 * C1094) *
                C153865 * C153712 * C153847) *
               C153819) *
              C153754)) /
            (p * q * std::sqrt(p + q));
    d2ee[189] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C153865 * C123 +
            C199 * C124 + C200 * C125 + C201 * C126 + C202 * C127) *
               C153783 * C1251 -
           (C420 * C127 + C421 * C126 + C422 * C125 + C423 * C124 +
            (C134 * C335 + C380 + C380 + C153882 * C359) * C153865 * C123) *
               C153783 * C153819) *
              C1253 +
          ((C423 * C123 + C422 * C124 + C421 * C125 + C420 * C126 +
            C785 * C127) *
               C153783 * C153819 -
           (C203 * C127 + C202 * C126 + C201 * C125 + C200 * C124 +
            C199 * C123) *
               C153783 * C1251) *
              C1254 +
          ((C200 * C123 + C201 * C124 + C202 * C125 + C203 * C126 +
            C204 * C127) *
               C153783 * C1251 -
           ((C134 * C775 + C781 + C781 + C153882 * C777) * C153865 * C127 +
            C785 * C126 + C420 * C125 + C421 * C124 + C422 * C123) *
               C153783 * C153819) *
              C1255)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C136 + C161 + C161 + C153882 * C152) * C153865 * C123 +
           C199 * C124 + C200 * C125 + C201 * C126 + C202 * C127) *
              C153783 * C1338 -
          (C420 * C127 + C421 * C126 + C422 * C125 + C423 * C124 +
           (C134 * C335 + C380 + C380 + C153882 * C359) * C153865 * C123) *
              C153783 * C1339 +
          ((C134 * C336 + C381 + C381 + C153882 * C360) * C153865 * C123 +
           C424 * C124 + C425 * C125 + C426 * C126 + C427 * C127) *
              C153783 * C1340 -
          ((C134 * C1343 + C1359 + C1359 + C153882 * C1353) * C153865 * C127 +
           (C134 * C1344 + C1360 + C1360 + C153882 * C1354) * C153865 * C126 +
           (C134 * C1345 + C1361 + C1361 + C153882 * C1355) * C153865 * C125 +
           (C134 * C1346 + C1362 + C1362 + C153882 * C1356) * C153865 * C124 +
           (C134 * C1347 + C1363 + C1363 + C153882 * C1357) * C153865 * C123) *
              C153783 * C1341) *
         C153748) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C154181 +
             C3138 * C154169 + C3139 * C154143) *
                C2846 +
            (C2850 + C2851 + C2852) * C2847 + C2864 * C154130) *
               C153783 * C1251 -
           (C3650 * C154130 + (C3147 + C3106 + C3107) * C2847 +
            (C3142 * C154143 + C3139 * C154169 + C3138 * C154181) * C2846) *
               C153783 * C153819) *
              C1253 +
          (((C3107 + C3106 + C3147) * C2846 + (C3103 + C3102 + C3146) * C2847 +
            (C3647 + C3648 + C3649) * C154130) *
               C153783 * C153819 -
           (C2865 * C154130 + (C2855 + C2854 + C2853) * C2847 +
            (C2852 + C2851 + C2850) * C2846) *
               C153783 * C1251) *
              C1254 +
          ((C2864 * C2846 + (C2858 + C2857 + C2856) * C2847 +
            (C2859 + C2860 + C2861) * C154130) *
               C153783 * C1251 -
           (((C134 * C1343 + C1359 + C1359 + C153882 * C1353) * C154143 +
             C419 * C154169 + C412 * C154181) *
                C154130 +
            (C3649 + C3648 + C3647) * C2847 + C3650 * C2846) *
               C153783 * C153819) *
              C1255)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C154181 +
            C3138 * C154169 + C3139 * C154143) *
               C2846 +
           (C2850 + C2851 + C2852) * C2847 + C2864 * C154130) *
              C153783 * C1338 -
          (C3650 * C154130 + (C3147 + C3106 + C3107) * C2847 +
           (C3142 * C154143 + C3139 * C154169 + C3138 * C154181) * C2846) *
              C153783 * C1339 +
          ((C3139 * C154181 + C3142 * C154169 + C4591 * C154143) * C2846 +
           (C3111 + C3148 + C3149) * C2847 +
           (C3115 + C3150 + C3151) * C154130) *
              C153783 * C1340 -
          (((C134 * C4574 + C4586 + C4586 + C153882 * C4580) * C154143 +
            C3144 * C154169 + C3140 * C154181) *
               C154130 +
           ((C134 * C4575 + C4587 + C4587 + C153882 * C4581) * C154143 +
            C3143 * C154169 + C3141 * C154181) *
               C2847 +
           ((C134 * C4576 + C4588 + C4588 + C153882 * C4582) * C154143 +
            C4591 * C154169 + C3142 * C154181) *
               C2846) *
              C153783 * C1341) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C7055 * C136 + C7062 + C7062 + C154182 * C152 + C7057 * C556 +
             C7063 + C7063 + C154171 * C580 + C7059 * C557 + C7064 + C7064 +
             C154146 * C581) *
                C153865 * C2846 +
            (C7128 + C7129 + C7130) * C153865 * C2847 + C7144 * C154130) *
               C153783 * C1251 -
           (C7994 * C154130 + (C7439 + C7440 + C7441) * C153865 * C2847 +
            (C7059 * C1489 + C7382 + C7382 + C154146 * C1499 + C7057 * C1081 +
             C7383 + C7383 + C154171 * C1093 + C7055 * C335 + C7384 + C7384 +
             C154182 * C359) *
                C153865 * C2846) *
               C153783 * C153819) *
              C1253 +
          (((C7441 + C7440 + C7439) * C153865 * C2846 +
            (C7438 + C7437 + C7436) * C153865 * C2847 +
            (C7998 + C7999 + C8000) * C153865 * C154130) *
               C153783 * C153819 -
           (C7145 * C154130 + (C7133 + C7132 + C7131) * C153865 * C2847 +
            (C7130 + C7129 + C7128) * C153865 * C2846) *
               C153783 * C1251) *
              C1254 +
          ((C7144 * C2846 + (C7136 + C7135 + C7134) * C153865 * C2847 +
            (C7137 + C7138 + C7139) * C153865 * C154130) *
               C153783 * C1251 -
           ((C7059 * C1485 + C7987 + C7987 + C154146 * C1495 + C7057 * C1085 +
             C7988 + C7988 + C154171 * C1097 + C7055 * C331 + C7989 + C7989 +
             C154182 * C355) *
                C153865 * C154130 +
            (C8000 + C7999 + C7998) * C153865 * C2847 + C7994 * C2846) *
               C153783 * C153819) *
              C1255)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C7055 * C136 + C7062 + C7062 + C154182 * C152 + C7057 * C556 +
            C7063 + C7063 + C154171 * C580 + C7059 * C557 + C7064 + C7064 +
            C154146 * C581) *
               C153865 * C2846 +
           (C7128 + C7129 + C7130) * C153865 * C2847 + C7144 * C154130) *
              C153783 * C1338 -
          (C7994 * C154130 + (C7439 + C7440 + C7441) * C153865 * C2847 +
           (C7059 * C1489 + C7382 + C7382 + C154146 * C1499 + C7057 * C1081 +
            C7383 + C7383 + C154171 * C1093 + C7055 * C335 + C7384 + C7384 +
            C154182 * C359) *
               C153865 * C2846) *
              C153783 * C1339 +
          ((C7055 * C336 + C7385 + C7385 + C154182 * C360 + C7057 * C1920 +
            C7386 + C7386 + C154171 * C1930 + C7059 * C3369 + C7387 + C7387 +
            C154146 * C3377) *
               C153865 * C2846 +
           (C7442 + C7443 + C7444) * C153865 * C2847 +
           (C7445 + C7446 + C7447) * C153865 * C154130) *
              C153783 * C1340 -
          ((C7059 * C4809 + C8939 + C8939 + C154146 * C4815 + C7057 * C4170 +
            C8940 + C8940 + C154171 * C4178 + C7055 * C1345 + C8941 + C8941 +
            C154182 * C1355) *
               C153865 * C154130 +
           (C7059 * C4810 + C8942 + C8942 + C154146 * C4816 + C7057 * C4169 +
            C8943 + C8943 + C154171 * C4177 + C7055 * C1346 + C8944 + C8944 +
            C154182 * C1356) *
               C153865 * C2847 +
           (C7059 * C4811 + C8945 + C8945 + C154146 * C4817 + C7057 * C4168 +
            C8946 + C8946 + C154171 * C4176 + C7055 * C1347 + C8947 + C8947 +
            C154182 * C1357) *
               C153865 * C2846) *
              C153783 * C1341) *
         C153748) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C24168 +
             C3138 * C24169 + C3139 * C154143) *
                C154178 +
            (C24175 + C24176 + C24177) * C154159 + C24189 * C154130) *
               C153783 * C1251 -
           (C24873 * C154130 + (C24412 + C24413 + C24414) * C154159 +
            (C3142 * C154143 + C3139 * C24169 + C3138 * C24168) * C154178) *
               C153783 * C153819) *
              C1253 +
          (((C24414 + C24413 + C24412) * C154178 +
            (C24411 + C24410 + C24409) * C154159 +
            (C24870 + C24871 + C24872) * C154130) *
               C153783 * C153819 -
           (C24190 * C154130 + (C24180 + C24179 + C24178) * C154159 +
            (C24177 + C24176 + C24175) * C154178) *
               C153783 * C1251) *
              C1254 +
          ((C24189 * C154178 + (C24183 + C24182 + C24181) * C154159 +
            (C24184 + C24185 + C24186) * C154130) *
               C153783 * C1251 -
           (((C134 * C1343 + C1359 + C1359 + C153882 * C1353) * C154143 +
             C419 * C24169 + C412 * C24168) *
                C154130 +
            (C24872 + C24871 + C24870) * C154159 + C24873 * C154178) *
               C153783 * C153819) *
              C1255)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C24168 +
            C3138 * C24169 + C3139 * C154143) *
               C154178 +
           (C24175 + C24176 + C24177) * C154159 + C24189 * C154130) *
              C153783 * C1338 -
          (C24873 * C154130 + (C24412 + C24413 + C24414) * C154159 +
           (C3142 * C154143 + C3139 * C24169 + C3138 * C24168) * C154178) *
              C153783 * C1339 +
          ((C3139 * C24168 + C3142 * C24169 + C4591 * C154143) * C154178 +
           (C24415 + C24416 + C24417) * C154159 +
           (C24418 + C24419 + C24420) * C154130) *
              C153783 * C1340 -
          (((C134 * C4574 + C4586 + C4586 + C153882 * C4580) * C154143 +
            C3144 * C24169 + C3140 * C24168) *
               C154130 +
           ((C134 * C4575 + C4587 + C4587 + C153882 * C4581) * C154143 +
            C3143 * C24169 + C3141 * C24168) *
               C154159 +
           ((C134 * C4576 + C4588 + C4588 + C153882 * C4582) * C154143 +
            C4591 * C24169 + C3142 * C24168) *
               C154178) *
              C153783 * C1341) *
         C153748) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C28090 +
            C3138 * C28091 + C3139 * C28092 + C3142 * C28093 + C4591 * C28094) *
               C153712 * C153783 * C1251 -
           (C28235 * C28094 + C4591 * C28093 + C3142 * C28092 + C3139 * C28091 +
            C3138 * C28090) *
               C153712 * C153783 * C153819) *
              C1253 +
          ((C415 * C28090 + C416 * C28091 + C3141 * C28092 + C3143 * C28093 +
            C28236 * C28094) *
               C153712 * C153783 * C153819 -
           (C3143 * C28094 + C3141 * C28093 + C416 * C28092 + C415 * C28091 +
            C193 * C28090) *
               C153712 * C153783 * C1251) *
              C1254 +
          ((C194 * C28090 + C414 * C28091 + C417 * C28092 + C3140 * C28093 +
            C3144 * C28094) *
               C153712 * C153783 * C1251 -
           ((C134 * C4574 + C4586 + C4586 + C153882 * C4580) * C28094 +
            C3144 * C28093 + C3140 * C28092 + C417 * C28091 + C414 * C28090) *
               C153712 * C153783 * C153819) *
              C1255)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C136 + C161 + C161 + C153882 * C152) * C28090 +
           C3138 * C28091 + C3139 * C28092 + C3142 * C28093 + C4591 * C28094) *
              C153712 * C153783 * C1338 -
          (C28235 * C28094 + C4591 * C28093 + C3142 * C28092 + C3139 * C28091 +
           C3138 * C28090) *
              C153712 * C153783 * C1339 +
          (C3139 * C28090 + C3142 * C28091 + C4591 * C28092 + C28235 * C28093 +
           C29003 * C28094) *
              C153712 * C153783 * C1340 -
          ((C134 * C28994 + C29000 + C29000 + C153882 * C28996) * C28094 +
           C29003 * C28093 + C28235 * C28092 + C4591 * C28091 +
           C3142 * C28090) *
              C153712 * C153783 * C1341) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C7055 * C136 + C7062 + C7062 + C154182 * C152 + C7057 * C556 +
             C7063 + C7063 + C154171 * C580 + C7059 * C557 + C7064 + C7064 +
             C154146 * C581) *
                C24168 +
            (C30715 + C30716 + C30717) * C24169 + C30728 * C154143) *
               C153712 * C153783 * C1251 -
           ((C30721 + C30722 + C30723) * C154143 +
            (C30720 + C30719 + C30718) * C24169 +
            (C30717 + C30716 + C30715) * C24168) *
               C153712 * C153783 * C153819) *
              C1253 +
          (((C7441 + C7440 + C7439) * C24168 +
            (C7442 + C7443 + C7444) * C24169 +
            (C30724 + C30725 + C30726) * C154143) *
               C153712 * C153783 * C153819 -
           (C30702 * C154143 + (C7439 + C7440 + C7441) * C24169 +
            (C7130 + C7129 + C7128) * C24168) *
               C153712 * C153783 * C1251) *
              C1254 +
          ((C7142 * C24168 + (C7438 + C7437 + C7436) * C24169 +
            (C7445 + C7446 + C7447) * C154143) *
               C153712 * C153783 * C1251 -
           ((C7059 * C4809 + C8939 + C8939 + C154146 * C4815 + C7057 * C4170 +
             C8940 + C8940 + C154171 * C4178 + C7055 * C1345 + C8941 + C8941 +
             C154182 * C1355) *
                C154143 +
            (C7447 + C7446 + C7445) * C24169 + C7990 * C24168) *
               C153712 * C153783 * C153819) *
              C1255)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C7055 * C136 + C7062 + C7062 + C154182 * C152 + C7057 * C556 +
            C7063 + C7063 + C154171 * C580 + C7059 * C557 + C7064 + C7064 +
            C154146 * C581) *
               C24168 +
           (C30715 + C30716 + C30717) * C24169 + C30728 * C154143) *
              C153712 * C153783 * C1338 -
          (C32113 * C154143 + (C30720 + C30719 + C30718) * C24169 +
           (C30717 + C30716 + C30715) * C24168) *
              C153712 * C153783 * C1339 +
          (C30728 * C24168 + (C30723 + C30722 + C30721) * C24169 +
           (C32120 + C32121 + C32122) * C154143) *
              C153712 * C153783 * C1340 -
          ((C7059 * C29125 + C32110 + C32110 + C154146 * C29127 +
            C7057 * C28772 + C32111 + C32111 + C154171 * C28776 +
            C7055 * C4576 + C32112 + C32112 + C154182 * C4582) *
               C154143 +
           (C32122 + C32121 + C32120) * C24169 + C32113 * C24168) *
              C153712 * C153783 * C1341) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C46971 * C136 + C46978 + C46978 + C46968 * C152 + C46973 * C556 +
             C46979 + C46979 + C46969 * C580 + C46975 * C557 + C46980 + C46980 +
             C154146 * C581) *
                C153865 * C154178 +
            (C47044 + C47045 + C47046) * C153865 * C154159 + C47060 * C154130) *
               C153783 * C1251 -
           (C47898 * C154130 + (C47355 + C47356 + C47357) * C153865 * C154159 +
            (C46975 * C1489 + C47298 + C47298 + C154146 * C1499 +
             C46973 * C1081 + C47299 + C47299 + C46969 * C1093 + C46971 * C335 +
             C47300 + C47300 + C46968 * C359) *
                C153865 * C154178) *
               C153783 * C153819) *
              C1253 +
          (((C47357 + C47356 + C47355) * C153865 * C154178 +
            (C47354 + C47353 + C47352) * C153865 * C154159 +
            (C47902 + C47903 + C47904) * C153865 * C154130) *
               C153783 * C153819 -
           (C47061 * C154130 + (C47049 + C47048 + C47047) * C153865 * C154159 +
            (C47046 + C47045 + C47044) * C153865 * C154178) *
               C153783 * C1251) *
              C1254 +
          ((C47060 * C154178 + (C47052 + C47051 + C47050) * C153865 * C154159 +
            (C47053 + C47054 + C47055) * C153865 * C154130) *
               C153783 * C1251 -
           ((C46975 * C1485 + C47891 + C47891 + C154146 * C1495 +
             C46973 * C1085 + C47892 + C47892 + C46969 * C1097 + C46971 * C331 +
             C47893 + C47893 + C46968 * C355) *
                C153865 * C154130 +
            (C47904 + C47903 + C47902) * C153865 * C154159 + C47898 * C154178) *
               C153783 * C153819) *
              C1255)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C46971 * C136 + C46978 + C46978 + C46968 * C152 + C46973 * C556 +
            C46979 + C46979 + C46969 * C580 + C46975 * C557 + C46980 + C46980 +
            C154146 * C581) *
               C153865 * C154178 +
           (C47044 + C47045 + C47046) * C153865 * C154159 + C47060 * C154130) *
              C153783 * C1338 -
          (C47898 * C154130 + (C47355 + C47356 + C47357) * C153865 * C154159 +
           (C46975 * C1489 + C47298 + C47298 + C154146 * C1499 +
            C46973 * C1081 + C47299 + C47299 + C46969 * C1093 + C46971 * C335 +
            C47300 + C47300 + C46968 * C359) *
               C153865 * C154178) *
              C153783 * C1339 +
          ((C46971 * C336 + C47301 + C47301 + C46968 * C360 + C46973 * C1920 +
            C47302 + C47302 + C46969 * C1930 + C46975 * C3369 + C47303 +
            C47303 + C154146 * C3377) *
               C153865 * C154178 +
           (C47358 + C47359 + C47360) * C153865 * C154159 +
           (C47361 + C47362 + C47363) * C153865 * C154130) *
              C153783 * C1340 -
          ((C46975 * C4809 + C48840 + C48840 + C154146 * C4815 +
            C46973 * C4170 + C48841 + C48841 + C46969 * C4178 + C46971 * C1345 +
            C48842 + C48842 + C46968 * C1355) *
               C153865 * C154130 +
           (C46975 * C4810 + C48843 + C48843 + C154146 * C4816 +
            C46973 * C4169 + C48844 + C48844 + C46969 * C4177 + C46971 * C1346 +
            C48845 + C48845 + C46968 * C1356) *
               C153865 * C154159 +
           (C46975 * C4811 + C48846 + C48846 + C154146 * C4817 +
            C46973 * C4168 + C48847 + C48847 + C46969 * C4176 + C46971 * C1347 +
            C48848 + C48848 + C46968 * C1357) *
               C153865 * C154178) *
              C153783 * C1341) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C46971 * C136 + C46978 + C46978 + C46968 * C152 + C46973 * C556 +
             C46979 + C46979 + C46969 * C580 + C46975 * C557 + C46980 + C46980 +
             C154146 * C581) *
                C154181 +
            (C51548 + C51549 + C51550) * C154169 + C51561 * C154143) *
               C153712 * C153783 * C1251 -
           ((C51554 + C51555 + C51556) * C154143 +
            (C51553 + C51552 + C51551) * C154169 +
            (C51550 + C51549 + C51548) * C154181) *
               C153712 * C153783 * C153819) *
              C1253 +
          (((C47357 + C47356 + C47355) * C154181 +
            (C47358 + C47359 + C47360) * C154169 +
            (C51557 + C51558 + C51559) * C154143) *
               C153712 * C153783 * C153819 -
           (C51535 * C154143 + (C47355 + C47356 + C47357) * C154169 +
            (C47046 + C47045 + C47044) * C154181) *
               C153712 * C153783 * C1251) *
              C1254 +
          ((C47058 * C154181 + (C47354 + C47353 + C47352) * C154169 +
            (C47361 + C47362 + C47363) * C154143) *
               C153712 * C153783 * C1251 -
           ((C46975 * C4809 + C48840 + C48840 + C154146 * C4815 +
             C46973 * C4170 + C48841 + C48841 + C46969 * C4178 +
             C46971 * C1345 + C48842 + C48842 + C46968 * C1355) *
                C154143 +
            (C47363 + C47362 + C47361) * C154169 + C47894 * C154181) *
               C153712 * C153783 * C153819) *
              C1255)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C46971 * C136 + C46978 + C46978 + C46968 * C152 + C46973 * C556 +
            C46979 + C46979 + C46969 * C580 + C46975 * C557 + C46980 + C46980 +
            C154146 * C581) *
               C154181 +
           (C51548 + C51549 + C51550) * C154169 + C51561 * C154143) *
              C153712 * C153783 * C1338 -
          (C52937 * C154143 + (C51553 + C51552 + C51551) * C154169 +
           (C51550 + C51549 + C51548) * C154181) *
              C153712 * C153783 * C1339 +
          (C51561 * C154181 + (C51556 + C51555 + C51554) * C154169 +
           (C52944 + C52945 + C52946) * C154143) *
              C153712 * C153783 * C1340 -
          ((C46975 * C29125 + C52934 + C52934 + C154146 * C29127 +
            C46973 * C28772 + C52935 + C52935 + C46969 * C28776 +
            C46971 * C4576 + C52936 + C52936 + C46968 * C4582) *
               C154143 +
           (C52946 + C52945 + C52944) * C154169 + C52937 * C154181) *
              C153712 * C153783 * C1341) *
         C153748) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C55344 * C136 + C55355 + C55355 + C55339 * C152 + C55346 * C556 +
            C55356 + C55356 + C55340 * C580 + C55348 * C557 + C55357 + C55357 +
            C55341 * C581 + C55350 * C2272 + C55358 + C55358 + C55342 * C2282 +
            C55352 * C7665 + C55359 + C55359 + C55343 * C7673) *
               C153865 * C153712 * C153783 * C1251 -
           (C55352 * C9167 + C55497 + C55497 + C55343 * C9173 + C55350 * C6161 +
            C55498 + C55498 + C55342 * C6173 + C55348 * C1489 + C55499 +
            C55499 + C55341 * C1499 + C55346 * C1081 + C55500 + C55500 +
            C55340 * C1093 + C55344 * C335 + C55501 + C55501 + C55339 * C359) *
               C153865 * C153712 * C153783 * C153819) *
              C1253 +
          ((C55344 * C334 + C55507 + C55507 + C55339 * C358 + C55346 * C1082 +
            C55508 + C55508 + C55340 * C1094 + C55348 * C1488 + C55509 +
            C55509 + C55341 * C1498 + C55350 * C6159 + C55510 + C55510 +
            C55342 * C6171 + C55352 * C9166 + C55511 + C55511 +
            C55343 * C9172) *
               C153865 * C153712 * C153783 * C153819 -
           (C55352 * C7666 + C55360 + C55360 + C55343 * C7674 + C55350 * C2271 +
            C55361 + C55361 + C55342 * C2281 + C55348 * C558 + C55362 + C55362 +
            C55341 * C582 + C55346 * C555 + C55363 + C55363 + C55340 * C579 +
            C55344 * C137 + C55364 + C55364 + C55339 * C153) *
               C153865 * C153712 * C153783 * C1251) *
              C1254 +
          ((C55344 * C138 + C55365 + C55365 + C55339 * C154 + C55346 * C554 +
            C55366 + C55366 + C55340 * C578 + C55348 * C559 + C55367 + C55367 +
            C55341 * C583 + C55350 * C2270 + C55368 + C55368 + C55342 * C2280 +
            C55352 * C7667 + C55369 + C55369 + C55343 * C7675) *
               C153865 * C153712 * C153783 * C1251 -
           (C55352 * C9165 + C55787 + C55787 + C55343 * C9171 + C55350 * C6157 +
            C55788 + C55788 + C55342 * C6169 + C55348 * C1487 + C55789 +
            C55789 + C55341 * C1497 + C55346 * C1083 + C55790 + C55790 +
            C55340 * C1095 + C55344 * C333 + C55791 + C55791 + C55339 * C357) *
               C153865 * C153712 * C153783 * C153819) *
              C1255)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((C55344 * C136 + C55355 + C55355 + C55339 * C152 + C55346 * C556 +
           C55356 + C55356 + C55340 * C580 + C55348 * C557 + C55357 + C55357 +
           C55341 * C581 + C55350 * C2272 + C55358 + C55358 + C55342 * C2282 +
           C55352 * C7665 + C55359 + C55359 + C55343 * C7673) *
              C153865 * C153712 * C153783 * C1338 -
          (C55352 * C9167 + C55497 + C55497 + C55343 * C9173 + C55350 * C6161 +
           C55498 + C55498 + C55342 * C6173 + C55348 * C1489 + C55499 + C55499 +
           C55341 * C1499 + C55346 * C1081 + C55500 + C55500 + C55340 * C1093 +
           C55344 * C335 + C55501 + C55501 + C55339 * C359) *
              C153865 * C153712 * C153783 * C1339 +
          (C55344 * C336 + C55502 + C55502 + C55339 * C360 + C55346 * C1920 +
           C55503 + C55503 + C55340 * C1930 + C55348 * C3369 + C55504 + C55504 +
           C55341 * C3377 + C55350 * C6160 + C55505 + C55505 + C55342 * C6172 +
           C55352 * C30946 + C55506 + C55506 + C55343 * C30950) *
              C153865 * C153712 * C153783 * C1340 -
          (C55352 * C32340 + C56298 + C56298 + C55343 * C32342 +
           C55350 * C29881 + C56299 + C56299 + C55342 * C29885 +
           C55348 * C4811 + C56300 + C56300 + C55341 * C4817 + C55346 * C4168 +
           C56301 + C56301 + C55340 * C4176 + C55344 * C1347 + C56302 + C56302 +
           C55339 * C1357) *
              C153865 * C153712 * C153783 * C1341) *
         C153748) /
            (p * q * std::sqrt(p + q));
    d2ee[190] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C134 * C136 + C161 + C161 + C153882 * C152) * C153865 * C123 +
                 C199 * C124 + C200 * C125 + C201 * C126 + C202 * C127) *
                    C2058 -
                (C641 * C127 + C642 * C126 + C643 * C125 + C644 * C124 +
                 (C134 * C556 + C601 + C601 + C153882 * C580) * C153865 *
                     C123) *
                    C153847) *
                   C154093 +
               (((C134 * C1081 + C1100 + C1100 + C153882 * C1093) * C153865 *
                     C123 +
                 C1126 * C124 + C1127 * C125 + C1128 * C126 + C1129 * C127) *
                    C153847 -
                (C420 * C127 + C421 * C126 + C422 * C125 + C423 * C124 +
                 (C134 * C335 + C380 + C380 + C153882 * C359) * C153865 *
                     C123) *
                    C2058) *
                   C153819) *
                  C154085 +
              (((C644 * C123 + C643 * C124 + C642 * C125 + C641 * C126 +
                 C919 * C127) *
                    C153847 -
                (C203 * C127 + C202 * C126 + C201 * C125 + C200 * C124 +
                 C199 * C123) *
                    C2058) *
                   C154093 +
               ((C423 * C123 + C422 * C124 + C421 * C125 + C420 * C126 +
                 C785 * C127) *
                    C2058 -
                ((C134 * C1086 + C1113 + C1113 + C153882 * C1098) * C153865 *
                     C127 +
                 C1129 * C126 + C1128 * C125 + C1127 * C124 + C1126 * C123) *
                    C153847) *
                   C153819) *
                  C153754) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((((C134 * C136 + C161 + C161 + C153882 * C152) * C154181 +
                  C3138 * C154169 + C3139 * C154143) *
                     C2846 +
                 (C2850 + C2851 + C2852) * C2847 + C2864 * C154130) *
                    C2058 -
                (C3874 * C154130 + (C3423 + C3388 + C3389) * C2847 +
                 (C4205 * C154143 + C4206 * C154169 +
                  (C134 * C556 + C601 + C601 + C153882 * C580) * C154181) *
                     C2846) *
                    C153847) *
                   C154093 +
               (((C4206 * C154181 + C4205 * C154169 + C5574 * C154143) * C2846 +
                 (C4186 + C4187 + C4209) * C2847 +
                 (C4191 + C4192 + C4210) * C154130) *
                    C153847 -
                (C3650 * C154130 + (C3147 + C3106 + C3107) * C2847 +
                 (C3142 * C154143 + C3139 * C154169 + C3138 * C154181) *
                     C2846) *
                    C2058) *
                   C153819) *
                  C154085 +
              ((((C3389 + C3388 + C3423) * C2846 +
                 (C3385 + C3384 + C3422) * C2847 +
                 (C3870 + C3871 + C3878) * C154130) *
                    C153847 -
                (C2865 * C154130 + (C2855 + C2854 + C2853) * C2847 +
                 (C2852 + C2851 + C2850) * C2846) *
                    C2058) *
                   C154093 +
               (((C3107 + C3106 + C3147) * C2846 +
                 (C3103 + C3102 + C3146) * C2847 +
                 (C3647 + C3648 + C3649) * C154130) *
                    C2058 -
                (((C134 * C4171 + C4196 + C4196 + C153882 * C4179) * C154143 +
                  C3877 * C154169 + C1124 * C154181) *
                     C154130 +
                 (C4210 + C4192 + C4191) * C2847 +
                 (C4209 + C4187 + C4186) * C2846) *
                    C153847) *
                   C153819) *
                  C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C7055 * C136 + C7062 + C7062 + C154182 * C152 + C7057 * C556 +
              C7063 + C7063 + C154171 * C580 + C7059 * C557 + C7064 + C7064 +
              C154146 * C581) *
                 C153865 * C2846 +
             (C7128 + C7129 + C7130) * C153865 * C2847 + C7144 * C154130) *
                C2058 -
            (C8233 * C154130 + (C7753 + C7754 + C7755) * C153865 * C2847 +
             (C7059 * C2272 + C7696 + C7696 + C154146 * C2282 + C7057 * C557 +
              C7697 + C7697 + C154171 * C581 + C7055 * C556 + C7698 + C7698 +
              C154182 * C580) *
                 C153865 * C2846) *
                C153847) *
               C154093 +
           (((C7055 * C1081 + C8533 + C8533 + C154182 * C1093 + C7057 * C1489 +
              C8534 + C8534 + C154171 * C1499 + C7059 * C6161 + C8535 + C8535 +
              C154146 * C6173) *
                 C153865 * C2846 +
             (C8569 + C8570 + C8571) * C153865 * C2847 +
             (C8572 + C8573 + C8574) * C153865 * C154130) *
                C153847 -
            (C7994 * C154130 + (C7439 + C7440 + C7441) * C153865 * C2847 +
             (C7059 * C1489 + C7382 + C7382 + C154146 * C1499 + C7057 * C1081 +
              C7383 + C7383 + C154171 * C1093 + C7055 * C335 + C7384 + C7384 +
              C154182 * C359) *
                 C153865 * C2846) *
                C2058) *
               C153819) *
              C154085 +
          ((((C7755 + C7754 + C7753) * C153865 * C2846 +
             (C7752 + C7751 + C7750) * C153865 * C2847 +
             (C8237 + C8238 + C8239) * C153865 * C154130) *
                C153847 -
            (C7145 * C154130 + (C7133 + C7132 + C7131) * C153865 * C2847 +
             (C7130 + C7129 + C7128) * C153865 * C2846) *
                C2058) *
               C154093 +
           (((C7441 + C7440 + C7439) * C153865 * C2846 +
             (C7438 + C7437 + C7436) * C153865 * C2847 +
             (C7998 + C7999 + C8000) * C153865 * C154130) *
                C2058 -
            ((C7059 * C8529 + C8554 + C8554 + C154146 * C8531 + C7057 * C1486 +
              C8555 + C8555 + C154171 * C1496 + C7055 * C1084 + C8556 + C8556 +
              C154182 * C1096) *
                 C153865 * C154130 +
             (C8574 + C8573 + C8572) * C153865 * C2847 +
             (C8571 + C8570 + C8569) * C153865 * C2846) *
                C153847) *
               C153819) *
              C153754)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C153882 * C152) * C24168 +
              C3138 * C24169 + C3139 * C154143) *
                 C154178 +
             (C24175 + C24176 + C24177) * C154159 + C24189 * C154130) *
                C2058 -
            (C25096 * C154130 + (C24642 + C24643 + C24644) * C154159 +
             (C4205 * C154143 + C4206 * C24169 +
              (C134 * C556 + C601 + C601 + C153882 * C580) * C24168) *
                 C154178) *
                C153847) *
               C154093 +
           (((C4206 * C24168 + C4205 * C24169 + C5574 * C154143) * C154178 +
             (C25387 + C25388 + C25389) * C154159 +
             (C25390 + C25391 + C25392) * C154130) *
                C153847 -
            (C24873 * C154130 + (C24412 + C24413 + C24414) * C154159 +
             (C3142 * C154143 + C3139 * C24169 + C3138 * C24168) * C154178) *
                C2058) *
               C153819) *
              C154085 +
          ((((C24644 + C24643 + C24642) * C154178 +
             (C24641 + C24640 + C24639) * C154159 +
             (C25093 + C25094 + C25095) * C154130) *
                C153847 -
            (C24190 * C154130 + (C24180 + C24179 + C24178) * C154159 +
             (C24177 + C24176 + C24175) * C154178) *
                C2058) *
               C154093 +
           (((C24414 + C24413 + C24412) * C154178 +
             (C24411 + C24410 + C24409) * C154159 +
             (C24870 + C24871 + C24872) * C154130) *
                C2058 -
            (((C134 * C4171 + C4196 + C4196 + C153882 * C4179) * C154143 +
              C3877 * C24169 + C1124 * C24168) *
                 C154130 +
             (C25392 + C25391 + C25390) * C154159 +
             (C25389 + C25388 + C25387) * C154178) *
                C153847) *
               C153819) *
              C153754)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C28090 +
             C3138 * C28091 + C3139 * C28092 + C3142 * C28093 +
             C4591 * C28094) *
                C153712 * C2058 -
            (C28789 * C28094 + C5574 * C28093 + C4205 * C28092 +
             C4206 * C28091 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C28090) *
                C153712 * C153847) *
               C154093 +
           ((C4206 * C28090 + C4205 * C28091 + C5574 * C28092 +
             C28789 * C28093 + C29554 * C28094) *
                C153712 * C153847 -
            (C28235 * C28094 + C4591 * C28093 + C3142 * C28092 +
             C3139 * C28091 + C3138 * C28090) *
                C153712 * C2058) *
               C153819) *
              C154085 +
          (((C636 * C28090 + C1122 * C28091 + C3417 * C28092 + C4207 * C28093 +
             C28790 * C28094) *
                C153712 * C153847 -
            (C3143 * C28094 + C3141 * C28093 + C416 * C28092 + C415 * C28091 +
             C193 * C28090) *
                C153712 * C2058) *
               C154093 +
           ((C415 * C28090 + C416 * C28091 + C3141 * C28092 + C3143 * C28093 +
             C28236 * C28094) *
                C153712 * C2058 -
            ((C134 * C28773 + C28784 + C28784 + C153882 * C28777) * C28094 +
             C28790 * C28093 + C4207 * C28092 + C3417 * C28091 +
             C1122 * C28090) *
                C153712 * C153847) *
               C153819) *
              C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C7055 * C136 + C7062 + C7062 + C154182 * C152 + C7057 * C556 +
              C7063 + C7063 + C154171 * C580 + C7059 * C557 + C7064 + C7064 +
              C154146 * C581) *
                 C24168 +
             (C30715 + C30716 + C30717) * C24169 + C30728 * C154143) *
                C153712 * C2058 -
            (C33113 * C154143 + (C31733 + C31734 + C31735) * C24169 +
             (C7059 * C2272 + C7696 + C7696 + C154146 * C2282 + C7057 * C557 +
              C7697 + C7697 + C154171 * C581 + C7055 * C556 + C7698 + C7698 +
              C154182 * C580) *
                 C24168) *
                C153712 * C153847) *
               C154093 +
           (((C31735 + C31734 + C31733) * C24168 +
             (C31732 + C31731 + C31730) * C24169 +
             (C33120 + C33121 + C33122) * C154143) *
                C153712 * C153847 -
            (C32113 * C154143 + (C30720 + C30719 + C30718) * C24169 +
             (C30717 + C30716 + C30715) * C24168) *
                C153712 * C2058) *
               C153819) *
              C154085 +
          ((((C7755 + C7754 + C7753) * C24168 +
             (C8569 + C8570 + C8571) * C24169 +
             (C31736 + C31737 + C31738) * C154143) *
                C153712 * C153847 -
            (C30702 * C154143 + (C7439 + C7440 + C7441) * C24169 +
             (C7130 + C7129 + C7128) * C24168) *
                C153712 * C2058) *
               C154093 +
           (((C7441 + C7440 + C7439) * C24168 +
             (C7442 + C7443 + C7444) * C24169 +
             (C30724 + C30725 + C30726) * C154143) *
                C153712 * C2058 -
            ((C7059 * C31684 + C31709 + C31709 + C154146 * C31686 +
              C7057 * C4810 + C31710 + C31710 + C154171 * C4816 +
              C7055 * C4169 + C31711 + C31711 + C154182 * C4177) *
                 C154143 +
             (C31738 + C31737 + C31736) * C24169 +
             (C8571 + C8570 + C8569) * C24168) *
                C153712 * C153847) *
               C153819) *
              C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C46971 * C136 + C46978 + C46978 + C46968 * C152 + C46973 * C556 +
              C46979 + C46979 + C46969 * C580 + C46975 * C557 + C46980 +
              C46980 + C154146 * C581) *
                 C153865 * C154178 +
             (C47044 + C47045 + C47046) * C153865 * C154159 +
             C47060 * C154130) *
                C2058 -
            (C48137 * C154130 + (C47657 + C47658 + C47659) * C153865 * C154159 +
             (C46975 * C2272 + C47600 + C47600 + C154146 * C2282 +
              C46973 * C557 + C47601 + C47601 + C46969 * C581 + C46971 * C556 +
              C47602 + C47602 + C46968 * C580) *
                 C153865 * C154178) *
                C153847) *
               C154093 +
           (((C46971 * C1081 + C48434 + C48434 + C46968 * C1093 +
              C46973 * C1489 + C48435 + C48435 + C46969 * C1499 +
              C46975 * C6161 + C48436 + C48436 + C154146 * C6173) *
                 C153865 * C154178 +
             (C48470 + C48471 + C48472) * C153865 * C154159 +
             (C48473 + C48474 + C48475) * C153865 * C154130) *
                C153847 -
            (C47898 * C154130 + (C47355 + C47356 + C47357) * C153865 * C154159 +
             (C46975 * C1489 + C47298 + C47298 + C154146 * C1499 +
              C46973 * C1081 + C47299 + C47299 + C46969 * C1093 +
              C46971 * C335 + C47300 + C47300 + C46968 * C359) *
                 C153865 * C154178) *
                C2058) *
               C153819) *
              C154085 +
          ((((C47659 + C47658 + C47657) * C153865 * C154178 +
             (C47656 + C47655 + C47654) * C153865 * C154159 +
             (C48141 + C48142 + C48143) * C153865 * C154130) *
                C153847 -
            (C47061 * C154130 + (C47049 + C47048 + C47047) * C153865 * C154159 +
             (C47046 + C47045 + C47044) * C153865 * C154178) *
                C2058) *
               C154093 +
           (((C47357 + C47356 + C47355) * C153865 * C154178 +
             (C47354 + C47353 + C47352) * C153865 * C154159 +
             (C47902 + C47903 + C47904) * C153865 * C154130) *
                C2058 -
            ((C46975 * C8529 + C48455 + C48455 + C154146 * C8531 +
              C46973 * C1486 + C48456 + C48456 + C46969 * C1496 +
              C46971 * C1084 + C48457 + C48457 + C46968 * C1096) *
                 C153865 * C154130 +
             (C48475 + C48474 + C48473) * C153865 * C154159 +
             (C48472 + C48471 + C48470) * C153865 * C154178) *
                C153847) *
               C153819) *
              C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C46971 * C136 + C46978 + C46978 + C46968 * C152 + C46973 * C556 +
              C46979 + C46979 + C46969 * C580 + C46975 * C557 + C46980 +
              C46980 + C154146 * C581) *
                 C154181 +
             (C51548 + C51549 + C51550) * C154169 + C51561 * C154143) *
                C153712 * C2058 -
            (C53934 * C154143 + (C52557 + C52558 + C52559) * C154169 +
             (C46975 * C2272 + C47600 + C47600 + C154146 * C2282 +
              C46973 * C557 + C47601 + C47601 + C46969 * C581 + C46971 * C556 +
              C47602 + C47602 + C46968 * C580) *
                 C154181) *
                C153712 * C153847) *
               C154093 +
           (((C52559 + C52558 + C52557) * C154181 +
             (C52556 + C52555 + C52554) * C154169 +
             (C53941 + C53942 + C53943) * C154143) *
                C153712 * C153847 -
            (C52937 * C154143 + (C51553 + C51552 + C51551) * C154169 +
             (C51550 + C51549 + C51548) * C154181) *
                C153712 * C2058) *
               C153819) *
              C154085 +
          ((((C47659 + C47658 + C47657) * C154181 +
             (C48470 + C48471 + C48472) * C154169 +
             (C52560 + C52561 + C52562) * C154143) *
                C153712 * C153847 -
            (C51535 * C154143 + (C47355 + C47356 + C47357) * C154169 +
             (C47046 + C47045 + C47044) * C154181) *
                C153712 * C2058) *
               C154093 +
           (((C47357 + C47356 + C47355) * C154181 +
             (C47358 + C47359 + C47360) * C154169 +
             (C51557 + C51558 + C51559) * C154143) *
                C153712 * C2058 -
            ((C46975 * C31684 + C52533 + C52533 + C154146 * C31686 +
              C46973 * C4810 + C52534 + C52534 + C46969 * C4816 +
              C46971 * C4169 + C52535 + C52535 + C46968 * C4177) *
                 C154143 +
             (C52562 + C52561 + C52560) * C154169 +
             (C48472 + C48471 + C48470) * C154181) *
                C153712 * C153847) *
               C153819) *
              C153754)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C55344 * C136 + C55355 + C55355 + C55339 * C152 + C55346 * C556 +
             C55356 + C55356 + C55340 * C580 + C55348 * C557 + C55357 + C55357 +
             C55341 * C581 + C55350 * C2272 + C55358 + C55358 + C55342 * C2282 +
             C55352 * C7665 + C55359 + C55359 + C55343 * C7673) *
                C153865 * C153712 * C2058 -
            (C55352 * C10502 + C55645 + C55645 + C55343 * C10508 +
             C55350 * C7665 + C55646 + C55646 + C55342 * C7673 +
             C55348 * C2272 + C55647 + C55647 + C55341 * C2282 + C55346 * C557 +
             C55648 + C55648 + C55340 * C581 + C55344 * C556 + C55649 + C55649 +
             C55339 * C580) *
                C153865 * C153712 * C153847) *
               C154093 +
           ((C55344 * C1081 + C56084 + C56084 + C55339 * C1093 +
             C55346 * C1489 + C56085 + C56085 + C55340 * C1499 +
             C55348 * C6161 + C56086 + C56086 + C55341 * C6173 +
             C55350 * C9167 + C56087 + C56087 + C55342 * C9173 +
             C55352 * C33705 + C56088 + C56088 + C55343 * C33709) *
                C153865 * C153712 * C153847 -
            (C55352 * C9167 + C55497 + C55497 + C55343 * C9173 +
             C55350 * C6161 + C55498 + C55498 + C55342 * C6173 +
             C55348 * C1489 + C55499 + C55499 + C55341 * C1499 +
             C55346 * C1081 + C55500 + C55500 + C55340 * C1093 + C55344 * C335 +
             C55501 + C55501 + C55339 * C359) *
                C153865 * C153712 * C2058) *
               C153819) *
              C154085 +
          (((C55344 * C555 + C55655 + C55655 + C55339 * C579 + C55346 * C558 +
             C55656 + C55656 + C55340 * C582 + C55348 * C2271 + C55657 +
             C55657 + C55341 * C2281 + C55350 * C7666 + C55658 + C55658 +
             C55342 * C7674 + C55352 * C10501 + C55659 + C55659 +
             C55343 * C10507) *
                C153865 * C153712 * C153847 -
            (C55352 * C7666 + C55360 + C55360 + C55343 * C7674 +
             C55350 * C2271 + C55361 + C55361 + C55342 * C2281 + C55348 * C558 +
             C55362 + C55362 + C55341 * C582 + C55346 * C555 + C55363 + C55363 +
             C55340 * C579 + C55344 * C137 + C55364 + C55364 + C55339 * C153) *
                C153865 * C153712 * C2058) *
               C154093 +
           ((C55344 * C334 + C55507 + C55507 + C55339 * C358 + C55346 * C1082 +
             C55508 + C55508 + C55340 * C1094 + C55348 * C1488 + C55509 +
             C55509 + C55341 * C1498 + C55350 * C6159 + C55510 + C55510 +
             C55342 * C6171 + C55352 * C9166 + C55511 + C55511 +
             C55343 * C9172) *
                C153865 * C153712 * C2058 -
            (C55352 * C56080 + C56089 + C56089 + C55343 * C56082 +
             C55350 * C9166 + C56090 + C56090 + C55342 * C9172 +
             C55348 * C6159 + C56091 + C56091 + C55341 * C6171 +
             C55346 * C1488 + C56092 + C56092 + C55340 * C1498 +
             C55344 * C1082 + C56093 + C56093 + C55339 * C1094) *
                C153865 * C153712 * C153847) *
               C153819) *
              C153754)) /
            (p * q * std::sqrt(p + q));
    d2ee[191] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C136 + C161 + C161 + C153882 * C152) * C153865 * C123 +
                C199 * C124 + C200 * C125 + C201 * C126 + C202 * C127) *
                   C154166 -
               (C641 * C127 + C642 * C126 + C643 * C125 + C644 * C124 +
                (C134 * C556 + C601 + C601 + C153882 * C580) * C153865 * C123) *
                   C154167 +
               ((C134 * C557 + C602 + C602 + C153882 * C581) * C153865 * C123 +
                C645 * C124 + C646 * C125 + C647 * C126 + C648 * C127) *
                   C2574) *
                  C154093 +
              (((C134 * C1081 + C1100 + C1100 + C153882 * C1093) * C153865 *
                    C123 +
                C1126 * C124 + C1127 * C125 + C1128 * C126 + C1129 * C127) *
                   C154167 -
               (C420 * C127 + C421 * C126 + C422 * C125 + C423 * C124 +
                (C134 * C335 + C380 + C380 + C153882 * C359) * C153865 * C123) *
                   C154166 -
               ((C134 * C1485 + C1501 + C1501 + C153882 * C1495) * C153865 *
                    C127 +
                (C134 * C1486 + C1502 + C1502 + C153882 * C1496) * C153865 *
                    C126 +
                (C134 * C1487 + C1503 + C1503 + C153882 * C1497) * C153865 *
                    C125 +
                (C134 * C1488 + C1504 + C1504 + C153882 * C1498) * C153865 *
                    C124 +
                (C134 * C1489 + C1505 + C1505 + C153882 * C1499) * C153865 *
                    C123) *
                   C2574) *
                  C153819) *
             C153748 +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C134 * C136 + C161 + C161 + C153882 * C152) * C154181 +
                 C3138 * C154169 + C3139 * C154143) *
                    C2846 +
                (C2850 + C2851 + C2852) * C2847 + C2864 * C154130) *
                   C154166 -
               (C3874 * C154130 + (C3423 + C3388 + C3389) * C2847 +
                (C4205 * C154143 + C4206 * C154169 +
                 (C134 * C556 + C601 + C601 + C153882 * C580) * C154181) *
                    C2846) *
                   C154167 +
               (((C134 * C557 + C602 + C602 + C153882 * C581) * C154181 +
                 C4830 * C154169 + C4831 * C154143) *
                    C2846 +
                (C3391 + C3424 + C3425) * C2847 +
                (C3397 + C3426 + C3427) * C154130) *
                   C2574) *
                  C154093 +
              (((C4206 * C154181 + C4205 * C154169 + C5574 * C154143) * C2846 +
                (C4186 + C4187 + C4209) * C2847 +
                (C4191 + C4192 + C4210) * C154130) *
                   C154167 -
               (C3650 * C154130 + (C3147 + C3106 + C3107) * C2847 +
                (C3142 * C154143 + C3139 * C154169 + C3138 * C154181) * C2846) *
                   C154166 -
               (((C134 * C4809 + C4823 + C4823 + C153882 * C4815) * C154143 +
                 C3421 * C154169 + C3420 * C154181) *
                    C154130 +
                ((C134 * C4810 + C4824 + C4824 + C153882 * C4816) * C154143 +
                 C3419 * C154169 + C3418 * C154181) *
                    C2847 +
                ((C134 * C4811 + C4825 + C4825 + C153882 * C4817) * C154143 +
                 C4831 * C154169 + C4830 * C154181) *
                    C2846) *
                   C2574) *
                  C153819) *
             C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C7055 * C136 + C7062 + C7062 + C154182 * C152 + C7057 * C556 +
             C7063 + C7063 + C154171 * C580 + C7059 * C557 + C7064 + C7064 +
             C154146 * C581) *
                C153865 * C2846 +
            (C7128 + C7129 + C7130) * C153865 * C2847 + C7144 * C154130) *
               C154166 -
           (C8233 * C154130 + (C7753 + C7754 + C7755) * C153865 * C2847 +
            (C7059 * C2272 + C7696 + C7696 + C154146 * C2282 + C7057 * C557 +
             C7697 + C7697 + C154171 * C581 + C7055 * C556 + C7698 + C7698 +
             C154182 * C580) *
                C153865 * C2846) *
               C154167 +
           ((C7055 * C557 + C7699 + C7699 + C154182 * C581 + C7057 * C2272 +
             C7700 + C7700 + C154171 * C2282 + C7059 * C7665 + C7701 + C7701 +
             C154146 * C7673) *
                C153865 * C2846 +
            (C7756 + C7757 + C7758) * C153865 * C2847 +
            (C7759 + C7760 + C7761) * C153865 * C154130) *
               C2574) *
              C154093 +
          (((C7055 * C1081 + C8533 + C8533 + C154182 * C1093 + C7057 * C1489 +
             C8534 + C8534 + C154171 * C1499 + C7059 * C6161 + C8535 + C8535 +
             C154146 * C6173) *
                C153865 * C2846 +
            (C8569 + C8570 + C8571) * C153865 * C2847 +
            (C8572 + C8573 + C8574) * C153865 * C154130) *
               C154167 -
           (C7994 * C154130 + (C7439 + C7440 + C7441) * C153865 * C2847 +
            (C7059 * C1489 + C7382 + C7382 + C154146 * C1499 + C7057 * C1081 +
             C7383 + C7383 + C154171 * C1093 + C7055 * C335 + C7384 + C7384 +
             C154182 * C359) *
                C153865 * C2846) *
               C154166 -
           ((C7059 * C9165 + C9175 + C9175 + C154146 * C9171 + C7057 * C6157 +
             C9176 + C9176 + C154171 * C6169 + C7055 * C1487 + C9177 + C9177 +
             C154182 * C1497) *
                C153865 * C154130 +
            (C7059 * C9166 + C9178 + C9178 + C154146 * C9172 + C7057 * C6159 +
             C9179 + C9179 + C154171 * C6171 + C7055 * C1488 + C9180 + C9180 +
             C154182 * C1498) *
                C153865 * C2847 +
            (C7059 * C9167 + C9181 + C9181 + C154146 * C9173 + C7057 * C6161 +
             C9182 + C9182 + C154171 * C6173 + C7055 * C1489 + C9183 + C9183 +
             C154182 * C1499) *
                C153865 * C2846) *
               C2574) *
              C153819) *
         C153748) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C24168 +
             C3138 * C24169 + C3139 * C154143) *
                C154178 +
            (C24175 + C24176 + C24177) * C154159 + C24189 * C154130) *
               C154166 -
           (C25096 * C154130 + (C24642 + C24643 + C24644) * C154159 +
            (C4205 * C154143 + C4206 * C24169 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C24168) *
                C154178) *
               C154167 +
           (((C134 * C557 + C602 + C602 + C153882 * C581) * C24168 +
             C4830 * C24169 + C4831 * C154143) *
                C154178 +
            (C24645 + C24646 + C24647) * C154159 +
            (C24648 + C24649 + C24650) * C154130) *
               C2574) *
              C154093 +
          (((C4206 * C24168 + C4205 * C24169 + C5574 * C154143) * C154178 +
            (C25387 + C25388 + C25389) * C154159 +
            (C25390 + C25391 + C25392) * C154130) *
               C154167 -
           (C24873 * C154130 + (C24412 + C24413 + C24414) * C154159 +
            (C3142 * C154143 + C3139 * C24169 + C3138 * C24168) * C154178) *
               C154166 -
           (((C134 * C4809 + C4823 + C4823 + C153882 * C4815) * C154143 +
             C3421 * C24169 + C3420 * C24168) *
                C154130 +
            ((C134 * C4810 + C4824 + C4824 + C153882 * C4816) * C154143 +
             C3419 * C24169 + C3418 * C24168) *
                C154159 +
            ((C134 * C4811 + C4825 + C4825 + C153882 * C4817) * C154143 +
             C4831 * C24169 + C4830 * C24168) *
                C154178) *
               C2574) *
              C153819) *
         C153748) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C28090 +
            C3138 * C28091 + C3139 * C28092 + C3142 * C28093 + C4591 * C28094) *
               C153712 * C154166 -
           (C28789 * C28094 + C5574 * C28093 + C4205 * C28092 + C4206 * C28091 +
            (C134 * C556 + C601 + C601 + C153882 * C580) * C28090) *
               C153712 * C154167 +
           ((C134 * C557 + C602 + C602 + C153882 * C581) * C28090 +
            C4830 * C28091 + C4831 * C28092 + C29138 * C28093 +
            C29139 * C28094) *
               C153712 * C2574) *
              C154093 +
          ((C4206 * C28090 + C4205 * C28091 + C5574 * C28092 + C28789 * C28093 +
            C29554 * C28094) *
               C153712 * C154167 -
           (C28235 * C28094 + C4591 * C28093 + C3142 * C28092 + C3139 * C28091 +
            C3138 * C28090) *
               C153712 * C154166 -
           ((C134 * C29125 + C29133 + C29133 + C153882 * C29127) * C28094 +
            C29139 * C28093 + C29138 * C28092 + C4831 * C28091 +
            C4830 * C28090) *
               C153712 * C2574) *
              C153819) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C7055 * C136 + C7062 + C7062 + C154182 * C152 + C7057 * C556 +
             C7063 + C7063 + C154171 * C580 + C7059 * C557 + C7064 + C7064 +
             C154146 * C581) *
                C24168 +
            (C30715 + C30716 + C30717) * C24169 + C30728 * C154143) *
               C153712 * C154166 -
           (C33113 * C154143 + (C31733 + C31734 + C31735) * C24169 +
            (C7059 * C2272 + C7696 + C7696 + C154146 * C2282 + C7057 * C557 +
             C7697 + C7697 + C154171 * C581 + C7055 * C556 + C7698 + C7698 +
             C154182 * C580) *
                C24168) *
               C153712 * C154167 +
           ((C7055 * C557 + C7699 + C7699 + C154182 * C581 + C7057 * C2272 +
             C7700 + C7700 + C154171 * C2282 + C7059 * C7665 + C7701 + C7701 +
             C154146 * C7673) *
                C24168 +
            (C32371 + C32372 + C32373) * C24169 +
            (C32374 + C32375 + C32376) * C154143) *
               C153712 * C2574) *
              C154093 +
          (((C31735 + C31734 + C31733) * C24168 +
            (C31732 + C31731 + C31730) * C24169 +
            (C33120 + C33121 + C33122) * C154143) *
               C153712 * C154167 -
           (C32113 * C154143 + (C30720 + C30719 + C30718) * C24169 +
            (C30717 + C30716 + C30715) * C24168) *
               C153712 * C154166 -
           ((C7059 * C32340 + C32356 + C32356 + C154146 * C32342 +
             C7057 * C29881 + C32357 + C32357 + C154171 * C29885 +
             C7055 * C4811 + C32358 + C32358 + C154182 * C4817) *
                C154143 +
            (C32376 + C32375 + C32374) * C24169 +
            (C32373 + C32372 + C32371) * C24168) *
               C153712 * C2574) *
              C153819) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C46971 * C136 + C46978 + C46978 + C46968 * C152 + C46973 * C556 +
             C46979 + C46979 + C46969 * C580 + C46975 * C557 + C46980 + C46980 +
             C154146 * C581) *
                C153865 * C154178 +
            (C47044 + C47045 + C47046) * C153865 * C154159 + C47060 * C154130) *
               C154166 -
           (C48137 * C154130 + (C47657 + C47658 + C47659) * C153865 * C154159 +
            (C46975 * C2272 + C47600 + C47600 + C154146 * C2282 +
             C46973 * C557 + C47601 + C47601 + C46969 * C581 + C46971 * C556 +
             C47602 + C47602 + C46968 * C580) *
                C153865 * C154178) *
               C154167 +
           ((C46971 * C557 + C47603 + C47603 + C46968 * C581 + C46973 * C2272 +
             C47604 + C47604 + C46969 * C2282 + C46975 * C7665 + C47605 +
             C47605 + C154146 * C7673) *
                C153865 * C154178 +
            (C47660 + C47661 + C47662) * C153865 * C154159 +
            (C47663 + C47664 + C47665) * C153865 * C154130) *
               C2574) *
              C154093 +
          (((C46971 * C1081 + C48434 + C48434 + C46968 * C1093 +
             C46973 * C1489 + C48435 + C48435 + C46969 * C1499 +
             C46975 * C6161 + C48436 + C48436 + C154146 * C6173) *
                C153865 * C154178 +
            (C48470 + C48471 + C48472) * C153865 * C154159 +
            (C48473 + C48474 + C48475) * C153865 * C154130) *
               C154167 -
           (C47898 * C154130 + (C47355 + C47356 + C47357) * C153865 * C154159 +
            (C46975 * C1489 + C47298 + C47298 + C154146 * C1499 +
             C46973 * C1081 + C47299 + C47299 + C46969 * C1093 + C46971 * C335 +
             C47300 + C47300 + C46968 * C359) *
                C153865 * C154178) *
               C154166 -
           ((C46975 * C9165 + C49067 + C49067 + C154146 * C9171 +
             C46973 * C6157 + C49068 + C49068 + C46969 * C6169 +
             C46971 * C1487 + C49069 + C49069 + C46968 * C1497) *
                C153865 * C154130 +
            (C46975 * C9166 + C49070 + C49070 + C154146 * C9172 +
             C46973 * C6159 + C49071 + C49071 + C46969 * C6171 +
             C46971 * C1488 + C49072 + C49072 + C46968 * C1498) *
                C153865 * C154159 +
            (C46975 * C9167 + C49073 + C49073 + C154146 * C9173 +
             C46973 * C6161 + C49074 + C49074 + C46969 * C6173 +
             C46971 * C1489 + C49075 + C49075 + C46968 * C1499) *
                C153865 * C154178) *
               C2574) *
              C153819) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C46971 * C136 + C46978 + C46978 + C46968 * C152 + C46973 * C556 +
             C46979 + C46979 + C46969 * C580 + C46975 * C557 + C46980 + C46980 +
             C154146 * C581) *
                C154181 +
            (C51548 + C51549 + C51550) * C154169 + C51561 * C154143) *
               C153712 * C154166 -
           (C53934 * C154143 + (C52557 + C52558 + C52559) * C154169 +
            (C46975 * C2272 + C47600 + C47600 + C154146 * C2282 +
             C46973 * C557 + C47601 + C47601 + C46969 * C581 + C46971 * C556 +
             C47602 + C47602 + C46968 * C580) *
                C154181) *
               C153712 * C154167 +
           ((C46971 * C557 + C47603 + C47603 + C46968 * C581 + C46973 * C2272 +
             C47604 + C47604 + C46969 * C2282 + C46975 * C7665 + C47605 +
             C47605 + C154146 * C7673) *
                C154181 +
            (C53192 + C53193 + C53194) * C154169 +
            (C53195 + C53196 + C53197) * C154143) *
               C153712 * C2574) *
              C154093 +
          (((C52559 + C52558 + C52557) * C154181 +
            (C52556 + C52555 + C52554) * C154169 +
            (C53941 + C53942 + C53943) * C154143) *
               C153712 * C154167 -
           (C52937 * C154143 + (C51553 + C51552 + C51551) * C154169 +
            (C51550 + C51549 + C51548) * C154181) *
               C153712 * C154166 -
           ((C46975 * C32340 + C53177 + C53177 + C154146 * C32342 +
             C46973 * C29881 + C53178 + C53178 + C46969 * C29885 +
             C46971 * C4811 + C53179 + C53179 + C46968 * C4817) *
                C154143 +
            (C53197 + C53196 + C53195) * C154169 +
            (C53194 + C53193 + C53192) * C154181) *
               C153712 * C2574) *
              C153819) *
         C153748) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C55344 * C136 + C55355 + C55355 + C55339 * C152 + C55346 * C556 +
            C55356 + C55356 + C55340 * C580 + C55348 * C557 + C55357 + C55357 +
            C55341 * C581 + C55350 * C2272 + C55358 + C55358 + C55342 * C2282 +
            C55352 * C7665 + C55359 + C55359 + C55343 * C7673) *
               C153865 * C153712 * C154166 -
           (C55352 * C10502 + C55645 + C55645 + C55343 * C10508 +
            C55350 * C7665 + C55646 + C55646 + C55342 * C7673 + C55348 * C2272 +
            C55647 + C55647 + C55341 * C2282 + C55346 * C557 + C55648 + C55648 +
            C55340 * C581 + C55344 * C556 + C55649 + C55649 + C55339 * C580) *
               C153865 * C153712 * C154167 +
           (C55344 * C557 + C55650 + C55650 + C55339 * C581 + C55346 * C2272 +
            C55651 + C55651 + C55340 * C2282 + C55348 * C7665 + C55652 +
            C55652 + C55341 * C7673 + C55350 * C10502 + C55653 + C55653 +
            C55342 * C10508 + C55352 * C55638 + C55654 + C55654 +
            C55343 * C55642) *
               C153865 * C153712 * C2574) *
              C154093 +
          ((C55344 * C1081 + C56084 + C56084 + C55339 * C1093 + C55346 * C1489 +
            C56085 + C56085 + C55340 * C1499 + C55348 * C6161 + C56086 +
            C56086 + C55341 * C6173 + C55350 * C9167 + C56087 + C56087 +
            C55342 * C9173 + C55352 * C33705 + C56088 + C56088 +
            C55343 * C33709) *
               C153865 * C153712 * C154167 -
           (C55352 * C9167 + C55497 + C55497 + C55343 * C9173 + C55350 * C6161 +
            C55498 + C55498 + C55342 * C6173 + C55348 * C1489 + C55499 +
            C55499 + C55341 * C1499 + C55346 * C1081 + C55500 + C55500 +
            C55340 * C1093 + C55344 * C335 + C55501 + C55501 + C55339 * C359) *
               C153865 * C153712 * C154166 -
           (C55352 * C56424 + C56428 + C56428 + C55343 * C56426 +
            C55350 * C33705 + C56429 + C56429 + C55342 * C33709 +
            C55348 * C9167 + C56430 + C56430 + C55341 * C9173 + C55346 * C6161 +
            C56431 + C56431 + C55340 * C6173 + C55344 * C1489 + C56432 +
            C56432 + C55339 * C1499) *
               C153865 * C153712 * C2574) *
              C153819) *
         C153748) /
            (p * q * std::sqrt(p + q));
    d2ee[192] +=
        (-0.25 * std::pow(Pi, 2.5) *
             ((((C134 * C136 + C161 + C161 + C153882 * C152) * C153865 * C123 +
                C199 * C124 + C200 * C125 + C201 * C126 + C202 * C127) *
                   C2058 -
               (C641 * C127 + C642 * C126 + C643 * C125 + C644 * C124 +
                (C134 * C556 + C601 + C601 + C153882 * C580) * C153865 * C123) *
                   C153847) *
                  C153767 * C1253 +
              ((C644 * C123 + C643 * C124 + C642 * C125 + C641 * C126 +
                C919 * C127) *
                   C153847 -
               (C203 * C127 + C202 * C126 + C201 * C125 + C200 * C124 +
                C199 * C123) *
                   C2058) *
                  C153767 * C1254 +
              ((C200 * C123 + C201 * C124 + C202 * C125 + C203 * C126 +
                C204 * C127) *
                   C2058 -
               ((C134 * C909 + C915 + C915 + C153882 * C911) * C153865 * C127 +
                C919 * C126 + C641 * C125 + C642 * C124 + C643 * C123) *
                   C153847) *
                  C153767 * C1255) -
         0.25 * std::pow(Pi, 2.5) *
             ((((C134 * C136 + C161 + C161 + C153882 * C152) * C153865 * C123 +
                C199 * C124 + C200 * C125 + C201 * C126 + C202 * C127) *
                   C2058 -
               (C641 * C127 + C642 * C126 + C643 * C125 + C644 * C124 +
                (C134 * C556 + C601 + C601 + C153882 * C580) * C153865 * C123) *
                   C153847) *
                  C326 +
              (((C134 * C1081 + C1100 + C1100 + C153882 * C1093) * C153865 *
                    C123 +
                C1126 * C124 + C1127 * C125 + C1128 * C126 + C1129 * C127) *
                   C153847 -
               (C420 * C127 + C421 * C126 + C422 * C125 + C423 * C124 +
                (C134 * C335 + C380 + C380 + C153882 * C359) * C153865 * C123) *
                   C2058) *
                  C327 +
              (((C134 * C336 + C381 + C381 + C153882 * C360) * C153865 * C123 +
                C424 * C124 + C425 * C125 + C426 * C126 + C427 * C127) *
                   C2058 -
               ((C134 * C1916 + C1932 + C1932 + C153882 * C1926) * C153865 *
                    C127 +
                (C134 * C1917 + C1933 + C1933 + C153882 * C1927) * C153865 *
                    C126 +
                (C134 * C1918 + C1934 + C1934 + C153882 * C1928) * C153865 *
                    C125 +
                (C134 * C1919 + C1935 + C1935 + C153882 * C1929) * C153865 *
                    C124 +
                (C134 * C1920 + C1936 + C1936 + C153882 * C1930) * C153865 *
                    C123) *
                   C153847) *
                  C328) *
             C153748 +
         0.5 * std::pow(Pi, 2.5) *
             (((C134 * C136 + C161 + C161 + C153882 * C152) * C153865 * C123 +
               C199 * C124 + C200 * C125 + C201 * C126 + C202 * C127) *
                  C2264 -
              (C641 * C127 + C642 * C126 + C643 * C125 + C644 * C124 +
               (C134 * C556 + C601 + C601 + C153882 * C580) * C153865 * C123) *
                  C2265 +
              ((C134 * C557 + C602 + C602 + C153882 * C581) * C153865 * C123 +
               C645 * C124 + C646 * C125 + C647 * C126 + C648 * C127) *
                  C2266 -
              ((C134 * C2268 + C2284 + C2284 + C153882 * C2278) * C153865 *
                   C127 +
               (C134 * C2269 + C2285 + C2285 + C153882 * C2279) * C153865 *
                   C126 +
               (C134 * C2270 + C2286 + C2286 + C153882 * C2280) * C153865 *
                   C125 +
               (C134 * C2271 + C2287 + C2287 + C153882 * C2281) * C153865 *
                   C124 +
               (C134 * C2272 + C2288 + C2288 + C153882 * C2282) * C153865 *
                   C123) *
                  C2267) *
             C153767 * C153748 -
         0.25 * std::pow(Pi, 2.5) *
             (((((C134 * C136 + C161 + C161 + C153882 * C152) * C154181 +
                 C3138 * C154169 + C3139 * C154143) *
                    C2846 +
                (C2850 + C2851 + C2852) * C2847 + C2864 * C154130) *
                   C2058 -
               (C3874 * C154130 + (C3423 + C3388 + C3389) * C2847 +
                (C4205 * C154143 + C4206 * C154169 +
                 (C134 * C556 + C601 + C601 + C153882 * C580) * C154181) *
                    C2846) *
                   C153847) *
                  C153767 * C1253 +
              (((C3389 + C3388 + C3423) * C2846 +
                (C3385 + C3384 + C3422) * C2847 +
                (C3870 + C3871 + C3878) * C154130) *
                   C153847 -
               (C2865 * C154130 + (C2855 + C2854 + C2853) * C2847 +
                (C2852 + C2851 + C2850) * C2846) *
                   C2058) *
                  C153767 * C1254 +
              ((C2864 * C2846 + (C2858 + C2857 + C2856) * C2847 +
                (C2859 + C2860 + C2861) * C154130) *
                   C2058 -
               (((C134 * C1916 + C1932 + C1932 + C153882 * C1926) * C154143 +
                 C1125 * C154169 + C633 * C154181) *
                    C154130 +
                (C3878 + C3871 + C3870) * C2847 + C3874 * C2846) *
                   C153847) *
                  C153767 * C1255) -
         0.25 * std::pow(Pi, 2.5) *
             (((((C134 * C136 + C161 + C161 + C153882 * C152) * C154181 +
                 C3138 * C154169 + C3139 * C154143) *
                    C2846 +
                (C2850 + C2851 + C2852) * C2847 + C2864 * C154130) *
                   C2058 -
               (C3874 * C154130 + (C3423 + C3388 + C3389) * C2847 +
                (C4205 * C154143 + C4206 * C154169 +
                 (C134 * C556 + C601 + C601 + C153882 * C580) * C154181) *
                    C2846) *
                   C153847) *
                  C326 +
              (((C4206 * C154181 + C4205 * C154169 + C5574 * C154143) * C2846 +
                (C4186 + C4187 + C4209) * C2847 +
                (C4191 + C4192 + C4210) * C154130) *
                   C153847 -
               (C3650 * C154130 + (C3147 + C3106 + C3107) * C2847 +
                (C3142 * C154143 + C3139 * C154169 + C3138 * C154181) * C2846) *
                   C2058) *
                  C327 +
              (((C3139 * C154181 + C3142 * C154169 + C4591 * C154143) * C2846 +
                (C3111 + C3148 + C3149) * C2847 +
                (C3115 + C3150 + C3151) * C154130) *
                   C2058 -
               (((C134 * C5557 + C5569 + C5569 + C153882 * C5563) * C154143 +
                 C4208 * C154169 + C3416 * C154181) *
                    C154130 +
                ((C134 * C5558 + C5570 + C5570 + C153882 * C5564) * C154143 +
                 C4207 * C154169 + C3417 * C154181) *
                    C2847 +
                ((C134 * C5559 + C5571 + C5571 + C153882 * C5565) * C154143 +
                 C5574 * C154169 + C4205 * C154181) *
                    C2846) *
                   C153847) *
                  C328) *
             C153748 +
         0.5 * std::pow(Pi, 2.5) *
             ((((C134 * C136 + C161 + C161 + C153882 * C152) * C154181 +
                C3138 * C154169 + C3139 * C154143) *
                   C2846 +
               (C2850 + C2851 + C2852) * C2847 + C2864 * C154130) *
                  C2264 -
              (C3874 * C154130 + (C3423 + C3388 + C3389) * C2847 +
               (C4205 * C154143 + C4206 * C154169 +
                (C134 * C556 + C601 + C601 + C153882 * C580) * C154181) *
                   C2846) *
                  C2265 +
              (((C134 * C557 + C602 + C602 + C153882 * C581) * C154181 +
                C4830 * C154169 + C4831 * C154143) *
                   C2846 +
               (C3391 + C3424 + C3425) * C2847 +
               (C3397 + C3426 + C3427) * C154130) *
                  C2266 -
              (((C134 * C6156 + C6175 + C6175 + C153882 * C6168) * C154143 +
                (C134 * C6157 + C6176 + C6176 + C153882 * C6169) * C154169 +
                (C134 * C2270 + C2286 + C2286 + C153882 * C2280) * C154181) *
                   C154130 +
               ((C134 * C6158 + C6177 + C6177 + C153882 * C6170) * C154143 +
                (C134 * C6159 + C6178 + C6178 + C153882 * C6171) * C154169 +
                (C134 * C2271 + C2287 + C2287 + C153882 * C2281) * C154181) *
                   C2847 +
               ((C134 * C6160 + C6179 + C6179 + C153882 * C6172) * C154143 +
                (C134 * C6161 + C6180 + C6180 + C153882 * C6173) * C154169 +
                (C134 * C2272 + C2288 + C2288 + C153882 * C2282) * C154181) *
                   C2846) *
                  C2267) *
             C153767 * C153748 +
         0.5 * std::pow(Pi, 2.5) *
             ((((C7055 * C136 + C7062 + C7062 + C154182 * C152 + C7057 * C556 +
                 C7063 + C7063 + C154171 * C580 + C7059 * C557 + C7064 + C7064 +
                 C154146 * C581) *
                    C153865 * C2846 +
                (C7128 + C7129 + C7130) * C153865 * C2847 + C7144 * C154130) *
                   C2058 -
               (C8233 * C154130 + (C7753 + C7754 + C7755) * C153865 * C2847 +
                (C7059 * C2272 + C7696 + C7696 + C154146 * C2282 +
                 C7057 * C557 + C7697 + C7697 + C154171 * C581 + C7055 * C556 +
                 C7698 + C7698 + C154182 * C580) *
                    C153865 * C2846) *
                   C153847) *
                  C153767 * C1253 +
              (((C7755 + C7754 + C7753) * C153865 * C2846 +
                (C7752 + C7751 + C7750) * C153865 * C2847 +
                (C8237 + C8238 + C8239) * C153865 * C154130) *
                   C153847 -
               (C7145 * C154130 + (C7133 + C7132 + C7131) * C153865 * C2847 +
                (C7130 + C7129 + C7128) * C153865 * C2846) *
                   C2058) *
                  C153767 * C1254 +
              ((C7144 * C2846 + (C7136 + C7135 + C7134) * C153865 * C2847 +
                (C7137 + C7138 + C7139) * C153865 * C154130) *
                   C2058 -
               ((C7059 * C2268 + C8226 + C8226 + C154146 * C2278 +
                 C7057 * C561 + C8227 + C8227 + C154171 * C585 + C7055 * C552 +
                 C8228 + C8228 + C154182 * C576) *
                    C153865 * C154130 +
                (C8239 + C8238 + C8237) * C153865 * C2847 + C8233 * C2846) *
                   C153847) *
                  C153767 * C1255) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C7055 * C136 + C7062 + C7062 + C154182 * C152 + C7057 * C556 +
                 C7063 + C7063 + C154171 * C580 + C7059 * C557 + C7064 + C7064 +
                 C154146 * C581) *
                    C153865 * C2846 +
                (C7128 + C7129 + C7130) * C153865 * C2847 + C7144 * C154130) *
                   C2058 -
               (C8233 * C154130 + (C7753 + C7754 + C7755) * C153865 * C2847 +
                (C7059 * C2272 + C7696 + C7696 + C154146 * C2282 +
                 C7057 * C557 + C7697 + C7697 + C154171 * C581 + C7055 * C556 +
                 C7698 + C7698 + C154182 * C580) *
                    C153865 * C2846) *
                   C153847) *
                  C326 +
              (((C7055 * C1081 + C8533 + C8533 + C154182 * C1093 +
                 C7057 * C1489 + C8534 + C8534 + C154171 * C1499 +
                 C7059 * C6161 + C8535 + C8535 + C154146 * C6173) *
                    C153865 * C2846 +
                (C8569 + C8570 + C8571) * C153865 * C2847 +
                (C8572 + C8573 + C8574) * C153865 * C154130) *
                   C153847 -
               (C7994 * C154130 + (C7439 + C7440 + C7441) * C153865 * C2847 +
                (C7059 * C1489 + C7382 + C7382 + C154146 * C1499 +
                 C7057 * C1081 + C7383 + C7383 + C154171 * C1093 +
                 C7055 * C335 + C7384 + C7384 + C154182 * C359) *
                    C153865 * C2846) *
                   C2058) *
                  C327 +
              (((C7055 * C336 + C7385 + C7385 + C154182 * C360 + C7057 * C1920 +
                 C7386 + C7386 + C154171 * C1930 + C7059 * C3369 + C7387 +
                 C7387 + C154146 * C3377) *
                    C153865 * C2846 +
                (C7442 + C7443 + C7444) * C153865 * C2847 +
                (C7445 + C7446 + C7447) * C153865 * C154130) *
                   C2058 -
               ((C7059 * C6156 + C9910 + C9910 + C154146 * C6168 +
                 C7057 * C3371 + C9911 + C9911 + C154171 * C3379 +
                 C7055 * C1918 + C9912 + C9912 + C154182 * C1928) *
                    C153865 * C154130 +
                (C7059 * C6158 + C9913 + C9913 + C154146 * C6170 +
                 C7057 * C3370 + C9914 + C9914 + C154171 * C3378 +
                 C7055 * C1919 + C9915 + C9915 + C154182 * C1929) *
                    C153865 * C2847 +
                (C7059 * C6160 + C9916 + C9916 + C154146 * C6172 +
                 C7057 * C3369 + C9917 + C9917 + C154171 * C3377 +
                 C7055 * C1920 + C9918 + C9918 + C154182 * C1930) *
                    C153865 * C2846) *
                   C153847) *
                  C328) *
             C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C7055 * C136 + C7062 + C7062 + C154182 * C152 + C7057 * C556 +
            C7063 + C7063 + C154171 * C580 + C7059 * C557 + C7064 + C7064 +
            C154146 * C581) *
               C153865 * C2846 +
           (C7128 + C7129 + C7130) * C153865 * C2847 + C7144 * C154130) *
              C2264 -
          (C8233 * C154130 + (C7753 + C7754 + C7755) * C153865 * C2847 +
           (C7059 * C2272 + C7696 + C7696 + C154146 * C2282 + C7057 * C557 +
            C7697 + C7697 + C154171 * C581 + C7055 * C556 + C7698 + C7698 +
            C154182 * C580) *
               C153865 * C2846) *
              C2265 +
          ((C7055 * C557 + C7699 + C7699 + C154182 * C581 + C7057 * C2272 +
            C7700 + C7700 + C154171 * C2282 + C7059 * C7665 + C7701 + C7701 +
            C154146 * C7673) *
               C153865 * C2846 +
           (C7756 + C7757 + C7758) * C153865 * C2847 +
           (C7759 + C7760 + C7761) * C153865 * C154130) *
              C2266 -
          ((C7059 * C10500 + C10510 + C10510 + C154146 * C10506 +
            C7057 * C7667 + C10511 + C10511 + C154171 * C7675 + C7055 * C2270 +
            C10512 + C10512 + C154182 * C2280) *
               C153865 * C154130 +
           (C7059 * C10501 + C10513 + C10513 + C154146 * C10507 +
            C7057 * C7666 + C10514 + C10514 + C154171 * C7674 + C7055 * C2271 +
            C10515 + C10515 + C154182 * C2281) *
               C153865 * C2847 +
           (C7059 * C10502 + C10516 + C10516 + C154146 * C10508 +
            C7057 * C7665 + C10517 + C10517 + C154171 * C7673 + C7055 * C2272 +
            C10518 + C10518 + C154182 * C2282) *
               C153865 * C2846) *
              C2267) *
         C153767 * C153748) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C24168 +
             C3138 * C24169 + C3139 * C154143) *
                C154178 +
            (C24175 + C24176 + C24177) * C154159 + C24189 * C154130) *
               C2058 -
           (C25096 * C154130 + (C24642 + C24643 + C24644) * C154159 +
            (C4205 * C154143 + C4206 * C24169 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C24168) *
                C154178) *
               C153847) *
              C153767 * C1253 +
          (((C24644 + C24643 + C24642) * C154178 +
            (C24641 + C24640 + C24639) * C154159 +
            (C25093 + C25094 + C25095) * C154130) *
               C153847 -
           (C24190 * C154130 + (C24180 + C24179 + C24178) * C154159 +
            (C24177 + C24176 + C24175) * C154178) *
               C2058) *
              C153767 * C1254 +
          ((C24189 * C154178 + (C24183 + C24182 + C24181) * C154159 +
            (C24184 + C24185 + C24186) * C154130) *
               C2058 -
           (((C134 * C1916 + C1932 + C1932 + C153882 * C1926) * C154143 +
             C1125 * C24169 + C633 * C24168) *
                C154130 +
            (C25095 + C25094 + C25093) * C154159 + C25096 * C154178) *
               C153847) *
              C153767 * C1255)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C24168 +
             C3138 * C24169 + C3139 * C154143) *
                C154178 +
            (C24175 + C24176 + C24177) * C154159 + C24189 * C154130) *
               C2058 -
           (C25096 * C154130 + (C24642 + C24643 + C24644) * C154159 +
            (C4205 * C154143 + C4206 * C24169 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C24168) *
                C154178) *
               C153847) *
              C326 +
          (((C4206 * C24168 + C4205 * C24169 + C5574 * C154143) * C154178 +
            (C25387 + C25388 + C25389) * C154159 +
            (C25390 + C25391 + C25392) * C154130) *
               C153847 -
           (C24873 * C154130 + (C24412 + C24413 + C24414) * C154159 +
            (C3142 * C154143 + C3139 * C24169 + C3138 * C24168) * C154178) *
               C2058) *
              C327 +
          (((C3139 * C24168 + C3142 * C24169 + C4591 * C154143) * C154178 +
            (C24415 + C24416 + C24417) * C154159 +
            (C24418 + C24419 + C24420) * C154130) *
               C2058 -
           (((C134 * C5557 + C5569 + C5569 + C153882 * C5563) * C154143 +
             C4208 * C24169 + C3416 * C24168) *
                C154130 +
            ((C134 * C5558 + C5570 + C5570 + C153882 * C5564) * C154143 +
             C4207 * C24169 + C3417 * C24168) *
                C154159 +
            ((C134 * C5559 + C5571 + C5571 + C153882 * C5565) * C154143 +
             C5574 * C24169 + C4205 * C24168) *
                C154178) *
               C153847) *
              C328) *
         C153748) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C24168 +
            C3138 * C24169 + C3139 * C154143) *
               C154178 +
           (C24175 + C24176 + C24177) * C154159 + C24189 * C154130) *
              C2264 -
          (C25096 * C154130 + (C24642 + C24643 + C24644) * C154159 +
           (C4205 * C154143 + C4206 * C24169 +
            (C134 * C556 + C601 + C601 + C153882 * C580) * C24168) *
               C154178) *
              C2265 +
          (((C134 * C557 + C602 + C602 + C153882 * C581) * C24168 +
            C4830 * C24169 + C4831 * C154143) *
               C154178 +
           (C24645 + C24646 + C24647) * C154159 +
           (C24648 + C24649 + C24650) * C154130) *
              C2266 -
          (((C134 * C6156 + C6175 + C6175 + C153882 * C6168) * C154143 +
            (C134 * C6157 + C6176 + C6176 + C153882 * C6169) * C24169 +
            (C134 * C2270 + C2286 + C2286 + C153882 * C2280) * C24168) *
               C154130 +
           ((C134 * C6158 + C6177 + C6177 + C153882 * C6170) * C154143 +
            (C134 * C6159 + C6178 + C6178 + C153882 * C6171) * C24169 +
            (C134 * C2271 + C2287 + C2287 + C153882 * C2281) * C24168) *
               C154159 +
           ((C134 * C6160 + C6179 + C6179 + C153882 * C6172) * C154143 +
            (C134 * C6161 + C6180 + C6180 + C153882 * C6173) * C24169 +
            (C134 * C2272 + C2288 + C2288 + C153882 * C2282) * C24168) *
               C154178) *
              C2267) *
         C153767 * C153748) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C28090 +
            C3138 * C28091 + C3139 * C28092 + C3142 * C28093 + C4591 * C28094) *
               C153712 * C2058 -
           (C28789 * C28094 + C5574 * C28093 + C4205 * C28092 + C4206 * C28091 +
            (C134 * C556 + C601 + C601 + C153882 * C580) * C28090) *
               C153712 * C153847) *
              C153767 * C1253 +
          ((C636 * C28090 + C1122 * C28091 + C3417 * C28092 + C4207 * C28093 +
            C28790 * C28094) *
               C153712 * C153847 -
           (C3143 * C28094 + C3141 * C28093 + C416 * C28092 + C415 * C28091 +
            C193 * C28090) *
               C153712 * C2058) *
              C153767 * C1254 +
          ((C194 * C28090 + C414 * C28091 + C417 * C28092 + C3140 * C28093 +
            C3144 * C28094) *
               C153712 * C2058 -
           ((C134 * C5557 + C5569 + C5569 + C153882 * C5563) * C28094 +
            C4208 * C28093 + C3416 * C28092 + C1123 * C28091 + C635 * C28090) *
               C153712 * C153847) *
              C153767 * C1255)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C28090 +
            C3138 * C28091 + C3139 * C28092 + C3142 * C28093 + C4591 * C28094) *
               C153712 * C2058 -
           (C28789 * C28094 + C5574 * C28093 + C4205 * C28092 + C4206 * C28091 +
            (C134 * C556 + C601 + C601 + C153882 * C580) * C28090) *
               C153712 * C153847) *
              C326 +
          ((C4206 * C28090 + C4205 * C28091 + C5574 * C28092 + C28789 * C28093 +
            C29554 * C28094) *
               C153712 * C153847 -
           (C28235 * C28094 + C4591 * C28093 + C3142 * C28092 + C3139 * C28091 +
            C3138 * C28090) *
               C153712 * C2058) *
              C327 +
          ((C3139 * C28090 + C3142 * C28091 + C4591 * C28092 + C28235 * C28093 +
            C29003 * C28094) *
               C153712 * C2058 -
           ((C134 * C29545 + C29551 + C29551 + C153882 * C29547) * C28094 +
            C29554 * C28093 + C28789 * C28092 + C5574 * C28091 +
            C4205 * C28090) *
               C153712 * C153847) *
              C328) *
         C153748) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C134 * C136 + C161 + C161 + C153882 * C152) * C28090 +
           C3138 * C28091 + C3139 * C28092 + C3142 * C28093 + C4591 * C28094) *
              C153712 * C2264 -
          (C28789 * C28094 + C5574 * C28093 + C4205 * C28092 + C4206 * C28091 +
           (C134 * C556 + C601 + C601 + C153882 * C580) * C28090) *
              C153712 * C2265 +
          ((C134 * C557 + C602 + C602 + C153882 * C581) * C28090 +
           C4830 * C28091 + C4831 * C28092 + C29138 * C28093 +
           C29139 * C28094) *
              C153712 * C2266 -
          ((C134 * C29880 + C29887 + C29887 + C153882 * C29884) * C28094 +
           (C134 * C29881 + C29888 + C29888 + C153882 * C29885) * C28093 +
           (C134 * C6160 + C6179 + C6179 + C153882 * C6172) * C28092 +
           (C134 * C6161 + C6180 + C6180 + C153882 * C6173) * C28091 +
           (C134 * C2272 + C2288 + C2288 + C153882 * C2282) * C28090) *
              C153712 * C2267) *
         C153767 * C153748) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C7055 * C136 + C7062 + C7062 + C154182 * C152 + C7057 * C556 +
             C7063 + C7063 + C154171 * C580 + C7059 * C557 + C7064 + C7064 +
             C154146 * C581) *
                C24168 +
            (C30715 + C30716 + C30717) * C24169 + C30728 * C154143) *
               C153712 * C2058 -
           (C33113 * C154143 + (C31733 + C31734 + C31735) * C24169 +
            (C7059 * C2272 + C7696 + C7696 + C154146 * C2282 + C7057 * C557 +
             C7697 + C7697 + C154171 * C581 + C7055 * C556 + C7698 + C7698 +
             C154182 * C580) *
                C24168) *
               C153712 * C153847) *
              C153767 * C1253 +
          (((C7755 + C7754 + C7753) * C24168 +
            (C8569 + C8570 + C8571) * C24169 +
            (C31736 + C31737 + C31738) * C154143) *
               C153712 * C153847 -
           (C30702 * C154143 + (C7439 + C7440 + C7441) * C24169 +
            (C7130 + C7129 + C7128) * C24168) *
               C153712 * C2058) *
              C153767 * C1254 +
          ((C7142 * C24168 + (C7438 + C7437 + C7436) * C24169 +
            (C7445 + C7446 + C7447) * C154143) *
               C153712 * C2058 -
           ((C7059 * C6156 + C9910 + C9910 + C154146 * C6168 + C7057 * C3371 +
             C9911 + C9911 + C154171 * C3379 + C7055 * C1918 + C9912 + C9912 +
             C154182 * C1928) *
                C154143 +
            (C8574 + C8573 + C8572) * C24169 + C8229 * C24168) *
               C153712 * C153847) *
              C153767 * C1255)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C7055 * C136 + C7062 + C7062 + C154182 * C152 + C7057 * C556 +
             C7063 + C7063 + C154171 * C580 + C7059 * C557 + C7064 + C7064 +
             C154146 * C581) *
                C24168 +
            (C30715 + C30716 + C30717) * C24169 + C30728 * C154143) *
               C153712 * C2058 -
           (C33113 * C154143 + (C31733 + C31734 + C31735) * C24169 +
            (C7059 * C2272 + C7696 + C7696 + C154146 * C2282 + C7057 * C557 +
             C7697 + C7697 + C154171 * C581 + C7055 * C556 + C7698 + C7698 +
             C154182 * C580) *
                C24168) *
               C153712 * C153847) *
              C326 +
          (((C31735 + C31734 + C31733) * C24168 +
            (C31732 + C31731 + C31730) * C24169 +
            (C33120 + C33121 + C33122) * C154143) *
               C153712 * C153847 -
           (C32113 * C154143 + (C30720 + C30719 + C30718) * C24169 +
            (C30717 + C30716 + C30715) * C24168) *
               C153712 * C2058) *
              C327 +
          ((C30728 * C24168 + (C30723 + C30722 + C30721) * C24169 +
            (C32120 + C32121 + C32122) * C154143) *
               C153712 * C2058 -
           ((C7059 * C29880 + C33110 + C33110 + C154146 * C29884 +
             C7057 * C28358 + C33111 + C33111 + C154171 * C28362 +
             C7055 * C5559 + C33112 + C33112 + C154182 * C5565) *
                C154143 +
            (C33122 + C33121 + C33120) * C24169 + C33113 * C24168) *
               C153712 * C153847) *
              C328) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C7055 * C136 + C7062 + C7062 + C154182 * C152 + C7057 * C556 +
            C7063 + C7063 + C154171 * C580 + C7059 * C557 + C7064 + C7064 +
            C154146 * C581) *
               C24168 +
           (C30715 + C30716 + C30717) * C24169 + C30728 * C154143) *
              C153712 * C2264 -
          (C33113 * C154143 + (C31733 + C31734 + C31735) * C24169 +
           (C7059 * C2272 + C7696 + C7696 + C154146 * C2282 + C7057 * C557 +
            C7697 + C7697 + C154171 * C581 + C7055 * C556 + C7698 + C7698 +
            C154182 * C580) *
               C24168) *
              C153712 * C2265 +
          ((C7055 * C557 + C7699 + C7699 + C154182 * C581 + C7057 * C2272 +
            C7700 + C7700 + C154171 * C2282 + C7059 * C7665 + C7701 + C7701 +
            C154146 * C7673) *
               C24168 +
           (C32371 + C32372 + C32373) * C24169 +
           (C32374 + C32375 + C32376) * C154143) *
              C153712 * C2266 -
          ((C7059 * C33704 + C33711 + C33711 + C154146 * C33708 +
            C7057 * C30946 + C33712 + C33712 + C154171 * C30950 +
            C7055 * C6160 + C33713 + C33713 + C154182 * C6172) *
               C154143 +
           (C7059 * C33705 + C33714 + C33714 + C154146 * C33709 +
            C7057 * C9167 + C33715 + C33715 + C154171 * C9173 + C7055 * C6161 +
            C33716 + C33716 + C154182 * C6173) *
               C24169 +
           (C7059 * C10502 + C10516 + C10516 + C154146 * C10508 +
            C7057 * C7665 + C10517 + C10517 + C154171 * C7673 + C7055 * C2272 +
            C10518 + C10518 + C154182 * C2282) *
               C24168) *
              C153712 * C2267) *
         C153767 * C153748) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C46971 * C136 + C46978 + C46978 + C46968 * C152 + C46973 * C556 +
             C46979 + C46979 + C46969 * C580 + C46975 * C557 + C46980 + C46980 +
             C154146 * C581) *
                C153865 * C154178 +
            (C47044 + C47045 + C47046) * C153865 * C154159 + C47060 * C154130) *
               C2058 -
           (C48137 * C154130 + (C47657 + C47658 + C47659) * C153865 * C154159 +
            (C46975 * C2272 + C47600 + C47600 + C154146 * C2282 +
             C46973 * C557 + C47601 + C47601 + C46969 * C581 + C46971 * C556 +
             C47602 + C47602 + C46968 * C580) *
                C153865 * C154178) *
               C153847) *
              C153767 * C1253 +
          (((C47659 + C47658 + C47657) * C153865 * C154178 +
            (C47656 + C47655 + C47654) * C153865 * C154159 +
            (C48141 + C48142 + C48143) * C153865 * C154130) *
               C153847 -
           (C47061 * C154130 + (C47049 + C47048 + C47047) * C153865 * C154159 +
            (C47046 + C47045 + C47044) * C153865 * C154178) *
               C2058) *
              C153767 * C1254 +
          ((C47060 * C154178 + (C47052 + C47051 + C47050) * C153865 * C154159 +
            (C47053 + C47054 + C47055) * C153865 * C154130) *
               C2058 -
           ((C46975 * C2268 + C48130 + C48130 + C154146 * C2278 +
             C46973 * C561 + C48131 + C48131 + C46969 * C585 + C46971 * C552 +
             C48132 + C48132 + C46968 * C576) *
                C153865 * C154130 +
            (C48143 + C48142 + C48141) * C153865 * C154159 + C48137 * C154178) *
               C153847) *
              C153767 * C1255)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C46971 * C136 + C46978 + C46978 + C46968 * C152 + C46973 * C556 +
             C46979 + C46979 + C46969 * C580 + C46975 * C557 + C46980 + C46980 +
             C154146 * C581) *
                C153865 * C154178 +
            (C47044 + C47045 + C47046) * C153865 * C154159 + C47060 * C154130) *
               C2058 -
           (C48137 * C154130 + (C47657 + C47658 + C47659) * C153865 * C154159 +
            (C46975 * C2272 + C47600 + C47600 + C154146 * C2282 +
             C46973 * C557 + C47601 + C47601 + C46969 * C581 + C46971 * C556 +
             C47602 + C47602 + C46968 * C580) *
                C153865 * C154178) *
               C153847) *
              C326 +
          (((C46971 * C1081 + C48434 + C48434 + C46968 * C1093 +
             C46973 * C1489 + C48435 + C48435 + C46969 * C1499 +
             C46975 * C6161 + C48436 + C48436 + C154146 * C6173) *
                C153865 * C154178 +
            (C48470 + C48471 + C48472) * C153865 * C154159 +
            (C48473 + C48474 + C48475) * C153865 * C154130) *
               C153847 -
           (C47898 * C154130 + (C47355 + C47356 + C47357) * C153865 * C154159 +
            (C46975 * C1489 + C47298 + C47298 + C154146 * C1499 +
             C46973 * C1081 + C47299 + C47299 + C46969 * C1093 + C46971 * C335 +
             C47300 + C47300 + C46968 * C359) *
                C153865 * C154178) *
               C2058) *
              C327 +
          (((C46971 * C336 + C47301 + C47301 + C46968 * C360 + C46973 * C1920 +
             C47302 + C47302 + C46969 * C1930 + C46975 * C3369 + C47303 +
             C47303 + C154146 * C3377) *
                C153865 * C154178 +
            (C47358 + C47359 + C47360) * C153865 * C154159 +
            (C47361 + C47362 + C47363) * C153865 * C154130) *
               C2058 -
           ((C46975 * C6156 + C49802 + C49802 + C154146 * C6168 +
             C46973 * C3371 + C49803 + C49803 + C46969 * C3379 +
             C46971 * C1918 + C49804 + C49804 + C46968 * C1928) *
                C153865 * C154130 +
            (C46975 * C6158 + C49805 + C49805 + C154146 * C6170 +
             C46973 * C3370 + C49806 + C49806 + C46969 * C3378 +
             C46971 * C1919 + C49807 + C49807 + C46968 * C1929) *
                C153865 * C154159 +
            (C46975 * C6160 + C49808 + C49808 + C154146 * C6172 +
             C46973 * C3369 + C49809 + C49809 + C46969 * C3377 +
             C46971 * C1920 + C49810 + C49810 + C46968 * C1930) *
                C153865 * C154178) *
               C153847) *
              C328) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C46971 * C136 + C46978 + C46978 + C46968 * C152 + C46973 * C556 +
            C46979 + C46979 + C46969 * C580 + C46975 * C557 + C46980 + C46980 +
            C154146 * C581) *
               C153865 * C154178 +
           (C47044 + C47045 + C47046) * C153865 * C154159 + C47060 * C154130) *
              C2264 -
          (C48137 * C154130 + (C47657 + C47658 + C47659) * C153865 * C154159 +
           (C46975 * C2272 + C47600 + C47600 + C154146 * C2282 + C46973 * C557 +
            C47601 + C47601 + C46969 * C581 + C46971 * C556 + C47602 + C47602 +
            C46968 * C580) *
               C153865 * C154178) *
              C2265 +
          ((C46971 * C557 + C47603 + C47603 + C46968 * C581 + C46973 * C2272 +
            C47604 + C47604 + C46969 * C2282 + C46975 * C7665 + C47605 +
            C47605 + C154146 * C7673) *
               C153865 * C154178 +
           (C47660 + C47661 + C47662) * C153865 * C154159 +
           (C47663 + C47664 + C47665) * C153865 * C154130) *
              C2266 -
          ((C46975 * C10500 + C50393 + C50393 + C154146 * C10506 +
            C46973 * C7667 + C50394 + C50394 + C46969 * C7675 + C46971 * C2270 +
            C50395 + C50395 + C46968 * C2280) *
               C153865 * C154130 +
           (C46975 * C10501 + C50396 + C50396 + C154146 * C10507 +
            C46973 * C7666 + C50397 + C50397 + C46969 * C7674 + C46971 * C2271 +
            C50398 + C50398 + C46968 * C2281) *
               C153865 * C154159 +
           (C46975 * C10502 + C50399 + C50399 + C154146 * C10508 +
            C46973 * C7665 + C50400 + C50400 + C46969 * C7673 + C46971 * C2272 +
            C50401 + C50401 + C46968 * C2282) *
               C153865 * C154178) *
              C2267) *
         C153767 * C153748) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C46971 * C136 + C46978 + C46978 + C46968 * C152 + C46973 * C556 +
             C46979 + C46979 + C46969 * C580 + C46975 * C557 + C46980 + C46980 +
             C154146 * C581) *
                C154181 +
            (C51548 + C51549 + C51550) * C154169 + C51561 * C154143) *
               C153712 * C2058 -
           (C53934 * C154143 + (C52557 + C52558 + C52559) * C154169 +
            (C46975 * C2272 + C47600 + C47600 + C154146 * C2282 +
             C46973 * C557 + C47601 + C47601 + C46969 * C581 + C46971 * C556 +
             C47602 + C47602 + C46968 * C580) *
                C154181) *
               C153712 * C153847) *
              C153767 * C1253 +
          (((C47659 + C47658 + C47657) * C154181 +
            (C48470 + C48471 + C48472) * C154169 +
            (C52560 + C52561 + C52562) * C154143) *
               C153712 * C153847 -
           (C51535 * C154143 + (C47355 + C47356 + C47357) * C154169 +
            (C47046 + C47045 + C47044) * C154181) *
               C153712 * C2058) *
              C153767 * C1254 +
          ((C47058 * C154181 + (C47354 + C47353 + C47352) * C154169 +
            (C47361 + C47362 + C47363) * C154143) *
               C153712 * C2058 -
           ((C46975 * C6156 + C49802 + C49802 + C154146 * C6168 +
             C46973 * C3371 + C49803 + C49803 + C46969 * C3379 +
             C46971 * C1918 + C49804 + C49804 + C46968 * C1928) *
                C154143 +
            (C48475 + C48474 + C48473) * C154169 + C48133 * C154181) *
               C153712 * C153847) *
              C153767 * C1255)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C46971 * C136 + C46978 + C46978 + C46968 * C152 + C46973 * C556 +
             C46979 + C46979 + C46969 * C580 + C46975 * C557 + C46980 + C46980 +
             C154146 * C581) *
                C154181 +
            (C51548 + C51549 + C51550) * C154169 + C51561 * C154143) *
               C153712 * C2058 -
           (C53934 * C154143 + (C52557 + C52558 + C52559) * C154169 +
            (C46975 * C2272 + C47600 + C47600 + C154146 * C2282 +
             C46973 * C557 + C47601 + C47601 + C46969 * C581 + C46971 * C556 +
             C47602 + C47602 + C46968 * C580) *
                C154181) *
               C153712 * C153847) *
              C326 +
          (((C52559 + C52558 + C52557) * C154181 +
            (C52556 + C52555 + C52554) * C154169 +
            (C53941 + C53942 + C53943) * C154143) *
               C153712 * C153847 -
           (C52937 * C154143 + (C51553 + C51552 + C51551) * C154169 +
            (C51550 + C51549 + C51548) * C154181) *
               C153712 * C2058) *
              C327 +
          ((C51561 * C154181 + (C51556 + C51555 + C51554) * C154169 +
            (C52944 + C52945 + C52946) * C154143) *
               C153712 * C2058 -
           ((C46975 * C29880 + C53931 + C53931 + C154146 * C29884 +
             C46973 * C28358 + C53932 + C53932 + C46969 * C28362 +
             C46971 * C5559 + C53933 + C53933 + C46968 * C5565) *
                C154143 +
            (C53943 + C53942 + C53941) * C154169 + C53934 * C154181) *
               C153712 * C153847) *
              C328) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C46971 * C136 + C46978 + C46978 + C46968 * C152 + C46973 * C556 +
            C46979 + C46979 + C46969 * C580 + C46975 * C557 + C46980 + C46980 +
            C154146 * C581) *
               C154181 +
           (C51548 + C51549 + C51550) * C154169 + C51561 * C154143) *
              C153712 * C2264 -
          (C53934 * C154143 + (C52557 + C52558 + C52559) * C154169 +
           (C46975 * C2272 + C47600 + C47600 + C154146 * C2282 + C46973 * C557 +
            C47601 + C47601 + C46969 * C581 + C46971 * C556 + C47602 + C47602 +
            C46968 * C580) *
               C154181) *
              C153712 * C2265 +
          ((C46971 * C557 + C47603 + C47603 + C46968 * C581 + C46973 * C2272 +
            C47604 + C47604 + C46969 * C2282 + C46975 * C7665 + C47605 +
            C47605 + C154146 * C7673) *
               C154181 +
           (C53192 + C53193 + C53194) * C154169 +
           (C53195 + C53196 + C53197) * C154143) *
              C153712 * C2266 -
          ((C46975 * C33704 + C54526 + C54526 + C154146 * C33708 +
            C46973 * C30946 + C54527 + C54527 + C46969 * C30950 +
            C46971 * C6160 + C54528 + C54528 + C46968 * C6172) *
               C154143 +
           (C46975 * C33705 + C54529 + C54529 + C154146 * C33709 +
            C46973 * C9167 + C54530 + C54530 + C46969 * C9173 + C46971 * C6161 +
            C54531 + C54531 + C46968 * C6173) *
               C154169 +
           (C46975 * C10502 + C50399 + C50399 + C154146 * C10508 +
            C46973 * C7665 + C50400 + C50400 + C46969 * C7673 + C46971 * C2272 +
            C50401 + C50401 + C46968 * C2282) *
               C154181) *
              C153712 * C2267) *
         C153767 * C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C55344 * C136 + C55355 + C55355 + C55339 * C152 + C55346 * C556 +
            C55356 + C55356 + C55340 * C580 + C55348 * C557 + C55357 + C55357 +
            C55341 * C581 + C55350 * C2272 + C55358 + C55358 + C55342 * C2282 +
            C55352 * C7665 + C55359 + C55359 + C55343 * C7673) *
               C153865 * C153712 * C2058 -
           (C55352 * C10502 + C55645 + C55645 + C55343 * C10508 +
            C55350 * C7665 + C55646 + C55646 + C55342 * C7673 + C55348 * C2272 +
            C55647 + C55647 + C55341 * C2282 + C55346 * C557 + C55648 + C55648 +
            C55340 * C581 + C55344 * C556 + C55649 + C55649 + C55339 * C580) *
               C153865 * C153712 * C153847) *
              C153767 * C1253 +
          ((C55344 * C555 + C55655 + C55655 + C55339 * C579 + C55346 * C558 +
            C55656 + C55656 + C55340 * C582 + C55348 * C2271 + C55657 + C55657 +
            C55341 * C2281 + C55350 * C7666 + C55658 + C55658 + C55342 * C7674 +
            C55352 * C10501 + C55659 + C55659 + C55343 * C10507) *
               C153865 * C153712 * C153847 -
           (C55352 * C7666 + C55360 + C55360 + C55343 * C7674 + C55350 * C2271 +
            C55361 + C55361 + C55342 * C2281 + C55348 * C558 + C55362 + C55362 +
            C55341 * C582 + C55346 * C555 + C55363 + C55363 + C55340 * C579 +
            C55344 * C137 + C55364 + C55364 + C55339 * C153) *
               C153865 * C153712 * C2058) *
              C153767 * C1254 +
          ((C55344 * C138 + C55365 + C55365 + C55339 * C154 + C55346 * C554 +
            C55366 + C55366 + C55340 * C578 + C55348 * C559 + C55367 + C55367 +
            C55341 * C583 + C55350 * C2270 + C55368 + C55368 + C55342 * C2280 +
            C55352 * C7667 + C55369 + C55369 + C55343 * C7675) *
               C153865 * C153712 * C2058 -
           (C55352 * C10500 + C55914 + C55914 + C55343 * C10506 +
            C55350 * C7667 + C55915 + C55915 + C55342 * C7675 + C55348 * C2270 +
            C55916 + C55916 + C55341 * C2280 + C55346 * C559 + C55917 + C55917 +
            C55340 * C583 + C55344 * C554 + C55918 + C55918 + C55339 * C578) *
               C153865 * C153712 * C153847) *
              C153767 * C1255)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C55344 * C136 + C55355 + C55355 + C55339 * C152 + C55346 * C556 +
            C55356 + C55356 + C55340 * C580 + C55348 * C557 + C55357 + C55357 +
            C55341 * C581 + C55350 * C2272 + C55358 + C55358 + C55342 * C2282 +
            C55352 * C7665 + C55359 + C55359 + C55343 * C7673) *
               C153865 * C153712 * C2058 -
           (C55352 * C10502 + C55645 + C55645 + C55343 * C10508 +
            C55350 * C7665 + C55646 + C55646 + C55342 * C7673 + C55348 * C2272 +
            C55647 + C55647 + C55341 * C2282 + C55346 * C557 + C55648 + C55648 +
            C55340 * C581 + C55344 * C556 + C55649 + C55649 + C55339 * C580) *
               C153865 * C153712 * C153847) *
              C326 +
          ((C55344 * C1081 + C56084 + C56084 + C55339 * C1093 + C55346 * C1489 +
            C56085 + C56085 + C55340 * C1499 + C55348 * C6161 + C56086 +
            C56086 + C55341 * C6173 + C55350 * C9167 + C56087 + C56087 +
            C55342 * C9173 + C55352 * C33705 + C56088 + C56088 +
            C55343 * C33709) *
               C153865 * C153712 * C153847 -
           (C55352 * C9167 + C55497 + C55497 + C55343 * C9173 + C55350 * C6161 +
            C55498 + C55498 + C55342 * C6173 + C55348 * C1489 + C55499 +
            C55499 + C55341 * C1499 + C55346 * C1081 + C55500 + C55500 +
            C55340 * C1093 + C55344 * C335 + C55501 + C55501 + C55339 * C359) *
               C153865 * C153712 * C2058) *
              C327 +
          ((C55344 * C336 + C55502 + C55502 + C55339 * C360 + C55346 * C1920 +
            C55503 + C55503 + C55340 * C1930 + C55348 * C3369 + C55504 +
            C55504 + C55341 * C3377 + C55350 * C6160 + C55505 + C55505 +
            C55342 * C6172 + C55352 * C30946 + C55506 + C55506 +
            C55343 * C30950) *
               C153865 * C153712 * C2058 -
           (C55352 * C33704 + C56839 + C56839 + C55343 * C33708 +
            C55350 * C30946 + C56840 + C56840 + C55342 * C30950 +
            C55348 * C6160 + C56841 + C56841 + C55341 * C6172 + C55346 * C3369 +
            C56842 + C56842 + C55340 * C3377 + C55344 * C1920 + C56843 +
            C56843 + C55339 * C1930) *
               C153865 * C153712 * C153847) *
              C328) *
         C153748) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((C55344 * C136 + C55355 + C55355 + C55339 * C152 + C55346 * C556 +
           C55356 + C55356 + C55340 * C580 + C55348 * C557 + C55357 + C55357 +
           C55341 * C581 + C55350 * C2272 + C55358 + C55358 + C55342 * C2282 +
           C55352 * C7665 + C55359 + C55359 + C55343 * C7673) *
              C153865 * C153712 * C2264 -
          (C55352 * C10502 + C55645 + C55645 + C55343 * C10508 +
           C55350 * C7665 + C55646 + C55646 + C55342 * C7673 + C55348 * C2272 +
           C55647 + C55647 + C55341 * C2282 + C55346 * C557 + C55648 + C55648 +
           C55340 * C581 + C55344 * C556 + C55649 + C55649 + C55339 * C580) *
              C153865 * C153712 * C2265 +
          (C55344 * C557 + C55650 + C55650 + C55339 * C581 + C55346 * C2272 +
           C55651 + C55651 + C55340 * C2282 + C55348 * C7665 + C55652 + C55652 +
           C55341 * C7673 + C55350 * C10502 + C55653 + C55653 +
           C55342 * C10508 + C55352 * C55638 + C55654 + C55654 +
           C55343 * C55642) *
              C153865 * C153712 * C2266 -
          (C55352 * C57169 + C57173 + C57173 + C55343 * C57171 +
           C55350 * C55638 + C57174 + C57174 + C55342 * C55642 +
           C55348 * C10502 + C57175 + C57175 + C55341 * C10508 +
           C55346 * C7665 + C57176 + C57176 + C55340 * C7673 + C55344 * C2272 +
           C57177 + C57177 + C55339 * C2282) *
              C153865 * C153712 * C2267) *
         C153767 * C153748) /
            (p * q * std::sqrt(p + q));
    d2ee[193] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C136 + C161 + C161 + C153882 * C152) * C153865 * C123 +
                C199 * C124 + C200 * C125 + C201 * C126 + C202 * C127) *
                   C154166 -
               (C641 * C127 + C642 * C126 + C643 * C125 + C644 * C124 +
                (C134 * C556 + C601 + C601 + C153882 * C580) * C153865 * C123) *
                   C154167 +
               ((C134 * C557 + C602 + C602 + C153882 * C581) * C153865 * C123 +
                C645 * C124 + C646 * C125 + C647 * C126 + C648 * C127) *
                   C2574) *
                  C153767 * C154085 +
              ((C644 * C123 + C643 * C124 + C642 * C125 + C641 * C126 +
                C919 * C127) *
                   C154167 -
               (C203 * C127 + C202 * C126 + C201 * C125 + C200 * C124 +
                C199 * C123) *
                   C154166 -
               ((C134 * C563 + C616 + C616 + C153882 * C587) * C153865 * C127 +
                C648 * C126 + C647 * C125 + C646 * C124 + C645 * C123) *
                   C2574) *
                  C153767 * C153754) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C134 * C136 + C161 + C161 + C153882 * C152) * C154181 +
                 C3138 * C154169 + C3139 * C154143) *
                    C2846 +
                (C2850 + C2851 + C2852) * C2847 + C2864 * C154130) *
                   C154166 -
               (C3874 * C154130 + (C3423 + C3388 + C3389) * C2847 +
                (C4205 * C154143 + C4206 * C154169 +
                 (C134 * C556 + C601 + C601 + C153882 * C580) * C154181) *
                    C2846) *
                   C154167 +
               (((C134 * C557 + C602 + C602 + C153882 * C581) * C154181 +
                 C4830 * C154169 + C4831 * C154143) *
                    C2846 +
                (C3391 + C3424 + C3425) * C2847 +
                (C3397 + C3426 + C3427) * C154130) *
                   C2574) *
                  C153767 * C154085 +
              (((C3389 + C3388 + C3423) * C2846 +
                (C3385 + C3384 + C3422) * C2847 +
                (C3870 + C3871 + C3878) * C154130) *
                   C154167 -
               (C2865 * C154130 + (C2855 + C2854 + C2853) * C2847 +
                (C2852 + C2851 + C2850) * C2846) *
                   C154166 -
               (((C134 * C3372 + C3403 + C3403 + C153882 * C3380) * C154143 +
                 (C134 * C1486 + C1502 + C1502 + C153882 * C1496) * C154169 +
                 C639 * C154181) *
                    C154130 +
                (C3427 + C3426 + C3397) * C2847 +
                (C3425 + C3424 + C3391) * C2846) *
                   C2574) *
                  C153767 * C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C7055 * C136 + C7062 + C7062 + C154182 * C152 + C7057 * C556 +
             C7063 + C7063 + C154171 * C580 + C7059 * C557 + C7064 + C7064 +
             C154146 * C581) *
                C153865 * C2846 +
            (C7128 + C7129 + C7130) * C153865 * C2847 + C7144 * C154130) *
               C154166 -
           (C8233 * C154130 + (C7753 + C7754 + C7755) * C153865 * C2847 +
            (C7059 * C2272 + C7696 + C7696 + C154146 * C2282 + C7057 * C557 +
             C7697 + C7697 + C154171 * C581 + C7055 * C556 + C7698 + C7698 +
             C154182 * C580) *
                C153865 * C2846) *
               C154167 +
           ((C7055 * C557 + C7699 + C7699 + C154182 * C581 + C7057 * C2272 +
             C7700 + C7700 + C154171 * C2282 + C7059 * C7665 + C7701 + C7701 +
             C154146 * C7673) *
                C153865 * C2846 +
            (C7756 + C7757 + C7758) * C153865 * C2847 +
            (C7759 + C7760 + C7761) * C153865 * C154130) *
               C2574) *
              C153767 * C154085 +
          (((C7755 + C7754 + C7753) * C153865 * C2846 +
            (C7752 + C7751 + C7750) * C153865 * C2847 +
            (C8237 + C8238 + C8239) * C153865 * C154130) *
               C154167 -
           (C7145 * C154130 + (C7133 + C7132 + C7131) * C153865 * C2847 +
            (C7130 + C7129 + C7128) * C153865 * C2846) *
               C154166 -
           ((C7059 * C7668 + C7723 + C7723 + C154146 * C7676 + C7057 * C2269 +
             C7724 + C7724 + C154171 * C2279 + C7055 * C560 + C7725 + C7725 +
             C154182 * C584) *
                C153865 * C154130 +
            (C7761 + C7760 + C7759) * C153865 * C2847 +
            (C7758 + C7757 + C7756) * C153865 * C2846) *
               C2574) *
              C153767 * C153754)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C24168 +
             C3138 * C24169 + C3139 * C154143) *
                C154178 +
            (C24175 + C24176 + C24177) * C154159 + C24189 * C154130) *
               C154166 -
           (C25096 * C154130 + (C24642 + C24643 + C24644) * C154159 +
            (C4205 * C154143 + C4206 * C24169 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C24168) *
                C154178) *
               C154167 +
           (((C134 * C557 + C602 + C602 + C153882 * C581) * C24168 +
             C4830 * C24169 + C4831 * C154143) *
                C154178 +
            (C24645 + C24646 + C24647) * C154159 +
            (C24648 + C24649 + C24650) * C154130) *
               C2574) *
              C153767 * C154085 +
          (((C24644 + C24643 + C24642) * C154178 +
            (C24641 + C24640 + C24639) * C154159 +
            (C25093 + C25094 + C25095) * C154130) *
               C154167 -
           (C24190 * C154130 + (C24180 + C24179 + C24178) * C154159 +
            (C24177 + C24176 + C24175) * C154178) *
               C154166 -
           (((C134 * C3372 + C3403 + C3403 + C153882 * C3380) * C154143 +
             C11810 * C24169 + C639 * C24168) *
                C154130 +
            (C24650 + C24649 + C24648) * C154159 +
            (C24647 + C24646 + C24645) * C154178) *
               C2574) *
              C153767 * C153754)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C28090 +
            C3138 * C28091 + C3139 * C28092 + C3142 * C28093 + C4591 * C28094) *
               C153712 * C154166 -
           (C28789 * C28094 + C5574 * C28093 + C4205 * C28092 + C4206 * C28091 +
            (C134 * C556 + C601 + C601 + C153882 * C580) * C28090) *
               C153712 * C154167 +
           ((C134 * C557 + C602 + C602 + C153882 * C581) * C28090 +
            C4830 * C28091 + C4831 * C28092 + C29138 * C28093 +
            C29139 * C28094) *
               C153712 * C2574) *
              C153767 * C154085 +
          ((C636 * C28090 + C1122 * C28091 + C3417 * C28092 + C4207 * C28093 +
            C28790 * C28094) *
               C153712 * C154167 -
           (C3143 * C28094 + C3141 * C28093 + C416 * C28092 + C415 * C28091 +
            C193 * C28090) *
               C153712 * C154166 -
           ((C134 * C28359 + C28366 + C28366 + C153882 * C28363) * C28094 +
            (C134 * C4810 + C4824 + C4824 + C153882 * C4816) * C28093 +
            C3419 * C28092 + C3418 * C28091 + C637 * C28090) *
               C153712 * C2574) *
              C153767 * C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C7055 * C136 + C7062 + C7062 + C154182 * C152 + C7057 * C556 +
             C7063 + C7063 + C154171 * C580 + C7059 * C557 + C7064 + C7064 +
             C154146 * C581) *
                C24168 +
            (C30715 + C30716 + C30717) * C24169 + C30728 * C154143) *
               C153712 * C154166 -
           (C33113 * C154143 + (C31733 + C31734 + C31735) * C24169 +
            (C7059 * C2272 + C7696 + C7696 + C154146 * C2282 + C7057 * C557 +
             C7697 + C7697 + C154171 * C581 + C7055 * C556 + C7698 + C7698 +
             C154182 * C580) *
                C24168) *
               C153712 * C154167 +
           ((C7055 * C557 + C7699 + C7699 + C154182 * C581 + C7057 * C2272 +
             C7700 + C7700 + C154171 * C2282 + C7059 * C7665 + C7701 + C7701 +
             C154146 * C7673) *
                C24168 +
            (C32371 + C32372 + C32373) * C24169 +
            (C32374 + C32375 + C32376) * C154143) *
               C153712 * C2574) *
              C153767 * C154085 +
          (((C7755 + C7754 + C7753) * C24168 +
            (C8569 + C8570 + C8571) * C24169 +
            (C31736 + C31737 + C31738) * C154143) *
               C153712 * C154167 -
           (C30702 * C154143 + (C7439 + C7440 + C7441) * C24169 +
            (C7130 + C7129 + C7128) * C24168) *
               C153712 * C154166 -
           ((C7059 * C30947 + C30956 + C30956 + C154146 * C30951 +
             C7057 * C6158 + C30957 + C30957 + C154171 * C6170 + C7055 * C3370 +
             C30958 + C30958 + C154182 * C3378) *
                C154143 +
            (C7059 * C9166 + C9178 + C9178 + C154146 * C9172 + C7057 * C6159 +
             C9179 + C9179 + C154171 * C6171 + C7055 * C1488 + C9180 + C9180 +
             C154182 * C1498) *
                C24169 +
            (C7758 + C7757 + C7756) * C24168) *
               C153712 * C2574) *
              C153767 * C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C46971 * C136 + C46978 + C46978 + C46968 * C152 + C46973 * C556 +
             C46979 + C46979 + C46969 * C580 + C46975 * C557 + C46980 + C46980 +
             C154146 * C581) *
                C153865 * C154178 +
            (C47044 + C47045 + C47046) * C153865 * C154159 + C47060 * C154130) *
               C154166 -
           (C48137 * C154130 + (C47657 + C47658 + C47659) * C153865 * C154159 +
            (C46975 * C2272 + C47600 + C47600 + C154146 * C2282 +
             C46973 * C557 + C47601 + C47601 + C46969 * C581 + C46971 * C556 +
             C47602 + C47602 + C46968 * C580) *
                C153865 * C154178) *
               C154167 +
           ((C46971 * C557 + C47603 + C47603 + C46968 * C581 + C46973 * C2272 +
             C47604 + C47604 + C46969 * C2282 + C46975 * C7665 + C47605 +
             C47605 + C154146 * C7673) *
                C153865 * C154178 +
            (C47660 + C47661 + C47662) * C153865 * C154159 +
            (C47663 + C47664 + C47665) * C153865 * C154130) *
               C2574) *
              C153767 * C154085 +
          (((C47659 + C47658 + C47657) * C153865 * C154178 +
            (C47656 + C47655 + C47654) * C153865 * C154159 +
            (C48141 + C48142 + C48143) * C153865 * C154130) *
               C154167 -
           (C47061 * C154130 + (C47049 + C47048 + C47047) * C153865 * C154159 +
            (C47046 + C47045 + C47044) * C153865 * C154178) *
               C154166 -
           ((C46975 * C7668 + C47627 + C47627 + C154146 * C7676 +
             C46973 * C2269 + C47628 + C47628 + C46969 * C2279 + C46971 * C560 +
             C47629 + C47629 + C46968 * C584) *
                C153865 * C154130 +
            (C47665 + C47664 + C47663) * C153865 * C154159 +
            (C47662 + C47661 + C47660) * C153865 * C154178) *
               C2574) *
              C153767 * C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C46971 * C136 + C46978 + C46978 + C46968 * C152 + C46973 * C556 +
             C46979 + C46979 + C46969 * C580 + C46975 * C557 + C46980 + C46980 +
             C154146 * C581) *
                C154181 +
            (C51548 + C51549 + C51550) * C154169 + C51561 * C154143) *
               C153712 * C154166 -
           (C53934 * C154143 + (C52557 + C52558 + C52559) * C154169 +
            (C46975 * C2272 + C47600 + C47600 + C154146 * C2282 +
             C46973 * C557 + C47601 + C47601 + C46969 * C581 + C46971 * C556 +
             C47602 + C47602 + C46968 * C580) *
                C154181) *
               C153712 * C154167 +
           ((C46971 * C557 + C47603 + C47603 + C46968 * C581 + C46973 * C2272 +
             C47604 + C47604 + C46969 * C2282 + C46975 * C7665 + C47605 +
             C47605 + C154146 * C7673) *
                C154181 +
            (C53192 + C53193 + C53194) * C154169 +
            (C53195 + C53196 + C53197) * C154143) *
               C153712 * C2574) *
              C153767 * C154085 +
          (((C47659 + C47658 + C47657) * C154181 +
            (C48470 + C48471 + C48472) * C154169 +
            (C52560 + C52561 + C52562) * C154143) *
               C153712 * C154167 -
           (C51535 * C154143 + (C47355 + C47356 + C47357) * C154169 +
            (C47046 + C47045 + C47044) * C154181) *
               C153712 * C154166 -
           ((C46975 * C30947 + C51783 + C51783 + C154146 * C30951 +
             C46973 * C6158 + C51784 + C51784 + C46969 * C6170 +
             C46971 * C3370 + C51785 + C51785 + C46968 * C3378) *
                C154143 +
            (C46975 * C9166 + C49070 + C49070 + C154146 * C9172 +
             C46973 * C6159 + C49071 + C49071 + C46969 * C6171 +
             C46971 * C1488 + C49072 + C49072 + C46968 * C1498) *
                C154169 +
            (C47662 + C47661 + C47660) * C154181) *
               C153712 * C2574) *
              C153767 * C153754)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C55344 * C136 + C55355 + C55355 + C55339 * C152 + C55346 * C556 +
            C55356 + C55356 + C55340 * C580 + C55348 * C557 + C55357 + C55357 +
            C55341 * C581 + C55350 * C2272 + C55358 + C55358 + C55342 * C2282 +
            C55352 * C7665 + C55359 + C55359 + C55343 * C7673) *
               C153865 * C153712 * C154166 -
           (C55352 * C10502 + C55645 + C55645 + C55343 * C10508 +
            C55350 * C7665 + C55646 + C55646 + C55342 * C7673 + C55348 * C2272 +
            C55647 + C55647 + C55341 * C2282 + C55346 * C557 + C55648 + C55648 +
            C55340 * C581 + C55344 * C556 + C55649 + C55649 + C55339 * C580) *
               C153865 * C153712 * C154167 +
           (C55344 * C557 + C55650 + C55650 + C55339 * C581 + C55346 * C2272 +
            C55651 + C55651 + C55340 * C2282 + C55348 * C7665 + C55652 +
            C55652 + C55341 * C7673 + C55350 * C10502 + C55653 + C55653 +
            C55342 * C10508 + C55352 * C55638 + C55654 + C55654 +
            C55343 * C55642) *
               C153865 * C153712 * C2574) *
              C153767 * C154085 +
          ((C55344 * C555 + C55655 + C55655 + C55339 * C579 + C55346 * C558 +
            C55656 + C55656 + C55340 * C582 + C55348 * C2271 + C55657 + C55657 +
            C55341 * C2281 + C55350 * C7666 + C55658 + C55658 + C55342 * C7674 +
            C55352 * C10501 + C55659 + C55659 + C55343 * C10507) *
               C153865 * C153712 * C154167 -
           (C55352 * C7666 + C55360 + C55360 + C55343 * C7674 + C55350 * C2271 +
            C55361 + C55361 + C55342 * C2281 + C55348 * C558 + C55362 + C55362 +
            C55341 * C582 + C55346 * C555 + C55363 + C55363 + C55340 * C579 +
            C55344 * C137 + C55364 + C55364 + C55339 * C153) *
               C153865 * C153712 * C154166 -
           (C55352 * C55639 + C55660 + C55660 + C55343 * C55643 +
            C55350 * C10501 + C55661 + C55661 + C55342 * C10507 +
            C55348 * C7666 + C55662 + C55662 + C55341 * C7674 + C55346 * C2271 +
            C55663 + C55663 + C55340 * C2281 + C55344 * C558 + C55664 + C55664 +
            C55339 * C582) *
               C153865 * C153712 * C2574) *
              C153767 * C153754)) /
            (p * q * std::sqrt(p + q));
    d2ee[194] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C153865 * C123 +
            C199 * C124 + C200 * C125 + C201 * C126 + C202 * C127) *
               C2058 -
           (C641 * C127 + C642 * C126 + C643 * C125 + C644 * C124 +
            (C134 * C556 + C601 + C601 + C153882 * C580) * C153865 * C123) *
               C153847) *
              C153767 * C1253 +
          ((C644 * C123 + C643 * C124 + C642 * C125 + C641 * C126 +
            C919 * C127) *
               C153847 -
           (C203 * C127 + C202 * C126 + C201 * C125 + C200 * C124 +
            C199 * C123) *
               C2058) *
              C153767 * C1254 +
          ((C200 * C123 + C201 * C124 + C202 * C125 + C203 * C126 +
            C204 * C127) *
               C2058 -
           ((C134 * C909 + C915 + C915 + C153882 * C911) * C153865 * C127 +
            C919 * C126 + C641 * C125 + C642 * C124 + C643 * C123) *
               C153847) *
              C153767 * C1255)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C153865 * C123 +
            C199 * C124 + C200 * C125 + C201 * C126 + C202 * C127) *
               C2058 -
           (C641 * C127 + C642 * C126 + C643 * C125 + C644 * C124 +
            (C134 * C556 + C601 + C601 + C153882 * C580) * C153865 * C123) *
               C153847) *
              C326 +
          (((C134 * C1081 + C1100 + C1100 + C153882 * C1093) * C153865 * C123 +
            C1126 * C124 + C1127 * C125 + C1128 * C126 + C1129 * C127) *
               C153847 -
           (C420 * C127 + C421 * C126 + C422 * C125 + C423 * C124 +
            (C134 * C335 + C380 + C380 + C153882 * C359) * C153865 * C123) *
               C2058) *
              C327 +
          (((C134 * C336 + C381 + C381 + C153882 * C360) * C153865 * C123 +
            C424 * C124 + C425 * C125 + C426 * C126 + C427 * C127) *
               C2058 -
           ((C134 * C1916 + C1932 + C1932 + C153882 * C1926) * C153865 * C127 +
            (C134 * C1917 + C1933 + C1933 + C153882 * C1927) * C153865 * C126 +
            (C134 * C1918 + C1934 + C1934 + C153882 * C1928) * C153865 * C125 +
            (C134 * C1919 + C1935 + C1935 + C153882 * C1929) * C153865 * C124 +
            (C134 * C1920 + C1936 + C1936 + C153882 * C1930) * C153865 * C123) *
               C153847) *
              C328) *
         C153748) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C154181 +
             C3138 * C154169 + C3139 * C154143) *
                C2846 +
            (C2850 + C2851 + C2852) * C2847 + C2864 * C154130) *
               C2058 -
           (C3874 * C154130 + (C3423 + C3388 + C3389) * C2847 +
            (C4205 * C154143 + C4206 * C154169 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C154181) *
                C2846) *
               C153847) *
              C153767 * C1253 +
          (((C3389 + C3388 + C3423) * C2846 + (C3385 + C3384 + C3422) * C2847 +
            (C3870 + C3871 + C3878) * C154130) *
               C153847 -
           (C2865 * C154130 + (C2855 + C2854 + C2853) * C2847 +
            (C2852 + C2851 + C2850) * C2846) *
               C2058) *
              C153767 * C1254 +
          ((C2864 * C2846 + (C2858 + C2857 + C2856) * C2847 +
            (C2859 + C2860 + C2861) * C154130) *
               C2058 -
           (((C134 * C1916 + C1932 + C1932 + C153882 * C1926) * C154143 +
             C1125 * C154169 + C633 * C154181) *
                C154130 +
            (C3878 + C3871 + C3870) * C2847 + C3874 * C2846) *
               C153847) *
              C153767 * C1255)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C154181 +
             C3138 * C154169 + C3139 * C154143) *
                C2846 +
            (C2850 + C2851 + C2852) * C2847 + C2864 * C154130) *
               C2058 -
           (C3874 * C154130 + (C3423 + C3388 + C3389) * C2847 +
            (C4205 * C154143 + C4206 * C154169 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C154181) *
                C2846) *
               C153847) *
              C326 +
          (((C4206 * C154181 + C4205 * C154169 + C5574 * C154143) * C2846 +
            (C4186 + C4187 + C4209) * C2847 +
            (C4191 + C4192 + C4210) * C154130) *
               C153847 -
           (C3650 * C154130 + (C3147 + C3106 + C3107) * C2847 +
            (C3142 * C154143 + C3139 * C154169 + C3138 * C154181) * C2846) *
               C2058) *
              C327 +
          (((C3139 * C154181 + C3142 * C154169 + C4591 * C154143) * C2846 +
            (C3111 + C3148 + C3149) * C2847 +
            (C3115 + C3150 + C3151) * C154130) *
               C2058 -
           (((C134 * C5557 + C5569 + C5569 + C153882 * C5563) * C154143 +
             C4208 * C154169 + C3416 * C154181) *
                C154130 +
            ((C134 * C5558 + C5570 + C5570 + C153882 * C5564) * C154143 +
             C4207 * C154169 + C3417 * C154181) *
                C2847 +
            ((C134 * C5559 + C5571 + C5571 + C153882 * C5565) * C154143 +
             C5574 * C154169 + C4205 * C154181) *
                C2846) *
               C153847) *
              C328) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C7055 * C136 + C7062 + C7062 + C154182 * C152 + C7057 * C556 +
             C7063 + C7063 + C154171 * C580 + C7059 * C557 + C7064 + C7064 +
             C154146 * C581) *
                C153865 * C2846 +
            (C7128 + C7129 + C7130) * C153865 * C2847 + C7144 * C154130) *
               C2058 -
           (C8233 * C154130 + (C7753 + C7754 + C7755) * C153865 * C2847 +
            (C7059 * C2272 + C7696 + C7696 + C154146 * C2282 + C7057 * C557 +
             C7697 + C7697 + C154171 * C581 + C7055 * C556 + C7698 + C7698 +
             C154182 * C580) *
                C153865 * C2846) *
               C153847) *
              C153767 * C1253 +
          (((C7755 + C7754 + C7753) * C153865 * C2846 +
            (C7752 + C7751 + C7750) * C153865 * C2847 +
            (C8237 + C8238 + C8239) * C153865 * C154130) *
               C153847 -
           (C7145 * C154130 + (C7133 + C7132 + C7131) * C153865 * C2847 +
            (C7130 + C7129 + C7128) * C153865 * C2846) *
               C2058) *
              C153767 * C1254 +
          ((C7144 * C2846 + (C7136 + C7135 + C7134) * C153865 * C2847 +
            (C7137 + C7138 + C7139) * C153865 * C154130) *
               C2058 -
           ((C7059 * C2268 + C8226 + C8226 + C154146 * C2278 + C7057 * C561 +
             C8227 + C8227 + C154171 * C585 + C7055 * C552 + C8228 + C8228 +
             C154182 * C576) *
                C153865 * C154130 +
            (C8239 + C8238 + C8237) * C153865 * C2847 + C8233 * C2846) *
               C153847) *
              C153767 * C1255)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C7055 * C136 + C7062 + C7062 + C154182 * C152 + C7057 * C556 +
             C7063 + C7063 + C154171 * C580 + C7059 * C557 + C7064 + C7064 +
             C154146 * C581) *
                C153865 * C2846 +
            (C7128 + C7129 + C7130) * C153865 * C2847 + C7144 * C154130) *
               C2058 -
           (C8233 * C154130 + (C7753 + C7754 + C7755) * C153865 * C2847 +
            (C7059 * C2272 + C7696 + C7696 + C154146 * C2282 + C7057 * C557 +
             C7697 + C7697 + C154171 * C581 + C7055 * C556 + C7698 + C7698 +
             C154182 * C580) *
                C153865 * C2846) *
               C153847) *
              C326 +
          (((C7055 * C1081 + C8533 + C8533 + C154182 * C1093 + C7057 * C1489 +
             C8534 + C8534 + C154171 * C1499 + C7059 * C6161 + C8535 + C8535 +
             C154146 * C6173) *
                C153865 * C2846 +
            (C8569 + C8570 + C8571) * C153865 * C2847 +
            (C8572 + C8573 + C8574) * C153865 * C154130) *
               C153847 -
           (C7994 * C154130 + (C7439 + C7440 + C7441) * C153865 * C2847 +
            (C7059 * C1489 + C7382 + C7382 + C154146 * C1499 + C7057 * C1081 +
             C7383 + C7383 + C154171 * C1093 + C7055 * C335 + C7384 + C7384 +
             C154182 * C359) *
                C153865 * C2846) *
               C2058) *
              C327 +
          (((C7055 * C336 + C7385 + C7385 + C154182 * C360 + C7057 * C1920 +
             C7386 + C7386 + C154171 * C1930 + C7059 * C3369 + C7387 + C7387 +
             C154146 * C3377) *
                C153865 * C2846 +
            (C7442 + C7443 + C7444) * C153865 * C2847 +
            (C7445 + C7446 + C7447) * C153865 * C154130) *
               C2058 -
           ((C7059 * C6156 + C9910 + C9910 + C154146 * C6168 + C7057 * C3371 +
             C9911 + C9911 + C154171 * C3379 + C7055 * C1918 + C9912 + C9912 +
             C154182 * C1928) *
                C153865 * C154130 +
            (C7059 * C6158 + C9913 + C9913 + C154146 * C6170 + C7057 * C3370 +
             C9914 + C9914 + C154171 * C3378 + C7055 * C1919 + C9915 + C9915 +
             C154182 * C1929) *
                C153865 * C2847 +
            (C7059 * C6160 + C9916 + C9916 + C154146 * C6172 + C7057 * C3369 +
             C9917 + C9917 + C154171 * C3377 + C7055 * C1920 + C9918 + C9918 +
             C154182 * C1930) *
                C153865 * C2846) *
               C153847) *
              C328) *
         C153748) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C24168 +
             C3138 * C24169 + C3139 * C154143) *
                C154178 +
            (C24175 + C24176 + C24177) * C154159 + C24189 * C154130) *
               C2058 -
           (C25096 * C154130 + (C24642 + C24643 + C24644) * C154159 +
            (C4205 * C154143 + C4206 * C24169 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C24168) *
                C154178) *
               C153847) *
              C153767 * C1253 +
          (((C24644 + C24643 + C24642) * C154178 +
            (C24641 + C24640 + C24639) * C154159 +
            (C25093 + C25094 + C25095) * C154130) *
               C153847 -
           (C24190 * C154130 + (C24180 + C24179 + C24178) * C154159 +
            (C24177 + C24176 + C24175) * C154178) *
               C2058) *
              C153767 * C1254 +
          ((C24189 * C154178 + (C24183 + C24182 + C24181) * C154159 +
            (C24184 + C24185 + C24186) * C154130) *
               C2058 -
           (((C134 * C1916 + C1932 + C1932 + C153882 * C1926) * C154143 +
             C1125 * C24169 + C633 * C24168) *
                C154130 +
            (C25095 + C25094 + C25093) * C154159 + C25096 * C154178) *
               C153847) *
              C153767 * C1255)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C24168 +
             C3138 * C24169 + C3139 * C154143) *
                C154178 +
            (C24175 + C24176 + C24177) * C154159 + C24189 * C154130) *
               C2058 -
           (C25096 * C154130 + (C24642 + C24643 + C24644) * C154159 +
            (C4205 * C154143 + C4206 * C24169 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C24168) *
                C154178) *
               C153847) *
              C326 +
          (((C4206 * C24168 + C4205 * C24169 + C5574 * C154143) * C154178 +
            (C25387 + C25388 + C25389) * C154159 +
            (C25390 + C25391 + C25392) * C154130) *
               C153847 -
           (C24873 * C154130 + (C24412 + C24413 + C24414) * C154159 +
            (C3142 * C154143 + C3139 * C24169 + C3138 * C24168) * C154178) *
               C2058) *
              C327 +
          (((C3139 * C24168 + C3142 * C24169 + C4591 * C154143) * C154178 +
            (C24415 + C24416 + C24417) * C154159 +
            (C24418 + C24419 + C24420) * C154130) *
               C2058 -
           (((C134 * C5557 + C5569 + C5569 + C153882 * C5563) * C154143 +
             C4208 * C24169 + C3416 * C24168) *
                C154130 +
            ((C134 * C5558 + C5570 + C5570 + C153882 * C5564) * C154143 +
             C4207 * C24169 + C3417 * C24168) *
                C154159 +
            ((C134 * C5559 + C5571 + C5571 + C153882 * C5565) * C154143 +
             C5574 * C24169 + C4205 * C24168) *
                C154178) *
               C153847) *
              C328) *
         C153748) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C28090 +
            C3138 * C28091 + C3139 * C28092 + C3142 * C28093 + C4591 * C28094) *
               C153712 * C2058 -
           (C28789 * C28094 + C5574 * C28093 + C4205 * C28092 + C4206 * C28091 +
            (C134 * C556 + C601 + C601 + C153882 * C580) * C28090) *
               C153712 * C153847) *
              C153767 * C1253 +
          ((C636 * C28090 + C1122 * C28091 + C3417 * C28092 + C4207 * C28093 +
            C28790 * C28094) *
               C153712 * C153847 -
           (C3143 * C28094 + C3141 * C28093 + C416 * C28092 + C415 * C28091 +
            C193 * C28090) *
               C153712 * C2058) *
              C153767 * C1254 +
          ((C194 * C28090 + C414 * C28091 + C417 * C28092 + C3140 * C28093 +
            C3144 * C28094) *
               C153712 * C2058 -
           ((C134 * C5557 + C5569 + C5569 + C153882 * C5563) * C28094 +
            C4208 * C28093 + C3416 * C28092 + C1123 * C28091 + C635 * C28090) *
               C153712 * C153847) *
              C153767 * C1255)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C28090 +
            C3138 * C28091 + C3139 * C28092 + C3142 * C28093 + C4591 * C28094) *
               C153712 * C2058 -
           (C28789 * C28094 + C5574 * C28093 + C4205 * C28092 + C4206 * C28091 +
            (C134 * C556 + C601 + C601 + C153882 * C580) * C28090) *
               C153712 * C153847) *
              C326 +
          ((C4206 * C28090 + C4205 * C28091 + C5574 * C28092 + C28789 * C28093 +
            C29554 * C28094) *
               C153712 * C153847 -
           (C28235 * C28094 + C4591 * C28093 + C3142 * C28092 + C3139 * C28091 +
            C3138 * C28090) *
               C153712 * C2058) *
              C327 +
          ((C3139 * C28090 + C3142 * C28091 + C4591 * C28092 + C28235 * C28093 +
            C29003 * C28094) *
               C153712 * C2058 -
           ((C134 * C29545 + C29551 + C29551 + C153882 * C29547) * C28094 +
            C29554 * C28093 + C28789 * C28092 + C5574 * C28091 +
            C4205 * C28090) *
               C153712 * C153847) *
              C328) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C7055 * C136 + C7062 + C7062 + C154182 * C152 + C7057 * C556 +
             C7063 + C7063 + C154171 * C580 + C7059 * C557 + C7064 + C7064 +
             C154146 * C581) *
                C24168 +
            (C30715 + C30716 + C30717) * C24169 + C30728 * C154143) *
               C153712 * C2058 -
           (C33113 * C154143 + (C31733 + C31734 + C31735) * C24169 +
            (C7059 * C2272 + C7696 + C7696 + C154146 * C2282 + C7057 * C557 +
             C7697 + C7697 + C154171 * C581 + C7055 * C556 + C7698 + C7698 +
             C154182 * C580) *
                C24168) *
               C153712 * C153847) *
              C153767 * C1253 +
          (((C7755 + C7754 + C7753) * C24168 +
            (C8569 + C8570 + C8571) * C24169 +
            (C31736 + C31737 + C31738) * C154143) *
               C153712 * C153847 -
           (C30702 * C154143 + (C7439 + C7440 + C7441) * C24169 +
            (C7130 + C7129 + C7128) * C24168) *
               C153712 * C2058) *
              C153767 * C1254 +
          ((C7142 * C24168 + (C7438 + C7437 + C7436) * C24169 +
            (C7445 + C7446 + C7447) * C154143) *
               C153712 * C2058 -
           ((C7059 * C6156 + C9910 + C9910 + C154146 * C6168 + C7057 * C3371 +
             C9911 + C9911 + C154171 * C3379 + C7055 * C1918 + C9912 + C9912 +
             C154182 * C1928) *
                C154143 +
            (C8574 + C8573 + C8572) * C24169 + C8229 * C24168) *
               C153712 * C153847) *
              C153767 * C1255)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C7055 * C136 + C7062 + C7062 + C154182 * C152 + C7057 * C556 +
             C7063 + C7063 + C154171 * C580 + C7059 * C557 + C7064 + C7064 +
             C154146 * C581) *
                C24168 +
            (C30715 + C30716 + C30717) * C24169 + C30728 * C154143) *
               C153712 * C2058 -
           (C33113 * C154143 + (C31733 + C31734 + C31735) * C24169 +
            (C7059 * C2272 + C7696 + C7696 + C154146 * C2282 + C7057 * C557 +
             C7697 + C7697 + C154171 * C581 + C7055 * C556 + C7698 + C7698 +
             C154182 * C580) *
                C24168) *
               C153712 * C153847) *
              C326 +
          (((C31735 + C31734 + C31733) * C24168 +
            (C31732 + C31731 + C31730) * C24169 +
            (C33120 + C33121 + C33122) * C154143) *
               C153712 * C153847 -
           (C32113 * C154143 + (C30720 + C30719 + C30718) * C24169 +
            (C30717 + C30716 + C30715) * C24168) *
               C153712 * C2058) *
              C327 +
          ((C30728 * C24168 + (C30723 + C30722 + C30721) * C24169 +
            (C32120 + C32121 + C32122) * C154143) *
               C153712 * C2058 -
           ((C7059 * C29880 + C33110 + C33110 + C154146 * C29884 +
             C7057 * C28358 + C33111 + C33111 + C154171 * C28362 +
             C7055 * C5559 + C33112 + C33112 + C154182 * C5565) *
                C154143 +
            (C33122 + C33121 + C33120) * C24169 + C33113 * C24168) *
               C153712 * C153847) *
              C328) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C46971 * C136 + C46978 + C46978 + C46968 * C152 + C46973 * C556 +
             C46979 + C46979 + C46969 * C580 + C46975 * C557 + C46980 + C46980 +
             C154146 * C581) *
                C153865 * C154178 +
            (C47044 + C47045 + C47046) * C153865 * C154159 + C47060 * C154130) *
               C2058 -
           (C48137 * C154130 + (C47657 + C47658 + C47659) * C153865 * C154159 +
            (C46975 * C2272 + C47600 + C47600 + C154146 * C2282 +
             C46973 * C557 + C47601 + C47601 + C46969 * C581 + C46971 * C556 +
             C47602 + C47602 + C46968 * C580) *
                C153865 * C154178) *
               C153847) *
              C153767 * C1253 +
          (((C47659 + C47658 + C47657) * C153865 * C154178 +
            (C47656 + C47655 + C47654) * C153865 * C154159 +
            (C48141 + C48142 + C48143) * C153865 * C154130) *
               C153847 -
           (C47061 * C154130 + (C47049 + C47048 + C47047) * C153865 * C154159 +
            (C47046 + C47045 + C47044) * C153865 * C154178) *
               C2058) *
              C153767 * C1254 +
          ((C47060 * C154178 + (C47052 + C47051 + C47050) * C153865 * C154159 +
            (C47053 + C47054 + C47055) * C153865 * C154130) *
               C2058 -
           ((C46975 * C2268 + C48130 + C48130 + C154146 * C2278 +
             C46973 * C561 + C48131 + C48131 + C46969 * C585 + C46971 * C552 +
             C48132 + C48132 + C46968 * C576) *
                C153865 * C154130 +
            (C48143 + C48142 + C48141) * C153865 * C154159 + C48137 * C154178) *
               C153847) *
              C153767 * C1255)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C46971 * C136 + C46978 + C46978 + C46968 * C152 + C46973 * C556 +
             C46979 + C46979 + C46969 * C580 + C46975 * C557 + C46980 + C46980 +
             C154146 * C581) *
                C153865 * C154178 +
            (C47044 + C47045 + C47046) * C153865 * C154159 + C47060 * C154130) *
               C2058 -
           (C48137 * C154130 + (C47657 + C47658 + C47659) * C153865 * C154159 +
            (C46975 * C2272 + C47600 + C47600 + C154146 * C2282 +
             C46973 * C557 + C47601 + C47601 + C46969 * C581 + C46971 * C556 +
             C47602 + C47602 + C46968 * C580) *
                C153865 * C154178) *
               C153847) *
              C326 +
          (((C46971 * C1081 + C48434 + C48434 + C46968 * C1093 +
             C46973 * C1489 + C48435 + C48435 + C46969 * C1499 +
             C46975 * C6161 + C48436 + C48436 + C154146 * C6173) *
                C153865 * C154178 +
            (C48470 + C48471 + C48472) * C153865 * C154159 +
            (C48473 + C48474 + C48475) * C153865 * C154130) *
               C153847 -
           (C47898 * C154130 + (C47355 + C47356 + C47357) * C153865 * C154159 +
            (C46975 * C1489 + C47298 + C47298 + C154146 * C1499 +
             C46973 * C1081 + C47299 + C47299 + C46969 * C1093 + C46971 * C335 +
             C47300 + C47300 + C46968 * C359) *
                C153865 * C154178) *
               C2058) *
              C327 +
          (((C46971 * C336 + C47301 + C47301 + C46968 * C360 + C46973 * C1920 +
             C47302 + C47302 + C46969 * C1930 + C46975 * C3369 + C47303 +
             C47303 + C154146 * C3377) *
                C153865 * C154178 +
            (C47358 + C47359 + C47360) * C153865 * C154159 +
            (C47361 + C47362 + C47363) * C153865 * C154130) *
               C2058 -
           ((C46975 * C6156 + C49802 + C49802 + C154146 * C6168 +
             C46973 * C3371 + C49803 + C49803 + C46969 * C3379 +
             C46971 * C1918 + C49804 + C49804 + C46968 * C1928) *
                C153865 * C154130 +
            (C46975 * C6158 + C49805 + C49805 + C154146 * C6170 +
             C46973 * C3370 + C49806 + C49806 + C46969 * C3378 +
             C46971 * C1919 + C49807 + C49807 + C46968 * C1929) *
                C153865 * C154159 +
            (C46975 * C6160 + C49808 + C49808 + C154146 * C6172 +
             C46973 * C3369 + C49809 + C49809 + C46969 * C3377 +
             C46971 * C1920 + C49810 + C49810 + C46968 * C1930) *
                C153865 * C154178) *
               C153847) *
              C328) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C46971 * C136 + C46978 + C46978 + C46968 * C152 + C46973 * C556 +
             C46979 + C46979 + C46969 * C580 + C46975 * C557 + C46980 + C46980 +
             C154146 * C581) *
                C154181 +
            (C51548 + C51549 + C51550) * C154169 + C51561 * C154143) *
               C153712 * C2058 -
           (C53934 * C154143 + (C52557 + C52558 + C52559) * C154169 +
            (C46975 * C2272 + C47600 + C47600 + C154146 * C2282 +
             C46973 * C557 + C47601 + C47601 + C46969 * C581 + C46971 * C556 +
             C47602 + C47602 + C46968 * C580) *
                C154181) *
               C153712 * C153847) *
              C153767 * C1253 +
          (((C47659 + C47658 + C47657) * C154181 +
            (C48470 + C48471 + C48472) * C154169 +
            (C52560 + C52561 + C52562) * C154143) *
               C153712 * C153847 -
           (C51535 * C154143 + (C47355 + C47356 + C47357) * C154169 +
            (C47046 + C47045 + C47044) * C154181) *
               C153712 * C2058) *
              C153767 * C1254 +
          ((C47058 * C154181 + (C47354 + C47353 + C47352) * C154169 +
            (C47361 + C47362 + C47363) * C154143) *
               C153712 * C2058 -
           ((C46975 * C6156 + C49802 + C49802 + C154146 * C6168 +
             C46973 * C3371 + C49803 + C49803 + C46969 * C3379 +
             C46971 * C1918 + C49804 + C49804 + C46968 * C1928) *
                C154143 +
            (C48475 + C48474 + C48473) * C154169 + C48133 * C154181) *
               C153712 * C153847) *
              C153767 * C1255)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C46971 * C136 + C46978 + C46978 + C46968 * C152 + C46973 * C556 +
             C46979 + C46979 + C46969 * C580 + C46975 * C557 + C46980 + C46980 +
             C154146 * C581) *
                C154181 +
            (C51548 + C51549 + C51550) * C154169 + C51561 * C154143) *
               C153712 * C2058 -
           (C53934 * C154143 + (C52557 + C52558 + C52559) * C154169 +
            (C46975 * C2272 + C47600 + C47600 + C154146 * C2282 +
             C46973 * C557 + C47601 + C47601 + C46969 * C581 + C46971 * C556 +
             C47602 + C47602 + C46968 * C580) *
                C154181) *
               C153712 * C153847) *
              C326 +
          (((C52559 + C52558 + C52557) * C154181 +
            (C52556 + C52555 + C52554) * C154169 +
            (C53941 + C53942 + C53943) * C154143) *
               C153712 * C153847 -
           (C52937 * C154143 + (C51553 + C51552 + C51551) * C154169 +
            (C51550 + C51549 + C51548) * C154181) *
               C153712 * C2058) *
              C327 +
          ((C51561 * C154181 + (C51556 + C51555 + C51554) * C154169 +
            (C52944 + C52945 + C52946) * C154143) *
               C153712 * C2058 -
           ((C46975 * C29880 + C53931 + C53931 + C154146 * C29884 +
             C46973 * C28358 + C53932 + C53932 + C46969 * C28362 +
             C46971 * C5559 + C53933 + C53933 + C46968 * C5565) *
                C154143 +
            (C53943 + C53942 + C53941) * C154169 + C53934 * C154181) *
               C153712 * C153847) *
              C328) *
         C153748) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C55344 * C136 + C55355 + C55355 + C55339 * C152 + C55346 * C556 +
            C55356 + C55356 + C55340 * C580 + C55348 * C557 + C55357 + C55357 +
            C55341 * C581 + C55350 * C2272 + C55358 + C55358 + C55342 * C2282 +
            C55352 * C7665 + C55359 + C55359 + C55343 * C7673) *
               C153865 * C153712 * C2058 -
           (C55352 * C10502 + C55645 + C55645 + C55343 * C10508 +
            C55350 * C7665 + C55646 + C55646 + C55342 * C7673 + C55348 * C2272 +
            C55647 + C55647 + C55341 * C2282 + C55346 * C557 + C55648 + C55648 +
            C55340 * C581 + C55344 * C556 + C55649 + C55649 + C55339 * C580) *
               C153865 * C153712 * C153847) *
              C153767 * C1253 +
          ((C55344 * C555 + C55655 + C55655 + C55339 * C579 + C55346 * C558 +
            C55656 + C55656 + C55340 * C582 + C55348 * C2271 + C55657 + C55657 +
            C55341 * C2281 + C55350 * C7666 + C55658 + C55658 + C55342 * C7674 +
            C55352 * C10501 + C55659 + C55659 + C55343 * C10507) *
               C153865 * C153712 * C153847 -
           (C55352 * C7666 + C55360 + C55360 + C55343 * C7674 + C55350 * C2271 +
            C55361 + C55361 + C55342 * C2281 + C55348 * C558 + C55362 + C55362 +
            C55341 * C582 + C55346 * C555 + C55363 + C55363 + C55340 * C579 +
            C55344 * C137 + C55364 + C55364 + C55339 * C153) *
               C153865 * C153712 * C2058) *
              C153767 * C1254 +
          ((C55344 * C138 + C55365 + C55365 + C55339 * C154 + C55346 * C554 +
            C55366 + C55366 + C55340 * C578 + C55348 * C559 + C55367 + C55367 +
            C55341 * C583 + C55350 * C2270 + C55368 + C55368 + C55342 * C2280 +
            C55352 * C7667 + C55369 + C55369 + C55343 * C7675) *
               C153865 * C153712 * C2058 -
           (C55352 * C10500 + C55914 + C55914 + C55343 * C10506 +
            C55350 * C7667 + C55915 + C55915 + C55342 * C7675 + C55348 * C2270 +
            C55916 + C55916 + C55341 * C2280 + C55346 * C559 + C55917 + C55917 +
            C55340 * C583 + C55344 * C554 + C55918 + C55918 + C55339 * C578) *
               C153865 * C153712 * C153847) *
              C153767 * C1255)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C55344 * C136 + C55355 + C55355 + C55339 * C152 + C55346 * C556 +
            C55356 + C55356 + C55340 * C580 + C55348 * C557 + C55357 + C55357 +
            C55341 * C581 + C55350 * C2272 + C55358 + C55358 + C55342 * C2282 +
            C55352 * C7665 + C55359 + C55359 + C55343 * C7673) *
               C153865 * C153712 * C2058 -
           (C55352 * C10502 + C55645 + C55645 + C55343 * C10508 +
            C55350 * C7665 + C55646 + C55646 + C55342 * C7673 + C55348 * C2272 +
            C55647 + C55647 + C55341 * C2282 + C55346 * C557 + C55648 + C55648 +
            C55340 * C581 + C55344 * C556 + C55649 + C55649 + C55339 * C580) *
               C153865 * C153712 * C153847) *
              C326 +
          ((C55344 * C1081 + C56084 + C56084 + C55339 * C1093 + C55346 * C1489 +
            C56085 + C56085 + C55340 * C1499 + C55348 * C6161 + C56086 +
            C56086 + C55341 * C6173 + C55350 * C9167 + C56087 + C56087 +
            C55342 * C9173 + C55352 * C33705 + C56088 + C56088 +
            C55343 * C33709) *
               C153865 * C153712 * C153847 -
           (C55352 * C9167 + C55497 + C55497 + C55343 * C9173 + C55350 * C6161 +
            C55498 + C55498 + C55342 * C6173 + C55348 * C1489 + C55499 +
            C55499 + C55341 * C1499 + C55346 * C1081 + C55500 + C55500 +
            C55340 * C1093 + C55344 * C335 + C55501 + C55501 + C55339 * C359) *
               C153865 * C153712 * C2058) *
              C327 +
          ((C55344 * C336 + C55502 + C55502 + C55339 * C360 + C55346 * C1920 +
            C55503 + C55503 + C55340 * C1930 + C55348 * C3369 + C55504 +
            C55504 + C55341 * C3377 + C55350 * C6160 + C55505 + C55505 +
            C55342 * C6172 + C55352 * C30946 + C55506 + C55506 +
            C55343 * C30950) *
               C153865 * C153712 * C2058 -
           (C55352 * C33704 + C56839 + C56839 + C55343 * C33708 +
            C55350 * C30946 + C56840 + C56840 + C55342 * C30950 +
            C55348 * C6160 + C56841 + C56841 + C55341 * C6172 + C55346 * C3369 +
            C56842 + C56842 + C55340 * C3377 + C55344 * C1920 + C56843 +
            C56843 + C55339 * C1930) *
               C153865 * C153712 * C153847) *
              C328) *
         C153748) /
            (p * q * std::sqrt(p + q));
    d2ee[195] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
              C14938 + C14938 + C153969 * C580) *
                 C24168 +
             (C19164 + C19165) * C24169 + C38471 * C154143) *
                C154074 +
            ((C14991 + C14992) * C24168 + C19130 * C24169 + C19138 * C154143) *
                C153722) *
               C153783 * C154093 -
           ((C38472 * C154143 + C19132 * C24169 + C19133 * C24168) * C153722 +
            ((C20988 + C20987) * C154143 + (C19166 + C19167) * C24169 +
             (C19165 + C19164) * C24168) *
                C154074) *
               C153783 * C153819) *
              C154162 +
          (((C19130 * C24168 + C19138 * C24169 + C38473 * C154143) * C154074 +
            (C18830 * C24168 + C19143 * C24169 + (C19170 + C19171) * C154143) *
                C153722) *
               C153783 * C153819 -
           ((C19131 * C154143 + C15752 * C24169 + (C14994 + C14993) * C24168) *
                C153722 +
            (C19132 * C154143 + C19133 * C24169 + (C14992 + C14991) * C24168) *
                C154074) *
               C153783 * C154093) *
              C154163 +
          (((C15001 * C24168 + C18830 * C24169 + C19143 * C154143) * C154074 +
            (C15002 * C24168 + C19774 * C24169 + (C15281 + C15282) * C154143) *
                C153722) *
               C153783 * C154093 -
           (((C14934 * C4171 + C16599 + C16599 + C153969 * C4179 +
              C14932 * C1344 + C16600 + C16600 + C154109 * C1354) *
                 C154143 +
             (C15282 + C15281) * C24169 + C15751 * C24168) *
                C153722 +
            ((C19171 + C19170) * C154143 + C19131 * C24169 + C15752 * C24168) *
                C154074) *
               C153783 * C153819) *
              C774)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
             C14938 + C14938 + C153969 * C580) *
                C153865 * C11376 +
            (C14991 + C14992) * C153865 * C11377 + C15005 * C11378 +
            C15006 * C154108) *
               C153783 * C154093 -
           (C15759 * C154108 + C15760 * C11378 +
            (C15275 + C15276) * C153865 * C11377 +
            (C14934 * C1081 + C15221 + C15221 + C153969 * C1093 +
             C14932 * C335 + C15222 + C15222 + C154109 * C359) *
                C153865 * C11376) *
               C153783 * C153819) *
              C154162 +
          (((C15276 + C15275) * C153865 * C11376 +
            (C15274 + C15273) * C153865 * C11377 +
            (C15272 + C15271) * C153865 * C11378 +
            (C15765 + C15766) * C153865 * C154108) *
               C153783 * C153819 -
           (C15007 * C154108 + C15008 * C11378 +
            (C14994 + C14993) * C153865 * C11377 +
            (C14992 + C14991) * C153865 * C11376) *
               C153783 * C154093) *
              C154163 +
          ((C15005 * C11376 + C15006 * C11377 +
            (C14998 + C14997) * C153865 * C11378 +
            (C14999 + C15000) * C153865 * C154108) *
               C153783 * C154093 -
           ((C14934 * C1086 + C15757 + C15757 + C153969 * C1098 +
             C14932 * C341 + C15758 + C15758 + C154109 * C365) *
                C153865 * C154108 +
            (C15766 + C15765) * C153865 * C11378 + C15759 * C11377 +
            C15760 * C11376) *
               C153783 * C153819) *
              C774)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C62967 * C136 + C62976 + C62976 + C62963 * C152 + C62969 * C556 +
             C62977 + C62977 + C62964 * C580 + C62971 * C557 + C62978 + C62978 +
             C62965 * C581 + C62973 * C2272 + C62979 + C62979 +
             C154123 * C2282) *
                C153865 * C154074 +
            (C63044 + C63045 + C63046 + C63047) * C153865 * C153722) *
               C153783 * C154093 -
           ((C63306 + C63307 + C63308 + C63309) * C153865 * C153722 +
            (C62973 * C6161 + C63262 + C63262 + C154123 * C6173 +
             C62971 * C1489 + C63263 + C63263 + C62965 * C1499 +
             C62969 * C1081 + C63264 + C63264 + C62964 * C1093 + C62967 * C335 +
             C63265 + C63265 + C62963 * C359) *
                C153865 * C154074) *
               C153783 * C153819) *
              C154162 +
          (((C63309 + C63308 + C63307 + C63306) * C153865 * C154074 +
            (C63786 + C63787 + C63788 + C63789) * C153865 * C153722) *
               C153783 * C153819 -
           ((C63048 + C63049 + C63050 + C63051) * C153865 * C153722 +
            (C63047 + C63046 + C63045 + C63044) * C153865 * C154074) *
               C153783 * C154093) *
              C154163 +
          (((C63051 + C63050 + C63049 + C63048) * C153865 * C154074 +
            (C63052 + C63053 + C63054 + C63055) * C153865 * C153722) *
               C153783 * C154093 -
           ((C62973 * C8529 + C63774 + C63774 + C154123 * C8531 +
             C62971 * C1486 + C63775 + C63775 + C62965 * C1496 +
             C62969 * C1084 + C63776 + C63776 + C62964 * C1096 + C62967 * C332 +
             C63777 + C63777 + C62963 * C356) *
                C153865 * C153722 +
            (C63789 + C63788 + C63787 + C63786) * C153865 * C154074) *
               C153783 * C153819) *
              C774)) /
            (p * q * std::sqrt(p + q));
    d2ee[196] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C14932 * C136 + C14937 + C14937 + C154109 * C152 +
               C14934 * C556 + C14938 + C14938 + C153969 * C580) *
                  C24168 +
              (C19164 + C19165) * C24169 + C38471 * C154143) *
                 C154074 +
             ((C14991 + C14992) * C24168 + C19130 * C24169 + C19138 * C154143) *
                 C153722) *
                C154094 -
            ((C39750 * C154143 + C20456 * C24169 + (C15549 + C15550) * C24168) *
                 C153722 +
             ((C22276 + C22275) * C154143 + (C20483 + C20484) * C24169 +
              (C14934 * C557 + C15495 + C15495 + C153969 * C581 +
               C14932 * C556 + C15496 + C15496 + C154109 * C580) *
                  C24168) *
                 C154074) *
                C153847) *
               C154093 +
           ((((C20484 + C20483) * C24168 + (C22275 + C22276) * C24169 +
              (C14932 * C4168 + C22270 + C22270 + C154109 * C4176 +
               C14934 * C4811 + C22269 + C22269 + C153969 * C4817) *
                  C154143) *
                 C154074 +
             (C20461 * C24168 + C39751 * C24169 + (C39760 + C39761) * C154143) *
                 C153722) *
                C153847 -
            ((C38472 * C154143 + C19132 * C24169 + C19133 * C24168) * C153722 +
             ((C20988 + C20987) * C154143 + (C19166 + C19167) * C24169 +
              (C19165 + C19164) * C24168) *
                 C154074) *
                C154094) *
               C153819) *
              C329 +
          (((((C15550 + C15549) * C24168 + C20461 * C24169 + C39751 * C154143) *
                 C154074 +
             ((C15548 + C15547) * C24168 + C20466 * C24169 +
              (C20487 + C20488) * C154143) *
                 C153722) *
                C153847 -
            ((C19131 * C154143 + C15752 * C24169 + (C14994 + C14993) * C24168) *
                 C153722 +
             (C19132 * C154143 + C19133 * C24169 + (C14992 + C14991) * C24168) *
                 C154074) *
                C154094) *
               C154093 +
           (((C19130 * C24168 + C19138 * C24169 + C38473 * C154143) * C154074 +
             (C18830 * C24168 + C19143 * C24169 + (C19170 + C19171) * C154143) *
                 C153722) *
                C154094 -
            (((C14934 * C4809 + C22265 + C22265 + C153969 * C4815 +
               C14932 * C4170 + C22266 + C22266 + C154109 * C4178) *
                  C154143 +
              (C20488 + C20487) * C24169 + C20066 * C24168) *
                 C153722 +
             ((C39761 + C39760) * C154143 + C39750 * C24169 + C20456 * C24168) *
                 C154074) *
                C153847) *
               C153819) *
              C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
              C14938 + C14938 + C153969 * C580) *
                 C153865 * C11376 +
             (C14991 + C14992) * C153865 * C11377 + C15005 * C11378 +
             C15006 * C154108) *
                C154094 -
            (C15969 * C154108 + C15970 * C11378 +
             (C15549 + C15550) * C153865 * C11377 +
             (C14934 * C557 + C15495 + C15495 + C153969 * C581 + C14932 * C556 +
              C15496 + C15496 + C154109 * C580) *
                 C153865 * C11376) *
                C153847) *
               C154093 +
           (((C14932 * C1081 + C16235 + C16235 + C154109 * C1093 +
              C14934 * C1489 + C16236 + C16236 + C153969 * C1499) *
                 C153865 * C11376 +
             (C16269 + C16270) * C153865 * C11377 +
             (C16271 + C16272) * C153865 * C11378 +
             (C16273 + C16274) * C153865 * C154108) *
                C153847 -
            (C15759 * C154108 + C15760 * C11378 +
             (C15275 + C15276) * C153865 * C11377 +
             (C14934 * C1081 + C15221 + C15221 + C153969 * C1093 +
              C14932 * C335 + C15222 + C15222 + C154109 * C359) *
                 C153865 * C11376) *
                C154094) *
               C153819) *
              C329 +
          ((((C15550 + C15549) * C153865 * C11376 +
             (C15548 + C15547) * C153865 * C11377 +
             (C15546 + C15545) * C153865 * C11378 +
             (C15975 + C15976) * C153865 * C154108) *
                C153847 -
            (C15007 * C154108 + C15008 * C11378 +
             (C14994 + C14993) * C153865 * C11377 +
             (C14992 + C14991) * C153865 * C11376) *
                C154094) *
               C154093 +
           (((C15276 + C15275) * C153865 * C11376 +
             (C15274 + C15273) * C153865 * C11377 +
             (C15272 + C15271) * C153865 * C11378 +
             (C15765 + C15766) * C153865 * C154108) *
                C154094 -
            ((C14934 * C1485 + C16255 + C16255 + C153969 * C1495 +
              C14932 * C1085 + C16256 + C16256 + C154109 * C1097) *
                 C153865 * C154108 +
             (C16274 + C16273) * C153865 * C11378 +
             (C16272 + C16271) * C153865 * C11377 +
             (C16270 + C16269) * C153865 * C11376) *
                C153847) *
               C153819) *
              C153754)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C62967 * C136 + C62976 + C62976 + C62963 * C152 + C62969 * C556 +
              C62977 + C62977 + C62964 * C580 + C62971 * C557 + C62978 +
              C62978 + C62965 * C581 + C62973 * C2272 + C62979 + C62979 +
              C154123 * C2282) *
                 C153865 * C154074 +
             (C63044 + C63045 + C63046 + C63047) * C153865 * C153722) *
                C154094 -
            ((C63564 + C63565 + C63566 + C63567) * C153865 * C153722 +
             (C62973 * C7665 + C63520 + C63520 + C154123 * C7673 +
              C62971 * C2272 + C63521 + C63521 + C62965 * C2282 +
              C62969 * C557 + C63522 + C63522 + C62964 * C581 + C62967 * C556 +
              C63523 + C63523 + C62963 * C580) *
                 C153865 * C154074) *
                C153847) *
               C154093 +
           (((C62967 * C1081 + C64266 + C64266 + C62963 * C1093 +
              C62969 * C1489 + C64267 + C64267 + C62964 * C1499 +
              C62971 * C6161 + C64268 + C64268 + C62965 * C6173 +
              C62973 * C9167 + C64269 + C64269 + C154123 * C9173) *
                 C153865 * C154074 +
             (C64294 + C64295 + C64296 + C64297) * C153865 * C153722) *
                C153847 -
            ((C63306 + C63307 + C63308 + C63309) * C153865 * C153722 +
             (C62973 * C6161 + C63262 + C63262 + C154123 * C6173 +
              C62971 * C1489 + C63263 + C63263 + C62965 * C1499 +
              C62969 * C1081 + C63264 + C63264 + C62964 * C1093 +
              C62967 * C335 + C63265 + C63265 + C62963 * C359) *
                 C153865 * C154074) *
                C154094) *
               C153819) *
              C329 +
          ((((C63567 + C63566 + C63565 + C63564) * C153865 * C154074 +
             (C64004 + C64005 + C64006 + C64007) * C153865 * C153722) *
                C153847 -
            ((C63048 + C63049 + C63050 + C63051) * C153865 * C153722 +
             (C63047 + C63046 + C63045 + C63044) * C153865 * C154074) *
                C154094) *
               C154093 +
           (((C63309 + C63308 + C63307 + C63306) * C153865 * C154074 +
             (C63786 + C63787 + C63788 + C63789) * C153865 * C153722) *
                C154094 -
            ((C62973 * C9165 + C64282 + C64282 + C154123 * C9171 +
              C62971 * C6157 + C64283 + C64283 + C62965 * C6169 +
              C62969 * C1487 + C64284 + C64284 + C62964 * C1497 +
              C62967 * C1083 + C64285 + C64285 + C62963 * C1095) *
                 C153865 * C153722 +
             (C64297 + C64296 + C64295 + C64294) * C153865 * C154074) *
                C153847) *
               C153819) *
              C153754)) /
            (p * q * std::sqrt(p + q));
    d2ee[197] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((C14932 * C136 + C14937 + C14937 + C154109 * C152 +
                C14934 * C556 + C14938 + C14938 + C153969 * C580) *
                   C153865 * C11376 +
               (C14991 + C14992) * C153865 * C11377 + C15005 * C11378 +
               C15006 * C154108) *
                  C153783 * C153767 * C130 -
              (C15007 * C154108 + C15008 * C11378 +
               (C14994 + C14993) * C153865 * C11377 +
               (C14992 + C14991) * C153865 * C11376) *
                  C153783 * C153767 * C131 +
              (C15005 * C11376 + C15006 * C11377 +
               (C14998 + C14997) * C153865 * C11378 +
               (C14999 + C15000) * C153865 * C154108) *
                  C153783 * C153767 * C132 -
              ((C14934 * C909 + C14969 + C14969 + C153969 * C911 +
                C14932 * C142 + C14970 + C14970 + C154109 * C158) *
                   C153865 * C154108 +
               (C15000 + C14999) * C153865 * C11378 + C15007 * C11377 +
               C15008 * C11376) *
                  C153783 * C153767 * C133) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C14932 * C136 + C14937 + C14937 + C154109 * C152 +
                 C14934 * C556 + C14938 + C14938 + C153969 * C580) *
                    C153865 * C11376 +
                (C14991 + C14992) * C153865 * C11377 + C15005 * C11378 +
                C15006 * C154108) *
                   C153783 * C326 -
               ((C15271 + C15272) * C153865 * C154108 +
                (C15273 + C15274) * C153865 * C11378 +
                (C15275 + C15276) * C153865 * C11377 +
                (C14934 * C1081 + C15221 + C15221 + C153969 * C1093 +
                 C14932 * C335 + C15222 + C15222 + C154109 * C359) *
                    C153865 * C11376) *
                   C153783 * C327 +
               ((C14932 * C336 + C15223 + C15223 + C154109 * C360 +
                 C14934 * C1920 + C15224 + C15224 + C153969 * C1930) *
                    C153865 * C11376 +
                (C15277 + C15278) * C153865 * C11377 +
                (C15279 + C15280) * C153865 * C11378 +
                (C15281 + C15282) * C153865 * C154108) *
                   C153783 * C328) *
                  C329 +
              (((C15276 + C15275) * C153865 * C11376 +
                (C15274 + C15273) * C153865 * C11377 +
                (C15272 + C15271) * C153865 * C11378 +
                (C14932 * C331 + C15243 + C15243 + C154109 * C355 +
                 C14934 * C1085 + C15244 + C15244 + C153969 * C1097) *
                    C153865 * C154108) *
                   C153783 * C327 -
               (C15007 * C154108 + C15008 * C11378 +
                (C14994 + C14993) * C153865 * C11377 +
                (C14992 + C14991) * C153865 * C11376) *
                   C153783 * C326 -
               ((C14934 * C1916 + C15245 + C15245 + C153969 * C1926 +
                 C14932 * C340 + C15246 + C15246 + C154109 * C364) *
                    C153865 * C154108 +
                (C15282 + C15281) * C153865 * C11378 +
                (C15280 + C15279) * C153865 * C11377 +
                (C15278 + C15277) * C153865 * C11376) *
                   C153783 * C328) *
                  C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
             C14938 + C14938 + C153969 * C580) *
                C153865 * C11376 +
            (C14991 + C14992) * C153865 * C11377 + C15005 * C11378 +
            C15006 * C154108) *
               C549 -
           ((C15545 + C15546) * C153865 * C154108 +
            (C15547 + C15548) * C153865 * C11378 +
            (C15549 + C15550) * C153865 * C11377 +
            (C14934 * C557 + C15495 + C15495 + C153969 * C581 + C14932 * C556 +
             C15496 + C15496 + C154109 * C580) *
                C153865 * C11376) *
               C550 +
           ((C14932 * C557 + C15497 + C15497 + C154109 * C581 + C14934 * C2272 +
             C15498 + C15498 + C153969 * C2282) *
                C153865 * C11376 +
            (C15551 + C15552) * C153865 * C11377 +
            (C15553 + C15554) * C153865 * C11378 +
            (C15555 + C15556) * C153865 * C154108) *
               C551) *
              C153767 * C329 +
          (((C15550 + C15549) * C153865 * C11376 +
            (C15548 + C15547) * C153865 * C11377 +
            (C15546 + C15545) * C153865 * C11378 +
            (C14932 * C552 + C15517 + C15517 + C154109 * C576 + C14934 * C561 +
             C15518 + C15518 + C153969 * C585) *
                C153865 * C154108) *
               C550 -
           (C15007 * C154108 + C15008 * C11378 +
            (C14994 + C14993) * C153865 * C11377 +
            (C14992 + C14991) * C153865 * C11376) *
               C549 -
           ((C14934 * C2268 + C15519 + C15519 + C153969 * C2278 +
             C14932 * C561 + C15520 + C15520 + C154109 * C585) *
                C153865 * C154108 +
            (C15556 + C15555) * C153865 * C11378 +
            (C15554 + C15553) * C153865 * C11377 +
            (C15552 + C15551) * C153865 * C11376) *
               C551) *
              C153767 * C153754)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
             C14938 + C14938 + C153969 * C580) *
                C24168 +
            (C19164 + C19165) * C24169 + (C19167 + C19166) * C154143) *
               C154074 +
           ((C14991 + C14992) * C24168 + C19130 * C24169 + C19138 * C154143) *
               C153722) *
              C153783 * C153767 * C130 -
          ((C19131 * C154143 + C15752 * C24169 + (C14994 + C14993) * C24168) *
               C153722 +
           (C19132 * C154143 + C19133 * C24169 + (C14992 + C14991) * C24168) *
               C154074) *
              C153783 * C153767 * C131 +
          ((C15001 * C24168 + C18830 * C24169 + C19143 * C154143) * C154074 +
           (C15002 * C24168 + C19774 * C24169 + (C15281 + C15282) * C154143) *
               C153722) *
              C153783 * C153767 * C132 -
          (((C14934 * C1916 + C15245 + C15245 + C153969 * C1926 +
             C14932 * C340 + C15246 + C15246 + C154109 * C364) *
                C154143 +
            (C15766 + C15765) * C24169 + C15003 * C24168) *
               C153722 +
           ((C15282 + C15281) * C154143 + C15751 * C24169 + C15004 * C24168) *
               C154074) *
              C153783 * C153767 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
              C14938 + C14938 + C153969 * C580) *
                 C24168 +
             (C19164 + C19165) * C24169 + C38471 * C154143) *
                C154074 +
            ((C14991 + C14992) * C24168 + C19130 * C24169 + C19138 * C154143) *
                C153722) *
               C153783 * C326 -
           ((C38472 * C154143 + C19132 * C24169 + C19133 * C24168) * C153722 +
            ((C20988 + C20987) * C154143 + (C19166 + C19167) * C24169 +
             (C19165 + C19164) * C24168) *
                C154074) *
               C153783 * C327 +
           ((C38471 * C24168 + (C20987 + C20988) * C24169 +
             (C14932 * C3083 + C20982 + C20982 + C154109 * C3091 +
              C14934 * C5559 + C20981 + C20981 + C153969 * C5565) *
                 C154143) *
                C154074 +
            (C19138 * C24168 + C38473 * C24169 + (C38482 + C38483) * C154143) *
                C153722) *
               C153783 * C328) *
              C329 +
          (((C19130 * C24168 + C19138 * C24169 + C38473 * C154143) * C154074 +
            (C18830 * C24168 + C19143 * C24169 + (C19170 + C19171) * C154143) *
                C153722) *
               C153783 * C327 -
           ((C19131 * C154143 + C15752 * C24169 + (C14994 + C14993) * C24168) *
                C153722 +
            (C19132 * C154143 + C19133 * C24169 + (C14992 + C14991) * C24168) *
                C154074) *
               C153783 * C326 -
           (((C14934 * C5557 + C20977 + C20977 + C153969 * C5563 +
              C14932 * C3085 + C20978 + C20978 + C154109 * C3093) *
                 C154143 +
             (C19171 + C19170) * C24169 + C19131 * C24168) *
                C153722 +
            ((C38483 + C38482) * C154143 + C38472 * C24169 + C19132 * C24168) *
                C154074) *
               C153783 * C328) *
              C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
              C14938 + C14938 + C153969 * C580) *
                 C24168 +
             (C19164 + C19165) * C24169 + C38471 * C154143) *
                C154074 +
            ((C14991 + C14992) * C24168 + C19130 * C24169 + C19138 * C154143) *
                C153722) *
               C549 -
           (((C20486 + C20485) * C154143 + C20456 * C24169 +
             (C15549 + C15550) * C24168) *
                C153722 +
            ((C22276 + C22275) * C154143 + (C20483 + C20484) * C24169 +
             (C14934 * C557 + C15495 + C15495 + C153969 * C581 + C14932 * C556 +
              C15496 + C15496 + C154109 * C580) *
                 C24168) *
                C154074) *
               C550 +
           (((C14932 * C557 + C15497 + C15497 + C154109 * C581 +
              C14934 * C2272 + C15498 + C15498 + C153969 * C2282) *
                 C24168 +
             (C21293 + C21294) * C24169 +
             (C14932 * C3369 + C21288 + C21288 + C154109 * C3377 +
              C14934 * C6160 + C21287 + C21287 + C153969 * C6172) *
                 C154143) *
                C154074 +
            ((C15551 + C15552) * C24168 + (C19478 + C19479) * C24169 +
             (C38782 + C38783) * C154143) *
                C153722) *
               C551) *
              C153767 * C329 +
          ((((C15550 + C15549) * C24168 + C20461 * C24169 +
             (C20485 + C20486) * C154143) *
                C154074 +
            ((C15548 + C15547) * C24168 + C20466 * C24169 +
             (C20487 + C20488) * C154143) *
                C153722) *
               C550 -
           ((C19131 * C154143 + C15752 * C24169 + (C14994 + C14993) * C24168) *
                C153722 +
            (C19132 * C154143 + C19133 * C24169 + (C14992 + C14991) * C24168) *
                C154074) *
               C549 -
           (((C14934 * C6156 + C21283 + C21283 + C153969 * C6168 +
              C14932 * C3371 + C21284 + C21284 + C154109 * C3379) *
                 C154143 +
             (C19481 + C19480) * C24169 + (C15554 + C15553) * C24168) *
                C153722 +
            ((C38783 + C38782) * C154143 + (C19479 + C19478) * C24169 +
             (C15552 + C15551) * C24168) *
                C154074) *
               C551) *
              C153767 * C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C62967 * C136 + C62976 + C62976 + C62963 * C152 + C62969 * C556 +
            C62977 + C62977 + C62964 * C580 + C62971 * C557 + C62978 + C62978 +
            C62965 * C581 + C62973 * C2272 + C62979 + C62979 +
            C154123 * C2282) *
               C153865 * C154074 +
           (C63044 + C63045 + C63046 + C63047) * C153865 * C153722) *
              C153783 * C153767 * C130 -
          ((C63048 + C63049 + C63050 + C63051) * C153865 * C153722 +
           (C63047 + C63046 + C63045 + C63044) * C153865 * C154074) *
              C153783 * C153767 * C131 +
          ((C63051 + C63050 + C63049 + C63048) * C153865 * C154074 +
           (C63052 + C63053 + C63054 + C63055) * C153865 * C153722) *
              C153783 * C153767 * C132 -
          ((C62973 * C2268 + C63016 + C63016 + C154123 * C2278 + C62971 * C561 +
            C63017 + C63017 + C62965 * C585 + C62969 * C552 + C63018 + C63018 +
            C62964 * C576 + C62967 * C140 + C63019 + C63019 + C62963 * C156) *
               C153865 * C153722 +
           (C63055 + C63054 + C63053 + C63052) * C153865 * C154074) *
              C153783 * C153767 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C62967 * C136 + C62976 + C62976 + C62963 * C152 + C62969 * C556 +
             C62977 + C62977 + C62964 * C580 + C62971 * C557 + C62978 + C62978 +
             C62965 * C581 + C62973 * C2272 + C62979 + C62979 +
             C154123 * C2282) *
                C153865 * C154074 +
            (C63044 + C63045 + C63046 + C63047) * C153865 * C153722) *
               C153783 * C326 -
           ((C63306 + C63307 + C63308 + C63309) * C153865 * C153722 +
            (C62973 * C6161 + C63262 + C63262 + C154123 * C6173 +
             C62971 * C1489 + C63263 + C63263 + C62965 * C1499 +
             C62969 * C1081 + C63264 + C63264 + C62964 * C1093 + C62967 * C335 +
             C63265 + C63265 + C62963 * C359) *
                C153865 * C154074) *
               C153783 * C327 +
           ((C62967 * C336 + C63266 + C63266 + C62963 * C360 + C62969 * C1920 +
             C63267 + C63267 + C62964 * C1930 + C62971 * C3369 + C63268 +
             C63268 + C62965 * C3377 + C62973 * C6160 + C63269 + C63269 +
             C154123 * C6172) *
                C153865 * C154074 +
            (C63310 + C63311 + C63312 + C63313) * C153865 * C153722) *
               C153783 * C328) *
              C329 +
          (((C63309 + C63308 + C63307 + C63306) * C153865 * C154074 +
            (C62967 * C333 + C63282 + C63282 + C62963 * C357 + C62969 * C1083 +
             C63283 + C63283 + C62964 * C1095 + C62971 * C1487 + C63284 +
             C63284 + C62965 * C1497 + C62973 * C6157 + C63285 + C63285 +
             C154123 * C6169) *
                C153865 * C153722) *
               C153783 * C327 -
           ((C63048 + C63049 + C63050 + C63051) * C153865 * C153722 +
            (C63047 + C63046 + C63045 + C63044) * C153865 * C154074) *
               C153783 * C326 -
           ((C62973 * C6156 + C63286 + C63286 + C154123 * C6168 +
             C62971 * C3371 + C63287 + C63287 + C62965 * C3379 +
             C62969 * C1918 + C63288 + C63288 + C62964 * C1928 + C62967 * C338 +
             C63289 + C63289 + C62963 * C362) *
                C153865 * C153722 +
            (C63313 + C63312 + C63311 + C63310) * C153865 * C154074) *
               C153783 * C328) *
              C153754)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C62967 * C136 + C62976 + C62976 + C62963 * C152 + C62969 * C556 +
             C62977 + C62977 + C62964 * C580 + C62971 * C557 + C62978 + C62978 +
             C62965 * C581 + C62973 * C2272 + C62979 + C62979 +
             C154123 * C2282) *
                C153865 * C154074 +
            (C63044 + C63045 + C63046 + C63047) * C153865 * C153722) *
               C549 -
           ((C63564 + C63565 + C63566 + C63567) * C153865 * C153722 +
            (C62973 * C7665 + C63520 + C63520 + C154123 * C7673 +
             C62971 * C2272 + C63521 + C63521 + C62965 * C2282 + C62969 * C557 +
             C63522 + C63522 + C62964 * C581 + C62967 * C556 + C63523 + C63523 +
             C62963 * C580) *
                C153865 * C154074) *
               C550 +
           ((C62967 * C557 + C63524 + C63524 + C62963 * C581 + C62969 * C2272 +
             C63525 + C63525 + C62964 * C2282 + C62971 * C7665 + C63526 +
             C63526 + C62965 * C7673 + C62973 * C10502 + C63527 + C63527 +
             C154123 * C10508) *
                C153865 * C154074 +
            (C63568 + C63569 + C63570 + C63571) * C153865 * C153722) *
               C551) *
              C153767 * C329 +
          (((C63567 + C63566 + C63565 + C63564) * C153865 * C154074 +
            (C62967 * C554 + C63540 + C63540 + C62963 * C578 + C62969 * C559 +
             C63541 + C63541 + C62964 * C583 + C62971 * C2270 + C63542 +
             C63542 + C62965 * C2280 + C62973 * C7667 + C63543 + C63543 +
             C154123 * C7675) *
                C153865 * C153722) *
               C550 -
           ((C63048 + C63049 + C63050 + C63051) * C153865 * C153722 +
            (C63047 + C63046 + C63045 + C63044) * C153865 * C154074) *
               C549 -
           ((C62973 * C10500 + C63544 + C63544 + C154123 * C10506 +
             C62971 * C7667 + C63545 + C63545 + C62965 * C7675 +
             C62969 * C2270 + C63546 + C63546 + C62964 * C2280 + C62967 * C559 +
             C63547 + C63547 + C62963 * C583) *
                C153865 * C153722 +
            (C63571 + C63570 + C63569 + C63568) * C153865 * C154074) *
               C551) *
              C153767 * C153754)) /
            (p * q * std::sqrt(p + q));
    d2ee[198] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
              C14938 + C14938 + C153969 * C580) *
                 C24168 +
             (C19164 + C19165) * C24169 + C38471 * C154143) *
                C154074 +
            ((C14991 + C14992) * C24168 + C19130 * C24169 + C19138 * C154143) *
                C153722) *
               C154094 -
           (((C20486 + C20485) * C154143 + C20456 * C24169 +
             (C15549 + C15550) * C24168) *
                C153722 +
            ((C22276 + C22275) * C154143 + (C20483 + C20484) * C24169 +
             (C14934 * C557 + C15495 + C15495 + C153969 * C581 + C14932 * C556 +
              C15496 + C15496 + C154109 * C580) *
                 C24168) *
                C154074) *
               C153847) *
              C153767 * C154162 +
          ((((C15550 + C15549) * C24168 + C20461 * C24169 +
             (C20485 + C20486) * C154143) *
                C154074 +
            ((C15548 + C15547) * C24168 + C20466 * C24169 +
             (C20487 + C20488) * C154143) *
                C153722) *
               C153847 -
           ((C19131 * C154143 + C15752 * C24169 + (C14994 + C14993) * C24168) *
                C153722 +
            (C19132 * C154143 + C19133 * C24169 + (C14992 + C14991) * C24168) *
                C154074) *
               C154094) *
              C153767 * C154163 +
          (((C15001 * C24168 + C18830 * C24169 + C19143 * C154143) * C154074 +
            (C15002 * C24168 + C19774 * C24169 + (C15281 + C15282) * C154143) *
                C153722) *
               C154094 -
           (((C14934 * C3372 + C17455 + C17455 + C153969 * C3380 +
              C14932 * C1917 + C17456 + C17456 + C154109 * C1927) *
                 C154143 +
             (C16274 + C16273) * C24169 + C15961 * C24168) *
                C153722 +
            ((C20488 + C20487) * C154143 + C20066 * C24169 + C15962 * C24168) *
                C154074) *
               C153847) *
              C153767 * C774)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
             C14938 + C14938 + C153969 * C580) *
                C153865 * C11376 +
            (C14991 + C14992) * C153865 * C11377 + C15005 * C11378 +
            C15006 * C154108) *
               C154094 -
           (C15969 * C154108 + C15970 * C11378 +
            (C15549 + C15550) * C153865 * C11377 +
            (C14934 * C557 + C15495 + C15495 + C153969 * C581 + C14932 * C556 +
             C15496 + C15496 + C154109 * C580) *
                C153865 * C11376) *
               C153847) *
              C153767 * C154162 +
          (((C15550 + C15549) * C153865 * C11376 +
            (C15548 + C15547) * C153865 * C11377 +
            (C15546 + C15545) * C153865 * C11378 +
            (C15975 + C15976) * C153865 * C154108) *
               C153847 -
           (C15007 * C154108 + C15008 * C11378 +
            (C14994 + C14993) * C153865 * C11377 +
            (C14992 + C14991) * C153865 * C11376) *
               C154094) *
              C153767 * C154163 +
          ((C15005 * C11376 + C15006 * C11377 +
            (C14998 + C14997) * C153865 * C11378 +
            (C14999 + C15000) * C153865 * C154108) *
               C154094 -
           ((C14934 * C563 + C15967 + C15967 + C153969 * C587 + C14932 * C562 +
             C15968 + C15968 + C154109 * C586) *
                C153865 * C154108 +
            (C15976 + C15975) * C153865 * C11378 + C15969 * C11377 +
            C15970 * C11376) *
               C153847) *
              C153767 * C774)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C62967 * C136 + C62976 + C62976 + C62963 * C152 + C62969 * C556 +
             C62977 + C62977 + C62964 * C580 + C62971 * C557 + C62978 + C62978 +
             C62965 * C581 + C62973 * C2272 + C62979 + C62979 +
             C154123 * C2282) *
                C153865 * C154074 +
            (C63044 + C63045 + C63046 + C63047) * C153865 * C153722) *
               C154094 -
           ((C63564 + C63565 + C63566 + C63567) * C153865 * C153722 +
            (C62973 * C7665 + C63520 + C63520 + C154123 * C7673 +
             C62971 * C2272 + C63521 + C63521 + C62965 * C2282 + C62969 * C557 +
             C63522 + C63522 + C62964 * C581 + C62967 * C556 + C63523 + C63523 +
             C62963 * C580) *
                C153865 * C154074) *
               C153847) *
              C153767 * C154162 +
          (((C63567 + C63566 + C63565 + C63564) * C153865 * C154074 +
            (C64004 + C64005 + C64006 + C64007) * C153865 * C153722) *
               C153847 -
           ((C63048 + C63049 + C63050 + C63051) * C153865 * C153722 +
            (C63047 + C63046 + C63045 + C63044) * C153865 * C154074) *
               C154094) *
              C153767 * C154163 +
          (((C63051 + C63050 + C63049 + C63048) * C153865 * C154074 +
            (C63052 + C63053 + C63054 + C63055) * C153865 * C153722) *
               C154094 -
           ((C62973 * C7668 + C63992 + C63992 + C154123 * C7676 +
             C62971 * C2269 + C63993 + C63993 + C62965 * C2279 + C62969 * C560 +
             C63994 + C63994 + C62964 * C584 + C62967 * C553 + C63995 + C63995 +
             C62963 * C577) *
                C153865 * C153722 +
            (C64007 + C64006 + C64005 + C64004) * C153865 * C154074) *
               C153847) *
              C153767 * C774)) /
            (p * q * std::sqrt(p + q));
    d2ee[199] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
             C14938 + C14938 + C153969 * C580) *
                C153865 * C11376 +
            (C14991 + C14992) * C153865 * C11377 + C15005 * C11378 +
            C15006 * C154108) *
               C153783 * C326 -
           ((C15271 + C15272) * C153865 * C154108 +
            (C15273 + C15274) * C153865 * C11378 +
            (C15275 + C15276) * C153865 * C11377 +
            (C14934 * C1081 + C15221 + C15221 + C153969 * C1093 +
             C14932 * C335 + C15222 + C15222 + C154109 * C359) *
                C153865 * C11376) *
               C153783 * C327 +
           ((C14932 * C336 + C15223 + C15223 + C154109 * C360 + C14934 * C1920 +
             C15224 + C15224 + C153969 * C1930) *
                C153865 * C11376 +
            (C15277 + C15278) * C153865 * C11377 +
            (C15279 + C15280) * C153865 * C11378 +
            (C15281 + C15282) * C153865 * C154108) *
               C153783 * C328) *
              C329 +
          (((C15276 + C15275) * C153865 * C11376 +
            (C15274 + C15273) * C153865 * C11377 +
            (C15272 + C15271) * C153865 * C11378 +
            (C14932 * C331 + C15243 + C15243 + C154109 * C355 + C14934 * C1085 +
             C15244 + C15244 + C153969 * C1097) *
                C153865 * C154108) *
               C153783 * C327 -
           (C15007 * C154108 + C15008 * C11378 +
            (C14994 + C14993) * C153865 * C11377 +
            (C14992 + C14991) * C153865 * C11376) *
               C153783 * C326 -
           ((C14934 * C1916 + C15245 + C15245 + C153969 * C1926 +
             C14932 * C340 + C15246 + C15246 + C154109 * C364) *
                C153865 * C154108 +
            (C15282 + C15281) * C153865 * C11378 +
            (C15280 + C15279) * C153865 * C11377 +
            (C15278 + C15277) * C153865 * C11376) *
               C153783 * C328) *
              C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
            C14938 + C14938 + C153969 * C580) *
               C153865 * C11376 +
           (C14991 + C14992) * C153865 * C11377 + C15005 * C11378 +
           C15006 * C154108) *
              C153783 * C153767 * C130 -
          (C15007 * C154108 + C15008 * C11378 +
           (C14994 + C14993) * C153865 * C11377 +
           (C14992 + C14991) * C153865 * C11376) *
              C153783 * C153767 * C131 +
          (C15005 * C11376 + C15006 * C11377 +
           (C14998 + C14997) * C153865 * C11378 +
           (C14999 + C15000) * C153865 * C154108) *
              C153783 * C153767 * C132 -
          ((C14934 * C909 + C14969 + C14969 + C153969 * C911 + C14932 * C142 +
            C14970 + C14970 + C154109 * C158) *
               C153865 * C154108 +
           (C15000 + C14999) * C153865 * C11378 + C15007 * C11377 +
           C15008 * C11376) *
              C153783 * C153767 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
             C14938 + C14938 + C153969 * C580) *
                C24168 +
            (C19164 + C19165) * C24169 + (C19167 + C19166) * C154143) *
               C154074 +
           ((C14991 + C14992) * C24168 + C19130 * C24169 + C19138 * C154143) *
               C153722) *
              C153783 * C153767 * C130 -
          ((C19131 * C154143 + C15752 * C24169 + (C14994 + C14993) * C24168) *
               C153722 +
           (C19132 * C154143 + C19133 * C24169 + (C14992 + C14991) * C24168) *
               C154074) *
              C153783 * C153767 * C131 +
          ((C15001 * C24168 + C18830 * C24169 + C19143 * C154143) * C154074 +
           (C15002 * C24168 + C19774 * C24169 + (C15281 + C15282) * C154143) *
               C153722) *
              C153783 * C153767 * C132 -
          (((C14934 * C1916 + C15245 + C15245 + C153969 * C1926 +
             C14932 * C340 + C15246 + C15246 + C154109 * C364) *
                C154143 +
            (C15766 + C15765) * C24169 + C15003 * C24168) *
               C153722 +
           ((C15282 + C15281) * C154143 + C15751 * C24169 + C15004 * C24168) *
               C154074) *
              C153783 * C153767 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
              C14938 + C14938 + C153969 * C580) *
                 C24168 +
             (C19164 + C19165) * C24169 + C38471 * C154143) *
                C154074 +
            ((C14991 + C14992) * C24168 + C19130 * C24169 + C19138 * C154143) *
                C153722) *
               C153783 * C326 -
           ((C38472 * C154143 + C19132 * C24169 + C19133 * C24168) * C153722 +
            ((C20988 + C20987) * C154143 + (C19166 + C19167) * C24169 +
             (C19165 + C19164) * C24168) *
                C154074) *
               C153783 * C327 +
           ((C38471 * C24168 + (C20987 + C20988) * C24169 +
             (C14932 * C3083 + C20982 + C20982 + C154109 * C3091 +
              C14934 * C5559 + C20981 + C20981 + C153969 * C5565) *
                 C154143) *
                C154074 +
            (C19138 * C24168 + C38473 * C24169 + (C38482 + C38483) * C154143) *
                C153722) *
               C153783 * C328) *
              C329 +
          (((C19130 * C24168 + C19138 * C24169 + C38473 * C154143) * C154074 +
            (C18830 * C24168 + C19143 * C24169 + (C19170 + C19171) * C154143) *
                C153722) *
               C153783 * C327 -
           ((C19131 * C154143 + C15752 * C24169 + (C14994 + C14993) * C24168) *
                C153722 +
            (C19132 * C154143 + C19133 * C24169 + (C14992 + C14991) * C24168) *
                C154074) *
               C153783 * C326 -
           (((C14934 * C5557 + C20977 + C20977 + C153969 * C5563 +
              C14932 * C3085 + C20978 + C20978 + C154109 * C3093) *
                 C154143 +
             (C19171 + C19170) * C24169 + C19131 * C24168) *
                C153722 +
            ((C38483 + C38482) * C154143 + C38472 * C24169 + C19132 * C24168) *
                C154074) *
               C153783 * C328) *
              C153754)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C62967 * C136 + C62976 + C62976 + C62963 * C152 + C62969 * C556 +
            C62977 + C62977 + C62964 * C580 + C62971 * C557 + C62978 + C62978 +
            C62965 * C581 + C62973 * C2272 + C62979 + C62979 +
            C154123 * C2282) *
               C153865 * C154074 +
           (C63044 + C63045 + C63046 + C63047) * C153865 * C153722) *
              C153783 * C153767 * C130 -
          ((C63048 + C63049 + C63050 + C63051) * C153865 * C153722 +
           (C63047 + C63046 + C63045 + C63044) * C153865 * C154074) *
              C153783 * C153767 * C131 +
          ((C63051 + C63050 + C63049 + C63048) * C153865 * C154074 +
           (C63052 + C63053 + C63054 + C63055) * C153865 * C153722) *
              C153783 * C153767 * C132 -
          ((C62973 * C2268 + C63016 + C63016 + C154123 * C2278 + C62971 * C561 +
            C63017 + C63017 + C62965 * C585 + C62969 * C552 + C63018 + C63018 +
            C62964 * C576 + C62967 * C140 + C63019 + C63019 + C62963 * C156) *
               C153865 * C153722 +
           (C63055 + C63054 + C63053 + C63052) * C153865 * C154074) *
              C153783 * C153767 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C62967 * C136 + C62976 + C62976 + C62963 * C152 + C62969 * C556 +
             C62977 + C62977 + C62964 * C580 + C62971 * C557 + C62978 + C62978 +
             C62965 * C581 + C62973 * C2272 + C62979 + C62979 +
             C154123 * C2282) *
                C153865 * C154074 +
            (C63044 + C63045 + C63046 + C63047) * C153865 * C153722) *
               C153783 * C326 -
           ((C63306 + C63307 + C63308 + C63309) * C153865 * C153722 +
            (C62973 * C6161 + C63262 + C63262 + C154123 * C6173 +
             C62971 * C1489 + C63263 + C63263 + C62965 * C1499 +
             C62969 * C1081 + C63264 + C63264 + C62964 * C1093 + C62967 * C335 +
             C63265 + C63265 + C62963 * C359) *
                C153865 * C154074) *
               C153783 * C327 +
           ((C62967 * C336 + C63266 + C63266 + C62963 * C360 + C62969 * C1920 +
             C63267 + C63267 + C62964 * C1930 + C62971 * C3369 + C63268 +
             C63268 + C62965 * C3377 + C62973 * C6160 + C63269 + C63269 +
             C154123 * C6172) *
                C153865 * C154074 +
            (C63310 + C63311 + C63312 + C63313) * C153865 * C153722) *
               C153783 * C328) *
              C329 +
          (((C63309 + C63308 + C63307 + C63306) * C153865 * C154074 +
            (C62967 * C333 + C63282 + C63282 + C62963 * C357 + C62969 * C1083 +
             C63283 + C63283 + C62964 * C1095 + C62971 * C1487 + C63284 +
             C63284 + C62965 * C1497 + C62973 * C6157 + C63285 + C63285 +
             C154123 * C6169) *
                C153865 * C153722) *
               C153783 * C327 -
           ((C63048 + C63049 + C63050 + C63051) * C153865 * C153722 +
            (C63047 + C63046 + C63045 + C63044) * C153865 * C154074) *
               C153783 * C326 -
           ((C62973 * C6156 + C63286 + C63286 + C154123 * C6168 +
             C62971 * C3371 + C63287 + C63287 + C62965 * C3379 +
             C62969 * C1918 + C63288 + C63288 + C62964 * C1928 + C62967 * C338 +
             C63289 + C63289 + C62963 * C362) *
                C153865 * C153722 +
            (C63313 + C63312 + C63311 + C63310) * C153865 * C154074) *
               C153783 * C328) *
              C153754)) /
            (p * q * std::sqrt(p + q));
    d2ee[200] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
              C14938 + C14938 + C153969 * C580) *
                 C24168 +
             (C19164 + C19165) * C24169 + C38471 * C154143) *
                C154074 +
            ((C14991 + C14992) * C24168 + C19130 * C24169 + C19138 * C154143) *
                C153722) *
               C153783 * C154164 -
           ((C38472 * C154143 + C19132 * C24169 + C19133 * C24168) * C153722 +
            (C40246 * C154143 + (C19166 + C19167) * C24169 +
             (C19165 + C19164) * C24168) *
                C154074) *
               C153783 * C154165 +
           ((C38471 * C24168 + (C20987 + C20988) * C24169 +
             (C40259 + C40260) * C154143) *
                C154074 +
            (C19138 * C24168 + C38473 * C24169 + (C38482 + C38483) * C154143) *
                C153722) *
               C153783 * C1629) *
              C154085 +
          (((C19130 * C24168 + C19138 * C24169 + C38473 * C154143) * C154074 +
            (C18830 * C24168 + C19143 * C24169 + (C19170 + C19171) * C154143) *
                C153722) *
               C153783 * C154165 -
           ((C19131 * C154143 + C15752 * C24169 + (C14994 + C14993) * C24168) *
                C153722 +
            (C19132 * C154143 + C19133 * C24169 + (C14992 + C14991) * C24168) *
                C154074) *
               C153783 * C154164 -
           (((C14934 * C5557 + C20977 + C20977 + C153969 * C5563 +
              C14932 * C3085 + C20978 + C20978 + C154109 * C3093) *
                 C154143 +
             (C19171 + C19170) * C24169 + C19131 * C24168) *
                C153722 +
            ((C38483 + C38482) * C154143 + C38472 * C24169 + C19132 * C24168) *
                C154074) *
               C153783 * C1629) *
              C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
             C14938 + C14938 + C153969 * C580) *
                C153865 * C11376 +
            (C14991 + C14992) * C153865 * C11377 + C15005 * C11378 +
            C15006 * C154108) *
               C153783 * C154164 -
           (C15759 * C154108 + C15760 * C11378 +
            (C15275 + C15276) * C153865 * C11377 +
            (C14934 * C1081 + C15221 + C15221 + C153969 * C1093 +
             C14932 * C335 + C15222 + C15222 + C154109 * C359) *
                C153865 * C11376) *
               C153783 * C154165 +
           ((C14932 * C336 + C15223 + C15223 + C154109 * C360 + C14934 * C1920 +
             C15224 + C15224 + C153969 * C1930) *
                C153865 * C11376 +
            (C15277 + C15278) * C153865 * C11377 +
            (C15279 + C15280) * C153865 * C11378 +
            (C15281 + C15282) * C153865 * C154108) *
               C153783 * C1629) *
              C154085 +
          (((C15276 + C15275) * C153865 * C11376 +
            (C15274 + C15273) * C153865 * C11377 +
            (C15272 + C15271) * C153865 * C11378 +
            (C15765 + C15766) * C153865 * C154108) *
               C153783 * C154165 -
           (C15007 * C154108 + C15008 * C11378 +
            (C14994 + C14993) * C153865 * C11377 +
            (C14992 + C14991) * C153865 * C11376) *
               C153783 * C154164 -
           ((C14934 * C1916 + C15245 + C15245 + C153969 * C1926 +
             C14932 * C340 + C15246 + C15246 + C154109 * C364) *
                C153865 * C154108 +
            (C15282 + C15281) * C153865 * C11378 +
            (C15280 + C15279) * C153865 * C11377 +
            (C15278 + C15277) * C153865 * C11376) *
               C153783 * C1629) *
              C153754)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C62967 * C136 + C62976 + C62976 + C62963 * C152 + C62969 * C556 +
             C62977 + C62977 + C62964 * C580 + C62971 * C557 + C62978 + C62978 +
             C62965 * C581 + C62973 * C2272 + C62979 + C62979 +
             C154123 * C2282) *
                C153865 * C154074 +
            (C63044 + C63045 + C63046 + C63047) * C153865 * C153722) *
               C153783 * C154164 -
           ((C63306 + C63307 + C63308 + C63309) * C153865 * C153722 +
            (C62973 * C6161 + C63262 + C63262 + C154123 * C6173 +
             C62971 * C1489 + C63263 + C63263 + C62965 * C1499 +
             C62969 * C1081 + C63264 + C63264 + C62964 * C1093 + C62967 * C335 +
             C63265 + C63265 + C62963 * C359) *
                C153865 * C154074) *
               C153783 * C154165 +
           ((C62967 * C336 + C63266 + C63266 + C62963 * C360 + C62969 * C1920 +
             C63267 + C63267 + C62964 * C1930 + C62971 * C3369 + C63268 +
             C63268 + C62965 * C3377 + C62973 * C6160 + C63269 + C63269 +
             C154123 * C6172) *
                C153865 * C154074 +
            (C63310 + C63311 + C63312 + C63313) * C153865 * C153722) *
               C153783 * C1629) *
              C154085 +
          (((C63309 + C63308 + C63307 + C63306) * C153865 * C154074 +
            (C63786 + C63787 + C63788 + C63789) * C153865 * C153722) *
               C153783 * C154165 -
           ((C63048 + C63049 + C63050 + C63051) * C153865 * C153722 +
            (C63047 + C63046 + C63045 + C63044) * C153865 * C154074) *
               C153783 * C154164 -
           ((C62973 * C6156 + C63286 + C63286 + C154123 * C6168 +
             C62971 * C3371 + C63287 + C63287 + C62965 * C3379 +
             C62969 * C1918 + C63288 + C63288 + C62964 * C1928 + C62967 * C338 +
             C63289 + C63289 + C62963 * C362) *
                C153865 * C153722 +
            (C63313 + C63312 + C63311 + C63310) * C153865 * C154074) *
               C153783 * C1629) *
              C153754)) /
            (p * q * std::sqrt(p + q));
    d2ee[201] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
              C14938 + C14938 + C153969 * C580) *
                 C24168 +
             (C19164 + C19165) * C24169 + C38471 * C154143) *
                C154074 +
            ((C14991 + C14992) * C24168 + C19130 * C24169 + C19138 * C154143) *
                C153722) *
               C154094 -
           ((C39750 * C154143 + C20456 * C24169 + (C15549 + C15550) * C24168) *
                C153722 +
            (C41531 * C154143 + (C20483 + C20484) * C24169 +
             (C14934 * C557 + C15495 + C15495 + C153969 * C581 + C14932 * C556 +
              C15496 + C15496 + C154109 * C580) *
                 C24168) *
                C154074) *
               C153847) *
              C154164 +
          ((((C20484 + C20483) * C24168 + (C22275 + C22276) * C24169 +
             (C41544 + C41545) * C154143) *
                C154074 +
            (C20461 * C24168 + C39751 * C24169 + (C39760 + C39761) * C154143) *
                C153722) *
               C153847 -
           ((C38472 * C154143 + C19132 * C24169 + C19133 * C24168) * C153722 +
            (C40246 * C154143 + (C19166 + C19167) * C24169 +
             (C19165 + C19164) * C24168) *
                C154074) *
               C154094) *
              C154165 +
          (((C38471 * C24168 + (C20987 + C20988) * C24169 +
             (C40259 + C40260) * C154143) *
                C154074 +
            (C19138 * C24168 + C38473 * C24169 + (C38482 + C38483) * C154143) *
                C153722) *
               C154094 -
           (((C14934 * C28359 + C41536 + C41536 + C153969 * C28363 +
              C14932 * C5558 + C41537 + C41537 + C154109 * C5564) *
                 C154143 +
             (C39761 + C39760) * C24169 + C39750 * C24168) *
                C153722 +
            ((C14934 * C28358 + C41538 + C41538 + C153969 * C28362 +
              C14932 * C5559 + C41539 + C41539 + C154109 * C5565) *
                 C154143 +
             (C41545 + C41544) * C24169 + C41531 * C24168) *
                C154074) *
               C153847) *
              C1629) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
             C14938 + C14938 + C153969 * C580) *
                C153865 * C11376 +
            (C14991 + C14992) * C153865 * C11377 + C15005 * C11378 +
            C15006 * C154108) *
               C154094 -
           (C15969 * C154108 + C15970 * C11378 +
            (C15549 + C15550) * C153865 * C11377 +
            (C14934 * C557 + C15495 + C15495 + C153969 * C581 + C14932 * C556 +
             C15496 + C15496 + C154109 * C580) *
                C153865 * C11376) *
               C153847) *
              C154164 +
          (((C14932 * C1081 + C16235 + C16235 + C154109 * C1093 +
             C14934 * C1489 + C16236 + C16236 + C153969 * C1499) *
                C153865 * C11376 +
            (C16269 + C16270) * C153865 * C11377 +
            (C16271 + C16272) * C153865 * C11378 +
            (C16273 + C16274) * C153865 * C154108) *
               C153847 -
           (C15759 * C154108 + C15760 * C11378 +
            (C15275 + C15276) * C153865 * C11377 +
            (C14934 * C1081 + C15221 + C15221 + C153969 * C1093 +
             C14932 * C335 + C15222 + C15222 + C154109 * C359) *
                C153865 * C11376) *
               C154094) *
              C154165 +
          (((C14932 * C336 + C15223 + C15223 + C154109 * C360 + C14934 * C1920 +
             C15224 + C15224 + C153969 * C1930) *
                C153865 * C11376 +
            (C15277 + C15278) * C153865 * C11377 +
            (C15279 + C15280) * C153865 * C11378 +
            (C15281 + C15282) * C153865 * C154108) *
               C154094 -
           ((C14934 * C3372 + C17455 + C17455 + C153969 * C3380 +
             C14932 * C1917 + C17456 + C17456 + C154109 * C1927) *
                C153865 * C154108 +
            (C14934 * C3371 + C17457 + C17457 + C153969 * C3379 +
             C14932 * C1918 + C17458 + C17458 + C154109 * C1928) *
                C153865 * C11378 +
            (C14934 * C3370 + C17459 + C17459 + C153969 * C3378 +
             C14932 * C1919 + C17460 + C17460 + C154109 * C1929) *
                C153865 * C11377 +
            (C14934 * C3369 + C17461 + C17461 + C153969 * C3377 +
             C14932 * C1920 + C17462 + C17462 + C154109 * C1930) *
                C153865 * C11376) *
               C153847) *
              C1629) *
         C153748) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C62967 * C136 + C62976 + C62976 + C62963 * C152 + C62969 * C556 +
             C62977 + C62977 + C62964 * C580 + C62971 * C557 + C62978 + C62978 +
             C62965 * C581 + C62973 * C2272 + C62979 + C62979 +
             C154123 * C2282) *
                C153865 * C154074 +
            (C63044 + C63045 + C63046 + C63047) * C153865 * C153722) *
               C154094 -
           ((C63564 + C63565 + C63566 + C63567) * C153865 * C153722 +
            (C62973 * C7665 + C63520 + C63520 + C154123 * C7673 +
             C62971 * C2272 + C63521 + C63521 + C62965 * C2282 + C62969 * C557 +
             C63522 + C63522 + C62964 * C581 + C62967 * C556 + C63523 + C63523 +
             C62963 * C580) *
                C153865 * C154074) *
               C153847) *
              C154164 +
          (((C62967 * C1081 + C64266 + C64266 + C62963 * C1093 +
             C62969 * C1489 + C64267 + C64267 + C62964 * C1499 +
             C62971 * C6161 + C64268 + C64268 + C62965 * C6173 +
             C62973 * C9167 + C64269 + C64269 + C154123 * C9173) *
                C153865 * C154074 +
            (C64294 + C64295 + C64296 + C64297) * C153865 * C153722) *
               C153847 -
           ((C63306 + C63307 + C63308 + C63309) * C153865 * C153722 +
            (C62973 * C6161 + C63262 + C63262 + C154123 * C6173 +
             C62971 * C1489 + C63263 + C63263 + C62965 * C1499 +
             C62969 * C1081 + C63264 + C63264 + C62964 * C1093 + C62967 * C335 +
             C63265 + C63265 + C62963 * C359) *
                C153865 * C154074) *
               C154094) *
              C154165 +
          (((C62967 * C336 + C63266 + C63266 + C62963 * C360 + C62969 * C1920 +
             C63267 + C63267 + C62964 * C1930 + C62971 * C3369 + C63268 +
             C63268 + C62965 * C3377 + C62973 * C6160 + C63269 + C63269 +
             C154123 * C6172) *
                C153865 * C154074 +
            (C63310 + C63311 + C63312 + C63313) * C153865 * C153722) *
               C154094 -
           ((C62973 * C30947 + C65478 + C65478 + C154123 * C30951 +
             C62971 * C6158 + C65479 + C65479 + C62965 * C6170 +
             C62969 * C3370 + C65480 + C65480 + C62964 * C3378 +
             C62967 * C1919 + C65481 + C65481 + C62963 * C1929) *
                C153865 * C153722 +
            (C62973 * C30946 + C65482 + C65482 + C154123 * C30950 +
             C62971 * C6160 + C65483 + C65483 + C62965 * C6172 +
             C62969 * C3369 + C65484 + C65484 + C62964 * C3377 +
             C62967 * C1920 + C65485 + C65485 + C62963 * C1930) *
                C153865 * C154074) *
               C153847) *
              C1629) *
         C153748) /
            (p * q * std::sqrt(p + q));
    d2ee[202] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C14932 * C136 + C14937 + C14937 + C154109 * C152 +
                 C14934 * C556 + C14938 + C14938 + C153969 * C580) *
                    C153865 * C11376 +
                (C14991 + C14992) * C153865 * C11377 + C15005 * C11378 +
                C15006 * C154108) *
                   C153783 * C1251 -
               (C15759 * C154108 + C15760 * C11378 +
                (C15275 + C15276) * C153865 * C11377 +
                (C14934 * C1081 + C15221 + C15221 + C153969 * C1093 +
                 C14932 * C335 + C15222 + C15222 + C154109 * C359) *
                    C153865 * C11376) *
                   C153783 * C153819) *
                  C1253 +
              (((C15276 + C15275) * C153865 * C11376 +
                (C15274 + C15273) * C153865 * C11377 +
                (C15272 + C15271) * C153865 * C11378 +
                (C15765 + C15766) * C153865 * C154108) *
                   C153783 * C153819 -
               (C15007 * C154108 + C15008 * C11378 +
                (C14994 + C14993) * C153865 * C11377 +
                (C14992 + C14991) * C153865 * C11376) *
                   C153783 * C1251) *
                  C1254 +
              ((C15005 * C11376 + C15006 * C11377 +
                (C14998 + C14997) * C153865 * C11378 +
                (C14999 + C15000) * C153865 * C154108) *
                   C153783 * C1251 -
               ((C14934 * C1086 + C15757 + C15757 + C153969 * C1098 +
                 C14932 * C341 + C15758 + C15758 + C154109 * C365) *
                    C153865 * C154108 +
                (C15766 + C15765) * C153865 * C11378 + C15759 * C11377 +
                C15760 * C11376) *
                   C153783 * C153819) *
                  C1255) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((C14932 * C136 + C14937 + C14937 + C154109 * C152 +
                C14934 * C556 + C14938 + C14938 + C153969 * C580) *
                   C153865 * C11376 +
               (C14991 + C14992) * C153865 * C11377 + C15005 * C11378 +
               C15006 * C154108) *
                  C153783 * C1338 -
              (C15759 * C154108 + C15760 * C11378 +
               (C15275 + C15276) * C153865 * C11377 +
               (C14934 * C1081 + C15221 + C15221 + C153969 * C1093 +
                C14932 * C335 + C15222 + C15222 + C154109 * C359) *
                   C153865 * C11376) *
                  C153783 * C1339 +
              ((C14932 * C336 + C15223 + C15223 + C154109 * C360 +
                C14934 * C1920 + C15224 + C15224 + C153969 * C1930) *
                   C153865 * C11376 +
               (C15277 + C15278) * C153865 * C11377 +
               (C15279 + C15280) * C153865 * C11378 +
               (C15281 + C15282) * C153865 * C154108) *
                  C153783 * C1340 -
              ((C14934 * C4171 + C16599 + C16599 + C153969 * C4179 +
                C14932 * C1344 + C16600 + C16600 + C154109 * C1354) *
                   C153865 * C154108 +
               (C14934 * C4170 + C16601 + C16601 + C153969 * C4178 +
                C14932 * C1345 + C16602 + C16602 + C154109 * C1355) *
                   C153865 * C11378 +
               (C14934 * C4169 + C16603 + C16603 + C153969 * C4177 +
                C14932 * C1346 + C16604 + C16604 + C154109 * C1356) *
                   C153865 * C11377 +
               (C14934 * C4168 + C16605 + C16605 + C153969 * C4176 +
                C14932 * C1347 + C16606 + C16606 + C154109 * C1357) *
                   C153865 * C11376) *
                  C153783 * C1341) *
             C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
             C14938 + C14938 + C153969 * C580) *
                C153865 * C11376 +
            (C14991 + C14992) * C153865 * C11377 + C15005 * C11378 +
            C15006 * C154108) *
               C549 -
           (C15969 * C154108 + C15970 * C11378 +
            (C15549 + C15550) * C153865 * C11377 +
            (C14934 * C557 + C15495 + C15495 + C153969 * C581 + C14932 * C556 +
             C15496 + C15496 + C154109 * C580) *
                C153865 * C11376) *
               C550 +
           ((C14932 * C557 + C15497 + C15497 + C154109 * C581 + C14934 * C2272 +
             C15498 + C15498 + C153969 * C2282) *
                C153865 * C11376 +
            (C15551 + C15552) * C153865 * C11377 +
            (C15553 + C15554) * C153865 * C11378 +
            (C15555 + C15556) * C153865 * C154108) *
               C551) *
              C1251 +
          (((C14932 * C1081 + C16235 + C16235 + C154109 * C1093 +
             C14934 * C1489 + C16236 + C16236 + C153969 * C1499) *
                C153865 * C11376 +
            (C16269 + C16270) * C153865 * C11377 +
            (C16271 + C16272) * C153865 * C11378 +
            (C16273 + C16274) * C153865 * C154108) *
               C550 -
           (C15759 * C154108 + C15760 * C11378 +
            (C15275 + C15276) * C153865 * C11377 +
            (C14934 * C1081 + C15221 + C15221 + C153969 * C1093 +
             C14932 * C335 + C15222 + C15222 + C154109 * C359) *
                C153865 * C11376) *
               C549 -
           ((C14934 * C8529 + C16801 + C16801 + C153969 * C8531 +
             C14932 * C1486 + C16802 + C16802 + C154109 * C1496) *
                C153865 * C154108 +
            (C14934 * C6157 + C16803 + C16803 + C153969 * C6169 +
             C14932 * C1487 + C16804 + C16804 + C154109 * C1497) *
                C153865 * C11378 +
            (C14934 * C6159 + C16805 + C16805 + C153969 * C6171 +
             C14932 * C1488 + C16806 + C16806 + C154109 * C1498) *
                C153865 * C11377 +
            (C14934 * C6161 + C16807 + C16807 + C153969 * C6173 +
             C14932 * C1489 + C16808 + C16808 + C154109 * C1499) *
                C153865 * C11376) *
               C551) *
              C153819) *
         C153748) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
              C14938 + C14938 + C153969 * C580) *
                 C24168 +
             (C19164 + C19165) * C24169 + C38471 * C154143) *
                C154074 +
            ((C14991 + C14992) * C24168 + C19130 * C24169 + C19138 * C154143) *
                C153722) *
               C153783 * C1251 -
           ((C38472 * C154143 + C19132 * C24169 + C19133 * C24168) * C153722 +
            ((C20988 + C20987) * C154143 + (C19166 + C19167) * C24169 +
             (C19165 + C19164) * C24168) *
                C154074) *
               C153783 * C153819) *
              C1253 +
          (((C19130 * C24168 + C19138 * C24169 + C38473 * C154143) * C154074 +
            (C18830 * C24168 + C19143 * C24169 + (C19170 + C19171) * C154143) *
                C153722) *
               C153783 * C153819 -
           ((C19131 * C154143 + C15752 * C24169 + (C14994 + C14993) * C24168) *
                C153722 +
            (C19132 * C154143 + C19133 * C24169 + (C14992 + C14991) * C24168) *
                C154074) *
               C153783 * C1251) *
              C1254 +
          (((C15001 * C24168 + C18830 * C24169 + C19143 * C154143) * C154074 +
            (C15002 * C24168 + C19774 * C24169 + (C15281 + C15282) * C154143) *
                C153722) *
               C153783 * C1251 -
           (((C14934 * C4171 + C16599 + C16599 + C153969 * C4179 +
              C14932 * C1344 + C16600 + C16600 + C154109 * C1354) *
                 C154143 +
             (C15282 + C15281) * C24169 + C15751 * C24168) *
                C153722 +
            ((C19171 + C19170) * C154143 + C19131 * C24169 + C15752 * C24168) *
                C154074) *
               C153783 * C153819) *
              C1255)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
             C14938 + C14938 + C153969 * C580) *
                C24168 +
            (C19164 + C19165) * C24169 + C38471 * C154143) *
               C154074 +
           ((C14991 + C14992) * C24168 + C19130 * C24169 + C19138 * C154143) *
               C153722) *
              C153783 * C1338 -
          ((C38472 * C154143 + C19132 * C24169 + C19133 * C24168) * C153722 +
           (C40246 * C154143 + (C19166 + C19167) * C24169 +
            (C19165 + C19164) * C24168) *
               C154074) *
              C153783 * C1339 +
          ((C38471 * C24168 + (C20987 + C20988) * C24169 +
            (C40259 + C40260) * C154143) *
               C154074 +
           (C19138 * C24168 + C38473 * C24169 + (C38482 + C38483) * C154143) *
               C153722) *
              C153783 * C1340 -
          (((C14934 * C28773 + C40251 + C40251 + C153969 * C28777 +
             C14932 * C4575 + C40252 + C40252 + C154109 * C4581) *
                C154143 +
            (C38483 + C38482) * C24169 + C38472 * C24168) *
               C153722 +
           ((C14934 * C28772 + C40253 + C40253 + C153969 * C28776 +
             C14932 * C4576 + C40254 + C40254 + C154109 * C4582) *
                C154143 +
            (C40260 + C40259) * C24169 + C40246 * C24168) *
               C154074) *
              C153783 * C1341) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
              C14938 + C14938 + C153969 * C580) *
                 C24168 +
             (C19164 + C19165) * C24169 + C38471 * C154143) *
                C154074 +
            ((C14991 + C14992) * C24168 + C19130 * C24169 + C19138 * C154143) *
                C153722) *
               C549 -
           ((C39750 * C154143 + C20456 * C24169 + (C15549 + C15550) * C24168) *
                C153722 +
            ((C22276 + C22275) * C154143 + (C20483 + C20484) * C24169 +
             (C14934 * C557 + C15495 + C15495 + C153969 * C581 + C14932 * C556 +
              C15496 + C15496 + C154109 * C580) *
                 C24168) *
                C154074) *
               C550 +
           (((C14932 * C557 + C15497 + C15497 + C154109 * C581 +
              C14934 * C2272 + C15498 + C15498 + C153969 * C2282) *
                 C24168 +
             (C21293 + C21294) * C24169 + (C40563 + C40564) * C154143) *
                C154074 +
            ((C15551 + C15552) * C24168 + (C19478 + C19479) * C24169 +
             (C38782 + C38783) * C154143) *
                C153722) *
               C551) *
              C1251 +
          ((((C20484 + C20483) * C24168 + (C22275 + C22276) * C24169 +
             (C14932 * C4168 + C22270 + C22270 + C154109 * C4176 +
              C14934 * C4811 + C22269 + C22269 + C153969 * C4817) *
                 C154143) *
                C154074 +
            (C20461 * C24168 + C39751 * C24169 + (C39760 + C39761) * C154143) *
                C153722) *
               C550 -
           ((C38472 * C154143 + C19132 * C24169 + C19133 * C24168) * C153722 +
            (C40246 * C154143 + (C19166 + C19167) * C24169 +
             (C19165 + C19164) * C24168) *
                C154074) *
               C549 -
           (((C14934 * C31684 + C40555 + C40555 + C153969 * C31686 +
              C14932 * C4810 + C40556 + C40556 + C154109 * C4816) *
                 C154143 +
             (C38783 + C38782) * C24169 + (C19479 + C19478) * C24168) *
                C153722 +
            ((C14934 * C29881 + C40557 + C40557 + C153969 * C29885 +
              C14932 * C4811 + C40558 + C40558 + C154109 * C4817) *
                 C154143 +
             (C40564 + C40563) * C24169 + (C21294 + C21293) * C24168) *
                C154074) *
               C551) *
              C153819) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C62967 * C136 + C62976 + C62976 + C62963 * C152 + C62969 * C556 +
             C62977 + C62977 + C62964 * C580 + C62971 * C557 + C62978 + C62978 +
             C62965 * C581 + C62973 * C2272 + C62979 + C62979 +
             C154123 * C2282) *
                C153865 * C154074 +
            (C63044 + C63045 + C63046 + C63047) * C153865 * C153722) *
               C153783 * C1251 -
           ((C63306 + C63307 + C63308 + C63309) * C153865 * C153722 +
            (C62973 * C6161 + C63262 + C63262 + C154123 * C6173 +
             C62971 * C1489 + C63263 + C63263 + C62965 * C1499 +
             C62969 * C1081 + C63264 + C63264 + C62964 * C1093 + C62967 * C335 +
             C63265 + C63265 + C62963 * C359) *
                C153865 * C154074) *
               C153783 * C153819) *
              C1253 +
          (((C63309 + C63308 + C63307 + C63306) * C153865 * C154074 +
            (C63786 + C63787 + C63788 + C63789) * C153865 * C153722) *
               C153783 * C153819 -
           ((C63048 + C63049 + C63050 + C63051) * C153865 * C153722 +
            (C63047 + C63046 + C63045 + C63044) * C153865 * C154074) *
               C153783 * C1251) *
              C1254 +
          (((C63051 + C63050 + C63049 + C63048) * C153865 * C154074 +
            (C63052 + C63053 + C63054 + C63055) * C153865 * C153722) *
               C153783 * C1251 -
           ((C62973 * C8529 + C63774 + C63774 + C154123 * C8531 +
             C62971 * C1486 + C63775 + C63775 + C62965 * C1496 +
             C62969 * C1084 + C63776 + C63776 + C62964 * C1096 + C62967 * C332 +
             C63777 + C63777 + C62963 * C356) *
                C153865 * C153722 +
            (C63789 + C63788 + C63787 + C63786) * C153865 * C154074) *
               C153783 * C153819) *
              C1255)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C62967 * C136 + C62976 + C62976 + C62963 * C152 + C62969 * C556 +
            C62977 + C62977 + C62964 * C580 + C62971 * C557 + C62978 + C62978 +
            C62965 * C581 + C62973 * C2272 + C62979 + C62979 +
            C154123 * C2282) *
               C153865 * C154074 +
           (C63044 + C63045 + C63046 + C63047) * C153865 * C153722) *
              C153783 * C1338 -
          ((C63306 + C63307 + C63308 + C63309) * C153865 * C153722 +
           (C62973 * C6161 + C63262 + C63262 + C154123 * C6173 +
            C62971 * C1489 + C63263 + C63263 + C62965 * C1499 + C62969 * C1081 +
            C63264 + C63264 + C62964 * C1093 + C62967 * C335 + C63265 + C63265 +
            C62963 * C359) *
               C153865 * C154074) *
              C153783 * C1339 +
          ((C62967 * C336 + C63266 + C63266 + C62963 * C360 + C62969 * C1920 +
            C63267 + C63267 + C62964 * C1930 + C62971 * C3369 + C63268 +
            C63268 + C62965 * C3377 + C62973 * C6160 + C63269 + C63269 +
            C154123 * C6172) *
               C153865 * C154074 +
           (C63310 + C63311 + C63312 + C63313) * C153865 * C153722) *
              C153783 * C1340 -
          ((C62973 * C31684 + C64622 + C64622 + C154123 * C31686 +
            C62971 * C4810 + C64623 + C64623 + C62965 * C4816 + C62969 * C4169 +
            C64624 + C64624 + C62964 * C4177 + C62967 * C1346 + C64625 +
            C64625 + C62963 * C1356) *
               C153865 * C153722 +
           (C62973 * C29881 + C64626 + C64626 + C154123 * C29885 +
            C62971 * C4811 + C64627 + C64627 + C62965 * C4817 + C62969 * C4168 +
            C64628 + C64628 + C62964 * C4176 + C62967 * C1347 + C64629 +
            C64629 + C62963 * C1357) *
               C153865 * C154074) *
              C153783 * C1341) *
         C153748) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C62967 * C136 + C62976 + C62976 + C62963 * C152 + C62969 * C556 +
             C62977 + C62977 + C62964 * C580 + C62971 * C557 + C62978 + C62978 +
             C62965 * C581 + C62973 * C2272 + C62979 + C62979 +
             C154123 * C2282) *
                C153865 * C154074 +
            (C63044 + C63045 + C63046 + C63047) * C153865 * C153722) *
               C549 -
           ((C63564 + C63565 + C63566 + C63567) * C153865 * C153722 +
            (C62973 * C7665 + C63520 + C63520 + C154123 * C7673 +
             C62971 * C2272 + C63521 + C63521 + C62965 * C2282 + C62969 * C557 +
             C63522 + C63522 + C62964 * C581 + C62967 * C556 + C63523 + C63523 +
             C62963 * C580) *
                C153865 * C154074) *
               C550 +
           ((C62967 * C557 + C63524 + C63524 + C62963 * C581 + C62969 * C2272 +
             C63525 + C63525 + C62964 * C2282 + C62971 * C7665 + C63526 +
             C63526 + C62965 * C7673 + C62973 * C10502 + C63527 + C63527 +
             C154123 * C10508) *
                C153865 * C154074 +
            (C63568 + C63569 + C63570 + C63571) * C153865 * C153722) *
               C551) *
              C1251 +
          (((C62967 * C1081 + C64266 + C64266 + C62963 * C1093 +
             C62969 * C1489 + C64267 + C64267 + C62964 * C1499 +
             C62971 * C6161 + C64268 + C64268 + C62965 * C6173 +
             C62973 * C9167 + C64269 + C64269 + C154123 * C9173) *
                C153865 * C154074 +
            (C64294 + C64295 + C64296 + C64297) * C153865 * C153722) *
               C550 -
           ((C63306 + C63307 + C63308 + C63309) * C153865 * C153722 +
            (C62973 * C6161 + C63262 + C63262 + C154123 * C6173 +
             C62971 * C1489 + C63263 + C63263 + C62965 * C1499 +
             C62969 * C1081 + C63264 + C63264 + C62964 * C1093 + C62967 * C335 +
             C63265 + C63265 + C62963 * C359) *
                C153865 * C154074) *
               C549 -
           ((C62973 * C56080 + C64824 + C64824 + C154123 * C56082 +
             C62971 * C9166 + C64825 + C64825 + C62965 * C9172 +
             C62969 * C6159 + C64826 + C64826 + C62964 * C6171 +
             C62967 * C1488 + C64827 + C64827 + C62963 * C1498) *
                C153865 * C153722 +
            (C62973 * C33705 + C64828 + C64828 + C154123 * C33709 +
             C62971 * C9167 + C64829 + C64829 + C62965 * C9173 +
             C62969 * C6161 + C64830 + C64830 + C62964 * C6173 +
             C62967 * C1489 + C64831 + C64831 + C62963 * C1499) *
                C153865 * C154074) *
               C551) *
              C153819) *
         C153748) /
            (p * q * std::sqrt(p + q));
    d2ee[203] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C14932 * C136 + C14937 + C14937 + C154109 * C152 +
               C14934 * C556 + C14938 + C14938 + C153969 * C580) *
                  C24168 +
              (C19164 + C19165) * C24169 + C38471 * C154143) *
                 C154074 +
             ((C14991 + C14992) * C24168 + C19130 * C24169 + C19138 * C154143) *
                 C153722) *
                C154094 -
            ((C39750 * C154143 + C20456 * C24169 + (C15549 + C15550) * C24168) *
                 C153722 +
             ((C22276 + C22275) * C154143 + (C20483 + C20484) * C24169 +
              (C14934 * C557 + C15495 + C15495 + C153969 * C581 +
               C14932 * C556 + C15496 + C15496 + C154109 * C580) *
                  C24168) *
                 C154074) *
                C153847) *
               C1251 +
           ((((C20484 + C20483) * C24168 + (C22275 + C22276) * C24169 +
              (C14932 * C4168 + C22270 + C22270 + C154109 * C4176 +
               C14934 * C4811 + C22269 + C22269 + C153969 * C4817) *
                  C154143) *
                 C154074 +
             (C20461 * C24168 + C39751 * C24169 + (C39760 + C39761) * C154143) *
                 C153722) *
                C153847 -
            ((C38472 * C154143 + C19132 * C24169 + C19133 * C24168) * C153722 +
             (C40246 * C154143 + (C19166 + C19167) * C24169 +
              (C19165 + C19164) * C24168) *
                 C154074) *
                C154094) *
               C153819) *
              C154085 +
          (((((C15550 + C15549) * C24168 + C20461 * C24169 + C39751 * C154143) *
                 C154074 +
             ((C15548 + C15547) * C24168 + C20466 * C24169 +
              (C20487 + C20488) * C154143) *
                 C153722) *
                C153847 -
            ((C19131 * C154143 + C15752 * C24169 + (C14994 + C14993) * C24168) *
                 C153722 +
             (C19132 * C154143 + C19133 * C24169 + (C14992 + C14991) * C24168) *
                 C154074) *
                C154094) *
               C1251 +
           (((C19130 * C24168 + C19138 * C24169 + C38473 * C154143) * C154074 +
             (C18830 * C24168 + C19143 * C24169 + (C19170 + C19171) * C154143) *
                 C153722) *
                C154094 -
            (((C14934 * C4809 + C22265 + C22265 + C153969 * C4815 +
               C14932 * C4170 + C22266 + C22266 + C154109 * C4178) *
                  C154143 +
              (C20488 + C20487) * C24169 + C20066 * C24168) *
                 C153722 +
             ((C39761 + C39760) * C154143 + C39750 * C24169 + C20456 * C24168) *
                 C154074) *
                C153847) *
               C153819) *
              C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
              C14938 + C14938 + C153969 * C580) *
                 C153865 * C11376 +
             (C14991 + C14992) * C153865 * C11377 + C15005 * C11378 +
             C15006 * C154108) *
                C154094 -
            (C15969 * C154108 + C15970 * C11378 +
             (C15549 + C15550) * C153865 * C11377 +
             (C14934 * C557 + C15495 + C15495 + C153969 * C581 + C14932 * C556 +
              C15496 + C15496 + C154109 * C580) *
                 C153865 * C11376) *
                C153847) *
               C1251 +
           (((C14932 * C1081 + C16235 + C16235 + C154109 * C1093 +
              C14934 * C1489 + C16236 + C16236 + C153969 * C1499) *
                 C153865 * C11376 +
             (C16269 + C16270) * C153865 * C11377 +
             (C16271 + C16272) * C153865 * C11378 +
             (C16273 + C16274) * C153865 * C154108) *
                C153847 -
            (C15759 * C154108 + C15760 * C11378 +
             (C15275 + C15276) * C153865 * C11377 +
             (C14934 * C1081 + C15221 + C15221 + C153969 * C1093 +
              C14932 * C335 + C15222 + C15222 + C154109 * C359) *
                 C153865 * C11376) *
                C154094) *
               C153819) *
              C154085 +
          ((((C15550 + C15549) * C153865 * C11376 +
             (C15548 + C15547) * C153865 * C11377 +
             (C15546 + C15545) * C153865 * C11378 +
             (C15975 + C15976) * C153865 * C154108) *
                C153847 -
            (C15007 * C154108 + C15008 * C11378 +
             (C14994 + C14993) * C153865 * C11377 +
             (C14992 + C14991) * C153865 * C11376) *
                C154094) *
               C1251 +
           (((C15276 + C15275) * C153865 * C11376 +
             (C15274 + C15273) * C153865 * C11377 +
             (C15272 + C15271) * C153865 * C11378 +
             (C15765 + C15766) * C153865 * C154108) *
                C154094 -
            ((C14934 * C1485 + C16255 + C16255 + C153969 * C1495 +
              C14932 * C1085 + C16256 + C16256 + C154109 * C1097) *
                 C153865 * C154108 +
             (C16274 + C16273) * C153865 * C11378 +
             (C16272 + C16271) * C153865 * C11377 +
             (C16270 + C16269) * C153865 * C11376) *
                C153847) *
               C153819) *
              C153754)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C62967 * C136 + C62976 + C62976 + C62963 * C152 + C62969 * C556 +
              C62977 + C62977 + C62964 * C580 + C62971 * C557 + C62978 +
              C62978 + C62965 * C581 + C62973 * C2272 + C62979 + C62979 +
              C154123 * C2282) *
                 C153865 * C154074 +
             (C63044 + C63045 + C63046 + C63047) * C153865 * C153722) *
                C154094 -
            ((C63564 + C63565 + C63566 + C63567) * C153865 * C153722 +
             (C62973 * C7665 + C63520 + C63520 + C154123 * C7673 +
              C62971 * C2272 + C63521 + C63521 + C62965 * C2282 +
              C62969 * C557 + C63522 + C63522 + C62964 * C581 + C62967 * C556 +
              C63523 + C63523 + C62963 * C580) *
                 C153865 * C154074) *
                C153847) *
               C1251 +
           (((C62967 * C1081 + C64266 + C64266 + C62963 * C1093 +
              C62969 * C1489 + C64267 + C64267 + C62964 * C1499 +
              C62971 * C6161 + C64268 + C64268 + C62965 * C6173 +
              C62973 * C9167 + C64269 + C64269 + C154123 * C9173) *
                 C153865 * C154074 +
             (C64294 + C64295 + C64296 + C64297) * C153865 * C153722) *
                C153847 -
            ((C63306 + C63307 + C63308 + C63309) * C153865 * C153722 +
             (C62973 * C6161 + C63262 + C63262 + C154123 * C6173 +
              C62971 * C1489 + C63263 + C63263 + C62965 * C1499 +
              C62969 * C1081 + C63264 + C63264 + C62964 * C1093 +
              C62967 * C335 + C63265 + C63265 + C62963 * C359) *
                 C153865 * C154074) *
                C154094) *
               C153819) *
              C154085 +
          ((((C63567 + C63566 + C63565 + C63564) * C153865 * C154074 +
             (C64004 + C64005 + C64006 + C64007) * C153865 * C153722) *
                C153847 -
            ((C63048 + C63049 + C63050 + C63051) * C153865 * C153722 +
             (C63047 + C63046 + C63045 + C63044) * C153865 * C154074) *
                C154094) *
               C1251 +
           (((C63309 + C63308 + C63307 + C63306) * C153865 * C154074 +
             (C63786 + C63787 + C63788 + C63789) * C153865 * C153722) *
                C154094 -
            ((C62973 * C9165 + C64282 + C64282 + C154123 * C9171 +
              C62971 * C6157 + C64283 + C64283 + C62965 * C6169 +
              C62969 * C1487 + C64284 + C64284 + C62964 * C1497 +
              C62967 * C1083 + C64285 + C64285 + C62963 * C1095) *
                 C153865 * C153722 +
             (C64297 + C64296 + C64295 + C64294) * C153865 * C154074) *
                C153847) *
               C153819) *
              C153754)) /
            (p * q * std::sqrt(p + q));
    d2ee[204] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
            C14938 + C14938 + C153969 * C580) *
               C153865 * C11376 +
           (C14991 + C14992) * C153865 * C11377 + C15005 * C11378 +
           C15006 * C154108) *
              C153783 * C1338 -
          (C15759 * C154108 + C15760 * C11378 +
           (C15275 + C15276) * C153865 * C11377 +
           (C14934 * C1081 + C15221 + C15221 + C153969 * C1093 + C14932 * C335 +
            C15222 + C15222 + C154109 * C359) *
               C153865 * C11376) *
              C153783 * C1339 +
          ((C14932 * C336 + C15223 + C15223 + C154109 * C360 + C14934 * C1920 +
            C15224 + C15224 + C153969 * C1930) *
               C153865 * C11376 +
           (C15277 + C15278) * C153865 * C11377 +
           (C15279 + C15280) * C153865 * C11378 +
           (C15281 + C15282) * C153865 * C154108) *
              C153783 * C1340 -
          ((C14934 * C4171 + C16599 + C16599 + C153969 * C4179 +
            C14932 * C1344 + C16600 + C16600 + C154109 * C1354) *
               C153865 * C154108 +
           (C14934 * C4170 + C16601 + C16601 + C153969 * C4178 +
            C14932 * C1345 + C16602 + C16602 + C154109 * C1355) *
               C153865 * C11378 +
           (C14934 * C4169 + C16603 + C16603 + C153969 * C4177 +
            C14932 * C1346 + C16604 + C16604 + C154109 * C1356) *
               C153865 * C11377 +
           (C14934 * C4168 + C16605 + C16605 + C153969 * C4176 +
            C14932 * C1347 + C16606 + C16606 + C154109 * C1357) *
               C153865 * C11376) *
              C153783 * C1341) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
             C14938 + C14938 + C153969 * C580) *
                C153865 * C11376 +
            (C14991 + C14992) * C153865 * C11377 + C15005 * C11378 +
            C15006 * C154108) *
               C153783 * C1251 -
           (C15759 * C154108 + C15760 * C11378 +
            (C15275 + C15276) * C153865 * C11377 +
            (C14934 * C1081 + C15221 + C15221 + C153969 * C1093 +
             C14932 * C335 + C15222 + C15222 + C154109 * C359) *
                C153865 * C11376) *
               C153783 * C153819) *
              C1253 +
          (((C15276 + C15275) * C153865 * C11376 +
            (C15274 + C15273) * C153865 * C11377 +
            (C15272 + C15271) * C153865 * C11378 +
            (C15765 + C15766) * C153865 * C154108) *
               C153783 * C153819 -
           (C15007 * C154108 + C15008 * C11378 +
            (C14994 + C14993) * C153865 * C11377 +
            (C14992 + C14991) * C153865 * C11376) *
               C153783 * C1251) *
              C1254 +
          ((C15005 * C11376 + C15006 * C11377 +
            (C14998 + C14997) * C153865 * C11378 +
            (C14999 + C15000) * C153865 * C154108) *
               C153783 * C1251 -
           ((C14934 * C1086 + C15757 + C15757 + C153969 * C1098 +
             C14932 * C341 + C15758 + C15758 + C154109 * C365) *
                C153865 * C154108 +
            (C15766 + C15765) * C153865 * C11378 + C15759 * C11377 +
            C15760 * C11376) *
               C153783 * C153819) *
              C1255)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
              C14938 + C14938 + C153969 * C580) *
                 C24168 +
             (C19164 + C19165) * C24169 + C38471 * C154143) *
                C154074 +
            ((C14991 + C14992) * C24168 + C19130 * C24169 + C19138 * C154143) *
                C153722) *
               C153783 * C1251 -
           ((C38472 * C154143 + C19132 * C24169 + C19133 * C24168) * C153722 +
            ((C20988 + C20987) * C154143 + (C19166 + C19167) * C24169 +
             (C19165 + C19164) * C24168) *
                C154074) *
               C153783 * C153819) *
              C1253 +
          (((C19130 * C24168 + C19138 * C24169 + C38473 * C154143) * C154074 +
            (C18830 * C24168 + C19143 * C24169 + (C19170 + C19171) * C154143) *
                C153722) *
               C153783 * C153819 -
           ((C19131 * C154143 + C15752 * C24169 + (C14994 + C14993) * C24168) *
                C153722 +
            (C19132 * C154143 + C19133 * C24169 + (C14992 + C14991) * C24168) *
                C154074) *
               C153783 * C1251) *
              C1254 +
          (((C15001 * C24168 + C18830 * C24169 + C19143 * C154143) * C154074 +
            (C15002 * C24168 + C19774 * C24169 + (C15281 + C15282) * C154143) *
                C153722) *
               C153783 * C1251 -
           (((C14934 * C4171 + C16599 + C16599 + C153969 * C4179 +
              C14932 * C1344 + C16600 + C16600 + C154109 * C1354) *
                 C154143 +
             (C15282 + C15281) * C24169 + C15751 * C24168) *
                C153722 +
            ((C19171 + C19170) * C154143 + C19131 * C24169 + C15752 * C24168) *
                C154074) *
               C153783 * C153819) *
              C1255)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
             C14938 + C14938 + C153969 * C580) *
                C24168 +
            (C19164 + C19165) * C24169 + C38471 * C154143) *
               C154074 +
           ((C14991 + C14992) * C24168 + C19130 * C24169 + C19138 * C154143) *
               C153722) *
              C153783 * C1338 -
          ((C38472 * C154143 + C19132 * C24169 + C19133 * C24168) * C153722 +
           (C40246 * C154143 + (C19166 + C19167) * C24169 +
            (C19165 + C19164) * C24168) *
               C154074) *
              C153783 * C1339 +
          ((C38471 * C24168 + (C20987 + C20988) * C24169 +
            (C40259 + C40260) * C154143) *
               C154074 +
           (C19138 * C24168 + C38473 * C24169 + (C38482 + C38483) * C154143) *
               C153722) *
              C153783 * C1340 -
          (((C14934 * C28773 + C40251 + C40251 + C153969 * C28777 +
             C14932 * C4575 + C40252 + C40252 + C154109 * C4581) *
                C154143 +
            (C38483 + C38482) * C24169 + C38472 * C24168) *
               C153722 +
           ((C14934 * C28772 + C40253 + C40253 + C153969 * C28776 +
             C14932 * C4576 + C40254 + C40254 + C154109 * C4582) *
                C154143 +
            (C40260 + C40259) * C24169 + C40246 * C24168) *
               C154074) *
              C153783 * C1341) *
         C153748) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C62967 * C136 + C62976 + C62976 + C62963 * C152 + C62969 * C556 +
             C62977 + C62977 + C62964 * C580 + C62971 * C557 + C62978 + C62978 +
             C62965 * C581 + C62973 * C2272 + C62979 + C62979 +
             C154123 * C2282) *
                C153865 * C154074 +
            (C63044 + C63045 + C63046 + C63047) * C153865 * C153722) *
               C153783 * C1251 -
           ((C63306 + C63307 + C63308 + C63309) * C153865 * C153722 +
            (C62973 * C6161 + C63262 + C63262 + C154123 * C6173 +
             C62971 * C1489 + C63263 + C63263 + C62965 * C1499 +
             C62969 * C1081 + C63264 + C63264 + C62964 * C1093 + C62967 * C335 +
             C63265 + C63265 + C62963 * C359) *
                C153865 * C154074) *
               C153783 * C153819) *
              C1253 +
          (((C63309 + C63308 + C63307 + C63306) * C153865 * C154074 +
            (C63786 + C63787 + C63788 + C63789) * C153865 * C153722) *
               C153783 * C153819 -
           ((C63048 + C63049 + C63050 + C63051) * C153865 * C153722 +
            (C63047 + C63046 + C63045 + C63044) * C153865 * C154074) *
               C153783 * C1251) *
              C1254 +
          (((C63051 + C63050 + C63049 + C63048) * C153865 * C154074 +
            (C63052 + C63053 + C63054 + C63055) * C153865 * C153722) *
               C153783 * C1251 -
           ((C62973 * C8529 + C63774 + C63774 + C154123 * C8531 +
             C62971 * C1486 + C63775 + C63775 + C62965 * C1496 +
             C62969 * C1084 + C63776 + C63776 + C62964 * C1096 + C62967 * C332 +
             C63777 + C63777 + C62963 * C356) *
                C153865 * C153722 +
            (C63789 + C63788 + C63787 + C63786) * C153865 * C154074) *
               C153783 * C153819) *
              C1255)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C62967 * C136 + C62976 + C62976 + C62963 * C152 + C62969 * C556 +
            C62977 + C62977 + C62964 * C580 + C62971 * C557 + C62978 + C62978 +
            C62965 * C581 + C62973 * C2272 + C62979 + C62979 +
            C154123 * C2282) *
               C153865 * C154074 +
           (C63044 + C63045 + C63046 + C63047) * C153865 * C153722) *
              C153783 * C1338 -
          ((C63306 + C63307 + C63308 + C63309) * C153865 * C153722 +
           (C62973 * C6161 + C63262 + C63262 + C154123 * C6173 +
            C62971 * C1489 + C63263 + C63263 + C62965 * C1499 + C62969 * C1081 +
            C63264 + C63264 + C62964 * C1093 + C62967 * C335 + C63265 + C63265 +
            C62963 * C359) *
               C153865 * C154074) *
              C153783 * C1339 +
          ((C62967 * C336 + C63266 + C63266 + C62963 * C360 + C62969 * C1920 +
            C63267 + C63267 + C62964 * C1930 + C62971 * C3369 + C63268 +
            C63268 + C62965 * C3377 + C62973 * C6160 + C63269 + C63269 +
            C154123 * C6172) *
               C153865 * C154074 +
           (C63310 + C63311 + C63312 + C63313) * C153865 * C153722) *
              C153783 * C1340 -
          ((C62973 * C31684 + C64622 + C64622 + C154123 * C31686 +
            C62971 * C4810 + C64623 + C64623 + C62965 * C4816 + C62969 * C4169 +
            C64624 + C64624 + C62964 * C4177 + C62967 * C1346 + C64625 +
            C64625 + C62963 * C1356) *
               C153865 * C153722 +
           (C62973 * C29881 + C64626 + C64626 + C154123 * C29885 +
            C62971 * C4811 + C64627 + C64627 + C62965 * C4817 + C62969 * C4168 +
            C64628 + C64628 + C62964 * C4176 + C62967 * C1347 + C64629 +
            C64629 + C62963 * C1357) *
               C153865 * C154074) *
              C153783 * C1341) *
         C153748) /
            (p * q * std::sqrt(p + q));
    d2ee[205] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C14932 * C136 + C14937 + C14937 + C154109 * C152 +
               C14934 * C556 + C14938 + C14938 + C153969 * C580) *
                  C24168 +
              (C19164 + C19165) * C24169 + C38471 * C154143) *
                 C154074 +
             ((C14991 + C14992) * C24168 + C19130 * C24169 + C19138 * C154143) *
                 C153722) *
                C2058 -
            ((C39750 * C154143 + C20456 * C24169 + (C15549 + C15550) * C24168) *
                 C153722 +
             (C41531 * C154143 + (C20483 + C20484) * C24169 +
              (C14934 * C557 + C15495 + C15495 + C153969 * C581 +
               C14932 * C556 + C15496 + C15496 + C154109 * C580) *
                  C24168) *
                 C154074) *
                C153847) *
               C154093 +
           ((((C20484 + C20483) * C24168 + (C22275 + C22276) * C24169 +
              (C41544 + C41545) * C154143) *
                 C154074 +
             (C20461 * C24168 + C39751 * C24169 + (C39760 + C39761) * C154143) *
                 C153722) *
                C153847 -
            ((C38472 * C154143 + C19132 * C24169 + C19133 * C24168) * C153722 +
             (C40246 * C154143 + (C19166 + C19167) * C24169 +
              (C19165 + C19164) * C24168) *
                 C154074) *
                C2058) *
               C153819) *
              C154085 +
          (((((C15550 + C15549) * C24168 + C20461 * C24169 + C39751 * C154143) *
                 C154074 +
             ((C15548 + C15547) * C24168 + C20466 * C24169 +
              (C20487 + C20488) * C154143) *
                 C153722) *
                C153847 -
            ((C19131 * C154143 + C15752 * C24169 + (C14994 + C14993) * C24168) *
                 C153722 +
             (C19132 * C154143 + C19133 * C24169 + (C14992 + C14991) * C24168) *
                 C154074) *
                C2058) *
               C154093 +
           (((C19130 * C24168 + C19138 * C24169 + C38473 * C154143) * C154074 +
             (C18830 * C24168 + C19143 * C24169 + (C19170 + C19171) * C154143) *
                 C153722) *
                C2058 -
            (((C14934 * C4809 + C22265 + C22265 + C153969 * C4815 +
               C14932 * C4170 + C22266 + C22266 + C154109 * C4178) *
                  C154143 +
              (C20488 + C20487) * C24169 + C20066 * C24168) *
                 C153722 +
             ((C39761 + C39760) * C154143 + C39750 * C24169 + C20456 * C24168) *
                 C154074) *
                C153847) *
               C153819) *
              C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
              C14938 + C14938 + C153969 * C580) *
                 C153865 * C11376 +
             (C14991 + C14992) * C153865 * C11377 + C15005 * C11378 +
             C15006 * C154108) *
                C2058 -
            (C15969 * C154108 + C15970 * C11378 +
             (C15549 + C15550) * C153865 * C11377 +
             (C14934 * C557 + C15495 + C15495 + C153969 * C581 + C14932 * C556 +
              C15496 + C15496 + C154109 * C580) *
                 C153865 * C11376) *
                C153847) *
               C154093 +
           (((C14932 * C1081 + C16235 + C16235 + C154109 * C1093 +
              C14934 * C1489 + C16236 + C16236 + C153969 * C1499) *
                 C153865 * C11376 +
             (C16269 + C16270) * C153865 * C11377 +
             (C16271 + C16272) * C153865 * C11378 +
             (C16273 + C16274) * C153865 * C154108) *
                C153847 -
            (C15759 * C154108 + C15760 * C11378 +
             (C15275 + C15276) * C153865 * C11377 +
             (C14934 * C1081 + C15221 + C15221 + C153969 * C1093 +
              C14932 * C335 + C15222 + C15222 + C154109 * C359) *
                 C153865 * C11376) *
                C2058) *
               C153819) *
              C154085 +
          ((((C15550 + C15549) * C153865 * C11376 +
             (C15548 + C15547) * C153865 * C11377 +
             (C15546 + C15545) * C153865 * C11378 +
             (C15975 + C15976) * C153865 * C154108) *
                C153847 -
            (C15007 * C154108 + C15008 * C11378 +
             (C14994 + C14993) * C153865 * C11377 +
             (C14992 + C14991) * C153865 * C11376) *
                C2058) *
               C154093 +
           (((C15276 + C15275) * C153865 * C11376 +
             (C15274 + C15273) * C153865 * C11377 +
             (C15272 + C15271) * C153865 * C11378 +
             (C15765 + C15766) * C153865 * C154108) *
                C2058 -
            ((C14934 * C1485 + C16255 + C16255 + C153969 * C1495 +
              C14932 * C1085 + C16256 + C16256 + C154109 * C1097) *
                 C153865 * C154108 +
             (C16274 + C16273) * C153865 * C11378 +
             (C16272 + C16271) * C153865 * C11377 +
             (C16270 + C16269) * C153865 * C11376) *
                C153847) *
               C153819) *
              C153754)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C62967 * C136 + C62976 + C62976 + C62963 * C152 + C62969 * C556 +
              C62977 + C62977 + C62964 * C580 + C62971 * C557 + C62978 +
              C62978 + C62965 * C581 + C62973 * C2272 + C62979 + C62979 +
              C154123 * C2282) *
                 C153865 * C154074 +
             (C63044 + C63045 + C63046 + C63047) * C153865 * C153722) *
                C2058 -
            ((C63564 + C63565 + C63566 + C63567) * C153865 * C153722 +
             (C62973 * C7665 + C63520 + C63520 + C154123 * C7673 +
              C62971 * C2272 + C63521 + C63521 + C62965 * C2282 +
              C62969 * C557 + C63522 + C63522 + C62964 * C581 + C62967 * C556 +
              C63523 + C63523 + C62963 * C580) *
                 C153865 * C154074) *
                C153847) *
               C154093 +
           (((C62967 * C1081 + C64266 + C64266 + C62963 * C1093 +
              C62969 * C1489 + C64267 + C64267 + C62964 * C1499 +
              C62971 * C6161 + C64268 + C64268 + C62965 * C6173 +
              C62973 * C9167 + C64269 + C64269 + C154123 * C9173) *
                 C153865 * C154074 +
             (C64294 + C64295 + C64296 + C64297) * C153865 * C153722) *
                C153847 -
            ((C63306 + C63307 + C63308 + C63309) * C153865 * C153722 +
             (C62973 * C6161 + C63262 + C63262 + C154123 * C6173 +
              C62971 * C1489 + C63263 + C63263 + C62965 * C1499 +
              C62969 * C1081 + C63264 + C63264 + C62964 * C1093 +
              C62967 * C335 + C63265 + C63265 + C62963 * C359) *
                 C153865 * C154074) *
                C2058) *
               C153819) *
              C154085 +
          ((((C63567 + C63566 + C63565 + C63564) * C153865 * C154074 +
             (C64004 + C64005 + C64006 + C64007) * C153865 * C153722) *
                C153847 -
            ((C63048 + C63049 + C63050 + C63051) * C153865 * C153722 +
             (C63047 + C63046 + C63045 + C63044) * C153865 * C154074) *
                C2058) *
               C154093 +
           (((C63309 + C63308 + C63307 + C63306) * C153865 * C154074 +
             (C63786 + C63787 + C63788 + C63789) * C153865 * C153722) *
                C2058 -
            ((C62973 * C9165 + C64282 + C64282 + C154123 * C9171 +
              C62971 * C6157 + C64283 + C64283 + C62965 * C6169 +
              C62969 * C1487 + C64284 + C64284 + C62964 * C1497 +
              C62967 * C1083 + C64285 + C64285 + C62963 * C1095) *
                 C153865 * C153722 +
             (C64297 + C64296 + C64295 + C64294) * C153865 * C154074) *
                C153847) *
               C153819) *
              C153754)) /
            (p * q * std::sqrt(p + q));
    d2ee[206] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
              C14938 + C14938 + C153969 * C580) *
                 C24168 +
             (C19164 + C19165) * C24169 + C38471 * C154143) *
                C154074 +
            ((C14991 + C14992) * C24168 + C19130 * C24169 + C19138 * C154143) *
                C153722) *
               C154166 -
           ((C39750 * C154143 + C20456 * C24169 + (C15549 + C15550) * C24168) *
                C153722 +
            (C41531 * C154143 + (C20483 + C20484) * C24169 +
             (C14934 * C557 + C15495 + C15495 + C153969 * C581 + C14932 * C556 +
              C15496 + C15496 + C154109 * C580) *
                 C24168) *
                C154074) *
               C154167 +
           (((C14932 * C557 + C15497 + C15497 + C154109 * C581 +
              C14934 * C2272 + C15498 + C15498 + C153969 * C2282) *
                 C24168 +
             (C21293 + C21294) * C24169 + (C40563 + C40564) * C154143) *
                C154074 +
            ((C15551 + C15552) * C24168 + (C19478 + C19479) * C24169 +
             (C38782 + C38783) * C154143) *
                C153722) *
               C2574) *
              C154093 +
          ((((C20484 + C20483) * C24168 + (C22275 + C22276) * C24169 +
             (C41544 + C41545) * C154143) *
                C154074 +
            (C20461 * C24168 + C39751 * C24169 + (C39760 + C39761) * C154143) *
                C153722) *
               C154167 -
           ((C38472 * C154143 + C19132 * C24169 + C19133 * C24168) * C153722 +
            (C40246 * C154143 + (C19166 + C19167) * C24169 +
             (C19165 + C19164) * C24168) *
                C154074) *
               C154166 -
           (((C14934 * C31684 + C40555 + C40555 + C153969 * C31686 +
              C14932 * C4810 + C40556 + C40556 + C154109 * C4816) *
                 C154143 +
             (C38783 + C38782) * C24169 + (C19479 + C19478) * C24168) *
                C153722 +
            ((C14934 * C29881 + C40557 + C40557 + C153969 * C29885 +
              C14932 * C4811 + C40558 + C40558 + C154109 * C4817) *
                 C154143 +
             (C40564 + C40563) * C24169 + (C21294 + C21293) * C24168) *
                C154074) *
               C2574) *
              C153819) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
             C14938 + C14938 + C153969 * C580) *
                C153865 * C11376 +
            (C14991 + C14992) * C153865 * C11377 + C15005 * C11378 +
            C15006 * C154108) *
               C154166 -
           (C15969 * C154108 + C15970 * C11378 +
            (C15549 + C15550) * C153865 * C11377 +
            (C14934 * C557 + C15495 + C15495 + C153969 * C581 + C14932 * C556 +
             C15496 + C15496 + C154109 * C580) *
                C153865 * C11376) *
               C154167 +
           ((C14932 * C557 + C15497 + C15497 + C154109 * C581 + C14934 * C2272 +
             C15498 + C15498 + C153969 * C2282) *
                C153865 * C11376 +
            (C15551 + C15552) * C153865 * C11377 +
            (C15553 + C15554) * C153865 * C11378 +
            (C15555 + C15556) * C153865 * C154108) *
               C2574) *
              C154093 +
          (((C14932 * C1081 + C16235 + C16235 + C154109 * C1093 +
             C14934 * C1489 + C16236 + C16236 + C153969 * C1499) *
                C153865 * C11376 +
            (C16269 + C16270) * C153865 * C11377 +
            (C16271 + C16272) * C153865 * C11378 +
            (C16273 + C16274) * C153865 * C154108) *
               C154167 -
           (C15759 * C154108 + C15760 * C11378 +
            (C15275 + C15276) * C153865 * C11377 +
            (C14934 * C1081 + C15221 + C15221 + C153969 * C1093 +
             C14932 * C335 + C15222 + C15222 + C154109 * C359) *
                C153865 * C11376) *
               C154166 -
           ((C14934 * C8529 + C16801 + C16801 + C153969 * C8531 +
             C14932 * C1486 + C16802 + C16802 + C154109 * C1496) *
                C153865 * C154108 +
            (C14934 * C6157 + C16803 + C16803 + C153969 * C6169 +
             C14932 * C1487 + C16804 + C16804 + C154109 * C1497) *
                C153865 * C11378 +
            (C14934 * C6159 + C16805 + C16805 + C153969 * C6171 +
             C14932 * C1488 + C16806 + C16806 + C154109 * C1498) *
                C153865 * C11377 +
            (C14934 * C6161 + C16807 + C16807 + C153969 * C6173 +
             C14932 * C1489 + C16808 + C16808 + C154109 * C1499) *
                C153865 * C11376) *
               C2574) *
              C153819) *
         C153748) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C62967 * C136 + C62976 + C62976 + C62963 * C152 + C62969 * C556 +
             C62977 + C62977 + C62964 * C580 + C62971 * C557 + C62978 + C62978 +
             C62965 * C581 + C62973 * C2272 + C62979 + C62979 +
             C154123 * C2282) *
                C153865 * C154074 +
            (C63044 + C63045 + C63046 + C63047) * C153865 * C153722) *
               C154166 -
           ((C63564 + C63565 + C63566 + C63567) * C153865 * C153722 +
            (C62973 * C7665 + C63520 + C63520 + C154123 * C7673 +
             C62971 * C2272 + C63521 + C63521 + C62965 * C2282 + C62969 * C557 +
             C63522 + C63522 + C62964 * C581 + C62967 * C556 + C63523 + C63523 +
             C62963 * C580) *
                C153865 * C154074) *
               C154167 +
           ((C62967 * C557 + C63524 + C63524 + C62963 * C581 + C62969 * C2272 +
             C63525 + C63525 + C62964 * C2282 + C62971 * C7665 + C63526 +
             C63526 + C62965 * C7673 + C62973 * C10502 + C63527 + C63527 +
             C154123 * C10508) *
                C153865 * C154074 +
            (C63568 + C63569 + C63570 + C63571) * C153865 * C153722) *
               C2574) *
              C154093 +
          (((C62967 * C1081 + C64266 + C64266 + C62963 * C1093 +
             C62969 * C1489 + C64267 + C64267 + C62964 * C1499 +
             C62971 * C6161 + C64268 + C64268 + C62965 * C6173 +
             C62973 * C9167 + C64269 + C64269 + C154123 * C9173) *
                C153865 * C154074 +
            (C64294 + C64295 + C64296 + C64297) * C153865 * C153722) *
               C154167 -
           ((C63306 + C63307 + C63308 + C63309) * C153865 * C153722 +
            (C62973 * C6161 + C63262 + C63262 + C154123 * C6173 +
             C62971 * C1489 + C63263 + C63263 + C62965 * C1499 +
             C62969 * C1081 + C63264 + C63264 + C62964 * C1093 + C62967 * C335 +
             C63265 + C63265 + C62963 * C359) *
                C153865 * C154074) *
               C154166 -
           ((C62973 * C56080 + C64824 + C64824 + C154123 * C56082 +
             C62971 * C9166 + C64825 + C64825 + C62965 * C9172 +
             C62969 * C6159 + C64826 + C64826 + C62964 * C6171 +
             C62967 * C1488 + C64827 + C64827 + C62963 * C1498) *
                C153865 * C153722 +
            (C62973 * C33705 + C64828 + C64828 + C154123 * C33709 +
             C62971 * C9167 + C64829 + C64829 + C62965 * C9173 +
             C62969 * C6161 + C64830 + C64830 + C62964 * C6173 +
             C62967 * C1489 + C64831 + C64831 + C62963 * C1499) *
                C153865 * C154074) *
               C2574) *
              C153819) *
         C153748) /
            (p * q * std::sqrt(p + q));
    d2ee[207] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C14932 * C136 + C14937 + C14937 + C154109 * C152 +
                 C14934 * C556 + C14938 + C14938 + C153969 * C580) *
                    C153865 * C11376 +
                (C14991 + C14992) * C153865 * C11377 + C15005 * C11378 +
                C15006 * C154108) *
                   C2058 -
               (C15969 * C154108 + C15970 * C11378 +
                (C15549 + C15550) * C153865 * C11377 +
                (C14934 * C557 + C15495 + C15495 + C153969 * C581 +
                 C14932 * C556 + C15496 + C15496 + C154109 * C580) *
                    C153865 * C11376) *
                   C153847) *
                  C153767 * C1253 +
              (((C15550 + C15549) * C153865 * C11376 +
                (C15548 + C15547) * C153865 * C11377 +
                (C15546 + C15545) * C153865 * C11378 +
                (C15975 + C15976) * C153865 * C154108) *
                   C153847 -
               (C15007 * C154108 + C15008 * C11378 +
                (C14994 + C14993) * C153865 * C11377 +
                (C14992 + C14991) * C153865 * C11376) *
                   C2058) *
                  C153767 * C1254 +
              ((C15005 * C11376 + C15006 * C11377 +
                (C14998 + C14997) * C153865 * C11378 +
                (C14999 + C15000) * C153865 * C154108) *
                   C2058 -
               ((C14934 * C563 + C15967 + C15967 + C153969 * C587 +
                 C14932 * C562 + C15968 + C15968 + C154109 * C586) *
                    C153865 * C154108 +
                (C15976 + C15975) * C153865 * C11378 + C15969 * C11377 +
                C15970 * C11376) *
                   C153847) *
                  C153767 * C1255) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C14932 * C136 + C14937 + C14937 + C154109 * C152 +
                 C14934 * C556 + C14938 + C14938 + C153969 * C580) *
                    C153865 * C11376 +
                (C14991 + C14992) * C153865 * C11377 + C15005 * C11378 +
                C15006 * C154108) *
                   C2058 -
               (C15969 * C154108 + C15970 * C11378 +
                (C15549 + C15550) * C153865 * C11377 +
                (C14934 * C557 + C15495 + C15495 + C153969 * C581 +
                 C14932 * C556 + C15496 + C15496 + C154109 * C580) *
                    C153865 * C11376) *
                   C153847) *
                  C326 +
              (((C14932 * C1081 + C16235 + C16235 + C154109 * C1093 +
                 C14934 * C1489 + C16236 + C16236 + C153969 * C1499) *
                    C153865 * C11376 +
                (C16269 + C16270) * C153865 * C11377 +
                (C16271 + C16272) * C153865 * C11378 +
                (C16273 + C16274) * C153865 * C154108) *
                   C153847 -
               (C15759 * C154108 + C15760 * C11378 +
                (C15275 + C15276) * C153865 * C11377 +
                (C14934 * C1081 + C15221 + C15221 + C153969 * C1093 +
                 C14932 * C335 + C15222 + C15222 + C154109 * C359) *
                    C153865 * C11376) *
                   C2058) *
                  C327 +
              (((C14932 * C336 + C15223 + C15223 + C154109 * C360 +
                 C14934 * C1920 + C15224 + C15224 + C153969 * C1930) *
                    C153865 * C11376 +
                (C15277 + C15278) * C153865 * C11377 +
                (C15279 + C15280) * C153865 * C11378 +
                (C15281 + C15282) * C153865 * C154108) *
                   C2058 -
               ((C14934 * C3372 + C17455 + C17455 + C153969 * C3380 +
                 C14932 * C1917 + C17456 + C17456 + C154109 * C1927) *
                    C153865 * C154108 +
                (C14934 * C3371 + C17457 + C17457 + C153969 * C3379 +
                 C14932 * C1918 + C17458 + C17458 + C154109 * C1928) *
                    C153865 * C11378 +
                (C14934 * C3370 + C17459 + C17459 + C153969 * C3378 +
                 C14932 * C1919 + C17460 + C17460 + C154109 * C1929) *
                    C153865 * C11377 +
                (C14934 * C3369 + C17461 + C17461 + C153969 * C3377 +
                 C14932 * C1920 + C17462 + C17462 + C154109 * C1930) *
                    C153865 * C11376) *
                   C153847) *
                  C328) *
             C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
            C14938 + C14938 + C153969 * C580) *
               C153865 * C11376 +
           (C14991 + C14992) * C153865 * C11377 + C15005 * C11378 +
           C15006 * C154108) *
              C2264 -
          (C15969 * C154108 + C15970 * C11378 +
           (C15549 + C15550) * C153865 * C11377 +
           (C14934 * C557 + C15495 + C15495 + C153969 * C581 + C14932 * C556 +
            C15496 + C15496 + C154109 * C580) *
               C153865 * C11376) *
              C2265 +
          ((C14932 * C557 + C15497 + C15497 + C154109 * C581 + C14934 * C2272 +
            C15498 + C15498 + C153969 * C2282) *
               C153865 * C11376 +
           (C15551 + C15552) * C153865 * C11377 +
           (C15553 + C15554) * C153865 * C11378 +
           (C15555 + C15556) * C153865 * C154108) *
              C2266 -
          ((C14934 * C7668 + C17981 + C17981 + C153969 * C7676 +
            C14932 * C2269 + C17982 + C17982 + C154109 * C2279) *
               C153865 * C154108 +
           (C14934 * C7667 + C17983 + C17983 + C153969 * C7675 +
            C14932 * C2270 + C17984 + C17984 + C154109 * C2280) *
               C153865 * C11378 +
           (C14934 * C7666 + C17985 + C17985 + C153969 * C7674 +
            C14932 * C2271 + C17986 + C17986 + C154109 * C2281) *
               C153865 * C11377 +
           (C14934 * C7665 + C17987 + C17987 + C153969 * C7673 +
            C14932 * C2272 + C17988 + C17988 + C154109 * C2282) *
               C153865 * C11376) *
              C2267) *
         C153767 * C153748) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
              C14938 + C14938 + C153969 * C580) *
                 C24168 +
             (C19164 + C19165) * C24169 + C38471 * C154143) *
                C154074 +
            ((C14991 + C14992) * C24168 + C19130 * C24169 + C19138 * C154143) *
                C153722) *
               C2058 -
           ((C39750 * C154143 + C20456 * C24169 + (C15549 + C15550) * C24168) *
                C153722 +
            (C41531 * C154143 + (C20483 + C20484) * C24169 +
             (C14934 * C557 + C15495 + C15495 + C153969 * C581 + C14932 * C556 +
              C15496 + C15496 + C154109 * C580) *
                 C24168) *
                C154074) *
               C153847) *
              C153767 * C1253 +
          ((((C15550 + C15549) * C24168 + C20461 * C24169 + C39751 * C154143) *
                C154074 +
            ((C15548 + C15547) * C24168 + C20466 * C24169 +
             (C20487 + C20488) * C154143) *
                C153722) *
               C153847 -
           ((C19131 * C154143 + C15752 * C24169 + (C14994 + C14993) * C24168) *
                C153722 +
            (C19132 * C154143 + C19133 * C24169 + (C14992 + C14991) * C24168) *
                C154074) *
               C2058) *
              C153767 * C1254 +
          (((C15001 * C24168 + C18830 * C24169 + C19143 * C154143) * C154074 +
            (C15002 * C24168 + C19774 * C24169 + (C15281 + C15282) * C154143) *
                C153722) *
               C2058 -
           (((C14934 * C3372 + C17455 + C17455 + C153969 * C3380 +
              C14932 * C1917 + C17456 + C17456 + C154109 * C1927) *
                 C154143 +
             (C16274 + C16273) * C24169 + C15961 * C24168) *
                C153722 +
            ((C20488 + C20487) * C154143 + C20066 * C24169 + C15962 * C24168) *
                C154074) *
               C153847) *
              C153767 * C1255)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
              C14938 + C14938 + C153969 * C580) *
                 C24168 +
             (C19164 + C19165) * C24169 + C38471 * C154143) *
                C154074 +
            ((C14991 + C14992) * C24168 + C19130 * C24169 + C19138 * C154143) *
                C153722) *
               C2058 -
           ((C39750 * C154143 + C20456 * C24169 + (C15549 + C15550) * C24168) *
                C153722 +
            (C41531 * C154143 + (C20483 + C20484) * C24169 +
             (C14934 * C557 + C15495 + C15495 + C153969 * C581 + C14932 * C556 +
              C15496 + C15496 + C154109 * C580) *
                 C24168) *
                C154074) *
               C153847) *
              C326 +
          ((((C20484 + C20483) * C24168 + (C22275 + C22276) * C24169 +
             (C41544 + C41545) * C154143) *
                C154074 +
            (C20461 * C24168 + C39751 * C24169 + (C39760 + C39761) * C154143) *
                C153722) *
               C153847 -
           ((C38472 * C154143 + C19132 * C24169 + C19133 * C24168) * C153722 +
            (C40246 * C154143 + (C19166 + C19167) * C24169 +
             (C19165 + C19164) * C24168) *
                C154074) *
               C2058) *
              C327 +
          (((C38471 * C24168 + (C20987 + C20988) * C24169 +
             (C40259 + C40260) * C154143) *
                C154074 +
            (C19138 * C24168 + C38473 * C24169 + (C38482 + C38483) * C154143) *
                C153722) *
               C2058 -
           (((C14934 * C28359 + C41536 + C41536 + C153969 * C28363 +
              C14932 * C5558 + C41537 + C41537 + C154109 * C5564) *
                 C154143 +
             (C39761 + C39760) * C24169 + C39750 * C24168) *
                C153722 +
            ((C14934 * C28358 + C41538 + C41538 + C153969 * C28362 +
              C14932 * C5559 + C41539 + C41539 + C154109 * C5565) *
                 C154143 +
             (C41545 + C41544) * C24169 + C41531 * C24168) *
                C154074) *
               C153847) *
              C328) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
             C14938 + C14938 + C153969 * C580) *
                C24168 +
            (C19164 + C19165) * C24169 + C38471 * C154143) *
               C154074 +
           ((C14991 + C14992) * C24168 + C19130 * C24169 + C19138 * C154143) *
               C153722) *
              C2264 -
          ((C39750 * C154143 + C20456 * C24169 + (C15549 + C15550) * C24168) *
               C153722 +
           (C41531 * C154143 + (C20483 + C20484) * C24169 +
            (C14934 * C557 + C15495 + C15495 + C153969 * C581 + C14932 * C556 +
             C15496 + C15496 + C154109 * C580) *
                C24168) *
               C154074) *
              C2265 +
          (((C14932 * C557 + C15497 + C15497 + C154109 * C581 + C14934 * C2272 +
             C15498 + C15498 + C153969 * C2282) *
                C24168 +
            (C21293 + C21294) * C24169 + (C40563 + C40564) * C154143) *
               C154074 +
           ((C15551 + C15552) * C24168 + (C19478 + C19479) * C24169 +
            (C38782 + C38783) * C154143) *
               C153722) *
              C2266 -
          (((C14934 * C30947 + C42320 + C42320 + C153969 * C30951 +
             C14932 * C6158 + C42321 + C42321 + C154109 * C6170) *
                C154143 +
            (C14934 * C9166 + C23053 + C23053 + C153969 * C9172 +
             C14932 * C6159 + C23054 + C23054 + C154109 * C6171) *
                C24169 +
            (C14934 * C7666 + C17985 + C17985 + C153969 * C7674 +
             C14932 * C2271 + C17986 + C17986 + C154109 * C2281) *
                C24168) *
               C153722 +
           ((C14934 * C30946 + C42322 + C42322 + C153969 * C30950 +
             C14932 * C6160 + C42323 + C42323 + C154109 * C6172) *
                C154143 +
            (C14934 * C9167 + C23055 + C23055 + C153969 * C9173 +
             C14932 * C6161 + C23056 + C23056 + C154109 * C6173) *
                C24169 +
            (C14934 * C7665 + C17987 + C17987 + C153969 * C7673 +
             C14932 * C2272 + C17988 + C17988 + C154109 * C2282) *
                C24168) *
               C154074) *
              C2267) *
         C153767 * C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C62967 * C136 + C62976 + C62976 + C62963 * C152 + C62969 * C556 +
             C62977 + C62977 + C62964 * C580 + C62971 * C557 + C62978 + C62978 +
             C62965 * C581 + C62973 * C2272 + C62979 + C62979 +
             C154123 * C2282) *
                C153865 * C154074 +
            (C63044 + C63045 + C63046 + C63047) * C153865 * C153722) *
               C2058 -
           ((C63564 + C63565 + C63566 + C63567) * C153865 * C153722 +
            (C62973 * C7665 + C63520 + C63520 + C154123 * C7673 +
             C62971 * C2272 + C63521 + C63521 + C62965 * C2282 + C62969 * C557 +
             C63522 + C63522 + C62964 * C581 + C62967 * C556 + C63523 + C63523 +
             C62963 * C580) *
                C153865 * C154074) *
               C153847) *
              C153767 * C1253 +
          (((C63567 + C63566 + C63565 + C63564) * C153865 * C154074 +
            (C64004 + C64005 + C64006 + C64007) * C153865 * C153722) *
               C153847 -
           ((C63048 + C63049 + C63050 + C63051) * C153865 * C153722 +
            (C63047 + C63046 + C63045 + C63044) * C153865 * C154074) *
               C2058) *
              C153767 * C1254 +
          (((C63051 + C63050 + C63049 + C63048) * C153865 * C154074 +
            (C63052 + C63053 + C63054 + C63055) * C153865 * C153722) *
               C2058 -
           ((C62973 * C7668 + C63992 + C63992 + C154123 * C7676 +
             C62971 * C2269 + C63993 + C63993 + C62965 * C2279 + C62969 * C560 +
             C63994 + C63994 + C62964 * C584 + C62967 * C553 + C63995 + C63995 +
             C62963 * C577) *
                C153865 * C153722 +
            (C64007 + C64006 + C64005 + C64004) * C153865 * C154074) *
               C153847) *
              C153767 * C1255)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C62967 * C136 + C62976 + C62976 + C62963 * C152 + C62969 * C556 +
             C62977 + C62977 + C62964 * C580 + C62971 * C557 + C62978 + C62978 +
             C62965 * C581 + C62973 * C2272 + C62979 + C62979 +
             C154123 * C2282) *
                C153865 * C154074 +
            (C63044 + C63045 + C63046 + C63047) * C153865 * C153722) *
               C2058 -
           ((C63564 + C63565 + C63566 + C63567) * C153865 * C153722 +
            (C62973 * C7665 + C63520 + C63520 + C154123 * C7673 +
             C62971 * C2272 + C63521 + C63521 + C62965 * C2282 + C62969 * C557 +
             C63522 + C63522 + C62964 * C581 + C62967 * C556 + C63523 + C63523 +
             C62963 * C580) *
                C153865 * C154074) *
               C153847) *
              C326 +
          (((C62967 * C1081 + C64266 + C64266 + C62963 * C1093 +
             C62969 * C1489 + C64267 + C64267 + C62964 * C1499 +
             C62971 * C6161 + C64268 + C64268 + C62965 * C6173 +
             C62973 * C9167 + C64269 + C64269 + C154123 * C9173) *
                C153865 * C154074 +
            (C64294 + C64295 + C64296 + C64297) * C153865 * C153722) *
               C153847 -
           ((C63306 + C63307 + C63308 + C63309) * C153865 * C153722 +
            (C62973 * C6161 + C63262 + C63262 + C154123 * C6173 +
             C62971 * C1489 + C63263 + C63263 + C62965 * C1499 +
             C62969 * C1081 + C63264 + C63264 + C62964 * C1093 + C62967 * C335 +
             C63265 + C63265 + C62963 * C359) *
                C153865 * C154074) *
               C2058) *
              C327 +
          (((C62967 * C336 + C63266 + C63266 + C62963 * C360 + C62969 * C1920 +
             C63267 + C63267 + C62964 * C1930 + C62971 * C3369 + C63268 +
             C63268 + C62965 * C3377 + C62973 * C6160 + C63269 + C63269 +
             C154123 * C6172) *
                C153865 * C154074 +
            (C63310 + C63311 + C63312 + C63313) * C153865 * C153722) *
               C2058 -
           ((C62973 * C30947 + C65478 + C65478 + C154123 * C30951 +
             C62971 * C6158 + C65479 + C65479 + C62965 * C6170 +
             C62969 * C3370 + C65480 + C65480 + C62964 * C3378 +
             C62967 * C1919 + C65481 + C65481 + C62963 * C1929) *
                C153865 * C153722 +
            (C62973 * C30946 + C65482 + C65482 + C154123 * C30950 +
             C62971 * C6160 + C65483 + C65483 + C62965 * C6172 +
             C62969 * C3369 + C65484 + C65484 + C62964 * C3377 +
             C62967 * C1920 + C65485 + C65485 + C62963 * C1930) *
                C153865 * C154074) *
               C153847) *
              C328) *
         C153748) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C62967 * C136 + C62976 + C62976 + C62963 * C152 + C62969 * C556 +
            C62977 + C62977 + C62964 * C580 + C62971 * C557 + C62978 + C62978 +
            C62965 * C581 + C62973 * C2272 + C62979 + C62979 +
            C154123 * C2282) *
               C153865 * C154074 +
           (C63044 + C63045 + C63046 + C63047) * C153865 * C153722) *
              C2264 -
          ((C63564 + C63565 + C63566 + C63567) * C153865 * C153722 +
           (C62973 * C7665 + C63520 + C63520 + C154123 * C7673 +
            C62971 * C2272 + C63521 + C63521 + C62965 * C2282 + C62969 * C557 +
            C63522 + C63522 + C62964 * C581 + C62967 * C556 + C63523 + C63523 +
            C62963 * C580) *
               C153865 * C154074) *
              C2265 +
          ((C62967 * C557 + C63524 + C63524 + C62963 * C581 + C62969 * C2272 +
            C63525 + C63525 + C62964 * C2282 + C62971 * C7665 + C63526 +
            C63526 + C62965 * C7673 + C62973 * C10502 + C63527 + C63527 +
            C154123 * C10508) *
               C153865 * C154074 +
           (C63568 + C63569 + C63570 + C63571) * C153865 * C153722) *
              C2266 -
          ((C62973 * C55639 + C66004 + C66004 + C154123 * C55643 +
            C62971 * C10501 + C66005 + C66005 + C62965 * C10507 +
            C62969 * C7666 + C66006 + C66006 + C62964 * C7674 + C62967 * C2271 +
            C66007 + C66007 + C62963 * C2281) *
               C153865 * C153722 +
           (C62973 * C55638 + C66008 + C66008 + C154123 * C55642 +
            C62971 * C10502 + C66009 + C66009 + C62965 * C10508 +
            C62969 * C7665 + C66010 + C66010 + C62964 * C7673 + C62967 * C2272 +
            C66011 + C66011 + C62963 * C2282) *
               C153865 * C154074) *
              C2267) *
         C153767 * C153748) /
            (p * q * std::sqrt(p + q));
    d2ee[208] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
              C14938 + C14938 + C153969 * C580) *
                 C24168 +
             (C19164 + C19165) * C24169 + C38471 * C154143) *
                C154074 +
            ((C14991 + C14992) * C24168 + C19130 * C24169 + C19138 * C154143) *
                C153722) *
               C154166 -
           ((C39750 * C154143 + C20456 * C24169 + (C15549 + C15550) * C24168) *
                C153722 +
            (C41531 * C154143 + (C20483 + C20484) * C24169 +
             (C14934 * C557 + C15495 + C15495 + C153969 * C581 + C14932 * C556 +
              C15496 + C15496 + C154109 * C580) *
                 C24168) *
                C154074) *
               C154167 +
           (((C14932 * C557 + C15497 + C15497 + C154109 * C581 +
              C14934 * C2272 + C15498 + C15498 + C153969 * C2282) *
                 C24168 +
             (C21293 + C21294) * C24169 + (C40563 + C40564) * C154143) *
                C154074 +
            ((C15551 + C15552) * C24168 + (C19478 + C19479) * C24169 +
             (C38782 + C38783) * C154143) *
                C153722) *
               C2574) *
              C153767 * C154085 +
          ((((C15550 + C15549) * C24168 + C20461 * C24169 + C39751 * C154143) *
                C154074 +
            ((C15548 + C15547) * C24168 + C20466 * C24169 +
             (C20487 + C20488) * C154143) *
                C153722) *
               C154167 -
           ((C19131 * C154143 + C15752 * C24169 + (C14994 + C14993) * C24168) *
                C153722 +
            (C19132 * C154143 + C19133 * C24169 + (C14992 + C14991) * C24168) *
                C154074) *
               C154166 -
           (((C14934 * C6156 + C21283 + C21283 + C153969 * C6168 +
              C14932 * C3371 + C21284 + C21284 + C154109 * C3379) *
                 C154143 +
             (C19481 + C19480) * C24169 + (C15554 + C15553) * C24168) *
                C153722 +
            ((C38783 + C38782) * C154143 + (C19479 + C19478) * C24169 +
             (C15552 + C15551) * C24168) *
                C154074) *
               C2574) *
              C153767 * C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
             C14938 + C14938 + C153969 * C580) *
                C153865 * C11376 +
            (C14991 + C14992) * C153865 * C11377 + C15005 * C11378 +
            C15006 * C154108) *
               C154166 -
           (C15969 * C154108 + C15970 * C11378 +
            (C15549 + C15550) * C153865 * C11377 +
            (C14934 * C557 + C15495 + C15495 + C153969 * C581 + C14932 * C556 +
             C15496 + C15496 + C154109 * C580) *
                C153865 * C11376) *
               C154167 +
           ((C14932 * C557 + C15497 + C15497 + C154109 * C581 + C14934 * C2272 +
             C15498 + C15498 + C153969 * C2282) *
                C153865 * C11376 +
            (C15551 + C15552) * C153865 * C11377 +
            (C15553 + C15554) * C153865 * C11378 +
            (C15555 + C15556) * C153865 * C154108) *
               C2574) *
              C153767 * C154085 +
          (((C15550 + C15549) * C153865 * C11376 +
            (C15548 + C15547) * C153865 * C11377 +
            (C15546 + C15545) * C153865 * C11378 +
            (C15975 + C15976) * C153865 * C154108) *
               C154167 -
           (C15007 * C154108 + C15008 * C11378 +
            (C14994 + C14993) * C153865 * C11377 +
            (C14992 + C14991) * C153865 * C11376) *
               C154166 -
           ((C14934 * C2268 + C15519 + C15519 + C153969 * C2278 +
             C14932 * C561 + C15520 + C15520 + C154109 * C585) *
                C153865 * C154108 +
            (C15556 + C15555) * C153865 * C11378 +
            (C15554 + C15553) * C153865 * C11377 +
            (C15552 + C15551) * C153865 * C11376) *
               C2574) *
              C153767 * C153754)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C62967 * C136 + C62976 + C62976 + C62963 * C152 + C62969 * C556 +
             C62977 + C62977 + C62964 * C580 + C62971 * C557 + C62978 + C62978 +
             C62965 * C581 + C62973 * C2272 + C62979 + C62979 +
             C154123 * C2282) *
                C153865 * C154074 +
            (C63044 + C63045 + C63046 + C63047) * C153865 * C153722) *
               C154166 -
           ((C63564 + C63565 + C63566 + C63567) * C153865 * C153722 +
            (C62973 * C7665 + C63520 + C63520 + C154123 * C7673 +
             C62971 * C2272 + C63521 + C63521 + C62965 * C2282 + C62969 * C557 +
             C63522 + C63522 + C62964 * C581 + C62967 * C556 + C63523 + C63523 +
             C62963 * C580) *
                C153865 * C154074) *
               C154167 +
           ((C62967 * C557 + C63524 + C63524 + C62963 * C581 + C62969 * C2272 +
             C63525 + C63525 + C62964 * C2282 + C62971 * C7665 + C63526 +
             C63526 + C62965 * C7673 + C62973 * C10502 + C63527 + C63527 +
             C154123 * C10508) *
                C153865 * C154074 +
            (C63568 + C63569 + C63570 + C63571) * C153865 * C153722) *
               C2574) *
              C153767 * C154085 +
          (((C63567 + C63566 + C63565 + C63564) * C153865 * C154074 +
            (C64004 + C64005 + C64006 + C64007) * C153865 * C153722) *
               C154167 -
           ((C63048 + C63049 + C63050 + C63051) * C153865 * C153722 +
            (C63047 + C63046 + C63045 + C63044) * C153865 * C154074) *
               C154166 -
           ((C62973 * C10500 + C63544 + C63544 + C154123 * C10506 +
             C62971 * C7667 + C63545 + C63545 + C62965 * C7675 +
             C62969 * C2270 + C63546 + C63546 + C62964 * C2280 + C62967 * C559 +
             C63547 + C63547 + C62963 * C583) *
                C153865 * C153722 +
            (C63571 + C63570 + C63569 + C63568) * C153865 * C154074) *
               C2574) *
              C153767 * C153754)) /
            (p * q * std::sqrt(p + q));
    d2ee[209] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
             C14938 + C14938 + C153969 * C580) *
                C153865 * C11376 +
            (C14991 + C14992) * C153865 * C11377 + C15005 * C11378 +
            C15006 * C154108) *
               C2058 -
           (C15969 * C154108 + C15970 * C11378 +
            (C15549 + C15550) * C153865 * C11377 +
            (C14934 * C557 + C15495 + C15495 + C153969 * C581 + C14932 * C556 +
             C15496 + C15496 + C154109 * C580) *
                C153865 * C11376) *
               C153847) *
              C326 +
          (((C14932 * C1081 + C16235 + C16235 + C154109 * C1093 +
             C14934 * C1489 + C16236 + C16236 + C153969 * C1499) *
                C153865 * C11376 +
            (C16269 + C16270) * C153865 * C11377 +
            (C16271 + C16272) * C153865 * C11378 +
            (C16273 + C16274) * C153865 * C154108) *
               C153847 -
           (C15759 * C154108 + C15760 * C11378 +
            (C15275 + C15276) * C153865 * C11377 +
            (C14934 * C1081 + C15221 + C15221 + C153969 * C1093 +
             C14932 * C335 + C15222 + C15222 + C154109 * C359) *
                C153865 * C11376) *
               C2058) *
              C327 +
          (((C14932 * C336 + C15223 + C15223 + C154109 * C360 + C14934 * C1920 +
             C15224 + C15224 + C153969 * C1930) *
                C153865 * C11376 +
            (C15277 + C15278) * C153865 * C11377 +
            (C15279 + C15280) * C153865 * C11378 +
            (C15281 + C15282) * C153865 * C154108) *
               C2058 -
           ((C14934 * C3372 + C17455 + C17455 + C153969 * C3380 +
             C14932 * C1917 + C17456 + C17456 + C154109 * C1927) *
                C153865 * C154108 +
            (C14934 * C3371 + C17457 + C17457 + C153969 * C3379 +
             C14932 * C1918 + C17458 + C17458 + C154109 * C1928) *
                C153865 * C11378 +
            (C14934 * C3370 + C17459 + C17459 + C153969 * C3378 +
             C14932 * C1919 + C17460 + C17460 + C154109 * C1929) *
                C153865 * C11377 +
            (C14934 * C3369 + C17461 + C17461 + C153969 * C3377 +
             C14932 * C1920 + C17462 + C17462 + C154109 * C1930) *
                C153865 * C11376) *
               C153847) *
              C328) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
             C14938 + C14938 + C153969 * C580) *
                C153865 * C11376 +
            (C14991 + C14992) * C153865 * C11377 + C15005 * C11378 +
            C15006 * C154108) *
               C2058 -
           (C15969 * C154108 + C15970 * C11378 +
            (C15549 + C15550) * C153865 * C11377 +
            (C14934 * C557 + C15495 + C15495 + C153969 * C581 + C14932 * C556 +
             C15496 + C15496 + C154109 * C580) *
                C153865 * C11376) *
               C153847) *
              C153767 * C1253 +
          (((C15550 + C15549) * C153865 * C11376 +
            (C15548 + C15547) * C153865 * C11377 +
            (C15546 + C15545) * C153865 * C11378 +
            (C15975 + C15976) * C153865 * C154108) *
               C153847 -
           (C15007 * C154108 + C15008 * C11378 +
            (C14994 + C14993) * C153865 * C11377 +
            (C14992 + C14991) * C153865 * C11376) *
               C2058) *
              C153767 * C1254 +
          ((C15005 * C11376 + C15006 * C11377 +
            (C14998 + C14997) * C153865 * C11378 +
            (C14999 + C15000) * C153865 * C154108) *
               C2058 -
           ((C14934 * C563 + C15967 + C15967 + C153969 * C587 + C14932 * C562 +
             C15968 + C15968 + C154109 * C586) *
                C153865 * C154108 +
            (C15976 + C15975) * C153865 * C11378 + C15969 * C11377 +
            C15970 * C11376) *
               C153847) *
              C153767 * C1255)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
              C14938 + C14938 + C153969 * C580) *
                 C24168 +
             (C19164 + C19165) * C24169 + C38471 * C154143) *
                C154074 +
            ((C14991 + C14992) * C24168 + C19130 * C24169 + C19138 * C154143) *
                C153722) *
               C2058 -
           ((C39750 * C154143 + C20456 * C24169 + (C15549 + C15550) * C24168) *
                C153722 +
            (C41531 * C154143 + (C20483 + C20484) * C24169 +
             (C14934 * C557 + C15495 + C15495 + C153969 * C581 + C14932 * C556 +
              C15496 + C15496 + C154109 * C580) *
                 C24168) *
                C154074) *
               C153847) *
              C153767 * C1253 +
          ((((C15550 + C15549) * C24168 + C20461 * C24169 + C39751 * C154143) *
                C154074 +
            ((C15548 + C15547) * C24168 + C20466 * C24169 +
             (C20487 + C20488) * C154143) *
                C153722) *
               C153847 -
           ((C19131 * C154143 + C15752 * C24169 + (C14994 + C14993) * C24168) *
                C153722 +
            (C19132 * C154143 + C19133 * C24169 + (C14992 + C14991) * C24168) *
                C154074) *
               C2058) *
              C153767 * C1254 +
          (((C15001 * C24168 + C18830 * C24169 + C19143 * C154143) * C154074 +
            (C15002 * C24168 + C19774 * C24169 + (C15281 + C15282) * C154143) *
                C153722) *
               C2058 -
           (((C14934 * C3372 + C17455 + C17455 + C153969 * C3380 +
              C14932 * C1917 + C17456 + C17456 + C154109 * C1927) *
                 C154143 +
             (C16274 + C16273) * C24169 + C15961 * C24168) *
                C153722 +
            ((C20488 + C20487) * C154143 + C20066 * C24169 + C15962 * C24168) *
                C154074) *
               C153847) *
              C153767 * C1255)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
              C14938 + C14938 + C153969 * C580) *
                 C24168 +
             (C19164 + C19165) * C24169 + C38471 * C154143) *
                C154074 +
            ((C14991 + C14992) * C24168 + C19130 * C24169 + C19138 * C154143) *
                C153722) *
               C2058 -
           ((C39750 * C154143 + C20456 * C24169 + (C15549 + C15550) * C24168) *
                C153722 +
            (C41531 * C154143 + (C20483 + C20484) * C24169 +
             (C14934 * C557 + C15495 + C15495 + C153969 * C581 + C14932 * C556 +
              C15496 + C15496 + C154109 * C580) *
                 C24168) *
                C154074) *
               C153847) *
              C326 +
          ((((C20484 + C20483) * C24168 + (C22275 + C22276) * C24169 +
             (C41544 + C41545) * C154143) *
                C154074 +
            (C20461 * C24168 + C39751 * C24169 + (C39760 + C39761) * C154143) *
                C153722) *
               C153847 -
           ((C38472 * C154143 + C19132 * C24169 + C19133 * C24168) * C153722 +
            (C40246 * C154143 + (C19166 + C19167) * C24169 +
             (C19165 + C19164) * C24168) *
                C154074) *
               C2058) *
              C327 +
          (((C38471 * C24168 + (C20987 + C20988) * C24169 +
             (C40259 + C40260) * C154143) *
                C154074 +
            (C19138 * C24168 + C38473 * C24169 + (C38482 + C38483) * C154143) *
                C153722) *
               C2058 -
           (((C14934 * C28359 + C41536 + C41536 + C153969 * C28363 +
              C14932 * C5558 + C41537 + C41537 + C154109 * C5564) *
                 C154143 +
             (C39761 + C39760) * C24169 + C39750 * C24168) *
                C153722 +
            ((C14934 * C28358 + C41538 + C41538 + C153969 * C28362 +
              C14932 * C5559 + C41539 + C41539 + C154109 * C5565) *
                 C154143 +
             (C41545 + C41544) * C24169 + C41531 * C24168) *
                C154074) *
               C153847) *
              C328) *
         C153748) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C62967 * C136 + C62976 + C62976 + C62963 * C152 + C62969 * C556 +
             C62977 + C62977 + C62964 * C580 + C62971 * C557 + C62978 + C62978 +
             C62965 * C581 + C62973 * C2272 + C62979 + C62979 +
             C154123 * C2282) *
                C153865 * C154074 +
            (C63044 + C63045 + C63046 + C63047) * C153865 * C153722) *
               C2058 -
           ((C63564 + C63565 + C63566 + C63567) * C153865 * C153722 +
            (C62973 * C7665 + C63520 + C63520 + C154123 * C7673 +
             C62971 * C2272 + C63521 + C63521 + C62965 * C2282 + C62969 * C557 +
             C63522 + C63522 + C62964 * C581 + C62967 * C556 + C63523 + C63523 +
             C62963 * C580) *
                C153865 * C154074) *
               C153847) *
              C153767 * C1253 +
          (((C63567 + C63566 + C63565 + C63564) * C153865 * C154074 +
            (C64004 + C64005 + C64006 + C64007) * C153865 * C153722) *
               C153847 -
           ((C63048 + C63049 + C63050 + C63051) * C153865 * C153722 +
            (C63047 + C63046 + C63045 + C63044) * C153865 * C154074) *
               C2058) *
              C153767 * C1254 +
          (((C63051 + C63050 + C63049 + C63048) * C153865 * C154074 +
            (C63052 + C63053 + C63054 + C63055) * C153865 * C153722) *
               C2058 -
           ((C62973 * C7668 + C63992 + C63992 + C154123 * C7676 +
             C62971 * C2269 + C63993 + C63993 + C62965 * C2279 + C62969 * C560 +
             C63994 + C63994 + C62964 * C584 + C62967 * C553 + C63995 + C63995 +
             C62963 * C577) *
                C153865 * C153722 +
            (C64007 + C64006 + C64005 + C64004) * C153865 * C154074) *
               C153847) *
              C153767 * C1255)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C62967 * C136 + C62976 + C62976 + C62963 * C152 + C62969 * C556 +
             C62977 + C62977 + C62964 * C580 + C62971 * C557 + C62978 + C62978 +
             C62965 * C581 + C62973 * C2272 + C62979 + C62979 +
             C154123 * C2282) *
                C153865 * C154074 +
            (C63044 + C63045 + C63046 + C63047) * C153865 * C153722) *
               C2058 -
           ((C63564 + C63565 + C63566 + C63567) * C153865 * C153722 +
            (C62973 * C7665 + C63520 + C63520 + C154123 * C7673 +
             C62971 * C2272 + C63521 + C63521 + C62965 * C2282 + C62969 * C557 +
             C63522 + C63522 + C62964 * C581 + C62967 * C556 + C63523 + C63523 +
             C62963 * C580) *
                C153865 * C154074) *
               C153847) *
              C326 +
          (((C62967 * C1081 + C64266 + C64266 + C62963 * C1093 +
             C62969 * C1489 + C64267 + C64267 + C62964 * C1499 +
             C62971 * C6161 + C64268 + C64268 + C62965 * C6173 +
             C62973 * C9167 + C64269 + C64269 + C154123 * C9173) *
                C153865 * C154074 +
            (C64294 + C64295 + C64296 + C64297) * C153865 * C153722) *
               C153847 -
           ((C63306 + C63307 + C63308 + C63309) * C153865 * C153722 +
            (C62973 * C6161 + C63262 + C63262 + C154123 * C6173 +
             C62971 * C1489 + C63263 + C63263 + C62965 * C1499 +
             C62969 * C1081 + C63264 + C63264 + C62964 * C1093 + C62967 * C335 +
             C63265 + C63265 + C62963 * C359) *
                C153865 * C154074) *
               C2058) *
              C327 +
          (((C62967 * C336 + C63266 + C63266 + C62963 * C360 + C62969 * C1920 +
             C63267 + C63267 + C62964 * C1930 + C62971 * C3369 + C63268 +
             C63268 + C62965 * C3377 + C62973 * C6160 + C63269 + C63269 +
             C154123 * C6172) *
                C153865 * C154074 +
            (C63310 + C63311 + C63312 + C63313) * C153865 * C153722) *
               C2058 -
           ((C62973 * C30947 + C65478 + C65478 + C154123 * C30951 +
             C62971 * C6158 + C65479 + C65479 + C62965 * C6170 +
             C62969 * C3370 + C65480 + C65480 + C62964 * C3378 +
             C62967 * C1919 + C65481 + C65481 + C62963 * C1929) *
                C153865 * C153722 +
            (C62973 * C30946 + C65482 + C65482 + C154123 * C30950 +
             C62971 * C6160 + C65483 + C65483 + C62965 * C6172 +
             C62969 * C3369 + C65484 + C65484 + C62964 * C3377 +
             C62967 * C1920 + C65485 + C65485 + C62963 * C1930) *
                C153865 * C154074) *
               C153847) *
              C328) *
         C153748) /
            (p * q * std::sqrt(p + q));
    d2ee[210] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C154181 +
             C3138 * C154169 + C3139 * C154143) *
                C2846 +
            (C2850 + C2851 + C2852) * C2847 + C2864 * C154130) *
               C153783 * C154093 -
           (C3650 * C154130 + (C3147 + C3106 + C3107) * C2847 +
            (C3142 * C154143 + C3139 * C154169 + C3138 * C154181) * C2846) *
               C153783 * C153819) *
              C154162 +
          (((C3107 + C3106 + C3147) * C2846 + (C3103 + C3102 + C3146) * C2847 +
            (C3647 + C3648 + C3649) * C154130) *
               C153783 * C153819 -
           (C2865 * C154130 + (C2855 + C2854 + C2853) * C2847 +
            (C2852 + C2851 + C2850) * C2846) *
               C153783 * C154093) *
              C154163 +
          ((C2864 * C2846 + (C2858 + C2857 + C2856) * C2847 +
            (C2859 + C2860 + C2861) * C154130) *
               C153783 * C154093 -
           (((C134 * C1343 + C1359 + C1359 + C153882 * C1353) * C154143 +
             C419 * C154169 + C412 * C154181) *
                C154130 +
            (C3649 + C3648 + C3647) * C2847 + C3650 * C2846) *
               C153783 * C153819) *
              C774)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C153865 * C123 +
            C199 * C124 + C200 * C125 + C201 * C126 + C202 * C127) *
               C153783 * C154093 -
           (C420 * C127 + C421 * C126 + C422 * C125 + C423 * C124 +
            (C134 * C335 + C380 + C380 + C153882 * C359) * C153865 * C123) *
               C153783 * C153819) *
              C154162 +
          ((C423 * C123 + C422 * C124 + C421 * C125 + C420 * C126 +
            C785 * C127) *
               C153783 * C153819 -
           (C203 * C127 + C202 * C126 + C201 * C125 + C200 * C124 +
            C199 * C123) *
               C153783 * C154093) *
              C154163 +
          ((C200 * C123 + C201 * C124 + C202 * C125 + C203 * C126 +
            C204 * C127) *
               C153783 * C154093 -
           ((C134 * C775 + C781 + C781 + C153882 * C777) * C153865 * C127 +
            C785 * C126 + C420 * C125 + C421 * C124 + C422 * C123) *
               C153783 * C153819) *
              C774)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C24168 +
             C3138 * C24169 + C3139 * C154143) *
                C154178 +
            (C24175 + C24176 + C24177) * C154159 + C24189 * C154130) *
               C153783 * C154093 -
           (C24873 * C154130 + (C24412 + C24413 + C24414) * C154159 +
            (C3142 * C154143 + C3139 * C24169 + C3138 * C24168) * C154178) *
               C153783 * C153819) *
              C154162 +
          (((C24414 + C24413 + C24412) * C154178 +
            (C24411 + C24410 + C24409) * C154159 +
            (C24870 + C24871 + C24872) * C154130) *
               C153783 * C153819 -
           (C24190 * C154130 + (C24180 + C24179 + C24178) * C154159 +
            (C24177 + C24176 + C24175) * C154178) *
               C153783 * C154093) *
              C154163 +
          ((C24189 * C154178 + (C24183 + C24182 + C24181) * C154159 +
            (C24184 + C24185 + C24186) * C154130) *
               C153783 * C154093 -
           (((C134 * C1343 + C1359 + C1359 + C153882 * C1353) * C154143 +
             C419 * C24169 + C412 * C24168) *
                C154130 +
            (C24872 + C24871 + C24870) * C154159 + C24873 * C154178) *
               C153783 * C153819) *
              C774)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C28090 +
            C3138 * C28091 + C3139 * C28092 + C3142 * C28093 + C4591 * C28094) *
               C153712 * C153783 * C154093 -
           (C28235 * C28094 + C4591 * C28093 + C3142 * C28092 + C3139 * C28091 +
            C3138 * C28090) *
               C153712 * C153783 * C153819) *
              C154162 +
          ((C415 * C28090 + C416 * C28091 + C3141 * C28092 + C3143 * C28093 +
            C28236 * C28094) *
               C153712 * C153783 * C153819 -
           (C3143 * C28094 + C3141 * C28093 + C416 * C28092 + C415 * C28091 +
            C193 * C28090) *
               C153712 * C153783 * C154093) *
              C154163 +
          ((C194 * C28090 + C414 * C28091 + C417 * C28092 + C3140 * C28093 +
            C3144 * C28094) *
               C153712 * C153783 * C154093 -
           ((C134 * C4574 + C4586 + C4586 + C153882 * C4580) * C28094 +
            C3144 * C28093 + C3140 * C28092 + C417 * C28091 + C414 * C28090) *
               C153712 * C153783 * C153819) *
              C774)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C46971 * C136 + C46978 + C46978 + C46968 * C152 + C46973 * C556 +
             C46979 + C46979 + C46969 * C580 + C46975 * C557 + C46980 + C46980 +
             C154146 * C581) *
                C153865 * C154178 +
            (C47044 + C47045 + C47046) * C153865 * C154159 + C47060 * C154130) *
               C153783 * C154093 -
           (C47898 * C154130 + (C47355 + C47356 + C47357) * C153865 * C154159 +
            (C46975 * C1489 + C47298 + C47298 + C154146 * C1499 +
             C46973 * C1081 + C47299 + C47299 + C46969 * C1093 + C46971 * C335 +
             C47300 + C47300 + C46968 * C359) *
                C153865 * C154178) *
               C153783 * C153819) *
              C154162 +
          (((C47357 + C47356 + C47355) * C153865 * C154178 +
            (C47354 + C47353 + C47352) * C153865 * C154159 +
            (C47902 + C47903 + C47904) * C153865 * C154130) *
               C153783 * C153819 -
           (C47061 * C154130 + (C47049 + C47048 + C47047) * C153865 * C154159 +
            (C47046 + C47045 + C47044) * C153865 * C154178) *
               C153783 * C154093) *
              C154163 +
          ((C47060 * C154178 + (C47052 + C47051 + C47050) * C153865 * C154159 +
            (C47053 + C47054 + C47055) * C153865 * C154130) *
               C153783 * C154093 -
           ((C46975 * C1485 + C47891 + C47891 + C154146 * C1495 +
             C46973 * C1085 + C47892 + C47892 + C46969 * C1097 + C46971 * C331 +
             C47893 + C47893 + C46968 * C355) *
                C153865 * C154130 +
            (C47904 + C47903 + C47902) * C153865 * C154159 + C47898 * C154178) *
               C153783 * C153819) *
              C774)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C46971 * C136 + C46978 + C46978 + C46968 * C152 + C46973 * C556 +
             C46979 + C46979 + C46969 * C580 + C46975 * C557 + C46980 + C46980 +
             C154146 * C581) *
                C154181 +
            (C51548 + C51549 + C51550) * C154169 + C51561 * C154143) *
               C153712 * C153783 * C154093 -
           ((C51554 + C51555 + C51556) * C154143 +
            (C51553 + C51552 + C51551) * C154169 +
            (C51550 + C51549 + C51548) * C154181) *
               C153712 * C153783 * C153819) *
              C154162 +
          (((C47357 + C47356 + C47355) * C154181 +
            (C47358 + C47359 + C47360) * C154169 +
            (C51557 + C51558 + C51559) * C154143) *
               C153712 * C153783 * C153819 -
           (C51535 * C154143 + (C47355 + C47356 + C47357) * C154169 +
            (C47046 + C47045 + C47044) * C154181) *
               C153712 * C153783 * C154093) *
              C154163 +
          ((C47058 * C154181 + (C47354 + C47353 + C47352) * C154169 +
            (C47361 + C47362 + C47363) * C154143) *
               C153712 * C153783 * C154093 -
           ((C46975 * C4809 + C48840 + C48840 + C154146 * C4815 +
             C46973 * C4170 + C48841 + C48841 + C46969 * C4178 +
             C46971 * C1345 + C48842 + C48842 + C46968 * C1355) *
                C154143 +
            (C47363 + C47362 + C47361) * C154169 + C47894 * C154181) *
               C153712 * C153783 * C153819) *
              C774)) /
            (p * q * std::sqrt(p + q));
    d2ee[211] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C153882 * C152) * C154181 +
              C3138 * C154169 + C3139 * C154143) *
                 C2846 +
             (C2850 + C2851 + C2852) * C2847 + C2864 * C154130) *
                C154094 -
            (C3874 * C154130 + (C3423 + C3388 + C3389) * C2847 +
             (C4205 * C154143 + C4206 * C154169 +
              (C134 * C556 + C601 + C601 + C153882 * C580) * C154181) *
                 C2846) *
                C153847) *
               C154093 +
           (((C4206 * C154181 + C4205 * C154169 +
              (C134 * C4168 + C4185 + C4185 + C153882 * C4176) * C154143) *
                 C2846 +
             (C4186 + C4187 + C4209) * C2847 +
             (C4191 + C4192 + C4210) * C154130) *
                C153847 -
            (C3650 * C154130 + (C3147 + C3106 + C3107) * C2847 +
             (C3142 * C154143 + C3139 * C154169 + C3138 * C154181) * C2846) *
                C154094) *
               C153819) *
              C329 +
          ((((C3389 + C3388 + C3423) * C2846 + (C3385 + C3384 + C3422) * C2847 +
             (C3870 + C3871 + C3878) * C154130) *
                C153847 -
            (C2865 * C154130 + (C2855 + C2854 + C2853) * C2847 +
             (C2852 + C2851 + C2850) * C2846) *
                C154094) *
               C154093 +
           (((C3107 + C3106 + C3147) * C2846 + (C3103 + C3102 + C3146) * C2847 +
             (C3647 + C3648 + C3649) * C154130) *
                C154094 -
            (((C134 * C4171 + C4196 + C4196 + C153882 * C4179) * C154143 +
              C3877 * C154169 + C1124 * C154181) *
                 C154130 +
             (C4210 + C4192 + C4191) * C2847 +
             (C4209 + C4187 + C4186) * C2846) *
                C153847) *
               C153819) *
              C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C153865 * C123 +
             C199 * C124 + C200 * C125 + C201 * C126 + C202 * C127) *
                C154094 -
            (C641 * C127 + C642 * C126 + C643 * C125 + C644 * C124 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C153865 * C123) *
                C153847) *
               C154093 +
           (((C134 * C1081 + C1100 + C1100 + C153882 * C1093) * C153865 * C123 +
             C1126 * C124 + C1127 * C125 + C1128 * C126 + C1129 * C127) *
                C153847 -
            (C420 * C127 + C421 * C126 + C422 * C125 + C423 * C124 +
             (C134 * C335 + C380 + C380 + C153882 * C359) * C153865 * C123) *
                C154094) *
               C153819) *
              C329 +
          (((C644 * C123 + C643 * C124 + C642 * C125 + C641 * C126 +
             C919 * C127) *
                C153847 -
            (C203 * C127 + C202 * C126 + C201 * C125 + C200 * C124 +
             C199 * C123) *
                C154094) *
               C154093 +
           ((C423 * C123 + C422 * C124 + C421 * C125 + C420 * C126 +
             C785 * C127) *
                C154094 -
            ((C134 * C1086 + C1113 + C1113 + C153882 * C1098) * C153865 * C127 +
             C1129 * C126 + C1128 * C125 + C1127 * C124 + C1126 * C123) *
                C153847) *
               C153819) *
              C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C153882 * C152) * C24168 +
              C3138 * C24169 + C3139 * C154143) *
                 C154178 +
             (C24175 + C24176 + C24177) * C154159 + C24189 * C154130) *
                C154094 -
            (C25096 * C154130 + (C24642 + C24643 + C24644) * C154159 +
             (C4205 * C154143 + C4206 * C24169 +
              (C134 * C556 + C601 + C601 + C153882 * C580) * C24168) *
                 C154178) *
                C153847) *
               C154093 +
           (((C4206 * C24168 + C4205 * C24169 + C5574 * C154143) * C154178 +
             (C25387 + C25388 + C25389) * C154159 +
             (C25390 + C25391 + C25392) * C154130) *
                C153847 -
            (C24873 * C154130 + (C24412 + C24413 + C24414) * C154159 +
             (C3142 * C154143 + C3139 * C24169 + C3138 * C24168) * C154178) *
                C154094) *
               C153819) *
              C329 +
          ((((C24644 + C24643 + C24642) * C154178 +
             (C24641 + C24640 + C24639) * C154159 +
             (C25093 + C25094 + C25095) * C154130) *
                C153847 -
            (C24190 * C154130 + (C24180 + C24179 + C24178) * C154159 +
             (C24177 + C24176 + C24175) * C154178) *
                C154094) *
               C154093 +
           (((C24414 + C24413 + C24412) * C154178 +
             (C24411 + C24410 + C24409) * C154159 +
             (C24870 + C24871 + C24872) * C154130) *
                C154094 -
            (((C134 * C4171 + C4196 + C4196 + C153882 * C4179) * C154143 +
              C3877 * C24169 + C1124 * C24168) *
                 C154130 +
             (C25392 + C25391 + C25390) * C154159 +
             (C25389 + C25388 + C25387) * C154178) *
                C153847) *
               C153819) *
              C153754)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C28090 +
             C3138 * C28091 + C3139 * C28092 + C3142 * C28093 +
             C4591 * C28094) *
                C153712 * C154094 -
            (C28789 * C28094 + C5574 * C28093 + C4205 * C28092 +
             C4206 * C28091 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C28090) *
                C153712 * C153847) *
               C154093 +
           ((C4206 * C28090 + C4205 * C28091 + C5574 * C28092 +
             C28789 * C28093 +
             (C134 * C28772 + C28781 + C28781 + C153882 * C28776) * C28094) *
                C153712 * C153847 -
            (C28235 * C28094 + C4591 * C28093 + C3142 * C28092 +
             C3139 * C28091 + C3138 * C28090) *
                C153712 * C154094) *
               C153819) *
              C329 +
          (((C636 * C28090 + C1122 * C28091 + C3417 * C28092 + C4207 * C28093 +
             C28790 * C28094) *
                C153712 * C153847 -
            (C3143 * C28094 + C3141 * C28093 + C416 * C28092 + C415 * C28091 +
             C193 * C28090) *
                C153712 * C154094) *
               C154093 +
           ((C415 * C28090 + C416 * C28091 + C3141 * C28092 + C3143 * C28093 +
             C28236 * C28094) *
                C153712 * C154094 -
            ((C134 * C28773 + C28784 + C28784 + C153882 * C28777) * C28094 +
             C28790 * C28093 + C4207 * C28092 + C3417 * C28091 +
             C1122 * C28090) *
                C153712 * C153847) *
               C153819) *
              C153754)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C46971 * C136 + C46978 + C46978 + C46968 * C152 + C46973 * C556 +
              C46979 + C46979 + C46969 * C580 + C46975 * C557 + C46980 +
              C46980 + C154146 * C581) *
                 C153865 * C154178 +
             (C47044 + C47045 + C47046) * C153865 * C154159 +
             C47060 * C154130) *
                C154094 -
            (C48137 * C154130 + (C47657 + C47658 + C47659) * C153865 * C154159 +
             (C46975 * C2272 + C47600 + C47600 + C154146 * C2282 +
              C46973 * C557 + C47601 + C47601 + C46969 * C581 + C46971 * C556 +
              C47602 + C47602 + C46968 * C580) *
                 C153865 * C154178) *
                C153847) *
               C154093 +
           (((C46971 * C1081 + C48434 + C48434 + C46968 * C1093 +
              C46973 * C1489 + C48435 + C48435 + C46969 * C1499 +
              C46975 * C6161 + C48436 + C48436 + C154146 * C6173) *
                 C153865 * C154178 +
             (C48470 + C48471 + C48472) * C153865 * C154159 +
             (C48473 + C48474 + C48475) * C153865 * C154130) *
                C153847 -
            (C47898 * C154130 + (C47355 + C47356 + C47357) * C153865 * C154159 +
             (C46975 * C1489 + C47298 + C47298 + C154146 * C1499 +
              C46973 * C1081 + C47299 + C47299 + C46969 * C1093 +
              C46971 * C335 + C47300 + C47300 + C46968 * C359) *
                 C153865 * C154178) *
                C154094) *
               C153819) *
              C329 +
          ((((C47659 + C47658 + C47657) * C153865 * C154178 +
             (C47656 + C47655 + C47654) * C153865 * C154159 +
             (C48141 + C48142 + C48143) * C153865 * C154130) *
                C153847 -
            (C47061 * C154130 + (C47049 + C47048 + C47047) * C153865 * C154159 +
             (C47046 + C47045 + C47044) * C153865 * C154178) *
                C154094) *
               C154093 +
           (((C47357 + C47356 + C47355) * C153865 * C154178 +
             (C47354 + C47353 + C47352) * C153865 * C154159 +
             (C47902 + C47903 + C47904) * C153865 * C154130) *
                C154094 -
            ((C46975 * C8529 + C48455 + C48455 + C154146 * C8531 +
              C46973 * C1486 + C48456 + C48456 + C46969 * C1496 +
              C46971 * C1084 + C48457 + C48457 + C46968 * C1096) *
                 C153865 * C154130 +
             (C48475 + C48474 + C48473) * C153865 * C154159 +
             (C48472 + C48471 + C48470) * C153865 * C154178) *
                C153847) *
               C153819) *
              C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C46971 * C136 + C46978 + C46978 + C46968 * C152 + C46973 * C556 +
              C46979 + C46979 + C46969 * C580 + C46975 * C557 + C46980 +
              C46980 + C154146 * C581) *
                 C154181 +
             (C51548 + C51549 + C51550) * C154169 + C51561 * C154143) *
                C153712 * C154094 -
            ((C52554 + C52555 + C52556) * C154143 +
             (C52557 + C52558 + C52559) * C154169 +
             (C46975 * C2272 + C47600 + C47600 + C154146 * C2282 +
              C46973 * C557 + C47601 + C47601 + C46969 * C581 + C46971 * C556 +
              C47602 + C47602 + C46968 * C580) *
                 C154181) *
                C153712 * C153847) *
               C154093 +
           (((C52559 + C52558 + C52557) * C154181 +
             (C52556 + C52555 + C52554) * C154169 +
             (C46971 * C4168 + C52524 + C52524 + C46968 * C4176 +
              C46973 * C4811 + C52525 + C52525 + C46969 * C4817 +
              C46975 * C29881 + C52526 + C52526 + C154146 * C29885) *
                 C154143) *
                C153712 * C153847 -
            ((C51554 + C51555 + C51556) * C154143 +
             (C51553 + C51552 + C51551) * C154169 +
             (C51550 + C51549 + C51548) * C154181) *
                C153712 * C154094) *
               C153819) *
              C329 +
          ((((C47659 + C47658 + C47657) * C154181 +
             (C48470 + C48471 + C48472) * C154169 +
             (C52560 + C52561 + C52562) * C154143) *
                C153712 * C153847 -
            (C51535 * C154143 + (C47355 + C47356 + C47357) * C154169 +
             (C47046 + C47045 + C47044) * C154181) *
                C153712 * C154094) *
               C154093 +
           (((C47357 + C47356 + C47355) * C154181 +
             (C47358 + C47359 + C47360) * C154169 +
             (C51557 + C51558 + C51559) * C154143) *
                C153712 * C154094 -
            ((C46975 * C31684 + C52533 + C52533 + C154146 * C31686 +
              C46973 * C4810 + C52534 + C52534 + C46969 * C4816 +
              C46971 * C4169 + C52535 + C52535 + C46968 * C4177) *
                 C154143 +
             (C52562 + C52561 + C52560) * C154169 +
             (C48472 + C48471 + C48470) * C154181) *
                C153712 * C153847) *
               C153819) *
              C153754)) /
            (p * q * std::sqrt(p + q));
    d2ee[212] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             (((C134 * C136 + C161 + C161 + C153882 * C152) * C153865 * C123 +
               C199 * C124 + C200 * C125 + C201 * C126 + C202 * C127) *
                  C153783 * C153767 * C130 -
              (C203 * C127 + C202 * C126 + C201 * C125 + C200 * C124 +
               C199 * C123) *
                  C153783 * C153767 * C131 +
              (C200 * C123 + C201 * C124 + C202 * C125 + C203 * C126 +
               C204 * C127) *
                  C153783 * C153767 * C132 -
              ((C134 * C143 + C180 + C180 + C153882 * C159) * C153865 * C127 +
               C204 * C126 + C203 * C125 + C202 * C124 + C201 * C123) *
                  C153783 * C153767 * C133) +
         std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C136 + C161 + C161 + C153882 * C152) * C153865 * C123 +
                C199 * C124 + C200 * C125 + C201 * C126 + C202 * C127) *
                   C153783 * C326 -
               (C420 * C127 + C421 * C126 + C422 * C125 + C423 * C124 +
                (C134 * C335 + C380 + C380 + C153882 * C359) * C153865 * C123) *
                   C153783 * C327 +
               ((C134 * C336 + C381 + C381 + C153882 * C360) * C153865 * C123 +
                C424 * C124 + C425 * C125 + C426 * C126 + C427 * C127) *
                   C153783 * C328) *
                  C329 +
              ((C423 * C123 + C422 * C124 + C421 * C125 + C420 * C126 +
                (C134 * C341 + C394 + C394 + C153882 * C365) * C153865 * C127) *
                   C153783 * C327 -
               (C203 * C127 + C202 * C126 + C201 * C125 + C200 * C124 +
                C199 * C123) *
                   C153783 * C326 -
               ((C134 * C342 + C395 + C395 + C153882 * C366) * C153865 * C127 +
                C427 * C126 + C426 * C125 + C425 * C124 + C424 * C123) *
                   C153783 * C328) *
                  C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C153865 * C123 +
            C199 * C124 + C200 * C125 + C201 * C126 + C202 * C127) *
               C549 -
           (C641 * C127 + C642 * C126 + C643 * C125 + C644 * C124 +
            (C134 * C556 + C601 + C601 + C153882 * C580) * C153865 * C123) *
               C550 +
           ((C134 * C557 + C602 + C602 + C153882 * C581) * C153865 * C123 +
            C645 * C124 + C646 * C125 + C647 * C126 + C648 * C127) *
               C551) *
              C153767 * C329 +
          ((C644 * C123 + C643 * C124 + C642 * C125 + C641 * C126 +
            (C134 * C562 + C615 + C615 + C153882 * C586) * C153865 * C127) *
               C550 -
           (C203 * C127 + C202 * C126 + C201 * C125 + C200 * C124 +
            C199 * C123) *
               C549 -
           ((C134 * C563 + C616 + C616 + C153882 * C587) * C153865 * C127 +
            C648 * C126 + C647 * C125 + C646 * C124 + C645 * C123) *
               C551) *
              C153767 * C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C154181 +
            (C134 * C335 + C380 + C380 + C153882 * C359) * C154169 +
            (C134 * C336 + C381 + C381 + C153882 * C360) * C154143) *
               C2846 +
           (C2850 + C2851 + C2852) * C2847 + C2864 * C154130) *
              C153783 * C153767 * C130 -
          (C2865 * C154130 + (C2855 + C2854 + C2853) * C2847 +
           (C2852 + C2851 + C2850) * C2846) *
              C153783 * C153767 * C131 +
          (C2864 * C2846 + (C2858 + C2857 + C2856) * C2847 +
           (C2859 + C2860 + C2861) * C154130) *
              C153783 * C153767 * C132 -
          (((C134 * C342 + C395 + C395 + C153882 * C366) * C154143 +
            C784 * C154169 + C197 * C154181) *
               C154130 +
           (C2861 + C2860 + C2859) * C2847 + C2865 * C2846) *
              C153783 * C153767 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C154181 +
             C3138 * C154169 + C3139 * C154143) *
                C2846 +
            (C2850 + C2851 + C2852) * C2847 + C2864 * C154130) *
               C153783 * C326 -
           ((C3146 + C3102 + C3103) * C154130 +
            (C3147 + C3106 + C3107) * C2847 +
            (C3142 * C154143 + C3139 * C154169 + C3138 * C154181) * C2846) *
               C153783 * C327 +
           ((C3139 * C154181 + C3142 * C154169 +
             (C134 * C3083 + C3110 + C3110 + C153882 * C3091) * C154143) *
                C2846 +
            (C3111 + C3148 + C3149) * C2847 +
            (C3115 + C3150 + C3151) * C154130) *
               C153783 * C328) *
              C329 +
          (((C3107 + C3106 + C3147) * C2846 + (C3103 + C3102 + C3146) * C2847 +
            (C413 * C154181 + C418 * C154169 + C3145 * C154143) * C154130) *
               C153783 * C327 -
           (C2865 * C154130 + (C2855 + C2854 + C2853) * C2847 +
            (C2852 + C2851 + C2850) * C2846) *
               C153783 * C326 -
           (((C134 * C3086 + C3121 + C3121 + C153882 * C3094) * C154143 +
             C3145 * C154169 + C418 * C154181) *
                C154130 +
            (C3151 + C3150 + C3115) * C2847 + (C3149 + C3148 + C3111) * C2846) *
               C153783 * C328) *
              C153754)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C154181 +
             C3138 * C154169 + C3139 * C154143) *
                C2846 +
            (C2850 + C2851 + C2852) * C2847 + C2864 * C154130) *
               C549 -
           ((C3422 + C3384 + C3385) * C154130 +
            (C3423 + C3388 + C3389) * C2847 +
            ((C134 * C1920 + C1936 + C1936 + C153882 * C1930) * C154143 +
             (C134 * C1081 + C1100 + C1100 + C153882 * C1093) * C154169 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C154181) *
                C2846) *
               C550 +
           (((C134 * C557 + C602 + C602 + C153882 * C581) * C154181 +
             (C134 * C1489 + C1505 + C1505 + C153882 * C1499) * C154169 +
             (C134 * C3369 + C3390 + C3390 + C153882 * C3377) * C154143) *
                C2846 +
            (C3391 + C3424 + C3425) * C2847 +
            (C3397 + C3426 + C3427) * C154130) *
               C551) *
              C153767 * C329 +
          (((C3389 + C3388 + C3423) * C2846 + (C3385 + C3384 + C3422) * C2847 +
            (C634 * C154181 + C1124 * C154169 +
             (C134 * C1917 + C1933 + C1933 + C153882 * C1927) * C154143) *
                C154130) *
               C550 -
           (C2865 * C154130 + (C2855 + C2854 + C2853) * C2847 +
            (C2852 + C2851 + C2850) * C2846) *
               C549 -
           (((C134 * C3372 + C3403 + C3403 + C153882 * C3380) * C154143 +
             (C134 * C1486 + C1502 + C1502 + C153882 * C1496) * C154169 +
             C639 * C154181) *
                C154130 +
            (C3427 + C3426 + C3397) * C2847 + (C3425 + C3424 + C3391) * C2846) *
               C551) *
              C153767 * C153754)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C24168 +
            C3138 * C24169 + C3139 * C154143) *
               C154178 +
           (C24175 + C24176 + C24177) * C154159 + C24189 * C154130) *
              C153783 * C153767 * C130 -
          (C24190 * C154130 + (C24180 + C24179 + C24178) * C154159 +
           (C24177 + C24176 + C24175) * C154178) *
              C153783 * C153767 * C131 +
          (C24189 * C154178 + (C24183 + C24182 + C24181) * C154159 +
           (C24184 + C24185 + C24186) * C154130) *
              C153783 * C153767 * C132 -
          (((C134 * C342 + C395 + C395 + C153882 * C366) * C154143 +
            C784 * C24169 + C197 * C24168) *
               C154130 +
           (C24186 + C24185 + C24184) * C154159 + C24190 * C154178) *
              C153783 * C153767 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C24168 +
             C3138 * C24169 + C3139 * C154143) *
                C154178 +
            (C24175 + C24176 + C24177) * C154159 + C24189 * C154130) *
               C153783 * C326 -
           ((C24409 + C24410 + C24411) * C154130 +
            (C24412 + C24413 + C24414) * C154159 +
            (C3142 * C154143 + C3139 * C24169 + C3138 * C24168) * C154178) *
               C153783 * C327 +
           ((C3139 * C24168 + C3142 * C24169 + C4591 * C154143) * C154178 +
            (C24415 + C24416 + C24417) * C154159 +
            (C24418 + C24419 + C24420) * C154130) *
               C153783 * C328) *
              C329 +
          (((C24414 + C24413 + C24412) * C154178 +
            (C24411 + C24410 + C24409) * C154159 +
            (C413 * C24168 + C418 * C24169 + C3145 * C154143) * C154130) *
               C153783 * C327 -
           (C24190 * C154130 + (C24180 + C24179 + C24178) * C154159 +
            (C24177 + C24176 + C24175) * C154178) *
               C153783 * C326 -
           (((C134 * C3086 + C3121 + C3121 + C153882 * C3094) * C154143 +
             C3145 * C24169 + C418 * C24168) *
                C154130 +
            (C24420 + C24419 + C24418) * C154159 +
            (C24417 + C24416 + C24415) * C154178) *
               C153783 * C328) *
              C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C24168 +
             C3138 * C24169 + C3139 * C154143) *
                C154178 +
            (C24175 + C24176 + C24177) * C154159 + C24189 * C154130) *
               C549 -
           ((C24639 + C24640 + C24641) * C154130 +
            (C24642 + C24643 + C24644) * C154159 +
            (C4205 * C154143 + C4206 * C24169 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C24168) *
                C154178) *
               C550 +
           (((C134 * C557 + C602 + C602 + C153882 * C581) * C24168 +
             C4830 * C24169 + C4831 * C154143) *
                C154178 +
            (C24645 + C24646 + C24647) * C154159 +
            (C24648 + C24649 + C24650) * C154130) *
               C551) *
              C153767 * C329 +
          (((C24644 + C24643 + C24642) * C154178 +
            (C24641 + C24640 + C24639) * C154159 +
            (C634 * C24168 + C1124 * C24169 + C3877 * C154143) * C154130) *
               C550 -
           (C24190 * C154130 + (C24180 + C24179 + C24178) * C154159 +
            (C24177 + C24176 + C24175) * C154178) *
               C549 -
           (((C134 * C3372 + C3403 + C3403 + C153882 * C3380) * C154143 +
             C11810 * C24169 + C639 * C24168) *
                C154130 +
            (C24650 + C24649 + C24648) * C154159 +
            (C24647 + C24646 + C24645) * C154178) *
               C551) *
              C153767 * C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C136 + C161 + C161 + C153882 * C152) * C28090 +
           C3138 * C28091 + C3139 * C28092 + C3142 * C28093 + C4591 * C28094) *
              C153712 * C153783 * C153767 * C130 -
          (C3143 * C28094 + C3141 * C28093 + C416 * C28092 + C415 * C28091 +
           C193 * C28090) *
              C153712 * C153783 * C153767 * C131 +
          (C194 * C28090 + C414 * C28091 + C417 * C28092 + C3140 * C28093 +
           C3144 * C28094) *
              C153712 * C153783 * C153767 * C132 -
          ((C134 * C3086 + C3121 + C3121 + C153882 * C3094) * C28094 +
           C3145 * C28093 + C418 * C28092 + C413 * C28091 + C195 * C28090) *
              C153712 * C153783 * C153767 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C28090 +
            C3138 * C28091 + C3139 * C28092 + C3142 * C28093 + C4591 * C28094) *
               C153712 * C153783 * C326 -
           (C28235 * C28094 + C4591 * C28093 + C3142 * C28092 + C3139 * C28091 +
            C3138 * C28090) *
               C153712 * C153783 * C327 +
           (C3139 * C28090 + C3142 * C28091 + C4591 * C28092 + C28235 * C28093 +
            (C134 * C28218 + C28227 + C28227 + C153882 * C28222) * C28094) *
               C153712 * C153783 * C328) *
              C329 +
          ((C415 * C28090 + C416 * C28091 + C3141 * C28092 + C3143 * C28093 +
            C28236 * C28094) *
               C153712 * C153783 * C327 -
           (C3143 * C28094 + C3141 * C28093 + C416 * C28092 + C415 * C28091 +
            C193 * C28090) *
               C153712 * C153783 * C326 -
           ((C134 * C28219 + C28230 + C28230 + C153882 * C28223) * C28094 +
            C28236 * C28093 + C3143 * C28092 + C3141 * C28091 + C416 * C28090) *
               C153712 * C153783 * C328) *
              C153754)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C28090 +
            C3138 * C28091 + C3139 * C28092 + C3142 * C28093 + C4591 * C28094) *
               C153712 * C549 -
           ((C134 * C5559 + C5571 + C5571 + C153882 * C5565) * C28094 +
            C5574 * C28093 + C4205 * C28092 + C4206 * C28091 +
            (C134 * C556 + C601 + C601 + C153882 * C580) * C28090) *
               C153712 * C550 +
           ((C134 * C557 + C602 + C602 + C153882 * C581) * C28090 +
            C4830 * C28091 + C4831 * C28092 +
            (C134 * C4811 + C4825 + C4825 + C153882 * C4817) * C28093 +
            (C134 * C28358 + C28365 + C28365 + C153882 * C28362) * C28094) *
               C153712 * C551) *
              C153767 * C329 +
          ((C636 * C28090 + C1122 * C28091 + C3417 * C28092 + C4207 * C28093 +
            (C134 * C5558 + C5570 + C5570 + C153882 * C5564) * C28094) *
               C153712 * C550 -
           (C3143 * C28094 + C3141 * C28093 + C416 * C28092 + C415 * C28091 +
            C193 * C28090) *
               C153712 * C549 -
           ((C134 * C28359 + C28366 + C28366 + C153882 * C28363) * C28094 +
            (C134 * C4810 + C4824 + C4824 + C153882 * C4816) * C28093 +
            C3419 * C28092 + C3418 * C28091 + C637 * C28090) *
               C153712 * C551) *
              C153767 * C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C46971 * C136 + C46978 + C46978 + C46968 * C152 + C46973 * C556 +
            C46979 + C46979 + C46969 * C580 + C46975 * C557 + C46980 + C46980 +
            C154146 * C581) *
               C153865 * C154178 +
           (C47044 + C47045 + C47046) * C153865 * C154159 + C47060 * C154130) *
              C153783 * C153767 * C130 -
          (C47061 * C154130 + (C47049 + C47048 + C47047) * C153865 * C154159 +
           (C47046 + C47045 + C47044) * C153865 * C154178) *
              C153783 * C153767 * C131 +
          (C47060 * C154178 + (C47052 + C47051 + C47050) * C153865 * C154159 +
           (C47053 + C47054 + C47055) * C153865 * C154130) *
              C153783 * C153767 * C132 -
          ((C46975 * C563 + C47017 + C47017 + C154146 * C587 + C46973 * C562 +
            C47018 + C47018 + C46969 * C586 + C46971 * C141 + C47019 + C47019 +
            C46968 * C157) *
               C153865 * C154130 +
           (C47055 + C47054 + C47053) * C153865 * C154159 + C47061 * C154178) *
              C153783 * C153767 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C46971 * C136 + C46978 + C46978 + C46968 * C152 + C46973 * C556 +
             C46979 + C46979 + C46969 * C580 + C46975 * C557 + C46980 + C46980 +
             C154146 * C581) *
                C153865 * C154178 +
            (C47044 + C47045 + C47046) * C153865 * C154159 + C47060 * C154130) *
               C153783 * C326 -
           ((C47352 + C47353 + C47354) * C153865 * C154130 +
            (C47355 + C47356 + C47357) * C153865 * C154159 +
            (C46975 * C1489 + C47298 + C47298 + C154146 * C1499 +
             C46973 * C1081 + C47299 + C47299 + C46969 * C1093 + C46971 * C335 +
             C47300 + C47300 + C46968 * C359) *
                C153865 * C154178) *
               C153783 * C327 +
           ((C46971 * C336 + C47301 + C47301 + C46968 * C360 + C46973 * C1920 +
             C47302 + C47302 + C46969 * C1930 + C46975 * C3369 + C47303 +
             C47303 + C154146 * C3377) *
                C153865 * C154178 +
            (C47358 + C47359 + C47360) * C153865 * C154159 +
            (C47361 + C47362 + C47363) * C153865 * C154130) *
               C153783 * C328) *
              C329 +
          (((C47357 + C47356 + C47355) * C153865 * C154178 +
            (C47354 + C47353 + C47352) * C153865 * C154159 +
            (C46971 * C332 + C47322 + C47322 + C46968 * C356 + C46973 * C1084 +
             C47323 + C47323 + C46969 * C1096 + C46975 * C1486 + C47324 +
             C47324 + C154146 * C1496) *
                C153865 * C154130) *
               C153783 * C327 -
           (C47061 * C154130 + (C47049 + C47048 + C47047) * C153865 * C154159 +
            (C47046 + C47045 + C47044) * C153865 * C154178) *
               C153783 * C326 -
           ((C46975 * C3372 + C47325 + C47325 + C154146 * C3380 +
             C46973 * C1917 + C47326 + C47326 + C46969 * C1927 + C46971 * C339 +
             C47327 + C47327 + C46968 * C363) *
                C153865 * C154130 +
            (C47363 + C47362 + C47361) * C153865 * C154159 +
            (C47360 + C47359 + C47358) * C153865 * C154178) *
               C153783 * C328) *
              C153754)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C46971 * C136 + C46978 + C46978 + C46968 * C152 + C46973 * C556 +
             C46979 + C46979 + C46969 * C580 + C46975 * C557 + C46980 + C46980 +
             C154146 * C581) *
                C153865 * C154178 +
            (C47044 + C47045 + C47046) * C153865 * C154159 + C47060 * C154130) *
               C549 -
           ((C47654 + C47655 + C47656) * C153865 * C154130 +
            (C47657 + C47658 + C47659) * C153865 * C154159 +
            (C46975 * C2272 + C47600 + C47600 + C154146 * C2282 +
             C46973 * C557 + C47601 + C47601 + C46969 * C581 + C46971 * C556 +
             C47602 + C47602 + C46968 * C580) *
                C153865 * C154178) *
               C550 +
           ((C46971 * C557 + C47603 + C47603 + C46968 * C581 + C46973 * C2272 +
             C47604 + C47604 + C46969 * C2282 + C46975 * C7665 + C47605 +
             C47605 + C154146 * C7673) *
                C153865 * C154178 +
            (C47660 + C47661 + C47662) * C153865 * C154159 +
            (C47663 + C47664 + C47665) * C153865 * C154130) *
               C551) *
              C153767 * C329 +
          (((C47659 + C47658 + C47657) * C153865 * C154178 +
            (C47656 + C47655 + C47654) * C153865 * C154159 +
            (C46971 * C553 + C47624 + C47624 + C46968 * C577 + C46973 * C560 +
             C47625 + C47625 + C46969 * C584 + C46975 * C2269 + C47626 +
             C47626 + C154146 * C2279) *
                C153865 * C154130) *
               C550 -
           (C47061 * C154130 + (C47049 + C47048 + C47047) * C153865 * C154159 +
            (C47046 + C47045 + C47044) * C153865 * C154178) *
               C549 -
           ((C46975 * C7668 + C47627 + C47627 + C154146 * C7676 +
             C46973 * C2269 + C47628 + C47628 + C46969 * C2279 + C46971 * C560 +
             C47629 + C47629 + C46968 * C584) *
                C153865 * C154130 +
            (C47665 + C47664 + C47663) * C153865 * C154159 +
            (C47662 + C47661 + C47660) * C153865 * C154178) *
               C551) *
              C153767 * C153754)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C46971 * C136 + C46978 + C46978 + C46968 * C152 + C46973 * C556 +
            C46979 + C46979 + C46969 * C580 + C46975 * C557 + C46980 + C46980 +
            C154146 * C581) *
               C154181 +
           (C46971 * C335 + C47300 + C47300 + C46968 * C359 + C46973 * C1081 +
            C47299 + C47299 + C46969 * C1093 + C46975 * C1489 + C47298 +
            C47298 + C154146 * C1499) *
               C154169 +
           (C46971 * C336 + C47301 + C47301 + C46968 * C360 + C46973 * C1920 +
            C47302 + C47302 + C46969 * C1930 + C46975 * C3369 + C47303 +
            C47303 + C154146 * C3377) *
               C154143) *
              C153712 * C153783 * C153767 * C130 -
          ((C47360 + C47359 + C47358) * C154143 +
           (C47355 + C47356 + C47357) * C154169 +
           (C47046 + C47045 + C47044) * C154181) *
              C153712 * C153783 * C153767 * C131 +
          (C47058 * C154181 + (C47354 + C47353 + C47352) * C154169 +
           (C47361 + C47362 + C47363) * C154143) *
              C153712 * C153783 * C153767 * C132 -
          ((C46975 * C3372 + C47325 + C47325 + C154146 * C3380 +
            C46973 * C1917 + C47326 + C47326 + C46969 * C1927 + C46971 * C339 +
            C47327 + C47327 + C46968 * C363) *
               C154143 +
           (C47904 + C47903 + C47902) * C154169 + C47059 * C154181) *
              C153712 * C153783 * C153767 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C46971 * C136 + C46978 + C46978 + C46968 * C152 + C46973 * C556 +
             C46979 + C46979 + C46969 * C580 + C46975 * C557 + C46980 + C46980 +
             C154146 * C581) *
                C154181 +
            (C51548 + C51549 + C51550) * C154169 + C51561 * C154143) *
               C153712 * C153783 * C326 -
           ((C51554 + C51555 + C51556) * C154143 +
            (C51553 + C51552 + C51551) * C154169 +
            (C51550 + C51549 + C51548) * C154181) *
               C153712 * C153783 * C327 +
           (C51561 * C154181 + (C51556 + C51555 + C51554) * C154169 +
            (C46971 * C3083 + C51510 + C51510 + C46968 * C3091 +
             C46973 * C5559 + C51511 + C51511 + C46969 * C5565 +
             C46975 * C28358 + C51512 + C51512 + C154146 * C28362) *
                C154143) *
               C153712 * C153783 * C328) *
              C329 +
          (((C47357 + C47356 + C47355) * C154181 +
            (C47358 + C47359 + C47360) * C154169 +
            (C51557 + C51558 + C51559) * C154143) *
               C153712 * C153783 * C327 -
           (C51535 * C154143 + (C47355 + C47356 + C47357) * C154169 +
            (C47046 + C47045 + C47044) * C154181) *
               C153712 * C153783 * C326 -
           ((C46975 * C28359 + C51520 + C51520 + C154146 * C28363 +
             C46973 * C5558 + C51521 + C51521 + C46969 * C5564 +
             C46971 * C3084 + C51522 + C51522 + C46968 * C3092) *
                C154143 +
            (C51559 + C51558 + C51557) * C154169 + C51535 * C154181) *
               C153712 * C153783 * C328) *
              C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C46971 * C136 + C46978 + C46978 + C46968 * C152 + C46973 * C556 +
             C46979 + C46979 + C46969 * C580 + C46975 * C557 + C46980 + C46980 +
             C154146 * C581) *
                C154181 +
            (C51548 + C51549 + C51550) * C154169 + C51561 * C154143) *
               C153712 * C549 -
           ((C46975 * C6160 + C49808 + C49808 + C154146 * C6172 +
             C46973 * C3369 + C49809 + C49809 + C46969 * C3377 +
             C46971 * C1920 + C49810 + C49810 + C46968 * C1930) *
                C154143 +
            (C46975 * C6161 + C48436 + C48436 + C154146 * C6173 +
             C46973 * C1489 + C48435 + C48435 + C46969 * C1499 +
             C46971 * C1081 + C48434 + C48434 + C46968 * C1093) *
                C154169 +
            (C46975 * C2272 + C47600 + C47600 + C154146 * C2282 +
             C46973 * C557 + C47601 + C47601 + C46969 * C581 + C46971 * C556 +
             C47602 + C47602 + C46968 * C580) *
                C154181) *
               C153712 * C550 +
           ((C46971 * C557 + C47603 + C47603 + C46968 * C581 + C46973 * C2272 +
             C47604 + C47604 + C46969 * C2282 + C46975 * C7665 + C47605 +
             C47605 + C154146 * C7673) *
                C154181 +
            (C46971 * C1489 + C49075 + C49075 + C46968 * C1499 +
             C46973 * C6161 + C49074 + C49074 + C46969 * C6173 +
             C46975 * C9167 + C49073 + C49073 + C154146 * C9173) *
                C154169 +
            (C46971 * C3369 + C51780 + C51780 + C46968 * C3377 +
             C46973 * C6160 + C51781 + C51781 + C46969 * C6172 +
             C46975 * C30946 + C51782 + C51782 + C154146 * C30950) *
                C154143) *
               C153712 * C551) *
              C153767 * C329 +
          (((C47659 + C47658 + C47657) * C154181 +
            (C48470 + C48471 + C48472) * C154169 +
            (C46971 * C1919 + C49807 + C49807 + C46968 * C1929 +
             C46973 * C3370 + C49806 + C49806 + C46969 * C3378 +
             C46975 * C6158 + C49805 + C49805 + C154146 * C6170) *
                C154143) *
               C153712 * C550 -
           (C51535 * C154143 + (C47355 + C47356 + C47357) * C154169 +
            (C47046 + C47045 + C47044) * C154181) *
               C153712 * C549 -
           ((C46975 * C30947 + C51783 + C51783 + C154146 * C30951 +
             C46973 * C6158 + C51784 + C51784 + C46969 * C6170 +
             C46971 * C3370 + C51785 + C51785 + C46968 * C3378) *
                C154143 +
            (C46975 * C9166 + C49070 + C49070 + C154146 * C9172 +
             C46973 * C6159 + C49071 + C49071 + C46969 * C6171 +
             C46971 * C1488 + C49072 + C49072 + C46968 * C1498) *
                C154169 +
            (C47662 + C47661 + C47660) * C154181) *
               C153712 * C551) *
              C153767 * C153754)) /
            (p * q * std::sqrt(p + q));
    d2ee[213] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C154181 +
             C3138 * C154169 + C3139 * C154143) *
                C2846 +
            (C2850 + C2851 + C2852) * C2847 + C2864 * C154130) *
               C154094 -
           (C3874 * C154130 + (C3423 + C3388 + C3389) * C2847 +
            ((C134 * C1920 + C1936 + C1936 + C153882 * C1930) * C154143 +
             (C134 * C1081 + C1100 + C1100 + C153882 * C1093) * C154169 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C154181) *
                C2846) *
               C153847) *
              C153767 * C154162 +
          (((C3389 + C3388 + C3423) * C2846 + (C3385 + C3384 + C3422) * C2847 +
            (C3870 + C3871 + C3878) * C154130) *
               C153847 -
           (C2865 * C154130 + (C2855 + C2854 + C2853) * C2847 +
            (C2852 + C2851 + C2850) * C2846) *
               C154094) *
              C153767 * C154163 +
          ((C2864 * C2846 + (C2858 + C2857 + C2856) * C2847 +
            (C2859 + C2860 + C2861) * C154130) *
               C154094 -
           (((C134 * C1916 + C1932 + C1932 + C153882 * C1926) * C154143 +
             C1125 * C154169 + C633 * C154181) *
                C154130 +
            (C3878 + C3871 + C3870) * C2847 + C3874 * C2846) *
               C153847) *
              C153767 * C774)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C153865 * C123 +
            C199 * C124 + C200 * C125 + C201 * C126 + C202 * C127) *
               C154094 -
           (C641 * C127 + C642 * C126 + C643 * C125 + C644 * C124 +
            (C134 * C556 + C601 + C601 + C153882 * C580) * C153865 * C123) *
               C153847) *
              C153767 * C154162 +
          ((C644 * C123 + C643 * C124 + C642 * C125 + C641 * C126 +
            C919 * C127) *
               C153847 -
           (C203 * C127 + C202 * C126 + C201 * C125 + C200 * C124 +
            C199 * C123) *
               C154094) *
              C153767 * C154163 +
          ((C200 * C123 + C201 * C124 + C202 * C125 + C203 * C126 +
            C204 * C127) *
               C154094 -
           ((C134 * C909 + C915 + C915 + C153882 * C911) * C153865 * C127 +
            C919 * C126 + C641 * C125 + C642 * C124 + C643 * C123) *
               C153847) *
              C153767 * C774)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C24168 +
             C3138 * C24169 + C3139 * C154143) *
                C154178 +
            (C24175 + C24176 + C24177) * C154159 + C24189 * C154130) *
               C154094 -
           (C25096 * C154130 + (C24642 + C24643 + C24644) * C154159 +
            (C4205 * C154143 + C4206 * C24169 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C24168) *
                C154178) *
               C153847) *
              C153767 * C154162 +
          (((C24644 + C24643 + C24642) * C154178 +
            (C24641 + C24640 + C24639) * C154159 +
            (C25093 + C25094 + C25095) * C154130) *
               C153847 -
           (C24190 * C154130 + (C24180 + C24179 + C24178) * C154159 +
            (C24177 + C24176 + C24175) * C154178) *
               C154094) *
              C153767 * C154163 +
          ((C24189 * C154178 + (C24183 + C24182 + C24181) * C154159 +
            (C24184 + C24185 + C24186) * C154130) *
               C154094 -
           (((C134 * C1916 + C1932 + C1932 + C153882 * C1926) * C154143 +
             C1125 * C24169 + C633 * C24168) *
                C154130 +
            (C25095 + C25094 + C25093) * C154159 + C25096 * C154178) *
               C153847) *
              C153767 * C774)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C28090 +
            C3138 * C28091 + C3139 * C28092 + C3142 * C28093 + C4591 * C28094) *
               C153712 * C154094 -
           ((C134 * C5559 + C5571 + C5571 + C153882 * C5565) * C28094 +
            C5574 * C28093 + C4205 * C28092 + C4206 * C28091 +
            (C134 * C556 + C601 + C601 + C153882 * C580) * C28090) *
               C153712 * C153847) *
              C153767 * C154162 +
          ((C636 * C28090 + C1122 * C28091 + C3417 * C28092 + C4207 * C28093 +
            (C134 * C5558 + C5570 + C5570 + C153882 * C5564) * C28094) *
               C153712 * C153847 -
           (C3143 * C28094 + C3141 * C28093 + C416 * C28092 + C415 * C28091 +
            C193 * C28090) *
               C153712 * C154094) *
              C153767 * C154163 +
          ((C194 * C28090 + C414 * C28091 + C417 * C28092 + C3140 * C28093 +
            C3144 * C28094) *
               C153712 * C154094 -
           ((C134 * C5557 + C5569 + C5569 + C153882 * C5563) * C28094 +
            C4208 * C28093 + C3416 * C28092 + C1123 * C28091 + C635 * C28090) *
               C153712 * C153847) *
              C153767 * C774)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C46971 * C136 + C46978 + C46978 + C46968 * C152 + C46973 * C556 +
             C46979 + C46979 + C46969 * C580 + C46975 * C557 + C46980 + C46980 +
             C154146 * C581) *
                C153865 * C154178 +
            (C47044 + C47045 + C47046) * C153865 * C154159 + C47060 * C154130) *
               C154094 -
           (C48137 * C154130 + (C47657 + C47658 + C47659) * C153865 * C154159 +
            (C46975 * C2272 + C47600 + C47600 + C154146 * C2282 +
             C46973 * C557 + C47601 + C47601 + C46969 * C581 + C46971 * C556 +
             C47602 + C47602 + C46968 * C580) *
                C153865 * C154178) *
               C153847) *
              C153767 * C154162 +
          (((C47659 + C47658 + C47657) * C153865 * C154178 +
            (C47656 + C47655 + C47654) * C153865 * C154159 +
            (C48141 + C48142 + C48143) * C153865 * C154130) *
               C153847 -
           (C47061 * C154130 + (C47049 + C47048 + C47047) * C153865 * C154159 +
            (C47046 + C47045 + C47044) * C153865 * C154178) *
               C154094) *
              C153767 * C154163 +
          ((C47060 * C154178 + (C47052 + C47051 + C47050) * C153865 * C154159 +
            (C47053 + C47054 + C47055) * C153865 * C154130) *
               C154094 -
           ((C46975 * C2268 + C48130 + C48130 + C154146 * C2278 +
             C46973 * C561 + C48131 + C48131 + C46969 * C585 + C46971 * C552 +
             C48132 + C48132 + C46968 * C576) *
                C153865 * C154130 +
            (C48143 + C48142 + C48141) * C153865 * C154159 + C48137 * C154178) *
               C153847) *
              C153767 * C774)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C46971 * C136 + C46978 + C46978 + C46968 * C152 + C46973 * C556 +
             C46979 + C46979 + C46969 * C580 + C46975 * C557 + C46980 + C46980 +
             C154146 * C581) *
                C154181 +
            (C51548 + C51549 + C51550) * C154169 + C51561 * C154143) *
               C153712 * C154094 -
           ((C46975 * C6160 + C49808 + C49808 + C154146 * C6172 +
             C46973 * C3369 + C49809 + C49809 + C46969 * C3377 +
             C46971 * C1920 + C49810 + C49810 + C46968 * C1930) *
                C154143 +
            (C46975 * C6161 + C48436 + C48436 + C154146 * C6173 +
             C46973 * C1489 + C48435 + C48435 + C46969 * C1499 +
             C46971 * C1081 + C48434 + C48434 + C46968 * C1093) *
                C154169 +
            (C46975 * C2272 + C47600 + C47600 + C154146 * C2282 +
             C46973 * C557 + C47601 + C47601 + C46969 * C581 + C46971 * C556 +
             C47602 + C47602 + C46968 * C580) *
                C154181) *
               C153712 * C153847) *
              C153767 * C154162 +
          (((C47659 + C47658 + C47657) * C154181 +
            (C48470 + C48471 + C48472) * C154169 +
            (C46971 * C1919 + C49807 + C49807 + C46968 * C1929 +
             C46973 * C3370 + C49806 + C49806 + C46969 * C3378 +
             C46975 * C6158 + C49805 + C49805 + C154146 * C6170) *
                C154143) *
               C153712 * C153847 -
           (C51535 * C154143 + (C47355 + C47356 + C47357) * C154169 +
            (C47046 + C47045 + C47044) * C154181) *
               C153712 * C154094) *
              C153767 * C154163 +
          ((C47058 * C154181 + (C47354 + C47353 + C47352) * C154169 +
            (C47361 + C47362 + C47363) * C154143) *
               C153712 * C154094 -
           ((C46975 * C6156 + C49802 + C49802 + C154146 * C6168 +
             C46973 * C3371 + C49803 + C49803 + C46969 * C3379 +
             C46971 * C1918 + C49804 + C49804 + C46968 * C1928) *
                C154143 +
            (C48475 + C48474 + C48473) * C154169 + C48133 * C154181) *
               C153712 * C153847) *
              C153767 * C774)) /
            (p * q * std::sqrt(p + q));
    d2ee[214] +=
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C153865 * C123 +
            C199 * C124 + C200 * C125 + C201 * C126 + C202 * C127) *
               C153783 * C326 -
           (C420 * C127 + C421 * C126 + C422 * C125 + C423 * C124 +
            (C134 * C335 + C380 + C380 + C153882 * C359) * C153865 * C123) *
               C153783 * C327 +
           ((C134 * C336 + C381 + C381 + C153882 * C360) * C153865 * C123 +
            C424 * C124 + C425 * C125 + C426 * C126 + C427 * C127) *
               C153783 * C328) *
              C329 +
          ((C423 * C123 + C422 * C124 + C421 * C125 + C420 * C126 +
            (C134 * C341 + C394 + C394 + C153882 * C365) * C153865 * C127) *
               C153783 * C327 -
           (C203 * C127 + C202 * C126 + C201 * C125 + C200 * C124 +
            C199 * C123) *
               C153783 * C326 -
           ((C134 * C342 + C395 + C395 + C153882 * C366) * C153865 * C127 +
            C427 * C126 + C426 * C125 + C425 * C124 + C424 * C123) *
               C153783 * C328) *
              C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C136 + C161 + C161 + C153882 * C152) * C153865 * C123 +
           C199 * C124 + C200 * C125 + C201 * C126 + C202 * C127) *
              C153783 * C153767 * C130 -
          (C203 * C127 + C202 * C126 + C201 * C125 + C200 * C124 +
           C199 * C123) *
              C153783 * C153767 * C131 +
          (C200 * C123 + C201 * C124 + C202 * C125 + C203 * C126 +
           C204 * C127) *
              C153783 * C153767 * C132 -
          ((C134 * C143 + C180 + C180 + C153882 * C159) * C153865 * C127 +
           C204 * C126 + C203 * C125 + C202 * C124 + C201 * C123) *
              C153783 * C153767 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C154181 +
            (C134 * C335 + C380 + C380 + C153882 * C359) * C154169 +
            (C134 * C336 + C381 + C381 + C153882 * C360) * C154143) *
               C2846 +
           (C2850 + C2851 + C2852) * C2847 + C2864 * C154130) *
              C153783 * C153767 * C130 -
          (C2865 * C154130 + (C2855 + C2854 + C2853) * C2847 +
           (C2852 + C2851 + C2850) * C2846) *
              C153783 * C153767 * C131 +
          (C2864 * C2846 + (C2858 + C2857 + C2856) * C2847 +
           (C2859 + C2860 + C2861) * C154130) *
              C153783 * C153767 * C132 -
          (((C134 * C342 + C395 + C395 + C153882 * C366) * C154143 +
            C784 * C154169 + C197 * C154181) *
               C154130 +
           (C2861 + C2860 + C2859) * C2847 + C2865 * C2846) *
              C153783 * C153767 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C154181 +
             C3138 * C154169 + C3139 * C154143) *
                C2846 +
            (C2850 + C2851 + C2852) * C2847 + C2864 * C154130) *
               C153783 * C326 -
           ((C3146 + C3102 + C3103) * C154130 +
            (C3147 + C3106 + C3107) * C2847 +
            (C3142 * C154143 + C3139 * C154169 + C3138 * C154181) * C2846) *
               C153783 * C327 +
           ((C3139 * C154181 + C3142 * C154169 +
             (C134 * C3083 + C3110 + C3110 + C153882 * C3091) * C154143) *
                C2846 +
            (C3111 + C3148 + C3149) * C2847 +
            (C3115 + C3150 + C3151) * C154130) *
               C153783 * C328) *
              C329 +
          (((C3107 + C3106 + C3147) * C2846 + (C3103 + C3102 + C3146) * C2847 +
            (C413 * C154181 + C418 * C154169 + C3145 * C154143) * C154130) *
               C153783 * C327 -
           (C2865 * C154130 + (C2855 + C2854 + C2853) * C2847 +
            (C2852 + C2851 + C2850) * C2846) *
               C153783 * C326 -
           (((C134 * C3086 + C3121 + C3121 + C153882 * C3094) * C154143 +
             C3145 * C154169 + C418 * C154181) *
                C154130 +
            (C3151 + C3150 + C3115) * C2847 + (C3149 + C3148 + C3111) * C2846) *
               C153783 * C328) *
              C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C24168 +
            C3138 * C24169 + C3139 * C154143) *
               C154178 +
           (C24175 + C24176 + C24177) * C154159 + C24189 * C154130) *
              C153783 * C153767 * C130 -
          (C24190 * C154130 + (C24180 + C24179 + C24178) * C154159 +
           (C24177 + C24176 + C24175) * C154178) *
              C153783 * C153767 * C131 +
          (C24189 * C154178 + (C24183 + C24182 + C24181) * C154159 +
           (C24184 + C24185 + C24186) * C154130) *
              C153783 * C153767 * C132 -
          (((C134 * C342 + C395 + C395 + C153882 * C366) * C154143 +
            C784 * C24169 + C197 * C24168) *
               C154130 +
           (C24186 + C24185 + C24184) * C154159 + C24190 * C154178) *
              C153783 * C153767 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C24168 +
             C3138 * C24169 + C3139 * C154143) *
                C154178 +
            (C24175 + C24176 + C24177) * C154159 + C24189 * C154130) *
               C153783 * C326 -
           ((C24409 + C24410 + C24411) * C154130 +
            (C24412 + C24413 + C24414) * C154159 +
            (C3142 * C154143 + C3139 * C24169 + C3138 * C24168) * C154178) *
               C153783 * C327 +
           ((C3139 * C24168 + C3142 * C24169 + C4591 * C154143) * C154178 +
            (C24415 + C24416 + C24417) * C154159 +
            (C24418 + C24419 + C24420) * C154130) *
               C153783 * C328) *
              C329 +
          (((C24414 + C24413 + C24412) * C154178 +
            (C24411 + C24410 + C24409) * C154159 +
            (C413 * C24168 + C418 * C24169 + C3145 * C154143) * C154130) *
               C153783 * C327 -
           (C24190 * C154130 + (C24180 + C24179 + C24178) * C154159 +
            (C24177 + C24176 + C24175) * C154178) *
               C153783 * C326 -
           (((C134 * C3086 + C3121 + C3121 + C153882 * C3094) * C154143 +
             C3145 * C24169 + C418 * C24168) *
                C154130 +
            (C24420 + C24419 + C24418) * C154159 +
            (C24417 + C24416 + C24415) * C154178) *
               C153783 * C328) *
              C153754)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C136 + C161 + C161 + C153882 * C152) * C28090 +
           C3138 * C28091 + C3139 * C28092 + C3142 * C28093 + C4591 * C28094) *
              C153712 * C153783 * C153767 * C130 -
          (C3143 * C28094 + C3141 * C28093 + C416 * C28092 + C415 * C28091 +
           C193 * C28090) *
              C153712 * C153783 * C153767 * C131 +
          (C194 * C28090 + C414 * C28091 + C417 * C28092 + C3140 * C28093 +
           C3144 * C28094) *
              C153712 * C153783 * C153767 * C132 -
          ((C134 * C3086 + C3121 + C3121 + C153882 * C3094) * C28094 +
           C3145 * C28093 + C418 * C28092 + C413 * C28091 + C195 * C28090) *
              C153712 * C153783 * C153767 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C28090 +
            C3138 * C28091 + C3139 * C28092 + C3142 * C28093 + C4591 * C28094) *
               C153712 * C153783 * C326 -
           (C28235 * C28094 + C4591 * C28093 + C3142 * C28092 + C3139 * C28091 +
            C3138 * C28090) *
               C153712 * C153783 * C327 +
           (C3139 * C28090 + C3142 * C28091 + C4591 * C28092 + C28235 * C28093 +
            (C134 * C28218 + C28227 + C28227 + C153882 * C28222) * C28094) *
               C153712 * C153783 * C328) *
              C329 +
          ((C415 * C28090 + C416 * C28091 + C3141 * C28092 + C3143 * C28093 +
            C28236 * C28094) *
               C153712 * C153783 * C327 -
           (C3143 * C28094 + C3141 * C28093 + C416 * C28092 + C415 * C28091 +
            C193 * C28090) *
               C153712 * C153783 * C326 -
           ((C134 * C28219 + C28230 + C28230 + C153882 * C28223) * C28094 +
            C28236 * C28093 + C3143 * C28092 + C3141 * C28091 + C416 * C28090) *
               C153712 * C153783 * C328) *
              C153754)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C46971 * C136 + C46978 + C46978 + C46968 * C152 + C46973 * C556 +
            C46979 + C46979 + C46969 * C580 + C46975 * C557 + C46980 + C46980 +
            C154146 * C581) *
               C153865 * C154178 +
           (C47044 + C47045 + C47046) * C153865 * C154159 + C47060 * C154130) *
              C153783 * C153767 * C130 -
          (C47061 * C154130 + (C47049 + C47048 + C47047) * C153865 * C154159 +
           (C47046 + C47045 + C47044) * C153865 * C154178) *
              C153783 * C153767 * C131 +
          (C47060 * C154178 + (C47052 + C47051 + C47050) * C153865 * C154159 +
           (C47053 + C47054 + C47055) * C153865 * C154130) *
              C153783 * C153767 * C132 -
          ((C46975 * C563 + C47017 + C47017 + C154146 * C587 + C46973 * C562 +
            C47018 + C47018 + C46969 * C586 + C46971 * C141 + C47019 + C47019 +
            C46968 * C157) *
               C153865 * C154130 +
           (C47055 + C47054 + C47053) * C153865 * C154159 + C47061 * C154178) *
              C153783 * C153767 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C46971 * C136 + C46978 + C46978 + C46968 * C152 + C46973 * C556 +
             C46979 + C46979 + C46969 * C580 + C46975 * C557 + C46980 + C46980 +
             C154146 * C581) *
                C153865 * C154178 +
            (C47044 + C47045 + C47046) * C153865 * C154159 + C47060 * C154130) *
               C153783 * C326 -
           ((C47352 + C47353 + C47354) * C153865 * C154130 +
            (C47355 + C47356 + C47357) * C153865 * C154159 +
            (C46975 * C1489 + C47298 + C47298 + C154146 * C1499 +
             C46973 * C1081 + C47299 + C47299 + C46969 * C1093 + C46971 * C335 +
             C47300 + C47300 + C46968 * C359) *
                C153865 * C154178) *
               C153783 * C327 +
           ((C46971 * C336 + C47301 + C47301 + C46968 * C360 + C46973 * C1920 +
             C47302 + C47302 + C46969 * C1930 + C46975 * C3369 + C47303 +
             C47303 + C154146 * C3377) *
                C153865 * C154178 +
            (C47358 + C47359 + C47360) * C153865 * C154159 +
            (C47361 + C47362 + C47363) * C153865 * C154130) *
               C153783 * C328) *
              C329 +
          (((C47357 + C47356 + C47355) * C153865 * C154178 +
            (C47354 + C47353 + C47352) * C153865 * C154159 +
            (C46971 * C332 + C47322 + C47322 + C46968 * C356 + C46973 * C1084 +
             C47323 + C47323 + C46969 * C1096 + C46975 * C1486 + C47324 +
             C47324 + C154146 * C1496) *
                C153865 * C154130) *
               C153783 * C327 -
           (C47061 * C154130 + (C47049 + C47048 + C47047) * C153865 * C154159 +
            (C47046 + C47045 + C47044) * C153865 * C154178) *
               C153783 * C326 -
           ((C46975 * C3372 + C47325 + C47325 + C154146 * C3380 +
             C46973 * C1917 + C47326 + C47326 + C46969 * C1927 + C46971 * C339 +
             C47327 + C47327 + C46968 * C363) *
                C153865 * C154130 +
            (C47363 + C47362 + C47361) * C153865 * C154159 +
            (C47360 + C47359 + C47358) * C153865 * C154178) *
               C153783 * C328) *
              C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C46971 * C136 + C46978 + C46978 + C46968 * C152 + C46973 * C556 +
            C46979 + C46979 + C46969 * C580 + C46975 * C557 + C46980 + C46980 +
            C154146 * C581) *
               C154181 +
           (C46971 * C335 + C47300 + C47300 + C46968 * C359 + C46973 * C1081 +
            C47299 + C47299 + C46969 * C1093 + C46975 * C1489 + C47298 +
            C47298 + C154146 * C1499) *
               C154169 +
           (C46971 * C336 + C47301 + C47301 + C46968 * C360 + C46973 * C1920 +
            C47302 + C47302 + C46969 * C1930 + C46975 * C3369 + C47303 +
            C47303 + C154146 * C3377) *
               C154143) *
              C153712 * C153783 * C153767 * C130 -
          ((C47360 + C47359 + C47358) * C154143 +
           (C47355 + C47356 + C47357) * C154169 +
           (C47046 + C47045 + C47044) * C154181) *
              C153712 * C153783 * C153767 * C131 +
          (C47058 * C154181 + (C47354 + C47353 + C47352) * C154169 +
           (C47361 + C47362 + C47363) * C154143) *
              C153712 * C153783 * C153767 * C132 -
          ((C46975 * C3372 + C47325 + C47325 + C154146 * C3380 +
            C46973 * C1917 + C47326 + C47326 + C46969 * C1927 + C46971 * C339 +
            C47327 + C47327 + C46968 * C363) *
               C154143 +
           (C47904 + C47903 + C47902) * C154169 + C47059 * C154181) *
              C153712 * C153783 * C153767 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C46971 * C136 + C46978 + C46978 + C46968 * C152 + C46973 * C556 +
             C46979 + C46979 + C46969 * C580 + C46975 * C557 + C46980 + C46980 +
             C154146 * C581) *
                C154181 +
            (C51548 + C51549 + C51550) * C154169 + C51561 * C154143) *
               C153712 * C153783 * C326 -
           ((C51554 + C51555 + C51556) * C154143 +
            (C51553 + C51552 + C51551) * C154169 +
            (C51550 + C51549 + C51548) * C154181) *
               C153712 * C153783 * C327 +
           (C51561 * C154181 + (C51556 + C51555 + C51554) * C154169 +
            (C46971 * C3083 + C51510 + C51510 + C46968 * C3091 +
             C46973 * C5559 + C51511 + C51511 + C46969 * C5565 +
             C46975 * C28358 + C51512 + C51512 + C154146 * C28362) *
                C154143) *
               C153712 * C153783 * C328) *
              C329 +
          (((C47357 + C47356 + C47355) * C154181 +
            (C47358 + C47359 + C47360) * C154169 +
            (C51557 + C51558 + C51559) * C154143) *
               C153712 * C153783 * C327 -
           (C51535 * C154143 + (C47355 + C47356 + C47357) * C154169 +
            (C47046 + C47045 + C47044) * C154181) *
               C153712 * C153783 * C326 -
           ((C46975 * C28359 + C51520 + C51520 + C154146 * C28363 +
             C46973 * C5558 + C51521 + C51521 + C46969 * C5564 +
             C46971 * C3084 + C51522 + C51522 + C46968 * C3092) *
                C154143 +
            (C51559 + C51558 + C51557) * C154169 + C51535 * C154181) *
               C153712 * C153783 * C328) *
              C153754)) /
            (p * q * std::sqrt(p + q));
    d2ee[215] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C154181 +
             C3138 * C154169 + C3139 * C154143) *
                C2846 +
            (C2850 + C2851 + C2852) * C2847 + C2864 * C154130) *
               C153783 * C154164 -
           (C3650 * C154130 + (C3147 + C3106 + C3107) * C2847 +
            (C3142 * C154143 + C3139 * C154169 + C3138 * C154181) * C2846) *
               C153783 * C154165 +
           ((C3139 * C154181 + C3142 * C154169 + C4591 * C154143) * C2846 +
            (C3111 + C3148 + C3149) * C2847 +
            (C3115 + C3150 + C3151) * C154130) *
               C153783 * C1629) *
              C154085 +
          (((C3107 + C3106 + C3147) * C2846 + (C3103 + C3102 + C3146) * C2847 +
            (C3647 + C3648 + C3649) * C154130) *
               C153783 * C154165 -
           (C2865 * C154130 + (C2855 + C2854 + C2853) * C2847 +
            (C2852 + C2851 + C2850) * C2846) *
               C153783 * C154164 -
           (((C134 * C3086 + C3121 + C3121 + C153882 * C3094) * C154143 +
             C3145 * C154169 + C418 * C154181) *
                C154130 +
            (C3151 + C3150 + C3115) * C2847 + (C3149 + C3148 + C3111) * C2846) *
               C153783 * C1629) *
              C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C153865 * C123 +
            C199 * C124 + C200 * C125 + C201 * C126 + C202 * C127) *
               C153783 * C154164 -
           (C420 * C127 + C421 * C126 + C422 * C125 + C423 * C124 +
            (C134 * C335 + C380 + C380 + C153882 * C359) * C153865 * C123) *
               C153783 * C154165 +
           ((C134 * C336 + C381 + C381 + C153882 * C360) * C153865 * C123 +
            C424 * C124 + C425 * C125 + C426 * C126 + C427 * C127) *
               C153783 * C1629) *
              C154085 +
          ((C423 * C123 + C422 * C124 + C421 * C125 + C420 * C126 +
            C785 * C127) *
               C153783 * C154165 -
           (C203 * C127 + C202 * C126 + C201 * C125 + C200 * C124 +
            C199 * C123) *
               C153783 * C154164 -
           ((C134 * C342 + C395 + C395 + C153882 * C366) * C153865 * C127 +
            C427 * C126 + C426 * C125 + C425 * C124 + C424 * C123) *
               C153783 * C1629) *
              C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C24168 +
             C3138 * C24169 + C3139 * C154143) *
                C154178 +
            (C24175 + C24176 + C24177) * C154159 + C24189 * C154130) *
               C153783 * C154164 -
           (C24873 * C154130 + (C24412 + C24413 + C24414) * C154159 +
            (C3142 * C154143 + C3139 * C24169 + C3138 * C24168) * C154178) *
               C153783 * C154165 +
           ((C3139 * C24168 + C3142 * C24169 + C4591 * C154143) * C154178 +
            (C24415 + C24416 + C24417) * C154159 +
            (C24418 + C24419 + C24420) * C154130) *
               C153783 * C1629) *
              C154085 +
          (((C24414 + C24413 + C24412) * C154178 +
            (C24411 + C24410 + C24409) * C154159 +
            (C24870 + C24871 + C24872) * C154130) *
               C153783 * C154165 -
           (C24190 * C154130 + (C24180 + C24179 + C24178) * C154159 +
            (C24177 + C24176 + C24175) * C154178) *
               C153783 * C154164 -
           (((C134 * C3086 + C3121 + C3121 + C153882 * C3094) * C154143 +
             C3145 * C24169 + C418 * C24168) *
                C154130 +
            (C24420 + C24419 + C24418) * C154159 +
            (C24417 + C24416 + C24415) * C154178) *
               C153783 * C1629) *
              C153754)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C28090 +
            C3138 * C28091 + C3139 * C28092 + C3142 * C28093 + C4591 * C28094) *
               C153712 * C153783 * C154164 -
           (C28235 * C28094 + C4591 * C28093 + C3142 * C28092 + C3139 * C28091 +
            C3138 * C28090) *
               C153712 * C153783 * C154165 +
           (C3139 * C28090 + C3142 * C28091 + C4591 * C28092 + C28235 * C28093 +
            C29003 * C28094) *
               C153712 * C153783 * C1629) *
              C154085 +
          ((C415 * C28090 + C416 * C28091 + C3141 * C28092 + C3143 * C28093 +
            C28236 * C28094) *
               C153712 * C153783 * C154165 -
           (C3143 * C28094 + C3141 * C28093 + C416 * C28092 + C415 * C28091 +
            C193 * C28090) *
               C153712 * C153783 * C154164 -
           ((C134 * C28219 + C28230 + C28230 + C153882 * C28223) * C28094 +
            C28236 * C28093 + C3143 * C28092 + C3141 * C28091 + C416 * C28090) *
               C153712 * C153783 * C1629) *
              C153754)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C46971 * C136 + C46978 + C46978 + C46968 * C152 + C46973 * C556 +
             C46979 + C46979 + C46969 * C580 + C46975 * C557 + C46980 + C46980 +
             C154146 * C581) *
                C153865 * C154178 +
            (C47044 + C47045 + C47046) * C153865 * C154159 + C47060 * C154130) *
               C153783 * C154164 -
           (C47898 * C154130 + (C47355 + C47356 + C47357) * C153865 * C154159 +
            (C46975 * C1489 + C47298 + C47298 + C154146 * C1499 +
             C46973 * C1081 + C47299 + C47299 + C46969 * C1093 + C46971 * C335 +
             C47300 + C47300 + C46968 * C359) *
                C153865 * C154178) *
               C153783 * C154165 +
           ((C46971 * C336 + C47301 + C47301 + C46968 * C360 + C46973 * C1920 +
             C47302 + C47302 + C46969 * C1930 + C46975 * C3369 + C47303 +
             C47303 + C154146 * C3377) *
                C153865 * C154178 +
            (C47358 + C47359 + C47360) * C153865 * C154159 +
            (C47361 + C47362 + C47363) * C153865 * C154130) *
               C153783 * C1629) *
              C154085 +
          (((C47357 + C47356 + C47355) * C153865 * C154178 +
            (C47354 + C47353 + C47352) * C153865 * C154159 +
            (C47902 + C47903 + C47904) * C153865 * C154130) *
               C153783 * C154165 -
           (C47061 * C154130 + (C47049 + C47048 + C47047) * C153865 * C154159 +
            (C47046 + C47045 + C47044) * C153865 * C154178) *
               C153783 * C154164 -
           ((C46975 * C3372 + C47325 + C47325 + C154146 * C3380 +
             C46973 * C1917 + C47326 + C47326 + C46969 * C1927 + C46971 * C339 +
             C47327 + C47327 + C46968 * C363) *
                C153865 * C154130 +
            (C47363 + C47362 + C47361) * C153865 * C154159 +
            (C47360 + C47359 + C47358) * C153865 * C154178) *
               C153783 * C1629) *
              C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C46971 * C136 + C46978 + C46978 + C46968 * C152 + C46973 * C556 +
             C46979 + C46979 + C46969 * C580 + C46975 * C557 + C46980 + C46980 +
             C154146 * C581) *
                C154181 +
            (C51548 + C51549 + C51550) * C154169 + C51561 * C154143) *
               C153712 * C153783 * C154164 -
           (C52937 * C154143 + (C51553 + C51552 + C51551) * C154169 +
            (C51550 + C51549 + C51548) * C154181) *
               C153712 * C153783 * C154165 +
           (C51561 * C154181 + (C51556 + C51555 + C51554) * C154169 +
            (C52944 + C52945 + C52946) * C154143) *
               C153712 * C153783 * C1629) *
              C154085 +
          (((C47357 + C47356 + C47355) * C154181 +
            (C47358 + C47359 + C47360) * C154169 +
            (C51557 + C51558 + C51559) * C154143) *
               C153712 * C153783 * C154165 -
           (C51535 * C154143 + (C47355 + C47356 + C47357) * C154169 +
            (C47046 + C47045 + C47044) * C154181) *
               C153712 * C153783 * C154164 -
           ((C46975 * C28359 + C51520 + C51520 + C154146 * C28363 +
             C46973 * C5558 + C51521 + C51521 + C46969 * C5564 +
             C46971 * C3084 + C51522 + C51522 + C46968 * C3092) *
                C154143 +
            (C51559 + C51558 + C51557) * C154169 + C51535 * C154181) *
               C153712 * C153783 * C1629) *
              C153754)) /
            (p * q * std::sqrt(p + q));
    d2ee[216] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C154181 +
             C3138 * C154169 + C3139 * C154143) *
                C2846 +
            (C2850 + C2851 + C2852) * C2847 + C2864 * C154130) *
               C154094 -
           (C3874 * C154130 + (C3423 + C3388 + C3389) * C2847 +
            (C4205 * C154143 + C4206 * C154169 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C154181) *
                C2846) *
               C153847) *
              C154164 +
          (((C4206 * C154181 + C4205 * C154169 + C5574 * C154143) * C2846 +
            (C4186 + C4187 + C4209) * C2847 +
            (C4191 + C4192 + C4210) * C154130) *
               C153847 -
           (C3650 * C154130 + (C3147 + C3106 + C3107) * C2847 +
            (C3142 * C154143 + C3139 * C154169 + C3138 * C154181) * C2846) *
               C154094) *
              C154165 +
          (((C3139 * C154181 + C3142 * C154169 + C4591 * C154143) * C2846 +
            (C3111 + C3148 + C3149) * C2847 +
            (C3115 + C3150 + C3151) * C154130) *
               C154094 -
           (((C134 * C5557 + C5569 + C5569 + C153882 * C5563) * C154143 +
             C4208 * C154169 + C3416 * C154181) *
                C154130 +
            ((C134 * C5558 + C5570 + C5570 + C153882 * C5564) * C154143 +
             C4207 * C154169 + C3417 * C154181) *
                C2847 +
            ((C134 * C5559 + C5571 + C5571 + C153882 * C5565) * C154143 +
             C5574 * C154169 + C4205 * C154181) *
                C2846) *
               C153847) *
              C1629) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C153865 * C123 +
            C199 * C124 + C200 * C125 + C201 * C126 + C202 * C127) *
               C154094 -
           (C641 * C127 + C642 * C126 + C643 * C125 + C644 * C124 +
            (C134 * C556 + C601 + C601 + C153882 * C580) * C153865 * C123) *
               C153847) *
              C154164 +
          (((C134 * C1081 + C1100 + C1100 + C153882 * C1093) * C153865 * C123 +
            C1126 * C124 + C1127 * C125 + C1128 * C126 + C1129 * C127) *
               C153847 -
           (C420 * C127 + C421 * C126 + C422 * C125 + C423 * C124 +
            (C134 * C335 + C380 + C380 + C153882 * C359) * C153865 * C123) *
               C154094) *
              C154165 +
          (((C134 * C336 + C381 + C381 + C153882 * C360) * C153865 * C123 +
            C424 * C124 + C425 * C125 + C426 * C126 + C427 * C127) *
               C154094 -
           ((C134 * C1916 + C1932 + C1932 + C153882 * C1926) * C153865 * C127 +
            (C134 * C1917 + C1933 + C1933 + C153882 * C1927) * C153865 * C126 +
            (C134 * C1918 + C1934 + C1934 + C153882 * C1928) * C153865 * C125 +
            (C134 * C1919 + C1935 + C1935 + C153882 * C1929) * C153865 * C124 +
            (C134 * C1920 + C1936 + C1936 + C153882 * C1930) * C153865 * C123) *
               C153847) *
              C1629) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C24168 +
             C3138 * C24169 + C3139 * C154143) *
                C154178 +
            (C24175 + C24176 + C24177) * C154159 + C24189 * C154130) *
               C154094 -
           (C25096 * C154130 + (C24642 + C24643 + C24644) * C154159 +
            (C4205 * C154143 + C4206 * C24169 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C24168) *
                C154178) *
               C153847) *
              C154164 +
          (((C4206 * C24168 + C4205 * C24169 + C5574 * C154143) * C154178 +
            (C25387 + C25388 + C25389) * C154159 +
            (C25390 + C25391 + C25392) * C154130) *
               C153847 -
           (C24873 * C154130 + (C24412 + C24413 + C24414) * C154159 +
            (C3142 * C154143 + C3139 * C24169 + C3138 * C24168) * C154178) *
               C154094) *
              C154165 +
          (((C3139 * C24168 + C3142 * C24169 + C4591 * C154143) * C154178 +
            (C24415 + C24416 + C24417) * C154159 +
            (C24418 + C24419 + C24420) * C154130) *
               C154094 -
           (((C134 * C5557 + C5569 + C5569 + C153882 * C5563) * C154143 +
             C4208 * C24169 + C3416 * C24168) *
                C154130 +
            ((C134 * C5558 + C5570 + C5570 + C153882 * C5564) * C154143 +
             C4207 * C24169 + C3417 * C24168) *
                C154159 +
            ((C134 * C5559 + C5571 + C5571 + C153882 * C5565) * C154143 +
             C5574 * C24169 + C4205 * C24168) *
                C154178) *
               C153847) *
              C1629) *
         C153748) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C28090 +
            C3138 * C28091 + C3139 * C28092 + C3142 * C28093 + C4591 * C28094) *
               C153712 * C154094 -
           (C28789 * C28094 + C5574 * C28093 + C4205 * C28092 + C4206 * C28091 +
            (C134 * C556 + C601 + C601 + C153882 * C580) * C28090) *
               C153712 * C153847) *
              C154164 +
          ((C4206 * C28090 + C4205 * C28091 + C5574 * C28092 + C28789 * C28093 +
            C29554 * C28094) *
               C153712 * C153847 -
           (C28235 * C28094 + C4591 * C28093 + C3142 * C28092 + C3139 * C28091 +
            C3138 * C28090) *
               C153712 * C154094) *
              C154165 +
          ((C3139 * C28090 + C3142 * C28091 + C4591 * C28092 + C28235 * C28093 +
            C29003 * C28094) *
               C153712 * C154094 -
           ((C134 * C29545 + C29551 + C29551 + C153882 * C29547) * C28094 +
            C29554 * C28093 + C28789 * C28092 + C5574 * C28091 +
            C4205 * C28090) *
               C153712 * C153847) *
              C1629) *
         C153748) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C46971 * C136 + C46978 + C46978 + C46968 * C152 + C46973 * C556 +
             C46979 + C46979 + C46969 * C580 + C46975 * C557 + C46980 + C46980 +
             C154146 * C581) *
                C153865 * C154178 +
            (C47044 + C47045 + C47046) * C153865 * C154159 + C47060 * C154130) *
               C154094 -
           (C48137 * C154130 + (C47657 + C47658 + C47659) * C153865 * C154159 +
            (C46975 * C2272 + C47600 + C47600 + C154146 * C2282 +
             C46973 * C557 + C47601 + C47601 + C46969 * C581 + C46971 * C556 +
             C47602 + C47602 + C46968 * C580) *
                C153865 * C154178) *
               C153847) *
              C154164 +
          (((C46971 * C1081 + C48434 + C48434 + C46968 * C1093 +
             C46973 * C1489 + C48435 + C48435 + C46969 * C1499 +
             C46975 * C6161 + C48436 + C48436 + C154146 * C6173) *
                C153865 * C154178 +
            (C48470 + C48471 + C48472) * C153865 * C154159 +
            (C48473 + C48474 + C48475) * C153865 * C154130) *
               C153847 -
           (C47898 * C154130 + (C47355 + C47356 + C47357) * C153865 * C154159 +
            (C46975 * C1489 + C47298 + C47298 + C154146 * C1499 +
             C46973 * C1081 + C47299 + C47299 + C46969 * C1093 + C46971 * C335 +
             C47300 + C47300 + C46968 * C359) *
                C153865 * C154178) *
               C154094) *
              C154165 +
          (((C46971 * C336 + C47301 + C47301 + C46968 * C360 + C46973 * C1920 +
             C47302 + C47302 + C46969 * C1930 + C46975 * C3369 + C47303 +
             C47303 + C154146 * C3377) *
                C153865 * C154178 +
            (C47358 + C47359 + C47360) * C153865 * C154159 +
            (C47361 + C47362 + C47363) * C153865 * C154130) *
               C154094 -
           ((C46975 * C6156 + C49802 + C49802 + C154146 * C6168 +
             C46973 * C3371 + C49803 + C49803 + C46969 * C3379 +
             C46971 * C1918 + C49804 + C49804 + C46968 * C1928) *
                C153865 * C154130 +
            (C46975 * C6158 + C49805 + C49805 + C154146 * C6170 +
             C46973 * C3370 + C49806 + C49806 + C46969 * C3378 +
             C46971 * C1919 + C49807 + C49807 + C46968 * C1929) *
                C153865 * C154159 +
            (C46975 * C6160 + C49808 + C49808 + C154146 * C6172 +
             C46973 * C3369 + C49809 + C49809 + C46969 * C3377 +
             C46971 * C1920 + C49810 + C49810 + C46968 * C1930) *
                C153865 * C154178) *
               C153847) *
              C1629) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C46971 * C136 + C46978 + C46978 + C46968 * C152 + C46973 * C556 +
             C46979 + C46979 + C46969 * C580 + C46975 * C557 + C46980 + C46980 +
             C154146 * C581) *
                C154181 +
            (C51548 + C51549 + C51550) * C154169 + C51561 * C154143) *
               C153712 * C154094 -
           (C53934 * C154143 + (C52557 + C52558 + C52559) * C154169 +
            (C46975 * C2272 + C47600 + C47600 + C154146 * C2282 +
             C46973 * C557 + C47601 + C47601 + C46969 * C581 + C46971 * C556 +
             C47602 + C47602 + C46968 * C580) *
                C154181) *
               C153712 * C153847) *
              C154164 +
          (((C52559 + C52558 + C52557) * C154181 +
            (C52556 + C52555 + C52554) * C154169 +
            (C53941 + C53942 + C53943) * C154143) *
               C153712 * C153847 -
           (C52937 * C154143 + (C51553 + C51552 + C51551) * C154169 +
            (C51550 + C51549 + C51548) * C154181) *
               C153712 * C154094) *
              C154165 +
          ((C51561 * C154181 + (C51556 + C51555 + C51554) * C154169 +
            (C52944 + C52945 + C52946) * C154143) *
               C153712 * C154094 -
           ((C46975 * C29880 + C53931 + C53931 + C154146 * C29884 +
             C46973 * C28358 + C53932 + C53932 + C46969 * C28362 +
             C46971 * C5559 + C53933 + C53933 + C46968 * C5565) *
                C154143 +
            (C53943 + C53942 + C53941) * C154169 + C53934 * C154181) *
               C153712 * C153847) *
              C1629) *
         C153748) /
            (p * q * std::sqrt(p + q));
    d2ee[217] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C136 + C161 + C161 + C153882 * C152) * C153865 * C123 +
                C199 * C124 + C200 * C125 + C201 * C126 + C202 * C127) *
                   C153783 * C1251 -
               (C420 * C127 + C421 * C126 + C422 * C125 + C423 * C124 +
                (C134 * C335 + C380 + C380 + C153882 * C359) * C153865 * C123) *
                   C153783 * C153819) *
                  C1253 +
              ((C423 * C123 + C422 * C124 + C421 * C125 + C420 * C126 +
                C785 * C127) *
                   C153783 * C153819 -
               (C203 * C127 + C202 * C126 + C201 * C125 + C200 * C124 +
                C199 * C123) *
                   C153783 * C1251) *
                  C1254 +
              ((C200 * C123 + C201 * C124 + C202 * C125 + C203 * C126 +
                C204 * C127) *
                   C153783 * C1251 -
               ((C134 * C775 + C781 + C781 + C153882 * C777) * C153865 * C127 +
                C785 * C126 + C420 * C125 + C421 * C124 + C422 * C123) *
                   C153783 * C153819) *
                  C1255) +
         std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             (((C134 * C136 + C161 + C161 + C153882 * C152) * C153865 * C123 +
               C199 * C124 + C200 * C125 + C201 * C126 + C202 * C127) *
                  C153783 * C1338 -
              (C420 * C127 + C421 * C126 + C422 * C125 + C423 * C124 +
               (C134 * C335 + C380 + C380 + C153882 * C359) * C153865 * C123) *
                  C153783 * C1339 +
              ((C134 * C336 + C381 + C381 + C153882 * C360) * C153865 * C123 +
               C424 * C124 + C425 * C125 + C426 * C126 + C427 * C127) *
                  C153783 * C1340 -
              ((C134 * C1343 + C1359 + C1359 + C153882 * C1353) * C153865 *
                   C127 +
               (C134 * C1344 + C1360 + C1360 + C153882 * C1354) * C153865 *
                   C126 +
               (C134 * C1345 + C1361 + C1361 + C153882 * C1355) * C153865 *
                   C125 +
               (C134 * C1346 + C1362 + C1362 + C153882 * C1356) * C153865 *
                   C124 +
               (C134 * C1347 + C1363 + C1363 + C153882 * C1357) * C153865 *
                   C123) *
                  C153783 * C1341) *
             C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C153865 * C123 +
            C199 * C124 + C200 * C125 + C201 * C126 + C202 * C127) *
               C549 -
           (C641 * C127 + C642 * C126 + C643 * C125 + C644 * C124 +
            (C134 * C556 + C601 + C601 + C153882 * C580) * C153865 * C123) *
               C550 +
           ((C134 * C557 + C602 + C602 + C153882 * C581) * C153865 * C123 +
            C645 * C124 + C646 * C125 + C647 * C126 + C648 * C127) *
               C551) *
              C1251 +
          (((C134 * C1081 + C1100 + C1100 + C153882 * C1093) * C153865 * C123 +
            C1126 * C124 + C1127 * C125 + C1128 * C126 + C1129 * C127) *
               C550 -
           (C420 * C127 + C421 * C126 + C422 * C125 + C423 * C124 +
            (C134 * C335 + C380 + C380 + C153882 * C359) * C153865 * C123) *
               C549 -
           ((C134 * C1485 + C1501 + C1501 + C153882 * C1495) * C153865 * C127 +
            (C134 * C1486 + C1502 + C1502 + C153882 * C1496) * C153865 * C126 +
            (C134 * C1487 + C1503 + C1503 + C153882 * C1497) * C153865 * C125 +
            (C134 * C1488 + C1504 + C1504 + C153882 * C1498) * C153865 * C124 +
            (C134 * C1489 + C1505 + C1505 + C153882 * C1499) * C153865 * C123) *
               C551) *
              C153819) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C154181 +
             C3138 * C154169 + C3139 * C154143) *
                C2846 +
            (C2850 + C2851 + C2852) * C2847 + C2864 * C154130) *
               C153783 * C1251 -
           (C3650 * C154130 + (C3147 + C3106 + C3107) * C2847 +
            (C3142 * C154143 + C3139 * C154169 + C3138 * C154181) * C2846) *
               C153783 * C153819) *
              C1253 +
          (((C3107 + C3106 + C3147) * C2846 + (C3103 + C3102 + C3146) * C2847 +
            (C3647 + C3648 + C3649) * C154130) *
               C153783 * C153819 -
           (C2865 * C154130 + (C2855 + C2854 + C2853) * C2847 +
            (C2852 + C2851 + C2850) * C2846) *
               C153783 * C1251) *
              C1254 +
          ((C2864 * C2846 + (C2858 + C2857 + C2856) * C2847 +
            (C2859 + C2860 + C2861) * C154130) *
               C153783 * C1251 -
           (((C134 * C1343 + C1359 + C1359 + C153882 * C1353) * C154143 +
             C419 * C154169 + C412 * C154181) *
                C154130 +
            (C3649 + C3648 + C3647) * C2847 + C3650 * C2846) *
               C153783 * C153819) *
              C1255)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C154181 +
            C3138 * C154169 + C3139 * C154143) *
               C2846 +
           (C2850 + C2851 + C2852) * C2847 + C2864 * C154130) *
              C153783 * C1338 -
          (C3650 * C154130 + (C3147 + C3106 + C3107) * C2847 +
           (C3142 * C154143 + C3139 * C154169 + C3138 * C154181) * C2846) *
              C153783 * C1339 +
          ((C3139 * C154181 + C3142 * C154169 + C4591 * C154143) * C2846 +
           (C3111 + C3148 + C3149) * C2847 +
           (C3115 + C3150 + C3151) * C154130) *
              C153783 * C1340 -
          (((C134 * C4574 + C4586 + C4586 + C153882 * C4580) * C154143 +
            C3144 * C154169 + C3140 * C154181) *
               C154130 +
           ((C134 * C4575 + C4587 + C4587 + C153882 * C4581) * C154143 +
            C3143 * C154169 + C3141 * C154181) *
               C2847 +
           ((C134 * C4576 + C4588 + C4588 + C153882 * C4582) * C154143 +
            C4591 * C154169 + C3142 * C154181) *
               C2846) *
              C153783 * C1341) *
         C153748) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C154181 +
             C3138 * C154169 + C3139 * C154143) *
                C2846 +
            (C2850 + C2851 + C2852) * C2847 + C2864 * C154130) *
               C549 -
           (C3874 * C154130 + (C3423 + C3388 + C3389) * C2847 +
            (C4205 * C154143 + C4206 * C154169 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C154181) *
                C2846) *
               C550 +
           (((C134 * C557 + C602 + C602 + C153882 * C581) * C154181 +
             C4830 * C154169 + C4831 * C154143) *
                C2846 +
            (C3391 + C3424 + C3425) * C2847 +
            (C3397 + C3426 + C3427) * C154130) *
               C551) *
              C1251 +
          (((C4206 * C154181 + C4205 * C154169 +
             (C134 * C4168 + C4185 + C4185 + C153882 * C4176) * C154143) *
                C2846 +
            (C4186 + C4187 + C4209) * C2847 +
            (C4191 + C4192 + C4210) * C154130) *
               C550 -
           (C3650 * C154130 + (C3147 + C3106 + C3107) * C2847 +
            (C3142 * C154143 + C3139 * C154169 + C3138 * C154181) * C2846) *
               C549 -
           (((C134 * C4809 + C4823 + C4823 + C153882 * C4815) * C154143 +
             C3421 * C154169 + C3420 * C154181) *
                C154130 +
            ((C134 * C4810 + C4824 + C4824 + C153882 * C4816) * C154143 +
             C3419 * C154169 + C3418 * C154181) *
                C2847 +
            ((C134 * C4811 + C4825 + C4825 + C153882 * C4817) * C154143 +
             C4831 * C154169 + C4830 * C154181) *
                C2846) *
               C551) *
              C153819) *
         C153748) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C24168 +
             C3138 * C24169 + C3139 * C154143) *
                C154178 +
            (C24175 + C24176 + C24177) * C154159 + C24189 * C154130) *
               C153783 * C1251 -
           (C24873 * C154130 + (C24412 + C24413 + C24414) * C154159 +
            (C3142 * C154143 + C3139 * C24169 + C3138 * C24168) * C154178) *
               C153783 * C153819) *
              C1253 +
          (((C24414 + C24413 + C24412) * C154178 +
            (C24411 + C24410 + C24409) * C154159 +
            (C24870 + C24871 + C24872) * C154130) *
               C153783 * C153819 -
           (C24190 * C154130 + (C24180 + C24179 + C24178) * C154159 +
            (C24177 + C24176 + C24175) * C154178) *
               C153783 * C1251) *
              C1254 +
          ((C24189 * C154178 + (C24183 + C24182 + C24181) * C154159 +
            (C24184 + C24185 + C24186) * C154130) *
               C153783 * C1251 -
           (((C134 * C1343 + C1359 + C1359 + C153882 * C1353) * C154143 +
             C419 * C24169 + C412 * C24168) *
                C154130 +
            (C24872 + C24871 + C24870) * C154159 + C24873 * C154178) *
               C153783 * C153819) *
              C1255)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C24168 +
            C3138 * C24169 + C3139 * C154143) *
               C154178 +
           (C24175 + C24176 + C24177) * C154159 + C24189 * C154130) *
              C153783 * C1338 -
          (C24873 * C154130 + (C24412 + C24413 + C24414) * C154159 +
           (C3142 * C154143 + C3139 * C24169 + C3138 * C24168) * C154178) *
              C153783 * C1339 +
          ((C3139 * C24168 + C3142 * C24169 + C4591 * C154143) * C154178 +
           (C24415 + C24416 + C24417) * C154159 +
           (C24418 + C24419 + C24420) * C154130) *
              C153783 * C1340 -
          (((C134 * C4574 + C4586 + C4586 + C153882 * C4580) * C154143 +
            C3144 * C24169 + C3140 * C24168) *
               C154130 +
           ((C134 * C4575 + C4587 + C4587 + C153882 * C4581) * C154143 +
            C3143 * C24169 + C3141 * C24168) *
               C154159 +
           ((C134 * C4576 + C4588 + C4588 + C153882 * C4582) * C154143 +
            C4591 * C24169 + C3142 * C24168) *
               C154178) *
              C153783 * C1341) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C24168 +
             C3138 * C24169 + C3139 * C154143) *
                C154178 +
            (C24175 + C24176 + C24177) * C154159 + C24189 * C154130) *
               C549 -
           (C25096 * C154130 + (C24642 + C24643 + C24644) * C154159 +
            (C4205 * C154143 + C4206 * C24169 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C24168) *
                C154178) *
               C550 +
           (((C134 * C557 + C602 + C602 + C153882 * C581) * C24168 +
             C4830 * C24169 + C4831 * C154143) *
                C154178 +
            (C24645 + C24646 + C24647) * C154159 +
            (C24648 + C24649 + C24650) * C154130) *
               C551) *
              C1251 +
          (((C4206 * C24168 + C4205 * C24169 + C5574 * C154143) * C154178 +
            (C25387 + C25388 + C25389) * C154159 +
            (C25390 + C25391 + C25392) * C154130) *
               C550 -
           (C24873 * C154130 + (C24412 + C24413 + C24414) * C154159 +
            (C3142 * C154143 + C3139 * C24169 + C3138 * C24168) * C154178) *
               C549 -
           (((C134 * C4809 + C4823 + C4823 + C153882 * C4815) * C154143 +
             C3421 * C24169 + C3420 * C24168) *
                C154130 +
            ((C134 * C4810 + C4824 + C4824 + C153882 * C4816) * C154143 +
             C3419 * C24169 + C3418 * C24168) *
                C154159 +
            ((C134 * C4811 + C4825 + C4825 + C153882 * C4817) * C154143 +
             C4831 * C24169 + C4830 * C24168) *
                C154178) *
               C551) *
              C153819) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C28090 +
            C3138 * C28091 + C3139 * C28092 + C3142 * C28093 + C4591 * C28094) *
               C153712 * C153783 * C1251 -
           (C28235 * C28094 + C4591 * C28093 + C3142 * C28092 + C3139 * C28091 +
            C3138 * C28090) *
               C153712 * C153783 * C153819) *
              C1253 +
          ((C415 * C28090 + C416 * C28091 + C3141 * C28092 + C3143 * C28093 +
            C28236 * C28094) *
               C153712 * C153783 * C153819 -
           (C3143 * C28094 + C3141 * C28093 + C416 * C28092 + C415 * C28091 +
            C193 * C28090) *
               C153712 * C153783 * C1251) *
              C1254 +
          ((C194 * C28090 + C414 * C28091 + C417 * C28092 + C3140 * C28093 +
            C3144 * C28094) *
               C153712 * C153783 * C1251 -
           ((C134 * C4574 + C4586 + C4586 + C153882 * C4580) * C28094 +
            C3144 * C28093 + C3140 * C28092 + C417 * C28091 + C414 * C28090) *
               C153712 * C153783 * C153819) *
              C1255)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C136 + C161 + C161 + C153882 * C152) * C28090 +
           C3138 * C28091 + C3139 * C28092 + C3142 * C28093 + C4591 * C28094) *
              C153712 * C153783 * C1338 -
          (C28235 * C28094 + C4591 * C28093 + C3142 * C28092 + C3139 * C28091 +
           C3138 * C28090) *
              C153712 * C153783 * C1339 +
          (C3139 * C28090 + C3142 * C28091 + C4591 * C28092 + C28235 * C28093 +
           C29003 * C28094) *
              C153712 * C153783 * C1340 -
          ((C134 * C28994 + C29000 + C29000 + C153882 * C28996) * C28094 +
           C29003 * C28093 + C28235 * C28092 + C4591 * C28091 +
           C3142 * C28090) *
              C153712 * C153783 * C1341) *
         C153748) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C28090 +
            C3138 * C28091 + C3139 * C28092 + C3142 * C28093 + C4591 * C28094) *
               C153712 * C549 -
           (C28789 * C28094 + C5574 * C28093 + C4205 * C28092 + C4206 * C28091 +
            (C134 * C556 + C601 + C601 + C153882 * C580) * C28090) *
               C153712 * C550 +
           ((C134 * C557 + C602 + C602 + C153882 * C581) * C28090 +
            C4830 * C28091 + C4831 * C28092 + C29138 * C28093 +
            C29139 * C28094) *
               C153712 * C551) *
              C1251 +
          ((C4206 * C28090 + C4205 * C28091 + C5574 * C28092 + C28789 * C28093 +
            (C134 * C28772 + C28781 + C28781 + C153882 * C28776) * C28094) *
               C153712 * C550 -
           (C28235 * C28094 + C4591 * C28093 + C3142 * C28092 + C3139 * C28091 +
            C3138 * C28090) *
               C153712 * C549 -
           ((C134 * C29125 + C29133 + C29133 + C153882 * C29127) * C28094 +
            C29139 * C28093 + C29138 * C28092 + C4831 * C28091 +
            C4830 * C28090) *
               C153712 * C551) *
              C153819) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C46971 * C136 + C46978 + C46978 + C46968 * C152 + C46973 * C556 +
             C46979 + C46979 + C46969 * C580 + C46975 * C557 + C46980 + C46980 +
             C154146 * C581) *
                C153865 * C154178 +
            (C47044 + C47045 + C47046) * C153865 * C154159 + C47060 * C154130) *
               C153783 * C1251 -
           (C47898 * C154130 + (C47355 + C47356 + C47357) * C153865 * C154159 +
            (C46975 * C1489 + C47298 + C47298 + C154146 * C1499 +
             C46973 * C1081 + C47299 + C47299 + C46969 * C1093 + C46971 * C335 +
             C47300 + C47300 + C46968 * C359) *
                C153865 * C154178) *
               C153783 * C153819) *
              C1253 +
          (((C47357 + C47356 + C47355) * C153865 * C154178 +
            (C47354 + C47353 + C47352) * C153865 * C154159 +
            (C47902 + C47903 + C47904) * C153865 * C154130) *
               C153783 * C153819 -
           (C47061 * C154130 + (C47049 + C47048 + C47047) * C153865 * C154159 +
            (C47046 + C47045 + C47044) * C153865 * C154178) *
               C153783 * C1251) *
              C1254 +
          ((C47060 * C154178 + (C47052 + C47051 + C47050) * C153865 * C154159 +
            (C47053 + C47054 + C47055) * C153865 * C154130) *
               C153783 * C1251 -
           ((C46975 * C1485 + C47891 + C47891 + C154146 * C1495 +
             C46973 * C1085 + C47892 + C47892 + C46969 * C1097 + C46971 * C331 +
             C47893 + C47893 + C46968 * C355) *
                C153865 * C154130 +
            (C47904 + C47903 + C47902) * C153865 * C154159 + C47898 * C154178) *
               C153783 * C153819) *
              C1255)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C46971 * C136 + C46978 + C46978 + C46968 * C152 + C46973 * C556 +
            C46979 + C46979 + C46969 * C580 + C46975 * C557 + C46980 + C46980 +
            C154146 * C581) *
               C153865 * C154178 +
           (C47044 + C47045 + C47046) * C153865 * C154159 + C47060 * C154130) *
              C153783 * C1338 -
          (C47898 * C154130 + (C47355 + C47356 + C47357) * C153865 * C154159 +
           (C46975 * C1489 + C47298 + C47298 + C154146 * C1499 +
            C46973 * C1081 + C47299 + C47299 + C46969 * C1093 + C46971 * C335 +
            C47300 + C47300 + C46968 * C359) *
               C153865 * C154178) *
              C153783 * C1339 +
          ((C46971 * C336 + C47301 + C47301 + C46968 * C360 + C46973 * C1920 +
            C47302 + C47302 + C46969 * C1930 + C46975 * C3369 + C47303 +
            C47303 + C154146 * C3377) *
               C153865 * C154178 +
           (C47358 + C47359 + C47360) * C153865 * C154159 +
           (C47361 + C47362 + C47363) * C153865 * C154130) *
              C153783 * C1340 -
          ((C46975 * C4809 + C48840 + C48840 + C154146 * C4815 +
            C46973 * C4170 + C48841 + C48841 + C46969 * C4178 + C46971 * C1345 +
            C48842 + C48842 + C46968 * C1355) *
               C153865 * C154130 +
           (C46975 * C4810 + C48843 + C48843 + C154146 * C4816 +
            C46973 * C4169 + C48844 + C48844 + C46969 * C4177 + C46971 * C1346 +
            C48845 + C48845 + C46968 * C1356) *
               C153865 * C154159 +
           (C46975 * C4811 + C48846 + C48846 + C154146 * C4817 +
            C46973 * C4168 + C48847 + C48847 + C46969 * C4176 + C46971 * C1347 +
            C48848 + C48848 + C46968 * C1357) *
               C153865 * C154178) *
              C153783 * C1341) *
         C153748) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C46971 * C136 + C46978 + C46978 + C46968 * C152 + C46973 * C556 +
             C46979 + C46979 + C46969 * C580 + C46975 * C557 + C46980 + C46980 +
             C154146 * C581) *
                C153865 * C154178 +
            (C47044 + C47045 + C47046) * C153865 * C154159 + C47060 * C154130) *
               C549 -
           (C48137 * C154130 + (C47657 + C47658 + C47659) * C153865 * C154159 +
            (C46975 * C2272 + C47600 + C47600 + C154146 * C2282 +
             C46973 * C557 + C47601 + C47601 + C46969 * C581 + C46971 * C556 +
             C47602 + C47602 + C46968 * C580) *
                C153865 * C154178) *
               C550 +
           ((C46971 * C557 + C47603 + C47603 + C46968 * C581 + C46973 * C2272 +
             C47604 + C47604 + C46969 * C2282 + C46975 * C7665 + C47605 +
             C47605 + C154146 * C7673) *
                C153865 * C154178 +
            (C47660 + C47661 + C47662) * C153865 * C154159 +
            (C47663 + C47664 + C47665) * C153865 * C154130) *
               C551) *
              C1251 +
          (((C46971 * C1081 + C48434 + C48434 + C46968 * C1093 +
             C46973 * C1489 + C48435 + C48435 + C46969 * C1499 +
             C46975 * C6161 + C48436 + C48436 + C154146 * C6173) *
                C153865 * C154178 +
            (C48470 + C48471 + C48472) * C153865 * C154159 +
            (C48473 + C48474 + C48475) * C153865 * C154130) *
               C550 -
           (C47898 * C154130 + (C47355 + C47356 + C47357) * C153865 * C154159 +
            (C46975 * C1489 + C47298 + C47298 + C154146 * C1499 +
             C46973 * C1081 + C47299 + C47299 + C46969 * C1093 + C46971 * C335 +
             C47300 + C47300 + C46968 * C359) *
                C153865 * C154178) *
               C549 -
           ((C46975 * C9165 + C49067 + C49067 + C154146 * C9171 +
             C46973 * C6157 + C49068 + C49068 + C46969 * C6169 +
             C46971 * C1487 + C49069 + C49069 + C46968 * C1497) *
                C153865 * C154130 +
            (C46975 * C9166 + C49070 + C49070 + C154146 * C9172 +
             C46973 * C6159 + C49071 + C49071 + C46969 * C6171 +
             C46971 * C1488 + C49072 + C49072 + C46968 * C1498) *
                C153865 * C154159 +
            (C46975 * C9167 + C49073 + C49073 + C154146 * C9173 +
             C46973 * C6161 + C49074 + C49074 + C46969 * C6173 +
             C46971 * C1489 + C49075 + C49075 + C46968 * C1499) *
                C153865 * C154178) *
               C551) *
              C153819) *
         C153748) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C46971 * C136 + C46978 + C46978 + C46968 * C152 + C46973 * C556 +
             C46979 + C46979 + C46969 * C580 + C46975 * C557 + C46980 + C46980 +
             C154146 * C581) *
                C154181 +
            (C51548 + C51549 + C51550) * C154169 + C51561 * C154143) *
               C153712 * C153783 * C1251 -
           ((C51554 + C51555 + C51556) * C154143 +
            (C51553 + C51552 + C51551) * C154169 +
            (C51550 + C51549 + C51548) * C154181) *
               C153712 * C153783 * C153819) *
              C1253 +
          (((C47357 + C47356 + C47355) * C154181 +
            (C47358 + C47359 + C47360) * C154169 +
            (C51557 + C51558 + C51559) * C154143) *
               C153712 * C153783 * C153819 -
           (C51535 * C154143 + (C47355 + C47356 + C47357) * C154169 +
            (C47046 + C47045 + C47044) * C154181) *
               C153712 * C153783 * C1251) *
              C1254 +
          ((C47058 * C154181 + (C47354 + C47353 + C47352) * C154169 +
            (C47361 + C47362 + C47363) * C154143) *
               C153712 * C153783 * C1251 -
           ((C46975 * C4809 + C48840 + C48840 + C154146 * C4815 +
             C46973 * C4170 + C48841 + C48841 + C46969 * C4178 +
             C46971 * C1345 + C48842 + C48842 + C46968 * C1355) *
                C154143 +
            (C47363 + C47362 + C47361) * C154169 + C47894 * C154181) *
               C153712 * C153783 * C153819) *
              C1255)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C46971 * C136 + C46978 + C46978 + C46968 * C152 + C46973 * C556 +
            C46979 + C46979 + C46969 * C580 + C46975 * C557 + C46980 + C46980 +
            C154146 * C581) *
               C154181 +
           (C51548 + C51549 + C51550) * C154169 + C51561 * C154143) *
              C153712 * C153783 * C1338 -
          (C52937 * C154143 + (C51553 + C51552 + C51551) * C154169 +
           (C51550 + C51549 + C51548) * C154181) *
              C153712 * C153783 * C1339 +
          (C51561 * C154181 + (C51556 + C51555 + C51554) * C154169 +
           (C52944 + C52945 + C52946) * C154143) *
              C153712 * C153783 * C1340 -
          ((C46975 * C29125 + C52934 + C52934 + C154146 * C29127 +
            C46973 * C28772 + C52935 + C52935 + C46969 * C28776 +
            C46971 * C4576 + C52936 + C52936 + C46968 * C4582) *
               C154143 +
           (C52946 + C52945 + C52944) * C154169 + C52937 * C154181) *
              C153712 * C153783 * C1341) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C46971 * C136 + C46978 + C46978 + C46968 * C152 + C46973 * C556 +
             C46979 + C46979 + C46969 * C580 + C46975 * C557 + C46980 + C46980 +
             C154146 * C581) *
                C154181 +
            (C51548 + C51549 + C51550) * C154169 + C51561 * C154143) *
               C153712 * C549 -
           ((C52554 + C52555 + C52556) * C154143 +
            (C52557 + C52558 + C52559) * C154169 +
            (C46975 * C2272 + C47600 + C47600 + C154146 * C2282 +
             C46973 * C557 + C47601 + C47601 + C46969 * C581 + C46971 * C556 +
             C47602 + C47602 + C46968 * C580) *
                C154181) *
               C153712 * C550 +
           ((C46971 * C557 + C47603 + C47603 + C46968 * C581 + C46973 * C2272 +
             C47604 + C47604 + C46969 * C2282 + C46975 * C7665 + C47605 +
             C47605 + C154146 * C7673) *
                C154181 +
            (C53192 + C53193 + C53194) * C154169 +
            (C53195 + C53196 + C53197) * C154143) *
               C153712 * C551) *
              C1251 +
          (((C52559 + C52558 + C52557) * C154181 +
            (C52556 + C52555 + C52554) * C154169 +
            (C46971 * C4168 + C52524 + C52524 + C46968 * C4176 +
             C46973 * C4811 + C52525 + C52525 + C46969 * C4817 +
             C46975 * C29881 + C52526 + C52526 + C154146 * C29885) *
                C154143) *
               C153712 * C550 -
           (C52937 * C154143 + (C51553 + C51552 + C51551) * C154169 +
            (C51550 + C51549 + C51548) * C154181) *
               C153712 * C549 -
           ((C46975 * C32340 + C53177 + C53177 + C154146 * C32342 +
             C46973 * C29881 + C53178 + C53178 + C46969 * C29885 +
             C46971 * C4811 + C53179 + C53179 + C46968 * C4817) *
                C154143 +
            (C53197 + C53196 + C53195) * C154169 +
            (C53194 + C53193 + C53192) * C154181) *
               C153712 * C551) *
              C153819) *
         C153748) /
            (p * q * std::sqrt(p + q));
    d2ee[218] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C153882 * C152) * C154181 +
              C3138 * C154169 + C3139 * C154143) *
                 C2846 +
             (C2850 + C2851 + C2852) * C2847 + C2864 * C154130) *
                C154094 -
            (C3874 * C154130 + (C3423 + C3388 + C3389) * C2847 +
             (C4205 * C154143 + C4206 * C154169 +
              (C134 * C556 + C601 + C601 + C153882 * C580) * C154181) *
                 C2846) *
                C153847) *
               C1251 +
           (((C4206 * C154181 + C4205 * C154169 +
              (C134 * C4168 + C4185 + C4185 + C153882 * C4176) * C154143) *
                 C2846 +
             (C4186 + C4187 + C4209) * C2847 +
             (C4191 + C4192 + C4210) * C154130) *
                C153847 -
            (C3650 * C154130 + (C3147 + C3106 + C3107) * C2847 +
             (C3142 * C154143 + C3139 * C154169 + C3138 * C154181) * C2846) *
                C154094) *
               C153819) *
              C154085 +
          ((((C3389 + C3388 + C3423) * C2846 + (C3385 + C3384 + C3422) * C2847 +
             (C3870 + C3871 + C3878) * C154130) *
                C153847 -
            (C2865 * C154130 + (C2855 + C2854 + C2853) * C2847 +
             (C2852 + C2851 + C2850) * C2846) *
                C154094) *
               C1251 +
           (((C3107 + C3106 + C3147) * C2846 + (C3103 + C3102 + C3146) * C2847 +
             (C3647 + C3648 + C3649) * C154130) *
                C154094 -
            (((C134 * C4171 + C4196 + C4196 + C153882 * C4179) * C154143 +
              C3877 * C154169 + C1124 * C154181) *
                 C154130 +
             (C4210 + C4192 + C4191) * C2847 +
             (C4209 + C4187 + C4186) * C2846) *
                C153847) *
               C153819) *
              C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C153865 * C123 +
             C199 * C124 + C200 * C125 + C201 * C126 + C202 * C127) *
                C154094 -
            (C641 * C127 + C642 * C126 + C643 * C125 + C644 * C124 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C153865 * C123) *
                C153847) *
               C1251 +
           (((C134 * C1081 + C1100 + C1100 + C153882 * C1093) * C153865 * C123 +
             C1126 * C124 + C1127 * C125 + C1128 * C126 + C1129 * C127) *
                C153847 -
            (C420 * C127 + C421 * C126 + C422 * C125 + C423 * C124 +
             (C134 * C335 + C380 + C380 + C153882 * C359) * C153865 * C123) *
                C154094) *
               C153819) *
              C154085 +
          (((C644 * C123 + C643 * C124 + C642 * C125 + C641 * C126 +
             C919 * C127) *
                C153847 -
            (C203 * C127 + C202 * C126 + C201 * C125 + C200 * C124 +
             C199 * C123) *
                C154094) *
               C1251 +
           ((C423 * C123 + C422 * C124 + C421 * C125 + C420 * C126 +
             C785 * C127) *
                C154094 -
            ((C134 * C1086 + C1113 + C1113 + C153882 * C1098) * C153865 * C127 +
             C1129 * C126 + C1128 * C125 + C1127 * C124 + C1126 * C123) *
                C153847) *
               C153819) *
              C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C153882 * C152) * C24168 +
              C3138 * C24169 + C3139 * C154143) *
                 C154178 +
             (C24175 + C24176 + C24177) * C154159 + C24189 * C154130) *
                C154094 -
            (C25096 * C154130 + (C24642 + C24643 + C24644) * C154159 +
             (C4205 * C154143 + C4206 * C24169 +
              (C134 * C556 + C601 + C601 + C153882 * C580) * C24168) *
                 C154178) *
                C153847) *
               C1251 +
           (((C4206 * C24168 + C4205 * C24169 + C5574 * C154143) * C154178 +
             (C25387 + C25388 + C25389) * C154159 +
             (C25390 + C25391 + C25392) * C154130) *
                C153847 -
            (C24873 * C154130 + (C24412 + C24413 + C24414) * C154159 +
             (C3142 * C154143 + C3139 * C24169 + C3138 * C24168) * C154178) *
                C154094) *
               C153819) *
              C154085 +
          ((((C24644 + C24643 + C24642) * C154178 +
             (C24641 + C24640 + C24639) * C154159 +
             (C25093 + C25094 + C25095) * C154130) *
                C153847 -
            (C24190 * C154130 + (C24180 + C24179 + C24178) * C154159 +
             (C24177 + C24176 + C24175) * C154178) *
                C154094) *
               C1251 +
           (((C24414 + C24413 + C24412) * C154178 +
             (C24411 + C24410 + C24409) * C154159 +
             (C24870 + C24871 + C24872) * C154130) *
                C154094 -
            (((C134 * C4171 + C4196 + C4196 + C153882 * C4179) * C154143 +
              C3877 * C24169 + C1124 * C24168) *
                 C154130 +
             (C25392 + C25391 + C25390) * C154159 +
             (C25389 + C25388 + C25387) * C154178) *
                C153847) *
               C153819) *
              C153754)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C28090 +
             C3138 * C28091 + C3139 * C28092 + C3142 * C28093 +
             C4591 * C28094) *
                C153712 * C154094 -
            (C28789 * C28094 + C5574 * C28093 + C4205 * C28092 +
             C4206 * C28091 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C28090) *
                C153712 * C153847) *
               C1251 +
           ((C4206 * C28090 + C4205 * C28091 + C5574 * C28092 +
             C28789 * C28093 +
             (C134 * C28772 + C28781 + C28781 + C153882 * C28776) * C28094) *
                C153712 * C153847 -
            (C28235 * C28094 + C4591 * C28093 + C3142 * C28092 +
             C3139 * C28091 + C3138 * C28090) *
                C153712 * C154094) *
               C153819) *
              C154085 +
          (((C636 * C28090 + C1122 * C28091 + C3417 * C28092 + C4207 * C28093 +
             C28790 * C28094) *
                C153712 * C153847 -
            (C3143 * C28094 + C3141 * C28093 + C416 * C28092 + C415 * C28091 +
             C193 * C28090) *
                C153712 * C154094) *
               C1251 +
           ((C415 * C28090 + C416 * C28091 + C3141 * C28092 + C3143 * C28093 +
             C28236 * C28094) *
                C153712 * C154094 -
            ((C134 * C28773 + C28784 + C28784 + C153882 * C28777) * C28094 +
             C28790 * C28093 + C4207 * C28092 + C3417 * C28091 +
             C1122 * C28090) *
                C153712 * C153847) *
               C153819) *
              C153754)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C46971 * C136 + C46978 + C46978 + C46968 * C152 + C46973 * C556 +
              C46979 + C46979 + C46969 * C580 + C46975 * C557 + C46980 +
              C46980 + C154146 * C581) *
                 C153865 * C154178 +
             (C47044 + C47045 + C47046) * C153865 * C154159 +
             C47060 * C154130) *
                C154094 -
            (C48137 * C154130 + (C47657 + C47658 + C47659) * C153865 * C154159 +
             (C46975 * C2272 + C47600 + C47600 + C154146 * C2282 +
              C46973 * C557 + C47601 + C47601 + C46969 * C581 + C46971 * C556 +
              C47602 + C47602 + C46968 * C580) *
                 C153865 * C154178) *
                C153847) *
               C1251 +
           (((C46971 * C1081 + C48434 + C48434 + C46968 * C1093 +
              C46973 * C1489 + C48435 + C48435 + C46969 * C1499 +
              C46975 * C6161 + C48436 + C48436 + C154146 * C6173) *
                 C153865 * C154178 +
             (C48470 + C48471 + C48472) * C153865 * C154159 +
             (C48473 + C48474 + C48475) * C153865 * C154130) *
                C153847 -
            (C47898 * C154130 + (C47355 + C47356 + C47357) * C153865 * C154159 +
             (C46975 * C1489 + C47298 + C47298 + C154146 * C1499 +
              C46973 * C1081 + C47299 + C47299 + C46969 * C1093 +
              C46971 * C335 + C47300 + C47300 + C46968 * C359) *
                 C153865 * C154178) *
                C154094) *
               C153819) *
              C154085 +
          ((((C47659 + C47658 + C47657) * C153865 * C154178 +
             (C47656 + C47655 + C47654) * C153865 * C154159 +
             (C48141 + C48142 + C48143) * C153865 * C154130) *
                C153847 -
            (C47061 * C154130 + (C47049 + C47048 + C47047) * C153865 * C154159 +
             (C47046 + C47045 + C47044) * C153865 * C154178) *
                C154094) *
               C1251 +
           (((C47357 + C47356 + C47355) * C153865 * C154178 +
             (C47354 + C47353 + C47352) * C153865 * C154159 +
             (C47902 + C47903 + C47904) * C153865 * C154130) *
                C154094 -
            ((C46975 * C8529 + C48455 + C48455 + C154146 * C8531 +
              C46973 * C1486 + C48456 + C48456 + C46969 * C1496 +
              C46971 * C1084 + C48457 + C48457 + C46968 * C1096) *
                 C153865 * C154130 +
             (C48475 + C48474 + C48473) * C153865 * C154159 +
             (C48472 + C48471 + C48470) * C153865 * C154178) *
                C153847) *
               C153819) *
              C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C46971 * C136 + C46978 + C46978 + C46968 * C152 + C46973 * C556 +
              C46979 + C46979 + C46969 * C580 + C46975 * C557 + C46980 +
              C46980 + C154146 * C581) *
                 C154181 +
             (C51548 + C51549 + C51550) * C154169 + C51561 * C154143) *
                C153712 * C154094 -
            ((C52554 + C52555 + C52556) * C154143 +
             (C52557 + C52558 + C52559) * C154169 +
             (C46975 * C2272 + C47600 + C47600 + C154146 * C2282 +
              C46973 * C557 + C47601 + C47601 + C46969 * C581 + C46971 * C556 +
              C47602 + C47602 + C46968 * C580) *
                 C154181) *
                C153712 * C153847) *
               C1251 +
           (((C52559 + C52558 + C52557) * C154181 +
             (C52556 + C52555 + C52554) * C154169 +
             (C46971 * C4168 + C52524 + C52524 + C46968 * C4176 +
              C46973 * C4811 + C52525 + C52525 + C46969 * C4817 +
              C46975 * C29881 + C52526 + C52526 + C154146 * C29885) *
                 C154143) *
                C153712 * C153847 -
            (C52937 * C154143 + (C51553 + C51552 + C51551) * C154169 +
             (C51550 + C51549 + C51548) * C154181) *
                C153712 * C154094) *
               C153819) *
              C154085 +
          ((((C47659 + C47658 + C47657) * C154181 +
             (C48470 + C48471 + C48472) * C154169 +
             (C52560 + C52561 + C52562) * C154143) *
                C153712 * C153847 -
            (C51535 * C154143 + (C47355 + C47356 + C47357) * C154169 +
             (C47046 + C47045 + C47044) * C154181) *
                C153712 * C154094) *
               C1251 +
           (((C47357 + C47356 + C47355) * C154181 +
             (C47358 + C47359 + C47360) * C154169 +
             (C51557 + C51558 + C51559) * C154143) *
                C153712 * C154094 -
            ((C46975 * C31684 + C52533 + C52533 + C154146 * C31686 +
              C46973 * C4810 + C52534 + C52534 + C46969 * C4816 +
              C46971 * C4169 + C52535 + C52535 + C46968 * C4177) *
                 C154143 +
             (C52562 + C52561 + C52560) * C154169 +
             (C48472 + C48471 + C48470) * C154181) *
                C153712 * C153847) *
               C153819) *
              C153754)) /
            (p * q * std::sqrt(p + q));
    d2ee[219] +=
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C136 + C161 + C161 + C153882 * C152) * C153865 * C123 +
           C199 * C124 + C200 * C125 + C201 * C126 + C202 * C127) *
              C153783 * C1338 -
          (C420 * C127 + C421 * C126 + C422 * C125 + C423 * C124 +
           (C134 * C335 + C380 + C380 + C153882 * C359) * C153865 * C123) *
              C153783 * C1339 +
          ((C134 * C336 + C381 + C381 + C153882 * C360) * C153865 * C123 +
           C424 * C124 + C425 * C125 + C426 * C126 + C427 * C127) *
              C153783 * C1340 -
          ((C134 * C1343 + C1359 + C1359 + C153882 * C1353) * C153865 * C127 +
           (C134 * C1344 + C1360 + C1360 + C153882 * C1354) * C153865 * C126 +
           (C134 * C1345 + C1361 + C1361 + C153882 * C1355) * C153865 * C125 +
           (C134 * C1346 + C1362 + C1362 + C153882 * C1356) * C153865 * C124 +
           (C134 * C1347 + C1363 + C1363 + C153882 * C1357) * C153865 * C123) *
              C153783 * C1341) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C153865 * C123 +
            C199 * C124 + C200 * C125 + C201 * C126 + C202 * C127) *
               C153783 * C1251 -
           (C420 * C127 + C421 * C126 + C422 * C125 + C423 * C124 +
            (C134 * C335 + C380 + C380 + C153882 * C359) * C153865 * C123) *
               C153783 * C153819) *
              C1253 +
          ((C423 * C123 + C422 * C124 + C421 * C125 + C420 * C126 +
            C785 * C127) *
               C153783 * C153819 -
           (C203 * C127 + C202 * C126 + C201 * C125 + C200 * C124 +
            C199 * C123) *
               C153783 * C1251) *
              C1254 +
          ((C200 * C123 + C201 * C124 + C202 * C125 + C203 * C126 +
            C204 * C127) *
               C153783 * C1251 -
           ((C134 * C775 + C781 + C781 + C153882 * C777) * C153865 * C127 +
            C785 * C126 + C420 * C125 + C421 * C124 + C422 * C123) *
               C153783 * C153819) *
              C1255)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C154181 +
             C3138 * C154169 + C3139 * C154143) *
                C2846 +
            (C2850 + C2851 + C2852) * C2847 + C2864 * C154130) *
               C153783 * C1251 -
           (C3650 * C154130 + (C3147 + C3106 + C3107) * C2847 +
            (C3142 * C154143 + C3139 * C154169 + C3138 * C154181) * C2846) *
               C153783 * C153819) *
              C1253 +
          (((C3107 + C3106 + C3147) * C2846 + (C3103 + C3102 + C3146) * C2847 +
            (C3647 + C3648 + C3649) * C154130) *
               C153783 * C153819 -
           (C2865 * C154130 + (C2855 + C2854 + C2853) * C2847 +
            (C2852 + C2851 + C2850) * C2846) *
               C153783 * C1251) *
              C1254 +
          ((C2864 * C2846 + (C2858 + C2857 + C2856) * C2847 +
            (C2859 + C2860 + C2861) * C154130) *
               C153783 * C1251 -
           (((C134 * C1343 + C1359 + C1359 + C153882 * C1353) * C154143 +
             C419 * C154169 + C412 * C154181) *
                C154130 +
            (C3649 + C3648 + C3647) * C2847 + C3650 * C2846) *
               C153783 * C153819) *
              C1255)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C154181 +
            C3138 * C154169 + C3139 * C154143) *
               C2846 +
           (C2850 + C2851 + C2852) * C2847 + C2864 * C154130) *
              C153783 * C1338 -
          (C3650 * C154130 + (C3147 + C3106 + C3107) * C2847 +
           (C3142 * C154143 + C3139 * C154169 + C3138 * C154181) * C2846) *
              C153783 * C1339 +
          ((C3139 * C154181 + C3142 * C154169 + C4591 * C154143) * C2846 +
           (C3111 + C3148 + C3149) * C2847 +
           (C3115 + C3150 + C3151) * C154130) *
              C153783 * C1340 -
          (((C134 * C4574 + C4586 + C4586 + C153882 * C4580) * C154143 +
            C3144 * C154169 + C3140 * C154181) *
               C154130 +
           ((C134 * C4575 + C4587 + C4587 + C153882 * C4581) * C154143 +
            C3143 * C154169 + C3141 * C154181) *
               C2847 +
           ((C134 * C4576 + C4588 + C4588 + C153882 * C4582) * C154143 +
            C4591 * C154169 + C3142 * C154181) *
               C2846) *
              C153783 * C1341) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C24168 +
             C3138 * C24169 + C3139 * C154143) *
                C154178 +
            (C24175 + C24176 + C24177) * C154159 + C24189 * C154130) *
               C153783 * C1251 -
           (C24873 * C154130 + (C24412 + C24413 + C24414) * C154159 +
            (C3142 * C154143 + C3139 * C24169 + C3138 * C24168) * C154178) *
               C153783 * C153819) *
              C1253 +
          (((C24414 + C24413 + C24412) * C154178 +
            (C24411 + C24410 + C24409) * C154159 +
            (C24870 + C24871 + C24872) * C154130) *
               C153783 * C153819 -
           (C24190 * C154130 + (C24180 + C24179 + C24178) * C154159 +
            (C24177 + C24176 + C24175) * C154178) *
               C153783 * C1251) *
              C1254 +
          ((C24189 * C154178 + (C24183 + C24182 + C24181) * C154159 +
            (C24184 + C24185 + C24186) * C154130) *
               C153783 * C1251 -
           (((C134 * C1343 + C1359 + C1359 + C153882 * C1353) * C154143 +
             C419 * C24169 + C412 * C24168) *
                C154130 +
            (C24872 + C24871 + C24870) * C154159 + C24873 * C154178) *
               C153783 * C153819) *
              C1255)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C24168 +
            C3138 * C24169 + C3139 * C154143) *
               C154178 +
           (C24175 + C24176 + C24177) * C154159 + C24189 * C154130) *
              C153783 * C1338 -
          (C24873 * C154130 + (C24412 + C24413 + C24414) * C154159 +
           (C3142 * C154143 + C3139 * C24169 + C3138 * C24168) * C154178) *
              C153783 * C1339 +
          ((C3139 * C24168 + C3142 * C24169 + C4591 * C154143) * C154178 +
           (C24415 + C24416 + C24417) * C154159 +
           (C24418 + C24419 + C24420) * C154130) *
              C153783 * C1340 -
          (((C134 * C4574 + C4586 + C4586 + C153882 * C4580) * C154143 +
            C3144 * C24169 + C3140 * C24168) *
               C154130 +
           ((C134 * C4575 + C4587 + C4587 + C153882 * C4581) * C154143 +
            C3143 * C24169 + C3141 * C24168) *
               C154159 +
           ((C134 * C4576 + C4588 + C4588 + C153882 * C4582) * C154143 +
            C4591 * C24169 + C3142 * C24168) *
               C154178) *
              C153783 * C1341) *
         C153748) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C28090 +
            C3138 * C28091 + C3139 * C28092 + C3142 * C28093 + C4591 * C28094) *
               C153712 * C153783 * C1251 -
           (C28235 * C28094 + C4591 * C28093 + C3142 * C28092 + C3139 * C28091 +
            C3138 * C28090) *
               C153712 * C153783 * C153819) *
              C1253 +
          ((C415 * C28090 + C416 * C28091 + C3141 * C28092 + C3143 * C28093 +
            C28236 * C28094) *
               C153712 * C153783 * C153819 -
           (C3143 * C28094 + C3141 * C28093 + C416 * C28092 + C415 * C28091 +
            C193 * C28090) *
               C153712 * C153783 * C1251) *
              C1254 +
          ((C194 * C28090 + C414 * C28091 + C417 * C28092 + C3140 * C28093 +
            C3144 * C28094) *
               C153712 * C153783 * C1251 -
           ((C134 * C4574 + C4586 + C4586 + C153882 * C4580) * C28094 +
            C3144 * C28093 + C3140 * C28092 + C417 * C28091 + C414 * C28090) *
               C153712 * C153783 * C153819) *
              C1255)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C136 + C161 + C161 + C153882 * C152) * C28090 +
           C3138 * C28091 + C3139 * C28092 + C3142 * C28093 + C4591 * C28094) *
              C153712 * C153783 * C1338 -
          (C28235 * C28094 + C4591 * C28093 + C3142 * C28092 + C3139 * C28091 +
           C3138 * C28090) *
              C153712 * C153783 * C1339 +
          (C3139 * C28090 + C3142 * C28091 + C4591 * C28092 + C28235 * C28093 +
           C29003 * C28094) *
              C153712 * C153783 * C1340 -
          ((C134 * C28994 + C29000 + C29000 + C153882 * C28996) * C28094 +
           C29003 * C28093 + C28235 * C28092 + C4591 * C28091 +
           C3142 * C28090) *
              C153712 * C153783 * C1341) *
         C153748) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C46971 * C136 + C46978 + C46978 + C46968 * C152 + C46973 * C556 +
             C46979 + C46979 + C46969 * C580 + C46975 * C557 + C46980 + C46980 +
             C154146 * C581) *
                C153865 * C154178 +
            (C47044 + C47045 + C47046) * C153865 * C154159 + C47060 * C154130) *
               C153783 * C1251 -
           (C47898 * C154130 + (C47355 + C47356 + C47357) * C153865 * C154159 +
            (C46975 * C1489 + C47298 + C47298 + C154146 * C1499 +
             C46973 * C1081 + C47299 + C47299 + C46969 * C1093 + C46971 * C335 +
             C47300 + C47300 + C46968 * C359) *
                C153865 * C154178) *
               C153783 * C153819) *
              C1253 +
          (((C47357 + C47356 + C47355) * C153865 * C154178 +
            (C47354 + C47353 + C47352) * C153865 * C154159 +
            (C47902 + C47903 + C47904) * C153865 * C154130) *
               C153783 * C153819 -
           (C47061 * C154130 + (C47049 + C47048 + C47047) * C153865 * C154159 +
            (C47046 + C47045 + C47044) * C153865 * C154178) *
               C153783 * C1251) *
              C1254 +
          ((C47060 * C154178 + (C47052 + C47051 + C47050) * C153865 * C154159 +
            (C47053 + C47054 + C47055) * C153865 * C154130) *
               C153783 * C1251 -
           ((C46975 * C1485 + C47891 + C47891 + C154146 * C1495 +
             C46973 * C1085 + C47892 + C47892 + C46969 * C1097 + C46971 * C331 +
             C47893 + C47893 + C46968 * C355) *
                C153865 * C154130 +
            (C47904 + C47903 + C47902) * C153865 * C154159 + C47898 * C154178) *
               C153783 * C153819) *
              C1255)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C46971 * C136 + C46978 + C46978 + C46968 * C152 + C46973 * C556 +
            C46979 + C46979 + C46969 * C580 + C46975 * C557 + C46980 + C46980 +
            C154146 * C581) *
               C153865 * C154178 +
           (C47044 + C47045 + C47046) * C153865 * C154159 + C47060 * C154130) *
              C153783 * C1338 -
          (C47898 * C154130 + (C47355 + C47356 + C47357) * C153865 * C154159 +
           (C46975 * C1489 + C47298 + C47298 + C154146 * C1499 +
            C46973 * C1081 + C47299 + C47299 + C46969 * C1093 + C46971 * C335 +
            C47300 + C47300 + C46968 * C359) *
               C153865 * C154178) *
              C153783 * C1339 +
          ((C46971 * C336 + C47301 + C47301 + C46968 * C360 + C46973 * C1920 +
            C47302 + C47302 + C46969 * C1930 + C46975 * C3369 + C47303 +
            C47303 + C154146 * C3377) *
               C153865 * C154178 +
           (C47358 + C47359 + C47360) * C153865 * C154159 +
           (C47361 + C47362 + C47363) * C153865 * C154130) *
              C153783 * C1340 -
          ((C46975 * C4809 + C48840 + C48840 + C154146 * C4815 +
            C46973 * C4170 + C48841 + C48841 + C46969 * C4178 + C46971 * C1345 +
            C48842 + C48842 + C46968 * C1355) *
               C153865 * C154130 +
           (C46975 * C4810 + C48843 + C48843 + C154146 * C4816 +
            C46973 * C4169 + C48844 + C48844 + C46969 * C4177 + C46971 * C1346 +
            C48845 + C48845 + C46968 * C1356) *
               C153865 * C154159 +
           (C46975 * C4811 + C48846 + C48846 + C154146 * C4817 +
            C46973 * C4168 + C48847 + C48847 + C46969 * C4176 + C46971 * C1347 +
            C48848 + C48848 + C46968 * C1357) *
               C153865 * C154178) *
              C153783 * C1341) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C46971 * C136 + C46978 + C46978 + C46968 * C152 + C46973 * C556 +
             C46979 + C46979 + C46969 * C580 + C46975 * C557 + C46980 + C46980 +
             C154146 * C581) *
                C154181 +
            (C51548 + C51549 + C51550) * C154169 + C51561 * C154143) *
               C153712 * C153783 * C1251 -
           ((C51554 + C51555 + C51556) * C154143 +
            (C51553 + C51552 + C51551) * C154169 +
            (C51550 + C51549 + C51548) * C154181) *
               C153712 * C153783 * C153819) *
              C1253 +
          (((C47357 + C47356 + C47355) * C154181 +
            (C47358 + C47359 + C47360) * C154169 +
            (C51557 + C51558 + C51559) * C154143) *
               C153712 * C153783 * C153819 -
           (C51535 * C154143 + (C47355 + C47356 + C47357) * C154169 +
            (C47046 + C47045 + C47044) * C154181) *
               C153712 * C153783 * C1251) *
              C1254 +
          ((C47058 * C154181 + (C47354 + C47353 + C47352) * C154169 +
            (C47361 + C47362 + C47363) * C154143) *
               C153712 * C153783 * C1251 -
           ((C46975 * C4809 + C48840 + C48840 + C154146 * C4815 +
             C46973 * C4170 + C48841 + C48841 + C46969 * C4178 +
             C46971 * C1345 + C48842 + C48842 + C46968 * C1355) *
                C154143 +
            (C47363 + C47362 + C47361) * C154169 + C47894 * C154181) *
               C153712 * C153783 * C153819) *
              C1255)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C46971 * C136 + C46978 + C46978 + C46968 * C152 + C46973 * C556 +
            C46979 + C46979 + C46969 * C580 + C46975 * C557 + C46980 + C46980 +
            C154146 * C581) *
               C154181 +
           (C51548 + C51549 + C51550) * C154169 + C51561 * C154143) *
              C153712 * C153783 * C1338 -
          (C52937 * C154143 + (C51553 + C51552 + C51551) * C154169 +
           (C51550 + C51549 + C51548) * C154181) *
              C153712 * C153783 * C1339 +
          (C51561 * C154181 + (C51556 + C51555 + C51554) * C154169 +
           (C52944 + C52945 + C52946) * C154143) *
              C153712 * C153783 * C1340 -
          ((C46975 * C29125 + C52934 + C52934 + C154146 * C29127 +
            C46973 * C28772 + C52935 + C52935 + C46969 * C28776 +
            C46971 * C4576 + C52936 + C52936 + C46968 * C4582) *
               C154143 +
           (C52946 + C52945 + C52944) * C154169 + C52937 * C154181) *
              C153712 * C153783 * C1341) *
         C153748) /
            (p * q * std::sqrt(p + q));
    d2ee[220] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C153882 * C152) * C154181 +
              C3138 * C154169 + C3139 * C154143) *
                 C2846 +
             (C2850 + C2851 + C2852) * C2847 + C2864 * C154130) *
                C2058 -
            (C3874 * C154130 + (C3423 + C3388 + C3389) * C2847 +
             (C4205 * C154143 + C4206 * C154169 +
              (C134 * C556 + C601 + C601 + C153882 * C580) * C154181) *
                 C2846) *
                C153847) *
               C154093 +
           (((C4206 * C154181 + C4205 * C154169 + C5574 * C154143) * C2846 +
             (C4186 + C4187 + C4209) * C2847 +
             (C4191 + C4192 + C4210) * C154130) *
                C153847 -
            (C3650 * C154130 + (C3147 + C3106 + C3107) * C2847 +
             (C3142 * C154143 + C3139 * C154169 + C3138 * C154181) * C2846) *
                C2058) *
               C153819) *
              C154085 +
          ((((C3389 + C3388 + C3423) * C2846 + (C3385 + C3384 + C3422) * C2847 +
             (C3870 + C3871 + C3878) * C154130) *
                C153847 -
            (C2865 * C154130 + (C2855 + C2854 + C2853) * C2847 +
             (C2852 + C2851 + C2850) * C2846) *
                C2058) *
               C154093 +
           (((C3107 + C3106 + C3147) * C2846 + (C3103 + C3102 + C3146) * C2847 +
             (C3647 + C3648 + C3649) * C154130) *
                C2058 -
            (((C134 * C4171 + C4196 + C4196 + C153882 * C4179) * C154143 +
              C3877 * C154169 + C1124 * C154181) *
                 C154130 +
             (C4210 + C4192 + C4191) * C2847 +
             (C4209 + C4187 + C4186) * C2846) *
                C153847) *
               C153819) *
              C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C153865 * C123 +
             C199 * C124 + C200 * C125 + C201 * C126 + C202 * C127) *
                C2058 -
            (C641 * C127 + C642 * C126 + C643 * C125 + C644 * C124 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C153865 * C123) *
                C153847) *
               C154093 +
           (((C134 * C1081 + C1100 + C1100 + C153882 * C1093) * C153865 * C123 +
             C1126 * C124 + C1127 * C125 + C1128 * C126 + C1129 * C127) *
                C153847 -
            (C420 * C127 + C421 * C126 + C422 * C125 + C423 * C124 +
             (C134 * C335 + C380 + C380 + C153882 * C359) * C153865 * C123) *
                C2058) *
               C153819) *
              C154085 +
          (((C644 * C123 + C643 * C124 + C642 * C125 + C641 * C126 +
             C919 * C127) *
                C153847 -
            (C203 * C127 + C202 * C126 + C201 * C125 + C200 * C124 +
             C199 * C123) *
                C2058) *
               C154093 +
           ((C423 * C123 + C422 * C124 + C421 * C125 + C420 * C126 +
             C785 * C127) *
                C2058 -
            ((C134 * C1086 + C1113 + C1113 + C153882 * C1098) * C153865 * C127 +
             C1129 * C126 + C1128 * C125 + C1127 * C124 + C1126 * C123) *
                C153847) *
               C153819) *
              C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C153882 * C152) * C24168 +
              C3138 * C24169 + C3139 * C154143) *
                 C154178 +
             (C24175 + C24176 + C24177) * C154159 + C24189 * C154130) *
                C2058 -
            (C25096 * C154130 + (C24642 + C24643 + C24644) * C154159 +
             (C4205 * C154143 + C4206 * C24169 +
              (C134 * C556 + C601 + C601 + C153882 * C580) * C24168) *
                 C154178) *
                C153847) *
               C154093 +
           (((C4206 * C24168 + C4205 * C24169 + C5574 * C154143) * C154178 +
             (C25387 + C25388 + C25389) * C154159 +
             (C25390 + C25391 + C25392) * C154130) *
                C153847 -
            (C24873 * C154130 + (C24412 + C24413 + C24414) * C154159 +
             (C3142 * C154143 + C3139 * C24169 + C3138 * C24168) * C154178) *
                C2058) *
               C153819) *
              C154085 +
          ((((C24644 + C24643 + C24642) * C154178 +
             (C24641 + C24640 + C24639) * C154159 +
             (C25093 + C25094 + C25095) * C154130) *
                C153847 -
            (C24190 * C154130 + (C24180 + C24179 + C24178) * C154159 +
             (C24177 + C24176 + C24175) * C154178) *
                C2058) *
               C154093 +
           (((C24414 + C24413 + C24412) * C154178 +
             (C24411 + C24410 + C24409) * C154159 +
             (C24870 + C24871 + C24872) * C154130) *
                C2058 -
            (((C134 * C4171 + C4196 + C4196 + C153882 * C4179) * C154143 +
              C3877 * C24169 + C1124 * C24168) *
                 C154130 +
             (C25392 + C25391 + C25390) * C154159 +
             (C25389 + C25388 + C25387) * C154178) *
                C153847) *
               C153819) *
              C153754)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C28090 +
             C3138 * C28091 + C3139 * C28092 + C3142 * C28093 +
             C4591 * C28094) *
                C153712 * C2058 -
            (C28789 * C28094 + C5574 * C28093 + C4205 * C28092 +
             C4206 * C28091 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C28090) *
                C153712 * C153847) *
               C154093 +
           ((C4206 * C28090 + C4205 * C28091 + C5574 * C28092 +
             C28789 * C28093 + C29554 * C28094) *
                C153712 * C153847 -
            (C28235 * C28094 + C4591 * C28093 + C3142 * C28092 +
             C3139 * C28091 + C3138 * C28090) *
                C153712 * C2058) *
               C153819) *
              C154085 +
          (((C636 * C28090 + C1122 * C28091 + C3417 * C28092 + C4207 * C28093 +
             C28790 * C28094) *
                C153712 * C153847 -
            (C3143 * C28094 + C3141 * C28093 + C416 * C28092 + C415 * C28091 +
             C193 * C28090) *
                C153712 * C2058) *
               C154093 +
           ((C415 * C28090 + C416 * C28091 + C3141 * C28092 + C3143 * C28093 +
             C28236 * C28094) *
                C153712 * C2058 -
            ((C134 * C28773 + C28784 + C28784 + C153882 * C28777) * C28094 +
             C28790 * C28093 + C4207 * C28092 + C3417 * C28091 +
             C1122 * C28090) *
                C153712 * C153847) *
               C153819) *
              C153754)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C46971 * C136 + C46978 + C46978 + C46968 * C152 + C46973 * C556 +
              C46979 + C46979 + C46969 * C580 + C46975 * C557 + C46980 +
              C46980 + C154146 * C581) *
                 C153865 * C154178 +
             (C47044 + C47045 + C47046) * C153865 * C154159 +
             C47060 * C154130) *
                C2058 -
            (C48137 * C154130 + (C47657 + C47658 + C47659) * C153865 * C154159 +
             (C46975 * C2272 + C47600 + C47600 + C154146 * C2282 +
              C46973 * C557 + C47601 + C47601 + C46969 * C581 + C46971 * C556 +
              C47602 + C47602 + C46968 * C580) *
                 C153865 * C154178) *
                C153847) *
               C154093 +
           (((C46971 * C1081 + C48434 + C48434 + C46968 * C1093 +
              C46973 * C1489 + C48435 + C48435 + C46969 * C1499 +
              C46975 * C6161 + C48436 + C48436 + C154146 * C6173) *
                 C153865 * C154178 +
             (C48470 + C48471 + C48472) * C153865 * C154159 +
             (C48473 + C48474 + C48475) * C153865 * C154130) *
                C153847 -
            (C47898 * C154130 + (C47355 + C47356 + C47357) * C153865 * C154159 +
             (C46975 * C1489 + C47298 + C47298 + C154146 * C1499 +
              C46973 * C1081 + C47299 + C47299 + C46969 * C1093 +
              C46971 * C335 + C47300 + C47300 + C46968 * C359) *
                 C153865 * C154178) *
                C2058) *
               C153819) *
              C154085 +
          ((((C47659 + C47658 + C47657) * C153865 * C154178 +
             (C47656 + C47655 + C47654) * C153865 * C154159 +
             (C48141 + C48142 + C48143) * C153865 * C154130) *
                C153847 -
            (C47061 * C154130 + (C47049 + C47048 + C47047) * C153865 * C154159 +
             (C47046 + C47045 + C47044) * C153865 * C154178) *
                C2058) *
               C154093 +
           (((C47357 + C47356 + C47355) * C153865 * C154178 +
             (C47354 + C47353 + C47352) * C153865 * C154159 +
             (C47902 + C47903 + C47904) * C153865 * C154130) *
                C2058 -
            ((C46975 * C8529 + C48455 + C48455 + C154146 * C8531 +
              C46973 * C1486 + C48456 + C48456 + C46969 * C1496 +
              C46971 * C1084 + C48457 + C48457 + C46968 * C1096) *
                 C153865 * C154130 +
             (C48475 + C48474 + C48473) * C153865 * C154159 +
             (C48472 + C48471 + C48470) * C153865 * C154178) *
                C153847) *
               C153819) *
              C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C46971 * C136 + C46978 + C46978 + C46968 * C152 + C46973 * C556 +
              C46979 + C46979 + C46969 * C580 + C46975 * C557 + C46980 +
              C46980 + C154146 * C581) *
                 C154181 +
             (C51548 + C51549 + C51550) * C154169 + C51561 * C154143) *
                C153712 * C2058 -
            (C53934 * C154143 + (C52557 + C52558 + C52559) * C154169 +
             (C46975 * C2272 + C47600 + C47600 + C154146 * C2282 +
              C46973 * C557 + C47601 + C47601 + C46969 * C581 + C46971 * C556 +
              C47602 + C47602 + C46968 * C580) *
                 C154181) *
                C153712 * C153847) *
               C154093 +
           (((C52559 + C52558 + C52557) * C154181 +
             (C52556 + C52555 + C52554) * C154169 +
             (C53941 + C53942 + C53943) * C154143) *
                C153712 * C153847 -
            (C52937 * C154143 + (C51553 + C51552 + C51551) * C154169 +
             (C51550 + C51549 + C51548) * C154181) *
                C153712 * C2058) *
               C153819) *
              C154085 +
          ((((C47659 + C47658 + C47657) * C154181 +
             (C48470 + C48471 + C48472) * C154169 +
             (C52560 + C52561 + C52562) * C154143) *
                C153712 * C153847 -
            (C51535 * C154143 + (C47355 + C47356 + C47357) * C154169 +
             (C47046 + C47045 + C47044) * C154181) *
                C153712 * C2058) *
               C154093 +
           (((C47357 + C47356 + C47355) * C154181 +
             (C47358 + C47359 + C47360) * C154169 +
             (C51557 + C51558 + C51559) * C154143) *
                C153712 * C2058 -
            ((C46975 * C31684 + C52533 + C52533 + C154146 * C31686 +
              C46973 * C4810 + C52534 + C52534 + C46969 * C4816 +
              C46971 * C4169 + C52535 + C52535 + C46968 * C4177) *
                 C154143 +
             (C52562 + C52561 + C52560) * C154169 +
             (C48472 + C48471 + C48470) * C154181) *
                C153712 * C153847) *
               C153819) *
              C153754)) /
            (p * q * std::sqrt(p + q));
    d2ee[221] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C154181 +
             C3138 * C154169 + C3139 * C154143) *
                C2846 +
            (C2850 + C2851 + C2852) * C2847 + C2864 * C154130) *
               C154166 -
           (C3874 * C154130 + (C3423 + C3388 + C3389) * C2847 +
            (C4205 * C154143 + C4206 * C154169 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C154181) *
                C2846) *
               C154167 +
           (((C134 * C557 + C602 + C602 + C153882 * C581) * C154181 +
             C4830 * C154169 + C4831 * C154143) *
                C2846 +
            (C3391 + C3424 + C3425) * C2847 +
            (C3397 + C3426 + C3427) * C154130) *
               C2574) *
              C154093 +
          (((C4206 * C154181 + C4205 * C154169 + C5574 * C154143) * C2846 +
            (C4186 + C4187 + C4209) * C2847 +
            (C4191 + C4192 + C4210) * C154130) *
               C154167 -
           (C3650 * C154130 + (C3147 + C3106 + C3107) * C2847 +
            (C3142 * C154143 + C3139 * C154169 + C3138 * C154181) * C2846) *
               C154166 -
           (((C134 * C4809 + C4823 + C4823 + C153882 * C4815) * C154143 +
             C3421 * C154169 + C3420 * C154181) *
                C154130 +
            ((C134 * C4810 + C4824 + C4824 + C153882 * C4816) * C154143 +
             C3419 * C154169 + C3418 * C154181) *
                C2847 +
            ((C134 * C4811 + C4825 + C4825 + C153882 * C4817) * C154143 +
             C4831 * C154169 + C4830 * C154181) *
                C2846) *
               C2574) *
              C153819) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C153865 * C123 +
            C199 * C124 + C200 * C125 + C201 * C126 + C202 * C127) *
               C154166 -
           (C641 * C127 + C642 * C126 + C643 * C125 + C644 * C124 +
            (C134 * C556 + C601 + C601 + C153882 * C580) * C153865 * C123) *
               C154167 +
           ((C134 * C557 + C602 + C602 + C153882 * C581) * C153865 * C123 +
            C645 * C124 + C646 * C125 + C647 * C126 + C648 * C127) *
               C2574) *
              C154093 +
          (((C134 * C1081 + C1100 + C1100 + C153882 * C1093) * C153865 * C123 +
            C1126 * C124 + C1127 * C125 + C1128 * C126 + C1129 * C127) *
               C154167 -
           (C420 * C127 + C421 * C126 + C422 * C125 + C423 * C124 +
            (C134 * C335 + C380 + C380 + C153882 * C359) * C153865 * C123) *
               C154166 -
           ((C134 * C1485 + C1501 + C1501 + C153882 * C1495) * C153865 * C127 +
            (C134 * C1486 + C1502 + C1502 + C153882 * C1496) * C153865 * C126 +
            (C134 * C1487 + C1503 + C1503 + C153882 * C1497) * C153865 * C125 +
            (C134 * C1488 + C1504 + C1504 + C153882 * C1498) * C153865 * C124 +
            (C134 * C1489 + C1505 + C1505 + C153882 * C1499) * C153865 * C123) *
               C2574) *
              C153819) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C24168 +
             C3138 * C24169 + C3139 * C154143) *
                C154178 +
            (C24175 + C24176 + C24177) * C154159 + C24189 * C154130) *
               C154166 -
           (C25096 * C154130 + (C24642 + C24643 + C24644) * C154159 +
            (C4205 * C154143 + C4206 * C24169 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C24168) *
                C154178) *
               C154167 +
           (((C134 * C557 + C602 + C602 + C153882 * C581) * C24168 +
             C4830 * C24169 + C4831 * C154143) *
                C154178 +
            (C24645 + C24646 + C24647) * C154159 +
            (C24648 + C24649 + C24650) * C154130) *
               C2574) *
              C154093 +
          (((C4206 * C24168 + C4205 * C24169 + C5574 * C154143) * C154178 +
            (C25387 + C25388 + C25389) * C154159 +
            (C25390 + C25391 + C25392) * C154130) *
               C154167 -
           (C24873 * C154130 + (C24412 + C24413 + C24414) * C154159 +
            (C3142 * C154143 + C3139 * C24169 + C3138 * C24168) * C154178) *
               C154166 -
           (((C134 * C4809 + C4823 + C4823 + C153882 * C4815) * C154143 +
             C3421 * C24169 + C3420 * C24168) *
                C154130 +
            ((C134 * C4810 + C4824 + C4824 + C153882 * C4816) * C154143 +
             C3419 * C24169 + C3418 * C24168) *
                C154159 +
            ((C134 * C4811 + C4825 + C4825 + C153882 * C4817) * C154143 +
             C4831 * C24169 + C4830 * C24168) *
                C154178) *
               C2574) *
              C153819) *
         C153748) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C28090 +
            C3138 * C28091 + C3139 * C28092 + C3142 * C28093 + C4591 * C28094) *
               C153712 * C154166 -
           (C28789 * C28094 + C5574 * C28093 + C4205 * C28092 + C4206 * C28091 +
            (C134 * C556 + C601 + C601 + C153882 * C580) * C28090) *
               C153712 * C154167 +
           ((C134 * C557 + C602 + C602 + C153882 * C581) * C28090 +
            C4830 * C28091 + C4831 * C28092 + C29138 * C28093 +
            C29139 * C28094) *
               C153712 * C2574) *
              C154093 +
          ((C4206 * C28090 + C4205 * C28091 + C5574 * C28092 + C28789 * C28093 +
            C29554 * C28094) *
               C153712 * C154167 -
           (C28235 * C28094 + C4591 * C28093 + C3142 * C28092 + C3139 * C28091 +
            C3138 * C28090) *
               C153712 * C154166 -
           ((C134 * C29125 + C29133 + C29133 + C153882 * C29127) * C28094 +
            C29139 * C28093 + C29138 * C28092 + C4831 * C28091 +
            C4830 * C28090) *
               C153712 * C2574) *
              C153819) *
         C153748) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C46971 * C136 + C46978 + C46978 + C46968 * C152 + C46973 * C556 +
             C46979 + C46979 + C46969 * C580 + C46975 * C557 + C46980 + C46980 +
             C154146 * C581) *
                C153865 * C154178 +
            (C47044 + C47045 + C47046) * C153865 * C154159 + C47060 * C154130) *
               C154166 -
           (C48137 * C154130 + (C47657 + C47658 + C47659) * C153865 * C154159 +
            (C46975 * C2272 + C47600 + C47600 + C154146 * C2282 +
             C46973 * C557 + C47601 + C47601 + C46969 * C581 + C46971 * C556 +
             C47602 + C47602 + C46968 * C580) *
                C153865 * C154178) *
               C154167 +
           ((C46971 * C557 + C47603 + C47603 + C46968 * C581 + C46973 * C2272 +
             C47604 + C47604 + C46969 * C2282 + C46975 * C7665 + C47605 +
             C47605 + C154146 * C7673) *
                C153865 * C154178 +
            (C47660 + C47661 + C47662) * C153865 * C154159 +
            (C47663 + C47664 + C47665) * C153865 * C154130) *
               C2574) *
              C154093 +
          (((C46971 * C1081 + C48434 + C48434 + C46968 * C1093 +
             C46973 * C1489 + C48435 + C48435 + C46969 * C1499 +
             C46975 * C6161 + C48436 + C48436 + C154146 * C6173) *
                C153865 * C154178 +
            (C48470 + C48471 + C48472) * C153865 * C154159 +
            (C48473 + C48474 + C48475) * C153865 * C154130) *
               C154167 -
           (C47898 * C154130 + (C47355 + C47356 + C47357) * C153865 * C154159 +
            (C46975 * C1489 + C47298 + C47298 + C154146 * C1499 +
             C46973 * C1081 + C47299 + C47299 + C46969 * C1093 + C46971 * C335 +
             C47300 + C47300 + C46968 * C359) *
                C153865 * C154178) *
               C154166 -
           ((C46975 * C9165 + C49067 + C49067 + C154146 * C9171 +
             C46973 * C6157 + C49068 + C49068 + C46969 * C6169 +
             C46971 * C1487 + C49069 + C49069 + C46968 * C1497) *
                C153865 * C154130 +
            (C46975 * C9166 + C49070 + C49070 + C154146 * C9172 +
             C46973 * C6159 + C49071 + C49071 + C46969 * C6171 +
             C46971 * C1488 + C49072 + C49072 + C46968 * C1498) *
                C153865 * C154159 +
            (C46975 * C9167 + C49073 + C49073 + C154146 * C9173 +
             C46973 * C6161 + C49074 + C49074 + C46969 * C6173 +
             C46971 * C1489 + C49075 + C49075 + C46968 * C1499) *
                C153865 * C154178) *
               C2574) *
              C153819) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C46971 * C136 + C46978 + C46978 + C46968 * C152 + C46973 * C556 +
             C46979 + C46979 + C46969 * C580 + C46975 * C557 + C46980 + C46980 +
             C154146 * C581) *
                C154181 +
            (C51548 + C51549 + C51550) * C154169 + C51561 * C154143) *
               C153712 * C154166 -
           (C53934 * C154143 + (C52557 + C52558 + C52559) * C154169 +
            (C46975 * C2272 + C47600 + C47600 + C154146 * C2282 +
             C46973 * C557 + C47601 + C47601 + C46969 * C581 + C46971 * C556 +
             C47602 + C47602 + C46968 * C580) *
                C154181) *
               C153712 * C154167 +
           ((C46971 * C557 + C47603 + C47603 + C46968 * C581 + C46973 * C2272 +
             C47604 + C47604 + C46969 * C2282 + C46975 * C7665 + C47605 +
             C47605 + C154146 * C7673) *
                C154181 +
            (C53192 + C53193 + C53194) * C154169 +
            (C53195 + C53196 + C53197) * C154143) *
               C153712 * C2574) *
              C154093 +
          (((C52559 + C52558 + C52557) * C154181 +
            (C52556 + C52555 + C52554) * C154169 +
            (C53941 + C53942 + C53943) * C154143) *
               C153712 * C154167 -
           (C52937 * C154143 + (C51553 + C51552 + C51551) * C154169 +
            (C51550 + C51549 + C51548) * C154181) *
               C153712 * C154166 -
           ((C46975 * C32340 + C53177 + C53177 + C154146 * C32342 +
             C46973 * C29881 + C53178 + C53178 + C46969 * C29885 +
             C46971 * C4811 + C53179 + C53179 + C46968 * C4817) *
                C154143 +
            (C53197 + C53196 + C53195) * C154169 +
            (C53194 + C53193 + C53192) * C154181) *
               C153712 * C2574) *
              C153819) *
         C153748) /
            (p * q * std::sqrt(p + q));
    d2ee[222] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C136 + C161 + C161 + C153882 * C152) * C153865 * C123 +
                C199 * C124 + C200 * C125 + C201 * C126 + C202 * C127) *
                   C2058 -
               (C641 * C127 + C642 * C126 + C643 * C125 + C644 * C124 +
                (C134 * C556 + C601 + C601 + C153882 * C580) * C153865 * C123) *
                   C153847) *
                  C153767 * C1253 +
              ((C644 * C123 + C643 * C124 + C642 * C125 + C641 * C126 +
                C919 * C127) *
                   C153847 -
               (C203 * C127 + C202 * C126 + C201 * C125 + C200 * C124 +
                C199 * C123) *
                   C2058) *
                  C153767 * C1254 +
              ((C200 * C123 + C201 * C124 + C202 * C125 + C203 * C126 +
                C204 * C127) *
                   C2058 -
               ((C134 * C909 + C915 + C915 + C153882 * C911) * C153865 * C127 +
                C919 * C126 + C641 * C125 + C642 * C124 + C643 * C123) *
                   C153847) *
                  C153767 * C1255) +
         std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C136 + C161 + C161 + C153882 * C152) * C153865 * C123 +
                C199 * C124 + C200 * C125 + C201 * C126 + C202 * C127) *
                   C2058 -
               (C641 * C127 + C642 * C126 + C643 * C125 + C644 * C124 +
                (C134 * C556 + C601 + C601 + C153882 * C580) * C153865 * C123) *
                   C153847) *
                  C326 +
              (((C134 * C1081 + C1100 + C1100 + C153882 * C1093) * C153865 *
                    C123 +
                C1126 * C124 + C1127 * C125 + C1128 * C126 + C1129 * C127) *
                   C153847 -
               (C420 * C127 + C421 * C126 + C422 * C125 + C423 * C124 +
                (C134 * C335 + C380 + C380 + C153882 * C359) * C153865 * C123) *
                   C2058) *
                  C327 +
              (((C134 * C336 + C381 + C381 + C153882 * C360) * C153865 * C123 +
                C424 * C124 + C425 * C125 + C426 * C126 + C427 * C127) *
                   C2058 -
               ((C134 * C1916 + C1932 + C1932 + C153882 * C1926) * C153865 *
                    C127 +
                (C134 * C1917 + C1933 + C1933 + C153882 * C1927) * C153865 *
                    C126 +
                (C134 * C1918 + C1934 + C1934 + C153882 * C1928) * C153865 *
                    C125 +
                (C134 * C1919 + C1935 + C1935 + C153882 * C1929) * C153865 *
                    C124 +
                (C134 * C1920 + C1936 + C1936 + C153882 * C1930) * C153865 *
                    C123) *
                   C153847) *
                  C328) *
             C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C136 + C161 + C161 + C153882 * C152) * C153865 * C123 +
           C199 * C124 + C200 * C125 + C201 * C126 + C202 * C127) *
              C2264 -
          (C641 * C127 + C642 * C126 + C643 * C125 + C644 * C124 +
           (C134 * C556 + C601 + C601 + C153882 * C580) * C153865 * C123) *
              C2265 +
          ((C134 * C557 + C602 + C602 + C153882 * C581) * C153865 * C123 +
           C645 * C124 + C646 * C125 + C647 * C126 + C648 * C127) *
              C2266 -
          ((C134 * C2268 + C2284 + C2284 + C153882 * C2278) * C153865 * C127 +
           (C134 * C2269 + C2285 + C2285 + C153882 * C2279) * C153865 * C126 +
           (C134 * C2270 + C2286 + C2286 + C153882 * C2280) * C153865 * C125 +
           (C134 * C2271 + C2287 + C2287 + C153882 * C2281) * C153865 * C124 +
           (C134 * C2272 + C2288 + C2288 + C153882 * C2282) * C153865 * C123) *
              C2267) *
         C153767 * C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C154181 +
             C3138 * C154169 + C3139 * C154143) *
                C2846 +
            (C2850 + C2851 + C2852) * C2847 + C2864 * C154130) *
               C2058 -
           (C3874 * C154130 + (C3423 + C3388 + C3389) * C2847 +
            (C4205 * C154143 + C4206 * C154169 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C154181) *
                C2846) *
               C153847) *
              C153767 * C1253 +
          (((C3389 + C3388 + C3423) * C2846 + (C3385 + C3384 + C3422) * C2847 +
            (C3870 + C3871 + C3878) * C154130) *
               C153847 -
           (C2865 * C154130 + (C2855 + C2854 + C2853) * C2847 +
            (C2852 + C2851 + C2850) * C2846) *
               C2058) *
              C153767 * C1254 +
          ((C2864 * C2846 + (C2858 + C2857 + C2856) * C2847 +
            (C2859 + C2860 + C2861) * C154130) *
               C2058 -
           (((C134 * C1916 + C1932 + C1932 + C153882 * C1926) * C154143 +
             C1125 * C154169 + C633 * C154181) *
                C154130 +
            (C3878 + C3871 + C3870) * C2847 + C3874 * C2846) *
               C153847) *
              C153767 * C1255)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C154181 +
             C3138 * C154169 + C3139 * C154143) *
                C2846 +
            (C2850 + C2851 + C2852) * C2847 + C2864 * C154130) *
               C2058 -
           (C3874 * C154130 + (C3423 + C3388 + C3389) * C2847 +
            (C4205 * C154143 + C4206 * C154169 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C154181) *
                C2846) *
               C153847) *
              C326 +
          (((C4206 * C154181 + C4205 * C154169 + C5574 * C154143) * C2846 +
            (C4186 + C4187 + C4209) * C2847 +
            (C4191 + C4192 + C4210) * C154130) *
               C153847 -
           (C3650 * C154130 + (C3147 + C3106 + C3107) * C2847 +
            (C3142 * C154143 + C3139 * C154169 + C3138 * C154181) * C2846) *
               C2058) *
              C327 +
          (((C3139 * C154181 + C3142 * C154169 + C4591 * C154143) * C2846 +
            (C3111 + C3148 + C3149) * C2847 +
            (C3115 + C3150 + C3151) * C154130) *
               C2058 -
           (((C134 * C5557 + C5569 + C5569 + C153882 * C5563) * C154143 +
             C4208 * C154169 + C3416 * C154181) *
                C154130 +
            ((C134 * C5558 + C5570 + C5570 + C153882 * C5564) * C154143 +
             C4207 * C154169 + C3417 * C154181) *
                C2847 +
            ((C134 * C5559 + C5571 + C5571 + C153882 * C5565) * C154143 +
             C5574 * C154169 + C4205 * C154181) *
                C2846) *
               C153847) *
              C328) *
         C153748) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C154181 +
            C3138 * C154169 + C3139 * C154143) *
               C2846 +
           (C2850 + C2851 + C2852) * C2847 + C2864 * C154130) *
              C2264 -
          (C3874 * C154130 + (C3423 + C3388 + C3389) * C2847 +
           (C4205 * C154143 + C4206 * C154169 +
            (C134 * C556 + C601 + C601 + C153882 * C580) * C154181) *
               C2846) *
              C2265 +
          (((C134 * C557 + C602 + C602 + C153882 * C581) * C154181 +
            C4830 * C154169 + C4831 * C154143) *
               C2846 +
           (C3391 + C3424 + C3425) * C2847 +
           (C3397 + C3426 + C3427) * C154130) *
              C2266 -
          (((C134 * C6156 + C6175 + C6175 + C153882 * C6168) * C154143 +
            (C134 * C6157 + C6176 + C6176 + C153882 * C6169) * C154169 +
            (C134 * C2270 + C2286 + C2286 + C153882 * C2280) * C154181) *
               C154130 +
           ((C134 * C6158 + C6177 + C6177 + C153882 * C6170) * C154143 +
            (C134 * C6159 + C6178 + C6178 + C153882 * C6171) * C154169 +
            (C134 * C2271 + C2287 + C2287 + C153882 * C2281) * C154181) *
               C2847 +
           ((C134 * C6160 + C6179 + C6179 + C153882 * C6172) * C154143 +
            (C134 * C6161 + C6180 + C6180 + C153882 * C6173) * C154169 +
            (C134 * C2272 + C2288 + C2288 + C153882 * C2282) * C154181) *
               C2846) *
              C2267) *
         C153767 * C153748) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C24168 +
             C3138 * C24169 + C3139 * C154143) *
                C154178 +
            (C24175 + C24176 + C24177) * C154159 + C24189 * C154130) *
               C2058 -
           (C25096 * C154130 + (C24642 + C24643 + C24644) * C154159 +
            (C4205 * C154143 + C4206 * C24169 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C24168) *
                C154178) *
               C153847) *
              C153767 * C1253 +
          (((C24644 + C24643 + C24642) * C154178 +
            (C24641 + C24640 + C24639) * C154159 +
            (C25093 + C25094 + C25095) * C154130) *
               C153847 -
           (C24190 * C154130 + (C24180 + C24179 + C24178) * C154159 +
            (C24177 + C24176 + C24175) * C154178) *
               C2058) *
              C153767 * C1254 +
          ((C24189 * C154178 + (C24183 + C24182 + C24181) * C154159 +
            (C24184 + C24185 + C24186) * C154130) *
               C2058 -
           (((C134 * C1916 + C1932 + C1932 + C153882 * C1926) * C154143 +
             C1125 * C24169 + C633 * C24168) *
                C154130 +
            (C25095 + C25094 + C25093) * C154159 + C25096 * C154178) *
               C153847) *
              C153767 * C1255)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C24168 +
             C3138 * C24169 + C3139 * C154143) *
                C154178 +
            (C24175 + C24176 + C24177) * C154159 + C24189 * C154130) *
               C2058 -
           (C25096 * C154130 + (C24642 + C24643 + C24644) * C154159 +
            (C4205 * C154143 + C4206 * C24169 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C24168) *
                C154178) *
               C153847) *
              C326 +
          (((C4206 * C24168 + C4205 * C24169 + C5574 * C154143) * C154178 +
            (C25387 + C25388 + C25389) * C154159 +
            (C25390 + C25391 + C25392) * C154130) *
               C153847 -
           (C24873 * C154130 + (C24412 + C24413 + C24414) * C154159 +
            (C3142 * C154143 + C3139 * C24169 + C3138 * C24168) * C154178) *
               C2058) *
              C327 +
          (((C3139 * C24168 + C3142 * C24169 + C4591 * C154143) * C154178 +
            (C24415 + C24416 + C24417) * C154159 +
            (C24418 + C24419 + C24420) * C154130) *
               C2058 -
           (((C134 * C5557 + C5569 + C5569 + C153882 * C5563) * C154143 +
             C4208 * C24169 + C3416 * C24168) *
                C154130 +
            ((C134 * C5558 + C5570 + C5570 + C153882 * C5564) * C154143 +
             C4207 * C24169 + C3417 * C24168) *
                C154159 +
            ((C134 * C5559 + C5571 + C5571 + C153882 * C5565) * C154143 +
             C5574 * C24169 + C4205 * C24168) *
                C154178) *
               C153847) *
              C328) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C24168 +
            C3138 * C24169 + C3139 * C154143) *
               C154178 +
           (C24175 + C24176 + C24177) * C154159 + C24189 * C154130) *
              C2264 -
          (C25096 * C154130 + (C24642 + C24643 + C24644) * C154159 +
           (C4205 * C154143 + C4206 * C24169 +
            (C134 * C556 + C601 + C601 + C153882 * C580) * C24168) *
               C154178) *
              C2265 +
          (((C134 * C557 + C602 + C602 + C153882 * C581) * C24168 +
            C4830 * C24169 + C4831 * C154143) *
               C154178 +
           (C24645 + C24646 + C24647) * C154159 +
           (C24648 + C24649 + C24650) * C154130) *
              C2266 -
          (((C134 * C6156 + C6175 + C6175 + C153882 * C6168) * C154143 +
            (C134 * C6157 + C6176 + C6176 + C153882 * C6169) * C24169 +
            (C134 * C2270 + C2286 + C2286 + C153882 * C2280) * C24168) *
               C154130 +
           ((C134 * C6158 + C6177 + C6177 + C153882 * C6170) * C154143 +
            (C134 * C6159 + C6178 + C6178 + C153882 * C6171) * C24169 +
            (C134 * C2271 + C2287 + C2287 + C153882 * C2281) * C24168) *
               C154159 +
           ((C134 * C6160 + C6179 + C6179 + C153882 * C6172) * C154143 +
            (C134 * C6161 + C6180 + C6180 + C153882 * C6173) * C24169 +
            (C134 * C2272 + C2288 + C2288 + C153882 * C2282) * C24168) *
               C154178) *
              C2267) *
         C153767 * C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C28090 +
            C3138 * C28091 + C3139 * C28092 + C3142 * C28093 + C4591 * C28094) *
               C153712 * C2058 -
           (C28789 * C28094 + C5574 * C28093 + C4205 * C28092 + C4206 * C28091 +
            (C134 * C556 + C601 + C601 + C153882 * C580) * C28090) *
               C153712 * C153847) *
              C153767 * C1253 +
          ((C636 * C28090 + C1122 * C28091 + C3417 * C28092 + C4207 * C28093 +
            C28790 * C28094) *
               C153712 * C153847 -
           (C3143 * C28094 + C3141 * C28093 + C416 * C28092 + C415 * C28091 +
            C193 * C28090) *
               C153712 * C2058) *
              C153767 * C1254 +
          ((C194 * C28090 + C414 * C28091 + C417 * C28092 + C3140 * C28093 +
            C3144 * C28094) *
               C153712 * C2058 -
           ((C134 * C5557 + C5569 + C5569 + C153882 * C5563) * C28094 +
            C4208 * C28093 + C3416 * C28092 + C1123 * C28091 + C635 * C28090) *
               C153712 * C153847) *
              C153767 * C1255)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C28090 +
            C3138 * C28091 + C3139 * C28092 + C3142 * C28093 + C4591 * C28094) *
               C153712 * C2058 -
           (C28789 * C28094 + C5574 * C28093 + C4205 * C28092 + C4206 * C28091 +
            (C134 * C556 + C601 + C601 + C153882 * C580) * C28090) *
               C153712 * C153847) *
              C326 +
          ((C4206 * C28090 + C4205 * C28091 + C5574 * C28092 + C28789 * C28093 +
            C29554 * C28094) *
               C153712 * C153847 -
           (C28235 * C28094 + C4591 * C28093 + C3142 * C28092 + C3139 * C28091 +
            C3138 * C28090) *
               C153712 * C2058) *
              C327 +
          ((C3139 * C28090 + C3142 * C28091 + C4591 * C28092 + C28235 * C28093 +
            C29003 * C28094) *
               C153712 * C2058 -
           ((C134 * C29545 + C29551 + C29551 + C153882 * C29547) * C28094 +
            C29554 * C28093 + C28789 * C28092 + C5574 * C28091 +
            C4205 * C28090) *
               C153712 * C153847) *
              C328) *
         C153748) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C136 + C161 + C161 + C153882 * C152) * C28090 +
           C3138 * C28091 + C3139 * C28092 + C3142 * C28093 + C4591 * C28094) *
              C153712 * C2264 -
          (C28789 * C28094 + C5574 * C28093 + C4205 * C28092 + C4206 * C28091 +
           (C134 * C556 + C601 + C601 + C153882 * C580) * C28090) *
              C153712 * C2265 +
          ((C134 * C557 + C602 + C602 + C153882 * C581) * C28090 +
           C4830 * C28091 + C4831 * C28092 + C29138 * C28093 +
           C29139 * C28094) *
              C153712 * C2266 -
          ((C134 * C29880 + C29887 + C29887 + C153882 * C29884) * C28094 +
           (C134 * C29881 + C29888 + C29888 + C153882 * C29885) * C28093 +
           (C134 * C6160 + C6179 + C6179 + C153882 * C6172) * C28092 +
           (C134 * C6161 + C6180 + C6180 + C153882 * C6173) * C28091 +
           (C134 * C2272 + C2288 + C2288 + C153882 * C2282) * C28090) *
              C153712 * C2267) *
         C153767 * C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C46971 * C136 + C46978 + C46978 + C46968 * C152 + C46973 * C556 +
             C46979 + C46979 + C46969 * C580 + C46975 * C557 + C46980 + C46980 +
             C154146 * C581) *
                C153865 * C154178 +
            (C47044 + C47045 + C47046) * C153865 * C154159 + C47060 * C154130) *
               C2058 -
           (C48137 * C154130 + (C47657 + C47658 + C47659) * C153865 * C154159 +
            (C46975 * C2272 + C47600 + C47600 + C154146 * C2282 +
             C46973 * C557 + C47601 + C47601 + C46969 * C581 + C46971 * C556 +
             C47602 + C47602 + C46968 * C580) *
                C153865 * C154178) *
               C153847) *
              C153767 * C1253 +
          (((C47659 + C47658 + C47657) * C153865 * C154178 +
            (C47656 + C47655 + C47654) * C153865 * C154159 +
            (C48141 + C48142 + C48143) * C153865 * C154130) *
               C153847 -
           (C47061 * C154130 + (C47049 + C47048 + C47047) * C153865 * C154159 +
            (C47046 + C47045 + C47044) * C153865 * C154178) *
               C2058) *
              C153767 * C1254 +
          ((C47060 * C154178 + (C47052 + C47051 + C47050) * C153865 * C154159 +
            (C47053 + C47054 + C47055) * C153865 * C154130) *
               C2058 -
           ((C46975 * C2268 + C48130 + C48130 + C154146 * C2278 +
             C46973 * C561 + C48131 + C48131 + C46969 * C585 + C46971 * C552 +
             C48132 + C48132 + C46968 * C576) *
                C153865 * C154130 +
            (C48143 + C48142 + C48141) * C153865 * C154159 + C48137 * C154178) *
               C153847) *
              C153767 * C1255)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C46971 * C136 + C46978 + C46978 + C46968 * C152 + C46973 * C556 +
             C46979 + C46979 + C46969 * C580 + C46975 * C557 + C46980 + C46980 +
             C154146 * C581) *
                C153865 * C154178 +
            (C47044 + C47045 + C47046) * C153865 * C154159 + C47060 * C154130) *
               C2058 -
           (C48137 * C154130 + (C47657 + C47658 + C47659) * C153865 * C154159 +
            (C46975 * C2272 + C47600 + C47600 + C154146 * C2282 +
             C46973 * C557 + C47601 + C47601 + C46969 * C581 + C46971 * C556 +
             C47602 + C47602 + C46968 * C580) *
                C153865 * C154178) *
               C153847) *
              C326 +
          (((C46971 * C1081 + C48434 + C48434 + C46968 * C1093 +
             C46973 * C1489 + C48435 + C48435 + C46969 * C1499 +
             C46975 * C6161 + C48436 + C48436 + C154146 * C6173) *
                C153865 * C154178 +
            (C48470 + C48471 + C48472) * C153865 * C154159 +
            (C48473 + C48474 + C48475) * C153865 * C154130) *
               C153847 -
           (C47898 * C154130 + (C47355 + C47356 + C47357) * C153865 * C154159 +
            (C46975 * C1489 + C47298 + C47298 + C154146 * C1499 +
             C46973 * C1081 + C47299 + C47299 + C46969 * C1093 + C46971 * C335 +
             C47300 + C47300 + C46968 * C359) *
                C153865 * C154178) *
               C2058) *
              C327 +
          (((C46971 * C336 + C47301 + C47301 + C46968 * C360 + C46973 * C1920 +
             C47302 + C47302 + C46969 * C1930 + C46975 * C3369 + C47303 +
             C47303 + C154146 * C3377) *
                C153865 * C154178 +
            (C47358 + C47359 + C47360) * C153865 * C154159 +
            (C47361 + C47362 + C47363) * C153865 * C154130) *
               C2058 -
           ((C46975 * C6156 + C49802 + C49802 + C154146 * C6168 +
             C46973 * C3371 + C49803 + C49803 + C46969 * C3379 +
             C46971 * C1918 + C49804 + C49804 + C46968 * C1928) *
                C153865 * C154130 +
            (C46975 * C6158 + C49805 + C49805 + C154146 * C6170 +
             C46973 * C3370 + C49806 + C49806 + C46969 * C3378 +
             C46971 * C1919 + C49807 + C49807 + C46968 * C1929) *
                C153865 * C154159 +
            (C46975 * C6160 + C49808 + C49808 + C154146 * C6172 +
             C46973 * C3369 + C49809 + C49809 + C46969 * C3377 +
             C46971 * C1920 + C49810 + C49810 + C46968 * C1930) *
                C153865 * C154178) *
               C153847) *
              C328) *
         C153748) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C46971 * C136 + C46978 + C46978 + C46968 * C152 + C46973 * C556 +
            C46979 + C46979 + C46969 * C580 + C46975 * C557 + C46980 + C46980 +
            C154146 * C581) *
               C153865 * C154178 +
           (C47044 + C47045 + C47046) * C153865 * C154159 + C47060 * C154130) *
              C2264 -
          (C48137 * C154130 + (C47657 + C47658 + C47659) * C153865 * C154159 +
           (C46975 * C2272 + C47600 + C47600 + C154146 * C2282 + C46973 * C557 +
            C47601 + C47601 + C46969 * C581 + C46971 * C556 + C47602 + C47602 +
            C46968 * C580) *
               C153865 * C154178) *
              C2265 +
          ((C46971 * C557 + C47603 + C47603 + C46968 * C581 + C46973 * C2272 +
            C47604 + C47604 + C46969 * C2282 + C46975 * C7665 + C47605 +
            C47605 + C154146 * C7673) *
               C153865 * C154178 +
           (C47660 + C47661 + C47662) * C153865 * C154159 +
           (C47663 + C47664 + C47665) * C153865 * C154130) *
              C2266 -
          ((C46975 * C10500 + C50393 + C50393 + C154146 * C10506 +
            C46973 * C7667 + C50394 + C50394 + C46969 * C7675 + C46971 * C2270 +
            C50395 + C50395 + C46968 * C2280) *
               C153865 * C154130 +
           (C46975 * C10501 + C50396 + C50396 + C154146 * C10507 +
            C46973 * C7666 + C50397 + C50397 + C46969 * C7674 + C46971 * C2271 +
            C50398 + C50398 + C46968 * C2281) *
               C153865 * C154159 +
           (C46975 * C10502 + C50399 + C50399 + C154146 * C10508 +
            C46973 * C7665 + C50400 + C50400 + C46969 * C7673 + C46971 * C2272 +
            C50401 + C50401 + C46968 * C2282) *
               C153865 * C154178) *
              C2267) *
         C153767 * C153748) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C46971 * C136 + C46978 + C46978 + C46968 * C152 + C46973 * C556 +
             C46979 + C46979 + C46969 * C580 + C46975 * C557 + C46980 + C46980 +
             C154146 * C581) *
                C154181 +
            (C51548 + C51549 + C51550) * C154169 + C51561 * C154143) *
               C153712 * C2058 -
           (C53934 * C154143 + (C52557 + C52558 + C52559) * C154169 +
            (C46975 * C2272 + C47600 + C47600 + C154146 * C2282 +
             C46973 * C557 + C47601 + C47601 + C46969 * C581 + C46971 * C556 +
             C47602 + C47602 + C46968 * C580) *
                C154181) *
               C153712 * C153847) *
              C153767 * C1253 +
          (((C47659 + C47658 + C47657) * C154181 +
            (C48470 + C48471 + C48472) * C154169 +
            (C52560 + C52561 + C52562) * C154143) *
               C153712 * C153847 -
           (C51535 * C154143 + (C47355 + C47356 + C47357) * C154169 +
            (C47046 + C47045 + C47044) * C154181) *
               C153712 * C2058) *
              C153767 * C1254 +
          ((C47058 * C154181 + (C47354 + C47353 + C47352) * C154169 +
            (C47361 + C47362 + C47363) * C154143) *
               C153712 * C2058 -
           ((C46975 * C6156 + C49802 + C49802 + C154146 * C6168 +
             C46973 * C3371 + C49803 + C49803 + C46969 * C3379 +
             C46971 * C1918 + C49804 + C49804 + C46968 * C1928) *
                C154143 +
            (C48475 + C48474 + C48473) * C154169 + C48133 * C154181) *
               C153712 * C153847) *
              C153767 * C1255)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C46971 * C136 + C46978 + C46978 + C46968 * C152 + C46973 * C556 +
             C46979 + C46979 + C46969 * C580 + C46975 * C557 + C46980 + C46980 +
             C154146 * C581) *
                C154181 +
            (C51548 + C51549 + C51550) * C154169 + C51561 * C154143) *
               C153712 * C2058 -
           (C53934 * C154143 + (C52557 + C52558 + C52559) * C154169 +
            (C46975 * C2272 + C47600 + C47600 + C154146 * C2282 +
             C46973 * C557 + C47601 + C47601 + C46969 * C581 + C46971 * C556 +
             C47602 + C47602 + C46968 * C580) *
                C154181) *
               C153712 * C153847) *
              C326 +
          (((C52559 + C52558 + C52557) * C154181 +
            (C52556 + C52555 + C52554) * C154169 +
            (C53941 + C53942 + C53943) * C154143) *
               C153712 * C153847 -
           (C52937 * C154143 + (C51553 + C51552 + C51551) * C154169 +
            (C51550 + C51549 + C51548) * C154181) *
               C153712 * C2058) *
              C327 +
          ((C51561 * C154181 + (C51556 + C51555 + C51554) * C154169 +
            (C52944 + C52945 + C52946) * C154143) *
               C153712 * C2058 -
           ((C46975 * C29880 + C53931 + C53931 + C154146 * C29884 +
             C46973 * C28358 + C53932 + C53932 + C46969 * C28362 +
             C46971 * C5559 + C53933 + C53933 + C46968 * C5565) *
                C154143 +
            (C53943 + C53942 + C53941) * C154169 + C53934 * C154181) *
               C153712 * C153847) *
              C328) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C46971 * C136 + C46978 + C46978 + C46968 * C152 + C46973 * C556 +
            C46979 + C46979 + C46969 * C580 + C46975 * C557 + C46980 + C46980 +
            C154146 * C581) *
               C154181 +
           (C51548 + C51549 + C51550) * C154169 + C51561 * C154143) *
              C153712 * C2264 -
          (C53934 * C154143 + (C52557 + C52558 + C52559) * C154169 +
           (C46975 * C2272 + C47600 + C47600 + C154146 * C2282 + C46973 * C557 +
            C47601 + C47601 + C46969 * C581 + C46971 * C556 + C47602 + C47602 +
            C46968 * C580) *
               C154181) *
              C153712 * C2265 +
          ((C46971 * C557 + C47603 + C47603 + C46968 * C581 + C46973 * C2272 +
            C47604 + C47604 + C46969 * C2282 + C46975 * C7665 + C47605 +
            C47605 + C154146 * C7673) *
               C154181 +
           (C53192 + C53193 + C53194) * C154169 +
           (C53195 + C53196 + C53197) * C154143) *
              C153712 * C2266 -
          ((C46975 * C33704 + C54526 + C54526 + C154146 * C33708 +
            C46973 * C30946 + C54527 + C54527 + C46969 * C30950 +
            C46971 * C6160 + C54528 + C54528 + C46968 * C6172) *
               C154143 +
           (C46975 * C33705 + C54529 + C54529 + C154146 * C33709 +
            C46973 * C9167 + C54530 + C54530 + C46969 * C9173 + C46971 * C6161 +
            C54531 + C54531 + C46968 * C6173) *
               C154169 +
           (C46975 * C10502 + C50399 + C50399 + C154146 * C10508 +
            C46973 * C7665 + C50400 + C50400 + C46969 * C7673 + C46971 * C2272 +
            C50401 + C50401 + C46968 * C2282) *
               C154181) *
              C153712 * C2267) *
         C153767 * C153748) /
            (p * q * std::sqrt(p + q));
    d2ee[223] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C154181 +
             C3138 * C154169 + C3139 * C154143) *
                C2846 +
            (C2850 + C2851 + C2852) * C2847 + C2864 * C154130) *
               C154166 -
           (C3874 * C154130 + (C3423 + C3388 + C3389) * C2847 +
            (C4205 * C154143 + C4206 * C154169 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C154181) *
                C2846) *
               C154167 +
           (((C134 * C557 + C602 + C602 + C153882 * C581) * C154181 +
             C4830 * C154169 + C4831 * C154143) *
                C2846 +
            (C3391 + C3424 + C3425) * C2847 +
            (C3397 + C3426 + C3427) * C154130) *
               C2574) *
              C153767 * C154085 +
          (((C3389 + C3388 + C3423) * C2846 + (C3385 + C3384 + C3422) * C2847 +
            (C3870 + C3871 + C3878) * C154130) *
               C154167 -
           (C2865 * C154130 + (C2855 + C2854 + C2853) * C2847 +
            (C2852 + C2851 + C2850) * C2846) *
               C154166 -
           (((C134 * C3372 + C3403 + C3403 + C153882 * C3380) * C154143 +
             (C134 * C1486 + C1502 + C1502 + C153882 * C1496) * C154169 +
             C639 * C154181) *
                C154130 +
            (C3427 + C3426 + C3397) * C2847 + (C3425 + C3424 + C3391) * C2846) *
               C2574) *
              C153767 * C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C153865 * C123 +
            C199 * C124 + C200 * C125 + C201 * C126 + C202 * C127) *
               C154166 -
           (C641 * C127 + C642 * C126 + C643 * C125 + C644 * C124 +
            (C134 * C556 + C601 + C601 + C153882 * C580) * C153865 * C123) *
               C154167 +
           ((C134 * C557 + C602 + C602 + C153882 * C581) * C153865 * C123 +
            C645 * C124 + C646 * C125 + C647 * C126 + C648 * C127) *
               C2574) *
              C153767 * C154085 +
          ((C644 * C123 + C643 * C124 + C642 * C125 + C641 * C126 +
            C919 * C127) *
               C154167 -
           (C203 * C127 + C202 * C126 + C201 * C125 + C200 * C124 +
            C199 * C123) *
               C154166 -
           ((C134 * C563 + C616 + C616 + C153882 * C587) * C153865 * C127 +
            C648 * C126 + C647 * C125 + C646 * C124 + C645 * C123) *
               C2574) *
              C153767 * C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C24168 +
             C3138 * C24169 + C3139 * C154143) *
                C154178 +
            (C24175 + C24176 + C24177) * C154159 + C24189 * C154130) *
               C154166 -
           (C25096 * C154130 + (C24642 + C24643 + C24644) * C154159 +
            (C4205 * C154143 + C4206 * C24169 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C24168) *
                C154178) *
               C154167 +
           (((C134 * C557 + C602 + C602 + C153882 * C581) * C24168 +
             C4830 * C24169 + C4831 * C154143) *
                C154178 +
            (C24645 + C24646 + C24647) * C154159 +
            (C24648 + C24649 + C24650) * C154130) *
               C2574) *
              C153767 * C154085 +
          (((C24644 + C24643 + C24642) * C154178 +
            (C24641 + C24640 + C24639) * C154159 +
            (C25093 + C25094 + C25095) * C154130) *
               C154167 -
           (C24190 * C154130 + (C24180 + C24179 + C24178) * C154159 +
            (C24177 + C24176 + C24175) * C154178) *
               C154166 -
           (((C134 * C3372 + C3403 + C3403 + C153882 * C3380) * C154143 +
             C11810 * C24169 + C639 * C24168) *
                C154130 +
            (C24650 + C24649 + C24648) * C154159 +
            (C24647 + C24646 + C24645) * C154178) *
               C2574) *
              C153767 * C153754)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C28090 +
            C3138 * C28091 + C3139 * C28092 + C3142 * C28093 + C4591 * C28094) *
               C153712 * C154166 -
           (C28789 * C28094 + C5574 * C28093 + C4205 * C28092 + C4206 * C28091 +
            (C134 * C556 + C601 + C601 + C153882 * C580) * C28090) *
               C153712 * C154167 +
           ((C134 * C557 + C602 + C602 + C153882 * C581) * C28090 +
            C4830 * C28091 + C4831 * C28092 + C29138 * C28093 +
            C29139 * C28094) *
               C153712 * C2574) *
              C153767 * C154085 +
          ((C636 * C28090 + C1122 * C28091 + C3417 * C28092 + C4207 * C28093 +
            C28790 * C28094) *
               C153712 * C154167 -
           (C3143 * C28094 + C3141 * C28093 + C416 * C28092 + C415 * C28091 +
            C193 * C28090) *
               C153712 * C154166 -
           ((C134 * C28359 + C28366 + C28366 + C153882 * C28363) * C28094 +
            (C134 * C4810 + C4824 + C4824 + C153882 * C4816) * C28093 +
            C3419 * C28092 + C3418 * C28091 + C637 * C28090) *
               C153712 * C2574) *
              C153767 * C153754)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C46971 * C136 + C46978 + C46978 + C46968 * C152 + C46973 * C556 +
             C46979 + C46979 + C46969 * C580 + C46975 * C557 + C46980 + C46980 +
             C154146 * C581) *
                C153865 * C154178 +
            (C47044 + C47045 + C47046) * C153865 * C154159 + C47060 * C154130) *
               C154166 -
           (C48137 * C154130 + (C47657 + C47658 + C47659) * C153865 * C154159 +
            (C46975 * C2272 + C47600 + C47600 + C154146 * C2282 +
             C46973 * C557 + C47601 + C47601 + C46969 * C581 + C46971 * C556 +
             C47602 + C47602 + C46968 * C580) *
                C153865 * C154178) *
               C154167 +
           ((C46971 * C557 + C47603 + C47603 + C46968 * C581 + C46973 * C2272 +
             C47604 + C47604 + C46969 * C2282 + C46975 * C7665 + C47605 +
             C47605 + C154146 * C7673) *
                C153865 * C154178 +
            (C47660 + C47661 + C47662) * C153865 * C154159 +
            (C47663 + C47664 + C47665) * C153865 * C154130) *
               C2574) *
              C153767 * C154085 +
          (((C47659 + C47658 + C47657) * C153865 * C154178 +
            (C47656 + C47655 + C47654) * C153865 * C154159 +
            (C48141 + C48142 + C48143) * C153865 * C154130) *
               C154167 -
           (C47061 * C154130 + (C47049 + C47048 + C47047) * C153865 * C154159 +
            (C47046 + C47045 + C47044) * C153865 * C154178) *
               C154166 -
           ((C46975 * C7668 + C47627 + C47627 + C154146 * C7676 +
             C46973 * C2269 + C47628 + C47628 + C46969 * C2279 + C46971 * C560 +
             C47629 + C47629 + C46968 * C584) *
                C153865 * C154130 +
            (C47665 + C47664 + C47663) * C153865 * C154159 +
            (C47662 + C47661 + C47660) * C153865 * C154178) *
               C2574) *
              C153767 * C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C46971 * C136 + C46978 + C46978 + C46968 * C152 + C46973 * C556 +
             C46979 + C46979 + C46969 * C580 + C46975 * C557 + C46980 + C46980 +
             C154146 * C581) *
                C154181 +
            (C51548 + C51549 + C51550) * C154169 + C51561 * C154143) *
               C153712 * C154166 -
           (C53934 * C154143 + (C52557 + C52558 + C52559) * C154169 +
            (C46975 * C2272 + C47600 + C47600 + C154146 * C2282 +
             C46973 * C557 + C47601 + C47601 + C46969 * C581 + C46971 * C556 +
             C47602 + C47602 + C46968 * C580) *
                C154181) *
               C153712 * C154167 +
           ((C46971 * C557 + C47603 + C47603 + C46968 * C581 + C46973 * C2272 +
             C47604 + C47604 + C46969 * C2282 + C46975 * C7665 + C47605 +
             C47605 + C154146 * C7673) *
                C154181 +
            (C53192 + C53193 + C53194) * C154169 +
            (C53195 + C53196 + C53197) * C154143) *
               C153712 * C2574) *
              C153767 * C154085 +
          (((C47659 + C47658 + C47657) * C154181 +
            (C48470 + C48471 + C48472) * C154169 +
            (C52560 + C52561 + C52562) * C154143) *
               C153712 * C154167 -
           (C51535 * C154143 + (C47355 + C47356 + C47357) * C154169 +
            (C47046 + C47045 + C47044) * C154181) *
               C153712 * C154166 -
           ((C46975 * C30947 + C51783 + C51783 + C154146 * C30951 +
             C46973 * C6158 + C51784 + C51784 + C46969 * C6170 +
             C46971 * C3370 + C51785 + C51785 + C46968 * C3378) *
                C154143 +
            (C46975 * C9166 + C49070 + C49070 + C154146 * C9172 +
             C46973 * C6159 + C49071 + C49071 + C46969 * C6171 +
             C46971 * C1488 + C49072 + C49072 + C46968 * C1498) *
                C154169 +
            (C47662 + C47661 + C47660) * C154181) *
               C153712 * C2574) *
              C153767 * C153754)) /
            (p * q * std::sqrt(p + q));
    d2ee[224] +=
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C153865 * C123 +
            C199 * C124 + C200 * C125 + C201 * C126 + C202 * C127) *
               C2058 -
           (C641 * C127 + C642 * C126 + C643 * C125 + C644 * C124 +
            (C134 * C556 + C601 + C601 + C153882 * C580) * C153865 * C123) *
               C153847) *
              C326 +
          (((C134 * C1081 + C1100 + C1100 + C153882 * C1093) * C153865 * C123 +
            C1126 * C124 + C1127 * C125 + C1128 * C126 + C1129 * C127) *
               C153847 -
           (C420 * C127 + C421 * C126 + C422 * C125 + C423 * C124 +
            (C134 * C335 + C380 + C380 + C153882 * C359) * C153865 * C123) *
               C2058) *
              C327 +
          (((C134 * C336 + C381 + C381 + C153882 * C360) * C153865 * C123 +
            C424 * C124 + C425 * C125 + C426 * C126 + C427 * C127) *
               C2058 -
           ((C134 * C1916 + C1932 + C1932 + C153882 * C1926) * C153865 * C127 +
            (C134 * C1917 + C1933 + C1933 + C153882 * C1927) * C153865 * C126 +
            (C134 * C1918 + C1934 + C1934 + C153882 * C1928) * C153865 * C125 +
            (C134 * C1919 + C1935 + C1935 + C153882 * C1929) * C153865 * C124 +
            (C134 * C1920 + C1936 + C1936 + C153882 * C1930) * C153865 * C123) *
               C153847) *
              C328) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C153865 * C123 +
            C199 * C124 + C200 * C125 + C201 * C126 + C202 * C127) *
               C2058 -
           (C641 * C127 + C642 * C126 + C643 * C125 + C644 * C124 +
            (C134 * C556 + C601 + C601 + C153882 * C580) * C153865 * C123) *
               C153847) *
              C153767 * C1253 +
          ((C644 * C123 + C643 * C124 + C642 * C125 + C641 * C126 +
            C919 * C127) *
               C153847 -
           (C203 * C127 + C202 * C126 + C201 * C125 + C200 * C124 +
            C199 * C123) *
               C2058) *
              C153767 * C1254 +
          ((C200 * C123 + C201 * C124 + C202 * C125 + C203 * C126 +
            C204 * C127) *
               C2058 -
           ((C134 * C909 + C915 + C915 + C153882 * C911) * C153865 * C127 +
            C919 * C126 + C641 * C125 + C642 * C124 + C643 * C123) *
               C153847) *
              C153767 * C1255)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C154181 +
             C3138 * C154169 + C3139 * C154143) *
                C2846 +
            (C2850 + C2851 + C2852) * C2847 + C2864 * C154130) *
               C2058 -
           (C3874 * C154130 + (C3423 + C3388 + C3389) * C2847 +
            (C4205 * C154143 + C4206 * C154169 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C154181) *
                C2846) *
               C153847) *
              C153767 * C1253 +
          (((C3389 + C3388 + C3423) * C2846 + (C3385 + C3384 + C3422) * C2847 +
            (C3870 + C3871 + C3878) * C154130) *
               C153847 -
           (C2865 * C154130 + (C2855 + C2854 + C2853) * C2847 +
            (C2852 + C2851 + C2850) * C2846) *
               C2058) *
              C153767 * C1254 +
          ((C2864 * C2846 + (C2858 + C2857 + C2856) * C2847 +
            (C2859 + C2860 + C2861) * C154130) *
               C2058 -
           (((C134 * C1916 + C1932 + C1932 + C153882 * C1926) * C154143 +
             C1125 * C154169 + C633 * C154181) *
                C154130 +
            (C3878 + C3871 + C3870) * C2847 + C3874 * C2846) *
               C153847) *
              C153767 * C1255)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C154181 +
             C3138 * C154169 + C3139 * C154143) *
                C2846 +
            (C2850 + C2851 + C2852) * C2847 + C2864 * C154130) *
               C2058 -
           (C3874 * C154130 + (C3423 + C3388 + C3389) * C2847 +
            (C4205 * C154143 + C4206 * C154169 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C154181) *
                C2846) *
               C153847) *
              C326 +
          (((C4206 * C154181 + C4205 * C154169 + C5574 * C154143) * C2846 +
            (C4186 + C4187 + C4209) * C2847 +
            (C4191 + C4192 + C4210) * C154130) *
               C153847 -
           (C3650 * C154130 + (C3147 + C3106 + C3107) * C2847 +
            (C3142 * C154143 + C3139 * C154169 + C3138 * C154181) * C2846) *
               C2058) *
              C327 +
          (((C3139 * C154181 + C3142 * C154169 + C4591 * C154143) * C2846 +
            (C3111 + C3148 + C3149) * C2847 +
            (C3115 + C3150 + C3151) * C154130) *
               C2058 -
           (((C134 * C5557 + C5569 + C5569 + C153882 * C5563) * C154143 +
             C4208 * C154169 + C3416 * C154181) *
                C154130 +
            ((C134 * C5558 + C5570 + C5570 + C153882 * C5564) * C154143 +
             C4207 * C154169 + C3417 * C154181) *
                C2847 +
            ((C134 * C5559 + C5571 + C5571 + C153882 * C5565) * C154143 +
             C5574 * C154169 + C4205 * C154181) *
                C2846) *
               C153847) *
              C328) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C24168 +
             C3138 * C24169 + C3139 * C154143) *
                C154178 +
            (C24175 + C24176 + C24177) * C154159 + C24189 * C154130) *
               C2058 -
           (C25096 * C154130 + (C24642 + C24643 + C24644) * C154159 +
            (C4205 * C154143 + C4206 * C24169 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C24168) *
                C154178) *
               C153847) *
              C153767 * C1253 +
          (((C24644 + C24643 + C24642) * C154178 +
            (C24641 + C24640 + C24639) * C154159 +
            (C25093 + C25094 + C25095) * C154130) *
               C153847 -
           (C24190 * C154130 + (C24180 + C24179 + C24178) * C154159 +
            (C24177 + C24176 + C24175) * C154178) *
               C2058) *
              C153767 * C1254 +
          ((C24189 * C154178 + (C24183 + C24182 + C24181) * C154159 +
            (C24184 + C24185 + C24186) * C154130) *
               C2058 -
           (((C134 * C1916 + C1932 + C1932 + C153882 * C1926) * C154143 +
             C1125 * C24169 + C633 * C24168) *
                C154130 +
            (C25095 + C25094 + C25093) * C154159 + C25096 * C154178) *
               C153847) *
              C153767 * C1255)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C24168 +
             C3138 * C24169 + C3139 * C154143) *
                C154178 +
            (C24175 + C24176 + C24177) * C154159 + C24189 * C154130) *
               C2058 -
           (C25096 * C154130 + (C24642 + C24643 + C24644) * C154159 +
            (C4205 * C154143 + C4206 * C24169 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C24168) *
                C154178) *
               C153847) *
              C326 +
          (((C4206 * C24168 + C4205 * C24169 + C5574 * C154143) * C154178 +
            (C25387 + C25388 + C25389) * C154159 +
            (C25390 + C25391 + C25392) * C154130) *
               C153847 -
           (C24873 * C154130 + (C24412 + C24413 + C24414) * C154159 +
            (C3142 * C154143 + C3139 * C24169 + C3138 * C24168) * C154178) *
               C2058) *
              C327 +
          (((C3139 * C24168 + C3142 * C24169 + C4591 * C154143) * C154178 +
            (C24415 + C24416 + C24417) * C154159 +
            (C24418 + C24419 + C24420) * C154130) *
               C2058 -
           (((C134 * C5557 + C5569 + C5569 + C153882 * C5563) * C154143 +
             C4208 * C24169 + C3416 * C24168) *
                C154130 +
            ((C134 * C5558 + C5570 + C5570 + C153882 * C5564) * C154143 +
             C4207 * C24169 + C3417 * C24168) *
                C154159 +
            ((C134 * C5559 + C5571 + C5571 + C153882 * C5565) * C154143 +
             C5574 * C24169 + C4205 * C24168) *
                C154178) *
               C153847) *
              C328) *
         C153748) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C28090 +
            C3138 * C28091 + C3139 * C28092 + C3142 * C28093 + C4591 * C28094) *
               C153712 * C2058 -
           (C28789 * C28094 + C5574 * C28093 + C4205 * C28092 + C4206 * C28091 +
            (C134 * C556 + C601 + C601 + C153882 * C580) * C28090) *
               C153712 * C153847) *
              C153767 * C1253 +
          ((C636 * C28090 + C1122 * C28091 + C3417 * C28092 + C4207 * C28093 +
            C28790 * C28094) *
               C153712 * C153847 -
           (C3143 * C28094 + C3141 * C28093 + C416 * C28092 + C415 * C28091 +
            C193 * C28090) *
               C153712 * C2058) *
              C153767 * C1254 +
          ((C194 * C28090 + C414 * C28091 + C417 * C28092 + C3140 * C28093 +
            C3144 * C28094) *
               C153712 * C2058 -
           ((C134 * C5557 + C5569 + C5569 + C153882 * C5563) * C28094 +
            C4208 * C28093 + C3416 * C28092 + C1123 * C28091 + C635 * C28090) *
               C153712 * C153847) *
              C153767 * C1255)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C28090 +
            C3138 * C28091 + C3139 * C28092 + C3142 * C28093 + C4591 * C28094) *
               C153712 * C2058 -
           (C28789 * C28094 + C5574 * C28093 + C4205 * C28092 + C4206 * C28091 +
            (C134 * C556 + C601 + C601 + C153882 * C580) * C28090) *
               C153712 * C153847) *
              C326 +
          ((C4206 * C28090 + C4205 * C28091 + C5574 * C28092 + C28789 * C28093 +
            C29554 * C28094) *
               C153712 * C153847 -
           (C28235 * C28094 + C4591 * C28093 + C3142 * C28092 + C3139 * C28091 +
            C3138 * C28090) *
               C153712 * C2058) *
              C327 +
          ((C3139 * C28090 + C3142 * C28091 + C4591 * C28092 + C28235 * C28093 +
            C29003 * C28094) *
               C153712 * C2058 -
           ((C134 * C29545 + C29551 + C29551 + C153882 * C29547) * C28094 +
            C29554 * C28093 + C28789 * C28092 + C5574 * C28091 +
            C4205 * C28090) *
               C153712 * C153847) *
              C328) *
         C153748) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C46971 * C136 + C46978 + C46978 + C46968 * C152 + C46973 * C556 +
             C46979 + C46979 + C46969 * C580 + C46975 * C557 + C46980 + C46980 +
             C154146 * C581) *
                C153865 * C154178 +
            (C47044 + C47045 + C47046) * C153865 * C154159 + C47060 * C154130) *
               C2058 -
           (C48137 * C154130 + (C47657 + C47658 + C47659) * C153865 * C154159 +
            (C46975 * C2272 + C47600 + C47600 + C154146 * C2282 +
             C46973 * C557 + C47601 + C47601 + C46969 * C581 + C46971 * C556 +
             C47602 + C47602 + C46968 * C580) *
                C153865 * C154178) *
               C153847) *
              C153767 * C1253 +
          (((C47659 + C47658 + C47657) * C153865 * C154178 +
            (C47656 + C47655 + C47654) * C153865 * C154159 +
            (C48141 + C48142 + C48143) * C153865 * C154130) *
               C153847 -
           (C47061 * C154130 + (C47049 + C47048 + C47047) * C153865 * C154159 +
            (C47046 + C47045 + C47044) * C153865 * C154178) *
               C2058) *
              C153767 * C1254 +
          ((C47060 * C154178 + (C47052 + C47051 + C47050) * C153865 * C154159 +
            (C47053 + C47054 + C47055) * C153865 * C154130) *
               C2058 -
           ((C46975 * C2268 + C48130 + C48130 + C154146 * C2278 +
             C46973 * C561 + C48131 + C48131 + C46969 * C585 + C46971 * C552 +
             C48132 + C48132 + C46968 * C576) *
                C153865 * C154130 +
            (C48143 + C48142 + C48141) * C153865 * C154159 + C48137 * C154178) *
               C153847) *
              C153767 * C1255)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C46971 * C136 + C46978 + C46978 + C46968 * C152 + C46973 * C556 +
             C46979 + C46979 + C46969 * C580 + C46975 * C557 + C46980 + C46980 +
             C154146 * C581) *
                C153865 * C154178 +
            (C47044 + C47045 + C47046) * C153865 * C154159 + C47060 * C154130) *
               C2058 -
           (C48137 * C154130 + (C47657 + C47658 + C47659) * C153865 * C154159 +
            (C46975 * C2272 + C47600 + C47600 + C154146 * C2282 +
             C46973 * C557 + C47601 + C47601 + C46969 * C581 + C46971 * C556 +
             C47602 + C47602 + C46968 * C580) *
                C153865 * C154178) *
               C153847) *
              C326 +
          (((C46971 * C1081 + C48434 + C48434 + C46968 * C1093 +
             C46973 * C1489 + C48435 + C48435 + C46969 * C1499 +
             C46975 * C6161 + C48436 + C48436 + C154146 * C6173) *
                C153865 * C154178 +
            (C48470 + C48471 + C48472) * C153865 * C154159 +
            (C48473 + C48474 + C48475) * C153865 * C154130) *
               C153847 -
           (C47898 * C154130 + (C47355 + C47356 + C47357) * C153865 * C154159 +
            (C46975 * C1489 + C47298 + C47298 + C154146 * C1499 +
             C46973 * C1081 + C47299 + C47299 + C46969 * C1093 + C46971 * C335 +
             C47300 + C47300 + C46968 * C359) *
                C153865 * C154178) *
               C2058) *
              C327 +
          (((C46971 * C336 + C47301 + C47301 + C46968 * C360 + C46973 * C1920 +
             C47302 + C47302 + C46969 * C1930 + C46975 * C3369 + C47303 +
             C47303 + C154146 * C3377) *
                C153865 * C154178 +
            (C47358 + C47359 + C47360) * C153865 * C154159 +
            (C47361 + C47362 + C47363) * C153865 * C154130) *
               C2058 -
           ((C46975 * C6156 + C49802 + C49802 + C154146 * C6168 +
             C46973 * C3371 + C49803 + C49803 + C46969 * C3379 +
             C46971 * C1918 + C49804 + C49804 + C46968 * C1928) *
                C153865 * C154130 +
            (C46975 * C6158 + C49805 + C49805 + C154146 * C6170 +
             C46973 * C3370 + C49806 + C49806 + C46969 * C3378 +
             C46971 * C1919 + C49807 + C49807 + C46968 * C1929) *
                C153865 * C154159 +
            (C46975 * C6160 + C49808 + C49808 + C154146 * C6172 +
             C46973 * C3369 + C49809 + C49809 + C46969 * C3377 +
             C46971 * C1920 + C49810 + C49810 + C46968 * C1930) *
                C153865 * C154178) *
               C153847) *
              C328) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C46971 * C136 + C46978 + C46978 + C46968 * C152 + C46973 * C556 +
             C46979 + C46979 + C46969 * C580 + C46975 * C557 + C46980 + C46980 +
             C154146 * C581) *
                C154181 +
            (C51548 + C51549 + C51550) * C154169 + C51561 * C154143) *
               C153712 * C2058 -
           (C53934 * C154143 + (C52557 + C52558 + C52559) * C154169 +
            (C46975 * C2272 + C47600 + C47600 + C154146 * C2282 +
             C46973 * C557 + C47601 + C47601 + C46969 * C581 + C46971 * C556 +
             C47602 + C47602 + C46968 * C580) *
                C154181) *
               C153712 * C153847) *
              C153767 * C1253 +
          (((C47659 + C47658 + C47657) * C154181 +
            (C48470 + C48471 + C48472) * C154169 +
            (C52560 + C52561 + C52562) * C154143) *
               C153712 * C153847 -
           (C51535 * C154143 + (C47355 + C47356 + C47357) * C154169 +
            (C47046 + C47045 + C47044) * C154181) *
               C153712 * C2058) *
              C153767 * C1254 +
          ((C47058 * C154181 + (C47354 + C47353 + C47352) * C154169 +
            (C47361 + C47362 + C47363) * C154143) *
               C153712 * C2058 -
           ((C46975 * C6156 + C49802 + C49802 + C154146 * C6168 +
             C46973 * C3371 + C49803 + C49803 + C46969 * C3379 +
             C46971 * C1918 + C49804 + C49804 + C46968 * C1928) *
                C154143 +
            (C48475 + C48474 + C48473) * C154169 + C48133 * C154181) *
               C153712 * C153847) *
              C153767 * C1255)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C46971 * C136 + C46978 + C46978 + C46968 * C152 + C46973 * C556 +
             C46979 + C46979 + C46969 * C580 + C46975 * C557 + C46980 + C46980 +
             C154146 * C581) *
                C154181 +
            (C51548 + C51549 + C51550) * C154169 + C51561 * C154143) *
               C153712 * C2058 -
           (C53934 * C154143 + (C52557 + C52558 + C52559) * C154169 +
            (C46975 * C2272 + C47600 + C47600 + C154146 * C2282 +
             C46973 * C557 + C47601 + C47601 + C46969 * C581 + C46971 * C556 +
             C47602 + C47602 + C46968 * C580) *
                C154181) *
               C153712 * C153847) *
              C326 +
          (((C52559 + C52558 + C52557) * C154181 +
            (C52556 + C52555 + C52554) * C154169 +
            (C53941 + C53942 + C53943) * C154143) *
               C153712 * C153847 -
           (C52937 * C154143 + (C51553 + C51552 + C51551) * C154169 +
            (C51550 + C51549 + C51548) * C154181) *
               C153712 * C2058) *
              C327 +
          ((C51561 * C154181 + (C51556 + C51555 + C51554) * C154169 +
            (C52944 + C52945 + C52946) * C154143) *
               C153712 * C2058 -
           ((C46975 * C29880 + C53931 + C53931 + C154146 * C29884 +
             C46973 * C28358 + C53932 + C53932 + C46969 * C28362 +
             C46971 * C5559 + C53933 + C53933 + C46968 * C5565) *
                C154143 +
            (C53943 + C53942 + C53941) * C154169 + C53934 * C154181) *
               C153712 * C153847) *
              C328) *
         C153748) /
            (p * q * std::sqrt(p + q));
    d2ee[225] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
              C97199 + C97199 + C153969 * C580) *
                 C154107 +
             (C101439 + C101440) * C153927) *
                C153717 +
            ((C97252 + C97253) * C154107 + C101388 * C153927) * C153725 +
            C110362 * C82774) *
               C153783 * C154093 -
           (C111247 * C82774 +
            (C101394 * C153927 + C101395 * C154107) * C153725 +
            ((C101442 + C101441) * C153927 + (C101440 + C101439) * C154107) *
                C153717) *
               C153783 * C153819) *
              C154162 +
          (((C101388 * C154107 + C101389 * C153927) * C153717 +
            (C102070 * C154107 + C102071 * C153927) * C153725 +
            (C111246 * C154107 + (C97542 + C97543) * C153927) * C82774) *
               C153783 * C153819 -
           (C110363 * C82774 +
            (C98013 * C153927 + (C97255 + C97254) * C154107) * C153725 +
            (C101395 * C153927 + (C97253 + C97252) * C154107) * C153717) *
               C153783 * C154093) *
              C154163 +
          ((C110362 * C153717 +
            (C97263 * C154107 + C111246 * C153927) * C153725 +
            ((C97259 + C97258) * C154107 + (C98026 + C98027) * C153927) *
                C82774) *
               C153783 * C154093 -
           (((C97195 * C1916 + C97506 + C97506 + C153969 * C1926 +
              C97193 * C340 + C97507 + C97507 + C97191 * C364) *
                 C153927 +
             (C98027 + C98026) * C154107) *
                C82774 +
            ((C97543 + C97542) * C153927 + C98012 * C154107) * C153725 +
            C111247 * C153717) *
               C153783 * C153819) *
              C774)) /
        (p * q * std::sqrt(p + q));
    d2ee[226] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
               C97199 + C97199 + C153969 * C580) *
                  C154107 +
              (C101439 + C101440) * C153927) *
                 C153717 +
             ((C97252 + C97253) * C154107 + C101388 * C153927) * C153725 +
             C110362 * C82774) *
                C154094 -
            (C111541 * C82774 +
             (C102759 * C153927 + (C97810 + C97811) * C154107) * C153725 +
             ((C102794 + C102795) * C153927 +
              (C97195 * C557 + C97756 + C97756 + C153969 * C581 +
               C97193 * C556 + C97757 + C97757 + C97191 * C580) *
                  C154107) *
                 C153717) *
                C153847) *
               C154093 +
           ((((C102795 + C102794) * C154107 + (C102793 + C102792) * C153927) *
                 C153717 +
             (C102770 * C154107 + C102771 * C153927) * C153725 +
             (C111928 * C154107 + (C102370 + C102371) * C153927) * C82774) *
                C153847 -
            (C111247 * C82774 +
             (C101394 * C153927 + C101395 * C154107) * C153725 +
             ((C101442 + C101441) * C153927 + (C101440 + C101439) * C154107) *
                 C153717) *
                C154094) *
               C153819) *
              C329 +
          (((((C97811 + C97810) * C154107 + C102770 * C153927) * C153717 +
             ((C97809 + C97808) * C154107 + C111928 * C153927) * C153725 +
             ((C97807 + C97806) * C154107 + (C98534 + C98535) * C153927) *
                 C82774) *
                C153847 -
            (C110363 * C82774 +
             (C98013 * C153927 + (C97255 + C97254) * C154107) * C153725 +
             (C101395 * C153927 + (C97253 + C97252) * C154107) * C153717) *
                C154094) *
               C154093 +
           (((C101388 * C154107 + C101389 * C153927) * C153717 +
             (C102070 * C154107 + C102071 * C153927) * C153725 +
             (C111246 * C154107 + (C97542 + C97543) * C153927) * C82774) *
                C154094 -
            (((C97195 * C3372 + C99716 + C99716 + C153969 * C3380 +
               C97193 * C1917 + C99717 + C99717 + C97191 * C1927) *
                  C153927 +
              (C98535 + C98534) * C154107) *
                 C82774 +
             ((C102371 + C102370) * C153927 + C111538 * C154107) * C153725 +
             (C102758 * C153927 + C102759 * C154107) * C153717) *
                C153847) *
               C153819) *
              C153754)) /
        (p * q * std::sqrt(p + q));
    d2ee[227] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
              C97199 + C97199 + C153969 * C580) *
                 C154107 +
             (C101439 + C101440) * C153927) *
                C153717 +
            ((C97252 + C97253) * C154107 + C101388 * C153927) * C153725 +
            C110362 * C82774) *
               C153783 * C326 -
           ((C101412 * C153927 + C98013 * C154107) * C82774 +
            (C101394 * C153927 + C101395 * C154107) * C153725 +
            ((C101442 + C101441) * C153927 + (C101440 + C101439) * C154107) *
                C153717) *
               C153783 * C327 +
           ((C101451 * C154107 + (C101446 + C101445) * C153927) * C153717 +
            (C101389 * C154107 + C101453 * C153927) * C153725 +
            (C102071 * C154107 + (C101449 + C101450) * C153927) * C82774) *
               C153783 * C328) *
              C329 +
          (((C101388 * C154107 + C101389 * C153927) * C153717 +
            (C102070 * C154107 + C102071 * C153927) * C153725 +
            ((C97533 + C97532) * C154107 + (C97542 + C97543) * C153927) *
                C82774) *
               C153783 * C327 -
           (C110363 * C82774 +
            (C98013 * C153927 + (C97255 + C97254) * C154107) * C153725 +
            (C101395 * C153927 + (C97253 + C97252) * C154107) * C153717) *
               C153783 * C326 -
           (((C97195 * C4171 + C98860 + C98860 + C153969 * C4179 +
              C97193 * C1344 + C98861 + C98861 + C97191 * C1354) *
                 C153927 +
             (C97543 + C97542) * C154107) *
                C82774 +
            ((C101450 + C101449) * C153927 + C101412 * C154107) * C153725 +
            (C101452 * C153927 + C101394 * C154107) * C153717) *
               C153783 * C328) *
              C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
             C97199 + C97199 + C153969 * C580) *
                C154107 +
            (C101439 + C101440) * C153927) *
               C153717 +
           ((C97252 + C97253) * C154107 + C101388 * C153927) * C153725 +
           C110362 * C82774) *
              C153783 * C153767 * C130 -
          (C110363 * C82774 +
           (C98013 * C153927 + (C97255 + C97254) * C154107) * C153725 +
           (C101395 * C153927 + (C97253 + C97252) * C154107) * C153717) *
              C153783 * C153767 * C131 +
          (C110362 * C153717 +
           (C97263 * C154107 + (C97533 + C97532) * C153927) * C153725 +
           ((C97259 + C97258) * C154107 + (C98026 + C98027) * C153927) *
               C82774) *
              C153783 * C153767 * C132 -
          (((C97195 * C1086 + C98018 + C98018 + C153969 * C1098 +
             C97193 * C341 + C98019 + C98019 + C97191 * C365) *
                C153927 +
            (C97261 + C97260) * C154107) *
               C82774 +
           ((C98027 + C98026) * C153927 + C97264 * C154107) * C153725 +
           C110363 * C153717) *
              C153783 * C153767 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
              C97199 + C97199 + C153969 * C580) *
                 C154107 +
             (C101439 + C101440) * C153927) *
                C153717 +
            ((C97252 + C97253) * C154107 + C101388 * C153927) * C153725 +
            C110362 * C82774) *
               C549 -
           (((C98533 + C98532) * C153927 + C98223 * C154107) * C82774 +
            (C102759 * C153927 + (C97810 + C97811) * C154107) * C153725 +
            ((C102794 + C102795) * C153927 +
             (C97195 * C557 + C97756 + C97756 + C153969 * C581 + C97193 * C556 +
              C97757 + C97757 + C97191 * C580) *
                 C154107) *
                C153717) *
               C550 +
           (((C97193 * C557 + C97758 + C97758 + C97191 * C581 + C97195 * C2272 +
              C97759 + C97759 + C153969 * C2282) *
                 C154107 +
             (C103607 + C103608) * C153927) *
                C153717 +
            ((C97812 + C97813) * C154107 + (C101776 + C101777) * C153927) *
                C153725 +
            ((C97814 + C97815) * C154107 + (C110952 + C110953) * C153927) *
                C82774) *
               C551) *
              C153767 * C329 +
          ((((C97811 + C97810) * C154107 + C102770 * C153927) * C153717 +
            ((C97809 + C97808) * C154107 + (C98532 + C98533) * C153927) *
                C153725 +
            ((C97807 + C97806) * C154107 + (C98534 + C98535) * C153927) *
                C82774) *
               C550 -
           (C110363 * C82774 +
            (C98013 * C153927 + (C97255 + C97254) * C154107) * C153725 +
            (C101395 * C153927 + (C97253 + C97252) * C154107) * C153717) *
               C549 -
           (((C97195 * C8529 + C99062 + C99062 + C153969 * C8531 +
              C97193 * C1486 + C99063 + C99063 + C97191 * C1496) *
                 C153927 +
             (C97817 + C97816) * C154107) *
                C82774 +
            ((C110953 + C110952) * C153927 + (C97815 + C97814) * C154107) *
                C153725 +
            ((C101777 + C101776) * C153927 + (C97813 + C97812) * C154107) *
                C153717) *
               C551) *
              C153767 * C153754)) /
            (p * q * std::sqrt(p + q));
    d2ee[228] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
              C97199 + C97199 + C153969 * C580) *
                 C154107 +
             (C101439 + C101440) * C153927) *
                C153717 +
            ((C97252 + C97253) * C154107 + C101388 * C153927) * C153725 +
            C110362 * C82774) *
               C154094 -
           (C111541 * C82774 +
            (C102759 * C153927 + (C97810 + C97811) * C154107) * C153725 +
            ((C102794 + C102795) * C153927 +
             (C97195 * C557 + C97756 + C97756 + C153969 * C581 + C97193 * C556 +
              C97757 + C97757 + C97191 * C580) *
                 C154107) *
                C153717) *
               C153847) *
              C153767 * C154162 +
          ((((C97811 + C97810) * C154107 + C102770 * C153927) * C153717 +
            ((C97809 + C97808) * C154107 + (C98532 + C98533) * C153927) *
                C153725 +
            ((C97807 + C97806) * C154107 + (C98534 + C98535) * C153927) *
                C82774) *
               C153847 -
           (C110363 * C82774 +
            (C98013 * C153927 + (C97255 + C97254) * C154107) * C153725 +
            (C101395 * C153927 + (C97253 + C97252) * C154107) * C153717) *
               C154094) *
              C153767 * C154163 +
          ((C110362 * C153717 +
            (C97263 * C154107 + C111246 * C153927) * C153725 +
            ((C97259 + C97258) * C154107 + (C98026 + C98027) * C153927) *
                C82774) *
               C154094 -
           (((C97195 * C1485 + C98516 + C98516 + C153969 * C1495 +
              C97193 * C1085 + C98517 + C98517 + C97191 * C1097) *
                 C153927 +
             (C98237 + C98236) * C154107) *
                C82774 +
            ((C98535 + C98534) * C153927 + C98222 * C154107) * C153725 +
            C111541 * C153717) *
               C153847) *
              C153767 * C774)) /
        (p * q * std::sqrt(p + q));
    d2ee[229] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
             C97199 + C97199 + C153969 * C580) *
                C154107 +
            (C101439 + C101440) * C153927) *
               C153717 +
           ((C97252 + C97253) * C154107 + C101388 * C153927) * C153725 +
           C110362 * C82774) *
              C153783 * C153767 * C130 -
          (C110363 * C82774 +
           (C98013 * C153927 + (C97255 + C97254) * C154107) * C153725 +
           (C101395 * C153927 + (C97253 + C97252) * C154107) * C153717) *
              C153783 * C153767 * C131 +
          (C110362 * C153717 +
           (C97263 * C154107 + (C97533 + C97532) * C153927) * C153725 +
           ((C97259 + C97258) * C154107 + (C98026 + C98027) * C153927) *
               C82774) *
              C153783 * C153767 * C132 -
          (((C97195 * C1086 + C98018 + C98018 + C153969 * C1098 +
             C97193 * C341 + C98019 + C98019 + C97191 * C365) *
                C153927 +
            (C97261 + C97260) * C154107) *
               C82774 +
           ((C98027 + C98026) * C153927 + C97264 * C154107) * C153725 +
           C110363 * C153717) *
              C153783 * C153767 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
              C97199 + C97199 + C153969 * C580) *
                 C154107 +
             (C101439 + C101440) * C153927) *
                C153717 +
            ((C97252 + C97253) * C154107 + C101388 * C153927) * C153725 +
            C110362 * C82774) *
               C153783 * C326 -
           ((C101412 * C153927 + C98013 * C154107) * C82774 +
            (C101394 * C153927 + C101395 * C154107) * C153725 +
            ((C101442 + C101441) * C153927 + (C101440 + C101439) * C154107) *
                C153717) *
               C153783 * C327 +
           ((C101451 * C154107 + (C101446 + C101445) * C153927) * C153717 +
            (C101389 * C154107 + C101453 * C153927) * C153725 +
            (C102071 * C154107 + (C101449 + C101450) * C153927) * C82774) *
               C153783 * C328) *
              C329 +
          (((C101388 * C154107 + C101389 * C153927) * C153717 +
            (C102070 * C154107 + C102071 * C153927) * C153725 +
            ((C97533 + C97532) * C154107 + (C97542 + C97543) * C153927) *
                C82774) *
               C153783 * C327 -
           (C110363 * C82774 +
            (C98013 * C153927 + (C97255 + C97254) * C154107) * C153725 +
            (C101395 * C153927 + (C97253 + C97252) * C154107) * C153717) *
               C153783 * C326 -
           (((C97195 * C4171 + C98860 + C98860 + C153969 * C4179 +
              C97193 * C1344 + C98861 + C98861 + C97191 * C1354) *
                 C153927 +
             (C97543 + C97542) * C154107) *
                C82774 +
            ((C101450 + C101449) * C153927 + C101412 * C154107) * C153725 +
            (C101452 * C153927 + C101394 * C154107) * C153717) *
               C153783 * C328) *
              C153754)) /
            (p * q * std::sqrt(p + q));
    d2ee[230] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
              C97199 + C97199 + C153969 * C580) *
                 C154107 +
             (C101439 + C101440) * C153927) *
                C153717 +
            ((C97252 + C97253) * C154107 + C101388 * C153927) * C153725 +
            C110362 * C82774) *
               C153783 * C154164 -
           (C111247 * C82774 +
            (C101394 * C153927 + C101395 * C154107) * C153725 +
            ((C101442 + C101441) * C153927 + (C101440 + C101439) * C154107) *
                C153717) *
               C153783 * C154165 +
           ((C101451 * C154107 + (C101446 + C101445) * C153927) * C153717 +
            (C101389 * C154107 + C101453 * C153927) * C153725 +
            (C102071 * C154107 + (C101449 + C101450) * C153927) * C82774) *
               C153783 * C1629) *
              C154085 +
          (((C101388 * C154107 + C101389 * C153927) * C153717 +
            (C102070 * C154107 + C102071 * C153927) * C153725 +
            (C111246 * C154107 + (C97542 + C97543) * C153927) * C82774) *
               C153783 * C154165 -
           (C110363 * C82774 +
            (C98013 * C153927 + (C97255 + C97254) * C154107) * C153725 +
            (C101395 * C153927 + (C97253 + C97252) * C154107) * C153717) *
               C153783 * C154164 -
           (((C97195 * C4171 + C98860 + C98860 + C153969 * C4179 +
              C97193 * C1344 + C98861 + C98861 + C97191 * C1354) *
                 C153927 +
             (C97543 + C97542) * C154107) *
                C82774 +
            ((C101450 + C101449) * C153927 + C101412 * C154107) * C153725 +
            (C101452 * C153927 + C101394 * C154107) * C153717) *
               C153783 * C1629) *
              C153754)) /
        (p * q * std::sqrt(p + q));
    d2ee[231] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
              C97199 + C97199 + C153969 * C580) *
                 C154107 +
             (C101439 + C101440) * C153927) *
                C153717 +
            ((C97252 + C97253) * C154107 + C101388 * C153927) * C153725 +
            C110362 * C82774) *
               C154094 -
           (C111541 * C82774 +
            (C102759 * C153927 + (C97810 + C97811) * C154107) * C153725 +
            ((C102794 + C102795) * C153927 +
             (C97195 * C557 + C97756 + C97756 + C153969 * C581 + C97193 * C556 +
              C97757 + C97757 + C97191 * C580) *
                 C154107) *
                C153717) *
               C153847) *
              C154164 +
          ((((C102795 + C102794) * C154107 + (C102793 + C102792) * C153927) *
                C153717 +
            (C102770 * C154107 + C102771 * C153927) * C153725 +
            (C111928 * C154107 + (C102370 + C102371) * C153927) * C82774) *
               C153847 -
           (C111247 * C82774 +
            (C101394 * C153927 + C101395 * C154107) * C153725 +
            ((C101442 + C101441) * C153927 + (C101440 + C101439) * C154107) *
                C153717) *
               C154094) *
              C154165 +
          (((C101451 * C154107 + (C101446 + C101445) * C153927) * C153717 +
            (C101389 * C154107 + C101453 * C153927) * C153725 +
            (C102071 * C154107 + (C101449 + C101450) * C153927) * C82774) *
               C154094 -
           (((C97195 * C4809 + C102778 + C102778 + C153969 * C4815 +
              C97193 * C4170 + C102779 + C102779 + C97191 * C4178) *
                 C153927 +
             (C102371 + C102370) * C154107) *
                C82774 +
            ((C102797 + C102796) * C153927 + C102758 * C154107) * C153725 +
            ((C104591 + C104590) * C153927 + C104577 * C154107) * C153717) *
               C153847) *
              C1629) *
         C153748) /
        (p * q * std::sqrt(p + q));
    d2ee[232] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
             C97199 + C97199 + C153969 * C580) *
                C154107 +
            (C101439 + C101440) * C153927) *
               C153717 +
           ((C97252 + C97253) * C154107 + C101388 * C153927) * C153725 +
           C110362 * C82774) *
              C153783 * C1338 -
          (C111247 * C82774 +
           (C101394 * C153927 + C101395 * C154107) * C153725 +
           ((C101442 + C101441) * C153927 + (C101440 + C101439) * C154107) *
               C153717) *
              C153783 * C1339 +
          ((C101451 * C154107 + (C101446 + C101445) * C153927) * C153717 +
           (C101389 * C154107 + C101453 * C153927) * C153725 +
           (C102071 * C154107 + (C101449 + C101450) * C153927) * C82774) *
              C153783 * C1340 -
          (((C97195 * C5557 + C101413 + C101413 + C153969 * C5563 +
             C97193 * C3085 + C101414 + C101414 + C97191 * C3093) *
                C153927 +
            (C101450 + C101449) * C154107) *
               C82774 +
           ((C101448 + C101447) * C153927 + C101452 * C154107) * C153725 +
           ((C103296 + C103295) * C153927 + C103282 * C154107) * C153717) *
              C153783 * C1341) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
              C97199 + C97199 + C153969 * C580) *
                 C154107 +
             (C101439 + C101440) * C153927) *
                C153717 +
            ((C97252 + C97253) * C154107 + C101388 * C153927) * C153725 +
            C110362 * C82774) *
               C153783 * C1251 -
           (C111247 * C82774 +
            (C101394 * C153927 + C101395 * C154107) * C153725 +
            ((C101442 + C101441) * C153927 + (C101440 + C101439) * C154107) *
                C153717) *
               C153783 * C153819) *
              C1253 +
          (((C101388 * C154107 + C101389 * C153927) * C153717 +
            (C102070 * C154107 + C102071 * C153927) * C153725 +
            (C111246 * C154107 + (C97542 + C97543) * C153927) * C82774) *
               C153783 * C153819 -
           (C110363 * C82774 +
            (C98013 * C153927 + (C97255 + C97254) * C154107) * C153725 +
            (C101395 * C153927 + (C97253 + C97252) * C154107) * C153717) *
               C153783 * C1251) *
              C1254 +
          ((C110362 * C153717 +
            (C97263 * C154107 + C111246 * C153927) * C153725 +
            ((C97259 + C97258) * C154107 + (C98026 + C98027) * C153927) *
                C82774) *
               C153783 * C1251 -
           (((C97195 * C1916 + C97506 + C97506 + C153969 * C1926 +
              C97193 * C340 + C97507 + C97507 + C97191 * C364) *
                 C153927 +
             (C98027 + C98026) * C154107) *
                C82774 +
            ((C97543 + C97542) * C153927 + C98012 * C154107) * C153725 +
            C111247 * C153717) *
               C153783 * C153819) *
              C1255)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
              C97199 + C97199 + C153969 * C580) *
                 C154107 +
             (C101439 + C101440) * C153927) *
                C153717 +
            ((C97252 + C97253) * C154107 + C101388 * C153927) * C153725 +
            C110362 * C82774) *
               C549 -
           (C111541 * C82774 +
            (C102759 * C153927 + (C97810 + C97811) * C154107) * C153725 +
            ((C102794 + C102795) * C153927 +
             (C97195 * C557 + C97756 + C97756 + C153969 * C581 + C97193 * C556 +
              C97757 + C97757 + C97191 * C580) *
                 C154107) *
                C153717) *
               C550 +
           (((C97193 * C557 + C97758 + C97758 + C97191 * C581 + C97195 * C2272 +
              C97759 + C97759 + C153969 * C2282) *
                 C154107 +
             (C103607 + C103608) * C153927) *
                C153717 +
            ((C97812 + C97813) * C154107 + (C101776 + C101777) * C153927) *
                C153725 +
            ((C97814 + C97815) * C154107 + (C110952 + C110953) * C153927) *
                C82774) *
               C551) *
              C1251 +
          ((((C102795 + C102794) * C154107 + (C102793 + C102792) * C153927) *
                C153717 +
            (C102770 * C154107 + C102771 * C153927) * C153725 +
            (C111928 * C154107 + (C102370 + C102371) * C153927) * C82774) *
               C550 -
           (C111247 * C82774 +
            (C101394 * C153927 + C101395 * C154107) * C153725 +
            ((C101442 + C101441) * C153927 + (C101440 + C101439) * C154107) *
                C153717) *
               C549 -
           (((C97195 * C6156 + C101760 + C101760 + C153969 * C6168 +
              C97193 * C3371 + C101761 + C101761 + C97191 * C3379) *
                 C153927 +
             (C110953 + C110952) * C154107) *
                C82774 +
            ((C101779 + C101778) * C153927 + (C101777 + C101776) * C154107) *
                C153725 +
            ((C103610 + C103609) * C153927 + (C103608 + C103607) * C154107) *
                C153717) *
               C551) *
              C153819) *
         C153748) /
            (p * q * std::sqrt(p + q));
    d2ee[233] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
               C97199 + C97199 + C153969 * C580) *
                  C154107 +
              (C101439 + C101440) * C153927) *
                 C153717 +
             ((C97252 + C97253) * C154107 + C101388 * C153927) * C153725 +
             C110362 * C82774) *
                C154094 -
            (C111541 * C82774 +
             (C102759 * C153927 + (C97810 + C97811) * C154107) * C153725 +
             ((C102794 + C102795) * C153927 +
              (C97195 * C557 + C97756 + C97756 + C153969 * C581 +
               C97193 * C556 + C97757 + C97757 + C97191 * C580) *
                  C154107) *
                 C153717) *
                C153847) *
               C1251 +
           ((((C102795 + C102794) * C154107 + (C102793 + C102792) * C153927) *
                 C153717 +
             (C102770 * C154107 + C102771 * C153927) * C153725 +
             (C111928 * C154107 + (C102370 + C102371) * C153927) * C82774) *
                C153847 -
            (C111247 * C82774 +
             (C101394 * C153927 + C101395 * C154107) * C153725 +
             ((C101442 + C101441) * C153927 + (C101440 + C101439) * C154107) *
                 C153717) *
                C154094) *
               C153819) *
              C154085 +
          (((((C97811 + C97810) * C154107 + C102770 * C153927) * C153717 +
             ((C97809 + C97808) * C154107 + C111928 * C153927) * C153725 +
             ((C97807 + C97806) * C154107 + (C98534 + C98535) * C153927) *
                 C82774) *
                C153847 -
            (C110363 * C82774 +
             (C98013 * C153927 + (C97255 + C97254) * C154107) * C153725 +
             (C101395 * C153927 + (C97253 + C97252) * C154107) * C153717) *
                C154094) *
               C1251 +
           (((C101388 * C154107 + C101389 * C153927) * C153717 +
             (C102070 * C154107 + C102071 * C153927) * C153725 +
             (C111246 * C154107 + (C97542 + C97543) * C153927) * C82774) *
                C154094 -
            (((C97195 * C3372 + C99716 + C99716 + C153969 * C3380 +
               C97193 * C1917 + C99717 + C99717 + C97191 * C1927) *
                  C153927 +
              (C98535 + C98534) * C154107) *
                 C82774 +
             ((C102371 + C102370) * C153927 + C111538 * C154107) * C153725 +
             (C102758 * C153927 + C102759 * C154107) * C153717) *
                C153847) *
               C153819) *
              C153754)) /
        (p * q * std::sqrt(p + q));
    d2ee[234] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
              C97199 + C97199 + C153969 * C580) *
                 C154107 +
             (C101439 + C101440) * C153927) *
                C153717 +
            ((C97252 + C97253) * C154107 + C101388 * C153927) * C153725 +
            C110362 * C82774) *
               C153783 * C1251 -
           (C111247 * C82774 +
            (C101394 * C153927 + C101395 * C154107) * C153725 +
            ((C101442 + C101441) * C153927 + (C101440 + C101439) * C154107) *
                C153717) *
               C153783 * C153819) *
              C1253 +
          (((C101388 * C154107 + C101389 * C153927) * C153717 +
            (C102070 * C154107 + C102071 * C153927) * C153725 +
            (C111246 * C154107 + (C97542 + C97543) * C153927) * C82774) *
               C153783 * C153819 -
           (C110363 * C82774 +
            (C98013 * C153927 + (C97255 + C97254) * C154107) * C153725 +
            (C101395 * C153927 + (C97253 + C97252) * C154107) * C153717) *
               C153783 * C1251) *
              C1254 +
          ((C110362 * C153717 +
            (C97263 * C154107 + C111246 * C153927) * C153725 +
            ((C97259 + C97258) * C154107 + (C98026 + C98027) * C153927) *
                C82774) *
               C153783 * C1251 -
           (((C97195 * C1916 + C97506 + C97506 + C153969 * C1926 +
              C97193 * C340 + C97507 + C97507 + C97191 * C364) *
                 C153927 +
             (C98027 + C98026) * C154107) *
                C82774 +
            ((C97543 + C97542) * C153927 + C98012 * C154107) * C153725 +
            C111247 * C153717) *
               C153783 * C153819) *
              C1255)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
             C97199 + C97199 + C153969 * C580) *
                C154107 +
            (C101439 + C101440) * C153927) *
               C153717 +
           ((C97252 + C97253) * C154107 + C101388 * C153927) * C153725 +
           C110362 * C82774) *
              C153783 * C1338 -
          (C111247 * C82774 +
           (C101394 * C153927 + C101395 * C154107) * C153725 +
           ((C101442 + C101441) * C153927 + (C101440 + C101439) * C154107) *
               C153717) *
              C153783 * C1339 +
          ((C101451 * C154107 + (C101446 + C101445) * C153927) * C153717 +
           (C101389 * C154107 + C101453 * C153927) * C153725 +
           (C102071 * C154107 + (C101449 + C101450) * C153927) * C82774) *
              C153783 * C1340 -
          (((C97195 * C5557 + C101413 + C101413 + C153969 * C5563 +
             C97193 * C3085 + C101414 + C101414 + C97191 * C3093) *
                C153927 +
            (C101450 + C101449) * C154107) *
               C82774 +
           ((C101448 + C101447) * C153927 + C101452 * C154107) * C153725 +
           ((C103296 + C103295) * C153927 + C103282 * C154107) * C153717) *
              C153783 * C1341) *
         C153748) /
            (p * q * std::sqrt(p + q));
    d2ee[235] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
               C97199 + C97199 + C153969 * C580) *
                  C154107 +
              (C101439 + C101440) * C153927) *
                 C153717 +
             ((C97252 + C97253) * C154107 + C101388 * C153927) * C153725 +
             C110362 * C82774) *
                C2058 -
            (C111541 * C82774 +
             (C102759 * C153927 + (C97810 + C97811) * C154107) * C153725 +
             ((C102794 + C102795) * C153927 +
              (C97195 * C557 + C97756 + C97756 + C153969 * C581 +
               C97193 * C556 + C97757 + C97757 + C97191 * C580) *
                  C154107) *
                 C153717) *
                C153847) *
               C154093 +
           ((((C102795 + C102794) * C154107 + (C102793 + C102792) * C153927) *
                 C153717 +
             (C102770 * C154107 + C102771 * C153927) * C153725 +
             (C111928 * C154107 + (C102370 + C102371) * C153927) * C82774) *
                C153847 -
            (C111247 * C82774 +
             (C101394 * C153927 + C101395 * C154107) * C153725 +
             ((C101442 + C101441) * C153927 + (C101440 + C101439) * C154107) *
                 C153717) *
                C2058) *
               C153819) *
              C154085 +
          (((((C97811 + C97810) * C154107 + C102770 * C153927) * C153717 +
             ((C97809 + C97808) * C154107 + C111928 * C153927) * C153725 +
             ((C97807 + C97806) * C154107 + (C98534 + C98535) * C153927) *
                 C82774) *
                C153847 -
            (C110363 * C82774 +
             (C98013 * C153927 + (C97255 + C97254) * C154107) * C153725 +
             (C101395 * C153927 + (C97253 + C97252) * C154107) * C153717) *
                C2058) *
               C154093 +
           (((C101388 * C154107 + C101389 * C153927) * C153717 +
             (C102070 * C154107 + C102071 * C153927) * C153725 +
             (C111246 * C154107 + (C97542 + C97543) * C153927) * C82774) *
                C2058 -
            (((C97195 * C3372 + C99716 + C99716 + C153969 * C3380 +
               C97193 * C1917 + C99717 + C99717 + C97191 * C1927) *
                  C153927 +
              (C98535 + C98534) * C154107) *
                 C82774 +
             ((C102371 + C102370) * C153927 + C111538 * C154107) * C153725 +
             (C102758 * C153927 + C102759 * C154107) * C153717) *
                C153847) *
               C153819) *
              C153754)) /
        (p * q * std::sqrt(p + q));
    d2ee[236] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
              C97199 + C97199 + C153969 * C580) *
                 C154107 +
             (C101439 + C101440) * C153927) *
                C153717 +
            ((C97252 + C97253) * C154107 + C101388 * C153927) * C153725 +
            C110362 * C82774) *
               C154166 -
           (C111541 * C82774 +
            (C102759 * C153927 + (C97810 + C97811) * C154107) * C153725 +
            ((C102794 + C102795) * C153927 +
             (C97195 * C557 + C97756 + C97756 + C153969 * C581 + C97193 * C556 +
              C97757 + C97757 + C97191 * C580) *
                 C154107) *
                C153717) *
               C154167 +
           (((C97193 * C557 + C97758 + C97758 + C97191 * C581 + C97195 * C2272 +
              C97759 + C97759 + C153969 * C2282) *
                 C154107 +
             (C103607 + C103608) * C153927) *
                C153717 +
            ((C97812 + C97813) * C154107 + (C101776 + C101777) * C153927) *
                C153725 +
            ((C97814 + C97815) * C154107 + (C110952 + C110953) * C153927) *
                C82774) *
               C2574) *
              C154093 +
          ((((C102795 + C102794) * C154107 + (C102793 + C102792) * C153927) *
                C153717 +
            (C102770 * C154107 + C102771 * C153927) * C153725 +
            (C111928 * C154107 + (C102370 + C102371) * C153927) * C82774) *
               C154167 -
           (C111247 * C82774 +
            (C101394 * C153927 + C101395 * C154107) * C153725 +
            ((C101442 + C101441) * C153927 + (C101440 + C101439) * C154107) *
                C153717) *
               C154166 -
           (((C97195 * C6156 + C101760 + C101760 + C153969 * C6168 +
              C97193 * C3371 + C101761 + C101761 + C97191 * C3379) *
                 C153927 +
             (C110953 + C110952) * C154107) *
                C82774 +
            ((C101779 + C101778) * C153927 + (C101777 + C101776) * C154107) *
                C153725 +
            ((C103610 + C103609) * C153927 + (C103608 + C103607) * C154107) *
                C153717) *
               C2574) *
              C153819) *
         C153748) /
        (p * q * std::sqrt(p + q));
    d2ee[237] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
              C97199 + C97199 + C153969 * C580) *
                 C154107 +
             (C101439 + C101440) * C153927) *
                C153717 +
            ((C97252 + C97253) * C154107 + C101388 * C153927) * C153725 +
            C110362 * C82774) *
               C2058 -
           (C111541 * C82774 +
            (C102759 * C153927 + (C97810 + C97811) * C154107) * C153725 +
            ((C102794 + C102795) * C153927 +
             (C97195 * C557 + C97756 + C97756 + C153969 * C581 + C97193 * C556 +
              C97757 + C97757 + C97191 * C580) *
                 C154107) *
                C153717) *
               C153847) *
              C326 +
          ((((C102795 + C102794) * C154107 + (C102793 + C102792) * C153927) *
                C153717 +
            (C102770 * C154107 + C102771 * C153927) * C153725 +
            (C111928 * C154107 + (C102370 + C102371) * C153927) * C82774) *
               C153847 -
           (C111247 * C82774 +
            (C101394 * C153927 + C101395 * C154107) * C153725 +
            ((C101442 + C101441) * C153927 + (C101440 + C101439) * C154107) *
                C153717) *
               C2058) *
              C327 +
          (((C101451 * C154107 + (C101446 + C101445) * C153927) * C153717 +
            (C101389 * C154107 + C101453 * C153927) * C153725 +
            (C102071 * C154107 + (C101449 + C101450) * C153927) * C82774) *
               C2058 -
           (((C97195 * C4809 + C102778 + C102778 + C153969 * C4815 +
              C97193 * C4170 + C102779 + C102779 + C97191 * C4178) *
                 C153927 +
             (C102371 + C102370) * C154107) *
                C82774 +
            ((C102797 + C102796) * C153927 + C102758 * C154107) * C153725 +
            ((C104591 + C104590) * C153927 + C104577 * C154107) * C153717) *
               C153847) *
              C328) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
              C97199 + C97199 + C153969 * C580) *
                 C154107 +
             (C101439 + C101440) * C153927) *
                C153717 +
            ((C97252 + C97253) * C154107 + C101388 * C153927) * C153725 +
            C110362 * C82774) *
               C2058 -
           (C111541 * C82774 +
            (C102759 * C153927 + (C97810 + C97811) * C154107) * C153725 +
            ((C102794 + C102795) * C153927 +
             (C97195 * C557 + C97756 + C97756 + C153969 * C581 + C97193 * C556 +
              C97757 + C97757 + C97191 * C580) *
                 C154107) *
                C153717) *
               C153847) *
              C153767 * C1253 +
          ((((C97811 + C97810) * C154107 + C102770 * C153927) * C153717 +
            ((C97809 + C97808) * C154107 + C111928 * C153927) * C153725 +
            ((C97807 + C97806) * C154107 + (C98534 + C98535) * C153927) *
                C82774) *
               C153847 -
           (C110363 * C82774 +
            (C98013 * C153927 + (C97255 + C97254) * C154107) * C153725 +
            (C101395 * C153927 + (C97253 + C97252) * C154107) * C153717) *
               C2058) *
              C153767 * C1254 +
          ((C110362 * C153717 +
            (C97263 * C154107 + C111246 * C153927) * C153725 +
            ((C97259 + C97258) * C154107 + (C98026 + C98027) * C153927) *
                C82774) *
               C2058 -
           (((C97195 * C1485 + C98516 + C98516 + C153969 * C1495 +
              C97193 * C1085 + C98517 + C98517 + C97191 * C1097) *
                 C153927 +
             (C98237 + C98236) * C154107) *
                C82774 +
            ((C98535 + C98534) * C153927 + C98222 * C154107) * C153725 +
            C111541 * C153717) *
               C153847) *
              C153767 * C1255)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
             C97199 + C97199 + C153969 * C580) *
                C154107 +
            (C101439 + C101440) * C153927) *
               C153717 +
           ((C97252 + C97253) * C154107 + C101388 * C153927) * C153725 +
           C110362 * C82774) *
              C2264 -
          (C111541 * C82774 +
           (C102759 * C153927 + (C97810 + C97811) * C154107) * C153725 +
           ((C102794 + C102795) * C153927 +
            (C97195 * C557 + C97756 + C97756 + C153969 * C581 + C97193 * C556 +
             C97757 + C97757 + C97191 * C580) *
                C154107) *
               C153717) *
              C2265 +
          (((C97193 * C557 + C97758 + C97758 + C97191 * C581 + C97195 * C2272 +
             C97759 + C97759 + C153969 * C2282) *
                C154107 +
            (C103607 + C103608) * C153927) *
               C153717 +
           ((C97812 + C97813) * C154107 + (C101776 + C101777) * C153927) *
               C153725 +
           ((C97814 + C97815) * C154107 + (C110952 + C110953) * C153927) *
               C82774) *
              C2266 -
          (((C97195 * C9165 + C114443 + C114443 + C153969 * C9171 +
             C97193 * C6157 + C114444 + C114444 + C97191 * C6169) *
                C153927 +
            (C97195 * C7667 + C100244 + C100244 + C153969 * C7675 +
             C97193 * C2270 + C100245 + C100245 + C97191 * C2280) *
                C154107) *
               C82774 +
           ((C97195 * C9166 + C105368 + C105368 + C153969 * C9172 +
             C97193 * C6159 + C105369 + C105369 + C97191 * C6171) *
                C153927 +
            (C97195 * C7666 + C100246 + C100246 + C153969 * C7674 +
             C97193 * C2271 + C100247 + C100247 + C97191 * C2281) *
                C154107) *
               C153725 +
           ((C97195 * C9167 + C105372 + C105372 + C153969 * C9173 +
             C97193 * C6161 + C105373 + C105373 + C97191 * C6173) *
                C153927 +
            (C97195 * C7665 + C100248 + C100248 + C153969 * C7673 +
             C97193 * C2272 + C100249 + C100249 + C97191 * C2282) *
                C154107) *
               C153717) *
              C2267) *
         C153767 * C153748) /
            (p * q * std::sqrt(p + q));
    d2ee[238] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
              C97199 + C97199 + C153969 * C580) *
                 C154107 +
             (C101439 + C101440) * C153927) *
                C153717 +
            ((C97252 + C97253) * C154107 + C101388 * C153927) * C153725 +
            C110362 * C82774) *
               C154166 -
           (C111541 * C82774 +
            (C102759 * C153927 + (C97810 + C97811) * C154107) * C153725 +
            ((C102794 + C102795) * C153927 +
             (C97195 * C557 + C97756 + C97756 + C153969 * C581 + C97193 * C556 +
              C97757 + C97757 + C97191 * C580) *
                 C154107) *
                C153717) *
               C154167 +
           (((C97193 * C557 + C97758 + C97758 + C97191 * C581 + C97195 * C2272 +
              C97759 + C97759 + C153969 * C2282) *
                 C154107 +
             (C103607 + C103608) * C153927) *
                C153717 +
            ((C97812 + C97813) * C154107 + (C101776 + C101777) * C153927) *
                C153725 +
            ((C97814 + C97815) * C154107 + (C110952 + C110953) * C153927) *
                C82774) *
               C2574) *
              C153767 * C154085 +
          ((((C97811 + C97810) * C154107 + C102770 * C153927) * C153717 +
            ((C97809 + C97808) * C154107 + C111928 * C153927) * C153725 +
            ((C97807 + C97806) * C154107 + (C98534 + C98535) * C153927) *
                C82774) *
               C154167 -
           (C110363 * C82774 +
            (C98013 * C153927 + (C97255 + C97254) * C154107) * C153725 +
            (C101395 * C153927 + (C97253 + C97252) * C154107) * C153717) *
               C154166 -
           (((C97195 * C8529 + C99062 + C99062 + C153969 * C8531 +
              C97193 * C1486 + C99063 + C99063 + C97191 * C1496) *
                 C153927 +
             (C97817 + C97816) * C154107) *
                C82774 +
            ((C110953 + C110952) * C153927 + (C97815 + C97814) * C154107) *
                C153725 +
            ((C101777 + C101776) * C153927 + (C97813 + C97812) * C154107) *
                C153717) *
               C2574) *
              C153767 * C153754)) /
        (p * q * std::sqrt(p + q));
    d2ee[239] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
              C97199 + C97199 + C153969 * C580) *
                 C154107 +
             (C101439 + C101440) * C153927) *
                C153717 +
            ((C97252 + C97253) * C154107 + C101388 * C153927) * C153725 +
            C110362 * C82774) *
               C2058 -
           (C111541 * C82774 +
            (C102759 * C153927 + (C97810 + C97811) * C154107) * C153725 +
            ((C102794 + C102795) * C153927 +
             (C97195 * C557 + C97756 + C97756 + C153969 * C581 + C97193 * C556 +
              C97757 + C97757 + C97191 * C580) *
                 C154107) *
                C153717) *
               C153847) *
              C153767 * C1253 +
          ((((C97811 + C97810) * C154107 + C102770 * C153927) * C153717 +
            ((C97809 + C97808) * C154107 + C111928 * C153927) * C153725 +
            ((C97807 + C97806) * C154107 + (C98534 + C98535) * C153927) *
                C82774) *
               C153847 -
           (C110363 * C82774 +
            (C98013 * C153927 + (C97255 + C97254) * C154107) * C153725 +
            (C101395 * C153927 + (C97253 + C97252) * C154107) * C153717) *
               C2058) *
              C153767 * C1254 +
          ((C110362 * C153717 +
            (C97263 * C154107 + C111246 * C153927) * C153725 +
            ((C97259 + C97258) * C154107 + (C98026 + C98027) * C153927) *
                C82774) *
               C2058 -
           (((C97195 * C1485 + C98516 + C98516 + C153969 * C1495 +
              C97193 * C1085 + C98517 + C98517 + C97191 * C1097) *
                 C153927 +
             (C98237 + C98236) * C154107) *
                C82774 +
            ((C98535 + C98534) * C153927 + C98222 * C154107) * C153725 +
            C111541 * C153717) *
               C153847) *
              C153767 * C1255)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
              C97199 + C97199 + C153969 * C580) *
                 C154107 +
             (C101439 + C101440) * C153927) *
                C153717 +
            ((C97252 + C97253) * C154107 + C101388 * C153927) * C153725 +
            C110362 * C82774) *
               C2058 -
           (C111541 * C82774 +
            (C102759 * C153927 + (C97810 + C97811) * C154107) * C153725 +
            ((C102794 + C102795) * C153927 +
             (C97195 * C557 + C97756 + C97756 + C153969 * C581 + C97193 * C556 +
              C97757 + C97757 + C97191 * C580) *
                 C154107) *
                C153717) *
               C153847) *
              C326 +
          ((((C102795 + C102794) * C154107 + (C102793 + C102792) * C153927) *
                C153717 +
            (C102770 * C154107 + C102771 * C153927) * C153725 +
            (C111928 * C154107 + (C102370 + C102371) * C153927) * C82774) *
               C153847 -
           (C111247 * C82774 +
            (C101394 * C153927 + C101395 * C154107) * C153725 +
            ((C101442 + C101441) * C153927 + (C101440 + C101439) * C154107) *
                C153717) *
               C2058) *
              C327 +
          (((C101451 * C154107 + (C101446 + C101445) * C153927) * C153717 +
            (C101389 * C154107 + C101453 * C153927) * C153725 +
            (C102071 * C154107 + (C101449 + C101450) * C153927) * C82774) *
               C2058 -
           (((C97195 * C4809 + C102778 + C102778 + C153969 * C4815 +
              C97193 * C4170 + C102779 + C102779 + C97191 * C4178) *
                 C153927 +
             (C102371 + C102370) * C154107) *
                C82774 +
            ((C102797 + C102796) * C153927 + C102758 * C154107) * C153725 +
            ((C104591 + C104590) * C153927 + C104577 * C154107) * C153717) *
               C153847) *
              C328) *
         C153748) /
            (p * q * std::sqrt(p + q));
    d2ee[240] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C152071 * C136 + C115566 + C115566 + C153965 * C152 +
              C152059 * C556 + C115567 + C115567 + C153972 * C580 +
              C115563 * C557 + C115568 + C115568 + C115558 * C581) *
                 C154107 +
             (C120244 + C120245 + C120246) * C153927) *
                C73969 +
            ((C115632 + C115633 + C115634) * C154107 + C120225 * C153927) *
                C153722) *
               C153783 * C154093 -
           ((C120226 * C153927 + C120227 * C154107) * C153722 +
            ((C120247 + C120248 + C120249) * C153927 +
             (C120246 + C120245 + C120244) * C154107) *
                C73969) *
               C153783 * C153819) *
              C154162 +
          (((C120225 * C154107 + C120231 * C153927) * C73969 +
            (C120849 * C154107 + (C115949 + C115950 + C115951) * C153927) *
                C153722) *
               C153783 * C153819 -
           ((C116482 * C153927 + (C115637 + C115636 + C115635) * C154107) *
                C153722 +
            (C120227 * C153927 + (C115634 + C115633 + C115632) * C154107) *
                C73969) *
               C153783 * C154093) *
              C154163 +
          (((C115646 * C154107 + C120849 * C153927) * C73969 +
            ((C115640 + C115639 + C115638) * C154107 +
             (C116490 + C116491 + C116492) * C153927) *
                C153722) *
               C153783 * C154093 -
           (((C115563 * C3372 + C115913 + C115913 + C115558 * C3380 +
              C152059 * C1917 + C115914 + C115914 + C153972 * C1927 +
              C152071 * C339 + C115915 + C115915 + C153965 * C363) *
                 C153927 +
             (C116492 + C116491 + C116490) * C154107) *
                C153722 +
            ((C115951 + C115950 + C115949) * C153927 + C116482 * C154107) *
                C73969) *
               C153783 * C153819) *
              C774)) /
        (p * q * std::sqrt(p + q));
    d2ee[241] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C152071 * C136 + C115566 + C115566 + C153965 * C152 +
               C152059 * C556 + C115567 + C115567 + C153972 * C580 +
               C115563 * C557 + C115568 + C115568 + C115558 * C581) *
                  C154107 +
              (C120244 + C120245 + C120246) * C153927) *
                 C73969 +
             ((C115632 + C115633 + C115634) * C154107 + C120225 * C153927) *
                 C153722) *
                C154094 -
            ((C121540 * C153927 + (C116245 + C116246 + C116247) * C154107) *
                 C153722 +
             ((C121554 + C121555 + C121556) * C153927 +
              (C115563 * C2272 + C116188 + C116188 + C115558 * C2282 +
               C152059 * C557 + C116189 + C116189 + C153972 * C581 +
               C152071 * C556 + C116190 + C116190 + C153965 * C580) *
                  C154107) *
                 C73969) *
                C153847) *
               C154093 +
           ((((C121556 + C121555 + C121554) * C154107 +
              (C152071 * C1920 + C118398 + C118398 + C153965 * C1930 +
               C152059 * C3369 + C118397 + C118397 + C153972 * C3377 +
               C115563 * C6160 + C118396 + C118396 + C115558 * C6172) *
                  C153927) *
                 C73969 +
             (C121544 * C154107 + (C121557 + C121558 + C121559) * C153927) *
                 C153722) *
                C153847 -
            ((C120226 * C153927 + C120227 * C154107) * C153722 +
             ((C120247 + C120248 + C120249) * C153927 +
              (C120246 + C120245 + C120244) * C154107) *
                 C73969) *
                C154094) *
               C153819) *
              C329 +
          (((((C116247 + C116246 + C116245) * C154107 + C121544 * C153927) *
                 C73969 +
             ((C116244 + C116243 + C116242) * C154107 +
              (C117061 + C117062 + C117063) * C153927) *
                 C153722) *
                C153847 -
            ((C116482 * C153927 + (C115637 + C115636 + C115635) * C154107) *
                 C153722 +
             (C120227 * C153927 + (C115634 + C115633 + C115632) * C154107) *
                 C73969) *
                C154094) *
               C154093 +
           (((C120225 * C154107 + C120231 * C153927) * C73969 +
             (C120849 * C154107 + (C115949 + C115950 + C115951) * C153927) *
                 C153722) *
                C154094 -
            (((C115563 * C6156 + C118390 + C118390 + C115558 * C6168 +
               C152059 * C3371 + C118391 + C118391 + C153972 * C3379 +
               C152071 * C1918 + C118392 + C118392 + C153965 * C1928) *
                  C153927 +
              (C117063 + C117062 + C117061) * C154107) *
                 C153722 +
             ((C121559 + C121558 + C121557) * C153927 + C121540 * C154107) *
                 C73969) *
                C153847) *
               C153819) *
              C153754)) /
        (p * q * std::sqrt(p + q));
    d2ee[242] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C152071 * C136 + C115566 + C115566 + C153965 * C152 +
              C152059 * C556 + C115567 + C115567 + C153972 * C580 +
              C115563 * C557 + C115568 + C115568 + C115558 * C581) *
                 C154107 +
             (C120244 + C120245 + C120246) * C153927) *
                C73969 +
            ((C115632 + C115633 + C115634) * C154107 + C120225 * C153927) *
                C153722) *
               C153783 * C326 -
           ((C120226 * C153927 + C120227 * C154107) * C153722 +
            ((C120247 + C120248 + C120249) * C153927 +
             (C120246 + C120245 + C120244) * C154107) *
                C73969) *
               C153783 * C327 +
           (((C120249 + C120248 + C120247) * C154107 +
             (C152071 * C1347 + C117436 + C117436 + C153965 * C1357 +
              C152059 * C4168 + C117435 + C117435 + C153972 * C4176 +
              C115563 * C4811 + C117434 + C117434 + C115558 * C4817) *
                 C153927) *
                C73969 +
            (C120231 * C154107 + (C120250 + C120251 + C120252) * C153927) *
                C153722) *
               C153783 * C328) *
              C329 +
          (((C120225 * C154107 + C120231 * C153927) * C73969 +
            ((C115942 + C115941 + C115940) * C154107 +
             (C115949 + C115950 + C115951) * C153927) *
                C153722) *
               C153783 * C327 -
           ((C116482 * C153927 + (C115637 + C115636 + C115635) * C154107) *
                C153722 +
            (C120227 * C153927 + (C115634 + C115633 + C115632) * C154107) *
                C73969) *
               C153783 * C326 -
           (((C115563 * C4809 + C117428 + C117428 + C115558 * C4815 +
              C152059 * C4170 + C117429 + C117429 + C153972 * C4178 +
              C152071 * C1345 + C117430 + C117430 + C153965 * C1355) *
                 C153927 +
             (C115951 + C115950 + C115949) * C154107) *
                C153722 +
            ((C120252 + C120251 + C120250) * C153927 + C120226 * C154107) *
                C73969) *
               C153783 * C328) *
              C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C152071 * C136 + C115566 + C115566 + C153965 * C152 +
             C152059 * C556 + C115567 + C115567 + C153972 * C580 +
             C115563 * C557 + C115568 + C115568 + C115558 * C581) *
                C154107 +
            (C152071 * C335 + C115888 + C115888 + C153965 * C359 +
             C152059 * C1081 + C115887 + C115887 + C153972 * C1093 +
             C115563 * C1489 + C115886 + C115886 + C115558 * C1499) *
                C153927) *
               C73969 +
           ((C115632 + C115633 + C115634) * C154107 +
            (C115945 + C115944 + C115943) * C153927) *
               C153722) *
              C153783 * C153767 * C130 -
          ((C116482 * C153927 + (C115637 + C115636 + C115635) * C154107) *
               C153722 +
           ((C115943 + C115944 + C115945) * C153927 +
            (C115634 + C115633 + C115632) * C154107) *
               C73969) *
              C153783 * C153767 * C131 +
          ((C115646 * C154107 + (C115942 + C115941 + C115940) * C153927) *
               C73969 +
           ((C115640 + C115639 + C115638) * C154107 +
            (C116490 + C116491 + C116492) * C153927) *
               C153722) *
              C153783 * C153767 * C132 -
          (((C115563 * C1485 + C116479 + C116479 + C115558 * C1495 +
             C152059 * C1085 + C116480 + C116480 + C153972 * C1097 +
             C152071 * C331 + C116481 + C116481 + C153965 * C355) *
                C153927 +
            (C115643 + C115642 + C115641) * C154107) *
               C153722 +
           ((C116492 + C116491 + C116490) * C153927 + C115647 * C154107) *
               C73969) *
              C153783 * C153767 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C152071 * C136 + C115566 + C115566 + C153965 * C152 +
              C152059 * C556 + C115567 + C115567 + C153972 * C580 +
              C115563 * C557 + C115568 + C115568 + C115558 * C581) *
                 C154107 +
             (C120244 + C120245 + C120246) * C153927) *
                C73969 +
            ((C115632 + C115633 + C115634) * C154107 + C120225 * C153927) *
                C153722) *
               C549 -
           (((C117060 + C117059 + C117058) * C153927 +
             (C116245 + C116246 + C116247) * C154107) *
                C153722 +
            ((C115563 * C6161 + C117024 + C117024 + C115558 * C6173 +
              C152059 * C1489 + C117023 + C117023 + C153972 * C1499 +
              C152071 * C1081 + C117022 + C117022 + C153965 * C1093) *
                 C153927 +
             (C115563 * C2272 + C116188 + C116188 + C115558 * C2282 +
              C152059 * C557 + C116189 + C116189 + C153972 * C581 +
              C152071 * C556 + C116190 + C116190 + C153965 * C580) *
                 C154107) *
                C73969) *
               C550 +
           (((C152071 * C557 + C116191 + C116191 + C153965 * C581 +
              C152059 * C2272 + C116192 + C116192 + C153972 * C2282 +
              C115563 * C7665 + C116193 + C116193 + C115558 * C7673) *
                 C154107 +
             (C152071 * C1489 + C117663 + C117663 + C153965 * C1499 +
              C152059 * C6161 + C117662 + C117662 + C153972 * C6173 +
              C115563 * C9167 + C117661 + C117661 + C115558 * C9173) *
                 C153927) *
                C73969 +
            ((C116248 + C116249 + C116250) * C154107 +
             (C120555 + C120556 + C120557) * C153927) *
                C153722) *
               C551) *
              C153767 * C329 +
          ((((C116247 + C116246 + C116245) * C154107 +
             (C117058 + C117059 + C117060) * C153927) *
                C73969 +
            ((C116244 + C116243 + C116242) * C154107 +
             (C117061 + C117062 + C117063) * C153927) *
                C153722) *
               C550 -
           ((C116482 * C153927 + (C115637 + C115636 + C115635) * C154107) *
                C153722 +
            (C120227 * C153927 + (C115634 + C115633 + C115632) * C154107) *
                C73969) *
               C549 -
           (((C115563 * C9165 + C117655 + C117655 + C115558 * C9171 +
              C152059 * C6157 + C117656 + C117656 + C153972 * C6169 +
              C152071 * C1487 + C117657 + C117657 + C153965 * C1497) *
                 C153927 +
             (C116253 + C116252 + C116251) * C154107) *
                C153722 +
            ((C120557 + C120556 + C120555) * C153927 +
             (C116250 + C116249 + C116248) * C154107) *
                C73969) *
               C551) *
              C153767 * C153754)) /
            (p * q * std::sqrt(p + q));
    d2ee[243] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C152071 * C136 + C115566 + C115566 + C153965 * C152 +
              C152059 * C556 + C115567 + C115567 + C153972 * C580 +
              C115563 * C557 + C115568 + C115568 + C115558 * C581) *
                 C154107 +
             (C120244 + C120245 + C120246) * C153927) *
                C73969 +
            ((C115632 + C115633 + C115634) * C154107 + C120225 * C153927) *
                C153722) *
               C154094 -
           (((C117060 + C117059 + C117058) * C153927 +
             (C116245 + C116246 + C116247) * C154107) *
                C153722 +
            ((C115563 * C6161 + C117024 + C117024 + C115558 * C6173 +
              C152059 * C1489 + C117023 + C117023 + C153972 * C1499 +
              C152071 * C1081 + C117022 + C117022 + C153965 * C1093) *
                 C153927 +
             (C115563 * C2272 + C116188 + C116188 + C115558 * C2282 +
              C152059 * C557 + C116189 + C116189 + C153972 * C581 +
              C152071 * C556 + C116190 + C116190 + C153965 * C580) *
                 C154107) *
                C73969) *
               C153847) *
              C153767 * C154162 +
          ((((C116247 + C116246 + C116245) * C154107 +
             (C117058 + C117059 + C117060) * C153927) *
                C73969 +
            ((C116244 + C116243 + C116242) * C154107 +
             (C117061 + C117062 + C117063) * C153927) *
                C153722) *
               C153847 -
           ((C116482 * C153927 + (C115637 + C115636 + C115635) * C154107) *
                C153722 +
            (C120227 * C153927 + (C115634 + C115633 + C115632) * C154107) *
                C73969) *
               C154094) *
              C153767 * C154163 +
          (((C115646 * C154107 + C120849 * C153927) * C73969 +
            ((C115640 + C115639 + C115638) * C154107 +
             (C116490 + C116491 + C116492) * C153927) *
                C153722) *
               C154094 -
           (((C115563 * C8529 + C117043 + C117043 + C115558 * C8531 +
              C152059 * C1486 + C117044 + C117044 + C153972 * C1496 +
              C152071 * C1084 + C117045 + C117045 + C153965 * C1096) *
                 C153927 +
             (C116731 + C116730 + C116729) * C154107) *
                C153722 +
            ((C117063 + C117062 + C117061) * C153927 + C116721 * C154107) *
                C73969) *
               C153847) *
              C153767 * C774)) /
        (p * q * std::sqrt(p + q));
    d2ee[244] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C152071 * C136 + C115566 + C115566 + C153965 * C152 +
             C152059 * C556 + C115567 + C115567 + C153972 * C580 +
             C115563 * C557 + C115568 + C115568 + C115558 * C581) *
                C154107 +
            (C152071 * C335 + C115888 + C115888 + C153965 * C359 +
             C152059 * C1081 + C115887 + C115887 + C153972 * C1093 +
             C115563 * C1489 + C115886 + C115886 + C115558 * C1499) *
                C153927) *
               C73969 +
           ((C115632 + C115633 + C115634) * C154107 +
            (C115945 + C115944 + C115943) * C153927) *
               C153722) *
              C153783 * C153767 * C130 -
          ((C116482 * C153927 + (C115637 + C115636 + C115635) * C154107) *
               C153722 +
           ((C115943 + C115944 + C115945) * C153927 +
            (C115634 + C115633 + C115632) * C154107) *
               C73969) *
              C153783 * C153767 * C131 +
          ((C115646 * C154107 + (C115942 + C115941 + C115940) * C153927) *
               C73969 +
           ((C115640 + C115639 + C115638) * C154107 +
            (C116490 + C116491 + C116492) * C153927) *
               C153722) *
              C153783 * C153767 * C132 -
          (((C115563 * C1485 + C116479 + C116479 + C115558 * C1495 +
             C152059 * C1085 + C116480 + C116480 + C153972 * C1097 +
             C152071 * C331 + C116481 + C116481 + C153965 * C355) *
                C153927 +
            (C115643 + C115642 + C115641) * C154107) *
               C153722 +
           ((C116492 + C116491 + C116490) * C153927 + C115647 * C154107) *
               C73969) *
              C153783 * C153767 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C152071 * C136 + C115566 + C115566 + C153965 * C152 +
              C152059 * C556 + C115567 + C115567 + C153972 * C580 +
              C115563 * C557 + C115568 + C115568 + C115558 * C581) *
                 C154107 +
             (C120244 + C120245 + C120246) * C153927) *
                C73969 +
            ((C115632 + C115633 + C115634) * C154107 + C120225 * C153927) *
                C153722) *
               C153783 * C326 -
           ((C120226 * C153927 + C120227 * C154107) * C153722 +
            ((C120247 + C120248 + C120249) * C153927 +
             (C120246 + C120245 + C120244) * C154107) *
                C73969) *
               C153783 * C327 +
           (((C120249 + C120248 + C120247) * C154107 +
             (C152071 * C1347 + C117436 + C117436 + C153965 * C1357 +
              C152059 * C4168 + C117435 + C117435 + C153972 * C4176 +
              C115563 * C4811 + C117434 + C117434 + C115558 * C4817) *
                 C153927) *
                C73969 +
            (C120231 * C154107 + (C120250 + C120251 + C120252) * C153927) *
                C153722) *
               C153783 * C328) *
              C329 +
          (((C120225 * C154107 + C120231 * C153927) * C73969 +
            ((C115942 + C115941 + C115940) * C154107 +
             (C115949 + C115950 + C115951) * C153927) *
                C153722) *
               C153783 * C327 -
           ((C116482 * C153927 + (C115637 + C115636 + C115635) * C154107) *
                C153722 +
            (C120227 * C153927 + (C115634 + C115633 + C115632) * C154107) *
                C73969) *
               C153783 * C326 -
           (((C115563 * C4809 + C117428 + C117428 + C115558 * C4815 +
              C152059 * C4170 + C117429 + C117429 + C153972 * C4178 +
              C152071 * C1345 + C117430 + C117430 + C153965 * C1355) *
                 C153927 +
             (C115951 + C115950 + C115949) * C154107) *
                C153722 +
            ((C120252 + C120251 + C120250) * C153927 + C120226 * C154107) *
                C73969) *
               C153783 * C328) *
              C153754)) /
            (p * q * std::sqrt(p + q));
    d2ee[245] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C152071 * C136 + C115566 + C115566 + C153965 * C152 +
              C152059 * C556 + C115567 + C115567 + C153972 * C580 +
              C115563 * C557 + C115568 + C115568 + C115558 * C581) *
                 C154107 +
             (C120244 + C120245 + C120246) * C153927) *
                C73969 +
            ((C115632 + C115633 + C115634) * C154107 + C120225 * C153927) *
                C153722) *
               C153783 * C154164 -
           ((C120226 * C153927 + C120227 * C154107) * C153722 +
            ((C120247 + C120248 + C120249) * C153927 +
             (C120246 + C120245 + C120244) * C154107) *
                C73969) *
               C153783 * C154165 +
           (((C120249 + C120248 + C120247) * C154107 +
             (C122062 + C122063 + C122064) * C153927) *
                C73969 +
            (C120231 * C154107 + (C120250 + C120251 + C120252) * C153927) *
                C153722) *
               C153783 * C1629) *
              C154085 +
          (((C120225 * C154107 + C120231 * C153927) * C73969 +
            (C120849 * C154107 + (C115949 + C115950 + C115951) * C153927) *
                C153722) *
               C153783 * C154165 -
           ((C116482 * C153927 + (C115637 + C115636 + C115635) * C154107) *
                C153722 +
            (C120227 * C153927 + (C115634 + C115633 + C115632) * C154107) *
                C73969) *
               C153783 * C154164 -
           (((C115563 * C4809 + C117428 + C117428 + C115558 * C4815 +
              C152059 * C4170 + C117429 + C117429 + C153972 * C4178 +
              C152071 * C1345 + C117430 + C117430 + C153965 * C1355) *
                 C153927 +
             (C115951 + C115950 + C115949) * C154107) *
                C153722 +
            ((C120252 + C120251 + C120250) * C153927 + C120226 * C154107) *
                C73969) *
               C153783 * C1629) *
              C153754)) /
        (p * q * std::sqrt(p + q));
    d2ee[246] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C152071 * C136 + C115566 + C115566 + C153965 * C152 +
              C152059 * C556 + C115567 + C115567 + C153972 * C580 +
              C115563 * C557 + C115568 + C115568 + C115558 * C581) *
                 C154107 +
             (C120244 + C120245 + C120246) * C153927) *
                C73969 +
            ((C115632 + C115633 + C115634) * C154107 + C120225 * C153927) *
                C153722) *
               C154094 -
           ((C121540 * C153927 + (C116245 + C116246 + C116247) * C154107) *
                C153722 +
            ((C121554 + C121555 + C121556) * C153927 +
             (C115563 * C2272 + C116188 + C116188 + C115558 * C2282 +
              C152059 * C557 + C116189 + C116189 + C153972 * C581 +
              C152071 * C556 + C116190 + C116190 + C153965 * C580) *
                 C154107) *
                C73969) *
               C153847) *
              C154164 +
          ((((C121556 + C121555 + C121554) * C154107 +
             (C123360 + C123361 + C123362) * C153927) *
                C73969 +
            (C121544 * C154107 + (C121557 + C121558 + C121559) * C153927) *
                C153722) *
               C153847 -
           ((C120226 * C153927 + C120227 * C154107) * C153722 +
            ((C120247 + C120248 + C120249) * C153927 +
             (C120246 + C120245 + C120244) * C154107) *
                C73969) *
               C154094) *
              C154165 +
          ((((C120249 + C120248 + C120247) * C154107 +
             (C122062 + C122063 + C122064) * C153927) *
                C73969 +
            (C120231 * C154107 + (C120250 + C120251 + C120252) * C153927) *
                C153722) *
               C154094 -
           (((C115563 * C31684 + C123348 + C123348 + C115558 * C31686 +
              C152059 * C4810 + C123349 + C123349 + C153972 * C4816 +
              C152071 * C4169 + C123350 + C123350 + C153965 * C4177) *
                 C153927 +
             (C121559 + C121558 + C121557) * C154107) *
                C153722 +
            ((C115563 * C29881 + C123351 + C123351 + C115558 * C29885 +
              C152059 * C4811 + C123352 + C123352 + C153972 * C4817 +
              C152071 * C4168 + C123353 + C123353 + C153965 * C4176) *
                 C153927 +
             (C123362 + C123361 + C123360) * C154107) *
                C73969) *
               C153847) *
              C1629) *
         C153748) /
        (p * q * std::sqrt(p + q));
    d2ee[247] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C152071 * C136 + C115566 + C115566 + C153965 * C152 +
             C152059 * C556 + C115567 + C115567 + C153972 * C580 +
             C115563 * C557 + C115568 + C115568 + C115558 * C581) *
                C154107 +
            (C120244 + C120245 + C120246) * C153927) *
               C73969 +
           ((C115632 + C115633 + C115634) * C154107 + C120225 * C153927) *
               C153722) *
              C153783 * C1338 -
          ((C120226 * C153927 + C120227 * C154107) * C153722 +
           ((C120247 + C120248 + C120249) * C153927 +
            (C120246 + C120245 + C120244) * C154107) *
               C73969) *
              C153783 * C1339 +
          (((C120249 + C120248 + C120247) * C154107 +
            (C122062 + C122063 + C122064) * C153927) *
               C73969 +
           (C120231 * C154107 + (C120250 + C120251 + C120252) * C153927) *
               C153722) *
              C153783 * C1340 -
          (((C115563 * C28359 + C122050 + C122050 + C115558 * C28363 +
             C152059 * C5558 + C122051 + C122051 + C153972 * C5564 +
             C152071 * C3084 + C122052 + C122052 + C153965 * C3092) *
                C153927 +
            (C120252 + C120251 + C120250) * C154107) *
               C153722 +
           ((C115563 * C28358 + C122053 + C122053 + C115558 * C28362 +
             C152059 * C5559 + C122054 + C122054 + C153972 * C5565 +
             C152071 * C3083 + C122055 + C122055 + C153965 * C3091) *
                C153927 +
            (C122064 + C122063 + C122062) * C154107) *
               C73969) *
              C153783 * C1341) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C152071 * C136 + C115566 + C115566 + C153965 * C152 +
              C152059 * C556 + C115567 + C115567 + C153972 * C580 +
              C115563 * C557 + C115568 + C115568 + C115558 * C581) *
                 C154107 +
             (C120244 + C120245 + C120246) * C153927) *
                C73969 +
            ((C115632 + C115633 + C115634) * C154107 + C120225 * C153927) *
                C153722) *
               C153783 * C1251 -
           ((C120226 * C153927 + C120227 * C154107) * C153722 +
            ((C120247 + C120248 + C120249) * C153927 +
             (C120246 + C120245 + C120244) * C154107) *
                C73969) *
               C153783 * C153819) *
              C1253 +
          (((C120225 * C154107 + C120231 * C153927) * C73969 +
            (C120849 * C154107 + (C115949 + C115950 + C115951) * C153927) *
                C153722) *
               C153783 * C153819 -
           ((C116482 * C153927 + (C115637 + C115636 + C115635) * C154107) *
                C153722 +
            (C120227 * C153927 + (C115634 + C115633 + C115632) * C154107) *
                C73969) *
               C153783 * C1251) *
              C1254 +
          (((C115646 * C154107 + C120849 * C153927) * C73969 +
            ((C115640 + C115639 + C115638) * C154107 +
             (C116490 + C116491 + C116492) * C153927) *
                C153722) *
               C153783 * C1251 -
           (((C115563 * C3372 + C115913 + C115913 + C115558 * C3380 +
              C152059 * C1917 + C115914 + C115914 + C153972 * C1927 +
              C152071 * C339 + C115915 + C115915 + C153965 * C363) *
                 C153927 +
             (C116492 + C116491 + C116490) * C154107) *
                C153722 +
            ((C115951 + C115950 + C115949) * C153927 + C116482 * C154107) *
                C73969) *
               C153783 * C153819) *
              C1255)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C152071 * C136 + C115566 + C115566 + C153965 * C152 +
              C152059 * C556 + C115567 + C115567 + C153972 * C580 +
              C115563 * C557 + C115568 + C115568 + C115558 * C581) *
                 C154107 +
             (C120244 + C120245 + C120246) * C153927) *
                C73969 +
            ((C115632 + C115633 + C115634) * C154107 + C120225 * C153927) *
                C153722) *
               C549 -
           ((C121540 * C153927 + (C116245 + C116246 + C116247) * C154107) *
                C153722 +
            ((C121554 + C121555 + C121556) * C153927 +
             (C115563 * C2272 + C116188 + C116188 + C115558 * C2282 +
              C152059 * C557 + C116189 + C116189 + C153972 * C581 +
              C152071 * C556 + C116190 + C116190 + C153965 * C580) *
                 C154107) *
                C73969) *
               C550 +
           (((C152071 * C557 + C116191 + C116191 + C153965 * C581 +
              C152059 * C2272 + C116192 + C116192 + C153972 * C2282 +
              C115563 * C7665 + C116193 + C116193 + C115558 * C7673) *
                 C154107 +
             (C122373 + C122374 + C122375) * C153927) *
                C73969 +
            ((C116248 + C116249 + C116250) * C154107 +
             (C120555 + C120556 + C120557) * C153927) *
                C153722) *
               C551) *
              C1251 +
          ((((C121556 + C121555 + C121554) * C154107 +
             (C152071 * C1920 + C118398 + C118398 + C153965 * C1930 +
              C152059 * C3369 + C118397 + C118397 + C153972 * C3377 +
              C115563 * C6160 + C118396 + C118396 + C115558 * C6172) *
                 C153927) *
                C73969 +
            (C121544 * C154107 + (C121557 + C121558 + C121559) * C153927) *
                C153722) *
               C550 -
           ((C120226 * C153927 + C120227 * C154107) * C153722 +
            ((C120247 + C120248 + C120249) * C153927 +
             (C120246 + C120245 + C120244) * C154107) *
                C73969) *
               C549 -
           (((C115563 * C30947 + C122361 + C122361 + C115558 * C30951 +
              C152059 * C6158 + C122362 + C122362 + C153972 * C6170 +
              C152071 * C3370 + C122363 + C122363 + C153965 * C3378) *
                 C153927 +
             (C120557 + C120556 + C120555) * C154107) *
                C153722 +
            ((C115563 * C30946 + C122364 + C122364 + C115558 * C30950 +
              C152059 * C6160 + C122365 + C122365 + C153972 * C6172 +
              C152071 * C3369 + C122366 + C122366 + C153965 * C3377) *
                 C153927 +
             (C122375 + C122374 + C122373) * C154107) *
                C73969) *
               C551) *
              C153819) *
         C153748) /
            (p * q * std::sqrt(p + q));
    d2ee[248] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C152071 * C136 + C115566 + C115566 + C153965 * C152 +
               C152059 * C556 + C115567 + C115567 + C153972 * C580 +
               C115563 * C557 + C115568 + C115568 + C115558 * C581) *
                  C154107 +
              (C120244 + C120245 + C120246) * C153927) *
                 C73969 +
             ((C115632 + C115633 + C115634) * C154107 + C120225 * C153927) *
                 C153722) *
                C154094 -
            ((C121540 * C153927 + (C116245 + C116246 + C116247) * C154107) *
                 C153722 +
             ((C121554 + C121555 + C121556) * C153927 +
              (C115563 * C2272 + C116188 + C116188 + C115558 * C2282 +
               C152059 * C557 + C116189 + C116189 + C153972 * C581 +
               C152071 * C556 + C116190 + C116190 + C153965 * C580) *
                  C154107) *
                 C73969) *
                C153847) *
               C1251 +
           ((((C121556 + C121555 + C121554) * C154107 +
              (C152071 * C1920 + C118398 + C118398 + C153965 * C1930 +
               C152059 * C3369 + C118397 + C118397 + C153972 * C3377 +
               C115563 * C6160 + C118396 + C118396 + C115558 * C6172) *
                  C153927) *
                 C73969 +
             (C121544 * C154107 + (C121557 + C121558 + C121559) * C153927) *
                 C153722) *
                C153847 -
            ((C120226 * C153927 + C120227 * C154107) * C153722 +
             ((C120247 + C120248 + C120249) * C153927 +
              (C120246 + C120245 + C120244) * C154107) *
                 C73969) *
                C154094) *
               C153819) *
              C154085 +
          (((((C116247 + C116246 + C116245) * C154107 + C121544 * C153927) *
                 C73969 +
             ((C116244 + C116243 + C116242) * C154107 +
              (C117061 + C117062 + C117063) * C153927) *
                 C153722) *
                C153847 -
            ((C116482 * C153927 + (C115637 + C115636 + C115635) * C154107) *
                 C153722 +
             (C120227 * C153927 + (C115634 + C115633 + C115632) * C154107) *
                 C73969) *
                C154094) *
               C1251 +
           (((C120225 * C154107 + C120231 * C153927) * C73969 +
             (C120849 * C154107 + (C115949 + C115950 + C115951) * C153927) *
                 C153722) *
                C154094 -
            (((C115563 * C6156 + C118390 + C118390 + C115558 * C6168 +
               C152059 * C3371 + C118391 + C118391 + C153972 * C3379 +
               C152071 * C1918 + C118392 + C118392 + C153965 * C1928) *
                  C153927 +
              (C117063 + C117062 + C117061) * C154107) *
                 C153722 +
             ((C121559 + C121558 + C121557) * C153927 + C121540 * C154107) *
                 C73969) *
                C153847) *
               C153819) *
              C153754)) /
        (p * q * std::sqrt(p + q));
    d2ee[249] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C152071 * C136 + C115566 + C115566 + C153965 * C152 +
              C152059 * C556 + C115567 + C115567 + C153972 * C580 +
              C115563 * C557 + C115568 + C115568 + C115558 * C581) *
                 C154107 +
             (C120244 + C120245 + C120246) * C153927) *
                C73969 +
            ((C115632 + C115633 + C115634) * C154107 + C120225 * C153927) *
                C153722) *
               C153783 * C1251 -
           ((C120226 * C153927 + C120227 * C154107) * C153722 +
            ((C120247 + C120248 + C120249) * C153927 +
             (C120246 + C120245 + C120244) * C154107) *
                C73969) *
               C153783 * C153819) *
              C1253 +
          (((C120225 * C154107 + C120231 * C153927) * C73969 +
            (C120849 * C154107 + (C115949 + C115950 + C115951) * C153927) *
                C153722) *
               C153783 * C153819 -
           ((C116482 * C153927 + (C115637 + C115636 + C115635) * C154107) *
                C153722 +
            (C120227 * C153927 + (C115634 + C115633 + C115632) * C154107) *
                C73969) *
               C153783 * C1251) *
              C1254 +
          (((C115646 * C154107 + C120849 * C153927) * C73969 +
            ((C115640 + C115639 + C115638) * C154107 +
             (C116490 + C116491 + C116492) * C153927) *
                C153722) *
               C153783 * C1251 -
           (((C115563 * C3372 + C115913 + C115913 + C115558 * C3380 +
              C152059 * C1917 + C115914 + C115914 + C153972 * C1927 +
              C152071 * C339 + C115915 + C115915 + C153965 * C363) *
                 C153927 +
             (C116492 + C116491 + C116490) * C154107) *
                C153722 +
            ((C115951 + C115950 + C115949) * C153927 + C116482 * C154107) *
                C73969) *
               C153783 * C153819) *
              C1255)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C152071 * C136 + C115566 + C115566 + C153965 * C152 +
             C152059 * C556 + C115567 + C115567 + C153972 * C580 +
             C115563 * C557 + C115568 + C115568 + C115558 * C581) *
                C154107 +
            (C120244 + C120245 + C120246) * C153927) *
               C73969 +
           ((C115632 + C115633 + C115634) * C154107 + C120225 * C153927) *
               C153722) *
              C153783 * C1338 -
          ((C120226 * C153927 + C120227 * C154107) * C153722 +
           ((C120247 + C120248 + C120249) * C153927 +
            (C120246 + C120245 + C120244) * C154107) *
               C73969) *
              C153783 * C1339 +
          (((C120249 + C120248 + C120247) * C154107 +
            (C122062 + C122063 + C122064) * C153927) *
               C73969 +
           (C120231 * C154107 + (C120250 + C120251 + C120252) * C153927) *
               C153722) *
              C153783 * C1340 -
          (((C115563 * C28359 + C122050 + C122050 + C115558 * C28363 +
             C152059 * C5558 + C122051 + C122051 + C153972 * C5564 +
             C152071 * C3084 + C122052 + C122052 + C153965 * C3092) *
                C153927 +
            (C120252 + C120251 + C120250) * C154107) *
               C153722 +
           ((C115563 * C28358 + C122053 + C122053 + C115558 * C28362 +
             C152059 * C5559 + C122054 + C122054 + C153972 * C5565 +
             C152071 * C3083 + C122055 + C122055 + C153965 * C3091) *
                C153927 +
            (C122064 + C122063 + C122062) * C154107) *
               C73969) *
              C153783 * C1341) *
         C153748) /
            (p * q * std::sqrt(p + q));
    d2ee[250] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C152071 * C136 + C115566 + C115566 + C153965 * C152 +
               C152059 * C556 + C115567 + C115567 + C153972 * C580 +
               C115563 * C557 + C115568 + C115568 + C115558 * C581) *
                  C154107 +
              (C120244 + C120245 + C120246) * C153927) *
                 C73969 +
             ((C115632 + C115633 + C115634) * C154107 + C120225 * C153927) *
                 C153722) *
                C2058 -
            ((C121540 * C153927 + (C116245 + C116246 + C116247) * C154107) *
                 C153722 +
             ((C121554 + C121555 + C121556) * C153927 +
              (C115563 * C2272 + C116188 + C116188 + C115558 * C2282 +
               C152059 * C557 + C116189 + C116189 + C153972 * C581 +
               C152071 * C556 + C116190 + C116190 + C153965 * C580) *
                  C154107) *
                 C73969) *
                C153847) *
               C154093 +
           ((((C121556 + C121555 + C121554) * C154107 +
              (C123360 + C123361 + C123362) * C153927) *
                 C73969 +
             (C121544 * C154107 + (C121557 + C121558 + C121559) * C153927) *
                 C153722) *
                C153847 -
            ((C120226 * C153927 + C120227 * C154107) * C153722 +
             ((C120247 + C120248 + C120249) * C153927 +
              (C120246 + C120245 + C120244) * C154107) *
                 C73969) *
                C2058) *
               C153819) *
              C154085 +
          (((((C116247 + C116246 + C116245) * C154107 + C121544 * C153927) *
                 C73969 +
             ((C116244 + C116243 + C116242) * C154107 +
              (C117061 + C117062 + C117063) * C153927) *
                 C153722) *
                C153847 -
            ((C116482 * C153927 + (C115637 + C115636 + C115635) * C154107) *
                 C153722 +
             (C120227 * C153927 + (C115634 + C115633 + C115632) * C154107) *
                 C73969) *
                C2058) *
               C154093 +
           (((C120225 * C154107 + C120231 * C153927) * C73969 +
             (C120849 * C154107 + (C115949 + C115950 + C115951) * C153927) *
                 C153722) *
                C2058 -
            (((C115563 * C6156 + C118390 + C118390 + C115558 * C6168 +
               C152059 * C3371 + C118391 + C118391 + C153972 * C3379 +
               C152071 * C1918 + C118392 + C118392 + C153965 * C1928) *
                  C153927 +
              (C117063 + C117062 + C117061) * C154107) *
                 C153722 +
             ((C121559 + C121558 + C121557) * C153927 + C121540 * C154107) *
                 C73969) *
                C153847) *
               C153819) *
              C153754)) /
        (p * q * std::sqrt(p + q));
    d2ee[251] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C152071 * C136 + C115566 + C115566 + C153965 * C152 +
              C152059 * C556 + C115567 + C115567 + C153972 * C580 +
              C115563 * C557 + C115568 + C115568 + C115558 * C581) *
                 C154107 +
             (C120244 + C120245 + C120246) * C153927) *
                C73969 +
            ((C115632 + C115633 + C115634) * C154107 + C120225 * C153927) *
                C153722) *
               C154166 -
           ((C121540 * C153927 + (C116245 + C116246 + C116247) * C154107) *
                C153722 +
            ((C121554 + C121555 + C121556) * C153927 +
             (C115563 * C2272 + C116188 + C116188 + C115558 * C2282 +
              C152059 * C557 + C116189 + C116189 + C153972 * C581 +
              C152071 * C556 + C116190 + C116190 + C153965 * C580) *
                 C154107) *
                C73969) *
               C154167 +
           (((C152071 * C557 + C116191 + C116191 + C153965 * C581 +
              C152059 * C2272 + C116192 + C116192 + C153972 * C2282 +
              C115563 * C7665 + C116193 + C116193 + C115558 * C7673) *
                 C154107 +
             (C122373 + C122374 + C122375) * C153927) *
                C73969 +
            ((C116248 + C116249 + C116250) * C154107 +
             (C120555 + C120556 + C120557) * C153927) *
                C153722) *
               C2574) *
              C154093 +
          ((((C121556 + C121555 + C121554) * C154107 +
             (C123360 + C123361 + C123362) * C153927) *
                C73969 +
            (C121544 * C154107 + (C121557 + C121558 + C121559) * C153927) *
                C153722) *
               C154167 -
           ((C120226 * C153927 + C120227 * C154107) * C153722 +
            ((C120247 + C120248 + C120249) * C153927 +
             (C120246 + C120245 + C120244) * C154107) *
                C73969) *
               C154166 -
           (((C115563 * C30947 + C122361 + C122361 + C115558 * C30951 +
              C152059 * C6158 + C122362 + C122362 + C153972 * C6170 +
              C152071 * C3370 + C122363 + C122363 + C153965 * C3378) *
                 C153927 +
             (C120557 + C120556 + C120555) * C154107) *
                C153722 +
            ((C115563 * C30946 + C122364 + C122364 + C115558 * C30950 +
              C152059 * C6160 + C122365 + C122365 + C153972 * C6172 +
              C152071 * C3369 + C122366 + C122366 + C153965 * C3377) *
                 C153927 +
             (C122375 + C122374 + C122373) * C154107) *
                C73969) *
               C2574) *
              C153819) *
         C153748) /
        (p * q * std::sqrt(p + q));
    d2ee[252] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C152071 * C136 + C115566 + C115566 + C153965 * C152 +
              C152059 * C556 + C115567 + C115567 + C153972 * C580 +
              C115563 * C557 + C115568 + C115568 + C115558 * C581) *
                 C154107 +
             (C120244 + C120245 + C120246) * C153927) *
                C73969 +
            ((C115632 + C115633 + C115634) * C154107 + C120225 * C153927) *
                C153722) *
               C2058 -
           ((C121540 * C153927 + (C116245 + C116246 + C116247) * C154107) *
                C153722 +
            ((C121554 + C121555 + C121556) * C153927 +
             (C115563 * C2272 + C116188 + C116188 + C115558 * C2282 +
              C152059 * C557 + C116189 + C116189 + C153972 * C581 +
              C152071 * C556 + C116190 + C116190 + C153965 * C580) *
                 C154107) *
                C73969) *
               C153847) *
              C326 +
          ((((C121556 + C121555 + C121554) * C154107 +
             (C123360 + C123361 + C123362) * C153927) *
                C73969 +
            (C121544 * C154107 + (C121557 + C121558 + C121559) * C153927) *
                C153722) *
               C153847 -
           ((C120226 * C153927 + C120227 * C154107) * C153722 +
            ((C120247 + C120248 + C120249) * C153927 +
             (C120246 + C120245 + C120244) * C154107) *
                C73969) *
               C2058) *
              C327 +
          ((((C120249 + C120248 + C120247) * C154107 +
             (C122062 + C122063 + C122064) * C153927) *
                C73969 +
            (C120231 * C154107 + (C120250 + C120251 + C120252) * C153927) *
                C153722) *
               C2058 -
           (((C115563 * C31684 + C123348 + C123348 + C115558 * C31686 +
              C152059 * C4810 + C123349 + C123349 + C153972 * C4816 +
              C152071 * C4169 + C123350 + C123350 + C153965 * C4177) *
                 C153927 +
             (C121559 + C121558 + C121557) * C154107) *
                C153722 +
            ((C115563 * C29881 + C123351 + C123351 + C115558 * C29885 +
              C152059 * C4811 + C123352 + C123352 + C153972 * C4817 +
              C152071 * C4168 + C123353 + C123353 + C153965 * C4176) *
                 C153927 +
             (C123362 + C123361 + C123360) * C154107) *
                C73969) *
               C153847) *
              C328) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C152071 * C136 + C115566 + C115566 + C153965 * C152 +
              C152059 * C556 + C115567 + C115567 + C153972 * C580 +
              C115563 * C557 + C115568 + C115568 + C115558 * C581) *
                 C154107 +
             (C120244 + C120245 + C120246) * C153927) *
                C73969 +
            ((C115632 + C115633 + C115634) * C154107 + C120225 * C153927) *
                C153722) *
               C2058 -
           ((C121540 * C153927 + (C116245 + C116246 + C116247) * C154107) *
                C153722 +
            ((C121554 + C121555 + C121556) * C153927 +
             (C115563 * C2272 + C116188 + C116188 + C115558 * C2282 +
              C152059 * C557 + C116189 + C116189 + C153972 * C581 +
              C152071 * C556 + C116190 + C116190 + C153965 * C580) *
                 C154107) *
                C73969) *
               C153847) *
              C153767 * C1253 +
          ((((C116247 + C116246 + C116245) * C154107 + C121544 * C153927) *
                C73969 +
            ((C116244 + C116243 + C116242) * C154107 +
             (C117061 + C117062 + C117063) * C153927) *
                C153722) *
               C153847 -
           ((C116482 * C153927 + (C115637 + C115636 + C115635) * C154107) *
                C153722 +
            (C120227 * C153927 + (C115634 + C115633 + C115632) * C154107) *
                C73969) *
               C2058) *
              C153767 * C1254 +
          (((C115646 * C154107 + C120849 * C153927) * C73969 +
            ((C115640 + C115639 + C115638) * C154107 +
             (C116490 + C116491 + C116492) * C153927) *
                C153722) *
               C2058 -
           (((C115563 * C8529 + C117043 + C117043 + C115558 * C8531 +
              C152059 * C1486 + C117044 + C117044 + C153972 * C1496 +
              C152071 * C1084 + C117045 + C117045 + C153965 * C1096) *
                 C153927 +
             (C116731 + C116730 + C116729) * C154107) *
                C153722 +
            ((C117063 + C117062 + C117061) * C153927 + C116721 * C154107) *
                C73969) *
               C153847) *
              C153767 * C1255)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C152071 * C136 + C115566 + C115566 + C153965 * C152 +
             C152059 * C556 + C115567 + C115567 + C153972 * C580 +
             C115563 * C557 + C115568 + C115568 + C115558 * C581) *
                C154107 +
            (C120244 + C120245 + C120246) * C153927) *
               C73969 +
           ((C115632 + C115633 + C115634) * C154107 + C120225 * C153927) *
               C153722) *
              C2264 -
          ((C121540 * C153927 + (C116245 + C116246 + C116247) * C154107) *
               C153722 +
           ((C121554 + C121555 + C121556) * C153927 +
            (C115563 * C2272 + C116188 + C116188 + C115558 * C2282 +
             C152059 * C557 + C116189 + C116189 + C153972 * C581 +
             C152071 * C556 + C116190 + C116190 + C153965 * C580) *
                C154107) *
               C73969) *
              C2265 +
          (((C152071 * C557 + C116191 + C116191 + C153965 * C581 +
             C152059 * C2272 + C116192 + C116192 + C153972 * C2282 +
             C115563 * C7665 + C116193 + C116193 + C115558 * C7673) *
                C154107 +
            (C122373 + C122374 + C122375) * C153927) *
               C73969 +
           ((C116248 + C116249 + C116250) * C154107 +
            (C120555 + C120556 + C120557) * C153927) *
               C153722) *
              C2266 -
          (((C115563 * C56080 + C124137 + C124137 + C115558 * C56082 +
             C152059 * C9166 + C124138 + C124138 + C153972 * C9172 +
             C152071 * C6159 + C124139 + C124139 + C153965 * C6171) *
                C153927 +
            (C115563 * C10501 + C118984 + C118984 + C115558 * C10507 +
             C152059 * C7666 + C118985 + C118985 + C153972 * C7674 +
             C152071 * C2271 + C118986 + C118986 + C153965 * C2281) *
                C154107) *
               C153722 +
           ((C115563 * C33705 + C124140 + C124140 + C115558 * C33709 +
             C152059 * C9167 + C124141 + C124141 + C153972 * C9173 +
             C152071 * C6161 + C124142 + C124142 + C153965 * C6173) *
                C153927 +
            (C115563 * C10502 + C118987 + C118987 + C115558 * C10508 +
             C152059 * C7665 + C118988 + C118988 + C153972 * C7673 +
             C152071 * C2272 + C118989 + C118989 + C153965 * C2282) *
                C154107) *
               C73969) *
              C2267) *
         C153767 * C153748) /
            (p * q * std::sqrt(p + q));
    d2ee[253] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C152071 * C136 + C115566 + C115566 + C153965 * C152 +
              C152059 * C556 + C115567 + C115567 + C153972 * C580 +
              C115563 * C557 + C115568 + C115568 + C115558 * C581) *
                 C154107 +
             (C120244 + C120245 + C120246) * C153927) *
                C73969 +
            ((C115632 + C115633 + C115634) * C154107 + C120225 * C153927) *
                C153722) *
               C154166 -
           ((C121540 * C153927 + (C116245 + C116246 + C116247) * C154107) *
                C153722 +
            ((C121554 + C121555 + C121556) * C153927 +
             (C115563 * C2272 + C116188 + C116188 + C115558 * C2282 +
              C152059 * C557 + C116189 + C116189 + C153972 * C581 +
              C152071 * C556 + C116190 + C116190 + C153965 * C580) *
                 C154107) *
                C73969) *
               C154167 +
           (((C152071 * C557 + C116191 + C116191 + C153965 * C581 +
              C152059 * C2272 + C116192 + C116192 + C153972 * C2282 +
              C115563 * C7665 + C116193 + C116193 + C115558 * C7673) *
                 C154107 +
             (C122373 + C122374 + C122375) * C153927) *
                C73969 +
            ((C116248 + C116249 + C116250) * C154107 +
             (C120555 + C120556 + C120557) * C153927) *
                C153722) *
               C2574) *
              C153767 * C154085 +
          ((((C116247 + C116246 + C116245) * C154107 + C121544 * C153927) *
                C73969 +
            ((C116244 + C116243 + C116242) * C154107 +
             (C117061 + C117062 + C117063) * C153927) *
                C153722) *
               C154167 -
           ((C116482 * C153927 + (C115637 + C115636 + C115635) * C154107) *
                C153722 +
            (C120227 * C153927 + (C115634 + C115633 + C115632) * C154107) *
                C73969) *
               C154166 -
           (((C115563 * C9165 + C117655 + C117655 + C115558 * C9171 +
              C152059 * C6157 + C117656 + C117656 + C153972 * C6169 +
              C152071 * C1487 + C117657 + C117657 + C153965 * C1497) *
                 C153927 +
             (C116253 + C116252 + C116251) * C154107) *
                C153722 +
            ((C120557 + C120556 + C120555) * C153927 +
             (C116250 + C116249 + C116248) * C154107) *
                C73969) *
               C2574) *
              C153767 * C153754)) /
        (p * q * std::sqrt(p + q));
    d2ee[254] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C152071 * C136 + C115566 + C115566 + C153965 * C152 +
              C152059 * C556 + C115567 + C115567 + C153972 * C580 +
              C115563 * C557 + C115568 + C115568 + C115558 * C581) *
                 C154107 +
             (C120244 + C120245 + C120246) * C153927) *
                C73969 +
            ((C115632 + C115633 + C115634) * C154107 + C120225 * C153927) *
                C153722) *
               C2058 -
           ((C121540 * C153927 + (C116245 + C116246 + C116247) * C154107) *
                C153722 +
            ((C121554 + C121555 + C121556) * C153927 +
             (C115563 * C2272 + C116188 + C116188 + C115558 * C2282 +
              C152059 * C557 + C116189 + C116189 + C153972 * C581 +
              C152071 * C556 + C116190 + C116190 + C153965 * C580) *
                 C154107) *
                C73969) *
               C153847) *
              C153767 * C1253 +
          ((((C116247 + C116246 + C116245) * C154107 + C121544 * C153927) *
                C73969 +
            ((C116244 + C116243 + C116242) * C154107 +
             (C117061 + C117062 + C117063) * C153927) *
                C153722) *
               C153847 -
           ((C116482 * C153927 + (C115637 + C115636 + C115635) * C154107) *
                C153722 +
            (C120227 * C153927 + (C115634 + C115633 + C115632) * C154107) *
                C73969) *
               C2058) *
              C153767 * C1254 +
          (((C115646 * C154107 + C120849 * C153927) * C73969 +
            ((C115640 + C115639 + C115638) * C154107 +
             (C116490 + C116491 + C116492) * C153927) *
                C153722) *
               C2058 -
           (((C115563 * C8529 + C117043 + C117043 + C115558 * C8531 +
              C152059 * C1486 + C117044 + C117044 + C153972 * C1496 +
              C152071 * C1084 + C117045 + C117045 + C153965 * C1096) *
                 C153927 +
             (C116731 + C116730 + C116729) * C154107) *
                C153722 +
            ((C117063 + C117062 + C117061) * C153927 + C116721 * C154107) *
                C73969) *
               C153847) *
              C153767 * C1255)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C152071 * C136 + C115566 + C115566 + C153965 * C152 +
              C152059 * C556 + C115567 + C115567 + C153972 * C580 +
              C115563 * C557 + C115568 + C115568 + C115558 * C581) *
                 C154107 +
             (C120244 + C120245 + C120246) * C153927) *
                C73969 +
            ((C115632 + C115633 + C115634) * C154107 + C120225 * C153927) *
                C153722) *
               C2058 -
           ((C121540 * C153927 + (C116245 + C116246 + C116247) * C154107) *
                C153722 +
            ((C121554 + C121555 + C121556) * C153927 +
             (C115563 * C2272 + C116188 + C116188 + C115558 * C2282 +
              C152059 * C557 + C116189 + C116189 + C153972 * C581 +
              C152071 * C556 + C116190 + C116190 + C153965 * C580) *
                 C154107) *
                C73969) *
               C153847) *
              C326 +
          ((((C121556 + C121555 + C121554) * C154107 +
             (C123360 + C123361 + C123362) * C153927) *
                C73969 +
            (C121544 * C154107 + (C121557 + C121558 + C121559) * C153927) *
                C153722) *
               C153847 -
           ((C120226 * C153927 + C120227 * C154107) * C153722 +
            ((C120247 + C120248 + C120249) * C153927 +
             (C120246 + C120245 + C120244) * C154107) *
                C73969) *
               C2058) *
              C327 +
          ((((C120249 + C120248 + C120247) * C154107 +
             (C122062 + C122063 + C122064) * C153927) *
                C73969 +
            (C120231 * C154107 + (C120250 + C120251 + C120252) * C153927) *
                C153722) *
               C2058 -
           (((C115563 * C31684 + C123348 + C123348 + C115558 * C31686 +
              C152059 * C4810 + C123349 + C123349 + C153972 * C4816 +
              C152071 * C4169 + C123350 + C123350 + C153965 * C4177) *
                 C153927 +
             (C121559 + C121558 + C121557) * C154107) *
                C153722 +
            ((C115563 * C29881 + C123351 + C123351 + C115558 * C29885 +
              C152059 * C4811 + C123352 + C123352 + C153972 * C4817 +
              C152071 * C4168 + C123353 + C123353 + C153965 * C4176) *
                 C153927 +
             (C123362 + C123361 + C123360) * C154107) *
                C73969) *
               C153847) *
              C328) *
         C153748) /
            (p * q * std::sqrt(p + q));
    d2ee[255] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
              C97199 + C97199 + C153969 * C580) *
                 C154181 +
             (C101439 + C101440) * C154169 + C101451 * C154143) *
                C73969 +
            ((C97252 + C97253) * C154181 + C101388 * C154169 +
             C101389 * C154143) *
                C153722) *
               C153783 * C154093 -
           ((C101452 * C154143 + C101394 * C154169 + C101395 * C154181) *
                C153722 +
            ((C101445 + C101446) * C154143 + (C101442 + C101441) * C154169 +
             (C101440 + C101439) * C154181) *
                C73969) *
               C153783 * C153819) *
              C154162 +
          (((C101388 * C154181 + C101389 * C154169 + C101453 * C154143) *
                C73969 +
            (C102070 * C154181 + C102071 * C154169 +
             (C101449 + C101450) * C154143) *
                C153722) *
               C153783 * C153819 -
           ((C101412 * C154143 + C98013 * C154169 +
             (C97255 + C97254) * C154181) *
                C153722 +
            (C101394 * C154143 + C101395 * C154169 +
             (C97253 + C97252) * C154181) *
                C73969) *
               C153783 * C154093) *
              C154163 +
          (((C97262 * C154181 + C102070 * C154169 + C102071 * C154143) *
                C73969 +
            (C97263 * C154181 + (C97533 + C97532) * C154169 +
             (C97542 + C97543) * C154143) *
                C153722) *
               C153783 * C154093 -
           (((C97195 * C4171 + C98860 + C98860 + C153969 * C4179 +
              C97193 * C1344 + C98861 + C98861 + C97191 * C1354) *
                 C154143 +
             (C97543 + C97542) * C154169 + C98012 * C154181) *
                C153722 +
            ((C101450 + C101449) * C154143 + C101412 * C154169 +
             C98013 * C154181) *
                C73969) *
               C153783 * C153819) *
              C774)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
             C97199 + C97199 + C153969 * C580) *
                C153865 * C154187 +
            (C97252 + C97253) * C153865 * C154180 + C97266 * C154161 +
            C97267 * C154108) *
               C153783 * C154093 -
           (C98020 * C154108 + C98021 * C154161 +
            (C97536 + C97537) * C153865 * C154180 +
            (C97195 * C1081 + C97482 + C97482 + C153969 * C1093 +
             C97193 * C335 + C97483 + C97483 + C97191 * C359) *
                C153865 * C154187) *
               C153783 * C153819) *
              C154162 +
          (((C97537 + C97536) * C153865 * C154187 +
            (C97535 + C97534) * C153865 * C154180 +
            (C97533 + C97532) * C153865 * C154161 +
            (C98026 + C98027) * C153865 * C154108) *
               C153783 * C153819 -
           (C97268 * C154108 + C97269 * C154161 +
            (C97255 + C97254) * C153865 * C154180 +
            (C97253 + C97252) * C153865 * C154187) *
               C153783 * C154093) *
              C154163 +
          ((C97266 * C154187 + C97267 * C154180 +
            (C97259 + C97258) * C153865 * C154161 +
            (C97260 + C97261) * C153865 * C154108) *
               C153783 * C154093 -
           ((C97195 * C1086 + C98018 + C98018 + C153969 * C1098 +
             C97193 * C341 + C98019 + C98019 + C97191 * C365) *
                C153865 * C154108 +
            (C98027 + C98026) * C153865 * C154161 + C98020 * C154180 +
            C98021 * C154187) *
               C153783 * C153819) *
              C774)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C106473 * C136 + C106482 + C106482 + C154189 * C152 +
             C106475 * C556 + C106483 + C106483 + C154186 * C580 +
             C106477 * C557 + C106484 + C106484 + C154177 * C581 +
             C106479 * C2272 + C106485 + C106485 + C154123 * C2282) *
                C153865 * C73969 +
            (C106550 + C106551 + C106552 + C106553) * C153865 * C153722) *
               C153783 * C154093 -
           ((C106812 + C106813 + C106814 + C106815) * C153865 * C153722 +
            (C106479 * C6161 + C106768 + C106768 + C154123 * C6173 +
             C106477 * C1489 + C106769 + C106769 + C154177 * C1499 +
             C106475 * C1081 + C106770 + C106770 + C154186 * C1093 +
             C106473 * C335 + C106771 + C106771 + C154189 * C359) *
                C153865 * C73969) *
               C153783 * C153819) *
              C154162 +
          (((C106815 + C106814 + C106813 + C106812) * C153865 * C73969 +
            (C107292 + C107293 + C107294 + C107295) * C153865 * C153722) *
               C153783 * C153819 -
           ((C106554 + C106555 + C106556 + C106557) * C153865 * C153722 +
            (C106553 + C106552 + C106551 + C106550) * C153865 * C73969) *
               C153783 * C154093) *
              C154163 +
          (((C106557 + C106556 + C106555 + C106554) * C153865 * C73969 +
            (C106558 + C106559 + C106560 + C106561) * C153865 * C153722) *
               C153783 * C154093 -
           ((C106479 * C8529 + C107280 + C107280 + C154123 * C8531 +
             C106477 * C1486 + C107281 + C107281 + C154177 * C1496 +
             C106475 * C1084 + C107282 + C107282 + C154186 * C1096 +
             C106473 * C332 + C107283 + C107283 + C154189 * C356) *
                C153865 * C153722 +
            (C107295 + C107294 + C107293 + C107292) * C153865 * C73969) *
               C153783 * C153819) *
              C774)) /
            (p * q * std::sqrt(p + q));
    d2ee[256] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
               C97199 + C97199 + C153969 * C580) *
                  C154181 +
              (C101439 + C101440) * C154169 + C101451 * C154143) *
                 C73969 +
             ((C97252 + C97253) * C154181 + C101388 * C154169 +
              C101389 * C154143) *
                 C153722) *
                C154094 -
            ((C102758 * C154143 + C102759 * C154169 +
              (C97810 + C97811) * C154181) *
                 C153722 +
             ((C102792 + C102793) * C154143 + (C102794 + C102795) * C154169 +
              (C97195 * C557 + C97756 + C97756 + C153969 * C581 +
               C97193 * C556 + C97757 + C97757 + C97191 * C580) *
                  C154181) *
                 C73969) *
                C153847) *
               C154093 +
           ((((C102795 + C102794) * C154181 + (C102793 + C102792) * C154169 +
              (C97193 * C4168 + C102768 + C102768 + C97191 * C4176 +
               C97195 * C4811 + C102769 + C102769 + C153969 * C4817) *
                  C154143) *
                 C73969 +
             (C102770 * C154181 + C102771 * C154169 +
              (C102796 + C102797) * C154143) *
                 C153722) *
                C153847 -
            ((C101452 * C154143 + C101394 * C154169 + C101395 * C154181) *
                 C153722 +
             ((C101445 + C101446) * C154143 + (C101442 + C101441) * C154169 +
              (C101440 + C101439) * C154181) *
                 C73969) *
                C154094) *
               C153819) *
              C329 +
          (((((C97811 + C97810) * C154181 + C102770 * C154169 +
              C102771 * C154143) *
                 C73969 +
             ((C97809 + C97808) * C154181 + (C98532 + C98533) * C154169 +
              (C102370 + C102371) * C154143) *
                 C153722) *
                C153847 -
            ((C101412 * C154143 + C98013 * C154169 +
              (C97255 + C97254) * C154181) *
                 C153722 +
             (C101394 * C154143 + C101395 * C154169 +
              (C97253 + C97252) * C154181) *
                 C73969) *
                C154094) *
               C154093 +
           (((C101388 * C154181 + C101389 * C154169 + C101453 * C154143) *
                 C73969 +
             (C102070 * C154181 + C102071 * C154169 +
              (C101449 + C101450) * C154143) *
                 C153722) *
                C154094 -
            (((C97195 * C4809 + C102778 + C102778 + C153969 * C4815 +
               C97193 * C4170 + C102779 + C102779 + C97191 * C4178) *
                  C154143 +
              (C102371 + C102370) * C154169 + (C98533 + C98532) * C154181) *
                 C153722 +
             ((C102797 + C102796) * C154143 + C102758 * C154169 +
              C102759 * C154181) *
                 C73969) *
                C153847) *
               C153819) *
              C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
              C97199 + C97199 + C153969 * C580) *
                 C153865 * C154187 +
             (C97252 + C97253) * C153865 * C154180 + C97266 * C154161 +
             C97267 * C154108) *
                C154094 -
            (C98230 * C154108 + C98231 * C154161 +
             (C97810 + C97811) * C153865 * C154180 +
             (C97195 * C557 + C97756 + C97756 + C153969 * C581 + C97193 * C556 +
              C97757 + C97757 + C97191 * C580) *
                 C153865 * C154187) *
                C153847) *
               C154093 +
           (((C97193 * C1081 + C98496 + C98496 + C97191 * C1093 +
              C97195 * C1489 + C98497 + C98497 + C153969 * C1499) *
                 C153865 * C154187 +
             (C98530 + C98531) * C153865 * C154180 +
             (C98532 + C98533) * C153865 * C154161 +
             (C98534 + C98535) * C153865 * C154108) *
                C153847 -
            (C98020 * C154108 + C98021 * C154161 +
             (C97536 + C97537) * C153865 * C154180 +
             (C97195 * C1081 + C97482 + C97482 + C153969 * C1093 +
              C97193 * C335 + C97483 + C97483 + C97191 * C359) *
                 C153865 * C154187) *
                C154094) *
               C153819) *
              C329 +
          ((((C97811 + C97810) * C153865 * C154187 +
             (C97809 + C97808) * C153865 * C154180 +
             (C97807 + C97806) * C153865 * C154161 +
             (C98236 + C98237) * C153865 * C154108) *
                C153847 -
            (C97268 * C154108 + C97269 * C154161 +
             (C97255 + C97254) * C153865 * C154180 +
             (C97253 + C97252) * C153865 * C154187) *
                C154094) *
               C154093 +
           (((C97537 + C97536) * C153865 * C154187 +
             (C97535 + C97534) * C153865 * C154180 +
             (C97533 + C97532) * C153865 * C154161 +
             (C98026 + C98027) * C153865 * C154108) *
                C154094 -
            ((C97195 * C1485 + C98516 + C98516 + C153969 * C1495 +
              C97193 * C1085 + C98517 + C98517 + C97191 * C1097) *
                 C153865 * C154108 +
             (C98535 + C98534) * C153865 * C154161 +
             (C98533 + C98532) * C153865 * C154180 +
             (C98531 + C98530) * C153865 * C154187) *
                C153847) *
               C153819) *
              C153754)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C106473 * C136 + C106482 + C106482 + C154189 * C152 +
              C106475 * C556 + C106483 + C106483 + C154186 * C580 +
              C106477 * C557 + C106484 + C106484 + C154177 * C581 +
              C106479 * C2272 + C106485 + C106485 + C154123 * C2282) *
                 C153865 * C73969 +
             (C106550 + C106551 + C106552 + C106553) * C153865 * C153722) *
                C154094 -
            ((C107070 + C107071 + C107072 + C107073) * C153865 * C153722 +
             (C106479 * C7665 + C107026 + C107026 + C154123 * C7673 +
              C106477 * C2272 + C107027 + C107027 + C154177 * C2282 +
              C106475 * C557 + C107028 + C107028 + C154186 * C581 +
              C106473 * C556 + C107029 + C107029 + C154189 * C580) *
                 C153865 * C73969) *
                C153847) *
               C154093 +
           (((C106473 * C1081 + C107772 + C107772 + C154189 * C1093 +
              C106475 * C1489 + C107773 + C107773 + C154186 * C1499 +
              C106477 * C6161 + C107774 + C107774 + C154177 * C6173 +
              C106479 * C9167 + C107775 + C107775 + C154123 * C9173) *
                 C153865 * C73969 +
             (C107800 + C107801 + C107802 + C107803) * C153865 * C153722) *
                C153847 -
            ((C106812 + C106813 + C106814 + C106815) * C153865 * C153722 +
             (C106479 * C6161 + C106768 + C106768 + C154123 * C6173 +
              C106477 * C1489 + C106769 + C106769 + C154177 * C1499 +
              C106475 * C1081 + C106770 + C106770 + C154186 * C1093 +
              C106473 * C335 + C106771 + C106771 + C154189 * C359) *
                 C153865 * C73969) *
                C154094) *
               C153819) *
              C329 +
          ((((C107073 + C107072 + C107071 + C107070) * C153865 * C73969 +
             (C107510 + C107511 + C107512 + C107513) * C153865 * C153722) *
                C153847 -
            ((C106554 + C106555 + C106556 + C106557) * C153865 * C153722 +
             (C106553 + C106552 + C106551 + C106550) * C153865 * C73969) *
                C154094) *
               C154093 +
           (((C106815 + C106814 + C106813 + C106812) * C153865 * C73969 +
             (C107292 + C107293 + C107294 + C107295) * C153865 * C153722) *
                C154094 -
            ((C106479 * C9165 + C107788 + C107788 + C154123 * C9171 +
              C106477 * C6157 + C107789 + C107789 + C154177 * C6169 +
              C106475 * C1487 + C107790 + C107790 + C154186 * C1497 +
              C106473 * C1083 + C107791 + C107791 + C154189 * C1095) *
                 C153865 * C153722 +
             (C107803 + C107802 + C107801 + C107800) * C153865 * C73969) *
                C153847) *
               C153819) *
              C153754)) /
            (p * q * std::sqrt(p + q));
    d2ee[257] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((C97193 * C136 + C97198 + C97198 + C97191 * C152 +
                C97195 * C556 + C97199 + C97199 + C153969 * C580) *
                   C153865 * C154187 +
               (C97252 + C97253) * C153865 * C154180 + C97266 * C154161 +
               C97267 * C154108) *
                  C153783 * C153767 * C130 -
              (C97268 * C154108 + C97269 * C154161 +
               (C97255 + C97254) * C153865 * C154180 +
               (C97253 + C97252) * C153865 * C154187) *
                  C153783 * C153767 * C131 +
              (C97266 * C154187 + C97267 * C154180 +
               (C97259 + C97258) * C153865 * C154161 +
               (C97260 + C97261) * C153865 * C154108) *
                  C153783 * C153767 * C132 -
              ((C97195 * C909 + C97230 + C97230 + C153969 * C911 +
                C97193 * C142 + C97231 + C97231 + C97191 * C158) *
                   C153865 * C154108 +
               (C97261 + C97260) * C153865 * C154161 + C97268 * C154180 +
               C97269 * C154187) *
                  C153783 * C153767 * C133) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C97193 * C136 + C97198 + C97198 + C97191 * C152 +
                 C97195 * C556 + C97199 + C97199 + C153969 * C580) *
                    C153865 * C154187 +
                (C97252 + C97253) * C153865 * C154180 + C97266 * C154161 +
                C97267 * C154108) *
                   C153783 * C326 -
               ((C97532 + C97533) * C153865 * C154108 +
                (C97534 + C97535) * C153865 * C154161 +
                (C97536 + C97537) * C153865 * C154180 +
                (C97195 * C1081 + C97482 + C97482 + C153969 * C1093 +
                 C97193 * C335 + C97483 + C97483 + C97191 * C359) *
                    C153865 * C154187) *
                   C153783 * C327 +
               ((C97193 * C336 + C97484 + C97484 + C97191 * C360 +
                 C97195 * C1920 + C97485 + C97485 + C153969 * C1930) *
                    C153865 * C154187 +
                (C97538 + C97539) * C153865 * C154180 +
                (C97540 + C97541) * C153865 * C154161 +
                (C97542 + C97543) * C153865 * C154108) *
                   C153783 * C328) *
                  C329 +
              (((C97537 + C97536) * C153865 * C154187 +
                (C97535 + C97534) * C153865 * C154180 +
                (C97533 + C97532) * C153865 * C154161 +
                (C97193 * C331 + C97504 + C97504 + C97191 * C355 +
                 C97195 * C1085 + C97505 + C97505 + C153969 * C1097) *
                    C153865 * C154108) *
                   C153783 * C327 -
               (C97268 * C154108 + C97269 * C154161 +
                (C97255 + C97254) * C153865 * C154180 +
                (C97253 + C97252) * C153865 * C154187) *
                   C153783 * C326 -
               ((C97195 * C1916 + C97506 + C97506 + C153969 * C1926 +
                 C97193 * C340 + C97507 + C97507 + C97191 * C364) *
                    C153865 * C154108 +
                (C97543 + C97542) * C153865 * C154161 +
                (C97541 + C97540) * C153865 * C154180 +
                (C97539 + C97538) * C153865 * C154187) *
                   C153783 * C328) *
                  C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
             C97199 + C97199 + C153969 * C580) *
                C153865 * C154187 +
            (C97252 + C97253) * C153865 * C154180 + C97266 * C154161 +
            C97267 * C154108) *
               C549 -
           ((C97806 + C97807) * C153865 * C154108 +
            (C97808 + C97809) * C153865 * C154161 +
            (C97810 + C97811) * C153865 * C154180 +
            (C97195 * C557 + C97756 + C97756 + C153969 * C581 + C97193 * C556 +
             C97757 + C97757 + C97191 * C580) *
                C153865 * C154187) *
               C550 +
           ((C97193 * C557 + C97758 + C97758 + C97191 * C581 + C97195 * C2272 +
             C97759 + C97759 + C153969 * C2282) *
                C153865 * C154187 +
            (C97812 + C97813) * C153865 * C154180 +
            (C97814 + C97815) * C153865 * C154161 +
            (C97816 + C97817) * C153865 * C154108) *
               C551) *
              C153767 * C329 +
          (((C97811 + C97810) * C153865 * C154187 +
            (C97809 + C97808) * C153865 * C154180 +
            (C97807 + C97806) * C153865 * C154161 +
            (C97193 * C552 + C97778 + C97778 + C97191 * C576 + C97195 * C561 +
             C97779 + C97779 + C153969 * C585) *
                C153865 * C154108) *
               C550 -
           (C97268 * C154108 + C97269 * C154161 +
            (C97255 + C97254) * C153865 * C154180 +
            (C97253 + C97252) * C153865 * C154187) *
               C549 -
           ((C97195 * C2268 + C97780 + C97780 + C153969 * C2278 +
             C97193 * C561 + C97781 + C97781 + C97191 * C585) *
                C153865 * C154108 +
            (C97817 + C97816) * C153865 * C154161 +
            (C97815 + C97814) * C153865 * C154180 +
            (C97813 + C97812) * C153865 * C154187) *
               C551) *
              C153767 * C153754)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
             C97199 + C97199 + C153969 * C580) *
                C154181 +
            (C97193 * C335 + C97483 + C97483 + C97191 * C359 + C97195 * C1081 +
             C97482 + C97482 + C153969 * C1093) *
                C154169 +
            (C97193 * C336 + C97484 + C97484 + C97191 * C360 + C97195 * C1920 +
             C97485 + C97485 + C153969 * C1930) *
                C154143) *
               C73969 +
           ((C97252 + C97253) * C154181 + (C97537 + C97536) * C154169 +
            (C97538 + C97539) * C154143) *
               C153722) *
              C153783 * C153767 * C130 -
          (((C97541 + C97540) * C154143 + C98013 * C154169 +
            (C97255 + C97254) * C154181) *
               C153722 +
           ((C97539 + C97538) * C154143 + (C97536 + C97537) * C154169 +
            (C97253 + C97252) * C154181) *
               C73969) *
              C153783 * C153767 * C131 +
          ((C97262 * C154181 + (C97535 + C97534) * C154169 +
            (C97540 + C97541) * C154143) *
               C73969 +
           (C97263 * C154181 + (C97533 + C97532) * C154169 +
            (C97542 + C97543) * C154143) *
               C153722) *
              C153783 * C153767 * C132 -
          (((C97195 * C1916 + C97506 + C97506 + C153969 * C1926 +
             C97193 * C340 + C97507 + C97507 + C97191 * C364) *
                C154143 +
            (C98027 + C98026) * C154169 + C97264 * C154181) *
               C153722 +
           ((C97543 + C97542) * C154143 + C98012 * C154169 + C97265 * C154181) *
               C73969) *
              C153783 * C153767 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
              C97199 + C97199 + C153969 * C580) *
                 C154181 +
             (C101439 + C101440) * C154169 + C101451 * C154143) *
                C73969 +
            ((C97252 + C97253) * C154181 + C101388 * C154169 +
             C101389 * C154143) *
                C153722) *
               C153783 * C326 -
           ((C101452 * C154143 + C101394 * C154169 + C101395 * C154181) *
                C153722 +
            ((C101445 + C101446) * C154143 + (C101442 + C101441) * C154169 +
             (C101440 + C101439) * C154181) *
                C73969) *
               C153783 * C327 +
           ((C101451 * C154181 + (C101446 + C101445) * C154169 +
             (C97193 * C3083 + C101400 + C101400 + C97191 * C3091 +
              C97195 * C5559 + C101401 + C101401 + C153969 * C5565) *
                 C154143) *
                C73969 +
            (C101389 * C154181 + C101453 * C154169 +
             (C101447 + C101448) * C154143) *
                C153722) *
               C153783 * C328) *
              C329 +
          (((C101388 * C154181 + C101389 * C154169 + C101453 * C154143) *
                C73969 +
            ((C97535 + C97534) * C154181 + (C97540 + C97541) * C154169 +
             (C101449 + C101450) * C154143) *
                C153722) *
               C153783 * C327 -
           ((C101412 * C154143 + C98013 * C154169 +
             (C97255 + C97254) * C154181) *
                C153722 +
            (C101394 * C154143 + C101395 * C154169 +
             (C97253 + C97252) * C154181) *
                C73969) *
               C153783 * C326 -
           (((C97195 * C5557 + C101413 + C101413 + C153969 * C5563 +
              C97193 * C3085 + C101414 + C101414 + C97191 * C3093) *
                 C154143 +
             (C101450 + C101449) * C154169 + C101412 * C154181) *
                C153722 +
            ((C101448 + C101447) * C154143 + C101452 * C154169 +
             C101394 * C154181) *
                C73969) *
               C153783 * C328) *
              C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
              C97199 + C97199 + C153969 * C580) *
                 C154181 +
             (C101439 + C101440) * C154169 + C101451 * C154143) *
                C73969 +
            ((C97252 + C97253) * C154181 + C101388 * C154169 +
             C101389 * C154143) *
                C153722) *
               C549 -
           (((C101774 + C101775) * C154143 + (C98531 + C98530) * C154169 +
             (C97810 + C97811) * C154181) *
                C153722 +
            ((C97195 * C3369 + C99722 + C99722 + C153969 * C3377 +
              C97193 * C1920 + C99723 + C99723 + C97191 * C1930) *
                 C154143 +
             (C97195 * C1489 + C98497 + C98497 + C153969 * C1499 +
              C97193 * C1081 + C98496 + C98496 + C97191 * C1093) *
                 C154169 +
             (C97195 * C557 + C97756 + C97756 + C153969 * C581 + C97193 * C556 +
              C97757 + C97757 + C97191 * C580) *
                 C154181) *
                C73969) *
               C550 +
           (((C97193 * C557 + C97758 + C97758 + C97191 * C581 + C97195 * C2272 +
              C97759 + C97759 + C153969 * C2282) *
                 C154181 +
             (C97193 * C1489 + C99069 + C99069 + C97191 * C1499 +
              C97195 * C6161 + C99068 + C99068 + C153969 * C6173) *
                 C154169 +
             (C97193 * C3369 + C101748 + C101748 + C97191 * C3377 +
              C97195 * C6160 + C101749 + C101749 + C153969 * C6172) *
                 C154143) *
                C73969 +
            ((C97812 + C97813) * C154181 + (C101776 + C101777) * C154169 +
             (C101778 + C101779) * C154143) *
                C153722) *
               C551) *
              C153767 * C329 +
          ((((C97811 + C97810) * C154181 + (C98530 + C98531) * C154169 +
             (C101775 + C101774) * C154143) *
                C73969 +
            ((C97809 + C97808) * C154181 + (C98532 + C98533) * C154169 +
             (C97193 * C1918 + C99719 + C99719 + C97191 * C1928 +
              C97195 * C3371 + C99718 + C99718 + C153969 * C3379) *
                 C154143) *
                C153722) *
               C550 -
           ((C101412 * C154143 + C98013 * C154169 +
             (C97255 + C97254) * C154181) *
                C153722 +
            (C101394 * C154143 + C101395 * C154169 +
             (C97253 + C97252) * C154181) *
                C73969) *
               C549 -
           (((C97195 * C6156 + C101760 + C101760 + C153969 * C6168 +
              C97193 * C3371 + C101761 + C101761 + C97191 * C3379) *
                 C154143 +
             (C97195 * C6157 + C99064 + C99064 + C153969 * C6169 +
              C97193 * C1487 + C99065 + C99065 + C97191 * C1497) *
                 C154169 +
             (C97815 + C97814) * C154181) *
                C153722 +
            ((C101779 + C101778) * C154143 + (C101777 + C101776) * C154169 +
             (C97813 + C97812) * C154181) *
                C73969) *
               C551) *
              C153767 * C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C106473 * C136 + C106482 + C106482 + C154189 * C152 +
            C106475 * C556 + C106483 + C106483 + C154186 * C580 +
            C106477 * C557 + C106484 + C106484 + C154177 * C581 +
            C106479 * C2272 + C106485 + C106485 + C154123 * C2282) *
               C153865 * C73969 +
           (C106550 + C106551 + C106552 + C106553) * C153865 * C153722) *
              C153783 * C153767 * C130 -
          ((C106554 + C106555 + C106556 + C106557) * C153865 * C153722 +
           (C106553 + C106552 + C106551 + C106550) * C153865 * C73969) *
              C153783 * C153767 * C131 +
          ((C106557 + C106556 + C106555 + C106554) * C153865 * C73969 +
           (C106558 + C106559 + C106560 + C106561) * C153865 * C153722) *
              C153783 * C153767 * C132 -
          ((C106479 * C2268 + C106522 + C106522 + C154123 * C2278 +
            C106477 * C561 + C106523 + C106523 + C154177 * C585 +
            C106475 * C552 + C106524 + C106524 + C154186 * C576 +
            C106473 * C140 + C106525 + C106525 + C154189 * C156) *
               C153865 * C153722 +
           (C106561 + C106560 + C106559 + C106558) * C153865 * C73969) *
              C153783 * C153767 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C106473 * C136 + C106482 + C106482 + C154189 * C152 +
             C106475 * C556 + C106483 + C106483 + C154186 * C580 +
             C106477 * C557 + C106484 + C106484 + C154177 * C581 +
             C106479 * C2272 + C106485 + C106485 + C154123 * C2282) *
                C153865 * C73969 +
            (C106550 + C106551 + C106552 + C106553) * C153865 * C153722) *
               C153783 * C326 -
           ((C106812 + C106813 + C106814 + C106815) * C153865 * C153722 +
            (C106479 * C6161 + C106768 + C106768 + C154123 * C6173 +
             C106477 * C1489 + C106769 + C106769 + C154177 * C1499 +
             C106475 * C1081 + C106770 + C106770 + C154186 * C1093 +
             C106473 * C335 + C106771 + C106771 + C154189 * C359) *
                C153865 * C73969) *
               C153783 * C327 +
           ((C106473 * C336 + C106772 + C106772 + C154189 * C360 +
             C106475 * C1920 + C106773 + C106773 + C154186 * C1930 +
             C106477 * C3369 + C106774 + C106774 + C154177 * C3377 +
             C106479 * C6160 + C106775 + C106775 + C154123 * C6172) *
                C153865 * C73969 +
            (C106816 + C106817 + C106818 + C106819) * C153865 * C153722) *
               C153783 * C328) *
              C329 +
          (((C106815 + C106814 + C106813 + C106812) * C153865 * C73969 +
            (C106473 * C333 + C106788 + C106788 + C154189 * C357 +
             C106475 * C1083 + C106789 + C106789 + C154186 * C1095 +
             C106477 * C1487 + C106790 + C106790 + C154177 * C1497 +
             C106479 * C6157 + C106791 + C106791 + C154123 * C6169) *
                C153865 * C153722) *
               C153783 * C327 -
           ((C106554 + C106555 + C106556 + C106557) * C153865 * C153722 +
            (C106553 + C106552 + C106551 + C106550) * C153865 * C73969) *
               C153783 * C326 -
           ((C106479 * C6156 + C106792 + C106792 + C154123 * C6168 +
             C106477 * C3371 + C106793 + C106793 + C154177 * C3379 +
             C106475 * C1918 + C106794 + C106794 + C154186 * C1928 +
             C106473 * C338 + C106795 + C106795 + C154189 * C362) *
                C153865 * C153722 +
            (C106819 + C106818 + C106817 + C106816) * C153865 * C73969) *
               C153783 * C328) *
              C153754)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C106473 * C136 + C106482 + C106482 + C154189 * C152 +
             C106475 * C556 + C106483 + C106483 + C154186 * C580 +
             C106477 * C557 + C106484 + C106484 + C154177 * C581 +
             C106479 * C2272 + C106485 + C106485 + C154123 * C2282) *
                C153865 * C73969 +
            (C106550 + C106551 + C106552 + C106553) * C153865 * C153722) *
               C549 -
           ((C107070 + C107071 + C107072 + C107073) * C153865 * C153722 +
            (C106479 * C7665 + C107026 + C107026 + C154123 * C7673 +
             C106477 * C2272 + C107027 + C107027 + C154177 * C2282 +
             C106475 * C557 + C107028 + C107028 + C154186 * C581 +
             C106473 * C556 + C107029 + C107029 + C154189 * C580) *
                C153865 * C73969) *
               C550 +
           ((C106473 * C557 + C107030 + C107030 + C154189 * C581 +
             C106475 * C2272 + C107031 + C107031 + C154186 * C2282 +
             C106477 * C7665 + C107032 + C107032 + C154177 * C7673 +
             C106479 * C10502 + C107033 + C107033 + C154123 * C10508) *
                C153865 * C73969 +
            (C107074 + C107075 + C107076 + C107077) * C153865 * C153722) *
               C551) *
              C153767 * C329 +
          (((C107073 + C107072 + C107071 + C107070) * C153865 * C73969 +
            (C106473 * C554 + C107046 + C107046 + C154189 * C578 +
             C106475 * C559 + C107047 + C107047 + C154186 * C583 +
             C106477 * C2270 + C107048 + C107048 + C154177 * C2280 +
             C106479 * C7667 + C107049 + C107049 + C154123 * C7675) *
                C153865 * C153722) *
               C550 -
           ((C106554 + C106555 + C106556 + C106557) * C153865 * C153722 +
            (C106553 + C106552 + C106551 + C106550) * C153865 * C73969) *
               C549 -
           ((C106479 * C10500 + C107050 + C107050 + C154123 * C10506 +
             C106477 * C7667 + C107051 + C107051 + C154177 * C7675 +
             C106475 * C2270 + C107052 + C107052 + C154186 * C2280 +
             C106473 * C559 + C107053 + C107053 + C154189 * C583) *
                C153865 * C153722 +
            (C107077 + C107076 + C107075 + C107074) * C153865 * C73969) *
               C551) *
              C153767 * C153754)) /
            (p * q * std::sqrt(p + q));
    d2ee[258] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
              C97199 + C97199 + C153969 * C580) *
                 C154181 +
             (C101439 + C101440) * C154169 + C101451 * C154143) *
                C73969 +
            ((C97252 + C97253) * C154181 + C101388 * C154169 +
             C101389 * C154143) *
                C153722) *
               C154094 -
           (((C101774 + C101775) * C154143 + (C98531 + C98530) * C154169 +
             (C97810 + C97811) * C154181) *
                C153722 +
            ((C97195 * C3369 + C99722 + C99722 + C153969 * C3377 +
              C97193 * C1920 + C99723 + C99723 + C97191 * C1930) *
                 C154143 +
             (C97195 * C1489 + C98497 + C98497 + C153969 * C1499 +
              C97193 * C1081 + C98496 + C98496 + C97191 * C1093) *
                 C154169 +
             (C97195 * C557 + C97756 + C97756 + C153969 * C581 + C97193 * C556 +
              C97757 + C97757 + C97191 * C580) *
                 C154181) *
                C73969) *
               C153847) *
              C153767 * C154162 +
          ((((C97811 + C97810) * C154181 + (C98530 + C98531) * C154169 +
             (C101775 + C101774) * C154143) *
                C73969 +
            ((C97809 + C97808) * C154181 + (C98532 + C98533) * C154169 +
             (C102370 + C102371) * C154143) *
                C153722) *
               C153847 -
           ((C101412 * C154143 + C98013 * C154169 +
             (C97255 + C97254) * C154181) *
                C153722 +
            (C101394 * C154143 + C101395 * C154169 +
             (C97253 + C97252) * C154181) *
                C73969) *
               C154094) *
              C153767 * C154163 +
          (((C97262 * C154181 + C102070 * C154169 + C102071 * C154143) *
                C73969 +
            (C97263 * C154181 + (C97533 + C97532) * C154169 +
             (C97542 + C97543) * C154143) *
                C153722) *
               C154094 -
           (((C97195 * C3372 + C99716 + C99716 + C153969 * C3380 +
              C97193 * C1917 + C99717 + C99717 + C97191 * C1927) *
                 C154143 +
             (C98535 + C98534) * C154169 + C98222 * C154181) *
                C153722 +
            ((C102371 + C102370) * C154143 + (C98533 + C98532) * C154169 +
             C98223 * C154181) *
                C73969) *
               C153847) *
              C153767 * C774)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
             C97199 + C97199 + C153969 * C580) *
                C153865 * C154187 +
            (C97252 + C97253) * C153865 * C154180 + C97266 * C154161 +
            C97267 * C154108) *
               C154094 -
           (C98230 * C154108 + C98231 * C154161 +
            (C97810 + C97811) * C153865 * C154180 +
            (C97195 * C557 + C97756 + C97756 + C153969 * C581 + C97193 * C556 +
             C97757 + C97757 + C97191 * C580) *
                C153865 * C154187) *
               C153847) *
              C153767 * C154162 +
          (((C97811 + C97810) * C153865 * C154187 +
            (C97809 + C97808) * C153865 * C154180 +
            (C97807 + C97806) * C153865 * C154161 +
            (C98236 + C98237) * C153865 * C154108) *
               C153847 -
           (C97268 * C154108 + C97269 * C154161 +
            (C97255 + C97254) * C153865 * C154180 +
            (C97253 + C97252) * C153865 * C154187) *
               C154094) *
              C153767 * C154163 +
          ((C97266 * C154187 + C97267 * C154180 +
            (C97259 + C97258) * C153865 * C154161 +
            (C97260 + C97261) * C153865 * C154108) *
               C154094 -
           ((C97195 * C563 + C98228 + C98228 + C153969 * C587 + C97193 * C562 +
             C98229 + C98229 + C97191 * C586) *
                C153865 * C154108 +
            (C98237 + C98236) * C153865 * C154161 + C98230 * C154180 +
            C98231 * C154187) *
               C153847) *
              C153767 * C774)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C106473 * C136 + C106482 + C106482 + C154189 * C152 +
             C106475 * C556 + C106483 + C106483 + C154186 * C580 +
             C106477 * C557 + C106484 + C106484 + C154177 * C581 +
             C106479 * C2272 + C106485 + C106485 + C154123 * C2282) *
                C153865 * C73969 +
            (C106550 + C106551 + C106552 + C106553) * C153865 * C153722) *
               C154094 -
           ((C107070 + C107071 + C107072 + C107073) * C153865 * C153722 +
            (C106479 * C7665 + C107026 + C107026 + C154123 * C7673 +
             C106477 * C2272 + C107027 + C107027 + C154177 * C2282 +
             C106475 * C557 + C107028 + C107028 + C154186 * C581 +
             C106473 * C556 + C107029 + C107029 + C154189 * C580) *
                C153865 * C73969) *
               C153847) *
              C153767 * C154162 +
          (((C107073 + C107072 + C107071 + C107070) * C153865 * C73969 +
            (C107510 + C107511 + C107512 + C107513) * C153865 * C153722) *
               C153847 -
           ((C106554 + C106555 + C106556 + C106557) * C153865 * C153722 +
            (C106553 + C106552 + C106551 + C106550) * C153865 * C73969) *
               C154094) *
              C153767 * C154163 +
          (((C106557 + C106556 + C106555 + C106554) * C153865 * C73969 +
            (C106558 + C106559 + C106560 + C106561) * C153865 * C153722) *
               C154094 -
           ((C106479 * C7668 + C107498 + C107498 + C154123 * C7676 +
             C106477 * C2269 + C107499 + C107499 + C154177 * C2279 +
             C106475 * C560 + C107500 + C107500 + C154186 * C584 +
             C106473 * C553 + C107501 + C107501 + C154189 * C577) *
                C153865 * C153722 +
            (C107513 + C107512 + C107511 + C107510) * C153865 * C73969) *
               C153847) *
              C153767 * C774)) /
            (p * q * std::sqrt(p + q));
    d2ee[259] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
             C97199 + C97199 + C153969 * C580) *
                C153865 * C154187 +
            (C97252 + C97253) * C153865 * C154180 + C97266 * C154161 +
            C97267 * C154108) *
               C153783 * C326 -
           ((C97532 + C97533) * C153865 * C154108 +
            (C97534 + C97535) * C153865 * C154161 +
            (C97536 + C97537) * C153865 * C154180 +
            (C97195 * C1081 + C97482 + C97482 + C153969 * C1093 +
             C97193 * C335 + C97483 + C97483 + C97191 * C359) *
                C153865 * C154187) *
               C153783 * C327 +
           ((C97193 * C336 + C97484 + C97484 + C97191 * C360 + C97195 * C1920 +
             C97485 + C97485 + C153969 * C1930) *
                C153865 * C154187 +
            (C97538 + C97539) * C153865 * C154180 +
            (C97540 + C97541) * C153865 * C154161 +
            (C97542 + C97543) * C153865 * C154108) *
               C153783 * C328) *
              C329 +
          (((C97537 + C97536) * C153865 * C154187 +
            (C97535 + C97534) * C153865 * C154180 +
            (C97533 + C97532) * C153865 * C154161 +
            (C97193 * C331 + C97504 + C97504 + C97191 * C355 + C97195 * C1085 +
             C97505 + C97505 + C153969 * C1097) *
                C153865 * C154108) *
               C153783 * C327 -
           (C97268 * C154108 + C97269 * C154161 +
            (C97255 + C97254) * C153865 * C154180 +
            (C97253 + C97252) * C153865 * C154187) *
               C153783 * C326 -
           ((C97195 * C1916 + C97506 + C97506 + C153969 * C1926 +
             C97193 * C340 + C97507 + C97507 + C97191 * C364) *
                C153865 * C154108 +
            (C97543 + C97542) * C153865 * C154161 +
            (C97541 + C97540) * C153865 * C154180 +
            (C97539 + C97538) * C153865 * C154187) *
               C153783 * C328) *
              C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
            C97199 + C97199 + C153969 * C580) *
               C153865 * C154187 +
           (C97252 + C97253) * C153865 * C154180 + C97266 * C154161 +
           C97267 * C154108) *
              C153783 * C153767 * C130 -
          (C97268 * C154108 + C97269 * C154161 +
           (C97255 + C97254) * C153865 * C154180 +
           (C97253 + C97252) * C153865 * C154187) *
              C153783 * C153767 * C131 +
          (C97266 * C154187 + C97267 * C154180 +
           (C97259 + C97258) * C153865 * C154161 +
           (C97260 + C97261) * C153865 * C154108) *
              C153783 * C153767 * C132 -
          ((C97195 * C909 + C97230 + C97230 + C153969 * C911 + C97193 * C142 +
            C97231 + C97231 + C97191 * C158) *
               C153865 * C154108 +
           (C97261 + C97260) * C153865 * C154161 + C97268 * C154180 +
           C97269 * C154187) *
              C153783 * C153767 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
             C97199 + C97199 + C153969 * C580) *
                C154181 +
            (C97193 * C335 + C97483 + C97483 + C97191 * C359 + C97195 * C1081 +
             C97482 + C97482 + C153969 * C1093) *
                C154169 +
            (C97193 * C336 + C97484 + C97484 + C97191 * C360 + C97195 * C1920 +
             C97485 + C97485 + C153969 * C1930) *
                C154143) *
               C73969 +
           ((C97252 + C97253) * C154181 + (C97537 + C97536) * C154169 +
            (C97538 + C97539) * C154143) *
               C153722) *
              C153783 * C153767 * C130 -
          (((C97541 + C97540) * C154143 + C98013 * C154169 +
            (C97255 + C97254) * C154181) *
               C153722 +
           ((C97539 + C97538) * C154143 + (C97536 + C97537) * C154169 +
            (C97253 + C97252) * C154181) *
               C73969) *
              C153783 * C153767 * C131 +
          ((C97262 * C154181 + (C97535 + C97534) * C154169 +
            (C97540 + C97541) * C154143) *
               C73969 +
           (C97263 * C154181 + (C97533 + C97532) * C154169 +
            (C97542 + C97543) * C154143) *
               C153722) *
              C153783 * C153767 * C132 -
          (((C97195 * C1916 + C97506 + C97506 + C153969 * C1926 +
             C97193 * C340 + C97507 + C97507 + C97191 * C364) *
                C154143 +
            (C98027 + C98026) * C154169 + C97264 * C154181) *
               C153722 +
           ((C97543 + C97542) * C154143 + C98012 * C154169 + C97265 * C154181) *
               C73969) *
              C153783 * C153767 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
              C97199 + C97199 + C153969 * C580) *
                 C154181 +
             (C101439 + C101440) * C154169 + C101451 * C154143) *
                C73969 +
            ((C97252 + C97253) * C154181 + C101388 * C154169 +
             C101389 * C154143) *
                C153722) *
               C153783 * C326 -
           ((C101452 * C154143 + C101394 * C154169 + C101395 * C154181) *
                C153722 +
            ((C101445 + C101446) * C154143 + (C101442 + C101441) * C154169 +
             (C101440 + C101439) * C154181) *
                C73969) *
               C153783 * C327 +
           ((C101451 * C154181 + (C101446 + C101445) * C154169 +
             (C97193 * C3083 + C101400 + C101400 + C97191 * C3091 +
              C97195 * C5559 + C101401 + C101401 + C153969 * C5565) *
                 C154143) *
                C73969 +
            (C101389 * C154181 + C101453 * C154169 +
             (C101447 + C101448) * C154143) *
                C153722) *
               C153783 * C328) *
              C329 +
          (((C101388 * C154181 + C101389 * C154169 + C101453 * C154143) *
                C73969 +
            ((C97535 + C97534) * C154181 + (C97540 + C97541) * C154169 +
             (C101449 + C101450) * C154143) *
                C153722) *
               C153783 * C327 -
           ((C101412 * C154143 + C98013 * C154169 +
             (C97255 + C97254) * C154181) *
                C153722 +
            (C101394 * C154143 + C101395 * C154169 +
             (C97253 + C97252) * C154181) *
                C73969) *
               C153783 * C326 -
           (((C97195 * C5557 + C101413 + C101413 + C153969 * C5563 +
              C97193 * C3085 + C101414 + C101414 + C97191 * C3093) *
                 C154143 +
             (C101450 + C101449) * C154169 + C101412 * C154181) *
                C153722 +
            ((C101448 + C101447) * C154143 + C101452 * C154169 +
             C101394 * C154181) *
                C73969) *
               C153783 * C328) *
              C153754)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C106473 * C136 + C106482 + C106482 + C154189 * C152 +
            C106475 * C556 + C106483 + C106483 + C154186 * C580 +
            C106477 * C557 + C106484 + C106484 + C154177 * C581 +
            C106479 * C2272 + C106485 + C106485 + C154123 * C2282) *
               C153865 * C73969 +
           (C106550 + C106551 + C106552 + C106553) * C153865 * C153722) *
              C153783 * C153767 * C130 -
          ((C106554 + C106555 + C106556 + C106557) * C153865 * C153722 +
           (C106553 + C106552 + C106551 + C106550) * C153865 * C73969) *
              C153783 * C153767 * C131 +
          ((C106557 + C106556 + C106555 + C106554) * C153865 * C73969 +
           (C106558 + C106559 + C106560 + C106561) * C153865 * C153722) *
              C153783 * C153767 * C132 -
          ((C106479 * C2268 + C106522 + C106522 + C154123 * C2278 +
            C106477 * C561 + C106523 + C106523 + C154177 * C585 +
            C106475 * C552 + C106524 + C106524 + C154186 * C576 +
            C106473 * C140 + C106525 + C106525 + C154189 * C156) *
               C153865 * C153722 +
           (C106561 + C106560 + C106559 + C106558) * C153865 * C73969) *
              C153783 * C153767 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C106473 * C136 + C106482 + C106482 + C154189 * C152 +
             C106475 * C556 + C106483 + C106483 + C154186 * C580 +
             C106477 * C557 + C106484 + C106484 + C154177 * C581 +
             C106479 * C2272 + C106485 + C106485 + C154123 * C2282) *
                C153865 * C73969 +
            (C106550 + C106551 + C106552 + C106553) * C153865 * C153722) *
               C153783 * C326 -
           ((C106812 + C106813 + C106814 + C106815) * C153865 * C153722 +
            (C106479 * C6161 + C106768 + C106768 + C154123 * C6173 +
             C106477 * C1489 + C106769 + C106769 + C154177 * C1499 +
             C106475 * C1081 + C106770 + C106770 + C154186 * C1093 +
             C106473 * C335 + C106771 + C106771 + C154189 * C359) *
                C153865 * C73969) *
               C153783 * C327 +
           ((C106473 * C336 + C106772 + C106772 + C154189 * C360 +
             C106475 * C1920 + C106773 + C106773 + C154186 * C1930 +
             C106477 * C3369 + C106774 + C106774 + C154177 * C3377 +
             C106479 * C6160 + C106775 + C106775 + C154123 * C6172) *
                C153865 * C73969 +
            (C106816 + C106817 + C106818 + C106819) * C153865 * C153722) *
               C153783 * C328) *
              C329 +
          (((C106815 + C106814 + C106813 + C106812) * C153865 * C73969 +
            (C106473 * C333 + C106788 + C106788 + C154189 * C357 +
             C106475 * C1083 + C106789 + C106789 + C154186 * C1095 +
             C106477 * C1487 + C106790 + C106790 + C154177 * C1497 +
             C106479 * C6157 + C106791 + C106791 + C154123 * C6169) *
                C153865 * C153722) *
               C153783 * C327 -
           ((C106554 + C106555 + C106556 + C106557) * C153865 * C153722 +
            (C106553 + C106552 + C106551 + C106550) * C153865 * C73969) *
               C153783 * C326 -
           ((C106479 * C6156 + C106792 + C106792 + C154123 * C6168 +
             C106477 * C3371 + C106793 + C106793 + C154177 * C3379 +
             C106475 * C1918 + C106794 + C106794 + C154186 * C1928 +
             C106473 * C338 + C106795 + C106795 + C154189 * C362) *
                C153865 * C153722 +
            (C106819 + C106818 + C106817 + C106816) * C153865 * C73969) *
               C153783 * C328) *
              C153754)) /
            (p * q * std::sqrt(p + q));
    d2ee[260] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
              C97199 + C97199 + C153969 * C580) *
                 C154181 +
             (C101439 + C101440) * C154169 + C101451 * C154143) *
                C73969 +
            ((C97252 + C97253) * C154181 + C101388 * C154169 +
             C101389 * C154143) *
                C153722) *
               C153783 * C154164 -
           ((C101452 * C154143 + C101394 * C154169 + C101395 * C154181) *
                C153722 +
            (C103282 * C154143 + (C101442 + C101441) * C154169 +
             (C101440 + C101439) * C154181) *
                C73969) *
               C153783 * C154165 +
           ((C101451 * C154181 + (C101446 + C101445) * C154169 +
             (C103295 + C103296) * C154143) *
                C73969 +
            (C101389 * C154181 + C101453 * C154169 +
             (C101447 + C101448) * C154143) *
                C153722) *
               C153783 * C1629) *
              C154085 +
          (((C101388 * C154181 + C101389 * C154169 + C101453 * C154143) *
                C73969 +
            (C102070 * C154181 + C102071 * C154169 +
             (C101449 + C101450) * C154143) *
                C153722) *
               C153783 * C154165 -
           ((C101412 * C154143 + C98013 * C154169 +
             (C97255 + C97254) * C154181) *
                C153722 +
            (C101394 * C154143 + C101395 * C154169 +
             (C97253 + C97252) * C154181) *
                C73969) *
               C153783 * C154164 -
           (((C97195 * C5557 + C101413 + C101413 + C153969 * C5563 +
              C97193 * C3085 + C101414 + C101414 + C97191 * C3093) *
                 C154143 +
             (C101450 + C101449) * C154169 + C101412 * C154181) *
                C153722 +
            ((C101448 + C101447) * C154143 + C101452 * C154169 +
             C101394 * C154181) *
                C73969) *
               C153783 * C1629) *
              C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
             C97199 + C97199 + C153969 * C580) *
                C153865 * C154187 +
            (C97252 + C97253) * C153865 * C154180 + C97266 * C154161 +
            C97267 * C154108) *
               C153783 * C154164 -
           (C98020 * C154108 + C98021 * C154161 +
            (C97536 + C97537) * C153865 * C154180 +
            (C97195 * C1081 + C97482 + C97482 + C153969 * C1093 +
             C97193 * C335 + C97483 + C97483 + C97191 * C359) *
                C153865 * C154187) *
               C153783 * C154165 +
           ((C97193 * C336 + C97484 + C97484 + C97191 * C360 + C97195 * C1920 +
             C97485 + C97485 + C153969 * C1930) *
                C153865 * C154187 +
            (C97538 + C97539) * C153865 * C154180 +
            (C97540 + C97541) * C153865 * C154161 +
            (C97542 + C97543) * C153865 * C154108) *
               C153783 * C1629) *
              C154085 +
          (((C97537 + C97536) * C153865 * C154187 +
            (C97535 + C97534) * C153865 * C154180 +
            (C97533 + C97532) * C153865 * C154161 +
            (C98026 + C98027) * C153865 * C154108) *
               C153783 * C154165 -
           (C97268 * C154108 + C97269 * C154161 +
            (C97255 + C97254) * C153865 * C154180 +
            (C97253 + C97252) * C153865 * C154187) *
               C153783 * C154164 -
           ((C97195 * C1916 + C97506 + C97506 + C153969 * C1926 +
             C97193 * C340 + C97507 + C97507 + C97191 * C364) *
                C153865 * C154108 +
            (C97543 + C97542) * C153865 * C154161 +
            (C97541 + C97540) * C153865 * C154180 +
            (C97539 + C97538) * C153865 * C154187) *
               C153783 * C1629) *
              C153754)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C106473 * C136 + C106482 + C106482 + C154189 * C152 +
             C106475 * C556 + C106483 + C106483 + C154186 * C580 +
             C106477 * C557 + C106484 + C106484 + C154177 * C581 +
             C106479 * C2272 + C106485 + C106485 + C154123 * C2282) *
                C153865 * C73969 +
            (C106550 + C106551 + C106552 + C106553) * C153865 * C153722) *
               C153783 * C154164 -
           ((C106812 + C106813 + C106814 + C106815) * C153865 * C153722 +
            (C106479 * C6161 + C106768 + C106768 + C154123 * C6173 +
             C106477 * C1489 + C106769 + C106769 + C154177 * C1499 +
             C106475 * C1081 + C106770 + C106770 + C154186 * C1093 +
             C106473 * C335 + C106771 + C106771 + C154189 * C359) *
                C153865 * C73969) *
               C153783 * C154165 +
           ((C106473 * C336 + C106772 + C106772 + C154189 * C360 +
             C106475 * C1920 + C106773 + C106773 + C154186 * C1930 +
             C106477 * C3369 + C106774 + C106774 + C154177 * C3377 +
             C106479 * C6160 + C106775 + C106775 + C154123 * C6172) *
                C153865 * C73969 +
            (C106816 + C106817 + C106818 + C106819) * C153865 * C153722) *
               C153783 * C1629) *
              C154085 +
          (((C106815 + C106814 + C106813 + C106812) * C153865 * C73969 +
            (C107292 + C107293 + C107294 + C107295) * C153865 * C153722) *
               C153783 * C154165 -
           ((C106554 + C106555 + C106556 + C106557) * C153865 * C153722 +
            (C106553 + C106552 + C106551 + C106550) * C153865 * C73969) *
               C153783 * C154164 -
           ((C106479 * C6156 + C106792 + C106792 + C154123 * C6168 +
             C106477 * C3371 + C106793 + C106793 + C154177 * C3379 +
             C106475 * C1918 + C106794 + C106794 + C154186 * C1928 +
             C106473 * C338 + C106795 + C106795 + C154189 * C362) *
                C153865 * C153722 +
            (C106819 + C106818 + C106817 + C106816) * C153865 * C73969) *
               C153783 * C1629) *
              C153754)) /
            (p * q * std::sqrt(p + q));
    d2ee[261] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
              C97199 + C97199 + C153969 * C580) *
                 C154181 +
             (C101439 + C101440) * C154169 + C101451 * C154143) *
                C73969 +
            ((C97252 + C97253) * C154181 + C101388 * C154169 +
             C101389 * C154143) *
                C153722) *
               C154094 -
           ((C102758 * C154143 + C102759 * C154169 +
             (C97810 + C97811) * C154181) *
                C153722 +
            (C104577 * C154143 + (C102794 + C102795) * C154169 +
             (C97195 * C557 + C97756 + C97756 + C153969 * C581 + C97193 * C556 +
              C97757 + C97757 + C97191 * C580) *
                 C154181) *
                C73969) *
               C153847) *
              C154164 +
          ((((C102795 + C102794) * C154181 + (C102793 + C102792) * C154169 +
             (C104590 + C104591) * C154143) *
                C73969 +
            (C102770 * C154181 + C102771 * C154169 +
             (C102796 + C102797) * C154143) *
                C153722) *
               C153847 -
           ((C101452 * C154143 + C101394 * C154169 + C101395 * C154181) *
                C153722 +
            (C103282 * C154143 + (C101442 + C101441) * C154169 +
             (C101440 + C101439) * C154181) *
                C73969) *
               C154094) *
              C154165 +
          (((C101451 * C154181 + (C101446 + C101445) * C154169 +
             (C103295 + C103296) * C154143) *
                C73969 +
            (C101389 * C154181 + C101453 * C154169 +
             (C101447 + C101448) * C154143) *
                C153722) *
               C154094 -
           (((C97195 * C28359 + C104582 + C104582 + C153969 * C28363 +
              C97193 * C5558 + C104583 + C104583 + C97191 * C5564) *
                 C154143 +
             (C102797 + C102796) * C154169 + C102758 * C154181) *
                C153722 +
            ((C97195 * C28358 + C104584 + C104584 + C153969 * C28362 +
              C97193 * C5559 + C104585 + C104585 + C97191 * C5565) *
                 C154143 +
             (C104591 + C104590) * C154169 + C104577 * C154181) *
                C73969) *
               C153847) *
              C1629) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
             C97199 + C97199 + C153969 * C580) *
                C153865 * C154187 +
            (C97252 + C97253) * C153865 * C154180 + C97266 * C154161 +
            C97267 * C154108) *
               C154094 -
           (C98230 * C154108 + C98231 * C154161 +
            (C97810 + C97811) * C153865 * C154180 +
            (C97195 * C557 + C97756 + C97756 + C153969 * C581 + C97193 * C556 +
             C97757 + C97757 + C97191 * C580) *
                C153865 * C154187) *
               C153847) *
              C154164 +
          (((C97193 * C1081 + C98496 + C98496 + C97191 * C1093 +
             C97195 * C1489 + C98497 + C98497 + C153969 * C1499) *
                C153865 * C154187 +
            (C98530 + C98531) * C153865 * C154180 +
            (C98532 + C98533) * C153865 * C154161 +
            (C98534 + C98535) * C153865 * C154108) *
               C153847 -
           (C98020 * C154108 + C98021 * C154161 +
            (C97536 + C97537) * C153865 * C154180 +
            (C97195 * C1081 + C97482 + C97482 + C153969 * C1093 +
             C97193 * C335 + C97483 + C97483 + C97191 * C359) *
                C153865 * C154187) *
               C154094) *
              C154165 +
          (((C97193 * C336 + C97484 + C97484 + C97191 * C360 + C97195 * C1920 +
             C97485 + C97485 + C153969 * C1930) *
                C153865 * C154187 +
            (C97538 + C97539) * C153865 * C154180 +
            (C97540 + C97541) * C153865 * C154161 +
            (C97542 + C97543) * C153865 * C154108) *
               C154094 -
           ((C97195 * C3372 + C99716 + C99716 + C153969 * C3380 +
             C97193 * C1917 + C99717 + C99717 + C97191 * C1927) *
                C153865 * C154108 +
            (C97195 * C3371 + C99718 + C99718 + C153969 * C3379 +
             C97193 * C1918 + C99719 + C99719 + C97191 * C1928) *
                C153865 * C154161 +
            (C97195 * C3370 + C99720 + C99720 + C153969 * C3378 +
             C97193 * C1919 + C99721 + C99721 + C97191 * C1929) *
                C153865 * C154180 +
            (C97195 * C3369 + C99722 + C99722 + C153969 * C3377 +
             C97193 * C1920 + C99723 + C99723 + C97191 * C1930) *
                C153865 * C154187) *
               C153847) *
              C1629) *
         C153748) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C106473 * C136 + C106482 + C106482 + C154189 * C152 +
             C106475 * C556 + C106483 + C106483 + C154186 * C580 +
             C106477 * C557 + C106484 + C106484 + C154177 * C581 +
             C106479 * C2272 + C106485 + C106485 + C154123 * C2282) *
                C153865 * C73969 +
            (C106550 + C106551 + C106552 + C106553) * C153865 * C153722) *
               C154094 -
           ((C107070 + C107071 + C107072 + C107073) * C153865 * C153722 +
            (C106479 * C7665 + C107026 + C107026 + C154123 * C7673 +
             C106477 * C2272 + C107027 + C107027 + C154177 * C2282 +
             C106475 * C557 + C107028 + C107028 + C154186 * C581 +
             C106473 * C556 + C107029 + C107029 + C154189 * C580) *
                C153865 * C73969) *
               C153847) *
              C154164 +
          (((C106473 * C1081 + C107772 + C107772 + C154189 * C1093 +
             C106475 * C1489 + C107773 + C107773 + C154186 * C1499 +
             C106477 * C6161 + C107774 + C107774 + C154177 * C6173 +
             C106479 * C9167 + C107775 + C107775 + C154123 * C9173) *
                C153865 * C73969 +
            (C107800 + C107801 + C107802 + C107803) * C153865 * C153722) *
               C153847 -
           ((C106812 + C106813 + C106814 + C106815) * C153865 * C153722 +
            (C106479 * C6161 + C106768 + C106768 + C154123 * C6173 +
             C106477 * C1489 + C106769 + C106769 + C154177 * C1499 +
             C106475 * C1081 + C106770 + C106770 + C154186 * C1093 +
             C106473 * C335 + C106771 + C106771 + C154189 * C359) *
                C153865 * C73969) *
               C154094) *
              C154165 +
          (((C106473 * C336 + C106772 + C106772 + C154189 * C360 +
             C106475 * C1920 + C106773 + C106773 + C154186 * C1930 +
             C106477 * C3369 + C106774 + C106774 + C154177 * C3377 +
             C106479 * C6160 + C106775 + C106775 + C154123 * C6172) *
                C153865 * C73969 +
            (C106816 + C106817 + C106818 + C106819) * C153865 * C153722) *
               C154094 -
           ((C106479 * C30947 + C108984 + C108984 + C154123 * C30951 +
             C106477 * C6158 + C108985 + C108985 + C154177 * C6170 +
             C106475 * C3370 + C108986 + C108986 + C154186 * C3378 +
             C106473 * C1919 + C108987 + C108987 + C154189 * C1929) *
                C153865 * C153722 +
            (C106479 * C30946 + C108988 + C108988 + C154123 * C30950 +
             C106477 * C6160 + C108989 + C108989 + C154177 * C6172 +
             C106475 * C3369 + C108990 + C108990 + C154186 * C3377 +
             C106473 * C1920 + C108991 + C108991 + C154189 * C1930) *
                C153865 * C73969) *
               C153847) *
              C1629) *
         C153748) /
            (p * q * std::sqrt(p + q));
    d2ee[262] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C97193 * C136 + C97198 + C97198 + C97191 * C152 +
                 C97195 * C556 + C97199 + C97199 + C153969 * C580) *
                    C153865 * C154187 +
                (C97252 + C97253) * C153865 * C154180 + C97266 * C154161 +
                C97267 * C154108) *
                   C153783 * C1251 -
               (C98020 * C154108 + C98021 * C154161 +
                (C97536 + C97537) * C153865 * C154180 +
                (C97195 * C1081 + C97482 + C97482 + C153969 * C1093 +
                 C97193 * C335 + C97483 + C97483 + C97191 * C359) *
                    C153865 * C154187) *
                   C153783 * C153819) *
                  C1253 +
              (((C97537 + C97536) * C153865 * C154187 +
                (C97535 + C97534) * C153865 * C154180 +
                (C97533 + C97532) * C153865 * C154161 +
                (C98026 + C98027) * C153865 * C154108) *
                   C153783 * C153819 -
               (C97268 * C154108 + C97269 * C154161 +
                (C97255 + C97254) * C153865 * C154180 +
                (C97253 + C97252) * C153865 * C154187) *
                   C153783 * C1251) *
                  C1254 +
              ((C97266 * C154187 + C97267 * C154180 +
                (C97259 + C97258) * C153865 * C154161 +
                (C97260 + C97261) * C153865 * C154108) *
                   C153783 * C1251 -
               ((C97195 * C1086 + C98018 + C98018 + C153969 * C1098 +
                 C97193 * C341 + C98019 + C98019 + C97191 * C365) *
                    C153865 * C154108 +
                (C98027 + C98026) * C153865 * C154161 + C98020 * C154180 +
                C98021 * C154187) *
                   C153783 * C153819) *
                  C1255) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((C97193 * C136 + C97198 + C97198 + C97191 * C152 +
                C97195 * C556 + C97199 + C97199 + C153969 * C580) *
                   C153865 * C154187 +
               (C97252 + C97253) * C153865 * C154180 + C97266 * C154161 +
               C97267 * C154108) *
                  C153783 * C1338 -
              (C98020 * C154108 + C98021 * C154161 +
               (C97536 + C97537) * C153865 * C154180 +
               (C97195 * C1081 + C97482 + C97482 + C153969 * C1093 +
                C97193 * C335 + C97483 + C97483 + C97191 * C359) *
                   C153865 * C154187) *
                  C153783 * C1339 +
              ((C97193 * C336 + C97484 + C97484 + C97191 * C360 +
                C97195 * C1920 + C97485 + C97485 + C153969 * C1930) *
                   C153865 * C154187 +
               (C97538 + C97539) * C153865 * C154180 +
               (C97540 + C97541) * C153865 * C154161 +
               (C97542 + C97543) * C153865 * C154108) *
                  C153783 * C1340 -
              ((C97195 * C4171 + C98860 + C98860 + C153969 * C4179 +
                C97193 * C1344 + C98861 + C98861 + C97191 * C1354) *
                   C153865 * C154108 +
               (C97195 * C4170 + C98862 + C98862 + C153969 * C4178 +
                C97193 * C1345 + C98863 + C98863 + C97191 * C1355) *
                   C153865 * C154161 +
               (C97195 * C4169 + C98864 + C98864 + C153969 * C4177 +
                C97193 * C1346 + C98865 + C98865 + C97191 * C1356) *
                   C153865 * C154180 +
               (C97195 * C4168 + C98866 + C98866 + C153969 * C4176 +
                C97193 * C1347 + C98867 + C98867 + C97191 * C1357) *
                   C153865 * C154187) *
                  C153783 * C1341) *
             C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
             C97199 + C97199 + C153969 * C580) *
                C153865 * C154187 +
            (C97252 + C97253) * C153865 * C154180 + C97266 * C154161 +
            C97267 * C154108) *
               C549 -
           (C98230 * C154108 + C98231 * C154161 +
            (C97810 + C97811) * C153865 * C154180 +
            (C97195 * C557 + C97756 + C97756 + C153969 * C581 + C97193 * C556 +
             C97757 + C97757 + C97191 * C580) *
                C153865 * C154187) *
               C550 +
           ((C97193 * C557 + C97758 + C97758 + C97191 * C581 + C97195 * C2272 +
             C97759 + C97759 + C153969 * C2282) *
                C153865 * C154187 +
            (C97812 + C97813) * C153865 * C154180 +
            (C97814 + C97815) * C153865 * C154161 +
            (C97816 + C97817) * C153865 * C154108) *
               C551) *
              C1251 +
          (((C97193 * C1081 + C98496 + C98496 + C97191 * C1093 +
             C97195 * C1489 + C98497 + C98497 + C153969 * C1499) *
                C153865 * C154187 +
            (C98530 + C98531) * C153865 * C154180 +
            (C98532 + C98533) * C153865 * C154161 +
            (C98534 + C98535) * C153865 * C154108) *
               C550 -
           (C98020 * C154108 + C98021 * C154161 +
            (C97536 + C97537) * C153865 * C154180 +
            (C97195 * C1081 + C97482 + C97482 + C153969 * C1093 +
             C97193 * C335 + C97483 + C97483 + C97191 * C359) *
                C153865 * C154187) *
               C549 -
           ((C97195 * C8529 + C99062 + C99062 + C153969 * C8531 +
             C97193 * C1486 + C99063 + C99063 + C97191 * C1496) *
                C153865 * C154108 +
            (C97195 * C6157 + C99064 + C99064 + C153969 * C6169 +
             C97193 * C1487 + C99065 + C99065 + C97191 * C1497) *
                C153865 * C154161 +
            (C97195 * C6159 + C99066 + C99066 + C153969 * C6171 +
             C97193 * C1488 + C99067 + C99067 + C97191 * C1498) *
                C153865 * C154180 +
            (C97195 * C6161 + C99068 + C99068 + C153969 * C6173 +
             C97193 * C1489 + C99069 + C99069 + C97191 * C1499) *
                C153865 * C154187) *
               C551) *
              C153819) *
         C153748) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
              C97199 + C97199 + C153969 * C580) *
                 C154181 +
             (C101439 + C101440) * C154169 + C101451 * C154143) *
                C73969 +
            ((C97252 + C97253) * C154181 + C101388 * C154169 +
             C101389 * C154143) *
                C153722) *
               C153783 * C1251 -
           ((C101452 * C154143 + C101394 * C154169 + C101395 * C154181) *
                C153722 +
            ((C101445 + C101446) * C154143 + (C101442 + C101441) * C154169 +
             (C101440 + C101439) * C154181) *
                C73969) *
               C153783 * C153819) *
              C1253 +
          (((C101388 * C154181 + C101389 * C154169 + C101453 * C154143) *
                C73969 +
            (C102070 * C154181 + C102071 * C154169 +
             (C101449 + C101450) * C154143) *
                C153722) *
               C153783 * C153819 -
           ((C101412 * C154143 + C98013 * C154169 +
             (C97255 + C97254) * C154181) *
                C153722 +
            (C101394 * C154143 + C101395 * C154169 +
             (C97253 + C97252) * C154181) *
                C73969) *
               C153783 * C1251) *
              C1254 +
          (((C97262 * C154181 + C102070 * C154169 + C102071 * C154143) *
                C73969 +
            (C97263 * C154181 + (C97533 + C97532) * C154169 +
             (C97542 + C97543) * C154143) *
                C153722) *
               C153783 * C1251 -
           (((C97195 * C4171 + C98860 + C98860 + C153969 * C4179 +
              C97193 * C1344 + C98861 + C98861 + C97191 * C1354) *
                 C154143 +
             (C97543 + C97542) * C154169 + C98012 * C154181) *
                C153722 +
            ((C101450 + C101449) * C154143 + C101412 * C154169 +
             C98013 * C154181) *
                C73969) *
               C153783 * C153819) *
              C1255)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
             C97199 + C97199 + C153969 * C580) *
                C154181 +
            (C101439 + C101440) * C154169 + C101451 * C154143) *
               C73969 +
           ((C97252 + C97253) * C154181 + C101388 * C154169 +
            C101389 * C154143) *
               C153722) *
              C153783 * C1338 -
          ((C101452 * C154143 + C101394 * C154169 + C101395 * C154181) *
               C153722 +
           (C103282 * C154143 + (C101442 + C101441) * C154169 +
            (C101440 + C101439) * C154181) *
               C73969) *
              C153783 * C1339 +
          ((C101451 * C154181 + (C101446 + C101445) * C154169 +
            (C103295 + C103296) * C154143) *
               C73969 +
           (C101389 * C154181 + C101453 * C154169 +
            (C101447 + C101448) * C154143) *
               C153722) *
              C153783 * C1340 -
          (((C97195 * C28773 + C103287 + C103287 + C153969 * C28777 +
             C97193 * C4575 + C103288 + C103288 + C97191 * C4581) *
                C154143 +
            (C101448 + C101447) * C154169 + C101452 * C154181) *
               C153722 +
           ((C97195 * C28772 + C103289 + C103289 + C153969 * C28776 +
             C97193 * C4576 + C103290 + C103290 + C97191 * C4582) *
                C154143 +
            (C103296 + C103295) * C154169 + C103282 * C154181) *
               C73969) *
              C153783 * C1341) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
              C97199 + C97199 + C153969 * C580) *
                 C154181 +
             (C101439 + C101440) * C154169 + C101451 * C154143) *
                C73969 +
            ((C97252 + C97253) * C154181 + C101388 * C154169 +
             C101389 * C154143) *
                C153722) *
               C549 -
           ((C102758 * C154143 + C102759 * C154169 +
             (C97810 + C97811) * C154181) *
                C153722 +
            ((C102792 + C102793) * C154143 + (C102794 + C102795) * C154169 +
             (C97195 * C557 + C97756 + C97756 + C153969 * C581 + C97193 * C556 +
              C97757 + C97757 + C97191 * C580) *
                 C154181) *
                C73969) *
               C550 +
           (((C97193 * C557 + C97758 + C97758 + C97191 * C581 + C97195 * C2272 +
              C97759 + C97759 + C153969 * C2282) *
                 C154181 +
             (C103607 + C103608) * C154169 + (C103609 + C103610) * C154143) *
                C73969 +
            ((C97812 + C97813) * C154181 + (C101776 + C101777) * C154169 +
             (C101778 + C101779) * C154143) *
                C153722) *
               C551) *
              C1251 +
          ((((C102795 + C102794) * C154181 + (C102793 + C102792) * C154169 +
             (C97193 * C4168 + C102768 + C102768 + C97191 * C4176 +
              C97195 * C4811 + C102769 + C102769 + C153969 * C4817) *
                 C154143) *
                C73969 +
            (C102770 * C154181 + C102771 * C154169 +
             (C102796 + C102797) * C154143) *
                C153722) *
               C550 -
           ((C101452 * C154143 + C101394 * C154169 + C101395 * C154181) *
                C153722 +
            (C103282 * C154143 + (C101442 + C101441) * C154169 +
             (C101440 + C101439) * C154181) *
                C73969) *
               C549 -
           (((C97195 * C31684 + C103595 + C103595 + C153969 * C31686 +
              C97193 * C4810 + C103596 + C103596 + C97191 * C4816) *
                 C154143 +
             (C101779 + C101778) * C154169 + (C101777 + C101776) * C154181) *
                C153722 +
            ((C97195 * C29881 + C103597 + C103597 + C153969 * C29885 +
              C97193 * C4811 + C103598 + C103598 + C97191 * C4817) *
                 C154143 +
             (C103610 + C103609) * C154169 + (C103608 + C103607) * C154181) *
                C73969) *
               C551) *
              C153819) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C106473 * C136 + C106482 + C106482 + C154189 * C152 +
             C106475 * C556 + C106483 + C106483 + C154186 * C580 +
             C106477 * C557 + C106484 + C106484 + C154177 * C581 +
             C106479 * C2272 + C106485 + C106485 + C154123 * C2282) *
                C153865 * C73969 +
            (C106550 + C106551 + C106552 + C106553) * C153865 * C153722) *
               C153783 * C1251 -
           ((C106812 + C106813 + C106814 + C106815) * C153865 * C153722 +
            (C106479 * C6161 + C106768 + C106768 + C154123 * C6173 +
             C106477 * C1489 + C106769 + C106769 + C154177 * C1499 +
             C106475 * C1081 + C106770 + C106770 + C154186 * C1093 +
             C106473 * C335 + C106771 + C106771 + C154189 * C359) *
                C153865 * C73969) *
               C153783 * C153819) *
              C1253 +
          (((C106815 + C106814 + C106813 + C106812) * C153865 * C73969 +
            (C107292 + C107293 + C107294 + C107295) * C153865 * C153722) *
               C153783 * C153819 -
           ((C106554 + C106555 + C106556 + C106557) * C153865 * C153722 +
            (C106553 + C106552 + C106551 + C106550) * C153865 * C73969) *
               C153783 * C1251) *
              C1254 +
          (((C106557 + C106556 + C106555 + C106554) * C153865 * C73969 +
            (C106558 + C106559 + C106560 + C106561) * C153865 * C153722) *
               C153783 * C1251 -
           ((C106479 * C8529 + C107280 + C107280 + C154123 * C8531 +
             C106477 * C1486 + C107281 + C107281 + C154177 * C1496 +
             C106475 * C1084 + C107282 + C107282 + C154186 * C1096 +
             C106473 * C332 + C107283 + C107283 + C154189 * C356) *
                C153865 * C153722 +
            (C107295 + C107294 + C107293 + C107292) * C153865 * C73969) *
               C153783 * C153819) *
              C1255)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C106473 * C136 + C106482 + C106482 + C154189 * C152 +
            C106475 * C556 + C106483 + C106483 + C154186 * C580 +
            C106477 * C557 + C106484 + C106484 + C154177 * C581 +
            C106479 * C2272 + C106485 + C106485 + C154123 * C2282) *
               C153865 * C73969 +
           (C106550 + C106551 + C106552 + C106553) * C153865 * C153722) *
              C153783 * C1338 -
          ((C106812 + C106813 + C106814 + C106815) * C153865 * C153722 +
           (C106479 * C6161 + C106768 + C106768 + C154123 * C6173 +
            C106477 * C1489 + C106769 + C106769 + C154177 * C1499 +
            C106475 * C1081 + C106770 + C106770 + C154186 * C1093 +
            C106473 * C335 + C106771 + C106771 + C154189 * C359) *
               C153865 * C73969) *
              C153783 * C1339 +
          ((C106473 * C336 + C106772 + C106772 + C154189 * C360 +
            C106475 * C1920 + C106773 + C106773 + C154186 * C1930 +
            C106477 * C3369 + C106774 + C106774 + C154177 * C3377 +
            C106479 * C6160 + C106775 + C106775 + C154123 * C6172) *
               C153865 * C73969 +
           (C106816 + C106817 + C106818 + C106819) * C153865 * C153722) *
              C153783 * C1340 -
          ((C106479 * C31684 + C108128 + C108128 + C154123 * C31686 +
            C106477 * C4810 + C108129 + C108129 + C154177 * C4816 +
            C106475 * C4169 + C108130 + C108130 + C154186 * C4177 +
            C106473 * C1346 + C108131 + C108131 + C154189 * C1356) *
               C153865 * C153722 +
           (C106479 * C29881 + C108132 + C108132 + C154123 * C29885 +
            C106477 * C4811 + C108133 + C108133 + C154177 * C4817 +
            C106475 * C4168 + C108134 + C108134 + C154186 * C4176 +
            C106473 * C1347 + C108135 + C108135 + C154189 * C1357) *
               C153865 * C73969) *
              C153783 * C1341) *
         C153748) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C106473 * C136 + C106482 + C106482 + C154189 * C152 +
             C106475 * C556 + C106483 + C106483 + C154186 * C580 +
             C106477 * C557 + C106484 + C106484 + C154177 * C581 +
             C106479 * C2272 + C106485 + C106485 + C154123 * C2282) *
                C153865 * C73969 +
            (C106550 + C106551 + C106552 + C106553) * C153865 * C153722) *
               C549 -
           ((C107070 + C107071 + C107072 + C107073) * C153865 * C153722 +
            (C106479 * C7665 + C107026 + C107026 + C154123 * C7673 +
             C106477 * C2272 + C107027 + C107027 + C154177 * C2282 +
             C106475 * C557 + C107028 + C107028 + C154186 * C581 +
             C106473 * C556 + C107029 + C107029 + C154189 * C580) *
                C153865 * C73969) *
               C550 +
           ((C106473 * C557 + C107030 + C107030 + C154189 * C581 +
             C106475 * C2272 + C107031 + C107031 + C154186 * C2282 +
             C106477 * C7665 + C107032 + C107032 + C154177 * C7673 +
             C106479 * C10502 + C107033 + C107033 + C154123 * C10508) *
                C153865 * C73969 +
            (C107074 + C107075 + C107076 + C107077) * C153865 * C153722) *
               C551) *
              C1251 +
          (((C106473 * C1081 + C107772 + C107772 + C154189 * C1093 +
             C106475 * C1489 + C107773 + C107773 + C154186 * C1499 +
             C106477 * C6161 + C107774 + C107774 + C154177 * C6173 +
             C106479 * C9167 + C107775 + C107775 + C154123 * C9173) *
                C153865 * C73969 +
            (C107800 + C107801 + C107802 + C107803) * C153865 * C153722) *
               C550 -
           ((C106812 + C106813 + C106814 + C106815) * C153865 * C153722 +
            (C106479 * C6161 + C106768 + C106768 + C154123 * C6173 +
             C106477 * C1489 + C106769 + C106769 + C154177 * C1499 +
             C106475 * C1081 + C106770 + C106770 + C154186 * C1093 +
             C106473 * C335 + C106771 + C106771 + C154189 * C359) *
                C153865 * C73969) *
               C549 -
           ((C106479 * C56080 + C108330 + C108330 + C154123 * C56082 +
             C106477 * C9166 + C108331 + C108331 + C154177 * C9172 +
             C106475 * C6159 + C108332 + C108332 + C154186 * C6171 +
             C106473 * C1488 + C108333 + C108333 + C154189 * C1498) *
                C153865 * C153722 +
            (C106479 * C33705 + C108334 + C108334 + C154123 * C33709 +
             C106477 * C9167 + C108335 + C108335 + C154177 * C9173 +
             C106475 * C6161 + C108336 + C108336 + C154186 * C6173 +
             C106473 * C1489 + C108337 + C108337 + C154189 * C1499) *
                C153865 * C73969) *
               C551) *
              C153819) *
         C153748) /
            (p * q * std::sqrt(p + q));
    d2ee[263] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
               C97199 + C97199 + C153969 * C580) *
                  C154181 +
              (C101439 + C101440) * C154169 + C101451 * C154143) *
                 C73969 +
             ((C97252 + C97253) * C154181 + C101388 * C154169 +
              C101389 * C154143) *
                 C153722) *
                C154094 -
            ((C102758 * C154143 + C102759 * C154169 +
              (C97810 + C97811) * C154181) *
                 C153722 +
             ((C102792 + C102793) * C154143 + (C102794 + C102795) * C154169 +
              (C97195 * C557 + C97756 + C97756 + C153969 * C581 +
               C97193 * C556 + C97757 + C97757 + C97191 * C580) *
                  C154181) *
                 C73969) *
                C153847) *
               C1251 +
           ((((C102795 + C102794) * C154181 + (C102793 + C102792) * C154169 +
              (C97193 * C4168 + C102768 + C102768 + C97191 * C4176 +
               C97195 * C4811 + C102769 + C102769 + C153969 * C4817) *
                  C154143) *
                 C73969 +
             (C102770 * C154181 + C102771 * C154169 +
              (C102796 + C102797) * C154143) *
                 C153722) *
                C153847 -
            ((C101452 * C154143 + C101394 * C154169 + C101395 * C154181) *
                 C153722 +
             (C103282 * C154143 + (C101442 + C101441) * C154169 +
              (C101440 + C101439) * C154181) *
                 C73969) *
                C154094) *
               C153819) *
              C154085 +
          (((((C97811 + C97810) * C154181 + C102770 * C154169 +
              C102771 * C154143) *
                 C73969 +
             ((C97809 + C97808) * C154181 + (C98532 + C98533) * C154169 +
              (C102370 + C102371) * C154143) *
                 C153722) *
                C153847 -
            ((C101412 * C154143 + C98013 * C154169 +
              (C97255 + C97254) * C154181) *
                 C153722 +
             (C101394 * C154143 + C101395 * C154169 +
              (C97253 + C97252) * C154181) *
                 C73969) *
                C154094) *
               C1251 +
           (((C101388 * C154181 + C101389 * C154169 + C101453 * C154143) *
                 C73969 +
             (C102070 * C154181 + C102071 * C154169 +
              (C101449 + C101450) * C154143) *
                 C153722) *
                C154094 -
            (((C97195 * C4809 + C102778 + C102778 + C153969 * C4815 +
               C97193 * C4170 + C102779 + C102779 + C97191 * C4178) *
                  C154143 +
              (C102371 + C102370) * C154169 + (C98533 + C98532) * C154181) *
                 C153722 +
             ((C102797 + C102796) * C154143 + C102758 * C154169 +
              C102759 * C154181) *
                 C73969) *
                C153847) *
               C153819) *
              C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
              C97199 + C97199 + C153969 * C580) *
                 C153865 * C154187 +
             (C97252 + C97253) * C153865 * C154180 + C97266 * C154161 +
             C97267 * C154108) *
                C154094 -
            (C98230 * C154108 + C98231 * C154161 +
             (C97810 + C97811) * C153865 * C154180 +
             (C97195 * C557 + C97756 + C97756 + C153969 * C581 + C97193 * C556 +
              C97757 + C97757 + C97191 * C580) *
                 C153865 * C154187) *
                C153847) *
               C1251 +
           (((C97193 * C1081 + C98496 + C98496 + C97191 * C1093 +
              C97195 * C1489 + C98497 + C98497 + C153969 * C1499) *
                 C153865 * C154187 +
             (C98530 + C98531) * C153865 * C154180 +
             (C98532 + C98533) * C153865 * C154161 +
             (C98534 + C98535) * C153865 * C154108) *
                C153847 -
            (C98020 * C154108 + C98021 * C154161 +
             (C97536 + C97537) * C153865 * C154180 +
             (C97195 * C1081 + C97482 + C97482 + C153969 * C1093 +
              C97193 * C335 + C97483 + C97483 + C97191 * C359) *
                 C153865 * C154187) *
                C154094) *
               C153819) *
              C154085 +
          ((((C97811 + C97810) * C153865 * C154187 +
             (C97809 + C97808) * C153865 * C154180 +
             (C97807 + C97806) * C153865 * C154161 +
             (C98236 + C98237) * C153865 * C154108) *
                C153847 -
            (C97268 * C154108 + C97269 * C154161 +
             (C97255 + C97254) * C153865 * C154180 +
             (C97253 + C97252) * C153865 * C154187) *
                C154094) *
               C1251 +
           (((C97537 + C97536) * C153865 * C154187 +
             (C97535 + C97534) * C153865 * C154180 +
             (C97533 + C97532) * C153865 * C154161 +
             (C98026 + C98027) * C153865 * C154108) *
                C154094 -
            ((C97195 * C1485 + C98516 + C98516 + C153969 * C1495 +
              C97193 * C1085 + C98517 + C98517 + C97191 * C1097) *
                 C153865 * C154108 +
             (C98535 + C98534) * C153865 * C154161 +
             (C98533 + C98532) * C153865 * C154180 +
             (C98531 + C98530) * C153865 * C154187) *
                C153847) *
               C153819) *
              C153754)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C106473 * C136 + C106482 + C106482 + C154189 * C152 +
              C106475 * C556 + C106483 + C106483 + C154186 * C580 +
              C106477 * C557 + C106484 + C106484 + C154177 * C581 +
              C106479 * C2272 + C106485 + C106485 + C154123 * C2282) *
                 C153865 * C73969 +
             (C106550 + C106551 + C106552 + C106553) * C153865 * C153722) *
                C154094 -
            ((C107070 + C107071 + C107072 + C107073) * C153865 * C153722 +
             (C106479 * C7665 + C107026 + C107026 + C154123 * C7673 +
              C106477 * C2272 + C107027 + C107027 + C154177 * C2282 +
              C106475 * C557 + C107028 + C107028 + C154186 * C581 +
              C106473 * C556 + C107029 + C107029 + C154189 * C580) *
                 C153865 * C73969) *
                C153847) *
               C1251 +
           (((C106473 * C1081 + C107772 + C107772 + C154189 * C1093 +
              C106475 * C1489 + C107773 + C107773 + C154186 * C1499 +
              C106477 * C6161 + C107774 + C107774 + C154177 * C6173 +
              C106479 * C9167 + C107775 + C107775 + C154123 * C9173) *
                 C153865 * C73969 +
             (C107800 + C107801 + C107802 + C107803) * C153865 * C153722) *
                C153847 -
            ((C106812 + C106813 + C106814 + C106815) * C153865 * C153722 +
             (C106479 * C6161 + C106768 + C106768 + C154123 * C6173 +
              C106477 * C1489 + C106769 + C106769 + C154177 * C1499 +
              C106475 * C1081 + C106770 + C106770 + C154186 * C1093 +
              C106473 * C335 + C106771 + C106771 + C154189 * C359) *
                 C153865 * C73969) *
                C154094) *
               C153819) *
              C154085 +
          ((((C107073 + C107072 + C107071 + C107070) * C153865 * C73969 +
             (C107510 + C107511 + C107512 + C107513) * C153865 * C153722) *
                C153847 -
            ((C106554 + C106555 + C106556 + C106557) * C153865 * C153722 +
             (C106553 + C106552 + C106551 + C106550) * C153865 * C73969) *
                C154094) *
               C1251 +
           (((C106815 + C106814 + C106813 + C106812) * C153865 * C73969 +
             (C107292 + C107293 + C107294 + C107295) * C153865 * C153722) *
                C154094 -
            ((C106479 * C9165 + C107788 + C107788 + C154123 * C9171 +
              C106477 * C6157 + C107789 + C107789 + C154177 * C6169 +
              C106475 * C1487 + C107790 + C107790 + C154186 * C1497 +
              C106473 * C1083 + C107791 + C107791 + C154189 * C1095) *
                 C153865 * C153722 +
             (C107803 + C107802 + C107801 + C107800) * C153865 * C73969) *
                C153847) *
               C153819) *
              C153754)) /
            (p * q * std::sqrt(p + q));
    d2ee[264] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
            C97199 + C97199 + C153969 * C580) *
               C153865 * C154187 +
           (C97252 + C97253) * C153865 * C154180 + C97266 * C154161 +
           C97267 * C154108) *
              C153783 * C1338 -
          (C98020 * C154108 + C98021 * C154161 +
           (C97536 + C97537) * C153865 * C154180 +
           (C97195 * C1081 + C97482 + C97482 + C153969 * C1093 + C97193 * C335 +
            C97483 + C97483 + C97191 * C359) *
               C153865 * C154187) *
              C153783 * C1339 +
          ((C97193 * C336 + C97484 + C97484 + C97191 * C360 + C97195 * C1920 +
            C97485 + C97485 + C153969 * C1930) *
               C153865 * C154187 +
           (C97538 + C97539) * C153865 * C154180 +
           (C97540 + C97541) * C153865 * C154161 +
           (C97542 + C97543) * C153865 * C154108) *
              C153783 * C1340 -
          ((C97195 * C4171 + C98860 + C98860 + C153969 * C4179 +
            C97193 * C1344 + C98861 + C98861 + C97191 * C1354) *
               C153865 * C154108 +
           (C97195 * C4170 + C98862 + C98862 + C153969 * C4178 +
            C97193 * C1345 + C98863 + C98863 + C97191 * C1355) *
               C153865 * C154161 +
           (C97195 * C4169 + C98864 + C98864 + C153969 * C4177 +
            C97193 * C1346 + C98865 + C98865 + C97191 * C1356) *
               C153865 * C154180 +
           (C97195 * C4168 + C98866 + C98866 + C153969 * C4176 +
            C97193 * C1347 + C98867 + C98867 + C97191 * C1357) *
               C153865 * C154187) *
              C153783 * C1341) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
             C97199 + C97199 + C153969 * C580) *
                C153865 * C154187 +
            (C97252 + C97253) * C153865 * C154180 + C97266 * C154161 +
            C97267 * C154108) *
               C153783 * C1251 -
           (C98020 * C154108 + C98021 * C154161 +
            (C97536 + C97537) * C153865 * C154180 +
            (C97195 * C1081 + C97482 + C97482 + C153969 * C1093 +
             C97193 * C335 + C97483 + C97483 + C97191 * C359) *
                C153865 * C154187) *
               C153783 * C153819) *
              C1253 +
          (((C97537 + C97536) * C153865 * C154187 +
            (C97535 + C97534) * C153865 * C154180 +
            (C97533 + C97532) * C153865 * C154161 +
            (C98026 + C98027) * C153865 * C154108) *
               C153783 * C153819 -
           (C97268 * C154108 + C97269 * C154161 +
            (C97255 + C97254) * C153865 * C154180 +
            (C97253 + C97252) * C153865 * C154187) *
               C153783 * C1251) *
              C1254 +
          ((C97266 * C154187 + C97267 * C154180 +
            (C97259 + C97258) * C153865 * C154161 +
            (C97260 + C97261) * C153865 * C154108) *
               C153783 * C1251 -
           ((C97195 * C1086 + C98018 + C98018 + C153969 * C1098 +
             C97193 * C341 + C98019 + C98019 + C97191 * C365) *
                C153865 * C154108 +
            (C98027 + C98026) * C153865 * C154161 + C98020 * C154180 +
            C98021 * C154187) *
               C153783 * C153819) *
              C1255)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
              C97199 + C97199 + C153969 * C580) *
                 C154181 +
             (C101439 + C101440) * C154169 + C101451 * C154143) *
                C73969 +
            ((C97252 + C97253) * C154181 + C101388 * C154169 +
             C101389 * C154143) *
                C153722) *
               C153783 * C1251 -
           ((C101452 * C154143 + C101394 * C154169 + C101395 * C154181) *
                C153722 +
            ((C101445 + C101446) * C154143 + (C101442 + C101441) * C154169 +
             (C101440 + C101439) * C154181) *
                C73969) *
               C153783 * C153819) *
              C1253 +
          (((C101388 * C154181 + C101389 * C154169 + C101453 * C154143) *
                C73969 +
            (C102070 * C154181 + C102071 * C154169 +
             (C101449 + C101450) * C154143) *
                C153722) *
               C153783 * C153819 -
           ((C101412 * C154143 + C98013 * C154169 +
             (C97255 + C97254) * C154181) *
                C153722 +
            (C101394 * C154143 + C101395 * C154169 +
             (C97253 + C97252) * C154181) *
                C73969) *
               C153783 * C1251) *
              C1254 +
          (((C97262 * C154181 + C102070 * C154169 + C102071 * C154143) *
                C73969 +
            (C97263 * C154181 + (C97533 + C97532) * C154169 +
             (C97542 + C97543) * C154143) *
                C153722) *
               C153783 * C1251 -
           (((C97195 * C4171 + C98860 + C98860 + C153969 * C4179 +
              C97193 * C1344 + C98861 + C98861 + C97191 * C1354) *
                 C154143 +
             (C97543 + C97542) * C154169 + C98012 * C154181) *
                C153722 +
            ((C101450 + C101449) * C154143 + C101412 * C154169 +
             C98013 * C154181) *
                C73969) *
               C153783 * C153819) *
              C1255)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
             C97199 + C97199 + C153969 * C580) *
                C154181 +
            (C101439 + C101440) * C154169 + C101451 * C154143) *
               C73969 +
           ((C97252 + C97253) * C154181 + C101388 * C154169 +
            C101389 * C154143) *
               C153722) *
              C153783 * C1338 -
          ((C101452 * C154143 + C101394 * C154169 + C101395 * C154181) *
               C153722 +
           (C103282 * C154143 + (C101442 + C101441) * C154169 +
            (C101440 + C101439) * C154181) *
               C73969) *
              C153783 * C1339 +
          ((C101451 * C154181 + (C101446 + C101445) * C154169 +
            (C103295 + C103296) * C154143) *
               C73969 +
           (C101389 * C154181 + C101453 * C154169 +
            (C101447 + C101448) * C154143) *
               C153722) *
              C153783 * C1340 -
          (((C97195 * C28773 + C103287 + C103287 + C153969 * C28777 +
             C97193 * C4575 + C103288 + C103288 + C97191 * C4581) *
                C154143 +
            (C101448 + C101447) * C154169 + C101452 * C154181) *
               C153722 +
           ((C97195 * C28772 + C103289 + C103289 + C153969 * C28776 +
             C97193 * C4576 + C103290 + C103290 + C97191 * C4582) *
                C154143 +
            (C103296 + C103295) * C154169 + C103282 * C154181) *
               C73969) *
              C153783 * C1341) *
         C153748) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C106473 * C136 + C106482 + C106482 + C154189 * C152 +
             C106475 * C556 + C106483 + C106483 + C154186 * C580 +
             C106477 * C557 + C106484 + C106484 + C154177 * C581 +
             C106479 * C2272 + C106485 + C106485 + C154123 * C2282) *
                C153865 * C73969 +
            (C106550 + C106551 + C106552 + C106553) * C153865 * C153722) *
               C153783 * C1251 -
           ((C106812 + C106813 + C106814 + C106815) * C153865 * C153722 +
            (C106479 * C6161 + C106768 + C106768 + C154123 * C6173 +
             C106477 * C1489 + C106769 + C106769 + C154177 * C1499 +
             C106475 * C1081 + C106770 + C106770 + C154186 * C1093 +
             C106473 * C335 + C106771 + C106771 + C154189 * C359) *
                C153865 * C73969) *
               C153783 * C153819) *
              C1253 +
          (((C106815 + C106814 + C106813 + C106812) * C153865 * C73969 +
            (C107292 + C107293 + C107294 + C107295) * C153865 * C153722) *
               C153783 * C153819 -
           ((C106554 + C106555 + C106556 + C106557) * C153865 * C153722 +
            (C106553 + C106552 + C106551 + C106550) * C153865 * C73969) *
               C153783 * C1251) *
              C1254 +
          (((C106557 + C106556 + C106555 + C106554) * C153865 * C73969 +
            (C106558 + C106559 + C106560 + C106561) * C153865 * C153722) *
               C153783 * C1251 -
           ((C106479 * C8529 + C107280 + C107280 + C154123 * C8531 +
             C106477 * C1486 + C107281 + C107281 + C154177 * C1496 +
             C106475 * C1084 + C107282 + C107282 + C154186 * C1096 +
             C106473 * C332 + C107283 + C107283 + C154189 * C356) *
                C153865 * C153722 +
            (C107295 + C107294 + C107293 + C107292) * C153865 * C73969) *
               C153783 * C153819) *
              C1255)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C106473 * C136 + C106482 + C106482 + C154189 * C152 +
            C106475 * C556 + C106483 + C106483 + C154186 * C580 +
            C106477 * C557 + C106484 + C106484 + C154177 * C581 +
            C106479 * C2272 + C106485 + C106485 + C154123 * C2282) *
               C153865 * C73969 +
           (C106550 + C106551 + C106552 + C106553) * C153865 * C153722) *
              C153783 * C1338 -
          ((C106812 + C106813 + C106814 + C106815) * C153865 * C153722 +
           (C106479 * C6161 + C106768 + C106768 + C154123 * C6173 +
            C106477 * C1489 + C106769 + C106769 + C154177 * C1499 +
            C106475 * C1081 + C106770 + C106770 + C154186 * C1093 +
            C106473 * C335 + C106771 + C106771 + C154189 * C359) *
               C153865 * C73969) *
              C153783 * C1339 +
          ((C106473 * C336 + C106772 + C106772 + C154189 * C360 +
            C106475 * C1920 + C106773 + C106773 + C154186 * C1930 +
            C106477 * C3369 + C106774 + C106774 + C154177 * C3377 +
            C106479 * C6160 + C106775 + C106775 + C154123 * C6172) *
               C153865 * C73969 +
           (C106816 + C106817 + C106818 + C106819) * C153865 * C153722) *
              C153783 * C1340 -
          ((C106479 * C31684 + C108128 + C108128 + C154123 * C31686 +
            C106477 * C4810 + C108129 + C108129 + C154177 * C4816 +
            C106475 * C4169 + C108130 + C108130 + C154186 * C4177 +
            C106473 * C1346 + C108131 + C108131 + C154189 * C1356) *
               C153865 * C153722 +
           (C106479 * C29881 + C108132 + C108132 + C154123 * C29885 +
            C106477 * C4811 + C108133 + C108133 + C154177 * C4817 +
            C106475 * C4168 + C108134 + C108134 + C154186 * C4176 +
            C106473 * C1347 + C108135 + C108135 + C154189 * C1357) *
               C153865 * C73969) *
              C153783 * C1341) *
         C153748) /
            (p * q * std::sqrt(p + q));
    d2ee[265] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
               C97199 + C97199 + C153969 * C580) *
                  C154181 +
              (C101439 + C101440) * C154169 + C101451 * C154143) *
                 C73969 +
             ((C97252 + C97253) * C154181 + C101388 * C154169 +
              C101389 * C154143) *
                 C153722) *
                C2058 -
            ((C102758 * C154143 + C102759 * C154169 +
              (C97810 + C97811) * C154181) *
                 C153722 +
             (C104577 * C154143 + (C102794 + C102795) * C154169 +
              (C97195 * C557 + C97756 + C97756 + C153969 * C581 +
               C97193 * C556 + C97757 + C97757 + C97191 * C580) *
                  C154181) *
                 C73969) *
                C153847) *
               C154093 +
           ((((C102795 + C102794) * C154181 + (C102793 + C102792) * C154169 +
              (C104590 + C104591) * C154143) *
                 C73969 +
             (C102770 * C154181 + C102771 * C154169 +
              (C102796 + C102797) * C154143) *
                 C153722) *
                C153847 -
            ((C101452 * C154143 + C101394 * C154169 + C101395 * C154181) *
                 C153722 +
             (C103282 * C154143 + (C101442 + C101441) * C154169 +
              (C101440 + C101439) * C154181) *
                 C73969) *
                C2058) *
               C153819) *
              C154085 +
          (((((C97811 + C97810) * C154181 + C102770 * C154169 +
              C102771 * C154143) *
                 C73969 +
             ((C97809 + C97808) * C154181 + (C98532 + C98533) * C154169 +
              (C102370 + C102371) * C154143) *
                 C153722) *
                C153847 -
            ((C101412 * C154143 + C98013 * C154169 +
              (C97255 + C97254) * C154181) *
                 C153722 +
             (C101394 * C154143 + C101395 * C154169 +
              (C97253 + C97252) * C154181) *
                 C73969) *
                C2058) *
               C154093 +
           (((C101388 * C154181 + C101389 * C154169 + C101453 * C154143) *
                 C73969 +
             (C102070 * C154181 + C102071 * C154169 +
              (C101449 + C101450) * C154143) *
                 C153722) *
                C2058 -
            (((C97195 * C4809 + C102778 + C102778 + C153969 * C4815 +
               C97193 * C4170 + C102779 + C102779 + C97191 * C4178) *
                  C154143 +
              (C102371 + C102370) * C154169 + (C98533 + C98532) * C154181) *
                 C153722 +
             ((C102797 + C102796) * C154143 + C102758 * C154169 +
              C102759 * C154181) *
                 C73969) *
                C153847) *
               C153819) *
              C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
              C97199 + C97199 + C153969 * C580) *
                 C153865 * C154187 +
             (C97252 + C97253) * C153865 * C154180 + C97266 * C154161 +
             C97267 * C154108) *
                C2058 -
            (C98230 * C154108 + C98231 * C154161 +
             (C97810 + C97811) * C153865 * C154180 +
             (C97195 * C557 + C97756 + C97756 + C153969 * C581 + C97193 * C556 +
              C97757 + C97757 + C97191 * C580) *
                 C153865 * C154187) *
                C153847) *
               C154093 +
           (((C97193 * C1081 + C98496 + C98496 + C97191 * C1093 +
              C97195 * C1489 + C98497 + C98497 + C153969 * C1499) *
                 C153865 * C154187 +
             (C98530 + C98531) * C153865 * C154180 +
             (C98532 + C98533) * C153865 * C154161 +
             (C98534 + C98535) * C153865 * C154108) *
                C153847 -
            (C98020 * C154108 + C98021 * C154161 +
             (C97536 + C97537) * C153865 * C154180 +
             (C97195 * C1081 + C97482 + C97482 + C153969 * C1093 +
              C97193 * C335 + C97483 + C97483 + C97191 * C359) *
                 C153865 * C154187) *
                C2058) *
               C153819) *
              C154085 +
          ((((C97811 + C97810) * C153865 * C154187 +
             (C97809 + C97808) * C153865 * C154180 +
             (C97807 + C97806) * C153865 * C154161 +
             (C98236 + C98237) * C153865 * C154108) *
                C153847 -
            (C97268 * C154108 + C97269 * C154161 +
             (C97255 + C97254) * C153865 * C154180 +
             (C97253 + C97252) * C153865 * C154187) *
                C2058) *
               C154093 +
           (((C97537 + C97536) * C153865 * C154187 +
             (C97535 + C97534) * C153865 * C154180 +
             (C97533 + C97532) * C153865 * C154161 +
             (C98026 + C98027) * C153865 * C154108) *
                C2058 -
            ((C97195 * C1485 + C98516 + C98516 + C153969 * C1495 +
              C97193 * C1085 + C98517 + C98517 + C97191 * C1097) *
                 C153865 * C154108 +
             (C98535 + C98534) * C153865 * C154161 +
             (C98533 + C98532) * C153865 * C154180 +
             (C98531 + C98530) * C153865 * C154187) *
                C153847) *
               C153819) *
              C153754)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C106473 * C136 + C106482 + C106482 + C154189 * C152 +
              C106475 * C556 + C106483 + C106483 + C154186 * C580 +
              C106477 * C557 + C106484 + C106484 + C154177 * C581 +
              C106479 * C2272 + C106485 + C106485 + C154123 * C2282) *
                 C153865 * C73969 +
             (C106550 + C106551 + C106552 + C106553) * C153865 * C153722) *
                C2058 -
            ((C107070 + C107071 + C107072 + C107073) * C153865 * C153722 +
             (C106479 * C7665 + C107026 + C107026 + C154123 * C7673 +
              C106477 * C2272 + C107027 + C107027 + C154177 * C2282 +
              C106475 * C557 + C107028 + C107028 + C154186 * C581 +
              C106473 * C556 + C107029 + C107029 + C154189 * C580) *
                 C153865 * C73969) *
                C153847) *
               C154093 +
           (((C106473 * C1081 + C107772 + C107772 + C154189 * C1093 +
              C106475 * C1489 + C107773 + C107773 + C154186 * C1499 +
              C106477 * C6161 + C107774 + C107774 + C154177 * C6173 +
              C106479 * C9167 + C107775 + C107775 + C154123 * C9173) *
                 C153865 * C73969 +
             (C107800 + C107801 + C107802 + C107803) * C153865 * C153722) *
                C153847 -
            ((C106812 + C106813 + C106814 + C106815) * C153865 * C153722 +
             (C106479 * C6161 + C106768 + C106768 + C154123 * C6173 +
              C106477 * C1489 + C106769 + C106769 + C154177 * C1499 +
              C106475 * C1081 + C106770 + C106770 + C154186 * C1093 +
              C106473 * C335 + C106771 + C106771 + C154189 * C359) *
                 C153865 * C73969) *
                C2058) *
               C153819) *
              C154085 +
          ((((C107073 + C107072 + C107071 + C107070) * C153865 * C73969 +
             (C107510 + C107511 + C107512 + C107513) * C153865 * C153722) *
                C153847 -
            ((C106554 + C106555 + C106556 + C106557) * C153865 * C153722 +
             (C106553 + C106552 + C106551 + C106550) * C153865 * C73969) *
                C2058) *
               C154093 +
           (((C106815 + C106814 + C106813 + C106812) * C153865 * C73969 +
             (C107292 + C107293 + C107294 + C107295) * C153865 * C153722) *
                C2058 -
            ((C106479 * C9165 + C107788 + C107788 + C154123 * C9171 +
              C106477 * C6157 + C107789 + C107789 + C154177 * C6169 +
              C106475 * C1487 + C107790 + C107790 + C154186 * C1497 +
              C106473 * C1083 + C107791 + C107791 + C154189 * C1095) *
                 C153865 * C153722 +
             (C107803 + C107802 + C107801 + C107800) * C153865 * C73969) *
                C153847) *
               C153819) *
              C153754)) /
            (p * q * std::sqrt(p + q));
    d2ee[266] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
              C97199 + C97199 + C153969 * C580) *
                 C154181 +
             (C101439 + C101440) * C154169 + C101451 * C154143) *
                C73969 +
            ((C97252 + C97253) * C154181 + C101388 * C154169 +
             C101389 * C154143) *
                C153722) *
               C154166 -
           ((C102758 * C154143 + C102759 * C154169 +
             (C97810 + C97811) * C154181) *
                C153722 +
            (C104577 * C154143 + (C102794 + C102795) * C154169 +
             (C97195 * C557 + C97756 + C97756 + C153969 * C581 + C97193 * C556 +
              C97757 + C97757 + C97191 * C580) *
                 C154181) *
                C73969) *
               C154167 +
           (((C97193 * C557 + C97758 + C97758 + C97191 * C581 + C97195 * C2272 +
              C97759 + C97759 + C153969 * C2282) *
                 C154181 +
             (C103607 + C103608) * C154169 + (C103609 + C103610) * C154143) *
                C73969 +
            ((C97812 + C97813) * C154181 + (C101776 + C101777) * C154169 +
             (C101778 + C101779) * C154143) *
                C153722) *
               C2574) *
              C154093 +
          ((((C102795 + C102794) * C154181 + (C102793 + C102792) * C154169 +
             (C104590 + C104591) * C154143) *
                C73969 +
            (C102770 * C154181 + C102771 * C154169 +
             (C102796 + C102797) * C154143) *
                C153722) *
               C154167 -
           ((C101452 * C154143 + C101394 * C154169 + C101395 * C154181) *
                C153722 +
            (C103282 * C154143 + (C101442 + C101441) * C154169 +
             (C101440 + C101439) * C154181) *
                C73969) *
               C154166 -
           (((C97195 * C31684 + C103595 + C103595 + C153969 * C31686 +
              C97193 * C4810 + C103596 + C103596 + C97191 * C4816) *
                 C154143 +
             (C101779 + C101778) * C154169 + (C101777 + C101776) * C154181) *
                C153722 +
            ((C97195 * C29881 + C103597 + C103597 + C153969 * C29885 +
              C97193 * C4811 + C103598 + C103598 + C97191 * C4817) *
                 C154143 +
             (C103610 + C103609) * C154169 + (C103608 + C103607) * C154181) *
                C73969) *
               C2574) *
              C153819) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
             C97199 + C97199 + C153969 * C580) *
                C153865 * C154187 +
            (C97252 + C97253) * C153865 * C154180 + C97266 * C154161 +
            C97267 * C154108) *
               C154166 -
           (C98230 * C154108 + C98231 * C154161 +
            (C97810 + C97811) * C153865 * C154180 +
            (C97195 * C557 + C97756 + C97756 + C153969 * C581 + C97193 * C556 +
             C97757 + C97757 + C97191 * C580) *
                C153865 * C154187) *
               C154167 +
           ((C97193 * C557 + C97758 + C97758 + C97191 * C581 + C97195 * C2272 +
             C97759 + C97759 + C153969 * C2282) *
                C153865 * C154187 +
            (C97812 + C97813) * C153865 * C154180 +
            (C97814 + C97815) * C153865 * C154161 +
            (C97816 + C97817) * C153865 * C154108) *
               C2574) *
              C154093 +
          (((C97193 * C1081 + C98496 + C98496 + C97191 * C1093 +
             C97195 * C1489 + C98497 + C98497 + C153969 * C1499) *
                C153865 * C154187 +
            (C98530 + C98531) * C153865 * C154180 +
            (C98532 + C98533) * C153865 * C154161 +
            (C98534 + C98535) * C153865 * C154108) *
               C154167 -
           (C98020 * C154108 + C98021 * C154161 +
            (C97536 + C97537) * C153865 * C154180 +
            (C97195 * C1081 + C97482 + C97482 + C153969 * C1093 +
             C97193 * C335 + C97483 + C97483 + C97191 * C359) *
                C153865 * C154187) *
               C154166 -
           ((C97195 * C8529 + C99062 + C99062 + C153969 * C8531 +
             C97193 * C1486 + C99063 + C99063 + C97191 * C1496) *
                C153865 * C154108 +
            (C97195 * C6157 + C99064 + C99064 + C153969 * C6169 +
             C97193 * C1487 + C99065 + C99065 + C97191 * C1497) *
                C153865 * C154161 +
            (C97195 * C6159 + C99066 + C99066 + C153969 * C6171 +
             C97193 * C1488 + C99067 + C99067 + C97191 * C1498) *
                C153865 * C154180 +
            (C97195 * C6161 + C99068 + C99068 + C153969 * C6173 +
             C97193 * C1489 + C99069 + C99069 + C97191 * C1499) *
                C153865 * C154187) *
               C2574) *
              C153819) *
         C153748) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C106473 * C136 + C106482 + C106482 + C154189 * C152 +
             C106475 * C556 + C106483 + C106483 + C154186 * C580 +
             C106477 * C557 + C106484 + C106484 + C154177 * C581 +
             C106479 * C2272 + C106485 + C106485 + C154123 * C2282) *
                C153865 * C73969 +
            (C106550 + C106551 + C106552 + C106553) * C153865 * C153722) *
               C154166 -
           ((C107070 + C107071 + C107072 + C107073) * C153865 * C153722 +
            (C106479 * C7665 + C107026 + C107026 + C154123 * C7673 +
             C106477 * C2272 + C107027 + C107027 + C154177 * C2282 +
             C106475 * C557 + C107028 + C107028 + C154186 * C581 +
             C106473 * C556 + C107029 + C107029 + C154189 * C580) *
                C153865 * C73969) *
               C154167 +
           ((C106473 * C557 + C107030 + C107030 + C154189 * C581 +
             C106475 * C2272 + C107031 + C107031 + C154186 * C2282 +
             C106477 * C7665 + C107032 + C107032 + C154177 * C7673 +
             C106479 * C10502 + C107033 + C107033 + C154123 * C10508) *
                C153865 * C73969 +
            (C107074 + C107075 + C107076 + C107077) * C153865 * C153722) *
               C2574) *
              C154093 +
          (((C106473 * C1081 + C107772 + C107772 + C154189 * C1093 +
             C106475 * C1489 + C107773 + C107773 + C154186 * C1499 +
             C106477 * C6161 + C107774 + C107774 + C154177 * C6173 +
             C106479 * C9167 + C107775 + C107775 + C154123 * C9173) *
                C153865 * C73969 +
            (C107800 + C107801 + C107802 + C107803) * C153865 * C153722) *
               C154167 -
           ((C106812 + C106813 + C106814 + C106815) * C153865 * C153722 +
            (C106479 * C6161 + C106768 + C106768 + C154123 * C6173 +
             C106477 * C1489 + C106769 + C106769 + C154177 * C1499 +
             C106475 * C1081 + C106770 + C106770 + C154186 * C1093 +
             C106473 * C335 + C106771 + C106771 + C154189 * C359) *
                C153865 * C73969) *
               C154166 -
           ((C106479 * C56080 + C108330 + C108330 + C154123 * C56082 +
             C106477 * C9166 + C108331 + C108331 + C154177 * C9172 +
             C106475 * C6159 + C108332 + C108332 + C154186 * C6171 +
             C106473 * C1488 + C108333 + C108333 + C154189 * C1498) *
                C153865 * C153722 +
            (C106479 * C33705 + C108334 + C108334 + C154123 * C33709 +
             C106477 * C9167 + C108335 + C108335 + C154177 * C9173 +
             C106475 * C6161 + C108336 + C108336 + C154186 * C6173 +
             C106473 * C1489 + C108337 + C108337 + C154189 * C1499) *
                C153865 * C73969) *
               C2574) *
              C153819) *
         C153748) /
            (p * q * std::sqrt(p + q));
    d2ee[267] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C97193 * C136 + C97198 + C97198 + C97191 * C152 +
                 C97195 * C556 + C97199 + C97199 + C153969 * C580) *
                    C153865 * C154187 +
                (C97252 + C97253) * C153865 * C154180 + C97266 * C154161 +
                C97267 * C154108) *
                   C2058 -
               (C98230 * C154108 + C98231 * C154161 +
                (C97810 + C97811) * C153865 * C154180 +
                (C97195 * C557 + C97756 + C97756 + C153969 * C581 +
                 C97193 * C556 + C97757 + C97757 + C97191 * C580) *
                    C153865 * C154187) *
                   C153847) *
                  C153767 * C1253 +
              (((C97811 + C97810) * C153865 * C154187 +
                (C97809 + C97808) * C153865 * C154180 +
                (C97807 + C97806) * C153865 * C154161 +
                (C98236 + C98237) * C153865 * C154108) *
                   C153847 -
               (C97268 * C154108 + C97269 * C154161 +
                (C97255 + C97254) * C153865 * C154180 +
                (C97253 + C97252) * C153865 * C154187) *
                   C2058) *
                  C153767 * C1254 +
              ((C97266 * C154187 + C97267 * C154180 +
                (C97259 + C97258) * C153865 * C154161 +
                (C97260 + C97261) * C153865 * C154108) *
                   C2058 -
               ((C97195 * C563 + C98228 + C98228 + C153969 * C587 +
                 C97193 * C562 + C98229 + C98229 + C97191 * C586) *
                    C153865 * C154108 +
                (C98237 + C98236) * C153865 * C154161 + C98230 * C154180 +
                C98231 * C154187) *
                   C153847) *
                  C153767 * C1255) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C97193 * C136 + C97198 + C97198 + C97191 * C152 +
                 C97195 * C556 + C97199 + C97199 + C153969 * C580) *
                    C153865 * C154187 +
                (C97252 + C97253) * C153865 * C154180 + C97266 * C154161 +
                C97267 * C154108) *
                   C2058 -
               (C98230 * C154108 + C98231 * C154161 +
                (C97810 + C97811) * C153865 * C154180 +
                (C97195 * C557 + C97756 + C97756 + C153969 * C581 +
                 C97193 * C556 + C97757 + C97757 + C97191 * C580) *
                    C153865 * C154187) *
                   C153847) *
                  C326 +
              (((C97193 * C1081 + C98496 + C98496 + C97191 * C1093 +
                 C97195 * C1489 + C98497 + C98497 + C153969 * C1499) *
                    C153865 * C154187 +
                (C98530 + C98531) * C153865 * C154180 +
                (C98532 + C98533) * C153865 * C154161 +
                (C98534 + C98535) * C153865 * C154108) *
                   C153847 -
               (C98020 * C154108 + C98021 * C154161 +
                (C97536 + C97537) * C153865 * C154180 +
                (C97195 * C1081 + C97482 + C97482 + C153969 * C1093 +
                 C97193 * C335 + C97483 + C97483 + C97191 * C359) *
                    C153865 * C154187) *
                   C2058) *
                  C327 +
              (((C97193 * C336 + C97484 + C97484 + C97191 * C360 +
                 C97195 * C1920 + C97485 + C97485 + C153969 * C1930) *
                    C153865 * C154187 +
                (C97538 + C97539) * C153865 * C154180 +
                (C97540 + C97541) * C153865 * C154161 +
                (C97542 + C97543) * C153865 * C154108) *
                   C2058 -
               ((C97195 * C3372 + C99716 + C99716 + C153969 * C3380 +
                 C97193 * C1917 + C99717 + C99717 + C97191 * C1927) *
                    C153865 * C154108 +
                (C97195 * C3371 + C99718 + C99718 + C153969 * C3379 +
                 C97193 * C1918 + C99719 + C99719 + C97191 * C1928) *
                    C153865 * C154161 +
                (C97195 * C3370 + C99720 + C99720 + C153969 * C3378 +
                 C97193 * C1919 + C99721 + C99721 + C97191 * C1929) *
                    C153865 * C154180 +
                (C97195 * C3369 + C99722 + C99722 + C153969 * C3377 +
                 C97193 * C1920 + C99723 + C99723 + C97191 * C1930) *
                    C153865 * C154187) *
                   C153847) *
                  C328) *
             C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
            C97199 + C97199 + C153969 * C580) *
               C153865 * C154187 +
           (C97252 + C97253) * C153865 * C154180 + C97266 * C154161 +
           C97267 * C154108) *
              C2264 -
          (C98230 * C154108 + C98231 * C154161 +
           (C97810 + C97811) * C153865 * C154180 +
           (C97195 * C557 + C97756 + C97756 + C153969 * C581 + C97193 * C556 +
            C97757 + C97757 + C97191 * C580) *
               C153865 * C154187) *
              C2265 +
          ((C97193 * C557 + C97758 + C97758 + C97191 * C581 + C97195 * C2272 +
            C97759 + C97759 + C153969 * C2282) *
               C153865 * C154187 +
           (C97812 + C97813) * C153865 * C154180 +
           (C97814 + C97815) * C153865 * C154161 +
           (C97816 + C97817) * C153865 * C154108) *
              C2266 -
          ((C97195 * C7668 + C100242 + C100242 + C153969 * C7676 +
            C97193 * C2269 + C100243 + C100243 + C97191 * C2279) *
               C153865 * C154108 +
           (C97195 * C7667 + C100244 + C100244 + C153969 * C7675 +
            C97193 * C2270 + C100245 + C100245 + C97191 * C2280) *
               C153865 * C154161 +
           (C97195 * C7666 + C100246 + C100246 + C153969 * C7674 +
            C97193 * C2271 + C100247 + C100247 + C97191 * C2281) *
               C153865 * C154180 +
           (C97195 * C7665 + C100248 + C100248 + C153969 * C7673 +
            C97193 * C2272 + C100249 + C100249 + C97191 * C2282) *
               C153865 * C154187) *
              C2267) *
         C153767 * C153748) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
              C97199 + C97199 + C153969 * C580) *
                 C154181 +
             (C101439 + C101440) * C154169 + C101451 * C154143) *
                C73969 +
            ((C97252 + C97253) * C154181 + C101388 * C154169 +
             C101389 * C154143) *
                C153722) *
               C2058 -
           ((C102758 * C154143 + C102759 * C154169 +
             (C97810 + C97811) * C154181) *
                C153722 +
            (C104577 * C154143 + (C102794 + C102795) * C154169 +
             (C97195 * C557 + C97756 + C97756 + C153969 * C581 + C97193 * C556 +
              C97757 + C97757 + C97191 * C580) *
                 C154181) *
                C73969) *
               C153847) *
              C153767 * C1253 +
          ((((C97811 + C97810) * C154181 + C102770 * C154169 +
             C102771 * C154143) *
                C73969 +
            ((C97809 + C97808) * C154181 + (C98532 + C98533) * C154169 +
             (C102370 + C102371) * C154143) *
                C153722) *
               C153847 -
           ((C101412 * C154143 + C98013 * C154169 +
             (C97255 + C97254) * C154181) *
                C153722 +
            (C101394 * C154143 + C101395 * C154169 +
             (C97253 + C97252) * C154181) *
                C73969) *
               C2058) *
              C153767 * C1254 +
          (((C97262 * C154181 + C102070 * C154169 + C102071 * C154143) *
                C73969 +
            (C97263 * C154181 + (C97533 + C97532) * C154169 +
             (C97542 + C97543) * C154143) *
                C153722) *
               C2058 -
           (((C97195 * C3372 + C99716 + C99716 + C153969 * C3380 +
              C97193 * C1917 + C99717 + C99717 + C97191 * C1927) *
                 C154143 +
             (C98535 + C98534) * C154169 + C98222 * C154181) *
                C153722 +
            ((C102371 + C102370) * C154143 + (C98533 + C98532) * C154169 +
             C98223 * C154181) *
                C73969) *
               C153847) *
              C153767 * C1255)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
              C97199 + C97199 + C153969 * C580) *
                 C154181 +
             (C101439 + C101440) * C154169 + C101451 * C154143) *
                C73969 +
            ((C97252 + C97253) * C154181 + C101388 * C154169 +
             C101389 * C154143) *
                C153722) *
               C2058 -
           ((C102758 * C154143 + C102759 * C154169 +
             (C97810 + C97811) * C154181) *
                C153722 +
            (C104577 * C154143 + (C102794 + C102795) * C154169 +
             (C97195 * C557 + C97756 + C97756 + C153969 * C581 + C97193 * C556 +
              C97757 + C97757 + C97191 * C580) *
                 C154181) *
                C73969) *
               C153847) *
              C326 +
          ((((C102795 + C102794) * C154181 + (C102793 + C102792) * C154169 +
             (C104590 + C104591) * C154143) *
                C73969 +
            (C102770 * C154181 + C102771 * C154169 +
             (C102796 + C102797) * C154143) *
                C153722) *
               C153847 -
           ((C101452 * C154143 + C101394 * C154169 + C101395 * C154181) *
                C153722 +
            (C103282 * C154143 + (C101442 + C101441) * C154169 +
             (C101440 + C101439) * C154181) *
                C73969) *
               C2058) *
              C327 +
          (((C101451 * C154181 + (C101446 + C101445) * C154169 +
             (C103295 + C103296) * C154143) *
                C73969 +
            (C101389 * C154181 + C101453 * C154169 +
             (C101447 + C101448) * C154143) *
                C153722) *
               C2058 -
           (((C97195 * C28359 + C104582 + C104582 + C153969 * C28363 +
              C97193 * C5558 + C104583 + C104583 + C97191 * C5564) *
                 C154143 +
             (C102797 + C102796) * C154169 + C102758 * C154181) *
                C153722 +
            ((C97195 * C28358 + C104584 + C104584 + C153969 * C28362 +
              C97193 * C5559 + C104585 + C104585 + C97191 * C5565) *
                 C154143 +
             (C104591 + C104590) * C154169 + C104577 * C154181) *
                C73969) *
               C153847) *
              C328) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
             C97199 + C97199 + C153969 * C580) *
                C154181 +
            (C101439 + C101440) * C154169 + C101451 * C154143) *
               C73969 +
           ((C97252 + C97253) * C154181 + C101388 * C154169 +
            C101389 * C154143) *
               C153722) *
              C2264 -
          ((C102758 * C154143 + C102759 * C154169 +
            (C97810 + C97811) * C154181) *
               C153722 +
           (C104577 * C154143 + (C102794 + C102795) * C154169 +
            (C97195 * C557 + C97756 + C97756 + C153969 * C581 + C97193 * C556 +
             C97757 + C97757 + C97191 * C580) *
                C154181) *
               C73969) *
              C2265 +
          (((C97193 * C557 + C97758 + C97758 + C97191 * C581 + C97195 * C2272 +
             C97759 + C97759 + C153969 * C2282) *
                C154181 +
            (C103607 + C103608) * C154169 + (C103609 + C103610) * C154143) *
               C73969 +
           ((C97812 + C97813) * C154181 + (C101776 + C101777) * C154169 +
            (C101778 + C101779) * C154143) *
               C153722) *
              C2266 -
          (((C97195 * C30947 + C105366 + C105366 + C153969 * C30951 +
             C97193 * C6158 + C105367 + C105367 + C97191 * C6170) *
                C154143 +
            (C97195 * C9166 + C105368 + C105368 + C153969 * C9172 +
             C97193 * C6159 + C105369 + C105369 + C97191 * C6171) *
                C154169 +
            (C97195 * C7666 + C100246 + C100246 + C153969 * C7674 +
             C97193 * C2271 + C100247 + C100247 + C97191 * C2281) *
                C154181) *
               C153722 +
           ((C97195 * C30946 + C105370 + C105370 + C153969 * C30950 +
             C97193 * C6160 + C105371 + C105371 + C97191 * C6172) *
                C154143 +
            (C97195 * C9167 + C105372 + C105372 + C153969 * C9173 +
             C97193 * C6161 + C105373 + C105373 + C97191 * C6173) *
                C154169 +
            (C97195 * C7665 + C100248 + C100248 + C153969 * C7673 +
             C97193 * C2272 + C100249 + C100249 + C97191 * C2282) *
                C154181) *
               C73969) *
              C2267) *
         C153767 * C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C106473 * C136 + C106482 + C106482 + C154189 * C152 +
             C106475 * C556 + C106483 + C106483 + C154186 * C580 +
             C106477 * C557 + C106484 + C106484 + C154177 * C581 +
             C106479 * C2272 + C106485 + C106485 + C154123 * C2282) *
                C153865 * C73969 +
            (C106550 + C106551 + C106552 + C106553) * C153865 * C153722) *
               C2058 -
           ((C107070 + C107071 + C107072 + C107073) * C153865 * C153722 +
            (C106479 * C7665 + C107026 + C107026 + C154123 * C7673 +
             C106477 * C2272 + C107027 + C107027 + C154177 * C2282 +
             C106475 * C557 + C107028 + C107028 + C154186 * C581 +
             C106473 * C556 + C107029 + C107029 + C154189 * C580) *
                C153865 * C73969) *
               C153847) *
              C153767 * C1253 +
          (((C107073 + C107072 + C107071 + C107070) * C153865 * C73969 +
            (C107510 + C107511 + C107512 + C107513) * C153865 * C153722) *
               C153847 -
           ((C106554 + C106555 + C106556 + C106557) * C153865 * C153722 +
            (C106553 + C106552 + C106551 + C106550) * C153865 * C73969) *
               C2058) *
              C153767 * C1254 +
          (((C106557 + C106556 + C106555 + C106554) * C153865 * C73969 +
            (C106558 + C106559 + C106560 + C106561) * C153865 * C153722) *
               C2058 -
           ((C106479 * C7668 + C107498 + C107498 + C154123 * C7676 +
             C106477 * C2269 + C107499 + C107499 + C154177 * C2279 +
             C106475 * C560 + C107500 + C107500 + C154186 * C584 +
             C106473 * C553 + C107501 + C107501 + C154189 * C577) *
                C153865 * C153722 +
            (C107513 + C107512 + C107511 + C107510) * C153865 * C73969) *
               C153847) *
              C153767 * C1255)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C106473 * C136 + C106482 + C106482 + C154189 * C152 +
             C106475 * C556 + C106483 + C106483 + C154186 * C580 +
             C106477 * C557 + C106484 + C106484 + C154177 * C581 +
             C106479 * C2272 + C106485 + C106485 + C154123 * C2282) *
                C153865 * C73969 +
            (C106550 + C106551 + C106552 + C106553) * C153865 * C153722) *
               C2058 -
           ((C107070 + C107071 + C107072 + C107073) * C153865 * C153722 +
            (C106479 * C7665 + C107026 + C107026 + C154123 * C7673 +
             C106477 * C2272 + C107027 + C107027 + C154177 * C2282 +
             C106475 * C557 + C107028 + C107028 + C154186 * C581 +
             C106473 * C556 + C107029 + C107029 + C154189 * C580) *
                C153865 * C73969) *
               C153847) *
              C326 +
          (((C106473 * C1081 + C107772 + C107772 + C154189 * C1093 +
             C106475 * C1489 + C107773 + C107773 + C154186 * C1499 +
             C106477 * C6161 + C107774 + C107774 + C154177 * C6173 +
             C106479 * C9167 + C107775 + C107775 + C154123 * C9173) *
                C153865 * C73969 +
            (C107800 + C107801 + C107802 + C107803) * C153865 * C153722) *
               C153847 -
           ((C106812 + C106813 + C106814 + C106815) * C153865 * C153722 +
            (C106479 * C6161 + C106768 + C106768 + C154123 * C6173 +
             C106477 * C1489 + C106769 + C106769 + C154177 * C1499 +
             C106475 * C1081 + C106770 + C106770 + C154186 * C1093 +
             C106473 * C335 + C106771 + C106771 + C154189 * C359) *
                C153865 * C73969) *
               C2058) *
              C327 +
          (((C106473 * C336 + C106772 + C106772 + C154189 * C360 +
             C106475 * C1920 + C106773 + C106773 + C154186 * C1930 +
             C106477 * C3369 + C106774 + C106774 + C154177 * C3377 +
             C106479 * C6160 + C106775 + C106775 + C154123 * C6172) *
                C153865 * C73969 +
            (C106816 + C106817 + C106818 + C106819) * C153865 * C153722) *
               C2058 -
           ((C106479 * C30947 + C108984 + C108984 + C154123 * C30951 +
             C106477 * C6158 + C108985 + C108985 + C154177 * C6170 +
             C106475 * C3370 + C108986 + C108986 + C154186 * C3378 +
             C106473 * C1919 + C108987 + C108987 + C154189 * C1929) *
                C153865 * C153722 +
            (C106479 * C30946 + C108988 + C108988 + C154123 * C30950 +
             C106477 * C6160 + C108989 + C108989 + C154177 * C6172 +
             C106475 * C3369 + C108990 + C108990 + C154186 * C3377 +
             C106473 * C1920 + C108991 + C108991 + C154189 * C1930) *
                C153865 * C73969) *
               C153847) *
              C328) *
         C153748) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C106473 * C136 + C106482 + C106482 + C154189 * C152 +
            C106475 * C556 + C106483 + C106483 + C154186 * C580 +
            C106477 * C557 + C106484 + C106484 + C154177 * C581 +
            C106479 * C2272 + C106485 + C106485 + C154123 * C2282) *
               C153865 * C73969 +
           (C106550 + C106551 + C106552 + C106553) * C153865 * C153722) *
              C2264 -
          ((C107070 + C107071 + C107072 + C107073) * C153865 * C153722 +
           (C106479 * C7665 + C107026 + C107026 + C154123 * C7673 +
            C106477 * C2272 + C107027 + C107027 + C154177 * C2282 +
            C106475 * C557 + C107028 + C107028 + C154186 * C581 +
            C106473 * C556 + C107029 + C107029 + C154189 * C580) *
               C153865 * C73969) *
              C2265 +
          ((C106473 * C557 + C107030 + C107030 + C154189 * C581 +
            C106475 * C2272 + C107031 + C107031 + C154186 * C2282 +
            C106477 * C7665 + C107032 + C107032 + C154177 * C7673 +
            C106479 * C10502 + C107033 + C107033 + C154123 * C10508) *
               C153865 * C73969 +
           (C107074 + C107075 + C107076 + C107077) * C153865 * C153722) *
              C2266 -
          ((C106479 * C55639 + C109510 + C109510 + C154123 * C55643 +
            C106477 * C10501 + C109511 + C109511 + C154177 * C10507 +
            C106475 * C7666 + C109512 + C109512 + C154186 * C7674 +
            C106473 * C2271 + C109513 + C109513 + C154189 * C2281) *
               C153865 * C153722 +
           (C106479 * C55638 + C109514 + C109514 + C154123 * C55642 +
            C106477 * C10502 + C109515 + C109515 + C154177 * C10508 +
            C106475 * C7665 + C109516 + C109516 + C154186 * C7673 +
            C106473 * C2272 + C109517 + C109517 + C154189 * C2282) *
               C153865 * C73969) *
              C2267) *
         C153767 * C153748) /
            (p * q * std::sqrt(p + q));
    d2ee[268] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
              C97199 + C97199 + C153969 * C580) *
                 C154181 +
             (C101439 + C101440) * C154169 + C101451 * C154143) *
                C73969 +
            ((C97252 + C97253) * C154181 + C101388 * C154169 +
             C101389 * C154143) *
                C153722) *
               C154166 -
           ((C102758 * C154143 + C102759 * C154169 +
             (C97810 + C97811) * C154181) *
                C153722 +
            (C104577 * C154143 + (C102794 + C102795) * C154169 +
             (C97195 * C557 + C97756 + C97756 + C153969 * C581 + C97193 * C556 +
              C97757 + C97757 + C97191 * C580) *
                 C154181) *
                C73969) *
               C154167 +
           (((C97193 * C557 + C97758 + C97758 + C97191 * C581 + C97195 * C2272 +
              C97759 + C97759 + C153969 * C2282) *
                 C154181 +
             (C103607 + C103608) * C154169 + (C103609 + C103610) * C154143) *
                C73969 +
            ((C97812 + C97813) * C154181 + (C101776 + C101777) * C154169 +
             (C101778 + C101779) * C154143) *
                C153722) *
               C2574) *
              C153767 * C154085 +
          ((((C97811 + C97810) * C154181 + C102770 * C154169 +
             C102771 * C154143) *
                C73969 +
            ((C97809 + C97808) * C154181 + (C98532 + C98533) * C154169 +
             (C102370 + C102371) * C154143) *
                C153722) *
               C154167 -
           ((C101412 * C154143 + C98013 * C154169 +
             (C97255 + C97254) * C154181) *
                C153722 +
            (C101394 * C154143 + C101395 * C154169 +
             (C97253 + C97252) * C154181) *
                C73969) *
               C154166 -
           (((C97195 * C6156 + C101760 + C101760 + C153969 * C6168 +
              C97193 * C3371 + C101761 + C101761 + C97191 * C3379) *
                 C154143 +
             (C97195 * C6157 + C99064 + C99064 + C153969 * C6169 +
              C97193 * C1487 + C99065 + C99065 + C97191 * C1497) *
                 C154169 +
             (C97815 + C97814) * C154181) *
                C153722 +
            ((C101779 + C101778) * C154143 + (C101777 + C101776) * C154169 +
             (C97813 + C97812) * C154181) *
                C73969) *
               C2574) *
              C153767 * C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
             C97199 + C97199 + C153969 * C580) *
                C153865 * C154187 +
            (C97252 + C97253) * C153865 * C154180 + C97266 * C154161 +
            C97267 * C154108) *
               C154166 -
           (C98230 * C154108 + C98231 * C154161 +
            (C97810 + C97811) * C153865 * C154180 +
            (C97195 * C557 + C97756 + C97756 + C153969 * C581 + C97193 * C556 +
             C97757 + C97757 + C97191 * C580) *
                C153865 * C154187) *
               C154167 +
           ((C97193 * C557 + C97758 + C97758 + C97191 * C581 + C97195 * C2272 +
             C97759 + C97759 + C153969 * C2282) *
                C153865 * C154187 +
            (C97812 + C97813) * C153865 * C154180 +
            (C97814 + C97815) * C153865 * C154161 +
            (C97816 + C97817) * C153865 * C154108) *
               C2574) *
              C153767 * C154085 +
          (((C97811 + C97810) * C153865 * C154187 +
            (C97809 + C97808) * C153865 * C154180 +
            (C97807 + C97806) * C153865 * C154161 +
            (C98236 + C98237) * C153865 * C154108) *
               C154167 -
           (C97268 * C154108 + C97269 * C154161 +
            (C97255 + C97254) * C153865 * C154180 +
            (C97253 + C97252) * C153865 * C154187) *
               C154166 -
           ((C97195 * C2268 + C97780 + C97780 + C153969 * C2278 +
             C97193 * C561 + C97781 + C97781 + C97191 * C585) *
                C153865 * C154108 +
            (C97817 + C97816) * C153865 * C154161 +
            (C97815 + C97814) * C153865 * C154180 +
            (C97813 + C97812) * C153865 * C154187) *
               C2574) *
              C153767 * C153754)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C106473 * C136 + C106482 + C106482 + C154189 * C152 +
             C106475 * C556 + C106483 + C106483 + C154186 * C580 +
             C106477 * C557 + C106484 + C106484 + C154177 * C581 +
             C106479 * C2272 + C106485 + C106485 + C154123 * C2282) *
                C153865 * C73969 +
            (C106550 + C106551 + C106552 + C106553) * C153865 * C153722) *
               C154166 -
           ((C107070 + C107071 + C107072 + C107073) * C153865 * C153722 +
            (C106479 * C7665 + C107026 + C107026 + C154123 * C7673 +
             C106477 * C2272 + C107027 + C107027 + C154177 * C2282 +
             C106475 * C557 + C107028 + C107028 + C154186 * C581 +
             C106473 * C556 + C107029 + C107029 + C154189 * C580) *
                C153865 * C73969) *
               C154167 +
           ((C106473 * C557 + C107030 + C107030 + C154189 * C581 +
             C106475 * C2272 + C107031 + C107031 + C154186 * C2282 +
             C106477 * C7665 + C107032 + C107032 + C154177 * C7673 +
             C106479 * C10502 + C107033 + C107033 + C154123 * C10508) *
                C153865 * C73969 +
            (C107074 + C107075 + C107076 + C107077) * C153865 * C153722) *
               C2574) *
              C153767 * C154085 +
          (((C107073 + C107072 + C107071 + C107070) * C153865 * C73969 +
            (C107510 + C107511 + C107512 + C107513) * C153865 * C153722) *
               C154167 -
           ((C106554 + C106555 + C106556 + C106557) * C153865 * C153722 +
            (C106553 + C106552 + C106551 + C106550) * C153865 * C73969) *
               C154166 -
           ((C106479 * C10500 + C107050 + C107050 + C154123 * C10506 +
             C106477 * C7667 + C107051 + C107051 + C154177 * C7675 +
             C106475 * C2270 + C107052 + C107052 + C154186 * C2280 +
             C106473 * C559 + C107053 + C107053 + C154189 * C583) *
                C153865 * C153722 +
            (C107077 + C107076 + C107075 + C107074) * C153865 * C73969) *
               C2574) *
              C153767 * C153754)) /
            (p * q * std::sqrt(p + q));
    d2ee[269] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
             C97199 + C97199 + C153969 * C580) *
                C153865 * C154187 +
            (C97252 + C97253) * C153865 * C154180 + C97266 * C154161 +
            C97267 * C154108) *
               C2058 -
           (C98230 * C154108 + C98231 * C154161 +
            (C97810 + C97811) * C153865 * C154180 +
            (C97195 * C557 + C97756 + C97756 + C153969 * C581 + C97193 * C556 +
             C97757 + C97757 + C97191 * C580) *
                C153865 * C154187) *
               C153847) *
              C326 +
          (((C97193 * C1081 + C98496 + C98496 + C97191 * C1093 +
             C97195 * C1489 + C98497 + C98497 + C153969 * C1499) *
                C153865 * C154187 +
            (C98530 + C98531) * C153865 * C154180 +
            (C98532 + C98533) * C153865 * C154161 +
            (C98534 + C98535) * C153865 * C154108) *
               C153847 -
           (C98020 * C154108 + C98021 * C154161 +
            (C97536 + C97537) * C153865 * C154180 +
            (C97195 * C1081 + C97482 + C97482 + C153969 * C1093 +
             C97193 * C335 + C97483 + C97483 + C97191 * C359) *
                C153865 * C154187) *
               C2058) *
              C327 +
          (((C97193 * C336 + C97484 + C97484 + C97191 * C360 + C97195 * C1920 +
             C97485 + C97485 + C153969 * C1930) *
                C153865 * C154187 +
            (C97538 + C97539) * C153865 * C154180 +
            (C97540 + C97541) * C153865 * C154161 +
            (C97542 + C97543) * C153865 * C154108) *
               C2058 -
           ((C97195 * C3372 + C99716 + C99716 + C153969 * C3380 +
             C97193 * C1917 + C99717 + C99717 + C97191 * C1927) *
                C153865 * C154108 +
            (C97195 * C3371 + C99718 + C99718 + C153969 * C3379 +
             C97193 * C1918 + C99719 + C99719 + C97191 * C1928) *
                C153865 * C154161 +
            (C97195 * C3370 + C99720 + C99720 + C153969 * C3378 +
             C97193 * C1919 + C99721 + C99721 + C97191 * C1929) *
                C153865 * C154180 +
            (C97195 * C3369 + C99722 + C99722 + C153969 * C3377 +
             C97193 * C1920 + C99723 + C99723 + C97191 * C1930) *
                C153865 * C154187) *
               C153847) *
              C328) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
             C97199 + C97199 + C153969 * C580) *
                C153865 * C154187 +
            (C97252 + C97253) * C153865 * C154180 + C97266 * C154161 +
            C97267 * C154108) *
               C2058 -
           (C98230 * C154108 + C98231 * C154161 +
            (C97810 + C97811) * C153865 * C154180 +
            (C97195 * C557 + C97756 + C97756 + C153969 * C581 + C97193 * C556 +
             C97757 + C97757 + C97191 * C580) *
                C153865 * C154187) *
               C153847) *
              C153767 * C1253 +
          (((C97811 + C97810) * C153865 * C154187 +
            (C97809 + C97808) * C153865 * C154180 +
            (C97807 + C97806) * C153865 * C154161 +
            (C98236 + C98237) * C153865 * C154108) *
               C153847 -
           (C97268 * C154108 + C97269 * C154161 +
            (C97255 + C97254) * C153865 * C154180 +
            (C97253 + C97252) * C153865 * C154187) *
               C2058) *
              C153767 * C1254 +
          ((C97266 * C154187 + C97267 * C154180 +
            (C97259 + C97258) * C153865 * C154161 +
            (C97260 + C97261) * C153865 * C154108) *
               C2058 -
           ((C97195 * C563 + C98228 + C98228 + C153969 * C587 + C97193 * C562 +
             C98229 + C98229 + C97191 * C586) *
                C153865 * C154108 +
            (C98237 + C98236) * C153865 * C154161 + C98230 * C154180 +
            C98231 * C154187) *
               C153847) *
              C153767 * C1255)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
              C97199 + C97199 + C153969 * C580) *
                 C154181 +
             (C101439 + C101440) * C154169 + C101451 * C154143) *
                C73969 +
            ((C97252 + C97253) * C154181 + C101388 * C154169 +
             C101389 * C154143) *
                C153722) *
               C2058 -
           ((C102758 * C154143 + C102759 * C154169 +
             (C97810 + C97811) * C154181) *
                C153722 +
            (C104577 * C154143 + (C102794 + C102795) * C154169 +
             (C97195 * C557 + C97756 + C97756 + C153969 * C581 + C97193 * C556 +
              C97757 + C97757 + C97191 * C580) *
                 C154181) *
                C73969) *
               C153847) *
              C153767 * C1253 +
          ((((C97811 + C97810) * C154181 + C102770 * C154169 +
             C102771 * C154143) *
                C73969 +
            ((C97809 + C97808) * C154181 + (C98532 + C98533) * C154169 +
             (C102370 + C102371) * C154143) *
                C153722) *
               C153847 -
           ((C101412 * C154143 + C98013 * C154169 +
             (C97255 + C97254) * C154181) *
                C153722 +
            (C101394 * C154143 + C101395 * C154169 +
             (C97253 + C97252) * C154181) *
                C73969) *
               C2058) *
              C153767 * C1254 +
          (((C97262 * C154181 + C102070 * C154169 + C102071 * C154143) *
                C73969 +
            (C97263 * C154181 + (C97533 + C97532) * C154169 +
             (C97542 + C97543) * C154143) *
                C153722) *
               C2058 -
           (((C97195 * C3372 + C99716 + C99716 + C153969 * C3380 +
              C97193 * C1917 + C99717 + C99717 + C97191 * C1927) *
                 C154143 +
             (C98535 + C98534) * C154169 + C98222 * C154181) *
                C153722 +
            ((C102371 + C102370) * C154143 + (C98533 + C98532) * C154169 +
             C98223 * C154181) *
                C73969) *
               C153847) *
              C153767 * C1255)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
              C97199 + C97199 + C153969 * C580) *
                 C154181 +
             (C101439 + C101440) * C154169 + C101451 * C154143) *
                C73969 +
            ((C97252 + C97253) * C154181 + C101388 * C154169 +
             C101389 * C154143) *
                C153722) *
               C2058 -
           ((C102758 * C154143 + C102759 * C154169 +
             (C97810 + C97811) * C154181) *
                C153722 +
            (C104577 * C154143 + (C102794 + C102795) * C154169 +
             (C97195 * C557 + C97756 + C97756 + C153969 * C581 + C97193 * C556 +
              C97757 + C97757 + C97191 * C580) *
                 C154181) *
                C73969) *
               C153847) *
              C326 +
          ((((C102795 + C102794) * C154181 + (C102793 + C102792) * C154169 +
             (C104590 + C104591) * C154143) *
                C73969 +
            (C102770 * C154181 + C102771 * C154169 +
             (C102796 + C102797) * C154143) *
                C153722) *
               C153847 -
           ((C101452 * C154143 + C101394 * C154169 + C101395 * C154181) *
                C153722 +
            (C103282 * C154143 + (C101442 + C101441) * C154169 +
             (C101440 + C101439) * C154181) *
                C73969) *
               C2058) *
              C327 +
          (((C101451 * C154181 + (C101446 + C101445) * C154169 +
             (C103295 + C103296) * C154143) *
                C73969 +
            (C101389 * C154181 + C101453 * C154169 +
             (C101447 + C101448) * C154143) *
                C153722) *
               C2058 -
           (((C97195 * C28359 + C104582 + C104582 + C153969 * C28363 +
              C97193 * C5558 + C104583 + C104583 + C97191 * C5564) *
                 C154143 +
             (C102797 + C102796) * C154169 + C102758 * C154181) *
                C153722 +
            ((C97195 * C28358 + C104584 + C104584 + C153969 * C28362 +
              C97193 * C5559 + C104585 + C104585 + C97191 * C5565) *
                 C154143 +
             (C104591 + C104590) * C154169 + C104577 * C154181) *
                C73969) *
               C153847) *
              C328) *
         C153748) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C106473 * C136 + C106482 + C106482 + C154189 * C152 +
             C106475 * C556 + C106483 + C106483 + C154186 * C580 +
             C106477 * C557 + C106484 + C106484 + C154177 * C581 +
             C106479 * C2272 + C106485 + C106485 + C154123 * C2282) *
                C153865 * C73969 +
            (C106550 + C106551 + C106552 + C106553) * C153865 * C153722) *
               C2058 -
           ((C107070 + C107071 + C107072 + C107073) * C153865 * C153722 +
            (C106479 * C7665 + C107026 + C107026 + C154123 * C7673 +
             C106477 * C2272 + C107027 + C107027 + C154177 * C2282 +
             C106475 * C557 + C107028 + C107028 + C154186 * C581 +
             C106473 * C556 + C107029 + C107029 + C154189 * C580) *
                C153865 * C73969) *
               C153847) *
              C153767 * C1253 +
          (((C107073 + C107072 + C107071 + C107070) * C153865 * C73969 +
            (C107510 + C107511 + C107512 + C107513) * C153865 * C153722) *
               C153847 -
           ((C106554 + C106555 + C106556 + C106557) * C153865 * C153722 +
            (C106553 + C106552 + C106551 + C106550) * C153865 * C73969) *
               C2058) *
              C153767 * C1254 +
          (((C106557 + C106556 + C106555 + C106554) * C153865 * C73969 +
            (C106558 + C106559 + C106560 + C106561) * C153865 * C153722) *
               C2058 -
           ((C106479 * C7668 + C107498 + C107498 + C154123 * C7676 +
             C106477 * C2269 + C107499 + C107499 + C154177 * C2279 +
             C106475 * C560 + C107500 + C107500 + C154186 * C584 +
             C106473 * C553 + C107501 + C107501 + C154189 * C577) *
                C153865 * C153722 +
            (C107513 + C107512 + C107511 + C107510) * C153865 * C73969) *
               C153847) *
              C153767 * C1255)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C106473 * C136 + C106482 + C106482 + C154189 * C152 +
             C106475 * C556 + C106483 + C106483 + C154186 * C580 +
             C106477 * C557 + C106484 + C106484 + C154177 * C581 +
             C106479 * C2272 + C106485 + C106485 + C154123 * C2282) *
                C153865 * C73969 +
            (C106550 + C106551 + C106552 + C106553) * C153865 * C153722) *
               C2058 -
           ((C107070 + C107071 + C107072 + C107073) * C153865 * C153722 +
            (C106479 * C7665 + C107026 + C107026 + C154123 * C7673 +
             C106477 * C2272 + C107027 + C107027 + C154177 * C2282 +
             C106475 * C557 + C107028 + C107028 + C154186 * C581 +
             C106473 * C556 + C107029 + C107029 + C154189 * C580) *
                C153865 * C73969) *
               C153847) *
              C326 +
          (((C106473 * C1081 + C107772 + C107772 + C154189 * C1093 +
             C106475 * C1489 + C107773 + C107773 + C154186 * C1499 +
             C106477 * C6161 + C107774 + C107774 + C154177 * C6173 +
             C106479 * C9167 + C107775 + C107775 + C154123 * C9173) *
                C153865 * C73969 +
            (C107800 + C107801 + C107802 + C107803) * C153865 * C153722) *
               C153847 -
           ((C106812 + C106813 + C106814 + C106815) * C153865 * C153722 +
            (C106479 * C6161 + C106768 + C106768 + C154123 * C6173 +
             C106477 * C1489 + C106769 + C106769 + C154177 * C1499 +
             C106475 * C1081 + C106770 + C106770 + C154186 * C1093 +
             C106473 * C335 + C106771 + C106771 + C154189 * C359) *
                C153865 * C73969) *
               C2058) *
              C327 +
          (((C106473 * C336 + C106772 + C106772 + C154189 * C360 +
             C106475 * C1920 + C106773 + C106773 + C154186 * C1930 +
             C106477 * C3369 + C106774 + C106774 + C154177 * C3377 +
             C106479 * C6160 + C106775 + C106775 + C154123 * C6172) *
                C153865 * C73969 +
            (C106816 + C106817 + C106818 + C106819) * C153865 * C153722) *
               C2058 -
           ((C106479 * C30947 + C108984 + C108984 + C154123 * C30951 +
             C106477 * C6158 + C108985 + C108985 + C154177 * C6170 +
             C106475 * C3370 + C108986 + C108986 + C154186 * C3378 +
             C106473 * C1919 + C108987 + C108987 + C154189 * C1929) *
                C153865 * C153722 +
            (C106479 * C30946 + C108988 + C108988 + C154123 * C30950 +
             C106477 * C6160 + C108989 + C108989 + C154177 * C6172 +
             C106475 * C3369 + C108990 + C108990 + C154186 * C3377 +
             C106473 * C1920 + C108991 + C108991 + C154189 * C1930) *
                C153865 * C73969) *
               C153847) *
              C328) *
         C153748) /
            (p * q * std::sqrt(p + q));
    d2ee[270] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                  ((((C152071 * C136 + C115566 + C115566 + C153965 * C152 +
                      C152059 * C556 + C115567 + C115567 + C153972 * C580 +
                      C115563 * C557 + C115568 + C115568 + C115558 * C581) *
                         C153865 * C153717 +
                     (C115632 + C115633 + C115634) * C153865 * C153725 +
                     C115648 * C82774) *
                        C153783 * C154093 -
                    (C116486 * C82774 +
                     (C115943 + C115944 + C115945) * C153865 * C153725 +
                     (C115563 * C1489 + C115886 + C115886 + C115558 * C1499 +
                      C152059 * C1081 + C115887 + C115887 + C153972 * C1093 +
                      C152071 * C335 + C115888 + C115888 + C153965 * C359) *
                         C153865 * C153717) *
                        C153783 * C153819) *
                       C154162 +
                   (((C115945 + C115944 + C115943) * C153865 * C153717 +
                     (C115942 + C115941 + C115940) * C153865 * C153725 +
                     (C116490 + C116491 + C116492) * C153865 * C82774) *
                        C153783 * C153819 -
                    (C115649 * C82774 +
                     (C115637 + C115636 + C115635) * C153865 * C153725 +
                     (C115634 + C115633 + C115632) * C153865 * C153717) *
                        C153783 * C154093) *
                       C154163 +
                   ((C115648 * C153717 +
                     (C115640 + C115639 + C115638) * C153865 * C153725 +
                     (C115641 + C115642 + C115643) * C153865 * C82774) *
                        C153783 * C154093 -
                    ((C115563 * C1485 + C116479 + C116479 + C115558 * C1495 +
                      C152059 * C1085 + C116480 + C116480 + C153972 * C1097 +
                      C152071 * C331 + C116481 + C116481 + C153965 * C355) *
                         C153865 * C82774 +
                     (C116492 + C116491 + C116490) * C153865 * C153725 +
                     C116486 * C153717) *
                        C153783 * C153819) *
                       C774)) /
                 (p * q * std::sqrt(p + q));
    d2ee[271] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                  (((((C152071 * C136 + C115566 + C115566 + C153965 * C152 +
                       C152059 * C556 + C115567 + C115567 + C153972 * C580 +
                       C115563 * C557 + C115568 + C115568 + C115558 * C581) *
                          C153865 * C153717 +
                      (C115632 + C115633 + C115634) * C153865 * C153725 +
                      C115648 * C82774) *
                         C154094 -
                     (C116725 * C82774 +
                      (C116245 + C116246 + C116247) * C153865 * C153725 +
                      (C115563 * C2272 + C116188 + C116188 + C115558 * C2282 +
                       C152059 * C557 + C116189 + C116189 + C153972 * C581 +
                       C152071 * C556 + C116190 + C116190 + C153965 * C580) *
                          C153865 * C153717) *
                         C153847) *
                        C154093 +
                    (((C152071 * C1081 + C117022 + C117022 + C153965 * C1093 +
                       C152059 * C1489 + C117023 + C117023 + C153972 * C1499 +
                       C115563 * C6161 + C117024 + C117024 + C115558 * C6173) *
                          C153865 * C153717 +
                      (C117058 + C117059 + C117060) * C153865 * C153725 +
                      (C117061 + C117062 + C117063) * C153865 * C82774) *
                         C153847 -
                     (C116486 * C82774 +
                      (C115943 + C115944 + C115945) * C153865 * C153725 +
                      (C115563 * C1489 + C115886 + C115886 + C115558 * C1499 +
                       C152059 * C1081 + C115887 + C115887 + C153972 * C1093 +
                       C152071 * C335 + C115888 + C115888 + C153965 * C359) *
                          C153865 * C153717) *
                         C154094) *
                        C153819) *
                       C329 +
                   ((((C116247 + C116246 + C116245) * C153865 * C153717 +
                      (C116244 + C116243 + C116242) * C153865 * C153725 +
                      (C116729 + C116730 + C116731) * C153865 * C82774) *
                         C153847 -
                     (C115649 * C82774 +
                      (C115637 + C115636 + C115635) * C153865 * C153725 +
                      (C115634 + C115633 + C115632) * C153865 * C153717) *
                         C154094) *
                        C154093 +
                    (((C115945 + C115944 + C115943) * C153865 * C153717 +
                      (C115942 + C115941 + C115940) * C153865 * C153725 +
                      (C116490 + C116491 + C116492) * C153865 * C82774) *
                         C154094 -
                     ((C115563 * C8529 + C117043 + C117043 + C115558 * C8531 +
                       C152059 * C1486 + C117044 + C117044 + C153972 * C1496 +
                       C152071 * C1084 + C117045 + C117045 + C153965 * C1096) *
                          C153865 * C82774 +
                      (C117063 + C117062 + C117061) * C153865 * C153725 +
                      (C117060 + C117059 + C117058) * C153865 * C153717) *
                         C153847) *
                        C153819) *
                       C153754)) /
                 (p * q * std::sqrt(p + q));
    d2ee[272] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C152071 * C136 + C115566 + C115566 + C153965 * C152 +
                      C152059 * C556 + C115567 + C115567 + C153972 * C580 +
                      C115563 * C557 + C115568 + C115568 + C115558 * C581) *
                         C153865 * C153717 +
                     (C115632 + C115633 + C115634) * C153865 * C153725 +
                     C115648 * C82774) *
                        C153783 * C326 -
                    ((C115940 + C115941 + C115942) * C153865 * C82774 +
                     (C115943 + C115944 + C115945) * C153865 * C153725 +
                     (C115563 * C1489 + C115886 + C115886 + C115558 * C1499 +
                      C152059 * C1081 + C115887 + C115887 + C153972 * C1093 +
                      C152071 * C335 + C115888 + C115888 + C153965 * C359) *
                         C153865 * C153717) *
                        C153783 * C327 +
                    ((C152071 * C336 + C115889 + C115889 + C153965 * C360 +
                      C152059 * C1920 + C115890 + C115890 + C153972 * C1930 +
                      C115563 * C3369 + C115891 + C115891 + C115558 * C3377) *
                         C153865 * C153717 +
                     (C115946 + C115947 + C115948) * C153865 * C153725 +
                     (C115949 + C115950 + C115951) * C153865 * C82774) *
                        C153783 * C328) *
                       C329 +
                   (((C115945 + C115944 + C115943) * C153865 * C153717 +
                     (C115942 + C115941 + C115940) * C153865 * C153725 +
                     (C152071 * C332 + C115910 + C115910 + C153965 * C356 +
                      C152059 * C1084 + C115911 + C115911 + C153972 * C1096 +
                      C115563 * C1486 + C115912 + C115912 + C115558 * C1496) *
                         C153865 * C82774) *
                        C153783 * C327 -
                    (C115649 * C82774 +
                     (C115637 + C115636 + C115635) * C153865 * C153725 +
                     (C115634 + C115633 + C115632) * C153865 * C153717) *
                        C153783 * C326 -
                    ((C115563 * C3372 + C115913 + C115913 + C115558 * C3380 +
                      C152059 * C1917 + C115914 + C115914 + C153972 * C1927 +
                      C152071 * C339 + C115915 + C115915 + C153965 * C363) *
                         C153865 * C82774 +
                     (C115951 + C115950 + C115949) * C153865 * C153725 +
                     (C115948 + C115947 + C115946) * C153865 * C153717) *
                        C153783 * C328) *
                       C153754)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((C152071 * C136 + C115566 + C115566 + C153965 * C152 +
                     C152059 * C556 + C115567 + C115567 + C153972 * C580 +
                     C115563 * C557 + C115568 + C115568 + C115558 * C581) *
                        C153865 * C153717 +
                    (C115632 + C115633 + C115634) * C153865 * C153725 +
                    C115648 * C82774) *
                       C153783 * C153767 * C130 -
                   (C115649 * C82774 +
                    (C115637 + C115636 + C115635) * C153865 * C153725 +
                    (C115634 + C115633 + C115632) * C153865 * C153717) *
                       C153783 * C153767 * C131 +
                   (C115648 * C153717 +
                    (C115640 + C115639 + C115638) * C153865 * C153725 +
                    (C115641 + C115642 + C115643) * C153865 * C82774) *
                       C153783 * C153767 * C132 -
                   ((C115563 * C563 + C115605 + C115605 + C115558 * C587 +
                     C152059 * C562 + C115606 + C115606 + C153972 * C586 +
                     C152071 * C141 + C115607 + C115607 + C153965 * C157) *
                        C153865 * C82774 +
                    (C115643 + C115642 + C115641) * C153865 * C153725 +
                    C115649 * C153717) *
                       C153783 * C153767 * C133)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C152071 * C136 + C115566 + C115566 + C153965 * C152 +
                      C152059 * C556 + C115567 + C115567 + C153972 * C580 +
                      C115563 * C557 + C115568 + C115568 + C115558 * C581) *
                         C153865 * C153717 +
                     (C115632 + C115633 + C115634) * C153865 * C153725 +
                     C115648 * C82774) *
                        C549 -
                    ((C116242 + C116243 + C116244) * C153865 * C82774 +
                     (C116245 + C116246 + C116247) * C153865 * C153725 +
                     (C115563 * C2272 + C116188 + C116188 + C115558 * C2282 +
                      C152059 * C557 + C116189 + C116189 + C153972 * C581 +
                      C152071 * C556 + C116190 + C116190 + C153965 * C580) *
                         C153865 * C153717) *
                        C550 +
                    ((C152071 * C557 + C116191 + C116191 + C153965 * C581 +
                      C152059 * C2272 + C116192 + C116192 + C153972 * C2282 +
                      C115563 * C7665 + C116193 + C116193 + C115558 * C7673) *
                         C153865 * C153717 +
                     (C116248 + C116249 + C116250) * C153865 * C153725 +
                     (C116251 + C116252 + C116253) * C153865 * C82774) *
                        C551) *
                       C153767 * C329 +
                   (((C116247 + C116246 + C116245) * C153865 * C153717 +
                     (C116244 + C116243 + C116242) * C153865 * C153725 +
                     (C152071 * C553 + C116212 + C116212 + C153965 * C577 +
                      C152059 * C560 + C116213 + C116213 + C153972 * C584 +
                      C115563 * C2269 + C116214 + C116214 + C115558 * C2279) *
                         C153865 * C82774) *
                        C550 -
                    (C115649 * C82774 +
                     (C115637 + C115636 + C115635) * C153865 * C153725 +
                     (C115634 + C115633 + C115632) * C153865 * C153717) *
                        C549 -
                    ((C115563 * C7668 + C116215 + C116215 + C115558 * C7676 +
                      C152059 * C2269 + C116216 + C116216 + C153972 * C2279 +
                      C152071 * C560 + C116217 + C116217 + C153965 * C584) *
                         C153865 * C82774 +
                     (C116253 + C116252 + C116251) * C153865 * C153725 +
                     (C116250 + C116249 + C116248) * C153865 * C153717) *
                        C551) *
                       C153767 * C153754)) /
                     (p * q * std::sqrt(p + q));
    d2ee[273] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                  ((((C152071 * C136 + C115566 + C115566 + C153965 * C152 +
                      C152059 * C556 + C115567 + C115567 + C153972 * C580 +
                      C115563 * C557 + C115568 + C115568 + C115558 * C581) *
                         C153865 * C153717 +
                     (C115632 + C115633 + C115634) * C153865 * C153725 +
                     C115648 * C82774) *
                        C154094 -
                    (C116725 * C82774 +
                     (C116245 + C116246 + C116247) * C153865 * C153725 +
                     (C115563 * C2272 + C116188 + C116188 + C115558 * C2282 +
                      C152059 * C557 + C116189 + C116189 + C153972 * C581 +
                      C152071 * C556 + C116190 + C116190 + C153965 * C580) *
                         C153865 * C153717) *
                        C153847) *
                       C153767 * C154162 +
                   (((C116247 + C116246 + C116245) * C153865 * C153717 +
                     (C116244 + C116243 + C116242) * C153865 * C153725 +
                     (C116729 + C116730 + C116731) * C153865 * C82774) *
                        C153847 -
                    (C115649 * C82774 +
                     (C115637 + C115636 + C115635) * C153865 * C153725 +
                     (C115634 + C115633 + C115632) * C153865 * C153717) *
                        C154094) *
                       C153767 * C154163 +
                   ((C115648 * C153717 +
                     (C115640 + C115639 + C115638) * C153865 * C153725 +
                     (C115641 + C115642 + C115643) * C153865 * C82774) *
                        C154094 -
                    ((C115563 * C2268 + C116718 + C116718 + C115558 * C2278 +
                      C152059 * C561 + C116719 + C116719 + C153972 * C585 +
                      C152071 * C552 + C116720 + C116720 + C153965 * C576) *
                         C153865 * C82774 +
                     (C116731 + C116730 + C116729) * C153865 * C153725 +
                     C116725 * C153717) *
                        C153847) *
                       C153767 * C774)) /
                 (p * q * std::sqrt(p + q));
    d2ee[274] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  (((C152071 * C136 + C115566 + C115566 + C153965 * C152 +
                     C152059 * C556 + C115567 + C115567 + C153972 * C580 +
                     C115563 * C557 + C115568 + C115568 + C115558 * C581) *
                        C153865 * C153717 +
                    (C115632 + C115633 + C115634) * C153865 * C153725 +
                    C115648 * C82774) *
                       C153783 * C153767 * C130 -
                   (C115649 * C82774 +
                    (C115637 + C115636 + C115635) * C153865 * C153725 +
                    (C115634 + C115633 + C115632) * C153865 * C153717) *
                       C153783 * C153767 * C131 +
                   (C115648 * C153717 +
                    (C115640 + C115639 + C115638) * C153865 * C153725 +
                    (C115641 + C115642 + C115643) * C153865 * C82774) *
                       C153783 * C153767 * C132 -
                   ((C115563 * C563 + C115605 + C115605 + C115558 * C587 +
                     C152059 * C562 + C115606 + C115606 + C153972 * C586 +
                     C152071 * C141 + C115607 + C115607 + C153965 * C157) *
                        C153865 * C82774 +
                    (C115643 + C115642 + C115641) * C153865 * C153725 +
                    C115649 * C153717) *
                       C153783 * C153767 * C133)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C152071 * C136 + C115566 + C115566 + C153965 * C152 +
                      C152059 * C556 + C115567 + C115567 + C153972 * C580 +
                      C115563 * C557 + C115568 + C115568 + C115558 * C581) *
                         C153865 * C153717 +
                     (C115632 + C115633 + C115634) * C153865 * C153725 +
                     C115648 * C82774) *
                        C153783 * C326 -
                    ((C115940 + C115941 + C115942) * C153865 * C82774 +
                     (C115943 + C115944 + C115945) * C153865 * C153725 +
                     (C115563 * C1489 + C115886 + C115886 + C115558 * C1499 +
                      C152059 * C1081 + C115887 + C115887 + C153972 * C1093 +
                      C152071 * C335 + C115888 + C115888 + C153965 * C359) *
                         C153865 * C153717) *
                        C153783 * C327 +
                    ((C152071 * C336 + C115889 + C115889 + C153965 * C360 +
                      C152059 * C1920 + C115890 + C115890 + C153972 * C1930 +
                      C115563 * C3369 + C115891 + C115891 + C115558 * C3377) *
                         C153865 * C153717 +
                     (C115946 + C115947 + C115948) * C153865 * C153725 +
                     (C115949 + C115950 + C115951) * C153865 * C82774) *
                        C153783 * C328) *
                       C329 +
                   (((C115945 + C115944 + C115943) * C153865 * C153717 +
                     (C115942 + C115941 + C115940) * C153865 * C153725 +
                     (C152071 * C332 + C115910 + C115910 + C153965 * C356 +
                      C152059 * C1084 + C115911 + C115911 + C153972 * C1096 +
                      C115563 * C1486 + C115912 + C115912 + C115558 * C1496) *
                         C153865 * C82774) *
                        C153783 * C327 -
                    (C115649 * C82774 +
                     (C115637 + C115636 + C115635) * C153865 * C153725 +
                     (C115634 + C115633 + C115632) * C153865 * C153717) *
                        C153783 * C326 -
                    ((C115563 * C3372 + C115913 + C115913 + C115558 * C3380 +
                      C152059 * C1917 + C115914 + C115914 + C153972 * C1927 +
                      C152071 * C339 + C115915 + C115915 + C153965 * C363) *
                         C153865 * C82774 +
                     (C115951 + C115950 + C115949) * C153865 * C153725 +
                     (C115948 + C115947 + C115946) * C153865 * C153717) *
                        C153783 * C328) *
                       C153754)) /
                     (p * q * std::sqrt(p + q));
    d2ee[275] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                  ((((C152071 * C136 + C115566 + C115566 + C153965 * C152 +
                      C152059 * C556 + C115567 + C115567 + C153972 * C580 +
                      C115563 * C557 + C115568 + C115568 + C115558 * C581) *
                         C153865 * C153717 +
                     (C115632 + C115633 + C115634) * C153865 * C153725 +
                     C115648 * C82774) *
                        C153783 * C154164 -
                    (C116486 * C82774 +
                     (C115943 + C115944 + C115945) * C153865 * C153725 +
                     (C115563 * C1489 + C115886 + C115886 + C115558 * C1499 +
                      C152059 * C1081 + C115887 + C115887 + C153972 * C1093 +
                      C152071 * C335 + C115888 + C115888 + C153965 * C359) *
                         C153865 * C153717) *
                        C153783 * C154165 +
                    ((C152071 * C336 + C115889 + C115889 + C153965 * C360 +
                      C152059 * C1920 + C115890 + C115890 + C153972 * C1930 +
                      C115563 * C3369 + C115891 + C115891 + C115558 * C3377) *
                         C153865 * C153717 +
                     (C115946 + C115947 + C115948) * C153865 * C153725 +
                     (C115949 + C115950 + C115951) * C153865 * C82774) *
                        C153783 * C1629) *
                       C154085 +
                   (((C115945 + C115944 + C115943) * C153865 * C153717 +
                     (C115942 + C115941 + C115940) * C153865 * C153725 +
                     (C116490 + C116491 + C116492) * C153865 * C82774) *
                        C153783 * C154165 -
                    (C115649 * C82774 +
                     (C115637 + C115636 + C115635) * C153865 * C153725 +
                     (C115634 + C115633 + C115632) * C153865 * C153717) *
                        C153783 * C154164 -
                    ((C115563 * C3372 + C115913 + C115913 + C115558 * C3380 +
                      C152059 * C1917 + C115914 + C115914 + C153972 * C1927 +
                      C152071 * C339 + C115915 + C115915 + C153965 * C363) *
                         C153865 * C82774 +
                     (C115951 + C115950 + C115949) * C153865 * C153725 +
                     (C115948 + C115947 + C115946) * C153865 * C153717) *
                        C153783 * C1629) *
                       C153754)) /
                 (p * q * std::sqrt(p + q));
    d2ee[276] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                  ((((C152071 * C136 + C115566 + C115566 + C153965 * C152 +
                      C152059 * C556 + C115567 + C115567 + C153972 * C580 +
                      C115563 * C557 + C115568 + C115568 + C115558 * C581) *
                         C153865 * C153717 +
                     (C115632 + C115633 + C115634) * C153865 * C153725 +
                     C115648 * C82774) *
                        C154094 -
                    (C116725 * C82774 +
                     (C116245 + C116246 + C116247) * C153865 * C153725 +
                     (C115563 * C2272 + C116188 + C116188 + C115558 * C2282 +
                      C152059 * C557 + C116189 + C116189 + C153972 * C581 +
                      C152071 * C556 + C116190 + C116190 + C153965 * C580) *
                         C153865 * C153717) *
                        C153847) *
                       C154164 +
                   (((C152071 * C1081 + C117022 + C117022 + C153965 * C1093 +
                      C152059 * C1489 + C117023 + C117023 + C153972 * C1499 +
                      C115563 * C6161 + C117024 + C117024 + C115558 * C6173) *
                         C153865 * C153717 +
                     (C117058 + C117059 + C117060) * C153865 * C153725 +
                     (C117061 + C117062 + C117063) * C153865 * C82774) *
                        C153847 -
                    (C116486 * C82774 +
                     (C115943 + C115944 + C115945) * C153865 * C153725 +
                     (C115563 * C1489 + C115886 + C115886 + C115558 * C1499 +
                      C152059 * C1081 + C115887 + C115887 + C153972 * C1093 +
                      C152071 * C335 + C115888 + C115888 + C153965 * C359) *
                         C153865 * C153717) *
                        C154094) *
                       C154165 +
                   (((C152071 * C336 + C115889 + C115889 + C153965 * C360 +
                      C152059 * C1920 + C115890 + C115890 + C153972 * C1930 +
                      C115563 * C3369 + C115891 + C115891 + C115558 * C3377) *
                         C153865 * C153717 +
                     (C115946 + C115947 + C115948) * C153865 * C153725 +
                     (C115949 + C115950 + C115951) * C153865 * C82774) *
                        C154094 -
                    ((C115563 * C6156 + C118390 + C118390 + C115558 * C6168 +
                      C152059 * C3371 + C118391 + C118391 + C153972 * C3379 +
                      C152071 * C1918 + C118392 + C118392 + C153965 * C1928) *
                         C153865 * C82774 +
                     (C115563 * C6158 + C118393 + C118393 + C115558 * C6170 +
                      C152059 * C3370 + C118394 + C118394 + C153972 * C3378 +
                      C152071 * C1919 + C118395 + C118395 + C153965 * C1929) *
                         C153865 * C153725 +
                     (C115563 * C6160 + C118396 + C118396 + C115558 * C6172 +
                      C152059 * C3369 + C118397 + C118397 + C153972 * C3377 +
                      C152071 * C1920 + C118398 + C118398 + C153965 * C1930) *
                         C153865 * C153717) *
                        C153847) *
                       C1629) *
                  C153748) /
                 (p * q * std::sqrt(p + q));
    d2ee[277] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((C152071 * C136 + C115566 + C115566 + C153965 * C152 +
                     C152059 * C556 + C115567 + C115567 + C153972 * C580 +
                     C115563 * C557 + C115568 + C115568 + C115558 * C581) *
                        C153865 * C153717 +
                    (C115632 + C115633 + C115634) * C153865 * C153725 +
                    C115648 * C82774) *
                       C153783 * C1338 -
                   (C116486 * C82774 +
                    (C115943 + C115944 + C115945) * C153865 * C153725 +
                    (C115563 * C1489 + C115886 + C115886 + C115558 * C1499 +
                     C152059 * C1081 + C115887 + C115887 + C153972 * C1093 +
                     C152071 * C335 + C115888 + C115888 + C153965 * C359) *
                        C153865 * C153717) *
                       C153783 * C1339 +
                   ((C152071 * C336 + C115889 + C115889 + C153965 * C360 +
                     C152059 * C1920 + C115890 + C115890 + C153972 * C1930 +
                     C115563 * C3369 + C115891 + C115891 + C115558 * C3377) *
                        C153865 * C153717 +
                    (C115946 + C115947 + C115948) * C153865 * C153725 +
                    (C115949 + C115950 + C115951) * C153865 * C82774) *
                       C153783 * C1340 -
                   ((C115563 * C4809 + C117428 + C117428 + C115558 * C4815 +
                     C152059 * C4170 + C117429 + C117429 + C153972 * C4178 +
                     C152071 * C1345 + C117430 + C117430 + C153965 * C1355) *
                        C153865 * C82774 +
                    (C115563 * C4810 + C117431 + C117431 + C115558 * C4816 +
                     C152059 * C4169 + C117432 + C117432 + C153972 * C4177 +
                     C152071 * C1346 + C117433 + C117433 + C153965 * C1356) *
                        C153865 * C153725 +
                    (C115563 * C4811 + C117434 + C117434 + C115558 * C4817 +
                     C152059 * C4168 + C117435 + C117435 + C153972 * C4176 +
                     C152071 * C1347 + C117436 + C117436 + C153965 * C1357) *
                        C153865 * C153717) *
                       C153783 * C1341) *
                  C153748) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C152071 * C136 + C115566 + C115566 + C153965 * C152 +
                      C152059 * C556 + C115567 + C115567 + C153972 * C580 +
                      C115563 * C557 + C115568 + C115568 + C115558 * C581) *
                         C153865 * C153717 +
                     (C115632 + C115633 + C115634) * C153865 * C153725 +
                     C115648 * C82774) *
                        C153783 * C1251 -
                    (C116486 * C82774 +
                     (C115943 + C115944 + C115945) * C153865 * C153725 +
                     (C115563 * C1489 + C115886 + C115886 + C115558 * C1499 +
                      C152059 * C1081 + C115887 + C115887 + C153972 * C1093 +
                      C152071 * C335 + C115888 + C115888 + C153965 * C359) *
                         C153865 * C153717) *
                        C153783 * C153819) *
                       C1253 +
                   (((C115945 + C115944 + C115943) * C153865 * C153717 +
                     (C115942 + C115941 + C115940) * C153865 * C153725 +
                     (C116490 + C116491 + C116492) * C153865 * C82774) *
                        C153783 * C153819 -
                    (C115649 * C82774 +
                     (C115637 + C115636 + C115635) * C153865 * C153725 +
                     (C115634 + C115633 + C115632) * C153865 * C153717) *
                        C153783 * C1251) *
                       C1254 +
                   ((C115648 * C153717 +
                     (C115640 + C115639 + C115638) * C153865 * C153725 +
                     (C115641 + C115642 + C115643) * C153865 * C82774) *
                        C153783 * C1251 -
                    ((C115563 * C1485 + C116479 + C116479 + C115558 * C1495 +
                      C152059 * C1085 + C116480 + C116480 + C153972 * C1097 +
                      C152071 * C331 + C116481 + C116481 + C153965 * C355) *
                         C153865 * C82774 +
                     (C116492 + C116491 + C116490) * C153865 * C153725 +
                     C116486 * C153717) *
                        C153783 * C153819) *
                       C1255)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C152071 * C136 + C115566 + C115566 + C153965 * C152 +
                      C152059 * C556 + C115567 + C115567 + C153972 * C580 +
                      C115563 * C557 + C115568 + C115568 + C115558 * C581) *
                         C153865 * C153717 +
                     (C115632 + C115633 + C115634) * C153865 * C153725 +
                     C115648 * C82774) *
                        C549 -
                    (C116725 * C82774 +
                     (C116245 + C116246 + C116247) * C153865 * C153725 +
                     (C115563 * C2272 + C116188 + C116188 + C115558 * C2282 +
                      C152059 * C557 + C116189 + C116189 + C153972 * C581 +
                      C152071 * C556 + C116190 + C116190 + C153965 * C580) *
                         C153865 * C153717) *
                        C550 +
                    ((C152071 * C557 + C116191 + C116191 + C153965 * C581 +
                      C152059 * C2272 + C116192 + C116192 + C153972 * C2282 +
                      C115563 * C7665 + C116193 + C116193 + C115558 * C7673) *
                         C153865 * C153717 +
                     (C116248 + C116249 + C116250) * C153865 * C153725 +
                     (C116251 + C116252 + C116253) * C153865 * C82774) *
                        C551) *
                       C1251 +
                   (((C152071 * C1081 + C117022 + C117022 + C153965 * C1093 +
                      C152059 * C1489 + C117023 + C117023 + C153972 * C1499 +
                      C115563 * C6161 + C117024 + C117024 + C115558 * C6173) *
                         C153865 * C153717 +
                     (C117058 + C117059 + C117060) * C153865 * C153725 +
                     (C117061 + C117062 + C117063) * C153865 * C82774) *
                        C550 -
                    (C116486 * C82774 +
                     (C115943 + C115944 + C115945) * C153865 * C153725 +
                     (C115563 * C1489 + C115886 + C115886 + C115558 * C1499 +
                      C152059 * C1081 + C115887 + C115887 + C153972 * C1093 +
                      C152071 * C335 + C115888 + C115888 + C153965 * C359) *
                         C153865 * C153717) *
                        C549 -
                    ((C115563 * C9165 + C117655 + C117655 + C115558 * C9171 +
                      C152059 * C6157 + C117656 + C117656 + C153972 * C6169 +
                      C152071 * C1487 + C117657 + C117657 + C153965 * C1497) *
                         C153865 * C82774 +
                     (C115563 * C9166 + C117658 + C117658 + C115558 * C9172 +
                      C152059 * C6159 + C117659 + C117659 + C153972 * C6171 +
                      C152071 * C1488 + C117660 + C117660 + C153965 * C1498) *
                         C153865 * C153725 +
                     (C115563 * C9167 + C117661 + C117661 + C115558 * C9173 +
                      C152059 * C6161 + C117662 + C117662 + C153972 * C6173 +
                      C152071 * C1489 + C117663 + C117663 + C153965 * C1499) *
                         C153865 * C153717) *
                        C551) *
                       C153819) *
                  C153748) /
                     (p * q * std::sqrt(p + q));
    d2ee[278] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                  (((((C152071 * C136 + C115566 + C115566 + C153965 * C152 +
                       C152059 * C556 + C115567 + C115567 + C153972 * C580 +
                       C115563 * C557 + C115568 + C115568 + C115558 * C581) *
                          C153865 * C153717 +
                      (C115632 + C115633 + C115634) * C153865 * C153725 +
                      C115648 * C82774) *
                         C154094 -
                     (C116725 * C82774 +
                      (C116245 + C116246 + C116247) * C153865 * C153725 +
                      (C115563 * C2272 + C116188 + C116188 + C115558 * C2282 +
                       C152059 * C557 + C116189 + C116189 + C153972 * C581 +
                       C152071 * C556 + C116190 + C116190 + C153965 * C580) *
                          C153865 * C153717) *
                         C153847) *
                        C1251 +
                    (((C152071 * C1081 + C117022 + C117022 + C153965 * C1093 +
                       C152059 * C1489 + C117023 + C117023 + C153972 * C1499 +
                       C115563 * C6161 + C117024 + C117024 + C115558 * C6173) *
                          C153865 * C153717 +
                      (C117058 + C117059 + C117060) * C153865 * C153725 +
                      (C117061 + C117062 + C117063) * C153865 * C82774) *
                         C153847 -
                     (C116486 * C82774 +
                      (C115943 + C115944 + C115945) * C153865 * C153725 +
                      (C115563 * C1489 + C115886 + C115886 + C115558 * C1499 +
                       C152059 * C1081 + C115887 + C115887 + C153972 * C1093 +
                       C152071 * C335 + C115888 + C115888 + C153965 * C359) *
                          C153865 * C153717) *
                         C154094) *
                        C153819) *
                       C154085 +
                   ((((C116247 + C116246 + C116245) * C153865 * C153717 +
                      (C116244 + C116243 + C116242) * C153865 * C153725 +
                      (C116729 + C116730 + C116731) * C153865 * C82774) *
                         C153847 -
                     (C115649 * C82774 +
                      (C115637 + C115636 + C115635) * C153865 * C153725 +
                      (C115634 + C115633 + C115632) * C153865 * C153717) *
                         C154094) *
                        C1251 +
                    (((C115945 + C115944 + C115943) * C153865 * C153717 +
                      (C115942 + C115941 + C115940) * C153865 * C153725 +
                      (C116490 + C116491 + C116492) * C153865 * C82774) *
                         C154094 -
                     ((C115563 * C8529 + C117043 + C117043 + C115558 * C8531 +
                       C152059 * C1486 + C117044 + C117044 + C153972 * C1496 +
                       C152071 * C1084 + C117045 + C117045 + C153965 * C1096) *
                          C153865 * C82774 +
                      (C117063 + C117062 + C117061) * C153865 * C153725 +
                      (C117060 + C117059 + C117058) * C153865 * C153717) *
                         C153847) *
                        C153819) *
                       C153754)) /
                 (p * q * std::sqrt(p + q));
    d2ee[279] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C152071 * C136 + C115566 + C115566 + C153965 * C152 +
                      C152059 * C556 + C115567 + C115567 + C153972 * C580 +
                      C115563 * C557 + C115568 + C115568 + C115558 * C581) *
                         C153865 * C153717 +
                     (C115632 + C115633 + C115634) * C153865 * C153725 +
                     C115648 * C82774) *
                        C153783 * C1251 -
                    (C116486 * C82774 +
                     (C115943 + C115944 + C115945) * C153865 * C153725 +
                     (C115563 * C1489 + C115886 + C115886 + C115558 * C1499 +
                      C152059 * C1081 + C115887 + C115887 + C153972 * C1093 +
                      C152071 * C335 + C115888 + C115888 + C153965 * C359) *
                         C153865 * C153717) *
                        C153783 * C153819) *
                       C1253 +
                   (((C115945 + C115944 + C115943) * C153865 * C153717 +
                     (C115942 + C115941 + C115940) * C153865 * C153725 +
                     (C116490 + C116491 + C116492) * C153865 * C82774) *
                        C153783 * C153819 -
                    (C115649 * C82774 +
                     (C115637 + C115636 + C115635) * C153865 * C153725 +
                     (C115634 + C115633 + C115632) * C153865 * C153717) *
                        C153783 * C1251) *
                       C1254 +
                   ((C115648 * C153717 +
                     (C115640 + C115639 + C115638) * C153865 * C153725 +
                     (C115641 + C115642 + C115643) * C153865 * C82774) *
                        C153783 * C1251 -
                    ((C115563 * C1485 + C116479 + C116479 + C115558 * C1495 +
                      C152059 * C1085 + C116480 + C116480 + C153972 * C1097 +
                      C152071 * C331 + C116481 + C116481 + C153965 * C355) *
                         C153865 * C82774 +
                     (C116492 + C116491 + C116490) * C153865 * C153725 +
                     C116486 * C153717) *
                        C153783 * C153819) *
                       C1255)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  (((C152071 * C136 + C115566 + C115566 + C153965 * C152 +
                     C152059 * C556 + C115567 + C115567 + C153972 * C580 +
                     C115563 * C557 + C115568 + C115568 + C115558 * C581) *
                        C153865 * C153717 +
                    (C115632 + C115633 + C115634) * C153865 * C153725 +
                    C115648 * C82774) *
                       C153783 * C1338 -
                   (C116486 * C82774 +
                    (C115943 + C115944 + C115945) * C153865 * C153725 +
                    (C115563 * C1489 + C115886 + C115886 + C115558 * C1499 +
                     C152059 * C1081 + C115887 + C115887 + C153972 * C1093 +
                     C152071 * C335 + C115888 + C115888 + C153965 * C359) *
                        C153865 * C153717) *
                       C153783 * C1339 +
                   ((C152071 * C336 + C115889 + C115889 + C153965 * C360 +
                     C152059 * C1920 + C115890 + C115890 + C153972 * C1930 +
                     C115563 * C3369 + C115891 + C115891 + C115558 * C3377) *
                        C153865 * C153717 +
                    (C115946 + C115947 + C115948) * C153865 * C153725 +
                    (C115949 + C115950 + C115951) * C153865 * C82774) *
                       C153783 * C1340 -
                   ((C115563 * C4809 + C117428 + C117428 + C115558 * C4815 +
                     C152059 * C4170 + C117429 + C117429 + C153972 * C4178 +
                     C152071 * C1345 + C117430 + C117430 + C153965 * C1355) *
                        C153865 * C82774 +
                    (C115563 * C4810 + C117431 + C117431 + C115558 * C4816 +
                     C152059 * C4169 + C117432 + C117432 + C153972 * C4177 +
                     C152071 * C1346 + C117433 + C117433 + C153965 * C1356) *
                        C153865 * C153725 +
                    (C115563 * C4811 + C117434 + C117434 + C115558 * C4817 +
                     C152059 * C4168 + C117435 + C117435 + C153972 * C4176 +
                     C152071 * C1347 + C117436 + C117436 + C153965 * C1357) *
                        C153865 * C153717) *
                       C153783 * C1341) *
                  C153748) /
                     (p * q * std::sqrt(p + q));
    d2ee[280] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                  (((((C152071 * C136 + C115566 + C115566 + C153965 * C152 +
                       C152059 * C556 + C115567 + C115567 + C153972 * C580 +
                       C115563 * C557 + C115568 + C115568 + C115558 * C581) *
                          C153865 * C153717 +
                      (C115632 + C115633 + C115634) * C153865 * C153725 +
                      C115648 * C82774) *
                         C2058 -
                     (C116725 * C82774 +
                      (C116245 + C116246 + C116247) * C153865 * C153725 +
                      (C115563 * C2272 + C116188 + C116188 + C115558 * C2282 +
                       C152059 * C557 + C116189 + C116189 + C153972 * C581 +
                       C152071 * C556 + C116190 + C116190 + C153965 * C580) *
                          C153865 * C153717) *
                         C153847) *
                        C154093 +
                    (((C152071 * C1081 + C117022 + C117022 + C153965 * C1093 +
                       C152059 * C1489 + C117023 + C117023 + C153972 * C1499 +
                       C115563 * C6161 + C117024 + C117024 + C115558 * C6173) *
                          C153865 * C153717 +
                      (C117058 + C117059 + C117060) * C153865 * C153725 +
                      (C117061 + C117062 + C117063) * C153865 * C82774) *
                         C153847 -
                     (C116486 * C82774 +
                      (C115943 + C115944 + C115945) * C153865 * C153725 +
                      (C115563 * C1489 + C115886 + C115886 + C115558 * C1499 +
                       C152059 * C1081 + C115887 + C115887 + C153972 * C1093 +
                       C152071 * C335 + C115888 + C115888 + C153965 * C359) *
                          C153865 * C153717) *
                         C2058) *
                        C153819) *
                       C154085 +
                   ((((C116247 + C116246 + C116245) * C153865 * C153717 +
                      (C116244 + C116243 + C116242) * C153865 * C153725 +
                      (C116729 + C116730 + C116731) * C153865 * C82774) *
                         C153847 -
                     (C115649 * C82774 +
                      (C115637 + C115636 + C115635) * C153865 * C153725 +
                      (C115634 + C115633 + C115632) * C153865 * C153717) *
                         C2058) *
                        C154093 +
                    (((C115945 + C115944 + C115943) * C153865 * C153717 +
                      (C115942 + C115941 + C115940) * C153865 * C153725 +
                      (C116490 + C116491 + C116492) * C153865 * C82774) *
                         C2058 -
                     ((C115563 * C8529 + C117043 + C117043 + C115558 * C8531 +
                       C152059 * C1486 + C117044 + C117044 + C153972 * C1496 +
                       C152071 * C1084 + C117045 + C117045 + C153965 * C1096) *
                          C153865 * C82774 +
                      (C117063 + C117062 + C117061) * C153865 * C153725 +
                      (C117060 + C117059 + C117058) * C153865 * C153717) *
                         C153847) *
                        C153819) *
                       C153754)) /
                 (p * q * std::sqrt(p + q));
    d2ee[281] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                  ((((C152071 * C136 + C115566 + C115566 + C153965 * C152 +
                      C152059 * C556 + C115567 + C115567 + C153972 * C580 +
                      C115563 * C557 + C115568 + C115568 + C115558 * C581) *
                         C153865 * C153717 +
                     (C115632 + C115633 + C115634) * C153865 * C153725 +
                     C115648 * C82774) *
                        C154166 -
                    (C116725 * C82774 +
                     (C116245 + C116246 + C116247) * C153865 * C153725 +
                     (C115563 * C2272 + C116188 + C116188 + C115558 * C2282 +
                      C152059 * C557 + C116189 + C116189 + C153972 * C581 +
                      C152071 * C556 + C116190 + C116190 + C153965 * C580) *
                         C153865 * C153717) *
                        C154167 +
                    ((C152071 * C557 + C116191 + C116191 + C153965 * C581 +
                      C152059 * C2272 + C116192 + C116192 + C153972 * C2282 +
                      C115563 * C7665 + C116193 + C116193 + C115558 * C7673) *
                         C153865 * C153717 +
                     (C116248 + C116249 + C116250) * C153865 * C153725 +
                     (C116251 + C116252 + C116253) * C153865 * C82774) *
                        C2574) *
                       C154093 +
                   (((C152071 * C1081 + C117022 + C117022 + C153965 * C1093 +
                      C152059 * C1489 + C117023 + C117023 + C153972 * C1499 +
                      C115563 * C6161 + C117024 + C117024 + C115558 * C6173) *
                         C153865 * C153717 +
                     (C117058 + C117059 + C117060) * C153865 * C153725 +
                     (C117061 + C117062 + C117063) * C153865 * C82774) *
                        C154167 -
                    (C116486 * C82774 +
                     (C115943 + C115944 + C115945) * C153865 * C153725 +
                     (C115563 * C1489 + C115886 + C115886 + C115558 * C1499 +
                      C152059 * C1081 + C115887 + C115887 + C153972 * C1093 +
                      C152071 * C335 + C115888 + C115888 + C153965 * C359) *
                         C153865 * C153717) *
                        C154166 -
                    ((C115563 * C9165 + C117655 + C117655 + C115558 * C9171 +
                      C152059 * C6157 + C117656 + C117656 + C153972 * C6169 +
                      C152071 * C1487 + C117657 + C117657 + C153965 * C1497) *
                         C153865 * C82774 +
                     (C115563 * C9166 + C117658 + C117658 + C115558 * C9172 +
                      C152059 * C6159 + C117659 + C117659 + C153972 * C6171 +
                      C152071 * C1488 + C117660 + C117660 + C153965 * C1498) *
                         C153865 * C153725 +
                     (C115563 * C9167 + C117661 + C117661 + C115558 * C9173 +
                      C152059 * C6161 + C117662 + C117662 + C153972 * C6173 +
                      C152071 * C1489 + C117663 + C117663 + C153965 * C1499) *
                         C153865 * C153717) *
                        C2574) *
                       C153819) *
                  C153748) /
                 (p * q * std::sqrt(p + q));
    d2ee[282] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C152071 * C136 + C115566 + C115566 + C153965 * C152 +
                      C152059 * C556 + C115567 + C115567 + C153972 * C580 +
                      C115563 * C557 + C115568 + C115568 + C115558 * C581) *
                         C153865 * C153717 +
                     (C115632 + C115633 + C115634) * C153865 * C153725 +
                     C115648 * C82774) *
                        C2058 -
                    (C116725 * C82774 +
                     (C116245 + C116246 + C116247) * C153865 * C153725 +
                     (C115563 * C2272 + C116188 + C116188 + C115558 * C2282 +
                      C152059 * C557 + C116189 + C116189 + C153972 * C581 +
                      C152071 * C556 + C116190 + C116190 + C153965 * C580) *
                         C153865 * C153717) *
                        C153847) *
                       C326 +
                   (((C152071 * C1081 + C117022 + C117022 + C153965 * C1093 +
                      C152059 * C1489 + C117023 + C117023 + C153972 * C1499 +
                      C115563 * C6161 + C117024 + C117024 + C115558 * C6173) *
                         C153865 * C153717 +
                     (C117058 + C117059 + C117060) * C153865 * C153725 +
                     (C117061 + C117062 + C117063) * C153865 * C82774) *
                        C153847 -
                    (C116486 * C82774 +
                     (C115943 + C115944 + C115945) * C153865 * C153725 +
                     (C115563 * C1489 + C115886 + C115886 + C115558 * C1499 +
                      C152059 * C1081 + C115887 + C115887 + C153972 * C1093 +
                      C152071 * C335 + C115888 + C115888 + C153965 * C359) *
                         C153865 * C153717) *
                        C2058) *
                       C327 +
                   (((C152071 * C336 + C115889 + C115889 + C153965 * C360 +
                      C152059 * C1920 + C115890 + C115890 + C153972 * C1930 +
                      C115563 * C3369 + C115891 + C115891 + C115558 * C3377) *
                         C153865 * C153717 +
                     (C115946 + C115947 + C115948) * C153865 * C153725 +
                     (C115949 + C115950 + C115951) * C153865 * C82774) *
                        C2058 -
                    ((C115563 * C6156 + C118390 + C118390 + C115558 * C6168 +
                      C152059 * C3371 + C118391 + C118391 + C153972 * C3379 +
                      C152071 * C1918 + C118392 + C118392 + C153965 * C1928) *
                         C153865 * C82774 +
                     (C115563 * C6158 + C118393 + C118393 + C115558 * C6170 +
                      C152059 * C3370 + C118394 + C118394 + C153972 * C3378 +
                      C152071 * C1919 + C118395 + C118395 + C153965 * C1929) *
                         C153865 * C153725 +
                     (C115563 * C6160 + C118396 + C118396 + C115558 * C6172 +
                      C152059 * C3369 + C118397 + C118397 + C153972 * C3377 +
                      C152071 * C1920 + C118398 + C118398 + C153965 * C1930) *
                         C153865 * C153717) *
                        C153847) *
                       C328) *
                  C153748) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C152071 * C136 + C115566 + C115566 + C153965 * C152 +
                      C152059 * C556 + C115567 + C115567 + C153972 * C580 +
                      C115563 * C557 + C115568 + C115568 + C115558 * C581) *
                         C153865 * C153717 +
                     (C115632 + C115633 + C115634) * C153865 * C153725 +
                     C115648 * C82774) *
                        C2058 -
                    (C116725 * C82774 +
                     (C116245 + C116246 + C116247) * C153865 * C153725 +
                     (C115563 * C2272 + C116188 + C116188 + C115558 * C2282 +
                      C152059 * C557 + C116189 + C116189 + C153972 * C581 +
                      C152071 * C556 + C116190 + C116190 + C153965 * C580) *
                         C153865 * C153717) *
                        C153847) *
                       C153767 * C1253 +
                   (((C116247 + C116246 + C116245) * C153865 * C153717 +
                     (C116244 + C116243 + C116242) * C153865 * C153725 +
                     (C116729 + C116730 + C116731) * C153865 * C82774) *
                        C153847 -
                    (C115649 * C82774 +
                     (C115637 + C115636 + C115635) * C153865 * C153725 +
                     (C115634 + C115633 + C115632) * C153865 * C153717) *
                        C2058) *
                       C153767 * C1254 +
                   ((C115648 * C153717 +
                     (C115640 + C115639 + C115638) * C153865 * C153725 +
                     (C115641 + C115642 + C115643) * C153865 * C82774) *
                        C2058 -
                    ((C115563 * C2268 + C116718 + C116718 + C115558 * C2278 +
                      C152059 * C561 + C116719 + C116719 + C153972 * C585 +
                      C152071 * C552 + C116720 + C116720 + C153965 * C576) *
                         C153865 * C82774 +
                     (C116731 + C116730 + C116729) * C153865 * C153725 +
                     C116725 * C153717) *
                        C153847) *
                       C153767 * C1255)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((C152071 * C136 + C115566 + C115566 + C153965 * C152 +
                     C152059 * C556 + C115567 + C115567 + C153972 * C580 +
                     C115563 * C557 + C115568 + C115568 + C115558 * C581) *
                        C153865 * C153717 +
                    (C115632 + C115633 + C115634) * C153865 * C153725 +
                    C115648 * C82774) *
                       C2264 -
                   (C116725 * C82774 +
                    (C116245 + C116246 + C116247) * C153865 * C153725 +
                    (C115563 * C2272 + C116188 + C116188 + C115558 * C2282 +
                     C152059 * C557 + C116189 + C116189 + C153972 * C581 +
                     C152071 * C556 + C116190 + C116190 + C153965 * C580) *
                        C153865 * C153717) *
                       C2265 +
                   ((C152071 * C557 + C116191 + C116191 + C153965 * C581 +
                     C152059 * C2272 + C116192 + C116192 + C153972 * C2282 +
                     C115563 * C7665 + C116193 + C116193 + C115558 * C7673) *
                        C153865 * C153717 +
                    (C116248 + C116249 + C116250) * C153865 * C153725 +
                    (C116251 + C116252 + C116253) * C153865 * C82774) *
                       C2266 -
                   ((C115563 * C10500 + C118981 + C118981 + C115558 * C10506 +
                     C152059 * C7667 + C118982 + C118982 + C153972 * C7675 +
                     C152071 * C2270 + C118983 + C118983 + C153965 * C2280) *
                        C153865 * C82774 +
                    (C115563 * C10501 + C118984 + C118984 + C115558 * C10507 +
                     C152059 * C7666 + C118985 + C118985 + C153972 * C7674 +
                     C152071 * C2271 + C118986 + C118986 + C153965 * C2281) *
                        C153865 * C153725 +
                    (C115563 * C10502 + C118987 + C118987 + C115558 * C10508 +
                     C152059 * C7665 + C118988 + C118988 + C153972 * C7673 +
                     C152071 * C2272 + C118989 + C118989 + C153965 * C2282) *
                        C153865 * C153717) *
                       C2267) *
                  C153767 * C153748) /
                     (p * q * std::sqrt(p + q));
    d2ee[283] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                  ((((C152071 * C136 + C115566 + C115566 + C153965 * C152 +
                      C152059 * C556 + C115567 + C115567 + C153972 * C580 +
                      C115563 * C557 + C115568 + C115568 + C115558 * C581) *
                         C153865 * C153717 +
                     (C115632 + C115633 + C115634) * C153865 * C153725 +
                     C115648 * C82774) *
                        C154166 -
                    (C116725 * C82774 +
                     (C116245 + C116246 + C116247) * C153865 * C153725 +
                     (C115563 * C2272 + C116188 + C116188 + C115558 * C2282 +
                      C152059 * C557 + C116189 + C116189 + C153972 * C581 +
                      C152071 * C556 + C116190 + C116190 + C153965 * C580) *
                         C153865 * C153717) *
                        C154167 +
                    ((C152071 * C557 + C116191 + C116191 + C153965 * C581 +
                      C152059 * C2272 + C116192 + C116192 + C153972 * C2282 +
                      C115563 * C7665 + C116193 + C116193 + C115558 * C7673) *
                         C153865 * C153717 +
                     (C116248 + C116249 + C116250) * C153865 * C153725 +
                     (C116251 + C116252 + C116253) * C153865 * C82774) *
                        C2574) *
                       C153767 * C154085 +
                   (((C116247 + C116246 + C116245) * C153865 * C153717 +
                     (C116244 + C116243 + C116242) * C153865 * C153725 +
                     (C116729 + C116730 + C116731) * C153865 * C82774) *
                        C154167 -
                    (C115649 * C82774 +
                     (C115637 + C115636 + C115635) * C153865 * C153725 +
                     (C115634 + C115633 + C115632) * C153865 * C153717) *
                        C154166 -
                    ((C115563 * C7668 + C116215 + C116215 + C115558 * C7676 +
                      C152059 * C2269 + C116216 + C116216 + C153972 * C2279 +
                      C152071 * C560 + C116217 + C116217 + C153965 * C584) *
                         C153865 * C82774 +
                     (C116253 + C116252 + C116251) * C153865 * C153725 +
                     (C116250 + C116249 + C116248) * C153865 * C153717) *
                        C2574) *
                       C153767 * C153754)) /
                 (p * q * std::sqrt(p + q));
    d2ee[284] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C152071 * C136 + C115566 + C115566 + C153965 * C152 +
                      C152059 * C556 + C115567 + C115567 + C153972 * C580 +
                      C115563 * C557 + C115568 + C115568 + C115558 * C581) *
                         C153865 * C153717 +
                     (C115632 + C115633 + C115634) * C153865 * C153725 +
                     C115648 * C82774) *
                        C2058 -
                    (C116725 * C82774 +
                     (C116245 + C116246 + C116247) * C153865 * C153725 +
                     (C115563 * C2272 + C116188 + C116188 + C115558 * C2282 +
                      C152059 * C557 + C116189 + C116189 + C153972 * C581 +
                      C152071 * C556 + C116190 + C116190 + C153965 * C580) *
                         C153865 * C153717) *
                        C153847) *
                       C153767 * C1253 +
                   (((C116247 + C116246 + C116245) * C153865 * C153717 +
                     (C116244 + C116243 + C116242) * C153865 * C153725 +
                     (C116729 + C116730 + C116731) * C153865 * C82774) *
                        C153847 -
                    (C115649 * C82774 +
                     (C115637 + C115636 + C115635) * C153865 * C153725 +
                     (C115634 + C115633 + C115632) * C153865 * C153717) *
                        C2058) *
                       C153767 * C1254 +
                   ((C115648 * C153717 +
                     (C115640 + C115639 + C115638) * C153865 * C153725 +
                     (C115641 + C115642 + C115643) * C153865 * C82774) *
                        C2058 -
                    ((C115563 * C2268 + C116718 + C116718 + C115558 * C2278 +
                      C152059 * C561 + C116719 + C116719 + C153972 * C585 +
                      C152071 * C552 + C116720 + C116720 + C153965 * C576) *
                         C153865 * C82774 +
                     (C116731 + C116730 + C116729) * C153865 * C153725 +
                     C116725 * C153717) *
                        C153847) *
                       C153767 * C1255)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C152071 * C136 + C115566 + C115566 + C153965 * C152 +
                      C152059 * C556 + C115567 + C115567 + C153972 * C580 +
                      C115563 * C557 + C115568 + C115568 + C115558 * C581) *
                         C153865 * C153717 +
                     (C115632 + C115633 + C115634) * C153865 * C153725 +
                     C115648 * C82774) *
                        C2058 -
                    (C116725 * C82774 +
                     (C116245 + C116246 + C116247) * C153865 * C153725 +
                     (C115563 * C2272 + C116188 + C116188 + C115558 * C2282 +
                      C152059 * C557 + C116189 + C116189 + C153972 * C581 +
                      C152071 * C556 + C116190 + C116190 + C153965 * C580) *
                         C153865 * C153717) *
                        C153847) *
                       C326 +
                   (((C152071 * C1081 + C117022 + C117022 + C153965 * C1093 +
                      C152059 * C1489 + C117023 + C117023 + C153972 * C1499 +
                      C115563 * C6161 + C117024 + C117024 + C115558 * C6173) *
                         C153865 * C153717 +
                     (C117058 + C117059 + C117060) * C153865 * C153725 +
                     (C117061 + C117062 + C117063) * C153865 * C82774) *
                        C153847 -
                    (C116486 * C82774 +
                     (C115943 + C115944 + C115945) * C153865 * C153725 +
                     (C115563 * C1489 + C115886 + C115886 + C115558 * C1499 +
                      C152059 * C1081 + C115887 + C115887 + C153972 * C1093 +
                      C152071 * C335 + C115888 + C115888 + C153965 * C359) *
                         C153865 * C153717) *
                        C2058) *
                       C327 +
                   (((C152071 * C336 + C115889 + C115889 + C153965 * C360 +
                      C152059 * C1920 + C115890 + C115890 + C153972 * C1930 +
                      C115563 * C3369 + C115891 + C115891 + C115558 * C3377) *
                         C153865 * C153717 +
                     (C115946 + C115947 + C115948) * C153865 * C153725 +
                     (C115949 + C115950 + C115951) * C153865 * C82774) *
                        C2058 -
                    ((C115563 * C6156 + C118390 + C118390 + C115558 * C6168 +
                      C152059 * C3371 + C118391 + C118391 + C153972 * C3379 +
                      C152071 * C1918 + C118392 + C118392 + C153965 * C1928) *
                         C153865 * C82774 +
                     (C115563 * C6158 + C118393 + C118393 + C115558 * C6170 +
                      C152059 * C3370 + C118394 + C118394 + C153972 * C3378 +
                      C152071 * C1919 + C118395 + C118395 + C153965 * C1929) *
                         C153865 * C153725 +
                     (C115563 * C6160 + C118396 + C118396 + C115558 * C6172 +
                      C152059 * C3369 + C118397 + C118397 + C153972 * C3377 +
                      C152071 * C1920 + C118398 + C118398 + C153965 * C1930) *
                         C153865 * C153717) *
                        C153847) *
                       C328) *
                  C153748) /
                     (p * q * std::sqrt(p + q));
    d2ee[285] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
             C97199 + C97199 + C153969 * C580) *
                C153865 * C154187 +
            (C97252 + C97253) * C153865 * C154180 + C97266 * C154161 +
            C97267 * C154108) *
               C153783 * C154093 -
           (C98020 * C154108 + C98021 * C154161 +
            (C97536 + C97537) * C153865 * C154180 +
            (C97195 * C1081 + C97482 + C97482 + C153969 * C1093 +
             C97193 * C335 + C97483 + C97483 + C97191 * C359) *
                C153865 * C154187) *
               C153783 * C153819) *
              C154162 +
          (((C97537 + C97536) * C153865 * C154187 +
            (C97535 + C97534) * C153865 * C154180 +
            (C97533 + C97532) * C153865 * C154161 +
            (C98026 + C98027) * C153865 * C154108) *
               C153783 * C153819 -
           (C97268 * C154108 + C97269 * C154161 +
            (C97255 + C97254) * C153865 * C154180 +
            (C97253 + C97252) * C153865 * C154187) *
               C153783 * C154093) *
              C154163 +
          ((C97266 * C154187 + C97267 * C154180 +
            (C97259 + C97258) * C153865 * C154161 +
            (C97260 + C97261) * C153865 * C154108) *
               C153783 * C154093 -
           ((C97195 * C1086 + C98018 + C98018 + C153969 * C1098 +
             C97193 * C341 + C98019 + C98019 + C97191 * C365) *
                C153865 * C154108 +
            (C98027 + C98026) * C153865 * C154161 + C98020 * C154180 +
            C98021 * C154187) *
               C153783 * C153819) *
              C774)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
              C97199 + C97199 + C153969 * C580) *
                 C154181 +
             (C101439 + C101440) * C154169 + C101451 * C154143) *
                C73969 +
            ((C97252 + C97253) * C154181 + C101388 * C154169 +
             C101389 * C154143) *
                C153722) *
               C153783 * C154093 -
           ((C101452 * C154143 + C101394 * C154169 + C101395 * C154181) *
                C153722 +
            ((C101445 + C101446) * C154143 + (C101442 + C101441) * C154169 +
             (C101440 + C101439) * C154181) *
                C73969) *
               C153783 * C153819) *
              C154162 +
          (((C101388 * C154181 + C101389 * C154169 + C101453 * C154143) *
                C73969 +
            (C102070 * C154181 + C102071 * C154169 +
             (C101449 + C101450) * C154143) *
                C153722) *
               C153783 * C153819 -
           ((C101412 * C154143 + C98013 * C154169 +
             (C97255 + C97254) * C154181) *
                C153722 +
            (C101394 * C154143 + C101395 * C154169 +
             (C97253 + C97252) * C154181) *
                C73969) *
               C153783 * C154093) *
              C154163 +
          (((C97262 * C154181 + C102070 * C154169 + C102071 * C154143) *
                C73969 +
            (C97263 * C154181 + (C97533 + C97532) * C154169 +
             (C97542 + C97543) * C154143) *
                C153722) *
               C153783 * C154093 -
           (((C97195 * C4171 + C98860 + C98860 + C153969 * C4179 +
              C97193 * C1344 + C98861 + C98861 + C97191 * C1354) *
                 C154143 +
             (C97543 + C97542) * C154169 + C98012 * C154181) *
                C153722 +
            ((C101450 + C101449) * C154143 + C101412 * C154169 +
             C98013 * C154181) *
                C73969) *
               C153783 * C153819) *
              C774)) /
            (p * q * std::sqrt(p + q));
    d2ee[286] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
              C97199 + C97199 + C153969 * C580) *
                 C153865 * C154187 +
             (C97252 + C97253) * C153865 * C154180 + C97266 * C154161 +
             C97267 * C154108) *
                C154094 -
            (C98230 * C154108 + C98231 * C154161 +
             (C97810 + C97811) * C153865 * C154180 +
             (C97195 * C557 + C97756 + C97756 + C153969 * C581 + C97193 * C556 +
              C97757 + C97757 + C97191 * C580) *
                 C153865 * C154187) *
                C153847) *
               C154093 +
           (((C97193 * C1081 + C98496 + C98496 + C97191 * C1093 +
              C97195 * C1489 + C98497 + C98497 + C153969 * C1499) *
                 C153865 * C154187 +
             (C98530 + C98531) * C153865 * C154180 +
             (C98532 + C98533) * C153865 * C154161 +
             (C98534 + C98535) * C153865 * C154108) *
                C153847 -
            (C98020 * C154108 + C98021 * C154161 +
             (C97536 + C97537) * C153865 * C154180 +
             (C97195 * C1081 + C97482 + C97482 + C153969 * C1093 +
              C97193 * C335 + C97483 + C97483 + C97191 * C359) *
                 C153865 * C154187) *
                C154094) *
               C153819) *
              C329 +
          ((((C97811 + C97810) * C153865 * C154187 +
             (C97809 + C97808) * C153865 * C154180 +
             (C97807 + C97806) * C153865 * C154161 +
             (C98236 + C98237) * C153865 * C154108) *
                C153847 -
            (C97268 * C154108 + C97269 * C154161 +
             (C97255 + C97254) * C153865 * C154180 +
             (C97253 + C97252) * C153865 * C154187) *
                C154094) *
               C154093 +
           (((C97537 + C97536) * C153865 * C154187 +
             (C97535 + C97534) * C153865 * C154180 +
             (C97533 + C97532) * C153865 * C154161 +
             (C98026 + C98027) * C153865 * C154108) *
                C154094 -
            ((C97195 * C1485 + C98516 + C98516 + C153969 * C1495 +
              C97193 * C1085 + C98517 + C98517 + C97191 * C1097) *
                 C153865 * C154108 +
             (C98535 + C98534) * C153865 * C154161 +
             (C98533 + C98532) * C153865 * C154180 +
             (C98531 + C98530) * C153865 * C154187) *
                C153847) *
               C153819) *
              C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
               C97199 + C97199 + C153969 * C580) *
                  C154181 +
              (C101439 + C101440) * C154169 + C101451 * C154143) *
                 C73969 +
             ((C97252 + C97253) * C154181 + C101388 * C154169 +
              C101389 * C154143) *
                 C153722) *
                C154094 -
            ((C102758 * C154143 + C102759 * C154169 +
              (C97810 + C97811) * C154181) *
                 C153722 +
             ((C102792 + C102793) * C154143 + (C102794 + C102795) * C154169 +
              (C97195 * C557 + C97756 + C97756 + C153969 * C581 +
               C97193 * C556 + C97757 + C97757 + C97191 * C580) *
                  C154181) *
                 C73969) *
                C153847) *
               C154093 +
           ((((C102795 + C102794) * C154181 + (C102793 + C102792) * C154169 +
              (C97193 * C4168 + C102768 + C102768 + C97191 * C4176 +
               C97195 * C4811 + C102769 + C102769 + C153969 * C4817) *
                  C154143) *
                 C73969 +
             (C102770 * C154181 + C102771 * C154169 +
              (C102796 + C102797) * C154143) *
                 C153722) *
                C153847 -
            ((C101452 * C154143 + C101394 * C154169 + C101395 * C154181) *
                 C153722 +
             ((C101445 + C101446) * C154143 + (C101442 + C101441) * C154169 +
              (C101440 + C101439) * C154181) *
                 C73969) *
                C154094) *
               C153819) *
              C329 +
          (((((C97811 + C97810) * C154181 + C102770 * C154169 +
              C102771 * C154143) *
                 C73969 +
             ((C97809 + C97808) * C154181 + (C98532 + C98533) * C154169 +
              (C102370 + C102371) * C154143) *
                 C153722) *
                C153847 -
            ((C101412 * C154143 + C98013 * C154169 +
              (C97255 + C97254) * C154181) *
                 C153722 +
             (C101394 * C154143 + C101395 * C154169 +
              (C97253 + C97252) * C154181) *
                 C73969) *
                C154094) *
               C154093 +
           (((C101388 * C154181 + C101389 * C154169 + C101453 * C154143) *
                 C73969 +
             (C102070 * C154181 + C102071 * C154169 +
              (C101449 + C101450) * C154143) *
                 C153722) *
                C154094 -
            (((C97195 * C4809 + C102778 + C102778 + C153969 * C4815 +
               C97193 * C4170 + C102779 + C102779 + C97191 * C4178) *
                  C154143 +
              (C102371 + C102370) * C154169 + (C98533 + C98532) * C154181) *
                 C153722 +
             ((C102797 + C102796) * C154143 + C102758 * C154169 +
              C102759 * C154181) *
                 C73969) *
                C153847) *
               C153819) *
              C153754)) /
            (p * q * std::sqrt(p + q));
    d2ee[287] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
             C97199 + C97199 + C153969 * C580) *
                C153865 * C154187 +
            (C97252 + C97253) * C153865 * C154180 + C97266 * C154161 +
            C97267 * C154108) *
               C153783 * C326 -
           ((C97532 + C97533) * C153865 * C154108 +
            (C97534 + C97535) * C153865 * C154161 +
            (C97536 + C97537) * C153865 * C154180 +
            (C97195 * C1081 + C97482 + C97482 + C153969 * C1093 +
             C97193 * C335 + C97483 + C97483 + C97191 * C359) *
                C153865 * C154187) *
               C153783 * C327 +
           ((C97193 * C336 + C97484 + C97484 + C97191 * C360 + C97195 * C1920 +
             C97485 + C97485 + C153969 * C1930) *
                C153865 * C154187 +
            (C97538 + C97539) * C153865 * C154180 +
            (C97540 + C97541) * C153865 * C154161 +
            (C97542 + C97543) * C153865 * C154108) *
               C153783 * C328) *
              C329 +
          (((C97537 + C97536) * C153865 * C154187 +
            (C97535 + C97534) * C153865 * C154180 +
            (C97533 + C97532) * C153865 * C154161 +
            (C97193 * C331 + C97504 + C97504 + C97191 * C355 + C97195 * C1085 +
             C97505 + C97505 + C153969 * C1097) *
                C153865 * C154108) *
               C153783 * C327 -
           (C97268 * C154108 + C97269 * C154161 +
            (C97255 + C97254) * C153865 * C154180 +
            (C97253 + C97252) * C153865 * C154187) *
               C153783 * C326 -
           ((C97195 * C1916 + C97506 + C97506 + C153969 * C1926 +
             C97193 * C340 + C97507 + C97507 + C97191 * C364) *
                C153865 * C154108 +
            (C97543 + C97542) * C153865 * C154161 +
            (C97541 + C97540) * C153865 * C154180 +
            (C97539 + C97538) * C153865 * C154187) *
               C153783 * C328) *
              C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
            C97199 + C97199 + C153969 * C580) *
               C153865 * C154187 +
           (C97252 + C97253) * C153865 * C154180 + C97266 * C154161 +
           C97267 * C154108) *
              C153783 * C153767 * C130 -
          (C97268 * C154108 + C97269 * C154161 +
           (C97255 + C97254) * C153865 * C154180 +
           (C97253 + C97252) * C153865 * C154187) *
              C153783 * C153767 * C131 +
          (C97266 * C154187 + C97267 * C154180 +
           (C97259 + C97258) * C153865 * C154161 +
           (C97260 + C97261) * C153865 * C154108) *
              C153783 * C153767 * C132 -
          ((C97195 * C909 + C97230 + C97230 + C153969 * C911 + C97193 * C142 +
            C97231 + C97231 + C97191 * C158) *
               C153865 * C154108 +
           (C97261 + C97260) * C153865 * C154161 + C97268 * C154180 +
           C97269 * C154187) *
              C153783 * C153767 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
             C97199 + C97199 + C153969 * C580) *
                C153865 * C154187 +
            (C97252 + C97253) * C153865 * C154180 + C97266 * C154161 +
            C97267 * C154108) *
               C549 -
           ((C97806 + C97807) * C153865 * C154108 +
            (C97808 + C97809) * C153865 * C154161 +
            (C97810 + C97811) * C153865 * C154180 +
            (C97195 * C557 + C97756 + C97756 + C153969 * C581 + C97193 * C556 +
             C97757 + C97757 + C97191 * C580) *
                C153865 * C154187) *
               C550 +
           ((C97193 * C557 + C97758 + C97758 + C97191 * C581 + C97195 * C2272 +
             C97759 + C97759 + C153969 * C2282) *
                C153865 * C154187 +
            (C97812 + C97813) * C153865 * C154180 +
            (C97814 + C97815) * C153865 * C154161 +
            (C97816 + C97817) * C153865 * C154108) *
               C551) *
              C153767 * C329 +
          (((C97811 + C97810) * C153865 * C154187 +
            (C97809 + C97808) * C153865 * C154180 +
            (C97807 + C97806) * C153865 * C154161 +
            (C97193 * C552 + C97778 + C97778 + C97191 * C576 + C97195 * C561 +
             C97779 + C97779 + C153969 * C585) *
                C153865 * C154108) *
               C550 -
           (C97268 * C154108 + C97269 * C154161 +
            (C97255 + C97254) * C153865 * C154180 +
            (C97253 + C97252) * C153865 * C154187) *
               C549 -
           ((C97195 * C2268 + C97780 + C97780 + C153969 * C2278 +
             C97193 * C561 + C97781 + C97781 + C97191 * C585) *
                C153865 * C154108 +
            (C97817 + C97816) * C153865 * C154161 +
            (C97815 + C97814) * C153865 * C154180 +
            (C97813 + C97812) * C153865 * C154187) *
               C551) *
              C153767 * C153754)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
             C97199 + C97199 + C153969 * C580) *
                C154181 +
            (C97193 * C335 + C97483 + C97483 + C97191 * C359 + C97195 * C1081 +
             C97482 + C97482 + C153969 * C1093) *
                C154169 +
            (C97193 * C336 + C97484 + C97484 + C97191 * C360 + C97195 * C1920 +
             C97485 + C97485 + C153969 * C1930) *
                C154143) *
               C73969 +
           ((C97252 + C97253) * C154181 + (C97537 + C97536) * C154169 +
            (C97538 + C97539) * C154143) *
               C153722) *
              C153783 * C153767 * C130 -
          (((C97541 + C97540) * C154143 + C98013 * C154169 +
            (C97255 + C97254) * C154181) *
               C153722 +
           ((C97539 + C97538) * C154143 + (C97536 + C97537) * C154169 +
            (C97253 + C97252) * C154181) *
               C73969) *
              C153783 * C153767 * C131 +
          ((C97262 * C154181 + (C97535 + C97534) * C154169 +
            (C97540 + C97541) * C154143) *
               C73969 +
           (C97263 * C154181 + (C97533 + C97532) * C154169 +
            (C97542 + C97543) * C154143) *
               C153722) *
              C153783 * C153767 * C132 -
          (((C97195 * C1916 + C97506 + C97506 + C153969 * C1926 +
             C97193 * C340 + C97507 + C97507 + C97191 * C364) *
                C154143 +
            (C98027 + C98026) * C154169 + C97264 * C154181) *
               C153722 +
           ((C97543 + C97542) * C154143 + C98012 * C154169 + C97265 * C154181) *
               C73969) *
              C153783 * C153767 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
              C97199 + C97199 + C153969 * C580) *
                 C154181 +
             (C101439 + C101440) * C154169 + C101451 * C154143) *
                C73969 +
            ((C97252 + C97253) * C154181 + C101388 * C154169 +
             C101389 * C154143) *
                C153722) *
               C153783 * C326 -
           ((C101452 * C154143 + C101394 * C154169 + C101395 * C154181) *
                C153722 +
            ((C101445 + C101446) * C154143 + (C101442 + C101441) * C154169 +
             (C101440 + C101439) * C154181) *
                C73969) *
               C153783 * C327 +
           ((C101451 * C154181 + (C101446 + C101445) * C154169 +
             (C97193 * C3083 + C101400 + C101400 + C97191 * C3091 +
              C97195 * C5559 + C101401 + C101401 + C153969 * C5565) *
                 C154143) *
                C73969 +
            (C101389 * C154181 + C101453 * C154169 +
             (C101447 + C101448) * C154143) *
                C153722) *
               C153783 * C328) *
              C329 +
          (((C101388 * C154181 + C101389 * C154169 + C101453 * C154143) *
                C73969 +
            ((C97535 + C97534) * C154181 + (C97540 + C97541) * C154169 +
             (C101449 + C101450) * C154143) *
                C153722) *
               C153783 * C327 -
           ((C101412 * C154143 + C98013 * C154169 +
             (C97255 + C97254) * C154181) *
                C153722 +
            (C101394 * C154143 + C101395 * C154169 +
             (C97253 + C97252) * C154181) *
                C73969) *
               C153783 * C326 -
           (((C97195 * C5557 + C101413 + C101413 + C153969 * C5563 +
              C97193 * C3085 + C101414 + C101414 + C97191 * C3093) *
                 C154143 +
             (C101450 + C101449) * C154169 + C101412 * C154181) *
                C153722 +
            ((C101448 + C101447) * C154143 + C101452 * C154169 +
             C101394 * C154181) *
                C73969) *
               C153783 * C328) *
              C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
              C97199 + C97199 + C153969 * C580) *
                 C154181 +
             (C101439 + C101440) * C154169 + C101451 * C154143) *
                C73969 +
            ((C97252 + C97253) * C154181 + C101388 * C154169 +
             C101389 * C154143) *
                C153722) *
               C549 -
           (((C101774 + C101775) * C154143 + (C98531 + C98530) * C154169 +
             (C97810 + C97811) * C154181) *
                C153722 +
            ((C97195 * C3369 + C99722 + C99722 + C153969 * C3377 +
              C97193 * C1920 + C99723 + C99723 + C97191 * C1930) *
                 C154143 +
             (C97195 * C1489 + C98497 + C98497 + C153969 * C1499 +
              C97193 * C1081 + C98496 + C98496 + C97191 * C1093) *
                 C154169 +
             (C97195 * C557 + C97756 + C97756 + C153969 * C581 + C97193 * C556 +
              C97757 + C97757 + C97191 * C580) *
                 C154181) *
                C73969) *
               C550 +
           (((C97193 * C557 + C97758 + C97758 + C97191 * C581 + C97195 * C2272 +
              C97759 + C97759 + C153969 * C2282) *
                 C154181 +
             (C97193 * C1489 + C99069 + C99069 + C97191 * C1499 +
              C97195 * C6161 + C99068 + C99068 + C153969 * C6173) *
                 C154169 +
             (C97193 * C3369 + C101748 + C101748 + C97191 * C3377 +
              C97195 * C6160 + C101749 + C101749 + C153969 * C6172) *
                 C154143) *
                C73969 +
            ((C97812 + C97813) * C154181 + (C101776 + C101777) * C154169 +
             (C101778 + C101779) * C154143) *
                C153722) *
               C551) *
              C153767 * C329 +
          ((((C97811 + C97810) * C154181 + (C98530 + C98531) * C154169 +
             (C101775 + C101774) * C154143) *
                C73969 +
            ((C97809 + C97808) * C154181 + (C98532 + C98533) * C154169 +
             (C97193 * C1918 + C99719 + C99719 + C97191 * C1928 +
              C97195 * C3371 + C99718 + C99718 + C153969 * C3379) *
                 C154143) *
                C153722) *
               C550 -
           ((C101412 * C154143 + C98013 * C154169 +
             (C97255 + C97254) * C154181) *
                C153722 +
            (C101394 * C154143 + C101395 * C154169 +
             (C97253 + C97252) * C154181) *
                C73969) *
               C549 -
           (((C97195 * C6156 + C101760 + C101760 + C153969 * C6168 +
              C97193 * C3371 + C101761 + C101761 + C97191 * C3379) *
                 C154143 +
             (C97195 * C6157 + C99064 + C99064 + C153969 * C6169 +
              C97193 * C1487 + C99065 + C99065 + C97191 * C1497) *
                 C154169 +
             (C97815 + C97814) * C154181) *
                C153722 +
            ((C101779 + C101778) * C154143 + (C101777 + C101776) * C154169 +
             (C97813 + C97812) * C154181) *
                C73969) *
               C551) *
              C153767 * C153754)) /
            (p * q * std::sqrt(p + q));
    d2ee[288] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
             C97199 + C97199 + C153969 * C580) *
                C153865 * C154187 +
            (C97252 + C97253) * C153865 * C154180 + C97266 * C154161 +
            C97267 * C154108) *
               C154094 -
           (C98230 * C154108 + C98231 * C154161 +
            (C97810 + C97811) * C153865 * C154180 +
            (C97195 * C557 + C97756 + C97756 + C153969 * C581 + C97193 * C556 +
             C97757 + C97757 + C97191 * C580) *
                C153865 * C154187) *
               C153847) *
              C153767 * C154162 +
          (((C97811 + C97810) * C153865 * C154187 +
            (C97809 + C97808) * C153865 * C154180 +
            (C97807 + C97806) * C153865 * C154161 +
            (C98236 + C98237) * C153865 * C154108) *
               C153847 -
           (C97268 * C154108 + C97269 * C154161 +
            (C97255 + C97254) * C153865 * C154180 +
            (C97253 + C97252) * C153865 * C154187) *
               C154094) *
              C153767 * C154163 +
          ((C97266 * C154187 + C97267 * C154180 +
            (C97259 + C97258) * C153865 * C154161 +
            (C97260 + C97261) * C153865 * C154108) *
               C154094 -
           ((C97195 * C563 + C98228 + C98228 + C153969 * C587 + C97193 * C562 +
             C98229 + C98229 + C97191 * C586) *
                C153865 * C154108 +
            (C98237 + C98236) * C153865 * C154161 + C98230 * C154180 +
            C98231 * C154187) *
               C153847) *
              C153767 * C774)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
              C97199 + C97199 + C153969 * C580) *
                 C154181 +
             (C101439 + C101440) * C154169 + C101451 * C154143) *
                C73969 +
            ((C97252 + C97253) * C154181 + C101388 * C154169 +
             C101389 * C154143) *
                C153722) *
               C154094 -
           (((C101774 + C101775) * C154143 + (C98531 + C98530) * C154169 +
             (C97810 + C97811) * C154181) *
                C153722 +
            ((C97195 * C3369 + C99722 + C99722 + C153969 * C3377 +
              C97193 * C1920 + C99723 + C99723 + C97191 * C1930) *
                 C154143 +
             (C97195 * C1489 + C98497 + C98497 + C153969 * C1499 +
              C97193 * C1081 + C98496 + C98496 + C97191 * C1093) *
                 C154169 +
             (C97195 * C557 + C97756 + C97756 + C153969 * C581 + C97193 * C556 +
              C97757 + C97757 + C97191 * C580) *
                 C154181) *
                C73969) *
               C153847) *
              C153767 * C154162 +
          ((((C97811 + C97810) * C154181 + (C98530 + C98531) * C154169 +
             (C101775 + C101774) * C154143) *
                C73969 +
            ((C97809 + C97808) * C154181 + (C98532 + C98533) * C154169 +
             (C102370 + C102371) * C154143) *
                C153722) *
               C153847 -
           ((C101412 * C154143 + C98013 * C154169 +
             (C97255 + C97254) * C154181) *
                C153722 +
            (C101394 * C154143 + C101395 * C154169 +
             (C97253 + C97252) * C154181) *
                C73969) *
               C154094) *
              C153767 * C154163 +
          (((C97262 * C154181 + C102070 * C154169 + C102071 * C154143) *
                C73969 +
            (C97263 * C154181 + (C97533 + C97532) * C154169 +
             (C97542 + C97543) * C154143) *
                C153722) *
               C154094 -
           (((C97195 * C3372 + C99716 + C99716 + C153969 * C3380 +
              C97193 * C1917 + C99717 + C99717 + C97191 * C1927) *
                 C154143 +
             (C98535 + C98534) * C154169 + C98222 * C154181) *
                C153722 +
            ((C102371 + C102370) * C154143 + (C98533 + C98532) * C154169 +
             C98223 * C154181) *
                C73969) *
               C153847) *
              C153767 * C774)) /
            (p * q * std::sqrt(p + q));
    d2ee[289] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
            C97199 + C97199 + C153969 * C580) *
               C153865 * C154187 +
           (C97252 + C97253) * C153865 * C154180 + C97266 * C154161 +
           C97267 * C154108) *
              C153783 * C153767 * C130 -
          (C97268 * C154108 + C97269 * C154161 +
           (C97255 + C97254) * C153865 * C154180 +
           (C97253 + C97252) * C153865 * C154187) *
              C153783 * C153767 * C131 +
          (C97266 * C154187 + C97267 * C154180 +
           (C97259 + C97258) * C153865 * C154161 +
           (C97260 + C97261) * C153865 * C154108) *
              C153783 * C153767 * C132 -
          ((C97195 * C909 + C97230 + C97230 + C153969 * C911 + C97193 * C142 +
            C97231 + C97231 + C97191 * C158) *
               C153865 * C154108 +
           (C97261 + C97260) * C153865 * C154161 + C97268 * C154180 +
           C97269 * C154187) *
              C153783 * C153767 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
             C97199 + C97199 + C153969 * C580) *
                C153865 * C154187 +
            (C97252 + C97253) * C153865 * C154180 + C97266 * C154161 +
            C97267 * C154108) *
               C153783 * C326 -
           ((C97532 + C97533) * C153865 * C154108 +
            (C97534 + C97535) * C153865 * C154161 +
            (C97536 + C97537) * C153865 * C154180 +
            (C97195 * C1081 + C97482 + C97482 + C153969 * C1093 +
             C97193 * C335 + C97483 + C97483 + C97191 * C359) *
                C153865 * C154187) *
               C153783 * C327 +
           ((C97193 * C336 + C97484 + C97484 + C97191 * C360 + C97195 * C1920 +
             C97485 + C97485 + C153969 * C1930) *
                C153865 * C154187 +
            (C97538 + C97539) * C153865 * C154180 +
            (C97540 + C97541) * C153865 * C154161 +
            (C97542 + C97543) * C153865 * C154108) *
               C153783 * C328) *
              C329 +
          (((C97537 + C97536) * C153865 * C154187 +
            (C97535 + C97534) * C153865 * C154180 +
            (C97533 + C97532) * C153865 * C154161 +
            (C97193 * C331 + C97504 + C97504 + C97191 * C355 + C97195 * C1085 +
             C97505 + C97505 + C153969 * C1097) *
                C153865 * C154108) *
               C153783 * C327 -
           (C97268 * C154108 + C97269 * C154161 +
            (C97255 + C97254) * C153865 * C154180 +
            (C97253 + C97252) * C153865 * C154187) *
               C153783 * C326 -
           ((C97195 * C1916 + C97506 + C97506 + C153969 * C1926 +
             C97193 * C340 + C97507 + C97507 + C97191 * C364) *
                C153865 * C154108 +
            (C97543 + C97542) * C153865 * C154161 +
            (C97541 + C97540) * C153865 * C154180 +
            (C97539 + C97538) * C153865 * C154187) *
               C153783 * C328) *
              C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
             C97199 + C97199 + C153969 * C580) *
                C154181 +
            (C97193 * C335 + C97483 + C97483 + C97191 * C359 + C97195 * C1081 +
             C97482 + C97482 + C153969 * C1093) *
                C154169 +
            (C97193 * C336 + C97484 + C97484 + C97191 * C360 + C97195 * C1920 +
             C97485 + C97485 + C153969 * C1930) *
                C154143) *
               C73969 +
           ((C97252 + C97253) * C154181 + (C97537 + C97536) * C154169 +
            (C97538 + C97539) * C154143) *
               C153722) *
              C153783 * C153767 * C130 -
          (((C97541 + C97540) * C154143 + C98013 * C154169 +
            (C97255 + C97254) * C154181) *
               C153722 +
           ((C97539 + C97538) * C154143 + (C97536 + C97537) * C154169 +
            (C97253 + C97252) * C154181) *
               C73969) *
              C153783 * C153767 * C131 +
          ((C97262 * C154181 + (C97535 + C97534) * C154169 +
            (C97540 + C97541) * C154143) *
               C73969 +
           (C97263 * C154181 + (C97533 + C97532) * C154169 +
            (C97542 + C97543) * C154143) *
               C153722) *
              C153783 * C153767 * C132 -
          (((C97195 * C1916 + C97506 + C97506 + C153969 * C1926 +
             C97193 * C340 + C97507 + C97507 + C97191 * C364) *
                C154143 +
            (C98027 + C98026) * C154169 + C97264 * C154181) *
               C153722 +
           ((C97543 + C97542) * C154143 + C98012 * C154169 + C97265 * C154181) *
               C73969) *
              C153783 * C153767 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
              C97199 + C97199 + C153969 * C580) *
                 C154181 +
             (C101439 + C101440) * C154169 + C101451 * C154143) *
                C73969 +
            ((C97252 + C97253) * C154181 + C101388 * C154169 +
             C101389 * C154143) *
                C153722) *
               C153783 * C326 -
           ((C101452 * C154143 + C101394 * C154169 + C101395 * C154181) *
                C153722 +
            ((C101445 + C101446) * C154143 + (C101442 + C101441) * C154169 +
             (C101440 + C101439) * C154181) *
                C73969) *
               C153783 * C327 +
           ((C101451 * C154181 + (C101446 + C101445) * C154169 +
             (C97193 * C3083 + C101400 + C101400 + C97191 * C3091 +
              C97195 * C5559 + C101401 + C101401 + C153969 * C5565) *
                 C154143) *
                C73969 +
            (C101389 * C154181 + C101453 * C154169 +
             (C101447 + C101448) * C154143) *
                C153722) *
               C153783 * C328) *
              C329 +
          (((C101388 * C154181 + C101389 * C154169 + C101453 * C154143) *
                C73969 +
            ((C97535 + C97534) * C154181 + (C97540 + C97541) * C154169 +
             (C101449 + C101450) * C154143) *
                C153722) *
               C153783 * C327 -
           ((C101412 * C154143 + C98013 * C154169 +
             (C97255 + C97254) * C154181) *
                C153722 +
            (C101394 * C154143 + C101395 * C154169 +
             (C97253 + C97252) * C154181) *
                C73969) *
               C153783 * C326 -
           (((C97195 * C5557 + C101413 + C101413 + C153969 * C5563 +
              C97193 * C3085 + C101414 + C101414 + C97191 * C3093) *
                 C154143 +
             (C101450 + C101449) * C154169 + C101412 * C154181) *
                C153722 +
            ((C101448 + C101447) * C154143 + C101452 * C154169 +
             C101394 * C154181) *
                C73969) *
               C153783 * C328) *
              C153754)) /
            (p * q * std::sqrt(p + q));
    d2ee[290] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
             C97199 + C97199 + C153969 * C580) *
                C153865 * C154187 +
            (C97252 + C97253) * C153865 * C154180 + C97266 * C154161 +
            C97267 * C154108) *
               C153783 * C154164 -
           (C98020 * C154108 + C98021 * C154161 +
            (C97536 + C97537) * C153865 * C154180 +
            (C97195 * C1081 + C97482 + C97482 + C153969 * C1093 +
             C97193 * C335 + C97483 + C97483 + C97191 * C359) *
                C153865 * C154187) *
               C153783 * C154165 +
           ((C97193 * C336 + C97484 + C97484 + C97191 * C360 + C97195 * C1920 +
             C97485 + C97485 + C153969 * C1930) *
                C153865 * C154187 +
            (C97538 + C97539) * C153865 * C154180 +
            (C97540 + C97541) * C153865 * C154161 +
            (C97542 + C97543) * C153865 * C154108) *
               C153783 * C1629) *
              C154085 +
          (((C97537 + C97536) * C153865 * C154187 +
            (C97535 + C97534) * C153865 * C154180 +
            (C97533 + C97532) * C153865 * C154161 +
            (C98026 + C98027) * C153865 * C154108) *
               C153783 * C154165 -
           (C97268 * C154108 + C97269 * C154161 +
            (C97255 + C97254) * C153865 * C154180 +
            (C97253 + C97252) * C153865 * C154187) *
               C153783 * C154164 -
           ((C97195 * C1916 + C97506 + C97506 + C153969 * C1926 +
             C97193 * C340 + C97507 + C97507 + C97191 * C364) *
                C153865 * C154108 +
            (C97543 + C97542) * C153865 * C154161 +
            (C97541 + C97540) * C153865 * C154180 +
            (C97539 + C97538) * C153865 * C154187) *
               C153783 * C1629) *
              C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
              C97199 + C97199 + C153969 * C580) *
                 C154181 +
             (C101439 + C101440) * C154169 + C101451 * C154143) *
                C73969 +
            ((C97252 + C97253) * C154181 + C101388 * C154169 +
             C101389 * C154143) *
                C153722) *
               C153783 * C154164 -
           ((C101452 * C154143 + C101394 * C154169 + C101395 * C154181) *
                C153722 +
            (C103282 * C154143 + (C101442 + C101441) * C154169 +
             (C101440 + C101439) * C154181) *
                C73969) *
               C153783 * C154165 +
           ((C101451 * C154181 + (C101446 + C101445) * C154169 +
             (C103295 + C103296) * C154143) *
                C73969 +
            (C101389 * C154181 + C101453 * C154169 +
             (C101447 + C101448) * C154143) *
                C153722) *
               C153783 * C1629) *
              C154085 +
          (((C101388 * C154181 + C101389 * C154169 + C101453 * C154143) *
                C73969 +
            (C102070 * C154181 + C102071 * C154169 +
             (C101449 + C101450) * C154143) *
                C153722) *
               C153783 * C154165 -
           ((C101412 * C154143 + C98013 * C154169 +
             (C97255 + C97254) * C154181) *
                C153722 +
            (C101394 * C154143 + C101395 * C154169 +
             (C97253 + C97252) * C154181) *
                C73969) *
               C153783 * C154164 -
           (((C97195 * C5557 + C101413 + C101413 + C153969 * C5563 +
              C97193 * C3085 + C101414 + C101414 + C97191 * C3093) *
                 C154143 +
             (C101450 + C101449) * C154169 + C101412 * C154181) *
                C153722 +
            ((C101448 + C101447) * C154143 + C101452 * C154169 +
             C101394 * C154181) *
                C73969) *
               C153783 * C1629) *
              C153754)) /
            (p * q * std::sqrt(p + q));
    d2ee[291] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
             C97199 + C97199 + C153969 * C580) *
                C153865 * C154187 +
            (C97252 + C97253) * C153865 * C154180 + C97266 * C154161 +
            C97267 * C154108) *
               C154094 -
           (C98230 * C154108 + C98231 * C154161 +
            (C97810 + C97811) * C153865 * C154180 +
            (C97195 * C557 + C97756 + C97756 + C153969 * C581 + C97193 * C556 +
             C97757 + C97757 + C97191 * C580) *
                C153865 * C154187) *
               C153847) *
              C154164 +
          (((C97193 * C1081 + C98496 + C98496 + C97191 * C1093 +
             C97195 * C1489 + C98497 + C98497 + C153969 * C1499) *
                C153865 * C154187 +
            (C98530 + C98531) * C153865 * C154180 +
            (C98532 + C98533) * C153865 * C154161 +
            (C98534 + C98535) * C153865 * C154108) *
               C153847 -
           (C98020 * C154108 + C98021 * C154161 +
            (C97536 + C97537) * C153865 * C154180 +
            (C97195 * C1081 + C97482 + C97482 + C153969 * C1093 +
             C97193 * C335 + C97483 + C97483 + C97191 * C359) *
                C153865 * C154187) *
               C154094) *
              C154165 +
          (((C97193 * C336 + C97484 + C97484 + C97191 * C360 + C97195 * C1920 +
             C97485 + C97485 + C153969 * C1930) *
                C153865 * C154187 +
            (C97538 + C97539) * C153865 * C154180 +
            (C97540 + C97541) * C153865 * C154161 +
            (C97542 + C97543) * C153865 * C154108) *
               C154094 -
           ((C97195 * C3372 + C99716 + C99716 + C153969 * C3380 +
             C97193 * C1917 + C99717 + C99717 + C97191 * C1927) *
                C153865 * C154108 +
            (C97195 * C3371 + C99718 + C99718 + C153969 * C3379 +
             C97193 * C1918 + C99719 + C99719 + C97191 * C1928) *
                C153865 * C154161 +
            (C97195 * C3370 + C99720 + C99720 + C153969 * C3378 +
             C97193 * C1919 + C99721 + C99721 + C97191 * C1929) *
                C153865 * C154180 +
            (C97195 * C3369 + C99722 + C99722 + C153969 * C3377 +
             C97193 * C1920 + C99723 + C99723 + C97191 * C1930) *
                C153865 * C154187) *
               C153847) *
              C1629) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
              C97199 + C97199 + C153969 * C580) *
                 C154181 +
             (C101439 + C101440) * C154169 + C101451 * C154143) *
                C73969 +
            ((C97252 + C97253) * C154181 + C101388 * C154169 +
             C101389 * C154143) *
                C153722) *
               C154094 -
           ((C102758 * C154143 + C102759 * C154169 +
             (C97810 + C97811) * C154181) *
                C153722 +
            (C104577 * C154143 + (C102794 + C102795) * C154169 +
             (C97195 * C557 + C97756 + C97756 + C153969 * C581 + C97193 * C556 +
              C97757 + C97757 + C97191 * C580) *
                 C154181) *
                C73969) *
               C153847) *
              C154164 +
          ((((C102795 + C102794) * C154181 + (C102793 + C102792) * C154169 +
             (C104590 + C104591) * C154143) *
                C73969 +
            (C102770 * C154181 + C102771 * C154169 +
             (C102796 + C102797) * C154143) *
                C153722) *
               C153847 -
           ((C101452 * C154143 + C101394 * C154169 + C101395 * C154181) *
                C153722 +
            (C103282 * C154143 + (C101442 + C101441) * C154169 +
             (C101440 + C101439) * C154181) *
                C73969) *
               C154094) *
              C154165 +
          (((C101451 * C154181 + (C101446 + C101445) * C154169 +
             (C103295 + C103296) * C154143) *
                C73969 +
            (C101389 * C154181 + C101453 * C154169 +
             (C101447 + C101448) * C154143) *
                C153722) *
               C154094 -
           (((C97195 * C28359 + C104582 + C104582 + C153969 * C28363 +
              C97193 * C5558 + C104583 + C104583 + C97191 * C5564) *
                 C154143 +
             (C102797 + C102796) * C154169 + C102758 * C154181) *
                C153722 +
            ((C97195 * C28358 + C104584 + C104584 + C153969 * C28362 +
              C97193 * C5559 + C104585 + C104585 + C97191 * C5565) *
                 C154143 +
             (C104591 + C104590) * C154169 + C104577 * C154181) *
                C73969) *
               C153847) *
              C1629) *
         C153748) /
            (p * q * std::sqrt(p + q));
    d2ee[292] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
            C97199 + C97199 + C153969 * C580) *
               C153865 * C154187 +
           (C97252 + C97253) * C153865 * C154180 + C97266 * C154161 +
           C97267 * C154108) *
              C153783 * C1338 -
          (C98020 * C154108 + C98021 * C154161 +
           (C97536 + C97537) * C153865 * C154180 +
           (C97195 * C1081 + C97482 + C97482 + C153969 * C1093 + C97193 * C335 +
            C97483 + C97483 + C97191 * C359) *
               C153865 * C154187) *
              C153783 * C1339 +
          ((C97193 * C336 + C97484 + C97484 + C97191 * C360 + C97195 * C1920 +
            C97485 + C97485 + C153969 * C1930) *
               C153865 * C154187 +
           (C97538 + C97539) * C153865 * C154180 +
           (C97540 + C97541) * C153865 * C154161 +
           (C97542 + C97543) * C153865 * C154108) *
              C153783 * C1340 -
          ((C97195 * C4171 + C98860 + C98860 + C153969 * C4179 +
            C97193 * C1344 + C98861 + C98861 + C97191 * C1354) *
               C153865 * C154108 +
           (C97195 * C4170 + C98862 + C98862 + C153969 * C4178 +
            C97193 * C1345 + C98863 + C98863 + C97191 * C1355) *
               C153865 * C154161 +
           (C97195 * C4169 + C98864 + C98864 + C153969 * C4177 +
            C97193 * C1346 + C98865 + C98865 + C97191 * C1356) *
               C153865 * C154180 +
           (C97195 * C4168 + C98866 + C98866 + C153969 * C4176 +
            C97193 * C1347 + C98867 + C98867 + C97191 * C1357) *
               C153865 * C154187) *
              C153783 * C1341) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
             C97199 + C97199 + C153969 * C580) *
                C153865 * C154187 +
            (C97252 + C97253) * C153865 * C154180 + C97266 * C154161 +
            C97267 * C154108) *
               C153783 * C1251 -
           (C98020 * C154108 + C98021 * C154161 +
            (C97536 + C97537) * C153865 * C154180 +
            (C97195 * C1081 + C97482 + C97482 + C153969 * C1093 +
             C97193 * C335 + C97483 + C97483 + C97191 * C359) *
                C153865 * C154187) *
               C153783 * C153819) *
              C1253 +
          (((C97537 + C97536) * C153865 * C154187 +
            (C97535 + C97534) * C153865 * C154180 +
            (C97533 + C97532) * C153865 * C154161 +
            (C98026 + C98027) * C153865 * C154108) *
               C153783 * C153819 -
           (C97268 * C154108 + C97269 * C154161 +
            (C97255 + C97254) * C153865 * C154180 +
            (C97253 + C97252) * C153865 * C154187) *
               C153783 * C1251) *
              C1254 +
          ((C97266 * C154187 + C97267 * C154180 +
            (C97259 + C97258) * C153865 * C154161 +
            (C97260 + C97261) * C153865 * C154108) *
               C153783 * C1251 -
           ((C97195 * C1086 + C98018 + C98018 + C153969 * C1098 +
             C97193 * C341 + C98019 + C98019 + C97191 * C365) *
                C153865 * C154108 +
            (C98027 + C98026) * C153865 * C154161 + C98020 * C154180 +
            C98021 * C154187) *
               C153783 * C153819) *
              C1255)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
             C97199 + C97199 + C153969 * C580) *
                C153865 * C154187 +
            (C97252 + C97253) * C153865 * C154180 + C97266 * C154161 +
            C97267 * C154108) *
               C549 -
           (C98230 * C154108 + C98231 * C154161 +
            (C97810 + C97811) * C153865 * C154180 +
            (C97195 * C557 + C97756 + C97756 + C153969 * C581 + C97193 * C556 +
             C97757 + C97757 + C97191 * C580) *
                C153865 * C154187) *
               C550 +
           ((C97193 * C557 + C97758 + C97758 + C97191 * C581 + C97195 * C2272 +
             C97759 + C97759 + C153969 * C2282) *
                C153865 * C154187 +
            (C97812 + C97813) * C153865 * C154180 +
            (C97814 + C97815) * C153865 * C154161 +
            (C97816 + C97817) * C153865 * C154108) *
               C551) *
              C1251 +
          (((C97193 * C1081 + C98496 + C98496 + C97191 * C1093 +
             C97195 * C1489 + C98497 + C98497 + C153969 * C1499) *
                C153865 * C154187 +
            (C98530 + C98531) * C153865 * C154180 +
            (C98532 + C98533) * C153865 * C154161 +
            (C98534 + C98535) * C153865 * C154108) *
               C550 -
           (C98020 * C154108 + C98021 * C154161 +
            (C97536 + C97537) * C153865 * C154180 +
            (C97195 * C1081 + C97482 + C97482 + C153969 * C1093 +
             C97193 * C335 + C97483 + C97483 + C97191 * C359) *
                C153865 * C154187) *
               C549 -
           ((C97195 * C8529 + C99062 + C99062 + C153969 * C8531 +
             C97193 * C1486 + C99063 + C99063 + C97191 * C1496) *
                C153865 * C154108 +
            (C97195 * C6157 + C99064 + C99064 + C153969 * C6169 +
             C97193 * C1487 + C99065 + C99065 + C97191 * C1497) *
                C153865 * C154161 +
            (C97195 * C6159 + C99066 + C99066 + C153969 * C6171 +
             C97193 * C1488 + C99067 + C99067 + C97191 * C1498) *
                C153865 * C154180 +
            (C97195 * C6161 + C99068 + C99068 + C153969 * C6173 +
             C97193 * C1489 + C99069 + C99069 + C97191 * C1499) *
                C153865 * C154187) *
               C551) *
              C153819) *
         C153748) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
              C97199 + C97199 + C153969 * C580) *
                 C154181 +
             (C101439 + C101440) * C154169 + C101451 * C154143) *
                C73969 +
            ((C97252 + C97253) * C154181 + C101388 * C154169 +
             C101389 * C154143) *
                C153722) *
               C153783 * C1251 -
           ((C101452 * C154143 + C101394 * C154169 + C101395 * C154181) *
                C153722 +
            ((C101445 + C101446) * C154143 + (C101442 + C101441) * C154169 +
             (C101440 + C101439) * C154181) *
                C73969) *
               C153783 * C153819) *
              C1253 +
          (((C101388 * C154181 + C101389 * C154169 + C101453 * C154143) *
                C73969 +
            (C102070 * C154181 + C102071 * C154169 +
             (C101449 + C101450) * C154143) *
                C153722) *
               C153783 * C153819 -
           ((C101412 * C154143 + C98013 * C154169 +
             (C97255 + C97254) * C154181) *
                C153722 +
            (C101394 * C154143 + C101395 * C154169 +
             (C97253 + C97252) * C154181) *
                C73969) *
               C153783 * C1251) *
              C1254 +
          (((C97262 * C154181 + C102070 * C154169 + C102071 * C154143) *
                C73969 +
            (C97263 * C154181 + (C97533 + C97532) * C154169 +
             (C97542 + C97543) * C154143) *
                C153722) *
               C153783 * C1251 -
           (((C97195 * C4171 + C98860 + C98860 + C153969 * C4179 +
              C97193 * C1344 + C98861 + C98861 + C97191 * C1354) *
                 C154143 +
             (C97543 + C97542) * C154169 + C98012 * C154181) *
                C153722 +
            ((C101450 + C101449) * C154143 + C101412 * C154169 +
             C98013 * C154181) *
                C73969) *
               C153783 * C153819) *
              C1255)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
             C97199 + C97199 + C153969 * C580) *
                C154181 +
            (C101439 + C101440) * C154169 + C101451 * C154143) *
               C73969 +
           ((C97252 + C97253) * C154181 + C101388 * C154169 +
            C101389 * C154143) *
               C153722) *
              C153783 * C1338 -
          ((C101452 * C154143 + C101394 * C154169 + C101395 * C154181) *
               C153722 +
           (C103282 * C154143 + (C101442 + C101441) * C154169 +
            (C101440 + C101439) * C154181) *
               C73969) *
              C153783 * C1339 +
          ((C101451 * C154181 + (C101446 + C101445) * C154169 +
            (C103295 + C103296) * C154143) *
               C73969 +
           (C101389 * C154181 + C101453 * C154169 +
            (C101447 + C101448) * C154143) *
               C153722) *
              C153783 * C1340 -
          (((C97195 * C28773 + C103287 + C103287 + C153969 * C28777 +
             C97193 * C4575 + C103288 + C103288 + C97191 * C4581) *
                C154143 +
            (C101448 + C101447) * C154169 + C101452 * C154181) *
               C153722 +
           ((C97195 * C28772 + C103289 + C103289 + C153969 * C28776 +
             C97193 * C4576 + C103290 + C103290 + C97191 * C4582) *
                C154143 +
            (C103296 + C103295) * C154169 + C103282 * C154181) *
               C73969) *
              C153783 * C1341) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
              C97199 + C97199 + C153969 * C580) *
                 C154181 +
             (C101439 + C101440) * C154169 + C101451 * C154143) *
                C73969 +
            ((C97252 + C97253) * C154181 + C101388 * C154169 +
             C101389 * C154143) *
                C153722) *
               C549 -
           ((C102758 * C154143 + C102759 * C154169 +
             (C97810 + C97811) * C154181) *
                C153722 +
            ((C102792 + C102793) * C154143 + (C102794 + C102795) * C154169 +
             (C97195 * C557 + C97756 + C97756 + C153969 * C581 + C97193 * C556 +
              C97757 + C97757 + C97191 * C580) *
                 C154181) *
                C73969) *
               C550 +
           (((C97193 * C557 + C97758 + C97758 + C97191 * C581 + C97195 * C2272 +
              C97759 + C97759 + C153969 * C2282) *
                 C154181 +
             (C103607 + C103608) * C154169 + (C103609 + C103610) * C154143) *
                C73969 +
            ((C97812 + C97813) * C154181 + (C101776 + C101777) * C154169 +
             (C101778 + C101779) * C154143) *
                C153722) *
               C551) *
              C1251 +
          ((((C102795 + C102794) * C154181 + (C102793 + C102792) * C154169 +
             (C97193 * C4168 + C102768 + C102768 + C97191 * C4176 +
              C97195 * C4811 + C102769 + C102769 + C153969 * C4817) *
                 C154143) *
                C73969 +
            (C102770 * C154181 + C102771 * C154169 +
             (C102796 + C102797) * C154143) *
                C153722) *
               C550 -
           ((C101452 * C154143 + C101394 * C154169 + C101395 * C154181) *
                C153722 +
            (C103282 * C154143 + (C101442 + C101441) * C154169 +
             (C101440 + C101439) * C154181) *
                C73969) *
               C549 -
           (((C97195 * C31684 + C103595 + C103595 + C153969 * C31686 +
              C97193 * C4810 + C103596 + C103596 + C97191 * C4816) *
                 C154143 +
             (C101779 + C101778) * C154169 + (C101777 + C101776) * C154181) *
                C153722 +
            ((C97195 * C29881 + C103597 + C103597 + C153969 * C29885 +
              C97193 * C4811 + C103598 + C103598 + C97191 * C4817) *
                 C154143 +
             (C103610 + C103609) * C154169 + (C103608 + C103607) * C154181) *
                C73969) *
               C551) *
              C153819) *
         C153748) /
            (p * q * std::sqrt(p + q));
    d2ee[293] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
              C97199 + C97199 + C153969 * C580) *
                 C153865 * C154187 +
             (C97252 + C97253) * C153865 * C154180 + C97266 * C154161 +
             C97267 * C154108) *
                C154094 -
            (C98230 * C154108 + C98231 * C154161 +
             (C97810 + C97811) * C153865 * C154180 +
             (C97195 * C557 + C97756 + C97756 + C153969 * C581 + C97193 * C556 +
              C97757 + C97757 + C97191 * C580) *
                 C153865 * C154187) *
                C153847) *
               C1251 +
           (((C97193 * C1081 + C98496 + C98496 + C97191 * C1093 +
              C97195 * C1489 + C98497 + C98497 + C153969 * C1499) *
                 C153865 * C154187 +
             (C98530 + C98531) * C153865 * C154180 +
             (C98532 + C98533) * C153865 * C154161 +
             (C98534 + C98535) * C153865 * C154108) *
                C153847 -
            (C98020 * C154108 + C98021 * C154161 +
             (C97536 + C97537) * C153865 * C154180 +
             (C97195 * C1081 + C97482 + C97482 + C153969 * C1093 +
              C97193 * C335 + C97483 + C97483 + C97191 * C359) *
                 C153865 * C154187) *
                C154094) *
               C153819) *
              C154085 +
          ((((C97811 + C97810) * C153865 * C154187 +
             (C97809 + C97808) * C153865 * C154180 +
             (C97807 + C97806) * C153865 * C154161 +
             (C98236 + C98237) * C153865 * C154108) *
                C153847 -
            (C97268 * C154108 + C97269 * C154161 +
             (C97255 + C97254) * C153865 * C154180 +
             (C97253 + C97252) * C153865 * C154187) *
                C154094) *
               C1251 +
           (((C97537 + C97536) * C153865 * C154187 +
             (C97535 + C97534) * C153865 * C154180 +
             (C97533 + C97532) * C153865 * C154161 +
             (C98026 + C98027) * C153865 * C154108) *
                C154094 -
            ((C97195 * C1485 + C98516 + C98516 + C153969 * C1495 +
              C97193 * C1085 + C98517 + C98517 + C97191 * C1097) *
                 C153865 * C154108 +
             (C98535 + C98534) * C153865 * C154161 +
             (C98533 + C98532) * C153865 * C154180 +
             (C98531 + C98530) * C153865 * C154187) *
                C153847) *
               C153819) *
              C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
               C97199 + C97199 + C153969 * C580) *
                  C154181 +
              (C101439 + C101440) * C154169 + C101451 * C154143) *
                 C73969 +
             ((C97252 + C97253) * C154181 + C101388 * C154169 +
              C101389 * C154143) *
                 C153722) *
                C154094 -
            ((C102758 * C154143 + C102759 * C154169 +
              (C97810 + C97811) * C154181) *
                 C153722 +
             ((C102792 + C102793) * C154143 + (C102794 + C102795) * C154169 +
              (C97195 * C557 + C97756 + C97756 + C153969 * C581 +
               C97193 * C556 + C97757 + C97757 + C97191 * C580) *
                  C154181) *
                 C73969) *
                C153847) *
               C1251 +
           ((((C102795 + C102794) * C154181 + (C102793 + C102792) * C154169 +
              (C97193 * C4168 + C102768 + C102768 + C97191 * C4176 +
               C97195 * C4811 + C102769 + C102769 + C153969 * C4817) *
                  C154143) *
                 C73969 +
             (C102770 * C154181 + C102771 * C154169 +
              (C102796 + C102797) * C154143) *
                 C153722) *
                C153847 -
            ((C101452 * C154143 + C101394 * C154169 + C101395 * C154181) *
                 C153722 +
             (C103282 * C154143 + (C101442 + C101441) * C154169 +
              (C101440 + C101439) * C154181) *
                 C73969) *
                C154094) *
               C153819) *
              C154085 +
          (((((C97811 + C97810) * C154181 + C102770 * C154169 +
              C102771 * C154143) *
                 C73969 +
             ((C97809 + C97808) * C154181 + (C98532 + C98533) * C154169 +
              (C102370 + C102371) * C154143) *
                 C153722) *
                C153847 -
            ((C101412 * C154143 + C98013 * C154169 +
              (C97255 + C97254) * C154181) *
                 C153722 +
             (C101394 * C154143 + C101395 * C154169 +
              (C97253 + C97252) * C154181) *
                 C73969) *
                C154094) *
               C1251 +
           (((C101388 * C154181 + C101389 * C154169 + C101453 * C154143) *
                 C73969 +
             (C102070 * C154181 + C102071 * C154169 +
              (C101449 + C101450) * C154143) *
                 C153722) *
                C154094 -
            (((C97195 * C4809 + C102778 + C102778 + C153969 * C4815 +
               C97193 * C4170 + C102779 + C102779 + C97191 * C4178) *
                  C154143 +
              (C102371 + C102370) * C154169 + (C98533 + C98532) * C154181) *
                 C153722 +
             ((C102797 + C102796) * C154143 + C102758 * C154169 +
              C102759 * C154181) *
                 C73969) *
                C153847) *
               C153819) *
              C153754)) /
            (p * q * std::sqrt(p + q));
    d2ee[294] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
             C97199 + C97199 + C153969 * C580) *
                C153865 * C154187 +
            (C97252 + C97253) * C153865 * C154180 + C97266 * C154161 +
            C97267 * C154108) *
               C153783 * C1251 -
           (C98020 * C154108 + C98021 * C154161 +
            (C97536 + C97537) * C153865 * C154180 +
            (C97195 * C1081 + C97482 + C97482 + C153969 * C1093 +
             C97193 * C335 + C97483 + C97483 + C97191 * C359) *
                C153865 * C154187) *
               C153783 * C153819) *
              C1253 +
          (((C97537 + C97536) * C153865 * C154187 +
            (C97535 + C97534) * C153865 * C154180 +
            (C97533 + C97532) * C153865 * C154161 +
            (C98026 + C98027) * C153865 * C154108) *
               C153783 * C153819 -
           (C97268 * C154108 + C97269 * C154161 +
            (C97255 + C97254) * C153865 * C154180 +
            (C97253 + C97252) * C153865 * C154187) *
               C153783 * C1251) *
              C1254 +
          ((C97266 * C154187 + C97267 * C154180 +
            (C97259 + C97258) * C153865 * C154161 +
            (C97260 + C97261) * C153865 * C154108) *
               C153783 * C1251 -
           ((C97195 * C1086 + C98018 + C98018 + C153969 * C1098 +
             C97193 * C341 + C98019 + C98019 + C97191 * C365) *
                C153865 * C154108 +
            (C98027 + C98026) * C153865 * C154161 + C98020 * C154180 +
            C98021 * C154187) *
               C153783 * C153819) *
              C1255)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
            C97199 + C97199 + C153969 * C580) *
               C153865 * C154187 +
           (C97252 + C97253) * C153865 * C154180 + C97266 * C154161 +
           C97267 * C154108) *
              C153783 * C1338 -
          (C98020 * C154108 + C98021 * C154161 +
           (C97536 + C97537) * C153865 * C154180 +
           (C97195 * C1081 + C97482 + C97482 + C153969 * C1093 + C97193 * C335 +
            C97483 + C97483 + C97191 * C359) *
               C153865 * C154187) *
              C153783 * C1339 +
          ((C97193 * C336 + C97484 + C97484 + C97191 * C360 + C97195 * C1920 +
            C97485 + C97485 + C153969 * C1930) *
               C153865 * C154187 +
           (C97538 + C97539) * C153865 * C154180 +
           (C97540 + C97541) * C153865 * C154161 +
           (C97542 + C97543) * C153865 * C154108) *
              C153783 * C1340 -
          ((C97195 * C4171 + C98860 + C98860 + C153969 * C4179 +
            C97193 * C1344 + C98861 + C98861 + C97191 * C1354) *
               C153865 * C154108 +
           (C97195 * C4170 + C98862 + C98862 + C153969 * C4178 +
            C97193 * C1345 + C98863 + C98863 + C97191 * C1355) *
               C153865 * C154161 +
           (C97195 * C4169 + C98864 + C98864 + C153969 * C4177 +
            C97193 * C1346 + C98865 + C98865 + C97191 * C1356) *
               C153865 * C154180 +
           (C97195 * C4168 + C98866 + C98866 + C153969 * C4176 +
            C97193 * C1347 + C98867 + C98867 + C97191 * C1357) *
               C153865 * C154187) *
              C153783 * C1341) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
              C97199 + C97199 + C153969 * C580) *
                 C154181 +
             (C101439 + C101440) * C154169 + C101451 * C154143) *
                C73969 +
            ((C97252 + C97253) * C154181 + C101388 * C154169 +
             C101389 * C154143) *
                C153722) *
               C153783 * C1251 -
           ((C101452 * C154143 + C101394 * C154169 + C101395 * C154181) *
                C153722 +
            ((C101445 + C101446) * C154143 + (C101442 + C101441) * C154169 +
             (C101440 + C101439) * C154181) *
                C73969) *
               C153783 * C153819) *
              C1253 +
          (((C101388 * C154181 + C101389 * C154169 + C101453 * C154143) *
                C73969 +
            (C102070 * C154181 + C102071 * C154169 +
             (C101449 + C101450) * C154143) *
                C153722) *
               C153783 * C153819 -
           ((C101412 * C154143 + C98013 * C154169 +
             (C97255 + C97254) * C154181) *
                C153722 +
            (C101394 * C154143 + C101395 * C154169 +
             (C97253 + C97252) * C154181) *
                C73969) *
               C153783 * C1251) *
              C1254 +
          (((C97262 * C154181 + C102070 * C154169 + C102071 * C154143) *
                C73969 +
            (C97263 * C154181 + (C97533 + C97532) * C154169 +
             (C97542 + C97543) * C154143) *
                C153722) *
               C153783 * C1251 -
           (((C97195 * C4171 + C98860 + C98860 + C153969 * C4179 +
              C97193 * C1344 + C98861 + C98861 + C97191 * C1354) *
                 C154143 +
             (C97543 + C97542) * C154169 + C98012 * C154181) *
                C153722 +
            ((C101450 + C101449) * C154143 + C101412 * C154169 +
             C98013 * C154181) *
                C73969) *
               C153783 * C153819) *
              C1255)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
             C97199 + C97199 + C153969 * C580) *
                C154181 +
            (C101439 + C101440) * C154169 + C101451 * C154143) *
               C73969 +
           ((C97252 + C97253) * C154181 + C101388 * C154169 +
            C101389 * C154143) *
               C153722) *
              C153783 * C1338 -
          ((C101452 * C154143 + C101394 * C154169 + C101395 * C154181) *
               C153722 +
           (C103282 * C154143 + (C101442 + C101441) * C154169 +
            (C101440 + C101439) * C154181) *
               C73969) *
              C153783 * C1339 +
          ((C101451 * C154181 + (C101446 + C101445) * C154169 +
            (C103295 + C103296) * C154143) *
               C73969 +
           (C101389 * C154181 + C101453 * C154169 +
            (C101447 + C101448) * C154143) *
               C153722) *
              C153783 * C1340 -
          (((C97195 * C28773 + C103287 + C103287 + C153969 * C28777 +
             C97193 * C4575 + C103288 + C103288 + C97191 * C4581) *
                C154143 +
            (C101448 + C101447) * C154169 + C101452 * C154181) *
               C153722 +
           ((C97195 * C28772 + C103289 + C103289 + C153969 * C28776 +
             C97193 * C4576 + C103290 + C103290 + C97191 * C4582) *
                C154143 +
            (C103296 + C103295) * C154169 + C103282 * C154181) *
               C73969) *
              C153783 * C1341) *
         C153748) /
            (p * q * std::sqrt(p + q));
    d2ee[295] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
              C97199 + C97199 + C153969 * C580) *
                 C153865 * C154187 +
             (C97252 + C97253) * C153865 * C154180 + C97266 * C154161 +
             C97267 * C154108) *
                C2058 -
            (C98230 * C154108 + C98231 * C154161 +
             (C97810 + C97811) * C153865 * C154180 +
             (C97195 * C557 + C97756 + C97756 + C153969 * C581 + C97193 * C556 +
              C97757 + C97757 + C97191 * C580) *
                 C153865 * C154187) *
                C153847) *
               C154093 +
           (((C97193 * C1081 + C98496 + C98496 + C97191 * C1093 +
              C97195 * C1489 + C98497 + C98497 + C153969 * C1499) *
                 C153865 * C154187 +
             (C98530 + C98531) * C153865 * C154180 +
             (C98532 + C98533) * C153865 * C154161 +
             (C98534 + C98535) * C153865 * C154108) *
                C153847 -
            (C98020 * C154108 + C98021 * C154161 +
             (C97536 + C97537) * C153865 * C154180 +
             (C97195 * C1081 + C97482 + C97482 + C153969 * C1093 +
              C97193 * C335 + C97483 + C97483 + C97191 * C359) *
                 C153865 * C154187) *
                C2058) *
               C153819) *
              C154085 +
          ((((C97811 + C97810) * C153865 * C154187 +
             (C97809 + C97808) * C153865 * C154180 +
             (C97807 + C97806) * C153865 * C154161 +
             (C98236 + C98237) * C153865 * C154108) *
                C153847 -
            (C97268 * C154108 + C97269 * C154161 +
             (C97255 + C97254) * C153865 * C154180 +
             (C97253 + C97252) * C153865 * C154187) *
                C2058) *
               C154093 +
           (((C97537 + C97536) * C153865 * C154187 +
             (C97535 + C97534) * C153865 * C154180 +
             (C97533 + C97532) * C153865 * C154161 +
             (C98026 + C98027) * C153865 * C154108) *
                C2058 -
            ((C97195 * C1485 + C98516 + C98516 + C153969 * C1495 +
              C97193 * C1085 + C98517 + C98517 + C97191 * C1097) *
                 C153865 * C154108 +
             (C98535 + C98534) * C153865 * C154161 +
             (C98533 + C98532) * C153865 * C154180 +
             (C98531 + C98530) * C153865 * C154187) *
                C153847) *
               C153819) *
              C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
               C97199 + C97199 + C153969 * C580) *
                  C154181 +
              (C101439 + C101440) * C154169 + C101451 * C154143) *
                 C73969 +
             ((C97252 + C97253) * C154181 + C101388 * C154169 +
              C101389 * C154143) *
                 C153722) *
                C2058 -
            ((C102758 * C154143 + C102759 * C154169 +
              (C97810 + C97811) * C154181) *
                 C153722 +
             (C104577 * C154143 + (C102794 + C102795) * C154169 +
              (C97195 * C557 + C97756 + C97756 + C153969 * C581 +
               C97193 * C556 + C97757 + C97757 + C97191 * C580) *
                  C154181) *
                 C73969) *
                C153847) *
               C154093 +
           ((((C102795 + C102794) * C154181 + (C102793 + C102792) * C154169 +
              (C104590 + C104591) * C154143) *
                 C73969 +
             (C102770 * C154181 + C102771 * C154169 +
              (C102796 + C102797) * C154143) *
                 C153722) *
                C153847 -
            ((C101452 * C154143 + C101394 * C154169 + C101395 * C154181) *
                 C153722 +
             (C103282 * C154143 + (C101442 + C101441) * C154169 +
              (C101440 + C101439) * C154181) *
                 C73969) *
                C2058) *
               C153819) *
              C154085 +
          (((((C97811 + C97810) * C154181 + C102770 * C154169 +
              C102771 * C154143) *
                 C73969 +
             ((C97809 + C97808) * C154181 + (C98532 + C98533) * C154169 +
              (C102370 + C102371) * C154143) *
                 C153722) *
                C153847 -
            ((C101412 * C154143 + C98013 * C154169 +
              (C97255 + C97254) * C154181) *
                 C153722 +
             (C101394 * C154143 + C101395 * C154169 +
              (C97253 + C97252) * C154181) *
                 C73969) *
                C2058) *
               C154093 +
           (((C101388 * C154181 + C101389 * C154169 + C101453 * C154143) *
                 C73969 +
             (C102070 * C154181 + C102071 * C154169 +
              (C101449 + C101450) * C154143) *
                 C153722) *
                C2058 -
            (((C97195 * C4809 + C102778 + C102778 + C153969 * C4815 +
               C97193 * C4170 + C102779 + C102779 + C97191 * C4178) *
                  C154143 +
              (C102371 + C102370) * C154169 + (C98533 + C98532) * C154181) *
                 C153722 +
             ((C102797 + C102796) * C154143 + C102758 * C154169 +
              C102759 * C154181) *
                 C73969) *
                C153847) *
               C153819) *
              C153754)) /
            (p * q * std::sqrt(p + q));
    d2ee[296] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
             C97199 + C97199 + C153969 * C580) *
                C153865 * C154187 +
            (C97252 + C97253) * C153865 * C154180 + C97266 * C154161 +
            C97267 * C154108) *
               C154166 -
           (C98230 * C154108 + C98231 * C154161 +
            (C97810 + C97811) * C153865 * C154180 +
            (C97195 * C557 + C97756 + C97756 + C153969 * C581 + C97193 * C556 +
             C97757 + C97757 + C97191 * C580) *
                C153865 * C154187) *
               C154167 +
           ((C97193 * C557 + C97758 + C97758 + C97191 * C581 + C97195 * C2272 +
             C97759 + C97759 + C153969 * C2282) *
                C153865 * C154187 +
            (C97812 + C97813) * C153865 * C154180 +
            (C97814 + C97815) * C153865 * C154161 +
            (C97816 + C97817) * C153865 * C154108) *
               C2574) *
              C154093 +
          (((C97193 * C1081 + C98496 + C98496 + C97191 * C1093 +
             C97195 * C1489 + C98497 + C98497 + C153969 * C1499) *
                C153865 * C154187 +
            (C98530 + C98531) * C153865 * C154180 +
            (C98532 + C98533) * C153865 * C154161 +
            (C98534 + C98535) * C153865 * C154108) *
               C154167 -
           (C98020 * C154108 + C98021 * C154161 +
            (C97536 + C97537) * C153865 * C154180 +
            (C97195 * C1081 + C97482 + C97482 + C153969 * C1093 +
             C97193 * C335 + C97483 + C97483 + C97191 * C359) *
                C153865 * C154187) *
               C154166 -
           ((C97195 * C8529 + C99062 + C99062 + C153969 * C8531 +
             C97193 * C1486 + C99063 + C99063 + C97191 * C1496) *
                C153865 * C154108 +
            (C97195 * C6157 + C99064 + C99064 + C153969 * C6169 +
             C97193 * C1487 + C99065 + C99065 + C97191 * C1497) *
                C153865 * C154161 +
            (C97195 * C6159 + C99066 + C99066 + C153969 * C6171 +
             C97193 * C1488 + C99067 + C99067 + C97191 * C1498) *
                C153865 * C154180 +
            (C97195 * C6161 + C99068 + C99068 + C153969 * C6173 +
             C97193 * C1489 + C99069 + C99069 + C97191 * C1499) *
                C153865 * C154187) *
               C2574) *
              C153819) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
              C97199 + C97199 + C153969 * C580) *
                 C154181 +
             (C101439 + C101440) * C154169 + C101451 * C154143) *
                C73969 +
            ((C97252 + C97253) * C154181 + C101388 * C154169 +
             C101389 * C154143) *
                C153722) *
               C154166 -
           ((C102758 * C154143 + C102759 * C154169 +
             (C97810 + C97811) * C154181) *
                C153722 +
            (C104577 * C154143 + (C102794 + C102795) * C154169 +
             (C97195 * C557 + C97756 + C97756 + C153969 * C581 + C97193 * C556 +
              C97757 + C97757 + C97191 * C580) *
                 C154181) *
                C73969) *
               C154167 +
           (((C97193 * C557 + C97758 + C97758 + C97191 * C581 + C97195 * C2272 +
              C97759 + C97759 + C153969 * C2282) *
                 C154181 +
             (C103607 + C103608) * C154169 + (C103609 + C103610) * C154143) *
                C73969 +
            ((C97812 + C97813) * C154181 + (C101776 + C101777) * C154169 +
             (C101778 + C101779) * C154143) *
                C153722) *
               C2574) *
              C154093 +
          ((((C102795 + C102794) * C154181 + (C102793 + C102792) * C154169 +
             (C104590 + C104591) * C154143) *
                C73969 +
            (C102770 * C154181 + C102771 * C154169 +
             (C102796 + C102797) * C154143) *
                C153722) *
               C154167 -
           ((C101452 * C154143 + C101394 * C154169 + C101395 * C154181) *
                C153722 +
            (C103282 * C154143 + (C101442 + C101441) * C154169 +
             (C101440 + C101439) * C154181) *
                C73969) *
               C154166 -
           (((C97195 * C31684 + C103595 + C103595 + C153969 * C31686 +
              C97193 * C4810 + C103596 + C103596 + C97191 * C4816) *
                 C154143 +
             (C101779 + C101778) * C154169 + (C101777 + C101776) * C154181) *
                C153722 +
            ((C97195 * C29881 + C103597 + C103597 + C153969 * C29885 +
              C97193 * C4811 + C103598 + C103598 + C97191 * C4817) *
                 C154143 +
             (C103610 + C103609) * C154169 + (C103608 + C103607) * C154181) *
                C73969) *
               C2574) *
              C153819) *
         C153748) /
            (p * q * std::sqrt(p + q));
    d2ee[297] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
             C97199 + C97199 + C153969 * C580) *
                C153865 * C154187 +
            (C97252 + C97253) * C153865 * C154180 + C97266 * C154161 +
            C97267 * C154108) *
               C2058 -
           (C98230 * C154108 + C98231 * C154161 +
            (C97810 + C97811) * C153865 * C154180 +
            (C97195 * C557 + C97756 + C97756 + C153969 * C581 + C97193 * C556 +
             C97757 + C97757 + C97191 * C580) *
                C153865 * C154187) *
               C153847) *
              C326 +
          (((C97193 * C1081 + C98496 + C98496 + C97191 * C1093 +
             C97195 * C1489 + C98497 + C98497 + C153969 * C1499) *
                C153865 * C154187 +
            (C98530 + C98531) * C153865 * C154180 +
            (C98532 + C98533) * C153865 * C154161 +
            (C98534 + C98535) * C153865 * C154108) *
               C153847 -
           (C98020 * C154108 + C98021 * C154161 +
            (C97536 + C97537) * C153865 * C154180 +
            (C97195 * C1081 + C97482 + C97482 + C153969 * C1093 +
             C97193 * C335 + C97483 + C97483 + C97191 * C359) *
                C153865 * C154187) *
               C2058) *
              C327 +
          (((C97193 * C336 + C97484 + C97484 + C97191 * C360 + C97195 * C1920 +
             C97485 + C97485 + C153969 * C1930) *
                C153865 * C154187 +
            (C97538 + C97539) * C153865 * C154180 +
            (C97540 + C97541) * C153865 * C154161 +
            (C97542 + C97543) * C153865 * C154108) *
               C2058 -
           ((C97195 * C3372 + C99716 + C99716 + C153969 * C3380 +
             C97193 * C1917 + C99717 + C99717 + C97191 * C1927) *
                C153865 * C154108 +
            (C97195 * C3371 + C99718 + C99718 + C153969 * C3379 +
             C97193 * C1918 + C99719 + C99719 + C97191 * C1928) *
                C153865 * C154161 +
            (C97195 * C3370 + C99720 + C99720 + C153969 * C3378 +
             C97193 * C1919 + C99721 + C99721 + C97191 * C1929) *
                C153865 * C154180 +
            (C97195 * C3369 + C99722 + C99722 + C153969 * C3377 +
             C97193 * C1920 + C99723 + C99723 + C97191 * C1930) *
                C153865 * C154187) *
               C153847) *
              C328) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
             C97199 + C97199 + C153969 * C580) *
                C153865 * C154187 +
            (C97252 + C97253) * C153865 * C154180 + C97266 * C154161 +
            C97267 * C154108) *
               C2058 -
           (C98230 * C154108 + C98231 * C154161 +
            (C97810 + C97811) * C153865 * C154180 +
            (C97195 * C557 + C97756 + C97756 + C153969 * C581 + C97193 * C556 +
             C97757 + C97757 + C97191 * C580) *
                C153865 * C154187) *
               C153847) *
              C153767 * C1253 +
          (((C97811 + C97810) * C153865 * C154187 +
            (C97809 + C97808) * C153865 * C154180 +
            (C97807 + C97806) * C153865 * C154161 +
            (C98236 + C98237) * C153865 * C154108) *
               C153847 -
           (C97268 * C154108 + C97269 * C154161 +
            (C97255 + C97254) * C153865 * C154180 +
            (C97253 + C97252) * C153865 * C154187) *
               C2058) *
              C153767 * C1254 +
          ((C97266 * C154187 + C97267 * C154180 +
            (C97259 + C97258) * C153865 * C154161 +
            (C97260 + C97261) * C153865 * C154108) *
               C2058 -
           ((C97195 * C563 + C98228 + C98228 + C153969 * C587 + C97193 * C562 +
             C98229 + C98229 + C97191 * C586) *
                C153865 * C154108 +
            (C98237 + C98236) * C153865 * C154161 + C98230 * C154180 +
            C98231 * C154187) *
               C153847) *
              C153767 * C1255)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
            C97199 + C97199 + C153969 * C580) *
               C153865 * C154187 +
           (C97252 + C97253) * C153865 * C154180 + C97266 * C154161 +
           C97267 * C154108) *
              C2264 -
          (C98230 * C154108 + C98231 * C154161 +
           (C97810 + C97811) * C153865 * C154180 +
           (C97195 * C557 + C97756 + C97756 + C153969 * C581 + C97193 * C556 +
            C97757 + C97757 + C97191 * C580) *
               C153865 * C154187) *
              C2265 +
          ((C97193 * C557 + C97758 + C97758 + C97191 * C581 + C97195 * C2272 +
            C97759 + C97759 + C153969 * C2282) *
               C153865 * C154187 +
           (C97812 + C97813) * C153865 * C154180 +
           (C97814 + C97815) * C153865 * C154161 +
           (C97816 + C97817) * C153865 * C154108) *
              C2266 -
          ((C97195 * C7668 + C100242 + C100242 + C153969 * C7676 +
            C97193 * C2269 + C100243 + C100243 + C97191 * C2279) *
               C153865 * C154108 +
           (C97195 * C7667 + C100244 + C100244 + C153969 * C7675 +
            C97193 * C2270 + C100245 + C100245 + C97191 * C2280) *
               C153865 * C154161 +
           (C97195 * C7666 + C100246 + C100246 + C153969 * C7674 +
            C97193 * C2271 + C100247 + C100247 + C97191 * C2281) *
               C153865 * C154180 +
           (C97195 * C7665 + C100248 + C100248 + C153969 * C7673 +
            C97193 * C2272 + C100249 + C100249 + C97191 * C2282) *
               C153865 * C154187) *
              C2267) *
         C153767 * C153748) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
              C97199 + C97199 + C153969 * C580) *
                 C154181 +
             (C101439 + C101440) * C154169 + C101451 * C154143) *
                C73969 +
            ((C97252 + C97253) * C154181 + C101388 * C154169 +
             C101389 * C154143) *
                C153722) *
               C2058 -
           ((C102758 * C154143 + C102759 * C154169 +
             (C97810 + C97811) * C154181) *
                C153722 +
            (C104577 * C154143 + (C102794 + C102795) * C154169 +
             (C97195 * C557 + C97756 + C97756 + C153969 * C581 + C97193 * C556 +
              C97757 + C97757 + C97191 * C580) *
                 C154181) *
                C73969) *
               C153847) *
              C153767 * C1253 +
          ((((C97811 + C97810) * C154181 + C102770 * C154169 +
             C102771 * C154143) *
                C73969 +
            ((C97809 + C97808) * C154181 + (C98532 + C98533) * C154169 +
             (C102370 + C102371) * C154143) *
                C153722) *
               C153847 -
           ((C101412 * C154143 + C98013 * C154169 +
             (C97255 + C97254) * C154181) *
                C153722 +
            (C101394 * C154143 + C101395 * C154169 +
             (C97253 + C97252) * C154181) *
                C73969) *
               C2058) *
              C153767 * C1254 +
          (((C97262 * C154181 + C102070 * C154169 + C102071 * C154143) *
                C73969 +
            (C97263 * C154181 + (C97533 + C97532) * C154169 +
             (C97542 + C97543) * C154143) *
                C153722) *
               C2058 -
           (((C97195 * C3372 + C99716 + C99716 + C153969 * C3380 +
              C97193 * C1917 + C99717 + C99717 + C97191 * C1927) *
                 C154143 +
             (C98535 + C98534) * C154169 + C98222 * C154181) *
                C153722 +
            ((C102371 + C102370) * C154143 + (C98533 + C98532) * C154169 +
             C98223 * C154181) *
                C73969) *
               C153847) *
              C153767 * C1255)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
              C97199 + C97199 + C153969 * C580) *
                 C154181 +
             (C101439 + C101440) * C154169 + C101451 * C154143) *
                C73969 +
            ((C97252 + C97253) * C154181 + C101388 * C154169 +
             C101389 * C154143) *
                C153722) *
               C2058 -
           ((C102758 * C154143 + C102759 * C154169 +
             (C97810 + C97811) * C154181) *
                C153722 +
            (C104577 * C154143 + (C102794 + C102795) * C154169 +
             (C97195 * C557 + C97756 + C97756 + C153969 * C581 + C97193 * C556 +
              C97757 + C97757 + C97191 * C580) *
                 C154181) *
                C73969) *
               C153847) *
              C326 +
          ((((C102795 + C102794) * C154181 + (C102793 + C102792) * C154169 +
             (C104590 + C104591) * C154143) *
                C73969 +
            (C102770 * C154181 + C102771 * C154169 +
             (C102796 + C102797) * C154143) *
                C153722) *
               C153847 -
           ((C101452 * C154143 + C101394 * C154169 + C101395 * C154181) *
                C153722 +
            (C103282 * C154143 + (C101442 + C101441) * C154169 +
             (C101440 + C101439) * C154181) *
                C73969) *
               C2058) *
              C327 +
          (((C101451 * C154181 + (C101446 + C101445) * C154169 +
             (C103295 + C103296) * C154143) *
                C73969 +
            (C101389 * C154181 + C101453 * C154169 +
             (C101447 + C101448) * C154143) *
                C153722) *
               C2058 -
           (((C97195 * C28359 + C104582 + C104582 + C153969 * C28363 +
              C97193 * C5558 + C104583 + C104583 + C97191 * C5564) *
                 C154143 +
             (C102797 + C102796) * C154169 + C102758 * C154181) *
                C153722 +
            ((C97195 * C28358 + C104584 + C104584 + C153969 * C28362 +
              C97193 * C5559 + C104585 + C104585 + C97191 * C5565) *
                 C154143 +
             (C104591 + C104590) * C154169 + C104577 * C154181) *
                C73969) *
               C153847) *
              C328) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
             C97199 + C97199 + C153969 * C580) *
                C154181 +
            (C101439 + C101440) * C154169 + C101451 * C154143) *
               C73969 +
           ((C97252 + C97253) * C154181 + C101388 * C154169 +
            C101389 * C154143) *
               C153722) *
              C2264 -
          ((C102758 * C154143 + C102759 * C154169 +
            (C97810 + C97811) * C154181) *
               C153722 +
           (C104577 * C154143 + (C102794 + C102795) * C154169 +
            (C97195 * C557 + C97756 + C97756 + C153969 * C581 + C97193 * C556 +
             C97757 + C97757 + C97191 * C580) *
                C154181) *
               C73969) *
              C2265 +
          (((C97193 * C557 + C97758 + C97758 + C97191 * C581 + C97195 * C2272 +
             C97759 + C97759 + C153969 * C2282) *
                C154181 +
            (C103607 + C103608) * C154169 + (C103609 + C103610) * C154143) *
               C73969 +
           ((C97812 + C97813) * C154181 + (C101776 + C101777) * C154169 +
            (C101778 + C101779) * C154143) *
               C153722) *
              C2266 -
          (((C97195 * C30947 + C105366 + C105366 + C153969 * C30951 +
             C97193 * C6158 + C105367 + C105367 + C97191 * C6170) *
                C154143 +
            (C97195 * C9166 + C105368 + C105368 + C153969 * C9172 +
             C97193 * C6159 + C105369 + C105369 + C97191 * C6171) *
                C154169 +
            (C97195 * C7666 + C100246 + C100246 + C153969 * C7674 +
             C97193 * C2271 + C100247 + C100247 + C97191 * C2281) *
                C154181) *
               C153722 +
           ((C97195 * C30946 + C105370 + C105370 + C153969 * C30950 +
             C97193 * C6160 + C105371 + C105371 + C97191 * C6172) *
                C154143 +
            (C97195 * C9167 + C105372 + C105372 + C153969 * C9173 +
             C97193 * C6161 + C105373 + C105373 + C97191 * C6173) *
                C154169 +
            (C97195 * C7665 + C100248 + C100248 + C153969 * C7673 +
             C97193 * C2272 + C100249 + C100249 + C97191 * C2282) *
                C154181) *
               C73969) *
              C2267) *
         C153767 * C153748) /
            (p * q * std::sqrt(p + q));
    d2ee[298] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
             C97199 + C97199 + C153969 * C580) *
                C153865 * C154187 +
            (C97252 + C97253) * C153865 * C154180 + C97266 * C154161 +
            C97267 * C154108) *
               C154166 -
           (C98230 * C154108 + C98231 * C154161 +
            (C97810 + C97811) * C153865 * C154180 +
            (C97195 * C557 + C97756 + C97756 + C153969 * C581 + C97193 * C556 +
             C97757 + C97757 + C97191 * C580) *
                C153865 * C154187) *
               C154167 +
           ((C97193 * C557 + C97758 + C97758 + C97191 * C581 + C97195 * C2272 +
             C97759 + C97759 + C153969 * C2282) *
                C153865 * C154187 +
            (C97812 + C97813) * C153865 * C154180 +
            (C97814 + C97815) * C153865 * C154161 +
            (C97816 + C97817) * C153865 * C154108) *
               C2574) *
              C153767 * C154085 +
          (((C97811 + C97810) * C153865 * C154187 +
            (C97809 + C97808) * C153865 * C154180 +
            (C97807 + C97806) * C153865 * C154161 +
            (C98236 + C98237) * C153865 * C154108) *
               C154167 -
           (C97268 * C154108 + C97269 * C154161 +
            (C97255 + C97254) * C153865 * C154180 +
            (C97253 + C97252) * C153865 * C154187) *
               C154166 -
           ((C97195 * C2268 + C97780 + C97780 + C153969 * C2278 +
             C97193 * C561 + C97781 + C97781 + C97191 * C585) *
                C153865 * C154108 +
            (C97817 + C97816) * C153865 * C154161 +
            (C97815 + C97814) * C153865 * C154180 +
            (C97813 + C97812) * C153865 * C154187) *
               C2574) *
              C153767 * C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
              C97199 + C97199 + C153969 * C580) *
                 C154181 +
             (C101439 + C101440) * C154169 + C101451 * C154143) *
                C73969 +
            ((C97252 + C97253) * C154181 + C101388 * C154169 +
             C101389 * C154143) *
                C153722) *
               C154166 -
           ((C102758 * C154143 + C102759 * C154169 +
             (C97810 + C97811) * C154181) *
                C153722 +
            (C104577 * C154143 + (C102794 + C102795) * C154169 +
             (C97195 * C557 + C97756 + C97756 + C153969 * C581 + C97193 * C556 +
              C97757 + C97757 + C97191 * C580) *
                 C154181) *
                C73969) *
               C154167 +
           (((C97193 * C557 + C97758 + C97758 + C97191 * C581 + C97195 * C2272 +
              C97759 + C97759 + C153969 * C2282) *
                 C154181 +
             (C103607 + C103608) * C154169 + (C103609 + C103610) * C154143) *
                C73969 +
            ((C97812 + C97813) * C154181 + (C101776 + C101777) * C154169 +
             (C101778 + C101779) * C154143) *
                C153722) *
               C2574) *
              C153767 * C154085 +
          ((((C97811 + C97810) * C154181 + C102770 * C154169 +
             C102771 * C154143) *
                C73969 +
            ((C97809 + C97808) * C154181 + (C98532 + C98533) * C154169 +
             (C102370 + C102371) * C154143) *
                C153722) *
               C154167 -
           ((C101412 * C154143 + C98013 * C154169 +
             (C97255 + C97254) * C154181) *
                C153722 +
            (C101394 * C154143 + C101395 * C154169 +
             (C97253 + C97252) * C154181) *
                C73969) *
               C154166 -
           (((C97195 * C6156 + C101760 + C101760 + C153969 * C6168 +
              C97193 * C3371 + C101761 + C101761 + C97191 * C3379) *
                 C154143 +
             (C97195 * C6157 + C99064 + C99064 + C153969 * C6169 +
              C97193 * C1487 + C99065 + C99065 + C97191 * C1497) *
                 C154169 +
             (C97815 + C97814) * C154181) *
                C153722 +
            ((C101779 + C101778) * C154143 + (C101777 + C101776) * C154169 +
             (C97813 + C97812) * C154181) *
                C73969) *
               C2574) *
              C153767 * C153754)) /
            (p * q * std::sqrt(p + q));
    d2ee[299] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
             C97199 + C97199 + C153969 * C580) *
                C153865 * C154187 +
            (C97252 + C97253) * C153865 * C154180 + C97266 * C154161 +
            C97267 * C154108) *
               C2058 -
           (C98230 * C154108 + C98231 * C154161 +
            (C97810 + C97811) * C153865 * C154180 +
            (C97195 * C557 + C97756 + C97756 + C153969 * C581 + C97193 * C556 +
             C97757 + C97757 + C97191 * C580) *
                C153865 * C154187) *
               C153847) *
              C153767 * C1253 +
          (((C97811 + C97810) * C153865 * C154187 +
            (C97809 + C97808) * C153865 * C154180 +
            (C97807 + C97806) * C153865 * C154161 +
            (C98236 + C98237) * C153865 * C154108) *
               C153847 -
           (C97268 * C154108 + C97269 * C154161 +
            (C97255 + C97254) * C153865 * C154180 +
            (C97253 + C97252) * C153865 * C154187) *
               C2058) *
              C153767 * C1254 +
          ((C97266 * C154187 + C97267 * C154180 +
            (C97259 + C97258) * C153865 * C154161 +
            (C97260 + C97261) * C153865 * C154108) *
               C2058 -
           ((C97195 * C563 + C98228 + C98228 + C153969 * C587 + C97193 * C562 +
             C98229 + C98229 + C97191 * C586) *
                C153865 * C154108 +
            (C98237 + C98236) * C153865 * C154161 + C98230 * C154180 +
            C98231 * C154187) *
               C153847) *
              C153767 * C1255)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
             C97199 + C97199 + C153969 * C580) *
                C153865 * C154187 +
            (C97252 + C97253) * C153865 * C154180 + C97266 * C154161 +
            C97267 * C154108) *
               C2058 -
           (C98230 * C154108 + C98231 * C154161 +
            (C97810 + C97811) * C153865 * C154180 +
            (C97195 * C557 + C97756 + C97756 + C153969 * C581 + C97193 * C556 +
             C97757 + C97757 + C97191 * C580) *
                C153865 * C154187) *
               C153847) *
              C326 +
          (((C97193 * C1081 + C98496 + C98496 + C97191 * C1093 +
             C97195 * C1489 + C98497 + C98497 + C153969 * C1499) *
                C153865 * C154187 +
            (C98530 + C98531) * C153865 * C154180 +
            (C98532 + C98533) * C153865 * C154161 +
            (C98534 + C98535) * C153865 * C154108) *
               C153847 -
           (C98020 * C154108 + C98021 * C154161 +
            (C97536 + C97537) * C153865 * C154180 +
            (C97195 * C1081 + C97482 + C97482 + C153969 * C1093 +
             C97193 * C335 + C97483 + C97483 + C97191 * C359) *
                C153865 * C154187) *
               C2058) *
              C327 +
          (((C97193 * C336 + C97484 + C97484 + C97191 * C360 + C97195 * C1920 +
             C97485 + C97485 + C153969 * C1930) *
                C153865 * C154187 +
            (C97538 + C97539) * C153865 * C154180 +
            (C97540 + C97541) * C153865 * C154161 +
            (C97542 + C97543) * C153865 * C154108) *
               C2058 -
           ((C97195 * C3372 + C99716 + C99716 + C153969 * C3380 +
             C97193 * C1917 + C99717 + C99717 + C97191 * C1927) *
                C153865 * C154108 +
            (C97195 * C3371 + C99718 + C99718 + C153969 * C3379 +
             C97193 * C1918 + C99719 + C99719 + C97191 * C1928) *
                C153865 * C154161 +
            (C97195 * C3370 + C99720 + C99720 + C153969 * C3378 +
             C97193 * C1919 + C99721 + C99721 + C97191 * C1929) *
                C153865 * C154180 +
            (C97195 * C3369 + C99722 + C99722 + C153969 * C3377 +
             C97193 * C1920 + C99723 + C99723 + C97191 * C1930) *
                C153865 * C154187) *
               C153847) *
              C328) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
              C97199 + C97199 + C153969 * C580) *
                 C154181 +
             (C101439 + C101440) * C154169 + C101451 * C154143) *
                C73969 +
            ((C97252 + C97253) * C154181 + C101388 * C154169 +
             C101389 * C154143) *
                C153722) *
               C2058 -
           ((C102758 * C154143 + C102759 * C154169 +
             (C97810 + C97811) * C154181) *
                C153722 +
            (C104577 * C154143 + (C102794 + C102795) * C154169 +
             (C97195 * C557 + C97756 + C97756 + C153969 * C581 + C97193 * C556 +
              C97757 + C97757 + C97191 * C580) *
                 C154181) *
                C73969) *
               C153847) *
              C153767 * C1253 +
          ((((C97811 + C97810) * C154181 + C102770 * C154169 +
             C102771 * C154143) *
                C73969 +
            ((C97809 + C97808) * C154181 + (C98532 + C98533) * C154169 +
             (C102370 + C102371) * C154143) *
                C153722) *
               C153847 -
           ((C101412 * C154143 + C98013 * C154169 +
             (C97255 + C97254) * C154181) *
                C153722 +
            (C101394 * C154143 + C101395 * C154169 +
             (C97253 + C97252) * C154181) *
                C73969) *
               C2058) *
              C153767 * C1254 +
          (((C97262 * C154181 + C102070 * C154169 + C102071 * C154143) *
                C73969 +
            (C97263 * C154181 + (C97533 + C97532) * C154169 +
             (C97542 + C97543) * C154143) *
                C153722) *
               C2058 -
           (((C97195 * C3372 + C99716 + C99716 + C153969 * C3380 +
              C97193 * C1917 + C99717 + C99717 + C97191 * C1927) *
                 C154143 +
             (C98535 + C98534) * C154169 + C98222 * C154181) *
                C153722 +
            ((C102371 + C102370) * C154143 + (C98533 + C98532) * C154169 +
             C98223 * C154181) *
                C73969) *
               C153847) *
              C153767 * C1255)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C97193 * C136 + C97198 + C97198 + C97191 * C152 + C97195 * C556 +
              C97199 + C97199 + C153969 * C580) *
                 C154181 +
             (C101439 + C101440) * C154169 + C101451 * C154143) *
                C73969 +
            ((C97252 + C97253) * C154181 + C101388 * C154169 +
             C101389 * C154143) *
                C153722) *
               C2058 -
           ((C102758 * C154143 + C102759 * C154169 +
             (C97810 + C97811) * C154181) *
                C153722 +
            (C104577 * C154143 + (C102794 + C102795) * C154169 +
             (C97195 * C557 + C97756 + C97756 + C153969 * C581 + C97193 * C556 +
              C97757 + C97757 + C97191 * C580) *
                 C154181) *
                C73969) *
               C153847) *
              C326 +
          ((((C102795 + C102794) * C154181 + (C102793 + C102792) * C154169 +
             (C104590 + C104591) * C154143) *
                C73969 +
            (C102770 * C154181 + C102771 * C154169 +
             (C102796 + C102797) * C154143) *
                C153722) *
               C153847 -
           ((C101452 * C154143 + C101394 * C154169 + C101395 * C154181) *
                C153722 +
            (C103282 * C154143 + (C101442 + C101441) * C154169 +
             (C101440 + C101439) * C154181) *
                C73969) *
               C2058) *
              C327 +
          (((C101451 * C154181 + (C101446 + C101445) * C154169 +
             (C103295 + C103296) * C154143) *
                C73969 +
            (C101389 * C154181 + C101453 * C154169 +
             (C101447 + C101448) * C154143) *
                C153722) *
               C2058 -
           (((C97195 * C28359 + C104582 + C104582 + C153969 * C28363 +
              C97193 * C5558 + C104583 + C104583 + C97191 * C5564) *
                 C154143 +
             (C102797 + C102796) * C154169 + C102758 * C154181) *
                C153722 +
            ((C97195 * C28358 + C104584 + C104584 + C153969 * C28362 +
              C97193 * C5559 + C104585 + C104585 + C97191 * C5565) *
                 C154143 +
             (C104591 + C104590) * C154169 + C104577 * C154181) *
                C73969) *
               C153847) *
              C328) *
         C153748) /
            (p * q * std::sqrt(p + q));
    d2ee[300] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C154107 +
             C3138 * C153927) *
                C11376 +
            (C11381 + C11382) * C11377 + C11391 * C11378 + C11392 * C154108) *
               C153783 * C154093 -
           (C12006 * C154108 + C12007 * C11378 + (C11593 + C11594) * C11377 +
            (C3139 * C153927 + C3138 * C154107) * C11376) *
               C153783 * C153819) *
              C154162 +
          (((C11594 + C11593) * C11376 + (C11592 + C11591) * C11377 +
            (C11590 + C11589) * C11378 + (C12008 + C12009) * C154108) *
               C153783 * C153819 -
           (C11393 * C154108 + C11394 * C11378 + (C11384 + C11383) * C11377 +
            (C11382 + C11381) * C11376) *
               C153783 * C154093) *
              C154163 +
          ((C11391 * C11376 + C11392 * C11377 + (C11388 + C11387) * C11378 +
            (C11389 + C11390) * C154108) *
               C153783 * C154093 -
           (((C134 * C342 + C395 + C395 + C153882 * C366) * C153927 +
             C784 * C154107) *
                C154108 +
            (C12009 + C12008) * C11378 + C12006 * C11377 + C12007 * C11376) *
               C153783 * C153819) *
              C774)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C34572 +
             C3138 * C34573 + C3139 * C34574 + C3142 * C154116) *
                C154074 +
            (C34579 + C34580 + C34581 + C34582) * C153722) *
               C153783 * C154093 -
           ((C34785 + C34786 + C34787 + C34788) * C153722 +
            (C4591 * C154116 + C3142 * C34574 + C3139 * C34573 +
             C3138 * C34572) *
                C154074) *
               C153783 * C153819) *
              C154162 +
          (((C34788 + C34787 + C34786 + C34785) * C154074 +
            (C35194 + C35195 + C35196 + C35197) * C153722) *
               C153783 * C153819 -
           ((C34583 + C34584 + C34585 + C34586) * C153722 +
            (C34582 + C34581 + C34580 + C34579) * C154074) *
               C153783 * C154093) *
              C154163 +
          (((C34586 + C34585 + C34584 + C34583) * C154074 +
            (C34587 + C34588 + C34589 + C34590) * C153722) *
               C153783 * C154093 -
           (((C134 * C3086 + C3121 + C3121 + C153882 * C3094) * C154116 +
             C3145 * C34574 + C418 * C34573 + C413 * C34572) *
                C153722 +
            (C35197 + C35196 + C35195 + C35194) * C154074) *
               C153783 * C153819) *
              C774)) /
            (p * q * std::sqrt(p + q));
    d2ee[301] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C153882 * C152) * C154107 +
              C3138 * C153927) *
                 C11376 +
             (C11381 + C11382) * C11377 + C11391 * C11378 + C11392 * C154108) *
                C154094 -
            (C12204 * C154108 + C12205 * C11378 + (C11799 + C11800) * C11377 +
             (C4206 * C153927 +
              (C134 * C556 + C601 + C601 + C153882 * C580) * C154107) *
                 C11376) *
                C153847) *
               C154093 +
           (((C4206 * C154107 + C4205 * C153927) * C11376 +
             (C12466 + C12467) * C11377 + (C12468 + C12469) * C11378 +
             (C12470 + C12471) * C154108) *
                C153847 -
            (C12006 * C154108 + C12007 * C11378 + (C11593 + C11594) * C11377 +
             (C3139 * C153927 + C3138 * C154107) * C11376) *
                C154094) *
               C153819) *
              C329 +
          ((((C11800 + C11799) * C11376 + (C11798 + C11797) * C11377 +
             (C11796 + C11795) * C11378 + (C12206 + C12207) * C154108) *
                C153847 -
            (C11393 * C154108 + C11394 * C11378 + (C11384 + C11383) * C11377 +
             (C11382 + C11381) * C11376) *
                C154094) *
               C154093 +
           (((C11594 + C11593) * C11376 + (C11592 + C11591) * C11377 +
             (C11590 + C11589) * C11378 + (C12008 + C12009) * C154108) *
                C154094 -
            (((C134 * C1916 + C1932 + C1932 + C153882 * C1926) * C153927 +
              C1125 * C154107) *
                 C154108 +
             (C12471 + C12470) * C11378 + (C12469 + C12468) * C11377 +
             (C12467 + C12466) * C11376) *
                C153847) *
               C153819) *
              C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C153882 * C152) * C34572 +
              C3138 * C34573 + C3139 * C34574 + C3142 * C154116) *
                 C154074 +
             (C34579 + C34580 + C34581 + C34582) * C153722) *
                C154094 -
            ((C34987 + C34988 + C34989 + C34990) * C153722 +
             (C5574 * C154116 + C4205 * C34574 + C4206 * C34573 +
              (C134 * C556 + C601 + C601 + C153882 * C580) * C34572) *
                 C154074) *
                C153847) *
               C154093 +
           (((C4206 * C34572 + C4205 * C34573 + C5574 * C34574 +
              C28789 * C154116) *
                 C154074 +
             (C35654 + C35655 + C35656 + C35657) * C153722) *
                C153847 -
            ((C34785 + C34786 + C34787 + C34788) * C153722 +
             (C4591 * C154116 + C3142 * C34574 + C3139 * C34573 +
              C3138 * C34572) *
                 C154074) *
                C154094) *
               C153819) *
              C329 +
          ((((C34990 + C34989 + C34988 + C34987) * C154074 +
             (C35392 + C35393 + C35394 + C35395) * C153722) *
                C153847 -
            ((C34583 + C34584 + C34585 + C34586) * C153722 +
             (C34582 + C34581 + C34580 + C34579) * C154074) *
                C154094) *
               C154093 +
           (((C34788 + C34787 + C34786 + C34785) * C154074 +
             (C35194 + C35195 + C35196 + C35197) * C153722) *
                C154094 -
            (((C134 * C5557 + C5569 + C5569 + C153882 * C5563) * C154116 +
              C4208 * C34574 + C3416 * C34573 + C1123 * C34572) *
                 C153722 +
             (C35657 + C35656 + C35655 + C35654) * C154074) *
                C153847) *
               C153819) *
              C153754)) /
            (p * q * std::sqrt(p + q));
    d2ee[302] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C154107 +
             C3138 * C153927) *
                C11376 +
            (C11381 + C11382) * C11377 + C11391 * C11378 + C11392 * C154108) *
               C153783 * C326 -
           ((C11589 + C11590) * C154108 + (C11591 + C11592) * C11378 +
            (C11593 + C11594) * C11377 +
            (C3139 * C153927 + C3138 * C154107) * C11376) *
               C153783 * C327 +
           ((C3139 * C154107 + C3142 * C153927) * C11376 +
            (C11595 + C11596) * C11377 + (C11597 + C11598) * C11378 +
            (C11599 + C11600) * C154108) *
               C153783 * C328) *
              C329 +
          (((C11594 + C11593) * C11376 + (C11592 + C11591) * C11377 +
            (C11590 + C11589) * C11378 +
            (C412 * C154107 + C419 * C153927) * C154108) *
               C153783 * C327 -
           (C11393 * C154108 + C11394 * C11378 + (C11384 + C11383) * C11377 +
            (C11382 + C11381) * C11376) *
               C153783 * C326 -
           (((C134 * C1343 + C1359 + C1359 + C153882 * C1353) * C153927 +
             C419 * C154107) *
                C154108 +
            (C11600 + C11599) * C11378 + (C11598 + C11597) * C11377 +
            (C11596 + C11595) * C11376) *
               C153783 * C328) *
              C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C154107 +
            C3138 * C153927) *
               C11376 +
           (C11381 + C11382) * C11377 + C11391 * C11378 + C11392 * C154108) *
              C153783 * C153767 * C130 -
          (C11393 * C154108 + C11394 * C11378 + (C11384 + C11383) * C11377 +
           (C11382 + C11381) * C11376) *
              C153783 * C153767 * C131 +
          (C11391 * C11376 + C11392 * C11377 + (C11388 + C11387) * C11378 +
           (C11389 + C11390) * C154108) *
              C153783 * C153767 * C132 -
          (((C134 * C775 + C781 + C781 + C153882 * C777) * C153927 +
            C198 * C154107) *
               C154108 +
           (C11390 + C11389) * C11378 + C11393 * C11377 + C11394 * C11376) *
              C153783 * C153767 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C154107 +
             C3138 * C153927) *
                C11376 +
            (C11381 + C11382) * C11377 + C11391 * C11378 + C11392 * C154108) *
               C549 -
           ((C11795 + C11796) * C154108 + (C11797 + C11798) * C11378 +
            (C11799 + C11800) * C11377 +
            (C4206 * C153927 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C154107) *
                C11376) *
               C550 +
           (((C134 * C557 + C602 + C602 + C153882 * C581) * C154107 +
             C4830 * C153927) *
                C11376 +
            (C11801 + C11802) * C11377 + (C11803 + C11804) * C11378 +
            (C11805 + C11811) * C154108) *
               C551) *
              C153767 * C329 +
          (((C11800 + C11799) * C11376 + (C11798 + C11797) * C11377 +
            (C11796 + C11795) * C11378 +
            (C633 * C154107 + C1125 * C153927) * C154108) *
               C550 -
           (C11393 * C154108 + C11394 * C11378 + (C11384 + C11383) * C11377 +
            (C11382 + C11381) * C11376) *
               C549 -
           (((C134 * C1485 + C1501 + C1501 + C153882 * C1495) * C153927 +
             C640 * C154107) *
                C154108 +
            (C11811 + C11805) * C11378 + (C11804 + C11803) * C11377 +
            (C11802 + C11801) * C11376) *
               C551) *
              C153767 * C153754)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C34572 +
            C3138 * C34573 + C3139 * C34574 + C3142 * C154116) *
               C154074 +
           (C34579 + C34580 + C34581 + C34582) * C153722) *
              C153783 * C153767 * C130 -
          ((C34583 + C34584 + C34585 + C34586) * C153722 +
           (C34582 + C34581 + C34580 + C34579) * C154074) *
              C153783 * C153767 * C131 +
          ((C34586 + C34585 + C34584 + C34583) * C154074 +
           (C34587 + C34588 + C34589 + C34590) * C153722) *
              C153783 * C153767 * C132 -
          (((C134 * C1343 + C1359 + C1359 + C153882 * C1353) * C154116 +
            C419 * C34574 + C412 * C34573 + C196 * C34572) *
               C153722 +
           (C34590 + C34589 + C34588 + C34587) * C154074) *
              C153783 * C153767 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C34572 +
             C3138 * C34573 + C3139 * C34574 + C3142 * C154116) *
                C154074 +
            (C34579 + C34580 + C34581 + C34582) * C153722) *
               C153783 * C326 -
           ((C34785 + C34786 + C34787 + C34788) * C153722 +
            (C4591 * C154116 + C3142 * C34574 + C3139 * C34573 +
             C3138 * C34572) *
                C154074) *
               C153783 * C327 +
           ((C3139 * C34572 + C3142 * C34573 + C4591 * C34574 +
             C28235 * C154116) *
                C154074 +
            (C34789 + C34790 + C34791 + C34792) * C153722) *
               C153783 * C328) *
              C329 +
          (((C34788 + C34787 + C34786 + C34785) * C154074 +
            (C414 * C34572 + C417 * C34573 + C3140 * C34574 + C3144 * C154116) *
                C153722) *
               C153783 * C327 -
           ((C34583 + C34584 + C34585 + C34586) * C153722 +
            (C34582 + C34581 + C34580 + C34579) * C154074) *
               C153783 * C326 -
           (((C134 * C4574 + C4586 + C4586 + C153882 * C4580) * C154116 +
             C3144 * C34574 + C3140 * C34573 + C417 * C34572) *
                C153722 +
            (C34792 + C34791 + C34790 + C34789) * C154074) *
               C153783 * C328) *
              C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C34572 +
             C3138 * C34573 + C3139 * C34574 + C3142 * C154116) *
                C154074 +
            (C34579 + C34580 + C34581 + C34582) * C153722) *
               C549 -
           ((C34987 + C34988 + C34989 + C34990) * C153722 +
            (C5574 * C154116 + C4205 * C34574 + C4206 * C34573 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C34572) *
                C154074) *
               C550 +
           (((C134 * C557 + C602 + C602 + C153882 * C581) * C34572 +
             C4830 * C34573 + C4831 * C34574 + C29138 * C154116) *
                C154074 +
            (C34991 + C34992 + C34993 + C34999) * C153722) *
               C551) *
              C153767 * C329 +
          (((C34990 + C34989 + C34988 + C34987) * C154074 +
            (C635 * C34572 + C1123 * C34573 + C3416 * C34574 +
             C4208 * C154116) *
                C153722) *
               C550 -
           ((C34583 + C34584 + C34585 + C34586) * C153722 +
            (C34582 + C34581 + C34580 + C34579) * C154074) *
               C549 -
           (((C134 * C4809 + C4823 + C4823 + C153882 * C4815) * C154116 +
             C3421 * C34574 + C3420 * C34573 + C638 * C34572) *
                C153722 +
            (C34999 + C34993 + C34992 + C34991) * C154074) *
               C551) *
              C153767 * C153754)) /
            (p * q * std::sqrt(p + q));
    d2ee[303] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C154107 +
             C3138 * C153927) *
                C11376 +
            (C11381 + C11382) * C11377 + C11391 * C11378 + C11392 * C154108) *
               C154094 -
           (C12204 * C154108 + C12205 * C11378 + (C11799 + C11800) * C11377 +
            (C4206 * C153927 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C154107) *
                C11376) *
               C153847) *
              C153767 * C154162 +
          (((C11800 + C11799) * C11376 + (C11798 + C11797) * C11377 +
            (C11796 + C11795) * C11378 + (C12206 + C12207) * C154108) *
               C153847 -
           (C11393 * C154108 + C11394 * C11378 + (C11384 + C11383) * C11377 +
            (C11382 + C11381) * C11376) *
               C154094) *
              C153767 * C154163 +
          ((C11391 * C11376 + C11392 * C11377 + (C11388 + C11387) * C11378 +
            (C11389 + C11390) * C154108) *
               C154094 -
           (((C134 * C1086 + C1113 + C1113 + C153882 * C1098) * C153927 +
             C918 * C154107) *
                C154108 +
            (C12207 + C12206) * C11378 + C12204 * C11377 + C12205 * C11376) *
               C153847) *
              C153767 * C774)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C34572 +
             C3138 * C34573 + C3139 * C34574 + C3142 * C154116) *
                C154074 +
            (C34579 + C34580 + C34581 + C34582) * C153722) *
               C154094 -
           ((C34987 + C34988 + C34989 + C34990) * C153722 +
            (C5574 * C154116 + C4205 * C34574 + C4206 * C34573 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C34572) *
                C154074) *
               C153847) *
              C153767 * C154162 +
          (((C34990 + C34989 + C34988 + C34987) * C154074 +
            (C35392 + C35393 + C35394 + C35395) * C153722) *
               C153847 -
           ((C34583 + C34584 + C34585 + C34586) * C153722 +
            (C34582 + C34581 + C34580 + C34579) * C154074) *
               C154094) *
              C153767 * C154163 +
          (((C34586 + C34585 + C34584 + C34583) * C154074 +
            (C34587 + C34588 + C34589 + C34590) * C153722) *
               C154094 -
           (((C134 * C4171 + C4196 + C4196 + C153882 * C4179) * C154116 +
             C3877 * C34574 + C1124 * C34573 + C634 * C34572) *
                C153722 +
            (C35395 + C35394 + C35393 + C35392) * C154074) *
               C153847) *
              C153767 * C774)) /
            (p * q * std::sqrt(p + q));
    d2ee[304] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C154107 +
            C3138 * C153927) *
               C11376 +
           (C11381 + C11382) * C11377 + C11391 * C11378 + C11392 * C154108) *
              C153783 * C153767 * C130 -
          (C11393 * C154108 + C11394 * C11378 + (C11384 + C11383) * C11377 +
           (C11382 + C11381) * C11376) *
              C153783 * C153767 * C131 +
          (C11391 * C11376 + C11392 * C11377 + (C11388 + C11387) * C11378 +
           (C11389 + C11390) * C154108) *
              C153783 * C153767 * C132 -
          (((C134 * C775 + C781 + C781 + C153882 * C777) * C153927 +
            C198 * C154107) *
               C154108 +
           (C11390 + C11389) * C11378 + C11393 * C11377 + C11394 * C11376) *
              C153783 * C153767 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C154107 +
             C3138 * C153927) *
                C11376 +
            (C11381 + C11382) * C11377 + C11391 * C11378 + C11392 * C154108) *
               C153783 * C326 -
           ((C11589 + C11590) * C154108 + (C11591 + C11592) * C11378 +
            (C11593 + C11594) * C11377 +
            (C3139 * C153927 + C3138 * C154107) * C11376) *
               C153783 * C327 +
           ((C3139 * C154107 + C3142 * C153927) * C11376 +
            (C11595 + C11596) * C11377 + (C11597 + C11598) * C11378 +
            (C11599 + C11600) * C154108) *
               C153783 * C328) *
              C329 +
          (((C11594 + C11593) * C11376 + (C11592 + C11591) * C11377 +
            (C11590 + C11589) * C11378 +
            (C412 * C154107 + C419 * C153927) * C154108) *
               C153783 * C327 -
           (C11393 * C154108 + C11394 * C11378 + (C11384 + C11383) * C11377 +
            (C11382 + C11381) * C11376) *
               C153783 * C326 -
           (((C134 * C1343 + C1359 + C1359 + C153882 * C1353) * C153927 +
             C419 * C154107) *
                C154108 +
            (C11600 + C11599) * C11378 + (C11598 + C11597) * C11377 +
            (C11596 + C11595) * C11376) *
               C153783 * C328) *
              C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C34572 +
            C3138 * C34573 + C3139 * C34574 + C3142 * C154116) *
               C154074 +
           (C34579 + C34580 + C34581 + C34582) * C153722) *
              C153783 * C153767 * C130 -
          ((C34583 + C34584 + C34585 + C34586) * C153722 +
           (C34582 + C34581 + C34580 + C34579) * C154074) *
              C153783 * C153767 * C131 +
          ((C34586 + C34585 + C34584 + C34583) * C154074 +
           (C34587 + C34588 + C34589 + C34590) * C153722) *
              C153783 * C153767 * C132 -
          (((C134 * C1343 + C1359 + C1359 + C153882 * C1353) * C154116 +
            C419 * C34574 + C412 * C34573 + C196 * C34572) *
               C153722 +
           (C34590 + C34589 + C34588 + C34587) * C154074) *
              C153783 * C153767 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C34572 +
             C3138 * C34573 + C3139 * C34574 + C3142 * C154116) *
                C154074 +
            (C34579 + C34580 + C34581 + C34582) * C153722) *
               C153783 * C326 -
           ((C34785 + C34786 + C34787 + C34788) * C153722 +
            (C4591 * C154116 + C3142 * C34574 + C3139 * C34573 +
             C3138 * C34572) *
                C154074) *
               C153783 * C327 +
           ((C3139 * C34572 + C3142 * C34573 + C4591 * C34574 +
             C28235 * C154116) *
                C154074 +
            (C34789 + C34790 + C34791 + C34792) * C153722) *
               C153783 * C328) *
              C329 +
          (((C34788 + C34787 + C34786 + C34785) * C154074 +
            (C414 * C34572 + C417 * C34573 + C3140 * C34574 + C3144 * C154116) *
                C153722) *
               C153783 * C327 -
           ((C34583 + C34584 + C34585 + C34586) * C153722 +
            (C34582 + C34581 + C34580 + C34579) * C154074) *
               C153783 * C326 -
           (((C134 * C4574 + C4586 + C4586 + C153882 * C4580) * C154116 +
             C3144 * C34574 + C3140 * C34573 + C417 * C34572) *
                C153722 +
            (C34792 + C34791 + C34790 + C34789) * C154074) *
               C153783 * C328) *
              C153754)) /
            (p * q * std::sqrt(p + q));
    d2ee[305] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C154107 +
             C3138 * C153927) *
                C11376 +
            (C11381 + C11382) * C11377 + C11391 * C11378 + C11392 * C154108) *
               C153783 * C154164 -
           (C12006 * C154108 + C12007 * C11378 + (C11593 + C11594) * C11377 +
            (C3139 * C153927 + C3138 * C154107) * C11376) *
               C153783 * C154165 +
           ((C3139 * C154107 + C3142 * C153927) * C11376 +
            (C11595 + C11596) * C11377 + (C11597 + C11598) * C11378 +
            (C11599 + C11600) * C154108) *
               C153783 * C1629) *
              C154085 +
          (((C11594 + C11593) * C11376 + (C11592 + C11591) * C11377 +
            (C11590 + C11589) * C11378 + (C12008 + C12009) * C154108) *
               C153783 * C154165 -
           (C11393 * C154108 + C11394 * C11378 + (C11384 + C11383) * C11377 +
            (C11382 + C11381) * C11376) *
               C153783 * C154164 -
           (((C134 * C1343 + C1359 + C1359 + C153882 * C1353) * C153927 +
             C419 * C154107) *
                C154108 +
            (C11600 + C11599) * C11378 + (C11598 + C11597) * C11377 +
            (C11596 + C11595) * C11376) *
               C153783 * C1629) *
              C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C34572 +
             C3138 * C34573 + C3139 * C34574 + C3142 * C154116) *
                C154074 +
            (C34579 + C34580 + C34581 + C34582) * C153722) *
               C153783 * C154164 -
           ((C34785 + C34786 + C34787 + C34788) * C153722 +
            (C4591 * C154116 + C3142 * C34574 + C3139 * C34573 +
             C3138 * C34572) *
                C154074) *
               C153783 * C154165 +
           ((C3139 * C34572 + C3142 * C34573 + C4591 * C34574 +
             C28235 * C154116) *
                C154074 +
            (C34789 + C34790 + C34791 + C34792) * C153722) *
               C153783 * C1629) *
              C154085 +
          (((C34788 + C34787 + C34786 + C34785) * C154074 +
            (C35194 + C35195 + C35196 + C35197) * C153722) *
               C153783 * C154165 -
           ((C34583 + C34584 + C34585 + C34586) * C153722 +
            (C34582 + C34581 + C34580 + C34579) * C154074) *
               C153783 * C154164 -
           (((C134 * C4574 + C4586 + C4586 + C153882 * C4580) * C154116 +
             C3144 * C34574 + C3140 * C34573 + C417 * C34572) *
                C153722 +
            (C34792 + C34791 + C34790 + C34789) * C154074) *
               C153783 * C1629) *
              C153754)) /
            (p * q * std::sqrt(p + q));
    d2ee[306] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C154107 +
             C3138 * C153927) *
                C11376 +
            (C11381 + C11382) * C11377 + C11391 * C11378 + C11392 * C154108) *
               C154094 -
           (C12204 * C154108 + C12205 * C11378 + (C11799 + C11800) * C11377 +
            (C4206 * C153927 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C154107) *
                C11376) *
               C153847) *
              C154164 +
          (((C4206 * C154107 + C4205 * C153927) * C11376 +
            (C12466 + C12467) * C11377 + (C12468 + C12469) * C11378 +
            (C12470 + C12471) * C154108) *
               C153847 -
           (C12006 * C154108 + C12007 * C11378 + (C11593 + C11594) * C11377 +
            (C3139 * C153927 + C3138 * C154107) * C11376) *
               C154094) *
              C154165 +
          (((C3139 * C154107 + C3142 * C153927) * C11376 +
            (C11595 + C11596) * C11377 + (C11597 + C11598) * C11378 +
            (C11599 + C11600) * C154108) *
               C154094 -
           (((C134 * C4171 + C4196 + C4196 + C153882 * C4179) * C153927 +
             C3877 * C154107) *
                C154108 +
            (C4208 * C153927 + C3416 * C154107) * C11378 +
            (C4207 * C153927 + C3417 * C154107) * C11377 +
            (C5574 * C153927 + C4205 * C154107) * C11376) *
               C153847) *
              C1629) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C34572 +
             C3138 * C34573 + C3139 * C34574 + C3142 * C154116) *
                C154074 +
            (C34579 + C34580 + C34581 + C34582) * C153722) *
               C154094 -
           ((C34987 + C34988 + C34989 + C34990) * C153722 +
            (C5574 * C154116 + C4205 * C34574 + C4206 * C34573 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C34572) *
                C154074) *
               C153847) *
              C154164 +
          (((C4206 * C34572 + C4205 * C34573 + C5574 * C34574 +
             C28789 * C154116) *
                C154074 +
            (C35654 + C35655 + C35656 + C35657) * C153722) *
               C153847 -
           ((C34785 + C34786 + C34787 + C34788) * C153722 +
            (C4591 * C154116 + C3142 * C34574 + C3139 * C34573 +
             C3138 * C34572) *
                C154074) *
               C154094) *
              C154165 +
          (((C3139 * C34572 + C3142 * C34573 + C4591 * C34574 +
             C28235 * C154116) *
                C154074 +
            (C34789 + C34790 + C34791 + C34792) * C153722) *
               C154094 -
           (((C134 * C28773 + C28784 + C28784 + C153882 * C28777) * C154116 +
             C28790 * C34574 + C4207 * C34573 + C3417 * C34572) *
                C153722 +
            (C29554 * C154116 + C28789 * C34574 + C5574 * C34573 +
             C4205 * C34572) *
                C154074) *
               C153847) *
              C1629) *
         C153748) /
            (p * q * std::sqrt(p + q));
    d2ee[307] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C154107 +
            C3138 * C153927) *
               C11376 +
           (C11381 + C11382) * C11377 + C11391 * C11378 + C11392 * C154108) *
              C153783 * C1338 -
          (C12006 * C154108 + C12007 * C11378 + (C11593 + C11594) * C11377 +
           (C3139 * C153927 + C3138 * C154107) * C11376) *
              C153783 * C1339 +
          ((C3139 * C154107 + C3142 * C153927) * C11376 +
           (C11595 + C11596) * C11377 + (C11597 + C11598) * C11378 +
           (C11599 + C11600) * C154108) *
              C153783 * C1340 -
          (((C134 * C3086 + C3121 + C3121 + C153882 * C3094) * C153927 +
            C3145 * C154107) *
               C154108 +
           (C3144 * C153927 + C3140 * C154107) * C11378 +
           (C3143 * C153927 + C3141 * C154107) * C11377 +
           (C4591 * C153927 + C3142 * C154107) * C11376) *
              C153783 * C1341) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C154107 +
             C3138 * C153927) *
                C11376 +
            (C11381 + C11382) * C11377 + C11391 * C11378 + C11392 * C154108) *
               C153783 * C1251 -
           (C12006 * C154108 + C12007 * C11378 + (C11593 + C11594) * C11377 +
            (C3139 * C153927 + C3138 * C154107) * C11376) *
               C153783 * C153819) *
              C1253 +
          (((C11594 + C11593) * C11376 + (C11592 + C11591) * C11377 +
            (C11590 + C11589) * C11378 + (C12008 + C12009) * C154108) *
               C153783 * C153819 -
           (C11393 * C154108 + C11394 * C11378 + (C11384 + C11383) * C11377 +
            (C11382 + C11381) * C11376) *
               C153783 * C1251) *
              C1254 +
          ((C11391 * C11376 + C11392 * C11377 + (C11388 + C11387) * C11378 +
            (C11389 + C11390) * C154108) *
               C153783 * C1251 -
           (((C134 * C342 + C395 + C395 + C153882 * C366) * C153927 +
             C784 * C154107) *
                C154108 +
            (C12009 + C12008) * C11378 + C12006 * C11377 + C12007 * C11376) *
               C153783 * C153819) *
              C1255)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C154107 +
             C3138 * C153927) *
                C11376 +
            (C11381 + C11382) * C11377 + C11391 * C11378 + C11392 * C154108) *
               C549 -
           (C12204 * C154108 + C12205 * C11378 + (C11799 + C11800) * C11377 +
            (C4206 * C153927 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C154107) *
                C11376) *
               C550 +
           (((C134 * C557 + C602 + C602 + C153882 * C581) * C154107 +
             C4830 * C153927) *
                C11376 +
            (C11801 + C11802) * C11377 + (C11803 + C11804) * C11378 +
            (C11805 + C11811) * C154108) *
               C551) *
              C1251 +
          (((C4206 * C154107 + C4205 * C153927) * C11376 +
            (C12466 + C12467) * C11377 + (C12468 + C12469) * C11378 +
            (C12470 + C12471) * C154108) *
               C550 -
           (C12006 * C154108 + C12007 * C11378 + (C11593 + C11594) * C11377 +
            (C3139 * C153927 + C3138 * C154107) * C11376) *
               C549 -
           (((C134 * C3372 + C3403 + C3403 + C153882 * C3380) * C153927 +
             C11810 * C154107) *
                C154108 +
            (C3421 * C153927 + C3420 * C154107) * C11378 +
            (C3419 * C153927 + C3418 * C154107) * C11377 +
            (C4831 * C153927 + C4830 * C154107) * C11376) *
               C551) *
              C153819) *
         C153748) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C34572 +
             C3138 * C34573 + C3139 * C34574 + C3142 * C154116) *
                C154074 +
            (C34579 + C34580 + C34581 + C34582) * C153722) *
               C153783 * C1251 -
           ((C34785 + C34786 + C34787 + C34788) * C153722 +
            (C4591 * C154116 + C3142 * C34574 + C3139 * C34573 +
             C3138 * C34572) *
                C154074) *
               C153783 * C153819) *
              C1253 +
          (((C34788 + C34787 + C34786 + C34785) * C154074 +
            (C35194 + C35195 + C35196 + C35197) * C153722) *
               C153783 * C153819 -
           ((C34583 + C34584 + C34585 + C34586) * C153722 +
            (C34582 + C34581 + C34580 + C34579) * C154074) *
               C153783 * C1251) *
              C1254 +
          (((C34586 + C34585 + C34584 + C34583) * C154074 +
            (C34587 + C34588 + C34589 + C34590) * C153722) *
               C153783 * C1251 -
           (((C134 * C3086 + C3121 + C3121 + C153882 * C3094) * C154116 +
             C3145 * C34574 + C418 * C34573 + C413 * C34572) *
                C153722 +
            (C35197 + C35196 + C35195 + C35194) * C154074) *
               C153783 * C153819) *
              C1255)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C34572 +
            C3138 * C34573 + C3139 * C34574 + C3142 * C154116) *
               C154074 +
           (C34579 + C34580 + C34581 + C34582) * C153722) *
              C153783 * C1338 -
          ((C34785 + C34786 + C34787 + C34788) * C153722 +
           (C4591 * C154116 + C3142 * C34574 + C3139 * C34573 +
            C3138 * C34572) *
               C154074) *
              C153783 * C1339 +
          ((C3139 * C34572 + C3142 * C34573 + C4591 * C34574 +
            C28235 * C154116) *
               C154074 +
           (C34789 + C34790 + C34791 + C34792) * C153722) *
              C153783 * C1340 -
          (((C134 * C28219 + C28230 + C28230 + C153882 * C28223) * C154116 +
            C28236 * C34574 + C3143 * C34573 + C3141 * C34572) *
               C153722 +
           (C29003 * C154116 + C28235 * C34574 + C4591 * C34573 +
            C3142 * C34572) *
               C154074) *
              C153783 * C1341) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C34572 +
             C3138 * C34573 + C3139 * C34574 + C3142 * C154116) *
                C154074 +
            (C34579 + C34580 + C34581 + C34582) * C153722) *
               C549 -
           ((C34987 + C34988 + C34989 + C34990) * C153722 +
            (C5574 * C154116 + C4205 * C34574 + C4206 * C34573 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C34572) *
                C154074) *
               C550 +
           (((C134 * C557 + C602 + C602 + C153882 * C581) * C34572 +
             C4830 * C34573 + C4831 * C34574 + C29138 * C154116) *
                C154074 +
            (C34991 + C34992 + C34993 + C34999) * C153722) *
               C551) *
              C1251 +
          (((C4206 * C34572 + C4205 * C34573 + C5574 * C34574 +
             C28789 * C154116) *
                C154074 +
            (C35654 + C35655 + C35656 + C35657) * C153722) *
               C550 -
           ((C34785 + C34786 + C34787 + C34788) * C153722 +
            (C4591 * C154116 + C3142 * C34574 + C3139 * C34573 +
             C3138 * C34572) *
                C154074) *
               C549 -
           (((C134 * C28359 + C28366 + C28366 + C153882 * C28363) * C154116 +
             C34998 * C34574 + C3419 * C34573 + C3418 * C34572) *
                C153722 +
            (C29139 * C154116 + C29138 * C34574 + C4831 * C34573 +
             C4830 * C34572) *
                C154074) *
               C551) *
              C153819) *
         C153748) /
            (p * q * std::sqrt(p + q));
    d2ee[308] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C153882 * C152) * C154107 +
              C3138 * C153927) *
                 C11376 +
             (C11381 + C11382) * C11377 + C11391 * C11378 + C11392 * C154108) *
                C154094 -
            (C12204 * C154108 + C12205 * C11378 + (C11799 + C11800) * C11377 +
             (C4206 * C153927 +
              (C134 * C556 + C601 + C601 + C153882 * C580) * C154107) *
                 C11376) *
                C153847) *
               C1251 +
           (((C4206 * C154107 + C4205 * C153927) * C11376 +
             (C12466 + C12467) * C11377 + (C12468 + C12469) * C11378 +
             (C12470 + C12471) * C154108) *
                C153847 -
            (C12006 * C154108 + C12007 * C11378 + (C11593 + C11594) * C11377 +
             (C3139 * C153927 + C3138 * C154107) * C11376) *
                C154094) *
               C153819) *
              C154085 +
          ((((C11800 + C11799) * C11376 + (C11798 + C11797) * C11377 +
             (C11796 + C11795) * C11378 + (C12206 + C12207) * C154108) *
                C153847 -
            (C11393 * C154108 + C11394 * C11378 + (C11384 + C11383) * C11377 +
             (C11382 + C11381) * C11376) *
                C154094) *
               C1251 +
           (((C11594 + C11593) * C11376 + (C11592 + C11591) * C11377 +
             (C11590 + C11589) * C11378 + (C12008 + C12009) * C154108) *
                C154094 -
            (((C134 * C1916 + C1932 + C1932 + C153882 * C1926) * C153927 +
              C1125 * C154107) *
                 C154108 +
             (C12471 + C12470) * C11378 + (C12469 + C12468) * C11377 +
             (C12467 + C12466) * C11376) *
                C153847) *
               C153819) *
              C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C153882 * C152) * C34572 +
              C3138 * C34573 + C3139 * C34574 + C3142 * C154116) *
                 C154074 +
             (C34579 + C34580 + C34581 + C34582) * C153722) *
                C154094 -
            ((C34987 + C34988 + C34989 + C34990) * C153722 +
             (C5574 * C154116 + C4205 * C34574 + C4206 * C34573 +
              (C134 * C556 + C601 + C601 + C153882 * C580) * C34572) *
                 C154074) *
                C153847) *
               C1251 +
           (((C4206 * C34572 + C4205 * C34573 + C5574 * C34574 +
              C28789 * C154116) *
                 C154074 +
             (C35654 + C35655 + C35656 + C35657) * C153722) *
                C153847 -
            ((C34785 + C34786 + C34787 + C34788) * C153722 +
             (C4591 * C154116 + C3142 * C34574 + C3139 * C34573 +
              C3138 * C34572) *
                 C154074) *
                C154094) *
               C153819) *
              C154085 +
          ((((C34990 + C34989 + C34988 + C34987) * C154074 +
             (C35392 + C35393 + C35394 + C35395) * C153722) *
                C153847 -
            ((C34583 + C34584 + C34585 + C34586) * C153722 +
             (C34582 + C34581 + C34580 + C34579) * C154074) *
                C154094) *
               C1251 +
           (((C34788 + C34787 + C34786 + C34785) * C154074 +
             (C35194 + C35195 + C35196 + C35197) * C153722) *
                C154094 -
            (((C134 * C5557 + C5569 + C5569 + C153882 * C5563) * C154116 +
              C4208 * C34574 + C3416 * C34573 + C1123 * C34572) *
                 C153722 +
             (C35657 + C35656 + C35655 + C35654) * C154074) *
                C153847) *
               C153819) *
              C153754)) /
            (p * q * std::sqrt(p + q));
    d2ee[309] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C154107 +
             C3138 * C153927) *
                C11376 +
            (C11381 + C11382) * C11377 + C11391 * C11378 + C11392 * C154108) *
               C153783 * C1251 -
           (C12006 * C154108 + C12007 * C11378 + (C11593 + C11594) * C11377 +
            (C3139 * C153927 + C3138 * C154107) * C11376) *
               C153783 * C153819) *
              C1253 +
          (((C11594 + C11593) * C11376 + (C11592 + C11591) * C11377 +
            (C11590 + C11589) * C11378 + (C12008 + C12009) * C154108) *
               C153783 * C153819 -
           (C11393 * C154108 + C11394 * C11378 + (C11384 + C11383) * C11377 +
            (C11382 + C11381) * C11376) *
               C153783 * C1251) *
              C1254 +
          ((C11391 * C11376 + C11392 * C11377 + (C11388 + C11387) * C11378 +
            (C11389 + C11390) * C154108) *
               C153783 * C1251 -
           (((C134 * C342 + C395 + C395 + C153882 * C366) * C153927 +
             C784 * C154107) *
                C154108 +
            (C12009 + C12008) * C11378 + C12006 * C11377 + C12007 * C11376) *
               C153783 * C153819) *
              C1255)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C154107 +
            C3138 * C153927) *
               C11376 +
           (C11381 + C11382) * C11377 + C11391 * C11378 + C11392 * C154108) *
              C153783 * C1338 -
          (C12006 * C154108 + C12007 * C11378 + (C11593 + C11594) * C11377 +
           (C3139 * C153927 + C3138 * C154107) * C11376) *
              C153783 * C1339 +
          ((C3139 * C154107 + C3142 * C153927) * C11376 +
           (C11595 + C11596) * C11377 + (C11597 + C11598) * C11378 +
           (C11599 + C11600) * C154108) *
              C153783 * C1340 -
          (((C134 * C3086 + C3121 + C3121 + C153882 * C3094) * C153927 +
            C3145 * C154107) *
               C154108 +
           (C3144 * C153927 + C3140 * C154107) * C11378 +
           (C3143 * C153927 + C3141 * C154107) * C11377 +
           (C4591 * C153927 + C3142 * C154107) * C11376) *
              C153783 * C1341) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C34572 +
             C3138 * C34573 + C3139 * C34574 + C3142 * C154116) *
                C154074 +
            (C34579 + C34580 + C34581 + C34582) * C153722) *
               C153783 * C1251 -
           ((C34785 + C34786 + C34787 + C34788) * C153722 +
            (C4591 * C154116 + C3142 * C34574 + C3139 * C34573 +
             C3138 * C34572) *
                C154074) *
               C153783 * C153819) *
              C1253 +
          (((C34788 + C34787 + C34786 + C34785) * C154074 +
            (C35194 + C35195 + C35196 + C35197) * C153722) *
               C153783 * C153819 -
           ((C34583 + C34584 + C34585 + C34586) * C153722 +
            (C34582 + C34581 + C34580 + C34579) * C154074) *
               C153783 * C1251) *
              C1254 +
          (((C34586 + C34585 + C34584 + C34583) * C154074 +
            (C34587 + C34588 + C34589 + C34590) * C153722) *
               C153783 * C1251 -
           (((C134 * C3086 + C3121 + C3121 + C153882 * C3094) * C154116 +
             C3145 * C34574 + C418 * C34573 + C413 * C34572) *
                C153722 +
            (C35197 + C35196 + C35195 + C35194) * C154074) *
               C153783 * C153819) *
              C1255)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C34572 +
            C3138 * C34573 + C3139 * C34574 + C3142 * C154116) *
               C154074 +
           (C34579 + C34580 + C34581 + C34582) * C153722) *
              C153783 * C1338 -
          ((C34785 + C34786 + C34787 + C34788) * C153722 +
           (C4591 * C154116 + C3142 * C34574 + C3139 * C34573 +
            C3138 * C34572) *
               C154074) *
              C153783 * C1339 +
          ((C3139 * C34572 + C3142 * C34573 + C4591 * C34574 +
            C28235 * C154116) *
               C154074 +
           (C34789 + C34790 + C34791 + C34792) * C153722) *
              C153783 * C1340 -
          (((C134 * C28219 + C28230 + C28230 + C153882 * C28223) * C154116 +
            C28236 * C34574 + C3143 * C34573 + C3141 * C34572) *
               C153722 +
           (C29003 * C154116 + C28235 * C34574 + C4591 * C34573 +
            C3142 * C34572) *
               C154074) *
              C153783 * C1341) *
         C153748) /
            (p * q * std::sqrt(p + q));
    d2ee[310] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C153882 * C152) * C154107 +
              C3138 * C153927) *
                 C11376 +
             (C11381 + C11382) * C11377 + C11391 * C11378 + C11392 * C154108) *
                C2058 -
            (C12204 * C154108 + C12205 * C11378 + (C11799 + C11800) * C11377 +
             (C4206 * C153927 +
              (C134 * C556 + C601 + C601 + C153882 * C580) * C154107) *
                 C11376) *
                C153847) *
               C154093 +
           (((C4206 * C154107 + C4205 * C153927) * C11376 +
             (C12466 + C12467) * C11377 + (C12468 + C12469) * C11378 +
             (C12470 + C12471) * C154108) *
                C153847 -
            (C12006 * C154108 + C12007 * C11378 + (C11593 + C11594) * C11377 +
             (C3139 * C153927 + C3138 * C154107) * C11376) *
                C2058) *
               C153819) *
              C154085 +
          ((((C11800 + C11799) * C11376 + (C11798 + C11797) * C11377 +
             (C11796 + C11795) * C11378 + (C12206 + C12207) * C154108) *
                C153847 -
            (C11393 * C154108 + C11394 * C11378 + (C11384 + C11383) * C11377 +
             (C11382 + C11381) * C11376) *
                C2058) *
               C154093 +
           (((C11594 + C11593) * C11376 + (C11592 + C11591) * C11377 +
             (C11590 + C11589) * C11378 + (C12008 + C12009) * C154108) *
                C2058 -
            (((C134 * C1916 + C1932 + C1932 + C153882 * C1926) * C153927 +
              C1125 * C154107) *
                 C154108 +
             (C12471 + C12470) * C11378 + (C12469 + C12468) * C11377 +
             (C12467 + C12466) * C11376) *
                C153847) *
               C153819) *
              C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C153882 * C152) * C34572 +
              C3138 * C34573 + C3139 * C34574 + C3142 * C154116) *
                 C154074 +
             (C34579 + C34580 + C34581 + C34582) * C153722) *
                C2058 -
            ((C34987 + C34988 + C34989 + C34990) * C153722 +
             (C5574 * C154116 + C4205 * C34574 + C4206 * C34573 +
              (C134 * C556 + C601 + C601 + C153882 * C580) * C34572) *
                 C154074) *
                C153847) *
               C154093 +
           (((C4206 * C34572 + C4205 * C34573 + C5574 * C34574 +
              C28789 * C154116) *
                 C154074 +
             (C35654 + C35655 + C35656 + C35657) * C153722) *
                C153847 -
            ((C34785 + C34786 + C34787 + C34788) * C153722 +
             (C4591 * C154116 + C3142 * C34574 + C3139 * C34573 +
              C3138 * C34572) *
                 C154074) *
                C2058) *
               C153819) *
              C154085 +
          ((((C34990 + C34989 + C34988 + C34987) * C154074 +
             (C35392 + C35393 + C35394 + C35395) * C153722) *
                C153847 -
            ((C34583 + C34584 + C34585 + C34586) * C153722 +
             (C34582 + C34581 + C34580 + C34579) * C154074) *
                C2058) *
               C154093 +
           (((C34788 + C34787 + C34786 + C34785) * C154074 +
             (C35194 + C35195 + C35196 + C35197) * C153722) *
                C2058 -
            (((C134 * C5557 + C5569 + C5569 + C153882 * C5563) * C154116 +
              C4208 * C34574 + C3416 * C34573 + C1123 * C34572) *
                 C153722 +
             (C35657 + C35656 + C35655 + C35654) * C154074) *
                C153847) *
               C153819) *
              C153754)) /
            (p * q * std::sqrt(p + q));
    d2ee[311] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C154107 +
             C3138 * C153927) *
                C11376 +
            (C11381 + C11382) * C11377 + C11391 * C11378 + C11392 * C154108) *
               C154166 -
           (C12204 * C154108 + C12205 * C11378 + (C11799 + C11800) * C11377 +
            (C4206 * C153927 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C154107) *
                C11376) *
               C154167 +
           (((C134 * C557 + C602 + C602 + C153882 * C581) * C154107 +
             C4830 * C153927) *
                C11376 +
            (C11801 + C11802) * C11377 + (C11803 + C11804) * C11378 +
            (C11805 + C11811) * C154108) *
               C2574) *
              C154093 +
          (((C4206 * C154107 + C4205 * C153927) * C11376 +
            (C12466 + C12467) * C11377 + (C12468 + C12469) * C11378 +
            (C12470 + C12471) * C154108) *
               C154167 -
           (C12006 * C154108 + C12007 * C11378 + (C11593 + C11594) * C11377 +
            (C3139 * C153927 + C3138 * C154107) * C11376) *
               C154166 -
           (((C134 * C3372 + C3403 + C3403 + C153882 * C3380) * C153927 +
             C11810 * C154107) *
                C154108 +
            (C3421 * C153927 + C3420 * C154107) * C11378 +
            (C3419 * C153927 + C3418 * C154107) * C11377 +
            (C4831 * C153927 + C4830 * C154107) * C11376) *
               C2574) *
              C153819) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C34572 +
             C3138 * C34573 + C3139 * C34574 + C3142 * C154116) *
                C154074 +
            (C34579 + C34580 + C34581 + C34582) * C153722) *
               C154166 -
           ((C34987 + C34988 + C34989 + C34990) * C153722 +
            (C5574 * C154116 + C4205 * C34574 + C4206 * C34573 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C34572) *
                C154074) *
               C154167 +
           (((C134 * C557 + C602 + C602 + C153882 * C581) * C34572 +
             C4830 * C34573 + C4831 * C34574 + C29138 * C154116) *
                C154074 +
            (C34991 + C34992 + C34993 + C34999) * C153722) *
               C2574) *
              C154093 +
          (((C4206 * C34572 + C4205 * C34573 + C5574 * C34574 +
             C28789 * C154116) *
                C154074 +
            (C35654 + C35655 + C35656 + C35657) * C153722) *
               C154167 -
           ((C34785 + C34786 + C34787 + C34788) * C153722 +
            (C4591 * C154116 + C3142 * C34574 + C3139 * C34573 +
             C3138 * C34572) *
                C154074) *
               C154166 -
           (((C134 * C28359 + C28366 + C28366 + C153882 * C28363) * C154116 +
             C34998 * C34574 + C3419 * C34573 + C3418 * C34572) *
                C153722 +
            (C29139 * C154116 + C29138 * C34574 + C4831 * C34573 +
             C4830 * C34572) *
                C154074) *
               C2574) *
              C153819) *
         C153748) /
            (p * q * std::sqrt(p + q));
    d2ee[312] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C154107 +
             C3138 * C153927) *
                C11376 +
            (C11381 + C11382) * C11377 + C11391 * C11378 + C11392 * C154108) *
               C2058 -
           (C12204 * C154108 + C12205 * C11378 + (C11799 + C11800) * C11377 +
            (C4206 * C153927 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C154107) *
                C11376) *
               C153847) *
              C326 +
          (((C4206 * C154107 + C4205 * C153927) * C11376 +
            (C12466 + C12467) * C11377 + (C12468 + C12469) * C11378 +
            (C12470 + C12471) * C154108) *
               C153847 -
           (C12006 * C154108 + C12007 * C11378 + (C11593 + C11594) * C11377 +
            (C3139 * C153927 + C3138 * C154107) * C11376) *
               C2058) *
              C327 +
          (((C3139 * C154107 + C3142 * C153927) * C11376 +
            (C11595 + C11596) * C11377 + (C11597 + C11598) * C11378 +
            (C11599 + C11600) * C154108) *
               C2058 -
           (((C134 * C4171 + C4196 + C4196 + C153882 * C4179) * C153927 +
             C3877 * C154107) *
                C154108 +
            (C4208 * C153927 + C3416 * C154107) * C11378 +
            (C4207 * C153927 + C3417 * C154107) * C11377 +
            (C5574 * C153927 + C4205 * C154107) * C11376) *
               C153847) *
              C328) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C154107 +
             C3138 * C153927) *
                C11376 +
            (C11381 + C11382) * C11377 + C11391 * C11378 + C11392 * C154108) *
               C2058 -
           (C12204 * C154108 + C12205 * C11378 + (C11799 + C11800) * C11377 +
            (C4206 * C153927 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C154107) *
                C11376) *
               C153847) *
              C153767 * C1253 +
          (((C11800 + C11799) * C11376 + (C11798 + C11797) * C11377 +
            (C11796 + C11795) * C11378 + (C12206 + C12207) * C154108) *
               C153847 -
           (C11393 * C154108 + C11394 * C11378 + (C11384 + C11383) * C11377 +
            (C11382 + C11381) * C11376) *
               C2058) *
              C153767 * C1254 +
          ((C11391 * C11376 + C11392 * C11377 + (C11388 + C11387) * C11378 +
            (C11389 + C11390) * C154108) *
               C2058 -
           (((C134 * C1086 + C1113 + C1113 + C153882 * C1098) * C153927 +
             C918 * C154107) *
                C154108 +
            (C12207 + C12206) * C11378 + C12204 * C11377 + C12205 * C11376) *
               C153847) *
              C153767 * C1255)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C154107 +
            C3138 * C153927) *
               C11376 +
           (C11381 + C11382) * C11377 + C11391 * C11378 + C11392 * C154108) *
              C2264 -
          (C12204 * C154108 + C12205 * C11378 + (C11799 + C11800) * C11377 +
           (C4206 * C153927 +
            (C134 * C556 + C601 + C601 + C153882 * C580) * C154107) *
               C11376) *
              C2265 +
          (((C134 * C557 + C602 + C602 + C153882 * C581) * C154107 +
            C4830 * C153927) *
               C11376 +
           (C11801 + C11802) * C11377 + (C11803 + C11804) * C11378 +
           (C11805 + C11811) * C154108) *
              C2266 -
          (((C134 * C8529 + C14154 + C14154 + C153882 * C8531) * C153927 +
            (C134 * C2269 + C2285 + C2285 + C153882 * C2279) * C154107) *
               C154108 +
           ((C134 * C6157 + C6176 + C6176 + C153882 * C6169) * C153927 +
            (C134 * C2270 + C2286 + C2286 + C153882 * C2280) * C154107) *
               C11378 +
           ((C134 * C6159 + C6178 + C6178 + C153882 * C6171) * C153927 +
            (C134 * C2271 + C2287 + C2287 + C153882 * C2281) * C154107) *
               C11377 +
           ((C134 * C6161 + C6180 + C6180 + C153882 * C6173) * C153927 +
            (C134 * C2272 + C2288 + C2288 + C153882 * C2282) * C154107) *
               C11376) *
              C2267) *
         C153767 * C153748) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C34572 +
             C3138 * C34573 + C3139 * C34574 + C3142 * C154116) *
                C154074 +
            (C34579 + C34580 + C34581 + C34582) * C153722) *
               C2058 -
           ((C34987 + C34988 + C34989 + C34990) * C153722 +
            (C5574 * C154116 + C4205 * C34574 + C4206 * C34573 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C34572) *
                C154074) *
               C153847) *
              C153767 * C1253 +
          (((C34990 + C34989 + C34988 + C34987) * C154074 +
            (C35392 + C35393 + C35394 + C35395) * C153722) *
               C153847 -
           ((C34583 + C34584 + C34585 + C34586) * C153722 +
            (C34582 + C34581 + C34580 + C34579) * C154074) *
               C2058) *
              C153767 * C1254 +
          (((C34586 + C34585 + C34584 + C34583) * C154074 +
            (C34587 + C34588 + C34589 + C34590) * C153722) *
               C2058 -
           (((C134 * C4171 + C4196 + C4196 + C153882 * C4179) * C154116 +
             C3877 * C34574 + C1124 * C34573 + C634 * C34572) *
                C153722 +
            (C35395 + C35394 + C35393 + C35392) * C154074) *
               C153847) *
              C153767 * C1255)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C34572 +
             C3138 * C34573 + C3139 * C34574 + C3142 * C154116) *
                C154074 +
            (C34579 + C34580 + C34581 + C34582) * C153722) *
               C2058 -
           ((C34987 + C34988 + C34989 + C34990) * C153722 +
            (C5574 * C154116 + C4205 * C34574 + C4206 * C34573 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C34572) *
                C154074) *
               C153847) *
              C326 +
          (((C4206 * C34572 + C4205 * C34573 + C5574 * C34574 +
             C28789 * C154116) *
                C154074 +
            (C35654 + C35655 + C35656 + C35657) * C153722) *
               C153847 -
           ((C34785 + C34786 + C34787 + C34788) * C153722 +
            (C4591 * C154116 + C3142 * C34574 + C3139 * C34573 +
             C3138 * C34572) *
                C154074) *
               C2058) *
              C327 +
          (((C3139 * C34572 + C3142 * C34573 + C4591 * C34574 +
             C28235 * C154116) *
                C154074 +
            (C34789 + C34790 + C34791 + C34792) * C153722) *
               C2058 -
           (((C134 * C28773 + C28784 + C28784 + C153882 * C28777) * C154116 +
             C28790 * C34574 + C4207 * C34573 + C3417 * C34572) *
                C153722 +
            (C29554 * C154116 + C28789 * C34574 + C5574 * C34573 +
             C4205 * C34572) *
                C154074) *
               C153847) *
              C328) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C34572 +
            C3138 * C34573 + C3139 * C34574 + C3142 * C154116) *
               C154074 +
           (C34579 + C34580 + C34581 + C34582) * C153722) *
              C2264 -
          ((C34987 + C34988 + C34989 + C34990) * C153722 +
           (C5574 * C154116 + C4205 * C34574 + C4206 * C34573 +
            (C134 * C556 + C601 + C601 + C153882 * C580) * C34572) *
               C154074) *
              C2265 +
          (((C134 * C557 + C602 + C602 + C153882 * C581) * C34572 +
            C4830 * C34573 + C4831 * C34574 + C29138 * C154116) *
               C154074 +
           (C34991 + C34992 + C34993 + C34999) * C153722) *
              C2266 -
          (((C134 * C31684 + C37340 + C37340 + C153882 * C31686) * C154116 +
            (C134 * C6158 + C6177 + C6177 + C153882 * C6170) * C34574 +
            (C134 * C6159 + C6178 + C6178 + C153882 * C6171) * C34573 +
            (C134 * C2271 + C2287 + C2287 + C153882 * C2281) * C34572) *
               C153722 +
           ((C134 * C29881 + C29888 + C29888 + C153882 * C29885) * C154116 +
            (C134 * C6160 + C6179 + C6179 + C153882 * C6172) * C34574 +
            (C134 * C6161 + C6180 + C6180 + C153882 * C6173) * C34573 +
            (C134 * C2272 + C2288 + C2288 + C153882 * C2282) * C34572) *
               C154074) *
              C2267) *
         C153767 * C153748) /
            (p * q * std::sqrt(p + q));
    d2ee[313] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C154107 +
             C3138 * C153927) *
                C11376 +
            (C11381 + C11382) * C11377 + C11391 * C11378 + C11392 * C154108) *
               C154166 -
           (C12204 * C154108 + C12205 * C11378 + (C11799 + C11800) * C11377 +
            (C4206 * C153927 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C154107) *
                C11376) *
               C154167 +
           (((C134 * C557 + C602 + C602 + C153882 * C581) * C154107 +
             C4830 * C153927) *
                C11376 +
            (C11801 + C11802) * C11377 + (C11803 + C11804) * C11378 +
            (C11805 + C11811) * C154108) *
               C2574) *
              C153767 * C154085 +
          (((C11800 + C11799) * C11376 + (C11798 + C11797) * C11377 +
            (C11796 + C11795) * C11378 + (C12206 + C12207) * C154108) *
               C154167 -
           (C11393 * C154108 + C11394 * C11378 + (C11384 + C11383) * C11377 +
            (C11382 + C11381) * C11376) *
               C154166 -
           (((C134 * C1485 + C1501 + C1501 + C153882 * C1495) * C153927 +
             C640 * C154107) *
                C154108 +
            (C11811 + C11805) * C11378 + (C11804 + C11803) * C11377 +
            (C11802 + C11801) * C11376) *
               C2574) *
              C153767 * C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C34572 +
             C3138 * C34573 + C3139 * C34574 + C3142 * C154116) *
                C154074 +
            (C34579 + C34580 + C34581 + C34582) * C153722) *
               C154166 -
           ((C34987 + C34988 + C34989 + C34990) * C153722 +
            (C5574 * C154116 + C4205 * C34574 + C4206 * C34573 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C34572) *
                C154074) *
               C154167 +
           (((C134 * C557 + C602 + C602 + C153882 * C581) * C34572 +
             C4830 * C34573 + C4831 * C34574 + C29138 * C154116) *
                C154074 +
            (C34991 + C34992 + C34993 + C34999) * C153722) *
               C2574) *
              C153767 * C154085 +
          (((C34990 + C34989 + C34988 + C34987) * C154074 +
            (C35392 + C35393 + C35394 + C35395) * C153722) *
               C154167 -
           ((C34583 + C34584 + C34585 + C34586) * C153722 +
            (C34582 + C34581 + C34580 + C34579) * C154074) *
               C154166 -
           (((C134 * C4809 + C4823 + C4823 + C153882 * C4815) * C154116 +
             C3421 * C34574 + C3420 * C34573 + C638 * C34572) *
                C153722 +
            (C34999 + C34993 + C34992 + C34991) * C154074) *
               C2574) *
              C153767 * C153754)) /
            (p * q * std::sqrt(p + q));
    d2ee[314] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C154107 +
             C3138 * C153927) *
                C11376 +
            (C11381 + C11382) * C11377 + C11391 * C11378 + C11392 * C154108) *
               C2058 -
           (C12204 * C154108 + C12205 * C11378 + (C11799 + C11800) * C11377 +
            (C4206 * C153927 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C154107) *
                C11376) *
               C153847) *
              C153767 * C1253 +
          (((C11800 + C11799) * C11376 + (C11798 + C11797) * C11377 +
            (C11796 + C11795) * C11378 + (C12206 + C12207) * C154108) *
               C153847 -
           (C11393 * C154108 + C11394 * C11378 + (C11384 + C11383) * C11377 +
            (C11382 + C11381) * C11376) *
               C2058) *
              C153767 * C1254 +
          ((C11391 * C11376 + C11392 * C11377 + (C11388 + C11387) * C11378 +
            (C11389 + C11390) * C154108) *
               C2058 -
           (((C134 * C1086 + C1113 + C1113 + C153882 * C1098) * C153927 +
             C918 * C154107) *
                C154108 +
            (C12207 + C12206) * C11378 + C12204 * C11377 + C12205 * C11376) *
               C153847) *
              C153767 * C1255)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C154107 +
             C3138 * C153927) *
                C11376 +
            (C11381 + C11382) * C11377 + C11391 * C11378 + C11392 * C154108) *
               C2058 -
           (C12204 * C154108 + C12205 * C11378 + (C11799 + C11800) * C11377 +
            (C4206 * C153927 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C154107) *
                C11376) *
               C153847) *
              C326 +
          (((C4206 * C154107 + C4205 * C153927) * C11376 +
            (C12466 + C12467) * C11377 + (C12468 + C12469) * C11378 +
            (C12470 + C12471) * C154108) *
               C153847 -
           (C12006 * C154108 + C12007 * C11378 + (C11593 + C11594) * C11377 +
            (C3139 * C153927 + C3138 * C154107) * C11376) *
               C2058) *
              C327 +
          (((C3139 * C154107 + C3142 * C153927) * C11376 +
            (C11595 + C11596) * C11377 + (C11597 + C11598) * C11378 +
            (C11599 + C11600) * C154108) *
               C2058 -
           (((C134 * C4171 + C4196 + C4196 + C153882 * C4179) * C153927 +
             C3877 * C154107) *
                C154108 +
            (C4208 * C153927 + C3416 * C154107) * C11378 +
            (C4207 * C153927 + C3417 * C154107) * C11377 +
            (C5574 * C153927 + C4205 * C154107) * C11376) *
               C153847) *
              C328) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C34572 +
             C3138 * C34573 + C3139 * C34574 + C3142 * C154116) *
                C154074 +
            (C34579 + C34580 + C34581 + C34582) * C153722) *
               C2058 -
           ((C34987 + C34988 + C34989 + C34990) * C153722 +
            (C5574 * C154116 + C4205 * C34574 + C4206 * C34573 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C34572) *
                C154074) *
               C153847) *
              C153767 * C1253 +
          (((C34990 + C34989 + C34988 + C34987) * C154074 +
            (C35392 + C35393 + C35394 + C35395) * C153722) *
               C153847 -
           ((C34583 + C34584 + C34585 + C34586) * C153722 +
            (C34582 + C34581 + C34580 + C34579) * C154074) *
               C2058) *
              C153767 * C1254 +
          (((C34586 + C34585 + C34584 + C34583) * C154074 +
            (C34587 + C34588 + C34589 + C34590) * C153722) *
               C2058 -
           (((C134 * C4171 + C4196 + C4196 + C153882 * C4179) * C154116 +
             C3877 * C34574 + C1124 * C34573 + C634 * C34572) *
                C153722 +
            (C35395 + C35394 + C35393 + C35392) * C154074) *
               C153847) *
              C153767 * C1255)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C34572 +
             C3138 * C34573 + C3139 * C34574 + C3142 * C154116) *
                C154074 +
            (C34579 + C34580 + C34581 + C34582) * C153722) *
               C2058 -
           ((C34987 + C34988 + C34989 + C34990) * C153722 +
            (C5574 * C154116 + C4205 * C34574 + C4206 * C34573 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C34572) *
                C154074) *
               C153847) *
              C326 +
          (((C4206 * C34572 + C4205 * C34573 + C5574 * C34574 +
             C28789 * C154116) *
                C154074 +
            (C35654 + C35655 + C35656 + C35657) * C153722) *
               C153847 -
           ((C34785 + C34786 + C34787 + C34788) * C153722 +
            (C4591 * C154116 + C3142 * C34574 + C3139 * C34573 +
             C3138 * C34572) *
                C154074) *
               C2058) *
              C327 +
          (((C3139 * C34572 + C3142 * C34573 + C4591 * C34574 +
             C28235 * C154116) *
                C154074 +
            (C34789 + C34790 + C34791 + C34792) * C153722) *
               C2058 -
           (((C134 * C28773 + C28784 + C28784 + C153882 * C28777) * C154116 +
             C28790 * C34574 + C4207 * C34573 + C3417 * C34572) *
                C153722 +
            (C29554 * C154116 + C28789 * C34574 + C5574 * C34573 +
             C4205 * C34572) *
                C154074) *
               C153847) *
              C328) *
         C153748) /
            (p * q * std::sqrt(p + q));
    d2ee[315] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
              C14938 + C14938 + C153969 * C580) *
                 C154107 +
             (C19164 + C19165) * C153927) *
                C2846 +
            ((C14991 + C14992) * C154107 + C19130 * C153927) * C2847 +
            C18835 * C154130) *
               C153783 * C154093 -
           (C19775 * C154130 + (C19132 * C153927 + C19133 * C154107) * C2847 +
            ((C19166 + C19167) * C153927 + (C19165 + C19164) * C154107) *
                C2846) *
               C153783 * C153819) *
              C154162 +
          (((C19130 * C154107 + C19138 * C153927) * C2846 +
            (C18830 * C154107 + C19143 * C153927) * C2847 +
            (C19774 * C154107 + (C15281 + C15282) * C153927) * C154130) *
               C153783 * C153819 -
           (C18834 * C154130 +
            (C15752 * C153927 + (C14994 + C14993) * C154107) * C2847 +
            (C19133 * C153927 + (C14992 + C14991) * C154107) * C2846) *
               C153783 * C154093) *
              C154163 +
          ((C18835 * C2846 + (C15002 * C154107 + C19774 * C153927) * C2847 +
            ((C14998 + C14997) * C154107 + (C15765 + C15766) * C153927) *
                C154130) *
               C153783 * C154093 -
           (((C14934 * C1916 + C15245 + C15245 + C153969 * C1926 +
              C14932 * C340 + C15246 + C15246 + C154109 * C364) *
                 C153927 +
             (C15766 + C15765) * C154107) *
                C154130 +
            ((C15282 + C15281) * C153927 + C15751 * C154107) * C2847 +
            C19775 * C2846) *
               C153783 * C153819) *
              C774)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
             C14938 + C14938 + C153969 * C580) *
                C34572 +
            (C19164 + C19165) * C34573 + C38471 * C34574 + C43614 * C154116) *
               C153712 * C153783 * C154093 -
           ((C40260 + C40259) * C154116 + C40246 * C34574 +
            (C19166 + C19167) * C34573 + (C19165 + C19164) * C34572) *
               C153712 * C153783 * C153819) *
              C154162 +
          ((C19130 * C34572 + C19138 * C34573 + C38473 * C34574 +
            (C38482 + C38483) * C154116) *
               C153712 * C153783 * C153819 -
           (C38472 * C154116 + C19132 * C34574 + C19133 * C34573 +
            (C14992 + C14991) * C34572) *
               C153712 * C153783 * C154093) *
              C154163 +
          ((C15001 * C34572 + C18830 * C34573 + C19143 * C34574 +
            (C19170 + C19171) * C154116) *
               C153712 * C153783 * C154093 -
           ((C14934 * C5557 + C20977 + C20977 + C153969 * C5563 +
             C14932 * C3085 + C20978 + C20978 + C154109 * C3093) *
                C154116 +
            (C19171 + C19170) * C34574 + C19131 * C34573 + C15752 * C34572) *
               C153712 * C153783 * C153819) *
              C774)) /
            (p * q * std::sqrt(p + q));
    d2ee[316] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C14932 * C136 + C14937 + C14937 + C154109 * C152 +
               C14934 * C556 + C14938 + C14938 + C153969 * C580) *
                  C154107 +
              (C19164 + C19165) * C153927) *
                 C2846 +
             ((C14991 + C14992) * C154107 + C19130 * C153927) * C2847 +
             C18835 * C154130) *
                C154094 -
            (C20069 * C154130 +
             (C20456 * C153927 + (C15549 + C15550) * C154107) * C2847 +
             ((C20483 + C20484) * C153927 +
              (C14934 * C557 + C15495 + C15495 + C153969 * C581 +
               C14932 * C556 + C15496 + C15496 + C154109 * C580) *
                  C154107) *
                 C2846) *
                C153847) *
               C154093 +
           ((((C20484 + C20483) * C154107 +
              (C14932 * C1920 + C17462 + C17462 + C154109 * C1930 +
               C14934 * C3369 + C17461 + C17461 + C153969 * C3377) *
                  C153927) *
                 C2846 +
             (C20461 * C154107 + (C20485 + C20486) * C153927) * C2847 +
             (C20466 * C154107 + (C20487 + C20488) * C153927) * C154130) *
                C153847 -
            (C19775 * C154130 + (C19132 * C153927 + C19133 * C154107) * C2847 +
             ((C19166 + C19167) * C153927 + (C19165 + C19164) * C154107) *
                 C2846) *
                C154094) *
               C153819) *
              C329 +
          (((((C15550 + C15549) * C154107 + C20461 * C153927) * C2846 +
             ((C15548 + C15547) * C154107 + C20466 * C153927) * C2847 +
             ((C15546 + C15545) * C154107 + (C16273 + C16274) * C153927) *
                 C154130) *
                C153847 -
            (C18834 * C154130 +
             (C15752 * C153927 + (C14994 + C14993) * C154107) * C2847 +
             (C19133 * C153927 + (C14992 + C14991) * C154107) * C2846) *
                C154094) *
               C154093 +
           (((C19130 * C154107 + C19138 * C153927) * C2846 +
             (C18830 * C154107 + C19143 * C153927) * C2847 +
             (C19774 * C154107 + (C15281 + C15282) * C153927) * C154130) *
                C154094 -
            (((C14934 * C3372 + C17455 + C17455 + C153969 * C3380 +
               C14932 * C1917 + C17456 + C17456 + C154109 * C1927) *
                  C153927 +
              (C16274 + C16273) * C154107) *
                 C154130 +
             ((C20488 + C20487) * C153927 + C20066 * C154107) * C2847 +
             ((C20486 + C20485) * C153927 + C20456 * C154107) * C2846) *
                C153847) *
               C153819) *
              C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
              C14938 + C14938 + C153969 * C580) *
                 C34572 +
             (C19164 + C19165) * C34573 + C38471 * C34574 + C43614 * C154116) *
                C153712 * C154094 -
            ((C41545 + C41544) * C154116 + C41531 * C34574 +
             (C20483 + C20484) * C34573 +
             (C14934 * C557 + C15495 + C15495 + C153969 * C581 + C14932 * C556 +
              C15496 + C15496 + C154109 * C580) *
                 C34572) *
                C153712 * C153847) *
               C154093 +
           (((C20484 + C20483) * C34572 + (C22275 + C22276) * C34573 +
             (C41544 + C41545) * C34574 +
             (C14932 * C5559 + C41539 + C41539 + C154109 * C5565 +
              C14934 * C28358 + C41538 + C41538 + C153969 * C28362) *
                 C154116) *
                C153712 * C153847 -
            ((C40260 + C40259) * C154116 + C40246 * C34574 +
             (C19166 + C19167) * C34573 + (C19165 + C19164) * C34572) *
                C153712 * C154094) *
               C153819) *
              C329 +
          ((((C15550 + C15549) * C34572 + C20461 * C34573 + C39751 * C34574 +
             (C39760 + C39761) * C154116) *
                C153712 * C153847 -
            (C38472 * C154116 + C19132 * C34574 + C19133 * C34573 +
             (C14992 + C14991) * C34572) *
                C153712 * C154094) *
               C154093 +
           ((C19130 * C34572 + C19138 * C34573 + C38473 * C34574 +
             (C38482 + C38483) * C154116) *
                C153712 * C154094 -
            ((C14934 * C28359 + C41536 + C41536 + C153969 * C28363 +
              C14932 * C5558 + C41537 + C41537 + C154109 * C5564) *
                 C154116 +
             (C39761 + C39760) * C34574 + C39750 * C34573 + C20456 * C34572) *
                C153712 * C153847) *
               C153819) *
              C153754)) /
            (p * q * std::sqrt(p + q));
    d2ee[317] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
              C14938 + C14938 + C153969 * C580) *
                 C154107 +
             (C19164 + C19165) * C153927) *
                C2846 +
            ((C14991 + C14992) * C154107 + C19130 * C153927) * C2847 +
            C18835 * C154130) *
               C153783 * C326 -
           ((C19131 * C153927 + C15752 * C154107) * C154130 +
            (C19132 * C153927 + C19133 * C154107) * C2847 +
            ((C19166 + C19167) * C153927 + (C19165 + C19164) * C154107) *
                C2846) *
               C153783 * C327 +
           (((C19167 + C19166) * C154107 +
             (C14932 * C1347 + C16606 + C16606 + C154109 * C1357 +
              C14934 * C4168 + C16605 + C16605 + C153969 * C4176) *
                 C153927) *
                C2846 +
            (C19138 * C154107 + (C19168 + C19169) * C153927) * C2847 +
            (C19143 * C154107 + (C19170 + C19171) * C153927) * C154130) *
               C153783 * C328) *
              C329 +
          (((C19130 * C154107 + C19138 * C153927) * C2846 +
            (C18830 * C154107 + C19143 * C153927) * C2847 +
            ((C15272 + C15271) * C154107 + (C15281 + C15282) * C153927) *
                C154130) *
               C153783 * C327 -
           (C18834 * C154130 +
            (C15752 * C153927 + (C14994 + C14993) * C154107) * C2847 +
            (C19133 * C153927 + (C14992 + C14991) * C154107) * C2846) *
               C153783 * C326 -
           (((C14934 * C4171 + C16599 + C16599 + C153969 * C4179 +
              C14932 * C1344 + C16600 + C16600 + C154109 * C1354) *
                 C153927 +
             (C15282 + C15281) * C154107) *
                C154130 +
            ((C19171 + C19170) * C153927 + C19131 * C154107) * C2847 +
            ((C19169 + C19168) * C153927 + C19132 * C154107) * C2846) *
               C153783 * C328) *
              C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
             C14938 + C14938 + C153969 * C580) *
                C154107 +
            (C14932 * C335 + C15222 + C15222 + C154109 * C359 + C14934 * C1081 +
             C15221 + C15221 + C153969 * C1093) *
                C153927) *
               C2846 +
           ((C14991 + C14992) * C154107 + (C15276 + C15275) * C153927) * C2847 +
           C18835 * C154130) *
              C153783 * C153767 * C130 -
          (C18834 * C154130 +
           (C15752 * C153927 + (C14994 + C14993) * C154107) * C2847 +
           ((C15275 + C15276) * C153927 + (C14992 + C14991) * C154107) *
               C2846) *
              C153783 * C153767 * C131 +
          (C18835 * C2846 +
           (C15002 * C154107 + (C15272 + C15271) * C153927) * C2847 +
           ((C14998 + C14997) * C154107 + (C15765 + C15766) * C153927) *
               C154130) *
              C153783 * C153767 * C132 -
          (((C14934 * C1086 + C15757 + C15757 + C153969 * C1098 +
             C14932 * C341 + C15758 + C15758 + C154109 * C365) *
                C153927 +
            (C15000 + C14999) * C154107) *
               C154130 +
           ((C15766 + C15765) * C153927 + C15003 * C154107) * C2847 +
           C18834 * C2846) *
              C153783 * C153767 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
              C14938 + C14938 + C153969 * C580) *
                 C154107 +
             (C19164 + C19165) * C153927) *
                C2846 +
            ((C14991 + C14992) * C154107 + C19130 * C153927) * C2847 +
            C18835 * C154130) *
               C549 -
           (((C16272 + C16271) * C153927 + C15962 * C154107) * C154130 +
            ((C16270 + C16269) * C153927 + (C15549 + C15550) * C154107) *
                C2847 +
            ((C14934 * C1489 + C16236 + C16236 + C153969 * C1499 +
              C14932 * C1081 + C16235 + C16235 + C154109 * C1093) *
                 C153927 +
             (C14934 * C557 + C15495 + C15495 + C153969 * C581 + C14932 * C556 +
              C15496 + C15496 + C154109 * C580) *
                 C154107) *
                C2846) *
               C550 +
           (((C14932 * C557 + C15497 + C15497 + C154109 * C581 +
              C14934 * C2272 + C15498 + C15498 + C153969 * C2282) *
                 C154107 +
             (C14932 * C1489 + C16808 + C16808 + C154109 * C1499 +
              C14934 * C6161 + C16807 + C16807 + C153969 * C6173) *
                 C153927) *
                C2846 +
            ((C15551 + C15552) * C154107 + (C19478 + C19479) * C153927) *
                C2847 +
            ((C15553 + C15554) * C154107 + (C19480 + C19481) * C153927) *
                C154130) *
               C551) *
              C153767 * C329 +
          ((((C15550 + C15549) * C154107 + (C16269 + C16270) * C153927) *
                C2846 +
            ((C15548 + C15547) * C154107 + (C16271 + C16272) * C153927) *
                C2847 +
            ((C15546 + C15545) * C154107 + (C16273 + C16274) * C153927) *
                C154130) *
               C550 -
           (C18834 * C154130 +
            (C15752 * C153927 + (C14994 + C14993) * C154107) * C2847 +
            (C19133 * C153927 + (C14992 + C14991) * C154107) * C2846) *
               C549 -
           (((C14934 * C8529 + C16801 + C16801 + C153969 * C8531 +
              C14932 * C1486 + C16802 + C16802 + C154109 * C1496) *
                 C153927 +
             (C15556 + C15555) * C154107) *
                C154130 +
            ((C19481 + C19480) * C153927 + (C15554 + C15553) * C154107) *
                C2847 +
            ((C19479 + C19478) * C153927 + (C15552 + C15551) * C154107) *
                C2846) *
               C551) *
              C153767 * C153754)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
            C14938 + C14938 + C153969 * C580) *
               C34572 +
           (C19164 + C19165) * C34573 + C38471 * C34574 +
           (C20987 + C20988) * C154116) *
              C153712 * C153783 * C153767 * C130 -
          (C38472 * C154116 + C19132 * C34574 + C19133 * C34573 +
           (C14992 + C14991) * C34572) *
              C153712 * C153783 * C153767 * C131 +
          (C15001 * C34572 + C18830 * C34573 + C19143 * C34574 +
           (C19170 + C19171) * C154116) *
              C153712 * C153783 * C153767 * C132 -
          ((C14934 * C4171 + C16599 + C16599 + C153969 * C4179 +
            C14932 * C1344 + C16600 + C16600 + C154109 * C1354) *
               C154116 +
           (C15282 + C15281) * C34574 + C15751 * C34573 + C15004 * C34572) *
              C153712 * C153783 * C153767 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
             C14938 + C14938 + C153969 * C580) *
                C34572 +
            (C19164 + C19165) * C34573 + C38471 * C34574 + C43614 * C154116) *
               C153712 * C153783 * C326 -
           ((C40260 + C40259) * C154116 + C40246 * C34574 +
            (C19166 + C19167) * C34573 + (C19165 + C19164) * C34572) *
               C153712 * C153783 * C327 +
           (C38471 * C34572 + C43614 * C34573 + (C40259 + C40260) * C34574 +
            (C14932 * C4576 + C40254 + C40254 + C154109 * C4582 +
             C14934 * C28772 + C40253 + C40253 + C153969 * C28776) *
                C154116) *
               C153712 * C153783 * C328) *
              C329 +
          ((C19130 * C34572 + C19138 * C34573 + C38473 * C34574 +
            (C38482 + C38483) * C154116) *
               C153712 * C153783 * C327 -
           (C38472 * C154116 + C19132 * C34574 + C19133 * C34573 +
            (C14992 + C14991) * C34572) *
               C153712 * C153783 * C326 -
           ((C14934 * C28773 + C40251 + C40251 + C153969 * C28777 +
             C14932 * C4575 + C40252 + C40252 + C154109 * C4581) *
                C154116 +
            (C38483 + C38482) * C34574 + C38472 * C34573 + C19132 * C34572) *
               C153712 * C153783 * C328) *
              C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
             C14938 + C14938 + C153969 * C580) *
                C34572 +
            (C19164 + C19165) * C34573 + C38471 * C34574 + C43614 * C154116) *
               C153712 * C549 -
           ((C41545 + C41544) * C154116 + C41531 * C34574 +
            (C20483 + C20484) * C34573 +
            (C14934 * C557 + C15495 + C15495 + C153969 * C581 + C14932 * C556 +
             C15496 + C15496 + C154109 * C580) *
                C34572) *
               C153712 * C550 +
           ((C14932 * C557 + C15497 + C15497 + C154109 * C581 + C14934 * C2272 +
             C15498 + C15498 + C153969 * C2282) *
                C34572 +
            (C21293 + C21294) * C34573 + (C40563 + C40564) * C34574 +
            (C14932 * C4811 + C40558 + C40558 + C154109 * C4817 +
             C14934 * C29881 + C40557 + C40557 + C153969 * C29885) *
                C154116) *
               C153712 * C551) *
              C153767 * C329 +
          (((C15550 + C15549) * C34572 + C20461 * C34573 + C39751 * C34574 +
            (C39760 + C39761) * C154116) *
               C153712 * C550 -
           (C38472 * C154116 + C19132 * C34574 + C19133 * C34573 +
            (C14992 + C14991) * C34572) *
               C153712 * C549 -
           ((C14934 * C31684 + C40555 + C40555 + C153969 * C31686 +
             C14932 * C4810 + C40556 + C40556 + C154109 * C4816) *
                C154116 +
            (C38783 + C38782) * C34574 + (C19479 + C19478) * C34573 +
            (C15552 + C15551) * C34572) *
               C153712 * C551) *
              C153767 * C153754)) /
            (p * q * std::sqrt(p + q));
    d2ee[318] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
              C14938 + C14938 + C153969 * C580) *
                 C154107 +
             (C19164 + C19165) * C153927) *
                C2846 +
            ((C14991 + C14992) * C154107 + C19130 * C153927) * C2847 +
            C18835 * C154130) *
               C154094 -
           (C20069 * C154130 +
            ((C16270 + C16269) * C153927 + (C15549 + C15550) * C154107) *
                C2847 +
            ((C14934 * C1489 + C16236 + C16236 + C153969 * C1499 +
              C14932 * C1081 + C16235 + C16235 + C154109 * C1093) *
                 C153927 +
             (C14934 * C557 + C15495 + C15495 + C153969 * C581 + C14932 * C556 +
              C15496 + C15496 + C154109 * C580) *
                 C154107) *
                C2846) *
               C153847) *
              C153767 * C154162 +
          ((((C15550 + C15549) * C154107 + (C16269 + C16270) * C153927) *
                C2846 +
            ((C15548 + C15547) * C154107 + (C16271 + C16272) * C153927) *
                C2847 +
            ((C15546 + C15545) * C154107 + (C16273 + C16274) * C153927) *
                C154130) *
               C153847 -
           (C18834 * C154130 +
            (C15752 * C153927 + (C14994 + C14993) * C154107) * C2847 +
            (C19133 * C153927 + (C14992 + C14991) * C154107) * C2846) *
               C154094) *
              C153767 * C154163 +
          ((C18835 * C2846 + (C15002 * C154107 + C19774 * C153927) * C2847 +
            ((C14998 + C14997) * C154107 + (C15765 + C15766) * C153927) *
                C154130) *
               C154094 -
           (((C14934 * C1485 + C16255 + C16255 + C153969 * C1495 +
              C14932 * C1085 + C16256 + C16256 + C154109 * C1097) *
                 C153927 +
             (C15976 + C15975) * C154107) *
                C154130 +
            ((C16274 + C16273) * C153927 + C15961 * C154107) * C2847 +
            C20069 * C2846) *
               C153847) *
              C153767 * C774)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
             C14938 + C14938 + C153969 * C580) *
                C34572 +
            (C19164 + C19165) * C34573 + C38471 * C34574 + C43614 * C154116) *
               C153712 * C154094 -
           ((C41545 + C41544) * C154116 + C41531 * C34574 +
            (C20483 + C20484) * C34573 +
            (C14934 * C557 + C15495 + C15495 + C153969 * C581 + C14932 * C556 +
             C15496 + C15496 + C154109 * C580) *
                C34572) *
               C153712 * C153847) *
              C153767 * C154162 +
          (((C15550 + C15549) * C34572 + C20461 * C34573 + C39751 * C34574 +
            (C39760 + C39761) * C154116) *
               C153712 * C153847 -
           (C38472 * C154116 + C19132 * C34574 + C19133 * C34573 +
            (C14992 + C14991) * C34572) *
               C153712 * C154094) *
              C153767 * C154163 +
          ((C15001 * C34572 + C18830 * C34573 + C19143 * C34574 +
            (C19170 + C19171) * C154116) *
               C153712 * C154094 -
           ((C14934 * C4809 + C22265 + C22265 + C153969 * C4815 +
             C14932 * C4170 + C22266 + C22266 + C154109 * C4178) *
                C154116 +
            (C20488 + C20487) * C34574 + C20066 * C34573 + C15962 * C34572) *
               C153712 * C153847) *
              C153767 * C774)) /
            (p * q * std::sqrt(p + q));
    d2ee[319] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
             C14938 + C14938 + C153969 * C580) *
                C154107 +
            (C14932 * C335 + C15222 + C15222 + C154109 * C359 + C14934 * C1081 +
             C15221 + C15221 + C153969 * C1093) *
                C153927) *
               C2846 +
           ((C14991 + C14992) * C154107 + (C15276 + C15275) * C153927) * C2847 +
           C18835 * C154130) *
              C153783 * C153767 * C130 -
          (C18834 * C154130 +
           (C15752 * C153927 + (C14994 + C14993) * C154107) * C2847 +
           ((C15275 + C15276) * C153927 + (C14992 + C14991) * C154107) *
               C2846) *
              C153783 * C153767 * C131 +
          (C18835 * C2846 +
           (C15002 * C154107 + (C15272 + C15271) * C153927) * C2847 +
           ((C14998 + C14997) * C154107 + (C15765 + C15766) * C153927) *
               C154130) *
              C153783 * C153767 * C132 -
          (((C14934 * C1086 + C15757 + C15757 + C153969 * C1098 +
             C14932 * C341 + C15758 + C15758 + C154109 * C365) *
                C153927 +
            (C15000 + C14999) * C154107) *
               C154130 +
           ((C15766 + C15765) * C153927 + C15003 * C154107) * C2847 +
           C18834 * C2846) *
              C153783 * C153767 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
              C14938 + C14938 + C153969 * C580) *
                 C154107 +
             (C19164 + C19165) * C153927) *
                C2846 +
            ((C14991 + C14992) * C154107 + C19130 * C153927) * C2847 +
            C18835 * C154130) *
               C153783 * C326 -
           ((C19131 * C153927 + C15752 * C154107) * C154130 +
            (C19132 * C153927 + C19133 * C154107) * C2847 +
            ((C19166 + C19167) * C153927 + (C19165 + C19164) * C154107) *
                C2846) *
               C153783 * C327 +
           (((C19167 + C19166) * C154107 +
             (C14932 * C1347 + C16606 + C16606 + C154109 * C1357 +
              C14934 * C4168 + C16605 + C16605 + C153969 * C4176) *
                 C153927) *
                C2846 +
            (C19138 * C154107 + (C19168 + C19169) * C153927) * C2847 +
            (C19143 * C154107 + (C19170 + C19171) * C153927) * C154130) *
               C153783 * C328) *
              C329 +
          (((C19130 * C154107 + C19138 * C153927) * C2846 +
            (C18830 * C154107 + C19143 * C153927) * C2847 +
            ((C15272 + C15271) * C154107 + (C15281 + C15282) * C153927) *
                C154130) *
               C153783 * C327 -
           (C18834 * C154130 +
            (C15752 * C153927 + (C14994 + C14993) * C154107) * C2847 +
            (C19133 * C153927 + (C14992 + C14991) * C154107) * C2846) *
               C153783 * C326 -
           (((C14934 * C4171 + C16599 + C16599 + C153969 * C4179 +
              C14932 * C1344 + C16600 + C16600 + C154109 * C1354) *
                 C153927 +
             (C15282 + C15281) * C154107) *
                C154130 +
            ((C19171 + C19170) * C153927 + C19131 * C154107) * C2847 +
            ((C19169 + C19168) * C153927 + C19132 * C154107) * C2846) *
               C153783 * C328) *
              C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
            C14938 + C14938 + C153969 * C580) *
               C34572 +
           (C19164 + C19165) * C34573 + C38471 * C34574 +
           (C20987 + C20988) * C154116) *
              C153712 * C153783 * C153767 * C130 -
          (C38472 * C154116 + C19132 * C34574 + C19133 * C34573 +
           (C14992 + C14991) * C34572) *
              C153712 * C153783 * C153767 * C131 +
          (C15001 * C34572 + C18830 * C34573 + C19143 * C34574 +
           (C19170 + C19171) * C154116) *
              C153712 * C153783 * C153767 * C132 -
          ((C14934 * C4171 + C16599 + C16599 + C153969 * C4179 +
            C14932 * C1344 + C16600 + C16600 + C154109 * C1354) *
               C154116 +
           (C15282 + C15281) * C34574 + C15751 * C34573 + C15004 * C34572) *
              C153712 * C153783 * C153767 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
             C14938 + C14938 + C153969 * C580) *
                C34572 +
            (C19164 + C19165) * C34573 + C38471 * C34574 + C43614 * C154116) *
               C153712 * C153783 * C326 -
           ((C40260 + C40259) * C154116 + C40246 * C34574 +
            (C19166 + C19167) * C34573 + (C19165 + C19164) * C34572) *
               C153712 * C153783 * C327 +
           (C38471 * C34572 + C43614 * C34573 + (C40259 + C40260) * C34574 +
            (C14932 * C4576 + C40254 + C40254 + C154109 * C4582 +
             C14934 * C28772 + C40253 + C40253 + C153969 * C28776) *
                C154116) *
               C153712 * C153783 * C328) *
              C329 +
          ((C19130 * C34572 + C19138 * C34573 + C38473 * C34574 +
            (C38482 + C38483) * C154116) *
               C153712 * C153783 * C327 -
           (C38472 * C154116 + C19132 * C34574 + C19133 * C34573 +
            (C14992 + C14991) * C34572) *
               C153712 * C153783 * C326 -
           ((C14934 * C28773 + C40251 + C40251 + C153969 * C28777 +
             C14932 * C4575 + C40252 + C40252 + C154109 * C4581) *
                C154116 +
            (C38483 + C38482) * C34574 + C38472 * C34573 + C19132 * C34572) *
               C153712 * C153783 * C328) *
              C153754)) /
            (p * q * std::sqrt(p + q));
    d2ee[320] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
              C14938 + C14938 + C153969 * C580) *
                 C154107 +
             (C19164 + C19165) * C153927) *
                C2846 +
            ((C14991 + C14992) * C154107 + C19130 * C153927) * C2847 +
            C18835 * C154130) *
               C153783 * C154164 -
           (C19775 * C154130 + (C19132 * C153927 + C19133 * C154107) * C2847 +
            ((C19166 + C19167) * C153927 + (C19165 + C19164) * C154107) *
                C2846) *
               C153783 * C154165 +
           (((C19167 + C19166) * C154107 + (C20987 + C20988) * C153927) *
                C2846 +
            (C19138 * C154107 + (C19168 + C19169) * C153927) * C2847 +
            (C19143 * C154107 + (C19170 + C19171) * C153927) * C154130) *
               C153783 * C1629) *
              C154085 +
          (((C19130 * C154107 + C19138 * C153927) * C2846 +
            (C18830 * C154107 + C19143 * C153927) * C2847 +
            (C19774 * C154107 + (C15281 + C15282) * C153927) * C154130) *
               C153783 * C154165 -
           (C18834 * C154130 +
            (C15752 * C153927 + (C14994 + C14993) * C154107) * C2847 +
            (C19133 * C153927 + (C14992 + C14991) * C154107) * C2846) *
               C153783 * C154164 -
           (((C14934 * C4171 + C16599 + C16599 + C153969 * C4179 +
              C14932 * C1344 + C16600 + C16600 + C154109 * C1354) *
                 C153927 +
             (C15282 + C15281) * C154107) *
                C154130 +
            ((C19171 + C19170) * C153927 + C19131 * C154107) * C2847 +
            ((C19169 + C19168) * C153927 + C19132 * C154107) * C2846) *
               C153783 * C1629) *
              C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
             C14938 + C14938 + C153969 * C580) *
                C34572 +
            (C19164 + C19165) * C34573 + C38471 * C34574 + C43614 * C154116) *
               C153712 * C153783 * C154164 -
           (C44779 * C154116 + C40246 * C34574 + (C19166 + C19167) * C34573 +
            (C19165 + C19164) * C34572) *
               C153712 * C153783 * C154165 +
           (C38471 * C34572 + C43614 * C34573 + (C40259 + C40260) * C34574 +
            (C44790 + C44791) * C154116) *
               C153712 * C153783 * C1629) *
              C154085 +
          ((C19130 * C34572 + C19138 * C34573 + C38473 * C34574 +
            (C38482 + C38483) * C154116) *
               C153712 * C153783 * C154165 -
           (C38472 * C154116 + C19132 * C34574 + C19133 * C34573 +
            (C14992 + C14991) * C34572) *
               C153712 * C153783 * C154164 -
           ((C14934 * C28773 + C40251 + C40251 + C153969 * C28777 +
             C14932 * C4575 + C40252 + C40252 + C154109 * C4581) *
                C154116 +
            (C38483 + C38482) * C34574 + C38472 * C34573 + C19132 * C34572) *
               C153712 * C153783 * C1629) *
              C153754)) /
            (p * q * std::sqrt(p + q));
    d2ee[321] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
              C14938 + C14938 + C153969 * C580) *
                 C154107 +
             (C19164 + C19165) * C153927) *
                C2846 +
            ((C14991 + C14992) * C154107 + C19130 * C153927) * C2847 +
            C18835 * C154130) *
               C154094 -
           (C20069 * C154130 +
            (C20456 * C153927 + (C15549 + C15550) * C154107) * C2847 +
            ((C20483 + C20484) * C153927 +
             (C14934 * C557 + C15495 + C15495 + C153969 * C581 + C14932 * C556 +
              C15496 + C15496 + C154109 * C580) *
                 C154107) *
                C2846) *
               C153847) *
              C154164 +
          ((((C20484 + C20483) * C154107 + (C22275 + C22276) * C153927) *
                C2846 +
            (C20461 * C154107 + (C20485 + C20486) * C153927) * C2847 +
            (C20466 * C154107 + (C20487 + C20488) * C153927) * C154130) *
               C153847 -
           (C19775 * C154130 + (C19132 * C153927 + C19133 * C154107) * C2847 +
            ((C19166 + C19167) * C153927 + (C19165 + C19164) * C154107) *
                C2846) *
               C154094) *
              C154165 +
          ((((C19167 + C19166) * C154107 + (C20987 + C20988) * C153927) *
                C2846 +
            (C19138 * C154107 + (C19168 + C19169) * C153927) * C2847 +
            (C19143 * C154107 + (C19170 + C19171) * C153927) * C154130) *
               C154094 -
           (((C14934 * C4809 + C22265 + C22265 + C153969 * C4815 +
              C14932 * C4170 + C22266 + C22266 + C154109 * C4178) *
                 C153927 +
             (C20488 + C20487) * C154107) *
                C154130 +
            ((C14934 * C4810 + C22267 + C22267 + C153969 * C4816 +
              C14932 * C4169 + C22268 + C22268 + C154109 * C4177) *
                 C153927 +
             (C20486 + C20485) * C154107) *
                C2847 +
            ((C14934 * C4811 + C22269 + C22269 + C153969 * C4817 +
              C14932 * C4168 + C22270 + C22270 + C154109 * C4176) *
                 C153927 +
             (C22276 + C22275) * C154107) *
                C2846) *
               C153847) *
              C1629) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
             C14938 + C14938 + C153969 * C580) *
                C34572 +
            (C19164 + C19165) * C34573 + C38471 * C34574 + C43614 * C154116) *
               C153712 * C154094 -
           (C45644 * C154116 + C41531 * C34574 + (C20483 + C20484) * C34573 +
            (C14934 * C557 + C15495 + C15495 + C153969 * C581 + C14932 * C556 +
             C15496 + C15496 + C154109 * C580) *
                C34572) *
               C153712 * C153847) *
              C154164 +
          (((C20484 + C20483) * C34572 + (C22275 + C22276) * C34573 +
            (C41544 + C41545) * C34574 + (C45655 + C45656) * C154116) *
               C153712 * C153847 -
           (C44779 * C154116 + C40246 * C34574 + (C19166 + C19167) * C34573 +
            (C19165 + C19164) * C34572) *
               C153712 * C154094) *
              C154165 +
          ((C38471 * C34572 + C43614 * C34573 + (C40259 + C40260) * C34574 +
            (C44790 + C44791) * C154116) *
               C153712 * C154094 -
           ((C14934 * C29125 + C45649 + C45649 + C153969 * C29127 +
             C14932 * C28772 + C45650 + C45650 + C154109 * C28776) *
                C154116 +
            (C45656 + C45655) * C34574 + C45644 * C34573 + C41531 * C34572) *
               C153712 * C153847) *
              C1629) *
         C153748) /
            (p * q * std::sqrt(p + q));
    d2ee[322] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
             C14938 + C14938 + C153969 * C580) *
                C154107 +
            (C19164 + C19165) * C153927) *
               C2846 +
           ((C14991 + C14992) * C154107 + C19130 * C153927) * C2847 +
           C18835 * C154130) *
              C153783 * C1338 -
          (C19775 * C154130 + (C19132 * C153927 + C19133 * C154107) * C2847 +
           ((C19166 + C19167) * C153927 + (C19165 + C19164) * C154107) *
               C2846) *
              C153783 * C1339 +
          (((C19167 + C19166) * C154107 + (C20987 + C20988) * C153927) * C2846 +
           (C19138 * C154107 + (C19168 + C19169) * C153927) * C2847 +
           (C19143 * C154107 + (C19170 + C19171) * C153927) * C154130) *
              C153783 * C1340 -
          (((C14934 * C5557 + C20977 + C20977 + C153969 * C5563 +
             C14932 * C3085 + C20978 + C20978 + C154109 * C3093) *
                C153927 +
            (C19171 + C19170) * C154107) *
               C154130 +
           ((C14934 * C5558 + C20979 + C20979 + C153969 * C5564 +
             C14932 * C3084 + C20980 + C20980 + C154109 * C3092) *
                C153927 +
            (C19169 + C19168) * C154107) *
               C2847 +
           ((C14934 * C5559 + C20981 + C20981 + C153969 * C5565 +
             C14932 * C3083 + C20982 + C20982 + C154109 * C3091) *
                C153927 +
            (C20988 + C20987) * C154107) *
               C2846) *
              C153783 * C1341) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
              C14938 + C14938 + C153969 * C580) *
                 C154107 +
             (C19164 + C19165) * C153927) *
                C2846 +
            ((C14991 + C14992) * C154107 + C19130 * C153927) * C2847 +
            C18835 * C154130) *
               C153783 * C1251 -
           (C19775 * C154130 + (C19132 * C153927 + C19133 * C154107) * C2847 +
            ((C19166 + C19167) * C153927 + (C19165 + C19164) * C154107) *
                C2846) *
               C153783 * C153819) *
              C1253 +
          (((C19130 * C154107 + C19138 * C153927) * C2846 +
            (C18830 * C154107 + C19143 * C153927) * C2847 +
            (C19774 * C154107 + (C15281 + C15282) * C153927) * C154130) *
               C153783 * C153819 -
           (C18834 * C154130 +
            (C15752 * C153927 + (C14994 + C14993) * C154107) * C2847 +
            (C19133 * C153927 + (C14992 + C14991) * C154107) * C2846) *
               C153783 * C1251) *
              C1254 +
          ((C18835 * C2846 + (C15002 * C154107 + C19774 * C153927) * C2847 +
            ((C14998 + C14997) * C154107 + (C15765 + C15766) * C153927) *
                C154130) *
               C153783 * C1251 -
           (((C14934 * C1916 + C15245 + C15245 + C153969 * C1926 +
              C14932 * C340 + C15246 + C15246 + C154109 * C364) *
                 C153927 +
             (C15766 + C15765) * C154107) *
                C154130 +
            ((C15282 + C15281) * C153927 + C15751 * C154107) * C2847 +
            C19775 * C2846) *
               C153783 * C153819) *
              C1255)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
              C14938 + C14938 + C153969 * C580) *
                 C154107 +
             (C19164 + C19165) * C153927) *
                C2846 +
            ((C14991 + C14992) * C154107 + C19130 * C153927) * C2847 +
            C18835 * C154130) *
               C549 -
           (C20069 * C154130 +
            (C20456 * C153927 + (C15549 + C15550) * C154107) * C2847 +
            ((C20483 + C20484) * C153927 +
             (C14934 * C557 + C15495 + C15495 + C153969 * C581 + C14932 * C556 +
              C15496 + C15496 + C154109 * C580) *
                 C154107) *
                C2846) *
               C550 +
           (((C14932 * C557 + C15497 + C15497 + C154109 * C581 +
              C14934 * C2272 + C15498 + C15498 + C153969 * C2282) *
                 C154107 +
             (C21293 + C21294) * C153927) *
                C2846 +
            ((C15551 + C15552) * C154107 + (C19478 + C19479) * C153927) *
                C2847 +
            ((C15553 + C15554) * C154107 + (C19480 + C19481) * C153927) *
                C154130) *
               C551) *
              C1251 +
          ((((C20484 + C20483) * C154107 +
             (C14932 * C1920 + C17462 + C17462 + C154109 * C1930 +
              C14934 * C3369 + C17461 + C17461 + C153969 * C3377) *
                 C153927) *
                C2846 +
            (C20461 * C154107 + (C20485 + C20486) * C153927) * C2847 +
            (C20466 * C154107 + (C20487 + C20488) * C153927) * C154130) *
               C550 -
           (C19775 * C154130 + (C19132 * C153927 + C19133 * C154107) * C2847 +
            ((C19166 + C19167) * C153927 + (C19165 + C19164) * C154107) *
                C2846) *
               C549 -
           (((C14934 * C6156 + C21283 + C21283 + C153969 * C6168 +
              C14932 * C3371 + C21284 + C21284 + C154109 * C3379) *
                 C153927 +
             (C19481 + C19480) * C154107) *
                C154130 +
            ((C14934 * C6158 + C21285 + C21285 + C153969 * C6170 +
              C14932 * C3370 + C21286 + C21286 + C154109 * C3378) *
                 C153927 +
             (C19479 + C19478) * C154107) *
                C2847 +
            ((C14934 * C6160 + C21287 + C21287 + C153969 * C6172 +
              C14932 * C3369 + C21288 + C21288 + C154109 * C3377) *
                 C153927 +
             (C21294 + C21293) * C154107) *
                C2846) *
               C551) *
              C153819) *
         C153748) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
             C14938 + C14938 + C153969 * C580) *
                C34572 +
            (C19164 + C19165) * C34573 + C38471 * C34574 + C43614 * C154116) *
               C153712 * C153783 * C1251 -
           ((C40260 + C40259) * C154116 + C40246 * C34574 +
            (C19166 + C19167) * C34573 + (C19165 + C19164) * C34572) *
               C153712 * C153783 * C153819) *
              C1253 +
          ((C19130 * C34572 + C19138 * C34573 + C38473 * C34574 +
            (C38482 + C38483) * C154116) *
               C153712 * C153783 * C153819 -
           (C38472 * C154116 + C19132 * C34574 + C19133 * C34573 +
            (C14992 + C14991) * C34572) *
               C153712 * C153783 * C1251) *
              C1254 +
          ((C15001 * C34572 + C18830 * C34573 + C19143 * C34574 +
            (C19170 + C19171) * C154116) *
               C153712 * C153783 * C1251 -
           ((C14934 * C5557 + C20977 + C20977 + C153969 * C5563 +
             C14932 * C3085 + C20978 + C20978 + C154109 * C3093) *
                C154116 +
            (C19171 + C19170) * C34574 + C19131 * C34573 + C15752 * C34572) *
               C153712 * C153783 * C153819) *
              C1255)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
            C14938 + C14938 + C153969 * C580) *
               C34572 +
           (C19164 + C19165) * C34573 + C38471 * C34574 + C43614 * C154116) *
              C153712 * C153783 * C1338 -
          (C44779 * C154116 + C40246 * C34574 + (C19166 + C19167) * C34573 +
           (C19165 + C19164) * C34572) *
              C153712 * C153783 * C1339 +
          (C38471 * C34572 + C43614 * C34573 + (C40259 + C40260) * C34574 +
           (C44790 + C44791) * C154116) *
              C153712 * C153783 * C1340 -
          ((C14934 * C29545 + C44784 + C44784 + C153969 * C29547 +
            C14932 * C28218 + C44785 + C44785 + C154109 * C28222) *
               C154116 +
           (C44791 + C44790) * C34574 + C44779 * C34573 + C40246 * C34572) *
              C153712 * C153783 * C1341) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
             C14938 + C14938 + C153969 * C580) *
                C34572 +
            (C19164 + C19165) * C34573 + C38471 * C34574 + C43614 * C154116) *
               C153712 * C549 -
           ((C41545 + C41544) * C154116 + C41531 * C34574 +
            (C20483 + C20484) * C34573 +
            (C14934 * C557 + C15495 + C15495 + C153969 * C581 + C14932 * C556 +
             C15496 + C15496 + C154109 * C580) *
                C34572) *
               C153712 * C550 +
           ((C14932 * C557 + C15497 + C15497 + C154109 * C581 + C14934 * C2272 +
             C15498 + C15498 + C153969 * C2282) *
                C34572 +
            (C21293 + C21294) * C34573 + (C40563 + C40564) * C34574 +
            (C44996 + C44997) * C154116) *
               C153712 * C551) *
              C1251 +
          (((C20484 + C20483) * C34572 + (C22275 + C22276) * C34573 +
            (C41544 + C41545) * C34574 +
            (C14932 * C5559 + C41539 + C41539 + C154109 * C5565 +
             C14934 * C28358 + C41538 + C41538 + C153969 * C28362) *
                C154116) *
               C153712 * C550 -
           (C44779 * C154116 + C40246 * C34574 + (C19166 + C19167) * C34573 +
            (C19165 + C19164) * C34572) *
               C153712 * C549 -
           ((C14934 * C29880 + C44990 + C44990 + C153969 * C29884 +
             C14932 * C28358 + C44991 + C44991 + C154109 * C28362) *
                C154116 +
            (C44997 + C44996) * C34574 + (C40564 + C40563) * C34573 +
            (C21294 + C21293) * C34572) *
               C153712 * C551) *
              C153819) *
         C153748) /
            (p * q * std::sqrt(p + q));
    d2ee[323] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C14932 * C136 + C14937 + C14937 + C154109 * C152 +
               C14934 * C556 + C14938 + C14938 + C153969 * C580) *
                  C154107 +
              (C19164 + C19165) * C153927) *
                 C2846 +
             ((C14991 + C14992) * C154107 + C19130 * C153927) * C2847 +
             C18835 * C154130) *
                C154094 -
            (C20069 * C154130 +
             (C20456 * C153927 + (C15549 + C15550) * C154107) * C2847 +
             ((C20483 + C20484) * C153927 +
              (C14934 * C557 + C15495 + C15495 + C153969 * C581 +
               C14932 * C556 + C15496 + C15496 + C154109 * C580) *
                  C154107) *
                 C2846) *
                C153847) *
               C1251 +
           ((((C20484 + C20483) * C154107 +
              (C14932 * C1920 + C17462 + C17462 + C154109 * C1930 +
               C14934 * C3369 + C17461 + C17461 + C153969 * C3377) *
                  C153927) *
                 C2846 +
             (C20461 * C154107 + (C20485 + C20486) * C153927) * C2847 +
             (C20466 * C154107 + (C20487 + C20488) * C153927) * C154130) *
                C153847 -
            (C19775 * C154130 + (C19132 * C153927 + C19133 * C154107) * C2847 +
             ((C19166 + C19167) * C153927 + (C19165 + C19164) * C154107) *
                 C2846) *
                C154094) *
               C153819) *
              C154085 +
          (((((C15550 + C15549) * C154107 + C20461 * C153927) * C2846 +
             ((C15548 + C15547) * C154107 + C20466 * C153927) * C2847 +
             ((C15546 + C15545) * C154107 + (C16273 + C16274) * C153927) *
                 C154130) *
                C153847 -
            (C18834 * C154130 +
             (C15752 * C153927 + (C14994 + C14993) * C154107) * C2847 +
             (C19133 * C153927 + (C14992 + C14991) * C154107) * C2846) *
                C154094) *
               C1251 +
           (((C19130 * C154107 + C19138 * C153927) * C2846 +
             (C18830 * C154107 + C19143 * C153927) * C2847 +
             (C19774 * C154107 + (C15281 + C15282) * C153927) * C154130) *
                C154094 -
            (((C14934 * C3372 + C17455 + C17455 + C153969 * C3380 +
               C14932 * C1917 + C17456 + C17456 + C154109 * C1927) *
                  C153927 +
              (C16274 + C16273) * C154107) *
                 C154130 +
             ((C20488 + C20487) * C153927 + C20066 * C154107) * C2847 +
             ((C20486 + C20485) * C153927 + C20456 * C154107) * C2846) *
                C153847) *
               C153819) *
              C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
              C14938 + C14938 + C153969 * C580) *
                 C34572 +
             (C19164 + C19165) * C34573 + C38471 * C34574 + C43614 * C154116) *
                C153712 * C154094 -
            ((C41545 + C41544) * C154116 + C41531 * C34574 +
             (C20483 + C20484) * C34573 +
             (C14934 * C557 + C15495 + C15495 + C153969 * C581 + C14932 * C556 +
              C15496 + C15496 + C154109 * C580) *
                 C34572) *
                C153712 * C153847) *
               C1251 +
           (((C20484 + C20483) * C34572 + (C22275 + C22276) * C34573 +
             (C41544 + C41545) * C34574 +
             (C14932 * C5559 + C41539 + C41539 + C154109 * C5565 +
              C14934 * C28358 + C41538 + C41538 + C153969 * C28362) *
                 C154116) *
                C153712 * C153847 -
            (C44779 * C154116 + C40246 * C34574 + (C19166 + C19167) * C34573 +
             (C19165 + C19164) * C34572) *
                C153712 * C154094) *
               C153819) *
              C154085 +
          ((((C15550 + C15549) * C34572 + C20461 * C34573 + C39751 * C34574 +
             (C39760 + C39761) * C154116) *
                C153712 * C153847 -
            (C38472 * C154116 + C19132 * C34574 + C19133 * C34573 +
             (C14992 + C14991) * C34572) *
                C153712 * C154094) *
               C1251 +
           ((C19130 * C34572 + C19138 * C34573 + C38473 * C34574 +
             (C38482 + C38483) * C154116) *
                C153712 * C154094 -
            ((C14934 * C28359 + C41536 + C41536 + C153969 * C28363 +
              C14932 * C5558 + C41537 + C41537 + C154109 * C5564) *
                 C154116 +
             (C39761 + C39760) * C34574 + C39750 * C34573 + C20456 * C34572) *
                C153712 * C153847) *
               C153819) *
              C153754)) /
            (p * q * std::sqrt(p + q));
    d2ee[324] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
              C14938 + C14938 + C153969 * C580) *
                 C154107 +
             (C19164 + C19165) * C153927) *
                C2846 +
            ((C14991 + C14992) * C154107 + C19130 * C153927) * C2847 +
            C18835 * C154130) *
               C153783 * C1251 -
           (C19775 * C154130 + (C19132 * C153927 + C19133 * C154107) * C2847 +
            ((C19166 + C19167) * C153927 + (C19165 + C19164) * C154107) *
                C2846) *
               C153783 * C153819) *
              C1253 +
          (((C19130 * C154107 + C19138 * C153927) * C2846 +
            (C18830 * C154107 + C19143 * C153927) * C2847 +
            (C19774 * C154107 + (C15281 + C15282) * C153927) * C154130) *
               C153783 * C153819 -
           (C18834 * C154130 +
            (C15752 * C153927 + (C14994 + C14993) * C154107) * C2847 +
            (C19133 * C153927 + (C14992 + C14991) * C154107) * C2846) *
               C153783 * C1251) *
              C1254 +
          ((C18835 * C2846 + (C15002 * C154107 + C19774 * C153927) * C2847 +
            ((C14998 + C14997) * C154107 + (C15765 + C15766) * C153927) *
                C154130) *
               C153783 * C1251 -
           (((C14934 * C1916 + C15245 + C15245 + C153969 * C1926 +
              C14932 * C340 + C15246 + C15246 + C154109 * C364) *
                 C153927 +
             (C15766 + C15765) * C154107) *
                C154130 +
            ((C15282 + C15281) * C153927 + C15751 * C154107) * C2847 +
            C19775 * C2846) *
               C153783 * C153819) *
              C1255)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
             C14938 + C14938 + C153969 * C580) *
                C154107 +
            (C19164 + C19165) * C153927) *
               C2846 +
           ((C14991 + C14992) * C154107 + C19130 * C153927) * C2847 +
           C18835 * C154130) *
              C153783 * C1338 -
          (C19775 * C154130 + (C19132 * C153927 + C19133 * C154107) * C2847 +
           ((C19166 + C19167) * C153927 + (C19165 + C19164) * C154107) *
               C2846) *
              C153783 * C1339 +
          (((C19167 + C19166) * C154107 + (C20987 + C20988) * C153927) * C2846 +
           (C19138 * C154107 + (C19168 + C19169) * C153927) * C2847 +
           (C19143 * C154107 + (C19170 + C19171) * C153927) * C154130) *
              C153783 * C1340 -
          (((C14934 * C5557 + C20977 + C20977 + C153969 * C5563 +
             C14932 * C3085 + C20978 + C20978 + C154109 * C3093) *
                C153927 +
            (C19171 + C19170) * C154107) *
               C154130 +
           ((C14934 * C5558 + C20979 + C20979 + C153969 * C5564 +
             C14932 * C3084 + C20980 + C20980 + C154109 * C3092) *
                C153927 +
            (C19169 + C19168) * C154107) *
               C2847 +
           ((C14934 * C5559 + C20981 + C20981 + C153969 * C5565 +
             C14932 * C3083 + C20982 + C20982 + C154109 * C3091) *
                C153927 +
            (C20988 + C20987) * C154107) *
               C2846) *
              C153783 * C1341) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
             C14938 + C14938 + C153969 * C580) *
                C34572 +
            (C19164 + C19165) * C34573 + C38471 * C34574 + C43614 * C154116) *
               C153712 * C153783 * C1251 -
           ((C40260 + C40259) * C154116 + C40246 * C34574 +
            (C19166 + C19167) * C34573 + (C19165 + C19164) * C34572) *
               C153712 * C153783 * C153819) *
              C1253 +
          ((C19130 * C34572 + C19138 * C34573 + C38473 * C34574 +
            (C38482 + C38483) * C154116) *
               C153712 * C153783 * C153819 -
           (C38472 * C154116 + C19132 * C34574 + C19133 * C34573 +
            (C14992 + C14991) * C34572) *
               C153712 * C153783 * C1251) *
              C1254 +
          ((C15001 * C34572 + C18830 * C34573 + C19143 * C34574 +
            (C19170 + C19171) * C154116) *
               C153712 * C153783 * C1251 -
           ((C14934 * C5557 + C20977 + C20977 + C153969 * C5563 +
             C14932 * C3085 + C20978 + C20978 + C154109 * C3093) *
                C154116 +
            (C19171 + C19170) * C34574 + C19131 * C34573 + C15752 * C34572) *
               C153712 * C153783 * C153819) *
              C1255)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
            C14938 + C14938 + C153969 * C580) *
               C34572 +
           (C19164 + C19165) * C34573 + C38471 * C34574 + C43614 * C154116) *
              C153712 * C153783 * C1338 -
          (C44779 * C154116 + C40246 * C34574 + (C19166 + C19167) * C34573 +
           (C19165 + C19164) * C34572) *
              C153712 * C153783 * C1339 +
          (C38471 * C34572 + C43614 * C34573 + (C40259 + C40260) * C34574 +
           (C44790 + C44791) * C154116) *
              C153712 * C153783 * C1340 -
          ((C14934 * C29545 + C44784 + C44784 + C153969 * C29547 +
            C14932 * C28218 + C44785 + C44785 + C154109 * C28222) *
               C154116 +
           (C44791 + C44790) * C34574 + C44779 * C34573 + C40246 * C34572) *
              C153712 * C153783 * C1341) *
         C153748) /
            (p * q * std::sqrt(p + q));
    d2ee[325] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C14932 * C136 + C14937 + C14937 + C154109 * C152 +
               C14934 * C556 + C14938 + C14938 + C153969 * C580) *
                  C154107 +
              (C19164 + C19165) * C153927) *
                 C2846 +
             ((C14991 + C14992) * C154107 + C19130 * C153927) * C2847 +
             C18835 * C154130) *
                C2058 -
            (C20069 * C154130 +
             (C20456 * C153927 + (C15549 + C15550) * C154107) * C2847 +
             ((C20483 + C20484) * C153927 +
              (C14934 * C557 + C15495 + C15495 + C153969 * C581 +
               C14932 * C556 + C15496 + C15496 + C154109 * C580) *
                  C154107) *
                 C2846) *
                C153847) *
               C154093 +
           ((((C20484 + C20483) * C154107 + (C22275 + C22276) * C153927) *
                 C2846 +
             (C20461 * C154107 + (C20485 + C20486) * C153927) * C2847 +
             (C20466 * C154107 + (C20487 + C20488) * C153927) * C154130) *
                C153847 -
            (C19775 * C154130 + (C19132 * C153927 + C19133 * C154107) * C2847 +
             ((C19166 + C19167) * C153927 + (C19165 + C19164) * C154107) *
                 C2846) *
                C2058) *
               C153819) *
              C154085 +
          (((((C15550 + C15549) * C154107 + C20461 * C153927) * C2846 +
             ((C15548 + C15547) * C154107 + C20466 * C153927) * C2847 +
             ((C15546 + C15545) * C154107 + (C16273 + C16274) * C153927) *
                 C154130) *
                C153847 -
            (C18834 * C154130 +
             (C15752 * C153927 + (C14994 + C14993) * C154107) * C2847 +
             (C19133 * C153927 + (C14992 + C14991) * C154107) * C2846) *
                C2058) *
               C154093 +
           (((C19130 * C154107 + C19138 * C153927) * C2846 +
             (C18830 * C154107 + C19143 * C153927) * C2847 +
             (C19774 * C154107 + (C15281 + C15282) * C153927) * C154130) *
                C2058 -
            (((C14934 * C3372 + C17455 + C17455 + C153969 * C3380 +
               C14932 * C1917 + C17456 + C17456 + C154109 * C1927) *
                  C153927 +
              (C16274 + C16273) * C154107) *
                 C154130 +
             ((C20488 + C20487) * C153927 + C20066 * C154107) * C2847 +
             ((C20486 + C20485) * C153927 + C20456 * C154107) * C2846) *
                C153847) *
               C153819) *
              C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
              C14938 + C14938 + C153969 * C580) *
                 C34572 +
             (C19164 + C19165) * C34573 + C38471 * C34574 + C43614 * C154116) *
                C153712 * C2058 -
            (C45644 * C154116 + C41531 * C34574 + (C20483 + C20484) * C34573 +
             (C14934 * C557 + C15495 + C15495 + C153969 * C581 + C14932 * C556 +
              C15496 + C15496 + C154109 * C580) *
                 C34572) *
                C153712 * C153847) *
               C154093 +
           (((C20484 + C20483) * C34572 + (C22275 + C22276) * C34573 +
             (C41544 + C41545) * C34574 + (C45655 + C45656) * C154116) *
                C153712 * C153847 -
            (C44779 * C154116 + C40246 * C34574 + (C19166 + C19167) * C34573 +
             (C19165 + C19164) * C34572) *
                C153712 * C2058) *
               C153819) *
              C154085 +
          ((((C15550 + C15549) * C34572 + C20461 * C34573 + C39751 * C34574 +
             (C39760 + C39761) * C154116) *
                C153712 * C153847 -
            (C38472 * C154116 + C19132 * C34574 + C19133 * C34573 +
             (C14992 + C14991) * C34572) *
                C153712 * C2058) *
               C154093 +
           ((C19130 * C34572 + C19138 * C34573 + C38473 * C34574 +
             (C38482 + C38483) * C154116) *
                C153712 * C2058 -
            ((C14934 * C28359 + C41536 + C41536 + C153969 * C28363 +
              C14932 * C5558 + C41537 + C41537 + C154109 * C5564) *
                 C154116 +
             (C39761 + C39760) * C34574 + C39750 * C34573 + C20456 * C34572) *
                C153712 * C153847) *
               C153819) *
              C153754)) /
            (p * q * std::sqrt(p + q));
    d2ee[326] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
              C14938 + C14938 + C153969 * C580) *
                 C154107 +
             (C19164 + C19165) * C153927) *
                C2846 +
            ((C14991 + C14992) * C154107 + C19130 * C153927) * C2847 +
            C18835 * C154130) *
               C154166 -
           (C20069 * C154130 +
            (C20456 * C153927 + (C15549 + C15550) * C154107) * C2847 +
            ((C20483 + C20484) * C153927 +
             (C14934 * C557 + C15495 + C15495 + C153969 * C581 + C14932 * C556 +
              C15496 + C15496 + C154109 * C580) *
                 C154107) *
                C2846) *
               C154167 +
           (((C14932 * C557 + C15497 + C15497 + C154109 * C581 +
              C14934 * C2272 + C15498 + C15498 + C153969 * C2282) *
                 C154107 +
             (C21293 + C21294) * C153927) *
                C2846 +
            ((C15551 + C15552) * C154107 + (C19478 + C19479) * C153927) *
                C2847 +
            ((C15553 + C15554) * C154107 + (C19480 + C19481) * C153927) *
                C154130) *
               C2574) *
              C154093 +
          ((((C20484 + C20483) * C154107 + (C22275 + C22276) * C153927) *
                C2846 +
            (C20461 * C154107 + (C20485 + C20486) * C153927) * C2847 +
            (C20466 * C154107 + (C20487 + C20488) * C153927) * C154130) *
               C154167 -
           (C19775 * C154130 + (C19132 * C153927 + C19133 * C154107) * C2847 +
            ((C19166 + C19167) * C153927 + (C19165 + C19164) * C154107) *
                C2846) *
               C154166 -
           (((C14934 * C6156 + C21283 + C21283 + C153969 * C6168 +
              C14932 * C3371 + C21284 + C21284 + C154109 * C3379) *
                 C153927 +
             (C19481 + C19480) * C154107) *
                C154130 +
            ((C14934 * C6158 + C21285 + C21285 + C153969 * C6170 +
              C14932 * C3370 + C21286 + C21286 + C154109 * C3378) *
                 C153927 +
             (C19479 + C19478) * C154107) *
                C2847 +
            ((C14934 * C6160 + C21287 + C21287 + C153969 * C6172 +
              C14932 * C3369 + C21288 + C21288 + C154109 * C3377) *
                 C153927 +
             (C21294 + C21293) * C154107) *
                C2846) *
               C2574) *
              C153819) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
             C14938 + C14938 + C153969 * C580) *
                C34572 +
            (C19164 + C19165) * C34573 + C38471 * C34574 + C43614 * C154116) *
               C153712 * C154166 -
           (C45644 * C154116 + C41531 * C34574 + (C20483 + C20484) * C34573 +
            (C14934 * C557 + C15495 + C15495 + C153969 * C581 + C14932 * C556 +
             C15496 + C15496 + C154109 * C580) *
                C34572) *
               C153712 * C154167 +
           ((C14932 * C557 + C15497 + C15497 + C154109 * C581 + C14934 * C2272 +
             C15498 + C15498 + C153969 * C2282) *
                C34572 +
            (C21293 + C21294) * C34573 + (C40563 + C40564) * C34574 +
            (C44996 + C44997) * C154116) *
               C153712 * C2574) *
              C154093 +
          (((C20484 + C20483) * C34572 + (C22275 + C22276) * C34573 +
            (C41544 + C41545) * C34574 + (C45655 + C45656) * C154116) *
               C153712 * C154167 -
           (C44779 * C154116 + C40246 * C34574 + (C19166 + C19167) * C34573 +
            (C19165 + C19164) * C34572) *
               C153712 * C154166 -
           ((C14934 * C29880 + C44990 + C44990 + C153969 * C29884 +
             C14932 * C28358 + C44991 + C44991 + C154109 * C28362) *
                C154116 +
            (C44997 + C44996) * C34574 + (C40564 + C40563) * C34573 +
            (C21294 + C21293) * C34572) *
               C153712 * C2574) *
              C153819) *
         C153748) /
            (p * q * std::sqrt(p + q));
    d2ee[327] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
              C14938 + C14938 + C153969 * C580) *
                 C154107 +
             (C19164 + C19165) * C153927) *
                C2846 +
            ((C14991 + C14992) * C154107 + C19130 * C153927) * C2847 +
            C18835 * C154130) *
               C2058 -
           (C20069 * C154130 +
            (C20456 * C153927 + (C15549 + C15550) * C154107) * C2847 +
            ((C20483 + C20484) * C153927 +
             (C14934 * C557 + C15495 + C15495 + C153969 * C581 + C14932 * C556 +
              C15496 + C15496 + C154109 * C580) *
                 C154107) *
                C2846) *
               C153847) *
              C326 +
          ((((C20484 + C20483) * C154107 + (C22275 + C22276) * C153927) *
                C2846 +
            (C20461 * C154107 + (C20485 + C20486) * C153927) * C2847 +
            (C20466 * C154107 + (C20487 + C20488) * C153927) * C154130) *
               C153847 -
           (C19775 * C154130 + (C19132 * C153927 + C19133 * C154107) * C2847 +
            ((C19166 + C19167) * C153927 + (C19165 + C19164) * C154107) *
                C2846) *
               C2058) *
              C327 +
          ((((C19167 + C19166) * C154107 + (C20987 + C20988) * C153927) *
                C2846 +
            (C19138 * C154107 + (C19168 + C19169) * C153927) * C2847 +
            (C19143 * C154107 + (C19170 + C19171) * C153927) * C154130) *
               C2058 -
           (((C14934 * C4809 + C22265 + C22265 + C153969 * C4815 +
              C14932 * C4170 + C22266 + C22266 + C154109 * C4178) *
                 C153927 +
             (C20488 + C20487) * C154107) *
                C154130 +
            ((C14934 * C4810 + C22267 + C22267 + C153969 * C4816 +
              C14932 * C4169 + C22268 + C22268 + C154109 * C4177) *
                 C153927 +
             (C20486 + C20485) * C154107) *
                C2847 +
            ((C14934 * C4811 + C22269 + C22269 + C153969 * C4817 +
              C14932 * C4168 + C22270 + C22270 + C154109 * C4176) *
                 C153927 +
             (C22276 + C22275) * C154107) *
                C2846) *
               C153847) *
              C328) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
              C14938 + C14938 + C153969 * C580) *
                 C154107 +
             (C19164 + C19165) * C153927) *
                C2846 +
            ((C14991 + C14992) * C154107 + C19130 * C153927) * C2847 +
            C18835 * C154130) *
               C2058 -
           (C20069 * C154130 +
            (C20456 * C153927 + (C15549 + C15550) * C154107) * C2847 +
            ((C20483 + C20484) * C153927 +
             (C14934 * C557 + C15495 + C15495 + C153969 * C581 + C14932 * C556 +
              C15496 + C15496 + C154109 * C580) *
                 C154107) *
                C2846) *
               C153847) *
              C153767 * C1253 +
          ((((C15550 + C15549) * C154107 + C20461 * C153927) * C2846 +
            ((C15548 + C15547) * C154107 + C20466 * C153927) * C2847 +
            ((C15546 + C15545) * C154107 + (C16273 + C16274) * C153927) *
                C154130) *
               C153847 -
           (C18834 * C154130 +
            (C15752 * C153927 + (C14994 + C14993) * C154107) * C2847 +
            (C19133 * C153927 + (C14992 + C14991) * C154107) * C2846) *
               C2058) *
              C153767 * C1254 +
          ((C18835 * C2846 + (C15002 * C154107 + C19774 * C153927) * C2847 +
            ((C14998 + C14997) * C154107 + (C15765 + C15766) * C153927) *
                C154130) *
               C2058 -
           (((C14934 * C1485 + C16255 + C16255 + C153969 * C1495 +
              C14932 * C1085 + C16256 + C16256 + C154109 * C1097) *
                 C153927 +
             (C15976 + C15975) * C154107) *
                C154130 +
            ((C16274 + C16273) * C153927 + C15961 * C154107) * C2847 +
            C20069 * C2846) *
               C153847) *
              C153767 * C1255)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
             C14938 + C14938 + C153969 * C580) *
                C154107 +
            (C19164 + C19165) * C153927) *
               C2846 +
           ((C14991 + C14992) * C154107 + C19130 * C153927) * C2847 +
           C18835 * C154130) *
              C2264 -
          (C20069 * C154130 +
           (C20456 * C153927 + (C15549 + C15550) * C154107) * C2847 +
           ((C20483 + C20484) * C153927 +
            (C14934 * C557 + C15495 + C15495 + C153969 * C581 + C14932 * C556 +
             C15496 + C15496 + C154109 * C580) *
                C154107) *
               C2846) *
              C2265 +
          (((C14932 * C557 + C15497 + C15497 + C154109 * C581 + C14934 * C2272 +
             C15498 + C15498 + C153969 * C2282) *
                C154107 +
            (C21293 + C21294) * C153927) *
               C2846 +
           ((C15551 + C15552) * C154107 + (C19478 + C19479) * C153927) * C2847 +
           ((C15553 + C15554) * C154107 + (C19480 + C19481) * C153927) *
               C154130) *
              C2266 -
          (((C14934 * C9165 + C23051 + C23051 + C153969 * C9171 +
             C14932 * C6157 + C23052 + C23052 + C154109 * C6169) *
                C153927 +
            (C14934 * C7667 + C17983 + C17983 + C153969 * C7675 +
             C14932 * C2270 + C17984 + C17984 + C154109 * C2280) *
                C154107) *
               C154130 +
           ((C14934 * C9166 + C23053 + C23053 + C153969 * C9172 +
             C14932 * C6159 + C23054 + C23054 + C154109 * C6171) *
                C153927 +
            (C14934 * C7666 + C17985 + C17985 + C153969 * C7674 +
             C14932 * C2271 + C17986 + C17986 + C154109 * C2281) *
                C154107) *
               C2847 +
           ((C14934 * C9167 + C23055 + C23055 + C153969 * C9173 +
             C14932 * C6161 + C23056 + C23056 + C154109 * C6173) *
                C153927 +
            (C14934 * C7665 + C17987 + C17987 + C153969 * C7673 +
             C14932 * C2272 + C17988 + C17988 + C154109 * C2282) *
                C154107) *
               C2846) *
              C2267) *
         C153767 * C153748) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
             C14938 + C14938 + C153969 * C580) *
                C34572 +
            (C19164 + C19165) * C34573 + C38471 * C34574 + C43614 * C154116) *
               C153712 * C2058 -
           (C45644 * C154116 + C41531 * C34574 + (C20483 + C20484) * C34573 +
            (C14934 * C557 + C15495 + C15495 + C153969 * C581 + C14932 * C556 +
             C15496 + C15496 + C154109 * C580) *
                C34572) *
               C153712 * C153847) *
              C153767 * C1253 +
          (((C15550 + C15549) * C34572 + C20461 * C34573 + C39751 * C34574 +
            (C39760 + C39761) * C154116) *
               C153712 * C153847 -
           (C38472 * C154116 + C19132 * C34574 + C19133 * C34573 +
            (C14992 + C14991) * C34572) *
               C153712 * C2058) *
              C153767 * C1254 +
          ((C15001 * C34572 + C18830 * C34573 + C19143 * C34574 +
            (C19170 + C19171) * C154116) *
               C153712 * C2058 -
           ((C14934 * C4809 + C22265 + C22265 + C153969 * C4815 +
             C14932 * C4170 + C22266 + C22266 + C154109 * C4178) *
                C154116 +
            (C20488 + C20487) * C34574 + C20066 * C34573 + C15962 * C34572) *
               C153712 * C153847) *
              C153767 * C1255)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
             C14938 + C14938 + C153969 * C580) *
                C34572 +
            (C19164 + C19165) * C34573 + C38471 * C34574 + C43614 * C154116) *
               C153712 * C2058 -
           (C45644 * C154116 + C41531 * C34574 + (C20483 + C20484) * C34573 +
            (C14934 * C557 + C15495 + C15495 + C153969 * C581 + C14932 * C556 +
             C15496 + C15496 + C154109 * C580) *
                C34572) *
               C153712 * C153847) *
              C326 +
          (((C20484 + C20483) * C34572 + (C22275 + C22276) * C34573 +
            (C41544 + C41545) * C34574 + (C45655 + C45656) * C154116) *
               C153712 * C153847 -
           (C44779 * C154116 + C40246 * C34574 + (C19166 + C19167) * C34573 +
            (C19165 + C19164) * C34572) *
               C153712 * C2058) *
              C327 +
          ((C38471 * C34572 + C43614 * C34573 + (C40259 + C40260) * C34574 +
            (C44790 + C44791) * C154116) *
               C153712 * C2058 -
           ((C14934 * C29125 + C45649 + C45649 + C153969 * C29127 +
             C14932 * C28772 + C45650 + C45650 + C154109 * C28776) *
                C154116 +
            (C45656 + C45655) * C34574 + C45644 * C34573 + C41531 * C34572) *
               C153712 * C153847) *
              C328) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
            C14938 + C14938 + C153969 * C580) *
               C34572 +
           (C19164 + C19165) * C34573 + C38471 * C34574 + C43614 * C154116) *
              C153712 * C2264 -
          (C45644 * C154116 + C41531 * C34574 + (C20483 + C20484) * C34573 +
           (C14934 * C557 + C15495 + C15495 + C153969 * C581 + C14932 * C556 +
            C15496 + C15496 + C154109 * C580) *
               C34572) *
              C153712 * C2265 +
          ((C14932 * C557 + C15497 + C15497 + C154109 * C581 + C14934 * C2272 +
            C15498 + C15498 + C153969 * C2282) *
               C34572 +
           (C21293 + C21294) * C34573 + (C40563 + C40564) * C34574 +
           (C44996 + C44997) * C154116) *
              C153712 * C2266 -
          ((C14934 * C32340 + C46175 + C46175 + C153969 * C32342 +
            C14932 * C29881 + C46176 + C46176 + C154109 * C29885) *
               C154116 +
           (C14934 * C30946 + C42322 + C42322 + C153969 * C30950 +
            C14932 * C6160 + C42323 + C42323 + C154109 * C6172) *
               C34574 +
           (C14934 * C9167 + C23055 + C23055 + C153969 * C9173 +
            C14932 * C6161 + C23056 + C23056 + C154109 * C6173) *
               C34573 +
           (C14934 * C7665 + C17987 + C17987 + C153969 * C7673 +
            C14932 * C2272 + C17988 + C17988 + C154109 * C2282) *
               C34572) *
              C153712 * C2267) *
         C153767 * C153748) /
            (p * q * std::sqrt(p + q));
    d2ee[328] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
              C14938 + C14938 + C153969 * C580) *
                 C154107 +
             (C19164 + C19165) * C153927) *
                C2846 +
            ((C14991 + C14992) * C154107 + C19130 * C153927) * C2847 +
            C18835 * C154130) *
               C154166 -
           (C20069 * C154130 +
            (C20456 * C153927 + (C15549 + C15550) * C154107) * C2847 +
            ((C20483 + C20484) * C153927 +
             (C14934 * C557 + C15495 + C15495 + C153969 * C581 + C14932 * C556 +
              C15496 + C15496 + C154109 * C580) *
                 C154107) *
                C2846) *
               C154167 +
           (((C14932 * C557 + C15497 + C15497 + C154109 * C581 +
              C14934 * C2272 + C15498 + C15498 + C153969 * C2282) *
                 C154107 +
             (C21293 + C21294) * C153927) *
                C2846 +
            ((C15551 + C15552) * C154107 + (C19478 + C19479) * C153927) *
                C2847 +
            ((C15553 + C15554) * C154107 + (C19480 + C19481) * C153927) *
                C154130) *
               C2574) *
              C153767 * C154085 +
          ((((C15550 + C15549) * C154107 + C20461 * C153927) * C2846 +
            ((C15548 + C15547) * C154107 + C20466 * C153927) * C2847 +
            ((C15546 + C15545) * C154107 + (C16273 + C16274) * C153927) *
                C154130) *
               C154167 -
           (C18834 * C154130 +
            (C15752 * C153927 + (C14994 + C14993) * C154107) * C2847 +
            (C19133 * C153927 + (C14992 + C14991) * C154107) * C2846) *
               C154166 -
           (((C14934 * C8529 + C16801 + C16801 + C153969 * C8531 +
              C14932 * C1486 + C16802 + C16802 + C154109 * C1496) *
                 C153927 +
             (C15556 + C15555) * C154107) *
                C154130 +
            ((C19481 + C19480) * C153927 + (C15554 + C15553) * C154107) *
                C2847 +
            ((C19479 + C19478) * C153927 + (C15552 + C15551) * C154107) *
                C2846) *
               C2574) *
              C153767 * C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
             C14938 + C14938 + C153969 * C580) *
                C34572 +
            (C19164 + C19165) * C34573 + C38471 * C34574 + C43614 * C154116) *
               C153712 * C154166 -
           (C45644 * C154116 + C41531 * C34574 + (C20483 + C20484) * C34573 +
            (C14934 * C557 + C15495 + C15495 + C153969 * C581 + C14932 * C556 +
             C15496 + C15496 + C154109 * C580) *
                C34572) *
               C153712 * C154167 +
           ((C14932 * C557 + C15497 + C15497 + C154109 * C581 + C14934 * C2272 +
             C15498 + C15498 + C153969 * C2282) *
                C34572 +
            (C21293 + C21294) * C34573 + (C40563 + C40564) * C34574 +
            (C44996 + C44997) * C154116) *
               C153712 * C2574) *
              C153767 * C154085 +
          (((C15550 + C15549) * C34572 + C20461 * C34573 + C39751 * C34574 +
            (C39760 + C39761) * C154116) *
               C153712 * C154167 -
           (C38472 * C154116 + C19132 * C34574 + C19133 * C34573 +
            (C14992 + C14991) * C34572) *
               C153712 * C154166 -
           ((C14934 * C31684 + C40555 + C40555 + C153969 * C31686 +
             C14932 * C4810 + C40556 + C40556 + C154109 * C4816) *
                C154116 +
            (C38783 + C38782) * C34574 + (C19479 + C19478) * C34573 +
            (C15552 + C15551) * C34572) *
               C153712 * C2574) *
              C153767 * C153754)) /
            (p * q * std::sqrt(p + q));
    d2ee[329] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
              C14938 + C14938 + C153969 * C580) *
                 C154107 +
             (C19164 + C19165) * C153927) *
                C2846 +
            ((C14991 + C14992) * C154107 + C19130 * C153927) * C2847 +
            C18835 * C154130) *
               C2058 -
           (C20069 * C154130 +
            (C20456 * C153927 + (C15549 + C15550) * C154107) * C2847 +
            ((C20483 + C20484) * C153927 +
             (C14934 * C557 + C15495 + C15495 + C153969 * C581 + C14932 * C556 +
              C15496 + C15496 + C154109 * C580) *
                 C154107) *
                C2846) *
               C153847) *
              C153767 * C1253 +
          ((((C15550 + C15549) * C154107 + C20461 * C153927) * C2846 +
            ((C15548 + C15547) * C154107 + C20466 * C153927) * C2847 +
            ((C15546 + C15545) * C154107 + (C16273 + C16274) * C153927) *
                C154130) *
               C153847 -
           (C18834 * C154130 +
            (C15752 * C153927 + (C14994 + C14993) * C154107) * C2847 +
            (C19133 * C153927 + (C14992 + C14991) * C154107) * C2846) *
               C2058) *
              C153767 * C1254 +
          ((C18835 * C2846 + (C15002 * C154107 + C19774 * C153927) * C2847 +
            ((C14998 + C14997) * C154107 + (C15765 + C15766) * C153927) *
                C154130) *
               C2058 -
           (((C14934 * C1485 + C16255 + C16255 + C153969 * C1495 +
              C14932 * C1085 + C16256 + C16256 + C154109 * C1097) *
                 C153927 +
             (C15976 + C15975) * C154107) *
                C154130 +
            ((C16274 + C16273) * C153927 + C15961 * C154107) * C2847 +
            C20069 * C2846) *
               C153847) *
              C153767 * C1255)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
              C14938 + C14938 + C153969 * C580) *
                 C154107 +
             (C19164 + C19165) * C153927) *
                C2846 +
            ((C14991 + C14992) * C154107 + C19130 * C153927) * C2847 +
            C18835 * C154130) *
               C2058 -
           (C20069 * C154130 +
            (C20456 * C153927 + (C15549 + C15550) * C154107) * C2847 +
            ((C20483 + C20484) * C153927 +
             (C14934 * C557 + C15495 + C15495 + C153969 * C581 + C14932 * C556 +
              C15496 + C15496 + C154109 * C580) *
                 C154107) *
                C2846) *
               C153847) *
              C326 +
          ((((C20484 + C20483) * C154107 + (C22275 + C22276) * C153927) *
                C2846 +
            (C20461 * C154107 + (C20485 + C20486) * C153927) * C2847 +
            (C20466 * C154107 + (C20487 + C20488) * C153927) * C154130) *
               C153847 -
           (C19775 * C154130 + (C19132 * C153927 + C19133 * C154107) * C2847 +
            ((C19166 + C19167) * C153927 + (C19165 + C19164) * C154107) *
                C2846) *
               C2058) *
              C327 +
          ((((C19167 + C19166) * C154107 + (C20987 + C20988) * C153927) *
                C2846 +
            (C19138 * C154107 + (C19168 + C19169) * C153927) * C2847 +
            (C19143 * C154107 + (C19170 + C19171) * C153927) * C154130) *
               C2058 -
           (((C14934 * C4809 + C22265 + C22265 + C153969 * C4815 +
              C14932 * C4170 + C22266 + C22266 + C154109 * C4178) *
                 C153927 +
             (C20488 + C20487) * C154107) *
                C154130 +
            ((C14934 * C4810 + C22267 + C22267 + C153969 * C4816 +
              C14932 * C4169 + C22268 + C22268 + C154109 * C4177) *
                 C153927 +
             (C20486 + C20485) * C154107) *
                C2847 +
            ((C14934 * C4811 + C22269 + C22269 + C153969 * C4817 +
              C14932 * C4168 + C22270 + C22270 + C154109 * C4176) *
                 C153927 +
             (C22276 + C22275) * C154107) *
                C2846) *
               C153847) *
              C328) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
             C14938 + C14938 + C153969 * C580) *
                C34572 +
            (C19164 + C19165) * C34573 + C38471 * C34574 + C43614 * C154116) *
               C153712 * C2058 -
           (C45644 * C154116 + C41531 * C34574 + (C20483 + C20484) * C34573 +
            (C14934 * C557 + C15495 + C15495 + C153969 * C581 + C14932 * C556 +
             C15496 + C15496 + C154109 * C580) *
                C34572) *
               C153712 * C153847) *
              C153767 * C1253 +
          (((C15550 + C15549) * C34572 + C20461 * C34573 + C39751 * C34574 +
            (C39760 + C39761) * C154116) *
               C153712 * C153847 -
           (C38472 * C154116 + C19132 * C34574 + C19133 * C34573 +
            (C14992 + C14991) * C34572) *
               C153712 * C2058) *
              C153767 * C1254 +
          ((C15001 * C34572 + C18830 * C34573 + C19143 * C34574 +
            (C19170 + C19171) * C154116) *
               C153712 * C2058 -
           ((C14934 * C4809 + C22265 + C22265 + C153969 * C4815 +
             C14932 * C4170 + C22266 + C22266 + C154109 * C4178) *
                C154116 +
            (C20488 + C20487) * C34574 + C20066 * C34573 + C15962 * C34572) *
               C153712 * C153847) *
              C153767 * C1255)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
             C14938 + C14938 + C153969 * C580) *
                C34572 +
            (C19164 + C19165) * C34573 + C38471 * C34574 + C43614 * C154116) *
               C153712 * C2058 -
           (C45644 * C154116 + C41531 * C34574 + (C20483 + C20484) * C34573 +
            (C14934 * C557 + C15495 + C15495 + C153969 * C581 + C14932 * C556 +
             C15496 + C15496 + C154109 * C580) *
                C34572) *
               C153712 * C153847) *
              C326 +
          (((C20484 + C20483) * C34572 + (C22275 + C22276) * C34573 +
            (C41544 + C41545) * C34574 + (C45655 + C45656) * C154116) *
               C153712 * C153847 -
           (C44779 * C154116 + C40246 * C34574 + (C19166 + C19167) * C34573 +
            (C19165 + C19164) * C34572) *
               C153712 * C2058) *
              C327 +
          ((C38471 * C34572 + C43614 * C34573 + (C40259 + C40260) * C34574 +
            (C44790 + C44791) * C154116) *
               C153712 * C2058 -
           ((C14934 * C29125 + C45649 + C45649 + C153969 * C29127 +
             C14932 * C28772 + C45650 + C45650 + C154109 * C28776) *
                C154116 +
            (C45656 + C45655) * C34574 + C45644 * C34573 + C41531 * C34572) *
               C153712 * C153847) *
              C328) *
         C153748) /
            (p * q * std::sqrt(p + q));
    d2ee[330] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C154181 +
             C3138 * C154169 + C3139 * C154143) *
                C2846 +
            (C2850 + C2851 + C2852) * C2847 + C2864 * C154130) *
               C153783 * C154093 -
           (C3650 * C154130 + (C3147 + C3106 + C3107) * C2847 +
            (C3142 * C154143 + C3139 * C154169 + C3138 * C154181) * C2846) *
               C153783 * C153819) *
              C154162 +
          (((C3107 + C3106 + C3147) * C2846 + (C3103 + C3102 + C3146) * C2847 +
            (C3647 + C3648 + C3649) * C154130) *
               C153783 * C153819 -
           (C2865 * C154130 + (C2855 + C2854 + C2853) * C2847 +
            (C2852 + C2851 + C2850) * C2846) *
               C153783 * C154093) *
              C154163 +
          ((C2864 * C2846 + (C2858 + C2857 + C2856) * C2847 +
            (C2859 + C2860 + C2861) * C154130) *
               C153783 * C154093 -
           (((C134 * C1343 + C1359 + C1359 + C153882 * C1353) * C154143 +
             C419 * C154169 + C412 * C154181) *
                C154130 +
            (C3649 + C3648 + C3647) * C2847 + C3650 * C2846) *
               C153783 * C153819) *
              C774)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C153865 * C123 +
            C199 * C124 + C200 * C125 + C201 * C126 + C202 * C127) *
               C153783 * C154093 -
           (C420 * C127 + C421 * C126 + C422 * C125 + C423 * C124 +
            (C134 * C335 + C380 + C380 + C153882 * C359) * C153865 * C123) *
               C153783 * C153819) *
              C154162 +
          ((C423 * C123 + C422 * C124 + C421 * C125 + C420 * C126 +
            C785 * C127) *
               C153783 * C153819 -
           (C203 * C127 + C202 * C126 + C201 * C125 + C200 * C124 +
            C199 * C123) *
               C153783 * C154093) *
              C154163 +
          ((C200 * C123 + C201 * C124 + C202 * C125 + C203 * C126 +
            C204 * C127) *
               C153783 * C154093 -
           ((C134 * C775 + C781 + C781 + C153882 * C777) * C153865 * C127 +
            C785 * C126 + C420 * C125 + C421 * C124 + C422 * C123) *
               C153783 * C153819) *
              C774)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C7055 * C136 + C7062 + C7062 + C154182 * C152 + C7057 * C556 +
             C7063 + C7063 + C154171 * C580 + C7059 * C557 + C7064 + C7064 +
             C154146 * C581) *
                C153865 * C2846 +
            (C7128 + C7129 + C7130) * C153865 * C2847 + C7144 * C154130) *
               C153783 * C154093 -
           (C7994 * C154130 + (C7439 + C7440 + C7441) * C153865 * C2847 +
            (C7059 * C1489 + C7382 + C7382 + C154146 * C1499 + C7057 * C1081 +
             C7383 + C7383 + C154171 * C1093 + C7055 * C335 + C7384 + C7384 +
             C154182 * C359) *
                C153865 * C2846) *
               C153783 * C153819) *
              C154162 +
          (((C7441 + C7440 + C7439) * C153865 * C2846 +
            (C7438 + C7437 + C7436) * C153865 * C2847 +
            (C7998 + C7999 + C8000) * C153865 * C154130) *
               C153783 * C153819 -
           (C7145 * C154130 + (C7133 + C7132 + C7131) * C153865 * C2847 +
            (C7130 + C7129 + C7128) * C153865 * C2846) *
               C153783 * C154093) *
              C154163 +
          ((C7144 * C2846 + (C7136 + C7135 + C7134) * C153865 * C2847 +
            (C7137 + C7138 + C7139) * C153865 * C154130) *
               C153783 * C154093 -
           ((C7059 * C1485 + C7987 + C7987 + C154146 * C1495 + C7057 * C1085 +
             C7988 + C7988 + C154171 * C1097 + C7055 * C331 + C7989 + C7989 +
             C154182 * C355) *
                C153865 * C154130 +
            (C8000 + C7999 + C7998) * C153865 * C2847 + C7994 * C2846) *
               C153783 * C153819) *
              C774)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C24168 +
             C3138 * C24169 + C3139 * C154143) *
                C154178 +
            (C24175 + C24176 + C24177) * C154159 + C24189 * C154130) *
               C153783 * C154093 -
           (C24873 * C154130 + (C24412 + C24413 + C24414) * C154159 +
            (C3142 * C154143 + C3139 * C24169 + C3138 * C24168) * C154178) *
               C153783 * C153819) *
              C154162 +
          (((C24414 + C24413 + C24412) * C154178 +
            (C24411 + C24410 + C24409) * C154159 +
            (C24870 + C24871 + C24872) * C154130) *
               C153783 * C153819 -
           (C24190 * C154130 + (C24180 + C24179 + C24178) * C154159 +
            (C24177 + C24176 + C24175) * C154178) *
               C153783 * C154093) *
              C154163 +
          ((C24189 * C154178 + (C24183 + C24182 + C24181) * C154159 +
            (C24184 + C24185 + C24186) * C154130) *
               C153783 * C154093 -
           (((C134 * C1343 + C1359 + C1359 + C153882 * C1353) * C154143 +
             C419 * C24169 + C412 * C24168) *
                C154130 +
            (C24872 + C24871 + C24870) * C154159 + C24873 * C154178) *
               C153783 * C153819) *
              C774)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C28090 +
            C3138 * C28091 + C3139 * C28092 + C3142 * C28093 + C4591 * C28094) *
               C153712 * C153783 * C154093 -
           (C28235 * C28094 + C4591 * C28093 + C3142 * C28092 + C3139 * C28091 +
            C3138 * C28090) *
               C153712 * C153783 * C153819) *
              C154162 +
          ((C415 * C28090 + C416 * C28091 + C3141 * C28092 + C3143 * C28093 +
            C28236 * C28094) *
               C153712 * C153783 * C153819 -
           (C3143 * C28094 + C3141 * C28093 + C416 * C28092 + C415 * C28091 +
            C193 * C28090) *
               C153712 * C153783 * C154093) *
              C154163 +
          ((C194 * C28090 + C414 * C28091 + C417 * C28092 + C3140 * C28093 +
            C3144 * C28094) *
               C153712 * C153783 * C154093 -
           ((C134 * C4574 + C4586 + C4586 + C153882 * C4580) * C28094 +
            C3144 * C28093 + C3140 * C28092 + C417 * C28091 + C414 * C28090) *
               C153712 * C153783 * C153819) *
              C774)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C7055 * C136 + C7062 + C7062 + C154182 * C152 + C7057 * C556 +
             C7063 + C7063 + C154171 * C580 + C7059 * C557 + C7064 + C7064 +
             C154146 * C581) *
                C24168 +
            (C30715 + C30716 + C30717) * C24169 + C30728 * C154143) *
               C153712 * C153783 * C154093 -
           ((C30721 + C30722 + C30723) * C154143 +
            (C30720 + C30719 + C30718) * C24169 +
            (C30717 + C30716 + C30715) * C24168) *
               C153712 * C153783 * C153819) *
              C154162 +
          (((C7441 + C7440 + C7439) * C24168 +
            (C7442 + C7443 + C7444) * C24169 +
            (C30724 + C30725 + C30726) * C154143) *
               C153712 * C153783 * C153819 -
           (C30702 * C154143 + (C7439 + C7440 + C7441) * C24169 +
            (C7130 + C7129 + C7128) * C24168) *
               C153712 * C153783 * C154093) *
              C154163 +
          ((C7142 * C24168 + (C7438 + C7437 + C7436) * C24169 +
            (C7445 + C7446 + C7447) * C154143) *
               C153712 * C153783 * C154093 -
           ((C7059 * C4809 + C8939 + C8939 + C154146 * C4815 + C7057 * C4170 +
             C8940 + C8940 + C154171 * C4178 + C7055 * C1345 + C8941 + C8941 +
             C154182 * C1355) *
                C154143 +
            (C7447 + C7446 + C7445) * C24169 + C7990 * C24168) *
               C153712 * C153783 * C153819) *
              C774)) /
            (p * q * std::sqrt(p + q));
    d2ee[331] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C153882 * C152) * C154181 +
              C3138 * C154169 + C3139 * C154143) *
                 C2846 +
             (C2850 + C2851 + C2852) * C2847 + C2864 * C154130) *
                C154094 -
            (C3874 * C154130 + (C3423 + C3388 + C3389) * C2847 +
             (C4205 * C154143 + C4206 * C154169 +
              (C134 * C556 + C601 + C601 + C153882 * C580) * C154181) *
                 C2846) *
                C153847) *
               C154093 +
           (((C4206 * C154181 + C4205 * C154169 +
              (C134 * C4168 + C4185 + C4185 + C153882 * C4176) * C154143) *
                 C2846 +
             (C4186 + C4187 + C4209) * C2847 +
             (C4191 + C4192 + C4210) * C154130) *
                C153847 -
            (C3650 * C154130 + (C3147 + C3106 + C3107) * C2847 +
             (C3142 * C154143 + C3139 * C154169 + C3138 * C154181) * C2846) *
                C154094) *
               C153819) *
              C329 +
          ((((C3389 + C3388 + C3423) * C2846 + (C3385 + C3384 + C3422) * C2847 +
             (C3870 + C3871 + C3878) * C154130) *
                C153847 -
            (C2865 * C154130 + (C2855 + C2854 + C2853) * C2847 +
             (C2852 + C2851 + C2850) * C2846) *
                C154094) *
               C154093 +
           (((C3107 + C3106 + C3147) * C2846 + (C3103 + C3102 + C3146) * C2847 +
             (C3647 + C3648 + C3649) * C154130) *
                C154094 -
            (((C134 * C4171 + C4196 + C4196 + C153882 * C4179) * C154143 +
              C3877 * C154169 + C1124 * C154181) *
                 C154130 +
             (C4210 + C4192 + C4191) * C2847 +
             (C4209 + C4187 + C4186) * C2846) *
                C153847) *
               C153819) *
              C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C153865 * C123 +
             C199 * C124 + C200 * C125 + C201 * C126 + C202 * C127) *
                C154094 -
            (C641 * C127 + C642 * C126 + C643 * C125 + C644 * C124 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C153865 * C123) *
                C153847) *
               C154093 +
           (((C134 * C1081 + C1100 + C1100 + C153882 * C1093) * C153865 * C123 +
             C1126 * C124 + C1127 * C125 + C1128 * C126 + C1129 * C127) *
                C153847 -
            (C420 * C127 + C421 * C126 + C422 * C125 + C423 * C124 +
             (C134 * C335 + C380 + C380 + C153882 * C359) * C153865 * C123) *
                C154094) *
               C153819) *
              C329 +
          (((C644 * C123 + C643 * C124 + C642 * C125 + C641 * C126 +
             C919 * C127) *
                C153847 -
            (C203 * C127 + C202 * C126 + C201 * C125 + C200 * C124 +
             C199 * C123) *
                C154094) *
               C154093 +
           ((C423 * C123 + C422 * C124 + C421 * C125 + C420 * C126 +
             C785 * C127) *
                C154094 -
            ((C134 * C1086 + C1113 + C1113 + C153882 * C1098) * C153865 * C127 +
             C1129 * C126 + C1128 * C125 + C1127 * C124 + C1126 * C123) *
                C153847) *
               C153819) *
              C153754)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C7055 * C136 + C7062 + C7062 + C154182 * C152 + C7057 * C556 +
              C7063 + C7063 + C154171 * C580 + C7059 * C557 + C7064 + C7064 +
              C154146 * C581) *
                 C153865 * C2846 +
             (C7128 + C7129 + C7130) * C153865 * C2847 + C7144 * C154130) *
                C154094 -
            (C8233 * C154130 + (C7753 + C7754 + C7755) * C153865 * C2847 +
             (C7059 * C2272 + C7696 + C7696 + C154146 * C2282 + C7057 * C557 +
              C7697 + C7697 + C154171 * C581 + C7055 * C556 + C7698 + C7698 +
              C154182 * C580) *
                 C153865 * C2846) *
                C153847) *
               C154093 +
           (((C7055 * C1081 + C8533 + C8533 + C154182 * C1093 + C7057 * C1489 +
              C8534 + C8534 + C154171 * C1499 + C7059 * C6161 + C8535 + C8535 +
              C154146 * C6173) *
                 C153865 * C2846 +
             (C8569 + C8570 + C8571) * C153865 * C2847 +
             (C8572 + C8573 + C8574) * C153865 * C154130) *
                C153847 -
            (C7994 * C154130 + (C7439 + C7440 + C7441) * C153865 * C2847 +
             (C7059 * C1489 + C7382 + C7382 + C154146 * C1499 + C7057 * C1081 +
              C7383 + C7383 + C154171 * C1093 + C7055 * C335 + C7384 + C7384 +
              C154182 * C359) *
                 C153865 * C2846) *
                C154094) *
               C153819) *
              C329 +
          ((((C7755 + C7754 + C7753) * C153865 * C2846 +
             (C7752 + C7751 + C7750) * C153865 * C2847 +
             (C8237 + C8238 + C8239) * C153865 * C154130) *
                C153847 -
            (C7145 * C154130 + (C7133 + C7132 + C7131) * C153865 * C2847 +
             (C7130 + C7129 + C7128) * C153865 * C2846) *
                C154094) *
               C154093 +
           (((C7441 + C7440 + C7439) * C153865 * C2846 +
             (C7438 + C7437 + C7436) * C153865 * C2847 +
             (C7998 + C7999 + C8000) * C153865 * C154130) *
                C154094 -
            ((C7059 * C8529 + C8554 + C8554 + C154146 * C8531 + C7057 * C1486 +
              C8555 + C8555 + C154171 * C1496 + C7055 * C1084 + C8556 + C8556 +
              C154182 * C1096) *
                 C153865 * C154130 +
             (C8574 + C8573 + C8572) * C153865 * C2847 +
             (C8571 + C8570 + C8569) * C153865 * C2846) *
                C153847) *
               C153819) *
              C153754)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C153882 * C152) * C24168 +
              C3138 * C24169 + C3139 * C154143) *
                 C154178 +
             (C24175 + C24176 + C24177) * C154159 + C24189 * C154130) *
                C154094 -
            (C25096 * C154130 + (C24642 + C24643 + C24644) * C154159 +
             (C4205 * C154143 + C4206 * C24169 +
              (C134 * C556 + C601 + C601 + C153882 * C580) * C24168) *
                 C154178) *
                C153847) *
               C154093 +
           (((C4206 * C24168 + C4205 * C24169 + C5574 * C154143) * C154178 +
             (C25387 + C25388 + C25389) * C154159 +
             (C25390 + C25391 + C25392) * C154130) *
                C153847 -
            (C24873 * C154130 + (C24412 + C24413 + C24414) * C154159 +
             (C3142 * C154143 + C3139 * C24169 + C3138 * C24168) * C154178) *
                C154094) *
               C153819) *
              C329 +
          ((((C24644 + C24643 + C24642) * C154178 +
             (C24641 + C24640 + C24639) * C154159 +
             (C25093 + C25094 + C25095) * C154130) *
                C153847 -
            (C24190 * C154130 + (C24180 + C24179 + C24178) * C154159 +
             (C24177 + C24176 + C24175) * C154178) *
                C154094) *
               C154093 +
           (((C24414 + C24413 + C24412) * C154178 +
             (C24411 + C24410 + C24409) * C154159 +
             (C24870 + C24871 + C24872) * C154130) *
                C154094 -
            (((C134 * C4171 + C4196 + C4196 + C153882 * C4179) * C154143 +
              C3877 * C24169 + C1124 * C24168) *
                 C154130 +
             (C25392 + C25391 + C25390) * C154159 +
             (C25389 + C25388 + C25387) * C154178) *
                C153847) *
               C153819) *
              C153754)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C28090 +
             C3138 * C28091 + C3139 * C28092 + C3142 * C28093 +
             C4591 * C28094) *
                C153712 * C154094 -
            (C28789 * C28094 + C5574 * C28093 + C4205 * C28092 +
             C4206 * C28091 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C28090) *
                C153712 * C153847) *
               C154093 +
           ((C4206 * C28090 + C4205 * C28091 + C5574 * C28092 +
             C28789 * C28093 +
             (C134 * C28772 + C28781 + C28781 + C153882 * C28776) * C28094) *
                C153712 * C153847 -
            (C28235 * C28094 + C4591 * C28093 + C3142 * C28092 +
             C3139 * C28091 + C3138 * C28090) *
                C153712 * C154094) *
               C153819) *
              C329 +
          (((C636 * C28090 + C1122 * C28091 + C3417 * C28092 + C4207 * C28093 +
             C28790 * C28094) *
                C153712 * C153847 -
            (C3143 * C28094 + C3141 * C28093 + C416 * C28092 + C415 * C28091 +
             C193 * C28090) *
                C153712 * C154094) *
               C154093 +
           ((C415 * C28090 + C416 * C28091 + C3141 * C28092 + C3143 * C28093 +
             C28236 * C28094) *
                C153712 * C154094 -
            ((C134 * C28773 + C28784 + C28784 + C153882 * C28777) * C28094 +
             C28790 * C28093 + C4207 * C28092 + C3417 * C28091 +
             C1122 * C28090) *
                C153712 * C153847) *
               C153819) *
              C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C7055 * C136 + C7062 + C7062 + C154182 * C152 + C7057 * C556 +
              C7063 + C7063 + C154171 * C580 + C7059 * C557 + C7064 + C7064 +
              C154146 * C581) *
                 C24168 +
             (C30715 + C30716 + C30717) * C24169 + C30728 * C154143) *
                C153712 * C154094 -
            ((C31730 + C31731 + C31732) * C154143 +
             (C31733 + C31734 + C31735) * C24169 +
             (C7059 * C2272 + C7696 + C7696 + C154146 * C2282 + C7057 * C557 +
              C7697 + C7697 + C154171 * C581 + C7055 * C556 + C7698 + C7698 +
              C154182 * C580) *
                 C24168) *
                C153712 * C153847) *
               C154093 +
           (((C31735 + C31734 + C31733) * C24168 +
             (C31732 + C31731 + C31730) * C24169 +
             (C7055 * C4168 + C31700 + C31700 + C154182 * C4176 +
              C7057 * C4811 + C31701 + C31701 + C154171 * C4817 +
              C7059 * C29881 + C31702 + C31702 + C154146 * C29885) *
                 C154143) *
                C153712 * C153847 -
            ((C30721 + C30722 + C30723) * C154143 +
             (C30720 + C30719 + C30718) * C24169 +
             (C30717 + C30716 + C30715) * C24168) *
                C153712 * C154094) *
               C153819) *
              C329 +
          ((((C7755 + C7754 + C7753) * C24168 +
             (C8569 + C8570 + C8571) * C24169 +
             (C31736 + C31737 + C31738) * C154143) *
                C153712 * C153847 -
            (C30702 * C154143 + (C7439 + C7440 + C7441) * C24169 +
             (C7130 + C7129 + C7128) * C24168) *
                C153712 * C154094) *
               C154093 +
           (((C7441 + C7440 + C7439) * C24168 +
             (C7442 + C7443 + C7444) * C24169 +
             (C30724 + C30725 + C30726) * C154143) *
                C153712 * C154094 -
            ((C7059 * C31684 + C31709 + C31709 + C154146 * C31686 +
              C7057 * C4810 + C31710 + C31710 + C154171 * C4816 +
              C7055 * C4169 + C31711 + C31711 + C154182 * C4177) *
                 C154143 +
             (C31738 + C31737 + C31736) * C24169 +
             (C8571 + C8570 + C8569) * C24168) *
                C153712 * C153847) *
               C153819) *
              C153754)) /
            (p * q * std::sqrt(p + q));
    d2ee[332] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             (((C134 * C136 + C161 + C161 + C153882 * C152) * C153865 * C123 +
               C199 * C124 + C200 * C125 + C201 * C126 + C202 * C127) *
                  C153783 * C153767 * C130 -
              (C203 * C127 + C202 * C126 + C201 * C125 + C200 * C124 +
               C199 * C123) *
                  C153783 * C153767 * C131 +
              (C200 * C123 + C201 * C124 + C202 * C125 + C203 * C126 +
               C204 * C127) *
                  C153783 * C153767 * C132 -
              ((C134 * C143 + C180 + C180 + C153882 * C159) * C153865 * C127 +
               C204 * C126 + C203 * C125 + C202 * C124 + C201 * C123) *
                  C153783 * C153767 * C133) +
         std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C136 + C161 + C161 + C153882 * C152) * C153865 * C123 +
                C199 * C124 + C200 * C125 + C201 * C126 + C202 * C127) *
                   C153783 * C326 -
               (C420 * C127 + C421 * C126 + C422 * C125 + C423 * C124 +
                (C134 * C335 + C380 + C380 + C153882 * C359) * C153865 * C123) *
                   C153783 * C327 +
               ((C134 * C336 + C381 + C381 + C153882 * C360) * C153865 * C123 +
                C424 * C124 + C425 * C125 + C426 * C126 + C427 * C127) *
                   C153783 * C328) *
                  C329 +
              ((C423 * C123 + C422 * C124 + C421 * C125 + C420 * C126 +
                (C134 * C341 + C394 + C394 + C153882 * C365) * C153865 * C127) *
                   C153783 * C327 -
               (C203 * C127 + C202 * C126 + C201 * C125 + C200 * C124 +
                C199 * C123) *
                   C153783 * C326 -
               ((C134 * C342 + C395 + C395 + C153882 * C366) * C153865 * C127 +
                C427 * C126 + C426 * C125 + C425 * C124 + C424 * C123) *
                   C153783 * C328) *
                  C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C153865 * C123 +
            C199 * C124 + C200 * C125 + C201 * C126 + C202 * C127) *
               C549 -
           (C641 * C127 + C642 * C126 + C643 * C125 + C644 * C124 +
            (C134 * C556 + C601 + C601 + C153882 * C580) * C153865 * C123) *
               C550 +
           ((C134 * C557 + C602 + C602 + C153882 * C581) * C153865 * C123 +
            C645 * C124 + C646 * C125 + C647 * C126 + C648 * C127) *
               C551) *
              C153767 * C329 +
          ((C644 * C123 + C643 * C124 + C642 * C125 + C641 * C126 +
            (C134 * C562 + C615 + C615 + C153882 * C586) * C153865 * C127) *
               C550 -
           (C203 * C127 + C202 * C126 + C201 * C125 + C200 * C124 +
            C199 * C123) *
               C549 -
           ((C134 * C563 + C616 + C616 + C153882 * C587) * C153865 * C127 +
            C648 * C126 + C647 * C125 + C646 * C124 + C645 * C123) *
               C551) *
              C153767 * C153754)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C154181 +
            (C134 * C335 + C380 + C380 + C153882 * C359) * C154169 +
            (C134 * C336 + C381 + C381 + C153882 * C360) * C154143) *
               C2846 +
           (C2850 + C2851 + C2852) * C2847 + C2864 * C154130) *
              C153783 * C153767 * C130 -
          (C2865 * C154130 + (C2855 + C2854 + C2853) * C2847 +
           (C2852 + C2851 + C2850) * C2846) *
              C153783 * C153767 * C131 +
          (C2864 * C2846 + (C2858 + C2857 + C2856) * C2847 +
           (C2859 + C2860 + C2861) * C154130) *
              C153783 * C153767 * C132 -
          (((C134 * C342 + C395 + C395 + C153882 * C366) * C154143 +
            C784 * C154169 + C197 * C154181) *
               C154130 +
           (C2861 + C2860 + C2859) * C2847 + C2865 * C2846) *
              C153783 * C153767 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C154181 +
             C3138 * C154169 + C3139 * C154143) *
                C2846 +
            (C2850 + C2851 + C2852) * C2847 + C2864 * C154130) *
               C153783 * C326 -
           ((C3146 + C3102 + C3103) * C154130 +
            (C3147 + C3106 + C3107) * C2847 +
            (C3142 * C154143 + C3139 * C154169 + C3138 * C154181) * C2846) *
               C153783 * C327 +
           ((C3139 * C154181 + C3142 * C154169 +
             (C134 * C3083 + C3110 + C3110 + C153882 * C3091) * C154143) *
                C2846 +
            (C3111 + C3148 + C3149) * C2847 +
            (C3115 + C3150 + C3151) * C154130) *
               C153783 * C328) *
              C329 +
          (((C3107 + C3106 + C3147) * C2846 + (C3103 + C3102 + C3146) * C2847 +
            (C413 * C154181 + C418 * C154169 + C3145 * C154143) * C154130) *
               C153783 * C327 -
           (C2865 * C154130 + (C2855 + C2854 + C2853) * C2847 +
            (C2852 + C2851 + C2850) * C2846) *
               C153783 * C326 -
           (((C134 * C3086 + C3121 + C3121 + C153882 * C3094) * C154143 +
             C3145 * C154169 + C418 * C154181) *
                C154130 +
            (C3151 + C3150 + C3115) * C2847 + (C3149 + C3148 + C3111) * C2846) *
               C153783 * C328) *
              C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C154181 +
             C3138 * C154169 + C3139 * C154143) *
                C2846 +
            (C2850 + C2851 + C2852) * C2847 + C2864 * C154130) *
               C549 -
           ((C3422 + C3384 + C3385) * C154130 +
            (C3423 + C3388 + C3389) * C2847 +
            ((C134 * C1920 + C1936 + C1936 + C153882 * C1930) * C154143 +
             (C134 * C1081 + C1100 + C1100 + C153882 * C1093) * C154169 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C154181) *
                C2846) *
               C550 +
           (((C134 * C557 + C602 + C602 + C153882 * C581) * C154181 +
             (C134 * C1489 + C1505 + C1505 + C153882 * C1499) * C154169 +
             (C134 * C3369 + C3390 + C3390 + C153882 * C3377) * C154143) *
                C2846 +
            (C3391 + C3424 + C3425) * C2847 +
            (C3397 + C3426 + C3427) * C154130) *
               C551) *
              C153767 * C329 +
          (((C3389 + C3388 + C3423) * C2846 + (C3385 + C3384 + C3422) * C2847 +
            (C634 * C154181 + C1124 * C154169 +
             (C134 * C1917 + C1933 + C1933 + C153882 * C1927) * C154143) *
                C154130) *
               C550 -
           (C2865 * C154130 + (C2855 + C2854 + C2853) * C2847 +
            (C2852 + C2851 + C2850) * C2846) *
               C549 -
           (((C134 * C3372 + C3403 + C3403 + C153882 * C3380) * C154143 +
             (C134 * C1486 + C1502 + C1502 + C153882 * C1496) * C154169 +
             C639 * C154181) *
                C154130 +
            (C3427 + C3426 + C3397) * C2847 + (C3425 + C3424 + C3391) * C2846) *
               C551) *
              C153767 * C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C7055 * C136 + C7062 + C7062 + C154182 * C152 + C7057 * C556 +
            C7063 + C7063 + C154171 * C580 + C7059 * C557 + C7064 + C7064 +
            C154146 * C581) *
               C153865 * C2846 +
           (C7128 + C7129 + C7130) * C153865 * C2847 + C7144 * C154130) *
              C153783 * C153767 * C130 -
          (C7145 * C154130 + (C7133 + C7132 + C7131) * C153865 * C2847 +
           (C7130 + C7129 + C7128) * C153865 * C2846) *
              C153783 * C153767 * C131 +
          (C7144 * C2846 + (C7136 + C7135 + C7134) * C153865 * C2847 +
           (C7137 + C7138 + C7139) * C153865 * C154130) *
              C153783 * C153767 * C132 -
          ((C7059 * C563 + C7101 + C7101 + C154146 * C587 + C7057 * C562 +
            C7102 + C7102 + C154171 * C586 + C7055 * C141 + C7103 + C7103 +
            C154182 * C157) *
               C153865 * C154130 +
           (C7139 + C7138 + C7137) * C153865 * C2847 + C7145 * C2846) *
              C153783 * C153767 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C7055 * C136 + C7062 + C7062 + C154182 * C152 + C7057 * C556 +
             C7063 + C7063 + C154171 * C580 + C7059 * C557 + C7064 + C7064 +
             C154146 * C581) *
                C153865 * C2846 +
            (C7128 + C7129 + C7130) * C153865 * C2847 + C7144 * C154130) *
               C153783 * C326 -
           ((C7436 + C7437 + C7438) * C153865 * C154130 +
            (C7439 + C7440 + C7441) * C153865 * C2847 +
            (C7059 * C1489 + C7382 + C7382 + C154146 * C1499 + C7057 * C1081 +
             C7383 + C7383 + C154171 * C1093 + C7055 * C335 + C7384 + C7384 +
             C154182 * C359) *
                C153865 * C2846) *
               C153783 * C327 +
           ((C7055 * C336 + C7385 + C7385 + C154182 * C360 + C7057 * C1920 +
             C7386 + C7386 + C154171 * C1930 + C7059 * C3369 + C7387 + C7387 +
             C154146 * C3377) *
                C153865 * C2846 +
            (C7442 + C7443 + C7444) * C153865 * C2847 +
            (C7445 + C7446 + C7447) * C153865 * C154130) *
               C153783 * C328) *
              C329 +
          (((C7441 + C7440 + C7439) * C153865 * C2846 +
            (C7438 + C7437 + C7436) * C153865 * C2847 +
            (C7055 * C332 + C7406 + C7406 + C154182 * C356 + C7057 * C1084 +
             C7407 + C7407 + C154171 * C1096 + C7059 * C1486 + C7408 + C7408 +
             C154146 * C1496) *
                C153865 * C154130) *
               C153783 * C327 -
           (C7145 * C154130 + (C7133 + C7132 + C7131) * C153865 * C2847 +
            (C7130 + C7129 + C7128) * C153865 * C2846) *
               C153783 * C326 -
           ((C7059 * C3372 + C7409 + C7409 + C154146 * C3380 + C7057 * C1917 +
             C7410 + C7410 + C154171 * C1927 + C7055 * C339 + C7411 + C7411 +
             C154182 * C363) *
                C153865 * C154130 +
            (C7447 + C7446 + C7445) * C153865 * C2847 +
            (C7444 + C7443 + C7442) * C153865 * C2846) *
               C153783 * C328) *
              C153754)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C7055 * C136 + C7062 + C7062 + C154182 * C152 + C7057 * C556 +
             C7063 + C7063 + C154171 * C580 + C7059 * C557 + C7064 + C7064 +
             C154146 * C581) *
                C153865 * C2846 +
            (C7128 + C7129 + C7130) * C153865 * C2847 + C7144 * C154130) *
               C549 -
           ((C7750 + C7751 + C7752) * C153865 * C154130 +
            (C7753 + C7754 + C7755) * C153865 * C2847 +
            (C7059 * C2272 + C7696 + C7696 + C154146 * C2282 + C7057 * C557 +
             C7697 + C7697 + C154171 * C581 + C7055 * C556 + C7698 + C7698 +
             C154182 * C580) *
                C153865 * C2846) *
               C550 +
           ((C7055 * C557 + C7699 + C7699 + C154182 * C581 + C7057 * C2272 +
             C7700 + C7700 + C154171 * C2282 + C7059 * C7665 + C7701 + C7701 +
             C154146 * C7673) *
                C153865 * C2846 +
            (C7756 + C7757 + C7758) * C153865 * C2847 +
            (C7759 + C7760 + C7761) * C153865 * C154130) *
               C551) *
              C153767 * C329 +
          (((C7755 + C7754 + C7753) * C153865 * C2846 +
            (C7752 + C7751 + C7750) * C153865 * C2847 +
            (C7055 * C553 + C7720 + C7720 + C154182 * C577 + C7057 * C560 +
             C7721 + C7721 + C154171 * C584 + C7059 * C2269 + C7722 + C7722 +
             C154146 * C2279) *
                C153865 * C154130) *
               C550 -
           (C7145 * C154130 + (C7133 + C7132 + C7131) * C153865 * C2847 +
            (C7130 + C7129 + C7128) * C153865 * C2846) *
               C549 -
           ((C7059 * C7668 + C7723 + C7723 + C154146 * C7676 + C7057 * C2269 +
             C7724 + C7724 + C154171 * C2279 + C7055 * C560 + C7725 + C7725 +
             C154182 * C584) *
                C153865 * C154130 +
            (C7761 + C7760 + C7759) * C153865 * C2847 +
            (C7758 + C7757 + C7756) * C153865 * C2846) *
               C551) *
              C153767 * C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C24168 +
            C3138 * C24169 + C3139 * C154143) *
               C154178 +
           (C24175 + C24176 + C24177) * C154159 + C24189 * C154130) *
              C153783 * C153767 * C130 -
          (C24190 * C154130 + (C24180 + C24179 + C24178) * C154159 +
           (C24177 + C24176 + C24175) * C154178) *
              C153783 * C153767 * C131 +
          (C24189 * C154178 + (C24183 + C24182 + C24181) * C154159 +
           (C24184 + C24185 + C24186) * C154130) *
              C153783 * C153767 * C132 -
          (((C134 * C342 + C395 + C395 + C153882 * C366) * C154143 +
            C784 * C24169 + C197 * C24168) *
               C154130 +
           (C24186 + C24185 + C24184) * C154159 + C24190 * C154178) *
              C153783 * C153767 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C24168 +
             C3138 * C24169 + C3139 * C154143) *
                C154178 +
            (C24175 + C24176 + C24177) * C154159 + C24189 * C154130) *
               C153783 * C326 -
           ((C24409 + C24410 + C24411) * C154130 +
            (C24412 + C24413 + C24414) * C154159 +
            (C3142 * C154143 + C3139 * C24169 + C3138 * C24168) * C154178) *
               C153783 * C327 +
           ((C3139 * C24168 + C3142 * C24169 + C4591 * C154143) * C154178 +
            (C24415 + C24416 + C24417) * C154159 +
            (C24418 + C24419 + C24420) * C154130) *
               C153783 * C328) *
              C329 +
          (((C24414 + C24413 + C24412) * C154178 +
            (C24411 + C24410 + C24409) * C154159 +
            (C413 * C24168 + C418 * C24169 + C3145 * C154143) * C154130) *
               C153783 * C327 -
           (C24190 * C154130 + (C24180 + C24179 + C24178) * C154159 +
            (C24177 + C24176 + C24175) * C154178) *
               C153783 * C326 -
           (((C134 * C3086 + C3121 + C3121 + C153882 * C3094) * C154143 +
             C3145 * C24169 + C418 * C24168) *
                C154130 +
            (C24420 + C24419 + C24418) * C154159 +
            (C24417 + C24416 + C24415) * C154178) *
               C153783 * C328) *
              C153754)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C24168 +
             C3138 * C24169 + C3139 * C154143) *
                C154178 +
            (C24175 + C24176 + C24177) * C154159 + C24189 * C154130) *
               C549 -
           ((C24639 + C24640 + C24641) * C154130 +
            (C24642 + C24643 + C24644) * C154159 +
            (C4205 * C154143 + C4206 * C24169 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C24168) *
                C154178) *
               C550 +
           (((C134 * C557 + C602 + C602 + C153882 * C581) * C24168 +
             C4830 * C24169 + C4831 * C154143) *
                C154178 +
            (C24645 + C24646 + C24647) * C154159 +
            (C24648 + C24649 + C24650) * C154130) *
               C551) *
              C153767 * C329 +
          (((C24644 + C24643 + C24642) * C154178 +
            (C24641 + C24640 + C24639) * C154159 +
            (C634 * C24168 + C1124 * C24169 + C3877 * C154143) * C154130) *
               C550 -
           (C24190 * C154130 + (C24180 + C24179 + C24178) * C154159 +
            (C24177 + C24176 + C24175) * C154178) *
               C549 -
           (((C134 * C3372 + C3403 + C3403 + C153882 * C3380) * C154143 +
             C11810 * C24169 + C639 * C24168) *
                C154130 +
            (C24650 + C24649 + C24648) * C154159 +
            (C24647 + C24646 + C24645) * C154178) *
               C551) *
              C153767 * C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C136 + C161 + C161 + C153882 * C152) * C28090 +
           C3138 * C28091 + C3139 * C28092 + C3142 * C28093 + C4591 * C28094) *
              C153712 * C153783 * C153767 * C130 -
          (C3143 * C28094 + C3141 * C28093 + C416 * C28092 + C415 * C28091 +
           C193 * C28090) *
              C153712 * C153783 * C153767 * C131 +
          (C194 * C28090 + C414 * C28091 + C417 * C28092 + C3140 * C28093 +
           C3144 * C28094) *
              C153712 * C153783 * C153767 * C132 -
          ((C134 * C3086 + C3121 + C3121 + C153882 * C3094) * C28094 +
           C3145 * C28093 + C418 * C28092 + C413 * C28091 + C195 * C28090) *
              C153712 * C153783 * C153767 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C28090 +
            C3138 * C28091 + C3139 * C28092 + C3142 * C28093 + C4591 * C28094) *
               C153712 * C153783 * C326 -
           (C28235 * C28094 + C4591 * C28093 + C3142 * C28092 + C3139 * C28091 +
            C3138 * C28090) *
               C153712 * C153783 * C327 +
           (C3139 * C28090 + C3142 * C28091 + C4591 * C28092 + C28235 * C28093 +
            (C134 * C28218 + C28227 + C28227 + C153882 * C28222) * C28094) *
               C153712 * C153783 * C328) *
              C329 +
          ((C415 * C28090 + C416 * C28091 + C3141 * C28092 + C3143 * C28093 +
            C28236 * C28094) *
               C153712 * C153783 * C327 -
           (C3143 * C28094 + C3141 * C28093 + C416 * C28092 + C415 * C28091 +
            C193 * C28090) *
               C153712 * C153783 * C326 -
           ((C134 * C28219 + C28230 + C28230 + C153882 * C28223) * C28094 +
            C28236 * C28093 + C3143 * C28092 + C3141 * C28091 + C416 * C28090) *
               C153712 * C153783 * C328) *
              C153754)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C28090 +
            C3138 * C28091 + C3139 * C28092 + C3142 * C28093 + C4591 * C28094) *
               C153712 * C549 -
           ((C134 * C5559 + C5571 + C5571 + C153882 * C5565) * C28094 +
            C5574 * C28093 + C4205 * C28092 + C4206 * C28091 +
            (C134 * C556 + C601 + C601 + C153882 * C580) * C28090) *
               C153712 * C550 +
           ((C134 * C557 + C602 + C602 + C153882 * C581) * C28090 +
            C4830 * C28091 + C4831 * C28092 +
            (C134 * C4811 + C4825 + C4825 + C153882 * C4817) * C28093 +
            (C134 * C28358 + C28365 + C28365 + C153882 * C28362) * C28094) *
               C153712 * C551) *
              C153767 * C329 +
          ((C636 * C28090 + C1122 * C28091 + C3417 * C28092 + C4207 * C28093 +
            (C134 * C5558 + C5570 + C5570 + C153882 * C5564) * C28094) *
               C153712 * C550 -
           (C3143 * C28094 + C3141 * C28093 + C416 * C28092 + C415 * C28091 +
            C193 * C28090) *
               C153712 * C549 -
           ((C134 * C28359 + C28366 + C28366 + C153882 * C28363) * C28094 +
            (C134 * C4810 + C4824 + C4824 + C153882 * C4816) * C28093 +
            C3419 * C28092 + C3418 * C28091 + C637 * C28090) *
               C153712 * C551) *
              C153767 * C153754)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C7055 * C136 + C7062 + C7062 + C154182 * C152 + C7057 * C556 +
            C7063 + C7063 + C154171 * C580 + C7059 * C557 + C7064 + C7064 +
            C154146 * C581) *
               C24168 +
           (C7055 * C335 + C7384 + C7384 + C154182 * C359 + C7057 * C1081 +
            C7383 + C7383 + C154171 * C1093 + C7059 * C1489 + C7382 + C7382 +
            C154146 * C1499) *
               C24169 +
           (C7055 * C336 + C7385 + C7385 + C154182 * C360 + C7057 * C1920 +
            C7386 + C7386 + C154171 * C1930 + C7059 * C3369 + C7387 + C7387 +
            C154146 * C3377) *
               C154143) *
              C153712 * C153783 * C153767 * C130 -
          ((C7444 + C7443 + C7442) * C154143 +
           (C7439 + C7440 + C7441) * C24169 +
           (C7130 + C7129 + C7128) * C24168) *
              C153712 * C153783 * C153767 * C131 +
          (C7142 * C24168 + (C7438 + C7437 + C7436) * C24169 +
           (C7445 + C7446 + C7447) * C154143) *
              C153712 * C153783 * C153767 * C132 -
          ((C7059 * C3372 + C7409 + C7409 + C154146 * C3380 + C7057 * C1917 +
            C7410 + C7410 + C154171 * C1927 + C7055 * C339 + C7411 + C7411 +
            C154182 * C363) *
               C154143 +
           (C8000 + C7999 + C7998) * C24169 + C7143 * C24168) *
              C153712 * C153783 * C153767 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C7055 * C136 + C7062 + C7062 + C154182 * C152 + C7057 * C556 +
             C7063 + C7063 + C154171 * C580 + C7059 * C557 + C7064 + C7064 +
             C154146 * C581) *
                C24168 +
            (C30715 + C30716 + C30717) * C24169 + C30728 * C154143) *
               C153712 * C153783 * C326 -
           ((C30721 + C30722 + C30723) * C154143 +
            (C30720 + C30719 + C30718) * C24169 +
            (C30717 + C30716 + C30715) * C24168) *
               C153712 * C153783 * C327 +
           (C30728 * C24168 + (C30723 + C30722 + C30721) * C24169 +
            (C7055 * C3083 + C30677 + C30677 + C154182 * C3091 + C7057 * C5559 +
             C30678 + C30678 + C154171 * C5565 + C7059 * C28358 + C30679 +
             C30679 + C154146 * C28362) *
                C154143) *
               C153712 * C153783 * C328) *
              C329 +
          (((C7441 + C7440 + C7439) * C24168 +
            (C7442 + C7443 + C7444) * C24169 +
            (C30724 + C30725 + C30726) * C154143) *
               C153712 * C153783 * C327 -
           (C30702 * C154143 + (C7439 + C7440 + C7441) * C24169 +
            (C7130 + C7129 + C7128) * C24168) *
               C153712 * C153783 * C326 -
           ((C7059 * C28359 + C30687 + C30687 + C154146 * C28363 +
             C7057 * C5558 + C30688 + C30688 + C154171 * C5564 + C7055 * C3084 +
             C30689 + C30689 + C154182 * C3092) *
                C154143 +
            (C30726 + C30725 + C30724) * C24169 + C30702 * C24168) *
               C153712 * C153783 * C328) *
              C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C7055 * C136 + C7062 + C7062 + C154182 * C152 + C7057 * C556 +
             C7063 + C7063 + C154171 * C580 + C7059 * C557 + C7064 + C7064 +
             C154146 * C581) *
                C24168 +
            (C30715 + C30716 + C30717) * C24169 + C30728 * C154143) *
               C153712 * C549 -
           ((C7059 * C6160 + C9916 + C9916 + C154146 * C6172 + C7057 * C3369 +
             C9917 + C9917 + C154171 * C3377 + C7055 * C1920 + C9918 + C9918 +
             C154182 * C1930) *
                C154143 +
            (C7059 * C6161 + C8535 + C8535 + C154146 * C6173 + C7057 * C1489 +
             C8534 + C8534 + C154171 * C1499 + C7055 * C1081 + C8533 + C8533 +
             C154182 * C1093) *
                C24169 +
            (C7059 * C2272 + C7696 + C7696 + C154146 * C2282 + C7057 * C557 +
             C7697 + C7697 + C154171 * C581 + C7055 * C556 + C7698 + C7698 +
             C154182 * C580) *
                C24168) *
               C153712 * C550 +
           ((C7055 * C557 + C7699 + C7699 + C154182 * C581 + C7057 * C2272 +
             C7700 + C7700 + C154171 * C2282 + C7059 * C7665 + C7701 + C7701 +
             C154146 * C7673) *
                C24168 +
            (C7055 * C1489 + C9183 + C9183 + C154182 * C1499 + C7057 * C6161 +
             C9182 + C9182 + C154171 * C6173 + C7059 * C9167 + C9181 + C9181 +
             C154146 * C9173) *
                C24169 +
            (C7055 * C3369 + C30953 + C30953 + C154182 * C3377 + C7057 * C6160 +
             C30954 + C30954 + C154171 * C6172 + C7059 * C30946 + C30955 +
             C30955 + C154146 * C30950) *
                C154143) *
               C153712 * C551) *
              C153767 * C329 +
          (((C7755 + C7754 + C7753) * C24168 +
            (C8569 + C8570 + C8571) * C24169 +
            (C7055 * C1919 + C9915 + C9915 + C154182 * C1929 + C7057 * C3370 +
             C9914 + C9914 + C154171 * C3378 + C7059 * C6158 + C9913 + C9913 +
             C154146 * C6170) *
                C154143) *
               C153712 * C550 -
           (C30702 * C154143 + (C7439 + C7440 + C7441) * C24169 +
            (C7130 + C7129 + C7128) * C24168) *
               C153712 * C549 -
           ((C7059 * C30947 + C30956 + C30956 + C154146 * C30951 +
             C7057 * C6158 + C30957 + C30957 + C154171 * C6170 + C7055 * C3370 +
             C30958 + C30958 + C154182 * C3378) *
                C154143 +
            (C7059 * C9166 + C9178 + C9178 + C154146 * C9172 + C7057 * C6159 +
             C9179 + C9179 + C154171 * C6171 + C7055 * C1488 + C9180 + C9180 +
             C154182 * C1498) *
                C24169 +
            (C7758 + C7757 + C7756) * C24168) *
               C153712 * C551) *
              C153767 * C153754)) /
            (p * q * std::sqrt(p + q));
    d2ee[333] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C154181 +
             C3138 * C154169 + C3139 * C154143) *
                C2846 +
            (C2850 + C2851 + C2852) * C2847 + C2864 * C154130) *
               C154094 -
           (C3874 * C154130 + (C3423 + C3388 + C3389) * C2847 +
            ((C134 * C1920 + C1936 + C1936 + C153882 * C1930) * C154143 +
             (C134 * C1081 + C1100 + C1100 + C153882 * C1093) * C154169 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C154181) *
                C2846) *
               C153847) *
              C153767 * C154162 +
          (((C3389 + C3388 + C3423) * C2846 + (C3385 + C3384 + C3422) * C2847 +
            (C3870 + C3871 + C3878) * C154130) *
               C153847 -
           (C2865 * C154130 + (C2855 + C2854 + C2853) * C2847 +
            (C2852 + C2851 + C2850) * C2846) *
               C154094) *
              C153767 * C154163 +
          ((C2864 * C2846 + (C2858 + C2857 + C2856) * C2847 +
            (C2859 + C2860 + C2861) * C154130) *
               C154094 -
           (((C134 * C1916 + C1932 + C1932 + C153882 * C1926) * C154143 +
             C1125 * C154169 + C633 * C154181) *
                C154130 +
            (C3878 + C3871 + C3870) * C2847 + C3874 * C2846) *
               C153847) *
              C153767 * C774)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C153865 * C123 +
            C199 * C124 + C200 * C125 + C201 * C126 + C202 * C127) *
               C154094 -
           (C641 * C127 + C642 * C126 + C643 * C125 + C644 * C124 +
            (C134 * C556 + C601 + C601 + C153882 * C580) * C153865 * C123) *
               C153847) *
              C153767 * C154162 +
          ((C644 * C123 + C643 * C124 + C642 * C125 + C641 * C126 +
            C919 * C127) *
               C153847 -
           (C203 * C127 + C202 * C126 + C201 * C125 + C200 * C124 +
            C199 * C123) *
               C154094) *
              C153767 * C154163 +
          ((C200 * C123 + C201 * C124 + C202 * C125 + C203 * C126 +
            C204 * C127) *
               C154094 -
           ((C134 * C909 + C915 + C915 + C153882 * C911) * C153865 * C127 +
            C919 * C126 + C641 * C125 + C642 * C124 + C643 * C123) *
               C153847) *
              C153767 * C774)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C7055 * C136 + C7062 + C7062 + C154182 * C152 + C7057 * C556 +
             C7063 + C7063 + C154171 * C580 + C7059 * C557 + C7064 + C7064 +
             C154146 * C581) *
                C153865 * C2846 +
            (C7128 + C7129 + C7130) * C153865 * C2847 + C7144 * C154130) *
               C154094 -
           (C8233 * C154130 + (C7753 + C7754 + C7755) * C153865 * C2847 +
            (C7059 * C2272 + C7696 + C7696 + C154146 * C2282 + C7057 * C557 +
             C7697 + C7697 + C154171 * C581 + C7055 * C556 + C7698 + C7698 +
             C154182 * C580) *
                C153865 * C2846) *
               C153847) *
              C153767 * C154162 +
          (((C7755 + C7754 + C7753) * C153865 * C2846 +
            (C7752 + C7751 + C7750) * C153865 * C2847 +
            (C8237 + C8238 + C8239) * C153865 * C154130) *
               C153847 -
           (C7145 * C154130 + (C7133 + C7132 + C7131) * C153865 * C2847 +
            (C7130 + C7129 + C7128) * C153865 * C2846) *
               C154094) *
              C153767 * C154163 +
          ((C7144 * C2846 + (C7136 + C7135 + C7134) * C153865 * C2847 +
            (C7137 + C7138 + C7139) * C153865 * C154130) *
               C154094 -
           ((C7059 * C2268 + C8226 + C8226 + C154146 * C2278 + C7057 * C561 +
             C8227 + C8227 + C154171 * C585 + C7055 * C552 + C8228 + C8228 +
             C154182 * C576) *
                C153865 * C154130 +
            (C8239 + C8238 + C8237) * C153865 * C2847 + C8233 * C2846) *
               C153847) *
              C153767 * C774)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C24168 +
             C3138 * C24169 + C3139 * C154143) *
                C154178 +
            (C24175 + C24176 + C24177) * C154159 + C24189 * C154130) *
               C154094 -
           (C25096 * C154130 + (C24642 + C24643 + C24644) * C154159 +
            (C4205 * C154143 + C4206 * C24169 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C24168) *
                C154178) *
               C153847) *
              C153767 * C154162 +
          (((C24644 + C24643 + C24642) * C154178 +
            (C24641 + C24640 + C24639) * C154159 +
            (C25093 + C25094 + C25095) * C154130) *
               C153847 -
           (C24190 * C154130 + (C24180 + C24179 + C24178) * C154159 +
            (C24177 + C24176 + C24175) * C154178) *
               C154094) *
              C153767 * C154163 +
          ((C24189 * C154178 + (C24183 + C24182 + C24181) * C154159 +
            (C24184 + C24185 + C24186) * C154130) *
               C154094 -
           (((C134 * C1916 + C1932 + C1932 + C153882 * C1926) * C154143 +
             C1125 * C24169 + C633 * C24168) *
                C154130 +
            (C25095 + C25094 + C25093) * C154159 + C25096 * C154178) *
               C153847) *
              C153767 * C774)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C28090 +
            C3138 * C28091 + C3139 * C28092 + C3142 * C28093 + C4591 * C28094) *
               C153712 * C154094 -
           ((C134 * C5559 + C5571 + C5571 + C153882 * C5565) * C28094 +
            C5574 * C28093 + C4205 * C28092 + C4206 * C28091 +
            (C134 * C556 + C601 + C601 + C153882 * C580) * C28090) *
               C153712 * C153847) *
              C153767 * C154162 +
          ((C636 * C28090 + C1122 * C28091 + C3417 * C28092 + C4207 * C28093 +
            (C134 * C5558 + C5570 + C5570 + C153882 * C5564) * C28094) *
               C153712 * C153847 -
           (C3143 * C28094 + C3141 * C28093 + C416 * C28092 + C415 * C28091 +
            C193 * C28090) *
               C153712 * C154094) *
              C153767 * C154163 +
          ((C194 * C28090 + C414 * C28091 + C417 * C28092 + C3140 * C28093 +
            C3144 * C28094) *
               C153712 * C154094 -
           ((C134 * C5557 + C5569 + C5569 + C153882 * C5563) * C28094 +
            C4208 * C28093 + C3416 * C28092 + C1123 * C28091 + C635 * C28090) *
               C153712 * C153847) *
              C153767 * C774)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C7055 * C136 + C7062 + C7062 + C154182 * C152 + C7057 * C556 +
             C7063 + C7063 + C154171 * C580 + C7059 * C557 + C7064 + C7064 +
             C154146 * C581) *
                C24168 +
            (C30715 + C30716 + C30717) * C24169 + C30728 * C154143) *
               C153712 * C154094 -
           ((C7059 * C6160 + C9916 + C9916 + C154146 * C6172 + C7057 * C3369 +
             C9917 + C9917 + C154171 * C3377 + C7055 * C1920 + C9918 + C9918 +
             C154182 * C1930) *
                C154143 +
            (C7059 * C6161 + C8535 + C8535 + C154146 * C6173 + C7057 * C1489 +
             C8534 + C8534 + C154171 * C1499 + C7055 * C1081 + C8533 + C8533 +
             C154182 * C1093) *
                C24169 +
            (C7059 * C2272 + C7696 + C7696 + C154146 * C2282 + C7057 * C557 +
             C7697 + C7697 + C154171 * C581 + C7055 * C556 + C7698 + C7698 +
             C154182 * C580) *
                C24168) *
               C153712 * C153847) *
              C153767 * C154162 +
          (((C7755 + C7754 + C7753) * C24168 +
            (C8569 + C8570 + C8571) * C24169 +
            (C7055 * C1919 + C9915 + C9915 + C154182 * C1929 + C7057 * C3370 +
             C9914 + C9914 + C154171 * C3378 + C7059 * C6158 + C9913 + C9913 +
             C154146 * C6170) *
                C154143) *
               C153712 * C153847 -
           (C30702 * C154143 + (C7439 + C7440 + C7441) * C24169 +
            (C7130 + C7129 + C7128) * C24168) *
               C153712 * C154094) *
              C153767 * C154163 +
          ((C7142 * C24168 + (C7438 + C7437 + C7436) * C24169 +
            (C7445 + C7446 + C7447) * C154143) *
               C153712 * C154094 -
           ((C7059 * C6156 + C9910 + C9910 + C154146 * C6168 + C7057 * C3371 +
             C9911 + C9911 + C154171 * C3379 + C7055 * C1918 + C9912 + C9912 +
             C154182 * C1928) *
                C154143 +
            (C8574 + C8573 + C8572) * C24169 + C8229 * C24168) *
               C153712 * C153847) *
              C153767 * C774)) /
            (p * q * std::sqrt(p + q));
    d2ee[334] +=
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C153865 * C123 +
            C199 * C124 + C200 * C125 + C201 * C126 + C202 * C127) *
               C153783 * C326 -
           (C420 * C127 + C421 * C126 + C422 * C125 + C423 * C124 +
            (C134 * C335 + C380 + C380 + C153882 * C359) * C153865 * C123) *
               C153783 * C327 +
           ((C134 * C336 + C381 + C381 + C153882 * C360) * C153865 * C123 +
            C424 * C124 + C425 * C125 + C426 * C126 + C427 * C127) *
               C153783 * C328) *
              C329 +
          ((C423 * C123 + C422 * C124 + C421 * C125 + C420 * C126 +
            (C134 * C341 + C394 + C394 + C153882 * C365) * C153865 * C127) *
               C153783 * C327 -
           (C203 * C127 + C202 * C126 + C201 * C125 + C200 * C124 +
            C199 * C123) *
               C153783 * C326 -
           ((C134 * C342 + C395 + C395 + C153882 * C366) * C153865 * C127 +
            C427 * C126 + C426 * C125 + C425 * C124 + C424 * C123) *
               C153783 * C328) *
              C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C136 + C161 + C161 + C153882 * C152) * C153865 * C123 +
           C199 * C124 + C200 * C125 + C201 * C126 + C202 * C127) *
              C153783 * C153767 * C130 -
          (C203 * C127 + C202 * C126 + C201 * C125 + C200 * C124 +
           C199 * C123) *
              C153783 * C153767 * C131 +
          (C200 * C123 + C201 * C124 + C202 * C125 + C203 * C126 +
           C204 * C127) *
              C153783 * C153767 * C132 -
          ((C134 * C143 + C180 + C180 + C153882 * C159) * C153865 * C127 +
           C204 * C126 + C203 * C125 + C202 * C124 + C201 * C123) *
              C153783 * C153767 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C154181 +
            (C134 * C335 + C380 + C380 + C153882 * C359) * C154169 +
            (C134 * C336 + C381 + C381 + C153882 * C360) * C154143) *
               C2846 +
           (C2850 + C2851 + C2852) * C2847 + C2864 * C154130) *
              C153783 * C153767 * C130 -
          (C2865 * C154130 + (C2855 + C2854 + C2853) * C2847 +
           (C2852 + C2851 + C2850) * C2846) *
              C153783 * C153767 * C131 +
          (C2864 * C2846 + (C2858 + C2857 + C2856) * C2847 +
           (C2859 + C2860 + C2861) * C154130) *
              C153783 * C153767 * C132 -
          (((C134 * C342 + C395 + C395 + C153882 * C366) * C154143 +
            C784 * C154169 + C197 * C154181) *
               C154130 +
           (C2861 + C2860 + C2859) * C2847 + C2865 * C2846) *
              C153783 * C153767 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C154181 +
             C3138 * C154169 + C3139 * C154143) *
                C2846 +
            (C2850 + C2851 + C2852) * C2847 + C2864 * C154130) *
               C153783 * C326 -
           ((C3146 + C3102 + C3103) * C154130 +
            (C3147 + C3106 + C3107) * C2847 +
            (C3142 * C154143 + C3139 * C154169 + C3138 * C154181) * C2846) *
               C153783 * C327 +
           ((C3139 * C154181 + C3142 * C154169 +
             (C134 * C3083 + C3110 + C3110 + C153882 * C3091) * C154143) *
                C2846 +
            (C3111 + C3148 + C3149) * C2847 +
            (C3115 + C3150 + C3151) * C154130) *
               C153783 * C328) *
              C329 +
          (((C3107 + C3106 + C3147) * C2846 + (C3103 + C3102 + C3146) * C2847 +
            (C413 * C154181 + C418 * C154169 + C3145 * C154143) * C154130) *
               C153783 * C327 -
           (C2865 * C154130 + (C2855 + C2854 + C2853) * C2847 +
            (C2852 + C2851 + C2850) * C2846) *
               C153783 * C326 -
           (((C134 * C3086 + C3121 + C3121 + C153882 * C3094) * C154143 +
             C3145 * C154169 + C418 * C154181) *
                C154130 +
            (C3151 + C3150 + C3115) * C2847 + (C3149 + C3148 + C3111) * C2846) *
               C153783 * C328) *
              C153754)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C7055 * C136 + C7062 + C7062 + C154182 * C152 + C7057 * C556 +
            C7063 + C7063 + C154171 * C580 + C7059 * C557 + C7064 + C7064 +
            C154146 * C581) *
               C153865 * C2846 +
           (C7128 + C7129 + C7130) * C153865 * C2847 + C7144 * C154130) *
              C153783 * C153767 * C130 -
          (C7145 * C154130 + (C7133 + C7132 + C7131) * C153865 * C2847 +
           (C7130 + C7129 + C7128) * C153865 * C2846) *
              C153783 * C153767 * C131 +
          (C7144 * C2846 + (C7136 + C7135 + C7134) * C153865 * C2847 +
           (C7137 + C7138 + C7139) * C153865 * C154130) *
              C153783 * C153767 * C132 -
          ((C7059 * C563 + C7101 + C7101 + C154146 * C587 + C7057 * C562 +
            C7102 + C7102 + C154171 * C586 + C7055 * C141 + C7103 + C7103 +
            C154182 * C157) *
               C153865 * C154130 +
           (C7139 + C7138 + C7137) * C153865 * C2847 + C7145 * C2846) *
              C153783 * C153767 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C7055 * C136 + C7062 + C7062 + C154182 * C152 + C7057 * C556 +
             C7063 + C7063 + C154171 * C580 + C7059 * C557 + C7064 + C7064 +
             C154146 * C581) *
                C153865 * C2846 +
            (C7128 + C7129 + C7130) * C153865 * C2847 + C7144 * C154130) *
               C153783 * C326 -
           ((C7436 + C7437 + C7438) * C153865 * C154130 +
            (C7439 + C7440 + C7441) * C153865 * C2847 +
            (C7059 * C1489 + C7382 + C7382 + C154146 * C1499 + C7057 * C1081 +
             C7383 + C7383 + C154171 * C1093 + C7055 * C335 + C7384 + C7384 +
             C154182 * C359) *
                C153865 * C2846) *
               C153783 * C327 +
           ((C7055 * C336 + C7385 + C7385 + C154182 * C360 + C7057 * C1920 +
             C7386 + C7386 + C154171 * C1930 + C7059 * C3369 + C7387 + C7387 +
             C154146 * C3377) *
                C153865 * C2846 +
            (C7442 + C7443 + C7444) * C153865 * C2847 +
            (C7445 + C7446 + C7447) * C153865 * C154130) *
               C153783 * C328) *
              C329 +
          (((C7441 + C7440 + C7439) * C153865 * C2846 +
            (C7438 + C7437 + C7436) * C153865 * C2847 +
            (C7055 * C332 + C7406 + C7406 + C154182 * C356 + C7057 * C1084 +
             C7407 + C7407 + C154171 * C1096 + C7059 * C1486 + C7408 + C7408 +
             C154146 * C1496) *
                C153865 * C154130) *
               C153783 * C327 -
           (C7145 * C154130 + (C7133 + C7132 + C7131) * C153865 * C2847 +
            (C7130 + C7129 + C7128) * C153865 * C2846) *
               C153783 * C326 -
           ((C7059 * C3372 + C7409 + C7409 + C154146 * C3380 + C7057 * C1917 +
             C7410 + C7410 + C154171 * C1927 + C7055 * C339 + C7411 + C7411 +
             C154182 * C363) *
                C153865 * C154130 +
            (C7447 + C7446 + C7445) * C153865 * C2847 +
            (C7444 + C7443 + C7442) * C153865 * C2846) *
               C153783 * C328) *
              C153754)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C24168 +
            C3138 * C24169 + C3139 * C154143) *
               C154178 +
           (C24175 + C24176 + C24177) * C154159 + C24189 * C154130) *
              C153783 * C153767 * C130 -
          (C24190 * C154130 + (C24180 + C24179 + C24178) * C154159 +
           (C24177 + C24176 + C24175) * C154178) *
              C153783 * C153767 * C131 +
          (C24189 * C154178 + (C24183 + C24182 + C24181) * C154159 +
           (C24184 + C24185 + C24186) * C154130) *
              C153783 * C153767 * C132 -
          (((C134 * C342 + C395 + C395 + C153882 * C366) * C154143 +
            C784 * C24169 + C197 * C24168) *
               C154130 +
           (C24186 + C24185 + C24184) * C154159 + C24190 * C154178) *
              C153783 * C153767 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C24168 +
             C3138 * C24169 + C3139 * C154143) *
                C154178 +
            (C24175 + C24176 + C24177) * C154159 + C24189 * C154130) *
               C153783 * C326 -
           ((C24409 + C24410 + C24411) * C154130 +
            (C24412 + C24413 + C24414) * C154159 +
            (C3142 * C154143 + C3139 * C24169 + C3138 * C24168) * C154178) *
               C153783 * C327 +
           ((C3139 * C24168 + C3142 * C24169 + C4591 * C154143) * C154178 +
            (C24415 + C24416 + C24417) * C154159 +
            (C24418 + C24419 + C24420) * C154130) *
               C153783 * C328) *
              C329 +
          (((C24414 + C24413 + C24412) * C154178 +
            (C24411 + C24410 + C24409) * C154159 +
            (C413 * C24168 + C418 * C24169 + C3145 * C154143) * C154130) *
               C153783 * C327 -
           (C24190 * C154130 + (C24180 + C24179 + C24178) * C154159 +
            (C24177 + C24176 + C24175) * C154178) *
               C153783 * C326 -
           (((C134 * C3086 + C3121 + C3121 + C153882 * C3094) * C154143 +
             C3145 * C24169 + C418 * C24168) *
                C154130 +
            (C24420 + C24419 + C24418) * C154159 +
            (C24417 + C24416 + C24415) * C154178) *
               C153783 * C328) *
              C153754)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C136 + C161 + C161 + C153882 * C152) * C28090 +
           C3138 * C28091 + C3139 * C28092 + C3142 * C28093 + C4591 * C28094) *
              C153712 * C153783 * C153767 * C130 -
          (C3143 * C28094 + C3141 * C28093 + C416 * C28092 + C415 * C28091 +
           C193 * C28090) *
              C153712 * C153783 * C153767 * C131 +
          (C194 * C28090 + C414 * C28091 + C417 * C28092 + C3140 * C28093 +
           C3144 * C28094) *
              C153712 * C153783 * C153767 * C132 -
          ((C134 * C3086 + C3121 + C3121 + C153882 * C3094) * C28094 +
           C3145 * C28093 + C418 * C28092 + C413 * C28091 + C195 * C28090) *
              C153712 * C153783 * C153767 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C28090 +
            C3138 * C28091 + C3139 * C28092 + C3142 * C28093 + C4591 * C28094) *
               C153712 * C153783 * C326 -
           (C28235 * C28094 + C4591 * C28093 + C3142 * C28092 + C3139 * C28091 +
            C3138 * C28090) *
               C153712 * C153783 * C327 +
           (C3139 * C28090 + C3142 * C28091 + C4591 * C28092 + C28235 * C28093 +
            (C134 * C28218 + C28227 + C28227 + C153882 * C28222) * C28094) *
               C153712 * C153783 * C328) *
              C329 +
          ((C415 * C28090 + C416 * C28091 + C3141 * C28092 + C3143 * C28093 +
            C28236 * C28094) *
               C153712 * C153783 * C327 -
           (C3143 * C28094 + C3141 * C28093 + C416 * C28092 + C415 * C28091 +
            C193 * C28090) *
               C153712 * C153783 * C326 -
           ((C134 * C28219 + C28230 + C28230 + C153882 * C28223) * C28094 +
            C28236 * C28093 + C3143 * C28092 + C3141 * C28091 + C416 * C28090) *
               C153712 * C153783 * C328) *
              C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C7055 * C136 + C7062 + C7062 + C154182 * C152 + C7057 * C556 +
            C7063 + C7063 + C154171 * C580 + C7059 * C557 + C7064 + C7064 +
            C154146 * C581) *
               C24168 +
           (C7055 * C335 + C7384 + C7384 + C154182 * C359 + C7057 * C1081 +
            C7383 + C7383 + C154171 * C1093 + C7059 * C1489 + C7382 + C7382 +
            C154146 * C1499) *
               C24169 +
           (C7055 * C336 + C7385 + C7385 + C154182 * C360 + C7057 * C1920 +
            C7386 + C7386 + C154171 * C1930 + C7059 * C3369 + C7387 + C7387 +
            C154146 * C3377) *
               C154143) *
              C153712 * C153783 * C153767 * C130 -
          ((C7444 + C7443 + C7442) * C154143 +
           (C7439 + C7440 + C7441) * C24169 +
           (C7130 + C7129 + C7128) * C24168) *
              C153712 * C153783 * C153767 * C131 +
          (C7142 * C24168 + (C7438 + C7437 + C7436) * C24169 +
           (C7445 + C7446 + C7447) * C154143) *
              C153712 * C153783 * C153767 * C132 -
          ((C7059 * C3372 + C7409 + C7409 + C154146 * C3380 + C7057 * C1917 +
            C7410 + C7410 + C154171 * C1927 + C7055 * C339 + C7411 + C7411 +
            C154182 * C363) *
               C154143 +
           (C8000 + C7999 + C7998) * C24169 + C7143 * C24168) *
              C153712 * C153783 * C153767 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C7055 * C136 + C7062 + C7062 + C154182 * C152 + C7057 * C556 +
             C7063 + C7063 + C154171 * C580 + C7059 * C557 + C7064 + C7064 +
             C154146 * C581) *
                C24168 +
            (C30715 + C30716 + C30717) * C24169 + C30728 * C154143) *
               C153712 * C153783 * C326 -
           ((C30721 + C30722 + C30723) * C154143 +
            (C30720 + C30719 + C30718) * C24169 +
            (C30717 + C30716 + C30715) * C24168) *
               C153712 * C153783 * C327 +
           (C30728 * C24168 + (C30723 + C30722 + C30721) * C24169 +
            (C7055 * C3083 + C30677 + C30677 + C154182 * C3091 + C7057 * C5559 +
             C30678 + C30678 + C154171 * C5565 + C7059 * C28358 + C30679 +
             C30679 + C154146 * C28362) *
                C154143) *
               C153712 * C153783 * C328) *
              C329 +
          (((C7441 + C7440 + C7439) * C24168 +
            (C7442 + C7443 + C7444) * C24169 +
            (C30724 + C30725 + C30726) * C154143) *
               C153712 * C153783 * C327 -
           (C30702 * C154143 + (C7439 + C7440 + C7441) * C24169 +
            (C7130 + C7129 + C7128) * C24168) *
               C153712 * C153783 * C326 -
           ((C7059 * C28359 + C30687 + C30687 + C154146 * C28363 +
             C7057 * C5558 + C30688 + C30688 + C154171 * C5564 + C7055 * C3084 +
             C30689 + C30689 + C154182 * C3092) *
                C154143 +
            (C30726 + C30725 + C30724) * C24169 + C30702 * C24168) *
               C153712 * C153783 * C328) *
              C153754)) /
            (p * q * std::sqrt(p + q));
    d2ee[335] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C154181 +
             C3138 * C154169 + C3139 * C154143) *
                C2846 +
            (C2850 + C2851 + C2852) * C2847 + C2864 * C154130) *
               C153783 * C154164 -
           (C3650 * C154130 + (C3147 + C3106 + C3107) * C2847 +
            (C3142 * C154143 + C3139 * C154169 + C3138 * C154181) * C2846) *
               C153783 * C154165 +
           ((C3139 * C154181 + C3142 * C154169 + C4591 * C154143) * C2846 +
            (C3111 + C3148 + C3149) * C2847 +
            (C3115 + C3150 + C3151) * C154130) *
               C153783 * C1629) *
              C154085 +
          (((C3107 + C3106 + C3147) * C2846 + (C3103 + C3102 + C3146) * C2847 +
            (C3647 + C3648 + C3649) * C154130) *
               C153783 * C154165 -
           (C2865 * C154130 + (C2855 + C2854 + C2853) * C2847 +
            (C2852 + C2851 + C2850) * C2846) *
               C153783 * C154164 -
           (((C134 * C3086 + C3121 + C3121 + C153882 * C3094) * C154143 +
             C3145 * C154169 + C418 * C154181) *
                C154130 +
            (C3151 + C3150 + C3115) * C2847 + (C3149 + C3148 + C3111) * C2846) *
               C153783 * C1629) *
              C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C153865 * C123 +
            C199 * C124 + C200 * C125 + C201 * C126 + C202 * C127) *
               C153783 * C154164 -
           (C420 * C127 + C421 * C126 + C422 * C125 + C423 * C124 +
            (C134 * C335 + C380 + C380 + C153882 * C359) * C153865 * C123) *
               C153783 * C154165 +
           ((C134 * C336 + C381 + C381 + C153882 * C360) * C153865 * C123 +
            C424 * C124 + C425 * C125 + C426 * C126 + C427 * C127) *
               C153783 * C1629) *
              C154085 +
          ((C423 * C123 + C422 * C124 + C421 * C125 + C420 * C126 +
            C785 * C127) *
               C153783 * C154165 -
           (C203 * C127 + C202 * C126 + C201 * C125 + C200 * C124 +
            C199 * C123) *
               C153783 * C154164 -
           ((C134 * C342 + C395 + C395 + C153882 * C366) * C153865 * C127 +
            C427 * C126 + C426 * C125 + C425 * C124 + C424 * C123) *
               C153783 * C1629) *
              C153754)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C7055 * C136 + C7062 + C7062 + C154182 * C152 + C7057 * C556 +
             C7063 + C7063 + C154171 * C580 + C7059 * C557 + C7064 + C7064 +
             C154146 * C581) *
                C153865 * C2846 +
            (C7128 + C7129 + C7130) * C153865 * C2847 + C7144 * C154130) *
               C153783 * C154164 -
           (C7994 * C154130 + (C7439 + C7440 + C7441) * C153865 * C2847 +
            (C7059 * C1489 + C7382 + C7382 + C154146 * C1499 + C7057 * C1081 +
             C7383 + C7383 + C154171 * C1093 + C7055 * C335 + C7384 + C7384 +
             C154182 * C359) *
                C153865 * C2846) *
               C153783 * C154165 +
           ((C7055 * C336 + C7385 + C7385 + C154182 * C360 + C7057 * C1920 +
             C7386 + C7386 + C154171 * C1930 + C7059 * C3369 + C7387 + C7387 +
             C154146 * C3377) *
                C153865 * C2846 +
            (C7442 + C7443 + C7444) * C153865 * C2847 +
            (C7445 + C7446 + C7447) * C153865 * C154130) *
               C153783 * C1629) *
              C154085 +
          (((C7441 + C7440 + C7439) * C153865 * C2846 +
            (C7438 + C7437 + C7436) * C153865 * C2847 +
            (C7998 + C7999 + C8000) * C153865 * C154130) *
               C153783 * C154165 -
           (C7145 * C154130 + (C7133 + C7132 + C7131) * C153865 * C2847 +
            (C7130 + C7129 + C7128) * C153865 * C2846) *
               C153783 * C154164 -
           ((C7059 * C3372 + C7409 + C7409 + C154146 * C3380 + C7057 * C1917 +
             C7410 + C7410 + C154171 * C1927 + C7055 * C339 + C7411 + C7411 +
             C154182 * C363) *
                C153865 * C154130 +
            (C7447 + C7446 + C7445) * C153865 * C2847 +
            (C7444 + C7443 + C7442) * C153865 * C2846) *
               C153783 * C1629) *
              C153754)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C24168 +
             C3138 * C24169 + C3139 * C154143) *
                C154178 +
            (C24175 + C24176 + C24177) * C154159 + C24189 * C154130) *
               C153783 * C154164 -
           (C24873 * C154130 + (C24412 + C24413 + C24414) * C154159 +
            (C3142 * C154143 + C3139 * C24169 + C3138 * C24168) * C154178) *
               C153783 * C154165 +
           ((C3139 * C24168 + C3142 * C24169 + C4591 * C154143) * C154178 +
            (C24415 + C24416 + C24417) * C154159 +
            (C24418 + C24419 + C24420) * C154130) *
               C153783 * C1629) *
              C154085 +
          (((C24414 + C24413 + C24412) * C154178 +
            (C24411 + C24410 + C24409) * C154159 +
            (C24870 + C24871 + C24872) * C154130) *
               C153783 * C154165 -
           (C24190 * C154130 + (C24180 + C24179 + C24178) * C154159 +
            (C24177 + C24176 + C24175) * C154178) *
               C153783 * C154164 -
           (((C134 * C3086 + C3121 + C3121 + C153882 * C3094) * C154143 +
             C3145 * C24169 + C418 * C24168) *
                C154130 +
            (C24420 + C24419 + C24418) * C154159 +
            (C24417 + C24416 + C24415) * C154178) *
               C153783 * C1629) *
              C153754)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C28090 +
            C3138 * C28091 + C3139 * C28092 + C3142 * C28093 + C4591 * C28094) *
               C153712 * C153783 * C154164 -
           (C28235 * C28094 + C4591 * C28093 + C3142 * C28092 + C3139 * C28091 +
            C3138 * C28090) *
               C153712 * C153783 * C154165 +
           (C3139 * C28090 + C3142 * C28091 + C4591 * C28092 + C28235 * C28093 +
            C29003 * C28094) *
               C153712 * C153783 * C1629) *
              C154085 +
          ((C415 * C28090 + C416 * C28091 + C3141 * C28092 + C3143 * C28093 +
            C28236 * C28094) *
               C153712 * C153783 * C154165 -
           (C3143 * C28094 + C3141 * C28093 + C416 * C28092 + C415 * C28091 +
            C193 * C28090) *
               C153712 * C153783 * C154164 -
           ((C134 * C28219 + C28230 + C28230 + C153882 * C28223) * C28094 +
            C28236 * C28093 + C3143 * C28092 + C3141 * C28091 + C416 * C28090) *
               C153712 * C153783 * C1629) *
              C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C7055 * C136 + C7062 + C7062 + C154182 * C152 + C7057 * C556 +
             C7063 + C7063 + C154171 * C580 + C7059 * C557 + C7064 + C7064 +
             C154146 * C581) *
                C24168 +
            (C30715 + C30716 + C30717) * C24169 + C30728 * C154143) *
               C153712 * C153783 * C154164 -
           (C32113 * C154143 + (C30720 + C30719 + C30718) * C24169 +
            (C30717 + C30716 + C30715) * C24168) *
               C153712 * C153783 * C154165 +
           (C30728 * C24168 + (C30723 + C30722 + C30721) * C24169 +
            (C32120 + C32121 + C32122) * C154143) *
               C153712 * C153783 * C1629) *
              C154085 +
          (((C7441 + C7440 + C7439) * C24168 +
            (C7442 + C7443 + C7444) * C24169 +
            (C30724 + C30725 + C30726) * C154143) *
               C153712 * C153783 * C154165 -
           (C30702 * C154143 + (C7439 + C7440 + C7441) * C24169 +
            (C7130 + C7129 + C7128) * C24168) *
               C153712 * C153783 * C154164 -
           ((C7059 * C28359 + C30687 + C30687 + C154146 * C28363 +
             C7057 * C5558 + C30688 + C30688 + C154171 * C5564 + C7055 * C3084 +
             C30689 + C30689 + C154182 * C3092) *
                C154143 +
            (C30726 + C30725 + C30724) * C24169 + C30702 * C24168) *
               C153712 * C153783 * C1629) *
              C153754)) /
            (p * q * std::sqrt(p + q));
    d2ee[336] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C154181 +
             C3138 * C154169 + C3139 * C154143) *
                C2846 +
            (C2850 + C2851 + C2852) * C2847 + C2864 * C154130) *
               C154094 -
           (C3874 * C154130 + (C3423 + C3388 + C3389) * C2847 +
            (C4205 * C154143 + C4206 * C154169 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C154181) *
                C2846) *
               C153847) *
              C154164 +
          (((C4206 * C154181 + C4205 * C154169 + C5574 * C154143) * C2846 +
            (C4186 + C4187 + C4209) * C2847 +
            (C4191 + C4192 + C4210) * C154130) *
               C153847 -
           (C3650 * C154130 + (C3147 + C3106 + C3107) * C2847 +
            (C3142 * C154143 + C3139 * C154169 + C3138 * C154181) * C2846) *
               C154094) *
              C154165 +
          (((C3139 * C154181 + C3142 * C154169 + C4591 * C154143) * C2846 +
            (C3111 + C3148 + C3149) * C2847 +
            (C3115 + C3150 + C3151) * C154130) *
               C154094 -
           (((C134 * C5557 + C5569 + C5569 + C153882 * C5563) * C154143 +
             C4208 * C154169 + C3416 * C154181) *
                C154130 +
            ((C134 * C5558 + C5570 + C5570 + C153882 * C5564) * C154143 +
             C4207 * C154169 + C3417 * C154181) *
                C2847 +
            ((C134 * C5559 + C5571 + C5571 + C153882 * C5565) * C154143 +
             C5574 * C154169 + C4205 * C154181) *
                C2846) *
               C153847) *
              C1629) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C153865 * C123 +
            C199 * C124 + C200 * C125 + C201 * C126 + C202 * C127) *
               C154094 -
           (C641 * C127 + C642 * C126 + C643 * C125 + C644 * C124 +
            (C134 * C556 + C601 + C601 + C153882 * C580) * C153865 * C123) *
               C153847) *
              C154164 +
          (((C134 * C1081 + C1100 + C1100 + C153882 * C1093) * C153865 * C123 +
            C1126 * C124 + C1127 * C125 + C1128 * C126 + C1129 * C127) *
               C153847 -
           (C420 * C127 + C421 * C126 + C422 * C125 + C423 * C124 +
            (C134 * C335 + C380 + C380 + C153882 * C359) * C153865 * C123) *
               C154094) *
              C154165 +
          (((C134 * C336 + C381 + C381 + C153882 * C360) * C153865 * C123 +
            C424 * C124 + C425 * C125 + C426 * C126 + C427 * C127) *
               C154094 -
           ((C134 * C1916 + C1932 + C1932 + C153882 * C1926) * C153865 * C127 +
            (C134 * C1917 + C1933 + C1933 + C153882 * C1927) * C153865 * C126 +
            (C134 * C1918 + C1934 + C1934 + C153882 * C1928) * C153865 * C125 +
            (C134 * C1919 + C1935 + C1935 + C153882 * C1929) * C153865 * C124 +
            (C134 * C1920 + C1936 + C1936 + C153882 * C1930) * C153865 * C123) *
               C153847) *
              C1629) *
         C153748) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C7055 * C136 + C7062 + C7062 + C154182 * C152 + C7057 * C556 +
             C7063 + C7063 + C154171 * C580 + C7059 * C557 + C7064 + C7064 +
             C154146 * C581) *
                C153865 * C2846 +
            (C7128 + C7129 + C7130) * C153865 * C2847 + C7144 * C154130) *
               C154094 -
           (C8233 * C154130 + (C7753 + C7754 + C7755) * C153865 * C2847 +
            (C7059 * C2272 + C7696 + C7696 + C154146 * C2282 + C7057 * C557 +
             C7697 + C7697 + C154171 * C581 + C7055 * C556 + C7698 + C7698 +
             C154182 * C580) *
                C153865 * C2846) *
               C153847) *
              C154164 +
          (((C7055 * C1081 + C8533 + C8533 + C154182 * C1093 + C7057 * C1489 +
             C8534 + C8534 + C154171 * C1499 + C7059 * C6161 + C8535 + C8535 +
             C154146 * C6173) *
                C153865 * C2846 +
            (C8569 + C8570 + C8571) * C153865 * C2847 +
            (C8572 + C8573 + C8574) * C153865 * C154130) *
               C153847 -
           (C7994 * C154130 + (C7439 + C7440 + C7441) * C153865 * C2847 +
            (C7059 * C1489 + C7382 + C7382 + C154146 * C1499 + C7057 * C1081 +
             C7383 + C7383 + C154171 * C1093 + C7055 * C335 + C7384 + C7384 +
             C154182 * C359) *
                C153865 * C2846) *
               C154094) *
              C154165 +
          (((C7055 * C336 + C7385 + C7385 + C154182 * C360 + C7057 * C1920 +
             C7386 + C7386 + C154171 * C1930 + C7059 * C3369 + C7387 + C7387 +
             C154146 * C3377) *
                C153865 * C2846 +
            (C7442 + C7443 + C7444) * C153865 * C2847 +
            (C7445 + C7446 + C7447) * C153865 * C154130) *
               C154094 -
           ((C7059 * C6156 + C9910 + C9910 + C154146 * C6168 + C7057 * C3371 +
             C9911 + C9911 + C154171 * C3379 + C7055 * C1918 + C9912 + C9912 +
             C154182 * C1928) *
                C153865 * C154130 +
            (C7059 * C6158 + C9913 + C9913 + C154146 * C6170 + C7057 * C3370 +
             C9914 + C9914 + C154171 * C3378 + C7055 * C1919 + C9915 + C9915 +
             C154182 * C1929) *
                C153865 * C2847 +
            (C7059 * C6160 + C9916 + C9916 + C154146 * C6172 + C7057 * C3369 +
             C9917 + C9917 + C154171 * C3377 + C7055 * C1920 + C9918 + C9918 +
             C154182 * C1930) *
                C153865 * C2846) *
               C153847) *
              C1629) *
         C153748) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C24168 +
             C3138 * C24169 + C3139 * C154143) *
                C154178 +
            (C24175 + C24176 + C24177) * C154159 + C24189 * C154130) *
               C154094 -
           (C25096 * C154130 + (C24642 + C24643 + C24644) * C154159 +
            (C4205 * C154143 + C4206 * C24169 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C24168) *
                C154178) *
               C153847) *
              C154164 +
          (((C4206 * C24168 + C4205 * C24169 + C5574 * C154143) * C154178 +
            (C25387 + C25388 + C25389) * C154159 +
            (C25390 + C25391 + C25392) * C154130) *
               C153847 -
           (C24873 * C154130 + (C24412 + C24413 + C24414) * C154159 +
            (C3142 * C154143 + C3139 * C24169 + C3138 * C24168) * C154178) *
               C154094) *
              C154165 +
          (((C3139 * C24168 + C3142 * C24169 + C4591 * C154143) * C154178 +
            (C24415 + C24416 + C24417) * C154159 +
            (C24418 + C24419 + C24420) * C154130) *
               C154094 -
           (((C134 * C5557 + C5569 + C5569 + C153882 * C5563) * C154143 +
             C4208 * C24169 + C3416 * C24168) *
                C154130 +
            ((C134 * C5558 + C5570 + C5570 + C153882 * C5564) * C154143 +
             C4207 * C24169 + C3417 * C24168) *
                C154159 +
            ((C134 * C5559 + C5571 + C5571 + C153882 * C5565) * C154143 +
             C5574 * C24169 + C4205 * C24168) *
                C154178) *
               C153847) *
              C1629) *
         C153748) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C28090 +
            C3138 * C28091 + C3139 * C28092 + C3142 * C28093 + C4591 * C28094) *
               C153712 * C154094 -
           (C28789 * C28094 + C5574 * C28093 + C4205 * C28092 + C4206 * C28091 +
            (C134 * C556 + C601 + C601 + C153882 * C580) * C28090) *
               C153712 * C153847) *
              C154164 +
          ((C4206 * C28090 + C4205 * C28091 + C5574 * C28092 + C28789 * C28093 +
            C29554 * C28094) *
               C153712 * C153847 -
           (C28235 * C28094 + C4591 * C28093 + C3142 * C28092 + C3139 * C28091 +
            C3138 * C28090) *
               C153712 * C154094) *
              C154165 +
          ((C3139 * C28090 + C3142 * C28091 + C4591 * C28092 + C28235 * C28093 +
            C29003 * C28094) *
               C153712 * C154094 -
           ((C134 * C29545 + C29551 + C29551 + C153882 * C29547) * C28094 +
            C29554 * C28093 + C28789 * C28092 + C5574 * C28091 +
            C4205 * C28090) *
               C153712 * C153847) *
              C1629) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C7055 * C136 + C7062 + C7062 + C154182 * C152 + C7057 * C556 +
             C7063 + C7063 + C154171 * C580 + C7059 * C557 + C7064 + C7064 +
             C154146 * C581) *
                C24168 +
            (C30715 + C30716 + C30717) * C24169 + C30728 * C154143) *
               C153712 * C154094 -
           (C33113 * C154143 + (C31733 + C31734 + C31735) * C24169 +
            (C7059 * C2272 + C7696 + C7696 + C154146 * C2282 + C7057 * C557 +
             C7697 + C7697 + C154171 * C581 + C7055 * C556 + C7698 + C7698 +
             C154182 * C580) *
                C24168) *
               C153712 * C153847) *
              C154164 +
          (((C31735 + C31734 + C31733) * C24168 +
            (C31732 + C31731 + C31730) * C24169 +
            (C33120 + C33121 + C33122) * C154143) *
               C153712 * C153847 -
           (C32113 * C154143 + (C30720 + C30719 + C30718) * C24169 +
            (C30717 + C30716 + C30715) * C24168) *
               C153712 * C154094) *
              C154165 +
          ((C30728 * C24168 + (C30723 + C30722 + C30721) * C24169 +
            (C32120 + C32121 + C32122) * C154143) *
               C153712 * C154094 -
           ((C7059 * C29880 + C33110 + C33110 + C154146 * C29884 +
             C7057 * C28358 + C33111 + C33111 + C154171 * C28362 +
             C7055 * C5559 + C33112 + C33112 + C154182 * C5565) *
                C154143 +
            (C33122 + C33121 + C33120) * C24169 + C33113 * C24168) *
               C153712 * C153847) *
              C1629) *
         C153748) /
            (p * q * std::sqrt(p + q));
    d2ee[337] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C136 + C161 + C161 + C153882 * C152) * C153865 * C123 +
                C199 * C124 + C200 * C125 + C201 * C126 + C202 * C127) *
                   C153783 * C1251 -
               (C420 * C127 + C421 * C126 + C422 * C125 + C423 * C124 +
                (C134 * C335 + C380 + C380 + C153882 * C359) * C153865 * C123) *
                   C153783 * C153819) *
                  C1253 +
              ((C423 * C123 + C422 * C124 + C421 * C125 + C420 * C126 +
                C785 * C127) *
                   C153783 * C153819 -
               (C203 * C127 + C202 * C126 + C201 * C125 + C200 * C124 +
                C199 * C123) *
                   C153783 * C1251) *
                  C1254 +
              ((C200 * C123 + C201 * C124 + C202 * C125 + C203 * C126 +
                C204 * C127) *
                   C153783 * C1251 -
               ((C134 * C775 + C781 + C781 + C153882 * C777) * C153865 * C127 +
                C785 * C126 + C420 * C125 + C421 * C124 + C422 * C123) *
                   C153783 * C153819) *
                  C1255) +
         std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             (((C134 * C136 + C161 + C161 + C153882 * C152) * C153865 * C123 +
               C199 * C124 + C200 * C125 + C201 * C126 + C202 * C127) *
                  C153783 * C1338 -
              (C420 * C127 + C421 * C126 + C422 * C125 + C423 * C124 +
               (C134 * C335 + C380 + C380 + C153882 * C359) * C153865 * C123) *
                  C153783 * C1339 +
              ((C134 * C336 + C381 + C381 + C153882 * C360) * C153865 * C123 +
               C424 * C124 + C425 * C125 + C426 * C126 + C427 * C127) *
                  C153783 * C1340 -
              ((C134 * C1343 + C1359 + C1359 + C153882 * C1353) * C153865 *
                   C127 +
               (C134 * C1344 + C1360 + C1360 + C153882 * C1354) * C153865 *
                   C126 +
               (C134 * C1345 + C1361 + C1361 + C153882 * C1355) * C153865 *
                   C125 +
               (C134 * C1346 + C1362 + C1362 + C153882 * C1356) * C153865 *
                   C124 +
               (C134 * C1347 + C1363 + C1363 + C153882 * C1357) * C153865 *
                   C123) *
                  C153783 * C1341) *
             C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C153865 * C123 +
            C199 * C124 + C200 * C125 + C201 * C126 + C202 * C127) *
               C549 -
           (C641 * C127 + C642 * C126 + C643 * C125 + C644 * C124 +
            (C134 * C556 + C601 + C601 + C153882 * C580) * C153865 * C123) *
               C550 +
           ((C134 * C557 + C602 + C602 + C153882 * C581) * C153865 * C123 +
            C645 * C124 + C646 * C125 + C647 * C126 + C648 * C127) *
               C551) *
              C1251 +
          (((C134 * C1081 + C1100 + C1100 + C153882 * C1093) * C153865 * C123 +
            C1126 * C124 + C1127 * C125 + C1128 * C126 + C1129 * C127) *
               C550 -
           (C420 * C127 + C421 * C126 + C422 * C125 + C423 * C124 +
            (C134 * C335 + C380 + C380 + C153882 * C359) * C153865 * C123) *
               C549 -
           ((C134 * C1485 + C1501 + C1501 + C153882 * C1495) * C153865 * C127 +
            (C134 * C1486 + C1502 + C1502 + C153882 * C1496) * C153865 * C126 +
            (C134 * C1487 + C1503 + C1503 + C153882 * C1497) * C153865 * C125 +
            (C134 * C1488 + C1504 + C1504 + C153882 * C1498) * C153865 * C124 +
            (C134 * C1489 + C1505 + C1505 + C153882 * C1499) * C153865 * C123) *
               C551) *
              C153819) *
         C153748) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C154181 +
             C3138 * C154169 + C3139 * C154143) *
                C2846 +
            (C2850 + C2851 + C2852) * C2847 + C2864 * C154130) *
               C153783 * C1251 -
           (C3650 * C154130 + (C3147 + C3106 + C3107) * C2847 +
            (C3142 * C154143 + C3139 * C154169 + C3138 * C154181) * C2846) *
               C153783 * C153819) *
              C1253 +
          (((C3107 + C3106 + C3147) * C2846 + (C3103 + C3102 + C3146) * C2847 +
            (C3647 + C3648 + C3649) * C154130) *
               C153783 * C153819 -
           (C2865 * C154130 + (C2855 + C2854 + C2853) * C2847 +
            (C2852 + C2851 + C2850) * C2846) *
               C153783 * C1251) *
              C1254 +
          ((C2864 * C2846 + (C2858 + C2857 + C2856) * C2847 +
            (C2859 + C2860 + C2861) * C154130) *
               C153783 * C1251 -
           (((C134 * C1343 + C1359 + C1359 + C153882 * C1353) * C154143 +
             C419 * C154169 + C412 * C154181) *
                C154130 +
            (C3649 + C3648 + C3647) * C2847 + C3650 * C2846) *
               C153783 * C153819) *
              C1255)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C154181 +
            C3138 * C154169 + C3139 * C154143) *
               C2846 +
           (C2850 + C2851 + C2852) * C2847 + C2864 * C154130) *
              C153783 * C1338 -
          (C3650 * C154130 + (C3147 + C3106 + C3107) * C2847 +
           (C3142 * C154143 + C3139 * C154169 + C3138 * C154181) * C2846) *
              C153783 * C1339 +
          ((C3139 * C154181 + C3142 * C154169 + C4591 * C154143) * C2846 +
           (C3111 + C3148 + C3149) * C2847 +
           (C3115 + C3150 + C3151) * C154130) *
              C153783 * C1340 -
          (((C134 * C4574 + C4586 + C4586 + C153882 * C4580) * C154143 +
            C3144 * C154169 + C3140 * C154181) *
               C154130 +
           ((C134 * C4575 + C4587 + C4587 + C153882 * C4581) * C154143 +
            C3143 * C154169 + C3141 * C154181) *
               C2847 +
           ((C134 * C4576 + C4588 + C4588 + C153882 * C4582) * C154143 +
            C4591 * C154169 + C3142 * C154181) *
               C2846) *
              C153783 * C1341) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C154181 +
             C3138 * C154169 + C3139 * C154143) *
                C2846 +
            (C2850 + C2851 + C2852) * C2847 + C2864 * C154130) *
               C549 -
           (C3874 * C154130 + (C3423 + C3388 + C3389) * C2847 +
            (C4205 * C154143 + C4206 * C154169 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C154181) *
                C2846) *
               C550 +
           (((C134 * C557 + C602 + C602 + C153882 * C581) * C154181 +
             C4830 * C154169 + C4831 * C154143) *
                C2846 +
            (C3391 + C3424 + C3425) * C2847 +
            (C3397 + C3426 + C3427) * C154130) *
               C551) *
              C1251 +
          (((C4206 * C154181 + C4205 * C154169 +
             (C134 * C4168 + C4185 + C4185 + C153882 * C4176) * C154143) *
                C2846 +
            (C4186 + C4187 + C4209) * C2847 +
            (C4191 + C4192 + C4210) * C154130) *
               C550 -
           (C3650 * C154130 + (C3147 + C3106 + C3107) * C2847 +
            (C3142 * C154143 + C3139 * C154169 + C3138 * C154181) * C2846) *
               C549 -
           (((C134 * C4809 + C4823 + C4823 + C153882 * C4815) * C154143 +
             C3421 * C154169 + C3420 * C154181) *
                C154130 +
            ((C134 * C4810 + C4824 + C4824 + C153882 * C4816) * C154143 +
             C3419 * C154169 + C3418 * C154181) *
                C2847 +
            ((C134 * C4811 + C4825 + C4825 + C153882 * C4817) * C154143 +
             C4831 * C154169 + C4830 * C154181) *
                C2846) *
               C551) *
              C153819) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C7055 * C136 + C7062 + C7062 + C154182 * C152 + C7057 * C556 +
             C7063 + C7063 + C154171 * C580 + C7059 * C557 + C7064 + C7064 +
             C154146 * C581) *
                C153865 * C2846 +
            (C7128 + C7129 + C7130) * C153865 * C2847 + C7144 * C154130) *
               C153783 * C1251 -
           (C7994 * C154130 + (C7439 + C7440 + C7441) * C153865 * C2847 +
            (C7059 * C1489 + C7382 + C7382 + C154146 * C1499 + C7057 * C1081 +
             C7383 + C7383 + C154171 * C1093 + C7055 * C335 + C7384 + C7384 +
             C154182 * C359) *
                C153865 * C2846) *
               C153783 * C153819) *
              C1253 +
          (((C7441 + C7440 + C7439) * C153865 * C2846 +
            (C7438 + C7437 + C7436) * C153865 * C2847 +
            (C7998 + C7999 + C8000) * C153865 * C154130) *
               C153783 * C153819 -
           (C7145 * C154130 + (C7133 + C7132 + C7131) * C153865 * C2847 +
            (C7130 + C7129 + C7128) * C153865 * C2846) *
               C153783 * C1251) *
              C1254 +
          ((C7144 * C2846 + (C7136 + C7135 + C7134) * C153865 * C2847 +
            (C7137 + C7138 + C7139) * C153865 * C154130) *
               C153783 * C1251 -
           ((C7059 * C1485 + C7987 + C7987 + C154146 * C1495 + C7057 * C1085 +
             C7988 + C7988 + C154171 * C1097 + C7055 * C331 + C7989 + C7989 +
             C154182 * C355) *
                C153865 * C154130 +
            (C8000 + C7999 + C7998) * C153865 * C2847 + C7994 * C2846) *
               C153783 * C153819) *
              C1255)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C7055 * C136 + C7062 + C7062 + C154182 * C152 + C7057 * C556 +
            C7063 + C7063 + C154171 * C580 + C7059 * C557 + C7064 + C7064 +
            C154146 * C581) *
               C153865 * C2846 +
           (C7128 + C7129 + C7130) * C153865 * C2847 + C7144 * C154130) *
              C153783 * C1338 -
          (C7994 * C154130 + (C7439 + C7440 + C7441) * C153865 * C2847 +
           (C7059 * C1489 + C7382 + C7382 + C154146 * C1499 + C7057 * C1081 +
            C7383 + C7383 + C154171 * C1093 + C7055 * C335 + C7384 + C7384 +
            C154182 * C359) *
               C153865 * C2846) *
              C153783 * C1339 +
          ((C7055 * C336 + C7385 + C7385 + C154182 * C360 + C7057 * C1920 +
            C7386 + C7386 + C154171 * C1930 + C7059 * C3369 + C7387 + C7387 +
            C154146 * C3377) *
               C153865 * C2846 +
           (C7442 + C7443 + C7444) * C153865 * C2847 +
           (C7445 + C7446 + C7447) * C153865 * C154130) *
              C153783 * C1340 -
          ((C7059 * C4809 + C8939 + C8939 + C154146 * C4815 + C7057 * C4170 +
            C8940 + C8940 + C154171 * C4178 + C7055 * C1345 + C8941 + C8941 +
            C154182 * C1355) *
               C153865 * C154130 +
           (C7059 * C4810 + C8942 + C8942 + C154146 * C4816 + C7057 * C4169 +
            C8943 + C8943 + C154171 * C4177 + C7055 * C1346 + C8944 + C8944 +
            C154182 * C1356) *
               C153865 * C2847 +
           (C7059 * C4811 + C8945 + C8945 + C154146 * C4817 + C7057 * C4168 +
            C8946 + C8946 + C154171 * C4176 + C7055 * C1347 + C8947 + C8947 +
            C154182 * C1357) *
               C153865 * C2846) *
              C153783 * C1341) *
         C153748) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C7055 * C136 + C7062 + C7062 + C154182 * C152 + C7057 * C556 +
             C7063 + C7063 + C154171 * C580 + C7059 * C557 + C7064 + C7064 +
             C154146 * C581) *
                C153865 * C2846 +
            (C7128 + C7129 + C7130) * C153865 * C2847 + C7144 * C154130) *
               C549 -
           (C8233 * C154130 + (C7753 + C7754 + C7755) * C153865 * C2847 +
            (C7059 * C2272 + C7696 + C7696 + C154146 * C2282 + C7057 * C557 +
             C7697 + C7697 + C154171 * C581 + C7055 * C556 + C7698 + C7698 +
             C154182 * C580) *
                C153865 * C2846) *
               C550 +
           ((C7055 * C557 + C7699 + C7699 + C154182 * C581 + C7057 * C2272 +
             C7700 + C7700 + C154171 * C2282 + C7059 * C7665 + C7701 + C7701 +
             C154146 * C7673) *
                C153865 * C2846 +
            (C7756 + C7757 + C7758) * C153865 * C2847 +
            (C7759 + C7760 + C7761) * C153865 * C154130) *
               C551) *
              C1251 +
          (((C7055 * C1081 + C8533 + C8533 + C154182 * C1093 + C7057 * C1489 +
             C8534 + C8534 + C154171 * C1499 + C7059 * C6161 + C8535 + C8535 +
             C154146 * C6173) *
                C153865 * C2846 +
            (C8569 + C8570 + C8571) * C153865 * C2847 +
            (C8572 + C8573 + C8574) * C153865 * C154130) *
               C550 -
           (C7994 * C154130 + (C7439 + C7440 + C7441) * C153865 * C2847 +
            (C7059 * C1489 + C7382 + C7382 + C154146 * C1499 + C7057 * C1081 +
             C7383 + C7383 + C154171 * C1093 + C7055 * C335 + C7384 + C7384 +
             C154182 * C359) *
                C153865 * C2846) *
               C549 -
           ((C7059 * C9165 + C9175 + C9175 + C154146 * C9171 + C7057 * C6157 +
             C9176 + C9176 + C154171 * C6169 + C7055 * C1487 + C9177 + C9177 +
             C154182 * C1497) *
                C153865 * C154130 +
            (C7059 * C9166 + C9178 + C9178 + C154146 * C9172 + C7057 * C6159 +
             C9179 + C9179 + C154171 * C6171 + C7055 * C1488 + C9180 + C9180 +
             C154182 * C1498) *
                C153865 * C2847 +
            (C7059 * C9167 + C9181 + C9181 + C154146 * C9173 + C7057 * C6161 +
             C9182 + C9182 + C154171 * C6173 + C7055 * C1489 + C9183 + C9183 +
             C154182 * C1499) *
                C153865 * C2846) *
               C551) *
              C153819) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C24168 +
             C3138 * C24169 + C3139 * C154143) *
                C154178 +
            (C24175 + C24176 + C24177) * C154159 + C24189 * C154130) *
               C153783 * C1251 -
           (C24873 * C154130 + (C24412 + C24413 + C24414) * C154159 +
            (C3142 * C154143 + C3139 * C24169 + C3138 * C24168) * C154178) *
               C153783 * C153819) *
              C1253 +
          (((C24414 + C24413 + C24412) * C154178 +
            (C24411 + C24410 + C24409) * C154159 +
            (C24870 + C24871 + C24872) * C154130) *
               C153783 * C153819 -
           (C24190 * C154130 + (C24180 + C24179 + C24178) * C154159 +
            (C24177 + C24176 + C24175) * C154178) *
               C153783 * C1251) *
              C1254 +
          ((C24189 * C154178 + (C24183 + C24182 + C24181) * C154159 +
            (C24184 + C24185 + C24186) * C154130) *
               C153783 * C1251 -
           (((C134 * C1343 + C1359 + C1359 + C153882 * C1353) * C154143 +
             C419 * C24169 + C412 * C24168) *
                C154130 +
            (C24872 + C24871 + C24870) * C154159 + C24873 * C154178) *
               C153783 * C153819) *
              C1255)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C24168 +
            C3138 * C24169 + C3139 * C154143) *
               C154178 +
           (C24175 + C24176 + C24177) * C154159 + C24189 * C154130) *
              C153783 * C1338 -
          (C24873 * C154130 + (C24412 + C24413 + C24414) * C154159 +
           (C3142 * C154143 + C3139 * C24169 + C3138 * C24168) * C154178) *
              C153783 * C1339 +
          ((C3139 * C24168 + C3142 * C24169 + C4591 * C154143) * C154178 +
           (C24415 + C24416 + C24417) * C154159 +
           (C24418 + C24419 + C24420) * C154130) *
              C153783 * C1340 -
          (((C134 * C4574 + C4586 + C4586 + C153882 * C4580) * C154143 +
            C3144 * C24169 + C3140 * C24168) *
               C154130 +
           ((C134 * C4575 + C4587 + C4587 + C153882 * C4581) * C154143 +
            C3143 * C24169 + C3141 * C24168) *
               C154159 +
           ((C134 * C4576 + C4588 + C4588 + C153882 * C4582) * C154143 +
            C4591 * C24169 + C3142 * C24168) *
               C154178) *
              C153783 * C1341) *
         C153748) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C24168 +
             C3138 * C24169 + C3139 * C154143) *
                C154178 +
            (C24175 + C24176 + C24177) * C154159 + C24189 * C154130) *
               C549 -
           (C25096 * C154130 + (C24642 + C24643 + C24644) * C154159 +
            (C4205 * C154143 + C4206 * C24169 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C24168) *
                C154178) *
               C550 +
           (((C134 * C557 + C602 + C602 + C153882 * C581) * C24168 +
             C4830 * C24169 + C4831 * C154143) *
                C154178 +
            (C24645 + C24646 + C24647) * C154159 +
            (C24648 + C24649 + C24650) * C154130) *
               C551) *
              C1251 +
          (((C4206 * C24168 + C4205 * C24169 + C5574 * C154143) * C154178 +
            (C25387 + C25388 + C25389) * C154159 +
            (C25390 + C25391 + C25392) * C154130) *
               C550 -
           (C24873 * C154130 + (C24412 + C24413 + C24414) * C154159 +
            (C3142 * C154143 + C3139 * C24169 + C3138 * C24168) * C154178) *
               C549 -
           (((C134 * C4809 + C4823 + C4823 + C153882 * C4815) * C154143 +
             C3421 * C24169 + C3420 * C24168) *
                C154130 +
            ((C134 * C4810 + C4824 + C4824 + C153882 * C4816) * C154143 +
             C3419 * C24169 + C3418 * C24168) *
                C154159 +
            ((C134 * C4811 + C4825 + C4825 + C153882 * C4817) * C154143 +
             C4831 * C24169 + C4830 * C24168) *
                C154178) *
               C551) *
              C153819) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C28090 +
            C3138 * C28091 + C3139 * C28092 + C3142 * C28093 + C4591 * C28094) *
               C153712 * C153783 * C1251 -
           (C28235 * C28094 + C4591 * C28093 + C3142 * C28092 + C3139 * C28091 +
            C3138 * C28090) *
               C153712 * C153783 * C153819) *
              C1253 +
          ((C415 * C28090 + C416 * C28091 + C3141 * C28092 + C3143 * C28093 +
            C28236 * C28094) *
               C153712 * C153783 * C153819 -
           (C3143 * C28094 + C3141 * C28093 + C416 * C28092 + C415 * C28091 +
            C193 * C28090) *
               C153712 * C153783 * C1251) *
              C1254 +
          ((C194 * C28090 + C414 * C28091 + C417 * C28092 + C3140 * C28093 +
            C3144 * C28094) *
               C153712 * C153783 * C1251 -
           ((C134 * C4574 + C4586 + C4586 + C153882 * C4580) * C28094 +
            C3144 * C28093 + C3140 * C28092 + C417 * C28091 + C414 * C28090) *
               C153712 * C153783 * C153819) *
              C1255)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C136 + C161 + C161 + C153882 * C152) * C28090 +
           C3138 * C28091 + C3139 * C28092 + C3142 * C28093 + C4591 * C28094) *
              C153712 * C153783 * C1338 -
          (C28235 * C28094 + C4591 * C28093 + C3142 * C28092 + C3139 * C28091 +
           C3138 * C28090) *
              C153712 * C153783 * C1339 +
          (C3139 * C28090 + C3142 * C28091 + C4591 * C28092 + C28235 * C28093 +
           C29003 * C28094) *
              C153712 * C153783 * C1340 -
          ((C134 * C28994 + C29000 + C29000 + C153882 * C28996) * C28094 +
           C29003 * C28093 + C28235 * C28092 + C4591 * C28091 +
           C3142 * C28090) *
              C153712 * C153783 * C1341) *
         C153748) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C28090 +
            C3138 * C28091 + C3139 * C28092 + C3142 * C28093 + C4591 * C28094) *
               C153712 * C549 -
           (C28789 * C28094 + C5574 * C28093 + C4205 * C28092 + C4206 * C28091 +
            (C134 * C556 + C601 + C601 + C153882 * C580) * C28090) *
               C153712 * C550 +
           ((C134 * C557 + C602 + C602 + C153882 * C581) * C28090 +
            C4830 * C28091 + C4831 * C28092 + C29138 * C28093 +
            C29139 * C28094) *
               C153712 * C551) *
              C1251 +
          ((C4206 * C28090 + C4205 * C28091 + C5574 * C28092 + C28789 * C28093 +
            (C134 * C28772 + C28781 + C28781 + C153882 * C28776) * C28094) *
               C153712 * C550 -
           (C28235 * C28094 + C4591 * C28093 + C3142 * C28092 + C3139 * C28091 +
            C3138 * C28090) *
               C153712 * C549 -
           ((C134 * C29125 + C29133 + C29133 + C153882 * C29127) * C28094 +
            C29139 * C28093 + C29138 * C28092 + C4831 * C28091 +
            C4830 * C28090) *
               C153712 * C551) *
              C153819) *
         C153748) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C7055 * C136 + C7062 + C7062 + C154182 * C152 + C7057 * C556 +
             C7063 + C7063 + C154171 * C580 + C7059 * C557 + C7064 + C7064 +
             C154146 * C581) *
                C24168 +
            (C30715 + C30716 + C30717) * C24169 + C30728 * C154143) *
               C153712 * C153783 * C1251 -
           ((C30721 + C30722 + C30723) * C154143 +
            (C30720 + C30719 + C30718) * C24169 +
            (C30717 + C30716 + C30715) * C24168) *
               C153712 * C153783 * C153819) *
              C1253 +
          (((C7441 + C7440 + C7439) * C24168 +
            (C7442 + C7443 + C7444) * C24169 +
            (C30724 + C30725 + C30726) * C154143) *
               C153712 * C153783 * C153819 -
           (C30702 * C154143 + (C7439 + C7440 + C7441) * C24169 +
            (C7130 + C7129 + C7128) * C24168) *
               C153712 * C153783 * C1251) *
              C1254 +
          ((C7142 * C24168 + (C7438 + C7437 + C7436) * C24169 +
            (C7445 + C7446 + C7447) * C154143) *
               C153712 * C153783 * C1251 -
           ((C7059 * C4809 + C8939 + C8939 + C154146 * C4815 + C7057 * C4170 +
             C8940 + C8940 + C154171 * C4178 + C7055 * C1345 + C8941 + C8941 +
             C154182 * C1355) *
                C154143 +
            (C7447 + C7446 + C7445) * C24169 + C7990 * C24168) *
               C153712 * C153783 * C153819) *
              C1255)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C7055 * C136 + C7062 + C7062 + C154182 * C152 + C7057 * C556 +
            C7063 + C7063 + C154171 * C580 + C7059 * C557 + C7064 + C7064 +
            C154146 * C581) *
               C24168 +
           (C30715 + C30716 + C30717) * C24169 + C30728 * C154143) *
              C153712 * C153783 * C1338 -
          (C32113 * C154143 + (C30720 + C30719 + C30718) * C24169 +
           (C30717 + C30716 + C30715) * C24168) *
              C153712 * C153783 * C1339 +
          (C30728 * C24168 + (C30723 + C30722 + C30721) * C24169 +
           (C32120 + C32121 + C32122) * C154143) *
              C153712 * C153783 * C1340 -
          ((C7059 * C29125 + C32110 + C32110 + C154146 * C29127 +
            C7057 * C28772 + C32111 + C32111 + C154171 * C28776 +
            C7055 * C4576 + C32112 + C32112 + C154182 * C4582) *
               C154143 +
           (C32122 + C32121 + C32120) * C24169 + C32113 * C24168) *
              C153712 * C153783 * C1341) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C7055 * C136 + C7062 + C7062 + C154182 * C152 + C7057 * C556 +
             C7063 + C7063 + C154171 * C580 + C7059 * C557 + C7064 + C7064 +
             C154146 * C581) *
                C24168 +
            (C30715 + C30716 + C30717) * C24169 + C30728 * C154143) *
               C153712 * C549 -
           ((C31730 + C31731 + C31732) * C154143 +
            (C31733 + C31734 + C31735) * C24169 +
            (C7059 * C2272 + C7696 + C7696 + C154146 * C2282 + C7057 * C557 +
             C7697 + C7697 + C154171 * C581 + C7055 * C556 + C7698 + C7698 +
             C154182 * C580) *
                C24168) *
               C153712 * C550 +
           ((C7055 * C557 + C7699 + C7699 + C154182 * C581 + C7057 * C2272 +
             C7700 + C7700 + C154171 * C2282 + C7059 * C7665 + C7701 + C7701 +
             C154146 * C7673) *
                C24168 +
            (C32371 + C32372 + C32373) * C24169 +
            (C32374 + C32375 + C32376) * C154143) *
               C153712 * C551) *
              C1251 +
          (((C31735 + C31734 + C31733) * C24168 +
            (C31732 + C31731 + C31730) * C24169 +
            (C7055 * C4168 + C31700 + C31700 + C154182 * C4176 + C7057 * C4811 +
             C31701 + C31701 + C154171 * C4817 + C7059 * C29881 + C31702 +
             C31702 + C154146 * C29885) *
                C154143) *
               C153712 * C550 -
           (C32113 * C154143 + (C30720 + C30719 + C30718) * C24169 +
            (C30717 + C30716 + C30715) * C24168) *
               C153712 * C549 -
           ((C7059 * C32340 + C32356 + C32356 + C154146 * C32342 +
             C7057 * C29881 + C32357 + C32357 + C154171 * C29885 +
             C7055 * C4811 + C32358 + C32358 + C154182 * C4817) *
                C154143 +
            (C32376 + C32375 + C32374) * C24169 +
            (C32373 + C32372 + C32371) * C24168) *
               C153712 * C551) *
              C153819) *
         C153748) /
            (p * q * std::sqrt(p + q));
    d2ee[338] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C153882 * C152) * C154181 +
              C3138 * C154169 + C3139 * C154143) *
                 C2846 +
             (C2850 + C2851 + C2852) * C2847 + C2864 * C154130) *
                C154094 -
            (C3874 * C154130 + (C3423 + C3388 + C3389) * C2847 +
             (C4205 * C154143 + C4206 * C154169 +
              (C134 * C556 + C601 + C601 + C153882 * C580) * C154181) *
                 C2846) *
                C153847) *
               C1251 +
           (((C4206 * C154181 + C4205 * C154169 +
              (C134 * C4168 + C4185 + C4185 + C153882 * C4176) * C154143) *
                 C2846 +
             (C4186 + C4187 + C4209) * C2847 +
             (C4191 + C4192 + C4210) * C154130) *
                C153847 -
            (C3650 * C154130 + (C3147 + C3106 + C3107) * C2847 +
             (C3142 * C154143 + C3139 * C154169 + C3138 * C154181) * C2846) *
                C154094) *
               C153819) *
              C154085 +
          ((((C3389 + C3388 + C3423) * C2846 + (C3385 + C3384 + C3422) * C2847 +
             (C3870 + C3871 + C3878) * C154130) *
                C153847 -
            (C2865 * C154130 + (C2855 + C2854 + C2853) * C2847 +
             (C2852 + C2851 + C2850) * C2846) *
                C154094) *
               C1251 +
           (((C3107 + C3106 + C3147) * C2846 + (C3103 + C3102 + C3146) * C2847 +
             (C3647 + C3648 + C3649) * C154130) *
                C154094 -
            (((C134 * C4171 + C4196 + C4196 + C153882 * C4179) * C154143 +
              C3877 * C154169 + C1124 * C154181) *
                 C154130 +
             (C4210 + C4192 + C4191) * C2847 +
             (C4209 + C4187 + C4186) * C2846) *
                C153847) *
               C153819) *
              C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C153865 * C123 +
             C199 * C124 + C200 * C125 + C201 * C126 + C202 * C127) *
                C154094 -
            (C641 * C127 + C642 * C126 + C643 * C125 + C644 * C124 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C153865 * C123) *
                C153847) *
               C1251 +
           (((C134 * C1081 + C1100 + C1100 + C153882 * C1093) * C153865 * C123 +
             C1126 * C124 + C1127 * C125 + C1128 * C126 + C1129 * C127) *
                C153847 -
            (C420 * C127 + C421 * C126 + C422 * C125 + C423 * C124 +
             (C134 * C335 + C380 + C380 + C153882 * C359) * C153865 * C123) *
                C154094) *
               C153819) *
              C154085 +
          (((C644 * C123 + C643 * C124 + C642 * C125 + C641 * C126 +
             C919 * C127) *
                C153847 -
            (C203 * C127 + C202 * C126 + C201 * C125 + C200 * C124 +
             C199 * C123) *
                C154094) *
               C1251 +
           ((C423 * C123 + C422 * C124 + C421 * C125 + C420 * C126 +
             C785 * C127) *
                C154094 -
            ((C134 * C1086 + C1113 + C1113 + C153882 * C1098) * C153865 * C127 +
             C1129 * C126 + C1128 * C125 + C1127 * C124 + C1126 * C123) *
                C153847) *
               C153819) *
              C153754)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C7055 * C136 + C7062 + C7062 + C154182 * C152 + C7057 * C556 +
              C7063 + C7063 + C154171 * C580 + C7059 * C557 + C7064 + C7064 +
              C154146 * C581) *
                 C153865 * C2846 +
             (C7128 + C7129 + C7130) * C153865 * C2847 + C7144 * C154130) *
                C154094 -
            (C8233 * C154130 + (C7753 + C7754 + C7755) * C153865 * C2847 +
             (C7059 * C2272 + C7696 + C7696 + C154146 * C2282 + C7057 * C557 +
              C7697 + C7697 + C154171 * C581 + C7055 * C556 + C7698 + C7698 +
              C154182 * C580) *
                 C153865 * C2846) *
                C153847) *
               C1251 +
           (((C7055 * C1081 + C8533 + C8533 + C154182 * C1093 + C7057 * C1489 +
              C8534 + C8534 + C154171 * C1499 + C7059 * C6161 + C8535 + C8535 +
              C154146 * C6173) *
                 C153865 * C2846 +
             (C8569 + C8570 + C8571) * C153865 * C2847 +
             (C8572 + C8573 + C8574) * C153865 * C154130) *
                C153847 -
            (C7994 * C154130 + (C7439 + C7440 + C7441) * C153865 * C2847 +
             (C7059 * C1489 + C7382 + C7382 + C154146 * C1499 + C7057 * C1081 +
              C7383 + C7383 + C154171 * C1093 + C7055 * C335 + C7384 + C7384 +
              C154182 * C359) *
                 C153865 * C2846) *
                C154094) *
               C153819) *
              C154085 +
          ((((C7755 + C7754 + C7753) * C153865 * C2846 +
             (C7752 + C7751 + C7750) * C153865 * C2847 +
             (C8237 + C8238 + C8239) * C153865 * C154130) *
                C153847 -
            (C7145 * C154130 + (C7133 + C7132 + C7131) * C153865 * C2847 +
             (C7130 + C7129 + C7128) * C153865 * C2846) *
                C154094) *
               C1251 +
           (((C7441 + C7440 + C7439) * C153865 * C2846 +
             (C7438 + C7437 + C7436) * C153865 * C2847 +
             (C7998 + C7999 + C8000) * C153865 * C154130) *
                C154094 -
            ((C7059 * C8529 + C8554 + C8554 + C154146 * C8531 + C7057 * C1486 +
              C8555 + C8555 + C154171 * C1496 + C7055 * C1084 + C8556 + C8556 +
              C154182 * C1096) *
                 C153865 * C154130 +
             (C8574 + C8573 + C8572) * C153865 * C2847 +
             (C8571 + C8570 + C8569) * C153865 * C2846) *
                C153847) *
               C153819) *
              C153754)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C153882 * C152) * C24168 +
              C3138 * C24169 + C3139 * C154143) *
                 C154178 +
             (C24175 + C24176 + C24177) * C154159 + C24189 * C154130) *
                C154094 -
            (C25096 * C154130 + (C24642 + C24643 + C24644) * C154159 +
             (C4205 * C154143 + C4206 * C24169 +
              (C134 * C556 + C601 + C601 + C153882 * C580) * C24168) *
                 C154178) *
                C153847) *
               C1251 +
           (((C4206 * C24168 + C4205 * C24169 + C5574 * C154143) * C154178 +
             (C25387 + C25388 + C25389) * C154159 +
             (C25390 + C25391 + C25392) * C154130) *
                C153847 -
            (C24873 * C154130 + (C24412 + C24413 + C24414) * C154159 +
             (C3142 * C154143 + C3139 * C24169 + C3138 * C24168) * C154178) *
                C154094) *
               C153819) *
              C154085 +
          ((((C24644 + C24643 + C24642) * C154178 +
             (C24641 + C24640 + C24639) * C154159 +
             (C25093 + C25094 + C25095) * C154130) *
                C153847 -
            (C24190 * C154130 + (C24180 + C24179 + C24178) * C154159 +
             (C24177 + C24176 + C24175) * C154178) *
                C154094) *
               C1251 +
           (((C24414 + C24413 + C24412) * C154178 +
             (C24411 + C24410 + C24409) * C154159 +
             (C24870 + C24871 + C24872) * C154130) *
                C154094 -
            (((C134 * C4171 + C4196 + C4196 + C153882 * C4179) * C154143 +
              C3877 * C24169 + C1124 * C24168) *
                 C154130 +
             (C25392 + C25391 + C25390) * C154159 +
             (C25389 + C25388 + C25387) * C154178) *
                C153847) *
               C153819) *
              C153754)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C28090 +
             C3138 * C28091 + C3139 * C28092 + C3142 * C28093 +
             C4591 * C28094) *
                C153712 * C154094 -
            (C28789 * C28094 + C5574 * C28093 + C4205 * C28092 +
             C4206 * C28091 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C28090) *
                C153712 * C153847) *
               C1251 +
           ((C4206 * C28090 + C4205 * C28091 + C5574 * C28092 +
             C28789 * C28093 +
             (C134 * C28772 + C28781 + C28781 + C153882 * C28776) * C28094) *
                C153712 * C153847 -
            (C28235 * C28094 + C4591 * C28093 + C3142 * C28092 +
             C3139 * C28091 + C3138 * C28090) *
                C153712 * C154094) *
               C153819) *
              C154085 +
          (((C636 * C28090 + C1122 * C28091 + C3417 * C28092 + C4207 * C28093 +
             C28790 * C28094) *
                C153712 * C153847 -
            (C3143 * C28094 + C3141 * C28093 + C416 * C28092 + C415 * C28091 +
             C193 * C28090) *
                C153712 * C154094) *
               C1251 +
           ((C415 * C28090 + C416 * C28091 + C3141 * C28092 + C3143 * C28093 +
             C28236 * C28094) *
                C153712 * C154094 -
            ((C134 * C28773 + C28784 + C28784 + C153882 * C28777) * C28094 +
             C28790 * C28093 + C4207 * C28092 + C3417 * C28091 +
             C1122 * C28090) *
                C153712 * C153847) *
               C153819) *
              C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C7055 * C136 + C7062 + C7062 + C154182 * C152 + C7057 * C556 +
              C7063 + C7063 + C154171 * C580 + C7059 * C557 + C7064 + C7064 +
              C154146 * C581) *
                 C24168 +
             (C30715 + C30716 + C30717) * C24169 + C30728 * C154143) *
                C153712 * C154094 -
            ((C31730 + C31731 + C31732) * C154143 +
             (C31733 + C31734 + C31735) * C24169 +
             (C7059 * C2272 + C7696 + C7696 + C154146 * C2282 + C7057 * C557 +
              C7697 + C7697 + C154171 * C581 + C7055 * C556 + C7698 + C7698 +
              C154182 * C580) *
                 C24168) *
                C153712 * C153847) *
               C1251 +
           (((C31735 + C31734 + C31733) * C24168 +
             (C31732 + C31731 + C31730) * C24169 +
             (C7055 * C4168 + C31700 + C31700 + C154182 * C4176 +
              C7057 * C4811 + C31701 + C31701 + C154171 * C4817 +
              C7059 * C29881 + C31702 + C31702 + C154146 * C29885) *
                 C154143) *
                C153712 * C153847 -
            (C32113 * C154143 + (C30720 + C30719 + C30718) * C24169 +
             (C30717 + C30716 + C30715) * C24168) *
                C153712 * C154094) *
               C153819) *
              C154085 +
          ((((C7755 + C7754 + C7753) * C24168 +
             (C8569 + C8570 + C8571) * C24169 +
             (C31736 + C31737 + C31738) * C154143) *
                C153712 * C153847 -
            (C30702 * C154143 + (C7439 + C7440 + C7441) * C24169 +
             (C7130 + C7129 + C7128) * C24168) *
                C153712 * C154094) *
               C1251 +
           (((C7441 + C7440 + C7439) * C24168 +
             (C7442 + C7443 + C7444) * C24169 +
             (C30724 + C30725 + C30726) * C154143) *
                C153712 * C154094 -
            ((C7059 * C31684 + C31709 + C31709 + C154146 * C31686 +
              C7057 * C4810 + C31710 + C31710 + C154171 * C4816 +
              C7055 * C4169 + C31711 + C31711 + C154182 * C4177) *
                 C154143 +
             (C31738 + C31737 + C31736) * C24169 +
             (C8571 + C8570 + C8569) * C24168) *
                C153712 * C153847) *
               C153819) *
              C153754)) /
            (p * q * std::sqrt(p + q));
    d2ee[339] +=
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C136 + C161 + C161 + C153882 * C152) * C153865 * C123 +
           C199 * C124 + C200 * C125 + C201 * C126 + C202 * C127) *
              C153783 * C1338 -
          (C420 * C127 + C421 * C126 + C422 * C125 + C423 * C124 +
           (C134 * C335 + C380 + C380 + C153882 * C359) * C153865 * C123) *
              C153783 * C1339 +
          ((C134 * C336 + C381 + C381 + C153882 * C360) * C153865 * C123 +
           C424 * C124 + C425 * C125 + C426 * C126 + C427 * C127) *
              C153783 * C1340 -
          ((C134 * C1343 + C1359 + C1359 + C153882 * C1353) * C153865 * C127 +
           (C134 * C1344 + C1360 + C1360 + C153882 * C1354) * C153865 * C126 +
           (C134 * C1345 + C1361 + C1361 + C153882 * C1355) * C153865 * C125 +
           (C134 * C1346 + C1362 + C1362 + C153882 * C1356) * C153865 * C124 +
           (C134 * C1347 + C1363 + C1363 + C153882 * C1357) * C153865 * C123) *
              C153783 * C1341) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C153865 * C123 +
            C199 * C124 + C200 * C125 + C201 * C126 + C202 * C127) *
               C153783 * C1251 -
           (C420 * C127 + C421 * C126 + C422 * C125 + C423 * C124 +
            (C134 * C335 + C380 + C380 + C153882 * C359) * C153865 * C123) *
               C153783 * C153819) *
              C1253 +
          ((C423 * C123 + C422 * C124 + C421 * C125 + C420 * C126 +
            C785 * C127) *
               C153783 * C153819 -
           (C203 * C127 + C202 * C126 + C201 * C125 + C200 * C124 +
            C199 * C123) *
               C153783 * C1251) *
              C1254 +
          ((C200 * C123 + C201 * C124 + C202 * C125 + C203 * C126 +
            C204 * C127) *
               C153783 * C1251 -
           ((C134 * C775 + C781 + C781 + C153882 * C777) * C153865 * C127 +
            C785 * C126 + C420 * C125 + C421 * C124 + C422 * C123) *
               C153783 * C153819) *
              C1255)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C154181 +
             C3138 * C154169 + C3139 * C154143) *
                C2846 +
            (C2850 + C2851 + C2852) * C2847 + C2864 * C154130) *
               C153783 * C1251 -
           (C3650 * C154130 + (C3147 + C3106 + C3107) * C2847 +
            (C3142 * C154143 + C3139 * C154169 + C3138 * C154181) * C2846) *
               C153783 * C153819) *
              C1253 +
          (((C3107 + C3106 + C3147) * C2846 + (C3103 + C3102 + C3146) * C2847 +
            (C3647 + C3648 + C3649) * C154130) *
               C153783 * C153819 -
           (C2865 * C154130 + (C2855 + C2854 + C2853) * C2847 +
            (C2852 + C2851 + C2850) * C2846) *
               C153783 * C1251) *
              C1254 +
          ((C2864 * C2846 + (C2858 + C2857 + C2856) * C2847 +
            (C2859 + C2860 + C2861) * C154130) *
               C153783 * C1251 -
           (((C134 * C1343 + C1359 + C1359 + C153882 * C1353) * C154143 +
             C419 * C154169 + C412 * C154181) *
                C154130 +
            (C3649 + C3648 + C3647) * C2847 + C3650 * C2846) *
               C153783 * C153819) *
              C1255)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C154181 +
            C3138 * C154169 + C3139 * C154143) *
               C2846 +
           (C2850 + C2851 + C2852) * C2847 + C2864 * C154130) *
              C153783 * C1338 -
          (C3650 * C154130 + (C3147 + C3106 + C3107) * C2847 +
           (C3142 * C154143 + C3139 * C154169 + C3138 * C154181) * C2846) *
              C153783 * C1339 +
          ((C3139 * C154181 + C3142 * C154169 + C4591 * C154143) * C2846 +
           (C3111 + C3148 + C3149) * C2847 +
           (C3115 + C3150 + C3151) * C154130) *
              C153783 * C1340 -
          (((C134 * C4574 + C4586 + C4586 + C153882 * C4580) * C154143 +
            C3144 * C154169 + C3140 * C154181) *
               C154130 +
           ((C134 * C4575 + C4587 + C4587 + C153882 * C4581) * C154143 +
            C3143 * C154169 + C3141 * C154181) *
               C2847 +
           ((C134 * C4576 + C4588 + C4588 + C153882 * C4582) * C154143 +
            C4591 * C154169 + C3142 * C154181) *
               C2846) *
              C153783 * C1341) *
         C153748) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C7055 * C136 + C7062 + C7062 + C154182 * C152 + C7057 * C556 +
             C7063 + C7063 + C154171 * C580 + C7059 * C557 + C7064 + C7064 +
             C154146 * C581) *
                C153865 * C2846 +
            (C7128 + C7129 + C7130) * C153865 * C2847 + C7144 * C154130) *
               C153783 * C1251 -
           (C7994 * C154130 + (C7439 + C7440 + C7441) * C153865 * C2847 +
            (C7059 * C1489 + C7382 + C7382 + C154146 * C1499 + C7057 * C1081 +
             C7383 + C7383 + C154171 * C1093 + C7055 * C335 + C7384 + C7384 +
             C154182 * C359) *
                C153865 * C2846) *
               C153783 * C153819) *
              C1253 +
          (((C7441 + C7440 + C7439) * C153865 * C2846 +
            (C7438 + C7437 + C7436) * C153865 * C2847 +
            (C7998 + C7999 + C8000) * C153865 * C154130) *
               C153783 * C153819 -
           (C7145 * C154130 + (C7133 + C7132 + C7131) * C153865 * C2847 +
            (C7130 + C7129 + C7128) * C153865 * C2846) *
               C153783 * C1251) *
              C1254 +
          ((C7144 * C2846 + (C7136 + C7135 + C7134) * C153865 * C2847 +
            (C7137 + C7138 + C7139) * C153865 * C154130) *
               C153783 * C1251 -
           ((C7059 * C1485 + C7987 + C7987 + C154146 * C1495 + C7057 * C1085 +
             C7988 + C7988 + C154171 * C1097 + C7055 * C331 + C7989 + C7989 +
             C154182 * C355) *
                C153865 * C154130 +
            (C8000 + C7999 + C7998) * C153865 * C2847 + C7994 * C2846) *
               C153783 * C153819) *
              C1255)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C7055 * C136 + C7062 + C7062 + C154182 * C152 + C7057 * C556 +
            C7063 + C7063 + C154171 * C580 + C7059 * C557 + C7064 + C7064 +
            C154146 * C581) *
               C153865 * C2846 +
           (C7128 + C7129 + C7130) * C153865 * C2847 + C7144 * C154130) *
              C153783 * C1338 -
          (C7994 * C154130 + (C7439 + C7440 + C7441) * C153865 * C2847 +
           (C7059 * C1489 + C7382 + C7382 + C154146 * C1499 + C7057 * C1081 +
            C7383 + C7383 + C154171 * C1093 + C7055 * C335 + C7384 + C7384 +
            C154182 * C359) *
               C153865 * C2846) *
              C153783 * C1339 +
          ((C7055 * C336 + C7385 + C7385 + C154182 * C360 + C7057 * C1920 +
            C7386 + C7386 + C154171 * C1930 + C7059 * C3369 + C7387 + C7387 +
            C154146 * C3377) *
               C153865 * C2846 +
           (C7442 + C7443 + C7444) * C153865 * C2847 +
           (C7445 + C7446 + C7447) * C153865 * C154130) *
              C153783 * C1340 -
          ((C7059 * C4809 + C8939 + C8939 + C154146 * C4815 + C7057 * C4170 +
            C8940 + C8940 + C154171 * C4178 + C7055 * C1345 + C8941 + C8941 +
            C154182 * C1355) *
               C153865 * C154130 +
           (C7059 * C4810 + C8942 + C8942 + C154146 * C4816 + C7057 * C4169 +
            C8943 + C8943 + C154171 * C4177 + C7055 * C1346 + C8944 + C8944 +
            C154182 * C1356) *
               C153865 * C2847 +
           (C7059 * C4811 + C8945 + C8945 + C154146 * C4817 + C7057 * C4168 +
            C8946 + C8946 + C154171 * C4176 + C7055 * C1347 + C8947 + C8947 +
            C154182 * C1357) *
               C153865 * C2846) *
              C153783 * C1341) *
         C153748) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C24168 +
             C3138 * C24169 + C3139 * C154143) *
                C154178 +
            (C24175 + C24176 + C24177) * C154159 + C24189 * C154130) *
               C153783 * C1251 -
           (C24873 * C154130 + (C24412 + C24413 + C24414) * C154159 +
            (C3142 * C154143 + C3139 * C24169 + C3138 * C24168) * C154178) *
               C153783 * C153819) *
              C1253 +
          (((C24414 + C24413 + C24412) * C154178 +
            (C24411 + C24410 + C24409) * C154159 +
            (C24870 + C24871 + C24872) * C154130) *
               C153783 * C153819 -
           (C24190 * C154130 + (C24180 + C24179 + C24178) * C154159 +
            (C24177 + C24176 + C24175) * C154178) *
               C153783 * C1251) *
              C1254 +
          ((C24189 * C154178 + (C24183 + C24182 + C24181) * C154159 +
            (C24184 + C24185 + C24186) * C154130) *
               C153783 * C1251 -
           (((C134 * C1343 + C1359 + C1359 + C153882 * C1353) * C154143 +
             C419 * C24169 + C412 * C24168) *
                C154130 +
            (C24872 + C24871 + C24870) * C154159 + C24873 * C154178) *
               C153783 * C153819) *
              C1255)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C24168 +
            C3138 * C24169 + C3139 * C154143) *
               C154178 +
           (C24175 + C24176 + C24177) * C154159 + C24189 * C154130) *
              C153783 * C1338 -
          (C24873 * C154130 + (C24412 + C24413 + C24414) * C154159 +
           (C3142 * C154143 + C3139 * C24169 + C3138 * C24168) * C154178) *
              C153783 * C1339 +
          ((C3139 * C24168 + C3142 * C24169 + C4591 * C154143) * C154178 +
           (C24415 + C24416 + C24417) * C154159 +
           (C24418 + C24419 + C24420) * C154130) *
              C153783 * C1340 -
          (((C134 * C4574 + C4586 + C4586 + C153882 * C4580) * C154143 +
            C3144 * C24169 + C3140 * C24168) *
               C154130 +
           ((C134 * C4575 + C4587 + C4587 + C153882 * C4581) * C154143 +
            C3143 * C24169 + C3141 * C24168) *
               C154159 +
           ((C134 * C4576 + C4588 + C4588 + C153882 * C4582) * C154143 +
            C4591 * C24169 + C3142 * C24168) *
               C154178) *
              C153783 * C1341) *
         C153748) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C28090 +
            C3138 * C28091 + C3139 * C28092 + C3142 * C28093 + C4591 * C28094) *
               C153712 * C153783 * C1251 -
           (C28235 * C28094 + C4591 * C28093 + C3142 * C28092 + C3139 * C28091 +
            C3138 * C28090) *
               C153712 * C153783 * C153819) *
              C1253 +
          ((C415 * C28090 + C416 * C28091 + C3141 * C28092 + C3143 * C28093 +
            C28236 * C28094) *
               C153712 * C153783 * C153819 -
           (C3143 * C28094 + C3141 * C28093 + C416 * C28092 + C415 * C28091 +
            C193 * C28090) *
               C153712 * C153783 * C1251) *
              C1254 +
          ((C194 * C28090 + C414 * C28091 + C417 * C28092 + C3140 * C28093 +
            C3144 * C28094) *
               C153712 * C153783 * C1251 -
           ((C134 * C4574 + C4586 + C4586 + C153882 * C4580) * C28094 +
            C3144 * C28093 + C3140 * C28092 + C417 * C28091 + C414 * C28090) *
               C153712 * C153783 * C153819) *
              C1255)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C136 + C161 + C161 + C153882 * C152) * C28090 +
           C3138 * C28091 + C3139 * C28092 + C3142 * C28093 + C4591 * C28094) *
              C153712 * C153783 * C1338 -
          (C28235 * C28094 + C4591 * C28093 + C3142 * C28092 + C3139 * C28091 +
           C3138 * C28090) *
              C153712 * C153783 * C1339 +
          (C3139 * C28090 + C3142 * C28091 + C4591 * C28092 + C28235 * C28093 +
           C29003 * C28094) *
              C153712 * C153783 * C1340 -
          ((C134 * C28994 + C29000 + C29000 + C153882 * C28996) * C28094 +
           C29003 * C28093 + C28235 * C28092 + C4591 * C28091 +
           C3142 * C28090) *
              C153712 * C153783 * C1341) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C7055 * C136 + C7062 + C7062 + C154182 * C152 + C7057 * C556 +
             C7063 + C7063 + C154171 * C580 + C7059 * C557 + C7064 + C7064 +
             C154146 * C581) *
                C24168 +
            (C30715 + C30716 + C30717) * C24169 + C30728 * C154143) *
               C153712 * C153783 * C1251 -
           ((C30721 + C30722 + C30723) * C154143 +
            (C30720 + C30719 + C30718) * C24169 +
            (C30717 + C30716 + C30715) * C24168) *
               C153712 * C153783 * C153819) *
              C1253 +
          (((C7441 + C7440 + C7439) * C24168 +
            (C7442 + C7443 + C7444) * C24169 +
            (C30724 + C30725 + C30726) * C154143) *
               C153712 * C153783 * C153819 -
           (C30702 * C154143 + (C7439 + C7440 + C7441) * C24169 +
            (C7130 + C7129 + C7128) * C24168) *
               C153712 * C153783 * C1251) *
              C1254 +
          ((C7142 * C24168 + (C7438 + C7437 + C7436) * C24169 +
            (C7445 + C7446 + C7447) * C154143) *
               C153712 * C153783 * C1251 -
           ((C7059 * C4809 + C8939 + C8939 + C154146 * C4815 + C7057 * C4170 +
             C8940 + C8940 + C154171 * C4178 + C7055 * C1345 + C8941 + C8941 +
             C154182 * C1355) *
                C154143 +
            (C7447 + C7446 + C7445) * C24169 + C7990 * C24168) *
               C153712 * C153783 * C153819) *
              C1255)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C7055 * C136 + C7062 + C7062 + C154182 * C152 + C7057 * C556 +
            C7063 + C7063 + C154171 * C580 + C7059 * C557 + C7064 + C7064 +
            C154146 * C581) *
               C24168 +
           (C30715 + C30716 + C30717) * C24169 + C30728 * C154143) *
              C153712 * C153783 * C1338 -
          (C32113 * C154143 + (C30720 + C30719 + C30718) * C24169 +
           (C30717 + C30716 + C30715) * C24168) *
              C153712 * C153783 * C1339 +
          (C30728 * C24168 + (C30723 + C30722 + C30721) * C24169 +
           (C32120 + C32121 + C32122) * C154143) *
              C153712 * C153783 * C1340 -
          ((C7059 * C29125 + C32110 + C32110 + C154146 * C29127 +
            C7057 * C28772 + C32111 + C32111 + C154171 * C28776 +
            C7055 * C4576 + C32112 + C32112 + C154182 * C4582) *
               C154143 +
           (C32122 + C32121 + C32120) * C24169 + C32113 * C24168) *
              C153712 * C153783 * C1341) *
         C153748) /
            (p * q * std::sqrt(p + q));
    d2ee[340] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C153882 * C152) * C154181 +
              C3138 * C154169 + C3139 * C154143) *
                 C2846 +
             (C2850 + C2851 + C2852) * C2847 + C2864 * C154130) *
                C2058 -
            (C3874 * C154130 + (C3423 + C3388 + C3389) * C2847 +
             (C4205 * C154143 + C4206 * C154169 +
              (C134 * C556 + C601 + C601 + C153882 * C580) * C154181) *
                 C2846) *
                C153847) *
               C154093 +
           (((C4206 * C154181 + C4205 * C154169 + C5574 * C154143) * C2846 +
             (C4186 + C4187 + C4209) * C2847 +
             (C4191 + C4192 + C4210) * C154130) *
                C153847 -
            (C3650 * C154130 + (C3147 + C3106 + C3107) * C2847 +
             (C3142 * C154143 + C3139 * C154169 + C3138 * C154181) * C2846) *
                C2058) *
               C153819) *
              C154085 +
          ((((C3389 + C3388 + C3423) * C2846 + (C3385 + C3384 + C3422) * C2847 +
             (C3870 + C3871 + C3878) * C154130) *
                C153847 -
            (C2865 * C154130 + (C2855 + C2854 + C2853) * C2847 +
             (C2852 + C2851 + C2850) * C2846) *
                C2058) *
               C154093 +
           (((C3107 + C3106 + C3147) * C2846 + (C3103 + C3102 + C3146) * C2847 +
             (C3647 + C3648 + C3649) * C154130) *
                C2058 -
            (((C134 * C4171 + C4196 + C4196 + C153882 * C4179) * C154143 +
              C3877 * C154169 + C1124 * C154181) *
                 C154130 +
             (C4210 + C4192 + C4191) * C2847 +
             (C4209 + C4187 + C4186) * C2846) *
                C153847) *
               C153819) *
              C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C153865 * C123 +
             C199 * C124 + C200 * C125 + C201 * C126 + C202 * C127) *
                C2058 -
            (C641 * C127 + C642 * C126 + C643 * C125 + C644 * C124 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C153865 * C123) *
                C153847) *
               C154093 +
           (((C134 * C1081 + C1100 + C1100 + C153882 * C1093) * C153865 * C123 +
             C1126 * C124 + C1127 * C125 + C1128 * C126 + C1129 * C127) *
                C153847 -
            (C420 * C127 + C421 * C126 + C422 * C125 + C423 * C124 +
             (C134 * C335 + C380 + C380 + C153882 * C359) * C153865 * C123) *
                C2058) *
               C153819) *
              C154085 +
          (((C644 * C123 + C643 * C124 + C642 * C125 + C641 * C126 +
             C919 * C127) *
                C153847 -
            (C203 * C127 + C202 * C126 + C201 * C125 + C200 * C124 +
             C199 * C123) *
                C2058) *
               C154093 +
           ((C423 * C123 + C422 * C124 + C421 * C125 + C420 * C126 +
             C785 * C127) *
                C2058 -
            ((C134 * C1086 + C1113 + C1113 + C153882 * C1098) * C153865 * C127 +
             C1129 * C126 + C1128 * C125 + C1127 * C124 + C1126 * C123) *
                C153847) *
               C153819) *
              C153754)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C7055 * C136 + C7062 + C7062 + C154182 * C152 + C7057 * C556 +
              C7063 + C7063 + C154171 * C580 + C7059 * C557 + C7064 + C7064 +
              C154146 * C581) *
                 C153865 * C2846 +
             (C7128 + C7129 + C7130) * C153865 * C2847 + C7144 * C154130) *
                C2058 -
            (C8233 * C154130 + (C7753 + C7754 + C7755) * C153865 * C2847 +
             (C7059 * C2272 + C7696 + C7696 + C154146 * C2282 + C7057 * C557 +
              C7697 + C7697 + C154171 * C581 + C7055 * C556 + C7698 + C7698 +
              C154182 * C580) *
                 C153865 * C2846) *
                C153847) *
               C154093 +
           (((C7055 * C1081 + C8533 + C8533 + C154182 * C1093 + C7057 * C1489 +
              C8534 + C8534 + C154171 * C1499 + C7059 * C6161 + C8535 + C8535 +
              C154146 * C6173) *
                 C153865 * C2846 +
             (C8569 + C8570 + C8571) * C153865 * C2847 +
             (C8572 + C8573 + C8574) * C153865 * C154130) *
                C153847 -
            (C7994 * C154130 + (C7439 + C7440 + C7441) * C153865 * C2847 +
             (C7059 * C1489 + C7382 + C7382 + C154146 * C1499 + C7057 * C1081 +
              C7383 + C7383 + C154171 * C1093 + C7055 * C335 + C7384 + C7384 +
              C154182 * C359) *
                 C153865 * C2846) *
                C2058) *
               C153819) *
              C154085 +
          ((((C7755 + C7754 + C7753) * C153865 * C2846 +
             (C7752 + C7751 + C7750) * C153865 * C2847 +
             (C8237 + C8238 + C8239) * C153865 * C154130) *
                C153847 -
            (C7145 * C154130 + (C7133 + C7132 + C7131) * C153865 * C2847 +
             (C7130 + C7129 + C7128) * C153865 * C2846) *
                C2058) *
               C154093 +
           (((C7441 + C7440 + C7439) * C153865 * C2846 +
             (C7438 + C7437 + C7436) * C153865 * C2847 +
             (C7998 + C7999 + C8000) * C153865 * C154130) *
                C2058 -
            ((C7059 * C8529 + C8554 + C8554 + C154146 * C8531 + C7057 * C1486 +
              C8555 + C8555 + C154171 * C1496 + C7055 * C1084 + C8556 + C8556 +
              C154182 * C1096) *
                 C153865 * C154130 +
             (C8574 + C8573 + C8572) * C153865 * C2847 +
             (C8571 + C8570 + C8569) * C153865 * C2846) *
                C153847) *
               C153819) *
              C153754)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C153882 * C152) * C24168 +
              C3138 * C24169 + C3139 * C154143) *
                 C154178 +
             (C24175 + C24176 + C24177) * C154159 + C24189 * C154130) *
                C2058 -
            (C25096 * C154130 + (C24642 + C24643 + C24644) * C154159 +
             (C4205 * C154143 + C4206 * C24169 +
              (C134 * C556 + C601 + C601 + C153882 * C580) * C24168) *
                 C154178) *
                C153847) *
               C154093 +
           (((C4206 * C24168 + C4205 * C24169 + C5574 * C154143) * C154178 +
             (C25387 + C25388 + C25389) * C154159 +
             (C25390 + C25391 + C25392) * C154130) *
                C153847 -
            (C24873 * C154130 + (C24412 + C24413 + C24414) * C154159 +
             (C3142 * C154143 + C3139 * C24169 + C3138 * C24168) * C154178) *
                C2058) *
               C153819) *
              C154085 +
          ((((C24644 + C24643 + C24642) * C154178 +
             (C24641 + C24640 + C24639) * C154159 +
             (C25093 + C25094 + C25095) * C154130) *
                C153847 -
            (C24190 * C154130 + (C24180 + C24179 + C24178) * C154159 +
             (C24177 + C24176 + C24175) * C154178) *
                C2058) *
               C154093 +
           (((C24414 + C24413 + C24412) * C154178 +
             (C24411 + C24410 + C24409) * C154159 +
             (C24870 + C24871 + C24872) * C154130) *
                C2058 -
            (((C134 * C4171 + C4196 + C4196 + C153882 * C4179) * C154143 +
              C3877 * C24169 + C1124 * C24168) *
                 C154130 +
             (C25392 + C25391 + C25390) * C154159 +
             (C25389 + C25388 + C25387) * C154178) *
                C153847) *
               C153819) *
              C153754)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C28090 +
             C3138 * C28091 + C3139 * C28092 + C3142 * C28093 +
             C4591 * C28094) *
                C153712 * C2058 -
            (C28789 * C28094 + C5574 * C28093 + C4205 * C28092 +
             C4206 * C28091 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C28090) *
                C153712 * C153847) *
               C154093 +
           ((C4206 * C28090 + C4205 * C28091 + C5574 * C28092 +
             C28789 * C28093 + C29554 * C28094) *
                C153712 * C153847 -
            (C28235 * C28094 + C4591 * C28093 + C3142 * C28092 +
             C3139 * C28091 + C3138 * C28090) *
                C153712 * C2058) *
               C153819) *
              C154085 +
          (((C636 * C28090 + C1122 * C28091 + C3417 * C28092 + C4207 * C28093 +
             C28790 * C28094) *
                C153712 * C153847 -
            (C3143 * C28094 + C3141 * C28093 + C416 * C28092 + C415 * C28091 +
             C193 * C28090) *
                C153712 * C2058) *
               C154093 +
           ((C415 * C28090 + C416 * C28091 + C3141 * C28092 + C3143 * C28093 +
             C28236 * C28094) *
                C153712 * C2058 -
            ((C134 * C28773 + C28784 + C28784 + C153882 * C28777) * C28094 +
             C28790 * C28093 + C4207 * C28092 + C3417 * C28091 +
             C1122 * C28090) *
                C153712 * C153847) *
               C153819) *
              C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C7055 * C136 + C7062 + C7062 + C154182 * C152 + C7057 * C556 +
              C7063 + C7063 + C154171 * C580 + C7059 * C557 + C7064 + C7064 +
              C154146 * C581) *
                 C24168 +
             (C30715 + C30716 + C30717) * C24169 + C30728 * C154143) *
                C153712 * C2058 -
            (C33113 * C154143 + (C31733 + C31734 + C31735) * C24169 +
             (C7059 * C2272 + C7696 + C7696 + C154146 * C2282 + C7057 * C557 +
              C7697 + C7697 + C154171 * C581 + C7055 * C556 + C7698 + C7698 +
              C154182 * C580) *
                 C24168) *
                C153712 * C153847) *
               C154093 +
           (((C31735 + C31734 + C31733) * C24168 +
             (C31732 + C31731 + C31730) * C24169 +
             (C33120 + C33121 + C33122) * C154143) *
                C153712 * C153847 -
            (C32113 * C154143 + (C30720 + C30719 + C30718) * C24169 +
             (C30717 + C30716 + C30715) * C24168) *
                C153712 * C2058) *
               C153819) *
              C154085 +
          ((((C7755 + C7754 + C7753) * C24168 +
             (C8569 + C8570 + C8571) * C24169 +
             (C31736 + C31737 + C31738) * C154143) *
                C153712 * C153847 -
            (C30702 * C154143 + (C7439 + C7440 + C7441) * C24169 +
             (C7130 + C7129 + C7128) * C24168) *
                C153712 * C2058) *
               C154093 +
           (((C7441 + C7440 + C7439) * C24168 +
             (C7442 + C7443 + C7444) * C24169 +
             (C30724 + C30725 + C30726) * C154143) *
                C153712 * C2058 -
            ((C7059 * C31684 + C31709 + C31709 + C154146 * C31686 +
              C7057 * C4810 + C31710 + C31710 + C154171 * C4816 +
              C7055 * C4169 + C31711 + C31711 + C154182 * C4177) *
                 C154143 +
             (C31738 + C31737 + C31736) * C24169 +
             (C8571 + C8570 + C8569) * C24168) *
                C153712 * C153847) *
               C153819) *
              C153754)) /
            (p * q * std::sqrt(p + q));
    d2ee[341] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C154181 +
             C3138 * C154169 + C3139 * C154143) *
                C2846 +
            (C2850 + C2851 + C2852) * C2847 + C2864 * C154130) *
               C154166 -
           (C3874 * C154130 + (C3423 + C3388 + C3389) * C2847 +
            (C4205 * C154143 + C4206 * C154169 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C154181) *
                C2846) *
               C154167 +
           (((C134 * C557 + C602 + C602 + C153882 * C581) * C154181 +
             C4830 * C154169 + C4831 * C154143) *
                C2846 +
            (C3391 + C3424 + C3425) * C2847 +
            (C3397 + C3426 + C3427) * C154130) *
               C2574) *
              C154093 +
          (((C4206 * C154181 + C4205 * C154169 + C5574 * C154143) * C2846 +
            (C4186 + C4187 + C4209) * C2847 +
            (C4191 + C4192 + C4210) * C154130) *
               C154167 -
           (C3650 * C154130 + (C3147 + C3106 + C3107) * C2847 +
            (C3142 * C154143 + C3139 * C154169 + C3138 * C154181) * C2846) *
               C154166 -
           (((C134 * C4809 + C4823 + C4823 + C153882 * C4815) * C154143 +
             C3421 * C154169 + C3420 * C154181) *
                C154130 +
            ((C134 * C4810 + C4824 + C4824 + C153882 * C4816) * C154143 +
             C3419 * C154169 + C3418 * C154181) *
                C2847 +
            ((C134 * C4811 + C4825 + C4825 + C153882 * C4817) * C154143 +
             C4831 * C154169 + C4830 * C154181) *
                C2846) *
               C2574) *
              C153819) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C153865 * C123 +
            C199 * C124 + C200 * C125 + C201 * C126 + C202 * C127) *
               C154166 -
           (C641 * C127 + C642 * C126 + C643 * C125 + C644 * C124 +
            (C134 * C556 + C601 + C601 + C153882 * C580) * C153865 * C123) *
               C154167 +
           ((C134 * C557 + C602 + C602 + C153882 * C581) * C153865 * C123 +
            C645 * C124 + C646 * C125 + C647 * C126 + C648 * C127) *
               C2574) *
              C154093 +
          (((C134 * C1081 + C1100 + C1100 + C153882 * C1093) * C153865 * C123 +
            C1126 * C124 + C1127 * C125 + C1128 * C126 + C1129 * C127) *
               C154167 -
           (C420 * C127 + C421 * C126 + C422 * C125 + C423 * C124 +
            (C134 * C335 + C380 + C380 + C153882 * C359) * C153865 * C123) *
               C154166 -
           ((C134 * C1485 + C1501 + C1501 + C153882 * C1495) * C153865 * C127 +
            (C134 * C1486 + C1502 + C1502 + C153882 * C1496) * C153865 * C126 +
            (C134 * C1487 + C1503 + C1503 + C153882 * C1497) * C153865 * C125 +
            (C134 * C1488 + C1504 + C1504 + C153882 * C1498) * C153865 * C124 +
            (C134 * C1489 + C1505 + C1505 + C153882 * C1499) * C153865 * C123) *
               C2574) *
              C153819) *
         C153748) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C7055 * C136 + C7062 + C7062 + C154182 * C152 + C7057 * C556 +
             C7063 + C7063 + C154171 * C580 + C7059 * C557 + C7064 + C7064 +
             C154146 * C581) *
                C153865 * C2846 +
            (C7128 + C7129 + C7130) * C153865 * C2847 + C7144 * C154130) *
               C154166 -
           (C8233 * C154130 + (C7753 + C7754 + C7755) * C153865 * C2847 +
            (C7059 * C2272 + C7696 + C7696 + C154146 * C2282 + C7057 * C557 +
             C7697 + C7697 + C154171 * C581 + C7055 * C556 + C7698 + C7698 +
             C154182 * C580) *
                C153865 * C2846) *
               C154167 +
           ((C7055 * C557 + C7699 + C7699 + C154182 * C581 + C7057 * C2272 +
             C7700 + C7700 + C154171 * C2282 + C7059 * C7665 + C7701 + C7701 +
             C154146 * C7673) *
                C153865 * C2846 +
            (C7756 + C7757 + C7758) * C153865 * C2847 +
            (C7759 + C7760 + C7761) * C153865 * C154130) *
               C2574) *
              C154093 +
          (((C7055 * C1081 + C8533 + C8533 + C154182 * C1093 + C7057 * C1489 +
             C8534 + C8534 + C154171 * C1499 + C7059 * C6161 + C8535 + C8535 +
             C154146 * C6173) *
                C153865 * C2846 +
            (C8569 + C8570 + C8571) * C153865 * C2847 +
            (C8572 + C8573 + C8574) * C153865 * C154130) *
               C154167 -
           (C7994 * C154130 + (C7439 + C7440 + C7441) * C153865 * C2847 +
            (C7059 * C1489 + C7382 + C7382 + C154146 * C1499 + C7057 * C1081 +
             C7383 + C7383 + C154171 * C1093 + C7055 * C335 + C7384 + C7384 +
             C154182 * C359) *
                C153865 * C2846) *
               C154166 -
           ((C7059 * C9165 + C9175 + C9175 + C154146 * C9171 + C7057 * C6157 +
             C9176 + C9176 + C154171 * C6169 + C7055 * C1487 + C9177 + C9177 +
             C154182 * C1497) *
                C153865 * C154130 +
            (C7059 * C9166 + C9178 + C9178 + C154146 * C9172 + C7057 * C6159 +
             C9179 + C9179 + C154171 * C6171 + C7055 * C1488 + C9180 + C9180 +
             C154182 * C1498) *
                C153865 * C2847 +
            (C7059 * C9167 + C9181 + C9181 + C154146 * C9173 + C7057 * C6161 +
             C9182 + C9182 + C154171 * C6173 + C7055 * C1489 + C9183 + C9183 +
             C154182 * C1499) *
                C153865 * C2846) *
               C2574) *
              C153819) *
         C153748) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C24168 +
             C3138 * C24169 + C3139 * C154143) *
                C154178 +
            (C24175 + C24176 + C24177) * C154159 + C24189 * C154130) *
               C154166 -
           (C25096 * C154130 + (C24642 + C24643 + C24644) * C154159 +
            (C4205 * C154143 + C4206 * C24169 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C24168) *
                C154178) *
               C154167 +
           (((C134 * C557 + C602 + C602 + C153882 * C581) * C24168 +
             C4830 * C24169 + C4831 * C154143) *
                C154178 +
            (C24645 + C24646 + C24647) * C154159 +
            (C24648 + C24649 + C24650) * C154130) *
               C2574) *
              C154093 +
          (((C4206 * C24168 + C4205 * C24169 + C5574 * C154143) * C154178 +
            (C25387 + C25388 + C25389) * C154159 +
            (C25390 + C25391 + C25392) * C154130) *
               C154167 -
           (C24873 * C154130 + (C24412 + C24413 + C24414) * C154159 +
            (C3142 * C154143 + C3139 * C24169 + C3138 * C24168) * C154178) *
               C154166 -
           (((C134 * C4809 + C4823 + C4823 + C153882 * C4815) * C154143 +
             C3421 * C24169 + C3420 * C24168) *
                C154130 +
            ((C134 * C4810 + C4824 + C4824 + C153882 * C4816) * C154143 +
             C3419 * C24169 + C3418 * C24168) *
                C154159 +
            ((C134 * C4811 + C4825 + C4825 + C153882 * C4817) * C154143 +
             C4831 * C24169 + C4830 * C24168) *
                C154178) *
               C2574) *
              C153819) *
         C153748) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C28090 +
            C3138 * C28091 + C3139 * C28092 + C3142 * C28093 + C4591 * C28094) *
               C153712 * C154166 -
           (C28789 * C28094 + C5574 * C28093 + C4205 * C28092 + C4206 * C28091 +
            (C134 * C556 + C601 + C601 + C153882 * C580) * C28090) *
               C153712 * C154167 +
           ((C134 * C557 + C602 + C602 + C153882 * C581) * C28090 +
            C4830 * C28091 + C4831 * C28092 + C29138 * C28093 +
            C29139 * C28094) *
               C153712 * C2574) *
              C154093 +
          ((C4206 * C28090 + C4205 * C28091 + C5574 * C28092 + C28789 * C28093 +
            C29554 * C28094) *
               C153712 * C154167 -
           (C28235 * C28094 + C4591 * C28093 + C3142 * C28092 + C3139 * C28091 +
            C3138 * C28090) *
               C153712 * C154166 -
           ((C134 * C29125 + C29133 + C29133 + C153882 * C29127) * C28094 +
            C29139 * C28093 + C29138 * C28092 + C4831 * C28091 +
            C4830 * C28090) *
               C153712 * C2574) *
              C153819) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C7055 * C136 + C7062 + C7062 + C154182 * C152 + C7057 * C556 +
             C7063 + C7063 + C154171 * C580 + C7059 * C557 + C7064 + C7064 +
             C154146 * C581) *
                C24168 +
            (C30715 + C30716 + C30717) * C24169 + C30728 * C154143) *
               C153712 * C154166 -
           (C33113 * C154143 + (C31733 + C31734 + C31735) * C24169 +
            (C7059 * C2272 + C7696 + C7696 + C154146 * C2282 + C7057 * C557 +
             C7697 + C7697 + C154171 * C581 + C7055 * C556 + C7698 + C7698 +
             C154182 * C580) *
                C24168) *
               C153712 * C154167 +
           ((C7055 * C557 + C7699 + C7699 + C154182 * C581 + C7057 * C2272 +
             C7700 + C7700 + C154171 * C2282 + C7059 * C7665 + C7701 + C7701 +
             C154146 * C7673) *
                C24168 +
            (C32371 + C32372 + C32373) * C24169 +
            (C32374 + C32375 + C32376) * C154143) *
               C153712 * C2574) *
              C154093 +
          (((C31735 + C31734 + C31733) * C24168 +
            (C31732 + C31731 + C31730) * C24169 +
            (C33120 + C33121 + C33122) * C154143) *
               C153712 * C154167 -
           (C32113 * C154143 + (C30720 + C30719 + C30718) * C24169 +
            (C30717 + C30716 + C30715) * C24168) *
               C153712 * C154166 -
           ((C7059 * C32340 + C32356 + C32356 + C154146 * C32342 +
             C7057 * C29881 + C32357 + C32357 + C154171 * C29885 +
             C7055 * C4811 + C32358 + C32358 + C154182 * C4817) *
                C154143 +
            (C32376 + C32375 + C32374) * C24169 +
            (C32373 + C32372 + C32371) * C24168) *
               C153712 * C2574) *
              C153819) *
         C153748) /
            (p * q * std::sqrt(p + q));
    d2ee[342] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C136 + C161 + C161 + C153882 * C152) * C153865 * C123 +
                C199 * C124 + C200 * C125 + C201 * C126 + C202 * C127) *
                   C2058 -
               (C641 * C127 + C642 * C126 + C643 * C125 + C644 * C124 +
                (C134 * C556 + C601 + C601 + C153882 * C580) * C153865 * C123) *
                   C153847) *
                  C153767 * C1253 +
              ((C644 * C123 + C643 * C124 + C642 * C125 + C641 * C126 +
                C919 * C127) *
                   C153847 -
               (C203 * C127 + C202 * C126 + C201 * C125 + C200 * C124 +
                C199 * C123) *
                   C2058) *
                  C153767 * C1254 +
              ((C200 * C123 + C201 * C124 + C202 * C125 + C203 * C126 +
                C204 * C127) *
                   C2058 -
               ((C134 * C909 + C915 + C915 + C153882 * C911) * C153865 * C127 +
                C919 * C126 + C641 * C125 + C642 * C124 + C643 * C123) *
                   C153847) *
                  C153767 * C1255) +
         std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C136 + C161 + C161 + C153882 * C152) * C153865 * C123 +
                C199 * C124 + C200 * C125 + C201 * C126 + C202 * C127) *
                   C2058 -
               (C641 * C127 + C642 * C126 + C643 * C125 + C644 * C124 +
                (C134 * C556 + C601 + C601 + C153882 * C580) * C153865 * C123) *
                   C153847) *
                  C326 +
              (((C134 * C1081 + C1100 + C1100 + C153882 * C1093) * C153865 *
                    C123 +
                C1126 * C124 + C1127 * C125 + C1128 * C126 + C1129 * C127) *
                   C153847 -
               (C420 * C127 + C421 * C126 + C422 * C125 + C423 * C124 +
                (C134 * C335 + C380 + C380 + C153882 * C359) * C153865 * C123) *
                   C2058) *
                  C327 +
              (((C134 * C336 + C381 + C381 + C153882 * C360) * C153865 * C123 +
                C424 * C124 + C425 * C125 + C426 * C126 + C427 * C127) *
                   C2058 -
               ((C134 * C1916 + C1932 + C1932 + C153882 * C1926) * C153865 *
                    C127 +
                (C134 * C1917 + C1933 + C1933 + C153882 * C1927) * C153865 *
                    C126 +
                (C134 * C1918 + C1934 + C1934 + C153882 * C1928) * C153865 *
                    C125 +
                (C134 * C1919 + C1935 + C1935 + C153882 * C1929) * C153865 *
                    C124 +
                (C134 * C1920 + C1936 + C1936 + C153882 * C1930) * C153865 *
                    C123) *
                   C153847) *
                  C328) *
             C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C136 + C161 + C161 + C153882 * C152) * C153865 * C123 +
           C199 * C124 + C200 * C125 + C201 * C126 + C202 * C127) *
              C2264 -
          (C641 * C127 + C642 * C126 + C643 * C125 + C644 * C124 +
           (C134 * C556 + C601 + C601 + C153882 * C580) * C153865 * C123) *
              C2265 +
          ((C134 * C557 + C602 + C602 + C153882 * C581) * C153865 * C123 +
           C645 * C124 + C646 * C125 + C647 * C126 + C648 * C127) *
              C2266 -
          ((C134 * C2268 + C2284 + C2284 + C153882 * C2278) * C153865 * C127 +
           (C134 * C2269 + C2285 + C2285 + C153882 * C2279) * C153865 * C126 +
           (C134 * C2270 + C2286 + C2286 + C153882 * C2280) * C153865 * C125 +
           (C134 * C2271 + C2287 + C2287 + C153882 * C2281) * C153865 * C124 +
           (C134 * C2272 + C2288 + C2288 + C153882 * C2282) * C153865 * C123) *
              C2267) *
         C153767 * C153748) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C154181 +
             C3138 * C154169 + C3139 * C154143) *
                C2846 +
            (C2850 + C2851 + C2852) * C2847 + C2864 * C154130) *
               C2058 -
           (C3874 * C154130 + (C3423 + C3388 + C3389) * C2847 +
            (C4205 * C154143 + C4206 * C154169 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C154181) *
                C2846) *
               C153847) *
              C153767 * C1253 +
          (((C3389 + C3388 + C3423) * C2846 + (C3385 + C3384 + C3422) * C2847 +
            (C3870 + C3871 + C3878) * C154130) *
               C153847 -
           (C2865 * C154130 + (C2855 + C2854 + C2853) * C2847 +
            (C2852 + C2851 + C2850) * C2846) *
               C2058) *
              C153767 * C1254 +
          ((C2864 * C2846 + (C2858 + C2857 + C2856) * C2847 +
            (C2859 + C2860 + C2861) * C154130) *
               C2058 -
           (((C134 * C1916 + C1932 + C1932 + C153882 * C1926) * C154143 +
             C1125 * C154169 + C633 * C154181) *
                C154130 +
            (C3878 + C3871 + C3870) * C2847 + C3874 * C2846) *
               C153847) *
              C153767 * C1255)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C154181 +
             C3138 * C154169 + C3139 * C154143) *
                C2846 +
            (C2850 + C2851 + C2852) * C2847 + C2864 * C154130) *
               C2058 -
           (C3874 * C154130 + (C3423 + C3388 + C3389) * C2847 +
            (C4205 * C154143 + C4206 * C154169 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C154181) *
                C2846) *
               C153847) *
              C326 +
          (((C4206 * C154181 + C4205 * C154169 + C5574 * C154143) * C2846 +
            (C4186 + C4187 + C4209) * C2847 +
            (C4191 + C4192 + C4210) * C154130) *
               C153847 -
           (C3650 * C154130 + (C3147 + C3106 + C3107) * C2847 +
            (C3142 * C154143 + C3139 * C154169 + C3138 * C154181) * C2846) *
               C2058) *
              C327 +
          (((C3139 * C154181 + C3142 * C154169 + C4591 * C154143) * C2846 +
            (C3111 + C3148 + C3149) * C2847 +
            (C3115 + C3150 + C3151) * C154130) *
               C2058 -
           (((C134 * C5557 + C5569 + C5569 + C153882 * C5563) * C154143 +
             C4208 * C154169 + C3416 * C154181) *
                C154130 +
            ((C134 * C5558 + C5570 + C5570 + C153882 * C5564) * C154143 +
             C4207 * C154169 + C3417 * C154181) *
                C2847 +
            ((C134 * C5559 + C5571 + C5571 + C153882 * C5565) * C154143 +
             C5574 * C154169 + C4205 * C154181) *
                C2846) *
               C153847) *
              C328) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C154181 +
            C3138 * C154169 + C3139 * C154143) *
               C2846 +
           (C2850 + C2851 + C2852) * C2847 + C2864 * C154130) *
              C2264 -
          (C3874 * C154130 + (C3423 + C3388 + C3389) * C2847 +
           (C4205 * C154143 + C4206 * C154169 +
            (C134 * C556 + C601 + C601 + C153882 * C580) * C154181) *
               C2846) *
              C2265 +
          (((C134 * C557 + C602 + C602 + C153882 * C581) * C154181 +
            C4830 * C154169 + C4831 * C154143) *
               C2846 +
           (C3391 + C3424 + C3425) * C2847 +
           (C3397 + C3426 + C3427) * C154130) *
              C2266 -
          (((C134 * C6156 + C6175 + C6175 + C153882 * C6168) * C154143 +
            (C134 * C6157 + C6176 + C6176 + C153882 * C6169) * C154169 +
            (C134 * C2270 + C2286 + C2286 + C153882 * C2280) * C154181) *
               C154130 +
           ((C134 * C6158 + C6177 + C6177 + C153882 * C6170) * C154143 +
            (C134 * C6159 + C6178 + C6178 + C153882 * C6171) * C154169 +
            (C134 * C2271 + C2287 + C2287 + C153882 * C2281) * C154181) *
               C2847 +
           ((C134 * C6160 + C6179 + C6179 + C153882 * C6172) * C154143 +
            (C134 * C6161 + C6180 + C6180 + C153882 * C6173) * C154169 +
            (C134 * C2272 + C2288 + C2288 + C153882 * C2282) * C154181) *
               C2846) *
              C2267) *
         C153767 * C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C7055 * C136 + C7062 + C7062 + C154182 * C152 + C7057 * C556 +
             C7063 + C7063 + C154171 * C580 + C7059 * C557 + C7064 + C7064 +
             C154146 * C581) *
                C153865 * C2846 +
            (C7128 + C7129 + C7130) * C153865 * C2847 + C7144 * C154130) *
               C2058 -
           (C8233 * C154130 + (C7753 + C7754 + C7755) * C153865 * C2847 +
            (C7059 * C2272 + C7696 + C7696 + C154146 * C2282 + C7057 * C557 +
             C7697 + C7697 + C154171 * C581 + C7055 * C556 + C7698 + C7698 +
             C154182 * C580) *
                C153865 * C2846) *
               C153847) *
              C153767 * C1253 +
          (((C7755 + C7754 + C7753) * C153865 * C2846 +
            (C7752 + C7751 + C7750) * C153865 * C2847 +
            (C8237 + C8238 + C8239) * C153865 * C154130) *
               C153847 -
           (C7145 * C154130 + (C7133 + C7132 + C7131) * C153865 * C2847 +
            (C7130 + C7129 + C7128) * C153865 * C2846) *
               C2058) *
              C153767 * C1254 +
          ((C7144 * C2846 + (C7136 + C7135 + C7134) * C153865 * C2847 +
            (C7137 + C7138 + C7139) * C153865 * C154130) *
               C2058 -
           ((C7059 * C2268 + C8226 + C8226 + C154146 * C2278 + C7057 * C561 +
             C8227 + C8227 + C154171 * C585 + C7055 * C552 + C8228 + C8228 +
             C154182 * C576) *
                C153865 * C154130 +
            (C8239 + C8238 + C8237) * C153865 * C2847 + C8233 * C2846) *
               C153847) *
              C153767 * C1255)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C7055 * C136 + C7062 + C7062 + C154182 * C152 + C7057 * C556 +
             C7063 + C7063 + C154171 * C580 + C7059 * C557 + C7064 + C7064 +
             C154146 * C581) *
                C153865 * C2846 +
            (C7128 + C7129 + C7130) * C153865 * C2847 + C7144 * C154130) *
               C2058 -
           (C8233 * C154130 + (C7753 + C7754 + C7755) * C153865 * C2847 +
            (C7059 * C2272 + C7696 + C7696 + C154146 * C2282 + C7057 * C557 +
             C7697 + C7697 + C154171 * C581 + C7055 * C556 + C7698 + C7698 +
             C154182 * C580) *
                C153865 * C2846) *
               C153847) *
              C326 +
          (((C7055 * C1081 + C8533 + C8533 + C154182 * C1093 + C7057 * C1489 +
             C8534 + C8534 + C154171 * C1499 + C7059 * C6161 + C8535 + C8535 +
             C154146 * C6173) *
                C153865 * C2846 +
            (C8569 + C8570 + C8571) * C153865 * C2847 +
            (C8572 + C8573 + C8574) * C153865 * C154130) *
               C153847 -
           (C7994 * C154130 + (C7439 + C7440 + C7441) * C153865 * C2847 +
            (C7059 * C1489 + C7382 + C7382 + C154146 * C1499 + C7057 * C1081 +
             C7383 + C7383 + C154171 * C1093 + C7055 * C335 + C7384 + C7384 +
             C154182 * C359) *
                C153865 * C2846) *
               C2058) *
              C327 +
          (((C7055 * C336 + C7385 + C7385 + C154182 * C360 + C7057 * C1920 +
             C7386 + C7386 + C154171 * C1930 + C7059 * C3369 + C7387 + C7387 +
             C154146 * C3377) *
                C153865 * C2846 +
            (C7442 + C7443 + C7444) * C153865 * C2847 +
            (C7445 + C7446 + C7447) * C153865 * C154130) *
               C2058 -
           ((C7059 * C6156 + C9910 + C9910 + C154146 * C6168 + C7057 * C3371 +
             C9911 + C9911 + C154171 * C3379 + C7055 * C1918 + C9912 + C9912 +
             C154182 * C1928) *
                C153865 * C154130 +
            (C7059 * C6158 + C9913 + C9913 + C154146 * C6170 + C7057 * C3370 +
             C9914 + C9914 + C154171 * C3378 + C7055 * C1919 + C9915 + C9915 +
             C154182 * C1929) *
                C153865 * C2847 +
            (C7059 * C6160 + C9916 + C9916 + C154146 * C6172 + C7057 * C3369 +
             C9917 + C9917 + C154171 * C3377 + C7055 * C1920 + C9918 + C9918 +
             C154182 * C1930) *
                C153865 * C2846) *
               C153847) *
              C328) *
         C153748) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C7055 * C136 + C7062 + C7062 + C154182 * C152 + C7057 * C556 +
            C7063 + C7063 + C154171 * C580 + C7059 * C557 + C7064 + C7064 +
            C154146 * C581) *
               C153865 * C2846 +
           (C7128 + C7129 + C7130) * C153865 * C2847 + C7144 * C154130) *
              C2264 -
          (C8233 * C154130 + (C7753 + C7754 + C7755) * C153865 * C2847 +
           (C7059 * C2272 + C7696 + C7696 + C154146 * C2282 + C7057 * C557 +
            C7697 + C7697 + C154171 * C581 + C7055 * C556 + C7698 + C7698 +
            C154182 * C580) *
               C153865 * C2846) *
              C2265 +
          ((C7055 * C557 + C7699 + C7699 + C154182 * C581 + C7057 * C2272 +
            C7700 + C7700 + C154171 * C2282 + C7059 * C7665 + C7701 + C7701 +
            C154146 * C7673) *
               C153865 * C2846 +
           (C7756 + C7757 + C7758) * C153865 * C2847 +
           (C7759 + C7760 + C7761) * C153865 * C154130) *
              C2266 -
          ((C7059 * C10500 + C10510 + C10510 + C154146 * C10506 +
            C7057 * C7667 + C10511 + C10511 + C154171 * C7675 + C7055 * C2270 +
            C10512 + C10512 + C154182 * C2280) *
               C153865 * C154130 +
           (C7059 * C10501 + C10513 + C10513 + C154146 * C10507 +
            C7057 * C7666 + C10514 + C10514 + C154171 * C7674 + C7055 * C2271 +
            C10515 + C10515 + C154182 * C2281) *
               C153865 * C2847 +
           (C7059 * C10502 + C10516 + C10516 + C154146 * C10508 +
            C7057 * C7665 + C10517 + C10517 + C154171 * C7673 + C7055 * C2272 +
            C10518 + C10518 + C154182 * C2282) *
               C153865 * C2846) *
              C2267) *
         C153767 * C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C24168 +
             C3138 * C24169 + C3139 * C154143) *
                C154178 +
            (C24175 + C24176 + C24177) * C154159 + C24189 * C154130) *
               C2058 -
           (C25096 * C154130 + (C24642 + C24643 + C24644) * C154159 +
            (C4205 * C154143 + C4206 * C24169 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C24168) *
                C154178) *
               C153847) *
              C153767 * C1253 +
          (((C24644 + C24643 + C24642) * C154178 +
            (C24641 + C24640 + C24639) * C154159 +
            (C25093 + C25094 + C25095) * C154130) *
               C153847 -
           (C24190 * C154130 + (C24180 + C24179 + C24178) * C154159 +
            (C24177 + C24176 + C24175) * C154178) *
               C2058) *
              C153767 * C1254 +
          ((C24189 * C154178 + (C24183 + C24182 + C24181) * C154159 +
            (C24184 + C24185 + C24186) * C154130) *
               C2058 -
           (((C134 * C1916 + C1932 + C1932 + C153882 * C1926) * C154143 +
             C1125 * C24169 + C633 * C24168) *
                C154130 +
            (C25095 + C25094 + C25093) * C154159 + C25096 * C154178) *
               C153847) *
              C153767 * C1255)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C24168 +
             C3138 * C24169 + C3139 * C154143) *
                C154178 +
            (C24175 + C24176 + C24177) * C154159 + C24189 * C154130) *
               C2058 -
           (C25096 * C154130 + (C24642 + C24643 + C24644) * C154159 +
            (C4205 * C154143 + C4206 * C24169 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C24168) *
                C154178) *
               C153847) *
              C326 +
          (((C4206 * C24168 + C4205 * C24169 + C5574 * C154143) * C154178 +
            (C25387 + C25388 + C25389) * C154159 +
            (C25390 + C25391 + C25392) * C154130) *
               C153847 -
           (C24873 * C154130 + (C24412 + C24413 + C24414) * C154159 +
            (C3142 * C154143 + C3139 * C24169 + C3138 * C24168) * C154178) *
               C2058) *
              C327 +
          (((C3139 * C24168 + C3142 * C24169 + C4591 * C154143) * C154178 +
            (C24415 + C24416 + C24417) * C154159 +
            (C24418 + C24419 + C24420) * C154130) *
               C2058 -
           (((C134 * C5557 + C5569 + C5569 + C153882 * C5563) * C154143 +
             C4208 * C24169 + C3416 * C24168) *
                C154130 +
            ((C134 * C5558 + C5570 + C5570 + C153882 * C5564) * C154143 +
             C4207 * C24169 + C3417 * C24168) *
                C154159 +
            ((C134 * C5559 + C5571 + C5571 + C153882 * C5565) * C154143 +
             C5574 * C24169 + C4205 * C24168) *
                C154178) *
               C153847) *
              C328) *
         C153748) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C24168 +
            C3138 * C24169 + C3139 * C154143) *
               C154178 +
           (C24175 + C24176 + C24177) * C154159 + C24189 * C154130) *
              C2264 -
          (C25096 * C154130 + (C24642 + C24643 + C24644) * C154159 +
           (C4205 * C154143 + C4206 * C24169 +
            (C134 * C556 + C601 + C601 + C153882 * C580) * C24168) *
               C154178) *
              C2265 +
          (((C134 * C557 + C602 + C602 + C153882 * C581) * C24168 +
            C4830 * C24169 + C4831 * C154143) *
               C154178 +
           (C24645 + C24646 + C24647) * C154159 +
           (C24648 + C24649 + C24650) * C154130) *
              C2266 -
          (((C134 * C6156 + C6175 + C6175 + C153882 * C6168) * C154143 +
            (C134 * C6157 + C6176 + C6176 + C153882 * C6169) * C24169 +
            (C134 * C2270 + C2286 + C2286 + C153882 * C2280) * C24168) *
               C154130 +
           ((C134 * C6158 + C6177 + C6177 + C153882 * C6170) * C154143 +
            (C134 * C6159 + C6178 + C6178 + C153882 * C6171) * C24169 +
            (C134 * C2271 + C2287 + C2287 + C153882 * C2281) * C24168) *
               C154159 +
           ((C134 * C6160 + C6179 + C6179 + C153882 * C6172) * C154143 +
            (C134 * C6161 + C6180 + C6180 + C153882 * C6173) * C24169 +
            (C134 * C2272 + C2288 + C2288 + C153882 * C2282) * C24168) *
               C154178) *
              C2267) *
         C153767 * C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C28090 +
            C3138 * C28091 + C3139 * C28092 + C3142 * C28093 + C4591 * C28094) *
               C153712 * C2058 -
           (C28789 * C28094 + C5574 * C28093 + C4205 * C28092 + C4206 * C28091 +
            (C134 * C556 + C601 + C601 + C153882 * C580) * C28090) *
               C153712 * C153847) *
              C153767 * C1253 +
          ((C636 * C28090 + C1122 * C28091 + C3417 * C28092 + C4207 * C28093 +
            C28790 * C28094) *
               C153712 * C153847 -
           (C3143 * C28094 + C3141 * C28093 + C416 * C28092 + C415 * C28091 +
            C193 * C28090) *
               C153712 * C2058) *
              C153767 * C1254 +
          ((C194 * C28090 + C414 * C28091 + C417 * C28092 + C3140 * C28093 +
            C3144 * C28094) *
               C153712 * C2058 -
           ((C134 * C5557 + C5569 + C5569 + C153882 * C5563) * C28094 +
            C4208 * C28093 + C3416 * C28092 + C1123 * C28091 + C635 * C28090) *
               C153712 * C153847) *
              C153767 * C1255)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C28090 +
            C3138 * C28091 + C3139 * C28092 + C3142 * C28093 + C4591 * C28094) *
               C153712 * C2058 -
           (C28789 * C28094 + C5574 * C28093 + C4205 * C28092 + C4206 * C28091 +
            (C134 * C556 + C601 + C601 + C153882 * C580) * C28090) *
               C153712 * C153847) *
              C326 +
          ((C4206 * C28090 + C4205 * C28091 + C5574 * C28092 + C28789 * C28093 +
            C29554 * C28094) *
               C153712 * C153847 -
           (C28235 * C28094 + C4591 * C28093 + C3142 * C28092 + C3139 * C28091 +
            C3138 * C28090) *
               C153712 * C2058) *
              C327 +
          ((C3139 * C28090 + C3142 * C28091 + C4591 * C28092 + C28235 * C28093 +
            C29003 * C28094) *
               C153712 * C2058 -
           ((C134 * C29545 + C29551 + C29551 + C153882 * C29547) * C28094 +
            C29554 * C28093 + C28789 * C28092 + C5574 * C28091 +
            C4205 * C28090) *
               C153712 * C153847) *
              C328) *
         C153748) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C136 + C161 + C161 + C153882 * C152) * C28090 +
           C3138 * C28091 + C3139 * C28092 + C3142 * C28093 + C4591 * C28094) *
              C153712 * C2264 -
          (C28789 * C28094 + C5574 * C28093 + C4205 * C28092 + C4206 * C28091 +
           (C134 * C556 + C601 + C601 + C153882 * C580) * C28090) *
              C153712 * C2265 +
          ((C134 * C557 + C602 + C602 + C153882 * C581) * C28090 +
           C4830 * C28091 + C4831 * C28092 + C29138 * C28093 +
           C29139 * C28094) *
              C153712 * C2266 -
          ((C134 * C29880 + C29887 + C29887 + C153882 * C29884) * C28094 +
           (C134 * C29881 + C29888 + C29888 + C153882 * C29885) * C28093 +
           (C134 * C6160 + C6179 + C6179 + C153882 * C6172) * C28092 +
           (C134 * C6161 + C6180 + C6180 + C153882 * C6173) * C28091 +
           (C134 * C2272 + C2288 + C2288 + C153882 * C2282) * C28090) *
              C153712 * C2267) *
         C153767 * C153748) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C7055 * C136 + C7062 + C7062 + C154182 * C152 + C7057 * C556 +
             C7063 + C7063 + C154171 * C580 + C7059 * C557 + C7064 + C7064 +
             C154146 * C581) *
                C24168 +
            (C30715 + C30716 + C30717) * C24169 + C30728 * C154143) *
               C153712 * C2058 -
           (C33113 * C154143 + (C31733 + C31734 + C31735) * C24169 +
            (C7059 * C2272 + C7696 + C7696 + C154146 * C2282 + C7057 * C557 +
             C7697 + C7697 + C154171 * C581 + C7055 * C556 + C7698 + C7698 +
             C154182 * C580) *
                C24168) *
               C153712 * C153847) *
              C153767 * C1253 +
          (((C7755 + C7754 + C7753) * C24168 +
            (C8569 + C8570 + C8571) * C24169 +
            (C31736 + C31737 + C31738) * C154143) *
               C153712 * C153847 -
           (C30702 * C154143 + (C7439 + C7440 + C7441) * C24169 +
            (C7130 + C7129 + C7128) * C24168) *
               C153712 * C2058) *
              C153767 * C1254 +
          ((C7142 * C24168 + (C7438 + C7437 + C7436) * C24169 +
            (C7445 + C7446 + C7447) * C154143) *
               C153712 * C2058 -
           ((C7059 * C6156 + C9910 + C9910 + C154146 * C6168 + C7057 * C3371 +
             C9911 + C9911 + C154171 * C3379 + C7055 * C1918 + C9912 + C9912 +
             C154182 * C1928) *
                C154143 +
            (C8574 + C8573 + C8572) * C24169 + C8229 * C24168) *
               C153712 * C153847) *
              C153767 * C1255)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C7055 * C136 + C7062 + C7062 + C154182 * C152 + C7057 * C556 +
             C7063 + C7063 + C154171 * C580 + C7059 * C557 + C7064 + C7064 +
             C154146 * C581) *
                C24168 +
            (C30715 + C30716 + C30717) * C24169 + C30728 * C154143) *
               C153712 * C2058 -
           (C33113 * C154143 + (C31733 + C31734 + C31735) * C24169 +
            (C7059 * C2272 + C7696 + C7696 + C154146 * C2282 + C7057 * C557 +
             C7697 + C7697 + C154171 * C581 + C7055 * C556 + C7698 + C7698 +
             C154182 * C580) *
                C24168) *
               C153712 * C153847) *
              C326 +
          (((C31735 + C31734 + C31733) * C24168 +
            (C31732 + C31731 + C31730) * C24169 +
            (C33120 + C33121 + C33122) * C154143) *
               C153712 * C153847 -
           (C32113 * C154143 + (C30720 + C30719 + C30718) * C24169 +
            (C30717 + C30716 + C30715) * C24168) *
               C153712 * C2058) *
              C327 +
          ((C30728 * C24168 + (C30723 + C30722 + C30721) * C24169 +
            (C32120 + C32121 + C32122) * C154143) *
               C153712 * C2058 -
           ((C7059 * C29880 + C33110 + C33110 + C154146 * C29884 +
             C7057 * C28358 + C33111 + C33111 + C154171 * C28362 +
             C7055 * C5559 + C33112 + C33112 + C154182 * C5565) *
                C154143 +
            (C33122 + C33121 + C33120) * C24169 + C33113 * C24168) *
               C153712 * C153847) *
              C328) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C7055 * C136 + C7062 + C7062 + C154182 * C152 + C7057 * C556 +
            C7063 + C7063 + C154171 * C580 + C7059 * C557 + C7064 + C7064 +
            C154146 * C581) *
               C24168 +
           (C30715 + C30716 + C30717) * C24169 + C30728 * C154143) *
              C153712 * C2264 -
          (C33113 * C154143 + (C31733 + C31734 + C31735) * C24169 +
           (C7059 * C2272 + C7696 + C7696 + C154146 * C2282 + C7057 * C557 +
            C7697 + C7697 + C154171 * C581 + C7055 * C556 + C7698 + C7698 +
            C154182 * C580) *
               C24168) *
              C153712 * C2265 +
          ((C7055 * C557 + C7699 + C7699 + C154182 * C581 + C7057 * C2272 +
            C7700 + C7700 + C154171 * C2282 + C7059 * C7665 + C7701 + C7701 +
            C154146 * C7673) *
               C24168 +
           (C32371 + C32372 + C32373) * C24169 +
           (C32374 + C32375 + C32376) * C154143) *
              C153712 * C2266 -
          ((C7059 * C33704 + C33711 + C33711 + C154146 * C33708 +
            C7057 * C30946 + C33712 + C33712 + C154171 * C30950 +
            C7055 * C6160 + C33713 + C33713 + C154182 * C6172) *
               C154143 +
           (C7059 * C33705 + C33714 + C33714 + C154146 * C33709 +
            C7057 * C9167 + C33715 + C33715 + C154171 * C9173 + C7055 * C6161 +
            C33716 + C33716 + C154182 * C6173) *
               C24169 +
           (C7059 * C10502 + C10516 + C10516 + C154146 * C10508 +
            C7057 * C7665 + C10517 + C10517 + C154171 * C7673 + C7055 * C2272 +
            C10518 + C10518 + C154182 * C2282) *
               C24168) *
              C153712 * C2267) *
         C153767 * C153748) /
            (p * q * std::sqrt(p + q));
    d2ee[343] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C154181 +
             C3138 * C154169 + C3139 * C154143) *
                C2846 +
            (C2850 + C2851 + C2852) * C2847 + C2864 * C154130) *
               C154166 -
           (C3874 * C154130 + (C3423 + C3388 + C3389) * C2847 +
            (C4205 * C154143 + C4206 * C154169 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C154181) *
                C2846) *
               C154167 +
           (((C134 * C557 + C602 + C602 + C153882 * C581) * C154181 +
             C4830 * C154169 + C4831 * C154143) *
                C2846 +
            (C3391 + C3424 + C3425) * C2847 +
            (C3397 + C3426 + C3427) * C154130) *
               C2574) *
              C153767 * C154085 +
          (((C3389 + C3388 + C3423) * C2846 + (C3385 + C3384 + C3422) * C2847 +
            (C3870 + C3871 + C3878) * C154130) *
               C154167 -
           (C2865 * C154130 + (C2855 + C2854 + C2853) * C2847 +
            (C2852 + C2851 + C2850) * C2846) *
               C154166 -
           (((C134 * C3372 + C3403 + C3403 + C153882 * C3380) * C154143 +
             (C134 * C1486 + C1502 + C1502 + C153882 * C1496) * C154169 +
             C639 * C154181) *
                C154130 +
            (C3427 + C3426 + C3397) * C2847 + (C3425 + C3424 + C3391) * C2846) *
               C2574) *
              C153767 * C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C153865 * C123 +
            C199 * C124 + C200 * C125 + C201 * C126 + C202 * C127) *
               C154166 -
           (C641 * C127 + C642 * C126 + C643 * C125 + C644 * C124 +
            (C134 * C556 + C601 + C601 + C153882 * C580) * C153865 * C123) *
               C154167 +
           ((C134 * C557 + C602 + C602 + C153882 * C581) * C153865 * C123 +
            C645 * C124 + C646 * C125 + C647 * C126 + C648 * C127) *
               C2574) *
              C153767 * C154085 +
          ((C644 * C123 + C643 * C124 + C642 * C125 + C641 * C126 +
            C919 * C127) *
               C154167 -
           (C203 * C127 + C202 * C126 + C201 * C125 + C200 * C124 +
            C199 * C123) *
               C154166 -
           ((C134 * C563 + C616 + C616 + C153882 * C587) * C153865 * C127 +
            C648 * C126 + C647 * C125 + C646 * C124 + C645 * C123) *
               C2574) *
              C153767 * C153754)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C7055 * C136 + C7062 + C7062 + C154182 * C152 + C7057 * C556 +
             C7063 + C7063 + C154171 * C580 + C7059 * C557 + C7064 + C7064 +
             C154146 * C581) *
                C153865 * C2846 +
            (C7128 + C7129 + C7130) * C153865 * C2847 + C7144 * C154130) *
               C154166 -
           (C8233 * C154130 + (C7753 + C7754 + C7755) * C153865 * C2847 +
            (C7059 * C2272 + C7696 + C7696 + C154146 * C2282 + C7057 * C557 +
             C7697 + C7697 + C154171 * C581 + C7055 * C556 + C7698 + C7698 +
             C154182 * C580) *
                C153865 * C2846) *
               C154167 +
           ((C7055 * C557 + C7699 + C7699 + C154182 * C581 + C7057 * C2272 +
             C7700 + C7700 + C154171 * C2282 + C7059 * C7665 + C7701 + C7701 +
             C154146 * C7673) *
                C153865 * C2846 +
            (C7756 + C7757 + C7758) * C153865 * C2847 +
            (C7759 + C7760 + C7761) * C153865 * C154130) *
               C2574) *
              C153767 * C154085 +
          (((C7755 + C7754 + C7753) * C153865 * C2846 +
            (C7752 + C7751 + C7750) * C153865 * C2847 +
            (C8237 + C8238 + C8239) * C153865 * C154130) *
               C154167 -
           (C7145 * C154130 + (C7133 + C7132 + C7131) * C153865 * C2847 +
            (C7130 + C7129 + C7128) * C153865 * C2846) *
               C154166 -
           ((C7059 * C7668 + C7723 + C7723 + C154146 * C7676 + C7057 * C2269 +
             C7724 + C7724 + C154171 * C2279 + C7055 * C560 + C7725 + C7725 +
             C154182 * C584) *
                C153865 * C154130 +
            (C7761 + C7760 + C7759) * C153865 * C2847 +
            (C7758 + C7757 + C7756) * C153865 * C2846) *
               C2574) *
              C153767 * C153754)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C24168 +
             C3138 * C24169 + C3139 * C154143) *
                C154178 +
            (C24175 + C24176 + C24177) * C154159 + C24189 * C154130) *
               C154166 -
           (C25096 * C154130 + (C24642 + C24643 + C24644) * C154159 +
            (C4205 * C154143 + C4206 * C24169 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C24168) *
                C154178) *
               C154167 +
           (((C134 * C557 + C602 + C602 + C153882 * C581) * C24168 +
             C4830 * C24169 + C4831 * C154143) *
                C154178 +
            (C24645 + C24646 + C24647) * C154159 +
            (C24648 + C24649 + C24650) * C154130) *
               C2574) *
              C153767 * C154085 +
          (((C24644 + C24643 + C24642) * C154178 +
            (C24641 + C24640 + C24639) * C154159 +
            (C25093 + C25094 + C25095) * C154130) *
               C154167 -
           (C24190 * C154130 + (C24180 + C24179 + C24178) * C154159 +
            (C24177 + C24176 + C24175) * C154178) *
               C154166 -
           (((C134 * C3372 + C3403 + C3403 + C153882 * C3380) * C154143 +
             C11810 * C24169 + C639 * C24168) *
                C154130 +
            (C24650 + C24649 + C24648) * C154159 +
            (C24647 + C24646 + C24645) * C154178) *
               C2574) *
              C153767 * C153754)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C28090 +
            C3138 * C28091 + C3139 * C28092 + C3142 * C28093 + C4591 * C28094) *
               C153712 * C154166 -
           (C28789 * C28094 + C5574 * C28093 + C4205 * C28092 + C4206 * C28091 +
            (C134 * C556 + C601 + C601 + C153882 * C580) * C28090) *
               C153712 * C154167 +
           ((C134 * C557 + C602 + C602 + C153882 * C581) * C28090 +
            C4830 * C28091 + C4831 * C28092 + C29138 * C28093 +
            C29139 * C28094) *
               C153712 * C2574) *
              C153767 * C154085 +
          ((C636 * C28090 + C1122 * C28091 + C3417 * C28092 + C4207 * C28093 +
            C28790 * C28094) *
               C153712 * C154167 -
           (C3143 * C28094 + C3141 * C28093 + C416 * C28092 + C415 * C28091 +
            C193 * C28090) *
               C153712 * C154166 -
           ((C134 * C28359 + C28366 + C28366 + C153882 * C28363) * C28094 +
            (C134 * C4810 + C4824 + C4824 + C153882 * C4816) * C28093 +
            C3419 * C28092 + C3418 * C28091 + C637 * C28090) *
               C153712 * C2574) *
              C153767 * C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C7055 * C136 + C7062 + C7062 + C154182 * C152 + C7057 * C556 +
             C7063 + C7063 + C154171 * C580 + C7059 * C557 + C7064 + C7064 +
             C154146 * C581) *
                C24168 +
            (C30715 + C30716 + C30717) * C24169 + C30728 * C154143) *
               C153712 * C154166 -
           (C33113 * C154143 + (C31733 + C31734 + C31735) * C24169 +
            (C7059 * C2272 + C7696 + C7696 + C154146 * C2282 + C7057 * C557 +
             C7697 + C7697 + C154171 * C581 + C7055 * C556 + C7698 + C7698 +
             C154182 * C580) *
                C24168) *
               C153712 * C154167 +
           ((C7055 * C557 + C7699 + C7699 + C154182 * C581 + C7057 * C2272 +
             C7700 + C7700 + C154171 * C2282 + C7059 * C7665 + C7701 + C7701 +
             C154146 * C7673) *
                C24168 +
            (C32371 + C32372 + C32373) * C24169 +
            (C32374 + C32375 + C32376) * C154143) *
               C153712 * C2574) *
              C153767 * C154085 +
          (((C7755 + C7754 + C7753) * C24168 +
            (C8569 + C8570 + C8571) * C24169 +
            (C31736 + C31737 + C31738) * C154143) *
               C153712 * C154167 -
           (C30702 * C154143 + (C7439 + C7440 + C7441) * C24169 +
            (C7130 + C7129 + C7128) * C24168) *
               C153712 * C154166 -
           ((C7059 * C30947 + C30956 + C30956 + C154146 * C30951 +
             C7057 * C6158 + C30957 + C30957 + C154171 * C6170 + C7055 * C3370 +
             C30958 + C30958 + C154182 * C3378) *
                C154143 +
            (C7059 * C9166 + C9178 + C9178 + C154146 * C9172 + C7057 * C6159 +
             C9179 + C9179 + C154171 * C6171 + C7055 * C1488 + C9180 + C9180 +
             C154182 * C1498) *
                C24169 +
            (C7758 + C7757 + C7756) * C24168) *
               C153712 * C2574) *
              C153767 * C153754)) /
            (p * q * std::sqrt(p + q));
    d2ee[344] +=
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C153865 * C123 +
            C199 * C124 + C200 * C125 + C201 * C126 + C202 * C127) *
               C2058 -
           (C641 * C127 + C642 * C126 + C643 * C125 + C644 * C124 +
            (C134 * C556 + C601 + C601 + C153882 * C580) * C153865 * C123) *
               C153847) *
              C326 +
          (((C134 * C1081 + C1100 + C1100 + C153882 * C1093) * C153865 * C123 +
            C1126 * C124 + C1127 * C125 + C1128 * C126 + C1129 * C127) *
               C153847 -
           (C420 * C127 + C421 * C126 + C422 * C125 + C423 * C124 +
            (C134 * C335 + C380 + C380 + C153882 * C359) * C153865 * C123) *
               C2058) *
              C327 +
          (((C134 * C336 + C381 + C381 + C153882 * C360) * C153865 * C123 +
            C424 * C124 + C425 * C125 + C426 * C126 + C427 * C127) *
               C2058 -
           ((C134 * C1916 + C1932 + C1932 + C153882 * C1926) * C153865 * C127 +
            (C134 * C1917 + C1933 + C1933 + C153882 * C1927) * C153865 * C126 +
            (C134 * C1918 + C1934 + C1934 + C153882 * C1928) * C153865 * C125 +
            (C134 * C1919 + C1935 + C1935 + C153882 * C1929) * C153865 * C124 +
            (C134 * C1920 + C1936 + C1936 + C153882 * C1930) * C153865 * C123) *
               C153847) *
              C328) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C153865 * C123 +
            C199 * C124 + C200 * C125 + C201 * C126 + C202 * C127) *
               C2058 -
           (C641 * C127 + C642 * C126 + C643 * C125 + C644 * C124 +
            (C134 * C556 + C601 + C601 + C153882 * C580) * C153865 * C123) *
               C153847) *
              C153767 * C1253 +
          ((C644 * C123 + C643 * C124 + C642 * C125 + C641 * C126 +
            C919 * C127) *
               C153847 -
           (C203 * C127 + C202 * C126 + C201 * C125 + C200 * C124 +
            C199 * C123) *
               C2058) *
              C153767 * C1254 +
          ((C200 * C123 + C201 * C124 + C202 * C125 + C203 * C126 +
            C204 * C127) *
               C2058 -
           ((C134 * C909 + C915 + C915 + C153882 * C911) * C153865 * C127 +
            C919 * C126 + C641 * C125 + C642 * C124 + C643 * C123) *
               C153847) *
              C153767 * C1255)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C154181 +
             C3138 * C154169 + C3139 * C154143) *
                C2846 +
            (C2850 + C2851 + C2852) * C2847 + C2864 * C154130) *
               C2058 -
           (C3874 * C154130 + (C3423 + C3388 + C3389) * C2847 +
            (C4205 * C154143 + C4206 * C154169 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C154181) *
                C2846) *
               C153847) *
              C153767 * C1253 +
          (((C3389 + C3388 + C3423) * C2846 + (C3385 + C3384 + C3422) * C2847 +
            (C3870 + C3871 + C3878) * C154130) *
               C153847 -
           (C2865 * C154130 + (C2855 + C2854 + C2853) * C2847 +
            (C2852 + C2851 + C2850) * C2846) *
               C2058) *
              C153767 * C1254 +
          ((C2864 * C2846 + (C2858 + C2857 + C2856) * C2847 +
            (C2859 + C2860 + C2861) * C154130) *
               C2058 -
           (((C134 * C1916 + C1932 + C1932 + C153882 * C1926) * C154143 +
             C1125 * C154169 + C633 * C154181) *
                C154130 +
            (C3878 + C3871 + C3870) * C2847 + C3874 * C2846) *
               C153847) *
              C153767 * C1255)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C154181 +
             C3138 * C154169 + C3139 * C154143) *
                C2846 +
            (C2850 + C2851 + C2852) * C2847 + C2864 * C154130) *
               C2058 -
           (C3874 * C154130 + (C3423 + C3388 + C3389) * C2847 +
            (C4205 * C154143 + C4206 * C154169 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C154181) *
                C2846) *
               C153847) *
              C326 +
          (((C4206 * C154181 + C4205 * C154169 + C5574 * C154143) * C2846 +
            (C4186 + C4187 + C4209) * C2847 +
            (C4191 + C4192 + C4210) * C154130) *
               C153847 -
           (C3650 * C154130 + (C3147 + C3106 + C3107) * C2847 +
            (C3142 * C154143 + C3139 * C154169 + C3138 * C154181) * C2846) *
               C2058) *
              C327 +
          (((C3139 * C154181 + C3142 * C154169 + C4591 * C154143) * C2846 +
            (C3111 + C3148 + C3149) * C2847 +
            (C3115 + C3150 + C3151) * C154130) *
               C2058 -
           (((C134 * C5557 + C5569 + C5569 + C153882 * C5563) * C154143 +
             C4208 * C154169 + C3416 * C154181) *
                C154130 +
            ((C134 * C5558 + C5570 + C5570 + C153882 * C5564) * C154143 +
             C4207 * C154169 + C3417 * C154181) *
                C2847 +
            ((C134 * C5559 + C5571 + C5571 + C153882 * C5565) * C154143 +
             C5574 * C154169 + C4205 * C154181) *
                C2846) *
               C153847) *
              C328) *
         C153748) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C7055 * C136 + C7062 + C7062 + C154182 * C152 + C7057 * C556 +
             C7063 + C7063 + C154171 * C580 + C7059 * C557 + C7064 + C7064 +
             C154146 * C581) *
                C153865 * C2846 +
            (C7128 + C7129 + C7130) * C153865 * C2847 + C7144 * C154130) *
               C2058 -
           (C8233 * C154130 + (C7753 + C7754 + C7755) * C153865 * C2847 +
            (C7059 * C2272 + C7696 + C7696 + C154146 * C2282 + C7057 * C557 +
             C7697 + C7697 + C154171 * C581 + C7055 * C556 + C7698 + C7698 +
             C154182 * C580) *
                C153865 * C2846) *
               C153847) *
              C153767 * C1253 +
          (((C7755 + C7754 + C7753) * C153865 * C2846 +
            (C7752 + C7751 + C7750) * C153865 * C2847 +
            (C8237 + C8238 + C8239) * C153865 * C154130) *
               C153847 -
           (C7145 * C154130 + (C7133 + C7132 + C7131) * C153865 * C2847 +
            (C7130 + C7129 + C7128) * C153865 * C2846) *
               C2058) *
              C153767 * C1254 +
          ((C7144 * C2846 + (C7136 + C7135 + C7134) * C153865 * C2847 +
            (C7137 + C7138 + C7139) * C153865 * C154130) *
               C2058 -
           ((C7059 * C2268 + C8226 + C8226 + C154146 * C2278 + C7057 * C561 +
             C8227 + C8227 + C154171 * C585 + C7055 * C552 + C8228 + C8228 +
             C154182 * C576) *
                C153865 * C154130 +
            (C8239 + C8238 + C8237) * C153865 * C2847 + C8233 * C2846) *
               C153847) *
              C153767 * C1255)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C7055 * C136 + C7062 + C7062 + C154182 * C152 + C7057 * C556 +
             C7063 + C7063 + C154171 * C580 + C7059 * C557 + C7064 + C7064 +
             C154146 * C581) *
                C153865 * C2846 +
            (C7128 + C7129 + C7130) * C153865 * C2847 + C7144 * C154130) *
               C2058 -
           (C8233 * C154130 + (C7753 + C7754 + C7755) * C153865 * C2847 +
            (C7059 * C2272 + C7696 + C7696 + C154146 * C2282 + C7057 * C557 +
             C7697 + C7697 + C154171 * C581 + C7055 * C556 + C7698 + C7698 +
             C154182 * C580) *
                C153865 * C2846) *
               C153847) *
              C326 +
          (((C7055 * C1081 + C8533 + C8533 + C154182 * C1093 + C7057 * C1489 +
             C8534 + C8534 + C154171 * C1499 + C7059 * C6161 + C8535 + C8535 +
             C154146 * C6173) *
                C153865 * C2846 +
            (C8569 + C8570 + C8571) * C153865 * C2847 +
            (C8572 + C8573 + C8574) * C153865 * C154130) *
               C153847 -
           (C7994 * C154130 + (C7439 + C7440 + C7441) * C153865 * C2847 +
            (C7059 * C1489 + C7382 + C7382 + C154146 * C1499 + C7057 * C1081 +
             C7383 + C7383 + C154171 * C1093 + C7055 * C335 + C7384 + C7384 +
             C154182 * C359) *
                C153865 * C2846) *
               C2058) *
              C327 +
          (((C7055 * C336 + C7385 + C7385 + C154182 * C360 + C7057 * C1920 +
             C7386 + C7386 + C154171 * C1930 + C7059 * C3369 + C7387 + C7387 +
             C154146 * C3377) *
                C153865 * C2846 +
            (C7442 + C7443 + C7444) * C153865 * C2847 +
            (C7445 + C7446 + C7447) * C153865 * C154130) *
               C2058 -
           ((C7059 * C6156 + C9910 + C9910 + C154146 * C6168 + C7057 * C3371 +
             C9911 + C9911 + C154171 * C3379 + C7055 * C1918 + C9912 + C9912 +
             C154182 * C1928) *
                C153865 * C154130 +
            (C7059 * C6158 + C9913 + C9913 + C154146 * C6170 + C7057 * C3370 +
             C9914 + C9914 + C154171 * C3378 + C7055 * C1919 + C9915 + C9915 +
             C154182 * C1929) *
                C153865 * C2847 +
            (C7059 * C6160 + C9916 + C9916 + C154146 * C6172 + C7057 * C3369 +
             C9917 + C9917 + C154171 * C3377 + C7055 * C1920 + C9918 + C9918 +
             C154182 * C1930) *
                C153865 * C2846) *
               C153847) *
              C328) *
         C153748) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C24168 +
             C3138 * C24169 + C3139 * C154143) *
                C154178 +
            (C24175 + C24176 + C24177) * C154159 + C24189 * C154130) *
               C2058 -
           (C25096 * C154130 + (C24642 + C24643 + C24644) * C154159 +
            (C4205 * C154143 + C4206 * C24169 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C24168) *
                C154178) *
               C153847) *
              C153767 * C1253 +
          (((C24644 + C24643 + C24642) * C154178 +
            (C24641 + C24640 + C24639) * C154159 +
            (C25093 + C25094 + C25095) * C154130) *
               C153847 -
           (C24190 * C154130 + (C24180 + C24179 + C24178) * C154159 +
            (C24177 + C24176 + C24175) * C154178) *
               C2058) *
              C153767 * C1254 +
          ((C24189 * C154178 + (C24183 + C24182 + C24181) * C154159 +
            (C24184 + C24185 + C24186) * C154130) *
               C2058 -
           (((C134 * C1916 + C1932 + C1932 + C153882 * C1926) * C154143 +
             C1125 * C24169 + C633 * C24168) *
                C154130 +
            (C25095 + C25094 + C25093) * C154159 + C25096 * C154178) *
               C153847) *
              C153767 * C1255)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C24168 +
             C3138 * C24169 + C3139 * C154143) *
                C154178 +
            (C24175 + C24176 + C24177) * C154159 + C24189 * C154130) *
               C2058 -
           (C25096 * C154130 + (C24642 + C24643 + C24644) * C154159 +
            (C4205 * C154143 + C4206 * C24169 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C24168) *
                C154178) *
               C153847) *
              C326 +
          (((C4206 * C24168 + C4205 * C24169 + C5574 * C154143) * C154178 +
            (C25387 + C25388 + C25389) * C154159 +
            (C25390 + C25391 + C25392) * C154130) *
               C153847 -
           (C24873 * C154130 + (C24412 + C24413 + C24414) * C154159 +
            (C3142 * C154143 + C3139 * C24169 + C3138 * C24168) * C154178) *
               C2058) *
              C327 +
          (((C3139 * C24168 + C3142 * C24169 + C4591 * C154143) * C154178 +
            (C24415 + C24416 + C24417) * C154159 +
            (C24418 + C24419 + C24420) * C154130) *
               C2058 -
           (((C134 * C5557 + C5569 + C5569 + C153882 * C5563) * C154143 +
             C4208 * C24169 + C3416 * C24168) *
                C154130 +
            ((C134 * C5558 + C5570 + C5570 + C153882 * C5564) * C154143 +
             C4207 * C24169 + C3417 * C24168) *
                C154159 +
            ((C134 * C5559 + C5571 + C5571 + C153882 * C5565) * C154143 +
             C5574 * C24169 + C4205 * C24168) *
                C154178) *
               C153847) *
              C328) *
         C153748) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C28090 +
            C3138 * C28091 + C3139 * C28092 + C3142 * C28093 + C4591 * C28094) *
               C153712 * C2058 -
           (C28789 * C28094 + C5574 * C28093 + C4205 * C28092 + C4206 * C28091 +
            (C134 * C556 + C601 + C601 + C153882 * C580) * C28090) *
               C153712 * C153847) *
              C153767 * C1253 +
          ((C636 * C28090 + C1122 * C28091 + C3417 * C28092 + C4207 * C28093 +
            C28790 * C28094) *
               C153712 * C153847 -
           (C3143 * C28094 + C3141 * C28093 + C416 * C28092 + C415 * C28091 +
            C193 * C28090) *
               C153712 * C2058) *
              C153767 * C1254 +
          ((C194 * C28090 + C414 * C28091 + C417 * C28092 + C3140 * C28093 +
            C3144 * C28094) *
               C153712 * C2058 -
           ((C134 * C5557 + C5569 + C5569 + C153882 * C5563) * C28094 +
            C4208 * C28093 + C3416 * C28092 + C1123 * C28091 + C635 * C28090) *
               C153712 * C153847) *
              C153767 * C1255)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C28090 +
            C3138 * C28091 + C3139 * C28092 + C3142 * C28093 + C4591 * C28094) *
               C153712 * C2058 -
           (C28789 * C28094 + C5574 * C28093 + C4205 * C28092 + C4206 * C28091 +
            (C134 * C556 + C601 + C601 + C153882 * C580) * C28090) *
               C153712 * C153847) *
              C326 +
          ((C4206 * C28090 + C4205 * C28091 + C5574 * C28092 + C28789 * C28093 +
            C29554 * C28094) *
               C153712 * C153847 -
           (C28235 * C28094 + C4591 * C28093 + C3142 * C28092 + C3139 * C28091 +
            C3138 * C28090) *
               C153712 * C2058) *
              C327 +
          ((C3139 * C28090 + C3142 * C28091 + C4591 * C28092 + C28235 * C28093 +
            C29003 * C28094) *
               C153712 * C2058 -
           ((C134 * C29545 + C29551 + C29551 + C153882 * C29547) * C28094 +
            C29554 * C28093 + C28789 * C28092 + C5574 * C28091 +
            C4205 * C28090) *
               C153712 * C153847) *
              C328) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C7055 * C136 + C7062 + C7062 + C154182 * C152 + C7057 * C556 +
             C7063 + C7063 + C154171 * C580 + C7059 * C557 + C7064 + C7064 +
             C154146 * C581) *
                C24168 +
            (C30715 + C30716 + C30717) * C24169 + C30728 * C154143) *
               C153712 * C2058 -
           (C33113 * C154143 + (C31733 + C31734 + C31735) * C24169 +
            (C7059 * C2272 + C7696 + C7696 + C154146 * C2282 + C7057 * C557 +
             C7697 + C7697 + C154171 * C581 + C7055 * C556 + C7698 + C7698 +
             C154182 * C580) *
                C24168) *
               C153712 * C153847) *
              C153767 * C1253 +
          (((C7755 + C7754 + C7753) * C24168 +
            (C8569 + C8570 + C8571) * C24169 +
            (C31736 + C31737 + C31738) * C154143) *
               C153712 * C153847 -
           (C30702 * C154143 + (C7439 + C7440 + C7441) * C24169 +
            (C7130 + C7129 + C7128) * C24168) *
               C153712 * C2058) *
              C153767 * C1254 +
          ((C7142 * C24168 + (C7438 + C7437 + C7436) * C24169 +
            (C7445 + C7446 + C7447) * C154143) *
               C153712 * C2058 -
           ((C7059 * C6156 + C9910 + C9910 + C154146 * C6168 + C7057 * C3371 +
             C9911 + C9911 + C154171 * C3379 + C7055 * C1918 + C9912 + C9912 +
             C154182 * C1928) *
                C154143 +
            (C8574 + C8573 + C8572) * C24169 + C8229 * C24168) *
               C153712 * C153847) *
              C153767 * C1255)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C7055 * C136 + C7062 + C7062 + C154182 * C152 + C7057 * C556 +
             C7063 + C7063 + C154171 * C580 + C7059 * C557 + C7064 + C7064 +
             C154146 * C581) *
                C24168 +
            (C30715 + C30716 + C30717) * C24169 + C30728 * C154143) *
               C153712 * C2058 -
           (C33113 * C154143 + (C31733 + C31734 + C31735) * C24169 +
            (C7059 * C2272 + C7696 + C7696 + C154146 * C2282 + C7057 * C557 +
             C7697 + C7697 + C154171 * C581 + C7055 * C556 + C7698 + C7698 +
             C154182 * C580) *
                C24168) *
               C153712 * C153847) *
              C326 +
          (((C31735 + C31734 + C31733) * C24168 +
            (C31732 + C31731 + C31730) * C24169 +
            (C33120 + C33121 + C33122) * C154143) *
               C153712 * C153847 -
           (C32113 * C154143 + (C30720 + C30719 + C30718) * C24169 +
            (C30717 + C30716 + C30715) * C24168) *
               C153712 * C2058) *
              C327 +
          ((C30728 * C24168 + (C30723 + C30722 + C30721) * C24169 +
            (C32120 + C32121 + C32122) * C154143) *
               C153712 * C2058 -
           ((C7059 * C29880 + C33110 + C33110 + C154146 * C29884 +
             C7057 * C28358 + C33111 + C33111 + C154171 * C28362 +
             C7055 * C5559 + C33112 + C33112 + C154182 * C5565) *
                C154143 +
            (C33122 + C33121 + C33120) * C24169 + C33113 * C24168) *
               C153712 * C153847) *
              C328) *
         C153748) /
            (p * q * std::sqrt(p + q));
    d2ee[345] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
             C14938 + C14938 + C153969 * C580) *
                C153865 * C11376 +
            (C14991 + C14992) * C153865 * C11377 + C15005 * C11378 +
            C15006 * C154108) *
               C153783 * C154093 -
           (C15759 * C154108 + C15760 * C11378 +
            (C15275 + C15276) * C153865 * C11377 +
            (C14934 * C1081 + C15221 + C15221 + C153969 * C1093 +
             C14932 * C335 + C15222 + C15222 + C154109 * C359) *
                C153865 * C11376) *
               C153783 * C153819) *
              C154162 +
          (((C15276 + C15275) * C153865 * C11376 +
            (C15274 + C15273) * C153865 * C11377 +
            (C15272 + C15271) * C153865 * C11378 +
            (C15765 + C15766) * C153865 * C154108) *
               C153783 * C153819 -
           (C15007 * C154108 + C15008 * C11378 +
            (C14994 + C14993) * C153865 * C11377 +
            (C14992 + C14991) * C153865 * C11376) *
               C153783 * C154093) *
              C154163 +
          ((C15005 * C11376 + C15006 * C11377 +
            (C14998 + C14997) * C153865 * C11378 +
            (C14999 + C15000) * C153865 * C154108) *
               C153783 * C154093 -
           ((C14934 * C1086 + C15757 + C15757 + C153969 * C1098 +
             C14932 * C341 + C15758 + C15758 + C154109 * C365) *
                C153865 * C154108 +
            (C15766 + C15765) * C153865 * C11378 + C15759 * C11377 +
            C15760 * C11376) *
               C153783 * C153819) *
              C774)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
              C14938 + C14938 + C153969 * C580) *
                 C24168 +
             (C19164 + C19165) * C24169 + C38471 * C154143) *
                C154074 +
            ((C14991 + C14992) * C24168 + C19130 * C24169 + C19138 * C154143) *
                C153722) *
               C153783 * C154093 -
           ((C38472 * C154143 + C19132 * C24169 + C19133 * C24168) * C153722 +
            ((C20988 + C20987) * C154143 + (C19166 + C19167) * C24169 +
             (C19165 + C19164) * C24168) *
                C154074) *
               C153783 * C153819) *
              C154162 +
          (((C19130 * C24168 + C19138 * C24169 + C38473 * C154143) * C154074 +
            (C18830 * C24168 + C19143 * C24169 + (C19170 + C19171) * C154143) *
                C153722) *
               C153783 * C153819 -
           ((C19131 * C154143 + C15752 * C24169 + (C14994 + C14993) * C24168) *
                C153722 +
            (C19132 * C154143 + C19133 * C24169 + (C14992 + C14991) * C24168) *
                C154074) *
               C153783 * C154093) *
              C154163 +
          (((C15001 * C24168 + C18830 * C24169 + C19143 * C154143) * C154074 +
            (C15002 * C24168 + C19774 * C24169 + (C15281 + C15282) * C154143) *
                C153722) *
               C153783 * C154093 -
           (((C14934 * C4171 + C16599 + C16599 + C153969 * C4179 +
              C14932 * C1344 + C16600 + C16600 + C154109 * C1354) *
                 C154143 +
             (C15282 + C15281) * C24169 + C15751 * C24168) *
                C153722 +
            ((C19171 + C19170) * C154143 + C19131 * C24169 + C15752 * C24168) *
                C154074) *
               C153783 * C153819) *
              C774)) /
            (p * q * std::sqrt(p + q));
    d2ee[346] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
              C14938 + C14938 + C153969 * C580) *
                 C153865 * C11376 +
             (C14991 + C14992) * C153865 * C11377 + C15005 * C11378 +
             C15006 * C154108) *
                C154094 -
            (C15969 * C154108 + C15970 * C11378 +
             (C15549 + C15550) * C153865 * C11377 +
             (C14934 * C557 + C15495 + C15495 + C153969 * C581 + C14932 * C556 +
              C15496 + C15496 + C154109 * C580) *
                 C153865 * C11376) *
                C153847) *
               C154093 +
           (((C14932 * C1081 + C16235 + C16235 + C154109 * C1093 +
              C14934 * C1489 + C16236 + C16236 + C153969 * C1499) *
                 C153865 * C11376 +
             (C16269 + C16270) * C153865 * C11377 +
             (C16271 + C16272) * C153865 * C11378 +
             (C16273 + C16274) * C153865 * C154108) *
                C153847 -
            (C15759 * C154108 + C15760 * C11378 +
             (C15275 + C15276) * C153865 * C11377 +
             (C14934 * C1081 + C15221 + C15221 + C153969 * C1093 +
              C14932 * C335 + C15222 + C15222 + C154109 * C359) *
                 C153865 * C11376) *
                C154094) *
               C153819) *
              C329 +
          ((((C15550 + C15549) * C153865 * C11376 +
             (C15548 + C15547) * C153865 * C11377 +
             (C15546 + C15545) * C153865 * C11378 +
             (C15975 + C15976) * C153865 * C154108) *
                C153847 -
            (C15007 * C154108 + C15008 * C11378 +
             (C14994 + C14993) * C153865 * C11377 +
             (C14992 + C14991) * C153865 * C11376) *
                C154094) *
               C154093 +
           (((C15276 + C15275) * C153865 * C11376 +
             (C15274 + C15273) * C153865 * C11377 +
             (C15272 + C15271) * C153865 * C11378 +
             (C15765 + C15766) * C153865 * C154108) *
                C154094 -
            ((C14934 * C1485 + C16255 + C16255 + C153969 * C1495 +
              C14932 * C1085 + C16256 + C16256 + C154109 * C1097) *
                 C153865 * C154108 +
             (C16274 + C16273) * C153865 * C11378 +
             (C16272 + C16271) * C153865 * C11377 +
             (C16270 + C16269) * C153865 * C11376) *
                C153847) *
               C153819) *
              C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C14932 * C136 + C14937 + C14937 + C154109 * C152 +
               C14934 * C556 + C14938 + C14938 + C153969 * C580) *
                  C24168 +
              (C19164 + C19165) * C24169 + C38471 * C154143) *
                 C154074 +
             ((C14991 + C14992) * C24168 + C19130 * C24169 + C19138 * C154143) *
                 C153722) *
                C154094 -
            ((C39750 * C154143 + C20456 * C24169 + (C15549 + C15550) * C24168) *
                 C153722 +
             ((C22276 + C22275) * C154143 + (C20483 + C20484) * C24169 +
              (C14934 * C557 + C15495 + C15495 + C153969 * C581 +
               C14932 * C556 + C15496 + C15496 + C154109 * C580) *
                  C24168) *
                 C154074) *
                C153847) *
               C154093 +
           ((((C20484 + C20483) * C24168 + (C22275 + C22276) * C24169 +
              (C14932 * C4168 + C22270 + C22270 + C154109 * C4176 +
               C14934 * C4811 + C22269 + C22269 + C153969 * C4817) *
                  C154143) *
                 C154074 +
             (C20461 * C24168 + C39751 * C24169 + (C39760 + C39761) * C154143) *
                 C153722) *
                C153847 -
            ((C38472 * C154143 + C19132 * C24169 + C19133 * C24168) * C153722 +
             ((C20988 + C20987) * C154143 + (C19166 + C19167) * C24169 +
              (C19165 + C19164) * C24168) *
                 C154074) *
                C154094) *
               C153819) *
              C329 +
          (((((C15550 + C15549) * C24168 + C20461 * C24169 + C39751 * C154143) *
                 C154074 +
             ((C15548 + C15547) * C24168 + C20466 * C24169 +
              (C20487 + C20488) * C154143) *
                 C153722) *
                C153847 -
            ((C19131 * C154143 + C15752 * C24169 + (C14994 + C14993) * C24168) *
                 C153722 +
             (C19132 * C154143 + C19133 * C24169 + (C14992 + C14991) * C24168) *
                 C154074) *
                C154094) *
               C154093 +
           (((C19130 * C24168 + C19138 * C24169 + C38473 * C154143) * C154074 +
             (C18830 * C24168 + C19143 * C24169 + (C19170 + C19171) * C154143) *
                 C153722) *
                C154094 -
            (((C14934 * C4809 + C22265 + C22265 + C153969 * C4815 +
               C14932 * C4170 + C22266 + C22266 + C154109 * C4178) *
                  C154143 +
              (C20488 + C20487) * C24169 + C20066 * C24168) *
                 C153722 +
             ((C39761 + C39760) * C154143 + C39750 * C24169 + C20456 * C24168) *
                 C154074) *
                C153847) *
               C153819) *
              C153754)) /
            (p * q * std::sqrt(p + q));
    d2ee[347] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
             C14938 + C14938 + C153969 * C580) *
                C153865 * C11376 +
            (C14991 + C14992) * C153865 * C11377 + C15005 * C11378 +
            C15006 * C154108) *
               C153783 * C326 -
           ((C15271 + C15272) * C153865 * C154108 +
            (C15273 + C15274) * C153865 * C11378 +
            (C15275 + C15276) * C153865 * C11377 +
            (C14934 * C1081 + C15221 + C15221 + C153969 * C1093 +
             C14932 * C335 + C15222 + C15222 + C154109 * C359) *
                C153865 * C11376) *
               C153783 * C327 +
           ((C14932 * C336 + C15223 + C15223 + C154109 * C360 + C14934 * C1920 +
             C15224 + C15224 + C153969 * C1930) *
                C153865 * C11376 +
            (C15277 + C15278) * C153865 * C11377 +
            (C15279 + C15280) * C153865 * C11378 +
            (C15281 + C15282) * C153865 * C154108) *
               C153783 * C328) *
              C329 +
          (((C15276 + C15275) * C153865 * C11376 +
            (C15274 + C15273) * C153865 * C11377 +
            (C15272 + C15271) * C153865 * C11378 +
            (C14932 * C331 + C15243 + C15243 + C154109 * C355 + C14934 * C1085 +
             C15244 + C15244 + C153969 * C1097) *
                C153865 * C154108) *
               C153783 * C327 -
           (C15007 * C154108 + C15008 * C11378 +
            (C14994 + C14993) * C153865 * C11377 +
            (C14992 + C14991) * C153865 * C11376) *
               C153783 * C326 -
           ((C14934 * C1916 + C15245 + C15245 + C153969 * C1926 +
             C14932 * C340 + C15246 + C15246 + C154109 * C364) *
                C153865 * C154108 +
            (C15282 + C15281) * C153865 * C11378 +
            (C15280 + C15279) * C153865 * C11377 +
            (C15278 + C15277) * C153865 * C11376) *
               C153783 * C328) *
              C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
            C14938 + C14938 + C153969 * C580) *
               C153865 * C11376 +
           (C14991 + C14992) * C153865 * C11377 + C15005 * C11378 +
           C15006 * C154108) *
              C153783 * C153767 * C130 -
          (C15007 * C154108 + C15008 * C11378 +
           (C14994 + C14993) * C153865 * C11377 +
           (C14992 + C14991) * C153865 * C11376) *
              C153783 * C153767 * C131 +
          (C15005 * C11376 + C15006 * C11377 +
           (C14998 + C14997) * C153865 * C11378 +
           (C14999 + C15000) * C153865 * C154108) *
              C153783 * C153767 * C132 -
          ((C14934 * C909 + C14969 + C14969 + C153969 * C911 + C14932 * C142 +
            C14970 + C14970 + C154109 * C158) *
               C153865 * C154108 +
           (C15000 + C14999) * C153865 * C11378 + C15007 * C11377 +
           C15008 * C11376) *
              C153783 * C153767 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
             C14938 + C14938 + C153969 * C580) *
                C153865 * C11376 +
            (C14991 + C14992) * C153865 * C11377 + C15005 * C11378 +
            C15006 * C154108) *
               C549 -
           ((C15545 + C15546) * C153865 * C154108 +
            (C15547 + C15548) * C153865 * C11378 +
            (C15549 + C15550) * C153865 * C11377 +
            (C14934 * C557 + C15495 + C15495 + C153969 * C581 + C14932 * C556 +
             C15496 + C15496 + C154109 * C580) *
                C153865 * C11376) *
               C550 +
           ((C14932 * C557 + C15497 + C15497 + C154109 * C581 + C14934 * C2272 +
             C15498 + C15498 + C153969 * C2282) *
                C153865 * C11376 +
            (C15551 + C15552) * C153865 * C11377 +
            (C15553 + C15554) * C153865 * C11378 +
            (C15555 + C15556) * C153865 * C154108) *
               C551) *
              C153767 * C329 +
          (((C15550 + C15549) * C153865 * C11376 +
            (C15548 + C15547) * C153865 * C11377 +
            (C15546 + C15545) * C153865 * C11378 +
            (C14932 * C552 + C15517 + C15517 + C154109 * C576 + C14934 * C561 +
             C15518 + C15518 + C153969 * C585) *
                C153865 * C154108) *
               C550 -
           (C15007 * C154108 + C15008 * C11378 +
            (C14994 + C14993) * C153865 * C11377 +
            (C14992 + C14991) * C153865 * C11376) *
               C549 -
           ((C14934 * C2268 + C15519 + C15519 + C153969 * C2278 +
             C14932 * C561 + C15520 + C15520 + C154109 * C585) *
                C153865 * C154108 +
            (C15556 + C15555) * C153865 * C11378 +
            (C15554 + C15553) * C153865 * C11377 +
            (C15552 + C15551) * C153865 * C11376) *
               C551) *
              C153767 * C153754)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
             C14938 + C14938 + C153969 * C580) *
                C24168 +
            (C19164 + C19165) * C24169 + (C19167 + C19166) * C154143) *
               C154074 +
           ((C14991 + C14992) * C24168 + C19130 * C24169 + C19138 * C154143) *
               C153722) *
              C153783 * C153767 * C130 -
          ((C19131 * C154143 + C15752 * C24169 + (C14994 + C14993) * C24168) *
               C153722 +
           (C19132 * C154143 + C19133 * C24169 + (C14992 + C14991) * C24168) *
               C154074) *
              C153783 * C153767 * C131 +
          ((C15001 * C24168 + C18830 * C24169 + C19143 * C154143) * C154074 +
           (C15002 * C24168 + C19774 * C24169 + (C15281 + C15282) * C154143) *
               C153722) *
              C153783 * C153767 * C132 -
          (((C14934 * C1916 + C15245 + C15245 + C153969 * C1926 +
             C14932 * C340 + C15246 + C15246 + C154109 * C364) *
                C154143 +
            (C15766 + C15765) * C24169 + C15003 * C24168) *
               C153722 +
           ((C15282 + C15281) * C154143 + C15751 * C24169 + C15004 * C24168) *
               C154074) *
              C153783 * C153767 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
              C14938 + C14938 + C153969 * C580) *
                 C24168 +
             (C19164 + C19165) * C24169 + C38471 * C154143) *
                C154074 +
            ((C14991 + C14992) * C24168 + C19130 * C24169 + C19138 * C154143) *
                C153722) *
               C153783 * C326 -
           ((C38472 * C154143 + C19132 * C24169 + C19133 * C24168) * C153722 +
            ((C20988 + C20987) * C154143 + (C19166 + C19167) * C24169 +
             (C19165 + C19164) * C24168) *
                C154074) *
               C153783 * C327 +
           ((C38471 * C24168 + (C20987 + C20988) * C24169 +
             (C14932 * C3083 + C20982 + C20982 + C154109 * C3091 +
              C14934 * C5559 + C20981 + C20981 + C153969 * C5565) *
                 C154143) *
                C154074 +
            (C19138 * C24168 + C38473 * C24169 + (C38482 + C38483) * C154143) *
                C153722) *
               C153783 * C328) *
              C329 +
          (((C19130 * C24168 + C19138 * C24169 + C38473 * C154143) * C154074 +
            (C18830 * C24168 + C19143 * C24169 + (C19170 + C19171) * C154143) *
                C153722) *
               C153783 * C327 -
           ((C19131 * C154143 + C15752 * C24169 + (C14994 + C14993) * C24168) *
                C153722 +
            (C19132 * C154143 + C19133 * C24169 + (C14992 + C14991) * C24168) *
                C154074) *
               C153783 * C326 -
           (((C14934 * C5557 + C20977 + C20977 + C153969 * C5563 +
              C14932 * C3085 + C20978 + C20978 + C154109 * C3093) *
                 C154143 +
             (C19171 + C19170) * C24169 + C19131 * C24168) *
                C153722 +
            ((C38483 + C38482) * C154143 + C38472 * C24169 + C19132 * C24168) *
                C154074) *
               C153783 * C328) *
              C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
              C14938 + C14938 + C153969 * C580) *
                 C24168 +
             (C19164 + C19165) * C24169 + C38471 * C154143) *
                C154074 +
            ((C14991 + C14992) * C24168 + C19130 * C24169 + C19138 * C154143) *
                C153722) *
               C549 -
           (((C20486 + C20485) * C154143 + C20456 * C24169 +
             (C15549 + C15550) * C24168) *
                C153722 +
            ((C22276 + C22275) * C154143 + (C20483 + C20484) * C24169 +
             (C14934 * C557 + C15495 + C15495 + C153969 * C581 + C14932 * C556 +
              C15496 + C15496 + C154109 * C580) *
                 C24168) *
                C154074) *
               C550 +
           (((C14932 * C557 + C15497 + C15497 + C154109 * C581 +
              C14934 * C2272 + C15498 + C15498 + C153969 * C2282) *
                 C24168 +
             (C21293 + C21294) * C24169 +
             (C14932 * C3369 + C21288 + C21288 + C154109 * C3377 +
              C14934 * C6160 + C21287 + C21287 + C153969 * C6172) *
                 C154143) *
                C154074 +
            ((C15551 + C15552) * C24168 + (C19478 + C19479) * C24169 +
             (C38782 + C38783) * C154143) *
                C153722) *
               C551) *
              C153767 * C329 +
          ((((C15550 + C15549) * C24168 + C20461 * C24169 +
             (C20485 + C20486) * C154143) *
                C154074 +
            ((C15548 + C15547) * C24168 + C20466 * C24169 +
             (C20487 + C20488) * C154143) *
                C153722) *
               C550 -
           ((C19131 * C154143 + C15752 * C24169 + (C14994 + C14993) * C24168) *
                C153722 +
            (C19132 * C154143 + C19133 * C24169 + (C14992 + C14991) * C24168) *
                C154074) *
               C549 -
           (((C14934 * C6156 + C21283 + C21283 + C153969 * C6168 +
              C14932 * C3371 + C21284 + C21284 + C154109 * C3379) *
                 C154143 +
             (C19481 + C19480) * C24169 + (C15554 + C15553) * C24168) *
                C153722 +
            ((C38783 + C38782) * C154143 + (C19479 + C19478) * C24169 +
             (C15552 + C15551) * C24168) *
                C154074) *
               C551) *
              C153767 * C153754)) /
            (p * q * std::sqrt(p + q));
    d2ee[348] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
             C14938 + C14938 + C153969 * C580) *
                C153865 * C11376 +
            (C14991 + C14992) * C153865 * C11377 + C15005 * C11378 +
            C15006 * C154108) *
               C154094 -
           (C15969 * C154108 + C15970 * C11378 +
            (C15549 + C15550) * C153865 * C11377 +
            (C14934 * C557 + C15495 + C15495 + C153969 * C581 + C14932 * C556 +
             C15496 + C15496 + C154109 * C580) *
                C153865 * C11376) *
               C153847) *
              C153767 * C154162 +
          (((C15550 + C15549) * C153865 * C11376 +
            (C15548 + C15547) * C153865 * C11377 +
            (C15546 + C15545) * C153865 * C11378 +
            (C15975 + C15976) * C153865 * C154108) *
               C153847 -
           (C15007 * C154108 + C15008 * C11378 +
            (C14994 + C14993) * C153865 * C11377 +
            (C14992 + C14991) * C153865 * C11376) *
               C154094) *
              C153767 * C154163 +
          ((C15005 * C11376 + C15006 * C11377 +
            (C14998 + C14997) * C153865 * C11378 +
            (C14999 + C15000) * C153865 * C154108) *
               C154094 -
           ((C14934 * C563 + C15967 + C15967 + C153969 * C587 + C14932 * C562 +
             C15968 + C15968 + C154109 * C586) *
                C153865 * C154108 +
            (C15976 + C15975) * C153865 * C11378 + C15969 * C11377 +
            C15970 * C11376) *
               C153847) *
              C153767 * C774)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
              C14938 + C14938 + C153969 * C580) *
                 C24168 +
             (C19164 + C19165) * C24169 + C38471 * C154143) *
                C154074 +
            ((C14991 + C14992) * C24168 + C19130 * C24169 + C19138 * C154143) *
                C153722) *
               C154094 -
           (((C20486 + C20485) * C154143 + C20456 * C24169 +
             (C15549 + C15550) * C24168) *
                C153722 +
            ((C22276 + C22275) * C154143 + (C20483 + C20484) * C24169 +
             (C14934 * C557 + C15495 + C15495 + C153969 * C581 + C14932 * C556 +
              C15496 + C15496 + C154109 * C580) *
                 C24168) *
                C154074) *
               C153847) *
              C153767 * C154162 +
          ((((C15550 + C15549) * C24168 + C20461 * C24169 +
             (C20485 + C20486) * C154143) *
                C154074 +
            ((C15548 + C15547) * C24168 + C20466 * C24169 +
             (C20487 + C20488) * C154143) *
                C153722) *
               C153847 -
           ((C19131 * C154143 + C15752 * C24169 + (C14994 + C14993) * C24168) *
                C153722 +
            (C19132 * C154143 + C19133 * C24169 + (C14992 + C14991) * C24168) *
                C154074) *
               C154094) *
              C153767 * C154163 +
          (((C15001 * C24168 + C18830 * C24169 + C19143 * C154143) * C154074 +
            (C15002 * C24168 + C19774 * C24169 + (C15281 + C15282) * C154143) *
                C153722) *
               C154094 -
           (((C14934 * C3372 + C17455 + C17455 + C153969 * C3380 +
              C14932 * C1917 + C17456 + C17456 + C154109 * C1927) *
                 C154143 +
             (C16274 + C16273) * C24169 + C15961 * C24168) *
                C153722 +
            ((C20488 + C20487) * C154143 + C20066 * C24169 + C15962 * C24168) *
                C154074) *
               C153847) *
              C153767 * C774)) /
            (p * q * std::sqrt(p + q));
    d2ee[349] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
            C14938 + C14938 + C153969 * C580) *
               C153865 * C11376 +
           (C14991 + C14992) * C153865 * C11377 + C15005 * C11378 +
           C15006 * C154108) *
              C153783 * C153767 * C130 -
          (C15007 * C154108 + C15008 * C11378 +
           (C14994 + C14993) * C153865 * C11377 +
           (C14992 + C14991) * C153865 * C11376) *
              C153783 * C153767 * C131 +
          (C15005 * C11376 + C15006 * C11377 +
           (C14998 + C14997) * C153865 * C11378 +
           (C14999 + C15000) * C153865 * C154108) *
              C153783 * C153767 * C132 -
          ((C14934 * C909 + C14969 + C14969 + C153969 * C911 + C14932 * C142 +
            C14970 + C14970 + C154109 * C158) *
               C153865 * C154108 +
           (C15000 + C14999) * C153865 * C11378 + C15007 * C11377 +
           C15008 * C11376) *
              C153783 * C153767 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
             C14938 + C14938 + C153969 * C580) *
                C153865 * C11376 +
            (C14991 + C14992) * C153865 * C11377 + C15005 * C11378 +
            C15006 * C154108) *
               C153783 * C326 -
           ((C15271 + C15272) * C153865 * C154108 +
            (C15273 + C15274) * C153865 * C11378 +
            (C15275 + C15276) * C153865 * C11377 +
            (C14934 * C1081 + C15221 + C15221 + C153969 * C1093 +
             C14932 * C335 + C15222 + C15222 + C154109 * C359) *
                C153865 * C11376) *
               C153783 * C327 +
           ((C14932 * C336 + C15223 + C15223 + C154109 * C360 + C14934 * C1920 +
             C15224 + C15224 + C153969 * C1930) *
                C153865 * C11376 +
            (C15277 + C15278) * C153865 * C11377 +
            (C15279 + C15280) * C153865 * C11378 +
            (C15281 + C15282) * C153865 * C154108) *
               C153783 * C328) *
              C329 +
          (((C15276 + C15275) * C153865 * C11376 +
            (C15274 + C15273) * C153865 * C11377 +
            (C15272 + C15271) * C153865 * C11378 +
            (C14932 * C331 + C15243 + C15243 + C154109 * C355 + C14934 * C1085 +
             C15244 + C15244 + C153969 * C1097) *
                C153865 * C154108) *
               C153783 * C327 -
           (C15007 * C154108 + C15008 * C11378 +
            (C14994 + C14993) * C153865 * C11377 +
            (C14992 + C14991) * C153865 * C11376) *
               C153783 * C326 -
           ((C14934 * C1916 + C15245 + C15245 + C153969 * C1926 +
             C14932 * C340 + C15246 + C15246 + C154109 * C364) *
                C153865 * C154108 +
            (C15282 + C15281) * C153865 * C11378 +
            (C15280 + C15279) * C153865 * C11377 +
            (C15278 + C15277) * C153865 * C11376) *
               C153783 * C328) *
              C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
             C14938 + C14938 + C153969 * C580) *
                C24168 +
            (C19164 + C19165) * C24169 + (C19167 + C19166) * C154143) *
               C154074 +
           ((C14991 + C14992) * C24168 + C19130 * C24169 + C19138 * C154143) *
               C153722) *
              C153783 * C153767 * C130 -
          ((C19131 * C154143 + C15752 * C24169 + (C14994 + C14993) * C24168) *
               C153722 +
           (C19132 * C154143 + C19133 * C24169 + (C14992 + C14991) * C24168) *
               C154074) *
              C153783 * C153767 * C131 +
          ((C15001 * C24168 + C18830 * C24169 + C19143 * C154143) * C154074 +
           (C15002 * C24168 + C19774 * C24169 + (C15281 + C15282) * C154143) *
               C153722) *
              C153783 * C153767 * C132 -
          (((C14934 * C1916 + C15245 + C15245 + C153969 * C1926 +
             C14932 * C340 + C15246 + C15246 + C154109 * C364) *
                C154143 +
            (C15766 + C15765) * C24169 + C15003 * C24168) *
               C153722 +
           ((C15282 + C15281) * C154143 + C15751 * C24169 + C15004 * C24168) *
               C154074) *
              C153783 * C153767 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
              C14938 + C14938 + C153969 * C580) *
                 C24168 +
             (C19164 + C19165) * C24169 + C38471 * C154143) *
                C154074 +
            ((C14991 + C14992) * C24168 + C19130 * C24169 + C19138 * C154143) *
                C153722) *
               C153783 * C326 -
           ((C38472 * C154143 + C19132 * C24169 + C19133 * C24168) * C153722 +
            ((C20988 + C20987) * C154143 + (C19166 + C19167) * C24169 +
             (C19165 + C19164) * C24168) *
                C154074) *
               C153783 * C327 +
           ((C38471 * C24168 + (C20987 + C20988) * C24169 +
             (C14932 * C3083 + C20982 + C20982 + C154109 * C3091 +
              C14934 * C5559 + C20981 + C20981 + C153969 * C5565) *
                 C154143) *
                C154074 +
            (C19138 * C24168 + C38473 * C24169 + (C38482 + C38483) * C154143) *
                C153722) *
               C153783 * C328) *
              C329 +
          (((C19130 * C24168 + C19138 * C24169 + C38473 * C154143) * C154074 +
            (C18830 * C24168 + C19143 * C24169 + (C19170 + C19171) * C154143) *
                C153722) *
               C153783 * C327 -
           ((C19131 * C154143 + C15752 * C24169 + (C14994 + C14993) * C24168) *
                C153722 +
            (C19132 * C154143 + C19133 * C24169 + (C14992 + C14991) * C24168) *
                C154074) *
               C153783 * C326 -
           (((C14934 * C5557 + C20977 + C20977 + C153969 * C5563 +
              C14932 * C3085 + C20978 + C20978 + C154109 * C3093) *
                 C154143 +
             (C19171 + C19170) * C24169 + C19131 * C24168) *
                C153722 +
            ((C38483 + C38482) * C154143 + C38472 * C24169 + C19132 * C24168) *
                C154074) *
               C153783 * C328) *
              C153754)) /
            (p * q * std::sqrt(p + q));
    d2ee[350] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
             C14938 + C14938 + C153969 * C580) *
                C153865 * C11376 +
            (C14991 + C14992) * C153865 * C11377 + C15005 * C11378 +
            C15006 * C154108) *
               C153783 * C154164 -
           (C15759 * C154108 + C15760 * C11378 +
            (C15275 + C15276) * C153865 * C11377 +
            (C14934 * C1081 + C15221 + C15221 + C153969 * C1093 +
             C14932 * C335 + C15222 + C15222 + C154109 * C359) *
                C153865 * C11376) *
               C153783 * C154165 +
           ((C14932 * C336 + C15223 + C15223 + C154109 * C360 + C14934 * C1920 +
             C15224 + C15224 + C153969 * C1930) *
                C153865 * C11376 +
            (C15277 + C15278) * C153865 * C11377 +
            (C15279 + C15280) * C153865 * C11378 +
            (C15281 + C15282) * C153865 * C154108) *
               C153783 * C1629) *
              C154085 +
          (((C15276 + C15275) * C153865 * C11376 +
            (C15274 + C15273) * C153865 * C11377 +
            (C15272 + C15271) * C153865 * C11378 +
            (C15765 + C15766) * C153865 * C154108) *
               C153783 * C154165 -
           (C15007 * C154108 + C15008 * C11378 +
            (C14994 + C14993) * C153865 * C11377 +
            (C14992 + C14991) * C153865 * C11376) *
               C153783 * C154164 -
           ((C14934 * C1916 + C15245 + C15245 + C153969 * C1926 +
             C14932 * C340 + C15246 + C15246 + C154109 * C364) *
                C153865 * C154108 +
            (C15282 + C15281) * C153865 * C11378 +
            (C15280 + C15279) * C153865 * C11377 +
            (C15278 + C15277) * C153865 * C11376) *
               C153783 * C1629) *
              C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
              C14938 + C14938 + C153969 * C580) *
                 C24168 +
             (C19164 + C19165) * C24169 + C38471 * C154143) *
                C154074 +
            ((C14991 + C14992) * C24168 + C19130 * C24169 + C19138 * C154143) *
                C153722) *
               C153783 * C154164 -
           ((C38472 * C154143 + C19132 * C24169 + C19133 * C24168) * C153722 +
            (C40246 * C154143 + (C19166 + C19167) * C24169 +
             (C19165 + C19164) * C24168) *
                C154074) *
               C153783 * C154165 +
           ((C38471 * C24168 + (C20987 + C20988) * C24169 +
             (C40259 + C40260) * C154143) *
                C154074 +
            (C19138 * C24168 + C38473 * C24169 + (C38482 + C38483) * C154143) *
                C153722) *
               C153783 * C1629) *
              C154085 +
          (((C19130 * C24168 + C19138 * C24169 + C38473 * C154143) * C154074 +
            (C18830 * C24168 + C19143 * C24169 + (C19170 + C19171) * C154143) *
                C153722) *
               C153783 * C154165 -
           ((C19131 * C154143 + C15752 * C24169 + (C14994 + C14993) * C24168) *
                C153722 +
            (C19132 * C154143 + C19133 * C24169 + (C14992 + C14991) * C24168) *
                C154074) *
               C153783 * C154164 -
           (((C14934 * C5557 + C20977 + C20977 + C153969 * C5563 +
              C14932 * C3085 + C20978 + C20978 + C154109 * C3093) *
                 C154143 +
             (C19171 + C19170) * C24169 + C19131 * C24168) *
                C153722 +
            ((C38483 + C38482) * C154143 + C38472 * C24169 + C19132 * C24168) *
                C154074) *
               C153783 * C1629) *
              C153754)) /
            (p * q * std::sqrt(p + q));
    d2ee[351] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
             C14938 + C14938 + C153969 * C580) *
                C153865 * C11376 +
            (C14991 + C14992) * C153865 * C11377 + C15005 * C11378 +
            C15006 * C154108) *
               C154094 -
           (C15969 * C154108 + C15970 * C11378 +
            (C15549 + C15550) * C153865 * C11377 +
            (C14934 * C557 + C15495 + C15495 + C153969 * C581 + C14932 * C556 +
             C15496 + C15496 + C154109 * C580) *
                C153865 * C11376) *
               C153847) *
              C154164 +
          (((C14932 * C1081 + C16235 + C16235 + C154109 * C1093 +
             C14934 * C1489 + C16236 + C16236 + C153969 * C1499) *
                C153865 * C11376 +
            (C16269 + C16270) * C153865 * C11377 +
            (C16271 + C16272) * C153865 * C11378 +
            (C16273 + C16274) * C153865 * C154108) *
               C153847 -
           (C15759 * C154108 + C15760 * C11378 +
            (C15275 + C15276) * C153865 * C11377 +
            (C14934 * C1081 + C15221 + C15221 + C153969 * C1093 +
             C14932 * C335 + C15222 + C15222 + C154109 * C359) *
                C153865 * C11376) *
               C154094) *
              C154165 +
          (((C14932 * C336 + C15223 + C15223 + C154109 * C360 + C14934 * C1920 +
             C15224 + C15224 + C153969 * C1930) *
                C153865 * C11376 +
            (C15277 + C15278) * C153865 * C11377 +
            (C15279 + C15280) * C153865 * C11378 +
            (C15281 + C15282) * C153865 * C154108) *
               C154094 -
           ((C14934 * C3372 + C17455 + C17455 + C153969 * C3380 +
             C14932 * C1917 + C17456 + C17456 + C154109 * C1927) *
                C153865 * C154108 +
            (C14934 * C3371 + C17457 + C17457 + C153969 * C3379 +
             C14932 * C1918 + C17458 + C17458 + C154109 * C1928) *
                C153865 * C11378 +
            (C14934 * C3370 + C17459 + C17459 + C153969 * C3378 +
             C14932 * C1919 + C17460 + C17460 + C154109 * C1929) *
                C153865 * C11377 +
            (C14934 * C3369 + C17461 + C17461 + C153969 * C3377 +
             C14932 * C1920 + C17462 + C17462 + C154109 * C1930) *
                C153865 * C11376) *
               C153847) *
              C1629) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
              C14938 + C14938 + C153969 * C580) *
                 C24168 +
             (C19164 + C19165) * C24169 + C38471 * C154143) *
                C154074 +
            ((C14991 + C14992) * C24168 + C19130 * C24169 + C19138 * C154143) *
                C153722) *
               C154094 -
           ((C39750 * C154143 + C20456 * C24169 + (C15549 + C15550) * C24168) *
                C153722 +
            (C41531 * C154143 + (C20483 + C20484) * C24169 +
             (C14934 * C557 + C15495 + C15495 + C153969 * C581 + C14932 * C556 +
              C15496 + C15496 + C154109 * C580) *
                 C24168) *
                C154074) *
               C153847) *
              C154164 +
          ((((C20484 + C20483) * C24168 + (C22275 + C22276) * C24169 +
             (C41544 + C41545) * C154143) *
                C154074 +
            (C20461 * C24168 + C39751 * C24169 + (C39760 + C39761) * C154143) *
                C153722) *
               C153847 -
           ((C38472 * C154143 + C19132 * C24169 + C19133 * C24168) * C153722 +
            (C40246 * C154143 + (C19166 + C19167) * C24169 +
             (C19165 + C19164) * C24168) *
                C154074) *
               C154094) *
              C154165 +
          (((C38471 * C24168 + (C20987 + C20988) * C24169 +
             (C40259 + C40260) * C154143) *
                C154074 +
            (C19138 * C24168 + C38473 * C24169 + (C38482 + C38483) * C154143) *
                C153722) *
               C154094 -
           (((C14934 * C28359 + C41536 + C41536 + C153969 * C28363 +
              C14932 * C5558 + C41537 + C41537 + C154109 * C5564) *
                 C154143 +
             (C39761 + C39760) * C24169 + C39750 * C24168) *
                C153722 +
            ((C14934 * C28358 + C41538 + C41538 + C153969 * C28362 +
              C14932 * C5559 + C41539 + C41539 + C154109 * C5565) *
                 C154143 +
             (C41545 + C41544) * C24169 + C41531 * C24168) *
                C154074) *
               C153847) *
              C1629) *
         C153748) /
            (p * q * std::sqrt(p + q));
    d2ee[352] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
            C14938 + C14938 + C153969 * C580) *
               C153865 * C11376 +
           (C14991 + C14992) * C153865 * C11377 + C15005 * C11378 +
           C15006 * C154108) *
              C153783 * C1338 -
          (C15759 * C154108 + C15760 * C11378 +
           (C15275 + C15276) * C153865 * C11377 +
           (C14934 * C1081 + C15221 + C15221 + C153969 * C1093 + C14932 * C335 +
            C15222 + C15222 + C154109 * C359) *
               C153865 * C11376) *
              C153783 * C1339 +
          ((C14932 * C336 + C15223 + C15223 + C154109 * C360 + C14934 * C1920 +
            C15224 + C15224 + C153969 * C1930) *
               C153865 * C11376 +
           (C15277 + C15278) * C153865 * C11377 +
           (C15279 + C15280) * C153865 * C11378 +
           (C15281 + C15282) * C153865 * C154108) *
              C153783 * C1340 -
          ((C14934 * C4171 + C16599 + C16599 + C153969 * C4179 +
            C14932 * C1344 + C16600 + C16600 + C154109 * C1354) *
               C153865 * C154108 +
           (C14934 * C4170 + C16601 + C16601 + C153969 * C4178 +
            C14932 * C1345 + C16602 + C16602 + C154109 * C1355) *
               C153865 * C11378 +
           (C14934 * C4169 + C16603 + C16603 + C153969 * C4177 +
            C14932 * C1346 + C16604 + C16604 + C154109 * C1356) *
               C153865 * C11377 +
           (C14934 * C4168 + C16605 + C16605 + C153969 * C4176 +
            C14932 * C1347 + C16606 + C16606 + C154109 * C1357) *
               C153865 * C11376) *
              C153783 * C1341) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
             C14938 + C14938 + C153969 * C580) *
                C153865 * C11376 +
            (C14991 + C14992) * C153865 * C11377 + C15005 * C11378 +
            C15006 * C154108) *
               C153783 * C1251 -
           (C15759 * C154108 + C15760 * C11378 +
            (C15275 + C15276) * C153865 * C11377 +
            (C14934 * C1081 + C15221 + C15221 + C153969 * C1093 +
             C14932 * C335 + C15222 + C15222 + C154109 * C359) *
                C153865 * C11376) *
               C153783 * C153819) *
              C1253 +
          (((C15276 + C15275) * C153865 * C11376 +
            (C15274 + C15273) * C153865 * C11377 +
            (C15272 + C15271) * C153865 * C11378 +
            (C15765 + C15766) * C153865 * C154108) *
               C153783 * C153819 -
           (C15007 * C154108 + C15008 * C11378 +
            (C14994 + C14993) * C153865 * C11377 +
            (C14992 + C14991) * C153865 * C11376) *
               C153783 * C1251) *
              C1254 +
          ((C15005 * C11376 + C15006 * C11377 +
            (C14998 + C14997) * C153865 * C11378 +
            (C14999 + C15000) * C153865 * C154108) *
               C153783 * C1251 -
           ((C14934 * C1086 + C15757 + C15757 + C153969 * C1098 +
             C14932 * C341 + C15758 + C15758 + C154109 * C365) *
                C153865 * C154108 +
            (C15766 + C15765) * C153865 * C11378 + C15759 * C11377 +
            C15760 * C11376) *
               C153783 * C153819) *
              C1255)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
             C14938 + C14938 + C153969 * C580) *
                C153865 * C11376 +
            (C14991 + C14992) * C153865 * C11377 + C15005 * C11378 +
            C15006 * C154108) *
               C549 -
           (C15969 * C154108 + C15970 * C11378 +
            (C15549 + C15550) * C153865 * C11377 +
            (C14934 * C557 + C15495 + C15495 + C153969 * C581 + C14932 * C556 +
             C15496 + C15496 + C154109 * C580) *
                C153865 * C11376) *
               C550 +
           ((C14932 * C557 + C15497 + C15497 + C154109 * C581 + C14934 * C2272 +
             C15498 + C15498 + C153969 * C2282) *
                C153865 * C11376 +
            (C15551 + C15552) * C153865 * C11377 +
            (C15553 + C15554) * C153865 * C11378 +
            (C15555 + C15556) * C153865 * C154108) *
               C551) *
              C1251 +
          (((C14932 * C1081 + C16235 + C16235 + C154109 * C1093 +
             C14934 * C1489 + C16236 + C16236 + C153969 * C1499) *
                C153865 * C11376 +
            (C16269 + C16270) * C153865 * C11377 +
            (C16271 + C16272) * C153865 * C11378 +
            (C16273 + C16274) * C153865 * C154108) *
               C550 -
           (C15759 * C154108 + C15760 * C11378 +
            (C15275 + C15276) * C153865 * C11377 +
            (C14934 * C1081 + C15221 + C15221 + C153969 * C1093 +
             C14932 * C335 + C15222 + C15222 + C154109 * C359) *
                C153865 * C11376) *
               C549 -
           ((C14934 * C8529 + C16801 + C16801 + C153969 * C8531 +
             C14932 * C1486 + C16802 + C16802 + C154109 * C1496) *
                C153865 * C154108 +
            (C14934 * C6157 + C16803 + C16803 + C153969 * C6169 +
             C14932 * C1487 + C16804 + C16804 + C154109 * C1497) *
                C153865 * C11378 +
            (C14934 * C6159 + C16805 + C16805 + C153969 * C6171 +
             C14932 * C1488 + C16806 + C16806 + C154109 * C1498) *
                C153865 * C11377 +
            (C14934 * C6161 + C16807 + C16807 + C153969 * C6173 +
             C14932 * C1489 + C16808 + C16808 + C154109 * C1499) *
                C153865 * C11376) *
               C551) *
              C153819) *
         C153748) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
              C14938 + C14938 + C153969 * C580) *
                 C24168 +
             (C19164 + C19165) * C24169 + C38471 * C154143) *
                C154074 +
            ((C14991 + C14992) * C24168 + C19130 * C24169 + C19138 * C154143) *
                C153722) *
               C153783 * C1251 -
           ((C38472 * C154143 + C19132 * C24169 + C19133 * C24168) * C153722 +
            ((C20988 + C20987) * C154143 + (C19166 + C19167) * C24169 +
             (C19165 + C19164) * C24168) *
                C154074) *
               C153783 * C153819) *
              C1253 +
          (((C19130 * C24168 + C19138 * C24169 + C38473 * C154143) * C154074 +
            (C18830 * C24168 + C19143 * C24169 + (C19170 + C19171) * C154143) *
                C153722) *
               C153783 * C153819 -
           ((C19131 * C154143 + C15752 * C24169 + (C14994 + C14993) * C24168) *
                C153722 +
            (C19132 * C154143 + C19133 * C24169 + (C14992 + C14991) * C24168) *
                C154074) *
               C153783 * C1251) *
              C1254 +
          (((C15001 * C24168 + C18830 * C24169 + C19143 * C154143) * C154074 +
            (C15002 * C24168 + C19774 * C24169 + (C15281 + C15282) * C154143) *
                C153722) *
               C153783 * C1251 -
           (((C14934 * C4171 + C16599 + C16599 + C153969 * C4179 +
              C14932 * C1344 + C16600 + C16600 + C154109 * C1354) *
                 C154143 +
             (C15282 + C15281) * C24169 + C15751 * C24168) *
                C153722 +
            ((C19171 + C19170) * C154143 + C19131 * C24169 + C15752 * C24168) *
                C154074) *
               C153783 * C153819) *
              C1255)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
             C14938 + C14938 + C153969 * C580) *
                C24168 +
            (C19164 + C19165) * C24169 + C38471 * C154143) *
               C154074 +
           ((C14991 + C14992) * C24168 + C19130 * C24169 + C19138 * C154143) *
               C153722) *
              C153783 * C1338 -
          ((C38472 * C154143 + C19132 * C24169 + C19133 * C24168) * C153722 +
           (C40246 * C154143 + (C19166 + C19167) * C24169 +
            (C19165 + C19164) * C24168) *
               C154074) *
              C153783 * C1339 +
          ((C38471 * C24168 + (C20987 + C20988) * C24169 +
            (C40259 + C40260) * C154143) *
               C154074 +
           (C19138 * C24168 + C38473 * C24169 + (C38482 + C38483) * C154143) *
               C153722) *
              C153783 * C1340 -
          (((C14934 * C28773 + C40251 + C40251 + C153969 * C28777 +
             C14932 * C4575 + C40252 + C40252 + C154109 * C4581) *
                C154143 +
            (C38483 + C38482) * C24169 + C38472 * C24168) *
               C153722 +
           ((C14934 * C28772 + C40253 + C40253 + C153969 * C28776 +
             C14932 * C4576 + C40254 + C40254 + C154109 * C4582) *
                C154143 +
            (C40260 + C40259) * C24169 + C40246 * C24168) *
               C154074) *
              C153783 * C1341) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
              C14938 + C14938 + C153969 * C580) *
                 C24168 +
             (C19164 + C19165) * C24169 + C38471 * C154143) *
                C154074 +
            ((C14991 + C14992) * C24168 + C19130 * C24169 + C19138 * C154143) *
                C153722) *
               C549 -
           ((C39750 * C154143 + C20456 * C24169 + (C15549 + C15550) * C24168) *
                C153722 +
            ((C22276 + C22275) * C154143 + (C20483 + C20484) * C24169 +
             (C14934 * C557 + C15495 + C15495 + C153969 * C581 + C14932 * C556 +
              C15496 + C15496 + C154109 * C580) *
                 C24168) *
                C154074) *
               C550 +
           (((C14932 * C557 + C15497 + C15497 + C154109 * C581 +
              C14934 * C2272 + C15498 + C15498 + C153969 * C2282) *
                 C24168 +
             (C21293 + C21294) * C24169 + (C40563 + C40564) * C154143) *
                C154074 +
            ((C15551 + C15552) * C24168 + (C19478 + C19479) * C24169 +
             (C38782 + C38783) * C154143) *
                C153722) *
               C551) *
              C1251 +
          ((((C20484 + C20483) * C24168 + (C22275 + C22276) * C24169 +
             (C14932 * C4168 + C22270 + C22270 + C154109 * C4176 +
              C14934 * C4811 + C22269 + C22269 + C153969 * C4817) *
                 C154143) *
                C154074 +
            (C20461 * C24168 + C39751 * C24169 + (C39760 + C39761) * C154143) *
                C153722) *
               C550 -
           ((C38472 * C154143 + C19132 * C24169 + C19133 * C24168) * C153722 +
            (C40246 * C154143 + (C19166 + C19167) * C24169 +
             (C19165 + C19164) * C24168) *
                C154074) *
               C549 -
           (((C14934 * C31684 + C40555 + C40555 + C153969 * C31686 +
              C14932 * C4810 + C40556 + C40556 + C154109 * C4816) *
                 C154143 +
             (C38783 + C38782) * C24169 + (C19479 + C19478) * C24168) *
                C153722 +
            ((C14934 * C29881 + C40557 + C40557 + C153969 * C29885 +
              C14932 * C4811 + C40558 + C40558 + C154109 * C4817) *
                 C154143 +
             (C40564 + C40563) * C24169 + (C21294 + C21293) * C24168) *
                C154074) *
               C551) *
              C153819) *
         C153748) /
            (p * q * std::sqrt(p + q));
    d2ee[353] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
              C14938 + C14938 + C153969 * C580) *
                 C153865 * C11376 +
             (C14991 + C14992) * C153865 * C11377 + C15005 * C11378 +
             C15006 * C154108) *
                C154094 -
            (C15969 * C154108 + C15970 * C11378 +
             (C15549 + C15550) * C153865 * C11377 +
             (C14934 * C557 + C15495 + C15495 + C153969 * C581 + C14932 * C556 +
              C15496 + C15496 + C154109 * C580) *
                 C153865 * C11376) *
                C153847) *
               C1251 +
           (((C14932 * C1081 + C16235 + C16235 + C154109 * C1093 +
              C14934 * C1489 + C16236 + C16236 + C153969 * C1499) *
                 C153865 * C11376 +
             (C16269 + C16270) * C153865 * C11377 +
             (C16271 + C16272) * C153865 * C11378 +
             (C16273 + C16274) * C153865 * C154108) *
                C153847 -
            (C15759 * C154108 + C15760 * C11378 +
             (C15275 + C15276) * C153865 * C11377 +
             (C14934 * C1081 + C15221 + C15221 + C153969 * C1093 +
              C14932 * C335 + C15222 + C15222 + C154109 * C359) *
                 C153865 * C11376) *
                C154094) *
               C153819) *
              C154085 +
          ((((C15550 + C15549) * C153865 * C11376 +
             (C15548 + C15547) * C153865 * C11377 +
             (C15546 + C15545) * C153865 * C11378 +
             (C15975 + C15976) * C153865 * C154108) *
                C153847 -
            (C15007 * C154108 + C15008 * C11378 +
             (C14994 + C14993) * C153865 * C11377 +
             (C14992 + C14991) * C153865 * C11376) *
                C154094) *
               C1251 +
           (((C15276 + C15275) * C153865 * C11376 +
             (C15274 + C15273) * C153865 * C11377 +
             (C15272 + C15271) * C153865 * C11378 +
             (C15765 + C15766) * C153865 * C154108) *
                C154094 -
            ((C14934 * C1485 + C16255 + C16255 + C153969 * C1495 +
              C14932 * C1085 + C16256 + C16256 + C154109 * C1097) *
                 C153865 * C154108 +
             (C16274 + C16273) * C153865 * C11378 +
             (C16272 + C16271) * C153865 * C11377 +
             (C16270 + C16269) * C153865 * C11376) *
                C153847) *
               C153819) *
              C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C14932 * C136 + C14937 + C14937 + C154109 * C152 +
               C14934 * C556 + C14938 + C14938 + C153969 * C580) *
                  C24168 +
              (C19164 + C19165) * C24169 + C38471 * C154143) *
                 C154074 +
             ((C14991 + C14992) * C24168 + C19130 * C24169 + C19138 * C154143) *
                 C153722) *
                C154094 -
            ((C39750 * C154143 + C20456 * C24169 + (C15549 + C15550) * C24168) *
                 C153722 +
             ((C22276 + C22275) * C154143 + (C20483 + C20484) * C24169 +
              (C14934 * C557 + C15495 + C15495 + C153969 * C581 +
               C14932 * C556 + C15496 + C15496 + C154109 * C580) *
                  C24168) *
                 C154074) *
                C153847) *
               C1251 +
           ((((C20484 + C20483) * C24168 + (C22275 + C22276) * C24169 +
              (C14932 * C4168 + C22270 + C22270 + C154109 * C4176 +
               C14934 * C4811 + C22269 + C22269 + C153969 * C4817) *
                  C154143) *
                 C154074 +
             (C20461 * C24168 + C39751 * C24169 + (C39760 + C39761) * C154143) *
                 C153722) *
                C153847 -
            ((C38472 * C154143 + C19132 * C24169 + C19133 * C24168) * C153722 +
             (C40246 * C154143 + (C19166 + C19167) * C24169 +
              (C19165 + C19164) * C24168) *
                 C154074) *
                C154094) *
               C153819) *
              C154085 +
          (((((C15550 + C15549) * C24168 + C20461 * C24169 + C39751 * C154143) *
                 C154074 +
             ((C15548 + C15547) * C24168 + C20466 * C24169 +
              (C20487 + C20488) * C154143) *
                 C153722) *
                C153847 -
            ((C19131 * C154143 + C15752 * C24169 + (C14994 + C14993) * C24168) *
                 C153722 +
             (C19132 * C154143 + C19133 * C24169 + (C14992 + C14991) * C24168) *
                 C154074) *
                C154094) *
               C1251 +
           (((C19130 * C24168 + C19138 * C24169 + C38473 * C154143) * C154074 +
             (C18830 * C24168 + C19143 * C24169 + (C19170 + C19171) * C154143) *
                 C153722) *
                C154094 -
            (((C14934 * C4809 + C22265 + C22265 + C153969 * C4815 +
               C14932 * C4170 + C22266 + C22266 + C154109 * C4178) *
                  C154143 +
              (C20488 + C20487) * C24169 + C20066 * C24168) *
                 C153722 +
             ((C39761 + C39760) * C154143 + C39750 * C24169 + C20456 * C24168) *
                 C154074) *
                C153847) *
               C153819) *
              C153754)) /
            (p * q * std::sqrt(p + q));
    d2ee[354] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
             C14938 + C14938 + C153969 * C580) *
                C153865 * C11376 +
            (C14991 + C14992) * C153865 * C11377 + C15005 * C11378 +
            C15006 * C154108) *
               C153783 * C1251 -
           (C15759 * C154108 + C15760 * C11378 +
            (C15275 + C15276) * C153865 * C11377 +
            (C14934 * C1081 + C15221 + C15221 + C153969 * C1093 +
             C14932 * C335 + C15222 + C15222 + C154109 * C359) *
                C153865 * C11376) *
               C153783 * C153819) *
              C1253 +
          (((C15276 + C15275) * C153865 * C11376 +
            (C15274 + C15273) * C153865 * C11377 +
            (C15272 + C15271) * C153865 * C11378 +
            (C15765 + C15766) * C153865 * C154108) *
               C153783 * C153819 -
           (C15007 * C154108 + C15008 * C11378 +
            (C14994 + C14993) * C153865 * C11377 +
            (C14992 + C14991) * C153865 * C11376) *
               C153783 * C1251) *
              C1254 +
          ((C15005 * C11376 + C15006 * C11377 +
            (C14998 + C14997) * C153865 * C11378 +
            (C14999 + C15000) * C153865 * C154108) *
               C153783 * C1251 -
           ((C14934 * C1086 + C15757 + C15757 + C153969 * C1098 +
             C14932 * C341 + C15758 + C15758 + C154109 * C365) *
                C153865 * C154108 +
            (C15766 + C15765) * C153865 * C11378 + C15759 * C11377 +
            C15760 * C11376) *
               C153783 * C153819) *
              C1255)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
            C14938 + C14938 + C153969 * C580) *
               C153865 * C11376 +
           (C14991 + C14992) * C153865 * C11377 + C15005 * C11378 +
           C15006 * C154108) *
              C153783 * C1338 -
          (C15759 * C154108 + C15760 * C11378 +
           (C15275 + C15276) * C153865 * C11377 +
           (C14934 * C1081 + C15221 + C15221 + C153969 * C1093 + C14932 * C335 +
            C15222 + C15222 + C154109 * C359) *
               C153865 * C11376) *
              C153783 * C1339 +
          ((C14932 * C336 + C15223 + C15223 + C154109 * C360 + C14934 * C1920 +
            C15224 + C15224 + C153969 * C1930) *
               C153865 * C11376 +
           (C15277 + C15278) * C153865 * C11377 +
           (C15279 + C15280) * C153865 * C11378 +
           (C15281 + C15282) * C153865 * C154108) *
              C153783 * C1340 -
          ((C14934 * C4171 + C16599 + C16599 + C153969 * C4179 +
            C14932 * C1344 + C16600 + C16600 + C154109 * C1354) *
               C153865 * C154108 +
           (C14934 * C4170 + C16601 + C16601 + C153969 * C4178 +
            C14932 * C1345 + C16602 + C16602 + C154109 * C1355) *
               C153865 * C11378 +
           (C14934 * C4169 + C16603 + C16603 + C153969 * C4177 +
            C14932 * C1346 + C16604 + C16604 + C154109 * C1356) *
               C153865 * C11377 +
           (C14934 * C4168 + C16605 + C16605 + C153969 * C4176 +
            C14932 * C1347 + C16606 + C16606 + C154109 * C1357) *
               C153865 * C11376) *
              C153783 * C1341) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
              C14938 + C14938 + C153969 * C580) *
                 C24168 +
             (C19164 + C19165) * C24169 + C38471 * C154143) *
                C154074 +
            ((C14991 + C14992) * C24168 + C19130 * C24169 + C19138 * C154143) *
                C153722) *
               C153783 * C1251 -
           ((C38472 * C154143 + C19132 * C24169 + C19133 * C24168) * C153722 +
            ((C20988 + C20987) * C154143 + (C19166 + C19167) * C24169 +
             (C19165 + C19164) * C24168) *
                C154074) *
               C153783 * C153819) *
              C1253 +
          (((C19130 * C24168 + C19138 * C24169 + C38473 * C154143) * C154074 +
            (C18830 * C24168 + C19143 * C24169 + (C19170 + C19171) * C154143) *
                C153722) *
               C153783 * C153819 -
           ((C19131 * C154143 + C15752 * C24169 + (C14994 + C14993) * C24168) *
                C153722 +
            (C19132 * C154143 + C19133 * C24169 + (C14992 + C14991) * C24168) *
                C154074) *
               C153783 * C1251) *
              C1254 +
          (((C15001 * C24168 + C18830 * C24169 + C19143 * C154143) * C154074 +
            (C15002 * C24168 + C19774 * C24169 + (C15281 + C15282) * C154143) *
                C153722) *
               C153783 * C1251 -
           (((C14934 * C4171 + C16599 + C16599 + C153969 * C4179 +
              C14932 * C1344 + C16600 + C16600 + C154109 * C1354) *
                 C154143 +
             (C15282 + C15281) * C24169 + C15751 * C24168) *
                C153722 +
            ((C19171 + C19170) * C154143 + C19131 * C24169 + C15752 * C24168) *
                C154074) *
               C153783 * C153819) *
              C1255)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
             C14938 + C14938 + C153969 * C580) *
                C24168 +
            (C19164 + C19165) * C24169 + C38471 * C154143) *
               C154074 +
           ((C14991 + C14992) * C24168 + C19130 * C24169 + C19138 * C154143) *
               C153722) *
              C153783 * C1338 -
          ((C38472 * C154143 + C19132 * C24169 + C19133 * C24168) * C153722 +
           (C40246 * C154143 + (C19166 + C19167) * C24169 +
            (C19165 + C19164) * C24168) *
               C154074) *
              C153783 * C1339 +
          ((C38471 * C24168 + (C20987 + C20988) * C24169 +
            (C40259 + C40260) * C154143) *
               C154074 +
           (C19138 * C24168 + C38473 * C24169 + (C38482 + C38483) * C154143) *
               C153722) *
              C153783 * C1340 -
          (((C14934 * C28773 + C40251 + C40251 + C153969 * C28777 +
             C14932 * C4575 + C40252 + C40252 + C154109 * C4581) *
                C154143 +
            (C38483 + C38482) * C24169 + C38472 * C24168) *
               C153722 +
           ((C14934 * C28772 + C40253 + C40253 + C153969 * C28776 +
             C14932 * C4576 + C40254 + C40254 + C154109 * C4582) *
                C154143 +
            (C40260 + C40259) * C24169 + C40246 * C24168) *
               C154074) *
              C153783 * C1341) *
         C153748) /
            (p * q * std::sqrt(p + q));
    d2ee[355] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
              C14938 + C14938 + C153969 * C580) *
                 C153865 * C11376 +
             (C14991 + C14992) * C153865 * C11377 + C15005 * C11378 +
             C15006 * C154108) *
                C2058 -
            (C15969 * C154108 + C15970 * C11378 +
             (C15549 + C15550) * C153865 * C11377 +
             (C14934 * C557 + C15495 + C15495 + C153969 * C581 + C14932 * C556 +
              C15496 + C15496 + C154109 * C580) *
                 C153865 * C11376) *
                C153847) *
               C154093 +
           (((C14932 * C1081 + C16235 + C16235 + C154109 * C1093 +
              C14934 * C1489 + C16236 + C16236 + C153969 * C1499) *
                 C153865 * C11376 +
             (C16269 + C16270) * C153865 * C11377 +
             (C16271 + C16272) * C153865 * C11378 +
             (C16273 + C16274) * C153865 * C154108) *
                C153847 -
            (C15759 * C154108 + C15760 * C11378 +
             (C15275 + C15276) * C153865 * C11377 +
             (C14934 * C1081 + C15221 + C15221 + C153969 * C1093 +
              C14932 * C335 + C15222 + C15222 + C154109 * C359) *
                 C153865 * C11376) *
                C2058) *
               C153819) *
              C154085 +
          ((((C15550 + C15549) * C153865 * C11376 +
             (C15548 + C15547) * C153865 * C11377 +
             (C15546 + C15545) * C153865 * C11378 +
             (C15975 + C15976) * C153865 * C154108) *
                C153847 -
            (C15007 * C154108 + C15008 * C11378 +
             (C14994 + C14993) * C153865 * C11377 +
             (C14992 + C14991) * C153865 * C11376) *
                C2058) *
               C154093 +
           (((C15276 + C15275) * C153865 * C11376 +
             (C15274 + C15273) * C153865 * C11377 +
             (C15272 + C15271) * C153865 * C11378 +
             (C15765 + C15766) * C153865 * C154108) *
                C2058 -
            ((C14934 * C1485 + C16255 + C16255 + C153969 * C1495 +
              C14932 * C1085 + C16256 + C16256 + C154109 * C1097) *
                 C153865 * C154108 +
             (C16274 + C16273) * C153865 * C11378 +
             (C16272 + C16271) * C153865 * C11377 +
             (C16270 + C16269) * C153865 * C11376) *
                C153847) *
               C153819) *
              C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C14932 * C136 + C14937 + C14937 + C154109 * C152 +
               C14934 * C556 + C14938 + C14938 + C153969 * C580) *
                  C24168 +
              (C19164 + C19165) * C24169 + C38471 * C154143) *
                 C154074 +
             ((C14991 + C14992) * C24168 + C19130 * C24169 + C19138 * C154143) *
                 C153722) *
                C2058 -
            ((C39750 * C154143 + C20456 * C24169 + (C15549 + C15550) * C24168) *
                 C153722 +
             (C41531 * C154143 + (C20483 + C20484) * C24169 +
              (C14934 * C557 + C15495 + C15495 + C153969 * C581 +
               C14932 * C556 + C15496 + C15496 + C154109 * C580) *
                  C24168) *
                 C154074) *
                C153847) *
               C154093 +
           ((((C20484 + C20483) * C24168 + (C22275 + C22276) * C24169 +
              (C41544 + C41545) * C154143) *
                 C154074 +
             (C20461 * C24168 + C39751 * C24169 + (C39760 + C39761) * C154143) *
                 C153722) *
                C153847 -
            ((C38472 * C154143 + C19132 * C24169 + C19133 * C24168) * C153722 +
             (C40246 * C154143 + (C19166 + C19167) * C24169 +
              (C19165 + C19164) * C24168) *
                 C154074) *
                C2058) *
               C153819) *
              C154085 +
          (((((C15550 + C15549) * C24168 + C20461 * C24169 + C39751 * C154143) *
                 C154074 +
             ((C15548 + C15547) * C24168 + C20466 * C24169 +
              (C20487 + C20488) * C154143) *
                 C153722) *
                C153847 -
            ((C19131 * C154143 + C15752 * C24169 + (C14994 + C14993) * C24168) *
                 C153722 +
             (C19132 * C154143 + C19133 * C24169 + (C14992 + C14991) * C24168) *
                 C154074) *
                C2058) *
               C154093 +
           (((C19130 * C24168 + C19138 * C24169 + C38473 * C154143) * C154074 +
             (C18830 * C24168 + C19143 * C24169 + (C19170 + C19171) * C154143) *
                 C153722) *
                C2058 -
            (((C14934 * C4809 + C22265 + C22265 + C153969 * C4815 +
               C14932 * C4170 + C22266 + C22266 + C154109 * C4178) *
                  C154143 +
              (C20488 + C20487) * C24169 + C20066 * C24168) *
                 C153722 +
             ((C39761 + C39760) * C154143 + C39750 * C24169 + C20456 * C24168) *
                 C154074) *
                C153847) *
               C153819) *
              C153754)) /
            (p * q * std::sqrt(p + q));
    d2ee[356] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
             C14938 + C14938 + C153969 * C580) *
                C153865 * C11376 +
            (C14991 + C14992) * C153865 * C11377 + C15005 * C11378 +
            C15006 * C154108) *
               C154166 -
           (C15969 * C154108 + C15970 * C11378 +
            (C15549 + C15550) * C153865 * C11377 +
            (C14934 * C557 + C15495 + C15495 + C153969 * C581 + C14932 * C556 +
             C15496 + C15496 + C154109 * C580) *
                C153865 * C11376) *
               C154167 +
           ((C14932 * C557 + C15497 + C15497 + C154109 * C581 + C14934 * C2272 +
             C15498 + C15498 + C153969 * C2282) *
                C153865 * C11376 +
            (C15551 + C15552) * C153865 * C11377 +
            (C15553 + C15554) * C153865 * C11378 +
            (C15555 + C15556) * C153865 * C154108) *
               C2574) *
              C154093 +
          (((C14932 * C1081 + C16235 + C16235 + C154109 * C1093 +
             C14934 * C1489 + C16236 + C16236 + C153969 * C1499) *
                C153865 * C11376 +
            (C16269 + C16270) * C153865 * C11377 +
            (C16271 + C16272) * C153865 * C11378 +
            (C16273 + C16274) * C153865 * C154108) *
               C154167 -
           (C15759 * C154108 + C15760 * C11378 +
            (C15275 + C15276) * C153865 * C11377 +
            (C14934 * C1081 + C15221 + C15221 + C153969 * C1093 +
             C14932 * C335 + C15222 + C15222 + C154109 * C359) *
                C153865 * C11376) *
               C154166 -
           ((C14934 * C8529 + C16801 + C16801 + C153969 * C8531 +
             C14932 * C1486 + C16802 + C16802 + C154109 * C1496) *
                C153865 * C154108 +
            (C14934 * C6157 + C16803 + C16803 + C153969 * C6169 +
             C14932 * C1487 + C16804 + C16804 + C154109 * C1497) *
                C153865 * C11378 +
            (C14934 * C6159 + C16805 + C16805 + C153969 * C6171 +
             C14932 * C1488 + C16806 + C16806 + C154109 * C1498) *
                C153865 * C11377 +
            (C14934 * C6161 + C16807 + C16807 + C153969 * C6173 +
             C14932 * C1489 + C16808 + C16808 + C154109 * C1499) *
                C153865 * C11376) *
               C2574) *
              C153819) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
              C14938 + C14938 + C153969 * C580) *
                 C24168 +
             (C19164 + C19165) * C24169 + C38471 * C154143) *
                C154074 +
            ((C14991 + C14992) * C24168 + C19130 * C24169 + C19138 * C154143) *
                C153722) *
               C154166 -
           ((C39750 * C154143 + C20456 * C24169 + (C15549 + C15550) * C24168) *
                C153722 +
            (C41531 * C154143 + (C20483 + C20484) * C24169 +
             (C14934 * C557 + C15495 + C15495 + C153969 * C581 + C14932 * C556 +
              C15496 + C15496 + C154109 * C580) *
                 C24168) *
                C154074) *
               C154167 +
           (((C14932 * C557 + C15497 + C15497 + C154109 * C581 +
              C14934 * C2272 + C15498 + C15498 + C153969 * C2282) *
                 C24168 +
             (C21293 + C21294) * C24169 + (C40563 + C40564) * C154143) *
                C154074 +
            ((C15551 + C15552) * C24168 + (C19478 + C19479) * C24169 +
             (C38782 + C38783) * C154143) *
                C153722) *
               C2574) *
              C154093 +
          ((((C20484 + C20483) * C24168 + (C22275 + C22276) * C24169 +
             (C41544 + C41545) * C154143) *
                C154074 +
            (C20461 * C24168 + C39751 * C24169 + (C39760 + C39761) * C154143) *
                C153722) *
               C154167 -
           ((C38472 * C154143 + C19132 * C24169 + C19133 * C24168) * C153722 +
            (C40246 * C154143 + (C19166 + C19167) * C24169 +
             (C19165 + C19164) * C24168) *
                C154074) *
               C154166 -
           (((C14934 * C31684 + C40555 + C40555 + C153969 * C31686 +
              C14932 * C4810 + C40556 + C40556 + C154109 * C4816) *
                 C154143 +
             (C38783 + C38782) * C24169 + (C19479 + C19478) * C24168) *
                C153722 +
            ((C14934 * C29881 + C40557 + C40557 + C153969 * C29885 +
              C14932 * C4811 + C40558 + C40558 + C154109 * C4817) *
                 C154143 +
             (C40564 + C40563) * C24169 + (C21294 + C21293) * C24168) *
                C154074) *
               C2574) *
              C153819) *
         C153748) /
            (p * q * std::sqrt(p + q));
    d2ee[357] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
             C14938 + C14938 + C153969 * C580) *
                C153865 * C11376 +
            (C14991 + C14992) * C153865 * C11377 + C15005 * C11378 +
            C15006 * C154108) *
               C2058 -
           (C15969 * C154108 + C15970 * C11378 +
            (C15549 + C15550) * C153865 * C11377 +
            (C14934 * C557 + C15495 + C15495 + C153969 * C581 + C14932 * C556 +
             C15496 + C15496 + C154109 * C580) *
                C153865 * C11376) *
               C153847) *
              C326 +
          (((C14932 * C1081 + C16235 + C16235 + C154109 * C1093 +
             C14934 * C1489 + C16236 + C16236 + C153969 * C1499) *
                C153865 * C11376 +
            (C16269 + C16270) * C153865 * C11377 +
            (C16271 + C16272) * C153865 * C11378 +
            (C16273 + C16274) * C153865 * C154108) *
               C153847 -
           (C15759 * C154108 + C15760 * C11378 +
            (C15275 + C15276) * C153865 * C11377 +
            (C14934 * C1081 + C15221 + C15221 + C153969 * C1093 +
             C14932 * C335 + C15222 + C15222 + C154109 * C359) *
                C153865 * C11376) *
               C2058) *
              C327 +
          (((C14932 * C336 + C15223 + C15223 + C154109 * C360 + C14934 * C1920 +
             C15224 + C15224 + C153969 * C1930) *
                C153865 * C11376 +
            (C15277 + C15278) * C153865 * C11377 +
            (C15279 + C15280) * C153865 * C11378 +
            (C15281 + C15282) * C153865 * C154108) *
               C2058 -
           ((C14934 * C3372 + C17455 + C17455 + C153969 * C3380 +
             C14932 * C1917 + C17456 + C17456 + C154109 * C1927) *
                C153865 * C154108 +
            (C14934 * C3371 + C17457 + C17457 + C153969 * C3379 +
             C14932 * C1918 + C17458 + C17458 + C154109 * C1928) *
                C153865 * C11378 +
            (C14934 * C3370 + C17459 + C17459 + C153969 * C3378 +
             C14932 * C1919 + C17460 + C17460 + C154109 * C1929) *
                C153865 * C11377 +
            (C14934 * C3369 + C17461 + C17461 + C153969 * C3377 +
             C14932 * C1920 + C17462 + C17462 + C154109 * C1930) *
                C153865 * C11376) *
               C153847) *
              C328) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
             C14938 + C14938 + C153969 * C580) *
                C153865 * C11376 +
            (C14991 + C14992) * C153865 * C11377 + C15005 * C11378 +
            C15006 * C154108) *
               C2058 -
           (C15969 * C154108 + C15970 * C11378 +
            (C15549 + C15550) * C153865 * C11377 +
            (C14934 * C557 + C15495 + C15495 + C153969 * C581 + C14932 * C556 +
             C15496 + C15496 + C154109 * C580) *
                C153865 * C11376) *
               C153847) *
              C153767 * C1253 +
          (((C15550 + C15549) * C153865 * C11376 +
            (C15548 + C15547) * C153865 * C11377 +
            (C15546 + C15545) * C153865 * C11378 +
            (C15975 + C15976) * C153865 * C154108) *
               C153847 -
           (C15007 * C154108 + C15008 * C11378 +
            (C14994 + C14993) * C153865 * C11377 +
            (C14992 + C14991) * C153865 * C11376) *
               C2058) *
              C153767 * C1254 +
          ((C15005 * C11376 + C15006 * C11377 +
            (C14998 + C14997) * C153865 * C11378 +
            (C14999 + C15000) * C153865 * C154108) *
               C2058 -
           ((C14934 * C563 + C15967 + C15967 + C153969 * C587 + C14932 * C562 +
             C15968 + C15968 + C154109 * C586) *
                C153865 * C154108 +
            (C15976 + C15975) * C153865 * C11378 + C15969 * C11377 +
            C15970 * C11376) *
               C153847) *
              C153767 * C1255)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
            C14938 + C14938 + C153969 * C580) *
               C153865 * C11376 +
           (C14991 + C14992) * C153865 * C11377 + C15005 * C11378 +
           C15006 * C154108) *
              C2264 -
          (C15969 * C154108 + C15970 * C11378 +
           (C15549 + C15550) * C153865 * C11377 +
           (C14934 * C557 + C15495 + C15495 + C153969 * C581 + C14932 * C556 +
            C15496 + C15496 + C154109 * C580) *
               C153865 * C11376) *
              C2265 +
          ((C14932 * C557 + C15497 + C15497 + C154109 * C581 + C14934 * C2272 +
            C15498 + C15498 + C153969 * C2282) *
               C153865 * C11376 +
           (C15551 + C15552) * C153865 * C11377 +
           (C15553 + C15554) * C153865 * C11378 +
           (C15555 + C15556) * C153865 * C154108) *
              C2266 -
          ((C14934 * C7668 + C17981 + C17981 + C153969 * C7676 +
            C14932 * C2269 + C17982 + C17982 + C154109 * C2279) *
               C153865 * C154108 +
           (C14934 * C7667 + C17983 + C17983 + C153969 * C7675 +
            C14932 * C2270 + C17984 + C17984 + C154109 * C2280) *
               C153865 * C11378 +
           (C14934 * C7666 + C17985 + C17985 + C153969 * C7674 +
            C14932 * C2271 + C17986 + C17986 + C154109 * C2281) *
               C153865 * C11377 +
           (C14934 * C7665 + C17987 + C17987 + C153969 * C7673 +
            C14932 * C2272 + C17988 + C17988 + C154109 * C2282) *
               C153865 * C11376) *
              C2267) *
         C153767 * C153748) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
              C14938 + C14938 + C153969 * C580) *
                 C24168 +
             (C19164 + C19165) * C24169 + C38471 * C154143) *
                C154074 +
            ((C14991 + C14992) * C24168 + C19130 * C24169 + C19138 * C154143) *
                C153722) *
               C2058 -
           ((C39750 * C154143 + C20456 * C24169 + (C15549 + C15550) * C24168) *
                C153722 +
            (C41531 * C154143 + (C20483 + C20484) * C24169 +
             (C14934 * C557 + C15495 + C15495 + C153969 * C581 + C14932 * C556 +
              C15496 + C15496 + C154109 * C580) *
                 C24168) *
                C154074) *
               C153847) *
              C153767 * C1253 +
          ((((C15550 + C15549) * C24168 + C20461 * C24169 + C39751 * C154143) *
                C154074 +
            ((C15548 + C15547) * C24168 + C20466 * C24169 +
             (C20487 + C20488) * C154143) *
                C153722) *
               C153847 -
           ((C19131 * C154143 + C15752 * C24169 + (C14994 + C14993) * C24168) *
                C153722 +
            (C19132 * C154143 + C19133 * C24169 + (C14992 + C14991) * C24168) *
                C154074) *
               C2058) *
              C153767 * C1254 +
          (((C15001 * C24168 + C18830 * C24169 + C19143 * C154143) * C154074 +
            (C15002 * C24168 + C19774 * C24169 + (C15281 + C15282) * C154143) *
                C153722) *
               C2058 -
           (((C14934 * C3372 + C17455 + C17455 + C153969 * C3380 +
              C14932 * C1917 + C17456 + C17456 + C154109 * C1927) *
                 C154143 +
             (C16274 + C16273) * C24169 + C15961 * C24168) *
                C153722 +
            ((C20488 + C20487) * C154143 + C20066 * C24169 + C15962 * C24168) *
                C154074) *
               C153847) *
              C153767 * C1255)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
              C14938 + C14938 + C153969 * C580) *
                 C24168 +
             (C19164 + C19165) * C24169 + C38471 * C154143) *
                C154074 +
            ((C14991 + C14992) * C24168 + C19130 * C24169 + C19138 * C154143) *
                C153722) *
               C2058 -
           ((C39750 * C154143 + C20456 * C24169 + (C15549 + C15550) * C24168) *
                C153722 +
            (C41531 * C154143 + (C20483 + C20484) * C24169 +
             (C14934 * C557 + C15495 + C15495 + C153969 * C581 + C14932 * C556 +
              C15496 + C15496 + C154109 * C580) *
                 C24168) *
                C154074) *
               C153847) *
              C326 +
          ((((C20484 + C20483) * C24168 + (C22275 + C22276) * C24169 +
             (C41544 + C41545) * C154143) *
                C154074 +
            (C20461 * C24168 + C39751 * C24169 + (C39760 + C39761) * C154143) *
                C153722) *
               C153847 -
           ((C38472 * C154143 + C19132 * C24169 + C19133 * C24168) * C153722 +
            (C40246 * C154143 + (C19166 + C19167) * C24169 +
             (C19165 + C19164) * C24168) *
                C154074) *
               C2058) *
              C327 +
          (((C38471 * C24168 + (C20987 + C20988) * C24169 +
             (C40259 + C40260) * C154143) *
                C154074 +
            (C19138 * C24168 + C38473 * C24169 + (C38482 + C38483) * C154143) *
                C153722) *
               C2058 -
           (((C14934 * C28359 + C41536 + C41536 + C153969 * C28363 +
              C14932 * C5558 + C41537 + C41537 + C154109 * C5564) *
                 C154143 +
             (C39761 + C39760) * C24169 + C39750 * C24168) *
                C153722 +
            ((C14934 * C28358 + C41538 + C41538 + C153969 * C28362 +
              C14932 * C5559 + C41539 + C41539 + C154109 * C5565) *
                 C154143 +
             (C41545 + C41544) * C24169 + C41531 * C24168) *
                C154074) *
               C153847) *
              C328) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
             C14938 + C14938 + C153969 * C580) *
                C24168 +
            (C19164 + C19165) * C24169 + C38471 * C154143) *
               C154074 +
           ((C14991 + C14992) * C24168 + C19130 * C24169 + C19138 * C154143) *
               C153722) *
              C2264 -
          ((C39750 * C154143 + C20456 * C24169 + (C15549 + C15550) * C24168) *
               C153722 +
           (C41531 * C154143 + (C20483 + C20484) * C24169 +
            (C14934 * C557 + C15495 + C15495 + C153969 * C581 + C14932 * C556 +
             C15496 + C15496 + C154109 * C580) *
                C24168) *
               C154074) *
              C2265 +
          (((C14932 * C557 + C15497 + C15497 + C154109 * C581 + C14934 * C2272 +
             C15498 + C15498 + C153969 * C2282) *
                C24168 +
            (C21293 + C21294) * C24169 + (C40563 + C40564) * C154143) *
               C154074 +
           ((C15551 + C15552) * C24168 + (C19478 + C19479) * C24169 +
            (C38782 + C38783) * C154143) *
               C153722) *
              C2266 -
          (((C14934 * C30947 + C42320 + C42320 + C153969 * C30951 +
             C14932 * C6158 + C42321 + C42321 + C154109 * C6170) *
                C154143 +
            (C14934 * C9166 + C23053 + C23053 + C153969 * C9172 +
             C14932 * C6159 + C23054 + C23054 + C154109 * C6171) *
                C24169 +
            (C14934 * C7666 + C17985 + C17985 + C153969 * C7674 +
             C14932 * C2271 + C17986 + C17986 + C154109 * C2281) *
                C24168) *
               C153722 +
           ((C14934 * C30946 + C42322 + C42322 + C153969 * C30950 +
             C14932 * C6160 + C42323 + C42323 + C154109 * C6172) *
                C154143 +
            (C14934 * C9167 + C23055 + C23055 + C153969 * C9173 +
             C14932 * C6161 + C23056 + C23056 + C154109 * C6173) *
                C24169 +
            (C14934 * C7665 + C17987 + C17987 + C153969 * C7673 +
             C14932 * C2272 + C17988 + C17988 + C154109 * C2282) *
                C24168) *
               C154074) *
              C2267) *
         C153767 * C153748) /
            (p * q * std::sqrt(p + q));
    d2ee[358] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
             C14938 + C14938 + C153969 * C580) *
                C153865 * C11376 +
            (C14991 + C14992) * C153865 * C11377 + C15005 * C11378 +
            C15006 * C154108) *
               C154166 -
           (C15969 * C154108 + C15970 * C11378 +
            (C15549 + C15550) * C153865 * C11377 +
            (C14934 * C557 + C15495 + C15495 + C153969 * C581 + C14932 * C556 +
             C15496 + C15496 + C154109 * C580) *
                C153865 * C11376) *
               C154167 +
           ((C14932 * C557 + C15497 + C15497 + C154109 * C581 + C14934 * C2272 +
             C15498 + C15498 + C153969 * C2282) *
                C153865 * C11376 +
            (C15551 + C15552) * C153865 * C11377 +
            (C15553 + C15554) * C153865 * C11378 +
            (C15555 + C15556) * C153865 * C154108) *
               C2574) *
              C153767 * C154085 +
          (((C15550 + C15549) * C153865 * C11376 +
            (C15548 + C15547) * C153865 * C11377 +
            (C15546 + C15545) * C153865 * C11378 +
            (C15975 + C15976) * C153865 * C154108) *
               C154167 -
           (C15007 * C154108 + C15008 * C11378 +
            (C14994 + C14993) * C153865 * C11377 +
            (C14992 + C14991) * C153865 * C11376) *
               C154166 -
           ((C14934 * C2268 + C15519 + C15519 + C153969 * C2278 +
             C14932 * C561 + C15520 + C15520 + C154109 * C585) *
                C153865 * C154108 +
            (C15556 + C15555) * C153865 * C11378 +
            (C15554 + C15553) * C153865 * C11377 +
            (C15552 + C15551) * C153865 * C11376) *
               C2574) *
              C153767 * C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
              C14938 + C14938 + C153969 * C580) *
                 C24168 +
             (C19164 + C19165) * C24169 + C38471 * C154143) *
                C154074 +
            ((C14991 + C14992) * C24168 + C19130 * C24169 + C19138 * C154143) *
                C153722) *
               C154166 -
           ((C39750 * C154143 + C20456 * C24169 + (C15549 + C15550) * C24168) *
                C153722 +
            (C41531 * C154143 + (C20483 + C20484) * C24169 +
             (C14934 * C557 + C15495 + C15495 + C153969 * C581 + C14932 * C556 +
              C15496 + C15496 + C154109 * C580) *
                 C24168) *
                C154074) *
               C154167 +
           (((C14932 * C557 + C15497 + C15497 + C154109 * C581 +
              C14934 * C2272 + C15498 + C15498 + C153969 * C2282) *
                 C24168 +
             (C21293 + C21294) * C24169 + (C40563 + C40564) * C154143) *
                C154074 +
            ((C15551 + C15552) * C24168 + (C19478 + C19479) * C24169 +
             (C38782 + C38783) * C154143) *
                C153722) *
               C2574) *
              C153767 * C154085 +
          ((((C15550 + C15549) * C24168 + C20461 * C24169 + C39751 * C154143) *
                C154074 +
            ((C15548 + C15547) * C24168 + C20466 * C24169 +
             (C20487 + C20488) * C154143) *
                C153722) *
               C154167 -
           ((C19131 * C154143 + C15752 * C24169 + (C14994 + C14993) * C24168) *
                C153722 +
            (C19132 * C154143 + C19133 * C24169 + (C14992 + C14991) * C24168) *
                C154074) *
               C154166 -
           (((C14934 * C6156 + C21283 + C21283 + C153969 * C6168 +
              C14932 * C3371 + C21284 + C21284 + C154109 * C3379) *
                 C154143 +
             (C19481 + C19480) * C24169 + (C15554 + C15553) * C24168) *
                C153722 +
            ((C38783 + C38782) * C154143 + (C19479 + C19478) * C24169 +
             (C15552 + C15551) * C24168) *
                C154074) *
               C2574) *
              C153767 * C153754)) /
            (p * q * std::sqrt(p + q));
    d2ee[359] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
             C14938 + C14938 + C153969 * C580) *
                C153865 * C11376 +
            (C14991 + C14992) * C153865 * C11377 + C15005 * C11378 +
            C15006 * C154108) *
               C2058 -
           (C15969 * C154108 + C15970 * C11378 +
            (C15549 + C15550) * C153865 * C11377 +
            (C14934 * C557 + C15495 + C15495 + C153969 * C581 + C14932 * C556 +
             C15496 + C15496 + C154109 * C580) *
                C153865 * C11376) *
               C153847) *
              C153767 * C1253 +
          (((C15550 + C15549) * C153865 * C11376 +
            (C15548 + C15547) * C153865 * C11377 +
            (C15546 + C15545) * C153865 * C11378 +
            (C15975 + C15976) * C153865 * C154108) *
               C153847 -
           (C15007 * C154108 + C15008 * C11378 +
            (C14994 + C14993) * C153865 * C11377 +
            (C14992 + C14991) * C153865 * C11376) *
               C2058) *
              C153767 * C1254 +
          ((C15005 * C11376 + C15006 * C11377 +
            (C14998 + C14997) * C153865 * C11378 +
            (C14999 + C15000) * C153865 * C154108) *
               C2058 -
           ((C14934 * C563 + C15967 + C15967 + C153969 * C587 + C14932 * C562 +
             C15968 + C15968 + C154109 * C586) *
                C153865 * C154108 +
            (C15976 + C15975) * C153865 * C11378 + C15969 * C11377 +
            C15970 * C11376) *
               C153847) *
              C153767 * C1255)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
             C14938 + C14938 + C153969 * C580) *
                C153865 * C11376 +
            (C14991 + C14992) * C153865 * C11377 + C15005 * C11378 +
            C15006 * C154108) *
               C2058 -
           (C15969 * C154108 + C15970 * C11378 +
            (C15549 + C15550) * C153865 * C11377 +
            (C14934 * C557 + C15495 + C15495 + C153969 * C581 + C14932 * C556 +
             C15496 + C15496 + C154109 * C580) *
                C153865 * C11376) *
               C153847) *
              C326 +
          (((C14932 * C1081 + C16235 + C16235 + C154109 * C1093 +
             C14934 * C1489 + C16236 + C16236 + C153969 * C1499) *
                C153865 * C11376 +
            (C16269 + C16270) * C153865 * C11377 +
            (C16271 + C16272) * C153865 * C11378 +
            (C16273 + C16274) * C153865 * C154108) *
               C153847 -
           (C15759 * C154108 + C15760 * C11378 +
            (C15275 + C15276) * C153865 * C11377 +
            (C14934 * C1081 + C15221 + C15221 + C153969 * C1093 +
             C14932 * C335 + C15222 + C15222 + C154109 * C359) *
                C153865 * C11376) *
               C2058) *
              C327 +
          (((C14932 * C336 + C15223 + C15223 + C154109 * C360 + C14934 * C1920 +
             C15224 + C15224 + C153969 * C1930) *
                C153865 * C11376 +
            (C15277 + C15278) * C153865 * C11377 +
            (C15279 + C15280) * C153865 * C11378 +
            (C15281 + C15282) * C153865 * C154108) *
               C2058 -
           ((C14934 * C3372 + C17455 + C17455 + C153969 * C3380 +
             C14932 * C1917 + C17456 + C17456 + C154109 * C1927) *
                C153865 * C154108 +
            (C14934 * C3371 + C17457 + C17457 + C153969 * C3379 +
             C14932 * C1918 + C17458 + C17458 + C154109 * C1928) *
                C153865 * C11378 +
            (C14934 * C3370 + C17459 + C17459 + C153969 * C3378 +
             C14932 * C1919 + C17460 + C17460 + C154109 * C1929) *
                C153865 * C11377 +
            (C14934 * C3369 + C17461 + C17461 + C153969 * C3377 +
             C14932 * C1920 + C17462 + C17462 + C154109 * C1930) *
                C153865 * C11376) *
               C153847) *
              C328) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
              C14938 + C14938 + C153969 * C580) *
                 C24168 +
             (C19164 + C19165) * C24169 + C38471 * C154143) *
                C154074 +
            ((C14991 + C14992) * C24168 + C19130 * C24169 + C19138 * C154143) *
                C153722) *
               C2058 -
           ((C39750 * C154143 + C20456 * C24169 + (C15549 + C15550) * C24168) *
                C153722 +
            (C41531 * C154143 + (C20483 + C20484) * C24169 +
             (C14934 * C557 + C15495 + C15495 + C153969 * C581 + C14932 * C556 +
              C15496 + C15496 + C154109 * C580) *
                 C24168) *
                C154074) *
               C153847) *
              C153767 * C1253 +
          ((((C15550 + C15549) * C24168 + C20461 * C24169 + C39751 * C154143) *
                C154074 +
            ((C15548 + C15547) * C24168 + C20466 * C24169 +
             (C20487 + C20488) * C154143) *
                C153722) *
               C153847 -
           ((C19131 * C154143 + C15752 * C24169 + (C14994 + C14993) * C24168) *
                C153722 +
            (C19132 * C154143 + C19133 * C24169 + (C14992 + C14991) * C24168) *
                C154074) *
               C2058) *
              C153767 * C1254 +
          (((C15001 * C24168 + C18830 * C24169 + C19143 * C154143) * C154074 +
            (C15002 * C24168 + C19774 * C24169 + (C15281 + C15282) * C154143) *
                C153722) *
               C2058 -
           (((C14934 * C3372 + C17455 + C17455 + C153969 * C3380 +
              C14932 * C1917 + C17456 + C17456 + C154109 * C1927) *
                 C154143 +
             (C16274 + C16273) * C24169 + C15961 * C24168) *
                C153722 +
            ((C20488 + C20487) * C154143 + C20066 * C24169 + C15962 * C24168) *
                C154074) *
               C153847) *
              C153767 * C1255)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C14932 * C136 + C14937 + C14937 + C154109 * C152 + C14934 * C556 +
              C14938 + C14938 + C153969 * C580) *
                 C24168 +
             (C19164 + C19165) * C24169 + C38471 * C154143) *
                C154074 +
            ((C14991 + C14992) * C24168 + C19130 * C24169 + C19138 * C154143) *
                C153722) *
               C2058 -
           ((C39750 * C154143 + C20456 * C24169 + (C15549 + C15550) * C24168) *
                C153722 +
            (C41531 * C154143 + (C20483 + C20484) * C24169 +
             (C14934 * C557 + C15495 + C15495 + C153969 * C581 + C14932 * C556 +
              C15496 + C15496 + C154109 * C580) *
                 C24168) *
                C154074) *
               C153847) *
              C326 +
          ((((C20484 + C20483) * C24168 + (C22275 + C22276) * C24169 +
             (C41544 + C41545) * C154143) *
                C154074 +
            (C20461 * C24168 + C39751 * C24169 + (C39760 + C39761) * C154143) *
                C153722) *
               C153847 -
           ((C38472 * C154143 + C19132 * C24169 + C19133 * C24168) * C153722 +
            (C40246 * C154143 + (C19166 + C19167) * C24169 +
             (C19165 + C19164) * C24168) *
                C154074) *
               C2058) *
              C327 +
          (((C38471 * C24168 + (C20987 + C20988) * C24169 +
             (C40259 + C40260) * C154143) *
                C154074 +
            (C19138 * C24168 + C38473 * C24169 + (C38482 + C38483) * C154143) *
                C153722) *
               C2058 -
           (((C14934 * C28359 + C41536 + C41536 + C153969 * C28363 +
              C14932 * C5558 + C41537 + C41537 + C154109 * C5564) *
                 C154143 +
             (C39761 + C39760) * C24169 + C39750 * C24168) *
                C153722 +
            ((C14934 * C28358 + C41538 + C41538 + C153969 * C28362 +
              C14932 * C5559 + C41539 + C41539 + C154109 * C5565) *
                 C154143 +
             (C41545 + C41544) * C24169 + C41531 * C24168) *
                C154074) *
               C153847) *
              C328) *
         C153748) /
            (p * q * std::sqrt(p + q));
    d2ee[360] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C153865 * C123 +
            C199 * C124 + C200 * C125 + C201 * C126 + C202 * C127) *
               C153783 * C154093 -
           (C420 * C127 + C421 * C126 + C422 * C125 + C423 * C124 +
            (C134 * C335 + C380 + C380 + C153882 * C359) * C153865 * C123) *
               C153783 * C153819) *
              C154162 +
          ((C423 * C123 + C422 * C124 + C421 * C125 + C420 * C126 +
            C785 * C127) *
               C153783 * C153819 -
           (C203 * C127 + C202 * C126 + C201 * C125 + C200 * C124 +
            C199 * C123) *
               C153783 * C154093) *
              C154163 +
          ((C200 * C123 + C201 * C124 + C202 * C125 + C203 * C126 +
            C204 * C127) *
               C153783 * C154093 -
           ((C134 * C775 + C781 + C781 + C153882 * C777) * C153865 * C127 +
            C785 * C126 + C420 * C125 + C421 * C124 + C422 * C123) *
               C153783 * C153819) *
              C774)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C154181 +
             C3138 * C154169 + C3139 * C154143) *
                C2846 +
            (C2850 + C2851 + C2852) * C2847 + C2864 * C154130) *
               C153783 * C154093 -
           (C3650 * C154130 + (C3147 + C3106 + C3107) * C2847 +
            (C3142 * C154143 + C3139 * C154169 + C3138 * C154181) * C2846) *
               C153783 * C153819) *
              C154162 +
          (((C3107 + C3106 + C3147) * C2846 + (C3103 + C3102 + C3146) * C2847 +
            (C3647 + C3648 + C3649) * C154130) *
               C153783 * C153819 -
           (C2865 * C154130 + (C2855 + C2854 + C2853) * C2847 +
            (C2852 + C2851 + C2850) * C2846) *
               C153783 * C154093) *
              C154163 +
          ((C2864 * C2846 + (C2858 + C2857 + C2856) * C2847 +
            (C2859 + C2860 + C2861) * C154130) *
               C153783 * C154093 -
           (((C134 * C1343 + C1359 + C1359 + C153882 * C1353) * C154143 +
             C419 * C154169 + C412 * C154181) *
                C154130 +
            (C3649 + C3648 + C3647) * C2847 + C3650 * C2846) *
               C153783 * C153819) *
              C774)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C24168 +
             C3138 * C24169 + C3139 * C154143) *
                C154178 +
            (C24175 + C24176 + C24177) * C154159 + C24189 * C154130) *
               C153783 * C154093 -
           (C24873 * C154130 + (C24412 + C24413 + C24414) * C154159 +
            (C3142 * C154143 + C3139 * C24169 + C3138 * C24168) * C154178) *
               C153783 * C153819) *
              C154162 +
          (((C24414 + C24413 + C24412) * C154178 +
            (C24411 + C24410 + C24409) * C154159 +
            (C24870 + C24871 + C24872) * C154130) *
               C153783 * C153819 -
           (C24190 * C154130 + (C24180 + C24179 + C24178) * C154159 +
            (C24177 + C24176 + C24175) * C154178) *
               C153783 * C154093) *
              C154163 +
          ((C24189 * C154178 + (C24183 + C24182 + C24181) * C154159 +
            (C24184 + C24185 + C24186) * C154130) *
               C153783 * C154093 -
           (((C134 * C1343 + C1359 + C1359 + C153882 * C1353) * C154143 +
             C419 * C24169 + C412 * C24168) *
                C154130 +
            (C24872 + C24871 + C24870) * C154159 + C24873 * C154178) *
               C153783 * C153819) *
              C774)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C28090 +
            C3138 * C28091 + C3139 * C28092 + C3142 * C28093 + C4591 * C28094) *
               C153712 * C153783 * C154093 -
           (C28235 * C28094 + C4591 * C28093 + C3142 * C28092 + C3139 * C28091 +
            C3138 * C28090) *
               C153712 * C153783 * C153819) *
              C154162 +
          ((C415 * C28090 + C416 * C28091 + C3141 * C28092 + C3143 * C28093 +
            C28236 * C28094) *
               C153712 * C153783 * C153819 -
           (C3143 * C28094 + C3141 * C28093 + C416 * C28092 + C415 * C28091 +
            C193 * C28090) *
               C153712 * C153783 * C154093) *
              C154163 +
          ((C194 * C28090 + C414 * C28091 + C417 * C28092 + C3140 * C28093 +
            C3144 * C28094) *
               C153712 * C153783 * C154093 -
           ((C134 * C4574 + C4586 + C4586 + C153882 * C4580) * C28094 +
            C3144 * C28093 + C3140 * C28092 + C417 * C28091 + C414 * C28090) *
               C153712 * C153783 * C153819) *
              C774)) /
            (p * q * std::sqrt(p + q));
    d2ee[361] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C153865 * C123 +
             C199 * C124 + C200 * C125 + C201 * C126 + C202 * C127) *
                C154094 -
            (C641 * C127 + C642 * C126 + C643 * C125 + C644 * C124 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C153865 * C123) *
                C153847) *
               C154093 +
           (((C134 * C1081 + C1100 + C1100 + C153882 * C1093) * C153865 * C123 +
             C1126 * C124 + C1127 * C125 + C1128 * C126 + C1129 * C127) *
                C153847 -
            (C420 * C127 + C421 * C126 + C422 * C125 + C423 * C124 +
             (C134 * C335 + C380 + C380 + C153882 * C359) * C153865 * C123) *
                C154094) *
               C153819) *
              C329 +
          (((C644 * C123 + C643 * C124 + C642 * C125 + C641 * C126 +
             C919 * C127) *
                C153847 -
            (C203 * C127 + C202 * C126 + C201 * C125 + C200 * C124 +
             C199 * C123) *
                C154094) *
               C154093 +
           ((C423 * C123 + C422 * C124 + C421 * C125 + C420 * C126 +
             C785 * C127) *
                C154094 -
            ((C134 * C1086 + C1113 + C1113 + C153882 * C1098) * C153865 * C127 +
             C1129 * C126 + C1128 * C125 + C1127 * C124 + C1126 * C123) *
                C153847) *
               C153819) *
              C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C153882 * C152) * C154181 +
              C3138 * C154169 + C3139 * C154143) *
                 C2846 +
             (C2850 + C2851 + C2852) * C2847 + C2864 * C154130) *
                C154094 -
            (C3874 * C154130 + (C3423 + C3388 + C3389) * C2847 +
             (C4205 * C154143 + C4206 * C154169 +
              (C134 * C556 + C601 + C601 + C153882 * C580) * C154181) *
                 C2846) *
                C153847) *
               C154093 +
           (((C4206 * C154181 + C4205 * C154169 +
              (C134 * C4168 + C4185 + C4185 + C153882 * C4176) * C154143) *
                 C2846 +
             (C4186 + C4187 + C4209) * C2847 +
             (C4191 + C4192 + C4210) * C154130) *
                C153847 -
            (C3650 * C154130 + (C3147 + C3106 + C3107) * C2847 +
             (C3142 * C154143 + C3139 * C154169 + C3138 * C154181) * C2846) *
                C154094) *
               C153819) *
              C329 +
          ((((C3389 + C3388 + C3423) * C2846 + (C3385 + C3384 + C3422) * C2847 +
             (C3870 + C3871 + C3878) * C154130) *
                C153847 -
            (C2865 * C154130 + (C2855 + C2854 + C2853) * C2847 +
             (C2852 + C2851 + C2850) * C2846) *
                C154094) *
               C154093 +
           (((C3107 + C3106 + C3147) * C2846 + (C3103 + C3102 + C3146) * C2847 +
             (C3647 + C3648 + C3649) * C154130) *
                C154094 -
            (((C134 * C4171 + C4196 + C4196 + C153882 * C4179) * C154143 +
              C3877 * C154169 + C1124 * C154181) *
                 C154130 +
             (C4210 + C4192 + C4191) * C2847 +
             (C4209 + C4187 + C4186) * C2846) *
                C153847) *
               C153819) *
              C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C153882 * C152) * C24168 +
              C3138 * C24169 + C3139 * C154143) *
                 C154178 +
             (C24175 + C24176 + C24177) * C154159 + C24189 * C154130) *
                C154094 -
            (C25096 * C154130 + (C24642 + C24643 + C24644) * C154159 +
             (C4205 * C154143 + C4206 * C24169 +
              (C134 * C556 + C601 + C601 + C153882 * C580) * C24168) *
                 C154178) *
                C153847) *
               C154093 +
           (((C4206 * C24168 + C4205 * C24169 + C5574 * C154143) * C154178 +
             (C25387 + C25388 + C25389) * C154159 +
             (C25390 + C25391 + C25392) * C154130) *
                C153847 -
            (C24873 * C154130 + (C24412 + C24413 + C24414) * C154159 +
             (C3142 * C154143 + C3139 * C24169 + C3138 * C24168) * C154178) *
                C154094) *
               C153819) *
              C329 +
          ((((C24644 + C24643 + C24642) * C154178 +
             (C24641 + C24640 + C24639) * C154159 +
             (C25093 + C25094 + C25095) * C154130) *
                C153847 -
            (C24190 * C154130 + (C24180 + C24179 + C24178) * C154159 +
             (C24177 + C24176 + C24175) * C154178) *
                C154094) *
               C154093 +
           (((C24414 + C24413 + C24412) * C154178 +
             (C24411 + C24410 + C24409) * C154159 +
             (C24870 + C24871 + C24872) * C154130) *
                C154094 -
            (((C134 * C4171 + C4196 + C4196 + C153882 * C4179) * C154143 +
              C3877 * C24169 + C1124 * C24168) *
                 C154130 +
             (C25392 + C25391 + C25390) * C154159 +
             (C25389 + C25388 + C25387) * C154178) *
                C153847) *
               C153819) *
              C153754)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C28090 +
             C3138 * C28091 + C3139 * C28092 + C3142 * C28093 +
             C4591 * C28094) *
                C153712 * C154094 -
            (C28789 * C28094 + C5574 * C28093 + C4205 * C28092 +
             C4206 * C28091 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C28090) *
                C153712 * C153847) *
               C154093 +
           ((C4206 * C28090 + C4205 * C28091 + C5574 * C28092 +
             C28789 * C28093 +
             (C134 * C28772 + C28781 + C28781 + C153882 * C28776) * C28094) *
                C153712 * C153847 -
            (C28235 * C28094 + C4591 * C28093 + C3142 * C28092 +
             C3139 * C28091 + C3138 * C28090) *
                C153712 * C154094) *
               C153819) *
              C329 +
          (((C636 * C28090 + C1122 * C28091 + C3417 * C28092 + C4207 * C28093 +
             C28790 * C28094) *
                C153712 * C153847 -
            (C3143 * C28094 + C3141 * C28093 + C416 * C28092 + C415 * C28091 +
             C193 * C28090) *
                C153712 * C154094) *
               C154093 +
           ((C415 * C28090 + C416 * C28091 + C3141 * C28092 + C3143 * C28093 +
             C28236 * C28094) *
                C153712 * C154094 -
            ((C134 * C28773 + C28784 + C28784 + C153882 * C28777) * C28094 +
             C28790 * C28093 + C4207 * C28092 + C3417 * C28091 +
             C1122 * C28090) *
                C153712 * C153847) *
               C153819) *
              C153754)) /
            (p * q * std::sqrt(p + q));
    d2ee[362] +=
        (-std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C153865 * C123 +
            C199 * C124 + C200 * C125 + C201 * C126 + C202 * C127) *
               C153783 * C326 -
           (C420 * C127 + C421 * C126 + C422 * C125 + C423 * C124 +
            (C134 * C335 + C380 + C380 + C153882 * C359) * C153865 * C123) *
               C153783 * C327 +
           ((C134 * C336 + C381 + C381 + C153882 * C360) * C153865 * C123 +
            C424 * C124 + C425 * C125 + C426 * C126 + C427 * C127) *
               C153783 * C328) *
              C329 +
          ((C423 * C123 + C422 * C124 + C421 * C125 + C420 * C126 +
            (C134 * C341 + C394 + C394 + C153882 * C365) * C153865 * C127) *
               C153783 * C327 -
           (C203 * C127 + C202 * C126 + C201 * C125 + C200 * C124 +
            C199 * C123) *
               C153783 * C326 -
           ((C134 * C342 + C395 + C395 + C153882 * C366) * C153865 * C127 +
            C427 * C126 + C426 * C125 + C425 * C124 + C424 * C123) *
               C153783 * C328) *
              C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C136 + C161 + C161 + C153882 * C152) * C153865 * C123 +
           C199 * C124 + C200 * C125 + C201 * C126 + C202 * C127) *
              C153783 * C153767 * C130 -
          (C203 * C127 + C202 * C126 + C201 * C125 + C200 * C124 +
           C199 * C123) *
              C153783 * C153767 * C131 +
          (C200 * C123 + C201 * C124 + C202 * C125 + C203 * C126 +
           C204 * C127) *
              C153783 * C153767 * C132 -
          ((C134 * C143 + C180 + C180 + C153882 * C159) * C153865 * C127 +
           C204 * C126 + C203 * C125 + C202 * C124 + C201 * C123) *
              C153783 * C153767 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C153865 * C123 +
            C199 * C124 + C200 * C125 + C201 * C126 + C202 * C127) *
               C549 -
           (C641 * C127 + C642 * C126 + C643 * C125 + C644 * C124 +
            (C134 * C556 + C601 + C601 + C153882 * C580) * C153865 * C123) *
               C550 +
           ((C134 * C557 + C602 + C602 + C153882 * C581) * C153865 * C123 +
            C645 * C124 + C646 * C125 + C647 * C126 + C648 * C127) *
               C551) *
              C153767 * C329 +
          ((C644 * C123 + C643 * C124 + C642 * C125 + C641 * C126 +
            (C134 * C562 + C615 + C615 + C153882 * C586) * C153865 * C127) *
               C550 -
           (C203 * C127 + C202 * C126 + C201 * C125 + C200 * C124 +
            C199 * C123) *
               C549 -
           ((C134 * C563 + C616 + C616 + C153882 * C587) * C153865 * C127 +
            C648 * C126 + C647 * C125 + C646 * C124 + C645 * C123) *
               C551) *
              C153767 * C153754)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C154181 +
            (C134 * C335 + C380 + C380 + C153882 * C359) * C154169 +
            (C134 * C336 + C381 + C381 + C153882 * C360) * C154143) *
               C2846 +
           (C2850 + C2851 + C2852) * C2847 + C2864 * C154130) *
              C153783 * C153767 * C130 -
          (C2865 * C154130 + (C2855 + C2854 + C2853) * C2847 +
           (C2852 + C2851 + C2850) * C2846) *
              C153783 * C153767 * C131 +
          (C2864 * C2846 + (C2858 + C2857 + C2856) * C2847 +
           (C2859 + C2860 + C2861) * C154130) *
              C153783 * C153767 * C132 -
          (((C134 * C342 + C395 + C395 + C153882 * C366) * C154143 +
            C784 * C154169 + C197 * C154181) *
               C154130 +
           (C2861 + C2860 + C2859) * C2847 + C2865 * C2846) *
              C153783 * C153767 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C154181 +
             C3138 * C154169 + C3139 * C154143) *
                C2846 +
            (C2850 + C2851 + C2852) * C2847 + C2864 * C154130) *
               C153783 * C326 -
           ((C3146 + C3102 + C3103) * C154130 +
            (C3147 + C3106 + C3107) * C2847 +
            (C3142 * C154143 + C3139 * C154169 + C3138 * C154181) * C2846) *
               C153783 * C327 +
           ((C3139 * C154181 + C3142 * C154169 +
             (C134 * C3083 + C3110 + C3110 + C153882 * C3091) * C154143) *
                C2846 +
            (C3111 + C3148 + C3149) * C2847 +
            (C3115 + C3150 + C3151) * C154130) *
               C153783 * C328) *
              C329 +
          (((C3107 + C3106 + C3147) * C2846 + (C3103 + C3102 + C3146) * C2847 +
            (C413 * C154181 + C418 * C154169 + C3145 * C154143) * C154130) *
               C153783 * C327 -
           (C2865 * C154130 + (C2855 + C2854 + C2853) * C2847 +
            (C2852 + C2851 + C2850) * C2846) *
               C153783 * C326 -
           (((C134 * C3086 + C3121 + C3121 + C153882 * C3094) * C154143 +
             C3145 * C154169 + C418 * C154181) *
                C154130 +
            (C3151 + C3150 + C3115) * C2847 + (C3149 + C3148 + C3111) * C2846) *
               C153783 * C328) *
              C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C154181 +
             C3138 * C154169 + C3139 * C154143) *
                C2846 +
            (C2850 + C2851 + C2852) * C2847 + C2864 * C154130) *
               C549 -
           ((C3422 + C3384 + C3385) * C154130 +
            (C3423 + C3388 + C3389) * C2847 +
            ((C134 * C1920 + C1936 + C1936 + C153882 * C1930) * C154143 +
             (C134 * C1081 + C1100 + C1100 + C153882 * C1093) * C154169 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C154181) *
                C2846) *
               C550 +
           (((C134 * C557 + C602 + C602 + C153882 * C581) * C154181 +
             (C134 * C1489 + C1505 + C1505 + C153882 * C1499) * C154169 +
             (C134 * C3369 + C3390 + C3390 + C153882 * C3377) * C154143) *
                C2846 +
            (C3391 + C3424 + C3425) * C2847 +
            (C3397 + C3426 + C3427) * C154130) *
               C551) *
              C153767 * C329 +
          (((C3389 + C3388 + C3423) * C2846 + (C3385 + C3384 + C3422) * C2847 +
            (C634 * C154181 + C1124 * C154169 +
             (C134 * C1917 + C1933 + C1933 + C153882 * C1927) * C154143) *
                C154130) *
               C550 -
           (C2865 * C154130 + (C2855 + C2854 + C2853) * C2847 +
            (C2852 + C2851 + C2850) * C2846) *
               C549 -
           (((C134 * C3372 + C3403 + C3403 + C153882 * C3380) * C154143 +
             (C134 * C1486 + C1502 + C1502 + C153882 * C1496) * C154169 +
             C639 * C154181) *
                C154130 +
            (C3427 + C3426 + C3397) * C2847 + (C3425 + C3424 + C3391) * C2846) *
               C551) *
              C153767 * C153754)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C24168 +
            C3138 * C24169 + C3139 * C154143) *
               C154178 +
           (C24175 + C24176 + C24177) * C154159 + C24189 * C154130) *
              C153783 * C153767 * C130 -
          (C24190 * C154130 + (C24180 + C24179 + C24178) * C154159 +
           (C24177 + C24176 + C24175) * C154178) *
              C153783 * C153767 * C131 +
          (C24189 * C154178 + (C24183 + C24182 + C24181) * C154159 +
           (C24184 + C24185 + C24186) * C154130) *
              C153783 * C153767 * C132 -
          (((C134 * C342 + C395 + C395 + C153882 * C366) * C154143 +
            C784 * C24169 + C197 * C24168) *
               C154130 +
           (C24186 + C24185 + C24184) * C154159 + C24190 * C154178) *
              C153783 * C153767 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C24168 +
             C3138 * C24169 + C3139 * C154143) *
                C154178 +
            (C24175 + C24176 + C24177) * C154159 + C24189 * C154130) *
               C153783 * C326 -
           ((C24409 + C24410 + C24411) * C154130 +
            (C24412 + C24413 + C24414) * C154159 +
            (C3142 * C154143 + C3139 * C24169 + C3138 * C24168) * C154178) *
               C153783 * C327 +
           ((C3139 * C24168 + C3142 * C24169 + C4591 * C154143) * C154178 +
            (C24415 + C24416 + C24417) * C154159 +
            (C24418 + C24419 + C24420) * C154130) *
               C153783 * C328) *
              C329 +
          (((C24414 + C24413 + C24412) * C154178 +
            (C24411 + C24410 + C24409) * C154159 +
            (C413 * C24168 + C418 * C24169 + C3145 * C154143) * C154130) *
               C153783 * C327 -
           (C24190 * C154130 + (C24180 + C24179 + C24178) * C154159 +
            (C24177 + C24176 + C24175) * C154178) *
               C153783 * C326 -
           (((C134 * C3086 + C3121 + C3121 + C153882 * C3094) * C154143 +
             C3145 * C24169 + C418 * C24168) *
                C154130 +
            (C24420 + C24419 + C24418) * C154159 +
            (C24417 + C24416 + C24415) * C154178) *
               C153783 * C328) *
              C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C24168 +
             C3138 * C24169 + C3139 * C154143) *
                C154178 +
            (C24175 + C24176 + C24177) * C154159 + C24189 * C154130) *
               C549 -
           ((C24639 + C24640 + C24641) * C154130 +
            (C24642 + C24643 + C24644) * C154159 +
            (C4205 * C154143 + C4206 * C24169 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C24168) *
                C154178) *
               C550 +
           (((C134 * C557 + C602 + C602 + C153882 * C581) * C24168 +
             C4830 * C24169 + C4831 * C154143) *
                C154178 +
            (C24645 + C24646 + C24647) * C154159 +
            (C24648 + C24649 + C24650) * C154130) *
               C551) *
              C153767 * C329 +
          (((C24644 + C24643 + C24642) * C154178 +
            (C24641 + C24640 + C24639) * C154159 +
            (C634 * C24168 + C1124 * C24169 + C3877 * C154143) * C154130) *
               C550 -
           (C24190 * C154130 + (C24180 + C24179 + C24178) * C154159 +
            (C24177 + C24176 + C24175) * C154178) *
               C549 -
           (((C134 * C3372 + C3403 + C3403 + C153882 * C3380) * C154143 +
             C11810 * C24169 + C639 * C24168) *
                C154130 +
            (C24650 + C24649 + C24648) * C154159 +
            (C24647 + C24646 + C24645) * C154178) *
               C551) *
              C153767 * C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C136 + C161 + C161 + C153882 * C152) * C28090 +
           C3138 * C28091 + C3139 * C28092 + C3142 * C28093 + C4591 * C28094) *
              C153712 * C153783 * C153767 * C130 -
          (C3143 * C28094 + C3141 * C28093 + C416 * C28092 + C415 * C28091 +
           C193 * C28090) *
              C153712 * C153783 * C153767 * C131 +
          (C194 * C28090 + C414 * C28091 + C417 * C28092 + C3140 * C28093 +
           C3144 * C28094) *
              C153712 * C153783 * C153767 * C132 -
          ((C134 * C3086 + C3121 + C3121 + C153882 * C3094) * C28094 +
           C3145 * C28093 + C418 * C28092 + C413 * C28091 + C195 * C28090) *
              C153712 * C153783 * C153767 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C28090 +
            C3138 * C28091 + C3139 * C28092 + C3142 * C28093 + C4591 * C28094) *
               C153712 * C153783 * C326 -
           (C28235 * C28094 + C4591 * C28093 + C3142 * C28092 + C3139 * C28091 +
            C3138 * C28090) *
               C153712 * C153783 * C327 +
           (C3139 * C28090 + C3142 * C28091 + C4591 * C28092 + C28235 * C28093 +
            (C134 * C28218 + C28227 + C28227 + C153882 * C28222) * C28094) *
               C153712 * C153783 * C328) *
              C329 +
          ((C415 * C28090 + C416 * C28091 + C3141 * C28092 + C3143 * C28093 +
            C28236 * C28094) *
               C153712 * C153783 * C327 -
           (C3143 * C28094 + C3141 * C28093 + C416 * C28092 + C415 * C28091 +
            C193 * C28090) *
               C153712 * C153783 * C326 -
           ((C134 * C28219 + C28230 + C28230 + C153882 * C28223) * C28094 +
            C28236 * C28093 + C3143 * C28092 + C3141 * C28091 + C416 * C28090) *
               C153712 * C153783 * C328) *
              C153754)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C28090 +
            C3138 * C28091 + C3139 * C28092 + C3142 * C28093 + C4591 * C28094) *
               C153712 * C549 -
           ((C134 * C5559 + C5571 + C5571 + C153882 * C5565) * C28094 +
            C5574 * C28093 + C4205 * C28092 + C4206 * C28091 +
            (C134 * C556 + C601 + C601 + C153882 * C580) * C28090) *
               C153712 * C550 +
           ((C134 * C557 + C602 + C602 + C153882 * C581) * C28090 +
            C4830 * C28091 + C4831 * C28092 +
            (C134 * C4811 + C4825 + C4825 + C153882 * C4817) * C28093 +
            (C134 * C28358 + C28365 + C28365 + C153882 * C28362) * C28094) *
               C153712 * C551) *
              C153767 * C329 +
          ((C636 * C28090 + C1122 * C28091 + C3417 * C28092 + C4207 * C28093 +
            (C134 * C5558 + C5570 + C5570 + C153882 * C5564) * C28094) *
               C153712 * C550 -
           (C3143 * C28094 + C3141 * C28093 + C416 * C28092 + C415 * C28091 +
            C193 * C28090) *
               C153712 * C549 -
           ((C134 * C28359 + C28366 + C28366 + C153882 * C28363) * C28094 +
            (C134 * C4810 + C4824 + C4824 + C153882 * C4816) * C28093 +
            C3419 * C28092 + C3418 * C28091 + C637 * C28090) *
               C153712 * C551) *
              C153767 * C153754)) /
            (p * q * std::sqrt(p + q));
    d2ee[363] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C153865 * C123 +
            C199 * C124 + C200 * C125 + C201 * C126 + C202 * C127) *
               C154094 -
           (C641 * C127 + C642 * C126 + C643 * C125 + C644 * C124 +
            (C134 * C556 + C601 + C601 + C153882 * C580) * C153865 * C123) *
               C153847) *
              C153767 * C154162 +
          ((C644 * C123 + C643 * C124 + C642 * C125 + C641 * C126 +
            C919 * C127) *
               C153847 -
           (C203 * C127 + C202 * C126 + C201 * C125 + C200 * C124 +
            C199 * C123) *
               C154094) *
              C153767 * C154163 +
          ((C200 * C123 + C201 * C124 + C202 * C125 + C203 * C126 +
            C204 * C127) *
               C154094 -
           ((C134 * C909 + C915 + C915 + C153882 * C911) * C153865 * C127 +
            C919 * C126 + C641 * C125 + C642 * C124 + C643 * C123) *
               C153847) *
              C153767 * C774)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C154181 +
             C3138 * C154169 + C3139 * C154143) *
                C2846 +
            (C2850 + C2851 + C2852) * C2847 + C2864 * C154130) *
               C154094 -
           (C3874 * C154130 + (C3423 + C3388 + C3389) * C2847 +
            ((C134 * C1920 + C1936 + C1936 + C153882 * C1930) * C154143 +
             (C134 * C1081 + C1100 + C1100 + C153882 * C1093) * C154169 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C154181) *
                C2846) *
               C153847) *
              C153767 * C154162 +
          (((C3389 + C3388 + C3423) * C2846 + (C3385 + C3384 + C3422) * C2847 +
            (C3870 + C3871 + C3878) * C154130) *
               C153847 -
           (C2865 * C154130 + (C2855 + C2854 + C2853) * C2847 +
            (C2852 + C2851 + C2850) * C2846) *
               C154094) *
              C153767 * C154163 +
          ((C2864 * C2846 + (C2858 + C2857 + C2856) * C2847 +
            (C2859 + C2860 + C2861) * C154130) *
               C154094 -
           (((C134 * C1916 + C1932 + C1932 + C153882 * C1926) * C154143 +
             C1125 * C154169 + C633 * C154181) *
                C154130 +
            (C3878 + C3871 + C3870) * C2847 + C3874 * C2846) *
               C153847) *
              C153767 * C774)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C24168 +
             C3138 * C24169 + C3139 * C154143) *
                C154178 +
            (C24175 + C24176 + C24177) * C154159 + C24189 * C154130) *
               C154094 -
           (C25096 * C154130 + (C24642 + C24643 + C24644) * C154159 +
            (C4205 * C154143 + C4206 * C24169 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C24168) *
                C154178) *
               C153847) *
              C153767 * C154162 +
          (((C24644 + C24643 + C24642) * C154178 +
            (C24641 + C24640 + C24639) * C154159 +
            (C25093 + C25094 + C25095) * C154130) *
               C153847 -
           (C24190 * C154130 + (C24180 + C24179 + C24178) * C154159 +
            (C24177 + C24176 + C24175) * C154178) *
               C154094) *
              C153767 * C154163 +
          ((C24189 * C154178 + (C24183 + C24182 + C24181) * C154159 +
            (C24184 + C24185 + C24186) * C154130) *
               C154094 -
           (((C134 * C1916 + C1932 + C1932 + C153882 * C1926) * C154143 +
             C1125 * C24169 + C633 * C24168) *
                C154130 +
            (C25095 + C25094 + C25093) * C154159 + C25096 * C154178) *
               C153847) *
              C153767 * C774)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C28090 +
            C3138 * C28091 + C3139 * C28092 + C3142 * C28093 + C4591 * C28094) *
               C153712 * C154094 -
           ((C134 * C5559 + C5571 + C5571 + C153882 * C5565) * C28094 +
            C5574 * C28093 + C4205 * C28092 + C4206 * C28091 +
            (C134 * C556 + C601 + C601 + C153882 * C580) * C28090) *
               C153712 * C153847) *
              C153767 * C154162 +
          ((C636 * C28090 + C1122 * C28091 + C3417 * C28092 + C4207 * C28093 +
            (C134 * C5558 + C5570 + C5570 + C153882 * C5564) * C28094) *
               C153712 * C153847 -
           (C3143 * C28094 + C3141 * C28093 + C416 * C28092 + C415 * C28091 +
            C193 * C28090) *
               C153712 * C154094) *
              C153767 * C154163 +
          ((C194 * C28090 + C414 * C28091 + C417 * C28092 + C3140 * C28093 +
            C3144 * C28094) *
               C153712 * C154094 -
           ((C134 * C5557 + C5569 + C5569 + C153882 * C5563) * C28094 +
            C4208 * C28093 + C3416 * C28092 + C1123 * C28091 + C635 * C28090) *
               C153712 * C153847) *
              C153767 * C774)) /
            (p * q * std::sqrt(p + q));
    d2ee[364] +=
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C136 + C161 + C161 + C153882 * C152) * C153865 * C123 +
           C199 * C124 + C200 * C125 + C201 * C126 + C202 * C127) *
              C153783 * C153767 * C130 -
          (C203 * C127 + C202 * C126 + C201 * C125 + C200 * C124 +
           C199 * C123) *
              C153783 * C153767 * C131 +
          (C200 * C123 + C201 * C124 + C202 * C125 + C203 * C126 +
           C204 * C127) *
              C153783 * C153767 * C132 -
          ((C134 * C143 + C180 + C180 + C153882 * C159) * C153865 * C127 +
           C204 * C126 + C203 * C125 + C202 * C124 + C201 * C123) *
              C153783 * C153767 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C153865 * C123 +
            C199 * C124 + C200 * C125 + C201 * C126 + C202 * C127) *
               C153783 * C326 -
           (C420 * C127 + C421 * C126 + C422 * C125 + C423 * C124 +
            (C134 * C335 + C380 + C380 + C153882 * C359) * C153865 * C123) *
               C153783 * C327 +
           ((C134 * C336 + C381 + C381 + C153882 * C360) * C153865 * C123 +
            C424 * C124 + C425 * C125 + C426 * C126 + C427 * C127) *
               C153783 * C328) *
              C329 +
          ((C423 * C123 + C422 * C124 + C421 * C125 + C420 * C126 +
            (C134 * C341 + C394 + C394 + C153882 * C365) * C153865 * C127) *
               C153783 * C327 -
           (C203 * C127 + C202 * C126 + C201 * C125 + C200 * C124 +
            C199 * C123) *
               C153783 * C326 -
           ((C134 * C342 + C395 + C395 + C153882 * C366) * C153865 * C127 +
            C427 * C126 + C426 * C125 + C425 * C124 + C424 * C123) *
               C153783 * C328) *
              C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C154181 +
            (C134 * C335 + C380 + C380 + C153882 * C359) * C154169 +
            (C134 * C336 + C381 + C381 + C153882 * C360) * C154143) *
               C2846 +
           (C2850 + C2851 + C2852) * C2847 + C2864 * C154130) *
              C153783 * C153767 * C130 -
          (C2865 * C154130 + (C2855 + C2854 + C2853) * C2847 +
           (C2852 + C2851 + C2850) * C2846) *
              C153783 * C153767 * C131 +
          (C2864 * C2846 + (C2858 + C2857 + C2856) * C2847 +
           (C2859 + C2860 + C2861) * C154130) *
              C153783 * C153767 * C132 -
          (((C134 * C342 + C395 + C395 + C153882 * C366) * C154143 +
            C784 * C154169 + C197 * C154181) *
               C154130 +
           (C2861 + C2860 + C2859) * C2847 + C2865 * C2846) *
              C153783 * C153767 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C154181 +
             C3138 * C154169 + C3139 * C154143) *
                C2846 +
            (C2850 + C2851 + C2852) * C2847 + C2864 * C154130) *
               C153783 * C326 -
           ((C3146 + C3102 + C3103) * C154130 +
            (C3147 + C3106 + C3107) * C2847 +
            (C3142 * C154143 + C3139 * C154169 + C3138 * C154181) * C2846) *
               C153783 * C327 +
           ((C3139 * C154181 + C3142 * C154169 +
             (C134 * C3083 + C3110 + C3110 + C153882 * C3091) * C154143) *
                C2846 +
            (C3111 + C3148 + C3149) * C2847 +
            (C3115 + C3150 + C3151) * C154130) *
               C153783 * C328) *
              C329 +
          (((C3107 + C3106 + C3147) * C2846 + (C3103 + C3102 + C3146) * C2847 +
            (C413 * C154181 + C418 * C154169 + C3145 * C154143) * C154130) *
               C153783 * C327 -
           (C2865 * C154130 + (C2855 + C2854 + C2853) * C2847 +
            (C2852 + C2851 + C2850) * C2846) *
               C153783 * C326 -
           (((C134 * C3086 + C3121 + C3121 + C153882 * C3094) * C154143 +
             C3145 * C154169 + C418 * C154181) *
                C154130 +
            (C3151 + C3150 + C3115) * C2847 + (C3149 + C3148 + C3111) * C2846) *
               C153783 * C328) *
              C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C24168 +
            C3138 * C24169 + C3139 * C154143) *
               C154178 +
           (C24175 + C24176 + C24177) * C154159 + C24189 * C154130) *
              C153783 * C153767 * C130 -
          (C24190 * C154130 + (C24180 + C24179 + C24178) * C154159 +
           (C24177 + C24176 + C24175) * C154178) *
              C153783 * C153767 * C131 +
          (C24189 * C154178 + (C24183 + C24182 + C24181) * C154159 +
           (C24184 + C24185 + C24186) * C154130) *
              C153783 * C153767 * C132 -
          (((C134 * C342 + C395 + C395 + C153882 * C366) * C154143 +
            C784 * C24169 + C197 * C24168) *
               C154130 +
           (C24186 + C24185 + C24184) * C154159 + C24190 * C154178) *
              C153783 * C153767 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C24168 +
             C3138 * C24169 + C3139 * C154143) *
                C154178 +
            (C24175 + C24176 + C24177) * C154159 + C24189 * C154130) *
               C153783 * C326 -
           ((C24409 + C24410 + C24411) * C154130 +
            (C24412 + C24413 + C24414) * C154159 +
            (C3142 * C154143 + C3139 * C24169 + C3138 * C24168) * C154178) *
               C153783 * C327 +
           ((C3139 * C24168 + C3142 * C24169 + C4591 * C154143) * C154178 +
            (C24415 + C24416 + C24417) * C154159 +
            (C24418 + C24419 + C24420) * C154130) *
               C153783 * C328) *
              C329 +
          (((C24414 + C24413 + C24412) * C154178 +
            (C24411 + C24410 + C24409) * C154159 +
            (C413 * C24168 + C418 * C24169 + C3145 * C154143) * C154130) *
               C153783 * C327 -
           (C24190 * C154130 + (C24180 + C24179 + C24178) * C154159 +
            (C24177 + C24176 + C24175) * C154178) *
               C153783 * C326 -
           (((C134 * C3086 + C3121 + C3121 + C153882 * C3094) * C154143 +
             C3145 * C24169 + C418 * C24168) *
                C154130 +
            (C24420 + C24419 + C24418) * C154159 +
            (C24417 + C24416 + C24415) * C154178) *
               C153783 * C328) *
              C153754)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C136 + C161 + C161 + C153882 * C152) * C28090 +
           C3138 * C28091 + C3139 * C28092 + C3142 * C28093 + C4591 * C28094) *
              C153712 * C153783 * C153767 * C130 -
          (C3143 * C28094 + C3141 * C28093 + C416 * C28092 + C415 * C28091 +
           C193 * C28090) *
              C153712 * C153783 * C153767 * C131 +
          (C194 * C28090 + C414 * C28091 + C417 * C28092 + C3140 * C28093 +
           C3144 * C28094) *
              C153712 * C153783 * C153767 * C132 -
          ((C134 * C3086 + C3121 + C3121 + C153882 * C3094) * C28094 +
           C3145 * C28093 + C418 * C28092 + C413 * C28091 + C195 * C28090) *
              C153712 * C153783 * C153767 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C28090 +
            C3138 * C28091 + C3139 * C28092 + C3142 * C28093 + C4591 * C28094) *
               C153712 * C153783 * C326 -
           (C28235 * C28094 + C4591 * C28093 + C3142 * C28092 + C3139 * C28091 +
            C3138 * C28090) *
               C153712 * C153783 * C327 +
           (C3139 * C28090 + C3142 * C28091 + C4591 * C28092 + C28235 * C28093 +
            (C134 * C28218 + C28227 + C28227 + C153882 * C28222) * C28094) *
               C153712 * C153783 * C328) *
              C329 +
          ((C415 * C28090 + C416 * C28091 + C3141 * C28092 + C3143 * C28093 +
            C28236 * C28094) *
               C153712 * C153783 * C327 -
           (C3143 * C28094 + C3141 * C28093 + C416 * C28092 + C415 * C28091 +
            C193 * C28090) *
               C153712 * C153783 * C326 -
           ((C134 * C28219 + C28230 + C28230 + C153882 * C28223) * C28094 +
            C28236 * C28093 + C3143 * C28092 + C3141 * C28091 + C416 * C28090) *
               C153712 * C153783 * C328) *
              C153754)) /
            (p * q * std::sqrt(p + q));
    d2ee[365] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C153865 * C123 +
            C199 * C124 + C200 * C125 + C201 * C126 + C202 * C127) *
               C153783 * C154164 -
           (C420 * C127 + C421 * C126 + C422 * C125 + C423 * C124 +
            (C134 * C335 + C380 + C380 + C153882 * C359) * C153865 * C123) *
               C153783 * C154165 +
           ((C134 * C336 + C381 + C381 + C153882 * C360) * C153865 * C123 +
            C424 * C124 + C425 * C125 + C426 * C126 + C427 * C127) *
               C153783 * C1629) *
              C154085 +
          ((C423 * C123 + C422 * C124 + C421 * C125 + C420 * C126 +
            C785 * C127) *
               C153783 * C154165 -
           (C203 * C127 + C202 * C126 + C201 * C125 + C200 * C124 +
            C199 * C123) *
               C153783 * C154164 -
           ((C134 * C342 + C395 + C395 + C153882 * C366) * C153865 * C127 +
            C427 * C126 + C426 * C125 + C425 * C124 + C424 * C123) *
               C153783 * C1629) *
              C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C154181 +
             C3138 * C154169 + C3139 * C154143) *
                C2846 +
            (C2850 + C2851 + C2852) * C2847 + C2864 * C154130) *
               C153783 * C154164 -
           (C3650 * C154130 + (C3147 + C3106 + C3107) * C2847 +
            (C3142 * C154143 + C3139 * C154169 + C3138 * C154181) * C2846) *
               C153783 * C154165 +
           ((C3139 * C154181 + C3142 * C154169 + C4591 * C154143) * C2846 +
            (C3111 + C3148 + C3149) * C2847 +
            (C3115 + C3150 + C3151) * C154130) *
               C153783 * C1629) *
              C154085 +
          (((C3107 + C3106 + C3147) * C2846 + (C3103 + C3102 + C3146) * C2847 +
            (C3647 + C3648 + C3649) * C154130) *
               C153783 * C154165 -
           (C2865 * C154130 + (C2855 + C2854 + C2853) * C2847 +
            (C2852 + C2851 + C2850) * C2846) *
               C153783 * C154164 -
           (((C134 * C3086 + C3121 + C3121 + C153882 * C3094) * C154143 +
             C3145 * C154169 + C418 * C154181) *
                C154130 +
            (C3151 + C3150 + C3115) * C2847 + (C3149 + C3148 + C3111) * C2846) *
               C153783 * C1629) *
              C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C24168 +
             C3138 * C24169 + C3139 * C154143) *
                C154178 +
            (C24175 + C24176 + C24177) * C154159 + C24189 * C154130) *
               C153783 * C154164 -
           (C24873 * C154130 + (C24412 + C24413 + C24414) * C154159 +
            (C3142 * C154143 + C3139 * C24169 + C3138 * C24168) * C154178) *
               C153783 * C154165 +
           ((C3139 * C24168 + C3142 * C24169 + C4591 * C154143) * C154178 +
            (C24415 + C24416 + C24417) * C154159 +
            (C24418 + C24419 + C24420) * C154130) *
               C153783 * C1629) *
              C154085 +
          (((C24414 + C24413 + C24412) * C154178 +
            (C24411 + C24410 + C24409) * C154159 +
            (C24870 + C24871 + C24872) * C154130) *
               C153783 * C154165 -
           (C24190 * C154130 + (C24180 + C24179 + C24178) * C154159 +
            (C24177 + C24176 + C24175) * C154178) *
               C153783 * C154164 -
           (((C134 * C3086 + C3121 + C3121 + C153882 * C3094) * C154143 +
             C3145 * C24169 + C418 * C24168) *
                C154130 +
            (C24420 + C24419 + C24418) * C154159 +
            (C24417 + C24416 + C24415) * C154178) *
               C153783 * C1629) *
              C153754)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C28090 +
            C3138 * C28091 + C3139 * C28092 + C3142 * C28093 + C4591 * C28094) *
               C153712 * C153783 * C154164 -
           (C28235 * C28094 + C4591 * C28093 + C3142 * C28092 + C3139 * C28091 +
            C3138 * C28090) *
               C153712 * C153783 * C154165 +
           (C3139 * C28090 + C3142 * C28091 + C4591 * C28092 + C28235 * C28093 +
            C29003 * C28094) *
               C153712 * C153783 * C1629) *
              C154085 +
          ((C415 * C28090 + C416 * C28091 + C3141 * C28092 + C3143 * C28093 +
            C28236 * C28094) *
               C153712 * C153783 * C154165 -
           (C3143 * C28094 + C3141 * C28093 + C416 * C28092 + C415 * C28091 +
            C193 * C28090) *
               C153712 * C153783 * C154164 -
           ((C134 * C28219 + C28230 + C28230 + C153882 * C28223) * C28094 +
            C28236 * C28093 + C3143 * C28092 + C3141 * C28091 + C416 * C28090) *
               C153712 * C153783 * C1629) *
              C153754)) /
            (p * q * std::sqrt(p + q));
    d2ee[366] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C153865 * C123 +
            C199 * C124 + C200 * C125 + C201 * C126 + C202 * C127) *
               C154094 -
           (C641 * C127 + C642 * C126 + C643 * C125 + C644 * C124 +
            (C134 * C556 + C601 + C601 + C153882 * C580) * C153865 * C123) *
               C153847) *
              C154164 +
          (((C134 * C1081 + C1100 + C1100 + C153882 * C1093) * C153865 * C123 +
            C1126 * C124 + C1127 * C125 + C1128 * C126 + C1129 * C127) *
               C153847 -
           (C420 * C127 + C421 * C126 + C422 * C125 + C423 * C124 +
            (C134 * C335 + C380 + C380 + C153882 * C359) * C153865 * C123) *
               C154094) *
              C154165 +
          (((C134 * C336 + C381 + C381 + C153882 * C360) * C153865 * C123 +
            C424 * C124 + C425 * C125 + C426 * C126 + C427 * C127) *
               C154094 -
           ((C134 * C1916 + C1932 + C1932 + C153882 * C1926) * C153865 * C127 +
            (C134 * C1917 + C1933 + C1933 + C153882 * C1927) * C153865 * C126 +
            (C134 * C1918 + C1934 + C1934 + C153882 * C1928) * C153865 * C125 +
            (C134 * C1919 + C1935 + C1935 + C153882 * C1929) * C153865 * C124 +
            (C134 * C1920 + C1936 + C1936 + C153882 * C1930) * C153865 * C123) *
               C153847) *
              C1629) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C154181 +
             C3138 * C154169 + C3139 * C154143) *
                C2846 +
            (C2850 + C2851 + C2852) * C2847 + C2864 * C154130) *
               C154094 -
           (C3874 * C154130 + (C3423 + C3388 + C3389) * C2847 +
            (C4205 * C154143 + C4206 * C154169 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C154181) *
                C2846) *
               C153847) *
              C154164 +
          (((C4206 * C154181 + C4205 * C154169 + C5574 * C154143) * C2846 +
            (C4186 + C4187 + C4209) * C2847 +
            (C4191 + C4192 + C4210) * C154130) *
               C153847 -
           (C3650 * C154130 + (C3147 + C3106 + C3107) * C2847 +
            (C3142 * C154143 + C3139 * C154169 + C3138 * C154181) * C2846) *
               C154094) *
              C154165 +
          (((C3139 * C154181 + C3142 * C154169 + C4591 * C154143) * C2846 +
            (C3111 + C3148 + C3149) * C2847 +
            (C3115 + C3150 + C3151) * C154130) *
               C154094 -
           (((C134 * C5557 + C5569 + C5569 + C153882 * C5563) * C154143 +
             C4208 * C154169 + C3416 * C154181) *
                C154130 +
            ((C134 * C5558 + C5570 + C5570 + C153882 * C5564) * C154143 +
             C4207 * C154169 + C3417 * C154181) *
                C2847 +
            ((C134 * C5559 + C5571 + C5571 + C153882 * C5565) * C154143 +
             C5574 * C154169 + C4205 * C154181) *
                C2846) *
               C153847) *
              C1629) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C24168 +
             C3138 * C24169 + C3139 * C154143) *
                C154178 +
            (C24175 + C24176 + C24177) * C154159 + C24189 * C154130) *
               C154094 -
           (C25096 * C154130 + (C24642 + C24643 + C24644) * C154159 +
            (C4205 * C154143 + C4206 * C24169 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C24168) *
                C154178) *
               C153847) *
              C154164 +
          (((C4206 * C24168 + C4205 * C24169 + C5574 * C154143) * C154178 +
            (C25387 + C25388 + C25389) * C154159 +
            (C25390 + C25391 + C25392) * C154130) *
               C153847 -
           (C24873 * C154130 + (C24412 + C24413 + C24414) * C154159 +
            (C3142 * C154143 + C3139 * C24169 + C3138 * C24168) * C154178) *
               C154094) *
              C154165 +
          (((C3139 * C24168 + C3142 * C24169 + C4591 * C154143) * C154178 +
            (C24415 + C24416 + C24417) * C154159 +
            (C24418 + C24419 + C24420) * C154130) *
               C154094 -
           (((C134 * C5557 + C5569 + C5569 + C153882 * C5563) * C154143 +
             C4208 * C24169 + C3416 * C24168) *
                C154130 +
            ((C134 * C5558 + C5570 + C5570 + C153882 * C5564) * C154143 +
             C4207 * C24169 + C3417 * C24168) *
                C154159 +
            ((C134 * C5559 + C5571 + C5571 + C153882 * C5565) * C154143 +
             C5574 * C24169 + C4205 * C24168) *
                C154178) *
               C153847) *
              C1629) *
         C153748) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C28090 +
            C3138 * C28091 + C3139 * C28092 + C3142 * C28093 + C4591 * C28094) *
               C153712 * C154094 -
           (C28789 * C28094 + C5574 * C28093 + C4205 * C28092 + C4206 * C28091 +
            (C134 * C556 + C601 + C601 + C153882 * C580) * C28090) *
               C153712 * C153847) *
              C154164 +
          ((C4206 * C28090 + C4205 * C28091 + C5574 * C28092 + C28789 * C28093 +
            C29554 * C28094) *
               C153712 * C153847 -
           (C28235 * C28094 + C4591 * C28093 + C3142 * C28092 + C3139 * C28091 +
            C3138 * C28090) *
               C153712 * C154094) *
              C154165 +
          ((C3139 * C28090 + C3142 * C28091 + C4591 * C28092 + C28235 * C28093 +
            C29003 * C28094) *
               C153712 * C154094 -
           ((C134 * C29545 + C29551 + C29551 + C153882 * C29547) * C28094 +
            C29554 * C28093 + C28789 * C28092 + C5574 * C28091 +
            C4205 * C28090) *
               C153712 * C153847) *
              C1629) *
         C153748) /
            (p * q * std::sqrt(p + q));
    d2ee[367] +=
        (-std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C136 + C161 + C161 + C153882 * C152) * C153865 * C123 +
           C199 * C124 + C200 * C125 + C201 * C126 + C202 * C127) *
              C153783 * C1338 -
          (C420 * C127 + C421 * C126 + C422 * C125 + C423 * C124 +
           (C134 * C335 + C380 + C380 + C153882 * C359) * C153865 * C123) *
              C153783 * C1339 +
          ((C134 * C336 + C381 + C381 + C153882 * C360) * C153865 * C123 +
           C424 * C124 + C425 * C125 + C426 * C126 + C427 * C127) *
              C153783 * C1340 -
          ((C134 * C1343 + C1359 + C1359 + C153882 * C1353) * C153865 * C127 +
           (C134 * C1344 + C1360 + C1360 + C153882 * C1354) * C153865 * C126 +
           (C134 * C1345 + C1361 + C1361 + C153882 * C1355) * C153865 * C125 +
           (C134 * C1346 + C1362 + C1362 + C153882 * C1356) * C153865 * C124 +
           (C134 * C1347 + C1363 + C1363 + C153882 * C1357) * C153865 * C123) *
              C153783 * C1341) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C153865 * C123 +
            C199 * C124 + C200 * C125 + C201 * C126 + C202 * C127) *
               C153783 * C1251 -
           (C420 * C127 + C421 * C126 + C422 * C125 + C423 * C124 +
            (C134 * C335 + C380 + C380 + C153882 * C359) * C153865 * C123) *
               C153783 * C153819) *
              C1253 +
          ((C423 * C123 + C422 * C124 + C421 * C125 + C420 * C126 +
            C785 * C127) *
               C153783 * C153819 -
           (C203 * C127 + C202 * C126 + C201 * C125 + C200 * C124 +
            C199 * C123) *
               C153783 * C1251) *
              C1254 +
          ((C200 * C123 + C201 * C124 + C202 * C125 + C203 * C126 +
            C204 * C127) *
               C153783 * C1251 -
           ((C134 * C775 + C781 + C781 + C153882 * C777) * C153865 * C127 +
            C785 * C126 + C420 * C125 + C421 * C124 + C422 * C123) *
               C153783 * C153819) *
              C1255)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C153865 * C123 +
            C199 * C124 + C200 * C125 + C201 * C126 + C202 * C127) *
               C549 -
           (C641 * C127 + C642 * C126 + C643 * C125 + C644 * C124 +
            (C134 * C556 + C601 + C601 + C153882 * C580) * C153865 * C123) *
               C550 +
           ((C134 * C557 + C602 + C602 + C153882 * C581) * C153865 * C123 +
            C645 * C124 + C646 * C125 + C647 * C126 + C648 * C127) *
               C551) *
              C1251 +
          (((C134 * C1081 + C1100 + C1100 + C153882 * C1093) * C153865 * C123 +
            C1126 * C124 + C1127 * C125 + C1128 * C126 + C1129 * C127) *
               C550 -
           (C420 * C127 + C421 * C126 + C422 * C125 + C423 * C124 +
            (C134 * C335 + C380 + C380 + C153882 * C359) * C153865 * C123) *
               C549 -
           ((C134 * C1485 + C1501 + C1501 + C153882 * C1495) * C153865 * C127 +
            (C134 * C1486 + C1502 + C1502 + C153882 * C1496) * C153865 * C126 +
            (C134 * C1487 + C1503 + C1503 + C153882 * C1497) * C153865 * C125 +
            (C134 * C1488 + C1504 + C1504 + C153882 * C1498) * C153865 * C124 +
            (C134 * C1489 + C1505 + C1505 + C153882 * C1499) * C153865 * C123) *
               C551) *
              C153819) *
         C153748) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C154181 +
             C3138 * C154169 + C3139 * C154143) *
                C2846 +
            (C2850 + C2851 + C2852) * C2847 + C2864 * C154130) *
               C153783 * C1251 -
           (C3650 * C154130 + (C3147 + C3106 + C3107) * C2847 +
            (C3142 * C154143 + C3139 * C154169 + C3138 * C154181) * C2846) *
               C153783 * C153819) *
              C1253 +
          (((C3107 + C3106 + C3147) * C2846 + (C3103 + C3102 + C3146) * C2847 +
            (C3647 + C3648 + C3649) * C154130) *
               C153783 * C153819 -
           (C2865 * C154130 + (C2855 + C2854 + C2853) * C2847 +
            (C2852 + C2851 + C2850) * C2846) *
               C153783 * C1251) *
              C1254 +
          ((C2864 * C2846 + (C2858 + C2857 + C2856) * C2847 +
            (C2859 + C2860 + C2861) * C154130) *
               C153783 * C1251 -
           (((C134 * C1343 + C1359 + C1359 + C153882 * C1353) * C154143 +
             C419 * C154169 + C412 * C154181) *
                C154130 +
            (C3649 + C3648 + C3647) * C2847 + C3650 * C2846) *
               C153783 * C153819) *
              C1255)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C154181 +
            C3138 * C154169 + C3139 * C154143) *
               C2846 +
           (C2850 + C2851 + C2852) * C2847 + C2864 * C154130) *
              C153783 * C1338 -
          (C3650 * C154130 + (C3147 + C3106 + C3107) * C2847 +
           (C3142 * C154143 + C3139 * C154169 + C3138 * C154181) * C2846) *
              C153783 * C1339 +
          ((C3139 * C154181 + C3142 * C154169 + C4591 * C154143) * C2846 +
           (C3111 + C3148 + C3149) * C2847 +
           (C3115 + C3150 + C3151) * C154130) *
              C153783 * C1340 -
          (((C134 * C4574 + C4586 + C4586 + C153882 * C4580) * C154143 +
            C3144 * C154169 + C3140 * C154181) *
               C154130 +
           ((C134 * C4575 + C4587 + C4587 + C153882 * C4581) * C154143 +
            C3143 * C154169 + C3141 * C154181) *
               C2847 +
           ((C134 * C4576 + C4588 + C4588 + C153882 * C4582) * C154143 +
            C4591 * C154169 + C3142 * C154181) *
               C2846) *
              C153783 * C1341) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C154181 +
             C3138 * C154169 + C3139 * C154143) *
                C2846 +
            (C2850 + C2851 + C2852) * C2847 + C2864 * C154130) *
               C549 -
           (C3874 * C154130 + (C3423 + C3388 + C3389) * C2847 +
            (C4205 * C154143 + C4206 * C154169 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C154181) *
                C2846) *
               C550 +
           (((C134 * C557 + C602 + C602 + C153882 * C581) * C154181 +
             C4830 * C154169 + C4831 * C154143) *
                C2846 +
            (C3391 + C3424 + C3425) * C2847 +
            (C3397 + C3426 + C3427) * C154130) *
               C551) *
              C1251 +
          (((C4206 * C154181 + C4205 * C154169 +
             (C134 * C4168 + C4185 + C4185 + C153882 * C4176) * C154143) *
                C2846 +
            (C4186 + C4187 + C4209) * C2847 +
            (C4191 + C4192 + C4210) * C154130) *
               C550 -
           (C3650 * C154130 + (C3147 + C3106 + C3107) * C2847 +
            (C3142 * C154143 + C3139 * C154169 + C3138 * C154181) * C2846) *
               C549 -
           (((C134 * C4809 + C4823 + C4823 + C153882 * C4815) * C154143 +
             C3421 * C154169 + C3420 * C154181) *
                C154130 +
            ((C134 * C4810 + C4824 + C4824 + C153882 * C4816) * C154143 +
             C3419 * C154169 + C3418 * C154181) *
                C2847 +
            ((C134 * C4811 + C4825 + C4825 + C153882 * C4817) * C154143 +
             C4831 * C154169 + C4830 * C154181) *
                C2846) *
               C551) *
              C153819) *
         C153748) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C24168 +
             C3138 * C24169 + C3139 * C154143) *
                C154178 +
            (C24175 + C24176 + C24177) * C154159 + C24189 * C154130) *
               C153783 * C1251 -
           (C24873 * C154130 + (C24412 + C24413 + C24414) * C154159 +
            (C3142 * C154143 + C3139 * C24169 + C3138 * C24168) * C154178) *
               C153783 * C153819) *
              C1253 +
          (((C24414 + C24413 + C24412) * C154178 +
            (C24411 + C24410 + C24409) * C154159 +
            (C24870 + C24871 + C24872) * C154130) *
               C153783 * C153819 -
           (C24190 * C154130 + (C24180 + C24179 + C24178) * C154159 +
            (C24177 + C24176 + C24175) * C154178) *
               C153783 * C1251) *
              C1254 +
          ((C24189 * C154178 + (C24183 + C24182 + C24181) * C154159 +
            (C24184 + C24185 + C24186) * C154130) *
               C153783 * C1251 -
           (((C134 * C1343 + C1359 + C1359 + C153882 * C1353) * C154143 +
             C419 * C24169 + C412 * C24168) *
                C154130 +
            (C24872 + C24871 + C24870) * C154159 + C24873 * C154178) *
               C153783 * C153819) *
              C1255)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C24168 +
            C3138 * C24169 + C3139 * C154143) *
               C154178 +
           (C24175 + C24176 + C24177) * C154159 + C24189 * C154130) *
              C153783 * C1338 -
          (C24873 * C154130 + (C24412 + C24413 + C24414) * C154159 +
           (C3142 * C154143 + C3139 * C24169 + C3138 * C24168) * C154178) *
              C153783 * C1339 +
          ((C3139 * C24168 + C3142 * C24169 + C4591 * C154143) * C154178 +
           (C24415 + C24416 + C24417) * C154159 +
           (C24418 + C24419 + C24420) * C154130) *
              C153783 * C1340 -
          (((C134 * C4574 + C4586 + C4586 + C153882 * C4580) * C154143 +
            C3144 * C24169 + C3140 * C24168) *
               C154130 +
           ((C134 * C4575 + C4587 + C4587 + C153882 * C4581) * C154143 +
            C3143 * C24169 + C3141 * C24168) *
               C154159 +
           ((C134 * C4576 + C4588 + C4588 + C153882 * C4582) * C154143 +
            C4591 * C24169 + C3142 * C24168) *
               C154178) *
              C153783 * C1341) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C24168 +
             C3138 * C24169 + C3139 * C154143) *
                C154178 +
            (C24175 + C24176 + C24177) * C154159 + C24189 * C154130) *
               C549 -
           (C25096 * C154130 + (C24642 + C24643 + C24644) * C154159 +
            (C4205 * C154143 + C4206 * C24169 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C24168) *
                C154178) *
               C550 +
           (((C134 * C557 + C602 + C602 + C153882 * C581) * C24168 +
             C4830 * C24169 + C4831 * C154143) *
                C154178 +
            (C24645 + C24646 + C24647) * C154159 +
            (C24648 + C24649 + C24650) * C154130) *
               C551) *
              C1251 +
          (((C4206 * C24168 + C4205 * C24169 + C5574 * C154143) * C154178 +
            (C25387 + C25388 + C25389) * C154159 +
            (C25390 + C25391 + C25392) * C154130) *
               C550 -
           (C24873 * C154130 + (C24412 + C24413 + C24414) * C154159 +
            (C3142 * C154143 + C3139 * C24169 + C3138 * C24168) * C154178) *
               C549 -
           (((C134 * C4809 + C4823 + C4823 + C153882 * C4815) * C154143 +
             C3421 * C24169 + C3420 * C24168) *
                C154130 +
            ((C134 * C4810 + C4824 + C4824 + C153882 * C4816) * C154143 +
             C3419 * C24169 + C3418 * C24168) *
                C154159 +
            ((C134 * C4811 + C4825 + C4825 + C153882 * C4817) * C154143 +
             C4831 * C24169 + C4830 * C24168) *
                C154178) *
               C551) *
              C153819) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C28090 +
            C3138 * C28091 + C3139 * C28092 + C3142 * C28093 + C4591 * C28094) *
               C153712 * C153783 * C1251 -
           (C28235 * C28094 + C4591 * C28093 + C3142 * C28092 + C3139 * C28091 +
            C3138 * C28090) *
               C153712 * C153783 * C153819) *
              C1253 +
          ((C415 * C28090 + C416 * C28091 + C3141 * C28092 + C3143 * C28093 +
            C28236 * C28094) *
               C153712 * C153783 * C153819 -
           (C3143 * C28094 + C3141 * C28093 + C416 * C28092 + C415 * C28091 +
            C193 * C28090) *
               C153712 * C153783 * C1251) *
              C1254 +
          ((C194 * C28090 + C414 * C28091 + C417 * C28092 + C3140 * C28093 +
            C3144 * C28094) *
               C153712 * C153783 * C1251 -
           ((C134 * C4574 + C4586 + C4586 + C153882 * C4580) * C28094 +
            C3144 * C28093 + C3140 * C28092 + C417 * C28091 + C414 * C28090) *
               C153712 * C153783 * C153819) *
              C1255)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C136 + C161 + C161 + C153882 * C152) * C28090 +
           C3138 * C28091 + C3139 * C28092 + C3142 * C28093 + C4591 * C28094) *
              C153712 * C153783 * C1338 -
          (C28235 * C28094 + C4591 * C28093 + C3142 * C28092 + C3139 * C28091 +
           C3138 * C28090) *
              C153712 * C153783 * C1339 +
          (C3139 * C28090 + C3142 * C28091 + C4591 * C28092 + C28235 * C28093 +
           C29003 * C28094) *
              C153712 * C153783 * C1340 -
          ((C134 * C28994 + C29000 + C29000 + C153882 * C28996) * C28094 +
           C29003 * C28093 + C28235 * C28092 + C4591 * C28091 +
           C3142 * C28090) *
              C153712 * C153783 * C1341) *
         C153748) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C28090 +
            C3138 * C28091 + C3139 * C28092 + C3142 * C28093 + C4591 * C28094) *
               C153712 * C549 -
           (C28789 * C28094 + C5574 * C28093 + C4205 * C28092 + C4206 * C28091 +
            (C134 * C556 + C601 + C601 + C153882 * C580) * C28090) *
               C153712 * C550 +
           ((C134 * C557 + C602 + C602 + C153882 * C581) * C28090 +
            C4830 * C28091 + C4831 * C28092 + C29138 * C28093 +
            C29139 * C28094) *
               C153712 * C551) *
              C1251 +
          ((C4206 * C28090 + C4205 * C28091 + C5574 * C28092 + C28789 * C28093 +
            (C134 * C28772 + C28781 + C28781 + C153882 * C28776) * C28094) *
               C153712 * C550 -
           (C28235 * C28094 + C4591 * C28093 + C3142 * C28092 + C3139 * C28091 +
            C3138 * C28090) *
               C153712 * C549 -
           ((C134 * C29125 + C29133 + C29133 + C153882 * C29127) * C28094 +
            C29139 * C28093 + C29138 * C28092 + C4831 * C28091 +
            C4830 * C28090) *
               C153712 * C551) *
              C153819) *
         C153748) /
            (p * q * std::sqrt(p + q));
    d2ee[368] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C153865 * C123 +
             C199 * C124 + C200 * C125 + C201 * C126 + C202 * C127) *
                C154094 -
            (C641 * C127 + C642 * C126 + C643 * C125 + C644 * C124 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C153865 * C123) *
                C153847) *
               C1251 +
           (((C134 * C1081 + C1100 + C1100 + C153882 * C1093) * C153865 * C123 +
             C1126 * C124 + C1127 * C125 + C1128 * C126 + C1129 * C127) *
                C153847 -
            (C420 * C127 + C421 * C126 + C422 * C125 + C423 * C124 +
             (C134 * C335 + C380 + C380 + C153882 * C359) * C153865 * C123) *
                C154094) *
               C153819) *
              C154085 +
          (((C644 * C123 + C643 * C124 + C642 * C125 + C641 * C126 +
             C919 * C127) *
                C153847 -
            (C203 * C127 + C202 * C126 + C201 * C125 + C200 * C124 +
             C199 * C123) *
                C154094) *
               C1251 +
           ((C423 * C123 + C422 * C124 + C421 * C125 + C420 * C126 +
             C785 * C127) *
                C154094 -
            ((C134 * C1086 + C1113 + C1113 + C153882 * C1098) * C153865 * C127 +
             C1129 * C126 + C1128 * C125 + C1127 * C124 + C1126 * C123) *
                C153847) *
               C153819) *
              C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C153882 * C152) * C154181 +
              C3138 * C154169 + C3139 * C154143) *
                 C2846 +
             (C2850 + C2851 + C2852) * C2847 + C2864 * C154130) *
                C154094 -
            (C3874 * C154130 + (C3423 + C3388 + C3389) * C2847 +
             (C4205 * C154143 + C4206 * C154169 +
              (C134 * C556 + C601 + C601 + C153882 * C580) * C154181) *
                 C2846) *
                C153847) *
               C1251 +
           (((C4206 * C154181 + C4205 * C154169 +
              (C134 * C4168 + C4185 + C4185 + C153882 * C4176) * C154143) *
                 C2846 +
             (C4186 + C4187 + C4209) * C2847 +
             (C4191 + C4192 + C4210) * C154130) *
                C153847 -
            (C3650 * C154130 + (C3147 + C3106 + C3107) * C2847 +
             (C3142 * C154143 + C3139 * C154169 + C3138 * C154181) * C2846) *
                C154094) *
               C153819) *
              C154085 +
          ((((C3389 + C3388 + C3423) * C2846 + (C3385 + C3384 + C3422) * C2847 +
             (C3870 + C3871 + C3878) * C154130) *
                C153847 -
            (C2865 * C154130 + (C2855 + C2854 + C2853) * C2847 +
             (C2852 + C2851 + C2850) * C2846) *
                C154094) *
               C1251 +
           (((C3107 + C3106 + C3147) * C2846 + (C3103 + C3102 + C3146) * C2847 +
             (C3647 + C3648 + C3649) * C154130) *
                C154094 -
            (((C134 * C4171 + C4196 + C4196 + C153882 * C4179) * C154143 +
              C3877 * C154169 + C1124 * C154181) *
                 C154130 +
             (C4210 + C4192 + C4191) * C2847 +
             (C4209 + C4187 + C4186) * C2846) *
                C153847) *
               C153819) *
              C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C153882 * C152) * C24168 +
              C3138 * C24169 + C3139 * C154143) *
                 C154178 +
             (C24175 + C24176 + C24177) * C154159 + C24189 * C154130) *
                C154094 -
            (C25096 * C154130 + (C24642 + C24643 + C24644) * C154159 +
             (C4205 * C154143 + C4206 * C24169 +
              (C134 * C556 + C601 + C601 + C153882 * C580) * C24168) *
                 C154178) *
                C153847) *
               C1251 +
           (((C4206 * C24168 + C4205 * C24169 + C5574 * C154143) * C154178 +
             (C25387 + C25388 + C25389) * C154159 +
             (C25390 + C25391 + C25392) * C154130) *
                C153847 -
            (C24873 * C154130 + (C24412 + C24413 + C24414) * C154159 +
             (C3142 * C154143 + C3139 * C24169 + C3138 * C24168) * C154178) *
                C154094) *
               C153819) *
              C154085 +
          ((((C24644 + C24643 + C24642) * C154178 +
             (C24641 + C24640 + C24639) * C154159 +
             (C25093 + C25094 + C25095) * C154130) *
                C153847 -
            (C24190 * C154130 + (C24180 + C24179 + C24178) * C154159 +
             (C24177 + C24176 + C24175) * C154178) *
                C154094) *
               C1251 +
           (((C24414 + C24413 + C24412) * C154178 +
             (C24411 + C24410 + C24409) * C154159 +
             (C24870 + C24871 + C24872) * C154130) *
                C154094 -
            (((C134 * C4171 + C4196 + C4196 + C153882 * C4179) * C154143 +
              C3877 * C24169 + C1124 * C24168) *
                 C154130 +
             (C25392 + C25391 + C25390) * C154159 +
             (C25389 + C25388 + C25387) * C154178) *
                C153847) *
               C153819) *
              C153754)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C28090 +
             C3138 * C28091 + C3139 * C28092 + C3142 * C28093 +
             C4591 * C28094) *
                C153712 * C154094 -
            (C28789 * C28094 + C5574 * C28093 + C4205 * C28092 +
             C4206 * C28091 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C28090) *
                C153712 * C153847) *
               C1251 +
           ((C4206 * C28090 + C4205 * C28091 + C5574 * C28092 +
             C28789 * C28093 +
             (C134 * C28772 + C28781 + C28781 + C153882 * C28776) * C28094) *
                C153712 * C153847 -
            (C28235 * C28094 + C4591 * C28093 + C3142 * C28092 +
             C3139 * C28091 + C3138 * C28090) *
                C153712 * C154094) *
               C153819) *
              C154085 +
          (((C636 * C28090 + C1122 * C28091 + C3417 * C28092 + C4207 * C28093 +
             C28790 * C28094) *
                C153712 * C153847 -
            (C3143 * C28094 + C3141 * C28093 + C416 * C28092 + C415 * C28091 +
             C193 * C28090) *
                C153712 * C154094) *
               C1251 +
           ((C415 * C28090 + C416 * C28091 + C3141 * C28092 + C3143 * C28093 +
             C28236 * C28094) *
                C153712 * C154094 -
            ((C134 * C28773 + C28784 + C28784 + C153882 * C28777) * C28094 +
             C28790 * C28093 + C4207 * C28092 + C3417 * C28091 +
             C1122 * C28090) *
                C153712 * C153847) *
               C153819) *
              C153754)) /
            (p * q * std::sqrt(p + q));
    d2ee[369] +=
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C153865 * C123 +
            C199 * C124 + C200 * C125 + C201 * C126 + C202 * C127) *
               C153783 * C1251 -
           (C420 * C127 + C421 * C126 + C422 * C125 + C423 * C124 +
            (C134 * C335 + C380 + C380 + C153882 * C359) * C153865 * C123) *
               C153783 * C153819) *
              C1253 +
          ((C423 * C123 + C422 * C124 + C421 * C125 + C420 * C126 +
            C785 * C127) *
               C153783 * C153819 -
           (C203 * C127 + C202 * C126 + C201 * C125 + C200 * C124 +
            C199 * C123) *
               C153783 * C1251) *
              C1254 +
          ((C200 * C123 + C201 * C124 + C202 * C125 + C203 * C126 +
            C204 * C127) *
               C153783 * C1251 -
           ((C134 * C775 + C781 + C781 + C153882 * C777) * C153865 * C127 +
            C785 * C126 + C420 * C125 + C421 * C124 + C422 * C123) *
               C153783 * C153819) *
              C1255)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C136 + C161 + C161 + C153882 * C152) * C153865 * C123 +
           C199 * C124 + C200 * C125 + C201 * C126 + C202 * C127) *
              C153783 * C1338 -
          (C420 * C127 + C421 * C126 + C422 * C125 + C423 * C124 +
           (C134 * C335 + C380 + C380 + C153882 * C359) * C153865 * C123) *
              C153783 * C1339 +
          ((C134 * C336 + C381 + C381 + C153882 * C360) * C153865 * C123 +
           C424 * C124 + C425 * C125 + C426 * C126 + C427 * C127) *
              C153783 * C1340 -
          ((C134 * C1343 + C1359 + C1359 + C153882 * C1353) * C153865 * C127 +
           (C134 * C1344 + C1360 + C1360 + C153882 * C1354) * C153865 * C126 +
           (C134 * C1345 + C1361 + C1361 + C153882 * C1355) * C153865 * C125 +
           (C134 * C1346 + C1362 + C1362 + C153882 * C1356) * C153865 * C124 +
           (C134 * C1347 + C1363 + C1363 + C153882 * C1357) * C153865 * C123) *
              C153783 * C1341) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C154181 +
             C3138 * C154169 + C3139 * C154143) *
                C2846 +
            (C2850 + C2851 + C2852) * C2847 + C2864 * C154130) *
               C153783 * C1251 -
           (C3650 * C154130 + (C3147 + C3106 + C3107) * C2847 +
            (C3142 * C154143 + C3139 * C154169 + C3138 * C154181) * C2846) *
               C153783 * C153819) *
              C1253 +
          (((C3107 + C3106 + C3147) * C2846 + (C3103 + C3102 + C3146) * C2847 +
            (C3647 + C3648 + C3649) * C154130) *
               C153783 * C153819 -
           (C2865 * C154130 + (C2855 + C2854 + C2853) * C2847 +
            (C2852 + C2851 + C2850) * C2846) *
               C153783 * C1251) *
              C1254 +
          ((C2864 * C2846 + (C2858 + C2857 + C2856) * C2847 +
            (C2859 + C2860 + C2861) * C154130) *
               C153783 * C1251 -
           (((C134 * C1343 + C1359 + C1359 + C153882 * C1353) * C154143 +
             C419 * C154169 + C412 * C154181) *
                C154130 +
            (C3649 + C3648 + C3647) * C2847 + C3650 * C2846) *
               C153783 * C153819) *
              C1255)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C154181 +
            C3138 * C154169 + C3139 * C154143) *
               C2846 +
           (C2850 + C2851 + C2852) * C2847 + C2864 * C154130) *
              C153783 * C1338 -
          (C3650 * C154130 + (C3147 + C3106 + C3107) * C2847 +
           (C3142 * C154143 + C3139 * C154169 + C3138 * C154181) * C2846) *
              C153783 * C1339 +
          ((C3139 * C154181 + C3142 * C154169 + C4591 * C154143) * C2846 +
           (C3111 + C3148 + C3149) * C2847 +
           (C3115 + C3150 + C3151) * C154130) *
              C153783 * C1340 -
          (((C134 * C4574 + C4586 + C4586 + C153882 * C4580) * C154143 +
            C3144 * C154169 + C3140 * C154181) *
               C154130 +
           ((C134 * C4575 + C4587 + C4587 + C153882 * C4581) * C154143 +
            C3143 * C154169 + C3141 * C154181) *
               C2847 +
           ((C134 * C4576 + C4588 + C4588 + C153882 * C4582) * C154143 +
            C4591 * C154169 + C3142 * C154181) *
               C2846) *
              C153783 * C1341) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C24168 +
             C3138 * C24169 + C3139 * C154143) *
                C154178 +
            (C24175 + C24176 + C24177) * C154159 + C24189 * C154130) *
               C153783 * C1251 -
           (C24873 * C154130 + (C24412 + C24413 + C24414) * C154159 +
            (C3142 * C154143 + C3139 * C24169 + C3138 * C24168) * C154178) *
               C153783 * C153819) *
              C1253 +
          (((C24414 + C24413 + C24412) * C154178 +
            (C24411 + C24410 + C24409) * C154159 +
            (C24870 + C24871 + C24872) * C154130) *
               C153783 * C153819 -
           (C24190 * C154130 + (C24180 + C24179 + C24178) * C154159 +
            (C24177 + C24176 + C24175) * C154178) *
               C153783 * C1251) *
              C1254 +
          ((C24189 * C154178 + (C24183 + C24182 + C24181) * C154159 +
            (C24184 + C24185 + C24186) * C154130) *
               C153783 * C1251 -
           (((C134 * C1343 + C1359 + C1359 + C153882 * C1353) * C154143 +
             C419 * C24169 + C412 * C24168) *
                C154130 +
            (C24872 + C24871 + C24870) * C154159 + C24873 * C154178) *
               C153783 * C153819) *
              C1255)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C24168 +
            C3138 * C24169 + C3139 * C154143) *
               C154178 +
           (C24175 + C24176 + C24177) * C154159 + C24189 * C154130) *
              C153783 * C1338 -
          (C24873 * C154130 + (C24412 + C24413 + C24414) * C154159 +
           (C3142 * C154143 + C3139 * C24169 + C3138 * C24168) * C154178) *
              C153783 * C1339 +
          ((C3139 * C24168 + C3142 * C24169 + C4591 * C154143) * C154178 +
           (C24415 + C24416 + C24417) * C154159 +
           (C24418 + C24419 + C24420) * C154130) *
              C153783 * C1340 -
          (((C134 * C4574 + C4586 + C4586 + C153882 * C4580) * C154143 +
            C3144 * C24169 + C3140 * C24168) *
               C154130 +
           ((C134 * C4575 + C4587 + C4587 + C153882 * C4581) * C154143 +
            C3143 * C24169 + C3141 * C24168) *
               C154159 +
           ((C134 * C4576 + C4588 + C4588 + C153882 * C4582) * C154143 +
            C4591 * C24169 + C3142 * C24168) *
               C154178) *
              C153783 * C1341) *
         C153748) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C28090 +
            C3138 * C28091 + C3139 * C28092 + C3142 * C28093 + C4591 * C28094) *
               C153712 * C153783 * C1251 -
           (C28235 * C28094 + C4591 * C28093 + C3142 * C28092 + C3139 * C28091 +
            C3138 * C28090) *
               C153712 * C153783 * C153819) *
              C1253 +
          ((C415 * C28090 + C416 * C28091 + C3141 * C28092 + C3143 * C28093 +
            C28236 * C28094) *
               C153712 * C153783 * C153819 -
           (C3143 * C28094 + C3141 * C28093 + C416 * C28092 + C415 * C28091 +
            C193 * C28090) *
               C153712 * C153783 * C1251) *
              C1254 +
          ((C194 * C28090 + C414 * C28091 + C417 * C28092 + C3140 * C28093 +
            C3144 * C28094) *
               C153712 * C153783 * C1251 -
           ((C134 * C4574 + C4586 + C4586 + C153882 * C4580) * C28094 +
            C3144 * C28093 + C3140 * C28092 + C417 * C28091 + C414 * C28090) *
               C153712 * C153783 * C153819) *
              C1255)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C136 + C161 + C161 + C153882 * C152) * C28090 +
           C3138 * C28091 + C3139 * C28092 + C3142 * C28093 + C4591 * C28094) *
              C153712 * C153783 * C1338 -
          (C28235 * C28094 + C4591 * C28093 + C3142 * C28092 + C3139 * C28091 +
           C3138 * C28090) *
              C153712 * C153783 * C1339 +
          (C3139 * C28090 + C3142 * C28091 + C4591 * C28092 + C28235 * C28093 +
           C29003 * C28094) *
              C153712 * C153783 * C1340 -
          ((C134 * C28994 + C29000 + C29000 + C153882 * C28996) * C28094 +
           C29003 * C28093 + C28235 * C28092 + C4591 * C28091 +
           C3142 * C28090) *
              C153712 * C153783 * C1341) *
         C153748) /
            (p * q * std::sqrt(p + q));
    d2ee[370] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C153865 * C123 +
             C199 * C124 + C200 * C125 + C201 * C126 + C202 * C127) *
                C2058 -
            (C641 * C127 + C642 * C126 + C643 * C125 + C644 * C124 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C153865 * C123) *
                C153847) *
               C154093 +
           (((C134 * C1081 + C1100 + C1100 + C153882 * C1093) * C153865 * C123 +
             C1126 * C124 + C1127 * C125 + C1128 * C126 + C1129 * C127) *
                C153847 -
            (C420 * C127 + C421 * C126 + C422 * C125 + C423 * C124 +
             (C134 * C335 + C380 + C380 + C153882 * C359) * C153865 * C123) *
                C2058) *
               C153819) *
              C154085 +
          (((C644 * C123 + C643 * C124 + C642 * C125 + C641 * C126 +
             C919 * C127) *
                C153847 -
            (C203 * C127 + C202 * C126 + C201 * C125 + C200 * C124 +
             C199 * C123) *
                C2058) *
               C154093 +
           ((C423 * C123 + C422 * C124 + C421 * C125 + C420 * C126 +
             C785 * C127) *
                C2058 -
            ((C134 * C1086 + C1113 + C1113 + C153882 * C1098) * C153865 * C127 +
             C1129 * C126 + C1128 * C125 + C1127 * C124 + C1126 * C123) *
                C153847) *
               C153819) *
              C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C153882 * C152) * C154181 +
              C3138 * C154169 + C3139 * C154143) *
                 C2846 +
             (C2850 + C2851 + C2852) * C2847 + C2864 * C154130) *
                C2058 -
            (C3874 * C154130 + (C3423 + C3388 + C3389) * C2847 +
             (C4205 * C154143 + C4206 * C154169 +
              (C134 * C556 + C601 + C601 + C153882 * C580) * C154181) *
                 C2846) *
                C153847) *
               C154093 +
           (((C4206 * C154181 + C4205 * C154169 + C5574 * C154143) * C2846 +
             (C4186 + C4187 + C4209) * C2847 +
             (C4191 + C4192 + C4210) * C154130) *
                C153847 -
            (C3650 * C154130 + (C3147 + C3106 + C3107) * C2847 +
             (C3142 * C154143 + C3139 * C154169 + C3138 * C154181) * C2846) *
                C2058) *
               C153819) *
              C154085 +
          ((((C3389 + C3388 + C3423) * C2846 + (C3385 + C3384 + C3422) * C2847 +
             (C3870 + C3871 + C3878) * C154130) *
                C153847 -
            (C2865 * C154130 + (C2855 + C2854 + C2853) * C2847 +
             (C2852 + C2851 + C2850) * C2846) *
                C2058) *
               C154093 +
           (((C3107 + C3106 + C3147) * C2846 + (C3103 + C3102 + C3146) * C2847 +
             (C3647 + C3648 + C3649) * C154130) *
                C2058 -
            (((C134 * C4171 + C4196 + C4196 + C153882 * C4179) * C154143 +
              C3877 * C154169 + C1124 * C154181) *
                 C154130 +
             (C4210 + C4192 + C4191) * C2847 +
             (C4209 + C4187 + C4186) * C2846) *
                C153847) *
               C153819) *
              C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C153882 * C152) * C24168 +
              C3138 * C24169 + C3139 * C154143) *
                 C154178 +
             (C24175 + C24176 + C24177) * C154159 + C24189 * C154130) *
                C2058 -
            (C25096 * C154130 + (C24642 + C24643 + C24644) * C154159 +
             (C4205 * C154143 + C4206 * C24169 +
              (C134 * C556 + C601 + C601 + C153882 * C580) * C24168) *
                 C154178) *
                C153847) *
               C154093 +
           (((C4206 * C24168 + C4205 * C24169 + C5574 * C154143) * C154178 +
             (C25387 + C25388 + C25389) * C154159 +
             (C25390 + C25391 + C25392) * C154130) *
                C153847 -
            (C24873 * C154130 + (C24412 + C24413 + C24414) * C154159 +
             (C3142 * C154143 + C3139 * C24169 + C3138 * C24168) * C154178) *
                C2058) *
               C153819) *
              C154085 +
          ((((C24644 + C24643 + C24642) * C154178 +
             (C24641 + C24640 + C24639) * C154159 +
             (C25093 + C25094 + C25095) * C154130) *
                C153847 -
            (C24190 * C154130 + (C24180 + C24179 + C24178) * C154159 +
             (C24177 + C24176 + C24175) * C154178) *
                C2058) *
               C154093 +
           (((C24414 + C24413 + C24412) * C154178 +
             (C24411 + C24410 + C24409) * C154159 +
             (C24870 + C24871 + C24872) * C154130) *
                C2058 -
            (((C134 * C4171 + C4196 + C4196 + C153882 * C4179) * C154143 +
              C3877 * C24169 + C1124 * C24168) *
                 C154130 +
             (C25392 + C25391 + C25390) * C154159 +
             (C25389 + C25388 + C25387) * C154178) *
                C153847) *
               C153819) *
              C153754)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C28090 +
             C3138 * C28091 + C3139 * C28092 + C3142 * C28093 +
             C4591 * C28094) *
                C153712 * C2058 -
            (C28789 * C28094 + C5574 * C28093 + C4205 * C28092 +
             C4206 * C28091 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C28090) *
                C153712 * C153847) *
               C154093 +
           ((C4206 * C28090 + C4205 * C28091 + C5574 * C28092 +
             C28789 * C28093 + C29554 * C28094) *
                C153712 * C153847 -
            (C28235 * C28094 + C4591 * C28093 + C3142 * C28092 +
             C3139 * C28091 + C3138 * C28090) *
                C153712 * C2058) *
               C153819) *
              C154085 +
          (((C636 * C28090 + C1122 * C28091 + C3417 * C28092 + C4207 * C28093 +
             C28790 * C28094) *
                C153712 * C153847 -
            (C3143 * C28094 + C3141 * C28093 + C416 * C28092 + C415 * C28091 +
             C193 * C28090) *
                C153712 * C2058) *
               C154093 +
           ((C415 * C28090 + C416 * C28091 + C3141 * C28092 + C3143 * C28093 +
             C28236 * C28094) *
                C153712 * C2058 -
            ((C134 * C28773 + C28784 + C28784 + C153882 * C28777) * C28094 +
             C28790 * C28093 + C4207 * C28092 + C3417 * C28091 +
             C1122 * C28090) *
                C153712 * C153847) *
               C153819) *
              C153754)) /
            (p * q * std::sqrt(p + q));
    d2ee[371] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C153865 * C123 +
            C199 * C124 + C200 * C125 + C201 * C126 + C202 * C127) *
               C154166 -
           (C641 * C127 + C642 * C126 + C643 * C125 + C644 * C124 +
            (C134 * C556 + C601 + C601 + C153882 * C580) * C153865 * C123) *
               C154167 +
           ((C134 * C557 + C602 + C602 + C153882 * C581) * C153865 * C123 +
            C645 * C124 + C646 * C125 + C647 * C126 + C648 * C127) *
               C2574) *
              C154093 +
          (((C134 * C1081 + C1100 + C1100 + C153882 * C1093) * C153865 * C123 +
            C1126 * C124 + C1127 * C125 + C1128 * C126 + C1129 * C127) *
               C154167 -
           (C420 * C127 + C421 * C126 + C422 * C125 + C423 * C124 +
            (C134 * C335 + C380 + C380 + C153882 * C359) * C153865 * C123) *
               C154166 -
           ((C134 * C1485 + C1501 + C1501 + C153882 * C1495) * C153865 * C127 +
            (C134 * C1486 + C1502 + C1502 + C153882 * C1496) * C153865 * C126 +
            (C134 * C1487 + C1503 + C1503 + C153882 * C1497) * C153865 * C125 +
            (C134 * C1488 + C1504 + C1504 + C153882 * C1498) * C153865 * C124 +
            (C134 * C1489 + C1505 + C1505 + C153882 * C1499) * C153865 * C123) *
               C2574) *
              C153819) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C154181 +
             C3138 * C154169 + C3139 * C154143) *
                C2846 +
            (C2850 + C2851 + C2852) * C2847 + C2864 * C154130) *
               C154166 -
           (C3874 * C154130 + (C3423 + C3388 + C3389) * C2847 +
            (C4205 * C154143 + C4206 * C154169 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C154181) *
                C2846) *
               C154167 +
           (((C134 * C557 + C602 + C602 + C153882 * C581) * C154181 +
             C4830 * C154169 + C4831 * C154143) *
                C2846 +
            (C3391 + C3424 + C3425) * C2847 +
            (C3397 + C3426 + C3427) * C154130) *
               C2574) *
              C154093 +
          (((C4206 * C154181 + C4205 * C154169 + C5574 * C154143) * C2846 +
            (C4186 + C4187 + C4209) * C2847 +
            (C4191 + C4192 + C4210) * C154130) *
               C154167 -
           (C3650 * C154130 + (C3147 + C3106 + C3107) * C2847 +
            (C3142 * C154143 + C3139 * C154169 + C3138 * C154181) * C2846) *
               C154166 -
           (((C134 * C4809 + C4823 + C4823 + C153882 * C4815) * C154143 +
             C3421 * C154169 + C3420 * C154181) *
                C154130 +
            ((C134 * C4810 + C4824 + C4824 + C153882 * C4816) * C154143 +
             C3419 * C154169 + C3418 * C154181) *
                C2847 +
            ((C134 * C4811 + C4825 + C4825 + C153882 * C4817) * C154143 +
             C4831 * C154169 + C4830 * C154181) *
                C2846) *
               C2574) *
              C153819) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C24168 +
             C3138 * C24169 + C3139 * C154143) *
                C154178 +
            (C24175 + C24176 + C24177) * C154159 + C24189 * C154130) *
               C154166 -
           (C25096 * C154130 + (C24642 + C24643 + C24644) * C154159 +
            (C4205 * C154143 + C4206 * C24169 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C24168) *
                C154178) *
               C154167 +
           (((C134 * C557 + C602 + C602 + C153882 * C581) * C24168 +
             C4830 * C24169 + C4831 * C154143) *
                C154178 +
            (C24645 + C24646 + C24647) * C154159 +
            (C24648 + C24649 + C24650) * C154130) *
               C2574) *
              C154093 +
          (((C4206 * C24168 + C4205 * C24169 + C5574 * C154143) * C154178 +
            (C25387 + C25388 + C25389) * C154159 +
            (C25390 + C25391 + C25392) * C154130) *
               C154167 -
           (C24873 * C154130 + (C24412 + C24413 + C24414) * C154159 +
            (C3142 * C154143 + C3139 * C24169 + C3138 * C24168) * C154178) *
               C154166 -
           (((C134 * C4809 + C4823 + C4823 + C153882 * C4815) * C154143 +
             C3421 * C24169 + C3420 * C24168) *
                C154130 +
            ((C134 * C4810 + C4824 + C4824 + C153882 * C4816) * C154143 +
             C3419 * C24169 + C3418 * C24168) *
                C154159 +
            ((C134 * C4811 + C4825 + C4825 + C153882 * C4817) * C154143 +
             C4831 * C24169 + C4830 * C24168) *
                C154178) *
               C2574) *
              C153819) *
         C153748) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C28090 +
            C3138 * C28091 + C3139 * C28092 + C3142 * C28093 + C4591 * C28094) *
               C153712 * C154166 -
           (C28789 * C28094 + C5574 * C28093 + C4205 * C28092 + C4206 * C28091 +
            (C134 * C556 + C601 + C601 + C153882 * C580) * C28090) *
               C153712 * C154167 +
           ((C134 * C557 + C602 + C602 + C153882 * C581) * C28090 +
            C4830 * C28091 + C4831 * C28092 + C29138 * C28093 +
            C29139 * C28094) *
               C153712 * C2574) *
              C154093 +
          ((C4206 * C28090 + C4205 * C28091 + C5574 * C28092 + C28789 * C28093 +
            C29554 * C28094) *
               C153712 * C154167 -
           (C28235 * C28094 + C4591 * C28093 + C3142 * C28092 + C3139 * C28091 +
            C3138 * C28090) *
               C153712 * C154166 -
           ((C134 * C29125 + C29133 + C29133 + C153882 * C29127) * C28094 +
            C29139 * C28093 + C29138 * C28092 + C4831 * C28091 +
            C4830 * C28090) *
               C153712 * C2574) *
              C153819) *
         C153748) /
            (p * q * std::sqrt(p + q));
    d2ee[372] +=
        (-std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C153865 * C123 +
            C199 * C124 + C200 * C125 + C201 * C126 + C202 * C127) *
               C2058 -
           (C641 * C127 + C642 * C126 + C643 * C125 + C644 * C124 +
            (C134 * C556 + C601 + C601 + C153882 * C580) * C153865 * C123) *
               C153847) *
              C326 +
          (((C134 * C1081 + C1100 + C1100 + C153882 * C1093) * C153865 * C123 +
            C1126 * C124 + C1127 * C125 + C1128 * C126 + C1129 * C127) *
               C153847 -
           (C420 * C127 + C421 * C126 + C422 * C125 + C423 * C124 +
            (C134 * C335 + C380 + C380 + C153882 * C359) * C153865 * C123) *
               C2058) *
              C327 +
          (((C134 * C336 + C381 + C381 + C153882 * C360) * C153865 * C123 +
            C424 * C124 + C425 * C125 + C426 * C126 + C427 * C127) *
               C2058 -
           ((C134 * C1916 + C1932 + C1932 + C153882 * C1926) * C153865 * C127 +
            (C134 * C1917 + C1933 + C1933 + C153882 * C1927) * C153865 * C126 +
            (C134 * C1918 + C1934 + C1934 + C153882 * C1928) * C153865 * C125 +
            (C134 * C1919 + C1935 + C1935 + C153882 * C1929) * C153865 * C124 +
            (C134 * C1920 + C1936 + C1936 + C153882 * C1930) * C153865 * C123) *
               C153847) *
              C328) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C153865 * C123 +
            C199 * C124 + C200 * C125 + C201 * C126 + C202 * C127) *
               C2058 -
           (C641 * C127 + C642 * C126 + C643 * C125 + C644 * C124 +
            (C134 * C556 + C601 + C601 + C153882 * C580) * C153865 * C123) *
               C153847) *
              C153767 * C1253 +
          ((C644 * C123 + C643 * C124 + C642 * C125 + C641 * C126 +
            C919 * C127) *
               C153847 -
           (C203 * C127 + C202 * C126 + C201 * C125 + C200 * C124 +
            C199 * C123) *
               C2058) *
              C153767 * C1254 +
          ((C200 * C123 + C201 * C124 + C202 * C125 + C203 * C126 +
            C204 * C127) *
               C2058 -
           ((C134 * C909 + C915 + C915 + C153882 * C911) * C153865 * C127 +
            C919 * C126 + C641 * C125 + C642 * C124 + C643 * C123) *
               C153847) *
              C153767 * C1255)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C136 + C161 + C161 + C153882 * C152) * C153865 * C123 +
           C199 * C124 + C200 * C125 + C201 * C126 + C202 * C127) *
              C2264 -
          (C641 * C127 + C642 * C126 + C643 * C125 + C644 * C124 +
           (C134 * C556 + C601 + C601 + C153882 * C580) * C153865 * C123) *
              C2265 +
          ((C134 * C557 + C602 + C602 + C153882 * C581) * C153865 * C123 +
           C645 * C124 + C646 * C125 + C647 * C126 + C648 * C127) *
              C2266 -
          ((C134 * C2268 + C2284 + C2284 + C153882 * C2278) * C153865 * C127 +
           (C134 * C2269 + C2285 + C2285 + C153882 * C2279) * C153865 * C126 +
           (C134 * C2270 + C2286 + C2286 + C153882 * C2280) * C153865 * C125 +
           (C134 * C2271 + C2287 + C2287 + C153882 * C2281) * C153865 * C124 +
           (C134 * C2272 + C2288 + C2288 + C153882 * C2282) * C153865 * C123) *
              C2267) *
         C153767 * C153748) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C154181 +
             C3138 * C154169 + C3139 * C154143) *
                C2846 +
            (C2850 + C2851 + C2852) * C2847 + C2864 * C154130) *
               C2058 -
           (C3874 * C154130 + (C3423 + C3388 + C3389) * C2847 +
            (C4205 * C154143 + C4206 * C154169 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C154181) *
                C2846) *
               C153847) *
              C153767 * C1253 +
          (((C3389 + C3388 + C3423) * C2846 + (C3385 + C3384 + C3422) * C2847 +
            (C3870 + C3871 + C3878) * C154130) *
               C153847 -
           (C2865 * C154130 + (C2855 + C2854 + C2853) * C2847 +
            (C2852 + C2851 + C2850) * C2846) *
               C2058) *
              C153767 * C1254 +
          ((C2864 * C2846 + (C2858 + C2857 + C2856) * C2847 +
            (C2859 + C2860 + C2861) * C154130) *
               C2058 -
           (((C134 * C1916 + C1932 + C1932 + C153882 * C1926) * C154143 +
             C1125 * C154169 + C633 * C154181) *
                C154130 +
            (C3878 + C3871 + C3870) * C2847 + C3874 * C2846) *
               C153847) *
              C153767 * C1255)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C154181 +
             C3138 * C154169 + C3139 * C154143) *
                C2846 +
            (C2850 + C2851 + C2852) * C2847 + C2864 * C154130) *
               C2058 -
           (C3874 * C154130 + (C3423 + C3388 + C3389) * C2847 +
            (C4205 * C154143 + C4206 * C154169 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C154181) *
                C2846) *
               C153847) *
              C326 +
          (((C4206 * C154181 + C4205 * C154169 + C5574 * C154143) * C2846 +
            (C4186 + C4187 + C4209) * C2847 +
            (C4191 + C4192 + C4210) * C154130) *
               C153847 -
           (C3650 * C154130 + (C3147 + C3106 + C3107) * C2847 +
            (C3142 * C154143 + C3139 * C154169 + C3138 * C154181) * C2846) *
               C2058) *
              C327 +
          (((C3139 * C154181 + C3142 * C154169 + C4591 * C154143) * C2846 +
            (C3111 + C3148 + C3149) * C2847 +
            (C3115 + C3150 + C3151) * C154130) *
               C2058 -
           (((C134 * C5557 + C5569 + C5569 + C153882 * C5563) * C154143 +
             C4208 * C154169 + C3416 * C154181) *
                C154130 +
            ((C134 * C5558 + C5570 + C5570 + C153882 * C5564) * C154143 +
             C4207 * C154169 + C3417 * C154181) *
                C2847 +
            ((C134 * C5559 + C5571 + C5571 + C153882 * C5565) * C154143 +
             C5574 * C154169 + C4205 * C154181) *
                C2846) *
               C153847) *
              C328) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C154181 +
            C3138 * C154169 + C3139 * C154143) *
               C2846 +
           (C2850 + C2851 + C2852) * C2847 + C2864 * C154130) *
              C2264 -
          (C3874 * C154130 + (C3423 + C3388 + C3389) * C2847 +
           (C4205 * C154143 + C4206 * C154169 +
            (C134 * C556 + C601 + C601 + C153882 * C580) * C154181) *
               C2846) *
              C2265 +
          (((C134 * C557 + C602 + C602 + C153882 * C581) * C154181 +
            C4830 * C154169 + C4831 * C154143) *
               C2846 +
           (C3391 + C3424 + C3425) * C2847 +
           (C3397 + C3426 + C3427) * C154130) *
              C2266 -
          (((C134 * C6156 + C6175 + C6175 + C153882 * C6168) * C154143 +
            (C134 * C6157 + C6176 + C6176 + C153882 * C6169) * C154169 +
            (C134 * C2270 + C2286 + C2286 + C153882 * C2280) * C154181) *
               C154130 +
           ((C134 * C6158 + C6177 + C6177 + C153882 * C6170) * C154143 +
            (C134 * C6159 + C6178 + C6178 + C153882 * C6171) * C154169 +
            (C134 * C2271 + C2287 + C2287 + C153882 * C2281) * C154181) *
               C2847 +
           ((C134 * C6160 + C6179 + C6179 + C153882 * C6172) * C154143 +
            (C134 * C6161 + C6180 + C6180 + C153882 * C6173) * C154169 +
            (C134 * C2272 + C2288 + C2288 + C153882 * C2282) * C154181) *
               C2846) *
              C2267) *
         C153767 * C153748) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C24168 +
             C3138 * C24169 + C3139 * C154143) *
                C154178 +
            (C24175 + C24176 + C24177) * C154159 + C24189 * C154130) *
               C2058 -
           (C25096 * C154130 + (C24642 + C24643 + C24644) * C154159 +
            (C4205 * C154143 + C4206 * C24169 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C24168) *
                C154178) *
               C153847) *
              C153767 * C1253 +
          (((C24644 + C24643 + C24642) * C154178 +
            (C24641 + C24640 + C24639) * C154159 +
            (C25093 + C25094 + C25095) * C154130) *
               C153847 -
           (C24190 * C154130 + (C24180 + C24179 + C24178) * C154159 +
            (C24177 + C24176 + C24175) * C154178) *
               C2058) *
              C153767 * C1254 +
          ((C24189 * C154178 + (C24183 + C24182 + C24181) * C154159 +
            (C24184 + C24185 + C24186) * C154130) *
               C2058 -
           (((C134 * C1916 + C1932 + C1932 + C153882 * C1926) * C154143 +
             C1125 * C24169 + C633 * C24168) *
                C154130 +
            (C25095 + C25094 + C25093) * C154159 + C25096 * C154178) *
               C153847) *
              C153767 * C1255)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C24168 +
             C3138 * C24169 + C3139 * C154143) *
                C154178 +
            (C24175 + C24176 + C24177) * C154159 + C24189 * C154130) *
               C2058 -
           (C25096 * C154130 + (C24642 + C24643 + C24644) * C154159 +
            (C4205 * C154143 + C4206 * C24169 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C24168) *
                C154178) *
               C153847) *
              C326 +
          (((C4206 * C24168 + C4205 * C24169 + C5574 * C154143) * C154178 +
            (C25387 + C25388 + C25389) * C154159 +
            (C25390 + C25391 + C25392) * C154130) *
               C153847 -
           (C24873 * C154130 + (C24412 + C24413 + C24414) * C154159 +
            (C3142 * C154143 + C3139 * C24169 + C3138 * C24168) * C154178) *
               C2058) *
              C327 +
          (((C3139 * C24168 + C3142 * C24169 + C4591 * C154143) * C154178 +
            (C24415 + C24416 + C24417) * C154159 +
            (C24418 + C24419 + C24420) * C154130) *
               C2058 -
           (((C134 * C5557 + C5569 + C5569 + C153882 * C5563) * C154143 +
             C4208 * C24169 + C3416 * C24168) *
                C154130 +
            ((C134 * C5558 + C5570 + C5570 + C153882 * C5564) * C154143 +
             C4207 * C24169 + C3417 * C24168) *
                C154159 +
            ((C134 * C5559 + C5571 + C5571 + C153882 * C5565) * C154143 +
             C5574 * C24169 + C4205 * C24168) *
                C154178) *
               C153847) *
              C328) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C24168 +
            C3138 * C24169 + C3139 * C154143) *
               C154178 +
           (C24175 + C24176 + C24177) * C154159 + C24189 * C154130) *
              C2264 -
          (C25096 * C154130 + (C24642 + C24643 + C24644) * C154159 +
           (C4205 * C154143 + C4206 * C24169 +
            (C134 * C556 + C601 + C601 + C153882 * C580) * C24168) *
               C154178) *
              C2265 +
          (((C134 * C557 + C602 + C602 + C153882 * C581) * C24168 +
            C4830 * C24169 + C4831 * C154143) *
               C154178 +
           (C24645 + C24646 + C24647) * C154159 +
           (C24648 + C24649 + C24650) * C154130) *
              C2266 -
          (((C134 * C6156 + C6175 + C6175 + C153882 * C6168) * C154143 +
            (C134 * C6157 + C6176 + C6176 + C153882 * C6169) * C24169 +
            (C134 * C2270 + C2286 + C2286 + C153882 * C2280) * C24168) *
               C154130 +
           ((C134 * C6158 + C6177 + C6177 + C153882 * C6170) * C154143 +
            (C134 * C6159 + C6178 + C6178 + C153882 * C6171) * C24169 +
            (C134 * C2271 + C2287 + C2287 + C153882 * C2281) * C24168) *
               C154159 +
           ((C134 * C6160 + C6179 + C6179 + C153882 * C6172) * C154143 +
            (C134 * C6161 + C6180 + C6180 + C153882 * C6173) * C24169 +
            (C134 * C2272 + C2288 + C2288 + C153882 * C2282) * C24168) *
               C154178) *
              C2267) *
         C153767 * C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C28090 +
            C3138 * C28091 + C3139 * C28092 + C3142 * C28093 + C4591 * C28094) *
               C153712 * C2058 -
           (C28789 * C28094 + C5574 * C28093 + C4205 * C28092 + C4206 * C28091 +
            (C134 * C556 + C601 + C601 + C153882 * C580) * C28090) *
               C153712 * C153847) *
              C153767 * C1253 +
          ((C636 * C28090 + C1122 * C28091 + C3417 * C28092 + C4207 * C28093 +
            C28790 * C28094) *
               C153712 * C153847 -
           (C3143 * C28094 + C3141 * C28093 + C416 * C28092 + C415 * C28091 +
            C193 * C28090) *
               C153712 * C2058) *
              C153767 * C1254 +
          ((C194 * C28090 + C414 * C28091 + C417 * C28092 + C3140 * C28093 +
            C3144 * C28094) *
               C153712 * C2058 -
           ((C134 * C5557 + C5569 + C5569 + C153882 * C5563) * C28094 +
            C4208 * C28093 + C3416 * C28092 + C1123 * C28091 + C635 * C28090) *
               C153712 * C153847) *
              C153767 * C1255)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C28090 +
            C3138 * C28091 + C3139 * C28092 + C3142 * C28093 + C4591 * C28094) *
               C153712 * C2058 -
           (C28789 * C28094 + C5574 * C28093 + C4205 * C28092 + C4206 * C28091 +
            (C134 * C556 + C601 + C601 + C153882 * C580) * C28090) *
               C153712 * C153847) *
              C326 +
          ((C4206 * C28090 + C4205 * C28091 + C5574 * C28092 + C28789 * C28093 +
            C29554 * C28094) *
               C153712 * C153847 -
           (C28235 * C28094 + C4591 * C28093 + C3142 * C28092 + C3139 * C28091 +
            C3138 * C28090) *
               C153712 * C2058) *
              C327 +
          ((C3139 * C28090 + C3142 * C28091 + C4591 * C28092 + C28235 * C28093 +
            C29003 * C28094) *
               C153712 * C2058 -
           ((C134 * C29545 + C29551 + C29551 + C153882 * C29547) * C28094 +
            C29554 * C28093 + C28789 * C28092 + C5574 * C28091 +
            C4205 * C28090) *
               C153712 * C153847) *
              C328) *
         C153748) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C136 + C161 + C161 + C153882 * C152) * C28090 +
           C3138 * C28091 + C3139 * C28092 + C3142 * C28093 + C4591 * C28094) *
              C153712 * C2264 -
          (C28789 * C28094 + C5574 * C28093 + C4205 * C28092 + C4206 * C28091 +
           (C134 * C556 + C601 + C601 + C153882 * C580) * C28090) *
              C153712 * C2265 +
          ((C134 * C557 + C602 + C602 + C153882 * C581) * C28090 +
           C4830 * C28091 + C4831 * C28092 + C29138 * C28093 +
           C29139 * C28094) *
              C153712 * C2266 -
          ((C134 * C29880 + C29887 + C29887 + C153882 * C29884) * C28094 +
           (C134 * C29881 + C29888 + C29888 + C153882 * C29885) * C28093 +
           (C134 * C6160 + C6179 + C6179 + C153882 * C6172) * C28092 +
           (C134 * C6161 + C6180 + C6180 + C153882 * C6173) * C28091 +
           (C134 * C2272 + C2288 + C2288 + C153882 * C2282) * C28090) *
              C153712 * C2267) *
         C153767 * C153748) /
            (p * q * std::sqrt(p + q));
    d2ee[373] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C153865 * C123 +
            C199 * C124 + C200 * C125 + C201 * C126 + C202 * C127) *
               C154166 -
           (C641 * C127 + C642 * C126 + C643 * C125 + C644 * C124 +
            (C134 * C556 + C601 + C601 + C153882 * C580) * C153865 * C123) *
               C154167 +
           ((C134 * C557 + C602 + C602 + C153882 * C581) * C153865 * C123 +
            C645 * C124 + C646 * C125 + C647 * C126 + C648 * C127) *
               C2574) *
              C153767 * C154085 +
          ((C644 * C123 + C643 * C124 + C642 * C125 + C641 * C126 +
            C919 * C127) *
               C154167 -
           (C203 * C127 + C202 * C126 + C201 * C125 + C200 * C124 +
            C199 * C123) *
               C154166 -
           ((C134 * C563 + C616 + C616 + C153882 * C587) * C153865 * C127 +
            C648 * C126 + C647 * C125 + C646 * C124 + C645 * C123) *
               C2574) *
              C153767 * C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C154181 +
             C3138 * C154169 + C3139 * C154143) *
                C2846 +
            (C2850 + C2851 + C2852) * C2847 + C2864 * C154130) *
               C154166 -
           (C3874 * C154130 + (C3423 + C3388 + C3389) * C2847 +
            (C4205 * C154143 + C4206 * C154169 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C154181) *
                C2846) *
               C154167 +
           (((C134 * C557 + C602 + C602 + C153882 * C581) * C154181 +
             C4830 * C154169 + C4831 * C154143) *
                C2846 +
            (C3391 + C3424 + C3425) * C2847 +
            (C3397 + C3426 + C3427) * C154130) *
               C2574) *
              C153767 * C154085 +
          (((C3389 + C3388 + C3423) * C2846 + (C3385 + C3384 + C3422) * C2847 +
            (C3870 + C3871 + C3878) * C154130) *
               C154167 -
           (C2865 * C154130 + (C2855 + C2854 + C2853) * C2847 +
            (C2852 + C2851 + C2850) * C2846) *
               C154166 -
           (((C134 * C3372 + C3403 + C3403 + C153882 * C3380) * C154143 +
             (C134 * C1486 + C1502 + C1502 + C153882 * C1496) * C154169 +
             C639 * C154181) *
                C154130 +
            (C3427 + C3426 + C3397) * C2847 + (C3425 + C3424 + C3391) * C2846) *
               C2574) *
              C153767 * C153754)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C24168 +
             C3138 * C24169 + C3139 * C154143) *
                C154178 +
            (C24175 + C24176 + C24177) * C154159 + C24189 * C154130) *
               C154166 -
           (C25096 * C154130 + (C24642 + C24643 + C24644) * C154159 +
            (C4205 * C154143 + C4206 * C24169 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C24168) *
                C154178) *
               C154167 +
           (((C134 * C557 + C602 + C602 + C153882 * C581) * C24168 +
             C4830 * C24169 + C4831 * C154143) *
                C154178 +
            (C24645 + C24646 + C24647) * C154159 +
            (C24648 + C24649 + C24650) * C154130) *
               C2574) *
              C153767 * C154085 +
          (((C24644 + C24643 + C24642) * C154178 +
            (C24641 + C24640 + C24639) * C154159 +
            (C25093 + C25094 + C25095) * C154130) *
               C154167 -
           (C24190 * C154130 + (C24180 + C24179 + C24178) * C154159 +
            (C24177 + C24176 + C24175) * C154178) *
               C154166 -
           (((C134 * C3372 + C3403 + C3403 + C153882 * C3380) * C154143 +
             C11810 * C24169 + C639 * C24168) *
                C154130 +
            (C24650 + C24649 + C24648) * C154159 +
            (C24647 + C24646 + C24645) * C154178) *
               C2574) *
              C153767 * C153754)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C28090 +
            C3138 * C28091 + C3139 * C28092 + C3142 * C28093 + C4591 * C28094) *
               C153712 * C154166 -
           (C28789 * C28094 + C5574 * C28093 + C4205 * C28092 + C4206 * C28091 +
            (C134 * C556 + C601 + C601 + C153882 * C580) * C28090) *
               C153712 * C154167 +
           ((C134 * C557 + C602 + C602 + C153882 * C581) * C28090 +
            C4830 * C28091 + C4831 * C28092 + C29138 * C28093 +
            C29139 * C28094) *
               C153712 * C2574) *
              C153767 * C154085 +
          ((C636 * C28090 + C1122 * C28091 + C3417 * C28092 + C4207 * C28093 +
            C28790 * C28094) *
               C153712 * C154167 -
           (C3143 * C28094 + C3141 * C28093 + C416 * C28092 + C415 * C28091 +
            C193 * C28090) *
               C153712 * C154166 -
           ((C134 * C28359 + C28366 + C28366 + C153882 * C28363) * C28094 +
            (C134 * C4810 + C4824 + C4824 + C153882 * C4816) * C28093 +
            C3419 * C28092 + C3418 * C28091 + C637 * C28090) *
               C153712 * C2574) *
              C153767 * C153754)) /
            (p * q * std::sqrt(p + q));
    d2ee[374] +=
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C153865 * C123 +
            C199 * C124 + C200 * C125 + C201 * C126 + C202 * C127) *
               C2058 -
           (C641 * C127 + C642 * C126 + C643 * C125 + C644 * C124 +
            (C134 * C556 + C601 + C601 + C153882 * C580) * C153865 * C123) *
               C153847) *
              C153767 * C1253 +
          ((C644 * C123 + C643 * C124 + C642 * C125 + C641 * C126 +
            C919 * C127) *
               C153847 -
           (C203 * C127 + C202 * C126 + C201 * C125 + C200 * C124 +
            C199 * C123) *
               C2058) *
              C153767 * C1254 +
          ((C200 * C123 + C201 * C124 + C202 * C125 + C203 * C126 +
            C204 * C127) *
               C2058 -
           ((C134 * C909 + C915 + C915 + C153882 * C911) * C153865 * C127 +
            C919 * C126 + C641 * C125 + C642 * C124 + C643 * C123) *
               C153847) *
              C153767 * C1255)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C153865 * C123 +
            C199 * C124 + C200 * C125 + C201 * C126 + C202 * C127) *
               C2058 -
           (C641 * C127 + C642 * C126 + C643 * C125 + C644 * C124 +
            (C134 * C556 + C601 + C601 + C153882 * C580) * C153865 * C123) *
               C153847) *
              C326 +
          (((C134 * C1081 + C1100 + C1100 + C153882 * C1093) * C153865 * C123 +
            C1126 * C124 + C1127 * C125 + C1128 * C126 + C1129 * C127) *
               C153847 -
           (C420 * C127 + C421 * C126 + C422 * C125 + C423 * C124 +
            (C134 * C335 + C380 + C380 + C153882 * C359) * C153865 * C123) *
               C2058) *
              C327 +
          (((C134 * C336 + C381 + C381 + C153882 * C360) * C153865 * C123 +
            C424 * C124 + C425 * C125 + C426 * C126 + C427 * C127) *
               C2058 -
           ((C134 * C1916 + C1932 + C1932 + C153882 * C1926) * C153865 * C127 +
            (C134 * C1917 + C1933 + C1933 + C153882 * C1927) * C153865 * C126 +
            (C134 * C1918 + C1934 + C1934 + C153882 * C1928) * C153865 * C125 +
            (C134 * C1919 + C1935 + C1935 + C153882 * C1929) * C153865 * C124 +
            (C134 * C1920 + C1936 + C1936 + C153882 * C1930) * C153865 * C123) *
               C153847) *
              C328) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C154181 +
             C3138 * C154169 + C3139 * C154143) *
                C2846 +
            (C2850 + C2851 + C2852) * C2847 + C2864 * C154130) *
               C2058 -
           (C3874 * C154130 + (C3423 + C3388 + C3389) * C2847 +
            (C4205 * C154143 + C4206 * C154169 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C154181) *
                C2846) *
               C153847) *
              C153767 * C1253 +
          (((C3389 + C3388 + C3423) * C2846 + (C3385 + C3384 + C3422) * C2847 +
            (C3870 + C3871 + C3878) * C154130) *
               C153847 -
           (C2865 * C154130 + (C2855 + C2854 + C2853) * C2847 +
            (C2852 + C2851 + C2850) * C2846) *
               C2058) *
              C153767 * C1254 +
          ((C2864 * C2846 + (C2858 + C2857 + C2856) * C2847 +
            (C2859 + C2860 + C2861) * C154130) *
               C2058 -
           (((C134 * C1916 + C1932 + C1932 + C153882 * C1926) * C154143 +
             C1125 * C154169 + C633 * C154181) *
                C154130 +
            (C3878 + C3871 + C3870) * C2847 + C3874 * C2846) *
               C153847) *
              C153767 * C1255)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C154181 +
             C3138 * C154169 + C3139 * C154143) *
                C2846 +
            (C2850 + C2851 + C2852) * C2847 + C2864 * C154130) *
               C2058 -
           (C3874 * C154130 + (C3423 + C3388 + C3389) * C2847 +
            (C4205 * C154143 + C4206 * C154169 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C154181) *
                C2846) *
               C153847) *
              C326 +
          (((C4206 * C154181 + C4205 * C154169 + C5574 * C154143) * C2846 +
            (C4186 + C4187 + C4209) * C2847 +
            (C4191 + C4192 + C4210) * C154130) *
               C153847 -
           (C3650 * C154130 + (C3147 + C3106 + C3107) * C2847 +
            (C3142 * C154143 + C3139 * C154169 + C3138 * C154181) * C2846) *
               C2058) *
              C327 +
          (((C3139 * C154181 + C3142 * C154169 + C4591 * C154143) * C2846 +
            (C3111 + C3148 + C3149) * C2847 +
            (C3115 + C3150 + C3151) * C154130) *
               C2058 -
           (((C134 * C5557 + C5569 + C5569 + C153882 * C5563) * C154143 +
             C4208 * C154169 + C3416 * C154181) *
                C154130 +
            ((C134 * C5558 + C5570 + C5570 + C153882 * C5564) * C154143 +
             C4207 * C154169 + C3417 * C154181) *
                C2847 +
            ((C134 * C5559 + C5571 + C5571 + C153882 * C5565) * C154143 +
             C5574 * C154169 + C4205 * C154181) *
                C2846) *
               C153847) *
              C328) *
         C153748) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C24168 +
             C3138 * C24169 + C3139 * C154143) *
                C154178 +
            (C24175 + C24176 + C24177) * C154159 + C24189 * C154130) *
               C2058 -
           (C25096 * C154130 + (C24642 + C24643 + C24644) * C154159 +
            (C4205 * C154143 + C4206 * C24169 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C24168) *
                C154178) *
               C153847) *
              C153767 * C1253 +
          (((C24644 + C24643 + C24642) * C154178 +
            (C24641 + C24640 + C24639) * C154159 +
            (C25093 + C25094 + C25095) * C154130) *
               C153847 -
           (C24190 * C154130 + (C24180 + C24179 + C24178) * C154159 +
            (C24177 + C24176 + C24175) * C154178) *
               C2058) *
              C153767 * C1254 +
          ((C24189 * C154178 + (C24183 + C24182 + C24181) * C154159 +
            (C24184 + C24185 + C24186) * C154130) *
               C2058 -
           (((C134 * C1916 + C1932 + C1932 + C153882 * C1926) * C154143 +
             C1125 * C24169 + C633 * C24168) *
                C154130 +
            (C25095 + C25094 + C25093) * C154159 + C25096 * C154178) *
               C153847) *
              C153767 * C1255)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C153882 * C152) * C24168 +
             C3138 * C24169 + C3139 * C154143) *
                C154178 +
            (C24175 + C24176 + C24177) * C154159 + C24189 * C154130) *
               C2058 -
           (C25096 * C154130 + (C24642 + C24643 + C24644) * C154159 +
            (C4205 * C154143 + C4206 * C24169 +
             (C134 * C556 + C601 + C601 + C153882 * C580) * C24168) *
                C154178) *
               C153847) *
              C326 +
          (((C4206 * C24168 + C4205 * C24169 + C5574 * C154143) * C154178 +
            (C25387 + C25388 + C25389) * C154159 +
            (C25390 + C25391 + C25392) * C154130) *
               C153847 -
           (C24873 * C154130 + (C24412 + C24413 + C24414) * C154159 +
            (C3142 * C154143 + C3139 * C24169 + C3138 * C24168) * C154178) *
               C2058) *
              C327 +
          (((C3139 * C24168 + C3142 * C24169 + C4591 * C154143) * C154178 +
            (C24415 + C24416 + C24417) * C154159 +
            (C24418 + C24419 + C24420) * C154130) *
               C2058 -
           (((C134 * C5557 + C5569 + C5569 + C153882 * C5563) * C154143 +
             C4208 * C24169 + C3416 * C24168) *
                C154130 +
            ((C134 * C5558 + C5570 + C5570 + C153882 * C5564) * C154143 +
             C4207 * C24169 + C3417 * C24168) *
                C154159 +
            ((C134 * C5559 + C5571 + C5571 + C153882 * C5565) * C154143 +
             C5574 * C24169 + C4205 * C24168) *
                C154178) *
               C153847) *
              C328) *
         C153748) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C28090 +
            C3138 * C28091 + C3139 * C28092 + C3142 * C28093 + C4591 * C28094) *
               C153712 * C2058 -
           (C28789 * C28094 + C5574 * C28093 + C4205 * C28092 + C4206 * C28091 +
            (C134 * C556 + C601 + C601 + C153882 * C580) * C28090) *
               C153712 * C153847) *
              C153767 * C1253 +
          ((C636 * C28090 + C1122 * C28091 + C3417 * C28092 + C4207 * C28093 +
            C28790 * C28094) *
               C153712 * C153847 -
           (C3143 * C28094 + C3141 * C28093 + C416 * C28092 + C415 * C28091 +
            C193 * C28090) *
               C153712 * C2058) *
              C153767 * C1254 +
          ((C194 * C28090 + C414 * C28091 + C417 * C28092 + C3140 * C28093 +
            C3144 * C28094) *
               C153712 * C2058 -
           ((C134 * C5557 + C5569 + C5569 + C153882 * C5563) * C28094 +
            C4208 * C28093 + C3416 * C28092 + C1123 * C28091 + C635 * C28090) *
               C153712 * C153847) *
              C153767 * C1255)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C153882 * C152) * C28090 +
            C3138 * C28091 + C3139 * C28092 + C3142 * C28093 + C4591 * C28094) *
               C153712 * C2058 -
           (C28789 * C28094 + C5574 * C28093 + C4205 * C28092 + C4206 * C28091 +
            (C134 * C556 + C601 + C601 + C153882 * C580) * C28090) *
               C153712 * C153847) *
              C326 +
          ((C4206 * C28090 + C4205 * C28091 + C5574 * C28092 + C28789 * C28093 +
            C29554 * C28094) *
               C153712 * C153847 -
           (C28235 * C28094 + C4591 * C28093 + C3142 * C28092 + C3139 * C28091 +
            C3138 * C28090) *
               C153712 * C2058) *
              C327 +
          ((C3139 * C28090 + C3142 * C28091 + C4591 * C28092 + C28235 * C28093 +
            C29003 * C28094) *
               C153712 * C2058 -
           ((C134 * C29545 + C29551 + C29551 + C153882 * C29547) * C28094 +
            C29554 * C28093 + C28789 * C28092 + C5574 * C28091 +
            C4205 * C28090) *
               C153712 * C153847) *
              C328) *
         C153748) /
            (p * q * std::sqrt(p + q));
}
